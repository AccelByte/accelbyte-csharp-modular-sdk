// Copyright (c) 2022-2023 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// This code is generated by tool. DO NOT EDIT.
using System;
using System.Collections.Generic;
using System.Text;
using System.IO;

using AccelByte.Sdk.Core;

using AccelByte.Sdk.Api.Platform.Model;
using AccelByte.Sdk.Api.Platform.Operation;

namespace AccelByte.Sdk.Api.Platform.Wrapper
{
    public class KeyGroup
    {
        private readonly IAccelByteSdk _sdk;

        public KeyGroup(IAccelByteSdk sdk)
        {
            _sdk = sdk;
        }

        #region Operation Builders
        public QueryKeyGroups.QueryKeyGroupsBuilder QueryKeyGroupsOp
        {
            get { return new Operation.QueryKeyGroups.QueryKeyGroupsBuilder(_sdk); }
        }
        public CreateKeyGroup.CreateKeyGroupBuilder CreateKeyGroupOp
        {
            get { return new Operation.CreateKeyGroup.CreateKeyGroupBuilder(_sdk); }
        }
        [Obsolete(DiagnosticId ="ab_deprecated_operation_wrapper")]
        public GetKeyGroupByBoothName.GetKeyGroupByBoothNameBuilder GetKeyGroupByBoothNameOp
        {
            get { return new Operation.GetKeyGroupByBoothName.GetKeyGroupByBoothNameBuilder(_sdk); }
        }
        public GetKeyGroup.GetKeyGroupBuilder GetKeyGroupOp
        {
            get { return new Operation.GetKeyGroup.GetKeyGroupBuilder(_sdk); }
        }
        public UpdateKeyGroup.UpdateKeyGroupBuilder UpdateKeyGroupOp
        {
            get { return new Operation.UpdateKeyGroup.UpdateKeyGroupBuilder(_sdk); }
        }
        public GetKeyGroupDynamic.GetKeyGroupDynamicBuilder GetKeyGroupDynamicOp
        {
            get { return new Operation.GetKeyGroupDynamic.GetKeyGroupDynamicBuilder(_sdk); }
        }
        public ListKeys.ListKeysBuilder ListKeysOp
        {
            get { return new Operation.ListKeys.ListKeysBuilder(_sdk); }
        }
        public UploadKeys.UploadKeysBuilder UploadKeysOp
        {
            get { return new Operation.UploadKeys.UploadKeysBuilder(_sdk); }
        }
        #endregion
        
        public Model.KeyGroupPagingSlicedResult? QueryKeyGroups(QueryKeyGroups input)
        {
            var response = _sdk.RunRequest(input);

            return input.ParseResponse(
                    response.Code, 
                    response.ContentType,
                    response.Payload);
        }
        public Model.KeyGroupInfo? CreateKeyGroup(CreateKeyGroup input)
        {
            var response = _sdk.RunRequest(input);

            return input.ParseResponse(
                    response.Code, 
                    response.ContentType,
                    response.Payload);
        }
        #pragma warning disable ab_deprecated_operation
        [Obsolete(DiagnosticId ="ab_deprecated_operation_wrapper")]
        public Model.KeyGroupInfo? GetKeyGroupByBoothName(GetKeyGroupByBoothName input)
        {
            var response = _sdk.RunRequest(input);

            return input.ParseResponse(
                    response.Code, 
                    response.ContentType,
                    response.Payload);
        }
        #pragma warning restore ab_deprecated_operation
        public Model.KeyGroupInfo? GetKeyGroup(GetKeyGroup input)
        {
            var response = _sdk.RunRequest(input);

            return input.ParseResponse(
                    response.Code, 
                    response.ContentType,
                    response.Payload);
        }
        public Model.KeyGroupInfo? UpdateKeyGroup(UpdateKeyGroup input)
        {
            var response = _sdk.RunRequest(input);

            return input.ParseResponse(
                    response.Code, 
                    response.ContentType,
                    response.Payload);
        }
        public Model.KeyGroupDynamicInfo? GetKeyGroupDynamic(GetKeyGroupDynamic input)
        {
            var response = _sdk.RunRequest(input);

            return input.ParseResponse(
                    response.Code, 
                    response.ContentType,
                    response.Payload);
        }
        public Model.KeyPagingSliceResult? ListKeys(ListKeys input)
        {
            var response = _sdk.RunRequest(input);

            return input.ParseResponse(
                    response.Code, 
                    response.ContentType,
                    response.Payload);
        }
        public Model.BulkOperationResult? UploadKeys(UploadKeys input)
        {
            var response = _sdk.RunRequest(input);

            return input.ParseResponse(
                    response.Code, 
                    response.ContentType,
                    response.Payload);
        }
    }
}