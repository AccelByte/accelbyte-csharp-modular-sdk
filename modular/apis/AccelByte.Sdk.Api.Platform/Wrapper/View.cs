// Copyright (c) 2022-2023 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// This code is generated by tool. DO NOT EDIT.
using System;
using System.Collections.Generic;
using System.Text;
using System.IO;

using AccelByte.Sdk.Core;

using AccelByte.Sdk.Api.Platform.Model;
using AccelByte.Sdk.Api.Platform.Operation;

namespace AccelByte.Sdk.Api.Platform.Wrapper
{
    public class View
    {
        private readonly IAccelByteSdk _sdk;

        public View(IAccelByteSdk sdk)
        {
            _sdk = sdk;
        }

        #region Operation Builders
        public ListViews.ListViewsBuilder ListViewsOp
        {
            get { return new Operation.ListViews.ListViewsBuilder(_sdk); }
        }
        public CreateView.CreateViewBuilder CreateViewOp
        {
            get { return new Operation.CreateView.CreateViewBuilder(_sdk); }
        }
        public GetView.GetViewBuilder GetViewOp
        {
            get { return new Operation.GetView.GetViewBuilder(_sdk); }
        }
        public UpdateView.UpdateViewBuilder UpdateViewOp
        {
            get { return new Operation.UpdateView.UpdateViewBuilder(_sdk); }
        }
        public DeleteView.DeleteViewBuilder DeleteViewOp
        {
            get { return new Operation.DeleteView.DeleteViewBuilder(_sdk); }
        }
        public PublicListViews.PublicListViewsBuilder PublicListViewsOp
        {
            get { return new Operation.PublicListViews.PublicListViewsBuilder(_sdk); }
        }
        #endregion
        
        public List<Model.ListViewInfo>? ListViews(ListViews input)
        {
            var response = _sdk.RunRequest(input);

            return input.ParseResponse(
                    response.Code, 
                    response.ContentType,
                    response.Payload);
        }
        public Model.FullViewInfo? CreateView(CreateView input)
        {
            var response = _sdk.RunRequest(input);

            return input.ParseResponse(
                    response.Code, 
                    response.ContentType,
                    response.Payload);
        }
        public Model.FullViewInfo? GetView(GetView input)
        {
            var response = _sdk.RunRequest(input);

            return input.ParseResponse(
                    response.Code, 
                    response.ContentType,
                    response.Payload);
        }
        public Model.FullViewInfo? UpdateView(UpdateView input)
        {
            var response = _sdk.RunRequest(input);

            return input.ParseResponse(
                    response.Code, 
                    response.ContentType,
                    response.Payload);
        }
        public void DeleteView(DeleteView input) {
            var response = _sdk.RunRequest(input);

            input.ParseResponse(
                    response.Code, 
                    response.ContentType,
                    response.Payload);
        }
        public List<Model.ViewInfo>? PublicListViews(PublicListViews input)
        {
            var response = _sdk.RunRequest(input);

            return input.ParseResponse(
                    response.Code, 
                    response.ContentType,
                    response.Payload);
        }
        
        public List<Model.ViewInfo<T1>>? PublicListViews<T1>(PublicListViews input)
        {
            var response = _sdk.RunRequest(input);

            return input.ParseResponse<T1>(
                    response.Code, 
                    response.ContentType,
                    response.Payload);
        }
    }
}