// Copyright (c) 2022-2023 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// This code is generated by tool. DO NOT EDIT.
using System;
using System.Collections.Generic;
using System.Text;
using System.IO;

using AccelByte.Sdk.Core;

using AccelByte.Sdk.Api.Match2.Model;
using AccelByte.Sdk.Api.Match2.Operation;

namespace AccelByte.Sdk.Api.Match2.Wrapper
{
    public class MatchTickets
    {
        private readonly IAccelByteSdk _sdk;

        public MatchTickets(IAccelByteSdk sdk)
        {
            _sdk = sdk;
        }

        #region Operation Builders
        public CreateMatchTicket.CreateMatchTicketBuilder CreateMatchTicketOp
        {
            get { return new Operation.CreateMatchTicket.CreateMatchTicketBuilder(_sdk); }
        }
        public MatchTicketDetails.MatchTicketDetailsBuilder MatchTicketDetailsOp
        {
            get { return new Operation.MatchTicketDetails.MatchTicketDetailsBuilder(_sdk); }
        }
        public DeleteMatchTicket.DeleteMatchTicketBuilder DeleteMatchTicketOp
        {
            get { return new Operation.DeleteMatchTicket.DeleteMatchTicketBuilder(_sdk); }
        }
        #endregion
        
        public Model.ApiMatchTicketResponse? CreateMatchTicket(CreateMatchTicket input)
        {
            var response = _sdk.RunRequest(input);

            return input.ParseResponse(
                    response.Code, 
                    response.ContentType,
                    response.Payload);
        }
        public Model.ApiMatchTicketStatus? MatchTicketDetails(MatchTicketDetails input)
        {
            var response = _sdk.RunRequest(input);

            return input.ParseResponse(
                    response.Code, 
                    response.ContentType,
                    response.Payload);
        }
        public void DeleteMatchTicket(DeleteMatchTicket input) {
            var response = _sdk.RunRequest(input);

            input.ParseResponse(
                    response.Code, 
                    response.ContentType,
                    response.Payload);
        }
    }
}