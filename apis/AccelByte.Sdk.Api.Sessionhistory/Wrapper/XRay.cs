// Copyright (c) 2022-2024 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// This code is generated by tool. DO NOT EDIT.
using System;
using System.Collections.Generic;
using System.Text;
using System.IO;
using System.Threading.Tasks;

using AccelByte.Sdk.Core;

using AccelByte.Sdk.Api.Sessionhistory.Model;
using AccelByte.Sdk.Api.Sessionhistory.Operation;

namespace AccelByte.Sdk.Api.Sessionhistory.Wrapper
{
    public class XRay
    {
        private readonly IAccelByteSdk _sdk;

        public XRay(IAccelByteSdk sdk)
        {
            _sdk = sdk;
        }

        #region Operation Builders
        public QueryXrayMatchPool.QueryXrayMatchPoolBuilder QueryXrayMatchPoolOp
        {
            get { return new Operation.QueryXrayMatchPool.QueryXrayMatchPoolBuilder(_sdk); }
        }
        public QueryDetailTickMatchPool.QueryDetailTickMatchPoolBuilder QueryDetailTickMatchPoolOp
        {
            get { return new Operation.QueryDetailTickMatchPool.QueryDetailTickMatchPoolBuilder(_sdk); }
        }
        public QueryDetailTickMatchPoolMatches.QueryDetailTickMatchPoolMatchesBuilder QueryDetailTickMatchPoolMatchesOp
        {
            get { return new Operation.QueryDetailTickMatchPoolMatches.QueryDetailTickMatchPoolMatchesBuilder(_sdk); }
        }
        public QueryDetailTickMatchPoolTicket.QueryDetailTickMatchPoolTicketBuilder QueryDetailTickMatchPoolTicketOp
        {
            get { return new Operation.QueryDetailTickMatchPoolTicket.QueryDetailTickMatchPoolTicketBuilder(_sdk); }
        }
        public QueryMatchHistories.QueryMatchHistoriesBuilder QueryMatchHistoriesOp
        {
            get { return new Operation.QueryMatchHistories.QueryMatchHistoriesBuilder(_sdk); }
        }
        public QueryMatchTicketHistories.QueryMatchTicketHistoriesBuilder QueryMatchTicketHistoriesOp
        {
            get { return new Operation.QueryMatchTicketHistories.QueryMatchTicketHistoriesBuilder(_sdk); }
        }
        public QueryXrayMatch.QueryXrayMatchBuilder QueryXrayMatchOp
        {
            get { return new Operation.QueryXrayMatch.QueryXrayMatchBuilder(_sdk); }
        }
        public QueryAcquiringDS.QueryAcquiringDSBuilder QueryAcquiringDSOp
        {
            get { return new Operation.QueryAcquiringDS.QueryAcquiringDSBuilder(_sdk); }
        }
        public QueryAcquiringDSWaitTimeAvg.QueryAcquiringDSWaitTimeAvgBuilder QueryAcquiringDSWaitTimeAvgOp
        {
            get { return new Operation.QueryAcquiringDSWaitTimeAvg.QueryAcquiringDSWaitTimeAvgBuilder(_sdk); }
        }
        public QueryMatchLengthDurationpAvg.QueryMatchLengthDurationpAvgBuilder QueryMatchLengthDurationpAvgOp
        {
            get { return new Operation.QueryMatchLengthDurationpAvg.QueryMatchLengthDurationpAvgBuilder(_sdk); }
        }
        public QueryMatchLengthDurationp99.QueryMatchLengthDurationp99Builder QueryMatchLengthDurationp99Op
        {
            get { return new Operation.QueryMatchLengthDurationp99.QueryMatchLengthDurationp99Builder(_sdk); }
        }
        public QueryTotalActiveSession.QueryTotalActiveSessionBuilder QueryTotalActiveSessionOp
        {
            get { return new Operation.QueryTotalActiveSession.QueryTotalActiveSessionBuilder(_sdk); }
        }
        public QueryTotalMatchmakingMatch.QueryTotalMatchmakingMatchBuilder QueryTotalMatchmakingMatchOp
        {
            get { return new Operation.QueryTotalMatchmakingMatch.QueryTotalMatchmakingMatchBuilder(_sdk); }
        }
        public QueryTotalPlayerPersession.QueryTotalPlayerPersessionBuilder QueryTotalPlayerPersessionOp
        {
            get { return new Operation.QueryTotalPlayerPersession.QueryTotalPlayerPersessionBuilder(_sdk); }
        }
        public QueryTotalMatchmakingCanceled.QueryTotalMatchmakingCanceledBuilder QueryTotalMatchmakingCanceledOp
        {
            get { return new Operation.QueryTotalMatchmakingCanceled.QueryTotalMatchmakingCanceledBuilder(_sdk); }
        }
        public QueryTotalMatchmakingCreated.QueryTotalMatchmakingCreatedBuilder QueryTotalMatchmakingCreatedOp
        {
            get { return new Operation.QueryTotalMatchmakingCreated.QueryTotalMatchmakingCreatedBuilder(_sdk); }
        }
        public QueryTotalMatchmakingExpired.QueryTotalMatchmakingExpiredBuilder QueryTotalMatchmakingExpiredOp
        {
            get { return new Operation.QueryTotalMatchmakingExpired.QueryTotalMatchmakingExpiredBuilder(_sdk); }
        }
        public QueryTotalMatchmakingMatchTicket.QueryTotalMatchmakingMatchTicketBuilder QueryTotalMatchmakingMatchTicketOp
        {
            get { return new Operation.QueryTotalMatchmakingMatchTicket.QueryTotalMatchmakingMatchTicketBuilder(_sdk); }
        }
        public QueryXrayTimelineByTicketID.QueryXrayTimelineByTicketIDBuilder QueryXrayTimelineByTicketIDOp
        {
            get { return new Operation.QueryXrayTimelineByTicketID.QueryXrayTimelineByTicketIDBuilder(_sdk); }
        }
        public QueryXrayTimelineByUserID.QueryXrayTimelineByUserIDBuilder QueryXrayTimelineByUserIDOp
        {
            get { return new Operation.QueryXrayTimelineByUserID.QueryXrayTimelineByUserIDBuilder(_sdk); }
        }
        #endregion

        public Model.ApimodelsXRayMatchPoolQueryResponse? QueryXrayMatchPool(QueryXrayMatchPool input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.ApimodelsXRayMatchPoolQueryResponse?> QueryXrayMatchPoolAsync(QueryXrayMatchPool input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.ApimodelsXRayMatchPoolPodTickQueryResponse? QueryDetailTickMatchPool(QueryDetailTickMatchPool input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.ApimodelsXRayMatchPoolPodTickQueryResponse?> QueryDetailTickMatchPoolAsync(QueryDetailTickMatchPool input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.ApimodelsXRayMatchPoolPodTickMatchResponse? QueryDetailTickMatchPoolMatches(QueryDetailTickMatchPoolMatches input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.ApimodelsXRayMatchPoolPodTickMatchResponse?> QueryDetailTickMatchPoolMatchesAsync(QueryDetailTickMatchPoolMatches input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.ApimodelsXRayMatchPoolPodTickTicketResponse? QueryDetailTickMatchPoolTicket(QueryDetailTickMatchPoolTicket input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.ApimodelsXRayMatchPoolPodTickTicketResponse?> QueryDetailTickMatchPoolTicketAsync(QueryDetailTickMatchPoolTicket input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.ApimodelsXRayMatchHistorQueryResponse? QueryMatchHistories(QueryMatchHistories input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.ApimodelsXRayMatchHistorQueryResponse?> QueryMatchHistoriesAsync(QueryMatchHistories input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.ApimodelsXRayMatchTicketHistoryQueryResponse? QueryMatchTicketHistories(QueryMatchTicketHistories input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.ApimodelsXRayMatchTicketHistoryQueryResponse?> QueryMatchTicketHistoriesAsync(QueryMatchTicketHistories input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.ApimodelsXRayMatchesQueryResponse? QueryXrayMatch(QueryXrayMatch input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.ApimodelsXRayMatchesQueryResponse?> QueryXrayMatchAsync(QueryXrayMatch input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.ApimodelsXRayAcquiringDsQueryResponse? QueryAcquiringDS(QueryAcquiringDS input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.ApimodelsXRayAcquiringDsQueryResponse?> QueryAcquiringDSAsync(QueryAcquiringDS input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.ApimodelsXRayAcquiringDsWaitTimeQueryResponse? QueryAcquiringDSWaitTimeAvg(QueryAcquiringDSWaitTimeAvg input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.ApimodelsXRayAcquiringDsWaitTimeQueryResponse?> QueryAcquiringDSWaitTimeAvgAsync(QueryAcquiringDSWaitTimeAvg input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.ApimodelsXRayMatchLengthDurationQueryResponse? QueryMatchLengthDurationpAvg(QueryMatchLengthDurationpAvg input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.ApimodelsXRayMatchLengthDurationQueryResponse?> QueryMatchLengthDurationpAvgAsync(QueryMatchLengthDurationpAvg input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.ApimodelsXRayMatchLengthDurationQueryResponse? QueryMatchLengthDurationp99(QueryMatchLengthDurationp99 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.ApimodelsXRayMatchLengthDurationQueryResponse?> QueryMatchLengthDurationp99Async(QueryMatchLengthDurationp99 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.ApimodelsXRayTotalActiveSessionQueryResponse? QueryTotalActiveSession(QueryTotalActiveSession input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.ApimodelsXRayTotalActiveSessionQueryResponse?> QueryTotalActiveSessionAsync(QueryTotalActiveSession input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.ApimodelsXRayMatchMatchmakingQueryResponse? QueryTotalMatchmakingMatch(QueryTotalMatchmakingMatch input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.ApimodelsXRayMatchMatchmakingQueryResponse?> QueryTotalMatchmakingMatchAsync(QueryTotalMatchmakingMatch input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.ApimodelsXRayTotalPlayerPersessionAVGQueryResponse? QueryTotalPlayerPersession(QueryTotalPlayerPersession input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.ApimodelsXRayTotalPlayerPersessionAVGQueryResponse?> QueryTotalPlayerPersessionAsync(QueryTotalPlayerPersession input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.ApimodelsXRayCanceledMatchmakingTicketQueryResponse? QueryTotalMatchmakingCanceled(QueryTotalMatchmakingCanceled input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.ApimodelsXRayCanceledMatchmakingTicketQueryResponse?> QueryTotalMatchmakingCanceledAsync(QueryTotalMatchmakingCanceled input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.ApimodelsXRayCreatedMatchmakingTicketQueryResponse? QueryTotalMatchmakingCreated(QueryTotalMatchmakingCreated input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.ApimodelsXRayCreatedMatchmakingTicketQueryResponse?> QueryTotalMatchmakingCreatedAsync(QueryTotalMatchmakingCreated input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.ApimodelsXRayExpiredMatchmakingTicketQueryResponse? QueryTotalMatchmakingExpired(QueryTotalMatchmakingExpired input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.ApimodelsXRayExpiredMatchmakingTicketQueryResponse?> QueryTotalMatchmakingExpiredAsync(QueryTotalMatchmakingExpired input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.ApimodelsXRayMatchMatchmakingTicketQueryResponse? QueryTotalMatchmakingMatchTicket(QueryTotalMatchmakingMatchTicket input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.ApimodelsXRayMatchMatchmakingTicketQueryResponse?> QueryTotalMatchmakingMatchTicketAsync(QueryTotalMatchmakingMatchTicket input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.ApimodelsXRayTicketQueryResponse? QueryXrayTimelineByTicketID(QueryXrayTimelineByTicketID input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.ApimodelsXRayTicketQueryResponse?> QueryXrayTimelineByTicketIDAsync(QueryXrayTimelineByTicketID input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.ApimodelsXRayTicketQueryResponse? QueryXrayTimelineByUserID(QueryXrayTimelineByUserID input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.ApimodelsXRayTicketQueryResponse?> QueryXrayTimelineByUserIDAsync(QueryXrayTimelineByUserID input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
    }
}