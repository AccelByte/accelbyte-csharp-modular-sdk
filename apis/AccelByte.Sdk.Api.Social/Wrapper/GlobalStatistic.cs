// Copyright (c) 2022-2024 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// This code is generated by tool. DO NOT EDIT.
using System;
using System.Collections.Generic;
using System.Text;
using System.IO;
using System.Threading.Tasks;

using AccelByte.Sdk.Core;

using AccelByte.Sdk.Api.Social.Model;
using AccelByte.Sdk.Api.Social.Operation;

namespace AccelByte.Sdk.Api.Social.Wrapper
{
    public class GlobalStatistic
    {
        private readonly IAccelByteSdk _sdk;

        private string _CustomBasePath = String.Empty;

        public GlobalStatistic(IAccelByteSdk sdk)
        {
            _sdk = sdk;
        }

        public GlobalStatistic(IAccelByteSdk sdk, string customBasePath)
        {
            _sdk = sdk;
            _CustomBasePath = customBasePath;
        }

        #region Operation Builders
        public GetGlobalStatItems.GetGlobalStatItemsBuilder GetGlobalStatItemsOp
        {
            get
            {
                var opBuilder = new Operation.GetGlobalStatItems.GetGlobalStatItemsBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public GetGlobalStatItemByStatCode.GetGlobalStatItemByStatCodeBuilder GetGlobalStatItemByStatCodeOp
        {
            get
            {
                var opBuilder = new Operation.GetGlobalStatItemByStatCode.GetGlobalStatItemByStatCodeBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public GetGlobalStatItems1.GetGlobalStatItems1Builder GetGlobalStatItems1Op
        {
            get
            {
                var opBuilder = new Operation.GetGlobalStatItems1.GetGlobalStatItems1Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public GetGlobalStatItemByStatCode1.GetGlobalStatItemByStatCode1Builder GetGlobalStatItemByStatCode1Op
        {
            get
            {
                var opBuilder = new Operation.GetGlobalStatItemByStatCode1.GetGlobalStatItemByStatCode1Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        #endregion

        public GetGlobalStatItems.Response GetGlobalStatItems(GetGlobalStatItems input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<GetGlobalStatItems.Response> GetGlobalStatItemsAsync(GetGlobalStatItems input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public GetGlobalStatItemByStatCode.Response GetGlobalStatItemByStatCode(GetGlobalStatItemByStatCode input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<GetGlobalStatItemByStatCode.Response> GetGlobalStatItemByStatCodeAsync(GetGlobalStatItemByStatCode input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public GetGlobalStatItems1.Response GetGlobalStatItems1(GetGlobalStatItems1 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<GetGlobalStatItems1.Response> GetGlobalStatItems1Async(GetGlobalStatItems1 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public GetGlobalStatItemByStatCode1.Response GetGlobalStatItemByStatCode1(GetGlobalStatItemByStatCode1 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<GetGlobalStatItemByStatCode1.Response> GetGlobalStatItemByStatCode1Async(GetGlobalStatItemByStatCode1 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
    }
}