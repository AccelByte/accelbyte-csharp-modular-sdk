// Copyright (c) 2022-2024 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// This code is generated by tool. DO NOT EDIT.
using System;
using System.Collections.Generic;
using System.Text;
using System.IO;
using System.Threading.Tasks;

using AccelByte.Sdk.Core;

using AccelByte.Sdk.Api.Social.Model;
using AccelByte.Sdk.Api.Social.Operation;

namespace AccelByte.Sdk.Api.Social.Wrapper
{
    public class UserStatistic
    {
        private readonly IAccelByteSdk _sdk;

        private string _CustomBasePath = String.Empty;

        public UserStatistic(IAccelByteSdk sdk)
        {
            _sdk = sdk;
        }

        public UserStatistic(IAccelByteSdk sdk, string customBasePath)
        {
            _sdk = sdk;
            _CustomBasePath = customBasePath;
        }

        #region Operation Builders
        public BulkFetchStatItems.BulkFetchStatItemsBuilder BulkFetchStatItemsOp
        {
            get
            {
                var opBuilder = new Operation.BulkFetchStatItems.BulkFetchStatItemsBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public BulkIncUserStatItem.BulkIncUserStatItemBuilder BulkIncUserStatItemOp
        {
            get
            {
                var opBuilder = new Operation.BulkIncUserStatItem.BulkIncUserStatItemBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public BulkIncUserStatItemValue.BulkIncUserStatItemValueBuilder BulkIncUserStatItemValueOp
        {
            get
            {
                var opBuilder = new Operation.BulkIncUserStatItemValue.BulkIncUserStatItemValueBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public BulkFetchOrDefaultStatItems.BulkFetchOrDefaultStatItemsBuilder BulkFetchOrDefaultStatItemsOp
        {
            get
            {
                var opBuilder = new Operation.BulkFetchOrDefaultStatItems.BulkFetchOrDefaultStatItemsBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public BulkResetUserStatItem.BulkResetUserStatItemBuilder BulkResetUserStatItemOp
        {
            get
            {
                var opBuilder = new Operation.BulkResetUserStatItem.BulkResetUserStatItemBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public GetStatItems.GetStatItemsBuilder GetStatItemsOp
        {
            get
            {
                var opBuilder = new Operation.GetStatItems.GetStatItemsBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public GetUserStatItems.GetUserStatItemsBuilder GetUserStatItemsOp
        {
            get
            {
                var opBuilder = new Operation.GetUserStatItems.GetUserStatItemsBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public BulkCreateUserStatItems.BulkCreateUserStatItemsBuilder BulkCreateUserStatItemsOp
        {
            get
            {
                var opBuilder = new Operation.BulkCreateUserStatItems.BulkCreateUserStatItemsBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public BulkIncUserStatItem1.BulkIncUserStatItem1Builder BulkIncUserStatItem1Op
        {
            get
            {
                var opBuilder = new Operation.BulkIncUserStatItem1.BulkIncUserStatItem1Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public BulkIncUserStatItemValue1.BulkIncUserStatItemValue1Builder BulkIncUserStatItemValue1Op
        {
            get
            {
                var opBuilder = new Operation.BulkIncUserStatItemValue1.BulkIncUserStatItemValue1Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public BulkResetUserStatItem1.BulkResetUserStatItem1Builder BulkResetUserStatItem1Op
        {
            get
            {
                var opBuilder = new Operation.BulkResetUserStatItem1.BulkResetUserStatItem1Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public CreateUserStatItem.CreateUserStatItemBuilder CreateUserStatItemOp
        {
            get
            {
                var opBuilder = new Operation.CreateUserStatItem.CreateUserStatItemBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public DeleteUserStatItems.DeleteUserStatItemsBuilder DeleteUserStatItemsOp
        {
            get
            {
                var opBuilder = new Operation.DeleteUserStatItems.DeleteUserStatItemsBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public IncUserStatItemValue.IncUserStatItemValueBuilder IncUserStatItemValueOp
        {
            get
            {
                var opBuilder = new Operation.IncUserStatItemValue.IncUserStatItemValueBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public ResetUserStatItemValue.ResetUserStatItemValueBuilder ResetUserStatItemValueOp
        {
            get
            {
                var opBuilder = new Operation.ResetUserStatItemValue.ResetUserStatItemValueBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public BulkFetchStatItems1.BulkFetchStatItems1Builder BulkFetchStatItems1Op
        {
            get
            {
                var opBuilder = new Operation.BulkFetchStatItems1.BulkFetchStatItems1Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public PublicBulkIncUserStatItem.PublicBulkIncUserStatItemBuilder PublicBulkIncUserStatItemOp
        {
            get
            {
                var opBuilder = new Operation.PublicBulkIncUserStatItem.PublicBulkIncUserStatItemBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public PublicBulkIncUserStatItemValue.PublicBulkIncUserStatItemValueBuilder PublicBulkIncUserStatItemValueOp
        {
            get
            {
                var opBuilder = new Operation.PublicBulkIncUserStatItemValue.PublicBulkIncUserStatItemValueBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public BulkResetUserStatItem2.BulkResetUserStatItem2Builder BulkResetUserStatItem2Op
        {
            get
            {
                var opBuilder = new Operation.BulkResetUserStatItem2.BulkResetUserStatItem2Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public PublicListMyStatItems.PublicListMyStatItemsBuilder PublicListMyStatItemsOp
        {
            get
            {
                var opBuilder = new Operation.PublicListMyStatItems.PublicListMyStatItemsBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public PublicListAllMyStatItems.PublicListAllMyStatItemsBuilder PublicListAllMyStatItemsOp
        {
            get
            {
                var opBuilder = new Operation.PublicListAllMyStatItems.PublicListAllMyStatItemsBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public PublicQueryUserStatItems1.PublicQueryUserStatItems1Builder PublicQueryUserStatItems1Op
        {
            get
            {
                var opBuilder = new Operation.PublicQueryUserStatItems1.PublicQueryUserStatItems1Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public PublicBulkCreateUserStatItems.PublicBulkCreateUserStatItemsBuilder PublicBulkCreateUserStatItemsOp
        {
            get
            {
                var opBuilder = new Operation.PublicBulkCreateUserStatItems.PublicBulkCreateUserStatItemsBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public PublicQueryUserStatItems.PublicQueryUserStatItemsBuilder PublicQueryUserStatItemsOp
        {
            get
            {
                var opBuilder = new Operation.PublicQueryUserStatItems.PublicQueryUserStatItemsBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public PublicBulkIncUserStatItem1.PublicBulkIncUserStatItem1Builder PublicBulkIncUserStatItem1Op
        {
            get
            {
                var opBuilder = new Operation.PublicBulkIncUserStatItem1.PublicBulkIncUserStatItem1Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public BulkIncUserStatItemValue2.BulkIncUserStatItemValue2Builder BulkIncUserStatItemValue2Op
        {
            get
            {
                var opBuilder = new Operation.BulkIncUserStatItemValue2.BulkIncUserStatItemValue2Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public BulkResetUserStatItem3.BulkResetUserStatItem3Builder BulkResetUserStatItem3Op
        {
            get
            {
                var opBuilder = new Operation.BulkResetUserStatItem3.BulkResetUserStatItem3Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public PublicCreateUserStatItem.PublicCreateUserStatItemBuilder PublicCreateUserStatItemOp
        {
            get
            {
                var opBuilder = new Operation.PublicCreateUserStatItem.PublicCreateUserStatItemBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public DeleteUserStatItems1.DeleteUserStatItems1Builder DeleteUserStatItems1Op
        {
            get
            {
                var opBuilder = new Operation.DeleteUserStatItems1.DeleteUserStatItems1Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public PublicIncUserStatItem.PublicIncUserStatItemBuilder PublicIncUserStatItemOp
        {
            get
            {
                var opBuilder = new Operation.PublicIncUserStatItem.PublicIncUserStatItemBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public PublicIncUserStatItemValue.PublicIncUserStatItemValueBuilder PublicIncUserStatItemValueOp
        {
            get
            {
                var opBuilder = new Operation.PublicIncUserStatItemValue.PublicIncUserStatItemValueBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public ResetUserStatItemValue1.ResetUserStatItemValue1Builder ResetUserStatItemValue1Op
        {
            get
            {
                var opBuilder = new Operation.ResetUserStatItemValue1.ResetUserStatItemValue1Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public BulkUpdateUserStatItemV2.BulkUpdateUserStatItemV2Builder BulkUpdateUserStatItemV2Op
        {
            get
            {
                var opBuilder = new Operation.BulkUpdateUserStatItemV2.BulkUpdateUserStatItemV2Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public BulkFetchOrDefaultStatItems1.BulkFetchOrDefaultStatItems1Builder BulkFetchOrDefaultStatItems1Op
        {
            get
            {
                var opBuilder = new Operation.BulkFetchOrDefaultStatItems1.BulkFetchOrDefaultStatItems1Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public AdminListUsersStatItems.AdminListUsersStatItemsBuilder AdminListUsersStatItemsOp
        {
            get
            {
                var opBuilder = new Operation.AdminListUsersStatItems.AdminListUsersStatItemsBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public BulkUpdateUserStatItem.BulkUpdateUserStatItemBuilder BulkUpdateUserStatItemOp
        {
            get
            {
                var opBuilder = new Operation.BulkUpdateUserStatItem.BulkUpdateUserStatItemBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public BulkGetOrDefaultByUserId.BulkGetOrDefaultByUserIdBuilder BulkGetOrDefaultByUserIdOp
        {
            get
            {
                var opBuilder = new Operation.BulkGetOrDefaultByUserId.BulkGetOrDefaultByUserIdBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public BulkResetUserStatItemValues.BulkResetUserStatItemValuesBuilder BulkResetUserStatItemValuesOp
        {
            get
            {
                var opBuilder = new Operation.BulkResetUserStatItemValues.BulkResetUserStatItemValuesBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public DeleteUserStatItems2.DeleteUserStatItems2Builder DeleteUserStatItems2Op
        {
            get
            {
                var opBuilder = new Operation.DeleteUserStatItems2.DeleteUserStatItems2Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public UpdateUserStatItemValue.UpdateUserStatItemValueBuilder UpdateUserStatItemValueOp
        {
            get
            {
                var opBuilder = new Operation.UpdateUserStatItemValue.UpdateUserStatItemValueBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public BulkUpdateUserStatItem1.BulkUpdateUserStatItem1Builder BulkUpdateUserStatItem1Op
        {
            get
            {
                var opBuilder = new Operation.BulkUpdateUserStatItem1.BulkUpdateUserStatItem1Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public PublicQueryUserStatItems2.PublicQueryUserStatItems2Builder PublicQueryUserStatItems2Op
        {
            get
            {
                var opBuilder = new Operation.PublicQueryUserStatItems2.PublicQueryUserStatItems2Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public BulkUpdateUserStatItem2.BulkUpdateUserStatItem2Builder BulkUpdateUserStatItem2Op
        {
            get
            {
                var opBuilder = new Operation.BulkUpdateUserStatItem2.BulkUpdateUserStatItem2Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public UpdateUserStatItemValue1.UpdateUserStatItemValue1Builder UpdateUserStatItemValue1Op
        {
            get
            {
                var opBuilder = new Operation.UpdateUserStatItemValue1.UpdateUserStatItemValue1Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        #endregion

        public BulkFetchStatItems.Response BulkFetchStatItems(BulkFetchStatItems input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<BulkFetchStatItems.Response> BulkFetchStatItemsAsync(BulkFetchStatItems input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }

        public BulkFetchStatItems.Response<T1> BulkFetchStatItems<T1>(BulkFetchStatItems input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<BulkFetchStatItems.Response<T1>> BulkFetchStatItemsAsync<T1>(BulkFetchStatItems input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public BulkIncUserStatItem.Response BulkIncUserStatItem(BulkIncUserStatItem input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<BulkIncUserStatItem.Response> BulkIncUserStatItemAsync(BulkIncUserStatItem input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }

        public BulkIncUserStatItem.Response<T1> BulkIncUserStatItem<T1>(BulkIncUserStatItem input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<BulkIncUserStatItem.Response<T1>> BulkIncUserStatItemAsync<T1>(BulkIncUserStatItem input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public BulkIncUserStatItemValue.Response BulkIncUserStatItemValue(BulkIncUserStatItemValue input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<BulkIncUserStatItemValue.Response> BulkIncUserStatItemValueAsync(BulkIncUserStatItemValue input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }

        public BulkIncUserStatItemValue.Response<T1> BulkIncUserStatItemValue<T1>(BulkIncUserStatItemValue input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<BulkIncUserStatItemValue.Response<T1>> BulkIncUserStatItemValueAsync<T1>(BulkIncUserStatItemValue input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public BulkFetchOrDefaultStatItems.Response BulkFetchOrDefaultStatItems(BulkFetchOrDefaultStatItems input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<BulkFetchOrDefaultStatItems.Response> BulkFetchOrDefaultStatItemsAsync(BulkFetchOrDefaultStatItems input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public BulkResetUserStatItem.Response BulkResetUserStatItem(BulkResetUserStatItem input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<BulkResetUserStatItem.Response> BulkResetUserStatItemAsync(BulkResetUserStatItem input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }

        public BulkResetUserStatItem.Response<T1> BulkResetUserStatItem<T1>(BulkResetUserStatItem input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<BulkResetUserStatItem.Response<T1>> BulkResetUserStatItemAsync<T1>(BulkResetUserStatItem input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public GetStatItems.Response GetStatItems(GetStatItems input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<GetStatItems.Response> GetStatItemsAsync(GetStatItems input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public GetUserStatItems.Response GetUserStatItems(GetUserStatItems input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<GetUserStatItems.Response> GetUserStatItemsAsync(GetUserStatItems input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public BulkCreateUserStatItems.Response BulkCreateUserStatItems(BulkCreateUserStatItems input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<BulkCreateUserStatItems.Response> BulkCreateUserStatItemsAsync(BulkCreateUserStatItems input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }

        public BulkCreateUserStatItems.Response<T1> BulkCreateUserStatItems<T1>(BulkCreateUserStatItems input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<BulkCreateUserStatItems.Response<T1>> BulkCreateUserStatItemsAsync<T1>(BulkCreateUserStatItems input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public BulkIncUserStatItem1.Response BulkIncUserStatItem1(BulkIncUserStatItem1 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<BulkIncUserStatItem1.Response> BulkIncUserStatItem1Async(BulkIncUserStatItem1 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }

        public BulkIncUserStatItem1.Response<T1> BulkIncUserStatItem1<T1>(BulkIncUserStatItem1 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<BulkIncUserStatItem1.Response<T1>> BulkIncUserStatItem1Async<T1>(BulkIncUserStatItem1 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public BulkIncUserStatItemValue1.Response BulkIncUserStatItemValue1(BulkIncUserStatItemValue1 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<BulkIncUserStatItemValue1.Response> BulkIncUserStatItemValue1Async(BulkIncUserStatItemValue1 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }

        public BulkIncUserStatItemValue1.Response<T1> BulkIncUserStatItemValue1<T1>(BulkIncUserStatItemValue1 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<BulkIncUserStatItemValue1.Response<T1>> BulkIncUserStatItemValue1Async<T1>(BulkIncUserStatItemValue1 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public BulkResetUserStatItem1.Response BulkResetUserStatItem1(BulkResetUserStatItem1 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<BulkResetUserStatItem1.Response> BulkResetUserStatItem1Async(BulkResetUserStatItem1 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }

        public BulkResetUserStatItem1.Response<T1> BulkResetUserStatItem1<T1>(BulkResetUserStatItem1 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<BulkResetUserStatItem1.Response<T1>> BulkResetUserStatItem1Async<T1>(BulkResetUserStatItem1 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public CreateUserStatItem.Response CreateUserStatItem(CreateUserStatItem input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<CreateUserStatItem.Response> CreateUserStatItemAsync(CreateUserStatItem input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public DeleteUserStatItems.Response DeleteUserStatItems(DeleteUserStatItems input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<DeleteUserStatItems.Response> DeleteUserStatItemsAsync(DeleteUserStatItems input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public IncUserStatItemValue.Response IncUserStatItemValue(IncUserStatItemValue input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<IncUserStatItemValue.Response> IncUserStatItemValueAsync(IncUserStatItemValue input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public ResetUserStatItemValue.Response ResetUserStatItemValue(ResetUserStatItemValue input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<ResetUserStatItemValue.Response> ResetUserStatItemValueAsync(ResetUserStatItemValue input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public BulkFetchStatItems1.Response BulkFetchStatItems1(BulkFetchStatItems1 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<BulkFetchStatItems1.Response> BulkFetchStatItems1Async(BulkFetchStatItems1 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }

        public BulkFetchStatItems1.Response<T1> BulkFetchStatItems1<T1>(BulkFetchStatItems1 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<BulkFetchStatItems1.Response<T1>> BulkFetchStatItems1Async<T1>(BulkFetchStatItems1 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public PublicBulkIncUserStatItem.Response PublicBulkIncUserStatItem(PublicBulkIncUserStatItem input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<PublicBulkIncUserStatItem.Response> PublicBulkIncUserStatItemAsync(PublicBulkIncUserStatItem input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }

        public PublicBulkIncUserStatItem.Response<T1> PublicBulkIncUserStatItem<T1>(PublicBulkIncUserStatItem input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<PublicBulkIncUserStatItem.Response<T1>> PublicBulkIncUserStatItemAsync<T1>(PublicBulkIncUserStatItem input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public PublicBulkIncUserStatItemValue.Response PublicBulkIncUserStatItemValue(PublicBulkIncUserStatItemValue input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<PublicBulkIncUserStatItemValue.Response> PublicBulkIncUserStatItemValueAsync(PublicBulkIncUserStatItemValue input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }

        public PublicBulkIncUserStatItemValue.Response<T1> PublicBulkIncUserStatItemValue<T1>(PublicBulkIncUserStatItemValue input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<PublicBulkIncUserStatItemValue.Response<T1>> PublicBulkIncUserStatItemValueAsync<T1>(PublicBulkIncUserStatItemValue input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public BulkResetUserStatItem2.Response BulkResetUserStatItem2(BulkResetUserStatItem2 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<BulkResetUserStatItem2.Response> BulkResetUserStatItem2Async(BulkResetUserStatItem2 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }

        public BulkResetUserStatItem2.Response<T1> BulkResetUserStatItem2<T1>(BulkResetUserStatItem2 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<BulkResetUserStatItem2.Response<T1>> BulkResetUserStatItem2Async<T1>(BulkResetUserStatItem2 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public PublicListMyStatItems.Response PublicListMyStatItems(PublicListMyStatItems input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<PublicListMyStatItems.Response> PublicListMyStatItemsAsync(PublicListMyStatItems input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public PublicListAllMyStatItems.Response PublicListAllMyStatItems(PublicListAllMyStatItems input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<PublicListAllMyStatItems.Response> PublicListAllMyStatItemsAsync(PublicListAllMyStatItems input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public PublicQueryUserStatItems1.Response PublicQueryUserStatItems1(PublicQueryUserStatItems1 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<PublicQueryUserStatItems1.Response> PublicQueryUserStatItems1Async(PublicQueryUserStatItems1 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public PublicBulkCreateUserStatItems.Response PublicBulkCreateUserStatItems(PublicBulkCreateUserStatItems input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<PublicBulkCreateUserStatItems.Response> PublicBulkCreateUserStatItemsAsync(PublicBulkCreateUserStatItems input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }

        public PublicBulkCreateUserStatItems.Response<T1> PublicBulkCreateUserStatItems<T1>(PublicBulkCreateUserStatItems input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<PublicBulkCreateUserStatItems.Response<T1>> PublicBulkCreateUserStatItemsAsync<T1>(PublicBulkCreateUserStatItems input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public PublicQueryUserStatItems.Response PublicQueryUserStatItems(PublicQueryUserStatItems input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<PublicQueryUserStatItems.Response> PublicQueryUserStatItemsAsync(PublicQueryUserStatItems input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public PublicBulkIncUserStatItem1.Response PublicBulkIncUserStatItem1(PublicBulkIncUserStatItem1 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<PublicBulkIncUserStatItem1.Response> PublicBulkIncUserStatItem1Async(PublicBulkIncUserStatItem1 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }

        public PublicBulkIncUserStatItem1.Response<T1> PublicBulkIncUserStatItem1<T1>(PublicBulkIncUserStatItem1 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<PublicBulkIncUserStatItem1.Response<T1>> PublicBulkIncUserStatItem1Async<T1>(PublicBulkIncUserStatItem1 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public BulkIncUserStatItemValue2.Response BulkIncUserStatItemValue2(BulkIncUserStatItemValue2 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<BulkIncUserStatItemValue2.Response> BulkIncUserStatItemValue2Async(BulkIncUserStatItemValue2 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }

        public BulkIncUserStatItemValue2.Response<T1> BulkIncUserStatItemValue2<T1>(BulkIncUserStatItemValue2 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<BulkIncUserStatItemValue2.Response<T1>> BulkIncUserStatItemValue2Async<T1>(BulkIncUserStatItemValue2 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public BulkResetUserStatItem3.Response BulkResetUserStatItem3(BulkResetUserStatItem3 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<BulkResetUserStatItem3.Response> BulkResetUserStatItem3Async(BulkResetUserStatItem3 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }

        public BulkResetUserStatItem3.Response<T1> BulkResetUserStatItem3<T1>(BulkResetUserStatItem3 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<BulkResetUserStatItem3.Response<T1>> BulkResetUserStatItem3Async<T1>(BulkResetUserStatItem3 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public PublicCreateUserStatItem.Response PublicCreateUserStatItem(PublicCreateUserStatItem input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<PublicCreateUserStatItem.Response> PublicCreateUserStatItemAsync(PublicCreateUserStatItem input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public DeleteUserStatItems1.Response DeleteUserStatItems1(DeleteUserStatItems1 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<DeleteUserStatItems1.Response> DeleteUserStatItems1Async(DeleteUserStatItems1 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public PublicIncUserStatItem.Response PublicIncUserStatItem(PublicIncUserStatItem input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<PublicIncUserStatItem.Response> PublicIncUserStatItemAsync(PublicIncUserStatItem input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public PublicIncUserStatItemValue.Response PublicIncUserStatItemValue(PublicIncUserStatItemValue input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<PublicIncUserStatItemValue.Response> PublicIncUserStatItemValueAsync(PublicIncUserStatItemValue input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public ResetUserStatItemValue1.Response ResetUserStatItemValue1(ResetUserStatItemValue1 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<ResetUserStatItemValue1.Response> ResetUserStatItemValue1Async(ResetUserStatItemValue1 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public BulkUpdateUserStatItemV2.Response BulkUpdateUserStatItemV2(BulkUpdateUserStatItemV2 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<BulkUpdateUserStatItemV2.Response> BulkUpdateUserStatItemV2Async(BulkUpdateUserStatItemV2 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }

        public BulkUpdateUserStatItemV2.Response<T1> BulkUpdateUserStatItemV2<T1>(BulkUpdateUserStatItemV2 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<BulkUpdateUserStatItemV2.Response<T1>> BulkUpdateUserStatItemV2Async<T1>(BulkUpdateUserStatItemV2 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public BulkFetchOrDefaultStatItems1.Response BulkFetchOrDefaultStatItems1(BulkFetchOrDefaultStatItems1 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<BulkFetchOrDefaultStatItems1.Response> BulkFetchOrDefaultStatItems1Async(BulkFetchOrDefaultStatItems1 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public AdminListUsersStatItems.Response AdminListUsersStatItems(AdminListUsersStatItems input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<AdminListUsersStatItems.Response> AdminListUsersStatItemsAsync(AdminListUsersStatItems input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public BulkUpdateUserStatItem.Response BulkUpdateUserStatItem(BulkUpdateUserStatItem input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<BulkUpdateUserStatItem.Response> BulkUpdateUserStatItemAsync(BulkUpdateUserStatItem input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }

        public BulkUpdateUserStatItem.Response<T1> BulkUpdateUserStatItem<T1>(BulkUpdateUserStatItem input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<BulkUpdateUserStatItem.Response<T1>> BulkUpdateUserStatItemAsync<T1>(BulkUpdateUserStatItem input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public BulkGetOrDefaultByUserId.Response BulkGetOrDefaultByUserId(BulkGetOrDefaultByUserId input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<BulkGetOrDefaultByUserId.Response> BulkGetOrDefaultByUserIdAsync(BulkGetOrDefaultByUserId input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public BulkResetUserStatItemValues.Response BulkResetUserStatItemValues(BulkResetUserStatItemValues input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<BulkResetUserStatItemValues.Response> BulkResetUserStatItemValuesAsync(BulkResetUserStatItemValues input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }

        public BulkResetUserStatItemValues.Response<T1> BulkResetUserStatItemValues<T1>(BulkResetUserStatItemValues input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<BulkResetUserStatItemValues.Response<T1>> BulkResetUserStatItemValuesAsync<T1>(BulkResetUserStatItemValues input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public DeleteUserStatItems2.Response DeleteUserStatItems2(DeleteUserStatItems2 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<DeleteUserStatItems2.Response> DeleteUserStatItems2Async(DeleteUserStatItems2 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public UpdateUserStatItemValue.Response UpdateUserStatItemValue(UpdateUserStatItemValue input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<UpdateUserStatItemValue.Response> UpdateUserStatItemValueAsync(UpdateUserStatItemValue input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public BulkUpdateUserStatItem1.Response BulkUpdateUserStatItem1(BulkUpdateUserStatItem1 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<BulkUpdateUserStatItem1.Response> BulkUpdateUserStatItem1Async(BulkUpdateUserStatItem1 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }

        public BulkUpdateUserStatItem1.Response<T1> BulkUpdateUserStatItem1<T1>(BulkUpdateUserStatItem1 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<BulkUpdateUserStatItem1.Response<T1>> BulkUpdateUserStatItem1Async<T1>(BulkUpdateUserStatItem1 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public PublicQueryUserStatItems2.Response PublicQueryUserStatItems2(PublicQueryUserStatItems2 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<PublicQueryUserStatItems2.Response> PublicQueryUserStatItems2Async(PublicQueryUserStatItems2 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public BulkUpdateUserStatItem2.Response BulkUpdateUserStatItem2(BulkUpdateUserStatItem2 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<BulkUpdateUserStatItem2.Response> BulkUpdateUserStatItem2Async(BulkUpdateUserStatItem2 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }

        public BulkUpdateUserStatItem2.Response<T1> BulkUpdateUserStatItem2<T1>(BulkUpdateUserStatItem2 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<BulkUpdateUserStatItem2.Response<T1>> BulkUpdateUserStatItem2Async<T1>(BulkUpdateUserStatItem2 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public UpdateUserStatItemValue1.Response UpdateUserStatItemValue1(UpdateUserStatItemValue1 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<UpdateUserStatItemValue1.Response> UpdateUserStatItemValue1Async(UpdateUserStatItemValue1 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
    }
}