// Copyright (c) 2022-2024 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// This code is generated by tool. DO NOT EDIT.
using System;
using System.Collections.Generic;
using System.Text;
using System.IO;
using System.Threading.Tasks;

using AccelByte.Sdk.Core;

using AccelByte.Sdk.Api.Social.Model;
using AccelByte.Sdk.Api.Social.Operation;

namespace AccelByte.Sdk.Api.Social.Wrapper
{
    public class UserStatistic
    {
        private readonly IAccelByteSdk _sdk;

        private string _CustomBasePath = String.Empty;

        public UserStatistic(IAccelByteSdk sdk)
        {
            _sdk = sdk;
        }

        public UserStatistic(IAccelByteSdk sdk, string customBasePath)
        {
            _sdk = sdk;
            _CustomBasePath = customBasePath;
        }

        #region Operation Builders
        public BulkFetchStatItems.BulkFetchStatItemsBuilder BulkFetchStatItemsOp
        {
            get
            {
                var opBuilder = new Operation.BulkFetchStatItems.BulkFetchStatItemsBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public BulkIncUserStatItem.BulkIncUserStatItemBuilder BulkIncUserStatItemOp
        {
            get
            {
                var opBuilder = new Operation.BulkIncUserStatItem.BulkIncUserStatItemBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public BulkIncUserStatItemValue.BulkIncUserStatItemValueBuilder BulkIncUserStatItemValueOp
        {
            get
            {
                var opBuilder = new Operation.BulkIncUserStatItemValue.BulkIncUserStatItemValueBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public BulkFetchOrDefaultStatItems.BulkFetchOrDefaultStatItemsBuilder BulkFetchOrDefaultStatItemsOp
        {
            get
            {
                var opBuilder = new Operation.BulkFetchOrDefaultStatItems.BulkFetchOrDefaultStatItemsBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public BulkResetUserStatItem.BulkResetUserStatItemBuilder BulkResetUserStatItemOp
        {
            get
            {
                var opBuilder = new Operation.BulkResetUserStatItem.BulkResetUserStatItemBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public GetStatItems.GetStatItemsBuilder GetStatItemsOp
        {
            get
            {
                var opBuilder = new Operation.GetStatItems.GetStatItemsBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public GetUserStatItems.GetUserStatItemsBuilder GetUserStatItemsOp
        {
            get
            {
                var opBuilder = new Operation.GetUserStatItems.GetUserStatItemsBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public BulkCreateUserStatItems.BulkCreateUserStatItemsBuilder BulkCreateUserStatItemsOp
        {
            get
            {
                var opBuilder = new Operation.BulkCreateUserStatItems.BulkCreateUserStatItemsBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public BulkIncUserStatItem1.BulkIncUserStatItem1Builder BulkIncUserStatItem1Op
        {
            get
            {
                var opBuilder = new Operation.BulkIncUserStatItem1.BulkIncUserStatItem1Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public BulkIncUserStatItemValue1.BulkIncUserStatItemValue1Builder BulkIncUserStatItemValue1Op
        {
            get
            {
                var opBuilder = new Operation.BulkIncUserStatItemValue1.BulkIncUserStatItemValue1Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public BulkResetUserStatItem1.BulkResetUserStatItem1Builder BulkResetUserStatItem1Op
        {
            get
            {
                var opBuilder = new Operation.BulkResetUserStatItem1.BulkResetUserStatItem1Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public CreateUserStatItem.CreateUserStatItemBuilder CreateUserStatItemOp
        {
            get
            {
                var opBuilder = new Operation.CreateUserStatItem.CreateUserStatItemBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public DeleteUserStatItems.DeleteUserStatItemsBuilder DeleteUserStatItemsOp
        {
            get
            {
                var opBuilder = new Operation.DeleteUserStatItems.DeleteUserStatItemsBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public IncUserStatItemValue.IncUserStatItemValueBuilder IncUserStatItemValueOp
        {
            get
            {
                var opBuilder = new Operation.IncUserStatItemValue.IncUserStatItemValueBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public ResetUserStatItemValue.ResetUserStatItemValueBuilder ResetUserStatItemValueOp
        {
            get
            {
                var opBuilder = new Operation.ResetUserStatItemValue.ResetUserStatItemValueBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public BulkFetchStatItems1.BulkFetchStatItems1Builder BulkFetchStatItems1Op
        {
            get
            {
                var opBuilder = new Operation.BulkFetchStatItems1.BulkFetchStatItems1Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public PublicBulkIncUserStatItem.PublicBulkIncUserStatItemBuilder PublicBulkIncUserStatItemOp
        {
            get
            {
                var opBuilder = new Operation.PublicBulkIncUserStatItem.PublicBulkIncUserStatItemBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public PublicBulkIncUserStatItemValue.PublicBulkIncUserStatItemValueBuilder PublicBulkIncUserStatItemValueOp
        {
            get
            {
                var opBuilder = new Operation.PublicBulkIncUserStatItemValue.PublicBulkIncUserStatItemValueBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public BulkResetUserStatItem2.BulkResetUserStatItem2Builder BulkResetUserStatItem2Op
        {
            get
            {
                var opBuilder = new Operation.BulkResetUserStatItem2.BulkResetUserStatItem2Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public PublicListMyStatItems.PublicListMyStatItemsBuilder PublicListMyStatItemsOp
        {
            get
            {
                var opBuilder = new Operation.PublicListMyStatItems.PublicListMyStatItemsBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public PublicListAllMyStatItems.PublicListAllMyStatItemsBuilder PublicListAllMyStatItemsOp
        {
            get
            {
                var opBuilder = new Operation.PublicListAllMyStatItems.PublicListAllMyStatItemsBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public PublicQueryUserStatItems.PublicQueryUserStatItemsBuilder PublicQueryUserStatItemsOp
        {
            get
            {
                var opBuilder = new Operation.PublicQueryUserStatItems.PublicQueryUserStatItemsBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public PublicBulkCreateUserStatItems.PublicBulkCreateUserStatItemsBuilder PublicBulkCreateUserStatItemsOp
        {
            get
            {
                var opBuilder = new Operation.PublicBulkCreateUserStatItems.PublicBulkCreateUserStatItemsBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public PublicQueryUserStatItems1.PublicQueryUserStatItems1Builder PublicQueryUserStatItems1Op
        {
            get
            {
                var opBuilder = new Operation.PublicQueryUserStatItems1.PublicQueryUserStatItems1Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public PublicBulkIncUserStatItem1.PublicBulkIncUserStatItem1Builder PublicBulkIncUserStatItem1Op
        {
            get
            {
                var opBuilder = new Operation.PublicBulkIncUserStatItem1.PublicBulkIncUserStatItem1Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public BulkIncUserStatItemValue2.BulkIncUserStatItemValue2Builder BulkIncUserStatItemValue2Op
        {
            get
            {
                var opBuilder = new Operation.BulkIncUserStatItemValue2.BulkIncUserStatItemValue2Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public BulkResetUserStatItem3.BulkResetUserStatItem3Builder BulkResetUserStatItem3Op
        {
            get
            {
                var opBuilder = new Operation.BulkResetUserStatItem3.BulkResetUserStatItem3Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public PublicCreateUserStatItem.PublicCreateUserStatItemBuilder PublicCreateUserStatItemOp
        {
            get
            {
                var opBuilder = new Operation.PublicCreateUserStatItem.PublicCreateUserStatItemBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public DeleteUserStatItems1.DeleteUserStatItems1Builder DeleteUserStatItems1Op
        {
            get
            {
                var opBuilder = new Operation.DeleteUserStatItems1.DeleteUserStatItems1Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public PublicIncUserStatItem.PublicIncUserStatItemBuilder PublicIncUserStatItemOp
        {
            get
            {
                var opBuilder = new Operation.PublicIncUserStatItem.PublicIncUserStatItemBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public PublicIncUserStatItemValue.PublicIncUserStatItemValueBuilder PublicIncUserStatItemValueOp
        {
            get
            {
                var opBuilder = new Operation.PublicIncUserStatItemValue.PublicIncUserStatItemValueBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public ResetUserStatItemValue1.ResetUserStatItemValue1Builder ResetUserStatItemValue1Op
        {
            get
            {
                var opBuilder = new Operation.ResetUserStatItemValue1.ResetUserStatItemValue1Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public BulkUpdateUserStatItemV2.BulkUpdateUserStatItemV2Builder BulkUpdateUserStatItemV2Op
        {
            get
            {
                var opBuilder = new Operation.BulkUpdateUserStatItemV2.BulkUpdateUserStatItemV2Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public BulkFetchOrDefaultStatItems1.BulkFetchOrDefaultStatItems1Builder BulkFetchOrDefaultStatItems1Op
        {
            get
            {
                var opBuilder = new Operation.BulkFetchOrDefaultStatItems1.BulkFetchOrDefaultStatItems1Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public AdminListUsersStatItems.AdminListUsersStatItemsBuilder AdminListUsersStatItemsOp
        {
            get
            {
                var opBuilder = new Operation.AdminListUsersStatItems.AdminListUsersStatItemsBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public BulkUpdateUserStatItem.BulkUpdateUserStatItemBuilder BulkUpdateUserStatItemOp
        {
            get
            {
                var opBuilder = new Operation.BulkUpdateUserStatItem.BulkUpdateUserStatItemBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public BulkGetOrDefaultByUserId.BulkGetOrDefaultByUserIdBuilder BulkGetOrDefaultByUserIdOp
        {
            get
            {
                var opBuilder = new Operation.BulkGetOrDefaultByUserId.BulkGetOrDefaultByUserIdBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public BulkResetUserStatItemValues.BulkResetUserStatItemValuesBuilder BulkResetUserStatItemValuesOp
        {
            get
            {
                var opBuilder = new Operation.BulkResetUserStatItemValues.BulkResetUserStatItemValuesBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public DeleteUserStatItems2.DeleteUserStatItems2Builder DeleteUserStatItems2Op
        {
            get
            {
                var opBuilder = new Operation.DeleteUserStatItems2.DeleteUserStatItems2Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public UpdateUserStatItemValue.UpdateUserStatItemValueBuilder UpdateUserStatItemValueOp
        {
            get
            {
                var opBuilder = new Operation.UpdateUserStatItemValue.UpdateUserStatItemValueBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public BulkUpdateUserStatItem1.BulkUpdateUserStatItem1Builder BulkUpdateUserStatItem1Op
        {
            get
            {
                var opBuilder = new Operation.BulkUpdateUserStatItem1.BulkUpdateUserStatItem1Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public PublicQueryUserStatItems2.PublicQueryUserStatItems2Builder PublicQueryUserStatItems2Op
        {
            get
            {
                var opBuilder = new Operation.PublicQueryUserStatItems2.PublicQueryUserStatItems2Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public BulkUpdateUserStatItem2.BulkUpdateUserStatItem2Builder BulkUpdateUserStatItem2Op
        {
            get
            {
                var opBuilder = new Operation.BulkUpdateUserStatItem2.BulkUpdateUserStatItem2Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public UpdateUserStatItemValue1.UpdateUserStatItemValue1Builder UpdateUserStatItemValue1Op
        {
            get
            {
                var opBuilder = new Operation.UpdateUserStatItemValue1.UpdateUserStatItemValue1Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        #endregion

        public List<Model.UserStatItemInfo>? BulkFetchStatItems(BulkFetchStatItems input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<List<Model.UserStatItemInfo>?> BulkFetchStatItemsAsync(BulkFetchStatItems input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }

        public List<Model.UserStatItemInfo<T1>>? BulkFetchStatItems<T1>(BulkFetchStatItems input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<List<Model.UserStatItemInfo<T1>>?> BulkFetchStatItemsAsync<T1>(BulkFetchStatItems input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public List<Model.BulkStatOperationResult>? BulkIncUserStatItem(BulkIncUserStatItem input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<List<Model.BulkStatOperationResult>?> BulkIncUserStatItemAsync(BulkIncUserStatItem input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }

        public List<Model.BulkStatOperationResult<T1>>? BulkIncUserStatItem<T1>(BulkIncUserStatItem input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<List<Model.BulkStatOperationResult<T1>>?> BulkIncUserStatItemAsync<T1>(BulkIncUserStatItem input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public List<Model.BulkStatOperationResult>? BulkIncUserStatItemValue(BulkIncUserStatItemValue input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<List<Model.BulkStatOperationResult>?> BulkIncUserStatItemValueAsync(BulkIncUserStatItemValue input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }

        public List<Model.BulkStatOperationResult<T1>>? BulkIncUserStatItemValue<T1>(BulkIncUserStatItemValue input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<List<Model.BulkStatOperationResult<T1>>?> BulkIncUserStatItemValueAsync<T1>(BulkIncUserStatItemValue input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public List<Model.ADTOObjectForUserStatItemValue>? BulkFetchOrDefaultStatItems(BulkFetchOrDefaultStatItems input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<List<Model.ADTOObjectForUserStatItemValue>?> BulkFetchOrDefaultStatItemsAsync(BulkFetchOrDefaultStatItems input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public List<Model.BulkStatOperationResult>? BulkResetUserStatItem(BulkResetUserStatItem input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<List<Model.BulkStatOperationResult>?> BulkResetUserStatItemAsync(BulkResetUserStatItem input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }

        public List<Model.BulkStatOperationResult<T1>>? BulkResetUserStatItem<T1>(BulkResetUserStatItem input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<List<Model.BulkStatOperationResult<T1>>?> BulkResetUserStatItemAsync<T1>(BulkResetUserStatItem input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.StatItemValuePagingSlicedResult? GetStatItems(GetStatItems input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.StatItemValuePagingSlicedResult?> GetStatItemsAsync(GetStatItems input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.UserStatItemPagingSlicedResult? GetUserStatItems(GetUserStatItems input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.UserStatItemPagingSlicedResult?> GetUserStatItemsAsync(GetUserStatItems input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public List<Model.BulkStatOperationResult>? BulkCreateUserStatItems(BulkCreateUserStatItems input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<List<Model.BulkStatOperationResult>?> BulkCreateUserStatItemsAsync(BulkCreateUserStatItems input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }

        public List<Model.BulkStatOperationResult<T1>>? BulkCreateUserStatItems<T1>(BulkCreateUserStatItems input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<List<Model.BulkStatOperationResult<T1>>?> BulkCreateUserStatItemsAsync<T1>(BulkCreateUserStatItems input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public List<Model.BulkStatOperationResult>? BulkIncUserStatItem1(BulkIncUserStatItem1 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<List<Model.BulkStatOperationResult>?> BulkIncUserStatItem1Async(BulkIncUserStatItem1 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }

        public List<Model.BulkStatOperationResult<T1>>? BulkIncUserStatItem1<T1>(BulkIncUserStatItem1 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<List<Model.BulkStatOperationResult<T1>>?> BulkIncUserStatItem1Async<T1>(BulkIncUserStatItem1 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public List<Model.BulkStatOperationResult>? BulkIncUserStatItemValue1(BulkIncUserStatItemValue1 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<List<Model.BulkStatOperationResult>?> BulkIncUserStatItemValue1Async(BulkIncUserStatItemValue1 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }

        public List<Model.BulkStatOperationResult<T1>>? BulkIncUserStatItemValue1<T1>(BulkIncUserStatItemValue1 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<List<Model.BulkStatOperationResult<T1>>?> BulkIncUserStatItemValue1Async<T1>(BulkIncUserStatItemValue1 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public List<Model.BulkStatOperationResult>? BulkResetUserStatItem1(BulkResetUserStatItem1 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<List<Model.BulkStatOperationResult>?> BulkResetUserStatItem1Async(BulkResetUserStatItem1 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }

        public List<Model.BulkStatOperationResult<T1>>? BulkResetUserStatItem1<T1>(BulkResetUserStatItem1 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<List<Model.BulkStatOperationResult<T1>>?> BulkResetUserStatItem1Async<T1>(BulkResetUserStatItem1 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public void CreateUserStatItem(CreateUserStatItem input)
        {
            var response = _sdk.RunRequest(input);
            input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task CreateUserStatItemAsync(CreateUserStatItem input)
        {
            var response = await _sdk.RunRequestAsync(input);
            input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public void DeleteUserStatItems(DeleteUserStatItems input)
        {
            var response = _sdk.RunRequest(input);
            input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task DeleteUserStatItemsAsync(DeleteUserStatItems input)
        {
            var response = await _sdk.RunRequestAsync(input);
            input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.StatItemIncResult? IncUserStatItemValue(IncUserStatItemValue input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.StatItemIncResult?> IncUserStatItemValueAsync(IncUserStatItemValue input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.StatItemIncResult? ResetUserStatItemValue(ResetUserStatItemValue input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.StatItemIncResult?> ResetUserStatItemValueAsync(ResetUserStatItemValue input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public List<Model.UserStatItemInfo>? BulkFetchStatItems1(BulkFetchStatItems1 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<List<Model.UserStatItemInfo>?> BulkFetchStatItems1Async(BulkFetchStatItems1 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }

        public List<Model.UserStatItemInfo<T1>>? BulkFetchStatItems1<T1>(BulkFetchStatItems1 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<List<Model.UserStatItemInfo<T1>>?> BulkFetchStatItems1Async<T1>(BulkFetchStatItems1 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public List<Model.BulkStatOperationResult>? PublicBulkIncUserStatItem(PublicBulkIncUserStatItem input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<List<Model.BulkStatOperationResult>?> PublicBulkIncUserStatItemAsync(PublicBulkIncUserStatItem input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }

        public List<Model.BulkStatOperationResult<T1>>? PublicBulkIncUserStatItem<T1>(PublicBulkIncUserStatItem input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<List<Model.BulkStatOperationResult<T1>>?> PublicBulkIncUserStatItemAsync<T1>(PublicBulkIncUserStatItem input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public List<Model.BulkStatOperationResult>? PublicBulkIncUserStatItemValue(PublicBulkIncUserStatItemValue input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<List<Model.BulkStatOperationResult>?> PublicBulkIncUserStatItemValueAsync(PublicBulkIncUserStatItemValue input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }

        public List<Model.BulkStatOperationResult<T1>>? PublicBulkIncUserStatItemValue<T1>(PublicBulkIncUserStatItemValue input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<List<Model.BulkStatOperationResult<T1>>?> PublicBulkIncUserStatItemValueAsync<T1>(PublicBulkIncUserStatItemValue input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public List<Model.BulkStatOperationResult>? BulkResetUserStatItem2(BulkResetUserStatItem2 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<List<Model.BulkStatOperationResult>?> BulkResetUserStatItem2Async(BulkResetUserStatItem2 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }

        public List<Model.BulkStatOperationResult<T1>>? BulkResetUserStatItem2<T1>(BulkResetUserStatItem2 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<List<Model.BulkStatOperationResult<T1>>?> BulkResetUserStatItem2Async<T1>(BulkResetUserStatItem2 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.UserStatItemPagingSlicedResult? PublicListMyStatItems(PublicListMyStatItems input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.UserStatItemPagingSlicedResult?> PublicListMyStatItemsAsync(PublicListMyStatItems input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public List<Model.ADTOObjectForUserStatItemValue>? PublicListAllMyStatItems(PublicListAllMyStatItems input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<List<Model.ADTOObjectForUserStatItemValue>?> PublicListAllMyStatItemsAsync(PublicListAllMyStatItems input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.UserStatItemPagingSlicedResult? PublicQueryUserStatItems(PublicQueryUserStatItems input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.UserStatItemPagingSlicedResult?> PublicQueryUserStatItemsAsync(PublicQueryUserStatItems input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public List<Model.BulkStatOperationResult>? PublicBulkCreateUserStatItems(PublicBulkCreateUserStatItems input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<List<Model.BulkStatOperationResult>?> PublicBulkCreateUserStatItemsAsync(PublicBulkCreateUserStatItems input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }

        public List<Model.BulkStatOperationResult<T1>>? PublicBulkCreateUserStatItems<T1>(PublicBulkCreateUserStatItems input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<List<Model.BulkStatOperationResult<T1>>?> PublicBulkCreateUserStatItemsAsync<T1>(PublicBulkCreateUserStatItems input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public List<Model.ADTOObjectForUserStatItemValue>? PublicQueryUserStatItems1(PublicQueryUserStatItems1 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<List<Model.ADTOObjectForUserStatItemValue>?> PublicQueryUserStatItems1Async(PublicQueryUserStatItems1 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public List<Model.BulkStatOperationResult>? PublicBulkIncUserStatItem1(PublicBulkIncUserStatItem1 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<List<Model.BulkStatOperationResult>?> PublicBulkIncUserStatItem1Async(PublicBulkIncUserStatItem1 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }

        public List<Model.BulkStatOperationResult<T1>>? PublicBulkIncUserStatItem1<T1>(PublicBulkIncUserStatItem1 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<List<Model.BulkStatOperationResult<T1>>?> PublicBulkIncUserStatItem1Async<T1>(PublicBulkIncUserStatItem1 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public List<Model.BulkStatOperationResult>? BulkIncUserStatItemValue2(BulkIncUserStatItemValue2 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<List<Model.BulkStatOperationResult>?> BulkIncUserStatItemValue2Async(BulkIncUserStatItemValue2 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }

        public List<Model.BulkStatOperationResult<T1>>? BulkIncUserStatItemValue2<T1>(BulkIncUserStatItemValue2 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<List<Model.BulkStatOperationResult<T1>>?> BulkIncUserStatItemValue2Async<T1>(BulkIncUserStatItemValue2 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public List<Model.BulkStatOperationResult>? BulkResetUserStatItem3(BulkResetUserStatItem3 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<List<Model.BulkStatOperationResult>?> BulkResetUserStatItem3Async(BulkResetUserStatItem3 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }

        public List<Model.BulkStatOperationResult<T1>>? BulkResetUserStatItem3<T1>(BulkResetUserStatItem3 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<List<Model.BulkStatOperationResult<T1>>?> BulkResetUserStatItem3Async<T1>(BulkResetUserStatItem3 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public void PublicCreateUserStatItem(PublicCreateUserStatItem input)
        {
            var response = _sdk.RunRequest(input);
            input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task PublicCreateUserStatItemAsync(PublicCreateUserStatItem input)
        {
            var response = await _sdk.RunRequestAsync(input);
            input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public void DeleteUserStatItems1(DeleteUserStatItems1 input)
        {
            var response = _sdk.RunRequest(input);
            input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task DeleteUserStatItems1Async(DeleteUserStatItems1 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.StatItemIncResult? PublicIncUserStatItem(PublicIncUserStatItem input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.StatItemIncResult?> PublicIncUserStatItemAsync(PublicIncUserStatItem input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.StatItemIncResult? PublicIncUserStatItemValue(PublicIncUserStatItemValue input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.StatItemIncResult?> PublicIncUserStatItemValueAsync(PublicIncUserStatItemValue input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.StatItemIncResult? ResetUserStatItemValue1(ResetUserStatItemValue1 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.StatItemIncResult?> ResetUserStatItemValue1Async(ResetUserStatItemValue1 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public List<Model.BulkStatOperationResult>? BulkUpdateUserStatItemV2(BulkUpdateUserStatItemV2 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<List<Model.BulkStatOperationResult>?> BulkUpdateUserStatItemV2Async(BulkUpdateUserStatItemV2 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }

        public List<Model.BulkStatOperationResult<T1>>? BulkUpdateUserStatItemV2<T1>(BulkUpdateUserStatItemV2 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<List<Model.BulkStatOperationResult<T1>>?> BulkUpdateUserStatItemV2Async<T1>(BulkUpdateUserStatItemV2 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public List<Model.ADTOObjectForUserStatItemValue>? BulkFetchOrDefaultStatItems1(BulkFetchOrDefaultStatItems1 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<List<Model.ADTOObjectForUserStatItemValue>?> BulkFetchOrDefaultStatItems1Async(BulkFetchOrDefaultStatItems1 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public List<Model.ADTOObjectForUserStatItemValue>? AdminListUsersStatItems(AdminListUsersStatItems input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<List<Model.ADTOObjectForUserStatItemValue>?> AdminListUsersStatItemsAsync(AdminListUsersStatItems input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public List<Model.BulkStatOperationResult>? BulkUpdateUserStatItem(BulkUpdateUserStatItem input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<List<Model.BulkStatOperationResult>?> BulkUpdateUserStatItemAsync(BulkUpdateUserStatItem input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }

        public List<Model.BulkStatOperationResult<T1>>? BulkUpdateUserStatItem<T1>(BulkUpdateUserStatItem input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<List<Model.BulkStatOperationResult<T1>>?> BulkUpdateUserStatItemAsync<T1>(BulkUpdateUserStatItem input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public List<Model.ADTOObjectForUserStatItemValue>? BulkGetOrDefaultByUserId(BulkGetOrDefaultByUserId input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<List<Model.ADTOObjectForUserStatItemValue>?> BulkGetOrDefaultByUserIdAsync(BulkGetOrDefaultByUserId input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public List<Model.BulkStatOperationResult>? BulkResetUserStatItemValues(BulkResetUserStatItemValues input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<List<Model.BulkStatOperationResult>?> BulkResetUserStatItemValuesAsync(BulkResetUserStatItemValues input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }

        public List<Model.BulkStatOperationResult<T1>>? BulkResetUserStatItemValues<T1>(BulkResetUserStatItemValues input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<List<Model.BulkStatOperationResult<T1>>?> BulkResetUserStatItemValuesAsync<T1>(BulkResetUserStatItemValues input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public void DeleteUserStatItems2(DeleteUserStatItems2 input)
        {
            var response = _sdk.RunRequest(input);
            input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task DeleteUserStatItems2Async(DeleteUserStatItems2 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.StatItemIncResult? UpdateUserStatItemValue(UpdateUserStatItemValue input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.StatItemIncResult?> UpdateUserStatItemValueAsync(UpdateUserStatItemValue input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public List<Model.BulkStatOperationResult>? BulkUpdateUserStatItem1(BulkUpdateUserStatItem1 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<List<Model.BulkStatOperationResult>?> BulkUpdateUserStatItem1Async(BulkUpdateUserStatItem1 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }

        public List<Model.BulkStatOperationResult<T1>>? BulkUpdateUserStatItem1<T1>(BulkUpdateUserStatItem1 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<List<Model.BulkStatOperationResult<T1>>?> BulkUpdateUserStatItem1Async<T1>(BulkUpdateUserStatItem1 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public List<Model.ADTOObjectForUserStatItemValue>? PublicQueryUserStatItems2(PublicQueryUserStatItems2 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<List<Model.ADTOObjectForUserStatItemValue>?> PublicQueryUserStatItems2Async(PublicQueryUserStatItems2 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public List<Model.BulkStatOperationResult>? BulkUpdateUserStatItem2(BulkUpdateUserStatItem2 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<List<Model.BulkStatOperationResult>?> BulkUpdateUserStatItem2Async(BulkUpdateUserStatItem2 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }

        public List<Model.BulkStatOperationResult<T1>>? BulkUpdateUserStatItem2<T1>(BulkUpdateUserStatItem2 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<List<Model.BulkStatOperationResult<T1>>?> BulkUpdateUserStatItem2Async<T1>(BulkUpdateUserStatItem2 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.StatItemIncResult? UpdateUserStatItemValue1(UpdateUserStatItemValue1 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.StatItemIncResult?> UpdateUserStatItemValue1Async(UpdateUserStatItemValue1 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
    }
}