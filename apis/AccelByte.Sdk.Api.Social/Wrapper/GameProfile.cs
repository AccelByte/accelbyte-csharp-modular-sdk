// Copyright (c) 2022-2024 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// This code is generated by tool. DO NOT EDIT.
using System;
using System.Collections.Generic;
using System.Text;
using System.IO;
using System.Threading.Tasks;

using AccelByte.Sdk.Core;

using AccelByte.Sdk.Api.Social.Model;
using AccelByte.Sdk.Api.Social.Operation;

namespace AccelByte.Sdk.Api.Social.Wrapper
{
    public class GameProfile
    {
        private readonly IAccelByteSdk _sdk;

        public GameProfile(IAccelByteSdk sdk)
        {
            _sdk = sdk;
        }

        #region Operation Builders
        public GetUserProfiles.GetUserProfilesBuilder GetUserProfilesOp
        {
            get { return new Operation.GetUserProfiles.GetUserProfilesBuilder(_sdk); }
        }
        public GetProfile.GetProfileBuilder GetProfileOp
        {
            get { return new Operation.GetProfile.GetProfileBuilder(_sdk); }
        }
        public PublicGetUserGameProfiles.PublicGetUserGameProfilesBuilder PublicGetUserGameProfilesOp
        {
            get { return new Operation.PublicGetUserGameProfiles.PublicGetUserGameProfilesBuilder(_sdk); }
        }
        public PublicGetUserProfiles.PublicGetUserProfilesBuilder PublicGetUserProfilesOp
        {
            get { return new Operation.PublicGetUserProfiles.PublicGetUserProfilesBuilder(_sdk); }
        }
        public PublicCreateProfile.PublicCreateProfileBuilder PublicCreateProfileOp
        {
            get { return new Operation.PublicCreateProfile.PublicCreateProfileBuilder(_sdk); }
        }
        public PublicGetProfile.PublicGetProfileBuilder PublicGetProfileOp
        {
            get { return new Operation.PublicGetProfile.PublicGetProfileBuilder(_sdk); }
        }
        public PublicUpdateProfile.PublicUpdateProfileBuilder PublicUpdateProfileOp
        {
            get { return new Operation.PublicUpdateProfile.PublicUpdateProfileBuilder(_sdk); }
        }
        public PublicDeleteProfile.PublicDeleteProfileBuilder PublicDeleteProfileOp
        {
            get { return new Operation.PublicDeleteProfile.PublicDeleteProfileBuilder(_sdk); }
        }
        public PublicGetProfileAttribute.PublicGetProfileAttributeBuilder PublicGetProfileAttributeOp
        {
            get { return new Operation.PublicGetProfileAttribute.PublicGetProfileAttributeBuilder(_sdk); }
        }
        public PublicUpdateAttribute.PublicUpdateAttributeBuilder PublicUpdateAttributeOp
        {
            get { return new Operation.PublicUpdateAttribute.PublicUpdateAttributeBuilder(_sdk); }
        }
        #endregion

        public List<Model.GameProfileHeader>? GetUserProfiles(GetUserProfiles input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<List<Model.GameProfileHeader>?> GetUserProfilesAsync(GetUserProfiles input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.GameProfileInfo? GetProfile(GetProfile input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.GameProfileInfo?> GetProfileAsync(GetProfile input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public List<Model.UserGameProfiles>? PublicGetUserGameProfiles(PublicGetUserGameProfiles input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<List<Model.UserGameProfiles>?> PublicGetUserGameProfilesAsync(PublicGetUserGameProfiles input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public List<Model.GameProfileHeader>? PublicGetUserProfiles(PublicGetUserProfiles input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<List<Model.GameProfileHeader>?> PublicGetUserProfilesAsync(PublicGetUserProfiles input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public void PublicCreateProfile(PublicCreateProfile input)
        {
            var response = _sdk.RunRequest(input);
            input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task PublicCreateProfileAsync(PublicCreateProfile input)
        {
            var response = await _sdk.RunRequestAsync(input);
            input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.GameProfileInfo? PublicGetProfile(PublicGetProfile input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.GameProfileInfo?> PublicGetProfileAsync(PublicGetProfile input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.GameProfileInfo? PublicUpdateProfile(PublicUpdateProfile input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.GameProfileInfo?> PublicUpdateProfileAsync(PublicUpdateProfile input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public void PublicDeleteProfile(PublicDeleteProfile input)
        {
            var response = _sdk.RunRequest(input);
            input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task PublicDeleteProfileAsync(PublicDeleteProfile input)
        {
            var response = await _sdk.RunRequestAsync(input);
            input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.Attribute? PublicGetProfileAttribute(PublicGetProfileAttribute input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.Attribute?> PublicGetProfileAttributeAsync(PublicGetProfileAttribute input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.GameProfileInfo? PublicUpdateAttribute(PublicUpdateAttribute input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.GameProfileInfo?> PublicUpdateAttributeAsync(PublicUpdateAttribute input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
    }
}