// Copyright (c) 2022-2024 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// This code is generated by tool. DO NOT EDIT.
using System;
using System.Collections.Generic;
using System.Text;
using System.IO;
using System.Threading.Tasks;

using AccelByte.Sdk.Core;

using AccelByte.Sdk.Api.Gdpr.Model;
using AccelByte.Sdk.Api.Gdpr.Operation;

namespace AccelByte.Sdk.Api.Gdpr.Wrapper
{
    public class DataDeletion
    {
        private readonly IAccelByteSdk _sdk;

        private string _CustomBasePath = String.Empty;

        public DataDeletion(IAccelByteSdk sdk)
        {
            _sdk = sdk;
        }

        public DataDeletion(IAccelByteSdk sdk, string customBasePath)
        {
            _sdk = sdk;
            _CustomBasePath = customBasePath;
        }

        #region Operation Builders
        public AdminGetListDeletionDataRequest.AdminGetListDeletionDataRequestBuilder AdminGetListDeletionDataRequestOp
        {
            get
            {
                var opBuilder = new Operation.AdminGetListDeletionDataRequest.AdminGetListDeletionDataRequestBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public AdminGetUserAccountDeletionRequest.AdminGetUserAccountDeletionRequestBuilder AdminGetUserAccountDeletionRequestOp
        {
            get
            {
                var opBuilder = new Operation.AdminGetUserAccountDeletionRequest.AdminGetUserAccountDeletionRequestBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public AdminSubmitUserAccountDeletionRequest.AdminSubmitUserAccountDeletionRequestBuilder AdminSubmitUserAccountDeletionRequestOp
        {
            get
            {
                var opBuilder = new Operation.AdminSubmitUserAccountDeletionRequest.AdminSubmitUserAccountDeletionRequestBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public AdminCancelUserAccountDeletionRequest.AdminCancelUserAccountDeletionRequestBuilder AdminCancelUserAccountDeletionRequestOp
        {
            get
            {
                var opBuilder = new Operation.AdminCancelUserAccountDeletionRequest.AdminCancelUserAccountDeletionRequestBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public PublicSubmitUserAccountDeletionRequest.PublicSubmitUserAccountDeletionRequestBuilder PublicSubmitUserAccountDeletionRequestOp
        {
            get
            {
                var opBuilder = new Operation.PublicSubmitUserAccountDeletionRequest.PublicSubmitUserAccountDeletionRequestBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public PublicCancelUserAccountDeletionRequest.PublicCancelUserAccountDeletionRequestBuilder PublicCancelUserAccountDeletionRequestOp
        {
            get
            {
                var opBuilder = new Operation.PublicCancelUserAccountDeletionRequest.PublicCancelUserAccountDeletionRequestBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public PublicGetUserAccountDeletionStatus.PublicGetUserAccountDeletionStatusBuilder PublicGetUserAccountDeletionStatusOp
        {
            get
            {
                var opBuilder = new Operation.PublicGetUserAccountDeletionStatus.PublicGetUserAccountDeletionStatusBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public PublicSubmitMyAccountDeletionRequest.PublicSubmitMyAccountDeletionRequestBuilder PublicSubmitMyAccountDeletionRequestOp
        {
            get
            {
                var opBuilder = new Operation.PublicSubmitMyAccountDeletionRequest.PublicSubmitMyAccountDeletionRequestBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public PublicCancelMyAccountDeletionRequest.PublicCancelMyAccountDeletionRequestBuilder PublicCancelMyAccountDeletionRequestOp
        {
            get
            {
                var opBuilder = new Operation.PublicCancelMyAccountDeletionRequest.PublicCancelMyAccountDeletionRequestBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public PublicGetMyAccountDeletionStatus.PublicGetMyAccountDeletionStatusBuilder PublicGetMyAccountDeletionStatusOp
        {
            get
            {
                var opBuilder = new Operation.PublicGetMyAccountDeletionStatus.PublicGetMyAccountDeletionStatusBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        #endregion

        public Model.ModelsListDeletionDataResponse? AdminGetListDeletionDataRequest(AdminGetListDeletionDataRequest input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.ModelsListDeletionDataResponse?> AdminGetListDeletionDataRequestAsync(AdminGetListDeletionDataRequest input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.ModelsDeletionData? AdminGetUserAccountDeletionRequest(AdminGetUserAccountDeletionRequest input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.ModelsDeletionData?> AdminGetUserAccountDeletionRequestAsync(AdminGetUserAccountDeletionRequest input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.ModelsRequestDeleteResponse? AdminSubmitUserAccountDeletionRequest(AdminSubmitUserAccountDeletionRequest input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.ModelsRequestDeleteResponse?> AdminSubmitUserAccountDeletionRequestAsync(AdminSubmitUserAccountDeletionRequest input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public void AdminCancelUserAccountDeletionRequest(AdminCancelUserAccountDeletionRequest input)
        {
            var response = _sdk.RunRequest(input);
            input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task AdminCancelUserAccountDeletionRequestAsync(AdminCancelUserAccountDeletionRequest input)
        {
            var response = await _sdk.RunRequestAsync(input);
            input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.ModelsRequestDeleteResponse? PublicSubmitUserAccountDeletionRequest(PublicSubmitUserAccountDeletionRequest input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.ModelsRequestDeleteResponse?> PublicSubmitUserAccountDeletionRequestAsync(PublicSubmitUserAccountDeletionRequest input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public void PublicCancelUserAccountDeletionRequest(PublicCancelUserAccountDeletionRequest input)
        {
            var response = _sdk.RunRequest(input);
            input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task PublicCancelUserAccountDeletionRequestAsync(PublicCancelUserAccountDeletionRequest input)
        {
            var response = await _sdk.RunRequestAsync(input);
            input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.ModelsDeletionStatus? PublicGetUserAccountDeletionStatus(PublicGetUserAccountDeletionStatus input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.ModelsDeletionStatus?> PublicGetUserAccountDeletionStatusAsync(PublicGetUserAccountDeletionStatus input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.ModelsRequestDeleteResponse? PublicSubmitMyAccountDeletionRequest(PublicSubmitMyAccountDeletionRequest input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.ModelsRequestDeleteResponse?> PublicSubmitMyAccountDeletionRequestAsync(PublicSubmitMyAccountDeletionRequest input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public void PublicCancelMyAccountDeletionRequest(PublicCancelMyAccountDeletionRequest input)
        {
            var response = _sdk.RunRequest(input);
            input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task PublicCancelMyAccountDeletionRequestAsync(PublicCancelMyAccountDeletionRequest input)
        {
            var response = await _sdk.RunRequestAsync(input);
            input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.ModelsDeletionStatus? PublicGetMyAccountDeletionStatus(PublicGetMyAccountDeletionStatus input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.ModelsDeletionStatus?> PublicGetMyAccountDeletionStatusAsync(PublicGetMyAccountDeletionStatus input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
    }
}