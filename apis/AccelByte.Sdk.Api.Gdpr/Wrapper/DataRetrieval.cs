// Copyright (c) 2022-2024 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// This code is generated by tool. DO NOT EDIT.
using System;
using System.Collections.Generic;
using System.Text;
using System.IO;
using System.Threading.Tasks;

using AccelByte.Sdk.Core;

using AccelByte.Sdk.Api.Gdpr.Model;
using AccelByte.Sdk.Api.Gdpr.Operation;

namespace AccelByte.Sdk.Api.Gdpr.Wrapper
{
    public class DataRetrieval
    {
        private readonly IAccelByteSdk _sdk;

        private string _CustomBasePath = String.Empty;

        public DataRetrieval(IAccelByteSdk sdk)
        {
            _sdk = sdk;
        }

        public DataRetrieval(IAccelByteSdk sdk, string customBasePath)
        {
            _sdk = sdk;
            _CustomBasePath = customBasePath;
        }

        #region Operation Builders
        public AdminGetListPersonalDataRequest.AdminGetListPersonalDataRequestBuilder AdminGetListPersonalDataRequestOp
        {
            get
            {
                var opBuilder = new Operation.AdminGetListPersonalDataRequest.AdminGetListPersonalDataRequestBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public AdminGetUserPersonalDataRequests.AdminGetUserPersonalDataRequestsBuilder AdminGetUserPersonalDataRequestsOp
        {
            get
            {
                var opBuilder = new Operation.AdminGetUserPersonalDataRequests.AdminGetUserPersonalDataRequestsBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public AdminRequestDataRetrieval.AdminRequestDataRetrievalBuilder AdminRequestDataRetrievalOp
        {
            get
            {
                var opBuilder = new Operation.AdminRequestDataRetrieval.AdminRequestDataRetrievalBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public AdminCancelUserPersonalDataRequest.AdminCancelUserPersonalDataRequestBuilder AdminCancelUserPersonalDataRequestOp
        {
            get
            {
                var opBuilder = new Operation.AdminCancelUserPersonalDataRequest.AdminCancelUserPersonalDataRequestBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public AdminGeneratePersonalDataURL.AdminGeneratePersonalDataURLBuilder AdminGeneratePersonalDataURLOp
        {
            get
            {
                var opBuilder = new Operation.AdminGeneratePersonalDataURL.AdminGeneratePersonalDataURLBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public PublicGetUserPersonalDataRequests.PublicGetUserPersonalDataRequestsBuilder PublicGetUserPersonalDataRequestsOp
        {
            get
            {
                var opBuilder = new Operation.PublicGetUserPersonalDataRequests.PublicGetUserPersonalDataRequestsBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public PublicRequestDataRetrieval.PublicRequestDataRetrievalBuilder PublicRequestDataRetrievalOp
        {
            get
            {
                var opBuilder = new Operation.PublicRequestDataRetrieval.PublicRequestDataRetrievalBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public PublicCancelUserPersonalDataRequest.PublicCancelUserPersonalDataRequestBuilder PublicCancelUserPersonalDataRequestOp
        {
            get
            {
                var opBuilder = new Operation.PublicCancelUserPersonalDataRequest.PublicCancelUserPersonalDataRequestBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public PublicGeneratePersonalDataURL.PublicGeneratePersonalDataURLBuilder PublicGeneratePersonalDataURLOp
        {
            get
            {
                var opBuilder = new Operation.PublicGeneratePersonalDataURL.PublicGeneratePersonalDataURLBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        #endregion

        public AdminGetListPersonalDataRequest.Response AdminGetListPersonalDataRequest(AdminGetListPersonalDataRequest input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<AdminGetListPersonalDataRequest.Response> AdminGetListPersonalDataRequestAsync(AdminGetListPersonalDataRequest input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public AdminGetUserPersonalDataRequests.Response AdminGetUserPersonalDataRequests(AdminGetUserPersonalDataRequests input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<AdminGetUserPersonalDataRequests.Response> AdminGetUserPersonalDataRequestsAsync(AdminGetUserPersonalDataRequests input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public AdminRequestDataRetrieval.Response AdminRequestDataRetrieval(AdminRequestDataRetrieval input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<AdminRequestDataRetrieval.Response> AdminRequestDataRetrievalAsync(AdminRequestDataRetrieval input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public AdminCancelUserPersonalDataRequest.Response AdminCancelUserPersonalDataRequest(AdminCancelUserPersonalDataRequest input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<AdminCancelUserPersonalDataRequest.Response> AdminCancelUserPersonalDataRequestAsync(AdminCancelUserPersonalDataRequest input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public AdminGeneratePersonalDataURL.Response AdminGeneratePersonalDataURL(AdminGeneratePersonalDataURL input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<AdminGeneratePersonalDataURL.Response> AdminGeneratePersonalDataURLAsync(AdminGeneratePersonalDataURL input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public PublicGetUserPersonalDataRequests.Response PublicGetUserPersonalDataRequests(PublicGetUserPersonalDataRequests input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<PublicGetUserPersonalDataRequests.Response> PublicGetUserPersonalDataRequestsAsync(PublicGetUserPersonalDataRequests input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public PublicRequestDataRetrieval.Response PublicRequestDataRetrieval(PublicRequestDataRetrieval input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<PublicRequestDataRetrieval.Response> PublicRequestDataRetrievalAsync(PublicRequestDataRetrieval input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public PublicCancelUserPersonalDataRequest.Response PublicCancelUserPersonalDataRequest(PublicCancelUserPersonalDataRequest input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<PublicCancelUserPersonalDataRequest.Response> PublicCancelUserPersonalDataRequestAsync(PublicCancelUserPersonalDataRequest input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public PublicGeneratePersonalDataURL.Response PublicGeneratePersonalDataURL(PublicGeneratePersonalDataURL input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<PublicGeneratePersonalDataURL.Response> PublicGeneratePersonalDataURLAsync(PublicGeneratePersonalDataURL input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
    }
}