// Copyright (c) 2022-2024 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// This code is generated by tool. DO NOT EDIT.
using System;
using System.Collections.Generic;
using System.Text;
using System.IO;
using System.Threading.Tasks;

using AccelByte.Sdk.Core;

using AccelByte.Sdk.Api.Gdpr.Model;
using AccelByte.Sdk.Api.Gdpr.Operation;

namespace AccelByte.Sdk.Api.Gdpr.Wrapper
{
    public class Configuration
    {
        private readonly IAccelByteSdk _sdk;

        private string _CustomBasePath = String.Empty;

        public Configuration(IAccelByteSdk sdk)
        {
            _sdk = sdk;
        }

        public Configuration(IAccelByteSdk sdk, string customBasePath)
        {
            _sdk = sdk;
            _CustomBasePath = customBasePath;
        }

        #region Operation Builders
        public GetAdminEmailConfiguration.GetAdminEmailConfigurationBuilder GetAdminEmailConfigurationOp
        {
            get
            {
                var opBuilder = new Operation.GetAdminEmailConfiguration.GetAdminEmailConfigurationBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public UpdateAdminEmailConfiguration.UpdateAdminEmailConfigurationBuilder UpdateAdminEmailConfigurationOp
        {
            get
            {
                var opBuilder = new Operation.UpdateAdminEmailConfiguration.UpdateAdminEmailConfigurationBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public SaveAdminEmailConfiguration.SaveAdminEmailConfigurationBuilder SaveAdminEmailConfigurationOp
        {
            get
            {
                var opBuilder = new Operation.SaveAdminEmailConfiguration.SaveAdminEmailConfigurationBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public DeleteAdminEmailConfiguration.DeleteAdminEmailConfigurationBuilder DeleteAdminEmailConfigurationOp
        {
            get
            {
                var opBuilder = new Operation.DeleteAdminEmailConfiguration.DeleteAdminEmailConfigurationBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public AdminGetServicesConfiguration.AdminGetServicesConfigurationBuilder AdminGetServicesConfigurationOp
        {
            get
            {
                var opBuilder = new Operation.AdminGetServicesConfiguration.AdminGetServicesConfigurationBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public AdminUpdateServicesConfiguration.AdminUpdateServicesConfigurationBuilder AdminUpdateServicesConfigurationOp
        {
            get
            {
                var opBuilder = new Operation.AdminUpdateServicesConfiguration.AdminUpdateServicesConfigurationBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public AdminResetServicesConfiguration.AdminResetServicesConfigurationBuilder AdminResetServicesConfigurationOp
        {
            get
            {
                var opBuilder = new Operation.AdminResetServicesConfiguration.AdminResetServicesConfigurationBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public AdminGetPlatformAccountClosureServicesConfiguration.AdminGetPlatformAccountClosureServicesConfigurationBuilder AdminGetPlatformAccountClosureServicesConfigurationOp
        {
            get
            {
                var opBuilder = new Operation.AdminGetPlatformAccountClosureServicesConfiguration.AdminGetPlatformAccountClosureServicesConfigurationBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public AdminUpdatePlatformAccountClosureServicesConfiguration.AdminUpdatePlatformAccountClosureServicesConfigurationBuilder AdminUpdatePlatformAccountClosureServicesConfigurationOp
        {
            get
            {
                var opBuilder = new Operation.AdminUpdatePlatformAccountClosureServicesConfiguration.AdminUpdatePlatformAccountClosureServicesConfigurationBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public AdminResetPlatformAccountClosureServicesConfiguration.AdminResetPlatformAccountClosureServicesConfigurationBuilder AdminResetPlatformAccountClosureServicesConfigurationOp
        {
            get
            {
                var opBuilder = new Operation.AdminResetPlatformAccountClosureServicesConfiguration.AdminResetPlatformAccountClosureServicesConfigurationBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        #endregion

        public GetAdminEmailConfiguration.Response GetAdminEmailConfiguration(GetAdminEmailConfiguration input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<GetAdminEmailConfiguration.Response> GetAdminEmailConfigurationAsync(GetAdminEmailConfiguration input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public UpdateAdminEmailConfiguration.Response UpdateAdminEmailConfiguration(UpdateAdminEmailConfiguration input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<UpdateAdminEmailConfiguration.Response> UpdateAdminEmailConfigurationAsync(UpdateAdminEmailConfiguration input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public SaveAdminEmailConfiguration.Response SaveAdminEmailConfiguration(SaveAdminEmailConfiguration input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<SaveAdminEmailConfiguration.Response> SaveAdminEmailConfigurationAsync(SaveAdminEmailConfiguration input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public DeleteAdminEmailConfiguration.Response DeleteAdminEmailConfiguration(DeleteAdminEmailConfiguration input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<DeleteAdminEmailConfiguration.Response> DeleteAdminEmailConfigurationAsync(DeleteAdminEmailConfiguration input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public AdminGetServicesConfiguration.Response AdminGetServicesConfiguration(AdminGetServicesConfiguration input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<AdminGetServicesConfiguration.Response> AdminGetServicesConfigurationAsync(AdminGetServicesConfiguration input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public AdminUpdateServicesConfiguration.Response AdminUpdateServicesConfiguration(AdminUpdateServicesConfiguration input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<AdminUpdateServicesConfiguration.Response> AdminUpdateServicesConfigurationAsync(AdminUpdateServicesConfiguration input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public AdminResetServicesConfiguration.Response AdminResetServicesConfiguration(AdminResetServicesConfiguration input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<AdminResetServicesConfiguration.Response> AdminResetServicesConfigurationAsync(AdminResetServicesConfiguration input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public AdminGetPlatformAccountClosureServicesConfiguration.Response AdminGetPlatformAccountClosureServicesConfiguration(AdminGetPlatformAccountClosureServicesConfiguration input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<AdminGetPlatformAccountClosureServicesConfiguration.Response> AdminGetPlatformAccountClosureServicesConfigurationAsync(AdminGetPlatformAccountClosureServicesConfiguration input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public AdminUpdatePlatformAccountClosureServicesConfiguration.Response AdminUpdatePlatformAccountClosureServicesConfiguration(AdminUpdatePlatformAccountClosureServicesConfiguration input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<AdminUpdatePlatformAccountClosureServicesConfiguration.Response> AdminUpdatePlatformAccountClosureServicesConfigurationAsync(AdminUpdatePlatformAccountClosureServicesConfiguration input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public AdminResetPlatformAccountClosureServicesConfiguration.Response AdminResetPlatformAccountClosureServicesConfiguration(AdminResetPlatformAccountClosureServicesConfiguration input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<AdminResetPlatformAccountClosureServicesConfiguration.Response> AdminResetPlatformAccountClosureServicesConfigurationAsync(AdminResetPlatformAccountClosureServicesConfiguration input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
    }
}