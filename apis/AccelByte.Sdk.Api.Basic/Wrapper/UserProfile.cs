// Copyright (c) 2022-2024 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// This code is generated by tool. DO NOT EDIT.
using System;
using System.Collections.Generic;
using System.Text;
using System.IO;
using System.Threading.Tasks;

using AccelByte.Sdk.Core;

using AccelByte.Sdk.Api.Basic.Model;
using AccelByte.Sdk.Api.Basic.Operation;

namespace AccelByte.Sdk.Api.Basic.Wrapper
{
    public class UserProfile
    {
        private readonly IAccelByteSdk _sdk;

        private string _CustomBasePath = String.Empty;

        public UserProfile(IAccelByteSdk sdk)
        {
            _sdk = sdk;
        }

        public UserProfile(IAccelByteSdk sdk, string customBasePath)
        {
            _sdk = sdk;
            _CustomBasePath = customBasePath;
        }

        #region Operation Builders
        public GetUserProfileInfoByPublicId.GetUserProfileInfoByPublicIdBuilder GetUserProfileInfoByPublicIdOp
        {
            get
            {
                var opBuilder = new Operation.GetUserProfileInfoByPublicId.GetUserProfileInfoByPublicIdBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public AdminGetUserProfilePublicInfoByIds.AdminGetUserProfilePublicInfoByIdsBuilder AdminGetUserProfilePublicInfoByIdsOp
        {
            get
            {
                var opBuilder = new Operation.AdminGetUserProfilePublicInfoByIds.AdminGetUserProfilePublicInfoByIdsBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public GetUserProfileInfo.GetUserProfileInfoBuilder GetUserProfileInfoOp
        {
            get
            {
                var opBuilder = new Operation.GetUserProfileInfo.GetUserProfileInfoBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public UpdateUserProfile.UpdateUserProfileBuilder UpdateUserProfileOp
        {
            get
            {
                var opBuilder = new Operation.UpdateUserProfile.UpdateUserProfileBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public DeleteUserProfile.DeleteUserProfileBuilder DeleteUserProfileOp
        {
            get
            {
                var opBuilder = new Operation.DeleteUserProfile.DeleteUserProfileBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public GetCustomAttributesInfo.GetCustomAttributesInfoBuilder GetCustomAttributesInfoOp
        {
            get
            {
                var opBuilder = new Operation.GetCustomAttributesInfo.GetCustomAttributesInfoBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public UpdateCustomAttributesPartially.UpdateCustomAttributesPartiallyBuilder UpdateCustomAttributesPartiallyOp
        {
            get
            {
                var opBuilder = new Operation.UpdateCustomAttributesPartially.UpdateCustomAttributesPartiallyBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public GetPrivateCustomAttributesInfo.GetPrivateCustomAttributesInfoBuilder GetPrivateCustomAttributesInfoOp
        {
            get
            {
                var opBuilder = new Operation.GetPrivateCustomAttributesInfo.GetPrivateCustomAttributesInfoBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public UpdatePrivateCustomAttributesPartially.UpdatePrivateCustomAttributesPartiallyBuilder UpdatePrivateCustomAttributesPartiallyOp
        {
            get
            {
                var opBuilder = new Operation.UpdatePrivateCustomAttributesPartially.UpdatePrivateCustomAttributesPartiallyBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public UpdateUserProfileStatus.UpdateUserProfileStatusBuilder UpdateUserProfileStatusOp
        {
            get
            {
                var opBuilder = new Operation.UpdateUserProfileStatus.UpdateUserProfileStatusBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public PublicGetUserProfilePublicInfoByIds.PublicGetUserProfilePublicInfoByIdsBuilder PublicGetUserProfilePublicInfoByIdsOp
        {
            get
            {
                var opBuilder = new Operation.PublicGetUserProfilePublicInfoByIds.PublicGetUserProfilePublicInfoByIdsBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public PublicBulkGetUserProfilePublicInfo.PublicBulkGetUserProfilePublicInfoBuilder PublicBulkGetUserProfilePublicInfoOp
        {
            get
            {
                var opBuilder = new Operation.PublicBulkGetUserProfilePublicInfo.PublicBulkGetUserProfilePublicInfoBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public PublicGetUserProfileInfoByPublicId.PublicGetUserProfileInfoByPublicIdBuilder PublicGetUserProfileInfoByPublicIdOp
        {
            get
            {
                var opBuilder = new Operation.PublicGetUserProfileInfoByPublicId.PublicGetUserProfileInfoByPublicIdBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public GetMyProfileInfo.GetMyProfileInfoBuilder GetMyProfileInfoOp
        {
            get
            {
                var opBuilder = new Operation.GetMyProfileInfo.GetMyProfileInfoBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public UpdateMyProfile.UpdateMyProfileBuilder UpdateMyProfileOp
        {
            get
            {
                var opBuilder = new Operation.UpdateMyProfile.UpdateMyProfileBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public CreateMyProfile.CreateMyProfileBuilder CreateMyProfileOp
        {
            get
            {
                var opBuilder = new Operation.CreateMyProfile.CreateMyProfileBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public GetMyPrivateCustomAttributesInfo.GetMyPrivateCustomAttributesInfoBuilder GetMyPrivateCustomAttributesInfoOp
        {
            get
            {
                var opBuilder = new Operation.GetMyPrivateCustomAttributesInfo.GetMyPrivateCustomAttributesInfoBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public UpdateMyPrivateCustomAttributesPartially.UpdateMyPrivateCustomAttributesPartiallyBuilder UpdateMyPrivateCustomAttributesPartiallyOp
        {
            get
            {
                var opBuilder = new Operation.UpdateMyPrivateCustomAttributesPartially.UpdateMyPrivateCustomAttributesPartiallyBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public GetMyZipCode.GetMyZipCodeBuilder GetMyZipCodeOp
        {
            get
            {
                var opBuilder = new Operation.GetMyZipCode.GetMyZipCodeBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public UpdateMyZipCode.UpdateMyZipCodeBuilder UpdateMyZipCodeOp
        {
            get
            {
                var opBuilder = new Operation.UpdateMyZipCode.UpdateMyZipCodeBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public PublicGetUserProfileInfo.PublicGetUserProfileInfoBuilder PublicGetUserProfileInfoOp
        {
            get
            {
                var opBuilder = new Operation.PublicGetUserProfileInfo.PublicGetUserProfileInfoBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public PublicUpdateUserProfile.PublicUpdateUserProfileBuilder PublicUpdateUserProfileOp
        {
            get
            {
                var opBuilder = new Operation.PublicUpdateUserProfile.PublicUpdateUserProfileBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public PublicCreateUserProfile.PublicCreateUserProfileBuilder PublicCreateUserProfileOp
        {
            get
            {
                var opBuilder = new Operation.PublicCreateUserProfile.PublicCreateUserProfileBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public PublicGetCustomAttributesInfo.PublicGetCustomAttributesInfoBuilder PublicGetCustomAttributesInfoOp
        {
            get
            {
                var opBuilder = new Operation.PublicGetCustomAttributesInfo.PublicGetCustomAttributesInfoBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public PublicUpdateCustomAttributesPartially.PublicUpdateCustomAttributesPartiallyBuilder PublicUpdateCustomAttributesPartiallyOp
        {
            get
            {
                var opBuilder = new Operation.PublicUpdateCustomAttributesPartially.PublicUpdateCustomAttributesPartiallyBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public PublicGetUserProfilePublicInfo.PublicGetUserProfilePublicInfoBuilder PublicGetUserProfilePublicInfoOp
        {
            get
            {
                var opBuilder = new Operation.PublicGetUserProfilePublicInfo.PublicGetUserProfilePublicInfoBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public PublicUpdateUserProfileStatus.PublicUpdateUserProfileStatusBuilder PublicUpdateUserProfileStatusOp
        {
            get
            {
                var opBuilder = new Operation.PublicUpdateUserProfileStatus.PublicUpdateUserProfileStatusBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        #endregion

        public GetUserProfileInfoByPublicId.Response GetUserProfileInfoByPublicId(GetUserProfileInfoByPublicId input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<GetUserProfileInfoByPublicId.Response> GetUserProfileInfoByPublicIdAsync(GetUserProfileInfoByPublicId input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }

        public GetUserProfileInfoByPublicId.Response<T1> GetUserProfileInfoByPublicId<T1>(GetUserProfileInfoByPublicId input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<GetUserProfileInfoByPublicId.Response<T1>> GetUserProfileInfoByPublicIdAsync<T1>(GetUserProfileInfoByPublicId input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public AdminGetUserProfilePublicInfoByIds.Response AdminGetUserProfilePublicInfoByIds(AdminGetUserProfilePublicInfoByIds input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<AdminGetUserProfilePublicInfoByIds.Response> AdminGetUserProfilePublicInfoByIdsAsync(AdminGetUserProfilePublicInfoByIds input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }

        public AdminGetUserProfilePublicInfoByIds.Response<T1> AdminGetUserProfilePublicInfoByIds<T1>(AdminGetUserProfilePublicInfoByIds input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<AdminGetUserProfilePublicInfoByIds.Response<T1>> AdminGetUserProfilePublicInfoByIdsAsync<T1>(AdminGetUserProfilePublicInfoByIds input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public GetUserProfileInfo.Response GetUserProfileInfo(GetUserProfileInfo input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<GetUserProfileInfo.Response> GetUserProfileInfoAsync(GetUserProfileInfo input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }

        public GetUserProfileInfo.Response<T1, T2> GetUserProfileInfo<T1, T2>(GetUserProfileInfo input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse<T1, T2>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<GetUserProfileInfo.Response<T1, T2>> GetUserProfileInfoAsync<T1, T2>(GetUserProfileInfo input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse<T1, T2>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public UpdateUserProfile.Response UpdateUserProfile(UpdateUserProfile input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<UpdateUserProfile.Response> UpdateUserProfileAsync(UpdateUserProfile input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }

        public UpdateUserProfile.Response<T1, T2> UpdateUserProfile<T1, T2>(UpdateUserProfile input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse<T1, T2>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<UpdateUserProfile.Response<T1, T2>> UpdateUserProfileAsync<T1, T2>(UpdateUserProfile input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse<T1, T2>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public DeleteUserProfile.Response DeleteUserProfile(DeleteUserProfile input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<DeleteUserProfile.Response> DeleteUserProfileAsync(DeleteUserProfile input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }

        public DeleteUserProfile.Response<T1, T2> DeleteUserProfile<T1, T2>(DeleteUserProfile input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse<T1, T2>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<DeleteUserProfile.Response<T1, T2>> DeleteUserProfileAsync<T1, T2>(DeleteUserProfile input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse<T1, T2>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public GetCustomAttributesInfo.Response GetCustomAttributesInfo(GetCustomAttributesInfo input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<GetCustomAttributesInfo.Response> GetCustomAttributesInfoAsync(GetCustomAttributesInfo input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public UpdateCustomAttributesPartially.Response UpdateCustomAttributesPartially(UpdateCustomAttributesPartially input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<UpdateCustomAttributesPartially.Response> UpdateCustomAttributesPartiallyAsync(UpdateCustomAttributesPartially input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public GetPrivateCustomAttributesInfo.Response GetPrivateCustomAttributesInfo(GetPrivateCustomAttributesInfo input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<GetPrivateCustomAttributesInfo.Response> GetPrivateCustomAttributesInfoAsync(GetPrivateCustomAttributesInfo input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public UpdatePrivateCustomAttributesPartially.Response UpdatePrivateCustomAttributesPartially(UpdatePrivateCustomAttributesPartially input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<UpdatePrivateCustomAttributesPartially.Response> UpdatePrivateCustomAttributesPartiallyAsync(UpdatePrivateCustomAttributesPartially input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public UpdateUserProfileStatus.Response UpdateUserProfileStatus(UpdateUserProfileStatus input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<UpdateUserProfileStatus.Response> UpdateUserProfileStatusAsync(UpdateUserProfileStatus input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }

        public UpdateUserProfileStatus.Response<T1, T2> UpdateUserProfileStatus<T1, T2>(UpdateUserProfileStatus input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse<T1, T2>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<UpdateUserProfileStatus.Response<T1, T2>> UpdateUserProfileStatusAsync<T1, T2>(UpdateUserProfileStatus input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse<T1, T2>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public PublicGetUserProfilePublicInfoByIds.Response PublicGetUserProfilePublicInfoByIds(PublicGetUserProfilePublicInfoByIds input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<PublicGetUserProfilePublicInfoByIds.Response> PublicGetUserProfilePublicInfoByIdsAsync(PublicGetUserProfilePublicInfoByIds input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }

        public PublicGetUserProfilePublicInfoByIds.Response<T1> PublicGetUserProfilePublicInfoByIds<T1>(PublicGetUserProfilePublicInfoByIds input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<PublicGetUserProfilePublicInfoByIds.Response<T1>> PublicGetUserProfilePublicInfoByIdsAsync<T1>(PublicGetUserProfilePublicInfoByIds input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public PublicBulkGetUserProfilePublicInfo.Response PublicBulkGetUserProfilePublicInfo(PublicBulkGetUserProfilePublicInfo input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<PublicBulkGetUserProfilePublicInfo.Response> PublicBulkGetUserProfilePublicInfoAsync(PublicBulkGetUserProfilePublicInfo input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }

        public PublicBulkGetUserProfilePublicInfo.Response<T1> PublicBulkGetUserProfilePublicInfo<T1>(PublicBulkGetUserProfilePublicInfo input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<PublicBulkGetUserProfilePublicInfo.Response<T1>> PublicBulkGetUserProfilePublicInfoAsync<T1>(PublicBulkGetUserProfilePublicInfo input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public PublicGetUserProfileInfoByPublicId.Response PublicGetUserProfileInfoByPublicId(PublicGetUserProfileInfoByPublicId input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<PublicGetUserProfileInfoByPublicId.Response> PublicGetUserProfileInfoByPublicIdAsync(PublicGetUserProfileInfoByPublicId input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }

        public PublicGetUserProfileInfoByPublicId.Response<T1> PublicGetUserProfileInfoByPublicId<T1>(PublicGetUserProfileInfoByPublicId input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<PublicGetUserProfileInfoByPublicId.Response<T1>> PublicGetUserProfileInfoByPublicIdAsync<T1>(PublicGetUserProfileInfoByPublicId input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public GetMyProfileInfo.Response GetMyProfileInfo(GetMyProfileInfo input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<GetMyProfileInfo.Response> GetMyProfileInfoAsync(GetMyProfileInfo input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }

        public GetMyProfileInfo.Response<T1, T2> GetMyProfileInfo<T1, T2>(GetMyProfileInfo input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse<T1, T2>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<GetMyProfileInfo.Response<T1, T2>> GetMyProfileInfoAsync<T1, T2>(GetMyProfileInfo input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse<T1, T2>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public UpdateMyProfile.Response UpdateMyProfile(UpdateMyProfile input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<UpdateMyProfile.Response> UpdateMyProfileAsync(UpdateMyProfile input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }

        public UpdateMyProfile.Response<T1, T2> UpdateMyProfile<T1, T2>(UpdateMyProfile input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse<T1, T2>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<UpdateMyProfile.Response<T1, T2>> UpdateMyProfileAsync<T1, T2>(UpdateMyProfile input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse<T1, T2>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public CreateMyProfile.Response CreateMyProfile(CreateMyProfile input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<CreateMyProfile.Response> CreateMyProfileAsync(CreateMyProfile input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }

        public CreateMyProfile.Response<T1, T2> CreateMyProfile<T1, T2>(CreateMyProfile input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse<T1, T2>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<CreateMyProfile.Response<T1, T2>> CreateMyProfileAsync<T1, T2>(CreateMyProfile input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse<T1, T2>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public GetMyPrivateCustomAttributesInfo.Response GetMyPrivateCustomAttributesInfo(GetMyPrivateCustomAttributesInfo input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<GetMyPrivateCustomAttributesInfo.Response> GetMyPrivateCustomAttributesInfoAsync(GetMyPrivateCustomAttributesInfo input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public UpdateMyPrivateCustomAttributesPartially.Response UpdateMyPrivateCustomAttributesPartially(UpdateMyPrivateCustomAttributesPartially input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<UpdateMyPrivateCustomAttributesPartially.Response> UpdateMyPrivateCustomAttributesPartiallyAsync(UpdateMyPrivateCustomAttributesPartially input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public GetMyZipCode.Response GetMyZipCode(GetMyZipCode input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<GetMyZipCode.Response> GetMyZipCodeAsync(GetMyZipCode input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public UpdateMyZipCode.Response UpdateMyZipCode(UpdateMyZipCode input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<UpdateMyZipCode.Response> UpdateMyZipCodeAsync(UpdateMyZipCode input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public PublicGetUserProfileInfo.Response PublicGetUserProfileInfo(PublicGetUserProfileInfo input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<PublicGetUserProfileInfo.Response> PublicGetUserProfileInfoAsync(PublicGetUserProfileInfo input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }

        public PublicGetUserProfileInfo.Response<T1> PublicGetUserProfileInfo<T1>(PublicGetUserProfileInfo input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<PublicGetUserProfileInfo.Response<T1>> PublicGetUserProfileInfoAsync<T1>(PublicGetUserProfileInfo input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public PublicUpdateUserProfile.Response PublicUpdateUserProfile(PublicUpdateUserProfile input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<PublicUpdateUserProfile.Response> PublicUpdateUserProfileAsync(PublicUpdateUserProfile input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }

        public PublicUpdateUserProfile.Response<T1> PublicUpdateUserProfile<T1>(PublicUpdateUserProfile input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<PublicUpdateUserProfile.Response<T1>> PublicUpdateUserProfileAsync<T1>(PublicUpdateUserProfile input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public PublicCreateUserProfile.Response PublicCreateUserProfile(PublicCreateUserProfile input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<PublicCreateUserProfile.Response> PublicCreateUserProfileAsync(PublicCreateUserProfile input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }

        public PublicCreateUserProfile.Response<T1> PublicCreateUserProfile<T1>(PublicCreateUserProfile input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<PublicCreateUserProfile.Response<T1>> PublicCreateUserProfileAsync<T1>(PublicCreateUserProfile input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public PublicGetCustomAttributesInfo.Response PublicGetCustomAttributesInfo(PublicGetCustomAttributesInfo input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<PublicGetCustomAttributesInfo.Response> PublicGetCustomAttributesInfoAsync(PublicGetCustomAttributesInfo input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public PublicUpdateCustomAttributesPartially.Response PublicUpdateCustomAttributesPartially(PublicUpdateCustomAttributesPartially input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<PublicUpdateCustomAttributesPartially.Response> PublicUpdateCustomAttributesPartiallyAsync(PublicUpdateCustomAttributesPartially input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public PublicGetUserProfilePublicInfo.Response PublicGetUserProfilePublicInfo(PublicGetUserProfilePublicInfo input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<PublicGetUserProfilePublicInfo.Response> PublicGetUserProfilePublicInfoAsync(PublicGetUserProfilePublicInfo input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }

        public PublicGetUserProfilePublicInfo.Response<T1> PublicGetUserProfilePublicInfo<T1>(PublicGetUserProfilePublicInfo input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<PublicGetUserProfilePublicInfo.Response<T1>> PublicGetUserProfilePublicInfoAsync<T1>(PublicGetUserProfilePublicInfo input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public PublicUpdateUserProfileStatus.Response PublicUpdateUserProfileStatus(PublicUpdateUserProfileStatus input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<PublicUpdateUserProfileStatus.Response> PublicUpdateUserProfileStatusAsync(PublicUpdateUserProfileStatus input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }

        public PublicUpdateUserProfileStatus.Response<T1> PublicUpdateUserProfileStatus<T1>(PublicUpdateUserProfileStatus input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<PublicUpdateUserProfileStatus.Response<T1>> PublicUpdateUserProfileStatusAsync<T1>(PublicUpdateUserProfileStatus input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
    }
}