// Copyright (c) 2022-2024 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// This code is generated by tool. DO NOT EDIT.
using System;
using System.Collections.Generic;
using System.Text;
using System.IO;
using System.Threading.Tasks;

using AccelByte.Sdk.Core;

using AccelByte.Sdk.Api.Basic.Model;
using AccelByte.Sdk.Api.Basic.Operation;

namespace AccelByte.Sdk.Api.Basic.Wrapper
{
    public class UserProfile
    {
        private readonly IAccelByteSdk _sdk;

        private string _CustomBasePath = String.Empty;

        public UserProfile(IAccelByteSdk sdk)
        {
            _sdk = sdk;
        }

        public UserProfile(IAccelByteSdk sdk, string customBasePath)
        {
            _sdk = sdk;
            _CustomBasePath = customBasePath;
        }

        #region Operation Builders
        public GetUserProfileInfoByPublicId.GetUserProfileInfoByPublicIdBuilder GetUserProfileInfoByPublicIdOp
        {
            get
            {
                var opBuilder = new Operation.GetUserProfileInfoByPublicId.GetUserProfileInfoByPublicIdBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public AdminGetUserProfilePublicInfoByIds.AdminGetUserProfilePublicInfoByIdsBuilder AdminGetUserProfilePublicInfoByIdsOp
        {
            get
            {
                var opBuilder = new Operation.AdminGetUserProfilePublicInfoByIds.AdminGetUserProfilePublicInfoByIdsBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public GetUserProfileInfo.GetUserProfileInfoBuilder GetUserProfileInfoOp
        {
            get
            {
                var opBuilder = new Operation.GetUserProfileInfo.GetUserProfileInfoBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public UpdateUserProfile.UpdateUserProfileBuilder UpdateUserProfileOp
        {
            get
            {
                var opBuilder = new Operation.UpdateUserProfile.UpdateUserProfileBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public DeleteUserProfile.DeleteUserProfileBuilder DeleteUserProfileOp
        {
            get
            {
                var opBuilder = new Operation.DeleteUserProfile.DeleteUserProfileBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public GetCustomAttributesInfo.GetCustomAttributesInfoBuilder GetCustomAttributesInfoOp
        {
            get
            {
                var opBuilder = new Operation.GetCustomAttributesInfo.GetCustomAttributesInfoBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public UpdateCustomAttributesPartially.UpdateCustomAttributesPartiallyBuilder UpdateCustomAttributesPartiallyOp
        {
            get
            {
                var opBuilder = new Operation.UpdateCustomAttributesPartially.UpdateCustomAttributesPartiallyBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public GetPrivateCustomAttributesInfo.GetPrivateCustomAttributesInfoBuilder GetPrivateCustomAttributesInfoOp
        {
            get
            {
                var opBuilder = new Operation.GetPrivateCustomAttributesInfo.GetPrivateCustomAttributesInfoBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public UpdatePrivateCustomAttributesPartially.UpdatePrivateCustomAttributesPartiallyBuilder UpdatePrivateCustomAttributesPartiallyOp
        {
            get
            {
                var opBuilder = new Operation.UpdatePrivateCustomAttributesPartially.UpdatePrivateCustomAttributesPartiallyBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public UpdateUserProfileStatus.UpdateUserProfileStatusBuilder UpdateUserProfileStatusOp
        {
            get
            {
                var opBuilder = new Operation.UpdateUserProfileStatus.UpdateUserProfileStatusBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public PublicGetUserProfilePublicInfoByIds.PublicGetUserProfilePublicInfoByIdsBuilder PublicGetUserProfilePublicInfoByIdsOp
        {
            get
            {
                var opBuilder = new Operation.PublicGetUserProfilePublicInfoByIds.PublicGetUserProfilePublicInfoByIdsBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public PublicBulkGetUserProfilePublicInfo.PublicBulkGetUserProfilePublicInfoBuilder PublicBulkGetUserProfilePublicInfoOp
        {
            get
            {
                var opBuilder = new Operation.PublicBulkGetUserProfilePublicInfo.PublicBulkGetUserProfilePublicInfoBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public PublicGetUserProfileInfoByPublicId.PublicGetUserProfileInfoByPublicIdBuilder PublicGetUserProfileInfoByPublicIdOp
        {
            get
            {
                var opBuilder = new Operation.PublicGetUserProfileInfoByPublicId.PublicGetUserProfileInfoByPublicIdBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public GetMyProfileInfo.GetMyProfileInfoBuilder GetMyProfileInfoOp
        {
            get
            {
                var opBuilder = new Operation.GetMyProfileInfo.GetMyProfileInfoBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public UpdateMyProfile.UpdateMyProfileBuilder UpdateMyProfileOp
        {
            get
            {
                var opBuilder = new Operation.UpdateMyProfile.UpdateMyProfileBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public CreateMyProfile.CreateMyProfileBuilder CreateMyProfileOp
        {
            get
            {
                var opBuilder = new Operation.CreateMyProfile.CreateMyProfileBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public GetMyPrivateCustomAttributesInfo.GetMyPrivateCustomAttributesInfoBuilder GetMyPrivateCustomAttributesInfoOp
        {
            get
            {
                var opBuilder = new Operation.GetMyPrivateCustomAttributesInfo.GetMyPrivateCustomAttributesInfoBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public UpdateMyPrivateCustomAttributesPartially.UpdateMyPrivateCustomAttributesPartiallyBuilder UpdateMyPrivateCustomAttributesPartiallyOp
        {
            get
            {
                var opBuilder = new Operation.UpdateMyPrivateCustomAttributesPartially.UpdateMyPrivateCustomAttributesPartiallyBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public GetMyZipCode.GetMyZipCodeBuilder GetMyZipCodeOp
        {
            get
            {
                var opBuilder = new Operation.GetMyZipCode.GetMyZipCodeBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public UpdateMyZipCode.UpdateMyZipCodeBuilder UpdateMyZipCodeOp
        {
            get
            {
                var opBuilder = new Operation.UpdateMyZipCode.UpdateMyZipCodeBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public PublicGetUserProfileInfo.PublicGetUserProfileInfoBuilder PublicGetUserProfileInfoOp
        {
            get
            {
                var opBuilder = new Operation.PublicGetUserProfileInfo.PublicGetUserProfileInfoBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public PublicUpdateUserProfile.PublicUpdateUserProfileBuilder PublicUpdateUserProfileOp
        {
            get
            {
                var opBuilder = new Operation.PublicUpdateUserProfile.PublicUpdateUserProfileBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public PublicCreateUserProfile.PublicCreateUserProfileBuilder PublicCreateUserProfileOp
        {
            get
            {
                var opBuilder = new Operation.PublicCreateUserProfile.PublicCreateUserProfileBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public PublicGetCustomAttributesInfo.PublicGetCustomAttributesInfoBuilder PublicGetCustomAttributesInfoOp
        {
            get
            {
                var opBuilder = new Operation.PublicGetCustomAttributesInfo.PublicGetCustomAttributesInfoBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public PublicUpdateCustomAttributesPartially.PublicUpdateCustomAttributesPartiallyBuilder PublicUpdateCustomAttributesPartiallyOp
        {
            get
            {
                var opBuilder = new Operation.PublicUpdateCustomAttributesPartially.PublicUpdateCustomAttributesPartiallyBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public PublicGetUserProfilePublicInfo.PublicGetUserProfilePublicInfoBuilder PublicGetUserProfilePublicInfoOp
        {
            get
            {
                var opBuilder = new Operation.PublicGetUserProfilePublicInfo.PublicGetUserProfilePublicInfoBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public PublicUpdateUserProfileStatus.PublicUpdateUserProfileStatusBuilder PublicUpdateUserProfileStatusOp
        {
            get
            {
                var opBuilder = new Operation.PublicUpdateUserProfileStatus.PublicUpdateUserProfileStatusBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        #endregion

        public Model.UserProfileInfo? GetUserProfileInfoByPublicId(GetUserProfileInfoByPublicId input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.UserProfileInfo?> GetUserProfileInfoByPublicIdAsync(GetUserProfileInfoByPublicId input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }

        public Model.UserProfileInfo<T1>? GetUserProfileInfoByPublicId<T1>(GetUserProfileInfoByPublicId input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.UserProfileInfo<T1>?> GetUserProfileInfoByPublicIdAsync<T1>(GetUserProfileInfoByPublicId input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public List<Model.UserProfilePublicInfo>? AdminGetUserProfilePublicInfoByIds(AdminGetUserProfilePublicInfoByIds input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<List<Model.UserProfilePublicInfo>?> AdminGetUserProfilePublicInfoByIdsAsync(AdminGetUserProfilePublicInfoByIds input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }

        public List<Model.UserProfilePublicInfo<T1>>? AdminGetUserProfilePublicInfoByIds<T1>(AdminGetUserProfilePublicInfoByIds input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<List<Model.UserProfilePublicInfo<T1>>?> AdminGetUserProfilePublicInfoByIdsAsync<T1>(AdminGetUserProfilePublicInfoByIds input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.UserProfilePrivateInfo? GetUserProfileInfo(GetUserProfileInfo input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.UserProfilePrivateInfo?> GetUserProfileInfoAsync(GetUserProfileInfo input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }

        public Model.UserProfilePrivateInfo<T1, T2>? GetUserProfileInfo<T1, T2>(GetUserProfileInfo input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse<T1, T2>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.UserProfilePrivateInfo<T1, T2>?> GetUserProfileInfoAsync<T1, T2>(GetUserProfileInfo input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse<T1, T2>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.UserProfilePrivateInfo? UpdateUserProfile(UpdateUserProfile input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.UserProfilePrivateInfo?> UpdateUserProfileAsync(UpdateUserProfile input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }

        public Model.UserProfilePrivateInfo<T1, T2>? UpdateUserProfile<T1, T2>(UpdateUserProfile input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse<T1, T2>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.UserProfilePrivateInfo<T1, T2>?> UpdateUserProfileAsync<T1, T2>(UpdateUserProfile input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse<T1, T2>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.UserProfilePrivateInfo? DeleteUserProfile(DeleteUserProfile input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.UserProfilePrivateInfo?> DeleteUserProfileAsync(DeleteUserProfile input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }

        public Model.UserProfilePrivateInfo<T1, T2>? DeleteUserProfile<T1, T2>(DeleteUserProfile input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse<T1, T2>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.UserProfilePrivateInfo<T1, T2>?> DeleteUserProfileAsync<T1, T2>(DeleteUserProfile input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse<T1, T2>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Dictionary<string, object>? GetCustomAttributesInfo(GetCustomAttributesInfo input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Dictionary<string, object>?> GetCustomAttributesInfoAsync(GetCustomAttributesInfo input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Dictionary<string, object>? UpdateCustomAttributesPartially(UpdateCustomAttributesPartially input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Dictionary<string, object>?> UpdateCustomAttributesPartiallyAsync(UpdateCustomAttributesPartially input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Dictionary<string, object>? GetPrivateCustomAttributesInfo(GetPrivateCustomAttributesInfo input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Dictionary<string, object>?> GetPrivateCustomAttributesInfoAsync(GetPrivateCustomAttributesInfo input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Dictionary<string, object>? UpdatePrivateCustomAttributesPartially(UpdatePrivateCustomAttributesPartially input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Dictionary<string, object>?> UpdatePrivateCustomAttributesPartiallyAsync(UpdatePrivateCustomAttributesPartially input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.UserProfilePrivateInfo? UpdateUserProfileStatus(UpdateUserProfileStatus input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.UserProfilePrivateInfo?> UpdateUserProfileStatusAsync(UpdateUserProfileStatus input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }

        public Model.UserProfilePrivateInfo<T1, T2>? UpdateUserProfileStatus<T1, T2>(UpdateUserProfileStatus input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse<T1, T2>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.UserProfilePrivateInfo<T1, T2>?> UpdateUserProfileStatusAsync<T1, T2>(UpdateUserProfileStatus input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse<T1, T2>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public List<Model.UserProfilePublicInfo>? PublicGetUserProfilePublicInfoByIds(PublicGetUserProfilePublicInfoByIds input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<List<Model.UserProfilePublicInfo>?> PublicGetUserProfilePublicInfoByIdsAsync(PublicGetUserProfilePublicInfoByIds input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }

        public List<Model.UserProfilePublicInfo<T1>>? PublicGetUserProfilePublicInfoByIds<T1>(PublicGetUserProfilePublicInfoByIds input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<List<Model.UserProfilePublicInfo<T1>>?> PublicGetUserProfilePublicInfoByIdsAsync<T1>(PublicGetUserProfilePublicInfoByIds input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public List<Model.UserProfilePublicInfo>? PublicBulkGetUserProfilePublicInfo(PublicBulkGetUserProfilePublicInfo input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<List<Model.UserProfilePublicInfo>?> PublicBulkGetUserProfilePublicInfoAsync(PublicBulkGetUserProfilePublicInfo input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }

        public List<Model.UserProfilePublicInfo<T1>>? PublicBulkGetUserProfilePublicInfo<T1>(PublicBulkGetUserProfilePublicInfo input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<List<Model.UserProfilePublicInfo<T1>>?> PublicBulkGetUserProfilePublicInfoAsync<T1>(PublicBulkGetUserProfilePublicInfo input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.UserProfilePublicInfo? PublicGetUserProfileInfoByPublicId(PublicGetUserProfileInfoByPublicId input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.UserProfilePublicInfo?> PublicGetUserProfileInfoByPublicIdAsync(PublicGetUserProfileInfoByPublicId input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }

        public Model.UserProfilePublicInfo<T1>? PublicGetUserProfileInfoByPublicId<T1>(PublicGetUserProfileInfoByPublicId input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.UserProfilePublicInfo<T1>?> PublicGetUserProfileInfoByPublicIdAsync<T1>(PublicGetUserProfileInfoByPublicId input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.UserProfilePrivateInfo? GetMyProfileInfo(GetMyProfileInfo input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.UserProfilePrivateInfo?> GetMyProfileInfoAsync(GetMyProfileInfo input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }

        public Model.UserProfilePrivateInfo<T1, T2>? GetMyProfileInfo<T1, T2>(GetMyProfileInfo input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse<T1, T2>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.UserProfilePrivateInfo<T1, T2>?> GetMyProfileInfoAsync<T1, T2>(GetMyProfileInfo input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse<T1, T2>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.UserProfilePrivateInfo? UpdateMyProfile(UpdateMyProfile input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.UserProfilePrivateInfo?> UpdateMyProfileAsync(UpdateMyProfile input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }

        public Model.UserProfilePrivateInfo<T1, T2>? UpdateMyProfile<T1, T2>(UpdateMyProfile input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse<T1, T2>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.UserProfilePrivateInfo<T1, T2>?> UpdateMyProfileAsync<T1, T2>(UpdateMyProfile input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse<T1, T2>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.UserProfilePrivateInfo? CreateMyProfile(CreateMyProfile input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.UserProfilePrivateInfo?> CreateMyProfileAsync(CreateMyProfile input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }

        public Model.UserProfilePrivateInfo<T1, T2>? CreateMyProfile<T1, T2>(CreateMyProfile input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse<T1, T2>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.UserProfilePrivateInfo<T1, T2>?> CreateMyProfileAsync<T1, T2>(CreateMyProfile input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse<T1, T2>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Dictionary<string, object>? GetMyPrivateCustomAttributesInfo(GetMyPrivateCustomAttributesInfo input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Dictionary<string, object>?> GetMyPrivateCustomAttributesInfoAsync(GetMyPrivateCustomAttributesInfo input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Dictionary<string, object>? UpdateMyPrivateCustomAttributesPartially(UpdateMyPrivateCustomAttributesPartially input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Dictionary<string, object>?> UpdateMyPrivateCustomAttributesPartiallyAsync(UpdateMyPrivateCustomAttributesPartially input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.UserZipCode? GetMyZipCode(GetMyZipCode input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.UserZipCode?> GetMyZipCodeAsync(GetMyZipCode input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.UserZipCode? UpdateMyZipCode(UpdateMyZipCode input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.UserZipCode?> UpdateMyZipCodeAsync(UpdateMyZipCode input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.UserProfileInfo? PublicGetUserProfileInfo(PublicGetUserProfileInfo input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.UserProfileInfo?> PublicGetUserProfileInfoAsync(PublicGetUserProfileInfo input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }

        public Model.UserProfileInfo<T1>? PublicGetUserProfileInfo<T1>(PublicGetUserProfileInfo input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.UserProfileInfo<T1>?> PublicGetUserProfileInfoAsync<T1>(PublicGetUserProfileInfo input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.UserProfileInfo? PublicUpdateUserProfile(PublicUpdateUserProfile input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.UserProfileInfo?> PublicUpdateUserProfileAsync(PublicUpdateUserProfile input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }

        public Model.UserProfileInfo<T1>? PublicUpdateUserProfile<T1>(PublicUpdateUserProfile input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.UserProfileInfo<T1>?> PublicUpdateUserProfileAsync<T1>(PublicUpdateUserProfile input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.UserProfileInfo? PublicCreateUserProfile(PublicCreateUserProfile input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.UserProfileInfo?> PublicCreateUserProfileAsync(PublicCreateUserProfile input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }

        public Model.UserProfileInfo<T1>? PublicCreateUserProfile<T1>(PublicCreateUserProfile input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.UserProfileInfo<T1>?> PublicCreateUserProfileAsync<T1>(PublicCreateUserProfile input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Dictionary<string, object>? PublicGetCustomAttributesInfo(PublicGetCustomAttributesInfo input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Dictionary<string, object>?> PublicGetCustomAttributesInfoAsync(PublicGetCustomAttributesInfo input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Dictionary<string, object>? PublicUpdateCustomAttributesPartially(PublicUpdateCustomAttributesPartially input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Dictionary<string, object>?> PublicUpdateCustomAttributesPartiallyAsync(PublicUpdateCustomAttributesPartially input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.UserProfilePublicInfo? PublicGetUserProfilePublicInfo(PublicGetUserProfilePublicInfo input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.UserProfilePublicInfo?> PublicGetUserProfilePublicInfoAsync(PublicGetUserProfilePublicInfo input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }

        public Model.UserProfilePublicInfo<T1>? PublicGetUserProfilePublicInfo<T1>(PublicGetUserProfilePublicInfo input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.UserProfilePublicInfo<T1>?> PublicGetUserProfilePublicInfoAsync<T1>(PublicGetUserProfilePublicInfo input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.UserProfileInfo? PublicUpdateUserProfileStatus(PublicUpdateUserProfileStatus input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.UserProfileInfo?> PublicUpdateUserProfileStatusAsync(PublicUpdateUserProfileStatus input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }

        public Model.UserProfileInfo<T1>? PublicUpdateUserProfileStatus<T1>(PublicUpdateUserProfileStatus input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.UserProfileInfo<T1>?> PublicUpdateUserProfileStatusAsync<T1>(PublicUpdateUserProfileStatus input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
    }
}