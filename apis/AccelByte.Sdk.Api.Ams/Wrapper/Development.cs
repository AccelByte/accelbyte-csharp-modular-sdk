// Copyright (c) 2022-2024 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// This code is generated by tool. DO NOT EDIT.
using System;
using System.Collections.Generic;
using System.Text;
using System.IO;
using System.Threading.Tasks;

using AccelByte.Sdk.Core;

using AccelByte.Sdk.Api.Ams.Model;
using AccelByte.Sdk.Api.Ams.Operation;

namespace AccelByte.Sdk.Api.Ams.Wrapper
{
    public class Development
    {
        private readonly IAccelByteSdk _sdk;

        public Development(IAccelByteSdk sdk)
        {
            _sdk = sdk;
        }

        #region Operation Builders
        public DevelopmentServerConfigurationList.DevelopmentServerConfigurationListBuilder DevelopmentServerConfigurationListOp
        {
            get { return new Operation.DevelopmentServerConfigurationList.DevelopmentServerConfigurationListBuilder(_sdk); }
        }
        public DevelopmentServerConfigurationCreate.DevelopmentServerConfigurationCreateBuilder DevelopmentServerConfigurationCreateOp
        {
            get { return new Operation.DevelopmentServerConfigurationCreate.DevelopmentServerConfigurationCreateBuilder(_sdk); }
        }
        public DevelopmentServerConfigurationGet.DevelopmentServerConfigurationGetBuilder DevelopmentServerConfigurationGetOp
        {
            get { return new Operation.DevelopmentServerConfigurationGet.DevelopmentServerConfigurationGetBuilder(_sdk); }
        }
        public DevelopmentServerConfigurationDelete.DevelopmentServerConfigurationDeleteBuilder DevelopmentServerConfigurationDeleteOp
        {
            get { return new Operation.DevelopmentServerConfigurationDelete.DevelopmentServerConfigurationDeleteBuilder(_sdk); }
        }
        #endregion

        public List<Model.ApiDevelopmentServerConfigurationGetResponse>? DevelopmentServerConfigurationList(DevelopmentServerConfigurationList input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<List<Model.ApiDevelopmentServerConfigurationGetResponse>?> DevelopmentServerConfigurationListAsync(DevelopmentServerConfigurationList input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.ApiDevelopmentServerConfigurationCreateResponse? DevelopmentServerConfigurationCreate(DevelopmentServerConfigurationCreate input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.ApiDevelopmentServerConfigurationCreateResponse?> DevelopmentServerConfigurationCreateAsync(DevelopmentServerConfigurationCreate input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.ApiDevelopmentServerConfigurationGetResponse? DevelopmentServerConfigurationGet(DevelopmentServerConfigurationGet input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.ApiDevelopmentServerConfigurationGetResponse?> DevelopmentServerConfigurationGetAsync(DevelopmentServerConfigurationGet input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public void DevelopmentServerConfigurationDelete(DevelopmentServerConfigurationDelete input)
        {
            var response = _sdk.RunRequest(input);
            input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task DevelopmentServerConfigurationDeleteAsync(DevelopmentServerConfigurationDelete input)
        {
            var response = await _sdk.RunRequestAsync(input);
            input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
    }
}