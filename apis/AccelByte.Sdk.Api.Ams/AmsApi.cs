// Copyright (c) 2023 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// This code is generated by tool. DO NOT EDIT.
using System;

using AccelByte.Sdk.Core;

using AccelByte.Sdk.Api.Ams;

namespace AccelByte.Sdk.Api.Ams
{
    public class AmsApi : ISdkApi
    {
        private IAccelByteSdk _Sdk;

        private string _CustomBasePath = String.Empty;

        public Wrapper.Auth Auth
        {
            get
            {
                if (_Auth == null)
                    _Auth = new Wrapper.Auth(_Sdk, _CustomBasePath);
                return _Auth;
            }
        }
        private Wrapper.Auth? _Auth = null;

        public Wrapper.FleetCommander FleetCommander
        {
            get
            {
                if (_FleetCommander == null)
                    _FleetCommander = new Wrapper.FleetCommander(_Sdk, _CustomBasePath);
                return _FleetCommander;
            }
        }
        private Wrapper.FleetCommander? _FleetCommander = null;

        public Wrapper.Account Account
        {
            get
            {
                if (_Account == null)
                    _Account = new Wrapper.Account(_Sdk, _CustomBasePath);
                return _Account;
            }
        }
        private Wrapper.Account? _Account = null;

        public Wrapper.Artifacts Artifacts
        {
            get
            {
                if (_Artifacts == null)
                    _Artifacts = new Wrapper.Artifacts(_Sdk, _CustomBasePath);
                return _Artifacts;
            }
        }
        private Wrapper.Artifacts? _Artifacts = null;

        public Wrapper.Development Development
        {
            get
            {
                if (_Development == null)
                    _Development = new Wrapper.Development(_Sdk, _CustomBasePath);
                return _Development;
            }
        }
        private Wrapper.Development? _Development = null;

        public Wrapper.Fleets Fleets
        {
            get
            {
                if (_Fleets == null)
                    _Fleets = new Wrapper.Fleets(_Sdk, _CustomBasePath);
                return _Fleets;
            }
        }
        private Wrapper.Fleets? _Fleets = null;

        public Wrapper.Servers Servers
        {
            get
            {
                if (_Servers == null)
                    _Servers = new Wrapper.Servers(_Sdk, _CustomBasePath);
                return _Servers;
            }
        }
        private Wrapper.Servers? _Servers = null;

        public Wrapper.Images Images
        {
            get
            {
                if (_Images == null)
                    _Images = new Wrapper.Images(_Sdk, _CustomBasePath);
                return _Images;
            }
        }
        private Wrapper.Images? _Images = null;

        public Wrapper.AMSQoS AMSQoS
        {
            get
            {
                if (_AMSQoS == null)
                    _AMSQoS = new Wrapper.AMSQoS(_Sdk, _CustomBasePath);
                return _AMSQoS;
            }
        }
        private Wrapper.AMSQoS? _AMSQoS = null;

        public Wrapper.AMSInfo AMSInfo
        {
            get
            {
                if (_AMSInfo == null)
                    _AMSInfo = new Wrapper.AMSInfo(_Sdk, _CustomBasePath);
                return _AMSInfo;
            }
        }
        private Wrapper.AMSInfo? _AMSInfo = null;

        public Wrapper.Watchdogs Watchdogs
        {
            get
            {
                if (_Watchdogs == null)
                    _Watchdogs = new Wrapper.Watchdogs(_Sdk, _CustomBasePath);
                return _Watchdogs;
            }
        }
        private Wrapper.Watchdogs? _Watchdogs = null;

        internal AmsApi(IAccelByteSdk sdk)
        {
            _Sdk = sdk;
        }

        public AmsApi WithCustomBasePath(string value)
        {
            _CustomBasePath = value;
            return this;
        }
    }
}

namespace AccelByte.Sdk.Api
{
    public static class AmsApi_SdkExts
    {
        public static AmsApi GetAmsApi(this IAccelByteSdk sdk)
        {
            return sdk.GetApi<AmsApi>("ams", () =>
            {
                string customPath = sdk.Configuration.ConfigRepository.GetCustomServiceBasePath("ams");
                if (customPath != "")
                    return (new AmsApi(sdk)).WithCustomBasePath(customPath);
                else
                    return new AmsApi(sdk);
            });
        }
    }
}