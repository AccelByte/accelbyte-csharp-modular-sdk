// Copyright (c) 2022-2024 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// This code is generated by tool. DO NOT EDIT.
using System;
using System.Collections.Generic;
using System.Text;
using System.IO;
using System.Threading.Tasks;

using AccelByte.Sdk.Core;

using AccelByte.Sdk.Api.Reporting.Model;
using AccelByte.Sdk.Api.Reporting.Operation;

namespace AccelByte.Sdk.Api.Reporting.Wrapper
{
    public class AdminTickets
    {
        private readonly IAccelByteSdk _sdk;

        public AdminTickets(IAccelByteSdk sdk)
        {
            _sdk = sdk;
        }

        #region Operation Builders
        public ListTickets.ListTicketsBuilder ListTicketsOp
        {
            get { return new Operation.ListTickets.ListTicketsBuilder(_sdk); }
        }
        public TicketStatistic.TicketStatisticBuilder TicketStatisticOp
        {
            get { return new Operation.TicketStatistic.TicketStatisticBuilder(_sdk); }
        }
        public GetTicketDetail.GetTicketDetailBuilder GetTicketDetailOp
        {
            get { return new Operation.GetTicketDetail.GetTicketDetailBuilder(_sdk); }
        }
        public DeleteTicket.DeleteTicketBuilder DeleteTicketOp
        {
            get { return new Operation.DeleteTicket.DeleteTicketBuilder(_sdk); }
        }
        public GetReportsByTicket.GetReportsByTicketBuilder GetReportsByTicketOp
        {
            get { return new Operation.GetReportsByTicket.GetReportsByTicketBuilder(_sdk); }
        }
        public UpdateTicketResolutions.UpdateTicketResolutionsBuilder UpdateTicketResolutionsOp
        {
            get { return new Operation.UpdateTicketResolutions.UpdateTicketResolutionsBuilder(_sdk); }
        }
        #endregion

        public Model.RestapiTicketListResponse? ListTickets(ListTickets input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.RestapiTicketListResponse?> ListTicketsAsync(ListTickets input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.RestapiTicketStatisticResponse? TicketStatistic(TicketStatistic input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.RestapiTicketStatisticResponse?> TicketStatisticAsync(TicketStatistic input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.RestapiTicketResponse? GetTicketDetail(GetTicketDetail input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.RestapiTicketResponse?> GetTicketDetailAsync(GetTicketDetail input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public void DeleteTicket(DeleteTicket input)
        {
            var response = _sdk.RunRequest(input);
            input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task DeleteTicketAsync(DeleteTicket input)
        {
            var response = await _sdk.RunRequestAsync(input);
            input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.RestapiReportListResponse? GetReportsByTicket(GetReportsByTicket input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.RestapiReportListResponse?> GetReportsByTicketAsync(GetReportsByTicket input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.RestapiTicketResponse? UpdateTicketResolutions(UpdateTicketResolutions input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.RestapiTicketResponse?> UpdateTicketResolutionsAsync(UpdateTicketResolutions input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
    }
}