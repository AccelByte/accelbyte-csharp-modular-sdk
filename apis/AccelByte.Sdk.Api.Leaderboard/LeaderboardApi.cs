// Copyright (c) 2023 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// This code is generated by tool. DO NOT EDIT.
using System;

using AccelByte.Sdk.Core;

using AccelByte.Sdk.Api.Leaderboard;

namespace AccelByte.Sdk.Api.Leaderboard
{
    public class LeaderboardApi : ISdkApi
    {
        private IAccelByteSdk _Sdk;

        public Wrapper.LeaderboardConfiguration LeaderboardConfiguration
        {
            get
            {
                if (_LeaderboardConfiguration == null)
                    _LeaderboardConfiguration = new Wrapper.LeaderboardConfiguration(_Sdk);
                return _LeaderboardConfiguration;
            }
        }
        private Wrapper.LeaderboardConfiguration? _LeaderboardConfiguration = null;

        public Wrapper.LeaderboardData LeaderboardData
        {
            get
            {
                if (_LeaderboardData == null)
                    _LeaderboardData = new Wrapper.LeaderboardData(_Sdk);
                return _LeaderboardData;
            }
        }
        private Wrapper.LeaderboardData? _LeaderboardData = null;

        public Wrapper.Anonymization Anonymization
        {
            get
            {
                if (_Anonymization == null)
                    _Anonymization = new Wrapper.Anonymization(_Sdk);
                return _Anonymization;
            }
        }
        private Wrapper.Anonymization? _Anonymization = null;

        public Wrapper.UserData UserData
        {
            get
            {
                if (_UserData == null)
                    _UserData = new Wrapper.UserData(_Sdk);
                return _UserData;
            }
        }
        private Wrapper.UserData? _UserData = null;

        public Wrapper.UserVisibility UserVisibility
        {
            get
            {
                if (_UserVisibility == null)
                    _UserVisibility = new Wrapper.UserVisibility(_Sdk);
                return _UserVisibility;
            }
        }
        private Wrapper.UserVisibility? _UserVisibility = null;

        public Wrapper.LeaderboardConfigurationV3 LeaderboardConfigurationV3
        {
            get
            {
                if (_LeaderboardConfigurationV3 == null)
                    _LeaderboardConfigurationV3 = new Wrapper.LeaderboardConfigurationV3(_Sdk);
                return _LeaderboardConfigurationV3;
            }
        }
        private Wrapper.LeaderboardConfigurationV3? _LeaderboardConfigurationV3 = null;

        public Wrapper.LeaderboardDataV3 LeaderboardDataV3
        {
            get
            {
                if (_LeaderboardDataV3 == null)
                    _LeaderboardDataV3 = new Wrapper.LeaderboardDataV3(_Sdk);
                return _LeaderboardDataV3;
            }
        }
        private Wrapper.LeaderboardDataV3? _LeaderboardDataV3 = null;

        public Wrapper.UserVisibilityV3 UserVisibilityV3
        {
            get
            {
                if (_UserVisibilityV3 == null)
                    _UserVisibilityV3 = new Wrapper.UserVisibilityV3(_Sdk);
                return _UserVisibilityV3;
            }
        }
        private Wrapper.UserVisibilityV3? _UserVisibilityV3 = null;

        public Wrapper.UserDataV3 UserDataV3
        {
            get
            {
                if (_UserDataV3 == null)
                    _UserDataV3 = new Wrapper.UserDataV3(_Sdk);
                return _UserDataV3;
            }
        }
        private Wrapper.UserDataV3? _UserDataV3 = null;

        internal LeaderboardApi(IAccelByteSdk sdk)
        {
            _Sdk = sdk;
        }
    }
}

namespace AccelByte.Sdk.Api
{
    public static class LeaderboardApi_SdkExts
    {
        public static LeaderboardApi GetLeaderboardApi(this IAccelByteSdk sdk)
        {
            return sdk.GetApi<LeaderboardApi>("leaderboard", () =>
            {
                return new LeaderboardApi(sdk);
            });            
        }
    }
}