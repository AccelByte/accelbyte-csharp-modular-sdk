// Copyright (c) 2022-2024 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// This code is generated by tool. DO NOT EDIT.
using System;
using System.Collections.Generic;
using System.Text;
using System.IO;
using System.Threading.Tasks;

using AccelByte.Sdk.Core;

using AccelByte.Sdk.Api.Lobby.Model;
using AccelByte.Sdk.Api.Lobby.Operation;

namespace AccelByte.Sdk.Api.Lobby.Wrapper
{
    public class Profanity
    {
        private readonly IAccelByteSdk _sdk;

        public Profanity(IAccelByteSdk sdk)
        {
            _sdk = sdk;
        }

        #region Operation Builders
        public AdminDebugProfanityFilters.AdminDebugProfanityFiltersBuilder AdminDebugProfanityFiltersOp
        {
            get { return new Operation.AdminDebugProfanityFilters.AdminDebugProfanityFiltersBuilder(_sdk); }
        }
        public AdminGetProfanityListFiltersV1.AdminGetProfanityListFiltersV1Builder AdminGetProfanityListFiltersV1Op
        {
            get { return new Operation.AdminGetProfanityListFiltersV1.AdminGetProfanityListFiltersV1Builder(_sdk); }
        }
        public AdminAddProfanityFilterIntoList.AdminAddProfanityFilterIntoListBuilder AdminAddProfanityFilterIntoListOp
        {
            get { return new Operation.AdminAddProfanityFilterIntoList.AdminAddProfanityFilterIntoListBuilder(_sdk); }
        }
        public AdminAddProfanityFilters.AdminAddProfanityFiltersBuilder AdminAddProfanityFiltersOp
        {
            get { return new Operation.AdminAddProfanityFilters.AdminAddProfanityFiltersBuilder(_sdk); }
        }
        public AdminImportProfanityFiltersFromFile.AdminImportProfanityFiltersFromFileBuilder AdminImportProfanityFiltersFromFileOp
        {
            get { return new Operation.AdminImportProfanityFiltersFromFile.AdminImportProfanityFiltersFromFileBuilder(_sdk); }
        }
        public AdminDeleteProfanityFilter.AdminDeleteProfanityFilterBuilder AdminDeleteProfanityFilterOp
        {
            get { return new Operation.AdminDeleteProfanityFilter.AdminDeleteProfanityFilterBuilder(_sdk); }
        }
        public AdminGetProfanityLists.AdminGetProfanityListsBuilder AdminGetProfanityListsOp
        {
            get { return new Operation.AdminGetProfanityLists.AdminGetProfanityListsBuilder(_sdk); }
        }
        public AdminCreateProfanityList.AdminCreateProfanityListBuilder AdminCreateProfanityListOp
        {
            get { return new Operation.AdminCreateProfanityList.AdminCreateProfanityListBuilder(_sdk); }
        }
        public AdminUpdateProfanityList.AdminUpdateProfanityListBuilder AdminUpdateProfanityListOp
        {
            get { return new Operation.AdminUpdateProfanityList.AdminUpdateProfanityListBuilder(_sdk); }
        }
        public AdminDeleteProfanityList.AdminDeleteProfanityListBuilder AdminDeleteProfanityListOp
        {
            get { return new Operation.AdminDeleteProfanityList.AdminDeleteProfanityListBuilder(_sdk); }
        }
        public AdminGetProfanityRule.AdminGetProfanityRuleBuilder AdminGetProfanityRuleOp
        {
            get { return new Operation.AdminGetProfanityRule.AdminGetProfanityRuleBuilder(_sdk); }
        }
        public AdminSetProfanityRuleForNamespace.AdminSetProfanityRuleForNamespaceBuilder AdminSetProfanityRuleForNamespaceOp
        {
            get { return new Operation.AdminSetProfanityRuleForNamespace.AdminSetProfanityRuleForNamespaceBuilder(_sdk); }
        }
        public AdminVerifyMessageProfanityResponse.AdminVerifyMessageProfanityResponseBuilder AdminVerifyMessageProfanityResponseOp
        {
            get { return new Operation.AdminVerifyMessageProfanityResponse.AdminVerifyMessageProfanityResponseBuilder(_sdk); }
        }
        #endregion

        public List<Model.ModelsProfanityFilter>? AdminDebugProfanityFilters(AdminDebugProfanityFilters input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<List<Model.ModelsProfanityFilter>?> AdminDebugProfanityFiltersAsync(AdminDebugProfanityFilters input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.ModelsAdminGetProfanityListFiltersV1Response? AdminGetProfanityListFiltersV1(AdminGetProfanityListFiltersV1 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.ModelsAdminGetProfanityListFiltersV1Response?> AdminGetProfanityListFiltersV1Async(AdminGetProfanityListFiltersV1 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public void AdminAddProfanityFilterIntoList(AdminAddProfanityFilterIntoList input)
        {
            var response = _sdk.RunRequest(input);
            input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task AdminAddProfanityFilterIntoListAsync(AdminAddProfanityFilterIntoList input)
        {
            var response = await _sdk.RunRequestAsync(input);
            input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public void AdminAddProfanityFilters(AdminAddProfanityFilters input)
        {
            var response = _sdk.RunRequest(input);
            input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task AdminAddProfanityFiltersAsync(AdminAddProfanityFilters input)
        {
            var response = await _sdk.RunRequestAsync(input);
            input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public void AdminImportProfanityFiltersFromFile(AdminImportProfanityFiltersFromFile input)
        {
            var response = _sdk.RunRequest(input);
            input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task AdminImportProfanityFiltersFromFileAsync(AdminImportProfanityFiltersFromFile input)
        {
            var response = await _sdk.RunRequestAsync(input);
            input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public List<Model.ModelsProfanityFilter>? AdminDeleteProfanityFilter(AdminDeleteProfanityFilter input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<List<Model.ModelsProfanityFilter>?> AdminDeleteProfanityFilterAsync(AdminDeleteProfanityFilter input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public List<Model.ModelsAdminGetProfanityListsListResponse>? AdminGetProfanityLists(AdminGetProfanityLists input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<List<Model.ModelsAdminGetProfanityListsListResponse>?> AdminGetProfanityListsAsync(AdminGetProfanityLists input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public void AdminCreateProfanityList(AdminCreateProfanityList input)
        {
            var response = _sdk.RunRequest(input);
            input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task AdminCreateProfanityListAsync(AdminCreateProfanityList input)
        {
            var response = await _sdk.RunRequestAsync(input);
            input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public void AdminUpdateProfanityList(AdminUpdateProfanityList input)
        {
            var response = _sdk.RunRequest(input);
            input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task AdminUpdateProfanityListAsync(AdminUpdateProfanityList input)
        {
            var response = await _sdk.RunRequestAsync(input);
            input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public void AdminDeleteProfanityList(AdminDeleteProfanityList input)
        {
            var response = _sdk.RunRequest(input);
            input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task AdminDeleteProfanityListAsync(AdminDeleteProfanityList input)
        {
            var response = await _sdk.RunRequestAsync(input);
            input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.ModelsProfanityRule? AdminGetProfanityRule(AdminGetProfanityRule input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.ModelsProfanityRule?> AdminGetProfanityRuleAsync(AdminGetProfanityRule input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public void AdminSetProfanityRuleForNamespace(AdminSetProfanityRuleForNamespace input)
        {
            var response = _sdk.RunRequest(input);
            input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task AdminSetProfanityRuleForNamespaceAsync(AdminSetProfanityRuleForNamespace input)
        {
            var response = await _sdk.RunRequestAsync(input);
            input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.ModelsAdminVerifyMessageProfanityResponse? AdminVerifyMessageProfanityResponse(AdminVerifyMessageProfanityResponse input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.ModelsAdminVerifyMessageProfanityResponse?> AdminVerifyMessageProfanityResponseAsync(AdminVerifyMessageProfanityResponse input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
    }
}