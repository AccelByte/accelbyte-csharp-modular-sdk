// Copyright (c) 2022-2024 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// This code is generated by tool. DO NOT EDIT.
using System;
using System.Collections.Generic;
using System.Text;
using System.IO;
using System.Threading.Tasks;

using AccelByte.Sdk.Core;

using AccelByte.Sdk.Api.Lobby.Model;
using AccelByte.Sdk.Api.Lobby.Operation;

namespace AccelByte.Sdk.Api.Lobby.Wrapper
{
    public class Notification
    {
        private readonly IAccelByteSdk _sdk;

        private string _CustomBasePath = String.Empty;

        public Notification(IAccelByteSdk sdk)
        {
            _sdk = sdk;
        }

        public Notification(IAccelByteSdk sdk, string customBasePath)
        {
            _sdk = sdk;
            _CustomBasePath = customBasePath;
        }

        #region Operation Builders
        public SendMultipleUsersFreeformNotificationV1Admin.SendMultipleUsersFreeformNotificationV1AdminBuilder SendMultipleUsersFreeformNotificationV1AdminOp
        {
            get
            {
                var opBuilder = new Operation.SendMultipleUsersFreeformNotificationV1Admin.SendMultipleUsersFreeformNotificationV1AdminBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public SendUsersFreeformNotificationV1Admin.SendUsersFreeformNotificationV1AdminBuilder SendUsersFreeformNotificationV1AdminOp
        {
            get
            {
                var opBuilder = new Operation.SendUsersFreeformNotificationV1Admin.SendUsersFreeformNotificationV1AdminBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        [Obsolete(DiagnosticId ="ab_deprecated_operation_wrapper")]
        public SendPartyFreeformNotificationV1Admin.SendPartyFreeformNotificationV1AdminBuilder SendPartyFreeformNotificationV1AdminOp
        {
            get
            {
                var opBuilder = new Operation.SendPartyFreeformNotificationV1Admin.SendPartyFreeformNotificationV1AdminBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        [Obsolete(DiagnosticId ="ab_deprecated_operation_wrapper")]
        public SendPartyTemplatedNotificationV1Admin.SendPartyTemplatedNotificationV1AdminBuilder SendPartyTemplatedNotificationV1AdminOp
        {
            get
            {
                var opBuilder = new Operation.SendPartyTemplatedNotificationV1Admin.SendPartyTemplatedNotificationV1AdminBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public GetAllNotificationTemplatesV1Admin.GetAllNotificationTemplatesV1AdminBuilder GetAllNotificationTemplatesV1AdminOp
        {
            get
            {
                var opBuilder = new Operation.GetAllNotificationTemplatesV1Admin.GetAllNotificationTemplatesV1AdminBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public CreateNotificationTemplateV1Admin.CreateNotificationTemplateV1AdminBuilder CreateNotificationTemplateV1AdminOp
        {
            get
            {
                var opBuilder = new Operation.CreateNotificationTemplateV1Admin.CreateNotificationTemplateV1AdminBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public SendUsersTemplatedNotificationV1Admin.SendUsersTemplatedNotificationV1AdminBuilder SendUsersTemplatedNotificationV1AdminOp
        {
            get
            {
                var opBuilder = new Operation.SendUsersTemplatedNotificationV1Admin.SendUsersTemplatedNotificationV1AdminBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public GetTemplateSlugLocalizationsTemplateV1Admin.GetTemplateSlugLocalizationsTemplateV1AdminBuilder GetTemplateSlugLocalizationsTemplateV1AdminOp
        {
            get
            {
                var opBuilder = new Operation.GetTemplateSlugLocalizationsTemplateV1Admin.GetTemplateSlugLocalizationsTemplateV1AdminBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public DeleteNotificationTemplateSlugV1Admin.DeleteNotificationTemplateSlugV1AdminBuilder DeleteNotificationTemplateSlugV1AdminOp
        {
            get
            {
                var opBuilder = new Operation.DeleteNotificationTemplateSlugV1Admin.DeleteNotificationTemplateSlugV1AdminBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public GetSingleTemplateLocalizationV1Admin.GetSingleTemplateLocalizationV1AdminBuilder GetSingleTemplateLocalizationV1AdminOp
        {
            get
            {
                var opBuilder = new Operation.GetSingleTemplateLocalizationV1Admin.GetSingleTemplateLocalizationV1AdminBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public UpdateTemplateLocalizationV1Admin.UpdateTemplateLocalizationV1AdminBuilder UpdateTemplateLocalizationV1AdminOp
        {
            get
            {
                var opBuilder = new Operation.UpdateTemplateLocalizationV1Admin.UpdateTemplateLocalizationV1AdminBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public DeleteTemplateLocalizationV1Admin.DeleteTemplateLocalizationV1AdminBuilder DeleteTemplateLocalizationV1AdminOp
        {
            get
            {
                var opBuilder = new Operation.DeleteTemplateLocalizationV1Admin.DeleteTemplateLocalizationV1AdminBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public PublishTemplateLocalizationV1Admin.PublishTemplateLocalizationV1AdminBuilder PublishTemplateLocalizationV1AdminOp
        {
            get
            {
                var opBuilder = new Operation.PublishTemplateLocalizationV1Admin.PublishTemplateLocalizationV1AdminBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public GetAllNotificationTopicsV1Admin.GetAllNotificationTopicsV1AdminBuilder GetAllNotificationTopicsV1AdminOp
        {
            get
            {
                var opBuilder = new Operation.GetAllNotificationTopicsV1Admin.GetAllNotificationTopicsV1AdminBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public CreateNotificationTopicV1Admin.CreateNotificationTopicV1AdminBuilder CreateNotificationTopicV1AdminOp
        {
            get
            {
                var opBuilder = new Operation.CreateNotificationTopicV1Admin.CreateNotificationTopicV1AdminBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public GetNotificationTopicV1Admin.GetNotificationTopicV1AdminBuilder GetNotificationTopicV1AdminOp
        {
            get
            {
                var opBuilder = new Operation.GetNotificationTopicV1Admin.GetNotificationTopicV1AdminBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public UpdateNotificationTopicV1Admin.UpdateNotificationTopicV1AdminBuilder UpdateNotificationTopicV1AdminOp
        {
            get
            {
                var opBuilder = new Operation.UpdateNotificationTopicV1Admin.UpdateNotificationTopicV1AdminBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public DeleteNotificationTopicV1Admin.DeleteNotificationTopicV1AdminBuilder DeleteNotificationTopicV1AdminOp
        {
            get
            {
                var opBuilder = new Operation.DeleteNotificationTopicV1Admin.DeleteNotificationTopicV1AdminBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public SendSpecificUserFreeformNotificationV1Admin.SendSpecificUserFreeformNotificationV1AdminBuilder SendSpecificUserFreeformNotificationV1AdminOp
        {
            get
            {
                var opBuilder = new Operation.SendSpecificUserFreeformNotificationV1Admin.SendSpecificUserFreeformNotificationV1AdminBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public SendSpecificUserTemplatedNotificationV1Admin.SendSpecificUserTemplatedNotificationV1AdminBuilder SendSpecificUserTemplatedNotificationV1AdminOp
        {
            get
            {
                var opBuilder = new Operation.SendSpecificUserTemplatedNotificationV1Admin.SendSpecificUserTemplatedNotificationV1AdminBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public GetMyNotifications.GetMyNotificationsBuilder GetMyNotificationsOp
        {
            get
            {
                var opBuilder = new Operation.GetMyNotifications.GetMyNotificationsBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public GetTopicByNamespace.GetTopicByNamespaceBuilder GetTopicByNamespaceOp
        {
            get
            {
                var opBuilder = new Operation.GetTopicByNamespace.GetTopicByNamespaceBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public CreateTopic.CreateTopicBuilder CreateTopicOp
        {
            get
            {
                var opBuilder = new Operation.CreateTopic.CreateTopicBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public GetTopicByTopicName.GetTopicByTopicNameBuilder GetTopicByTopicNameOp
        {
            get
            {
                var opBuilder = new Operation.GetTopicByTopicName.GetTopicByTopicNameBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public UpdateTopicByTopicName.UpdateTopicByTopicNameBuilder UpdateTopicByTopicNameOp
        {
            get
            {
                var opBuilder = new Operation.UpdateTopicByTopicName.UpdateTopicByTopicNameBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public DeleteTopicByTopicName.DeleteTopicByTopicNameBuilder DeleteTopicByTopicNameOp
        {
            get
            {
                var opBuilder = new Operation.DeleteTopicByTopicName.DeleteTopicByTopicNameBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public FreeFormNotificationByUserID.FreeFormNotificationByUserIDBuilder FreeFormNotificationByUserIDOp
        {
            get
            {
                var opBuilder = new Operation.FreeFormNotificationByUserID.FreeFormNotificationByUserIDBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public NotificationWithTemplateByUserID.NotificationWithTemplateByUserIDBuilder NotificationWithTemplateByUserIDOp
        {
            get
            {
                var opBuilder = new Operation.NotificationWithTemplateByUserID.NotificationWithTemplateByUserIDBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        #endregion

        public SendMultipleUsersFreeformNotificationV1Admin.Response SendMultipleUsersFreeformNotificationV1Admin(SendMultipleUsersFreeformNotificationV1Admin input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<SendMultipleUsersFreeformNotificationV1Admin.Response> SendMultipleUsersFreeformNotificationV1AdminAsync(SendMultipleUsersFreeformNotificationV1Admin input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public SendUsersFreeformNotificationV1Admin.Response SendUsersFreeformNotificationV1Admin(SendUsersFreeformNotificationV1Admin input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<SendUsersFreeformNotificationV1Admin.Response> SendUsersFreeformNotificationV1AdminAsync(SendUsersFreeformNotificationV1Admin input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        #pragma warning disable ab_deprecated_operation
        [Obsolete(DiagnosticId ="ab_deprecated_operation_wrapper")]
        public SendPartyFreeformNotificationV1Admin.Response SendPartyFreeformNotificationV1Admin(SendPartyFreeformNotificationV1Admin input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<SendPartyFreeformNotificationV1Admin.Response> SendPartyFreeformNotificationV1AdminAsync(SendPartyFreeformNotificationV1Admin input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        #pragma warning restore ab_deprecated_operation
        #pragma warning disable ab_deprecated_operation
        [Obsolete(DiagnosticId ="ab_deprecated_operation_wrapper")]
        public SendPartyTemplatedNotificationV1Admin.Response SendPartyTemplatedNotificationV1Admin(SendPartyTemplatedNotificationV1Admin input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<SendPartyTemplatedNotificationV1Admin.Response> SendPartyTemplatedNotificationV1AdminAsync(SendPartyTemplatedNotificationV1Admin input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        #pragma warning restore ab_deprecated_operation
        public GetAllNotificationTemplatesV1Admin.Response GetAllNotificationTemplatesV1Admin(GetAllNotificationTemplatesV1Admin input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<GetAllNotificationTemplatesV1Admin.Response> GetAllNotificationTemplatesV1AdminAsync(GetAllNotificationTemplatesV1Admin input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public CreateNotificationTemplateV1Admin.Response CreateNotificationTemplateV1Admin(CreateNotificationTemplateV1Admin input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<CreateNotificationTemplateV1Admin.Response> CreateNotificationTemplateV1AdminAsync(CreateNotificationTemplateV1Admin input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public SendUsersTemplatedNotificationV1Admin.Response SendUsersTemplatedNotificationV1Admin(SendUsersTemplatedNotificationV1Admin input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<SendUsersTemplatedNotificationV1Admin.Response> SendUsersTemplatedNotificationV1AdminAsync(SendUsersTemplatedNotificationV1Admin input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public GetTemplateSlugLocalizationsTemplateV1Admin.Response GetTemplateSlugLocalizationsTemplateV1Admin(GetTemplateSlugLocalizationsTemplateV1Admin input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<GetTemplateSlugLocalizationsTemplateV1Admin.Response> GetTemplateSlugLocalizationsTemplateV1AdminAsync(GetTemplateSlugLocalizationsTemplateV1Admin input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public DeleteNotificationTemplateSlugV1Admin.Response DeleteNotificationTemplateSlugV1Admin(DeleteNotificationTemplateSlugV1Admin input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<DeleteNotificationTemplateSlugV1Admin.Response> DeleteNotificationTemplateSlugV1AdminAsync(DeleteNotificationTemplateSlugV1Admin input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public GetSingleTemplateLocalizationV1Admin.Response GetSingleTemplateLocalizationV1Admin(GetSingleTemplateLocalizationV1Admin input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<GetSingleTemplateLocalizationV1Admin.Response> GetSingleTemplateLocalizationV1AdminAsync(GetSingleTemplateLocalizationV1Admin input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public UpdateTemplateLocalizationV1Admin.Response UpdateTemplateLocalizationV1Admin(UpdateTemplateLocalizationV1Admin input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<UpdateTemplateLocalizationV1Admin.Response> UpdateTemplateLocalizationV1AdminAsync(UpdateTemplateLocalizationV1Admin input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public DeleteTemplateLocalizationV1Admin.Response DeleteTemplateLocalizationV1Admin(DeleteTemplateLocalizationV1Admin input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<DeleteTemplateLocalizationV1Admin.Response> DeleteTemplateLocalizationV1AdminAsync(DeleteTemplateLocalizationV1Admin input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public PublishTemplateLocalizationV1Admin.Response PublishTemplateLocalizationV1Admin(PublishTemplateLocalizationV1Admin input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<PublishTemplateLocalizationV1Admin.Response> PublishTemplateLocalizationV1AdminAsync(PublishTemplateLocalizationV1Admin input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public GetAllNotificationTopicsV1Admin.Response GetAllNotificationTopicsV1Admin(GetAllNotificationTopicsV1Admin input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<GetAllNotificationTopicsV1Admin.Response> GetAllNotificationTopicsV1AdminAsync(GetAllNotificationTopicsV1Admin input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public CreateNotificationTopicV1Admin.Response CreateNotificationTopicV1Admin(CreateNotificationTopicV1Admin input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<CreateNotificationTopicV1Admin.Response> CreateNotificationTopicV1AdminAsync(CreateNotificationTopicV1Admin input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public GetNotificationTopicV1Admin.Response GetNotificationTopicV1Admin(GetNotificationTopicV1Admin input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<GetNotificationTopicV1Admin.Response> GetNotificationTopicV1AdminAsync(GetNotificationTopicV1Admin input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public UpdateNotificationTopicV1Admin.Response UpdateNotificationTopicV1Admin(UpdateNotificationTopicV1Admin input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<UpdateNotificationTopicV1Admin.Response> UpdateNotificationTopicV1AdminAsync(UpdateNotificationTopicV1Admin input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public DeleteNotificationTopicV1Admin.Response DeleteNotificationTopicV1Admin(DeleteNotificationTopicV1Admin input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<DeleteNotificationTopicV1Admin.Response> DeleteNotificationTopicV1AdminAsync(DeleteNotificationTopicV1Admin input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public SendSpecificUserFreeformNotificationV1Admin.Response SendSpecificUserFreeformNotificationV1Admin(SendSpecificUserFreeformNotificationV1Admin input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<SendSpecificUserFreeformNotificationV1Admin.Response> SendSpecificUserFreeformNotificationV1AdminAsync(SendSpecificUserFreeformNotificationV1Admin input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public SendSpecificUserTemplatedNotificationV1Admin.Response SendSpecificUserTemplatedNotificationV1Admin(SendSpecificUserTemplatedNotificationV1Admin input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<SendSpecificUserTemplatedNotificationV1Admin.Response> SendSpecificUserTemplatedNotificationV1AdminAsync(SendSpecificUserTemplatedNotificationV1Admin input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public GetMyNotifications.Response GetMyNotifications(GetMyNotifications input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<GetMyNotifications.Response> GetMyNotificationsAsync(GetMyNotifications input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public GetTopicByNamespace.Response GetTopicByNamespace(GetTopicByNamespace input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<GetTopicByNamespace.Response> GetTopicByNamespaceAsync(GetTopicByNamespace input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public CreateTopic.Response CreateTopic(CreateTopic input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<CreateTopic.Response> CreateTopicAsync(CreateTopic input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public GetTopicByTopicName.Response GetTopicByTopicName(GetTopicByTopicName input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<GetTopicByTopicName.Response> GetTopicByTopicNameAsync(GetTopicByTopicName input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public UpdateTopicByTopicName.Response UpdateTopicByTopicName(UpdateTopicByTopicName input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<UpdateTopicByTopicName.Response> UpdateTopicByTopicNameAsync(UpdateTopicByTopicName input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public DeleteTopicByTopicName.Response DeleteTopicByTopicName(DeleteTopicByTopicName input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<DeleteTopicByTopicName.Response> DeleteTopicByTopicNameAsync(DeleteTopicByTopicName input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public FreeFormNotificationByUserID.Response FreeFormNotificationByUserID(FreeFormNotificationByUserID input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<FreeFormNotificationByUserID.Response> FreeFormNotificationByUserIDAsync(FreeFormNotificationByUserID input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public NotificationWithTemplateByUserID.Response NotificationWithTemplateByUserID(NotificationWithTemplateByUserID input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<NotificationWithTemplateByUserID.Response> NotificationWithTemplateByUserIDAsync(NotificationWithTemplateByUserID input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
    }
}