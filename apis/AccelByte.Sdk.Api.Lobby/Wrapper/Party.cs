// Copyright (c) 2022-2024 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// This code is generated by tool. DO NOT EDIT.
using System;
using System.Collections.Generic;
using System.Text;
using System.IO;
using System.Threading.Tasks;

using AccelByte.Sdk.Core;

using AccelByte.Sdk.Api.Lobby.Model;
using AccelByte.Sdk.Api.Lobby.Operation;

namespace AccelByte.Sdk.Api.Lobby.Wrapper
{
    public class Party
    {
        private readonly IAccelByteSdk _sdk;

        private string _CustomBasePath = String.Empty;

        public Party(IAccelByteSdk sdk)
        {
            _sdk = sdk;
        }

        public Party(IAccelByteSdk sdk, string customBasePath)
        {
            _sdk = sdk;
            _CustomBasePath = customBasePath;
        }

        #region Operation Builders
        [Obsolete(DiagnosticId ="ab_deprecated_operation_wrapper")]
        public AdminGetPartyDataV1.AdminGetPartyDataV1Builder AdminGetPartyDataV1Op
        {
            get
            {
                var opBuilder = new Operation.AdminGetPartyDataV1.AdminGetPartyDataV1Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        [Obsolete(DiagnosticId ="ab_deprecated_operation_wrapper")]
        public AdminGetUserPartyV1.AdminGetUserPartyV1Builder AdminGetUserPartyV1Op
        {
            get
            {
                var opBuilder = new Operation.AdminGetUserPartyV1.AdminGetUserPartyV1Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        [Obsolete(DiagnosticId ="ab_deprecated_operation_wrapper")]
        public PublicGetPartyDataV1.PublicGetPartyDataV1Builder PublicGetPartyDataV1Op
        {
            get
            {
                var opBuilder = new Operation.PublicGetPartyDataV1.PublicGetPartyDataV1Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        [Obsolete(DiagnosticId ="ab_deprecated_operation_wrapper")]
        public PublicUpdatePartyAttributesV1.PublicUpdatePartyAttributesV1Builder PublicUpdatePartyAttributesV1Op
        {
            get
            {
                var opBuilder = new Operation.PublicUpdatePartyAttributesV1.PublicUpdatePartyAttributesV1Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        [Obsolete(DiagnosticId ="ab_deprecated_operation_wrapper")]
        public PublicSetPartyLimitV1.PublicSetPartyLimitV1Builder PublicSetPartyLimitV1Op
        {
            get
            {
                var opBuilder = new Operation.PublicSetPartyLimitV1.PublicSetPartyLimitV1Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        #endregion

        #pragma warning disable ab_deprecated_operation
        [Obsolete(DiagnosticId ="ab_deprecated_operation_wrapper")]
        public AdminGetPartyDataV1.Response AdminGetPartyDataV1(AdminGetPartyDataV1 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<AdminGetPartyDataV1.Response> AdminGetPartyDataV1Async(AdminGetPartyDataV1 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }

        public AdminGetPartyDataV1.Response<T1> AdminGetPartyDataV1<T1>(AdminGetPartyDataV1 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<AdminGetPartyDataV1.Response<T1>> AdminGetPartyDataV1Async<T1>(AdminGetPartyDataV1 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        #pragma warning restore ab_deprecated_operation
        #pragma warning disable ab_deprecated_operation
        [Obsolete(DiagnosticId ="ab_deprecated_operation_wrapper")]
        public AdminGetUserPartyV1.Response AdminGetUserPartyV1(AdminGetUserPartyV1 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<AdminGetUserPartyV1.Response> AdminGetUserPartyV1Async(AdminGetUserPartyV1 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }

        public AdminGetUserPartyV1.Response<T1> AdminGetUserPartyV1<T1>(AdminGetUserPartyV1 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<AdminGetUserPartyV1.Response<T1>> AdminGetUserPartyV1Async<T1>(AdminGetUserPartyV1 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        #pragma warning restore ab_deprecated_operation
        #pragma warning disable ab_deprecated_operation
        [Obsolete(DiagnosticId ="ab_deprecated_operation_wrapper")]
        public PublicGetPartyDataV1.Response PublicGetPartyDataV1(PublicGetPartyDataV1 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<PublicGetPartyDataV1.Response> PublicGetPartyDataV1Async(PublicGetPartyDataV1 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }

        public PublicGetPartyDataV1.Response<T1> PublicGetPartyDataV1<T1>(PublicGetPartyDataV1 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<PublicGetPartyDataV1.Response<T1>> PublicGetPartyDataV1Async<T1>(PublicGetPartyDataV1 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        #pragma warning restore ab_deprecated_operation
        #pragma warning disable ab_deprecated_operation
        [Obsolete(DiagnosticId ="ab_deprecated_operation_wrapper")]
        public PublicUpdatePartyAttributesV1.Response PublicUpdatePartyAttributesV1(PublicUpdatePartyAttributesV1 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<PublicUpdatePartyAttributesV1.Response> PublicUpdatePartyAttributesV1Async(PublicUpdatePartyAttributesV1 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }

        public PublicUpdatePartyAttributesV1.Response<T1> PublicUpdatePartyAttributesV1<T1>(PublicUpdatePartyAttributesV1 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<PublicUpdatePartyAttributesV1.Response<T1>> PublicUpdatePartyAttributesV1Async<T1>(PublicUpdatePartyAttributesV1 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        #pragma warning restore ab_deprecated_operation
        #pragma warning disable ab_deprecated_operation
        [Obsolete(DiagnosticId ="ab_deprecated_operation_wrapper")]
        public PublicSetPartyLimitV1.Response PublicSetPartyLimitV1(PublicSetPartyLimitV1 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<PublicSetPartyLimitV1.Response> PublicSetPartyLimitV1Async(PublicSetPartyLimitV1 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        #pragma warning restore ab_deprecated_operation
    }
}