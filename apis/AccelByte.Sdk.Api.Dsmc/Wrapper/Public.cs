// Copyright (c) 2022-2024 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// This code is generated by tool. DO NOT EDIT.
using System;
using System.Collections.Generic;
using System.Text;
using System.IO;
using System.Threading.Tasks;

using AccelByte.Sdk.Core;

using AccelByte.Sdk.Api.Dsmc.Model;
using AccelByte.Sdk.Api.Dsmc.Operation;

namespace AccelByte.Sdk.Api.Dsmc.Wrapper
{
    public class Public
    {
        private readonly IAccelByteSdk _sdk;

        public Public(IAccelByteSdk sdk)
        {
            _sdk = sdk;
        }

        #region Operation Builders
        public GetDefaultProvider.GetDefaultProviderBuilder GetDefaultProviderOp
        {
            get { return new Operation.GetDefaultProvider.GetDefaultProviderBuilder(_sdk); }
        }
        public ListProviders.ListProvidersBuilder ListProvidersOp
        {
            get { return new Operation.ListProviders.ListProvidersBuilder(_sdk); }
        }
        public ListProvidersByRegion.ListProvidersByRegionBuilder ListProvidersByRegionOp
        {
            get { return new Operation.ListProvidersByRegion.ListProvidersByRegionBuilder(_sdk); }
        }
        #endregion

        public Model.ModelsDefaultProvider? GetDefaultProvider(GetDefaultProvider input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.ModelsDefaultProvider?> GetDefaultProviderAsync(GetDefaultProvider input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public List<string>? ListProviders(ListProviders input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<List<string>?> ListProvidersAsync(ListProviders input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public List<string>? ListProvidersByRegion(ListProvidersByRegion input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<List<string>?> ListProvidersByRegionAsync(ListProvidersByRegion input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
    }
}