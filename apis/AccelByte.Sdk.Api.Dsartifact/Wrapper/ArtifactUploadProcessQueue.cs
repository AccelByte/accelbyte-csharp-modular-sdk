// Copyright (c) 2022-2023 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// This code is generated by tool. DO NOT EDIT.
using System;
using System.Collections.Generic;
using System.Text;
using System.IO;

using AccelByte.Sdk.Core;

using AccelByte.Sdk.Api.Dsartifact.Model;
using AccelByte.Sdk.Api.Dsartifact.Operation;

namespace AccelByte.Sdk.Api.Dsartifact.Wrapper
{
    public class ArtifactUploadProcessQueue
    {
        private readonly IAccelByteSdk _sdk;

        public ArtifactUploadProcessQueue(IAccelByteSdk sdk)
        {
            _sdk = sdk;
        }

        #region Operation Builders
        public ListNodesIPAddress.ListNodesIPAddressBuilder ListNodesIPAddressOp
        {
            get { return new Operation.ListNodesIPAddress.ListNodesIPAddressBuilder(_sdk); }
        }
        public DeleteNodeByID.DeleteNodeByIDBuilder DeleteNodeByIDOp
        {
            get { return new Operation.DeleteNodeByID.DeleteNodeByIDBuilder(_sdk); }
        }
        public ListQueue.ListQueueBuilder ListQueueOp
        {
            get { return new Operation.ListQueue.ListQueueBuilder(_sdk); }
        }
        public GetActiveQueue.GetActiveQueueBuilder GetActiveQueueOp
        {
            get { return new Operation.GetActiveQueue.GetActiveQueueBuilder(_sdk); }
        }
        public SetActiveQueue.SetActiveQueueBuilder SetActiveQueueOp
        {
            get { return new Operation.SetActiveQueue.SetActiveQueueBuilder(_sdk); }
        }
        public DeleteActiveQueue.DeleteActiveQueueBuilder DeleteActiveQueueOp
        {
            get { return new Operation.DeleteActiveQueue.DeleteActiveQueueBuilder(_sdk); }
        }
        public ReportFailedUpload.ReportFailedUploadBuilder ReportFailedUploadOp
        {
            get { return new Operation.ReportFailedUpload.ReportFailedUploadBuilder(_sdk); }
        }
        public DeleteQueue.DeleteQueueBuilder DeleteQueueOp
        {
            get { return new Operation.DeleteQueue.DeleteQueueBuilder(_sdk); }
        }
        public ListAllActiveQueue.ListAllActiveQueueBuilder ListAllActiveQueueOp
        {
            get { return new Operation.ListAllActiveQueue.ListAllActiveQueueBuilder(_sdk); }
        }
        public ListAllQueue.ListAllQueueBuilder ListAllQueueOp
        {
            get { return new Operation.ListAllQueue.ListAllQueueBuilder(_sdk); }
        }
        #endregion

        public Model.ModelsListNodesIPAddress? ListNodesIPAddress(ListNodesIPAddress input)
        {
            var response = _sdk.RunRequest(input);

            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public void DeleteNodeByID(DeleteNodeByID input)
        {
            var response = _sdk.RunRequest(input);

            input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.ModelsListQueueResponse? ListQueue(ListQueue input)
        {
            var response = _sdk.RunRequest(input);

            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.ModelsQueue? GetActiveQueue(GetActiveQueue input)
        {
            var response = _sdk.RunRequest(input);

            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public void SetActiveQueue(SetActiveQueue input)
        {
            var response = _sdk.RunRequest(input);

            input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public void DeleteActiveQueue(DeleteActiveQueue input)
        {
            var response = _sdk.RunRequest(input);

            input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public void ReportFailedUpload(ReportFailedUpload input)
        {
            var response = _sdk.RunRequest(input);

            input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public void DeleteQueue(DeleteQueue input)
        {
            var response = _sdk.RunRequest(input);

            input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.ModelsListAllQueueResponse? ListAllActiveQueue(ListAllActiveQueue input)
        {
            var response = _sdk.RunRequest(input);

            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.ModelsListAllQueueResponse? ListAllQueue(ListAllQueue input)
        {
            var response = _sdk.RunRequest(input);

            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
    }
}