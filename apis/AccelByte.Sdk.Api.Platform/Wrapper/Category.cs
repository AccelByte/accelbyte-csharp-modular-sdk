// Copyright (c) 2022-2024 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// This code is generated by tool. DO NOT EDIT.
using System;
using System.Collections.Generic;
using System.Text;
using System.IO;
using System.Threading.Tasks;

using AccelByte.Sdk.Core;

using AccelByte.Sdk.Api.Platform.Model;
using AccelByte.Sdk.Api.Platform.Operation;

namespace AccelByte.Sdk.Api.Platform.Wrapper
{
    public class Category
    {
        private readonly IAccelByteSdk _sdk;

        private string _CustomBasePath = String.Empty;

        public Category(IAccelByteSdk sdk)
        {
            _sdk = sdk;
        }

        public Category(IAccelByteSdk sdk, string customBasePath)
        {
            _sdk = sdk;
            _CustomBasePath = customBasePath;
        }

        #region Operation Builders
        public GetRootCategories.GetRootCategoriesBuilder GetRootCategoriesOp
        {
            get
            {
                var opBuilder = new Operation.GetRootCategories.GetRootCategoriesBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public CreateCategory.CreateCategoryBuilder CreateCategoryOp
        {
            get
            {
                var opBuilder = new Operation.CreateCategory.CreateCategoryBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public ListCategoriesBasic.ListCategoriesBasicBuilder ListCategoriesBasicOp
        {
            get
            {
                var opBuilder = new Operation.ListCategoriesBasic.ListCategoriesBasicBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public GetCategory.GetCategoryBuilder GetCategoryOp
        {
            get
            {
                var opBuilder = new Operation.GetCategory.GetCategoryBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public UpdateCategory.UpdateCategoryBuilder UpdateCategoryOp
        {
            get
            {
                var opBuilder = new Operation.UpdateCategory.UpdateCategoryBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public DeleteCategory.DeleteCategoryBuilder DeleteCategoryOp
        {
            get
            {
                var opBuilder = new Operation.DeleteCategory.DeleteCategoryBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public GetChildCategories.GetChildCategoriesBuilder GetChildCategoriesOp
        {
            get
            {
                var opBuilder = new Operation.GetChildCategories.GetChildCategoriesBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public GetDescendantCategories.GetDescendantCategoriesBuilder GetDescendantCategoriesOp
        {
            get
            {
                var opBuilder = new Operation.GetDescendantCategories.GetDescendantCategoriesBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public PublicGetRootCategories.PublicGetRootCategoriesBuilder PublicGetRootCategoriesOp
        {
            get
            {
                var opBuilder = new Operation.PublicGetRootCategories.PublicGetRootCategoriesBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public DownloadCategories.DownloadCategoriesBuilder DownloadCategoriesOp
        {
            get
            {
                var opBuilder = new Operation.DownloadCategories.DownloadCategoriesBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public PublicGetCategory.PublicGetCategoryBuilder PublicGetCategoryOp
        {
            get
            {
                var opBuilder = new Operation.PublicGetCategory.PublicGetCategoryBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public PublicGetChildCategories.PublicGetChildCategoriesBuilder PublicGetChildCategoriesOp
        {
            get
            {
                var opBuilder = new Operation.PublicGetChildCategories.PublicGetChildCategoriesBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public PublicGetDescendantCategories.PublicGetDescendantCategoriesBuilder PublicGetDescendantCategoriesOp
        {
            get
            {
                var opBuilder = new Operation.PublicGetDescendantCategories.PublicGetDescendantCategoriesBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        #endregion

        public GetRootCategories.Response GetRootCategories(GetRootCategories input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<GetRootCategories.Response> GetRootCategoriesAsync(GetRootCategories input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public CreateCategory.Response CreateCategory(CreateCategory input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<CreateCategory.Response> CreateCategoryAsync(CreateCategory input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public ListCategoriesBasic.Response ListCategoriesBasic(ListCategoriesBasic input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<ListCategoriesBasic.Response> ListCategoriesBasicAsync(ListCategoriesBasic input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public GetCategory.Response GetCategory(GetCategory input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<GetCategory.Response> GetCategoryAsync(GetCategory input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public UpdateCategory.Response UpdateCategory(UpdateCategory input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<UpdateCategory.Response> UpdateCategoryAsync(UpdateCategory input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public DeleteCategory.Response DeleteCategory(DeleteCategory input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<DeleteCategory.Response> DeleteCategoryAsync(DeleteCategory input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public GetChildCategories.Response GetChildCategories(GetChildCategories input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<GetChildCategories.Response> GetChildCategoriesAsync(GetChildCategories input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public GetDescendantCategories.Response GetDescendantCategories(GetDescendantCategories input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<GetDescendantCategories.Response> GetDescendantCategoriesAsync(GetDescendantCategories input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public PublicGetRootCategories.Response PublicGetRootCategories(PublicGetRootCategories input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<PublicGetRootCategories.Response> PublicGetRootCategoriesAsync(PublicGetRootCategories input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public DownloadCategories.Response DownloadCategories(DownloadCategories input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<DownloadCategories.Response> DownloadCategoriesAsync(DownloadCategories input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public PublicGetCategory.Response PublicGetCategory(PublicGetCategory input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<PublicGetCategory.Response> PublicGetCategoryAsync(PublicGetCategory input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public PublicGetChildCategories.Response PublicGetChildCategories(PublicGetChildCategories input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<PublicGetChildCategories.Response> PublicGetChildCategoriesAsync(PublicGetChildCategories input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public PublicGetDescendantCategories.Response PublicGetDescendantCategories(PublicGetDescendantCategories input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<PublicGetDescendantCategories.Response> PublicGetDescendantCategoriesAsync(PublicGetDescendantCategories input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
    }
}