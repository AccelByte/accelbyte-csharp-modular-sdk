// Copyright (c) 2022-2024 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// This code is generated by tool. DO NOT EDIT.
using System;
using System.Collections.Generic;
using System.Text;
using System.IO;
using System.Threading.Tasks;

using AccelByte.Sdk.Core;

using AccelByte.Sdk.Api.Platform.Model;
using AccelByte.Sdk.Api.Platform.Operation;

namespace AccelByte.Sdk.Api.Platform.Wrapper
{
    public class Entitlement
    {
        private readonly IAccelByteSdk _sdk;

        private string _CustomBasePath = String.Empty;

        public Entitlement(IAccelByteSdk sdk)
        {
            _sdk = sdk;
        }

        public Entitlement(IAccelByteSdk sdk, string customBasePath)
        {
            _sdk = sdk;
            _CustomBasePath = customBasePath;
        }

        #region Operation Builders
        public QueryEntitlements1.QueryEntitlements1Builder QueryEntitlements1Op
        {
            get
            {
                var opBuilder = new Operation.QueryEntitlements1.QueryEntitlements1Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public QueryEntitlements.QueryEntitlementsBuilder QueryEntitlementsOp
        {
            get
            {
                var opBuilder = new Operation.QueryEntitlements.QueryEntitlementsBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public EnableEntitlementOriginFeature.EnableEntitlementOriginFeatureBuilder EnableEntitlementOriginFeatureOp
        {
            get
            {
                var opBuilder = new Operation.EnableEntitlementOriginFeature.EnableEntitlementOriginFeatureBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public GetEntitlementConfigInfo.GetEntitlementConfigInfoBuilder GetEntitlementConfigInfoOp
        {
            get
            {
                var opBuilder = new Operation.GetEntitlementConfigInfo.GetEntitlementConfigInfoBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public GrantEntitlements.GrantEntitlementsBuilder GrantEntitlementsOp
        {
            get
            {
                var opBuilder = new Operation.GrantEntitlements.GrantEntitlementsBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public RevokeEntitlements.RevokeEntitlementsBuilder RevokeEntitlementsOp
        {
            get
            {
                var opBuilder = new Operation.RevokeEntitlements.RevokeEntitlementsBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public GetEntitlement.GetEntitlementBuilder GetEntitlementOp
        {
            get
            {
                var opBuilder = new Operation.GetEntitlement.GetEntitlementBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public GetPlatformEntitlementConfig.GetPlatformEntitlementConfigBuilder GetPlatformEntitlementConfigOp
        {
            get
            {
                var opBuilder = new Operation.GetPlatformEntitlementConfig.GetPlatformEntitlementConfigBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public UpdatePlatformEntitlementConfig.UpdatePlatformEntitlementConfigBuilder UpdatePlatformEntitlementConfigOp
        {
            get
            {
                var opBuilder = new Operation.UpdatePlatformEntitlementConfig.UpdatePlatformEntitlementConfigBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public QueryUserEntitlements.QueryUserEntitlementsBuilder QueryUserEntitlementsOp
        {
            get
            {
                var opBuilder = new Operation.QueryUserEntitlements.QueryUserEntitlementsBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public GrantUserEntitlement.GrantUserEntitlementBuilder GrantUserEntitlementOp
        {
            get
            {
                var opBuilder = new Operation.GrantUserEntitlement.GrantUserEntitlementBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public GetUserAppEntitlementByAppId.GetUserAppEntitlementByAppIdBuilder GetUserAppEntitlementByAppIdOp
        {
            get
            {
                var opBuilder = new Operation.GetUserAppEntitlementByAppId.GetUserAppEntitlementByAppIdBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public QueryUserEntitlementsByAppType.QueryUserEntitlementsByAppTypeBuilder QueryUserEntitlementsByAppTypeOp
        {
            get
            {
                var opBuilder = new Operation.QueryUserEntitlementsByAppType.QueryUserEntitlementsByAppTypeBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public GetUserEntitlementsByIds.GetUserEntitlementsByIdsBuilder GetUserEntitlementsByIdsOp
        {
            get
            {
                var opBuilder = new Operation.GetUserEntitlementsByIds.GetUserEntitlementsByIdsBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public GetUserEntitlementByItemId.GetUserEntitlementByItemIdBuilder GetUserEntitlementByItemIdOp
        {
            get
            {
                var opBuilder = new Operation.GetUserEntitlementByItemId.GetUserEntitlementByItemIdBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public GetUserActiveEntitlementsByItemIds.GetUserActiveEntitlementsByItemIdsBuilder GetUserActiveEntitlementsByItemIdsOp
        {
            get
            {
                var opBuilder = new Operation.GetUserActiveEntitlementsByItemIds.GetUserActiveEntitlementsByItemIdsBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public GetUserEntitlementBySku.GetUserEntitlementBySkuBuilder GetUserEntitlementBySkuOp
        {
            get
            {
                var opBuilder = new Operation.GetUserEntitlementBySku.GetUserEntitlementBySkuBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public ExistsAnyUserActiveEntitlement.ExistsAnyUserActiveEntitlementBuilder ExistsAnyUserActiveEntitlementOp
        {
            get
            {
                var opBuilder = new Operation.ExistsAnyUserActiveEntitlement.ExistsAnyUserActiveEntitlementBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public ExistsAnyUserActiveEntitlementByItemIds.ExistsAnyUserActiveEntitlementByItemIdsBuilder ExistsAnyUserActiveEntitlementByItemIdsOp
        {
            get
            {
                var opBuilder = new Operation.ExistsAnyUserActiveEntitlementByItemIds.ExistsAnyUserActiveEntitlementByItemIdsBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public GetUserAppEntitlementOwnershipByAppId.GetUserAppEntitlementOwnershipByAppIdBuilder GetUserAppEntitlementOwnershipByAppIdOp
        {
            get
            {
                var opBuilder = new Operation.GetUserAppEntitlementOwnershipByAppId.GetUserAppEntitlementOwnershipByAppIdBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public GetUserEntitlementOwnershipByItemId.GetUserEntitlementOwnershipByItemIdBuilder GetUserEntitlementOwnershipByItemIdOp
        {
            get
            {
                var opBuilder = new Operation.GetUserEntitlementOwnershipByItemId.GetUserEntitlementOwnershipByItemIdBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public GetUserEntitlementOwnershipByItemIds.GetUserEntitlementOwnershipByItemIdsBuilder GetUserEntitlementOwnershipByItemIdsOp
        {
            get
            {
                var opBuilder = new Operation.GetUserEntitlementOwnershipByItemIds.GetUserEntitlementOwnershipByItemIdsBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public GetUserEntitlementOwnershipBySku.GetUserEntitlementOwnershipBySkuBuilder GetUserEntitlementOwnershipBySkuOp
        {
            get
            {
                var opBuilder = new Operation.GetUserEntitlementOwnershipBySku.GetUserEntitlementOwnershipBySkuBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public RevokeAllEntitlements.RevokeAllEntitlementsBuilder RevokeAllEntitlementsOp
        {
            get
            {
                var opBuilder = new Operation.RevokeAllEntitlements.RevokeAllEntitlementsBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public RevokeUserEntitlements.RevokeUserEntitlementsBuilder RevokeUserEntitlementsOp
        {
            get
            {
                var opBuilder = new Operation.RevokeUserEntitlements.RevokeUserEntitlementsBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public GetUserEntitlement.GetUserEntitlementBuilder GetUserEntitlementOp
        {
            get
            {
                var opBuilder = new Operation.GetUserEntitlement.GetUserEntitlementBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public UpdateUserEntitlement.UpdateUserEntitlementBuilder UpdateUserEntitlementOp
        {
            get
            {
                var opBuilder = new Operation.UpdateUserEntitlement.UpdateUserEntitlementBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public ConsumeUserEntitlement.ConsumeUserEntitlementBuilder ConsumeUserEntitlementOp
        {
            get
            {
                var opBuilder = new Operation.ConsumeUserEntitlement.ConsumeUserEntitlementBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public DisableUserEntitlement.DisableUserEntitlementBuilder DisableUserEntitlementOp
        {
            get
            {
                var opBuilder = new Operation.DisableUserEntitlement.DisableUserEntitlementBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public EnableUserEntitlement.EnableUserEntitlementBuilder EnableUserEntitlementOp
        {
            get
            {
                var opBuilder = new Operation.EnableUserEntitlement.EnableUserEntitlementBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public GetUserEntitlementHistories.GetUserEntitlementHistoriesBuilder GetUserEntitlementHistoriesOp
        {
            get
            {
                var opBuilder = new Operation.GetUserEntitlementHistories.GetUserEntitlementHistoriesBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public RevokeUserEntitlement.RevokeUserEntitlementBuilder RevokeUserEntitlementOp
        {
            get
            {
                var opBuilder = new Operation.RevokeUserEntitlement.RevokeUserEntitlementBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public RevokeUserEntitlementByUseCount.RevokeUserEntitlementByUseCountBuilder RevokeUserEntitlementByUseCountOp
        {
            get
            {
                var opBuilder = new Operation.RevokeUserEntitlementByUseCount.RevokeUserEntitlementByUseCountBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public PreCheckRevokeUserEntitlementByUseCount.PreCheckRevokeUserEntitlementByUseCountBuilder PreCheckRevokeUserEntitlementByUseCountOp
        {
            get
            {
                var opBuilder = new Operation.PreCheckRevokeUserEntitlementByUseCount.PreCheckRevokeUserEntitlementByUseCountBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        [Obsolete(DiagnosticId = "ab_deprecated_operation_wrapper")]
        public RevokeUseCount.RevokeUseCountBuilder RevokeUseCountOp
        {
            get
            {
                var opBuilder = new Operation.RevokeUseCount.RevokeUseCountBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public SellUserEntitlement.SellUserEntitlementBuilder SellUserEntitlementOp
        {
            get
            {
                var opBuilder = new Operation.SellUserEntitlement.SellUserEntitlementBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public PublicExistsAnyMyActiveEntitlement.PublicExistsAnyMyActiveEntitlementBuilder PublicExistsAnyMyActiveEntitlementOp
        {
            get
            {
                var opBuilder = new Operation.PublicExistsAnyMyActiveEntitlement.PublicExistsAnyMyActiveEntitlementBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public PublicGetMyAppEntitlementOwnershipByAppId.PublicGetMyAppEntitlementOwnershipByAppIdBuilder PublicGetMyAppEntitlementOwnershipByAppIdOp
        {
            get
            {
                var opBuilder = new Operation.PublicGetMyAppEntitlementOwnershipByAppId.PublicGetMyAppEntitlementOwnershipByAppIdBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public PublicGetMyEntitlementOwnershipByItemId.PublicGetMyEntitlementOwnershipByItemIdBuilder PublicGetMyEntitlementOwnershipByItemIdOp
        {
            get
            {
                var opBuilder = new Operation.PublicGetMyEntitlementOwnershipByItemId.PublicGetMyEntitlementOwnershipByItemIdBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public PublicGetMyEntitlementOwnershipBySku.PublicGetMyEntitlementOwnershipBySkuBuilder PublicGetMyEntitlementOwnershipBySkuOp
        {
            get
            {
                var opBuilder = new Operation.PublicGetMyEntitlementOwnershipBySku.PublicGetMyEntitlementOwnershipBySkuBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public PublicGetEntitlementOwnershipToken.PublicGetEntitlementOwnershipTokenBuilder PublicGetEntitlementOwnershipTokenOp
        {
            get
            {
                var opBuilder = new Operation.PublicGetEntitlementOwnershipToken.PublicGetEntitlementOwnershipTokenBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public PublicQueryUserEntitlements.PublicQueryUserEntitlementsBuilder PublicQueryUserEntitlementsOp
        {
            get
            {
                var opBuilder = new Operation.PublicQueryUserEntitlements.PublicQueryUserEntitlementsBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public PublicGetUserAppEntitlementByAppId.PublicGetUserAppEntitlementByAppIdBuilder PublicGetUserAppEntitlementByAppIdOp
        {
            get
            {
                var opBuilder = new Operation.PublicGetUserAppEntitlementByAppId.PublicGetUserAppEntitlementByAppIdBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public PublicQueryUserEntitlementsByAppType.PublicQueryUserEntitlementsByAppTypeBuilder PublicQueryUserEntitlementsByAppTypeOp
        {
            get
            {
                var opBuilder = new Operation.PublicQueryUserEntitlementsByAppType.PublicQueryUserEntitlementsByAppTypeBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public PublicGetUserEntitlementsByIds.PublicGetUserEntitlementsByIdsBuilder PublicGetUserEntitlementsByIdsOp
        {
            get
            {
                var opBuilder = new Operation.PublicGetUserEntitlementsByIds.PublicGetUserEntitlementsByIdsBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        [Obsolete(DiagnosticId = "ab_deprecated_operation_wrapper")]
        public PublicGetUserEntitlementByItemId.PublicGetUserEntitlementByItemIdBuilder PublicGetUserEntitlementByItemIdOp
        {
            get
            {
                var opBuilder = new Operation.PublicGetUserEntitlementByItemId.PublicGetUserEntitlementByItemIdBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        [Obsolete(DiagnosticId = "ab_deprecated_operation_wrapper")]
        public PublicGetUserEntitlementBySku.PublicGetUserEntitlementBySkuBuilder PublicGetUserEntitlementBySkuOp
        {
            get
            {
                var opBuilder = new Operation.PublicGetUserEntitlementBySku.PublicGetUserEntitlementBySkuBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public PublicUserEntitlementHistory.PublicUserEntitlementHistoryBuilder PublicUserEntitlementHistoryOp
        {
            get
            {
                var opBuilder = new Operation.PublicUserEntitlementHistory.PublicUserEntitlementHistoryBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public PublicExistsAnyUserActiveEntitlement.PublicExistsAnyUserActiveEntitlementBuilder PublicExistsAnyUserActiveEntitlementOp
        {
            get
            {
                var opBuilder = new Operation.PublicExistsAnyUserActiveEntitlement.PublicExistsAnyUserActiveEntitlementBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public PublicGetUserAppEntitlementOwnershipByAppId.PublicGetUserAppEntitlementOwnershipByAppIdBuilder PublicGetUserAppEntitlementOwnershipByAppIdOp
        {
            get
            {
                var opBuilder = new Operation.PublicGetUserAppEntitlementOwnershipByAppId.PublicGetUserAppEntitlementOwnershipByAppIdBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public PublicGetUserEntitlementOwnershipByItemId.PublicGetUserEntitlementOwnershipByItemIdBuilder PublicGetUserEntitlementOwnershipByItemIdOp
        {
            get
            {
                var opBuilder = new Operation.PublicGetUserEntitlementOwnershipByItemId.PublicGetUserEntitlementOwnershipByItemIdBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public PublicGetUserEntitlementOwnershipByItemIds.PublicGetUserEntitlementOwnershipByItemIdsBuilder PublicGetUserEntitlementOwnershipByItemIdsOp
        {
            get
            {
                var opBuilder = new Operation.PublicGetUserEntitlementOwnershipByItemIds.PublicGetUserEntitlementOwnershipByItemIdsBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public PublicGetUserEntitlementOwnershipBySku.PublicGetUserEntitlementOwnershipBySkuBuilder PublicGetUserEntitlementOwnershipBySkuOp
        {
            get
            {
                var opBuilder = new Operation.PublicGetUserEntitlementOwnershipBySku.PublicGetUserEntitlementOwnershipBySkuBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public PublicGetUserEntitlement.PublicGetUserEntitlementBuilder PublicGetUserEntitlementOp
        {
            get
            {
                var opBuilder = new Operation.PublicGetUserEntitlement.PublicGetUserEntitlementBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public PublicConsumeUserEntitlement.PublicConsumeUserEntitlementBuilder PublicConsumeUserEntitlementOp
        {
            get
            {
                var opBuilder = new Operation.PublicConsumeUserEntitlement.PublicConsumeUserEntitlementBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public PublicSellUserEntitlement.PublicSellUserEntitlementBuilder PublicSellUserEntitlementOp
        {
            get
            {
                var opBuilder = new Operation.PublicSellUserEntitlement.PublicSellUserEntitlementBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public PublicSplitUserEntitlement.PublicSplitUserEntitlementBuilder PublicSplitUserEntitlementOp
        {
            get
            {
                var opBuilder = new Operation.PublicSplitUserEntitlement.PublicSplitUserEntitlementBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public PublicTransferUserEntitlement.PublicTransferUserEntitlementBuilder PublicTransferUserEntitlementOp
        {
            get
            {
                var opBuilder = new Operation.PublicTransferUserEntitlement.PublicTransferUserEntitlementBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        #endregion

        public QueryEntitlements1.Response QueryEntitlements1(QueryEntitlements1 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<QueryEntitlements1.Response> QueryEntitlements1Async(QueryEntitlements1 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public QueryEntitlements.Response QueryEntitlements(QueryEntitlements input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<QueryEntitlements.Response> QueryEntitlementsAsync(QueryEntitlements input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public EnableEntitlementOriginFeature.Response EnableEntitlementOriginFeature(EnableEntitlementOriginFeature input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<EnableEntitlementOriginFeature.Response> EnableEntitlementOriginFeatureAsync(EnableEntitlementOriginFeature input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public GetEntitlementConfigInfo.Response GetEntitlementConfigInfo(GetEntitlementConfigInfo input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<GetEntitlementConfigInfo.Response> GetEntitlementConfigInfoAsync(GetEntitlementConfigInfo input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public GrantEntitlements.Response GrantEntitlements(GrantEntitlements input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<GrantEntitlements.Response> GrantEntitlementsAsync(GrantEntitlements input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public RevokeEntitlements.Response RevokeEntitlements(RevokeEntitlements input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<RevokeEntitlements.Response> RevokeEntitlementsAsync(RevokeEntitlements input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public GetEntitlement.Response GetEntitlement(GetEntitlement input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<GetEntitlement.Response> GetEntitlementAsync(GetEntitlement input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public GetPlatformEntitlementConfig.Response GetPlatformEntitlementConfig(GetPlatformEntitlementConfig input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<GetPlatformEntitlementConfig.Response> GetPlatformEntitlementConfigAsync(GetPlatformEntitlementConfig input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public UpdatePlatformEntitlementConfig.Response UpdatePlatformEntitlementConfig(UpdatePlatformEntitlementConfig input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<UpdatePlatformEntitlementConfig.Response> UpdatePlatformEntitlementConfigAsync(UpdatePlatformEntitlementConfig input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public QueryUserEntitlements.Response QueryUserEntitlements(QueryUserEntitlements input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<QueryUserEntitlements.Response> QueryUserEntitlementsAsync(QueryUserEntitlements input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public GrantUserEntitlement.Response GrantUserEntitlement(GrantUserEntitlement input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<GrantUserEntitlement.Response> GrantUserEntitlementAsync(GrantUserEntitlement input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public GetUserAppEntitlementByAppId.Response GetUserAppEntitlementByAppId(GetUserAppEntitlementByAppId input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<GetUserAppEntitlementByAppId.Response> GetUserAppEntitlementByAppIdAsync(GetUserAppEntitlementByAppId input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public QueryUserEntitlementsByAppType.Response QueryUserEntitlementsByAppType(QueryUserEntitlementsByAppType input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<QueryUserEntitlementsByAppType.Response> QueryUserEntitlementsByAppTypeAsync(QueryUserEntitlementsByAppType input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public GetUserEntitlementsByIds.Response GetUserEntitlementsByIds(GetUserEntitlementsByIds input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<GetUserEntitlementsByIds.Response> GetUserEntitlementsByIdsAsync(GetUserEntitlementsByIds input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public GetUserEntitlementByItemId.Response GetUserEntitlementByItemId(GetUserEntitlementByItemId input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<GetUserEntitlementByItemId.Response> GetUserEntitlementByItemIdAsync(GetUserEntitlementByItemId input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public GetUserActiveEntitlementsByItemIds.Response GetUserActiveEntitlementsByItemIds(GetUserActiveEntitlementsByItemIds input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<GetUserActiveEntitlementsByItemIds.Response> GetUserActiveEntitlementsByItemIdsAsync(GetUserActiveEntitlementsByItemIds input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public GetUserEntitlementBySku.Response GetUserEntitlementBySku(GetUserEntitlementBySku input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<GetUserEntitlementBySku.Response> GetUserEntitlementBySkuAsync(GetUserEntitlementBySku input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public ExistsAnyUserActiveEntitlement.Response ExistsAnyUserActiveEntitlement(ExistsAnyUserActiveEntitlement input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<ExistsAnyUserActiveEntitlement.Response> ExistsAnyUserActiveEntitlementAsync(ExistsAnyUserActiveEntitlement input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public ExistsAnyUserActiveEntitlementByItemIds.Response ExistsAnyUserActiveEntitlementByItemIds(ExistsAnyUserActiveEntitlementByItemIds input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<ExistsAnyUserActiveEntitlementByItemIds.Response> ExistsAnyUserActiveEntitlementByItemIdsAsync(ExistsAnyUserActiveEntitlementByItemIds input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public GetUserAppEntitlementOwnershipByAppId.Response GetUserAppEntitlementOwnershipByAppId(GetUserAppEntitlementOwnershipByAppId input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<GetUserAppEntitlementOwnershipByAppId.Response> GetUserAppEntitlementOwnershipByAppIdAsync(GetUserAppEntitlementOwnershipByAppId input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public GetUserEntitlementOwnershipByItemId.Response GetUserEntitlementOwnershipByItemId(GetUserEntitlementOwnershipByItemId input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<GetUserEntitlementOwnershipByItemId.Response> GetUserEntitlementOwnershipByItemIdAsync(GetUserEntitlementOwnershipByItemId input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public GetUserEntitlementOwnershipByItemIds.Response GetUserEntitlementOwnershipByItemIds(GetUserEntitlementOwnershipByItemIds input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<GetUserEntitlementOwnershipByItemIds.Response> GetUserEntitlementOwnershipByItemIdsAsync(GetUserEntitlementOwnershipByItemIds input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public GetUserEntitlementOwnershipBySku.Response GetUserEntitlementOwnershipBySku(GetUserEntitlementOwnershipBySku input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<GetUserEntitlementOwnershipBySku.Response> GetUserEntitlementOwnershipBySkuAsync(GetUserEntitlementOwnershipBySku input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public RevokeAllEntitlements.Response RevokeAllEntitlements(RevokeAllEntitlements input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<RevokeAllEntitlements.Response> RevokeAllEntitlementsAsync(RevokeAllEntitlements input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public RevokeUserEntitlements.Response RevokeUserEntitlements(RevokeUserEntitlements input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<RevokeUserEntitlements.Response> RevokeUserEntitlementsAsync(RevokeUserEntitlements input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public GetUserEntitlement.Response GetUserEntitlement(GetUserEntitlement input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<GetUserEntitlement.Response> GetUserEntitlementAsync(GetUserEntitlement input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public UpdateUserEntitlement.Response UpdateUserEntitlement(UpdateUserEntitlement input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<UpdateUserEntitlement.Response> UpdateUserEntitlementAsync(UpdateUserEntitlement input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public ConsumeUserEntitlement.Response ConsumeUserEntitlement(ConsumeUserEntitlement input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<ConsumeUserEntitlement.Response> ConsumeUserEntitlementAsync(ConsumeUserEntitlement input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public DisableUserEntitlement.Response DisableUserEntitlement(DisableUserEntitlement input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<DisableUserEntitlement.Response> DisableUserEntitlementAsync(DisableUserEntitlement input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public EnableUserEntitlement.Response EnableUserEntitlement(EnableUserEntitlement input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<EnableUserEntitlement.Response> EnableUserEntitlementAsync(EnableUserEntitlement input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public GetUserEntitlementHistories.Response GetUserEntitlementHistories(GetUserEntitlementHistories input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<GetUserEntitlementHistories.Response> GetUserEntitlementHistoriesAsync(GetUserEntitlementHistories input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public RevokeUserEntitlement.Response RevokeUserEntitlement(RevokeUserEntitlement input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<RevokeUserEntitlement.Response> RevokeUserEntitlementAsync(RevokeUserEntitlement input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public RevokeUserEntitlementByUseCount.Response RevokeUserEntitlementByUseCount(RevokeUserEntitlementByUseCount input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<RevokeUserEntitlementByUseCount.Response> RevokeUserEntitlementByUseCountAsync(RevokeUserEntitlementByUseCount input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public PreCheckRevokeUserEntitlementByUseCount.Response PreCheckRevokeUserEntitlementByUseCount(PreCheckRevokeUserEntitlementByUseCount input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<PreCheckRevokeUserEntitlementByUseCount.Response> PreCheckRevokeUserEntitlementByUseCountAsync(PreCheckRevokeUserEntitlementByUseCount input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
#pragma warning disable ab_deprecated_operation
        [Obsolete(DiagnosticId = "ab_deprecated_operation_wrapper")]
        public RevokeUseCount.Response RevokeUseCount(RevokeUseCount input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<RevokeUseCount.Response> RevokeUseCountAsync(RevokeUseCount input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
#pragma warning restore ab_deprecated_operation
        public SellUserEntitlement.Response SellUserEntitlement(SellUserEntitlement input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<SellUserEntitlement.Response> SellUserEntitlementAsync(SellUserEntitlement input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public PublicExistsAnyMyActiveEntitlement.Response PublicExistsAnyMyActiveEntitlement(PublicExistsAnyMyActiveEntitlement input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<PublicExistsAnyMyActiveEntitlement.Response> PublicExistsAnyMyActiveEntitlementAsync(PublicExistsAnyMyActiveEntitlement input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public PublicGetMyAppEntitlementOwnershipByAppId.Response PublicGetMyAppEntitlementOwnershipByAppId(PublicGetMyAppEntitlementOwnershipByAppId input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<PublicGetMyAppEntitlementOwnershipByAppId.Response> PublicGetMyAppEntitlementOwnershipByAppIdAsync(PublicGetMyAppEntitlementOwnershipByAppId input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public PublicGetMyEntitlementOwnershipByItemId.Response PublicGetMyEntitlementOwnershipByItemId(PublicGetMyEntitlementOwnershipByItemId input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<PublicGetMyEntitlementOwnershipByItemId.Response> PublicGetMyEntitlementOwnershipByItemIdAsync(PublicGetMyEntitlementOwnershipByItemId input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public PublicGetMyEntitlementOwnershipBySku.Response PublicGetMyEntitlementOwnershipBySku(PublicGetMyEntitlementOwnershipBySku input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<PublicGetMyEntitlementOwnershipBySku.Response> PublicGetMyEntitlementOwnershipBySkuAsync(PublicGetMyEntitlementOwnershipBySku input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public PublicGetEntitlementOwnershipToken.Response PublicGetEntitlementOwnershipToken(PublicGetEntitlementOwnershipToken input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<PublicGetEntitlementOwnershipToken.Response> PublicGetEntitlementOwnershipTokenAsync(PublicGetEntitlementOwnershipToken input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public PublicQueryUserEntitlements.Response PublicQueryUserEntitlements(PublicQueryUserEntitlements input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<PublicQueryUserEntitlements.Response> PublicQueryUserEntitlementsAsync(PublicQueryUserEntitlements input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public PublicGetUserAppEntitlementByAppId.Response PublicGetUserAppEntitlementByAppId(PublicGetUserAppEntitlementByAppId input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<PublicGetUserAppEntitlementByAppId.Response> PublicGetUserAppEntitlementByAppIdAsync(PublicGetUserAppEntitlementByAppId input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public PublicQueryUserEntitlementsByAppType.Response PublicQueryUserEntitlementsByAppType(PublicQueryUserEntitlementsByAppType input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<PublicQueryUserEntitlementsByAppType.Response> PublicQueryUserEntitlementsByAppTypeAsync(PublicQueryUserEntitlementsByAppType input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public PublicGetUserEntitlementsByIds.Response PublicGetUserEntitlementsByIds(PublicGetUserEntitlementsByIds input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<PublicGetUserEntitlementsByIds.Response> PublicGetUserEntitlementsByIdsAsync(PublicGetUserEntitlementsByIds input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
#pragma warning disable ab_deprecated_operation
        [Obsolete(DiagnosticId = "ab_deprecated_operation_wrapper")]
        public PublicGetUserEntitlementByItemId.Response PublicGetUserEntitlementByItemId(PublicGetUserEntitlementByItemId input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<PublicGetUserEntitlementByItemId.Response> PublicGetUserEntitlementByItemIdAsync(PublicGetUserEntitlementByItemId input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
#pragma warning restore ab_deprecated_operation
#pragma warning disable ab_deprecated_operation
        [Obsolete(DiagnosticId = "ab_deprecated_operation_wrapper")]
        public PublicGetUserEntitlementBySku.Response PublicGetUserEntitlementBySku(PublicGetUserEntitlementBySku input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<PublicGetUserEntitlementBySku.Response> PublicGetUserEntitlementBySkuAsync(PublicGetUserEntitlementBySku input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
#pragma warning restore ab_deprecated_operation
        public PublicUserEntitlementHistory.Response PublicUserEntitlementHistory(PublicUserEntitlementHistory input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<PublicUserEntitlementHistory.Response> PublicUserEntitlementHistoryAsync(PublicUserEntitlementHistory input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public PublicExistsAnyUserActiveEntitlement.Response PublicExistsAnyUserActiveEntitlement(PublicExistsAnyUserActiveEntitlement input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<PublicExistsAnyUserActiveEntitlement.Response> PublicExistsAnyUserActiveEntitlementAsync(PublicExistsAnyUserActiveEntitlement input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public PublicGetUserAppEntitlementOwnershipByAppId.Response PublicGetUserAppEntitlementOwnershipByAppId(PublicGetUserAppEntitlementOwnershipByAppId input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<PublicGetUserAppEntitlementOwnershipByAppId.Response> PublicGetUserAppEntitlementOwnershipByAppIdAsync(PublicGetUserAppEntitlementOwnershipByAppId input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public PublicGetUserEntitlementOwnershipByItemId.Response PublicGetUserEntitlementOwnershipByItemId(PublicGetUserEntitlementOwnershipByItemId input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<PublicGetUserEntitlementOwnershipByItemId.Response> PublicGetUserEntitlementOwnershipByItemIdAsync(PublicGetUserEntitlementOwnershipByItemId input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public PublicGetUserEntitlementOwnershipByItemIds.Response PublicGetUserEntitlementOwnershipByItemIds(PublicGetUserEntitlementOwnershipByItemIds input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<PublicGetUserEntitlementOwnershipByItemIds.Response> PublicGetUserEntitlementOwnershipByItemIdsAsync(PublicGetUserEntitlementOwnershipByItemIds input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public PublicGetUserEntitlementOwnershipBySku.Response PublicGetUserEntitlementOwnershipBySku(PublicGetUserEntitlementOwnershipBySku input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<PublicGetUserEntitlementOwnershipBySku.Response> PublicGetUserEntitlementOwnershipBySkuAsync(PublicGetUserEntitlementOwnershipBySku input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public PublicGetUserEntitlement.Response PublicGetUserEntitlement(PublicGetUserEntitlement input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<PublicGetUserEntitlement.Response> PublicGetUserEntitlementAsync(PublicGetUserEntitlement input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public PublicConsumeUserEntitlement.Response PublicConsumeUserEntitlement(PublicConsumeUserEntitlement input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<PublicConsumeUserEntitlement.Response> PublicConsumeUserEntitlementAsync(PublicConsumeUserEntitlement input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public PublicSellUserEntitlement.Response PublicSellUserEntitlement(PublicSellUserEntitlement input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<PublicSellUserEntitlement.Response> PublicSellUserEntitlementAsync(PublicSellUserEntitlement input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public PublicSplitUserEntitlement.Response PublicSplitUserEntitlement(PublicSplitUserEntitlement input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<PublicSplitUserEntitlement.Response> PublicSplitUserEntitlementAsync(PublicSplitUserEntitlement input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public PublicTransferUserEntitlement.Response PublicTransferUserEntitlement(PublicTransferUserEntitlement input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<PublicTransferUserEntitlement.Response> PublicTransferUserEntitlementAsync(PublicTransferUserEntitlement input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
    }
}