// Copyright (c) 2022-2023 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// This code is generated by tool. DO NOT EDIT.

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.Json;
using System.Net;
using System.Net.Http;
using System.IO;

using AccelByte.Sdk.Core;
using AccelByte.Sdk.Core.Net.Http;

using AccelByte.Sdk.Api.Platform.Model;

namespace AccelByte.Sdk.Api.Platform.Operation
{
    /// <summary>
    /// downloadInvoiceDetails
    ///
    /// Download invoice details as a csv file.
    /// Other detail info:
    /// 
    ///   * Required permission : resource="ADMIN:NAMESPACE:{namespace}:ORDER", action=2 (READ)
    ///   *  Returns : invoice details csv file
    /// </summary>
    public class DownloadInvoiceDetails : AccelByte.Sdk.Core.Operation
    {
        #region Builder Part
        public static DownloadInvoiceDetailsBuilder Builder { get => new DownloadInvoiceDetailsBuilder(); }

        public class DownloadInvoiceDetailsBuilder
            : OperationBuilder<DownloadInvoiceDetailsBuilder>
        {

            public string? Feature { get; set; }

            public string? ItemId { get; set; }

            public DownloadInvoiceDetailsItemType? ItemType { get; set; }





            internal DownloadInvoiceDetailsBuilder() { }

            internal DownloadInvoiceDetailsBuilder(IAccelByteSdk sdk)
            {
                _Sdk = sdk;
            }


            public DownloadInvoiceDetailsBuilder SetFeature(string _feature)
            {
                Feature = _feature;
                return this;
            }

            public DownloadInvoiceDetailsBuilder SetItemId(string _itemId)
            {
                ItemId = _itemId;
                return this;
            }

            public DownloadInvoiceDetailsBuilder SetItemType(DownloadInvoiceDetailsItemType _itemType)
            {
                ItemType = _itemType;
                return this;
            }





            public DownloadInvoiceDetails Build(
                string namespace_,
                string endTime,
                string startTime
            )
            {
                DownloadInvoiceDetails op = new DownloadInvoiceDetails(this,
                    namespace_,                    
                    endTime,                    
                    startTime                    
                );
                op.PreferredSecurityMethod = PreferredSecurityMethod;
                op.RequestJsonOptions = RequestJsonOptions;
                op.ResponseJsonOptions = ResponseJsonOptions;

                return op;
            }

            public Stream? Execute(
                string namespace_,
                string endTime,
                string startTime
            )
            {
                DownloadInvoiceDetails op = Build(
                    namespace_,
                    endTime,
                    startTime
                );

                if (_Sdk == null)
                    throw IncompleteComponentException.NoSdkObject;

                var response = _Sdk.RunRequest(op);
                return op.ParseResponse(
                    response.Code, 
                    response.ContentType,
                    response.Payload);
            }
        }

        private DownloadInvoiceDetails(DownloadInvoiceDetailsBuilder builder,
            string namespace_,
            string endTime,
            string startTime
        )
        {
            PathParams["namespace"] = namespace_;
            
            if (builder.Feature is not null) QueryParams["feature"] = builder.Feature;
            if (builder.ItemId is not null) QueryParams["itemId"] = builder.ItemId;
            if (builder.ItemType is not null) QueryParams["itemType"] = builder.ItemType.Value;
            if (endTime is not null) QueryParams["endTime"] = endTime;
            if (startTime is not null) QueryParams["startTime"] = startTime;
            

            
            
            

            Securities.Add(AccelByte.Sdk.Core.Operation.SECURITY_BEARER);
        }
        #endregion

        public DownloadInvoiceDetails(
            string namespace_,            
            string? feature,            
            string? itemId,            
            DownloadInvoiceDetailsItemType? itemType,            
            string endTime,            
            string startTime            
        )
        {
            PathParams["namespace"] = namespace_;
            
            if (feature is not null) QueryParams["feature"] = feature;
            if (itemId is not null) QueryParams["itemId"] = itemId;
            if (itemType is not null) QueryParams["itemType"] = itemType.Value;
            if (endTime is not null) QueryParams["endTime"] = endTime;
            if (startTime is not null) QueryParams["startTime"] = startTime;
            

            
            
            

            Securities.Add(AccelByte.Sdk.Core.Operation.SECURITY_BEARER);
        }

        public override string Path => "/platform/admin/namespaces/{namespace}/invoice/details.csv";

        public override HttpMethod Method => HttpMethod.Get;

        public override List<string> Consumes => new() {  };

        public override List<string> Produces => new() { "text/csv" };        
        
        public Stream? ParseResponse(HttpStatusCode code, string contentType, Stream payload)
        {            
            if (code == (HttpStatusCode)204)
            {
                return null;
            }
            else if (code == (HttpStatusCode)201)
            {
                return payload;
            }
            else if (code == (HttpStatusCode)200)
            {
                return payload;
            }
            
            var payloadString = payload.ReadToString();
            
            throw new HttpResponseException(code, payloadString);
        }
    }

    public class DownloadInvoiceDetailsItemType : StringEnum<DownloadInvoiceDetailsItemType>
    {
        public static readonly DownloadInvoiceDetailsItemType APP
            = new DownloadInvoiceDetailsItemType("APP");

        public static readonly DownloadInvoiceDetailsItemType BUNDLE
            = new DownloadInvoiceDetailsItemType("BUNDLE");

        public static readonly DownloadInvoiceDetailsItemType CODE
            = new DownloadInvoiceDetailsItemType("CODE");

        public static readonly DownloadInvoiceDetailsItemType COINS
            = new DownloadInvoiceDetailsItemType("COINS");

        public static readonly DownloadInvoiceDetailsItemType EXTENSION
            = new DownloadInvoiceDetailsItemType("EXTENSION");

        public static readonly DownloadInvoiceDetailsItemType INGAMEITEM
            = new DownloadInvoiceDetailsItemType("INGAMEITEM");

        public static readonly DownloadInvoiceDetailsItemType LOOTBOX
            = new DownloadInvoiceDetailsItemType("LOOTBOX");

        public static readonly DownloadInvoiceDetailsItemType MEDIA
            = new DownloadInvoiceDetailsItemType("MEDIA");

        public static readonly DownloadInvoiceDetailsItemType OPTIONBOX
            = new DownloadInvoiceDetailsItemType("OPTIONBOX");

        public static readonly DownloadInvoiceDetailsItemType SEASON
            = new DownloadInvoiceDetailsItemType("SEASON");

        public static readonly DownloadInvoiceDetailsItemType SUBSCRIPTION
            = new DownloadInvoiceDetailsItemType("SUBSCRIPTION");


        public static implicit operator DownloadInvoiceDetailsItemType(string value)
        {
            return NewValue(value);
        }

        public DownloadInvoiceDetailsItemType(string enumValue)
            : base(enumValue)
        {

        }
    }

}