// Copyright (c) 2022-2024 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// This code is generated by tool. DO NOT EDIT.

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.Json;
using System.Net;
using System.Net.Http;
using System.IO;
using System.Threading.Tasks;

using AccelByte.Sdk.Core;
using AccelByte.Sdk.Core.Net.Http;

using AccelByte.Sdk.Api.Platform.Model;

namespace AccelByte.Sdk.Api.Platform.Operation
{
    /// <summary>
    /// updatePlatformWalletConfig
    ///
    /// Update platform wallet config.
    /// Other detail info:
    /// 
    ///   * Returns : platform wallet config
    /// </summary>
    public class UpdatePlatformWalletConfig : AccelByte.Sdk.Core.Operation
    {
        #region Builder Part
        public static UpdatePlatformWalletConfigBuilder Builder { get => new UpdatePlatformWalletConfigBuilder(); }

        public class UpdatePlatformWalletConfigBuilder
            : OperationBuilder<UpdatePlatformWalletConfigBuilder>
        {





            internal UpdatePlatformWalletConfigBuilder() { }

            internal UpdatePlatformWalletConfigBuilder(IAccelByteSdk sdk)
            {
                _Sdk = sdk;
            }






            public UpdatePlatformWalletConfig Build(
                PlatformWalletConfigUpdate body,
                string namespace_,
                UpdatePlatformWalletConfigPlatform platform
            )
            {
                UpdatePlatformWalletConfig op = new UpdatePlatformWalletConfig(this,
                    body,
                    namespace_,
                    platform
                );

                op.SetBaseFields<UpdatePlatformWalletConfigBuilder>(this);
                return op;
            }

            public UpdatePlatformWalletConfig.Response Execute(
                PlatformWalletConfigUpdate body,
                string namespace_,
                string platform
            )
            {
                UpdatePlatformWalletConfig op = Build(
                    body,
                    namespace_,
                    platform
                );

                if (_Sdk == null)
                    throw IncompleteComponentException.NoSdkObject;

                var response = _Sdk.RunRequest(op);
                return op.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
            }
            public async Task<UpdatePlatformWalletConfig.Response> ExecuteAsync(
                PlatformWalletConfigUpdate body,
                string namespace_,
                string platform
            )
            {
                UpdatePlatformWalletConfig op = Build(
                    body,
                    namespace_,
                    platform
                );

                if (_Sdk == null)
                    throw IncompleteComponentException.NoSdkObject;

                var response = await _Sdk.RunRequestAsync(op);
                return op.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
            }
        }

        private UpdatePlatformWalletConfig(UpdatePlatformWalletConfigBuilder builder,
            PlatformWalletConfigUpdate body,
            string namespace_,
            UpdatePlatformWalletConfigPlatform platform
        )
        {
            PathParams["namespace"] = namespace_;
            PathParams["platform"] = platform.Value;





            BodyParams = body;


            Securities.Add(AccelByte.Sdk.Core.Operation.SECURITY_BEARER);
        }
        #endregion

        #region Response Part        
        public class Response : ApiResponse<Model.PlatformWalletConfigInfo>
        {


            protected override string GetFullOperationId() => "Platform::Wallet::UpdatePlatformWalletConfig";
        }

        #endregion

        public UpdatePlatformWalletConfig(
            string namespace_,
            UpdatePlatformWalletConfigPlatform platform,
            Model.PlatformWalletConfigUpdate body
        )
        {
            PathParams["namespace"] = namespace_;
            PathParams["platform"] = platform.Value;





            BodyParams = body;


            Securities.Add(AccelByte.Sdk.Core.Operation.SECURITY_BEARER);
        }

        public override string Path => "/platform/admin/namespaces/{namespace}/platforms/{platform}/wallet/config";

        public override HttpMethod Method => HttpMethod.Put;

        public override List<string> Consumes => new() { "application/json" };

        public override List<string> Produces => new() { "application/json" };

        public UpdatePlatformWalletConfig.Response ParseResponse(HttpStatusCode code, string contentType, Stream payload)
        {
            var response = new UpdatePlatformWalletConfig.Response()
            {
                StatusCode = code,
                ContentType = contentType
            };

            if (code == (HttpStatusCode)204)
            {
                response.IsSuccess = true;
            }
            else if ((code == (HttpStatusCode)201) || (code == (HttpStatusCode)202) || (code == (HttpStatusCode)200))
            {
                response.Data = JsonSerializer.Deserialize<Model.PlatformWalletConfigInfo>(payload, ResponseJsonOptions);
                response.IsSuccess = true;
            }

            return response;
        }
    }

    public class UpdatePlatformWalletConfigPlatform : StringEnum<UpdatePlatformWalletConfigPlatform>
    {
        public static readonly UpdatePlatformWalletConfigPlatform Epic
            = new UpdatePlatformWalletConfigPlatform("Epic");

        public static readonly UpdatePlatformWalletConfigPlatform GooglePlay
            = new UpdatePlatformWalletConfigPlatform("GooglePlay");

        public static readonly UpdatePlatformWalletConfigPlatform IOS
            = new UpdatePlatformWalletConfigPlatform("IOS");

        public static readonly UpdatePlatformWalletConfigPlatform Nintendo
            = new UpdatePlatformWalletConfigPlatform("Nintendo");

        public static readonly UpdatePlatformWalletConfigPlatform Oculus
            = new UpdatePlatformWalletConfigPlatform("Oculus");

        public static readonly UpdatePlatformWalletConfigPlatform Other
            = new UpdatePlatformWalletConfigPlatform("Other");

        public static readonly UpdatePlatformWalletConfigPlatform Playstation
            = new UpdatePlatformWalletConfigPlatform("Playstation");

        public static readonly UpdatePlatformWalletConfigPlatform Steam
            = new UpdatePlatformWalletConfigPlatform("Steam");

        public static readonly UpdatePlatformWalletConfigPlatform Xbox
            = new UpdatePlatformWalletConfigPlatform("Xbox");


        public static implicit operator UpdatePlatformWalletConfigPlatform(string value)
        {
            return NewValue(value);
        }

        public UpdatePlatformWalletConfigPlatform(string enumValue)
            : base(enumValue)
        {

        }
    }

}