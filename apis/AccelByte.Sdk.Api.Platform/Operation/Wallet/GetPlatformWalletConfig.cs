// Copyright (c) 2022-2024 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// This code is generated by tool. DO NOT EDIT.

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.Json;
using System.Net;
using System.Net.Http;
using System.IO;
using System.Threading.Tasks;

using AccelByte.Sdk.Core;
using AccelByte.Sdk.Core.Net.Http;

using AccelByte.Sdk.Api.Platform.Model;

namespace AccelByte.Sdk.Api.Platform.Operation
{
    /// <summary>
    /// getPlatformWalletConfig
    ///
    /// Get platform wallet config list.
    /// Other detail info:
    /// 
    ///   * Returns : wallet info
    /// </summary>
    public class GetPlatformWalletConfig : AccelByte.Sdk.Core.Operation
    {
        #region Builder Part
        public static GetPlatformWalletConfigBuilder Builder { get => new GetPlatformWalletConfigBuilder(); }

        public class GetPlatformWalletConfigBuilder
            : OperationBuilder<GetPlatformWalletConfigBuilder>
        {





            internal GetPlatformWalletConfigBuilder() { }

            internal GetPlatformWalletConfigBuilder(IAccelByteSdk sdk)
            {
                _Sdk = sdk;
            }






            public GetPlatformWalletConfig Build(
                string namespace_,
                GetPlatformWalletConfigPlatform platform
            )
            {
                GetPlatformWalletConfig op = new GetPlatformWalletConfig(this,
                    namespace_,
                    platform
                );

                op.SetBaseFields<GetPlatformWalletConfigBuilder>(this);
                return op;
            }

            public Model.PlatformWalletConfigInfo? Execute(
                string namespace_,
                string platform
            )
            {
                GetPlatformWalletConfig op = Build(
                    namespace_,
                    platform
                );

                if (_Sdk == null)
                    throw IncompleteComponentException.NoSdkObject;

                var response = _Sdk.RunRequest(op);
                return op.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
            }
            public async Task<Model.PlatformWalletConfigInfo?> ExecuteAsync(
                string namespace_,
                string platform
            )
            {
                GetPlatformWalletConfig op = Build(
                    namespace_,
                    platform
                );

                if (_Sdk == null)
                    throw IncompleteComponentException.NoSdkObject;

                var response = await _Sdk.RunRequestAsync(op);
                return op.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
            }
        }

        private GetPlatformWalletConfig(GetPlatformWalletConfigBuilder builder,
            string namespace_,
            GetPlatformWalletConfigPlatform platform
        )
        {
            PathParams["namespace"] = namespace_;
            PathParams["platform"] = platform.Value;







            Securities.Add(AccelByte.Sdk.Core.Operation.SECURITY_BEARER);
        }
        #endregion

        public GetPlatformWalletConfig(
            string namespace_,
            GetPlatformWalletConfigPlatform platform
        )
        {
            PathParams["namespace"] = namespace_;
            PathParams["platform"] = platform.Value;







            Securities.Add(AccelByte.Sdk.Core.Operation.SECURITY_BEARER);
        }

        public override string Path => "/platform/admin/namespaces/{namespace}/platforms/{platform}/wallet/config";

        public override HttpMethod Method => HttpMethod.Get;

        public override List<string> Consumes => new() { "application/json" };

        public override List<string> Produces => new() { "application/json" };

        public Model.PlatformWalletConfigInfo? ParseResponse(HttpStatusCode code, string contentType, Stream payload)
        {
            if (code == (HttpStatusCode)204)
            {
                return null;
            }
            else if (code == (HttpStatusCode)201)
            {
                return JsonSerializer.Deserialize<Model.PlatformWalletConfigInfo>(payload, ResponseJsonOptions);
            }
            else if (code == (HttpStatusCode)200)
            {
                return JsonSerializer.Deserialize<Model.PlatformWalletConfigInfo>(payload, ResponseJsonOptions);
            }

            var payloadString = payload.ReadToString();

            throw new HttpResponseException(code, payloadString);
        }
    }

    public class GetPlatformWalletConfigPlatform : StringEnum<GetPlatformWalletConfigPlatform>
    {
        public static readonly GetPlatformWalletConfigPlatform Epic
            = new GetPlatformWalletConfigPlatform("Epic");

        public static readonly GetPlatformWalletConfigPlatform GooglePlay
            = new GetPlatformWalletConfigPlatform("GooglePlay");

        public static readonly GetPlatformWalletConfigPlatform IOS
            = new GetPlatformWalletConfigPlatform("IOS");

        public static readonly GetPlatformWalletConfigPlatform Nintendo
            = new GetPlatformWalletConfigPlatform("Nintendo");

        public static readonly GetPlatformWalletConfigPlatform Oculus
            = new GetPlatformWalletConfigPlatform("Oculus");

        public static readonly GetPlatformWalletConfigPlatform Other
            = new GetPlatformWalletConfigPlatform("Other");

        public static readonly GetPlatformWalletConfigPlatform Playstation
            = new GetPlatformWalletConfigPlatform("Playstation");

        public static readonly GetPlatformWalletConfigPlatform Steam
            = new GetPlatformWalletConfigPlatform("Steam");

        public static readonly GetPlatformWalletConfigPlatform Xbox
            = new GetPlatformWalletConfigPlatform("Xbox");


        public static implicit operator GetPlatformWalletConfigPlatform(string value)
        {
            return NewValue(value);
        }

        public GetPlatformWalletConfigPlatform(string enumValue)
            : base(enumValue)
        {

        }
    }

}