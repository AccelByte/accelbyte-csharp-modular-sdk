// Copyright (c) 2022-2024 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// This code is generated by tool. DO NOT EDIT.

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.Json;
using System.Net;
using System.Net.Http;
using System.IO;
using System.Threading.Tasks;

using AccelByte.Sdk.Core;
using AccelByte.Sdk.Core.Net.Http;

using AccelByte.Sdk.Api.Platform.Model;

namespace AccelByte.Sdk.Api.Platform.Operation
{
    /// <summary>
    /// getXboxEntitlementOwnership
    ///
    /// Get Xbox entitlement ownership by product sku.
    /// </summary>
    public class GetXboxEntitlementOwnership : AccelByte.Sdk.Core.Operation
    {
        #region Builder Part
        public static GetXboxEntitlementOwnershipBuilder Builder { get => new GetXboxEntitlementOwnershipBuilder(); }

        public class GetXboxEntitlementOwnershipBuilder
            : OperationBuilder<GetXboxEntitlementOwnershipBuilder>
        {





            internal GetXboxEntitlementOwnershipBuilder() { }

            internal GetXboxEntitlementOwnershipBuilder(IAccelByteSdk sdk)
            {
                _Sdk = sdk;
            }






            public GetXboxEntitlementOwnership Build(
                XblEntitlementOwnershipRequest body,
                string namespace_,
                string productSku
            )
            {
                GetXboxEntitlementOwnership op = new GetXboxEntitlementOwnership(this,
                    body,                    
                    namespace_,                    
                    productSku                    
                );

                op.SetBaseFields<GetXboxEntitlementOwnershipBuilder>(this);
                return op;
            }

            public GetXboxEntitlementOwnership.Response Execute(
                XblEntitlementOwnershipRequest body,
                string namespace_,
                string productSku
            )
            {
                GetXboxEntitlementOwnership op = Build(
                    body,
                    namespace_,
                    productSku
                );

                if (_Sdk == null)
                    throw IncompleteComponentException.NoSdkObject;

                var response = _Sdk.RunRequest(op);
                return op.ParseResponse(
                    response.Code, 
                    response.ContentType,
                    response.Payload);
            }
            public async Task<GetXboxEntitlementOwnership.Response> ExecuteAsync(
                XblEntitlementOwnershipRequest body,
                string namespace_,
                string productSku
            )
            {
                GetXboxEntitlementOwnership op = Build(
                    body,
                    namespace_,
                    productSku
                );

                if (_Sdk == null)
                    throw IncompleteComponentException.NoSdkObject;

                var response = await _Sdk.RunRequestAsync(op);
                return op.ParseResponse(
                    response.Code, 
                    response.ContentType,
                    response.Payload);
            }
        }

        private GetXboxEntitlementOwnership(GetXboxEntitlementOwnershipBuilder builder,
            XblEntitlementOwnershipRequest body,
            string namespace_,
            string productSku
        )
        {
            PathParams["namespace"] = namespace_;
            PathParams["productSku"] = productSku;
            
            

            
            
            BodyParams = body;
            

            Securities.Add(AccelByte.Sdk.Core.Operation.SECURITY_BEARER);
        }
        #endregion

        #region Response Part        
        public class Response : ApiResponse<Model.PlatformOwnership>
        {


            protected override string GetFullOperationId() => "Platform::Platform::GetXboxEntitlementOwnership";
        }

        #endregion

        public GetXboxEntitlementOwnership(
            string namespace_,            
            string productSku,            
            Model.XblEntitlementOwnershipRequest body            
        )
        {
            PathParams["namespace"] = namespace_;
            PathParams["productSku"] = productSku;
            
            

            
            
            BodyParams = body;
            

            Securities.Add(AccelByte.Sdk.Core.Operation.SECURITY_BEARER);
        }

        public override string Path => "/platform/admin/namespaces/{namespace}/platforms/xbl/entitlements/{productSku}/ownership";

        public override HttpMethod Method => HttpMethod.Post;

        public override List<string> Consumes => new() { "application/json" };

        public override List<string> Produces => new() { "application/json" };
        
        public GetXboxEntitlementOwnership.Response ParseResponse(HttpStatusCode code, string contentType, Stream payload)
        {
            var response = new GetXboxEntitlementOwnership.Response()
            {
                StatusCode = code,
                ContentType = contentType
            };

            if (code == (HttpStatusCode)204)
            {
                response.IsSuccess = true;
            }
            else if ((code == (HttpStatusCode)201) || (code == (HttpStatusCode)202) || (code == (HttpStatusCode)200))
            {
                response.Data = JsonSerializer.Deserialize<Model.PlatformOwnership>(payload, ResponseJsonOptions);
                response.IsSuccess = true;
            }

            return response;
        }
    }

}