// Copyright (c) 2022-2024 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// This code is generated by tool. DO NOT EDIT.
using System;
using System.Collections.Generic;
using System.Text;
using System.IO;
using System.Threading.Tasks;

using AccelByte.Sdk.Core;

using AccelByte.Sdk.Api.Legal.Model;
using AccelByte.Sdk.Api.Legal.Operation;

namespace AccelByte.Sdk.Api.Legal.Wrapper
{
    public class LocalizedPolicyVersionsWithNamespace
    {
        private readonly IAccelByteSdk _sdk;

        private string _CustomBasePath = String.Empty;

        public LocalizedPolicyVersionsWithNamespace(IAccelByteSdk sdk)
        {
            _sdk = sdk;
        }

        public LocalizedPolicyVersionsWithNamespace(IAccelByteSdk sdk, string customBasePath)
        {
            _sdk = sdk;
            _CustomBasePath = customBasePath;
        }

        #region Operation Builders
        public RetrieveLocalizedPolicyVersions1.RetrieveLocalizedPolicyVersions1Builder RetrieveLocalizedPolicyVersions1Op
        {
            get
            {
                var opBuilder = new Operation.RetrieveLocalizedPolicyVersions1.RetrieveLocalizedPolicyVersions1Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public CreateLocalizedPolicyVersion1.CreateLocalizedPolicyVersion1Builder CreateLocalizedPolicyVersion1Op
        {
            get
            {
                var opBuilder = new Operation.CreateLocalizedPolicyVersion1.CreateLocalizedPolicyVersion1Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public RetrieveSingleLocalizedPolicyVersion1.RetrieveSingleLocalizedPolicyVersion1Builder RetrieveSingleLocalizedPolicyVersion1Op
        {
            get
            {
                var opBuilder = new Operation.RetrieveSingleLocalizedPolicyVersion1.RetrieveSingleLocalizedPolicyVersion1Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public UpdateLocalizedPolicyVersion1.UpdateLocalizedPolicyVersion1Builder UpdateLocalizedPolicyVersion1Op
        {
            get
            {
                var opBuilder = new Operation.UpdateLocalizedPolicyVersion1.UpdateLocalizedPolicyVersion1Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public RequestPresignedURL1.RequestPresignedURL1Builder RequestPresignedURL1Op
        {
            get
            {
                var opBuilder = new Operation.RequestPresignedURL1.RequestPresignedURL1Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public SetDefaultPolicy1.SetDefaultPolicy1Builder SetDefaultPolicy1Op
        {
            get
            {
                var opBuilder = new Operation.SetDefaultPolicy1.SetDefaultPolicy1Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public RetrieveSingleLocalizedPolicyVersion3.RetrieveSingleLocalizedPolicyVersion3Builder RetrieveSingleLocalizedPolicyVersion3Op
        {
            get
            {
                var opBuilder = new Operation.RetrieveSingleLocalizedPolicyVersion3.RetrieveSingleLocalizedPolicyVersion3Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        #endregion

        public RetrieveLocalizedPolicyVersions1.Response RetrieveLocalizedPolicyVersions1(RetrieveLocalizedPolicyVersions1 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<RetrieveLocalizedPolicyVersions1.Response> RetrieveLocalizedPolicyVersions1Async(RetrieveLocalizedPolicyVersions1 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public CreateLocalizedPolicyVersion1.Response CreateLocalizedPolicyVersion1(CreateLocalizedPolicyVersion1 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<CreateLocalizedPolicyVersion1.Response> CreateLocalizedPolicyVersion1Async(CreateLocalizedPolicyVersion1 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public RetrieveSingleLocalizedPolicyVersion1.Response RetrieveSingleLocalizedPolicyVersion1(RetrieveSingleLocalizedPolicyVersion1 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<RetrieveSingleLocalizedPolicyVersion1.Response> RetrieveSingleLocalizedPolicyVersion1Async(RetrieveSingleLocalizedPolicyVersion1 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public UpdateLocalizedPolicyVersion1.Response UpdateLocalizedPolicyVersion1(UpdateLocalizedPolicyVersion1 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<UpdateLocalizedPolicyVersion1.Response> UpdateLocalizedPolicyVersion1Async(UpdateLocalizedPolicyVersion1 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public RequestPresignedURL1.Response RequestPresignedURL1(RequestPresignedURL1 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<RequestPresignedURL1.Response> RequestPresignedURL1Async(RequestPresignedURL1 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public SetDefaultPolicy1.Response SetDefaultPolicy1(SetDefaultPolicy1 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<SetDefaultPolicy1.Response> SetDefaultPolicy1Async(SetDefaultPolicy1 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public RetrieveSingleLocalizedPolicyVersion3.Response RetrieveSingleLocalizedPolicyVersion3(RetrieveSingleLocalizedPolicyVersion3 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<RetrieveSingleLocalizedPolicyVersion3.Response> RetrieveSingleLocalizedPolicyVersion3Async(RetrieveSingleLocalizedPolicyVersion3 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
    }
}