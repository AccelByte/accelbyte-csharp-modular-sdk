// Copyright (c) 2022-2024 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// This code is generated by tool. DO NOT EDIT.
using System;
using System.Collections.Generic;
using System.Text;
using System.IO;
using System.Threading.Tasks;

using AccelByte.Sdk.Core;

using AccelByte.Sdk.Api.Legal.Model;
using AccelByte.Sdk.Api.Legal.Operation;

namespace AccelByte.Sdk.Api.Legal.Wrapper
{
    public class LocalizedPolicyVersions
    {
        private readonly IAccelByteSdk _sdk;

        private string _CustomBasePath = String.Empty;

        public LocalizedPolicyVersions(IAccelByteSdk sdk)
        {
            _sdk = sdk;
        }

        public LocalizedPolicyVersions(IAccelByteSdk sdk, string customBasePath)
        {
            _sdk = sdk;
            _CustomBasePath = customBasePath;
        }

        #region Operation Builders
        public OldRetrieveLocalizedPolicyVersions.OldRetrieveLocalizedPolicyVersionsBuilder OldRetrieveLocalizedPolicyVersionsOp
        {
            get
            {
                var opBuilder = new Operation.OldRetrieveLocalizedPolicyVersions.OldRetrieveLocalizedPolicyVersionsBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public OldCreateLocalizedPolicyVersion.OldCreateLocalizedPolicyVersionBuilder OldCreateLocalizedPolicyVersionOp
        {
            get
            {
                var opBuilder = new Operation.OldCreateLocalizedPolicyVersion.OldCreateLocalizedPolicyVersionBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public OldRetrieveSingleLocalizedPolicyVersion.OldRetrieveSingleLocalizedPolicyVersionBuilder OldRetrieveSingleLocalizedPolicyVersionOp
        {
            get
            {
                var opBuilder = new Operation.OldRetrieveSingleLocalizedPolicyVersion.OldRetrieveSingleLocalizedPolicyVersionBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public OldUpdateLocalizedPolicyVersion.OldUpdateLocalizedPolicyVersionBuilder OldUpdateLocalizedPolicyVersionOp
        {
            get
            {
                var opBuilder = new Operation.OldUpdateLocalizedPolicyVersion.OldUpdateLocalizedPolicyVersionBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public OldRequestPresignedURL.OldRequestPresignedURLBuilder OldRequestPresignedURLOp
        {
            get
            {
                var opBuilder = new Operation.OldRequestPresignedURL.OldRequestPresignedURLBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public OldSetDefaultLocalizedPolicy.OldSetDefaultLocalizedPolicyBuilder OldSetDefaultLocalizedPolicyOp
        {
            get
            {
                var opBuilder = new Operation.OldSetDefaultLocalizedPolicy.OldSetDefaultLocalizedPolicyBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public OldPublicRetrieveSingleLocalizedPolicyVersion.OldPublicRetrieveSingleLocalizedPolicyVersionBuilder OldPublicRetrieveSingleLocalizedPolicyVersionOp
        {
            get
            {
                var opBuilder = new Operation.OldPublicRetrieveSingleLocalizedPolicyVersion.OldPublicRetrieveSingleLocalizedPolicyVersionBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        #endregion

        public OldRetrieveLocalizedPolicyVersions.Response OldRetrieveLocalizedPolicyVersions(OldRetrieveLocalizedPolicyVersions input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<OldRetrieveLocalizedPolicyVersions.Response> OldRetrieveLocalizedPolicyVersionsAsync(OldRetrieveLocalizedPolicyVersions input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public OldCreateLocalizedPolicyVersion.Response OldCreateLocalizedPolicyVersion(OldCreateLocalizedPolicyVersion input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<OldCreateLocalizedPolicyVersion.Response> OldCreateLocalizedPolicyVersionAsync(OldCreateLocalizedPolicyVersion input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public OldRetrieveSingleLocalizedPolicyVersion.Response OldRetrieveSingleLocalizedPolicyVersion(OldRetrieveSingleLocalizedPolicyVersion input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<OldRetrieveSingleLocalizedPolicyVersion.Response> OldRetrieveSingleLocalizedPolicyVersionAsync(OldRetrieveSingleLocalizedPolicyVersion input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public OldUpdateLocalizedPolicyVersion.Response OldUpdateLocalizedPolicyVersion(OldUpdateLocalizedPolicyVersion input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<OldUpdateLocalizedPolicyVersion.Response> OldUpdateLocalizedPolicyVersionAsync(OldUpdateLocalizedPolicyVersion input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public OldRequestPresignedURL.Response OldRequestPresignedURL(OldRequestPresignedURL input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<OldRequestPresignedURL.Response> OldRequestPresignedURLAsync(OldRequestPresignedURL input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public OldSetDefaultLocalizedPolicy.Response OldSetDefaultLocalizedPolicy(OldSetDefaultLocalizedPolicy input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<OldSetDefaultLocalizedPolicy.Response> OldSetDefaultLocalizedPolicyAsync(OldSetDefaultLocalizedPolicy input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public OldPublicRetrieveSingleLocalizedPolicyVersion.Response OldPublicRetrieveSingleLocalizedPolicyVersion(OldPublicRetrieveSingleLocalizedPolicyVersion input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<OldPublicRetrieveSingleLocalizedPolicyVersion.Response> OldPublicRetrieveSingleLocalizedPolicyVersionAsync(OldPublicRetrieveSingleLocalizedPolicyVersion input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
    }
}