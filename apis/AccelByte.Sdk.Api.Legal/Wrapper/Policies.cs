// Copyright (c) 2022-2024 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// This code is generated by tool. DO NOT EDIT.
using System;
using System.Collections.Generic;
using System.Text;
using System.IO;
using System.Threading.Tasks;

using AccelByte.Sdk.Core;

using AccelByte.Sdk.Api.Legal.Model;
using AccelByte.Sdk.Api.Legal.Operation;

namespace AccelByte.Sdk.Api.Legal.Wrapper
{
    public class Policies
    {
        private readonly IAccelByteSdk _sdk;

        private string _CustomBasePath = String.Empty;

        public Policies(IAccelByteSdk sdk)
        {
            _sdk = sdk;
        }

        public Policies(IAccelByteSdk sdk, string customBasePath)
        {
            _sdk = sdk;
            _CustomBasePath = customBasePath;
        }

        #region Operation Builders
        public RetrievePolicies.RetrievePoliciesBuilder RetrievePoliciesOp
        {
            get
            {
                var opBuilder = new Operation.RetrievePolicies.RetrievePoliciesBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public OldUpdatePolicy.OldUpdatePolicyBuilder OldUpdatePolicyOp
        {
            get
            {
                var opBuilder = new Operation.OldUpdatePolicy.OldUpdatePolicyBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public OldSetDefaultPolicy.OldSetDefaultPolicyBuilder OldSetDefaultPolicyOp
        {
            get
            {
                var opBuilder = new Operation.OldSetDefaultPolicy.OldSetDefaultPolicyBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public RetrieveCountryListWithPolicies.RetrieveCountryListWithPoliciesBuilder RetrieveCountryListWithPoliciesOp
        {
            get
            {
                var opBuilder = new Operation.RetrieveCountryListWithPolicies.RetrieveCountryListWithPoliciesBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public RetrieveLatestPolicies.RetrieveLatestPoliciesBuilder RetrieveLatestPoliciesOp
        {
            get
            {
                var opBuilder = new Operation.RetrieveLatestPolicies.RetrieveLatestPoliciesBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public RetrieveLatestPoliciesPublic.RetrieveLatestPoliciesPublicBuilder RetrieveLatestPoliciesPublicOp
        {
            get
            {
                var opBuilder = new Operation.RetrieveLatestPoliciesPublic.RetrieveLatestPoliciesPublicBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public OldRetrieveLatestPoliciesByNamespaceAndCountryPublic.OldRetrieveLatestPoliciesByNamespaceAndCountryPublicBuilder OldRetrieveLatestPoliciesByNamespaceAndCountryPublicOp
        {
            get
            {
                var opBuilder = new Operation.OldRetrieveLatestPoliciesByNamespaceAndCountryPublic.OldRetrieveLatestPoliciesByNamespaceAndCountryPublicBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        #endregion

        public RetrievePolicies.Response RetrievePolicies(RetrievePolicies input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<RetrievePolicies.Response> RetrievePoliciesAsync(RetrievePolicies input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public OldUpdatePolicy.Response OldUpdatePolicy(OldUpdatePolicy input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<OldUpdatePolicy.Response> OldUpdatePolicyAsync(OldUpdatePolicy input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public OldSetDefaultPolicy.Response OldSetDefaultPolicy(OldSetDefaultPolicy input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<OldSetDefaultPolicy.Response> OldSetDefaultPolicyAsync(OldSetDefaultPolicy input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public RetrieveCountryListWithPolicies.Response RetrieveCountryListWithPolicies(RetrieveCountryListWithPolicies input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<RetrieveCountryListWithPolicies.Response> RetrieveCountryListWithPoliciesAsync(RetrieveCountryListWithPolicies input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public RetrieveLatestPolicies.Response RetrieveLatestPolicies(RetrieveLatestPolicies input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<RetrieveLatestPolicies.Response> RetrieveLatestPoliciesAsync(RetrieveLatestPolicies input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public RetrieveLatestPoliciesPublic.Response RetrieveLatestPoliciesPublic(RetrieveLatestPoliciesPublic input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<RetrieveLatestPoliciesPublic.Response> RetrieveLatestPoliciesPublicAsync(RetrieveLatestPoliciesPublic input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public OldRetrieveLatestPoliciesByNamespaceAndCountryPublic.Response OldRetrieveLatestPoliciesByNamespaceAndCountryPublic(OldRetrieveLatestPoliciesByNamespaceAndCountryPublic input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<OldRetrieveLatestPoliciesByNamespaceAndCountryPublic.Response> OldRetrieveLatestPoliciesByNamespaceAndCountryPublicAsync(OldRetrieveLatestPoliciesByNamespaceAndCountryPublic input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
    }
}