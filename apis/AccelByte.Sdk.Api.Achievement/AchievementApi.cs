// Copyright (c) 2023 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// This code is generated by tool. DO NOT EDIT.
using System;

using AccelByte.Sdk.Core;

using AccelByte.Sdk.Api.Achievement;

namespace AccelByte.Sdk.Api.Achievement
{
    public class AchievementApi : ISdkApi
    {
        private IAccelByteSdk _Sdk;

        public Wrapper.Achievements Achievements
        {
            get
            {
                if (_Achievements == null)
                    _Achievements = new Wrapper.Achievements(_Sdk);
                return _Achievements;
            }
        }
        private Wrapper.Achievements? _Achievements = null;

        public Wrapper.GlobalAchievements GlobalAchievements
        {
            get
            {
                if (_GlobalAchievements == null)
                    _GlobalAchievements = new Wrapper.GlobalAchievements(_Sdk);
                return _GlobalAchievements;
            }
        }
        private Wrapper.GlobalAchievements? _GlobalAchievements = null;

        public Wrapper.Tags Tags
        {
            get
            {
                if (_Tags == null)
                    _Tags = new Wrapper.Tags(_Sdk);
                return _Tags;
            }
        }
        private Wrapper.Tags? _Tags = null;

        public Wrapper.UserAchievements UserAchievements
        {
            get
            {
                if (_UserAchievements == null)
                    _UserAchievements = new Wrapper.UserAchievements(_Sdk);
                return _UserAchievements;
            }
        }
        private Wrapper.UserAchievements? _UserAchievements = null;

        public Wrapper.Anonymization Anonymization
        {
            get
            {
                if (_Anonymization == null)
                    _Anonymization = new Wrapper.Anonymization(_Sdk);
                return _Anonymization;
            }
        }
        private Wrapper.Anonymization? _Anonymization = null;

        internal AchievementApi(IAccelByteSdk sdk)
        {
            _Sdk = sdk;
        }
    }
}

namespace AccelByte.Sdk.Api
{
    public static class AchievementApi_SdkExts
    {
        public static AchievementApi GetAchievementApi(this IAccelByteSdk sdk)
        {
            return sdk.GetApi<AchievementApi>("achievement", () =>
            {
                return new AchievementApi(sdk);
            });
        }
    }
}