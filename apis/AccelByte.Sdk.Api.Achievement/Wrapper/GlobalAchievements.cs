// Copyright (c) 2022-2023 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// This code is generated by tool. DO NOT EDIT.
using System;
using System.Collections.Generic;
using System.Text;
using System.IO;

using AccelByte.Sdk.Core;

using AccelByte.Sdk.Api.Achievement.Model;
using AccelByte.Sdk.Api.Achievement.Operation;

namespace AccelByte.Sdk.Api.Achievement.Wrapper
{
    public class GlobalAchievements
    {
        private readonly IAccelByteSdk _sdk;

        public GlobalAchievements(IAccelByteSdk sdk)
        {
            _sdk = sdk;
        }

        #region Operation Builders
        public AdminListGlobalAchievements.AdminListGlobalAchievementsBuilder AdminListGlobalAchievementsOp
        {
            get { return new Operation.AdminListGlobalAchievements.AdminListGlobalAchievementsBuilder(_sdk); }
        }
        public AdminListGlobalAchievementContributors.AdminListGlobalAchievementContributorsBuilder AdminListGlobalAchievementContributorsOp
        {
            get { return new Operation.AdminListGlobalAchievementContributors.AdminListGlobalAchievementContributorsBuilder(_sdk); }
        }
        public ResetGlobalAchievement.ResetGlobalAchievementBuilder ResetGlobalAchievementOp
        {
            get { return new Operation.ResetGlobalAchievement.ResetGlobalAchievementBuilder(_sdk); }
        }
        public AdminListUserContributions.AdminListUserContributionsBuilder AdminListUserContributionsOp
        {
            get { return new Operation.AdminListUserContributions.AdminListUserContributionsBuilder(_sdk); }
        }
        public PublicListGlobalAchievements.PublicListGlobalAchievementsBuilder PublicListGlobalAchievementsOp
        {
            get { return new Operation.PublicListGlobalAchievements.PublicListGlobalAchievementsBuilder(_sdk); }
        }
        public ListGlobalAchievementContributors.ListGlobalAchievementContributorsBuilder ListGlobalAchievementContributorsOp
        {
            get { return new Operation.ListGlobalAchievementContributors.ListGlobalAchievementContributorsBuilder(_sdk); }
        }
        public ListUserContributions.ListUserContributionsBuilder ListUserContributionsOp
        {
            get { return new Operation.ListUserContributions.ListUserContributionsBuilder(_sdk); }
        }
        public ClaimGlobalAchievementReward.ClaimGlobalAchievementRewardBuilder ClaimGlobalAchievementRewardOp
        {
            get { return new Operation.ClaimGlobalAchievementReward.ClaimGlobalAchievementRewardBuilder(_sdk); }
        }
        #endregion

        public Model.ModelsPaginatedGlobalAchievementResponse? AdminListGlobalAchievements(AdminListGlobalAchievements input)
        {
            var response = _sdk.RunRequest(input);

            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.ModelsPaginatedContributorResponse? AdminListGlobalAchievementContributors(AdminListGlobalAchievementContributors input)
        {
            var response = _sdk.RunRequest(input);

            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public void ResetGlobalAchievement(ResetGlobalAchievement input)
        {
            var response = _sdk.RunRequest(input);

            input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.ModelsPaginatedUserContributionResponse? AdminListUserContributions(AdminListUserContributions input)
        {
            var response = _sdk.RunRequest(input);

            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.ModelsPaginatedGlobalAchievementResponse? PublicListGlobalAchievements(PublicListGlobalAchievements input)
        {
            var response = _sdk.RunRequest(input);

            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.ModelsPaginatedContributorResponse? ListGlobalAchievementContributors(ListGlobalAchievementContributors input)
        {
            var response = _sdk.RunRequest(input);

            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.ModelsPaginatedUserContributionResponse? ListUserContributions(ListUserContributions input)
        {
            var response = _sdk.RunRequest(input);

            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public void ClaimGlobalAchievementReward(ClaimGlobalAchievementReward input)
        {
            var response = _sdk.RunRequest(input);

            input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
    }
}