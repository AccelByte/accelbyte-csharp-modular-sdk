// Copyright (c) 2022-2024 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// This code is generated by tool. DO NOT EDIT.
using System;
using System.Collections.Generic;
using System.Text;
using System.IO;
using System.Threading.Tasks;

using AccelByte.Sdk.Core;

using AccelByte.Sdk.Api.Csm.Model;
using AccelByte.Sdk.Api.Csm.Operation;

namespace AccelByte.Sdk.Api.Csm.Wrapper
{
    public class ConfigurationV2
    {
        private readonly IAccelByteSdk _sdk;

        private string _CustomBasePath = String.Empty;

        public ConfigurationV2(IAccelByteSdk sdk)
        {
            _sdk = sdk;
        }

        public ConfigurationV2(IAccelByteSdk sdk, string customBasePath)
        {
            _sdk = sdk;
            _CustomBasePath = customBasePath;
        }

        #region Operation Builders
        public GetListOfSecretsV2.GetListOfSecretsV2Builder GetListOfSecretsV2Op
        {
            get
            {
                var opBuilder = new Operation.GetListOfSecretsV2.GetListOfSecretsV2Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public SaveSecretV2.SaveSecretV2Builder SaveSecretV2Op
        {
            get
            {
                var opBuilder = new Operation.SaveSecretV2.SaveSecretV2Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public UpdateSecretV2.UpdateSecretV2Builder UpdateSecretV2Op
        {
            get
            {
                var opBuilder = new Operation.UpdateSecretV2.UpdateSecretV2Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public DeleteSecretV2.DeleteSecretV2Builder DeleteSecretV2Op
        {
            get
            {
                var opBuilder = new Operation.DeleteSecretV2.DeleteSecretV2Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public GetListOfVariablesV2.GetListOfVariablesV2Builder GetListOfVariablesV2Op
        {
            get
            {
                var opBuilder = new Operation.GetListOfVariablesV2.GetListOfVariablesV2Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public SaveVariableV2.SaveVariableV2Builder SaveVariableV2Op
        {
            get
            {
                var opBuilder = new Operation.SaveVariableV2.SaveVariableV2Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public UpdateVariableV2.UpdateVariableV2Builder UpdateVariableV2Op
        {
            get
            {
                var opBuilder = new Operation.UpdateVariableV2.UpdateVariableV2Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public DeleteVariableV2.DeleteVariableV2Builder DeleteVariableV2Op
        {
            get
            {
                var opBuilder = new Operation.DeleteVariableV2.DeleteVariableV2Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        #endregion

        public GetListOfSecretsV2.Response GetListOfSecretsV2(GetListOfSecretsV2 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<GetListOfSecretsV2.Response> GetListOfSecretsV2Async(GetListOfSecretsV2 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public SaveSecretV2.Response SaveSecretV2(SaveSecretV2 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<SaveSecretV2.Response> SaveSecretV2Async(SaveSecretV2 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public UpdateSecretV2.Response UpdateSecretV2(UpdateSecretV2 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<UpdateSecretV2.Response> UpdateSecretV2Async(UpdateSecretV2 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public DeleteSecretV2.Response DeleteSecretV2(DeleteSecretV2 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<DeleteSecretV2.Response> DeleteSecretV2Async(DeleteSecretV2 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public GetListOfVariablesV2.Response GetListOfVariablesV2(GetListOfVariablesV2 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<GetListOfVariablesV2.Response> GetListOfVariablesV2Async(GetListOfVariablesV2 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public SaveVariableV2.Response SaveVariableV2(SaveVariableV2 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<SaveVariableV2.Response> SaveVariableV2Async(SaveVariableV2 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public UpdateVariableV2.Response UpdateVariableV2(UpdateVariableV2 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<UpdateVariableV2.Response> UpdateVariableV2Async(UpdateVariableV2 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public DeleteVariableV2.Response DeleteVariableV2(DeleteVariableV2 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<DeleteVariableV2.Response> DeleteVariableV2Async(DeleteVariableV2 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
    }
}