// Copyright (c) 2022-2024 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// This code is generated by tool. DO NOT EDIT.
using System;
using System.Collections.Generic;
using System.Text;
using System.IO;
using System.Threading.Tasks;

using AccelByte.Sdk.Core;

using AccelByte.Sdk.Api.Csm.Model;
using AccelByte.Sdk.Api.Csm.Operation;

namespace AccelByte.Sdk.Api.Csm.Wrapper
{
    public class DeploymentV2
    {
        private readonly IAccelByteSdk _sdk;

        private string _CustomBasePath = String.Empty;

        public DeploymentV2(IAccelByteSdk sdk)
        {
            _sdk = sdk;
        }

        public DeploymentV2(IAccelByteSdk sdk, string customBasePath)
        {
            _sdk = sdk;
            _CustomBasePath = customBasePath;
        }

        #region Operation Builders
        public CreateDeploymentV2.CreateDeploymentV2Builder CreateDeploymentV2Op
        {
            get
            {
                var opBuilder = new Operation.CreateDeploymentV2.CreateDeploymentV2Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public GetListOfDeploymentV2.GetListOfDeploymentV2Builder GetListOfDeploymentV2Op
        {
            get
            {
                var opBuilder = new Operation.GetListOfDeploymentV2.GetListOfDeploymentV2Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public GetDeploymentV2.GetDeploymentV2Builder GetDeploymentV2Op
        {
            get
            {
                var opBuilder = new Operation.GetDeploymentV2.GetDeploymentV2Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public DeleteDeploymentV2.DeleteDeploymentV2Builder DeleteDeploymentV2Op
        {
            get
            {
                var opBuilder = new Operation.DeleteDeploymentV2.DeleteDeploymentV2Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        #endregion

        public CreateDeploymentV2.Response CreateDeploymentV2(CreateDeploymentV2 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<CreateDeploymentV2.Response> CreateDeploymentV2Async(CreateDeploymentV2 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public GetListOfDeploymentV2.Response GetListOfDeploymentV2(GetListOfDeploymentV2 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<GetListOfDeploymentV2.Response> GetListOfDeploymentV2Async(GetListOfDeploymentV2 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public GetDeploymentV2.Response GetDeploymentV2(GetDeploymentV2 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<GetDeploymentV2.Response> GetDeploymentV2Async(GetDeploymentV2 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public DeleteDeploymentV2.Response DeleteDeploymentV2(DeleteDeploymentV2 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<DeleteDeploymentV2.Response> DeleteDeploymentV2Async(DeleteDeploymentV2 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
    }
}