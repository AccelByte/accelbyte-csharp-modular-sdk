// Copyright (c) 2022-2024 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// This code is generated by tool. DO NOT EDIT.
using System;
using System.Collections.Generic;
using System.Text;
using System.IO;
using System.Threading.Tasks;

using AccelByte.Sdk.Core;

using AccelByte.Sdk.Api.Csm.Model;
using AccelByte.Sdk.Api.Csm.Operation;

namespace AccelByte.Sdk.Api.Csm.Wrapper
{
    public class ManagedResources
    {
        private readonly IAccelByteSdk _sdk;

        private string _CustomBasePath = String.Empty;

        public ManagedResources(IAccelByteSdk sdk)
        {
            _sdk = sdk;
        }

        public ManagedResources(IAccelByteSdk sdk, string customBasePath)
        {
            _sdk = sdk;
            _CustomBasePath = customBasePath;
        }

        #region Operation Builders
        public CreateNoSQLDatabaseCredentialV2.CreateNoSQLDatabaseCredentialV2Builder CreateNoSQLDatabaseCredentialV2Op
        {
            get
            {
                var opBuilder = new Operation.CreateNoSQLDatabaseCredentialV2.CreateNoSQLDatabaseCredentialV2Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public GetNoSQLDatabaseV2.GetNoSQLDatabaseV2Builder GetNoSQLDatabaseV2Op
        {
            get
            {
                var opBuilder = new Operation.GetNoSQLDatabaseV2.GetNoSQLDatabaseV2Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public CreateNoSQLDatabaseV2.CreateNoSQLDatabaseV2Builder CreateNoSQLDatabaseV2Op
        {
            get
            {
                var opBuilder = new Operation.CreateNoSQLDatabaseV2.CreateNoSQLDatabaseV2Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public DeleteNoSQLDatabaseV2.DeleteNoSQLDatabaseV2Builder DeleteNoSQLDatabaseV2Op
        {
            get
            {
                var opBuilder = new Operation.DeleteNoSQLDatabaseV2.DeleteNoSQLDatabaseV2Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public GetNoSQLClusterV2.GetNoSQLClusterV2Builder GetNoSQLClusterV2Op
        {
            get
            {
                var opBuilder = new Operation.GetNoSQLClusterV2.GetNoSQLClusterV2Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public UpdateNoSQLClusterV2.UpdateNoSQLClusterV2Builder UpdateNoSQLClusterV2Op
        {
            get
            {
                var opBuilder = new Operation.UpdateNoSQLClusterV2.UpdateNoSQLClusterV2Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public CreateNoSQLClusterV2.CreateNoSQLClusterV2Builder CreateNoSQLClusterV2Op
        {
            get
            {
                var opBuilder = new Operation.CreateNoSQLClusterV2.CreateNoSQLClusterV2Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public DeleteNoSQLClusterV2.DeleteNoSQLClusterV2Builder DeleteNoSQLClusterV2Op
        {
            get
            {
                var opBuilder = new Operation.DeleteNoSQLClusterV2.DeleteNoSQLClusterV2Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public GetNoSQLAccessTunnelV2.GetNoSQLAccessTunnelV2Builder GetNoSQLAccessTunnelV2Op
        {
            get
            {
                var opBuilder = new Operation.GetNoSQLAccessTunnelV2.GetNoSQLAccessTunnelV2Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        #endregion

        public CreateNoSQLDatabaseCredentialV2.Response CreateNoSQLDatabaseCredentialV2(CreateNoSQLDatabaseCredentialV2 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<CreateNoSQLDatabaseCredentialV2.Response> CreateNoSQLDatabaseCredentialV2Async(CreateNoSQLDatabaseCredentialV2 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public GetNoSQLDatabaseV2.Response GetNoSQLDatabaseV2(GetNoSQLDatabaseV2 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<GetNoSQLDatabaseV2.Response> GetNoSQLDatabaseV2Async(GetNoSQLDatabaseV2 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public CreateNoSQLDatabaseV2.Response CreateNoSQLDatabaseV2(CreateNoSQLDatabaseV2 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<CreateNoSQLDatabaseV2.Response> CreateNoSQLDatabaseV2Async(CreateNoSQLDatabaseV2 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public DeleteNoSQLDatabaseV2.Response DeleteNoSQLDatabaseV2(DeleteNoSQLDatabaseV2 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<DeleteNoSQLDatabaseV2.Response> DeleteNoSQLDatabaseV2Async(DeleteNoSQLDatabaseV2 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public GetNoSQLClusterV2.Response GetNoSQLClusterV2(GetNoSQLClusterV2 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<GetNoSQLClusterV2.Response> GetNoSQLClusterV2Async(GetNoSQLClusterV2 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public UpdateNoSQLClusterV2.Response UpdateNoSQLClusterV2(UpdateNoSQLClusterV2 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<UpdateNoSQLClusterV2.Response> UpdateNoSQLClusterV2Async(UpdateNoSQLClusterV2 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public CreateNoSQLClusterV2.Response CreateNoSQLClusterV2(CreateNoSQLClusterV2 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<CreateNoSQLClusterV2.Response> CreateNoSQLClusterV2Async(CreateNoSQLClusterV2 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public DeleteNoSQLClusterV2.Response DeleteNoSQLClusterV2(DeleteNoSQLClusterV2 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<DeleteNoSQLClusterV2.Response> DeleteNoSQLClusterV2Async(DeleteNoSQLClusterV2 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public GetNoSQLAccessTunnelV2.Response GetNoSQLAccessTunnelV2(GetNoSQLAccessTunnelV2 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<GetNoSQLAccessTunnelV2.Response> GetNoSQLAccessTunnelV2Async(GetNoSQLAccessTunnelV2 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
    }
}