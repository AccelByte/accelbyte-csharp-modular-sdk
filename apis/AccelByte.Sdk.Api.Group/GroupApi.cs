// Copyright (c) 2023 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// This code is generated by tool. DO NOT EDIT.
using System;

using AccelByte.Sdk.Core;

using AccelByte.Sdk.Api.Group;

namespace AccelByte.Sdk.Api.Group
{
    public class GroupApi : ISdkApi
    {
        private IAccelByteSdk _Sdk;

        private string _CustomBasePath = String.Empty;

        public Wrapper.Operations Operations
        {
            get
            {
                if (_Operations == null)
                    _Operations = new Wrapper.Operations(_Sdk, _CustomBasePath);
                return _Operations;
            }
        }
        private Wrapper.Operations? _Operations = null;

        public Wrapper.Configuration Configuration
        {
            get
            {
                if (_Configuration == null)
                    _Configuration = new Wrapper.Configuration(_Sdk, _CustomBasePath);
                return _Configuration;
            }
        }
        private Wrapper.Configuration? _Configuration = null;

        public Wrapper.Group Group
        {
            get
            {
                if (_Group == null)
                    _Group = new Wrapper.Group(_Sdk, _CustomBasePath);
                return _Group;
            }
        }
        private Wrapper.Group? _Group = null;

        public Wrapper.GroupMember GroupMember
        {
            get
            {
                if (_GroupMember == null)
                    _GroupMember = new Wrapper.GroupMember(_Sdk, _CustomBasePath);
                return _GroupMember;
            }
        }
        private Wrapper.GroupMember? _GroupMember = null;

        public Wrapper.GroupRoles GroupRoles
        {
            get
            {
                if (_GroupRoles == null)
                    _GroupRoles = new Wrapper.GroupRoles(_Sdk, _CustomBasePath);
                return _GroupRoles;
            }
        }
        private Wrapper.GroupRoles? _GroupRoles = null;

        public Wrapper.MemberRequest MemberRequest
        {
            get
            {
                if (_MemberRequest == null)
                    _MemberRequest = new Wrapper.MemberRequest(_Sdk, _CustomBasePath);
                return _MemberRequest;
            }
        }
        private Wrapper.MemberRequest? _MemberRequest = null;

        internal GroupApi(IAccelByteSdk sdk)
        {
            _Sdk = sdk;
        }

        public GroupApi WithCustomBasePath(string value)
        {
            _CustomBasePath = value;
            return this;
        }
    }
}

namespace AccelByte.Sdk.Api
{
    public static class GroupApi_SdkExts
    {
        public static GroupApi GetGroupApi(this IAccelByteSdk sdk)
        {
            return sdk.GetApi<GroupApi>("group", () =>
            {
                string customPath = sdk.Configuration.ConfigRepository.GetCustomServiceBasePath("group");
                if (customPath != "")
                    return (new GroupApi(sdk)).WithCustomBasePath(customPath);
                else
                    return new GroupApi(sdk);
            });
        }
    }
}