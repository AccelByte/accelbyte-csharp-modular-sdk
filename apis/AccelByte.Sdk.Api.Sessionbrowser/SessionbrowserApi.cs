// Copyright (c) 2023 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// This code is generated by tool. DO NOT EDIT.
using System;

using AccelByte.Sdk.Core;

using AccelByte.Sdk.Api.Sessionbrowser;

namespace AccelByte.Sdk.Api.Sessionbrowser
{
    public class SessionbrowserApi : ISdkApi
    {
        private IAccelByteSdk _Sdk;

        private string _CustomBasePath = String.Empty;

        public Wrapper.Session Session
        {
            get
            {
                if (_Session == null)
                    _Session = new Wrapper.Session(_Sdk, _CustomBasePath);
                return _Session;
            }
        }
        private Wrapper.Session? _Session = null;

        internal SessionbrowserApi(IAccelByteSdk sdk)
        {
            _Sdk = sdk;
        }

        public SessionbrowserApi WithCustomBasePath(string value)
        {
            _CustomBasePath = value;
            return this;
        }
    }
}

namespace AccelByte.Sdk.Api
{
    public static class SessionbrowserApi_SdkExts
    {
        public static SessionbrowserApi GetSessionbrowserApi(this IAccelByteSdk sdk)
        {
            return sdk.GetApi<SessionbrowserApi>("sessionbrowser", () =>
            {
                string customPath = sdk.Configuration.ConfigRepository.GetCustomServiceBasePath("sessionbrowser");
                if (customPath != "")
                    return (new SessionbrowserApi(sdk)).WithCustomBasePath(customPath);
                else
                    return new SessionbrowserApi(sdk);
            });
        }
    }
}