// Copyright (c) 2022-2023 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// This code is generated by tool. DO NOT EDIT.
using System;
using System.Collections.Generic;
using System.Text;
using System.IO;

using AccelByte.Sdk.Core;

using AccelByte.Sdk.Api.Ugc.Model;
using AccelByte.Sdk.Api.Ugc.Operation;

namespace AccelByte.Sdk.Api.Ugc.Wrapper
{
    public class Anonymization
    {
        private readonly IAccelByteSdk _sdk;

        public Anonymization(IAccelByteSdk sdk)
        {
            _sdk = sdk;
        }

        #region Operation Builders
        public AdminDeleteAllUserChannels.AdminDeleteAllUserChannelsBuilder AdminDeleteAllUserChannelsOp
        {
            get { return new Operation.AdminDeleteAllUserChannels.AdminDeleteAllUserChannelsBuilder(_sdk); }
        }
        public AdminDeleteAllUserContents.AdminDeleteAllUserContentsBuilder AdminDeleteAllUserContentsOp
        {
            get { return new Operation.AdminDeleteAllUserContents.AdminDeleteAllUserContentsBuilder(_sdk); }
        }
        public AdminDeleteAllUserGroup.AdminDeleteAllUserGroupBuilder AdminDeleteAllUserGroupOp
        {
            get { return new Operation.AdminDeleteAllUserGroup.AdminDeleteAllUserGroupBuilder(_sdk); }
        }
        public AdminDeleteAllUserStates.AdminDeleteAllUserStatesBuilder AdminDeleteAllUserStatesOp
        {
            get { return new Operation.AdminDeleteAllUserStates.AdminDeleteAllUserStatesBuilder(_sdk); }
        }
        public DeleteAllUserChannel.DeleteAllUserChannelBuilder DeleteAllUserChannelOp
        {
            get { return new Operation.DeleteAllUserChannel.DeleteAllUserChannelBuilder(_sdk); }
        }
        public DeleteAllUserContents.DeleteAllUserContentsBuilder DeleteAllUserContentsOp
        {
            get { return new Operation.DeleteAllUserContents.DeleteAllUserContentsBuilder(_sdk); }
        }
        public DeleteAllUserGroup.DeleteAllUserGroupBuilder DeleteAllUserGroupOp
        {
            get { return new Operation.DeleteAllUserGroup.DeleteAllUserGroupBuilder(_sdk); }
        }
        public DeleteAllUserStates.DeleteAllUserStatesBuilder DeleteAllUserStatesOp
        {
            get { return new Operation.DeleteAllUserStates.DeleteAllUserStatesBuilder(_sdk); }
        }
        #endregion

        public void AdminDeleteAllUserChannels(AdminDeleteAllUserChannels input)
        {
            var response = _sdk.RunRequest(input);

            input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public void AdminDeleteAllUserContents(AdminDeleteAllUserContents input)
        {
            var response = _sdk.RunRequest(input);

            input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public void AdminDeleteAllUserGroup(AdminDeleteAllUserGroup input)
        {
            var response = _sdk.RunRequest(input);

            input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public void AdminDeleteAllUserStates(AdminDeleteAllUserStates input)
        {
            var response = _sdk.RunRequest(input);

            input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public void DeleteAllUserChannel(DeleteAllUserChannel input)
        {
            var response = _sdk.RunRequest(input);

            input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public void DeleteAllUserContents(DeleteAllUserContents input)
        {
            var response = _sdk.RunRequest(input);

            input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public void DeleteAllUserGroup(DeleteAllUserGroup input)
        {
            var response = _sdk.RunRequest(input);

            input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public void DeleteAllUserStates(DeleteAllUserStates input)
        {
            var response = _sdk.RunRequest(input);

            input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
    }
}