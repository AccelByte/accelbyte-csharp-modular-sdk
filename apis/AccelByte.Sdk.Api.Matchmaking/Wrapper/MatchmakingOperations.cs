// Copyright (c) 2022-2023 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// This code is generated by tool. DO NOT EDIT.
using System;
using System.Collections.Generic;
using System.Text;
using System.IO;

using AccelByte.Sdk.Core;

using AccelByte.Sdk.Api.Matchmaking.Model;
using AccelByte.Sdk.Api.Matchmaking.Operation;

namespace AccelByte.Sdk.Api.Matchmaking.Wrapper
{
    public class MatchmakingOperations
    {
        private readonly IAccelByteSdk _sdk;

        public MatchmakingOperations(IAccelByteSdk sdk)
        {
            _sdk = sdk;
        }

        #region Operation Builders
        public GetHealthcheckInfo.GetHealthcheckInfoBuilder GetHealthcheckInfoOp
        {
            get { return new Operation.GetHealthcheckInfo.GetHealthcheckInfoBuilder(_sdk); }
        }
        public HandlerV3Healthz.HandlerV3HealthzBuilder HandlerV3HealthzOp
        {
            get { return new Operation.HandlerV3Healthz.HandlerV3HealthzBuilder(_sdk); }
        }
        public PublicGetMessages.PublicGetMessagesBuilder PublicGetMessagesOp
        {
            get { return new Operation.PublicGetMessages.PublicGetMessagesBuilder(_sdk); }
        }
        public VersionCheckHandler.VersionCheckHandlerBuilder VersionCheckHandlerOp
        {
            get { return new Operation.VersionCheckHandler.VersionCheckHandlerBuilder(_sdk); }
        }
        #endregion
        
        public void GetHealthcheckInfo(GetHealthcheckInfo input) {
            var response = _sdk.RunRequest(input);

            input.ParseResponse(
                    response.Code, 
                    response.ContentType,
                    response.Payload);
        }
        public void HandlerV3Healthz(HandlerV3Healthz input) {
            var response = _sdk.RunRequest(input);

            input.ParseResponse(
                    response.Code, 
                    response.ContentType,
                    response.Payload);
        }
        public List<Model.LogAppMessageDeclaration>? PublicGetMessages(PublicGetMessages input)
        {
            var response = _sdk.RunRequest(input);

            return input.ParseResponse(
                    response.Code, 
                    response.ContentType,
                    response.Payload);
        }
        public void VersionCheckHandler(VersionCheckHandler input) {
            var response = _sdk.RunRequest(input);

            input.ParseResponse(
                    response.Code, 
                    response.ContentType,
                    response.Payload);
        }
    }
}