// Copyright (c) 2022-2023 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// This code is generated by tool. DO NOT EDIT.

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.Json;
using System.Net;
using System.Net.Http;
using System.IO;

using AccelByte.Sdk.Core;
using AccelByte.Sdk.Core.Net.Http;

using AccelByte.Sdk.Api.Iam.Model;

namespace AccelByte.Sdk.Api.Iam.Operation
{
    /// <summary>
    /// UpdateClientPermission
    ///
    /// 
    /// 
    /// ## The endpoint is going to be deprecated
    /// 
    /// 
    /// 
    /// 
    /// Required permission 'CLIENT:ADMIN [UPDATE]'
    /// Endpoint migration guide
    /// 
    /// 
    /// 
    /// 
    ///   * Substitute endpoint: iam/v3/admin/namespaces/{namespace}/clients/{clientId}/permissions [PUT]
    /// </summary>
    [Obsolete(DiagnosticId = "ab_deprecated_operation")]
    public class UpdateClientPermission : AccelByte.Sdk.Core.Operation
    {
        #region Builder Part
        public static UpdateClientPermissionBuilder Builder { get => new UpdateClientPermissionBuilder(); }

        public class UpdateClientPermissionBuilder
            : OperationBuilder<UpdateClientPermissionBuilder>
        {





            internal UpdateClientPermissionBuilder() { }

            internal UpdateClientPermissionBuilder(IAccelByteSdk sdk)
            {
                _Sdk = sdk;
            }






            public UpdateClientPermission Build(
                AccountcommonClientPermissions body,
                string clientId
            )
            {
                UpdateClientPermission op = new UpdateClientPermission(this,
                    body,
                    clientId
                );
                op.PreferredSecurityMethod = PreferredSecurityMethod;
                op.RequestJsonOptions = RequestJsonOptions;
                op.ResponseJsonOptions = ResponseJsonOptions;

                return op;
            }

            [Obsolete(DiagnosticId = "ab_deprecated_operation_wrapper")]
            public void Execute(
                AccountcommonClientPermissions body,
                string clientId
            )
            {
                UpdateClientPermission op = Build(
                    body,
                    clientId
                );

                if (_Sdk == null)
                    throw IncompleteComponentException.NoSdkObject;

                var response = _Sdk.RunRequest(op);
                op.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
            }
        }

        private UpdateClientPermission(UpdateClientPermissionBuilder builder,
            AccountcommonClientPermissions body,
            string clientId
        )
        {
            PathParams["clientId"] = clientId;





            BodyParams = body;


            Securities.Add(AccelByte.Sdk.Core.Operation.SECURITY_BEARER);
        }
        #endregion

        public UpdateClientPermission(
            string clientId,
            Model.AccountcommonClientPermissions body
        )
        {
            PathParams["clientId"] = clientId;





            BodyParams = body;


            Securities.Add(AccelByte.Sdk.Core.Operation.SECURITY_BEARER);
        }

        public override string Path => "/iam/clients/{clientId}/clientpermissions";

        public override HttpMethod Method => HttpMethod.Post;

        public override List<string> Consumes => new() { "application/json" };

        public override List<string> Produces => new() { "application/json" };

        public void ParseResponse(HttpStatusCode code, string contentType, Stream payload)
        {
            if (code == (HttpStatusCode)204)
            {
                return;
            }

            var payloadString = payload.ReadToString();

            throw new HttpResponseException(code, payloadString);
        }
    }

}