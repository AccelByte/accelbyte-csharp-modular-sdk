// Copyright (c) 2022-2024 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// This code is generated by tool. DO NOT EDIT.
using System;
using System.Collections.Generic;
using System.Text;
using System.IO;
using System.Threading.Tasks;

using AccelByte.Sdk.Core;

using AccelByte.Sdk.Api.Iam.Model;
using AccelByte.Sdk.Api.Iam.Operation;

namespace AccelByte.Sdk.Api.Iam.Wrapper
{
    public class Bans
    {
        private readonly IAccelByteSdk _sdk;

        private string _CustomBasePath = String.Empty;

        public Bans(IAccelByteSdk sdk)
        {
            _sdk = sdk;
        }

        public Bans(IAccelByteSdk sdk, string customBasePath)
        {
            _sdk = sdk;
            _CustomBasePath = customBasePath;
        }

        #region Operation Builders
        [Obsolete(DiagnosticId = "ab_deprecated_operation_wrapper")]
        public GetBansType.GetBansTypeBuilder GetBansTypeOp
        {
            get
            {
                var opBuilder = new Operation.GetBansType.GetBansTypeBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        [Obsolete(DiagnosticId = "ab_deprecated_operation_wrapper")]
        public GetListBanReason.GetListBanReasonBuilder GetListBanReasonOp
        {
            get
            {
                var opBuilder = new Operation.GetListBanReason.GetListBanReasonBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public AdminGetBansTypeV3.AdminGetBansTypeV3Builder AdminGetBansTypeV3Op
        {
            get
            {
                var opBuilder = new Operation.AdminGetBansTypeV3.AdminGetBansTypeV3Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public AdminGetListBanReasonV3.AdminGetListBanReasonV3Builder AdminGetListBanReasonV3Op
        {
            get
            {
                var opBuilder = new Operation.AdminGetListBanReasonV3.AdminGetListBanReasonV3Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public AdminGetBannedUsersV3.AdminGetBannedUsersV3Builder AdminGetBannedUsersV3Op
        {
            get
            {
                var opBuilder = new Operation.AdminGetBannedUsersV3.AdminGetBannedUsersV3Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public AdminBanUserBulkV3.AdminBanUserBulkV3Builder AdminBanUserBulkV3Op
        {
            get
            {
                var opBuilder = new Operation.AdminBanUserBulkV3.AdminBanUserBulkV3Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public AdminUnbanUserBulkV3.AdminUnbanUserBulkV3Builder AdminUnbanUserBulkV3Op
        {
            get
            {
                var opBuilder = new Operation.AdminUnbanUserBulkV3.AdminUnbanUserBulkV3Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public AdminGetBansTypeWithNamespaceV3.AdminGetBansTypeWithNamespaceV3Builder AdminGetBansTypeWithNamespaceV3Op
        {
            get
            {
                var opBuilder = new Operation.AdminGetBansTypeWithNamespaceV3.AdminGetBansTypeWithNamespaceV3Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        #endregion

#pragma warning disable ab_deprecated_operation
        [Obsolete(DiagnosticId = "ab_deprecated_operation_wrapper")]
        public GetBansType.Response GetBansType(GetBansType input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<GetBansType.Response> GetBansTypeAsync(GetBansType input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
#pragma warning restore ab_deprecated_operation
#pragma warning disable ab_deprecated_operation
        [Obsolete(DiagnosticId = "ab_deprecated_operation_wrapper")]
        public GetListBanReason.Response GetListBanReason(GetListBanReason input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<GetListBanReason.Response> GetListBanReasonAsync(GetListBanReason input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
#pragma warning restore ab_deprecated_operation
        public AdminGetBansTypeV3.Response AdminGetBansTypeV3(AdminGetBansTypeV3 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<AdminGetBansTypeV3.Response> AdminGetBansTypeV3Async(AdminGetBansTypeV3 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public AdminGetListBanReasonV3.Response AdminGetListBanReasonV3(AdminGetListBanReasonV3 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<AdminGetListBanReasonV3.Response> AdminGetListBanReasonV3Async(AdminGetListBanReasonV3 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public AdminGetBannedUsersV3.Response AdminGetBannedUsersV3(AdminGetBannedUsersV3 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<AdminGetBannedUsersV3.Response> AdminGetBannedUsersV3Async(AdminGetBannedUsersV3 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public AdminBanUserBulkV3.Response AdminBanUserBulkV3(AdminBanUserBulkV3 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<AdminBanUserBulkV3.Response> AdminBanUserBulkV3Async(AdminBanUserBulkV3 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public AdminUnbanUserBulkV3.Response AdminUnbanUserBulkV3(AdminUnbanUserBulkV3 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<AdminUnbanUserBulkV3.Response> AdminUnbanUserBulkV3Async(AdminUnbanUserBulkV3 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public AdminGetBansTypeWithNamespaceV3.Response AdminGetBansTypeWithNamespaceV3(AdminGetBansTypeWithNamespaceV3 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<AdminGetBansTypeWithNamespaceV3.Response> AdminGetBansTypeWithNamespaceV3Async(AdminGetBansTypeWithNamespaceV3 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
    }
}