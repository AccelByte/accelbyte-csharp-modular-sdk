// Copyright (c) 2022-2024 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// This code is generated by tool. DO NOT EDIT.
using System;
using System.Collections.Generic;
using System.Text;
using System.IO;
using System.Threading.Tasks;

using AccelByte.Sdk.Core;

using AccelByte.Sdk.Api.Iam.Model;
using AccelByte.Sdk.Api.Iam.Operation;

namespace AccelByte.Sdk.Api.Iam.Wrapper
{
    public class Users
    {
        private readonly IAccelByteSdk _sdk;

        private string _CustomBasePath = String.Empty;

        public Users(IAccelByteSdk sdk)
        {
            _sdk = sdk;
        }

        public Users(IAccelByteSdk sdk, string customBasePath)
        {
            _sdk = sdk;
            _CustomBasePath = customBasePath;
        }

        #region Operation Builders
        [Obsolete(DiagnosticId = "ab_deprecated_operation_wrapper")]
        public CreateUser.CreateUserBuilder CreateUserOp
        {
            get
            {
                var opBuilder = new Operation.CreateUser.CreateUserBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        [Obsolete(DiagnosticId = "ab_deprecated_operation_wrapper")]
        public GetAdminUsersByRoleID.GetAdminUsersByRoleIDBuilder GetAdminUsersByRoleIDOp
        {
            get
            {
                var opBuilder = new Operation.GetAdminUsersByRoleID.GetAdminUsersByRoleIDBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        [Obsolete(DiagnosticId = "ab_deprecated_operation_wrapper")]
        public GetUserByLoginID.GetUserByLoginIDBuilder GetUserByLoginIDOp
        {
            get
            {
                var opBuilder = new Operation.GetUserByLoginID.GetUserByLoginIDBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        [Obsolete(DiagnosticId = "ab_deprecated_operation_wrapper")]
        public GetUserByPlatformUserID.GetUserByPlatformUserIDBuilder GetUserByPlatformUserIDOp
        {
            get
            {
                var opBuilder = new Operation.GetUserByPlatformUserID.GetUserByPlatformUserIDBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        [Obsolete(DiagnosticId = "ab_deprecated_operation_wrapper")]
        public ForgotPassword.ForgotPasswordBuilder ForgotPasswordOp
        {
            get
            {
                var opBuilder = new Operation.ForgotPassword.ForgotPasswordBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        [Obsolete(DiagnosticId = "ab_deprecated_operation_wrapper")]
        public GetUsersByLoginIds.GetUsersByLoginIdsBuilder GetUsersByLoginIdsOp
        {
            get
            {
                var opBuilder = new Operation.GetUsersByLoginIds.GetUsersByLoginIdsBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        [Obsolete(DiagnosticId = "ab_deprecated_operation_wrapper")]
        public ResetPassword.ResetPasswordBuilder ResetPasswordOp
        {
            get
            {
                var opBuilder = new Operation.ResetPassword.ResetPasswordBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        [Obsolete(DiagnosticId = "ab_deprecated_operation_wrapper")]
        public SearchUser.SearchUserBuilder SearchUserOp
        {
            get
            {
                var opBuilder = new Operation.SearchUser.SearchUserBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        [Obsolete(DiagnosticId = "ab_deprecated_operation_wrapper")]
        public GetUserByUserID.GetUserByUserIDBuilder GetUserByUserIDOp
        {
            get
            {
                var opBuilder = new Operation.GetUserByUserID.GetUserByUserIDBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        [Obsolete(DiagnosticId = "ab_deprecated_operation_wrapper")]
        public UpdateUser.UpdateUserBuilder UpdateUserOp
        {
            get
            {
                var opBuilder = new Operation.UpdateUser.UpdateUserBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        [Obsolete(DiagnosticId = "ab_deprecated_operation_wrapper")]
        public DeleteUser.DeleteUserBuilder DeleteUserOp
        {
            get
            {
                var opBuilder = new Operation.DeleteUser.DeleteUserBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        [Obsolete(DiagnosticId = "ab_deprecated_operation_wrapper")]
        public BanUser.BanUserBuilder BanUserOp
        {
            get
            {
                var opBuilder = new Operation.BanUser.BanUserBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        [Obsolete(DiagnosticId = "ab_deprecated_operation_wrapper")]
        public GetUserBanHistory.GetUserBanHistoryBuilder GetUserBanHistoryOp
        {
            get
            {
                var opBuilder = new Operation.GetUserBanHistory.GetUserBanHistoryBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        [Obsolete(DiagnosticId = "ab_deprecated_operation_wrapper")]
        public DisableUserBan.DisableUserBanBuilder DisableUserBanOp
        {
            get
            {
                var opBuilder = new Operation.DisableUserBan.DisableUserBanBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        [Obsolete(DiagnosticId = "ab_deprecated_operation_wrapper")]
        public EnableUserBan.EnableUserBanBuilder EnableUserBanOp
        {
            get
            {
                var opBuilder = new Operation.EnableUserBan.EnableUserBanBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        [Obsolete(DiagnosticId = "ab_deprecated_operation_wrapper")]
        public ListCrossNamespaceAccountLink.ListCrossNamespaceAccountLinkBuilder ListCrossNamespaceAccountLinkOp
        {
            get
            {
                var opBuilder = new Operation.ListCrossNamespaceAccountLink.ListCrossNamespaceAccountLinkBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        [Obsolete(DiagnosticId = "ab_deprecated_operation_wrapper")]
        public DisableUser.DisableUserBuilder DisableUserOp
        {
            get
            {
                var opBuilder = new Operation.DisableUser.DisableUserBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        [Obsolete(DiagnosticId = "ab_deprecated_operation_wrapper")]
        public EnableUser.EnableUserBuilder EnableUserOp
        {
            get
            {
                var opBuilder = new Operation.EnableUser.EnableUserBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        [Obsolete(DiagnosticId = "ab_deprecated_operation_wrapper")]
        public GetUserInformation.GetUserInformationBuilder GetUserInformationOp
        {
            get
            {
                var opBuilder = new Operation.GetUserInformation.GetUserInformationBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        [Obsolete(DiagnosticId = "ab_deprecated_operation_wrapper")]
        public DeleteUserInformation.DeleteUserInformationBuilder DeleteUserInformationOp
        {
            get
            {
                var opBuilder = new Operation.DeleteUserInformation.DeleteUserInformationBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        [Obsolete(DiagnosticId = "ab_deprecated_operation_wrapper")]
        public GetUserLoginHistories.GetUserLoginHistoriesBuilder GetUserLoginHistoriesOp
        {
            get
            {
                var opBuilder = new Operation.GetUserLoginHistories.GetUserLoginHistoriesBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        [Obsolete(DiagnosticId = "ab_deprecated_operation_wrapper")]
        public UpdatePassword.UpdatePasswordBuilder UpdatePasswordOp
        {
            get
            {
                var opBuilder = new Operation.UpdatePassword.UpdatePasswordBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        [Obsolete(DiagnosticId = "ab_deprecated_operation_wrapper")]
        public SaveUserPermission.SaveUserPermissionBuilder SaveUserPermissionOp
        {
            get
            {
                var opBuilder = new Operation.SaveUserPermission.SaveUserPermissionBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        [Obsolete(DiagnosticId = "ab_deprecated_operation_wrapper")]
        public AddUserPermission.AddUserPermissionBuilder AddUserPermissionOp
        {
            get
            {
                var opBuilder = new Operation.AddUserPermission.AddUserPermissionBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        [Obsolete(DiagnosticId = "ab_deprecated_operation_wrapper")]
        public DeleteUserPermission.DeleteUserPermissionBuilder DeleteUserPermissionOp
        {
            get
            {
                var opBuilder = new Operation.DeleteUserPermission.DeleteUserPermissionBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        [Obsolete(DiagnosticId = "ab_deprecated_operation_wrapper")]
        public GetUserPlatformAccounts.GetUserPlatformAccountsBuilder GetUserPlatformAccountsOp
        {
            get
            {
                var opBuilder = new Operation.GetUserPlatformAccounts.GetUserPlatformAccountsBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        [Obsolete(DiagnosticId = "ab_deprecated_operation_wrapper")]
        public GetUserMapping.GetUserMappingBuilder GetUserMappingOp
        {
            get
            {
                var opBuilder = new Operation.GetUserMapping.GetUserMappingBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        [Obsolete(DiagnosticId = "ab_deprecated_operation_wrapper")]
        public GetUserJusticePlatformAccount.GetUserJusticePlatformAccountBuilder GetUserJusticePlatformAccountOp
        {
            get
            {
                var opBuilder = new Operation.GetUserJusticePlatformAccount.GetUserJusticePlatformAccountBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        [Obsolete(DiagnosticId = "ab_deprecated_operation_wrapper")]
        public PlatformLink.PlatformLinkBuilder PlatformLinkOp
        {
            get
            {
                var opBuilder = new Operation.PlatformLink.PlatformLinkBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        [Obsolete(DiagnosticId = "ab_deprecated_operation_wrapper")]
        public PlatformUnlink.PlatformUnlinkBuilder PlatformUnlinkOp
        {
            get
            {
                var opBuilder = new Operation.PlatformUnlink.PlatformUnlinkBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        [Obsolete(DiagnosticId = "ab_deprecated_operation_wrapper")]
        public GetPublisherUser.GetPublisherUserBuilder GetPublisherUserOp
        {
            get
            {
                var opBuilder = new Operation.GetPublisherUser.GetPublisherUserBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        [Obsolete(DiagnosticId = "ab_deprecated_operation_wrapper")]
        public SaveUserRoles.SaveUserRolesBuilder SaveUserRolesOp
        {
            get
            {
                var opBuilder = new Operation.SaveUserRoles.SaveUserRolesBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        [Obsolete(DiagnosticId = "ab_deprecated_operation_wrapper")]
        public AddUserRole.AddUserRoleBuilder AddUserRoleOp
        {
            get
            {
                var opBuilder = new Operation.AddUserRole.AddUserRoleBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        [Obsolete(DiagnosticId = "ab_deprecated_operation_wrapper")]
        public DeleteUserRole.DeleteUserRoleBuilder DeleteUserRoleOp
        {
            get
            {
                var opBuilder = new Operation.DeleteUserRole.DeleteUserRoleBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        [Obsolete(DiagnosticId = "ab_deprecated_operation_wrapper")]
        public UpgradeHeadlessAccount.UpgradeHeadlessAccountBuilder UpgradeHeadlessAccountOp
        {
            get
            {
                var opBuilder = new Operation.UpgradeHeadlessAccount.UpgradeHeadlessAccountBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        [Obsolete(DiagnosticId = "ab_deprecated_operation_wrapper")]
        public UpgradeHeadlessAccountWithVerificationCode.UpgradeHeadlessAccountWithVerificationCodeBuilder UpgradeHeadlessAccountWithVerificationCodeOp
        {
            get
            {
                var opBuilder = new Operation.UpgradeHeadlessAccountWithVerificationCode.UpgradeHeadlessAccountWithVerificationCodeBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        [Obsolete(DiagnosticId = "ab_deprecated_operation_wrapper")]
        public UserVerification.UserVerificationBuilder UserVerificationOp
        {
            get
            {
                var opBuilder = new Operation.UserVerification.UserVerificationBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        [Obsolete(DiagnosticId = "ab_deprecated_operation_wrapper")]
        public SendVerificationCode.SendVerificationCodeBuilder SendVerificationCodeOp
        {
            get
            {
                var opBuilder = new Operation.SendVerificationCode.SendVerificationCodeBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        [Obsolete(DiagnosticId = "ab_deprecated_operation_wrapper")]
        public AdminGetAgeRestrictionStatusV2.AdminGetAgeRestrictionStatusV2Builder AdminGetAgeRestrictionStatusV2Op
        {
            get
            {
                var opBuilder = new Operation.AdminGetAgeRestrictionStatusV2.AdminGetAgeRestrictionStatusV2Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        [Obsolete(DiagnosticId = "ab_deprecated_operation_wrapper")]
        public AdminUpdateAgeRestrictionConfigV2.AdminUpdateAgeRestrictionConfigV2Builder AdminUpdateAgeRestrictionConfigV2Op
        {
            get
            {
                var opBuilder = new Operation.AdminUpdateAgeRestrictionConfigV2.AdminUpdateAgeRestrictionConfigV2Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        [Obsolete(DiagnosticId = "ab_deprecated_operation_wrapper")]
        public GetListCountryAgeRestriction.GetListCountryAgeRestrictionBuilder GetListCountryAgeRestrictionOp
        {
            get
            {
                var opBuilder = new Operation.GetListCountryAgeRestriction.GetListCountryAgeRestrictionBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        [Obsolete(DiagnosticId = "ab_deprecated_operation_wrapper")]
        public UpdateCountryAgeRestriction.UpdateCountryAgeRestrictionBuilder UpdateCountryAgeRestrictionOp
        {
            get
            {
                var opBuilder = new Operation.UpdateCountryAgeRestriction.UpdateCountryAgeRestrictionBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        [Obsolete(DiagnosticId = "ab_deprecated_operation_wrapper")]
        public AdminSearchUsersV2.AdminSearchUsersV2Builder AdminSearchUsersV2Op
        {
            get
            {
                var opBuilder = new Operation.AdminSearchUsersV2.AdminSearchUsersV2Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        [Obsolete(DiagnosticId = "ab_deprecated_operation_wrapper")]
        public AdminGetUserByUserIdV2.AdminGetUserByUserIdV2Builder AdminGetUserByUserIdV2Op
        {
            get
            {
                var opBuilder = new Operation.AdminGetUserByUserIdV2.AdminGetUserByUserIdV2Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        [Obsolete(DiagnosticId = "ab_deprecated_operation_wrapper")]
        public AdminUpdateUserV2.AdminUpdateUserV2Builder AdminUpdateUserV2Op
        {
            get
            {
                var opBuilder = new Operation.AdminUpdateUserV2.AdminUpdateUserV2Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        [Obsolete(DiagnosticId = "ab_deprecated_operation_wrapper")]
        public AdminBanUserV2.AdminBanUserV2Builder AdminBanUserV2Op
        {
            get
            {
                var opBuilder = new Operation.AdminBanUserV2.AdminBanUserV2Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        [Obsolete(DiagnosticId = "ab_deprecated_operation_wrapper")]
        public AdminGetUserBanV2.AdminGetUserBanV2Builder AdminGetUserBanV2Op
        {
            get
            {
                var opBuilder = new Operation.AdminGetUserBanV2.AdminGetUserBanV2Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        [Obsolete(DiagnosticId = "ab_deprecated_operation_wrapper")]
        public AdminDisableUserV2.AdminDisableUserV2Builder AdminDisableUserV2Op
        {
            get
            {
                var opBuilder = new Operation.AdminDisableUserV2.AdminDisableUserV2Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        [Obsolete(DiagnosticId = "ab_deprecated_operation_wrapper")]
        public AdminEnableUserV2.AdminEnableUserV2Builder AdminEnableUserV2Op
        {
            get
            {
                var opBuilder = new Operation.AdminEnableUserV2.AdminEnableUserV2Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        [Obsolete(DiagnosticId = "ab_deprecated_operation_wrapper")]
        public AdminResetPasswordV2.AdminResetPasswordV2Builder AdminResetPasswordV2Op
        {
            get
            {
                var opBuilder = new Operation.AdminResetPasswordV2.AdminResetPasswordV2Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        [Obsolete(DiagnosticId = "ab_deprecated_operation_wrapper")]
        public AdminDeletePlatformLinkV2.AdminDeletePlatformLinkV2Builder AdminDeletePlatformLinkV2Op
        {
            get
            {
                var opBuilder = new Operation.AdminDeletePlatformLinkV2.AdminDeletePlatformLinkV2Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        [Obsolete(DiagnosticId = "ab_deprecated_operation_wrapper")]
        public AdminPutUserRolesV2.AdminPutUserRolesV2Builder AdminPutUserRolesV2Op
        {
            get
            {
                var opBuilder = new Operation.AdminPutUserRolesV2.AdminPutUserRolesV2Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        [Obsolete(DiagnosticId = "ab_deprecated_operation_wrapper")]
        public AdminCreateUserRolesV2.AdminCreateUserRolesV2Builder AdminCreateUserRolesV2Op
        {
            get
            {
                var opBuilder = new Operation.AdminCreateUserRolesV2.AdminCreateUserRolesV2Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        [Obsolete(DiagnosticId = "ab_deprecated_operation_wrapper")]
        public PublicGetCountryAgeRestriction.PublicGetCountryAgeRestrictionBuilder PublicGetCountryAgeRestrictionOp
        {
            get
            {
                var opBuilder = new Operation.PublicGetCountryAgeRestriction.PublicGetCountryAgeRestrictionBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        [Obsolete(DiagnosticId = "ab_deprecated_operation_wrapper")]
        public PublicCreateUserV2.PublicCreateUserV2Builder PublicCreateUserV2Op
        {
            get
            {
                var opBuilder = new Operation.PublicCreateUserV2.PublicCreateUserV2Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        [Obsolete(DiagnosticId = "ab_deprecated_operation_wrapper")]
        public PublicForgotPasswordV2.PublicForgotPasswordV2Builder PublicForgotPasswordV2Op
        {
            get
            {
                var opBuilder = new Operation.PublicForgotPasswordV2.PublicForgotPasswordV2Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        [Obsolete(DiagnosticId = "ab_deprecated_operation_wrapper")]
        public PublicResetPasswordV2.PublicResetPasswordV2Builder PublicResetPasswordV2Op
        {
            get
            {
                var opBuilder = new Operation.PublicResetPasswordV2.PublicResetPasswordV2Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        [Obsolete(DiagnosticId = "ab_deprecated_operation_wrapper")]
        public PublicGetUserByUserIDV2.PublicGetUserByUserIDV2Builder PublicGetUserByUserIDV2Op
        {
            get
            {
                var opBuilder = new Operation.PublicGetUserByUserIDV2.PublicGetUserByUserIDV2Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        [Obsolete(DiagnosticId = "ab_deprecated_operation_wrapper")]
        public PublicUpdateUserV2.PublicUpdateUserV2Builder PublicUpdateUserV2Op
        {
            get
            {
                var opBuilder = new Operation.PublicUpdateUserV2.PublicUpdateUserV2Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        [Obsolete(DiagnosticId = "ab_deprecated_operation_wrapper")]
        public PublicGetUserBan.PublicGetUserBanBuilder PublicGetUserBanOp
        {
            get
            {
                var opBuilder = new Operation.PublicGetUserBan.PublicGetUserBanBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        [Obsolete(DiagnosticId = "ab_deprecated_operation_wrapper")]
        public PublicUpdatePasswordV2.PublicUpdatePasswordV2Builder PublicUpdatePasswordV2Op
        {
            get
            {
                var opBuilder = new Operation.PublicUpdatePasswordV2.PublicUpdatePasswordV2Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        [Obsolete(DiagnosticId = "ab_deprecated_operation_wrapper")]
        public GetListJusticePlatformAccounts.GetListJusticePlatformAccountsBuilder GetListJusticePlatformAccountsOp
        {
            get
            {
                var opBuilder = new Operation.GetListJusticePlatformAccounts.GetListJusticePlatformAccountsBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        [Obsolete(DiagnosticId = "ab_deprecated_operation_wrapper")]
        public PublicPlatformLinkV2.PublicPlatformLinkV2Builder PublicPlatformLinkV2Op
        {
            get
            {
                var opBuilder = new Operation.PublicPlatformLinkV2.PublicPlatformLinkV2Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        [Obsolete(DiagnosticId = "ab_deprecated_operation_wrapper")]
        public PublicDeletePlatformLinkV2.PublicDeletePlatformLinkV2Builder PublicDeletePlatformLinkV2Op
        {
            get
            {
                var opBuilder = new Operation.PublicDeletePlatformLinkV2.PublicDeletePlatformLinkV2Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public ListAdminsV3.ListAdminsV3Builder ListAdminsV3Op
        {
            get
            {
                var opBuilder = new Operation.ListAdminsV3.ListAdminsV3Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public AdminGetAgeRestrictionStatusV3.AdminGetAgeRestrictionStatusV3Builder AdminGetAgeRestrictionStatusV3Op
        {
            get
            {
                var opBuilder = new Operation.AdminGetAgeRestrictionStatusV3.AdminGetAgeRestrictionStatusV3Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public AdminUpdateAgeRestrictionConfigV3.AdminUpdateAgeRestrictionConfigV3Builder AdminUpdateAgeRestrictionConfigV3Op
        {
            get
            {
                var opBuilder = new Operation.AdminUpdateAgeRestrictionConfigV3.AdminUpdateAgeRestrictionConfigV3Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public AdminGetListCountryAgeRestrictionV3.AdminGetListCountryAgeRestrictionV3Builder AdminGetListCountryAgeRestrictionV3Op
        {
            get
            {
                var opBuilder = new Operation.AdminGetListCountryAgeRestrictionV3.AdminGetListCountryAgeRestrictionV3Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public AdminUpdateCountryAgeRestrictionV3.AdminUpdateCountryAgeRestrictionV3Builder AdminUpdateCountryAgeRestrictionV3Op
        {
            get
            {
                var opBuilder = new Operation.AdminUpdateCountryAgeRestrictionV3.AdminUpdateCountryAgeRestrictionV3Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public AdminListUserIDByPlatformUserIDsV3.AdminListUserIDByPlatformUserIDsV3Builder AdminListUserIDByPlatformUserIDsV3Op
        {
            get
            {
                var opBuilder = new Operation.AdminListUserIDByPlatformUserIDsV3.AdminListUserIDByPlatformUserIDsV3Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public AdminGetUserByPlatformUserIDV3.AdminGetUserByPlatformUserIDV3Builder AdminGetUserByPlatformUserIDV3Op
        {
            get
            {
                var opBuilder = new Operation.AdminGetUserByPlatformUserIDV3.AdminGetUserByPlatformUserIDV3Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public GetAdminUsersByRoleIdV3.GetAdminUsersByRoleIdV3Builder GetAdminUsersByRoleIdV3Op
        {
            get
            {
                var opBuilder = new Operation.GetAdminUsersByRoleIdV3.GetAdminUsersByRoleIdV3Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public AdminGetUserByEmailAddressV3.AdminGetUserByEmailAddressV3Builder AdminGetUserByEmailAddressV3Op
        {
            get
            {
                var opBuilder = new Operation.AdminGetUserByEmailAddressV3.AdminGetUserByEmailAddressV3Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public AdminBulkUpdateUsersV3.AdminBulkUpdateUsersV3Builder AdminBulkUpdateUsersV3Op
        {
            get
            {
                var opBuilder = new Operation.AdminBulkUpdateUsersV3.AdminBulkUpdateUsersV3Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public AdminGetBulkUserBanV3.AdminGetBulkUserBanV3Builder AdminGetBulkUserBanV3Op
        {
            get
            {
                var opBuilder = new Operation.AdminGetBulkUserBanV3.AdminGetBulkUserBanV3Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public AdminListUserIDByUserIDsV3.AdminListUserIDByUserIDsV3Builder AdminListUserIDByUserIDsV3Op
        {
            get
            {
                var opBuilder = new Operation.AdminListUserIDByUserIDsV3.AdminListUserIDByUserIDsV3Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public AdminBulkGetUsersPlatform.AdminBulkGetUsersPlatformBuilder AdminBulkGetUsersPlatformOp
        {
            get
            {
                var opBuilder = new Operation.AdminBulkGetUsersPlatform.AdminBulkGetUsersPlatformBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public AdminInviteUserV3.AdminInviteUserV3Builder AdminInviteUserV3Op
        {
            get
            {
                var opBuilder = new Operation.AdminInviteUserV3.AdminInviteUserV3Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public AdminQueryThirdPlatformLinkHistoryV3.AdminQueryThirdPlatformLinkHistoryV3Builder AdminQueryThirdPlatformLinkHistoryV3Op
        {
            get
            {
                var opBuilder = new Operation.AdminQueryThirdPlatformLinkHistoryV3.AdminQueryThirdPlatformLinkHistoryV3Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public AdminListUsersV3.AdminListUsersV3Builder AdminListUsersV3Op
        {
            get
            {
                var opBuilder = new Operation.AdminListUsersV3.AdminListUsersV3Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public AdminSearchUserV3.AdminSearchUserV3Builder AdminSearchUserV3Op
        {
            get
            {
                var opBuilder = new Operation.AdminSearchUserV3.AdminSearchUserV3Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public AdminGetBulkUserByEmailAddressV3.AdminGetBulkUserByEmailAddressV3Builder AdminGetBulkUserByEmailAddressV3Op
        {
            get
            {
                var opBuilder = new Operation.AdminGetBulkUserByEmailAddressV3.AdminGetBulkUserByEmailAddressV3Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public AdminGetUserByUserIdV3.AdminGetUserByUserIdV3Builder AdminGetUserByUserIdV3Op
        {
            get
            {
                var opBuilder = new Operation.AdminGetUserByUserIdV3.AdminGetUserByUserIdV3Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public AdminUpdateUserV3.AdminUpdateUserV3Builder AdminUpdateUserV3Op
        {
            get
            {
                var opBuilder = new Operation.AdminUpdateUserV3.AdminUpdateUserV3Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public AdminGetUserBanV3.AdminGetUserBanV3Builder AdminGetUserBanV3Op
        {
            get
            {
                var opBuilder = new Operation.AdminGetUserBanV3.AdminGetUserBanV3Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public AdminBanUserV3.AdminBanUserV3Builder AdminBanUserV3Op
        {
            get
            {
                var opBuilder = new Operation.AdminBanUserV3.AdminBanUserV3Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public AdminGetUserBanSummaryV3.AdminGetUserBanSummaryV3Builder AdminGetUserBanSummaryV3Op
        {
            get
            {
                var opBuilder = new Operation.AdminGetUserBanSummaryV3.AdminGetUserBanSummaryV3Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public AdminUpdateUserBanV3.AdminUpdateUserBanV3Builder AdminUpdateUserBanV3Op
        {
            get
            {
                var opBuilder = new Operation.AdminUpdateUserBanV3.AdminUpdateUserBanV3Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public AdminSendVerificationCodeV3.AdminSendVerificationCodeV3Builder AdminSendVerificationCodeV3Op
        {
            get
            {
                var opBuilder = new Operation.AdminSendVerificationCodeV3.AdminSendVerificationCodeV3Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public AdminVerifyAccountV3.AdminVerifyAccountV3Builder AdminVerifyAccountV3Op
        {
            get
            {
                var opBuilder = new Operation.AdminVerifyAccountV3.AdminVerifyAccountV3Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public GetUserVerificationCode.GetUserVerificationCodeBuilder GetUserVerificationCodeOp
        {
            get
            {
                var opBuilder = new Operation.GetUserVerificationCode.GetUserVerificationCodeBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public AdminGetUserDeletionStatusV3.AdminGetUserDeletionStatusV3Builder AdminGetUserDeletionStatusV3Op
        {
            get
            {
                var opBuilder = new Operation.AdminGetUserDeletionStatusV3.AdminGetUserDeletionStatusV3Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public AdminUpdateUserDeletionStatusV3.AdminUpdateUserDeletionStatusV3Builder AdminUpdateUserDeletionStatusV3Op
        {
            get
            {
                var opBuilder = new Operation.AdminUpdateUserDeletionStatusV3.AdminUpdateUserDeletionStatusV3Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public AdminListUserAllPlatformAccountsDistinctV3.AdminListUserAllPlatformAccountsDistinctV3Builder AdminListUserAllPlatformAccountsDistinctV3Op
        {
            get
            {
                var opBuilder = new Operation.AdminListUserAllPlatformAccountsDistinctV3.AdminListUserAllPlatformAccountsDistinctV3Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public AdminUpgradeHeadlessAccountV3.AdminUpgradeHeadlessAccountV3Builder AdminUpgradeHeadlessAccountV3Op
        {
            get
            {
                var opBuilder = new Operation.AdminUpgradeHeadlessAccountV3.AdminUpgradeHeadlessAccountV3Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public AdminDeleteUserInformationV3.AdminDeleteUserInformationV3Builder AdminDeleteUserInformationV3Op
        {
            get
            {
                var opBuilder = new Operation.AdminDeleteUserInformationV3.AdminDeleteUserInformationV3Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public AdminGetUserLoginHistoriesV3.AdminGetUserLoginHistoriesV3Builder AdminGetUserLoginHistoriesV3Op
        {
            get
            {
                var opBuilder = new Operation.AdminGetUserLoginHistoriesV3.AdminGetUserLoginHistoriesV3Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public AdminResetPasswordV3.AdminResetPasswordV3Builder AdminResetPasswordV3Op
        {
            get
            {
                var opBuilder = new Operation.AdminResetPasswordV3.AdminResetPasswordV3Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public AdminUpdateUserPermissionV3.AdminUpdateUserPermissionV3Builder AdminUpdateUserPermissionV3Op
        {
            get
            {
                var opBuilder = new Operation.AdminUpdateUserPermissionV3.AdminUpdateUserPermissionV3Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public AdminAddUserPermissionsV3.AdminAddUserPermissionsV3Builder AdminAddUserPermissionsV3Op
        {
            get
            {
                var opBuilder = new Operation.AdminAddUserPermissionsV3.AdminAddUserPermissionsV3Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public AdminDeleteUserPermissionBulkV3.AdminDeleteUserPermissionBulkV3Builder AdminDeleteUserPermissionBulkV3Op
        {
            get
            {
                var opBuilder = new Operation.AdminDeleteUserPermissionBulkV3.AdminDeleteUserPermissionBulkV3Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public AdminDeleteUserPermissionV3.AdminDeleteUserPermissionV3Builder AdminDeleteUserPermissionV3Op
        {
            get
            {
                var opBuilder = new Operation.AdminDeleteUserPermissionV3.AdminDeleteUserPermissionV3Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public AdminGetUserPlatformAccountsV3.AdminGetUserPlatformAccountsV3Builder AdminGetUserPlatformAccountsV3Op
        {
            get
            {
                var opBuilder = new Operation.AdminGetUserPlatformAccountsV3.AdminGetUserPlatformAccountsV3Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public AdminListAllDistinctPlatformAccountsV3.AdminListAllDistinctPlatformAccountsV3Builder AdminListAllDistinctPlatformAccountsV3Op
        {
            get
            {
                var opBuilder = new Operation.AdminListAllDistinctPlatformAccountsV3.AdminListAllDistinctPlatformAccountsV3Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public AdminGetListJusticePlatformAccounts.AdminGetListJusticePlatformAccountsBuilder AdminGetListJusticePlatformAccountsOp
        {
            get
            {
                var opBuilder = new Operation.AdminGetListJusticePlatformAccounts.AdminGetListJusticePlatformAccountsBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public AdminGetUserMapping.AdminGetUserMappingBuilder AdminGetUserMappingOp
        {
            get
            {
                var opBuilder = new Operation.AdminGetUserMapping.AdminGetUserMappingBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public AdminCreateJusticeUser.AdminCreateJusticeUserBuilder AdminCreateJusticeUserOp
        {
            get
            {
                var opBuilder = new Operation.AdminCreateJusticeUser.AdminCreateJusticeUserBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public AdminLinkPlatformAccount.AdminLinkPlatformAccountBuilder AdminLinkPlatformAccountOp
        {
            get
            {
                var opBuilder = new Operation.AdminLinkPlatformAccount.AdminLinkPlatformAccountBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public AdminGetUserLinkHistoriesV3.AdminGetUserLinkHistoriesV3Builder AdminGetUserLinkHistoriesV3Op
        {
            get
            {
                var opBuilder = new Operation.AdminGetUserLinkHistoriesV3.AdminGetUserLinkHistoriesV3Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        [Obsolete(DiagnosticId = "ab_deprecated_operation_wrapper")]
        public AdminPlatformUnlinkV3.AdminPlatformUnlinkV3Builder AdminPlatformUnlinkV3Op
        {
            get
            {
                var opBuilder = new Operation.AdminPlatformUnlinkV3.AdminPlatformUnlinkV3Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public AdminPlatformUnlinkAllV3.AdminPlatformUnlinkAllV3Builder AdminPlatformUnlinkAllV3Op
        {
            get
            {
                var opBuilder = new Operation.AdminPlatformUnlinkAllV3.AdminPlatformUnlinkAllV3Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public AdminPlatformLinkV3.AdminPlatformLinkV3Builder AdminPlatformLinkV3Op
        {
            get
            {
                var opBuilder = new Operation.AdminPlatformLinkV3.AdminPlatformLinkV3Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        [Obsolete(DiagnosticId = "ab_deprecated_operation_wrapper")]
        public AdminDeleteUserLinkingHistoryByPlatformIDV3.AdminDeleteUserLinkingHistoryByPlatformIDV3Builder AdminDeleteUserLinkingHistoryByPlatformIDV3Op
        {
            get
            {
                var opBuilder = new Operation.AdminDeleteUserLinkingHistoryByPlatformIDV3.AdminDeleteUserLinkingHistoryByPlatformIDV3Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public AdminDeleteUserLinkingRestrictionByPlatformIDV3.AdminDeleteUserLinkingRestrictionByPlatformIDV3Builder AdminDeleteUserLinkingRestrictionByPlatformIDV3Op
        {
            get
            {
                var opBuilder = new Operation.AdminDeleteUserLinkingRestrictionByPlatformIDV3.AdminDeleteUserLinkingRestrictionByPlatformIDV3Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public AdminGetThirdPartyPlatformTokenLinkStatusV3.AdminGetThirdPartyPlatformTokenLinkStatusV3Builder AdminGetThirdPartyPlatformTokenLinkStatusV3Op
        {
            get
            {
                var opBuilder = new Operation.AdminGetThirdPartyPlatformTokenLinkStatusV3.AdminGetThirdPartyPlatformTokenLinkStatusV3Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public AdminGetUserSinglePlatformAccount.AdminGetUserSinglePlatformAccountBuilder AdminGetUserSinglePlatformAccountOp
        {
            get
            {
                var opBuilder = new Operation.AdminGetUserSinglePlatformAccount.AdminGetUserSinglePlatformAccountBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public AdminDeleteUserRolesV3.AdminDeleteUserRolesV3Builder AdminDeleteUserRolesV3Op
        {
            get
            {
                var opBuilder = new Operation.AdminDeleteUserRolesV3.AdminDeleteUserRolesV3Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public AdminSaveUserRoleV3.AdminSaveUserRoleV3Builder AdminSaveUserRoleV3Op
        {
            get
            {
                var opBuilder = new Operation.AdminSaveUserRoleV3.AdminSaveUserRoleV3Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public AdminAddUserRoleV3.AdminAddUserRoleV3Builder AdminAddUserRoleV3Op
        {
            get
            {
                var opBuilder = new Operation.AdminAddUserRoleV3.AdminAddUserRoleV3Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public AdminDeleteUserRoleV3.AdminDeleteUserRoleV3Builder AdminDeleteUserRoleV3Op
        {
            get
            {
                var opBuilder = new Operation.AdminDeleteUserRoleV3.AdminDeleteUserRoleV3Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public AdminUpdateUserStatusV3.AdminUpdateUserStatusV3Builder AdminUpdateUserStatusV3Op
        {
            get
            {
                var opBuilder = new Operation.AdminUpdateUserStatusV3.AdminUpdateUserStatusV3Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public AdminTrustlyUpdateUserIdentity.AdminTrustlyUpdateUserIdentityBuilder AdminTrustlyUpdateUserIdentityOp
        {
            get
            {
                var opBuilder = new Operation.AdminTrustlyUpdateUserIdentity.AdminTrustlyUpdateUserIdentityBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public AdminVerifyUserWithoutVerificationCodeV3.AdminVerifyUserWithoutVerificationCodeV3Builder AdminVerifyUserWithoutVerificationCodeV3Op
        {
            get
            {
                var opBuilder = new Operation.AdminVerifyUserWithoutVerificationCodeV3.AdminVerifyUserWithoutVerificationCodeV3Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public AdminGetMyUserV3.AdminGetMyUserV3Builder AdminGetMyUserV3Op
        {
            get
            {
                var opBuilder = new Operation.AdminGetMyUserV3.AdminGetMyUserV3Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public PublicGetCountryAgeRestrictionV3.PublicGetCountryAgeRestrictionV3Builder PublicGetCountryAgeRestrictionV3Op
        {
            get
            {
                var opBuilder = new Operation.PublicGetCountryAgeRestrictionV3.PublicGetCountryAgeRestrictionV3Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        [Obsolete(DiagnosticId = "ab_deprecated_operation_wrapper")]
        public PublicListUserIDByPlatformUserIDsV3.PublicListUserIDByPlatformUserIDsV3Builder PublicListUserIDByPlatformUserIDsV3Op
        {
            get
            {
                var opBuilder = new Operation.PublicListUserIDByPlatformUserIDsV3.PublicListUserIDByPlatformUserIDsV3Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public PublicGetUserByPlatformUserIDV3.PublicGetUserByPlatformUserIDV3Builder PublicGetUserByPlatformUserIDV3Op
        {
            get
            {
                var opBuilder = new Operation.PublicGetUserByPlatformUserIDV3.PublicGetUserByPlatformUserIDV3Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public PublicGetAsyncStatus.PublicGetAsyncStatusBuilder PublicGetAsyncStatusOp
        {
            get
            {
                var opBuilder = new Operation.PublicGetAsyncStatus.PublicGetAsyncStatusBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public PublicSearchUserV3.PublicSearchUserV3Builder PublicSearchUserV3Op
        {
            get
            {
                var opBuilder = new Operation.PublicSearchUserV3.PublicSearchUserV3Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public PublicCreateUserV3.PublicCreateUserV3Builder PublicCreateUserV3Op
        {
            get
            {
                var opBuilder = new Operation.PublicCreateUserV3.PublicCreateUserV3Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public CheckUserAvailability.CheckUserAvailabilityBuilder CheckUserAvailabilityOp
        {
            get
            {
                var opBuilder = new Operation.CheckUserAvailability.CheckUserAvailabilityBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public PublicBulkGetUsers.PublicBulkGetUsersBuilder PublicBulkGetUsersOp
        {
            get
            {
                var opBuilder = new Operation.PublicBulkGetUsers.PublicBulkGetUsersBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public PublicSendRegistrationCode.PublicSendRegistrationCodeBuilder PublicSendRegistrationCodeOp
        {
            get
            {
                var opBuilder = new Operation.PublicSendRegistrationCode.PublicSendRegistrationCodeBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public PublicVerifyRegistrationCode.PublicVerifyRegistrationCodeBuilder PublicVerifyRegistrationCodeOp
        {
            get
            {
                var opBuilder = new Operation.PublicVerifyRegistrationCode.PublicVerifyRegistrationCodeBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public PublicForgotPasswordV3.PublicForgotPasswordV3Builder PublicForgotPasswordV3Op
        {
            get
            {
                var opBuilder = new Operation.PublicForgotPasswordV3.PublicForgotPasswordV3Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public PublicValidateUserInput.PublicValidateUserInputBuilder PublicValidateUserInputOp
        {
            get
            {
                var opBuilder = new Operation.PublicValidateUserInput.PublicValidateUserInputBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public GetAdminInvitationV3.GetAdminInvitationV3Builder GetAdminInvitationV3Op
        {
            get
            {
                var opBuilder = new Operation.GetAdminInvitationV3.GetAdminInvitationV3Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public CreateUserFromInvitationV3.CreateUserFromInvitationV3Builder CreateUserFromInvitationV3Op
        {
            get
            {
                var opBuilder = new Operation.CreateUserFromInvitationV3.CreateUserFromInvitationV3Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public UpdateUserV3.UpdateUserV3Builder UpdateUserV3Op
        {
            get
            {
                var opBuilder = new Operation.UpdateUserV3.UpdateUserV3Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public PublicPartialUpdateUserV3.PublicPartialUpdateUserV3Builder PublicPartialUpdateUserV3Op
        {
            get
            {
                var opBuilder = new Operation.PublicPartialUpdateUserV3.PublicPartialUpdateUserV3Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public PublicSendVerificationCodeV3.PublicSendVerificationCodeV3Builder PublicSendVerificationCodeV3Op
        {
            get
            {
                var opBuilder = new Operation.PublicSendVerificationCodeV3.PublicSendVerificationCodeV3Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public PublicUserVerificationV3.PublicUserVerificationV3Builder PublicUserVerificationV3Op
        {
            get
            {
                var opBuilder = new Operation.PublicUserVerificationV3.PublicUserVerificationV3Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public PublicUpgradeHeadlessAccountV3.PublicUpgradeHeadlessAccountV3Builder PublicUpgradeHeadlessAccountV3Op
        {
            get
            {
                var opBuilder = new Operation.PublicUpgradeHeadlessAccountV3.PublicUpgradeHeadlessAccountV3Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public PublicVerifyHeadlessAccountV3.PublicVerifyHeadlessAccountV3Builder PublicVerifyHeadlessAccountV3Op
        {
            get
            {
                var opBuilder = new Operation.PublicVerifyHeadlessAccountV3.PublicVerifyHeadlessAccountV3Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public PublicUpdatePasswordV3.PublicUpdatePasswordV3Builder PublicUpdatePasswordV3Op
        {
            get
            {
                var opBuilder = new Operation.PublicUpdatePasswordV3.PublicUpdatePasswordV3Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public PublicCreateJusticeUser.PublicCreateJusticeUserBuilder PublicCreateJusticeUserOp
        {
            get
            {
                var opBuilder = new Operation.PublicCreateJusticeUser.PublicCreateJusticeUserBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public PublicPlatformLinkV3.PublicPlatformLinkV3Builder PublicPlatformLinkV3Op
        {
            get
            {
                var opBuilder = new Operation.PublicPlatformLinkV3.PublicPlatformLinkV3Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        [Obsolete(DiagnosticId = "ab_deprecated_operation_wrapper")]
        public PublicPlatformUnlinkV3.PublicPlatformUnlinkV3Builder PublicPlatformUnlinkV3Op
        {
            get
            {
                var opBuilder = new Operation.PublicPlatformUnlinkV3.PublicPlatformUnlinkV3Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public PublicPlatformUnlinkAllV3.PublicPlatformUnlinkAllV3Builder PublicPlatformUnlinkAllV3Op
        {
            get
            {
                var opBuilder = new Operation.PublicPlatformUnlinkAllV3.PublicPlatformUnlinkAllV3Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public PublicForcePlatformLinkV3.PublicForcePlatformLinkV3Builder PublicForcePlatformLinkV3Op
        {
            get
            {
                var opBuilder = new Operation.PublicForcePlatformLinkV3.PublicForcePlatformLinkV3Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public PublicWebLinkPlatform.PublicWebLinkPlatformBuilder PublicWebLinkPlatformOp
        {
            get
            {
                var opBuilder = new Operation.PublicWebLinkPlatform.PublicWebLinkPlatformBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public PublicWebLinkPlatformEstablish.PublicWebLinkPlatformEstablishBuilder PublicWebLinkPlatformEstablishOp
        {
            get
            {
                var opBuilder = new Operation.PublicWebLinkPlatformEstablish.PublicWebLinkPlatformEstablishBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public PublicProcessWebLinkPlatformV3.PublicProcessWebLinkPlatformV3Builder PublicProcessWebLinkPlatformV3Op
        {
            get
            {
                var opBuilder = new Operation.PublicProcessWebLinkPlatformV3.PublicProcessWebLinkPlatformV3Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public PublicGetUsersPlatformInfosV3.PublicGetUsersPlatformInfosV3Builder PublicGetUsersPlatformInfosV3Op
        {
            get
            {
                var opBuilder = new Operation.PublicGetUsersPlatformInfosV3.PublicGetUsersPlatformInfosV3Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public ResetPasswordV3.ResetPasswordV3Builder ResetPasswordV3Op
        {
            get
            {
                var opBuilder = new Operation.ResetPasswordV3.ResetPasswordV3Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        [Obsolete(DiagnosticId = "ab_deprecated_operation_wrapper")]
        public PublicGetUserByUserIdV3.PublicGetUserByUserIdV3Builder PublicGetUserByUserIdV3Op
        {
            get
            {
                var opBuilder = new Operation.PublicGetUserByUserIdV3.PublicGetUserByUserIdV3Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public PublicGetUserBanHistoryV3.PublicGetUserBanHistoryV3Builder PublicGetUserBanHistoryV3Op
        {
            get
            {
                var opBuilder = new Operation.PublicGetUserBanHistoryV3.PublicGetUserBanHistoryV3Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public PublicListUserAllPlatformAccountsDistinctV3.PublicListUserAllPlatformAccountsDistinctV3Builder PublicListUserAllPlatformAccountsDistinctV3Op
        {
            get
            {
                var opBuilder = new Operation.PublicListUserAllPlatformAccountsDistinctV3.PublicListUserAllPlatformAccountsDistinctV3Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public PublicGetUserInformationV3.PublicGetUserInformationV3Builder PublicGetUserInformationV3Op
        {
            get
            {
                var opBuilder = new Operation.PublicGetUserInformationV3.PublicGetUserInformationV3Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public PublicGetUserLoginHistoriesV3.PublicGetUserLoginHistoriesV3Builder PublicGetUserLoginHistoriesV3Op
        {
            get
            {
                var opBuilder = new Operation.PublicGetUserLoginHistoriesV3.PublicGetUserLoginHistoriesV3Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public PublicGetUserPlatformAccountsV3.PublicGetUserPlatformAccountsV3Builder PublicGetUserPlatformAccountsV3Op
        {
            get
            {
                var opBuilder = new Operation.PublicGetUserPlatformAccountsV3.PublicGetUserPlatformAccountsV3Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public PublicListJusticePlatformAccountsV3.PublicListJusticePlatformAccountsV3Builder PublicListJusticePlatformAccountsV3Op
        {
            get
            {
                var opBuilder = new Operation.PublicListJusticePlatformAccountsV3.PublicListJusticePlatformAccountsV3Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public PublicLinkPlatformAccount.PublicLinkPlatformAccountBuilder PublicLinkPlatformAccountOp
        {
            get
            {
                var opBuilder = new Operation.PublicLinkPlatformAccount.PublicLinkPlatformAccountBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public PublicForceLinkPlatformWithProgression.PublicForceLinkPlatformWithProgressionBuilder PublicForceLinkPlatformWithProgressionOp
        {
            get
            {
                var opBuilder = new Operation.PublicForceLinkPlatformWithProgression.PublicForceLinkPlatformWithProgressionBuilder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public PublicGetPublisherUserV3.PublicGetPublisherUserV3Builder PublicGetPublisherUserV3Op
        {
            get
            {
                var opBuilder = new Operation.PublicGetPublisherUserV3.PublicGetPublisherUserV3Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public PublicValidateUserByUserIDAndPasswordV3.PublicValidateUserByUserIDAndPasswordV3Builder PublicValidateUserByUserIDAndPasswordV3Op
        {
            get
            {
                var opBuilder = new Operation.PublicValidateUserByUserIDAndPasswordV3.PublicValidateUserByUserIDAndPasswordV3Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public PublicGetMyUserV3.PublicGetMyUserV3Builder PublicGetMyUserV3Op
        {
            get
            {
                var opBuilder = new Operation.PublicGetMyUserV3.PublicGetMyUserV3Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public PublicSendCodeForwardV3.PublicSendCodeForwardV3Builder PublicSendCodeForwardV3Op
        {
            get
            {
                var opBuilder = new Operation.PublicSendCodeForwardV3.PublicSendCodeForwardV3Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public PublicGetLinkHeadlessAccountToMyAccountConflictV3.PublicGetLinkHeadlessAccountToMyAccountConflictV3Builder PublicGetLinkHeadlessAccountToMyAccountConflictV3Op
        {
            get
            {
                var opBuilder = new Operation.PublicGetLinkHeadlessAccountToMyAccountConflictV3.PublicGetLinkHeadlessAccountToMyAccountConflictV3Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public LinkHeadlessAccountToMyAccountV3.LinkHeadlessAccountToMyAccountV3Builder LinkHeadlessAccountToMyAccountV3Op
        {
            get
            {
                var opBuilder = new Operation.LinkHeadlessAccountToMyAccountV3.LinkHeadlessAccountToMyAccountV3Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public PublicGetMyRedirectionAfterLinkV3.PublicGetMyRedirectionAfterLinkV3Builder PublicGetMyRedirectionAfterLinkV3Op
        {
            get
            {
                var opBuilder = new Operation.PublicGetMyRedirectionAfterLinkV3.PublicGetMyRedirectionAfterLinkV3Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public PublicGetMyProfileAllowUpdateStatusV3.PublicGetMyProfileAllowUpdateStatusV3Builder PublicGetMyProfileAllowUpdateStatusV3Op
        {
            get
            {
                var opBuilder = new Operation.PublicGetMyProfileAllowUpdateStatusV3.PublicGetMyProfileAllowUpdateStatusV3Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public PublicSendVerificationLinkV3.PublicSendVerificationLinkV3Builder PublicSendVerificationLinkV3Op
        {
            get
            {
                var opBuilder = new Operation.PublicSendVerificationLinkV3.PublicSendVerificationLinkV3Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public PublicGetOpenidUserInfoV3.PublicGetOpenidUserInfoV3Builder PublicGetOpenidUserInfoV3Op
        {
            get
            {
                var opBuilder = new Operation.PublicGetOpenidUserInfoV3.PublicGetOpenidUserInfoV3Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        public PublicVerifyUserByLinkV3.PublicVerifyUserByLinkV3Builder PublicVerifyUserByLinkV3Op
        {
            get
            {
                var opBuilder = new Operation.PublicVerifyUserByLinkV3.PublicVerifyUserByLinkV3Builder(_sdk);
                if (_CustomBasePath != "")
                    return opBuilder.UseCustomBasePath(_CustomBasePath);
                else
                    return opBuilder;
            }
        }
        #endregion

#pragma warning disable ab_deprecated_operation
        [Obsolete(DiagnosticId = "ab_deprecated_operation_wrapper")]
        public CreateUser.Response CreateUser(CreateUser input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<CreateUser.Response> CreateUserAsync(CreateUser input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
#pragma warning restore ab_deprecated_operation
#pragma warning disable ab_deprecated_operation
        [Obsolete(DiagnosticId = "ab_deprecated_operation_wrapper")]
        public GetAdminUsersByRoleID.Response GetAdminUsersByRoleID(GetAdminUsersByRoleID input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<GetAdminUsersByRoleID.Response> GetAdminUsersByRoleIDAsync(GetAdminUsersByRoleID input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
#pragma warning restore ab_deprecated_operation
#pragma warning disable ab_deprecated_operation
        [Obsolete(DiagnosticId = "ab_deprecated_operation_wrapper")]
        public GetUserByLoginID.Response GetUserByLoginID(GetUserByLoginID input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<GetUserByLoginID.Response> GetUserByLoginIDAsync(GetUserByLoginID input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
#pragma warning restore ab_deprecated_operation
#pragma warning disable ab_deprecated_operation
        [Obsolete(DiagnosticId = "ab_deprecated_operation_wrapper")]
        public GetUserByPlatformUserID.Response GetUserByPlatformUserID(GetUserByPlatformUserID input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<GetUserByPlatformUserID.Response> GetUserByPlatformUserIDAsync(GetUserByPlatformUserID input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
#pragma warning restore ab_deprecated_operation
#pragma warning disable ab_deprecated_operation
        [Obsolete(DiagnosticId = "ab_deprecated_operation_wrapper")]
        public ForgotPassword.Response ForgotPassword(ForgotPassword input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<ForgotPassword.Response> ForgotPasswordAsync(ForgotPassword input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
#pragma warning restore ab_deprecated_operation
#pragma warning disable ab_deprecated_operation
        [Obsolete(DiagnosticId = "ab_deprecated_operation_wrapper")]
        public GetUsersByLoginIds.Response GetUsersByLoginIds(GetUsersByLoginIds input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<GetUsersByLoginIds.Response> GetUsersByLoginIdsAsync(GetUsersByLoginIds input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
#pragma warning restore ab_deprecated_operation
#pragma warning disable ab_deprecated_operation
        [Obsolete(DiagnosticId = "ab_deprecated_operation_wrapper")]
        public ResetPassword.Response ResetPassword(ResetPassword input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<ResetPassword.Response> ResetPasswordAsync(ResetPassword input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
#pragma warning restore ab_deprecated_operation
#pragma warning disable ab_deprecated_operation
        [Obsolete(DiagnosticId = "ab_deprecated_operation_wrapper")]
        public SearchUser.Response SearchUser(SearchUser input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<SearchUser.Response> SearchUserAsync(SearchUser input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
#pragma warning restore ab_deprecated_operation
#pragma warning disable ab_deprecated_operation
        [Obsolete(DiagnosticId = "ab_deprecated_operation_wrapper")]
        public GetUserByUserID.Response GetUserByUserID(GetUserByUserID input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<GetUserByUserID.Response> GetUserByUserIDAsync(GetUserByUserID input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
#pragma warning restore ab_deprecated_operation
#pragma warning disable ab_deprecated_operation
        [Obsolete(DiagnosticId = "ab_deprecated_operation_wrapper")]
        public UpdateUser.Response UpdateUser(UpdateUser input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<UpdateUser.Response> UpdateUserAsync(UpdateUser input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
#pragma warning restore ab_deprecated_operation
#pragma warning disable ab_deprecated_operation
        [Obsolete(DiagnosticId = "ab_deprecated_operation_wrapper")]
        public DeleteUser.Response DeleteUser(DeleteUser input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<DeleteUser.Response> DeleteUserAsync(DeleteUser input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
#pragma warning restore ab_deprecated_operation
#pragma warning disable ab_deprecated_operation
        [Obsolete(DiagnosticId = "ab_deprecated_operation_wrapper")]
        public BanUser.Response BanUser(BanUser input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<BanUser.Response> BanUserAsync(BanUser input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
#pragma warning restore ab_deprecated_operation
#pragma warning disable ab_deprecated_operation
        [Obsolete(DiagnosticId = "ab_deprecated_operation_wrapper")]
        public GetUserBanHistory.Response GetUserBanHistory(GetUserBanHistory input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<GetUserBanHistory.Response> GetUserBanHistoryAsync(GetUserBanHistory input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
#pragma warning restore ab_deprecated_operation
#pragma warning disable ab_deprecated_operation
        [Obsolete(DiagnosticId = "ab_deprecated_operation_wrapper")]
        public DisableUserBan.Response DisableUserBan(DisableUserBan input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<DisableUserBan.Response> DisableUserBanAsync(DisableUserBan input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
#pragma warning restore ab_deprecated_operation
#pragma warning disable ab_deprecated_operation
        [Obsolete(DiagnosticId = "ab_deprecated_operation_wrapper")]
        public EnableUserBan.Response EnableUserBan(EnableUserBan input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<EnableUserBan.Response> EnableUserBanAsync(EnableUserBan input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
#pragma warning restore ab_deprecated_operation
#pragma warning disable ab_deprecated_operation
        [Obsolete(DiagnosticId = "ab_deprecated_operation_wrapper")]
        public ListCrossNamespaceAccountLink.Response ListCrossNamespaceAccountLink(ListCrossNamespaceAccountLink input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<ListCrossNamespaceAccountLink.Response> ListCrossNamespaceAccountLinkAsync(ListCrossNamespaceAccountLink input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
#pragma warning restore ab_deprecated_operation
#pragma warning disable ab_deprecated_operation
        [Obsolete(DiagnosticId = "ab_deprecated_operation_wrapper")]
        public DisableUser.Response DisableUser(DisableUser input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<DisableUser.Response> DisableUserAsync(DisableUser input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
#pragma warning restore ab_deprecated_operation
#pragma warning disable ab_deprecated_operation
        [Obsolete(DiagnosticId = "ab_deprecated_operation_wrapper")]
        public EnableUser.Response EnableUser(EnableUser input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<EnableUser.Response> EnableUserAsync(EnableUser input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
#pragma warning restore ab_deprecated_operation
#pragma warning disable ab_deprecated_operation
        [Obsolete(DiagnosticId = "ab_deprecated_operation_wrapper")]
        public GetUserInformation.Response GetUserInformation(GetUserInformation input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<GetUserInformation.Response> GetUserInformationAsync(GetUserInformation input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
#pragma warning restore ab_deprecated_operation
#pragma warning disable ab_deprecated_operation
        [Obsolete(DiagnosticId = "ab_deprecated_operation_wrapper")]
        public DeleteUserInformation.Response DeleteUserInformation(DeleteUserInformation input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<DeleteUserInformation.Response> DeleteUserInformationAsync(DeleteUserInformation input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
#pragma warning restore ab_deprecated_operation
#pragma warning disable ab_deprecated_operation
        [Obsolete(DiagnosticId = "ab_deprecated_operation_wrapper")]
        public GetUserLoginHistories.Response GetUserLoginHistories(GetUserLoginHistories input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<GetUserLoginHistories.Response> GetUserLoginHistoriesAsync(GetUserLoginHistories input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
#pragma warning restore ab_deprecated_operation
#pragma warning disable ab_deprecated_operation
        [Obsolete(DiagnosticId = "ab_deprecated_operation_wrapper")]
        public UpdatePassword.Response UpdatePassword(UpdatePassword input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<UpdatePassword.Response> UpdatePasswordAsync(UpdatePassword input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
#pragma warning restore ab_deprecated_operation
#pragma warning disable ab_deprecated_operation
        [Obsolete(DiagnosticId = "ab_deprecated_operation_wrapper")]
        public SaveUserPermission.Response SaveUserPermission(SaveUserPermission input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<SaveUserPermission.Response> SaveUserPermissionAsync(SaveUserPermission input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
#pragma warning restore ab_deprecated_operation
#pragma warning disable ab_deprecated_operation
        [Obsolete(DiagnosticId = "ab_deprecated_operation_wrapper")]
        public AddUserPermission.Response AddUserPermission(AddUserPermission input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<AddUserPermission.Response> AddUserPermissionAsync(AddUserPermission input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
#pragma warning restore ab_deprecated_operation
#pragma warning disable ab_deprecated_operation
        [Obsolete(DiagnosticId = "ab_deprecated_operation_wrapper")]
        public DeleteUserPermission.Response DeleteUserPermission(DeleteUserPermission input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<DeleteUserPermission.Response> DeleteUserPermissionAsync(DeleteUserPermission input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
#pragma warning restore ab_deprecated_operation
#pragma warning disable ab_deprecated_operation
        [Obsolete(DiagnosticId = "ab_deprecated_operation_wrapper")]
        public GetUserPlatformAccounts.Response GetUserPlatformAccounts(GetUserPlatformAccounts input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<GetUserPlatformAccounts.Response> GetUserPlatformAccountsAsync(GetUserPlatformAccounts input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
#pragma warning restore ab_deprecated_operation
#pragma warning disable ab_deprecated_operation
        [Obsolete(DiagnosticId = "ab_deprecated_operation_wrapper")]
        public GetUserMapping.Response GetUserMapping(GetUserMapping input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<GetUserMapping.Response> GetUserMappingAsync(GetUserMapping input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
#pragma warning restore ab_deprecated_operation
#pragma warning disable ab_deprecated_operation
        [Obsolete(DiagnosticId = "ab_deprecated_operation_wrapper")]
        public GetUserJusticePlatformAccount.Response GetUserJusticePlatformAccount(GetUserJusticePlatformAccount input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<GetUserJusticePlatformAccount.Response> GetUserJusticePlatformAccountAsync(GetUserJusticePlatformAccount input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
#pragma warning restore ab_deprecated_operation
#pragma warning disable ab_deprecated_operation
        [Obsolete(DiagnosticId = "ab_deprecated_operation_wrapper")]
        public PlatformLink.Response PlatformLink(PlatformLink input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<PlatformLink.Response> PlatformLinkAsync(PlatformLink input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
#pragma warning restore ab_deprecated_operation
#pragma warning disable ab_deprecated_operation
        [Obsolete(DiagnosticId = "ab_deprecated_operation_wrapper")]
        public PlatformUnlink.Response PlatformUnlink(PlatformUnlink input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<PlatformUnlink.Response> PlatformUnlinkAsync(PlatformUnlink input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
#pragma warning restore ab_deprecated_operation
#pragma warning disable ab_deprecated_operation
        [Obsolete(DiagnosticId = "ab_deprecated_operation_wrapper")]
        public GetPublisherUser.Response GetPublisherUser(GetPublisherUser input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<GetPublisherUser.Response> GetPublisherUserAsync(GetPublisherUser input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
#pragma warning restore ab_deprecated_operation
#pragma warning disable ab_deprecated_operation
        [Obsolete(DiagnosticId = "ab_deprecated_operation_wrapper")]
        public SaveUserRoles.Response SaveUserRoles(SaveUserRoles input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<SaveUserRoles.Response> SaveUserRolesAsync(SaveUserRoles input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
#pragma warning restore ab_deprecated_operation
#pragma warning disable ab_deprecated_operation
        [Obsolete(DiagnosticId = "ab_deprecated_operation_wrapper")]
        public AddUserRole.Response AddUserRole(AddUserRole input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<AddUserRole.Response> AddUserRoleAsync(AddUserRole input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
#pragma warning restore ab_deprecated_operation
#pragma warning disable ab_deprecated_operation
        [Obsolete(DiagnosticId = "ab_deprecated_operation_wrapper")]
        public DeleteUserRole.Response DeleteUserRole(DeleteUserRole input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<DeleteUserRole.Response> DeleteUserRoleAsync(DeleteUserRole input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
#pragma warning restore ab_deprecated_operation
#pragma warning disable ab_deprecated_operation
        [Obsolete(DiagnosticId = "ab_deprecated_operation_wrapper")]
        public UpgradeHeadlessAccount.Response UpgradeHeadlessAccount(UpgradeHeadlessAccount input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<UpgradeHeadlessAccount.Response> UpgradeHeadlessAccountAsync(UpgradeHeadlessAccount input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
#pragma warning restore ab_deprecated_operation
#pragma warning disable ab_deprecated_operation
        [Obsolete(DiagnosticId = "ab_deprecated_operation_wrapper")]
        public UpgradeHeadlessAccountWithVerificationCode.Response UpgradeHeadlessAccountWithVerificationCode(UpgradeHeadlessAccountWithVerificationCode input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<UpgradeHeadlessAccountWithVerificationCode.Response> UpgradeHeadlessAccountWithVerificationCodeAsync(UpgradeHeadlessAccountWithVerificationCode input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
#pragma warning restore ab_deprecated_operation
#pragma warning disable ab_deprecated_operation
        [Obsolete(DiagnosticId = "ab_deprecated_operation_wrapper")]
        public UserVerification.Response UserVerification(UserVerification input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<UserVerification.Response> UserVerificationAsync(UserVerification input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
#pragma warning restore ab_deprecated_operation
#pragma warning disable ab_deprecated_operation
        [Obsolete(DiagnosticId = "ab_deprecated_operation_wrapper")]
        public SendVerificationCode.Response SendVerificationCode(SendVerificationCode input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<SendVerificationCode.Response> SendVerificationCodeAsync(SendVerificationCode input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
#pragma warning restore ab_deprecated_operation
#pragma warning disable ab_deprecated_operation
        [Obsolete(DiagnosticId = "ab_deprecated_operation_wrapper")]
        public AdminGetAgeRestrictionStatusV2.Response AdminGetAgeRestrictionStatusV2(AdminGetAgeRestrictionStatusV2 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<AdminGetAgeRestrictionStatusV2.Response> AdminGetAgeRestrictionStatusV2Async(AdminGetAgeRestrictionStatusV2 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
#pragma warning restore ab_deprecated_operation
#pragma warning disable ab_deprecated_operation
        [Obsolete(DiagnosticId = "ab_deprecated_operation_wrapper")]
        public AdminUpdateAgeRestrictionConfigV2.Response AdminUpdateAgeRestrictionConfigV2(AdminUpdateAgeRestrictionConfigV2 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<AdminUpdateAgeRestrictionConfigV2.Response> AdminUpdateAgeRestrictionConfigV2Async(AdminUpdateAgeRestrictionConfigV2 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
#pragma warning restore ab_deprecated_operation
#pragma warning disable ab_deprecated_operation
        [Obsolete(DiagnosticId = "ab_deprecated_operation_wrapper")]
        public GetListCountryAgeRestriction.Response GetListCountryAgeRestriction(GetListCountryAgeRestriction input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<GetListCountryAgeRestriction.Response> GetListCountryAgeRestrictionAsync(GetListCountryAgeRestriction input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
#pragma warning restore ab_deprecated_operation
#pragma warning disable ab_deprecated_operation
        [Obsolete(DiagnosticId = "ab_deprecated_operation_wrapper")]
        public UpdateCountryAgeRestriction.Response UpdateCountryAgeRestriction(UpdateCountryAgeRestriction input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<UpdateCountryAgeRestriction.Response> UpdateCountryAgeRestrictionAsync(UpdateCountryAgeRestriction input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
#pragma warning restore ab_deprecated_operation
#pragma warning disable ab_deprecated_operation
        [Obsolete(DiagnosticId = "ab_deprecated_operation_wrapper")]
        public AdminSearchUsersV2.Response AdminSearchUsersV2(AdminSearchUsersV2 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<AdminSearchUsersV2.Response> AdminSearchUsersV2Async(AdminSearchUsersV2 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
#pragma warning restore ab_deprecated_operation
#pragma warning disable ab_deprecated_operation
        [Obsolete(DiagnosticId = "ab_deprecated_operation_wrapper")]
        public AdminGetUserByUserIdV2.Response AdminGetUserByUserIdV2(AdminGetUserByUserIdV2 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<AdminGetUserByUserIdV2.Response> AdminGetUserByUserIdV2Async(AdminGetUserByUserIdV2 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
#pragma warning restore ab_deprecated_operation
#pragma warning disable ab_deprecated_operation
        [Obsolete(DiagnosticId = "ab_deprecated_operation_wrapper")]
        public AdminUpdateUserV2.Response AdminUpdateUserV2(AdminUpdateUserV2 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<AdminUpdateUserV2.Response> AdminUpdateUserV2Async(AdminUpdateUserV2 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
#pragma warning restore ab_deprecated_operation
#pragma warning disable ab_deprecated_operation
        [Obsolete(DiagnosticId = "ab_deprecated_operation_wrapper")]
        public AdminBanUserV2.Response AdminBanUserV2(AdminBanUserV2 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<AdminBanUserV2.Response> AdminBanUserV2Async(AdminBanUserV2 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
#pragma warning restore ab_deprecated_operation
#pragma warning disable ab_deprecated_operation
        [Obsolete(DiagnosticId = "ab_deprecated_operation_wrapper")]
        public AdminGetUserBanV2.Response AdminGetUserBanV2(AdminGetUserBanV2 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<AdminGetUserBanV2.Response> AdminGetUserBanV2Async(AdminGetUserBanV2 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
#pragma warning restore ab_deprecated_operation
#pragma warning disable ab_deprecated_operation
        [Obsolete(DiagnosticId = "ab_deprecated_operation_wrapper")]
        public AdminDisableUserV2.Response AdminDisableUserV2(AdminDisableUserV2 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<AdminDisableUserV2.Response> AdminDisableUserV2Async(AdminDisableUserV2 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
#pragma warning restore ab_deprecated_operation
#pragma warning disable ab_deprecated_operation
        [Obsolete(DiagnosticId = "ab_deprecated_operation_wrapper")]
        public AdminEnableUserV2.Response AdminEnableUserV2(AdminEnableUserV2 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<AdminEnableUserV2.Response> AdminEnableUserV2Async(AdminEnableUserV2 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
#pragma warning restore ab_deprecated_operation
#pragma warning disable ab_deprecated_operation
        [Obsolete(DiagnosticId = "ab_deprecated_operation_wrapper")]
        public AdminResetPasswordV2.Response AdminResetPasswordV2(AdminResetPasswordV2 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<AdminResetPasswordV2.Response> AdminResetPasswordV2Async(AdminResetPasswordV2 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
#pragma warning restore ab_deprecated_operation
#pragma warning disable ab_deprecated_operation
        [Obsolete(DiagnosticId = "ab_deprecated_operation_wrapper")]
        public AdminDeletePlatformLinkV2.Response AdminDeletePlatformLinkV2(AdminDeletePlatformLinkV2 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<AdminDeletePlatformLinkV2.Response> AdminDeletePlatformLinkV2Async(AdminDeletePlatformLinkV2 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
#pragma warning restore ab_deprecated_operation
#pragma warning disable ab_deprecated_operation
        [Obsolete(DiagnosticId = "ab_deprecated_operation_wrapper")]
        public AdminPutUserRolesV2.Response AdminPutUserRolesV2(AdminPutUserRolesV2 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<AdminPutUserRolesV2.Response> AdminPutUserRolesV2Async(AdminPutUserRolesV2 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
#pragma warning restore ab_deprecated_operation
#pragma warning disable ab_deprecated_operation
        [Obsolete(DiagnosticId = "ab_deprecated_operation_wrapper")]
        public AdminCreateUserRolesV2.Response AdminCreateUserRolesV2(AdminCreateUserRolesV2 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<AdminCreateUserRolesV2.Response> AdminCreateUserRolesV2Async(AdminCreateUserRolesV2 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
#pragma warning restore ab_deprecated_operation
#pragma warning disable ab_deprecated_operation
        [Obsolete(DiagnosticId = "ab_deprecated_operation_wrapper")]
        public PublicGetCountryAgeRestriction.Response PublicGetCountryAgeRestriction(PublicGetCountryAgeRestriction input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<PublicGetCountryAgeRestriction.Response> PublicGetCountryAgeRestrictionAsync(PublicGetCountryAgeRestriction input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
#pragma warning restore ab_deprecated_operation
#pragma warning disable ab_deprecated_operation
        [Obsolete(DiagnosticId = "ab_deprecated_operation_wrapper")]
        public PublicCreateUserV2.Response PublicCreateUserV2(PublicCreateUserV2 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<PublicCreateUserV2.Response> PublicCreateUserV2Async(PublicCreateUserV2 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
#pragma warning restore ab_deprecated_operation
#pragma warning disable ab_deprecated_operation
        [Obsolete(DiagnosticId = "ab_deprecated_operation_wrapper")]
        public PublicForgotPasswordV2.Response PublicForgotPasswordV2(PublicForgotPasswordV2 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<PublicForgotPasswordV2.Response> PublicForgotPasswordV2Async(PublicForgotPasswordV2 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
#pragma warning restore ab_deprecated_operation
#pragma warning disable ab_deprecated_operation
        [Obsolete(DiagnosticId = "ab_deprecated_operation_wrapper")]
        public PublicResetPasswordV2.Response PublicResetPasswordV2(PublicResetPasswordV2 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<PublicResetPasswordV2.Response> PublicResetPasswordV2Async(PublicResetPasswordV2 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
#pragma warning restore ab_deprecated_operation
#pragma warning disable ab_deprecated_operation
        [Obsolete(DiagnosticId = "ab_deprecated_operation_wrapper")]
        public PublicGetUserByUserIDV2.Response PublicGetUserByUserIDV2(PublicGetUserByUserIDV2 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<PublicGetUserByUserIDV2.Response> PublicGetUserByUserIDV2Async(PublicGetUserByUserIDV2 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
#pragma warning restore ab_deprecated_operation
#pragma warning disable ab_deprecated_operation
        [Obsolete(DiagnosticId = "ab_deprecated_operation_wrapper")]
        public PublicUpdateUserV2.Response PublicUpdateUserV2(PublicUpdateUserV2 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<PublicUpdateUserV2.Response> PublicUpdateUserV2Async(PublicUpdateUserV2 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
#pragma warning restore ab_deprecated_operation
#pragma warning disable ab_deprecated_operation
        [Obsolete(DiagnosticId = "ab_deprecated_operation_wrapper")]
        public PublicGetUserBan.Response PublicGetUserBan(PublicGetUserBan input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<PublicGetUserBan.Response> PublicGetUserBanAsync(PublicGetUserBan input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
#pragma warning restore ab_deprecated_operation
#pragma warning disable ab_deprecated_operation
        [Obsolete(DiagnosticId = "ab_deprecated_operation_wrapper")]
        public PublicUpdatePasswordV2.Response PublicUpdatePasswordV2(PublicUpdatePasswordV2 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<PublicUpdatePasswordV2.Response> PublicUpdatePasswordV2Async(PublicUpdatePasswordV2 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
#pragma warning restore ab_deprecated_operation
#pragma warning disable ab_deprecated_operation
        [Obsolete(DiagnosticId = "ab_deprecated_operation_wrapper")]
        public GetListJusticePlatformAccounts.Response GetListJusticePlatformAccounts(GetListJusticePlatformAccounts input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<GetListJusticePlatformAccounts.Response> GetListJusticePlatformAccountsAsync(GetListJusticePlatformAccounts input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
#pragma warning restore ab_deprecated_operation
#pragma warning disable ab_deprecated_operation
        [Obsolete(DiagnosticId = "ab_deprecated_operation_wrapper")]
        public PublicPlatformLinkV2.Response PublicPlatformLinkV2(PublicPlatformLinkV2 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<PublicPlatformLinkV2.Response> PublicPlatformLinkV2Async(PublicPlatformLinkV2 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
#pragma warning restore ab_deprecated_operation
#pragma warning disable ab_deprecated_operation
        [Obsolete(DiagnosticId = "ab_deprecated_operation_wrapper")]
        public PublicDeletePlatformLinkV2.Response PublicDeletePlatformLinkV2(PublicDeletePlatformLinkV2 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<PublicDeletePlatformLinkV2.Response> PublicDeletePlatformLinkV2Async(PublicDeletePlatformLinkV2 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
#pragma warning restore ab_deprecated_operation
        public ListAdminsV3.Response ListAdminsV3(ListAdminsV3 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<ListAdminsV3.Response> ListAdminsV3Async(ListAdminsV3 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public AdminGetAgeRestrictionStatusV3.Response AdminGetAgeRestrictionStatusV3(AdminGetAgeRestrictionStatusV3 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<AdminGetAgeRestrictionStatusV3.Response> AdminGetAgeRestrictionStatusV3Async(AdminGetAgeRestrictionStatusV3 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public AdminUpdateAgeRestrictionConfigV3.Response AdminUpdateAgeRestrictionConfigV3(AdminUpdateAgeRestrictionConfigV3 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<AdminUpdateAgeRestrictionConfigV3.Response> AdminUpdateAgeRestrictionConfigV3Async(AdminUpdateAgeRestrictionConfigV3 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public AdminGetListCountryAgeRestrictionV3.Response AdminGetListCountryAgeRestrictionV3(AdminGetListCountryAgeRestrictionV3 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<AdminGetListCountryAgeRestrictionV3.Response> AdminGetListCountryAgeRestrictionV3Async(AdminGetListCountryAgeRestrictionV3 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public AdminUpdateCountryAgeRestrictionV3.Response AdminUpdateCountryAgeRestrictionV3(AdminUpdateCountryAgeRestrictionV3 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<AdminUpdateCountryAgeRestrictionV3.Response> AdminUpdateCountryAgeRestrictionV3Async(AdminUpdateCountryAgeRestrictionV3 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public AdminListUserIDByPlatformUserIDsV3.Response AdminListUserIDByPlatformUserIDsV3(AdminListUserIDByPlatformUserIDsV3 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<AdminListUserIDByPlatformUserIDsV3.Response> AdminListUserIDByPlatformUserIDsV3Async(AdminListUserIDByPlatformUserIDsV3 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public AdminGetUserByPlatformUserIDV3.Response AdminGetUserByPlatformUserIDV3(AdminGetUserByPlatformUserIDV3 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<AdminGetUserByPlatformUserIDV3.Response> AdminGetUserByPlatformUserIDV3Async(AdminGetUserByPlatformUserIDV3 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public GetAdminUsersByRoleIdV3.Response GetAdminUsersByRoleIdV3(GetAdminUsersByRoleIdV3 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<GetAdminUsersByRoleIdV3.Response> GetAdminUsersByRoleIdV3Async(GetAdminUsersByRoleIdV3 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public AdminGetUserByEmailAddressV3.Response AdminGetUserByEmailAddressV3(AdminGetUserByEmailAddressV3 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<AdminGetUserByEmailAddressV3.Response> AdminGetUserByEmailAddressV3Async(AdminGetUserByEmailAddressV3 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public AdminBulkUpdateUsersV3.Response AdminBulkUpdateUsersV3(AdminBulkUpdateUsersV3 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<AdminBulkUpdateUsersV3.Response> AdminBulkUpdateUsersV3Async(AdminBulkUpdateUsersV3 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public AdminGetBulkUserBanV3.Response AdminGetBulkUserBanV3(AdminGetBulkUserBanV3 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<AdminGetBulkUserBanV3.Response> AdminGetBulkUserBanV3Async(AdminGetBulkUserBanV3 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public AdminListUserIDByUserIDsV3.Response AdminListUserIDByUserIDsV3(AdminListUserIDByUserIDsV3 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<AdminListUserIDByUserIDsV3.Response> AdminListUserIDByUserIDsV3Async(AdminListUserIDByUserIDsV3 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public AdminBulkGetUsersPlatform.Response AdminBulkGetUsersPlatform(AdminBulkGetUsersPlatform input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<AdminBulkGetUsersPlatform.Response> AdminBulkGetUsersPlatformAsync(AdminBulkGetUsersPlatform input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public AdminInviteUserV3.Response AdminInviteUserV3(AdminInviteUserV3 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<AdminInviteUserV3.Response> AdminInviteUserV3Async(AdminInviteUserV3 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public AdminQueryThirdPlatformLinkHistoryV3.Response AdminQueryThirdPlatformLinkHistoryV3(AdminQueryThirdPlatformLinkHistoryV3 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<AdminQueryThirdPlatformLinkHistoryV3.Response> AdminQueryThirdPlatformLinkHistoryV3Async(AdminQueryThirdPlatformLinkHistoryV3 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public AdminListUsersV3.Response AdminListUsersV3(AdminListUsersV3 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<AdminListUsersV3.Response> AdminListUsersV3Async(AdminListUsersV3 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public AdminSearchUserV3.Response AdminSearchUserV3(AdminSearchUserV3 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<AdminSearchUserV3.Response> AdminSearchUserV3Async(AdminSearchUserV3 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public AdminGetBulkUserByEmailAddressV3.Response AdminGetBulkUserByEmailAddressV3(AdminGetBulkUserByEmailAddressV3 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<AdminGetBulkUserByEmailAddressV3.Response> AdminGetBulkUserByEmailAddressV3Async(AdminGetBulkUserByEmailAddressV3 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public AdminGetUserByUserIdV3.Response AdminGetUserByUserIdV3(AdminGetUserByUserIdV3 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<AdminGetUserByUserIdV3.Response> AdminGetUserByUserIdV3Async(AdminGetUserByUserIdV3 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public AdminUpdateUserV3.Response AdminUpdateUserV3(AdminUpdateUserV3 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<AdminUpdateUserV3.Response> AdminUpdateUserV3Async(AdminUpdateUserV3 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public AdminGetUserBanV3.Response AdminGetUserBanV3(AdminGetUserBanV3 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<AdminGetUserBanV3.Response> AdminGetUserBanV3Async(AdminGetUserBanV3 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public AdminBanUserV3.Response AdminBanUserV3(AdminBanUserV3 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<AdminBanUserV3.Response> AdminBanUserV3Async(AdminBanUserV3 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public AdminGetUserBanSummaryV3.Response AdminGetUserBanSummaryV3(AdminGetUserBanSummaryV3 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<AdminGetUserBanSummaryV3.Response> AdminGetUserBanSummaryV3Async(AdminGetUserBanSummaryV3 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public AdminUpdateUserBanV3.Response AdminUpdateUserBanV3(AdminUpdateUserBanV3 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<AdminUpdateUserBanV3.Response> AdminUpdateUserBanV3Async(AdminUpdateUserBanV3 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public AdminSendVerificationCodeV3.Response AdminSendVerificationCodeV3(AdminSendVerificationCodeV3 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<AdminSendVerificationCodeV3.Response> AdminSendVerificationCodeV3Async(AdminSendVerificationCodeV3 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public AdminVerifyAccountV3.Response AdminVerifyAccountV3(AdminVerifyAccountV3 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<AdminVerifyAccountV3.Response> AdminVerifyAccountV3Async(AdminVerifyAccountV3 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public GetUserVerificationCode.Response GetUserVerificationCode(GetUserVerificationCode input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<GetUserVerificationCode.Response> GetUserVerificationCodeAsync(GetUserVerificationCode input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public AdminGetUserDeletionStatusV3.Response AdminGetUserDeletionStatusV3(AdminGetUserDeletionStatusV3 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<AdminGetUserDeletionStatusV3.Response> AdminGetUserDeletionStatusV3Async(AdminGetUserDeletionStatusV3 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public AdminUpdateUserDeletionStatusV3.Response AdminUpdateUserDeletionStatusV3(AdminUpdateUserDeletionStatusV3 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<AdminUpdateUserDeletionStatusV3.Response> AdminUpdateUserDeletionStatusV3Async(AdminUpdateUserDeletionStatusV3 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public AdminListUserAllPlatformAccountsDistinctV3.Response AdminListUserAllPlatformAccountsDistinctV3(AdminListUserAllPlatformAccountsDistinctV3 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<AdminListUserAllPlatformAccountsDistinctV3.Response> AdminListUserAllPlatformAccountsDistinctV3Async(AdminListUserAllPlatformAccountsDistinctV3 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public AdminUpgradeHeadlessAccountV3.Response AdminUpgradeHeadlessAccountV3(AdminUpgradeHeadlessAccountV3 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<AdminUpgradeHeadlessAccountV3.Response> AdminUpgradeHeadlessAccountV3Async(AdminUpgradeHeadlessAccountV3 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public AdminDeleteUserInformationV3.Response AdminDeleteUserInformationV3(AdminDeleteUserInformationV3 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<AdminDeleteUserInformationV3.Response> AdminDeleteUserInformationV3Async(AdminDeleteUserInformationV3 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public AdminGetUserLoginHistoriesV3.Response AdminGetUserLoginHistoriesV3(AdminGetUserLoginHistoriesV3 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<AdminGetUserLoginHistoriesV3.Response> AdminGetUserLoginHistoriesV3Async(AdminGetUserLoginHistoriesV3 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public AdminResetPasswordV3.Response AdminResetPasswordV3(AdminResetPasswordV3 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<AdminResetPasswordV3.Response> AdminResetPasswordV3Async(AdminResetPasswordV3 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public AdminUpdateUserPermissionV3.Response AdminUpdateUserPermissionV3(AdminUpdateUserPermissionV3 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<AdminUpdateUserPermissionV3.Response> AdminUpdateUserPermissionV3Async(AdminUpdateUserPermissionV3 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public AdminAddUserPermissionsV3.Response AdminAddUserPermissionsV3(AdminAddUserPermissionsV3 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<AdminAddUserPermissionsV3.Response> AdminAddUserPermissionsV3Async(AdminAddUserPermissionsV3 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public AdminDeleteUserPermissionBulkV3.Response AdminDeleteUserPermissionBulkV3(AdminDeleteUserPermissionBulkV3 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<AdminDeleteUserPermissionBulkV3.Response> AdminDeleteUserPermissionBulkV3Async(AdminDeleteUserPermissionBulkV3 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public AdminDeleteUserPermissionV3.Response AdminDeleteUserPermissionV3(AdminDeleteUserPermissionV3 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<AdminDeleteUserPermissionV3.Response> AdminDeleteUserPermissionV3Async(AdminDeleteUserPermissionV3 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public AdminGetUserPlatformAccountsV3.Response AdminGetUserPlatformAccountsV3(AdminGetUserPlatformAccountsV3 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<AdminGetUserPlatformAccountsV3.Response> AdminGetUserPlatformAccountsV3Async(AdminGetUserPlatformAccountsV3 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public AdminListAllDistinctPlatformAccountsV3.Response AdminListAllDistinctPlatformAccountsV3(AdminListAllDistinctPlatformAccountsV3 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<AdminListAllDistinctPlatformAccountsV3.Response> AdminListAllDistinctPlatformAccountsV3Async(AdminListAllDistinctPlatformAccountsV3 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public AdminGetListJusticePlatformAccounts.Response AdminGetListJusticePlatformAccounts(AdminGetListJusticePlatformAccounts input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<AdminGetListJusticePlatformAccounts.Response> AdminGetListJusticePlatformAccountsAsync(AdminGetListJusticePlatformAccounts input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public AdminGetUserMapping.Response AdminGetUserMapping(AdminGetUserMapping input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<AdminGetUserMapping.Response> AdminGetUserMappingAsync(AdminGetUserMapping input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public AdminCreateJusticeUser.Response AdminCreateJusticeUser(AdminCreateJusticeUser input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<AdminCreateJusticeUser.Response> AdminCreateJusticeUserAsync(AdminCreateJusticeUser input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public AdminLinkPlatformAccount.Response AdminLinkPlatformAccount(AdminLinkPlatformAccount input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<AdminLinkPlatformAccount.Response> AdminLinkPlatformAccountAsync(AdminLinkPlatformAccount input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public AdminGetUserLinkHistoriesV3.Response AdminGetUserLinkHistoriesV3(AdminGetUserLinkHistoriesV3 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<AdminGetUserLinkHistoriesV3.Response> AdminGetUserLinkHistoriesV3Async(AdminGetUserLinkHistoriesV3 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
#pragma warning disable ab_deprecated_operation
        [Obsolete(DiagnosticId = "ab_deprecated_operation_wrapper")]
        public AdminPlatformUnlinkV3.Response AdminPlatformUnlinkV3(AdminPlatformUnlinkV3 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<AdminPlatformUnlinkV3.Response> AdminPlatformUnlinkV3Async(AdminPlatformUnlinkV3 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
#pragma warning restore ab_deprecated_operation
        public AdminPlatformUnlinkAllV3.Response AdminPlatformUnlinkAllV3(AdminPlatformUnlinkAllV3 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<AdminPlatformUnlinkAllV3.Response> AdminPlatformUnlinkAllV3Async(AdminPlatformUnlinkAllV3 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public AdminPlatformLinkV3.Response AdminPlatformLinkV3(AdminPlatformLinkV3 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<AdminPlatformLinkV3.Response> AdminPlatformLinkV3Async(AdminPlatformLinkV3 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
#pragma warning disable ab_deprecated_operation
        [Obsolete(DiagnosticId = "ab_deprecated_operation_wrapper")]
        public AdminDeleteUserLinkingHistoryByPlatformIDV3.Response AdminDeleteUserLinkingHistoryByPlatformIDV3(AdminDeleteUserLinkingHistoryByPlatformIDV3 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<AdminDeleteUserLinkingHistoryByPlatformIDV3.Response> AdminDeleteUserLinkingHistoryByPlatformIDV3Async(AdminDeleteUserLinkingHistoryByPlatformIDV3 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
#pragma warning restore ab_deprecated_operation
        public AdminDeleteUserLinkingRestrictionByPlatformIDV3.Response AdminDeleteUserLinkingRestrictionByPlatformIDV3(AdminDeleteUserLinkingRestrictionByPlatformIDV3 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<AdminDeleteUserLinkingRestrictionByPlatformIDV3.Response> AdminDeleteUserLinkingRestrictionByPlatformIDV3Async(AdminDeleteUserLinkingRestrictionByPlatformIDV3 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public AdminGetThirdPartyPlatformTokenLinkStatusV3.Response AdminGetThirdPartyPlatformTokenLinkStatusV3(AdminGetThirdPartyPlatformTokenLinkStatusV3 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<AdminGetThirdPartyPlatformTokenLinkStatusV3.Response> AdminGetThirdPartyPlatformTokenLinkStatusV3Async(AdminGetThirdPartyPlatformTokenLinkStatusV3 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public AdminGetUserSinglePlatformAccount.Response AdminGetUserSinglePlatformAccount(AdminGetUserSinglePlatformAccount input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<AdminGetUserSinglePlatformAccount.Response> AdminGetUserSinglePlatformAccountAsync(AdminGetUserSinglePlatformAccount input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }

        public AdminGetUserSinglePlatformAccount.Response<T1> AdminGetUserSinglePlatformAccount<T1>(AdminGetUserSinglePlatformAccount input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<AdminGetUserSinglePlatformAccount.Response<T1>> AdminGetUserSinglePlatformAccountAsync<T1>(AdminGetUserSinglePlatformAccount input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public AdminDeleteUserRolesV3.Response AdminDeleteUserRolesV3(AdminDeleteUserRolesV3 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<AdminDeleteUserRolesV3.Response> AdminDeleteUserRolesV3Async(AdminDeleteUserRolesV3 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public AdminSaveUserRoleV3.Response AdminSaveUserRoleV3(AdminSaveUserRoleV3 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<AdminSaveUserRoleV3.Response> AdminSaveUserRoleV3Async(AdminSaveUserRoleV3 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public AdminAddUserRoleV3.Response AdminAddUserRoleV3(AdminAddUserRoleV3 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<AdminAddUserRoleV3.Response> AdminAddUserRoleV3Async(AdminAddUserRoleV3 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public AdminDeleteUserRoleV3.Response AdminDeleteUserRoleV3(AdminDeleteUserRoleV3 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<AdminDeleteUserRoleV3.Response> AdminDeleteUserRoleV3Async(AdminDeleteUserRoleV3 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public AdminUpdateUserStatusV3.Response AdminUpdateUserStatusV3(AdminUpdateUserStatusV3 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<AdminUpdateUserStatusV3.Response> AdminUpdateUserStatusV3Async(AdminUpdateUserStatusV3 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public AdminTrustlyUpdateUserIdentity.Response AdminTrustlyUpdateUserIdentity(AdminTrustlyUpdateUserIdentity input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<AdminTrustlyUpdateUserIdentity.Response> AdminTrustlyUpdateUserIdentityAsync(AdminTrustlyUpdateUserIdentity input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public AdminVerifyUserWithoutVerificationCodeV3.Response AdminVerifyUserWithoutVerificationCodeV3(AdminVerifyUserWithoutVerificationCodeV3 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<AdminVerifyUserWithoutVerificationCodeV3.Response> AdminVerifyUserWithoutVerificationCodeV3Async(AdminVerifyUserWithoutVerificationCodeV3 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public AdminGetMyUserV3.Response AdminGetMyUserV3(AdminGetMyUserV3 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<AdminGetMyUserV3.Response> AdminGetMyUserV3Async(AdminGetMyUserV3 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public PublicGetCountryAgeRestrictionV3.Response PublicGetCountryAgeRestrictionV3(PublicGetCountryAgeRestrictionV3 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<PublicGetCountryAgeRestrictionV3.Response> PublicGetCountryAgeRestrictionV3Async(PublicGetCountryAgeRestrictionV3 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
#pragma warning disable ab_deprecated_operation
        [Obsolete(DiagnosticId = "ab_deprecated_operation_wrapper")]
        public PublicListUserIDByPlatformUserIDsV3.Response PublicListUserIDByPlatformUserIDsV3(PublicListUserIDByPlatformUserIDsV3 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<PublicListUserIDByPlatformUserIDsV3.Response> PublicListUserIDByPlatformUserIDsV3Async(PublicListUserIDByPlatformUserIDsV3 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
#pragma warning restore ab_deprecated_operation
        public PublicGetUserByPlatformUserIDV3.Response PublicGetUserByPlatformUserIDV3(PublicGetUserByPlatformUserIDV3 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<PublicGetUserByPlatformUserIDV3.Response> PublicGetUserByPlatformUserIDV3Async(PublicGetUserByPlatformUserIDV3 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public PublicGetAsyncStatus.Response PublicGetAsyncStatus(PublicGetAsyncStatus input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<PublicGetAsyncStatus.Response> PublicGetAsyncStatusAsync(PublicGetAsyncStatus input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }

        public PublicGetAsyncStatus.Response<T1> PublicGetAsyncStatus<T1>(PublicGetAsyncStatus input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<PublicGetAsyncStatus.Response<T1>> PublicGetAsyncStatusAsync<T1>(PublicGetAsyncStatus input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public PublicSearchUserV3.Response PublicSearchUserV3(PublicSearchUserV3 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<PublicSearchUserV3.Response> PublicSearchUserV3Async(PublicSearchUserV3 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public PublicCreateUserV3.Response PublicCreateUserV3(PublicCreateUserV3 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<PublicCreateUserV3.Response> PublicCreateUserV3Async(PublicCreateUserV3 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public CheckUserAvailability.Response CheckUserAvailability(CheckUserAvailability input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<CheckUserAvailability.Response> CheckUserAvailabilityAsync(CheckUserAvailability input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public PublicBulkGetUsers.Response PublicBulkGetUsers(PublicBulkGetUsers input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<PublicBulkGetUsers.Response> PublicBulkGetUsersAsync(PublicBulkGetUsers input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public PublicSendRegistrationCode.Response PublicSendRegistrationCode(PublicSendRegistrationCode input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<PublicSendRegistrationCode.Response> PublicSendRegistrationCodeAsync(PublicSendRegistrationCode input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public PublicVerifyRegistrationCode.Response PublicVerifyRegistrationCode(PublicVerifyRegistrationCode input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<PublicVerifyRegistrationCode.Response> PublicVerifyRegistrationCodeAsync(PublicVerifyRegistrationCode input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public PublicForgotPasswordV3.Response PublicForgotPasswordV3(PublicForgotPasswordV3 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<PublicForgotPasswordV3.Response> PublicForgotPasswordV3Async(PublicForgotPasswordV3 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public PublicValidateUserInput.Response PublicValidateUserInput(PublicValidateUserInput input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<PublicValidateUserInput.Response> PublicValidateUserInputAsync(PublicValidateUserInput input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public GetAdminInvitationV3.Response GetAdminInvitationV3(GetAdminInvitationV3 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<GetAdminInvitationV3.Response> GetAdminInvitationV3Async(GetAdminInvitationV3 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public CreateUserFromInvitationV3.Response CreateUserFromInvitationV3(CreateUserFromInvitationV3 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<CreateUserFromInvitationV3.Response> CreateUserFromInvitationV3Async(CreateUserFromInvitationV3 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public UpdateUserV3.Response UpdateUserV3(UpdateUserV3 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<UpdateUserV3.Response> UpdateUserV3Async(UpdateUserV3 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public PublicPartialUpdateUserV3.Response PublicPartialUpdateUserV3(PublicPartialUpdateUserV3 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<PublicPartialUpdateUserV3.Response> PublicPartialUpdateUserV3Async(PublicPartialUpdateUserV3 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public PublicSendVerificationCodeV3.Response PublicSendVerificationCodeV3(PublicSendVerificationCodeV3 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<PublicSendVerificationCodeV3.Response> PublicSendVerificationCodeV3Async(PublicSendVerificationCodeV3 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public PublicUserVerificationV3.Response PublicUserVerificationV3(PublicUserVerificationV3 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<PublicUserVerificationV3.Response> PublicUserVerificationV3Async(PublicUserVerificationV3 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public PublicUpgradeHeadlessAccountV3.Response PublicUpgradeHeadlessAccountV3(PublicUpgradeHeadlessAccountV3 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<PublicUpgradeHeadlessAccountV3.Response> PublicUpgradeHeadlessAccountV3Async(PublicUpgradeHeadlessAccountV3 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public PublicVerifyHeadlessAccountV3.Response PublicVerifyHeadlessAccountV3(PublicVerifyHeadlessAccountV3 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<PublicVerifyHeadlessAccountV3.Response> PublicVerifyHeadlessAccountV3Async(PublicVerifyHeadlessAccountV3 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public PublicUpdatePasswordV3.Response PublicUpdatePasswordV3(PublicUpdatePasswordV3 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<PublicUpdatePasswordV3.Response> PublicUpdatePasswordV3Async(PublicUpdatePasswordV3 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public PublicCreateJusticeUser.Response PublicCreateJusticeUser(PublicCreateJusticeUser input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<PublicCreateJusticeUser.Response> PublicCreateJusticeUserAsync(PublicCreateJusticeUser input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public PublicPlatformLinkV3.Response PublicPlatformLinkV3(PublicPlatformLinkV3 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<PublicPlatformLinkV3.Response> PublicPlatformLinkV3Async(PublicPlatformLinkV3 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
#pragma warning disable ab_deprecated_operation
        [Obsolete(DiagnosticId = "ab_deprecated_operation_wrapper")]
        public PublicPlatformUnlinkV3.Response PublicPlatformUnlinkV3(PublicPlatformUnlinkV3 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<PublicPlatformUnlinkV3.Response> PublicPlatformUnlinkV3Async(PublicPlatformUnlinkV3 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
#pragma warning restore ab_deprecated_operation
        public PublicPlatformUnlinkAllV3.Response PublicPlatformUnlinkAllV3(PublicPlatformUnlinkAllV3 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<PublicPlatformUnlinkAllV3.Response> PublicPlatformUnlinkAllV3Async(PublicPlatformUnlinkAllV3 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public PublicForcePlatformLinkV3.Response PublicForcePlatformLinkV3(PublicForcePlatformLinkV3 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<PublicForcePlatformLinkV3.Response> PublicForcePlatformLinkV3Async(PublicForcePlatformLinkV3 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public PublicWebLinkPlatform.Response PublicWebLinkPlatform(PublicWebLinkPlatform input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<PublicWebLinkPlatform.Response> PublicWebLinkPlatformAsync(PublicWebLinkPlatform input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public PublicWebLinkPlatformEstablish.Response PublicWebLinkPlatformEstablish(PublicWebLinkPlatformEstablish input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<PublicWebLinkPlatformEstablish.Response> PublicWebLinkPlatformEstablishAsync(PublicWebLinkPlatformEstablish input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public PublicProcessWebLinkPlatformV3.Response PublicProcessWebLinkPlatformV3(PublicProcessWebLinkPlatformV3 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<PublicProcessWebLinkPlatformV3.Response> PublicProcessWebLinkPlatformV3Async(PublicProcessWebLinkPlatformV3 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }

        public PublicProcessWebLinkPlatformV3.Response<T1> PublicProcessWebLinkPlatformV3<T1>(PublicProcessWebLinkPlatformV3 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<PublicProcessWebLinkPlatformV3.Response<T1>> PublicProcessWebLinkPlatformV3Async<T1>(PublicProcessWebLinkPlatformV3 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public PublicGetUsersPlatformInfosV3.Response PublicGetUsersPlatformInfosV3(PublicGetUsersPlatformInfosV3 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<PublicGetUsersPlatformInfosV3.Response> PublicGetUsersPlatformInfosV3Async(PublicGetUsersPlatformInfosV3 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public ResetPasswordV3.Response ResetPasswordV3(ResetPasswordV3 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<ResetPasswordV3.Response> ResetPasswordV3Async(ResetPasswordV3 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
#pragma warning disable ab_deprecated_operation
        [Obsolete(DiagnosticId = "ab_deprecated_operation_wrapper")]
        public PublicGetUserByUserIdV3.Response PublicGetUserByUserIdV3(PublicGetUserByUserIdV3 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<PublicGetUserByUserIdV3.Response> PublicGetUserByUserIdV3Async(PublicGetUserByUserIdV3 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
#pragma warning restore ab_deprecated_operation
        public PublicGetUserBanHistoryV3.Response PublicGetUserBanHistoryV3(PublicGetUserBanHistoryV3 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<PublicGetUserBanHistoryV3.Response> PublicGetUserBanHistoryV3Async(PublicGetUserBanHistoryV3 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public PublicListUserAllPlatformAccountsDistinctV3.Response PublicListUserAllPlatformAccountsDistinctV3(PublicListUserAllPlatformAccountsDistinctV3 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<PublicListUserAllPlatformAccountsDistinctV3.Response> PublicListUserAllPlatformAccountsDistinctV3Async(PublicListUserAllPlatformAccountsDistinctV3 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public PublicGetUserInformationV3.Response PublicGetUserInformationV3(PublicGetUserInformationV3 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<PublicGetUserInformationV3.Response> PublicGetUserInformationV3Async(PublicGetUserInformationV3 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public PublicGetUserLoginHistoriesV3.Response PublicGetUserLoginHistoriesV3(PublicGetUserLoginHistoriesV3 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<PublicGetUserLoginHistoriesV3.Response> PublicGetUserLoginHistoriesV3Async(PublicGetUserLoginHistoriesV3 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public PublicGetUserPlatformAccountsV3.Response PublicGetUserPlatformAccountsV3(PublicGetUserPlatformAccountsV3 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<PublicGetUserPlatformAccountsV3.Response> PublicGetUserPlatformAccountsV3Async(PublicGetUserPlatformAccountsV3 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public PublicListJusticePlatformAccountsV3.Response PublicListJusticePlatformAccountsV3(PublicListJusticePlatformAccountsV3 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<PublicListJusticePlatformAccountsV3.Response> PublicListJusticePlatformAccountsV3Async(PublicListJusticePlatformAccountsV3 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public PublicLinkPlatformAccount.Response PublicLinkPlatformAccount(PublicLinkPlatformAccount input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<PublicLinkPlatformAccount.Response> PublicLinkPlatformAccountAsync(PublicLinkPlatformAccount input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public PublicForceLinkPlatformWithProgression.Response PublicForceLinkPlatformWithProgression(PublicForceLinkPlatformWithProgression input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<PublicForceLinkPlatformWithProgression.Response> PublicForceLinkPlatformWithProgressionAsync(PublicForceLinkPlatformWithProgression input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public PublicGetPublisherUserV3.Response PublicGetPublisherUserV3(PublicGetPublisherUserV3 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<PublicGetPublisherUserV3.Response> PublicGetPublisherUserV3Async(PublicGetPublisherUserV3 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public PublicValidateUserByUserIDAndPasswordV3.Response PublicValidateUserByUserIDAndPasswordV3(PublicValidateUserByUserIDAndPasswordV3 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<PublicValidateUserByUserIDAndPasswordV3.Response> PublicValidateUserByUserIDAndPasswordV3Async(PublicValidateUserByUserIDAndPasswordV3 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public PublicGetMyUserV3.Response PublicGetMyUserV3(PublicGetMyUserV3 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<PublicGetMyUserV3.Response> PublicGetMyUserV3Async(PublicGetMyUserV3 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public PublicSendCodeForwardV3.Response PublicSendCodeForwardV3(PublicSendCodeForwardV3 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<PublicSendCodeForwardV3.Response> PublicSendCodeForwardV3Async(PublicSendCodeForwardV3 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public PublicGetLinkHeadlessAccountToMyAccountConflictV3.Response PublicGetLinkHeadlessAccountToMyAccountConflictV3(PublicGetLinkHeadlessAccountToMyAccountConflictV3 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<PublicGetLinkHeadlessAccountToMyAccountConflictV3.Response> PublicGetLinkHeadlessAccountToMyAccountConflictV3Async(PublicGetLinkHeadlessAccountToMyAccountConflictV3 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public LinkHeadlessAccountToMyAccountV3.Response LinkHeadlessAccountToMyAccountV3(LinkHeadlessAccountToMyAccountV3 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<LinkHeadlessAccountToMyAccountV3.Response> LinkHeadlessAccountToMyAccountV3Async(LinkHeadlessAccountToMyAccountV3 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public PublicGetMyRedirectionAfterLinkV3.Response PublicGetMyRedirectionAfterLinkV3(PublicGetMyRedirectionAfterLinkV3 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<PublicGetMyRedirectionAfterLinkV3.Response> PublicGetMyRedirectionAfterLinkV3Async(PublicGetMyRedirectionAfterLinkV3 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public PublicGetMyProfileAllowUpdateStatusV3.Response PublicGetMyProfileAllowUpdateStatusV3(PublicGetMyProfileAllowUpdateStatusV3 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<PublicGetMyProfileAllowUpdateStatusV3.Response> PublicGetMyProfileAllowUpdateStatusV3Async(PublicGetMyProfileAllowUpdateStatusV3 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public PublicSendVerificationLinkV3.Response PublicSendVerificationLinkV3(PublicSendVerificationLinkV3 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<PublicSendVerificationLinkV3.Response> PublicSendVerificationLinkV3Async(PublicSendVerificationLinkV3 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public PublicGetOpenidUserInfoV3.Response PublicGetOpenidUserInfoV3(PublicGetOpenidUserInfoV3 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<PublicGetOpenidUserInfoV3.Response> PublicGetOpenidUserInfoV3Async(PublicGetOpenidUserInfoV3 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public PublicVerifyUserByLinkV3.Response PublicVerifyUserByLinkV3(PublicVerifyUserByLinkV3 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<PublicVerifyUserByLinkV3.Response> PublicVerifyUserByLinkV3Async(PublicVerifyUserByLinkV3 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
    }
}