// Copyright (c) 2022-2023 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// This code is generated by tool. DO NOT EDIT.
using System;
using System.Collections.Generic;
using System.Text;
using System.IO;

using AccelByte.Sdk.Core;

using AccelByte.Sdk.Api.Iam.Model;
using AccelByte.Sdk.Api.Iam.Operation;

namespace AccelByte.Sdk.Api.Iam.Wrapper
{
    public class Roles
    {
        private readonly IAccelByteSdk _sdk;

        public Roles(IAccelByteSdk sdk)
        {
            _sdk = sdk;
        }

        #region Operation Builders
        [Obsolete(DiagnosticId ="ab_deprecated_operation_wrapper")]
        public GetRoles.GetRolesBuilder GetRolesOp
        {
            get { return new Operation.GetRoles.GetRolesBuilder(_sdk); }
        }
        [Obsolete(DiagnosticId ="ab_deprecated_operation_wrapper")]
        public CreateRole.CreateRoleBuilder CreateRoleOp
        {
            get { return new Operation.CreateRole.CreateRoleBuilder(_sdk); }
        }
        [Obsolete(DiagnosticId ="ab_deprecated_operation_wrapper")]
        public GetRole.GetRoleBuilder GetRoleOp
        {
            get { return new Operation.GetRole.GetRoleBuilder(_sdk); }
        }
        [Obsolete(DiagnosticId ="ab_deprecated_operation_wrapper")]
        public UpdateRole.UpdateRoleBuilder UpdateRoleOp
        {
            get { return new Operation.UpdateRole.UpdateRoleBuilder(_sdk); }
        }
        [Obsolete(DiagnosticId ="ab_deprecated_operation_wrapper")]
        public DeleteRole.DeleteRoleBuilder DeleteRoleOp
        {
            get { return new Operation.DeleteRole.DeleteRoleBuilder(_sdk); }
        }
        [Obsolete(DiagnosticId ="ab_deprecated_operation_wrapper")]
        public GetRoleAdminStatus.GetRoleAdminStatusBuilder GetRoleAdminStatusOp
        {
            get { return new Operation.GetRoleAdminStatus.GetRoleAdminStatusBuilder(_sdk); }
        }
        [Obsolete(DiagnosticId ="ab_deprecated_operation_wrapper")]
        public SetRoleAsAdmin.SetRoleAsAdminBuilder SetRoleAsAdminOp
        {
            get { return new Operation.SetRoleAsAdmin.SetRoleAsAdminBuilder(_sdk); }
        }
        [Obsolete(DiagnosticId ="ab_deprecated_operation_wrapper")]
        public RemoveRoleAdmin.RemoveRoleAdminBuilder RemoveRoleAdminOp
        {
            get { return new Operation.RemoveRoleAdmin.RemoveRoleAdminBuilder(_sdk); }
        }
        [Obsolete(DiagnosticId ="ab_deprecated_operation_wrapper")]
        public GetRoleManagers.GetRoleManagersBuilder GetRoleManagersOp
        {
            get { return new Operation.GetRoleManagers.GetRoleManagersBuilder(_sdk); }
        }
        [Obsolete(DiagnosticId ="ab_deprecated_operation_wrapper")]
        public AddRoleManagers.AddRoleManagersBuilder AddRoleManagersOp
        {
            get { return new Operation.AddRoleManagers.AddRoleManagersBuilder(_sdk); }
        }
        [Obsolete(DiagnosticId ="ab_deprecated_operation_wrapper")]
        public RemoveRoleManagers.RemoveRoleManagersBuilder RemoveRoleManagersOp
        {
            get { return new Operation.RemoveRoleManagers.RemoveRoleManagersBuilder(_sdk); }
        }
        [Obsolete(DiagnosticId ="ab_deprecated_operation_wrapper")]
        public GetRoleMembers.GetRoleMembersBuilder GetRoleMembersOp
        {
            get { return new Operation.GetRoleMembers.GetRoleMembersBuilder(_sdk); }
        }
        [Obsolete(DiagnosticId ="ab_deprecated_operation_wrapper")]
        public AddRoleMembers.AddRoleMembersBuilder AddRoleMembersOp
        {
            get { return new Operation.AddRoleMembers.AddRoleMembersBuilder(_sdk); }
        }
        [Obsolete(DiagnosticId ="ab_deprecated_operation_wrapper")]
        public RemoveRoleMembers.RemoveRoleMembersBuilder RemoveRoleMembersOp
        {
            get { return new Operation.RemoveRoleMembers.RemoveRoleMembersBuilder(_sdk); }
        }
        [Obsolete(DiagnosticId ="ab_deprecated_operation_wrapper")]
        public UpdateRolePermissions.UpdateRolePermissionsBuilder UpdateRolePermissionsOp
        {
            get { return new Operation.UpdateRolePermissions.UpdateRolePermissionsBuilder(_sdk); }
        }
        [Obsolete(DiagnosticId ="ab_deprecated_operation_wrapper")]
        public AddRolePermission.AddRolePermissionBuilder AddRolePermissionOp
        {
            get { return new Operation.AddRolePermission.AddRolePermissionBuilder(_sdk); }
        }
        [Obsolete(DiagnosticId ="ab_deprecated_operation_wrapper")]
        public DeleteRolePermission.DeleteRolePermissionBuilder DeleteRolePermissionOp
        {
            get { return new Operation.DeleteRolePermission.DeleteRolePermissionBuilder(_sdk); }
        }
        public AdminGetRolesV3.AdminGetRolesV3Builder AdminGetRolesV3Op
        {
            get { return new Operation.AdminGetRolesV3.AdminGetRolesV3Builder(_sdk); }
        }
        public AdminCreateRoleV3.AdminCreateRoleV3Builder AdminCreateRoleV3Op
        {
            get { return new Operation.AdminCreateRoleV3.AdminCreateRoleV3Builder(_sdk); }
        }
        public AdminGetRoleV3.AdminGetRoleV3Builder AdminGetRoleV3Op
        {
            get { return new Operation.AdminGetRoleV3.AdminGetRoleV3Builder(_sdk); }
        }
        public AdminDeleteRoleV3.AdminDeleteRoleV3Builder AdminDeleteRoleV3Op
        {
            get { return new Operation.AdminDeleteRoleV3.AdminDeleteRoleV3Builder(_sdk); }
        }
        public AdminUpdateRoleV3.AdminUpdateRoleV3Builder AdminUpdateRoleV3Op
        {
            get { return new Operation.AdminUpdateRoleV3.AdminUpdateRoleV3Builder(_sdk); }
        }
        public AdminGetRoleAdminStatusV3.AdminGetRoleAdminStatusV3Builder AdminGetRoleAdminStatusV3Op
        {
            get { return new Operation.AdminGetRoleAdminStatusV3.AdminGetRoleAdminStatusV3Builder(_sdk); }
        }
        public AdminUpdateAdminRoleStatusV3.AdminUpdateAdminRoleStatusV3Builder AdminUpdateAdminRoleStatusV3Op
        {
            get { return new Operation.AdminUpdateAdminRoleStatusV3.AdminUpdateAdminRoleStatusV3Builder(_sdk); }
        }
        public AdminRemoveRoleAdminV3.AdminRemoveRoleAdminV3Builder AdminRemoveRoleAdminV3Op
        {
            get { return new Operation.AdminRemoveRoleAdminV3.AdminRemoveRoleAdminV3Builder(_sdk); }
        }
        public AdminGetRoleManagersV3.AdminGetRoleManagersV3Builder AdminGetRoleManagersV3Op
        {
            get { return new Operation.AdminGetRoleManagersV3.AdminGetRoleManagersV3Builder(_sdk); }
        }
        public AdminAddRoleManagersV3.AdminAddRoleManagersV3Builder AdminAddRoleManagersV3Op
        {
            get { return new Operation.AdminAddRoleManagersV3.AdminAddRoleManagersV3Builder(_sdk); }
        }
        public AdminRemoveRoleManagersV3.AdminRemoveRoleManagersV3Builder AdminRemoveRoleManagersV3Op
        {
            get { return new Operation.AdminRemoveRoleManagersV3.AdminRemoveRoleManagersV3Builder(_sdk); }
        }
        public AdminGetRoleMembersV3.AdminGetRoleMembersV3Builder AdminGetRoleMembersV3Op
        {
            get { return new Operation.AdminGetRoleMembersV3.AdminGetRoleMembersV3Builder(_sdk); }
        }
        public AdminAddRoleMembersV3.AdminAddRoleMembersV3Builder AdminAddRoleMembersV3Op
        {
            get { return new Operation.AdminAddRoleMembersV3.AdminAddRoleMembersV3Builder(_sdk); }
        }
        public AdminRemoveRoleMembersV3.AdminRemoveRoleMembersV3Builder AdminRemoveRoleMembersV3Op
        {
            get { return new Operation.AdminRemoveRoleMembersV3.AdminRemoveRoleMembersV3Builder(_sdk); }
        }
        public AdminUpdateRolePermissionsV3.AdminUpdateRolePermissionsV3Builder AdminUpdateRolePermissionsV3Op
        {
            get { return new Operation.AdminUpdateRolePermissionsV3.AdminUpdateRolePermissionsV3Builder(_sdk); }
        }
        public AdminAddRolePermissionsV3.AdminAddRolePermissionsV3Builder AdminAddRolePermissionsV3Op
        {
            get { return new Operation.AdminAddRolePermissionsV3.AdminAddRolePermissionsV3Builder(_sdk); }
        }
        public AdminDeleteRolePermissionsV3.AdminDeleteRolePermissionsV3Builder AdminDeleteRolePermissionsV3Op
        {
            get { return new Operation.AdminDeleteRolePermissionsV3.AdminDeleteRolePermissionsV3Builder(_sdk); }
        }
        public AdminDeleteRolePermissionV3.AdminDeleteRolePermissionV3Builder AdminDeleteRolePermissionV3Op
        {
            get { return new Operation.AdminDeleteRolePermissionV3.AdminDeleteRolePermissionV3Builder(_sdk); }
        }
        public PublicGetRolesV3.PublicGetRolesV3Builder PublicGetRolesV3Op
        {
            get { return new Operation.PublicGetRolesV3.PublicGetRolesV3Builder(_sdk); }
        }
        public PublicGetRoleV3.PublicGetRoleV3Builder PublicGetRoleV3Op
        {
            get { return new Operation.PublicGetRoleV3.PublicGetRoleV3Builder(_sdk); }
        }
        public AdminGetRolesV4.AdminGetRolesV4Builder AdminGetRolesV4Op
        {
            get { return new Operation.AdminGetRolesV4.AdminGetRolesV4Builder(_sdk); }
        }
        public AdminCreateRoleV4.AdminCreateRoleV4Builder AdminCreateRoleV4Op
        {
            get { return new Operation.AdminCreateRoleV4.AdminCreateRoleV4Builder(_sdk); }
        }
        public AdminGetRoleV4.AdminGetRoleV4Builder AdminGetRoleV4Op
        {
            get { return new Operation.AdminGetRoleV4.AdminGetRoleV4Builder(_sdk); }
        }
        public AdminDeleteRoleV4.AdminDeleteRoleV4Builder AdminDeleteRoleV4Op
        {
            get { return new Operation.AdminDeleteRoleV4.AdminDeleteRoleV4Builder(_sdk); }
        }
        public AdminUpdateRoleV4.AdminUpdateRoleV4Builder AdminUpdateRoleV4Op
        {
            get { return new Operation.AdminUpdateRoleV4.AdminUpdateRoleV4Builder(_sdk); }
        }
        public AdminUpdateRolePermissionsV4.AdminUpdateRolePermissionsV4Builder AdminUpdateRolePermissionsV4Op
        {
            get { return new Operation.AdminUpdateRolePermissionsV4.AdminUpdateRolePermissionsV4Builder(_sdk); }
        }
        public AdminAddRolePermissionsV4.AdminAddRolePermissionsV4Builder AdminAddRolePermissionsV4Op
        {
            get { return new Operation.AdminAddRolePermissionsV4.AdminAddRolePermissionsV4Builder(_sdk); }
        }
        public AdminDeleteRolePermissionsV4.AdminDeleteRolePermissionsV4Builder AdminDeleteRolePermissionsV4Op
        {
            get { return new Operation.AdminDeleteRolePermissionsV4.AdminDeleteRolePermissionsV4Builder(_sdk); }
        }
        public AdminListAssignedUsersV4.AdminListAssignedUsersV4Builder AdminListAssignedUsersV4Op
        {
            get { return new Operation.AdminListAssignedUsersV4.AdminListAssignedUsersV4Builder(_sdk); }
        }
        public AdminAssignUserToRoleV4.AdminAssignUserToRoleV4Builder AdminAssignUserToRoleV4Op
        {
            get { return new Operation.AdminAssignUserToRoleV4.AdminAssignUserToRoleV4Builder(_sdk); }
        }
        public AdminRevokeUserFromRoleV4.AdminRevokeUserFromRoleV4Builder AdminRevokeUserFromRoleV4Op
        {
            get { return new Operation.AdminRevokeUserFromRoleV4.AdminRevokeUserFromRoleV4Builder(_sdk); }
        }
        #endregion
        
        #pragma warning disable ab_deprecated_operation
        [Obsolete(DiagnosticId ="ab_deprecated_operation_wrapper")]
        public List<Model.ModelRoleResponseWithManagers>? GetRoles(GetRoles input)
        {
            var response = _sdk.RunRequest(input);

            return input.ParseResponse(
                    response.Code, 
                    response.ContentType,
                    response.Payload);
        }
        #pragma warning restore ab_deprecated_operation
        #pragma warning disable ab_deprecated_operation
        [Obsolete(DiagnosticId ="ab_deprecated_operation_wrapper")]
        public Model.AccountcommonRole? CreateRole(CreateRole input)
        {
            var response = _sdk.RunRequest(input);

            return input.ParseResponse(
                    response.Code, 
                    response.ContentType,
                    response.Payload);
        }
        #pragma warning restore ab_deprecated_operation
        #pragma warning disable ab_deprecated_operation
        [Obsolete(DiagnosticId ="ab_deprecated_operation_wrapper")]
        public Model.ModelRoleResponse? GetRole(GetRole input)
        {
            var response = _sdk.RunRequest(input);

            return input.ParseResponse(
                    response.Code, 
                    response.ContentType,
                    response.Payload);
        }
        #pragma warning restore ab_deprecated_operation
        #pragma warning disable ab_deprecated_operation
        [Obsolete(DiagnosticId ="ab_deprecated_operation_wrapper")]
        public Model.ModelRoleResponse? UpdateRole(UpdateRole input)
        {
            var response = _sdk.RunRequest(input);

            return input.ParseResponse(
                    response.Code, 
                    response.ContentType,
                    response.Payload);
        }
        #pragma warning restore ab_deprecated_operation
        #pragma warning disable ab_deprecated_operation
        [Obsolete(DiagnosticId ="ab_deprecated_operation_wrapper")]
        public void DeleteRole(DeleteRole input) {
            var response = _sdk.RunRequest(input);

            input.ParseResponse(
                    response.Code, 
                    response.ContentType,
                    response.Payload);
        }
        #pragma warning restore ab_deprecated_operation
        #pragma warning disable ab_deprecated_operation
        [Obsolete(DiagnosticId ="ab_deprecated_operation_wrapper")]
        public Model.ModelRoleAdminStatusResponse? GetRoleAdminStatus(GetRoleAdminStatus input)
        {
            var response = _sdk.RunRequest(input);

            return input.ParseResponse(
                    response.Code, 
                    response.ContentType,
                    response.Payload);
        }
        #pragma warning restore ab_deprecated_operation
        #pragma warning disable ab_deprecated_operation
        [Obsolete(DiagnosticId ="ab_deprecated_operation_wrapper")]
        public void SetRoleAsAdmin(SetRoleAsAdmin input) {
            var response = _sdk.RunRequest(input);

            input.ParseResponse(
                    response.Code, 
                    response.ContentType,
                    response.Payload);
        }
        #pragma warning restore ab_deprecated_operation
        #pragma warning disable ab_deprecated_operation
        [Obsolete(DiagnosticId ="ab_deprecated_operation_wrapper")]
        public void RemoveRoleAdmin(RemoveRoleAdmin input) {
            var response = _sdk.RunRequest(input);

            input.ParseResponse(
                    response.Code, 
                    response.ContentType,
                    response.Payload);
        }
        #pragma warning restore ab_deprecated_operation
        #pragma warning disable ab_deprecated_operation
        [Obsolete(DiagnosticId ="ab_deprecated_operation_wrapper")]
        public Model.ModelRoleManagersResponse? GetRoleManagers(GetRoleManagers input)
        {
            var response = _sdk.RunRequest(input);

            return input.ParseResponse(
                    response.Code, 
                    response.ContentType,
                    response.Payload);
        }
        #pragma warning restore ab_deprecated_operation
        #pragma warning disable ab_deprecated_operation
        [Obsolete(DiagnosticId ="ab_deprecated_operation_wrapper")]
        public void AddRoleManagers(AddRoleManagers input) {
            var response = _sdk.RunRequest(input);

            input.ParseResponse(
                    response.Code, 
                    response.ContentType,
                    response.Payload);
        }
        #pragma warning restore ab_deprecated_operation
        #pragma warning disable ab_deprecated_operation
        [Obsolete(DiagnosticId ="ab_deprecated_operation_wrapper")]
        public void RemoveRoleManagers(RemoveRoleManagers input) {
            var response = _sdk.RunRequest(input);

            input.ParseResponse(
                    response.Code, 
                    response.ContentType,
                    response.Payload);
        }
        #pragma warning restore ab_deprecated_operation
        #pragma warning disable ab_deprecated_operation
        [Obsolete(DiagnosticId ="ab_deprecated_operation_wrapper")]
        public Model.ModelRoleMembersResponse? GetRoleMembers(GetRoleMembers input)
        {
            var response = _sdk.RunRequest(input);

            return input.ParseResponse(
                    response.Code, 
                    response.ContentType,
                    response.Payload);
        }
        #pragma warning restore ab_deprecated_operation
        #pragma warning disable ab_deprecated_operation
        [Obsolete(DiagnosticId ="ab_deprecated_operation_wrapper")]
        public void AddRoleMembers(AddRoleMembers input) {
            var response = _sdk.RunRequest(input);

            input.ParseResponse(
                    response.Code, 
                    response.ContentType,
                    response.Payload);
        }
        #pragma warning restore ab_deprecated_operation
        #pragma warning disable ab_deprecated_operation
        [Obsolete(DiagnosticId ="ab_deprecated_operation_wrapper")]
        public void RemoveRoleMembers(RemoveRoleMembers input) {
            var response = _sdk.RunRequest(input);

            input.ParseResponse(
                    response.Code, 
                    response.ContentType,
                    response.Payload);
        }
        #pragma warning restore ab_deprecated_operation
        #pragma warning disable ab_deprecated_operation
        [Obsolete(DiagnosticId ="ab_deprecated_operation_wrapper")]
        public void UpdateRolePermissions(UpdateRolePermissions input) {
            var response = _sdk.RunRequest(input);

            input.ParseResponse(
                    response.Code, 
                    response.ContentType,
                    response.Payload);
        }
        #pragma warning restore ab_deprecated_operation
        #pragma warning disable ab_deprecated_operation
        [Obsolete(DiagnosticId ="ab_deprecated_operation_wrapper")]
        public void AddRolePermission(AddRolePermission input) {
            var response = _sdk.RunRequest(input);

            input.ParseResponse(
                    response.Code, 
                    response.ContentType,
                    response.Payload);
        }
        #pragma warning restore ab_deprecated_operation
        #pragma warning disable ab_deprecated_operation
        [Obsolete(DiagnosticId ="ab_deprecated_operation_wrapper")]
        public void DeleteRolePermission(DeleteRolePermission input) {
            var response = _sdk.RunRequest(input);

            input.ParseResponse(
                    response.Code, 
                    response.ContentType,
                    response.Payload);
        }
        #pragma warning restore ab_deprecated_operation
        public Model.ModelRoleResponseWithManagersAndPaginationV3? AdminGetRolesV3(AdminGetRolesV3 input)
        {
            var response = _sdk.RunRequest(input);

            return input.ParseResponse(
                    response.Code, 
                    response.ContentType,
                    response.Payload);
        }
        public Model.AccountcommonRoleV3? AdminCreateRoleV3(AdminCreateRoleV3 input)
        {
            var response = _sdk.RunRequest(input);

            return input.ParseResponse(
                    response.Code, 
                    response.ContentType,
                    response.Payload);
        }
        public Model.ModelRoleResponseV3? AdminGetRoleV3(AdminGetRoleV3 input)
        {
            var response = _sdk.RunRequest(input);

            return input.ParseResponse(
                    response.Code, 
                    response.ContentType,
                    response.Payload);
        }
        public void AdminDeleteRoleV3(AdminDeleteRoleV3 input) {
            var response = _sdk.RunRequest(input);

            input.ParseResponse(
                    response.Code, 
                    response.ContentType,
                    response.Payload);
        }
        public Model.ModelRoleResponseV3? AdminUpdateRoleV3(AdminUpdateRoleV3 input)
        {
            var response = _sdk.RunRequest(input);

            return input.ParseResponse(
                    response.Code, 
                    response.ContentType,
                    response.Payload);
        }
        public Model.ModelRoleAdminStatusResponseV3? AdminGetRoleAdminStatusV3(AdminGetRoleAdminStatusV3 input)
        {
            var response = _sdk.RunRequest(input);

            return input.ParseResponse(
                    response.Code, 
                    response.ContentType,
                    response.Payload);
        }
        public void AdminUpdateAdminRoleStatusV3(AdminUpdateAdminRoleStatusV3 input) {
            var response = _sdk.RunRequest(input);

            input.ParseResponse(
                    response.Code, 
                    response.ContentType,
                    response.Payload);
        }
        public void AdminRemoveRoleAdminV3(AdminRemoveRoleAdminV3 input) {
            var response = _sdk.RunRequest(input);

            input.ParseResponse(
                    response.Code, 
                    response.ContentType,
                    response.Payload);
        }
        public Model.ModelRoleManagersResponsesV3? AdminGetRoleManagersV3(AdminGetRoleManagersV3 input)
        {
            var response = _sdk.RunRequest(input);

            return input.ParseResponse(
                    response.Code, 
                    response.ContentType,
                    response.Payload);
        }
        public void AdminAddRoleManagersV3(AdminAddRoleManagersV3 input) {
            var response = _sdk.RunRequest(input);

            input.ParseResponse(
                    response.Code, 
                    response.ContentType,
                    response.Payload);
        }
        public void AdminRemoveRoleManagersV3(AdminRemoveRoleManagersV3 input) {
            var response = _sdk.RunRequest(input);

            input.ParseResponse(
                    response.Code, 
                    response.ContentType,
                    response.Payload);
        }
        public Model.ModelRoleMembersResponseV3? AdminGetRoleMembersV3(AdminGetRoleMembersV3 input)
        {
            var response = _sdk.RunRequest(input);

            return input.ParseResponse(
                    response.Code, 
                    response.ContentType,
                    response.Payload);
        }
        public void AdminAddRoleMembersV3(AdminAddRoleMembersV3 input) {
            var response = _sdk.RunRequest(input);

            input.ParseResponse(
                    response.Code, 
                    response.ContentType,
                    response.Payload);
        }
        public void AdminRemoveRoleMembersV3(AdminRemoveRoleMembersV3 input) {
            var response = _sdk.RunRequest(input);

            input.ParseResponse(
                    response.Code, 
                    response.ContentType,
                    response.Payload);
        }
        public void AdminUpdateRolePermissionsV3(AdminUpdateRolePermissionsV3 input) {
            var response = _sdk.RunRequest(input);

            input.ParseResponse(
                    response.Code, 
                    response.ContentType,
                    response.Payload);
        }
        public void AdminAddRolePermissionsV3(AdminAddRolePermissionsV3 input) {
            var response = _sdk.RunRequest(input);

            input.ParseResponse(
                    response.Code, 
                    response.ContentType,
                    response.Payload);
        }
        public void AdminDeleteRolePermissionsV3(AdminDeleteRolePermissionsV3 input) {
            var response = _sdk.RunRequest(input);

            input.ParseResponse(
                    response.Code, 
                    response.ContentType,
                    response.Payload);
        }
        public void AdminDeleteRolePermissionV3(AdminDeleteRolePermissionV3 input) {
            var response = _sdk.RunRequest(input);

            input.ParseResponse(
                    response.Code, 
                    response.ContentType,
                    response.Payload);
        }
        public Model.ModelRoleNamesResponseV3? PublicGetRolesV3(PublicGetRolesV3 input)
        {
            var response = _sdk.RunRequest(input);

            return input.ParseResponse(
                    response.Code, 
                    response.ContentType,
                    response.Payload);
        }
        public Model.ModelRoleResponse? PublicGetRoleV3(PublicGetRoleV3 input)
        {
            var response = _sdk.RunRequest(input);

            return input.ParseResponse(
                    response.Code, 
                    response.ContentType,
                    response.Payload);
        }
        public Model.ModelListRoleV4Response? AdminGetRolesV4(AdminGetRolesV4 input)
        {
            var response = _sdk.RunRequest(input);

            return input.ParseResponse(
                    response.Code, 
                    response.ContentType,
                    response.Payload);
        }
        public Model.ModelRoleV4Response? AdminCreateRoleV4(AdminCreateRoleV4 input)
        {
            var response = _sdk.RunRequest(input);

            return input.ParseResponse(
                    response.Code, 
                    response.ContentType,
                    response.Payload);
        }
        public Model.ModelRoleV4Response? AdminGetRoleV4(AdminGetRoleV4 input)
        {
            var response = _sdk.RunRequest(input);

            return input.ParseResponse(
                    response.Code, 
                    response.ContentType,
                    response.Payload);
        }
        public void AdminDeleteRoleV4(AdminDeleteRoleV4 input) {
            var response = _sdk.RunRequest(input);

            input.ParseResponse(
                    response.Code, 
                    response.ContentType,
                    response.Payload);
        }
        public Model.ModelRoleV4Response? AdminUpdateRoleV4(AdminUpdateRoleV4 input)
        {
            var response = _sdk.RunRequest(input);

            return input.ParseResponse(
                    response.Code, 
                    response.ContentType,
                    response.Payload);
        }
        public Model.ModelRoleV4Response? AdminUpdateRolePermissionsV4(AdminUpdateRolePermissionsV4 input)
        {
            var response = _sdk.RunRequest(input);

            return input.ParseResponse(
                    response.Code, 
                    response.ContentType,
                    response.Payload);
        }
        public Model.ModelRoleV4Response? AdminAddRolePermissionsV4(AdminAddRolePermissionsV4 input)
        {
            var response = _sdk.RunRequest(input);

            return input.ParseResponse(
                    response.Code, 
                    response.ContentType,
                    response.Payload);
        }
        public void AdminDeleteRolePermissionsV4(AdminDeleteRolePermissionsV4 input) {
            var response = _sdk.RunRequest(input);

            input.ParseResponse(
                    response.Code, 
                    response.ContentType,
                    response.Payload);
        }
        public Model.ModelListAssignedUsersV4Response? AdminListAssignedUsersV4(AdminListAssignedUsersV4 input)
        {
            var response = _sdk.RunRequest(input);

            return input.ParseResponse(
                    response.Code, 
                    response.ContentType,
                    response.Payload);
        }
        public Model.ModelAssignedUserV4Response? AdminAssignUserToRoleV4(AdminAssignUserToRoleV4 input)
        {
            var response = _sdk.RunRequest(input);

            return input.ParseResponse(
                    response.Code, 
                    response.ContentType,
                    response.Payload);
        }
        public void AdminRevokeUserFromRoleV4(AdminRevokeUserFromRoleV4 input) {
            var response = _sdk.RunRequest(input);

            input.ParseResponse(
                    response.Code, 
                    response.ContentType,
                    response.Payload);
        }
    }
}