// Copyright (c) 2022-2023 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// This code is generated by tool. DO NOT EDIT.
using System;
using System.Collections.Generic;
using System.Text;
using System.IO;

using AccelByte.Sdk.Core;

using AccelByte.Sdk.Api.Cloudsave.Model;
using AccelByte.Sdk.Api.Cloudsave.Operation;

namespace AccelByte.Sdk.Api.Cloudsave.Wrapper
{
    public class PublicPlayerRecord
    {
        private readonly IAccelByteSdk _sdk;

        public PublicPlayerRecord(IAccelByteSdk sdk)
        {
            _sdk = sdk;
        }

        #region Operation Builders
        public BulkGetPlayerPublicRecordHandlerV1.BulkGetPlayerPublicRecordHandlerV1Builder BulkGetPlayerPublicRecordHandlerV1Op
        {
            get { return new Operation.BulkGetPlayerPublicRecordHandlerV1.BulkGetPlayerPublicRecordHandlerV1Builder(_sdk); }
        }
        public RetrievePlayerRecords.RetrievePlayerRecordsBuilder RetrievePlayerRecordsOp
        {
            get { return new Operation.RetrievePlayerRecords.RetrievePlayerRecordsBuilder(_sdk); }
        }
        public GetPlayerRecordsBulkHandlerV1.GetPlayerRecordsBulkHandlerV1Builder GetPlayerRecordsBulkHandlerV1Op
        {
            get { return new Operation.GetPlayerRecordsBulkHandlerV1.GetPlayerRecordsBulkHandlerV1Builder(_sdk); }
        }
        public PublicDeletePlayerPublicRecordHandlerV1.PublicDeletePlayerPublicRecordHandlerV1Builder PublicDeletePlayerPublicRecordHandlerV1Op
        {
            get { return new Operation.PublicDeletePlayerPublicRecordHandlerV1.PublicDeletePlayerPublicRecordHandlerV1Builder(_sdk); }
        }
        public GetOtherPlayerPublicRecordKeyHandlerV1.GetOtherPlayerPublicRecordKeyHandlerV1Builder GetOtherPlayerPublicRecordKeyHandlerV1Op
        {
            get { return new Operation.GetOtherPlayerPublicRecordKeyHandlerV1.GetOtherPlayerPublicRecordKeyHandlerV1Builder(_sdk); }
        }
        public GetOtherPlayerPublicRecordHandlerV1.GetOtherPlayerPublicRecordHandlerV1Builder GetOtherPlayerPublicRecordHandlerV1Op
        {
            get { return new Operation.GetOtherPlayerPublicRecordHandlerV1.GetOtherPlayerPublicRecordHandlerV1Builder(_sdk); }
        }
        public GetPlayerRecordHandlerV1.GetPlayerRecordHandlerV1Builder GetPlayerRecordHandlerV1Op
        {
            get { return new Operation.GetPlayerRecordHandlerV1.GetPlayerRecordHandlerV1Builder(_sdk); }
        }
        public PutPlayerRecordHandlerV1.PutPlayerRecordHandlerV1Builder PutPlayerRecordHandlerV1Op
        {
            get { return new Operation.PutPlayerRecordHandlerV1.PutPlayerRecordHandlerV1Builder(_sdk); }
        }
        public PostPlayerRecordHandlerV1.PostPlayerRecordHandlerV1Builder PostPlayerRecordHandlerV1Op
        {
            get { return new Operation.PostPlayerRecordHandlerV1.PostPlayerRecordHandlerV1Builder(_sdk); }
        }
        public DeletePlayerRecordHandlerV1.DeletePlayerRecordHandlerV1Builder DeletePlayerRecordHandlerV1Op
        {
            get { return new Operation.DeletePlayerRecordHandlerV1.DeletePlayerRecordHandlerV1Builder(_sdk); }
        }
        public GetPlayerPublicRecordHandlerV1.GetPlayerPublicRecordHandlerV1Builder GetPlayerPublicRecordHandlerV1Op
        {
            get { return new Operation.GetPlayerPublicRecordHandlerV1.GetPlayerPublicRecordHandlerV1Builder(_sdk); }
        }
        public PutPlayerPublicRecordHandlerV1.PutPlayerPublicRecordHandlerV1Builder PutPlayerPublicRecordHandlerV1Op
        {
            get { return new Operation.PutPlayerPublicRecordHandlerV1.PutPlayerPublicRecordHandlerV1Builder(_sdk); }
        }
        public PostPlayerPublicRecordHandlerV1.PostPlayerPublicRecordHandlerV1Builder PostPlayerPublicRecordHandlerV1Op
        {
            get { return new Operation.PostPlayerPublicRecordHandlerV1.PostPlayerPublicRecordHandlerV1Builder(_sdk); }
        }
        #endregion
        
        public Model.ModelsBulkGetPlayerRecordResponse? BulkGetPlayerPublicRecordHandlerV1(BulkGetPlayerPublicRecordHandlerV1 input)
        {
            var response = _sdk.RunRequest(input);

            return input.ParseResponse(
                    response.Code, 
                    response.ContentType,
                    response.Payload);
        }
        public Model.ModelsListPlayerRecordKeysResponse? RetrievePlayerRecords(RetrievePlayerRecords input)
        {
            var response = _sdk.RunRequest(input);

            return input.ParseResponse(
                    response.Code, 
                    response.ContentType,
                    response.Payload);
        }
        public Model.ModelsBulkGetPlayerRecordResponse? GetPlayerRecordsBulkHandlerV1(GetPlayerRecordsBulkHandlerV1 input)
        {
            var response = _sdk.RunRequest(input);

            return input.ParseResponse(
                    response.Code, 
                    response.ContentType,
                    response.Payload);
        }
        public void PublicDeletePlayerPublicRecordHandlerV1(PublicDeletePlayerPublicRecordHandlerV1 input) {
            var response = _sdk.RunRequest(input);

            input.ParseResponse(
                    response.Code, 
                    response.ContentType,
                    response.Payload);
        }
        public Model.ModelsListPlayerRecordKeysResponse? GetOtherPlayerPublicRecordKeyHandlerV1(GetOtherPlayerPublicRecordKeyHandlerV1 input)
        {
            var response = _sdk.RunRequest(input);

            return input.ParseResponse(
                    response.Code, 
                    response.ContentType,
                    response.Payload);
        }
        public Model.ModelsBulkGetPlayerRecordResponse? GetOtherPlayerPublicRecordHandlerV1(GetOtherPlayerPublicRecordHandlerV1 input)
        {
            var response = _sdk.RunRequest(input);

            return input.ParseResponse(
                    response.Code, 
                    response.ContentType,
                    response.Payload);
        }
        public Model.ModelsPlayerRecordResponse? GetPlayerRecordHandlerV1(GetPlayerRecordHandlerV1 input)
        {
            var response = _sdk.RunRequest(input);

            return input.ParseResponse(
                    response.Code, 
                    response.ContentType,
                    response.Payload);
        }
        
        public Model.ModelsPlayerRecordResponse<T1>? GetPlayerRecordHandlerV1<T1>(GetPlayerRecordHandlerV1 input)
        {
            var response = _sdk.RunRequest(input);

            return input.ParseResponse<T1>(
                    response.Code, 
                    response.ContentType,
                    response.Payload);
        }
        public Model.ModelsPlayerRecordResponse? PutPlayerRecordHandlerV1(PutPlayerRecordHandlerV1 input)
        {
            var response = _sdk.RunRequest(input);

            return input.ParseResponse(
                    response.Code, 
                    response.ContentType,
                    response.Payload);
        }
        
        public Model.ModelsPlayerRecordResponse<T1>? PutPlayerRecordHandlerV1<T1>(PutPlayerRecordHandlerV1 input)
        {
            var response = _sdk.RunRequest(input);

            return input.ParseResponse<T1>(
                    response.Code, 
                    response.ContentType,
                    response.Payload);
        }
        public Model.ModelsPlayerRecordResponse? PostPlayerRecordHandlerV1(PostPlayerRecordHandlerV1 input)
        {
            var response = _sdk.RunRequest(input);

            return input.ParseResponse(
                    response.Code, 
                    response.ContentType,
                    response.Payload);
        }
        
        public Model.ModelsPlayerRecordResponse<T1>? PostPlayerRecordHandlerV1<T1>(PostPlayerRecordHandlerV1 input)
        {
            var response = _sdk.RunRequest(input);

            return input.ParseResponse<T1>(
                    response.Code, 
                    response.ContentType,
                    response.Payload);
        }
        public void DeletePlayerRecordHandlerV1(DeletePlayerRecordHandlerV1 input) {
            var response = _sdk.RunRequest(input);

            input.ParseResponse(
                    response.Code, 
                    response.ContentType,
                    response.Payload);
        }
        public Model.ModelsPlayerRecordResponse? GetPlayerPublicRecordHandlerV1(GetPlayerPublicRecordHandlerV1 input)
        {
            var response = _sdk.RunRequest(input);

            return input.ParseResponse(
                    response.Code, 
                    response.ContentType,
                    response.Payload);
        }
        
        public Model.ModelsPlayerRecordResponse<T1>? GetPlayerPublicRecordHandlerV1<T1>(GetPlayerPublicRecordHandlerV1 input)
        {
            var response = _sdk.RunRequest(input);

            return input.ParseResponse<T1>(
                    response.Code, 
                    response.ContentType,
                    response.Payload);
        }
        public Model.ModelsPlayerRecordResponse? PutPlayerPublicRecordHandlerV1(PutPlayerPublicRecordHandlerV1 input)
        {
            var response = _sdk.RunRequest(input);

            return input.ParseResponse(
                    response.Code, 
                    response.ContentType,
                    response.Payload);
        }
        
        public Model.ModelsPlayerRecordResponse<T1>? PutPlayerPublicRecordHandlerV1<T1>(PutPlayerPublicRecordHandlerV1 input)
        {
            var response = _sdk.RunRequest(input);

            return input.ParseResponse<T1>(
                    response.Code, 
                    response.ContentType,
                    response.Payload);
        }
        public Model.ModelsPlayerRecordResponse? PostPlayerPublicRecordHandlerV1(PostPlayerPublicRecordHandlerV1 input)
        {
            var response = _sdk.RunRequest(input);

            return input.ParseResponse(
                    response.Code, 
                    response.ContentType,
                    response.Payload);
        }
        
        public Model.ModelsPlayerRecordResponse<T1>? PostPlayerPublicRecordHandlerV1<T1>(PostPlayerPublicRecordHandlerV1 input)
        {
            var response = _sdk.RunRequest(input);

            return input.ParseResponse<T1>(
                    response.Code, 
                    response.ContentType,
                    response.Payload);
        }
    }
}