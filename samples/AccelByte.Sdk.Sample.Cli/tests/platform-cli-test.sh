#!/usr/bin/env bash

# Copyright (c) 2021 AccelByte Inc. All Rights Reserved.
# This is licensed software from AccelByte Inc, for limitations
# and restrictions contact your company contract manager.

# This code is generated by tool. DO NOT EDIT.

# Meta:
# - random seed: 
# - template file: 

# Instructions:
# - Run the Justice SDK Mock Server first before running this script.

export AB_BASE_URL="http://127.0.0.1:8080"
export AB_CLIENT_ID="admin"
export AB_CLIENT_SECRET="admin"
export AB_NAMESPACE="test"
export AB_APP_NAME="UnitTest"

EXIT_CODE=0

eval_tap() {
  if [ $1 -eq 0 ]; then
    echo "ok $2 - $3"
  else
    EXIT_CODE=1
    echo "not ok $2 - $3"
    sed 's/^/# /g' $4
  fi
  rm -f $4
}

CLI_EXE="AccelByte.Sdk.Sample.Cli"
CLI_TOKEN_FILE="$(dirname "$(which $CLI_EXE)")/token.json"
TEMP_JSON_INPUT="input_json.json"
TEMP_FILE_UPLOAD="file_upload.bin"

echo "TAP version 13"
echo "1..499"

#- 1 Login
$CLI_EXE --op login --lt user --user user --pass user > test.out 2>&1
eval_tap $? 1 'Login' test.out

if [ $EXIT_CODE -ne 0 ]; then
  echo "Bail out! Login failed."
  exit $EXIT_CODE
fi

# echo "foo" > "$CLI_TOKEN_FILE"

#- 2 ListFulfillmentScripts
$CLI_EXE \
    --sn platform \
    --op ListFulfillmentScripts \
    > test.out 2>&1
eval_tap $? 2 'ListFulfillmentScripts' test.out

#- 3 GetFulfillmentScript
$CLI_EXE \
    --sn platform \
    --op GetFulfillmentScript \
    --id 'hJeqai3L' \
    > test.out 2>&1
eval_tap $? 3 'GetFulfillmentScript' test.out

#- 4 CreateFulfillmentScript
# body param: body
echo '{"grantDays": "fQeo4nDa"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateFulfillmentScript \
    --id 'k75Jb7hC' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 4 'CreateFulfillmentScript' test.out

#- 5 DeleteFulfillmentScript
$CLI_EXE \
    --sn platform \
    --op DeleteFulfillmentScript \
    --id 'mQDPHgjh' \
    > test.out 2>&1
eval_tap $? 5 'DeleteFulfillmentScript' test.out

#- 6 UpdateFulfillmentScript
# body param: body
echo '{"grantDays": "adfJCyjS"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateFulfillmentScript \
    --id 'dhnVh8zn' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 6 'UpdateFulfillmentScript' test.out

#- 7 ListItemTypeConfigs
$CLI_EXE \
    --sn platform \
    --op ListItemTypeConfigs \
    > test.out 2>&1
eval_tap $? 7 'ListItemTypeConfigs' test.out

#- 8 CreateItemTypeConfig
# body param: body
echo '{"clazz": "f437aJW6", "dryRun": true, "fulfillmentUrl": "VEsgqgs6", "itemType": "INGAMEITEM", "purchaseConditionUrl": "Q7JHbG7J"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateItemTypeConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 8 'CreateItemTypeConfig' test.out

#- 9 SearchItemTypeConfig
$CLI_EXE \
    --sn platform \
    --op SearchItemTypeConfig \
    --clazz 'BfDWlLuM' \
    --itemType 'EXTENSION' \
    > test.out 2>&1
eval_tap $? 9 'SearchItemTypeConfig' test.out

#- 10 GetItemTypeConfig
$CLI_EXE \
    --sn platform \
    --op GetItemTypeConfig \
    --id '7O0PKSpU' \
    > test.out 2>&1
eval_tap $? 10 'GetItemTypeConfig' test.out

#- 11 UpdateItemTypeConfig
# body param: body
echo '{"clazz": "7n7CURau", "dryRun": true, "fulfillmentUrl": "rRQOOTu5", "purchaseConditionUrl": "5mMsEN4a"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateItemTypeConfig \
    --id 'AOGwqeoz' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 11 'UpdateItemTypeConfig' test.out

#- 12 DeleteItemTypeConfig
$CLI_EXE \
    --sn platform \
    --op DeleteItemTypeConfig \
    --id 'WatDPRCb' \
    > test.out 2>&1
eval_tap $? 12 'DeleteItemTypeConfig' test.out

#- 13 QueryCampaigns
$CLI_EXE \
    --sn platform \
    --op QueryCampaigns \
    --namespace $AB_NAMESPACE \
    --limit '22' \
    --name '9ga9YfRx' \
    --offset '19' \
    --tag 'bMhtOePx' \
    > test.out 2>&1
eval_tap $? 13 'QueryCampaigns' test.out

#- 14 CreateCampaign
# body param: body
echo '{"description": "t7D3ZYyg", "discountConfig": {"categories": [{"categoryPath": "mU99uaDz", "includeSubCategories": false}, {"categoryPath": "qqpx1Pyp", "includeSubCategories": false}, {"categoryPath": "7jQKkAjm", "includeSubCategories": false}], "currencyCode": "v2mzZDgE", "currencyNamespace": "ddL7GZ7h", "discountAmount": 62, "discountPercentage": 92, "discountType": "AMOUNT", "items": [{"itemId": "CzSNYv6z", "itemName": "uLMKj4Ur"}, {"itemId": "zTvOe3yw", "itemName": "hdme3Ipr"}, {"itemId": "ToQ4dYFl", "itemName": "HUZUMAOd"}], "restrictType": "NONE", "stackable": true}, "items": [{"extraSubscriptionDays": 24, "itemId": "V0ZEWnik", "itemName": "jNcqDQ0i", "quantity": 0}, {"extraSubscriptionDays": 0, "itemId": "wErLvOTn", "itemName": "acLCU0C1", "quantity": 37}, {"extraSubscriptionDays": 59, "itemId": "ll16MFNC", "itemName": "9ot3r0Ky", "quantity": 3}], "maxRedeemCountPerCampaignPerUser": 70, "maxRedeemCountPerCode": 77, "maxRedeemCountPerCodePerUser": 8, "maxSaleCount": 90, "name": "hJeCQKEq", "redeemEnd": "1987-04-21T00:00:00Z", "redeemStart": "1992-10-22T00:00:00Z", "redeemType": "DISCOUNT", "status": "INACTIVE", "tags": ["jFN2eTbi", "HqEe19TH", "Ysh3a3FQ"], "type": "REDEMPTION"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCampaign \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 14 'CreateCampaign' test.out

#- 15 GetCampaign
$CLI_EXE \
    --sn platform \
    --op GetCampaign \
    --campaignId 'F0KBQcKt' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 15 'GetCampaign' test.out

#- 16 UpdateCampaign
# body param: body
echo '{"description": "bomX6PNA", "discountConfig": {"categories": [{"categoryPath": "i5hUWwVz", "includeSubCategories": false}, {"categoryPath": "4XrMZgZG", "includeSubCategories": true}, {"categoryPath": "K0pNJcuV", "includeSubCategories": false}], "currencyCode": "TiP73OMs", "currencyNamespace": "VSeZs667", "discountAmount": 39, "discountPercentage": 61, "discountType": "PERCENTAGE", "items": [{"itemId": "v41S8712", "itemName": "IgHwqIjO"}, {"itemId": "TAhKaxzN", "itemName": "ojOq4OJq"}, {"itemId": "Xb5fMZrE", "itemName": "9XwHHUay"}], "restrictType": "NONE", "stackable": true}, "items": [{"extraSubscriptionDays": 82, "itemId": "x0dIC05l", "itemName": "sq4gklQI", "quantity": 35}, {"extraSubscriptionDays": 22, "itemId": "iopxU7Ua", "itemName": "6nGtBVuq", "quantity": 20}, {"extraSubscriptionDays": 67, "itemId": "LL8DV3Qq", "itemName": "BkL9xK5V", "quantity": 45}], "maxRedeemCountPerCampaignPerUser": 59, "maxRedeemCountPerCode": 30, "maxRedeemCountPerCodePerUser": 17, "maxSaleCount": 91, "name": "rpZ5jGNN", "redeemEnd": "1991-06-03T00:00:00Z", "redeemStart": "1972-06-26T00:00:00Z", "redeemType": "DISCOUNT", "status": "INACTIVE", "tags": ["mw7AcT8Y", "mj60nQNE", "R5col9qy"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCampaign \
    --campaignId '79VVFLOm' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 16 'UpdateCampaign' test.out

#- 17 RenameBatch
# body param: body
echo '{"newName": "h3R556Mq", "oldName": "uuSR8Rwh"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RenameBatch \
    --campaignId 'Iw0RlY8Z' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 17 'RenameBatch' test.out

#- 18 QueryCampaignBatchNames
$CLI_EXE \
    --sn platform \
    --op QueryCampaignBatchNames \
    --campaignId 'Dn1jqfbR' \
    --namespace $AB_NAMESPACE \
    --batchName '41WrPMMu' \
    --limit '95' \
    > test.out 2>&1
eval_tap $? 18 'QueryCampaignBatchNames' test.out

#- 19 GetCampaignDynamic
$CLI_EXE \
    --sn platform \
    --op GetCampaignDynamic \
    --campaignId 'uk4dc8An' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 19 'GetCampaignDynamic' test.out

#- 20 GetCatalogConfig
$CLI_EXE \
    --sn platform \
    --op GetCatalogConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 20 'GetCatalogConfig' test.out

#- 21 UpdateCatalogConfig
# body param: body
echo '{"enableInventoryCheck": true, "itemDeletionCheckConfig": ["DLC", "CAMPAIGN"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCatalogConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 21 'UpdateCatalogConfig' test.out

#- 22 GetLootBoxPluginConfig
$CLI_EXE \
    --sn platform \
    --op GetLootBoxPluginConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 22 'GetLootBoxPluginConfig' test.out

#- 23 UpdateLootBoxPluginConfig
# body param: body
echo '{"appConfig": {"appName": "bWqB2Wbx"}, "customConfig": {"connectionType": "TLS", "grpcServerAddress": "dL9cZFSB"}, "extendType": "CUSTOM"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateLootBoxPluginConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 23 'UpdateLootBoxPluginConfig' test.out

#- 24 DeleteLootBoxPluginConfig
$CLI_EXE \
    --sn platform \
    --op DeleteLootBoxPluginConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 24 'DeleteLootBoxPluginConfig' test.out

#- 25 UplodLootBoxPluginConfigCert
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UplodLootBoxPluginConfigCert \
    --namespace $AB_NAMESPACE \
    --upload file $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 25 'UplodLootBoxPluginConfigCert' test.out

#- 26 GetLootBoxGrpcInfo
$CLI_EXE \
    --sn platform \
    --op GetLootBoxGrpcInfo \
    --namespace $AB_NAMESPACE \
    --force 'false' \
    > test.out 2>&1
eval_tap $? 26 'GetLootBoxGrpcInfo' test.out

#- 27 GetSectionPluginConfig
$CLI_EXE \
    --sn platform \
    --op GetSectionPluginConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 27 'GetSectionPluginConfig' test.out

#- 28 UpdateSectionPluginConfig
# body param: body
echo '{"appConfig": {"appName": "AABtt6rv"}, "customConfig": {"connectionType": "INSECURE", "grpcServerAddress": "7KWOvmDw"}, "extendType": "APP"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateSectionPluginConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 28 'UpdateSectionPluginConfig' test.out

#- 29 DeleteSectionPluginConfig
$CLI_EXE \
    --sn platform \
    --op DeleteSectionPluginConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 29 'DeleteSectionPluginConfig' test.out

#- 30 UploadSectionPluginConfigCert
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UploadSectionPluginConfigCert \
    --namespace $AB_NAMESPACE \
    --upload file $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 30 'UploadSectionPluginConfigCert' test.out

#- 31 GetRootCategories
$CLI_EXE \
    --sn platform \
    --op GetRootCategories \
    --namespace $AB_NAMESPACE \
    --storeId 'kdEpT9wY' \
    > test.out 2>&1
eval_tap $? 31 'GetRootCategories' test.out

#- 32 CreateCategory
# body param: body
echo '{"categoryPath": "bR4kSMgS", "localizationDisplayNames": {"Nksu9zPC": "esgcdxkD", "CkZ2JtWn": "L0ylq3PX", "KTnMDLBD": "LNnVQ9Fj"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCategory \
    --namespace $AB_NAMESPACE \
    --storeId 'A4U63OIE' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 32 'CreateCategory' test.out

#- 33 ListCategoriesBasic
$CLI_EXE \
    --sn platform \
    --op ListCategoriesBasic \
    --namespace $AB_NAMESPACE \
    --storeId 'rGMSkjIw' \
    > test.out 2>&1
eval_tap $? 33 'ListCategoriesBasic' test.out

#- 34 GetCategory
$CLI_EXE \
    --sn platform \
    --op GetCategory \
    --categoryPath 'adXqN6wF' \
    --namespace $AB_NAMESPACE \
    --storeId 'ukXRyCpX' \
    > test.out 2>&1
eval_tap $? 34 'GetCategory' test.out

#- 35 UpdateCategory
# body param: body
echo '{"localizationDisplayNames": {"JUhKUL2P": "gOKGYy59", "5GXxANyv": "QgCd1Cce", "fiNvY7nP": "FigwzxOU"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCategory \
    --categoryPath 'memNGlV1' \
    --namespace $AB_NAMESPACE \
    --storeId 'LOD9AvHf' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 35 'UpdateCategory' test.out

#- 36 DeleteCategory
$CLI_EXE \
    --sn platform \
    --op DeleteCategory \
    --categoryPath 'Cmtxg3gN' \
    --namespace $AB_NAMESPACE \
    --storeId '3utokW9x' \
    > test.out 2>&1
eval_tap $? 36 'DeleteCategory' test.out

#- 37 GetChildCategories
$CLI_EXE \
    --sn platform \
    --op GetChildCategories \
    --categoryPath 'OAa62lLz' \
    --namespace $AB_NAMESPACE \
    --storeId 'kwrXbd26' \
    > test.out 2>&1
eval_tap $? 37 'GetChildCategories' test.out

#- 38 GetDescendantCategories
$CLI_EXE \
    --sn platform \
    --op GetDescendantCategories \
    --categoryPath 'me7bdc3K' \
    --namespace $AB_NAMESPACE \
    --storeId 'GsOB3rIQ' \
    > test.out 2>&1
eval_tap $? 38 'GetDescendantCategories' test.out

#- 39 QueryCodes
$CLI_EXE \
    --sn platform \
    --op QueryCodes \
    --campaignId '8aj7QSRT' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --batchName '3Gbnk8H9' \
    --batchNo '[76, 36, 53]' \
    --code 'vf1RJP0s' \
    --limit '16' \
    --offset '66' \
    --withBatchName 'false' \
    > test.out 2>&1
eval_tap $? 39 'QueryCodes' test.out

#- 40 CreateCodes
# body param: body
echo '{"batchName": "zLUtmw1N", "codeValue": "soAFfLH4", "quantity": 92}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCodes \
    --campaignId 'bFSwMD02' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 40 'CreateCodes' test.out

#- 41 Download
$CLI_EXE \
    --sn platform \
    --op Download \
    --campaignId 'uIXwLceE' \
    --namespace $AB_NAMESPACE \
    --batchName 'u9ODbjWR' \
    --batchNo '[92, 53, 85]' \
    --withBatchName 'true' \
    > test.out 2>&1
eval_tap $? 41 'Download' test.out

#- 42 BulkDisableCodes
$CLI_EXE \
    --sn platform \
    --op BulkDisableCodes \
    --campaignId 's1Vs3CuG' \
    --namespace $AB_NAMESPACE \
    --batchName 'yaPbSvn6' \
    --batchNo '[56, 32, 60]' \
    > test.out 2>&1
eval_tap $? 42 'BulkDisableCodes' test.out

#- 43 BulkEnableCodes
$CLI_EXE \
    --sn platform \
    --op BulkEnableCodes \
    --campaignId 'vMQI9r1N' \
    --namespace $AB_NAMESPACE \
    --batchName '4wGYoCsg' \
    --batchNo '[92, 82, 46]' \
    > test.out 2>&1
eval_tap $? 43 'BulkEnableCodes' test.out

#- 44 QueryRedeemHistory
$CLI_EXE \
    --sn platform \
    --op QueryRedeemHistory \
    --campaignId 'FtnekXss' \
    --namespace $AB_NAMESPACE \
    --code 'VWdeIyZy' \
    --limit '59' \
    --offset '4' \
    --userId 'h5113TXS' \
    > test.out 2>&1
eval_tap $? 44 'QueryRedeemHistory' test.out

#- 45 GetCode
$CLI_EXE \
    --sn platform \
    --op GetCode \
    --code 'MCQ3lkfE' \
    --namespace $AB_NAMESPACE \
    --redeemable 'true' \
    --withBatchName 'true' \
    > test.out 2>&1
eval_tap $? 45 'GetCode' test.out

#- 46 DisableCode
$CLI_EXE \
    --sn platform \
    --op DisableCode \
    --code 'tWaLgOgL' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 46 'DisableCode' test.out

#- 47 EnableCode
$CLI_EXE \
    --sn platform \
    --op EnableCode \
    --code 'B3cODDwr' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 47 'EnableCode' test.out

#- 48 GetServicePluginConfig
eval_tap 0 48 'GetServicePluginConfig # SKIP deprecated' test.out

#- 49 UpdateServicePluginConfig
eval_tap 0 49 'UpdateServicePluginConfig # SKIP deprecated' test.out

#- 50 DeleteServicePluginConfig
eval_tap 0 50 'DeleteServicePluginConfig # SKIP deprecated' test.out

#- 51 ListCurrencies
$CLI_EXE \
    --sn platform \
    --op ListCurrencies \
    --namespace $AB_NAMESPACE \
    --currencyType 'VIRTUAL' \
    > test.out 2>&1
eval_tap $? 51 'ListCurrencies' test.out

#- 52 CreateCurrency
# body param: body
echo '{"currencyCode": "i9ZWWJPc", "currencySymbol": "dK6YDBYe", "currencyType": "REAL", "decimals": 61, "localizationDescriptions": {"3NUzKL5L": "XA9atL7W", "fZqoEItC": "8myQoTLD", "u4NgQ6rT": "TZkjN666"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCurrency \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 52 'CreateCurrency' test.out

#- 53 UpdateCurrency
# body param: body
echo '{"localizationDescriptions": {"UcrFm7U6": "Dwi4RwNb", "g29qJkB3": "vIIdZJl1", "dAjg7RaP": "XjgNTW1l"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCurrency \
    --currencyCode 'lUcDzSa4' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 53 'UpdateCurrency' test.out

#- 54 DeleteCurrency
$CLI_EXE \
    --sn platform \
    --op DeleteCurrency \
    --currencyCode 'jEAVKmZl' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 54 'DeleteCurrency' test.out

#- 55 GetCurrencyConfig
$CLI_EXE \
    --sn platform \
    --op GetCurrencyConfig \
    --currencyCode 'azpUR9oj' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 55 'GetCurrencyConfig' test.out

#- 56 GetCurrencySummary
$CLI_EXE \
    --sn platform \
    --op GetCurrencySummary \
    --currencyCode '6XNYGLhh' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 56 'GetCurrencySummary' test.out

#- 57 GetDLCItemConfigHistory
$CLI_EXE \
    --sn platform \
    --op GetDLCItemConfigHistory \
    --namespace $AB_NAMESPACE \
    --dlcId '2tt1jHZe' \
    > test.out 2>&1
eval_tap $? 57 'GetDLCItemConfigHistory' test.out

#- 58 RestoreDLCItemConfigHistory
$CLI_EXE \
    --sn platform \
    --op RestoreDLCItemConfigHistory \
    --id 'u2k1h86n' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 58 'RestoreDLCItemConfigHistory' test.out

#- 59 GetDLCItemConfig
$CLI_EXE \
    --sn platform \
    --op GetDLCItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 59 'GetDLCItemConfig' test.out

#- 60 UpdateDLCItemConfig
# body param: body
echo '{"data": [{"autoUpdate": true, "id": "Vdp4Mh7M", "rewards": [{"currency": {"currencyCode": "wbhkgj0c", "namespace": "FTaKbxo8"}, "item": {"itemId": "Km3lrAKY", "itemName": "pPJW5Z9T", "itemSku": "1juJkuk2", "itemType": "nWn9HJtU"}, "quantity": 32, "type": "ITEM"}, {"currency": {"currencyCode": "Rm0q6BzH", "namespace": "Ol5uXSFF"}, "item": {"itemId": "soWvhYqh", "itemName": "uwf3s2tm", "itemSku": "ZK72URSo", "itemType": "JUPollsK"}, "quantity": 64, "type": "CURRENCY"}, {"currency": {"currencyCode": "sh4YpHXk", "namespace": "GEVEOb6Q"}, "item": {"itemId": "ghO0uFau", "itemName": "ZOHFBaJG", "itemSku": "5TXJb1FW", "itemType": "2vAWWI5V"}, "quantity": 4, "type": "ITEM"}], "rvn": 40}, {"autoUpdate": false, "id": "Sq2dNW34", "rewards": [{"currency": {"currencyCode": "EHQRPIo4", "namespace": "mlMPW66X"}, "item": {"itemId": "i4i8pPof", "itemName": "2kKnWO3f", "itemSku": "Z35YJq9Q", "itemType": "Mx9zaHGf"}, "quantity": 45, "type": "CURRENCY"}, {"currency": {"currencyCode": "nZI5A2LM", "namespace": "e5e1R12y"}, "item": {"itemId": "ehH6MsAP", "itemName": "mKk7rEjS", "itemSku": "34fe864L", "itemType": "1TaSocpc"}, "quantity": 75, "type": "CURRENCY"}, {"currency": {"currencyCode": "grrRceyt", "namespace": "J5TSY94m"}, "item": {"itemId": "lju1LPN6", "itemName": "KXlt2MNJ", "itemSku": "85MUUPIr", "itemType": "c7AlXG9l"}, "quantity": 92, "type": "ITEM"}], "rvn": 83}, {"autoUpdate": true, "id": "eVlteksX", "rewards": [{"currency": {"currencyCode": "slgqKh99", "namespace": "qOkp3rW6"}, "item": {"itemId": "KDA0nIk3", "itemName": "bD3XPXGA", "itemSku": "1GHgMKDp", "itemType": "uTUlgtIE"}, "quantity": 87, "type": "CURRENCY"}, {"currency": {"currencyCode": "UBSoqLib", "namespace": "gTbr56UK"}, "item": {"itemId": "dnDlqJ7j", "itemName": "3LY3Ka5K", "itemSku": "UTylHahP", "itemType": "Hg0Hvjyi"}, "quantity": 25, "type": "CURRENCY"}, {"currency": {"currencyCode": "Ae1NVc6q", "namespace": "u8zAki8D"}, "item": {"itemId": "ljGAAD1I", "itemName": "u5jk11U5", "itemSku": "UbkXTupC", "itemType": "ZJNKzIQn"}, "quantity": 28, "type": "CURRENCY"}], "rvn": 78}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateDLCItemConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 60 'UpdateDLCItemConfig' test.out

#- 61 DeleteDLCItemConfig
$CLI_EXE \
    --sn platform \
    --op DeleteDLCItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 61 'DeleteDLCItemConfig' test.out

#- 62 GetPlatformDLCConfig
$CLI_EXE \
    --sn platform \
    --op GetPlatformDLCConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 62 'GetPlatformDLCConfig' test.out

#- 63 UpdatePlatformDLCConfig
# body param: body
echo '{"data": [{"platform": "OCULUS", "platformDlcIdMap": {"ZlwkWdFy": "iIDnpXTs", "q4GJFGGT": "8LyOEp4q", "ZbqfNHWI": "X7OkqJmJ"}}, {"platform": "EPICGAMES", "platformDlcIdMap": {"t1A1XuKL": "THW7VzuF", "ZFEkRgDi": "BhmQ4tBN", "I8Gg16Oq": "fYcl1YSA"}}, {"platform": "PSN", "platformDlcIdMap": {"GlNBjHz8": "Xdzv9lDi", "kUCnsAAu": "waMDpvw0", "wiap3IdG": "loAAKnKI"}}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePlatformDLCConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 63 'UpdatePlatformDLCConfig' test.out

#- 64 DeletePlatformDLCConfig
$CLI_EXE \
    --sn platform \
    --op DeletePlatformDLCConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 64 'DeletePlatformDLCConfig' test.out

#- 65 QueryEntitlements1
$CLI_EXE \
    --sn platform \
    --op QueryEntitlements1 \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --appType 'SOFTWARE' \
    --entitlementClazz 'APP' \
    --entitlementName 'ikZQJnnD' \
    --itemId '["eZQplrRp", "gX5Z1g4V", "1pLIkUVL"]' \
    --limit '0' \
    --offset '89' \
    --origin 'Oculus' \
    --userId 'P60WISty' \
    > test.out 2>&1
eval_tap $? 65 'QueryEntitlements1' test.out

#- 66 QueryEntitlements
$CLI_EXE \
    --sn platform \
    --op QueryEntitlements \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --itemIds '["yYFTG1wK", "dctgr1ct", "KnDix4eB"]' \
    --limit '79' \
    --offset '80' \
    > test.out 2>&1
eval_tap $? 66 'QueryEntitlements' test.out

#- 67 EnableEntitlementOriginFeature
$CLI_EXE \
    --sn platform \
    --op EnableEntitlementOriginFeature \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 67 'EnableEntitlementOriginFeature' test.out

#- 68 GetEntitlementConfigInfo
$CLI_EXE \
    --sn platform \
    --op GetEntitlementConfigInfo \
    --namespace $AB_NAMESPACE \
    --withoutCache 'false' \
    > test.out 2>&1
eval_tap $? 68 'GetEntitlementConfigInfo' test.out

#- 69 GrantEntitlements
# body param: body
echo '{"entitlementGrantList": [{"collectionId": "EHMZsD5P", "endDate": "1973-01-10T00:00:00Z", "grantedCode": "0tnOVSvK", "itemId": "S3t26wXv", "itemNamespace": "twbcZ8tT", "language": "gmD_029", "metadata": {"IY3HT4Kk": {}, "Wx9oBusu": {}, "fhxKrdmZ": {}}, "origin": "System", "quantity": 66, "region": "ziBaWCg7", "source": "ACHIEVEMENT", "startDate": "1977-08-14T00:00:00Z", "storeId": "mK37IEqZ"}, {"collectionId": "iby0SQwk", "endDate": "1975-08-08T00:00:00Z", "grantedCode": "lH29n9sZ", "itemId": "dQvEHkv4", "itemNamespace": "ydYozKTN", "language": "NKkC_mkAH_hh", "metadata": {"tvFGh73k": {}, "SnZdOZMK": {}, "aCGoMyDb": {}}, "origin": "Oculus", "quantity": 68, "region": "fCiPhr3K", "source": "GIFT", "startDate": "1983-03-29T00:00:00Z", "storeId": "FGUatd3x"}, {"collectionId": "os4XR5F8", "endDate": "1985-04-15T00:00:00Z", "grantedCode": "zTSJXZet", "itemId": "Ov31RMe1", "itemNamespace": "ilPBjHJo", "language": "RDH-VFIj", "metadata": {"33J09pru": {}, "QbGikJ9q": {}, "ibicetSO": {}}, "origin": "Twitch", "quantity": 4, "region": "vBA6D4Yl", "source": "REDEEM_CODE", "startDate": "1981-11-09T00:00:00Z", "storeId": "2NOQb4xb"}], "userIds": ["DsS5zmU0", "sgwCU4X7", "PMdusP4K"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op GrantEntitlements \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 69 'GrantEntitlements' test.out

#- 70 RevokeEntitlements
# body param: body
echo '["FlIozGYd", "zZ6lgHQK", "lYJgq0wX"]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RevokeEntitlements \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 70 'RevokeEntitlements' test.out

#- 71 GetEntitlement
$CLI_EXE \
    --sn platform \
    --op GetEntitlement \
    --entitlementId 'MPr0MuZ5' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 71 'GetEntitlement' test.out

#- 72 QueryFulfillmentHistories
$CLI_EXE \
    --sn platform \
    --op QueryFulfillmentHistories \
    --namespace $AB_NAMESPACE \
    --limit '28' \
    --offset '1' \
    --status 'SUCCESS' \
    --userId 'h0grSvE4' \
    > test.out 2>&1
eval_tap $? 72 'QueryFulfillmentHistories' test.out

#- 73 QueryIAPClawbackHistory
$CLI_EXE \
    --sn platform \
    --op QueryIAPClawbackHistory \
    --namespace $AB_NAMESPACE \
    --endTime 'gN6GZpjp' \
    --eventType 'CHARGEBACK' \
    --externalOrderId 'Qb4Nkeuq' \
    --limit '61' \
    --offset '73' \
    --startTime 'rhXUjgQt' \
    --status 'FAIL' \
    --userId '9g1bJSvI' \
    > test.out 2>&1
eval_tap $? 73 'QueryIAPClawbackHistory' test.out

#- 74 MockPlayStationStreamEvent
# body param: body
echo '{"body": {"account": "Foj4aRx9", "additionalData": {"entitlement": [{"clientTransaction": [{"amountConsumed": 40, "clientTransactionId": "Yx29XL2p"}, {"amountConsumed": 40, "clientTransactionId": "XuiOg3hg"}, {"amountConsumed": 96, "clientTransactionId": "v9mg1EGW"}], "entitlementId": "alZrqxVE", "usageCount": 98}, {"clientTransaction": [{"amountConsumed": 86, "clientTransactionId": "MwjDhNue"}, {"amountConsumed": 82, "clientTransactionId": "O8KZy82F"}, {"amountConsumed": 20, "clientTransactionId": "4KnsdkW4"}], "entitlementId": "rlxiTtzM", "usageCount": 91}, {"clientTransaction": [{"amountConsumed": 3, "clientTransactionId": "i0p7TeJi"}, {"amountConsumed": 0, "clientTransactionId": "Hz5Ef7Le"}, {"amountConsumed": 98, "clientTransactionId": "cNDr4FW4"}], "entitlementId": "W5PidC5F", "usageCount": 9}], "purpose": "ifzCUzq1"}, "originalTitleName": "uNpcnzcr", "paymentProductSKU": "JwvCEaWL", "purchaseDate": "rVAE6qCq", "sourceOrderItemId": "WIcfczD2", "titleName": "SR4kx4zk"}, "eventDomain": "dmfUE0Hp", "eventSource": "dqmcknW4", "eventType": "orqXr1ws", "eventVersion": 13, "id": "5U8KTG5j", "timestamp": "7teVkRwv"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op MockPlayStationStreamEvent \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 74 'MockPlayStationStreamEvent' test.out

#- 75 MockXblClawbackEvent
# body param: body
echo '{"data": {"eventDate": "mAZFpGae", "eventState": "C2SrIOox", "lineItemId": "EycvcuCP", "orderId": "pegJd9Fi", "productId": "hf4o6Lqc", "productType": "E7f0YEW7", "purchasedDate": "TfQdJ5FF", "sandboxId": "aOxv2sCw", "skuId": "fFsvECBu", "subscriptionData": {"consumedDurationInDays": 32, "dateTime": "rF05ZrcB", "durationInDays": 17, "recurrenceId": "jKmVyq5p"}}, "datacontenttype": "2gUEmkOE", "id": "v2iDmqrJ", "source": "k5usTbH0", "specVersion": "tWyYXRvj", "subject": "W03ILV3m", "time": "DaYr0DtA", "traceparent": "qIzKHSR3", "type": "ACSa2Rxj"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op MockXblClawbackEvent \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 75 'MockXblClawbackEvent' test.out

#- 76 GetAppleIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetAppleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 76 'GetAppleIAPConfig' test.out

#- 77 UpdateAppleIAPConfig
# body param: body
echo '{"appAppleId": 34, "bundleId": "IUFN5vcG", "issuerId": "LieswuDD", "keyId": "hI3ncpJA", "password": "CpR6SnCk", "version": "V1"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateAppleIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 77 'UpdateAppleIAPConfig' test.out

#- 78 DeleteAppleIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteAppleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 78 'DeleteAppleIAPConfig' test.out

#- 79 UpdateAppleP8File
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UpdateAppleP8File \
    --namespace $AB_NAMESPACE \
    --upload file $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 79 'UpdateAppleP8File' test.out

#- 80 GetEpicGamesIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetEpicGamesIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 80 'GetEpicGamesIAPConfig' test.out

#- 81 UpdateEpicGamesIAPConfig
# body param: body
echo '{"sandboxId": "oORUNZ4b"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateEpicGamesIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 81 'UpdateEpicGamesIAPConfig' test.out

#- 82 DeleteEpicGamesIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteEpicGamesIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 82 'DeleteEpicGamesIAPConfig' test.out

#- 83 GetGoogleIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetGoogleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 83 'GetGoogleIAPConfig' test.out

#- 84 UpdateGoogleIAPConfig
# body param: body
echo '{"applicationName": "XcQU1Ecc", "notificationTokenAudience": "z83sRfLY", "notificationTokenEmail": "vwE46Apw", "packageName": "m0olsoOH", "serviceAccountId": "YVRUP0QK"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateGoogleIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 84 'UpdateGoogleIAPConfig' test.out

#- 85 DeleteGoogleIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteGoogleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 85 'DeleteGoogleIAPConfig' test.out

#- 86 UpdateGoogleP12File
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UpdateGoogleP12File \
    --namespace $AB_NAMESPACE \
    --upload file $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 86 'UpdateGoogleP12File' test.out

#- 87 GetIAPItemConfig
$CLI_EXE \
    --sn platform \
    --op GetIAPItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 87 'GetIAPItemConfig' test.out

#- 88 UpdateIAPItemConfig
# body param: body
echo '{"data": [{"itemIdentity": "obE4mnoE", "itemIdentityType": "ITEM_ID", "platformProductIdMap": {"87l7OlSV": "b15a0bVD", "2ZOQUXwL": "xODdIuWt", "hnJugrmM": "HeTfYSZJ"}}, {"itemIdentity": "rZ5xbAGf", "itemIdentityType": "ITEM_SKU", "platformProductIdMap": {"ZsAbKek8": "6QcKWKfL", "U3nWy7fJ": "FOL0pGvN", "xiSUoXhf": "38m7REzw"}}, {"itemIdentity": "tRWIuQaq", "itemIdentityType": "ITEM_ID", "platformProductIdMap": {"RqQNB4tZ": "Iqne4EqS", "Lf1RcIJr": "mspCKhav", "d0RjUWYn": "0doj7hPG"}}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateIAPItemConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 88 'UpdateIAPItemConfig' test.out

#- 89 DeleteIAPItemConfig
$CLI_EXE \
    --sn platform \
    --op DeleteIAPItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 89 'DeleteIAPItemConfig' test.out

#- 90 GetOculusIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetOculusIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 90 'GetOculusIAPConfig' test.out

#- 91 UpdateOculusIAPConfig
# body param: body
echo '{"appId": "udnfJUAR", "appSecret": "1xlOeI0G"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateOculusIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 91 'UpdateOculusIAPConfig' test.out

#- 92 DeleteOculusIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteOculusIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 92 'DeleteOculusIAPConfig' test.out

#- 93 GetPlayStationIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetPlayStationIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 93 'GetPlayStationIAPConfig' test.out

#- 94 UpdatePlaystationIAPConfig
# body param: body
echo '{"backOfficeServerClientId": "msfHe8hO", "backOfficeServerClientSecret": "bCxpW6Mu", "enableStreamJob": false, "environment": "NCeIAZdD", "streamName": "FuAFTiVy", "streamPartnerName": "B3C0ewIE"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePlaystationIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 94 'UpdatePlaystationIAPConfig' test.out

#- 95 DeletePlaystationIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeletePlaystationIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 95 'DeletePlaystationIAPConfig' test.out

#- 96 ValidateExistedPlaystationIAPConfig
$CLI_EXE \
    --sn platform \
    --op ValidateExistedPlaystationIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 96 'ValidateExistedPlaystationIAPConfig' test.out

#- 97 ValidatePlaystationIAPConfig
# body param: body
echo '{"backOfficeServerClientId": "7joDrq4R", "backOfficeServerClientSecret": "VnGlWXCm", "enableStreamJob": true, "environment": "u8Ahgooq", "streamName": "Tifs4xAd", "streamPartnerName": "3DNvmFGF"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ValidatePlaystationIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 97 'ValidatePlaystationIAPConfig' test.out

#- 98 GetSteamIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetSteamIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 98 'GetSteamIAPConfig' test.out

#- 99 UpdateSteamIAPConfig
# body param: body
echo '{"appId": "vuByViXk", "env": "LIVE", "publisherAuthenticationKey": "UPdkfETa", "syncMode": "INVENTORY"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateSteamIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 99 'UpdateSteamIAPConfig' test.out

#- 100 DeleteSteamIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteSteamIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 100 'DeleteSteamIAPConfig' test.out

#- 101 GetTwitchIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetTwitchIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 101 'GetTwitchIAPConfig' test.out

#- 102 UpdateTwitchIAPConfig
# body param: body
echo '{"clientId": "suxDTGwy", "clientSecret": "gDkK8DbA", "organizationId": "1cE4lmvM"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateTwitchIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 102 'UpdateTwitchIAPConfig' test.out

#- 103 DeleteTwitchIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteTwitchIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 103 'DeleteTwitchIAPConfig' test.out

#- 104 GetXblIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetXblIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 104 'GetXblIAPConfig' test.out

#- 105 UpdateXblIAPConfig
# body param: body
echo '{"enableClawback": true, "entraAppClientId": "OQFyg6Ff", "entraAppClientSecret": "siDFZs9v", "entraTenantId": "fcoasPr2", "relyingPartyCert": "yFMqqDHP"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXblIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 105 'UpdateXblIAPConfig' test.out

#- 106 DeleteXblAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteXblAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 106 'DeleteXblAPConfig' test.out

#- 107 UpdateXblBPCertFile
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UpdateXblBPCertFile \
    --namespace $AB_NAMESPACE \
    --upload file $TEMP_FILE_UPLOAD \
    --password 'yzaiQ9GF' \
    > test.out 2>&1
eval_tap $? 107 'UpdateXblBPCertFile' test.out

#- 108 QueryThirdPartyNotifications
$CLI_EXE \
    --sn platform \
    --op QueryThirdPartyNotifications \
    --namespace $AB_NAMESPACE \
    --endDate 'kdq1Oyer' \
    --externalId 'szrbbDV1' \
    --limit '96' \
    --offset '97' \
    --source 'EPICGAMES' \
    --startDate 'gWBCFj22' \
    --status 'WARN' \
    --type 'yPSFThvu' \
    > test.out 2>&1
eval_tap $? 108 'QueryThirdPartyNotifications' test.out

#- 109 QueryAbnormalTransactions
$CLI_EXE \
    --sn platform \
    --op QueryAbnormalTransactions \
    --namespace $AB_NAMESPACE \
    --limit '39' \
    --offset '11' \
    --orderId 'iwSuhkmv' \
    --steamId 'hPwJ82R9' \
    > test.out 2>&1
eval_tap $? 109 'QueryAbnormalTransactions' test.out

#- 110 AdminGetSteamJobInfo
$CLI_EXE \
    --sn platform \
    --op AdminGetSteamJobInfo \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 110 'AdminGetSteamJobInfo' test.out

#- 111 AdminResetSteamJobTime
# body param: body
echo '{"env": "LIVE", "lastTime": "1995-05-02T00:00:00Z"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op AdminResetSteamJobTime \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 111 'AdminResetSteamJobTime' test.out

#- 112 AdminRefundIAPOrder
$CLI_EXE \
    --sn platform \
    --op AdminRefundIAPOrder \
    --iapOrderNo '2jkZWfF4' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 112 'AdminRefundIAPOrder' test.out

#- 113 QuerySteamReportHistories
$CLI_EXE \
    --sn platform \
    --op QuerySteamReportHistories \
    --namespace $AB_NAMESPACE \
    --limit '40' \
    --offset '88' \
    --orderId '33ZYbyZX' \
    --processStatus 'IGNORED' \
    --steamId 'Qvn00yOc' \
    > test.out 2>&1
eval_tap $? 113 'QuerySteamReportHistories' test.out

#- 114 QueryThirdPartySubscription
$CLI_EXE \
    --sn platform \
    --op QueryThirdPartySubscription \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --groupId '5Ve19MTN' \
    --limit '70' \
    --offset '66' \
    --platform 'PLAYSTATION' \
    --productId '2CMlyTca' \
    --userId 'RlJgzLpD' \
    > test.out 2>&1
eval_tap $? 114 'QueryThirdPartySubscription' test.out

#- 115 GetIAPOrderConsumeDetails
$CLI_EXE \
    --sn platform \
    --op GetIAPOrderConsumeDetails \
    --iapOrderNo 'xDOowhVE' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 115 'GetIAPOrderConsumeDetails' test.out

#- 116 DownloadInvoiceDetails
$CLI_EXE \
    --sn platform \
    --op DownloadInvoiceDetails \
    --namespace $AB_NAMESPACE \
    --endTime 'gHDnQh9E' \
    --feature '5Mh62mcp' \
    --itemId 'eW8BJpBG' \
    --itemType 'INGAMEITEM' \
    --startTime 'b7ooY1sv' \
    > test.out 2>&1
eval_tap $? 116 'DownloadInvoiceDetails' test.out

#- 117 GenerateInvoiceSummary
$CLI_EXE \
    --sn platform \
    --op GenerateInvoiceSummary \
    --namespace $AB_NAMESPACE \
    --endTime 'RrBCdZZa' \
    --feature 'h0ajigHj' \
    --itemId 'oHz4xY4W' \
    --itemType 'EXTENSION' \
    --startTime 'mqBkmJDu' \
    > test.out 2>&1
eval_tap $? 117 'GenerateInvoiceSummary' test.out

#- 118 SyncInGameItem
# body param: body
echo '{"categoryPath": "4f3DFjFS", "targetItemId": "w9AD3YvO", "targetNamespace": "kM7RhiRB"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncInGameItem \
    --namespace $AB_NAMESPACE \
    --storeId 'gD1TWFXa' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 118 'SyncInGameItem' test.out

#- 119 CreateItem
# body param: body
echo '{"appId": "9IdDXa7w", "appType": "SOFTWARE", "baseAppId": "fMJOwTBO", "boothName": "7drMEt8f", "categoryPath": "FUKeCRNU", "clazz": "APN0mkcV", "displayOrder": 27, "entitlementType": "DURABLE", "ext": {"prTLTYVp": {}, "2Skah0Pc": {}, "5plY57dC": {}}, "features": ["csi7H5Ic", "FaiX0cqs", "O9j4kFEq"], "flexible": true, "images": [{"as": "kemhP5Ec", "caption": "iHb93ZGF", "height": 47, "imageUrl": "X2AJlc97", "smallImageUrl": "yMa2g3af", "width": 94}, {"as": "1FeULBsJ", "caption": "17uMjIru", "height": 23, "imageUrl": "8M2iBpdt", "smallImageUrl": "XxfSLaU4", "width": 100}, {"as": "cqc0IRQA", "caption": "DHCdWQyz", "height": 43, "imageUrl": "RCgGWkXi", "smallImageUrl": "EOcnFBzP", "width": 31}], "inventoryConfig": {"customAttributes": {"xHcvVYJG": {}, "aFd1xV1B": {}, "j1G0f5M0": {}}, "serverCustomAttributes": {"gLn4lHkV": {}, "WcRnn6qh": {}, "tmBuabvo": {}}, "slotUsed": 9}, "itemIds": ["WU2Fsfhf", "3XKUNjuh", "fDeusGfJ"], "itemQty": {"EFHrrfoJ": 57, "kn5GXmVy": 68, "opZ5hRSw": 59}, "itemType": "BUNDLE", "listable": false, "localizations": {"nNJl999W": {"description": "ud3ULGDC", "localExt": {"y2XbKLVG": {}, "LVgOYiUL": {}, "xUWmMNuo": {}}, "longDescription": "LsV3GUjZ", "title": "0nNiNEbV"}, "coNqfAR3": {"description": "XSJSsSvP", "localExt": {"ifjtnjqh": {}, "hQwX8G2E": {}, "LTw18iZb": {}}, "longDescription": "GK76CuaK", "title": "UFZq0xTW"}, "iU9IWzat": {"description": "ivIvJIeF", "localExt": {"xJdzzilY": {}, "cgaSDMRQ": {}, "HiIH3ZRo": {}}, "longDescription": "OXC6LEv7", "title": "6OAYyPf3"}}, "lootBoxConfig": {"rewardCount": 32, "rewards": [{"lootBoxItems": [{"count": 1, "duration": 30, "endDate": "1980-02-18T00:00:00Z", "itemId": "KQOBSpvT", "itemSku": "RdtfwNu9", "itemType": "e39JPkrQ"}, {"count": 5, "duration": 81, "endDate": "1977-05-22T00:00:00Z", "itemId": "N8q9hrOT", "itemSku": "okbS5OJU", "itemType": "D5BVxUPd"}, {"count": 85, "duration": 42, "endDate": "1987-12-03T00:00:00Z", "itemId": "vX5O1qQJ", "itemSku": "HYRlvhOb", "itemType": "M6tNPSMq"}], "name": "FwEI00bZ", "odds": 0.11054578471991172, "type": "PROBABILITY_GROUP", "weight": 73}, {"lootBoxItems": [{"count": 96, "duration": 24, "endDate": "1996-12-09T00:00:00Z", "itemId": "UWpz1AAc", "itemSku": "U9n3xP8m", "itemType": "d05DxZkz"}, {"count": 1, "duration": 52, "endDate": "1996-06-07T00:00:00Z", "itemId": "YtqWpYFj", "itemSku": "X0bVjYWt", "itemType": "2519ku9F"}, {"count": 78, "duration": 27, "endDate": "1988-10-29T00:00:00Z", "itemId": "VRy3vsCd", "itemSku": "UFqe0Vbb", "itemType": "VqgpuyM5"}], "name": "z5OL3Ea9", "odds": 0.8472043559052714, "type": "REWARD", "weight": 28}, {"lootBoxItems": [{"count": 16, "duration": 47, "endDate": "1986-07-08T00:00:00Z", "itemId": "Arohjrke", "itemSku": "Mu90cpmg", "itemType": "nHhWoGDM"}, {"count": 53, "duration": 11, "endDate": "1974-02-26T00:00:00Z", "itemId": "7iws8XSo", "itemSku": "4EfrzyRc", "itemType": "MSwzJ8D0"}, {"count": 93, "duration": 61, "endDate": "1983-10-09T00:00:00Z", "itemId": "8riwhjI1", "itemSku": "jE9zPGp6", "itemType": "QKJNFiWx"}], "name": "zFYkXExL", "odds": 0.7584191543966511, "type": "REWARD_GROUP", "weight": 0}], "rollFunction": "CUSTOM"}, "maxCount": 96, "maxCountPerUser": 78, "name": "OQz1nGHj", "optionBoxConfig": {"boxItems": [{"count": 93, "duration": 98, "endDate": "1980-08-26T00:00:00Z", "itemId": "6xHCbNv6", "itemSku": "KD4xQkBB", "itemType": "DU1qqwhV"}, {"count": 89, "duration": 39, "endDate": "1987-07-31T00:00:00Z", "itemId": "QaRSvIE3", "itemSku": "c12ZA0zI", "itemType": "ADWMZkZK"}, {"count": 0, "duration": 8, "endDate": "1972-06-02T00:00:00Z", "itemId": "h41TYd5L", "itemSku": "ByIZu3vB", "itemType": "rrG3H68A"}]}, "purchasable": true, "recurring": {"cycle": "YEARLY", "fixedFreeDays": 79, "fixedTrialCycles": 96, "graceDays": 64}, "regionData": {"cUVRGyUR": [{"currencyCode": "lY77ONfk", "currencyNamespace": "GgD4rsAa", "currencyType": "VIRTUAL", "discountAmount": 68, "discountExpireAt": "1999-12-14T00:00:00Z", "discountPercentage": 29, "discountPurchaseAt": "1983-02-11T00:00:00Z", "expireAt": "1984-03-24T00:00:00Z", "price": 72, "purchaseAt": "1984-03-08T00:00:00Z", "trialPrice": 86}, {"currencyCode": "odveknGn", "currencyNamespace": "jFWXBbyd", "currencyType": "REAL", "discountAmount": 18, "discountExpireAt": "1993-02-12T00:00:00Z", "discountPercentage": 28, "discountPurchaseAt": "1972-02-23T00:00:00Z", "expireAt": "1982-06-25T00:00:00Z", "price": 88, "purchaseAt": "1999-09-29T00:00:00Z", "trialPrice": 56}, {"currencyCode": "OEdBgodb", "currencyNamespace": "MmNKDRjU", "currencyType": "VIRTUAL", "discountAmount": 92, "discountExpireAt": "1973-06-01T00:00:00Z", "discountPercentage": 67, "discountPurchaseAt": "1974-10-24T00:00:00Z", "expireAt": "1971-06-17T00:00:00Z", "price": 64, "purchaseAt": "1971-02-21T00:00:00Z", "trialPrice": 32}], "rEvptAZF": [{"currencyCode": "NagUvrjx", "currencyNamespace": "GTDyCJoI", "currencyType": "VIRTUAL", "discountAmount": 44, "discountExpireAt": "1983-10-14T00:00:00Z", "discountPercentage": 80, "discountPurchaseAt": "1974-02-19T00:00:00Z", "expireAt": "1977-05-13T00:00:00Z", "price": 58, "purchaseAt": "1977-03-10T00:00:00Z", "trialPrice": 63}, {"currencyCode": "GQ2mLLlY", "currencyNamespace": "63jHmDIg", "currencyType": "REAL", "discountAmount": 49, "discountExpireAt": "1996-01-07T00:00:00Z", "discountPercentage": 42, "discountPurchaseAt": "1999-04-01T00:00:00Z", "expireAt": "1999-01-22T00:00:00Z", "price": 68, "purchaseAt": "1997-07-08T00:00:00Z", "trialPrice": 21}, {"currencyCode": "9ZbO4ThK", "currencyNamespace": "5CtHAvJp", "currencyType": "REAL", "discountAmount": 18, "discountExpireAt": "1977-09-09T00:00:00Z", "discountPercentage": 84, "discountPurchaseAt": "1981-05-04T00:00:00Z", "expireAt": "1998-11-10T00:00:00Z", "price": 94, "purchaseAt": "1982-10-15T00:00:00Z", "trialPrice": 35}], "wIH0cBJ3": [{"currencyCode": "mBTzKXu6", "currencyNamespace": "xYbIfWEP", "currencyType": "REAL", "discountAmount": 1, "discountExpireAt": "1982-10-12T00:00:00Z", "discountPercentage": 39, "discountPurchaseAt": "1975-09-25T00:00:00Z", "expireAt": "1973-10-25T00:00:00Z", "price": 17, "purchaseAt": "1992-12-22T00:00:00Z", "trialPrice": 22}, {"currencyCode": "0ikAbRd2", "currencyNamespace": "DySeTKXO", "currencyType": "VIRTUAL", "discountAmount": 80, "discountExpireAt": "1981-10-17T00:00:00Z", "discountPercentage": 28, "discountPurchaseAt": "1998-07-04T00:00:00Z", "expireAt": "1975-09-07T00:00:00Z", "price": 54, "purchaseAt": "1992-03-27T00:00:00Z", "trialPrice": 88}, {"currencyCode": "0blLOa0i", "currencyNamespace": "TmUGn4Us", "currencyType": "REAL", "discountAmount": 97, "discountExpireAt": "1980-11-13T00:00:00Z", "discountPercentage": 93, "discountPurchaseAt": "1999-07-01T00:00:00Z", "expireAt": "1973-09-25T00:00:00Z", "price": 54, "purchaseAt": "1986-10-27T00:00:00Z", "trialPrice": 59}]}, "saleConfig": {"currencyCode": "zoOBsUtZ", "price": 89}, "seasonType": "TIER", "sectionExclusive": true, "sellable": true, "sku": "lvHBo3bx", "stackable": true, "status": "INACTIVE", "tags": ["ms6rLUeF", "Q0fXC9S9", "UZ7SrhDs"], "targetCurrencyCode": "8pIluxUw", "targetNamespace": "gE57l7ty", "thumbnailUrl": "zROLJMZC", "useCount": 19}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateItem \
    --namespace $AB_NAMESPACE \
    --storeId 'Ms9nE5EE' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 119 'CreateItem' test.out

#- 120 GetItemByAppId
$CLI_EXE \
    --sn platform \
    --op GetItemByAppId \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --storeId 'xIN8u2ka' \
    --appId 'iWCdkFwv' \
    > test.out 2>&1
eval_tap $? 120 'GetItemByAppId' test.out

#- 121 QueryItems
$CLI_EXE \
    --sn platform \
    --op QueryItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --appType 'GAME' \
    --availableDate 'pa8lD1kc' \
    --baseAppId 'HlqfNyZ4' \
    --categoryPath 'aYHO2ovV' \
    --features 'u1Mc6oaK' \
    --includeSubCategoryItem 'true' \
    --itemType 'APP' \
    --limit '64' \
    --offset '67' \
    --region '6FhVInoT' \
    --sortBy '["updatedAt:asc", "updatedAt:desc"]' \
    --storeId 'BYBsne2Q' \
    --tags 'xFzfAWMF' \
    --targetNamespace 'ddhkxoPn' \
    > test.out 2>&1
eval_tap $? 121 'QueryItems' test.out

#- 122 ListBasicItemsByFeatures
$CLI_EXE \
    --sn platform \
    --op ListBasicItemsByFeatures \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --features '["xXpctt0Z", "4MUFXjEV", "4kSlXiPh"]' \
    > test.out 2>&1
eval_tap $? 122 'ListBasicItemsByFeatures' test.out

#- 123 GetItems
$CLI_EXE \
    --sn platform \
    --op GetItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --storeId '7p5pQSnh' \
    --itemIds '2ALskpzP' \
    > test.out 2>&1
eval_tap $? 123 'GetItems' test.out

#- 124 GetItemBySku
$CLI_EXE \
    --sn platform \
    --op GetItemBySku \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --storeId 'lM55Gqtt' \
    --sku 'HCAMUrQj' \
    > test.out 2>&1
eval_tap $? 124 'GetItemBySku' test.out

#- 125 GetLocaleItemBySku
$CLI_EXE \
    --sn platform \
    --op GetLocaleItemBySku \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --language 'lJiwb1SK' \
    --populateBundle 'false' \
    --region 'BeVCfPmB' \
    --storeId 'iFaGfLyc' \
    --sku 'TXpqqG0E' \
    > test.out 2>&1
eval_tap $? 125 'GetLocaleItemBySku' test.out

#- 126 GetEstimatedPrice
$CLI_EXE \
    --sn platform \
    --op GetEstimatedPrice \
    --namespace $AB_NAMESPACE \
    --platform 'ULF4ZsdI' \
    --region 'uMvo4Shs' \
    --storeId 'vbE0UEdn' \
    --itemIds 'FKFmTi6g' \
    --userId 'naTG6oRc' \
    > test.out 2>&1
eval_tap $? 126 'GetEstimatedPrice' test.out

#- 127 GetItemIdBySku
$CLI_EXE \
    --sn platform \
    --op GetItemIdBySku \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --storeId 'c7cK1WrV' \
    --sku 'aSUKvKfG' \
    > test.out 2>&1
eval_tap $? 127 'GetItemIdBySku' test.out

#- 128 GetBulkItemIdBySkus
$CLI_EXE \
    --sn platform \
    --op GetBulkItemIdBySkus \
    --namespace $AB_NAMESPACE \
    --sku '["WdMTIUo9", "VhOIdiIZ", "AWdcBbjK"]' \
    --storeId 'B72mxwV4' \
    > test.out 2>&1
eval_tap $? 128 'GetBulkItemIdBySkus' test.out

#- 129 BulkGetLocaleItems
$CLI_EXE \
    --sn platform \
    --op BulkGetLocaleItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --language 'adx884Dk' \
    --region 'oRoHRhvS' \
    --storeId 'oNpEjONI' \
    --itemIds 'qN7yjZkW' \
    > test.out 2>&1
eval_tap $? 129 'BulkGetLocaleItems' test.out

#- 130 GetAvailablePredicateTypes
$CLI_EXE \
    --sn platform \
    --op GetAvailablePredicateTypes \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 130 'GetAvailablePredicateTypes' test.out

#- 131 ValidateItemPurchaseCondition
# body param: body
echo '{"itemIds": ["Bvw6eAJ2", "u14lbZfu", "4Sl9q38Z"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ValidateItemPurchaseCondition \
    --namespace $AB_NAMESPACE \
    --platform 'r5UHdym1' \
    --userId 'TLNAIx3g' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 131 'ValidateItemPurchaseCondition' test.out

#- 132 BulkUpdateRegionData
# body param: body
echo '{"changes": [{"itemIdentities": ["Dgs9ylAL", "lcQVD4fQ", "JyNLzDQJ"], "itemIdentityType": "ITEM_SKU", "regionData": {"j5oLmBp1": [{"currencyCode": "uKcptaJg", "currencyNamespace": "IhNmDjbu", "currencyType": "REAL", "discountAmount": 46, "discountExpireAt": "1978-09-24T00:00:00Z", "discountPercentage": 77, "discountPurchaseAt": "1979-10-13T00:00:00Z", "discountedPrice": 39, "expireAt": "1973-04-15T00:00:00Z", "price": 43, "purchaseAt": "1973-01-02T00:00:00Z", "trialPrice": 57}, {"currencyCode": "SNz2VKuP", "currencyNamespace": "odUCj4hE", "currencyType": "VIRTUAL", "discountAmount": 5, "discountExpireAt": "1973-10-24T00:00:00Z", "discountPercentage": 89, "discountPurchaseAt": "1979-07-25T00:00:00Z", "discountedPrice": 52, "expireAt": "1987-08-07T00:00:00Z", "price": 85, "purchaseAt": "1987-05-27T00:00:00Z", "trialPrice": 96}, {"currencyCode": "meVxjLfY", "currencyNamespace": "UrUAptrE", "currencyType": "REAL", "discountAmount": 46, "discountExpireAt": "1980-05-22T00:00:00Z", "discountPercentage": 40, "discountPurchaseAt": "1982-02-03T00:00:00Z", "discountedPrice": 33, "expireAt": "1998-10-26T00:00:00Z", "price": 39, "purchaseAt": "1999-05-05T00:00:00Z", "trialPrice": 1}], "1SmSTyHA": [{"currencyCode": "aUGPyHsN", "currencyNamespace": "lqLP6Vqf", "currencyType": "REAL", "discountAmount": 71, "discountExpireAt": "1982-09-22T00:00:00Z", "discountPercentage": 85, "discountPurchaseAt": "1973-08-21T00:00:00Z", "discountedPrice": 97, "expireAt": "1992-05-24T00:00:00Z", "price": 62, "purchaseAt": "1973-03-20T00:00:00Z", "trialPrice": 26}, {"currencyCode": "nsz7RvHW", "currencyNamespace": "S4BWNIx1", "currencyType": "REAL", "discountAmount": 16, "discountExpireAt": "1985-06-05T00:00:00Z", "discountPercentage": 85, "discountPurchaseAt": "1995-06-18T00:00:00Z", "discountedPrice": 87, "expireAt": "1995-07-21T00:00:00Z", "price": 8, "purchaseAt": "1987-03-20T00:00:00Z", "trialPrice": 36}, {"currencyCode": "gUoDmqYf", "currencyNamespace": "C9W6CGtR", "currencyType": "REAL", "discountAmount": 90, "discountExpireAt": "1978-03-04T00:00:00Z", "discountPercentage": 81, "discountPurchaseAt": "1994-02-09T00:00:00Z", "discountedPrice": 88, "expireAt": "1984-01-12T00:00:00Z", "price": 57, "purchaseAt": "1977-03-14T00:00:00Z", "trialPrice": 21}], "7NJloRX6": [{"currencyCode": "BQDvs97u", "currencyNamespace": "yCRxvJu3", "currencyType": "REAL", "discountAmount": 77, "discountExpireAt": "1996-07-27T00:00:00Z", "discountPercentage": 95, "discountPurchaseAt": "1989-06-30T00:00:00Z", "discountedPrice": 12, "expireAt": "1996-09-04T00:00:00Z", "price": 18, "purchaseAt": "1973-03-08T00:00:00Z", "trialPrice": 28}, {"currencyCode": "x7FkklBQ", "currencyNamespace": "xbjr2lyw", "currencyType": "REAL", "discountAmount": 1, "discountExpireAt": "1972-03-09T00:00:00Z", "discountPercentage": 23, "discountPurchaseAt": "1988-11-30T00:00:00Z", "discountedPrice": 96, "expireAt": "1996-11-15T00:00:00Z", "price": 85, "purchaseAt": "1981-02-02T00:00:00Z", "trialPrice": 97}, {"currencyCode": "vqswe934", "currencyNamespace": "ipq79lF7", "currencyType": "REAL", "discountAmount": 5, "discountExpireAt": "1992-10-22T00:00:00Z", "discountPercentage": 58, "discountPurchaseAt": "1977-12-13T00:00:00Z", "discountedPrice": 86, "expireAt": "1986-05-20T00:00:00Z", "price": 34, "purchaseAt": "1995-12-16T00:00:00Z", "trialPrice": 7}]}}, {"itemIdentities": ["q3l9fdoh", "77Qt1ets", "PpkOUCpO"], "itemIdentityType": "ITEM_ID", "regionData": {"qVrNQpP6": [{"currencyCode": "EGxTO68w", "currencyNamespace": "9TzK1LtD", "currencyType": "REAL", "discountAmount": 52, "discountExpireAt": "1976-02-19T00:00:00Z", "discountPercentage": 42, "discountPurchaseAt": "1981-11-18T00:00:00Z", "discountedPrice": 24, "expireAt": "1976-03-31T00:00:00Z", "price": 22, "purchaseAt": "1985-03-30T00:00:00Z", "trialPrice": 2}, {"currencyCode": "3LQiF3j5", "currencyNamespace": "s4YCUxHS", "currencyType": "VIRTUAL", "discountAmount": 3, "discountExpireAt": "1984-07-31T00:00:00Z", "discountPercentage": 7, "discountPurchaseAt": "1987-07-19T00:00:00Z", "discountedPrice": 31, "expireAt": "1991-04-11T00:00:00Z", "price": 66, "purchaseAt": "1990-07-16T00:00:00Z", "trialPrice": 44}, {"currencyCode": "3bMZkJZw", "currencyNamespace": "2OZ6RHpF", "currencyType": "VIRTUAL", "discountAmount": 2, "discountExpireAt": "1990-05-03T00:00:00Z", "discountPercentage": 83, "discountPurchaseAt": "1995-08-30T00:00:00Z", "discountedPrice": 40, "expireAt": "1973-09-23T00:00:00Z", "price": 88, "purchaseAt": "1985-06-05T00:00:00Z", "trialPrice": 93}], "dmDr7mEM": [{"currencyCode": "cFwUIRa6", "currencyNamespace": "YmEi271S", "currencyType": "VIRTUAL", "discountAmount": 66, "discountExpireAt": "1991-01-15T00:00:00Z", "discountPercentage": 0, "discountPurchaseAt": "1975-08-16T00:00:00Z", "discountedPrice": 62, "expireAt": "1980-12-10T00:00:00Z", "price": 11, "purchaseAt": "1983-01-30T00:00:00Z", "trialPrice": 91}, {"currencyCode": "qrVcQGOO", "currencyNamespace": "75KEijXo", "currencyType": "REAL", "discountAmount": 6, "discountExpireAt": "1988-08-08T00:00:00Z", "discountPercentage": 33, "discountPurchaseAt": "1999-12-03T00:00:00Z", "discountedPrice": 65, "expireAt": "1973-03-09T00:00:00Z", "price": 41, "purchaseAt": "1974-04-22T00:00:00Z", "trialPrice": 42}, {"currencyCode": "nd6408fr", "currencyNamespace": "YBwwlyfZ", "currencyType": "VIRTUAL", "discountAmount": 39, "discountExpireAt": "1983-04-22T00:00:00Z", "discountPercentage": 76, "discountPurchaseAt": "1974-08-14T00:00:00Z", "discountedPrice": 69, "expireAt": "1977-06-28T00:00:00Z", "price": 47, "purchaseAt": "1989-09-15T00:00:00Z", "trialPrice": 41}], "y7Jqkce1": [{"currencyCode": "DPGQkt1O", "currencyNamespace": "MwHjg0oq", "currencyType": "REAL", "discountAmount": 92, "discountExpireAt": "1995-11-18T00:00:00Z", "discountPercentage": 32, "discountPurchaseAt": "1976-11-01T00:00:00Z", "discountedPrice": 8, "expireAt": "1974-10-18T00:00:00Z", "price": 91, "purchaseAt": "1974-04-19T00:00:00Z", "trialPrice": 39}, {"currencyCode": "BJWTUUeh", "currencyNamespace": "sDKzodw8", "currencyType": "VIRTUAL", "discountAmount": 49, "discountExpireAt": "1972-04-04T00:00:00Z", "discountPercentage": 12, "discountPurchaseAt": "1972-06-16T00:00:00Z", "discountedPrice": 26, "expireAt": "1980-11-17T00:00:00Z", "price": 100, "purchaseAt": "1998-06-25T00:00:00Z", "trialPrice": 71}, {"currencyCode": "CIyzSNYZ", "currencyNamespace": "tveO7EAE", "currencyType": "VIRTUAL", "discountAmount": 55, "discountExpireAt": "1999-11-03T00:00:00Z", "discountPercentage": 57, "discountPurchaseAt": "1972-08-19T00:00:00Z", "discountedPrice": 49, "expireAt": "1994-10-13T00:00:00Z", "price": 26, "purchaseAt": "1998-11-17T00:00:00Z", "trialPrice": 60}]}}, {"itemIdentities": ["vSfX7wtD", "sqesvNMM", "UpXyP4hc"], "itemIdentityType": "ITEM_ID", "regionData": {"ObONHn4s": [{"currencyCode": "e2oEXXNK", "currencyNamespace": "ZWd2C0PO", "currencyType": "REAL", "discountAmount": 61, "discountExpireAt": "1987-12-23T00:00:00Z", "discountPercentage": 2, "discountPurchaseAt": "1977-04-30T00:00:00Z", "discountedPrice": 85, "expireAt": "1987-04-27T00:00:00Z", "price": 53, "purchaseAt": "1977-07-25T00:00:00Z", "trialPrice": 2}, {"currencyCode": "6iAo5mLD", "currencyNamespace": "xBCvCEJi", "currencyType": "REAL", "discountAmount": 32, "discountExpireAt": "1989-10-17T00:00:00Z", "discountPercentage": 94, "discountPurchaseAt": "1996-02-13T00:00:00Z", "discountedPrice": 100, "expireAt": "1992-07-31T00:00:00Z", "price": 58, "purchaseAt": "1989-06-03T00:00:00Z", "trialPrice": 5}, {"currencyCode": "EKSEegxX", "currencyNamespace": "Xm2cV2gB", "currencyType": "REAL", "discountAmount": 20, "discountExpireAt": "1972-10-05T00:00:00Z", "discountPercentage": 74, "discountPurchaseAt": "1993-08-03T00:00:00Z", "discountedPrice": 88, "expireAt": "1973-11-01T00:00:00Z", "price": 13, "purchaseAt": "1989-01-13T00:00:00Z", "trialPrice": 30}], "UIfLMEFX": [{"currencyCode": "Lmfl6oKk", "currencyNamespace": "mmIbGRfS", "currencyType": "REAL", "discountAmount": 67, "discountExpireAt": "1984-03-08T00:00:00Z", "discountPercentage": 58, "discountPurchaseAt": "1982-05-13T00:00:00Z", "discountedPrice": 22, "expireAt": "1992-10-05T00:00:00Z", "price": 26, "purchaseAt": "1990-06-26T00:00:00Z", "trialPrice": 7}, {"currencyCode": "Jdjf6z4f", "currencyNamespace": "KwTMvTXP", "currencyType": "REAL", "discountAmount": 52, "discountExpireAt": "1975-08-12T00:00:00Z", "discountPercentage": 14, "discountPurchaseAt": "1993-04-26T00:00:00Z", "discountedPrice": 21, "expireAt": "1981-10-07T00:00:00Z", "price": 99, "purchaseAt": "1993-11-08T00:00:00Z", "trialPrice": 73}, {"currencyCode": "wDsQ8kDH", "currencyNamespace": "UV2uS89s", "currencyType": "VIRTUAL", "discountAmount": 55, "discountExpireAt": "1975-06-20T00:00:00Z", "discountPercentage": 59, "discountPurchaseAt": "1986-02-06T00:00:00Z", "discountedPrice": 66, "expireAt": "1971-07-25T00:00:00Z", "price": 42, "purchaseAt": "1990-01-20T00:00:00Z", "trialPrice": 62}], "gulXMKtR": [{"currencyCode": "Owq7zClg", "currencyNamespace": "nEgMIvvZ", "currencyType": "VIRTUAL", "discountAmount": 8, "discountExpireAt": "1984-04-28T00:00:00Z", "discountPercentage": 24, "discountPurchaseAt": "1979-01-19T00:00:00Z", "discountedPrice": 79, "expireAt": "1988-06-02T00:00:00Z", "price": 99, "purchaseAt": "1993-05-09T00:00:00Z", "trialPrice": 29}, {"currencyCode": "h1NhoCju", "currencyNamespace": "hMP2x07C", "currencyType": "REAL", "discountAmount": 55, "discountExpireAt": "1972-06-14T00:00:00Z", "discountPercentage": 28, "discountPurchaseAt": "1993-10-03T00:00:00Z", "discountedPrice": 62, "expireAt": "1972-10-31T00:00:00Z", "price": 13, "purchaseAt": "1993-02-19T00:00:00Z", "trialPrice": 58}, {"currencyCode": "fcdCpdwc", "currencyNamespace": "FPAwEhfd", "currencyType": "VIRTUAL", "discountAmount": 100, "discountExpireAt": "1991-01-27T00:00:00Z", "discountPercentage": 8, "discountPurchaseAt": "1973-10-24T00:00:00Z", "discountedPrice": 36, "expireAt": "1978-11-08T00:00:00Z", "price": 76, "purchaseAt": "1985-12-03T00:00:00Z", "trialPrice": 19}]}}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op BulkUpdateRegionData \
    --namespace $AB_NAMESPACE \
    --storeId 'wcz1jbZf' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 132 'BulkUpdateRegionData' test.out

#- 133 SearchItems
$CLI_EXE \
    --sn platform \
    --op SearchItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --itemType 'CODE' \
    --limit '9' \
    --offset '18' \
    --sortBy 'rDGA8vzY' \
    --storeId '6CikUpUt' \
    --keyword '6pV16LJc' \
    --language 'EabUL6NO' \
    > test.out 2>&1
eval_tap $? 133 'SearchItems' test.out

#- 134 QueryUncategorizedItems
$CLI_EXE \
    --sn platform \
    --op QueryUncategorizedItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --limit '55' \
    --offset '91' \
    --sortBy '["displayOrder:desc", "createdAt:desc", "name"]' \
    --storeId '83NlanjF' \
    > test.out 2>&1
eval_tap $? 134 'QueryUncategorizedItems' test.out

#- 135 GetItem
$CLI_EXE \
    --sn platform \
    --op GetItem \
    --itemId 'YBH5HL5R' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --storeId 'VbAiYvtg' \
    > test.out 2>&1
eval_tap $? 135 'GetItem' test.out

#- 136 UpdateItem
# body param: body
echo '{"appId": "p0zgUYA9", "appType": "DEMO", "baseAppId": "eVJCXGf4", "boothName": "AvndLRLb", "categoryPath": "CNskwmLt", "clazz": "np4sa9bl", "displayOrder": 13, "entitlementType": "DURABLE", "ext": {"5SUxZDY5": {}, "lei0vsnU": {}, "0klqFK4X": {}}, "features": ["8522prRV", "1In0dFOO", "gl6YrHh5"], "flexible": false, "images": [{"as": "ADWZjhN0", "caption": "rhf6uIvu", "height": 0, "imageUrl": "DGqzZLfP", "smallImageUrl": "uxcgcPnl", "width": 74}, {"as": "1FlNzdem", "caption": "OgBktdia", "height": 89, "imageUrl": "EQOILleK", "smallImageUrl": "vbrRFANc", "width": 31}, {"as": "1wfbMBNi", "caption": "fokeoyCo", "height": 22, "imageUrl": "GSKJb3EB", "smallImageUrl": "PY8cFYma", "width": 25}], "inventoryConfig": {"customAttributes": {"hMPhBZFU": {}, "QsXMNizj": {}, "IPN7pXqk": {}}, "serverCustomAttributes": {"uQM95wXP": {}, "U6D5tcYe": {}, "vU9SNJq0": {}}, "slotUsed": 57}, "itemIds": ["mEsAA7aV", "pVfCStvF", "NKKgOlWm"], "itemQty": {"QkL7Wjv6": 62, "0wZxPwMm": 76, "nCe9yUm3": 56}, "itemType": "COINS", "listable": true, "localizations": {"YLQ7S6S6": {"description": "LGdtC1ea", "localExt": {"3szsLxE8": {}, "nJjEMH0f": {}, "1iLxqkbT": {}}, "longDescription": "mNCm649H", "title": "rfOZE2Ck"}, "hk3xndrI": {"description": "IezoGY0V", "localExt": {"fWY9lFmm": {}, "5mrK4I2o": {}, "UdO8ikQh": {}}, "longDescription": "o4S2lNi7", "title": "Wo5tflWE"}, "qjjXZCjb": {"description": "n6uzLDkd", "localExt": {"jDtiISxU": {}, "zvplepjZ": {}, "W3g9sydS": {}}, "longDescription": "h4PE9ZDE", "title": "ua4aLFQ1"}}, "lootBoxConfig": {"rewardCount": 25, "rewards": [{"lootBoxItems": [{"count": 60, "duration": 27, "endDate": "1973-12-23T00:00:00Z", "itemId": "87FZkan8", "itemSku": "Mn2RWAU4", "itemType": "sylT4HNl"}, {"count": 99, "duration": 42, "endDate": "1995-01-14T00:00:00Z", "itemId": "JRWLfMx0", "itemSku": "5Yo85cAY", "itemType": "OHLus2pi"}, {"count": 85, "duration": 46, "endDate": "1992-12-19T00:00:00Z", "itemId": "tVAeGkcu", "itemSku": "Y8eOnNq0", "itemType": "Q2so4RV4"}], "name": "TloQQBtp", "odds": 0.9964802460391239, "type": "PROBABILITY_GROUP", "weight": 36}, {"lootBoxItems": [{"count": 54, "duration": 18, "endDate": "1986-09-28T00:00:00Z", "itemId": "VawVMm4k", "itemSku": "ILrnyUkA", "itemType": "F2iT4rvv"}, {"count": 79, "duration": 58, "endDate": "1984-03-29T00:00:00Z", "itemId": "uiKREVun", "itemSku": "tyXnqpbL", "itemType": "pS6gyfeM"}, {"count": 65, "duration": 28, "endDate": "1990-08-12T00:00:00Z", "itemId": "PAUuIzjg", "itemSku": "EAmFQ9OS", "itemType": "ZbnnltJ7"}], "name": "SXJYEWjn", "odds": 0.9841916825827449, "type": "REWARD_GROUP", "weight": 85}, {"lootBoxItems": [{"count": 49, "duration": 41, "endDate": "1973-12-18T00:00:00Z", "itemId": "MEJiYgsB", "itemSku": "jOUFmlT3", "itemType": "T1kHuHGJ"}, {"count": 71, "duration": 1, "endDate": "1987-12-22T00:00:00Z", "itemId": "mc1DEIhr", "itemSku": "Yfeis3V3", "itemType": "af4e5ThN"}, {"count": 28, "duration": 98, "endDate": "1990-04-15T00:00:00Z", "itemId": "x0jdUGEi", "itemSku": "q0pptMSf", "itemType": "T6WaRhaF"}], "name": "UG7F25Uj", "odds": 0.9722268085413266, "type": "REWARD", "weight": 9}], "rollFunction": "DEFAULT"}, "maxCount": 35, "maxCountPerUser": 61, "name": "sN1KXGQW", "optionBoxConfig": {"boxItems": [{"count": 12, "duration": 13, "endDate": "1990-04-21T00:00:00Z", "itemId": "AXqOwKT1", "itemSku": "ltVPKsvU", "itemType": "XrpVInOj"}, {"count": 79, "duration": 24, "endDate": "1987-02-14T00:00:00Z", "itemId": "cYjzw4qp", "itemSku": "tbfLDZ1O", "itemType": "ISmEMptZ"}, {"count": 72, "duration": 84, "endDate": "1997-04-01T00:00:00Z", "itemId": "qUgaGH0t", "itemSku": "NKdMvsNb", "itemType": "rP3k4ZEQ"}]}, "purchasable": true, "recurring": {"cycle": "WEEKLY", "fixedFreeDays": 7, "fixedTrialCycles": 80, "graceDays": 38}, "regionData": {"zUNdKqem": [{"currencyCode": "e71TxuCo", "currencyNamespace": "fvOlce3Y", "currencyType": "REAL", "discountAmount": 62, "discountExpireAt": "1990-06-10T00:00:00Z", "discountPercentage": 37, "discountPurchaseAt": "1985-04-05T00:00:00Z", "expireAt": "1993-10-10T00:00:00Z", "price": 77, "purchaseAt": "1999-03-20T00:00:00Z", "trialPrice": 96}, {"currencyCode": "vPJkwze7", "currencyNamespace": "xT4ENPmY", "currencyType": "REAL", "discountAmount": 60, "discountExpireAt": "1999-05-04T00:00:00Z", "discountPercentage": 14, "discountPurchaseAt": "1993-10-02T00:00:00Z", "expireAt": "1998-09-17T00:00:00Z", "price": 52, "purchaseAt": "1995-09-26T00:00:00Z", "trialPrice": 33}, {"currencyCode": "RR7TlSPr", "currencyNamespace": "cClM4HW2", "currencyType": "REAL", "discountAmount": 30, "discountExpireAt": "1980-12-18T00:00:00Z", "discountPercentage": 41, "discountPurchaseAt": "1979-10-31T00:00:00Z", "expireAt": "1982-10-10T00:00:00Z", "price": 2, "purchaseAt": "1975-11-19T00:00:00Z", "trialPrice": 82}], "ZhATibin": [{"currencyCode": "492lNHOj", "currencyNamespace": "JGjd4JFx", "currencyType": "VIRTUAL", "discountAmount": 9, "discountExpireAt": "1993-07-29T00:00:00Z", "discountPercentage": 8, "discountPurchaseAt": "1979-12-16T00:00:00Z", "expireAt": "1997-07-08T00:00:00Z", "price": 41, "purchaseAt": "1993-08-03T00:00:00Z", "trialPrice": 18}, {"currencyCode": "NcjnVXan", "currencyNamespace": "KmwOXkOR", "currencyType": "REAL", "discountAmount": 40, "discountExpireAt": "1987-11-28T00:00:00Z", "discountPercentage": 36, "discountPurchaseAt": "1971-09-04T00:00:00Z", "expireAt": "1971-09-17T00:00:00Z", "price": 51, "purchaseAt": "1990-04-13T00:00:00Z", "trialPrice": 48}, {"currencyCode": "zro7aZ7h", "currencyNamespace": "Yy0gZpqb", "currencyType": "REAL", "discountAmount": 93, "discountExpireAt": "1998-01-18T00:00:00Z", "discountPercentage": 39, "discountPurchaseAt": "1975-12-24T00:00:00Z", "expireAt": "1993-02-28T00:00:00Z", "price": 21, "purchaseAt": "1989-01-27T00:00:00Z", "trialPrice": 71}], "BCElBLoc": [{"currencyCode": "ehvvbL4i", "currencyNamespace": "X07EgGSO", "currencyType": "REAL", "discountAmount": 87, "discountExpireAt": "1992-05-25T00:00:00Z", "discountPercentage": 9, "discountPurchaseAt": "1995-04-18T00:00:00Z", "expireAt": "1990-12-27T00:00:00Z", "price": 66, "purchaseAt": "1988-01-19T00:00:00Z", "trialPrice": 88}, {"currencyCode": "pWGhC29z", "currencyNamespace": "otAtDhNN", "currencyType": "VIRTUAL", "discountAmount": 51, "discountExpireAt": "1995-03-08T00:00:00Z", "discountPercentage": 20, "discountPurchaseAt": "1971-01-19T00:00:00Z", "expireAt": "1995-01-01T00:00:00Z", "price": 13, "purchaseAt": "1998-06-16T00:00:00Z", "trialPrice": 85}, {"currencyCode": "59r1gPAi", "currencyNamespace": "7SsFlIkQ", "currencyType": "REAL", "discountAmount": 19, "discountExpireAt": "1999-11-08T00:00:00Z", "discountPercentage": 10, "discountPurchaseAt": "1974-05-31T00:00:00Z", "expireAt": "1983-11-07T00:00:00Z", "price": 46, "purchaseAt": "1980-01-29T00:00:00Z", "trialPrice": 40}]}, "saleConfig": {"currencyCode": "cAjiPU3n", "price": 3}, "seasonType": "PASS", "sectionExclusive": true, "sellable": true, "sku": "Jp510xxO", "stackable": true, "status": "ACTIVE", "tags": ["08xZpl1m", "ndXd6W96", "VI6DhiU9"], "targetCurrencyCode": "yDJFCKhq", "targetNamespace": "U65961W1", "thumbnailUrl": "L5e2kKcU", "useCount": 66}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateItem \
    --itemId 'BUoVlDM7' \
    --namespace $AB_NAMESPACE \
    --storeId 'ZBYj9k0b' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 136 'UpdateItem' test.out

#- 137 DeleteItem
$CLI_EXE \
    --sn platform \
    --op DeleteItem \
    --itemId 'IeXeoCp1' \
    --namespace $AB_NAMESPACE \
    --featuresToCheck '["CATALOG", "IAP", "ENTITLEMENT"]' \
    --force 'true' \
    --storeId 'hI3ceGoe' \
    > test.out 2>&1
eval_tap $? 137 'DeleteItem' test.out

#- 138 AcquireItem
# body param: body
echo '{"count": 14, "orderNo": "xSMPtWyp"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op AcquireItem \
    --itemId '0yOb55EZ' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 138 'AcquireItem' test.out

#- 139 GetApp
$CLI_EXE \
    --sn platform \
    --op GetApp \
    --itemId 'QEOtGyIZ' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --storeId 'rQvQf0AW' \
    > test.out 2>&1
eval_tap $? 139 'GetApp' test.out

#- 140 UpdateApp
# body param: body
echo '{"carousel": [{"alt": "6FCbPhTz", "previewUrl": "PQzcFvA8", "thumbnailUrl": "hou2L4U3", "type": "image", "url": "mpz9iPlb", "videoSource": "generic"}, {"alt": "3jHcOLbg", "previewUrl": "Ls2y3XbP", "thumbnailUrl": "DvriToqb", "type": "video", "url": "jKHzKik9", "videoSource": "youtube"}, {"alt": "kOVDIHGH", "previewUrl": "gzvjQC4o", "thumbnailUrl": "CZEXq2eG", "type": "video", "url": "yhAkXILU", "videoSource": "vimeo"}], "developer": "v1gOCNUj", "forumUrl": "qjekgZVe", "genres": ["Casual", "Sports", "Strategy"], "localizations": {"PdV07qrF": {"announcement": "UeIuhqlF", "slogan": "aMssibIb"}, "YYw67Blc": {"announcement": "jXGtrqZ8", "slogan": "FoeFziZv"}, "NAGHCroe": {"announcement": "uXH84R3s", "slogan": "vbKcIKML"}}, "platformRequirements": {"6BfObTyj": [{"additionals": "tq03BdHV", "directXVersion": "095UcXeN", "diskSpace": "6zVY3wAB", "graphics": "pWk8c20I", "label": "vwrlWFKP", "osVersion": "q9OmR3aB", "processor": "yfo4ncXF", "ram": "5F7zfIBX", "soundCard": "D2ZsFas1"}, {"additionals": "bwfW8jEB", "directXVersion": "Rf4rCIQd", "diskSpace": "6cxVYdGl", "graphics": "dXYQO5XI", "label": "fUlKsN2o", "osVersion": "Jktp0Ofb", "processor": "ZmimcEw1", "ram": "MCNDVL0U", "soundCard": "sOXaZnO8"}, {"additionals": "FgsYNgKq", "directXVersion": "8eS0gTqI", "diskSpace": "nOJy39lE", "graphics": "3kRAtH9J", "label": "0jsqd54v", "osVersion": "ELhxg4pg", "processor": "bb2B2Hkw", "ram": "jjDpQNyu", "soundCard": "D9VVdSc1"}], "nJ0sXY7f": [{"additionals": "Xu2K7gjT", "directXVersion": "yUrdjL1O", "diskSpace": "xRhT40oC", "graphics": "ffXOnByf", "label": "C5j8Wifr", "osVersion": "onFQi4bz", "processor": "HOfKfp8H", "ram": "8awqRPvu", "soundCard": "puVuLSBt"}, {"additionals": "jeFYf6mK", "directXVersion": "AdVArR35", "diskSpace": "jqukNvOW", "graphics": "ns7YNJAc", "label": "YqFYIlh5", "osVersion": "zqWDzBGj", "processor": "iSX9XT5b", "ram": "nfOQw97K", "soundCard": "k6KF5TmU"}, {"additionals": "3HUUfKU3", "directXVersion": "4dVJAYDO", "diskSpace": "BCX80vE4", "graphics": "AlMmdC7u", "label": "ohxDClPf", "osVersion": "iUNGJrst", "processor": "vxSU2eJB", "ram": "2aAKh7BJ", "soundCard": "Lr8QFhtM"}], "zWSp4pVa": [{"additionals": "Gz1vmUzJ", "directXVersion": "YYAB8f7X", "diskSpace": "4CBzMsup", "graphics": "JGf4Lt6x", "label": "9vd8a9PQ", "osVersion": "ORLzM26q", "processor": "n7QnEDwa", "ram": "Au9N9ThU", "soundCard": "twNn8uqI"}, {"additionals": "Y2q6d0zY", "directXVersion": "ucnkt1fS", "diskSpace": "05yCGYQ7", "graphics": "EhMRvItK", "label": "8A95pbUK", "osVersion": "ooa4CdVL", "processor": "Ml7erx3o", "ram": "CuO9UxXf", "soundCard": "NdqjR8cw"}, {"additionals": "Ge1qxbnR", "directXVersion": "gRgJCJoC", "diskSpace": "ikPt66Zq", "graphics": "zSM1Fvo7", "label": "EmMFRVnL", "osVersion": "DT2TNJiL", "processor": "HFjsFhIp", "ram": "S45T0kP3", "soundCard": "Aw7DHcBy"}]}, "platforms": ["MacOS", "MacOS", "MacOS"], "players": ["CrossPlatformMulti", "LocalCoop", "CrossPlatformMulti"], "primaryGenre": "Action", "publisher": "UPVMkdk7", "releaseDate": "1983-10-01T00:00:00Z", "websiteUrl": "0btfC0UY"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateApp \
    --itemId 'mkjk3iZ1' \
    --namespace $AB_NAMESPACE \
    --storeId 'BK7LKsJn' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 140 'UpdateApp' test.out

#- 141 DisableItem
# body param: body
echo '{"featuresToCheck": ["CATALOG", "DLC", "ENTITLEMENT"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op DisableItem \
    --itemId '8aOPiHXJ' \
    --namespace $AB_NAMESPACE \
    --storeId 'HRQdvb0Z' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 141 'DisableItem' test.out

#- 142 GetItemDynamicData
$CLI_EXE \
    --sn platform \
    --op GetItemDynamicData \
    --itemId 'FPDmTLl8' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 142 'GetItemDynamicData' test.out

#- 143 EnableItem
$CLI_EXE \
    --sn platform \
    --op EnableItem \
    --itemId 'H14W686B' \
    --namespace $AB_NAMESPACE \
    --storeId 'srBjpPxf' \
    > test.out 2>&1
eval_tap $? 143 'EnableItem' test.out

#- 144 FeatureItem
$CLI_EXE \
    --sn platform \
    --op FeatureItem \
    --feature 'ZokQp73j' \
    --itemId 'sgYFoDpU' \
    --namespace $AB_NAMESPACE \
    --storeId 'G6qoNsCZ' \
    > test.out 2>&1
eval_tap $? 144 'FeatureItem' test.out

#- 145 DefeatureItem
$CLI_EXE \
    --sn platform \
    --op DefeatureItem \
    --feature 'aCH3KWIq' \
    --itemId 'hjqcO2QG' \
    --namespace $AB_NAMESPACE \
    --storeId 'xpkLUPcP' \
    > test.out 2>&1
eval_tap $? 145 'DefeatureItem' test.out

#- 146 GetLocaleItem
$CLI_EXE \
    --sn platform \
    --op GetLocaleItem \
    --itemId 'LLo0Bfbo' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --language 'sLRAl4Om' \
    --populateBundle 'true' \
    --region 'HJg53Lw0' \
    --storeId 'mrjNlQrv' \
    > test.out 2>&1
eval_tap $? 146 'GetLocaleItem' test.out

#- 147 UpdateItemPurchaseCondition
# body param: body
echo '{"purchaseCondition": {"conditionGroups": [{"operator": "and", "predicates": [{"anyOf": 21, "code": "soOwXCi9", "comparison": "isLessThanOrEqual", "name": "srLrsGdN", "predicateType": "SeasonPassPredicate", "value": "YQlJWzod", "values": ["JofZ9H6C", "7X2kwzJl", "5snLZNsF"]}, {"anyOf": 76, "code": "HfB7JuEV", "comparison": "isLessThanOrEqual", "name": "fYT34IAv", "predicateType": "EntitlementPredicate", "value": "bzqWeD4l", "values": ["F0bnK45K", "ot1a4x7C", "Ol8gJ3pC"]}, {"anyOf": 92, "code": "7om3UZK2", "comparison": "includes", "name": "06H9MXBJ", "predicateType": "SeasonTierPredicate", "value": "vPddtMeT", "values": ["YlU47k2B", "4y70hnB5", "OqUwYWOw"]}]}, {"operator": "or", "predicates": [{"anyOf": 16, "code": "96AUxspz", "comparison": "isNot", "name": "VaAEg1S2", "predicateType": "EntitlementPredicate", "value": "cjbH97up", "values": ["M4H6Vbhm", "vctJffsO", "khUQAIkj"]}, {"anyOf": 41, "code": "DBxASE7i", "comparison": "isNot", "name": "hTNEe5EC", "predicateType": "SeasonPassPredicate", "value": "tK2MVGv2", "values": ["uM2jidKH", "DzeNOgFa", "UqSgWYp2"]}, {"anyOf": 37, "code": "fVUOmT2P", "comparison": "excludes", "name": "OObp6fBZ", "predicateType": "EntitlementPredicate", "value": "156hcybR", "values": ["zuvXtc3a", "oWaTv6xF", "XGnio4vb"]}]}, {"operator": "or", "predicates": [{"anyOf": 12, "code": "bX5kFQB2", "comparison": "excludes", "name": "SoBpkNnl", "predicateType": "StatisticCodePredicate", "value": "2MFEC5yr", "values": ["97PZRmij", "q2FFlGLG", "AP9igQHz"]}, {"anyOf": 71, "code": "5WTdsYnY", "comparison": "is", "name": "EfQf3GeE", "predicateType": "SeasonPassPredicate", "value": "CgCCGnRC", "values": ["kjW57zAD", "icL1lDLe", "PZ5kUdSB"]}, {"anyOf": 44, "code": "9noIzkoL", "comparison": "is", "name": "KVe91CA8", "predicateType": "SeasonPassPredicate", "value": "4yF1Jutu", "values": ["bU67Afnd", "tiPhlTMx", "gCPb44wY"]}]}]}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateItemPurchaseCondition \
    --itemId 'yNfppKuc' \
    --namespace $AB_NAMESPACE \
    --storeId 'eNaYWRWB' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 147 'UpdateItemPurchaseCondition' test.out

#- 148 QueryItemReferences
$CLI_EXE \
    --sn platform \
    --op QueryItemReferences \
    --itemId 'WZR68uQT' \
    --namespace $AB_NAMESPACE \
    --featuresToCheck '["CATALOG", "ENTITLEMENT", "ENTITLEMENT"]' \
    --storeId 'P87Mbw17' \
    > test.out 2>&1
eval_tap $? 148 'QueryItemReferences' test.out

#- 149 ReturnItem
# body param: body
echo '{"orderNo": "Yc7wvVwo"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ReturnItem \
    --itemId 'OKcq2LAP' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 149 'ReturnItem' test.out

#- 150 QueryKeyGroups
$CLI_EXE \
    --sn platform \
    --op QueryKeyGroups \
    --namespace $AB_NAMESPACE \
    --limit '79' \
    --name 'rCDXzXHG' \
    --offset '58' \
    --tag 'P4fpvhWN' \
    > test.out 2>&1
eval_tap $? 150 'QueryKeyGroups' test.out

#- 151 CreateKeyGroup
# body param: body
echo '{"description": "jjNKfWMk", "name": "IIxum33V", "status": "ACTIVE", "tags": ["Qii7Kslm", "FL808yaU", "iunLE1Tk"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateKeyGroup \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 151 'CreateKeyGroup' test.out

#- 152 GetKeyGroupByBoothName
eval_tap 0 152 'GetKeyGroupByBoothName # SKIP deprecated' test.out

#- 153 GetKeyGroup
$CLI_EXE \
    --sn platform \
    --op GetKeyGroup \
    --keyGroupId 'XUUHvf5R' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 153 'GetKeyGroup' test.out

#- 154 UpdateKeyGroup
# body param: body
echo '{"description": "yiIymZhV", "name": "UmqgsiGm", "status": "INACTIVE", "tags": ["376r86Ol", "ZSEqRJ55", "cyKZXWYK"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateKeyGroup \
    --keyGroupId '7XQ42ECr' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 154 'UpdateKeyGroup' test.out

#- 155 GetKeyGroupDynamic
$CLI_EXE \
    --sn platform \
    --op GetKeyGroupDynamic \
    --keyGroupId '78Ss8mau' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 155 'GetKeyGroupDynamic' test.out

#- 156 ListKeys
$CLI_EXE \
    --sn platform \
    --op ListKeys \
    --keyGroupId 'ZZgnutNw' \
    --namespace $AB_NAMESPACE \
    --limit '68' \
    --offset '55' \
    --status 'ACTIVE' \
    > test.out 2>&1
eval_tap $? 156 'ListKeys' test.out

#- 157 UploadKeys
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UploadKeys \
    --keyGroupId '3abzXeRf' \
    --namespace $AB_NAMESPACE \
    --upload file $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 157 'UploadKeys' test.out

#- 158 QueryOrders
$CLI_EXE \
    --sn platform \
    --op QueryOrders \
    --namespace $AB_NAMESPACE \
    --endTime 'sce1NGam' \
    --limit '35' \
    --offset '50' \
    --orderNos '["VmLGBOtk", "nxFSK1xT", "hwIzoQSD"]' \
    --sortBy 'FAbWjSki' \
    --startTime 'JyBjL95M' \
    --status 'CHARGEBACK' \
    --withTotal 'true' \
    > test.out 2>&1
eval_tap $? 158 'QueryOrders' test.out

#- 159 GetOrderStatistics
$CLI_EXE \
    --sn platform \
    --op GetOrderStatistics \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 159 'GetOrderStatistics' test.out

#- 160 GetOrder
$CLI_EXE \
    --sn platform \
    --op GetOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'OGtKjlFw' \
    > test.out 2>&1
eval_tap $? 160 'GetOrder' test.out

#- 161 RefundOrder
# body param: body
echo '{"description": "E4SoHNBP"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RefundOrder \
    --namespace $AB_NAMESPACE \
    --orderNo '2uBNDTeX' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 161 'RefundOrder' test.out

#- 162 GetPaymentCallbackConfig
eval_tap 0 162 'GetPaymentCallbackConfig # SKIP deprecated' test.out

#- 163 UpdatePaymentCallbackConfig
eval_tap 0 163 'UpdatePaymentCallbackConfig # SKIP deprecated' test.out

#- 164 GetPaymentMerchantConfig
$CLI_EXE \
    --sn platform \
    --op GetPaymentMerchantConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 164 'GetPaymentMerchantConfig' test.out

#- 165 UpdatePaymentDomainWhitelistConfig
# body param: body
echo '{"domains": ["WLL8GV9l", "BD4fjjE7", "6qAn6XpR"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePaymentDomainWhitelistConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 165 'UpdatePaymentDomainWhitelistConfig' test.out

#- 166 QueryPaymentNotifications
$CLI_EXE \
    --sn platform \
    --op QueryPaymentNotifications \
    --namespace $AB_NAMESPACE \
    --endDate 'qXqeD2Td' \
    --externalId 'Im6Xg4PG' \
    --limit '3' \
    --notificationSource 'NEONPAY' \
    --notificationType 'tsrxWCUc' \
    --offset '87' \
    --paymentOrderNo 'w2CFYDBV' \
    --startDate 'HKM6uioL' \
    --status 'ERROR' \
    > test.out 2>&1
eval_tap $? 166 'QueryPaymentNotifications' test.out

#- 167 QueryPaymentOrders
$CLI_EXE \
    --sn platform \
    --op QueryPaymentOrders \
    --namespace $AB_NAMESPACE \
    --channel 'INTERNAL' \
    --extTxId '3S7XFnCl' \
    --limit '72' \
    --offset '26' \
    --status 'AUTHORISE_FAILED' \
    > test.out 2>&1
eval_tap $? 167 'QueryPaymentOrders' test.out

#- 168 CreatePaymentOrderByDedicated
# body param: body
echo '{"currencyCode": "GoASaDRX", "currencyNamespace": "FkRVueK6", "customParameters": {"Jspx5uqN": {}, "2WuIu0CE": {}, "l18fXHgu": {}}, "description": "Is14tzZr", "extOrderNo": "s4lV3t9V", "extUserId": "88OpQ2fC", "itemType": "APP", "language": "gTdb-053", "metadata": {"sSvNqnId": "sr9LVEBU", "SuSaBpo4": "GiJBd7Pg", "gq9awWOL": "5R47YWN7"}, "notifyUrl": "7fjsN1Tk", "omitNotification": false, "platform": "SmtVHWYy", "price": 88, "recurringPaymentOrderNo": "bvvVUf3h", "region": "0vkPKKmr", "returnUrl": "bTorAPlw", "sandbox": true, "sku": "RtF2Y5cQ", "subscriptionId": "wpT35Iyu", "targetNamespace": "pwD9U6Uk", "targetUserId": "MHVHXuv6", "title": "mnVG9wuJ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreatePaymentOrderByDedicated \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 168 'CreatePaymentOrderByDedicated' test.out

#- 169 ListExtOrderNoByExtTxId
$CLI_EXE \
    --sn platform \
    --op ListExtOrderNoByExtTxId \
    --namespace $AB_NAMESPACE \
    --extTxId 'eWatrpyv' \
    > test.out 2>&1
eval_tap $? 169 'ListExtOrderNoByExtTxId' test.out

#- 170 GetPaymentOrder
$CLI_EXE \
    --sn platform \
    --op GetPaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'Qb2QAgMH' \
    > test.out 2>&1
eval_tap $? 170 'GetPaymentOrder' test.out

#- 171 ChargePaymentOrder
# body param: body
echo '{"extTxId": "xO6iQcar", "paymentMethod": "baZObVEq", "paymentProvider": "XSOLLA"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ChargePaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'eNBAleFN' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 171 'ChargePaymentOrder' test.out

#- 172 RefundPaymentOrderByDedicated
# body param: body
echo '{"description": "VSDRgh0s"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RefundPaymentOrderByDedicated \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'W9tEUFDt' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 172 'RefundPaymentOrderByDedicated' test.out

#- 173 SimulatePaymentOrderNotification
# body param: body
echo '{"amount": 66, "currencyCode": "XwwbZ41C", "notifyType": "CHARGE", "paymentProvider": "PAYPAL", "salesTax": 16, "vat": 24}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SimulatePaymentOrderNotification \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo '734WUlRX' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 173 'SimulatePaymentOrderNotification' test.out

#- 174 GetPaymentOrderChargeStatus
$CLI_EXE \
    --sn platform \
    --op GetPaymentOrderChargeStatus \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'iJbtBjAb' \
    > test.out 2>&1
eval_tap $? 174 'GetPaymentOrderChargeStatus' test.out

#- 175 GetPsnEntitlementOwnership
# body param: body
echo '{"accessToken": "VOsp6D4X", "serviceLabel": 31}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op GetPsnEntitlementOwnership \
    --entitlementLabel 'rGMaHQ9e' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 175 'GetPsnEntitlementOwnership' test.out

#- 176 GetXboxEntitlementOwnership
# body param: body
echo '{"delegationToken": "NZFNou75", "sandboxId": "CmU5E6IV"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op GetXboxEntitlementOwnership \
    --namespace $AB_NAMESPACE \
    --productSku 'hRyI7iEZ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 176 'GetXboxEntitlementOwnership' test.out

#- 177 GetPlatformEntitlementConfig
$CLI_EXE \
    --sn platform \
    --op GetPlatformEntitlementConfig \
    --namespace $AB_NAMESPACE \
    --platform 'Epic' \
    > test.out 2>&1
eval_tap $? 177 'GetPlatformEntitlementConfig' test.out

#- 178 UpdatePlatformEntitlementConfig
# body param: body
echo '{"allowedPlatformOrigins": ["Steam", "Twitch", "Epic"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePlatformEntitlementConfig \
    --namespace $AB_NAMESPACE \
    --platform 'Nintendo' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 178 'UpdatePlatformEntitlementConfig' test.out

#- 179 GetPlatformWalletConfig
$CLI_EXE \
    --sn platform \
    --op GetPlatformWalletConfig \
    --namespace $AB_NAMESPACE \
    --platform 'Xbox' \
    > test.out 2>&1
eval_tap $? 179 'GetPlatformWalletConfig' test.out

#- 180 UpdatePlatformWalletConfig
# body param: body
echo '{"allowedBalanceOrigins": ["System", "IOS", "Nintendo"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePlatformWalletConfig \
    --namespace $AB_NAMESPACE \
    --platform 'IOS' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 180 'UpdatePlatformWalletConfig' test.out

#- 181 ResetPlatformWalletConfig
$CLI_EXE \
    --sn platform \
    --op ResetPlatformWalletConfig \
    --namespace $AB_NAMESPACE \
    --platform 'Xbox' \
    > test.out 2>&1
eval_tap $? 181 'ResetPlatformWalletConfig' test.out

#- 182 GetRevocationConfig
$CLI_EXE \
    --sn platform \
    --op GetRevocationConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 182 'GetRevocationConfig' test.out

#- 183 UpdateRevocationConfig
# body param: body
echo '{"entitlement": {"consumable": {"enabled": false, "strategy": "CUSTOM"}, "durable": {"enabled": false, "strategy": "REVOKE_OR_REPORT"}}, "wallet": {"enabled": false, "strategy": "CUSTOM"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateRevocationConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 183 'UpdateRevocationConfig' test.out

#- 184 DeleteRevocationConfig
$CLI_EXE \
    --sn platform \
    --op DeleteRevocationConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 184 'DeleteRevocationConfig' test.out

#- 185 QueryRevocationHistories
$CLI_EXE \
    --sn platform \
    --op QueryRevocationHistories \
    --namespace $AB_NAMESPACE \
    --endTime 'iwrfWlnF' \
    --limit '4' \
    --offset '57' \
    --source 'ORDER' \
    --startTime '8skM9Zzn' \
    --status 'SUCCESS' \
    --transactionId 'xc4axUcS' \
    --userId 'yR21sF63' \
    > test.out 2>&1
eval_tap $? 185 'QueryRevocationHistories' test.out

#- 186 GetRevocationPluginConfig
$CLI_EXE \
    --sn platform \
    --op GetRevocationPluginConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 186 'GetRevocationPluginConfig' test.out

#- 187 UpdateRevocationPluginConfig
# body param: body
echo '{"appConfig": {"appName": "jg5ulfKA"}, "customConfig": {"connectionType": "INSECURE", "grpcServerAddress": "5kgEreyL"}, "extendType": "APP"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateRevocationPluginConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 187 'UpdateRevocationPluginConfig' test.out

#- 188 DeleteRevocationPluginConfig
$CLI_EXE \
    --sn platform \
    --op DeleteRevocationPluginConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 188 'DeleteRevocationPluginConfig' test.out

#- 189 UploadRevocationPluginConfigCert
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UploadRevocationPluginConfigCert \
    --namespace $AB_NAMESPACE \
    --upload file $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 189 'UploadRevocationPluginConfigCert' test.out

#- 190 CreateReward
# body param: body
echo '{"description": "BhjYTX0U", "eventTopic": "wTZCEIlH", "maxAwarded": 53, "maxAwardedPerUser": 58, "namespaceExpression": "nKJBayH4", "rewardCode": "nxy7yjAE", "rewardConditions": [{"condition": "9i1xDOFQ", "conditionName": "aS4VGQuA", "eventName": "2yaWMOkx", "rewardItems": [{"duration": 5, "endDate": "1992-12-05T00:00:00Z", "identityType": "ITEM_ID", "itemId": "IIUUSTOT", "quantity": 79, "sku": "OzdOFjGK"}, {"duration": 54, "endDate": "1982-01-30T00:00:00Z", "identityType": "ITEM_ID", "itemId": "FEirfH2S", "quantity": 39, "sku": "0uWzCiwX"}, {"duration": 32, "endDate": "1992-02-18T00:00:00Z", "identityType": "ITEM_SKU", "itemId": "nvtBrv3c", "quantity": 57, "sku": "dOOUGXUr"}]}, {"condition": "BX0MEY29", "conditionName": "5VYacTJw", "eventName": "j7WJPmtT", "rewardItems": [{"duration": 82, "endDate": "1982-04-03T00:00:00Z", "identityType": "ITEM_ID", "itemId": "6JgVKqwp", "quantity": 36, "sku": "Yi3ilrIa"}, {"duration": 41, "endDate": "1992-03-22T00:00:00Z", "identityType": "ITEM_ID", "itemId": "CbCl4ZzR", "quantity": 14, "sku": "WIXZL0uh"}, {"duration": 38, "endDate": "1987-11-01T00:00:00Z", "identityType": "ITEM_ID", "itemId": "sjapIcUD", "quantity": 10, "sku": "8NFZnw6a"}]}, {"condition": "Aosypjn9", "conditionName": "iq0qZ25F", "eventName": "2EcnJXOv", "rewardItems": [{"duration": 34, "endDate": "1989-07-07T00:00:00Z", "identityType": "ITEM_SKU", "itemId": "gzpLtYhL", "quantity": 97, "sku": "Oqfc8U10"}, {"duration": 10, "endDate": "1972-05-24T00:00:00Z", "identityType": "ITEM_SKU", "itemId": "72D8xSlG", "quantity": 16, "sku": "bVg9YSeu"}, {"duration": 73, "endDate": "1999-12-09T00:00:00Z", "identityType": "ITEM_ID", "itemId": "5zSpF9hT", "quantity": 46, "sku": "Dus3r1cG"}]}], "userIdExpression": "WPdFFx8e"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateReward \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 190 'CreateReward' test.out

#- 191 QueryRewards
$CLI_EXE \
    --sn platform \
    --op QueryRewards \
    --namespace $AB_NAMESPACE \
    --eventTopic 'pl7mu1aD' \
    --limit '59' \
    --offset '43' \
    --sortBy '["rewardCode:desc", "namespace"]' \
    > test.out 2>&1
eval_tap $? 191 'QueryRewards' test.out

#- 192 ExportRewards
$CLI_EXE \
    --sn platform \
    --op ExportRewards \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 192 'ExportRewards' test.out

#- 193 ImportRewards
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op ImportRewards \
    --namespace $AB_NAMESPACE \
    --replaceExisting 'false' \
    --upload file $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 193 'ImportRewards' test.out

#- 194 GetReward
$CLI_EXE \
    --sn platform \
    --op GetReward \
    --namespace $AB_NAMESPACE \
    --rewardId '9lFWNsay' \
    > test.out 2>&1
eval_tap $? 194 'GetReward' test.out

#- 195 UpdateReward
# body param: body
echo '{"description": "uUA18MIn", "eventTopic": "XLv06T0E", "maxAwarded": 41, "maxAwardedPerUser": 20, "namespaceExpression": "tWehTtxY", "rewardCode": "m4RI0cYh", "rewardConditions": [{"condition": "uCHJgYEe", "conditionName": "2VNpqodm", "eventName": "rgZWq7nW", "rewardItems": [{"duration": 30, "endDate": "1989-01-28T00:00:00Z", "identityType": "ITEM_SKU", "itemId": "QxqYVbeo", "quantity": 37, "sku": "TlqMxLCx"}, {"duration": 9, "endDate": "1983-12-10T00:00:00Z", "identityType": "ITEM_ID", "itemId": "1zyhpvZj", "quantity": 52, "sku": "Dw8txa38"}, {"duration": 68, "endDate": "1994-08-15T00:00:00Z", "identityType": "ITEM_SKU", "itemId": "0JqyIa77", "quantity": 26, "sku": "0wLk4sw4"}]}, {"condition": "rXcKCsoV", "conditionName": "uK7xbHlO", "eventName": "tUSuoXjn", "rewardItems": [{"duration": 63, "endDate": "1996-12-26T00:00:00Z", "identityType": "ITEM_SKU", "itemId": "ecD0vpHw", "quantity": 11, "sku": "NRcl1gcr"}, {"duration": 87, "endDate": "1991-12-25T00:00:00Z", "identityType": "ITEM_SKU", "itemId": "pH8kBVJs", "quantity": 94, "sku": "KktUKj0b"}, {"duration": 99, "endDate": "1981-01-24T00:00:00Z", "identityType": "ITEM_ID", "itemId": "oSz4vooY", "quantity": 16, "sku": "5DqY2st1"}]}, {"condition": "EeyjodEI", "conditionName": "TIh568G0", "eventName": "g7537g33", "rewardItems": [{"duration": 1, "endDate": "1999-11-30T00:00:00Z", "identityType": "ITEM_ID", "itemId": "DYdefUj2", "quantity": 87, "sku": "R1ljFLoJ"}, {"duration": 17, "endDate": "1978-06-14T00:00:00Z", "identityType": "ITEM_SKU", "itemId": "tNN1FWrT", "quantity": 78, "sku": "PlgAi0CX"}, {"duration": 14, "endDate": "1988-07-05T00:00:00Z", "identityType": "ITEM_SKU", "itemId": "t3Zu1y81", "quantity": 26, "sku": "Vamlkip2"}]}], "userIdExpression": "dFJJLAXW"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateReward \
    --namespace $AB_NAMESPACE \
    --rewardId 'xCWy7gfc' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 195 'UpdateReward' test.out

#- 196 DeleteReward
$CLI_EXE \
    --sn platform \
    --op DeleteReward \
    --namespace $AB_NAMESPACE \
    --rewardId 'ZD1cYMN5' \
    > test.out 2>&1
eval_tap $? 196 'DeleteReward' test.out

#- 197 CheckEventCondition
# body param: body
echo '{"payload": {"ef4sbzxX": {}, "bl6sgp9b": {}, "B6m52KgB": {}}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CheckEventCondition \
    --namespace $AB_NAMESPACE \
    --rewardId 'vXt2zEbi' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 197 'CheckEventCondition' test.out

#- 198 DeleteRewardConditionRecord
# body param: body
echo '{"conditionName": "zGkWqTbe", "userId": "DJ7SG2Zg"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op DeleteRewardConditionRecord \
    --namespace $AB_NAMESPACE \
    --rewardId 'aJJ5KAGJ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 198 'DeleteRewardConditionRecord' test.out

#- 199 QuerySections
$CLI_EXE \
    --sn platform \
    --op QuerySections \
    --namespace $AB_NAMESPACE \
    --end 'cq63oAtd' \
    --limit '9' \
    --offset '68' \
    --start 'wgjUCjlo' \
    --storeId 'kWpWqooV' \
    --viewId 'rud4ME7b' \
    > test.out 2>&1
eval_tap $? 199 'QuerySections' test.out

#- 200 CreateSection
# body param: body
echo '{"active": true, "displayOrder": 5, "endDate": "1986-05-27T00:00:00Z", "ext": {"OBna4l1P": {}, "qFZyHsbd": {}, "Js45MCf8": {}}, "fixedPeriodRotationConfig": {"backfillType": "CUSTOM", "duration": 8, "itemCount": 71, "rule": "SEQUENCE"}, "items": [{"id": "Ykhegjmp", "sku": "FmwIAMJ9"}, {"id": "Sgg8myou", "sku": "P0JWGTRl"}, {"id": "KAglDzdo", "sku": "vlRUMvCp"}], "localizations": {"R4ukz2LY": {"description": "nLcU7TMV", "localExt": {"bXz665wU": {}, "y4yE0gZW": {}, "FYn1t1cu": {}}, "longDescription": "3KY47U6o", "title": "sRre21zi"}, "9bdAhqLW": {"description": "UvVaRjal", "localExt": {"LkwDtdHZ": {}, "YLAAJfWR": {}, "gEIIlCFu": {}}, "longDescription": "dIS7nVNS", "title": "nBV6xFAK"}, "QYx6bat0": {"description": "wrmttZT3", "localExt": {"H8KoRqpg": {}, "vSL05nmr": {}, "egjoYd35": {}}, "longDescription": "8Zoa0zXi", "title": "04E6JhGn"}}, "name": "LFAdcI8f", "rotationType": "CUSTOM", "startDate": "1988-05-11T00:00:00Z", "viewId": "SmjFLZIl"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateSection \
    --namespace $AB_NAMESPACE \
    --storeId 'Okj8szjF' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 200 'CreateSection' test.out

#- 201 PurgeExpiredSection
$CLI_EXE \
    --sn platform \
    --op PurgeExpiredSection \
    --namespace $AB_NAMESPACE \
    --storeId 'v0ea6WuC' \
    > test.out 2>&1
eval_tap $? 201 'PurgeExpiredSection' test.out

#- 202 GetSection
$CLI_EXE \
    --sn platform \
    --op GetSection \
    --namespace $AB_NAMESPACE \
    --sectionId 'Kdeixvll' \
    --storeId 'v44FZOeb' \
    > test.out 2>&1
eval_tap $? 202 'GetSection' test.out

#- 203 UpdateSection
# body param: body
echo '{"active": true, "displayOrder": 13, "endDate": "1980-07-29T00:00:00Z", "ext": {"hZaZ5DdX": {}, "5IcrnVyj": {}, "9qtnyepG": {}}, "fixedPeriodRotationConfig": {"backfillType": "NONE", "duration": 7, "itemCount": 19, "rule": "SEQUENCE"}, "items": [{"id": "5HMGaKB3", "sku": "2DUzvStA"}, {"id": "bmjc40VQ", "sku": "vPgzrTs9"}, {"id": "dzDoCjaq", "sku": "jfOkrKbM"}], "localizations": {"wpDIGUc7": {"description": "KIlrYbVQ", "localExt": {"0REWaGWh": {}, "eim4VGoh": {}, "soCGKffi": {}}, "longDescription": "rzKsQqpR", "title": "wNDKW6v0"}, "p9TGlav5": {"description": "LrmW4nJy", "localExt": {"fk3EeW0z": {}, "24ufVCwh": {}, "tIYssJNB": {}}, "longDescription": "3CtR2rTe", "title": "1VVUI0Jd"}, "GX05nFnt": {"description": "fYsuPLiH", "localExt": {"7n9sGa4A": {}, "zw8e3OAF": {}, "9ZCrSLzS": {}}, "longDescription": "j1MlPx9s", "title": "WBepIwb6"}}, "name": "Gm5dA79j", "rotationType": "NONE", "startDate": "1999-02-08T00:00:00Z", "viewId": "0QM83iRS"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateSection \
    --namespace $AB_NAMESPACE \
    --sectionId 'ihampXF3' \
    --storeId 'jd6mkfBr' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 203 'UpdateSection' test.out

#- 204 DeleteSection
$CLI_EXE \
    --sn platform \
    --op DeleteSection \
    --namespace $AB_NAMESPACE \
    --sectionId 'qPrBKpzq' \
    --storeId 'dcGvm23d' \
    > test.out 2>&1
eval_tap $? 204 'DeleteSection' test.out

#- 205 ListStores
$CLI_EXE \
    --sn platform \
    --op ListStores \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 205 'ListStores' test.out

#- 206 CreateStore
# body param: body
echo '{"defaultLanguage": "sZsLxX6m", "defaultRegion": "sKphwLGQ", "description": "aitQ7PlF", "supportedLanguages": ["a7BEdFqm", "kRmZCzyw", "GKdmtEqW"], "supportedRegions": ["uCZpqvVb", "5rV1dQNg", "0Eg17E9o"], "title": "JeO6MCD9"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateStore \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 206 'CreateStore' test.out

#- 207 GetCatalogDefinition
$CLI_EXE \
    --sn platform \
    --op GetCatalogDefinition \
    --namespace $AB_NAMESPACE \
    --catalogType 'VIEW' \
    > test.out 2>&1
eval_tap $? 207 'GetCatalogDefinition' test.out

#- 208 DownloadCSVTemplates
$CLI_EXE \
    --sn platform \
    --op DownloadCSVTemplates \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 208 'DownloadCSVTemplates' test.out

#- 209 ExportStoreByCSV
# body param: body
echo '{"catalogType": "CATEGORY", "fieldsToBeIncluded": ["TLwpUaEu", "T7mQWVrU", "KEnOi9mQ"], "idsToBeExported": ["5SnXwD2k", "xmgEzvhy", "NpbqKMkf"], "storeId": "wC2ovdSt"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ExportStoreByCSV \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 209 'ExportStoreByCSV' test.out

#- 210 ImportStore
eval_tap 0 210 'ImportStore # SKIP deprecated' test.out

#- 211 GetPublishedStore
$CLI_EXE \
    --sn platform \
    --op GetPublishedStore \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 211 'GetPublishedStore' test.out

#- 212 DeletePublishedStore
$CLI_EXE \
    --sn platform \
    --op DeletePublishedStore \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 212 'DeletePublishedStore' test.out

#- 213 GetPublishedStoreBackup
$CLI_EXE \
    --sn platform \
    --op GetPublishedStoreBackup \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 213 'GetPublishedStoreBackup' test.out

#- 214 RollbackPublishedStore
$CLI_EXE \
    --sn platform \
    --op RollbackPublishedStore \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 214 'RollbackPublishedStore' test.out

#- 215 GetStore
$CLI_EXE \
    --sn platform \
    --op GetStore \
    --namespace $AB_NAMESPACE \
    --storeId 'dYhIXBpA' \
    > test.out 2>&1
eval_tap $? 215 'GetStore' test.out

#- 216 UpdateStore
# body param: body
echo '{"defaultLanguage": "UhKWsacX", "defaultRegion": "0speOIOf", "description": "csFXUp5H", "supportedLanguages": ["tcuXmJxV", "7FVxli9U", "6Cqzmbix"], "supportedRegions": ["aTfXcFic", "IjWg13Pt", "sJEv8zyg"], "title": "WpB37sSv"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateStore \
    --namespace $AB_NAMESPACE \
    --storeId 'o2Vn8LX9' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 216 'UpdateStore' test.out

#- 217 DeleteStore
$CLI_EXE \
    --sn platform \
    --op DeleteStore \
    --namespace $AB_NAMESPACE \
    --storeId '4u1vl9pO' \
    > test.out 2>&1
eval_tap $? 217 'DeleteStore' test.out

#- 218 QueryChanges
$CLI_EXE \
    --sn platform \
    --op QueryChanges \
    --namespace $AB_NAMESPACE \
    --storeId 'ed149vmn' \
    --action 'DELETE' \
    --itemSku 'yX0nlPI0' \
    --itemType 'APP' \
    --limit '31' \
    --offset '34' \
    --selected 'true' \
    --sortBy '["updatedAt:asc", "updatedAt"]' \
    --status 'PUBLISHED' \
    --type 'ITEM' \
    --updatedAtEnd 'Beg7TYsy' \
    --updatedAtStart 'akMZzYt5' \
    --withTotal 'false' \
    > test.out 2>&1
eval_tap $? 218 'QueryChanges' test.out

#- 219 PublishAll
$CLI_EXE \
    --sn platform \
    --op PublishAll \
    --namespace $AB_NAMESPACE \
    --storeId 'wbVHva59' \
    > test.out 2>&1
eval_tap $? 219 'PublishAll' test.out

#- 220 PublishSelected
$CLI_EXE \
    --sn platform \
    --op PublishSelected \
    --namespace $AB_NAMESPACE \
    --storeId 'xCi9izMI' \
    > test.out 2>&1
eval_tap $? 220 'PublishSelected' test.out

#- 221 SelectAllRecords
$CLI_EXE \
    --sn platform \
    --op SelectAllRecords \
    --namespace $AB_NAMESPACE \
    --storeId '04B5NBh9' \
    > test.out 2>&1
eval_tap $? 221 'SelectAllRecords' test.out

#- 222 SelectAllRecordsByCriteria
$CLI_EXE \
    --sn platform \
    --op SelectAllRecordsByCriteria \
    --namespace $AB_NAMESPACE \
    --storeId '3cxhelYW' \
    --action 'CREATE' \
    --itemSku 'jl78jxto' \
    --itemType 'COINS' \
    --selected 'false' \
    --type 'STORE' \
    --updatedAtEnd 'whcrzZAJ' \
    --updatedAtStart 'VRic1O1y' \
    > test.out 2>&1
eval_tap $? 222 'SelectAllRecordsByCriteria' test.out

#- 223 GetStatistic
$CLI_EXE \
    --sn platform \
    --op GetStatistic \
    --namespace $AB_NAMESPACE \
    --storeId 'VuVFQMKn' \
    --action 'UPDATE' \
    --itemSku 'eDcL95mG' \
    --itemType 'SEASON' \
    --type 'SECTION' \
    --updatedAtEnd 'Fynlh8UY' \
    --updatedAtStart 'KeVdf1iG' \
    > test.out 2>&1
eval_tap $? 223 'GetStatistic' test.out

#- 224 UnselectAllRecords
$CLI_EXE \
    --sn platform \
    --op UnselectAllRecords \
    --namespace $AB_NAMESPACE \
    --storeId 'WFHRyrsU' \
    > test.out 2>&1
eval_tap $? 224 'UnselectAllRecords' test.out

#- 225 SelectRecord
$CLI_EXE \
    --sn platform \
    --op SelectRecord \
    --changeId 'lcQFRc8f' \
    --namespace $AB_NAMESPACE \
    --storeId 'xseK1BRs' \
    > test.out 2>&1
eval_tap $? 225 'SelectRecord' test.out

#- 226 UnselectRecord
$CLI_EXE \
    --sn platform \
    --op UnselectRecord \
    --changeId '0fHbydTk' \
    --namespace $AB_NAMESPACE \
    --storeId 'wBZD7xxF' \
    > test.out 2>&1
eval_tap $? 226 'UnselectRecord' test.out

#- 227 CloneStore
$CLI_EXE \
    --sn platform \
    --op CloneStore \
    --namespace $AB_NAMESPACE \
    --storeId '4M938hSU' \
    --targetStoreId 'cIbiIyKw' \
    > test.out 2>&1
eval_tap $? 227 'CloneStore' test.out

#- 228 ExportStore
eval_tap 0 228 'ExportStore # SKIP deprecated' test.out

#- 229 QueryImportHistory
$CLI_EXE \
    --sn platform \
    --op QueryImportHistory \
    --namespace $AB_NAMESPACE \
    --storeId 'Ge2G96Li' \
    --end 'HClq8NSg' \
    --limit '31' \
    --offset '4' \
    --sortBy 'HpD0DDw1' \
    --start '5j1YLK3e' \
    --success 'false' \
    > test.out 2>&1
eval_tap $? 229 'QueryImportHistory' test.out

#- 230 ImportStoreByCSV
# form data upload: category
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
# form data upload: display
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
# form data upload: item
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
# form data upload: section
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op ImportStoreByCSV \
    --namespace $AB_NAMESPACE \
    --storeId 'lMg0tahM' \
    --upload category $TEMP_FILE_UPLOAD \
    --upload display $TEMP_FILE_UPLOAD \
    --upload item $TEMP_FILE_UPLOAD \
    --notes 'ynUYa94Y' \
    --upload section $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 230 'ImportStoreByCSV' test.out

#- 231 QuerySubscriptions
$CLI_EXE \
    --sn platform \
    --op QuerySubscriptions \
    --namespace $AB_NAMESPACE \
    --chargeStatus 'CHARGED' \
    --itemId 'BGrexVni' \
    --limit '79' \
    --offset '67' \
    --sku '7madXRvM' \
    --status 'ACTIVE' \
    --subscribedBy 'USER' \
    --userId '6cyQTeyR' \
    > test.out 2>&1
eval_tap $? 231 'QuerySubscriptions' test.out

#- 232 RecurringChargeSubscription
$CLI_EXE \
    --sn platform \
    --op RecurringChargeSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'MGhPIIfH' \
    > test.out 2>&1
eval_tap $? 232 'RecurringChargeSubscription' test.out

#- 233 GetTicketDynamic
$CLI_EXE \
    --sn platform \
    --op GetTicketDynamic \
    --boothName '2dpqvTQx' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 233 'GetTicketDynamic' test.out

#- 234 DecreaseTicketSale
# body param: body
echo '{"orderNo": "95l1ei50"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op DecreaseTicketSale \
    --boothName 'fyMNjMC8' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 234 'DecreaseTicketSale' test.out

#- 235 GetTicketBoothID
$CLI_EXE \
    --sn platform \
    --op GetTicketBoothID \
    --boothName 'RClVlzdj' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 235 'GetTicketBoothID' test.out

#- 236 IncreaseTicketSale
# body param: body
echo '{"count": 79, "orderNo": "1J4yVvsU"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op IncreaseTicketSale \
    --boothName '7tySLbr0' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 236 'IncreaseTicketSale' test.out

#- 237 Commit
# body param: body
echo '{"actions": [{"operations": [{"creditPayload": {"balanceOrigin": "Playstation", "count": 15, "currencyCode": "WSmb9v1B", "expireAt": "1990-04-13T00:00:00Z"}, "debitPayload": {"count": 84, "currencyCode": "3jUrcyEd", "walletPlatform": "Epic"}, "fulFillItemPayload": {"count": 43, "entitlementCollectionId": "ZkayL16N", "entitlementOrigin": "Nintendo", "itemIdentity": "skjgQs8J", "itemIdentityType": "ITEM_ID"}, "revokeEntitlementPayload": {"count": 16, "entitlementId": "GKPvcq8M"}, "type": "REVOKE_ENTITLEMENT"}, {"creditPayload": {"balanceOrigin": "System", "count": 100, "currencyCode": "nx0Rx37h", "expireAt": "1972-02-10T00:00:00Z"}, "debitPayload": {"count": 19, "currencyCode": "FyUH0SNN", "walletPlatform": "Epic"}, "fulFillItemPayload": {"count": 2, "entitlementCollectionId": "nOr0v86W", "entitlementOrigin": "Nintendo", "itemIdentity": "FEUktSlN", "itemIdentityType": "ITEM_SKU"}, "revokeEntitlementPayload": {"count": 65, "entitlementId": "YrZeUp8b"}, "type": "REVOKE_ENTITLEMENT"}, {"creditPayload": {"balanceOrigin": "Xbox", "count": 59, "currencyCode": "RSnIFJW0", "expireAt": "1996-03-29T00:00:00Z"}, "debitPayload": {"count": 66, "currencyCode": "oaT4nZTj", "walletPlatform": "Playstation"}, "fulFillItemPayload": {"count": 53, "entitlementCollectionId": "KuzcszId", "entitlementOrigin": "System", "itemIdentity": "hEIo3e3Y", "itemIdentityType": "ITEM_SKU"}, "revokeEntitlementPayload": {"count": 22, "entitlementId": "rQyrWvpA"}, "type": "FULFILL_ITEM"}], "userId": "8VGLaBVy"}, {"operations": [{"creditPayload": {"balanceOrigin": "Oculus", "count": 58, "currencyCode": "sMaNltdP", "expireAt": "1972-10-08T00:00:00Z"}, "debitPayload": {"count": 33, "currencyCode": "iO4gCFNX", "walletPlatform": "Playstation"}, "fulFillItemPayload": {"count": 87, "entitlementCollectionId": "uptzuZt9", "entitlementOrigin": "IOS", "itemIdentity": "yYNcCxhp", "itemIdentityType": "ITEM_SKU"}, "revokeEntitlementPayload": {"count": 22, "entitlementId": "T7Frp0yj"}, "type": "FULFILL_ITEM"}, {"creditPayload": {"balanceOrigin": "Other", "count": 82, "currencyCode": "NdWqNO5l", "expireAt": "1993-01-23T00:00:00Z"}, "debitPayload": {"count": 69, "currencyCode": "oIkLUx49", "walletPlatform": "Other"}, "fulFillItemPayload": {"count": 65, "entitlementCollectionId": "02VsE0qJ", "entitlementOrigin": "GooglePlay", "itemIdentity": "RZPcvwbo", "itemIdentityType": "ITEM_ID"}, "revokeEntitlementPayload": {"count": 3, "entitlementId": "N9vpyCHH"}, "type": "DEBIT_WALLET"}, {"creditPayload": {"balanceOrigin": "Epic", "count": 22, "currencyCode": "Bjtx0IDk", "expireAt": "1973-01-31T00:00:00Z"}, "debitPayload": {"count": 1, "currencyCode": "967e92tx", "walletPlatform": "GooglePlay"}, "fulFillItemPayload": {"count": 78, "entitlementCollectionId": "UePMYZuH", "entitlementOrigin": "GooglePlay", "itemIdentity": "dWYFs5p3", "itemIdentityType": "ITEM_ID"}, "revokeEntitlementPayload": {"count": 98, "entitlementId": "GJ6wEpXN"}, "type": "REVOKE_ENTITLEMENT"}], "userId": "5Y3tEHcB"}, {"operations": [{"creditPayload": {"balanceOrigin": "System", "count": 25, "currencyCode": "0u5vKmbK", "expireAt": "1976-11-19T00:00:00Z"}, "debitPayload": {"count": 93, "currencyCode": "XcvooR8l", "walletPlatform": "Epic"}, "fulFillItemPayload": {"count": 72, "entitlementCollectionId": "yknzkGcT", "entitlementOrigin": "IOS", "itemIdentity": "eCfxJ5oJ", "itemIdentityType": "ITEM_ID"}, "revokeEntitlementPayload": {"count": 13, "entitlementId": "PpGaClNb"}, "type": "FULFILL_ITEM"}, {"creditPayload": {"balanceOrigin": "Xbox", "count": 47, "currencyCode": "dQVuSM9v", "expireAt": "1971-07-26T00:00:00Z"}, "debitPayload": {"count": 81, "currencyCode": "CWkpTDWc", "walletPlatform": "Steam"}, "fulFillItemPayload": {"count": 98, "entitlementCollectionId": "Ox7hb60A", "entitlementOrigin": "Nintendo", "itemIdentity": "kqEsNZmy", "itemIdentityType": "ITEM_SKU"}, "revokeEntitlementPayload": {"count": 22, "entitlementId": "ZSy96oSH"}, "type": "CREDIT_WALLET"}, {"creditPayload": {"balanceOrigin": "Nintendo", "count": 16, "currencyCode": "ZGhrlkHk", "expireAt": "1988-11-25T00:00:00Z"}, "debitPayload": {"count": 83, "currencyCode": "EFL2Ub6B", "walletPlatform": "Nintendo"}, "fulFillItemPayload": {"count": 40, "entitlementCollectionId": "rubviIPu", "entitlementOrigin": "Twitch", "itemIdentity": "z5KFfURS", "itemIdentityType": "ITEM_SKU"}, "revokeEntitlementPayload": {"count": 33, "entitlementId": "xYT7Gs8Z"}, "type": "DEBIT_WALLET"}], "userId": "au7DKhid"}], "metadata": {"OPBLoknH": {}, "Hvp4rtnS": {}, "K8MBPaSm": {}}, "needPreCheck": true, "transactionId": "EFbYa70r", "type": "G4XjU3PH"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op Commit \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 237 'Commit' test.out

#- 238 GetTradeHistoryByCriteria
$CLI_EXE \
    --sn platform \
    --op GetTradeHistoryByCriteria \
    --namespace $AB_NAMESPACE \
    --limit '52' \
    --offset '50' \
    --status 'FAILED' \
    --type 's0i6K4iv' \
    --userId 'WdYE01tV' \
    > test.out 2>&1
eval_tap $? 238 'GetTradeHistoryByCriteria' test.out

#- 239 GetTradeHistoryByTransactionId
$CLI_EXE \
    --sn platform \
    --op GetTradeHistoryByTransactionId \
    --namespace $AB_NAMESPACE \
    --transactionId 'XqZRDQda' \
    > test.out 2>&1
eval_tap $? 239 'GetTradeHistoryByTransactionId' test.out

#- 240 UnlockSteamUserAchievement
# body param: body
echo '{"achievements": [{"id": "LeD4MBcY", "value": 30}, {"id": "BPXYtVsw", "value": 69}, {"id": "AJoxYHIH", "value": 64}], "steamUserId": "2AjCzKPd"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UnlockSteamUserAchievement \
    --namespace $AB_NAMESPACE \
    --userId 'YN7m4j8H' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 240 'UnlockSteamUserAchievement' test.out

#- 241 GetXblUserAchievements
$CLI_EXE \
    --sn platform \
    --op GetXblUserAchievements \
    --namespace $AB_NAMESPACE \
    --userId 'QpugqZ1l' \
    --xboxUserId 'EeVhTYeZ' \
    > test.out 2>&1
eval_tap $? 241 'GetXblUserAchievements' test.out

#- 242 UpdateXblUserAchievement
# body param: body
echo '{"achievements": [{"id": "vIkaUjgb", "percentComplete": 20}, {"id": "2BNlJd6R", "percentComplete": 70}, {"id": "BNbAizuF", "percentComplete": 45}], "serviceConfigId": "qG9JlDts", "titleId": "LBB0XYe3", "xboxUserId": "uXEEVnRY"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXblUserAchievement \
    --namespace $AB_NAMESPACE \
    --userId 'xFMrPIIT' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 242 'UpdateXblUserAchievement' test.out

#- 243 AnonymizeCampaign
$CLI_EXE \
    --sn platform \
    --op AnonymizeCampaign \
    --namespace $AB_NAMESPACE \
    --userId 'hbDyfDfw' \
    > test.out 2>&1
eval_tap $? 243 'AnonymizeCampaign' test.out

#- 244 AnonymizeEntitlement
$CLI_EXE \
    --sn platform \
    --op AnonymizeEntitlement \
    --namespace $AB_NAMESPACE \
    --userId '4378h4JR' \
    > test.out 2>&1
eval_tap $? 244 'AnonymizeEntitlement' test.out

#- 245 AnonymizeFulfillment
$CLI_EXE \
    --sn platform \
    --op AnonymizeFulfillment \
    --namespace $AB_NAMESPACE \
    --userId 'g4gOXIla' \
    > test.out 2>&1
eval_tap $? 245 'AnonymizeFulfillment' test.out

#- 246 AnonymizeIntegration
$CLI_EXE \
    --sn platform \
    --op AnonymizeIntegration \
    --namespace $AB_NAMESPACE \
    --userId 'bX3ygPLE' \
    > test.out 2>&1
eval_tap $? 246 'AnonymizeIntegration' test.out

#- 247 AnonymizeOrder
$CLI_EXE \
    --sn platform \
    --op AnonymizeOrder \
    --namespace $AB_NAMESPACE \
    --userId 'LsMOv5pS' \
    > test.out 2>&1
eval_tap $? 247 'AnonymizeOrder' test.out

#- 248 AnonymizePayment
$CLI_EXE \
    --sn platform \
    --op AnonymizePayment \
    --namespace $AB_NAMESPACE \
    --userId 'nO11Pcz8' \
    > test.out 2>&1
eval_tap $? 248 'AnonymizePayment' test.out

#- 249 AnonymizeRevocation
$CLI_EXE \
    --sn platform \
    --op AnonymizeRevocation \
    --namespace $AB_NAMESPACE \
    --userId 'TnbpV5bI' \
    > test.out 2>&1
eval_tap $? 249 'AnonymizeRevocation' test.out

#- 250 AnonymizeSubscription
$CLI_EXE \
    --sn platform \
    --op AnonymizeSubscription \
    --namespace $AB_NAMESPACE \
    --userId 'I2IlF16T' \
    > test.out 2>&1
eval_tap $? 250 'AnonymizeSubscription' test.out

#- 251 AnonymizeWallet
$CLI_EXE \
    --sn platform \
    --op AnonymizeWallet \
    --namespace $AB_NAMESPACE \
    --userId 'Sz86svvP' \
    > test.out 2>&1
eval_tap $? 251 'AnonymizeWallet' test.out

#- 252 GetUserDLCByPlatform
$CLI_EXE \
    --sn platform \
    --op GetUserDLCByPlatform \
    --namespace $AB_NAMESPACE \
    --userId 'BTiaX42d' \
    --type 'EPICGAMES' \
    > test.out 2>&1
eval_tap $? 252 'GetUserDLCByPlatform' test.out

#- 253 GetUserDLC
$CLI_EXE \
    --sn platform \
    --op GetUserDLC \
    --namespace $AB_NAMESPACE \
    --userId 'uGWvhDjn' \
    --includeAllNamespaces 'false' \
    --status 'REVOKED' \
    --type 'XBOX' \
    > test.out 2>&1
eval_tap $? 253 'GetUserDLC' test.out

#- 254 QueryUserEntitlements
$CLI_EXE \
    --sn platform \
    --op QueryUserEntitlements \
    --namespace $AB_NAMESPACE \
    --userId 'ODULYAk8' \
    --activeOnly 'false' \
    --appType 'DLC' \
    --collectionId 'wwMqd6Ms' \
    --entitlementClazz 'APP' \
    --entitlementName 'CaOdOYO1' \
    --features '["WtCUljOa", "MK3WKiW9", "363Lnm5Z"]' \
    --fuzzyMatchName 'true' \
    --ignoreActiveDate 'true' \
    --itemId '["M0ab0eQn", "8UY54Fet", "XPMvdKdC"]' \
    --limit '48' \
    --offset '98' \
    --origin 'IOS' \
    > test.out 2>&1
eval_tap $? 254 'QueryUserEntitlements' test.out

#- 255 GrantUserEntitlement
# body param: body
echo '[{"collectionId": "M8ccSiuh", "endDate": "1991-11-18T00:00:00Z", "grantedCode": "GEsDxAia", "itemId": "K4ppY4bN", "itemNamespace": "Z9Gty1rI", "language": "deRj-WnFo", "metadata": {"5C9pqt6J": {}, "lWa1vURf": {}, "jM0P27QZ": {}}, "origin": "System", "quantity": 57, "region": "LbdB6uiV", "source": "OTHER", "startDate": "1992-10-02T00:00:00Z", "storeId": "O3ZfYsMC"}, {"collectionId": "C6yxIBFM", "endDate": "1996-05-02T00:00:00Z", "grantedCode": "fppD3HXc", "itemId": "MTjgMU01", "itemNamespace": "5XQxTbDU", "language": "APv", "metadata": {"2pOA1jG2": {}, "NwgJ9Qdp": {}, "DuskvJwg": {}}, "origin": "GooglePlay", "quantity": 98, "region": "FvLnAhYo", "source": "REDEEM_CODE", "startDate": "1972-11-10T00:00:00Z", "storeId": "IR6Xx7d2"}, {"collectionId": "ufIFvM8V", "endDate": "1980-05-26T00:00:00Z", "grantedCode": "G8w4AOj4", "itemId": "kQr4O2qv", "itemNamespace": "cf0B5c25", "language": "PAT-FOJw", "metadata": {"nikEtHqz": {}, "n6IkrgKx": {}, "FEhcJdGb": {}}, "origin": "System", "quantity": 91, "region": "GKSRLLhg", "source": "IAP", "startDate": "1988-02-13T00:00:00Z", "storeId": "jdc4wMsJ"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op GrantUserEntitlement \
    --namespace $AB_NAMESPACE \
    --userId '0TALYrBh' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 255 'GrantUserEntitlement' test.out

#- 256 GetUserAppEntitlementByAppId
$CLI_EXE \
    --sn platform \
    --op GetUserAppEntitlementByAppId \
    --namespace $AB_NAMESPACE \
    --userId 'dYJcJkXX' \
    --activeOnly 'false' \
    --appId 'uHbjdEg6' \
    > test.out 2>&1
eval_tap $? 256 'GetUserAppEntitlementByAppId' test.out

#- 257 QueryUserEntitlementsByAppType
$CLI_EXE \
    --sn platform \
    --op QueryUserEntitlementsByAppType \
    --namespace $AB_NAMESPACE \
    --userId '86Pf53C4' \
    --activeOnly 'false' \
    --limit '71' \
    --offset '99' \
    --appType 'GAME' \
    > test.out 2>&1
eval_tap $? 257 'QueryUserEntitlementsByAppType' test.out

#- 258 GetUserEntitlementsByIds
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementsByIds \
    --namespace $AB_NAMESPACE \
    --userId 'Ny1g1aYI' \
    --ids '["569Zjm9d", "1KcaLoPg", "Si9j3UIq"]' \
    > test.out 2>&1
eval_tap $? 258 'GetUserEntitlementsByIds' test.out

#- 259 GetUserEntitlementByItemId
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementByItemId \
    --namespace $AB_NAMESPACE \
    --userId '8CgtHrTr' \
    --activeOnly 'false' \
    --entitlementClazz 'APP' \
    --platform 'UYESCzKv' \
    --itemId 'OVLRhs0V' \
    > test.out 2>&1
eval_tap $? 259 'GetUserEntitlementByItemId' test.out

#- 260 GetUserActiveEntitlementsByItemIds
$CLI_EXE \
    --sn platform \
    --op GetUserActiveEntitlementsByItemIds \
    --namespace $AB_NAMESPACE \
    --userId '6b2rnmQE' \
    --ids '["R5vIeB4T", "KT1dUCLk", "7oyQlrrY"]' \
    --platform 'tBVj4uzM' \
    > test.out 2>&1
eval_tap $? 260 'GetUserActiveEntitlementsByItemIds' test.out

#- 261 GetUserEntitlementBySku
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementBySku \
    --namespace $AB_NAMESPACE \
    --userId 'qb6MXCQO' \
    --activeOnly 'false' \
    --entitlementClazz 'SUBSCRIPTION' \
    --platform '1cFdF3lT' \
    --sku 'UVvptKg9' \
    > test.out 2>&1
eval_tap $? 261 'GetUserEntitlementBySku' test.out

#- 262 ExistsAnyUserActiveEntitlement
$CLI_EXE \
    --sn platform \
    --op ExistsAnyUserActiveEntitlement \
    --namespace $AB_NAMESPACE \
    --userId '1B1YyNJE' \
    --appIds '["tUwaTOrn", "TDaWI4Ks", "wWWe6Urt"]' \
    --itemIds '["HEvUGYwY", "urHLpk7l", "fyp4Y8Rw"]' \
    --platform 'l8EJViij' \
    --skus '["y4opW0gh", "ePxua20z", "ME7kC2Sj"]' \
    > test.out 2>&1
eval_tap $? 262 'ExistsAnyUserActiveEntitlement' test.out

#- 263 ExistsAnyUserActiveEntitlementByItemIds
$CLI_EXE \
    --sn platform \
    --op ExistsAnyUserActiveEntitlementByItemIds \
    --namespace $AB_NAMESPACE \
    --userId 'gt9oCniV' \
    --platform 'sRA6BALK' \
    --itemIds '["DYhxF5Ff", "O8r0IMmO", "93QT7gEC"]' \
    > test.out 2>&1
eval_tap $? 263 'ExistsAnyUserActiveEntitlementByItemIds' test.out

#- 264 GetUserAppEntitlementOwnershipByAppId
$CLI_EXE \
    --sn platform \
    --op GetUserAppEntitlementOwnershipByAppId \
    --namespace $AB_NAMESPACE \
    --userId 'AzurwndB' \
    --appId 'GOP5sBl9' \
    > test.out 2>&1
eval_tap $? 264 'GetUserAppEntitlementOwnershipByAppId' test.out

#- 265 GetUserEntitlementOwnershipByItemId
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementOwnershipByItemId \
    --namespace $AB_NAMESPACE \
    --userId '10wY1rKk' \
    --entitlementClazz 'APP' \
    --platform 'MXG1XoZp' \
    --itemId '53HzbeQg' \
    > test.out 2>&1
eval_tap $? 265 'GetUserEntitlementOwnershipByItemId' test.out

#- 266 GetUserEntitlementOwnershipByItemIds
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementOwnershipByItemIds \
    --namespace $AB_NAMESPACE \
    --userId '2oQOoVhJ' \
    --ids '["NB85CewP", "4kbbnWyQ", "el5KK1VL"]' \
    --platform 'wU5OZ7lS' \
    > test.out 2>&1
eval_tap $? 266 'GetUserEntitlementOwnershipByItemIds' test.out

#- 267 GetUserEntitlementOwnershipBySku
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementOwnershipBySku \
    --namespace $AB_NAMESPACE \
    --userId 'I1YOdnk0' \
    --entitlementClazz 'LOOTBOX' \
    --platform 'KBYON0bH' \
    --sku 'AqlM0o0P' \
    > test.out 2>&1
eval_tap $? 267 'GetUserEntitlementOwnershipBySku' test.out

#- 268 RevokeAllEntitlements
$CLI_EXE \
    --sn platform \
    --op RevokeAllEntitlements \
    --namespace $AB_NAMESPACE \
    --userId '3KDaGGYj' \
    > test.out 2>&1
eval_tap $? 268 'RevokeAllEntitlements' test.out

#- 269 RevokeUserEntitlements
$CLI_EXE \
    --sn platform \
    --op RevokeUserEntitlements \
    --namespace $AB_NAMESPACE \
    --userId 'RYncWLnh' \
    --entitlementIds '5Soc3TVp' \
    > test.out 2>&1
eval_tap $? 269 'RevokeUserEntitlements' test.out

#- 270 GetUserEntitlement
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlement \
    --entitlementId 'o5UyFZkx' \
    --namespace $AB_NAMESPACE \
    --userId '0XoJFexi' \
    > test.out 2>&1
eval_tap $? 270 'GetUserEntitlement' test.out

#- 271 UpdateUserEntitlement
# body param: body
echo '{"collectionId": "TJhnuD7s", "endDate": "1973-06-29T00:00:00Z", "nullFieldList": ["c9eQ3on6", "BZKqPphL", "TseOXNVT"], "origin": "Nintendo", "reason": "onr3VOXI", "startDate": "1998-07-07T00:00:00Z", "status": "INACTIVE", "useCount": 94}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateUserEntitlement \
    --entitlementId 'gCfNNOy9' \
    --namespace $AB_NAMESPACE \
    --userId 'ctJgfj3l' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 271 'UpdateUserEntitlement' test.out

#- 272 ConsumeUserEntitlement
# body param: body
echo '{"metadata": {"qGKC2byf": {}, "Ld2ac4tx": {}, "vQhdIUcw": {}}, "options": ["HcOZgRw6", "57KU36AP", "8SERO8OS"], "platform": "Gva29Y5f", "requestId": "YXK43Juc", "useCount": 79}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ConsumeUserEntitlement \
    --entitlementId 'dsRqPDAu' \
    --namespace $AB_NAMESPACE \
    --userId 'A0fQY5qc' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 272 'ConsumeUserEntitlement' test.out

#- 273 DisableUserEntitlement
$CLI_EXE \
    --sn platform \
    --op DisableUserEntitlement \
    --entitlementId 'A75wiYpX' \
    --namespace $AB_NAMESPACE \
    --userId '3aCU3gLR' \
    > test.out 2>&1
eval_tap $? 273 'DisableUserEntitlement' test.out

#- 274 EnableUserEntitlement
$CLI_EXE \
    --sn platform \
    --op EnableUserEntitlement \
    --entitlementId 'IQQ50TKP' \
    --namespace $AB_NAMESPACE \
    --userId 'MRGHBpwE' \
    > test.out 2>&1
eval_tap $? 274 'EnableUserEntitlement' test.out

#- 275 GetUserEntitlementHistories
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementHistories \
    --entitlementId 'MLxihzX2' \
    --namespace $AB_NAMESPACE \
    --userId 'W8JYgQJq' \
    > test.out 2>&1
eval_tap $? 275 'GetUserEntitlementHistories' test.out

#- 276 RevokeUserEntitlement
# body param: body
echo '{"metadata": {"zjRFFeqD": {}, "dXNmk9aB": {}, "gCvDg730": {}}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RevokeUserEntitlement \
    --entitlementId 'Vcfg37iW' \
    --namespace $AB_NAMESPACE \
    --userId 'rbtS9NFO' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 276 'RevokeUserEntitlement' test.out

#- 277 RevokeUserEntitlementByUseCount
# body param: body
echo '{"reason": "izHsxKse", "useCount": 90}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RevokeUserEntitlementByUseCount \
    --entitlementId '1xHha05C' \
    --namespace $AB_NAMESPACE \
    --userId 'FgnndC5e' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 277 'RevokeUserEntitlementByUseCount' test.out

#- 278 PreCheckRevokeUserEntitlementByUseCount
$CLI_EXE \
    --sn platform \
    --op PreCheckRevokeUserEntitlementByUseCount \
    --entitlementId 'uxgXyxlk' \
    --namespace $AB_NAMESPACE \
    --userId 'yI8KViyv' \
    --quantity '78' \
    > test.out 2>&1
eval_tap $? 278 'PreCheckRevokeUserEntitlementByUseCount' test.out

#- 279 RevokeUseCount
eval_tap 0 279 'RevokeUseCount # SKIP deprecated' test.out

#- 280 SellUserEntitlement
# body param: body
echo '{"platform": "I2U6JWNY", "requestId": "AYtA7QNi", "useCount": 15}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SellUserEntitlement \
    --entitlementId '4C2qmoNr' \
    --namespace $AB_NAMESPACE \
    --userId 'CAk6Xxk1' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 280 'SellUserEntitlement' test.out

#- 281 FulfillItem
# body param: body
echo '{"duration": 13, "endDate": "1992-09-20T00:00:00Z", "entitlementCollectionId": "JItOnObL", "entitlementOrigin": "System", "itemId": "BxKN89sp", "itemSku": "ZhQLqLD4", "language": "GYpT4pEQ", "metadata": {"4KyJf73L": {}, "vE0OFJOq": {}, "aK1feHv9": {}}, "order": {"currency": {"currencyCode": "I35xEZT0", "currencySymbol": "9AJQC4Vw", "currencyType": "VIRTUAL", "decimals": 4, "namespace": "grTtC4P9"}, "ext": {"TAuw6Jy6": {}, "m3sQfwih": {}, "sVBkxdul": {}}, "free": false}, "orderNo": "RZCn8t1l", "origin": "Other", "overrideBundleItemQty": {"mYYUhcCu": 7, "HFYr56VO": 36, "6Nhr7Ugs": 35}, "quantity": 4, "region": "7EO13HmJ", "source": "REDEEM_CODE", "startDate": "1997-02-21T00:00:00Z", "storeId": "tfcbSvPy"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op FulfillItem \
    --namespace $AB_NAMESPACE \
    --userId 'jqRCnWGq' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 281 'FulfillItem' test.out

#- 282 RedeemCode
# body param: body
echo '{"code": "uspToWGv", "language": "MoOz_326", "region": "TiHQdzT1"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RedeemCode \
    --namespace $AB_NAMESPACE \
    --userId '4PhkSKMS' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 282 'RedeemCode' test.out

#- 283 PreCheckFulfillItem
# body param: body
echo '{"itemId": "jE7o20Ui", "itemSku": "2iWJ0D9F", "quantity": 68}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PreCheckFulfillItem \
    --namespace $AB_NAMESPACE \
    --userId '8zqCf2kh' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 283 'PreCheckFulfillItem' test.out

#- 284 FulfillRewards
# body param: body
echo '{"entitlementCollectionId": "Nuk7N93V", "entitlementOrigin": "Nintendo", "metadata": {"mDdceSLB": {}, "JkcDNZm1": {}, "6iuM8sbK": {}}, "origin": "Xbox", "rewards": [{"currency": {"currencyCode": "5rMUeSUt", "namespace": "Zsdut9Q4"}, "item": {"itemId": "xS2CMg3H", "itemName": "HQ5rOLZI", "itemSku": "HHUZpq2l", "itemType": "VVYFlZce"}, "quantity": 46, "type": "CURRENCY"}, {"currency": {"currencyCode": "p9ITvaF5", "namespace": "pig5sDZv"}, "item": {"itemId": "BTFsADeW", "itemName": "KJIwzt9F", "itemSku": "ViQWsYsa", "itemType": "aRSAxO54"}, "quantity": 14, "type": "ITEM"}, {"currency": {"currencyCode": "9DXLdZkj", "namespace": "L33s83vF"}, "item": {"itemId": "mnyw3qRJ", "itemName": "fp58l1LG", "itemSku": "AvUdxu3u", "itemType": "hQTBK9Ej"}, "quantity": 77, "type": "ITEM"}], "source": "SELL_BACK", "transactionId": "2CCJFbhH"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op FulfillRewards \
    --namespace $AB_NAMESPACE \
    --userId 'FRQSxJyT' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 284 'FulfillRewards' test.out

#- 285 QueryUserIAPOrders
$CLI_EXE \
    --sn platform \
    --op QueryUserIAPOrders \
    --namespace $AB_NAMESPACE \
    --userId 'K9221Sy8' \
    --endTime 'lUmxW8Jm' \
    --limit '51' \
    --offset '20' \
    --productId 'mQi7uUs6' \
    --startTime 'yCtCSi9h' \
    --status 'VERIFIED' \
    --type 'APPLE' \
    > test.out 2>&1
eval_tap $? 285 'QueryUserIAPOrders' test.out

#- 286 QueryAllUserIAPOrders
$CLI_EXE \
    --sn platform \
    --op QueryAllUserIAPOrders \
    --namespace $AB_NAMESPACE \
    --userId 'IWCsOZZx' \
    > test.out 2>&1
eval_tap $? 286 'QueryAllUserIAPOrders' test.out

#- 287 QueryUserIAPConsumeHistory
$CLI_EXE \
    --sn platform \
    --op QueryUserIAPConsumeHistory \
    --namespace $AB_NAMESPACE \
    --userId 'U2Q3j1oo' \
    --endTime 'yHZHGJSj' \
    --limit '29' \
    --offset '14' \
    --startTime '8rZj5aYy' \
    --status 'FAIL' \
    --type 'XBOX' \
    > test.out 2>&1
eval_tap $? 287 'QueryUserIAPConsumeHistory' test.out

#- 288 MockFulfillIAPItem
# body param: body
echo '{"itemIdentityType": "ITEM_ID", "language": "aC_204", "productId": "ecGI7zAE", "region": "bRT28eDl", "transactionId": "tbxqnvay", "type": "GOOGLE"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op MockFulfillIAPItem \
    --namespace $AB_NAMESPACE \
    --userId 'PXNzIApf' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 288 'MockFulfillIAPItem' test.out

#- 289 AdminGetIAPOrderLineItems
$CLI_EXE \
    --sn platform \
    --op AdminGetIAPOrderLineItems \
    --iapOrderNo 'tqovA3mh' \
    --namespace $AB_NAMESPACE \
    --userId 'no39jkUL' \
    > test.out 2>&1
eval_tap $? 289 'AdminGetIAPOrderLineItems' test.out

#- 290 AdminSyncSteamAbnormalTransaction
$CLI_EXE \
    --sn platform \
    --op AdminSyncSteamAbnormalTransaction \
    --namespace $AB_NAMESPACE \
    --userId '5o5V8J2a' \
    > test.out 2>&1
eval_tap $? 290 'AdminSyncSteamAbnormalTransaction' test.out

#- 291 AdminSyncSteamIAPByTransaction
# body param: body
echo '{"orderId": "rGJffWO8"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op AdminSyncSteamIAPByTransaction \
    --namespace $AB_NAMESPACE \
    --userId 'dDecIfHb' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 291 'AdminSyncSteamIAPByTransaction' test.out

#- 292 QueryUserThirdPartySubscription
$CLI_EXE \
    --sn platform \
    --op QueryUserThirdPartySubscription \
    --namespace $AB_NAMESPACE \
    --userId '8Pdw2BsL' \
    --activeOnly 'true' \
    --groupId 'fFOsabq9' \
    --limit '20' \
    --offset '16' \
    --platform 'TWITCH' \
    --productId 'OkzOk5kx' \
    > test.out 2>&1
eval_tap $? 292 'QueryUserThirdPartySubscription' test.out

#- 293 GetThirdPartyPlatformSubscriptionOwnershipByGroupId
$CLI_EXE \
    --sn platform \
    --op GetThirdPartyPlatformSubscriptionOwnershipByGroupId \
    --namespace $AB_NAMESPACE \
    --platform 'GOOGLE' \
    --userId 'AcVVoY0W' \
    --groupId '2X5Ey4H1' \
    > test.out 2>&1
eval_tap $? 293 'GetThirdPartyPlatformSubscriptionOwnershipByGroupId' test.out

#- 294 GetThirdPartyPlatformSubscriptionOwnershipByProductId
$CLI_EXE \
    --sn platform \
    --op GetThirdPartyPlatformSubscriptionOwnershipByProductId \
    --namespace $AB_NAMESPACE \
    --platform 'STEAM' \
    --userId 'UHZMZdrV' \
    --productId 'lCITWJe7' \
    > test.out 2>&1
eval_tap $? 294 'GetThirdPartyPlatformSubscriptionOwnershipByProductId' test.out

#- 295 QueryUserThirdPartySubscriptionTransactions
$CLI_EXE \
    --sn platform \
    --op QueryUserThirdPartySubscriptionTransactions \
    --namespace $AB_NAMESPACE \
    --userId '0pbwsdua' \
    --activeOnly 'true' \
    --groupId 'mEyqlhZ2' \
    --limit '64' \
    --offset '59' \
    --platform 'APPLE' \
    --productId 'vpD1jV11' \
    > test.out 2>&1
eval_tap $? 295 'QueryUserThirdPartySubscriptionTransactions' test.out

#- 296 GetThirdPartySubscriptionDetails
$CLI_EXE \
    --sn platform \
    --op GetThirdPartySubscriptionDetails \
    --id '2hy1jFT9' \
    --namespace $AB_NAMESPACE \
    --userId 'GOIND5JK' \
    > test.out 2>&1
eval_tap $? 296 'GetThirdPartySubscriptionDetails' test.out

#- 297 GetSubscriptionHistory
$CLI_EXE \
    --sn platform \
    --op GetSubscriptionHistory \
    --id 'ijlm3ej3' \
    --namespace $AB_NAMESPACE \
    --userId 'ZTJ5aOaP' \
    --limit '99' \
    --offset '44' \
    > test.out 2>&1
eval_tap $? 297 'GetSubscriptionHistory' test.out

#- 298 SyncSubscriptionTransaction
$CLI_EXE \
    --sn platform \
    --op SyncSubscriptionTransaction \
    --id 'SymVKaoI' \
    --namespace $AB_NAMESPACE \
    --userId 'QEbT0pds' \
    > test.out 2>&1
eval_tap $? 298 'SyncSubscriptionTransaction' test.out

#- 299 GetThirdPartyUserSubscriptionDetails
$CLI_EXE \
    --sn platform \
    --op GetThirdPartyUserSubscriptionDetails \
    --id 'yGCreCAS' \
    --namespace $AB_NAMESPACE \
    --userId 'czaK92rJ' \
    > test.out 2>&1
eval_tap $? 299 'GetThirdPartyUserSubscriptionDetails' test.out

#- 300 SyncSubscription
$CLI_EXE \
    --sn platform \
    --op SyncSubscription \
    --id 'HwQrN1Hc' \
    --namespace $AB_NAMESPACE \
    --userId 'zKm73J2b' \
    > test.out 2>&1
eval_tap $? 300 'SyncSubscription' test.out

#- 301 QueryUserOrders
$CLI_EXE \
    --sn platform \
    --op QueryUserOrders \
    --namespace $AB_NAMESPACE \
    --userId '8aVud8DQ' \
    --discounted 'true' \
    --itemId 'od5U7RHL' \
    --limit '93' \
    --offset '63' \
    --status 'REFUND_FAILED' \
    > test.out 2>&1
eval_tap $? 301 'QueryUserOrders' test.out

#- 302 AdminCreateUserOrder
# body param: body
echo '{"currencyCode": "blhVDBFg", "currencyNamespace": "jVdDQons", "discountCodes": ["ZOI7AhQk", "DOP3zudQ", "aZxhbci4"], "discountedPrice": 6, "entitlementPlatform": "Other", "ext": {"d6NDrMsQ": {}, "l6WRZ8BH": {}, "wFFLUrRI": {}}, "itemId": "0HIE8bbb", "language": "IsMv9wLb", "options": {"skipPriceValidation": true}, "platform": "Oculus", "price": 89, "quantity": 66, "region": "OeBGrpAt", "returnUrl": "8UGPmXOh", "sandbox": true, "sectionId": "v8FVsP1z"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op AdminCreateUserOrder \
    --namespace $AB_NAMESPACE \
    --userId 'PiXjAKel' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 302 'AdminCreateUserOrder' test.out

#- 303 CountOfPurchasedItem
$CLI_EXE \
    --sn platform \
    --op CountOfPurchasedItem \
    --namespace $AB_NAMESPACE \
    --userId 'sySkPH2p' \
    --itemId 'cjgPTcjr' \
    > test.out 2>&1
eval_tap $? 303 'CountOfPurchasedItem' test.out

#- 304 GetUserOrder
$CLI_EXE \
    --sn platform \
    --op GetUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'q0ABSaZ4' \
    --userId 'BeT3z2EA' \
    > test.out 2>&1
eval_tap $? 304 'GetUserOrder' test.out

#- 305 UpdateUserOrderStatus
# body param: body
echo '{"status": "REFUNDING", "statusReason": "OXrFPUOR"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateUserOrderStatus \
    --namespace $AB_NAMESPACE \
    --orderNo 'NvdD9EZw' \
    --userId 'NPK9Kk4J' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 305 'UpdateUserOrderStatus' test.out

#- 306 FulfillUserOrder
$CLI_EXE \
    --sn platform \
    --op FulfillUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'Q8aAopep' \
    --userId 'JYGEE2C3' \
    > test.out 2>&1
eval_tap $? 306 'FulfillUserOrder' test.out

#- 307 GetUserOrderGrant
eval_tap 0 307 'GetUserOrderGrant # SKIP deprecated' test.out

#- 308 GetUserOrderHistories
$CLI_EXE \
    --sn platform \
    --op GetUserOrderHistories \
    --namespace $AB_NAMESPACE \
    --orderNo 'qJZ1KhYH' \
    --userId 'ijNJjVOF' \
    > test.out 2>&1
eval_tap $? 308 'GetUserOrderHistories' test.out

#- 309 ProcessUserOrderNotification
# body param: body
echo '{"additionalData": {"cardSummary": "1ro935RM"}, "authorisedTime": "1985-03-16T00:00:00Z", "chargebackReversedTime": "1977-09-09T00:00:00Z", "chargebackTime": "1994-07-19T00:00:00Z", "chargedTime": "1983-05-06T00:00:00Z", "createdTime": "1987-09-18T00:00:00Z", "currency": {"currencyCode": "CoqLKPjo", "currencySymbol": "IlqfWnjJ", "currencyType": "REAL", "decimals": 52, "namespace": "GhbfURY5"}, "customParameters": {"ymqRdmGV": {}, "FHwSSpsi": {}, "VX3W8yhf": {}}, "extOrderNo": "BkmLoTiL", "extTxId": "fSvoIdL5", "extUserId": "ZPeuR4IB", "issuedAt": "1983-09-02T00:00:00Z", "metadata": {"TXwwdMQE": "48LPiM4w", "oE38xlTp": "fhSAqiWz", "Y5U5No9f": "LUyuiI8G"}, "namespace": "zm9QL3QL", "nonceStr": "eWx0JaFc", "paymentData": {"discountAmount": 76, "discountCode": "bRNLxjoe", "subtotalPrice": 10, "tax": 56, "totalPrice": 60}, "paymentMethod": "VjZliwTL", "paymentMethodFee": 83, "paymentOrderNo": "i71qf0fV", "paymentProvider": "STRIPE", "paymentProviderFee": 24, "paymentStationUrl": "5anVzaEi", "price": 54, "refundedTime": "1988-06-12T00:00:00Z", "salesTax": 22, "sandbox": false, "sku": "pQyZ5Qip", "status": "CHARGEBACK", "statusReason": "d3HkiAh7", "subscriptionId": "H29iQBIG", "subtotalPrice": 54, "targetNamespace": "YUnTgGP2", "targetUserId": "PGEIvbua", "tax": 45, "totalPrice": 47, "totalTax": 85, "txEndTime": "1993-01-14T00:00:00Z", "type": "mEBzkxnn", "userId": "xl00L1IF", "vat": 92}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ProcessUserOrderNotification \
    --namespace $AB_NAMESPACE \
    --orderNo 'JWXldrLs' \
    --userId 'ZgmcGweF' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 309 'ProcessUserOrderNotification' test.out

#- 310 DownloadUserOrderReceipt
$CLI_EXE \
    --sn platform \
    --op DownloadUserOrderReceipt \
    --namespace $AB_NAMESPACE \
    --orderNo 'n4fNvhuP' \
    --userId 'iLZrPR0V' \
    > test.out 2>&1
eval_tap $? 310 'DownloadUserOrderReceipt' test.out

#- 311 CreateUserPaymentOrder
# body param: body
echo '{"currencyCode": "FeEnkduV", "currencyNamespace": "waYyL7S4", "customParameters": {"e8Werqa7": {}, "e7B2CUXx": {}, "gi8souCd": {}}, "description": "ogrThbWU", "extOrderNo": "aabZhrsw", "extUserId": "Gk7yVdwA", "itemType": "SEASON", "language": "RA_KLqx-rv", "metadata": {"w6Xwjxrz": "GvnX6eBy", "FIaxFUOs": "mcUHKHRy", "wPSwLpuC": "OvkxFdjz"}, "notifyUrl": "PqongjxP", "omitNotification": false, "platform": "cRhr56cb", "price": 4, "recurringPaymentOrderNo": "Wjq3gTyG", "region": "3aOP9Ks0", "returnUrl": "AIx2xRIF", "sandbox": false, "sku": "s4TNkHOH", "subscriptionId": "GGTcBn49", "title": "aujW916G"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateUserPaymentOrder \
    --namespace $AB_NAMESPACE \
    --userId 'dAcIfL4S' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 311 'CreateUserPaymentOrder' test.out

#- 312 RefundUserPaymentOrder
# body param: body
echo '{"description": "BgP8R03e"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RefundUserPaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'CFJxcCvw' \
    --userId 'dXyrMRkZ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 312 'RefundUserPaymentOrder' test.out

#- 313 GetUserPlatformAccountClosureHistories
$CLI_EXE \
    --sn platform \
    --op GetUserPlatformAccountClosureHistories \
    --namespace $AB_NAMESPACE \
    --userId 'nTeOp0w0' \
    > test.out 2>&1
eval_tap $? 313 'GetUserPlatformAccountClosureHistories' test.out

#- 314 ApplyUserRedemption
# body param: body
echo '{"code": "VR4WHS0o", "orderNo": "AvPxkp07"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ApplyUserRedemption \
    --namespace $AB_NAMESPACE \
    --userId 'DGMm4faL' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 314 'ApplyUserRedemption' test.out

#- 315 DoRevocation
# body param: body
echo '{"meta": {"A6ieKDD1": {}, "nYlsFN34": {}, "A7ecYW5Y": {}}, "reason": "nxyzhIr3", "requestId": "RpOkZHB8", "revokeEntries": [{"currency": {"balanceOrigin": "Oculus", "currencyCode": "QqlCVqXy", "namespace": "XeuEifXA"}, "entitlement": {"entitlementId": "lVnWqARq"}, "item": {"entitlementOrigin": "System", "itemIdentity": "rLXqhoNG", "itemIdentityType": "ITEM_ID", "origin": "Playstation"}, "quantity": 14, "type": "ENTITLEMENT"}, {"currency": {"balanceOrigin": "GooglePlay", "currencyCode": "3SxPuOK4", "namespace": "XEBrJE4M"}, "entitlement": {"entitlementId": "6MnsdwGb"}, "item": {"entitlementOrigin": "Xbox", "itemIdentity": "Ubrj4F20", "itemIdentityType": "ITEM_ID", "origin": "System"}, "quantity": 64, "type": "ENTITLEMENT"}, {"currency": {"balanceOrigin": "Xbox", "currencyCode": "CgifV2Vf", "namespace": "KZRnkhyK"}, "entitlement": {"entitlementId": "4ynN62Q3"}, "item": {"entitlementOrigin": "System", "itemIdentity": "YjuojAcg", "itemIdentityType": "ITEM_SKU", "origin": "System"}, "quantity": 91, "type": "CURRENCY"}], "source": "ORDER", "transactionId": "oqeOgk2q"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op DoRevocation \
    --namespace $AB_NAMESPACE \
    --userId 'XU50PQXx' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 315 'DoRevocation' test.out

#- 316 RegisterXblSessions
# body param: body
echo '{"gameSessionId": "KeGBJ2Ne", "payload": {"H2F5E0QG": {}, "RpuVXqsX": {}, "uencXbdg": {}}, "scid": "MuBSFyw6", "sessionTemplateName": "UKfYYLWG"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RegisterXblSessions \
    --namespace $AB_NAMESPACE \
    --userId 'moszB2IY' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 316 'RegisterXblSessions' test.out

#- 317 QueryUserSubscriptions
$CLI_EXE \
    --sn platform \
    --op QueryUserSubscriptions \
    --namespace $AB_NAMESPACE \
    --userId 'N6EF8oh6' \
    --chargeStatus 'CHARGED' \
    --itemId 'XAVeO9GB' \
    --limit '22' \
    --offset '74' \
    --sku 'jk1dvMxq' \
    --status 'INIT' \
    --subscribedBy 'PLATFORM' \
    > test.out 2>&1
eval_tap $? 317 'QueryUserSubscriptions' test.out

#- 318 GetUserSubscriptionActivities
$CLI_EXE \
    --sn platform \
    --op GetUserSubscriptionActivities \
    --namespace $AB_NAMESPACE \
    --userId 'qN6oEtZj' \
    --excludeSystem 'true' \
    --limit '58' \
    --offset '41' \
    --subscriptionId '3oluObFz' \
    > test.out 2>&1
eval_tap $? 318 'GetUserSubscriptionActivities' test.out

#- 319 PlatformSubscribeSubscription
# body param: body
echo '{"grantDays": 36, "itemId": "yiqj0RpN", "language": "GxEV3R8n", "reason": "65ekc1cs", "region": "Gjtofbue", "source": "nSAHGssb"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PlatformSubscribeSubscription \
    --namespace $AB_NAMESPACE \
    --userId 'h4q67Mmb' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 319 'PlatformSubscribeSubscription' test.out

#- 320 CheckUserSubscriptionSubscribableByItemId
$CLI_EXE \
    --sn platform \
    --op CheckUserSubscriptionSubscribableByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'NVRsGcDT' \
    --itemId 'AaPyfijV' \
    > test.out 2>&1
eval_tap $? 320 'CheckUserSubscriptionSubscribableByItemId' test.out

#- 321 GetUserSubscription
$CLI_EXE \
    --sn platform \
    --op GetUserSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId '797y51it' \
    --userId 'slVi6qV0' \
    > test.out 2>&1
eval_tap $? 321 'GetUserSubscription' test.out

#- 322 DeleteUserSubscription
$CLI_EXE \
    --sn platform \
    --op DeleteUserSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'Pi1tNOxE' \
    --userId 'I3UAjviI' \
    > test.out 2>&1
eval_tap $? 322 'DeleteUserSubscription' test.out

#- 323 CancelSubscription
# body param: body
echo '{"immediate": true, "reason": "7d7ihJ3n"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CancelSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'tzrF22SP' \
    --userId 'UQDYNFSP' \
    --force 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 323 'CancelSubscription' test.out

#- 324 GrantDaysToSubscription
# body param: body
echo '{"grantDays": 14, "reason": "woEmNVS1"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op GrantDaysToSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'XjzeuVGu' \
    --userId 'vCcSjcCh' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 324 'GrantDaysToSubscription' test.out

#- 325 GetUserSubscriptionBillingHistories
$CLI_EXE \
    --sn platform \
    --op GetUserSubscriptionBillingHistories \
    --namespace $AB_NAMESPACE \
    --subscriptionId '5Ogb9ciO' \
    --userId 'ui7AFWRN' \
    --excludeFree 'false' \
    --limit '17' \
    --offset '100' \
    > test.out 2>&1
eval_tap $? 325 'GetUserSubscriptionBillingHistories' test.out

#- 326 ProcessUserSubscriptionNotification
# body param: body
echo '{"additionalData": {"cardSummary": "Lqc5dEnT"}, "authorisedTime": "1989-06-02T00:00:00Z", "chargebackReversedTime": "1993-07-02T00:00:00Z", "chargebackTime": "1990-08-27T00:00:00Z", "chargedTime": "1979-06-03T00:00:00Z", "createdTime": "1986-11-01T00:00:00Z", "currency": {"currencyCode": "AIstoKxn", "currencySymbol": "xvI79POG", "currencyType": "REAL", "decimals": 41, "namespace": "dRqTBrX8"}, "customParameters": {"8m0vuYNW": {}, "YyTJ2ooq": {}, "6bmAOkQ7": {}}, "extOrderNo": "84G76PYl", "extTxId": "lQ2u5vne", "extUserId": "3FgvDApa", "issuedAt": "1986-06-27T00:00:00Z", "metadata": {"s0B0pJac": "pWnOhZyW", "xNMCPIXQ": "sAJPIENm", "0r8UOGf4": "8vqE8z3D"}, "namespace": "ucXeP7zz", "nonceStr": "jOvTSlxI", "paymentData": {"discountAmount": 42, "discountCode": "UBcsl2jP", "subtotalPrice": 25, "tax": 8, "totalPrice": 16}, "paymentMethod": "ZHoP7PNq", "paymentMethodFee": 94, "paymentOrderNo": "SZDwDT0z", "paymentProvider": "ADYEN", "paymentProviderFee": 93, "paymentStationUrl": "veVVt9e4", "price": 92, "refundedTime": "1995-01-24T00:00:00Z", "salesTax": 76, "sandbox": true, "sku": "mChwGYR5", "status": "CHARGEBACK", "statusReason": "vRabbVR4", "subscriptionId": "Z9HIxkIB", "subtotalPrice": 69, "targetNamespace": "GMpmNx2d", "targetUserId": "m3vMHbrV", "tax": 0, "totalPrice": 47, "totalTax": 98, "txEndTime": "1974-12-04T00:00:00Z", "type": "JolkbntU", "userId": "34yHYXvR", "vat": 20}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ProcessUserSubscriptionNotification \
    --namespace $AB_NAMESPACE \
    --subscriptionId '9biyn8lI' \
    --userId 'z9GsymoE' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 326 'ProcessUserSubscriptionNotification' test.out

#- 327 AcquireUserTicket
# body param: body
echo '{"count": 77, "orderNo": "tBoKFctO"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op AcquireUserTicket \
    --boothName 'XWfqrfQC' \
    --namespace $AB_NAMESPACE \
    --userId 'FNk4dWDw' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 327 'AcquireUserTicket' test.out

#- 328 QueryUserCurrencyWallets
$CLI_EXE \
    --sn platform \
    --op QueryUserCurrencyWallets \
    --namespace $AB_NAMESPACE \
    --userId 'nl4uQ2oZ' \
    > test.out 2>&1
eval_tap $? 328 'QueryUserCurrencyWallets' test.out

#- 329 DebitUserWalletByCurrencyCode
# body param: body
echo '{"allowOverdraft": true, "amount": 67, "balanceOrigin": "Nintendo", "balanceSource": "DLC_REVOCATION", "metadata": {"efz9DwGx": {}, "plSMRSEu": {}, "I5tDlaRR": {}}, "reason": "lIsGti9l"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op DebitUserWalletByCurrencyCode \
    --currencyCode 'jQTjNvXZ' \
    --namespace $AB_NAMESPACE \
    --userId 'pdzKqUMG' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 329 'DebitUserWalletByCurrencyCode' test.out

#- 330 ListUserCurrencyTransactions
$CLI_EXE \
    --sn platform \
    --op ListUserCurrencyTransactions \
    --currencyCode 'LdZWeqXw' \
    --namespace $AB_NAMESPACE \
    --userId '4XZjObFA' \
    --limit '62' \
    --offset '84' \
    > test.out 2>&1
eval_tap $? 330 'ListUserCurrencyTransactions' test.out

#- 331 CheckBalance
# body param: request
echo '{"amount": 41, "debitBalanceSource": "OTHER", "metadata": {"dCmXMHNm": {}, "HljIOdVE": {}, "DLWduyyE": {}}, "reason": "iCHXgTK2", "walletPlatform": "Epic"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CheckBalance \
    --currencyCode 'wnoz3oD5' \
    --namespace $AB_NAMESPACE \
    --userId '4fMeXl3b' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 331 'CheckBalance' test.out

#- 332 CheckWallet
eval_tap 0 332 'CheckWallet # SKIP deprecated' test.out

#- 333 CreditUserWallet
# body param: body
echo '{"amount": 85, "expireAt": "1982-12-03T00:00:00Z", "metadata": {"SYgm0Fsa": {}, "OqfX4e76": {}, "t4acqFVa": {}}, "origin": "Other", "reason": "Yv2MwkQ0", "source": "ACHIEVEMENT"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreditUserWallet \
    --currencyCode '2yCffebC' \
    --namespace $AB_NAMESPACE \
    --userId 'tZApU3ZE' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 333 'CreditUserWallet' test.out

#- 334 DebitByWalletPlatform
# body param: request
echo '{"amount": 66, "debitBalanceSource": "PAYMENT", "metadata": {"vsXGhDDM": {}, "XejGkn3e": {}, "jVqbwZCL": {}}, "reason": "3wNzNOTu", "walletPlatform": "Oculus"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op DebitByWalletPlatform \
    --currencyCode 'dB9wxM3O' \
    --namespace $AB_NAMESPACE \
    --userId 'bYQYgmAD' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 334 'DebitByWalletPlatform' test.out

#- 335 PayWithUserWallet
# body param: body
echo '{"amount": 30, "metadata": {"IJnrQyNz": {}, "5M6mnUNa": {}, "68BseAId": {}}, "walletPlatform": "Oculus"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PayWithUserWallet \
    --currencyCode 'Q88i0kGv' \
    --namespace $AB_NAMESPACE \
    --userId '8G1hVTm6' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 335 'PayWithUserWallet' test.out

#- 336 GetUserWallet
eval_tap 0 336 'GetUserWallet # SKIP deprecated' test.out

#- 337 DebitUserWallet
eval_tap 0 337 'DebitUserWallet # SKIP deprecated' test.out

#- 338 DisableUserWallet
eval_tap 0 338 'DisableUserWallet # SKIP deprecated' test.out

#- 339 EnableUserWallet
eval_tap 0 339 'EnableUserWallet # SKIP deprecated' test.out

#- 340 ListUserWalletTransactions
eval_tap 0 340 'ListUserWalletTransactions # SKIP deprecated' test.out

#- 341 ListViews
$CLI_EXE \
    --sn platform \
    --op ListViews \
    --namespace $AB_NAMESPACE \
    --storeId 'M0V9bCHX' \
    > test.out 2>&1
eval_tap $? 341 'ListViews' test.out

#- 342 CreateView
# body param: body
echo '{"displayOrder": 62, "localizations": {"F5ZJGPSn": {"description": "qtFc0n3N", "localExt": {"lJvEbcnB": {}, "MwSBsCB9": {}, "1WxYSAdY": {}}, "longDescription": "1tVuEbXQ", "title": "Idb1qCLO"}, "Kp2V7Tgu": {"description": "B4LuZsKI", "localExt": {"T43EAPbt": {}, "OqEEzPlA": {}, "lgQOweuy": {}}, "longDescription": "J000mN1x", "title": "tdxlrDkp"}, "23Kujq0b": {"description": "coLowcoy", "localExt": {"xpNbgiOc": {}, "DbmhtKLB": {}, "IM26l15E": {}}, "longDescription": "m1oK9O12", "title": "dY6C5bKe"}}, "name": "2tLow0Bu"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateView \
    --namespace $AB_NAMESPACE \
    --storeId '5KZiWZKO' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 342 'CreateView' test.out

#- 343 GetView
$CLI_EXE \
    --sn platform \
    --op GetView \
    --namespace $AB_NAMESPACE \
    --viewId 'SCHvhSjs' \
    --storeId 'GD1mAgj5' \
    > test.out 2>&1
eval_tap $? 343 'GetView' test.out

#- 344 UpdateView
# body param: body
echo '{"displayOrder": 37, "localizations": {"GW0IVvp8": {"description": "lNzQLgdS", "localExt": {"8ogQEHop": {}, "q95d7gEz": {}, "I0fjp2ZA": {}}, "longDescription": "2QtC04OI", "title": "6folFjBR"}, "odbcdkRT": {"description": "O4bQJsyd", "localExt": {"6v3SuAw4": {}, "APDmzIj5": {}, "6mmRj35E": {}}, "longDescription": "GdmP5Lel", "title": "o71Vox87"}, "dgBT7suF": {"description": "Cs1ZK1ax", "localExt": {"L2yFEbn6": {}, "xc4brmQb": {}, "rXzryKEs": {}}, "longDescription": "uH3Zb84d", "title": "pNcKFW6S"}}, "name": "OPdRqWKG"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateView \
    --namespace $AB_NAMESPACE \
    --viewId 'vFjreF15' \
    --storeId '0SsbWDK8' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 344 'UpdateView' test.out

#- 345 DeleteView
$CLI_EXE \
    --sn platform \
    --op DeleteView \
    --namespace $AB_NAMESPACE \
    --viewId '5e5qOnOy' \
    --storeId '1FS4SFK3' \
    > test.out 2>&1
eval_tap $? 345 'DeleteView' test.out

#- 346 GetWalletConfig
$CLI_EXE \
    --sn platform \
    --op GetWalletConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 346 'GetWalletConfig' test.out

#- 347 UpdateWalletConfig
# body param: body
echo '{"enablePaidForVCExpiration": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateWalletConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 347 'UpdateWalletConfig' test.out

#- 348 QueryWallets
eval_tap 0 348 'QueryWallets # SKIP deprecated' test.out

#- 349 BulkCredit
# body param: body
echo '[{"creditRequest": {"amount": 81, "expireAt": "1989-07-03T00:00:00Z", "metadata": {"NpMLC2Hp": {}, "QmZfnfJ2": {}, "QaZAG6wG": {}}, "origin": "Xbox", "reason": "W8OI01rZ", "source": "IAP_CHARGEBACK_REVERSED"}, "currencyCode": "m0Nj8ucy", "userIds": ["WlTGTjWr", "e2MpZGfJ", "t9ixCWBy"]}, {"creditRequest": {"amount": 86, "expireAt": "1997-04-02T00:00:00Z", "metadata": {"QSYffKwG": {}, "q5j78ZuD": {}, "rUxUSVm3": {}}, "origin": "Steam", "reason": "kw4BmMjp", "source": "GIFT"}, "currencyCode": "3Qp3gvRQ", "userIds": ["VuVa7Edd", "b6X5UzF9", "PLix7TQs"]}, {"creditRequest": {"amount": 78, "expireAt": "1999-10-03T00:00:00Z", "metadata": {"4P5shTUZ": {}, "XpVfQcaN": {}, "WZLP9Aq6": {}}, "origin": "Nintendo", "reason": "1cgCAl0r", "source": "SELL_BACK"}, "currencyCode": "TGVna31R", "userIds": ["Eom0XuHj", "bUiwr5XN", "VevI7JOE"]}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op BulkCredit \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 349 'BulkCredit' test.out

#- 350 BulkDebit
# body param: body
echo '[{"currencyCode": "MfysMWu3", "request": {"allowOverdraft": true, "amount": 41, "balanceOrigin": "Nintendo", "balanceSource": "DLC_REVOCATION", "metadata": {"rHzh25hZ": {}, "4SDYn2y7": {}, "DlZt88ug": {}}, "reason": "Hqpsv1CI"}, "userIds": ["qTNXlyOE", "2qXi5n5T", "GpLonqp3"]}, {"currencyCode": "rbNbteLw", "request": {"allowOverdraft": false, "amount": 47, "balanceOrigin": "Twitch", "balanceSource": "EXPIRATION", "metadata": {"AlYhZZBh": {}, "YLm1hpi5": {}, "jCIWtI80": {}}, "reason": "Up1yVOso"}, "userIds": ["Iml6chJ8", "keXRp2rG", "0RqlbtnW"]}, {"currencyCode": "1aodSXd0", "request": {"allowOverdraft": true, "amount": 10, "balanceOrigin": "Steam", "balanceSource": "TRADE", "metadata": {"wnQ0XXZN": {}, "A9TJzzPJ": {}, "iTsRMXLt": {}}, "reason": "EZr0wF0b"}, "userIds": ["EALZ1qV1", "KNVuvTnw", "7EpI7XwG"]}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op BulkDebit \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 350 'BulkDebit' test.out

#- 351 GetWallet
eval_tap 0 351 'GetWallet # SKIP deprecated' test.out

#- 352 SyncOrders
$CLI_EXE \
    --sn platform \
    --op SyncOrders \
    --nextEvaluatedKey 'OFIgCOqQ' \
    --end 'x2eFpDH2' \
    --start 'LqVoI6kM' \
    > test.out 2>&1
eval_tap $? 352 'SyncOrders' test.out

#- 353 TestAdyenConfig
# body param: body
echo '{"allowedPaymentMethods": ["OnWr90Vf", "uJBeyumq", "8LpJAZU7"], "apiKey": "wI3joxMg", "authoriseAsCapture": true, "blockedPaymentMethods": ["Osn9FHaf", "xnEqQenu", "t3Rk91ay"], "clientKey": "sb4sfxiS", "dropInSettings": "LfNLYVyA", "liveEndpointUrlPrefix": "n3jct5rk", "merchantAccount": "HZqcZhdw", "notificationHmacKey": "ABhfG4uJ", "notificationPassword": "3HsfDm7p", "notificationUsername": "VlYWPa3r", "returnUrl": "qzcqPOK6", "settings": "MDLzjZ4y"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestAdyenConfig \
    --sandbox 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 353 'TestAdyenConfig' test.out

#- 354 TestAliPayConfig
# body param: body
echo '{"appId": "u8uPwvXV", "privateKey": "BCDaU0lB", "publicKey": "teBa0oUH", "returnUrl": "A1KgpCUd"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestAliPayConfig \
    --sandbox 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 354 'TestAliPayConfig' test.out

#- 355 TestCheckoutConfig
# body param: body
echo '{"publicKey": "uhyoYFP5", "secretKey": "g2TjOCjl"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestCheckoutConfig \
    --sandbox 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 355 'TestCheckoutConfig' test.out

#- 356 DebugMatchedPaymentMerchantConfig
$CLI_EXE \
    --sn platform \
    --op DebugMatchedPaymentMerchantConfig \
    --namespace_ 'pzYI9nkA' \
    --region '6859CYIS' \
    > test.out 2>&1
eval_tap $? 356 'DebugMatchedPaymentMerchantConfig' test.out

#- 357 TestNeonPayConfig
# body param: body
echo '{"apiKey": "6ElG61OG", "webhookSecretKey": "bz5wFdJv"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestNeonPayConfig \
    --sandbox 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 357 'TestNeonPayConfig' test.out

#- 358 TestPayPalConfig
# body param: body
echo '{"clientID": "KCbMEOcQ", "clientSecret": "kkmYSJfI", "returnUrl": "wIGy7m1H", "webHookId": "h2VPe9uj"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestPayPalConfig \
    --sandbox 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 358 'TestPayPalConfig' test.out

#- 359 TestStripeConfig
# body param: body
echo '{"allowedPaymentMethodTypes": ["lptxqXdU", "ryupzcj8", "kp7os37d"], "publishableKey": "59HwNHDp", "secretKey": "lhMW8m9R", "webhookSecret": "EZ8RJBLF"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestStripeConfig \
    --sandbox 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 359 'TestStripeConfig' test.out

#- 360 TestWxPayConfig
# body param: body
echo '{"appId": "yPaxy2Dg", "key": "SfOGD0Sf", "mchid": "L41UFw5T", "returnUrl": "hHOwWUZn"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestWxPayConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 360 'TestWxPayConfig' test.out

#- 361 TestXsollaConfig
# body param: body
echo '{"apiKey": "2rUzy0gy", "flowCompletionUrl": "fWaloRnz", "merchantId": 45, "projectId": 99, "projectSecretKey": "BL34gz5b"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestXsollaConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 361 'TestXsollaConfig' test.out

#- 362 GetPaymentMerchantConfig1
$CLI_EXE \
    --sn platform \
    --op GetPaymentMerchantConfig1 \
    --id 'unMx1ifx' \
    > test.out 2>&1
eval_tap $? 362 'GetPaymentMerchantConfig1' test.out

#- 363 UpdateAdyenConfig
# body param: body
echo '{"allowedPaymentMethods": ["HaBax3mP", "frsSgPqf", "kTgRwwsM"], "apiKey": "bdTeq5yt", "authoriseAsCapture": false, "blockedPaymentMethods": ["WhOgYati", "uovyKsMR", "MJCKqZcU"], "clientKey": "CRO8LBnK", "dropInSettings": "SmOIJz4O", "liveEndpointUrlPrefix": "qRobb0Zl", "merchantAccount": "xGlkN1RC", "notificationHmacKey": "BcBD9OMK", "notificationPassword": "U35qUCHW", "notificationUsername": "MD3YUltK", "returnUrl": "7NEpNKrA", "settings": "Kb5ay1Xj"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateAdyenConfig \
    --id 'ljglXgYD' \
    --sandbox 'true' \
    --validate 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 363 'UpdateAdyenConfig' test.out

#- 364 TestAdyenConfigById
$CLI_EXE \
    --sn platform \
    --op TestAdyenConfigById \
    --id 'CSLMIbHd' \
    --sandbox 'true' \
    > test.out 2>&1
eval_tap $? 364 'TestAdyenConfigById' test.out

#- 365 UpdateAliPayConfig
# body param: body
echo '{"appId": "hi85HmVT", "privateKey": "e9BpniXI", "publicKey": "6e2c1v8F", "returnUrl": "7pWs0g2n"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateAliPayConfig \
    --id 'QUdVF9kw' \
    --sandbox 'true' \
    --validate 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 365 'UpdateAliPayConfig' test.out

#- 366 TestAliPayConfigById
$CLI_EXE \
    --sn platform \
    --op TestAliPayConfigById \
    --id '8oWvaXV0' \
    --sandbox 'false' \
    > test.out 2>&1
eval_tap $? 366 'TestAliPayConfigById' test.out

#- 367 UpdateCheckoutConfig
# body param: body
echo '{"publicKey": "Cy4AUDXk", "secretKey": "9FQPzQHl"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCheckoutConfig \
    --id '8oFN54k2' \
    --sandbox 'false' \
    --validate 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 367 'UpdateCheckoutConfig' test.out

#- 368 TestCheckoutConfigById
$CLI_EXE \
    --sn platform \
    --op TestCheckoutConfigById \
    --id 'mjQZ3raW' \
    --sandbox 'true' \
    > test.out 2>&1
eval_tap $? 368 'TestCheckoutConfigById' test.out

#- 369 UpdateNeonPayConfig
# body param: body
echo '{"apiKey": "AFRi3ASG", "webhookSecretKey": "FeQet1qX"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateNeonPayConfig \
    --id 'IT0mJvoZ' \
    --sandbox 'true' \
    --validate 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 369 'UpdateNeonPayConfig' test.out

#- 370 TestNeonPayConfigById
$CLI_EXE \
    --sn platform \
    --op TestNeonPayConfigById \
    --id 'ecBKBsus' \
    --sandbox 'false' \
    > test.out 2>&1
eval_tap $? 370 'TestNeonPayConfigById' test.out

#- 371 UpdatePayPalConfig
# body param: body
echo '{"clientID": "dpbfpqyo", "clientSecret": "opvRpWLb", "returnUrl": "0oO9Sn5s", "webHookId": "V7fBdPXi"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePayPalConfig \
    --id 'zzp0o2A4' \
    --sandbox 'false' \
    --validate 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 371 'UpdatePayPalConfig' test.out

#- 372 TestPayPalConfigById
$CLI_EXE \
    --sn platform \
    --op TestPayPalConfigById \
    --id 'x8oJFggw' \
    --sandbox 'true' \
    > test.out 2>&1
eval_tap $? 372 'TestPayPalConfigById' test.out

#- 373 UpdateStripeConfig
# body param: body
echo '{"allowedPaymentMethodTypes": ["oBcQhKus", "6hNjRp72", "2Mv5SYFZ"], "publishableKey": "TnbWTaRZ", "secretKey": "Ye9WUrgK", "webhookSecret": "1NQhIG28"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateStripeConfig \
    --id 'Zweyyr49' \
    --sandbox 'true' \
    --validate 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 373 'UpdateStripeConfig' test.out

#- 374 TestStripeConfigById
$CLI_EXE \
    --sn platform \
    --op TestStripeConfigById \
    --id '7UcEVxm6' \
    --sandbox 'true' \
    > test.out 2>&1
eval_tap $? 374 'TestStripeConfigById' test.out

#- 375 UpdateWxPayConfig
# body param: body
echo '{"appId": "BcVPOcMq", "key": "ivR93s1I", "mchid": "l9nxi35e", "returnUrl": "IaTGKXGx"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateWxPayConfig \
    --id 'pvkxilrm' \
    --validate 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 375 'UpdateWxPayConfig' test.out

#- 376 UpdateWxPayConfigCert
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UpdateWxPayConfigCert \
    --id 'wCbmWDEF' \
    --upload file $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 376 'UpdateWxPayConfigCert' test.out

#- 377 TestWxPayConfigById
$CLI_EXE \
    --sn platform \
    --op TestWxPayConfigById \
    --id '2kBPra51' \
    > test.out 2>&1
eval_tap $? 377 'TestWxPayConfigById' test.out

#- 378 UpdateXsollaConfig
# body param: body
echo '{"apiKey": "8woHhiD4", "flowCompletionUrl": "HYrFEhSP", "merchantId": 87, "projectId": 54, "projectSecretKey": "wG4rs8hO"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXsollaConfig \
    --id 'zmQTLWpc' \
    --validate 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 378 'UpdateXsollaConfig' test.out

#- 379 TestXsollaConfigById
$CLI_EXE \
    --sn platform \
    --op TestXsollaConfigById \
    --id 'eo74rAib' \
    > test.out 2>&1
eval_tap $? 379 'TestXsollaConfigById' test.out

#- 380 UpdateXsollaUIConfig
# body param: body
echo '{"device": "MOBILE", "showCloseButton": true, "size": "SMALL", "theme": "DARK"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXsollaUIConfig \
    --id '1FWB7dLL' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 380 'UpdateXsollaUIConfig' test.out

#- 381 QueryPaymentProviderConfig
$CLI_EXE \
    --sn platform \
    --op QueryPaymentProviderConfig \
    --limit '2' \
    --namespace_ 'W2uSlSzo' \
    --offset '1' \
    --region 'l4M07OQK' \
    > test.out 2>&1
eval_tap $? 381 'QueryPaymentProviderConfig' test.out

#- 382 CreatePaymentProviderConfig
# body param: body
echo '{"aggregate": "XSOLLA", "namespace": "6mkfGpIn", "region": "3DNT0d0f", "sandboxTaxJarApiToken": "IdDH6w6Q", "specials": ["ADYEN", "WALLET", "ADYEN"], "taxJarApiToken": "DaOQEmih", "taxJarEnabled": false, "useGlobalTaxJarApiToken": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreatePaymentProviderConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 382 'CreatePaymentProviderConfig' test.out

#- 383 GetAggregatePaymentProviders
$CLI_EXE \
    --sn platform \
    --op GetAggregatePaymentProviders \
    > test.out 2>&1
eval_tap $? 383 'GetAggregatePaymentProviders' test.out

#- 384 DebugMatchedPaymentProviderConfig
$CLI_EXE \
    --sn platform \
    --op DebugMatchedPaymentProviderConfig \
    --namespace_ '1iMPiJ7o' \
    --region 'qSjrZcYI' \
    > test.out 2>&1
eval_tap $? 384 'DebugMatchedPaymentProviderConfig' test.out

#- 385 GetSpecialPaymentProviders
$CLI_EXE \
    --sn platform \
    --op GetSpecialPaymentProviders \
    > test.out 2>&1
eval_tap $? 385 'GetSpecialPaymentProviders' test.out

#- 386 UpdatePaymentProviderConfig
# body param: body
echo '{"aggregate": "XSOLLA", "namespace": "vYljSZpc", "region": "7z5bfS3A", "sandboxTaxJarApiToken": "9DxUIggK", "specials": ["NEONPAY", "CHECKOUT", "ADYEN"], "taxJarApiToken": "dbzO5EZl", "taxJarEnabled": false, "useGlobalTaxJarApiToken": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePaymentProviderConfig \
    --id 'zmac81fk' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 386 'UpdatePaymentProviderConfig' test.out

#- 387 DeletePaymentProviderConfig
$CLI_EXE \
    --sn platform \
    --op DeletePaymentProviderConfig \
    --id 'i4ljOJlo' \
    > test.out 2>&1
eval_tap $? 387 'DeletePaymentProviderConfig' test.out

#- 388 GetPaymentTaxConfig
$CLI_EXE \
    --sn platform \
    --op GetPaymentTaxConfig \
    > test.out 2>&1
eval_tap $? 388 'GetPaymentTaxConfig' test.out

#- 389 UpdatePaymentTaxConfig
# body param: body
echo '{"sandboxTaxJarApiToken": "XNsR0J5L", "taxJarApiToken": "psOlkgyK", "taxJarEnabled": false, "taxJarProductCodesMapping": {"YTrL5y8U": "4tfFOklB", "9lEpCtWW": "uCwJAkrI", "rPHoq1ix": "qMT8uDsr"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePaymentTaxConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 389 'UpdatePaymentTaxConfig' test.out

#- 390 SyncPaymentOrders
$CLI_EXE \
    --sn platform \
    --op SyncPaymentOrders \
    --nextEvaluatedKey 'pfbDI8EH' \
    --end 'ZYdT4AoB' \
    --start 'GtUHrrYU' \
    > test.out 2>&1
eval_tap $? 390 'SyncPaymentOrders' test.out

#- 391 PublicGetRootCategories
$CLI_EXE \
    --sn platform \
    --op PublicGetRootCategories \
    --namespace $AB_NAMESPACE \
    --language 'feGMvUhW' \
    --storeId '8A5h8I6X' \
    > test.out 2>&1
eval_tap $? 391 'PublicGetRootCategories' test.out

#- 392 DownloadCategories
$CLI_EXE \
    --sn platform \
    --op DownloadCategories \
    --namespace $AB_NAMESPACE \
    --language '9lhmS29s' \
    --storeId 'D3b9cCJp' \
    > test.out 2>&1
eval_tap $? 392 'DownloadCategories' test.out

#- 393 PublicGetCategory
$CLI_EXE \
    --sn platform \
    --op PublicGetCategory \
    --categoryPath 'mf82xKGN' \
    --namespace $AB_NAMESPACE \
    --language '29OPXb0f' \
    --storeId '79P7mB8V' \
    > test.out 2>&1
eval_tap $? 393 'PublicGetCategory' test.out

#- 394 PublicGetChildCategories
$CLI_EXE \
    --sn platform \
    --op PublicGetChildCategories \
    --categoryPath 'WNWxc63l' \
    --namespace $AB_NAMESPACE \
    --language 'vA60Uesj' \
    --storeId 'X5hNZAHm' \
    > test.out 2>&1
eval_tap $? 394 'PublicGetChildCategories' test.out

#- 395 PublicGetDescendantCategories
$CLI_EXE \
    --sn platform \
    --op PublicGetDescendantCategories \
    --categoryPath '8A4i20cY' \
    --namespace $AB_NAMESPACE \
    --language 'YZwfcywe' \
    --storeId 'folOGCxD' \
    > test.out 2>&1
eval_tap $? 395 'PublicGetDescendantCategories' test.out

#- 396 PublicListCurrencies
$CLI_EXE \
    --sn platform \
    --op PublicListCurrencies \
    --namespace $AB_NAMESPACE \
    --currencyType 'VIRTUAL' \
    > test.out 2>&1
eval_tap $? 396 'PublicListCurrencies' test.out

#- 397 GeDLCDurableRewardShortMap
$CLI_EXE \
    --sn platform \
    --op GeDLCDurableRewardShortMap \
    --namespace $AB_NAMESPACE \
    --dlcType 'XBOX' \
    > test.out 2>&1
eval_tap $? 397 'GeDLCDurableRewardShortMap' test.out

#- 398 GetAppleConfigVersion
$CLI_EXE \
    --sn platform \
    --op GetAppleConfigVersion \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 398 'GetAppleConfigVersion' test.out

#- 399 GetIAPItemMapping
$CLI_EXE \
    --sn platform \
    --op GetIAPItemMapping \
    --namespace $AB_NAMESPACE \
    --platform 'STADIA' \
    > test.out 2>&1
eval_tap $? 399 'GetIAPItemMapping' test.out

#- 400 PublicGetItemByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetItemByAppId \
    --namespace $AB_NAMESPACE \
    --language 'muEe446C' \
    --region 'dbFLPqgX' \
    --storeId 'xVSqQshf' \
    --appId 'gLRd73GL' \
    > test.out 2>&1
eval_tap $? 400 'PublicGetItemByAppId' test.out

#- 401 PublicQueryItems
$CLI_EXE \
    --sn platform \
    --op PublicQueryItems \
    --namespace $AB_NAMESPACE \
    --appType 'GAME' \
    --autoCalcEstimatedPrice 'false' \
    --baseAppId 'EakaZXuH' \
    --categoryPath 'qKBGaxkI' \
    --features 'XAhUEfIx' \
    --includeSubCategoryItem 'false' \
    --itemType 'BUNDLE' \
    --language 'qRwnFboW' \
    --limit '19' \
    --offset '25' \
    --region 'CgJCeSaV' \
    --sortBy '["name:desc", "createdAt", "displayOrder"]' \
    --storeId 'FRtJ84Yf' \
    --tags 'mXUzO8pW' \
    > test.out 2>&1
eval_tap $? 401 'PublicQueryItems' test.out

#- 402 PublicGetItemBySku
$CLI_EXE \
    --sn platform \
    --op PublicGetItemBySku \
    --namespace $AB_NAMESPACE \
    --autoCalcEstimatedPrice 'false' \
    --language 'IGZSRFJg' \
    --region 'BqJ5MC0O' \
    --storeId '4Z1KLh6j' \
    --sku 'WtlZypai' \
    > test.out 2>&1
eval_tap $? 402 'PublicGetItemBySku' test.out

#- 403 PublicGetEstimatedPrice
$CLI_EXE \
    --sn platform \
    --op PublicGetEstimatedPrice \
    --namespace $AB_NAMESPACE \
    --region 'LJtF2UCP' \
    --storeId 'bVHssCDb' \
    --itemIds '6mVI9H49' \
    > test.out 2>&1
eval_tap $? 403 'PublicGetEstimatedPrice' test.out

#- 404 PublicBulkGetItems
$CLI_EXE \
    --sn platform \
    --op PublicBulkGetItems \
    --namespace $AB_NAMESPACE \
    --autoCalcEstimatedPrice 'true' \
    --language 'RNE4IlPM' \
    --region 'Q2umocq9' \
    --storeId 'KLVHCsOU' \
    --itemIds '6Uq1sel0' \
    > test.out 2>&1
eval_tap $? 404 'PublicBulkGetItems' test.out

#- 405 PublicValidateItemPurchaseCondition
# body param: body
echo '{"itemIds": ["VortWIdl", "o3lp6Lcf", "RJhICORJ"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicValidateItemPurchaseCondition \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 405 'PublicValidateItemPurchaseCondition' test.out

#- 406 PublicSearchItems
$CLI_EXE \
    --sn platform \
    --op PublicSearchItems \
    --namespace $AB_NAMESPACE \
    --autoCalcEstimatedPrice 'false' \
    --itemType 'OPTIONBOX' \
    --limit '40' \
    --offset '83' \
    --region 'xJJiqRvT' \
    --storeId 'i8zuJuuN' \
    --keyword 'kJ3Y0yqo' \
    --language 'wxO2vfAu' \
    > test.out 2>&1
eval_tap $? 406 'PublicSearchItems' test.out

#- 407 PublicGetApp
$CLI_EXE \
    --sn platform \
    --op PublicGetApp \
    --itemId 'JNnh8Rv1' \
    --namespace $AB_NAMESPACE \
    --language '7KLd5xj5' \
    --region '2KwCHWSW' \
    --storeId 'h0kSmK62' \
    > test.out 2>&1
eval_tap $? 407 'PublicGetApp' test.out

#- 408 PublicGetItemDynamicData
$CLI_EXE \
    --sn platform \
    --op PublicGetItemDynamicData \
    --itemId 'pW6ZRkcy' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 408 'PublicGetItemDynamicData' test.out

#- 409 PublicGetItem
$CLI_EXE \
    --sn platform \
    --op PublicGetItem \
    --itemId '9Ky62OKL' \
    --namespace $AB_NAMESPACE \
    --autoCalcEstimatedPrice 'false' \
    --language 'AKTvCfns' \
    --populateBundle 'true' \
    --region 'IDnwqgYt' \
    --storeId 'P8HWihv5' \
    > test.out 2>&1
eval_tap $? 409 'PublicGetItem' test.out

#- 410 GetPaymentCustomization
eval_tap 0 410 'GetPaymentCustomization # SKIP deprecated' test.out

#- 411 PublicGetPaymentUrl
# body param: body
echo '{"neonPayConfig": {"cancelUrl": "2mOBorIZ", "successUrl": "eh2dlJnS"}, "paymentOrderNo": "SkDFHoqQ", "paymentProvider": "ADYEN", "returnUrl": "6rCMkp4D", "ui": "VeGuye10", "zipCode": "QztQVxkk"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicGetPaymentUrl \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 411 'PublicGetPaymentUrl' test.out

#- 412 PublicGetPaymentMethods
$CLI_EXE \
    --sn platform \
    --op PublicGetPaymentMethods \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'SPLFLgod' \
    > test.out 2>&1
eval_tap $? 412 'PublicGetPaymentMethods' test.out

#- 413 PublicGetUnpaidPaymentOrder
$CLI_EXE \
    --sn platform \
    --op PublicGetUnpaidPaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'LLBGgoV6' \
    > test.out 2>&1
eval_tap $? 413 'PublicGetUnpaidPaymentOrder' test.out

#- 414 Pay
# body param: body
echo '{"token": "M4nseflz"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op Pay \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'fjtMl6zQ' \
    --paymentProvider 'WXPAY' \
    --zipCode 'NG1uYpuK' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 414 'Pay' test.out

#- 415 PublicCheckPaymentOrderPaidStatus
$CLI_EXE \
    --sn platform \
    --op PublicCheckPaymentOrderPaidStatus \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'cocxT5FZ' \
    > test.out 2>&1
eval_tap $? 415 'PublicCheckPaymentOrderPaidStatus' test.out

#- 416 GetPaymentPublicConfig
$CLI_EXE \
    --sn platform \
    --op GetPaymentPublicConfig \
    --namespace $AB_NAMESPACE \
    --sandbox 'false' \
    --paymentProvider 'XSOLLA' \
    --region 'kVmp4uq4' \
    > test.out 2>&1
eval_tap $? 416 'GetPaymentPublicConfig' test.out

#- 417 PublicGetQRCode
$CLI_EXE \
    --sn platform \
    --op PublicGetQRCode \
    --namespace $AB_NAMESPACE \
    --code 'mJViCeGS' \
    > test.out 2>&1
eval_tap $? 417 'PublicGetQRCode' test.out

#- 418 PublicNormalizePaymentReturnUrl
$CLI_EXE \
    --sn platform \
    --op PublicNormalizePaymentReturnUrl \
    --namespace $AB_NAMESPACE \
    --payerID '9ujtpOE6' \
    --foreinginvoice '1E3jlHJg' \
    --invoiceId '4bu4m8Qt' \
    --payload 'cVRPp2Za' \
    --redirectResult 'rhXytRa3' \
    --resultCode 'N1wGbDDK' \
    --sessionId '1OiS7m5h' \
    --status 'T1EDpcn5' \
    --token 'ldY3YEHd' \
    --type 'GaGxJlpH' \
    --userId 'gWM4zSQX' \
    --orderNo 'lF99kQuV' \
    --paymentOrderNo 'pncOemTO' \
    --paymentProvider 'ADYEN' \
    --returnUrl 'fgcHeeAG' \
    > test.out 2>&1
eval_tap $? 418 'PublicNormalizePaymentReturnUrl' test.out

#- 419 GetPaymentTaxValue
$CLI_EXE \
    --sn platform \
    --op GetPaymentTaxValue \
    --namespace $AB_NAMESPACE \
    --zipCode 'YK8tnJcE' \
    --paymentOrderNo 'GTFDdK1i' \
    --paymentProvider 'PAYPAL' \
    > test.out 2>&1
eval_tap $? 419 'GetPaymentTaxValue' test.out

#- 420 GetRewardByCode
$CLI_EXE \
    --sn platform \
    --op GetRewardByCode \
    --namespace $AB_NAMESPACE \
    --rewardCode 'vPY66aA1' \
    > test.out 2>&1
eval_tap $? 420 'GetRewardByCode' test.out

#- 421 QueryRewards1
$CLI_EXE \
    --sn platform \
    --op QueryRewards1 \
    --namespace $AB_NAMESPACE \
    --eventTopic 'QMYmTFHG' \
    --limit '79' \
    --offset '72' \
    --sortBy '["namespace", "rewardCode:asc", "namespace:asc"]' \
    > test.out 2>&1
eval_tap $? 421 'QueryRewards1' test.out

#- 422 GetReward1
$CLI_EXE \
    --sn platform \
    --op GetReward1 \
    --namespace $AB_NAMESPACE \
    --rewardId 'm5vn5gdR' \
    > test.out 2>&1
eval_tap $? 422 'GetReward1' test.out

#- 423 PublicListStores
$CLI_EXE \
    --sn platform \
    --op PublicListStores \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 423 'PublicListStores' test.out

#- 424 PublicExistsAnyMyActiveEntitlement
$CLI_EXE \
    --sn platform \
    --op PublicExistsAnyMyActiveEntitlement \
    --namespace $AB_NAMESPACE \
    --appIds '["VrEG2AHv", "Lx0DJ3VF", "wTIYX2Xl"]' \
    --itemIds '["Np1VPOtF", "q8tu4Fb9", "iO98SkQW"]' \
    --skus '["SbcCd4Va", "4itTFII8", "WcXDLZLQ"]' \
    > test.out 2>&1
eval_tap $? 424 'PublicExistsAnyMyActiveEntitlement' test.out

#- 425 PublicGetMyAppEntitlementOwnershipByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetMyAppEntitlementOwnershipByAppId \
    --namespace $AB_NAMESPACE \
    --appId '4scDYxk0' \
    > test.out 2>&1
eval_tap $? 425 'PublicGetMyAppEntitlementOwnershipByAppId' test.out

#- 426 PublicGetMyEntitlementOwnershipByItemId
$CLI_EXE \
    --sn platform \
    --op PublicGetMyEntitlementOwnershipByItemId \
    --namespace $AB_NAMESPACE \
    --entitlementClazz 'MEDIA' \
    --itemId 'KQkyTZhB' \
    > test.out 2>&1
eval_tap $? 426 'PublicGetMyEntitlementOwnershipByItemId' test.out

#- 427 PublicGetMyEntitlementOwnershipBySku
$CLI_EXE \
    --sn platform \
    --op PublicGetMyEntitlementOwnershipBySku \
    --namespace $AB_NAMESPACE \
    --entitlementClazz 'MEDIA' \
    --sku 'lfKLISGi' \
    > test.out 2>&1
eval_tap $? 427 'PublicGetMyEntitlementOwnershipBySku' test.out

#- 428 PublicGetEntitlementOwnershipToken
$CLI_EXE \
    --sn platform \
    --op PublicGetEntitlementOwnershipToken \
    --namespace $AB_NAMESPACE \
    --appIds '["tNAnxmGY", "TdoXFL8M", "ohCeiK2W"]' \
    --itemIds '["vzIg5i63", "Tb5ckcc1", "STZ0zzGc"]' \
    --skus '["PM8JOGRn", "vVIYHPoo", "hO3O1Mzp"]' \
    > test.out 2>&1
eval_tap $? 428 'PublicGetEntitlementOwnershipToken' test.out

#- 429 SyncTwitchDropsEntitlement
# body param: body
echo '{"gameId": "9LtqfvwO", "language": "bm", "region": "Gyr93ygl"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncTwitchDropsEntitlement \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 429 'SyncTwitchDropsEntitlement' test.out

#- 430 PublicGetMyWallet
$CLI_EXE \
    --sn platform \
    --op PublicGetMyWallet \
    --currencyCode 'wAVau4ji' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 430 'PublicGetMyWallet' test.out

#- 431 SyncEpicGameDLC
# body param: body
echo '{"epicGamesJwtToken": "qlDWJy6a"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncEpicGameDLC \
    --namespace $AB_NAMESPACE \
    --userId 'hRIcgkP9' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 431 'SyncEpicGameDLC' test.out

#- 432 SyncOculusDLC
$CLI_EXE \
    --sn platform \
    --op SyncOculusDLC \
    --namespace $AB_NAMESPACE \
    --userId 'qp3oDiqH' \
    > test.out 2>&1
eval_tap $? 432 'SyncOculusDLC' test.out

#- 433 PublicSyncPsnDlcInventory
# body param: body
echo '{"serviceLabel": 94}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicSyncPsnDlcInventory \
    --namespace $AB_NAMESPACE \
    --userId 'j2BYvvTz' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 433 'PublicSyncPsnDlcInventory' test.out

#- 434 PublicSyncPsnDlcInventoryWithMultipleServiceLabels
# body param: body
echo '{"serviceLabels": [92, 93, 39]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicSyncPsnDlcInventoryWithMultipleServiceLabels \
    --namespace $AB_NAMESPACE \
    --userId 'MubAPhe1' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 434 'PublicSyncPsnDlcInventoryWithMultipleServiceLabels' test.out

#- 435 SyncSteamDLC
# body param: body
echo '{"appId": "Y1nAE1dy", "steamId": "BklwShgV"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncSteamDLC \
    --namespace $AB_NAMESPACE \
    --userId 'ZNNLMr4f' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 435 'SyncSteamDLC' test.out

#- 436 SyncXboxDLC
# body param: body
echo '{"xstsToken": "2DSzEnY8"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncXboxDLC \
    --namespace $AB_NAMESPACE \
    --userId 'Y0Q8GeSx' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 436 'SyncXboxDLC' test.out

#- 437 PublicQueryUserEntitlements
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserEntitlements \
    --namespace $AB_NAMESPACE \
    --userId 'ScfdgPSL' \
    --appType 'DLC' \
    --entitlementClazz 'LOOTBOX' \
    --entitlementName 'KC26wXm0' \
    --features '["8eSaB7TL", "HclMpQMp", "zvkLrdRM"]' \
    --itemId '["vQ3P4QY0", "sQOrXeWw", "ywsBQrzY"]' \
    --limit '61' \
    --offset '94' \
    > test.out 2>&1
eval_tap $? 437 'PublicQueryUserEntitlements' test.out

#- 438 PublicGetUserAppEntitlementByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetUserAppEntitlementByAppId \
    --namespace $AB_NAMESPACE \
    --userId 'hTaXq2JJ' \
    --appId 'BupAQ7hT' \
    > test.out 2>&1
eval_tap $? 438 'PublicGetUserAppEntitlementByAppId' test.out

#- 439 PublicQueryUserEntitlementsByAppType
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserEntitlementsByAppType \
    --namespace $AB_NAMESPACE \
    --userId 'q7kIFNMF' \
    --limit '53' \
    --offset '51' \
    --appType 'DLC' \
    > test.out 2>&1
eval_tap $? 439 'PublicQueryUserEntitlementsByAppType' test.out

#- 440 PublicGetUserEntitlementsByIds
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementsByIds \
    --namespace $AB_NAMESPACE \
    --userId 'jVhNVbov' \
    --availablePlatformOnly 'false' \
    --ids '["a31imxUo", "OqIuQeIb", "HDxmE8o3"]' \
    > test.out 2>&1
eval_tap $? 440 'PublicGetUserEntitlementsByIds' test.out

#- 441 PublicGetUserEntitlementByItemId
eval_tap 0 441 'PublicGetUserEntitlementByItemId # SKIP deprecated' test.out

#- 442 PublicGetUserEntitlementBySku
eval_tap 0 442 'PublicGetUserEntitlementBySku # SKIP deprecated' test.out

#- 443 PublicUserEntitlementHistory
$CLI_EXE \
    --sn platform \
    --op PublicUserEntitlementHistory \
    --namespace $AB_NAMESPACE \
    --userId 'd0HIziu9' \
    --endDate 'yli8Y0Oj' \
    --entitlementClazz 'LOOTBOX' \
    --limit '65' \
    --offset '87' \
    --startDate 'BoL0S9VK' \
    > test.out 2>&1
eval_tap $? 443 'PublicUserEntitlementHistory' test.out

#- 444 PublicExistsAnyUserActiveEntitlement
$CLI_EXE \
    --sn platform \
    --op PublicExistsAnyUserActiveEntitlement \
    --namespace $AB_NAMESPACE \
    --userId '5bfTsPBF' \
    --appIds '["j39nzZiS", "lzooaDns", "jg1mh2o8"]' \
    --itemIds '["tnpY4McU", "mRaIaJqA", "lMh0Dsso"]' \
    --skus '["mN0vbOg5", "G22vsj38", "yLEFM4nZ"]' \
    > test.out 2>&1
eval_tap $? 444 'PublicExistsAnyUserActiveEntitlement' test.out

#- 445 PublicGetUserAppEntitlementOwnershipByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetUserAppEntitlementOwnershipByAppId \
    --namespace $AB_NAMESPACE \
    --userId 'ayxilNCv' \
    --appId 'Wej09sXj' \
    > test.out 2>&1
eval_tap $? 445 'PublicGetUserAppEntitlementOwnershipByAppId' test.out

#- 446 PublicGetUserEntitlementOwnershipByItemId
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementOwnershipByItemId \
    --namespace $AB_NAMESPACE \
    --userId '5pqc2Zz1' \
    --entitlementClazz 'APP' \
    --itemId '4HGcBB3E' \
    > test.out 2>&1
eval_tap $? 446 'PublicGetUserEntitlementOwnershipByItemId' test.out

#- 447 PublicGetUserEntitlementOwnershipByItemIds
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementOwnershipByItemIds \
    --namespace $AB_NAMESPACE \
    --userId 'ji93gzod' \
    --ids '["4q8YHM1j", "ejMnXFw6", "yR8tL0Vl"]' \
    > test.out 2>&1
eval_tap $? 447 'PublicGetUserEntitlementOwnershipByItemIds' test.out

#- 448 PublicGetUserEntitlementOwnershipBySku
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementOwnershipBySku \
    --namespace $AB_NAMESPACE \
    --userId 'D29wCGxm' \
    --entitlementClazz 'APP' \
    --sku 'vNyh3A6P' \
    > test.out 2>&1
eval_tap $? 448 'PublicGetUserEntitlementOwnershipBySku' test.out

#- 449 PublicGetUserEntitlement
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlement \
    --entitlementId 'czEHrCX0' \
    --namespace $AB_NAMESPACE \
    --userId 'vIffxBzB' \
    > test.out 2>&1
eval_tap $? 449 'PublicGetUserEntitlement' test.out

#- 450 PublicConsumeUserEntitlement
# body param: body
echo '{"metadata": {"operationSource": "INVENTORY"}, "options": ["RUVI8xPI", "4QrKouXu", "Bp5YZcpx"], "requestId": "6wQ2IMqr", "useCount": 16}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicConsumeUserEntitlement \
    --entitlementId 'vgueuGiw' \
    --namespace $AB_NAMESPACE \
    --userId 'uaxl3qQl' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 450 'PublicConsumeUserEntitlement' test.out

#- 451 PublicSellUserEntitlement
# body param: body
echo '{"requestId": "fIT3dg38", "useCount": 28}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicSellUserEntitlement \
    --entitlementId '7QCQvBYh' \
    --namespace $AB_NAMESPACE \
    --userId 'YRzSrY8b' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 451 'PublicSellUserEntitlement' test.out

#- 452 PublicSplitUserEntitlement
# body param: body
echo '{"metadata": {"operationSource": "INVENTORY"}, "useCount": 1}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicSplitUserEntitlement \
    --entitlementId 'O2ri2ziN' \
    --namespace $AB_NAMESPACE \
    --userId '069duXlc' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 452 'PublicSplitUserEntitlement' test.out

#- 453 PublicTransferUserEntitlement
# body param: body
echo '{"entitlementId": "QOxdKQmt", "metadata": {"operationSource": "INVENTORY"}, "useCount": 72}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicTransferUserEntitlement \
    --entitlementId 'cKs5dTf8' \
    --namespace $AB_NAMESPACE \
    --userId '1SqnpV3S' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 453 'PublicTransferUserEntitlement' test.out

#- 454 PublicRedeemCode
# body param: body
echo '{"code": "UDMkgibL", "language": "qBa-insg_lh", "region": "yblr9TFc"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicRedeemCode \
    --namespace $AB_NAMESPACE \
    --userId 'HPmJFROc' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 454 'PublicRedeemCode' test.out

#- 455 PublicFulfillAppleIAPItem
# body param: body
echo '{"excludeOldTransactions": true, "language": "lB_fCVj", "productId": "LV6zuqGQ", "receiptData": "Qj5HbdE8", "region": "fqLcfqKs", "transactionId": "pH4uw9Hg"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicFulfillAppleIAPItem \
    --namespace $AB_NAMESPACE \
    --userId 'usfZt1fP' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 455 'PublicFulfillAppleIAPItem' test.out

#- 456 SyncEpicGamesInventory
# body param: body
echo '{"epicGamesJwtToken": "nmQcxTaa"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncEpicGamesInventory \
    --namespace $AB_NAMESPACE \
    --userId 'CUoBMC0F' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 456 'SyncEpicGamesInventory' test.out

#- 457 PublicFulfillGoogleIAPItem
# body param: body
echo '{"autoAck": true, "autoConsume": true, "language": "ggH-ndqP", "orderId": "pLD33OMM", "packageName": "EHWQn1eM", "productId": "KRdBCUD1", "purchaseTime": 60, "purchaseToken": "NpzgaYFz", "region": "BnVUezmM", "subscriptionPurchase": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicFulfillGoogleIAPItem \
    --namespace $AB_NAMESPACE \
    --userId 'puQuChAs' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 457 'PublicFulfillGoogleIAPItem' test.out

#- 458 SyncOculusConsumableEntitlements
$CLI_EXE \
    --sn platform \
    --op SyncOculusConsumableEntitlements \
    --namespace $AB_NAMESPACE \
    --userId 'IXQBkSJq' \
    > test.out 2>&1
eval_tap $? 458 'SyncOculusConsumableEntitlements' test.out

#- 459 PublicReconcilePlayStationStore
# body param: body
echo '{"currencyCode": "fFpgT4Lk", "price": 0.5757927595940233, "productId": "iiOt12vW", "serviceLabel": 67}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicReconcilePlayStationStore \
    --namespace $AB_NAMESPACE \
    --userId 'R6T8RlI5' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 459 'PublicReconcilePlayStationStore' test.out

#- 460 PublicReconcilePlayStationStoreWithMultipleServiceLabels
# body param: body
echo '{"currencyCode": "lSfmO9ok", "price": 0.5337654245652416, "productId": "X6dxmv9g", "serviceLabels": [17, 45, 71]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicReconcilePlayStationStoreWithMultipleServiceLabels \
    --namespace $AB_NAMESPACE \
    --userId '4YyXwt5D' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 460 'PublicReconcilePlayStationStoreWithMultipleServiceLabels' test.out

#- 461 SyncSteamInventory
# body param: body
echo '{"appId": "Vga77TO0", "currencyCode": "8LVug70i", "language": "Jr-PVQb", "price": 0.3636410886505552, "productId": "ulZ040GL", "region": "VbP0R0Cu", "steamId": "7woNJOkk"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncSteamInventory \
    --namespace $AB_NAMESPACE \
    --userId 'GfjAvxHR' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 461 'SyncSteamInventory' test.out

#- 462 SyncSteamAbnormalTransaction
$CLI_EXE \
    --sn platform \
    --op SyncSteamAbnormalTransaction \
    --namespace $AB_NAMESPACE \
    --userId 'OWgmYHJI' \
    > test.out 2>&1
eval_tap $? 462 'SyncSteamAbnormalTransaction' test.out

#- 463 SyncSteamIAPByTransaction
# body param: body
echo '{"orderId": "1VTWUEMH"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncSteamIAPByTransaction \
    --namespace $AB_NAMESPACE \
    --userId '1uZgFRRH' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 463 'SyncSteamIAPByTransaction' test.out

#- 464 PublicQueryUserThirdPartySubscription
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserThirdPartySubscription \
    --namespace $AB_NAMESPACE \
    --platform 'PLAYSTATION' \
    --userId 'yeeU0eU1' \
    --activeOnly 'true' \
    --groupId 'WntnD3gE' \
    --limit '33' \
    --offset '24' \
    --productId 'crgZlMTh' \
    > test.out 2>&1
eval_tap $? 464 'PublicQueryUserThirdPartySubscription' test.out

#- 465 SyncTwitchDropsEntitlement1
# body param: body
echo '{"gameId": "WG2oUlxY", "language": "tZB_tYcD", "region": "rzbkCveY"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncTwitchDropsEntitlement1 \
    --namespace $AB_NAMESPACE \
    --userId 'mVNtq1OQ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 465 'SyncTwitchDropsEntitlement1' test.out

#- 466 SyncXboxInventory
# body param: body
echo '{"currencyCode": "6aFv6fgC", "price": 0.7293182711725592, "productId": "Dr1aHmP6", "xstsToken": "SYaOe8gc"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncXboxInventory \
    --namespace $AB_NAMESPACE \
    --userId 'XDExOogC' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 466 'SyncXboxInventory' test.out

#- 467 PublicQueryUserOrders
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserOrders \
    --namespace $AB_NAMESPACE \
    --userId 'jh6ksW32' \
    --discounted 'false' \
    --itemId '5R6XeovO' \
    --limit '20' \
    --offset '0' \
    --status 'REFUND_FAILED' \
    > test.out 2>&1
eval_tap $? 467 'PublicQueryUserOrders' test.out

#- 468 PublicCreateUserOrder
# body param: body
echo '{"currencyCode": "rRPtkC0r", "discountCodes": ["mIKF8X6Z", "KQOQZUQQ", "4z4guBpO"], "discountedPrice": 3, "ext": {"7dwpY7Xo": {}, "pAkjI2Ab": {}, "N09MH330": {}}, "itemId": "wjSSGR9Z", "language": "xDB", "price": 97, "quantity": 24, "region": "qDAXZ9HP", "returnUrl": "I5JYVAOm", "sectionId": "kd5KtT5e"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicCreateUserOrder \
    --namespace $AB_NAMESPACE \
    --userId 'WRloBukZ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 468 'PublicCreateUserOrder' test.out

#- 469 PublicPreviewOrderPrice
# body param: body
echo '{"currencyCode": "s9FKQJiy", "discountCodes": ["qBZ1Q7Fr", "ncsqehIg", "YOhT14jb"], "discountedPrice": 47, "itemId": "UvLLZVmx", "price": 10, "quantity": 56}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicPreviewOrderPrice \
    --namespace $AB_NAMESPACE \
    --userId 'TzQigpqY' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 469 'PublicPreviewOrderPrice' test.out

#- 470 PublicGetUserOrder
$CLI_EXE \
    --sn platform \
    --op PublicGetUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo '3Zdgkbx1' \
    --userId 'mMSK3yHu' \
    > test.out 2>&1
eval_tap $? 470 'PublicGetUserOrder' test.out

#- 471 PublicCancelUserOrder
$CLI_EXE \
    --sn platform \
    --op PublicCancelUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'ZAwGHn3l' \
    --userId 'eeG3MoD5' \
    > test.out 2>&1
eval_tap $? 471 'PublicCancelUserOrder' test.out

#- 472 PublicGetUserOrderHistories
$CLI_EXE \
    --sn platform \
    --op PublicGetUserOrderHistories \
    --namespace $AB_NAMESPACE \
    --orderNo 'Em5Fk1En' \
    --userId 'zdGJzh7u' \
    > test.out 2>&1
eval_tap $? 472 'PublicGetUserOrderHistories' test.out

#- 473 PublicDownloadUserOrderReceipt
$CLI_EXE \
    --sn platform \
    --op PublicDownloadUserOrderReceipt \
    --namespace $AB_NAMESPACE \
    --orderNo 'MWUQPibp' \
    --userId '9xpOJ1WM' \
    > test.out 2>&1
eval_tap $? 473 'PublicDownloadUserOrderReceipt' test.out

#- 474 PublicGetPaymentAccounts
$CLI_EXE \
    --sn platform \
    --op PublicGetPaymentAccounts \
    --namespace $AB_NAMESPACE \
    --userId '2fnlwML0' \
    > test.out 2>&1
eval_tap $? 474 'PublicGetPaymentAccounts' test.out

#- 475 PublicDeletePaymentAccount
$CLI_EXE \
    --sn platform \
    --op PublicDeletePaymentAccount \
    --id 'qm8Io5MH' \
    --namespace $AB_NAMESPACE \
    --type 'paypal' \
    --userId 'Nmq2ldZX' \
    > test.out 2>&1
eval_tap $? 475 'PublicDeletePaymentAccount' test.out

#- 476 PublicListActiveSections
$CLI_EXE \
    --sn platform \
    --op PublicListActiveSections \
    --namespace $AB_NAMESPACE \
    --userId 'nB2XgSqQ' \
    --autoCalcEstimatedPrice 'true' \
    --language 'rZJ3AGXW' \
    --region 'ORumDq63' \
    --storeId 'Ob5TtGwc' \
    --viewId 'BJ0LzTE5' \
    > test.out 2>&1
eval_tap $? 476 'PublicListActiveSections' test.out

#- 477 PublicQueryUserSubscriptions
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserSubscriptions \
    --namespace $AB_NAMESPACE \
    --userId 'VZCmfNWl' \
    --chargeStatus 'SETUP' \
    --itemId 'HGPrdVM7' \
    --limit '50' \
    --offset '55' \
    --sku '08KPkaYs' \
    --status 'CANCELLED' \
    --subscribedBy 'USER' \
    > test.out 2>&1
eval_tap $? 477 'PublicQueryUserSubscriptions' test.out

#- 478 PublicSubscribeSubscription
# body param: body
echo '{"currencyCode": "Dz2X22FG", "itemId": "EUteRzOi", "language": "SM-sfhM", "region": "tioJrlwJ", "returnUrl": "DQwiiYk1", "source": "k5LZXb0K"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicSubscribeSubscription \
    --namespace $AB_NAMESPACE \
    --userId 'gibTeR8b' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 478 'PublicSubscribeSubscription' test.out

#- 479 PublicCheckUserSubscriptionSubscribableByItemId
$CLI_EXE \
    --sn platform \
    --op PublicCheckUserSubscriptionSubscribableByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'hlUYivon' \
    --itemId 'Zv306mLz' \
    > test.out 2>&1
eval_tap $? 479 'PublicCheckUserSubscriptionSubscribableByItemId' test.out

#- 480 PublicGetUserSubscription
$CLI_EXE \
    --sn platform \
    --op PublicGetUserSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId '3VQip0Zo' \
    --userId '2gHqkDmy' \
    > test.out 2>&1
eval_tap $? 480 'PublicGetUserSubscription' test.out

#- 481 PublicChangeSubscriptionBillingAccount
$CLI_EXE \
    --sn platform \
    --op PublicChangeSubscriptionBillingAccount \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'wWiB6Gkl' \
    --userId 'zsfxDXqK' \
    > test.out 2>&1
eval_tap $? 481 'PublicChangeSubscriptionBillingAccount' test.out

#- 482 PublicCancelSubscription
# body param: body
echo '{"immediate": false, "reason": "czeljaJw"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicCancelSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'BN88GF76' \
    --userId 'mmzHQmJO' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 482 'PublicCancelSubscription' test.out

#- 483 PublicGetUserSubscriptionBillingHistories
$CLI_EXE \
    --sn platform \
    --op PublicGetUserSubscriptionBillingHistories \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'nzs848g8' \
    --userId '8btby5xP' \
    --excludeFree 'false' \
    --limit '20' \
    --offset '80' \
    > test.out 2>&1
eval_tap $? 483 'PublicGetUserSubscriptionBillingHistories' test.out

#- 484 PublicListViews
$CLI_EXE \
    --sn platform \
    --op PublicListViews \
    --namespace $AB_NAMESPACE \
    --userId 'XaIxb7Py' \
    --language 'kK9Vq37s' \
    --storeId 'lqX5HOb7' \
    > test.out 2>&1
eval_tap $? 484 'PublicListViews' test.out

#- 485 PublicGetWallet
$CLI_EXE \
    --sn platform \
    --op PublicGetWallet \
    --currencyCode 'WnFjoerG' \
    --namespace $AB_NAMESPACE \
    --userId 'MT4wjaEY' \
    > test.out 2>&1
eval_tap $? 485 'PublicGetWallet' test.out

#- 486 PublicListUserWalletTransactions
$CLI_EXE \
    --sn platform \
    --op PublicListUserWalletTransactions \
    --currencyCode '7TKDqExU' \
    --namespace $AB_NAMESPACE \
    --userId 'iRcXqaU0' \
    --limit '14' \
    --offset '32' \
    > test.out 2>&1
eval_tap $? 486 'PublicListUserWalletTransactions' test.out

#- 487 PublicGetMyDLCContent
$CLI_EXE \
    --sn platform \
    --op PublicGetMyDLCContent \
    --includeAllNamespaces 'true' \
    --type 'STEAM' \
    > test.out 2>&1
eval_tap $? 487 'PublicGetMyDLCContent' test.out

#- 488 QueryFulfillments
$CLI_EXE \
    --sn platform \
    --op QueryFulfillments \
    --namespace $AB_NAMESPACE \
    --endTime '9EYjwHVE' \
    --limit '36' \
    --offset '58' \
    --startTime 'LPtIpZmB' \
    --state 'REVOKE_FAILED' \
    --transactionId 'v5tDe6yt' \
    --userId 'BzZP1z8L' \
    > test.out 2>&1
eval_tap $? 488 'QueryFulfillments' test.out

#- 489 QueryItemsV2
$CLI_EXE \
    --sn platform \
    --op QueryItemsV2 \
    --namespace $AB_NAMESPACE \
    --appType 'SOFTWARE' \
    --availableDate 'a2ERQ6yM' \
    --baseAppId 'RhivEwZP' \
    --categoryPath 'lsf3NA3R' \
    --features 'zMMbzPZQ' \
    --includeSubCategoryItem 'false' \
    --itemName 'AmYBt0Uk' \
    --itemStatus 'ACTIVE' \
    --itemType '["BUNDLE", "LOOTBOX", "APP"]' \
    --limit '0' \
    --offset '71' \
    --region '2Q7TBgLR' \
    --sectionExclusive 'false' \
    --sortBy '["displayOrder:desc", "createdAt:asc", "createdAt"]' \
    --storeId '6jY1iS3d' \
    --tags 'aIKhP1in' \
    --targetNamespace 'CkiFOrr6' \
    --withTotal 'true' \
    > test.out 2>&1
eval_tap $? 489 'QueryItemsV2' test.out

#- 490 ImportStore1
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op ImportStore1 \
    --namespace $AB_NAMESPACE \
    --storeId 'XT1QNOyZ' \
    --strictMode 'true' \
    --upload file $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 490 'ImportStore1' test.out

#- 491 ExportStore1
# body param: body
echo '{"itemIds": ["YeMPpGr1", "q7lyKaD4", "b2871Hi5"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ExportStore1 \
    --namespace $AB_NAMESPACE \
    --storeId 't3kf9xGQ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 491 'ExportStore1' test.out

#- 492 FulfillRewardsV2
# body param: body
echo '{"entitlementCollectionId": "AkCLlG70", "entitlementOrigin": "IOS", "metadata": {"vwXqewik": {}, "Llm73ute": {}, "HfpJpIru": {}}, "origin": "Other", "rewards": [{"currency": {"currencyCode": "LrVyjdfn", "namespace": "n6vsnxK6"}, "item": {"itemId": "FZZxNnRm", "itemName": "5RDcpGkG", "itemSku": "NAY73Y6S", "itemType": "j1Jg4Lr6"}, "quantity": 91, "type": "ITEM"}, {"currency": {"currencyCode": "h6gMdiO0", "namespace": "63itPmrT"}, "item": {"itemId": "xDQLxUYN", "itemName": "DadSLryo", "itemSku": "8KlmUhiv", "itemType": "ERs1Ic6b"}, "quantity": 58, "type": "CURRENCY"}, {"currency": {"currencyCode": "Lm7rvSQE", "namespace": "6tecIEtu"}, "item": {"itemId": "jh90TfM7", "itemName": "aFfOsx8B", "itemSku": "0t6mYNNV", "itemType": "TnxzINKs"}, "quantity": 16, "type": "CURRENCY"}], "source": "IAP", "transactionId": "JMgmpPPs"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op FulfillRewardsV2 \
    --namespace $AB_NAMESPACE \
    --userId 'KZf1Q7ay' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 492 'FulfillRewardsV2' test.out

#- 493 FulfillItems
eval_tap 0 493 'FulfillItems # SKIP deprecated' test.out

#- 494 RetryFulfillItems
eval_tap 0 494 'RetryFulfillItems # SKIP deprecated' test.out

#- 495 RevokeItems
eval_tap 0 495 'RevokeItems # SKIP deprecated' test.out

#- 496 V2PublicFulfillAppleIAPItem
# body param: body
echo '{"transactionId": "gJOUbUcm"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op V2PublicFulfillAppleIAPItem \
    --namespace $AB_NAMESPACE \
    --userId 'sI4HappG' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 496 'V2PublicFulfillAppleIAPItem' test.out

#- 497 FulfillItemsV3
# body param: body
echo '{"items": [{"duration": 63, "endDate": "1974-02-11T00:00:00Z", "entitlementCollectionId": "9ynrtiVr", "entitlementOrigin": "Playstation", "itemId": "pP0YshFk", "itemSku": "0cd79XAV", "language": "g8HyGYgU", "metadata": {"KP28sx6G": {}, "zr4kuCNw": {}, "om7iFFgu": {}}, "orderNo": "VlxzgyGB", "origin": "IOS", "quantity": 40, "region": "3xhxrWZ6", "source": "ORDER_REVOCATION", "startDate": "1975-03-29T00:00:00Z", "storeId": "qBIEWpGB"}, {"duration": 67, "endDate": "1986-03-24T00:00:00Z", "entitlementCollectionId": "Icrx8hRf", "entitlementOrigin": "Playstation", "itemId": "lP8i5NoX", "itemSku": "F3vX9Lhh", "language": "oDnloe3Q", "metadata": {"sx3RxLZi": {}, "nqZprNHd": {}, "K5i6LDr4": {}}, "orderNo": "94Xk8hDL", "origin": "System", "quantity": 27, "region": "bLs1v5wL", "source": "DLC", "startDate": "1978-06-27T00:00:00Z", "storeId": "TKLiAQvV"}, {"duration": 71, "endDate": "1978-05-06T00:00:00Z", "entitlementCollectionId": "M7GwN4dM", "entitlementOrigin": "System", "itemId": "HUTqbNkT", "itemSku": "CkSlcGJp", "language": "EMAumpHZ", "metadata": {"igCM6bl4": {}, "P8yIhNLF": {}, "8Qyy9Yd3": {}}, "orderNo": "984GOYpr", "origin": "Xbox", "quantity": 43, "region": "aduPnIdv", "source": "ORDER_REVOCATION", "startDate": "1983-11-14T00:00:00Z", "storeId": "gmNW8xke"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op FulfillItemsV3 \
    --namespace $AB_NAMESPACE \
    --transactionId '8OCa4EtA' \
    --userId '4WV47ONH' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 497 'FulfillItemsV3' test.out

#- 498 RetryFulfillItemsV3
$CLI_EXE \
    --sn platform \
    --op RetryFulfillItemsV3 \
    --namespace $AB_NAMESPACE \
    --transactionId '6SHyuagW' \
    --userId 'PoZYOUuq' \
    > test.out 2>&1
eval_tap $? 498 'RetryFulfillItemsV3' test.out

#- 499 RevokeItemsV3
$CLI_EXE \
    --sn platform \
    --op RevokeItemsV3 \
    --namespace $AB_NAMESPACE \
    --transactionId 'qUfyPd4T' \
    --userId 'aMVx26jg' \
    > test.out 2>&1
eval_tap $? 499 'RevokeItemsV3' test.out


# remove artifacts
rm -f "$CLI_TOKEN_FILE"
rm -f "$TEMP_JSON_INPUT"
rm -f "$TEMP_FILE_UPLOAD"

exit $EXIT_CODE