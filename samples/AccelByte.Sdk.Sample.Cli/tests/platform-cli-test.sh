#!/usr/bin/env bash

# Copyright (c) 2021 AccelByte Inc. All Rights Reserved.
# This is licensed software from AccelByte Inc, for limitations
# and restrictions contact your company contract manager.

# This code is generated by tool. DO NOT EDIT.

# Meta:
# - random seed: 
# - template file: 

# Instructions:
# - Run the Justice SDK Mock Server first before running this script.

export AB_BASE_URL="http://127.0.0.1:8080"
export AB_CLIENT_ID="admin"
export AB_CLIENT_SECRET="admin"
export AB_NAMESPACE="test"
export AB_APP_NAME="UnitTest"

EXIT_CODE=0

eval_tap() {
  if [ $1 -eq 0 ]; then
    echo "ok $2 - $3"
  else
    EXIT_CODE=1
    echo "not ok $2 - $3"
    sed 's/^/# /g' $4
  fi
  rm -f $4
}

CLI_EXE="AccelByte.Sdk.Sample.Cli"
CLI_TOKEN_FILE="$(dirname "$(which $CLI_EXE)")/token.json"
TEMP_JSON_INPUT="input_json.json"
TEMP_FILE_UPLOAD="file_upload.bin"

echo "TAP version 13"
echo "1..444"

#- 1 Login
$CLI_EXE --op login --lt user --user user --pass user > test.out 2>&1
eval_tap $? 1 'Login' test.out

if [ $EXIT_CODE -ne 0 ]; then
  echo "Bail out! Login failed."
  exit $EXIT_CODE
fi

# echo "foo" > "$CLI_TOKEN_FILE"

#- 2 ListFulfillmentScripts
$CLI_EXE \
    --sn platform \
    --op ListFulfillmentScripts \
    > test.out 2>&1
eval_tap $? 2 'ListFulfillmentScripts' test.out

#- 3 GetFulfillmentScript
$CLI_EXE \
    --sn platform \
    --op GetFulfillmentScript \
    --id 'LW8xbtEy' \
    > test.out 2>&1
eval_tap $? 3 'GetFulfillmentScript' test.out

#- 4 CreateFulfillmentScript
# body param: body
echo '{"grantDays": "JosVWwPb"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateFulfillmentScript \
    --id 'medVa0CN' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 4 'CreateFulfillmentScript' test.out

#- 5 DeleteFulfillmentScript
$CLI_EXE \
    --sn platform \
    --op DeleteFulfillmentScript \
    --id 'AElqD6OT' \
    > test.out 2>&1
eval_tap $? 5 'DeleteFulfillmentScript' test.out

#- 6 UpdateFulfillmentScript
# body param: body
echo '{"grantDays": "eumhwIqz"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateFulfillmentScript \
    --id 'YOHRzHhf' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 6 'UpdateFulfillmentScript' test.out

#- 7 ListItemTypeConfigs
$CLI_EXE \
    --sn platform \
    --op ListItemTypeConfigs \
    > test.out 2>&1
eval_tap $? 7 'ListItemTypeConfigs' test.out

#- 8 CreateItemTypeConfig
# body param: body
echo '{"clazz": "vUzxNJN5", "dryRun": false, "fulfillmentUrl": "E07hIKlN", "itemType": "LOOTBOX", "purchaseConditionUrl": "UyCPvWNb"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateItemTypeConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 8 'CreateItemTypeConfig' test.out

#- 9 SearchItemTypeConfig
$CLI_EXE \
    --sn platform \
    --op SearchItemTypeConfig \
    --clazz 'GTMgJFiB' \
    --itemType 'MEDIA' \
    > test.out 2>&1
eval_tap $? 9 'SearchItemTypeConfig' test.out

#- 10 GetItemTypeConfig
$CLI_EXE \
    --sn platform \
    --op GetItemTypeConfig \
    --id 'rUUMYYpH' \
    > test.out 2>&1
eval_tap $? 10 'GetItemTypeConfig' test.out

#- 11 UpdateItemTypeConfig
# body param: body
echo '{"clazz": "yyGzBWay", "dryRun": true, "fulfillmentUrl": "EzcEMSGM", "purchaseConditionUrl": "KPf4Pd0v"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateItemTypeConfig \
    --id '0RCRjdG9' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 11 'UpdateItemTypeConfig' test.out

#- 12 DeleteItemTypeConfig
$CLI_EXE \
    --sn platform \
    --op DeleteItemTypeConfig \
    --id 'b6nIWp8c' \
    > test.out 2>&1
eval_tap $? 12 'DeleteItemTypeConfig' test.out

#- 13 QueryCampaigns
$CLI_EXE \
    --sn platform \
    --op QueryCampaigns \
    --namespace $AB_NAMESPACE \
    --limit '75' \
    --name 'IKwnROqP' \
    --offset '65' \
    --tag 'ku61aORr' \
    > test.out 2>&1
eval_tap $? 13 'QueryCampaigns' test.out

#- 14 CreateCampaign
# body param: body
echo '{"description": "yO12jxTa", "items": [{"extraSubscriptionDays": 82, "itemId": "Fx9tqGTS", "itemName": "06bNQRlC", "quantity": 29}, {"extraSubscriptionDays": 5, "itemId": "iiQTVgAK", "itemName": "W0UWKxu4", "quantity": 62}, {"extraSubscriptionDays": 24, "itemId": "NscxUhJ0", "itemName": "im3eWn5L", "quantity": 71}], "maxRedeemCountPerCampaignPerUser": 19, "maxRedeemCountPerCode": 32, "maxRedeemCountPerCodePerUser": 41, "maxSaleCount": 87, "name": "Ny3ekqdM", "redeemEnd": "1973-11-05T00:00:00Z", "redeemStart": "1991-08-20T00:00:00Z", "redeemType": "ITEM", "status": "ACTIVE", "tags": ["4EgGNbgV", "QAON61fi", "MAhUFHou"], "type": "REDEMPTION"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCampaign \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 14 'CreateCampaign' test.out

#- 15 GetCampaign
$CLI_EXE \
    --sn platform \
    --op GetCampaign \
    --campaignId 'nAq10JlJ' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 15 'GetCampaign' test.out

#- 16 UpdateCampaign
# body param: body
echo '{"description": "doNNQdrb", "items": [{"extraSubscriptionDays": 8, "itemId": "zKX3glpD", "itemName": "B5lz8sX8", "quantity": 43}, {"extraSubscriptionDays": 38, "itemId": "txpev9QS", "itemName": "UnIH6uF2", "quantity": 30}, {"extraSubscriptionDays": 92, "itemId": "zpfHBkvP", "itemName": "nWanqcHw", "quantity": 63}], "maxRedeemCountPerCampaignPerUser": 77, "maxRedeemCountPerCode": 43, "maxRedeemCountPerCodePerUser": 58, "maxSaleCount": 36, "name": "q26ZppcS", "redeemEnd": "1985-08-08T00:00:00Z", "redeemStart": "1983-06-20T00:00:00Z", "redeemType": "ITEM", "status": "ACTIVE", "tags": ["I53onMKf", "BXohkxxA", "n0jT9FNU"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCampaign \
    --campaignId 'n6aEiK3m' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 16 'UpdateCampaign' test.out

#- 17 GetCampaignDynamic
$CLI_EXE \
    --sn platform \
    --op GetCampaignDynamic \
    --campaignId 'yfk5zBxX' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 17 'GetCampaignDynamic' test.out

#- 18 GetLootBoxPluginConfig
$CLI_EXE \
    --sn platform \
    --op GetLootBoxPluginConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 18 'GetLootBoxPluginConfig' test.out

#- 19 UpdateLootBoxPluginConfig
# body param: body
echo '{"appConfig": {"appName": "Q3MIYwhu"}, "customConfig": {"connectionType": "TLS", "grpcServerAddress": "rG7NjBCW"}, "extendType": "CUSTOM"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateLootBoxPluginConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 19 'UpdateLootBoxPluginConfig' test.out

#- 20 DeleteLootBoxPluginConfig
$CLI_EXE \
    --sn platform \
    --op DeleteLootBoxPluginConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 20 'DeleteLootBoxPluginConfig' test.out

#- 21 UplodLootBoxPluginConfigCert
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UplodLootBoxPluginConfigCert \
    --namespace $AB_NAMESPACE \
    --upload file $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 21 'UplodLootBoxPluginConfigCert' test.out

#- 22 GetLootBoxGrpcInfo
$CLI_EXE \
    --sn platform \
    --op GetLootBoxGrpcInfo \
    --namespace $AB_NAMESPACE \
    --force 'false' \
    > test.out 2>&1
eval_tap $? 22 'GetLootBoxGrpcInfo' test.out

#- 23 GetSectionPluginConfig
$CLI_EXE \
    --sn platform \
    --op GetSectionPluginConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 23 'GetSectionPluginConfig' test.out

#- 24 UpdateSectionPluginConfig
# body param: body
echo '{"appConfig": {"appName": "j7g9givI"}, "customConfig": {"connectionType": "INSECURE", "grpcServerAddress": "dYaeKyI5"}, "extendType": "CUSTOM"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateSectionPluginConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 24 'UpdateSectionPluginConfig' test.out

#- 25 DeleteSectionPluginConfig
$CLI_EXE \
    --sn platform \
    --op DeleteSectionPluginConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 25 'DeleteSectionPluginConfig' test.out

#- 26 UploadSectionPluginConfigCert
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UploadSectionPluginConfigCert \
    --namespace $AB_NAMESPACE \
    --upload file $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 26 'UploadSectionPluginConfigCert' test.out

#- 27 GetRootCategories
$CLI_EXE \
    --sn platform \
    --op GetRootCategories \
    --namespace $AB_NAMESPACE \
    --storeId 'cu1nzF2Q' \
    > test.out 2>&1
eval_tap $? 27 'GetRootCategories' test.out

#- 28 CreateCategory
# body param: body
echo '{"categoryPath": "KbXzEWzx", "localizationDisplayNames": {"qex4rv8q": "hdacDTSf", "3wyiLOfg": "xps9Gkbc", "9rUPbMpP": "PYeVJJav"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCategory \
    --namespace $AB_NAMESPACE \
    --storeId 'hOC8w0LH' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 28 'CreateCategory' test.out

#- 29 ListCategoriesBasic
$CLI_EXE \
    --sn platform \
    --op ListCategoriesBasic \
    --namespace $AB_NAMESPACE \
    --storeId '47B1YtZV' \
    > test.out 2>&1
eval_tap $? 29 'ListCategoriesBasic' test.out

#- 30 GetCategory
$CLI_EXE \
    --sn platform \
    --op GetCategory \
    --categoryPath 'peLA55FR' \
    --namespace $AB_NAMESPACE \
    --storeId '3l61ZP7r' \
    > test.out 2>&1
eval_tap $? 30 'GetCategory' test.out

#- 31 UpdateCategory
# body param: body
echo '{"localizationDisplayNames": {"inkMKBEr": "jcyQqEfJ", "tEFUPnMd": "lj1ozM5D", "68fUciV9": "M1n0acaU"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCategory \
    --categoryPath 'DQDR4hK9' \
    --namespace $AB_NAMESPACE \
    --storeId 'N3TDinwC' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 31 'UpdateCategory' test.out

#- 32 DeleteCategory
$CLI_EXE \
    --sn platform \
    --op DeleteCategory \
    --categoryPath 'M4NDyUYF' \
    --namespace $AB_NAMESPACE \
    --storeId 'EjKUdx7B' \
    > test.out 2>&1
eval_tap $? 32 'DeleteCategory' test.out

#- 33 GetChildCategories
$CLI_EXE \
    --sn platform \
    --op GetChildCategories \
    --categoryPath 'DzjxHKad' \
    --namespace $AB_NAMESPACE \
    --storeId 'H9KOIuxA' \
    > test.out 2>&1
eval_tap $? 33 'GetChildCategories' test.out

#- 34 GetDescendantCategories
$CLI_EXE \
    --sn platform \
    --op GetDescendantCategories \
    --categoryPath 'cJVC1GwF' \
    --namespace $AB_NAMESPACE \
    --storeId 'Hijog1zS' \
    > test.out 2>&1
eval_tap $? 34 'GetDescendantCategories' test.out

#- 35 QueryCodes
$CLI_EXE \
    --sn platform \
    --op QueryCodes \
    --campaignId 'prROe0Uv' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --batchNo '28' \
    --code 'BZWRnf5q' \
    --limit '63' \
    --offset '41' \
    > test.out 2>&1
eval_tap $? 35 'QueryCodes' test.out

#- 36 CreateCodes
# body param: body
echo '{"quantity": 29}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCodes \
    --campaignId '1RdRogoh' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 36 'CreateCodes' test.out

#- 37 Download
$CLI_EXE \
    --sn platform \
    --op Download \
    --campaignId 'JAPMdaoM' \
    --namespace $AB_NAMESPACE \
    --batchNo '61' \
    > test.out 2>&1
eval_tap $? 37 'Download' test.out

#- 38 BulkDisableCodes
$CLI_EXE \
    --sn platform \
    --op BulkDisableCodes \
    --campaignId 'eVY9Q1U0' \
    --namespace $AB_NAMESPACE \
    --batchNo '82' \
    > test.out 2>&1
eval_tap $? 38 'BulkDisableCodes' test.out

#- 39 BulkEnableCodes
$CLI_EXE \
    --sn platform \
    --op BulkEnableCodes \
    --campaignId 'lGNMP3wv' \
    --namespace $AB_NAMESPACE \
    --batchNo '100' \
    > test.out 2>&1
eval_tap $? 39 'BulkEnableCodes' test.out

#- 40 QueryRedeemHistory
$CLI_EXE \
    --sn platform \
    --op QueryRedeemHistory \
    --campaignId 'nIaIAzaB' \
    --namespace $AB_NAMESPACE \
    --code '1sd5St3f' \
    --limit '29' \
    --offset '15' \
    --userId '52vMqeCg' \
    > test.out 2>&1
eval_tap $? 40 'QueryRedeemHistory' test.out

#- 41 GetCode
$CLI_EXE \
    --sn platform \
    --op GetCode \
    --code 'YA22O7st' \
    --namespace $AB_NAMESPACE \
    --redeemable 'false' \
    > test.out 2>&1
eval_tap $? 41 'GetCode' test.out

#- 42 DisableCode
$CLI_EXE \
    --sn platform \
    --op DisableCode \
    --code 'NApPjNwY' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 42 'DisableCode' test.out

#- 43 EnableCode
$CLI_EXE \
    --sn platform \
    --op EnableCode \
    --code 'tMQPVF86' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 43 'EnableCode' test.out

#- 44 GetServicePluginConfig
eval_tap 0 44 'GetServicePluginConfig # SKIP deprecated' test.out

#- 45 UpdateServicePluginConfig
eval_tap 0 45 'UpdateServicePluginConfig # SKIP deprecated' test.out

#- 46 DeleteServicePluginConfig
eval_tap 0 46 'DeleteServicePluginConfig # SKIP deprecated' test.out

#- 47 ListCurrencies
$CLI_EXE \
    --sn platform \
    --op ListCurrencies \
    --namespace $AB_NAMESPACE \
    --currencyType 'VIRTUAL' \
    > test.out 2>&1
eval_tap $? 47 'ListCurrencies' test.out

#- 48 CreateCurrency
# body param: body
echo '{"currencyCode": "H5Av0Cqp", "currencySymbol": "uQsoQklA", "currencyType": "VIRTUAL", "decimals": 51, "localizationDescriptions": {"U7cpmVdR": "jGsxebtH", "X9l7GPPt": "XufcEWmg", "ESaAoMYF": "wR6ujL73"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCurrency \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 48 'CreateCurrency' test.out

#- 49 UpdateCurrency
# body param: body
echo '{"localizationDescriptions": {"FwivNNqp": "6oR9dwGA", "51dZFPM1": "yERFa95v", "LxpPvcs1": "wkbdDfzq"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCurrency \
    --currencyCode 'HUOjn5fq' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 49 'UpdateCurrency' test.out

#- 50 DeleteCurrency
$CLI_EXE \
    --sn platform \
    --op DeleteCurrency \
    --currencyCode 'q7jmxtIT' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 50 'DeleteCurrency' test.out

#- 51 GetCurrencyConfig
$CLI_EXE \
    --sn platform \
    --op GetCurrencyConfig \
    --currencyCode '0GqiUezx' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 51 'GetCurrencyConfig' test.out

#- 52 GetCurrencySummary
$CLI_EXE \
    --sn platform \
    --op GetCurrencySummary \
    --currencyCode '9PlHUvPG' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 52 'GetCurrencySummary' test.out

#- 53 GetDLCItemConfig
$CLI_EXE \
    --sn platform \
    --op GetDLCItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 53 'GetDLCItemConfig' test.out

#- 54 UpdateDLCItemConfig
# body param: body
echo '{"data": [{"id": "F0wt2cA1", "rewards": [{"currency": {"currencyCode": "CWXqiaSD", "namespace": "HZ6Sp8uj"}, "item": {"itemId": "zOMKC4kU", "itemSku": "LqwAFbH3", "itemType": "CeyBbv5a"}, "quantity": 45, "type": "ITEM"}, {"currency": {"currencyCode": "EG1z2Jrn", "namespace": "QCvL19A9"}, "item": {"itemId": "5NsAc9Ot", "itemSku": "OMqvaufp", "itemType": "RQHl7jKj"}, "quantity": 35, "type": "ITEM"}, {"currency": {"currencyCode": "Uw9v9U7u", "namespace": "oEavtHhD"}, "item": {"itemId": "T1CoQY6Z", "itemSku": "Qm7VwdZa", "itemType": "9mto4IQn"}, "quantity": 56, "type": "CURRENCY"}]}, {"id": "ncnR8hq6", "rewards": [{"currency": {"currencyCode": "1owPquDd", "namespace": "kJVt3yUi"}, "item": {"itemId": "oClkYu7Z", "itemSku": "809v8fXx", "itemType": "7NhAyvgM"}, "quantity": 60, "type": "ITEM"}, {"currency": {"currencyCode": "GGensE6t", "namespace": "g1cb0CJi"}, "item": {"itemId": "Sukb7uov", "itemSku": "JNy4VLHm", "itemType": "MydvObrJ"}, "quantity": 8, "type": "ITEM"}, {"currency": {"currencyCode": "97B5Nhw4", "namespace": "003zaush"}, "item": {"itemId": "syeGH8Oz", "itemSku": "cHcWjnU7", "itemType": "97LhzQjl"}, "quantity": 57, "type": "ITEM"}]}, {"id": "PZHqUUre", "rewards": [{"currency": {"currencyCode": "gGK4a1Yl", "namespace": "N1XsJn57"}, "item": {"itemId": "wyG88TRX", "itemSku": "XMjHKxIT", "itemType": "1DvygoVo"}, "quantity": 79, "type": "ITEM"}, {"currency": {"currencyCode": "U2yryMN4", "namespace": "CRWiE0HE"}, "item": {"itemId": "0QflGjRZ", "itemSku": "oq0lqjjW", "itemType": "9joubb1I"}, "quantity": 72, "type": "ITEM"}, {"currency": {"currencyCode": "gFXMN4Ns", "namespace": "moX8fNOC"}, "item": {"itemId": "j4deWEJc", "itemSku": "S1Hx5P8c", "itemType": "1CEdqBrs"}, "quantity": 26, "type": "CURRENCY"}]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateDLCItemConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 54 'UpdateDLCItemConfig' test.out

#- 55 DeleteDLCItemConfig
$CLI_EXE \
    --sn platform \
    --op DeleteDLCItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 55 'DeleteDLCItemConfig' test.out

#- 56 GetPlatformDLCConfig
$CLI_EXE \
    --sn platform \
    --op GetPlatformDLCConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 56 'GetPlatformDLCConfig' test.out

#- 57 UpdatePlatformDLCConfig
# body param: body
echo '{"data": [{"platform": "STEAM", "platformDlcIdMap": {"bdc9NiRS": "F4rHZH3i", "J4kRRoHz": "N1rRk6oL", "OeGzmuME": "7AfgU25q"}}, {"platform": "EPICGAMES", "platformDlcIdMap": {"yEBWl8v7": "pC8wLRLD", "kXK1RPLj": "x2kbjUHP", "Zb9xT672": "vcEeNG4C"}}, {"platform": "EPICGAMES", "platformDlcIdMap": {"wUiCNpbD": "5UBMNKCq", "DxsaGa78": "O0WkpxAB", "sTVG1HDi": "BtVcxKsz"}}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePlatformDLCConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 57 'UpdatePlatformDLCConfig' test.out

#- 58 DeletePlatformDLCConfig
$CLI_EXE \
    --sn platform \
    --op DeletePlatformDLCConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 58 'DeletePlatformDLCConfig' test.out

#- 59 QueryEntitlements
$CLI_EXE \
    --sn platform \
    --op QueryEntitlements \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --appType 'DEMO' \
    --entitlementClazz 'MEDIA' \
    --entitlementName 'lAKrUZZV' \
    --itemId '["YXzxUTNG", "UmMiXSCz", "AWScvfG6"]' \
    --limit '65' \
    --offset '52' \
    --origin 'Oculus' \
    --userId '0Z2yUYBE' \
    > test.out 2>&1
eval_tap $? 59 'QueryEntitlements' test.out

#- 60 QueryEntitlements1
$CLI_EXE \
    --sn platform \
    --op QueryEntitlements1 \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --itemIds '["tKeOYjcv", "SihFO26R", "dwQJsxwb"]' \
    --limit '49' \
    --offset '22' \
    > test.out 2>&1
eval_tap $? 60 'QueryEntitlements1' test.out

#- 61 EnableEntitlementOriginFeature
$CLI_EXE \
    --sn platform \
    --op EnableEntitlementOriginFeature \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 61 'EnableEntitlementOriginFeature' test.out

#- 62 GetEntitlementConfigInfo
$CLI_EXE \
    --sn platform \
    --op GetEntitlementConfigInfo \
    --namespace $AB_NAMESPACE \
    --withoutCache 'true' \
    > test.out 2>&1
eval_tap $? 62 'GetEntitlementConfigInfo' test.out

#- 63 GrantEntitlements
# body param: body
echo '{"entitlementGrantList": [{"collectionId": "4rG0jiqH", "endDate": "1977-03-13T00:00:00Z", "grantedCode": "jVXn0ids", "itemId": "Z2RfUvhH", "itemNamespace": "9jVqQspw", "language": "aaGn_bZIH-ei", "origin": "Twitch", "quantity": 75, "region": "AnSxuC4O", "source": "PROMOTION", "startDate": "1988-05-13T00:00:00Z", "storeId": "0t0HRJx3"}, {"collectionId": "NIdMF2w4", "endDate": "1999-06-27T00:00:00Z", "grantedCode": "zwNRi6e4", "itemId": "XqODfeZa", "itemNamespace": "hqBrtdKy", "language": "NNX-puSF", "origin": "Epic", "quantity": 92, "region": "tMrOM8pj", "source": "PROMOTION", "startDate": "1996-01-18T00:00:00Z", "storeId": "DZfUlEHW"}, {"collectionId": "UShjTAce", "endDate": "1975-11-21T00:00:00Z", "grantedCode": "sOcvN6IQ", "itemId": "lAwuaTVy", "itemNamespace": "gshkvinq", "language": "LEmd_OoGn-813", "origin": "Steam", "quantity": 90, "region": "PFXUYWuW", "source": "IAP", "startDate": "1994-10-07T00:00:00Z", "storeId": "qgPCvy4Q"}], "userIds": ["bXN2isxr", "EiCu9a81", "Qnn6Zoll"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op GrantEntitlements \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 63 'GrantEntitlements' test.out

#- 64 RevokeEntitlements
# body param: body
echo '["SM6sgbjR", "pai1nKq8", "OAOvjB6X"]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RevokeEntitlements \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 64 'RevokeEntitlements' test.out

#- 65 GetEntitlement
$CLI_EXE \
    --sn platform \
    --op GetEntitlement \
    --entitlementId 'ErflgHyn' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 65 'GetEntitlement' test.out

#- 66 QueryFulfillmentHistories
$CLI_EXE \
    --sn platform \
    --op QueryFulfillmentHistories \
    --namespace $AB_NAMESPACE \
    --limit '43' \
    --offset '78' \
    --status 'SUCCESS' \
    --userId 'cucJKmzL' \
    > test.out 2>&1
eval_tap $? 66 'QueryFulfillmentHistories' test.out

#- 67 QueryIAPClawbackHistory
$CLI_EXE \
    --sn platform \
    --op QueryIAPClawbackHistory \
    --namespace $AB_NAMESPACE \
    --endTime 'aye1f7ja' \
    --eventType 'REFUND' \
    --externalOrderId '48Q4vth6' \
    --limit '85' \
    --offset '84' \
    --startTime 'UAaOn2p4' \
    --status 'IGNORED' \
    --userId 'TLDgw0Zm' \
    > test.out 2>&1
eval_tap $? 67 'QueryIAPClawbackHistory' test.out

#- 68 MockPlayStationStreamEvent
# body param: body
echo '{"body": {"account": "0WkixiRh", "additionalData": {"entitlement": [{"clientTransaction": [{"amountConsumed": 67, "clientTransactionId": "qFzLFS7t"}, {"amountConsumed": 44, "clientTransactionId": "NNzaCTsN"}, {"amountConsumed": 7, "clientTransactionId": "beDSlYhe"}], "entitlementId": "h4W594b5", "usageCount": 56}, {"clientTransaction": [{"amountConsumed": 14, "clientTransactionId": "6Jc0l8vU"}, {"amountConsumed": 27, "clientTransactionId": "ZTemG8tR"}, {"amountConsumed": 96, "clientTransactionId": "LVHnLJU5"}], "entitlementId": "dsyXScBb", "usageCount": 31}, {"clientTransaction": [{"amountConsumed": 94, "clientTransactionId": "zp1coHzb"}, {"amountConsumed": 32, "clientTransactionId": "XyWbC2Lh"}, {"amountConsumed": 64, "clientTransactionId": "Xk20DHtz"}], "entitlementId": "HSCpCjtO", "usageCount": 61}], "purpose": "Tkjn59XJ"}, "originalTitleName": "jzo4G68R", "paymentProductSKU": "6BRSYlE0", "purchaseDate": "ZoeLhwht", "sourceOrderItemId": "tOCldF6c", "titleName": "RLyWUWEv"}, "eventDomain": "LGgOnK8r", "eventSource": "ZyTvx9q1", "eventType": "TQ74H7M3", "eventVersion": 99, "id": "Kqqmauek", "timestamp": "YsySBN4B"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op MockPlayStationStreamEvent \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 68 'MockPlayStationStreamEvent' test.out

#- 69 GetAppleIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetAppleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 69 'GetAppleIAPConfig' test.out

#- 70 UpdateAppleIAPConfig
# body param: body
echo '{"bundleId": "VZhJoX0M", "password": "RuZJDVcb"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateAppleIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 70 'UpdateAppleIAPConfig' test.out

#- 71 DeleteAppleIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteAppleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 71 'DeleteAppleIAPConfig' test.out

#- 72 GetEpicGamesIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetEpicGamesIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 72 'GetEpicGamesIAPConfig' test.out

#- 73 UpdateEpicGamesIAPConfig
# body param: body
echo '{"sandboxId": "Khcf0cNS"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateEpicGamesIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 73 'UpdateEpicGamesIAPConfig' test.out

#- 74 DeleteEpicGamesIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteEpicGamesIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 74 'DeleteEpicGamesIAPConfig' test.out

#- 75 GetGoogleIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetGoogleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 75 'GetGoogleIAPConfig' test.out

#- 76 UpdateGoogleIAPConfig
# body param: body
echo '{"applicationName": "9gHzxmbJ", "serviceAccountId": "rc4SDLOi"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateGoogleIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 76 'UpdateGoogleIAPConfig' test.out

#- 77 DeleteGoogleIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteGoogleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 77 'DeleteGoogleIAPConfig' test.out

#- 78 UpdateGoogleP12File
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UpdateGoogleP12File \
    --namespace $AB_NAMESPACE \
    --upload file $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 78 'UpdateGoogleP12File' test.out

#- 79 GetIAPItemConfig
$CLI_EXE \
    --sn platform \
    --op GetIAPItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 79 'GetIAPItemConfig' test.out

#- 80 UpdateIAPItemConfig
# body param: body
echo '{"data": [{"itemIdentity": "JXJuIHYJ", "itemIdentityType": "ITEM_SKU", "platformProductIdMap": {"Z1IpDRPI": "iNANC4vR", "JH3TeARQ": "T0Gqpr5d", "VZ2uUYG8": "g3SkCJwN"}}, {"itemIdentity": "d2zeVJ8p", "itemIdentityType": "ITEM_SKU", "platformProductIdMap": {"d0rChtf6": "B8pmWqZQ", "RnvS7RuA": "fz12eDym", "SWnRTMwA": "P5xEtlYW"}}, {"itemIdentity": "3laSX9ac", "itemIdentityType": "ITEM_SKU", "platformProductIdMap": {"ZIUuNxbx": "379RX5N1", "v7eCYqAa": "JvEW4IW6", "hfrttg1q": "RfEa4amI"}}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateIAPItemConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 80 'UpdateIAPItemConfig' test.out

#- 81 DeleteIAPItemConfig
$CLI_EXE \
    --sn platform \
    --op DeleteIAPItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 81 'DeleteIAPItemConfig' test.out

#- 82 GetOculusIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetOculusIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 82 'GetOculusIAPConfig' test.out

#- 83 UpdateOculusIAPConfig
# body param: body
echo '{"appId": "E6xeH7R6", "appSecret": "g72QHRTB"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateOculusIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 83 'UpdateOculusIAPConfig' test.out

#- 84 DeleteOculusIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteOculusIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 84 'DeleteOculusIAPConfig' test.out

#- 85 GetPlayStationIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetPlayStationIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 85 'GetPlayStationIAPConfig' test.out

#- 86 UpdatePlaystationIAPConfig
# body param: body
echo '{"backOfficeServerClientId": "uq8MCC0n", "backOfficeServerClientSecret": "rK2EysAF", "enableStreamJob": true, "environment": "zopNyHlD", "streamName": "aGdLH03A", "streamPartnerName": "zlzZQWEl"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePlaystationIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 86 'UpdatePlaystationIAPConfig' test.out

#- 87 DeletePlaystationIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeletePlaystationIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 87 'DeletePlaystationIAPConfig' test.out

#- 88 ValidateExistedPlaystationIAPConfig
$CLI_EXE \
    --sn platform \
    --op ValidateExistedPlaystationIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 88 'ValidateExistedPlaystationIAPConfig' test.out

#- 89 ValidatePlaystationIAPConfig
# body param: body
echo '{"backOfficeServerClientId": "474gJ5za", "backOfficeServerClientSecret": "JDoAjh6b", "enableStreamJob": true, "environment": "5vB3nbOt", "streamName": "lgoTsun2", "streamPartnerName": "JAI5Z9HD"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ValidatePlaystationIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 89 'ValidatePlaystationIAPConfig' test.out

#- 90 GetSteamIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetSteamIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 90 'GetSteamIAPConfig' test.out

#- 91 UpdateSteamIAPConfig
# body param: body
echo '{"appId": "L4z4zfEc", "publisherAuthenticationKey": "LDVADPKt"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateSteamIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 91 'UpdateSteamIAPConfig' test.out

#- 92 DeleteSteamIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteSteamIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 92 'DeleteSteamIAPConfig' test.out

#- 93 GetTwitchIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetTwitchIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 93 'GetTwitchIAPConfig' test.out

#- 94 UpdateTwitchIAPConfig
# body param: body
echo '{"clientId": "FXUgCAI2", "clientSecret": "QjC466H7", "organizationId": "zWzNZj7P"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateTwitchIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 94 'UpdateTwitchIAPConfig' test.out

#- 95 DeleteTwitchIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteTwitchIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 95 'DeleteTwitchIAPConfig' test.out

#- 96 GetXblIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetXblIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 96 'GetXblIAPConfig' test.out

#- 97 UpdateXblIAPConfig
# body param: body
echo '{"relyingPartyCert": "JJlZKsvu"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXblIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 97 'UpdateXblIAPConfig' test.out

#- 98 DeleteXblAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteXblAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 98 'DeleteXblAPConfig' test.out

#- 99 UpdateXblBPCertFile
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UpdateXblBPCertFile \
    --namespace $AB_NAMESPACE \
    --upload file $TEMP_FILE_UPLOAD \
    --password 'puK8QMPr' \
    > test.out 2>&1
eval_tap $? 99 'UpdateXblBPCertFile' test.out

#- 100 DownloadInvoiceDetails
$CLI_EXE \
    --sn platform \
    --op DownloadInvoiceDetails \
    --namespace $AB_NAMESPACE \
    --feature 'zJGb4l1J' \
    --itemId '700lS4C2' \
    --itemType 'SUBSCRIPTION' \
    --endTime 'PPslh1ej' \
    --startTime 'anaLHN21' \
    > test.out 2>&1
eval_tap $? 100 'DownloadInvoiceDetails' test.out

#- 101 GenerateInvoiceSummary
$CLI_EXE \
    --sn platform \
    --op GenerateInvoiceSummary \
    --namespace $AB_NAMESPACE \
    --feature 'cRLhaLDU' \
    --itemId 'mytoi5mS' \
    --itemType 'MEDIA' \
    --endTime 'tU9ge5zt' \
    --startTime 'ast6zhb6' \
    > test.out 2>&1
eval_tap $? 101 'GenerateInvoiceSummary' test.out

#- 102 SyncInGameItem
# body param: body
echo '{"categoryPath": "NGLBywUm", "targetItemId": "eEfZeCJ4", "targetNamespace": "b1uQFMg7"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncInGameItem \
    --namespace $AB_NAMESPACE \
    --storeId 'mkKV1PvH' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 102 'SyncInGameItem' test.out

#- 103 CreateItem
# body param: body
echo '{"appId": "ssXmt2Pr", "appType": "DLC", "baseAppId": "HqXeOAWe", "boothName": "4YWXjrBw", "categoryPath": "nec7WO4t", "clazz": "6FfE9pbi", "displayOrder": 69, "entitlementType": "CONSUMABLE", "ext": {"qZsHlySD": {}, "cCuPi8S7": {}, "e98Q1ZPL": {}}, "features": ["dPtJS556", "AltoZwrh", "bhNRdxEB"], "flexible": false, "images": [{"as": "aeYPAD03", "caption": "9sXn3ZVk", "height": 18, "imageUrl": "AVBHA9DM", "smallImageUrl": "ULHfO8NI", "width": 77}, {"as": "yT18AAJy", "caption": "9d5seLLv", "height": 25, "imageUrl": "DURFjyfS", "smallImageUrl": "Z0kpAVnm", "width": 58}, {"as": "6V2hwxZG", "caption": "w5fH1Y8U", "height": 87, "imageUrl": "CFKV4Nh5", "smallImageUrl": "wxLxxM9O", "width": 22}], "inventoryConfig": {"customAttributes": {"NYyigRPC": {}, "W8E9YoBV": {}, "1BSV8ebz": {}}, "serverCustomAttributes": {"5uTQcxcQ": {}, "15ANf2qJ": {}, "MUKkSsHw": {}}, "slotUsed": 25}, "itemIds": ["NkCZFfpL", "ApLsw8SE", "R25AGsOI"], "itemQty": {"C1sHgxS9": 11, "MDzo6bnu": 15, "angLvXvN": 26}, "itemType": "SEASON", "listable": false, "localizations": {"G7i4xDzv": {"description": "et7JKQKM", "localExt": {"KeD8LwXv": {}, "tsZA2moO": {}, "LnrbXXJQ": {}}, "longDescription": "408NMnTP", "title": "988XAuOD"}, "4Hy4dgZw": {"description": "7r9xEzt7", "localExt": {"2WD7MUxk": {}, "ZIvHES5L": {}, "8mQLyd3V": {}}, "longDescription": "gjkJc5vv", "title": "brergR1t"}, "vDeTNVnO": {"description": "d56z7QT5", "localExt": {"vsxGC7cM": {}, "EocyaDyy": {}, "xBwWVI9s": {}}, "longDescription": "t8UHXPBM", "title": "VNnNBpm4"}}, "lootBoxConfig": {"rewardCount": 89, "rewards": [{"lootBoxItems": [{"count": 38, "duration": 44, "endDate": "1992-04-02T00:00:00Z", "itemId": "6mJKQwZK", "itemSku": "qLQ7qxNB", "itemType": "DdHTknGc"}, {"count": 42, "duration": 26, "endDate": "1989-11-01T00:00:00Z", "itemId": "BTevXHFH", "itemSku": "SEX8nQhQ", "itemType": "XgLGF4WD"}, {"count": 73, "duration": 81, "endDate": "1986-07-05T00:00:00Z", "itemId": "fDuzP1kw", "itemSku": "NXFLPUXk", "itemType": "PLcqJnGF"}], "name": "GSELBQzA", "odds": 0.39253522607704516, "type": "PROBABILITY_GROUP", "weight": 21}, {"lootBoxItems": [{"count": 79, "duration": 15, "endDate": "1997-01-28T00:00:00Z", "itemId": "J5tGUgK9", "itemSku": "0XopGJuB", "itemType": "S1YWgOtU"}, {"count": 0, "duration": 23, "endDate": "1975-02-03T00:00:00Z", "itemId": "SaCzZqrd", "itemSku": "q8RPsZ7U", "itemType": "BOlPtw1o"}, {"count": 0, "duration": 30, "endDate": "1988-04-15T00:00:00Z", "itemId": "QHk0SqJ0", "itemSku": "wBmZFMIz", "itemType": "0IUnzp7d"}], "name": "5574YCBr", "odds": 0.15356749195465114, "type": "PROBABILITY_GROUP", "weight": 47}, {"lootBoxItems": [{"count": 72, "duration": 47, "endDate": "1994-02-12T00:00:00Z", "itemId": "GNr8Of70", "itemSku": "1HGuXOn2", "itemType": "h4DMKq2E"}, {"count": 39, "duration": 80, "endDate": "1973-11-08T00:00:00Z", "itemId": "y7xPVXKX", "itemSku": "tMAN63LF", "itemType": "JnLWPWG9"}, {"count": 65, "duration": 97, "endDate": "1986-02-14T00:00:00Z", "itemId": "uOOUpRtU", "itemSku": "XIXQgexv", "itemType": "Sn0TlurZ"}], "name": "uX3TKM0b", "odds": 0.11923334230271987, "type": "REWARD_GROUP", "weight": 44}], "rollFunction": "DEFAULT"}, "maxCount": 42, "maxCountPerUser": 14, "name": "kf6d4Edr", "optionBoxConfig": {"boxItems": [{"count": 52, "duration": 9, "endDate": "1993-02-21T00:00:00Z", "itemId": "N7zj97Pk", "itemSku": "cNUSzd1g", "itemType": "HOe9oZ5C"}, {"count": 37, "duration": 3, "endDate": "1972-03-05T00:00:00Z", "itemId": "YC9H5PKx", "itemSku": "KBoDCjys", "itemType": "G7KuECub"}, {"count": 39, "duration": 13, "endDate": "1980-11-26T00:00:00Z", "itemId": "Acl6SqUJ", "itemSku": "0fJ5lD8A", "itemType": "d4TclI8r"}]}, "purchasable": true, "recurring": {"cycle": "WEEKLY", "fixedFreeDays": 50, "fixedTrialCycles": 26, "graceDays": 56}, "regionData": {"08VLbTp6": [{"currencyCode": "1tUpd6bE", "currencyNamespace": "PJXWAQqM", "currencyType": "REAL", "discountAmount": 6, "discountExpireAt": "1981-11-28T00:00:00Z", "discountPercentage": 50, "discountPurchaseAt": "1986-06-14T00:00:00Z", "expireAt": "1990-12-16T00:00:00Z", "price": 70, "purchaseAt": "1985-01-20T00:00:00Z", "trialPrice": 11}, {"currencyCode": "kUL1UTpy", "currencyNamespace": "mMpPuvMX", "currencyType": "REAL", "discountAmount": 24, "discountExpireAt": "1996-12-13T00:00:00Z", "discountPercentage": 86, "discountPurchaseAt": "1987-12-17T00:00:00Z", "expireAt": "1971-03-12T00:00:00Z", "price": 48, "purchaseAt": "1981-11-19T00:00:00Z", "trialPrice": 53}, {"currencyCode": "jMkX2tbf", "currencyNamespace": "z0x4vHSP", "currencyType": "VIRTUAL", "discountAmount": 3, "discountExpireAt": "1999-01-27T00:00:00Z", "discountPercentage": 15, "discountPurchaseAt": "1999-10-14T00:00:00Z", "expireAt": "1995-09-10T00:00:00Z", "price": 66, "purchaseAt": "1998-03-23T00:00:00Z", "trialPrice": 1}], "NHXLbyKO": [{"currencyCode": "YJAhBc1G", "currencyNamespace": "rVuQfSeN", "currencyType": "REAL", "discountAmount": 34, "discountExpireAt": "1974-04-21T00:00:00Z", "discountPercentage": 9, "discountPurchaseAt": "1996-12-18T00:00:00Z", "expireAt": "1984-07-05T00:00:00Z", "price": 98, "purchaseAt": "1972-04-04T00:00:00Z", "trialPrice": 35}, {"currencyCode": "EXvDVP6H", "currencyNamespace": "zp8NP7cX", "currencyType": "REAL", "discountAmount": 27, "discountExpireAt": "1974-03-25T00:00:00Z", "discountPercentage": 74, "discountPurchaseAt": "1986-07-07T00:00:00Z", "expireAt": "1977-03-31T00:00:00Z", "price": 20, "purchaseAt": "1979-03-01T00:00:00Z", "trialPrice": 80}, {"currencyCode": "opRwNnus", "currencyNamespace": "FzZReguG", "currencyType": "VIRTUAL", "discountAmount": 17, "discountExpireAt": "1997-08-28T00:00:00Z", "discountPercentage": 11, "discountPurchaseAt": "1981-01-22T00:00:00Z", "expireAt": "1972-06-28T00:00:00Z", "price": 33, "purchaseAt": "1992-07-04T00:00:00Z", "trialPrice": 76}], "3cpCUmTx": [{"currencyCode": "MFSPWpaM", "currencyNamespace": "b62xyj5l", "currencyType": "REAL", "discountAmount": 81, "discountExpireAt": "1996-11-05T00:00:00Z", "discountPercentage": 70, "discountPurchaseAt": "1974-03-31T00:00:00Z", "expireAt": "1998-01-03T00:00:00Z", "price": 83, "purchaseAt": "1994-02-04T00:00:00Z", "trialPrice": 68}, {"currencyCode": "3elpnDTk", "currencyNamespace": "Qm1hTm7A", "currencyType": "REAL", "discountAmount": 82, "discountExpireAt": "1972-10-19T00:00:00Z", "discountPercentage": 21, "discountPurchaseAt": "1990-10-09T00:00:00Z", "expireAt": "1982-05-15T00:00:00Z", "price": 76, "purchaseAt": "1978-09-28T00:00:00Z", "trialPrice": 70}, {"currencyCode": "szTOhHMq", "currencyNamespace": "drXwjrBZ", "currencyType": "REAL", "discountAmount": 90, "discountExpireAt": "1988-04-04T00:00:00Z", "discountPercentage": 3, "discountPurchaseAt": "1994-10-11T00:00:00Z", "expireAt": "1978-11-13T00:00:00Z", "price": 74, "purchaseAt": "1981-10-01T00:00:00Z", "trialPrice": 100}]}, "saleConfig": {"currencyCode": "cAKYH8Jk", "price": 33}, "seasonType": "PASS", "sectionExclusive": false, "sellable": true, "sku": "gi4YRt3Z", "stackable": true, "status": "ACTIVE", "tags": ["nK5oxY6F", "PibLw8uL", "3JTZLXNb"], "targetCurrencyCode": "H51xWYoX", "targetNamespace": "0TmCmIwO", "thumbnailUrl": "8ibreKqp", "useCount": 10}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateItem \
    --namespace $AB_NAMESPACE \
    --storeId 'asGwS1sU' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 103 'CreateItem' test.out

#- 104 GetItemByAppId
$CLI_EXE \
    --sn platform \
    --op GetItemByAppId \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --storeId 'IeGvItT4' \
    --appId 'QEGgnFMU' \
    > test.out 2>&1
eval_tap $? 104 'GetItemByAppId' test.out

#- 105 QueryItems
$CLI_EXE \
    --sn platform \
    --op QueryItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --appType 'DEMO' \
    --availableDate 'JskAC2Pn' \
    --baseAppId 'ASHyG2yy' \
    --categoryPath 'o8DgytRj' \
    --features '1ekX9EfN' \
    --includeSubCategoryItem 'true' \
    --itemType 'OPTIONBOX' \
    --limit '72' \
    --offset '31' \
    --region '7W3o7DRC' \
    --sortBy '["name:desc", "createdAt:desc", "name"]' \
    --storeId 'Ztu9w2ZT' \
    --tags 'EsIH0ffI' \
    --targetNamespace 'bpN4OxsG' \
    > test.out 2>&1
eval_tap $? 105 'QueryItems' test.out

#- 106 ListBasicItemsByFeatures
$CLI_EXE \
    --sn platform \
    --op ListBasicItemsByFeatures \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --features '["LQXTbddG", "CuKuVgEC", "nXtEPTKT"]' \
    > test.out 2>&1
eval_tap $? 106 'ListBasicItemsByFeatures' test.out

#- 107 GetItems
$CLI_EXE \
    --sn platform \
    --op GetItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --storeId 'vtch6zeZ' \
    --itemIds 'apgFFPWi' \
    > test.out 2>&1
eval_tap $? 107 'GetItems' test.out

#- 108 GetItemBySku
$CLI_EXE \
    --sn platform \
    --op GetItemBySku \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --storeId 'Tx4MsE5F' \
    --sku 'iVLpd4Nu' \
    > test.out 2>&1
eval_tap $? 108 'GetItemBySku' test.out

#- 109 GetLocaleItemBySku
$CLI_EXE \
    --sn platform \
    --op GetLocaleItemBySku \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --language '5Jg8uqWi' \
    --populateBundle 'true' \
    --region 'Ns9HEwu3' \
    --storeId 'IcYTTfy5' \
    --sku 'YTJbtt5A' \
    > test.out 2>&1
eval_tap $? 109 'GetLocaleItemBySku' test.out

#- 110 GetEstimatedPrice
$CLI_EXE \
    --sn platform \
    --op GetEstimatedPrice \
    --namespace $AB_NAMESPACE \
    --platform 'CnkAoP2o' \
    --region 'XPojqQ8F' \
    --storeId 'SR5eV20s' \
    --itemIds '0zdlOP8b' \
    --userId 'iaOQ6zbv' \
    > test.out 2>&1
eval_tap $? 110 'GetEstimatedPrice' test.out

#- 111 GetItemIdBySku
$CLI_EXE \
    --sn platform \
    --op GetItemIdBySku \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --storeId 'ivXkSyjq' \
    --sku 'd5KlnoxP' \
    > test.out 2>&1
eval_tap $? 111 'GetItemIdBySku' test.out

#- 112 GetBulkItemIdBySkus
$CLI_EXE \
    --sn platform \
    --op GetBulkItemIdBySkus \
    --namespace $AB_NAMESPACE \
    --sku '["Ezi2NOkB", "pZzEvXDT", "zc9eBk5L"]' \
    --storeId '13l0AU8v' \
    > test.out 2>&1
eval_tap $? 112 'GetBulkItemIdBySkus' test.out

#- 113 BulkGetLocaleItems
$CLI_EXE \
    --sn platform \
    --op BulkGetLocaleItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --language 'iUIfinLS' \
    --region '14F7kqTh' \
    --storeId 'pds1Shj5' \
    --itemIds 'nLBqcBsb' \
    > test.out 2>&1
eval_tap $? 113 'BulkGetLocaleItems' test.out

#- 114 GetAvailablePredicateTypes
$CLI_EXE \
    --sn platform \
    --op GetAvailablePredicateTypes \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 114 'GetAvailablePredicateTypes' test.out

#- 115 ValidateItemPurchaseCondition
# body param: body
echo '{"itemIds": ["D6aCJ1OM", "GpfAqPlt", "0BwaxIhx"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ValidateItemPurchaseCondition \
    --namespace $AB_NAMESPACE \
    --platform 'e0WxhRU3' \
    --userId 'J866ITfW' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 115 'ValidateItemPurchaseCondition' test.out

#- 116 BulkUpdateRegionData
# body param: body
echo '{"changes": [{"itemIdentities": ["TSD1ZTm8", "FGRcCHV7", "UijztChW"], "itemIdentityType": "ITEM_ID", "regionData": {"JhlhO78E": [{"currencyCode": "irdhMrqM", "currencyNamespace": "ELkXc9fm", "currencyType": "REAL", "discountAmount": 46, "discountExpireAt": "1983-02-12T00:00:00Z", "discountPercentage": 89, "discountPurchaseAt": "1997-08-16T00:00:00Z", "discountedPrice": 12, "expireAt": "1971-04-13T00:00:00Z", "price": 62, "purchaseAt": "1995-12-11T00:00:00Z", "trialPrice": 0}, {"currencyCode": "1yTDM3Ru", "currencyNamespace": "cJ4FO7Cc", "currencyType": "VIRTUAL", "discountAmount": 67, "discountExpireAt": "1972-01-14T00:00:00Z", "discountPercentage": 41, "discountPurchaseAt": "1996-06-26T00:00:00Z", "discountedPrice": 9, "expireAt": "1994-10-24T00:00:00Z", "price": 66, "purchaseAt": "1989-12-31T00:00:00Z", "trialPrice": 8}, {"currencyCode": "5bo5mXFb", "currencyNamespace": "YzMSzDWK", "currencyType": "REAL", "discountAmount": 12, "discountExpireAt": "1984-09-16T00:00:00Z", "discountPercentage": 55, "discountPurchaseAt": "1974-03-19T00:00:00Z", "discountedPrice": 16, "expireAt": "1974-04-22T00:00:00Z", "price": 57, "purchaseAt": "1972-06-07T00:00:00Z", "trialPrice": 78}], "cToEU09I": [{"currencyCode": "P2zyVrHk", "currencyNamespace": "MNTJYjPv", "currencyType": "VIRTUAL", "discountAmount": 15, "discountExpireAt": "1978-07-28T00:00:00Z", "discountPercentage": 48, "discountPurchaseAt": "1991-12-24T00:00:00Z", "discountedPrice": 100, "expireAt": "1974-01-23T00:00:00Z", "price": 73, "purchaseAt": "1972-06-09T00:00:00Z", "trialPrice": 52}, {"currencyCode": "IjD7kum9", "currencyNamespace": "6sPJZnm8", "currencyType": "VIRTUAL", "discountAmount": 15, "discountExpireAt": "1971-10-03T00:00:00Z", "discountPercentage": 33, "discountPurchaseAt": "1972-06-27T00:00:00Z", "discountedPrice": 94, "expireAt": "1995-04-18T00:00:00Z", "price": 85, "purchaseAt": "1972-08-28T00:00:00Z", "trialPrice": 8}, {"currencyCode": "4ghpCs8a", "currencyNamespace": "Nosx8BpF", "currencyType": "REAL", "discountAmount": 14, "discountExpireAt": "1990-12-20T00:00:00Z", "discountPercentage": 82, "discountPurchaseAt": "1981-03-30T00:00:00Z", "discountedPrice": 98, "expireAt": "1982-11-04T00:00:00Z", "price": 49, "purchaseAt": "1972-04-28T00:00:00Z", "trialPrice": 47}], "dKvR92tt": [{"currencyCode": "bbjKgX7C", "currencyNamespace": "vfUSIfCU", "currencyType": "VIRTUAL", "discountAmount": 75, "discountExpireAt": "1988-06-16T00:00:00Z", "discountPercentage": 59, "discountPurchaseAt": "1991-05-05T00:00:00Z", "discountedPrice": 84, "expireAt": "1987-05-28T00:00:00Z", "price": 31, "purchaseAt": "1983-01-28T00:00:00Z", "trialPrice": 86}, {"currencyCode": "daKgZr9F", "currencyNamespace": "zkBo6TjQ", "currencyType": "VIRTUAL", "discountAmount": 22, "discountExpireAt": "1985-10-17T00:00:00Z", "discountPercentage": 40, "discountPurchaseAt": "1973-06-10T00:00:00Z", "discountedPrice": 32, "expireAt": "1980-04-30T00:00:00Z", "price": 42, "purchaseAt": "1990-02-04T00:00:00Z", "trialPrice": 41}, {"currencyCode": "FIvuubLq", "currencyNamespace": "DHG4eKB6", "currencyType": "VIRTUAL", "discountAmount": 21, "discountExpireAt": "1998-05-08T00:00:00Z", "discountPercentage": 71, "discountPurchaseAt": "1988-02-07T00:00:00Z", "discountedPrice": 23, "expireAt": "1988-09-11T00:00:00Z", "price": 3, "purchaseAt": "1992-09-21T00:00:00Z", "trialPrice": 52}]}}, {"itemIdentities": ["pdKGt0Jg", "Kaxldfdi", "2SGlO2TA"], "itemIdentityType": "ITEM_ID", "regionData": {"4B7tdZWG": [{"currencyCode": "1wZYkMlR", "currencyNamespace": "PhqUvVAc", "currencyType": "REAL", "discountAmount": 46, "discountExpireAt": "1973-08-07T00:00:00Z", "discountPercentage": 86, "discountPurchaseAt": "1973-11-05T00:00:00Z", "discountedPrice": 35, "expireAt": "1971-07-12T00:00:00Z", "price": 60, "purchaseAt": "1993-08-31T00:00:00Z", "trialPrice": 98}, {"currencyCode": "nUxENrnu", "currencyNamespace": "5IIAPeGa", "currencyType": "REAL", "discountAmount": 14, "discountExpireAt": "1993-01-05T00:00:00Z", "discountPercentage": 79, "discountPurchaseAt": "1983-08-10T00:00:00Z", "discountedPrice": 70, "expireAt": "1983-02-15T00:00:00Z", "price": 83, "purchaseAt": "1987-06-07T00:00:00Z", "trialPrice": 22}, {"currencyCode": "OqTSPGQ8", "currencyNamespace": "pc9KknlQ", "currencyType": "REAL", "discountAmount": 53, "discountExpireAt": "1999-08-17T00:00:00Z", "discountPercentage": 51, "discountPurchaseAt": "1991-07-09T00:00:00Z", "discountedPrice": 50, "expireAt": "1973-04-27T00:00:00Z", "price": 7, "purchaseAt": "1984-05-31T00:00:00Z", "trialPrice": 93}], "6Isoh9FP": [{"currencyCode": "zBooqSWh", "currencyNamespace": "ZUD7CBAQ", "currencyType": "REAL", "discountAmount": 86, "discountExpireAt": "1973-09-05T00:00:00Z", "discountPercentage": 88, "discountPurchaseAt": "1978-12-03T00:00:00Z", "discountedPrice": 33, "expireAt": "1992-12-27T00:00:00Z", "price": 83, "purchaseAt": "1986-01-10T00:00:00Z", "trialPrice": 54}, {"currencyCode": "e8xc5O7g", "currencyNamespace": "AnmbBtDT", "currencyType": "VIRTUAL", "discountAmount": 75, "discountExpireAt": "1984-04-11T00:00:00Z", "discountPercentage": 15, "discountPurchaseAt": "1980-07-22T00:00:00Z", "discountedPrice": 4, "expireAt": "1991-08-10T00:00:00Z", "price": 83, "purchaseAt": "1975-08-30T00:00:00Z", "trialPrice": 15}, {"currencyCode": "ORZXhNa5", "currencyNamespace": "ANlaH9yk", "currencyType": "VIRTUAL", "discountAmount": 67, "discountExpireAt": "1971-10-22T00:00:00Z", "discountPercentage": 34, "discountPurchaseAt": "1990-02-21T00:00:00Z", "discountedPrice": 41, "expireAt": "1974-06-28T00:00:00Z", "price": 93, "purchaseAt": "1996-11-30T00:00:00Z", "trialPrice": 78}], "GZD4Nkad": [{"currencyCode": "VrQgVLgH", "currencyNamespace": "zfGyOQZY", "currencyType": "VIRTUAL", "discountAmount": 46, "discountExpireAt": "1984-02-29T00:00:00Z", "discountPercentage": 92, "discountPurchaseAt": "1993-01-10T00:00:00Z", "discountedPrice": 78, "expireAt": "1984-08-13T00:00:00Z", "price": 12, "purchaseAt": "1991-03-12T00:00:00Z", "trialPrice": 26}, {"currencyCode": "vdPsMw1O", "currencyNamespace": "9Kcqf2Rp", "currencyType": "VIRTUAL", "discountAmount": 35, "discountExpireAt": "1999-01-03T00:00:00Z", "discountPercentage": 81, "discountPurchaseAt": "1992-04-11T00:00:00Z", "discountedPrice": 78, "expireAt": "1972-07-09T00:00:00Z", "price": 6, "purchaseAt": "1992-04-14T00:00:00Z", "trialPrice": 95}, {"currencyCode": "9XxvPMfO", "currencyNamespace": "SQA1gzYk", "currencyType": "REAL", "discountAmount": 16, "discountExpireAt": "1999-04-13T00:00:00Z", "discountPercentage": 4, "discountPurchaseAt": "1996-11-30T00:00:00Z", "discountedPrice": 76, "expireAt": "1988-12-25T00:00:00Z", "price": 40, "purchaseAt": "1994-11-26T00:00:00Z", "trialPrice": 19}]}}, {"itemIdentities": ["1IlLmzg4", "MSROCVaB", "3tCVOzin"], "itemIdentityType": "ITEM_ID", "regionData": {"v66DoB5g": [{"currencyCode": "Up48vIZQ", "currencyNamespace": "WtvhsdQd", "currencyType": "VIRTUAL", "discountAmount": 87, "discountExpireAt": "1987-08-11T00:00:00Z", "discountPercentage": 62, "discountPurchaseAt": "1976-04-28T00:00:00Z", "discountedPrice": 31, "expireAt": "1984-04-11T00:00:00Z", "price": 3, "purchaseAt": "1989-11-11T00:00:00Z", "trialPrice": 84}, {"currencyCode": "NurgSNWs", "currencyNamespace": "YJemHfjo", "currencyType": "REAL", "discountAmount": 5, "discountExpireAt": "1984-02-26T00:00:00Z", "discountPercentage": 79, "discountPurchaseAt": "1977-06-11T00:00:00Z", "discountedPrice": 49, "expireAt": "1984-06-23T00:00:00Z", "price": 29, "purchaseAt": "1998-05-15T00:00:00Z", "trialPrice": 88}, {"currencyCode": "sYsdfpde", "currencyNamespace": "FjaK0NtM", "currencyType": "VIRTUAL", "discountAmount": 18, "discountExpireAt": "1999-06-21T00:00:00Z", "discountPercentage": 38, "discountPurchaseAt": "1974-08-11T00:00:00Z", "discountedPrice": 24, "expireAt": "1971-10-03T00:00:00Z", "price": 78, "purchaseAt": "1971-01-20T00:00:00Z", "trialPrice": 64}], "ZeVher8W": [{"currencyCode": "Dmp6n39n", "currencyNamespace": "1OEpb99S", "currencyType": "REAL", "discountAmount": 11, "discountExpireAt": "1995-12-30T00:00:00Z", "discountPercentage": 28, "discountPurchaseAt": "1976-12-27T00:00:00Z", "discountedPrice": 90, "expireAt": "1971-04-12T00:00:00Z", "price": 11, "purchaseAt": "1988-10-31T00:00:00Z", "trialPrice": 14}, {"currencyCode": "RVx15m1k", "currencyNamespace": "Fr4aqJQe", "currencyType": "VIRTUAL", "discountAmount": 1, "discountExpireAt": "1999-02-17T00:00:00Z", "discountPercentage": 64, "discountPurchaseAt": "1971-03-24T00:00:00Z", "discountedPrice": 12, "expireAt": "1971-01-17T00:00:00Z", "price": 23, "purchaseAt": "1978-02-12T00:00:00Z", "trialPrice": 59}, {"currencyCode": "0UgLW2qg", "currencyNamespace": "4zWWYPL6", "currencyType": "VIRTUAL", "discountAmount": 26, "discountExpireAt": "1991-12-15T00:00:00Z", "discountPercentage": 21, "discountPurchaseAt": "1980-08-05T00:00:00Z", "discountedPrice": 19, "expireAt": "1978-03-06T00:00:00Z", "price": 59, "purchaseAt": "1981-07-27T00:00:00Z", "trialPrice": 63}], "EglENRos": [{"currencyCode": "Kyf8t8Fs", "currencyNamespace": "D9wbCr1y", "currencyType": "REAL", "discountAmount": 77, "discountExpireAt": "1993-06-01T00:00:00Z", "discountPercentage": 29, "discountPurchaseAt": "1981-02-15T00:00:00Z", "discountedPrice": 65, "expireAt": "1977-02-20T00:00:00Z", "price": 72, "purchaseAt": "1981-02-01T00:00:00Z", "trialPrice": 66}, {"currencyCode": "2ZgKZRHY", "currencyNamespace": "Wa7cx1o1", "currencyType": "VIRTUAL", "discountAmount": 66, "discountExpireAt": "1978-12-16T00:00:00Z", "discountPercentage": 22, "discountPurchaseAt": "1976-07-27T00:00:00Z", "discountedPrice": 53, "expireAt": "1983-01-04T00:00:00Z", "price": 15, "purchaseAt": "1998-12-04T00:00:00Z", "trialPrice": 59}, {"currencyCode": "QPXu73hA", "currencyNamespace": "mePJzbLz", "currencyType": "REAL", "discountAmount": 67, "discountExpireAt": "1995-08-05T00:00:00Z", "discountPercentage": 8, "discountPurchaseAt": "1993-08-04T00:00:00Z", "discountedPrice": 41, "expireAt": "1975-07-12T00:00:00Z", "price": 19, "purchaseAt": "1994-06-09T00:00:00Z", "trialPrice": 3}]}}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op BulkUpdateRegionData \
    --namespace $AB_NAMESPACE \
    --storeId 'yhokODDf' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 116 'BulkUpdateRegionData' test.out

#- 117 SearchItems
$CLI_EXE \
    --sn platform \
    --op SearchItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --itemType 'COINS' \
    --limit '17' \
    --offset '99' \
    --sortBy 'hmlt2HLa' \
    --storeId 'ooV361s2' \
    --keyword 'Uvvk92Pq' \
    --language 'E4SY0oA3' \
    > test.out 2>&1
eval_tap $? 117 'SearchItems' test.out

#- 118 QueryUncategorizedItems
$CLI_EXE \
    --sn platform \
    --op QueryUncategorizedItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --limit '52' \
    --offset '53' \
    --sortBy '["createdAt:desc", "displayOrder:asc", "name"]' \
    --storeId 'fkIqod1q' \
    > test.out 2>&1
eval_tap $? 118 'QueryUncategorizedItems' test.out

#- 119 GetItem
$CLI_EXE \
    --sn platform \
    --op GetItem \
    --itemId 'QDvmJoi1' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --storeId 'HQtgXKgb' \
    > test.out 2>&1
eval_tap $? 119 'GetItem' test.out

#- 120 UpdateItem
# body param: body
echo '{"appId": "Pvwbp14a", "appType": "GAME", "baseAppId": "rbTQNsca", "boothName": "LPwc92iQ", "categoryPath": "IOVGpX0u", "clazz": "yqOyEF70", "displayOrder": 28, "entitlementType": "CONSUMABLE", "ext": {"HS6MUs16": {}, "pJOV6N4m": {}, "unrMpodc": {}}, "features": ["gI7TWpcI", "cP2rKIYg", "9hP8EYFG"], "flexible": true, "images": [{"as": "HEH8LeD3", "caption": "pMriU7FR", "height": 42, "imageUrl": "zaPfpVl1", "smallImageUrl": "WmkCCSCN", "width": 47}, {"as": "1K9jV1Pk", "caption": "BFsAZQ5d", "height": 3, "imageUrl": "uwNtaxpx", "smallImageUrl": "BYhdKFEY", "width": 92}, {"as": "eU19Crlr", "caption": "bAR7ll1i", "height": 71, "imageUrl": "yKhKKuDW", "smallImageUrl": "aciGNb4r", "width": 11}], "inventoryConfig": {"customAttributes": {"1R2yGCye": {}, "S9bjPgPb": {}, "FGgb1WKy": {}}, "serverCustomAttributes": {"fdJM2atl": {}, "chOrPu3h": {}, "CKuw41a9": {}}, "slotUsed": 19}, "itemIds": ["Bnd9b3Ks", "ES8DB3bK", "rK74okoM"], "itemQty": {"fdtZIxYp": 20, "Oc37V8T0": 96, "ewyw0xgX": 68}, "itemType": "LOOTBOX", "listable": true, "localizations": {"5vz6nwKw": {"description": "fOj1kvV9", "localExt": {"nPcOEV4B": {}, "4RFavFR6": {}, "hvME22N7": {}}, "longDescription": "ROgrcBps", "title": "sWXCZ0yH"}, "DsiOkRI5": {"description": "IFE6WXKo", "localExt": {"gLydewYh": {}, "CLz6jjoe": {}, "hRkMiKsd": {}}, "longDescription": "DxfXUw7r", "title": "OY9l5mdQ"}, "lmzbtZde": {"description": "NbQAyOgM", "localExt": {"ftCA3ogc": {}, "2KXfjdU2": {}, "i3x4Ig6i": {}}, "longDescription": "zzcOxhn8", "title": "UO9Ytnyy"}}, "lootBoxConfig": {"rewardCount": 58, "rewards": [{"lootBoxItems": [{"count": 83, "duration": 3, "endDate": "1998-11-21T00:00:00Z", "itemId": "LHsYn7qo", "itemSku": "8FKOT3vQ", "itemType": "f2Jq5EK9"}, {"count": 50, "duration": 0, "endDate": "1999-12-05T00:00:00Z", "itemId": "kbAOkfKS", "itemSku": "bmUbJxD4", "itemType": "KQNjPFvU"}, {"count": 35, "duration": 25, "endDate": "1972-02-27T00:00:00Z", "itemId": "CyhbL8NU", "itemSku": "7wHhltfH", "itemType": "8UvEzN4R"}], "name": "XEfthN1m", "odds": 0.6474219147138985, "type": "PROBABILITY_GROUP", "weight": 73}, {"lootBoxItems": [{"count": 47, "duration": 2, "endDate": "1991-10-06T00:00:00Z", "itemId": "LSj6522b", "itemSku": "tAPu5kuF", "itemType": "Du4FAZap"}, {"count": 31, "duration": 23, "endDate": "1984-06-20T00:00:00Z", "itemId": "M0uzY6Pz", "itemSku": "JGhD5Ab7", "itemType": "paDhfsaO"}, {"count": 62, "duration": 18, "endDate": "1989-11-10T00:00:00Z", "itemId": "1ix6lDiB", "itemSku": "bpYnMjPB", "itemType": "2jYOz0nR"}], "name": "oS34uisQ", "odds": 0.24428390202038142, "type": "REWARD", "weight": 19}, {"lootBoxItems": [{"count": 90, "duration": 69, "endDate": "1981-01-14T00:00:00Z", "itemId": "SHUrMF1R", "itemSku": "Po55wCpG", "itemType": "YnTPnEOm"}, {"count": 25, "duration": 95, "endDate": "1976-06-10T00:00:00Z", "itemId": "JiroEdBn", "itemSku": "4EoqgZBB", "itemType": "OJYQ7ksV"}, {"count": 23, "duration": 88, "endDate": "1988-04-17T00:00:00Z", "itemId": "OwOJqTJv", "itemSku": "DfjQq5pZ", "itemType": "FRYHHvRV"}], "name": "yl82AWkz", "odds": 0.3604797088692716, "type": "REWARD_GROUP", "weight": 95}], "rollFunction": "DEFAULT"}, "maxCount": 37, "maxCountPerUser": 74, "name": "K91PehtG", "optionBoxConfig": {"boxItems": [{"count": 86, "duration": 94, "endDate": "1990-06-15T00:00:00Z", "itemId": "JCcTFbO0", "itemSku": "2akPOpTl", "itemType": "jzYDbJos"}, {"count": 69, "duration": 28, "endDate": "1978-04-27T00:00:00Z", "itemId": "u0xZQIeQ", "itemSku": "cxueN9Z1", "itemType": "8Knvcon6"}, {"count": 19, "duration": 50, "endDate": "1974-11-23T00:00:00Z", "itemId": "2G82rtFJ", "itemSku": "qE7mSG6A", "itemType": "gv0KCgMc"}]}, "purchasable": true, "recurring": {"cycle": "MONTHLY", "fixedFreeDays": 36, "fixedTrialCycles": 20, "graceDays": 6}, "regionData": {"mOkYaheV": [{"currencyCode": "O5X5Y2mL", "currencyNamespace": "8tg1SNQ8", "currencyType": "REAL", "discountAmount": 82, "discountExpireAt": "1999-11-07T00:00:00Z", "discountPercentage": 81, "discountPurchaseAt": "1980-02-20T00:00:00Z", "expireAt": "1990-09-30T00:00:00Z", "price": 39, "purchaseAt": "1998-02-03T00:00:00Z", "trialPrice": 20}, {"currencyCode": "lRXYQjUh", "currencyNamespace": "2n6ohYSC", "currencyType": "VIRTUAL", "discountAmount": 94, "discountExpireAt": "1994-07-02T00:00:00Z", "discountPercentage": 88, "discountPurchaseAt": "1996-02-18T00:00:00Z", "expireAt": "1976-01-30T00:00:00Z", "price": 96, "purchaseAt": "1975-02-24T00:00:00Z", "trialPrice": 31}, {"currencyCode": "bysj0eJs", "currencyNamespace": "VR2c3VRu", "currencyType": "VIRTUAL", "discountAmount": 42, "discountExpireAt": "1978-06-28T00:00:00Z", "discountPercentage": 93, "discountPurchaseAt": "1992-06-21T00:00:00Z", "expireAt": "1998-06-13T00:00:00Z", "price": 88, "purchaseAt": "1978-12-27T00:00:00Z", "trialPrice": 23}], "Mic6Eg6Z": [{"currencyCode": "v2d0x34Q", "currencyNamespace": "ezjT6ysp", "currencyType": "VIRTUAL", "discountAmount": 88, "discountExpireAt": "1977-09-06T00:00:00Z", "discountPercentage": 3, "discountPurchaseAt": "1994-01-13T00:00:00Z", "expireAt": "1998-01-15T00:00:00Z", "price": 15, "purchaseAt": "1994-03-26T00:00:00Z", "trialPrice": 85}, {"currencyCode": "iOTHnJJM", "currencyNamespace": "rjJy4Yoq", "currencyType": "REAL", "discountAmount": 12, "discountExpireAt": "1976-01-24T00:00:00Z", "discountPercentage": 23, "discountPurchaseAt": "1999-10-14T00:00:00Z", "expireAt": "1984-05-05T00:00:00Z", "price": 70, "purchaseAt": "1994-08-11T00:00:00Z", "trialPrice": 80}, {"currencyCode": "GUqAKOPr", "currencyNamespace": "mdrl7a4d", "currencyType": "REAL", "discountAmount": 89, "discountExpireAt": "1989-12-30T00:00:00Z", "discountPercentage": 100, "discountPurchaseAt": "1972-12-04T00:00:00Z", "expireAt": "1973-06-28T00:00:00Z", "price": 5, "purchaseAt": "1982-02-18T00:00:00Z", "trialPrice": 94}], "9e4qpfR4": [{"currencyCode": "uzwuj0cJ", "currencyNamespace": "jBvlT2sS", "currencyType": "VIRTUAL", "discountAmount": 73, "discountExpireAt": "1998-02-04T00:00:00Z", "discountPercentage": 5, "discountPurchaseAt": "1992-06-29T00:00:00Z", "expireAt": "1988-06-09T00:00:00Z", "price": 59, "purchaseAt": "1978-05-29T00:00:00Z", "trialPrice": 21}, {"currencyCode": "9MfxWW4d", "currencyNamespace": "drtW8sp7", "currencyType": "REAL", "discountAmount": 81, "discountExpireAt": "1988-02-14T00:00:00Z", "discountPercentage": 49, "discountPurchaseAt": "1994-02-08T00:00:00Z", "expireAt": "1978-02-05T00:00:00Z", "price": 22, "purchaseAt": "1979-03-28T00:00:00Z", "trialPrice": 35}, {"currencyCode": "QYmZEHvF", "currencyNamespace": "rf6iL4J2", "currencyType": "VIRTUAL", "discountAmount": 15, "discountExpireAt": "1995-07-24T00:00:00Z", "discountPercentage": 96, "discountPurchaseAt": "1997-06-04T00:00:00Z", "expireAt": "1988-02-17T00:00:00Z", "price": 83, "purchaseAt": "1981-04-03T00:00:00Z", "trialPrice": 41}]}, "saleConfig": {"currencyCode": "7ZCiFoat", "price": 84}, "seasonType": "PASS", "sectionExclusive": false, "sellable": false, "sku": "6Qjt7Ann", "stackable": false, "status": "ACTIVE", "tags": ["qFNYgR1j", "b7C0Hl2l", "EySaOI5M"], "targetCurrencyCode": "VcsHpJzE", "targetNamespace": "Rdz15oSm", "thumbnailUrl": "8HflrZwB", "useCount": 82}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateItem \
    --itemId 'V3NhIqYU' \
    --namespace $AB_NAMESPACE \
    --storeId 'a62pVd41' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 120 'UpdateItem' test.out

#- 121 DeleteItem
$CLI_EXE \
    --sn platform \
    --op DeleteItem \
    --itemId 'pPJb5Js0' \
    --namespace $AB_NAMESPACE \
    --force 'false' \
    --storeId 'DHwEpb18' \
    > test.out 2>&1
eval_tap $? 121 'DeleteItem' test.out

#- 122 AcquireItem
# body param: body
echo '{"count": 56, "orderNo": "sjzmG67m"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op AcquireItem \
    --itemId 'drSk3NDS' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 122 'AcquireItem' test.out

#- 123 GetApp
$CLI_EXE \
    --sn platform \
    --op GetApp \
    --itemId 'BkJIJqdG' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --storeId 'u42WpgxY' \
    > test.out 2>&1
eval_tap $? 123 'GetApp' test.out

#- 124 UpdateApp
# body param: body
echo '{"carousel": [{"alt": "Fo1ONXvY", "previewUrl": "DEJ35Dv4", "thumbnailUrl": "Cfswizqh", "type": "image", "url": "WV60pnYo", "videoSource": "vimeo"}, {"alt": "FhvQUgKw", "previewUrl": "ZlqiosZs", "thumbnailUrl": "nPe9b0U1", "type": "image", "url": "VMrveM5N", "videoSource": "youtube"}, {"alt": "HpsUaIFM", "previewUrl": "0dfX5Yk7", "thumbnailUrl": "T4iLgMCJ", "type": "image", "url": "hanYBkjy", "videoSource": "youtube"}], "developer": "I06lRFI0", "forumUrl": "6gVJqWAa", "genres": ["MassivelyMultiplayer", "Simulation", "Strategy"], "localizations": {"FX77iLN7": {"announcement": "zKMzwTsp", "slogan": "Ly9nyKS6"}, "SYWfVicF": {"announcement": "dtdKJZRN", "slogan": "SENpgmVu"}, "GEkTtHTS": {"announcement": "HAlYJcaA", "slogan": "uKMU3bww"}}, "platformRequirements": {"wwP4uJHM": [{"additionals": "NyFGdwZN", "directXVersion": "5gzLAkrY", "diskSpace": "9GPleOP5", "graphics": "j1blnToK", "label": "550LHK1V", "osVersion": "OYZsZnhf", "processor": "ko0qPfsQ", "ram": "WQDOQ2o5", "soundCard": "z6GX6P0S"}, {"additionals": "IfL3b693", "directXVersion": "QzuaQ9Jq", "diskSpace": "HEWjtEVa", "graphics": "RY7xW62y", "label": "cPh0A6aH", "osVersion": "MiLstqje", "processor": "Lbg0BwJB", "ram": "QgpBjWW7", "soundCard": "SpDyX2sH"}, {"additionals": "t4CalqbE", "directXVersion": "0jJ74WmH", "diskSpace": "k4frn7wp", "graphics": "QBJ2hc5L", "label": "lZKNgPs4", "osVersion": "3U9vngIW", "processor": "h9xpIN2F", "ram": "pV4tNz3i", "soundCard": "W4dzBhjP"}], "A9CMVoLH": [{"additionals": "R2QlfsxC", "directXVersion": "ZzMgtYsM", "diskSpace": "lrq1BTZ1", "graphics": "kqkfe3mI", "label": "9PIJBCFa", "osVersion": "bikEZV9E", "processor": "euKA9V2d", "ram": "Pt7aBtJI", "soundCard": "jr0lGXwA"}, {"additionals": "zZ5eEpAo", "directXVersion": "utDKW1bD", "diskSpace": "RWImI3Cp", "graphics": "IS5atW4W", "label": "RuvHvSFG", "osVersion": "0bQANCQu", "processor": "clrNnXcu", "ram": "yMSxWOb5", "soundCard": "Fwa095SM"}, {"additionals": "MNUZKFl4", "directXVersion": "rZblUYkh", "diskSpace": "apKpDTnJ", "graphics": "aXSRzmBH", "label": "7ZWi7tg3", "osVersion": "1pRKhNjV", "processor": "5PMi9iRU", "ram": "NAuQ62P7", "soundCard": "suRP0J6X"}], "rvsGL8sA": [{"additionals": "Nt7aSC9s", "directXVersion": "DWYwXSsP", "diskSpace": "CnZwcgAC", "graphics": "w3bWeNIS", "label": "tYRfzzBZ", "osVersion": "mvNXyWKn", "processor": "dGOl2tqM", "ram": "zSMuSehh", "soundCard": "Y3V5c4cr"}, {"additionals": "QYjrjAh9", "directXVersion": "qbNIVXzW", "diskSpace": "fbVmkJyD", "graphics": "gyvp5Zcu", "label": "37e5jVm1", "osVersion": "6SedUE8A", "processor": "HMpxqNnd", "ram": "thEkpgQa", "soundCard": "39YdqvtW"}, {"additionals": "SKtbyZcB", "directXVersion": "LDufksua", "diskSpace": "sNBTy8Cc", "graphics": "UAm5DEeb", "label": "qW8CVQX4", "osVersion": "pQj8gG1t", "processor": "FjcYicK2", "ram": "EY8iw7u9", "soundCard": "CZTDniLZ"}]}, "platforms": ["Linux", "Windows", "Linux"], "players": ["LocalCoop", "Multi", "Multi"], "primaryGenre": "Sports", "publisher": "FYEs8JLN", "releaseDate": "1998-06-08T00:00:00Z", "websiteUrl": "CfMyWN4F"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateApp \
    --itemId 'g310ltkF' \
    --namespace $AB_NAMESPACE \
    --storeId 'pTfaj9nM' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 124 'UpdateApp' test.out

#- 125 DisableItem
$CLI_EXE \
    --sn platform \
    --op DisableItem \
    --itemId 'rdLpaSoY' \
    --namespace $AB_NAMESPACE \
    --storeId 'zkvmcFQU' \
    > test.out 2>&1
eval_tap $? 125 'DisableItem' test.out

#- 126 GetItemDynamicData
$CLI_EXE \
    --sn platform \
    --op GetItemDynamicData \
    --itemId 'd18JkQXV' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 126 'GetItemDynamicData' test.out

#- 127 EnableItem
$CLI_EXE \
    --sn platform \
    --op EnableItem \
    --itemId '1Ro8Gmcu' \
    --namespace $AB_NAMESPACE \
    --storeId 'FAJUgHgT' \
    > test.out 2>&1
eval_tap $? 127 'EnableItem' test.out

#- 128 FeatureItem
$CLI_EXE \
    --sn platform \
    --op FeatureItem \
    --feature 'CHYNVEjD' \
    --itemId 'oVPJlgIf' \
    --namespace $AB_NAMESPACE \
    --storeId 'hn2FBnvG' \
    > test.out 2>&1
eval_tap $? 128 'FeatureItem' test.out

#- 129 DefeatureItem
$CLI_EXE \
    --sn platform \
    --op DefeatureItem \
    --feature 'XG1jNcaw' \
    --itemId 'nHFlvMra' \
    --namespace $AB_NAMESPACE \
    --storeId 'D8L0SIGT' \
    > test.out 2>&1
eval_tap $? 129 'DefeatureItem' test.out

#- 130 GetLocaleItem
$CLI_EXE \
    --sn platform \
    --op GetLocaleItem \
    --itemId 'S1KkqGhw' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --language 'hzW253Uf' \
    --populateBundle 'false' \
    --region 'BYs1ZDRG' \
    --storeId 'D4nYDi2j' \
    > test.out 2>&1
eval_tap $? 130 'GetLocaleItem' test.out

#- 131 UpdateItemPurchaseCondition
# body param: body
echo '{"purchaseCondition": {"conditionGroups": [{"operator": "and", "predicates": [{"anyOf": 50, "comparison": "isGreaterThanOrEqual", "name": "N8kGZSn4", "predicateType": "EntitlementPredicate", "value": "ejhD3roZ", "values": ["aAVqnbgh", "kQK1h8Oy", "acIpdAKR"]}, {"anyOf": 15, "comparison": "isNot", "name": "B8RtxxRV", "predicateType": "EntitlementPredicate", "value": "IXVoVv6E", "values": ["ejC0M77r", "IRgqqJfZ", "xbiu6VF9"]}, {"anyOf": 39, "comparison": "is", "name": "Y46eiFDo", "predicateType": "SeasonTierPredicate", "value": "xTSAqFLb", "values": ["sirzy3d1", "xNJJ58ab", "8Apt5DK0"]}]}, {"operator": "and", "predicates": [{"anyOf": 0, "comparison": "isLessThanOrEqual", "name": "Z6uT5pKP", "predicateType": "EntitlementPredicate", "value": "Tr7uqwiZ", "values": ["J6D7xphc", "VArchB1y", "26RPl6ER"]}, {"anyOf": 100, "comparison": "is", "name": "BdURJwP8", "predicateType": "SeasonTierPredicate", "value": "ry5m1HJE", "values": ["HSuuRkEi", "oAdSmwfw", "ZcxRFU3Y"]}, {"anyOf": 53, "comparison": "isLessThanOrEqual", "name": "cJGM2GBk", "predicateType": "SeasonPassPredicate", "value": "gZVdOdyc", "values": ["x7jYOoAD", "K3U6jfdM", "MU8K2ad0"]}]}, {"operator": "and", "predicates": [{"anyOf": 36, "comparison": "includes", "name": "X7bPvxel", "predicateType": "SeasonTierPredicate", "value": "f2twnofF", "values": ["Q4NaRqvk", "GiVz72u7", "eR71QR90"]}, {"anyOf": 58, "comparison": "isGreaterThanOrEqual", "name": "WE5JV8KX", "predicateType": "EntitlementPredicate", "value": "M1RAWCrP", "values": ["zqs2JQmE", "iNfvORMv", "Y9Towkjs"]}, {"anyOf": 52, "comparison": "is", "name": "pPKFdmWa", "predicateType": "SeasonTierPredicate", "value": "s1iEpJIH", "values": ["AYfPWugS", "96Hp4aWZ", "AG4bsnnw"]}]}]}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateItemPurchaseCondition \
    --itemId 'MNT0MpwY' \
    --namespace $AB_NAMESPACE \
    --storeId '4XoV69d9' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 131 'UpdateItemPurchaseCondition' test.out

#- 132 ReturnItem
# body param: body
echo '{"orderNo": "o1XBG0WM"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ReturnItem \
    --itemId 'jNt6PQyL' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 132 'ReturnItem' test.out

#- 133 QueryKeyGroups
$CLI_EXE \
    --sn platform \
    --op QueryKeyGroups \
    --namespace $AB_NAMESPACE \
    --limit '100' \
    --name 'WwqirBWj' \
    --offset '53' \
    --tag '2hLEdEYw' \
    > test.out 2>&1
eval_tap $? 133 'QueryKeyGroups' test.out

#- 134 CreateKeyGroup
# body param: body
echo '{"description": "yLkDRVXX", "name": "6duvQiE3", "status": "INACTIVE", "tags": ["yrJVW5FE", "1bWgG0iS", "2pRqfHX8"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateKeyGroup \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 134 'CreateKeyGroup' test.out

#- 135 GetKeyGroupByBoothName
eval_tap 0 135 'GetKeyGroupByBoothName # SKIP deprecated' test.out

#- 136 GetKeyGroup
$CLI_EXE \
    --sn platform \
    --op GetKeyGroup \
    --keyGroupId 'idYWuwYY' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 136 'GetKeyGroup' test.out

#- 137 UpdateKeyGroup
# body param: body
echo '{"description": "4s0QkMXz", "name": "U2C3Nb9l", "status": "ACTIVE", "tags": ["ctK2YrKE", "L0fiJIpa", "ZBqELyTQ"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateKeyGroup \
    --keyGroupId 'WWTNJrAy' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 137 'UpdateKeyGroup' test.out

#- 138 GetKeyGroupDynamic
$CLI_EXE \
    --sn platform \
    --op GetKeyGroupDynamic \
    --keyGroupId 'A512hzbz' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 138 'GetKeyGroupDynamic' test.out

#- 139 ListKeys
$CLI_EXE \
    --sn platform \
    --op ListKeys \
    --keyGroupId 'Y8FTRJ0H' \
    --namespace $AB_NAMESPACE \
    --limit '18' \
    --offset '73' \
    --status 'ACTIVE' \
    > test.out 2>&1
eval_tap $? 139 'ListKeys' test.out

#- 140 UploadKeys
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UploadKeys \
    --keyGroupId 'T5M0eHpE' \
    --namespace $AB_NAMESPACE \
    --upload file $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 140 'UploadKeys' test.out

#- 141 QueryOrders
$CLI_EXE \
    --sn platform \
    --op QueryOrders \
    --namespace $AB_NAMESPACE \
    --endTime '5jvYAkeU' \
    --limit '99' \
    --offset '56' \
    --orderNos '["hxaeRudu", "9KJrRnN6", "RzdEw3Q7"]' \
    --sortBy 'r1NI8NwS' \
    --startTime 'IEBV1gdg' \
    --status 'CHARGED' \
    --withTotal 'false' \
    > test.out 2>&1
eval_tap $? 141 'QueryOrders' test.out

#- 142 GetOrderStatistics
$CLI_EXE \
    --sn platform \
    --op GetOrderStatistics \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 142 'GetOrderStatistics' test.out

#- 143 GetOrder
$CLI_EXE \
    --sn platform \
    --op GetOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'vJ0efpzR' \
    > test.out 2>&1
eval_tap $? 143 'GetOrder' test.out

#- 144 RefundOrder
# body param: body
echo '{"description": "8yotYcIx"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RefundOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'TPLHaVyB' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 144 'RefundOrder' test.out

#- 145 GetPaymentCallbackConfig
$CLI_EXE \
    --sn platform \
    --op GetPaymentCallbackConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 145 'GetPaymentCallbackConfig' test.out

#- 146 UpdatePaymentCallbackConfig
# body param: body
echo '{"dryRun": true, "notifyUrl": "OIFo5RR0", "privateKey": "1sTuyWNU"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePaymentCallbackConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 146 'UpdatePaymentCallbackConfig' test.out

#- 147 QueryPaymentNotifications
$CLI_EXE \
    --sn platform \
    --op QueryPaymentNotifications \
    --namespace $AB_NAMESPACE \
    --endDate '4jiKNBOm' \
    --externalId '7AXzFHyU' \
    --limit '2' \
    --notificationSource 'STRIPE' \
    --notificationType 'hrPTg27Y' \
    --offset '69' \
    --paymentOrderNo '3I6cm6Od' \
    --startDate 'hgS5CXY1' \
    --status 'IGNORED' \
    > test.out 2>&1
eval_tap $? 147 'QueryPaymentNotifications' test.out

#- 148 QueryPaymentOrders
$CLI_EXE \
    --sn platform \
    --op QueryPaymentOrders \
    --namespace $AB_NAMESPACE \
    --channel 'EXTERNAL' \
    --extTxId 'UUKzHvBo' \
    --limit '60' \
    --offset '29' \
    --status 'CHARGEBACK' \
    > test.out 2>&1
eval_tap $? 148 'QueryPaymentOrders' test.out

#- 149 CreatePaymentOrderByDedicated
# body param: body
echo '{"currencyCode": "Qt0IJYrI", "currencyNamespace": "N0HZ7ux5", "customParameters": {"V5q4wFp4": {}, "Ii1xTQLz": {}, "UhHSVBJS": {}}, "description": "Y6EWXIdF", "extOrderNo": "263hbDZg", "extUserId": "P7SqmgQY", "itemType": "OPTIONBOX", "language": "qJgs-vHAL", "metadata": {"DNzfFnrL": "kzFfBHyc", "NG8Vh7vN": "cENx2sQl", "kNYQKy73": "Z69vPZxU"}, "notifyUrl": "EgCwHz3U", "omitNotification": true, "platform": "YTd21far", "price": 60, "recurringPaymentOrderNo": "px6xwMXv", "region": "QzD0dLjB", "returnUrl": "YN6sbny0", "sandbox": false, "sku": "CPgXJtio", "subscriptionId": "dPa4PNOb", "targetNamespace": "SNtpmBC1", "targetUserId": "AtjsAyqF", "title": "61RduXCy"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreatePaymentOrderByDedicated \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 149 'CreatePaymentOrderByDedicated' test.out

#- 150 ListExtOrderNoByExtTxId
$CLI_EXE \
    --sn platform \
    --op ListExtOrderNoByExtTxId \
    --namespace $AB_NAMESPACE \
    --extTxId '56fkMkSJ' \
    > test.out 2>&1
eval_tap $? 150 'ListExtOrderNoByExtTxId' test.out

#- 151 GetPaymentOrder
$CLI_EXE \
    --sn platform \
    --op GetPaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'Gdbcm45r' \
    > test.out 2>&1
eval_tap $? 151 'GetPaymentOrder' test.out

#- 152 ChargePaymentOrder
# body param: body
echo '{"extTxId": "GC2noSPP", "paymentMethod": "bsJPbrhx", "paymentProvider": "WXPAY"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ChargePaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'Jt8DK91a' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 152 'ChargePaymentOrder' test.out

#- 153 RefundPaymentOrderByDedicated
# body param: body
echo '{"description": "y9LeHLkc"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RefundPaymentOrderByDedicated \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'vc3Etai1' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 153 'RefundPaymentOrderByDedicated' test.out

#- 154 SimulatePaymentOrderNotification
# body param: body
echo '{"amount": 55, "currencyCode": "YtiPjPzz", "notifyType": "CHARGE", "paymentProvider": "XSOLLA", "salesTax": 34, "vat": 33}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SimulatePaymentOrderNotification \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'CU2ZfQRV' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 154 'SimulatePaymentOrderNotification' test.out

#- 155 GetPaymentOrderChargeStatus
$CLI_EXE \
    --sn platform \
    --op GetPaymentOrderChargeStatus \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'qzSJiLMg' \
    > test.out 2>&1
eval_tap $? 155 'GetPaymentOrderChargeStatus' test.out

#- 156 GetPlatformEntitlementConfig
$CLI_EXE \
    --sn platform \
    --op GetPlatformEntitlementConfig \
    --namespace $AB_NAMESPACE \
    --platform 'Oculus' \
    > test.out 2>&1
eval_tap $? 156 'GetPlatformEntitlementConfig' test.out

#- 157 UpdatePlatformEntitlementConfig
# body param: body
echo '{"allowedPlatformOrigins": ["System", "Twitch", "Nintendo"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePlatformEntitlementConfig \
    --namespace $AB_NAMESPACE \
    --platform 'Nintendo' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 157 'UpdatePlatformEntitlementConfig' test.out

#- 158 GetPlatformWalletConfig
$CLI_EXE \
    --sn platform \
    --op GetPlatformWalletConfig \
    --namespace $AB_NAMESPACE \
    --platform 'IOS' \
    > test.out 2>&1
eval_tap $? 158 'GetPlatformWalletConfig' test.out

#- 159 UpdatePlatformWalletConfig
# body param: body
echo '{"allowedBalanceOrigins": ["IOS", "Epic", "Nintendo"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePlatformWalletConfig \
    --namespace $AB_NAMESPACE \
    --platform 'Oculus' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 159 'UpdatePlatformWalletConfig' test.out

#- 160 ResetPlatformWalletConfig
$CLI_EXE \
    --sn platform \
    --op ResetPlatformWalletConfig \
    --namespace $AB_NAMESPACE \
    --platform 'IOS' \
    > test.out 2>&1
eval_tap $? 160 'ResetPlatformWalletConfig' test.out

#- 161 GetRevocationConfig
$CLI_EXE \
    --sn platform \
    --op GetRevocationConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 161 'GetRevocationConfig' test.out

#- 162 UpdateRevocationConfig
# body param: body
echo '{"entitlement": {"consumable": {"enabled": false, "strategy": "REVOKE_OR_REPORT"}, "durable": {"enabled": false, "strategy": "REVOKE_OR_REPORT"}}, "wallet": {"enabled": false, "strategy": "ALWAYS_REVOKE"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateRevocationConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 162 'UpdateRevocationConfig' test.out

#- 163 DeleteRevocationConfig
$CLI_EXE \
    --sn platform \
    --op DeleteRevocationConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 163 'DeleteRevocationConfig' test.out

#- 164 QueryRevocationHistories
$CLI_EXE \
    --sn platform \
    --op QueryRevocationHistories \
    --namespace $AB_NAMESPACE \
    --endTime 'b4XDxejP' \
    --limit '20' \
    --offset '86' \
    --source 'ORDER' \
    --startTime 'bQJIDuSI' \
    --status 'FAIL' \
    --transactionId 'N1RLStib' \
    --userId 'pJt78Drb' \
    > test.out 2>&1
eval_tap $? 164 'QueryRevocationHistories' test.out

#- 165 GetRevocationPluginConfig
$CLI_EXE \
    --sn platform \
    --op GetRevocationPluginConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 165 'GetRevocationPluginConfig' test.out

#- 166 UpdateRevocationPluginConfig
# body param: body
echo '{"appConfig": {"appName": "PLOJIvIP"}, "customConfig": {"connectionType": "INSECURE", "grpcServerAddress": "xfqiZVye"}, "extendType": "CUSTOM"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateRevocationPluginConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 166 'UpdateRevocationPluginConfig' test.out

#- 167 DeleteRevocationPluginConfig
$CLI_EXE \
    --sn platform \
    --op DeleteRevocationPluginConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 167 'DeleteRevocationPluginConfig' test.out

#- 168 UploadRevocationPluginConfigCert
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UploadRevocationPluginConfigCert \
    --namespace $AB_NAMESPACE \
    --upload file $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 168 'UploadRevocationPluginConfigCert' test.out

#- 169 CreateReward
# body param: body
echo '{"description": "qR72J2In", "eventTopic": "ntxvhpUB", "maxAwarded": 18, "maxAwardedPerUser": 76, "namespaceExpression": "JmVYWk7i", "rewardCode": "fOFoh8tx", "rewardConditions": [{"condition": "2YvSDzoQ", "conditionName": "KGBVWqtQ", "eventName": "4VcKLBUH", "rewardItems": [{"duration": 42, "endDate": "1973-08-23T00:00:00Z", "identityType": "ITEM_SKU", "itemId": "XNiyqs0f", "quantity": 91, "sku": "DOeg3Pt7"}, {"duration": 74, "endDate": "1972-11-30T00:00:00Z", "identityType": "ITEM_ID", "itemId": "oOQ2PIDF", "quantity": 47, "sku": "wl30Kqil"}, {"duration": 62, "endDate": "1982-09-07T00:00:00Z", "identityType": "ITEM_SKU", "itemId": "cjvmhRSo", "quantity": 88, "sku": "zywYNhIl"}]}, {"condition": "Yl42iV15", "conditionName": "7pZ7GbYa", "eventName": "QYJiqQB8", "rewardItems": [{"duration": 9, "endDate": "1990-07-21T00:00:00Z", "identityType": "ITEM_ID", "itemId": "E8bTg72B", "quantity": 90, "sku": "0eX6ycQv"}, {"duration": 67, "endDate": "1995-09-19T00:00:00Z", "identityType": "ITEM_ID", "itemId": "aGFZW4sn", "quantity": 70, "sku": "c6ZoBnFV"}, {"duration": 16, "endDate": "1972-01-03T00:00:00Z", "identityType": "ITEM_SKU", "itemId": "UrcfdF1T", "quantity": 58, "sku": "Q1Dc89vg"}]}, {"condition": "M9OrMYMO", "conditionName": "VMVFI46n", "eventName": "uVcE3bUK", "rewardItems": [{"duration": 73, "endDate": "1972-03-22T00:00:00Z", "identityType": "ITEM_ID", "itemId": "eMVM5kV0", "quantity": 62, "sku": "Htz6nu8X"}, {"duration": 29, "endDate": "1994-04-28T00:00:00Z", "identityType": "ITEM_SKU", "itemId": "bP5rl7Mf", "quantity": 40, "sku": "c6cL4wRP"}, {"duration": 97, "endDate": "1981-03-16T00:00:00Z", "identityType": "ITEM_ID", "itemId": "hqmxvn0l", "quantity": 35, "sku": "rsmKES0Q"}]}], "userIdExpression": "NLRnhUB0"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateReward \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 169 'CreateReward' test.out

#- 170 QueryRewards
$CLI_EXE \
    --sn platform \
    --op QueryRewards \
    --namespace $AB_NAMESPACE \
    --eventTopic 'LnLeO2PE' \
    --limit '12' \
    --offset '32' \
    --sortBy '["rewardCode:desc", "namespace"]' \
    > test.out 2>&1
eval_tap $? 170 'QueryRewards' test.out

#- 171 ExportRewards
$CLI_EXE \
    --sn platform \
    --op ExportRewards \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 171 'ExportRewards' test.out

#- 172 ImportRewards
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op ImportRewards \
    --namespace $AB_NAMESPACE \
    --replaceExisting 'false' \
    --upload file $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 172 'ImportRewards' test.out

#- 173 GetReward
$CLI_EXE \
    --sn platform \
    --op GetReward \
    --namespace $AB_NAMESPACE \
    --rewardId 'SKroCDGK' \
    > test.out 2>&1
eval_tap $? 173 'GetReward' test.out

#- 174 UpdateReward
# body param: body
echo '{"description": "yjchlAyu", "eventTopic": "tjkqtJof", "maxAwarded": 4, "maxAwardedPerUser": 28, "namespaceExpression": "Aad7xojB", "rewardCode": "VXd5otAY", "rewardConditions": [{"condition": "Xl7mJ4R1", "conditionName": "TNqPxeko", "eventName": "RptgaeTg", "rewardItems": [{"duration": 93, "endDate": "1996-03-09T00:00:00Z", "identityType": "ITEM_SKU", "itemId": "nIX4zmpF", "quantity": 67, "sku": "dnPGgFeV"}, {"duration": 25, "endDate": "1977-12-26T00:00:00Z", "identityType": "ITEM_SKU", "itemId": "IcLUfppw", "quantity": 30, "sku": "3h3kg972"}, {"duration": 91, "endDate": "1983-07-12T00:00:00Z", "identityType": "ITEM_ID", "itemId": "ifSVedE5", "quantity": 39, "sku": "uEv4RHAw"}]}, {"condition": "MJAUX3bh", "conditionName": "9jnDxOmR", "eventName": "CCSZdQpd", "rewardItems": [{"duration": 89, "endDate": "1988-11-22T00:00:00Z", "identityType": "ITEM_ID", "itemId": "BMoNbLZb", "quantity": 43, "sku": "SOPuVtKT"}, {"duration": 39, "endDate": "1991-10-17T00:00:00Z", "identityType": "ITEM_ID", "itemId": "U7duSspc", "quantity": 95, "sku": "wbdLd50y"}, {"duration": 18, "endDate": "1992-02-12T00:00:00Z", "identityType": "ITEM_ID", "itemId": "NUtwFNyy", "quantity": 65, "sku": "tsPCW0uu"}]}, {"condition": "Dcwo63Li", "conditionName": "LDrS38xU", "eventName": "aK38SS1g", "rewardItems": [{"duration": 17, "endDate": "1985-09-27T00:00:00Z", "identityType": "ITEM_SKU", "itemId": "B5nPo5qo", "quantity": 98, "sku": "ElCFxc0T"}, {"duration": 100, "endDate": "1982-08-28T00:00:00Z", "identityType": "ITEM_SKU", "itemId": "hN6EaUZ0", "quantity": 4, "sku": "2cVJJTNL"}, {"duration": 74, "endDate": "1973-12-11T00:00:00Z", "identityType": "ITEM_ID", "itemId": "vQaY1vK3", "quantity": 84, "sku": "BkB97f98"}]}], "userIdExpression": "XlMwAlYb"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateReward \
    --namespace $AB_NAMESPACE \
    --rewardId '8qPiZQug' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 174 'UpdateReward' test.out

#- 175 DeleteReward
$CLI_EXE \
    --sn platform \
    --op DeleteReward \
    --namespace $AB_NAMESPACE \
    --rewardId 'NvvBxPsQ' \
    > test.out 2>&1
eval_tap $? 175 'DeleteReward' test.out

#- 176 CheckEventCondition
# body param: body
echo '{"payload": {"dEHzYNkw": {}, "tYYD0ntm": {}, "plhR0fSY": {}}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CheckEventCondition \
    --namespace $AB_NAMESPACE \
    --rewardId 'TccebOcL' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 176 'CheckEventCondition' test.out

#- 177 DeleteRewardConditionRecord
# body param: body
echo '{"conditionName": "HeCbltOP", "userId": "A32q7PwH"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op DeleteRewardConditionRecord \
    --namespace $AB_NAMESPACE \
    --rewardId 'UUSShGoK' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 177 'DeleteRewardConditionRecord' test.out

#- 178 QuerySections
$CLI_EXE \
    --sn platform \
    --op QuerySections \
    --namespace $AB_NAMESPACE \
    --end 'FIZF76lx' \
    --limit '5' \
    --offset '66' \
    --start 'H5AmPDKt' \
    --storeId 'REEUAABS' \
    --viewId 'Ou1ntZVH' \
    > test.out 2>&1
eval_tap $? 178 'QuerySections' test.out

#- 179 CreateSection
# body param: body
echo '{"active": false, "displayOrder": 26, "endDate": "1982-10-05T00:00:00Z", "ext": {"ZSTsij5j": {}, "jqwOmyzS": {}, "OfA7CSnm": {}}, "fixedPeriodRotationConfig": {"backfillType": "CUSTOM", "duration": 99, "itemCount": 38, "rule": "SEQUENCE"}, "items": [{"id": "fd3CgJUj", "sku": "Fs7q18U7"}, {"id": "Hsk7jMZa", "sku": "N8jFsLN3"}, {"id": "jrbzqL5l", "sku": "DU68arwa"}], "localizations": {"8P6qpI0V": {"description": "D4E0tpxB", "localExt": {"1GirE5e2": {}, "myfilvzw": {}, "WykncMyi": {}}, "longDescription": "adzz01wN", "title": "9OkWMmlt"}, "sqxAGsAm": {"description": "QmnBsOxw", "localExt": {"HtVCqOMh": {}, "sd0JHUVi": {}, "Y4FJUra6": {}}, "longDescription": "nKsJoweZ", "title": "DqXkWvvX"}, "kvac4g71": {"description": "SCaq0MJS", "localExt": {"bds5xO5g": {}, "nSnf2hEe": {}, "pWLF8XKK": {}}, "longDescription": "3M43JuW8", "title": "pFasYQsE"}}, "name": "OLLNx9Y7", "rotationType": "NONE", "startDate": "1997-05-07T00:00:00Z", "viewId": "LghlgP4H"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateSection \
    --namespace $AB_NAMESPACE \
    --storeId 'VOI1ZAES' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 179 'CreateSection' test.out

#- 180 PurgeExpiredSection
$CLI_EXE \
    --sn platform \
    --op PurgeExpiredSection \
    --namespace $AB_NAMESPACE \
    --storeId 'eKwIvFOc' \
    > test.out 2>&1
eval_tap $? 180 'PurgeExpiredSection' test.out

#- 181 GetSection
$CLI_EXE \
    --sn platform \
    --op GetSection \
    --namespace $AB_NAMESPACE \
    --sectionId 'qVjriAru' \
    --storeId 'uTqQ9xNj' \
    > test.out 2>&1
eval_tap $? 181 'GetSection' test.out

#- 182 UpdateSection
# body param: body
echo '{"active": true, "displayOrder": 5, "endDate": "1984-01-24T00:00:00Z", "ext": {"2pVksXzt": {}, "RRniosnd": {}, "iCMrD8JG": {}}, "fixedPeriodRotationConfig": {"backfillType": "NONE", "duration": 24, "itemCount": 9, "rule": "SEQUENCE"}, "items": [{"id": "bNQBN6Zg", "sku": "KJipEHdc"}, {"id": "6kbbH2rd", "sku": "XVOlt0FX"}, {"id": "xyiGqDGW", "sku": "QjxOna5h"}], "localizations": {"qxVdljb8": {"description": "BUl0c2nN", "localExt": {"jst9qi5X": {}, "arVFBNrZ": {}, "0I1g71ZO": {}}, "longDescription": "UlY9NS1c", "title": "qtgq5yDK"}, "HBwuHqfK": {"description": "9UueHp6L", "localExt": {"z26ZnOLf": {}, "T7tRuEpc": {}, "ljjP340j": {}}, "longDescription": "YzntPuKG", "title": "SoOJCQSg"}, "rXT3KH2o": {"description": "8BJkCkrG", "localExt": {"FebASpA4": {}, "XKSajVrm": {}, "vc7G02qK": {}}, "longDescription": "Z464uSwM", "title": "KZUuKLhB"}}, "name": "z0ttc8e2", "rotationType": "NONE", "startDate": "1989-05-23T00:00:00Z", "viewId": "bFOmfgB3"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateSection \
    --namespace $AB_NAMESPACE \
    --sectionId 'yjExBdYn' \
    --storeId 'nHUpjN1P' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 182 'UpdateSection' test.out

#- 183 DeleteSection
$CLI_EXE \
    --sn platform \
    --op DeleteSection \
    --namespace $AB_NAMESPACE \
    --sectionId 'RENPRY1f' \
    --storeId 'v0U8Tcw6' \
    > test.out 2>&1
eval_tap $? 183 'DeleteSection' test.out

#- 184 ListStores
$CLI_EXE \
    --sn platform \
    --op ListStores \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 184 'ListStores' test.out

#- 185 CreateStore
# body param: body
echo '{"defaultLanguage": "AM7BMQ09", "defaultRegion": "u3wq5ilt", "description": "mqYbK5Au", "supportedLanguages": ["rCpua2rN", "R0QmJ6yH", "jN4LPNjr"], "supportedRegions": ["BUdMNcP4", "FB3UiYwN", "mPcBoO9I"], "title": "yg17rAZ9"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateStore \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 185 'CreateStore' test.out

#- 186 GetCatalogDefinition
$CLI_EXE \
    --sn platform \
    --op GetCatalogDefinition \
    --namespace $AB_NAMESPACE \
    --catalogType 'CATEGORY' \
    > test.out 2>&1
eval_tap $? 186 'GetCatalogDefinition' test.out

#- 187 DownloadCSVTemplates
$CLI_EXE \
    --sn platform \
    --op DownloadCSVTemplates \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 187 'DownloadCSVTemplates' test.out

#- 188 ExportStoreByCSV
# body param: body
echo '{"catalogType": "SECTION", "fieldsToBeIncluded": ["xKknCU9g", "9l8XCxEg", "8t88TPgG"], "idsToBeExported": ["f6rViOLb", "KatcgBjV", "snD3lVUR"], "storeId": "u5YgtbzQ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ExportStoreByCSV \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 188 'ExportStoreByCSV' test.out

#- 189 ImportStore
eval_tap 0 189 'ImportStore # SKIP deprecated' test.out

#- 190 GetPublishedStore
$CLI_EXE \
    --sn platform \
    --op GetPublishedStore \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 190 'GetPublishedStore' test.out

#- 191 DeletePublishedStore
$CLI_EXE \
    --sn platform \
    --op DeletePublishedStore \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 191 'DeletePublishedStore' test.out

#- 192 GetPublishedStoreBackup
$CLI_EXE \
    --sn platform \
    --op GetPublishedStoreBackup \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 192 'GetPublishedStoreBackup' test.out

#- 193 RollbackPublishedStore
$CLI_EXE \
    --sn platform \
    --op RollbackPublishedStore \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 193 'RollbackPublishedStore' test.out

#- 194 GetStore
$CLI_EXE \
    --sn platform \
    --op GetStore \
    --namespace $AB_NAMESPACE \
    --storeId 'mlKWie6b' \
    > test.out 2>&1
eval_tap $? 194 'GetStore' test.out

#- 195 UpdateStore
# body param: body
echo '{"defaultLanguage": "Ex90ARxR", "defaultRegion": "rOtLBGiv", "description": "kEAdxR5F", "supportedLanguages": ["zv4mB9vd", "dnNnEljL", "nzbfkP3P"], "supportedRegions": ["R3IMFHFo", "fGsiIBes", "YqJOzmji"], "title": "WIs2qGAm"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateStore \
    --namespace $AB_NAMESPACE \
    --storeId '0JX8Eiof' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 195 'UpdateStore' test.out

#- 196 DeleteStore
$CLI_EXE \
    --sn platform \
    --op DeleteStore \
    --namespace $AB_NAMESPACE \
    --storeId '6ofr4AH1' \
    > test.out 2>&1
eval_tap $? 196 'DeleteStore' test.out

#- 197 QueryChanges
$CLI_EXE \
    --sn platform \
    --op QueryChanges \
    --namespace $AB_NAMESPACE \
    --storeId 'epvpH2iq' \
    --action 'CREATE' \
    --itemSku 'bDpCBf24' \
    --itemType 'CODE' \
    --limit '99' \
    --offset '9' \
    --selected 'false' \
    --sortBy '["createdAt:asc", "createdAt"]' \
    --status 'UNPUBLISHED' \
    --type 'ITEM' \
    --updatedAtEnd 'arpeCS65' \
    --updatedAtStart 'FmzjozL6' \
    --withTotal 'false' \
    > test.out 2>&1
eval_tap $? 197 'QueryChanges' test.out

#- 198 PublishAll
$CLI_EXE \
    --sn platform \
    --op PublishAll \
    --namespace $AB_NAMESPACE \
    --storeId 'jwUYauY4' \
    > test.out 2>&1
eval_tap $? 198 'PublishAll' test.out

#- 199 PublishSelected
$CLI_EXE \
    --sn platform \
    --op PublishSelected \
    --namespace $AB_NAMESPACE \
    --storeId 'ch7nfqWm' \
    > test.out 2>&1
eval_tap $? 199 'PublishSelected' test.out

#- 200 SelectAllRecords
$CLI_EXE \
    --sn platform \
    --op SelectAllRecords \
    --namespace $AB_NAMESPACE \
    --storeId 'pOZ5a8mt' \
    > test.out 2>&1
eval_tap $? 200 'SelectAllRecords' test.out

#- 201 SelectAllRecordsByCriteria
$CLI_EXE \
    --sn platform \
    --op SelectAllRecordsByCriteria \
    --namespace $AB_NAMESPACE \
    --storeId '6HyMe7IQ' \
    --action 'CREATE' \
    --itemSku 'rReI6plv' \
    --itemType 'MEDIA' \
    --selected 'true' \
    --type 'STORE' \
    --updatedAtEnd 'gnjXUyxb' \
    --updatedAtStart '5rO6uQyU' \
    > test.out 2>&1
eval_tap $? 201 'SelectAllRecordsByCriteria' test.out

#- 202 GetStatistic
$CLI_EXE \
    --sn platform \
    --op GetStatistic \
    --namespace $AB_NAMESPACE \
    --storeId 'tPlWX0Xg' \
    --action 'UPDATE' \
    --itemSku 'snbTq62p' \
    --itemType 'BUNDLE' \
    --type 'STORE' \
    --updatedAtEnd 'sb3QysXy' \
    --updatedAtStart 'xk3T4nM2' \
    > test.out 2>&1
eval_tap $? 202 'GetStatistic' test.out

#- 203 UnselectAllRecords
$CLI_EXE \
    --sn platform \
    --op UnselectAllRecords \
    --namespace $AB_NAMESPACE \
    --storeId 'to53XkFH' \
    > test.out 2>&1
eval_tap $? 203 'UnselectAllRecords' test.out

#- 204 SelectRecord
$CLI_EXE \
    --sn platform \
    --op SelectRecord \
    --changeId 'TiFJ4n5D' \
    --namespace $AB_NAMESPACE \
    --storeId '6tAhAPJy' \
    > test.out 2>&1
eval_tap $? 204 'SelectRecord' test.out

#- 205 UnselectRecord
$CLI_EXE \
    --sn platform \
    --op UnselectRecord \
    --changeId 'bONP1Cz8' \
    --namespace $AB_NAMESPACE \
    --storeId 'tZQubzmv' \
    > test.out 2>&1
eval_tap $? 205 'UnselectRecord' test.out

#- 206 CloneStore
$CLI_EXE \
    --sn platform \
    --op CloneStore \
    --namespace $AB_NAMESPACE \
    --storeId 'g5ZDo4VQ' \
    --targetStoreId 'hrUVyrUD' \
    > test.out 2>&1
eval_tap $? 206 'CloneStore' test.out

#- 207 ExportStore
eval_tap 0 207 'ExportStore # SKIP deprecated' test.out

#- 208 QueryImportHistory
$CLI_EXE \
    --sn platform \
    --op QueryImportHistory \
    --namespace $AB_NAMESPACE \
    --storeId 'MLVjEfOu' \
    --end 'sXsTbsne' \
    --limit '35' \
    --offset '98' \
    --sortBy '0hzZWb2l' \
    --start '4TXifWSo' \
    --success 'true' \
    > test.out 2>&1
eval_tap $? 208 'QueryImportHistory' test.out

#- 209 ImportStoreByCSV
# form data upload: category
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
# form data upload: display
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
# form data upload: item
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
# form data upload: section
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op ImportStoreByCSV \
    --namespace $AB_NAMESPACE \
    --storeId '9cCznf46' \
    --upload category $TEMP_FILE_UPLOAD \
    --upload display $TEMP_FILE_UPLOAD \
    --upload item $TEMP_FILE_UPLOAD \
    --notes 'PVyBxbOA' \
    --upload section $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 209 'ImportStoreByCSV' test.out

#- 210 QuerySubscriptions
$CLI_EXE \
    --sn platform \
    --op QuerySubscriptions \
    --namespace $AB_NAMESPACE \
    --chargeStatus 'CHARGED' \
    --itemId 'EVpwo6k7' \
    --limit '34' \
    --offset '72' \
    --sku 'oRoBVKdM' \
    --status 'INIT' \
    --subscribedBy 'PLATFORM' \
    --userId 'Dw5eV8wr' \
    > test.out 2>&1
eval_tap $? 210 'QuerySubscriptions' test.out

#- 211 RecurringChargeSubscription
$CLI_EXE \
    --sn platform \
    --op RecurringChargeSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'c5N1I1Ua' \
    > test.out 2>&1
eval_tap $? 211 'RecurringChargeSubscription' test.out

#- 212 GetTicketDynamic
$CLI_EXE \
    --sn platform \
    --op GetTicketDynamic \
    --boothName 'Q7qZkDJo' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 212 'GetTicketDynamic' test.out

#- 213 DecreaseTicketSale
# body param: body
echo '{"orderNo": "xbXVtKLJ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op DecreaseTicketSale \
    --boothName 's8QUJwI0' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 213 'DecreaseTicketSale' test.out

#- 214 GetTicketBoothID
$CLI_EXE \
    --sn platform \
    --op GetTicketBoothID \
    --boothName 'atFHV5DB' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 214 'GetTicketBoothID' test.out

#- 215 IncreaseTicketSale
# body param: body
echo '{"count": 80, "orderNo": "ONXfYpuB"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op IncreaseTicketSale \
    --boothName '8K39My8h' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 215 'IncreaseTicketSale' test.out

#- 216 Commit
# body param: body
echo '{"actions": [{"operations": [{"creditPayload": {"balanceOrigin": "IOS", "count": 8, "currencyCode": "xWhaLRzp", "expireAt": "1986-08-30T00:00:00Z"}, "debitPayload": {"count": 97, "currencyCode": "5a7lssLt", "walletPlatform": "Nintendo"}, "fulFillItemPayload": {"count": 4, "entitlementCollectionId": "M6K8ncHu", "entitlementOrigin": "Nintendo", "itemIdentity": "dTxeXBfw", "itemIdentityType": "ITEM_SKU"}, "revokeEntitlementPayload": {"count": 20, "entitlementId": "dU3iSWW5"}, "type": "CREDIT_WALLET"}, {"creditPayload": {"balanceOrigin": "Steam", "count": 10, "currencyCode": "WPcLvynf", "expireAt": "1997-10-15T00:00:00Z"}, "debitPayload": {"count": 36, "currencyCode": "830PDTSE", "walletPlatform": "Epic"}, "fulFillItemPayload": {"count": 88, "entitlementCollectionId": "bB1KzCdu", "entitlementOrigin": "Nintendo", "itemIdentity": "dDzb5T0G", "itemIdentityType": "ITEM_ID"}, "revokeEntitlementPayload": {"count": 41, "entitlementId": "8u9kZofX"}, "type": "REVOKE_ENTITLEMENT"}, {"creditPayload": {"balanceOrigin": "Other", "count": 12, "currencyCode": "XZnTVp8J", "expireAt": "1972-12-30T00:00:00Z"}, "debitPayload": {"count": 81, "currencyCode": "rIknwTFu", "walletPlatform": "IOS"}, "fulFillItemPayload": {"count": 7, "entitlementCollectionId": "WcRdjqnZ", "entitlementOrigin": "Xbox", "itemIdentity": "JnQ1OAoM", "itemIdentityType": "ITEM_ID"}, "revokeEntitlementPayload": {"count": 49, "entitlementId": "hIRph3kG"}, "type": "FULFILL_ITEM"}], "userId": "GN4ciUPU"}, {"operations": [{"creditPayload": {"balanceOrigin": "Epic", "count": 25, "currencyCode": "o6NIwRot", "expireAt": "1995-06-12T00:00:00Z"}, "debitPayload": {"count": 14, "currencyCode": "ZXCAbaHb", "walletPlatform": "Nintendo"}, "fulFillItemPayload": {"count": 25, "entitlementCollectionId": "ZeQ6Venc", "entitlementOrigin": "Steam", "itemIdentity": "qBl3Gvg8", "itemIdentityType": "ITEM_SKU"}, "revokeEntitlementPayload": {"count": 76, "entitlementId": "oQqME74f"}, "type": "CREDIT_WALLET"}, {"creditPayload": {"balanceOrigin": "IOS", "count": 92, "currencyCode": "XkLNiXNN", "expireAt": "1995-02-03T00:00:00Z"}, "debitPayload": {"count": 92, "currencyCode": "W5mRqfOX", "walletPlatform": "Other"}, "fulFillItemPayload": {"count": 100, "entitlementCollectionId": "W1exn3Of", "entitlementOrigin": "Steam", "itemIdentity": "ymWN6pu2", "itemIdentityType": "ITEM_ID"}, "revokeEntitlementPayload": {"count": 16, "entitlementId": "lWj9YAVo"}, "type": "FULFILL_ITEM"}, {"creditPayload": {"balanceOrigin": "Other", "count": 81, "currencyCode": "k1jnqung", "expireAt": "1978-08-07T00:00:00Z"}, "debitPayload": {"count": 43, "currencyCode": "enM78OhZ", "walletPlatform": "GooglePlay"}, "fulFillItemPayload": {"count": 92, "entitlementCollectionId": "hJxXnriG", "entitlementOrigin": "System", "itemIdentity": "MUfwqj6J", "itemIdentityType": "ITEM_ID"}, "revokeEntitlementPayload": {"count": 88, "entitlementId": "gpH35412"}, "type": "CREDIT_WALLET"}], "userId": "HODrkqpy"}, {"operations": [{"creditPayload": {"balanceOrigin": "Epic", "count": 91, "currencyCode": "kDucXTCW", "expireAt": "1971-08-23T00:00:00Z"}, "debitPayload": {"count": 36, "currencyCode": "NWO8mheY", "walletPlatform": "Nintendo"}, "fulFillItemPayload": {"count": 11, "entitlementCollectionId": "IRaHQgLS", "entitlementOrigin": "Nintendo", "itemIdentity": "LURLsETv", "itemIdentityType": "ITEM_ID"}, "revokeEntitlementPayload": {"count": 95, "entitlementId": "GwfH1aXr"}, "type": "FULFILL_ITEM"}, {"creditPayload": {"balanceOrigin": "Steam", "count": 54, "currencyCode": "2f0loA6r", "expireAt": "1992-07-10T00:00:00Z"}, "debitPayload": {"count": 8, "currencyCode": "PDTV4abu", "walletPlatform": "Epic"}, "fulFillItemPayload": {"count": 59, "entitlementCollectionId": "F7ktKAuS", "entitlementOrigin": "Xbox", "itemIdentity": "YV0mySYH", "itemIdentityType": "ITEM_ID"}, "revokeEntitlementPayload": {"count": 80, "entitlementId": "SyUMsq5C"}, "type": "CREDIT_WALLET"}, {"creditPayload": {"balanceOrigin": "Xbox", "count": 90, "currencyCode": "NZb16nQY", "expireAt": "1986-05-04T00:00:00Z"}, "debitPayload": {"count": 9, "currencyCode": "WdbRER0T", "walletPlatform": "Xbox"}, "fulFillItemPayload": {"count": 23, "entitlementCollectionId": "VUDYnvIN", "entitlementOrigin": "IOS", "itemIdentity": "tirKmbhw", "itemIdentityType": "ITEM_SKU"}, "revokeEntitlementPayload": {"count": 100, "entitlementId": "SrlO28AA"}, "type": "FULFILL_ITEM"}], "userId": "vG8jOcKQ"}], "metadata": {"eYsM7tMA": {}, "5z17OZGM": {}, "bsdMXKpa": {}}, "needPreCheck": true, "transactionId": "5Qv38V4q", "type": "YdEnhF8e"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op Commit \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 216 'Commit' test.out

#- 217 GetTradeHistoryByCriteria
$CLI_EXE \
    --sn platform \
    --op GetTradeHistoryByCriteria \
    --namespace $AB_NAMESPACE \
    --limit '11' \
    --offset '57' \
    --status 'FAILED' \
    --type 'K9FKJ9XF' \
    --userId 'jGFPClpv' \
    > test.out 2>&1
eval_tap $? 217 'GetTradeHistoryByCriteria' test.out

#- 218 GetTradeHistoryByTransactionId
$CLI_EXE \
    --sn platform \
    --op GetTradeHistoryByTransactionId \
    --namespace $AB_NAMESPACE \
    --transactionId 'sgXQgCKc' \
    > test.out 2>&1
eval_tap $? 218 'GetTradeHistoryByTransactionId' test.out

#- 219 UnlockSteamUserAchievement
# body param: body
echo '{"achievements": [{"id": "thkKNnEX", "value": 91}, {"id": "88TgEoLE", "value": 80}, {"id": "9jILTIi1", "value": 85}], "steamUserId": "t89FRcSC"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UnlockSteamUserAchievement \
    --namespace $AB_NAMESPACE \
    --userId 'z1BrA7uP' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 219 'UnlockSteamUserAchievement' test.out

#- 220 GetXblUserAchievements
$CLI_EXE \
    --sn platform \
    --op GetXblUserAchievements \
    --namespace $AB_NAMESPACE \
    --userId '2LrSKU9M' \
    --xboxUserId '3GlC5LwH' \
    > test.out 2>&1
eval_tap $? 220 'GetXblUserAchievements' test.out

#- 221 UpdateXblUserAchievement
# body param: body
echo '{"achievements": [{"id": "LoXr0Tyx", "percentComplete": 6}, {"id": "R88hnZQ8", "percentComplete": 48}, {"id": "F1YKeqrh", "percentComplete": 5}], "serviceConfigId": "f3mJCgtX", "titleId": "ZJslnVqD", "xboxUserId": "cpRMeNR2"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXblUserAchievement \
    --namespace $AB_NAMESPACE \
    --userId 'OvLknjHl' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 221 'UpdateXblUserAchievement' test.out

#- 222 AnonymizeCampaign
$CLI_EXE \
    --sn platform \
    --op AnonymizeCampaign \
    --namespace $AB_NAMESPACE \
    --userId 'wOFCNUwc' \
    > test.out 2>&1
eval_tap $? 222 'AnonymizeCampaign' test.out

#- 223 AnonymizeEntitlement
$CLI_EXE \
    --sn platform \
    --op AnonymizeEntitlement \
    --namespace $AB_NAMESPACE \
    --userId '6O5oB9Ym' \
    > test.out 2>&1
eval_tap $? 223 'AnonymizeEntitlement' test.out

#- 224 AnonymizeFulfillment
$CLI_EXE \
    --sn platform \
    --op AnonymizeFulfillment \
    --namespace $AB_NAMESPACE \
    --userId 'EcJUYOxD' \
    > test.out 2>&1
eval_tap $? 224 'AnonymizeFulfillment' test.out

#- 225 AnonymizeIntegration
$CLI_EXE \
    --sn platform \
    --op AnonymizeIntegration \
    --namespace $AB_NAMESPACE \
    --userId 'KyIiKIiO' \
    > test.out 2>&1
eval_tap $? 225 'AnonymizeIntegration' test.out

#- 226 AnonymizeOrder
$CLI_EXE \
    --sn platform \
    --op AnonymizeOrder \
    --namespace $AB_NAMESPACE \
    --userId 'Sisrsdad' \
    > test.out 2>&1
eval_tap $? 226 'AnonymizeOrder' test.out

#- 227 AnonymizePayment
$CLI_EXE \
    --sn platform \
    --op AnonymizePayment \
    --namespace $AB_NAMESPACE \
    --userId 'z3YKMzZI' \
    > test.out 2>&1
eval_tap $? 227 'AnonymizePayment' test.out

#- 228 AnonymizeRevocation
$CLI_EXE \
    --sn platform \
    --op AnonymizeRevocation \
    --namespace $AB_NAMESPACE \
    --userId 'LGlfbWyS' \
    > test.out 2>&1
eval_tap $? 228 'AnonymizeRevocation' test.out

#- 229 AnonymizeSubscription
$CLI_EXE \
    --sn platform \
    --op AnonymizeSubscription \
    --namespace $AB_NAMESPACE \
    --userId 'nBY5TJuX' \
    > test.out 2>&1
eval_tap $? 229 'AnonymizeSubscription' test.out

#- 230 AnonymizeWallet
$CLI_EXE \
    --sn platform \
    --op AnonymizeWallet \
    --namespace $AB_NAMESPACE \
    --userId 'g3XNcKjx' \
    > test.out 2>&1
eval_tap $? 230 'AnonymizeWallet' test.out

#- 231 GetUserDLCByPlatform
$CLI_EXE \
    --sn platform \
    --op GetUserDLCByPlatform \
    --namespace $AB_NAMESPACE \
    --userId 'JIy3KC4G' \
    --type 'XBOX' \
    > test.out 2>&1
eval_tap $? 231 'GetUserDLCByPlatform' test.out

#- 232 GetUserDLC
$CLI_EXE \
    --sn platform \
    --op GetUserDLC \
    --namespace $AB_NAMESPACE \
    --userId 'Bvi1kzpJ' \
    --type 'PSN' \
    > test.out 2>&1
eval_tap $? 232 'GetUserDLC' test.out

#- 233 QueryUserEntitlements
$CLI_EXE \
    --sn platform \
    --op QueryUserEntitlements \
    --namespace $AB_NAMESPACE \
    --userId 'CQI1Twyw' \
    --activeOnly 'true' \
    --appType 'DLC' \
    --collectionId 'iGKltoEb' \
    --entitlementClazz 'LOOTBOX' \
    --entitlementName 'wHI0N7Nj' \
    --features '["Otzgjcvw", "3ghFzLHx", "YHw2DZgv"]' \
    --fuzzyMatchName 'true' \
    --itemId '["Vfrh69OG", "vv03WxWK", "22du1PaM"]' \
    --limit '16' \
    --offset '73' \
    --origin 'System' \
    > test.out 2>&1
eval_tap $? 233 'QueryUserEntitlements' test.out

#- 234 GrantUserEntitlement
# body param: body
echo '[{"collectionId": "RNyWuV2l", "endDate": "1995-01-04T00:00:00Z", "grantedCode": "bEjHBk1V", "itemId": "85JYD4ER", "itemNamespace": "Bap9OXUj", "language": "ei-Tdcl", "origin": "Playstation", "quantity": 79, "region": "C1A0nRq0", "source": "PROMOTION", "startDate": "1997-01-24T00:00:00Z", "storeId": "PfdIRhzv"}, {"collectionId": "PDdIudaN", "endDate": "1971-09-30T00:00:00Z", "grantedCode": "vUJNhCCH", "itemId": "45ovY5rm", "itemNamespace": "LFrGYHag", "language": "dbG_812", "origin": "Epic", "quantity": 31, "region": "y5D7EkEx", "source": "REDEEM_CODE", "startDate": "1976-03-12T00:00:00Z", "storeId": "g1O3HKQr"}, {"collectionId": "mimfsLKx", "endDate": "1994-09-06T00:00:00Z", "grantedCode": "lIgdvB4M", "itemId": "Eoc0Dm1I", "itemNamespace": "RTHAGVlJ", "language": "fMUI_UrPN", "origin": "IOS", "quantity": 26, "region": "OG6mXke6", "source": "ACHIEVEMENT", "startDate": "1980-08-30T00:00:00Z", "storeId": "tFiLAXNX"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op GrantUserEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'u8ebTFRJ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 234 'GrantUserEntitlement' test.out

#- 235 GetUserAppEntitlementByAppId
$CLI_EXE \
    --sn platform \
    --op GetUserAppEntitlementByAppId \
    --namespace $AB_NAMESPACE \
    --userId 'o3MUZTlT' \
    --activeOnly 'true' \
    --appId 'oHi4dt5x' \
    > test.out 2>&1
eval_tap $? 235 'GetUserAppEntitlementByAppId' test.out

#- 236 QueryUserEntitlementsByAppType
$CLI_EXE \
    --sn platform \
    --op QueryUserEntitlementsByAppType \
    --namespace $AB_NAMESPACE \
    --userId 'Lm7sDhlD' \
    --activeOnly 'false' \
    --limit '21' \
    --offset '13' \
    --appType 'DLC' \
    > test.out 2>&1
eval_tap $? 236 'QueryUserEntitlementsByAppType' test.out

#- 237 GetUserEntitlementByItemId
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'c5fREFi3' \
    --activeOnly 'true' \
    --entitlementClazz 'CODE' \
    --platform 'xWPI3tde' \
    --itemId '4bgsGhdg' \
    > test.out 2>&1
eval_tap $? 237 'GetUserEntitlementByItemId' test.out

#- 238 GetUserActiveEntitlementsByItemIds
$CLI_EXE \
    --sn platform \
    --op GetUserActiveEntitlementsByItemIds \
    --namespace $AB_NAMESPACE \
    --userId 'qUSDnjAx' \
    --ids '["EHffuRYv", "MlQfjsw6", "UVc4SjqF"]' \
    --platform 'ahaKBCEW' \
    > test.out 2>&1
eval_tap $? 238 'GetUserActiveEntitlementsByItemIds' test.out

#- 239 GetUserEntitlementBySku
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementBySku \
    --namespace $AB_NAMESPACE \
    --userId 'QlyhQP2K' \
    --activeOnly 'true' \
    --entitlementClazz 'ENTITLEMENT' \
    --platform '5w9YVDUk' \
    --sku 's2tHaGhD' \
    > test.out 2>&1
eval_tap $? 239 'GetUserEntitlementBySku' test.out

#- 240 ExistsAnyUserActiveEntitlement
$CLI_EXE \
    --sn platform \
    --op ExistsAnyUserActiveEntitlement \
    --namespace $AB_NAMESPACE \
    --userId '9I7cV909' \
    --appIds '["WV86uYRP", "RZz7hnF0", "8oVbH3zC"]' \
    --itemIds '["Zr0wMjOS", "SKEhRBcV", "Ey5slzmT"]' \
    --platform '9ibRjVq8' \
    --skus '["7mNERJ6z", "mW1PWu7n", "JVJkAuiI"]' \
    > test.out 2>&1
eval_tap $? 240 'ExistsAnyUserActiveEntitlement' test.out

#- 241 ExistsAnyUserActiveEntitlementByItemIds
$CLI_EXE \
    --sn platform \
    --op ExistsAnyUserActiveEntitlementByItemIds \
    --namespace $AB_NAMESPACE \
    --userId 'EAphYyrp' \
    --platform 'oI2qHGmq' \
    --itemIds '["yrn4YNGv", "wXmnIouH", "xGnVmKk8"]' \
    > test.out 2>&1
eval_tap $? 241 'ExistsAnyUserActiveEntitlementByItemIds' test.out

#- 242 GetUserAppEntitlementOwnershipByAppId
$CLI_EXE \
    --sn platform \
    --op GetUserAppEntitlementOwnershipByAppId \
    --namespace $AB_NAMESPACE \
    --userId 'SkZ9MiFp' \
    --appId 'scwy9UPe' \
    > test.out 2>&1
eval_tap $? 242 'GetUserAppEntitlementOwnershipByAppId' test.out

#- 243 GetUserEntitlementOwnershipByItemId
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementOwnershipByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'DBXKTliX' \
    --entitlementClazz 'ENTITLEMENT' \
    --platform 'upCvOCS9' \
    --itemId 'w6M3zxIV' \
    > test.out 2>&1
eval_tap $? 243 'GetUserEntitlementOwnershipByItemId' test.out

#- 244 GetUserEntitlementOwnershipByItemIds
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementOwnershipByItemIds \
    --namespace $AB_NAMESPACE \
    --userId 'x0pRz9Rz' \
    --ids '["UaSnZiVq", "CQwE0c1Y", "1TUKLlyR"]' \
    --platform 's2diOnbr' \
    > test.out 2>&1
eval_tap $? 244 'GetUserEntitlementOwnershipByItemIds' test.out

#- 245 GetUserEntitlementOwnershipBySku
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementOwnershipBySku \
    --namespace $AB_NAMESPACE \
    --userId 'YRL3Tv7u' \
    --entitlementClazz 'APP' \
    --platform 'ZsoQPNJz' \
    --sku 'jfvKO4cb' \
    > test.out 2>&1
eval_tap $? 245 'GetUserEntitlementOwnershipBySku' test.out

#- 246 RevokeAllEntitlements
$CLI_EXE \
    --sn platform \
    --op RevokeAllEntitlements \
    --namespace $AB_NAMESPACE \
    --userId 'fvjCnmnq' \
    > test.out 2>&1
eval_tap $? 246 'RevokeAllEntitlements' test.out

#- 247 RevokeUserEntitlements
$CLI_EXE \
    --sn platform \
    --op RevokeUserEntitlements \
    --namespace $AB_NAMESPACE \
    --userId 'zthPqkQf' \
    --entitlementIds '5PxJvwrr' \
    > test.out 2>&1
eval_tap $? 247 'RevokeUserEntitlements' test.out

#- 248 GetUserEntitlement
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlement \
    --entitlementId 'wqAexd3B' \
    --namespace $AB_NAMESPACE \
    --userId 'uE51bWpr' \
    > test.out 2>&1
eval_tap $? 248 'GetUserEntitlement' test.out

#- 249 UpdateUserEntitlement
# body param: body
echo '{"collectionId": "xPRnCa6Z", "endDate": "1978-01-22T00:00:00Z", "nullFieldList": ["mwPQlzNR", "PrUkeOIQ", "5JeHHb5H"], "origin": "Steam", "reason": "im4ss9m5", "startDate": "1995-02-10T00:00:00Z", "status": "INACTIVE", "useCount": 75}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateUserEntitlement \
    --entitlementId 'XFzCujIj' \
    --namespace $AB_NAMESPACE \
    --userId 'DggSEbCb' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 249 'UpdateUserEntitlement' test.out

#- 250 ConsumeUserEntitlement
# body param: body
echo '{"options": ["9RwkbGFk", "sRiXSKif", "qE85mlaQ"], "platform": "KiOHjUwb", "requestId": "uXpNheYp", "useCount": 55}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ConsumeUserEntitlement \
    --entitlementId 'G8BYx2T6' \
    --namespace $AB_NAMESPACE \
    --userId 'BkdEw1DU' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 250 'ConsumeUserEntitlement' test.out

#- 251 DisableUserEntitlement
$CLI_EXE \
    --sn platform \
    --op DisableUserEntitlement \
    --entitlementId 'FC8GNXPw' \
    --namespace $AB_NAMESPACE \
    --userId 'nKP3wn1y' \
    > test.out 2>&1
eval_tap $? 251 'DisableUserEntitlement' test.out

#- 252 EnableUserEntitlement
$CLI_EXE \
    --sn platform \
    --op EnableUserEntitlement \
    --entitlementId 'Mv7O45oL' \
    --namespace $AB_NAMESPACE \
    --userId 'ps3prN1n' \
    > test.out 2>&1
eval_tap $? 252 'EnableUserEntitlement' test.out

#- 253 GetUserEntitlementHistories
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementHistories \
    --entitlementId 'xBZyrLtb' \
    --namespace $AB_NAMESPACE \
    --userId 'yuw3uLJL' \
    > test.out 2>&1
eval_tap $? 253 'GetUserEntitlementHistories' test.out

#- 254 RevokeUserEntitlement
$CLI_EXE \
    --sn platform \
    --op RevokeUserEntitlement \
    --entitlementId 'k7ekEoLy' \
    --namespace $AB_NAMESPACE \
    --userId 'yE6gSMGW' \
    > test.out 2>&1
eval_tap $? 254 'RevokeUserEntitlement' test.out

#- 255 RevokeUserEntitlementByUseCount
# body param: body
echo '{"reason": "cMdMNcXY", "useCount": 35}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RevokeUserEntitlementByUseCount \
    --entitlementId 'mSRMy8RZ' \
    --namespace $AB_NAMESPACE \
    --userId 'Ctp4xeYg' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 255 'RevokeUserEntitlementByUseCount' test.out

#- 256 PreCheckRevokeUserEntitlementByUseCount
$CLI_EXE \
    --sn platform \
    --op PreCheckRevokeUserEntitlementByUseCount \
    --entitlementId '8Jb59BOG' \
    --namespace $AB_NAMESPACE \
    --userId 'iaa4ktoV' \
    --quantity '92' \
    > test.out 2>&1
eval_tap $? 256 'PreCheckRevokeUserEntitlementByUseCount' test.out

#- 257 RevokeUseCount
eval_tap 0 257 'RevokeUseCount # SKIP deprecated' test.out

#- 258 SellUserEntitlement
# body param: body
echo '{"platform": "1jRDOfxP", "requestId": "UTt47M65", "useCount": 36}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SellUserEntitlement \
    --entitlementId 'JSkirUfI' \
    --namespace $AB_NAMESPACE \
    --userId 'Z8KWn9vT' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 258 'SellUserEntitlement' test.out

#- 259 FulfillItem
# body param: body
echo '{"duration": 19, "endDate": "1971-06-03T00:00:00Z", "entitlementCollectionId": "jO2em7Yc", "entitlementOrigin": "Epic", "itemId": "lUABoWP4", "itemSku": "PC0kpdhC", "language": "GWTmZ0dT", "metadata": {"BQwUWIMr": {}, "dEeahIrV": {}, "rT4PRTG2": {}}, "order": {"currency": {"currencyCode": "k1rcDL9C", "currencySymbol": "Ilt51Vid", "currencyType": "VIRTUAL", "decimals": 14, "namespace": "UKS6OlY1"}, "ext": {"nXPJdIIV": {}, "WxzBpsRj": {}, "HIB5NGqO": {}}, "free": true}, "orderNo": "kFShx2dP", "origin": "Steam", "overrideBundleItemQty": {"5vmI5TUZ": 99, "PooPpRYx": 46, "gxMjQPb8": 87}, "quantity": 78, "region": "Ep5jck6f", "source": "DLC", "startDate": "1982-08-29T00:00:00Z", "storeId": "YXWrvJ1c"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op FulfillItem \
    --namespace $AB_NAMESPACE \
    --userId 'zfzDtaXA' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 259 'FulfillItem' test.out

#- 260 RedeemCode
# body param: body
echo '{"code": "TsALF9HX", "language": "dm_Os", "region": "UN90qs69"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RedeemCode \
    --namespace $AB_NAMESPACE \
    --userId 'VkAwZ1BH' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 260 'RedeemCode' test.out

#- 261 PreCheckFulfillItem
# body param: body
echo '{"itemId": "62FKE1NG", "itemSku": "VStfT40c", "quantity": 96}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PreCheckFulfillItem \
    --namespace $AB_NAMESPACE \
    --userId 'FvYZNSqk' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 261 'PreCheckFulfillItem' test.out

#- 262 FulfillRewards
# body param: body
echo '{"entitlementCollectionId": "ukFidvUs", "entitlementOrigin": "Playstation", "metadata": {"wSBh2KGi": {}, "fUJZlUxn": {}, "InwIyGDN": {}}, "origin": "Playstation", "rewards": [{"currency": {"currencyCode": "GCEX7F9k", "namespace": "5nZ5UowO"}, "item": {"itemId": "XQoSVZoZ", "itemSku": "II2i9HNK", "itemType": "Q2pNTOzl"}, "quantity": 14, "type": "CURRENCY"}, {"currency": {"currencyCode": "s24DfDYb", "namespace": "l25kiZS7"}, "item": {"itemId": "kRky9niR", "itemSku": "K3gR8lUE", "itemType": "Nijf6rKy"}, "quantity": 43, "type": "ITEM"}, {"currency": {"currencyCode": "u1WL9gKw", "namespace": "vLvvnWI7"}, "item": {"itemId": "KdMsDS7l", "itemSku": "aFWlJKRa", "itemType": "XB5rfj3S"}, "quantity": 4, "type": "CURRENCY"}], "source": "PROMOTION", "transactionId": "BSMKQbeH"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op FulfillRewards \
    --namespace $AB_NAMESPACE \
    --userId 'CFCbCI9Q' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 262 'FulfillRewards' test.out

#- 263 QueryUserIAPOrders
$CLI_EXE \
    --sn platform \
    --op QueryUserIAPOrders \
    --namespace $AB_NAMESPACE \
    --userId 'Mn56e3ni' \
    --endTime 'BxEDXokB' \
    --limit '58' \
    --offset '39' \
    --productId 'LpUfjBOn' \
    --startTime 'OIuEvTBd' \
    --status 'VERIFIED' \
    --type 'APPLE' \
    > test.out 2>&1
eval_tap $? 263 'QueryUserIAPOrders' test.out

#- 264 QueryAllUserIAPOrders
$CLI_EXE \
    --sn platform \
    --op QueryAllUserIAPOrders \
    --namespace $AB_NAMESPACE \
    --userId 'vY6FrcPP' \
    > test.out 2>&1
eval_tap $? 264 'QueryAllUserIAPOrders' test.out

#- 265 QueryUserIAPConsumeHistory
$CLI_EXE \
    --sn platform \
    --op QueryUserIAPConsumeHistory \
    --namespace $AB_NAMESPACE \
    --userId 'XPlXm9h2' \
    --endTime 'zuQf54HL' \
    --limit '12' \
    --offset '5' \
    --startTime 'UaupwdDh' \
    --status 'PENDING' \
    --type 'GOOGLE' \
    > test.out 2>&1
eval_tap $? 265 'QueryUserIAPConsumeHistory' test.out

#- 266 MockFulfillIAPItem
# body param: body
echo '{"itemIdentityType": "ITEM_SKU", "language": "SAm-VgOP_426", "productId": "ODrB31gv", "region": "3ngqfDPp", "transactionId": "mzojOmv4", "type": "XBOX"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op MockFulfillIAPItem \
    --namespace $AB_NAMESPACE \
    --userId '0NrMes80' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 266 'MockFulfillIAPItem' test.out

#- 267 QueryUserOrders
$CLI_EXE \
    --sn platform \
    --op QueryUserOrders \
    --namespace $AB_NAMESPACE \
    --userId 'unZX1dqd' \
    --itemId '5gmo1epG' \
    --limit '85' \
    --offset '59' \
    --status 'INIT' \
    > test.out 2>&1
eval_tap $? 267 'QueryUserOrders' test.out

#- 268 AdminCreateUserOrder
# body param: body
echo '{"currencyCode": "l1GW04ba", "currencyNamespace": "ZkbjCLfC", "discountedPrice": 73, "entitlementPlatform": "Nintendo", "ext": {"phI2vUQi": {}, "Vu9XUxTW": {}, "SQMDwLLn": {}}, "itemId": "wYOnPldC", "language": "dx5H5PfB", "options": {"skipPriceValidation": true}, "platform": "Playstation", "price": 37, "quantity": 83, "region": "IU50Lej7", "returnUrl": "yxDOHCXD", "sandbox": true, "sectionId": "ZqgSuUDA"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op AdminCreateUserOrder \
    --namespace $AB_NAMESPACE \
    --userId 'V37zDnDf' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 268 'AdminCreateUserOrder' test.out

#- 269 CountOfPurchasedItem
$CLI_EXE \
    --sn platform \
    --op CountOfPurchasedItem \
    --namespace $AB_NAMESPACE \
    --userId 'c2eWjK7a' \
    --itemId 'XWH1o4SS' \
    > test.out 2>&1
eval_tap $? 269 'CountOfPurchasedItem' test.out

#- 270 GetUserOrder
$CLI_EXE \
    --sn platform \
    --op GetUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'UUF1gO9n' \
    --userId '1N7f6BYk' \
    > test.out 2>&1
eval_tap $? 270 'GetUserOrder' test.out

#- 271 UpdateUserOrderStatus
# body param: body
echo '{"status": "FULFILL_FAILED", "statusReason": "8Owh1O6n"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateUserOrderStatus \
    --namespace $AB_NAMESPACE \
    --orderNo 'EGjsUMjJ' \
    --userId 'ixkVX5oB' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 271 'UpdateUserOrderStatus' test.out

#- 272 FulfillUserOrder
$CLI_EXE \
    --sn platform \
    --op FulfillUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'WAQgwO90' \
    --userId 'Qir8gTxL' \
    > test.out 2>&1
eval_tap $? 272 'FulfillUserOrder' test.out

#- 273 GetUserOrderGrant
$CLI_EXE \
    --sn platform \
    --op GetUserOrderGrant \
    --namespace $AB_NAMESPACE \
    --orderNo 'MTSnIX54' \
    --userId 'JHiNiwZ0' \
    > test.out 2>&1
eval_tap $? 273 'GetUserOrderGrant' test.out

#- 274 GetUserOrderHistories
$CLI_EXE \
    --sn platform \
    --op GetUserOrderHistories \
    --namespace $AB_NAMESPACE \
    --orderNo 'oxaExWh7' \
    --userId 'Kylk1fPt' \
    > test.out 2>&1
eval_tap $? 274 'GetUserOrderHistories' test.out

#- 275 ProcessUserOrderNotification
# body param: body
echo '{"additionalData": {"cardSummary": "t3caejHe"}, "authorisedTime": "1993-07-20T00:00:00Z", "chargebackReversedTime": "1974-03-01T00:00:00Z", "chargebackTime": "1972-09-11T00:00:00Z", "chargedTime": "1975-08-12T00:00:00Z", "createdTime": "1975-07-31T00:00:00Z", "currency": {"currencyCode": "AtFpcI6b", "currencySymbol": "ptgWHGxb", "currencyType": "REAL", "decimals": 48, "namespace": "gxlewYsF"}, "customParameters": {"tLFEkejr": {}, "KvSoG4DE": {}, "HfAJz9t7": {}}, "extOrderNo": "bkneKkXL", "extTxId": "E3mBCgWD", "extUserId": "KQosFNmG", "issuedAt": "1985-04-16T00:00:00Z", "metadata": {"BbSftL5R": "1AeSd8Kc", "ctiPIeTP": "K0fCen3D", "mYwiDF8C": "1XaQbtHF"}, "namespace": "cpFOaHP5", "nonceStr": "OyGKDqc9", "paymentMethod": "xaetFYdh", "paymentMethodFee": 53, "paymentOrderNo": "TBfXdzGd", "paymentProvider": "WALLET", "paymentProviderFee": 95, "paymentStationUrl": "7EJsQUOy", "price": 44, "refundedTime": "1993-07-19T00:00:00Z", "salesTax": 74, "sandbox": true, "sku": "2C4O5MvL", "status": "REFUND_FAILED", "statusReason": "PM0lMbHk", "subscriptionId": "TkXoS3Lz", "subtotalPrice": 16, "targetNamespace": "ietCiPZn", "targetUserId": "rCzMVXrH", "tax": 4, "totalPrice": 44, "totalTax": 44, "txEndTime": "1987-01-22T00:00:00Z", "type": "NoSN4c90", "userId": "iSId2fYi", "vat": 81}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ProcessUserOrderNotification \
    --namespace $AB_NAMESPACE \
    --orderNo 'u6xtuoxm' \
    --userId 'BaI3g2MF' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 275 'ProcessUserOrderNotification' test.out

#- 276 DownloadUserOrderReceipt
$CLI_EXE \
    --sn platform \
    --op DownloadUserOrderReceipt \
    --namespace $AB_NAMESPACE \
    --orderNo 'R5hQbYg2' \
    --userId 'Lzjxt8HQ' \
    > test.out 2>&1
eval_tap $? 276 'DownloadUserOrderReceipt' test.out

#- 277 CreateUserPaymentOrder
# body param: body
echo '{"currencyCode": "tEqILTZf", "currencyNamespace": "AxyL8Bub", "customParameters": {"irVsTOhc": {}, "juj950wo": {}, "eaSHVWhY": {}}, "description": "pWXNFMqz", "extOrderNo": "4dEp9hXk", "extUserId": "gJKPKpwy", "itemType": "EXTENSION", "language": "HVfW-Yywy-OI", "metadata": {"bFQjg8EW": "StfHAsVD", "MDNklZem": "oOdWqeEX", "vHsyThyJ": "bAR5adTU"}, "notifyUrl": "GEkTv2WQ", "omitNotification": false, "platform": "K9jbuGZE", "price": 79, "recurringPaymentOrderNo": "PI8B7vOC", "region": "gxlhvE8L", "returnUrl": "aLcS3HEr", "sandbox": true, "sku": "6PDCWN0c", "subscriptionId": "RDOZfkkZ", "title": "FJM123j4"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateUserPaymentOrder \
    --namespace $AB_NAMESPACE \
    --userId 'pltc6JIT' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 277 'CreateUserPaymentOrder' test.out

#- 278 RefundUserPaymentOrder
# body param: body
echo '{"description": "PXHNUER8"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RefundUserPaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'n9E5iksY' \
    --userId 'QcmxPdsv' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 278 'RefundUserPaymentOrder' test.out

#- 279 ApplyUserRedemption
# body param: body
echo '{"code": "bYdPIRqJ", "orderNo": "DsSidGvQ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ApplyUserRedemption \
    --namespace $AB_NAMESPACE \
    --userId 'f8mF8N9R' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 279 'ApplyUserRedemption' test.out

#- 280 DoRevocation
# body param: body
echo '{"meta": {"mkPEuI7m": {}, "BaHMJ2tp": {}, "nj7tei5c": {}}, "revokeEntries": [{"currency": {"balanceOrigin": "Steam", "currencyCode": "YxjwBpv4", "namespace": "WKxHKiMq"}, "entitlement": {"entitlementId": "6bmtarys"}, "item": {"entitlementOrigin": "Twitch", "itemIdentity": "rmR3HBDN", "itemIdentityType": "ITEM_ID", "origin": "Nintendo"}, "quantity": 0, "type": "ITEM"}, {"currency": {"balanceOrigin": "System", "currencyCode": "Q6hvhiK4", "namespace": "hhCE0vNK"}, "entitlement": {"entitlementId": "IS0Jl3JG"}, "item": {"entitlementOrigin": "Nintendo", "itemIdentity": "HhEKg09s", "itemIdentityType": "ITEM_ID", "origin": "System"}, "quantity": 33, "type": "ENTITLEMENT"}, {"currency": {"balanceOrigin": "Xbox", "currencyCode": "xnNaSLHc", "namespace": "JhBL48Nz"}, "entitlement": {"entitlementId": "0fAkApfa"}, "item": {"entitlementOrigin": "Epic", "itemIdentity": "b3GX0k0Z", "itemIdentityType": "ITEM_SKU", "origin": "System"}, "quantity": 18, "type": "ENTITLEMENT"}], "source": "IAP", "transactionId": "rgkSzqis"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op DoRevocation \
    --namespace $AB_NAMESPACE \
    --userId 'uAahJjSa' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 280 'DoRevocation' test.out

#- 281 RegisterXblSessions
# body param: body
echo '{"gameSessionId": "XvCmpOOM", "payload": {"6tMM4kr4": {}, "rfR1xbUU": {}, "XgDgE17n": {}}, "scid": "Jr5qexJL", "sessionTemplateName": "cBNjotq1"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RegisterXblSessions \
    --namespace $AB_NAMESPACE \
    --userId 'fXhI99wX' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 281 'RegisterXblSessions' test.out

#- 282 QueryUserSubscriptions
$CLI_EXE \
    --sn platform \
    --op QueryUserSubscriptions \
    --namespace $AB_NAMESPACE \
    --userId 'ipVcDayY' \
    --chargeStatus 'NEVER' \
    --itemId 'RVkUY7E3' \
    --limit '84' \
    --offset '89' \
    --sku '5RF9epHF' \
    --status 'ACTIVE' \
    --subscribedBy 'PLATFORM' \
    > test.out 2>&1
eval_tap $? 282 'QueryUserSubscriptions' test.out

#- 283 GetUserSubscriptionActivities
$CLI_EXE \
    --sn platform \
    --op GetUserSubscriptionActivities \
    --namespace $AB_NAMESPACE \
    --userId 'pLbWHelw' \
    --excludeSystem 'false' \
    --limit '43' \
    --offset '9' \
    --subscriptionId '3xKssIzV' \
    > test.out 2>&1
eval_tap $? 283 'GetUserSubscriptionActivities' test.out

#- 284 PlatformSubscribeSubscription
# body param: body
echo '{"grantDays": 33, "itemId": "pNsgPn9u", "language": "RCSyuqwI", "reason": "oiquJASp", "region": "rYoSOQeO", "source": "KPQHq9ZX"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PlatformSubscribeSubscription \
    --namespace $AB_NAMESPACE \
    --userId 'eFHL2bOD' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 284 'PlatformSubscribeSubscription' test.out

#- 285 CheckUserSubscriptionSubscribableByItemId
$CLI_EXE \
    --sn platform \
    --op CheckUserSubscriptionSubscribableByItemId \
    --namespace $AB_NAMESPACE \
    --userId '35lNqNN8' \
    --itemId 'bd1epyPX' \
    > test.out 2>&1
eval_tap $? 285 'CheckUserSubscriptionSubscribableByItemId' test.out

#- 286 GetUserSubscription
$CLI_EXE \
    --sn platform \
    --op GetUserSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId '3nyB0ihL' \
    --userId 'ur1IqXWA' \
    > test.out 2>&1
eval_tap $? 286 'GetUserSubscription' test.out

#- 287 DeleteUserSubscription
$CLI_EXE \
    --sn platform \
    --op DeleteUserSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'wsqdi4Ji' \
    --userId '0lMMA8UY' \
    > test.out 2>&1
eval_tap $? 287 'DeleteUserSubscription' test.out

#- 288 CancelSubscription
# body param: body
echo '{"immediate": false, "reason": "24f9hLeV"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CancelSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'XrtN4DQ9' \
    --userId 'hNxjKbYR' \
    --force 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 288 'CancelSubscription' test.out

#- 289 GrantDaysToSubscription
# body param: body
echo '{"grantDays": 46, "reason": "zGTSw12f"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op GrantDaysToSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'EOjl7Zgk' \
    --userId 'jv2F5Wsv' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 289 'GrantDaysToSubscription' test.out

#- 290 GetUserSubscriptionBillingHistories
$CLI_EXE \
    --sn platform \
    --op GetUserSubscriptionBillingHistories \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'Zh31Lq14' \
    --userId 'UwaUelOR' \
    --excludeFree 'true' \
    --limit '28' \
    --offset '72' \
    > test.out 2>&1
eval_tap $? 290 'GetUserSubscriptionBillingHistories' test.out

#- 291 ProcessUserSubscriptionNotification
# body param: body
echo '{"additionalData": {"cardSummary": "6RggBJXc"}, "authorisedTime": "1971-05-17T00:00:00Z", "chargebackReversedTime": "1991-11-22T00:00:00Z", "chargebackTime": "1980-06-02T00:00:00Z", "chargedTime": "1989-08-19T00:00:00Z", "createdTime": "1997-02-10T00:00:00Z", "currency": {"currencyCode": "vLd5gBnz", "currencySymbol": "hmrg3ieN", "currencyType": "VIRTUAL", "decimals": 11, "namespace": "QVE3SgPT"}, "customParameters": {"h5HSSUjL": {}, "bB6PBPxd": {}, "arZKlqs3": {}}, "extOrderNo": "sbVbFKeD", "extTxId": "IaHrXAC5", "extUserId": "bl6uC8IT", "issuedAt": "1988-04-13T00:00:00Z", "metadata": {"K78PdxX3": "PqCDhl5Y", "jQFX5rcE": "foIkKkqy", "JC6lNnzV": "izlVTqLJ"}, "namespace": "jwj9IwGe", "nonceStr": "SjtDI1jZ", "paymentMethod": "LZX5tyDP", "paymentMethodFee": 87, "paymentOrderNo": "GbLaBCDd", "paymentProvider": "WALLET", "paymentProviderFee": 76, "paymentStationUrl": "smCOkvss", "price": 85, "refundedTime": "1979-10-23T00:00:00Z", "salesTax": 19, "sandbox": false, "sku": "gQCFAZwe", "status": "REFUND_FAILED", "statusReason": "XMUAFphh", "subscriptionId": "oXtBn7PN", "subtotalPrice": 45, "targetNamespace": "te8PUpU8", "targetUserId": "bQSHzJj8", "tax": 79, "totalPrice": 10, "totalTax": 5, "txEndTime": "1997-12-04T00:00:00Z", "type": "MONlHeWL", "userId": "G4MoxCzg", "vat": 50}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ProcessUserSubscriptionNotification \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'ca2ega6A' \
    --userId 'XN3UGKHx' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 291 'ProcessUserSubscriptionNotification' test.out

#- 292 AcquireUserTicket
# body param: body
echo '{"count": 9, "orderNo": "SRpO0XUx"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op AcquireUserTicket \
    --boothName 'gLOfopAM' \
    --namespace $AB_NAMESPACE \
    --userId 'mvnypWwK' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 292 'AcquireUserTicket' test.out

#- 293 QueryUserCurrencyWallets
$CLI_EXE \
    --sn platform \
    --op QueryUserCurrencyWallets \
    --namespace $AB_NAMESPACE \
    --userId 'Wd4V0lcp' \
    > test.out 2>&1
eval_tap $? 293 'QueryUserCurrencyWallets' test.out

#- 294 DebitUserWalletByCurrencyCode
# body param: body
echo '{"allowOverdraft": true, "amount": 76, "balanceOrigin": "Steam", "balanceSource": "EXPIRATION", "metadata": {"azSFm0BH": {}, "rDOjV1YX": {}, "pbS5l2Ny": {}}, "reason": "lhVLJjEg"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op DebitUserWalletByCurrencyCode \
    --currencyCode 'MsaQHSGv' \
    --namespace $AB_NAMESPACE \
    --userId 'GTxadHwb' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 294 'DebitUserWalletByCurrencyCode' test.out

#- 295 ListUserCurrencyTransactions
$CLI_EXE \
    --sn platform \
    --op ListUserCurrencyTransactions \
    --currencyCode 'GmXtOV7V' \
    --namespace $AB_NAMESPACE \
    --userId 'IeKEqSS6' \
    --limit '50' \
    --offset '17' \
    > test.out 2>&1
eval_tap $? 295 'ListUserCurrencyTransactions' test.out

#- 296 CheckBalance
# body param: request
echo '{"amount": 73, "debitBalanceSource": "PAYMENT", "metadata": {"tYJK7Nuy": {}, "8O5n9cNy": {}, "WkEANges": {}}, "reason": "2jTEKOTr", "walletPlatform": "Xbox"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CheckBalance \
    --currencyCode 'aJdl5F13' \
    --namespace $AB_NAMESPACE \
    --userId '2vzLrELL' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 296 'CheckBalance' test.out

#- 297 CheckWallet
eval_tap 0 297 'CheckWallet # SKIP deprecated' test.out

#- 298 CreditUserWallet
# body param: body
echo '{"amount": 7, "expireAt": "1986-05-23T00:00:00Z", "metadata": {"d1Q9YAbQ": {}, "Ae28x1Qr": {}, "NaqIQQO0": {}}, "origin": "GooglePlay", "reason": "NwM39W3Q", "source": "REWARD"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreditUserWallet \
    --currencyCode '3MzS5kok' \
    --namespace $AB_NAMESPACE \
    --userId 'bMhmNgfU' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 298 'CreditUserWallet' test.out

#- 299 DebitByWalletPlatform
# body param: request
echo '{"amount": 65, "debitBalanceSource": "ORDER_REVOCATION", "metadata": {"0zUAdpQc": {}, "JRpvdJXk": {}, "qvHskZlt": {}}, "reason": "6wL308ah", "walletPlatform": "Oculus"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op DebitByWalletPlatform \
    --currencyCode '5sqw8Fpo' \
    --namespace $AB_NAMESPACE \
    --userId 'qw6jN6rA' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 299 'DebitByWalletPlatform' test.out

#- 300 PayWithUserWallet
# body param: body
echo '{"amount": 55, "metadata": {"yXL4zE93": {}, "zTAociry": {}, "gnRTYRiF": {}}, "walletPlatform": "Other"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PayWithUserWallet \
    --currencyCode 'dyM9ja5p' \
    --namespace $AB_NAMESPACE \
    --userId 'Ik3oDpt6' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 300 'PayWithUserWallet' test.out

#- 301 GetUserWallet
eval_tap 0 301 'GetUserWallet # SKIP deprecated' test.out

#- 302 DebitUserWallet
eval_tap 0 302 'DebitUserWallet # SKIP deprecated' test.out

#- 303 DisableUserWallet
eval_tap 0 303 'DisableUserWallet # SKIP deprecated' test.out

#- 304 EnableUserWallet
eval_tap 0 304 'EnableUserWallet # SKIP deprecated' test.out

#- 305 ListUserWalletTransactions
eval_tap 0 305 'ListUserWalletTransactions # SKIP deprecated' test.out

#- 306 ListViews
$CLI_EXE \
    --sn platform \
    --op ListViews \
    --namespace $AB_NAMESPACE \
    --storeId 'yPE0IFpY' \
    > test.out 2>&1
eval_tap $? 306 'ListViews' test.out

#- 307 CreateView
# body param: body
echo '{"displayOrder": 47, "localizations": {"28DqdepC": {"description": "xFKU4icd", "localExt": {"KqRvfHM6": {}, "vd8WiuGu": {}, "RysWPfb8": {}}, "longDescription": "d465aR41", "title": "CxIKVkNJ"}, "axtpw8C7": {"description": "XCSvvKTV", "localExt": {"BnP2w8zU": {}, "lg9F6TPD": {}, "YyCmKchu": {}}, "longDescription": "iF12QbQ5", "title": "OMPgNH8Y"}, "pDiLDWey": {"description": "O7rCDHHU", "localExt": {"WXIRGimI": {}, "TSMgrrzs": {}, "dXKAIVIA": {}}, "longDescription": "UeL7opfM", "title": "sH6Z9aMy"}}, "name": "SKzDzHdw"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateView \
    --namespace $AB_NAMESPACE \
    --storeId 'sjqPJ9l6' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 307 'CreateView' test.out

#- 308 GetView
$CLI_EXE \
    --sn platform \
    --op GetView \
    --namespace $AB_NAMESPACE \
    --viewId 'viSSe9Kp' \
    --storeId 'Wd0WZ7EI' \
    > test.out 2>&1
eval_tap $? 308 'GetView' test.out

#- 309 UpdateView
# body param: body
echo '{"displayOrder": 36, "localizations": {"yy6Soqmz": {"description": "OkSy1HYy", "localExt": {"arZLFylh": {}, "Uyl7Vn6K": {}, "KtLfINcs": {}}, "longDescription": "zaNcIsT4", "title": "kw90Vvff"}, "8vV5X4tO": {"description": "8DQgAmtU", "localExt": {"RDNFhRLJ": {}, "LIBNFyaZ": {}, "VCMCUO3L": {}}, "longDescription": "tvrS9NV9", "title": "ENvBrMco"}, "WOXg0o8B": {"description": "PCn7X8ag", "localExt": {"Lli8udMO": {}, "T9gkfFsq": {}, "ZcrkgB2v": {}}, "longDescription": "JWDHtLof", "title": "HtpaInC2"}}, "name": "ru9E26n6"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateView \
    --namespace $AB_NAMESPACE \
    --viewId 'aD2rwJpt' \
    --storeId 'Vt38nlDd' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 309 'UpdateView' test.out

#- 310 DeleteView
$CLI_EXE \
    --sn platform \
    --op DeleteView \
    --namespace $AB_NAMESPACE \
    --viewId 'E0mREHEu' \
    --storeId 'RLSC7ohP' \
    > test.out 2>&1
eval_tap $? 310 'DeleteView' test.out

#- 311 QueryWallets
eval_tap 0 311 'QueryWallets # SKIP deprecated' test.out

#- 312 BulkCredit
# body param: body
echo '[{"creditRequest": {"amount": 64, "expireAt": "1981-12-08T00:00:00Z", "metadata": {"0JUealuh": {}, "E61061Wt": {}, "TjtrFxnF": {}}, "origin": "Epic", "reason": "sTht2zHl", "source": "TRADE"}, "currencyCode": "clPA8cC0", "userIds": ["BY6of2Vf", "JxpX371B", "J9qBsMdj"]}, {"creditRequest": {"amount": 42, "expireAt": "1981-08-17T00:00:00Z", "metadata": {"4mi0rwDn": {}, "D84fx8jo": {}, "LKyKstU2": {}}, "origin": "Epic", "reason": "oOOnybpR", "source": "ACHIEVEMENT"}, "currencyCode": "3US8nfs1", "userIds": ["JEqP2bfj", "6fXFOFhL", "takhpq3I"]}, {"creditRequest": {"amount": 73, "expireAt": "1972-11-02T00:00:00Z", "metadata": {"MORA6iLW": {}, "RQ1hG3bM": {}, "AKbbAOyI": {}}, "origin": "GooglePlay", "reason": "gMa415jC", "source": "PROMOTION"}, "currencyCode": "5lwXgmHR", "userIds": ["Rn2UpKN7", "p9HAGVQg", "MeSqegWu"]}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op BulkCredit \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 312 'BulkCredit' test.out

#- 313 BulkDebit
# body param: body
echo '[{"currencyCode": "58sjaHC7", "request": {"allowOverdraft": true, "amount": 47, "balanceOrigin": "Steam", "balanceSource": "OTHER", "metadata": {"heCyInud": {}, "YTG6Aogk": {}, "hiHQsvNn": {}}, "reason": "WsvJg4Ql"}, "userIds": ["K2nmKRfT", "w7rjyFcq", "XqlBe27C"]}, {"currencyCode": "EXPSYDWo", "request": {"allowOverdraft": false, "amount": 57, "balanceOrigin": "Playstation", "balanceSource": "PAYMENT", "metadata": {"98AuGbFb": {}, "KdoOOKTS": {}, "xt1tYRN5": {}}, "reason": "HoIVVF8r"}, "userIds": ["gllwMMMC", "0OLxg1Po", "mUrDRUcE"]}, {"currencyCode": "4zwczR1o", "request": {"allowOverdraft": true, "amount": 84, "balanceOrigin": "Steam", "balanceSource": "PAYMENT", "metadata": {"GwWyZsMR": {}, "oWrI9qrF": {}, "lQYQpncw": {}}, "reason": "JXkByb0x"}, "userIds": ["9cpSl2r0", "DiG1aDue", "QJ4r70wR"]}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op BulkDebit \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 313 'BulkDebit' test.out

#- 314 GetWallet
eval_tap 0 314 'GetWallet # SKIP deprecated' test.out

#- 315 SyncOrders
$CLI_EXE \
    --sn platform \
    --op SyncOrders \
    --nextEvaluatedKey 'WiMzNDbH' \
    --end '0lC6G4il' \
    --start 'nwJaOIHl' \
    > test.out 2>&1
eval_tap $? 315 'SyncOrders' test.out

#- 316 TestAdyenConfig
# body param: body
echo '{"allowedPaymentMethods": ["a8KMpZ4U", "tgEzDLVq", "l2nzoiom"], "apiKey": "5iuyi6iA", "authoriseAsCapture": false, "blockedPaymentMethods": ["MiP4iR3y", "n5jKoidx", "xhQ32qqI"], "clientKey": "RacPiEDz", "dropInSettings": "e4r42xjt", "liveEndpointUrlPrefix": "Xh07pzhH", "merchantAccount": "OXHia8PG", "notificationHmacKey": "X9XaY7FU", "notificationPassword": "Db7BUYnT", "notificationUsername": "BVoxzeRH", "returnUrl": "tdcCI0Qj", "settings": "jO5J2WAA"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestAdyenConfig \
    --sandbox 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 316 'TestAdyenConfig' test.out

#- 317 TestAliPayConfig
# body param: body
echo '{"appId": "oQUv4U0A", "privateKey": "cLAbWnM8", "publicKey": "fq5qq8fV", "returnUrl": "mB7vLSX2"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestAliPayConfig \
    --sandbox 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 317 'TestAliPayConfig' test.out

#- 318 TestCheckoutConfig
# body param: body
echo '{"publicKey": "mg5WoRO5", "secretKey": "RMm1yjXA"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestCheckoutConfig \
    --sandbox 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 318 'TestCheckoutConfig' test.out

#- 319 DebugMatchedPaymentMerchantConfig
$CLI_EXE \
    --sn platform \
    --op DebugMatchedPaymentMerchantConfig \
    --namespace_ 'PInW6lDC' \
    --region 'IUL4k2uu' \
    > test.out 2>&1
eval_tap $? 319 'DebugMatchedPaymentMerchantConfig' test.out

#- 320 TestPayPalConfig
# body param: body
echo '{"clientID": "BXb1iDOl", "clientSecret": "MPS6x7T4", "returnUrl": "tcP9XYkG", "webHookId": "PceEFPIm"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestPayPalConfig \
    --sandbox 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 320 'TestPayPalConfig' test.out

#- 321 TestStripeConfig
# body param: body
echo '{"allowedPaymentMethodTypes": ["uC1FFC1x", "AZ4LCuJQ", "XY9tvIWh"], "publishableKey": "ANNPS0I6", "secretKey": "R5kUwrt2", "webhookSecret": "TDs6rd1l"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestStripeConfig \
    --sandbox 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 321 'TestStripeConfig' test.out

#- 322 TestWxPayConfig
# body param: body
echo '{"appId": "NLydD1CS", "key": "ZzDkJXDn", "mchid": "ZrAvQDa9", "returnUrl": "olqOyVAp"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestWxPayConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 322 'TestWxPayConfig' test.out

#- 323 TestXsollaConfig
# body param: body
echo '{"apiKey": "aRtIEYhK", "flowCompletionUrl": "jRiV44Es", "merchantId": 1, "projectId": 21, "projectSecretKey": "XLrsmrAr"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestXsollaConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 323 'TestXsollaConfig' test.out

#- 324 GetPaymentMerchantConfig
$CLI_EXE \
    --sn platform \
    --op GetPaymentMerchantConfig \
    --id 'oLZp8y0u' \
    > test.out 2>&1
eval_tap $? 324 'GetPaymentMerchantConfig' test.out

#- 325 UpdateAdyenConfig
# body param: body
echo '{"allowedPaymentMethods": ["9YAqQDy7", "GBN51Lcc", "3b9gJtZK"], "apiKey": "fxqxImHg", "authoriseAsCapture": false, "blockedPaymentMethods": ["qtV8mWCU", "5BpKIBUV", "DLREMJyk"], "clientKey": "gvMGbDAn", "dropInSettings": "szPQlKTT", "liveEndpointUrlPrefix": "mw8DUaqH", "merchantAccount": "LJb7IqVA", "notificationHmacKey": "P4isliAg", "notificationPassword": "1JL3dot3", "notificationUsername": "GBVNiF5m", "returnUrl": "ayQSfo9g", "settings": "BAM2T1Mn"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateAdyenConfig \
    --id 'HbGAHd6R' \
    --sandbox 'true' \
    --validate 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 325 'UpdateAdyenConfig' test.out

#- 326 TestAdyenConfigById
$CLI_EXE \
    --sn platform \
    --op TestAdyenConfigById \
    --id 'X4tAUvFU' \
    --sandbox 'false' \
    > test.out 2>&1
eval_tap $? 326 'TestAdyenConfigById' test.out

#- 327 UpdateAliPayConfig
# body param: body
echo '{"appId": "zGoEYFVq", "privateKey": "fMwXM17h", "publicKey": "d1FPv2xO", "returnUrl": "sCLdCJi9"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateAliPayConfig \
    --id 'mrqiwjoU' \
    --sandbox 'false' \
    --validate 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 327 'UpdateAliPayConfig' test.out

#- 328 TestAliPayConfigById
$CLI_EXE \
    --sn platform \
    --op TestAliPayConfigById \
    --id 'bTnKmfwk' \
    --sandbox 'true' \
    > test.out 2>&1
eval_tap $? 328 'TestAliPayConfigById' test.out

#- 329 UpdateCheckoutConfig
# body param: body
echo '{"publicKey": "q7q6d1Jw", "secretKey": "d8MPtQo7"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCheckoutConfig \
    --id 'UPTNrBqq' \
    --sandbox 'false' \
    --validate 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 329 'UpdateCheckoutConfig' test.out

#- 330 TestCheckoutConfigById
$CLI_EXE \
    --sn platform \
    --op TestCheckoutConfigById \
    --id 'opmkxjMh' \
    --sandbox 'false' \
    > test.out 2>&1
eval_tap $? 330 'TestCheckoutConfigById' test.out

#- 331 UpdatePayPalConfig
# body param: body
echo '{"clientID": "fooCjKWB", "clientSecret": "ziZxz1K8", "returnUrl": "4CYycbRa", "webHookId": "giTxL8MA"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePayPalConfig \
    --id 'ZvYL6RXD' \
    --sandbox 'true' \
    --validate 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 331 'UpdatePayPalConfig' test.out

#- 332 TestPayPalConfigById
$CLI_EXE \
    --sn platform \
    --op TestPayPalConfigById \
    --id '0KpFm0N8' \
    --sandbox 'true' \
    > test.out 2>&1
eval_tap $? 332 'TestPayPalConfigById' test.out

#- 333 UpdateStripeConfig
# body param: body
echo '{"allowedPaymentMethodTypes": ["XAsl57JC", "l9ITsGuX", "9YEphL33"], "publishableKey": "EFBrr4hN", "secretKey": "RKOLOclm", "webhookSecret": "8Fti9zaJ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateStripeConfig \
    --id 'DPr9GDR6' \
    --sandbox 'true' \
    --validate 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 333 'UpdateStripeConfig' test.out

#- 334 TestStripeConfigById
$CLI_EXE \
    --sn platform \
    --op TestStripeConfigById \
    --id 'yXKoTuPJ' \
    --sandbox 'true' \
    > test.out 2>&1
eval_tap $? 334 'TestStripeConfigById' test.out

#- 335 UpdateWxPayConfig
# body param: body
echo '{"appId": "Gh5OC0xv", "key": "wTkvW7vF", "mchid": "b72x71Vt", "returnUrl": "NbfDTdOQ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateWxPayConfig \
    --id 'i2OwwjJ2' \
    --validate 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 335 'UpdateWxPayConfig' test.out

#- 336 UpdateWxPayConfigCert
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UpdateWxPayConfigCert \
    --id '2UY7lCCg' \
    --upload file $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 336 'UpdateWxPayConfigCert' test.out

#- 337 TestWxPayConfigById
$CLI_EXE \
    --sn platform \
    --op TestWxPayConfigById \
    --id 'uUZ64muh' \
    > test.out 2>&1
eval_tap $? 337 'TestWxPayConfigById' test.out

#- 338 UpdateXsollaConfig
# body param: body
echo '{"apiKey": "YP5MuDFk", "flowCompletionUrl": "SlnhIvpZ", "merchantId": 79, "projectId": 40, "projectSecretKey": "6aVDtg92"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXsollaConfig \
    --id 'jlUkdjbH' \
    --validate 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 338 'UpdateXsollaConfig' test.out

#- 339 TestXsollaConfigById
$CLI_EXE \
    --sn platform \
    --op TestXsollaConfigById \
    --id 'VvK4ISry' \
    > test.out 2>&1
eval_tap $? 339 'TestXsollaConfigById' test.out

#- 340 UpdateXsollaUIConfig
# body param: body
echo '{"device": "MOBILE", "showCloseButton": false, "size": "LARGE", "theme": "DARK"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXsollaUIConfig \
    --id 'lYBrDNRe' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 340 'UpdateXsollaUIConfig' test.out

#- 341 QueryPaymentProviderConfig
$CLI_EXE \
    --sn platform \
    --op QueryPaymentProviderConfig \
    --limit '44' \
    --namespace_ 'W8DJkKz3' \
    --offset '87' \
    --region 'Y8MhYAjy' \
    > test.out 2>&1
eval_tap $? 341 'QueryPaymentProviderConfig' test.out

#- 342 CreatePaymentProviderConfig
# body param: body
echo '{"aggregate": "XSOLLA", "namespace": "umWqd9mr", "region": "gIR9AlKx", "sandboxTaxJarApiToken": "V6JSwcA0", "specials": ["ADYEN", "XSOLLA", "PAYPAL"], "taxJarApiToken": "520805WH", "taxJarEnabled": true, "useGlobalTaxJarApiToken": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreatePaymentProviderConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 342 'CreatePaymentProviderConfig' test.out

#- 343 GetAggregatePaymentProviders
$CLI_EXE \
    --sn platform \
    --op GetAggregatePaymentProviders \
    > test.out 2>&1
eval_tap $? 343 'GetAggregatePaymentProviders' test.out

#- 344 DebugMatchedPaymentProviderConfig
$CLI_EXE \
    --sn platform \
    --op DebugMatchedPaymentProviderConfig \
    --namespace_ 'gUfc061w' \
    --region 'Y8sUfz8P' \
    > test.out 2>&1
eval_tap $? 344 'DebugMatchedPaymentProviderConfig' test.out

#- 345 GetSpecialPaymentProviders
$CLI_EXE \
    --sn platform \
    --op GetSpecialPaymentProviders \
    > test.out 2>&1
eval_tap $? 345 'GetSpecialPaymentProviders' test.out

#- 346 UpdatePaymentProviderConfig
# body param: body
echo '{"aggregate": "XSOLLA", "namespace": "lJF3V9wh", "region": "PJRYSS5w", "sandboxTaxJarApiToken": "FS0qvsxt", "specials": ["PAYPAL", "WALLET", "ALIPAY"], "taxJarApiToken": "61AVLCdp", "taxJarEnabled": true, "useGlobalTaxJarApiToken": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePaymentProviderConfig \
    --id 'lIfFgtD8' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 346 'UpdatePaymentProviderConfig' test.out

#- 347 DeletePaymentProviderConfig
$CLI_EXE \
    --sn platform \
    --op DeletePaymentProviderConfig \
    --id 'u0sTVf4b' \
    > test.out 2>&1
eval_tap $? 347 'DeletePaymentProviderConfig' test.out

#- 348 GetPaymentTaxConfig
$CLI_EXE \
    --sn platform \
    --op GetPaymentTaxConfig \
    > test.out 2>&1
eval_tap $? 348 'GetPaymentTaxConfig' test.out

#- 349 UpdatePaymentTaxConfig
# body param: body
echo '{"sandboxTaxJarApiToken": "pQB7Cxt9", "taxJarApiToken": "dox4PWAf", "taxJarEnabled": false, "taxJarProductCodesMapping": {"B9QwxthF": "PTQBGi8P", "8K9X6udD": "ZezG1dZT", "lPNURs1W": "kOlHlEau"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePaymentTaxConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 349 'UpdatePaymentTaxConfig' test.out

#- 350 SyncPaymentOrders
$CLI_EXE \
    --sn platform \
    --op SyncPaymentOrders \
    --nextEvaluatedKey 'oW2ywsj3' \
    --end 'Am9ykF5J' \
    --start 'qa4kRAYx' \
    > test.out 2>&1
eval_tap $? 350 'SyncPaymentOrders' test.out

#- 351 PublicGetRootCategories
$CLI_EXE \
    --sn platform \
    --op PublicGetRootCategories \
    --namespace $AB_NAMESPACE \
    --language 'rAjdCG1C' \
    --storeId 'HTDr67b2' \
    > test.out 2>&1
eval_tap $? 351 'PublicGetRootCategories' test.out

#- 352 DownloadCategories
$CLI_EXE \
    --sn platform \
    --op DownloadCategories \
    --namespace $AB_NAMESPACE \
    --language 'paGNTwkC' \
    --storeId 'yPS5p2jo' \
    > test.out 2>&1
eval_tap $? 352 'DownloadCategories' test.out

#- 353 PublicGetCategory
$CLI_EXE \
    --sn platform \
    --op PublicGetCategory \
    --categoryPath 'tKg3QI4i' \
    --namespace $AB_NAMESPACE \
    --language 'ZtKqC5A4' \
    --storeId 'GKnJY8tu' \
    > test.out 2>&1
eval_tap $? 353 'PublicGetCategory' test.out

#- 354 PublicGetChildCategories
$CLI_EXE \
    --sn platform \
    --op PublicGetChildCategories \
    --categoryPath '8dyDg6UP' \
    --namespace $AB_NAMESPACE \
    --language 'dIIUgeTJ' \
    --storeId 'xjKZlPqf' \
    > test.out 2>&1
eval_tap $? 354 'PublicGetChildCategories' test.out

#- 355 PublicGetDescendantCategories
$CLI_EXE \
    --sn platform \
    --op PublicGetDescendantCategories \
    --categoryPath '2HUDU4dW' \
    --namespace $AB_NAMESPACE \
    --language 'sSkGIIyA' \
    --storeId 'uyqhSMzQ' \
    > test.out 2>&1
eval_tap $? 355 'PublicGetDescendantCategories' test.out

#- 356 PublicListCurrencies
$CLI_EXE \
    --sn platform \
    --op PublicListCurrencies \
    --namespace $AB_NAMESPACE \
    --currencyType 'VIRTUAL' \
    > test.out 2>&1
eval_tap $? 356 'PublicListCurrencies' test.out

#- 357 GeDLCDurableRewardShortMap
$CLI_EXE \
    --sn platform \
    --op GeDLCDurableRewardShortMap \
    --namespace $AB_NAMESPACE \
    --dlcType 'XBOX' \
    > test.out 2>&1
eval_tap $? 357 'GeDLCDurableRewardShortMap' test.out

#- 358 GetIAPItemMapping
$CLI_EXE \
    --sn platform \
    --op GetIAPItemMapping \
    --namespace $AB_NAMESPACE \
    --platform 'XBOX' \
    > test.out 2>&1
eval_tap $? 358 'GetIAPItemMapping' test.out

#- 359 PublicGetItemByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetItemByAppId \
    --namespace $AB_NAMESPACE \
    --language 'frsgdIq6' \
    --region 'hfF0Eir8' \
    --storeId 'V4OUPMpy' \
    --appId 'ZasdGVmg' \
    > test.out 2>&1
eval_tap $? 359 'PublicGetItemByAppId' test.out

#- 360 PublicQueryItems
$CLI_EXE \
    --sn platform \
    --op PublicQueryItems \
    --namespace $AB_NAMESPACE \
    --appType 'GAME' \
    --autoCalcEstimatedPrice 'true' \
    --baseAppId 'nZsMQamj' \
    --categoryPath 'pkEXYhRw' \
    --features 'PoFvwBcB' \
    --includeSubCategoryItem 'true' \
    --itemType 'COINS' \
    --language 'BX17SX0x' \
    --limit '81' \
    --offset '27' \
    --region 'G5XYzNb4' \
    --sortBy '["displayOrder:asc", "updatedAt:desc", "displayOrder"]' \
    --storeId 'UL3k10LW' \
    --tags 'v8QylrDc' \
    > test.out 2>&1
eval_tap $? 360 'PublicQueryItems' test.out

#- 361 PublicGetItemBySku
$CLI_EXE \
    --sn platform \
    --op PublicGetItemBySku \
    --namespace $AB_NAMESPACE \
    --autoCalcEstimatedPrice 'false' \
    --language 'KoKSPoYK' \
    --region 'ss4CKL96' \
    --storeId '6AnnQsHE' \
    --sku '8hdzaHDr' \
    > test.out 2>&1
eval_tap $? 361 'PublicGetItemBySku' test.out

#- 362 PublicGetEstimatedPrice
$CLI_EXE \
    --sn platform \
    --op PublicGetEstimatedPrice \
    --namespace $AB_NAMESPACE \
    --region 'BASgbyAA' \
    --storeId 'QkSGbtgy' \
    --itemIds 'nLtduexq' \
    > test.out 2>&1
eval_tap $? 362 'PublicGetEstimatedPrice' test.out

#- 363 PublicBulkGetItems
$CLI_EXE \
    --sn platform \
    --op PublicBulkGetItems \
    --namespace $AB_NAMESPACE \
    --autoCalcEstimatedPrice 'false' \
    --language 'yOu1LcyP' \
    --region 'grg9GNqn' \
    --storeId 'a2I4vKvU' \
    --itemIds 'ID1fccVS' \
    > test.out 2>&1
eval_tap $? 363 'PublicBulkGetItems' test.out

#- 364 PublicValidateItemPurchaseCondition
# body param: body
echo '{"itemIds": ["vCOmJiOZ", "ZQsuhhGj", "6IslukfC"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicValidateItemPurchaseCondition \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 364 'PublicValidateItemPurchaseCondition' test.out

#- 365 PublicSearchItems
$CLI_EXE \
    --sn platform \
    --op PublicSearchItems \
    --namespace $AB_NAMESPACE \
    --autoCalcEstimatedPrice 'true' \
    --itemType 'CODE' \
    --limit '61' \
    --offset '98' \
    --region 'KqGcaZhC' \
    --storeId 'tPtwoBzD' \
    --keyword 'ReyxyOt1' \
    --language '7yfYC7Kg' \
    > test.out 2>&1
eval_tap $? 365 'PublicSearchItems' test.out

#- 366 PublicGetApp
$CLI_EXE \
    --sn platform \
    --op PublicGetApp \
    --itemId 'x2pUqiUB' \
    --namespace $AB_NAMESPACE \
    --language 'dviqMMXM' \
    --region 'JMOvxTP2' \
    --storeId 'iLLvwrnX' \
    > test.out 2>&1
eval_tap $? 366 'PublicGetApp' test.out

#- 367 PublicGetItemDynamicData
$CLI_EXE \
    --sn platform \
    --op PublicGetItemDynamicData \
    --itemId 'xTjvCx7J' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 367 'PublicGetItemDynamicData' test.out

#- 368 PublicGetItem
$CLI_EXE \
    --sn platform \
    --op PublicGetItem \
    --itemId 'WWswPWgQ' \
    --namespace $AB_NAMESPACE \
    --autoCalcEstimatedPrice 'false' \
    --language 'bfttB9ju' \
    --populateBundle 'true' \
    --region 'mBz6Txhu' \
    --storeId '1hTp3Iwi' \
    > test.out 2>&1
eval_tap $? 368 'PublicGetItem' test.out

#- 369 GetPaymentCustomization
eval_tap 0 369 'GetPaymentCustomization # SKIP deprecated' test.out

#- 370 PublicGetPaymentUrl
# body param: body
echo '{"paymentOrderNo": "XwXqAtnj", "paymentProvider": "WXPAY", "returnUrl": "d2WBtzHX", "ui": "6qQxZdeb", "zipCode": "psZ7BNHK"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicGetPaymentUrl \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 370 'PublicGetPaymentUrl' test.out

#- 371 PublicGetPaymentMethods
$CLI_EXE \
    --sn platform \
    --op PublicGetPaymentMethods \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'foQ9viJA' \
    > test.out 2>&1
eval_tap $? 371 'PublicGetPaymentMethods' test.out

#- 372 PublicGetUnpaidPaymentOrder
$CLI_EXE \
    --sn platform \
    --op PublicGetUnpaidPaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo '5MHOCmNT' \
    > test.out 2>&1
eval_tap $? 372 'PublicGetUnpaidPaymentOrder' test.out

#- 373 Pay
# body param: body
echo '{"token": "kT5jIefW"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op Pay \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'iNtT1yWE' \
    --paymentProvider 'WXPAY' \
    --zipCode '5lInvnkT' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 373 'Pay' test.out

#- 374 PublicCheckPaymentOrderPaidStatus
$CLI_EXE \
    --sn platform \
    --op PublicCheckPaymentOrderPaidStatus \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo '2q5Ph199' \
    > test.out 2>&1
eval_tap $? 374 'PublicCheckPaymentOrderPaidStatus' test.out

#- 375 GetPaymentPublicConfig
$CLI_EXE \
    --sn platform \
    --op GetPaymentPublicConfig \
    --namespace $AB_NAMESPACE \
    --sandbox 'false' \
    --paymentProvider 'WXPAY' \
    --region 'Bvw4Mw5m' \
    > test.out 2>&1
eval_tap $? 375 'GetPaymentPublicConfig' test.out

#- 376 PublicGetQRCode
$CLI_EXE \
    --sn platform \
    --op PublicGetQRCode \
    --namespace $AB_NAMESPACE \
    --code 'XBMdzFhd' \
    > test.out 2>&1
eval_tap $? 376 'PublicGetQRCode' test.out

#- 377 PublicNormalizePaymentReturnUrl
$CLI_EXE \
    --sn platform \
    --op PublicNormalizePaymentReturnUrl \
    --namespace $AB_NAMESPACE \
    --payerID '0HWJ6AUE' \
    --foreinginvoice 'dXXwEasy' \
    --invoiceId 'jW3aPY9Q' \
    --payload 'q9TUrbuD' \
    --redirectResult 'WfE81ETZ' \
    --resultCode 'uLnJSzyV' \
    --sessionId '6CvY13pg' \
    --status 'pOyVjX7P' \
    --token 'KWntlm0a' \
    --type 'REBIiHwZ' \
    --userId '6MuUdAMA' \
    --orderNo 'qLxcgDc0' \
    --paymentOrderNo '3YdhJGzn' \
    --paymentProvider 'ADYEN' \
    --returnUrl 'T6BOAqGy' \
    > test.out 2>&1
eval_tap $? 377 'PublicNormalizePaymentReturnUrl' test.out

#- 378 GetPaymentTaxValue
$CLI_EXE \
    --sn platform \
    --op GetPaymentTaxValue \
    --namespace $AB_NAMESPACE \
    --zipCode 'DUhcuv9q' \
    --paymentOrderNo 'MJbbslNP' \
    --paymentProvider 'STRIPE' \
    > test.out 2>&1
eval_tap $? 378 'GetPaymentTaxValue' test.out

#- 379 GetRewardByCode
$CLI_EXE \
    --sn platform \
    --op GetRewardByCode \
    --namespace $AB_NAMESPACE \
    --rewardCode 'BdAoM7vj' \
    > test.out 2>&1
eval_tap $? 379 'GetRewardByCode' test.out

#- 380 QueryRewards1
$CLI_EXE \
    --sn platform \
    --op QueryRewards1 \
    --namespace $AB_NAMESPACE \
    --eventTopic 'l92rtIpc' \
    --limit '61' \
    --offset '91' \
    --sortBy '["namespace:desc", "rewardCode:desc", "rewardCode:asc"]' \
    > test.out 2>&1
eval_tap $? 380 'QueryRewards1' test.out

#- 381 GetReward1
$CLI_EXE \
    --sn platform \
    --op GetReward1 \
    --namespace $AB_NAMESPACE \
    --rewardId 'uDd0oqku' \
    > test.out 2>&1
eval_tap $? 381 'GetReward1' test.out

#- 382 PublicListStores
$CLI_EXE \
    --sn platform \
    --op PublicListStores \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 382 'PublicListStores' test.out

#- 383 PublicExistsAnyMyActiveEntitlement
$CLI_EXE \
    --sn platform \
    --op PublicExistsAnyMyActiveEntitlement \
    --namespace $AB_NAMESPACE \
    --appIds '["H0KFiwXT", "wnLpOCXp", "i3yNcJSe"]' \
    --itemIds '["soiMdamy", "PlElSkqI", "wiTPgKvf"]' \
    --skus '["xaPtnWLu", "ryVwqYQR", "wHrENRcW"]' \
    > test.out 2>&1
eval_tap $? 383 'PublicExistsAnyMyActiveEntitlement' test.out

#- 384 PublicGetMyAppEntitlementOwnershipByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetMyAppEntitlementOwnershipByAppId \
    --namespace $AB_NAMESPACE \
    --appId '42V3hjDR' \
    > test.out 2>&1
eval_tap $? 384 'PublicGetMyAppEntitlementOwnershipByAppId' test.out

#- 385 PublicGetMyEntitlementOwnershipByItemId
$CLI_EXE \
    --sn platform \
    --op PublicGetMyEntitlementOwnershipByItemId \
    --namespace $AB_NAMESPACE \
    --entitlementClazz 'ENTITLEMENT' \
    --itemId 'mDRDQ3PY' \
    > test.out 2>&1
eval_tap $? 385 'PublicGetMyEntitlementOwnershipByItemId' test.out

#- 386 PublicGetMyEntitlementOwnershipBySku
$CLI_EXE \
    --sn platform \
    --op PublicGetMyEntitlementOwnershipBySku \
    --namespace $AB_NAMESPACE \
    --entitlementClazz 'MEDIA' \
    --sku '6QDRu8To' \
    > test.out 2>&1
eval_tap $? 386 'PublicGetMyEntitlementOwnershipBySku' test.out

#- 387 PublicGetEntitlementOwnershipToken
$CLI_EXE \
    --sn platform \
    --op PublicGetEntitlementOwnershipToken \
    --namespace $AB_NAMESPACE \
    --appIds '["1JLRNltq", "WnK83ZgH", "4LT7Mehe"]' \
    --itemIds '["ozf17lZh", "BSjVQ7oL", "9586gLIZ"]' \
    --skus '["M2EoYJA3", "dIeV3tgw", "75flztk4"]' \
    > test.out 2>&1
eval_tap $? 387 'PublicGetEntitlementOwnershipToken' test.out

#- 388 SyncTwitchDropsEntitlement
# body param: body
echo '{"gameId": "lFBwvthl", "language": "jMZd-rXmC", "region": "71K9vDJN"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncTwitchDropsEntitlement \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 388 'SyncTwitchDropsEntitlement' test.out

#- 389 PublicGetMyWallet
$CLI_EXE \
    --sn platform \
    --op PublicGetMyWallet \
    --currencyCode 'DyhiI6ZV' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 389 'PublicGetMyWallet' test.out

#- 390 SyncEpicGameDLC
# body param: body
echo '{"epicGamesJwtToken": "NsyVC5NL"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncEpicGameDLC \
    --namespace $AB_NAMESPACE \
    --userId 'KG5eLuRU' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 390 'SyncEpicGameDLC' test.out

#- 391 SyncOculusDLC
$CLI_EXE \
    --sn platform \
    --op SyncOculusDLC \
    --namespace $AB_NAMESPACE \
    --userId 'gQ9y5ew8' \
    > test.out 2>&1
eval_tap $? 391 'SyncOculusDLC' test.out

#- 392 PublicSyncPsnDlcInventory
# body param: body
echo '{"serviceLabel": 19}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicSyncPsnDlcInventory \
    --namespace $AB_NAMESPACE \
    --userId '2WDmccij' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 392 'PublicSyncPsnDlcInventory' test.out

#- 393 PublicSyncPsnDlcInventoryWithMultipleServiceLabels
# body param: body
echo '{"serviceLabels": [72, 78, 14]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicSyncPsnDlcInventoryWithMultipleServiceLabels \
    --namespace $AB_NAMESPACE \
    --userId 'GBv7Bs2D' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 393 'PublicSyncPsnDlcInventoryWithMultipleServiceLabels' test.out

#- 394 SyncSteamDLC
# body param: body
echo '{"appId": "AXKaaK1P", "steamId": "Yqx0kBRT"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncSteamDLC \
    --namespace $AB_NAMESPACE \
    --userId 'XUdix8y3' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 394 'SyncSteamDLC' test.out

#- 395 SyncXboxDLC
# body param: body
echo '{"xstsToken": "smSxX8BO"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncXboxDLC \
    --namespace $AB_NAMESPACE \
    --userId 'Q6Jz6sUn' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 395 'SyncXboxDLC' test.out

#- 396 PublicQueryUserEntitlements
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserEntitlements \
    --namespace $AB_NAMESPACE \
    --userId 'PhyKN4FP' \
    --appType 'SOFTWARE' \
    --entitlementClazz 'LOOTBOX' \
    --entitlementName 'SKWAg4So' \
    --features '["zUCeciwd", "Lwc55kCu", "Jz8clJD7"]' \
    --itemId '["W2e4B7Wn", "2EHEJQEU", "9eOiTNtX"]' \
    --limit '43' \
    --offset '73' \
    > test.out 2>&1
eval_tap $? 396 'PublicQueryUserEntitlements' test.out

#- 397 PublicGetUserAppEntitlementByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetUserAppEntitlementByAppId \
    --namespace $AB_NAMESPACE \
    --userId 'yEjji8SX' \
    --appId 'ZbWkgCgd' \
    > test.out 2>&1
eval_tap $? 397 'PublicGetUserAppEntitlementByAppId' test.out

#- 398 PublicQueryUserEntitlementsByAppType
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserEntitlementsByAppType \
    --namespace $AB_NAMESPACE \
    --userId 'iXfqRK6B' \
    --limit '34' \
    --offset '42' \
    --appType 'SOFTWARE' \
    > test.out 2>&1
eval_tap $? 398 'PublicQueryUserEntitlementsByAppType' test.out

#- 399 PublicGetUserEntitlementsByIds
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementsByIds \
    --namespace $AB_NAMESPACE \
    --userId 'LYIdYQZ1' \
    --availablePlatformOnly 'false' \
    --ids '["wtgroAgk", "dUoGqSrX", "GXMxC7t4"]' \
    > test.out 2>&1
eval_tap $? 399 'PublicGetUserEntitlementsByIds' test.out

#- 400 PublicGetUserEntitlementByItemId
eval_tap 0 400 'PublicGetUserEntitlementByItemId # SKIP deprecated' test.out

#- 401 PublicGetUserEntitlementBySku
eval_tap 0 401 'PublicGetUserEntitlementBySku # SKIP deprecated' test.out

#- 402 PublicExistsAnyUserActiveEntitlement
$CLI_EXE \
    --sn platform \
    --op PublicExistsAnyUserActiveEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'sSiyJaj8' \
    --appIds '["5DPQzNnU", "zbACk7zn", "J8ZgF8jk"]' \
    --itemIds '["kV98ZBN1", "bT0hAJp0", "cqWIdy52"]' \
    --skus '["7qDIHkoF", "0Zbba7t6", "RlCgSd17"]' \
    > test.out 2>&1
eval_tap $? 402 'PublicExistsAnyUserActiveEntitlement' test.out

#- 403 PublicGetUserAppEntitlementOwnershipByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetUserAppEntitlementOwnershipByAppId \
    --namespace $AB_NAMESPACE \
    --userId 'ovSJLOYR' \
    --appId 'fj8CFAAK' \
    > test.out 2>&1
eval_tap $? 403 'PublicGetUserAppEntitlementOwnershipByAppId' test.out

#- 404 PublicGetUserEntitlementOwnershipByItemId
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementOwnershipByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'MQuMWuad' \
    --entitlementClazz 'OPTIONBOX' \
    --itemId 'HPPvzInl' \
    > test.out 2>&1
eval_tap $? 404 'PublicGetUserEntitlementOwnershipByItemId' test.out

#- 405 PublicGetUserEntitlementOwnershipByItemIds
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementOwnershipByItemIds \
    --namespace $AB_NAMESPACE \
    --userId 'XwXfK1yn' \
    --ids '["0W92ylon", "NGX4x34L", "EFITggy7"]' \
    > test.out 2>&1
eval_tap $? 405 'PublicGetUserEntitlementOwnershipByItemIds' test.out

#- 406 PublicGetUserEntitlementOwnershipBySku
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementOwnershipBySku \
    --namespace $AB_NAMESPACE \
    --userId 'dncMdtPd' \
    --entitlementClazz 'OPTIONBOX' \
    --sku 'aRbPCXMp' \
    > test.out 2>&1
eval_tap $? 406 'PublicGetUserEntitlementOwnershipBySku' test.out

#- 407 PublicGetUserEntitlement
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlement \
    --entitlementId '6dVC6IeQ' \
    --namespace $AB_NAMESPACE \
    --userId 'FVmWWF49' \
    > test.out 2>&1
eval_tap $? 407 'PublicGetUserEntitlement' test.out

#- 408 PublicConsumeUserEntitlement
# body param: body
echo '{"options": ["O9auVsle", "XMClpeyi", "darWQkwl"], "requestId": "QmMGdTkY", "useCount": 82}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicConsumeUserEntitlement \
    --entitlementId 'rbhZMUmz' \
    --namespace $AB_NAMESPACE \
    --userId 'TsA8uPFD' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 408 'PublicConsumeUserEntitlement' test.out

#- 409 PublicSellUserEntitlement
# body param: body
echo '{"requestId": "tfvSoOQ5", "useCount": 20}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicSellUserEntitlement \
    --entitlementId 'x0XpMlNt' \
    --namespace $AB_NAMESPACE \
    --userId 'iZpQ2nTj' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 409 'PublicSellUserEntitlement' test.out

#- 410 PublicSplitUserEntitlement
# body param: body
echo '{"useCount": 40}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicSplitUserEntitlement \
    --entitlementId 'osrolKVl' \
    --namespace $AB_NAMESPACE \
    --userId 'hpone8ir' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 410 'PublicSplitUserEntitlement' test.out

#- 411 PublicTransferUserEntitlement
# body param: body
echo '{"entitlementId": "S3qFNKrq", "useCount": 25}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicTransferUserEntitlement \
    --entitlementId 'onzgRtNd' \
    --namespace $AB_NAMESPACE \
    --userId 'UFgFRFHr' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 411 'PublicTransferUserEntitlement' test.out

#- 412 PublicRedeemCode
# body param: body
echo '{"code": "BQn9aAq4", "language": "iy", "region": "ks4ypxhP"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicRedeemCode \
    --namespace $AB_NAMESPACE \
    --userId '3FswwbX6' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 412 'PublicRedeemCode' test.out

#- 413 PublicFulfillAppleIAPItem
# body param: body
echo '{"excludeOldTransactions": false, "language": "RCg_798", "productId": "kqH96Her", "receiptData": "rX9gtO4k", "region": "OpMiyxjW", "transactionId": "rKUcEp6d"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicFulfillAppleIAPItem \
    --namespace $AB_NAMESPACE \
    --userId 'pm9Y92eX' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 413 'PublicFulfillAppleIAPItem' test.out

#- 414 SyncEpicGamesInventory
# body param: body
echo '{"epicGamesJwtToken": "hp3mQNa8"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncEpicGamesInventory \
    --namespace $AB_NAMESPACE \
    --userId 'aJHPj148' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 414 'SyncEpicGamesInventory' test.out

#- 415 PublicFulfillGoogleIAPItem
# body param: body
echo '{"autoAck": false, "language": "QA", "orderId": "dxxickWc", "packageName": "JA8Ce7M5", "productId": "avdk6Coj", "purchaseTime": 39, "purchaseToken": "gmFXVpjY", "region": "sFCPHIVV"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicFulfillGoogleIAPItem \
    --namespace $AB_NAMESPACE \
    --userId 'dtSGy8Ej' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 415 'PublicFulfillGoogleIAPItem' test.out

#- 416 SyncOculusConsumableEntitlements
$CLI_EXE \
    --sn platform \
    --op SyncOculusConsumableEntitlements \
    --namespace $AB_NAMESPACE \
    --userId 'VVbp0Jh5' \
    > test.out 2>&1
eval_tap $? 416 'SyncOculusConsumableEntitlements' test.out

#- 417 PublicReconcilePlayStationStore
# body param: body
echo '{"currencyCode": "jguQBhGl", "price": 0.9493410096102748, "productId": "WZ1OJkpW", "serviceLabel": 34}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicReconcilePlayStationStore \
    --namespace $AB_NAMESPACE \
    --userId 'YKZR02lT' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 417 'PublicReconcilePlayStationStore' test.out

#- 418 PublicReconcilePlayStationStoreWithMultipleServiceLabels
# body param: body
echo '{"currencyCode": "iCHyAAC4", "price": 0.7922055818336026, "productId": "w3QDPdtS", "serviceLabels": [72, 91, 83]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicReconcilePlayStationStoreWithMultipleServiceLabels \
    --namespace $AB_NAMESPACE \
    --userId 'Wbgrg74s' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 418 'PublicReconcilePlayStationStoreWithMultipleServiceLabels' test.out

#- 419 SyncSteamInventory
# body param: body
echo '{"appId": "PjvjD2dq", "currencyCode": "5RoKxbci", "language": "HI_uanV-587", "price": 0.2925601662157846, "productId": "NzjvHCLm", "region": "7654Enc3", "steamId": "bupHdTcw"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncSteamInventory \
    --namespace $AB_NAMESPACE \
    --userId 'IGAWDSJw' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 419 'SyncSteamInventory' test.out

#- 420 SyncTwitchDropsEntitlement1
# body param: body
echo '{"gameId": "cu8On36S", "language": "mBX-aAuY", "region": "cst24FOf"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncTwitchDropsEntitlement1 \
    --namespace $AB_NAMESPACE \
    --userId 'ZXvXwE6i' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 420 'SyncTwitchDropsEntitlement1' test.out

#- 421 SyncXboxInventory
# body param: body
echo '{"currencyCode": "UTJbaWbs", "price": 0.7490230262590183, "productId": "DCShMFsG", "xstsToken": "nkOgEpwv"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncXboxInventory \
    --namespace $AB_NAMESPACE \
    --userId 'Idmxncd2' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 421 'SyncXboxInventory' test.out

#- 422 PublicQueryUserOrders
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserOrders \
    --namespace $AB_NAMESPACE \
    --userId 'R9zXNvSk' \
    --itemId 'rrHeQuJR' \
    --limit '49' \
    --offset '38' \
    --status 'FULFILLED' \
    > test.out 2>&1
eval_tap $? 422 'PublicQueryUserOrders' test.out

#- 423 PublicCreateUserOrder
# body param: body
echo '{"currencyCode": "yOT2ZrQX", "discountedPrice": 18, "ext": {"fsvZLQCY": {}, "FmOKQUmi": {}, "IRXK2VuL": {}}, "itemId": "cdlTP9vE", "language": "soaI-acMs-Wn", "price": 69, "quantity": 2, "region": "L5RVk2Cw", "returnUrl": "phx1OhVd", "sectionId": "mYNA2JOJ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicCreateUserOrder \
    --namespace $AB_NAMESPACE \
    --userId 'b16GGHBR' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 423 'PublicCreateUserOrder' test.out

#- 424 PublicGetUserOrder
$CLI_EXE \
    --sn platform \
    --op PublicGetUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'R6KOPos3' \
    --userId '1BNW6baC' \
    > test.out 2>&1
eval_tap $? 424 'PublicGetUserOrder' test.out

#- 425 PublicCancelUserOrder
$CLI_EXE \
    --sn platform \
    --op PublicCancelUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'K4dUaC1s' \
    --userId 'IJvYeO1g' \
    > test.out 2>&1
eval_tap $? 425 'PublicCancelUserOrder' test.out

#- 426 PublicGetUserOrderHistories
$CLI_EXE \
    --sn platform \
    --op PublicGetUserOrderHistories \
    --namespace $AB_NAMESPACE \
    --orderNo 'UkxNBgE5' \
    --userId 'hbIggilt' \
    > test.out 2>&1
eval_tap $? 426 'PublicGetUserOrderHistories' test.out

#- 427 PublicDownloadUserOrderReceipt
$CLI_EXE \
    --sn platform \
    --op PublicDownloadUserOrderReceipt \
    --namespace $AB_NAMESPACE \
    --orderNo 'w4huupNM' \
    --userId 'bfUXHA3T' \
    > test.out 2>&1
eval_tap $? 427 'PublicDownloadUserOrderReceipt' test.out

#- 428 PublicGetPaymentAccounts
$CLI_EXE \
    --sn platform \
    --op PublicGetPaymentAccounts \
    --namespace $AB_NAMESPACE \
    --userId 'FCyM9uF8' \
    > test.out 2>&1
eval_tap $? 428 'PublicGetPaymentAccounts' test.out

#- 429 PublicDeletePaymentAccount
$CLI_EXE \
    --sn platform \
    --op PublicDeletePaymentAccount \
    --id 'AgvYxBfP' \
    --namespace $AB_NAMESPACE \
    --type 'paypal' \
    --userId 'SULPdeFo' \
    > test.out 2>&1
eval_tap $? 429 'PublicDeletePaymentAccount' test.out

#- 430 PublicListActiveSections
$CLI_EXE \
    --sn platform \
    --op PublicListActiveSections \
    --namespace $AB_NAMESPACE \
    --userId 'INzOPukA' \
    --autoCalcEstimatedPrice 'false' \
    --language 'xKRt8SE5' \
    --region '3xuLvKDy' \
    --storeId 'Z5iYzCB1' \
    --viewId '1jcZWkjw' \
    > test.out 2>&1
eval_tap $? 430 'PublicListActiveSections' test.out

#- 431 PublicQueryUserSubscriptions
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserSubscriptions \
    --namespace $AB_NAMESPACE \
    --userId 'LfzQBYQk' \
    --chargeStatus 'CHARGED' \
    --itemId 'jEE02ggT' \
    --limit '60' \
    --offset '34' \
    --sku 'kEgVa2Zr' \
    --status 'EXPIRED' \
    --subscribedBy 'USER' \
    > test.out 2>&1
eval_tap $? 431 'PublicQueryUserSubscriptions' test.out

#- 432 PublicSubscribeSubscription
# body param: body
echo '{"currencyCode": "YbosHi8f", "itemId": "a4iM7i1K", "language": "TxIb_ZcWm_fk", "region": "s93Eqo4J", "returnUrl": "SNHZBEcK", "source": "w3btiemu"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicSubscribeSubscription \
    --namespace $AB_NAMESPACE \
    --userId 'ORbRrilo' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 432 'PublicSubscribeSubscription' test.out

#- 433 PublicCheckUserSubscriptionSubscribableByItemId
$CLI_EXE \
    --sn platform \
    --op PublicCheckUserSubscriptionSubscribableByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'Ewu7dHrc' \
    --itemId 'PIa9V86E' \
    > test.out 2>&1
eval_tap $? 433 'PublicCheckUserSubscriptionSubscribableByItemId' test.out

#- 434 PublicGetUserSubscription
$CLI_EXE \
    --sn platform \
    --op PublicGetUserSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId '7yahIoEK' \
    --userId 'NTmBsorQ' \
    > test.out 2>&1
eval_tap $? 434 'PublicGetUserSubscription' test.out

#- 435 PublicChangeSubscriptionBillingAccount
$CLI_EXE \
    --sn platform \
    --op PublicChangeSubscriptionBillingAccount \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'IdiI6E9m' \
    --userId 'NQP2ZU7z' \
    > test.out 2>&1
eval_tap $? 435 'PublicChangeSubscriptionBillingAccount' test.out

#- 436 PublicCancelSubscription
# body param: body
echo '{"immediate": true, "reason": "roGhvU7i"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicCancelSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'tNn4Yn79' \
    --userId '2RQu8V4T' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 436 'PublicCancelSubscription' test.out

#- 437 PublicGetUserSubscriptionBillingHistories
$CLI_EXE \
    --sn platform \
    --op PublicGetUserSubscriptionBillingHistories \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'jEdPoU5k' \
    --userId 'EppkXdWE' \
    --excludeFree 'true' \
    --limit '34' \
    --offset '10' \
    > test.out 2>&1
eval_tap $? 437 'PublicGetUserSubscriptionBillingHistories' test.out

#- 438 PublicListViews
$CLI_EXE \
    --sn platform \
    --op PublicListViews \
    --namespace $AB_NAMESPACE \
    --userId 'cY4Rvon2' \
    --language 'MeTJiYDC' \
    --storeId '3K2biBOT' \
    > test.out 2>&1
eval_tap $? 438 'PublicListViews' test.out

#- 439 PublicGetWallet
$CLI_EXE \
    --sn platform \
    --op PublicGetWallet \
    --currencyCode '3rhczsAR' \
    --namespace $AB_NAMESPACE \
    --userId 'n5G6f8w6' \
    > test.out 2>&1
eval_tap $? 439 'PublicGetWallet' test.out

#- 440 PublicListUserWalletTransactions
$CLI_EXE \
    --sn platform \
    --op PublicListUserWalletTransactions \
    --currencyCode 'P9v6goMY' \
    --namespace $AB_NAMESPACE \
    --userId 'Qo6ZrHvu' \
    --limit '90' \
    --offset '57' \
    > test.out 2>&1
eval_tap $? 440 'PublicListUserWalletTransactions' test.out

#- 441 QueryItems1
$CLI_EXE \
    --sn platform \
    --op QueryItems1 \
    --namespace $AB_NAMESPACE \
    --appType 'DEMO' \
    --availableDate '0j71fulu' \
    --baseAppId 'mMXd4dAM' \
    --categoryPath 'MMcWJd51' \
    --features 'wZlVoUmF' \
    --includeSubCategoryItem 'true' \
    --itemName 'Zacz8oGG' \
    --itemStatus 'INACTIVE' \
    --itemType 'OPTIONBOX' \
    --limit '54' \
    --offset '67' \
    --region 'xFmV2iSL' \
    --sectionExclusive 'false' \
    --sortBy '["createdAt", "updatedAt:asc", "updatedAt:desc"]' \
    --storeId 'ahVTqmQg' \
    --tags '3WcQ8yY4' \
    --targetNamespace 'pIBlxvQH' \
    --withTotal 'false' \
    > test.out 2>&1
eval_tap $? 441 'QueryItems1' test.out

#- 442 ImportStore1
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op ImportStore1 \
    --namespace $AB_NAMESPACE \
    --storeId 'OuQcWUDM' \
    --strictMode 'false' \
    --upload file $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 442 'ImportStore1' test.out

#- 443 ExportStore1
# body param: body
echo '{"itemIds": ["FGXFc6Lq", "0aQxbN6P", "YPdFW725"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ExportStore1 \
    --namespace $AB_NAMESPACE \
    --storeId '5j4kwVb1' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 443 'ExportStore1' test.out

#- 444 FulfillRewardsV2
# body param: body
echo '{"entitlementCollectionId": "nOTNwmIP", "entitlementOrigin": "Steam", "metadata": {"CPfIM7BN": {}, "5X3JlfX7": {}, "arKROkqT": {}}, "origin": "Playstation", "rewards": [{"currency": {"currencyCode": "xP2K1l3D", "namespace": "gFAbBIpi"}, "item": {"itemId": "UhtYYEmF", "itemSku": "XHfplQdz", "itemType": "8PxbyLit"}, "quantity": 27, "type": "ITEM"}, {"currency": {"currencyCode": "AhLOS2WH", "namespace": "Se0Y9Twg"}, "item": {"itemId": "BUYSRjjB", "itemSku": "EhjNVYy0", "itemType": "jnpaALYr"}, "quantity": 93, "type": "CURRENCY"}, {"currency": {"currencyCode": "05TpJCTO", "namespace": "XKphtpnS"}, "item": {"itemId": "Rp3wMkM6", "itemSku": "om6yJbyO", "itemType": "gPvVX4jm"}, "quantity": 0, "type": "ITEM"}], "source": "ACHIEVEMENT", "transactionId": "oHJGn4Zq"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op FulfillRewardsV2 \
    --namespace $AB_NAMESPACE \
    --userId 'uqVaXDNc' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 444 'FulfillRewardsV2' test.out


# remove artifacts
rm -f "$CLI_TOKEN_FILE"
rm -f "$TEMP_JSON_INPUT"
rm -f "$TEMP_FILE_UPLOAD"

exit $EXIT_CODE