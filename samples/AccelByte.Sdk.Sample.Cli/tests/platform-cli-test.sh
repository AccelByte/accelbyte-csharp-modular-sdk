#!/usr/bin/env bash

# Copyright (c) 2021 AccelByte Inc. All Rights Reserved.
# This is licensed software from AccelByte Inc, for limitations
# and restrictions contact your company contract manager.

# This code is generated by tool. DO NOT EDIT.

# Meta:
# - random seed: 
# - template file: 

# Instructions:
# - Run the Justice SDK Mock Server first before running this script.

export AB_BASE_URL="http://127.0.0.1:8080"
export AB_CLIENT_ID="admin"
export AB_CLIENT_SECRET="admin"
export AB_NAMESPACE="test"
export AB_APP_NAME="UnitTest"

EXIT_CODE=0

eval_tap() {
  if [ $1 -eq 0 ]; then
    echo "ok $2 - $3"
  else
    EXIT_CODE=1
    echo "not ok $2 - $3"
    sed 's/^/# /g' $4
  fi
  rm -f $4
}

CLI_EXE="AccelByte.Sdk.Sample.Cli"
CLI_TOKEN_FILE="$(dirname "$(which $CLI_EXE)")/token.json"
TEMP_JSON_INPUT="input_json.json"
TEMP_FILE_UPLOAD="file_upload.bin"

echo "TAP version 13"
echo "1..486"

#- 1 Login
$CLI_EXE --op login --lt user --user user --pass user > test.out 2>&1
eval_tap $? 1 'Login' test.out

if [ $EXIT_CODE -ne 0 ]; then
  echo "Bail out! Login failed."
  exit $EXIT_CODE
fi

# echo "foo" > "$CLI_TOKEN_FILE"

#- 2 ListFulfillmentScripts
$CLI_EXE \
    --sn platform \
    --op ListFulfillmentScripts \
    > test.out 2>&1
eval_tap $? 2 'ListFulfillmentScripts' test.out

#- 3 GetFulfillmentScript
$CLI_EXE \
    --sn platform \
    --op GetFulfillmentScript \
    --id '6YBQnjcw' \
    > test.out 2>&1
eval_tap $? 3 'GetFulfillmentScript' test.out

#- 4 CreateFulfillmentScript
# body param: body
echo '{"grantDays": "ZGf3k0Rb"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateFulfillmentScript \
    --id '9WJZa09p' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 4 'CreateFulfillmentScript' test.out

#- 5 DeleteFulfillmentScript
$CLI_EXE \
    --sn platform \
    --op DeleteFulfillmentScript \
    --id '886geAw4' \
    > test.out 2>&1
eval_tap $? 5 'DeleteFulfillmentScript' test.out

#- 6 UpdateFulfillmentScript
# body param: body
echo '{"grantDays": "p1612fVx"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateFulfillmentScript \
    --id 'XrFC1AjB' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 6 'UpdateFulfillmentScript' test.out

#- 7 ListItemTypeConfigs
$CLI_EXE \
    --sn platform \
    --op ListItemTypeConfigs \
    > test.out 2>&1
eval_tap $? 7 'ListItemTypeConfigs' test.out

#- 8 CreateItemTypeConfig
# body param: body
echo '{"clazz": "ZYshTEtV", "dryRun": true, "fulfillmentUrl": "JEn3bNKj", "itemType": "BUNDLE", "purchaseConditionUrl": "tEhKtaVJ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateItemTypeConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 8 'CreateItemTypeConfig' test.out

#- 9 SearchItemTypeConfig
$CLI_EXE \
    --sn platform \
    --op SearchItemTypeConfig \
    --clazz '7GahRRPW' \
    --itemType 'INGAMEITEM' \
    > test.out 2>&1
eval_tap $? 9 'SearchItemTypeConfig' test.out

#- 10 GetItemTypeConfig
$CLI_EXE \
    --sn platform \
    --op GetItemTypeConfig \
    --id 'HSPpHoi9' \
    > test.out 2>&1
eval_tap $? 10 'GetItemTypeConfig' test.out

#- 11 UpdateItemTypeConfig
# body param: body
echo '{"clazz": "5W3dIQXL", "dryRun": true, "fulfillmentUrl": "HLwrsEzR", "purchaseConditionUrl": "h17vBm4B"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateItemTypeConfig \
    --id 'KnTAoUol' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 11 'UpdateItemTypeConfig' test.out

#- 12 DeleteItemTypeConfig
$CLI_EXE \
    --sn platform \
    --op DeleteItemTypeConfig \
    --id 'nBQoPIYV' \
    > test.out 2>&1
eval_tap $? 12 'DeleteItemTypeConfig' test.out

#- 13 QueryCampaigns
$CLI_EXE \
    --sn platform \
    --op QueryCampaigns \
    --namespace $AB_NAMESPACE \
    --limit '12' \
    --name 'pT6SYy28' \
    --offset '15' \
    --tag 'RS0VcS5l' \
    > test.out 2>&1
eval_tap $? 13 'QueryCampaigns' test.out

#- 14 CreateCampaign
# body param: body
echo '{"description": "DZpwJy8l", "discountConfig": {"categories": [{"categoryPath": "Pe6Agbkx", "includeSubCategories": true}, {"categoryPath": "x0xIM4YQ", "includeSubCategories": true}, {"categoryPath": "5wmmonwx", "includeSubCategories": false}], "currencyCode": "vfIYvQn4", "currencyNamespace": "WlFEzUxM", "discountAmount": 70, "discountPercentage": 24, "discountType": "AMOUNT", "items": [{"itemId": "55ZdSDZs", "itemName": "nieZRI5D"}, {"itemId": "eeKW4BCU", "itemName": "6cy1xwBJ"}, {"itemId": "nEYSQfRE", "itemName": "nsr55Jqj"}], "restrictType": "NONE", "stackable": false}, "items": [{"extraSubscriptionDays": 15, "itemId": "fiXP7nOi", "itemName": "seKlx4FH", "quantity": 39}, {"extraSubscriptionDays": 68, "itemId": "lKmQO4oy", "itemName": "nVNhCGx4", "quantity": 5}, {"extraSubscriptionDays": 51, "itemId": "ZxROVqSH", "itemName": "My1MW9XV", "quantity": 2}], "maxRedeemCountPerCampaignPerUser": 2, "maxRedeemCountPerCode": 69, "maxRedeemCountPerCodePerUser": 14, "maxSaleCount": 52, "name": "C14wUvTW", "redeemEnd": "1993-10-20T00:00:00Z", "redeemStart": "1980-08-14T00:00:00Z", "redeemType": "DISCOUNT", "status": "ACTIVE", "tags": ["zwbiOrL8", "ENHUMM4S", "ANz5g4c6"], "type": "REDEMPTION"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCampaign \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 14 'CreateCampaign' test.out

#- 15 GetCampaign
$CLI_EXE \
    --sn platform \
    --op GetCampaign \
    --campaignId 'ir7TrOkv' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 15 'GetCampaign' test.out

#- 16 UpdateCampaign
# body param: body
echo '{"description": "yzOjCkuB", "discountConfig": {"categories": [{"categoryPath": "SL4Gjvig", "includeSubCategories": false}, {"categoryPath": "qHv7W1xu", "includeSubCategories": false}, {"categoryPath": "7nC93iCB", "includeSubCategories": false}], "currencyCode": "PJ1NvO0c", "currencyNamespace": "RIVC3zJg", "discountAmount": 21, "discountPercentage": 24, "discountType": "AMOUNT", "items": [{"itemId": "jYAuAiln", "itemName": "OmzoshIH"}, {"itemId": "xHCr90le", "itemName": "A230QzNJ"}, {"itemId": "WoS7Zdsk", "itemName": "CSJLbbYv"}], "restrictType": "ITEMS_AND_CATEGORIES", "stackable": false}, "items": [{"extraSubscriptionDays": 16, "itemId": "IBIUp73T", "itemName": "Bu0xtlWt", "quantity": 32}, {"extraSubscriptionDays": 94, "itemId": "CGPdpJ5m", "itemName": "Juh2Ugmd", "quantity": 63}, {"extraSubscriptionDays": 35, "itemId": "kHqbK0xL", "itemName": "GuUj8tUT", "quantity": 3}], "maxRedeemCountPerCampaignPerUser": 53, "maxRedeemCountPerCode": 13, "maxRedeemCountPerCodePerUser": 52, "maxSaleCount": 63, "name": "iWjz0RKH", "redeemEnd": "1980-06-23T00:00:00Z", "redeemStart": "1980-11-06T00:00:00Z", "redeemType": "ITEM", "status": "INACTIVE", "tags": ["gw2p52d5", "cvyjVPiA", "o6d9aVFx"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCampaign \
    --campaignId 'dEhWmfuW' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 16 'UpdateCampaign' test.out

#- 17 RenameBatch
# body param: body
echo '{"newName": "C9l0n532", "oldName": "zCtlbfTM"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RenameBatch \
    --campaignId 'Er6MTjS4' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 17 'RenameBatch' test.out

#- 18 QueryCampaignBatchNames
$CLI_EXE \
    --sn platform \
    --op QueryCampaignBatchNames \
    --campaignId 'nkmMeDhR' \
    --namespace $AB_NAMESPACE \
    --batchName 'Q6MFFVPp' \
    --limit '59' \
    > test.out 2>&1
eval_tap $? 18 'QueryCampaignBatchNames' test.out

#- 19 GetCampaignDynamic
$CLI_EXE \
    --sn platform \
    --op GetCampaignDynamic \
    --campaignId 'wgDi4Snl' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 19 'GetCampaignDynamic' test.out

#- 20 GetCatalogConfig
$CLI_EXE \
    --sn platform \
    --op GetCatalogConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 20 'GetCatalogConfig' test.out

#- 21 UpdateCatalogConfig
# body param: body
echo '{"enableInventoryCheck": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCatalogConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 21 'UpdateCatalogConfig' test.out

#- 22 GetLootBoxPluginConfig
$CLI_EXE \
    --sn platform \
    --op GetLootBoxPluginConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 22 'GetLootBoxPluginConfig' test.out

#- 23 UpdateLootBoxPluginConfig
# body param: body
echo '{"appConfig": {"appName": "XCrViTMc"}, "customConfig": {"connectionType": "INSECURE", "grpcServerAddress": "tfRBeQMW"}, "extendType": "APP"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateLootBoxPluginConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 23 'UpdateLootBoxPluginConfig' test.out

#- 24 DeleteLootBoxPluginConfig
$CLI_EXE \
    --sn platform \
    --op DeleteLootBoxPluginConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 24 'DeleteLootBoxPluginConfig' test.out

#- 25 UplodLootBoxPluginConfigCert
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UplodLootBoxPluginConfigCert \
    --namespace $AB_NAMESPACE \
    --upload file $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 25 'UplodLootBoxPluginConfigCert' test.out

#- 26 GetLootBoxGrpcInfo
$CLI_EXE \
    --sn platform \
    --op GetLootBoxGrpcInfo \
    --namespace $AB_NAMESPACE \
    --force 'true' \
    > test.out 2>&1
eval_tap $? 26 'GetLootBoxGrpcInfo' test.out

#- 27 GetSectionPluginConfig
$CLI_EXE \
    --sn platform \
    --op GetSectionPluginConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 27 'GetSectionPluginConfig' test.out

#- 28 UpdateSectionPluginConfig
# body param: body
echo '{"appConfig": {"appName": "RbDpGESk"}, "customConfig": {"connectionType": "TLS", "grpcServerAddress": "IHpNDPoj"}, "extendType": "APP"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateSectionPluginConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 28 'UpdateSectionPluginConfig' test.out

#- 29 DeleteSectionPluginConfig
$CLI_EXE \
    --sn platform \
    --op DeleteSectionPluginConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 29 'DeleteSectionPluginConfig' test.out

#- 30 UploadSectionPluginConfigCert
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UploadSectionPluginConfigCert \
    --namespace $AB_NAMESPACE \
    --upload file $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 30 'UploadSectionPluginConfigCert' test.out

#- 31 GetRootCategories
$CLI_EXE \
    --sn platform \
    --op GetRootCategories \
    --namespace $AB_NAMESPACE \
    --storeId 'JP7uCS9i' \
    > test.out 2>&1
eval_tap $? 31 'GetRootCategories' test.out

#- 32 CreateCategory
# body param: body
echo '{"categoryPath": "ZcDwgjfJ", "localizationDisplayNames": {"qERf4s0E": "rd2pvcTQ", "APXSaWvi": "88wB3WBP", "54Nq7FV8": "LUWkLspR"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCategory \
    --namespace $AB_NAMESPACE \
    --storeId 'm7fabKeB' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 32 'CreateCategory' test.out

#- 33 ListCategoriesBasic
$CLI_EXE \
    --sn platform \
    --op ListCategoriesBasic \
    --namespace $AB_NAMESPACE \
    --storeId 'TsmJl3UY' \
    > test.out 2>&1
eval_tap $? 33 'ListCategoriesBasic' test.out

#- 34 GetCategory
$CLI_EXE \
    --sn platform \
    --op GetCategory \
    --categoryPath '88YckHTS' \
    --namespace $AB_NAMESPACE \
    --storeId 'bvGcsVpK' \
    > test.out 2>&1
eval_tap $? 34 'GetCategory' test.out

#- 35 UpdateCategory
# body param: body
echo '{"localizationDisplayNames": {"yolz4JA4": "DfPRjGvD", "0Vjjij99": "jVFXyYLs", "LEmS4Q8m": "igIiXFyr"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCategory \
    --categoryPath 'eJT8qRSN' \
    --namespace $AB_NAMESPACE \
    --storeId 'HuotLcm3' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 35 'UpdateCategory' test.out

#- 36 DeleteCategory
$CLI_EXE \
    --sn platform \
    --op DeleteCategory \
    --categoryPath 'kqKQSTWx' \
    --namespace $AB_NAMESPACE \
    --storeId 'PFFdIkRt' \
    > test.out 2>&1
eval_tap $? 36 'DeleteCategory' test.out

#- 37 GetChildCategories
$CLI_EXE \
    --sn platform \
    --op GetChildCategories \
    --categoryPath 'XFTgN19R' \
    --namespace $AB_NAMESPACE \
    --storeId 'lFMhAKtn' \
    > test.out 2>&1
eval_tap $? 37 'GetChildCategories' test.out

#- 38 GetDescendantCategories
$CLI_EXE \
    --sn platform \
    --op GetDescendantCategories \
    --categoryPath '5SJTQrab' \
    --namespace $AB_NAMESPACE \
    --storeId 'sttVG9bf' \
    > test.out 2>&1
eval_tap $? 38 'GetDescendantCategories' test.out

#- 39 QueryCodes
$CLI_EXE \
    --sn platform \
    --op QueryCodes \
    --campaignId 'w5UR4BfU' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --batchName 'fqaCqvF2' \
    --batchNo '[42, 44, 90]' \
    --code 'xuPWiOJp' \
    --limit '58' \
    --offset '25' \
    --withBatchName 'true' \
    > test.out 2>&1
eval_tap $? 39 'QueryCodes' test.out

#- 40 CreateCodes
# body param: body
echo '{"batchName": "YzXqWR9H", "codeValue": "ovFb4OhY", "quantity": 6}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCodes \
    --campaignId 'Ary4Gg0G' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 40 'CreateCodes' test.out

#- 41 Download
$CLI_EXE \
    --sn platform \
    --op Download \
    --campaignId '4ZzZCtVx' \
    --namespace $AB_NAMESPACE \
    --batchName '0BZW3AdE' \
    --batchNo '[96, 31, 45]' \
    --withBatchName 'false' \
    > test.out 2>&1
eval_tap $? 41 'Download' test.out

#- 42 BulkDisableCodes
$CLI_EXE \
    --sn platform \
    --op BulkDisableCodes \
    --campaignId 'YopJ1cqM' \
    --namespace $AB_NAMESPACE \
    --batchName 'HCIySzcH' \
    --batchNo '[71, 80, 75]' \
    > test.out 2>&1
eval_tap $? 42 'BulkDisableCodes' test.out

#- 43 BulkEnableCodes
$CLI_EXE \
    --sn platform \
    --op BulkEnableCodes \
    --campaignId 'V1xJb3RU' \
    --namespace $AB_NAMESPACE \
    --batchName 'gKanyfqN' \
    --batchNo '[68, 16, 84]' \
    > test.out 2>&1
eval_tap $? 43 'BulkEnableCodes' test.out

#- 44 QueryRedeemHistory
$CLI_EXE \
    --sn platform \
    --op QueryRedeemHistory \
    --campaignId 'xFcRAgAL' \
    --namespace $AB_NAMESPACE \
    --code 'y10AZJI2' \
    --limit '13' \
    --offset '12' \
    --userId 'x1PUe8Uk' \
    > test.out 2>&1
eval_tap $? 44 'QueryRedeemHistory' test.out

#- 45 GetCode
$CLI_EXE \
    --sn platform \
    --op GetCode \
    --code 'eQHwmIVH' \
    --namespace $AB_NAMESPACE \
    --redeemable 'false' \
    --withBatchName 'false' \
    > test.out 2>&1
eval_tap $? 45 'GetCode' test.out

#- 46 DisableCode
$CLI_EXE \
    --sn platform \
    --op DisableCode \
    --code '6DdyCbIy' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 46 'DisableCode' test.out

#- 47 EnableCode
$CLI_EXE \
    --sn platform \
    --op EnableCode \
    --code '2gHeLSkQ' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 47 'EnableCode' test.out

#- 48 GetServicePluginConfig
eval_tap 0 48 'GetServicePluginConfig # SKIP deprecated' test.out

#- 49 UpdateServicePluginConfig
eval_tap 0 49 'UpdateServicePluginConfig # SKIP deprecated' test.out

#- 50 DeleteServicePluginConfig
eval_tap 0 50 'DeleteServicePluginConfig # SKIP deprecated' test.out

#- 51 ListCurrencies
$CLI_EXE \
    --sn platform \
    --op ListCurrencies \
    --namespace $AB_NAMESPACE \
    --currencyType 'VIRTUAL' \
    > test.out 2>&1
eval_tap $? 51 'ListCurrencies' test.out

#- 52 CreateCurrency
# body param: body
echo '{"currencyCode": "2xkUvySH", "currencySymbol": "Jjwz0Aee", "currencyType": "REAL", "decimals": 32, "localizationDescriptions": {"I75EY2AY": "rkzn8HPb", "VflcFGWi": "G6Fca1ih", "MgKo9Ue4": "cWSf7eAv"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCurrency \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 52 'CreateCurrency' test.out

#- 53 UpdateCurrency
# body param: body
echo '{"localizationDescriptions": {"eoXjovsk": "mz4CrSmU", "oaIcusGi": "xmp4tJxF", "JRra7OJ1": "90o6RVhC"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCurrency \
    --currencyCode 'rxz6IYGj' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 53 'UpdateCurrency' test.out

#- 54 DeleteCurrency
$CLI_EXE \
    --sn platform \
    --op DeleteCurrency \
    --currencyCode '4q4WMieh' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 54 'DeleteCurrency' test.out

#- 55 GetCurrencyConfig
$CLI_EXE \
    --sn platform \
    --op GetCurrencyConfig \
    --currencyCode 'GCIpzzzm' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 55 'GetCurrencyConfig' test.out

#- 56 GetCurrencySummary
$CLI_EXE \
    --sn platform \
    --op GetCurrencySummary \
    --currencyCode 'lEesSh4m' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 56 'GetCurrencySummary' test.out

#- 57 GetDLCItemConfig
$CLI_EXE \
    --sn platform \
    --op GetDLCItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 57 'GetDLCItemConfig' test.out

#- 58 UpdateDLCItemConfig
# body param: body
echo '{"data": [{"id": "Ew71p5jZ", "rewards": [{"currency": {"currencyCode": "HHDpFh4S", "namespace": "hpFahGFc"}, "item": {"itemId": "ujWF3i4p", "itemName": "OKgWV2Io", "itemSku": "qUW7dSeo", "itemType": "1EdAKQSU"}, "quantity": 81, "type": "CURRENCY"}, {"currency": {"currencyCode": "mfEkANNe", "namespace": "0X5i4oxl"}, "item": {"itemId": "zGvLXln0", "itemName": "ecFiv9TQ", "itemSku": "VSv1d96H", "itemType": "LmXyRh7J"}, "quantity": 70, "type": "CURRENCY"}, {"currency": {"currencyCode": "QBanhpY3", "namespace": "2eQ2SDXW"}, "item": {"itemId": "8YYjs9kR", "itemName": "eaBnaPLU", "itemSku": "oBGmWhgX", "itemType": "UfJ8GnQX"}, "quantity": 77, "type": "ITEM"}]}, {"id": "gLyhzCzT", "rewards": [{"currency": {"currencyCode": "Rsx5pCCY", "namespace": "2yy3UbOU"}, "item": {"itemId": "dxwBCWx7", "itemName": "9lvEvCCN", "itemSku": "IT6a7V1o", "itemType": "QZ1B3DpM"}, "quantity": 99, "type": "CURRENCY"}, {"currency": {"currencyCode": "o4cRrYUX", "namespace": "mCFgEDzn"}, "item": {"itemId": "mSVtJn6j", "itemName": "NoH5Z4op", "itemSku": "jJFTY4lm", "itemType": "YixUs8oh"}, "quantity": 84, "type": "CURRENCY"}, {"currency": {"currencyCode": "nMKcrvoc", "namespace": "TH68GDhJ"}, "item": {"itemId": "gTZgOWC6", "itemName": "7KEgFk6T", "itemSku": "P3p4c92A", "itemType": "H2yHFeUe"}, "quantity": 24, "type": "CURRENCY"}]}, {"id": "Dmm5POQE", "rewards": [{"currency": {"currencyCode": "3A7mnmhC", "namespace": "UVM5Fwy7"}, "item": {"itemId": "9it7qCy2", "itemName": "d5hgm8Fr", "itemSku": "iJWj7cCe", "itemType": "370CRGAD"}, "quantity": 86, "type": "CURRENCY"}, {"currency": {"currencyCode": "cwscNDhc", "namespace": "iLmJ3bRE"}, "item": {"itemId": "AX8f3hXG", "itemName": "RsOYBu4C", "itemSku": "gGa21i3A", "itemType": "BTUjKF4H"}, "quantity": 32, "type": "CURRENCY"}, {"currency": {"currencyCode": "AzyqxEMF", "namespace": "9zNSAPbJ"}, "item": {"itemId": "pkTgThgH", "itemName": "WrXGRqvM", "itemSku": "vr8VqJzY", "itemType": "VfOhfgGL"}, "quantity": 75, "type": "CURRENCY"}]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateDLCItemConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 58 'UpdateDLCItemConfig' test.out

#- 59 DeleteDLCItemConfig
$CLI_EXE \
    --sn platform \
    --op DeleteDLCItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 59 'DeleteDLCItemConfig' test.out

#- 60 GetPlatformDLCConfig
$CLI_EXE \
    --sn platform \
    --op GetPlatformDLCConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 60 'GetPlatformDLCConfig' test.out

#- 61 UpdatePlatformDLCConfig
# body param: body
echo '{"data": [{"platform": "EPICGAMES", "platformDlcIdMap": {"pwDEoW0s": "HHqbWBoR", "uafJNnIM": "xQvpLWep", "3G90yl5c": "1taIHWRO"}}, {"platform": "OCULUS", "platformDlcIdMap": {"2UkMeofa": "lyRghdD8", "DuZmCN6U": "Qrnoa5KB", "oFIVowVH": "ypObbfQY"}}, {"platform": "OCULUS", "platformDlcIdMap": {"xURKA4Ol": "Rq2wXwiN", "Rh5NLnvb": "ePlXSc60", "OTKrFj0W": "alx9RHWj"}}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePlatformDLCConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 61 'UpdatePlatformDLCConfig' test.out

#- 62 DeletePlatformDLCConfig
$CLI_EXE \
    --sn platform \
    --op DeletePlatformDLCConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 62 'DeletePlatformDLCConfig' test.out

#- 63 QueryEntitlements1
$CLI_EXE \
    --sn platform \
    --op QueryEntitlements1 \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --appType 'DEMO' \
    --entitlementClazz 'OPTIONBOX' \
    --entitlementName 'DSp2RW9z' \
    --itemId '["3H6pCaaT", "5btlM2YF", "NwlJeLAe"]' \
    --limit '27' \
    --offset '85' \
    --origin 'Playstation' \
    --userId '2WykOd3m' \
    > test.out 2>&1
eval_tap $? 63 'QueryEntitlements1' test.out

#- 64 QueryEntitlements
$CLI_EXE \
    --sn platform \
    --op QueryEntitlements \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --itemIds '["bB09AhSL", "B9EugjaQ", "Rae6erv4"]' \
    --limit '56' \
    --offset '21' \
    > test.out 2>&1
eval_tap $? 64 'QueryEntitlements' test.out

#- 65 EnableEntitlementOriginFeature
$CLI_EXE \
    --sn platform \
    --op EnableEntitlementOriginFeature \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 65 'EnableEntitlementOriginFeature' test.out

#- 66 GetEntitlementConfigInfo
$CLI_EXE \
    --sn platform \
    --op GetEntitlementConfigInfo \
    --namespace $AB_NAMESPACE \
    --withoutCache 'false' \
    > test.out 2>&1
eval_tap $? 66 'GetEntitlementConfigInfo' test.out

#- 67 GrantEntitlements
# body param: body
echo '{"entitlementGrantList": [{"collectionId": "jfLAwBdg", "endDate": "1973-11-28T00:00:00Z", "grantedCode": "8LQuwt5a", "itemId": "KLncCltf", "itemNamespace": "QsI7G5SG", "language": "HVte_yNmN-291", "metadata": {"V1OqlvAR": {}, "0DrVpwkb": {}, "WN1BCtBb": {}}, "origin": "Nintendo", "quantity": 88, "region": "FST48lZT", "source": "REFERRAL_BONUS", "startDate": "1981-09-16T00:00:00Z", "storeId": "3h4GbIiw"}, {"collectionId": "j7xNrUyr", "endDate": "1984-08-19T00:00:00Z", "grantedCode": "IwrfJawd", "itemId": "PdWP2aIQ", "itemNamespace": "qtlQrNh6", "language": "UYs", "metadata": {"vzyIi6PD": {}, "HoWmH1EE": {}, "pR4jeWzR": {}}, "origin": "System", "quantity": 4, "region": "LLy7xYiy", "source": "PROMOTION", "startDate": "1996-01-26T00:00:00Z", "storeId": "5JvHRpn0"}, {"collectionId": "W65ykfWL", "endDate": "1983-05-12T00:00:00Z", "grantedCode": "W3Y8JNl8", "itemId": "iRUL4VSV", "itemNamespace": "B2cWexNP", "language": "JV_qkFV-779", "metadata": {"KfgSvKRa": {}, "9tTnR0Vl": {}, "pUJpoQ4x": {}}, "origin": "System", "quantity": 31, "region": "eG274DVr", "source": "ACHIEVEMENT", "startDate": "1983-05-05T00:00:00Z", "storeId": "IKfh9ICw"}], "userIds": ["ruDn6XMu", "2OsTQ0up", "6qy5TutK"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op GrantEntitlements \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 67 'GrantEntitlements' test.out

#- 68 RevokeEntitlements
# body param: body
echo '["XZtdYkzC", "VdeLYHrB", "88IfEBJ6"]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RevokeEntitlements \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 68 'RevokeEntitlements' test.out

#- 69 GetEntitlement
$CLI_EXE \
    --sn platform \
    --op GetEntitlement \
    --entitlementId 'fCfKDUCU' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 69 'GetEntitlement' test.out

#- 70 QueryFulfillmentHistories
$CLI_EXE \
    --sn platform \
    --op QueryFulfillmentHistories \
    --namespace $AB_NAMESPACE \
    --limit '27' \
    --offset '41' \
    --status 'SUCCESS' \
    --userId 'NnQlptbX' \
    > test.out 2>&1
eval_tap $? 70 'QueryFulfillmentHistories' test.out

#- 71 QueryIAPClawbackHistory
$CLI_EXE \
    --sn platform \
    --op QueryIAPClawbackHistory \
    --namespace $AB_NAMESPACE \
    --endTime 'gUzPeWGt' \
    --eventType 'CHARGEBACK' \
    --externalOrderId 'jlIPHgm4' \
    --limit '90' \
    --offset '47' \
    --startTime 'gTrbQYwk' \
    --status 'INIT' \
    --userId 'zRdrFHmA' \
    > test.out 2>&1
eval_tap $? 71 'QueryIAPClawbackHistory' test.out

#- 72 MockPlayStationStreamEvent
# body param: body
echo '{"body": {"account": "tV74w2c6", "additionalData": {"entitlement": [{"clientTransaction": [{"amountConsumed": 66, "clientTransactionId": "0Mnh8LB3"}, {"amountConsumed": 78, "clientTransactionId": "aMJ9I3ow"}, {"amountConsumed": 43, "clientTransactionId": "cgFGOfJ2"}], "entitlementId": "dNg3ucN3", "usageCount": 41}, {"clientTransaction": [{"amountConsumed": 0, "clientTransactionId": "qUBv79n9"}, {"amountConsumed": 33, "clientTransactionId": "jIf0BZLH"}, {"amountConsumed": 66, "clientTransactionId": "srFAy82t"}], "entitlementId": "LGENWCqe", "usageCount": 95}, {"clientTransaction": [{"amountConsumed": 90, "clientTransactionId": "yOacd8TB"}, {"amountConsumed": 63, "clientTransactionId": "GjL9AByr"}, {"amountConsumed": 42, "clientTransactionId": "bd4UtihF"}], "entitlementId": "p6lION6F", "usageCount": 11}], "purpose": "Re3jMvre"}, "originalTitleName": "63i6bpvj", "paymentProductSKU": "OhecGZg6", "purchaseDate": "3N9Z3YZH", "sourceOrderItemId": "DgjhhbPR", "titleName": "rbGPdwGd"}, "eventDomain": "bFpITP7j", "eventSource": "eJPU6CWK", "eventType": "rjzQL7gg", "eventVersion": 39, "id": "myLlC7dB", "timestamp": "n3fSoqqb"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op MockPlayStationStreamEvent \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 72 'MockPlayStationStreamEvent' test.out

#- 73 MockXblClawbackEvent
# body param: body
echo '{"data": {"eventDate": "ww0YqcBR", "eventState": "8DWL5hxH", "lineItemId": "9qVBXck4", "orderId": "qB1s40p8", "productId": "Mcv83jrA", "productType": "VDv4irYZ", "purchasedDate": "8iXT1lFC", "sandboxId": "iqX2edeX", "skuId": "NYJFdTBI", "subscriptionData": {"consumedDurationInDays": 23, "dateTime": "l7jrjt11", "durationInDays": 40, "recurrenceId": "aDDsOwTy"}}, "datacontenttype": "gs8MPluk", "id": "b63uT2mf", "source": "9XSOXQ8E", "specVersion": "l7KIPGCe", "subject": "kOz6wQBX", "time": "YDHwq6o3", "traceparent": "Hf4cYTLj", "type": "y4WCAX9a"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op MockXblClawbackEvent \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 73 'MockXblClawbackEvent' test.out

#- 74 GetAppleIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetAppleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 74 'GetAppleIAPConfig' test.out

#- 75 UpdateAppleIAPConfig
# body param: body
echo '{"appAppleId": 45, "bundleId": "FlNOE3EP", "issuerId": "fuGCvoTY", "keyId": "ldsjETBL", "password": "jhzGS1gE", "version": "V1"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateAppleIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 75 'UpdateAppleIAPConfig' test.out

#- 76 DeleteAppleIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteAppleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 76 'DeleteAppleIAPConfig' test.out

#- 77 UpdateAppleP8File
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UpdateAppleP8File \
    --namespace $AB_NAMESPACE \
    --upload file $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 77 'UpdateAppleP8File' test.out

#- 78 GetEpicGamesIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetEpicGamesIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 78 'GetEpicGamesIAPConfig' test.out

#- 79 UpdateEpicGamesIAPConfig
# body param: body
echo '{"sandboxId": "NYeCxaNO"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateEpicGamesIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 79 'UpdateEpicGamesIAPConfig' test.out

#- 80 DeleteEpicGamesIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteEpicGamesIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 80 'DeleteEpicGamesIAPConfig' test.out

#- 81 GetGoogleIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetGoogleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 81 'GetGoogleIAPConfig' test.out

#- 82 UpdateGoogleIAPConfig
# body param: body
echo '{"applicationName": "Ud0hgauQ", "notificationTokenAudience": "OIrTogpN", "notificationTokenEmail": "hjWLDFc9", "packageName": "Gj1twASp", "serviceAccountId": "Inu6pQzq"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateGoogleIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 82 'UpdateGoogleIAPConfig' test.out

#- 83 DeleteGoogleIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteGoogleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 83 'DeleteGoogleIAPConfig' test.out

#- 84 UpdateGoogleP12File
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UpdateGoogleP12File \
    --namespace $AB_NAMESPACE \
    --upload file $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 84 'UpdateGoogleP12File' test.out

#- 85 GetIAPItemConfig
$CLI_EXE \
    --sn platform \
    --op GetIAPItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 85 'GetIAPItemConfig' test.out

#- 86 UpdateIAPItemConfig
# body param: body
echo '{"data": [{"itemIdentity": "wUGDBLBS", "itemIdentityType": "ITEM_ID", "platformProductIdMap": {"zDJpbOCY": "kprObfY7", "rLyitdEF": "qNxYxBLa", "PPUWOyYL": "9x7VmQ2a"}}, {"itemIdentity": "nTjQxp6K", "itemIdentityType": "ITEM_ID", "platformProductIdMap": {"VHHEL4nV": "YtFduNBU", "oTBtCfnc": "PX1IMErA", "gFfZ6v8P": "jMgSVa6g"}}, {"itemIdentity": "8M6NVTlb", "itemIdentityType": "ITEM_SKU", "platformProductIdMap": {"CFmMrXOC": "fieGk3Bd", "hk3XoPsI": "rZKDfzNZ", "l0Ke4Z2R": "ux4oTYJ1"}}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateIAPItemConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 86 'UpdateIAPItemConfig' test.out

#- 87 DeleteIAPItemConfig
$CLI_EXE \
    --sn platform \
    --op DeleteIAPItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 87 'DeleteIAPItemConfig' test.out

#- 88 GetOculusIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetOculusIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 88 'GetOculusIAPConfig' test.out

#- 89 UpdateOculusIAPConfig
# body param: body
echo '{"appId": "VkaFOvY5", "appSecret": "Lwt7UWxM"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateOculusIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 89 'UpdateOculusIAPConfig' test.out

#- 90 DeleteOculusIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteOculusIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 90 'DeleteOculusIAPConfig' test.out

#- 91 GetPlayStationIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetPlayStationIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 91 'GetPlayStationIAPConfig' test.out

#- 92 UpdatePlaystationIAPConfig
# body param: body
echo '{"backOfficeServerClientId": "CRkvnmsZ", "backOfficeServerClientSecret": "rLqhLlpY", "enableStreamJob": true, "environment": "DM3hEove", "streamName": "nx2pXD08", "streamPartnerName": "zLwRiFnR"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePlaystationIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 92 'UpdatePlaystationIAPConfig' test.out

#- 93 DeletePlaystationIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeletePlaystationIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 93 'DeletePlaystationIAPConfig' test.out

#- 94 ValidateExistedPlaystationIAPConfig
$CLI_EXE \
    --sn platform \
    --op ValidateExistedPlaystationIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 94 'ValidateExistedPlaystationIAPConfig' test.out

#- 95 ValidatePlaystationIAPConfig
# body param: body
echo '{"backOfficeServerClientId": "0Uk9x0DL", "backOfficeServerClientSecret": "NpkLJRcS", "enableStreamJob": true, "environment": "ztXVROFp", "streamName": "7An1aLmq", "streamPartnerName": "1BHs9zAO"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ValidatePlaystationIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 95 'ValidatePlaystationIAPConfig' test.out

#- 96 GetSteamIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetSteamIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 96 'GetSteamIAPConfig' test.out

#- 97 UpdateSteamIAPConfig
# body param: body
echo '{"appId": "sqzmHLyP", "publisherAuthenticationKey": "osXY2E7y"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateSteamIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 97 'UpdateSteamIAPConfig' test.out

#- 98 DeleteSteamIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteSteamIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 98 'DeleteSteamIAPConfig' test.out

#- 99 GetTwitchIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetTwitchIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 99 'GetTwitchIAPConfig' test.out

#- 100 UpdateTwitchIAPConfig
# body param: body
echo '{"clientId": "Q9HCCfhi", "clientSecret": "riDg8zu0", "organizationId": "RwfWkXxj"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateTwitchIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 100 'UpdateTwitchIAPConfig' test.out

#- 101 DeleteTwitchIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteTwitchIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 101 'DeleteTwitchIAPConfig' test.out

#- 102 GetXblIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetXblIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 102 'GetXblIAPConfig' test.out

#- 103 UpdateXblIAPConfig
# body param: body
echo '{"enableClawback": false, "entraAppClientId": "LXCl6PhU", "entraAppClientSecret": "9XF4Li2B", "entraTenantId": "MKNnvtEu", "relyingPartyCert": "EKFcIygR"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXblIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 103 'UpdateXblIAPConfig' test.out

#- 104 DeleteXblAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteXblAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 104 'DeleteXblAPConfig' test.out

#- 105 UpdateXblBPCertFile
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UpdateXblBPCertFile \
    --namespace $AB_NAMESPACE \
    --upload file $TEMP_FILE_UPLOAD \
    --password 'IhawVm9t' \
    > test.out 2>&1
eval_tap $? 105 'UpdateXblBPCertFile' test.out

#- 106 QueryThirdPartyNotifications
$CLI_EXE \
    --sn platform \
    --op QueryThirdPartyNotifications \
    --namespace $AB_NAMESPACE \
    --endDate '7mMasOun' \
    --externalId 'ZhJOTN6q' \
    --limit '33' \
    --offset '84' \
    --source 'PLAYSTATION' \
    --startDate 'TIMiKbxI' \
    --status 'IGNORED' \
    --type 'ePUnFGIs' \
    > test.out 2>&1
eval_tap $? 106 'QueryThirdPartyNotifications' test.out

#- 107 QueryThirdPartySubscription
$CLI_EXE \
    --sn platform \
    --op QueryThirdPartySubscription \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --groupId 'Byyc1dgO' \
    --limit '90' \
    --offset '57' \
    --platform 'OCULUS' \
    --productId '5yDpqDkx' \
    --userId 'gxTfrT0Z' \
    > test.out 2>&1
eval_tap $? 107 'QueryThirdPartySubscription' test.out

#- 108 GetIAPOrderConsumeDetails
$CLI_EXE \
    --sn platform \
    --op GetIAPOrderConsumeDetails \
    --iapOrderNo '0qL85Bpb' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 108 'GetIAPOrderConsumeDetails' test.out

#- 109 DownloadInvoiceDetails
$CLI_EXE \
    --sn platform \
    --op DownloadInvoiceDetails \
    --namespace $AB_NAMESPACE \
    --endTime 'blLkRsV4' \
    --feature 'WnzW9vQ6' \
    --itemId 'CpmkhvRV' \
    --itemType 'SEASON' \
    --startTime 'yjRRZEkG' \
    > test.out 2>&1
eval_tap $? 109 'DownloadInvoiceDetails' test.out

#- 110 GenerateInvoiceSummary
$CLI_EXE \
    --sn platform \
    --op GenerateInvoiceSummary \
    --namespace $AB_NAMESPACE \
    --endTime 'ki4hXkOC' \
    --feature '7p2J0znH' \
    --itemId 'sGeWY7qY' \
    --itemType 'OPTIONBOX' \
    --startTime 'iARPtPYb' \
    > test.out 2>&1
eval_tap $? 110 'GenerateInvoiceSummary' test.out

#- 111 SyncInGameItem
# body param: body
echo '{"categoryPath": "3GI0SsKn", "targetItemId": "NAxBVXvN", "targetNamespace": "AWzYdJ9q"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncInGameItem \
    --namespace $AB_NAMESPACE \
    --storeId '2AP7hfCf' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 111 'SyncInGameItem' test.out

#- 112 CreateItem
# body param: body
echo '{"appId": "vlS54FMd", "appType": "GAME", "baseAppId": "XHzQPfYz", "boothName": "sJXDvnvy", "categoryPath": "9VqZ6OXm", "clazz": "a3R89wj9", "displayOrder": 1, "entitlementType": "DURABLE", "ext": {"7tbAxyY2": {}, "PUhKDWxm": {}, "ycadc6n7": {}}, "features": ["0Ns7jEyd", "LtgjnWNd", "uqsqjzIb"], "flexible": true, "images": [{"as": "1u0XCA2D", "caption": "JxqB7RM2", "height": 15, "imageUrl": "XIIO08Ff", "smallImageUrl": "iEW6WkDY", "width": 62}, {"as": "NwKPq0hf", "caption": "8p3vjzf6", "height": 89, "imageUrl": "KNM7ybPk", "smallImageUrl": "5DE4rPMZ", "width": 20}, {"as": "N2ZMd1cl", "caption": "fNnE7slk", "height": 4, "imageUrl": "AQIqVOK1", "smallImageUrl": "1GfrNpWU", "width": 38}], "inventoryConfig": {"customAttributes": {"PYvUKjfu": {}, "xyvVum2k": {}, "VBdf0Etf": {}}, "serverCustomAttributes": {"L2SrPxD7": {}, "yVAYkvyl": {}, "6CD2CPyg": {}}, "slotUsed": 82}, "itemIds": ["NShxmYYA", "GzwVUVv6", "n6W5cGqd"], "itemQty": {"0RhBZscX": 36, "hBBjNYCl": 49, "VYDr2koK": 61}, "itemType": "SUBSCRIPTION", "listable": true, "localizations": {"bXtc3KeU": {"description": "B641UDKj", "localExt": {"KRokmnR0": {}, "c5GNdzN0": {}, "4SDl3P1T": {}}, "longDescription": "s4g4h3Mj", "title": "uJs98SDz"}, "cv6YUMSA": {"description": "fv5bswbT", "localExt": {"UWNgjTUN": {}, "58wd4Sw6": {}, "mNigdJli": {}}, "longDescription": "ftXqbaNB", "title": "2pvFKVEL"}, "dC2n3WN1": {"description": "l8PexXfh", "localExt": {"u7j0F3I7": {}, "G9NUCMVP": {}, "S97Tu1Fr": {}}, "longDescription": "bPMT20Ro", "title": "hFFy4yzp"}}, "lootBoxConfig": {"rewardCount": 74, "rewards": [{"lootBoxItems": [{"count": 66, "duration": 81, "endDate": "1978-11-12T00:00:00Z", "itemId": "Safkelbk", "itemSku": "PrlDupaT", "itemType": "1Zi8Dtbo"}, {"count": 72, "duration": 74, "endDate": "1975-12-26T00:00:00Z", "itemId": "Qp5Iy1Dh", "itemSku": "VF6nTK03", "itemType": "ltiJ0TUQ"}, {"count": 81, "duration": 81, "endDate": "1977-07-18T00:00:00Z", "itemId": "ELYx3Ndb", "itemSku": "cOJ4eVUc", "itemType": "wBm5EcBV"}], "name": "lE2eFDXV", "odds": 0.28366666508701155, "type": "REWARD_GROUP", "weight": 24}, {"lootBoxItems": [{"count": 54, "duration": 75, "endDate": "1996-12-27T00:00:00Z", "itemId": "LVBrAvVt", "itemSku": "5eguU4By", "itemType": "gy5qJgTi"}, {"count": 62, "duration": 65, "endDate": "1988-12-25T00:00:00Z", "itemId": "kJlKuBpZ", "itemSku": "V3OO9h8P", "itemType": "NJT58wWh"}, {"count": 8, "duration": 90, "endDate": "1976-01-02T00:00:00Z", "itemId": "dY0ebFzj", "itemSku": "RnX1TUPx", "itemType": "I6ZTVs4J"}], "name": "ue2Zszhr", "odds": 0.6886116143887218, "type": "REWARD", "weight": 45}, {"lootBoxItems": [{"count": 88, "duration": 62, "endDate": "1994-11-17T00:00:00Z", "itemId": "GWW96dUc", "itemSku": "UYhA0xes", "itemType": "iNXyiial"}, {"count": 32, "duration": 94, "endDate": "1988-03-21T00:00:00Z", "itemId": "IMF8BdlW", "itemSku": "Hi2zUGvc", "itemType": "9gWjwD2H"}, {"count": 69, "duration": 35, "endDate": "1990-09-25T00:00:00Z", "itemId": "aXaHk41n", "itemSku": "uZ3pML5k", "itemType": "toe5x2pu"}], "name": "Ie5mNBoV", "odds": 0.7952902154171321, "type": "REWARD", "weight": 74}], "rollFunction": "DEFAULT"}, "maxCount": 67, "maxCountPerUser": 33, "name": "wftHVeGi", "optionBoxConfig": {"boxItems": [{"count": 66, "duration": 99, "endDate": "1978-03-05T00:00:00Z", "itemId": "fz7zxJ2D", "itemSku": "pgkMqSs4", "itemType": "4oHpJVDM"}, {"count": 5, "duration": 71, "endDate": "1991-05-12T00:00:00Z", "itemId": "Jv1fYss8", "itemSku": "QdLrQnWi", "itemType": "U2snkxEc"}, {"count": 22, "duration": 69, "endDate": "1987-10-11T00:00:00Z", "itemId": "p8X1Fhdm", "itemSku": "895PHjBD", "itemType": "uCTIOVO9"}]}, "purchasable": false, "recurring": {"cycle": "MONTHLY", "fixedFreeDays": 67, "fixedTrialCycles": 69, "graceDays": 27}, "regionData": {"chk9poee": [{"currencyCode": "try9CJqG", "currencyNamespace": "nBKkGUjC", "currencyType": "REAL", "discountAmount": 75, "discountExpireAt": "1975-06-05T00:00:00Z", "discountPercentage": 99, "discountPurchaseAt": "1984-03-11T00:00:00Z", "expireAt": "1980-07-15T00:00:00Z", "price": 27, "purchaseAt": "1998-04-25T00:00:00Z", "trialPrice": 92}, {"currencyCode": "j7nLbbNL", "currencyNamespace": "ef3QJWeP", "currencyType": "REAL", "discountAmount": 94, "discountExpireAt": "1971-03-18T00:00:00Z", "discountPercentage": 27, "discountPurchaseAt": "1995-03-27T00:00:00Z", "expireAt": "1981-08-21T00:00:00Z", "price": 100, "purchaseAt": "1997-08-05T00:00:00Z", "trialPrice": 73}, {"currencyCode": "s4LxfamM", "currencyNamespace": "ZjIBXlkW", "currencyType": "REAL", "discountAmount": 56, "discountExpireAt": "1992-10-22T00:00:00Z", "discountPercentage": 67, "discountPurchaseAt": "1994-01-20T00:00:00Z", "expireAt": "1981-10-04T00:00:00Z", "price": 64, "purchaseAt": "1976-11-12T00:00:00Z", "trialPrice": 74}], "vh76yL3V": [{"currencyCode": "FECZgvL5", "currencyNamespace": "wSXg7ody", "currencyType": "REAL", "discountAmount": 34, "discountExpireAt": "1982-05-16T00:00:00Z", "discountPercentage": 70, "discountPurchaseAt": "1976-05-07T00:00:00Z", "expireAt": "1988-11-04T00:00:00Z", "price": 15, "purchaseAt": "1971-10-31T00:00:00Z", "trialPrice": 92}, {"currencyCode": "gaY4l35H", "currencyNamespace": "KCjceZ2b", "currencyType": "REAL", "discountAmount": 40, "discountExpireAt": "1984-04-18T00:00:00Z", "discountPercentage": 95, "discountPurchaseAt": "1974-03-04T00:00:00Z", "expireAt": "1998-08-21T00:00:00Z", "price": 71, "purchaseAt": "1986-06-11T00:00:00Z", "trialPrice": 12}, {"currencyCode": "CwdM1FEo", "currencyNamespace": "RICpkF6p", "currencyType": "REAL", "discountAmount": 69, "discountExpireAt": "1976-08-07T00:00:00Z", "discountPercentage": 57, "discountPurchaseAt": "1973-07-13T00:00:00Z", "expireAt": "1973-08-01T00:00:00Z", "price": 78, "purchaseAt": "1987-08-18T00:00:00Z", "trialPrice": 87}], "xPqMUlzH": [{"currencyCode": "z030iclV", "currencyNamespace": "DbaR5XmI", "currencyType": "REAL", "discountAmount": 63, "discountExpireAt": "1992-11-12T00:00:00Z", "discountPercentage": 46, "discountPurchaseAt": "1994-03-07T00:00:00Z", "expireAt": "1990-07-09T00:00:00Z", "price": 35, "purchaseAt": "1987-03-07T00:00:00Z", "trialPrice": 27}, {"currencyCode": "Bdm3hnTr", "currencyNamespace": "h8sPbiSn", "currencyType": "REAL", "discountAmount": 74, "discountExpireAt": "1974-02-05T00:00:00Z", "discountPercentage": 98, "discountPurchaseAt": "1982-10-30T00:00:00Z", "expireAt": "1980-02-03T00:00:00Z", "price": 33, "purchaseAt": "1991-07-25T00:00:00Z", "trialPrice": 53}, {"currencyCode": "dDYleoZ9", "currencyNamespace": "UYVgXZmr", "currencyType": "REAL", "discountAmount": 87, "discountExpireAt": "1997-10-11T00:00:00Z", "discountPercentage": 23, "discountPurchaseAt": "1997-01-11T00:00:00Z", "expireAt": "1976-03-11T00:00:00Z", "price": 96, "purchaseAt": "1975-10-08T00:00:00Z", "trialPrice": 3}]}, "saleConfig": {"currencyCode": "yAICHrCe", "price": 6}, "seasonType": "TIER", "sectionExclusive": true, "sellable": false, "sku": "mHQPjk3D", "stackable": false, "status": "INACTIVE", "tags": ["C5i6Vme2", "IegTlVRC", "CdxTVoaJ"], "targetCurrencyCode": "hsf2ey6v", "targetNamespace": "Owvbjb5T", "thumbnailUrl": "cxe6NRU5", "useCount": 35}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateItem \
    --namespace $AB_NAMESPACE \
    --storeId 'qQpuLf2O' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 112 'CreateItem' test.out

#- 113 GetItemByAppId
$CLI_EXE \
    --sn platform \
    --op GetItemByAppId \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --storeId '9PyRUIgW' \
    --appId 'Nn1agshi' \
    > test.out 2>&1
eval_tap $? 113 'GetItemByAppId' test.out

#- 114 QueryItems
$CLI_EXE \
    --sn platform \
    --op QueryItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --appType 'GAME' \
    --availableDate 'a76xZKRe' \
    --baseAppId 'IopaqcOD' \
    --categoryPath 'KddbV3F3' \
    --features 'kHqPvxvO' \
    --includeSubCategoryItem 'false' \
    --itemType 'INGAMEITEM' \
    --limit '32' \
    --offset '71' \
    --region 'dtgaIhJk' \
    --sortBy '["name:asc", "name:desc", "displayOrder:asc"]' \
    --storeId 'sEB8S4vr' \
    --tags '1R2Y67XC' \
    --targetNamespace 'ZEFlT5Bh' \
    > test.out 2>&1
eval_tap $? 114 'QueryItems' test.out

#- 115 ListBasicItemsByFeatures
$CLI_EXE \
    --sn platform \
    --op ListBasicItemsByFeatures \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --features '["fOlKtaOW", "Q4UqNvIy", "57HLnlU0"]' \
    > test.out 2>&1
eval_tap $? 115 'ListBasicItemsByFeatures' test.out

#- 116 GetItems
$CLI_EXE \
    --sn platform \
    --op GetItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --storeId 'E104EN8F' \
    --itemIds 'GLpHvQ7u' \
    > test.out 2>&1
eval_tap $? 116 'GetItems' test.out

#- 117 GetItemBySku
$CLI_EXE \
    --sn platform \
    --op GetItemBySku \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --storeId 'iyI2yNky' \
    --sku 'JG6Ssadm' \
    > test.out 2>&1
eval_tap $? 117 'GetItemBySku' test.out

#- 118 GetLocaleItemBySku
$CLI_EXE \
    --sn platform \
    --op GetLocaleItemBySku \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --language 'gZWFpCXO' \
    --populateBundle 'false' \
    --region 'FZ5ZVdlu' \
    --storeId 'KBi0Av1C' \
    --sku 'mEIWiJQ1' \
    > test.out 2>&1
eval_tap $? 118 'GetLocaleItemBySku' test.out

#- 119 GetEstimatedPrice
$CLI_EXE \
    --sn platform \
    --op GetEstimatedPrice \
    --namespace $AB_NAMESPACE \
    --platform 'JSV2mU2X' \
    --region 'lBhP2Nmz' \
    --storeId 'EgGQKpRH' \
    --itemIds '4gUA0FIL' \
    --userId '2FpcRxf1' \
    > test.out 2>&1
eval_tap $? 119 'GetEstimatedPrice' test.out

#- 120 GetItemIdBySku
$CLI_EXE \
    --sn platform \
    --op GetItemIdBySku \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --storeId 'zXBRrXXa' \
    --sku 'UpwcPoYh' \
    > test.out 2>&1
eval_tap $? 120 'GetItemIdBySku' test.out

#- 121 GetBulkItemIdBySkus
$CLI_EXE \
    --sn platform \
    --op GetBulkItemIdBySkus \
    --namespace $AB_NAMESPACE \
    --sku '["f0MJH2te", "iHGXdAbo", "jau25hJS"]' \
    --storeId '2Ml4P2mK' \
    > test.out 2>&1
eval_tap $? 121 'GetBulkItemIdBySkus' test.out

#- 122 BulkGetLocaleItems
$CLI_EXE \
    --sn platform \
    --op BulkGetLocaleItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --language 'wAPlwSAC' \
    --region 'FIa3wErB' \
    --storeId '41zffoap' \
    --itemIds 'ZmGS7nRB' \
    > test.out 2>&1
eval_tap $? 122 'BulkGetLocaleItems' test.out

#- 123 GetAvailablePredicateTypes
$CLI_EXE \
    --sn platform \
    --op GetAvailablePredicateTypes \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 123 'GetAvailablePredicateTypes' test.out

#- 124 ValidateItemPurchaseCondition
# body param: body
echo '{"itemIds": ["7vY5iUjL", "mrkO1Pdx", "11FvBaf0"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ValidateItemPurchaseCondition \
    --namespace $AB_NAMESPACE \
    --platform 'a1O8fAyZ' \
    --userId 'iYgN3Myx' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 124 'ValidateItemPurchaseCondition' test.out

#- 125 BulkUpdateRegionData
# body param: body
echo '{"changes": [{"itemIdentities": ["WTDOc2y8", "cE1JVcQQ", "858LsMAR"], "itemIdentityType": "ITEM_ID", "regionData": {"7HaDOkPb": [{"currencyCode": "PEZ7BSuV", "currencyNamespace": "uw1nPf8y", "currencyType": "REAL", "discountAmount": 33, "discountExpireAt": "1976-12-14T00:00:00Z", "discountPercentage": 9, "discountPurchaseAt": "1987-09-13T00:00:00Z", "discountedPrice": 88, "expireAt": "1978-04-09T00:00:00Z", "price": 15, "purchaseAt": "1973-12-05T00:00:00Z", "trialPrice": 94}, {"currencyCode": "MyM0FhrQ", "currencyNamespace": "UBijAN3y", "currencyType": "REAL", "discountAmount": 88, "discountExpireAt": "1981-06-26T00:00:00Z", "discountPercentage": 26, "discountPurchaseAt": "1993-02-20T00:00:00Z", "discountedPrice": 50, "expireAt": "1981-02-27T00:00:00Z", "price": 65, "purchaseAt": "1989-12-03T00:00:00Z", "trialPrice": 30}, {"currencyCode": "1Dt2qO3t", "currencyNamespace": "JoQXiI1e", "currencyType": "REAL", "discountAmount": 28, "discountExpireAt": "1971-01-22T00:00:00Z", "discountPercentage": 30, "discountPurchaseAt": "1987-03-16T00:00:00Z", "discountedPrice": 70, "expireAt": "1972-08-30T00:00:00Z", "price": 46, "purchaseAt": "1996-05-17T00:00:00Z", "trialPrice": 14}], "ytSMGBbd": [{"currencyCode": "Kd1TbsoZ", "currencyNamespace": "OAcRb86M", "currencyType": "REAL", "discountAmount": 24, "discountExpireAt": "1999-01-16T00:00:00Z", "discountPercentage": 46, "discountPurchaseAt": "1998-04-29T00:00:00Z", "discountedPrice": 69, "expireAt": "1975-01-08T00:00:00Z", "price": 19, "purchaseAt": "1999-09-28T00:00:00Z", "trialPrice": 4}, {"currencyCode": "QfzP0Y2M", "currencyNamespace": "EPGsdKln", "currencyType": "REAL", "discountAmount": 25, "discountExpireAt": "1999-12-13T00:00:00Z", "discountPercentage": 39, "discountPurchaseAt": "1994-04-20T00:00:00Z", "discountedPrice": 53, "expireAt": "1998-03-29T00:00:00Z", "price": 34, "purchaseAt": "1987-01-03T00:00:00Z", "trialPrice": 67}, {"currencyCode": "fHAYQlP3", "currencyNamespace": "Qt67ODPD", "currencyType": "VIRTUAL", "discountAmount": 72, "discountExpireAt": "1971-03-22T00:00:00Z", "discountPercentage": 98, "discountPurchaseAt": "1992-01-12T00:00:00Z", "discountedPrice": 42, "expireAt": "1989-07-22T00:00:00Z", "price": 82, "purchaseAt": "1983-05-24T00:00:00Z", "trialPrice": 19}], "h7WZ2o5C": [{"currencyCode": "1igit1HL", "currencyNamespace": "kNBMEQpK", "currencyType": "REAL", "discountAmount": 13, "discountExpireAt": "1971-06-29T00:00:00Z", "discountPercentage": 80, "discountPurchaseAt": "1973-11-19T00:00:00Z", "discountedPrice": 85, "expireAt": "1993-02-27T00:00:00Z", "price": 25, "purchaseAt": "1972-02-02T00:00:00Z", "trialPrice": 34}, {"currencyCode": "vffQYhBF", "currencyNamespace": "muibnitm", "currencyType": "REAL", "discountAmount": 51, "discountExpireAt": "1980-07-29T00:00:00Z", "discountPercentage": 17, "discountPurchaseAt": "1980-10-21T00:00:00Z", "discountedPrice": 5, "expireAt": "1987-11-25T00:00:00Z", "price": 18, "purchaseAt": "1976-09-07T00:00:00Z", "trialPrice": 19}, {"currencyCode": "G46mG2cN", "currencyNamespace": "s82faoPW", "currencyType": "REAL", "discountAmount": 66, "discountExpireAt": "1993-03-22T00:00:00Z", "discountPercentage": 42, "discountPurchaseAt": "1975-12-21T00:00:00Z", "discountedPrice": 75, "expireAt": "1983-11-16T00:00:00Z", "price": 11, "purchaseAt": "1989-07-27T00:00:00Z", "trialPrice": 3}]}}, {"itemIdentities": ["5VEMTBXK", "cj6oGwxa", "9iJIdlFe"], "itemIdentityType": "ITEM_ID", "regionData": {"cZIW9LhX": [{"currencyCode": "Mj3JXPcm", "currencyNamespace": "xz0DZrZa", "currencyType": "REAL", "discountAmount": 26, "discountExpireAt": "1994-06-26T00:00:00Z", "discountPercentage": 29, "discountPurchaseAt": "1988-11-22T00:00:00Z", "discountedPrice": 21, "expireAt": "1978-12-03T00:00:00Z", "price": 47, "purchaseAt": "1983-08-26T00:00:00Z", "trialPrice": 12}, {"currencyCode": "D4KQiiiN", "currencyNamespace": "AjEuWYcO", "currencyType": "REAL", "discountAmount": 59, "discountExpireAt": "1996-06-25T00:00:00Z", "discountPercentage": 22, "discountPurchaseAt": "1990-02-28T00:00:00Z", "discountedPrice": 51, "expireAt": "1991-02-08T00:00:00Z", "price": 8, "purchaseAt": "1999-06-10T00:00:00Z", "trialPrice": 82}, {"currencyCode": "bvdbFHPu", "currencyNamespace": "vsYAZICa", "currencyType": "VIRTUAL", "discountAmount": 31, "discountExpireAt": "1973-05-29T00:00:00Z", "discountPercentage": 13, "discountPurchaseAt": "1984-01-11T00:00:00Z", "discountedPrice": 0, "expireAt": "1974-06-27T00:00:00Z", "price": 96, "purchaseAt": "1977-03-25T00:00:00Z", "trialPrice": 94}], "M0ZJYORN": [{"currencyCode": "dTGMMtAS", "currencyNamespace": "L1UkJsby", "currencyType": "VIRTUAL", "discountAmount": 99, "discountExpireAt": "1990-06-24T00:00:00Z", "discountPercentage": 0, "discountPurchaseAt": "1991-04-28T00:00:00Z", "discountedPrice": 79, "expireAt": "1971-01-15T00:00:00Z", "price": 35, "purchaseAt": "1996-06-24T00:00:00Z", "trialPrice": 73}, {"currencyCode": "u9PjqEwu", "currencyNamespace": "o60jC04L", "currencyType": "VIRTUAL", "discountAmount": 79, "discountExpireAt": "1993-06-06T00:00:00Z", "discountPercentage": 5, "discountPurchaseAt": "1971-01-10T00:00:00Z", "discountedPrice": 81, "expireAt": "1991-10-10T00:00:00Z", "price": 77, "purchaseAt": "1992-08-30T00:00:00Z", "trialPrice": 45}, {"currencyCode": "Z7oxniAQ", "currencyNamespace": "6oWpAF2a", "currencyType": "VIRTUAL", "discountAmount": 0, "discountExpireAt": "1989-10-28T00:00:00Z", "discountPercentage": 99, "discountPurchaseAt": "1985-09-23T00:00:00Z", "discountedPrice": 16, "expireAt": "1974-06-26T00:00:00Z", "price": 4, "purchaseAt": "1998-12-24T00:00:00Z", "trialPrice": 79}], "Dqv6dS2e": [{"currencyCode": "l6QcuqWn", "currencyNamespace": "VTraMNuV", "currencyType": "VIRTUAL", "discountAmount": 90, "discountExpireAt": "1989-04-19T00:00:00Z", "discountPercentage": 57, "discountPurchaseAt": "1996-10-26T00:00:00Z", "discountedPrice": 45, "expireAt": "1989-12-30T00:00:00Z", "price": 70, "purchaseAt": "1987-11-04T00:00:00Z", "trialPrice": 19}, {"currencyCode": "cJ94dVqg", "currencyNamespace": "6EsgVgoY", "currencyType": "REAL", "discountAmount": 89, "discountExpireAt": "1995-12-28T00:00:00Z", "discountPercentage": 40, "discountPurchaseAt": "1972-01-25T00:00:00Z", "discountedPrice": 92, "expireAt": "1978-06-24T00:00:00Z", "price": 36, "purchaseAt": "1999-08-15T00:00:00Z", "trialPrice": 61}, {"currencyCode": "vCiG0rSE", "currencyNamespace": "3E0ktImi", "currencyType": "REAL", "discountAmount": 94, "discountExpireAt": "1986-01-04T00:00:00Z", "discountPercentage": 38, "discountPurchaseAt": "1987-07-21T00:00:00Z", "discountedPrice": 31, "expireAt": "1981-12-09T00:00:00Z", "price": 52, "purchaseAt": "1972-01-02T00:00:00Z", "trialPrice": 45}]}}, {"itemIdentities": ["YHk70bZL", "EcgCjJW9", "obEAjlab"], "itemIdentityType": "ITEM_ID", "regionData": {"JNbmlON7": [{"currencyCode": "ZzmnsbYb", "currencyNamespace": "tymwhClQ", "currencyType": "VIRTUAL", "discountAmount": 27, "discountExpireAt": "1983-11-29T00:00:00Z", "discountPercentage": 40, "discountPurchaseAt": "1994-07-05T00:00:00Z", "discountedPrice": 37, "expireAt": "1987-11-07T00:00:00Z", "price": 47, "purchaseAt": "1983-08-12T00:00:00Z", "trialPrice": 13}, {"currencyCode": "CyZ2Xq7T", "currencyNamespace": "yS346d6p", "currencyType": "VIRTUAL", "discountAmount": 80, "discountExpireAt": "1978-02-27T00:00:00Z", "discountPercentage": 86, "discountPurchaseAt": "1991-03-11T00:00:00Z", "discountedPrice": 81, "expireAt": "1999-03-12T00:00:00Z", "price": 41, "purchaseAt": "1991-02-05T00:00:00Z", "trialPrice": 48}, {"currencyCode": "FW9dEvqX", "currencyNamespace": "OYlxsS4u", "currencyType": "VIRTUAL", "discountAmount": 7, "discountExpireAt": "1974-12-18T00:00:00Z", "discountPercentage": 71, "discountPurchaseAt": "1983-08-27T00:00:00Z", "discountedPrice": 22, "expireAt": "1985-06-26T00:00:00Z", "price": 72, "purchaseAt": "1997-10-23T00:00:00Z", "trialPrice": 15}], "vihli5vo": [{"currencyCode": "l98HKtPN", "currencyNamespace": "LFWndnYK", "currencyType": "REAL", "discountAmount": 5, "discountExpireAt": "1989-04-18T00:00:00Z", "discountPercentage": 44, "discountPurchaseAt": "1971-07-19T00:00:00Z", "discountedPrice": 35, "expireAt": "1996-06-18T00:00:00Z", "price": 2, "purchaseAt": "1999-02-26T00:00:00Z", "trialPrice": 7}, {"currencyCode": "Gf9rADSQ", "currencyNamespace": "faBd7Agd", "currencyType": "VIRTUAL", "discountAmount": 38, "discountExpireAt": "1973-04-05T00:00:00Z", "discountPercentage": 38, "discountPurchaseAt": "1993-11-22T00:00:00Z", "discountedPrice": 19, "expireAt": "1984-02-04T00:00:00Z", "price": 3, "purchaseAt": "1980-02-03T00:00:00Z", "trialPrice": 25}, {"currencyCode": "FhDmm9PA", "currencyNamespace": "FLPDXvvA", "currencyType": "REAL", "discountAmount": 50, "discountExpireAt": "1986-01-01T00:00:00Z", "discountPercentage": 88, "discountPurchaseAt": "1971-12-16T00:00:00Z", "discountedPrice": 13, "expireAt": "1992-02-08T00:00:00Z", "price": 16, "purchaseAt": "1987-07-27T00:00:00Z", "trialPrice": 89}], "asKeCpS9": [{"currencyCode": "josZvoQQ", "currencyNamespace": "8kKDTvUd", "currencyType": "VIRTUAL", "discountAmount": 95, "discountExpireAt": "1997-11-10T00:00:00Z", "discountPercentage": 1, "discountPurchaseAt": "1980-11-15T00:00:00Z", "discountedPrice": 18, "expireAt": "1993-05-14T00:00:00Z", "price": 24, "purchaseAt": "1973-01-23T00:00:00Z", "trialPrice": 49}, {"currencyCode": "0zTwiKVX", "currencyNamespace": "kqvDVKtX", "currencyType": "VIRTUAL", "discountAmount": 68, "discountExpireAt": "1996-05-30T00:00:00Z", "discountPercentage": 38, "discountPurchaseAt": "1988-04-02T00:00:00Z", "discountedPrice": 17, "expireAt": "1988-03-13T00:00:00Z", "price": 24, "purchaseAt": "1982-01-01T00:00:00Z", "trialPrice": 100}, {"currencyCode": "uM4PRtY0", "currencyNamespace": "89Rsnp8h", "currencyType": "REAL", "discountAmount": 4, "discountExpireAt": "1984-06-06T00:00:00Z", "discountPercentage": 18, "discountPurchaseAt": "1980-04-24T00:00:00Z", "discountedPrice": 71, "expireAt": "1972-10-27T00:00:00Z", "price": 67, "purchaseAt": "1978-06-21T00:00:00Z", "trialPrice": 1}]}}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op BulkUpdateRegionData \
    --namespace $AB_NAMESPACE \
    --storeId 'k9lDM0tb' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 125 'BulkUpdateRegionData' test.out

#- 126 SearchItems
$CLI_EXE \
    --sn platform \
    --op SearchItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --itemType 'MEDIA' \
    --limit '38' \
    --offset '99' \
    --sortBy 'h50fj0F1' \
    --storeId 'h9IHcsji' \
    --keyword 'lsv2wUYr' \
    --language 'z0JYPeBQ' \
    > test.out 2>&1
eval_tap $? 126 'SearchItems' test.out

#- 127 QueryUncategorizedItems
$CLI_EXE \
    --sn platform \
    --op QueryUncategorizedItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --limit '96' \
    --offset '22' \
    --sortBy '["createdAt", "createdAt:desc", "displayOrder:asc"]' \
    --storeId 'YfLGa7RC' \
    > test.out 2>&1
eval_tap $? 127 'QueryUncategorizedItems' test.out

#- 128 GetItem
$CLI_EXE \
    --sn platform \
    --op GetItem \
    --itemId 'om75XZta' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --storeId 'Zhs8IrVp' \
    > test.out 2>&1
eval_tap $? 128 'GetItem' test.out

#- 129 UpdateItem
# body param: body
echo '{"appId": "8YTwF6zN", "appType": "DLC", "baseAppId": "3pkJ5Nw0", "boothName": "fGea7DEi", "categoryPath": "OZIjDp1j", "clazz": "moE6MliB", "displayOrder": 9, "entitlementType": "DURABLE", "ext": {"EalepAHD": {}, "v2MRd8y5": {}, "Y35Caa0e": {}}, "features": ["6UsjNQev", "a5DKk9jH", "cUaHQLHG"], "flexible": true, "images": [{"as": "E63wbqaO", "caption": "t4Zv6O0U", "height": 0, "imageUrl": "LUHZt4fh", "smallImageUrl": "Ec5Lfym5", "width": 36}, {"as": "CfKBERgm", "caption": "av3XRV5M", "height": 10, "imageUrl": "3ENpO59R", "smallImageUrl": "miuXE5eL", "width": 18}, {"as": "nCAXYU49", "caption": "b9YlhL1n", "height": 47, "imageUrl": "UTurINua", "smallImageUrl": "RQjrn31H", "width": 50}], "inventoryConfig": {"customAttributes": {"OZpSB80l": {}, "ddwm9jCb": {}, "slcjWY72": {}}, "serverCustomAttributes": {"hhzujyEN": {}, "QWCY9zzC": {}, "wuNPXvYW": {}}, "slotUsed": 42}, "itemIds": ["6UxPUGEF", "OJgwuQ2D", "09QxiMIp"], "itemQty": {"Cyz4iWct": 58, "tb2gUOXk": 68, "isRoKJ4Q": 36}, "itemType": "SUBSCRIPTION", "listable": true, "localizations": {"YgVlv5lF": {"description": "uUTmDSZG", "localExt": {"bHAh7SXx": {}, "udHzXHgY": {}, "nXgoT9hG": {}}, "longDescription": "8w0VURsn", "title": "HJjIzQhQ"}, "QOoztBl6": {"description": "BOrZiHyW", "localExt": {"88ulbpsT": {}, "cdxIC78J": {}, "OyCBpunk": {}}, "longDescription": "eF1fvLqu", "title": "cok0csv5"}, "a87CBo9k": {"description": "57c0oBzT", "localExt": {"tpcTWL19": {}, "YAr5jT6b": {}, "79L6B7O4": {}}, "longDescription": "tZz32Edb", "title": "hG2U4ECx"}}, "lootBoxConfig": {"rewardCount": 13, "rewards": [{"lootBoxItems": [{"count": 97, "duration": 30, "endDate": "1987-10-12T00:00:00Z", "itemId": "pncgS3x4", "itemSku": "sX49ci98", "itemType": "gqAqzNEG"}, {"count": 49, "duration": 43, "endDate": "1979-02-25T00:00:00Z", "itemId": "vDJBOzU8", "itemSku": "nshTeHwk", "itemType": "3uq6TmPH"}, {"count": 56, "duration": 45, "endDate": "1976-11-29T00:00:00Z", "itemId": "fg4Nz5TE", "itemSku": "vSItmerm", "itemType": "xZu2zWvM"}], "name": "nGeECDJZ", "odds": 0.9685731326815122, "type": "REWARD", "weight": 39}, {"lootBoxItems": [{"count": 85, "duration": 64, "endDate": "1999-09-24T00:00:00Z", "itemId": "T3NyVaeh", "itemSku": "0BFksXJw", "itemType": "Kl3Nnzdj"}, {"count": 46, "duration": 30, "endDate": "1999-04-15T00:00:00Z", "itemId": "iBgCGkSZ", "itemSku": "dwUdZiJp", "itemType": "f7vnxV8b"}, {"count": 53, "duration": 55, "endDate": "1986-11-23T00:00:00Z", "itemId": "HMdP1zix", "itemSku": "Rjq3bWpD", "itemType": "9nH86EoT"}], "name": "VTS4W0Ul", "odds": 0.2049150552432184, "type": "PROBABILITY_GROUP", "weight": 35}, {"lootBoxItems": [{"count": 55, "duration": 39, "endDate": "1997-10-16T00:00:00Z", "itemId": "xkCeXRGS", "itemSku": "7K24ITiL", "itemType": "fGWeVVL5"}, {"count": 38, "duration": 46, "endDate": "1976-04-25T00:00:00Z", "itemId": "ayJjBg13", "itemSku": "N9ho9wac", "itemType": "4w0Mq5cM"}, {"count": 56, "duration": 72, "endDate": "1997-02-03T00:00:00Z", "itemId": "1A5mWXh3", "itemSku": "QvuRK7ks", "itemType": "LilEJTV7"}], "name": "MsQnXKww", "odds": 0.1413254995091765, "type": "PROBABILITY_GROUP", "weight": 78}], "rollFunction": "DEFAULT"}, "maxCount": 54, "maxCountPerUser": 1, "name": "up03B8Sg", "optionBoxConfig": {"boxItems": [{"count": 11, "duration": 47, "endDate": "1976-10-11T00:00:00Z", "itemId": "E58gCnTr", "itemSku": "2gevaDBi", "itemType": "z8u9Ftx1"}, {"count": 20, "duration": 22, "endDate": "1992-05-07T00:00:00Z", "itemId": "VME7wpvp", "itemSku": "GMeoNpkX", "itemType": "rbysQUkF"}, {"count": 80, "duration": 1, "endDate": "1988-04-19T00:00:00Z", "itemId": "Xej5AOyn", "itemSku": "PSJ6itZW", "itemType": "FMC19ZTw"}]}, "purchasable": false, "recurring": {"cycle": "YEARLY", "fixedFreeDays": 75, "fixedTrialCycles": 53, "graceDays": 16}, "regionData": {"VHjlrj6d": [{"currencyCode": "K6ywU1oN", "currencyNamespace": "1es2nIRl", "currencyType": "VIRTUAL", "discountAmount": 87, "discountExpireAt": "1973-03-28T00:00:00Z", "discountPercentage": 21, "discountPurchaseAt": "1999-03-06T00:00:00Z", "expireAt": "1982-02-21T00:00:00Z", "price": 71, "purchaseAt": "1992-04-04T00:00:00Z", "trialPrice": 68}, {"currencyCode": "WFmWYuO9", "currencyNamespace": "uEzDPqWT", "currencyType": "REAL", "discountAmount": 78, "discountExpireAt": "1978-07-26T00:00:00Z", "discountPercentage": 18, "discountPurchaseAt": "1977-09-17T00:00:00Z", "expireAt": "1977-04-03T00:00:00Z", "price": 67, "purchaseAt": "1984-02-17T00:00:00Z", "trialPrice": 66}, {"currencyCode": "MdjP3Skw", "currencyNamespace": "lMTrCAtk", "currencyType": "VIRTUAL", "discountAmount": 15, "discountExpireAt": "1983-01-10T00:00:00Z", "discountPercentage": 34, "discountPurchaseAt": "1989-07-26T00:00:00Z", "expireAt": "1989-12-27T00:00:00Z", "price": 5, "purchaseAt": "1973-05-03T00:00:00Z", "trialPrice": 5}], "CtvLplE8": [{"currencyCode": "LIaxSQ4A", "currencyNamespace": "q4BRsSkW", "currencyType": "REAL", "discountAmount": 51, "discountExpireAt": "1972-02-24T00:00:00Z", "discountPercentage": 83, "discountPurchaseAt": "1977-07-31T00:00:00Z", "expireAt": "1972-09-27T00:00:00Z", "price": 100, "purchaseAt": "1994-03-27T00:00:00Z", "trialPrice": 79}, {"currencyCode": "AOTSnU5P", "currencyNamespace": "Y1ORZ1My", "currencyType": "REAL", "discountAmount": 77, "discountExpireAt": "1985-01-23T00:00:00Z", "discountPercentage": 33, "discountPurchaseAt": "1987-06-05T00:00:00Z", "expireAt": "1988-09-13T00:00:00Z", "price": 93, "purchaseAt": "1991-10-19T00:00:00Z", "trialPrice": 3}, {"currencyCode": "GYbjdB2r", "currencyNamespace": "xO8FJqNJ", "currencyType": "VIRTUAL", "discountAmount": 90, "discountExpireAt": "1997-02-03T00:00:00Z", "discountPercentage": 91, "discountPurchaseAt": "1997-06-17T00:00:00Z", "expireAt": "1979-01-01T00:00:00Z", "price": 9, "purchaseAt": "1988-08-11T00:00:00Z", "trialPrice": 9}], "LjxffjOt": [{"currencyCode": "fwMY07bB", "currencyNamespace": "dBdvkyv8", "currencyType": "VIRTUAL", "discountAmount": 69, "discountExpireAt": "1997-02-28T00:00:00Z", "discountPercentage": 18, "discountPurchaseAt": "1993-08-29T00:00:00Z", "expireAt": "1983-01-31T00:00:00Z", "price": 75, "purchaseAt": "1990-02-20T00:00:00Z", "trialPrice": 13}, {"currencyCode": "VtmYJmeX", "currencyNamespace": "Ag516JJf", "currencyType": "VIRTUAL", "discountAmount": 96, "discountExpireAt": "1993-07-16T00:00:00Z", "discountPercentage": 44, "discountPurchaseAt": "1977-02-02T00:00:00Z", "expireAt": "1974-11-13T00:00:00Z", "price": 1, "purchaseAt": "1972-10-14T00:00:00Z", "trialPrice": 82}, {"currencyCode": "AzPkmE59", "currencyNamespace": "w1k8WThX", "currencyType": "REAL", "discountAmount": 48, "discountExpireAt": "1971-02-09T00:00:00Z", "discountPercentage": 6, "discountPurchaseAt": "1976-01-05T00:00:00Z", "expireAt": "1979-11-02T00:00:00Z", "price": 77, "purchaseAt": "1994-02-16T00:00:00Z", "trialPrice": 66}]}, "saleConfig": {"currencyCode": "9wxd6j51", "price": 6}, "seasonType": "TIER", "sectionExclusive": false, "sellable": false, "sku": "0fPPTkuc", "stackable": false, "status": "ACTIVE", "tags": ["oRZVEMYC", "9DnNqY3x", "XjmGvqhN"], "targetCurrencyCode": "CFb1jE32", "targetNamespace": "hd5kZU60", "thumbnailUrl": "Hp1dLYcJ", "useCount": 84}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateItem \
    --itemId 'NJDvvQan' \
    --namespace $AB_NAMESPACE \
    --storeId 'OoncL14O' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 129 'UpdateItem' test.out

#- 130 DeleteItem
$CLI_EXE \
    --sn platform \
    --op DeleteItem \
    --itemId 'rV1QkghU' \
    --namespace $AB_NAMESPACE \
    --force 'true' \
    --storeId 'EgYwAJYV' \
    > test.out 2>&1
eval_tap $? 130 'DeleteItem' test.out

#- 131 AcquireItem
# body param: body
echo '{"count": 45, "orderNo": "vTWUvwZ6"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op AcquireItem \
    --itemId '11YfTJOQ' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 131 'AcquireItem' test.out

#- 132 GetApp
$CLI_EXE \
    --sn platform \
    --op GetApp \
    --itemId 'jGSVRigs' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --storeId 'W7wpu92K' \
    > test.out 2>&1
eval_tap $? 132 'GetApp' test.out

#- 133 UpdateApp
# body param: body
echo '{"carousel": [{"alt": "hVH7P8Qh", "previewUrl": "FM4WjOI9", "thumbnailUrl": "Hi5rKHBp", "type": "video", "url": "VBzGK4wg", "videoSource": "vimeo"}, {"alt": "TT8zs85v", "previewUrl": "KONrbOlC", "thumbnailUrl": "Fr9AdUhq", "type": "video", "url": "ViS5YNwp", "videoSource": "vimeo"}, {"alt": "nbXYmMCo", "previewUrl": "bKCaRw3P", "thumbnailUrl": "DeoBeQvS", "type": "image", "url": "ePR3ECIS", "videoSource": "generic"}], "developer": "LqMdR2e2", "forumUrl": "Fmsa8VOQ", "genres": ["Casual", "Sports", "Adventure"], "localizations": {"Hssg1f0O": {"announcement": "RN3eBztH", "slogan": "AA3cxMCu"}, "1aeUACXD": {"announcement": "9capsduS", "slogan": "e5T01hZM"}, "eld5oWL1": {"announcement": "RdMlp0Qu", "slogan": "otnir5Qc"}}, "platformRequirements": {"BUdjKc6R": [{"additionals": "ESyMgXRd", "directXVersion": "8NkLp4lB", "diskSpace": "xtpsrLvA", "graphics": "62ZHf5l2", "label": "pATiR3G2", "osVersion": "WPAztQ8U", "processor": "aeXoPy62", "ram": "RU0NQBQk", "soundCard": "E8ptGsaA"}, {"additionals": "Fa7zROht", "directXVersion": "pvPNKonc", "diskSpace": "yoXNqBDW", "graphics": "d80tL4HY", "label": "ujuzkzs8", "osVersion": "XNcTg02T", "processor": "YqKZoQqK", "ram": "5esOHq4r", "soundCard": "8v56iAMk"}, {"additionals": "q8HZFNpz", "directXVersion": "lBPq38Ca", "diskSpace": "elHpY1Hy", "graphics": "W3ofVudB", "label": "GhgpPeyg", "osVersion": "tDGlxkvc", "processor": "5fVC75DS", "ram": "yamZiPJt", "soundCard": "RMCKkpX4"}], "QQrOpPxR": [{"additionals": "aCCzSkAm", "directXVersion": "nJTAg1gN", "diskSpace": "Y0sXsxfP", "graphics": "FBJE1x6P", "label": "Mj9ibJKD", "osVersion": "58SB7LSq", "processor": "jO9lr4de", "ram": "Ch0efkov", "soundCard": "yAC2ScUU"}, {"additionals": "9Fio9exB", "directXVersion": "ZgIpBVfI", "diskSpace": "7x3zbVha", "graphics": "vNojlctW", "label": "NRxllegX", "osVersion": "qwjsbShL", "processor": "3q5d5yYU", "ram": "s5uEW4VN", "soundCard": "f7Pyq2oI"}, {"additionals": "W37QoeAs", "directXVersion": "KE6D5YhS", "diskSpace": "i0hcHYmz", "graphics": "fkVEprpZ", "label": "3LN9KU15", "osVersion": "ytdAEsax", "processor": "vDKxcsS5", "ram": "mQeYtnJt", "soundCard": "6gyh0v7y"}], "Dje6fcRr": [{"additionals": "SAPdkM9b", "directXVersion": "Q0LgkTFV", "diskSpace": "hE8y5wRp", "graphics": "OqRGmmzq", "label": "LyxRT9Dp", "osVersion": "j9svaUmg", "processor": "UTtpceWj", "ram": "QEpvJQIe", "soundCard": "aUBuzTRN"}, {"additionals": "v6rteXjl", "directXVersion": "Dsl1XT6g", "diskSpace": "HpgOEhjF", "graphics": "qEhpBGPZ", "label": "GPS45B8t", "osVersion": "4EdjCy3g", "processor": "iZOASkwr", "ram": "qaiP6Uzg", "soundCard": "Y4iP37Mx"}, {"additionals": "QrBx9SZP", "directXVersion": "LasaJAnx", "diskSpace": "KVCgzeF5", "graphics": "HwZQL3A4", "label": "wlo80lCH", "osVersion": "vyYaH9uL", "processor": "aRZvwkJT", "ram": "7uRTG8PK", "soundCard": "CX4kvZrM"}]}, "platforms": ["IOS", "Android", "MacOS"], "players": ["Single", "Single", "Coop"], "primaryGenre": "RPG", "publisher": "6gaKAbB6", "releaseDate": "1972-11-13T00:00:00Z", "websiteUrl": "6tdo52Dt"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateApp \
    --itemId 'V0YWDX8m' \
    --namespace $AB_NAMESPACE \
    --storeId 'YVlaQDma' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 133 'UpdateApp' test.out

#- 134 DisableItem
$CLI_EXE \
    --sn platform \
    --op DisableItem \
    --itemId 'Xq59LbCQ' \
    --namespace $AB_NAMESPACE \
    --storeId '5GtYeOeg' \
    > test.out 2>&1
eval_tap $? 134 'DisableItem' test.out

#- 135 GetItemDynamicData
$CLI_EXE \
    --sn platform \
    --op GetItemDynamicData \
    --itemId '6GGglm6s' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 135 'GetItemDynamicData' test.out

#- 136 EnableItem
$CLI_EXE \
    --sn platform \
    --op EnableItem \
    --itemId '4thYCcIi' \
    --namespace $AB_NAMESPACE \
    --storeId 'e93AZDZa' \
    > test.out 2>&1
eval_tap $? 136 'EnableItem' test.out

#- 137 FeatureItem
$CLI_EXE \
    --sn platform \
    --op FeatureItem \
    --feature '0DCsjGW5' \
    --itemId 'lo43Rozr' \
    --namespace $AB_NAMESPACE \
    --storeId '01Sb3q26' \
    > test.out 2>&1
eval_tap $? 137 'FeatureItem' test.out

#- 138 DefeatureItem
$CLI_EXE \
    --sn platform \
    --op DefeatureItem \
    --feature 'u31AgMtg' \
    --itemId 'Ior3a1Bq' \
    --namespace $AB_NAMESPACE \
    --storeId 'QROG20wn' \
    > test.out 2>&1
eval_tap $? 138 'DefeatureItem' test.out

#- 139 GetLocaleItem
$CLI_EXE \
    --sn platform \
    --op GetLocaleItem \
    --itemId 'L2OqyeBy' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --language 'KyjkkzyY' \
    --populateBundle 'true' \
    --region 'iWOOwUbG' \
    --storeId 'cB69794z' \
    > test.out 2>&1
eval_tap $? 139 'GetLocaleItem' test.out

#- 140 UpdateItemPurchaseCondition
# body param: body
echo '{"purchaseCondition": {"conditionGroups": [{"operator": "or", "predicates": [{"anyOf": 88, "code": "t77VTtpq", "comparison": "isGreaterThan", "name": "2MKSmY9x", "predicateType": "SeasonPassPredicate", "value": "qOrhQsqK", "values": ["3jqdUQ1w", "bROmWNGz", "TMwkcoGD"]}, {"anyOf": 27, "code": "qGWZUpAV", "comparison": "is", "name": "Sxb9VNcl", "predicateType": "SeasonTierPredicate", "value": "h555jQ15", "values": ["7aO2fdGb", "95N5GUGi", "RAhSLDHn"]}, {"anyOf": 34, "code": "F4ekq6PX", "comparison": "isNot", "name": "Nlb3A9Hj", "predicateType": "StatisticCodePredicate", "value": "KbtqL98s", "values": ["sIufzx1U", "xHzWqwEk", "HoW4AdGa"]}]}, {"operator": "or", "predicates": [{"anyOf": 60, "code": "lPtJYa0P", "comparison": "excludes", "name": "Z61Lqpnt", "predicateType": "SeasonTierPredicate", "value": "vld0NOxa", "values": ["WIxy0IJg", "O8DT6KWY", "IIrLw76h"]}, {"anyOf": 10, "code": "QaNsqL8M", "comparison": "is", "name": "5h7HzpCq", "predicateType": "EntitlementPredicate", "value": "ZukUaEty", "values": ["RTwHN4tZ", "jUDuS14e", "ivlEIRsY"]}, {"anyOf": 81, "code": "JdOiC8cF", "comparison": "isLessThanOrEqual", "name": "cdYBoOne", "predicateType": "EntitlementPredicate", "value": "v2V7glMa", "values": ["Wmr4RBIk", "pGItrx09", "fR6oFRYz"]}]}, {"operator": "or", "predicates": [{"anyOf": 21, "code": "FDcXfFlH", "comparison": "isGreaterThanOrEqual", "name": "96kLSxxt", "predicateType": "EntitlementPredicate", "value": "NHEVRD1k", "values": ["157Kb3JV", "Zee7AOFF", "Ksg0cqLg"]}, {"anyOf": 37, "code": "NG26WQLz", "comparison": "is", "name": "g2IoRfMI", "predicateType": "SeasonPassPredicate", "value": "TCv4vRAf", "values": ["60WVCm0Z", "XoRTrTKD", "K9AT8KOr"]}, {"anyOf": 32, "code": "T4MGxQwt", "comparison": "isLessThanOrEqual", "name": "7eZwfCUJ", "predicateType": "EntitlementPredicate", "value": "lcFm8tGa", "values": ["QchmcDh2", "gD0mRd7y", "ExStTJjd"]}]}]}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateItemPurchaseCondition \
    --itemId 'ld3iQs52' \
    --namespace $AB_NAMESPACE \
    --storeId 'ZElAKN0C' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 140 'UpdateItemPurchaseCondition' test.out

#- 141 ReturnItem
# body param: body
echo '{"orderNo": "sZInbK3E"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ReturnItem \
    --itemId 'si9geyDG' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 141 'ReturnItem' test.out

#- 142 QueryKeyGroups
$CLI_EXE \
    --sn platform \
    --op QueryKeyGroups \
    --namespace $AB_NAMESPACE \
    --limit '62' \
    --name 'ia8MOhW9' \
    --offset '35' \
    --tag 'cDKcXO3A' \
    > test.out 2>&1
eval_tap $? 142 'QueryKeyGroups' test.out

#- 143 CreateKeyGroup
# body param: body
echo '{"description": "x239dBVH", "name": "YaBDc5Eo", "status": "ACTIVE", "tags": ["acV896kq", "afAdGxXq", "9ysFYDLc"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateKeyGroup \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 143 'CreateKeyGroup' test.out

#- 144 GetKeyGroupByBoothName
eval_tap 0 144 'GetKeyGroupByBoothName # SKIP deprecated' test.out

#- 145 GetKeyGroup
$CLI_EXE \
    --sn platform \
    --op GetKeyGroup \
    --keyGroupId 'bVvw3gjK' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 145 'GetKeyGroup' test.out

#- 146 UpdateKeyGroup
# body param: body
echo '{"description": "jrPOgr5k", "name": "QWrkMDs0", "status": "INACTIVE", "tags": ["qwvRQxCn", "Xx26Cp5q", "Xtq49Zhl"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateKeyGroup \
    --keyGroupId 'i7UtYxZd' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 146 'UpdateKeyGroup' test.out

#- 147 GetKeyGroupDynamic
$CLI_EXE \
    --sn platform \
    --op GetKeyGroupDynamic \
    --keyGroupId 'pbZJBbcs' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 147 'GetKeyGroupDynamic' test.out

#- 148 ListKeys
$CLI_EXE \
    --sn platform \
    --op ListKeys \
    --keyGroupId 'NI6eZ9S7' \
    --namespace $AB_NAMESPACE \
    --limit '46' \
    --offset '11' \
    --status 'ACTIVE' \
    > test.out 2>&1
eval_tap $? 148 'ListKeys' test.out

#- 149 UploadKeys
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UploadKeys \
    --keyGroupId 'buBKs79r' \
    --namespace $AB_NAMESPACE \
    --upload file $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 149 'UploadKeys' test.out

#- 150 QueryOrders
$CLI_EXE \
    --sn platform \
    --op QueryOrders \
    --namespace $AB_NAMESPACE \
    --endTime 'PFXWiF9a' \
    --limit '41' \
    --offset '99' \
    --orderNos '["6ZFfoKvY", "86s4tMJA", "HS2ecYHP"]' \
    --sortBy 'qDnqb88S' \
    --startTime 'rO3IkA0g' \
    --status 'REFUNDING' \
    --withTotal 'false' \
    > test.out 2>&1
eval_tap $? 150 'QueryOrders' test.out

#- 151 GetOrderStatistics
$CLI_EXE \
    --sn platform \
    --op GetOrderStatistics \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 151 'GetOrderStatistics' test.out

#- 152 GetOrder
$CLI_EXE \
    --sn platform \
    --op GetOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'OaZJ5KdM' \
    > test.out 2>&1
eval_tap $? 152 'GetOrder' test.out

#- 153 RefundOrder
# body param: body
echo '{"description": "GjDdOsJg"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RefundOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'gHQnVhPP' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 153 'RefundOrder' test.out

#- 154 GetPaymentCallbackConfig
eval_tap 0 154 'GetPaymentCallbackConfig # SKIP deprecated' test.out

#- 155 UpdatePaymentCallbackConfig
eval_tap 0 155 'UpdatePaymentCallbackConfig # SKIP deprecated' test.out

#- 156 GetPaymentMerchantConfig
$CLI_EXE \
    --sn platform \
    --op GetPaymentMerchantConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 156 'GetPaymentMerchantConfig' test.out

#- 157 UpdatePaymentDomainWhitelistConfig
# body param: body
echo '{"domains": ["zuIsrNxj", "jA1IcZI5", "89q0XgvI"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePaymentDomainWhitelistConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 157 'UpdatePaymentDomainWhitelistConfig' test.out

#- 158 QueryPaymentNotifications
$CLI_EXE \
    --sn platform \
    --op QueryPaymentNotifications \
    --namespace $AB_NAMESPACE \
    --endDate 'kAgKf2GJ' \
    --externalId 'UWEOpnoZ' \
    --limit '95' \
    --notificationSource 'NEONPAY' \
    --notificationType 'XrMP6SL7' \
    --offset '29' \
    --paymentOrderNo '4LNsMHCa' \
    --startDate 'FkD62PrX' \
    --status 'IGNORED' \
    > test.out 2>&1
eval_tap $? 158 'QueryPaymentNotifications' test.out

#- 159 QueryPaymentOrders
$CLI_EXE \
    --sn platform \
    --op QueryPaymentOrders \
    --namespace $AB_NAMESPACE \
    --channel 'EXTERNAL' \
    --extTxId 'UqS8tGRg' \
    --limit '67' \
    --offset '52' \
    --status 'DELETED' \
    > test.out 2>&1
eval_tap $? 159 'QueryPaymentOrders' test.out

#- 160 CreatePaymentOrderByDedicated
# body param: body
echo '{"currencyCode": "fu6x2Kco", "currencyNamespace": "xfVD11GS", "customParameters": {"gdTOiZlU": {}, "1uEJxdf8": {}, "7YKV9xcQ": {}}, "description": "Hhf1P489", "extOrderNo": "BXtSpy3R", "extUserId": "xa28ZdPt", "itemType": "CODE", "language": "wmSn_836", "metadata": {"kJEgXq04": "Yo7JB3oK", "SCZ4yeoH": "MXXsemdJ", "sRao5oqP": "HsBEbIym"}, "notifyUrl": "D8jsL3Ff", "omitNotification": true, "platform": "c1ygFgzg", "price": 79, "recurringPaymentOrderNo": "pF05QP0C", "region": "1X1IZwxh", "returnUrl": "ie9qvNTc", "sandbox": true, "sku": "n9wVQD9M", "subscriptionId": "wydH5jfB", "targetNamespace": "V2RpxjMT", "targetUserId": "Xqd82xo2", "title": "91t539hS"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreatePaymentOrderByDedicated \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 160 'CreatePaymentOrderByDedicated' test.out

#- 161 ListExtOrderNoByExtTxId
$CLI_EXE \
    --sn platform \
    --op ListExtOrderNoByExtTxId \
    --namespace $AB_NAMESPACE \
    --extTxId 'E9YqW9BI' \
    > test.out 2>&1
eval_tap $? 161 'ListExtOrderNoByExtTxId' test.out

#- 162 GetPaymentOrder
$CLI_EXE \
    --sn platform \
    --op GetPaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'ZOg52MUy' \
    > test.out 2>&1
eval_tap $? 162 'GetPaymentOrder' test.out

#- 163 ChargePaymentOrder
# body param: body
echo '{"extTxId": "lh644XWq", "paymentMethod": "ilbFsjzX", "paymentProvider": "XSOLLA"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ChargePaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'gZvRJO0O' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 163 'ChargePaymentOrder' test.out

#- 164 RefundPaymentOrderByDedicated
# body param: body
echo '{"description": "rwkPCICR"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RefundPaymentOrderByDedicated \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'Q5k1ifNi' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 164 'RefundPaymentOrderByDedicated' test.out

#- 165 SimulatePaymentOrderNotification
# body param: body
echo '{"amount": 89, "currencyCode": "dm6kwvqX", "notifyType": "REFUND", "paymentProvider": "WXPAY", "salesTax": 39, "vat": 5}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SimulatePaymentOrderNotification \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo '3MF0vwAo' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 165 'SimulatePaymentOrderNotification' test.out

#- 166 GetPaymentOrderChargeStatus
$CLI_EXE \
    --sn platform \
    --op GetPaymentOrderChargeStatus \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'ecszvfkg' \
    > test.out 2>&1
eval_tap $? 166 'GetPaymentOrderChargeStatus' test.out

#- 167 GetPsnEntitlementOwnership
# body param: body
echo '{"accessToken": "EdOPNi8Y", "serviceLabel": 26}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op GetPsnEntitlementOwnership \
    --entitlementLabel 'o2Y5xbFa' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 167 'GetPsnEntitlementOwnership' test.out

#- 168 GetXboxEntitlementOwnership
# body param: body
echo '{"delegationToken": "aZDrbb2c", "sandboxId": "9LXhdKiJ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op GetXboxEntitlementOwnership \
    --namespace $AB_NAMESPACE \
    --productSku '8YjjobbJ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 168 'GetXboxEntitlementOwnership' test.out

#- 169 GetPlatformEntitlementConfig
$CLI_EXE \
    --sn platform \
    --op GetPlatformEntitlementConfig \
    --namespace $AB_NAMESPACE \
    --platform 'Steam' \
    > test.out 2>&1
eval_tap $? 169 'GetPlatformEntitlementConfig' test.out

#- 170 UpdatePlatformEntitlementConfig
# body param: body
echo '{"allowedPlatformOrigins": ["Oculus", "Nintendo", "GooglePlay"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePlatformEntitlementConfig \
    --namespace $AB_NAMESPACE \
    --platform 'Epic' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 170 'UpdatePlatformEntitlementConfig' test.out

#- 171 GetPlatformWalletConfig
$CLI_EXE \
    --sn platform \
    --op GetPlatformWalletConfig \
    --namespace $AB_NAMESPACE \
    --platform 'Other' \
    > test.out 2>&1
eval_tap $? 171 'GetPlatformWalletConfig' test.out

#- 172 UpdatePlatformWalletConfig
# body param: body
echo '{"allowedBalanceOrigins": ["System", "Epic", "Twitch"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePlatformWalletConfig \
    --namespace $AB_NAMESPACE \
    --platform 'Other' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 172 'UpdatePlatformWalletConfig' test.out

#- 173 ResetPlatformWalletConfig
$CLI_EXE \
    --sn platform \
    --op ResetPlatformWalletConfig \
    --namespace $AB_NAMESPACE \
    --platform 'Steam' \
    > test.out 2>&1
eval_tap $? 173 'ResetPlatformWalletConfig' test.out

#- 174 GetRevocationConfig
$CLI_EXE \
    --sn platform \
    --op GetRevocationConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 174 'GetRevocationConfig' test.out

#- 175 UpdateRevocationConfig
# body param: body
echo '{"entitlement": {"consumable": {"enabled": false, "strategy": "REVOKE_OR_REPORT"}, "durable": {"enabled": true, "strategy": "CUSTOM"}}, "wallet": {"enabled": false, "strategy": "REVOKE_OR_REPORT"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateRevocationConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 175 'UpdateRevocationConfig' test.out

#- 176 DeleteRevocationConfig
$CLI_EXE \
    --sn platform \
    --op DeleteRevocationConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 176 'DeleteRevocationConfig' test.out

#- 177 QueryRevocationHistories
$CLI_EXE \
    --sn platform \
    --op QueryRevocationHistories \
    --namespace $AB_NAMESPACE \
    --endTime 'w4c6rYfJ' \
    --limit '44' \
    --offset '77' \
    --source 'IAP' \
    --startTime '5JQEqTjE' \
    --status 'SUCCESS' \
    --transactionId 'jpE9Dve9' \
    --userId 'jg7rVXfV' \
    > test.out 2>&1
eval_tap $? 177 'QueryRevocationHistories' test.out

#- 178 GetRevocationPluginConfig
$CLI_EXE \
    --sn platform \
    --op GetRevocationPluginConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 178 'GetRevocationPluginConfig' test.out

#- 179 UpdateRevocationPluginConfig
# body param: body
echo '{"appConfig": {"appName": "A08zVhSK"}, "customConfig": {"connectionType": "INSECURE", "grpcServerAddress": "reEzAw7Z"}, "extendType": "CUSTOM"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateRevocationPluginConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 179 'UpdateRevocationPluginConfig' test.out

#- 180 DeleteRevocationPluginConfig
$CLI_EXE \
    --sn platform \
    --op DeleteRevocationPluginConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 180 'DeleteRevocationPluginConfig' test.out

#- 181 UploadRevocationPluginConfigCert
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UploadRevocationPluginConfigCert \
    --namespace $AB_NAMESPACE \
    --upload file $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 181 'UploadRevocationPluginConfigCert' test.out

#- 182 CreateReward
# body param: body
echo '{"description": "kylqJuaP", "eventTopic": "ZB3BViXn", "maxAwarded": 15, "maxAwardedPerUser": 69, "namespaceExpression": "SZ4JMZme", "rewardCode": "uPD2WYub", "rewardConditions": [{"condition": "vxEnYnEj", "conditionName": "JJ8FyGmE", "eventName": "2vpNaDQp", "rewardItems": [{"duration": 7, "endDate": "1976-06-11T00:00:00Z", "identityType": "ITEM_SKU", "itemId": "Zs6Hi8p8", "quantity": 22, "sku": "w7MWhWvD"}, {"duration": 63, "endDate": "1993-05-03T00:00:00Z", "identityType": "ITEM_SKU", "itemId": "Lh4VZuRK", "quantity": 7, "sku": "BQQySbNJ"}, {"duration": 8, "endDate": "1986-04-02T00:00:00Z", "identityType": "ITEM_ID", "itemId": "8kI00PcZ", "quantity": 42, "sku": "LfxQdUKP"}]}, {"condition": "P1obXp94", "conditionName": "0rPB95MR", "eventName": "yr4Rvq0Q", "rewardItems": [{"duration": 93, "endDate": "1981-12-13T00:00:00Z", "identityType": "ITEM_ID", "itemId": "tFTeaN0x", "quantity": 47, "sku": "GT4DCKks"}, {"duration": 82, "endDate": "1976-07-16T00:00:00Z", "identityType": "ITEM_ID", "itemId": "31tXEECW", "quantity": 45, "sku": "gtTnxpkV"}, {"duration": 70, "endDate": "1991-01-14T00:00:00Z", "identityType": "ITEM_ID", "itemId": "tSw0cQ0U", "quantity": 66, "sku": "0SMLv80n"}]}, {"condition": "TeM1Ffxl", "conditionName": "sywnAfhY", "eventName": "wEDKjQmm", "rewardItems": [{"duration": 21, "endDate": "1971-04-13T00:00:00Z", "identityType": "ITEM_ID", "itemId": "OIE9g5NX", "quantity": 6, "sku": "zpuSkXBH"}, {"duration": 2, "endDate": "1973-06-27T00:00:00Z", "identityType": "ITEM_ID", "itemId": "vrZU1tfJ", "quantity": 7, "sku": "Plyv5pi8"}, {"duration": 33, "endDate": "1971-04-25T00:00:00Z", "identityType": "ITEM_SKU", "itemId": "E4Uj9K9T", "quantity": 31, "sku": "oIVV2ArZ"}]}], "userIdExpression": "C9BcNFsA"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateReward \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 182 'CreateReward' test.out

#- 183 QueryRewards
$CLI_EXE \
    --sn platform \
    --op QueryRewards \
    --namespace $AB_NAMESPACE \
    --eventTopic 'MjbCoyah' \
    --limit '16' \
    --offset '56' \
    --sortBy '["namespace:desc", "rewardCode"]' \
    > test.out 2>&1
eval_tap $? 183 'QueryRewards' test.out

#- 184 ExportRewards
$CLI_EXE \
    --sn platform \
    --op ExportRewards \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 184 'ExportRewards' test.out

#- 185 ImportRewards
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op ImportRewards \
    --namespace $AB_NAMESPACE \
    --replaceExisting 'false' \
    --upload file $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 185 'ImportRewards' test.out

#- 186 GetReward
$CLI_EXE \
    --sn platform \
    --op GetReward \
    --namespace $AB_NAMESPACE \
    --rewardId 'Nc1g5K1z' \
    > test.out 2>&1
eval_tap $? 186 'GetReward' test.out

#- 187 UpdateReward
# body param: body
echo '{"description": "5e7lVMg2", "eventTopic": "LLSSdN3u", "maxAwarded": 53, "maxAwardedPerUser": 76, "namespaceExpression": "fNFGaMwk", "rewardCode": "L2PMioLr", "rewardConditions": [{"condition": "3uvsNCwa", "conditionName": "wf32YV22", "eventName": "wzETV73E", "rewardItems": [{"duration": 15, "endDate": "1977-01-02T00:00:00Z", "identityType": "ITEM_SKU", "itemId": "Hpr6mgfP", "quantity": 72, "sku": "M2PTNA4j"}, {"duration": 51, "endDate": "1981-05-31T00:00:00Z", "identityType": "ITEM_SKU", "itemId": "Vcc2xV24", "quantity": 56, "sku": "zXA0JzAh"}, {"duration": 75, "endDate": "1973-06-06T00:00:00Z", "identityType": "ITEM_ID", "itemId": "apmEhq21", "quantity": 53, "sku": "W3OJeJup"}]}, {"condition": "DABrgBY1", "conditionName": "OUhyhwHT", "eventName": "e6W6KEyQ", "rewardItems": [{"duration": 62, "endDate": "1977-06-14T00:00:00Z", "identityType": "ITEM_ID", "itemId": "dhlcveqB", "quantity": 93, "sku": "ONwDJV3n"}, {"duration": 47, "endDate": "1992-12-13T00:00:00Z", "identityType": "ITEM_ID", "itemId": "9fG8qeAk", "quantity": 77, "sku": "32wPNo9x"}, {"duration": 60, "endDate": "1974-06-09T00:00:00Z", "identityType": "ITEM_SKU", "itemId": "sYCNoG3S", "quantity": 83, "sku": "L1gsSn5k"}]}, {"condition": "GBFArt9Y", "conditionName": "SaIO9M3c", "eventName": "wmHIXR3G", "rewardItems": [{"duration": 84, "endDate": "1979-09-18T00:00:00Z", "identityType": "ITEM_SKU", "itemId": "XRxbj1oa", "quantity": 23, "sku": "1mVphrJL"}, {"duration": 66, "endDate": "1989-10-28T00:00:00Z", "identityType": "ITEM_ID", "itemId": "tnWamb5a", "quantity": 19, "sku": "peMWE47v"}, {"duration": 10, "endDate": "1997-11-04T00:00:00Z", "identityType": "ITEM_ID", "itemId": "0LmPU4jN", "quantity": 83, "sku": "Ri4DD3EI"}]}], "userIdExpression": "1UaXGwhF"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateReward \
    --namespace $AB_NAMESPACE \
    --rewardId 'zLN09f38' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 187 'UpdateReward' test.out

#- 188 DeleteReward
$CLI_EXE \
    --sn platform \
    --op DeleteReward \
    --namespace $AB_NAMESPACE \
    --rewardId 'tl1SNfUx' \
    > test.out 2>&1
eval_tap $? 188 'DeleteReward' test.out

#- 189 CheckEventCondition
# body param: body
echo '{"payload": {"DW6GatB1": {}, "KbSbUrgv": {}, "rYeMaNLB": {}}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CheckEventCondition \
    --namespace $AB_NAMESPACE \
    --rewardId 'CnuwwnwS' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 189 'CheckEventCondition' test.out

#- 190 DeleteRewardConditionRecord
# body param: body
echo '{"conditionName": "QKoh9drr", "userId": "r9kQBcgT"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op DeleteRewardConditionRecord \
    --namespace $AB_NAMESPACE \
    --rewardId 'VhJ7DxGG' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 190 'DeleteRewardConditionRecord' test.out

#- 191 QuerySections
$CLI_EXE \
    --sn platform \
    --op QuerySections \
    --namespace $AB_NAMESPACE \
    --end 'C7h9IURT' \
    --limit '30' \
    --offset '95' \
    --start 'scx1Cecm' \
    --storeId '6zfsv0Tn' \
    --viewId 'X7kIX3An' \
    > test.out 2>&1
eval_tap $? 191 'QuerySections' test.out

#- 192 CreateSection
# body param: body
echo '{"active": false, "displayOrder": 66, "endDate": "1996-07-13T00:00:00Z", "ext": {"6SQyHuF6": {}, "6wUo0GQ4": {}, "XIUxkBUB": {}}, "fixedPeriodRotationConfig": {"backfillType": "CUSTOM", "duration": 23, "itemCount": 27, "rule": "SEQUENCE"}, "items": [{"id": "vi8RMp1Z", "sku": "dZ7nxmg0"}, {"id": "AUCrlfcD", "sku": "zmbXMKdf"}, {"id": "FS2FcLpJ", "sku": "aWMmvarZ"}], "localizations": {"r8RkX7Ma": {"description": "sQ01scrP", "localExt": {"LIwv4EKI": {}, "5VfjDYm4": {}, "pkBPilq9": {}}, "longDescription": "qgpdi6Yc", "title": "90Jd61qM"}, "OZl8m2Yh": {"description": "skQjqJ1O", "localExt": {"FRylE6yI": {}, "kIPDG1N0": {}, "W5llLxyk": {}}, "longDescription": "2bnJE0pw", "title": "7mgQTTKY"}, "uLidMWPn": {"description": "ysZCL68W", "localExt": {"aA5jbM0V": {}, "IR0Drm3f": {}, "0aTmDoBi": {}}, "longDescription": "UceRQbDP", "title": "0FxnQDbk"}}, "name": "fQS2TjrK", "rotationType": "CUSTOM", "startDate": "1993-05-19T00:00:00Z", "viewId": "v7OpviVo"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateSection \
    --namespace $AB_NAMESPACE \
    --storeId 'ol0aULO3' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 192 'CreateSection' test.out

#- 193 PurgeExpiredSection
$CLI_EXE \
    --sn platform \
    --op PurgeExpiredSection \
    --namespace $AB_NAMESPACE \
    --storeId 'tpvcRHtl' \
    > test.out 2>&1
eval_tap $? 193 'PurgeExpiredSection' test.out

#- 194 GetSection
$CLI_EXE \
    --sn platform \
    --op GetSection \
    --namespace $AB_NAMESPACE \
    --sectionId '4CndRlZw' \
    --storeId 'NuCVhyHt' \
    > test.out 2>&1
eval_tap $? 194 'GetSection' test.out

#- 195 UpdateSection
# body param: body
echo '{"active": false, "displayOrder": 85, "endDate": "1982-03-10T00:00:00Z", "ext": {"DDV88phg": {}, "HUNA1Vow": {}, "KI5wqXDU": {}}, "fixedPeriodRotationConfig": {"backfillType": "NONE", "duration": 46, "itemCount": 40, "rule": "SEQUENCE"}, "items": [{"id": "Kx65qlO9", "sku": "Hlu9wFud"}, {"id": "Qdv9dSKE", "sku": "RNmRZXJI"}, {"id": "OgEzMrxG", "sku": "C9HWQ9BM"}], "localizations": {"X0PgdeAq": {"description": "xHMLukZD", "localExt": {"dyQBwNm9": {}, "RPgX7mOi": {}, "6BPLYqXd": {}}, "longDescription": "27HQUX9k", "title": "64CqcQUG"}, "Aj4BezA1": {"description": "sEtK4KhF", "localExt": {"wMFfrVez": {}, "07DZHYw2": {}, "DY21lt15": {}}, "longDescription": "IJm8OqjA", "title": "PDgmDgiP"}, "FGXkLejO": {"description": "I0MsCDxY", "localExt": {"6xJHHbBK": {}, "shGme0EA": {}, "0ZeAfsSU": {}}, "longDescription": "zBjwBogY", "title": "WBrrKBXj"}}, "name": "O8UlIHNY", "rotationType": "FIXED_PERIOD", "startDate": "1972-04-08T00:00:00Z", "viewId": "s7rhVOJP"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateSection \
    --namespace $AB_NAMESPACE \
    --sectionId 'vBcqk2GK' \
    --storeId 'ETfkB9MS' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 195 'UpdateSection' test.out

#- 196 DeleteSection
$CLI_EXE \
    --sn platform \
    --op DeleteSection \
    --namespace $AB_NAMESPACE \
    --sectionId 'UcOtMjR4' \
    --storeId 'd73DuiY2' \
    > test.out 2>&1
eval_tap $? 196 'DeleteSection' test.out

#- 197 ListStores
$CLI_EXE \
    --sn platform \
    --op ListStores \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 197 'ListStores' test.out

#- 198 CreateStore
# body param: body
echo '{"defaultLanguage": "24uJBWRC", "defaultRegion": "w3CKOEXM", "description": "oMYZ2WRk", "supportedLanguages": ["7u4uBkCY", "aKqqm44i", "EpCQF7Is"], "supportedRegions": ["TfIQ9Qpo", "fqDIAcBi", "60zvmEpY"], "title": "pLabCd6i"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateStore \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 198 'CreateStore' test.out

#- 199 GetCatalogDefinition
$CLI_EXE \
    --sn platform \
    --op GetCatalogDefinition \
    --namespace $AB_NAMESPACE \
    --catalogType 'CATEGORY' \
    > test.out 2>&1
eval_tap $? 199 'GetCatalogDefinition' test.out

#- 200 DownloadCSVTemplates
$CLI_EXE \
    --sn platform \
    --op DownloadCSVTemplates \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 200 'DownloadCSVTemplates' test.out

#- 201 ExportStoreByCSV
# body param: body
echo '{"catalogType": "APP", "fieldsToBeIncluded": ["Iq3OswZj", "qXaqjFtJ", "QmQ26SQD"], "idsToBeExported": ["j3KoyF1a", "BLsYwjSr", "qLE3JumE"], "storeId": "YhqP3HcZ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ExportStoreByCSV \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 201 'ExportStoreByCSV' test.out

#- 202 ImportStore
eval_tap 0 202 'ImportStore # SKIP deprecated' test.out

#- 203 GetPublishedStore
$CLI_EXE \
    --sn platform \
    --op GetPublishedStore \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 203 'GetPublishedStore' test.out

#- 204 DeletePublishedStore
$CLI_EXE \
    --sn platform \
    --op DeletePublishedStore \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 204 'DeletePublishedStore' test.out

#- 205 GetPublishedStoreBackup
$CLI_EXE \
    --sn platform \
    --op GetPublishedStoreBackup \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 205 'GetPublishedStoreBackup' test.out

#- 206 RollbackPublishedStore
$CLI_EXE \
    --sn platform \
    --op RollbackPublishedStore \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 206 'RollbackPublishedStore' test.out

#- 207 GetStore
$CLI_EXE \
    --sn platform \
    --op GetStore \
    --namespace $AB_NAMESPACE \
    --storeId 'mTtfKLwU' \
    > test.out 2>&1
eval_tap $? 207 'GetStore' test.out

#- 208 UpdateStore
# body param: body
echo '{"defaultLanguage": "hV9ZoTGx", "defaultRegion": "v6bbSp8C", "description": "0VMF9aSo", "supportedLanguages": ["NUOck3qK", "FTfZmwDo", "c4dZcCWg"], "supportedRegions": ["JKRxPyQw", "TMAJ7CnF", "sdYkdE9Q"], "title": "PH7VfcwG"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateStore \
    --namespace $AB_NAMESPACE \
    --storeId 'Mauw1iBh' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 208 'UpdateStore' test.out

#- 209 DeleteStore
$CLI_EXE \
    --sn platform \
    --op DeleteStore \
    --namespace $AB_NAMESPACE \
    --storeId 'qwjv5jkg' \
    > test.out 2>&1
eval_tap $? 209 'DeleteStore' test.out

#- 210 QueryChanges
$CLI_EXE \
    --sn platform \
    --op QueryChanges \
    --namespace $AB_NAMESPACE \
    --storeId 'hZ5bT5kn' \
    --action 'UPDATE' \
    --itemSku 'K5f7Lz62' \
    --itemType 'LOOTBOX' \
    --limit '96' \
    --offset '87' \
    --selected 'false' \
    --sortBy '["createdAt", "createdAt:desc", "updatedAt:asc"]' \
    --status 'PUBLISHED' \
    --type 'SECTION' \
    --updatedAtEnd 'rfV3ny3u' \
    --updatedAtStart 'zh8moHU6' \
    --withTotal 'true' \
    > test.out 2>&1
eval_tap $? 210 'QueryChanges' test.out

#- 211 PublishAll
$CLI_EXE \
    --sn platform \
    --op PublishAll \
    --namespace $AB_NAMESPACE \
    --storeId '1hyt8BNs' \
    > test.out 2>&1
eval_tap $? 211 'PublishAll' test.out

#- 212 PublishSelected
$CLI_EXE \
    --sn platform \
    --op PublishSelected \
    --namespace $AB_NAMESPACE \
    --storeId 'WRbT1BvE' \
    > test.out 2>&1
eval_tap $? 212 'PublishSelected' test.out

#- 213 SelectAllRecords
$CLI_EXE \
    --sn platform \
    --op SelectAllRecords \
    --namespace $AB_NAMESPACE \
    --storeId '3yaMp7GA' \
    > test.out 2>&1
eval_tap $? 213 'SelectAllRecords' test.out

#- 214 SelectAllRecordsByCriteria
$CLI_EXE \
    --sn platform \
    --op SelectAllRecordsByCriteria \
    --namespace $AB_NAMESPACE \
    --storeId 'XkbTSmzV' \
    --action 'DELETE' \
    --itemSku 'nFjZ3pvN' \
    --itemType 'INGAMEITEM' \
    --selected 'false' \
    --type 'SECTION' \
    --updatedAtEnd 'ytOhdrnE' \
    --updatedAtStart 'oIDZxfUl' \
    > test.out 2>&1
eval_tap $? 214 'SelectAllRecordsByCriteria' test.out

#- 215 GetStatistic
$CLI_EXE \
    --sn platform \
    --op GetStatistic \
    --namespace $AB_NAMESPACE \
    --storeId 'Q59HQFLw' \
    --action 'UPDATE' \
    --itemSku 'GFoG6j0r' \
    --itemType 'LOOTBOX' \
    --type 'VIEW' \
    --updatedAtEnd 'XaMUnQTu' \
    --updatedAtStart 'MSUnBFYk' \
    > test.out 2>&1
eval_tap $? 215 'GetStatistic' test.out

#- 216 UnselectAllRecords
$CLI_EXE \
    --sn platform \
    --op UnselectAllRecords \
    --namespace $AB_NAMESPACE \
    --storeId 'sL2bhpSf' \
    > test.out 2>&1
eval_tap $? 216 'UnselectAllRecords' test.out

#- 217 SelectRecord
$CLI_EXE \
    --sn platform \
    --op SelectRecord \
    --changeId 'mKVlSanR' \
    --namespace $AB_NAMESPACE \
    --storeId '6gWRe1wo' \
    > test.out 2>&1
eval_tap $? 217 'SelectRecord' test.out

#- 218 UnselectRecord
$CLI_EXE \
    --sn platform \
    --op UnselectRecord \
    --changeId '2NmhO3mL' \
    --namespace $AB_NAMESPACE \
    --storeId 'ymP1llBj' \
    > test.out 2>&1
eval_tap $? 218 'UnselectRecord' test.out

#- 219 CloneStore
$CLI_EXE \
    --sn platform \
    --op CloneStore \
    --namespace $AB_NAMESPACE \
    --storeId 'YtjTVyX0' \
    --targetStoreId 'wXzenCNR' \
    > test.out 2>&1
eval_tap $? 219 'CloneStore' test.out

#- 220 ExportStore
eval_tap 0 220 'ExportStore # SKIP deprecated' test.out

#- 221 QueryImportHistory
$CLI_EXE \
    --sn platform \
    --op QueryImportHistory \
    --namespace $AB_NAMESPACE \
    --storeId 'gWRhj0yG' \
    --end 'Z84oLJor' \
    --limit '36' \
    --offset '35' \
    --sortBy 'SJgncfig' \
    --start 'Vn5YNxqC' \
    --success 'false' \
    > test.out 2>&1
eval_tap $? 221 'QueryImportHistory' test.out

#- 222 ImportStoreByCSV
# form data upload: category
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
# form data upload: display
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
# form data upload: item
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
# form data upload: section
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op ImportStoreByCSV \
    --namespace $AB_NAMESPACE \
    --storeId 'wVUzh1Ga' \
    --upload category $TEMP_FILE_UPLOAD \
    --upload display $TEMP_FILE_UPLOAD \
    --upload item $TEMP_FILE_UPLOAD \
    --notes 'Q8Dsu3Tq' \
    --upload section $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 222 'ImportStoreByCSV' test.out

#- 223 QuerySubscriptions
$CLI_EXE \
    --sn platform \
    --op QuerySubscriptions \
    --namespace $AB_NAMESPACE \
    --chargeStatus 'CHARGE_FAILED' \
    --itemId 'W2vXf7s7' \
    --limit '80' \
    --offset '2' \
    --sku 'xLE7aQVt' \
    --status 'EXPIRED' \
    --subscribedBy 'PLATFORM' \
    --userId 'U9XCHIXX' \
    > test.out 2>&1
eval_tap $? 223 'QuerySubscriptions' test.out

#- 224 RecurringChargeSubscription
$CLI_EXE \
    --sn platform \
    --op RecurringChargeSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId '87EVlZuE' \
    > test.out 2>&1
eval_tap $? 224 'RecurringChargeSubscription' test.out

#- 225 GetTicketDynamic
$CLI_EXE \
    --sn platform \
    --op GetTicketDynamic \
    --boothName 'ilaQ4vxG' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 225 'GetTicketDynamic' test.out

#- 226 DecreaseTicketSale
# body param: body
echo '{"orderNo": "cceXbuC1"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op DecreaseTicketSale \
    --boothName 'kBwlxg7c' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 226 'DecreaseTicketSale' test.out

#- 227 GetTicketBoothID
$CLI_EXE \
    --sn platform \
    --op GetTicketBoothID \
    --boothName 'SeK0yta6' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 227 'GetTicketBoothID' test.out

#- 228 IncreaseTicketSale
# body param: body
echo '{"count": 17, "orderNo": "nVLrD7oY"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op IncreaseTicketSale \
    --boothName '55krpRqG' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 228 'IncreaseTicketSale' test.out

#- 229 Commit
# body param: body
echo '{"actions": [{"operations": [{"creditPayload": {"balanceOrigin": "Epic", "count": 98, "currencyCode": "OqHv6DnT", "expireAt": "1996-04-09T00:00:00Z"}, "debitPayload": {"count": 79, "currencyCode": "giA1yZ6Z", "walletPlatform": "Steam"}, "fulFillItemPayload": {"count": 43, "entitlementCollectionId": "esrCKYHf", "entitlementOrigin": "Xbox", "itemIdentity": "TImNtNVp", "itemIdentityType": "ITEM_SKU"}, "revokeEntitlementPayload": {"count": 39, "entitlementId": "XlcyZAr8"}, "type": "REVOKE_ENTITLEMENT"}, {"creditPayload": {"balanceOrigin": "Epic", "count": 5, "currencyCode": "kLFL6jqH", "expireAt": "1996-12-25T00:00:00Z"}, "debitPayload": {"count": 37, "currencyCode": "ZSiKA47b", "walletPlatform": "IOS"}, "fulFillItemPayload": {"count": 77, "entitlementCollectionId": "8WexAKps", "entitlementOrigin": "Playstation", "itemIdentity": "Gw3zpSAs", "itemIdentityType": "ITEM_SKU"}, "revokeEntitlementPayload": {"count": 86, "entitlementId": "v0Dn2BVb"}, "type": "CREDIT_WALLET"}, {"creditPayload": {"balanceOrigin": "Epic", "count": 63, "currencyCode": "Qcf6VyTX", "expireAt": "1979-05-25T00:00:00Z"}, "debitPayload": {"count": 78, "currencyCode": "NIYAyh93", "walletPlatform": "IOS"}, "fulFillItemPayload": {"count": 87, "entitlementCollectionId": "VDXv9AXq", "entitlementOrigin": "Epic", "itemIdentity": "zQj7DMy8", "itemIdentityType": "ITEM_ID"}, "revokeEntitlementPayload": {"count": 41, "entitlementId": "ikfSsKlW"}, "type": "DEBIT_WALLET"}], "userId": "SPZ75bIl"}, {"operations": [{"creditPayload": {"balanceOrigin": "System", "count": 45, "currencyCode": "cZTUOdBl", "expireAt": "1975-08-23T00:00:00Z"}, "debitPayload": {"count": 61, "currencyCode": "LisdYyaR", "walletPlatform": "Epic"}, "fulFillItemPayload": {"count": 31, "entitlementCollectionId": "gXnW2EKg", "entitlementOrigin": "GooglePlay", "itemIdentity": "ZfEym0Q5", "itemIdentityType": "ITEM_ID"}, "revokeEntitlementPayload": {"count": 82, "entitlementId": "gMFzhmRT"}, "type": "DEBIT_WALLET"}, {"creditPayload": {"balanceOrigin": "Steam", "count": 31, "currencyCode": "XjXFVkOh", "expireAt": "1997-07-15T00:00:00Z"}, "debitPayload": {"count": 31, "currencyCode": "YO4aAVdy", "walletPlatform": "Playstation"}, "fulFillItemPayload": {"count": 29, "entitlementCollectionId": "BO1NCevX", "entitlementOrigin": "Playstation", "itemIdentity": "cguIqHeJ", "itemIdentityType": "ITEM_SKU"}, "revokeEntitlementPayload": {"count": 52, "entitlementId": "bpXglztO"}, "type": "FULFILL_ITEM"}, {"creditPayload": {"balanceOrigin": "Playstation", "count": 60, "currencyCode": "g2d6N4M8", "expireAt": "1990-03-15T00:00:00Z"}, "debitPayload": {"count": 21, "currencyCode": "oXtkTkHz", "walletPlatform": "Oculus"}, "fulFillItemPayload": {"count": 70, "entitlementCollectionId": "Ia7HlfDD", "entitlementOrigin": "Nintendo", "itemIdentity": "1m8Z07Cz", "itemIdentityType": "ITEM_SKU"}, "revokeEntitlementPayload": {"count": 9, "entitlementId": "Wf8PRX4V"}, "type": "REVOKE_ENTITLEMENT"}], "userId": "rqDOJZEg"}, {"operations": [{"creditPayload": {"balanceOrigin": "System", "count": 13, "currencyCode": "tZQ1WDwj", "expireAt": "1995-03-09T00:00:00Z"}, "debitPayload": {"count": 10, "currencyCode": "QnVxIVPS", "walletPlatform": "Steam"}, "fulFillItemPayload": {"count": 32, "entitlementCollectionId": "BR3AkrxR", "entitlementOrigin": "Playstation", "itemIdentity": "EMpCcCZa", "itemIdentityType": "ITEM_SKU"}, "revokeEntitlementPayload": {"count": 91, "entitlementId": "7nm21gYH"}, "type": "FULFILL_ITEM"}, {"creditPayload": {"balanceOrigin": "Nintendo", "count": 3, "currencyCode": "9CVgJ7EA", "expireAt": "1988-10-06T00:00:00Z"}, "debitPayload": {"count": 8, "currencyCode": "Rn0oOo7h", "walletPlatform": "GooglePlay"}, "fulFillItemPayload": {"count": 75, "entitlementCollectionId": "CdFYHc2O", "entitlementOrigin": "Twitch", "itemIdentity": "3nC7z39W", "itemIdentityType": "ITEM_ID"}, "revokeEntitlementPayload": {"count": 48, "entitlementId": "JaTlZsgp"}, "type": "REVOKE_ENTITLEMENT"}, {"creditPayload": {"balanceOrigin": "Twitch", "count": 67, "currencyCode": "YakwDGbu", "expireAt": "1984-02-08T00:00:00Z"}, "debitPayload": {"count": 66, "currencyCode": "Z4xZ8fV3", "walletPlatform": "Playstation"}, "fulFillItemPayload": {"count": 22, "entitlementCollectionId": "86c9RNSt", "entitlementOrigin": "Oculus", "itemIdentity": "FwjiZNYl", "itemIdentityType": "ITEM_SKU"}, "revokeEntitlementPayload": {"count": 57, "entitlementId": "pLSrqmfJ"}, "type": "FULFILL_ITEM"}], "userId": "22MFVOyd"}], "metadata": {"LMExalcs": {}, "ZB9JcKhA": {}, "YA4PAnhC": {}}, "needPreCheck": false, "transactionId": "XCfDzA9L", "type": "2X6BtUan"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op Commit \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 229 'Commit' test.out

#- 230 GetTradeHistoryByCriteria
$CLI_EXE \
    --sn platform \
    --op GetTradeHistoryByCriteria \
    --namespace $AB_NAMESPACE \
    --limit '28' \
    --offset '13' \
    --status 'SUCCESS' \
    --type 'PskKuII8' \
    --userId 'yHinOwLC' \
    > test.out 2>&1
eval_tap $? 230 'GetTradeHistoryByCriteria' test.out

#- 231 GetTradeHistoryByTransactionId
$CLI_EXE \
    --sn platform \
    --op GetTradeHistoryByTransactionId \
    --namespace $AB_NAMESPACE \
    --transactionId 'ncqrtxa5' \
    > test.out 2>&1
eval_tap $? 231 'GetTradeHistoryByTransactionId' test.out

#- 232 UnlockSteamUserAchievement
# body param: body
echo '{"achievements": [{"id": "8EEadhsL", "value": 68}, {"id": "nZCMOZu4", "value": 24}, {"id": "aQtiaQPf", "value": 27}], "steamUserId": "iRTH1BHS"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UnlockSteamUserAchievement \
    --namespace $AB_NAMESPACE \
    --userId 'Z5HZl2x6' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 232 'UnlockSteamUserAchievement' test.out

#- 233 GetXblUserAchievements
$CLI_EXE \
    --sn platform \
    --op GetXblUserAchievements \
    --namespace $AB_NAMESPACE \
    --userId 'AIcNFXCN' \
    --xboxUserId '3tayrfpB' \
    > test.out 2>&1
eval_tap $? 233 'GetXblUserAchievements' test.out

#- 234 UpdateXblUserAchievement
# body param: body
echo '{"achievements": [{"id": "upKmpPO1", "percentComplete": 47}, {"id": "pRoyz5Ct", "percentComplete": 38}, {"id": "jjy9vhFH", "percentComplete": 2}], "serviceConfigId": "aUFYMp85", "titleId": "CnFa5uFp", "xboxUserId": "Z07BsLmw"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXblUserAchievement \
    --namespace $AB_NAMESPACE \
    --userId 'dTtOQQwu' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 234 'UpdateXblUserAchievement' test.out

#- 235 AnonymizeCampaign
$CLI_EXE \
    --sn platform \
    --op AnonymizeCampaign \
    --namespace $AB_NAMESPACE \
    --userId 'cPbyOX31' \
    > test.out 2>&1
eval_tap $? 235 'AnonymizeCampaign' test.out

#- 236 AnonymizeEntitlement
$CLI_EXE \
    --sn platform \
    --op AnonymizeEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'KGjib5ux' \
    > test.out 2>&1
eval_tap $? 236 'AnonymizeEntitlement' test.out

#- 237 AnonymizeFulfillment
$CLI_EXE \
    --sn platform \
    --op AnonymizeFulfillment \
    --namespace $AB_NAMESPACE \
    --userId '1WGX915x' \
    > test.out 2>&1
eval_tap $? 237 'AnonymizeFulfillment' test.out

#- 238 AnonymizeIntegration
$CLI_EXE \
    --sn platform \
    --op AnonymizeIntegration \
    --namespace $AB_NAMESPACE \
    --userId '52OZjC1p' \
    > test.out 2>&1
eval_tap $? 238 'AnonymizeIntegration' test.out

#- 239 AnonymizeOrder
$CLI_EXE \
    --sn platform \
    --op AnonymizeOrder \
    --namespace $AB_NAMESPACE \
    --userId '9KWkjPjr' \
    > test.out 2>&1
eval_tap $? 239 'AnonymizeOrder' test.out

#- 240 AnonymizePayment
$CLI_EXE \
    --sn platform \
    --op AnonymizePayment \
    --namespace $AB_NAMESPACE \
    --userId 'SQw7GyX5' \
    > test.out 2>&1
eval_tap $? 240 'AnonymizePayment' test.out

#- 241 AnonymizeRevocation
$CLI_EXE \
    --sn platform \
    --op AnonymizeRevocation \
    --namespace $AB_NAMESPACE \
    --userId 'yeJmvZE1' \
    > test.out 2>&1
eval_tap $? 241 'AnonymizeRevocation' test.out

#- 242 AnonymizeSubscription
$CLI_EXE \
    --sn platform \
    --op AnonymizeSubscription \
    --namespace $AB_NAMESPACE \
    --userId 'iRS4kZl0' \
    > test.out 2>&1
eval_tap $? 242 'AnonymizeSubscription' test.out

#- 243 AnonymizeWallet
$CLI_EXE \
    --sn platform \
    --op AnonymizeWallet \
    --namespace $AB_NAMESPACE \
    --userId 'FLCcUggi' \
    > test.out 2>&1
eval_tap $? 243 'AnonymizeWallet' test.out

#- 244 GetUserDLCByPlatform
$CLI_EXE \
    --sn platform \
    --op GetUserDLCByPlatform \
    --namespace $AB_NAMESPACE \
    --userId 'H61nnxvN' \
    --type 'STEAM' \
    > test.out 2>&1
eval_tap $? 244 'GetUserDLCByPlatform' test.out

#- 245 GetUserDLC
$CLI_EXE \
    --sn platform \
    --op GetUserDLC \
    --namespace $AB_NAMESPACE \
    --userId 'D9ok59Ap' \
    --includeAllNamespaces 'true' \
    --status 'FULFILLED' \
    --type 'EPICGAMES' \
    > test.out 2>&1
eval_tap $? 245 'GetUserDLC' test.out

#- 246 QueryUserEntitlements
$CLI_EXE \
    --sn platform \
    --op QueryUserEntitlements \
    --namespace $AB_NAMESPACE \
    --userId '2lnkLHaF' \
    --activeOnly 'false' \
    --appType 'GAME' \
    --collectionId 'tIkhdS3n' \
    --entitlementClazz 'ENTITLEMENT' \
    --entitlementName 'tgyn6se2' \
    --features '["YZnT3NfM", "dBWjy6Dc", "gdl0i5mR"]' \
    --fuzzyMatchName 'true' \
    --ignoreActiveDate 'true' \
    --itemId '["rU530Lil", "ZiJwFTLf", "Uy3krhNv"]' \
    --limit '13' \
    --offset '68' \
    --origin 'GooglePlay' \
    > test.out 2>&1
eval_tap $? 246 'QueryUserEntitlements' test.out

#- 247 GrantUserEntitlement
# body param: body
echo '[{"collectionId": "muoxFxUm", "endDate": "1994-05-19T00:00:00Z", "grantedCode": "9fQMwVqB", "itemId": "XgbynefP", "itemNamespace": "hv3JI18Q", "language": "cuWw-CVXi", "metadata": {"qGSILXpg": {}, "TurKKqyg": {}, "C14Ab089": {}}, "origin": "Oculus", "quantity": 92, "region": "f4Y0Itrd", "source": "GIFT", "startDate": "1999-06-05T00:00:00Z", "storeId": "hlTyLNgi"}, {"collectionId": "Kj0uAcdR", "endDate": "1981-07-26T00:00:00Z", "grantedCode": "F3YAsfUB", "itemId": "w8PZlfsH", "itemNamespace": "3sY1aSjs", "language": "tvW", "metadata": {"C67qRQid": {}, "N1uyMcLz": {}, "6xbkts7s": {}}, "origin": "Xbox", "quantity": 50, "region": "eT3OgQuC", "source": "PURCHASE", "startDate": "1981-08-16T00:00:00Z", "storeId": "dtr9C5DV"}, {"collectionId": "yuHYPmcj", "endDate": "1986-09-09T00:00:00Z", "grantedCode": "BOyfe2cJ", "itemId": "ct0BHOd9", "itemNamespace": "m7ZyQ5V2", "language": "dgdM_RSQq-wH", "metadata": {"p9UmCKxf": {}, "0F43OcKN": {}, "YKkGCnHQ": {}}, "origin": "Epic", "quantity": 88, "region": "fwW0qklq", "source": "REFERRAL_BONUS", "startDate": "1995-07-08T00:00:00Z", "storeId": "RBB9nAY0"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op GrantUserEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'xVjLcLN6' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 247 'GrantUserEntitlement' test.out

#- 248 GetUserAppEntitlementByAppId
$CLI_EXE \
    --sn platform \
    --op GetUserAppEntitlementByAppId \
    --namespace $AB_NAMESPACE \
    --userId 'yriYwpvq' \
    --activeOnly 'true' \
    --appId 'v7eS2Jgw' \
    > test.out 2>&1
eval_tap $? 248 'GetUserAppEntitlementByAppId' test.out

#- 249 QueryUserEntitlementsByAppType
$CLI_EXE \
    --sn platform \
    --op QueryUserEntitlementsByAppType \
    --namespace $AB_NAMESPACE \
    --userId 'OJrlcWcv' \
    --activeOnly 'true' \
    --limit '10' \
    --offset '61' \
    --appType 'DLC' \
    > test.out 2>&1
eval_tap $? 249 'QueryUserEntitlementsByAppType' test.out

#- 250 GetUserEntitlementsByIds
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementsByIds \
    --namespace $AB_NAMESPACE \
    --userId 'wONk3Gpp' \
    --ids '["3y12GVpx", "0F761NkT", "MA8teSZ4"]' \
    > test.out 2>&1
eval_tap $? 250 'GetUserEntitlementsByIds' test.out

#- 251 GetUserEntitlementByItemId
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'hXIS7JP5' \
    --activeOnly 'false' \
    --entitlementClazz 'LOOTBOX' \
    --platform 'oVkPmlJh' \
    --itemId '6PcpxEKf' \
    > test.out 2>&1
eval_tap $? 251 'GetUserEntitlementByItemId' test.out

#- 252 GetUserActiveEntitlementsByItemIds
$CLI_EXE \
    --sn platform \
    --op GetUserActiveEntitlementsByItemIds \
    --namespace $AB_NAMESPACE \
    --userId 'Z32o4MAg' \
    --ids '["SGzzI8Jl", "ksZiqPUL", "HY5vXQwm"]' \
    --platform 'g23Pfrut' \
    > test.out 2>&1
eval_tap $? 252 'GetUserActiveEntitlementsByItemIds' test.out

#- 253 GetUserEntitlementBySku
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementBySku \
    --namespace $AB_NAMESPACE \
    --userId '4YxlB5CZ' \
    --activeOnly 'false' \
    --entitlementClazz 'APP' \
    --platform 'F7CZFAOD' \
    --sku 'wYedi7VK' \
    > test.out 2>&1
eval_tap $? 253 'GetUserEntitlementBySku' test.out

#- 254 ExistsAnyUserActiveEntitlement
$CLI_EXE \
    --sn platform \
    --op ExistsAnyUserActiveEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'xhluqNey' \
    --appIds '["7OZpbm6u", "ne0FESJj", "MKouXulN"]' \
    --itemIds '["0l0es7cM", "VaO19s71", "EhjRuK4g"]' \
    --platform 'SrkLsFJy' \
    --skus '["d7ss2SqW", "pZhwfRxM", "JarMpSjn"]' \
    > test.out 2>&1
eval_tap $? 254 'ExistsAnyUserActiveEntitlement' test.out

#- 255 ExistsAnyUserActiveEntitlementByItemIds
$CLI_EXE \
    --sn platform \
    --op ExistsAnyUserActiveEntitlementByItemIds \
    --namespace $AB_NAMESPACE \
    --userId '7AntH076' \
    --platform 'LBTPu5Bo' \
    --itemIds '["z6wjeij5", "oTdZ9R9z", "nv1FxIDD"]' \
    > test.out 2>&1
eval_tap $? 255 'ExistsAnyUserActiveEntitlementByItemIds' test.out

#- 256 GetUserAppEntitlementOwnershipByAppId
$CLI_EXE \
    --sn platform \
    --op GetUserAppEntitlementOwnershipByAppId \
    --namespace $AB_NAMESPACE \
    --userId '1f8MTBUu' \
    --appId 'JUpHvufv' \
    > test.out 2>&1
eval_tap $? 256 'GetUserAppEntitlementOwnershipByAppId' test.out

#- 257 GetUserEntitlementOwnershipByItemId
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementOwnershipByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'mnOC0rL3' \
    --entitlementClazz 'APP' \
    --platform 'NLi89Yru' \
    --itemId 'KkSIW3rE' \
    > test.out 2>&1
eval_tap $? 257 'GetUserEntitlementOwnershipByItemId' test.out

#- 258 GetUserEntitlementOwnershipByItemIds
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementOwnershipByItemIds \
    --namespace $AB_NAMESPACE \
    --userId 'JAetNtJq' \
    --ids '["koLRXeOC", "wOnfcmOp", "ZhKpy37M"]' \
    --platform '8MwGwELd' \
    > test.out 2>&1
eval_tap $? 258 'GetUserEntitlementOwnershipByItemIds' test.out

#- 259 GetUserEntitlementOwnershipBySku
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementOwnershipBySku \
    --namespace $AB_NAMESPACE \
    --userId '43WdUMHQ' \
    --entitlementClazz 'LOOTBOX' \
    --platform '2n6HNGoQ' \
    --sku 'Oz5DWrSM' \
    > test.out 2>&1
eval_tap $? 259 'GetUserEntitlementOwnershipBySku' test.out

#- 260 RevokeAllEntitlements
$CLI_EXE \
    --sn platform \
    --op RevokeAllEntitlements \
    --namespace $AB_NAMESPACE \
    --userId '9QSU4azy' \
    > test.out 2>&1
eval_tap $? 260 'RevokeAllEntitlements' test.out

#- 261 RevokeUserEntitlements
$CLI_EXE \
    --sn platform \
    --op RevokeUserEntitlements \
    --namespace $AB_NAMESPACE \
    --userId 'vEFKO5Oo' \
    --entitlementIds 'l9XB4Hvm' \
    > test.out 2>&1
eval_tap $? 261 'RevokeUserEntitlements' test.out

#- 262 GetUserEntitlement
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlement \
    --entitlementId 'HBjlNZhf' \
    --namespace $AB_NAMESPACE \
    --userId 'sZBJH6PU' \
    > test.out 2>&1
eval_tap $? 262 'GetUserEntitlement' test.out

#- 263 UpdateUserEntitlement
# body param: body
echo '{"collectionId": "QZLvPIhj", "endDate": "1971-02-14T00:00:00Z", "nullFieldList": ["R0fIlYlG", "DVeoGSUp", "MH3GPHPf"], "origin": "Twitch", "reason": "S6VNHiIt", "startDate": "1987-04-24T00:00:00Z", "status": "INACTIVE", "useCount": 56}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateUserEntitlement \
    --entitlementId 'IxaZWrDz' \
    --namespace $AB_NAMESPACE \
    --userId 'f1jq81Fr' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 263 'UpdateUserEntitlement' test.out

#- 264 ConsumeUserEntitlement
# body param: body
echo '{"metadata": {"fiTvhXXt": {}, "k9Tjhp4k": {}, "NshbounJ": {}}, "options": ["lP9uFcrf", "srUb1ERx", "vGdShbwR"], "platform": "bDYd4Kzl", "requestId": "vj2MRh2d", "useCount": 0}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ConsumeUserEntitlement \
    --entitlementId 'T5hQsocQ' \
    --namespace $AB_NAMESPACE \
    --userId 'lMfCybqU' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 264 'ConsumeUserEntitlement' test.out

#- 265 DisableUserEntitlement
$CLI_EXE \
    --sn platform \
    --op DisableUserEntitlement \
    --entitlementId 'CdK58gn5' \
    --namespace $AB_NAMESPACE \
    --userId 'yilZNZzP' \
    > test.out 2>&1
eval_tap $? 265 'DisableUserEntitlement' test.out

#- 266 EnableUserEntitlement
$CLI_EXE \
    --sn platform \
    --op EnableUserEntitlement \
    --entitlementId 'SsxV4iLJ' \
    --namespace $AB_NAMESPACE \
    --userId 'AwqoFq52' \
    > test.out 2>&1
eval_tap $? 266 'EnableUserEntitlement' test.out

#- 267 GetUserEntitlementHistories
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementHistories \
    --entitlementId '1e09BUfH' \
    --namespace $AB_NAMESPACE \
    --userId '1AsXoDWj' \
    > test.out 2>&1
eval_tap $? 267 'GetUserEntitlementHistories' test.out

#- 268 RevokeUserEntitlement
# body param: body
echo '{"metadata": {"ENU8xOTN": {}, "C8yuef8n": {}, "BAdhkFbK": {}}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RevokeUserEntitlement \
    --entitlementId 'KXUephjV' \
    --namespace $AB_NAMESPACE \
    --userId 'ym2NoMzc' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 268 'RevokeUserEntitlement' test.out

#- 269 RevokeUserEntitlementByUseCount
# body param: body
echo '{"reason": "CXW0rQ7i", "useCount": 50}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RevokeUserEntitlementByUseCount \
    --entitlementId 'wQsKPYWe' \
    --namespace $AB_NAMESPACE \
    --userId 'XPqf0cOx' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 269 'RevokeUserEntitlementByUseCount' test.out

#- 270 PreCheckRevokeUserEntitlementByUseCount
$CLI_EXE \
    --sn platform \
    --op PreCheckRevokeUserEntitlementByUseCount \
    --entitlementId 'S3HprztN' \
    --namespace $AB_NAMESPACE \
    --userId 'mcsMBxTG' \
    --quantity '28' \
    > test.out 2>&1
eval_tap $? 270 'PreCheckRevokeUserEntitlementByUseCount' test.out

#- 271 RevokeUseCount
eval_tap 0 271 'RevokeUseCount # SKIP deprecated' test.out

#- 272 SellUserEntitlement
# body param: body
echo '{"platform": "av2iKjci", "requestId": "tWAx9UhN", "useCount": 53}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SellUserEntitlement \
    --entitlementId 'VFPsBrWA' \
    --namespace $AB_NAMESPACE \
    --userId 'tbgtt5RF' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 272 'SellUserEntitlement' test.out

#- 273 FulfillItem
# body param: body
echo '{"duration": 75, "endDate": "1975-12-14T00:00:00Z", "entitlementCollectionId": "aaR8Bq7w", "entitlementOrigin": "Other", "itemId": "o36AIHz0", "itemSku": "BrKAfov6", "language": "TE1q7wJU", "metadata": {"8pJUi98I": {}, "lCjyomGj": {}, "9M7gM9qz": {}}, "order": {"currency": {"currencyCode": "tdrtSr38", "currencySymbol": "DyGTp86l", "currencyType": "REAL", "decimals": 42, "namespace": "w2LCeeLq"}, "ext": {"jxfWEm63": {}, "73bicmhL": {}, "TOQ19Eeo": {}}, "free": false}, "orderNo": "JctZsmh5", "origin": "System", "overrideBundleItemQty": {"3DroPrek": 6, "GSqEBAvc": 38, "EQFew98c": 85}, "quantity": 49, "region": "iWEX7sNh", "source": "GIFT", "startDate": "1999-01-20T00:00:00Z", "storeId": "Xe2SRWIl"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op FulfillItem \
    --namespace $AB_NAMESPACE \
    --userId 't0FfcP6J' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 273 'FulfillItem' test.out

#- 274 RedeemCode
# body param: body
echo '{"code": "1HYs2uFd", "language": "IfaT", "region": "7t1z4eo1"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RedeemCode \
    --namespace $AB_NAMESPACE \
    --userId 'YUKtPBbn' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 274 'RedeemCode' test.out

#- 275 PreCheckFulfillItem
# body param: body
echo '{"itemId": "vn8lSNq1", "itemSku": "zoconUTB", "quantity": 19}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PreCheckFulfillItem \
    --namespace $AB_NAMESPACE \
    --userId '9erDZA8u' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 275 'PreCheckFulfillItem' test.out

#- 276 FulfillRewards
# body param: body
echo '{"entitlementCollectionId": "JjtnxLMg", "entitlementOrigin": "GooglePlay", "metadata": {"r1ZPoJH1": {}, "to8d8q0k": {}, "DhLnbMob": {}}, "origin": "Steam", "rewards": [{"currency": {"currencyCode": "c6crtCYr", "namespace": "TPWId8q9"}, "item": {"itemId": "4IHcJIHe", "itemName": "QoX0VgmS", "itemSku": "ydBWjgpn", "itemType": "n0V2JcFY"}, "quantity": 78, "type": "CURRENCY"}, {"currency": {"currencyCode": "4Q5dzFln", "namespace": "4S8zAmpf"}, "item": {"itemId": "i6vDOo6S", "itemName": "wQzMs0xr", "itemSku": "yZQibGMX", "itemType": "K6TDvWT4"}, "quantity": 30, "type": "ITEM"}, {"currency": {"currencyCode": "B4EiEcNK", "namespace": "KvqbyU47"}, "item": {"itemId": "Vxg609OU", "itemName": "uJbiUfbZ", "itemSku": "uGaTgdiN", "itemType": "88qC1Vij"}, "quantity": 70, "type": "CURRENCY"}], "source": "IAP_CHARGEBACK_REVERSED", "transactionId": "sfs1YWGp"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op FulfillRewards \
    --namespace $AB_NAMESPACE \
    --userId 'XtVJH30l' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 276 'FulfillRewards' test.out

#- 277 QueryUserIAPOrders
$CLI_EXE \
    --sn platform \
    --op QueryUserIAPOrders \
    --namespace $AB_NAMESPACE \
    --userId '978wLBLJ' \
    --endTime 'LSTgUUsf' \
    --limit '88' \
    --offset '69' \
    --productId '1JJ7BDXO' \
    --startTime 'KVex2ffT' \
    --status 'VERIFIED' \
    --type 'TWITCH' \
    > test.out 2>&1
eval_tap $? 277 'QueryUserIAPOrders' test.out

#- 278 QueryAllUserIAPOrders
$CLI_EXE \
    --sn platform \
    --op QueryAllUserIAPOrders \
    --namespace $AB_NAMESPACE \
    --userId 'X1n1GXVR' \
    > test.out 2>&1
eval_tap $? 278 'QueryAllUserIAPOrders' test.out

#- 279 QueryUserIAPConsumeHistory
$CLI_EXE \
    --sn platform \
    --op QueryUserIAPConsumeHistory \
    --namespace $AB_NAMESPACE \
    --userId 'OJrn11Ki' \
    --endTime 'MGWVu5L8' \
    --limit '64' \
    --offset '62' \
    --startTime '47nF3FjE' \
    --status 'FAIL' \
    --type 'STEAM' \
    > test.out 2>&1
eval_tap $? 279 'QueryUserIAPConsumeHistory' test.out

#- 280 MockFulfillIAPItem
# body param: body
echo '{"itemIdentityType": "ITEM_SKU", "language": "YyP_fDxK-wY", "productId": "kdJhcaWZ", "region": "6rkH1nPO", "transactionId": "scvQuttA", "type": "XBOX"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op MockFulfillIAPItem \
    --namespace $AB_NAMESPACE \
    --userId 'RzwQCfV1' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 280 'MockFulfillIAPItem' test.out

#- 281 QueryUserThirdPartySubscription
$CLI_EXE \
    --sn platform \
    --op QueryUserThirdPartySubscription \
    --namespace $AB_NAMESPACE \
    --userId 'cLqE8xbD' \
    --activeOnly 'true' \
    --groupId 'sFzkvhBl' \
    --limit '51' \
    --offset '32' \
    --platform 'OCULUS' \
    --productId 'XD0n5Mic' \
    > test.out 2>&1
eval_tap $? 281 'QueryUserThirdPartySubscription' test.out

#- 282 GetThirdPartyPlatformSubscriptionOwnershipByGroupId
$CLI_EXE \
    --sn platform \
    --op GetThirdPartyPlatformSubscriptionOwnershipByGroupId \
    --namespace $AB_NAMESPACE \
    --platform 'STEAM' \
    --userId 'PiZUmeB8' \
    --groupId 'ns2sCwqk' \
    > test.out 2>&1
eval_tap $? 282 'GetThirdPartyPlatformSubscriptionOwnershipByGroupId' test.out

#- 283 GetThirdPartyPlatformSubscriptionOwnershipByProductId
$CLI_EXE \
    --sn platform \
    --op GetThirdPartyPlatformSubscriptionOwnershipByProductId \
    --namespace $AB_NAMESPACE \
    --platform 'STEAM' \
    --userId '34MC4y3X' \
    --productId 'VzPTGyFo' \
    > test.out 2>&1
eval_tap $? 283 'GetThirdPartyPlatformSubscriptionOwnershipByProductId' test.out

#- 284 QueryUserThirdPartySubscriptionTransactions
$CLI_EXE \
    --sn platform \
    --op QueryUserThirdPartySubscriptionTransactions \
    --namespace $AB_NAMESPACE \
    --userId 'Ly8aLzdn' \
    --activeOnly 'true' \
    --groupId 'VWw0gVJm' \
    --limit '11' \
    --offset '88' \
    --platform 'TWITCH' \
    --productId 'rf8Tm2hl' \
    > test.out 2>&1
eval_tap $? 284 'QueryUserThirdPartySubscriptionTransactions' test.out

#- 285 GetThirdPartySubscriptionDetails
$CLI_EXE \
    --sn platform \
    --op GetThirdPartySubscriptionDetails \
    --id 'j6QjgmQI' \
    --namespace $AB_NAMESPACE \
    --userId 'ISBpOYKO' \
    > test.out 2>&1
eval_tap $? 285 'GetThirdPartySubscriptionDetails' test.out

#- 286 GetSubscriptionHistory
$CLI_EXE \
    --sn platform \
    --op GetSubscriptionHistory \
    --id 'CvKxA2Rj' \
    --namespace $AB_NAMESPACE \
    --userId 'rqldZMkU' \
    --limit '72' \
    --offset '100' \
    > test.out 2>&1
eval_tap $? 286 'GetSubscriptionHistory' test.out

#- 287 SyncSubscriptionTransaction
$CLI_EXE \
    --sn platform \
    --op SyncSubscriptionTransaction \
    --id 'vLhWH696' \
    --namespace $AB_NAMESPACE \
    --userId 'RnCcfEEJ' \
    > test.out 2>&1
eval_tap $? 287 'SyncSubscriptionTransaction' test.out

#- 288 GetThirdPartyUserSubscriptionDetails
$CLI_EXE \
    --sn platform \
    --op GetThirdPartyUserSubscriptionDetails \
    --id 'ZTAaWwjo' \
    --namespace $AB_NAMESPACE \
    --userId 'TZGSsVZz' \
    > test.out 2>&1
eval_tap $? 288 'GetThirdPartyUserSubscriptionDetails' test.out

#- 289 SyncSubscription
$CLI_EXE \
    --sn platform \
    --op SyncSubscription \
    --id 'BwqCsBmq' \
    --namespace $AB_NAMESPACE \
    --userId 'AYIs1BwW' \
    > test.out 2>&1
eval_tap $? 289 'SyncSubscription' test.out

#- 290 QueryUserOrders
$CLI_EXE \
    --sn platform \
    --op QueryUserOrders \
    --namespace $AB_NAMESPACE \
    --userId 'NJv2SFjZ' \
    --discounted 'false' \
    --itemId 'AOTlaPU8' \
    --limit '87' \
    --offset '81' \
    --status 'REFUNDING' \
    > test.out 2>&1
eval_tap $? 290 'QueryUserOrders' test.out

#- 291 AdminCreateUserOrder
# body param: body
echo '{"currencyCode": "PqbYHxuy", "currencyNamespace": "4maOmEtK", "discountCodes": ["wwLxSRGf", "RSeROzf9", "evdqKxYA"], "discountedPrice": 85, "entitlementPlatform": "Nintendo", "ext": {"B9yKbOpf": {}, "IW3qXrJZ": {}, "KnFbjEFE": {}}, "itemId": "ygJP3XjX", "language": "QpfjoesS", "options": {"skipPriceValidation": true}, "platform": "IOS", "price": 59, "quantity": 86, "region": "9GUYeREx", "returnUrl": "vKVFYidU", "sandbox": true, "sectionId": "eljuvFte"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op AdminCreateUserOrder \
    --namespace $AB_NAMESPACE \
    --userId 'MXsaO0V2' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 291 'AdminCreateUserOrder' test.out

#- 292 CountOfPurchasedItem
$CLI_EXE \
    --sn platform \
    --op CountOfPurchasedItem \
    --namespace $AB_NAMESPACE \
    --userId 'IBjZ9IPg' \
    --itemId 'EprHOU3v' \
    > test.out 2>&1
eval_tap $? 292 'CountOfPurchasedItem' test.out

#- 293 GetUserOrder
$CLI_EXE \
    --sn platform \
    --op GetUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo '1N9cIILl' \
    --userId 'fCNGdhJI' \
    > test.out 2>&1
eval_tap $? 293 'GetUserOrder' test.out

#- 294 UpdateUserOrderStatus
# body param: body
echo '{"status": "REFUND_FAILED", "statusReason": "4MaVJ8U4"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateUserOrderStatus \
    --namespace $AB_NAMESPACE \
    --orderNo 'I1DdfP2F' \
    --userId 'HumhoQ2p' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 294 'UpdateUserOrderStatus' test.out

#- 295 FulfillUserOrder
$CLI_EXE \
    --sn platform \
    --op FulfillUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo '82jqi5jO' \
    --userId '7nEKjhN5' \
    > test.out 2>&1
eval_tap $? 295 'FulfillUserOrder' test.out

#- 296 GetUserOrderGrant
eval_tap 0 296 'GetUserOrderGrant # SKIP deprecated' test.out

#- 297 GetUserOrderHistories
$CLI_EXE \
    --sn platform \
    --op GetUserOrderHistories \
    --namespace $AB_NAMESPACE \
    --orderNo '7g6b6hKS' \
    --userId 'f978YcQN' \
    > test.out 2>&1
eval_tap $? 297 'GetUserOrderHistories' test.out

#- 298 ProcessUserOrderNotification
# body param: body
echo '{"additionalData": {"cardSummary": "QdJPUdRH"}, "authorisedTime": "1971-02-09T00:00:00Z", "chargebackReversedTime": "1982-04-11T00:00:00Z", "chargebackTime": "1982-01-14T00:00:00Z", "chargedTime": "1992-08-12T00:00:00Z", "createdTime": "1998-05-26T00:00:00Z", "currency": {"currencyCode": "81CLlifh", "currencySymbol": "Z02NYHN5", "currencyType": "VIRTUAL", "decimals": 10, "namespace": "1eRr1fGY"}, "customParameters": {"DgWJ05G5": {}, "YbqPoj3d": {}, "nMyXDqgr": {}}, "extOrderNo": "LRC5Nmy5", "extTxId": "nCbPpsC0", "extUserId": "RhOMUCXh", "issuedAt": "1989-08-20T00:00:00Z", "metadata": {"VZVFz63Q": "4rBWUBad", "DOXedlsU": "IG6DA0uB", "iKWXuoZy": "Vv1lknTj"}, "namespace": "vPvQYhsT", "nonceStr": "fgGtx6z9", "paymentData": {"discountAmount": 63, "discountCode": "0G63gAi3", "subtotalPrice": 73, "tax": 27, "totalPrice": 8}, "paymentMethod": "qk4jukIe", "paymentMethodFee": 52, "paymentOrderNo": "ZJnbGMkb", "paymentProvider": "WXPAY", "paymentProviderFee": 24, "paymentStationUrl": "UoPssNKJ", "price": 51, "refundedTime": "1998-08-12T00:00:00Z", "salesTax": 9, "sandbox": false, "sku": "FIb5xusb", "status": "REFUND_FAILED", "statusReason": "qkjQetV0", "subscriptionId": "fUPfRygG", "subtotalPrice": 78, "targetNamespace": "2ACTr6pO", "targetUserId": "f6kesMYM", "tax": 54, "totalPrice": 6, "totalTax": 33, "txEndTime": "1992-09-07T00:00:00Z", "type": "gOtO66kx", "userId": "2TM1CCoh", "vat": 20}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ProcessUserOrderNotification \
    --namespace $AB_NAMESPACE \
    --orderNo 'zRhL7R0T' \
    --userId 'z4BgUNXO' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 298 'ProcessUserOrderNotification' test.out

#- 299 DownloadUserOrderReceipt
$CLI_EXE \
    --sn platform \
    --op DownloadUserOrderReceipt \
    --namespace $AB_NAMESPACE \
    --orderNo 'XjGRWz4U' \
    --userId 'B6tErafG' \
    > test.out 2>&1
eval_tap $? 299 'DownloadUserOrderReceipt' test.out

#- 300 CreateUserPaymentOrder
# body param: body
echo '{"currencyCode": "DPOShCds", "currencyNamespace": "9a9BvQQ2", "customParameters": {"Ylm5kHaf": {}, "ZkIQgdCu": {}, "YCpKN6QD": {}}, "description": "CInvoHma", "extOrderNo": "8PFWqpYB", "extUserId": "0AzLXoa1", "itemType": "CODE", "language": "af_TopI", "metadata": {"QGpNmjAr": "7Vpy50Ma", "cmlfdiCn": "Sehp4BJb", "K0sCgtqm": "aitDmTCS"}, "notifyUrl": "agL7PqvH", "omitNotification": true, "platform": "26869p5F", "price": 10, "recurringPaymentOrderNo": "ebQnB37C", "region": "YPhwh3IG", "returnUrl": "RQNviefv", "sandbox": true, "sku": "GOO2Ust8", "subscriptionId": "l6SEGYxq", "title": "Wq5i5wCd"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateUserPaymentOrder \
    --namespace $AB_NAMESPACE \
    --userId 'CpWF7Tl0' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 300 'CreateUserPaymentOrder' test.out

#- 301 RefundUserPaymentOrder
# body param: body
echo '{"description": "2kfLiY1h"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RefundUserPaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'oc6owC9F' \
    --userId '3Dt4GCKw' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 301 'RefundUserPaymentOrder' test.out

#- 302 GetUserPlatformAccountClosureHistories
$CLI_EXE \
    --sn platform \
    --op GetUserPlatformAccountClosureHistories \
    --namespace $AB_NAMESPACE \
    --userId 'x7RHkvWU' \
    > test.out 2>&1
eval_tap $? 302 'GetUserPlatformAccountClosureHistories' test.out

#- 303 ApplyUserRedemption
# body param: body
echo '{"code": "9xsUNFeE", "orderNo": "K6otCbKh"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ApplyUserRedemption \
    --namespace $AB_NAMESPACE \
    --userId 'Hbzhb6WI' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 303 'ApplyUserRedemption' test.out

#- 304 DoRevocation
# body param: body
echo '{"meta": {"dNusk7j6": {}, "PUP5CvQb": {}, "i9cvXEPZ": {}}, "reason": "eVcmQuoW", "requestId": "SKaZ0YPE", "revokeEntries": [{"currency": {"balanceOrigin": "Twitch", "currencyCode": "vVKmNJK2", "namespace": "xnHCFmSj"}, "entitlement": {"entitlementId": "JM6oyEpo"}, "item": {"entitlementOrigin": "Twitch", "itemIdentity": "a4mVOmCT", "itemIdentityType": "ITEM_ID", "origin": "Playstation"}, "quantity": 65, "type": "CURRENCY"}, {"currency": {"balanceOrigin": "Oculus", "currencyCode": "KuTSmrL7", "namespace": "C75hCXdW"}, "entitlement": {"entitlementId": "bi1AjJiS"}, "item": {"entitlementOrigin": "Epic", "itemIdentity": "ZJkMy51C", "itemIdentityType": "ITEM_ID", "origin": "IOS"}, "quantity": 88, "type": "CURRENCY"}, {"currency": {"balanceOrigin": "Other", "currencyCode": "pZ8Wz40e", "namespace": "Exnynb5m"}, "entitlement": {"entitlementId": "nvpUWoEE"}, "item": {"entitlementOrigin": "IOS", "itemIdentity": "KSilcgKf", "itemIdentityType": "ITEM_SKU", "origin": "Xbox"}, "quantity": 53, "type": "ENTITLEMENT"}], "source": "ORDER", "transactionId": "LHZJWzza"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op DoRevocation \
    --namespace $AB_NAMESPACE \
    --userId 'mEYFTh0g' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 304 'DoRevocation' test.out

#- 305 RegisterXblSessions
# body param: body
echo '{"gameSessionId": "GqODPhCY", "payload": {"ViKRAHpN": {}, "5vvqAcJK": {}, "CUUfDtBb": {}}, "scid": "DagZEDwy", "sessionTemplateName": "Twrq0RzU"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RegisterXblSessions \
    --namespace $AB_NAMESPACE \
    --userId 'XmCuFB50' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 305 'RegisterXblSessions' test.out

#- 306 QueryUserSubscriptions
$CLI_EXE \
    --sn platform \
    --op QueryUserSubscriptions \
    --namespace $AB_NAMESPACE \
    --userId 'UyO6LIlA' \
    --chargeStatus 'NEVER' \
    --itemId 'KWeN72do' \
    --limit '4' \
    --offset '72' \
    --sku 'LHG0dMF2' \
    --status 'CANCELLED' \
    --subscribedBy 'PLATFORM' \
    > test.out 2>&1
eval_tap $? 306 'QueryUserSubscriptions' test.out

#- 307 GetUserSubscriptionActivities
$CLI_EXE \
    --sn platform \
    --op GetUserSubscriptionActivities \
    --namespace $AB_NAMESPACE \
    --userId '6OzQcFfD' \
    --excludeSystem 'true' \
    --limit '90' \
    --offset '9' \
    --subscriptionId 'S4HdJfqK' \
    > test.out 2>&1
eval_tap $? 307 'GetUserSubscriptionActivities' test.out

#- 308 PlatformSubscribeSubscription
# body param: body
echo '{"grantDays": 39, "itemId": "qz1TIq0f", "language": "44GoXoNR", "reason": "E5hGdxlN", "region": "UfNUzNBl", "source": "AGNE7HyJ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PlatformSubscribeSubscription \
    --namespace $AB_NAMESPACE \
    --userId 'BGYom9Ip' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 308 'PlatformSubscribeSubscription' test.out

#- 309 CheckUserSubscriptionSubscribableByItemId
$CLI_EXE \
    --sn platform \
    --op CheckUserSubscriptionSubscribableByItemId \
    --namespace $AB_NAMESPACE \
    --userId '7jyebCuU' \
    --itemId 'eN2jCaAW' \
    > test.out 2>&1
eval_tap $? 309 'CheckUserSubscriptionSubscribableByItemId' test.out

#- 310 GetUserSubscription
$CLI_EXE \
    --sn platform \
    --op GetUserSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'CixRS2sx' \
    --userId 'Gp4pHFDm' \
    > test.out 2>&1
eval_tap $? 310 'GetUserSubscription' test.out

#- 311 DeleteUserSubscription
$CLI_EXE \
    --sn platform \
    --op DeleteUserSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'FQQlx8rF' \
    --userId '39irPy5m' \
    > test.out 2>&1
eval_tap $? 311 'DeleteUserSubscription' test.out

#- 312 CancelSubscription
# body param: body
echo '{"immediate": false, "reason": "jza2dF1v"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CancelSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'GezHEoGh' \
    --userId 'JoVFU3Bj' \
    --force 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 312 'CancelSubscription' test.out

#- 313 GrantDaysToSubscription
# body param: body
echo '{"grantDays": 3, "reason": "kAitkFdR"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op GrantDaysToSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'mUabe6pc' \
    --userId 'UTfZBtzQ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 313 'GrantDaysToSubscription' test.out

#- 314 GetUserSubscriptionBillingHistories
$CLI_EXE \
    --sn platform \
    --op GetUserSubscriptionBillingHistories \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'HE6pe2eK' \
    --userId 'SwRbcsMs' \
    --excludeFree 'true' \
    --limit '17' \
    --offset '44' \
    > test.out 2>&1
eval_tap $? 314 'GetUserSubscriptionBillingHistories' test.out

#- 315 ProcessUserSubscriptionNotification
# body param: body
echo '{"additionalData": {"cardSummary": "QCgKjJnm"}, "authorisedTime": "1974-11-04T00:00:00Z", "chargebackReversedTime": "1973-06-09T00:00:00Z", "chargebackTime": "1986-06-29T00:00:00Z", "chargedTime": "1989-12-03T00:00:00Z", "createdTime": "1983-08-05T00:00:00Z", "currency": {"currencyCode": "ImCYUZ6l", "currencySymbol": "A3ifn0bK", "currencyType": "VIRTUAL", "decimals": 55, "namespace": "v8iT92in"}, "customParameters": {"lttz3bU1": {}, "EmegYSlv": {}, "4HjluqS5": {}}, "extOrderNo": "p28CYVIp", "extTxId": "oPcxXUS6", "extUserId": "eQ8rng6o", "issuedAt": "1979-10-03T00:00:00Z", "metadata": {"UjmTWQ3p": "a4zj2QDB", "8jxO1OAK": "Z336C9uC", "3e79TNM8": "cV6ETcB1"}, "namespace": "HHOOaQV2", "nonceStr": "hLFPUBXn", "paymentData": {"discountAmount": 61, "discountCode": "fXguVNIn", "subtotalPrice": 52, "tax": 83, "totalPrice": 26}, "paymentMethod": "wkT9KExD", "paymentMethodFee": 45, "paymentOrderNo": "kMajevD5", "paymentProvider": "XSOLLA", "paymentProviderFee": 2, "paymentStationUrl": "pBngcybx", "price": 48, "refundedTime": "1975-12-07T00:00:00Z", "salesTax": 32, "sandbox": true, "sku": "eZSQciPc", "status": "REFUNDING", "statusReason": "OgOcuY3o", "subscriptionId": "GmHTAMwb", "subtotalPrice": 91, "targetNamespace": "KiV7zS13", "targetUserId": "zDuh8T4P", "tax": 2, "totalPrice": 71, "totalTax": 27, "txEndTime": "1973-06-06T00:00:00Z", "type": "9Mav8Jaq", "userId": "3AlbBCgy", "vat": 45}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ProcessUserSubscriptionNotification \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'ObyEagyo' \
    --userId 'MmyErJOj' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 315 'ProcessUserSubscriptionNotification' test.out

#- 316 AcquireUserTicket
# body param: body
echo '{"count": 74, "orderNo": "KvC2nfvX"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op AcquireUserTicket \
    --boothName 'cOVIUTnB' \
    --namespace $AB_NAMESPACE \
    --userId 'wkF7erJL' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 316 'AcquireUserTicket' test.out

#- 317 QueryUserCurrencyWallets
$CLI_EXE \
    --sn platform \
    --op QueryUserCurrencyWallets \
    --namespace $AB_NAMESPACE \
    --userId 'BRhWI99M' \
    > test.out 2>&1
eval_tap $? 317 'QueryUserCurrencyWallets' test.out

#- 318 DebitUserWalletByCurrencyCode
# body param: body
echo '{"allowOverdraft": true, "amount": 8, "balanceOrigin": "Epic", "balanceSource": "ORDER_REVOCATION", "metadata": {"OqnBZSD7": {}, "LfxEIIMv": {}, "5mugVst3": {}}, "reason": "falKWlbk"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op DebitUserWalletByCurrencyCode \
    --currencyCode 'HSHLlUqL' \
    --namespace $AB_NAMESPACE \
    --userId '5x2on0uT' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 318 'DebitUserWalletByCurrencyCode' test.out

#- 319 ListUserCurrencyTransactions
$CLI_EXE \
    --sn platform \
    --op ListUserCurrencyTransactions \
    --currencyCode 'H8c0UlMv' \
    --namespace $AB_NAMESPACE \
    --userId 'v7fm1JuE' \
    --limit '91' \
    --offset '34' \
    > test.out 2>&1
eval_tap $? 319 'ListUserCurrencyTransactions' test.out

#- 320 CheckBalance
# body param: request
echo '{"amount": 71, "debitBalanceSource": "OTHER", "metadata": {"U2Xh4pwV": {}, "ysfC0zUB": {}, "krGuATdR": {}}, "reason": "1niZnWsi", "walletPlatform": "Nintendo"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CheckBalance \
    --currencyCode 'I1MVTqO2' \
    --namespace $AB_NAMESPACE \
    --userId '0qfq8tEu' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 320 'CheckBalance' test.out

#- 321 CheckWallet
eval_tap 0 321 'CheckWallet # SKIP deprecated' test.out

#- 322 CreditUserWallet
# body param: body
echo '{"amount": 67, "expireAt": "1972-09-01T00:00:00Z", "metadata": {"vFa3Njqx": {}, "8XFXWRPU": {}, "EDKIVPEf": {}}, "origin": "Nintendo", "reason": "aynzv8Be", "source": "TRADE"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreditUserWallet \
    --currencyCode '5i5fQH9i' \
    --namespace $AB_NAMESPACE \
    --userId '2lUC0o6w' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 322 'CreditUserWallet' test.out

#- 323 DebitByWalletPlatform
# body param: request
echo '{"amount": 37, "debitBalanceSource": "DLC_REVOCATION", "metadata": {"UMLg7Qq6": {}, "CM3pc6fa": {}, "ctFjlzGX": {}}, "reason": "5lnQSdo2", "walletPlatform": "Xbox"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op DebitByWalletPlatform \
    --currencyCode 'QyoiiSOt' \
    --namespace $AB_NAMESPACE \
    --userId 'zH5rVzK8' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 323 'DebitByWalletPlatform' test.out

#- 324 PayWithUserWallet
# body param: body
echo '{"amount": 14, "metadata": {"YsFYF60t": {}, "SqMemdmM": {}, "jg0nSGe7": {}}, "walletPlatform": "Oculus"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PayWithUserWallet \
    --currencyCode '3CXSemq5' \
    --namespace $AB_NAMESPACE \
    --userId 'F1adPqxp' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 324 'PayWithUserWallet' test.out

#- 325 GetUserWallet
eval_tap 0 325 'GetUserWallet # SKIP deprecated' test.out

#- 326 DebitUserWallet
eval_tap 0 326 'DebitUserWallet # SKIP deprecated' test.out

#- 327 DisableUserWallet
eval_tap 0 327 'DisableUserWallet # SKIP deprecated' test.out

#- 328 EnableUserWallet
eval_tap 0 328 'EnableUserWallet # SKIP deprecated' test.out

#- 329 ListUserWalletTransactions
eval_tap 0 329 'ListUserWalletTransactions # SKIP deprecated' test.out

#- 330 ListViews
$CLI_EXE \
    --sn platform \
    --op ListViews \
    --namespace $AB_NAMESPACE \
    --storeId 'vWNIj9ZX' \
    > test.out 2>&1
eval_tap $? 330 'ListViews' test.out

#- 331 CreateView
# body param: body
echo '{"displayOrder": 26, "localizations": {"M9dWlC7b": {"description": "FJyzrOqY", "localExt": {"t4qGbVA5": {}, "6xjTh6kC": {}, "hgMRjCut": {}}, "longDescription": "3H0V72Q4", "title": "EXtLe9LP"}, "5epG1Q41": {"description": "9gZ7FAYw", "localExt": {"XJulbfHo": {}, "4lxycFnz": {}, "6dUAgKDl": {}}, "longDescription": "hvogo1EY", "title": "tViwAenQ"}, "doEgB1Wb": {"description": "v96kPcC0", "localExt": {"ZJjrDzJa": {}, "B2NIyUQE": {}, "tXeTJLNq": {}}, "longDescription": "pJohPAic", "title": "12HUu5aD"}}, "name": "28a6tAas"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateView \
    --namespace $AB_NAMESPACE \
    --storeId 'NA0ZX6iu' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 331 'CreateView' test.out

#- 332 GetView
$CLI_EXE \
    --sn platform \
    --op GetView \
    --namespace $AB_NAMESPACE \
    --viewId '13DWroc3' \
    --storeId 'Xut4zT6j' \
    > test.out 2>&1
eval_tap $? 332 'GetView' test.out

#- 333 UpdateView
# body param: body
echo '{"displayOrder": 88, "localizations": {"LdY6gwbt": {"description": "xRh4sOn5", "localExt": {"1MMrMoKc": {}, "wmsUCzRW": {}, "vGrf00Or": {}}, "longDescription": "ru180X4C", "title": "aluvNMrh"}, "E9s04SAh": {"description": "MBcC75Iu", "localExt": {"By1by85S": {}, "Kqovj4sJ": {}, "irFBUF1j": {}}, "longDescription": "gBelFLvQ", "title": "jRIN9CES"}, "Skno5wmB": {"description": "YZJWEI5v", "localExt": {"T2uhkC5b": {}, "Mm1B8Niu": {}, "FKLW80pk": {}}, "longDescription": "15vrB7gt", "title": "CE0T1iC6"}}, "name": "eApHGc0Q"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateView \
    --namespace $AB_NAMESPACE \
    --viewId '4EOe9HBB' \
    --storeId 'XqqqNo6L' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 333 'UpdateView' test.out

#- 334 DeleteView
$CLI_EXE \
    --sn platform \
    --op DeleteView \
    --namespace $AB_NAMESPACE \
    --viewId '4ZtUxD7B' \
    --storeId 'KQFBIZKP' \
    > test.out 2>&1
eval_tap $? 334 'DeleteView' test.out

#- 335 GetWalletConfig
$CLI_EXE \
    --sn platform \
    --op GetWalletConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 335 'GetWalletConfig' test.out

#- 336 UpdateWalletConfig
# body param: body
echo '{"enablePaidForVCExpiration": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateWalletConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 336 'UpdateWalletConfig' test.out

#- 337 QueryWallets
eval_tap 0 337 'QueryWallets # SKIP deprecated' test.out

#- 338 BulkCredit
# body param: body
echo '[{"creditRequest": {"amount": 77, "expireAt": "1998-11-25T00:00:00Z", "metadata": {"ynJonRCE": {}, "RZjTe0lJ": {}, "tcIkAmgJ": {}}, "origin": "Oculus", "reason": "m6buZb9v", "source": "REFUND"}, "currencyCode": "O5qfSx5B", "userIds": ["DmkOfHgU", "Mf2UwxEu", "yzP34CxX"]}, {"creditRequest": {"amount": 89, "expireAt": "1999-01-14T00:00:00Z", "metadata": {"gZyg8n65": {}, "0zmJ6pqP": {}, "gKi3APA0": {}}, "origin": "Oculus", "reason": "1glYJV7R", "source": "REFERRAL_BONUS"}, "currencyCode": "dWIjrEJc", "userIds": ["qyBCyClB", "vpeWHqu0", "CRpIHsEb"]}, {"creditRequest": {"amount": 14, "expireAt": "1987-11-09T00:00:00Z", "metadata": {"Qq45jQ15": {}, "6pOdiB58": {}, "XiKVO85k": {}}, "origin": "IOS", "reason": "pPNW0m2a", "source": "PROMOTION"}, "currencyCode": "YNo7X7OA", "userIds": ["e7NkJ71B", "pQziZpAz", "wsuWoGFB"]}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op BulkCredit \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 338 'BulkCredit' test.out

#- 339 BulkDebit
# body param: body
echo '[{"currencyCode": "nHsl2RYe", "request": {"allowOverdraft": false, "amount": 14, "balanceOrigin": "Xbox", "balanceSource": "TRADE", "metadata": {"sKQThMEd": {}, "xWgC8iGu": {}, "uKbtdQX2": {}}, "reason": "pEcSuOnQ"}, "userIds": ["76QcH2l9", "RNlZ6OGf", "cgeyPOgq"]}, {"currencyCode": "rNXejdnk", "request": {"allowOverdraft": true, "amount": 4, "balanceOrigin": "Epic", "balanceSource": "TRADE", "metadata": {"07jt7tFy": {}, "dVcCax0t": {}, "O3AQxYGJ": {}}, "reason": "41Xj1Obe"}, "userIds": ["eymvmfqA", "g3OXSN0O", "tOoqxAG4"]}, {"currencyCode": "EFtIAu8d", "request": {"allowOverdraft": true, "amount": 25, "balanceOrigin": "IOS", "balanceSource": "EXPIRATION", "metadata": {"bx1lstt7": {}, "XOaoPRl8": {}, "tOPJMXbc": {}}, "reason": "1YESxcqM"}, "userIds": ["bCjjs0Aq", "Mw0iJq0H", "jjI33xVF"]}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op BulkDebit \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 339 'BulkDebit' test.out

#- 340 GetWallet
eval_tap 0 340 'GetWallet # SKIP deprecated' test.out

#- 341 SyncOrders
$CLI_EXE \
    --sn platform \
    --op SyncOrders \
    --nextEvaluatedKey '3cMPK8lY' \
    --end 'Ksx6xv11' \
    --start 'VpOnnpqX' \
    > test.out 2>&1
eval_tap $? 341 'SyncOrders' test.out

#- 342 TestAdyenConfig
# body param: body
echo '{"allowedPaymentMethods": ["iGQGpgDU", "iKLhDCWl", "dhs3BZ1w"], "apiKey": "thuGRqDY", "authoriseAsCapture": false, "blockedPaymentMethods": ["FcXJ3bhb", "zFuItVHS", "QM9M7FBc"], "clientKey": "7XadAS6e", "dropInSettings": "LdHNwz80", "liveEndpointUrlPrefix": "TMmInb4z", "merchantAccount": "OA1RVVAB", "notificationHmacKey": "qVcyxnxz", "notificationPassword": "p0LHHvOf", "notificationUsername": "adjGDKfn", "returnUrl": "wT9u45AF", "settings": "21dkvMVq"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestAdyenConfig \
    --sandbox 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 342 'TestAdyenConfig' test.out

#- 343 TestAliPayConfig
# body param: body
echo '{"appId": "x0fvLeKP", "privateKey": "Wm4tSEXG", "publicKey": "eYeL92zC", "returnUrl": "xJWqxgOo"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestAliPayConfig \
    --sandbox 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 343 'TestAliPayConfig' test.out

#- 344 TestCheckoutConfig
# body param: body
echo '{"publicKey": "wdC7gAp3", "secretKey": "ZpDHnYT4"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestCheckoutConfig \
    --sandbox 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 344 'TestCheckoutConfig' test.out

#- 345 DebugMatchedPaymentMerchantConfig
$CLI_EXE \
    --sn platform \
    --op DebugMatchedPaymentMerchantConfig \
    --namespace_ 'R45K9vtJ' \
    --region 'fhbsL1LD' \
    > test.out 2>&1
eval_tap $? 345 'DebugMatchedPaymentMerchantConfig' test.out

#- 346 TestNeonPayConfig
# body param: body
echo '{"apiKey": "0b93FZO0", "webhookSecretKey": "fYEZmdW7"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestNeonPayConfig \
    --sandbox 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 346 'TestNeonPayConfig' test.out

#- 347 TestPayPalConfig
# body param: body
echo '{"clientID": "zaEM0TdH", "clientSecret": "njo8EbFx", "returnUrl": "fZsq8E1b", "webHookId": "sTbD07PH"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestPayPalConfig \
    --sandbox 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 347 'TestPayPalConfig' test.out

#- 348 TestStripeConfig
# body param: body
echo '{"allowedPaymentMethodTypes": ["EAvheA99", "D8UPhO3j", "4sJQJd3U"], "publishableKey": "tXnbNxDp", "secretKey": "G7B50zXo", "webhookSecret": "FNQnWb5X"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestStripeConfig \
    --sandbox 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 348 'TestStripeConfig' test.out

#- 349 TestWxPayConfig
# body param: body
echo '{"appId": "26inOMDw", "key": "L3imCSAG", "mchid": "L6AmNdTS", "returnUrl": "qi1A7kFu"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestWxPayConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 349 'TestWxPayConfig' test.out

#- 350 TestXsollaConfig
# body param: body
echo '{"apiKey": "fhrxJvYD", "flowCompletionUrl": "NBcmb0lC", "merchantId": 61, "projectId": 50, "projectSecretKey": "fHKgI4Qx"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestXsollaConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 350 'TestXsollaConfig' test.out

#- 351 GetPaymentMerchantConfig1
$CLI_EXE \
    --sn platform \
    --op GetPaymentMerchantConfig1 \
    --id '4EkVL1D8' \
    > test.out 2>&1
eval_tap $? 351 'GetPaymentMerchantConfig1' test.out

#- 352 UpdateAdyenConfig
# body param: body
echo '{"allowedPaymentMethods": ["HNfXiktq", "Y4teeLax", "RHvtnWCh"], "apiKey": "ldM4ErYD", "authoriseAsCapture": true, "blockedPaymentMethods": ["tzDQwB3D", "wxyrJOzY", "hMlUkeWP"], "clientKey": "l0c0Xf0x", "dropInSettings": "VRXbDvSo", "liveEndpointUrlPrefix": "8YoQbknG", "merchantAccount": "aUBFedCg", "notificationHmacKey": "KsvgAaxT", "notificationPassword": "Nrjs3Npn", "notificationUsername": "72aLIMQN", "returnUrl": "dxE291R1", "settings": "bL2WG1nC"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateAdyenConfig \
    --id 'ouqh3VOV' \
    --sandbox 'false' \
    --validate 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 352 'UpdateAdyenConfig' test.out

#- 353 TestAdyenConfigById
$CLI_EXE \
    --sn platform \
    --op TestAdyenConfigById \
    --id '6dkLGfh5' \
    --sandbox 'true' \
    > test.out 2>&1
eval_tap $? 353 'TestAdyenConfigById' test.out

#- 354 UpdateAliPayConfig
# body param: body
echo '{"appId": "oHdazvCY", "privateKey": "rKaXIFrk", "publicKey": "rQ1edh90", "returnUrl": "86dTLjqC"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateAliPayConfig \
    --id 'T8lId8jg' \
    --sandbox 'true' \
    --validate 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 354 'UpdateAliPayConfig' test.out

#- 355 TestAliPayConfigById
$CLI_EXE \
    --sn platform \
    --op TestAliPayConfigById \
    --id 'ttdBNxkn' \
    --sandbox 'true' \
    > test.out 2>&1
eval_tap $? 355 'TestAliPayConfigById' test.out

#- 356 UpdateCheckoutConfig
# body param: body
echo '{"publicKey": "679M73av", "secretKey": "X9i9atFZ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCheckoutConfig \
    --id 'uGwGoZXn' \
    --sandbox 'false' \
    --validate 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 356 'UpdateCheckoutConfig' test.out

#- 357 TestCheckoutConfigById
$CLI_EXE \
    --sn platform \
    --op TestCheckoutConfigById \
    --id '76IL0KfS' \
    --sandbox 'true' \
    > test.out 2>&1
eval_tap $? 357 'TestCheckoutConfigById' test.out

#- 358 UpdateNeonPayConfig
# body param: body
echo '{"apiKey": "CgbCTwSp", "webhookSecretKey": "UiVyemxn"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateNeonPayConfig \
    --id 'pCPHQMwN' \
    --sandbox 'true' \
    --validate 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 358 'UpdateNeonPayConfig' test.out

#- 359 TestNeonPayConfigById
$CLI_EXE \
    --sn platform \
    --op TestNeonPayConfigById \
    --id 'MBUQzsMS' \
    --sandbox 'false' \
    > test.out 2>&1
eval_tap $? 359 'TestNeonPayConfigById' test.out

#- 360 UpdatePayPalConfig
# body param: body
echo '{"clientID": "237mZ6PI", "clientSecret": "JXinna4s", "returnUrl": "LfNy9fGg", "webHookId": "8HzV0esq"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePayPalConfig \
    --id 'ltEimPBW' \
    --sandbox 'true' \
    --validate 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 360 'UpdatePayPalConfig' test.out

#- 361 TestPayPalConfigById
$CLI_EXE \
    --sn platform \
    --op TestPayPalConfigById \
    --id 'LjudHFrJ' \
    --sandbox 'false' \
    > test.out 2>&1
eval_tap $? 361 'TestPayPalConfigById' test.out

#- 362 UpdateStripeConfig
# body param: body
echo '{"allowedPaymentMethodTypes": ["d0zdyLQp", "8teENiSl", "vwFqp8Ff"], "publishableKey": "iTHoqc35", "secretKey": "PwBnmpMV", "webhookSecret": "x6fGzfAr"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateStripeConfig \
    --id 'RzmrcCqB' \
    --sandbox 'false' \
    --validate 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 362 'UpdateStripeConfig' test.out

#- 363 TestStripeConfigById
$CLI_EXE \
    --sn platform \
    --op TestStripeConfigById \
    --id 'rtrDydg9' \
    --sandbox 'true' \
    > test.out 2>&1
eval_tap $? 363 'TestStripeConfigById' test.out

#- 364 UpdateWxPayConfig
# body param: body
echo '{"appId": "o2sv4e3H", "key": "rGlbVP5a", "mchid": "H9qu3YOJ", "returnUrl": "FOsGY5qD"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateWxPayConfig \
    --id 'Yd63UwCs' \
    --validate 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 364 'UpdateWxPayConfig' test.out

#- 365 UpdateWxPayConfigCert
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UpdateWxPayConfigCert \
    --id 'eJyymyyw' \
    --upload file $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 365 'UpdateWxPayConfigCert' test.out

#- 366 TestWxPayConfigById
$CLI_EXE \
    --sn platform \
    --op TestWxPayConfigById \
    --id 'AUd6TfG3' \
    > test.out 2>&1
eval_tap $? 366 'TestWxPayConfigById' test.out

#- 367 UpdateXsollaConfig
# body param: body
echo '{"apiKey": "UlHM47u3", "flowCompletionUrl": "WpFnB00A", "merchantId": 27, "projectId": 3, "projectSecretKey": "4dE0CniR"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXsollaConfig \
    --id '0VRwObcP' \
    --validate 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 367 'UpdateXsollaConfig' test.out

#- 368 TestXsollaConfigById
$CLI_EXE \
    --sn platform \
    --op TestXsollaConfigById \
    --id '0qUOXFvp' \
    > test.out 2>&1
eval_tap $? 368 'TestXsollaConfigById' test.out

#- 369 UpdateXsollaUIConfig
# body param: body
echo '{"device": "MOBILE", "showCloseButton": true, "size": "SMALL", "theme": "DEFAULT_DARK"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXsollaUIConfig \
    --id 'I3H2xD8E' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 369 'UpdateXsollaUIConfig' test.out

#- 370 QueryPaymentProviderConfig
$CLI_EXE \
    --sn platform \
    --op QueryPaymentProviderConfig \
    --limit '88' \
    --namespace_ 'Ysa2A5GO' \
    --offset '65' \
    --region 'DjA8ImGi' \
    > test.out 2>&1
eval_tap $? 370 'QueryPaymentProviderConfig' test.out

#- 371 CreatePaymentProviderConfig
# body param: body
echo '{"aggregate": "STRIPE", "namespace": "dZQiDEW4", "region": "b9TEkJip", "sandboxTaxJarApiToken": "CuQyHCxR", "specials": ["PAYPAL", "ALIPAY", "ALIPAY"], "taxJarApiToken": "ZphO8ra5", "taxJarEnabled": true, "useGlobalTaxJarApiToken": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreatePaymentProviderConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 371 'CreatePaymentProviderConfig' test.out

#- 372 GetAggregatePaymentProviders
$CLI_EXE \
    --sn platform \
    --op GetAggregatePaymentProviders \
    > test.out 2>&1
eval_tap $? 372 'GetAggregatePaymentProviders' test.out

#- 373 DebugMatchedPaymentProviderConfig
$CLI_EXE \
    --sn platform \
    --op DebugMatchedPaymentProviderConfig \
    --namespace_ 'F6scOaGw' \
    --region 'mNeHC9u7' \
    > test.out 2>&1
eval_tap $? 373 'DebugMatchedPaymentProviderConfig' test.out

#- 374 GetSpecialPaymentProviders
$CLI_EXE \
    --sn platform \
    --op GetSpecialPaymentProviders \
    > test.out 2>&1
eval_tap $? 374 'GetSpecialPaymentProviders' test.out

#- 375 UpdatePaymentProviderConfig
# body param: body
echo '{"aggregate": "CHECKOUT", "namespace": "YLHLu72y", "region": "6fyZIjcT", "sandboxTaxJarApiToken": "nvXOlrU6", "specials": ["STRIPE", "CHECKOUT", "NEONPAY"], "taxJarApiToken": "02AMDShf", "taxJarEnabled": true, "useGlobalTaxJarApiToken": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePaymentProviderConfig \
    --id 'hB5E9aHq' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 375 'UpdatePaymentProviderConfig' test.out

#- 376 DeletePaymentProviderConfig
$CLI_EXE \
    --sn platform \
    --op DeletePaymentProviderConfig \
    --id 'GNPFZUNc' \
    > test.out 2>&1
eval_tap $? 376 'DeletePaymentProviderConfig' test.out

#- 377 GetPaymentTaxConfig
$CLI_EXE \
    --sn platform \
    --op GetPaymentTaxConfig \
    > test.out 2>&1
eval_tap $? 377 'GetPaymentTaxConfig' test.out

#- 378 UpdatePaymentTaxConfig
# body param: body
echo '{"sandboxTaxJarApiToken": "RbxuZZsk", "taxJarApiToken": "6bFc9H1o", "taxJarEnabled": true, "taxJarProductCodesMapping": {"PKMQnW2c": "zBXSD8QL", "0pABDegL": "ZQXXF0OT", "yQYirnnX": "rIB7nZ4Y"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePaymentTaxConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 378 'UpdatePaymentTaxConfig' test.out

#- 379 SyncPaymentOrders
$CLI_EXE \
    --sn platform \
    --op SyncPaymentOrders \
    --nextEvaluatedKey 'FLnC9sup' \
    --end 'JXz1f2JH' \
    --start 'H9PGHkrg' \
    > test.out 2>&1
eval_tap $? 379 'SyncPaymentOrders' test.out

#- 380 PublicGetRootCategories
$CLI_EXE \
    --sn platform \
    --op PublicGetRootCategories \
    --namespace $AB_NAMESPACE \
    --language '6rc5APVe' \
    --storeId '24iUbyNX' \
    > test.out 2>&1
eval_tap $? 380 'PublicGetRootCategories' test.out

#- 381 DownloadCategories
$CLI_EXE \
    --sn platform \
    --op DownloadCategories \
    --namespace $AB_NAMESPACE \
    --language '1JNTPLw6' \
    --storeId '0RRG86Va' \
    > test.out 2>&1
eval_tap $? 381 'DownloadCategories' test.out

#- 382 PublicGetCategory
$CLI_EXE \
    --sn platform \
    --op PublicGetCategory \
    --categoryPath 'x7YcPmGY' \
    --namespace $AB_NAMESPACE \
    --language 'oKAl8wnJ' \
    --storeId 'mUV28djH' \
    > test.out 2>&1
eval_tap $? 382 'PublicGetCategory' test.out

#- 383 PublicGetChildCategories
$CLI_EXE \
    --sn platform \
    --op PublicGetChildCategories \
    --categoryPath 'GCJcTiAV' \
    --namespace $AB_NAMESPACE \
    --language 'YMNluQsh' \
    --storeId 'Rb6sm8IO' \
    > test.out 2>&1
eval_tap $? 383 'PublicGetChildCategories' test.out

#- 384 PublicGetDescendantCategories
$CLI_EXE \
    --sn platform \
    --op PublicGetDescendantCategories \
    --categoryPath 'lKPOxENA' \
    --namespace $AB_NAMESPACE \
    --language 'xQPRayBO' \
    --storeId 'F76618iU' \
    > test.out 2>&1
eval_tap $? 384 'PublicGetDescendantCategories' test.out

#- 385 PublicListCurrencies
$CLI_EXE \
    --sn platform \
    --op PublicListCurrencies \
    --namespace $AB_NAMESPACE \
    --currencyType 'VIRTUAL' \
    > test.out 2>&1
eval_tap $? 385 'PublicListCurrencies' test.out

#- 386 GeDLCDurableRewardShortMap
$CLI_EXE \
    --sn platform \
    --op GeDLCDurableRewardShortMap \
    --namespace $AB_NAMESPACE \
    --dlcType 'STEAM' \
    > test.out 2>&1
eval_tap $? 386 'GeDLCDurableRewardShortMap' test.out

#- 387 GetAppleConfigVersion
$CLI_EXE \
    --sn platform \
    --op GetAppleConfigVersion \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 387 'GetAppleConfigVersion' test.out

#- 388 GetIAPItemMapping
$CLI_EXE \
    --sn platform \
    --op GetIAPItemMapping \
    --namespace $AB_NAMESPACE \
    --platform 'STEAM' \
    > test.out 2>&1
eval_tap $? 388 'GetIAPItemMapping' test.out

#- 389 PublicGetItemByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetItemByAppId \
    --namespace $AB_NAMESPACE \
    --language '2xffRtwj' \
    --region 'xCjGpnpS' \
    --storeId 'EzC5j2XQ' \
    --appId 'qy1b4yRm' \
    > test.out 2>&1
eval_tap $? 389 'PublicGetItemByAppId' test.out

#- 390 PublicQueryItems
$CLI_EXE \
    --sn platform \
    --op PublicQueryItems \
    --namespace $AB_NAMESPACE \
    --appType 'GAME' \
    --autoCalcEstimatedPrice 'false' \
    --baseAppId '0975hzcV' \
    --categoryPath 'Ux1kgfVI' \
    --features 'erai6NsE' \
    --includeSubCategoryItem 'true' \
    --itemType 'MEDIA' \
    --language 'Fc7xyCJd' \
    --limit '82' \
    --offset '81' \
    --region 'ZjKldoWI' \
    --sortBy '["createdAt:asc", "name", "displayOrder:asc"]' \
    --storeId 'kAvwfFmh' \
    --tags 'lmpj0wkL' \
    > test.out 2>&1
eval_tap $? 390 'PublicQueryItems' test.out

#- 391 PublicGetItemBySku
$CLI_EXE \
    --sn platform \
    --op PublicGetItemBySku \
    --namespace $AB_NAMESPACE \
    --autoCalcEstimatedPrice 'false' \
    --language 'm5auEGaT' \
    --region '4rdpAZ15' \
    --storeId '5A05xvt4' \
    --sku 'utbwQdeo' \
    > test.out 2>&1
eval_tap $? 391 'PublicGetItemBySku' test.out

#- 392 PublicGetEstimatedPrice
$CLI_EXE \
    --sn platform \
    --op PublicGetEstimatedPrice \
    --namespace $AB_NAMESPACE \
    --region 'ATGemlW5' \
    --storeId 'DdTfQk6j' \
    --itemIds '7ygTreyI' \
    > test.out 2>&1
eval_tap $? 392 'PublicGetEstimatedPrice' test.out

#- 393 PublicBulkGetItems
$CLI_EXE \
    --sn platform \
    --op PublicBulkGetItems \
    --namespace $AB_NAMESPACE \
    --autoCalcEstimatedPrice 'true' \
    --language 'L0dqHmZG' \
    --region '16wCGUa9' \
    --storeId 'gm01Bja8' \
    --itemIds 'AM2AGuAG' \
    > test.out 2>&1
eval_tap $? 393 'PublicBulkGetItems' test.out

#- 394 PublicValidateItemPurchaseCondition
# body param: body
echo '{"itemIds": ["5b71cg0x", "pZxjMhhF", "DHzmiCTd"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicValidateItemPurchaseCondition \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 394 'PublicValidateItemPurchaseCondition' test.out

#- 395 PublicSearchItems
$CLI_EXE \
    --sn platform \
    --op PublicSearchItems \
    --namespace $AB_NAMESPACE \
    --autoCalcEstimatedPrice 'true' \
    --itemType 'APP' \
    --limit '34' \
    --offset '47' \
    --region 'z325VBTR' \
    --storeId 'SdqETB6U' \
    --keyword 'WGu9IvKR' \
    --language 'yVAiC5tq' \
    > test.out 2>&1
eval_tap $? 395 'PublicSearchItems' test.out

#- 396 PublicGetApp
$CLI_EXE \
    --sn platform \
    --op PublicGetApp \
    --itemId 'BG09AZff' \
    --namespace $AB_NAMESPACE \
    --language 'Do2X91dp' \
    --region 'isadgQNb' \
    --storeId 'AyTagYy6' \
    > test.out 2>&1
eval_tap $? 396 'PublicGetApp' test.out

#- 397 PublicGetItemDynamicData
$CLI_EXE \
    --sn platform \
    --op PublicGetItemDynamicData \
    --itemId '1AEDOJNS' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 397 'PublicGetItemDynamicData' test.out

#- 398 PublicGetItem
$CLI_EXE \
    --sn platform \
    --op PublicGetItem \
    --itemId '5qhXDcSf' \
    --namespace $AB_NAMESPACE \
    --autoCalcEstimatedPrice 'true' \
    --language 'RWPRXQUT' \
    --populateBundle 'false' \
    --region '9AO23TBd' \
    --storeId 'JGr0Wkhc' \
    > test.out 2>&1
eval_tap $? 398 'PublicGetItem' test.out

#- 399 GetPaymentCustomization
eval_tap 0 399 'GetPaymentCustomization # SKIP deprecated' test.out

#- 400 PublicGetPaymentUrl
# body param: body
echo '{"neonPayConfig": {"cancelUrl": "K3H8Qh1P", "successUrl": "BBdXMjSr"}, "paymentOrderNo": "uwrJyA86", "paymentProvider": "ALIPAY", "returnUrl": "udJhIVSm", "ui": "HCTnRhza", "zipCode": "rS0QlycW"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicGetPaymentUrl \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 400 'PublicGetPaymentUrl' test.out

#- 401 PublicGetPaymentMethods
$CLI_EXE \
    --sn platform \
    --op PublicGetPaymentMethods \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo '558BjSxk' \
    > test.out 2>&1
eval_tap $? 401 'PublicGetPaymentMethods' test.out

#- 402 PublicGetUnpaidPaymentOrder
$CLI_EXE \
    --sn platform \
    --op PublicGetUnpaidPaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'Wl0G4xeJ' \
    > test.out 2>&1
eval_tap $? 402 'PublicGetUnpaidPaymentOrder' test.out

#- 403 Pay
# body param: body
echo '{"token": "VjAHVOsN"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op Pay \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'BhiCEG5f' \
    --paymentProvider 'PAYPAL' \
    --zipCode '7KFNemc6' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 403 'Pay' test.out

#- 404 PublicCheckPaymentOrderPaidStatus
$CLI_EXE \
    --sn platform \
    --op PublicCheckPaymentOrderPaidStatus \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'Bget1pt5' \
    > test.out 2>&1
eval_tap $? 404 'PublicCheckPaymentOrderPaidStatus' test.out

#- 405 GetPaymentPublicConfig
$CLI_EXE \
    --sn platform \
    --op GetPaymentPublicConfig \
    --namespace $AB_NAMESPACE \
    --sandbox 'true' \
    --paymentProvider 'ALIPAY' \
    --region 'UD0q9sVN' \
    > test.out 2>&1
eval_tap $? 405 'GetPaymentPublicConfig' test.out

#- 406 PublicGetQRCode
$CLI_EXE \
    --sn platform \
    --op PublicGetQRCode \
    --namespace $AB_NAMESPACE \
    --code 'DijPsmut' \
    > test.out 2>&1
eval_tap $? 406 'PublicGetQRCode' test.out

#- 407 PublicNormalizePaymentReturnUrl
$CLI_EXE \
    --sn platform \
    --op PublicNormalizePaymentReturnUrl \
    --namespace $AB_NAMESPACE \
    --payerID 'ZaOL1Lr8' \
    --foreinginvoice 'aMtnkITj' \
    --invoiceId 'SClGt0n7' \
    --payload 'WuKqfyMW' \
    --redirectResult 'XYwRvnK0' \
    --resultCode 'yKb2LVde' \
    --sessionId 'fXR27cBi' \
    --status 'OakXQDOb' \
    --token 'RdjgZ4lA' \
    --type 'XZs2YfpH' \
    --userId 'ro9arStR' \
    --orderNo '0cZlvwEq' \
    --paymentOrderNo 'EhKESBzu' \
    --paymentProvider 'STRIPE' \
    --returnUrl 'W3mm1H1h' \
    > test.out 2>&1
eval_tap $? 407 'PublicNormalizePaymentReturnUrl' test.out

#- 408 GetPaymentTaxValue
$CLI_EXE \
    --sn platform \
    --op GetPaymentTaxValue \
    --namespace $AB_NAMESPACE \
    --zipCode 'vU2iynY2' \
    --paymentOrderNo 'EuvniSYK' \
    --paymentProvider 'WXPAY' \
    > test.out 2>&1
eval_tap $? 408 'GetPaymentTaxValue' test.out

#- 409 GetRewardByCode
$CLI_EXE \
    --sn platform \
    --op GetRewardByCode \
    --namespace $AB_NAMESPACE \
    --rewardCode 'pMYMH8cb' \
    > test.out 2>&1
eval_tap $? 409 'GetRewardByCode' test.out

#- 410 QueryRewards1
$CLI_EXE \
    --sn platform \
    --op QueryRewards1 \
    --namespace $AB_NAMESPACE \
    --eventTopic '5CEzvjpX' \
    --limit '46' \
    --offset '34' \
    --sortBy '["namespace:asc", "rewardCode", "rewardCode:desc"]' \
    > test.out 2>&1
eval_tap $? 410 'QueryRewards1' test.out

#- 411 GetReward1
$CLI_EXE \
    --sn platform \
    --op GetReward1 \
    --namespace $AB_NAMESPACE \
    --rewardId 'RNa82d6u' \
    > test.out 2>&1
eval_tap $? 411 'GetReward1' test.out

#- 412 PublicListStores
$CLI_EXE \
    --sn platform \
    --op PublicListStores \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 412 'PublicListStores' test.out

#- 413 PublicExistsAnyMyActiveEntitlement
$CLI_EXE \
    --sn platform \
    --op PublicExistsAnyMyActiveEntitlement \
    --namespace $AB_NAMESPACE \
    --appIds '["k5x4XqZo", "p3Xf5VBO", "5kH4bTz1"]' \
    --itemIds '["MpetqajU", "RrNcWuPC", "YhdrNURo"]' \
    --skus '["jQsTuWtP", "KX5WnODO", "HnURlJfT"]' \
    > test.out 2>&1
eval_tap $? 413 'PublicExistsAnyMyActiveEntitlement' test.out

#- 414 PublicGetMyAppEntitlementOwnershipByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetMyAppEntitlementOwnershipByAppId \
    --namespace $AB_NAMESPACE \
    --appId 'VZdKfI9m' \
    > test.out 2>&1
eval_tap $? 414 'PublicGetMyAppEntitlementOwnershipByAppId' test.out

#- 415 PublicGetMyEntitlementOwnershipByItemId
$CLI_EXE \
    --sn platform \
    --op PublicGetMyEntitlementOwnershipByItemId \
    --namespace $AB_NAMESPACE \
    --entitlementClazz 'SUBSCRIPTION' \
    --itemId 'nQfSysbO' \
    > test.out 2>&1
eval_tap $? 415 'PublicGetMyEntitlementOwnershipByItemId' test.out

#- 416 PublicGetMyEntitlementOwnershipBySku
$CLI_EXE \
    --sn platform \
    --op PublicGetMyEntitlementOwnershipBySku \
    --namespace $AB_NAMESPACE \
    --entitlementClazz 'OPTIONBOX' \
    --sku 'h9BolZg1' \
    > test.out 2>&1
eval_tap $? 416 'PublicGetMyEntitlementOwnershipBySku' test.out

#- 417 PublicGetEntitlementOwnershipToken
$CLI_EXE \
    --sn platform \
    --op PublicGetEntitlementOwnershipToken \
    --namespace $AB_NAMESPACE \
    --appIds '["YAXILL4w", "o2oyD599", "L3VsijAi"]' \
    --itemIds '["jSintDQe", "8S3pnW7x", "h1PCKnfi"]' \
    --skus '["VRO3B53f", "y7silN7L", "06C0aLE9"]' \
    > test.out 2>&1
eval_tap $? 417 'PublicGetEntitlementOwnershipToken' test.out

#- 418 SyncTwitchDropsEntitlement
# body param: body
echo '{"gameId": "GqloIc4Y", "language": "TQw_cD", "region": "ZXubVeIL"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncTwitchDropsEntitlement \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 418 'SyncTwitchDropsEntitlement' test.out

#- 419 PublicGetMyWallet
$CLI_EXE \
    --sn platform \
    --op PublicGetMyWallet \
    --currencyCode 'Y6FtJw8j' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 419 'PublicGetMyWallet' test.out

#- 420 SyncEpicGameDLC
# body param: body
echo '{"epicGamesJwtToken": "hQB05w5A"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncEpicGameDLC \
    --namespace $AB_NAMESPACE \
    --userId 'blLSL4Qx' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 420 'SyncEpicGameDLC' test.out

#- 421 SyncOculusDLC
$CLI_EXE \
    --sn platform \
    --op SyncOculusDLC \
    --namespace $AB_NAMESPACE \
    --userId 'MzZ9tiMo' \
    > test.out 2>&1
eval_tap $? 421 'SyncOculusDLC' test.out

#- 422 PublicSyncPsnDlcInventory
# body param: body
echo '{"serviceLabel": 32}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicSyncPsnDlcInventory \
    --namespace $AB_NAMESPACE \
    --userId '1t3Jxifv' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 422 'PublicSyncPsnDlcInventory' test.out

#- 423 PublicSyncPsnDlcInventoryWithMultipleServiceLabels
# body param: body
echo '{"serviceLabels": [98, 12, 94]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicSyncPsnDlcInventoryWithMultipleServiceLabels \
    --namespace $AB_NAMESPACE \
    --userId 'l967HSBN' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 423 'PublicSyncPsnDlcInventoryWithMultipleServiceLabels' test.out

#- 424 SyncSteamDLC
# body param: body
echo '{"appId": "TNDZLSDK", "steamId": "bJPnhn6O"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncSteamDLC \
    --namespace $AB_NAMESPACE \
    --userId 'IsrNsxtH' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 424 'SyncSteamDLC' test.out

#- 425 SyncXboxDLC
# body param: body
echo '{"xstsToken": "N1YVnBOJ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncXboxDLC \
    --namespace $AB_NAMESPACE \
    --userId '9Ci0tOYr' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 425 'SyncXboxDLC' test.out

#- 426 PublicQueryUserEntitlements
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserEntitlements \
    --namespace $AB_NAMESPACE \
    --userId 'mtCyoNJw' \
    --appType 'DEMO' \
    --entitlementClazz 'CODE' \
    --entitlementName 'mO30UUV6' \
    --features '["4e44hGqi", "CfFl2vsM", "YXyBLalu"]' \
    --itemId '["fY5cqlTg", "Mj9Vn8cQ", "AM26UYvN"]' \
    --limit '77' \
    --offset '49' \
    > test.out 2>&1
eval_tap $? 426 'PublicQueryUserEntitlements' test.out

#- 427 PublicGetUserAppEntitlementByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetUserAppEntitlementByAppId \
    --namespace $AB_NAMESPACE \
    --userId 'GmYLEpDo' \
    --appId '9CJRUTXP' \
    > test.out 2>&1
eval_tap $? 427 'PublicGetUserAppEntitlementByAppId' test.out

#- 428 PublicQueryUserEntitlementsByAppType
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserEntitlementsByAppType \
    --namespace $AB_NAMESPACE \
    --userId 'LFe2R0ic' \
    --limit '28' \
    --offset '63' \
    --appType 'SOFTWARE' \
    > test.out 2>&1
eval_tap $? 428 'PublicQueryUserEntitlementsByAppType' test.out

#- 429 PublicGetUserEntitlementsByIds
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementsByIds \
    --namespace $AB_NAMESPACE \
    --userId 'ZxX9vUUY' \
    --availablePlatformOnly 'false' \
    --ids '["Yxie9RO5", "U8evdqNk", "wjYWbeJP"]' \
    > test.out 2>&1
eval_tap $? 429 'PublicGetUserEntitlementsByIds' test.out

#- 430 PublicGetUserEntitlementByItemId
eval_tap 0 430 'PublicGetUserEntitlementByItemId # SKIP deprecated' test.out

#- 431 PublicGetUserEntitlementBySku
eval_tap 0 431 'PublicGetUserEntitlementBySku # SKIP deprecated' test.out

#- 432 PublicUserEntitlementHistory
$CLI_EXE \
    --sn platform \
    --op PublicUserEntitlementHistory \
    --namespace $AB_NAMESPACE \
    --userId 'JqT2iM8f' \
    --endDate 'xOpFVWEy' \
    --entitlementClazz 'APP' \
    --limit '80' \
    --offset '86' \
    --startDate 'yXFMbaiv' \
    > test.out 2>&1
eval_tap $? 432 'PublicUserEntitlementHistory' test.out

#- 433 PublicExistsAnyUserActiveEntitlement
$CLI_EXE \
    --sn platform \
    --op PublicExistsAnyUserActiveEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'g60GSI58' \
    --appIds '["YIMVl9Ko", "RbDSyzJX", "xdfarGvg"]' \
    --itemIds '["wLQZ1NCR", "GxYaqTxb", "pQ7c69SC"]' \
    --skus '["Wkd8Cw4E", "I1JMzgel", "l57ILAhm"]' \
    > test.out 2>&1
eval_tap $? 433 'PublicExistsAnyUserActiveEntitlement' test.out

#- 434 PublicGetUserAppEntitlementOwnershipByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetUserAppEntitlementOwnershipByAppId \
    --namespace $AB_NAMESPACE \
    --userId '2yvmzaAT' \
    --appId 'P1goVbsY' \
    > test.out 2>&1
eval_tap $? 434 'PublicGetUserAppEntitlementOwnershipByAppId' test.out

#- 435 PublicGetUserEntitlementOwnershipByItemId
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementOwnershipByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'jKXdTFqu' \
    --entitlementClazz 'APP' \
    --itemId 'ZPqgmCfk' \
    > test.out 2>&1
eval_tap $? 435 'PublicGetUserEntitlementOwnershipByItemId' test.out

#- 436 PublicGetUserEntitlementOwnershipByItemIds
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementOwnershipByItemIds \
    --namespace $AB_NAMESPACE \
    --userId 'fWhYTorY' \
    --ids '["NBBmzrac", "ilUcoVH9", "Bf6ZujgQ"]' \
    > test.out 2>&1
eval_tap $? 436 'PublicGetUserEntitlementOwnershipByItemIds' test.out

#- 437 PublicGetUserEntitlementOwnershipBySku
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementOwnershipBySku \
    --namespace $AB_NAMESPACE \
    --userId 'R4mph6pW' \
    --entitlementClazz 'CODE' \
    --sku 'QUDjO6px' \
    > test.out 2>&1
eval_tap $? 437 'PublicGetUserEntitlementOwnershipBySku' test.out

#- 438 PublicGetUserEntitlement
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlement \
    --entitlementId 'riQb2JMm' \
    --namespace $AB_NAMESPACE \
    --userId 'vVbffGQl' \
    > test.out 2>&1
eval_tap $? 438 'PublicGetUserEntitlement' test.out

#- 439 PublicConsumeUserEntitlement
# body param: body
echo '{"metadata": {"operationSource": "INVENTORY"}, "options": ["izS9On3o", "F2R758zv", "uc4wJact"], "requestId": "3GaQib7a", "useCount": 79}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicConsumeUserEntitlement \
    --entitlementId 'LmlaHeyP' \
    --namespace $AB_NAMESPACE \
    --userId 'owUPWuC0' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 439 'PublicConsumeUserEntitlement' test.out

#- 440 PublicSellUserEntitlement
# body param: body
echo '{"requestId": "sBNGBp2p", "useCount": 11}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicSellUserEntitlement \
    --entitlementId 'KcPonvEs' \
    --namespace $AB_NAMESPACE \
    --userId 'v516c3yS' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 440 'PublicSellUserEntitlement' test.out

#- 441 PublicSplitUserEntitlement
# body param: body
echo '{"metadata": {"operationSource": "INVENTORY"}, "useCount": 55}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicSplitUserEntitlement \
    --entitlementId 'Y2YX3UqI' \
    --namespace $AB_NAMESPACE \
    --userId 'QwN3Ul6v' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 441 'PublicSplitUserEntitlement' test.out

#- 442 PublicTransferUserEntitlement
# body param: body
echo '{"entitlementId": "rV3O77z2", "metadata": {"operationSource": "INVENTORY"}, "useCount": 59}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicTransferUserEntitlement \
    --entitlementId '1ZIaulQO' \
    --namespace $AB_NAMESPACE \
    --userId 'Q81uEVud' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 442 'PublicTransferUserEntitlement' test.out

#- 443 PublicRedeemCode
# body param: body
echo '{"code": "888pRDZu", "language": "NoYq", "region": "DKGCiY2R"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicRedeemCode \
    --namespace $AB_NAMESPACE \
    --userId 'j7ir5ueO' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 443 'PublicRedeemCode' test.out

#- 444 PublicFulfillAppleIAPItem
# body param: body
echo '{"excludeOldTransactions": true, "language": "ft", "productId": "k5rf3tW1", "receiptData": "u0mWvRvH", "region": "3WvZeI5J", "transactionId": "mYYmVqQx"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicFulfillAppleIAPItem \
    --namespace $AB_NAMESPACE \
    --userId 'owz3z8Kf' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 444 'PublicFulfillAppleIAPItem' test.out

#- 445 SyncEpicGamesInventory
# body param: body
echo '{"epicGamesJwtToken": "kzUMX2Pt"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncEpicGamesInventory \
    --namespace $AB_NAMESPACE \
    --userId 'LWT0xfdC' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 445 'SyncEpicGamesInventory' test.out

#- 446 PublicFulfillGoogleIAPItem
# body param: body
echo '{"autoAck": false, "autoConsume": false, "language": "sXn_sWGH_302", "orderId": "nr8HxWMl", "packageName": "eY8bOxjK", "productId": "FjbKzdZE", "purchaseTime": 28, "purchaseToken": "VlD2A3e3", "region": "bXeuAesa", "subscriptionPurchase": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicFulfillGoogleIAPItem \
    --namespace $AB_NAMESPACE \
    --userId 'fihxAdZd' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 446 'PublicFulfillGoogleIAPItem' test.out

#- 447 SyncOculusConsumableEntitlements
$CLI_EXE \
    --sn platform \
    --op SyncOculusConsumableEntitlements \
    --namespace $AB_NAMESPACE \
    --userId '9wwELCfe' \
    > test.out 2>&1
eval_tap $? 447 'SyncOculusConsumableEntitlements' test.out

#- 448 PublicReconcilePlayStationStore
# body param: body
echo '{"currencyCode": "EzTUDV6g", "price": 0.46995102778052833, "productId": "E04NpTsL", "serviceLabel": 93}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicReconcilePlayStationStore \
    --namespace $AB_NAMESPACE \
    --userId 'mBwlkT8s' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 448 'PublicReconcilePlayStationStore' test.out

#- 449 PublicReconcilePlayStationStoreWithMultipleServiceLabels
# body param: body
echo '{"currencyCode": "0ptXoiVG", "price": 0.7634600598375509, "productId": "JhYXRwCT", "serviceLabels": [34, 86, 14]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicReconcilePlayStationStoreWithMultipleServiceLabels \
    --namespace $AB_NAMESPACE \
    --userId 'QwEHts4z' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 449 'PublicReconcilePlayStationStoreWithMultipleServiceLabels' test.out

#- 450 SyncSteamInventory
# body param: body
echo '{"appId": "9QD6zlyd", "currencyCode": "BDMRmtsD", "language": "Vff", "price": 0.6972799936275469, "productId": "WI6lB33M", "region": "jxH1Pjg6", "steamId": "JnaVwmLf"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncSteamInventory \
    --namespace $AB_NAMESPACE \
    --userId 'vNFE6ANM' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 450 'SyncSteamInventory' test.out

#- 451 PublicQueryUserThirdPartySubscription
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserThirdPartySubscription \
    --namespace $AB_NAMESPACE \
    --platform 'EPICGAMES' \
    --userId 'UQBjAIJg' \
    --activeOnly 'false' \
    --groupId '1c2MTPst' \
    --limit '18' \
    --offset '32' \
    --productId 'Ji8A3AF0' \
    > test.out 2>&1
eval_tap $? 451 'PublicQueryUserThirdPartySubscription' test.out

#- 452 SyncTwitchDropsEntitlement1
# body param: body
echo '{"gameId": "Tu7QbYge", "language": "ZqH", "region": "kWrmro0M"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncTwitchDropsEntitlement1 \
    --namespace $AB_NAMESPACE \
    --userId '3fj0UZqk' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 452 'SyncTwitchDropsEntitlement1' test.out

#- 453 SyncXboxInventory
# body param: body
echo '{"currencyCode": "7gVvII8a", "price": 0.7436599334559758, "productId": "PLci0zEY", "xstsToken": "Hzsbr81O"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncXboxInventory \
    --namespace $AB_NAMESPACE \
    --userId 'deOArMo8' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 453 'SyncXboxInventory' test.out

#- 454 PublicQueryUserOrders
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserOrders \
    --namespace $AB_NAMESPACE \
    --userId 'YDMJGa7H' \
    --discounted 'false' \
    --itemId 'xO4pnSbm' \
    --limit '7' \
    --offset '32' \
    --status 'CHARGED' \
    > test.out 2>&1
eval_tap $? 454 'PublicQueryUserOrders' test.out

#- 455 PublicCreateUserOrder
# body param: body
echo '{"currencyCode": "kvF58tn8", "discountCodes": ["rnYsmGjk", "z869nzcA", "IeCmHJI5"], "discountedPrice": 16, "ext": {"k38u2uGU": {}, "1M1MGYcP": {}, "159lEGpA": {}}, "itemId": "TiO5unkX", "language": "narQ-hEAY-wK", "price": 16, "quantity": 14, "region": "bhJE4LZz", "returnUrl": "1nCbsOd1", "sectionId": "hos9xKQJ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicCreateUserOrder \
    --namespace $AB_NAMESPACE \
    --userId 'rhC2FA0i' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 455 'PublicCreateUserOrder' test.out

#- 456 PublicPreviewOrderPrice
# body param: body
echo '{"currencyCode": "URl2ugXg", "discountCodes": ["T7Ds5YqY", "F5arembg", "AVaRBFx1"], "discountedPrice": 18, "itemId": "UmR3gknp", "price": 45, "quantity": 30}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicPreviewOrderPrice \
    --namespace $AB_NAMESPACE \
    --userId 'BUcLRoYM' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 456 'PublicPreviewOrderPrice' test.out

#- 457 PublicGetUserOrder
$CLI_EXE \
    --sn platform \
    --op PublicGetUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'i41wgosh' \
    --userId 'zOJxQb1Y' \
    > test.out 2>&1
eval_tap $? 457 'PublicGetUserOrder' test.out

#- 458 PublicCancelUserOrder
$CLI_EXE \
    --sn platform \
    --op PublicCancelUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'dSj72Be8' \
    --userId 'a4422T9J' \
    > test.out 2>&1
eval_tap $? 458 'PublicCancelUserOrder' test.out

#- 459 PublicGetUserOrderHistories
$CLI_EXE \
    --sn platform \
    --op PublicGetUserOrderHistories \
    --namespace $AB_NAMESPACE \
    --orderNo 'pOZ6hB3c' \
    --userId 'L4hHsThn' \
    > test.out 2>&1
eval_tap $? 459 'PublicGetUserOrderHistories' test.out

#- 460 PublicDownloadUserOrderReceipt
$CLI_EXE \
    --sn platform \
    --op PublicDownloadUserOrderReceipt \
    --namespace $AB_NAMESPACE \
    --orderNo 'Ly4WoJJX' \
    --userId '250cq919' \
    > test.out 2>&1
eval_tap $? 460 'PublicDownloadUserOrderReceipt' test.out

#- 461 PublicGetPaymentAccounts
$CLI_EXE \
    --sn platform \
    --op PublicGetPaymentAccounts \
    --namespace $AB_NAMESPACE \
    --userId 'NOE8cw58' \
    > test.out 2>&1
eval_tap $? 461 'PublicGetPaymentAccounts' test.out

#- 462 PublicDeletePaymentAccount
$CLI_EXE \
    --sn platform \
    --op PublicDeletePaymentAccount \
    --id 'YJRTAQre' \
    --namespace $AB_NAMESPACE \
    --type 'card' \
    --userId '9nFVdngk' \
    > test.out 2>&1
eval_tap $? 462 'PublicDeletePaymentAccount' test.out

#- 463 PublicListActiveSections
$CLI_EXE \
    --sn platform \
    --op PublicListActiveSections \
    --namespace $AB_NAMESPACE \
    --userId 'QfFy2Td7' \
    --autoCalcEstimatedPrice 'false' \
    --language 'CzN4fMAO' \
    --region 'FdgJnvSI' \
    --storeId 'FTmEHymp' \
    --viewId '4IJjuA4V' \
    > test.out 2>&1
eval_tap $? 463 'PublicListActiveSections' test.out

#- 464 PublicQueryUserSubscriptions
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserSubscriptions \
    --namespace $AB_NAMESPACE \
    --userId 'mmcrChD7' \
    --chargeStatus 'SETUP' \
    --itemId 'S0YMil2h' \
    --limit '75' \
    --offset '40' \
    --sku 'EyZ49tGZ' \
    --status 'INIT' \
    --subscribedBy 'PLATFORM' \
    > test.out 2>&1
eval_tap $? 464 'PublicQueryUserSubscriptions' test.out

#- 465 PublicSubscribeSubscription
# body param: body
echo '{"currencyCode": "wEzreHfA", "itemId": "8DM4SoaG", "language": "ZH_dwai-xH", "region": "QRsTJbGM", "returnUrl": "Wm8v8mD6", "source": "loiEpSVZ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicSubscribeSubscription \
    --namespace $AB_NAMESPACE \
    --userId 'IKTvhuEl' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 465 'PublicSubscribeSubscription' test.out

#- 466 PublicCheckUserSubscriptionSubscribableByItemId
$CLI_EXE \
    --sn platform \
    --op PublicCheckUserSubscriptionSubscribableByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'ecBz9HXl' \
    --itemId 'm66JbxHA' \
    > test.out 2>&1
eval_tap $? 466 'PublicCheckUserSubscriptionSubscribableByItemId' test.out

#- 467 PublicGetUserSubscription
$CLI_EXE \
    --sn platform \
    --op PublicGetUserSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId '68gvkBda' \
    --userId 'dWVDmur9' \
    > test.out 2>&1
eval_tap $? 467 'PublicGetUserSubscription' test.out

#- 468 PublicChangeSubscriptionBillingAccount
$CLI_EXE \
    --sn platform \
    --op PublicChangeSubscriptionBillingAccount \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'Dk8pc893' \
    --userId 'qUixvyzG' \
    > test.out 2>&1
eval_tap $? 468 'PublicChangeSubscriptionBillingAccount' test.out

#- 469 PublicCancelSubscription
# body param: body
echo '{"immediate": false, "reason": "5L4NwZQn"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicCancelSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'zDUNn6rK' \
    --userId 'CABLHzrf' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 469 'PublicCancelSubscription' test.out

#- 470 PublicGetUserSubscriptionBillingHistories
$CLI_EXE \
    --sn platform \
    --op PublicGetUserSubscriptionBillingHistories \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'Q9sz3fwh' \
    --userId '7UHE4Jew' \
    --excludeFree 'true' \
    --limit '66' \
    --offset '78' \
    > test.out 2>&1
eval_tap $? 470 'PublicGetUserSubscriptionBillingHistories' test.out

#- 471 PublicListViews
$CLI_EXE \
    --sn platform \
    --op PublicListViews \
    --namespace $AB_NAMESPACE \
    --userId 'a2dnvmDz' \
    --language '5FbC2COd' \
    --storeId 'OhOqdH6s' \
    > test.out 2>&1
eval_tap $? 471 'PublicListViews' test.out

#- 472 PublicGetWallet
$CLI_EXE \
    --sn platform \
    --op PublicGetWallet \
    --currencyCode 'qKo56Vf3' \
    --namespace $AB_NAMESPACE \
    --userId 'VBeAXnqU' \
    > test.out 2>&1
eval_tap $? 472 'PublicGetWallet' test.out

#- 473 PublicListUserWalletTransactions
$CLI_EXE \
    --sn platform \
    --op PublicListUserWalletTransactions \
    --currencyCode 'IHa4lCzK' \
    --namespace $AB_NAMESPACE \
    --userId 'S20IJeow' \
    --limit '27' \
    --offset '0' \
    > test.out 2>&1
eval_tap $? 473 'PublicListUserWalletTransactions' test.out

#- 474 PublicGetMyDLCContent
$CLI_EXE \
    --sn platform \
    --op PublicGetMyDLCContent \
    --includeAllNamespaces 'false' \
    --type 'PSN' \
    > test.out 2>&1
eval_tap $? 474 'PublicGetMyDLCContent' test.out

#- 475 QueryFulfillments
$CLI_EXE \
    --sn platform \
    --op QueryFulfillments \
    --namespace $AB_NAMESPACE \
    --endTime 'a5uUCEIs' \
    --limit '35' \
    --offset '34' \
    --startTime 'Ct2ssGHX' \
    --state 'REVOKED' \
    --transactionId 'Po1LPBAN' \
    --userId 'c59s9XG7' \
    > test.out 2>&1
eval_tap $? 475 'QueryFulfillments' test.out

#- 476 QueryItemsV2
$CLI_EXE \
    --sn platform \
    --op QueryItemsV2 \
    --namespace $AB_NAMESPACE \
    --appType 'DEMO' \
    --availableDate 'TxxnD1xd' \
    --baseAppId 'aTB2zndg' \
    --categoryPath 'dh1ota90' \
    --features 'ImEbSuCB' \
    --includeSubCategoryItem 'false' \
    --itemName 'vuz78x7J' \
    --itemStatus 'INACTIVE' \
    --itemType '["OPTIONBOX", "CODE", "INGAMEITEM"]' \
    --limit '54' \
    --offset '7' \
    --region 'dP45BLsx' \
    --sectionExclusive 'false' \
    --sortBy '["name:desc", "displayOrder:desc"]' \
    --storeId '49SDIE3t' \
    --tags 'oJII0Of0' \
    --targetNamespace 'TR5oqcj4' \
    --withTotal 'true' \
    > test.out 2>&1
eval_tap $? 476 'QueryItemsV2' test.out

#- 477 ImportStore1
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op ImportStore1 \
    --namespace $AB_NAMESPACE \
    --storeId 'lTeBgvhv' \
    --strictMode 'false' \
    --upload file $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 477 'ImportStore1' test.out

#- 478 ExportStore1
# body param: body
echo '{"itemIds": ["uxYQvyPj", "45ALCO5q", "GVckMIvm"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ExportStore1 \
    --namespace $AB_NAMESPACE \
    --storeId 'SmV9tEmx' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 478 'ExportStore1' test.out

#- 479 FulfillRewardsV2
# body param: body
echo '{"entitlementCollectionId": "SoCsy7zK", "entitlementOrigin": "System", "metadata": {"Wjswmts7": {}, "jR80yXD3": {}, "8Av9IL1C": {}}, "origin": "Other", "rewards": [{"currency": {"currencyCode": "Lnn2Qmzh", "namespace": "JCL5OEkq"}, "item": {"itemId": "9rpThOeK", "itemName": "5irIEGSc", "itemSku": "rwCbQoZI", "itemType": "a3mGi21w"}, "quantity": 59, "type": "ITEM"}, {"currency": {"currencyCode": "QqGx9My3", "namespace": "7sO7Hjy4"}, "item": {"itemId": "c7yWXhsx", "itemName": "vWUYD1Vb", "itemSku": "SM2qBadB", "itemType": "bFhDhaKx"}, "quantity": 31, "type": "ITEM"}, {"currency": {"currencyCode": "6AXER3nb", "namespace": "yauTYjnF"}, "item": {"itemId": "unZ22S8s", "itemName": "S9wkMlPt", "itemSku": "wOh1tyME", "itemType": "kMcRkIad"}, "quantity": 28, "type": "ITEM"}], "source": "IAP_CHARGEBACK_REVERSED", "transactionId": "83qwP2AN"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op FulfillRewardsV2 \
    --namespace $AB_NAMESPACE \
    --userId 'FgyHuwpJ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 479 'FulfillRewardsV2' test.out

#- 480 FulfillItems
eval_tap 0 480 'FulfillItems # SKIP deprecated' test.out

#- 481 RetryFulfillItems
eval_tap 0 481 'RetryFulfillItems # SKIP deprecated' test.out

#- 482 RevokeItems
eval_tap 0 482 'RevokeItems # SKIP deprecated' test.out

#- 483 V2PublicFulfillAppleIAPItem
# body param: body
echo '{"transactionId": "x08DaU9R"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op V2PublicFulfillAppleIAPItem \
    --namespace $AB_NAMESPACE \
    --userId 'y9Atutol' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 483 'V2PublicFulfillAppleIAPItem' test.out

#- 484 FulfillItemsV3
# body param: body
echo '{"items": [{"duration": 49, "endDate": "1975-08-12T00:00:00Z", "entitlementCollectionId": "6pmes4Zq", "entitlementOrigin": "Playstation", "itemId": "QwQM6cTR", "itemSku": "TIBUTRYL", "language": "sX9I9GZO", "metadata": {"Q1zrB9pj": {}, "8Mm1I5Rm": {}, "tBm4wBdz": {}}, "orderNo": "9Hte589K", "origin": "Twitch", "quantity": 71, "region": "fGNINB79", "source": "REFERRAL_BONUS", "startDate": "1997-06-27T00:00:00Z", "storeId": "s9svds6z"}, {"duration": 88, "endDate": "1988-08-10T00:00:00Z", "entitlementCollectionId": "14gF32ti", "entitlementOrigin": "Oculus", "itemId": "24UqQklQ", "itemSku": "KeyDHjNB", "language": "hO9D8J2F", "metadata": {"KQKOngBE": {}, "OzxznCBk": {}, "1jUABUng": {}}, "orderNo": "O1lA1kYB", "origin": "Oculus", "quantity": 31, "region": "v7rGsL5j", "source": "ORDER_REVOCATION", "startDate": "1982-03-18T00:00:00Z", "storeId": "OsHWIgK6"}, {"duration": 9, "endDate": "1986-07-11T00:00:00Z", "entitlementCollectionId": "BBPO6xNq", "entitlementOrigin": "Nintendo", "itemId": "SIVHfYx4", "itemSku": "hq0Zfd4W", "language": "8UFcxnVW", "metadata": {"JrBms42i": {}, "cFlJZPcK": {}, "PRg1or31": {}}, "orderNo": "H5GOgeVT", "origin": "IOS", "quantity": 61, "region": "8UmddBcO", "source": "OTHER", "startDate": "1974-01-20T00:00:00Z", "storeId": "Trl0yWxL"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op FulfillItemsV3 \
    --namespace $AB_NAMESPACE \
    --transactionId 'DjdVxv65' \
    --userId '0IEmbiUF' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 484 'FulfillItemsV3' test.out

#- 485 RetryFulfillItemsV3
$CLI_EXE \
    --sn platform \
    --op RetryFulfillItemsV3 \
    --namespace $AB_NAMESPACE \
    --transactionId 'KtkdhfcF' \
    --userId '42GSVtbG' \
    > test.out 2>&1
eval_tap $? 485 'RetryFulfillItemsV3' test.out

#- 486 RevokeItemsV3
$CLI_EXE \
    --sn platform \
    --op RevokeItemsV3 \
    --namespace $AB_NAMESPACE \
    --transactionId 'luepYgaN' \
    --userId 'obCL8Tnr' \
    > test.out 2>&1
eval_tap $? 486 'RevokeItemsV3' test.out


# remove artifacts
rm -f "$CLI_TOKEN_FILE"
rm -f "$TEMP_JSON_INPUT"
rm -f "$TEMP_FILE_UPLOAD"

exit $EXIT_CODE