#!/usr/bin/env bash

# Copyright (c) 2021 AccelByte Inc. All Rights Reserved.
# This is licensed software from AccelByte Inc, for limitations
# and restrictions contact your company contract manager.

# This code is generated by tool. DO NOT EDIT.

# Meta:
# - random seed: 
# - template file: 

# Instructions:
# - Run the Justice SDK Mock Server first before running this script.

export AB_BASE_URL="http://127.0.0.1:8080"
export AB_CLIENT_ID="admin"
export AB_CLIENT_SECRET="admin"
export AB_NAMESPACE="test"
export AB_APP_NAME="UnitTest"

EXIT_CODE=0

eval_tap() {
  if [ $1 -eq 0 ]; then
    echo "ok $2 - $3"
  else
    EXIT_CODE=1
    echo "not ok $2 - $3"
    sed 's/^/# /g' $4
  fi
  rm -f $4
}

CLI_EXE="AccelByte.Sdk.Sample.Cli"
CLI_TOKEN_FILE="$(dirname "$(which $CLI_EXE)")/token.json"
TEMP_JSON_INPUT="input_json.json"
TEMP_FILE_UPLOAD="file_upload.bin"

echo "TAP version 13"
echo "1..445"

#- 1 Login
$CLI_EXE --op login --lt user --user user --pass user > test.out 2>&1
eval_tap $? 1 'Login' test.out

if [ $EXIT_CODE -ne 0 ]; then
  echo "Bail out! Login failed."
  exit $EXIT_CODE
fi

# echo "foo" > "$CLI_TOKEN_FILE"

#- 2 ListFulfillmentScripts
$CLI_EXE \
    --sn platform \
    --op ListFulfillmentScripts \
    > test.out 2>&1
eval_tap $? 2 'ListFulfillmentScripts' test.out

#- 3 GetFulfillmentScript
$CLI_EXE \
    --sn platform \
    --op GetFulfillmentScript \
    --id '2cPa31MH' \
    > test.out 2>&1
eval_tap $? 3 'GetFulfillmentScript' test.out

#- 4 CreateFulfillmentScript
# body param: body
echo '{"grantDays": "j23WJ0gC"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateFulfillmentScript \
    --id 'Gt5Rdui1' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 4 'CreateFulfillmentScript' test.out

#- 5 DeleteFulfillmentScript
$CLI_EXE \
    --sn platform \
    --op DeleteFulfillmentScript \
    --id '2ib7bUeI' \
    > test.out 2>&1
eval_tap $? 5 'DeleteFulfillmentScript' test.out

#- 6 UpdateFulfillmentScript
# body param: body
echo '{"grantDays": "53S09Nod"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateFulfillmentScript \
    --id 'L422RhJi' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 6 'UpdateFulfillmentScript' test.out

#- 7 ListItemTypeConfigs
$CLI_EXE \
    --sn platform \
    --op ListItemTypeConfigs \
    > test.out 2>&1
eval_tap $? 7 'ListItemTypeConfigs' test.out

#- 8 CreateItemTypeConfig
# body param: body
echo '{"clazz": "fVcNoreY", "dryRun": false, "fulfillmentUrl": "UvhJePdq", "itemType": "COINS", "purchaseConditionUrl": "s1fK2zqD"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateItemTypeConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 8 'CreateItemTypeConfig' test.out

#- 9 SearchItemTypeConfig
$CLI_EXE \
    --sn platform \
    --op SearchItemTypeConfig \
    --clazz '6xUZcJ1X' \
    --itemType 'COINS' \
    > test.out 2>&1
eval_tap $? 9 'SearchItemTypeConfig' test.out

#- 10 GetItemTypeConfig
$CLI_EXE \
    --sn platform \
    --op GetItemTypeConfig \
    --id '01DAcYKA' \
    > test.out 2>&1
eval_tap $? 10 'GetItemTypeConfig' test.out

#- 11 UpdateItemTypeConfig
# body param: body
echo '{"clazz": "RKg0Weql", "dryRun": false, "fulfillmentUrl": "4KU2neWM", "purchaseConditionUrl": "jhm7T9kC"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateItemTypeConfig \
    --id '5yof4Gxb' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 11 'UpdateItemTypeConfig' test.out

#- 12 DeleteItemTypeConfig
$CLI_EXE \
    --sn platform \
    --op DeleteItemTypeConfig \
    --id 'vSMAqnf8' \
    > test.out 2>&1
eval_tap $? 12 'DeleteItemTypeConfig' test.out

#- 13 QueryCampaigns
$CLI_EXE \
    --sn platform \
    --op QueryCampaigns \
    --namespace $AB_NAMESPACE \
    --limit '55' \
    --name 'DeQVmMsv' \
    --offset '10' \
    --tag 'gowZRh2W' \
    > test.out 2>&1
eval_tap $? 13 'QueryCampaigns' test.out

#- 14 CreateCampaign
# body param: body
echo '{"description": "WeDzf3Jq", "items": [{"extraSubscriptionDays": 4, "itemId": "3Onryedg", "itemName": "ComRHNzj", "quantity": 91}, {"extraSubscriptionDays": 48, "itemId": "cgrgBWZ1", "itemName": "BoXVxZxe", "quantity": 100}, {"extraSubscriptionDays": 57, "itemId": "fFo2Wp2y", "itemName": "MNubhqZ1", "quantity": 72}], "maxRedeemCountPerCampaignPerUser": 30, "maxRedeemCountPerCode": 48, "maxRedeemCountPerCodePerUser": 65, "maxSaleCount": 53, "name": "KiV5fHvo", "redeemEnd": "1979-04-26T00:00:00Z", "redeemStart": "1990-10-06T00:00:00Z", "redeemType": "ITEM", "status": "ACTIVE", "tags": ["ves5UQvc", "z88Qz19x", "MvoOHmLb"], "type": "REDEMPTION"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCampaign \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 14 'CreateCampaign' test.out

#- 15 GetCampaign
$CLI_EXE \
    --sn platform \
    --op GetCampaign \
    --campaignId 'r1HFaNPd' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 15 'GetCampaign' test.out

#- 16 UpdateCampaign
# body param: body
echo '{"description": "kcOMZpwR", "items": [{"extraSubscriptionDays": 22, "itemId": "WlSmvnWW", "itemName": "cHDedZPc", "quantity": 46}, {"extraSubscriptionDays": 55, "itemId": "fWfXosWE", "itemName": "WIAxPMgS", "quantity": 11}, {"extraSubscriptionDays": 76, "itemId": "uLoyYPej", "itemName": "aGH7W3nr", "quantity": 46}], "maxRedeemCountPerCampaignPerUser": 11, "maxRedeemCountPerCode": 87, "maxRedeemCountPerCodePerUser": 12, "maxSaleCount": 45, "name": "1TqAkVu2", "redeemEnd": "1996-10-13T00:00:00Z", "redeemStart": "1998-06-28T00:00:00Z", "redeemType": "ITEM", "status": "INACTIVE", "tags": ["Z9sJw27G", "aDF9MZW7", "LCQPOX64"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCampaign \
    --campaignId 'WMfbpDMY' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 16 'UpdateCampaign' test.out

#- 17 GetCampaignDynamic
$CLI_EXE \
    --sn platform \
    --op GetCampaignDynamic \
    --campaignId 'wzDXmGlx' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 17 'GetCampaignDynamic' test.out

#- 18 GetLootBoxPluginConfig
$CLI_EXE \
    --sn platform \
    --op GetLootBoxPluginConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 18 'GetLootBoxPluginConfig' test.out

#- 19 UpdateLootBoxPluginConfig
# body param: body
echo '{"appConfig": {"appName": "YAuJZk1L"}, "customConfig": {"connectionType": "TLS", "grpcServerAddress": "WtRFYMje"}, "extendType": "CUSTOM"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateLootBoxPluginConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 19 'UpdateLootBoxPluginConfig' test.out

#- 20 DeleteLootBoxPluginConfig
$CLI_EXE \
    --sn platform \
    --op DeleteLootBoxPluginConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 20 'DeleteLootBoxPluginConfig' test.out

#- 21 UplodLootBoxPluginConfigCert
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UplodLootBoxPluginConfigCert \
    --namespace $AB_NAMESPACE \
    --upload file $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 21 'UplodLootBoxPluginConfigCert' test.out

#- 22 GetLootBoxGrpcInfo
$CLI_EXE \
    --sn platform \
    --op GetLootBoxGrpcInfo \
    --namespace $AB_NAMESPACE \
    --force 'true' \
    > test.out 2>&1
eval_tap $? 22 'GetLootBoxGrpcInfo' test.out

#- 23 GetSectionPluginConfig
$CLI_EXE \
    --sn platform \
    --op GetSectionPluginConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 23 'GetSectionPluginConfig' test.out

#- 24 UpdateSectionPluginConfig
# body param: body
echo '{"appConfig": {"appName": "Gd8fDIwv"}, "customConfig": {"connectionType": "TLS", "grpcServerAddress": "vYUElGkM"}, "extendType": "APP"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateSectionPluginConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 24 'UpdateSectionPluginConfig' test.out

#- 25 DeleteSectionPluginConfig
$CLI_EXE \
    --sn platform \
    --op DeleteSectionPluginConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 25 'DeleteSectionPluginConfig' test.out

#- 26 UploadSectionPluginConfigCert
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UploadSectionPluginConfigCert \
    --namespace $AB_NAMESPACE \
    --upload file $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 26 'UploadSectionPluginConfigCert' test.out

#- 27 GetRootCategories
$CLI_EXE \
    --sn platform \
    --op GetRootCategories \
    --namespace $AB_NAMESPACE \
    --storeId 'THXDBHVU' \
    > test.out 2>&1
eval_tap $? 27 'GetRootCategories' test.out

#- 28 CreateCategory
# body param: body
echo '{"categoryPath": "LAxej2fR", "localizationDisplayNames": {"hISjnBZG": "nXfyPN6q", "EyYtS3O3": "ByIdwG6v", "zW98Aaeq": "RD9fE43A"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCategory \
    --namespace $AB_NAMESPACE \
    --storeId '4KWOqWN9' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 28 'CreateCategory' test.out

#- 29 ListCategoriesBasic
$CLI_EXE \
    --sn platform \
    --op ListCategoriesBasic \
    --namespace $AB_NAMESPACE \
    --storeId 'UbXnKDaH' \
    > test.out 2>&1
eval_tap $? 29 'ListCategoriesBasic' test.out

#- 30 GetCategory
$CLI_EXE \
    --sn platform \
    --op GetCategory \
    --categoryPath 'y0MZQjpl' \
    --namespace $AB_NAMESPACE \
    --storeId '92sn0IzO' \
    > test.out 2>&1
eval_tap $? 30 'GetCategory' test.out

#- 31 UpdateCategory
# body param: body
echo '{"localizationDisplayNames": {"ZD6APiIS": "Aj1Gknb1", "rzIP9HNN": "nVSbOXpH", "mp6gMQBr": "77y1ZDuu"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCategory \
    --categoryPath 'KW6wibeF' \
    --namespace $AB_NAMESPACE \
    --storeId 'rJiX4Xc5' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 31 'UpdateCategory' test.out

#- 32 DeleteCategory
$CLI_EXE \
    --sn platform \
    --op DeleteCategory \
    --categoryPath 'ZuLJlAG9' \
    --namespace $AB_NAMESPACE \
    --storeId 'CSrf51kw' \
    > test.out 2>&1
eval_tap $? 32 'DeleteCategory' test.out

#- 33 GetChildCategories
$CLI_EXE \
    --sn platform \
    --op GetChildCategories \
    --categoryPath 'w9WmQXkx' \
    --namespace $AB_NAMESPACE \
    --storeId 'ysFyH5FC' \
    > test.out 2>&1
eval_tap $? 33 'GetChildCategories' test.out

#- 34 GetDescendantCategories
$CLI_EXE \
    --sn platform \
    --op GetDescendantCategories \
    --categoryPath '9TKtswuW' \
    --namespace $AB_NAMESPACE \
    --storeId 'iMnpf5iV' \
    > test.out 2>&1
eval_tap $? 34 'GetDescendantCategories' test.out

#- 35 QueryCodes
$CLI_EXE \
    --sn platform \
    --op QueryCodes \
    --campaignId 'blkeF7aP' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --batchNo '14' \
    --code 'leBbJOtd' \
    --limit '37' \
    --offset '21' \
    > test.out 2>&1
eval_tap $? 35 'QueryCodes' test.out

#- 36 CreateCodes
# body param: body
echo '{"quantity": 74}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCodes \
    --campaignId 'e4mIetA1' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 36 'CreateCodes' test.out

#- 37 Download
$CLI_EXE \
    --sn platform \
    --op Download \
    --campaignId 'VQrqjB10' \
    --namespace $AB_NAMESPACE \
    --batchNo '5' \
    > test.out 2>&1
eval_tap $? 37 'Download' test.out

#- 38 BulkDisableCodes
$CLI_EXE \
    --sn platform \
    --op BulkDisableCodes \
    --campaignId 'IJOe7uXE' \
    --namespace $AB_NAMESPACE \
    --batchNo '33' \
    > test.out 2>&1
eval_tap $? 38 'BulkDisableCodes' test.out

#- 39 BulkEnableCodes
$CLI_EXE \
    --sn platform \
    --op BulkEnableCodes \
    --campaignId '6rv3mDxx' \
    --namespace $AB_NAMESPACE \
    --batchNo '9' \
    > test.out 2>&1
eval_tap $? 39 'BulkEnableCodes' test.out

#- 40 QueryRedeemHistory
$CLI_EXE \
    --sn platform \
    --op QueryRedeemHistory \
    --campaignId 'qGK1PaL7' \
    --namespace $AB_NAMESPACE \
    --code 'JHyH7hWk' \
    --limit '29' \
    --offset '35' \
    --userId 'IDYR0rNz' \
    > test.out 2>&1
eval_tap $? 40 'QueryRedeemHistory' test.out

#- 41 GetCode
$CLI_EXE \
    --sn platform \
    --op GetCode \
    --code 'meGiRy9V' \
    --namespace $AB_NAMESPACE \
    --redeemable 'true' \
    > test.out 2>&1
eval_tap $? 41 'GetCode' test.out

#- 42 DisableCode
$CLI_EXE \
    --sn platform \
    --op DisableCode \
    --code 'MsVlzA28' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 42 'DisableCode' test.out

#- 43 EnableCode
$CLI_EXE \
    --sn platform \
    --op EnableCode \
    --code 'k7BwICj9' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 43 'EnableCode' test.out

#- 44 GetServicePluginConfig
eval_tap 0 44 'GetServicePluginConfig # SKIP deprecated' test.out

#- 45 UpdateServicePluginConfig
eval_tap 0 45 'UpdateServicePluginConfig # SKIP deprecated' test.out

#- 46 DeleteServicePluginConfig
eval_tap 0 46 'DeleteServicePluginConfig # SKIP deprecated' test.out

#- 47 ListCurrencies
$CLI_EXE \
    --sn platform \
    --op ListCurrencies \
    --namespace $AB_NAMESPACE \
    --currencyType 'REAL' \
    > test.out 2>&1
eval_tap $? 47 'ListCurrencies' test.out

#- 48 CreateCurrency
# body param: body
echo '{"currencyCode": "O3gEHsxE", "currencySymbol": "eA42DbdL", "currencyType": "VIRTUAL", "decimals": 52, "localizationDescriptions": {"vi2un4Hm": "pMoE5pQR", "VNFaR8gn": "L2UPOMbt", "A9XkRYNR": "Wmksjyb2"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCurrency \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 48 'CreateCurrency' test.out

#- 49 UpdateCurrency
# body param: body
echo '{"localizationDescriptions": {"DhOVXTRK": "ou9nUIac", "gngQwkAg": "GfjhYWXz", "jBw3wTIt": "taMXJiTX"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCurrency \
    --currencyCode 'kBH1i441' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 49 'UpdateCurrency' test.out

#- 50 DeleteCurrency
$CLI_EXE \
    --sn platform \
    --op DeleteCurrency \
    --currencyCode 'P1QKPK6s' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 50 'DeleteCurrency' test.out

#- 51 GetCurrencyConfig
$CLI_EXE \
    --sn platform \
    --op GetCurrencyConfig \
    --currencyCode 's19M4D34' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 51 'GetCurrencyConfig' test.out

#- 52 GetCurrencySummary
$CLI_EXE \
    --sn platform \
    --op GetCurrencySummary \
    --currencyCode 'OSzXtZQY' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 52 'GetCurrencySummary' test.out

#- 53 GetDLCItemConfig
$CLI_EXE \
    --sn platform \
    --op GetDLCItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 53 'GetDLCItemConfig' test.out

#- 54 UpdateDLCItemConfig
# body param: body
echo '{"data": [{"id": "dcxhRSRD", "rewards": [{"currency": {"currencyCode": "iuPhwYsH", "namespace": "BGQX4TyO"}, "item": {"itemId": "mjXaZQwr", "itemSku": "Re2tvs4m", "itemType": "rYBskWGu"}, "quantity": 98, "type": "CURRENCY"}, {"currency": {"currencyCode": "7BpK6Nj9", "namespace": "OJhLMx7E"}, "item": {"itemId": "0pKoxZ3h", "itemSku": "G8V6FkdS", "itemType": "oJWlKGrh"}, "quantity": 31, "type": "CURRENCY"}, {"currency": {"currencyCode": "oTSleRqa", "namespace": "bVWTPijr"}, "item": {"itemId": "1n6I4KtI", "itemSku": "glnWuPNO", "itemType": "UguPmo9z"}, "quantity": 20, "type": "CURRENCY"}]}, {"id": "YzNdzW0N", "rewards": [{"currency": {"currencyCode": "5i1EEli4", "namespace": "99P6wcoA"}, "item": {"itemId": "uuVQLhMx", "itemSku": "STghkCvr", "itemType": "KHcEoswv"}, "quantity": 4, "type": "CURRENCY"}, {"currency": {"currencyCode": "xEFlwZy8", "namespace": "B6mLMaHm"}, "item": {"itemId": "QTrxE28X", "itemSku": "auB1hJdY", "itemType": "HJ2rS5PH"}, "quantity": 7, "type": "CURRENCY"}, {"currency": {"currencyCode": "kFF4uxyI", "namespace": "9QNpGIWn"}, "item": {"itemId": "dg4lcTfJ", "itemSku": "Dn8yQCuB", "itemType": "ijuBjiXC"}, "quantity": 5, "type": "CURRENCY"}]}, {"id": "siCA38C2", "rewards": [{"currency": {"currencyCode": "FhOvdJWE", "namespace": "8MgUuKYP"}, "item": {"itemId": "YlrSs16v", "itemSku": "DriagPJU", "itemType": "5XtcEsLn"}, "quantity": 22, "type": "CURRENCY"}, {"currency": {"currencyCode": "r0FT3HYp", "namespace": "FZ6tITgV"}, "item": {"itemId": "ssJudRLS", "itemSku": "Ut5i7oFP", "itemType": "BHJDZm6B"}, "quantity": 32, "type": "CURRENCY"}, {"currency": {"currencyCode": "6n9NaY6G", "namespace": "UU4UaOwa"}, "item": {"itemId": "dVUubLEo", "itemSku": "3tZQ1kkm", "itemType": "roo53BiL"}, "quantity": 99, "type": "ITEM"}]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateDLCItemConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 54 'UpdateDLCItemConfig' test.out

#- 55 DeleteDLCItemConfig
$CLI_EXE \
    --sn platform \
    --op DeleteDLCItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 55 'DeleteDLCItemConfig' test.out

#- 56 GetPlatformDLCConfig
$CLI_EXE \
    --sn platform \
    --op GetPlatformDLCConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 56 'GetPlatformDLCConfig' test.out

#- 57 UpdatePlatformDLCConfig
# body param: body
echo '{"data": [{"platform": "PSN", "platformDlcIdMap": {"lRRyUXKV": "O8iryMS9", "PZm7BQeh": "GK11VN4D", "TMQ3oz1T": "eGR1XhI9"}}, {"platform": "STEAM", "platformDlcIdMap": {"xFlvtnCu": "xswnTCa1", "MUtUdIKK": "yeTWmMoS", "ZztbmzQ1": "OaWR7kjp"}}, {"platform": "PSN", "platformDlcIdMap": {"ZeMbdgcP": "DkVMtyQd", "PNXlfWsv": "vOZEHwQh", "ULkcmoe7": "DGF5wDJW"}}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePlatformDLCConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 57 'UpdatePlatformDLCConfig' test.out

#- 58 DeletePlatformDLCConfig
$CLI_EXE \
    --sn platform \
    --op DeletePlatformDLCConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 58 'DeletePlatformDLCConfig' test.out

#- 59 QueryEntitlements
$CLI_EXE \
    --sn platform \
    --op QueryEntitlements \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --appType 'SOFTWARE' \
    --entitlementClazz 'MEDIA' \
    --entitlementName 'w0Ydu6Xf' \
    --itemId '["VVdEcYwI", "qoUTAopf", "PmvRnfTZ"]' \
    --limit '70' \
    --offset '53' \
    --origin 'Twitch' \
    --userId 'O6y1QSPn' \
    > test.out 2>&1
eval_tap $? 59 'QueryEntitlements' test.out

#- 60 QueryEntitlements1
$CLI_EXE \
    --sn platform \
    --op QueryEntitlements1 \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --itemIds '["7e4upxKX", "Uvm8jOw7", "ud6TeNif"]' \
    --limit '92' \
    --offset '51' \
    > test.out 2>&1
eval_tap $? 60 'QueryEntitlements1' test.out

#- 61 EnableEntitlementOriginFeature
$CLI_EXE \
    --sn platform \
    --op EnableEntitlementOriginFeature \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 61 'EnableEntitlementOriginFeature' test.out

#- 62 GetEntitlementConfigInfo
$CLI_EXE \
    --sn platform \
    --op GetEntitlementConfigInfo \
    --namespace $AB_NAMESPACE \
    --withoutCache 'true' \
    > test.out 2>&1
eval_tap $? 62 'GetEntitlementConfigInfo' test.out

#- 63 GrantEntitlements
# body param: body
echo '{"entitlementGrantList": [{"collectionId": "BmxKDByx", "endDate": "1990-12-13T00:00:00Z", "grantedCode": "UIhPTy8i", "itemId": "t5Hi0DEK", "itemNamespace": "XhSMVuHz", "language": "Xps-ZA", "origin": "Other", "quantity": 5, "region": "Hudc3Sdb", "source": "PURCHASE", "startDate": "1972-10-23T00:00:00Z", "storeId": "W1AvHhOs"}, {"collectionId": "rHjuC82L", "endDate": "1982-07-08T00:00:00Z", "grantedCode": "uIvVxE8j", "itemId": "pPX2OhYS", "itemNamespace": "yijSmqMp", "language": "ERwO_yTiM", "origin": "Steam", "quantity": 59, "region": "DhcGNEDf", "source": "PURCHASE", "startDate": "1995-06-16T00:00:00Z", "storeId": "Vz5CgxsQ"}, {"collectionId": "nE49i5BP", "endDate": "1979-06-24T00:00:00Z", "grantedCode": "Z42tO3Cu", "itemId": "UYpcUZUi", "itemNamespace": "PliIkOzP", "language": "HZd-056", "origin": "Twitch", "quantity": 74, "region": "QdUrakYZ", "source": "REDEEM_CODE", "startDate": "1999-02-03T00:00:00Z", "storeId": "BhGosZqV"}], "userIds": ["RMARZdS9", "2lf2YhoM", "KCIlEzdT"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op GrantEntitlements \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 63 'GrantEntitlements' test.out

#- 64 RevokeEntitlements
# body param: body
echo '["aElp4hDA", "U8EGg7F4", "By4HsvVm"]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RevokeEntitlements \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 64 'RevokeEntitlements' test.out

#- 65 GetEntitlement
$CLI_EXE \
    --sn platform \
    --op GetEntitlement \
    --entitlementId 'gjverWPS' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 65 'GetEntitlement' test.out

#- 66 QueryFulfillmentHistories
$CLI_EXE \
    --sn platform \
    --op QueryFulfillmentHistories \
    --namespace $AB_NAMESPACE \
    --limit '43' \
    --offset '18' \
    --status 'FAIL' \
    --userId 'DEQFIAH8' \
    > test.out 2>&1
eval_tap $? 66 'QueryFulfillmentHistories' test.out

#- 67 QueryIAPClawbackHistory
$CLI_EXE \
    --sn platform \
    --op QueryIAPClawbackHistory \
    --namespace $AB_NAMESPACE \
    --endTime 'bY70XC6k' \
    --eventType 'REFUND' \
    --externalOrderId 'u95RzaXM' \
    --limit '34' \
    --offset '67' \
    --startTime 'Z1TqccFn' \
    --status 'SUCCESS' \
    --userId 'TPADqEX1' \
    > test.out 2>&1
eval_tap $? 67 'QueryIAPClawbackHistory' test.out

#- 68 MockPlayStationStreamEvent
# body param: body
echo '{"body": {"account": "cIO1VX9v", "additionalData": {"entitlement": [{"clientTransaction": [{"amountConsumed": 1, "clientTransactionId": "nAUD5OyF"}, {"amountConsumed": 62, "clientTransactionId": "ymlUyCka"}, {"amountConsumed": 41, "clientTransactionId": "AwUIJ32j"}], "entitlementId": "aCZMpSOh", "usageCount": 75}, {"clientTransaction": [{"amountConsumed": 27, "clientTransactionId": "JElmRc5O"}, {"amountConsumed": 90, "clientTransactionId": "poJwRGC2"}, {"amountConsumed": 13, "clientTransactionId": "UZiB2G3A"}], "entitlementId": "fsi8V1R5", "usageCount": 25}, {"clientTransaction": [{"amountConsumed": 30, "clientTransactionId": "yvp1WPs6"}, {"amountConsumed": 46, "clientTransactionId": "dsPbwrL2"}, {"amountConsumed": 49, "clientTransactionId": "LRkf2x6a"}], "entitlementId": "phL9vqSy", "usageCount": 19}], "purpose": "cvzgHoRw"}, "originalTitleName": "2hfBCTcT", "paymentProductSKU": "MHCVc6xH", "purchaseDate": "2DKRLx18", "sourceOrderItemId": "J6J0Z2ud", "titleName": "MaGVpvLQ"}, "eventDomain": "CUS6rfUS", "eventSource": "36gXBmOj", "eventType": "mqRlr8Os", "eventVersion": 36, "id": "Aa1q0oay", "timestamp": "XSbCbtSx"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op MockPlayStationStreamEvent \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 68 'MockPlayStationStreamEvent' test.out

#- 69 GetAppleIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetAppleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 69 'GetAppleIAPConfig' test.out

#- 70 UpdateAppleIAPConfig
# body param: body
echo '{"bundleId": "JFWi98K5", "password": "JJieEnln"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateAppleIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 70 'UpdateAppleIAPConfig' test.out

#- 71 DeleteAppleIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteAppleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 71 'DeleteAppleIAPConfig' test.out

#- 72 GetEpicGamesIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetEpicGamesIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 72 'GetEpicGamesIAPConfig' test.out

#- 73 UpdateEpicGamesIAPConfig
# body param: body
echo '{"sandboxId": "woiU01Z1"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateEpicGamesIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 73 'UpdateEpicGamesIAPConfig' test.out

#- 74 DeleteEpicGamesIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteEpicGamesIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 74 'DeleteEpicGamesIAPConfig' test.out

#- 75 GetGoogleIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetGoogleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 75 'GetGoogleIAPConfig' test.out

#- 76 UpdateGoogleIAPConfig
# body param: body
echo '{"applicationName": "pgSzcJ8X", "serviceAccountId": "bDthvfhK"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateGoogleIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 76 'UpdateGoogleIAPConfig' test.out

#- 77 DeleteGoogleIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteGoogleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 77 'DeleteGoogleIAPConfig' test.out

#- 78 UpdateGoogleP12File
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UpdateGoogleP12File \
    --namespace $AB_NAMESPACE \
    --upload file $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 78 'UpdateGoogleP12File' test.out

#- 79 GetIAPItemConfig
$CLI_EXE \
    --sn platform \
    --op GetIAPItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 79 'GetIAPItemConfig' test.out

#- 80 UpdateIAPItemConfig
# body param: body
echo '{"data": [{"itemIdentity": "cFg5ZKOp", "itemIdentityType": "ITEM_SKU", "platformProductIdMap": {"ZNTwVbQ9": "h3EE4X4r", "kS3ilQaD": "K4ix6cgN", "FTmBt4ZN": "9z8p4Gf6"}}, {"itemIdentity": "yENFvOsu", "itemIdentityType": "ITEM_SKU", "platformProductIdMap": {"BaUBh4cY": "nqmflKD5", "6eScVwfo": "azlR1LB1", "RQnDTnLW": "xiCrJUie"}}, {"itemIdentity": "VajVhwx1", "itemIdentityType": "ITEM_SKU", "platformProductIdMap": {"TwzfFjlK": "hehzRBIK", "PmDBEhBa": "oOFCCGod", "DByccDnA": "gyHxeDht"}}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateIAPItemConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 80 'UpdateIAPItemConfig' test.out

#- 81 DeleteIAPItemConfig
$CLI_EXE \
    --sn platform \
    --op DeleteIAPItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 81 'DeleteIAPItemConfig' test.out

#- 82 GetOculusIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetOculusIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 82 'GetOculusIAPConfig' test.out

#- 83 UpdateOculusIAPConfig
# body param: body
echo '{"appId": "vWUcw2jp", "appSecret": "hNiQG3J5"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateOculusIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 83 'UpdateOculusIAPConfig' test.out

#- 84 DeleteOculusIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteOculusIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 84 'DeleteOculusIAPConfig' test.out

#- 85 GetPlayStationIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetPlayStationIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 85 'GetPlayStationIAPConfig' test.out

#- 86 UpdatePlaystationIAPConfig
# body param: body
echo '{"backOfficeServerClientId": "zhlWglJT", "backOfficeServerClientSecret": "JuNabD8r", "enableStreamJob": true, "environment": "LhDZmmo8", "streamName": "oU4dGQgC", "streamPartnerName": "o5W0i1zZ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePlaystationIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 86 'UpdatePlaystationIAPConfig' test.out

#- 87 DeletePlaystationIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeletePlaystationIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 87 'DeletePlaystationIAPConfig' test.out

#- 88 ValidateExistedPlaystationIAPConfig
$CLI_EXE \
    --sn platform \
    --op ValidateExistedPlaystationIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 88 'ValidateExistedPlaystationIAPConfig' test.out

#- 89 ValidatePlaystationIAPConfig
# body param: body
echo '{"backOfficeServerClientId": "UXZTJXKm", "backOfficeServerClientSecret": "NLSbW3aY", "enableStreamJob": false, "environment": "ZlbwwAkR", "streamName": "YhCddbNK", "streamPartnerName": "QJunbnQU"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ValidatePlaystationIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 89 'ValidatePlaystationIAPConfig' test.out

#- 90 GetSteamIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetSteamIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 90 'GetSteamIAPConfig' test.out

#- 91 UpdateSteamIAPConfig
# body param: body
echo '{"appId": "UK8dwkmq", "publisherAuthenticationKey": "D2TIDDRc"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateSteamIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 91 'UpdateSteamIAPConfig' test.out

#- 92 DeleteSteamIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteSteamIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 92 'DeleteSteamIAPConfig' test.out

#- 93 GetTwitchIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetTwitchIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 93 'GetTwitchIAPConfig' test.out

#- 94 UpdateTwitchIAPConfig
# body param: body
echo '{"clientId": "fxcs2EJv", "clientSecret": "3ClriDmX", "organizationId": "SDTmRfiw"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateTwitchIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 94 'UpdateTwitchIAPConfig' test.out

#- 95 DeleteTwitchIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteTwitchIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 95 'DeleteTwitchIAPConfig' test.out

#- 96 GetXblIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetXblIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 96 'GetXblIAPConfig' test.out

#- 97 UpdateXblIAPConfig
# body param: body
echo '{"relyingPartyCert": "YA8Hd95E"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXblIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 97 'UpdateXblIAPConfig' test.out

#- 98 DeleteXblAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteXblAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 98 'DeleteXblAPConfig' test.out

#- 99 UpdateXblBPCertFile
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UpdateXblBPCertFile \
    --namespace $AB_NAMESPACE \
    --upload file $TEMP_FILE_UPLOAD \
    --password 'zN7xgwCf' \
    > test.out 2>&1
eval_tap $? 99 'UpdateXblBPCertFile' test.out

#- 100 DownloadInvoiceDetails
$CLI_EXE \
    --sn platform \
    --op DownloadInvoiceDetails \
    --namespace $AB_NAMESPACE \
    --feature 'r5qzghkV' \
    --itemId '9XTWRRpN' \
    --itemType 'SUBSCRIPTION' \
    --endTime '5njDqDte' \
    --startTime 'wl7guT3N' \
    > test.out 2>&1
eval_tap $? 100 'DownloadInvoiceDetails' test.out

#- 101 GenerateInvoiceSummary
$CLI_EXE \
    --sn platform \
    --op GenerateInvoiceSummary \
    --namespace $AB_NAMESPACE \
    --feature 'OpWNG1lf' \
    --itemId 'n0ERrpGO' \
    --itemType 'EXTENSION' \
    --endTime 'N95AaT4J' \
    --startTime 'ZLH1iK4V' \
    > test.out 2>&1
eval_tap $? 101 'GenerateInvoiceSummary' test.out

#- 102 SyncInGameItem
# body param: body
echo '{"categoryPath": "R1QTo8wj", "targetItemId": "mukYx1a2", "targetNamespace": "QJ1x8Mny"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncInGameItem \
    --namespace $AB_NAMESPACE \
    --storeId 'QpjNUPyE' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 102 'SyncInGameItem' test.out

#- 103 CreateItem
# body param: body
echo '{"appId": "gVpiXpnp", "appType": "DLC", "baseAppId": "6n6FxdYk", "boothName": "HrNxZM19", "categoryPath": "ycA9UYwh", "clazz": "2TukE6S3", "displayOrder": 78, "entitlementType": "DURABLE", "ext": {"OtHLOeIQ": {}, "6nwmiHiu": {}, "Lyvzq1XL": {}}, "features": ["W2wnaLiJ", "DdVbhJVN", "eC8Q5t3Y"], "flexible": false, "images": [{"as": "jZoHdTQ3", "caption": "Ul6YLaqD", "height": 77, "imageUrl": "wjM4TXBn", "smallImageUrl": "0UDPLcvV", "width": 79}, {"as": "pBo4JJLz", "caption": "EYUJwvnx", "height": 43, "imageUrl": "ibZBEyyE", "smallImageUrl": "JlA6sGJx", "width": 54}, {"as": "HWEdKFKk", "caption": "R3B606CU", "height": 77, "imageUrl": "ymyZE6GT", "smallImageUrl": "FtnkgQ8q", "width": 65}], "inventoryConfig": {"customAttributes": {"BNesLiWw": {}, "lnICU1Nb": {}, "CXaOrnIc": {}}, "serverCustomAttributes": {"zJdVjLGD": {}, "j0fAbzeB": {}, "scmq2nzH": {}}, "slotUsed": 81}, "itemIds": ["NqpSrcUR", "ST6cP0tc", "KpsrO8sk"], "itemQty": {"Cj016UaY": 95, "BKssGBGT": 89, "zRts2eGE": 58}, "itemType": "APP", "listable": true, "localizations": {"wC1Bh564": {"description": "POad069d", "localExt": {"CLZcMenG": {}, "zAx5M0oq": {}, "jos6XfQ4": {}}, "longDescription": "QphF2NBT", "title": "rC5BgJUV"}, "1Zx0AEfO": {"description": "zOAfBe3s", "localExt": {"hEctHLFt": {}, "W2AjA3cr": {}, "bdSgQIdL": {}}, "longDescription": "pR5psVG0", "title": "QBPDmRe4"}, "h4aGY6Wq": {"description": "DkAeFQlm", "localExt": {"ucjktxu2": {}, "QnqzhIOH": {}, "rpbs90gk": {}}, "longDescription": "cZF7bmvG", "title": "OEbwEduS"}}, "lootBoxConfig": {"rewardCount": 96, "rewards": [{"lootBoxItems": [{"count": 53, "duration": 98, "endDate": "1983-01-07T00:00:00Z", "itemId": "ALlPoHDE", "itemSku": "tU5dhPHl", "itemType": "dV8tVEmZ"}, {"count": 50, "duration": 72, "endDate": "1978-01-05T00:00:00Z", "itemId": "WolwYfBT", "itemSku": "EX4Y6ShB", "itemType": "8QeXEMHi"}, {"count": 59, "duration": 18, "endDate": "1983-08-23T00:00:00Z", "itemId": "SUnSg3J9", "itemSku": "VkEXltQk", "itemType": "3S2HTFr5"}], "name": "IVVmG6dy", "odds": 0.41624750550195955, "type": "REWARD", "weight": 37}, {"lootBoxItems": [{"count": 92, "duration": 69, "endDate": "1975-09-25T00:00:00Z", "itemId": "JDCCDKzS", "itemSku": "rT6Gettp", "itemType": "PtgYL75p"}, {"count": 23, "duration": 35, "endDate": "1971-02-01T00:00:00Z", "itemId": "pgp1axMr", "itemSku": "iMaOpBhK", "itemType": "f5hiCksX"}, {"count": 60, "duration": 15, "endDate": "1981-07-12T00:00:00Z", "itemId": "0X3nWKDa", "itemSku": "G4BS4AcC", "itemType": "L6oDeP1g"}], "name": "h9M8zjPZ", "odds": 0.10460608057427823, "type": "PROBABILITY_GROUP", "weight": 23}, {"lootBoxItems": [{"count": 4, "duration": 5, "endDate": "1973-10-23T00:00:00Z", "itemId": "A07pjbLa", "itemSku": "sFCc6pXY", "itemType": "7w8iSyFM"}, {"count": 90, "duration": 77, "endDate": "1980-07-26T00:00:00Z", "itemId": "5LY6UEmM", "itemSku": "XzOxxQFI", "itemType": "zFgUhOWT"}, {"count": 30, "duration": 31, "endDate": "1983-11-01T00:00:00Z", "itemId": "xupWxSRR", "itemSku": "3EgRGic3", "itemType": "XoEMcyWZ"}], "name": "rSBf8Mnj", "odds": 0.6005266532608191, "type": "REWARD_GROUP", "weight": 20}], "rollFunction": "DEFAULT"}, "maxCount": 47, "maxCountPerUser": 43, "name": "hD9xA3Zy", "optionBoxConfig": {"boxItems": [{"count": 88, "duration": 94, "endDate": "1981-11-12T00:00:00Z", "itemId": "iMfwkaJJ", "itemSku": "2wg8XupZ", "itemType": "fMSKjHZk"}, {"count": 60, "duration": 42, "endDate": "1998-10-05T00:00:00Z", "itemId": "dZ7dG7S2", "itemSku": "2Vd7ZFW1", "itemType": "xv1aExVQ"}, {"count": 91, "duration": 88, "endDate": "1973-05-30T00:00:00Z", "itemId": "aFrDfVJu", "itemSku": "mNrantJD", "itemType": "7imBTAMA"}]}, "purchasable": false, "recurring": {"cycle": "YEARLY", "fixedFreeDays": 31, "fixedTrialCycles": 48, "graceDays": 81}, "regionData": {"SHS6Dizy": [{"currencyCode": "LxM1gljs", "currencyNamespace": "RGXB3v2Z", "currencyType": "VIRTUAL", "discountAmount": 18, "discountExpireAt": "1997-09-28T00:00:00Z", "discountPercentage": 2, "discountPurchaseAt": "1989-12-02T00:00:00Z", "expireAt": "1974-08-19T00:00:00Z", "price": 59, "purchaseAt": "1990-10-19T00:00:00Z", "trialPrice": 78}, {"currencyCode": "VCPT80Ja", "currencyNamespace": "nW4BqvnV", "currencyType": "REAL", "discountAmount": 35, "discountExpireAt": "1998-11-02T00:00:00Z", "discountPercentage": 51, "discountPurchaseAt": "1981-10-30T00:00:00Z", "expireAt": "1989-05-19T00:00:00Z", "price": 8, "purchaseAt": "1977-10-02T00:00:00Z", "trialPrice": 72}, {"currencyCode": "9hc35t2E", "currencyNamespace": "CbKujWFV", "currencyType": "REAL", "discountAmount": 83, "discountExpireAt": "1975-06-01T00:00:00Z", "discountPercentage": 29, "discountPurchaseAt": "1988-12-05T00:00:00Z", "expireAt": "1973-04-14T00:00:00Z", "price": 35, "purchaseAt": "1994-11-29T00:00:00Z", "trialPrice": 98}], "vUoeaWlR": [{"currencyCode": "C6Mb1ahV", "currencyNamespace": "3382sBvf", "currencyType": "REAL", "discountAmount": 28, "discountExpireAt": "1977-10-30T00:00:00Z", "discountPercentage": 57, "discountPurchaseAt": "1987-03-30T00:00:00Z", "expireAt": "1994-11-09T00:00:00Z", "price": 74, "purchaseAt": "1971-09-02T00:00:00Z", "trialPrice": 72}, {"currencyCode": "fELYfStt", "currencyNamespace": "3EzCmH6h", "currencyType": "REAL", "discountAmount": 51, "discountExpireAt": "1973-09-23T00:00:00Z", "discountPercentage": 28, "discountPurchaseAt": "1977-08-26T00:00:00Z", "expireAt": "1985-01-09T00:00:00Z", "price": 93, "purchaseAt": "1990-04-04T00:00:00Z", "trialPrice": 1}, {"currencyCode": "nXmms0hb", "currencyNamespace": "edtOeGM2", "currencyType": "VIRTUAL", "discountAmount": 39, "discountExpireAt": "1980-01-23T00:00:00Z", "discountPercentage": 80, "discountPurchaseAt": "1973-02-23T00:00:00Z", "expireAt": "1979-07-21T00:00:00Z", "price": 62, "purchaseAt": "1973-11-11T00:00:00Z", "trialPrice": 23}], "yhd7cLU6": [{"currencyCode": "Rw03x5SQ", "currencyNamespace": "5dYACy0P", "currencyType": "REAL", "discountAmount": 76, "discountExpireAt": "1987-08-28T00:00:00Z", "discountPercentage": 53, "discountPurchaseAt": "1977-06-03T00:00:00Z", "expireAt": "1989-04-27T00:00:00Z", "price": 85, "purchaseAt": "1978-12-15T00:00:00Z", "trialPrice": 24}, {"currencyCode": "zaNoBTbG", "currencyNamespace": "HXQpec1b", "currencyType": "VIRTUAL", "discountAmount": 66, "discountExpireAt": "1975-02-01T00:00:00Z", "discountPercentage": 95, "discountPurchaseAt": "1988-12-06T00:00:00Z", "expireAt": "1972-10-06T00:00:00Z", "price": 17, "purchaseAt": "1983-10-03T00:00:00Z", "trialPrice": 42}, {"currencyCode": "sPOLc6r4", "currencyNamespace": "UGpxmRnL", "currencyType": "VIRTUAL", "discountAmount": 21, "discountExpireAt": "1998-02-09T00:00:00Z", "discountPercentage": 56, "discountPurchaseAt": "1982-09-29T00:00:00Z", "expireAt": "1995-02-09T00:00:00Z", "price": 56, "purchaseAt": "1972-07-11T00:00:00Z", "trialPrice": 84}]}, "saleConfig": {"currencyCode": "ze2SrDFL", "price": 64}, "seasonType": "TIER", "sectionExclusive": true, "sellable": false, "sku": "IkHzFxOb", "stackable": true, "status": "ACTIVE", "tags": ["PgcX0GFS", "hfC1wdMg", "EEyXTSnH"], "targetCurrencyCode": "ml8RqmtN", "targetNamespace": "Lxd02t4Q", "thumbnailUrl": "37jzPBVt", "useCount": 3}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateItem \
    --namespace $AB_NAMESPACE \
    --storeId 'ctGhD6LD' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 103 'CreateItem' test.out

#- 104 GetItemByAppId
$CLI_EXE \
    --sn platform \
    --op GetItemByAppId \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --storeId 'm9vtASr5' \
    --appId 'MXoiHnJ9' \
    > test.out 2>&1
eval_tap $? 104 'GetItemByAppId' test.out

#- 105 QueryItems
$CLI_EXE \
    --sn platform \
    --op QueryItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --appType 'SOFTWARE' \
    --availableDate '2hZZAjNI' \
    --baseAppId 'n3DIvnna' \
    --categoryPath 'PA7pYqFi' \
    --features '7zM0MOoG' \
    --includeSubCategoryItem 'false' \
    --itemType 'MEDIA' \
    --limit '71' \
    --offset '69' \
    --region 'W6EY1GXo' \
    --sortBy '["updatedAt:asc", "createdAt:desc"]' \
    --storeId 'B7bAONeA' \
    --tags 'yrR88REn' \
    --targetNamespace 'sIjFcosS' \
    > test.out 2>&1
eval_tap $? 105 'QueryItems' test.out

#- 106 ListBasicItemsByFeatures
$CLI_EXE \
    --sn platform \
    --op ListBasicItemsByFeatures \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --features '["Lcbdk1N5", "DGgtGRuW", "pXIXu74i"]' \
    > test.out 2>&1
eval_tap $? 106 'ListBasicItemsByFeatures' test.out

#- 107 GetItems
$CLI_EXE \
    --sn platform \
    --op GetItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --storeId 'DqYcnQRW' \
    --itemIds 'd8gktdPC' \
    > test.out 2>&1
eval_tap $? 107 'GetItems' test.out

#- 108 GetItemBySku
$CLI_EXE \
    --sn platform \
    --op GetItemBySku \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --storeId 'RdPQdall' \
    --sku 'lZHyPzTZ' \
    > test.out 2>&1
eval_tap $? 108 'GetItemBySku' test.out

#- 109 GetLocaleItemBySku
$CLI_EXE \
    --sn platform \
    --op GetLocaleItemBySku \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --language 'Wz79nzVs' \
    --populateBundle 'false' \
    --region 'OBFM6xsv' \
    --storeId 'gymzcBwO' \
    --sku 'zZtGTEsa' \
    > test.out 2>&1
eval_tap $? 109 'GetLocaleItemBySku' test.out

#- 110 GetEstimatedPrice
$CLI_EXE \
    --sn platform \
    --op GetEstimatedPrice \
    --namespace $AB_NAMESPACE \
    --platform '9DOhnDW8' \
    --region 'viz4QUYe' \
    --storeId 'ADcJEgP4' \
    --itemIds 'hvehIB3O' \
    --userId 'LE5V3wKc' \
    > test.out 2>&1
eval_tap $? 110 'GetEstimatedPrice' test.out

#- 111 GetItemIdBySku
$CLI_EXE \
    --sn platform \
    --op GetItemIdBySku \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --storeId 'OE4L0ngD' \
    --sku 'pZStBbKc' \
    > test.out 2>&1
eval_tap $? 111 'GetItemIdBySku' test.out

#- 112 GetBulkItemIdBySkus
$CLI_EXE \
    --sn platform \
    --op GetBulkItemIdBySkus \
    --namespace $AB_NAMESPACE \
    --sku '["1wkYHJDY", "OnXVdzMT", "n1uDFrrh"]' \
    --storeId 'NZZKlqjq' \
    > test.out 2>&1
eval_tap $? 112 'GetBulkItemIdBySkus' test.out

#- 113 BulkGetLocaleItems
$CLI_EXE \
    --sn platform \
    --op BulkGetLocaleItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --language 'sCvtwaPl' \
    --region 'bwb5p2SS' \
    --storeId 'tlNxc3kC' \
    --itemIds 'vS6FEUkn' \
    > test.out 2>&1
eval_tap $? 113 'BulkGetLocaleItems' test.out

#- 114 GetAvailablePredicateTypes
$CLI_EXE \
    --sn platform \
    --op GetAvailablePredicateTypes \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 114 'GetAvailablePredicateTypes' test.out

#- 115 ValidateItemPurchaseCondition
# body param: body
echo '{"itemIds": ["Sm2LCS4A", "Ljroupui", "isj7j78e"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ValidateItemPurchaseCondition \
    --namespace $AB_NAMESPACE \
    --platform 'E0iSVnEj' \
    --userId 'eBSPfsIy' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 115 'ValidateItemPurchaseCondition' test.out

#- 116 BulkUpdateRegionData
# body param: body
echo '{"changes": [{"itemIdentities": ["cKWr5hwS", "ViWMNRJ7", "rPoIwShM"], "itemIdentityType": "ITEM_ID", "regionData": {"i4gEgK6A": [{"currencyCode": "JA3lD1uN", "currencyNamespace": "OR5ZHSCQ", "currencyType": "VIRTUAL", "discountAmount": 46, "discountExpireAt": "1988-08-05T00:00:00Z", "discountPercentage": 61, "discountPurchaseAt": "1985-06-27T00:00:00Z", "discountedPrice": 38, "expireAt": "1998-10-31T00:00:00Z", "price": 63, "purchaseAt": "1989-04-10T00:00:00Z", "trialPrice": 32}, {"currencyCode": "9YkTMDOR", "currencyNamespace": "9blssk03", "currencyType": "VIRTUAL", "discountAmount": 23, "discountExpireAt": "1973-12-07T00:00:00Z", "discountPercentage": 87, "discountPurchaseAt": "1978-06-25T00:00:00Z", "discountedPrice": 87, "expireAt": "1976-09-11T00:00:00Z", "price": 18, "purchaseAt": "1976-02-19T00:00:00Z", "trialPrice": 17}, {"currencyCode": "0qr8NYO6", "currencyNamespace": "mQFWhbUR", "currencyType": "VIRTUAL", "discountAmount": 2, "discountExpireAt": "1982-06-08T00:00:00Z", "discountPercentage": 33, "discountPurchaseAt": "1978-06-04T00:00:00Z", "discountedPrice": 16, "expireAt": "1985-10-12T00:00:00Z", "price": 61, "purchaseAt": "1988-07-15T00:00:00Z", "trialPrice": 36}], "AvvWiSxZ": [{"currencyCode": "NNirlnIN", "currencyNamespace": "29QndZBv", "currencyType": "VIRTUAL", "discountAmount": 92, "discountExpireAt": "1971-02-08T00:00:00Z", "discountPercentage": 6, "discountPurchaseAt": "1995-04-18T00:00:00Z", "discountedPrice": 80, "expireAt": "1990-01-29T00:00:00Z", "price": 14, "purchaseAt": "1991-09-29T00:00:00Z", "trialPrice": 58}, {"currencyCode": "5qyNeUOw", "currencyNamespace": "ND9KYL1h", "currencyType": "REAL", "discountAmount": 39, "discountExpireAt": "1983-02-07T00:00:00Z", "discountPercentage": 97, "discountPurchaseAt": "1997-11-07T00:00:00Z", "discountedPrice": 66, "expireAt": "1971-07-07T00:00:00Z", "price": 69, "purchaseAt": "1978-04-24T00:00:00Z", "trialPrice": 38}, {"currencyCode": "h7olXMAD", "currencyNamespace": "kmIxCZ0k", "currencyType": "REAL", "discountAmount": 11, "discountExpireAt": "1989-10-06T00:00:00Z", "discountPercentage": 27, "discountPurchaseAt": "1971-02-16T00:00:00Z", "discountedPrice": 93, "expireAt": "1981-11-10T00:00:00Z", "price": 46, "purchaseAt": "1972-11-23T00:00:00Z", "trialPrice": 12}], "q8Wnuzkn": [{"currencyCode": "m7Ztxj4h", "currencyNamespace": "9AIc44ek", "currencyType": "REAL", "discountAmount": 0, "discountExpireAt": "1988-05-10T00:00:00Z", "discountPercentage": 87, "discountPurchaseAt": "1972-09-24T00:00:00Z", "discountedPrice": 41, "expireAt": "1979-06-23T00:00:00Z", "price": 27, "purchaseAt": "1995-10-02T00:00:00Z", "trialPrice": 66}, {"currencyCode": "VKQevymh", "currencyNamespace": "8cInK3B5", "currencyType": "VIRTUAL", "discountAmount": 88, "discountExpireAt": "1980-09-13T00:00:00Z", "discountPercentage": 92, "discountPurchaseAt": "1982-04-26T00:00:00Z", "discountedPrice": 93, "expireAt": "1991-08-31T00:00:00Z", "price": 93, "purchaseAt": "1996-02-28T00:00:00Z", "trialPrice": 6}, {"currencyCode": "ul8niys2", "currencyNamespace": "amKIKD8c", "currencyType": "REAL", "discountAmount": 84, "discountExpireAt": "1980-04-05T00:00:00Z", "discountPercentage": 38, "discountPurchaseAt": "1987-11-07T00:00:00Z", "discountedPrice": 4, "expireAt": "1983-11-25T00:00:00Z", "price": 77, "purchaseAt": "1993-11-26T00:00:00Z", "trialPrice": 58}]}}, {"itemIdentities": ["xrZYR4d9", "DcmFjmox", "JuFeyjqd"], "itemIdentityType": "ITEM_ID", "regionData": {"CPEXmkFa": [{"currencyCode": "SrvS2VaW", "currencyNamespace": "J4GvxBfW", "currencyType": "VIRTUAL", "discountAmount": 83, "discountExpireAt": "1993-11-08T00:00:00Z", "discountPercentage": 70, "discountPurchaseAt": "1992-10-13T00:00:00Z", "discountedPrice": 60, "expireAt": "1987-05-16T00:00:00Z", "price": 68, "purchaseAt": "1985-08-11T00:00:00Z", "trialPrice": 59}, {"currencyCode": "u8f9oij4", "currencyNamespace": "52pSoXTK", "currencyType": "VIRTUAL", "discountAmount": 8, "discountExpireAt": "1986-07-19T00:00:00Z", "discountPercentage": 76, "discountPurchaseAt": "1988-03-01T00:00:00Z", "discountedPrice": 4, "expireAt": "1988-07-05T00:00:00Z", "price": 60, "purchaseAt": "1980-02-04T00:00:00Z", "trialPrice": 83}, {"currencyCode": "iQaNy8MS", "currencyNamespace": "4bSG4yrj", "currencyType": "REAL", "discountAmount": 39, "discountExpireAt": "1973-09-18T00:00:00Z", "discountPercentage": 58, "discountPurchaseAt": "1989-03-17T00:00:00Z", "discountedPrice": 70, "expireAt": "1980-08-02T00:00:00Z", "price": 15, "purchaseAt": "1999-07-12T00:00:00Z", "trialPrice": 98}], "olmYrQFO": [{"currencyCode": "zBSWS2zI", "currencyNamespace": "j27brDW8", "currencyType": "VIRTUAL", "discountAmount": 70, "discountExpireAt": "1975-07-15T00:00:00Z", "discountPercentage": 79, "discountPurchaseAt": "1977-09-18T00:00:00Z", "discountedPrice": 26, "expireAt": "1997-10-28T00:00:00Z", "price": 69, "purchaseAt": "1972-03-28T00:00:00Z", "trialPrice": 58}, {"currencyCode": "SycMAEY0", "currencyNamespace": "kLs24TcY", "currencyType": "REAL", "discountAmount": 51, "discountExpireAt": "1971-07-03T00:00:00Z", "discountPercentage": 16, "discountPurchaseAt": "1989-03-13T00:00:00Z", "discountedPrice": 28, "expireAt": "1989-09-08T00:00:00Z", "price": 81, "purchaseAt": "1997-04-18T00:00:00Z", "trialPrice": 58}, {"currencyCode": "GrKNDo2G", "currencyNamespace": "vvAWtm2n", "currencyType": "REAL", "discountAmount": 45, "discountExpireAt": "1989-05-27T00:00:00Z", "discountPercentage": 85, "discountPurchaseAt": "1988-03-26T00:00:00Z", "discountedPrice": 62, "expireAt": "1980-02-12T00:00:00Z", "price": 62, "purchaseAt": "1971-07-02T00:00:00Z", "trialPrice": 67}], "fYHNKR1E": [{"currencyCode": "NkzdnNAX", "currencyNamespace": "ylNGv4PH", "currencyType": "REAL", "discountAmount": 64, "discountExpireAt": "1993-08-28T00:00:00Z", "discountPercentage": 32, "discountPurchaseAt": "1993-05-19T00:00:00Z", "discountedPrice": 94, "expireAt": "1994-01-16T00:00:00Z", "price": 44, "purchaseAt": "1985-06-21T00:00:00Z", "trialPrice": 99}, {"currencyCode": "bnvdWpSl", "currencyNamespace": "wP0XxsZk", "currencyType": "VIRTUAL", "discountAmount": 71, "discountExpireAt": "1983-08-05T00:00:00Z", "discountPercentage": 47, "discountPurchaseAt": "1972-10-15T00:00:00Z", "discountedPrice": 56, "expireAt": "1971-10-01T00:00:00Z", "price": 29, "purchaseAt": "1990-07-12T00:00:00Z", "trialPrice": 5}, {"currencyCode": "DIIL8u5q", "currencyNamespace": "B9yvkkPm", "currencyType": "REAL", "discountAmount": 41, "discountExpireAt": "1992-03-05T00:00:00Z", "discountPercentage": 36, "discountPurchaseAt": "1974-02-08T00:00:00Z", "discountedPrice": 77, "expireAt": "1987-08-02T00:00:00Z", "price": 9, "purchaseAt": "1976-08-29T00:00:00Z", "trialPrice": 70}]}}, {"itemIdentities": ["YjRnclBZ", "7kHzRnCQ", "l5nXU0dk"], "itemIdentityType": "ITEM_ID", "regionData": {"axR8peVD": [{"currencyCode": "PZRQpz1z", "currencyNamespace": "KqyBkbna", "currencyType": "VIRTUAL", "discountAmount": 77, "discountExpireAt": "1976-01-18T00:00:00Z", "discountPercentage": 12, "discountPurchaseAt": "1986-04-02T00:00:00Z", "discountedPrice": 27, "expireAt": "1977-03-31T00:00:00Z", "price": 89, "purchaseAt": "1971-01-23T00:00:00Z", "trialPrice": 27}, {"currencyCode": "91bIX2XB", "currencyNamespace": "LXJRc1Ur", "currencyType": "REAL", "discountAmount": 66, "discountExpireAt": "1980-07-04T00:00:00Z", "discountPercentage": 59, "discountPurchaseAt": "1985-01-01T00:00:00Z", "discountedPrice": 1, "expireAt": "1979-10-07T00:00:00Z", "price": 23, "purchaseAt": "1972-02-11T00:00:00Z", "trialPrice": 14}, {"currencyCode": "sUci0Bmg", "currencyNamespace": "h1YwM28M", "currencyType": "REAL", "discountAmount": 15, "discountExpireAt": "1988-11-20T00:00:00Z", "discountPercentage": 56, "discountPurchaseAt": "1995-08-20T00:00:00Z", "discountedPrice": 56, "expireAt": "1971-01-28T00:00:00Z", "price": 32, "purchaseAt": "1975-09-11T00:00:00Z", "trialPrice": 65}], "MfO1mHlr": [{"currencyCode": "GtRpv2f6", "currencyNamespace": "7DpQgsGj", "currencyType": "REAL", "discountAmount": 23, "discountExpireAt": "1995-05-24T00:00:00Z", "discountPercentage": 36, "discountPurchaseAt": "1985-01-16T00:00:00Z", "discountedPrice": 53, "expireAt": "1983-08-30T00:00:00Z", "price": 35, "purchaseAt": "1973-09-06T00:00:00Z", "trialPrice": 44}, {"currencyCode": "bRGRDp9m", "currencyNamespace": "sy44GM2l", "currencyType": "VIRTUAL", "discountAmount": 21, "discountExpireAt": "1985-07-24T00:00:00Z", "discountPercentage": 99, "discountPurchaseAt": "1975-01-06T00:00:00Z", "discountedPrice": 34, "expireAt": "1984-10-03T00:00:00Z", "price": 0, "purchaseAt": "1986-09-20T00:00:00Z", "trialPrice": 36}, {"currencyCode": "dbMCFRf8", "currencyNamespace": "89hOWG6P", "currencyType": "REAL", "discountAmount": 74, "discountExpireAt": "1979-12-12T00:00:00Z", "discountPercentage": 30, "discountPurchaseAt": "1987-10-04T00:00:00Z", "discountedPrice": 67, "expireAt": "1986-04-19T00:00:00Z", "price": 5, "purchaseAt": "1984-02-19T00:00:00Z", "trialPrice": 98}], "PmXVQomR": [{"currencyCode": "h0j3g2Kt", "currencyNamespace": "S1B6eDHw", "currencyType": "REAL", "discountAmount": 33, "discountExpireAt": "1975-12-06T00:00:00Z", "discountPercentage": 11, "discountPurchaseAt": "1995-01-19T00:00:00Z", "discountedPrice": 87, "expireAt": "1999-11-23T00:00:00Z", "price": 43, "purchaseAt": "1975-08-13T00:00:00Z", "trialPrice": 46}, {"currencyCode": "nnGErZB4", "currencyNamespace": "rDwcg2fV", "currencyType": "REAL", "discountAmount": 3, "discountExpireAt": "1997-08-26T00:00:00Z", "discountPercentage": 66, "discountPurchaseAt": "1992-05-18T00:00:00Z", "discountedPrice": 19, "expireAt": "1976-07-08T00:00:00Z", "price": 96, "purchaseAt": "1971-11-24T00:00:00Z", "trialPrice": 92}, {"currencyCode": "kZsSnodx", "currencyNamespace": "2eQpahBb", "currencyType": "REAL", "discountAmount": 8, "discountExpireAt": "1984-10-30T00:00:00Z", "discountPercentage": 29, "discountPurchaseAt": "1984-12-24T00:00:00Z", "discountedPrice": 47, "expireAt": "1980-03-31T00:00:00Z", "price": 100, "purchaseAt": "1986-06-11T00:00:00Z", "trialPrice": 34}]}}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op BulkUpdateRegionData \
    --namespace $AB_NAMESPACE \
    --storeId '5DFJNpwq' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 116 'BulkUpdateRegionData' test.out

#- 117 SearchItems
$CLI_EXE \
    --sn platform \
    --op SearchItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --itemType 'OPTIONBOX' \
    --limit '52' \
    --offset '8' \
    --sortBy 's2J0bcrX' \
    --storeId 'Ga3JObsm' \
    --keyword 'hQ3jxqHj' \
    --language '5H1AiFht' \
    > test.out 2>&1
eval_tap $? 117 'SearchItems' test.out

#- 118 QueryUncategorizedItems
$CLI_EXE \
    --sn platform \
    --op QueryUncategorizedItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --limit '83' \
    --offset '87' \
    --sortBy '["displayOrder:desc", "displayOrder", "name"]' \
    --storeId 'N92cpGdP' \
    > test.out 2>&1
eval_tap $? 118 'QueryUncategorizedItems' test.out

#- 119 GetItem
$CLI_EXE \
    --sn platform \
    --op GetItem \
    --itemId 'lnhrzUMe' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --storeId 'Js0B54Hw' \
    > test.out 2>&1
eval_tap $? 119 'GetItem' test.out

#- 120 UpdateItem
# body param: body
echo '{"appId": "jrTsTGrq", "appType": "SOFTWARE", "baseAppId": "OjMHnAwi", "boothName": "rJWUSfZm", "categoryPath": "3z65XBnf", "clazz": "pjmq2msW", "displayOrder": 92, "entitlementType": "CONSUMABLE", "ext": {"Nmc9iKsi": {}, "a5O3ayBb": {}, "FH5Yvl3X": {}}, "features": ["tOQ1W1zX", "SaehY345", "MRxec7Cn"], "flexible": false, "images": [{"as": "T2t1P1JF", "caption": "e6G1wIxA", "height": 89, "imageUrl": "YtlbqNRS", "smallImageUrl": "duJaCtXo", "width": 34}, {"as": "GK9BscZb", "caption": "NTTHdImC", "height": 66, "imageUrl": "pBbzkQCY", "smallImageUrl": "Qaazs4gU", "width": 67}, {"as": "M6JDyeg1", "caption": "zzSSYbRz", "height": 24, "imageUrl": "yPXQBgAT", "smallImageUrl": "Jzb6Hxhy", "width": 95}], "inventoryConfig": {"customAttributes": {"dP5H20sI": {}, "AbR1lxV8": {}, "FL0CdVj8": {}}, "serverCustomAttributes": {"dkk2IUFL": {}, "ol6Uf6RJ": {}, "M9x1EJuX": {}}, "slotUsed": 10}, "itemIds": ["XAW3kVWz", "FCS0VWzl", "LvKNo3L8"], "itemQty": {"RcRRwl2x": 99, "fbSzMDxf": 84, "z3CywyvJ": 99}, "itemType": "SUBSCRIPTION", "listable": true, "localizations": {"0G4d4zBv": {"description": "7KLkfruU", "localExt": {"Macw8cXc": {}, "5CG3f3Zc": {}, "jSa5hZPh": {}}, "longDescription": "E30KzUEl", "title": "81qA2ixo"}, "gqT6MnAT": {"description": "cbVEBu2h", "localExt": {"xV8e0uEE": {}, "PdpjH9on": {}, "t4OR7W0s": {}}, "longDescription": "reqUAMOP", "title": "Zz3i90Ys"}, "Z8mE8lmi": {"description": "wh4jdyc0", "localExt": {"3lAiVERF": {}, "hz7HpVVs": {}, "JqSiWfEE": {}}, "longDescription": "obiRzSCK", "title": "FWxa5ZQU"}}, "lootBoxConfig": {"rewardCount": 42, "rewards": [{"lootBoxItems": [{"count": 12, "duration": 85, "endDate": "1987-01-25T00:00:00Z", "itemId": "Qhb4GWEA", "itemSku": "C879C3ZP", "itemType": "RQ2BWErC"}, {"count": 30, "duration": 75, "endDate": "1988-03-07T00:00:00Z", "itemId": "qQqtuMm6", "itemSku": "HpAphCSL", "itemType": "xfv8vOon"}, {"count": 8, "duration": 34, "endDate": "1982-12-23T00:00:00Z", "itemId": "iXglqv5v", "itemSku": "BEsGlzfd", "itemType": "v1jPK09s"}], "name": "HKcQelYG", "odds": 0.683550107095869, "type": "PROBABILITY_GROUP", "weight": 42}, {"lootBoxItems": [{"count": 0, "duration": 43, "endDate": "1975-12-10T00:00:00Z", "itemId": "5UHKnuFJ", "itemSku": "RG3HUgGU", "itemType": "w0OVGVU5"}, {"count": 88, "duration": 18, "endDate": "1993-10-08T00:00:00Z", "itemId": "CELrnZwd", "itemSku": "6I3lM1qg", "itemType": "MCOByDEU"}, {"count": 59, "duration": 41, "endDate": "1981-04-23T00:00:00Z", "itemId": "SuoeHTkq", "itemSku": "9D85mWEG", "itemType": "aRMvoF0f"}], "name": "MkYASZsh", "odds": 0.6290396377399916, "type": "PROBABILITY_GROUP", "weight": 53}, {"lootBoxItems": [{"count": 61, "duration": 69, "endDate": "1991-09-09T00:00:00Z", "itemId": "YUjiYpsQ", "itemSku": "JKz0IumI", "itemType": "VK4BWnk1"}, {"count": 16, "duration": 81, "endDate": "1976-05-19T00:00:00Z", "itemId": "OoX8qsNo", "itemSku": "CKvqCQb3", "itemType": "k5mio0oH"}, {"count": 18, "duration": 25, "endDate": "1999-07-30T00:00:00Z", "itemId": "Vc577FHH", "itemSku": "h0b6ZcuV", "itemType": "cQrmUpfx"}], "name": "pzaKdMCm", "odds": 0.5075257900441836, "type": "REWARD_GROUP", "weight": 68}], "rollFunction": "CUSTOM"}, "maxCount": 1, "maxCountPerUser": 39, "name": "IAzKn0AJ", "optionBoxConfig": {"boxItems": [{"count": 61, "duration": 3, "endDate": "1987-07-03T00:00:00Z", "itemId": "PDtWo94I", "itemSku": "uo7mccVy", "itemType": "Bw38yW5G"}, {"count": 21, "duration": 69, "endDate": "1975-02-22T00:00:00Z", "itemId": "E8LWr9qk", "itemSku": "WJOLgciM", "itemType": "qwuTQNpC"}, {"count": 91, "duration": 64, "endDate": "1992-05-27T00:00:00Z", "itemId": "PaRxQVCy", "itemSku": "JMZSNy90", "itemType": "8df2KLXZ"}]}, "purchasable": true, "recurring": {"cycle": "MONTHLY", "fixedFreeDays": 92, "fixedTrialCycles": 61, "graceDays": 72}, "regionData": {"1GkY3jPI": [{"currencyCode": "QwKLtwha", "currencyNamespace": "01Is6SCL", "currencyType": "REAL", "discountAmount": 25, "discountExpireAt": "1984-04-21T00:00:00Z", "discountPercentage": 44, "discountPurchaseAt": "1987-11-02T00:00:00Z", "expireAt": "1990-08-03T00:00:00Z", "price": 84, "purchaseAt": "1984-04-03T00:00:00Z", "trialPrice": 25}, {"currencyCode": "ycxAbhL1", "currencyNamespace": "ogFaNmT3", "currencyType": "VIRTUAL", "discountAmount": 24, "discountExpireAt": "1981-02-14T00:00:00Z", "discountPercentage": 21, "discountPurchaseAt": "1974-05-03T00:00:00Z", "expireAt": "1989-12-29T00:00:00Z", "price": 100, "purchaseAt": "1977-07-08T00:00:00Z", "trialPrice": 60}, {"currencyCode": "nUMT5gbv", "currencyNamespace": "jOWkgBRu", "currencyType": "VIRTUAL", "discountAmount": 3, "discountExpireAt": "1997-01-31T00:00:00Z", "discountPercentage": 94, "discountPurchaseAt": "1976-06-15T00:00:00Z", "expireAt": "1990-11-09T00:00:00Z", "price": 22, "purchaseAt": "1987-10-22T00:00:00Z", "trialPrice": 8}], "xoOqdqG6": [{"currencyCode": "ltuY0CkU", "currencyNamespace": "cwoXcNgt", "currencyType": "REAL", "discountAmount": 63, "discountExpireAt": "1998-08-18T00:00:00Z", "discountPercentage": 38, "discountPurchaseAt": "1995-06-28T00:00:00Z", "expireAt": "1999-02-21T00:00:00Z", "price": 21, "purchaseAt": "1991-07-09T00:00:00Z", "trialPrice": 10}, {"currencyCode": "8lIcgjWq", "currencyNamespace": "r4zXAN0u", "currencyType": "REAL", "discountAmount": 18, "discountExpireAt": "1999-06-11T00:00:00Z", "discountPercentage": 77, "discountPurchaseAt": "1982-11-04T00:00:00Z", "expireAt": "1986-10-03T00:00:00Z", "price": 6, "purchaseAt": "1980-07-08T00:00:00Z", "trialPrice": 74}, {"currencyCode": "URozoViT", "currencyNamespace": "fkw58RGs", "currencyType": "VIRTUAL", "discountAmount": 1, "discountExpireAt": "1992-11-03T00:00:00Z", "discountPercentage": 77, "discountPurchaseAt": "1998-03-01T00:00:00Z", "expireAt": "1990-06-12T00:00:00Z", "price": 97, "purchaseAt": "1982-10-30T00:00:00Z", "trialPrice": 6}], "yoJ4N5TK": [{"currencyCode": "baAzdmiO", "currencyNamespace": "uL3OrDAt", "currencyType": "VIRTUAL", "discountAmount": 62, "discountExpireAt": "1990-05-15T00:00:00Z", "discountPercentage": 20, "discountPurchaseAt": "1980-10-05T00:00:00Z", "expireAt": "1995-05-24T00:00:00Z", "price": 8, "purchaseAt": "1975-12-23T00:00:00Z", "trialPrice": 56}, {"currencyCode": "haEeNZ2e", "currencyNamespace": "FnvR4zR7", "currencyType": "VIRTUAL", "discountAmount": 54, "discountExpireAt": "1975-05-28T00:00:00Z", "discountPercentage": 10, "discountPurchaseAt": "1981-04-12T00:00:00Z", "expireAt": "1986-07-20T00:00:00Z", "price": 73, "purchaseAt": "1994-12-13T00:00:00Z", "trialPrice": 8}, {"currencyCode": "CTQLMQg4", "currencyNamespace": "sX8li5FE", "currencyType": "VIRTUAL", "discountAmount": 1, "discountExpireAt": "1977-09-10T00:00:00Z", "discountPercentage": 65, "discountPurchaseAt": "1972-07-22T00:00:00Z", "expireAt": "1980-02-10T00:00:00Z", "price": 51, "purchaseAt": "1971-04-03T00:00:00Z", "trialPrice": 83}]}, "saleConfig": {"currencyCode": "t9Ei40oV", "price": 16}, "seasonType": "PASS", "sectionExclusive": true, "sellable": true, "sku": "YTOGxC5w", "stackable": false, "status": "INACTIVE", "tags": ["iWDBCHli", "Xp16sJiS", "hxLP7vWE"], "targetCurrencyCode": "8ZtCghAm", "targetNamespace": "sNmNyMRO", "thumbnailUrl": "jauGoKrJ", "useCount": 17}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateItem \
    --itemId 'D1CEWT4F' \
    --namespace $AB_NAMESPACE \
    --storeId 'pNsAYaLu' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 120 'UpdateItem' test.out

#- 121 DeleteItem
$CLI_EXE \
    --sn platform \
    --op DeleteItem \
    --itemId 'fppmHjPY' \
    --namespace $AB_NAMESPACE \
    --force 'true' \
    --storeId '28jINvSy' \
    > test.out 2>&1
eval_tap $? 121 'DeleteItem' test.out

#- 122 AcquireItem
# body param: body
echo '{"count": 77, "orderNo": "ISyxVNPQ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op AcquireItem \
    --itemId 'gr5aRirt' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 122 'AcquireItem' test.out

#- 123 GetApp
$CLI_EXE \
    --sn platform \
    --op GetApp \
    --itemId 'oIJgK2w6' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --storeId '0K0rBqtk' \
    > test.out 2>&1
eval_tap $? 123 'GetApp' test.out

#- 124 UpdateApp
# body param: body
echo '{"carousel": [{"alt": "Z2QDX2hC", "previewUrl": "xpygnT0m", "thumbnailUrl": "swmUscXf", "type": "image", "url": "FHDGU6Zi", "videoSource": "generic"}, {"alt": "B8eBfdXv", "previewUrl": "zmcNho9f", "thumbnailUrl": "jsTquwaV", "type": "image", "url": "uS0P076u", "videoSource": "youtube"}, {"alt": "yJL6begf", "previewUrl": "GQKzZGDV", "thumbnailUrl": "FDmbpo4u", "type": "video", "url": "fo2tptxH", "videoSource": "youtube"}], "developer": "O88CTNTi", "forumUrl": "fJ8cKYoX", "genres": ["Casual", "Indie", "FreeToPlay"], "localizations": {"p70yrjSG": {"announcement": "s6DNp4a8", "slogan": "oWvHZJoO"}, "A3K6w9c4": {"announcement": "pKuj6IdV", "slogan": "TE0MffGe"}, "pWwjzU0K": {"announcement": "UfoZb8cp", "slogan": "CK6IJDHT"}}, "platformRequirements": {"IwrKTeEj": [{"additionals": "7NPyqAMb", "directXVersion": "XeRfvmkz", "diskSpace": "SXvdbc3c", "graphics": "uPMexog4", "label": "7FbUXr2c", "osVersion": "UQBrNHyf", "processor": "2p7SP3CC", "ram": "3YdtUp3V", "soundCard": "yns7MdF7"}, {"additionals": "TwhoUq7j", "directXVersion": "yO5EkJHF", "diskSpace": "XAKXytlw", "graphics": "Qvh4oxa5", "label": "leRzYjHM", "osVersion": "4EIyBO7H", "processor": "wcBVOnP7", "ram": "qK6ov3aG", "soundCard": "XzHE4bXS"}, {"additionals": "c51Ds4PR", "directXVersion": "Zc1WoerG", "diskSpace": "5eyvHC0x", "graphics": "BlrkKaGS", "label": "6LGkoMwK", "osVersion": "q20lH2MS", "processor": "A9ZYKa5V", "ram": "CzswZKXC", "soundCard": "qBh2DKT7"}], "VQUuUhnf": [{"additionals": "GIpbZGYm", "directXVersion": "oYxjRzWq", "diskSpace": "mGCNayPg", "graphics": "5vfq8Dy1", "label": "cCbGIfAj", "osVersion": "Bl1qJkmr", "processor": "5l1q1tW9", "ram": "u5tmwQ6z", "soundCard": "vB2J5SQm"}, {"additionals": "yGFnKgSy", "directXVersion": "mSwALNxE", "diskSpace": "6WYQAB9E", "graphics": "3SNPsAX3", "label": "h9cHcCpe", "osVersion": "D35t0pBo", "processor": "Ng57eYJD", "ram": "OCbfEpBp", "soundCard": "BAapqX0p"}, {"additionals": "ToRgWsR4", "directXVersion": "MJCnhAhT", "diskSpace": "6YLyKjH2", "graphics": "o7rrB6va", "label": "n7aZtBsJ", "osVersion": "0K8Jn0Ih", "processor": "bjO04ULt", "ram": "9nvZAWjM", "soundCard": "TsZYhFfN"}], "WlDxdpQC": [{"additionals": "SqQ0Myb8", "directXVersion": "YsehdGyz", "diskSpace": "uZ7hXBwM", "graphics": "ZCCoalkJ", "label": "s6kQKVLx", "osVersion": "P2tx2ppx", "processor": "C3nItnbk", "ram": "kaoKgdkr", "soundCard": "gxgHBVVr"}, {"additionals": "bQouXLCv", "directXVersion": "ZfM9XuP2", "diskSpace": "bTbpBzdQ", "graphics": "7aSFtNUv", "label": "V94RAxai", "osVersion": "EvpdiTtV", "processor": "3QjO2mbd", "ram": "gSc16pNL", "soundCard": "L7WbaRkM"}, {"additionals": "xw5Lrxci", "directXVersion": "i4G4ge7u", "diskSpace": "bvHTOGXt", "graphics": "RbbxJu78", "label": "0zIHFe7n", "osVersion": "3lkl1LTo", "processor": "I9e07usN", "ram": "j7y7HQiZ", "soundCard": "cWzzmH4e"}]}, "platforms": ["Android", "IOS", "Windows"], "players": ["Multi", "CrossPlatformMulti", "CrossPlatformMulti"], "primaryGenre": "Adventure", "publisher": "sIATXMJp", "releaseDate": "1993-09-27T00:00:00Z", "websiteUrl": "4hq4wOUH"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateApp \
    --itemId '42qzojh5' \
    --namespace $AB_NAMESPACE \
    --storeId 'b7BWy46k' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 124 'UpdateApp' test.out

#- 125 DisableItem
$CLI_EXE \
    --sn platform \
    --op DisableItem \
    --itemId 'MQvRvl4B' \
    --namespace $AB_NAMESPACE \
    --storeId 'c9PGD2Kv' \
    > test.out 2>&1
eval_tap $? 125 'DisableItem' test.out

#- 126 GetItemDynamicData
$CLI_EXE \
    --sn platform \
    --op GetItemDynamicData \
    --itemId 'FVdeJQxx' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 126 'GetItemDynamicData' test.out

#- 127 EnableItem
$CLI_EXE \
    --sn platform \
    --op EnableItem \
    --itemId '1ZYkfSPK' \
    --namespace $AB_NAMESPACE \
    --storeId 's1qZ3eAp' \
    > test.out 2>&1
eval_tap $? 127 'EnableItem' test.out

#- 128 FeatureItem
$CLI_EXE \
    --sn platform \
    --op FeatureItem \
    --feature 'ufG7irCF' \
    --itemId 'iuhQ1KFc' \
    --namespace $AB_NAMESPACE \
    --storeId 'fvsd5S38' \
    > test.out 2>&1
eval_tap $? 128 'FeatureItem' test.out

#- 129 DefeatureItem
$CLI_EXE \
    --sn platform \
    --op DefeatureItem \
    --feature 'njXKL5Ha' \
    --itemId 'b1hJxj1N' \
    --namespace $AB_NAMESPACE \
    --storeId 'lrTvA1Hu' \
    > test.out 2>&1
eval_tap $? 129 'DefeatureItem' test.out

#- 130 GetLocaleItem
$CLI_EXE \
    --sn platform \
    --op GetLocaleItem \
    --itemId 'q5zfgqOi' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --language '8o80O82x' \
    --populateBundle 'true' \
    --region 'q1TTliHv' \
    --storeId 'oD68kYxI' \
    > test.out 2>&1
eval_tap $? 130 'GetLocaleItem' test.out

#- 131 UpdateItemPurchaseCondition
# body param: body
echo '{"purchaseCondition": {"conditionGroups": [{"operator": "or", "predicates": [{"anyOf": 24, "comparison": "isNot", "name": "LhP2Ow40", "predicateType": "SeasonTierPredicate", "value": "ax8zrIX8", "values": ["IMqO27Oj", "wRrPvCAr", "Uck54uCs"]}, {"anyOf": 69, "comparison": "includes", "name": "FiQxNmSi", "predicateType": "SeasonTierPredicate", "value": "XvkMRDnz", "values": ["l1rZ809Z", "HmQIk0Pw", "8kQoOR8w"]}, {"anyOf": 96, "comparison": "isLessThan", "name": "tApGR4Wb", "predicateType": "SeasonTierPredicate", "value": "bzAB8nY8", "values": ["EBuuFu6z", "GAG2boT3", "YLeSyEpA"]}]}, {"operator": "and", "predicates": [{"anyOf": 52, "comparison": "is", "name": "313slAgb", "predicateType": "EntitlementPredicate", "value": "g0CIrJb6", "values": ["3dbg264N", "BeGlr3pe", "bTqrTbmD"]}, {"anyOf": 83, "comparison": "is", "name": "A3idoggW", "predicateType": "EntitlementPredicate", "value": "4TIvS3g1", "values": ["rL0V82q0", "igT4IbSh", "FXUulBEx"]}, {"anyOf": 45, "comparison": "isLessThan", "name": "0chuGGE9", "predicateType": "EntitlementPredicate", "value": "aOa3pnGI", "values": ["Tk7yXASr", "QOjHh1qf", "bKmkqzZR"]}]}, {"operator": "and", "predicates": [{"anyOf": 77, "comparison": "includes", "name": "9uyKiLjo", "predicateType": "EntitlementPredicate", "value": "ziiUPuxP", "values": ["GJsvBn3X", "372fLuvm", "2sw76XpU"]}, {"anyOf": 34, "comparison": "excludes", "name": "rUg1UAYn", "predicateType": "SeasonTierPredicate", "value": "bAslmPSy", "values": ["TTt8Oy8x", "vxmcztNk", "iCmEaUyx"]}, {"anyOf": 94, "comparison": "isGreaterThan", "name": "4KO6BYDL", "predicateType": "SeasonPassPredicate", "value": "2u64VafD", "values": ["St9VboJE", "ON31Yy4B", "HqHR2QTy"]}]}]}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateItemPurchaseCondition \
    --itemId 'W2pdo61C' \
    --namespace $AB_NAMESPACE \
    --storeId 'R0t9ZEJ1' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 131 'UpdateItemPurchaseCondition' test.out

#- 132 ReturnItem
# body param: body
echo '{"orderNo": "C74admmK"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ReturnItem \
    --itemId 'z4FkfOCN' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 132 'ReturnItem' test.out

#- 133 QueryKeyGroups
$CLI_EXE \
    --sn platform \
    --op QueryKeyGroups \
    --namespace $AB_NAMESPACE \
    --limit '23' \
    --name 'rFWpGNtJ' \
    --offset '75' \
    --tag 'dlYn9oHE' \
    > test.out 2>&1
eval_tap $? 133 'QueryKeyGroups' test.out

#- 134 CreateKeyGroup
# body param: body
echo '{"description": "3vrH4QLB", "name": "YDlgIY63", "status": "ACTIVE", "tags": ["4YYg9vic", "itK1TtG4", "Xjzx4Rg2"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateKeyGroup \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 134 'CreateKeyGroup' test.out

#- 135 GetKeyGroupByBoothName
eval_tap 0 135 'GetKeyGroupByBoothName # SKIP deprecated' test.out

#- 136 GetKeyGroup
$CLI_EXE \
    --sn platform \
    --op GetKeyGroup \
    --keyGroupId 'pVXsyiav' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 136 'GetKeyGroup' test.out

#- 137 UpdateKeyGroup
# body param: body
echo '{"description": "bWa8gTkF", "name": "xhL7I31T", "status": "INACTIVE", "tags": ["yPHVIscq", "rHlzyi0d", "lukLtSYn"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateKeyGroup \
    --keyGroupId 'qlmhFMhM' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 137 'UpdateKeyGroup' test.out

#- 138 GetKeyGroupDynamic
$CLI_EXE \
    --sn platform \
    --op GetKeyGroupDynamic \
    --keyGroupId 'lH2WcwGR' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 138 'GetKeyGroupDynamic' test.out

#- 139 ListKeys
$CLI_EXE \
    --sn platform \
    --op ListKeys \
    --keyGroupId 's4xZiTWq' \
    --namespace $AB_NAMESPACE \
    --limit '26' \
    --offset '85' \
    --status 'ACTIVE' \
    > test.out 2>&1
eval_tap $? 139 'ListKeys' test.out

#- 140 UploadKeys
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UploadKeys \
    --keyGroupId 'yZr1AQkg' \
    --namespace $AB_NAMESPACE \
    --upload file $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 140 'UploadKeys' test.out

#- 141 QueryOrders
$CLI_EXE \
    --sn platform \
    --op QueryOrders \
    --namespace $AB_NAMESPACE \
    --endTime 'dcPn6gU3' \
    --limit '31' \
    --offset '56' \
    --orderNos '["gZxSHIl8", "Ev5MDSiG", "mjwt0MEu"]' \
    --sortBy 'IeX9wfOM' \
    --startTime 'CG5qVCQZ' \
    --status 'FULFILLED' \
    --withTotal 'false' \
    > test.out 2>&1
eval_tap $? 141 'QueryOrders' test.out

#- 142 GetOrderStatistics
$CLI_EXE \
    --sn platform \
    --op GetOrderStatistics \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 142 'GetOrderStatistics' test.out

#- 143 GetOrder
$CLI_EXE \
    --sn platform \
    --op GetOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'Jilpm0ZZ' \
    > test.out 2>&1
eval_tap $? 143 'GetOrder' test.out

#- 144 RefundOrder
# body param: body
echo '{"description": "jgamxMHC"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RefundOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'NfpC6rop' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 144 'RefundOrder' test.out

#- 145 GetPaymentCallbackConfig
$CLI_EXE \
    --sn platform \
    --op GetPaymentCallbackConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 145 'GetPaymentCallbackConfig' test.out

#- 146 UpdatePaymentCallbackConfig
# body param: body
echo '{"dryRun": true, "notifyUrl": "L3SIS0YF", "privateKey": "jI2Mvd3A"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePaymentCallbackConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 146 'UpdatePaymentCallbackConfig' test.out

#- 147 QueryPaymentNotifications
$CLI_EXE \
    --sn platform \
    --op QueryPaymentNotifications \
    --namespace $AB_NAMESPACE \
    --endDate 'dMl5rVML' \
    --externalId '79zml74G' \
    --limit '64' \
    --notificationSource 'XSOLLA' \
    --notificationType 'J5cnTceC' \
    --offset '54' \
    --paymentOrderNo 'FHfmtorf' \
    --startDate '2Bic6EiA' \
    --status 'ERROR' \
    > test.out 2>&1
eval_tap $? 147 'QueryPaymentNotifications' test.out

#- 148 QueryPaymentOrders
$CLI_EXE \
    --sn platform \
    --op QueryPaymentOrders \
    --namespace $AB_NAMESPACE \
    --channel 'EXTERNAL' \
    --extTxId 'CKtmYoSA' \
    --limit '75' \
    --offset '59' \
    --status 'REFUND_FAILED' \
    > test.out 2>&1
eval_tap $? 148 'QueryPaymentOrders' test.out

#- 149 CreatePaymentOrderByDedicated
# body param: body
echo '{"currencyCode": "9vYAkHHy", "currencyNamespace": "HcKDsv6k", "customParameters": {"YuUVDKGZ": {}, "Q3FXZpWY": {}, "CmSCfTMJ": {}}, "description": "vOUs9KkW", "extOrderNo": "5Y8Su6Ii", "extUserId": "OfZX2CYl", "itemType": "SEASON", "language": "pcl-mZQI-299", "metadata": {"CF1K9cGV": "A0ERkgvo", "D7SOfmJ8": "ktGZpS1T", "uBu1z0yG": "sy9TVffr"}, "notifyUrl": "lAmhXE2r", "omitNotification": true, "platform": "bqs4P1T8", "price": 93, "recurringPaymentOrderNo": "UxEn7I2o", "region": "dJG34EFb", "returnUrl": "Oaas2JZN", "sandbox": false, "sku": "XN1x4Hqq", "subscriptionId": "Kuq5ChPl", "targetNamespace": "fl4GLHGD", "targetUserId": "YGzYVQLl", "title": "jDIf20ri"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreatePaymentOrderByDedicated \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 149 'CreatePaymentOrderByDedicated' test.out

#- 150 ListExtOrderNoByExtTxId
$CLI_EXE \
    --sn platform \
    --op ListExtOrderNoByExtTxId \
    --namespace $AB_NAMESPACE \
    --extTxId 'OpJzFqpL' \
    > test.out 2>&1
eval_tap $? 150 'ListExtOrderNoByExtTxId' test.out

#- 151 GetPaymentOrder
$CLI_EXE \
    --sn platform \
    --op GetPaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo '7l7Xh6cC' \
    > test.out 2>&1
eval_tap $? 151 'GetPaymentOrder' test.out

#- 152 ChargePaymentOrder
# body param: body
echo '{"extTxId": "5UXRCacH", "paymentMethod": "QGlNOJj7", "paymentProvider": "XSOLLA"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ChargePaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'UMBwftBJ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 152 'ChargePaymentOrder' test.out

#- 153 RefundPaymentOrderByDedicated
# body param: body
echo '{"description": "ZwCyAL2c"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RefundPaymentOrderByDedicated \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'l82CgCdJ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 153 'RefundPaymentOrderByDedicated' test.out

#- 154 SimulatePaymentOrderNotification
# body param: body
echo '{"amount": 24, "currencyCode": "LkgoRFFt", "notifyType": "CHARGE", "paymentProvider": "WXPAY", "salesTax": 40, "vat": 25}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SimulatePaymentOrderNotification \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'I720aQZH' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 154 'SimulatePaymentOrderNotification' test.out

#- 155 GetPaymentOrderChargeStatus
$CLI_EXE \
    --sn platform \
    --op GetPaymentOrderChargeStatus \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'Uv8aIMPZ' \
    > test.out 2>&1
eval_tap $? 155 'GetPaymentOrderChargeStatus' test.out

#- 156 GetPlatformEntitlementConfig
$CLI_EXE \
    --sn platform \
    --op GetPlatformEntitlementConfig \
    --namespace $AB_NAMESPACE \
    --platform 'Playstation' \
    > test.out 2>&1
eval_tap $? 156 'GetPlatformEntitlementConfig' test.out

#- 157 UpdatePlatformEntitlementConfig
# body param: body
echo '{"allowedPlatformOrigins": ["Xbox", "Twitch", "Other"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePlatformEntitlementConfig \
    --namespace $AB_NAMESPACE \
    --platform 'Xbox' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 157 'UpdatePlatformEntitlementConfig' test.out

#- 158 GetPlatformWalletConfig
$CLI_EXE \
    --sn platform \
    --op GetPlatformWalletConfig \
    --namespace $AB_NAMESPACE \
    --platform 'IOS' \
    > test.out 2>&1
eval_tap $? 158 'GetPlatformWalletConfig' test.out

#- 159 UpdatePlatformWalletConfig
# body param: body
echo '{"allowedBalanceOrigins": ["Twitch", "Xbox", "System"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePlatformWalletConfig \
    --namespace $AB_NAMESPACE \
    --platform 'Playstation' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 159 'UpdatePlatformWalletConfig' test.out

#- 160 ResetPlatformWalletConfig
$CLI_EXE \
    --sn platform \
    --op ResetPlatformWalletConfig \
    --namespace $AB_NAMESPACE \
    --platform 'Nintendo' \
    > test.out 2>&1
eval_tap $? 160 'ResetPlatformWalletConfig' test.out

#- 161 GetRevocationConfig
$CLI_EXE \
    --sn platform \
    --op GetRevocationConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 161 'GetRevocationConfig' test.out

#- 162 UpdateRevocationConfig
# body param: body
echo '{"entitlement": {"consumable": {"enabled": true, "strategy": "REVOKE_OR_REPORT"}, "durable": {"enabled": true, "strategy": "REVOKE_OR_REPORT"}}, "wallet": {"enabled": false, "strategy": "REVOKE_OR_REPORT"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateRevocationConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 162 'UpdateRevocationConfig' test.out

#- 163 DeleteRevocationConfig
$CLI_EXE \
    --sn platform \
    --op DeleteRevocationConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 163 'DeleteRevocationConfig' test.out

#- 164 QueryRevocationHistories
$CLI_EXE \
    --sn platform \
    --op QueryRevocationHistories \
    --namespace $AB_NAMESPACE \
    --endTime 'VwajoTz4' \
    --limit '91' \
    --offset '15' \
    --source 'ORDER' \
    --startTime 'qGVewLB5' \
    --status 'FAIL' \
    --transactionId 'GdTfmcaf' \
    --userId 'HrU0KFbd' \
    > test.out 2>&1
eval_tap $? 164 'QueryRevocationHistories' test.out

#- 165 GetRevocationPluginConfig
$CLI_EXE \
    --sn platform \
    --op GetRevocationPluginConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 165 'GetRevocationPluginConfig' test.out

#- 166 UpdateRevocationPluginConfig
# body param: body
echo '{"appConfig": {"appName": "3Tk69oys"}, "customConfig": {"connectionType": "INSECURE", "grpcServerAddress": "YdBT3sK3"}, "extendType": "APP"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateRevocationPluginConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 166 'UpdateRevocationPluginConfig' test.out

#- 167 DeleteRevocationPluginConfig
$CLI_EXE \
    --sn platform \
    --op DeleteRevocationPluginConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 167 'DeleteRevocationPluginConfig' test.out

#- 168 UploadRevocationPluginConfigCert
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UploadRevocationPluginConfigCert \
    --namespace $AB_NAMESPACE \
    --upload file $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 168 'UploadRevocationPluginConfigCert' test.out

#- 169 CreateReward
# body param: body
echo '{"description": "J5vC3aZB", "eventTopic": "Y0btxGvz", "maxAwarded": 22, "maxAwardedPerUser": 4, "namespaceExpression": "mEtD5NN6", "rewardCode": "gYFC5BmW", "rewardConditions": [{"condition": "DNoy5zC2", "conditionName": "SjBPpV6T", "eventName": "JmzuSAaB", "rewardItems": [{"duration": 0, "endDate": "1984-07-02T00:00:00Z", "identityType": "ITEM_SKU", "itemId": "7CQTjU1U", "quantity": 80, "sku": "gjTqqFVL"}, {"duration": 49, "endDate": "1989-01-12T00:00:00Z", "identityType": "ITEM_ID", "itemId": "UncPPjMY", "quantity": 99, "sku": "WWe0CAoV"}, {"duration": 39, "endDate": "1978-02-25T00:00:00Z", "identityType": "ITEM_ID", "itemId": "Ofz9aTbP", "quantity": 49, "sku": "3Nc5TEoD"}]}, {"condition": "3Fj4CURX", "conditionName": "svZOJk6v", "eventName": "huQcPfML", "rewardItems": [{"duration": 73, "endDate": "1986-06-18T00:00:00Z", "identityType": "ITEM_ID", "itemId": "nfJ8sL4b", "quantity": 6, "sku": "4Iv07JyW"}, {"duration": 31, "endDate": "1972-07-19T00:00:00Z", "identityType": "ITEM_ID", "itemId": "ky71SsPK", "quantity": 33, "sku": "ssL1bstt"}, {"duration": 67, "endDate": "1978-03-05T00:00:00Z", "identityType": "ITEM_ID", "itemId": "R1JFmIdE", "quantity": 84, "sku": "jF4afYka"}]}, {"condition": "CfKPti0o", "conditionName": "6RG9LefT", "eventName": "N9pbdYGF", "rewardItems": [{"duration": 39, "endDate": "1983-03-21T00:00:00Z", "identityType": "ITEM_SKU", "itemId": "nTylfj94", "quantity": 57, "sku": "6TrfxRAd"}, {"duration": 60, "endDate": "1984-11-13T00:00:00Z", "identityType": "ITEM_SKU", "itemId": "DP55SSXy", "quantity": 4, "sku": "SFcFRHW6"}, {"duration": 42, "endDate": "1984-12-25T00:00:00Z", "identityType": "ITEM_SKU", "itemId": "T2xDL3kK", "quantity": 37, "sku": "mkHNbDen"}]}], "userIdExpression": "uyFqHTRz"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateReward \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 169 'CreateReward' test.out

#- 170 QueryRewards
$CLI_EXE \
    --sn platform \
    --op QueryRewards \
    --namespace $AB_NAMESPACE \
    --eventTopic '99Pszr39' \
    --limit '85' \
    --offset '91' \
    --sortBy '["rewardCode:asc", "namespace", "rewardCode:desc"]' \
    > test.out 2>&1
eval_tap $? 170 'QueryRewards' test.out

#- 171 ExportRewards
$CLI_EXE \
    --sn platform \
    --op ExportRewards \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 171 'ExportRewards' test.out

#- 172 ImportRewards
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op ImportRewards \
    --namespace $AB_NAMESPACE \
    --replaceExisting 'true' \
    --upload file $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 172 'ImportRewards' test.out

#- 173 GetReward
$CLI_EXE \
    --sn platform \
    --op GetReward \
    --namespace $AB_NAMESPACE \
    --rewardId 'vFlxAoW8' \
    > test.out 2>&1
eval_tap $? 173 'GetReward' test.out

#- 174 UpdateReward
# body param: body
echo '{"description": "Ld3vemIx", "eventTopic": "hKd5GInl", "maxAwarded": 65, "maxAwardedPerUser": 98, "namespaceExpression": "k5Jhbv9p", "rewardCode": "2DVRCUjw", "rewardConditions": [{"condition": "m4rY8YVG", "conditionName": "mz6l6bht", "eventName": "5XKvKjYC", "rewardItems": [{"duration": 80, "endDate": "1994-09-30T00:00:00Z", "identityType": "ITEM_SKU", "itemId": "IMlNYzI5", "quantity": 20, "sku": "PYLm3nfL"}, {"duration": 82, "endDate": "1982-11-03T00:00:00Z", "identityType": "ITEM_ID", "itemId": "oAs6VG7X", "quantity": 49, "sku": "9FI89EbV"}, {"duration": 89, "endDate": "1979-02-05T00:00:00Z", "identityType": "ITEM_SKU", "itemId": "KvvYut7d", "quantity": 74, "sku": "SlRPQ0ub"}]}, {"condition": "e9A50OsW", "conditionName": "ptaFr8pQ", "eventName": "MUmJk9vW", "rewardItems": [{"duration": 4, "endDate": "1983-03-11T00:00:00Z", "identityType": "ITEM_ID", "itemId": "g6Mg9qkF", "quantity": 68, "sku": "GE53vsg2"}, {"duration": 42, "endDate": "1983-06-02T00:00:00Z", "identityType": "ITEM_SKU", "itemId": "oSJvdwOi", "quantity": 46, "sku": "zSruKrEH"}, {"duration": 61, "endDate": "1994-12-31T00:00:00Z", "identityType": "ITEM_ID", "itemId": "f0nYDSc3", "quantity": 5, "sku": "0GyOfCmO"}]}, {"condition": "ACUZq7TH", "conditionName": "1iXGSuM0", "eventName": "HUvvWOZj", "rewardItems": [{"duration": 29, "endDate": "1975-07-23T00:00:00Z", "identityType": "ITEM_SKU", "itemId": "kyI0Phzs", "quantity": 73, "sku": "K1f2OfvQ"}, {"duration": 90, "endDate": "1986-11-06T00:00:00Z", "identityType": "ITEM_ID", "itemId": "DthcuHye", "quantity": 88, "sku": "paDa8DAS"}, {"duration": 87, "endDate": "1980-07-21T00:00:00Z", "identityType": "ITEM_SKU", "itemId": "8hPPocab", "quantity": 90, "sku": "QQNjfvXn"}]}], "userIdExpression": "QRuZbjre"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateReward \
    --namespace $AB_NAMESPACE \
    --rewardId 'M0lHJrtq' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 174 'UpdateReward' test.out

#- 175 DeleteReward
$CLI_EXE \
    --sn platform \
    --op DeleteReward \
    --namespace $AB_NAMESPACE \
    --rewardId 'eZcKzeBh' \
    > test.out 2>&1
eval_tap $? 175 'DeleteReward' test.out

#- 176 CheckEventCondition
# body param: body
echo '{"payload": {"RYpXuwWV": {}, "b8MHYDa6": {}, "Bb8qov1s": {}}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CheckEventCondition \
    --namespace $AB_NAMESPACE \
    --rewardId 'izAhF2rg' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 176 'CheckEventCondition' test.out

#- 177 DeleteRewardConditionRecord
# body param: body
echo '{"conditionName": "yRmmR8cK", "userId": "GjqW7M0L"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op DeleteRewardConditionRecord \
    --namespace $AB_NAMESPACE \
    --rewardId 'L2lMTTlM' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 177 'DeleteRewardConditionRecord' test.out

#- 178 QuerySections
$CLI_EXE \
    --sn platform \
    --op QuerySections \
    --namespace $AB_NAMESPACE \
    --end 'lwU66UFO' \
    --limit '98' \
    --offset '14' \
    --start 'YDo8lPrp' \
    --storeId '28FRQ5UN' \
    --viewId 'yd4S8Olc' \
    > test.out 2>&1
eval_tap $? 178 'QuerySections' test.out

#- 179 CreateSection
# body param: body
echo '{"active": false, "displayOrder": 1, "endDate": "1972-08-02T00:00:00Z", "ext": {"MPEd9Snf": {}, "Fq1Nygqn": {}, "0m7tC5Ji": {}}, "fixedPeriodRotationConfig": {"backfillType": "CUSTOM", "duration": 88, "itemCount": 20, "rule": "SEQUENCE"}, "items": [{"id": "zY4NvvS1", "sku": "YdUQw67E"}, {"id": "zTZBTzLx", "sku": "KX4Jws5e"}, {"id": "3dlylndT", "sku": "jqLmiSfT"}], "localizations": {"7A1SU8ta": {"description": "HuwcaS9r", "localExt": {"eF5AcrgJ": {}, "vv98qfjr": {}, "7d10OClz": {}}, "longDescription": "xUQq0VNf", "title": "ZBVBtKh2"}, "yL1d2V3J": {"description": "lzOmUlmX", "localExt": {"HkimYiyA": {}, "joGzfv2l": {}, "paTt2p3w": {}}, "longDescription": "dv9lb3hN", "title": "gdKetL5G"}, "8dkkbM0J": {"description": "rTEb4pz3", "localExt": {"cSWGryeR": {}, "orzi10xh": {}, "FcXiAAj2": {}}, "longDescription": "KPvjC13c", "title": "kmzeMROU"}}, "name": "kMIdZmXv", "rotationType": "NONE", "startDate": "1990-09-24T00:00:00Z", "viewId": "O1nrQQGf"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateSection \
    --namespace $AB_NAMESPACE \
    --storeId '0zNfDkJl' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 179 'CreateSection' test.out

#- 180 PurgeExpiredSection
$CLI_EXE \
    --sn platform \
    --op PurgeExpiredSection \
    --namespace $AB_NAMESPACE \
    --storeId 'PNC2Js8e' \
    > test.out 2>&1
eval_tap $? 180 'PurgeExpiredSection' test.out

#- 181 GetSection
$CLI_EXE \
    --sn platform \
    --op GetSection \
    --namespace $AB_NAMESPACE \
    --sectionId '6UBVTAnw' \
    --storeId 'bDIDpqli' \
    > test.out 2>&1
eval_tap $? 181 'GetSection' test.out

#- 182 UpdateSection
# body param: body
echo '{"active": false, "displayOrder": 33, "endDate": "1984-06-02T00:00:00Z", "ext": {"jTE8XcHJ": {}, "x3M6DBjr": {}, "dRUs9X1m": {}}, "fixedPeriodRotationConfig": {"backfillType": "NONE", "duration": 27, "itemCount": 98, "rule": "SEQUENCE"}, "items": [{"id": "2w2vZ8LS", "sku": "Kz00PZPm"}, {"id": "dVoBChVK", "sku": "5SDGMRVo"}, {"id": "24uX9xwv", "sku": "MuGWGsBo"}], "localizations": {"Kd6eR0RB": {"description": "GW6k1bU1", "localExt": {"9ZH5kZaY": {}, "U4q3EjwN": {}, "izAPp3t4": {}}, "longDescription": "NalA6GVa", "title": "BloAzJA2"}, "XWiQ9qS4": {"description": "8RjSPett", "localExt": {"NELzo3IS": {}, "WVyXblQk": {}, "mlNL4PjY": {}}, "longDescription": "Hso9P3pX", "title": "NSybkODo"}, "DDILEBE9": {"description": "qq8vm8zZ", "localExt": {"lAV1DCWh": {}, "0I8iY5ft": {}, "Ic2jLFDr": {}}, "longDescription": "kHbXCvwN", "title": "9ODLj9Wi"}}, "name": "ZISzg2dd", "rotationType": "CUSTOM", "startDate": "1999-06-11T00:00:00Z", "viewId": "GDTkcSeC"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateSection \
    --namespace $AB_NAMESPACE \
    --sectionId 'JWqxnC6O' \
    --storeId 'W7kU2FRk' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 182 'UpdateSection' test.out

#- 183 DeleteSection
$CLI_EXE \
    --sn platform \
    --op DeleteSection \
    --namespace $AB_NAMESPACE \
    --sectionId 'gysQs0SN' \
    --storeId 'zFiRjJRS' \
    > test.out 2>&1
eval_tap $? 183 'DeleteSection' test.out

#- 184 ListStores
$CLI_EXE \
    --sn platform \
    --op ListStores \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 184 'ListStores' test.out

#- 185 CreateStore
# body param: body
echo '{"defaultLanguage": "IkMao6hH", "defaultRegion": "xCQlrBZE", "description": "JCG7zYjc", "supportedLanguages": ["Qb7dHCcv", "tqg70zPP", "tHvprow5"], "supportedRegions": ["mSWexzGh", "oFbJ10qN", "MPdJ7pXF"], "title": "z0WvJz8x"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateStore \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 185 'CreateStore' test.out

#- 186 GetCatalogDefinition
$CLI_EXE \
    --sn platform \
    --op GetCatalogDefinition \
    --namespace $AB_NAMESPACE \
    --catalogType 'ITEM' \
    > test.out 2>&1
eval_tap $? 186 'GetCatalogDefinition' test.out

#- 187 DownloadCSVTemplates
$CLI_EXE \
    --sn platform \
    --op DownloadCSVTemplates \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 187 'DownloadCSVTemplates' test.out

#- 188 ExportStoreByCSV
# body param: body
echo '{"catalogType": "CATEGORY", "fieldsToBeIncluded": ["iWK4GQ3o", "duUW0s8k", "ait3gAEB"], "idsToBeExported": ["2pk75VPP", "CKeWS1V4", "icDwjpnE"], "storeId": "KFlDVwCY"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ExportStoreByCSV \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 188 'ExportStoreByCSV' test.out

#- 189 ImportStore
eval_tap 0 189 'ImportStore # SKIP deprecated' test.out

#- 190 GetPublishedStore
$CLI_EXE \
    --sn platform \
    --op GetPublishedStore \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 190 'GetPublishedStore' test.out

#- 191 DeletePublishedStore
$CLI_EXE \
    --sn platform \
    --op DeletePublishedStore \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 191 'DeletePublishedStore' test.out

#- 192 GetPublishedStoreBackup
$CLI_EXE \
    --sn platform \
    --op GetPublishedStoreBackup \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 192 'GetPublishedStoreBackup' test.out

#- 193 RollbackPublishedStore
$CLI_EXE \
    --sn platform \
    --op RollbackPublishedStore \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 193 'RollbackPublishedStore' test.out

#- 194 GetStore
$CLI_EXE \
    --sn platform \
    --op GetStore \
    --namespace $AB_NAMESPACE \
    --storeId 'c15R76L7' \
    > test.out 2>&1
eval_tap $? 194 'GetStore' test.out

#- 195 UpdateStore
# body param: body
echo '{"defaultLanguage": "daAS8yJk", "defaultRegion": "lF8JAs7l", "description": "bWckhNkA", "supportedLanguages": ["hcMntXFP", "5dd2woRz", "ERyAOAvF"], "supportedRegions": ["erBNtnIq", "wvNpWVX9", "WlGblycF"], "title": "1ZsaEXfs"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateStore \
    --namespace $AB_NAMESPACE \
    --storeId 'wBJKiNWl' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 195 'UpdateStore' test.out

#- 196 DeleteStore
$CLI_EXE \
    --sn platform \
    --op DeleteStore \
    --namespace $AB_NAMESPACE \
    --storeId 'unOgQrjB' \
    > test.out 2>&1
eval_tap $? 196 'DeleteStore' test.out

#- 197 QueryChanges
$CLI_EXE \
    --sn platform \
    --op QueryChanges \
    --namespace $AB_NAMESPACE \
    --storeId 'WNpB8ghF' \
    --action 'UPDATE' \
    --itemSku '1dBNNckZ' \
    --itemType 'BUNDLE' \
    --limit '98' \
    --offset '84' \
    --selected 'false' \
    --sortBy '["createdAt:desc", "updatedAt"]' \
    --status 'UNPUBLISHED' \
    --type 'STORE' \
    --updatedAtEnd 'cjvxdE5g' \
    --updatedAtStart 'QhnS7xXf' \
    --withTotal 'false' \
    > test.out 2>&1
eval_tap $? 197 'QueryChanges' test.out

#- 198 PublishAll
$CLI_EXE \
    --sn platform \
    --op PublishAll \
    --namespace $AB_NAMESPACE \
    --storeId 'YCOiUVuj' \
    > test.out 2>&1
eval_tap $? 198 'PublishAll' test.out

#- 199 PublishSelected
$CLI_EXE \
    --sn platform \
    --op PublishSelected \
    --namespace $AB_NAMESPACE \
    --storeId 'PY2IaUIc' \
    > test.out 2>&1
eval_tap $? 199 'PublishSelected' test.out

#- 200 SelectAllRecords
$CLI_EXE \
    --sn platform \
    --op SelectAllRecords \
    --namespace $AB_NAMESPACE \
    --storeId 'OY2VQRHi' \
    > test.out 2>&1
eval_tap $? 200 'SelectAllRecords' test.out

#- 201 SelectAllRecordsByCriteria
$CLI_EXE \
    --sn platform \
    --op SelectAllRecordsByCriteria \
    --namespace $AB_NAMESPACE \
    --storeId 'XY4VRfdI' \
    --action 'CREATE' \
    --itemSku 'faBzUQo9' \
    --itemType 'APP' \
    --selected 'true' \
    --type 'SECTION' \
    --updatedAtEnd 'nhVmfBZa' \
    --updatedAtStart 'eo2UO5VL' \
    > test.out 2>&1
eval_tap $? 201 'SelectAllRecordsByCriteria' test.out

#- 202 GetStatistic
$CLI_EXE \
    --sn platform \
    --op GetStatistic \
    --namespace $AB_NAMESPACE \
    --storeId 'dhsmeDl0' \
    --action 'UPDATE' \
    --itemSku 'D7AHj5cC' \
    --itemType 'COINS' \
    --type 'SECTION' \
    --updatedAtEnd 'bTJzHzLS' \
    --updatedAtStart 'MDGlhr3W' \
    > test.out 2>&1
eval_tap $? 202 'GetStatistic' test.out

#- 203 UnselectAllRecords
$CLI_EXE \
    --sn platform \
    --op UnselectAllRecords \
    --namespace $AB_NAMESPACE \
    --storeId 'lt2W2a8Y' \
    > test.out 2>&1
eval_tap $? 203 'UnselectAllRecords' test.out

#- 204 SelectRecord
$CLI_EXE \
    --sn platform \
    --op SelectRecord \
    --changeId 'kyyQDmNR' \
    --namespace $AB_NAMESPACE \
    --storeId 'y9gyeYMH' \
    > test.out 2>&1
eval_tap $? 204 'SelectRecord' test.out

#- 205 UnselectRecord
$CLI_EXE \
    --sn platform \
    --op UnselectRecord \
    --changeId '8SeoM6DM' \
    --namespace $AB_NAMESPACE \
    --storeId 't8Q3BxSB' \
    > test.out 2>&1
eval_tap $? 205 'UnselectRecord' test.out

#- 206 CloneStore
$CLI_EXE \
    --sn platform \
    --op CloneStore \
    --namespace $AB_NAMESPACE \
    --storeId 'X4J4Q6BU' \
    --targetStoreId 'Fo0diSf6' \
    > test.out 2>&1
eval_tap $? 206 'CloneStore' test.out

#- 207 ExportStore
eval_tap 0 207 'ExportStore # SKIP deprecated' test.out

#- 208 QueryImportHistory
$CLI_EXE \
    --sn platform \
    --op QueryImportHistory \
    --namespace $AB_NAMESPACE \
    --storeId 'rRa8Yj0z' \
    --end '9AdayQ8C' \
    --limit '76' \
    --offset '37' \
    --sortBy '3cBhlM3S' \
    --start 'N1FQCbkJ' \
    --success 'false' \
    > test.out 2>&1
eval_tap $? 208 'QueryImportHistory' test.out

#- 209 ImportStoreByCSV
# form data upload: category
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
# form data upload: display
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
# form data upload: item
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
# form data upload: section
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op ImportStoreByCSV \
    --namespace $AB_NAMESPACE \
    --storeId 'oXZKHp1t' \
    --upload category $TEMP_FILE_UPLOAD \
    --upload display $TEMP_FILE_UPLOAD \
    --upload item $TEMP_FILE_UPLOAD \
    --notes 'iLPTeKJY' \
    --upload section $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 209 'ImportStoreByCSV' test.out

#- 210 QuerySubscriptions
$CLI_EXE \
    --sn platform \
    --op QuerySubscriptions \
    --namespace $AB_NAMESPACE \
    --chargeStatus 'SETUP' \
    --itemId '1kX3hIQg' \
    --limit '11' \
    --offset '100' \
    --sku 'REZlT9kv' \
    --status 'CANCELLED' \
    --subscribedBy 'PLATFORM' \
    --userId 'pG6kB9MD' \
    > test.out 2>&1
eval_tap $? 210 'QuerySubscriptions' test.out

#- 211 RecurringChargeSubscription
$CLI_EXE \
    --sn platform \
    --op RecurringChargeSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'QBOl6acK' \
    > test.out 2>&1
eval_tap $? 211 'RecurringChargeSubscription' test.out

#- 212 GetTicketDynamic
$CLI_EXE \
    --sn platform \
    --op GetTicketDynamic \
    --boothName 'gS1K0MKz' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 212 'GetTicketDynamic' test.out

#- 213 DecreaseTicketSale
# body param: body
echo '{"orderNo": "SK7Z0M7b"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op DecreaseTicketSale \
    --boothName 'ckf1E7iu' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 213 'DecreaseTicketSale' test.out

#- 214 GetTicketBoothID
$CLI_EXE \
    --sn platform \
    --op GetTicketBoothID \
    --boothName 'PwOQbAua' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 214 'GetTicketBoothID' test.out

#- 215 IncreaseTicketSale
# body param: body
echo '{"count": 54, "orderNo": "tC2PPodE"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op IncreaseTicketSale \
    --boothName 'LJT7sw2J' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 215 'IncreaseTicketSale' test.out

#- 216 Commit
# body param: body
echo '{"actions": [{"operations": [{"creditPayload": {"balanceOrigin": "Epic", "count": 89, "currencyCode": "0wkuCvlK", "expireAt": "1980-10-28T00:00:00Z"}, "debitPayload": {"count": 47, "currencyCode": "Cq1pL0zC", "walletPlatform": "Epic"}, "fulFillItemPayload": {"count": 23, "entitlementCollectionId": "aRWB3zUa", "entitlementOrigin": "Playstation", "itemIdentity": "vdpOa4oM", "itemIdentityType": "ITEM_ID"}, "revokeEntitlementPayload": {"count": 70, "entitlementId": "HwggDHNE"}, "type": "DEBIT_WALLET"}, {"creditPayload": {"balanceOrigin": "IOS", "count": 81, "currencyCode": "6BuIVhOz", "expireAt": "1989-04-03T00:00:00Z"}, "debitPayload": {"count": 63, "currencyCode": "uSeWnmFs", "walletPlatform": "IOS"}, "fulFillItemPayload": {"count": 8, "entitlementCollectionId": "w9AjySV2", "entitlementOrigin": "Twitch", "itemIdentity": "tlexgXvn", "itemIdentityType": "ITEM_ID"}, "revokeEntitlementPayload": {"count": 31, "entitlementId": "7krtl2W2"}, "type": "FULFILL_ITEM"}, {"creditPayload": {"balanceOrigin": "Twitch", "count": 43, "currencyCode": "lZpKe4ee", "expireAt": "1981-07-09T00:00:00Z"}, "debitPayload": {"count": 53, "currencyCode": "ZyD8Roaw", "walletPlatform": "Oculus"}, "fulFillItemPayload": {"count": 12, "entitlementCollectionId": "hqcIaNEz", "entitlementOrigin": "Xbox", "itemIdentity": "98vjy3jo", "itemIdentityType": "ITEM_ID"}, "revokeEntitlementPayload": {"count": 12, "entitlementId": "epVzd1kb"}, "type": "CREDIT_WALLET"}], "userId": "vgIzFllg"}, {"operations": [{"creditPayload": {"balanceOrigin": "GooglePlay", "count": 26, "currencyCode": "LFbpj4eN", "expireAt": "1989-07-06T00:00:00Z"}, "debitPayload": {"count": 48, "currencyCode": "EwO9oXtf", "walletPlatform": "GooglePlay"}, "fulFillItemPayload": {"count": 2, "entitlementCollectionId": "6JeXxeea", "entitlementOrigin": "Twitch", "itemIdentity": "yXWtGJjM", "itemIdentityType": "ITEM_SKU"}, "revokeEntitlementPayload": {"count": 45, "entitlementId": "jznuBcz2"}, "type": "CREDIT_WALLET"}, {"creditPayload": {"balanceOrigin": "Xbox", "count": 66, "currencyCode": "ToWH0gVR", "expireAt": "1995-02-27T00:00:00Z"}, "debitPayload": {"count": 48, "currencyCode": "cZyxCiNU", "walletPlatform": "Playstation"}, "fulFillItemPayload": {"count": 69, "entitlementCollectionId": "XZIj6qcZ", "entitlementOrigin": "Playstation", "itemIdentity": "JViIXBP3", "itemIdentityType": "ITEM_SKU"}, "revokeEntitlementPayload": {"count": 1, "entitlementId": "QaeblDTQ"}, "type": "DEBIT_WALLET"}, {"creditPayload": {"balanceOrigin": "Other", "count": 0, "currencyCode": "D9oBS50v", "expireAt": "1980-10-06T00:00:00Z"}, "debitPayload": {"count": 27, "currencyCode": "hzW83NBs", "walletPlatform": "Steam"}, "fulFillItemPayload": {"count": 56, "entitlementCollectionId": "11ZdDtlX", "entitlementOrigin": "GooglePlay", "itemIdentity": "VP8ZGBm1", "itemIdentityType": "ITEM_SKU"}, "revokeEntitlementPayload": {"count": 27, "entitlementId": "OwX9RyXP"}, "type": "FULFILL_ITEM"}], "userId": "Y1rMQjUL"}, {"operations": [{"creditPayload": {"balanceOrigin": "Steam", "count": 78, "currencyCode": "VII4tBmo", "expireAt": "1974-05-23T00:00:00Z"}, "debitPayload": {"count": 5, "currencyCode": "8Mbz7g3R", "walletPlatform": "Nintendo"}, "fulFillItemPayload": {"count": 59, "entitlementCollectionId": "3vjgBHyr", "entitlementOrigin": "Oculus", "itemIdentity": "H3kKhF4V", "itemIdentityType": "ITEM_SKU"}, "revokeEntitlementPayload": {"count": 27, "entitlementId": "V13ri3Nm"}, "type": "REVOKE_ENTITLEMENT"}, {"creditPayload": {"balanceOrigin": "Xbox", "count": 21, "currencyCode": "HCZrWdAM", "expireAt": "1974-01-27T00:00:00Z"}, "debitPayload": {"count": 69, "currencyCode": "CAWzcL91", "walletPlatform": "Other"}, "fulFillItemPayload": {"count": 89, "entitlementCollectionId": "MG88sF0R", "entitlementOrigin": "Twitch", "itemIdentity": "BMuqPbcm", "itemIdentityType": "ITEM_SKU"}, "revokeEntitlementPayload": {"count": 39, "entitlementId": "zJyXxCZp"}, "type": "CREDIT_WALLET"}, {"creditPayload": {"balanceOrigin": "System", "count": 65, "currencyCode": "VWF5CKFS", "expireAt": "1996-01-03T00:00:00Z"}, "debitPayload": {"count": 10, "currencyCode": "XblopmA9", "walletPlatform": "Xbox"}, "fulFillItemPayload": {"count": 89, "entitlementCollectionId": "awO7chRN", "entitlementOrigin": "Twitch", "itemIdentity": "4sghdAkl", "itemIdentityType": "ITEM_ID"}, "revokeEntitlementPayload": {"count": 1, "entitlementId": "uT3tJNbO"}, "type": "FULFILL_ITEM"}], "userId": "YJc4Ichd"}], "metadata": {"kBdQ2THz": {}, "OTcwV0h3": {}, "LYhAIs8x": {}}, "needPreCheck": true, "transactionId": "HgO1RHN3", "type": "A1NoWxWs"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op Commit \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 216 'Commit' test.out

#- 217 GetTradeHistoryByCriteria
$CLI_EXE \
    --sn platform \
    --op GetTradeHistoryByCriteria \
    --namespace $AB_NAMESPACE \
    --limit '21' \
    --offset '95' \
    --status 'SUCCESS' \
    --type 'TQ7Sc3xl' \
    --userId 'w1oTJOYP' \
    > test.out 2>&1
eval_tap $? 217 'GetTradeHistoryByCriteria' test.out

#- 218 GetTradeHistoryByTransactionId
$CLI_EXE \
    --sn platform \
    --op GetTradeHistoryByTransactionId \
    --namespace $AB_NAMESPACE \
    --transactionId 'JNnzBDqi' \
    > test.out 2>&1
eval_tap $? 218 'GetTradeHistoryByTransactionId' test.out

#- 219 UnlockSteamUserAchievement
# body param: body
echo '{"achievements": [{"id": "ksqIMHf6", "value": 53}, {"id": "wxGCHyvy", "value": 78}, {"id": "9L1soON9", "value": 27}], "steamUserId": "NuUWvMVs"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UnlockSteamUserAchievement \
    --namespace $AB_NAMESPACE \
    --userId 'BiI2YL0C' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 219 'UnlockSteamUserAchievement' test.out

#- 220 GetXblUserAchievements
$CLI_EXE \
    --sn platform \
    --op GetXblUserAchievements \
    --namespace $AB_NAMESPACE \
    --userId 'zwItjjuc' \
    --xboxUserId 'JPjqlWPy' \
    > test.out 2>&1
eval_tap $? 220 'GetXblUserAchievements' test.out

#- 221 UpdateXblUserAchievement
# body param: body
echo '{"achievements": [{"id": "zMA1401H", "percentComplete": 54}, {"id": "U6hh18LF", "percentComplete": 38}, {"id": "hPmwVOEN", "percentComplete": 11}], "serviceConfigId": "AOQY6ypa", "titleId": "QSb2cq2p", "xboxUserId": "DYoV7tEr"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXblUserAchievement \
    --namespace $AB_NAMESPACE \
    --userId 'HvhF0Xq6' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 221 'UpdateXblUserAchievement' test.out

#- 222 AnonymizeCampaign
$CLI_EXE \
    --sn platform \
    --op AnonymizeCampaign \
    --namespace $AB_NAMESPACE \
    --userId 'tpAAIXDD' \
    > test.out 2>&1
eval_tap $? 222 'AnonymizeCampaign' test.out

#- 223 AnonymizeEntitlement
$CLI_EXE \
    --sn platform \
    --op AnonymizeEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'g7XiS7MQ' \
    > test.out 2>&1
eval_tap $? 223 'AnonymizeEntitlement' test.out

#- 224 AnonymizeFulfillment
$CLI_EXE \
    --sn platform \
    --op AnonymizeFulfillment \
    --namespace $AB_NAMESPACE \
    --userId 'shfD7jCk' \
    > test.out 2>&1
eval_tap $? 224 'AnonymizeFulfillment' test.out

#- 225 AnonymizeIntegration
$CLI_EXE \
    --sn platform \
    --op AnonymizeIntegration \
    --namespace $AB_NAMESPACE \
    --userId 'wOl6UjQC' \
    > test.out 2>&1
eval_tap $? 225 'AnonymizeIntegration' test.out

#- 226 AnonymizeOrder
$CLI_EXE \
    --sn platform \
    --op AnonymizeOrder \
    --namespace $AB_NAMESPACE \
    --userId 'g8fEqRIQ' \
    > test.out 2>&1
eval_tap $? 226 'AnonymizeOrder' test.out

#- 227 AnonymizePayment
$CLI_EXE \
    --sn platform \
    --op AnonymizePayment \
    --namespace $AB_NAMESPACE \
    --userId 'pfgHh0Yf' \
    > test.out 2>&1
eval_tap $? 227 'AnonymizePayment' test.out

#- 228 AnonymizeRevocation
$CLI_EXE \
    --sn platform \
    --op AnonymizeRevocation \
    --namespace $AB_NAMESPACE \
    --userId 'nnzWX6gD' \
    > test.out 2>&1
eval_tap $? 228 'AnonymizeRevocation' test.out

#- 229 AnonymizeSubscription
$CLI_EXE \
    --sn platform \
    --op AnonymizeSubscription \
    --namespace $AB_NAMESPACE \
    --userId '7DOjkr85' \
    > test.out 2>&1
eval_tap $? 229 'AnonymizeSubscription' test.out

#- 230 AnonymizeWallet
$CLI_EXE \
    --sn platform \
    --op AnonymizeWallet \
    --namespace $AB_NAMESPACE \
    --userId 'INu0zlCC' \
    > test.out 2>&1
eval_tap $? 230 'AnonymizeWallet' test.out

#- 231 GetUserDLCByPlatform
$CLI_EXE \
    --sn platform \
    --op GetUserDLCByPlatform \
    --namespace $AB_NAMESPACE \
    --userId 'B61yqyry' \
    --type 'STEAM' \
    > test.out 2>&1
eval_tap $? 231 'GetUserDLCByPlatform' test.out

#- 232 GetUserDLC
$CLI_EXE \
    --sn platform \
    --op GetUserDLC \
    --namespace $AB_NAMESPACE \
    --userId 'GGEbFzDv' \
    --type 'XBOX' \
    > test.out 2>&1
eval_tap $? 232 'GetUserDLC' test.out

#- 233 QueryUserEntitlements
$CLI_EXE \
    --sn platform \
    --op QueryUserEntitlements \
    --namespace $AB_NAMESPACE \
    --userId 'nUitRV7W' \
    --activeOnly 'true' \
    --appType 'SOFTWARE' \
    --collectionId 'QnhWyBmy' \
    --entitlementClazz 'OPTIONBOX' \
    --entitlementName 'XBf9j5tZ' \
    --features '["GRAHYLlV", "6h4zeGvL", "mCyECfbK"]' \
    --fuzzyMatchName 'false' \
    --itemId '["fAJjgsuJ", "lTlBwP1b", "UQTtgItr"]' \
    --limit '62' \
    --offset '67' \
    --origin 'Oculus' \
    > test.out 2>&1
eval_tap $? 233 'QueryUserEntitlements' test.out

#- 234 GrantUserEntitlement
# body param: body
echo '[{"collectionId": "N4owlZVB", "endDate": "1997-08-10T00:00:00Z", "grantedCode": "w5j9VAC0", "itemId": "yolcE4vo", "itemNamespace": "b6U3ONtK", "language": "mli-pN", "origin": "IOS", "quantity": 79, "region": "dznAU2OL", "source": "REDEEM_CODE", "startDate": "1988-11-21T00:00:00Z", "storeId": "M5dUkJo8"}, {"collectionId": "D5tmOtLC", "endDate": "1992-02-17T00:00:00Z", "grantedCode": "ikAMAm1L", "itemId": "SqJ4R9Ia", "itemNamespace": "zYOHc2mg", "language": "rT_XvWP_847", "origin": "Epic", "quantity": 79, "region": "Mc66QURD", "source": "PROMOTION", "startDate": "1989-03-24T00:00:00Z", "storeId": "lnhefsTi"}, {"collectionId": "1ynjElvG", "endDate": "1978-09-19T00:00:00Z", "grantedCode": "pA0Q1OJA", "itemId": "LU0FoKtb", "itemNamespace": "jzUQYvSj", "language": "mh", "origin": "Playstation", "quantity": 41, "region": "UNXBWK5B", "source": "GIFT", "startDate": "1979-10-25T00:00:00Z", "storeId": "DPXnrgwU"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op GrantUserEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'rQI64kUo' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 234 'GrantUserEntitlement' test.out

#- 235 GetUserAppEntitlementByAppId
$CLI_EXE \
    --sn platform \
    --op GetUserAppEntitlementByAppId \
    --namespace $AB_NAMESPACE \
    --userId 'qttf6L0g' \
    --activeOnly 'true' \
    --appId 'myS3ukrx' \
    > test.out 2>&1
eval_tap $? 235 'GetUserAppEntitlementByAppId' test.out

#- 236 QueryUserEntitlementsByAppType
$CLI_EXE \
    --sn platform \
    --op QueryUserEntitlementsByAppType \
    --namespace $AB_NAMESPACE \
    --userId 'HWOf5izJ' \
    --activeOnly 'true' \
    --limit '25' \
    --offset '87' \
    --appType 'GAME' \
    > test.out 2>&1
eval_tap $? 236 'QueryUserEntitlementsByAppType' test.out

#- 237 GetUserEntitlementByItemId
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'pJMnGJW8' \
    --activeOnly 'false' \
    --entitlementClazz 'MEDIA' \
    --platform 'AVajhLf7' \
    --itemId 'jbdF4z93' \
    > test.out 2>&1
eval_tap $? 237 'GetUserEntitlementByItemId' test.out

#- 238 GetUserActiveEntitlementsByItemIds
$CLI_EXE \
    --sn platform \
    --op GetUserActiveEntitlementsByItemIds \
    --namespace $AB_NAMESPACE \
    --userId 'CxuxKodI' \
    --ids '["RzX7sBe4", "IDmr7xWm", "wdnEm45s"]' \
    --platform '0TKYgRr7' \
    > test.out 2>&1
eval_tap $? 238 'GetUserActiveEntitlementsByItemIds' test.out

#- 239 GetUserEntitlementBySku
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementBySku \
    --namespace $AB_NAMESPACE \
    --userId 'XQiKmJVy' \
    --activeOnly 'true' \
    --entitlementClazz 'CODE' \
    --platform 'cPoXgWJc' \
    --sku 'oc9urTon' \
    > test.out 2>&1
eval_tap $? 239 'GetUserEntitlementBySku' test.out

#- 240 ExistsAnyUserActiveEntitlement
$CLI_EXE \
    --sn platform \
    --op ExistsAnyUserActiveEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'spdvakgO' \
    --appIds '["JusgFPhJ", "IGPGK6dc", "w9o6Y4ee"]' \
    --itemIds '["Qu7OBpfs", "OG1sVtQ5", "ovSP5v3U"]' \
    --platform 'TyR0HKYn' \
    --skus '["U8wwnKde", "RSyDN2mP", "FtKFGZ5P"]' \
    > test.out 2>&1
eval_tap $? 240 'ExistsAnyUserActiveEntitlement' test.out

#- 241 ExistsAnyUserActiveEntitlementByItemIds
$CLI_EXE \
    --sn platform \
    --op ExistsAnyUserActiveEntitlementByItemIds \
    --namespace $AB_NAMESPACE \
    --userId 'CpfLA4bc' \
    --platform 'nxJ4q6Pc' \
    --itemIds '["jzjPRC7C", "2jzAzQeL", "dohSEAK1"]' \
    > test.out 2>&1
eval_tap $? 241 'ExistsAnyUserActiveEntitlementByItemIds' test.out

#- 242 GetUserAppEntitlementOwnershipByAppId
$CLI_EXE \
    --sn platform \
    --op GetUserAppEntitlementOwnershipByAppId \
    --namespace $AB_NAMESPACE \
    --userId 'gEXzA75D' \
    --appId 'loAFxhRu' \
    > test.out 2>&1
eval_tap $? 242 'GetUserAppEntitlementOwnershipByAppId' test.out

#- 243 GetUserEntitlementOwnershipByItemId
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementOwnershipByItemId \
    --namespace $AB_NAMESPACE \
    --userId '6bihh9Ri' \
    --entitlementClazz 'LOOTBOX' \
    --platform 'fkZhvga8' \
    --itemId 'hWPLnwks' \
    > test.out 2>&1
eval_tap $? 243 'GetUserEntitlementOwnershipByItemId' test.out

#- 244 GetUserEntitlementOwnershipByItemIds
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementOwnershipByItemIds \
    --namespace $AB_NAMESPACE \
    --userId 'hYmNifmo' \
    --ids '["KiSX0Ocv", "lGCPPnZs", "rwnVhVsR"]' \
    --platform 'JfWpnwRM' \
    > test.out 2>&1
eval_tap $? 244 'GetUserEntitlementOwnershipByItemIds' test.out

#- 245 GetUserEntitlementOwnershipBySku
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementOwnershipBySku \
    --namespace $AB_NAMESPACE \
    --userId '3r1jVySZ' \
    --entitlementClazz 'CODE' \
    --platform 'Is6XjHJ0' \
    --sku 'IEuk4awc' \
    > test.out 2>&1
eval_tap $? 245 'GetUserEntitlementOwnershipBySku' test.out

#- 246 RevokeAllEntitlements
$CLI_EXE \
    --sn platform \
    --op RevokeAllEntitlements \
    --namespace $AB_NAMESPACE \
    --userId 'xeh57XFI' \
    > test.out 2>&1
eval_tap $? 246 'RevokeAllEntitlements' test.out

#- 247 RevokeUserEntitlements
$CLI_EXE \
    --sn platform \
    --op RevokeUserEntitlements \
    --namespace $AB_NAMESPACE \
    --userId 'OfZoWiT2' \
    --entitlementIds 'QkQA9AFR' \
    > test.out 2>&1
eval_tap $? 247 'RevokeUserEntitlements' test.out

#- 248 GetUserEntitlement
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlement \
    --entitlementId 'NSTwiWD4' \
    --namespace $AB_NAMESPACE \
    --userId 'iEruX569' \
    > test.out 2>&1
eval_tap $? 248 'GetUserEntitlement' test.out

#- 249 UpdateUserEntitlement
# body param: body
echo '{"collectionId": "Ojk8VjlE", "endDate": "1980-07-09T00:00:00Z", "nullFieldList": ["cmbzx5XD", "EUbQLGDr", "qPRRAEGl"], "origin": "Epic", "reason": "qs5JE3eB", "startDate": "1981-05-09T00:00:00Z", "status": "INACTIVE", "useCount": 29}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateUserEntitlement \
    --entitlementId 'UWLML5Ki' \
    --namespace $AB_NAMESPACE \
    --userId '45JuhhGk' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 249 'UpdateUserEntitlement' test.out

#- 250 ConsumeUserEntitlement
# body param: body
echo '{"options": ["YArShoqy", "W7Z45NWG", "wNmjabjr"], "platform": "Y50VfnWM", "requestId": "kyyWaFv0", "useCount": 24}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ConsumeUserEntitlement \
    --entitlementId 'uc51dlOq' \
    --namespace $AB_NAMESPACE \
    --userId '6pe2xkM7' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 250 'ConsumeUserEntitlement' test.out

#- 251 DisableUserEntitlement
$CLI_EXE \
    --sn platform \
    --op DisableUserEntitlement \
    --entitlementId 'TI77ah7r' \
    --namespace $AB_NAMESPACE \
    --userId '3FDprrzj' \
    > test.out 2>&1
eval_tap $? 251 'DisableUserEntitlement' test.out

#- 252 EnableUserEntitlement
$CLI_EXE \
    --sn platform \
    --op EnableUserEntitlement \
    --entitlementId 'o5sS6i7Q' \
    --namespace $AB_NAMESPACE \
    --userId 'wN9MzAfu' \
    > test.out 2>&1
eval_tap $? 252 'EnableUserEntitlement' test.out

#- 253 GetUserEntitlementHistories
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementHistories \
    --entitlementId 'G4ZmBvw0' \
    --namespace $AB_NAMESPACE \
    --userId 'chH4TtT5' \
    > test.out 2>&1
eval_tap $? 253 'GetUserEntitlementHistories' test.out

#- 254 RevokeUserEntitlement
$CLI_EXE \
    --sn platform \
    --op RevokeUserEntitlement \
    --entitlementId 'D6pH3YLQ' \
    --namespace $AB_NAMESPACE \
    --userId 'TP9fJotU' \
    > test.out 2>&1
eval_tap $? 254 'RevokeUserEntitlement' test.out

#- 255 RevokeUserEntitlementByUseCount
# body param: body
echo '{"reason": "EeEl5MMn", "useCount": 0}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RevokeUserEntitlementByUseCount \
    --entitlementId 'vyuKmoKD' \
    --namespace $AB_NAMESPACE \
    --userId 'UgzXg67T' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 255 'RevokeUserEntitlementByUseCount' test.out

#- 256 PreCheckRevokeUserEntitlementByUseCount
$CLI_EXE \
    --sn platform \
    --op PreCheckRevokeUserEntitlementByUseCount \
    --entitlementId 'MJLGtjDo' \
    --namespace $AB_NAMESPACE \
    --userId '8qNH4PcZ' \
    --quantity '74' \
    > test.out 2>&1
eval_tap $? 256 'PreCheckRevokeUserEntitlementByUseCount' test.out

#- 257 RevokeUseCount
eval_tap 0 257 'RevokeUseCount # SKIP deprecated' test.out

#- 258 SellUserEntitlement
# body param: body
echo '{"platform": "OEw7yVRr", "requestId": "22A1WOrR", "useCount": 55}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SellUserEntitlement \
    --entitlementId 'lX9pvEXT' \
    --namespace $AB_NAMESPACE \
    --userId 'INnTAGJv' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 258 'SellUserEntitlement' test.out

#- 259 FulfillItem
# body param: body
echo '{"duration": 57, "endDate": "1974-02-10T00:00:00Z", "entitlementCollectionId": "4htBs44Z", "entitlementOrigin": "Playstation", "itemId": "BQA4VWbE", "itemSku": "4Gkw49sq", "language": "KiWuY1Gx", "metadata": {"j9DJldOz": {}, "0rkBzbxl": {}, "5577oQmN": {}}, "order": {"currency": {"currencyCode": "Dl2Zp0Vx", "currencySymbol": "qyhJsLNa", "currencyType": "VIRTUAL", "decimals": 52, "namespace": "y2MSZcrG"}, "ext": {"7ek38SoB": {}, "rXJNS6vS": {}, "OGxcUpMf": {}}, "free": true}, "orderNo": "ly7vivV8", "origin": "Oculus", "overrideBundleItemQty": {"EgwfKgfk": 92, "i8GRvvsI": 12, "RNgg3KT2": 36}, "quantity": 95, "region": "bs5Ow6nI", "source": "ACHIEVEMENT", "startDate": "1983-11-17T00:00:00Z", "storeId": "wNN1YbII"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op FulfillItem \
    --namespace $AB_NAMESPACE \
    --userId 'nueiQLE0' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 259 'FulfillItem' test.out

#- 260 RedeemCode
# body param: body
echo '{"code": "xwik7Gah", "language": "Hg_792", "region": "qqM95T4S"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RedeemCode \
    --namespace $AB_NAMESPACE \
    --userId 'Nq647o1k' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 260 'RedeemCode' test.out

#- 261 PreCheckFulfillItem
# body param: body
echo '{"itemId": "Jmz8BX9V", "itemSku": "eXM75QQB", "quantity": 53}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PreCheckFulfillItem \
    --namespace $AB_NAMESPACE \
    --userId 'R9lD5V7Y' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 261 'PreCheckFulfillItem' test.out

#- 262 FulfillRewards
# body param: body
echo '{"entitlementCollectionId": "cBkkHLZ5", "entitlementOrigin": "Steam", "metadata": {"SLcMrfcX": {}, "mVCgTHQw": {}, "NIQPVppz": {}}, "origin": "Other", "rewards": [{"currency": {"currencyCode": "QYoQJvjz", "namespace": "ino0XYdG"}, "item": {"itemId": "kS4wsj0i", "itemSku": "TjqxHVFV", "itemType": "cUIRyGlI"}, "quantity": 48, "type": "CURRENCY"}, {"currency": {"currencyCode": "KclrID3J", "namespace": "zjBhR1Ss"}, "item": {"itemId": "D7JuBCQ3", "itemSku": "fOytAgEd", "itemType": "yxGxETgi"}, "quantity": 34, "type": "ITEM"}, {"currency": {"currencyCode": "q6T17XLJ", "namespace": "vAMgLFxC"}, "item": {"itemId": "l1QCwvFC", "itemSku": "XjJOZr2y", "itemType": "iShFdR3h"}, "quantity": 93, "type": "ITEM"}], "source": "GIFT", "transactionId": "x8XDh8HV"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op FulfillRewards \
    --namespace $AB_NAMESPACE \
    --userId 'sRckyeYL' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 262 'FulfillRewards' test.out

#- 263 QueryUserIAPOrders
$CLI_EXE \
    --sn platform \
    --op QueryUserIAPOrders \
    --namespace $AB_NAMESPACE \
    --userId 'qqGaYoFf' \
    --endTime 'gdH5oIiv' \
    --limit '45' \
    --offset '6' \
    --productId 'QFAqTWQD' \
    --startTime 'pSUpGn2t' \
    --status 'FULFILLED' \
    --type 'APPLE' \
    > test.out 2>&1
eval_tap $? 263 'QueryUserIAPOrders' test.out

#- 264 QueryAllUserIAPOrders
$CLI_EXE \
    --sn platform \
    --op QueryAllUserIAPOrders \
    --namespace $AB_NAMESPACE \
    --userId 'jcGGwEX7' \
    > test.out 2>&1
eval_tap $? 264 'QueryAllUserIAPOrders' test.out

#- 265 QueryUserIAPConsumeHistory
$CLI_EXE \
    --sn platform \
    --op QueryUserIAPConsumeHistory \
    --namespace $AB_NAMESPACE \
    --userId 'EdPEJQcS' \
    --endTime '9wwCDkhN' \
    --limit '46' \
    --offset '18' \
    --startTime '4ArbgYi4' \
    --status 'FAIL' \
    --type 'OCULUS' \
    > test.out 2>&1
eval_tap $? 265 'QueryUserIAPConsumeHistory' test.out

#- 266 MockFulfillIAPItem
# body param: body
echo '{"itemIdentityType": "ITEM_ID", "language": "gT_rfUf-364", "productId": "aT4fFsXw", "region": "Gz95d0mC", "transactionId": "yf5prAR2", "type": "STEAM"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op MockFulfillIAPItem \
    --namespace $AB_NAMESPACE \
    --userId 'luFSZu6d' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 266 'MockFulfillIAPItem' test.out

#- 267 QueryUserOrders
$CLI_EXE \
    --sn platform \
    --op QueryUserOrders \
    --namespace $AB_NAMESPACE \
    --userId '4LPh1gHe' \
    --itemId '936EKAfe' \
    --limit '26' \
    --offset '57' \
    --status 'REFUNDED' \
    > test.out 2>&1
eval_tap $? 267 'QueryUserOrders' test.out

#- 268 AdminCreateUserOrder
# body param: body
echo '{"currencyCode": "N2xd3iB4", "currencyNamespace": "JtM01Jml", "discountedPrice": 60, "entitlementPlatform": "Other", "ext": {"6fKbEtNM": {}, "qs2wSXVD": {}, "ZczAtwEZ": {}}, "itemId": "MXAJyyCc", "language": "rQHwfIfj", "options": {"skipPriceValidation": true}, "platform": "GooglePlay", "price": 12, "quantity": 77, "region": "ZRZAEdSV", "returnUrl": "cwGEKXDo", "sandbox": true, "sectionId": "2hZT4Cj0"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op AdminCreateUserOrder \
    --namespace $AB_NAMESPACE \
    --userId 'rvHIFrTa' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 268 'AdminCreateUserOrder' test.out

#- 269 CountOfPurchasedItem
$CLI_EXE \
    --sn platform \
    --op CountOfPurchasedItem \
    --namespace $AB_NAMESPACE \
    --userId 'yalE0DmI' \
    --itemId 'RLCtRIQ9' \
    > test.out 2>&1
eval_tap $? 269 'CountOfPurchasedItem' test.out

#- 270 GetUserOrder
$CLI_EXE \
    --sn platform \
    --op GetUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 't62tnKrg' \
    --userId 'XFoedPgp' \
    > test.out 2>&1
eval_tap $? 270 'GetUserOrder' test.out

#- 271 UpdateUserOrderStatus
# body param: body
echo '{"status": "CHARGEBACK_REVERSED", "statusReason": "BglSw6fy"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateUserOrderStatus \
    --namespace $AB_NAMESPACE \
    --orderNo 'Ii2oOMYY' \
    --userId 'QOGt5HF0' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 271 'UpdateUserOrderStatus' test.out

#- 272 FulfillUserOrder
$CLI_EXE \
    --sn platform \
    --op FulfillUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'UVGdcCgG' \
    --userId 'febx1Zkz' \
    > test.out 2>&1
eval_tap $? 272 'FulfillUserOrder' test.out

#- 273 GetUserOrderGrant
$CLI_EXE \
    --sn platform \
    --op GetUserOrderGrant \
    --namespace $AB_NAMESPACE \
    --orderNo 'VWQJqep1' \
    --userId 'yOQVNKPE' \
    > test.out 2>&1
eval_tap $? 273 'GetUserOrderGrant' test.out

#- 274 GetUserOrderHistories
$CLI_EXE \
    --sn platform \
    --op GetUserOrderHistories \
    --namespace $AB_NAMESPACE \
    --orderNo 'HcKuM7Fc' \
    --userId 'VLNuKaLc' \
    > test.out 2>&1
eval_tap $? 274 'GetUserOrderHistories' test.out

#- 275 ProcessUserOrderNotification
# body param: body
echo '{"additionalData": {"cardSummary": "eT5gHNeE"}, "authorisedTime": "1990-10-08T00:00:00Z", "chargebackReversedTime": "1978-05-12T00:00:00Z", "chargebackTime": "1993-09-13T00:00:00Z", "chargedTime": "1980-03-22T00:00:00Z", "createdTime": "1997-02-03T00:00:00Z", "currency": {"currencyCode": "6bl80N6N", "currencySymbol": "SLfKiviG", "currencyType": "REAL", "decimals": 32, "namespace": "kp1nhWKW"}, "customParameters": {"Xj0h4L96": {}, "hBgYjYAK": {}, "azVJn40d": {}}, "extOrderNo": "KskOwKF0", "extTxId": "5yeWM9z7", "extUserId": "y8s5WRcH", "issuedAt": "1989-12-15T00:00:00Z", "metadata": {"N7d1TnAs": "rDS5qDwc", "P8CAe1tG": "FzEaQd3c", "qzTVIWib": "COGXfmPB"}, "namespace": "yvJnghvM", "nonceStr": "CpXlmAv0", "paymentMethod": "ViK7n3Zt", "paymentMethodFee": 91, "paymentOrderNo": "pcRgNifG", "paymentProvider": "CHECKOUT", "paymentProviderFee": 6, "paymentStationUrl": "XS17fxGB", "price": 11, "refundedTime": "1989-01-08T00:00:00Z", "salesTax": 81, "sandbox": true, "sku": "tjdET3Vj", "status": "CHARGED", "statusReason": "qZdJjY3F", "subscriptionId": "aaEBDHM7", "subtotalPrice": 79, "targetNamespace": "5Vvkq2bU", "targetUserId": "HUNyGneQ", "tax": 93, "totalPrice": 25, "totalTax": 6, "txEndTime": "1977-10-15T00:00:00Z", "type": "KfXSVE2t", "userId": "U0C4ZZxA", "vat": 30}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ProcessUserOrderNotification \
    --namespace $AB_NAMESPACE \
    --orderNo 'jJbGS55e' \
    --userId 'ByKcubQ0' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 275 'ProcessUserOrderNotification' test.out

#- 276 DownloadUserOrderReceipt
$CLI_EXE \
    --sn platform \
    --op DownloadUserOrderReceipt \
    --namespace $AB_NAMESPACE \
    --orderNo '0a3V84Wt' \
    --userId '6LEIQmSr' \
    > test.out 2>&1
eval_tap $? 276 'DownloadUserOrderReceipt' test.out

#- 277 CreateUserPaymentOrder
# body param: body
echo '{"currencyCode": "apf3YsgP", "currencyNamespace": "bpijEuT8", "customParameters": {"aceK7BTT": {}, "4V5UjhwN": {}, "0aLw30bS": {}}, "description": "7hSd3bbO", "extOrderNo": "Lm0iOXFA", "extUserId": "ASpDTEOW", "itemType": "SEASON", "language": "wGoh", "metadata": {"xYpqa6Vr": "FCoGPgg2", "8mjbmJF7": "gGwMi63u", "64wCwNTU": "ngfIqhmy"}, "notifyUrl": "wyb7TH5y", "omitNotification": false, "platform": "2qa3Euha", "price": 16, "recurringPaymentOrderNo": "wJbLPW9k", "region": "acgNwIN9", "returnUrl": "Ju3L1ie2", "sandbox": true, "sku": "PDAxCYd2", "subscriptionId": "i4YRMF7N", "title": "o3z8M0GI"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateUserPaymentOrder \
    --namespace $AB_NAMESPACE \
    --userId 'ms8naBvO' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 277 'CreateUserPaymentOrder' test.out

#- 278 RefundUserPaymentOrder
# body param: body
echo '{"description": "lynfyLjo"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RefundUserPaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'BFdYG2HY' \
    --userId 'EPzueQqE' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 278 'RefundUserPaymentOrder' test.out

#- 279 ApplyUserRedemption
# body param: body
echo '{"code": "e9UYdVKI", "orderNo": "hSvnesT5"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ApplyUserRedemption \
    --namespace $AB_NAMESPACE \
    --userId 'IfkmKz2x' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 279 'ApplyUserRedemption' test.out

#- 280 DoRevocation
# body param: body
echo '{"meta": {"aOnwS90B": {}, "u2ELIqF8": {}, "8bXxljgC": {}}, "revokeEntries": [{"currency": {"balanceOrigin": "Twitch", "currencyCode": "qSRVXbZe", "namespace": "YiBJh0qQ"}, "entitlement": {"entitlementId": "TgsOostW"}, "item": {"entitlementOrigin": "Steam", "itemIdentity": "PofsPrMr", "itemIdentityType": "ITEM_ID", "origin": "Twitch"}, "quantity": 83, "type": "ITEM"}, {"currency": {"balanceOrigin": "Xbox", "currencyCode": "grznqI8x", "namespace": "Lx935S5C"}, "entitlement": {"entitlementId": "wR7WjXgi"}, "item": {"entitlementOrigin": "IOS", "itemIdentity": "wKv8hT9A", "itemIdentityType": "ITEM_SKU", "origin": "Xbox"}, "quantity": 78, "type": "ITEM"}, {"currency": {"balanceOrigin": "Other", "currencyCode": "15CnRuGU", "namespace": "KwxNoa6M"}, "entitlement": {"entitlementId": "Nf2qA0wo"}, "item": {"entitlementOrigin": "GooglePlay", "itemIdentity": "RiNC9Lru", "itemIdentityType": "ITEM_SKU", "origin": "IOS"}, "quantity": 27, "type": "CURRENCY"}], "source": "IAP", "transactionId": "oMjzgv7X"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op DoRevocation \
    --namespace $AB_NAMESPACE \
    --userId 'dYDWrgGG' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 280 'DoRevocation' test.out

#- 281 RegisterXblSessions
# body param: body
echo '{"gameSessionId": "ioHMQtzP", "payload": {"J5rZI2s3": {}, "SVWV8Ysy": {}, "3qZHLw1i": {}}, "scid": "6G3z6DMs", "sessionTemplateName": "UydWq9n9"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RegisterXblSessions \
    --namespace $AB_NAMESPACE \
    --userId 'jqfPUZsS' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 281 'RegisterXblSessions' test.out

#- 282 QueryUserSubscriptions
$CLI_EXE \
    --sn platform \
    --op QueryUserSubscriptions \
    --namespace $AB_NAMESPACE \
    --userId 'LtMRGQni' \
    --chargeStatus 'RECURRING_CHARGING' \
    --itemId 'Txvv1YcA' \
    --limit '82' \
    --offset '38' \
    --sku 'KLv3h1SG' \
    --status 'ACTIVE' \
    --subscribedBy 'PLATFORM' \
    > test.out 2>&1
eval_tap $? 282 'QueryUserSubscriptions' test.out

#- 283 GetUserSubscriptionActivities
$CLI_EXE \
    --sn platform \
    --op GetUserSubscriptionActivities \
    --namespace $AB_NAMESPACE \
    --userId '55TgdBGc' \
    --excludeSystem 'true' \
    --limit '71' \
    --offset '63' \
    --subscriptionId 'm3Yf9Vyh' \
    > test.out 2>&1
eval_tap $? 283 'GetUserSubscriptionActivities' test.out

#- 284 PlatformSubscribeSubscription
# body param: body
echo '{"grantDays": 10, "itemId": "hcNE3MAA", "language": "3vtaMhZA", "reason": "zzid1pvs", "region": "5sQlhAuo", "source": "MGy1r3Yl"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PlatformSubscribeSubscription \
    --namespace $AB_NAMESPACE \
    --userId '3RSQ2d1n' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 284 'PlatformSubscribeSubscription' test.out

#- 285 CheckUserSubscriptionSubscribableByItemId
$CLI_EXE \
    --sn platform \
    --op CheckUserSubscriptionSubscribableByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'iRJ6uo5S' \
    --itemId 'zxZyavcc' \
    > test.out 2>&1
eval_tap $? 285 'CheckUserSubscriptionSubscribableByItemId' test.out

#- 286 GetUserSubscription
$CLI_EXE \
    --sn platform \
    --op GetUserSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'I9zG7Uhx' \
    --userId 'cwS1a22C' \
    > test.out 2>&1
eval_tap $? 286 'GetUserSubscription' test.out

#- 287 DeleteUserSubscription
$CLI_EXE \
    --sn platform \
    --op DeleteUserSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId '93rJDLJs' \
    --userId 'aK6T1TVj' \
    > test.out 2>&1
eval_tap $? 287 'DeleteUserSubscription' test.out

#- 288 CancelSubscription
# body param: body
echo '{"immediate": false, "reason": "H8HJ4693"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CancelSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'mFXmukGY' \
    --userId 'w15LM64R' \
    --force 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 288 'CancelSubscription' test.out

#- 289 GrantDaysToSubscription
# body param: body
echo '{"grantDays": 76, "reason": "KSGj45Yh"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op GrantDaysToSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'yb4yG64U' \
    --userId 'ThmZxwjK' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 289 'GrantDaysToSubscription' test.out

#- 290 GetUserSubscriptionBillingHistories
$CLI_EXE \
    --sn platform \
    --op GetUserSubscriptionBillingHistories \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'mvGU5acU' \
    --userId '1Rxb4cWJ' \
    --excludeFree 'true' \
    --limit '11' \
    --offset '52' \
    > test.out 2>&1
eval_tap $? 290 'GetUserSubscriptionBillingHistories' test.out

#- 291 ProcessUserSubscriptionNotification
# body param: body
echo '{"additionalData": {"cardSummary": "qfPYu0Kf"}, "authorisedTime": "1981-01-12T00:00:00Z", "chargebackReversedTime": "1988-08-30T00:00:00Z", "chargebackTime": "1972-11-15T00:00:00Z", "chargedTime": "1976-02-05T00:00:00Z", "createdTime": "1987-12-14T00:00:00Z", "currency": {"currencyCode": "C472NC4C", "currencySymbol": "qtk4rTyr", "currencyType": "VIRTUAL", "decimals": 36, "namespace": "jSqJ0bUR"}, "customParameters": {"g8h6pYXL": {}, "bychPYby": {}, "0SsPKbdc": {}}, "extOrderNo": "9omryL8j", "extTxId": "OwvuDjPM", "extUserId": "jn7QNOh6", "issuedAt": "1990-01-20T00:00:00Z", "metadata": {"oDZquk2l": "bo60U0yP", "KyN9nWKe": "bEuAgYOp", "HcF9EBKP": "bb5SobFE"}, "namespace": "OGFfeVQy", "nonceStr": "JIhruwkF", "paymentMethod": "7IMh0LQL", "paymentMethodFee": 11, "paymentOrderNo": "l065zFyQ", "paymentProvider": "WALLET", "paymentProviderFee": 27, "paymentStationUrl": "Fy7uz6R3", "price": 61, "refundedTime": "1998-06-01T00:00:00Z", "salesTax": 6, "sandbox": true, "sku": "qsBh76Ta", "status": "CHARGE_FAILED", "statusReason": "Af3UGwJX", "subscriptionId": "PgNLsa8K", "subtotalPrice": 84, "targetNamespace": "UqT3ia1F", "targetUserId": "RP7BQ0V0", "tax": 85, "totalPrice": 38, "totalTax": 60, "txEndTime": "1987-08-01T00:00:00Z", "type": "S0mclS7b", "userId": "cRUURXl8", "vat": 71}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ProcessUserSubscriptionNotification \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'fFJTHhhZ' \
    --userId 'HieUjmw1' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 291 'ProcessUserSubscriptionNotification' test.out

#- 292 AcquireUserTicket
# body param: body
echo '{"count": 64, "orderNo": "7eik5J51"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op AcquireUserTicket \
    --boothName 'ecPcqG5N' \
    --namespace $AB_NAMESPACE \
    --userId 'NzPdVA8p' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 292 'AcquireUserTicket' test.out

#- 293 QueryUserCurrencyWallets
$CLI_EXE \
    --sn platform \
    --op QueryUserCurrencyWallets \
    --namespace $AB_NAMESPACE \
    --userId '5ctivC4E' \
    > test.out 2>&1
eval_tap $? 293 'QueryUserCurrencyWallets' test.out

#- 294 DebitUserWalletByCurrencyCode
# body param: body
echo '{"allowOverdraft": true, "amount": 66, "balanceOrigin": "Twitch", "balanceSource": "OTHER", "metadata": {"UvCSPJxp": {}, "pNctPP3e": {}, "gs9V8vKQ": {}}, "reason": "4x5LrxW2"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op DebitUserWalletByCurrencyCode \
    --currencyCode '5dPQlwM0' \
    --namespace $AB_NAMESPACE \
    --userId 'aWgbVEKy' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 294 'DebitUserWalletByCurrencyCode' test.out

#- 295 ListUserCurrencyTransactions
$CLI_EXE \
    --sn platform \
    --op ListUserCurrencyTransactions \
    --currencyCode 'uXAHgkQR' \
    --namespace $AB_NAMESPACE \
    --userId 'Rwgo3MMm' \
    --limit '62' \
    --offset '73' \
    > test.out 2>&1
eval_tap $? 295 'ListUserCurrencyTransactions' test.out

#- 296 CheckBalance
# body param: request
echo '{"amount": 41, "debitBalanceSource": "EXPIRATION", "metadata": {"bigWrXgG": {}, "K4uwaoMA": {}, "kEfOh8OV": {}}, "reason": "GrPVexI7", "walletPlatform": "GooglePlay"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CheckBalance \
    --currencyCode 'kpa1HaxK' \
    --namespace $AB_NAMESPACE \
    --userId 'bbjJnxzj' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 296 'CheckBalance' test.out

#- 297 CheckWallet
eval_tap 0 297 'CheckWallet # SKIP deprecated' test.out

#- 298 CreditUserWallet
# body param: body
echo '{"amount": 90, "expireAt": "1994-09-15T00:00:00Z", "metadata": {"N7bCMWok": {}, "1mSybUCc": {}, "yZ9OsFRQ": {}}, "origin": "GooglePlay", "reason": "w0gdvfY4", "source": "ACHIEVEMENT"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreditUserWallet \
    --currencyCode 'xWNpFAYl' \
    --namespace $AB_NAMESPACE \
    --userId 'raVPqOpI' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 298 'CreditUserWallet' test.out

#- 299 DebitByWalletPlatform
# body param: request
echo '{"amount": 50, "debitBalanceSource": "ORDER_REVOCATION", "metadata": {"nAGXnsOa": {}, "a233iaAa": {}, "8qpCLyfW": {}}, "reason": "F5ehO1qs", "walletPlatform": "Xbox"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op DebitByWalletPlatform \
    --currencyCode 'CAgQ8cub' \
    --namespace $AB_NAMESPACE \
    --userId 'LKBtPcgy' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 299 'DebitByWalletPlatform' test.out

#- 300 PayWithUserWallet
# body param: body
echo '{"amount": 11, "metadata": {"GO8tjKnD": {}, "cN6cy6ri": {}, "F0mQMvD9": {}}, "walletPlatform": "Playstation"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PayWithUserWallet \
    --currencyCode 'UlXddJdb' \
    --namespace $AB_NAMESPACE \
    --userId 'Y13a2dzH' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 300 'PayWithUserWallet' test.out

#- 301 GetUserWallet
eval_tap 0 301 'GetUserWallet # SKIP deprecated' test.out

#- 302 DebitUserWallet
eval_tap 0 302 'DebitUserWallet # SKIP deprecated' test.out

#- 303 DisableUserWallet
eval_tap 0 303 'DisableUserWallet # SKIP deprecated' test.out

#- 304 EnableUserWallet
eval_tap 0 304 'EnableUserWallet # SKIP deprecated' test.out

#- 305 ListUserWalletTransactions
eval_tap 0 305 'ListUserWalletTransactions # SKIP deprecated' test.out

#- 306 ListViews
$CLI_EXE \
    --sn platform \
    --op ListViews \
    --namespace $AB_NAMESPACE \
    --storeId 'pcnOrUi0' \
    > test.out 2>&1
eval_tap $? 306 'ListViews' test.out

#- 307 CreateView
# body param: body
echo '{"displayOrder": 2, "localizations": {"KWVGqlk4": {"description": "cGwcN5Ku", "localExt": {"V9y8sj2R": {}, "cdNP4HKP": {}, "zucSMtr5": {}}, "longDescription": "SiAGz5kd", "title": "IhcNEVjL"}, "ZU91CKqT": {"description": "MvlKBldJ", "localExt": {"MYLDwhbv": {}, "gGJ1ocW1": {}, "SxWsz4Vp": {}}, "longDescription": "7RZUXNEl", "title": "LajMlIio"}, "Z7IzvnCO": {"description": "I282VHTu", "localExt": {"pWCNlEEB": {}, "kSSU0gpP": {}, "PmXSIWNY": {}}, "longDescription": "Zq2YKXKG", "title": "teUC5TMT"}}, "name": "mTTcXAKm"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateView \
    --namespace $AB_NAMESPACE \
    --storeId 'Dpw2M2AH' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 307 'CreateView' test.out

#- 308 GetView
$CLI_EXE \
    --sn platform \
    --op GetView \
    --namespace $AB_NAMESPACE \
    --viewId 'bt5JtbJG' \
    --storeId 'k7jQ3AuE' \
    > test.out 2>&1
eval_tap $? 308 'GetView' test.out

#- 309 UpdateView
# body param: body
echo '{"displayOrder": 96, "localizations": {"RD2NrHnT": {"description": "fS0Pn81m", "localExt": {"OyJUufO4": {}, "2R4PtjA0": {}, "w2nSgy7h": {}}, "longDescription": "S3lA8gYZ", "title": "mmKfqllK"}, "9PtOPMm1": {"description": "s0NegX7H", "localExt": {"8ZFAmipO": {}, "d8FH9WJD": {}, "jW4KHlWa": {}}, "longDescription": "d9eNggt6", "title": "6GUPKorH"}, "8jNEF6qa": {"description": "EZEHVn8t", "localExt": {"WhXnfrUx": {}, "NzgIxCN8": {}, "dZNmuB7e": {}}, "longDescription": "3jqBjJIt", "title": "12nsk3Rr"}}, "name": "XQusi1Lb"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateView \
    --namespace $AB_NAMESPACE \
    --viewId 'y8JSi4jr' \
    --storeId 'mj8GTaqH' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 309 'UpdateView' test.out

#- 310 DeleteView
$CLI_EXE \
    --sn platform \
    --op DeleteView \
    --namespace $AB_NAMESPACE \
    --viewId 'Ce9SD8gs' \
    --storeId 'ZEFxiTNt' \
    > test.out 2>&1
eval_tap $? 310 'DeleteView' test.out

#- 311 QueryWallets
eval_tap 0 311 'QueryWallets # SKIP deprecated' test.out

#- 312 BulkCredit
# body param: body
echo '[{"creditRequest": {"amount": 60, "expireAt": "1986-01-09T00:00:00Z", "metadata": {"h3sYwhTv": {}, "4o9Yii62": {}, "7aYXy4sH": {}}, "origin": "GooglePlay", "reason": "w5Mo0qD2", "source": "PURCHASE"}, "currencyCode": "9s22YVbM", "userIds": ["CLNiGlOo", "crerWcjI", "8NRp6e3L"]}, {"creditRequest": {"amount": 97, "expireAt": "1996-04-11T00:00:00Z", "metadata": {"0QQgKTMg": {}, "Jb5WNFDO": {}, "r60PRLLP": {}}, "origin": "Steam", "reason": "YEgrVW1B", "source": "CONSUME_ENTITLEMENT"}, "currencyCode": "oxrWNZE7", "userIds": ["XwGuSCeS", "jlpWJ8cR", "F1kRAIp4"]}, {"creditRequest": {"amount": 100, "expireAt": "1984-02-29T00:00:00Z", "metadata": {"2B6BRmVE": {}, "uN6MLXrS": {}, "SIjXAL99": {}}, "origin": "GooglePlay", "reason": "OVdpfAgw", "source": "REFERRAL_BONUS"}, "currencyCode": "H6SGwcZ5", "userIds": ["H4XNUR1l", "GQ5INGL9", "aO6CdW5n"]}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op BulkCredit \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 312 'BulkCredit' test.out

#- 313 BulkDebit
# body param: body
echo '[{"currencyCode": "8IEnckLG", "request": {"allowOverdraft": false, "amount": 72, "balanceOrigin": "Other", "balanceSource": "PAYMENT", "metadata": {"s7mYfbUW": {}, "Qgsxw6Ne": {}, "RJrgeuCl": {}}, "reason": "Qx558B4v"}, "userIds": ["CaMXi3AA", "r03Y271W", "S8jdkcMj"]}, {"currencyCode": "DFVqMw1P", "request": {"allowOverdraft": true, "amount": 60, "balanceOrigin": "Nintendo", "balanceSource": "EXPIRATION", "metadata": {"jf7TbJqC": {}, "EVX1TgLJ": {}, "qCfCtZnE": {}}, "reason": "bv0pF8VA"}, "userIds": ["tSzd45au", "l4hyIEfo", "rWodNe8d"]}, {"currencyCode": "6WRCP0b8", "request": {"allowOverdraft": false, "amount": 11, "balanceOrigin": "Epic", "balanceSource": "OTHER", "metadata": {"d4ti9MX2": {}, "7AYwb8lX": {}, "QrRHr9xO": {}}, "reason": "xCE5unbS"}, "userIds": ["XhWp2hND", "2H0sIJID", "Jrr5tjRl"]}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op BulkDebit \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 313 'BulkDebit' test.out

#- 314 GetWallet
eval_tap 0 314 'GetWallet # SKIP deprecated' test.out

#- 315 SyncOrders
$CLI_EXE \
    --sn platform \
    --op SyncOrders \
    --nextEvaluatedKey 'WC6BQJn1' \
    --end 'rHHOKDiK' \
    --start 'vZwNZo4i' \
    > test.out 2>&1
eval_tap $? 315 'SyncOrders' test.out

#- 316 TestAdyenConfig
# body param: body
echo '{"allowedPaymentMethods": ["S40CoxoF", "8RX3LKXO", "VqebUgqZ"], "apiKey": "koI8MM4J", "authoriseAsCapture": false, "blockedPaymentMethods": ["rc8jXEmi", "RHcZYv2v", "fd2caPWN"], "clientKey": "ALgPvhSd", "dropInSettings": "TMig4MXH", "liveEndpointUrlPrefix": "dovDJBpR", "merchantAccount": "8FDGyGAX", "notificationHmacKey": "GmJ74DIN", "notificationPassword": "2PL3QtB8", "notificationUsername": "vnkEqdRM", "returnUrl": "oDskKXR8", "settings": "OeY03I5w"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestAdyenConfig \
    --sandbox 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 316 'TestAdyenConfig' test.out

#- 317 TestAliPayConfig
# body param: body
echo '{"appId": "7Azvgd8u", "privateKey": "j3eY0wMH", "publicKey": "eDHTC9gK", "returnUrl": "sb6o7z9u"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestAliPayConfig \
    --sandbox 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 317 'TestAliPayConfig' test.out

#- 318 TestCheckoutConfig
# body param: body
echo '{"publicKey": "kphqURXO", "secretKey": "EidKTMng"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestCheckoutConfig \
    --sandbox 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 318 'TestCheckoutConfig' test.out

#- 319 DebugMatchedPaymentMerchantConfig
$CLI_EXE \
    --sn platform \
    --op DebugMatchedPaymentMerchantConfig \
    --namespace_ 'dW42oHla' \
    --region 'migXowXA' \
    > test.out 2>&1
eval_tap $? 319 'DebugMatchedPaymentMerchantConfig' test.out

#- 320 TestPayPalConfig
# body param: body
echo '{"clientID": "RXKIYTZn", "clientSecret": "de03RmmE", "returnUrl": "dkKrR9wg", "webHookId": "AMa2IuUJ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestPayPalConfig \
    --sandbox 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 320 'TestPayPalConfig' test.out

#- 321 TestStripeConfig
# body param: body
echo '{"allowedPaymentMethodTypes": ["bmCH5ZJj", "yhirPq0L", "2UQB2XmE"], "publishableKey": "JHj8MScj", "secretKey": "g92RT4kC", "webhookSecret": "hYkqdyun"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestStripeConfig \
    --sandbox 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 321 'TestStripeConfig' test.out

#- 322 TestWxPayConfig
# body param: body
echo '{"appId": "Tn7mcIie", "key": "MKo3cWTD", "mchid": "XlR9Po2S", "returnUrl": "p5jofs2e"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestWxPayConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 322 'TestWxPayConfig' test.out

#- 323 TestXsollaConfig
# body param: body
echo '{"apiKey": "f65tZ2i9", "flowCompletionUrl": "ZR0ctuj4", "merchantId": 73, "projectId": 76, "projectSecretKey": "vIqpSyJy"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestXsollaConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 323 'TestXsollaConfig' test.out

#- 324 GetPaymentMerchantConfig
$CLI_EXE \
    --sn platform \
    --op GetPaymentMerchantConfig \
    --id 'FcpgXUnz' \
    > test.out 2>&1
eval_tap $? 324 'GetPaymentMerchantConfig' test.out

#- 325 UpdateAdyenConfig
# body param: body
echo '{"allowedPaymentMethods": ["PQVoHD3R", "dGCeT0S9", "h5pxFDmR"], "apiKey": "PkwoVbaN", "authoriseAsCapture": true, "blockedPaymentMethods": ["j9FzLA9w", "S7XTo5os", "WPqWFr3m"], "clientKey": "hGiZKO2H", "dropInSettings": "xviJpRQR", "liveEndpointUrlPrefix": "oYUSj34E", "merchantAccount": "E0TrJLqt", "notificationHmacKey": "iY8UrKCA", "notificationPassword": "XzUgwtDh", "notificationUsername": "nFyxGnY4", "returnUrl": "JvInYouz", "settings": "znGkARG1"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateAdyenConfig \
    --id 'nr1nrWCt' \
    --sandbox 'true' \
    --validate 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 325 'UpdateAdyenConfig' test.out

#- 326 TestAdyenConfigById
$CLI_EXE \
    --sn platform \
    --op TestAdyenConfigById \
    --id 'CYVfUqBb' \
    --sandbox 'false' \
    > test.out 2>&1
eval_tap $? 326 'TestAdyenConfigById' test.out

#- 327 UpdateAliPayConfig
# body param: body
echo '{"appId": "2lDSZSib", "privateKey": "7335qj57", "publicKey": "oF1Jgxkt", "returnUrl": "INfAPKC0"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateAliPayConfig \
    --id '6t3JK1a5' \
    --sandbox 'false' \
    --validate 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 327 'UpdateAliPayConfig' test.out

#- 328 TestAliPayConfigById
$CLI_EXE \
    --sn platform \
    --op TestAliPayConfigById \
    --id 'fMOFMoer' \
    --sandbox 'true' \
    > test.out 2>&1
eval_tap $? 328 'TestAliPayConfigById' test.out

#- 329 UpdateCheckoutConfig
# body param: body
echo '{"publicKey": "nLg0MQ63", "secretKey": "Q3hQQs9p"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCheckoutConfig \
    --id 'T4L6EptR' \
    --sandbox 'true' \
    --validate 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 329 'UpdateCheckoutConfig' test.out

#- 330 TestCheckoutConfigById
$CLI_EXE \
    --sn platform \
    --op TestCheckoutConfigById \
    --id 'BL5salBi' \
    --sandbox 'true' \
    > test.out 2>&1
eval_tap $? 330 'TestCheckoutConfigById' test.out

#- 331 UpdatePayPalConfig
# body param: body
echo '{"clientID": "tzLJOJ09", "clientSecret": "euk4fkSR", "returnUrl": "DNjj4q4i", "webHookId": "tx5DQ9Iq"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePayPalConfig \
    --id 'b1k4qbY7' \
    --sandbox 'true' \
    --validate 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 331 'UpdatePayPalConfig' test.out

#- 332 TestPayPalConfigById
$CLI_EXE \
    --sn platform \
    --op TestPayPalConfigById \
    --id 'E7VN6LXK' \
    --sandbox 'false' \
    > test.out 2>&1
eval_tap $? 332 'TestPayPalConfigById' test.out

#- 333 UpdateStripeConfig
# body param: body
echo '{"allowedPaymentMethodTypes": ["KuPJttrF", "WvGjNB74", "sBryoGoR"], "publishableKey": "rqmHGUWB", "secretKey": "Pdc4LK7L", "webhookSecret": "n7WCxtkf"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateStripeConfig \
    --id 'yzVJxooN' \
    --sandbox 'false' \
    --validate 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 333 'UpdateStripeConfig' test.out

#- 334 TestStripeConfigById
$CLI_EXE \
    --sn platform \
    --op TestStripeConfigById \
    --id 'oWl4YVHY' \
    --sandbox 'true' \
    > test.out 2>&1
eval_tap $? 334 'TestStripeConfigById' test.out

#- 335 UpdateWxPayConfig
# body param: body
echo '{"appId": "0v5QnYtV", "key": "vsULlD1P", "mchid": "2ullRRoq", "returnUrl": "FORetrjl"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateWxPayConfig \
    --id 'EyowBImT' \
    --validate 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 335 'UpdateWxPayConfig' test.out

#- 336 UpdateWxPayConfigCert
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UpdateWxPayConfigCert \
    --id '4IYSZoj9' \
    --upload file $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 336 'UpdateWxPayConfigCert' test.out

#- 337 TestWxPayConfigById
$CLI_EXE \
    --sn platform \
    --op TestWxPayConfigById \
    --id 'CEYk9HvX' \
    > test.out 2>&1
eval_tap $? 337 'TestWxPayConfigById' test.out

#- 338 UpdateXsollaConfig
# body param: body
echo '{"apiKey": "oHDztZQm", "flowCompletionUrl": "LD9nnCE4", "merchantId": 43, "projectId": 55, "projectSecretKey": "tqbwclCc"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXsollaConfig \
    --id 'wuUZt5G2' \
    --validate 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 338 'UpdateXsollaConfig' test.out

#- 339 TestXsollaConfigById
$CLI_EXE \
    --sn platform \
    --op TestXsollaConfigById \
    --id 'aL8emwfU' \
    > test.out 2>&1
eval_tap $? 339 'TestXsollaConfigById' test.out

#- 340 UpdateXsollaUIConfig
# body param: body
echo '{"device": "MOBILE", "showCloseButton": false, "size": "MEDIUM", "theme": "DARK"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXsollaUIConfig \
    --id 'BnT7k2NM' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 340 'UpdateXsollaUIConfig' test.out

#- 341 QueryPaymentProviderConfig
$CLI_EXE \
    --sn platform \
    --op QueryPaymentProviderConfig \
    --limit '65' \
    --namespace_ 'r08fYnba' \
    --offset '11' \
    --region 'dijSaGsY' \
    > test.out 2>&1
eval_tap $? 341 'QueryPaymentProviderConfig' test.out

#- 342 CreatePaymentProviderConfig
# body param: body
echo '{"aggregate": "ADYEN", "namespace": "t7hsaap9", "region": "1FzOidLV", "sandboxTaxJarApiToken": "FNoqcCf0", "specials": ["PAYPAL", "CHECKOUT", "PAYPAL"], "taxJarApiToken": "xZDnBXjD", "taxJarEnabled": false, "useGlobalTaxJarApiToken": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreatePaymentProviderConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 342 'CreatePaymentProviderConfig' test.out

#- 343 GetAggregatePaymentProviders
$CLI_EXE \
    --sn platform \
    --op GetAggregatePaymentProviders \
    > test.out 2>&1
eval_tap $? 343 'GetAggregatePaymentProviders' test.out

#- 344 DebugMatchedPaymentProviderConfig
$CLI_EXE \
    --sn platform \
    --op DebugMatchedPaymentProviderConfig \
    --namespace_ 'dsrLRse5' \
    --region 'tcySI9ga' \
    > test.out 2>&1
eval_tap $? 344 'DebugMatchedPaymentProviderConfig' test.out

#- 345 GetSpecialPaymentProviders
$CLI_EXE \
    --sn platform \
    --op GetSpecialPaymentProviders \
    > test.out 2>&1
eval_tap $? 345 'GetSpecialPaymentProviders' test.out

#- 346 UpdatePaymentProviderConfig
# body param: body
echo '{"aggregate": "ADYEN", "namespace": "vlrqMu4h", "region": "1rbkH3Z9", "sandboxTaxJarApiToken": "yhSfc2Y0", "specials": ["CHECKOUT", "STRIPE", "XSOLLA"], "taxJarApiToken": "u4DeqtsD", "taxJarEnabled": false, "useGlobalTaxJarApiToken": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePaymentProviderConfig \
    --id 'MYun4ZZD' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 346 'UpdatePaymentProviderConfig' test.out

#- 347 DeletePaymentProviderConfig
$CLI_EXE \
    --sn platform \
    --op DeletePaymentProviderConfig \
    --id 'NXVMEQiz' \
    > test.out 2>&1
eval_tap $? 347 'DeletePaymentProviderConfig' test.out

#- 348 GetPaymentTaxConfig
$CLI_EXE \
    --sn platform \
    --op GetPaymentTaxConfig \
    > test.out 2>&1
eval_tap $? 348 'GetPaymentTaxConfig' test.out

#- 349 UpdatePaymentTaxConfig
# body param: body
echo '{"sandboxTaxJarApiToken": "SI8cQzG0", "taxJarApiToken": "omJ5b0zx", "taxJarEnabled": false, "taxJarProductCodesMapping": {"MQ4MbX5e": "mSBFlooW", "NPW2LiGb": "jmABfoBM", "U3UO3che": "fL3kNNyk"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePaymentTaxConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 349 'UpdatePaymentTaxConfig' test.out

#- 350 SyncPaymentOrders
$CLI_EXE \
    --sn platform \
    --op SyncPaymentOrders \
    --nextEvaluatedKey '3wFwn3ag' \
    --end 'MX1mkx3E' \
    --start 'ucRAkt4c' \
    > test.out 2>&1
eval_tap $? 350 'SyncPaymentOrders' test.out

#- 351 PublicGetRootCategories
$CLI_EXE \
    --sn platform \
    --op PublicGetRootCategories \
    --namespace $AB_NAMESPACE \
    --language '5UQWgopn' \
    --storeId 'Fvn2Dxpg' \
    > test.out 2>&1
eval_tap $? 351 'PublicGetRootCategories' test.out

#- 352 DownloadCategories
$CLI_EXE \
    --sn platform \
    --op DownloadCategories \
    --namespace $AB_NAMESPACE \
    --language '5seue8XL' \
    --storeId 'O8V2COaQ' \
    > test.out 2>&1
eval_tap $? 352 'DownloadCategories' test.out

#- 353 PublicGetCategory
$CLI_EXE \
    --sn platform \
    --op PublicGetCategory \
    --categoryPath 'PU8RNZkc' \
    --namespace $AB_NAMESPACE \
    --language 'jtDOCoYp' \
    --storeId 'WEaIwK2r' \
    > test.out 2>&1
eval_tap $? 353 'PublicGetCategory' test.out

#- 354 PublicGetChildCategories
$CLI_EXE \
    --sn platform \
    --op PublicGetChildCategories \
    --categoryPath '5Gt9X26R' \
    --namespace $AB_NAMESPACE \
    --language 'FfhX1H8l' \
    --storeId '8ticUIkm' \
    > test.out 2>&1
eval_tap $? 354 'PublicGetChildCategories' test.out

#- 355 PublicGetDescendantCategories
$CLI_EXE \
    --sn platform \
    --op PublicGetDescendantCategories \
    --categoryPath 'zDEPX92m' \
    --namespace $AB_NAMESPACE \
    --language 'CXhswSNL' \
    --storeId 'x1ZS56tz' \
    > test.out 2>&1
eval_tap $? 355 'PublicGetDescendantCategories' test.out

#- 356 PublicListCurrencies
$CLI_EXE \
    --sn platform \
    --op PublicListCurrencies \
    --namespace $AB_NAMESPACE \
    --currencyType 'VIRTUAL' \
    > test.out 2>&1
eval_tap $? 356 'PublicListCurrencies' test.out

#- 357 GeDLCDurableRewardShortMap
$CLI_EXE \
    --sn platform \
    --op GeDLCDurableRewardShortMap \
    --namespace $AB_NAMESPACE \
    --dlcType 'PSN' \
    > test.out 2>&1
eval_tap $? 357 'GeDLCDurableRewardShortMap' test.out

#- 358 GetIAPItemMapping
$CLI_EXE \
    --sn platform \
    --op GetIAPItemMapping \
    --namespace $AB_NAMESPACE \
    --platform 'TWITCH' \
    > test.out 2>&1
eval_tap $? 358 'GetIAPItemMapping' test.out

#- 359 PublicGetItemByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetItemByAppId \
    --namespace $AB_NAMESPACE \
    --language '9pwxM4cR' \
    --region 'QUbd2p1F' \
    --storeId 'Viywt6Nw' \
    --appId 'sGmI31Gf' \
    > test.out 2>&1
eval_tap $? 359 'PublicGetItemByAppId' test.out

#- 360 PublicQueryItems
$CLI_EXE \
    --sn platform \
    --op PublicQueryItems \
    --namespace $AB_NAMESPACE \
    --appType 'GAME' \
    --autoCalcEstimatedPrice 'false' \
    --baseAppId 'odnrkXNJ' \
    --categoryPath '8P5QQEOz' \
    --features 'Xjia5TW7' \
    --includeSubCategoryItem 'true' \
    --itemType 'LOOTBOX' \
    --language 'FL33uy9j' \
    --limit '42' \
    --offset '62' \
    --region 'hpNr5gvg' \
    --sortBy '["name:desc", "updatedAt:asc", "createdAt"]' \
    --storeId 'XnMDEHql' \
    --tags 'dr0tPuyE' \
    > test.out 2>&1
eval_tap $? 360 'PublicQueryItems' test.out

#- 361 PublicGetItemBySku
$CLI_EXE \
    --sn platform \
    --op PublicGetItemBySku \
    --namespace $AB_NAMESPACE \
    --autoCalcEstimatedPrice 'true' \
    --language 's7H0U52f' \
    --region 'QPaCNEEl' \
    --storeId 'ufkHT28T' \
    --sku 'U9GfyAPv' \
    > test.out 2>&1
eval_tap $? 361 'PublicGetItemBySku' test.out

#- 362 PublicGetEstimatedPrice
$CLI_EXE \
    --sn platform \
    --op PublicGetEstimatedPrice \
    --namespace $AB_NAMESPACE \
    --region 'olNkEwyS' \
    --storeId 'RoeZPd52' \
    --itemIds 'WrU6Ntik' \
    > test.out 2>&1
eval_tap $? 362 'PublicGetEstimatedPrice' test.out

#- 363 PublicBulkGetItems
$CLI_EXE \
    --sn platform \
    --op PublicBulkGetItems \
    --namespace $AB_NAMESPACE \
    --autoCalcEstimatedPrice 'true' \
    --language 'puN8jgdC' \
    --region 'QEH4ycrH' \
    --storeId 'SJJE66e8' \
    --itemIds 'VRi5fISc' \
    > test.out 2>&1
eval_tap $? 363 'PublicBulkGetItems' test.out

#- 364 PublicValidateItemPurchaseCondition
# body param: body
echo '{"itemIds": ["EZZA4pOk", "kDlUoAsK", "JQDg9DMm"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicValidateItemPurchaseCondition \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 364 'PublicValidateItemPurchaseCondition' test.out

#- 365 PublicSearchItems
$CLI_EXE \
    --sn platform \
    --op PublicSearchItems \
    --namespace $AB_NAMESPACE \
    --autoCalcEstimatedPrice 'false' \
    --itemType 'EXTENSION' \
    --limit '58' \
    --offset '85' \
    --region 'RR5ZWuGu' \
    --storeId 'bMgsToha' \
    --keyword 'h4Ga2tkW' \
    --language 'E3IcKkGK' \
    > test.out 2>&1
eval_tap $? 365 'PublicSearchItems' test.out

#- 366 PublicGetApp
$CLI_EXE \
    --sn platform \
    --op PublicGetApp \
    --itemId '4UVHxnsn' \
    --namespace $AB_NAMESPACE \
    --language 'DyJPiohG' \
    --region 'RnesRWCt' \
    --storeId 'VApDtfu4' \
    > test.out 2>&1
eval_tap $? 366 'PublicGetApp' test.out

#- 367 PublicGetItemDynamicData
$CLI_EXE \
    --sn platform \
    --op PublicGetItemDynamicData \
    --itemId 'k2C6NGFu' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 367 'PublicGetItemDynamicData' test.out

#- 368 PublicGetItem
$CLI_EXE \
    --sn platform \
    --op PublicGetItem \
    --itemId 'w3426idJ' \
    --namespace $AB_NAMESPACE \
    --autoCalcEstimatedPrice 'true' \
    --language 'jzQaF3Ub' \
    --populateBundle 'false' \
    --region 'e6caW1Vd' \
    --storeId 'nmHJYvmB' \
    > test.out 2>&1
eval_tap $? 368 'PublicGetItem' test.out

#- 369 GetPaymentCustomization
eval_tap 0 369 'GetPaymentCustomization # SKIP deprecated' test.out

#- 370 PublicGetPaymentUrl
# body param: body
echo '{"paymentOrderNo": "6KuEyp2M", "paymentProvider": "CHECKOUT", "returnUrl": "xb603IGV", "ui": "0AIc3Flo", "zipCode": "CrgP9R9M"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicGetPaymentUrl \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 370 'PublicGetPaymentUrl' test.out

#- 371 PublicGetPaymentMethods
$CLI_EXE \
    --sn platform \
    --op PublicGetPaymentMethods \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'jXzg1XRs' \
    > test.out 2>&1
eval_tap $? 371 'PublicGetPaymentMethods' test.out

#- 372 PublicGetUnpaidPaymentOrder
$CLI_EXE \
    --sn platform \
    --op PublicGetUnpaidPaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'SrH0ygS6' \
    > test.out 2>&1
eval_tap $? 372 'PublicGetUnpaidPaymentOrder' test.out

#- 373 Pay
# body param: body
echo '{"token": "xEg5ntsR"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op Pay \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'mQ66SVHy' \
    --paymentProvider 'ADYEN' \
    --zipCode '8CAVSBso' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 373 'Pay' test.out

#- 374 PublicCheckPaymentOrderPaidStatus
$CLI_EXE \
    --sn platform \
    --op PublicCheckPaymentOrderPaidStatus \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'KI6Yo77E' \
    > test.out 2>&1
eval_tap $? 374 'PublicCheckPaymentOrderPaidStatus' test.out

#- 375 GetPaymentPublicConfig
$CLI_EXE \
    --sn platform \
    --op GetPaymentPublicConfig \
    --namespace $AB_NAMESPACE \
    --sandbox 'false' \
    --paymentProvider 'STRIPE' \
    --region 'ITNzmFLC' \
    > test.out 2>&1
eval_tap $? 375 'GetPaymentPublicConfig' test.out

#- 376 PublicGetQRCode
$CLI_EXE \
    --sn platform \
    --op PublicGetQRCode \
    --namespace $AB_NAMESPACE \
    --code 's9zMZjPv' \
    > test.out 2>&1
eval_tap $? 376 'PublicGetQRCode' test.out

#- 377 PublicNormalizePaymentReturnUrl
$CLI_EXE \
    --sn platform \
    --op PublicNormalizePaymentReturnUrl \
    --namespace $AB_NAMESPACE \
    --payerID 'eCTJOh9w' \
    --foreinginvoice 'FHnBsJZN' \
    --invoiceId 'LSUH3oXE' \
    --payload 'rK6eXqkQ' \
    --redirectResult '2QdZboDz' \
    --resultCode 'erV3vDAc' \
    --sessionId 'MVFqyy5a' \
    --status 'eaUQTJcj' \
    --token 'qhIZITRK' \
    --type 'KGvH3IIV' \
    --userId 'zMOExJoL' \
    --orderNo 'wwUcoq8g' \
    --paymentOrderNo 'Pxw7sk0x' \
    --paymentProvider 'XSOLLA' \
    --returnUrl 'oECEYaH7' \
    > test.out 2>&1
eval_tap $? 377 'PublicNormalizePaymentReturnUrl' test.out

#- 378 GetPaymentTaxValue
$CLI_EXE \
    --sn platform \
    --op GetPaymentTaxValue \
    --namespace $AB_NAMESPACE \
    --zipCode 'wFWMMh7N' \
    --paymentOrderNo 'VlGHkAO2' \
    --paymentProvider 'XSOLLA' \
    > test.out 2>&1
eval_tap $? 378 'GetPaymentTaxValue' test.out

#- 379 GetRewardByCode
$CLI_EXE \
    --sn platform \
    --op GetRewardByCode \
    --namespace $AB_NAMESPACE \
    --rewardCode 'uOEbszVq' \
    > test.out 2>&1
eval_tap $? 379 'GetRewardByCode' test.out

#- 380 QueryRewards1
$CLI_EXE \
    --sn platform \
    --op QueryRewards1 \
    --namespace $AB_NAMESPACE \
    --eventTopic 'Ur8l8m0V' \
    --limit '75' \
    --offset '75' \
    --sortBy '["rewardCode:asc", "namespace:asc"]' \
    > test.out 2>&1
eval_tap $? 380 'QueryRewards1' test.out

#- 381 GetReward1
$CLI_EXE \
    --sn platform \
    --op GetReward1 \
    --namespace $AB_NAMESPACE \
    --rewardId '320wrOeY' \
    > test.out 2>&1
eval_tap $? 381 'GetReward1' test.out

#- 382 PublicListStores
$CLI_EXE \
    --sn platform \
    --op PublicListStores \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 382 'PublicListStores' test.out

#- 383 PublicExistsAnyMyActiveEntitlement
$CLI_EXE \
    --sn platform \
    --op PublicExistsAnyMyActiveEntitlement \
    --namespace $AB_NAMESPACE \
    --appIds '["y120bSEq", "wUtSG4QB", "oPt7ickY"]' \
    --itemIds '["yHl9k6GB", "mWVd8Eqb", "D59KzGL0"]' \
    --skus '["X8dU5bF8", "0ihEdxlE", "zqqVjZvK"]' \
    > test.out 2>&1
eval_tap $? 383 'PublicExistsAnyMyActiveEntitlement' test.out

#- 384 PublicGetMyAppEntitlementOwnershipByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetMyAppEntitlementOwnershipByAppId \
    --namespace $AB_NAMESPACE \
    --appId 'k6uUSDZ6' \
    > test.out 2>&1
eval_tap $? 384 'PublicGetMyAppEntitlementOwnershipByAppId' test.out

#- 385 PublicGetMyEntitlementOwnershipByItemId
$CLI_EXE \
    --sn platform \
    --op PublicGetMyEntitlementOwnershipByItemId \
    --namespace $AB_NAMESPACE \
    --entitlementClazz 'ENTITLEMENT' \
    --itemId 'zYiyX6LU' \
    > test.out 2>&1
eval_tap $? 385 'PublicGetMyEntitlementOwnershipByItemId' test.out

#- 386 PublicGetMyEntitlementOwnershipBySku
$CLI_EXE \
    --sn platform \
    --op PublicGetMyEntitlementOwnershipBySku \
    --namespace $AB_NAMESPACE \
    --entitlementClazz 'MEDIA' \
    --sku 'viWJy6JR' \
    > test.out 2>&1
eval_tap $? 386 'PublicGetMyEntitlementOwnershipBySku' test.out

#- 387 PublicGetEntitlementOwnershipToken
$CLI_EXE \
    --sn platform \
    --op PublicGetEntitlementOwnershipToken \
    --namespace $AB_NAMESPACE \
    --appIds '["BIChWrwP", "lC6ZCvhK", "qjJBlNdw"]' \
    --itemIds '["XgvEmadM", "sSIVZzTc", "HYkd0SoF"]' \
    --skus '["21gln32Z", "EcQ3UCZC", "qx2Lkvgp"]' \
    > test.out 2>&1
eval_tap $? 387 'PublicGetEntitlementOwnershipToken' test.out

#- 388 SyncTwitchDropsEntitlement
# body param: body
echo '{"gameId": "BBfn6gEx", "language": "mo-CY", "region": "OVcYo51s"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncTwitchDropsEntitlement \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 388 'SyncTwitchDropsEntitlement' test.out

#- 389 PublicGetMyWallet
$CLI_EXE \
    --sn platform \
    --op PublicGetMyWallet \
    --currencyCode '0CV1SkJ8' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 389 'PublicGetMyWallet' test.out

#- 390 SyncEpicGameDLC
# body param: body
echo '{"epicGamesJwtToken": "gk5s994O"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncEpicGameDLC \
    --namespace $AB_NAMESPACE \
    --userId 'AMd4gJtm' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 390 'SyncEpicGameDLC' test.out

#- 391 SyncOculusDLC
$CLI_EXE \
    --sn platform \
    --op SyncOculusDLC \
    --namespace $AB_NAMESPACE \
    --userId 'd9vgiOeK' \
    > test.out 2>&1
eval_tap $? 391 'SyncOculusDLC' test.out

#- 392 PublicSyncPsnDlcInventory
# body param: body
echo '{"serviceLabel": 44}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicSyncPsnDlcInventory \
    --namespace $AB_NAMESPACE \
    --userId 'oXQGqi9y' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 392 'PublicSyncPsnDlcInventory' test.out

#- 393 PublicSyncPsnDlcInventoryWithMultipleServiceLabels
# body param: body
echo '{"serviceLabels": [100, 29, 6]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicSyncPsnDlcInventoryWithMultipleServiceLabels \
    --namespace $AB_NAMESPACE \
    --userId 'u4CgMqSm' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 393 'PublicSyncPsnDlcInventoryWithMultipleServiceLabels' test.out

#- 394 SyncSteamDLC
# body param: body
echo '{"appId": "SFSTRa0t", "steamId": "oOEV6usQ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncSteamDLC \
    --namespace $AB_NAMESPACE \
    --userId 'jwsuvN7p' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 394 'SyncSteamDLC' test.out

#- 395 SyncXboxDLC
# body param: body
echo '{"xstsToken": "n4pjhdKD"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncXboxDLC \
    --namespace $AB_NAMESPACE \
    --userId 'YP6RXJKR' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 395 'SyncXboxDLC' test.out

#- 396 PublicQueryUserEntitlements
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserEntitlements \
    --namespace $AB_NAMESPACE \
    --userId 'BgHKnCD5' \
    --appType 'DLC' \
    --entitlementClazz 'LOOTBOX' \
    --entitlementName 'gn0WQWbL' \
    --features '["lr3UeGyD", "IEKcs5DJ", "fw5BdRWt"]' \
    --itemId '["0Tr39eWM", "nhbCvliI", "kdo8heXJ"]' \
    --limit '93' \
    --offset '37' \
    > test.out 2>&1
eval_tap $? 396 'PublicQueryUserEntitlements' test.out

#- 397 PublicGetUserAppEntitlementByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetUserAppEntitlementByAppId \
    --namespace $AB_NAMESPACE \
    --userId '9nfjyxmr' \
    --appId '8xNYQfSD' \
    > test.out 2>&1
eval_tap $? 397 'PublicGetUserAppEntitlementByAppId' test.out

#- 398 PublicQueryUserEntitlementsByAppType
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserEntitlementsByAppType \
    --namespace $AB_NAMESPACE \
    --userId 'NU17Io5X' \
    --limit '51' \
    --offset '66' \
    --appType 'SOFTWARE' \
    > test.out 2>&1
eval_tap $? 398 'PublicQueryUserEntitlementsByAppType' test.out

#- 399 PublicGetUserEntitlementsByIds
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementsByIds \
    --namespace $AB_NAMESPACE \
    --userId 'el61eUGh' \
    --availablePlatformOnly 'true' \
    --ids '["NKLIARfa", "E0KF0vzR", "q4xVqX33"]' \
    > test.out 2>&1
eval_tap $? 399 'PublicGetUserEntitlementsByIds' test.out

#- 400 PublicGetUserEntitlementByItemId
eval_tap 0 400 'PublicGetUserEntitlementByItemId # SKIP deprecated' test.out

#- 401 PublicGetUserEntitlementBySku
eval_tap 0 401 'PublicGetUserEntitlementBySku # SKIP deprecated' test.out

#- 402 PublicUserEntitlementHistory
$CLI_EXE \
    --sn platform \
    --op PublicUserEntitlementHistory \
    --namespace $AB_NAMESPACE \
    --userId 'B4RBqf79' \
    --endDate 'GfBLkJ93' \
    --entitlementClazz 'APP' \
    --limit '81' \
    --offset '94' \
    --startDate 'HzWfZusk' \
    > test.out 2>&1
eval_tap $? 402 'PublicUserEntitlementHistory' test.out

#- 403 PublicExistsAnyUserActiveEntitlement
$CLI_EXE \
    --sn platform \
    --op PublicExistsAnyUserActiveEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'NG3AeUFy' \
    --appIds '["QzTfs61a", "4B6gboxC", "cDyVXgTG"]' \
    --itemIds '["eoXyfckT", "ogbMFywL", "Qlnf9YYU"]' \
    --skus '["Ed9jwNbE", "3QIlmdrm", "wH8kU9ww"]' \
    > test.out 2>&1
eval_tap $? 403 'PublicExistsAnyUserActiveEntitlement' test.out

#- 404 PublicGetUserAppEntitlementOwnershipByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetUserAppEntitlementOwnershipByAppId \
    --namespace $AB_NAMESPACE \
    --userId 'MyrpYkoU' \
    --appId 'CSccTwrW' \
    > test.out 2>&1
eval_tap $? 404 'PublicGetUserAppEntitlementOwnershipByAppId' test.out

#- 405 PublicGetUserEntitlementOwnershipByItemId
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementOwnershipByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'aiFYdAVc' \
    --entitlementClazz 'CODE' \
    --itemId 'YzcuNMry' \
    > test.out 2>&1
eval_tap $? 405 'PublicGetUserEntitlementOwnershipByItemId' test.out

#- 406 PublicGetUserEntitlementOwnershipByItemIds
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementOwnershipByItemIds \
    --namespace $AB_NAMESPACE \
    --userId '64zBIOz3' \
    --ids '["tpvXSMcM", "DwEbdjq0", "cB2IJ0jJ"]' \
    > test.out 2>&1
eval_tap $? 406 'PublicGetUserEntitlementOwnershipByItemIds' test.out

#- 407 PublicGetUserEntitlementOwnershipBySku
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementOwnershipBySku \
    --namespace $AB_NAMESPACE \
    --userId '7e8Ob8UW' \
    --entitlementClazz 'CODE' \
    --sku 'R8yhlj2D' \
    > test.out 2>&1
eval_tap $? 407 'PublicGetUserEntitlementOwnershipBySku' test.out

#- 408 PublicGetUserEntitlement
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlement \
    --entitlementId 'c8v7XRil' \
    --namespace $AB_NAMESPACE \
    --userId 'jKpCCHU8' \
    > test.out 2>&1
eval_tap $? 408 'PublicGetUserEntitlement' test.out

#- 409 PublicConsumeUserEntitlement
# body param: body
echo '{"options": ["3wpCEgqv", "3Ta0gVWX", "rx8XORiP"], "requestId": "oYBTh9iF", "useCount": 7}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicConsumeUserEntitlement \
    --entitlementId 'yfV7N9zI' \
    --namespace $AB_NAMESPACE \
    --userId 'XCX4THQT' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 409 'PublicConsumeUserEntitlement' test.out

#- 410 PublicSellUserEntitlement
# body param: body
echo '{"requestId": "c29ntl6c", "useCount": 71}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicSellUserEntitlement \
    --entitlementId 'Ej5PlVg3' \
    --namespace $AB_NAMESPACE \
    --userId 'W3XZ8a92' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 410 'PublicSellUserEntitlement' test.out

#- 411 PublicSplitUserEntitlement
# body param: body
echo '{"useCount": 6}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicSplitUserEntitlement \
    --entitlementId 'XEu59FIb' \
    --namespace $AB_NAMESPACE \
    --userId 'sAA0YOmM' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 411 'PublicSplitUserEntitlement' test.out

#- 412 PublicTransferUserEntitlement
# body param: body
echo '{"entitlementId": "6j2RCTXn", "useCount": 44}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicTransferUserEntitlement \
    --entitlementId 'GFafpYvu' \
    --namespace $AB_NAMESPACE \
    --userId '997pK3n3' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 412 'PublicTransferUserEntitlement' test.out

#- 413 PublicRedeemCode
# body param: body
echo '{"code": "sWWrmKs5", "language": "qE_ULWT", "region": "Vk0Y6iOC"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicRedeemCode \
    --namespace $AB_NAMESPACE \
    --userId 'AoBBogHq' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 413 'PublicRedeemCode' test.out

#- 414 PublicFulfillAppleIAPItem
# body param: body
echo '{"excludeOldTransactions": true, "language": "vqo-rItH_979", "productId": "DQS7k4EA", "receiptData": "NB6JMJES", "region": "2ruAtiH3", "transactionId": "QOykQ7BE"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicFulfillAppleIAPItem \
    --namespace $AB_NAMESPACE \
    --userId 'jjIMtBkf' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 414 'PublicFulfillAppleIAPItem' test.out

#- 415 SyncEpicGamesInventory
# body param: body
echo '{"epicGamesJwtToken": "4Kllfv1S"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncEpicGamesInventory \
    --namespace $AB_NAMESPACE \
    --userId 'ilZcweYh' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 415 'SyncEpicGamesInventory' test.out

#- 416 PublicFulfillGoogleIAPItem
# body param: body
echo '{"autoAck": false, "language": "pSH", "orderId": "IlryI8hx", "packageName": "zDL0IQPh", "productId": "bVOwFsZc", "purchaseTime": 17, "purchaseToken": "HkzrCe3h", "region": "5MVkJIbR"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicFulfillGoogleIAPItem \
    --namespace $AB_NAMESPACE \
    --userId 'Vf9Gdwpv' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 416 'PublicFulfillGoogleIAPItem' test.out

#- 417 SyncOculusConsumableEntitlements
$CLI_EXE \
    --sn platform \
    --op SyncOculusConsumableEntitlements \
    --namespace $AB_NAMESPACE \
    --userId '7AmcLmzZ' \
    > test.out 2>&1
eval_tap $? 417 'SyncOculusConsumableEntitlements' test.out

#- 418 PublicReconcilePlayStationStore
# body param: body
echo '{"currencyCode": "5KhWyHwc", "price": 0.4707461146858616, "productId": "i1rgjVvE", "serviceLabel": 27}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicReconcilePlayStationStore \
    --namespace $AB_NAMESPACE \
    --userId '6NF6FKAI' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 418 'PublicReconcilePlayStationStore' test.out

#- 419 PublicReconcilePlayStationStoreWithMultipleServiceLabels
# body param: body
echo '{"currencyCode": "wKHbQvek", "price": 0.4780091676909739, "productId": "5MEjbz2J", "serviceLabels": [56, 1, 4]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicReconcilePlayStationStoreWithMultipleServiceLabels \
    --namespace $AB_NAMESPACE \
    --userId 'LEvoct60' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 419 'PublicReconcilePlayStationStoreWithMultipleServiceLabels' test.out

#- 420 SyncSteamInventory
# body param: body
echo '{"appId": "CqzMEcxY", "currencyCode": "HlbMORRs", "language": "DLu_klYT", "price": 0.2334288574316159, "productId": "HuHuunXl", "region": "B5d5hOpC", "steamId": "NtxhMYOi"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncSteamInventory \
    --namespace $AB_NAMESPACE \
    --userId 'vfQGJfEN' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 420 'SyncSteamInventory' test.out

#- 421 SyncTwitchDropsEntitlement1
# body param: body
echo '{"gameId": "wgx24YDc", "language": "uQpK-czKt_932", "region": "T8shzS6I"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncTwitchDropsEntitlement1 \
    --namespace $AB_NAMESPACE \
    --userId 'UplD77IM' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 421 'SyncTwitchDropsEntitlement1' test.out

#- 422 SyncXboxInventory
# body param: body
echo '{"currencyCode": "TtphhCtY", "price": 0.621506566180091, "productId": "2gA2ZnfY", "xstsToken": "OEwwo8ao"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncXboxInventory \
    --namespace $AB_NAMESPACE \
    --userId 'ItYwJRZY' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 422 'SyncXboxInventory' test.out

#- 423 PublicQueryUserOrders
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserOrders \
    --namespace $AB_NAMESPACE \
    --userId '4cLUKcM8' \
    --itemId '2S9vR51Q' \
    --limit '74' \
    --offset '96' \
    --status 'CHARGEBACK_REVERSED' \
    > test.out 2>&1
eval_tap $? 423 'PublicQueryUserOrders' test.out

#- 424 PublicCreateUserOrder
# body param: body
echo '{"currencyCode": "BuKYoqbc", "discountedPrice": 43, "ext": {"Xd3Pzr5s": {}, "wbToJOVc": {}, "H7w1W322": {}}, "itemId": "5EHFldfy", "language": "aEJe_Rk", "price": 81, "quantity": 49, "region": "DiBFNxZy", "returnUrl": "G6i82w4v", "sectionId": "aN4zG0fx"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicCreateUserOrder \
    --namespace $AB_NAMESPACE \
    --userId 'Y6lws6oj' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 424 'PublicCreateUserOrder' test.out

#- 425 PublicGetUserOrder
$CLI_EXE \
    --sn platform \
    --op PublicGetUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'GlqAsWT9' \
    --userId 'WMapo0yE' \
    > test.out 2>&1
eval_tap $? 425 'PublicGetUserOrder' test.out

#- 426 PublicCancelUserOrder
$CLI_EXE \
    --sn platform \
    --op PublicCancelUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'p8xzHBS5' \
    --userId 'Z5SDA4yO' \
    > test.out 2>&1
eval_tap $? 426 'PublicCancelUserOrder' test.out

#- 427 PublicGetUserOrderHistories
$CLI_EXE \
    --sn platform \
    --op PublicGetUserOrderHistories \
    --namespace $AB_NAMESPACE \
    --orderNo 'FtAeptEO' \
    --userId 'EgHMbmwi' \
    > test.out 2>&1
eval_tap $? 427 'PublicGetUserOrderHistories' test.out

#- 428 PublicDownloadUserOrderReceipt
$CLI_EXE \
    --sn platform \
    --op PublicDownloadUserOrderReceipt \
    --namespace $AB_NAMESPACE \
    --orderNo 'BQ4juzCC' \
    --userId 'OQllmbbN' \
    > test.out 2>&1
eval_tap $? 428 'PublicDownloadUserOrderReceipt' test.out

#- 429 PublicGetPaymentAccounts
$CLI_EXE \
    --sn platform \
    --op PublicGetPaymentAccounts \
    --namespace $AB_NAMESPACE \
    --userId 'YuCXtuYD' \
    > test.out 2>&1
eval_tap $? 429 'PublicGetPaymentAccounts' test.out

#- 430 PublicDeletePaymentAccount
$CLI_EXE \
    --sn platform \
    --op PublicDeletePaymentAccount \
    --id 'aXKv0IZA' \
    --namespace $AB_NAMESPACE \
    --type 'paypal' \
    --userId 'kMPRlFsb' \
    > test.out 2>&1
eval_tap $? 430 'PublicDeletePaymentAccount' test.out

#- 431 PublicListActiveSections
$CLI_EXE \
    --sn platform \
    --op PublicListActiveSections \
    --namespace $AB_NAMESPACE \
    --userId 'rYNIhmqK' \
    --autoCalcEstimatedPrice 'true' \
    --language 'H7BJlVAc' \
    --region 'Pv9QWO9Q' \
    --storeId 'YIha4t1i' \
    --viewId 'nScPSQgz' \
    > test.out 2>&1
eval_tap $? 431 'PublicListActiveSections' test.out

#- 432 PublicQueryUserSubscriptions
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserSubscriptions \
    --namespace $AB_NAMESPACE \
    --userId '5EqqGY5T' \
    --chargeStatus 'NEVER' \
    --itemId 'tgBWnsU0' \
    --limit '8' \
    --offset '65' \
    --sku 'APn9SicR' \
    --status 'EXPIRED' \
    --subscribedBy 'PLATFORM' \
    > test.out 2>&1
eval_tap $? 432 'PublicQueryUserSubscriptions' test.out

#- 433 PublicSubscribeSubscription
# body param: body
echo '{"currencyCode": "tsrjnaue", "itemId": "wbfxQUSu", "language": "qsa-gjKu", "region": "PXjSbwMx", "returnUrl": "Kx2Ray2Z", "source": "uIY7XCgp"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicSubscribeSubscription \
    --namespace $AB_NAMESPACE \
    --userId '7yNIniyQ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 433 'PublicSubscribeSubscription' test.out

#- 434 PublicCheckUserSubscriptionSubscribableByItemId
$CLI_EXE \
    --sn platform \
    --op PublicCheckUserSubscriptionSubscribableByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'srKQM2Hj' \
    --itemId 'rjdCKsjS' \
    > test.out 2>&1
eval_tap $? 434 'PublicCheckUserSubscriptionSubscribableByItemId' test.out

#- 435 PublicGetUserSubscription
$CLI_EXE \
    --sn platform \
    --op PublicGetUserSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'CszxvRQs' \
    --userId 'Pk1y2hfO' \
    > test.out 2>&1
eval_tap $? 435 'PublicGetUserSubscription' test.out

#- 436 PublicChangeSubscriptionBillingAccount
$CLI_EXE \
    --sn platform \
    --op PublicChangeSubscriptionBillingAccount \
    --namespace $AB_NAMESPACE \
    --subscriptionId '178EB3Uv' \
    --userId '9aH0Dg08' \
    > test.out 2>&1
eval_tap $? 436 'PublicChangeSubscriptionBillingAccount' test.out

#- 437 PublicCancelSubscription
# body param: body
echo '{"immediate": true, "reason": "9MY8aYDc"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicCancelSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'o44s2Dyt' \
    --userId 's81xcNrv' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 437 'PublicCancelSubscription' test.out

#- 438 PublicGetUserSubscriptionBillingHistories
$CLI_EXE \
    --sn platform \
    --op PublicGetUserSubscriptionBillingHistories \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'gYiFhQws' \
    --userId '5bvl9sXy' \
    --excludeFree 'false' \
    --limit '60' \
    --offset '72' \
    > test.out 2>&1
eval_tap $? 438 'PublicGetUserSubscriptionBillingHistories' test.out

#- 439 PublicListViews
$CLI_EXE \
    --sn platform \
    --op PublicListViews \
    --namespace $AB_NAMESPACE \
    --userId 'mtYXWFU9' \
    --language 'UU8E4dKW' \
    --storeId 'MPjwBFj1' \
    > test.out 2>&1
eval_tap $? 439 'PublicListViews' test.out

#- 440 PublicGetWallet
$CLI_EXE \
    --sn platform \
    --op PublicGetWallet \
    --currencyCode 'wbaAxuoc' \
    --namespace $AB_NAMESPACE \
    --userId 'B5hLJojy' \
    > test.out 2>&1
eval_tap $? 440 'PublicGetWallet' test.out

#- 441 PublicListUserWalletTransactions
$CLI_EXE \
    --sn platform \
    --op PublicListUserWalletTransactions \
    --currencyCode 'MpdXqcqh' \
    --namespace $AB_NAMESPACE \
    --userId 'T3BvTv9D' \
    --limit '70' \
    --offset '35' \
    > test.out 2>&1
eval_tap $? 441 'PublicListUserWalletTransactions' test.out

#- 442 QueryItems1
$CLI_EXE \
    --sn platform \
    --op QueryItems1 \
    --namespace $AB_NAMESPACE \
    --appType 'DEMO' \
    --availableDate 'FsCYnbkF' \
    --baseAppId 'ZE9sCyRh' \
    --categoryPath 'GRlxHhRP' \
    --features 'tTlqhyTF' \
    --includeSubCategoryItem 'true' \
    --itemName '7Gg16J7v' \
    --itemStatus 'ACTIVE' \
    --itemType 'EXTENSION' \
    --limit '55' \
    --offset '53' \
    --region 'ccUFB0Jr' \
    --sectionExclusive 'true' \
    --sortBy '["name:desc", "updatedAt:asc", "createdAt"]' \
    --storeId 'LYE61dRR' \
    --tags 'yivp2CFT' \
    --targetNamespace 'aN7shm5Z' \
    --withTotal 'false' \
    > test.out 2>&1
eval_tap $? 442 'QueryItems1' test.out

#- 443 ImportStore1
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op ImportStore1 \
    --namespace $AB_NAMESPACE \
    --storeId 'hKNsw7M5' \
    --strictMode 'true' \
    --upload file $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 443 'ImportStore1' test.out

#- 444 ExportStore1
# body param: body
echo '{"itemIds": ["9L5nBhkn", "DMFPjpxO", "UfT8FWc0"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ExportStore1 \
    --namespace $AB_NAMESPACE \
    --storeId 'NkOCYPw0' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 444 'ExportStore1' test.out

#- 445 FulfillRewardsV2
# body param: body
echo '{"entitlementCollectionId": "gE28gp3C", "entitlementOrigin": "System", "metadata": {"vG2Bu5eX": {}, "hP9OfzIE": {}, "1nP0GzXS": {}}, "origin": "GooglePlay", "rewards": [{"currency": {"currencyCode": "DZ9GeJH9", "namespace": "bJHXnHwj"}, "item": {"itemId": "JpoZzLR1", "itemSku": "DrMLEgiG", "itemType": "7I7LUOAf"}, "quantity": 65, "type": "ITEM"}, {"currency": {"currencyCode": "ljtSTTWj", "namespace": "fGN77X9l"}, "item": {"itemId": "wXwsVfer", "itemSku": "s6dK2ECE", "itemType": "yDWcC5i3"}, "quantity": 8, "type": "CURRENCY"}, {"currency": {"currencyCode": "EUHdI3K0", "namespace": "pr765kfH"}, "item": {"itemId": "zXHXNZsW", "itemSku": "HWu7KMID", "itemType": "oNDy16jG"}, "quantity": 82, "type": "CURRENCY"}], "source": "REDEEM_CODE", "transactionId": "CQIIEYir"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op FulfillRewardsV2 \
    --namespace $AB_NAMESPACE \
    --userId 'Nelw63Na' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 445 'FulfillRewardsV2' test.out


# remove artifacts
rm -f "$CLI_TOKEN_FILE"
rm -f "$TEMP_JSON_INPUT"
rm -f "$TEMP_FILE_UPLOAD"

exit $EXIT_CODE