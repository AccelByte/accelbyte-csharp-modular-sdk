#!/usr/bin/env bash

# Copyright (c) 2021 AccelByte Inc. All Rights Reserved.
# This is licensed software from AccelByte Inc, for limitations
# and restrictions contact your company contract manager.

# This code is generated by tool. DO NOT EDIT.

# Meta:
# - random seed: 
# - template file: 

# Instructions:
# - Run the Justice SDK Mock Server first before running this script.

export AB_BASE_URL="http://127.0.0.1:8080"
export AB_CLIENT_ID="admin"
export AB_CLIENT_SECRET="admin"
export AB_NAMESPACE="test"
export AB_APP_NAME="UnitTest"

EXIT_CODE=0

eval_tap() {
  if [ $1 -eq 0 ]; then
    echo "ok $2 - $3"
  else
    EXIT_CODE=1
    echo "not ok $2 - $3"
    sed 's/^/# /g' $4
  fi
  rm -f $4
}

CLI_EXE="AccelByte.Sdk.Sample.Cli"
CLI_TOKEN_FILE="$(dirname "$(which $CLI_EXE)")/token.json"
TEMP_JSON_INPUT="input_json.json"
TEMP_FILE_UPLOAD="file_upload.bin"

echo "TAP version 13"
echo "1..444"

#- 1 Login
$CLI_EXE --op login --lt user --user user --pass user > test.out 2>&1
eval_tap $? 1 'Login' test.out

if [ $EXIT_CODE -ne 0 ]; then
  echo "Bail out! Login failed."
  exit $EXIT_CODE
fi

# echo "foo" > "$CLI_TOKEN_FILE"

#- 2 ListFulfillmentScripts
$CLI_EXE \
    --sn platform \
    --op ListFulfillmentScripts \
    > test.out 2>&1
eval_tap $? 2 'ListFulfillmentScripts' test.out

#- 3 GetFulfillmentScript
$CLI_EXE \
    --sn platform \
    --op GetFulfillmentScript \
    --id 'gyk8iGJt' \
    > test.out 2>&1
eval_tap $? 3 'GetFulfillmentScript' test.out

#- 4 CreateFulfillmentScript
# body param: body
echo '{"grantDays": "RrhH2ntY"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateFulfillmentScript \
    --id 'tY0vn2K9' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 4 'CreateFulfillmentScript' test.out

#- 5 DeleteFulfillmentScript
$CLI_EXE \
    --sn platform \
    --op DeleteFulfillmentScript \
    --id 'zpXQatVn' \
    > test.out 2>&1
eval_tap $? 5 'DeleteFulfillmentScript' test.out

#- 6 UpdateFulfillmentScript
# body param: body
echo '{"grantDays": "PqkMYOu9"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateFulfillmentScript \
    --id 'g4LMRVOk' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 6 'UpdateFulfillmentScript' test.out

#- 7 ListItemTypeConfigs
$CLI_EXE \
    --sn platform \
    --op ListItemTypeConfigs \
    > test.out 2>&1
eval_tap $? 7 'ListItemTypeConfigs' test.out

#- 8 CreateItemTypeConfig
# body param: body
echo '{"clazz": "snn8xApa", "dryRun": false, "fulfillmentUrl": "Z1dHdIUG", "itemType": "EXTENSION", "purchaseConditionUrl": "RhW1JrJ8"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateItemTypeConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 8 'CreateItemTypeConfig' test.out

#- 9 SearchItemTypeConfig
$CLI_EXE \
    --sn platform \
    --op SearchItemTypeConfig \
    --clazz 'dFF4MuMk' \
    --itemType 'APP' \
    > test.out 2>&1
eval_tap $? 9 'SearchItemTypeConfig' test.out

#- 10 GetItemTypeConfig
$CLI_EXE \
    --sn platform \
    --op GetItemTypeConfig \
    --id 'K5m7O4b5' \
    > test.out 2>&1
eval_tap $? 10 'GetItemTypeConfig' test.out

#- 11 UpdateItemTypeConfig
# body param: body
echo '{"clazz": "EofMG8KF", "dryRun": true, "fulfillmentUrl": "aIthAE4B", "purchaseConditionUrl": "rFFppI8H"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateItemTypeConfig \
    --id 'z6o7MuFx' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 11 'UpdateItemTypeConfig' test.out

#- 12 DeleteItemTypeConfig
$CLI_EXE \
    --sn platform \
    --op DeleteItemTypeConfig \
    --id 'JWo1LovX' \
    > test.out 2>&1
eval_tap $? 12 'DeleteItemTypeConfig' test.out

#- 13 QueryCampaigns
$CLI_EXE \
    --sn platform \
    --op QueryCampaigns \
    --namespace $AB_NAMESPACE \
    --limit '80' \
    --name 'jqwcqUZj' \
    --offset '92' \
    --tag 'kOtKmpPw' \
    > test.out 2>&1
eval_tap $? 13 'QueryCampaigns' test.out

#- 14 CreateCampaign
# body param: body
echo '{"description": "AkTkSjId", "items": [{"extraSubscriptionDays": 93, "itemId": "6Rf08u20", "itemName": "aECaFXqn", "quantity": 64}, {"extraSubscriptionDays": 19, "itemId": "orHStYau", "itemName": "boicAgWU", "quantity": 41}, {"extraSubscriptionDays": 11, "itemId": "lrBT1612", "itemName": "HAOJkXK1", "quantity": 48}], "maxRedeemCountPerCampaignPerUser": 33, "maxRedeemCountPerCode": 85, "maxRedeemCountPerCodePerUser": 31, "maxSaleCount": 29, "name": "O6IDdfu2", "redeemEnd": "1983-03-27T00:00:00Z", "redeemStart": "1993-06-15T00:00:00Z", "redeemType": "ITEM", "status": "ACTIVE", "tags": ["hzXb6ceI", "rxQ0h9B5", "Uqb9gWRN"], "type": "REDEMPTION"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCampaign \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 14 'CreateCampaign' test.out

#- 15 GetCampaign
$CLI_EXE \
    --sn platform \
    --op GetCampaign \
    --campaignId '6eO1g7XL' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 15 'GetCampaign' test.out

#- 16 UpdateCampaign
# body param: body
echo '{"description": "6HWfUQ6c", "items": [{"extraSubscriptionDays": 5, "itemId": "9p04BPJ2", "itemName": "z941L1vO", "quantity": 58}, {"extraSubscriptionDays": 92, "itemId": "0AU65xi7", "itemName": "dvcLtL0K", "quantity": 19}, {"extraSubscriptionDays": 58, "itemId": "4B4ZRoMJ", "itemName": "t9bfQJbF", "quantity": 16}], "maxRedeemCountPerCampaignPerUser": 36, "maxRedeemCountPerCode": 3, "maxRedeemCountPerCodePerUser": 83, "maxSaleCount": 82, "name": "DVEqAhyX", "redeemEnd": "1971-11-06T00:00:00Z", "redeemStart": "1971-12-18T00:00:00Z", "redeemType": "ITEM", "status": "ACTIVE", "tags": ["kfEvbRlU", "d5cTbn8K", "BUJgAcfi"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCampaign \
    --campaignId '4nm30pNO' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 16 'UpdateCampaign' test.out

#- 17 GetCampaignDynamic
$CLI_EXE \
    --sn platform \
    --op GetCampaignDynamic \
    --campaignId 'glmlRCed' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 17 'GetCampaignDynamic' test.out

#- 18 GetLootBoxPluginConfig
$CLI_EXE \
    --sn platform \
    --op GetLootBoxPluginConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 18 'GetLootBoxPluginConfig' test.out

#- 19 UpdateLootBoxPluginConfig
# body param: body
echo '{"appConfig": {"appName": "YpLghnBA"}, "customConfig": {"connectionType": "TLS", "grpcServerAddress": "5B0qGXC1"}, "extendType": "APP"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateLootBoxPluginConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 19 'UpdateLootBoxPluginConfig' test.out

#- 20 DeleteLootBoxPluginConfig
$CLI_EXE \
    --sn platform \
    --op DeleteLootBoxPluginConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 20 'DeleteLootBoxPluginConfig' test.out

#- 21 UplodLootBoxPluginConfigCert
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UplodLootBoxPluginConfigCert \
    --namespace $AB_NAMESPACE \
    --upload $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 21 'UplodLootBoxPluginConfigCert' test.out

#- 22 GetLootBoxGrpcInfo
$CLI_EXE \
    --sn platform \
    --op GetLootBoxGrpcInfo \
    --namespace $AB_NAMESPACE \
    --force 'true' \
    > test.out 2>&1
eval_tap $? 22 'GetLootBoxGrpcInfo' test.out

#- 23 GetSectionPluginConfig
$CLI_EXE \
    --sn platform \
    --op GetSectionPluginConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 23 'GetSectionPluginConfig' test.out

#- 24 UpdateSectionPluginConfig
# body param: body
echo '{"appConfig": {"appName": "WoumlxrX"}, "customConfig": {"connectionType": "TLS", "grpcServerAddress": "KD7flduk"}, "extendType": "CUSTOM"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateSectionPluginConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 24 'UpdateSectionPluginConfig' test.out

#- 25 DeleteSectionPluginConfig
$CLI_EXE \
    --sn platform \
    --op DeleteSectionPluginConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 25 'DeleteSectionPluginConfig' test.out

#- 26 UploadSectionPluginConfigCert
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UploadSectionPluginConfigCert \
    --namespace $AB_NAMESPACE \
    --upload $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 26 'UploadSectionPluginConfigCert' test.out

#- 27 GetRootCategories
$CLI_EXE \
    --sn platform \
    --op GetRootCategories \
    --namespace $AB_NAMESPACE \
    --storeId 'KpyAEfeM' \
    > test.out 2>&1
eval_tap $? 27 'GetRootCategories' test.out

#- 28 CreateCategory
# body param: body
echo '{"categoryPath": "0lzKLgSZ", "localizationDisplayNames": {"eRED4kNG": "NT9OS657", "XkKqXPHV": "qZOMQedw", "L48vtpxj": "YGYkF8U0"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCategory \
    --namespace $AB_NAMESPACE \
    --storeId '9pJW1Nu9' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 28 'CreateCategory' test.out

#- 29 ListCategoriesBasic
$CLI_EXE \
    --sn platform \
    --op ListCategoriesBasic \
    --namespace $AB_NAMESPACE \
    --storeId 'YNYRHsHe' \
    > test.out 2>&1
eval_tap $? 29 'ListCategoriesBasic' test.out

#- 30 GetCategory
$CLI_EXE \
    --sn platform \
    --op GetCategory \
    --categoryPath 'OaiMsbpa' \
    --namespace $AB_NAMESPACE \
    --storeId 'raoK2hmx' \
    > test.out 2>&1
eval_tap $? 30 'GetCategory' test.out

#- 31 UpdateCategory
# body param: body
echo '{"localizationDisplayNames": {"9HXqNnac": "T5Gk1o0B", "1EOkOUUc": "PGAfh9vS", "K2QJj6Bh": "BOqdSt4F"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCategory \
    --categoryPath 'qVP4LyiA' \
    --namespace $AB_NAMESPACE \
    --storeId '2ljVGHR3' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 31 'UpdateCategory' test.out

#- 32 DeleteCategory
$CLI_EXE \
    --sn platform \
    --op DeleteCategory \
    --categoryPath 'vWnbKc2u' \
    --namespace $AB_NAMESPACE \
    --storeId 'm7NqscaV' \
    > test.out 2>&1
eval_tap $? 32 'DeleteCategory' test.out

#- 33 GetChildCategories
$CLI_EXE \
    --sn platform \
    --op GetChildCategories \
    --categoryPath 'dKMlUFI7' \
    --namespace $AB_NAMESPACE \
    --storeId 'KnkL7shG' \
    > test.out 2>&1
eval_tap $? 33 'GetChildCategories' test.out

#- 34 GetDescendantCategories
$CLI_EXE \
    --sn platform \
    --op GetDescendantCategories \
    --categoryPath 'kNpvowvz' \
    --namespace $AB_NAMESPACE \
    --storeId 'qSoYfwfw' \
    > test.out 2>&1
eval_tap $? 34 'GetDescendantCategories' test.out

#- 35 QueryCodes
$CLI_EXE \
    --sn platform \
    --op QueryCodes \
    --campaignId 'eCFXIV5y' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --batchNo '72' \
    --code 'Cx2adFtz' \
    --limit '26' \
    --offset '18' \
    > test.out 2>&1
eval_tap $? 35 'QueryCodes' test.out

#- 36 CreateCodes
# body param: body
echo '{"quantity": 40}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCodes \
    --campaignId 'HOroP3wB' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 36 'CreateCodes' test.out

#- 37 Download
$CLI_EXE \
    --sn platform \
    --op Download \
    --campaignId 'ilWZoEdO' \
    --namespace $AB_NAMESPACE \
    --batchNo '67' \
    > test.out 2>&1
eval_tap $? 37 'Download' test.out

#- 38 BulkDisableCodes
$CLI_EXE \
    --sn platform \
    --op BulkDisableCodes \
    --campaignId 'Qdij3zKR' \
    --namespace $AB_NAMESPACE \
    --batchNo '39' \
    > test.out 2>&1
eval_tap $? 38 'BulkDisableCodes' test.out

#- 39 BulkEnableCodes
$CLI_EXE \
    --sn platform \
    --op BulkEnableCodes \
    --campaignId 'HETldguJ' \
    --namespace $AB_NAMESPACE \
    --batchNo '17' \
    > test.out 2>&1
eval_tap $? 39 'BulkEnableCodes' test.out

#- 40 QueryRedeemHistory
$CLI_EXE \
    --sn platform \
    --op QueryRedeemHistory \
    --campaignId 'BedTJaEw' \
    --namespace $AB_NAMESPACE \
    --code 'YCmqoRuK' \
    --limit '48' \
    --offset '20' \
    --userId 'IdfxT12V' \
    > test.out 2>&1
eval_tap $? 40 'QueryRedeemHistory' test.out

#- 41 GetCode
$CLI_EXE \
    --sn platform \
    --op GetCode \
    --code 'lukk5f92' \
    --namespace $AB_NAMESPACE \
    --redeemable 'false' \
    > test.out 2>&1
eval_tap $? 41 'GetCode' test.out

#- 42 DisableCode
$CLI_EXE \
    --sn platform \
    --op DisableCode \
    --code '1ItGScQv' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 42 'DisableCode' test.out

#- 43 EnableCode
$CLI_EXE \
    --sn platform \
    --op EnableCode \
    --code 'gIeTUO7M' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 43 'EnableCode' test.out

#- 44 GetServicePluginConfig
eval_tap 0 44 'GetServicePluginConfig # SKIP deprecated' test.out

#- 45 UpdateServicePluginConfig
eval_tap 0 45 'UpdateServicePluginConfig # SKIP deprecated' test.out

#- 46 DeleteServicePluginConfig
eval_tap 0 46 'DeleteServicePluginConfig # SKIP deprecated' test.out

#- 47 ListCurrencies
$CLI_EXE \
    --sn platform \
    --op ListCurrencies \
    --namespace $AB_NAMESPACE \
    --currencyType 'VIRTUAL' \
    > test.out 2>&1
eval_tap $? 47 'ListCurrencies' test.out

#- 48 CreateCurrency
# body param: body
echo '{"currencyCode": "x8GQ5OQG", "currencySymbol": "ZDlDiAZZ", "currencyType": "VIRTUAL", "decimals": 7, "localizationDescriptions": {"NM56u4oG": "5VmX6esr", "4MjYND8d": "IvjCq5yl", "Kxt7t17R": "hYqnifzN"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCurrency \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 48 'CreateCurrency' test.out

#- 49 UpdateCurrency
# body param: body
echo '{"localizationDescriptions": {"Va0aIHfA": "CxZVpE7y", "H2XWg66F": "8cxQBrDE", "3xwEzh70": "oS4b8oVP"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCurrency \
    --currencyCode 'yrUW25LS' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 49 'UpdateCurrency' test.out

#- 50 DeleteCurrency
$CLI_EXE \
    --sn platform \
    --op DeleteCurrency \
    --currencyCode 'UsyPPOOr' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 50 'DeleteCurrency' test.out

#- 51 GetCurrencyConfig
$CLI_EXE \
    --sn platform \
    --op GetCurrencyConfig \
    --currencyCode 'utZ1onba' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 51 'GetCurrencyConfig' test.out

#- 52 GetCurrencySummary
$CLI_EXE \
    --sn platform \
    --op GetCurrencySummary \
    --currencyCode 'NrfpcrOG' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 52 'GetCurrencySummary' test.out

#- 53 GetDLCItemConfig
$CLI_EXE \
    --sn platform \
    --op GetDLCItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 53 'GetDLCItemConfig' test.out

#- 54 UpdateDLCItemConfig
# body param: body
echo '{"data": [{"id": "zTBaoYUq", "rewards": [{"currency": {"currencyCode": "qdTTGTGf", "namespace": "xEkJtpmd"}, "item": {"itemId": "Mm1g6z7s", "itemSku": "081ZBEC7", "itemType": "trii3OE2"}, "quantity": 55, "type": "CURRENCY"}, {"currency": {"currencyCode": "nAgJVM9O", "namespace": "Fxuybqmt"}, "item": {"itemId": "6ab5SoCY", "itemSku": "tNbxPRSK", "itemType": "KHH3IfsV"}, "quantity": 49, "type": "ITEM"}, {"currency": {"currencyCode": "Ru3nYMj8", "namespace": "hMAOPKEM"}, "item": {"itemId": "H0aDAp0R", "itemSku": "a27v90hC", "itemType": "WHx5mbKr"}, "quantity": 13, "type": "ITEM"}]}, {"id": "pqsHxxAX", "rewards": [{"currency": {"currencyCode": "Ievs6si3", "namespace": "xoaFmcYW"}, "item": {"itemId": "jFO4FSt3", "itemSku": "n8SLglrb", "itemType": "NRvmZsMe"}, "quantity": 11, "type": "CURRENCY"}, {"currency": {"currencyCode": "UAQx5ySK", "namespace": "8eTRCKxD"}, "item": {"itemId": "z369WVut", "itemSku": "59nrpVEa", "itemType": "8r7alo1D"}, "quantity": 100, "type": "CURRENCY"}, {"currency": {"currencyCode": "7b7EoFOj", "namespace": "FTDeqjd4"}, "item": {"itemId": "6yafdFMO", "itemSku": "A9U8VoLC", "itemType": "l8oY6dqS"}, "quantity": 0, "type": "ITEM"}]}, {"id": "2Q8fxuxS", "rewards": [{"currency": {"currencyCode": "HMPYz5Vz", "namespace": "uDTMeEii"}, "item": {"itemId": "H2F2cKFj", "itemSku": "PLAfFAHJ", "itemType": "WM4VtzB5"}, "quantity": 93, "type": "ITEM"}, {"currency": {"currencyCode": "jmt8x1tG", "namespace": "70D83nFo"}, "item": {"itemId": "Hx9oc7q0", "itemSku": "4mGLTTky", "itemType": "v8RkpB3g"}, "quantity": 36, "type": "ITEM"}, {"currency": {"currencyCode": "kWvn8rSB", "namespace": "pxsvvZz4"}, "item": {"itemId": "QuHGjdt0", "itemSku": "BiMoclae", "itemType": "kD4RXJYy"}, "quantity": 36, "type": "CURRENCY"}]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateDLCItemConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 54 'UpdateDLCItemConfig' test.out

#- 55 DeleteDLCItemConfig
$CLI_EXE \
    --sn platform \
    --op DeleteDLCItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 55 'DeleteDLCItemConfig' test.out

#- 56 GetPlatformDLCConfig
$CLI_EXE \
    --sn platform \
    --op GetPlatformDLCConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 56 'GetPlatformDLCConfig' test.out

#- 57 UpdatePlatformDLCConfig
# body param: body
echo '{"data": [{"platform": "EPICGAMES", "platformDlcIdMap": {"GtKZNjar": "YeQtoULq", "UBDcmEM8": "7ZCF3NHw", "weFxBHhS": "pDMgvAX4"}}, {"platform": "EPICGAMES", "platformDlcIdMap": {"9voEPAJq": "c7V2H0Rn", "jvhYwN0Z": "zrnp7AF8", "ByeQQn6N": "EvzJSgzs"}}, {"platform": "PSN", "platformDlcIdMap": {"WEJIr7KZ": "IZzOxVgk", "GUT0YcJc": "BOw2rRZT", "N3yyzaTM": "zuscmEYe"}}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePlatformDLCConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 57 'UpdatePlatformDLCConfig' test.out

#- 58 DeletePlatformDLCConfig
$CLI_EXE \
    --sn platform \
    --op DeletePlatformDLCConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 58 'DeletePlatformDLCConfig' test.out

#- 59 QueryEntitlements
$CLI_EXE \
    --sn platform \
    --op QueryEntitlements \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --appType 'DLC' \
    --entitlementClazz 'ENTITLEMENT' \
    --entitlementName 'FkwATcam' \
    --itemId '["FthnppWX", "JtyJcIiO", "D3PlE7uQ"]' \
    --limit '2' \
    --offset '63' \
    --origin 'System' \
    --userId '4cy0Eu33' \
    > test.out 2>&1
eval_tap $? 59 'QueryEntitlements' test.out

#- 60 QueryEntitlements1
$CLI_EXE \
    --sn platform \
    --op QueryEntitlements1 \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --itemIds '["32c8vkna", "o0nzBldo", "cRPyxjtU"]' \
    --limit '91' \
    --offset '26' \
    > test.out 2>&1
eval_tap $? 60 'QueryEntitlements1' test.out

#- 61 EnableEntitlementOriginFeature
$CLI_EXE \
    --sn platform \
    --op EnableEntitlementOriginFeature \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 61 'EnableEntitlementOriginFeature' test.out

#- 62 GetEntitlementConfigInfo
$CLI_EXE \
    --sn platform \
    --op GetEntitlementConfigInfo \
    --namespace $AB_NAMESPACE \
    --withoutCache 'true' \
    > test.out 2>&1
eval_tap $? 62 'GetEntitlementConfigInfo' test.out

#- 63 GrantEntitlements
# body param: body
echo '{"entitlementGrantList": [{"collectionId": "Zkt9QNRW", "endDate": "1985-03-31T00:00:00Z", "grantedCode": "aKvs5oVq", "itemId": "uMpocaSX", "itemNamespace": "agbFwlnf", "language": "XX", "origin": "IOS", "quantity": 63, "region": "uZT8F5gR", "source": "IAP", "startDate": "1984-09-11T00:00:00Z", "storeId": "OkXJyLM1"}, {"collectionId": "Ed7DVCvd", "endDate": "1997-06-23T00:00:00Z", "grantedCode": "0PLeh4yx", "itemId": "kvP0AKyB", "itemNamespace": "6gCmuQEf", "language": "Js", "origin": "System", "quantity": 60, "region": "DbdZowbP", "source": "REWARD", "startDate": "1971-05-28T00:00:00Z", "storeId": "0J5Toyoi"}, {"collectionId": "5MCVAkY2", "endDate": "1981-12-10T00:00:00Z", "grantedCode": "ewTUsy38", "itemId": "JErfwfHq", "itemNamespace": "Yc3jrxye", "language": "jcAS", "origin": "GooglePlay", "quantity": 53, "region": "PeMVpBBW", "source": "REFERRAL_BONUS", "startDate": "1976-08-25T00:00:00Z", "storeId": "HQCGZxdz"}], "userIds": ["heqlOVDW", "dsjWIEje", "LQWJdp2L"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op GrantEntitlements \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 63 'GrantEntitlements' test.out

#- 64 RevokeEntitlements
# body param: body
echo '["nP9C9DEB", "66VXEmIq", "6I8EnvGv"]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RevokeEntitlements \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 64 'RevokeEntitlements' test.out

#- 65 GetEntitlement
$CLI_EXE \
    --sn platform \
    --op GetEntitlement \
    --entitlementId 'vkL9yQ29' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 65 'GetEntitlement' test.out

#- 66 QueryFulfillmentHistories
$CLI_EXE \
    --sn platform \
    --op QueryFulfillmentHistories \
    --namespace $AB_NAMESPACE \
    --limit '24' \
    --offset '19' \
    --status 'SUCCESS' \
    --userId 'vmEYiOJ0' \
    > test.out 2>&1
eval_tap $? 66 'QueryFulfillmentHistories' test.out

#- 67 QueryIAPClawbackHistory
$CLI_EXE \
    --sn platform \
    --op QueryIAPClawbackHistory \
    --namespace $AB_NAMESPACE \
    --endTime '1MXhLFoX' \
    --eventType 'REFUND' \
    --externalOrderId 'hhpNBo2W' \
    --limit '48' \
    --offset '72' \
    --startTime 'XMrmBmoA' \
    --status 'SUCCESS' \
    --userId 'BsoCLAtr' \
    > test.out 2>&1
eval_tap $? 67 'QueryIAPClawbackHistory' test.out

#- 68 MockPlayStationStreamEvent
# body param: body
echo '{"body": {"account": "HliZIwLw", "additionalData": {"entitlement": [{"clientTransaction": [{"amountConsumed": 96, "clientTransactionId": "k9tCxGdK"}, {"amountConsumed": 11, "clientTransactionId": "T9XbN7Os"}, {"amountConsumed": 88, "clientTransactionId": "zzOn6Out"}], "entitlementId": "XGsqdJYJ", "usageCount": 74}, {"clientTransaction": [{"amountConsumed": 61, "clientTransactionId": "Hq33Cl1H"}, {"amountConsumed": 78, "clientTransactionId": "dxYWZ7Id"}, {"amountConsumed": 34, "clientTransactionId": "qO9WTqKb"}], "entitlementId": "wNVfgWec", "usageCount": 80}, {"clientTransaction": [{"amountConsumed": 13, "clientTransactionId": "0QgW38Ft"}, {"amountConsumed": 85, "clientTransactionId": "uVctKwZR"}, {"amountConsumed": 58, "clientTransactionId": "jJp0zIoo"}], "entitlementId": "wYkxSQLi", "usageCount": 17}], "purpose": "uz8bwRLI"}, "originalTitleName": "4bJOg63m", "paymentProductSKU": "fsQxOI7K", "purchaseDate": "QYRn2Lrn", "sourceOrderItemId": "JIIzyRPr", "titleName": "yxYDpuKo"}, "eventDomain": "FRmPXwew", "eventSource": "CqMik7Ik", "eventType": "JUPwEilb", "eventVersion": 15, "id": "WnzmHPIc", "timestamp": "rLaV26Pn"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op MockPlayStationStreamEvent \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 68 'MockPlayStationStreamEvent' test.out

#- 69 GetAppleIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetAppleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 69 'GetAppleIAPConfig' test.out

#- 70 UpdateAppleIAPConfig
# body param: body
echo '{"bundleId": "zpkWgFcF", "password": "QLmjwy88"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateAppleIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 70 'UpdateAppleIAPConfig' test.out

#- 71 DeleteAppleIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteAppleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 71 'DeleteAppleIAPConfig' test.out

#- 72 GetEpicGamesIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetEpicGamesIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 72 'GetEpicGamesIAPConfig' test.out

#- 73 UpdateEpicGamesIAPConfig
# body param: body
echo '{"sandboxId": "UDt9qh37"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateEpicGamesIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 73 'UpdateEpicGamesIAPConfig' test.out

#- 74 DeleteEpicGamesIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteEpicGamesIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 74 'DeleteEpicGamesIAPConfig' test.out

#- 75 GetGoogleIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetGoogleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 75 'GetGoogleIAPConfig' test.out

#- 76 UpdateGoogleIAPConfig
# body param: body
echo '{"applicationName": "YvSO7lkn", "serviceAccountId": "iVK23Ydf"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateGoogleIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 76 'UpdateGoogleIAPConfig' test.out

#- 77 DeleteGoogleIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteGoogleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 77 'DeleteGoogleIAPConfig' test.out

#- 78 UpdateGoogleP12File
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UpdateGoogleP12File \
    --namespace $AB_NAMESPACE \
    --upload $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 78 'UpdateGoogleP12File' test.out

#- 79 GetIAPItemConfig
$CLI_EXE \
    --sn platform \
    --op GetIAPItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 79 'GetIAPItemConfig' test.out

#- 80 UpdateIAPItemConfig
# body param: body
echo '{"data": [{"itemIdentity": "MUd8Re7y", "itemIdentityType": "ITEM_SKU", "platformProductIdMap": {"l7eRkFt2": "RnFiFKu8", "wQIwb6BE": "5z4AU8ca", "loaogv0e": "wsxaUipg"}}, {"itemIdentity": "o9QsElkW", "itemIdentityType": "ITEM_SKU", "platformProductIdMap": {"2hZI6SOa": "P7i0dvHG", "V6OQLI6V": "XCZFI9KS", "BAeHLeqq": "rHoN1H06"}}, {"itemIdentity": "p0uH3HSY", "itemIdentityType": "ITEM_SKU", "platformProductIdMap": {"eJcZs7QY": "WRHnxy49", "DSNZiECv": "NVQSfyjn", "WN44sKt0": "Cdg1Tl6Z"}}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateIAPItemConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 80 'UpdateIAPItemConfig' test.out

#- 81 DeleteIAPItemConfig
$CLI_EXE \
    --sn platform \
    --op DeleteIAPItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 81 'DeleteIAPItemConfig' test.out

#- 82 GetOculusIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetOculusIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 82 'GetOculusIAPConfig' test.out

#- 83 UpdateOculusIAPConfig
# body param: body
echo '{"appId": "tKtm2nIT", "appSecret": "fEBQUPSh"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateOculusIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 83 'UpdateOculusIAPConfig' test.out

#- 84 DeleteOculusIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteOculusIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 84 'DeleteOculusIAPConfig' test.out

#- 85 GetPlayStationIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetPlayStationIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 85 'GetPlayStationIAPConfig' test.out

#- 86 UpdatePlaystationIAPConfig
# body param: body
echo '{"backOfficeServerClientId": "MIF7mrBa", "backOfficeServerClientSecret": "DbbMQZej", "enableStreamJob": false, "environment": "ok3c70da", "streamName": "baWgNMZp", "streamPartnerName": "v1LbxIgB"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePlaystationIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 86 'UpdatePlaystationIAPConfig' test.out

#- 87 DeletePlaystationIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeletePlaystationIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 87 'DeletePlaystationIAPConfig' test.out

#- 88 ValidateExistedPlaystationIAPConfig
$CLI_EXE \
    --sn platform \
    --op ValidateExistedPlaystationIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 88 'ValidateExistedPlaystationIAPConfig' test.out

#- 89 ValidatePlaystationIAPConfig
# body param: body
echo '{"backOfficeServerClientId": "rUDCc3yO", "backOfficeServerClientSecret": "bOqzOWnE", "enableStreamJob": false, "environment": "jH253iFy", "streamName": "DKRE8ZMb", "streamPartnerName": "TLHsJZqO"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ValidatePlaystationIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 89 'ValidatePlaystationIAPConfig' test.out

#- 90 GetSteamIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetSteamIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 90 'GetSteamIAPConfig' test.out

#- 91 UpdateSteamIAPConfig
# body param: body
echo '{"appId": "x18wvZuk", "publisherAuthenticationKey": "IZDCS5SL"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateSteamIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 91 'UpdateSteamIAPConfig' test.out

#- 92 DeleteSteamIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteSteamIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 92 'DeleteSteamIAPConfig' test.out

#- 93 GetTwitchIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetTwitchIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 93 'GetTwitchIAPConfig' test.out

#- 94 UpdateTwitchIAPConfig
# body param: body
echo '{"clientId": "QSV2BD6j", "clientSecret": "6L8wXIDr", "organizationId": "l3lzpW8P"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateTwitchIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 94 'UpdateTwitchIAPConfig' test.out

#- 95 DeleteTwitchIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteTwitchIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 95 'DeleteTwitchIAPConfig' test.out

#- 96 GetXblIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetXblIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 96 'GetXblIAPConfig' test.out

#- 97 UpdateXblIAPConfig
# body param: body
echo '{"relyingPartyCert": "tGwYbjA1"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXblIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 97 'UpdateXblIAPConfig' test.out

#- 98 DeleteXblAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteXblAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 98 'DeleteXblAPConfig' test.out

#- 99 UpdateXblBPCertFile
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UpdateXblBPCertFile \
    --namespace $AB_NAMESPACE \
    --upload $TEMP_FILE_UPLOAD \
    --password 'jXdgk7Kv' \
    > test.out 2>&1
eval_tap $? 99 'UpdateXblBPCertFile' test.out

#- 100 DownloadInvoiceDetails
$CLI_EXE \
    --sn platform \
    --op DownloadInvoiceDetails \
    --namespace $AB_NAMESPACE \
    --feature 'F8s7vZ8U' \
    --itemId 'YoBY7vzh' \
    --itemType 'APP' \
    --endTime 'IjPLbUN1' \
    --startTime 'E8Lwx1is' \
    > test.out 2>&1
eval_tap $? 100 'DownloadInvoiceDetails' test.out

#- 101 GenerateInvoiceSummary
$CLI_EXE \
    --sn platform \
    --op GenerateInvoiceSummary \
    --namespace $AB_NAMESPACE \
    --feature '5jUesksR' \
    --itemId 'ecVEAfww' \
    --itemType 'INGAMEITEM' \
    --endTime 'SU6mwZJc' \
    --startTime 'UOHaaVGz' \
    > test.out 2>&1
eval_tap $? 101 'GenerateInvoiceSummary' test.out

#- 102 SyncInGameItem
# body param: body
echo '{"categoryPath": "5NDx64uF", "targetItemId": "fxkzlPLo", "targetNamespace": "2sfJsiCL"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncInGameItem \
    --namespace $AB_NAMESPACE \
    --storeId 'Rhr8FzPd' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 102 'SyncInGameItem' test.out

#- 103 CreateItem
# body param: body
echo '{"appId": "wPWEZmws", "appType": "GAME", "baseAppId": "raOz9mBJ", "boothName": "PJ9LuanD", "categoryPath": "60QuCJx7", "clazz": "rIbQ9tOF", "displayOrder": 77, "entitlementType": "CONSUMABLE", "ext": {"P0tpn9Sk": {}, "v46Snq5B": {}, "ypzAtrQ0": {}}, "features": ["KkQ1MHPb", "vaBMUkqs", "rljZdWfJ"], "flexible": true, "images": [{"as": "KZpcL60M", "caption": "lyRsWxHQ", "height": 97, "imageUrl": "VtySIWA4", "smallImageUrl": "a9aGXjps", "width": 84}, {"as": "6x5x4TFh", "caption": "I7W8QjqN", "height": 23, "imageUrl": "LpCCTFhe", "smallImageUrl": "94ALPkSk", "width": 83}, {"as": "WdBHOwwV", "caption": "ZzeT72dX", "height": 76, "imageUrl": "EXzFAfxE", "smallImageUrl": "snGAu3LN", "width": 18}], "inventoryConfig": {"customAttributes": {"NdBtOjfo": {}, "Z8LfBzD0": {}, "nWShzst7": {}}, "serverCustomAttributes": {"OMX9zgiR": {}, "fWAB8RMm": {}, "FZMaikUA": {}}, "slotUsed": 84}, "itemIds": ["6pIWVeDh", "UiaB0vTD", "TEcLETZ7"], "itemQty": {"ZbvWL14S": 63, "zP63bYpm": 9, "bxTcrcNk": 39}, "itemType": "BUNDLE", "listable": true, "localizations": {"sZb2mRh5": {"description": "EKNJfg7j", "localExt": {"PapxAlWq": {}, "8DfsgoMo": {}, "lQi5yQXS": {}}, "longDescription": "xdXzKGNV", "title": "sbBhHpHE"}, "HnT9cyVT": {"description": "xzdR0AYo", "localExt": {"HUcruyhi": {}, "s745FEaA": {}, "jhuvZInD": {}}, "longDescription": "gUPQUGsY", "title": "m4FqbkMP"}, "hhF9gYB6": {"description": "R9SWuBNb", "localExt": {"Vq0IUen2": {}, "T8QbrsBE": {}, "TDuSgC7S": {}}, "longDescription": "UvGebqnU", "title": "QOteEHuH"}}, "lootBoxConfig": {"rewardCount": 36, "rewards": [{"lootBoxItems": [{"count": 7, "duration": 64, "endDate": "1978-07-04T00:00:00Z", "itemId": "AMmszMz1", "itemSku": "qhKCSqS9", "itemType": "JXr7JTqC"}, {"count": 73, "duration": 23, "endDate": "1984-04-30T00:00:00Z", "itemId": "gSHDCZ6j", "itemSku": "7hQrrd7F", "itemType": "JKkDzt33"}, {"count": 74, "duration": 24, "endDate": "1973-09-04T00:00:00Z", "itemId": "DGX9imMU", "itemSku": "97RcjJPo", "itemType": "UG8FZbRx"}], "name": "5YbaO4IE", "odds": 0.9392812805543881, "type": "REWARD_GROUP", "weight": 17}, {"lootBoxItems": [{"count": 21, "duration": 36, "endDate": "1991-07-09T00:00:00Z", "itemId": "6IhCMHpQ", "itemSku": "COxA80eQ", "itemType": "QokDKeEa"}, {"count": 93, "duration": 68, "endDate": "1971-11-30T00:00:00Z", "itemId": "35PEyTMM", "itemSku": "CFMlmmFD", "itemType": "4uYNTiCP"}, {"count": 33, "duration": 23, "endDate": "1996-05-26T00:00:00Z", "itemId": "WdTxkhnT", "itemSku": "IA1weWZA", "itemType": "Kh4DeKkl"}], "name": "FrYeYzI8", "odds": 0.07954580354639729, "type": "REWARD", "weight": 37}, {"lootBoxItems": [{"count": 92, "duration": 100, "endDate": "1975-12-10T00:00:00Z", "itemId": "oFnqQOlY", "itemSku": "KN2zl6LE", "itemType": "of5kbETA"}, {"count": 15, "duration": 85, "endDate": "1971-12-15T00:00:00Z", "itemId": "NKyHLxE3", "itemSku": "iLZLoVyV", "itemType": "fCXbxDgD"}, {"count": 89, "duration": 63, "endDate": "1998-06-25T00:00:00Z", "itemId": "M5OiKyEE", "itemSku": "SM0oRiNM", "itemType": "T2gJkDIv"}], "name": "j8HLJ9Kr", "odds": 0.1431448707106442, "type": "REWARD", "weight": 87}], "rollFunction": "DEFAULT"}, "maxCount": 24, "maxCountPerUser": 100, "name": "d8gbkmdz", "optionBoxConfig": {"boxItems": [{"count": 9, "duration": 82, "endDate": "1982-04-20T00:00:00Z", "itemId": "DuUdm2pe", "itemSku": "W37tKApn", "itemType": "BnIiaL5m"}, {"count": 64, "duration": 70, "endDate": "1991-01-25T00:00:00Z", "itemId": "d47ugQEN", "itemSku": "vKU0iAoF", "itemType": "YMcYvrwX"}, {"count": 73, "duration": 67, "endDate": "1973-03-26T00:00:00Z", "itemId": "8ZTcJOUX", "itemSku": "CSqYmhbM", "itemType": "nlw7cfcY"}]}, "purchasable": false, "recurring": {"cycle": "WEEKLY", "fixedFreeDays": 21, "fixedTrialCycles": 32, "graceDays": 99}, "regionData": {"mjeiPSfK": [{"currencyCode": "PiZ13Pqw", "currencyNamespace": "YJSMPkuM", "currencyType": "REAL", "discountAmount": 87, "discountExpireAt": "1988-03-07T00:00:00Z", "discountPercentage": 96, "discountPurchaseAt": "1976-12-29T00:00:00Z", "expireAt": "1988-02-15T00:00:00Z", "price": 46, "purchaseAt": "1988-11-16T00:00:00Z", "trialPrice": 80}, {"currencyCode": "VxPLKx9R", "currencyNamespace": "Eiy5f7yT", "currencyType": "VIRTUAL", "discountAmount": 78, "discountExpireAt": "1996-02-09T00:00:00Z", "discountPercentage": 80, "discountPurchaseAt": "1996-05-14T00:00:00Z", "expireAt": "1992-02-11T00:00:00Z", "price": 52, "purchaseAt": "1974-01-08T00:00:00Z", "trialPrice": 73}, {"currencyCode": "6wDZVdRV", "currencyNamespace": "l8fHOnz7", "currencyType": "REAL", "discountAmount": 54, "discountExpireAt": "1983-09-05T00:00:00Z", "discountPercentage": 25, "discountPurchaseAt": "1974-08-05T00:00:00Z", "expireAt": "1977-08-20T00:00:00Z", "price": 88, "purchaseAt": "1993-04-02T00:00:00Z", "trialPrice": 42}], "OPNM9ngZ": [{"currencyCode": "RzQw3yBn", "currencyNamespace": "AVCxvaZp", "currencyType": "VIRTUAL", "discountAmount": 22, "discountExpireAt": "1988-05-19T00:00:00Z", "discountPercentage": 56, "discountPurchaseAt": "1991-07-08T00:00:00Z", "expireAt": "1977-06-04T00:00:00Z", "price": 53, "purchaseAt": "1984-03-29T00:00:00Z", "trialPrice": 87}, {"currencyCode": "UWDuoLK3", "currencyNamespace": "jdTCXxX3", "currencyType": "REAL", "discountAmount": 0, "discountExpireAt": "1989-11-01T00:00:00Z", "discountPercentage": 47, "discountPurchaseAt": "1984-07-28T00:00:00Z", "expireAt": "1995-11-06T00:00:00Z", "price": 40, "purchaseAt": "1991-12-11T00:00:00Z", "trialPrice": 13}, {"currencyCode": "hkIrueMc", "currencyNamespace": "oveL7M5T", "currencyType": "VIRTUAL", "discountAmount": 70, "discountExpireAt": "1979-05-05T00:00:00Z", "discountPercentage": 41, "discountPurchaseAt": "1978-10-14T00:00:00Z", "expireAt": "1996-10-13T00:00:00Z", "price": 39, "purchaseAt": "1994-12-26T00:00:00Z", "trialPrice": 81}], "F2TZ6qzh": [{"currencyCode": "5a1jSj7Z", "currencyNamespace": "vjhF6PcT", "currencyType": "REAL", "discountAmount": 10, "discountExpireAt": "1992-07-30T00:00:00Z", "discountPercentage": 3, "discountPurchaseAt": "1994-01-09T00:00:00Z", "expireAt": "1994-02-01T00:00:00Z", "price": 79, "purchaseAt": "1985-09-03T00:00:00Z", "trialPrice": 58}, {"currencyCode": "CWLeB5NK", "currencyNamespace": "NkuvjkhI", "currencyType": "VIRTUAL", "discountAmount": 23, "discountExpireAt": "1998-03-20T00:00:00Z", "discountPercentage": 20, "discountPurchaseAt": "1998-05-24T00:00:00Z", "expireAt": "1974-10-11T00:00:00Z", "price": 65, "purchaseAt": "1999-07-17T00:00:00Z", "trialPrice": 48}, {"currencyCode": "w6TykkJe", "currencyNamespace": "uZMPVuQf", "currencyType": "REAL", "discountAmount": 75, "discountExpireAt": "1977-02-18T00:00:00Z", "discountPercentage": 65, "discountPurchaseAt": "1973-10-02T00:00:00Z", "expireAt": "1987-10-11T00:00:00Z", "price": 70, "purchaseAt": "1984-04-01T00:00:00Z", "trialPrice": 2}]}, "saleConfig": {"currencyCode": "rTLjvqyV", "price": 96}, "seasonType": "PASS", "sectionExclusive": true, "sellable": false, "sku": "KfjxbIGe", "stackable": false, "status": "ACTIVE", "tags": ["OtripPJY", "DKqnUd2v", "tE6pUsds"], "targetCurrencyCode": "sD6bJiUm", "targetNamespace": "rgLvJbWB", "thumbnailUrl": "jznJYnUg", "useCount": 29}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateItem \
    --namespace $AB_NAMESPACE \
    --storeId '8Pv6SaWW' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 103 'CreateItem' test.out

#- 104 GetItemByAppId
$CLI_EXE \
    --sn platform \
    --op GetItemByAppId \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --storeId '5nGlSxyu' \
    --appId 'oQCW9OsN' \
    > test.out 2>&1
eval_tap $? 104 'GetItemByAppId' test.out

#- 105 QueryItems
$CLI_EXE \
    --sn platform \
    --op QueryItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --appType 'DLC' \
    --availableDate '3bUcUC4c' \
    --baseAppId 'JfoNgDMv' \
    --categoryPath 'M95JYiPm' \
    --features '0OywG1MK' \
    --includeSubCategoryItem 'false' \
    --itemType 'COINS' \
    --limit '94' \
    --offset '25' \
    --region 'e3bQdp2K' \
    --sortBy '["createdAt:desc", "name:asc", "updatedAt:desc"]' \
    --storeId 'YNkrjQGN' \
    --tags '3ztDZiMz' \
    --targetNamespace 'Vpi9Jy0M' \
    > test.out 2>&1
eval_tap $? 105 'QueryItems' test.out

#- 106 ListBasicItemsByFeatures
$CLI_EXE \
    --sn platform \
    --op ListBasicItemsByFeatures \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --features '["RvPiIWwf", "bxFIOlcv", "02U67nd8"]' \
    > test.out 2>&1
eval_tap $? 106 'ListBasicItemsByFeatures' test.out

#- 107 GetItems
$CLI_EXE \
    --sn platform \
    --op GetItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --storeId 'hV85JxGM' \
    --itemIds 'gtbXBJua' \
    > test.out 2>&1
eval_tap $? 107 'GetItems' test.out

#- 108 GetItemBySku
$CLI_EXE \
    --sn platform \
    --op GetItemBySku \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --storeId 'bKPQ6t6T' \
    --sku '9zY83HdO' \
    > test.out 2>&1
eval_tap $? 108 'GetItemBySku' test.out

#- 109 GetLocaleItemBySku
$CLI_EXE \
    --sn platform \
    --op GetLocaleItemBySku \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --language 'peOKf70q' \
    --populateBundle 'false' \
    --region 'N4I5GO65' \
    --storeId 'J2grA4Ij' \
    --sku '57F2rYYo' \
    > test.out 2>&1
eval_tap $? 109 'GetLocaleItemBySku' test.out

#- 110 GetEstimatedPrice
$CLI_EXE \
    --sn platform \
    --op GetEstimatedPrice \
    --namespace $AB_NAMESPACE \
    --platform 'ipMeNv2u' \
    --region 'AVLx1G76' \
    --storeId 'j7ijqyE1' \
    --itemIds 'W1KrxyTI' \
    --userId 'WaxQ4jOZ' \
    > test.out 2>&1
eval_tap $? 110 'GetEstimatedPrice' test.out

#- 111 GetItemIdBySku
$CLI_EXE \
    --sn platform \
    --op GetItemIdBySku \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --storeId 'dkKq3S1E' \
    --sku 'StxiyMcm' \
    > test.out 2>&1
eval_tap $? 111 'GetItemIdBySku' test.out

#- 112 GetBulkItemIdBySkus
$CLI_EXE \
    --sn platform \
    --op GetBulkItemIdBySkus \
    --namespace $AB_NAMESPACE \
    --sku '["ceTL4Rui", "dCa6plJQ", "cZAlSZEI"]' \
    --storeId 'W2WdkFkR' \
    > test.out 2>&1
eval_tap $? 112 'GetBulkItemIdBySkus' test.out

#- 113 BulkGetLocaleItems
$CLI_EXE \
    --sn platform \
    --op BulkGetLocaleItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --language 'nxPwbJf1' \
    --region '64AGKjCh' \
    --storeId '9J1LliMR' \
    --itemIds 'HjUz9pos' \
    > test.out 2>&1
eval_tap $? 113 'BulkGetLocaleItems' test.out

#- 114 GetAvailablePredicateTypes
$CLI_EXE \
    --sn platform \
    --op GetAvailablePredicateTypes \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 114 'GetAvailablePredicateTypes' test.out

#- 115 ValidateItemPurchaseCondition
# body param: body
echo '{"itemIds": ["zXH5V2TO", "bcZjdTZr", "0Tib7Zrs"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ValidateItemPurchaseCondition \
    --namespace $AB_NAMESPACE \
    --platform 'WUyX5K3B' \
    --userId 'lAo9DW5T' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 115 'ValidateItemPurchaseCondition' test.out

#- 116 BulkUpdateRegionData
# body param: body
echo '{"changes": [{"itemIdentities": ["ZSztxn0E", "8a7Hi2mT", "O5wocoNK"], "itemIdentityType": "ITEM_ID", "regionData": {"bhCQe4sx": [{"currencyCode": "zDU2vpDC", "currencyNamespace": "Z4c3sGyl", "currencyType": "REAL", "discountAmount": 83, "discountExpireAt": "1989-09-05T00:00:00Z", "discountPercentage": 98, "discountPurchaseAt": "1987-11-25T00:00:00Z", "discountedPrice": 85, "expireAt": "1983-07-12T00:00:00Z", "price": 19, "purchaseAt": "1999-11-10T00:00:00Z", "trialPrice": 90}, {"currencyCode": "XIscqknO", "currencyNamespace": "6ghA8UL7", "currencyType": "VIRTUAL", "discountAmount": 13, "discountExpireAt": "1987-10-04T00:00:00Z", "discountPercentage": 54, "discountPurchaseAt": "1989-01-06T00:00:00Z", "discountedPrice": 99, "expireAt": "1978-08-14T00:00:00Z", "price": 100, "purchaseAt": "1993-04-29T00:00:00Z", "trialPrice": 56}, {"currencyCode": "WC35UYzG", "currencyNamespace": "ZplqqsHs", "currencyType": "REAL", "discountAmount": 3, "discountExpireAt": "1992-02-26T00:00:00Z", "discountPercentage": 24, "discountPurchaseAt": "1994-12-31T00:00:00Z", "discountedPrice": 22, "expireAt": "1979-01-27T00:00:00Z", "price": 56, "purchaseAt": "1995-06-25T00:00:00Z", "trialPrice": 85}], "OYrbCSlP": [{"currencyCode": "Sf0Ayz7i", "currencyNamespace": "8zXPpTzw", "currencyType": "VIRTUAL", "discountAmount": 2, "discountExpireAt": "1998-05-24T00:00:00Z", "discountPercentage": 25, "discountPurchaseAt": "1975-08-07T00:00:00Z", "discountedPrice": 85, "expireAt": "1977-04-11T00:00:00Z", "price": 28, "purchaseAt": "1992-07-03T00:00:00Z", "trialPrice": 88}, {"currencyCode": "S724HENU", "currencyNamespace": "Bs8DtXme", "currencyType": "VIRTUAL", "discountAmount": 44, "discountExpireAt": "1971-11-27T00:00:00Z", "discountPercentage": 91, "discountPurchaseAt": "1972-04-22T00:00:00Z", "discountedPrice": 17, "expireAt": "1989-11-02T00:00:00Z", "price": 78, "purchaseAt": "1998-09-25T00:00:00Z", "trialPrice": 88}, {"currencyCode": "1YlXWPYt", "currencyNamespace": "0fmSEHjt", "currencyType": "REAL", "discountAmount": 9, "discountExpireAt": "1998-12-30T00:00:00Z", "discountPercentage": 44, "discountPurchaseAt": "1988-06-27T00:00:00Z", "discountedPrice": 79, "expireAt": "1994-01-27T00:00:00Z", "price": 53, "purchaseAt": "1988-12-30T00:00:00Z", "trialPrice": 95}], "OqAjOEEa": [{"currencyCode": "h2IWKbgK", "currencyNamespace": "I67JYeK1", "currencyType": "VIRTUAL", "discountAmount": 3, "discountExpireAt": "1991-10-26T00:00:00Z", "discountPercentage": 60, "discountPurchaseAt": "1987-10-01T00:00:00Z", "discountedPrice": 5, "expireAt": "1972-09-17T00:00:00Z", "price": 1, "purchaseAt": "1978-11-28T00:00:00Z", "trialPrice": 77}, {"currencyCode": "zts3a6qz", "currencyNamespace": "bOy6nQfS", "currencyType": "VIRTUAL", "discountAmount": 28, "discountExpireAt": "1991-02-10T00:00:00Z", "discountPercentage": 46, "discountPurchaseAt": "1977-10-19T00:00:00Z", "discountedPrice": 56, "expireAt": "1991-10-31T00:00:00Z", "price": 86, "purchaseAt": "1997-10-16T00:00:00Z", "trialPrice": 71}, {"currencyCode": "KW2HgfBz", "currencyNamespace": "PZNbeix1", "currencyType": "REAL", "discountAmount": 47, "discountExpireAt": "1975-07-20T00:00:00Z", "discountPercentage": 67, "discountPurchaseAt": "1974-09-15T00:00:00Z", "discountedPrice": 28, "expireAt": "1997-03-13T00:00:00Z", "price": 58, "purchaseAt": "1999-10-06T00:00:00Z", "trialPrice": 64}]}}, {"itemIdentities": ["2EBzmD2d", "cQfVM3XI", "Ds2zyue3"], "itemIdentityType": "ITEM_SKU", "regionData": {"MPyru29B": [{"currencyCode": "QN2rMJjO", "currencyNamespace": "250AKY3Y", "currencyType": "VIRTUAL", "discountAmount": 54, "discountExpireAt": "1973-01-31T00:00:00Z", "discountPercentage": 9, "discountPurchaseAt": "1993-07-15T00:00:00Z", "discountedPrice": 99, "expireAt": "1976-08-25T00:00:00Z", "price": 98, "purchaseAt": "1993-02-14T00:00:00Z", "trialPrice": 35}, {"currencyCode": "4QgjDNgO", "currencyNamespace": "PyYthEVl", "currencyType": "REAL", "discountAmount": 15, "discountExpireAt": "1994-11-29T00:00:00Z", "discountPercentage": 65, "discountPurchaseAt": "1990-09-01T00:00:00Z", "discountedPrice": 16, "expireAt": "1990-02-09T00:00:00Z", "price": 64, "purchaseAt": "1991-03-22T00:00:00Z", "trialPrice": 39}, {"currencyCode": "TOP77F4I", "currencyNamespace": "gyc1x7cf", "currencyType": "REAL", "discountAmount": 33, "discountExpireAt": "1992-10-02T00:00:00Z", "discountPercentage": 23, "discountPurchaseAt": "1981-01-29T00:00:00Z", "discountedPrice": 13, "expireAt": "1998-08-10T00:00:00Z", "price": 98, "purchaseAt": "1983-06-25T00:00:00Z", "trialPrice": 94}], "urUO4GPn": [{"currencyCode": "SBKpnT7v", "currencyNamespace": "dt28aIw8", "currencyType": "REAL", "discountAmount": 89, "discountExpireAt": "1984-06-26T00:00:00Z", "discountPercentage": 26, "discountPurchaseAt": "1975-07-22T00:00:00Z", "discountedPrice": 97, "expireAt": "1996-03-18T00:00:00Z", "price": 37, "purchaseAt": "1996-11-11T00:00:00Z", "trialPrice": 62}, {"currencyCode": "umkrJS9L", "currencyNamespace": "9WERGYMj", "currencyType": "VIRTUAL", "discountAmount": 69, "discountExpireAt": "1991-03-18T00:00:00Z", "discountPercentage": 35, "discountPurchaseAt": "1985-10-15T00:00:00Z", "discountedPrice": 3, "expireAt": "1987-02-03T00:00:00Z", "price": 55, "purchaseAt": "1972-09-18T00:00:00Z", "trialPrice": 40}, {"currencyCode": "KJ2gNmmp", "currencyNamespace": "YCUnRhIb", "currencyType": "VIRTUAL", "discountAmount": 16, "discountExpireAt": "1999-03-10T00:00:00Z", "discountPercentage": 33, "discountPurchaseAt": "1996-11-26T00:00:00Z", "discountedPrice": 68, "expireAt": "1978-06-30T00:00:00Z", "price": 51, "purchaseAt": "1990-08-07T00:00:00Z", "trialPrice": 92}], "KJnKIxOg": [{"currencyCode": "8dHi6hJ2", "currencyNamespace": "b5TQhNlc", "currencyType": "VIRTUAL", "discountAmount": 41, "discountExpireAt": "1990-05-14T00:00:00Z", "discountPercentage": 91, "discountPurchaseAt": "1997-11-20T00:00:00Z", "discountedPrice": 75, "expireAt": "1989-01-30T00:00:00Z", "price": 14, "purchaseAt": "1971-03-03T00:00:00Z", "trialPrice": 42}, {"currencyCode": "EX16tDLX", "currencyNamespace": "RgpT6YoF", "currencyType": "REAL", "discountAmount": 46, "discountExpireAt": "1988-04-22T00:00:00Z", "discountPercentage": 9, "discountPurchaseAt": "1991-05-06T00:00:00Z", "discountedPrice": 65, "expireAt": "1997-01-02T00:00:00Z", "price": 83, "purchaseAt": "1980-11-08T00:00:00Z", "trialPrice": 77}, {"currencyCode": "lPkfuDef", "currencyNamespace": "GthqiZGT", "currencyType": "REAL", "discountAmount": 89, "discountExpireAt": "1996-04-26T00:00:00Z", "discountPercentage": 90, "discountPurchaseAt": "1978-08-16T00:00:00Z", "discountedPrice": 55, "expireAt": "1971-04-09T00:00:00Z", "price": 66, "purchaseAt": "1996-05-22T00:00:00Z", "trialPrice": 50}]}}, {"itemIdentities": ["GoKbz9it", "mLqHyn7g", "TGNwKRuT"], "itemIdentityType": "ITEM_SKU", "regionData": {"9DHNLUzd": [{"currencyCode": "s6bFxgoq", "currencyNamespace": "dL5fGP4c", "currencyType": "VIRTUAL", "discountAmount": 88, "discountExpireAt": "1993-03-30T00:00:00Z", "discountPercentage": 80, "discountPurchaseAt": "1990-06-23T00:00:00Z", "discountedPrice": 82, "expireAt": "1983-07-25T00:00:00Z", "price": 56, "purchaseAt": "1999-10-17T00:00:00Z", "trialPrice": 77}, {"currencyCode": "11S250JD", "currencyNamespace": "w0g6uAAa", "currencyType": "REAL", "discountAmount": 22, "discountExpireAt": "1990-08-28T00:00:00Z", "discountPercentage": 9, "discountPurchaseAt": "1971-01-07T00:00:00Z", "discountedPrice": 55, "expireAt": "1989-12-23T00:00:00Z", "price": 45, "purchaseAt": "1980-03-08T00:00:00Z", "trialPrice": 45}, {"currencyCode": "xCE2vuVc", "currencyNamespace": "HBZxXmS4", "currencyType": "VIRTUAL", "discountAmount": 75, "discountExpireAt": "1974-03-17T00:00:00Z", "discountPercentage": 46, "discountPurchaseAt": "1992-03-30T00:00:00Z", "discountedPrice": 25, "expireAt": "1982-02-24T00:00:00Z", "price": 68, "purchaseAt": "1997-05-25T00:00:00Z", "trialPrice": 49}], "BYewCTiP": [{"currencyCode": "vsD6T2gG", "currencyNamespace": "BMdTp4IQ", "currencyType": "REAL", "discountAmount": 1, "discountExpireAt": "1985-09-26T00:00:00Z", "discountPercentage": 44, "discountPurchaseAt": "1975-04-17T00:00:00Z", "discountedPrice": 21, "expireAt": "1976-09-26T00:00:00Z", "price": 73, "purchaseAt": "1997-05-25T00:00:00Z", "trialPrice": 73}, {"currencyCode": "skou9qf8", "currencyNamespace": "Kqv7qQVn", "currencyType": "VIRTUAL", "discountAmount": 27, "discountExpireAt": "1998-10-21T00:00:00Z", "discountPercentage": 70, "discountPurchaseAt": "1978-04-20T00:00:00Z", "discountedPrice": 36, "expireAt": "1973-10-12T00:00:00Z", "price": 75, "purchaseAt": "1984-01-21T00:00:00Z", "trialPrice": 52}, {"currencyCode": "AmEROlAs", "currencyNamespace": "1JgptHtz", "currencyType": "REAL", "discountAmount": 18, "discountExpireAt": "1974-07-21T00:00:00Z", "discountPercentage": 21, "discountPurchaseAt": "1980-12-04T00:00:00Z", "discountedPrice": 85, "expireAt": "1971-08-18T00:00:00Z", "price": 89, "purchaseAt": "1993-10-27T00:00:00Z", "trialPrice": 44}], "YKC4KVdp": [{"currencyCode": "L1GxKMsC", "currencyNamespace": "LG0JNC2e", "currencyType": "REAL", "discountAmount": 79, "discountExpireAt": "1976-03-24T00:00:00Z", "discountPercentage": 24, "discountPurchaseAt": "1995-09-21T00:00:00Z", "discountedPrice": 80, "expireAt": "1979-05-09T00:00:00Z", "price": 7, "purchaseAt": "1999-02-07T00:00:00Z", "trialPrice": 91}, {"currencyCode": "9kiT6AYT", "currencyNamespace": "Vn4ZnyNo", "currencyType": "VIRTUAL", "discountAmount": 24, "discountExpireAt": "1980-04-09T00:00:00Z", "discountPercentage": 17, "discountPurchaseAt": "1997-09-02T00:00:00Z", "discountedPrice": 100, "expireAt": "1972-01-27T00:00:00Z", "price": 57, "purchaseAt": "1972-11-18T00:00:00Z", "trialPrice": 63}, {"currencyCode": "dEj20BOk", "currencyNamespace": "FZfwWoPz", "currencyType": "VIRTUAL", "discountAmount": 29, "discountExpireAt": "1971-02-25T00:00:00Z", "discountPercentage": 49, "discountPurchaseAt": "1996-05-02T00:00:00Z", "discountedPrice": 52, "expireAt": "1998-01-23T00:00:00Z", "price": 99, "purchaseAt": "1974-03-15T00:00:00Z", "trialPrice": 98}]}}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op BulkUpdateRegionData \
    --namespace $AB_NAMESPACE \
    --storeId 'imI9VuMr' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 116 'BulkUpdateRegionData' test.out

#- 117 SearchItems
$CLI_EXE \
    --sn platform \
    --op SearchItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --itemType 'SUBSCRIPTION' \
    --limit '59' \
    --offset '14' \
    --sortBy 'a4zJ74lV' \
    --storeId 'qUjppa8w' \
    --keyword 'PSeyeLnY' \
    --language 'kCpvzBFo' \
    > test.out 2>&1
eval_tap $? 117 'SearchItems' test.out

#- 118 QueryUncategorizedItems
$CLI_EXE \
    --sn platform \
    --op QueryUncategorizedItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --limit '94' \
    --offset '71' \
    --sortBy '["createdAt:desc", "name", "updatedAt:asc"]' \
    --storeId 'jJ6GJpxT' \
    > test.out 2>&1
eval_tap $? 118 'QueryUncategorizedItems' test.out

#- 119 GetItem
$CLI_EXE \
    --sn platform \
    --op GetItem \
    --itemId 'MObP07bN' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --storeId 'oOuezBDH' \
    > test.out 2>&1
eval_tap $? 119 'GetItem' test.out

#- 120 UpdateItem
# body param: body
echo '{"appId": "c505zJ7o", "appType": "DEMO", "baseAppId": "3N4BX7aR", "boothName": "DmgOCuD1", "categoryPath": "8Q5Ekrkb", "clazz": "Jv4UuxvI", "displayOrder": 46, "entitlementType": "DURABLE", "ext": {"u8rnD1BH": {}, "TgLAXXbr": {}, "I3UyyzFR": {}}, "features": ["rEnAaHZw", "W2hZ8Q8U", "fnIO4dEv"], "flexible": true, "images": [{"as": "NCUPP6yb", "caption": "VM9LJhZY", "height": 83, "imageUrl": "qvDyz0fy", "smallImageUrl": "G6d3aszy", "width": 23}, {"as": "Ywi1Erjb", "caption": "5fzlMLg4", "height": 49, "imageUrl": "wn0qU6l2", "smallImageUrl": "w6QXK2H0", "width": 15}, {"as": "UcDYbpII", "caption": "H0JkQRQG", "height": 12, "imageUrl": "ToVYlWug", "smallImageUrl": "XhLtLbjW", "width": 71}], "inventoryConfig": {"customAttributes": {"bDSBj10V": {}, "3bWvznyo": {}, "cL1qMIBB": {}}, "serverCustomAttributes": {"DbyBupMP": {}, "S39NyZbF": {}, "4nwWc16p": {}}, "slotUsed": 30}, "itemIds": ["LNvOTdA6", "OBjUzWU8", "Iu830x2x"], "itemQty": {"yCjnCtxq": 0, "09zNjzZi": 21, "0kCHjuOx": 12}, "itemType": "SEASON", "listable": true, "localizations": {"nLk2En2l": {"description": "yrcj7v3x", "localExt": {"KVYl4IRa": {}, "5PfFYm8E": {}, "jtztyRBi": {}}, "longDescription": "jOYWAUsx", "title": "n59AsVXw"}, "YN6scl4w": {"description": "ymtu8dA1", "localExt": {"KEJU8W0M": {}, "G9XscKS9": {}, "EgXQVnGw": {}}, "longDescription": "2poFYqXC", "title": "JK9snpBy"}, "dch6P0ZI": {"description": "eQSau3mg", "localExt": {"EfS3hwdQ": {}, "UFpodSZe": {}, "DsjoGcp0": {}}, "longDescription": "3DfHnvKn", "title": "4keTdhdb"}}, "lootBoxConfig": {"rewardCount": 62, "rewards": [{"lootBoxItems": [{"count": 94, "duration": 60, "endDate": "1982-11-10T00:00:00Z", "itemId": "9lYMp8yJ", "itemSku": "qmBqxuyp", "itemType": "UWr6orDV"}, {"count": 58, "duration": 52, "endDate": "1994-08-28T00:00:00Z", "itemId": "5jHitcYr", "itemSku": "IePD3zMS", "itemType": "FfVg7B8W"}, {"count": 6, "duration": 68, "endDate": "1978-12-12T00:00:00Z", "itemId": "MuOHWQBl", "itemSku": "bZMOzD62", "itemType": "ST5ZCOIi"}], "name": "FYsgKYVf", "odds": 0.7455314529598369, "type": "REWARD", "weight": 69}, {"lootBoxItems": [{"count": 59, "duration": 63, "endDate": "1990-11-27T00:00:00Z", "itemId": "ZQJUJiuO", "itemSku": "i20ohCqk", "itemType": "kr9MClNz"}, {"count": 30, "duration": 14, "endDate": "1994-08-18T00:00:00Z", "itemId": "KoIY7QVl", "itemSku": "IyCkU8Se", "itemType": "AxfMR7If"}, {"count": 84, "duration": 72, "endDate": "1983-11-12T00:00:00Z", "itemId": "F2KfEPM2", "itemSku": "f1h3A75v", "itemType": "DorLkZPA"}], "name": "ibITuhVV", "odds": 0.2064695797209276, "type": "REWARD_GROUP", "weight": 25}, {"lootBoxItems": [{"count": 24, "duration": 8, "endDate": "1973-10-24T00:00:00Z", "itemId": "4qUqac2p", "itemSku": "nfuQfsy4", "itemType": "bQswGMlc"}, {"count": 32, "duration": 79, "endDate": "1995-03-05T00:00:00Z", "itemId": "OIf0BtCZ", "itemSku": "b7tzzMFK", "itemType": "4qMjk7Wu"}, {"count": 7, "duration": 25, "endDate": "1978-02-19T00:00:00Z", "itemId": "1EgmQZ3G", "itemSku": "6DLF4q6Z", "itemType": "9XgzEoOE"}], "name": "uWMTzplb", "odds": 0.5853838091548826, "type": "PROBABILITY_GROUP", "weight": 26}], "rollFunction": "DEFAULT"}, "maxCount": 84, "maxCountPerUser": 83, "name": "hxNiLlgz", "optionBoxConfig": {"boxItems": [{"count": 36, "duration": 77, "endDate": "1984-10-09T00:00:00Z", "itemId": "N7XJ4saY", "itemSku": "mOtkRjV2", "itemType": "lQlnHdGP"}, {"count": 83, "duration": 97, "endDate": "1971-04-04T00:00:00Z", "itemId": "brX8bN4z", "itemSku": "bvIijeoj", "itemType": "p7tHv0fM"}, {"count": 63, "duration": 20, "endDate": "1984-01-08T00:00:00Z", "itemId": "DlbeAsCp", "itemSku": "GVOVHY4d", "itemType": "NRLj6KQI"}]}, "purchasable": false, "recurring": {"cycle": "WEEKLY", "fixedFreeDays": 90, "fixedTrialCycles": 79, "graceDays": 51}, "regionData": {"109dLsjt": [{"currencyCode": "hJPU1ICP", "currencyNamespace": "fmmt0Nwj", "currencyType": "REAL", "discountAmount": 91, "discountExpireAt": "1979-04-16T00:00:00Z", "discountPercentage": 91, "discountPurchaseAt": "1997-09-24T00:00:00Z", "expireAt": "1996-08-31T00:00:00Z", "price": 21, "purchaseAt": "1975-05-30T00:00:00Z", "trialPrice": 74}, {"currencyCode": "tyDzABOm", "currencyNamespace": "HZXALmjK", "currencyType": "VIRTUAL", "discountAmount": 8, "discountExpireAt": "1988-08-19T00:00:00Z", "discountPercentage": 76, "discountPurchaseAt": "1973-10-08T00:00:00Z", "expireAt": "1996-03-04T00:00:00Z", "price": 11, "purchaseAt": "1971-03-20T00:00:00Z", "trialPrice": 31}, {"currencyCode": "2mQylbeB", "currencyNamespace": "FOzSOHwL", "currencyType": "REAL", "discountAmount": 49, "discountExpireAt": "1981-04-11T00:00:00Z", "discountPercentage": 9, "discountPurchaseAt": "1991-03-09T00:00:00Z", "expireAt": "1994-12-14T00:00:00Z", "price": 43, "purchaseAt": "1971-02-27T00:00:00Z", "trialPrice": 67}], "sO8jIL6C": [{"currencyCode": "ouPq0bpB", "currencyNamespace": "0PFL47zz", "currencyType": "VIRTUAL", "discountAmount": 70, "discountExpireAt": "1989-03-22T00:00:00Z", "discountPercentage": 20, "discountPurchaseAt": "1987-10-12T00:00:00Z", "expireAt": "1971-12-06T00:00:00Z", "price": 63, "purchaseAt": "1978-09-15T00:00:00Z", "trialPrice": 82}, {"currencyCode": "cmytql1H", "currencyNamespace": "xwtXWCSu", "currencyType": "VIRTUAL", "discountAmount": 95, "discountExpireAt": "1983-07-16T00:00:00Z", "discountPercentage": 44, "discountPurchaseAt": "1977-05-18T00:00:00Z", "expireAt": "1982-08-11T00:00:00Z", "price": 56, "purchaseAt": "1995-07-30T00:00:00Z", "trialPrice": 4}, {"currencyCode": "6t3zViPZ", "currencyNamespace": "nfKkfcaf", "currencyType": "REAL", "discountAmount": 1, "discountExpireAt": "1999-06-14T00:00:00Z", "discountPercentage": 80, "discountPurchaseAt": "1980-08-05T00:00:00Z", "expireAt": "1971-07-20T00:00:00Z", "price": 32, "purchaseAt": "1987-07-27T00:00:00Z", "trialPrice": 12}], "LPWap5IV": [{"currencyCode": "cprbC8Wo", "currencyNamespace": "zd0cgX6z", "currencyType": "REAL", "discountAmount": 27, "discountExpireAt": "1981-06-01T00:00:00Z", "discountPercentage": 37, "discountPurchaseAt": "1977-01-29T00:00:00Z", "expireAt": "1973-04-29T00:00:00Z", "price": 4, "purchaseAt": "1982-11-30T00:00:00Z", "trialPrice": 21}, {"currencyCode": "i3jjvnOP", "currencyNamespace": "zTXUhffy", "currencyType": "VIRTUAL", "discountAmount": 58, "discountExpireAt": "1985-03-16T00:00:00Z", "discountPercentage": 22, "discountPurchaseAt": "1976-04-12T00:00:00Z", "expireAt": "1973-06-15T00:00:00Z", "price": 46, "purchaseAt": "1972-02-10T00:00:00Z", "trialPrice": 34}, {"currencyCode": "7VpfjeKC", "currencyNamespace": "Zs9oeW8E", "currencyType": "REAL", "discountAmount": 54, "discountExpireAt": "1991-05-17T00:00:00Z", "discountPercentage": 83, "discountPurchaseAt": "1978-04-23T00:00:00Z", "expireAt": "1990-01-22T00:00:00Z", "price": 96, "purchaseAt": "1980-04-25T00:00:00Z", "trialPrice": 83}]}, "saleConfig": {"currencyCode": "OUe20BDh", "price": 12}, "seasonType": "TIER", "sectionExclusive": true, "sellable": true, "sku": "NH5kP8m2", "stackable": true, "status": "ACTIVE", "tags": ["IqdYhoXN", "BkHhZgYJ", "QHPaDvWh"], "targetCurrencyCode": "qJd4LguQ", "targetNamespace": "TLpz3Gwv", "thumbnailUrl": "s89MDwR1", "useCount": 5}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateItem \
    --itemId 'UCGxjkuI' \
    --namespace $AB_NAMESPACE \
    --storeId 'pjvBVmEH' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 120 'UpdateItem' test.out

#- 121 DeleteItem
$CLI_EXE \
    --sn platform \
    --op DeleteItem \
    --itemId 'GW4xnya1' \
    --namespace $AB_NAMESPACE \
    --force 'true' \
    --storeId '9DTze4Bs' \
    > test.out 2>&1
eval_tap $? 121 'DeleteItem' test.out

#- 122 AcquireItem
# body param: body
echo '{"count": 42, "orderNo": "aOaFFluq"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op AcquireItem \
    --itemId 'Lped5HHE' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 122 'AcquireItem' test.out

#- 123 GetApp
$CLI_EXE \
    --sn platform \
    --op GetApp \
    --itemId 'N7ELoKUi' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --storeId 'Br7x0muF' \
    > test.out 2>&1
eval_tap $? 123 'GetApp' test.out

#- 124 UpdateApp
# body param: body
echo '{"carousel": [{"alt": "3kwIqe0V", "previewUrl": "lUVFcXtK", "thumbnailUrl": "1oScV8CN", "type": "image", "url": "juVMtCze", "videoSource": "generic"}, {"alt": "3UZQVwWs", "previewUrl": "sbqehMit", "thumbnailUrl": "zMdwgRai", "type": "video", "url": "fFofDuXR", "videoSource": "youtube"}, {"alt": "Y6pH7ahc", "previewUrl": "WNMJgToT", "thumbnailUrl": "HPBQ3Uxv", "type": "video", "url": "eU1tSZPX", "videoSource": "vimeo"}], "developer": "8TF7dsX8", "forumUrl": "TKDF4xz8", "genres": ["Racing", "Adventure", "RPG"], "localizations": {"dMkQCqw8": {"announcement": "HFuLKS22", "slogan": "hoTtisE1"}, "QXPrc4GU": {"announcement": "A14fCVj6", "slogan": "92Ak7UKY"}, "Kt4hzmit": {"announcement": "VjbcifZ1", "slogan": "isBpGMDq"}}, "platformRequirements": {"eQYQ99CW": [{"additionals": "Sbc6I7C8", "directXVersion": "uaq9rERe", "diskSpace": "5sCM6fIn", "graphics": "22MAtvAy", "label": "b06eHsSl", "osVersion": "uHngTH31", "processor": "idFCXnJP", "ram": "8NZKLVmh", "soundCard": "C5NcBgAe"}, {"additionals": "K37O3MGR", "directXVersion": "sI4Rg68o", "diskSpace": "FnGCwTGm", "graphics": "yqIAxLkU", "label": "eVujx4US", "osVersion": "PkduJAO5", "processor": "fPsTTTPC", "ram": "vp3l5Usp", "soundCard": "0W7Y8Jb9"}, {"additionals": "RVnGvDEq", "directXVersion": "wWYdNeGx", "diskSpace": "WlCETg0S", "graphics": "NR2f2ksr", "label": "x8goiRcJ", "osVersion": "mSE7qIkT", "processor": "rUYfoxsc", "ram": "R7lfSr0K", "soundCard": "5gmwPycJ"}], "DoF5pypF": [{"additionals": "8BVLLvvC", "directXVersion": "Tvx2bBX1", "diskSpace": "9CFZ9PXS", "graphics": "AX9E8aVy", "label": "DB8tQmrj", "osVersion": "vlwhodCp", "processor": "7mAX8geg", "ram": "iIheuJZD", "soundCard": "rTfYehFk"}, {"additionals": "Q2365oNr", "directXVersion": "71GAMglU", "diskSpace": "gYMvXVAe", "graphics": "6WTLjvYy", "label": "KwOhFSmi", "osVersion": "QjS0YCvz", "processor": "ndQWlpTf", "ram": "IlOBdGnk", "soundCard": "Vfy5NdAe"}, {"additionals": "8vxlAzew", "directXVersion": "Mduj2ppz", "diskSpace": "8ExMybQ0", "graphics": "YxvEuhk2", "label": "iMRezNH2", "osVersion": "7drcMMtC", "processor": "0CWc42Ub", "ram": "nSUX7t4x", "soundCard": "OUsKY3Oa"}], "t2djBsmU": [{"additionals": "S83Jg9Fa", "directXVersion": "6vpS2yfn", "diskSpace": "NJFCNgQF", "graphics": "OYy6uUED", "label": "4zVbkzxE", "osVersion": "9ogDJvGr", "processor": "INSS5UAR", "ram": "vL6pUp0T", "soundCard": "OxJgyLpV"}, {"additionals": "15E3CBlJ", "directXVersion": "PYi67uXC", "diskSpace": "nnYj56xf", "graphics": "9s5Wz0MF", "label": "CO6dguWO", "osVersion": "BCuW99hi", "processor": "mqkR8f9q", "ram": "EbW1hEEu", "soundCard": "Ewzazejl"}, {"additionals": "xuezFYcR", "directXVersion": "5iWg2rsG", "diskSpace": "TfNgJcxJ", "graphics": "5Ao0Phau", "label": "XbqVzzMl", "osVersion": "M6HsApVY", "processor": "kQtqz6It", "ram": "hkVX559x", "soundCard": "ZnWBLgA8"}]}, "platforms": ["IOS", "MacOS", "IOS"], "players": ["CrossPlatformMulti", "Multi", "Coop"], "primaryGenre": "FreeToPlay", "publisher": "c2dvGS2o", "releaseDate": "1992-01-20T00:00:00Z", "websiteUrl": "qOVJXptu"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateApp \
    --itemId 'xLuuzj8y' \
    --namespace $AB_NAMESPACE \
    --storeId '24jM0EHu' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 124 'UpdateApp' test.out

#- 125 DisableItem
$CLI_EXE \
    --sn platform \
    --op DisableItem \
    --itemId 'edDfcYOS' \
    --namespace $AB_NAMESPACE \
    --storeId 'BMe98afV' \
    > test.out 2>&1
eval_tap $? 125 'DisableItem' test.out

#- 126 GetItemDynamicData
$CLI_EXE \
    --sn platform \
    --op GetItemDynamicData \
    --itemId 'YeOVU0cD' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 126 'GetItemDynamicData' test.out

#- 127 EnableItem
$CLI_EXE \
    --sn platform \
    --op EnableItem \
    --itemId '1TfEpJUV' \
    --namespace $AB_NAMESPACE \
    --storeId 'x2N15UQh' \
    > test.out 2>&1
eval_tap $? 127 'EnableItem' test.out

#- 128 FeatureItem
$CLI_EXE \
    --sn platform \
    --op FeatureItem \
    --feature 'I5QgmHkH' \
    --itemId 'R9tz2Um7' \
    --namespace $AB_NAMESPACE \
    --storeId 'pRCiyW6r' \
    > test.out 2>&1
eval_tap $? 128 'FeatureItem' test.out

#- 129 DefeatureItem
$CLI_EXE \
    --sn platform \
    --op DefeatureItem \
    --feature 'KTe3b47V' \
    --itemId 'NEdI7ybf' \
    --namespace $AB_NAMESPACE \
    --storeId 'D9tDwEkx' \
    > test.out 2>&1
eval_tap $? 129 'DefeatureItem' test.out

#- 130 GetLocaleItem
$CLI_EXE \
    --sn platform \
    --op GetLocaleItem \
    --itemId 'gNa7t0Cw' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --language 'ofJcBNHm' \
    --populateBundle 'true' \
    --region 'Bi1y9o53' \
    --storeId 'QdhmH0uX' \
    > test.out 2>&1
eval_tap $? 130 'GetLocaleItem' test.out

#- 131 UpdateItemPurchaseCondition
# body param: body
echo '{"purchaseCondition": {"conditionGroups": [{"operator": "or", "predicates": [{"anyOf": 35, "comparison": "is", "name": "pdmlT6jH", "predicateType": "SeasonTierPredicate", "value": "5ibGZDRV", "values": ["0k3WysaH", "SXR6vU1N", "7AVgV3T7"]}, {"anyOf": 68, "comparison": "is", "name": "aFwQD7KM", "predicateType": "SeasonTierPredicate", "value": "by2hu3If", "values": ["XPSOlCE0", "iDFSSLzN", "bX7pIWEm"]}, {"anyOf": 23, "comparison": "isLessThanOrEqual", "name": "4qtoM7sN", "predicateType": "SeasonTierPredicate", "value": "I1hscqax", "values": ["jKHFAajo", "DezOuM0p", "bMLu35Ut"]}]}, {"operator": "or", "predicates": [{"anyOf": 20, "comparison": "is", "name": "ihkxKYRB", "predicateType": "SeasonTierPredicate", "value": "XdnYWTe0", "values": ["EdMFkPcG", "4je7dLXK", "RVqVu3bq"]}, {"anyOf": 19, "comparison": "is", "name": "qwjWKCDJ", "predicateType": "SeasonTierPredicate", "value": "EXbNTMPV", "values": ["qyr3IzFT", "ARps4Zv6", "nFtb8Wn2"]}, {"anyOf": 99, "comparison": "is", "name": "lTatSjlN", "predicateType": "SeasonTierPredicate", "value": "4pBUYjlo", "values": ["SAiFJr5f", "GFoqisFP", "SmQowGhW"]}]}, {"operator": "and", "predicates": [{"anyOf": 65, "comparison": "includes", "name": "Q2yWHVHd", "predicateType": "EntitlementPredicate", "value": "gQTzFJEA", "values": ["z8TWzkh4", "MTM6OwSY", "h36QDeqB"]}, {"anyOf": 34, "comparison": "isGreaterThanOrEqual", "name": "YI59XqpR", "predicateType": "SeasonPassPredicate", "value": "gvipR43n", "values": ["dIuhZ4s1", "UKQonPLn", "kt5CF1nr"]}, {"anyOf": 49, "comparison": "is", "name": "I9PeZd6I", "predicateType": "SeasonTierPredicate", "value": "ZP5nThjF", "values": ["xZZF2zX7", "ZXRrPUvw", "tvrTUsoz"]}]}]}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateItemPurchaseCondition \
    --itemId 'hzhVbAZy' \
    --namespace $AB_NAMESPACE \
    --storeId 'LEeLoKUk' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 131 'UpdateItemPurchaseCondition' test.out

#- 132 ReturnItem
# body param: body
echo '{"orderNo": "x6jkmCEg"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ReturnItem \
    --itemId 'n6Zl9aNW' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 132 'ReturnItem' test.out

#- 133 QueryKeyGroups
$CLI_EXE \
    --sn platform \
    --op QueryKeyGroups \
    --namespace $AB_NAMESPACE \
    --limit '38' \
    --name 'ugYcLRG6' \
    --offset '92' \
    --tag 'enzGdTPz' \
    > test.out 2>&1
eval_tap $? 133 'QueryKeyGroups' test.out

#- 134 CreateKeyGroup
# body param: body
echo '{"description": "DO683OQp", "name": "3648AzFd", "status": "ACTIVE", "tags": ["xQitYsaF", "S4RmgKbf", "TD3mPJsV"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateKeyGroup \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 134 'CreateKeyGroup' test.out

#- 135 GetKeyGroupByBoothName
eval_tap 0 135 'GetKeyGroupByBoothName # SKIP deprecated' test.out

#- 136 GetKeyGroup
$CLI_EXE \
    --sn platform \
    --op GetKeyGroup \
    --keyGroupId 'pmVkKtKB' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 136 'GetKeyGroup' test.out

#- 137 UpdateKeyGroup
# body param: body
echo '{"description": "6Oo84XNT", "name": "s1g97Du5", "status": "INACTIVE", "tags": ["PxYg2CRf", "PCmSUBaX", "gzj35sBF"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateKeyGroup \
    --keyGroupId 'rtxAkXjk' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 137 'UpdateKeyGroup' test.out

#- 138 GetKeyGroupDynamic
$CLI_EXE \
    --sn platform \
    --op GetKeyGroupDynamic \
    --keyGroupId 'alZ2x2dQ' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 138 'GetKeyGroupDynamic' test.out

#- 139 ListKeys
$CLI_EXE \
    --sn platform \
    --op ListKeys \
    --keyGroupId 'zaAzy2ti' \
    --namespace $AB_NAMESPACE \
    --limit '2' \
    --offset '82' \
    --status 'ACTIVE' \
    > test.out 2>&1
eval_tap $? 139 'ListKeys' test.out

#- 140 UploadKeys
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UploadKeys \
    --keyGroupId 'eLnSkuhd' \
    --namespace $AB_NAMESPACE \
    --upload $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 140 'UploadKeys' test.out

#- 141 QueryOrders
$CLI_EXE \
    --sn platform \
    --op QueryOrders \
    --namespace $AB_NAMESPACE \
    --endTime '1iWMjEkM' \
    --limit '94' \
    --offset '47' \
    --orderNos '["c1j0WmUv", "2umYhhs0", "PnLUtoJb"]' \
    --sortBy 'uVqhvIld' \
    --startTime 'f89ym7aZ' \
    --status 'REFUNDING' \
    --withTotal 'false' \
    > test.out 2>&1
eval_tap $? 141 'QueryOrders' test.out

#- 142 GetOrderStatistics
$CLI_EXE \
    --sn platform \
    --op GetOrderStatistics \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 142 'GetOrderStatistics' test.out

#- 143 GetOrder
$CLI_EXE \
    --sn platform \
    --op GetOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'VnDNOS9X' \
    > test.out 2>&1
eval_tap $? 143 'GetOrder' test.out

#- 144 RefundOrder
# body param: body
echo '{"description": "tGZNipsL"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RefundOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'CqJGxHPy' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 144 'RefundOrder' test.out

#- 145 GetPaymentCallbackConfig
$CLI_EXE \
    --sn platform \
    --op GetPaymentCallbackConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 145 'GetPaymentCallbackConfig' test.out

#- 146 UpdatePaymentCallbackConfig
# body param: body
echo '{"dryRun": true, "notifyUrl": "eCfohZLS", "privateKey": "ErXq0P2Z"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePaymentCallbackConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 146 'UpdatePaymentCallbackConfig' test.out

#- 147 QueryPaymentNotifications
$CLI_EXE \
    --sn platform \
    --op QueryPaymentNotifications \
    --namespace $AB_NAMESPACE \
    --endDate 'X24DOF8y' \
    --externalId 'y6ggJeNb' \
    --limit '77' \
    --notificationSource 'ALIPAY' \
    --notificationType 'ayxIEJIb' \
    --offset '95' \
    --paymentOrderNo 'YDnG4eQq' \
    --startDate 'Q6QiQTIc' \
    --status 'PROCESSED' \
    > test.out 2>&1
eval_tap $? 147 'QueryPaymentNotifications' test.out

#- 148 QueryPaymentOrders
$CLI_EXE \
    --sn platform \
    --op QueryPaymentOrders \
    --namespace $AB_NAMESPACE \
    --channel 'EXTERNAL' \
    --extTxId 'maJJbPrM' \
    --limit '78' \
    --offset '23' \
    --status 'REFUND_FAILED' \
    > test.out 2>&1
eval_tap $? 148 'QueryPaymentOrders' test.out

#- 149 CreatePaymentOrderByDedicated
# body param: body
echo '{"currencyCode": "UI190DDN", "currencyNamespace": "Uvco2bhL", "customParameters": {"DQtwQPyI": {}, "TwtxvQUm": {}, "rFTkuh1g": {}}, "description": "4MpA5pjC", "extOrderNo": "6yxwkWKi", "extUserId": "gWsXpYiH", "itemType": "SEASON", "language": "xX", "metadata": {"tapdO6B9": "D5q4AxPF", "BZtTca3e": "uo0bw236", "XOth5gDL": "7AGF5S6A"}, "notifyUrl": "0lXQ13eU", "omitNotification": false, "platform": "XJun6hMy", "price": 92, "recurringPaymentOrderNo": "mSU0rmZr", "region": "lg7RgapV", "returnUrl": "WhCFvmTt", "sandbox": true, "sku": "Vmaeu1ry", "subscriptionId": "ODVA3NC6", "targetNamespace": "WzQRVtOF", "targetUserId": "gDTAzQSq", "title": "DDhabyfv"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreatePaymentOrderByDedicated \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 149 'CreatePaymentOrderByDedicated' test.out

#- 150 ListExtOrderNoByExtTxId
$CLI_EXE \
    --sn platform \
    --op ListExtOrderNoByExtTxId \
    --namespace $AB_NAMESPACE \
    --extTxId 'BOZo0apD' \
    > test.out 2>&1
eval_tap $? 150 'ListExtOrderNoByExtTxId' test.out

#- 151 GetPaymentOrder
$CLI_EXE \
    --sn platform \
    --op GetPaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'xKaEN4oe' \
    > test.out 2>&1
eval_tap $? 151 'GetPaymentOrder' test.out

#- 152 ChargePaymentOrder
# body param: body
echo '{"extTxId": "ZYqUsbuX", "paymentMethod": "aTJbboEC", "paymentProvider": "STRIPE"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ChargePaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'stOWjfT8' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 152 'ChargePaymentOrder' test.out

#- 153 RefundPaymentOrderByDedicated
# body param: body
echo '{"description": "sKOB3MuC"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RefundPaymentOrderByDedicated \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo '5m8heTJN' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 153 'RefundPaymentOrderByDedicated' test.out

#- 154 SimulatePaymentOrderNotification
# body param: body
echo '{"amount": 15, "currencyCode": "kihefffD", "notifyType": "CHARGE", "paymentProvider": "STRIPE", "salesTax": 86, "vat": 19}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SimulatePaymentOrderNotification \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'mZbRnrfa' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 154 'SimulatePaymentOrderNotification' test.out

#- 155 GetPaymentOrderChargeStatus
$CLI_EXE \
    --sn platform \
    --op GetPaymentOrderChargeStatus \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'YcEltKYF' \
    > test.out 2>&1
eval_tap $? 155 'GetPaymentOrderChargeStatus' test.out

#- 156 GetPlatformEntitlementConfig
$CLI_EXE \
    --sn platform \
    --op GetPlatformEntitlementConfig \
    --namespace $AB_NAMESPACE \
    --platform 'IOS' \
    > test.out 2>&1
eval_tap $? 156 'GetPlatformEntitlementConfig' test.out

#- 157 UpdatePlatformEntitlementConfig
# body param: body
echo '{"allowedPlatformOrigins": ["Twitch", "Playstation", "GooglePlay"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePlatformEntitlementConfig \
    --namespace $AB_NAMESPACE \
    --platform 'Oculus' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 157 'UpdatePlatformEntitlementConfig' test.out

#- 158 GetPlatformWalletConfig
$CLI_EXE \
    --sn platform \
    --op GetPlatformWalletConfig \
    --namespace $AB_NAMESPACE \
    --platform 'Playstation' \
    > test.out 2>&1
eval_tap $? 158 'GetPlatformWalletConfig' test.out

#- 159 UpdatePlatformWalletConfig
# body param: body
echo '{"allowedBalanceOrigins": ["Steam", "Oculus", "System"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePlatformWalletConfig \
    --namespace $AB_NAMESPACE \
    --platform 'Playstation' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 159 'UpdatePlatformWalletConfig' test.out

#- 160 ResetPlatformWalletConfig
$CLI_EXE \
    --sn platform \
    --op ResetPlatformWalletConfig \
    --namespace $AB_NAMESPACE \
    --platform 'Nintendo' \
    > test.out 2>&1
eval_tap $? 160 'ResetPlatformWalletConfig' test.out

#- 161 GetRevocationConfig
$CLI_EXE \
    --sn platform \
    --op GetRevocationConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 161 'GetRevocationConfig' test.out

#- 162 UpdateRevocationConfig
# body param: body
echo '{"entitlement": {"consumable": {"enabled": true, "strategy": "CUSTOM"}, "durable": {"enabled": true, "strategy": "CUSTOM"}}, "wallet": {"enabled": false, "strategy": "CUSTOM"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateRevocationConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 162 'UpdateRevocationConfig' test.out

#- 163 DeleteRevocationConfig
$CLI_EXE \
    --sn platform \
    --op DeleteRevocationConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 163 'DeleteRevocationConfig' test.out

#- 164 QueryRevocationHistories
$CLI_EXE \
    --sn platform \
    --op QueryRevocationHistories \
    --namespace $AB_NAMESPACE \
    --endTime 'NKgcFWpu' \
    --limit '32' \
    --offset '23' \
    --source 'ORDER' \
    --startTime '3Si2oi4d' \
    --status 'SUCCESS' \
    --transactionId 'SEEqQ4UJ' \
    --userId 'E12jwHIy' \
    > test.out 2>&1
eval_tap $? 164 'QueryRevocationHistories' test.out

#- 165 GetRevocationPluginConfig
$CLI_EXE \
    --sn platform \
    --op GetRevocationPluginConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 165 'GetRevocationPluginConfig' test.out

#- 166 UpdateRevocationPluginConfig
# body param: body
echo '{"appConfig": {"appName": "4uhKP2IG"}, "customConfig": {"connectionType": "INSECURE", "grpcServerAddress": "j0IA1LKR"}, "extendType": "APP"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateRevocationPluginConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 166 'UpdateRevocationPluginConfig' test.out

#- 167 DeleteRevocationPluginConfig
$CLI_EXE \
    --sn platform \
    --op DeleteRevocationPluginConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 167 'DeleteRevocationPluginConfig' test.out

#- 168 UploadRevocationPluginConfigCert
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UploadRevocationPluginConfigCert \
    --namespace $AB_NAMESPACE \
    --upload $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 168 'UploadRevocationPluginConfigCert' test.out

#- 169 CreateReward
# body param: body
echo '{"description": "LrwtbzoQ", "eventTopic": "8qw58Qgg", "maxAwarded": 98, "maxAwardedPerUser": 50, "namespaceExpression": "TG66Ei3i", "rewardCode": "NOdXyBQF", "rewardConditions": [{"condition": "ev2bw5pz", "conditionName": "0PP9yvRp", "eventName": "j2tdUye0", "rewardItems": [{"duration": 11, "endDate": "1984-12-08T00:00:00Z", "identityType": "ITEM_ID", "itemId": "d6EGL1xP", "quantity": 13, "sku": "bcWVSUM0"}, {"duration": 61, "endDate": "1986-12-01T00:00:00Z", "identityType": "ITEM_SKU", "itemId": "ozvMY6Ru", "quantity": 81, "sku": "sS48ZEEk"}, {"duration": 38, "endDate": "1985-02-19T00:00:00Z", "identityType": "ITEM_ID", "itemId": "t8af4oNq", "quantity": 99, "sku": "UvOjBuLO"}]}, {"condition": "lGJIEtV9", "conditionName": "iwacwRaL", "eventName": "9oOTfHCX", "rewardItems": [{"duration": 11, "endDate": "1996-07-03T00:00:00Z", "identityType": "ITEM_SKU", "itemId": "i0O1Sg6h", "quantity": 30, "sku": "c3op6TOB"}, {"duration": 38, "endDate": "1978-08-09T00:00:00Z", "identityType": "ITEM_SKU", "itemId": "W8DqRFLf", "quantity": 31, "sku": "AtcXKFBP"}, {"duration": 80, "endDate": "1998-01-21T00:00:00Z", "identityType": "ITEM_SKU", "itemId": "VSbA5DVr", "quantity": 16, "sku": "YjwG0eqR"}]}, {"condition": "B3NrK2HZ", "conditionName": "r8jG9tFT", "eventName": "YaGx9AkL", "rewardItems": [{"duration": 46, "endDate": "1993-11-27T00:00:00Z", "identityType": "ITEM_SKU", "itemId": "XpjXkZtD", "quantity": 60, "sku": "FewYCSNd"}, {"duration": 18, "endDate": "1985-10-04T00:00:00Z", "identityType": "ITEM_SKU", "itemId": "uUTtryNp", "quantity": 32, "sku": "6ubH9V7E"}, {"duration": 25, "endDate": "1998-09-27T00:00:00Z", "identityType": "ITEM_SKU", "itemId": "668hojeY", "quantity": 43, "sku": "IedlAuHj"}]}], "userIdExpression": "cvKaehx5"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateReward \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 169 'CreateReward' test.out

#- 170 QueryRewards
$CLI_EXE \
    --sn platform \
    --op QueryRewards \
    --namespace $AB_NAMESPACE \
    --eventTopic 'odAXClnn' \
    --limit '43' \
    --offset '62' \
    --sortBy '["rewardCode:asc", "namespace"]' \
    > test.out 2>&1
eval_tap $? 170 'QueryRewards' test.out

#- 171 ExportRewards
$CLI_EXE \
    --sn platform \
    --op ExportRewards \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 171 'ExportRewards' test.out

#- 172 ImportRewards
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op ImportRewards \
    --namespace $AB_NAMESPACE \
    --replaceExisting 'true' \
    --upload $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 172 'ImportRewards' test.out

#- 173 GetReward
$CLI_EXE \
    --sn platform \
    --op GetReward \
    --namespace $AB_NAMESPACE \
    --rewardId 'W1hFs1ZB' \
    > test.out 2>&1
eval_tap $? 173 'GetReward' test.out

#- 174 UpdateReward
# body param: body
echo '{"description": "4PMWCLGE", "eventTopic": "h1bPAJ0T", "maxAwarded": 51, "maxAwardedPerUser": 9, "namespaceExpression": "Lw8cMlDe", "rewardCode": "2Diquj5C", "rewardConditions": [{"condition": "LmCaApm7", "conditionName": "I0J5vxbL", "eventName": "sYSPUhrZ", "rewardItems": [{"duration": 50, "endDate": "1997-09-18T00:00:00Z", "identityType": "ITEM_SKU", "itemId": "WSvXbqwI", "quantity": 26, "sku": "UZmlH7kR"}, {"duration": 67, "endDate": "1978-06-22T00:00:00Z", "identityType": "ITEM_ID", "itemId": "sLhamh85", "quantity": 28, "sku": "C1tOIs1l"}, {"duration": 7, "endDate": "1971-08-29T00:00:00Z", "identityType": "ITEM_SKU", "itemId": "abKQqC8h", "quantity": 23, "sku": "260ocJYr"}]}, {"condition": "D3Wh852U", "conditionName": "m9CVMPTE", "eventName": "MVD05d0k", "rewardItems": [{"duration": 39, "endDate": "1974-06-25T00:00:00Z", "identityType": "ITEM_SKU", "itemId": "COCYgVtI", "quantity": 21, "sku": "r4OndU8c"}, {"duration": 57, "endDate": "1978-08-16T00:00:00Z", "identityType": "ITEM_ID", "itemId": "7BKZdYt2", "quantity": 23, "sku": "90gxpfo2"}, {"duration": 3, "endDate": "1996-01-29T00:00:00Z", "identityType": "ITEM_SKU", "itemId": "1Np8w4gT", "quantity": 93, "sku": "ude4qhfn"}]}, {"condition": "PIAgomlZ", "conditionName": "t0mlG6aI", "eventName": "9DQ6SRHB", "rewardItems": [{"duration": 33, "endDate": "1999-06-10T00:00:00Z", "identityType": "ITEM_SKU", "itemId": "EiM8sx4b", "quantity": 88, "sku": "XGQvgHnY"}, {"duration": 21, "endDate": "1971-11-02T00:00:00Z", "identityType": "ITEM_ID", "itemId": "OADWRyU4", "quantity": 9, "sku": "RqVuGQFw"}, {"duration": 40, "endDate": "1987-10-16T00:00:00Z", "identityType": "ITEM_ID", "itemId": "5xVMzg3b", "quantity": 9, "sku": "NdERKMfe"}]}], "userIdExpression": "GNo6sMU1"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateReward \
    --namespace $AB_NAMESPACE \
    --rewardId 'LpuNkDiy' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 174 'UpdateReward' test.out

#- 175 DeleteReward
$CLI_EXE \
    --sn platform \
    --op DeleteReward \
    --namespace $AB_NAMESPACE \
    --rewardId 'aH3QGBVT' \
    > test.out 2>&1
eval_tap $? 175 'DeleteReward' test.out

#- 176 CheckEventCondition
# body param: body
echo '{"payload": {"uTZwDekk": {}, "bCNmAlro": {}, "pHOIUe6L": {}}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CheckEventCondition \
    --namespace $AB_NAMESPACE \
    --rewardId '00FMipAX' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 176 'CheckEventCondition' test.out

#- 177 DeleteRewardConditionRecord
# body param: body
echo '{"conditionName": "3uxC2BUL", "userId": "POsvZN0n"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op DeleteRewardConditionRecord \
    --namespace $AB_NAMESPACE \
    --rewardId 'ei4gwvyF' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 177 'DeleteRewardConditionRecord' test.out

#- 178 QuerySections
$CLI_EXE \
    --sn platform \
    --op QuerySections \
    --namespace $AB_NAMESPACE \
    --end '3rZfB7Ua' \
    --limit '89' \
    --offset '76' \
    --start 'c8rJZxep' \
    --storeId 'acBZPJhx' \
    --viewId 'bcCpuJp3' \
    > test.out 2>&1
eval_tap $? 178 'QuerySections' test.out

#- 179 CreateSection
# body param: body
echo '{"active": false, "displayOrder": 22, "endDate": "1991-11-22T00:00:00Z", "ext": {"dmewgxsj": {}, "VJZsAtZA": {}, "UjfIaoeY": {}}, "fixedPeriodRotationConfig": {"backfillType": "NONE", "duration": 52, "itemCount": 67, "rule": "SEQUENCE"}, "items": [{"id": "QIXtXXhC", "sku": "H2KLbNKZ"}, {"id": "OHSmaGsd", "sku": "hOY9F2mC"}, {"id": "ZYnesmIh", "sku": "7KYIt5OR"}], "localizations": {"dggkCldT": {"description": "oeg4z0VS", "localExt": {"LZy3P3B1": {}, "Jf80AtGT": {}, "KqiHQwp7": {}}, "longDescription": "u2wc3dGJ", "title": "6lMgHC8F"}, "BN9FSoLd": {"description": "A3U1ZfYm", "localExt": {"95rtU9EV": {}, "paFqTwgZ": {}, "h4ArwNIn": {}}, "longDescription": "jb6ZDB4S", "title": "ef2MJBUi"}, "g024iI8A": {"description": "hbcWGYIz", "localExt": {"kuHSAkro": {}, "3QBXCX7I": {}, "hfh05WLc": {}}, "longDescription": "mrvF9scQ", "title": "iYOjoJNO"}}, "name": "SFGa3rC9", "rotationType": "CUSTOM", "startDate": "1993-01-05T00:00:00Z", "viewId": "YG101MY3"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateSection \
    --namespace $AB_NAMESPACE \
    --storeId 'oLc9Oc2J' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 179 'CreateSection' test.out

#- 180 PurgeExpiredSection
$CLI_EXE \
    --sn platform \
    --op PurgeExpiredSection \
    --namespace $AB_NAMESPACE \
    --storeId 'GPiyZpij' \
    > test.out 2>&1
eval_tap $? 180 'PurgeExpiredSection' test.out

#- 181 GetSection
$CLI_EXE \
    --sn platform \
    --op GetSection \
    --namespace $AB_NAMESPACE \
    --sectionId '2g5oCYz8' \
    --storeId 'j27F6VZv' \
    > test.out 2>&1
eval_tap $? 181 'GetSection' test.out

#- 182 UpdateSection
# body param: body
echo '{"active": false, "displayOrder": 62, "endDate": "1989-03-14T00:00:00Z", "ext": {"YONabzPc": {}, "dPlD207p": {}, "i8cctlj2": {}}, "fixedPeriodRotationConfig": {"backfillType": "CUSTOM", "duration": 30, "itemCount": 40, "rule": "SEQUENCE"}, "items": [{"id": "cUY84Etf", "sku": "2Ov3gjGS"}, {"id": "Joy3uHvt", "sku": "B3nKNdh6"}, {"id": "2V4eJw5F", "sku": "4wyU8Sos"}], "localizations": {"a9fmpDdY": {"description": "aP03DC9z", "localExt": {"wAiZ0f2r": {}, "8KsU1Rxp": {}, "2zFBiFTA": {}}, "longDescription": "Yzd6pN6w", "title": "skEAQ1CP"}, "qmd7TgqY": {"description": "ljwx06we", "localExt": {"gTMfEbUX": {}, "6yvC8i2K": {}, "lreXKYIr": {}}, "longDescription": "B2IZC7SX", "title": "MBGSvEly"}, "VTms6RoM": {"description": "MPGgrUiq", "localExt": {"nxs8zeSY": {}, "SxuNR8tk": {}, "J61RzCJd": {}}, "longDescription": "wfEG19F1", "title": "E1WoYKb9"}}, "name": "Au4Xzu41", "rotationType": "FIXED_PERIOD", "startDate": "1990-07-23T00:00:00Z", "viewId": "TPfHkqj4"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateSection \
    --namespace $AB_NAMESPACE \
    --sectionId 'JYTV4MD3' \
    --storeId 'luEaFIHG' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 182 'UpdateSection' test.out

#- 183 DeleteSection
$CLI_EXE \
    --sn platform \
    --op DeleteSection \
    --namespace $AB_NAMESPACE \
    --sectionId 'Otj88d9M' \
    --storeId 'Dc7ynVFF' \
    > test.out 2>&1
eval_tap $? 183 'DeleteSection' test.out

#- 184 ListStores
$CLI_EXE \
    --sn platform \
    --op ListStores \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 184 'ListStores' test.out

#- 185 CreateStore
# body param: body
echo '{"defaultLanguage": "TCx0Wd5R", "defaultRegion": "WzMseiqe", "description": "YMhasEDV", "supportedLanguages": ["cfBtFDgI", "WqScSg87", "HWT6BulN"], "supportedRegions": ["c1gsmaf8", "f3QveOTt", "Bhewu6bO"], "title": "bECeFTBV"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateStore \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 185 'CreateStore' test.out

#- 186 GetCatalogDefinition
$CLI_EXE \
    --sn platform \
    --op GetCatalogDefinition \
    --namespace $AB_NAMESPACE \
    --catalogType 'SECTION' \
    > test.out 2>&1
eval_tap $? 186 'GetCatalogDefinition' test.out

#- 187 DownloadCSVTemplates
$CLI_EXE \
    --sn platform \
    --op DownloadCSVTemplates \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 187 'DownloadCSVTemplates' test.out

#- 188 ExportStoreByCSV
# body param: body
echo '{"catalogType": "VIEW", "fieldsToBeIncluded": ["KCu24FRd", "XCOe3shI", "cCLyarha"], "idsToBeExported": ["VPPqrN1x", "hQ8dccnK", "HkIuZtwP"], "storeId": "9mG7fCOg"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ExportStoreByCSV \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 188 'ExportStoreByCSV' test.out

#- 189 ImportStore
eval_tap 0 189 'ImportStore # SKIP deprecated' test.out

#- 190 GetPublishedStore
$CLI_EXE \
    --sn platform \
    --op GetPublishedStore \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 190 'GetPublishedStore' test.out

#- 191 DeletePublishedStore
$CLI_EXE \
    --sn platform \
    --op DeletePublishedStore \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 191 'DeletePublishedStore' test.out

#- 192 GetPublishedStoreBackup
$CLI_EXE \
    --sn platform \
    --op GetPublishedStoreBackup \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 192 'GetPublishedStoreBackup' test.out

#- 193 RollbackPublishedStore
$CLI_EXE \
    --sn platform \
    --op RollbackPublishedStore \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 193 'RollbackPublishedStore' test.out

#- 194 GetStore
$CLI_EXE \
    --sn platform \
    --op GetStore \
    --namespace $AB_NAMESPACE \
    --storeId 'v99I08Wu' \
    > test.out 2>&1
eval_tap $? 194 'GetStore' test.out

#- 195 UpdateStore
# body param: body
echo '{"defaultLanguage": "yj9GvqF7", "defaultRegion": "4udNyHLW", "description": "yZjU0fuu", "supportedLanguages": ["4VKEa5W7", "FFEa7VFy", "uaf5FcnA"], "supportedRegions": ["BkR3tKAP", "ja2DP4V3", "TuKiQoWk"], "title": "1tyxitfS"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateStore \
    --namespace $AB_NAMESPACE \
    --storeId 'iEcdAf7l' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 195 'UpdateStore' test.out

#- 196 DeleteStore
$CLI_EXE \
    --sn platform \
    --op DeleteStore \
    --namespace $AB_NAMESPACE \
    --storeId 'p1oqg1uY' \
    > test.out 2>&1
eval_tap $? 196 'DeleteStore' test.out

#- 197 QueryChanges
$CLI_EXE \
    --sn platform \
    --op QueryChanges \
    --namespace $AB_NAMESPACE \
    --storeId 'rKYPuuV9' \
    --action 'UPDATE' \
    --itemSku 'X9gD8Tzm' \
    --itemType 'LOOTBOX' \
    --limit '70' \
    --offset '27' \
    --selected 'true' \
    --sortBy '["createdAt:desc", "updatedAt:asc", "updatedAt"]' \
    --status 'PUBLISHED' \
    --type 'ITEM' \
    --updatedAtEnd 'StStiXNX' \
    --updatedAtStart 'cHPKU6Tt' \
    --withTotal 'false' \
    > test.out 2>&1
eval_tap $? 197 'QueryChanges' test.out

#- 198 PublishAll
$CLI_EXE \
    --sn platform \
    --op PublishAll \
    --namespace $AB_NAMESPACE \
    --storeId 'qDFNHzdG' \
    > test.out 2>&1
eval_tap $? 198 'PublishAll' test.out

#- 199 PublishSelected
$CLI_EXE \
    --sn platform \
    --op PublishSelected \
    --namespace $AB_NAMESPACE \
    --storeId 'XdomaG5a' \
    > test.out 2>&1
eval_tap $? 199 'PublishSelected' test.out

#- 200 SelectAllRecords
$CLI_EXE \
    --sn platform \
    --op SelectAllRecords \
    --namespace $AB_NAMESPACE \
    --storeId 'LbOsnIYR' \
    > test.out 2>&1
eval_tap $? 200 'SelectAllRecords' test.out

#- 201 SelectAllRecordsByCriteria
$CLI_EXE \
    --sn platform \
    --op SelectAllRecordsByCriteria \
    --namespace $AB_NAMESPACE \
    --storeId 'ulxe0kbP' \
    --action 'DELETE' \
    --itemSku 'UCWXEm9S' \
    --itemType 'COINS' \
    --selected 'false' \
    --type 'ITEM' \
    --updatedAtEnd '1RGRVcwd' \
    --updatedAtStart '8nDEBoNS' \
    > test.out 2>&1
eval_tap $? 201 'SelectAllRecordsByCriteria' test.out

#- 202 GetStatistic
$CLI_EXE \
    --sn platform \
    --op GetStatistic \
    --namespace $AB_NAMESPACE \
    --storeId 'IaDCQAqp' \
    --action 'DELETE' \
    --itemSku 'kFVq8R5K' \
    --itemType 'LOOTBOX' \
    --type 'STORE' \
    --updatedAtEnd 'Oq5r4Jqe' \
    --updatedAtStart 'kSRBQfh9' \
    > test.out 2>&1
eval_tap $? 202 'GetStatistic' test.out

#- 203 UnselectAllRecords
$CLI_EXE \
    --sn platform \
    --op UnselectAllRecords \
    --namespace $AB_NAMESPACE \
    --storeId 'HKBMaemc' \
    > test.out 2>&1
eval_tap $? 203 'UnselectAllRecords' test.out

#- 204 SelectRecord
$CLI_EXE \
    --sn platform \
    --op SelectRecord \
    --changeId 'BNnNa60n' \
    --namespace $AB_NAMESPACE \
    --storeId 'TXbRAIxF' \
    > test.out 2>&1
eval_tap $? 204 'SelectRecord' test.out

#- 205 UnselectRecord
$CLI_EXE \
    --sn platform \
    --op UnselectRecord \
    --changeId 'sWqzKndV' \
    --namespace $AB_NAMESPACE \
    --storeId 'DOo4xNOs' \
    > test.out 2>&1
eval_tap $? 205 'UnselectRecord' test.out

#- 206 CloneStore
$CLI_EXE \
    --sn platform \
    --op CloneStore \
    --namespace $AB_NAMESPACE \
    --storeId 'g8Xt9kDF' \
    --targetStoreId 'riS6e1d0' \
    > test.out 2>&1
eval_tap $? 206 'CloneStore' test.out

#- 207 ExportStore
eval_tap 0 207 'ExportStore # SKIP deprecated' test.out

#- 208 QueryImportHistory
$CLI_EXE \
    --sn platform \
    --op QueryImportHistory \
    --namespace $AB_NAMESPACE \
    --storeId 'Ua9ozmCb' \
    --end '7I7P6YeY' \
    --limit '8' \
    --offset '54' \
    --sortBy 'HNuGyFgi' \
    --start 'dPTecUzT' \
    --success 'false' \
    > test.out 2>&1
eval_tap $? 208 'QueryImportHistory' test.out

#- 209 ImportStoreByCSV
# form data upload: category
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
# form data upload: display
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
# form data upload: item
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
# form data upload: section
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op ImportStoreByCSV \
    --namespace $AB_NAMESPACE \
    --storeId 'QEVGjRwX' \
    --upload $TEMP_FILE_UPLOAD \
    --upload $TEMP_FILE_UPLOAD \
    --upload $TEMP_FILE_UPLOAD \
    --notes 'CFBBnGgH' \
    --upload $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 209 'ImportStoreByCSV' test.out

#- 210 QuerySubscriptions
$CLI_EXE \
    --sn platform \
    --op QuerySubscriptions \
    --namespace $AB_NAMESPACE \
    --chargeStatus 'CHARGED' \
    --itemId '1LnD5wQq' \
    --limit '96' \
    --offset '59' \
    --sku 'A1GsXeuA' \
    --status 'ACTIVE' \
    --subscribedBy 'USER' \
    --userId 'z6UujTAt' \
    > test.out 2>&1
eval_tap $? 210 'QuerySubscriptions' test.out

#- 211 RecurringChargeSubscription
$CLI_EXE \
    --sn platform \
    --op RecurringChargeSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'xsdapf6x' \
    > test.out 2>&1
eval_tap $? 211 'RecurringChargeSubscription' test.out

#- 212 GetTicketDynamic
$CLI_EXE \
    --sn platform \
    --op GetTicketDynamic \
    --boothName 'nNZ1JJlJ' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 212 'GetTicketDynamic' test.out

#- 213 DecreaseTicketSale
# body param: body
echo '{"orderNo": "wxPo4g11"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op DecreaseTicketSale \
    --boothName 'oKaUMVRS' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 213 'DecreaseTicketSale' test.out

#- 214 GetTicketBoothID
$CLI_EXE \
    --sn platform \
    --op GetTicketBoothID \
    --boothName '0KepHHEE' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 214 'GetTicketBoothID' test.out

#- 215 IncreaseTicketSale
# body param: body
echo '{"count": 96, "orderNo": "6g0FoKA7"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op IncreaseTicketSale \
    --boothName 'zS1iXksS' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 215 'IncreaseTicketSale' test.out

#- 216 Commit
# body param: body
echo '{"actions": [{"operations": [{"creditPayload": {"balanceOrigin": "Playstation", "count": 92, "currencyCode": "rxxGYc9u", "expireAt": "1974-10-15T00:00:00Z"}, "debitPayload": {"count": 56, "currencyCode": "KG1XhMJw", "walletPlatform": "Nintendo"}, "fulFillItemPayload": {"count": 20, "entitlementCollectionId": "hulo67Ru", "entitlementOrigin": "IOS", "itemIdentity": "7CWCjALr", "itemIdentityType": "ITEM_ID"}, "revokeEntitlementPayload": {"count": 20, "entitlementId": "RtX1V8FD"}, "type": "REVOKE_ENTITLEMENT"}, {"creditPayload": {"balanceOrigin": "IOS", "count": 30, "currencyCode": "FSTB8qpE", "expireAt": "1984-03-09T00:00:00Z"}, "debitPayload": {"count": 96, "currencyCode": "op6c4wzL", "walletPlatform": "Other"}, "fulFillItemPayload": {"count": 58, "entitlementCollectionId": "Fn4dVoJh", "entitlementOrigin": "IOS", "itemIdentity": "o7ScYkeN", "itemIdentityType": "ITEM_SKU"}, "revokeEntitlementPayload": {"count": 56, "entitlementId": "opob0NBO"}, "type": "REVOKE_ENTITLEMENT"}, {"creditPayload": {"balanceOrigin": "Nintendo", "count": 22, "currencyCode": "JBykQqtA", "expireAt": "1997-01-11T00:00:00Z"}, "debitPayload": {"count": 13, "currencyCode": "Q6jmwrg7", "walletPlatform": "Other"}, "fulFillItemPayload": {"count": 85, "entitlementCollectionId": "mrAEZWng", "entitlementOrigin": "Xbox", "itemIdentity": "mBjrc09z", "itemIdentityType": "ITEM_SKU"}, "revokeEntitlementPayload": {"count": 72, "entitlementId": "WSTbV7iD"}, "type": "REVOKE_ENTITLEMENT"}], "userId": "iMX01ptu"}, {"operations": [{"creditPayload": {"balanceOrigin": "Twitch", "count": 6, "currencyCode": "LkZFjcA8", "expireAt": "1999-11-25T00:00:00Z"}, "debitPayload": {"count": 81, "currencyCode": "nsUTS8nF", "walletPlatform": "Playstation"}, "fulFillItemPayload": {"count": 45, "entitlementCollectionId": "VopIjhzV", "entitlementOrigin": "System", "itemIdentity": "VaYsgmY2", "itemIdentityType": "ITEM_ID"}, "revokeEntitlementPayload": {"count": 82, "entitlementId": "Q0O5l4PI"}, "type": "REVOKE_ENTITLEMENT"}, {"creditPayload": {"balanceOrigin": "Twitch", "count": 49, "currencyCode": "QGCMGubS", "expireAt": "1982-10-12T00:00:00Z"}, "debitPayload": {"count": 24, "currencyCode": "udZqobZ5", "walletPlatform": "Steam"}, "fulFillItemPayload": {"count": 49, "entitlementCollectionId": "vJGZSyjY", "entitlementOrigin": "Nintendo", "itemIdentity": "cqiykFOe", "itemIdentityType": "ITEM_ID"}, "revokeEntitlementPayload": {"count": 31, "entitlementId": "xfQrqo1L"}, "type": "DEBIT_WALLET"}, {"creditPayload": {"balanceOrigin": "GooglePlay", "count": 50, "currencyCode": "4K45UPid", "expireAt": "1994-12-19T00:00:00Z"}, "debitPayload": {"count": 37, "currencyCode": "A1IdjUGD", "walletPlatform": "Nintendo"}, "fulFillItemPayload": {"count": 22, "entitlementCollectionId": "t5CWLbMS", "entitlementOrigin": "IOS", "itemIdentity": "y56auHjT", "itemIdentityType": "ITEM_ID"}, "revokeEntitlementPayload": {"count": 31, "entitlementId": "sVxdSFe9"}, "type": "REVOKE_ENTITLEMENT"}], "userId": "EIhMY0LH"}, {"operations": [{"creditPayload": {"balanceOrigin": "Oculus", "count": 95, "currencyCode": "iAxvga72", "expireAt": "1993-02-13T00:00:00Z"}, "debitPayload": {"count": 86, "currencyCode": "2p1ZE5sD", "walletPlatform": "IOS"}, "fulFillItemPayload": {"count": 2, "entitlementCollectionId": "GaIae1Sb", "entitlementOrigin": "Xbox", "itemIdentity": "8DiU9zn6", "itemIdentityType": "ITEM_ID"}, "revokeEntitlementPayload": {"count": 54, "entitlementId": "ZmLg5HM2"}, "type": "DEBIT_WALLET"}, {"creditPayload": {"balanceOrigin": "System", "count": 25, "currencyCode": "oyrG6k9g", "expireAt": "1979-10-01T00:00:00Z"}, "debitPayload": {"count": 26, "currencyCode": "oKHXLGls", "walletPlatform": "Steam"}, "fulFillItemPayload": {"count": 7, "entitlementCollectionId": "ZeZVCvJY", "entitlementOrigin": "Epic", "itemIdentity": "SaRMnT0E", "itemIdentityType": "ITEM_ID"}, "revokeEntitlementPayload": {"count": 98, "entitlementId": "r0LrUeNZ"}, "type": "CREDIT_WALLET"}, {"creditPayload": {"balanceOrigin": "Steam", "count": 19, "currencyCode": "z8aVEclB", "expireAt": "1972-08-08T00:00:00Z"}, "debitPayload": {"count": 43, "currencyCode": "MreB2J1l", "walletPlatform": "Playstation"}, "fulFillItemPayload": {"count": 94, "entitlementCollectionId": "vk0sYjqW", "entitlementOrigin": "Steam", "itemIdentity": "pxmBIrvK", "itemIdentityType": "ITEM_ID"}, "revokeEntitlementPayload": {"count": 54, "entitlementId": "JUn4Zmqu"}, "type": "REVOKE_ENTITLEMENT"}], "userId": "ggJkkcfr"}], "metadata": {"JkoCH5jA": {}, "uuPOY8iW": {}, "p5nB5pPM": {}}, "needPreCheck": false, "transactionId": "5o5K906x", "type": "1mv4NHUv"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op Commit \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 216 'Commit' test.out

#- 217 GetTradeHistoryByCriteria
$CLI_EXE \
    --sn platform \
    --op GetTradeHistoryByCriteria \
    --namespace $AB_NAMESPACE \
    --limit '95' \
    --offset '60' \
    --status 'INIT' \
    --type 'Cks8BoWa' \
    --userId 'dxOU21qj' \
    > test.out 2>&1
eval_tap $? 217 'GetTradeHistoryByCriteria' test.out

#- 218 GetTradeHistoryByTransactionId
$CLI_EXE \
    --sn platform \
    --op GetTradeHistoryByTransactionId \
    --namespace $AB_NAMESPACE \
    --transactionId 'u6X0YXk0' \
    > test.out 2>&1
eval_tap $? 218 'GetTradeHistoryByTransactionId' test.out

#- 219 UnlockSteamUserAchievement
# body param: body
echo '{"achievements": [{"id": "nvCmb2IC", "value": 64}, {"id": "HdYnWkaR", "value": 9}, {"id": "nW2Ib9i1", "value": 44}], "steamUserId": "GZsf50Ym"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UnlockSteamUserAchievement \
    --namespace $AB_NAMESPACE \
    --userId '2yGJnoln' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 219 'UnlockSteamUserAchievement' test.out

#- 220 GetXblUserAchievements
$CLI_EXE \
    --sn platform \
    --op GetXblUserAchievements \
    --namespace $AB_NAMESPACE \
    --userId 'fpWWAnKa' \
    --xboxUserId 'PibiNM9c' \
    > test.out 2>&1
eval_tap $? 220 'GetXblUserAchievements' test.out

#- 221 UpdateXblUserAchievement
# body param: body
echo '{"achievements": [{"id": "ha8QGvGs", "percentComplete": 15}, {"id": "wevQkoRw", "percentComplete": 42}, {"id": "25FDLqUS", "percentComplete": 9}], "serviceConfigId": "alT13XBA", "titleId": "MFGl8Otp", "xboxUserId": "42EvSLA8"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXblUserAchievement \
    --namespace $AB_NAMESPACE \
    --userId 'M65ivHxL' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 221 'UpdateXblUserAchievement' test.out

#- 222 AnonymizeCampaign
$CLI_EXE \
    --sn platform \
    --op AnonymizeCampaign \
    --namespace $AB_NAMESPACE \
    --userId 'GwhI74Fi' \
    > test.out 2>&1
eval_tap $? 222 'AnonymizeCampaign' test.out

#- 223 AnonymizeEntitlement
$CLI_EXE \
    --sn platform \
    --op AnonymizeEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'Qg6ppJmT' \
    > test.out 2>&1
eval_tap $? 223 'AnonymizeEntitlement' test.out

#- 224 AnonymizeFulfillment
$CLI_EXE \
    --sn platform \
    --op AnonymizeFulfillment \
    --namespace $AB_NAMESPACE \
    --userId 'whUxcfgt' \
    > test.out 2>&1
eval_tap $? 224 'AnonymizeFulfillment' test.out

#- 225 AnonymizeIntegration
$CLI_EXE \
    --sn platform \
    --op AnonymizeIntegration \
    --namespace $AB_NAMESPACE \
    --userId 'eYiH7iVO' \
    > test.out 2>&1
eval_tap $? 225 'AnonymizeIntegration' test.out

#- 226 AnonymizeOrder
$CLI_EXE \
    --sn platform \
    --op AnonymizeOrder \
    --namespace $AB_NAMESPACE \
    --userId '8MdmhjT4' \
    > test.out 2>&1
eval_tap $? 226 'AnonymizeOrder' test.out

#- 227 AnonymizePayment
$CLI_EXE \
    --sn platform \
    --op AnonymizePayment \
    --namespace $AB_NAMESPACE \
    --userId '2oYUHnCr' \
    > test.out 2>&1
eval_tap $? 227 'AnonymizePayment' test.out

#- 228 AnonymizeRevocation
$CLI_EXE \
    --sn platform \
    --op AnonymizeRevocation \
    --namespace $AB_NAMESPACE \
    --userId 'mFxhudlz' \
    > test.out 2>&1
eval_tap $? 228 'AnonymizeRevocation' test.out

#- 229 AnonymizeSubscription
$CLI_EXE \
    --sn platform \
    --op AnonymizeSubscription \
    --namespace $AB_NAMESPACE \
    --userId 'sv5JINjh' \
    > test.out 2>&1
eval_tap $? 229 'AnonymizeSubscription' test.out

#- 230 AnonymizeWallet
$CLI_EXE \
    --sn platform \
    --op AnonymizeWallet \
    --namespace $AB_NAMESPACE \
    --userId 'D3Josaag' \
    > test.out 2>&1
eval_tap $? 230 'AnonymizeWallet' test.out

#- 231 GetUserDLCByPlatform
$CLI_EXE \
    --sn platform \
    --op GetUserDLCByPlatform \
    --namespace $AB_NAMESPACE \
    --userId 'sLi8zOiU' \
    --type 'OCULUS' \
    > test.out 2>&1
eval_tap $? 231 'GetUserDLCByPlatform' test.out

#- 232 GetUserDLC
$CLI_EXE \
    --sn platform \
    --op GetUserDLC \
    --namespace $AB_NAMESPACE \
    --userId 'Du4Qme2e' \
    --type 'PSN' \
    > test.out 2>&1
eval_tap $? 232 'GetUserDLC' test.out

#- 233 QueryUserEntitlements
$CLI_EXE \
    --sn platform \
    --op QueryUserEntitlements \
    --namespace $AB_NAMESPACE \
    --userId 'yqPZ9PeA' \
    --activeOnly 'false' \
    --appType 'DLC' \
    --collectionId 'CVgHASdv' \
    --entitlementClazz 'OPTIONBOX' \
    --entitlementName 'u8sc5MLy' \
    --features '["dgukBifS", "2IVM6N2B", "kuSCuqCk"]' \
    --fuzzyMatchName 'true' \
    --itemId '["Q3q0vT1W", "CwTHrtFk", "HxHmg0bs"]' \
    --limit '85' \
    --offset '49' \
    --origin 'Playstation' \
    > test.out 2>&1
eval_tap $? 233 'QueryUserEntitlements' test.out

#- 234 GrantUserEntitlement
# body param: body
echo '[{"collectionId": "vQ2DUxdP", "endDate": "1974-09-02T00:00:00Z", "grantedCode": "tJihCBsN", "itemId": "AsdGkMYy", "itemNamespace": "euQCCSti", "language": "nmmD-GsAc", "origin": "IOS", "quantity": 42, "region": "RKMfJUoK", "source": "GIFT", "startDate": "1982-02-19T00:00:00Z", "storeId": "cVmerRLp"}, {"collectionId": "dNosFPnV", "endDate": "1990-11-23T00:00:00Z", "grantedCode": "D35joxIk", "itemId": "Idzre7Pk", "itemNamespace": "CFAUx6zz", "language": "KkD-RkWu", "origin": "System", "quantity": 64, "region": "4cU4IAnn", "source": "OTHER", "startDate": "1987-08-09T00:00:00Z", "storeId": "w6TQOEOg"}, {"collectionId": "rTp3Xc9d", "endDate": "1999-02-11T00:00:00Z", "grantedCode": "AuMjI5a5", "itemId": "T1HcDh4X", "itemNamespace": "4Aud6HWv", "language": "Qaxf-gcxH", "origin": "Steam", "quantity": 69, "region": "kBP3pW7x", "source": "REFERRAL_BONUS", "startDate": "1981-09-12T00:00:00Z", "storeId": "ly4WUCnB"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op GrantUserEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'YUGHrSU5' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 234 'GrantUserEntitlement' test.out

#- 235 GetUserAppEntitlementByAppId
$CLI_EXE \
    --sn platform \
    --op GetUserAppEntitlementByAppId \
    --namespace $AB_NAMESPACE \
    --userId 'A3F3MZuD' \
    --activeOnly 'true' \
    --appId 'vkoc1uEl' \
    > test.out 2>&1
eval_tap $? 235 'GetUserAppEntitlementByAppId' test.out

#- 236 QueryUserEntitlementsByAppType
$CLI_EXE \
    --sn platform \
    --op QueryUserEntitlementsByAppType \
    --namespace $AB_NAMESPACE \
    --userId 'mwBHK2x8' \
    --activeOnly 'false' \
    --limit '85' \
    --offset '3' \
    --appType 'DEMO' \
    > test.out 2>&1
eval_tap $? 236 'QueryUserEntitlementsByAppType' test.out

#- 237 GetUserEntitlementByItemId
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'Y2GBbCfM' \
    --activeOnly 'false' \
    --entitlementClazz 'ENTITLEMENT' \
    --platform 'e5m85Cl4' \
    --itemId 'eivyyNCC' \
    > test.out 2>&1
eval_tap $? 237 'GetUserEntitlementByItemId' test.out

#- 238 GetUserActiveEntitlementsByItemIds
$CLI_EXE \
    --sn platform \
    --op GetUserActiveEntitlementsByItemIds \
    --namespace $AB_NAMESPACE \
    --userId 'KqwM9eVj' \
    --ids '["1i6pWQi4", "Ozo2u9JL", "KxGgetvf"]' \
    --platform 'k0cPiDZn' \
    > test.out 2>&1
eval_tap $? 238 'GetUserActiveEntitlementsByItemIds' test.out

#- 239 GetUserEntitlementBySku
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementBySku \
    --namespace $AB_NAMESPACE \
    --userId '9MQso3fn' \
    --activeOnly 'true' \
    --entitlementClazz 'ENTITLEMENT' \
    --platform 'uAcKvEom' \
    --sku 'cb2z4zYl' \
    > test.out 2>&1
eval_tap $? 239 'GetUserEntitlementBySku' test.out

#- 240 ExistsAnyUserActiveEntitlement
$CLI_EXE \
    --sn platform \
    --op ExistsAnyUserActiveEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'YaAHtaKS' \
    --appIds '["oxEoFoLs", "VpjE1shQ", "hMLRMJab"]' \
    --itemIds '["n10YfLLQ", "pMy0c9P5", "qyXjVTUR"]' \
    --platform 'dZgZSXHg' \
    --skus '["OKrnTwi2", "ixC03jFl", "iYwiKs1J"]' \
    > test.out 2>&1
eval_tap $? 240 'ExistsAnyUserActiveEntitlement' test.out

#- 241 ExistsAnyUserActiveEntitlementByItemIds
$CLI_EXE \
    --sn platform \
    --op ExistsAnyUserActiveEntitlementByItemIds \
    --namespace $AB_NAMESPACE \
    --userId 'htdyQLEp' \
    --platform 'KerAMy17' \
    --itemIds '["4MOghojg", "UQW1mKG4", "iyuVDJQK"]' \
    > test.out 2>&1
eval_tap $? 241 'ExistsAnyUserActiveEntitlementByItemIds' test.out

#- 242 GetUserAppEntitlementOwnershipByAppId
$CLI_EXE \
    --sn platform \
    --op GetUserAppEntitlementOwnershipByAppId \
    --namespace $AB_NAMESPACE \
    --userId 'oI66Y1Le' \
    --appId 'lGSjNvaZ' \
    > test.out 2>&1
eval_tap $? 242 'GetUserAppEntitlementOwnershipByAppId' test.out

#- 243 GetUserEntitlementOwnershipByItemId
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementOwnershipByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'u0YQxZLN' \
    --entitlementClazz 'ENTITLEMENT' \
    --platform 'dV0bva4L' \
    --itemId 'bSvcVCvV' \
    > test.out 2>&1
eval_tap $? 243 'GetUserEntitlementOwnershipByItemId' test.out

#- 244 GetUserEntitlementOwnershipByItemIds
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementOwnershipByItemIds \
    --namespace $AB_NAMESPACE \
    --userId 'EzIVb1D5' \
    --ids '["pM30f5s5", "LvDE3q12", "IXnMDUDt"]' \
    --platform 'CfS9rb5i' \
    > test.out 2>&1
eval_tap $? 244 'GetUserEntitlementOwnershipByItemIds' test.out

#- 245 GetUserEntitlementOwnershipBySku
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementOwnershipBySku \
    --namespace $AB_NAMESPACE \
    --userId 'IPr7Nhi7' \
    --entitlementClazz 'CODE' \
    --platform 'y8YFOdri' \
    --sku 'KAPJonGh' \
    > test.out 2>&1
eval_tap $? 245 'GetUserEntitlementOwnershipBySku' test.out

#- 246 RevokeAllEntitlements
$CLI_EXE \
    --sn platform \
    --op RevokeAllEntitlements \
    --namespace $AB_NAMESPACE \
    --userId 'hjfKD5MX' \
    > test.out 2>&1
eval_tap $? 246 'RevokeAllEntitlements' test.out

#- 247 RevokeUserEntitlements
$CLI_EXE \
    --sn platform \
    --op RevokeUserEntitlements \
    --namespace $AB_NAMESPACE \
    --userId 'Rbqczl2a' \
    --entitlementIds 'PbHw0hn0' \
    > test.out 2>&1
eval_tap $? 247 'RevokeUserEntitlements' test.out

#- 248 GetUserEntitlement
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlement \
    --entitlementId 'AtvYuu6Z' \
    --namespace $AB_NAMESPACE \
    --userId 'AtVszywq' \
    > test.out 2>&1
eval_tap $? 248 'GetUserEntitlement' test.out

#- 249 UpdateUserEntitlement
# body param: body
echo '{"collectionId": "dCBVQSzl", "endDate": "1992-10-11T00:00:00Z", "nullFieldList": ["jIDoAax0", "PlzsDUJJ", "bcGsZra9"], "origin": "Other", "reason": "m7ywKlGw", "startDate": "1992-12-14T00:00:00Z", "status": "ACTIVE", "useCount": 19}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateUserEntitlement \
    --entitlementId 'SfJn0sqF' \
    --namespace $AB_NAMESPACE \
    --userId 'L9rOYIgu' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 249 'UpdateUserEntitlement' test.out

#- 250 ConsumeUserEntitlement
# body param: body
echo '{"options": ["ORUEYVaI", "P8zLXvKa", "ZcCMeg0n"], "platform": "XxCc6Uws", "requestId": "shnDq7Ez", "useCount": 1}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ConsumeUserEntitlement \
    --entitlementId 'CfadCmhb' \
    --namespace $AB_NAMESPACE \
    --userId 'rfvaxIo8' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 250 'ConsumeUserEntitlement' test.out

#- 251 DisableUserEntitlement
$CLI_EXE \
    --sn platform \
    --op DisableUserEntitlement \
    --entitlementId 'nx17Lc0y' \
    --namespace $AB_NAMESPACE \
    --userId 'O3B40O8R' \
    > test.out 2>&1
eval_tap $? 251 'DisableUserEntitlement' test.out

#- 252 EnableUserEntitlement
$CLI_EXE \
    --sn platform \
    --op EnableUserEntitlement \
    --entitlementId 'MTkoka4d' \
    --namespace $AB_NAMESPACE \
    --userId 'lpqCsT2L' \
    > test.out 2>&1
eval_tap $? 252 'EnableUserEntitlement' test.out

#- 253 GetUserEntitlementHistories
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementHistories \
    --entitlementId '4EhfLQzb' \
    --namespace $AB_NAMESPACE \
    --userId 'ZpPjp0hg' \
    > test.out 2>&1
eval_tap $? 253 'GetUserEntitlementHistories' test.out

#- 254 RevokeUserEntitlement
$CLI_EXE \
    --sn platform \
    --op RevokeUserEntitlement \
    --entitlementId 'sK80VXqh' \
    --namespace $AB_NAMESPACE \
    --userId 'XufveAst' \
    > test.out 2>&1
eval_tap $? 254 'RevokeUserEntitlement' test.out

#- 255 RevokeUserEntitlementByUseCount
# body param: body
echo '{"reason": "5XEhPfG1", "useCount": 70}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RevokeUserEntitlementByUseCount \
    --entitlementId 'Kj9qkm0L' \
    --namespace $AB_NAMESPACE \
    --userId '830GyDCy' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 255 'RevokeUserEntitlementByUseCount' test.out

#- 256 PreCheckRevokeUserEntitlementByUseCount
$CLI_EXE \
    --sn platform \
    --op PreCheckRevokeUserEntitlementByUseCount \
    --entitlementId 'kNFywIBB' \
    --namespace $AB_NAMESPACE \
    --userId 'JGUNSHzo' \
    --quantity '3' \
    > test.out 2>&1
eval_tap $? 256 'PreCheckRevokeUserEntitlementByUseCount' test.out

#- 257 RevokeUseCount
eval_tap 0 257 'RevokeUseCount # SKIP deprecated' test.out

#- 258 SellUserEntitlement
# body param: body
echo '{"platform": "ELyrqfgq", "requestId": "bsqvXXXa", "useCount": 72}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SellUserEntitlement \
    --entitlementId 'MtW4tEJL' \
    --namespace $AB_NAMESPACE \
    --userId 'vZ6Sbc2R' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 258 'SellUserEntitlement' test.out

#- 259 FulfillItem
# body param: body
echo '{"duration": 95, "endDate": "1989-09-10T00:00:00Z", "entitlementCollectionId": "ERG6poky", "entitlementOrigin": "Nintendo", "itemId": "U1CO4gSZ", "itemSku": "p7iI37gt", "language": "84OGa417", "metadata": {"AKBksbXc": {}, "cBIxw6i2": {}, "SiOGlnIO": {}}, "order": {"currency": {"currencyCode": "7N9ay192", "currencySymbol": "p4Rfeoko", "currencyType": "VIRTUAL", "decimals": 15, "namespace": "cw4Htuug"}, "ext": {"HlfPliDC": {}, "QjaQFWGd": {}, "esrV1xWc": {}}, "free": true}, "orderNo": "gFNgtUwZ", "origin": "Twitch", "overrideBundleItemQty": {"LkyPYanI": 93, "J3JQOybV": 35, "DXZk0Iun": 93}, "quantity": 8, "region": "xKvYblFR", "source": "SELL_BACK", "startDate": "1990-07-10T00:00:00Z", "storeId": "ElMIggUh"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op FulfillItem \
    --namespace $AB_NAMESPACE \
    --userId 'mSto5wox' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 259 'FulfillItem' test.out

#- 260 RedeemCode
# body param: body
echo '{"code": "pUe1yhfP", "language": "zLMC", "region": "EMddyUfN"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RedeemCode \
    --namespace $AB_NAMESPACE \
    --userId 'FuS3Ux9Y' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 260 'RedeemCode' test.out

#- 261 PreCheckFulfillItem
# body param: body
echo '{"itemId": "I5VkgiCt", "itemSku": "yA0ZGE1F", "quantity": 9}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PreCheckFulfillItem \
    --namespace $AB_NAMESPACE \
    --userId 'wNneRjN4' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 261 'PreCheckFulfillItem' test.out

#- 262 FulfillRewards
# body param: body
echo '{"entitlementCollectionId": "W6RwfQqz", "entitlementOrigin": "Steam", "metadata": {"KPmRnq1w": {}, "DP6JVGwz": {}, "LjLz0m36": {}}, "origin": "Xbox", "rewards": [{"currency": {"currencyCode": "IUvzbwsn", "namespace": "e7hwrBsZ"}, "item": {"itemId": "wweROtyk", "itemSku": "4c3ool6u", "itemType": "IYhZBuvc"}, "quantity": 43, "type": "ITEM"}, {"currency": {"currencyCode": "5olD9i3W", "namespace": "5qInWRX2"}, "item": {"itemId": "lZgOZ1VM", "itemSku": "KOelx0Er", "itemType": "wqPvrWVH"}, "quantity": 10, "type": "CURRENCY"}, {"currency": {"currencyCode": "mxFb5Zcg", "namespace": "abBgMZur"}, "item": {"itemId": "npGIsTuC", "itemSku": "iM6mLQWc", "itemType": "FerKZUkx"}, "quantity": 41, "type": "ITEM"}], "source": "ACHIEVEMENT", "transactionId": "6eJC2yXv"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op FulfillRewards \
    --namespace $AB_NAMESPACE \
    --userId 'ZNJVK5mU' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 262 'FulfillRewards' test.out

#- 263 QueryUserIAPOrders
$CLI_EXE \
    --sn platform \
    --op QueryUserIAPOrders \
    --namespace $AB_NAMESPACE \
    --userId 'X9Y4o0qE' \
    --endTime '385wfySW' \
    --limit '5' \
    --offset '77' \
    --productId 'DNeT6GFO' \
    --startTime 'UKluzSvz' \
    --status 'FAILED' \
    --type 'EPICGAMES' \
    > test.out 2>&1
eval_tap $? 263 'QueryUserIAPOrders' test.out

#- 264 QueryAllUserIAPOrders
$CLI_EXE \
    --sn platform \
    --op QueryAllUserIAPOrders \
    --namespace $AB_NAMESPACE \
    --userId 'tNCsC5J9' \
    > test.out 2>&1
eval_tap $? 264 'QueryAllUserIAPOrders' test.out

#- 265 QueryUserIAPConsumeHistory
$CLI_EXE \
    --sn platform \
    --op QueryUserIAPConsumeHistory \
    --namespace $AB_NAMESPACE \
    --userId 'pysEVT7r' \
    --endTime '6RDurLHB' \
    --limit '86' \
    --offset '59' \
    --startTime 'gZhPkvIp' \
    --status 'FAIL' \
    --type 'APPLE' \
    > test.out 2>&1
eval_tap $? 265 'QueryUserIAPConsumeHistory' test.out

#- 266 MockFulfillIAPItem
# body param: body
echo '{"itemIdentityType": "ITEM_SKU", "language": "WTQR", "productId": "PLAOzLbk", "region": "yszfwpJl", "transactionId": "ZRrEAohG", "type": "EPICGAMES"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op MockFulfillIAPItem \
    --namespace $AB_NAMESPACE \
    --userId 'cHUSH2vV' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 266 'MockFulfillIAPItem' test.out

#- 267 QueryUserOrders
$CLI_EXE \
    --sn platform \
    --op QueryUserOrders \
    --namespace $AB_NAMESPACE \
    --userId '842AcaxQ' \
    --itemId 'OFRz5pC1' \
    --limit '55' \
    --offset '7' \
    --status 'CLOSED' \
    > test.out 2>&1
eval_tap $? 267 'QueryUserOrders' test.out

#- 268 AdminCreateUserOrder
# body param: body
echo '{"currencyCode": "coYA7xGs", "currencyNamespace": "EQBv64vc", "discountedPrice": 2, "entitlementPlatform": "Playstation", "ext": {"DOGGgitJ": {}, "AEzJ1pk7": {}, "dYimOMCp": {}}, "itemId": "TyF7aSWF", "language": "B40ew4Sz", "options": {"skipPriceValidation": false}, "platform": "Playstation", "price": 20, "quantity": 52, "region": "FdkwiDBC", "returnUrl": "bTRnUA5O", "sandbox": false, "sectionId": "tVbIVTB2"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op AdminCreateUserOrder \
    --namespace $AB_NAMESPACE \
    --userId '8VnxWzqO' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 268 'AdminCreateUserOrder' test.out

#- 269 CountOfPurchasedItem
$CLI_EXE \
    --sn platform \
    --op CountOfPurchasedItem \
    --namespace $AB_NAMESPACE \
    --userId 'L6dHqM1O' \
    --itemId 'F2lk9whr' \
    > test.out 2>&1
eval_tap $? 269 'CountOfPurchasedItem' test.out

#- 270 GetUserOrder
$CLI_EXE \
    --sn platform \
    --op GetUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'Z1a0MTTC' \
    --userId 'hNpGQMUO' \
    > test.out 2>&1
eval_tap $? 270 'GetUserOrder' test.out

#- 271 UpdateUserOrderStatus
# body param: body
echo '{"status": "FULFILL_FAILED", "statusReason": "5yggoEwQ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateUserOrderStatus \
    --namespace $AB_NAMESPACE \
    --orderNo 'FE42uWoD' \
    --userId 'Qtrcb7Jz' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 271 'UpdateUserOrderStatus' test.out

#- 272 FulfillUserOrder
$CLI_EXE \
    --sn platform \
    --op FulfillUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'qMOu1TCU' \
    --userId 'uOGzCb6n' \
    > test.out 2>&1
eval_tap $? 272 'FulfillUserOrder' test.out

#- 273 GetUserOrderGrant
$CLI_EXE \
    --sn platform \
    --op GetUserOrderGrant \
    --namespace $AB_NAMESPACE \
    --orderNo 'v6n2mykq' \
    --userId 'DXYJlFh5' \
    > test.out 2>&1
eval_tap $? 273 'GetUserOrderGrant' test.out

#- 274 GetUserOrderHistories
$CLI_EXE \
    --sn platform \
    --op GetUserOrderHistories \
    --namespace $AB_NAMESPACE \
    --orderNo 'kuKy7OAS' \
    --userId 'F2eCc2B0' \
    > test.out 2>&1
eval_tap $? 274 'GetUserOrderHistories' test.out

#- 275 ProcessUserOrderNotification
# body param: body
echo '{"additionalData": {"cardSummary": "fgFquqdI"}, "authorisedTime": "1982-09-11T00:00:00Z", "chargebackReversedTime": "1979-12-12T00:00:00Z", "chargebackTime": "1978-03-31T00:00:00Z", "chargedTime": "1978-05-11T00:00:00Z", "createdTime": "1989-09-11T00:00:00Z", "currency": {"currencyCode": "eqe1frqn", "currencySymbol": "L4qrBCmP", "currencyType": "REAL", "decimals": 86, "namespace": "O6CNEPXO"}, "customParameters": {"YMwuUbYc": {}, "FaFcE2CX": {}, "ppZEVjBB": {}}, "extOrderNo": "Jqg8aDeV", "extTxId": "XKnYn8ft", "extUserId": "z6A0hGur", "issuedAt": "1990-09-30T00:00:00Z", "metadata": {"VavaBZlP": "t0aRMEir", "8OfmcEHz": "bqhjaXKS", "cqRG51tM": "Iyfx3dDM"}, "namespace": "PiQYG6M7", "nonceStr": "wvxfIGMl", "paymentMethod": "830RVUuu", "paymentMethodFee": 91, "paymentOrderNo": "z1E0Lifu", "paymentProvider": "ADYEN", "paymentProviderFee": 69, "paymentStationUrl": "8e75nlD2", "price": 17, "refundedTime": "1979-12-16T00:00:00Z", "salesTax": 9, "sandbox": true, "sku": "ThdX18Md", "status": "DELETED", "statusReason": "YC6iYq8v", "subscriptionId": "TQahHfgm", "subtotalPrice": 38, "targetNamespace": "RFRcmVcX", "targetUserId": "oBroKbHO", "tax": 54, "totalPrice": 40, "totalTax": 60, "txEndTime": "1977-10-04T00:00:00Z", "type": "A4vxHgSG", "userId": "Kc5CgmaS", "vat": 46}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ProcessUserOrderNotification \
    --namespace $AB_NAMESPACE \
    --orderNo 'DG8pdbyk' \
    --userId '9mj765wJ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 275 'ProcessUserOrderNotification' test.out

#- 276 DownloadUserOrderReceipt
$CLI_EXE \
    --sn platform \
    --op DownloadUserOrderReceipt \
    --namespace $AB_NAMESPACE \
    --orderNo 'k1OPOPBd' \
    --userId 'SRubR8mP' \
    > test.out 2>&1
eval_tap $? 276 'DownloadUserOrderReceipt' test.out

#- 277 CreateUserPaymentOrder
# body param: body
echo '{"currencyCode": "D0Urg7s2", "currencyNamespace": "r5gved4H", "customParameters": {"eD8ANuc1": {}, "ZbCk5in6": {}, "3wFUoXdD": {}}, "description": "MWuJiXd1", "extOrderNo": "hEnis8NT", "extUserId": "dAlr4YDl", "itemType": "APP", "language": "QDJq-zV", "metadata": {"mbWokbUE": "vP0rwbqS", "8LzSXbME": "ceAM60WE", "VgUTuqlJ": "TSEN5phe"}, "notifyUrl": "S31Wm7E0", "omitNotification": true, "platform": "a8sSMRjL", "price": 31, "recurringPaymentOrderNo": "02JWIMIo", "region": "5CoTfJzt", "returnUrl": "6qdYlvOj", "sandbox": true, "sku": "4txAnV1K", "subscriptionId": "EzXVneZT", "title": "uG0ZKWvX"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateUserPaymentOrder \
    --namespace $AB_NAMESPACE \
    --userId 'JDSa1R8g' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 277 'CreateUserPaymentOrder' test.out

#- 278 RefundUserPaymentOrder
# body param: body
echo '{"description": "dgpOViz7"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RefundUserPaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'fOoL8jF9' \
    --userId 'Des4mvvs' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 278 'RefundUserPaymentOrder' test.out

#- 279 ApplyUserRedemption
# body param: body
echo '{"code": "PzFlMVsr", "orderNo": "PFFeCh8N"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ApplyUserRedemption \
    --namespace $AB_NAMESPACE \
    --userId 'GHa4v176' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 279 'ApplyUserRedemption' test.out

#- 280 DoRevocation
# body param: body
echo '{"meta": {"TQz4AGcd": {}, "RGhjv5H4": {}, "O3qwuXTn": {}}, "revokeEntries": [{"currency": {"balanceOrigin": "System", "currencyCode": "aBj5IlSu", "namespace": "1OB0L9u3"}, "entitlement": {"entitlementId": "9IYkgmaE"}, "item": {"entitlementOrigin": "IOS", "itemIdentity": "4YhFZ0tj", "itemIdentityType": "ITEM_ID", "origin": "GooglePlay"}, "quantity": 6, "type": "ENTITLEMENT"}, {"currency": {"balanceOrigin": "GooglePlay", "currencyCode": "MJsW15FY", "namespace": "LW50bQ9g"}, "entitlement": {"entitlementId": "CM6XYahj"}, "item": {"entitlementOrigin": "Playstation", "itemIdentity": "JYTUpdqv", "itemIdentityType": "ITEM_SKU", "origin": "Xbox"}, "quantity": 84, "type": "ITEM"}, {"currency": {"balanceOrigin": "Nintendo", "currencyCode": "gAmHOXif", "namespace": "P348l22Z"}, "entitlement": {"entitlementId": "QLwwxA3e"}, "item": {"entitlementOrigin": "Oculus", "itemIdentity": "QIDwfVFW", "itemIdentityType": "ITEM_ID", "origin": "GooglePlay"}, "quantity": 31, "type": "ITEM"}], "source": "ORDER", "transactionId": "k8Gfqm9a"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op DoRevocation \
    --namespace $AB_NAMESPACE \
    --userId 'Z0cL3ADS' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 280 'DoRevocation' test.out

#- 281 RegisterXblSessions
# body param: body
echo '{"gameSessionId": "cXToq40R", "payload": {"DMj9o7yL": {}, "epSUaKu1": {}, "7wpqYsT3": {}}, "scid": "PjOj43T3", "sessionTemplateName": "3Lk6SvqB"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RegisterXblSessions \
    --namespace $AB_NAMESPACE \
    --userId 'y2IgdGiM' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 281 'RegisterXblSessions' test.out

#- 282 QueryUserSubscriptions
$CLI_EXE \
    --sn platform \
    --op QueryUserSubscriptions \
    --namespace $AB_NAMESPACE \
    --userId 'I3W5Quyq' \
    --chargeStatus 'NEVER' \
    --itemId 'Vgelompb' \
    --limit '41' \
    --offset '38' \
    --sku 'LXECFAtM' \
    --status 'INIT' \
    --subscribedBy 'PLATFORM' \
    > test.out 2>&1
eval_tap $? 282 'QueryUserSubscriptions' test.out

#- 283 GetUserSubscriptionActivities
$CLI_EXE \
    --sn platform \
    --op GetUserSubscriptionActivities \
    --namespace $AB_NAMESPACE \
    --userId 'y8jpvWBh' \
    --excludeSystem 'true' \
    --limit '71' \
    --offset '75' \
    --subscriptionId 'GNXO5Am6' \
    > test.out 2>&1
eval_tap $? 283 'GetUserSubscriptionActivities' test.out

#- 284 PlatformSubscribeSubscription
# body param: body
echo '{"grantDays": 3, "itemId": "Q1Cc5f3v", "language": "ScgRdvxn", "reason": "TrzMq3Nn", "region": "RDVjxzYy", "source": "MR5f6a25"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PlatformSubscribeSubscription \
    --namespace $AB_NAMESPACE \
    --userId 't40UXnoU' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 284 'PlatformSubscribeSubscription' test.out

#- 285 CheckUserSubscriptionSubscribableByItemId
$CLI_EXE \
    --sn platform \
    --op CheckUserSubscriptionSubscribableByItemId \
    --namespace $AB_NAMESPACE \
    --userId '9Z7hm7c3' \
    --itemId 'PrfPQBp1' \
    > test.out 2>&1
eval_tap $? 285 'CheckUserSubscriptionSubscribableByItemId' test.out

#- 286 GetUserSubscription
$CLI_EXE \
    --sn platform \
    --op GetUserSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'bYwasZ1t' \
    --userId 'xXA5gkdU' \
    > test.out 2>&1
eval_tap $? 286 'GetUserSubscription' test.out

#- 287 DeleteUserSubscription
$CLI_EXE \
    --sn platform \
    --op DeleteUserSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'q4TdQFag' \
    --userId '78jx6e88' \
    > test.out 2>&1
eval_tap $? 287 'DeleteUserSubscription' test.out

#- 288 CancelSubscription
# body param: body
echo '{"immediate": true, "reason": "6gVj7LQA"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CancelSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'TcD8CLq4' \
    --userId 'P9L2wfRX' \
    --force 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 288 'CancelSubscription' test.out

#- 289 GrantDaysToSubscription
# body param: body
echo '{"grantDays": 75, "reason": "CK35m5mS"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op GrantDaysToSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'dO9rH1MI' \
    --userId 'ZNltbQ88' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 289 'GrantDaysToSubscription' test.out

#- 290 GetUserSubscriptionBillingHistories
$CLI_EXE \
    --sn platform \
    --op GetUserSubscriptionBillingHistories \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'RcQBgMLo' \
    --userId '7Wg22El1' \
    --excludeFree 'false' \
    --limit '65' \
    --offset '86' \
    > test.out 2>&1
eval_tap $? 290 'GetUserSubscriptionBillingHistories' test.out

#- 291 ProcessUserSubscriptionNotification
# body param: body
echo '{"additionalData": {"cardSummary": "TmRlYBBD"}, "authorisedTime": "1980-05-05T00:00:00Z", "chargebackReversedTime": "1975-01-26T00:00:00Z", "chargebackTime": "1983-10-26T00:00:00Z", "chargedTime": "1983-09-18T00:00:00Z", "createdTime": "1990-11-02T00:00:00Z", "currency": {"currencyCode": "mn1BRMok", "currencySymbol": "z4m5jvAR", "currencyType": "VIRTUAL", "decimals": 4, "namespace": "DXFlvWLa"}, "customParameters": {"8asdyJsW": {}, "XA8lTkcN": {}, "s0D2gLlo": {}}, "extOrderNo": "B4F1xmtq", "extTxId": "eAsiOfxK", "extUserId": "NdCWhImc", "issuedAt": "1973-12-12T00:00:00Z", "metadata": {"HbPh5lWe": "5Jtbn427", "qwZ1D2Vz": "p3WG4FyP", "rG3tJJGg": "QkdzVYv1"}, "namespace": "K5RTSZzn", "nonceStr": "AbP3oW3q", "paymentMethod": "TshWpkot", "paymentMethodFee": 97, "paymentOrderNo": "vLqCk4NF", "paymentProvider": "XSOLLA", "paymentProviderFee": 3, "paymentStationUrl": "6gpdWDE7", "price": 38, "refundedTime": "1994-02-22T00:00:00Z", "salesTax": 95, "sandbox": false, "sku": "XZ8cVQdg", "status": "CHARGED", "statusReason": "E5uTvLGg", "subscriptionId": "gA9wwTwe", "subtotalPrice": 18, "targetNamespace": "bLFYvpZM", "targetUserId": "sfIMqEqr", "tax": 23, "totalPrice": 66, "totalTax": 46, "txEndTime": "1982-12-24T00:00:00Z", "type": "L0pAwnLX", "userId": "OYN1Cvki", "vat": 27}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ProcessUserSubscriptionNotification \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'thgpvPxb' \
    --userId 'FzY8YgxI' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 291 'ProcessUserSubscriptionNotification' test.out

#- 292 AcquireUserTicket
# body param: body
echo '{"count": 37, "orderNo": "6vXvAmY4"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op AcquireUserTicket \
    --boothName 'xv2NEqle' \
    --namespace $AB_NAMESPACE \
    --userId 'llyH4Mwe' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 292 'AcquireUserTicket' test.out

#- 293 QueryUserCurrencyWallets
$CLI_EXE \
    --sn platform \
    --op QueryUserCurrencyWallets \
    --namespace $AB_NAMESPACE \
    --userId 'OR5HZM7l' \
    > test.out 2>&1
eval_tap $? 293 'QueryUserCurrencyWallets' test.out

#- 294 DebitUserWalletByCurrencyCode
# body param: body
echo '{"allowOverdraft": true, "amount": 100, "balanceOrigin": "Oculus", "balanceSource": "IAP_REVOCATION", "metadata": {"J4ZNmo6O": {}, "7cxyije4": {}, "TGQvayiR": {}}, "reason": "ze4O3YDM"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op DebitUserWalletByCurrencyCode \
    --currencyCode '8j8BpmRK' \
    --namespace $AB_NAMESPACE \
    --userId 'Nu3P6Pji' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 294 'DebitUserWalletByCurrencyCode' test.out

#- 295 ListUserCurrencyTransactions
$CLI_EXE \
    --sn platform \
    --op ListUserCurrencyTransactions \
    --currencyCode 'Ky8oEz4k' \
    --namespace $AB_NAMESPACE \
    --userId 'rOXqjDDP' \
    --limit '85' \
    --offset '80' \
    > test.out 2>&1
eval_tap $? 295 'ListUserCurrencyTransactions' test.out

#- 296 CheckBalance
# body param: request
echo '{"amount": 47, "debitBalanceSource": "TRADE", "metadata": {"qV8nwCwM": {}, "VMjtBZj0": {}, "H6i5uiI5": {}}, "reason": "xRBY3lMx", "walletPlatform": "Epic"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CheckBalance \
    --currencyCode 'Sa59L6nv' \
    --namespace $AB_NAMESPACE \
    --userId 'LqaIv8IZ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 296 'CheckBalance' test.out

#- 297 CheckWallet
eval_tap 0 297 'CheckWallet # SKIP deprecated' test.out

#- 298 CreditUserWallet
# body param: body
echo '{"amount": 25, "expireAt": "1979-03-17T00:00:00Z", "metadata": {"oVmCeOGX": {}, "q1R1wkKJ": {}, "OvpF8R0C": {}}, "origin": "Twitch", "reason": "yN97nxsD", "source": "TRADE"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreditUserWallet \
    --currencyCode 'dRJYUHLm' \
    --namespace $AB_NAMESPACE \
    --userId 'TbBt8gm6' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 298 'CreditUserWallet' test.out

#- 299 DebitByWalletPlatform
# body param: request
echo '{"amount": 80, "debitBalanceSource": "EXPIRATION", "metadata": {"YyYcYlow": {}, "raFtGj9y": {}, "zf73KZv1": {}}, "reason": "eFDcMO6M", "walletPlatform": "IOS"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op DebitByWalletPlatform \
    --currencyCode 'nHxNvi9D' \
    --namespace $AB_NAMESPACE \
    --userId 'thVwHVES' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 299 'DebitByWalletPlatform' test.out

#- 300 PayWithUserWallet
# body param: body
echo '{"amount": 80, "metadata": {"49cpW0LL": {}, "gsDBoLxL": {}, "yWfg1pGI": {}}, "walletPlatform": "Playstation"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PayWithUserWallet \
    --currencyCode 'G2JeKDMz' \
    --namespace $AB_NAMESPACE \
    --userId 'NR68k0nE' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 300 'PayWithUserWallet' test.out

#- 301 GetUserWallet
eval_tap 0 301 'GetUserWallet # SKIP deprecated' test.out

#- 302 DebitUserWallet
eval_tap 0 302 'DebitUserWallet # SKIP deprecated' test.out

#- 303 DisableUserWallet
eval_tap 0 303 'DisableUserWallet # SKIP deprecated' test.out

#- 304 EnableUserWallet
eval_tap 0 304 'EnableUserWallet # SKIP deprecated' test.out

#- 305 ListUserWalletTransactions
eval_tap 0 305 'ListUserWalletTransactions # SKIP deprecated' test.out

#- 306 ListViews
$CLI_EXE \
    --sn platform \
    --op ListViews \
    --namespace $AB_NAMESPACE \
    --storeId 'vasmjuKq' \
    > test.out 2>&1
eval_tap $? 306 'ListViews' test.out

#- 307 CreateView
# body param: body
echo '{"displayOrder": 56, "localizations": {"dOTnoRFf": {"description": "N1gunj42", "localExt": {"M4QmO7pO": {}, "Wvhm42KM": {}, "QIxbSmp1": {}}, "longDescription": "foMPDtnN", "title": "UIHNSiy1"}, "4Igxt0hN": {"description": "LRKXl2vv", "localExt": {"y6RMiK0v": {}, "MurpoX9P": {}, "rvvigtop": {}}, "longDescription": "XtejGIyN", "title": "LNdK8ZnH"}, "fBsuc71C": {"description": "qnzb9OKI", "localExt": {"jrdnsGQW": {}, "V9PA704i": {}, "nny5ogZN": {}}, "longDescription": "G5ghBmv8", "title": "g3sRvrfk"}}, "name": "6DHjpd5h"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateView \
    --namespace $AB_NAMESPACE \
    --storeId 'ldgsaZ3m' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 307 'CreateView' test.out

#- 308 GetView
$CLI_EXE \
    --sn platform \
    --op GetView \
    --namespace $AB_NAMESPACE \
    --viewId 'lQqTY1Uj' \
    --storeId '0vUS0Iz7' \
    > test.out 2>&1
eval_tap $? 308 'GetView' test.out

#- 309 UpdateView
# body param: body
echo '{"displayOrder": 96, "localizations": {"nPI8uY1C": {"description": "QmgDI7ZD", "localExt": {"6IpNz9Cw": {}, "0P1h4D1k": {}, "nK8LOAoY": {}}, "longDescription": "VViVrbXM", "title": "WYKNG8Rd"}, "k1LaVuss": {"description": "WbgpYXcu", "localExt": {"t11W3jx4": {}, "D8AbLp3i": {}, "WIFjoznv": {}}, "longDescription": "HKFyvrGy", "title": "LVlI3ClO"}, "uZs5yFam": {"description": "vHwo8HBj", "localExt": {"SWyBL9zX": {}, "Gkp6zc36": {}, "rb2YnXsa": {}}, "longDescription": "zlUk5NIn", "title": "4bFvFAaX"}}, "name": "waaRHJMg"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateView \
    --namespace $AB_NAMESPACE \
    --viewId 'P9Pa6haj' \
    --storeId 'p8Bv38ew' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 309 'UpdateView' test.out

#- 310 DeleteView
$CLI_EXE \
    --sn platform \
    --op DeleteView \
    --namespace $AB_NAMESPACE \
    --viewId 'dlJ5NqQg' \
    --storeId 'R0mjl7Ke' \
    > test.out 2>&1
eval_tap $? 310 'DeleteView' test.out

#- 311 QueryWallets
eval_tap 0 311 'QueryWallets # SKIP deprecated' test.out

#- 312 BulkCredit
# body param: body
echo '[{"creditRequest": {"amount": 23, "expireAt": "1974-10-08T00:00:00Z", "metadata": {"sMNhCQfw": {}, "heC0uIE6": {}, "w1wb2pAv": {}}, "origin": "Oculus", "reason": "JTykCs8c", "source": "DLC"}, "currencyCode": "atJy4ir1", "userIds": ["5sgOjDq0", "Uty0m2I2", "aiXsYEhM"]}, {"creditRequest": {"amount": 63, "expireAt": "1984-08-31T00:00:00Z", "metadata": {"cgUqx3bX": {}, "EjZuxzaP": {}, "Tm49FOo0": {}}, "origin": "GooglePlay", "reason": "XdCfH1fg", "source": "PURCHASE"}, "currencyCode": "DgcGd2ND", "userIds": ["pUq4IJtd", "0NAD2f71", "3G0c02gw"]}, {"creditRequest": {"amount": 85, "expireAt": "1995-08-17T00:00:00Z", "metadata": {"yUYTpPTV": {}, "Bz33K3JW": {}, "bWH9FcXf": {}}, "origin": "IOS", "reason": "NZiRUTla", "source": "GIFT"}, "currencyCode": "1ElOTuaq", "userIds": ["pZhO8j6b", "70lnM7WS", "vqWo0v50"]}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op BulkCredit \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 312 'BulkCredit' test.out

#- 313 BulkDebit
# body param: body
echo '[{"currencyCode": "RmBr9RoK", "request": {"allowOverdraft": false, "amount": 23, "balanceOrigin": "Nintendo", "balanceSource": "OTHER", "metadata": {"bj1yVE2M": {}, "ozT0PYou": {}, "zn1XHzjk": {}}, "reason": "9rlYpaVG"}, "userIds": ["no5fJ9Rj", "ZUfsrwfL", "P7FgWldw"]}, {"currencyCode": "7sJl5TGg", "request": {"allowOverdraft": false, "amount": 19, "balanceOrigin": "Steam", "balanceSource": "DLC_REVOCATION", "metadata": {"cBfpabeo": {}, "HKDMu4xj": {}, "CuoQz3Fn": {}}, "reason": "4euPs2e2"}, "userIds": ["pHLfomUO", "Rv6qjBfF", "JiYKAsJh"]}, {"currencyCode": "Gd0qekIZ", "request": {"allowOverdraft": false, "amount": 79, "balanceOrigin": "GooglePlay", "balanceSource": "IAP_REVOCATION", "metadata": {"LGkgP5Px": {}, "BUTL0x4f": {}, "iUc8z8bf": {}}, "reason": "RVausy6b"}, "userIds": ["tLEJzW0E", "kww8Qkvh", "KnRh4JvC"]}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op BulkDebit \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 313 'BulkDebit' test.out

#- 314 GetWallet
eval_tap 0 314 'GetWallet # SKIP deprecated' test.out

#- 315 SyncOrders
$CLI_EXE \
    --sn platform \
    --op SyncOrders \
    --nextEvaluatedKey 'WsqELKb8' \
    --end 'vA3VPRCU' \
    --start 'sdzL7Zzb' \
    > test.out 2>&1
eval_tap $? 315 'SyncOrders' test.out

#- 316 TestAdyenConfig
# body param: body
echo '{"allowedPaymentMethods": ["0deNMzWJ", "VyjgXBLR", "vuFCzkep"], "apiKey": "BhRYxS1V", "authoriseAsCapture": false, "blockedPaymentMethods": ["oh5p4Ure", "suaiFqQD", "tzDdHHjT"], "clientKey": "fx5NMmRW", "dropInSettings": "qDMZlXxr", "liveEndpointUrlPrefix": "sIxvnW2Q", "merchantAccount": "PuXRixYf", "notificationHmacKey": "2qAjof73", "notificationPassword": "8PUR7C1B", "notificationUsername": "EKQFfMEx", "returnUrl": "RXzTjONB", "settings": "mbeRArC7"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestAdyenConfig \
    --sandbox 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 316 'TestAdyenConfig' test.out

#- 317 TestAliPayConfig
# body param: body
echo '{"appId": "yqU0t1zO", "privateKey": "d92EbFJc", "publicKey": "5xMsSQvy", "returnUrl": "NJ0uwOrq"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestAliPayConfig \
    --sandbox 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 317 'TestAliPayConfig' test.out

#- 318 TestCheckoutConfig
# body param: body
echo '{"publicKey": "Ir4hvDL9", "secretKey": "w7R5f8WX"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestCheckoutConfig \
    --sandbox 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 318 'TestCheckoutConfig' test.out

#- 319 DebugMatchedPaymentMerchantConfig
$CLI_EXE \
    --sn platform \
    --op DebugMatchedPaymentMerchantConfig \
    --namespace_ 'kR1X7Wy8' \
    --region 'bQJlvyUE' \
    > test.out 2>&1
eval_tap $? 319 'DebugMatchedPaymentMerchantConfig' test.out

#- 320 TestPayPalConfig
# body param: body
echo '{"clientID": "MBK0EEVD", "clientSecret": "6wqSM67j", "returnUrl": "BqE7JX6c", "webHookId": "fqMtixmw"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestPayPalConfig \
    --sandbox 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 320 'TestPayPalConfig' test.out

#- 321 TestStripeConfig
# body param: body
echo '{"allowedPaymentMethodTypes": ["H5339tiv", "sXkhuDM6", "WDxEa6sf"], "publishableKey": "rmUGd1kf", "secretKey": "4bNUg8jf", "webhookSecret": "SkiLc85Q"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestStripeConfig \
    --sandbox 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 321 'TestStripeConfig' test.out

#- 322 TestWxPayConfig
# body param: body
echo '{"appId": "DAtlur0H", "key": "1XFSZctv", "mchid": "jTYS2NWG", "returnUrl": "86nZt9To"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestWxPayConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 322 'TestWxPayConfig' test.out

#- 323 TestXsollaConfig
# body param: body
echo '{"apiKey": "fo95Jcbo", "flowCompletionUrl": "qLxJw99B", "merchantId": 59, "projectId": 11, "projectSecretKey": "6D1nSdkQ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestXsollaConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 323 'TestXsollaConfig' test.out

#- 324 GetPaymentMerchantConfig
$CLI_EXE \
    --sn platform \
    --op GetPaymentMerchantConfig \
    --id '3Oj06g2c' \
    > test.out 2>&1
eval_tap $? 324 'GetPaymentMerchantConfig' test.out

#- 325 UpdateAdyenConfig
# body param: body
echo '{"allowedPaymentMethods": ["0HI5rwcD", "rznayYuS", "6uLJNNEE"], "apiKey": "duXQXbN7", "authoriseAsCapture": true, "blockedPaymentMethods": ["5ygt8iHL", "bHgMoAdG", "i2thG2qJ"], "clientKey": "Yvmfyqrk", "dropInSettings": "IrSeFtb5", "liveEndpointUrlPrefix": "LapxXbvA", "merchantAccount": "CSAawkVO", "notificationHmacKey": "qU2VYUiQ", "notificationPassword": "oN55ICwj", "notificationUsername": "knPcCnNm", "returnUrl": "4I0h62xD", "settings": "EJIpcdcR"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateAdyenConfig \
    --id 'ULUwCbD1' \
    --sandbox 'false' \
    --validate 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 325 'UpdateAdyenConfig' test.out

#- 326 TestAdyenConfigById
$CLI_EXE \
    --sn platform \
    --op TestAdyenConfigById \
    --id 'c5GxCuH2' \
    --sandbox 'false' \
    > test.out 2>&1
eval_tap $? 326 'TestAdyenConfigById' test.out

#- 327 UpdateAliPayConfig
# body param: body
echo '{"appId": "1519KnWL", "privateKey": "w4LNDKsL", "publicKey": "JysUWKYi", "returnUrl": "egEKPFXa"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateAliPayConfig \
    --id 'MeK8gRp9' \
    --sandbox 'false' \
    --validate 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 327 'UpdateAliPayConfig' test.out

#- 328 TestAliPayConfigById
$CLI_EXE \
    --sn platform \
    --op TestAliPayConfigById \
    --id 'ocLqPMAf' \
    --sandbox 'false' \
    > test.out 2>&1
eval_tap $? 328 'TestAliPayConfigById' test.out

#- 329 UpdateCheckoutConfig
# body param: body
echo '{"publicKey": "sKJ8ZSxe", "secretKey": "d0vNdHEQ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCheckoutConfig \
    --id 'XbnPbBuG' \
    --sandbox 'true' \
    --validate 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 329 'UpdateCheckoutConfig' test.out

#- 330 TestCheckoutConfigById
$CLI_EXE \
    --sn platform \
    --op TestCheckoutConfigById \
    --id 'NwjS1s8B' \
    --sandbox 'true' \
    > test.out 2>&1
eval_tap $? 330 'TestCheckoutConfigById' test.out

#- 331 UpdatePayPalConfig
# body param: body
echo '{"clientID": "kivUS5CG", "clientSecret": "zjmr7U7H", "returnUrl": "vFYzOWbO", "webHookId": "mavGTjgU"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePayPalConfig \
    --id 'XekMC3nS' \
    --sandbox 'true' \
    --validate 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 331 'UpdatePayPalConfig' test.out

#- 332 TestPayPalConfigById
$CLI_EXE \
    --sn platform \
    --op TestPayPalConfigById \
    --id 'SkY1uaAn' \
    --sandbox 'true' \
    > test.out 2>&1
eval_tap $? 332 'TestPayPalConfigById' test.out

#- 333 UpdateStripeConfig
# body param: body
echo '{"allowedPaymentMethodTypes": ["TC6LTU0u", "9qG2M4ri", "DnGKTrVr"], "publishableKey": "13j6j6zJ", "secretKey": "MK2EU9EV", "webhookSecret": "NE4sni2p"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateStripeConfig \
    --id '7E5IQNim' \
    --sandbox 'false' \
    --validate 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 333 'UpdateStripeConfig' test.out

#- 334 TestStripeConfigById
$CLI_EXE \
    --sn platform \
    --op TestStripeConfigById \
    --id '3SjBcjdV' \
    --sandbox 'true' \
    > test.out 2>&1
eval_tap $? 334 'TestStripeConfigById' test.out

#- 335 UpdateWxPayConfig
# body param: body
echo '{"appId": "pux3CzVl", "key": "aIRgiqbn", "mchid": "xfbl6hQ3", "returnUrl": "1oLm9M4W"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateWxPayConfig \
    --id 'awpGiVmE' \
    --validate 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 335 'UpdateWxPayConfig' test.out

#- 336 UpdateWxPayConfigCert
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UpdateWxPayConfigCert \
    --id 'rZnza546' \
    --upload $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 336 'UpdateWxPayConfigCert' test.out

#- 337 TestWxPayConfigById
$CLI_EXE \
    --sn platform \
    --op TestWxPayConfigById \
    --id 'RI6VWE8d' \
    > test.out 2>&1
eval_tap $? 337 'TestWxPayConfigById' test.out

#- 338 UpdateXsollaConfig
# body param: body
echo '{"apiKey": "ASRNo5Lf", "flowCompletionUrl": "ngVUuoj9", "merchantId": 0, "projectId": 47, "projectSecretKey": "Hqlogh4w"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXsollaConfig \
    --id '0MGyme3y' \
    --validate 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 338 'UpdateXsollaConfig' test.out

#- 339 TestXsollaConfigById
$CLI_EXE \
    --sn platform \
    --op TestXsollaConfigById \
    --id 'mvvLdG2x' \
    > test.out 2>&1
eval_tap $? 339 'TestXsollaConfigById' test.out

#- 340 UpdateXsollaUIConfig
# body param: body
echo '{"device": "MOBILE", "showCloseButton": false, "size": "MEDIUM", "theme": "DARK"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXsollaUIConfig \
    --id 'KpICFa29' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 340 'UpdateXsollaUIConfig' test.out

#- 341 QueryPaymentProviderConfig
$CLI_EXE \
    --sn platform \
    --op QueryPaymentProviderConfig \
    --limit '13' \
    --namespace_ '98pMELbY' \
    --offset '6' \
    --region 'uJXC6Aze' \
    > test.out 2>&1
eval_tap $? 341 'QueryPaymentProviderConfig' test.out

#- 342 CreatePaymentProviderConfig
# body param: body
echo '{"aggregate": "ADYEN", "namespace": "AKree31n", "region": "oBY2vedJ", "sandboxTaxJarApiToken": "SEhzHyym", "specials": ["XSOLLA", "PAYPAL", "PAYPAL"], "taxJarApiToken": "av5EP5Wd", "taxJarEnabled": true, "useGlobalTaxJarApiToken": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreatePaymentProviderConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 342 'CreatePaymentProviderConfig' test.out

#- 343 GetAggregatePaymentProviders
$CLI_EXE \
    --sn platform \
    --op GetAggregatePaymentProviders \
    > test.out 2>&1
eval_tap $? 343 'GetAggregatePaymentProviders' test.out

#- 344 DebugMatchedPaymentProviderConfig
$CLI_EXE \
    --sn platform \
    --op DebugMatchedPaymentProviderConfig \
    --namespace_ 'Rz6wdWAv' \
    --region 'fj34MgFU' \
    > test.out 2>&1
eval_tap $? 344 'DebugMatchedPaymentProviderConfig' test.out

#- 345 GetSpecialPaymentProviders
$CLI_EXE \
    --sn platform \
    --op GetSpecialPaymentProviders \
    > test.out 2>&1
eval_tap $? 345 'GetSpecialPaymentProviders' test.out

#- 346 UpdatePaymentProviderConfig
# body param: body
echo '{"aggregate": "ADYEN", "namespace": "xVENrnSk", "region": "7q4s4sU5", "sandboxTaxJarApiToken": "VJY5jFaz", "specials": ["XSOLLA", "ALIPAY", "WALLET"], "taxJarApiToken": "gO8tS2Qr", "taxJarEnabled": false, "useGlobalTaxJarApiToken": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePaymentProviderConfig \
    --id 'k5ncmPV3' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 346 'UpdatePaymentProviderConfig' test.out

#- 347 DeletePaymentProviderConfig
$CLI_EXE \
    --sn platform \
    --op DeletePaymentProviderConfig \
    --id 'iDbHqfHM' \
    > test.out 2>&1
eval_tap $? 347 'DeletePaymentProviderConfig' test.out

#- 348 GetPaymentTaxConfig
$CLI_EXE \
    --sn platform \
    --op GetPaymentTaxConfig \
    > test.out 2>&1
eval_tap $? 348 'GetPaymentTaxConfig' test.out

#- 349 UpdatePaymentTaxConfig
# body param: body
echo '{"sandboxTaxJarApiToken": "Wc45YSH5", "taxJarApiToken": "iKRKd6qk", "taxJarEnabled": true, "taxJarProductCodesMapping": {"sbSDOW6z": "BCWCBYxx", "7HfTeJ94": "LDj3LJ6O", "rv0R3hsI": "dHBkrl5G"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePaymentTaxConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 349 'UpdatePaymentTaxConfig' test.out

#- 350 SyncPaymentOrders
$CLI_EXE \
    --sn platform \
    --op SyncPaymentOrders \
    --nextEvaluatedKey 'SeODje6h' \
    --end 'vCQc8c1W' \
    --start 'as9WpAKX' \
    > test.out 2>&1
eval_tap $? 350 'SyncPaymentOrders' test.out

#- 351 PublicGetRootCategories
$CLI_EXE \
    --sn platform \
    --op PublicGetRootCategories \
    --namespace $AB_NAMESPACE \
    --language 'pTj1nqdR' \
    --storeId 'Yu88oEzR' \
    > test.out 2>&1
eval_tap $? 351 'PublicGetRootCategories' test.out

#- 352 DownloadCategories
$CLI_EXE \
    --sn platform \
    --op DownloadCategories \
    --namespace $AB_NAMESPACE \
    --language 'rM5xzPwk' \
    --storeId '5JAtvrKO' \
    > test.out 2>&1
eval_tap $? 352 'DownloadCategories' test.out

#- 353 PublicGetCategory
$CLI_EXE \
    --sn platform \
    --op PublicGetCategory \
    --categoryPath '2qb6CCW9' \
    --namespace $AB_NAMESPACE \
    --language 'xFFzKMyB' \
    --storeId '5hpVBkuw' \
    > test.out 2>&1
eval_tap $? 353 'PublicGetCategory' test.out

#- 354 PublicGetChildCategories
$CLI_EXE \
    --sn platform \
    --op PublicGetChildCategories \
    --categoryPath '0H7gMKsv' \
    --namespace $AB_NAMESPACE \
    --language 'C5wVov1N' \
    --storeId 'aBpgPZDJ' \
    > test.out 2>&1
eval_tap $? 354 'PublicGetChildCategories' test.out

#- 355 PublicGetDescendantCategories
$CLI_EXE \
    --sn platform \
    --op PublicGetDescendantCategories \
    --categoryPath 'nseR0Ka1' \
    --namespace $AB_NAMESPACE \
    --language 'CP7YBFHC' \
    --storeId 'eR9vmcXE' \
    > test.out 2>&1
eval_tap $? 355 'PublicGetDescendantCategories' test.out

#- 356 PublicListCurrencies
$CLI_EXE \
    --sn platform \
    --op PublicListCurrencies \
    --namespace $AB_NAMESPACE \
    --currencyType 'REAL' \
    > test.out 2>&1
eval_tap $? 356 'PublicListCurrencies' test.out

#- 357 GeDLCDurableRewardShortMap
$CLI_EXE \
    --sn platform \
    --op GeDLCDurableRewardShortMap \
    --namespace $AB_NAMESPACE \
    --dlcType 'PSN' \
    > test.out 2>&1
eval_tap $? 357 'GeDLCDurableRewardShortMap' test.out

#- 358 GetIAPItemMapping
$CLI_EXE \
    --sn platform \
    --op GetIAPItemMapping \
    --namespace $AB_NAMESPACE \
    --platform 'STEAM' \
    > test.out 2>&1
eval_tap $? 358 'GetIAPItemMapping' test.out

#- 359 PublicGetItemByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetItemByAppId \
    --namespace $AB_NAMESPACE \
    --language 'sfIlicUD' \
    --region 'GPECeAVt' \
    --storeId 'Gzk4Lqq7' \
    --appId 'DLdWDKjn' \
    > test.out 2>&1
eval_tap $? 359 'PublicGetItemByAppId' test.out

#- 360 PublicQueryItems
$CLI_EXE \
    --sn platform \
    --op PublicQueryItems \
    --namespace $AB_NAMESPACE \
    --appType 'SOFTWARE' \
    --autoCalcEstimatedPrice 'false' \
    --baseAppId 'jRAa2M1k' \
    --categoryPath 'OTMXlDzW' \
    --features 'CWJHIGt0' \
    --includeSubCategoryItem 'true' \
    --itemType 'APP' \
    --language 'M6cdeoLg' \
    --limit '44' \
    --offset '79' \
    --region 'QVlemYc8' \
    --sortBy '["createdAt:desc", "name:desc", "displayOrder:asc"]' \
    --storeId '84IKpJiK' \
    --tags 'CXTnrN6H' \
    > test.out 2>&1
eval_tap $? 360 'PublicQueryItems' test.out

#- 361 PublicGetItemBySku
$CLI_EXE \
    --sn platform \
    --op PublicGetItemBySku \
    --namespace $AB_NAMESPACE \
    --autoCalcEstimatedPrice 'true' \
    --language 'zyp2y10x' \
    --region 'ozLtKiWN' \
    --storeId 'ZcozLILl' \
    --sku '5JI6BWnT' \
    > test.out 2>&1
eval_tap $? 361 'PublicGetItemBySku' test.out

#- 362 PublicGetEstimatedPrice
$CLI_EXE \
    --sn platform \
    --op PublicGetEstimatedPrice \
    --namespace $AB_NAMESPACE \
    --region 'WxfBs1Cj' \
    --storeId '5E6utdzr' \
    --itemIds 'fNh0oS1n' \
    > test.out 2>&1
eval_tap $? 362 'PublicGetEstimatedPrice' test.out

#- 363 PublicBulkGetItems
$CLI_EXE \
    --sn platform \
    --op PublicBulkGetItems \
    --namespace $AB_NAMESPACE \
    --autoCalcEstimatedPrice 'false' \
    --language 'FWkiJKXR' \
    --region '0qcamxui' \
    --storeId 'byrAe1OE' \
    --itemIds 'KzEJemKP' \
    > test.out 2>&1
eval_tap $? 363 'PublicBulkGetItems' test.out

#- 364 PublicValidateItemPurchaseCondition
# body param: body
echo '{"itemIds": ["GoqSEjNm", "UTceqI9G", "8wJz1dZm"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicValidateItemPurchaseCondition \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 364 'PublicValidateItemPurchaseCondition' test.out

#- 365 PublicSearchItems
$CLI_EXE \
    --sn platform \
    --op PublicSearchItems \
    --namespace $AB_NAMESPACE \
    --autoCalcEstimatedPrice 'false' \
    --itemType 'SEASON' \
    --limit '92' \
    --offset '18' \
    --region 'Yf9dTIOQ' \
    --storeId 'tnx6a8v0' \
    --keyword 'an70v1Ep' \
    --language '7uspY4lV' \
    > test.out 2>&1
eval_tap $? 365 'PublicSearchItems' test.out

#- 366 PublicGetApp
$CLI_EXE \
    --sn platform \
    --op PublicGetApp \
    --itemId 'Pv9QqWrR' \
    --namespace $AB_NAMESPACE \
    --language 'RDOdgZuV' \
    --region 'KPrqSnEE' \
    --storeId 'Fq4JcJQq' \
    > test.out 2>&1
eval_tap $? 366 'PublicGetApp' test.out

#- 367 PublicGetItemDynamicData
$CLI_EXE \
    --sn platform \
    --op PublicGetItemDynamicData \
    --itemId 'D5flWQK6' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 367 'PublicGetItemDynamicData' test.out

#- 368 PublicGetItem
$CLI_EXE \
    --sn platform \
    --op PublicGetItem \
    --itemId 'p0ENs8MB' \
    --namespace $AB_NAMESPACE \
    --autoCalcEstimatedPrice 'true' \
    --language 'GZv7v5mv' \
    --populateBundle 'false' \
    --region 'izvPiA0u' \
    --storeId 'rkiBY3pp' \
    > test.out 2>&1
eval_tap $? 368 'PublicGetItem' test.out

#- 369 GetPaymentCustomization
eval_tap 0 369 'GetPaymentCustomization # SKIP deprecated' test.out

#- 370 PublicGetPaymentUrl
# body param: body
echo '{"paymentOrderNo": "mWfowf3i", "paymentProvider": "WALLET", "returnUrl": "n1TYO1Lm", "ui": "bWttHLhD", "zipCode": "yPRto07y"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicGetPaymentUrl \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 370 'PublicGetPaymentUrl' test.out

#- 371 PublicGetPaymentMethods
$CLI_EXE \
    --sn platform \
    --op PublicGetPaymentMethods \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'rHkuIfxA' \
    > test.out 2>&1
eval_tap $? 371 'PublicGetPaymentMethods' test.out

#- 372 PublicGetUnpaidPaymentOrder
$CLI_EXE \
    --sn platform \
    --op PublicGetUnpaidPaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'lLUCScmp' \
    > test.out 2>&1
eval_tap $? 372 'PublicGetUnpaidPaymentOrder' test.out

#- 373 Pay
# body param: body
echo '{"token": "n5dlZXAH"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op Pay \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'ne9rtnpV' \
    --paymentProvider 'CHECKOUT' \
    --zipCode 'WxN3SUwt' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 373 'Pay' test.out

#- 374 PublicCheckPaymentOrderPaidStatus
$CLI_EXE \
    --sn platform \
    --op PublicCheckPaymentOrderPaidStatus \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'MBkfwNlz' \
    > test.out 2>&1
eval_tap $? 374 'PublicCheckPaymentOrderPaidStatus' test.out

#- 375 GetPaymentPublicConfig
$CLI_EXE \
    --sn platform \
    --op GetPaymentPublicConfig \
    --namespace $AB_NAMESPACE \
    --sandbox 'false' \
    --paymentProvider 'WXPAY' \
    --region 'zE4ikh3b' \
    > test.out 2>&1
eval_tap $? 375 'GetPaymentPublicConfig' test.out

#- 376 PublicGetQRCode
$CLI_EXE \
    --sn platform \
    --op PublicGetQRCode \
    --namespace $AB_NAMESPACE \
    --code 'UTp8T6Kt' \
    > test.out 2>&1
eval_tap $? 376 'PublicGetQRCode' test.out

#- 377 PublicNormalizePaymentReturnUrl
$CLI_EXE \
    --sn platform \
    --op PublicNormalizePaymentReturnUrl \
    --namespace $AB_NAMESPACE \
    --payerID 'csqBkxCv' \
    --foreinginvoice 'CsWndnWl' \
    --invoiceId 'ecIDYMEu' \
    --payload 'z650L4ND' \
    --redirectResult 'EkcsIyv6' \
    --resultCode 'giWbRfWL' \
    --sessionId 'P3MAclOz' \
    --status 'iNrt2RaX' \
    --token 'yodcr3KQ' \
    --type 'tg6WT285' \
    --userId 'SQEup8E9' \
    --orderNo 'uBU2FbJJ' \
    --paymentOrderNo '6tMnvFND' \
    --paymentProvider 'ALIPAY' \
    --returnUrl '0tyO78Sp' \
    > test.out 2>&1
eval_tap $? 377 'PublicNormalizePaymentReturnUrl' test.out

#- 378 GetPaymentTaxValue
$CLI_EXE \
    --sn platform \
    --op GetPaymentTaxValue \
    --namespace $AB_NAMESPACE \
    --zipCode 'sXvDyEYQ' \
    --paymentOrderNo 'Liqi03K6' \
    --paymentProvider 'CHECKOUT' \
    > test.out 2>&1
eval_tap $? 378 'GetPaymentTaxValue' test.out

#- 379 GetRewardByCode
$CLI_EXE \
    --sn platform \
    --op GetRewardByCode \
    --namespace $AB_NAMESPACE \
    --rewardCode 'WAF8zi2n' \
    > test.out 2>&1
eval_tap $? 379 'GetRewardByCode' test.out

#- 380 QueryRewards1
$CLI_EXE \
    --sn platform \
    --op QueryRewards1 \
    --namespace $AB_NAMESPACE \
    --eventTopic 'SS5WEzUM' \
    --limit '13' \
    --offset '71' \
    --sortBy '["namespace:desc", "rewardCode", "namespace:asc"]' \
    > test.out 2>&1
eval_tap $? 380 'QueryRewards1' test.out

#- 381 GetReward1
$CLI_EXE \
    --sn platform \
    --op GetReward1 \
    --namespace $AB_NAMESPACE \
    --rewardId '5Kc2Luv9' \
    > test.out 2>&1
eval_tap $? 381 'GetReward1' test.out

#- 382 PublicListStores
$CLI_EXE \
    --sn platform \
    --op PublicListStores \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 382 'PublicListStores' test.out

#- 383 PublicExistsAnyMyActiveEntitlement
$CLI_EXE \
    --sn platform \
    --op PublicExistsAnyMyActiveEntitlement \
    --namespace $AB_NAMESPACE \
    --appIds '["cD773ELT", "CXTXrMlL", "caD20odS"]' \
    --itemIds '["kMXLI6gz", "kMAEWCmB", "u77x5Kl2"]' \
    --skus '["He1BysVx", "OeOje6iS", "JUG6V9I8"]' \
    > test.out 2>&1
eval_tap $? 383 'PublicExistsAnyMyActiveEntitlement' test.out

#- 384 PublicGetMyAppEntitlementOwnershipByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetMyAppEntitlementOwnershipByAppId \
    --namespace $AB_NAMESPACE \
    --appId 'AmOapauT' \
    > test.out 2>&1
eval_tap $? 384 'PublicGetMyAppEntitlementOwnershipByAppId' test.out

#- 385 PublicGetMyEntitlementOwnershipByItemId
$CLI_EXE \
    --sn platform \
    --op PublicGetMyEntitlementOwnershipByItemId \
    --namespace $AB_NAMESPACE \
    --entitlementClazz 'SUBSCRIPTION' \
    --itemId '0080LCUC' \
    > test.out 2>&1
eval_tap $? 385 'PublicGetMyEntitlementOwnershipByItemId' test.out

#- 386 PublicGetMyEntitlementOwnershipBySku
$CLI_EXE \
    --sn platform \
    --op PublicGetMyEntitlementOwnershipBySku \
    --namespace $AB_NAMESPACE \
    --entitlementClazz 'OPTIONBOX' \
    --sku 'LzgNFiXX' \
    > test.out 2>&1
eval_tap $? 386 'PublicGetMyEntitlementOwnershipBySku' test.out

#- 387 PublicGetEntitlementOwnershipToken
$CLI_EXE \
    --sn platform \
    --op PublicGetEntitlementOwnershipToken \
    --namespace $AB_NAMESPACE \
    --appIds '["95sagZmn", "ub0tC0Z4", "vpHCQEB4"]' \
    --itemIds '["OmlCCWj4", "PAJTDo3T", "09nEO8qH"]' \
    --skus '["lkf289oQ", "tz4Md6Yy", "YlBmv2y5"]' \
    > test.out 2>&1
eval_tap $? 387 'PublicGetEntitlementOwnershipToken' test.out

#- 388 SyncTwitchDropsEntitlement
# body param: body
echo '{"gameId": "BIB0WrZq", "language": "VA_shMQ", "region": "VACUK2xm"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncTwitchDropsEntitlement \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 388 'SyncTwitchDropsEntitlement' test.out

#- 389 PublicGetMyWallet
$CLI_EXE \
    --sn platform \
    --op PublicGetMyWallet \
    --currencyCode 'RVFonVFP' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 389 'PublicGetMyWallet' test.out

#- 390 SyncEpicGameDLC
# body param: body
echo '{"epicGamesJwtToken": "aKkRUvlw"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncEpicGameDLC \
    --namespace $AB_NAMESPACE \
    --userId 'KB4LsD4Z' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 390 'SyncEpicGameDLC' test.out

#- 391 SyncOculusDLC
$CLI_EXE \
    --sn platform \
    --op SyncOculusDLC \
    --namespace $AB_NAMESPACE \
    --userId 'vU5QU7v7' \
    > test.out 2>&1
eval_tap $? 391 'SyncOculusDLC' test.out

#- 392 PublicSyncPsnDlcInventory
# body param: body
echo '{"serviceLabel": 43}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicSyncPsnDlcInventory \
    --namespace $AB_NAMESPACE \
    --userId '9oSbViMl' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 392 'PublicSyncPsnDlcInventory' test.out

#- 393 PublicSyncPsnDlcInventoryWithMultipleServiceLabels
# body param: body
echo '{"serviceLabels": [75, 83, 60]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicSyncPsnDlcInventoryWithMultipleServiceLabels \
    --namespace $AB_NAMESPACE \
    --userId 'qGXKiYl8' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 393 'PublicSyncPsnDlcInventoryWithMultipleServiceLabels' test.out

#- 394 SyncSteamDLC
# body param: body
echo '{"appId": "wVHiKOU5", "steamId": "wLCEKpuY"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncSteamDLC \
    --namespace $AB_NAMESPACE \
    --userId '5E8wjQwD' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 394 'SyncSteamDLC' test.out

#- 395 SyncXboxDLC
# body param: body
echo '{"xstsToken": "XruiGYrV"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncXboxDLC \
    --namespace $AB_NAMESPACE \
    --userId 'WK0Nd8h2' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 395 'SyncXboxDLC' test.out

#- 396 PublicQueryUserEntitlements
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserEntitlements \
    --namespace $AB_NAMESPACE \
    --userId 'WVVMPVoq' \
    --appType 'SOFTWARE' \
    --entitlementClazz 'OPTIONBOX' \
    --entitlementName 'uC3NaTnT' \
    --features '["Osa6juWa", "wwW0kUs9", "dJD7Z6oe"]' \
    --itemId '["TqwLfI2l", "zocDa9jq", "qjZG1ECr"]' \
    --limit '44' \
    --offset '44' \
    > test.out 2>&1
eval_tap $? 396 'PublicQueryUserEntitlements' test.out

#- 397 PublicGetUserAppEntitlementByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetUserAppEntitlementByAppId \
    --namespace $AB_NAMESPACE \
    --userId 's377wwpe' \
    --appId 'aLcNfSJX' \
    > test.out 2>&1
eval_tap $? 397 'PublicGetUserAppEntitlementByAppId' test.out

#- 398 PublicQueryUserEntitlementsByAppType
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserEntitlementsByAppType \
    --namespace $AB_NAMESPACE \
    --userId 'TKt7wuxZ' \
    --limit '66' \
    --offset '40' \
    --appType 'DLC' \
    > test.out 2>&1
eval_tap $? 398 'PublicQueryUserEntitlementsByAppType' test.out

#- 399 PublicGetUserEntitlementsByIds
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementsByIds \
    --namespace $AB_NAMESPACE \
    --userId 'L2DShDa0' \
    --availablePlatformOnly 'false' \
    --ids '["W8KBuZgV", "kXxIEXKG", "fv5HbiYu"]' \
    > test.out 2>&1
eval_tap $? 399 'PublicGetUserEntitlementsByIds' test.out

#- 400 PublicGetUserEntitlementByItemId
eval_tap 0 400 'PublicGetUserEntitlementByItemId # SKIP deprecated' test.out

#- 401 PublicGetUserEntitlementBySku
eval_tap 0 401 'PublicGetUserEntitlementBySku # SKIP deprecated' test.out

#- 402 PublicExistsAnyUserActiveEntitlement
$CLI_EXE \
    --sn platform \
    --op PublicExistsAnyUserActiveEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'NBrBqaGz' \
    --appIds '["jq2nF3yw", "s8x45GkH", "VYm5wtxW"]' \
    --itemIds '["DEhyUTYa", "fiVXcxAf", "P81GwN9I"]' \
    --skus '["EQ1Hp04w", "bElTWbeG", "i5KyhjxN"]' \
    > test.out 2>&1
eval_tap $? 402 'PublicExistsAnyUserActiveEntitlement' test.out

#- 403 PublicGetUserAppEntitlementOwnershipByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetUserAppEntitlementOwnershipByAppId \
    --namespace $AB_NAMESPACE \
    --userId 'XEDjYjs8' \
    --appId 'e8YcpLUy' \
    > test.out 2>&1
eval_tap $? 403 'PublicGetUserAppEntitlementOwnershipByAppId' test.out

#- 404 PublicGetUserEntitlementOwnershipByItemId
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementOwnershipByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'gLXi85S0' \
    --entitlementClazz 'OPTIONBOX' \
    --itemId 'HQYXz2IN' \
    > test.out 2>&1
eval_tap $? 404 'PublicGetUserEntitlementOwnershipByItemId' test.out

#- 405 PublicGetUserEntitlementOwnershipByItemIds
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementOwnershipByItemIds \
    --namespace $AB_NAMESPACE \
    --userId 'ekVAk9ZP' \
    --ids '["6FLLl41p", "TAcE3vCD", "7SpMmV6j"]' \
    > test.out 2>&1
eval_tap $? 405 'PublicGetUserEntitlementOwnershipByItemIds' test.out

#- 406 PublicGetUserEntitlementOwnershipBySku
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementOwnershipBySku \
    --namespace $AB_NAMESPACE \
    --userId 'Zb21jQ9k' \
    --entitlementClazz 'ENTITLEMENT' \
    --sku 'eLAGwfXO' \
    > test.out 2>&1
eval_tap $? 406 'PublicGetUserEntitlementOwnershipBySku' test.out

#- 407 PublicGetUserEntitlement
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlement \
    --entitlementId '75Ac53wK' \
    --namespace $AB_NAMESPACE \
    --userId 'KfKTxJWv' \
    > test.out 2>&1
eval_tap $? 407 'PublicGetUserEntitlement' test.out

#- 408 PublicConsumeUserEntitlement
# body param: body
echo '{"options": ["gST25cCg", "opU6QdPH", "TaOA80Dr"], "requestId": "htRgzwhN", "useCount": 76}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicConsumeUserEntitlement \
    --entitlementId 'yoljuCIa' \
    --namespace $AB_NAMESPACE \
    --userId '2wSDYFxL' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 408 'PublicConsumeUserEntitlement' test.out

#- 409 PublicSellUserEntitlement
# body param: body
echo '{"requestId": "r2d9Sxx8", "useCount": 60}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicSellUserEntitlement \
    --entitlementId 'wrswer2H' \
    --namespace $AB_NAMESPACE \
    --userId 'w7MFyHx8' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 409 'PublicSellUserEntitlement' test.out

#- 410 PublicSplitUserEntitlement
# body param: body
echo '{"useCount": 70}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicSplitUserEntitlement \
    --entitlementId '4TNiFd5k' \
    --namespace $AB_NAMESPACE \
    --userId 'Vu7azcWF' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 410 'PublicSplitUserEntitlement' test.out

#- 411 PublicTransferUserEntitlement
# body param: body
echo '{"entitlementId": "z7UWdHos", "useCount": 25}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicTransferUserEntitlement \
    --entitlementId 'iOQSdlYT' \
    --namespace $AB_NAMESPACE \
    --userId 'DjSjewxP' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 411 'PublicTransferUserEntitlement' test.out

#- 412 PublicRedeemCode
# body param: body
echo '{"code": "wWt7HU2F", "language": "NFjE", "region": "HnalHMeA"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicRedeemCode \
    --namespace $AB_NAMESPACE \
    --userId 'c3Ny4FTO' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 412 'PublicRedeemCode' test.out

#- 413 PublicFulfillAppleIAPItem
# body param: body
echo '{"excludeOldTransactions": false, "language": "MSq", "productId": "l7G1gqrX", "receiptData": "MWyIbr5G", "region": "fnzvE4Bg", "transactionId": "NQcS2INd"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicFulfillAppleIAPItem \
    --namespace $AB_NAMESPACE \
    --userId '04IILfJL' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 413 'PublicFulfillAppleIAPItem' test.out

#- 414 SyncEpicGamesInventory
# body param: body
echo '{"epicGamesJwtToken": "y1ydMz4a"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncEpicGamesInventory \
    --namespace $AB_NAMESPACE \
    --userId 'IG1YEc0N' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 414 'SyncEpicGamesInventory' test.out

#- 415 PublicFulfillGoogleIAPItem
# body param: body
echo '{"autoAck": false, "language": "kB_ofmZ", "orderId": "rb5NxyWr", "packageName": "60feRFKR", "productId": "O69NuQWg", "purchaseTime": 3, "purchaseToken": "u5esk97Y", "region": "kS0Rwnb8"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicFulfillGoogleIAPItem \
    --namespace $AB_NAMESPACE \
    --userId 'ucsNaeov' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 415 'PublicFulfillGoogleIAPItem' test.out

#- 416 SyncOculusConsumableEntitlements
$CLI_EXE \
    --sn platform \
    --op SyncOculusConsumableEntitlements \
    --namespace $AB_NAMESPACE \
    --userId '3nmUz5mA' \
    > test.out 2>&1
eval_tap $? 416 'SyncOculusConsumableEntitlements' test.out

#- 417 PublicReconcilePlayStationStore
# body param: body
echo '{"currencyCode": "M7AskXLj", "price": 0.7364605506276237, "productId": "JBaeAycg", "serviceLabel": 67}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicReconcilePlayStationStore \
    --namespace $AB_NAMESPACE \
    --userId '2npotSvW' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 417 'PublicReconcilePlayStationStore' test.out

#- 418 PublicReconcilePlayStationStoreWithMultipleServiceLabels
# body param: body
echo '{"currencyCode": "eiJdN2CV", "price": 0.7711982737663483, "productId": "TnoM9LMn", "serviceLabels": [33, 76, 29]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicReconcilePlayStationStoreWithMultipleServiceLabels \
    --namespace $AB_NAMESPACE \
    --userId '7kLqpukg' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 418 'PublicReconcilePlayStationStoreWithMultipleServiceLabels' test.out

#- 419 SyncSteamInventory
# body param: body
echo '{"appId": "h3OiensQ", "currencyCode": "0sJUKL7M", "language": "ph_gmdb", "price": 0.6798875519372699, "productId": "Nl8XrOtX", "region": "ltNOF1bH", "steamId": "MVW18I3l"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncSteamInventory \
    --namespace $AB_NAMESPACE \
    --userId 'oFbmJw8m' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 419 'SyncSteamInventory' test.out

#- 420 SyncTwitchDropsEntitlement1
# body param: body
echo '{"gameId": "zjQjtgCw", "language": "zXEU-Cgdi_516", "region": "TysMbRTh"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncTwitchDropsEntitlement1 \
    --namespace $AB_NAMESPACE \
    --userId 'oRVFjctq' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 420 'SyncTwitchDropsEntitlement1' test.out

#- 421 SyncXboxInventory
# body param: body
echo '{"currencyCode": "LAoz9LEI", "price": 0.7008477069905755, "productId": "SG9eSBdD", "xstsToken": "akz7QhZN"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncXboxInventory \
    --namespace $AB_NAMESPACE \
    --userId '2kxkoGJ8' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 421 'SyncXboxInventory' test.out

#- 422 PublicQueryUserOrders
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserOrders \
    --namespace $AB_NAMESPACE \
    --userId 'qQAtghV6' \
    --itemId 'KnKF7SJv' \
    --limit '31' \
    --offset '1' \
    --status 'CHARGEBACK_REVERSED' \
    > test.out 2>&1
eval_tap $? 422 'PublicQueryUserOrders' test.out

#- 423 PublicCreateUserOrder
# body param: body
echo '{"currencyCode": "v2fBztWC", "discountedPrice": 58, "ext": {"G7XTlyMl": {}, "bTglXVOT": {}, "FdJw5nvk": {}}, "itemId": "BAATrN8I", "language": "CnN_HdEn-Mo", "price": 91, "quantity": 77, "region": "0KaHwQFw", "returnUrl": "qtLUdo7q", "sectionId": "KqTCeumN"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicCreateUserOrder \
    --namespace $AB_NAMESPACE \
    --userId 't5CYIRnn' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 423 'PublicCreateUserOrder' test.out

#- 424 PublicGetUserOrder
$CLI_EXE \
    --sn platform \
    --op PublicGetUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo '69ssOyHQ' \
    --userId 'UGZEYs21' \
    > test.out 2>&1
eval_tap $? 424 'PublicGetUserOrder' test.out

#- 425 PublicCancelUserOrder
$CLI_EXE \
    --sn platform \
    --op PublicCancelUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'hEcQ6MnY' \
    --userId 'jAjL2mcD' \
    > test.out 2>&1
eval_tap $? 425 'PublicCancelUserOrder' test.out

#- 426 PublicGetUserOrderHistories
$CLI_EXE \
    --sn platform \
    --op PublicGetUserOrderHistories \
    --namespace $AB_NAMESPACE \
    --orderNo '656IUv4j' \
    --userId 'BzChRTmk' \
    > test.out 2>&1
eval_tap $? 426 'PublicGetUserOrderHistories' test.out

#- 427 PublicDownloadUserOrderReceipt
$CLI_EXE \
    --sn platform \
    --op PublicDownloadUserOrderReceipt \
    --namespace $AB_NAMESPACE \
    --orderNo 'iyq6KQDj' \
    --userId 'ml9OIzRT' \
    > test.out 2>&1
eval_tap $? 427 'PublicDownloadUserOrderReceipt' test.out

#- 428 PublicGetPaymentAccounts
$CLI_EXE \
    --sn platform \
    --op PublicGetPaymentAccounts \
    --namespace $AB_NAMESPACE \
    --userId '7q3tOopT' \
    > test.out 2>&1
eval_tap $? 428 'PublicGetPaymentAccounts' test.out

#- 429 PublicDeletePaymentAccount
$CLI_EXE \
    --sn platform \
    --op PublicDeletePaymentAccount \
    --id 's5EMkRYv' \
    --namespace $AB_NAMESPACE \
    --type 'card' \
    --userId '1GG5VRfg' \
    > test.out 2>&1
eval_tap $? 429 'PublicDeletePaymentAccount' test.out

#- 430 PublicListActiveSections
$CLI_EXE \
    --sn platform \
    --op PublicListActiveSections \
    --namespace $AB_NAMESPACE \
    --userId 'YYbGTeM2' \
    --autoCalcEstimatedPrice 'true' \
    --language '6JY0iOXk' \
    --region '5sNVgjOz' \
    --storeId 'isNBR05b' \
    --viewId 'TIAucgH5' \
    > test.out 2>&1
eval_tap $? 430 'PublicListActiveSections' test.out

#- 431 PublicQueryUserSubscriptions
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserSubscriptions \
    --namespace $AB_NAMESPACE \
    --userId 'EzaNQSg5' \
    --chargeStatus 'SETUP' \
    --itemId '6gtKYVKr' \
    --limit '28' \
    --offset '46' \
    --sku 'E3cBM0S4' \
    --status 'CANCELLED' \
    --subscribedBy 'PLATFORM' \
    > test.out 2>&1
eval_tap $? 431 'PublicQueryUserSubscriptions' test.out

#- 432 PublicSubscribeSubscription
# body param: body
echo '{"currencyCode": "SDlENVgB", "itemId": "trQOyoMU", "language": "hIRG-TJGc", "region": "AQdQ2PpS", "returnUrl": "PibUO5cj", "source": "vMM7TweI"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicSubscribeSubscription \
    --namespace $AB_NAMESPACE \
    --userId 'nnQXhw5j' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 432 'PublicSubscribeSubscription' test.out

#- 433 PublicCheckUserSubscriptionSubscribableByItemId
$CLI_EXE \
    --sn platform \
    --op PublicCheckUserSubscriptionSubscribableByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'ehVLTo5C' \
    --itemId 'Z79BNalS' \
    > test.out 2>&1
eval_tap $? 433 'PublicCheckUserSubscriptionSubscribableByItemId' test.out

#- 434 PublicGetUserSubscription
$CLI_EXE \
    --sn platform \
    --op PublicGetUserSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'VzNcdgDn' \
    --userId '9yf7bNsH' \
    > test.out 2>&1
eval_tap $? 434 'PublicGetUserSubscription' test.out

#- 435 PublicChangeSubscriptionBillingAccount
$CLI_EXE \
    --sn platform \
    --op PublicChangeSubscriptionBillingAccount \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'BP2VdAim' \
    --userId 'k1ObN59P' \
    > test.out 2>&1
eval_tap $? 435 'PublicChangeSubscriptionBillingAccount' test.out

#- 436 PublicCancelSubscription
# body param: body
echo '{"immediate": false, "reason": "5KbeFBvc"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicCancelSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'sx0foJZK' \
    --userId 'mfooFrZ5' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 436 'PublicCancelSubscription' test.out

#- 437 PublicGetUserSubscriptionBillingHistories
$CLI_EXE \
    --sn platform \
    --op PublicGetUserSubscriptionBillingHistories \
    --namespace $AB_NAMESPACE \
    --subscriptionId '5EFaqFDA' \
    --userId 'KYbcnKD7' \
    --excludeFree 'true' \
    --limit '33' \
    --offset '39' \
    > test.out 2>&1
eval_tap $? 437 'PublicGetUserSubscriptionBillingHistories' test.out

#- 438 PublicListViews
$CLI_EXE \
    --sn platform \
    --op PublicListViews \
    --namespace $AB_NAMESPACE \
    --userId 'bznHpD44' \
    --language 'LCfwd8Bl' \
    --storeId 'XzRqymqL' \
    > test.out 2>&1
eval_tap $? 438 'PublicListViews' test.out

#- 439 PublicGetWallet
$CLI_EXE \
    --sn platform \
    --op PublicGetWallet \
    --currencyCode 'rl6lkpPU' \
    --namespace $AB_NAMESPACE \
    --userId '7fEWdt7g' \
    > test.out 2>&1
eval_tap $? 439 'PublicGetWallet' test.out

#- 440 PublicListUserWalletTransactions
$CLI_EXE \
    --sn platform \
    --op PublicListUserWalletTransactions \
    --currencyCode 'DXc4caSO' \
    --namespace $AB_NAMESPACE \
    --userId 'RtZwTwqi' \
    --limit '71' \
    --offset '67' \
    > test.out 2>&1
eval_tap $? 440 'PublicListUserWalletTransactions' test.out

#- 441 QueryItems1
$CLI_EXE \
    --sn platform \
    --op QueryItems1 \
    --namespace $AB_NAMESPACE \
    --appType 'DEMO' \
    --availableDate 'scLVxoli' \
    --baseAppId 'peyD91aU' \
    --categoryPath 'mtJW7Qvt' \
    --features 'K35GN7HN' \
    --includeSubCategoryItem 'true' \
    --itemName 'rihbPJUA' \
    --itemStatus 'ACTIVE' \
    --itemType 'OPTIONBOX' \
    --limit '86' \
    --offset '89' \
    --region 'yt14Ewe7' \
    --sectionExclusive 'true' \
    --sortBy '["createdAt:desc", "name:asc", "createdAt"]' \
    --storeId 'ehQfrhG9' \
    --tags 'psgOCWPH' \
    --targetNamespace '53RhF6vW' \
    --withTotal 'true' \
    > test.out 2>&1
eval_tap $? 441 'QueryItems1' test.out

#- 442 ImportStore1
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op ImportStore1 \
    --namespace $AB_NAMESPACE \
    --storeId 'xlA8xzkc' \
    --strictMode 'true' \
    --upload $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 442 'ImportStore1' test.out

#- 443 ExportStore1
# body param: body
echo '{"itemIds": ["ShQe5W0r", "QTggPA5a", "afwZZcpi"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ExportStore1 \
    --namespace $AB_NAMESPACE \
    --storeId 'QcJfSa0j' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 443 'ExportStore1' test.out

#- 444 FulfillRewardsV2
# body param: body
echo '{"entitlementCollectionId": "qqSpvrAo", "entitlementOrigin": "Xbox", "metadata": {"EunqUY9l": {}, "DunhqRQq": {}, "uSEjFgBR": {}}, "origin": "Nintendo", "rewards": [{"currency": {"currencyCode": "jG3TipsJ", "namespace": "OJKsiCPI"}, "item": {"itemId": "UCI4U2dD", "itemSku": "WyIfXbmf", "itemType": "eFgJbTC3"}, "quantity": 43, "type": "ITEM"}, {"currency": {"currencyCode": "LoVRKI52", "namespace": "optWoN1y"}, "item": {"itemId": "HPU6RO7G", "itemSku": "j0KKMtSy", "itemType": "b9drvdAe"}, "quantity": 62, "type": "ITEM"}, {"currency": {"currencyCode": "5nXVVCQv", "namespace": "45d8tdAf"}, "item": {"itemId": "z52Prb7n", "itemSku": "pUwo37x5", "itemType": "1FaHWnDk"}, "quantity": 69, "type": "CURRENCY"}], "source": "REWARD", "transactionId": "bYwTFyk9"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op FulfillRewardsV2 \
    --namespace $AB_NAMESPACE \
    --userId '3nwUs1j0' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 444 'FulfillRewardsV2' test.out


# remove artifacts
rm -f "$CLI_TOKEN_FILE"
rm -f "$TEMP_JSON_INPUT"
rm -f "$TEMP_FILE_UPLOAD"

exit $EXIT_CODE