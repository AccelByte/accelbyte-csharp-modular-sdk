#!/usr/bin/env bash

# Copyright (c) 2021 AccelByte Inc. All Rights Reserved.
# This is licensed software from AccelByte Inc, for limitations
# and restrictions contact your company contract manager.

# This code is generated by tool. DO NOT EDIT.

# Meta:
# - random seed: 
# - template file: 

# Instructions:
# - Run the Justice SDK Mock Server first before running this script.

export AB_BASE_URL="http://127.0.0.1:8080"
export AB_CLIENT_ID="admin"
export AB_CLIENT_SECRET="admin"
export AB_NAMESPACE="test"
export AB_APP_NAME="UnitTest"

EXIT_CODE=0

eval_tap() {
  if [ $1 -eq 0 ]; then
    echo "ok $2 - $3"
  else
    EXIT_CODE=1
    echo "not ok $2 - $3"
    sed 's/^/# /g' $4
  fi
  rm -f $4
}

CLI_EXE="AccelByte.Sdk.Sample.Cli"
CLI_TOKEN_FILE="$(dirname "$(which $CLI_EXE)")/token.json"
TEMP_JSON_INPUT="input_json.json"
TEMP_FILE_UPLOAD="file_upload.bin"

echo "TAP version 13"
echo "1..444"

#- 1 Login
$CLI_EXE --op login --lt user --user user --pass user > test.out 2>&1
eval_tap $? 1 'Login' test.out

if [ $EXIT_CODE -ne 0 ]; then
  echo "Bail out! Login failed."
  exit $EXIT_CODE
fi

# echo "foo" > "$CLI_TOKEN_FILE"

#- 2 ListFulfillmentScripts
$CLI_EXE \
    --sn platform \
    --op ListFulfillmentScripts \
    > test.out 2>&1
eval_tap $? 2 'ListFulfillmentScripts' test.out

#- 3 GetFulfillmentScript
$CLI_EXE \
    --sn platform \
    --op GetFulfillmentScript \
    --id 'JnCJCFl0' \
    > test.out 2>&1
eval_tap $? 3 'GetFulfillmentScript' test.out

#- 4 CreateFulfillmentScript
# body param: body
echo '{"grantDays": "RVbF2YZa"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateFulfillmentScript \
    --id 'U4pCUvW3' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 4 'CreateFulfillmentScript' test.out

#- 5 DeleteFulfillmentScript
$CLI_EXE \
    --sn platform \
    --op DeleteFulfillmentScript \
    --id 'zIM16wxQ' \
    > test.out 2>&1
eval_tap $? 5 'DeleteFulfillmentScript' test.out

#- 6 UpdateFulfillmentScript
# body param: body
echo '{"grantDays": "npUt1Wr5"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateFulfillmentScript \
    --id 'HEU8TLaU' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 6 'UpdateFulfillmentScript' test.out

#- 7 ListItemTypeConfigs
$CLI_EXE \
    --sn platform \
    --op ListItemTypeConfigs \
    > test.out 2>&1
eval_tap $? 7 'ListItemTypeConfigs' test.out

#- 8 CreateItemTypeConfig
# body param: body
echo '{"clazz": "nK9rYnkG", "dryRun": false, "fulfillmentUrl": "1SUEsX4K", "itemType": "SUBSCRIPTION", "purchaseConditionUrl": "PYU8TykZ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateItemTypeConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 8 'CreateItemTypeConfig' test.out

#- 9 SearchItemTypeConfig
$CLI_EXE \
    --sn platform \
    --op SearchItemTypeConfig \
    --clazz 'Pqe0Q1yt' \
    --itemType 'MEDIA' \
    > test.out 2>&1
eval_tap $? 9 'SearchItemTypeConfig' test.out

#- 10 GetItemTypeConfig
$CLI_EXE \
    --sn platform \
    --op GetItemTypeConfig \
    --id 'K20JoMcO' \
    > test.out 2>&1
eval_tap $? 10 'GetItemTypeConfig' test.out

#- 11 UpdateItemTypeConfig
# body param: body
echo '{"clazz": "6Dg5pJOj", "dryRun": true, "fulfillmentUrl": "NgemuIZ0", "purchaseConditionUrl": "MTcNJ8gV"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateItemTypeConfig \
    --id 'A7AL4Chj' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 11 'UpdateItemTypeConfig' test.out

#- 12 DeleteItemTypeConfig
$CLI_EXE \
    --sn platform \
    --op DeleteItemTypeConfig \
    --id 'jpb1Nab1' \
    > test.out 2>&1
eval_tap $? 12 'DeleteItemTypeConfig' test.out

#- 13 QueryCampaigns
$CLI_EXE \
    --sn platform \
    --op QueryCampaigns \
    --namespace $AB_NAMESPACE \
    --limit '21' \
    --name 'HimAtg5W' \
    --offset '60' \
    --tag 'loBgMfiW' \
    > test.out 2>&1
eval_tap $? 13 'QueryCampaigns' test.out

#- 14 CreateCampaign
# body param: body
echo '{"description": "iwGFiXwh", "items": [{"extraSubscriptionDays": 14, "itemId": "V3LJy3eG", "itemName": "o4fSMmNf", "quantity": 19}, {"extraSubscriptionDays": 90, "itemId": "l59d6B4o", "itemName": "wx5ypKpm", "quantity": 53}, {"extraSubscriptionDays": 6, "itemId": "1ZDJ1WP9", "itemName": "y0RkMIuP", "quantity": 65}], "maxRedeemCountPerCampaignPerUser": 79, "maxRedeemCountPerCode": 79, "maxRedeemCountPerCodePerUser": 49, "maxSaleCount": 58, "name": "hrbH8Zud", "redeemEnd": "1983-05-16T00:00:00Z", "redeemStart": "1972-06-03T00:00:00Z", "redeemType": "ITEM", "status": "INACTIVE", "tags": ["NgRVWMOb", "lXQ7v6t6", "ydX1C5rq"], "type": "REDEMPTION"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCampaign \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 14 'CreateCampaign' test.out

#- 15 GetCampaign
$CLI_EXE \
    --sn platform \
    --op GetCampaign \
    --campaignId 'Rsu8JVgr' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 15 'GetCampaign' test.out

#- 16 UpdateCampaign
# body param: body
echo '{"description": "ssV2mW6W", "items": [{"extraSubscriptionDays": 62, "itemId": "S00nfc1C", "itemName": "YGmJeaIa", "quantity": 68}, {"extraSubscriptionDays": 0, "itemId": "vVRqOdEB", "itemName": "QeIaQQXZ", "quantity": 45}, {"extraSubscriptionDays": 3, "itemId": "zyYGorAX", "itemName": "LWBbqN82", "quantity": 83}], "maxRedeemCountPerCampaignPerUser": 62, "maxRedeemCountPerCode": 67, "maxRedeemCountPerCodePerUser": 50, "maxSaleCount": 89, "name": "3q7COtaa", "redeemEnd": "1996-01-25T00:00:00Z", "redeemStart": "1973-11-19T00:00:00Z", "redeemType": "ITEM", "status": "ACTIVE", "tags": ["KDlLsNny", "qTjdvcuS", "NqiCRzIO"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCampaign \
    --campaignId 'nj9rsyVm' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 16 'UpdateCampaign' test.out

#- 17 GetCampaignDynamic
$CLI_EXE \
    --sn platform \
    --op GetCampaignDynamic \
    --campaignId 'aKK42uv3' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 17 'GetCampaignDynamic' test.out

#- 18 GetLootBoxPluginConfig
$CLI_EXE \
    --sn platform \
    --op GetLootBoxPluginConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 18 'GetLootBoxPluginConfig' test.out

#- 19 UpdateLootBoxPluginConfig
# body param: body
echo '{"appConfig": {"appName": "sjjpXQgr"}, "customConfig": {"connectionType": "TLS", "grpcServerAddress": "2Swo4Rqn"}, "extendType": "CUSTOM"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateLootBoxPluginConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 19 'UpdateLootBoxPluginConfig' test.out

#- 20 DeleteLootBoxPluginConfig
$CLI_EXE \
    --sn platform \
    --op DeleteLootBoxPluginConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 20 'DeleteLootBoxPluginConfig' test.out

#- 21 UplodLootBoxPluginConfigCert
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UplodLootBoxPluginConfigCert \
    --namespace $AB_NAMESPACE \
    --upload file $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 21 'UplodLootBoxPluginConfigCert' test.out

#- 22 GetLootBoxGrpcInfo
$CLI_EXE \
    --sn platform \
    --op GetLootBoxGrpcInfo \
    --namespace $AB_NAMESPACE \
    --force 'false' \
    > test.out 2>&1
eval_tap $? 22 'GetLootBoxGrpcInfo' test.out

#- 23 GetSectionPluginConfig
$CLI_EXE \
    --sn platform \
    --op GetSectionPluginConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 23 'GetSectionPluginConfig' test.out

#- 24 UpdateSectionPluginConfig
# body param: body
echo '{"appConfig": {"appName": "imj1ZLvV"}, "customConfig": {"connectionType": "INSECURE", "grpcServerAddress": "PEBpqTfj"}, "extendType": "APP"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateSectionPluginConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 24 'UpdateSectionPluginConfig' test.out

#- 25 DeleteSectionPluginConfig
$CLI_EXE \
    --sn platform \
    --op DeleteSectionPluginConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 25 'DeleteSectionPluginConfig' test.out

#- 26 UploadSectionPluginConfigCert
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UploadSectionPluginConfigCert \
    --namespace $AB_NAMESPACE \
    --upload file $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 26 'UploadSectionPluginConfigCert' test.out

#- 27 GetRootCategories
$CLI_EXE \
    --sn platform \
    --op GetRootCategories \
    --namespace $AB_NAMESPACE \
    --storeId 'zge9cNAM' \
    > test.out 2>&1
eval_tap $? 27 'GetRootCategories' test.out

#- 28 CreateCategory
# body param: body
echo '{"categoryPath": "QWgB3Gf1", "localizationDisplayNames": {"gOZMF1Dh": "gqaDGOT4", "cfSWVDqo": "fVhkaYy7", "4eT6pjWH": "XCspkEp0"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCategory \
    --namespace $AB_NAMESPACE \
    --storeId 'XQzBTKi8' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 28 'CreateCategory' test.out

#- 29 ListCategoriesBasic
$CLI_EXE \
    --sn platform \
    --op ListCategoriesBasic \
    --namespace $AB_NAMESPACE \
    --storeId 'mVGLNRpi' \
    > test.out 2>&1
eval_tap $? 29 'ListCategoriesBasic' test.out

#- 30 GetCategory
$CLI_EXE \
    --sn platform \
    --op GetCategory \
    --categoryPath 'LkEouN4R' \
    --namespace $AB_NAMESPACE \
    --storeId 'MCpkBBcQ' \
    > test.out 2>&1
eval_tap $? 30 'GetCategory' test.out

#- 31 UpdateCategory
# body param: body
echo '{"localizationDisplayNames": {"aqVaovek": "2JquPdti", "FNNFkV0K": "afs4Y2K8", "hAuKhRdF": "wwpdKqPQ"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCategory \
    --categoryPath 'nLYPCRb4' \
    --namespace $AB_NAMESPACE \
    --storeId 'l8L9rUe4' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 31 'UpdateCategory' test.out

#- 32 DeleteCategory
$CLI_EXE \
    --sn platform \
    --op DeleteCategory \
    --categoryPath 'jguDYBPQ' \
    --namespace $AB_NAMESPACE \
    --storeId 'ilDH5PEn' \
    > test.out 2>&1
eval_tap $? 32 'DeleteCategory' test.out

#- 33 GetChildCategories
$CLI_EXE \
    --sn platform \
    --op GetChildCategories \
    --categoryPath 'ynfaONXg' \
    --namespace $AB_NAMESPACE \
    --storeId 'auJBBsbI' \
    > test.out 2>&1
eval_tap $? 33 'GetChildCategories' test.out

#- 34 GetDescendantCategories
$CLI_EXE \
    --sn platform \
    --op GetDescendantCategories \
    --categoryPath 'zlDqKaIb' \
    --namespace $AB_NAMESPACE \
    --storeId 'UhIRpxf3' \
    > test.out 2>&1
eval_tap $? 34 'GetDescendantCategories' test.out

#- 35 QueryCodes
$CLI_EXE \
    --sn platform \
    --op QueryCodes \
    --campaignId 'kQrTPbrN' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --batchNo '92' \
    --code 'WIayhRiD' \
    --limit '98' \
    --offset '89' \
    > test.out 2>&1
eval_tap $? 35 'QueryCodes' test.out

#- 36 CreateCodes
# body param: body
echo '{"quantity": 90}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCodes \
    --campaignId 'GBpT8ZyH' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 36 'CreateCodes' test.out

#- 37 Download
$CLI_EXE \
    --sn platform \
    --op Download \
    --campaignId 'f4hzzHN0' \
    --namespace $AB_NAMESPACE \
    --batchNo '52' \
    > test.out 2>&1
eval_tap $? 37 'Download' test.out

#- 38 BulkDisableCodes
$CLI_EXE \
    --sn platform \
    --op BulkDisableCodes \
    --campaignId 'usBiy4NO' \
    --namespace $AB_NAMESPACE \
    --batchNo '46' \
    > test.out 2>&1
eval_tap $? 38 'BulkDisableCodes' test.out

#- 39 BulkEnableCodes
$CLI_EXE \
    --sn platform \
    --op BulkEnableCodes \
    --campaignId 'hL8pDhdi' \
    --namespace $AB_NAMESPACE \
    --batchNo '25' \
    > test.out 2>&1
eval_tap $? 39 'BulkEnableCodes' test.out

#- 40 QueryRedeemHistory
$CLI_EXE \
    --sn platform \
    --op QueryRedeemHistory \
    --campaignId '0qselecl' \
    --namespace $AB_NAMESPACE \
    --code 'P41exWXn' \
    --limit '11' \
    --offset '12' \
    --userId '0EYFIrPk' \
    > test.out 2>&1
eval_tap $? 40 'QueryRedeemHistory' test.out

#- 41 GetCode
$CLI_EXE \
    --sn platform \
    --op GetCode \
    --code 'fPXifuNL' \
    --namespace $AB_NAMESPACE \
    --redeemable 'true' \
    > test.out 2>&1
eval_tap $? 41 'GetCode' test.out

#- 42 DisableCode
$CLI_EXE \
    --sn platform \
    --op DisableCode \
    --code 'tgNELIxq' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 42 'DisableCode' test.out

#- 43 EnableCode
$CLI_EXE \
    --sn platform \
    --op EnableCode \
    --code 'uqF16MK2' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 43 'EnableCode' test.out

#- 44 GetServicePluginConfig
eval_tap 0 44 'GetServicePluginConfig # SKIP deprecated' test.out

#- 45 UpdateServicePluginConfig
eval_tap 0 45 'UpdateServicePluginConfig # SKIP deprecated' test.out

#- 46 DeleteServicePluginConfig
eval_tap 0 46 'DeleteServicePluginConfig # SKIP deprecated' test.out

#- 47 ListCurrencies
$CLI_EXE \
    --sn platform \
    --op ListCurrencies \
    --namespace $AB_NAMESPACE \
    --currencyType 'REAL' \
    > test.out 2>&1
eval_tap $? 47 'ListCurrencies' test.out

#- 48 CreateCurrency
# body param: body
echo '{"currencyCode": "eUrhNQZl", "currencySymbol": "9ulpnl1H", "currencyType": "REAL", "decimals": 67, "localizationDescriptions": {"fJoPGNne": "qMj22EcA", "EiYBjEOm": "KvJnvWpa", "Y02BOLl4": "vPSTOllo"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCurrency \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 48 'CreateCurrency' test.out

#- 49 UpdateCurrency
# body param: body
echo '{"localizationDescriptions": {"0HrcpvqE": "1UB9Qu6I", "D8Cj3cmw": "Q5qUsZMz", "X0BhnQla": "3z5pTrRF"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCurrency \
    --currencyCode 'SqJnI1Nj' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 49 'UpdateCurrency' test.out

#- 50 DeleteCurrency
$CLI_EXE \
    --sn platform \
    --op DeleteCurrency \
    --currencyCode '40rVP3kH' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 50 'DeleteCurrency' test.out

#- 51 GetCurrencyConfig
$CLI_EXE \
    --sn platform \
    --op GetCurrencyConfig \
    --currencyCode 'Y13gCZIa' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 51 'GetCurrencyConfig' test.out

#- 52 GetCurrencySummary
$CLI_EXE \
    --sn platform \
    --op GetCurrencySummary \
    --currencyCode 'l9dTh7BQ' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 52 'GetCurrencySummary' test.out

#- 53 GetDLCItemConfig
$CLI_EXE \
    --sn platform \
    --op GetDLCItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 53 'GetDLCItemConfig' test.out

#- 54 UpdateDLCItemConfig
# body param: body
echo '{"data": [{"id": "gRzm3Czo", "rewards": [{"currency": {"currencyCode": "W7YvjpSg", "namespace": "hCn86dLi"}, "item": {"itemId": "pkG2e2Ch", "itemSku": "UKL96cpD", "itemType": "8MloxaV7"}, "quantity": 26, "type": "CURRENCY"}, {"currency": {"currencyCode": "5pqEz5Pm", "namespace": "0w9xD6Mj"}, "item": {"itemId": "hdxzCIYW", "itemSku": "YIDHq8RU", "itemType": "9Lb40y50"}, "quantity": 81, "type": "CURRENCY"}, {"currency": {"currencyCode": "SH8JDhAD", "namespace": "8DhAgriq"}, "item": {"itemId": "lnwnF1aR", "itemSku": "U9ha6yaq", "itemType": "eui425sX"}, "quantity": 25, "type": "CURRENCY"}]}, {"id": "ipl1yyYP", "rewards": [{"currency": {"currencyCode": "kUwpRNAi", "namespace": "OovwTtkU"}, "item": {"itemId": "2rUSNvUP", "itemSku": "x4HZ7ctg", "itemType": "gQNoHi6Q"}, "quantity": 59, "type": "CURRENCY"}, {"currency": {"currencyCode": "4JhfktFN", "namespace": "eY1Pf8gl"}, "item": {"itemId": "MjIyz0KG", "itemSku": "ph1MXqPS", "itemType": "LuZgKRjP"}, "quantity": 82, "type": "CURRENCY"}, {"currency": {"currencyCode": "ODrI6Jr0", "namespace": "ziyoG0tw"}, "item": {"itemId": "FffceAyM", "itemSku": "6uhsmlor", "itemType": "kQZPmPlL"}, "quantity": 62, "type": "ITEM"}]}, {"id": "3ZQmx2WJ", "rewards": [{"currency": {"currencyCode": "mUTXDoOD", "namespace": "ySI9QhF9"}, "item": {"itemId": "JatrlcBh", "itemSku": "r3JgC1Xt", "itemType": "umIvdyuI"}, "quantity": 46, "type": "CURRENCY"}, {"currency": {"currencyCode": "ue8KKzLV", "namespace": "GQMVx0jl"}, "item": {"itemId": "x9Q9BCHc", "itemSku": "pmr33l6i", "itemType": "5bymXyKL"}, "quantity": 48, "type": "ITEM"}, {"currency": {"currencyCode": "Gwrq7a2x", "namespace": "7l138Z5e"}, "item": {"itemId": "nn9Bxyj5", "itemSku": "aaOeuP7D", "itemType": "jEO5lpD7"}, "quantity": 8, "type": "CURRENCY"}]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateDLCItemConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 54 'UpdateDLCItemConfig' test.out

#- 55 DeleteDLCItemConfig
$CLI_EXE \
    --sn platform \
    --op DeleteDLCItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 55 'DeleteDLCItemConfig' test.out

#- 56 GetPlatformDLCConfig
$CLI_EXE \
    --sn platform \
    --op GetPlatformDLCConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 56 'GetPlatformDLCConfig' test.out

#- 57 UpdatePlatformDLCConfig
# body param: body
echo '{"data": [{"platform": "XBOX", "platformDlcIdMap": {"HAJqyF7e": "VcdUy0Vh", "EWw4TjpO": "28LzKCBJ", "29zKyDMB": "Ja5kRl5m"}}, {"platform": "OCULUS", "platformDlcIdMap": {"B4fiQhDw": "YSn8L6V9", "rbndUweg": "s5hwm7pk", "rl7xvIKf": "LinrW9w2"}}, {"platform": "OCULUS", "platformDlcIdMap": {"wt1uum2K": "dvrDtzBB", "3KKscP3M": "xl2vLcma", "YGS9YGNu": "axd7PYx4"}}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePlatformDLCConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 57 'UpdatePlatformDLCConfig' test.out

#- 58 DeletePlatformDLCConfig
$CLI_EXE \
    --sn platform \
    --op DeletePlatformDLCConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 58 'DeletePlatformDLCConfig' test.out

#- 59 QueryEntitlements
$CLI_EXE \
    --sn platform \
    --op QueryEntitlements \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --appType 'GAME' \
    --entitlementClazz 'SUBSCRIPTION' \
    --entitlementName 'FdTzQatF' \
    --itemId '["mrMhnBzb", "owlERZpl", "crIFWrak"]' \
    --limit '65' \
    --offset '76' \
    --origin 'GooglePlay' \
    --userId 'Wgyj7Dcc' \
    > test.out 2>&1
eval_tap $? 59 'QueryEntitlements' test.out

#- 60 QueryEntitlements1
$CLI_EXE \
    --sn platform \
    --op QueryEntitlements1 \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --itemIds '["v37OFycS", "ZyKwntm6", "wPv0pWlF"]' \
    --limit '19' \
    --offset '83' \
    > test.out 2>&1
eval_tap $? 60 'QueryEntitlements1' test.out

#- 61 EnableEntitlementOriginFeature
$CLI_EXE \
    --sn platform \
    --op EnableEntitlementOriginFeature \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 61 'EnableEntitlementOriginFeature' test.out

#- 62 GetEntitlementConfigInfo
$CLI_EXE \
    --sn platform \
    --op GetEntitlementConfigInfo \
    --namespace $AB_NAMESPACE \
    --withoutCache 'true' \
    > test.out 2>&1
eval_tap $? 62 'GetEntitlementConfigInfo' test.out

#- 63 GrantEntitlements
# body param: body
echo '{"entitlementGrantList": [{"collectionId": "MhbG0I86", "endDate": "1977-05-05T00:00:00Z", "grantedCode": "dTMoVpNX", "itemId": "4pKFNlaj", "itemNamespace": "QNH3QE2k", "language": "mb-EzKu", "origin": "IOS", "quantity": 53, "region": "pRN2kq0C", "source": "ACHIEVEMENT", "startDate": "1996-04-26T00:00:00Z", "storeId": "N9hpDwA3"}, {"collectionId": "qvcETbvQ", "endDate": "1986-11-14T00:00:00Z", "grantedCode": "qWzWg1gd", "itemId": "Rqyr1aPn", "itemNamespace": "HASub8fi", "language": "th_Etpr", "origin": "Playstation", "quantity": 52, "region": "4LRyl1lg", "source": "OTHER", "startDate": "1999-03-14T00:00:00Z", "storeId": "4X5NHpmJ"}, {"collectionId": "XWieQG2W", "endDate": "1978-07-17T00:00:00Z", "grantedCode": "wbCWa4do", "itemId": "hAcn4Gxy", "itemNamespace": "pleCQp7R", "language": "js-318", "origin": "Steam", "quantity": 34, "region": "7CwxIr48", "source": "GIFT", "startDate": "1981-01-24T00:00:00Z", "storeId": "j50bOloq"}], "userIds": ["iUw6hPlV", "AYuoLl5d", "QacqphE8"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op GrantEntitlements \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 63 'GrantEntitlements' test.out

#- 64 RevokeEntitlements
# body param: body
echo '["pWetKA43", "WrZ7ucH8", "ZoXG7CRG"]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RevokeEntitlements \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 64 'RevokeEntitlements' test.out

#- 65 GetEntitlement
$CLI_EXE \
    --sn platform \
    --op GetEntitlement \
    --entitlementId 'jzVCXOVX' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 65 'GetEntitlement' test.out

#- 66 QueryFulfillmentHistories
$CLI_EXE \
    --sn platform \
    --op QueryFulfillmentHistories \
    --namespace $AB_NAMESPACE \
    --limit '7' \
    --offset '69' \
    --status 'SUCCESS' \
    --userId 'yT8uoJU4' \
    > test.out 2>&1
eval_tap $? 66 'QueryFulfillmentHistories' test.out

#- 67 QueryIAPClawbackHistory
$CLI_EXE \
    --sn platform \
    --op QueryIAPClawbackHistory \
    --namespace $AB_NAMESPACE \
    --endTime 'Tlfw2vWs' \
    --eventType 'CHARGEBACK' \
    --externalOrderId 'gm5hYelY' \
    --limit '33' \
    --offset '71' \
    --startTime 'jeLUtF6Q' \
    --status 'SUCCESS' \
    --userId '27WlOCB9' \
    > test.out 2>&1
eval_tap $? 67 'QueryIAPClawbackHistory' test.out

#- 68 MockPlayStationStreamEvent
# body param: body
echo '{"body": {"account": "QhZR9WSz", "additionalData": {"entitlement": [{"clientTransaction": [{"amountConsumed": 8, "clientTransactionId": "rlJoYhBz"}, {"amountConsumed": 84, "clientTransactionId": "Bs7OwdGe"}, {"amountConsumed": 75, "clientTransactionId": "9jmH0PPI"}], "entitlementId": "zG6u95cO", "usageCount": 6}, {"clientTransaction": [{"amountConsumed": 4, "clientTransactionId": "6c1HyJFk"}, {"amountConsumed": 19, "clientTransactionId": "2GuWv7V7"}, {"amountConsumed": 65, "clientTransactionId": "3pK0HU6F"}], "entitlementId": "y614bcIv", "usageCount": 54}, {"clientTransaction": [{"amountConsumed": 98, "clientTransactionId": "dF84a9Yf"}, {"amountConsumed": 95, "clientTransactionId": "WmbJK8gT"}, {"amountConsumed": 52, "clientTransactionId": "cYDViWDY"}], "entitlementId": "IcRlW2mb", "usageCount": 7}], "purpose": "o2z4wfSv"}, "originalTitleName": "UtBzioDH", "paymentProductSKU": "5EqpTfxR", "purchaseDate": "Tlkjf2Jr", "sourceOrderItemId": "LhryYseT", "titleName": "VDRQLequ"}, "eventDomain": "mJ9lAEdG", "eventSource": "yia1qZIO", "eventType": "PbEt2rka", "eventVersion": 85, "id": "B78CHoGf", "timestamp": "xB9B21AK"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op MockPlayStationStreamEvent \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 68 'MockPlayStationStreamEvent' test.out

#- 69 GetAppleIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetAppleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 69 'GetAppleIAPConfig' test.out

#- 70 UpdateAppleIAPConfig
# body param: body
echo '{"bundleId": "SaJIFDBX", "password": "9PFB8dU9"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateAppleIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 70 'UpdateAppleIAPConfig' test.out

#- 71 DeleteAppleIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteAppleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 71 'DeleteAppleIAPConfig' test.out

#- 72 GetEpicGamesIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetEpicGamesIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 72 'GetEpicGamesIAPConfig' test.out

#- 73 UpdateEpicGamesIAPConfig
# body param: body
echo '{"sandboxId": "UuO2aAD0"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateEpicGamesIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 73 'UpdateEpicGamesIAPConfig' test.out

#- 74 DeleteEpicGamesIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteEpicGamesIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 74 'DeleteEpicGamesIAPConfig' test.out

#- 75 GetGoogleIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetGoogleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 75 'GetGoogleIAPConfig' test.out

#- 76 UpdateGoogleIAPConfig
# body param: body
echo '{"applicationName": "X4uKIhbL", "serviceAccountId": "vAfguBXS"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateGoogleIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 76 'UpdateGoogleIAPConfig' test.out

#- 77 DeleteGoogleIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteGoogleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 77 'DeleteGoogleIAPConfig' test.out

#- 78 UpdateGoogleP12File
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UpdateGoogleP12File \
    --namespace $AB_NAMESPACE \
    --upload file $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 78 'UpdateGoogleP12File' test.out

#- 79 GetIAPItemConfig
$CLI_EXE \
    --sn platform \
    --op GetIAPItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 79 'GetIAPItemConfig' test.out

#- 80 UpdateIAPItemConfig
# body param: body
echo '{"data": [{"itemIdentity": "QxpOfYgW", "itemIdentityType": "ITEM_ID", "platformProductIdMap": {"wQWm2JMT": "WkJ9ZkJd", "7czlirzV": "YHuEymXF", "pWOnQFhK": "M2n2hjb7"}}, {"itemIdentity": "dMRQJlH7", "itemIdentityType": "ITEM_ID", "platformProductIdMap": {"xOTO9Xtz": "oD5D9YrN", "oMMQefCX": "3b0hDIL3", "MxPMdsXY": "TFsNpXDG"}}, {"itemIdentity": "RCb87mpS", "itemIdentityType": "ITEM_ID", "platformProductIdMap": {"lze7qrWj": "oszyIlWv", "aIJrMJBr": "YOXBFcd7", "0cmidq52": "GuB5BSVm"}}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateIAPItemConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 80 'UpdateIAPItemConfig' test.out

#- 81 DeleteIAPItemConfig
$CLI_EXE \
    --sn platform \
    --op DeleteIAPItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 81 'DeleteIAPItemConfig' test.out

#- 82 GetOculusIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetOculusIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 82 'GetOculusIAPConfig' test.out

#- 83 UpdateOculusIAPConfig
# body param: body
echo '{"appId": "wL53XKT2", "appSecret": "08TeoD4v"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateOculusIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 83 'UpdateOculusIAPConfig' test.out

#- 84 DeleteOculusIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteOculusIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 84 'DeleteOculusIAPConfig' test.out

#- 85 GetPlayStationIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetPlayStationIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 85 'GetPlayStationIAPConfig' test.out

#- 86 UpdatePlaystationIAPConfig
# body param: body
echo '{"backOfficeServerClientId": "4eLVRVzM", "backOfficeServerClientSecret": "ZMKkfCJN", "enableStreamJob": true, "environment": "Ey692oV1", "streamName": "HtAqryFY", "streamPartnerName": "QzRO6V2i"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePlaystationIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 86 'UpdatePlaystationIAPConfig' test.out

#- 87 DeletePlaystationIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeletePlaystationIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 87 'DeletePlaystationIAPConfig' test.out

#- 88 ValidateExistedPlaystationIAPConfig
$CLI_EXE \
    --sn platform \
    --op ValidateExistedPlaystationIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 88 'ValidateExistedPlaystationIAPConfig' test.out

#- 89 ValidatePlaystationIAPConfig
# body param: body
echo '{"backOfficeServerClientId": "UX4ZIsP8", "backOfficeServerClientSecret": "ROiGKE3t", "enableStreamJob": false, "environment": "eAPoTHJn", "streamName": "uwbCSHxo", "streamPartnerName": "ZXwwqCLG"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ValidatePlaystationIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 89 'ValidatePlaystationIAPConfig' test.out

#- 90 GetSteamIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetSteamIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 90 'GetSteamIAPConfig' test.out

#- 91 UpdateSteamIAPConfig
# body param: body
echo '{"appId": "F5mXjxGk", "publisherAuthenticationKey": "9K02zUR0"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateSteamIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 91 'UpdateSteamIAPConfig' test.out

#- 92 DeleteSteamIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteSteamIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 92 'DeleteSteamIAPConfig' test.out

#- 93 GetTwitchIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetTwitchIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 93 'GetTwitchIAPConfig' test.out

#- 94 UpdateTwitchIAPConfig
# body param: body
echo '{"clientId": "8wG4BgR8", "clientSecret": "Moxmlqc7", "organizationId": "HLzk0H6N"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateTwitchIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 94 'UpdateTwitchIAPConfig' test.out

#- 95 DeleteTwitchIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteTwitchIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 95 'DeleteTwitchIAPConfig' test.out

#- 96 GetXblIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetXblIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 96 'GetXblIAPConfig' test.out

#- 97 UpdateXblIAPConfig
# body param: body
echo '{"relyingPartyCert": "xMRFKq2q"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXblIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 97 'UpdateXblIAPConfig' test.out

#- 98 DeleteXblAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteXblAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 98 'DeleteXblAPConfig' test.out

#- 99 UpdateXblBPCertFile
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UpdateXblBPCertFile \
    --namespace $AB_NAMESPACE \
    --upload file $TEMP_FILE_UPLOAD \
    --password '8cPpaPKr' \
    > test.out 2>&1
eval_tap $? 99 'UpdateXblBPCertFile' test.out

#- 100 DownloadInvoiceDetails
$CLI_EXE \
    --sn platform \
    --op DownloadInvoiceDetails \
    --namespace $AB_NAMESPACE \
    --feature 'kZhcXcUC' \
    --itemId '5EXZDSzr' \
    --itemType 'SEASON' \
    --endTime '8GvM2dCq' \
    --startTime 'sTeBPnpE' \
    > test.out 2>&1
eval_tap $? 100 'DownloadInvoiceDetails' test.out

#- 101 GenerateInvoiceSummary
$CLI_EXE \
    --sn platform \
    --op GenerateInvoiceSummary \
    --namespace $AB_NAMESPACE \
    --feature 'Bqg8NB6d' \
    --itemId 'gnBYdGRv' \
    --itemType 'BUNDLE' \
    --endTime '2uwfgV9R' \
    --startTime '8ibzRqf3' \
    > test.out 2>&1
eval_tap $? 101 'GenerateInvoiceSummary' test.out

#- 102 SyncInGameItem
# body param: body
echo '{"categoryPath": "5KLUV1Hw", "targetItemId": "a2xNJ4C1", "targetNamespace": "ZOTjnGVz"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncInGameItem \
    --namespace $AB_NAMESPACE \
    --storeId 'G1fnNSFJ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 102 'SyncInGameItem' test.out

#- 103 CreateItem
# body param: body
echo '{"appId": "pK4lDoWi", "appType": "DEMO", "baseAppId": "NLBJBmQO", "boothName": "eXYAFXqn", "categoryPath": "0PLnNoID", "clazz": "X4A2FVht", "displayOrder": 51, "entitlementType": "CONSUMABLE", "ext": {"HuKNScW7": {}, "IdA1h4t0": {}, "q8eQyLbL": {}}, "features": ["tcTZJeEY", "qGNbml3F", "geM4MZr6"], "flexible": true, "images": [{"as": "LTwWqNj5", "caption": "oDg5fkCP", "height": 14, "imageUrl": "7lu1baJM", "smallImageUrl": "yp0zt6tb", "width": 85}, {"as": "oRqCSpiN", "caption": "QwWDmKkn", "height": 97, "imageUrl": "WAPr7D6s", "smallImageUrl": "ks6bDRj1", "width": 30}, {"as": "R9pmIfEp", "caption": "DbNlrXWK", "height": 79, "imageUrl": "B4rz24I6", "smallImageUrl": "6IuOBzUD", "width": 37}], "inventoryConfig": {"customAttributes": {"6dZFnbut": {}, "0DV6tz5m": {}, "mP44GMB5": {}}, "serverCustomAttributes": {"jL4mAMyt": {}, "n49BfLWp": {}, "vwXaEEk2": {}}, "slotUsed": 7}, "itemIds": ["g1imz6dJ", "XN5n6I3Q", "C9guUqiJ"], "itemQty": {"XYIZoAQB": 38, "tfJyPQeu": 49, "2S51n8vN": 37}, "itemType": "BUNDLE", "listable": false, "localizations": {"2mfhjoFM": {"description": "3yZLfFDZ", "localExt": {"ZhUO7vZN": {}, "foHfcquf": {}, "lzxPFASM": {}}, "longDescription": "QaAquwJj", "title": "YcxaBL95"}, "F8QEQr1A": {"description": "Y9RXwkeg", "localExt": {"FUHZfh19": {}, "pfOr91RA": {}, "fY1Aeqif": {}}, "longDescription": "TGq5g5pG", "title": "W26oRj6y"}, "3Yw2FaXF": {"description": "VagUgqbY", "localExt": {"VDHnpAvO": {}, "GruE6hII": {}, "sHS0ka8E": {}}, "longDescription": "bYENNGHG", "title": "ijahg4UP"}}, "lootBoxConfig": {"rewardCount": 50, "rewards": [{"lootBoxItems": [{"count": 31, "duration": 14, "endDate": "1993-08-26T00:00:00Z", "itemId": "9U0NBVLB", "itemSku": "ZFpTni7u", "itemType": "yXFgtpuw"}, {"count": 35, "duration": 70, "endDate": "1974-03-29T00:00:00Z", "itemId": "OLFxqgOz", "itemSku": "jrunfpEv", "itemType": "al3mdr6N"}, {"count": 1, "duration": 56, "endDate": "1973-09-20T00:00:00Z", "itemId": "KlOPmgpe", "itemSku": "7rjsmKgt", "itemType": "vgpXuAsj"}], "name": "jkAcBIOY", "odds": 0.4579438242157903, "type": "REWARD_GROUP", "weight": 3}, {"lootBoxItems": [{"count": 75, "duration": 99, "endDate": "1975-06-02T00:00:00Z", "itemId": "IGqANWoh", "itemSku": "zY0yd4Qo", "itemType": "djh76U8n"}, {"count": 90, "duration": 17, "endDate": "1982-09-19T00:00:00Z", "itemId": "fpMbPQjw", "itemSku": "UbZzsFfl", "itemType": "gLwgWR4C"}, {"count": 80, "duration": 44, "endDate": "1978-09-03T00:00:00Z", "itemId": "hFbWfeAi", "itemSku": "spsJrQQG", "itemType": "5SrHJQpA"}], "name": "BlOnnAFb", "odds": 0.6603378387789245, "type": "PROBABILITY_GROUP", "weight": 3}, {"lootBoxItems": [{"count": 83, "duration": 42, "endDate": "1990-12-23T00:00:00Z", "itemId": "S79MsDr8", "itemSku": "bw6K6thT", "itemType": "Id4x3sD5"}, {"count": 30, "duration": 94, "endDate": "1997-02-24T00:00:00Z", "itemId": "VgK2yK32", "itemSku": "8zSEcAAb", "itemType": "YGelySTp"}, {"count": 66, "duration": 47, "endDate": "1985-02-07T00:00:00Z", "itemId": "RrHJqsYO", "itemSku": "0GNwq21x", "itemType": "P77QzD6X"}], "name": "xYoYitSS", "odds": 0.6209965222928935, "type": "REWARD", "weight": 18}], "rollFunction": "DEFAULT"}, "maxCount": 73, "maxCountPerUser": 100, "name": "f5UCvh9s", "optionBoxConfig": {"boxItems": [{"count": 23, "duration": 82, "endDate": "1995-03-10T00:00:00Z", "itemId": "OWgDHExl", "itemSku": "4ZHxpeMo", "itemType": "jHWiJAWM"}, {"count": 50, "duration": 65, "endDate": "1984-02-22T00:00:00Z", "itemId": "xFR6ZXhY", "itemSku": "MjZnE31k", "itemType": "VhfmmATq"}, {"count": 20, "duration": 23, "endDate": "1986-03-09T00:00:00Z", "itemId": "uWOygaJT", "itemSku": "x0imkMF9", "itemType": "serR5Wld"}]}, "purchasable": true, "recurring": {"cycle": "QUARTERLY", "fixedFreeDays": 76, "fixedTrialCycles": 82, "graceDays": 86}, "regionData": {"KiXiiePP": [{"currencyCode": "25oMW8rd", "currencyNamespace": "XjmWiXKW", "currencyType": "REAL", "discountAmount": 48, "discountExpireAt": "1979-02-06T00:00:00Z", "discountPercentage": 48, "discountPurchaseAt": "1997-01-23T00:00:00Z", "expireAt": "1985-07-10T00:00:00Z", "price": 91, "purchaseAt": "1985-10-24T00:00:00Z", "trialPrice": 27}, {"currencyCode": "MoOWpR13", "currencyNamespace": "fHFLLQ4W", "currencyType": "VIRTUAL", "discountAmount": 44, "discountExpireAt": "1972-08-10T00:00:00Z", "discountPercentage": 100, "discountPurchaseAt": "1972-03-22T00:00:00Z", "expireAt": "1972-04-23T00:00:00Z", "price": 44, "purchaseAt": "1990-04-22T00:00:00Z", "trialPrice": 61}, {"currencyCode": "vpWtGP2C", "currencyNamespace": "djRnbWux", "currencyType": "VIRTUAL", "discountAmount": 62, "discountExpireAt": "1990-04-18T00:00:00Z", "discountPercentage": 96, "discountPurchaseAt": "1978-05-22T00:00:00Z", "expireAt": "1996-01-19T00:00:00Z", "price": 28, "purchaseAt": "1993-04-25T00:00:00Z", "trialPrice": 1}], "g9nwUpTv": [{"currencyCode": "UEYJ0WhU", "currencyNamespace": "Oah5mFqX", "currencyType": "REAL", "discountAmount": 92, "discountExpireAt": "1975-02-27T00:00:00Z", "discountPercentage": 94, "discountPurchaseAt": "1988-09-10T00:00:00Z", "expireAt": "1992-03-07T00:00:00Z", "price": 46, "purchaseAt": "1987-06-13T00:00:00Z", "trialPrice": 11}, {"currencyCode": "7jwBafSz", "currencyNamespace": "vTDDGOue", "currencyType": "REAL", "discountAmount": 44, "discountExpireAt": "1989-10-16T00:00:00Z", "discountPercentage": 46, "discountPurchaseAt": "1987-06-18T00:00:00Z", "expireAt": "1998-01-26T00:00:00Z", "price": 99, "purchaseAt": "1999-08-25T00:00:00Z", "trialPrice": 66}, {"currencyCode": "fjxFy0Wn", "currencyNamespace": "9OKgCDRF", "currencyType": "VIRTUAL", "discountAmount": 32, "discountExpireAt": "1977-09-04T00:00:00Z", "discountPercentage": 43, "discountPurchaseAt": "1988-02-17T00:00:00Z", "expireAt": "1997-12-04T00:00:00Z", "price": 9, "purchaseAt": "1982-05-08T00:00:00Z", "trialPrice": 93}], "pNcO0fuT": [{"currencyCode": "rGSpbVFg", "currencyNamespace": "aKbcM3EU", "currencyType": "REAL", "discountAmount": 80, "discountExpireAt": "1973-08-07T00:00:00Z", "discountPercentage": 69, "discountPurchaseAt": "1990-10-11T00:00:00Z", "expireAt": "1980-08-22T00:00:00Z", "price": 29, "purchaseAt": "1999-12-20T00:00:00Z", "trialPrice": 90}, {"currencyCode": "axwRyOab", "currencyNamespace": "k6U85PZG", "currencyType": "REAL", "discountAmount": 40, "discountExpireAt": "1997-05-27T00:00:00Z", "discountPercentage": 54, "discountPurchaseAt": "1982-12-11T00:00:00Z", "expireAt": "1975-05-19T00:00:00Z", "price": 76, "purchaseAt": "1973-09-23T00:00:00Z", "trialPrice": 43}, {"currencyCode": "pkFXeS7e", "currencyNamespace": "IyBPvBxO", "currencyType": "REAL", "discountAmount": 85, "discountExpireAt": "1990-03-19T00:00:00Z", "discountPercentage": 98, "discountPurchaseAt": "1976-12-11T00:00:00Z", "expireAt": "1993-10-04T00:00:00Z", "price": 71, "purchaseAt": "1989-05-29T00:00:00Z", "trialPrice": 67}]}, "saleConfig": {"currencyCode": "U66nrdVs", "price": 15}, "seasonType": "TIER", "sectionExclusive": true, "sellable": false, "sku": "pA7UYaCO", "stackable": true, "status": "INACTIVE", "tags": ["Mf7uhSfY", "MlISWoqg", "l8ytAIL7"], "targetCurrencyCode": "ojEABaKf", "targetNamespace": "eF1ReRKy", "thumbnailUrl": "lXZMGXLt", "useCount": 24}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateItem \
    --namespace $AB_NAMESPACE \
    --storeId 'pyeG3fWq' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 103 'CreateItem' test.out

#- 104 GetItemByAppId
$CLI_EXE \
    --sn platform \
    --op GetItemByAppId \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --storeId 'hZ8d3Ydn' \
    --appId 'lCATgD5Y' \
    > test.out 2>&1
eval_tap $? 104 'GetItemByAppId' test.out

#- 105 QueryItems
$CLI_EXE \
    --sn platform \
    --op QueryItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --appType 'GAME' \
    --availableDate 'vIDu8fRG' \
    --baseAppId 'y0wxAxlU' \
    --categoryPath 'wT281wzP' \
    --features 'TPYiHF7I' \
    --includeSubCategoryItem 'false' \
    --itemType 'OPTIONBOX' \
    --limit '59' \
    --offset '35' \
    --region 'qj2hmcSR' \
    --sortBy '["displayOrder:asc", "displayOrder:desc", "createdAt"]' \
    --storeId 'tFXzd3wL' \
    --tags 'x4K92VRc' \
    --targetNamespace 'kQpDSkeC' \
    > test.out 2>&1
eval_tap $? 105 'QueryItems' test.out

#- 106 ListBasicItemsByFeatures
$CLI_EXE \
    --sn platform \
    --op ListBasicItemsByFeatures \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --features '["IRLgiL3P", "RgRvXhYw", "rfDRGDVp"]' \
    > test.out 2>&1
eval_tap $? 106 'ListBasicItemsByFeatures' test.out

#- 107 GetItems
$CLI_EXE \
    --sn platform \
    --op GetItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --storeId 'ab4cKao2' \
    --itemIds 'jCZLSdsO' \
    > test.out 2>&1
eval_tap $? 107 'GetItems' test.out

#- 108 GetItemBySku
$CLI_EXE \
    --sn platform \
    --op GetItemBySku \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --storeId 'YAguiX1b' \
    --sku 'IXSvkSj4' \
    > test.out 2>&1
eval_tap $? 108 'GetItemBySku' test.out

#- 109 GetLocaleItemBySku
$CLI_EXE \
    --sn platform \
    --op GetLocaleItemBySku \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --language 'ekU2pii2' \
    --populateBundle 'true' \
    --region 'AKnyopb9' \
    --storeId 'kOOMKrs3' \
    --sku '93nOTZXt' \
    > test.out 2>&1
eval_tap $? 109 'GetLocaleItemBySku' test.out

#- 110 GetEstimatedPrice
$CLI_EXE \
    --sn platform \
    --op GetEstimatedPrice \
    --namespace $AB_NAMESPACE \
    --platform 'kYYmILOI' \
    --region 'kZGf508d' \
    --storeId 'mbPUwa5P' \
    --itemIds 'ENrgLy7n' \
    --userId 'Mj2vJ22V' \
    > test.out 2>&1
eval_tap $? 110 'GetEstimatedPrice' test.out

#- 111 GetItemIdBySku
$CLI_EXE \
    --sn platform \
    --op GetItemIdBySku \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --storeId '6QG5CJfw' \
    --sku '86iVJRCu' \
    > test.out 2>&1
eval_tap $? 111 'GetItemIdBySku' test.out

#- 112 GetBulkItemIdBySkus
$CLI_EXE \
    --sn platform \
    --op GetBulkItemIdBySkus \
    --namespace $AB_NAMESPACE \
    --sku '["VcjO0R7u", "fHZ8zqog", "M8lu3vVW"]' \
    --storeId '1E06yPnw' \
    > test.out 2>&1
eval_tap $? 112 'GetBulkItemIdBySkus' test.out

#- 113 BulkGetLocaleItems
$CLI_EXE \
    --sn platform \
    --op BulkGetLocaleItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --language 'DS7X8an9' \
    --region 'kP0JNgJH' \
    --storeId 'gz2B9lZX' \
    --itemIds 'KIZKXgqK' \
    > test.out 2>&1
eval_tap $? 113 'BulkGetLocaleItems' test.out

#- 114 GetAvailablePredicateTypes
$CLI_EXE \
    --sn platform \
    --op GetAvailablePredicateTypes \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 114 'GetAvailablePredicateTypes' test.out

#- 115 ValidateItemPurchaseCondition
# body param: body
echo '{"itemIds": ["OopyuDtO", "xEvd9zad", "RTSZX64T"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ValidateItemPurchaseCondition \
    --namespace $AB_NAMESPACE \
    --platform 'Cf8u0BQi' \
    --userId '4FgdHwD1' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 115 'ValidateItemPurchaseCondition' test.out

#- 116 BulkUpdateRegionData
# body param: body
echo '{"changes": [{"itemIdentities": ["s1pv5Znr", "fbEwsEoz", "wGLrn8cR"], "itemIdentityType": "ITEM_SKU", "regionData": {"5OmEHuNO": [{"currencyCode": "3yAZF7WW", "currencyNamespace": "6h76UqOE", "currencyType": "REAL", "discountAmount": 93, "discountExpireAt": "1988-10-01T00:00:00Z", "discountPercentage": 23, "discountPurchaseAt": "1994-08-03T00:00:00Z", "discountedPrice": 5, "expireAt": "1998-12-28T00:00:00Z", "price": 13, "purchaseAt": "1997-04-18T00:00:00Z", "trialPrice": 91}, {"currencyCode": "HawIpl8z", "currencyNamespace": "ZoJtgiZK", "currencyType": "REAL", "discountAmount": 99, "discountExpireAt": "1976-10-18T00:00:00Z", "discountPercentage": 79, "discountPurchaseAt": "1999-01-23T00:00:00Z", "discountedPrice": 17, "expireAt": "1974-01-02T00:00:00Z", "price": 69, "purchaseAt": "1979-09-18T00:00:00Z", "trialPrice": 54}, {"currencyCode": "05sPqz8G", "currencyNamespace": "qAZfAvXo", "currencyType": "REAL", "discountAmount": 1, "discountExpireAt": "1976-01-02T00:00:00Z", "discountPercentage": 47, "discountPurchaseAt": "1988-04-14T00:00:00Z", "discountedPrice": 60, "expireAt": "1995-07-10T00:00:00Z", "price": 78, "purchaseAt": "1975-07-15T00:00:00Z", "trialPrice": 0}], "3OHe4pRL": [{"currencyCode": "nOk9KwBy", "currencyNamespace": "Psi5g1TP", "currencyType": "REAL", "discountAmount": 97, "discountExpireAt": "1973-07-25T00:00:00Z", "discountPercentage": 91, "discountPurchaseAt": "1992-12-23T00:00:00Z", "discountedPrice": 39, "expireAt": "1981-12-02T00:00:00Z", "price": 19, "purchaseAt": "1971-06-19T00:00:00Z", "trialPrice": 58}, {"currencyCode": "OpylXYgg", "currencyNamespace": "Ebtjdzqb", "currencyType": "VIRTUAL", "discountAmount": 62, "discountExpireAt": "1995-04-23T00:00:00Z", "discountPercentage": 37, "discountPurchaseAt": "1981-09-22T00:00:00Z", "discountedPrice": 77, "expireAt": "1974-06-29T00:00:00Z", "price": 93, "purchaseAt": "1995-05-02T00:00:00Z", "trialPrice": 44}, {"currencyCode": "WhpkXxU9", "currencyNamespace": "tuFvlshm", "currencyType": "VIRTUAL", "discountAmount": 52, "discountExpireAt": "1972-01-08T00:00:00Z", "discountPercentage": 7, "discountPurchaseAt": "1984-12-26T00:00:00Z", "discountedPrice": 28, "expireAt": "1973-12-15T00:00:00Z", "price": 29, "purchaseAt": "1998-03-16T00:00:00Z", "trialPrice": 49}], "wo84cM7l": [{"currencyCode": "vp5eQpvf", "currencyNamespace": "e1GwhslA", "currencyType": "REAL", "discountAmount": 15, "discountExpireAt": "1994-12-23T00:00:00Z", "discountPercentage": 97, "discountPurchaseAt": "1993-12-02T00:00:00Z", "discountedPrice": 11, "expireAt": "1982-01-21T00:00:00Z", "price": 93, "purchaseAt": "1980-08-09T00:00:00Z", "trialPrice": 91}, {"currencyCode": "UW7NskNH", "currencyNamespace": "93UcCmg3", "currencyType": "REAL", "discountAmount": 15, "discountExpireAt": "1982-04-05T00:00:00Z", "discountPercentage": 51, "discountPurchaseAt": "1983-08-03T00:00:00Z", "discountedPrice": 57, "expireAt": "1972-07-03T00:00:00Z", "price": 16, "purchaseAt": "1991-06-24T00:00:00Z", "trialPrice": 51}, {"currencyCode": "tDGnz9S1", "currencyNamespace": "th5m8sht", "currencyType": "REAL", "discountAmount": 57, "discountExpireAt": "1985-02-07T00:00:00Z", "discountPercentage": 30, "discountPurchaseAt": "1978-04-29T00:00:00Z", "discountedPrice": 11, "expireAt": "1994-06-29T00:00:00Z", "price": 97, "purchaseAt": "1998-04-14T00:00:00Z", "trialPrice": 32}]}}, {"itemIdentities": ["pQQa92LK", "1wG5MWRa", "c3qxPsie"], "itemIdentityType": "ITEM_SKU", "regionData": {"p5mdWhdF": [{"currencyCode": "6RXoJHDw", "currencyNamespace": "BDkAfgyN", "currencyType": "REAL", "discountAmount": 1, "discountExpireAt": "1988-05-17T00:00:00Z", "discountPercentage": 60, "discountPurchaseAt": "1971-07-11T00:00:00Z", "discountedPrice": 78, "expireAt": "1971-03-26T00:00:00Z", "price": 96, "purchaseAt": "1975-04-29T00:00:00Z", "trialPrice": 78}, {"currencyCode": "SRWggKfx", "currencyNamespace": "u9HxZRKN", "currencyType": "VIRTUAL", "discountAmount": 54, "discountExpireAt": "1994-08-19T00:00:00Z", "discountPercentage": 55, "discountPurchaseAt": "1972-09-25T00:00:00Z", "discountedPrice": 66, "expireAt": "1979-04-04T00:00:00Z", "price": 53, "purchaseAt": "1977-10-29T00:00:00Z", "trialPrice": 81}, {"currencyCode": "iC035edN", "currencyNamespace": "68nGtQn4", "currencyType": "REAL", "discountAmount": 65, "discountExpireAt": "1998-04-26T00:00:00Z", "discountPercentage": 97, "discountPurchaseAt": "1989-12-19T00:00:00Z", "discountedPrice": 14, "expireAt": "1986-04-21T00:00:00Z", "price": 61, "purchaseAt": "1990-12-04T00:00:00Z", "trialPrice": 96}], "2yWhoOF3": [{"currencyCode": "zcyOSEk0", "currencyNamespace": "a9mqMLvY", "currencyType": "VIRTUAL", "discountAmount": 93, "discountExpireAt": "1987-06-15T00:00:00Z", "discountPercentage": 76, "discountPurchaseAt": "1995-09-23T00:00:00Z", "discountedPrice": 50, "expireAt": "1971-12-06T00:00:00Z", "price": 15, "purchaseAt": "1980-11-04T00:00:00Z", "trialPrice": 49}, {"currencyCode": "KGtbqLQY", "currencyNamespace": "KxOKs5o9", "currencyType": "REAL", "discountAmount": 47, "discountExpireAt": "1990-09-22T00:00:00Z", "discountPercentage": 95, "discountPurchaseAt": "1989-09-28T00:00:00Z", "discountedPrice": 48, "expireAt": "1981-06-05T00:00:00Z", "price": 16, "purchaseAt": "1992-10-29T00:00:00Z", "trialPrice": 16}, {"currencyCode": "FuXkVSnj", "currencyNamespace": "gYaCj7JJ", "currencyType": "VIRTUAL", "discountAmount": 93, "discountExpireAt": "1991-07-13T00:00:00Z", "discountPercentage": 52, "discountPurchaseAt": "1980-07-14T00:00:00Z", "discountedPrice": 51, "expireAt": "1994-02-15T00:00:00Z", "price": 55, "purchaseAt": "1999-08-27T00:00:00Z", "trialPrice": 73}], "iauItBHz": [{"currencyCode": "OxLyBUkA", "currencyNamespace": "dyXi90ea", "currencyType": "VIRTUAL", "discountAmount": 41, "discountExpireAt": "1981-06-29T00:00:00Z", "discountPercentage": 18, "discountPurchaseAt": "1998-09-01T00:00:00Z", "discountedPrice": 49, "expireAt": "1990-12-20T00:00:00Z", "price": 7, "purchaseAt": "1987-10-17T00:00:00Z", "trialPrice": 20}, {"currencyCode": "a07e8x23", "currencyNamespace": "MVfjeHAp", "currencyType": "REAL", "discountAmount": 77, "discountExpireAt": "1995-01-26T00:00:00Z", "discountPercentage": 73, "discountPurchaseAt": "1987-05-12T00:00:00Z", "discountedPrice": 9, "expireAt": "1998-07-26T00:00:00Z", "price": 29, "purchaseAt": "1985-02-23T00:00:00Z", "trialPrice": 75}, {"currencyCode": "jiPAa1Ik", "currencyNamespace": "mOYFc5i7", "currencyType": "VIRTUAL", "discountAmount": 36, "discountExpireAt": "1986-05-20T00:00:00Z", "discountPercentage": 17, "discountPurchaseAt": "1976-06-21T00:00:00Z", "discountedPrice": 95, "expireAt": "1989-08-30T00:00:00Z", "price": 90, "purchaseAt": "1991-04-26T00:00:00Z", "trialPrice": 69}]}}, {"itemIdentities": ["XylHOhoE", "O0YRJXpV", "pW8SgWPu"], "itemIdentityType": "ITEM_ID", "regionData": {"5jpL3uVi": [{"currencyCode": "HNlbCMmw", "currencyNamespace": "jTafjwWx", "currencyType": "VIRTUAL", "discountAmount": 16, "discountExpireAt": "1985-03-10T00:00:00Z", "discountPercentage": 49, "discountPurchaseAt": "1972-03-13T00:00:00Z", "discountedPrice": 81, "expireAt": "1986-10-12T00:00:00Z", "price": 73, "purchaseAt": "1996-11-25T00:00:00Z", "trialPrice": 99}, {"currencyCode": "PtVet0Va", "currencyNamespace": "9s4SKq6l", "currencyType": "VIRTUAL", "discountAmount": 56, "discountExpireAt": "1985-06-05T00:00:00Z", "discountPercentage": 0, "discountPurchaseAt": "1971-03-22T00:00:00Z", "discountedPrice": 38, "expireAt": "1999-11-06T00:00:00Z", "price": 5, "purchaseAt": "1976-11-17T00:00:00Z", "trialPrice": 17}, {"currencyCode": "n4vLards", "currencyNamespace": "Ph9IpDAx", "currencyType": "REAL", "discountAmount": 19, "discountExpireAt": "1983-02-01T00:00:00Z", "discountPercentage": 81, "discountPurchaseAt": "1978-07-25T00:00:00Z", "discountedPrice": 20, "expireAt": "1974-06-15T00:00:00Z", "price": 97, "purchaseAt": "1982-09-17T00:00:00Z", "trialPrice": 63}], "owekLrQC": [{"currencyCode": "XbTGdlUJ", "currencyNamespace": "MHlln16J", "currencyType": "REAL", "discountAmount": 82, "discountExpireAt": "1980-02-27T00:00:00Z", "discountPercentage": 67, "discountPurchaseAt": "1999-12-12T00:00:00Z", "discountedPrice": 67, "expireAt": "1997-04-30T00:00:00Z", "price": 9, "purchaseAt": "1981-06-25T00:00:00Z", "trialPrice": 30}, {"currencyCode": "MvAPd3uA", "currencyNamespace": "hKw84W0T", "currencyType": "REAL", "discountAmount": 51, "discountExpireAt": "1985-08-01T00:00:00Z", "discountPercentage": 2, "discountPurchaseAt": "1975-02-17T00:00:00Z", "discountedPrice": 21, "expireAt": "1976-01-05T00:00:00Z", "price": 69, "purchaseAt": "1986-11-19T00:00:00Z", "trialPrice": 33}, {"currencyCode": "R1Ilevk1", "currencyNamespace": "XQtFf3OY", "currencyType": "VIRTUAL", "discountAmount": 98, "discountExpireAt": "1988-01-15T00:00:00Z", "discountPercentage": 70, "discountPurchaseAt": "1998-08-19T00:00:00Z", "discountedPrice": 39, "expireAt": "1995-02-04T00:00:00Z", "price": 63, "purchaseAt": "1981-11-16T00:00:00Z", "trialPrice": 92}], "PxM1hwjp": [{"currencyCode": "n2UMcGuR", "currencyNamespace": "kmytD0pQ", "currencyType": "VIRTUAL", "discountAmount": 25, "discountExpireAt": "1999-07-18T00:00:00Z", "discountPercentage": 70, "discountPurchaseAt": "1998-12-21T00:00:00Z", "discountedPrice": 91, "expireAt": "1983-04-13T00:00:00Z", "price": 0, "purchaseAt": "1974-01-16T00:00:00Z", "trialPrice": 72}, {"currencyCode": "Na8jNDwW", "currencyNamespace": "ozQbc2dT", "currencyType": "REAL", "discountAmount": 36, "discountExpireAt": "1997-06-05T00:00:00Z", "discountPercentage": 3, "discountPurchaseAt": "1972-04-16T00:00:00Z", "discountedPrice": 30, "expireAt": "1977-12-27T00:00:00Z", "price": 3, "purchaseAt": "1996-04-02T00:00:00Z", "trialPrice": 59}, {"currencyCode": "bsHKe3Pw", "currencyNamespace": "SZKSd028", "currencyType": "REAL", "discountAmount": 90, "discountExpireAt": "1994-10-10T00:00:00Z", "discountPercentage": 86, "discountPurchaseAt": "1991-11-05T00:00:00Z", "discountedPrice": 22, "expireAt": "1976-09-13T00:00:00Z", "price": 92, "purchaseAt": "1978-10-18T00:00:00Z", "trialPrice": 43}]}}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op BulkUpdateRegionData \
    --namespace $AB_NAMESPACE \
    --storeId 'g0oaGtbb' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 116 'BulkUpdateRegionData' test.out

#- 117 SearchItems
$CLI_EXE \
    --sn platform \
    --op SearchItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --itemType 'INGAMEITEM' \
    --limit '24' \
    --offset '99' \
    --sortBy 'E4UiDTMG' \
    --storeId 'aXaXoWxt' \
    --keyword 'ADiRGk34' \
    --language 'yiAE4ykq' \
    > test.out 2>&1
eval_tap $? 117 'SearchItems' test.out

#- 118 QueryUncategorizedItems
$CLI_EXE \
    --sn platform \
    --op QueryUncategorizedItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --limit '57' \
    --offset '64' \
    --sortBy '["updatedAt:asc", "createdAt:desc", "displayOrder:asc"]' \
    --storeId 'mpIkL9zL' \
    > test.out 2>&1
eval_tap $? 118 'QueryUncategorizedItems' test.out

#- 119 GetItem
$CLI_EXE \
    --sn platform \
    --op GetItem \
    --itemId 'lnkqZTY7' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --storeId 'sXgXYoQh' \
    > test.out 2>&1
eval_tap $? 119 'GetItem' test.out

#- 120 UpdateItem
# body param: body
echo '{"appId": "Wp1u09Gk", "appType": "DLC", "baseAppId": "GyebHclb", "boothName": "2CKH898l", "categoryPath": "89Maav0j", "clazz": "bS5vnvuV", "displayOrder": 62, "entitlementType": "DURABLE", "ext": {"rAAV55Zm": {}, "EvtU4Blo": {}, "w7BaSghC": {}}, "features": ["YroX3QOF", "NVnbozRI", "fm4gK6TT"], "flexible": true, "images": [{"as": "Doe07Koi", "caption": "ZgXKNnY4", "height": 98, "imageUrl": "NwOGjOsy", "smallImageUrl": "vyahBogS", "width": 24}, {"as": "QiFWsz37", "caption": "nH3hWLyK", "height": 48, "imageUrl": "UDrlr1Dj", "smallImageUrl": "gfM1gcF7", "width": 72}, {"as": "H4oE0iBL", "caption": "HhVcBfQN", "height": 31, "imageUrl": "d7ZqAGLM", "smallImageUrl": "2XPzjh2P", "width": 78}], "inventoryConfig": {"customAttributes": {"mHOlQm7m": {}, "xH3dgJtX": {}, "KuHK8njO": {}}, "serverCustomAttributes": {"sFbb5oWZ": {}, "z9RtM9AR": {}, "ZI9fNbLV": {}}, "slotUsed": 81}, "itemIds": ["tjyP8yUR", "v0xc2IjG", "gN2f1eGO"], "itemQty": {"S2bvXWCh": 75, "BM4S8QOP": 67, "iOANxj8p": 85}, "itemType": "CODE", "listable": false, "localizations": {"YOWR4hUS": {"description": "et98wZ1m", "localExt": {"ssgIY2Y2": {}, "CKRiaqZU": {}, "M6XfuYmA": {}}, "longDescription": "NEcA91go", "title": "EnIS4a79"}, "sXs4dGwg": {"description": "absWyM4s", "localExt": {"9Au7tg7T": {}, "2hINN3jF": {}, "ZhCYqYNH": {}}, "longDescription": "kpPXnBlz", "title": "D41DR4Ji"}, "cimUAodo": {"description": "1F4X3Ydb", "localExt": {"YApDIW7F": {}, "WKgF7YIp": {}, "Pr3XcHPZ": {}}, "longDescription": "xfbOlKJA", "title": "ssrzjNj1"}}, "lootBoxConfig": {"rewardCount": 81, "rewards": [{"lootBoxItems": [{"count": 28, "duration": 50, "endDate": "1997-09-30T00:00:00Z", "itemId": "hDqwqMAy", "itemSku": "aJtYuNa4", "itemType": "M9EMqMgb"}, {"count": 34, "duration": 39, "endDate": "1992-12-14T00:00:00Z", "itemId": "cmnLEKVH", "itemSku": "AsuOJNNT", "itemType": "3zMhTn2C"}, {"count": 91, "duration": 37, "endDate": "1973-05-28T00:00:00Z", "itemId": "uvKMPeOp", "itemSku": "0Q8DiWdg", "itemType": "jdoSMIxx"}], "name": "qxH9IoiZ", "odds": 0.8135950779146054, "type": "PROBABILITY_GROUP", "weight": 99}, {"lootBoxItems": [{"count": 94, "duration": 86, "endDate": "1984-04-25T00:00:00Z", "itemId": "2Ls55isB", "itemSku": "5d0Oyi7s", "itemType": "eMVWNTLk"}, {"count": 31, "duration": 22, "endDate": "1982-08-13T00:00:00Z", "itemId": "5c7KpFJj", "itemSku": "OLJt9Vxu", "itemType": "X3yLjIjH"}, {"count": 22, "duration": 20, "endDate": "1975-07-06T00:00:00Z", "itemId": "Rt4nMvXU", "itemSku": "KpGYIDd8", "itemType": "Bux1wyYn"}], "name": "2zhT14oX", "odds": 0.810860148762663, "type": "REWARD", "weight": 32}, {"lootBoxItems": [{"count": 0, "duration": 78, "endDate": "1983-03-25T00:00:00Z", "itemId": "t9gOreJL", "itemSku": "VmgqLZYG", "itemType": "WgNpTMH6"}, {"count": 29, "duration": 16, "endDate": "1997-10-14T00:00:00Z", "itemId": "EafSBOn3", "itemSku": "dG7oDrTz", "itemType": "UV0DJKG3"}, {"count": 39, "duration": 25, "endDate": "1980-08-04T00:00:00Z", "itemId": "5FFx590y", "itemSku": "AeRtns3m", "itemType": "yf2M2nsY"}], "name": "KZA9qJvB", "odds": 0.4980288077038588, "type": "REWARD", "weight": 62}], "rollFunction": "DEFAULT"}, "maxCount": 13, "maxCountPerUser": 17, "name": "2gg4avYR", "optionBoxConfig": {"boxItems": [{"count": 68, "duration": 75, "endDate": "1994-06-28T00:00:00Z", "itemId": "dmY81ZIn", "itemSku": "1y4uz0ak", "itemType": "1brPfpDx"}, {"count": 90, "duration": 22, "endDate": "1982-12-01T00:00:00Z", "itemId": "FYLDm6au", "itemSku": "1yudZAai", "itemType": "zEW6jHQR"}, {"count": 52, "duration": 12, "endDate": "1975-07-09T00:00:00Z", "itemId": "6YBEdmo7", "itemSku": "wZa9n95e", "itemType": "yY0IgU4W"}]}, "purchasable": false, "recurring": {"cycle": "WEEKLY", "fixedFreeDays": 68, "fixedTrialCycles": 72, "graceDays": 42}, "regionData": {"pRypCh2Y": [{"currencyCode": "LrpEZWwN", "currencyNamespace": "wYev4nRC", "currencyType": "REAL", "discountAmount": 67, "discountExpireAt": "1988-07-01T00:00:00Z", "discountPercentage": 23, "discountPurchaseAt": "1983-03-01T00:00:00Z", "expireAt": "1981-04-01T00:00:00Z", "price": 95, "purchaseAt": "1998-02-16T00:00:00Z", "trialPrice": 7}, {"currencyCode": "WQlwXjNb", "currencyNamespace": "VyHl94dG", "currencyType": "REAL", "discountAmount": 0, "discountExpireAt": "1994-06-11T00:00:00Z", "discountPercentage": 1, "discountPurchaseAt": "1998-01-29T00:00:00Z", "expireAt": "1980-08-21T00:00:00Z", "price": 3, "purchaseAt": "1981-02-02T00:00:00Z", "trialPrice": 24}, {"currencyCode": "jZdV6aSu", "currencyNamespace": "VgVCnGJp", "currencyType": "REAL", "discountAmount": 8, "discountExpireAt": "1978-05-29T00:00:00Z", "discountPercentage": 52, "discountPurchaseAt": "1981-01-18T00:00:00Z", "expireAt": "1995-08-05T00:00:00Z", "price": 71, "purchaseAt": "1971-01-16T00:00:00Z", "trialPrice": 82}], "RvRI5N2J": [{"currencyCode": "ieaWpukc", "currencyNamespace": "UsFblJDt", "currencyType": "REAL", "discountAmount": 56, "discountExpireAt": "1995-03-27T00:00:00Z", "discountPercentage": 49, "discountPurchaseAt": "1987-04-27T00:00:00Z", "expireAt": "1999-05-15T00:00:00Z", "price": 55, "purchaseAt": "1977-12-10T00:00:00Z", "trialPrice": 87}, {"currencyCode": "TN59JgV5", "currencyNamespace": "MA4DMHc2", "currencyType": "VIRTUAL", "discountAmount": 33, "discountExpireAt": "1977-04-15T00:00:00Z", "discountPercentage": 45, "discountPurchaseAt": "1978-12-27T00:00:00Z", "expireAt": "1983-04-08T00:00:00Z", "price": 17, "purchaseAt": "1979-09-28T00:00:00Z", "trialPrice": 74}, {"currencyCode": "vtT8qRXM", "currencyNamespace": "ziiak3vZ", "currencyType": "REAL", "discountAmount": 74, "discountExpireAt": "1987-09-08T00:00:00Z", "discountPercentage": 72, "discountPurchaseAt": "1981-08-13T00:00:00Z", "expireAt": "1983-06-09T00:00:00Z", "price": 48, "purchaseAt": "1971-08-29T00:00:00Z", "trialPrice": 84}], "m5uUmEwY": [{"currencyCode": "Yyo74Ah0", "currencyNamespace": "erEPZb5R", "currencyType": "REAL", "discountAmount": 31, "discountExpireAt": "1978-07-19T00:00:00Z", "discountPercentage": 59, "discountPurchaseAt": "1972-08-29T00:00:00Z", "expireAt": "1985-02-12T00:00:00Z", "price": 72, "purchaseAt": "1992-08-10T00:00:00Z", "trialPrice": 24}, {"currencyCode": "MbUAaetT", "currencyNamespace": "3LKIxLMs", "currencyType": "REAL", "discountAmount": 80, "discountExpireAt": "1985-08-24T00:00:00Z", "discountPercentage": 53, "discountPurchaseAt": "1990-02-11T00:00:00Z", "expireAt": "1976-10-06T00:00:00Z", "price": 77, "purchaseAt": "1999-10-29T00:00:00Z", "trialPrice": 7}, {"currencyCode": "9lGmolAK", "currencyNamespace": "W1zKylBy", "currencyType": "VIRTUAL", "discountAmount": 12, "discountExpireAt": "1989-11-02T00:00:00Z", "discountPercentage": 52, "discountPurchaseAt": "1978-10-16T00:00:00Z", "expireAt": "1991-10-12T00:00:00Z", "price": 79, "purchaseAt": "1994-11-13T00:00:00Z", "trialPrice": 75}]}, "saleConfig": {"currencyCode": "RvcyExBB", "price": 89}, "seasonType": "TIER", "sectionExclusive": true, "sellable": true, "sku": "vVL0tRuU", "stackable": false, "status": "INACTIVE", "tags": ["UbObHBfr", "MKtnPMcL", "VdaaQnHi"], "targetCurrencyCode": "3uMyuSos", "targetNamespace": "k2Ly9u4W", "thumbnailUrl": "u2Z2pop4", "useCount": 48}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateItem \
    --itemId 'yAPcDs8V' \
    --namespace $AB_NAMESPACE \
    --storeId 'zCCTMgmQ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 120 'UpdateItem' test.out

#- 121 DeleteItem
$CLI_EXE \
    --sn platform \
    --op DeleteItem \
    --itemId 'rB5166JG' \
    --namespace $AB_NAMESPACE \
    --force 'false' \
    --storeId 'iF1Jmual' \
    > test.out 2>&1
eval_tap $? 121 'DeleteItem' test.out

#- 122 AcquireItem
# body param: body
echo '{"count": 34, "orderNo": "jO4pkrM4"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op AcquireItem \
    --itemId 'dEK5GJtZ' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 122 'AcquireItem' test.out

#- 123 GetApp
$CLI_EXE \
    --sn platform \
    --op GetApp \
    --itemId 'xfAVS857' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --storeId 'm3y14SAz' \
    > test.out 2>&1
eval_tap $? 123 'GetApp' test.out

#- 124 UpdateApp
# body param: body
echo '{"carousel": [{"alt": "f3W67xtb", "previewUrl": "Yf3bW2ht", "thumbnailUrl": "jEjxipLt", "type": "image", "url": "vXMdFcmZ", "videoSource": "generic"}, {"alt": "uleDYnMA", "previewUrl": "A6SWpEaO", "thumbnailUrl": "XGqIoTTd", "type": "video", "url": "5q5bMYyt", "videoSource": "youtube"}, {"alt": "l8qebbjz", "previewUrl": "mph49ufr", "thumbnailUrl": "Ia3xK1Gt", "type": "image", "url": "Oahmx6RR", "videoSource": "generic"}], "developer": "msXL3fQM", "forumUrl": "6QN3l1fV", "genres": ["Indie", "Action", "Sports"], "localizations": {"3AW6ylEP": {"announcement": "rxpUMf3l", "slogan": "hXnA872H"}, "HZv9Rhop": {"announcement": "5AMqiGZ6", "slogan": "aXPkZKEU"}, "3nUQvjNC": {"announcement": "QV9B8uzR", "slogan": "w3XOyyX0"}}, "platformRequirements": {"fwmxVH9S": [{"additionals": "7c1tdqdI", "directXVersion": "wj57KlHb", "diskSpace": "k08tYwGL", "graphics": "FlzzpHBP", "label": "LgbKPMDq", "osVersion": "6lM53ZM5", "processor": "5PWTFjQw", "ram": "s1Lp9b57", "soundCard": "jDNiWbT9"}, {"additionals": "3pye32Ut", "directXVersion": "ziDi3Gxo", "diskSpace": "9Leghsk5", "graphics": "uNicW9by", "label": "zZu203xE", "osVersion": "PIitaMsF", "processor": "RDNC1sDR", "ram": "uaiM7NEg", "soundCard": "yx4jByBa"}, {"additionals": "TRMuv4eZ", "directXVersion": "1UPcTz8B", "diskSpace": "v7cAYvDE", "graphics": "3pKEaMZc", "label": "2fJtoR6w", "osVersion": "8MXeru0O", "processor": "mLg6Neac", "ram": "Hjj5LaGg", "soundCard": "i8L4l11Y"}], "nK5Texoe": [{"additionals": "fompmxBu", "directXVersion": "Om3A7tvX", "diskSpace": "AKfYTD6z", "graphics": "TvDpyXOg", "label": "Xwphef5r", "osVersion": "siPQswsS", "processor": "Rx5CcX3a", "ram": "sprcR0RG", "soundCard": "i2y4gPCS"}, {"additionals": "AjZrHzes", "directXVersion": "4xuV22Or", "diskSpace": "mPe8lMPR", "graphics": "2RmnRWVZ", "label": "ocuoPm0I", "osVersion": "EH4SFKwn", "processor": "dGBYx0oy", "ram": "LlZIFJow", "soundCard": "O9HXWbrC"}, {"additionals": "yD2EOSRM", "directXVersion": "jnNWY1Ae", "diskSpace": "XuH1vYYJ", "graphics": "Kygzolpl", "label": "fw9XgUg3", "osVersion": "qUSgxrSH", "processor": "xEbDloEW", "ram": "dIBNq9Bm", "soundCard": "5hFtfCGm"}], "TyHPMTi2": [{"additionals": "gPT79k3r", "directXVersion": "QflE8t9t", "diskSpace": "4x574J5U", "graphics": "GFwIy7xI", "label": "f9D6bSye", "osVersion": "HxTwm4ME", "processor": "3e3E3icZ", "ram": "xyl7kxDY", "soundCard": "jAGWNKwP"}, {"additionals": "UWFYHhRf", "directXVersion": "W2ZgOpIA", "diskSpace": "Ubid4gqf", "graphics": "oAewvynO", "label": "wL9lJSTi", "osVersion": "hK81r5PA", "processor": "WECmo1hT", "ram": "gW0OVsf8", "soundCard": "TqE01euv"}, {"additionals": "evMQpeLD", "directXVersion": "qn9jHeM2", "diskSpace": "kyhEyjcY", "graphics": "hFF6K40j", "label": "nZskG411", "osVersion": "ImRVtxNU", "processor": "gjpTTXLc", "ram": "ajSJHx3N", "soundCard": "yeZ3QLre"}]}, "platforms": ["Windows", "Windows", "Linux"], "players": ["Multi", "Multi", "LocalCoop"], "primaryGenre": "Simulation", "publisher": "K53acEck", "releaseDate": "1974-11-12T00:00:00Z", "websiteUrl": "B2DbjfT2"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateApp \
    --itemId 'cvFxIzeN' \
    --namespace $AB_NAMESPACE \
    --storeId '4RcVBZ0e' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 124 'UpdateApp' test.out

#- 125 DisableItem
$CLI_EXE \
    --sn platform \
    --op DisableItem \
    --itemId 'tQGOEFoR' \
    --namespace $AB_NAMESPACE \
    --storeId 'ElLoWuK6' \
    > test.out 2>&1
eval_tap $? 125 'DisableItem' test.out

#- 126 GetItemDynamicData
$CLI_EXE \
    --sn platform \
    --op GetItemDynamicData \
    --itemId 'V62luujD' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 126 'GetItemDynamicData' test.out

#- 127 EnableItem
$CLI_EXE \
    --sn platform \
    --op EnableItem \
    --itemId 'H1BNCAAX' \
    --namespace $AB_NAMESPACE \
    --storeId 'xBlxIOGl' \
    > test.out 2>&1
eval_tap $? 127 'EnableItem' test.out

#- 128 FeatureItem
$CLI_EXE \
    --sn platform \
    --op FeatureItem \
    --feature 'LMOz3JRa' \
    --itemId 'P1mYbwNj' \
    --namespace $AB_NAMESPACE \
    --storeId 'TPejUwFq' \
    > test.out 2>&1
eval_tap $? 128 'FeatureItem' test.out

#- 129 DefeatureItem
$CLI_EXE \
    --sn platform \
    --op DefeatureItem \
    --feature 'QAwhwP8r' \
    --itemId 'TUOUibV3' \
    --namespace $AB_NAMESPACE \
    --storeId 'jX9OrFzO' \
    > test.out 2>&1
eval_tap $? 129 'DefeatureItem' test.out

#- 130 GetLocaleItem
$CLI_EXE \
    --sn platform \
    --op GetLocaleItem \
    --itemId 'LmkwD9dY' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --language 'TRetJQL1' \
    --populateBundle 'true' \
    --region 'ADEzAs6X' \
    --storeId 'RMOsoh0m' \
    > test.out 2>&1
eval_tap $? 130 'GetLocaleItem' test.out

#- 131 UpdateItemPurchaseCondition
# body param: body
echo '{"purchaseCondition": {"conditionGroups": [{"operator": "or", "predicates": [{"anyOf": 24, "comparison": "isLessThan", "name": "gAneUPsb", "predicateType": "SeasonPassPredicate", "value": "mXLGH6Zk", "values": ["Pclqwc2w", "VJwjSClO", "5sdtTrkm"]}, {"anyOf": 98, "comparison": "isNot", "name": "wy50hloI", "predicateType": "SeasonPassPredicate", "value": "rbV1JTgn", "values": ["AE1wC4Cj", "VEDlezMc", "kRnrUnmH"]}, {"anyOf": 19, "comparison": "isLessThanOrEqual", "name": "2KGgXFHb", "predicateType": "EntitlementPredicate", "value": "zlOGtuBF", "values": ["kTH3sfxd", "AgQHxJGB", "mhS1yKPT"]}]}, {"operator": "and", "predicates": [{"anyOf": 71, "comparison": "is", "name": "FXIGMUBT", "predicateType": "SeasonPassPredicate", "value": "SpzYiE8f", "values": ["PbgRP9lF", "70Oztdmb", "hmrTZNYv"]}, {"anyOf": 30, "comparison": "isGreaterThanOrEqual", "name": "Ynrvc9U6", "predicateType": "EntitlementPredicate", "value": "yeR2Pojt", "values": ["3pCXKC2k", "FiLA6hYr", "ejckHuOd"]}, {"anyOf": 55, "comparison": "includes", "name": "Ll2iGgYu", "predicateType": "EntitlementPredicate", "value": "EY2apD4D", "values": ["QkN2MHWH", "TiKYcULm", "9ZzW3hkA"]}]}, {"operator": "or", "predicates": [{"anyOf": 90, "comparison": "is", "name": "8iz73oJ9", "predicateType": "EntitlementPredicate", "value": "PxoEWAzv", "values": ["9vekkg2u", "sXePON4Q", "ndK1VLcZ"]}, {"anyOf": 46, "comparison": "isGreaterThan", "name": "y9RbLozH", "predicateType": "EntitlementPredicate", "value": "3V4ABLeo", "values": ["jSB6rOHH", "nF0j62KP", "ViA6VKWe"]}, {"anyOf": 79, "comparison": "isGreaterThanOrEqual", "name": "RYLoqP15", "predicateType": "SeasonPassPredicate", "value": "HMzLJjh5", "values": ["2RUh4qSA", "Yb2TjRTg", "0DpdOuZ1"]}]}]}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateItemPurchaseCondition \
    --itemId 'Ql6Td8Zy' \
    --namespace $AB_NAMESPACE \
    --storeId '1cWA1LDW' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 131 'UpdateItemPurchaseCondition' test.out

#- 132 ReturnItem
# body param: body
echo '{"orderNo": "uoMCcBGa"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ReturnItem \
    --itemId 'yvK9XJH9' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 132 'ReturnItem' test.out

#- 133 QueryKeyGroups
$CLI_EXE \
    --sn platform \
    --op QueryKeyGroups \
    --namespace $AB_NAMESPACE \
    --limit '16' \
    --name 'WUNyqCrQ' \
    --offset '8' \
    --tag 'O6xEsKwh' \
    > test.out 2>&1
eval_tap $? 133 'QueryKeyGroups' test.out

#- 134 CreateKeyGroup
# body param: body
echo '{"description": "J1mfFGja", "name": "XHb1ItAU", "status": "INACTIVE", "tags": ["RZ9eCdgz", "G1POBKJe", "hX5XDKjS"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateKeyGroup \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 134 'CreateKeyGroup' test.out

#- 135 GetKeyGroupByBoothName
eval_tap 0 135 'GetKeyGroupByBoothName # SKIP deprecated' test.out

#- 136 GetKeyGroup
$CLI_EXE \
    --sn platform \
    --op GetKeyGroup \
    --keyGroupId 'sF1bZqgb' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 136 'GetKeyGroup' test.out

#- 137 UpdateKeyGroup
# body param: body
echo '{"description": "nNSwVIVg", "name": "KfVpE8tF", "status": "INACTIVE", "tags": ["mJub3RS8", "YxpdBotE", "0ss7ErA8"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateKeyGroup \
    --keyGroupId 'tM41qs9y' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 137 'UpdateKeyGroup' test.out

#- 138 GetKeyGroupDynamic
$CLI_EXE \
    --sn platform \
    --op GetKeyGroupDynamic \
    --keyGroupId '4qDlWrFd' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 138 'GetKeyGroupDynamic' test.out

#- 139 ListKeys
$CLI_EXE \
    --sn platform \
    --op ListKeys \
    --keyGroupId 'c91pHqSv' \
    --namespace $AB_NAMESPACE \
    --limit '60' \
    --offset '78' \
    --status 'ACTIVE' \
    > test.out 2>&1
eval_tap $? 139 'ListKeys' test.out

#- 140 UploadKeys
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UploadKeys \
    --keyGroupId 'ctsEj6NQ' \
    --namespace $AB_NAMESPACE \
    --upload file $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 140 'UploadKeys' test.out

#- 141 QueryOrders
$CLI_EXE \
    --sn platform \
    --op QueryOrders \
    --namespace $AB_NAMESPACE \
    --endTime 'lirk3Dlc' \
    --limit '89' \
    --offset '14' \
    --orderNos '["Vi4ZZ8vy", "Ll5vAd8f", "JxtQVj1q"]' \
    --sortBy 'z594Cx4H' \
    --startTime 'udsS5tjw' \
    --status 'CHARGEBACK_REVERSED' \
    --withTotal 'true' \
    > test.out 2>&1
eval_tap $? 141 'QueryOrders' test.out

#- 142 GetOrderStatistics
$CLI_EXE \
    --sn platform \
    --op GetOrderStatistics \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 142 'GetOrderStatistics' test.out

#- 143 GetOrder
$CLI_EXE \
    --sn platform \
    --op GetOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'cd2uU6ub' \
    > test.out 2>&1
eval_tap $? 143 'GetOrder' test.out

#- 144 RefundOrder
# body param: body
echo '{"description": "YeCryguu"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RefundOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'Ib7bRRq8' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 144 'RefundOrder' test.out

#- 145 GetPaymentCallbackConfig
$CLI_EXE \
    --sn platform \
    --op GetPaymentCallbackConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 145 'GetPaymentCallbackConfig' test.out

#- 146 UpdatePaymentCallbackConfig
# body param: body
echo '{"dryRun": true, "notifyUrl": "eQf1D6f5", "privateKey": "ru93h6Mi"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePaymentCallbackConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 146 'UpdatePaymentCallbackConfig' test.out

#- 147 QueryPaymentNotifications
$CLI_EXE \
    --sn platform \
    --op QueryPaymentNotifications \
    --namespace $AB_NAMESPACE \
    --endDate '0UPfNlYj' \
    --externalId 'wmAkuVh9' \
    --limit '33' \
    --notificationSource 'STRIPE' \
    --notificationType 't2SizV7L' \
    --offset '24' \
    --paymentOrderNo 'RroMbow9' \
    --startDate 'NVgaUIbi' \
    --status 'WARN' \
    > test.out 2>&1
eval_tap $? 147 'QueryPaymentNotifications' test.out

#- 148 QueryPaymentOrders
$CLI_EXE \
    --sn platform \
    --op QueryPaymentOrders \
    --namespace $AB_NAMESPACE \
    --channel 'EXTERNAL' \
    --extTxId 'QNRToQJj' \
    --limit '60' \
    --offset '4' \
    --status 'REQUEST_FOR_INFORMATION' \
    > test.out 2>&1
eval_tap $? 148 'QueryPaymentOrders' test.out

#- 149 CreatePaymentOrderByDedicated
# body param: body
echo '{"currencyCode": "furNhX6b", "currencyNamespace": "bCgZMTJN", "customParameters": {"pMfY7kQY": {}, "aApl4hNX": {}, "a2gtTmk8": {}}, "description": "mEPLfvGG", "extOrderNo": "XKp69otz", "extUserId": "VFOC8Gab", "itemType": "COINS", "language": "HpB", "metadata": {"s4w3jtis": "SDdoxXUt", "KgVbDqWW": "vo2QzDct", "I3ilgKdN": "vPx0FLgr"}, "notifyUrl": "gkP748B7", "omitNotification": true, "platform": "ulVForDY", "price": 43, "recurringPaymentOrderNo": "XDKQtjwW", "region": "4nV2ESGv", "returnUrl": "cGvPUPCa", "sandbox": false, "sku": "ZZOAHj5p", "subscriptionId": "PuGBgL0S", "targetNamespace": "9xosdsJi", "targetUserId": "Gd4ColAG", "title": "dMr7UOjF"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreatePaymentOrderByDedicated \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 149 'CreatePaymentOrderByDedicated' test.out

#- 150 ListExtOrderNoByExtTxId
$CLI_EXE \
    --sn platform \
    --op ListExtOrderNoByExtTxId \
    --namespace $AB_NAMESPACE \
    --extTxId 'oFmKbIo8' \
    > test.out 2>&1
eval_tap $? 150 'ListExtOrderNoByExtTxId' test.out

#- 151 GetPaymentOrder
$CLI_EXE \
    --sn platform \
    --op GetPaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'IarJeJ5p' \
    > test.out 2>&1
eval_tap $? 151 'GetPaymentOrder' test.out

#- 152 ChargePaymentOrder
# body param: body
echo '{"extTxId": "JnVaV9N9", "paymentMethod": "M4l7fefA", "paymentProvider": "XSOLLA"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ChargePaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'n1wHNxqH' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 152 'ChargePaymentOrder' test.out

#- 153 RefundPaymentOrderByDedicated
# body param: body
echo '{"description": "G6Tae33t"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RefundPaymentOrderByDedicated \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'acsYsiaG' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 153 'RefundPaymentOrderByDedicated' test.out

#- 154 SimulatePaymentOrderNotification
# body param: body
echo '{"amount": 96, "currencyCode": "xA35IxdW", "notifyType": "CHARGE", "paymentProvider": "ADYEN", "salesTax": 20, "vat": 53}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SimulatePaymentOrderNotification \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo '5InjwyeD' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 154 'SimulatePaymentOrderNotification' test.out

#- 155 GetPaymentOrderChargeStatus
$CLI_EXE \
    --sn platform \
    --op GetPaymentOrderChargeStatus \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'GVQF2ZaC' \
    > test.out 2>&1
eval_tap $? 155 'GetPaymentOrderChargeStatus' test.out

#- 156 GetPlatformEntitlementConfig
$CLI_EXE \
    --sn platform \
    --op GetPlatformEntitlementConfig \
    --namespace $AB_NAMESPACE \
    --platform 'Other' \
    > test.out 2>&1
eval_tap $? 156 'GetPlatformEntitlementConfig' test.out

#- 157 UpdatePlatformEntitlementConfig
# body param: body
echo '{"allowedPlatformOrigins": ["Steam", "Playstation", "GooglePlay"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePlatformEntitlementConfig \
    --namespace $AB_NAMESPACE \
    --platform 'Xbox' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 157 'UpdatePlatformEntitlementConfig' test.out

#- 158 GetPlatformWalletConfig
$CLI_EXE \
    --sn platform \
    --op GetPlatformWalletConfig \
    --namespace $AB_NAMESPACE \
    --platform 'IOS' \
    > test.out 2>&1
eval_tap $? 158 'GetPlatformWalletConfig' test.out

#- 159 UpdatePlatformWalletConfig
# body param: body
echo '{"allowedBalanceOrigins": ["Xbox", "System", "Twitch"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePlatformWalletConfig \
    --namespace $AB_NAMESPACE \
    --platform 'Other' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 159 'UpdatePlatformWalletConfig' test.out

#- 160 ResetPlatformWalletConfig
$CLI_EXE \
    --sn platform \
    --op ResetPlatformWalletConfig \
    --namespace $AB_NAMESPACE \
    --platform 'Other' \
    > test.out 2>&1
eval_tap $? 160 'ResetPlatformWalletConfig' test.out

#- 161 GetRevocationConfig
$CLI_EXE \
    --sn platform \
    --op GetRevocationConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 161 'GetRevocationConfig' test.out

#- 162 UpdateRevocationConfig
# body param: body
echo '{"entitlement": {"consumable": {"enabled": true, "strategy": "REVOKE_OR_REPORT"}, "durable": {"enabled": true, "strategy": "REVOKE_OR_REPORT"}}, "wallet": {"enabled": true, "strategy": "ALWAYS_REVOKE"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateRevocationConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 162 'UpdateRevocationConfig' test.out

#- 163 DeleteRevocationConfig
$CLI_EXE \
    --sn platform \
    --op DeleteRevocationConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 163 'DeleteRevocationConfig' test.out

#- 164 QueryRevocationHistories
$CLI_EXE \
    --sn platform \
    --op QueryRevocationHistories \
    --namespace $AB_NAMESPACE \
    --endTime 'QOLfvYXC' \
    --limit '41' \
    --offset '83' \
    --source 'ORDER' \
    --startTime 'sXPeLqiN' \
    --status 'FAIL' \
    --transactionId 'Ko6vZb1U' \
    --userId 'XYS4uOa5' \
    > test.out 2>&1
eval_tap $? 164 'QueryRevocationHistories' test.out

#- 165 GetRevocationPluginConfig
$CLI_EXE \
    --sn platform \
    --op GetRevocationPluginConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 165 'GetRevocationPluginConfig' test.out

#- 166 UpdateRevocationPluginConfig
# body param: body
echo '{"appConfig": {"appName": "0EDPivKN"}, "customConfig": {"connectionType": "TLS", "grpcServerAddress": "PkJI3fZ2"}, "extendType": "CUSTOM"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateRevocationPluginConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 166 'UpdateRevocationPluginConfig' test.out

#- 167 DeleteRevocationPluginConfig
$CLI_EXE \
    --sn platform \
    --op DeleteRevocationPluginConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 167 'DeleteRevocationPluginConfig' test.out

#- 168 UploadRevocationPluginConfigCert
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UploadRevocationPluginConfigCert \
    --namespace $AB_NAMESPACE \
    --upload file $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 168 'UploadRevocationPluginConfigCert' test.out

#- 169 CreateReward
# body param: body
echo '{"description": "Llg8c6e4", "eventTopic": "ox6ssyLm", "maxAwarded": 80, "maxAwardedPerUser": 13, "namespaceExpression": "ssI1VH37", "rewardCode": "DexefZxA", "rewardConditions": [{"condition": "ZIp3H2GM", "conditionName": "9b7Icb9l", "eventName": "SJM95X3A", "rewardItems": [{"duration": 59, "endDate": "1998-02-25T00:00:00Z", "identityType": "ITEM_SKU", "itemId": "FPx0ExvD", "quantity": 37, "sku": "SqHUy1rG"}, {"duration": 29, "endDate": "1972-03-28T00:00:00Z", "identityType": "ITEM_ID", "itemId": "FI2FbfMY", "quantity": 96, "sku": "zlO0G1zx"}, {"duration": 17, "endDate": "1985-05-25T00:00:00Z", "identityType": "ITEM_SKU", "itemId": "TdE41jWG", "quantity": 14, "sku": "dhNhnIMR"}]}, {"condition": "PkSPJEFo", "conditionName": "GWxwm1FB", "eventName": "yBVyZsG1", "rewardItems": [{"duration": 84, "endDate": "1978-06-15T00:00:00Z", "identityType": "ITEM_ID", "itemId": "jbgFbmcH", "quantity": 96, "sku": "AzyRf47A"}, {"duration": 1, "endDate": "1982-07-23T00:00:00Z", "identityType": "ITEM_ID", "itemId": "QBRMwEZP", "quantity": 72, "sku": "rTgKodvi"}, {"duration": 91, "endDate": "1972-06-12T00:00:00Z", "identityType": "ITEM_ID", "itemId": "LNs2by9x", "quantity": 70, "sku": "XCUw5hIY"}]}, {"condition": "u6cZdVuT", "conditionName": "rht9khQI", "eventName": "fGBfUQF3", "rewardItems": [{"duration": 88, "endDate": "1991-10-13T00:00:00Z", "identityType": "ITEM_SKU", "itemId": "nJIfC6P1", "quantity": 54, "sku": "KVfsRo9D"}, {"duration": 49, "endDate": "1988-10-26T00:00:00Z", "identityType": "ITEM_SKU", "itemId": "XtM48ZsC", "quantity": 80, "sku": "2A8Hb9ga"}, {"duration": 16, "endDate": "1988-11-05T00:00:00Z", "identityType": "ITEM_SKU", "itemId": "1bh1vxVe", "quantity": 18, "sku": "GajZuuT0"}]}], "userIdExpression": "vaqZdKgw"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateReward \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 169 'CreateReward' test.out

#- 170 QueryRewards
$CLI_EXE \
    --sn platform \
    --op QueryRewards \
    --namespace $AB_NAMESPACE \
    --eventTopic 'DXbAjBtI' \
    --limit '5' \
    --offset '68' \
    --sortBy '["namespace:asc", "namespace", "rewardCode:asc"]' \
    > test.out 2>&1
eval_tap $? 170 'QueryRewards' test.out

#- 171 ExportRewards
$CLI_EXE \
    --sn platform \
    --op ExportRewards \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 171 'ExportRewards' test.out

#- 172 ImportRewards
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op ImportRewards \
    --namespace $AB_NAMESPACE \
    --replaceExisting 'true' \
    --upload file $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 172 'ImportRewards' test.out

#- 173 GetReward
$CLI_EXE \
    --sn platform \
    --op GetReward \
    --namespace $AB_NAMESPACE \
    --rewardId 'rrbJ8rFe' \
    > test.out 2>&1
eval_tap $? 173 'GetReward' test.out

#- 174 UpdateReward
# body param: body
echo '{"description": "XMhqKYvb", "eventTopic": "POPN8LFG", "maxAwarded": 83, "maxAwardedPerUser": 90, "namespaceExpression": "J7kfHdxA", "rewardCode": "omavDKN4", "rewardConditions": [{"condition": "suDIzVNy", "conditionName": "L8ZTAlAt", "eventName": "RspoKt2z", "rewardItems": [{"duration": 84, "endDate": "1993-07-14T00:00:00Z", "identityType": "ITEM_ID", "itemId": "d0UQ2BVe", "quantity": 69, "sku": "NxtnhtVA"}, {"duration": 18, "endDate": "1996-03-19T00:00:00Z", "identityType": "ITEM_SKU", "itemId": "Q3NqXmm9", "quantity": 75, "sku": "7m0dS2YM"}, {"duration": 24, "endDate": "1990-03-25T00:00:00Z", "identityType": "ITEM_ID", "itemId": "wgcFTgGX", "quantity": 36, "sku": "tzntpATK"}]}, {"condition": "MRDasQkT", "conditionName": "3cv9fOGd", "eventName": "B9ckMdbh", "rewardItems": [{"duration": 66, "endDate": "1983-12-20T00:00:00Z", "identityType": "ITEM_ID", "itemId": "vYpurwyA", "quantity": 0, "sku": "kk2kpGvZ"}, {"duration": 6, "endDate": "1980-10-25T00:00:00Z", "identityType": "ITEM_SKU", "itemId": "tPpN3RRQ", "quantity": 1, "sku": "nLXnu1IU"}, {"duration": 78, "endDate": "1994-11-04T00:00:00Z", "identityType": "ITEM_SKU", "itemId": "5qp845Ae", "quantity": 68, "sku": "uk14BkRF"}]}, {"condition": "AKLXgtNe", "conditionName": "TUD5MFat", "eventName": "1HeNPPki", "rewardItems": [{"duration": 12, "endDate": "1998-05-16T00:00:00Z", "identityType": "ITEM_SKU", "itemId": "Ss2RiE4m", "quantity": 27, "sku": "JVDFNrT6"}, {"duration": 84, "endDate": "1987-01-27T00:00:00Z", "identityType": "ITEM_ID", "itemId": "N3Uw7wSN", "quantity": 22, "sku": "glBpFsK2"}, {"duration": 84, "endDate": "1992-12-20T00:00:00Z", "identityType": "ITEM_ID", "itemId": "pMIXu2fh", "quantity": 72, "sku": "KjfZhwq0"}]}], "userIdExpression": "gO38E0h3"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateReward \
    --namespace $AB_NAMESPACE \
    --rewardId 'lncWKUmM' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 174 'UpdateReward' test.out

#- 175 DeleteReward
$CLI_EXE \
    --sn platform \
    --op DeleteReward \
    --namespace $AB_NAMESPACE \
    --rewardId 'Tntw5Iuh' \
    > test.out 2>&1
eval_tap $? 175 'DeleteReward' test.out

#- 176 CheckEventCondition
# body param: body
echo '{"payload": {"jSdfFpiq": {}, "5i01P2JC": {}, "Cw5oSdwh": {}}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CheckEventCondition \
    --namespace $AB_NAMESPACE \
    --rewardId 'Qcm6DzYO' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 176 'CheckEventCondition' test.out

#- 177 DeleteRewardConditionRecord
# body param: body
echo '{"conditionName": "9MOij3lg", "userId": "OrcLsoa3"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op DeleteRewardConditionRecord \
    --namespace $AB_NAMESPACE \
    --rewardId 'Gu44C8lr' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 177 'DeleteRewardConditionRecord' test.out

#- 178 QuerySections
$CLI_EXE \
    --sn platform \
    --op QuerySections \
    --namespace $AB_NAMESPACE \
    --end 'GfDeVcY8' \
    --limit '57' \
    --offset '42' \
    --start 'DeUpAzIc' \
    --storeId 'hd4KoItD' \
    --viewId 'hPnqxigY' \
    > test.out 2>&1
eval_tap $? 178 'QuerySections' test.out

#- 179 CreateSection
# body param: body
echo '{"active": true, "displayOrder": 91, "endDate": "1982-05-30T00:00:00Z", "ext": {"A5Q8pZC5": {}, "BhlpBwvs": {}, "3yEpN3d2": {}}, "fixedPeriodRotationConfig": {"backfillType": "CUSTOM", "duration": 67, "itemCount": 68, "rule": "SEQUENCE"}, "items": [{"id": "VrH5xnVq", "sku": "zUunigGR"}, {"id": "BDClByNZ", "sku": "hcY7XBQN"}, {"id": "RV2wu0vI", "sku": "Em3UWmfp"}], "localizations": {"IQmZWR8J": {"description": "9vmfHdyp", "localExt": {"1jp5TLpo": {}, "mBHeeC5V": {}, "IUf2egk8": {}}, "longDescription": "J4Ovju6t", "title": "jTeMzoJh"}, "YBmksEHw": {"description": "3Apr9KXd", "localExt": {"22nivUaD": {}, "PPdciRjq": {}, "9dkINpGW": {}}, "longDescription": "5Mo9sexD", "title": "cwDgPUWe"}, "fVY7SXm7": {"description": "qJUMCW9A", "localExt": {"muu9QZ2b": {}, "lSPocmkt": {}, "AMELYzHA": {}}, "longDescription": "paUIqp2k", "title": "CrHojtEZ"}}, "name": "WWz0MlrE", "rotationType": "CUSTOM", "startDate": "1994-11-06T00:00:00Z", "viewId": "Hui0ktVV"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateSection \
    --namespace $AB_NAMESPACE \
    --storeId 'cLR9vyIl' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 179 'CreateSection' test.out

#- 180 PurgeExpiredSection
$CLI_EXE \
    --sn platform \
    --op PurgeExpiredSection \
    --namespace $AB_NAMESPACE \
    --storeId 'kByGRQil' \
    > test.out 2>&1
eval_tap $? 180 'PurgeExpiredSection' test.out

#- 181 GetSection
$CLI_EXE \
    --sn platform \
    --op GetSection \
    --namespace $AB_NAMESPACE \
    --sectionId 'ekj3hLU4' \
    --storeId 'X0bIu0lA' \
    > test.out 2>&1
eval_tap $? 181 'GetSection' test.out

#- 182 UpdateSection
# body param: body
echo '{"active": true, "displayOrder": 94, "endDate": "1973-09-09T00:00:00Z", "ext": {"214mb79a": {}, "7vLtIahR": {}, "TbG4aaQn": {}}, "fixedPeriodRotationConfig": {"backfillType": "NONE", "duration": 10, "itemCount": 84, "rule": "SEQUENCE"}, "items": [{"id": "G0HlEeg0", "sku": "xZupVJ5U"}, {"id": "wHvroOX0", "sku": "G9a8yJ28"}, {"id": "m5Hju1ru", "sku": "55w9cpBT"}], "localizations": {"VWYrjV8N": {"description": "4z9DGfDV", "localExt": {"PodWikkp": {}, "7y6TtRsq": {}, "MK2yEpW6": {}}, "longDescription": "PbccAPJu", "title": "rTNkDO4G"}, "n9YzRRUE": {"description": "c0vntUJm", "localExt": {"sXH2lJLw": {}, "5eWdh8gn": {}, "8m8qZSkt": {}}, "longDescription": "yOFKuGnf", "title": "5c4NHFLa"}, "06KgoV4j": {"description": "C5Zcx83n", "localExt": {"4OO2aVgi": {}, "DxGbOlTb": {}, "dRpSOai6": {}}, "longDescription": "Ps0r8zOT", "title": "MdtKYk7X"}}, "name": "ScPtZLTK", "rotationType": "NONE", "startDate": "1979-05-04T00:00:00Z", "viewId": "mvI63uXS"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateSection \
    --namespace $AB_NAMESPACE \
    --sectionId 'sNsW424r' \
    --storeId '0gPxBcFY' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 182 'UpdateSection' test.out

#- 183 DeleteSection
$CLI_EXE \
    --sn platform \
    --op DeleteSection \
    --namespace $AB_NAMESPACE \
    --sectionId 'UfNNzn6C' \
    --storeId 'jig4hGuO' \
    > test.out 2>&1
eval_tap $? 183 'DeleteSection' test.out

#- 184 ListStores
$CLI_EXE \
    --sn platform \
    --op ListStores \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 184 'ListStores' test.out

#- 185 CreateStore
# body param: body
echo '{"defaultLanguage": "KiSxgpHD", "defaultRegion": "jkyLydPP", "description": "AsOGJZhH", "supportedLanguages": ["1sChDVNB", "h4liWvwO", "ROnd7gXG"], "supportedRegions": ["uRrhGFLQ", "1WLUpK9V", "vs0X44QY"], "title": "kmAOcmKc"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateStore \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 185 'CreateStore' test.out

#- 186 GetCatalogDefinition
$CLI_EXE \
    --sn platform \
    --op GetCatalogDefinition \
    --namespace $AB_NAMESPACE \
    --catalogType 'ITEM' \
    > test.out 2>&1
eval_tap $? 186 'GetCatalogDefinition' test.out

#- 187 DownloadCSVTemplates
$CLI_EXE \
    --sn platform \
    --op DownloadCSVTemplates \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 187 'DownloadCSVTemplates' test.out

#- 188 ExportStoreByCSV
# body param: body
echo '{"catalogType": "APP", "fieldsToBeIncluded": ["IgcC0x9Q", "c8IcYn2Y", "3ObbO3ei"], "idsToBeExported": ["wUodC0HS", "oLw4LgZj", "VWIUPbQ3"], "storeId": "LMIRgdDX"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ExportStoreByCSV \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 188 'ExportStoreByCSV' test.out

#- 189 ImportStore
eval_tap 0 189 'ImportStore # SKIP deprecated' test.out

#- 190 GetPublishedStore
$CLI_EXE \
    --sn platform \
    --op GetPublishedStore \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 190 'GetPublishedStore' test.out

#- 191 DeletePublishedStore
$CLI_EXE \
    --sn platform \
    --op DeletePublishedStore \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 191 'DeletePublishedStore' test.out

#- 192 GetPublishedStoreBackup
$CLI_EXE \
    --sn platform \
    --op GetPublishedStoreBackup \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 192 'GetPublishedStoreBackup' test.out

#- 193 RollbackPublishedStore
$CLI_EXE \
    --sn platform \
    --op RollbackPublishedStore \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 193 'RollbackPublishedStore' test.out

#- 194 GetStore
$CLI_EXE \
    --sn platform \
    --op GetStore \
    --namespace $AB_NAMESPACE \
    --storeId 'BP0GExjL' \
    > test.out 2>&1
eval_tap $? 194 'GetStore' test.out

#- 195 UpdateStore
# body param: body
echo '{"defaultLanguage": "iYpAYiif", "defaultRegion": "efbmHrtn", "description": "XClsaHQX", "supportedLanguages": ["pNnVuOZQ", "i6teSGpc", "GXYtXgFN"], "supportedRegions": ["2kxPqtcR", "VrcmiaAs", "ytzNY2oC"], "title": "bZ6S4O2C"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateStore \
    --namespace $AB_NAMESPACE \
    --storeId 'jcxE7nqP' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 195 'UpdateStore' test.out

#- 196 DeleteStore
$CLI_EXE \
    --sn platform \
    --op DeleteStore \
    --namespace $AB_NAMESPACE \
    --storeId 'ilB3VjaB' \
    > test.out 2>&1
eval_tap $? 196 'DeleteStore' test.out

#- 197 QueryChanges
$CLI_EXE \
    --sn platform \
    --op QueryChanges \
    --namespace $AB_NAMESPACE \
    --storeId 'tIi5lqdr' \
    --action 'CREATE' \
    --itemSku 'ccsGE1TW' \
    --itemType 'CODE' \
    --limit '24' \
    --offset '35' \
    --selected 'false' \
    --sortBy '["updatedAt:asc", "createdAt"]' \
    --status 'PUBLISHED' \
    --type 'STORE' \
    --updatedAtEnd 'V20g3a8x' \
    --updatedAtStart 'p3cK0yzb' \
    --withTotal 'false' \
    > test.out 2>&1
eval_tap $? 197 'QueryChanges' test.out

#- 198 PublishAll
$CLI_EXE \
    --sn platform \
    --op PublishAll \
    --namespace $AB_NAMESPACE \
    --storeId '2jORhUsu' \
    > test.out 2>&1
eval_tap $? 198 'PublishAll' test.out

#- 199 PublishSelected
$CLI_EXE \
    --sn platform \
    --op PublishSelected \
    --namespace $AB_NAMESPACE \
    --storeId 'LzntNwuB' \
    > test.out 2>&1
eval_tap $? 199 'PublishSelected' test.out

#- 200 SelectAllRecords
$CLI_EXE \
    --sn platform \
    --op SelectAllRecords \
    --namespace $AB_NAMESPACE \
    --storeId '0CAZTRvX' \
    > test.out 2>&1
eval_tap $? 200 'SelectAllRecords' test.out

#- 201 SelectAllRecordsByCriteria
$CLI_EXE \
    --sn platform \
    --op SelectAllRecordsByCriteria \
    --namespace $AB_NAMESPACE \
    --storeId 'JcxT4LvC' \
    --action 'DELETE' \
    --itemSku 'jbo6okAF' \
    --itemType 'BUNDLE' \
    --selected 'false' \
    --type 'SECTION' \
    --updatedAtEnd 'YuQimyyK' \
    --updatedAtStart 'GK09XZbM' \
    > test.out 2>&1
eval_tap $? 201 'SelectAllRecordsByCriteria' test.out

#- 202 GetStatistic
$CLI_EXE \
    --sn platform \
    --op GetStatistic \
    --namespace $AB_NAMESPACE \
    --storeId 'eABDgFHr' \
    --action 'CREATE' \
    --itemSku 'QU5agzFm' \
    --itemType 'LOOTBOX' \
    --type 'ITEM' \
    --updatedAtEnd '0eon8kQm' \
    --updatedAtStart 'LpIy7rNS' \
    > test.out 2>&1
eval_tap $? 202 'GetStatistic' test.out

#- 203 UnselectAllRecords
$CLI_EXE \
    --sn platform \
    --op UnselectAllRecords \
    --namespace $AB_NAMESPACE \
    --storeId 'dOnvFpBR' \
    > test.out 2>&1
eval_tap $? 203 'UnselectAllRecords' test.out

#- 204 SelectRecord
$CLI_EXE \
    --sn platform \
    --op SelectRecord \
    --changeId 'oNtdFOX2' \
    --namespace $AB_NAMESPACE \
    --storeId 'NgYDJyKx' \
    > test.out 2>&1
eval_tap $? 204 'SelectRecord' test.out

#- 205 UnselectRecord
$CLI_EXE \
    --sn platform \
    --op UnselectRecord \
    --changeId 'B5l3KlPI' \
    --namespace $AB_NAMESPACE \
    --storeId '8wJGZIhK' \
    > test.out 2>&1
eval_tap $? 205 'UnselectRecord' test.out

#- 206 CloneStore
$CLI_EXE \
    --sn platform \
    --op CloneStore \
    --namespace $AB_NAMESPACE \
    --storeId 'ypTnSxBQ' \
    --targetStoreId 'gXqME716' \
    > test.out 2>&1
eval_tap $? 206 'CloneStore' test.out

#- 207 ExportStore
eval_tap 0 207 'ExportStore # SKIP deprecated' test.out

#- 208 QueryImportHistory
$CLI_EXE \
    --sn platform \
    --op QueryImportHistory \
    --namespace $AB_NAMESPACE \
    --storeId '8CiwFnnf' \
    --end 'lOvEj2df' \
    --limit '22' \
    --offset '12' \
    --sortBy 'HfZl87q0' \
    --start 'A7mdZoYp' \
    --success 'false' \
    > test.out 2>&1
eval_tap $? 208 'QueryImportHistory' test.out

#- 209 ImportStoreByCSV
# form data upload: category
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
# form data upload: display
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
# form data upload: item
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
# form data upload: section
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op ImportStoreByCSV \
    --namespace $AB_NAMESPACE \
    --storeId '7zhoxcRl' \
    --upload category $TEMP_FILE_UPLOAD \
    --upload display $TEMP_FILE_UPLOAD \
    --upload item $TEMP_FILE_UPLOAD \
    --notes 'qmn8xwho' \
    --upload section $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 209 'ImportStoreByCSV' test.out

#- 210 QuerySubscriptions
$CLI_EXE \
    --sn platform \
    --op QuerySubscriptions \
    --namespace $AB_NAMESPACE \
    --chargeStatus 'RECURRING_CHARGING' \
    --itemId 'Lvbm9pUO' \
    --limit '71' \
    --offset '31' \
    --sku '30GkFLlB' \
    --status 'ACTIVE' \
    --subscribedBy 'PLATFORM' \
    --userId 'EpoSv6br' \
    > test.out 2>&1
eval_tap $? 210 'QuerySubscriptions' test.out

#- 211 RecurringChargeSubscription
$CLI_EXE \
    --sn platform \
    --op RecurringChargeSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'bvwix3ZI' \
    > test.out 2>&1
eval_tap $? 211 'RecurringChargeSubscription' test.out

#- 212 GetTicketDynamic
$CLI_EXE \
    --sn platform \
    --op GetTicketDynamic \
    --boothName '4LoCNFQh' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 212 'GetTicketDynamic' test.out

#- 213 DecreaseTicketSale
# body param: body
echo '{"orderNo": "SPyGD4Pq"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op DecreaseTicketSale \
    --boothName 'VLmfRvXp' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 213 'DecreaseTicketSale' test.out

#- 214 GetTicketBoothID
$CLI_EXE \
    --sn platform \
    --op GetTicketBoothID \
    --boothName 'nMyLfQcS' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 214 'GetTicketBoothID' test.out

#- 215 IncreaseTicketSale
# body param: body
echo '{"count": 33, "orderNo": "i9mY4Cgw"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op IncreaseTicketSale \
    --boothName 'JoJu4Su8' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 215 'IncreaseTicketSale' test.out

#- 216 Commit
# body param: body
echo '{"actions": [{"operations": [{"creditPayload": {"balanceOrigin": "Steam", "count": 51, "currencyCode": "0LbIFnnu", "expireAt": "1991-07-30T00:00:00Z"}, "debitPayload": {"count": 41, "currencyCode": "nwVw21k8", "walletPlatform": "Steam"}, "fulFillItemPayload": {"count": 16, "entitlementCollectionId": "Q3DRMMqa", "entitlementOrigin": "System", "itemIdentity": "Qv4gB2WA", "itemIdentityType": "ITEM_SKU"}, "revokeEntitlementPayload": {"count": 28, "entitlementId": "M2oJbZei"}, "type": "CREDIT_WALLET"}, {"creditPayload": {"balanceOrigin": "IOS", "count": 65, "currencyCode": "EPKCVSys", "expireAt": "1973-02-02T00:00:00Z"}, "debitPayload": {"count": 54, "currencyCode": "FfCH3nkw", "walletPlatform": "IOS"}, "fulFillItemPayload": {"count": 73, "entitlementCollectionId": "ALy9faUf", "entitlementOrigin": "Steam", "itemIdentity": "ucBRhu7L", "itemIdentityType": "ITEM_SKU"}, "revokeEntitlementPayload": {"count": 2, "entitlementId": "zQjrv7KV"}, "type": "CREDIT_WALLET"}, {"creditPayload": {"balanceOrigin": "GooglePlay", "count": 8, "currencyCode": "4G1abeSU", "expireAt": "1994-01-23T00:00:00Z"}, "debitPayload": {"count": 64, "currencyCode": "DmsrglTK", "walletPlatform": "Oculus"}, "fulFillItemPayload": {"count": 48, "entitlementCollectionId": "8cXxI4O4", "entitlementOrigin": "Other", "itemIdentity": "PAwItwcS", "itemIdentityType": "ITEM_ID"}, "revokeEntitlementPayload": {"count": 65, "entitlementId": "EEui0sWj"}, "type": "REVOKE_ENTITLEMENT"}], "userId": "kspbKw1x"}, {"operations": [{"creditPayload": {"balanceOrigin": "GooglePlay", "count": 63, "currencyCode": "Al7FHsrs", "expireAt": "1971-06-11T00:00:00Z"}, "debitPayload": {"count": 6, "currencyCode": "ruEsmd7X", "walletPlatform": "GooglePlay"}, "fulFillItemPayload": {"count": 82, "entitlementCollectionId": "zWuGcCdU", "entitlementOrigin": "Other", "itemIdentity": "1qdOfELn", "itemIdentityType": "ITEM_SKU"}, "revokeEntitlementPayload": {"count": 61, "entitlementId": "FEYujruj"}, "type": "CREDIT_WALLET"}, {"creditPayload": {"balanceOrigin": "Other", "count": 64, "currencyCode": "ZEhUCcEU", "expireAt": "1992-01-29T00:00:00Z"}, "debitPayload": {"count": 1, "currencyCode": "1inasyT9", "walletPlatform": "GooglePlay"}, "fulFillItemPayload": {"count": 41, "entitlementCollectionId": "Efs5xrGy", "entitlementOrigin": "Twitch", "itemIdentity": "n38uPMFl", "itemIdentityType": "ITEM_ID"}, "revokeEntitlementPayload": {"count": 80, "entitlementId": "9OMJxyLf"}, "type": "REVOKE_ENTITLEMENT"}, {"creditPayload": {"balanceOrigin": "Xbox", "count": 85, "currencyCode": "cGryI0mZ", "expireAt": "1977-05-22T00:00:00Z"}, "debitPayload": {"count": 91, "currencyCode": "dmkYMk3B", "walletPlatform": "Oculus"}, "fulFillItemPayload": {"count": 60, "entitlementCollectionId": "KPlr1MbX", "entitlementOrigin": "Epic", "itemIdentity": "IVvtAwJu", "itemIdentityType": "ITEM_ID"}, "revokeEntitlementPayload": {"count": 2, "entitlementId": "NH0OszIc"}, "type": "REVOKE_ENTITLEMENT"}], "userId": "9C8TqXkr"}, {"operations": [{"creditPayload": {"balanceOrigin": "Xbox", "count": 53, "currencyCode": "97spgv78", "expireAt": "1991-10-16T00:00:00Z"}, "debitPayload": {"count": 99, "currencyCode": "8w2l3Cum", "walletPlatform": "IOS"}, "fulFillItemPayload": {"count": 2, "entitlementCollectionId": "hYGNvR9M", "entitlementOrigin": "Other", "itemIdentity": "3ER8Cg3F", "itemIdentityType": "ITEM_ID"}, "revokeEntitlementPayload": {"count": 27, "entitlementId": "VyKgxP7g"}, "type": "CREDIT_WALLET"}, {"creditPayload": {"balanceOrigin": "Playstation", "count": 51, "currencyCode": "a5vKvaYb", "expireAt": "1985-10-29T00:00:00Z"}, "debitPayload": {"count": 16, "currencyCode": "pHOjBQVZ", "walletPlatform": "Xbox"}, "fulFillItemPayload": {"count": 32, "entitlementCollectionId": "eV9olC2X", "entitlementOrigin": "Playstation", "itemIdentity": "pvwQSnKN", "itemIdentityType": "ITEM_SKU"}, "revokeEntitlementPayload": {"count": 67, "entitlementId": "fRW5Yp5F"}, "type": "CREDIT_WALLET"}, {"creditPayload": {"balanceOrigin": "Twitch", "count": 10, "currencyCode": "E4NINOYy", "expireAt": "1989-05-19T00:00:00Z"}, "debitPayload": {"count": 78, "currencyCode": "06eqFcAq", "walletPlatform": "Other"}, "fulFillItemPayload": {"count": 73, "entitlementCollectionId": "sJNZw51I", "entitlementOrigin": "Other", "itemIdentity": "mWa7Z67i", "itemIdentityType": "ITEM_ID"}, "revokeEntitlementPayload": {"count": 96, "entitlementId": "DnIkDDtv"}, "type": "CREDIT_WALLET"}], "userId": "YqMn7ena"}], "metadata": {"nzkp5mCA": {}, "beH3fjxl": {}, "X4P8ehBG": {}}, "needPreCheck": false, "transactionId": "pfVSmdye", "type": "mettcezx"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op Commit \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 216 'Commit' test.out

#- 217 GetTradeHistoryByCriteria
$CLI_EXE \
    --sn platform \
    --op GetTradeHistoryByCriteria \
    --namespace $AB_NAMESPACE \
    --limit '76' \
    --offset '36' \
    --status 'SUCCESS' \
    --type 'aBQFlUAL' \
    --userId '972Vm5NW' \
    > test.out 2>&1
eval_tap $? 217 'GetTradeHistoryByCriteria' test.out

#- 218 GetTradeHistoryByTransactionId
$CLI_EXE \
    --sn platform \
    --op GetTradeHistoryByTransactionId \
    --namespace $AB_NAMESPACE \
    --transactionId '2VbNJHj9' \
    > test.out 2>&1
eval_tap $? 218 'GetTradeHistoryByTransactionId' test.out

#- 219 UnlockSteamUserAchievement
# body param: body
echo '{"achievements": [{"id": "9pjkxd5Q", "value": 52}, {"id": "TxOF6ZHF", "value": 36}, {"id": "IxOHTweZ", "value": 40}], "steamUserId": "lyNu1DNE"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UnlockSteamUserAchievement \
    --namespace $AB_NAMESPACE \
    --userId 'jiLQAyV1' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 219 'UnlockSteamUserAchievement' test.out

#- 220 GetXblUserAchievements
$CLI_EXE \
    --sn platform \
    --op GetXblUserAchievements \
    --namespace $AB_NAMESPACE \
    --userId 'eXMXj7sf' \
    --xboxUserId 'wVwqdDOU' \
    > test.out 2>&1
eval_tap $? 220 'GetXblUserAchievements' test.out

#- 221 UpdateXblUserAchievement
# body param: body
echo '{"achievements": [{"id": "I5kmqxcD", "percentComplete": 73}, {"id": "8MzuYXkd", "percentComplete": 59}, {"id": "67cWg9n9", "percentComplete": 45}], "serviceConfigId": "2wQZIlnT", "titleId": "CqKkgvnJ", "xboxUserId": "4TAwHBJh"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXblUserAchievement \
    --namespace $AB_NAMESPACE \
    --userId 'BS2oHnkj' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 221 'UpdateXblUserAchievement' test.out

#- 222 AnonymizeCampaign
$CLI_EXE \
    --sn platform \
    --op AnonymizeCampaign \
    --namespace $AB_NAMESPACE \
    --userId '3itjQqXs' \
    > test.out 2>&1
eval_tap $? 222 'AnonymizeCampaign' test.out

#- 223 AnonymizeEntitlement
$CLI_EXE \
    --sn platform \
    --op AnonymizeEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'KJi6JerR' \
    > test.out 2>&1
eval_tap $? 223 'AnonymizeEntitlement' test.out

#- 224 AnonymizeFulfillment
$CLI_EXE \
    --sn platform \
    --op AnonymizeFulfillment \
    --namespace $AB_NAMESPACE \
    --userId 'kbWfPo5z' \
    > test.out 2>&1
eval_tap $? 224 'AnonymizeFulfillment' test.out

#- 225 AnonymizeIntegration
$CLI_EXE \
    --sn platform \
    --op AnonymizeIntegration \
    --namespace $AB_NAMESPACE \
    --userId 'bUcJo9Dq' \
    > test.out 2>&1
eval_tap $? 225 'AnonymizeIntegration' test.out

#- 226 AnonymizeOrder
$CLI_EXE \
    --sn platform \
    --op AnonymizeOrder \
    --namespace $AB_NAMESPACE \
    --userId '3q3duBoM' \
    > test.out 2>&1
eval_tap $? 226 'AnonymizeOrder' test.out

#- 227 AnonymizePayment
$CLI_EXE \
    --sn platform \
    --op AnonymizePayment \
    --namespace $AB_NAMESPACE \
    --userId 'B35BlY6A' \
    > test.out 2>&1
eval_tap $? 227 'AnonymizePayment' test.out

#- 228 AnonymizeRevocation
$CLI_EXE \
    --sn platform \
    --op AnonymizeRevocation \
    --namespace $AB_NAMESPACE \
    --userId 'RS1yCcd4' \
    > test.out 2>&1
eval_tap $? 228 'AnonymizeRevocation' test.out

#- 229 AnonymizeSubscription
$CLI_EXE \
    --sn platform \
    --op AnonymizeSubscription \
    --namespace $AB_NAMESPACE \
    --userId '0f2UcNyv' \
    > test.out 2>&1
eval_tap $? 229 'AnonymizeSubscription' test.out

#- 230 AnonymizeWallet
$CLI_EXE \
    --sn platform \
    --op AnonymizeWallet \
    --namespace $AB_NAMESPACE \
    --userId '06h9XSao' \
    > test.out 2>&1
eval_tap $? 230 'AnonymizeWallet' test.out

#- 231 GetUserDLCByPlatform
$CLI_EXE \
    --sn platform \
    --op GetUserDLCByPlatform \
    --namespace $AB_NAMESPACE \
    --userId 'zaEtVU6Y' \
    --type 'XBOX' \
    > test.out 2>&1
eval_tap $? 231 'GetUserDLCByPlatform' test.out

#- 232 GetUserDLC
$CLI_EXE \
    --sn platform \
    --op GetUserDLC \
    --namespace $AB_NAMESPACE \
    --userId 'zv86bT8y' \
    --type 'OCULUS' \
    > test.out 2>&1
eval_tap $? 232 'GetUserDLC' test.out

#- 233 QueryUserEntitlements
$CLI_EXE \
    --sn platform \
    --op QueryUserEntitlements \
    --namespace $AB_NAMESPACE \
    --userId '6SApTmoO' \
    --activeOnly 'true' \
    --appType 'DEMO' \
    --collectionId 'rfC1URxH' \
    --entitlementClazz 'MEDIA' \
    --entitlementName 'Zqm8FPSm' \
    --features '["mVRIZLbK", "cvKG3gkk", "PrNpMC7o"]' \
    --fuzzyMatchName 'false' \
    --itemId '["auvZAdOg", "9KPzphbV", "qqokLRAW"]' \
    --limit '91' \
    --offset '24' \
    --origin 'Xbox' \
    > test.out 2>&1
eval_tap $? 233 'QueryUserEntitlements' test.out

#- 234 GrantUserEntitlement
# body param: body
echo '[{"collectionId": "oCKfhiHP", "endDate": "1988-08-08T00:00:00Z", "grantedCode": "wHGOYls1", "itemId": "0CV6RENb", "itemNamespace": "hyPHMMXg", "language": "bl_753", "origin": "Nintendo", "quantity": 35, "region": "1B8BQjoO", "source": "ACHIEVEMENT", "startDate": "1973-04-04T00:00:00Z", "storeId": "gJeQN3OW"}, {"collectionId": "CtBAW871", "endDate": "1971-09-15T00:00:00Z", "grantedCode": "VpULZhHb", "itemId": "OwEFURlK", "itemNamespace": "08Ou5YPp", "language": "vHd-XT", "origin": "IOS", "quantity": 21, "region": "8WVAL7Hq", "source": "IAP", "startDate": "1977-02-10T00:00:00Z", "storeId": "jw34Kq1H"}, {"collectionId": "NzBf45Ty", "endDate": "1973-08-14T00:00:00Z", "grantedCode": "0JLMM9lO", "itemId": "lz58nP1P", "itemNamespace": "XlEXxMAV", "language": "xp-gD", "origin": "Twitch", "quantity": 46, "region": "ffwm1QZ9", "source": "IAP", "startDate": "1974-07-09T00:00:00Z", "storeId": "te8ywY9q"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op GrantUserEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'OPurHWuD' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 234 'GrantUserEntitlement' test.out

#- 235 GetUserAppEntitlementByAppId
$CLI_EXE \
    --sn platform \
    --op GetUserAppEntitlementByAppId \
    --namespace $AB_NAMESPACE \
    --userId '9IrtJdEJ' \
    --activeOnly 'false' \
    --appId 'jth0ur9e' \
    > test.out 2>&1
eval_tap $? 235 'GetUserAppEntitlementByAppId' test.out

#- 236 QueryUserEntitlementsByAppType
$CLI_EXE \
    --sn platform \
    --op QueryUserEntitlementsByAppType \
    --namespace $AB_NAMESPACE \
    --userId 'YYqPLrSz' \
    --activeOnly 'false' \
    --limit '45' \
    --offset '53' \
    --appType 'SOFTWARE' \
    > test.out 2>&1
eval_tap $? 236 'QueryUserEntitlementsByAppType' test.out

#- 237 GetUserEntitlementByItemId
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'AnGIMjTl' \
    --activeOnly 'false' \
    --entitlementClazz 'LOOTBOX' \
    --platform 'ijnWYM28' \
    --itemId '5q4H6imY' \
    > test.out 2>&1
eval_tap $? 237 'GetUserEntitlementByItemId' test.out

#- 238 GetUserActiveEntitlementsByItemIds
$CLI_EXE \
    --sn platform \
    --op GetUserActiveEntitlementsByItemIds \
    --namespace $AB_NAMESPACE \
    --userId '8PZTkBAK' \
    --ids '["kYKMS1w5", "HV94muS2", "qgUEpUZK"]' \
    --platform 'MtlixDBe' \
    > test.out 2>&1
eval_tap $? 238 'GetUserActiveEntitlementsByItemIds' test.out

#- 239 GetUserEntitlementBySku
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementBySku \
    --namespace $AB_NAMESPACE \
    --userId '7dbgUXl8' \
    --activeOnly 'false' \
    --entitlementClazz 'ENTITLEMENT' \
    --platform 'qIHR11Ej' \
    --sku 'ey6FaVVP' \
    > test.out 2>&1
eval_tap $? 239 'GetUserEntitlementBySku' test.out

#- 240 ExistsAnyUserActiveEntitlement
$CLI_EXE \
    --sn platform \
    --op ExistsAnyUserActiveEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'plXCBtfN' \
    --appIds '["TXHYFwsl", "M84eNvzd", "BBV7XKoj"]' \
    --itemIds '["LX5qaXEv", "CE8hXrQT", "dD8FT3sJ"]' \
    --platform 'sbvioNtX' \
    --skus '["W0aOiTBx", "mlhkon8G", "MRVphJH5"]' \
    > test.out 2>&1
eval_tap $? 240 'ExistsAnyUserActiveEntitlement' test.out

#- 241 ExistsAnyUserActiveEntitlementByItemIds
$CLI_EXE \
    --sn platform \
    --op ExistsAnyUserActiveEntitlementByItemIds \
    --namespace $AB_NAMESPACE \
    --userId 'Rs2jnkNJ' \
    --platform 'lHAVNodO' \
    --itemIds '["VhnKy0gM", "sEJbystE", "spaVYYbX"]' \
    > test.out 2>&1
eval_tap $? 241 'ExistsAnyUserActiveEntitlementByItemIds' test.out

#- 242 GetUserAppEntitlementOwnershipByAppId
$CLI_EXE \
    --sn platform \
    --op GetUserAppEntitlementOwnershipByAppId \
    --namespace $AB_NAMESPACE \
    --userId 'kvFfJu2O' \
    --appId 'Nn9DVki1' \
    > test.out 2>&1
eval_tap $? 242 'GetUserAppEntitlementOwnershipByAppId' test.out

#- 243 GetUserEntitlementOwnershipByItemId
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementOwnershipByItemId \
    --namespace $AB_NAMESPACE \
    --userId '1kgI271d' \
    --entitlementClazz 'ENTITLEMENT' \
    --platform 'DoqEPVsd' \
    --itemId 'l2oYXnFK' \
    > test.out 2>&1
eval_tap $? 243 'GetUserEntitlementOwnershipByItemId' test.out

#- 244 GetUserEntitlementOwnershipByItemIds
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementOwnershipByItemIds \
    --namespace $AB_NAMESPACE \
    --userId 'r4gMAlOs' \
    --ids '["QqPt61By", "e21rvIh6", "DB7jp5pB"]' \
    --platform 'xydqiiQ2' \
    > test.out 2>&1
eval_tap $? 244 'GetUserEntitlementOwnershipByItemIds' test.out

#- 245 GetUserEntitlementOwnershipBySku
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementOwnershipBySku \
    --namespace $AB_NAMESPACE \
    --userId 'klDO0Sep' \
    --entitlementClazz 'MEDIA' \
    --platform 'BwHtucqj' \
    --sku 'YsJ6iCZ1' \
    > test.out 2>&1
eval_tap $? 245 'GetUserEntitlementOwnershipBySku' test.out

#- 246 RevokeAllEntitlements
$CLI_EXE \
    --sn platform \
    --op RevokeAllEntitlements \
    --namespace $AB_NAMESPACE \
    --userId '19MG6Cjr' \
    > test.out 2>&1
eval_tap $? 246 'RevokeAllEntitlements' test.out

#- 247 RevokeUserEntitlements
$CLI_EXE \
    --sn platform \
    --op RevokeUserEntitlements \
    --namespace $AB_NAMESPACE \
    --userId 'GbHvKr9E' \
    --entitlementIds 'jZybqYTE' \
    > test.out 2>&1
eval_tap $? 247 'RevokeUserEntitlements' test.out

#- 248 GetUserEntitlement
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlement \
    --entitlementId 'tUqrIA8x' \
    --namespace $AB_NAMESPACE \
    --userId '5kvdbQaM' \
    > test.out 2>&1
eval_tap $? 248 'GetUserEntitlement' test.out

#- 249 UpdateUserEntitlement
# body param: body
echo '{"collectionId": "iekjVqde", "endDate": "1984-08-25T00:00:00Z", "nullFieldList": ["3CQM9qF2", "v45s3Vyy", "jc9qXg5U"], "origin": "Oculus", "reason": "XQ75JGVD", "startDate": "1994-06-16T00:00:00Z", "status": "SOLD", "useCount": 99}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateUserEntitlement \
    --entitlementId 'dmrNBOJG' \
    --namespace $AB_NAMESPACE \
    --userId 'XaIdGNQl' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 249 'UpdateUserEntitlement' test.out

#- 250 ConsumeUserEntitlement
# body param: body
echo '{"options": ["WJqWxKy3", "VqAU7RU5", "RETHBQvI"], "platform": "tPglBTqr", "requestId": "aIpWcc5e", "useCount": 93}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ConsumeUserEntitlement \
    --entitlementId 'py0zKXAa' \
    --namespace $AB_NAMESPACE \
    --userId '0KP1Ejf4' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 250 'ConsumeUserEntitlement' test.out

#- 251 DisableUserEntitlement
$CLI_EXE \
    --sn platform \
    --op DisableUserEntitlement \
    --entitlementId 'eb9hBn1Q' \
    --namespace $AB_NAMESPACE \
    --userId 'xNL4aQC9' \
    > test.out 2>&1
eval_tap $? 251 'DisableUserEntitlement' test.out

#- 252 EnableUserEntitlement
$CLI_EXE \
    --sn platform \
    --op EnableUserEntitlement \
    --entitlementId 'k3t9CQVT' \
    --namespace $AB_NAMESPACE \
    --userId '1tjWIAcS' \
    > test.out 2>&1
eval_tap $? 252 'EnableUserEntitlement' test.out

#- 253 GetUserEntitlementHistories
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementHistories \
    --entitlementId '1Hy5JWDt' \
    --namespace $AB_NAMESPACE \
    --userId 'PAX84VaP' \
    > test.out 2>&1
eval_tap $? 253 'GetUserEntitlementHistories' test.out

#- 254 RevokeUserEntitlement
$CLI_EXE \
    --sn platform \
    --op RevokeUserEntitlement \
    --entitlementId 'RMuFCQIG' \
    --namespace $AB_NAMESPACE \
    --userId 'vEZDb2Kg' \
    > test.out 2>&1
eval_tap $? 254 'RevokeUserEntitlement' test.out

#- 255 RevokeUserEntitlementByUseCount
# body param: body
echo '{"reason": "LvMcFLTk", "useCount": 62}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RevokeUserEntitlementByUseCount \
    --entitlementId '1rCw9Ztm' \
    --namespace $AB_NAMESPACE \
    --userId 'Q0OfkGBt' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 255 'RevokeUserEntitlementByUseCount' test.out

#- 256 PreCheckRevokeUserEntitlementByUseCount
$CLI_EXE \
    --sn platform \
    --op PreCheckRevokeUserEntitlementByUseCount \
    --entitlementId 'zA1OWmZC' \
    --namespace $AB_NAMESPACE \
    --userId 'YPEf8GRT' \
    --quantity '43' \
    > test.out 2>&1
eval_tap $? 256 'PreCheckRevokeUserEntitlementByUseCount' test.out

#- 257 RevokeUseCount
eval_tap 0 257 'RevokeUseCount # SKIP deprecated' test.out

#- 258 SellUserEntitlement
# body param: body
echo '{"platform": "fPlWmo96", "requestId": "MUZHfmwB", "useCount": 29}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SellUserEntitlement \
    --entitlementId 'KAWHnQbi' \
    --namespace $AB_NAMESPACE \
    --userId 'PNcz9Sw6' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 258 'SellUserEntitlement' test.out

#- 259 FulfillItem
# body param: body
echo '{"duration": 100, "endDate": "1997-07-23T00:00:00Z", "entitlementCollectionId": "SFBSvggf", "entitlementOrigin": "Nintendo", "itemId": "nzBmbTYc", "itemSku": "W5bWO46c", "language": "GzP7GgMA", "metadata": {"zlk3Tu00": {}, "a7TrV0XI": {}, "KXGt0mVI": {}}, "order": {"currency": {"currencyCode": "W4LoRPxr", "currencySymbol": "ay7xR0wI", "currencyType": "REAL", "decimals": 72, "namespace": "EudziU6r"}, "ext": {"4yP3gPTv": {}, "IixSN1Ol": {}, "f6IF6oOa": {}}, "free": true}, "orderNo": "C3VetSgU", "origin": "Oculus", "overrideBundleItemQty": {"fF9GWQuG": 55, "pAUANFfq": 63, "9btqVeVy": 8}, "quantity": 23, "region": "RmcAFOWj", "source": "OTHER", "startDate": "1975-02-27T00:00:00Z", "storeId": "GRlK9CqV"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op FulfillItem \
    --namespace $AB_NAMESPACE \
    --userId '0Qn1qDLZ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 259 'FulfillItem' test.out

#- 260 RedeemCode
# body param: body
echo '{"code": "9ZBZaoqD", "language": "qj_wjZN_850", "region": "aeBe7kFy"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RedeemCode \
    --namespace $AB_NAMESPACE \
    --userId 'c6YA24Wu' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 260 'RedeemCode' test.out

#- 261 PreCheckFulfillItem
# body param: body
echo '{"itemId": "nVK7neDr", "itemSku": "t9Fz2e2W", "quantity": 13}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PreCheckFulfillItem \
    --namespace $AB_NAMESPACE \
    --userId 'abS5qGO6' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 261 'PreCheckFulfillItem' test.out

#- 262 FulfillRewards
# body param: body
echo '{"entitlementCollectionId": "IuCb3JjS", "entitlementOrigin": "Steam", "metadata": {"0F3ucFSY": {}, "5c3RzBP2": {}, "pbknoJfn": {}}, "origin": "Nintendo", "rewards": [{"currency": {"currencyCode": "TwpGjPZb", "namespace": "FbfS84Og"}, "item": {"itemId": "7MY2Mzlk", "itemSku": "QKXaSuc5", "itemType": "Oa8ewgam"}, "quantity": 52, "type": "CURRENCY"}, {"currency": {"currencyCode": "55x2od7k", "namespace": "ezmSie0b"}, "item": {"itemId": "4KxRaU0z", "itemSku": "KYyv6wT7", "itemType": "nVFASIuF"}, "quantity": 73, "type": "CURRENCY"}, {"currency": {"currencyCode": "W4Qy934X", "namespace": "Ya7l5dx0"}, "item": {"itemId": "pwsj1CDn", "itemSku": "lwnPpwee", "itemType": "WysOXD8H"}, "quantity": 27, "type": "CURRENCY"}], "source": "PAYMENT", "transactionId": "caGlwE8w"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op FulfillRewards \
    --namespace $AB_NAMESPACE \
    --userId 'KtmPKbrD' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 262 'FulfillRewards' test.out

#- 263 QueryUserIAPOrders
$CLI_EXE \
    --sn platform \
    --op QueryUserIAPOrders \
    --namespace $AB_NAMESPACE \
    --userId 'ajET5RgY' \
    --endTime '4h3iZ7eo' \
    --limit '21' \
    --offset '30' \
    --productId '54koGpI4' \
    --startTime 'njzfH1Sz' \
    --status 'FAILED' \
    --type 'PLAYSTATION' \
    > test.out 2>&1
eval_tap $? 263 'QueryUserIAPOrders' test.out

#- 264 QueryAllUserIAPOrders
$CLI_EXE \
    --sn platform \
    --op QueryAllUserIAPOrders \
    --namespace $AB_NAMESPACE \
    --userId 'IiZzryj5' \
    > test.out 2>&1
eval_tap $? 264 'QueryAllUserIAPOrders' test.out

#- 265 QueryUserIAPConsumeHistory
$CLI_EXE \
    --sn platform \
    --op QueryUserIAPConsumeHistory \
    --namespace $AB_NAMESPACE \
    --userId 'g9rrBOJe' \
    --endTime 'UVCmngB0' \
    --limit '8' \
    --offset '20' \
    --startTime 'BNWENYRC' \
    --status 'PENDING' \
    --type 'STEAM' \
    > test.out 2>&1
eval_tap $? 265 'QueryUserIAPConsumeHistory' test.out

#- 266 MockFulfillIAPItem
# body param: body
echo '{"itemIdentityType": "ITEM_ID", "language": "aOw-921", "productId": "58s0snz4", "region": "dmt08iJP", "transactionId": "AnVdVxvB", "type": "PLAYSTATION"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op MockFulfillIAPItem \
    --namespace $AB_NAMESPACE \
    --userId 'gW0THBwi' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 266 'MockFulfillIAPItem' test.out

#- 267 QueryUserOrders
$CLI_EXE \
    --sn platform \
    --op QueryUserOrders \
    --namespace $AB_NAMESPACE \
    --userId 'Mpi4LIVe' \
    --itemId 'CL1o9ta1' \
    --limit '72' \
    --offset '97' \
    --status 'CHARGEBACK_REVERSED' \
    > test.out 2>&1
eval_tap $? 267 'QueryUserOrders' test.out

#- 268 AdminCreateUserOrder
# body param: body
echo '{"currencyCode": "6LlyK0sX", "currencyNamespace": "MtPzvsao", "discountedPrice": 0, "entitlementPlatform": "Steam", "ext": {"D0BVqBdw": {}, "dgNHl1iv": {}, "4hLNxPuw": {}}, "itemId": "j7HpBE1J", "language": "Sz3Ur5Yx", "options": {"skipPriceValidation": true}, "platform": "Steam", "price": 40, "quantity": 30, "region": "i8EPTXmd", "returnUrl": "ZrXN59Yg", "sandbox": false, "sectionId": "QN7MliFj"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op AdminCreateUserOrder \
    --namespace $AB_NAMESPACE \
    --userId '3I2veLCO' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 268 'AdminCreateUserOrder' test.out

#- 269 CountOfPurchasedItem
$CLI_EXE \
    --sn platform \
    --op CountOfPurchasedItem \
    --namespace $AB_NAMESPACE \
    --userId 'MKUk6jmf' \
    --itemId 'Bcf8CaV4' \
    > test.out 2>&1
eval_tap $? 269 'CountOfPurchasedItem' test.out

#- 270 GetUserOrder
$CLI_EXE \
    --sn platform \
    --op GetUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo '8LGZeKR5' \
    --userId 'QBZH22DC' \
    > test.out 2>&1
eval_tap $? 270 'GetUserOrder' test.out

#- 271 UpdateUserOrderStatus
# body param: body
echo '{"status": "REFUNDING", "statusReason": "f7V2LdRV"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateUserOrderStatus \
    --namespace $AB_NAMESPACE \
    --orderNo 'jkVNAMDA' \
    --userId 'NNGmTTpR' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 271 'UpdateUserOrderStatus' test.out

#- 272 FulfillUserOrder
$CLI_EXE \
    --sn platform \
    --op FulfillUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'JbOnuU0Z' \
    --userId 'nIUZi4YZ' \
    > test.out 2>&1
eval_tap $? 272 'FulfillUserOrder' test.out

#- 273 GetUserOrderGrant
$CLI_EXE \
    --sn platform \
    --op GetUserOrderGrant \
    --namespace $AB_NAMESPACE \
    --orderNo 'DCNck15I' \
    --userId 'pOu1Sdj8' \
    > test.out 2>&1
eval_tap $? 273 'GetUserOrderGrant' test.out

#- 274 GetUserOrderHistories
$CLI_EXE \
    --sn platform \
    --op GetUserOrderHistories \
    --namespace $AB_NAMESPACE \
    --orderNo 'MeoORh2m' \
    --userId 'fRL6zavM' \
    > test.out 2>&1
eval_tap $? 274 'GetUserOrderHistories' test.out

#- 275 ProcessUserOrderNotification
# body param: body
echo '{"additionalData": {"cardSummary": "7pZ0HZeQ"}, "authorisedTime": "1991-12-01T00:00:00Z", "chargebackReversedTime": "1974-01-29T00:00:00Z", "chargebackTime": "1980-07-15T00:00:00Z", "chargedTime": "1971-07-06T00:00:00Z", "createdTime": "1986-05-25T00:00:00Z", "currency": {"currencyCode": "JdlOr00m", "currencySymbol": "Z5Ij9KLP", "currencyType": "REAL", "decimals": 53, "namespace": "JLkJObLD"}, "customParameters": {"ZbrrUWiN": {}, "Iua23jtg": {}, "msvGQCbw": {}}, "extOrderNo": "TEwk7oRC", "extTxId": "KYfcxBxz", "extUserId": "MjQOKrwc", "issuedAt": "1972-03-10T00:00:00Z", "metadata": {"A0Zrk4WQ": "iwVjkuY1", "uYxdXK4g": "VTLp76YM", "Y5bvJsfS": "YrOaKclX"}, "namespace": "AoAif2Yw", "nonceStr": "nxpBaQl4", "paymentMethod": "LnZqzeOq", "paymentMethodFee": 30, "paymentOrderNo": "KpozYFWQ", "paymentProvider": "ADYEN", "paymentProviderFee": 58, "paymentStationUrl": "L0WGadTD", "price": 46, "refundedTime": "1979-08-03T00:00:00Z", "salesTax": 45, "sandbox": true, "sku": "ieNprRio", "status": "REQUEST_FOR_INFORMATION", "statusReason": "QMPNcR2z", "subscriptionId": "F4Zo3vD0", "subtotalPrice": 51, "targetNamespace": "4GYjSAmP", "targetUserId": "Q2L03FPD", "tax": 58, "totalPrice": 44, "totalTax": 91, "txEndTime": "1986-07-17T00:00:00Z", "type": "8tOHSPMP", "userId": "iW3hFe6L", "vat": 6}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ProcessUserOrderNotification \
    --namespace $AB_NAMESPACE \
    --orderNo 'rVkrpDEc' \
    --userId 'dm5HebLB' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 275 'ProcessUserOrderNotification' test.out

#- 276 DownloadUserOrderReceipt
$CLI_EXE \
    --sn platform \
    --op DownloadUserOrderReceipt \
    --namespace $AB_NAMESPACE \
    --orderNo 'TaVc3smZ' \
    --userId 'KedXNcX6' \
    > test.out 2>&1
eval_tap $? 276 'DownloadUserOrderReceipt' test.out

#- 277 CreateUserPaymentOrder
# body param: body
echo '{"currencyCode": "MdiKxSgI", "currencyNamespace": "V1KcaNFl", "customParameters": {"4Yv6Op20": {}, "Yp3XYNvK": {}, "wC8qTGS8": {}}, "description": "Ofb0lVvs", "extOrderNo": "AwLg8Ud0", "extUserId": "COvLqccr", "itemType": "SUBSCRIPTION", "language": "xILi", "metadata": {"CuPL7qYS": "xyyHKoKM", "CAlYMA30": "v8nYxTXP", "FBSguGRw": "N1fvowD1"}, "notifyUrl": "gNDDWtNh", "omitNotification": true, "platform": "8SMvRnAV", "price": 9, "recurringPaymentOrderNo": "4WwHnhyY", "region": "8pxA7AtS", "returnUrl": "asrHiwzY", "sandbox": true, "sku": "PXKLWULn", "subscriptionId": "eRPGL9zQ", "title": "FWWo2dwp"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateUserPaymentOrder \
    --namespace $AB_NAMESPACE \
    --userId 'vYgu1l07' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 277 'CreateUserPaymentOrder' test.out

#- 278 RefundUserPaymentOrder
# body param: body
echo '{"description": "iDp1pRNe"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RefundUserPaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'PLLTgvBh' \
    --userId 'sVq5Ln4u' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 278 'RefundUserPaymentOrder' test.out

#- 279 ApplyUserRedemption
# body param: body
echo '{"code": "BNueq59r", "orderNo": "bjAnEWKS"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ApplyUserRedemption \
    --namespace $AB_NAMESPACE \
    --userId 'tKC6Hz3L' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 279 'ApplyUserRedemption' test.out

#- 280 DoRevocation
# body param: body
echo '{"meta": {"UIzbBkh4": {}, "ZdhNVdtT": {}, "9GAwmU4B": {}}, "revokeEntries": [{"currency": {"balanceOrigin": "IOS", "currencyCode": "iTxYAJT4", "namespace": "AC4Mzc1X"}, "entitlement": {"entitlementId": "HrBYSFRL"}, "item": {"entitlementOrigin": "Epic", "itemIdentity": "ZF1AzQAA", "itemIdentityType": "ITEM_ID", "origin": "Xbox"}, "quantity": 24, "type": "CURRENCY"}, {"currency": {"balanceOrigin": "Nintendo", "currencyCode": "7cN4KbMa", "namespace": "Ir3hVVjP"}, "entitlement": {"entitlementId": "aOm33rMj"}, "item": {"entitlementOrigin": "Other", "itemIdentity": "41D7kK3K", "itemIdentityType": "ITEM_SKU", "origin": "IOS"}, "quantity": 30, "type": "ITEM"}, {"currency": {"balanceOrigin": "Xbox", "currencyCode": "mHlzAd40", "namespace": "YjXJFKCl"}, "entitlement": {"entitlementId": "LqaHNUD0"}, "item": {"entitlementOrigin": "System", "itemIdentity": "sqoM7sT4", "itemIdentityType": "ITEM_ID", "origin": "GooglePlay"}, "quantity": 22, "type": "ENTITLEMENT"}], "source": "OTHER", "transactionId": "L7U3hfkO"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op DoRevocation \
    --namespace $AB_NAMESPACE \
    --userId 'BOcRSDeX' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 280 'DoRevocation' test.out

#- 281 RegisterXblSessions
# body param: body
echo '{"gameSessionId": "l87UZfrZ", "payload": {"4vRVFd59": {}, "AzmxUdeK": {}, "AXlAGp4M": {}}, "scid": "8TxOcQN1", "sessionTemplateName": "NPc1VzWa"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RegisterXblSessions \
    --namespace $AB_NAMESPACE \
    --userId 'sDISILuz' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 281 'RegisterXblSessions' test.out

#- 282 QueryUserSubscriptions
$CLI_EXE \
    --sn platform \
    --op QueryUserSubscriptions \
    --namespace $AB_NAMESPACE \
    --userId 'pirjYbOB' \
    --chargeStatus 'SETUP' \
    --itemId '2Nfa9eAU' \
    --limit '77' \
    --offset '72' \
    --sku 'bg6IujRV' \
    --status 'EXPIRED' \
    --subscribedBy 'USER' \
    > test.out 2>&1
eval_tap $? 282 'QueryUserSubscriptions' test.out

#- 283 GetUserSubscriptionActivities
$CLI_EXE \
    --sn platform \
    --op GetUserSubscriptionActivities \
    --namespace $AB_NAMESPACE \
    --userId '9Z90TCVO' \
    --excludeSystem 'false' \
    --limit '83' \
    --offset '92' \
    --subscriptionId 'aKGPs8uA' \
    > test.out 2>&1
eval_tap $? 283 'GetUserSubscriptionActivities' test.out

#- 284 PlatformSubscribeSubscription
# body param: body
echo '{"grantDays": 88, "itemId": "mF2Ow7ug", "language": "NkDLHZja", "reason": "klM3FT7t", "region": "13yhcGOU", "source": "1iaQ8Jyh"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PlatformSubscribeSubscription \
    --namespace $AB_NAMESPACE \
    --userId '35re4d32' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 284 'PlatformSubscribeSubscription' test.out

#- 285 CheckUserSubscriptionSubscribableByItemId
$CLI_EXE \
    --sn platform \
    --op CheckUserSubscriptionSubscribableByItemId \
    --namespace $AB_NAMESPACE \
    --userId '1MwHKzcV' \
    --itemId 'fyFyaRW9' \
    > test.out 2>&1
eval_tap $? 285 'CheckUserSubscriptionSubscribableByItemId' test.out

#- 286 GetUserSubscription
$CLI_EXE \
    --sn platform \
    --op GetUserSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'bLVarZfF' \
    --userId 'eSDR2RDP' \
    > test.out 2>&1
eval_tap $? 286 'GetUserSubscription' test.out

#- 287 DeleteUserSubscription
$CLI_EXE \
    --sn platform \
    --op DeleteUserSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'VqchH6ig' \
    --userId 'aCktsp1d' \
    > test.out 2>&1
eval_tap $? 287 'DeleteUserSubscription' test.out

#- 288 CancelSubscription
# body param: body
echo '{"immediate": false, "reason": "JyvrJ6pd"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CancelSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'sryaxlUQ' \
    --userId 't5C8VbJe' \
    --force 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 288 'CancelSubscription' test.out

#- 289 GrantDaysToSubscription
# body param: body
echo '{"grantDays": 18, "reason": "Z6eBpcC8"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op GrantDaysToSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'tdtf6TVo' \
    --userId 'a6UxLRkj' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 289 'GrantDaysToSubscription' test.out

#- 290 GetUserSubscriptionBillingHistories
$CLI_EXE \
    --sn platform \
    --op GetUserSubscriptionBillingHistories \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'NYTlzjlw' \
    --userId 'AHivhkr6' \
    --excludeFree 'true' \
    --limit '75' \
    --offset '56' \
    > test.out 2>&1
eval_tap $? 290 'GetUserSubscriptionBillingHistories' test.out

#- 291 ProcessUserSubscriptionNotification
# body param: body
echo '{"additionalData": {"cardSummary": "QimPU9Rb"}, "authorisedTime": "1997-05-16T00:00:00Z", "chargebackReversedTime": "1996-09-06T00:00:00Z", "chargebackTime": "1998-03-20T00:00:00Z", "chargedTime": "1997-11-02T00:00:00Z", "createdTime": "1971-05-13T00:00:00Z", "currency": {"currencyCode": "tbYljVNa", "currencySymbol": "UzA58N19", "currencyType": "REAL", "decimals": 0, "namespace": "9jTAPf30"}, "customParameters": {"iiRR6zap": {}, "e49JPdeF": {}, "ckerBD5d": {}}, "extOrderNo": "fdXoOSa6", "extTxId": "78tsZdFo", "extUserId": "wNjrjM5M", "issuedAt": "1981-11-29T00:00:00Z", "metadata": {"eDggzq4w": "Dh0e4qaG", "zRBUuPPt": "80pMD48E", "ccoK5aDO": "ybGCYlqK"}, "namespace": "IK7gfAtl", "nonceStr": "ACZGEV7Q", "paymentMethod": "af5Y0jck", "paymentMethodFee": 97, "paymentOrderNo": "OKuxvkga", "paymentProvider": "STRIPE", "paymentProviderFee": 27, "paymentStationUrl": "g3WdYABV", "price": 84, "refundedTime": "1983-02-26T00:00:00Z", "salesTax": 48, "sandbox": false, "sku": "RP9hBhU3", "status": "REQUEST_FOR_INFORMATION", "statusReason": "D8uZg4nd", "subscriptionId": "ice2R7sr", "subtotalPrice": 98, "targetNamespace": "I0rgBdzW", "targetUserId": "5m3rzqKG", "tax": 15, "totalPrice": 30, "totalTax": 48, "txEndTime": "1995-08-16T00:00:00Z", "type": "LSzAUHUV", "userId": "zyO455I6", "vat": 3}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ProcessUserSubscriptionNotification \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'ZCCFVtb3' \
    --userId 'DNhdptpf' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 291 'ProcessUserSubscriptionNotification' test.out

#- 292 AcquireUserTicket
# body param: body
echo '{"count": 91, "orderNo": "No92WJ4u"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op AcquireUserTicket \
    --boothName '7nOXMT9O' \
    --namespace $AB_NAMESPACE \
    --userId 'zXnNhrnC' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 292 'AcquireUserTicket' test.out

#- 293 QueryUserCurrencyWallets
$CLI_EXE \
    --sn platform \
    --op QueryUserCurrencyWallets \
    --namespace $AB_NAMESPACE \
    --userId 'Rrhfxf0j' \
    > test.out 2>&1
eval_tap $? 293 'QueryUserCurrencyWallets' test.out

#- 294 DebitUserWalletByCurrencyCode
# body param: body
echo '{"allowOverdraft": false, "amount": 92, "balanceOrigin": "Other", "balanceSource": "TRADE", "metadata": {"oOlIftzP": {}, "cAgLOO48": {}, "3rfWIaH4": {}}, "reason": "daZmCg5E"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op DebitUserWalletByCurrencyCode \
    --currencyCode 'Cw6fH1vr' \
    --namespace $AB_NAMESPACE \
    --userId 'uxT8MqFZ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 294 'DebitUserWalletByCurrencyCode' test.out

#- 295 ListUserCurrencyTransactions
$CLI_EXE \
    --sn platform \
    --op ListUserCurrencyTransactions \
    --currencyCode 'mZOBXscI' \
    --namespace $AB_NAMESPACE \
    --userId '6PrjCSHB' \
    --limit '59' \
    --offset '37' \
    > test.out 2>&1
eval_tap $? 295 'ListUserCurrencyTransactions' test.out

#- 296 CheckBalance
# body param: request
echo '{"amount": 71, "debitBalanceSource": "IAP_REVOCATION", "metadata": {"HXuI4ihG": {}, "vydz61p9": {}, "78PHsvC8": {}}, "reason": "VwSm99qV", "walletPlatform": "IOS"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CheckBalance \
    --currencyCode '67Yd53Jc' \
    --namespace $AB_NAMESPACE \
    --userId 'NsOXj665' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 296 'CheckBalance' test.out

#- 297 CheckWallet
eval_tap 0 297 'CheckWallet # SKIP deprecated' test.out

#- 298 CreditUserWallet
# body param: body
echo '{"amount": 93, "expireAt": "1987-08-19T00:00:00Z", "metadata": {"1ff0KnNa": {}, "2zAy8uDu": {}, "3B9YnM2V": {}}, "origin": "Xbox", "reason": "5UituAIQ", "source": "DLC"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreditUserWallet \
    --currencyCode 'vUp7sHH2' \
    --namespace $AB_NAMESPACE \
    --userId 'LyyA7byN' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 298 'CreditUserWallet' test.out

#- 299 DebitByWalletPlatform
# body param: request
echo '{"amount": 60, "debitBalanceSource": "DLC_REVOCATION", "metadata": {"anZnSczF": {}, "Q3HaDtYQ": {}, "foLgQs10": {}}, "reason": "lsP1n1rp", "walletPlatform": "Other"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op DebitByWalletPlatform \
    --currencyCode 'ZNxC9miW' \
    --namespace $AB_NAMESPACE \
    --userId 'QQvF3UOz' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 299 'DebitByWalletPlatform' test.out

#- 300 PayWithUserWallet
# body param: body
echo '{"amount": 43, "metadata": {"jp8P3yUI": {}, "t3xnhAXq": {}, "anOVHyAQ": {}}, "walletPlatform": "Epic"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PayWithUserWallet \
    --currencyCode '8n4COcjc' \
    --namespace $AB_NAMESPACE \
    --userId 'dmtQknAO' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 300 'PayWithUserWallet' test.out

#- 301 GetUserWallet
eval_tap 0 301 'GetUserWallet # SKIP deprecated' test.out

#- 302 DebitUserWallet
eval_tap 0 302 'DebitUserWallet # SKIP deprecated' test.out

#- 303 DisableUserWallet
eval_tap 0 303 'DisableUserWallet # SKIP deprecated' test.out

#- 304 EnableUserWallet
eval_tap 0 304 'EnableUserWallet # SKIP deprecated' test.out

#- 305 ListUserWalletTransactions
eval_tap 0 305 'ListUserWalletTransactions # SKIP deprecated' test.out

#- 306 ListViews
$CLI_EXE \
    --sn platform \
    --op ListViews \
    --namespace $AB_NAMESPACE \
    --storeId 'uy0n97DD' \
    > test.out 2>&1
eval_tap $? 306 'ListViews' test.out

#- 307 CreateView
# body param: body
echo '{"displayOrder": 71, "localizations": {"rkoA3mnA": {"description": "gyQjWkWd", "localExt": {"CR1PAQlH": {}, "zAXe4NMM": {}, "HYavLneV": {}}, "longDescription": "8YRK0O8i", "title": "j4ghQ4Og"}, "GvSb3jbD": {"description": "p0rPNvZI", "localExt": {"32Ykw4bG": {}, "xykcq9WK": {}, "oXX1RZap": {}}, "longDescription": "xLMEIEvc", "title": "pnqANlfg"}, "tdwNSnrm": {"description": "MGTLo0vZ", "localExt": {"rBBNXVUD": {}, "Zdj6eprV": {}, "9qem18s0": {}}, "longDescription": "AUFYE4Da", "title": "Ajg30B7i"}}, "name": "NZBBPv7M"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateView \
    --namespace $AB_NAMESPACE \
    --storeId 'Ort6sye5' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 307 'CreateView' test.out

#- 308 GetView
$CLI_EXE \
    --sn platform \
    --op GetView \
    --namespace $AB_NAMESPACE \
    --viewId 'UhNl0Zwd' \
    --storeId 'DQVmXyW7' \
    > test.out 2>&1
eval_tap $? 308 'GetView' test.out

#- 309 UpdateView
# body param: body
echo '{"displayOrder": 71, "localizations": {"hM97sFGQ": {"description": "6uqJF5iR", "localExt": {"gBNGGjk6": {}, "KSu4OG9W": {}, "FTchK9IZ": {}}, "longDescription": "oaXKMCYO", "title": "khUvI9vI"}, "bdrLL1wv": {"description": "r9LgFOnM", "localExt": {"v4wsf3m4": {}, "Q3DWcPDu": {}, "oQyi5Eqg": {}}, "longDescription": "x3AoMLDL", "title": "nt5s3rf4"}, "FOgMMAJx": {"description": "DU8gFc2W", "localExt": {"mnhYtpDs": {}, "TYA1zUZb": {}, "cgHaS6WY": {}}, "longDescription": "nyfYNmZq", "title": "celSnskL"}}, "name": "yxluPYmO"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateView \
    --namespace $AB_NAMESPACE \
    --viewId 'aU6oXiFH' \
    --storeId 'gbgq5cM8' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 309 'UpdateView' test.out

#- 310 DeleteView
$CLI_EXE \
    --sn platform \
    --op DeleteView \
    --namespace $AB_NAMESPACE \
    --viewId 's8WeXX59' \
    --storeId 'tcmbGvkd' \
    > test.out 2>&1
eval_tap $? 310 'DeleteView' test.out

#- 311 QueryWallets
eval_tap 0 311 'QueryWallets # SKIP deprecated' test.out

#- 312 BulkCredit
# body param: body
echo '[{"creditRequest": {"amount": 78, "expireAt": "1978-07-11T00:00:00Z", "metadata": {"Cj4b1T9P": {}, "BvmBbdcL": {}, "6okJzsmf": {}}, "origin": "Steam", "reason": "jDlLhOdN", "source": "PURCHASE"}, "currencyCode": "J1Fr7Uct", "userIds": ["UBkcxQcU", "NdzhsxTR", "yv3LA3Qb"]}, {"creditRequest": {"amount": 4, "expireAt": "1991-08-20T00:00:00Z", "metadata": {"vDjSmgLI": {}, "Vsfr3SxW": {}, "2BoT0yTP": {}}, "origin": "System", "reason": "dAJa2QYp", "source": "REWARD"}, "currencyCode": "KslyRB2O", "userIds": ["kgbEidyO", "r5cCCQ4l", "FdAShrMz"]}, {"creditRequest": {"amount": 84, "expireAt": "1979-08-15T00:00:00Z", "metadata": {"LCOuzTDa": {}, "2uS9imNQ": {}, "JGwiR7cT": {}}, "origin": "Oculus", "reason": "YWLorBnp", "source": "REFERRAL_BONUS"}, "currencyCode": "5jHg8S0E", "userIds": ["AN90JXTF", "hkVEEfpw", "thk17c7A"]}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op BulkCredit \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 312 'BulkCredit' test.out

#- 313 BulkDebit
# body param: body
echo '[{"currencyCode": "OqCh94Af", "request": {"allowOverdraft": false, "amount": 24, "balanceOrigin": "Oculus", "balanceSource": "DLC_REVOCATION", "metadata": {"O7ZKNBox": {}, "oE3BPPEk": {}, "yZ9UCb4y": {}}, "reason": "kgWGacZg"}, "userIds": ["8Sue1due", "nITwGi26", "LjpdBM9R"]}, {"currencyCode": "mGrboDQx", "request": {"allowOverdraft": true, "amount": 21, "balanceOrigin": "System", "balanceSource": "EXPIRATION", "metadata": {"gddkA6IS": {}, "ErWV1OqS": {}, "OLqhYAEg": {}}, "reason": "WcYWTMUf"}, "userIds": ["tKVP004x", "BXv4wQ2g", "gsRfb5Bt"]}, {"currencyCode": "I479tIjB", "request": {"allowOverdraft": false, "amount": 91, "balanceOrigin": "Nintendo", "balanceSource": "PAYMENT", "metadata": {"kpPDitJT": {}, "6b1g00bA": {}, "uqohJ3N9": {}}, "reason": "n91UIjhX"}, "userIds": ["ObnyU8es", "TcBdLKsi", "g8bbty7D"]}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op BulkDebit \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 313 'BulkDebit' test.out

#- 314 GetWallet
eval_tap 0 314 'GetWallet # SKIP deprecated' test.out

#- 315 SyncOrders
$CLI_EXE \
    --sn platform \
    --op SyncOrders \
    --nextEvaluatedKey 'vvNj9Wa2' \
    --end 'aQNXVnKz' \
    --start '7XrBwaZs' \
    > test.out 2>&1
eval_tap $? 315 'SyncOrders' test.out

#- 316 TestAdyenConfig
# body param: body
echo '{"allowedPaymentMethods": ["ZyTpmPH8", "klxyA4UE", "PbtUQsQe"], "apiKey": "f34uxUX7", "authoriseAsCapture": true, "blockedPaymentMethods": ["pYBhjjSl", "epyPuJod", "1YIlx7s1"], "clientKey": "Q6sI6hlP", "dropInSettings": "kNYn9ysi", "liveEndpointUrlPrefix": "Gp58hRKl", "merchantAccount": "bVc7cLWz", "notificationHmacKey": "rmWSoFMq", "notificationPassword": "JmNo9QHg", "notificationUsername": "hkcO66dK", "returnUrl": "9Jn7EsPY", "settings": "9ois8H3G"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestAdyenConfig \
    --sandbox 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 316 'TestAdyenConfig' test.out

#- 317 TestAliPayConfig
# body param: body
echo '{"appId": "MjLY0iAj", "privateKey": "uIgxQ8Dr", "publicKey": "Xq7GWMsi", "returnUrl": "RCa5xeRX"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestAliPayConfig \
    --sandbox 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 317 'TestAliPayConfig' test.out

#- 318 TestCheckoutConfig
# body param: body
echo '{"publicKey": "KxnH0HwN", "secretKey": "iRkslsZv"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestCheckoutConfig \
    --sandbox 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 318 'TestCheckoutConfig' test.out

#- 319 DebugMatchedPaymentMerchantConfig
$CLI_EXE \
    --sn platform \
    --op DebugMatchedPaymentMerchantConfig \
    --namespace_ 'ZHue7yix' \
    --region 'ajYHkqDC' \
    > test.out 2>&1
eval_tap $? 319 'DebugMatchedPaymentMerchantConfig' test.out

#- 320 TestPayPalConfig
# body param: body
echo '{"clientID": "qfXyNjuJ", "clientSecret": "NlMDZcY3", "returnUrl": "Ai9Tsu8X", "webHookId": "EiO9aOXX"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestPayPalConfig \
    --sandbox 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 320 'TestPayPalConfig' test.out

#- 321 TestStripeConfig
# body param: body
echo '{"allowedPaymentMethodTypes": ["7aGqxn5O", "4zsbdMgz", "J6KjgDHe"], "publishableKey": "O0QnWPBs", "secretKey": "vHGW3lTO", "webhookSecret": "Ojbz58fZ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestStripeConfig \
    --sandbox 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 321 'TestStripeConfig' test.out

#- 322 TestWxPayConfig
# body param: body
echo '{"appId": "brkDpDiL", "key": "oO4RBNSt", "mchid": "o5R6ynGH", "returnUrl": "jdZ8i4Kw"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestWxPayConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 322 'TestWxPayConfig' test.out

#- 323 TestXsollaConfig
# body param: body
echo '{"apiKey": "egUzFYW9", "flowCompletionUrl": "GmFqvBpO", "merchantId": 79, "projectId": 49, "projectSecretKey": "kauZ85Ak"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestXsollaConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 323 'TestXsollaConfig' test.out

#- 324 GetPaymentMerchantConfig
$CLI_EXE \
    --sn platform \
    --op GetPaymentMerchantConfig \
    --id '85MMiN6E' \
    > test.out 2>&1
eval_tap $? 324 'GetPaymentMerchantConfig' test.out

#- 325 UpdateAdyenConfig
# body param: body
echo '{"allowedPaymentMethods": ["anXasdrd", "0FyleTJV", "C5M16fwK"], "apiKey": "83T3HehC", "authoriseAsCapture": true, "blockedPaymentMethods": ["3IQ1Bxr8", "NeQ7hpT3", "tZ4fhwV4"], "clientKey": "D9mwmPxK", "dropInSettings": "vTSxGR0T", "liveEndpointUrlPrefix": "CRXJaA87", "merchantAccount": "5zVufbfW", "notificationHmacKey": "WkU8VwjM", "notificationPassword": "dlb5kdIs", "notificationUsername": "hk2Tm31J", "returnUrl": "nJrIzAR4", "settings": "FpXMNrgs"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateAdyenConfig \
    --id 'Cxgn4Spd' \
    --sandbox 'false' \
    --validate 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 325 'UpdateAdyenConfig' test.out

#- 326 TestAdyenConfigById
$CLI_EXE \
    --sn platform \
    --op TestAdyenConfigById \
    --id '6oZUqsi2' \
    --sandbox 'true' \
    > test.out 2>&1
eval_tap $? 326 'TestAdyenConfigById' test.out

#- 327 UpdateAliPayConfig
# body param: body
echo '{"appId": "SYr3sWQV", "privateKey": "4Dtymmvb", "publicKey": "gH4TV8Dv", "returnUrl": "8x2dYklU"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateAliPayConfig \
    --id 'NOfotv4k' \
    --sandbox 'false' \
    --validate 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 327 'UpdateAliPayConfig' test.out

#- 328 TestAliPayConfigById
$CLI_EXE \
    --sn platform \
    --op TestAliPayConfigById \
    --id 'chenpkAk' \
    --sandbox 'true' \
    > test.out 2>&1
eval_tap $? 328 'TestAliPayConfigById' test.out

#- 329 UpdateCheckoutConfig
# body param: body
echo '{"publicKey": "DXJQzSPk", "secretKey": "t5U8LWyC"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCheckoutConfig \
    --id 'gkABqqtu' \
    --sandbox 'true' \
    --validate 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 329 'UpdateCheckoutConfig' test.out

#- 330 TestCheckoutConfigById
$CLI_EXE \
    --sn platform \
    --op TestCheckoutConfigById \
    --id 'kd4Qimc7' \
    --sandbox 'true' \
    > test.out 2>&1
eval_tap $? 330 'TestCheckoutConfigById' test.out

#- 331 UpdatePayPalConfig
# body param: body
echo '{"clientID": "uVj3EuJ4", "clientSecret": "GkjN9gNA", "returnUrl": "Aof5g879", "webHookId": "2YckBjT4"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePayPalConfig \
    --id 'mDknCpSd' \
    --sandbox 'false' \
    --validate 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 331 'UpdatePayPalConfig' test.out

#- 332 TestPayPalConfigById
$CLI_EXE \
    --sn platform \
    --op TestPayPalConfigById \
    --id 'fNEJ3zCh' \
    --sandbox 'true' \
    > test.out 2>&1
eval_tap $? 332 'TestPayPalConfigById' test.out

#- 333 UpdateStripeConfig
# body param: body
echo '{"allowedPaymentMethodTypes": ["u6Qzq5KJ", "Tvhr0lQ7", "YKslYp1t"], "publishableKey": "1tZPHwME", "secretKey": "oXliG94z", "webhookSecret": "XCXIsCKE"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateStripeConfig \
    --id 'XycED22S' \
    --sandbox 'true' \
    --validate 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 333 'UpdateStripeConfig' test.out

#- 334 TestStripeConfigById
$CLI_EXE \
    --sn platform \
    --op TestStripeConfigById \
    --id 'S4HL8Dig' \
    --sandbox 'true' \
    > test.out 2>&1
eval_tap $? 334 'TestStripeConfigById' test.out

#- 335 UpdateWxPayConfig
# body param: body
echo '{"appId": "2XpoJ7Bo", "key": "rtYaGrOu", "mchid": "6ku7Jx0T", "returnUrl": "vw8sOnRL"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateWxPayConfig \
    --id 'NWKJgUxJ' \
    --validate 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 335 'UpdateWxPayConfig' test.out

#- 336 UpdateWxPayConfigCert
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UpdateWxPayConfigCert \
    --id 'XcXaKzQh' \
    --upload file $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 336 'UpdateWxPayConfigCert' test.out

#- 337 TestWxPayConfigById
$CLI_EXE \
    --sn platform \
    --op TestWxPayConfigById \
    --id 'pCJzCj9w' \
    > test.out 2>&1
eval_tap $? 337 'TestWxPayConfigById' test.out

#- 338 UpdateXsollaConfig
# body param: body
echo '{"apiKey": "jrXe8eET", "flowCompletionUrl": "rh3kScZt", "merchantId": 51, "projectId": 74, "projectSecretKey": "wQHvLfIg"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXsollaConfig \
    --id 'RlOymJf4' \
    --validate 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 338 'UpdateXsollaConfig' test.out

#- 339 TestXsollaConfigById
$CLI_EXE \
    --sn platform \
    --op TestXsollaConfigById \
    --id 'J9R1OxXL' \
    > test.out 2>&1
eval_tap $? 339 'TestXsollaConfigById' test.out

#- 340 UpdateXsollaUIConfig
# body param: body
echo '{"device": "MOBILE", "showCloseButton": true, "size": "MEDIUM", "theme": "DEFAULT"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXsollaUIConfig \
    --id 'z3Wlq0wr' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 340 'UpdateXsollaUIConfig' test.out

#- 341 QueryPaymentProviderConfig
$CLI_EXE \
    --sn platform \
    --op QueryPaymentProviderConfig \
    --limit '66' \
    --namespace_ 'pRSx1uND' \
    --offset '42' \
    --region 'JxY5Dxts' \
    > test.out 2>&1
eval_tap $? 341 'QueryPaymentProviderConfig' test.out

#- 342 CreatePaymentProviderConfig
# body param: body
echo '{"aggregate": "ADYEN", "namespace": "Wy9Pry5l", "region": "Nn97oOxy", "sandboxTaxJarApiToken": "ENWw9lp0", "specials": ["STRIPE", "XSOLLA", "PAYPAL"], "taxJarApiToken": "jiSi9nQ1", "taxJarEnabled": false, "useGlobalTaxJarApiToken": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreatePaymentProviderConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 342 'CreatePaymentProviderConfig' test.out

#- 343 GetAggregatePaymentProviders
$CLI_EXE \
    --sn platform \
    --op GetAggregatePaymentProviders \
    > test.out 2>&1
eval_tap $? 343 'GetAggregatePaymentProviders' test.out

#- 344 DebugMatchedPaymentProviderConfig
$CLI_EXE \
    --sn platform \
    --op DebugMatchedPaymentProviderConfig \
    --namespace_ '0QlF8csz' \
    --region 'ImMAKMCW' \
    > test.out 2>&1
eval_tap $? 344 'DebugMatchedPaymentProviderConfig' test.out

#- 345 GetSpecialPaymentProviders
$CLI_EXE \
    --sn platform \
    --op GetSpecialPaymentProviders \
    > test.out 2>&1
eval_tap $? 345 'GetSpecialPaymentProviders' test.out

#- 346 UpdatePaymentProviderConfig
# body param: body
echo '{"aggregate": "XSOLLA", "namespace": "84W2FULJ", "region": "cxmoqG85", "sandboxTaxJarApiToken": "Anak9jhd", "specials": ["XSOLLA", "CHECKOUT", "WALLET"], "taxJarApiToken": "5xHxo1U9", "taxJarEnabled": true, "useGlobalTaxJarApiToken": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePaymentProviderConfig \
    --id 'xBSZ640R' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 346 'UpdatePaymentProviderConfig' test.out

#- 347 DeletePaymentProviderConfig
$CLI_EXE \
    --sn platform \
    --op DeletePaymentProviderConfig \
    --id 'Cv2sEW9M' \
    > test.out 2>&1
eval_tap $? 347 'DeletePaymentProviderConfig' test.out

#- 348 GetPaymentTaxConfig
$CLI_EXE \
    --sn platform \
    --op GetPaymentTaxConfig \
    > test.out 2>&1
eval_tap $? 348 'GetPaymentTaxConfig' test.out

#- 349 UpdatePaymentTaxConfig
# body param: body
echo '{"sandboxTaxJarApiToken": "qZn0HKyK", "taxJarApiToken": "kQPmSsfU", "taxJarEnabled": false, "taxJarProductCodesMapping": {"EHhhOrCm": "eCXdkUsN", "ZpXaCuYx": "EEnPpkaO", "Pk8UiLS3": "ytCiqadw"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePaymentTaxConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 349 'UpdatePaymentTaxConfig' test.out

#- 350 SyncPaymentOrders
$CLI_EXE \
    --sn platform \
    --op SyncPaymentOrders \
    --nextEvaluatedKey 'OzC8x5J5' \
    --end '8SceCOCo' \
    --start '7Lh0rpms' \
    > test.out 2>&1
eval_tap $? 350 'SyncPaymentOrders' test.out

#- 351 PublicGetRootCategories
$CLI_EXE \
    --sn platform \
    --op PublicGetRootCategories \
    --namespace $AB_NAMESPACE \
    --language 'FwQtNc9D' \
    --storeId '2YSl579Q' \
    > test.out 2>&1
eval_tap $? 351 'PublicGetRootCategories' test.out

#- 352 DownloadCategories
$CLI_EXE \
    --sn platform \
    --op DownloadCategories \
    --namespace $AB_NAMESPACE \
    --language 'xLzAX9ir' \
    --storeId 'fhooVva8' \
    > test.out 2>&1
eval_tap $? 352 'DownloadCategories' test.out

#- 353 PublicGetCategory
$CLI_EXE \
    --sn platform \
    --op PublicGetCategory \
    --categoryPath 'QVwEL7Kz' \
    --namespace $AB_NAMESPACE \
    --language 'qPvdnqNc' \
    --storeId 'Ad4hQR7y' \
    > test.out 2>&1
eval_tap $? 353 'PublicGetCategory' test.out

#- 354 PublicGetChildCategories
$CLI_EXE \
    --sn platform \
    --op PublicGetChildCategories \
    --categoryPath 'LdfdWd0c' \
    --namespace $AB_NAMESPACE \
    --language 'wiSgZEGn' \
    --storeId 'fE3Eyn2B' \
    > test.out 2>&1
eval_tap $? 354 'PublicGetChildCategories' test.out

#- 355 PublicGetDescendantCategories
$CLI_EXE \
    --sn platform \
    --op PublicGetDescendantCategories \
    --categoryPath 'wb0NT0A8' \
    --namespace $AB_NAMESPACE \
    --language '2vqh6Pym' \
    --storeId 'aWkKRbOI' \
    > test.out 2>&1
eval_tap $? 355 'PublicGetDescendantCategories' test.out

#- 356 PublicListCurrencies
$CLI_EXE \
    --sn platform \
    --op PublicListCurrencies \
    --namespace $AB_NAMESPACE \
    --currencyType 'VIRTUAL' \
    > test.out 2>&1
eval_tap $? 356 'PublicListCurrencies' test.out

#- 357 GeDLCDurableRewardShortMap
$CLI_EXE \
    --sn platform \
    --op GeDLCDurableRewardShortMap \
    --namespace $AB_NAMESPACE \
    --dlcType 'STEAM' \
    > test.out 2>&1
eval_tap $? 357 'GeDLCDurableRewardShortMap' test.out

#- 358 GetIAPItemMapping
$CLI_EXE \
    --sn platform \
    --op GetIAPItemMapping \
    --namespace $AB_NAMESPACE \
    --platform 'STADIA' \
    > test.out 2>&1
eval_tap $? 358 'GetIAPItemMapping' test.out

#- 359 PublicGetItemByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetItemByAppId \
    --namespace $AB_NAMESPACE \
    --language 'aOZ4wX7O' \
    --region 'zTFuzu8X' \
    --storeId 'pfJ77hfs' \
    --appId 'HIjOVLcc' \
    > test.out 2>&1
eval_tap $? 359 'PublicGetItemByAppId' test.out

#- 360 PublicQueryItems
$CLI_EXE \
    --sn platform \
    --op PublicQueryItems \
    --namespace $AB_NAMESPACE \
    --appType 'GAME' \
    --autoCalcEstimatedPrice 'true' \
    --baseAppId 'oT8xLnA3' \
    --categoryPath 'sb0zd0R0' \
    --features 'vMhYKs1r' \
    --includeSubCategoryItem 'true' \
    --itemType 'OPTIONBOX' \
    --language 'H3wAl2Eg' \
    --limit '75' \
    --offset '56' \
    --region 'ghQgTRTL' \
    --sortBy '["name:desc", "createdAt", "displayOrder"]' \
    --storeId '9s0Gxfsk' \
    --tags 'yxQuZYNH' \
    > test.out 2>&1
eval_tap $? 360 'PublicQueryItems' test.out

#- 361 PublicGetItemBySku
$CLI_EXE \
    --sn platform \
    --op PublicGetItemBySku \
    --namespace $AB_NAMESPACE \
    --autoCalcEstimatedPrice 'false' \
    --language 'nR09jjnF' \
    --region '5ag8qGYT' \
    --storeId 'vJikmIiW' \
    --sku 'xFM0V21s' \
    > test.out 2>&1
eval_tap $? 361 'PublicGetItemBySku' test.out

#- 362 PublicGetEstimatedPrice
$CLI_EXE \
    --sn platform \
    --op PublicGetEstimatedPrice \
    --namespace $AB_NAMESPACE \
    --region '5ZH4VSPC' \
    --storeId 'XmrJZCbG' \
    --itemIds 'H6ox1QhK' \
    > test.out 2>&1
eval_tap $? 362 'PublicGetEstimatedPrice' test.out

#- 363 PublicBulkGetItems
$CLI_EXE \
    --sn platform \
    --op PublicBulkGetItems \
    --namespace $AB_NAMESPACE \
    --autoCalcEstimatedPrice 'false' \
    --language 'lkMbtT3i' \
    --region 'j06OxtcH' \
    --storeId 'mnWTybXZ' \
    --itemIds 'GQdUa6eG' \
    > test.out 2>&1
eval_tap $? 363 'PublicBulkGetItems' test.out

#- 364 PublicValidateItemPurchaseCondition
# body param: body
echo '{"itemIds": ["w8z4r1H8", "rK51tTem", "dh1njUjJ"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicValidateItemPurchaseCondition \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 364 'PublicValidateItemPurchaseCondition' test.out

#- 365 PublicSearchItems
$CLI_EXE \
    --sn platform \
    --op PublicSearchItems \
    --namespace $AB_NAMESPACE \
    --autoCalcEstimatedPrice 'false' \
    --itemType 'APP' \
    --limit '88' \
    --offset '51' \
    --region 'UxI9psaS' \
    --storeId 'pAtCTNAm' \
    --keyword 'dCspJeb4' \
    --language '0GJtmtjC' \
    > test.out 2>&1
eval_tap $? 365 'PublicSearchItems' test.out

#- 366 PublicGetApp
$CLI_EXE \
    --sn platform \
    --op PublicGetApp \
    --itemId 'd9HSUnW6' \
    --namespace $AB_NAMESPACE \
    --language '99AcNQXR' \
    --region 'dx6vw4x2' \
    --storeId 'OJIteWiy' \
    > test.out 2>&1
eval_tap $? 366 'PublicGetApp' test.out

#- 367 PublicGetItemDynamicData
$CLI_EXE \
    --sn platform \
    --op PublicGetItemDynamicData \
    --itemId 'PI9CdoXm' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 367 'PublicGetItemDynamicData' test.out

#- 368 PublicGetItem
$CLI_EXE \
    --sn platform \
    --op PublicGetItem \
    --itemId 'Ls7p5KFt' \
    --namespace $AB_NAMESPACE \
    --autoCalcEstimatedPrice 'false' \
    --language 'oyjx4sKS' \
    --populateBundle 'false' \
    --region 'nXvYrbIP' \
    --storeId '3cXS3pGx' \
    > test.out 2>&1
eval_tap $? 368 'PublicGetItem' test.out

#- 369 GetPaymentCustomization
eval_tap 0 369 'GetPaymentCustomization # SKIP deprecated' test.out

#- 370 PublicGetPaymentUrl
# body param: body
echo '{"paymentOrderNo": "LZLQbkWW", "paymentProvider": "ALIPAY", "returnUrl": "8VThYAZI", "ui": "1Cz2o9w5", "zipCode": "cVFjqxNd"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicGetPaymentUrl \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 370 'PublicGetPaymentUrl' test.out

#- 371 PublicGetPaymentMethods
$CLI_EXE \
    --sn platform \
    --op PublicGetPaymentMethods \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'HObm0Zht' \
    > test.out 2>&1
eval_tap $? 371 'PublicGetPaymentMethods' test.out

#- 372 PublicGetUnpaidPaymentOrder
$CLI_EXE \
    --sn platform \
    --op PublicGetUnpaidPaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo '9c48ujVB' \
    > test.out 2>&1
eval_tap $? 372 'PublicGetUnpaidPaymentOrder' test.out

#- 373 Pay
# body param: body
echo '{"token": "9DTVFQml"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op Pay \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'gy4tTsur' \
    --paymentProvider 'ADYEN' \
    --zipCode 'l5dQcNfa' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 373 'Pay' test.out

#- 374 PublicCheckPaymentOrderPaidStatus
$CLI_EXE \
    --sn platform \
    --op PublicCheckPaymentOrderPaidStatus \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'XLEEdF7X' \
    > test.out 2>&1
eval_tap $? 374 'PublicCheckPaymentOrderPaidStatus' test.out

#- 375 GetPaymentPublicConfig
$CLI_EXE \
    --sn platform \
    --op GetPaymentPublicConfig \
    --namespace $AB_NAMESPACE \
    --sandbox 'false' \
    --paymentProvider 'WXPAY' \
    --region '6j5e6y4x' \
    > test.out 2>&1
eval_tap $? 375 'GetPaymentPublicConfig' test.out

#- 376 PublicGetQRCode
$CLI_EXE \
    --sn platform \
    --op PublicGetQRCode \
    --namespace $AB_NAMESPACE \
    --code 'GzMhJtWF' \
    > test.out 2>&1
eval_tap $? 376 'PublicGetQRCode' test.out

#- 377 PublicNormalizePaymentReturnUrl
$CLI_EXE \
    --sn platform \
    --op PublicNormalizePaymentReturnUrl \
    --namespace $AB_NAMESPACE \
    --payerID 'e1LnOt7L' \
    --foreinginvoice 'AyQgwLL2' \
    --invoiceId 'CV6RwMMG' \
    --payload 'hiAIil17' \
    --redirectResult '2K99uvmL' \
    --resultCode 'ipcw8Gp2' \
    --sessionId 'vQI0DZ87' \
    --status 'YMMUEzuG' \
    --token 'I4y6gRnA' \
    --type '1ian6ojp' \
    --userId 'X7zwaYoK' \
    --orderNo 'ivxPkqXn' \
    --paymentOrderNo 'xYmFw8fH' \
    --paymentProvider 'WXPAY' \
    --returnUrl 'pyT4BMIy' \
    > test.out 2>&1
eval_tap $? 377 'PublicNormalizePaymentReturnUrl' test.out

#- 378 GetPaymentTaxValue
$CLI_EXE \
    --sn platform \
    --op GetPaymentTaxValue \
    --namespace $AB_NAMESPACE \
    --zipCode 'rPOTGftc' \
    --paymentOrderNo 'MaKXrN2I' \
    --paymentProvider 'WXPAY' \
    > test.out 2>&1
eval_tap $? 378 'GetPaymentTaxValue' test.out

#- 379 GetRewardByCode
$CLI_EXE \
    --sn platform \
    --op GetRewardByCode \
    --namespace $AB_NAMESPACE \
    --rewardCode 't3MeqCGo' \
    > test.out 2>&1
eval_tap $? 379 'GetRewardByCode' test.out

#- 380 QueryRewards1
$CLI_EXE \
    --sn platform \
    --op QueryRewards1 \
    --namespace $AB_NAMESPACE \
    --eventTopic 'o8KNArhA' \
    --limit '97' \
    --offset '31' \
    --sortBy '["namespace:desc", "namespace"]' \
    > test.out 2>&1
eval_tap $? 380 'QueryRewards1' test.out

#- 381 GetReward1
$CLI_EXE \
    --sn platform \
    --op GetReward1 \
    --namespace $AB_NAMESPACE \
    --rewardId 'WO598sQw' \
    > test.out 2>&1
eval_tap $? 381 'GetReward1' test.out

#- 382 PublicListStores
$CLI_EXE \
    --sn platform \
    --op PublicListStores \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 382 'PublicListStores' test.out

#- 383 PublicExistsAnyMyActiveEntitlement
$CLI_EXE \
    --sn platform \
    --op PublicExistsAnyMyActiveEntitlement \
    --namespace $AB_NAMESPACE \
    --appIds '["nPFJlPDV", "2vYZGk3e", "CYmpF9GG"]' \
    --itemIds '["8RynTzkj", "20sm56pG", "xOSk2BD2"]' \
    --skus '["gRajnqVs", "FZEg1C9X", "sYyt8w7S"]' \
    > test.out 2>&1
eval_tap $? 383 'PublicExistsAnyMyActiveEntitlement' test.out

#- 384 PublicGetMyAppEntitlementOwnershipByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetMyAppEntitlementOwnershipByAppId \
    --namespace $AB_NAMESPACE \
    --appId 'MsjPcDTD' \
    > test.out 2>&1
eval_tap $? 384 'PublicGetMyAppEntitlementOwnershipByAppId' test.out

#- 385 PublicGetMyEntitlementOwnershipByItemId
$CLI_EXE \
    --sn platform \
    --op PublicGetMyEntitlementOwnershipByItemId \
    --namespace $AB_NAMESPACE \
    --entitlementClazz 'CODE' \
    --itemId 'c2yNe5D7' \
    > test.out 2>&1
eval_tap $? 385 'PublicGetMyEntitlementOwnershipByItemId' test.out

#- 386 PublicGetMyEntitlementOwnershipBySku
$CLI_EXE \
    --sn platform \
    --op PublicGetMyEntitlementOwnershipBySku \
    --namespace $AB_NAMESPACE \
    --entitlementClazz 'OPTIONBOX' \
    --sku '9gHCXHAC' \
    > test.out 2>&1
eval_tap $? 386 'PublicGetMyEntitlementOwnershipBySku' test.out

#- 387 PublicGetEntitlementOwnershipToken
$CLI_EXE \
    --sn platform \
    --op PublicGetEntitlementOwnershipToken \
    --namespace $AB_NAMESPACE \
    --appIds '["bH1tn5aP", "kEvjl1sx", "QVn6DqLr"]' \
    --itemIds '["EwmjqtM0", "Dci04kJz", "YE5akXMN"]' \
    --skus '["suRkRS6l", "QlZ733lU", "yMvPpFjY"]' \
    > test.out 2>&1
eval_tap $? 387 'PublicGetEntitlementOwnershipToken' test.out

#- 388 SyncTwitchDropsEntitlement
# body param: body
echo '{"gameId": "svYZsMV1", "language": "aw", "region": "vwL1AsC4"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncTwitchDropsEntitlement \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 388 'SyncTwitchDropsEntitlement' test.out

#- 389 PublicGetMyWallet
$CLI_EXE \
    --sn platform \
    --op PublicGetMyWallet \
    --currencyCode '6vguGgvS' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 389 'PublicGetMyWallet' test.out

#- 390 SyncEpicGameDLC
# body param: body
echo '{"epicGamesJwtToken": "C3QGp7Zy"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncEpicGameDLC \
    --namespace $AB_NAMESPACE \
    --userId 'MUdSk2Qo' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 390 'SyncEpicGameDLC' test.out

#- 391 SyncOculusDLC
$CLI_EXE \
    --sn platform \
    --op SyncOculusDLC \
    --namespace $AB_NAMESPACE \
    --userId 'X2nC50Cx' \
    > test.out 2>&1
eval_tap $? 391 'SyncOculusDLC' test.out

#- 392 PublicSyncPsnDlcInventory
# body param: body
echo '{"serviceLabel": 81}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicSyncPsnDlcInventory \
    --namespace $AB_NAMESPACE \
    --userId 'MaNeLX2D' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 392 'PublicSyncPsnDlcInventory' test.out

#- 393 PublicSyncPsnDlcInventoryWithMultipleServiceLabels
# body param: body
echo '{"serviceLabels": [13, 52, 29]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicSyncPsnDlcInventoryWithMultipleServiceLabels \
    --namespace $AB_NAMESPACE \
    --userId 'wKc732H4' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 393 'PublicSyncPsnDlcInventoryWithMultipleServiceLabels' test.out

#- 394 SyncSteamDLC
# body param: body
echo '{"appId": "UQNkuasX", "steamId": "F1qcpQJj"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncSteamDLC \
    --namespace $AB_NAMESPACE \
    --userId 'wmJRKLrz' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 394 'SyncSteamDLC' test.out

#- 395 SyncXboxDLC
# body param: body
echo '{"xstsToken": "RzrFgSgt"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncXboxDLC \
    --namespace $AB_NAMESPACE \
    --userId 'W0ruULv0' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 395 'SyncXboxDLC' test.out

#- 396 PublicQueryUserEntitlements
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserEntitlements \
    --namespace $AB_NAMESPACE \
    --userId 'AeB4p5z7' \
    --appType 'SOFTWARE' \
    --entitlementClazz 'OPTIONBOX' \
    --entitlementName '4Scon119' \
    --features '["J4uX9XRE", "foIKxzcs", "vvGFR9w9"]' \
    --itemId '["YD1N5Byt", "HvKJ1ibN", "FXDrlEjB"]' \
    --limit '45' \
    --offset '78' \
    > test.out 2>&1
eval_tap $? 396 'PublicQueryUserEntitlements' test.out

#- 397 PublicGetUserAppEntitlementByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetUserAppEntitlementByAppId \
    --namespace $AB_NAMESPACE \
    --userId 'r1fnraGM' \
    --appId 'AbLvT8qI' \
    > test.out 2>&1
eval_tap $? 397 'PublicGetUserAppEntitlementByAppId' test.out

#- 398 PublicQueryUserEntitlementsByAppType
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserEntitlementsByAppType \
    --namespace $AB_NAMESPACE \
    --userId 'Q9lVYCWq' \
    --limit '77' \
    --offset '79' \
    --appType 'DLC' \
    > test.out 2>&1
eval_tap $? 398 'PublicQueryUserEntitlementsByAppType' test.out

#- 399 PublicGetUserEntitlementsByIds
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementsByIds \
    --namespace $AB_NAMESPACE \
    --userId 'iIzndGfC' \
    --availablePlatformOnly 'false' \
    --ids '["rjI3BzIG", "OegvQOrH", "F4xx6Pzb"]' \
    > test.out 2>&1
eval_tap $? 399 'PublicGetUserEntitlementsByIds' test.out

#- 400 PublicGetUserEntitlementByItemId
eval_tap 0 400 'PublicGetUserEntitlementByItemId # SKIP deprecated' test.out

#- 401 PublicGetUserEntitlementBySku
eval_tap 0 401 'PublicGetUserEntitlementBySku # SKIP deprecated' test.out

#- 402 PublicExistsAnyUserActiveEntitlement
$CLI_EXE \
    --sn platform \
    --op PublicExistsAnyUserActiveEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'HT67DkKk' \
    --appIds '["vLdkiESo", "HtPyCQqa", "GJSyMHnf"]' \
    --itemIds '["4tXkaETd", "4BKn1c6A", "OptnsUgA"]' \
    --skus '["I8rFdHYG", "PSe4kFXv", "jm4Kdr5j"]' \
    > test.out 2>&1
eval_tap $? 402 'PublicExistsAnyUserActiveEntitlement' test.out

#- 403 PublicGetUserAppEntitlementOwnershipByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetUserAppEntitlementOwnershipByAppId \
    --namespace $AB_NAMESPACE \
    --userId 'kWd4GdqH' \
    --appId 'YIC4AOfE' \
    > test.out 2>&1
eval_tap $? 403 'PublicGetUserAppEntitlementOwnershipByAppId' test.out

#- 404 PublicGetUserEntitlementOwnershipByItemId
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementOwnershipByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'aJnGSQNO' \
    --entitlementClazz 'ENTITLEMENT' \
    --itemId 'FpPR4mqY' \
    > test.out 2>&1
eval_tap $? 404 'PublicGetUserEntitlementOwnershipByItemId' test.out

#- 405 PublicGetUserEntitlementOwnershipByItemIds
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementOwnershipByItemIds \
    --namespace $AB_NAMESPACE \
    --userId 'dK0kZXPf' \
    --ids '["bCXbn7nj", "2afL49mB", "UGqrpYP7"]' \
    > test.out 2>&1
eval_tap $? 405 'PublicGetUserEntitlementOwnershipByItemIds' test.out

#- 406 PublicGetUserEntitlementOwnershipBySku
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementOwnershipBySku \
    --namespace $AB_NAMESPACE \
    --userId 'GYckxR77' \
    --entitlementClazz 'APP' \
    --sku '3UyA5pvD' \
    > test.out 2>&1
eval_tap $? 406 'PublicGetUserEntitlementOwnershipBySku' test.out

#- 407 PublicGetUserEntitlement
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlement \
    --entitlementId 'ApXaeBmB' \
    --namespace $AB_NAMESPACE \
    --userId 'hKDMcMyT' \
    > test.out 2>&1
eval_tap $? 407 'PublicGetUserEntitlement' test.out

#- 408 PublicConsumeUserEntitlement
# body param: body
echo '{"options": ["iuVir5k9", "F0DaPgmc", "xh0ipTRu"], "requestId": "SgvqnTpF", "useCount": 33}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicConsumeUserEntitlement \
    --entitlementId '5fcPVoKQ' \
    --namespace $AB_NAMESPACE \
    --userId 'D9UD3HDj' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 408 'PublicConsumeUserEntitlement' test.out

#- 409 PublicSellUserEntitlement
# body param: body
echo '{"requestId": "nGQcYgxm", "useCount": 41}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicSellUserEntitlement \
    --entitlementId 'BFRI9pb1' \
    --namespace $AB_NAMESPACE \
    --userId 'ITVTfhH9' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 409 'PublicSellUserEntitlement' test.out

#- 410 PublicSplitUserEntitlement
# body param: body
echo '{"useCount": 29}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicSplitUserEntitlement \
    --entitlementId '3PxHQSsP' \
    --namespace $AB_NAMESPACE \
    --userId 'd6VrMYtT' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 410 'PublicSplitUserEntitlement' test.out

#- 411 PublicTransferUserEntitlement
# body param: body
echo '{"entitlementId": "j2L9sWvE", "useCount": 72}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicTransferUserEntitlement \
    --entitlementId 'psl2H679' \
    --namespace $AB_NAMESPACE \
    --userId 'tZfz7q6C' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 411 'PublicTransferUserEntitlement' test.out

#- 412 PublicRedeemCode
# body param: body
echo '{"code": "vvyLJIT9", "language": "INU-ABVK", "region": "5JoQFpew"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicRedeemCode \
    --namespace $AB_NAMESPACE \
    --userId 'iXe9jscH' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 412 'PublicRedeemCode' test.out

#- 413 PublicFulfillAppleIAPItem
# body param: body
echo '{"excludeOldTransactions": false, "language": "QKk-BXGr", "productId": "kc743eKT", "receiptData": "EAS8oVnx", "region": "XmaRlWB1", "transactionId": "tNh8HeZ5"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicFulfillAppleIAPItem \
    --namespace $AB_NAMESPACE \
    --userId 'e1x2FLoH' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 413 'PublicFulfillAppleIAPItem' test.out

#- 414 SyncEpicGamesInventory
# body param: body
echo '{"epicGamesJwtToken": "e9JwKWPQ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncEpicGamesInventory \
    --namespace $AB_NAMESPACE \
    --userId 'DRwoTSkb' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 414 'SyncEpicGamesInventory' test.out

#- 415 PublicFulfillGoogleIAPItem
# body param: body
echo '{"autoAck": true, "language": "bg-Fo", "orderId": "t2xDTdvH", "packageName": "xUuyPte5", "productId": "Wz4EM9KY", "purchaseTime": 58, "purchaseToken": "NwcxAhZv", "region": "jNQBOTB1"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicFulfillGoogleIAPItem \
    --namespace $AB_NAMESPACE \
    --userId 'rCcGjB5Y' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 415 'PublicFulfillGoogleIAPItem' test.out

#- 416 SyncOculusConsumableEntitlements
$CLI_EXE \
    --sn platform \
    --op SyncOculusConsumableEntitlements \
    --namespace $AB_NAMESPACE \
    --userId 'ge68oUuy' \
    > test.out 2>&1
eval_tap $? 416 'SyncOculusConsumableEntitlements' test.out

#- 417 PublicReconcilePlayStationStore
# body param: body
echo '{"currencyCode": "zEcVNRNG", "price": 0.6358923204283233, "productId": "9cMN7aat", "serviceLabel": 32}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicReconcilePlayStationStore \
    --namespace $AB_NAMESPACE \
    --userId 'Gn5gDGIC' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 417 'PublicReconcilePlayStationStore' test.out

#- 418 PublicReconcilePlayStationStoreWithMultipleServiceLabels
# body param: body
echo '{"currencyCode": "woXDj1wl", "price": 0.3159847968167798, "productId": "Q5hzaxPE", "serviceLabels": [49, 97, 14]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicReconcilePlayStationStoreWithMultipleServiceLabels \
    --namespace $AB_NAMESPACE \
    --userId 'SrWeTmRk' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 418 'PublicReconcilePlayStationStoreWithMultipleServiceLabels' test.out

#- 419 SyncSteamInventory
# body param: body
echo '{"appId": "c2hp98ik", "currencyCode": "Db8T1rtF", "language": "cEt_pYVQ", "price": 0.12437158396971593, "productId": "rLiWo3Eg", "region": "zkCZpdwo", "steamId": "IT8wdAAO"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncSteamInventory \
    --namespace $AB_NAMESPACE \
    --userId 'wnul8gq0' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 419 'SyncSteamInventory' test.out

#- 420 SyncTwitchDropsEntitlement1
# body param: body
echo '{"gameId": "3p5AHsD5", "language": "TjbR", "region": "EIqyhFnq"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncTwitchDropsEntitlement1 \
    --namespace $AB_NAMESPACE \
    --userId 'DnBEKwHX' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 420 'SyncTwitchDropsEntitlement1' test.out

#- 421 SyncXboxInventory
# body param: body
echo '{"currencyCode": "BTE1UMVD", "price": 0.35346281942682556, "productId": "xIIA2TDY", "xstsToken": "BHCXmuHO"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncXboxInventory \
    --namespace $AB_NAMESPACE \
    --userId 'lay5DujC' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 421 'SyncXboxInventory' test.out

#- 422 PublicQueryUserOrders
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserOrders \
    --namespace $AB_NAMESPACE \
    --userId 'ZsG4EbLZ' \
    --itemId 'jnFJCKCQ' \
    --limit '10' \
    --offset '30' \
    --status 'REFUND_FAILED' \
    > test.out 2>&1
eval_tap $? 422 'PublicQueryUserOrders' test.out

#- 423 PublicCreateUserOrder
# body param: body
echo '{"currencyCode": "BRGmFF9e", "discountedPrice": 94, "ext": {"LQmtO6hS": {}, "AoxkpI52": {}, "uvcr3Spe": {}}, "itemId": "WsfFEp3x", "language": "ij-WCOZ", "price": 65, "quantity": 22, "region": "KuSSzI1p", "returnUrl": "WxEKBTeG", "sectionId": "PB7H5elv"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicCreateUserOrder \
    --namespace $AB_NAMESPACE \
    --userId 'HrRzLhPh' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 423 'PublicCreateUserOrder' test.out

#- 424 PublicGetUserOrder
$CLI_EXE \
    --sn platform \
    --op PublicGetUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'vLlqgrze' \
    --userId '0WIKYB5k' \
    > test.out 2>&1
eval_tap $? 424 'PublicGetUserOrder' test.out

#- 425 PublicCancelUserOrder
$CLI_EXE \
    --sn platform \
    --op PublicCancelUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'DozWFxTH' \
    --userId 'exvAQ9rC' \
    > test.out 2>&1
eval_tap $? 425 'PublicCancelUserOrder' test.out

#- 426 PublicGetUserOrderHistories
$CLI_EXE \
    --sn platform \
    --op PublicGetUserOrderHistories \
    --namespace $AB_NAMESPACE \
    --orderNo 'KksSeSmh' \
    --userId 'wz1cDGc7' \
    > test.out 2>&1
eval_tap $? 426 'PublicGetUserOrderHistories' test.out

#- 427 PublicDownloadUserOrderReceipt
$CLI_EXE \
    --sn platform \
    --op PublicDownloadUserOrderReceipt \
    --namespace $AB_NAMESPACE \
    --orderNo 'AIln3BD2' \
    --userId '0CXvFi5A' \
    > test.out 2>&1
eval_tap $? 427 'PublicDownloadUserOrderReceipt' test.out

#- 428 PublicGetPaymentAccounts
$CLI_EXE \
    --sn platform \
    --op PublicGetPaymentAccounts \
    --namespace $AB_NAMESPACE \
    --userId 'jUl3GMur' \
    > test.out 2>&1
eval_tap $? 428 'PublicGetPaymentAccounts' test.out

#- 429 PublicDeletePaymentAccount
$CLI_EXE \
    --sn platform \
    --op PublicDeletePaymentAccount \
    --id 'SalijtAE' \
    --namespace $AB_NAMESPACE \
    --type 'paypal' \
    --userId 'rptR8Dyj' \
    > test.out 2>&1
eval_tap $? 429 'PublicDeletePaymentAccount' test.out

#- 430 PublicListActiveSections
$CLI_EXE \
    --sn platform \
    --op PublicListActiveSections \
    --namespace $AB_NAMESPACE \
    --userId 's8PbdI7L' \
    --autoCalcEstimatedPrice 'true' \
    --language '0EzrJwPY' \
    --region 'FKFh87ID' \
    --storeId 'hWoGKbfr' \
    --viewId 'IkpepmEb' \
    > test.out 2>&1
eval_tap $? 430 'PublicListActiveSections' test.out

#- 431 PublicQueryUserSubscriptions
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserSubscriptions \
    --namespace $AB_NAMESPACE \
    --userId '3Zwz5u3x' \
    --chargeStatus 'RECURRING_CHARGING' \
    --itemId 'nd09R4fi' \
    --limit '57' \
    --offset '55' \
    --sku '4g58HGbM' \
    --status 'INIT' \
    --subscribedBy 'PLATFORM' \
    > test.out 2>&1
eval_tap $? 431 'PublicQueryUserSubscriptions' test.out

#- 432 PublicSubscribeSubscription
# body param: body
echo '{"currencyCode": "p8AjbKky", "itemId": "HxC5CvIj", "language": "LOn-bgcG_582", "region": "8RNAePh0", "returnUrl": "SNGJNOMY", "source": "9Oh14nVf"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicSubscribeSubscription \
    --namespace $AB_NAMESPACE \
    --userId 'x2ducP96' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 432 'PublicSubscribeSubscription' test.out

#- 433 PublicCheckUserSubscriptionSubscribableByItemId
$CLI_EXE \
    --sn platform \
    --op PublicCheckUserSubscriptionSubscribableByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'cM0Hw88i' \
    --itemId 'BC7pTIat' \
    > test.out 2>&1
eval_tap $? 433 'PublicCheckUserSubscriptionSubscribableByItemId' test.out

#- 434 PublicGetUserSubscription
$CLI_EXE \
    --sn platform \
    --op PublicGetUserSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'EvLQXvGZ' \
    --userId 'asN1ZAZy' \
    > test.out 2>&1
eval_tap $? 434 'PublicGetUserSubscription' test.out

#- 435 PublicChangeSubscriptionBillingAccount
$CLI_EXE \
    --sn platform \
    --op PublicChangeSubscriptionBillingAccount \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'UThZ1mBB' \
    --userId 'XdBqfjCe' \
    > test.out 2>&1
eval_tap $? 435 'PublicChangeSubscriptionBillingAccount' test.out

#- 436 PublicCancelSubscription
# body param: body
echo '{"immediate": true, "reason": "lX8AMWi7"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicCancelSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId '7EVN424C' \
    --userId '1YsqQ0B9' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 436 'PublicCancelSubscription' test.out

#- 437 PublicGetUserSubscriptionBillingHistories
$CLI_EXE \
    --sn platform \
    --op PublicGetUserSubscriptionBillingHistories \
    --namespace $AB_NAMESPACE \
    --subscriptionId '50P0RWWE' \
    --userId 'FArZ881W' \
    --excludeFree 'true' \
    --limit '31' \
    --offset '0' \
    > test.out 2>&1
eval_tap $? 437 'PublicGetUserSubscriptionBillingHistories' test.out

#- 438 PublicListViews
$CLI_EXE \
    --sn platform \
    --op PublicListViews \
    --namespace $AB_NAMESPACE \
    --userId 'QvoLMWpE' \
    --language 'BzFzVzdh' \
    --storeId 'RX6gLaZ0' \
    > test.out 2>&1
eval_tap $? 438 'PublicListViews' test.out

#- 439 PublicGetWallet
$CLI_EXE \
    --sn platform \
    --op PublicGetWallet \
    --currencyCode 'OV4GQMAy' \
    --namespace $AB_NAMESPACE \
    --userId 'GztLogDX' \
    > test.out 2>&1
eval_tap $? 439 'PublicGetWallet' test.out

#- 440 PublicListUserWalletTransactions
$CLI_EXE \
    --sn platform \
    --op PublicListUserWalletTransactions \
    --currencyCode 'MCuluC3T' \
    --namespace $AB_NAMESPACE \
    --userId 'Dnizru7V' \
    --limit '22' \
    --offset '29' \
    > test.out 2>&1
eval_tap $? 440 'PublicListUserWalletTransactions' test.out

#- 441 QueryItems1
$CLI_EXE \
    --sn platform \
    --op QueryItems1 \
    --namespace $AB_NAMESPACE \
    --appType 'DLC' \
    --availableDate 'IrY4MDEx' \
    --baseAppId 'v777Qqab' \
    --categoryPath 'oqRlrf8X' \
    --features 'GdOrtpVN' \
    --includeSubCategoryItem 'false' \
    --itemName 'RqiNETmt' \
    --itemStatus 'ACTIVE' \
    --itemType 'EXTENSION' \
    --limit '28' \
    --offset '100' \
    --region 'w5Y5D2lp' \
    --sectionExclusive 'false' \
    --sortBy '["name", "updatedAt", "createdAt:asc"]' \
    --storeId 'MSsBZSzj' \
    --tags 'D2MFgQPU' \
    --targetNamespace '1xGHE9MP' \
    --withTotal 'true' \
    > test.out 2>&1
eval_tap $? 441 'QueryItems1' test.out

#- 442 ImportStore1
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op ImportStore1 \
    --namespace $AB_NAMESPACE \
    --storeId 'zSvIUcLN' \
    --strictMode 'false' \
    --upload file $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 442 'ImportStore1' test.out

#- 443 ExportStore1
# body param: body
echo '{"itemIds": ["htCA4p2z", "ZB8DXvY6", "ABrURq5E"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ExportStore1 \
    --namespace $AB_NAMESPACE \
    --storeId 'Y5KYUVIK' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 443 'ExportStore1' test.out

#- 444 FulfillRewardsV2
# body param: body
echo '{"entitlementCollectionId": "WgdnRaRK", "entitlementOrigin": "GooglePlay", "metadata": {"TYoNiVBj": {}, "bcrKXCxX": {}, "rEwCVGyM": {}}, "origin": "Other", "rewards": [{"currency": {"currencyCode": "5UpBiF0k", "namespace": "3HmJv5nT"}, "item": {"itemId": "4qCudhJ9", "itemSku": "gbQHxXKi", "itemType": "WwsS5Q3P"}, "quantity": 43, "type": "ITEM"}, {"currency": {"currencyCode": "iXCnh5Et", "namespace": "0PORATUM"}, "item": {"itemId": "7fTj31tu", "itemSku": "gaJYaru6", "itemType": "l6XDrY3t"}, "quantity": 57, "type": "CURRENCY"}, {"currency": {"currencyCode": "gtxftJVr", "namespace": "liBqKD3f"}, "item": {"itemId": "UYdFh9TL", "itemSku": "bf2bHsRD", "itemType": "j0v4eeHz"}, "quantity": 81, "type": "ITEM"}], "source": "REFERRAL_BONUS", "transactionId": "tXoGv8qd"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op FulfillRewardsV2 \
    --namespace $AB_NAMESPACE \
    --userId 'o4wFJ2Gv' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 444 'FulfillRewardsV2' test.out


# remove artifacts
rm -f "$CLI_TOKEN_FILE"
rm -f "$TEMP_JSON_INPUT"
rm -f "$TEMP_FILE_UPLOAD"

exit $EXIT_CODE