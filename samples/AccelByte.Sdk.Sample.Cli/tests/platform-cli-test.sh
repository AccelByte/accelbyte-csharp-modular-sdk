#!/usr/bin/env bash

# Copyright (c) 2021 AccelByte Inc. All Rights Reserved.
# This is licensed software from AccelByte Inc, for limitations
# and restrictions contact your company contract manager.

# This code is generated by tool. DO NOT EDIT.

# Meta:
# - random seed: 
# - template file: 

# Instructions:
# - Run the Justice SDK Mock Server first before running this script.

export AB_BASE_URL="http://127.0.0.1:8080"
export AB_CLIENT_ID="admin"
export AB_CLIENT_SECRET="admin"
export AB_NAMESPACE="test"
export AB_APP_NAME="UnitTest"

EXIT_CODE=0

eval_tap() {
  if [ $1 -eq 0 ]; then
    echo "ok $2 - $3"
  else
    EXIT_CODE=1
    echo "not ok $2 - $3"
    sed 's/^/# /g' $4
  fi
  rm -f $4
}

CLI_EXE="AccelByte.Sdk.Sample.Cli"
CLI_TOKEN_FILE="$(dirname "$(which $CLI_EXE)")/token.json"
TEMP_JSON_INPUT="input_json.json"
TEMP_FILE_UPLOAD="file_upload.bin"

echo "TAP version 13"
echo "1..499"

#- 1 Login
$CLI_EXE --op login --lt user --user user --pass user > test.out 2>&1
eval_tap $? 1 'Login' test.out

if [ $EXIT_CODE -ne 0 ]; then
  echo "Bail out! Login failed."
  exit $EXIT_CODE
fi

# echo "foo" > "$CLI_TOKEN_FILE"

#- 2 ListFulfillmentScripts
$CLI_EXE \
    --sn platform \
    --op ListFulfillmentScripts \
    > test.out 2>&1
eval_tap $? 2 'ListFulfillmentScripts' test.out

#- 3 GetFulfillmentScript
$CLI_EXE \
    --sn platform \
    --op GetFulfillmentScript \
    --id 'abprGHI8' \
    > test.out 2>&1
eval_tap $? 3 'GetFulfillmentScript' test.out

#- 4 CreateFulfillmentScript
# body param: body
echo '{"grantDays": "fWr77E0n"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateFulfillmentScript \
    --id 'kmiysTUZ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 4 'CreateFulfillmentScript' test.out

#- 5 DeleteFulfillmentScript
$CLI_EXE \
    --sn platform \
    --op DeleteFulfillmentScript \
    --id 'B3oLasdW' \
    > test.out 2>&1
eval_tap $? 5 'DeleteFulfillmentScript' test.out

#- 6 UpdateFulfillmentScript
# body param: body
echo '{"grantDays": "5FnXhvOr"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateFulfillmentScript \
    --id 'f6AzcZOP' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 6 'UpdateFulfillmentScript' test.out

#- 7 ListItemTypeConfigs
$CLI_EXE \
    --sn platform \
    --op ListItemTypeConfigs \
    > test.out 2>&1
eval_tap $? 7 'ListItemTypeConfigs' test.out

#- 8 CreateItemTypeConfig
# body param: body
echo '{"clazz": "bdL8sfkz", "dryRun": true, "fulfillmentUrl": "hpvteidH", "itemType": "SUBSCRIPTION", "purchaseConditionUrl": "vriz9t4u"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateItemTypeConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 8 'CreateItemTypeConfig' test.out

#- 9 SearchItemTypeConfig
$CLI_EXE \
    --sn platform \
    --op SearchItemTypeConfig \
    --clazz '7mS8xcHM' \
    --itemType 'APP' \
    > test.out 2>&1
eval_tap $? 9 'SearchItemTypeConfig' test.out

#- 10 GetItemTypeConfig
$CLI_EXE \
    --sn platform \
    --op GetItemTypeConfig \
    --id 'eGFlP1nn' \
    > test.out 2>&1
eval_tap $? 10 'GetItemTypeConfig' test.out

#- 11 UpdateItemTypeConfig
# body param: body
echo '{"clazz": "xu9Byyzx", "dryRun": true, "fulfillmentUrl": "DabVpUAU", "purchaseConditionUrl": "U4zdzOlo"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateItemTypeConfig \
    --id 'uPp8VIZB' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 11 'UpdateItemTypeConfig' test.out

#- 12 DeleteItemTypeConfig
$CLI_EXE \
    --sn platform \
    --op DeleteItemTypeConfig \
    --id 'QEArfONu' \
    > test.out 2>&1
eval_tap $? 12 'DeleteItemTypeConfig' test.out

#- 13 QueryCampaigns
$CLI_EXE \
    --sn platform \
    --op QueryCampaigns \
    --namespace $AB_NAMESPACE \
    --limit '89' \
    --name 'UocbXtcX' \
    --offset '36' \
    --tag 'pfJFSzxj' \
    > test.out 2>&1
eval_tap $? 13 'QueryCampaigns' test.out

#- 14 CreateCampaign
# body param: body
echo '{"description": "p37n3q4s", "discountConfig": {"categories": [{"categoryPath": "3jlPDG04", "includeSubCategories": true}, {"categoryPath": "iLOszBF6", "includeSubCategories": true}, {"categoryPath": "7zm8BF7x", "includeSubCategories": true}], "currencyCode": "quETAW6q", "currencyNamespace": "kITKpCGT", "discountAmount": 49, "discountPercentage": 77, "discountType": "PERCENTAGE", "items": [{"itemId": "UwRC6MVQ", "itemName": "tzZAAYHq"}, {"itemId": "lqpm3dc1", "itemName": "pEZLgwRp"}, {"itemId": "nipiElPr", "itemName": "8eIApQ2P"}], "restrictType": "NONE", "stackable": false}, "items": [{"extraSubscriptionDays": 72, "itemId": "Ftb1jFVg", "itemName": "zSw92FYx", "quantity": 53}, {"extraSubscriptionDays": 93, "itemId": "l6MuRKPd", "itemName": "KPfLvhqh", "quantity": 0}, {"extraSubscriptionDays": 89, "itemId": "PeqQ7JAf", "itemName": "TKlwUsRb", "quantity": 83}], "maxRedeemCountPerCampaignPerUser": 37, "maxRedeemCountPerCode": 59, "maxRedeemCountPerCodePerUser": 87, "maxSaleCount": 51, "name": "1dv3Cgyv", "redeemEnd": "1972-04-08T00:00:00Z", "redeemStart": "1971-05-02T00:00:00Z", "redeemType": "ITEM", "status": "ACTIVE", "tags": ["DeOHReGn", "GdCY8Rw7", "rlk3rbOx"], "type": "REDEMPTION"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCampaign \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 14 'CreateCampaign' test.out

#- 15 GetCampaign
$CLI_EXE \
    --sn platform \
    --op GetCampaign \
    --campaignId '4FNRsMgp' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 15 'GetCampaign' test.out

#- 16 UpdateCampaign
# body param: body
echo '{"description": "LuEWOj7m", "discountConfig": {"categories": [{"categoryPath": "9nHdhjXJ", "includeSubCategories": true}, {"categoryPath": "LrG6IOfw", "includeSubCategories": false}, {"categoryPath": "6q5HJsS6", "includeSubCategories": false}], "currencyCode": "O3poNG6v", "currencyNamespace": "lugqvHvk", "discountAmount": 3, "discountPercentage": 41, "discountType": "PERCENTAGE", "items": [{"itemId": "NO8vE6XJ", "itemName": "PZ5g0qkX"}, {"itemId": "y0Z5djhw", "itemName": "hntpRq0e"}, {"itemId": "Gnsi9DUZ", "itemName": "q6UhqO6q"}], "restrictType": "NONE", "stackable": false}, "items": [{"extraSubscriptionDays": 49, "itemId": "1Ssp5kvA", "itemName": "h4NQEyEW", "quantity": 36}, {"extraSubscriptionDays": 81, "itemId": "dGxYq718", "itemName": "DlMPK0GB", "quantity": 49}, {"extraSubscriptionDays": 37, "itemId": "5ZEgPMsu", "itemName": "sWC9CDCw", "quantity": 47}], "maxRedeemCountPerCampaignPerUser": 66, "maxRedeemCountPerCode": 34, "maxRedeemCountPerCodePerUser": 77, "maxSaleCount": 44, "name": "XePlhHBh", "redeemEnd": "1997-07-29T00:00:00Z", "redeemStart": "1986-11-18T00:00:00Z", "redeemType": "DISCOUNT", "status": "INACTIVE", "tags": ["YDwHjTBx", "D2zvyOZg", "rNA8SZXc"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCampaign \
    --campaignId 'gUfdZe4g' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 16 'UpdateCampaign' test.out

#- 17 RenameBatch
# body param: body
echo '{"newName": "ZogxfZ6a", "oldName": "dPFrz1QY"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RenameBatch \
    --campaignId 'KYyU7yiW' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 17 'RenameBatch' test.out

#- 18 QueryCampaignBatchNames
$CLI_EXE \
    --sn platform \
    --op QueryCampaignBatchNames \
    --campaignId 'QD0T0xcQ' \
    --namespace $AB_NAMESPACE \
    --batchName 'ZY0JA3np' \
    --limit '93' \
    > test.out 2>&1
eval_tap $? 18 'QueryCampaignBatchNames' test.out

#- 19 GetCampaignDynamic
$CLI_EXE \
    --sn platform \
    --op GetCampaignDynamic \
    --campaignId 'FbuUFxwq' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 19 'GetCampaignDynamic' test.out

#- 20 GetCatalogConfig
$CLI_EXE \
    --sn platform \
    --op GetCatalogConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 20 'GetCatalogConfig' test.out

#- 21 UpdateCatalogConfig
# body param: body
echo '{"enableInventoryCheck": true, "itemDeletionCheckConfig": ["CATALOG", "DLC", "REWARD"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCatalogConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 21 'UpdateCatalogConfig' test.out

#- 22 GetLootBoxPluginConfig
$CLI_EXE \
    --sn platform \
    --op GetLootBoxPluginConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 22 'GetLootBoxPluginConfig' test.out

#- 23 UpdateLootBoxPluginConfig
# body param: body
echo '{"appConfig": {"appName": "6YHRc8uO"}, "customConfig": {"connectionType": "TLS", "grpcServerAddress": "sSyFb9LD"}, "extendType": "CUSTOM"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateLootBoxPluginConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 23 'UpdateLootBoxPluginConfig' test.out

#- 24 DeleteLootBoxPluginConfig
$CLI_EXE \
    --sn platform \
    --op DeleteLootBoxPluginConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 24 'DeleteLootBoxPluginConfig' test.out

#- 25 UplodLootBoxPluginConfigCert
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UplodLootBoxPluginConfigCert \
    --namespace $AB_NAMESPACE \
    --upload file $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 25 'UplodLootBoxPluginConfigCert' test.out

#- 26 GetLootBoxGrpcInfo
$CLI_EXE \
    --sn platform \
    --op GetLootBoxGrpcInfo \
    --namespace $AB_NAMESPACE \
    --force 'false' \
    > test.out 2>&1
eval_tap $? 26 'GetLootBoxGrpcInfo' test.out

#- 27 GetSectionPluginConfig
$CLI_EXE \
    --sn platform \
    --op GetSectionPluginConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 27 'GetSectionPluginConfig' test.out

#- 28 UpdateSectionPluginConfig
# body param: body
echo '{"appConfig": {"appName": "ZA5W0q0n"}, "customConfig": {"connectionType": "TLS", "grpcServerAddress": "pJxYeNVu"}, "extendType": "CUSTOM"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateSectionPluginConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 28 'UpdateSectionPluginConfig' test.out

#- 29 DeleteSectionPluginConfig
$CLI_EXE \
    --sn platform \
    --op DeleteSectionPluginConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 29 'DeleteSectionPluginConfig' test.out

#- 30 UploadSectionPluginConfigCert
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UploadSectionPluginConfigCert \
    --namespace $AB_NAMESPACE \
    --upload file $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 30 'UploadSectionPluginConfigCert' test.out

#- 31 GetRootCategories
$CLI_EXE \
    --sn platform \
    --op GetRootCategories \
    --namespace $AB_NAMESPACE \
    --storeId 'f0H0YABf' \
    > test.out 2>&1
eval_tap $? 31 'GetRootCategories' test.out

#- 32 CreateCategory
# body param: body
echo '{"categoryPath": "WndAFOV0", "localizationDisplayNames": {"uHtVFowD": "IRUHscXl", "oMgUyu9k": "LjYczyzh", "Y83gQW5z": "ZRTu41Qj"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCategory \
    --namespace $AB_NAMESPACE \
    --storeId 'ooOEMpuP' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 32 'CreateCategory' test.out

#- 33 ListCategoriesBasic
$CLI_EXE \
    --sn platform \
    --op ListCategoriesBasic \
    --namespace $AB_NAMESPACE \
    --storeId 'w7v9tJKA' \
    > test.out 2>&1
eval_tap $? 33 'ListCategoriesBasic' test.out

#- 34 GetCategory
$CLI_EXE \
    --sn platform \
    --op GetCategory \
    --categoryPath '1OzRH1Nv' \
    --namespace $AB_NAMESPACE \
    --storeId 'nD0h7Nj8' \
    > test.out 2>&1
eval_tap $? 34 'GetCategory' test.out

#- 35 UpdateCategory
# body param: body
echo '{"localizationDisplayNames": {"g1awP9iE": "5RMaeumn", "52A2UN9g": "nbAL8kL0", "hBjaT3NI": "Sdk9mfxU"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCategory \
    --categoryPath 'zr3lV4VC' \
    --namespace $AB_NAMESPACE \
    --storeId 'cktm0Bax' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 35 'UpdateCategory' test.out

#- 36 DeleteCategory
$CLI_EXE \
    --sn platform \
    --op DeleteCategory \
    --categoryPath 'W2ax4MyA' \
    --namespace $AB_NAMESPACE \
    --storeId 'aTznlJDF' \
    > test.out 2>&1
eval_tap $? 36 'DeleteCategory' test.out

#- 37 GetChildCategories
$CLI_EXE \
    --sn platform \
    --op GetChildCategories \
    --categoryPath 'eBFlhI6a' \
    --namespace $AB_NAMESPACE \
    --storeId 'Br6dOD5l' \
    > test.out 2>&1
eval_tap $? 37 'GetChildCategories' test.out

#- 38 GetDescendantCategories
$CLI_EXE \
    --sn platform \
    --op GetDescendantCategories \
    --categoryPath 'mseRl6PS' \
    --namespace $AB_NAMESPACE \
    --storeId '94V7OLoi' \
    > test.out 2>&1
eval_tap $? 38 'GetDescendantCategories' test.out

#- 39 QueryCodes
$CLI_EXE \
    --sn platform \
    --op QueryCodes \
    --campaignId 'Knk0nwXe' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --batchName 'M7LNaqqd' \
    --batchNo '[26, 64, 28]' \
    --code 'ZTuDVLnj' \
    --limit '98' \
    --offset '60' \
    --withBatchName 'true' \
    > test.out 2>&1
eval_tap $? 39 'QueryCodes' test.out

#- 40 CreateCodes
# body param: body
echo '{"batchName": "ZUQYyp6d", "codeValue": "fvRpXYV3", "quantity": 25}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCodes \
    --campaignId '4G45N8fB' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 40 'CreateCodes' test.out

#- 41 Download
$CLI_EXE \
    --sn platform \
    --op Download \
    --campaignId 'QrowjPLe' \
    --namespace $AB_NAMESPACE \
    --batchName 'zQUMFMyz' \
    --batchNo '[15, 69, 23]' \
    --withBatchName 'false' \
    > test.out 2>&1
eval_tap $? 41 'Download' test.out

#- 42 BulkDisableCodes
$CLI_EXE \
    --sn platform \
    --op BulkDisableCodes \
    --campaignId 'rbkRTHOA' \
    --namespace $AB_NAMESPACE \
    --batchName 'huqlwAXP' \
    --batchNo '[8, 19, 7]' \
    > test.out 2>&1
eval_tap $? 42 'BulkDisableCodes' test.out

#- 43 BulkEnableCodes
$CLI_EXE \
    --sn platform \
    --op BulkEnableCodes \
    --campaignId 'jLnZlMIc' \
    --namespace $AB_NAMESPACE \
    --batchName '8KV5uLw0' \
    --batchNo '[89, 47, 46]' \
    > test.out 2>&1
eval_tap $? 43 'BulkEnableCodes' test.out

#- 44 QueryRedeemHistory
$CLI_EXE \
    --sn platform \
    --op QueryRedeemHistory \
    --campaignId 'jCCBqZuz' \
    --namespace $AB_NAMESPACE \
    --code '28Dgvsjg' \
    --limit '28' \
    --offset '83' \
    --userId 'jNcEJ6sF' \
    > test.out 2>&1
eval_tap $? 44 'QueryRedeemHistory' test.out

#- 45 GetCode
$CLI_EXE \
    --sn platform \
    --op GetCode \
    --code 'rcd4VIbC' \
    --namespace $AB_NAMESPACE \
    --redeemable 'false' \
    --withBatchName 'true' \
    > test.out 2>&1
eval_tap $? 45 'GetCode' test.out

#- 46 DisableCode
$CLI_EXE \
    --sn platform \
    --op DisableCode \
    --code '3P5LEPFg' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 46 'DisableCode' test.out

#- 47 EnableCode
$CLI_EXE \
    --sn platform \
    --op EnableCode \
    --code 'TmlFXb3C' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 47 'EnableCode' test.out

#- 48 GetServicePluginConfig
eval_tap 0 48 'GetServicePluginConfig # SKIP deprecated' test.out

#- 49 UpdateServicePluginConfig
eval_tap 0 49 'UpdateServicePluginConfig # SKIP deprecated' test.out

#- 50 DeleteServicePluginConfig
eval_tap 0 50 'DeleteServicePluginConfig # SKIP deprecated' test.out

#- 51 ListCurrencies
$CLI_EXE \
    --sn platform \
    --op ListCurrencies \
    --namespace $AB_NAMESPACE \
    --currencyType 'VIRTUAL' \
    > test.out 2>&1
eval_tap $? 51 'ListCurrencies' test.out

#- 52 CreateCurrency
# body param: body
echo '{"currencyCode": "L2IZjbOJ", "currencySymbol": "fhhQ601C", "currencyType": "VIRTUAL", "decimals": 0, "localizationDescriptions": {"4iX2bPta": "fWhCmKos", "q3mzXFCb": "xhWWZo1s", "TgRo8TtD": "S6WzOFY1"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCurrency \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 52 'CreateCurrency' test.out

#- 53 UpdateCurrency
# body param: body
echo '{"localizationDescriptions": {"LExdgY7c": "zY03hes6", "E6ArSSqv": "s99CQ704", "1xa5mI8Y": "xSOigsJE"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCurrency \
    --currencyCode 'JysIw7Fn' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 53 'UpdateCurrency' test.out

#- 54 DeleteCurrency
$CLI_EXE \
    --sn platform \
    --op DeleteCurrency \
    --currencyCode 'Kd5Df6qZ' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 54 'DeleteCurrency' test.out

#- 55 GetCurrencyConfig
$CLI_EXE \
    --sn platform \
    --op GetCurrencyConfig \
    --currencyCode 'vQekXfEN' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 55 'GetCurrencyConfig' test.out

#- 56 GetCurrencySummary
$CLI_EXE \
    --sn platform \
    --op GetCurrencySummary \
    --currencyCode 'ineLDQQY' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 56 'GetCurrencySummary' test.out

#- 57 GetDLCItemConfigHistory
$CLI_EXE \
    --sn platform \
    --op GetDLCItemConfigHistory \
    --namespace $AB_NAMESPACE \
    --dlcId 'lqMVMMwg' \
    > test.out 2>&1
eval_tap $? 57 'GetDLCItemConfigHistory' test.out

#- 58 RestoreDLCItemConfigHistory
$CLI_EXE \
    --sn platform \
    --op RestoreDLCItemConfigHistory \
    --id '0SHgCG9l' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 58 'RestoreDLCItemConfigHistory' test.out

#- 59 GetDLCItemConfig
$CLI_EXE \
    --sn platform \
    --op GetDLCItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 59 'GetDLCItemConfig' test.out

#- 60 UpdateDLCItemConfig
# body param: body
echo '{"data": [{"autoUpdate": false, "enableRevocation": true, "id": "nBFuYUFL", "rewards": [{"currency": {"currencyCode": "P8maVW77", "namespace": "ESHKVhQX"}, "item": {"itemId": "ZoG3eusx", "itemName": "xRANoEud", "itemSku": "Vx6XfYWH", "itemType": "xlkoE1ba"}, "quantity": 88, "type": "CURRENCY"}, {"currency": {"currencyCode": "gcrST4nx", "namespace": "RjE1WBdp"}, "item": {"itemId": "VXmyfoHF", "itemName": "q04qyEQf", "itemSku": "2At6NXW9", "itemType": "hCrkiJhi"}, "quantity": 26, "type": "CURRENCY"}, {"currency": {"currencyCode": "i9ZdD1lP", "namespace": "MFgMibE5"}, "item": {"itemId": "8uBfoZIX", "itemName": "4r6skvcl", "itemSku": "F4JnmFjV", "itemType": "igNrzbHT"}, "quantity": 37, "type": "CURRENCY"}], "rvn": 92}, {"autoUpdate": true, "enableRevocation": false, "id": "1t42BOVY", "rewards": [{"currency": {"currencyCode": "lKGMqnoM", "namespace": "w4jyP87t"}, "item": {"itemId": "iLMIa2uj", "itemName": "m4lfrh9v", "itemSku": "xgYjqJQX", "itemType": "khxql6jK"}, "quantity": 62, "type": "ITEM"}, {"currency": {"currencyCode": "SxnTJ2Wj", "namespace": "4BMKJ4SD"}, "item": {"itemId": "w8aWcMRG", "itemName": "me0mHJ15", "itemSku": "HPMqLhbB", "itemType": "a9jug92e"}, "quantity": 27, "type": "ITEM"}, {"currency": {"currencyCode": "VwnOqXue", "namespace": "UXYDGu2d"}, "item": {"itemId": "7dXxDzpJ", "itemName": "rcm9t0Ml", "itemSku": "XF8skYTg", "itemType": "neA40pNh"}, "quantity": 44, "type": "ITEM"}], "rvn": 92}, {"autoUpdate": true, "enableRevocation": false, "id": "G6XsO4vX", "rewards": [{"currency": {"currencyCode": "qmohNBs8", "namespace": "XRwC05ne"}, "item": {"itemId": "QM1BLuB2", "itemName": "zF12DqRY", "itemSku": "BxTRSqgr", "itemType": "ozHuOypF"}, "quantity": 47, "type": "CURRENCY"}, {"currency": {"currencyCode": "qFvWXIZs", "namespace": "YTzZSr5p"}, "item": {"itemId": "Qc9HXnTR", "itemName": "OnLFGwj9", "itemSku": "wp3Vxc9o", "itemType": "cpiFSuxl"}, "quantity": 27, "type": "ITEM"}, {"currency": {"currencyCode": "MXq2zS6U", "namespace": "gl0cYOhG"}, "item": {"itemId": "OCxvnHvd", "itemName": "IBw1uGCI", "itemSku": "747jcErs", "itemType": "HEGu6gm4"}, "quantity": 53, "type": "CURRENCY"}], "rvn": 44}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateDLCItemConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 60 'UpdateDLCItemConfig' test.out

#- 61 DeleteDLCItemConfig
$CLI_EXE \
    --sn platform \
    --op DeleteDLCItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 61 'DeleteDLCItemConfig' test.out

#- 62 GetPlatformDLCConfig
$CLI_EXE \
    --sn platform \
    --op GetPlatformDLCConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 62 'GetPlatformDLCConfig' test.out

#- 63 UpdatePlatformDLCConfig
# body param: body
echo '{"data": [{"platform": "PSN", "platformDlcIdMap": {"P5pzSLpi": "M6sUViKL", "lHfazzoA": "KZj3Ijb6", "nzdYHCUJ": "HeR0lUMH"}}, {"platform": "PSN", "platformDlcIdMap": {"xtgpJJRO": "suOenxT4", "C2TCVHQ5": "eik9mAyJ", "ujfN59Ho": "Z5Ckc6Gg"}}, {"platform": "OCULUS", "platformDlcIdMap": {"NPPcriqE": "05zD5I3c", "acoVxpAv": "ICHP0alj", "oYidt7RP": "VYd1KYxH"}}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePlatformDLCConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 63 'UpdatePlatformDLCConfig' test.out

#- 64 DeletePlatformDLCConfig
$CLI_EXE \
    --sn platform \
    --op DeletePlatformDLCConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 64 'DeletePlatformDLCConfig' test.out

#- 65 QueryEntitlements1
$CLI_EXE \
    --sn platform \
    --op QueryEntitlements1 \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --appType 'GAME' \
    --entitlementClazz 'LOOTBOX' \
    --entitlementName 'tTftx2ev' \
    --itemId '["YlNSbVKG", "O2nBNxsX", "9T12pt14"]' \
    --limit '93' \
    --offset '75' \
    --origin 'Other' \
    --userId 'mUHFkcJ7' \
    > test.out 2>&1
eval_tap $? 65 'QueryEntitlements1' test.out

#- 66 QueryEntitlements
$CLI_EXE \
    --sn platform \
    --op QueryEntitlements \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --itemIds '["J9ZHe4hl", "Baa224hK", "yuhQNQQs"]' \
    --limit '58' \
    --offset '51' \
    > test.out 2>&1
eval_tap $? 66 'QueryEntitlements' test.out

#- 67 EnableEntitlementOriginFeature
$CLI_EXE \
    --sn platform \
    --op EnableEntitlementOriginFeature \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 67 'EnableEntitlementOriginFeature' test.out

#- 68 GetEntitlementConfigInfo
$CLI_EXE \
    --sn platform \
    --op GetEntitlementConfigInfo \
    --namespace $AB_NAMESPACE \
    --withoutCache 'true' \
    > test.out 2>&1
eval_tap $? 68 'GetEntitlementConfigInfo' test.out

#- 69 GrantEntitlements
# body param: body
echo '{"entitlementGrantList": [{"collectionId": "L4gDAwM3", "endDate": "1986-06-24T00:00:00Z", "grantedCode": "c7elvEJf", "itemId": "jk4ky6nm", "itemNamespace": "ntTN3baB", "language": "Xk-WMzo", "metadata": {"MZMukNYq": {}, "iULXKX2o": {}, "3E4Bcrin": {}}, "origin": "Playstation", "quantity": 75, "region": "bUwVeM3Q", "source": "REWARD", "startDate": "1977-08-09T00:00:00Z", "storeId": "GudzIblv"}, {"collectionId": "znpkpBvs", "endDate": "1973-01-23T00:00:00Z", "grantedCode": "fBtuoWqY", "itemId": "7uuOfnqw", "itemNamespace": "CG79fiAR", "language": "hYW", "metadata": {"kCGxZo58": {}, "BjBBqprY": {}, "I5K2c3l5": {}}, "origin": "GooglePlay", "quantity": 74, "region": "UmAcZ5C6", "source": "REWARD", "startDate": "1992-09-04T00:00:00Z", "storeId": "Vbdj6RTR"}, {"collectionId": "EqxXVdq1", "endDate": "1993-04-13T00:00:00Z", "grantedCode": "7loswWVd", "itemId": "j0ZGY2s3", "itemNamespace": "BYnXzfLT", "language": "PJE_tWxs_573", "metadata": {"oN3m8brm": {}, "yLOeXqRo": {}, "80RUtLlg": {}}, "origin": "Oculus", "quantity": 7, "region": "TbCgHem7", "source": "ACHIEVEMENT", "startDate": "1973-04-25T00:00:00Z", "storeId": "42IKTXgT"}], "userIds": ["eF2x3HJi", "tJL4qi3u", "2uWI2QKt"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op GrantEntitlements \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 69 'GrantEntitlements' test.out

#- 70 RevokeEntitlements
# body param: body
echo '["LjWesHjZ", "PjTbBc6J", "6ANrFg4s"]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RevokeEntitlements \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 70 'RevokeEntitlements' test.out

#- 71 GetEntitlement
$CLI_EXE \
    --sn platform \
    --op GetEntitlement \
    --entitlementId '7FAzXFXC' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 71 'GetEntitlement' test.out

#- 72 QueryFulfillmentHistories
$CLI_EXE \
    --sn platform \
    --op QueryFulfillmentHistories \
    --namespace $AB_NAMESPACE \
    --limit '53' \
    --offset '68' \
    --status 'SUCCESS' \
    --userId 'zZ4TTENs' \
    > test.out 2>&1
eval_tap $? 72 'QueryFulfillmentHistories' test.out

#- 73 QueryIAPClawbackHistory
$CLI_EXE \
    --sn platform \
    --op QueryIAPClawbackHistory \
    --namespace $AB_NAMESPACE \
    --endTime '4v3BdMdi' \
    --eventType 'CHARGEBACK' \
    --externalOrderId 'mpWlF3KJ' \
    --limit '54' \
    --offset '57' \
    --startTime 'XqV2eMZC' \
    --status 'FAIL' \
    --userId 'aYmhMuwQ' \
    > test.out 2>&1
eval_tap $? 73 'QueryIAPClawbackHistory' test.out

#- 74 MockPlayStationStreamEvent
# body param: body
echo '{"body": {"account": "sJSioTcW", "additionalData": {"entitlement": [{"clientTransaction": [{"amountConsumed": 29, "clientTransactionId": "C5cOHvSG"}, {"amountConsumed": 68, "clientTransactionId": "4dBgcAl9"}, {"amountConsumed": 70, "clientTransactionId": "egmkpihX"}], "entitlementId": "36LVfqh2", "usageCount": 25}, {"clientTransaction": [{"amountConsumed": 82, "clientTransactionId": "duCnIU6r"}, {"amountConsumed": 64, "clientTransactionId": "u9WXfWKq"}, {"amountConsumed": 94, "clientTransactionId": "p7aXDBhs"}], "entitlementId": "3GtNFvIl", "usageCount": 55}, {"clientTransaction": [{"amountConsumed": 48, "clientTransactionId": "Nv1Jn3AD"}, {"amountConsumed": 95, "clientTransactionId": "ikLbxxx3"}, {"amountConsumed": 58, "clientTransactionId": "Jh6xEkUh"}], "entitlementId": "lcYo9mfk", "usageCount": 19}], "purpose": "pPt62hzf"}, "originalTitleName": "n4UtbMbo", "paymentProductSKU": "bPotPwfF", "purchaseDate": "SEebvR8Q", "sourceOrderItemId": "GVZ9fcsH", "titleName": "AiIG7ZBq"}, "eventDomain": "m34nFmHU", "eventSource": "zsyFGl05", "eventType": "2tVpMHAy", "eventVersion": 100, "id": "NMyZ6wAr", "timestamp": "LbmGvExj"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op MockPlayStationStreamEvent \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 74 'MockPlayStationStreamEvent' test.out

#- 75 MockXblClawbackEvent
# body param: body
echo '{"data": {"eventDate": "FeTAJcHA", "eventState": "VxbWixt2", "lineItemId": "isvGSNYO", "orderId": "YDlUyPZu", "productId": "VHnnmwy6", "productType": "kRWIl2oh", "purchasedDate": "ZRY4ASzs", "sandboxId": "U5w13WGt", "skuId": "LwuUkBqH", "subscriptionData": {"consumedDurationInDays": 14, "dateTime": "QOhZdNXK", "durationInDays": 0, "recurrenceId": "kn7OKAlV"}}, "datacontenttype": "EfPLLNo7", "id": "uxJiFIUu", "source": "7eCKlpUd", "specVersion": "u287hsLO", "subject": "MmlwmIdV", "time": "XzkMy2J6", "traceparent": "4D402fvU", "type": "rdwV2skV"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op MockXblClawbackEvent \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 75 'MockXblClawbackEvent' test.out

#- 76 GetAppleIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetAppleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 76 'GetAppleIAPConfig' test.out

#- 77 UpdateAppleIAPConfig
# body param: body
echo '{"appAppleId": 11, "bundleId": "GC0ahvan", "issuerId": "e0asqnhT", "keyId": "53N2P1x2", "password": "cTVPvN9o", "version": "V2"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateAppleIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 77 'UpdateAppleIAPConfig' test.out

#- 78 DeleteAppleIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteAppleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 78 'DeleteAppleIAPConfig' test.out

#- 79 UpdateAppleP8File
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UpdateAppleP8File \
    --namespace $AB_NAMESPACE \
    --upload file $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 79 'UpdateAppleP8File' test.out

#- 80 GetEpicGamesIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetEpicGamesIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 80 'GetEpicGamesIAPConfig' test.out

#- 81 UpdateEpicGamesIAPConfig
# body param: body
echo '{"sandboxId": "Nk1lr4FE"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateEpicGamesIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 81 'UpdateEpicGamesIAPConfig' test.out

#- 82 DeleteEpicGamesIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteEpicGamesIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 82 'DeleteEpicGamesIAPConfig' test.out

#- 83 GetGoogleIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetGoogleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 83 'GetGoogleIAPConfig' test.out

#- 84 UpdateGoogleIAPConfig
# body param: body
echo '{"applicationName": "X2ZVM5f4", "notificationTokenAudience": "wjzmoaIf", "notificationTokenEmail": "tyH8Ququ", "packageName": "ZhN61MiX", "serviceAccountId": "jCYqfhlE"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateGoogleIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 84 'UpdateGoogleIAPConfig' test.out

#- 85 DeleteGoogleIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteGoogleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 85 'DeleteGoogleIAPConfig' test.out

#- 86 UpdateGoogleP12File
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UpdateGoogleP12File \
    --namespace $AB_NAMESPACE \
    --upload file $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 86 'UpdateGoogleP12File' test.out

#- 87 GetIAPItemConfig
$CLI_EXE \
    --sn platform \
    --op GetIAPItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 87 'GetIAPItemConfig' test.out

#- 88 UpdateIAPItemConfig
# body param: body
echo '{"data": [{"itemIdentity": "NYlzCD2z", "itemIdentityType": "ITEM_SKU", "platformProductIdMap": {"RB65vFVD": "qXiTL70z", "myqI0t0Q": "xhq2F79j", "1iB2A14A": "lT3D5993"}}, {"itemIdentity": "1yuHRI6l", "itemIdentityType": "ITEM_SKU", "platformProductIdMap": {"GIDurZd7": "r01tdRLj", "N2z45i99": "adkncaZ5", "QRq23GBV": "OBBDE66o"}}, {"itemIdentity": "XQEDcQYC", "itemIdentityType": "ITEM_ID", "platformProductIdMap": {"BGEXwjoH": "iIWSngIu", "RDCYY4HV": "t4vXhKDB", "iAD9Uoeq": "POw9fQQ2"}}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateIAPItemConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 88 'UpdateIAPItemConfig' test.out

#- 89 DeleteIAPItemConfig
$CLI_EXE \
    --sn platform \
    --op DeleteIAPItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 89 'DeleteIAPItemConfig' test.out

#- 90 GetOculusIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetOculusIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 90 'GetOculusIAPConfig' test.out

#- 91 UpdateOculusIAPConfig
# body param: body
echo '{"appId": "wgslEb5D", "appSecret": "tN9ylYnw"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateOculusIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 91 'UpdateOculusIAPConfig' test.out

#- 92 DeleteOculusIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteOculusIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 92 'DeleteOculusIAPConfig' test.out

#- 93 GetPlayStationIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetPlayStationIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 93 'GetPlayStationIAPConfig' test.out

#- 94 UpdatePlaystationIAPConfig
# body param: body
echo '{"backOfficeServerClientId": "9XhWxm5v", "backOfficeServerClientSecret": "hm7nZa3z", "enableStreamJob": true, "environment": "zzg4oCWD", "streamName": "MIMv4RvD", "streamPartnerName": "oxlihZHW"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePlaystationIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 94 'UpdatePlaystationIAPConfig' test.out

#- 95 DeletePlaystationIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeletePlaystationIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 95 'DeletePlaystationIAPConfig' test.out

#- 96 ValidateExistedPlaystationIAPConfig
$CLI_EXE \
    --sn platform \
    --op ValidateExistedPlaystationIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 96 'ValidateExistedPlaystationIAPConfig' test.out

#- 97 ValidatePlaystationIAPConfig
# body param: body
echo '{"backOfficeServerClientId": "a13fz0yV", "backOfficeServerClientSecret": "pGHKK9eZ", "enableStreamJob": false, "environment": "PMaMtFvw", "streamName": "uaIGt7CG", "streamPartnerName": "iqWEwHRO"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ValidatePlaystationIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 97 'ValidatePlaystationIAPConfig' test.out

#- 98 GetSteamIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetSteamIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 98 'GetSteamIAPConfig' test.out

#- 99 UpdateSteamIAPConfig
# body param: body
echo '{"appId": "wmpryFTh", "env": "LIVE", "publisherAuthenticationKey": "168iVrnO", "syncMode": "INVENTORY"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateSteamIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 99 'UpdateSteamIAPConfig' test.out

#- 100 DeleteSteamIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteSteamIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 100 'DeleteSteamIAPConfig' test.out

#- 101 GetTwitchIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetTwitchIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 101 'GetTwitchIAPConfig' test.out

#- 102 UpdateTwitchIAPConfig
# body param: body
echo '{"clientId": "zcot1qu8", "clientSecret": "eaxuWvSm", "organizationId": "PGlBNfIB"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateTwitchIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 102 'UpdateTwitchIAPConfig' test.out

#- 103 DeleteTwitchIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteTwitchIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 103 'DeleteTwitchIAPConfig' test.out

#- 104 GetXblIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetXblIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 104 'GetXblIAPConfig' test.out

#- 105 UpdateXblIAPConfig
# body param: body
echo '{"enableClawback": true, "entraAppClientId": "mt4rUZls", "entraAppClientSecret": "UWla5lPT", "entraTenantId": "QXSzdSUC", "relyingPartyCert": "hjne2t0Q"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXblIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 105 'UpdateXblIAPConfig' test.out

#- 106 DeleteXblAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteXblAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 106 'DeleteXblAPConfig' test.out

#- 107 UpdateXblBPCertFile
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UpdateXblBPCertFile \
    --namespace $AB_NAMESPACE \
    --upload file $TEMP_FILE_UPLOAD \
    --password 'kbgOnn5o' \
    > test.out 2>&1
eval_tap $? 107 'UpdateXblBPCertFile' test.out

#- 108 QueryThirdPartyNotifications
$CLI_EXE \
    --sn platform \
    --op QueryThirdPartyNotifications \
    --namespace $AB_NAMESPACE \
    --endDate 'iFc352OR' \
    --externalId 'S1iOnqqY' \
    --limit '94' \
    --offset '20' \
    --source 'XBOX' \
    --startDate 'yOmHOxn6' \
    --status 'WARN' \
    --type 'bnw0JIAw' \
    > test.out 2>&1
eval_tap $? 108 'QueryThirdPartyNotifications' test.out

#- 109 QueryAbnormalTransactions
$CLI_EXE \
    --sn platform \
    --op QueryAbnormalTransactions \
    --namespace $AB_NAMESPACE \
    --limit '64' \
    --offset '21' \
    --orderId 'pee2m167' \
    --steamId 'kKsUBd58' \
    > test.out 2>&1
eval_tap $? 109 'QueryAbnormalTransactions' test.out

#- 110 AdminGetSteamJobInfo
$CLI_EXE \
    --sn platform \
    --op AdminGetSteamJobInfo \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 110 'AdminGetSteamJobInfo' test.out

#- 111 AdminResetSteamJobTime
# body param: body
echo '{"env": "LIVE", "lastTime": "1978-09-08T00:00:00Z"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op AdminResetSteamJobTime \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 111 'AdminResetSteamJobTime' test.out

#- 112 AdminRefundIAPOrder
$CLI_EXE \
    --sn platform \
    --op AdminRefundIAPOrder \
    --iapOrderNo 'p4YUTioS' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 112 'AdminRefundIAPOrder' test.out

#- 113 QuerySteamReportHistories
$CLI_EXE \
    --sn platform \
    --op QuerySteamReportHistories \
    --namespace $AB_NAMESPACE \
    --limit '18' \
    --offset '35' \
    --orderId 'REMROTxK' \
    --processStatus 'ERROR' \
    --steamId 'kMFRsbvP' \
    > test.out 2>&1
eval_tap $? 113 'QuerySteamReportHistories' test.out

#- 114 QueryThirdPartySubscription
$CLI_EXE \
    --sn platform \
    --op QueryThirdPartySubscription \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --groupId 'xa6YamlG' \
    --limit '5' \
    --offset '30' \
    --platform 'STEAM' \
    --productId 'i9xGiQyt' \
    --userId '31ox3uaO' \
    > test.out 2>&1
eval_tap $? 114 'QueryThirdPartySubscription' test.out

#- 115 GetIAPOrderConsumeDetails
$CLI_EXE \
    --sn platform \
    --op GetIAPOrderConsumeDetails \
    --iapOrderNo 'x5nUM9q9' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 115 'GetIAPOrderConsumeDetails' test.out

#- 116 DownloadInvoiceDetails
$CLI_EXE \
    --sn platform \
    --op DownloadInvoiceDetails \
    --namespace $AB_NAMESPACE \
    --endTime 'W0jtiz2F' \
    --feature 'AfoQrfcj' \
    --itemId '06COOgfj' \
    --itemType 'MEDIA' \
    --startTime 'ujEtXZ7J' \
    > test.out 2>&1
eval_tap $? 116 'DownloadInvoiceDetails' test.out

#- 117 GenerateInvoiceSummary
$CLI_EXE \
    --sn platform \
    --op GenerateInvoiceSummary \
    --namespace $AB_NAMESPACE \
    --endTime 'ulrz2Ae8' \
    --feature 'GZziBsLy' \
    --itemId '1UFLvFmY' \
    --itemType 'SUBSCRIPTION' \
    --startTime 'uH3h7rEH' \
    > test.out 2>&1
eval_tap $? 117 'GenerateInvoiceSummary' test.out

#- 118 SyncInGameItem
# body param: body
echo '{"categoryPath": "6TualzF6", "targetItemId": "TRNcQukN", "targetNamespace": "FzFb6YlV"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncInGameItem \
    --namespace $AB_NAMESPACE \
    --storeId 'u1uAfYd4' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 118 'SyncInGameItem' test.out

#- 119 CreateItem
# body param: body
echo '{"appId": "sBih3CwF", "appType": "GAME", "baseAppId": "GmN4Fl8e", "boothName": "02Pj6Uxx", "categoryPath": "aZgGtzXC", "clazz": "QScZzsNl", "displayOrder": 23, "entitlementType": "DURABLE", "ext": {"XLyhpNDA": {}, "zlgsrTY3": {}, "iG0mEppe": {}}, "features": ["ZabBWStA", "zWjRlhr5", "ptv2DYxx"], "flexible": true, "images": [{"as": "cSY4GZFP", "caption": "XJ6mY2mT", "height": 93, "imageUrl": "YynXDMrz", "smallImageUrl": "pykqda1v", "width": 25}, {"as": "7DpG38Lc", "caption": "A3pSy7kK", "height": 25, "imageUrl": "GabEB8rN", "smallImageUrl": "ImDsCGtQ", "width": 68}, {"as": "BuPCxtyH", "caption": "3qugo99q", "height": 83, "imageUrl": "K7tVIRtv", "smallImageUrl": "mJisA5CS", "width": 25}], "inventoryConfig": {"customAttributes": {"2ikDCXaG": {}, "3KPejy1x": {}, "Vo7NADkS": {}}, "serverCustomAttributes": {"cozsp5Ql": {}, "wBaKxaDJ": {}, "Z8VzmjXL": {}}, "slotUsed": 73}, "itemIds": ["5hmGjH7J", "HyUwkj64", "cnNniqdR"], "itemQty": {"TxYQ4i69": 84, "lX4AXHQV": 2, "doUGMDJw": 91}, "itemType": "EXTENSION", "listable": false, "localizations": {"GCSlwfiJ": {"description": "p5d6q1Sx", "localExt": {"yCxIGtnb": {}, "msExSTgG": {}, "P7kdQz1u": {}}, "longDescription": "XC0zGj1R", "title": "YHk3NbaX"}, "BTJX69c8": {"description": "i9BGTENC", "localExt": {"SEHP1SWt": {}, "Z1MWAPO9": {}, "wsEeg3FQ": {}}, "longDescription": "hYQl6R6S", "title": "6zBpXMae"}, "GE1TKYdr": {"description": "Q3P5GULU", "localExt": {"ctaSvJlX": {}, "y42aShKl": {}, "ZSfCYfxC": {}}, "longDescription": "g1tRfNW9", "title": "mQj4YR20"}}, "lootBoxConfig": {"rewardCount": 74, "rewards": [{"lootBoxItems": [{"count": 74, "duration": 37, "endDate": "1999-08-20T00:00:00Z", "itemId": "2dbuzkJn", "itemSku": "fxxd8f1J", "itemType": "hp3F5pIH"}, {"count": 67, "duration": 61, "endDate": "1974-06-04T00:00:00Z", "itemId": "NvYFCsIj", "itemSku": "sE6x2F9D", "itemType": "YKcnFfLW"}, {"count": 53, "duration": 35, "endDate": "1997-04-03T00:00:00Z", "itemId": "lnXjTJvg", "itemSku": "MrQ0IWeB", "itemType": "2KiSlxZ2"}], "name": "NLY2bw08", "odds": 0.6525893768066009, "type": "REWARD_GROUP", "weight": 5}, {"lootBoxItems": [{"count": 33, "duration": 39, "endDate": "1974-08-19T00:00:00Z", "itemId": "0uhDTb7l", "itemSku": "YfTjp5wr", "itemType": "4x13JbfO"}, {"count": 98, "duration": 85, "endDate": "1987-12-02T00:00:00Z", "itemId": "iws2HptJ", "itemSku": "Ct4OSdzB", "itemType": "OJtJdBdx"}, {"count": 41, "duration": 33, "endDate": "1991-02-01T00:00:00Z", "itemId": "u3Vk7XgE", "itemSku": "9RtADUTa", "itemType": "yQzxGtqe"}], "name": "RHiH1NTT", "odds": 0.5202290297427645, "type": "REWARD_GROUP", "weight": 40}, {"lootBoxItems": [{"count": 86, "duration": 68, "endDate": "1985-08-03T00:00:00Z", "itemId": "TFeMvYxM", "itemSku": "GeiKGiEj", "itemType": "2ArKWQRh"}, {"count": 5, "duration": 76, "endDate": "1996-02-06T00:00:00Z", "itemId": "9AbZ3mOK", "itemSku": "xSRN9wXx", "itemType": "JlCj5gwi"}, {"count": 45, "duration": 61, "endDate": "1992-03-17T00:00:00Z", "itemId": "kV95DdAG", "itemSku": "INulayX7", "itemType": "WoQmIJes"}], "name": "xbQQQ2We", "odds": 0.7489722006587974, "type": "REWARD_GROUP", "weight": 18}], "rollFunction": "CUSTOM"}, "maxCount": 83, "maxCountPerUser": 5, "name": "nwVAQQJ6", "optionBoxConfig": {"boxItems": [{"count": 76, "duration": 22, "endDate": "1982-06-06T00:00:00Z", "itemId": "DEzFT7V9", "itemSku": "hjrByeil", "itemType": "WwPkmoL4"}, {"count": 80, "duration": 66, "endDate": "1990-04-21T00:00:00Z", "itemId": "dHwh0PUP", "itemSku": "g0soaOaU", "itemType": "vo3m4JWy"}, {"count": 25, "duration": 77, "endDate": "1982-02-17T00:00:00Z", "itemId": "E8sULe9M", "itemSku": "AqfPIUBR", "itemType": "ua2edKbd"}]}, "purchasable": true, "recurring": {"cycle": "QUARTERLY", "fixedFreeDays": 60, "fixedTrialCycles": 41, "graceDays": 86}, "regionData": {"faaIARqG": [{"currencyCode": "EpFsPVjm", "currencyNamespace": "gk4NsKu6", "currencyType": "REAL", "discountAmount": 15, "discountExpireAt": "1981-07-04T00:00:00Z", "discountPercentage": 65, "discountPurchaseAt": "1977-12-29T00:00:00Z", "expireAt": "1983-05-01T00:00:00Z", "price": 76, "purchaseAt": "1972-02-28T00:00:00Z", "trialPrice": 23}, {"currencyCode": "yy0rmvyI", "currencyNamespace": "R0UGWPFi", "currencyType": "REAL", "discountAmount": 62, "discountExpireAt": "1978-10-05T00:00:00Z", "discountPercentage": 69, "discountPurchaseAt": "1987-12-29T00:00:00Z", "expireAt": "1996-11-25T00:00:00Z", "price": 36, "purchaseAt": "1983-01-23T00:00:00Z", "trialPrice": 92}, {"currencyCode": "34M3pYRW", "currencyNamespace": "J7A2qIXl", "currencyType": "VIRTUAL", "discountAmount": 96, "discountExpireAt": "1997-11-03T00:00:00Z", "discountPercentage": 14, "discountPurchaseAt": "1972-05-14T00:00:00Z", "expireAt": "1984-10-27T00:00:00Z", "price": 72, "purchaseAt": "1987-04-10T00:00:00Z", "trialPrice": 3}], "rKWWPIVU": [{"currencyCode": "PNSRygeo", "currencyNamespace": "jMIFxkhg", "currencyType": "REAL", "discountAmount": 66, "discountExpireAt": "1999-06-30T00:00:00Z", "discountPercentage": 52, "discountPurchaseAt": "1980-04-05T00:00:00Z", "expireAt": "1987-07-19T00:00:00Z", "price": 17, "purchaseAt": "1994-03-28T00:00:00Z", "trialPrice": 82}, {"currencyCode": "M5WUZBn2", "currencyNamespace": "kuIBJTwX", "currencyType": "VIRTUAL", "discountAmount": 3, "discountExpireAt": "1972-05-06T00:00:00Z", "discountPercentage": 29, "discountPurchaseAt": "1975-03-17T00:00:00Z", "expireAt": "1987-09-24T00:00:00Z", "price": 63, "purchaseAt": "1993-01-07T00:00:00Z", "trialPrice": 75}, {"currencyCode": "e9LjIIBS", "currencyNamespace": "i0slsRPX", "currencyType": "REAL", "discountAmount": 2, "discountExpireAt": "1981-05-26T00:00:00Z", "discountPercentage": 60, "discountPurchaseAt": "1978-06-04T00:00:00Z", "expireAt": "1978-03-18T00:00:00Z", "price": 69, "purchaseAt": "1972-11-16T00:00:00Z", "trialPrice": 6}], "RPUgHE9e": [{"currencyCode": "uc71M2wL", "currencyNamespace": "MGxh14w8", "currencyType": "VIRTUAL", "discountAmount": 55, "discountExpireAt": "1976-03-05T00:00:00Z", "discountPercentage": 85, "discountPurchaseAt": "1978-08-17T00:00:00Z", "expireAt": "1981-06-25T00:00:00Z", "price": 15, "purchaseAt": "1995-07-22T00:00:00Z", "trialPrice": 35}, {"currencyCode": "SWZ4J1bs", "currencyNamespace": "gmAyqkDC", "currencyType": "REAL", "discountAmount": 37, "discountExpireAt": "1975-01-23T00:00:00Z", "discountPercentage": 46, "discountPurchaseAt": "1995-05-23T00:00:00Z", "expireAt": "1981-12-20T00:00:00Z", "price": 91, "purchaseAt": "1998-05-20T00:00:00Z", "trialPrice": 32}, {"currencyCode": "cJC7aqL1", "currencyNamespace": "E2BdLhEv", "currencyType": "REAL", "discountAmount": 17, "discountExpireAt": "1985-02-24T00:00:00Z", "discountPercentage": 33, "discountPurchaseAt": "1979-03-30T00:00:00Z", "expireAt": "1978-02-14T00:00:00Z", "price": 60, "purchaseAt": "1998-09-18T00:00:00Z", "trialPrice": 52}]}, "saleConfig": {"currencyCode": "vVhFP8Dh", "price": 81}, "seasonType": "TIER", "sectionExclusive": false, "sellable": false, "sku": "bk2cpA36", "stackable": false, "status": "ACTIVE", "tags": ["VdQBkzmR", "ArwtbxEO", "HDvLis9p"], "targetCurrencyCode": "9PH4QS9d", "targetNamespace": "4ZfKNnzU", "thumbnailUrl": "gyRCE3lk", "useCount": 69}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateItem \
    --namespace $AB_NAMESPACE \
    --storeId 'Q8D8oek0' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 119 'CreateItem' test.out

#- 120 GetItemByAppId
$CLI_EXE \
    --sn platform \
    --op GetItemByAppId \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --storeId '9mO94M4Y' \
    --appId '11Rss8BH' \
    > test.out 2>&1
eval_tap $? 120 'GetItemByAppId' test.out

#- 121 QueryItems
$CLI_EXE \
    --sn platform \
    --op QueryItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --appType 'DEMO' \
    --availableDate 'h3nEZKrA' \
    --baseAppId '2OxVGRf3' \
    --categoryPath 'wh1glBXi' \
    --features 'kreo1FK5' \
    --includeSubCategoryItem 'true' \
    --itemType 'OPTIONBOX' \
    --limit '13' \
    --offset '57' \
    --region 'jM0ETgs8' \
    --sortBy '["name", "name:asc", "displayOrder:asc"]' \
    --storeId 'aTQNhJYb' \
    --tags '94V28JAR' \
    --targetNamespace 'Ksj2Dmrn' \
    > test.out 2>&1
eval_tap $? 121 'QueryItems' test.out

#- 122 ListBasicItemsByFeatures
$CLI_EXE \
    --sn platform \
    --op ListBasicItemsByFeatures \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --features '["xsZStt8J", "DUnWLK1D", "Wpi5xdZa"]' \
    > test.out 2>&1
eval_tap $? 122 'ListBasicItemsByFeatures' test.out

#- 123 GetItems
$CLI_EXE \
    --sn platform \
    --op GetItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --storeId 'oTVbftRJ' \
    --itemIds 'KcZ9fjB2' \
    > test.out 2>&1
eval_tap $? 123 'GetItems' test.out

#- 124 GetItemBySku
$CLI_EXE \
    --sn platform \
    --op GetItemBySku \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --storeId 'QyVcBL3D' \
    --sku 'MgiiVQNW' \
    > test.out 2>&1
eval_tap $? 124 'GetItemBySku' test.out

#- 125 GetLocaleItemBySku
$CLI_EXE \
    --sn platform \
    --op GetLocaleItemBySku \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --language 'KcZfUoe4' \
    --populateBundle 'false' \
    --region 'eAlRsTt5' \
    --storeId 'xBhWal2D' \
    --sku 'cKttHfNb' \
    > test.out 2>&1
eval_tap $? 125 'GetLocaleItemBySku' test.out

#- 126 GetEstimatedPrice
$CLI_EXE \
    --sn platform \
    --op GetEstimatedPrice \
    --namespace $AB_NAMESPACE \
    --platform 'UZZtw4gd' \
    --region 'H3SwyXXF' \
    --storeId 'aBbQYcf1' \
    --itemIds 'wonqhgDK' \
    --userId 'p5wfPHS0' \
    > test.out 2>&1
eval_tap $? 126 'GetEstimatedPrice' test.out

#- 127 GetItemIdBySku
$CLI_EXE \
    --sn platform \
    --op GetItemIdBySku \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --storeId 'gYe4M0gb' \
    --sku 'nPne099n' \
    > test.out 2>&1
eval_tap $? 127 'GetItemIdBySku' test.out

#- 128 GetBulkItemIdBySkus
$CLI_EXE \
    --sn platform \
    --op GetBulkItemIdBySkus \
    --namespace $AB_NAMESPACE \
    --sku '["CzWWdHte", "YH3LsN2A", "IUGP39Qs"]' \
    --storeId 'TEpMsNKE' \
    > test.out 2>&1
eval_tap $? 128 'GetBulkItemIdBySkus' test.out

#- 129 BulkGetLocaleItems
$CLI_EXE \
    --sn platform \
    --op BulkGetLocaleItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --language 'hnKhX5nS' \
    --region 'nCFFw1H7' \
    --storeId 'w4aKkm08' \
    --itemIds 'saida5TN' \
    > test.out 2>&1
eval_tap $? 129 'BulkGetLocaleItems' test.out

#- 130 GetAvailablePredicateTypes
$CLI_EXE \
    --sn platform \
    --op GetAvailablePredicateTypes \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 130 'GetAvailablePredicateTypes' test.out

#- 131 ValidateItemPurchaseCondition
# body param: body
echo '{"itemIds": ["CIXby7uS", "xDjT3feK", "low5USdu"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ValidateItemPurchaseCondition \
    --namespace $AB_NAMESPACE \
    --platform 'IESzAurH' \
    --userId 'UFKiGxEu' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 131 'ValidateItemPurchaseCondition' test.out

#- 132 BulkUpdateRegionData
# body param: body
echo '{"changes": [{"itemIdentities": ["IQahZ3f0", "tcdRpUmc", "Mghm09Xp"], "itemIdentityType": "ITEM_SKU", "regionData": {"334qWdTX": [{"currencyCode": "UylJQ8ym", "currencyNamespace": "daEb0dht", "currencyType": "REAL", "discountAmount": 77, "discountExpireAt": "1997-04-12T00:00:00Z", "discountPercentage": 87, "discountPurchaseAt": "1995-02-02T00:00:00Z", "discountedPrice": 68, "expireAt": "1993-12-27T00:00:00Z", "price": 43, "purchaseAt": "1993-07-07T00:00:00Z", "trialPrice": 32}, {"currencyCode": "Zy1kfR2T", "currencyNamespace": "8qXIhMws", "currencyType": "REAL", "discountAmount": 10, "discountExpireAt": "1979-10-28T00:00:00Z", "discountPercentage": 51, "discountPurchaseAt": "1998-11-14T00:00:00Z", "discountedPrice": 30, "expireAt": "1994-08-22T00:00:00Z", "price": 21, "purchaseAt": "1979-03-05T00:00:00Z", "trialPrice": 97}, {"currencyCode": "0dL8iCpi", "currencyNamespace": "muP4JtsT", "currencyType": "VIRTUAL", "discountAmount": 50, "discountExpireAt": "1988-11-06T00:00:00Z", "discountPercentage": 47, "discountPurchaseAt": "1971-12-20T00:00:00Z", "discountedPrice": 53, "expireAt": "1984-09-04T00:00:00Z", "price": 22, "purchaseAt": "1988-10-17T00:00:00Z", "trialPrice": 85}], "EIaHsT8f": [{"currencyCode": "ml0QmzzW", "currencyNamespace": "qoOHNr6P", "currencyType": "VIRTUAL", "discountAmount": 8, "discountExpireAt": "1979-10-19T00:00:00Z", "discountPercentage": 60, "discountPurchaseAt": "1988-04-29T00:00:00Z", "discountedPrice": 22, "expireAt": "1990-09-07T00:00:00Z", "price": 15, "purchaseAt": "1986-03-07T00:00:00Z", "trialPrice": 25}, {"currencyCode": "LkjemIAd", "currencyNamespace": "clbSLona", "currencyType": "REAL", "discountAmount": 0, "discountExpireAt": "1994-11-11T00:00:00Z", "discountPercentage": 21, "discountPurchaseAt": "1980-12-15T00:00:00Z", "discountedPrice": 68, "expireAt": "1984-07-06T00:00:00Z", "price": 41, "purchaseAt": "1977-03-07T00:00:00Z", "trialPrice": 64}, {"currencyCode": "G2EycPRY", "currencyNamespace": "Y56j1DFY", "currencyType": "VIRTUAL", "discountAmount": 38, "discountExpireAt": "1987-12-07T00:00:00Z", "discountPercentage": 36, "discountPurchaseAt": "1987-11-30T00:00:00Z", "discountedPrice": 90, "expireAt": "1986-12-29T00:00:00Z", "price": 82, "purchaseAt": "1977-08-29T00:00:00Z", "trialPrice": 21}], "UDQqObkA": [{"currencyCode": "xcr0cOVW", "currencyNamespace": "tsdhPsEa", "currencyType": "VIRTUAL", "discountAmount": 77, "discountExpireAt": "1999-09-08T00:00:00Z", "discountPercentage": 72, "discountPurchaseAt": "1987-02-16T00:00:00Z", "discountedPrice": 19, "expireAt": "1993-12-26T00:00:00Z", "price": 86, "purchaseAt": "1973-01-08T00:00:00Z", "trialPrice": 10}, {"currencyCode": "ih2KzVmM", "currencyNamespace": "VOJ3eeyc", "currencyType": "REAL", "discountAmount": 29, "discountExpireAt": "1978-05-19T00:00:00Z", "discountPercentage": 45, "discountPurchaseAt": "1990-06-09T00:00:00Z", "discountedPrice": 89, "expireAt": "1990-02-03T00:00:00Z", "price": 11, "purchaseAt": "1983-10-05T00:00:00Z", "trialPrice": 94}, {"currencyCode": "0igW3GGw", "currencyNamespace": "hz6XG7US", "currencyType": "VIRTUAL", "discountAmount": 84, "discountExpireAt": "1997-05-31T00:00:00Z", "discountPercentage": 31, "discountPurchaseAt": "1980-07-15T00:00:00Z", "discountedPrice": 16, "expireAt": "1999-08-08T00:00:00Z", "price": 61, "purchaseAt": "1975-10-05T00:00:00Z", "trialPrice": 75}]}}, {"itemIdentities": ["a1qSNWCL", "50isac3N", "loDsbVlr"], "itemIdentityType": "ITEM_SKU", "regionData": {"Vn6v40YN": [{"currencyCode": "Fbc2sqZ8", "currencyNamespace": "4hZOhn07", "currencyType": "VIRTUAL", "discountAmount": 10, "discountExpireAt": "1977-02-20T00:00:00Z", "discountPercentage": 55, "discountPurchaseAt": "1998-03-15T00:00:00Z", "discountedPrice": 46, "expireAt": "1985-03-01T00:00:00Z", "price": 77, "purchaseAt": "1983-07-10T00:00:00Z", "trialPrice": 31}, {"currencyCode": "VuRVrsaU", "currencyNamespace": "OCyJZUY4", "currencyType": "REAL", "discountAmount": 55, "discountExpireAt": "1993-04-29T00:00:00Z", "discountPercentage": 34, "discountPurchaseAt": "1993-02-19T00:00:00Z", "discountedPrice": 60, "expireAt": "1984-05-15T00:00:00Z", "price": 48, "purchaseAt": "1987-03-29T00:00:00Z", "trialPrice": 20}, {"currencyCode": "vi0rGC8C", "currencyNamespace": "tZ3emgn8", "currencyType": "REAL", "discountAmount": 81, "discountExpireAt": "1999-01-24T00:00:00Z", "discountPercentage": 78, "discountPurchaseAt": "1974-03-28T00:00:00Z", "discountedPrice": 23, "expireAt": "1982-12-01T00:00:00Z", "price": 12, "purchaseAt": "1994-04-05T00:00:00Z", "trialPrice": 14}], "tm272IIQ": [{"currencyCode": "vhC8ac92", "currencyNamespace": "bMKPC5mO", "currencyType": "VIRTUAL", "discountAmount": 43, "discountExpireAt": "1991-06-22T00:00:00Z", "discountPercentage": 80, "discountPurchaseAt": "1989-06-10T00:00:00Z", "discountedPrice": 7, "expireAt": "1975-01-24T00:00:00Z", "price": 79, "purchaseAt": "1971-02-03T00:00:00Z", "trialPrice": 60}, {"currencyCode": "yPF7PSLW", "currencyNamespace": "dFDuaUzL", "currencyType": "REAL", "discountAmount": 3, "discountExpireAt": "1978-11-08T00:00:00Z", "discountPercentage": 37, "discountPurchaseAt": "1993-04-22T00:00:00Z", "discountedPrice": 89, "expireAt": "1986-10-21T00:00:00Z", "price": 47, "purchaseAt": "1975-03-09T00:00:00Z", "trialPrice": 16}, {"currencyCode": "YnUbLNcq", "currencyNamespace": "2uxd1Ufh", "currencyType": "REAL", "discountAmount": 56, "discountExpireAt": "1984-09-11T00:00:00Z", "discountPercentage": 34, "discountPurchaseAt": "1982-06-05T00:00:00Z", "discountedPrice": 64, "expireAt": "1992-06-23T00:00:00Z", "price": 79, "purchaseAt": "1987-04-22T00:00:00Z", "trialPrice": 53}], "J9qfdEvL": [{"currencyCode": "H4Ard5ci", "currencyNamespace": "mjiy6pnF", "currencyType": "VIRTUAL", "discountAmount": 40, "discountExpireAt": "1984-12-23T00:00:00Z", "discountPercentage": 81, "discountPurchaseAt": "1972-08-14T00:00:00Z", "discountedPrice": 45, "expireAt": "1976-05-20T00:00:00Z", "price": 22, "purchaseAt": "1987-07-25T00:00:00Z", "trialPrice": 57}, {"currencyCode": "HYMmtXDa", "currencyNamespace": "DOgLpNhS", "currencyType": "REAL", "discountAmount": 12, "discountExpireAt": "1985-02-01T00:00:00Z", "discountPercentage": 11, "discountPurchaseAt": "1971-11-23T00:00:00Z", "discountedPrice": 79, "expireAt": "1994-06-29T00:00:00Z", "price": 82, "purchaseAt": "1984-02-12T00:00:00Z", "trialPrice": 15}, {"currencyCode": "xW74zr7Z", "currencyNamespace": "on8xm5LY", "currencyType": "REAL", "discountAmount": 58, "discountExpireAt": "1985-05-06T00:00:00Z", "discountPercentage": 57, "discountPurchaseAt": "1996-05-25T00:00:00Z", "discountedPrice": 67, "expireAt": "1989-10-09T00:00:00Z", "price": 49, "purchaseAt": "1998-09-25T00:00:00Z", "trialPrice": 10}]}}, {"itemIdentities": ["iVuNI316", "BkJLbU6t", "AZeI08AY"], "itemIdentityType": "ITEM_ID", "regionData": {"X4VifAGb": [{"currencyCode": "Jlvsoc6Y", "currencyNamespace": "Tnh1uC2A", "currencyType": "REAL", "discountAmount": 55, "discountExpireAt": "1992-03-31T00:00:00Z", "discountPercentage": 44, "discountPurchaseAt": "1987-03-12T00:00:00Z", "discountedPrice": 37, "expireAt": "1991-09-04T00:00:00Z", "price": 82, "purchaseAt": "1972-09-29T00:00:00Z", "trialPrice": 88}, {"currencyCode": "Y3FW17Yb", "currencyNamespace": "WI4L99Um", "currencyType": "REAL", "discountAmount": 69, "discountExpireAt": "1992-12-07T00:00:00Z", "discountPercentage": 7, "discountPurchaseAt": "1990-05-15T00:00:00Z", "discountedPrice": 99, "expireAt": "1978-05-21T00:00:00Z", "price": 43, "purchaseAt": "1991-06-14T00:00:00Z", "trialPrice": 97}, {"currencyCode": "ZfSrovNM", "currencyNamespace": "oQnp8kXG", "currencyType": "REAL", "discountAmount": 81, "discountExpireAt": "1989-11-27T00:00:00Z", "discountPercentage": 66, "discountPurchaseAt": "1994-09-15T00:00:00Z", "discountedPrice": 6, "expireAt": "1995-06-23T00:00:00Z", "price": 58, "purchaseAt": "1983-03-22T00:00:00Z", "trialPrice": 12}], "mRkaFqLa": [{"currencyCode": "E53V8sG6", "currencyNamespace": "iZIjFdsM", "currencyType": "VIRTUAL", "discountAmount": 46, "discountExpireAt": "1981-11-06T00:00:00Z", "discountPercentage": 48, "discountPurchaseAt": "1979-04-05T00:00:00Z", "discountedPrice": 67, "expireAt": "1985-02-19T00:00:00Z", "price": 12, "purchaseAt": "1998-06-21T00:00:00Z", "trialPrice": 71}, {"currencyCode": "rqPZnYVT", "currencyNamespace": "lb4TdoJb", "currencyType": "REAL", "discountAmount": 65, "discountExpireAt": "1975-07-31T00:00:00Z", "discountPercentage": 34, "discountPurchaseAt": "1984-02-04T00:00:00Z", "discountedPrice": 6, "expireAt": "1996-02-27T00:00:00Z", "price": 12, "purchaseAt": "1981-07-19T00:00:00Z", "trialPrice": 54}, {"currencyCode": "NTSizq9l", "currencyNamespace": "zHiEdn34", "currencyType": "VIRTUAL", "discountAmount": 77, "discountExpireAt": "1997-06-23T00:00:00Z", "discountPercentage": 94, "discountPurchaseAt": "1989-08-05T00:00:00Z", "discountedPrice": 17, "expireAt": "1986-06-10T00:00:00Z", "price": 34, "purchaseAt": "1978-08-27T00:00:00Z", "trialPrice": 34}], "y8UCwihR": [{"currencyCode": "IGs93QbO", "currencyNamespace": "zGioyHoj", "currencyType": "REAL", "discountAmount": 36, "discountExpireAt": "1975-05-07T00:00:00Z", "discountPercentage": 88, "discountPurchaseAt": "1976-07-22T00:00:00Z", "discountedPrice": 18, "expireAt": "1983-11-08T00:00:00Z", "price": 9, "purchaseAt": "1984-05-01T00:00:00Z", "trialPrice": 63}, {"currencyCode": "sfiH8z2r", "currencyNamespace": "55Zv1lN2", "currencyType": "REAL", "discountAmount": 86, "discountExpireAt": "1983-10-19T00:00:00Z", "discountPercentage": 76, "discountPurchaseAt": "1988-05-09T00:00:00Z", "discountedPrice": 91, "expireAt": "1994-05-05T00:00:00Z", "price": 96, "purchaseAt": "1971-12-25T00:00:00Z", "trialPrice": 2}, {"currencyCode": "QXeOkgLE", "currencyNamespace": "38WlZvHi", "currencyType": "REAL", "discountAmount": 44, "discountExpireAt": "1973-10-09T00:00:00Z", "discountPercentage": 52, "discountPurchaseAt": "1986-01-23T00:00:00Z", "discountedPrice": 60, "expireAt": "1990-09-24T00:00:00Z", "price": 76, "purchaseAt": "1973-04-19T00:00:00Z", "trialPrice": 57}]}}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op BulkUpdateRegionData \
    --namespace $AB_NAMESPACE \
    --storeId 'G0YZ0d3G' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 132 'BulkUpdateRegionData' test.out

#- 133 SearchItems
$CLI_EXE \
    --sn platform \
    --op SearchItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --itemType 'SUBSCRIPTION' \
    --limit '79' \
    --offset '21' \
    --sortBy 'vSZgNm3D' \
    --storeId 'VtKtYq4C' \
    --keyword 'EHWDnvMv' \
    --language 'e32Agjwp' \
    > test.out 2>&1
eval_tap $? 133 'SearchItems' test.out

#- 134 QueryUncategorizedItems
$CLI_EXE \
    --sn platform \
    --op QueryUncategorizedItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --limit '71' \
    --offset '53' \
    --sortBy '["name:desc", "createdAt:desc"]' \
    --storeId 'qMToWH8q' \
    > test.out 2>&1
eval_tap $? 134 'QueryUncategorizedItems' test.out

#- 135 GetItem
$CLI_EXE \
    --sn platform \
    --op GetItem \
    --itemId 'lB2hnd9o' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --storeId 'kO3wirmB' \
    > test.out 2>&1
eval_tap $? 135 'GetItem' test.out

#- 136 UpdateItem
# body param: body
echo '{"appId": "kbWW7yFZ", "appType": "DLC", "baseAppId": "fIdymKW9", "boothName": "uzFOacXJ", "categoryPath": "jznbQj2T", "clazz": "SiZU16Qt", "displayOrder": 12, "entitlementType": "CONSUMABLE", "ext": {"87QSfOBi": {}, "mkAX8dhD": {}, "xJ4xUjpY": {}}, "features": ["4PGecF6F", "eE5uX6hC", "dpQVVV5w"], "flexible": true, "images": [{"as": "z2Ep9RUL", "caption": "Cu5GBgyu", "height": 88, "imageUrl": "QYWTHAJi", "smallImageUrl": "8YceGylJ", "width": 58}, {"as": "DaKY2BJc", "caption": "orrSqeMB", "height": 71, "imageUrl": "xO7P81BP", "smallImageUrl": "eGiDC6rW", "width": 37}, {"as": "aXbtd44E", "caption": "ASUzBqju", "height": 19, "imageUrl": "EU5fDsG2", "smallImageUrl": "ABFSHP7O", "width": 9}], "inventoryConfig": {"customAttributes": {"zPap2tfL": {}, "lRm3XfVq": {}, "GF4fGyfT": {}}, "serverCustomAttributes": {"bAjgzWSz": {}, "YWdLxHEs": {}, "tGPT61QM": {}}, "slotUsed": 8}, "itemIds": ["Q4cRu7FO", "kARjgSUX", "bXxI5eCW"], "itemQty": {"rdtl4orB": 57, "sKw2aTW4": 0, "NmlFaaEN": 35}, "itemType": "SEASON", "listable": false, "localizations": {"ZfpEorcj": {"description": "v13sSwZA", "localExt": {"SbnZu2xh": {}, "vkNet3GA": {}, "ayWidqIz": {}}, "longDescription": "S4lLaY5L", "title": "yB4gnJ7U"}, "cofABZoV": {"description": "5kERxVLo", "localExt": {"DQSPkJ1G": {}, "F4LuGUKX": {}, "1Htc5IBk": {}}, "longDescription": "x78rY3sK", "title": "ezOIXXZn"}, "hPOXlDUB": {"description": "ITQ1yXOS", "localExt": {"G2u4enU5": {}, "4nFL03K3": {}, "f5jhP1NG": {}}, "longDescription": "vDG9GXq3", "title": "7bkyRqEK"}}, "lootBoxConfig": {"rewardCount": 19, "rewards": [{"lootBoxItems": [{"count": 7, "duration": 6, "endDate": "1977-12-31T00:00:00Z", "itemId": "4LJlRYKc", "itemSku": "LtMfPjoA", "itemType": "N2SLaoRk"}, {"count": 1, "duration": 49, "endDate": "1976-08-10T00:00:00Z", "itemId": "zqRQJYwc", "itemSku": "GbJcu81W", "itemType": "Pv5UIaPJ"}, {"count": 39, "duration": 40, "endDate": "1988-12-17T00:00:00Z", "itemId": "JyxixVsi", "itemSku": "pHhMLCGR", "itemType": "tSCELktP"}], "name": "5FFdL7nI", "odds": 0.7586046568570548, "type": "REWARD_GROUP", "weight": 41}, {"lootBoxItems": [{"count": 6, "duration": 92, "endDate": "1995-10-28T00:00:00Z", "itemId": "LeRjR1LO", "itemSku": "J9VsF3Kn", "itemType": "TvXkPdgv"}, {"count": 65, "duration": 59, "endDate": "1995-02-25T00:00:00Z", "itemId": "t0tWueR5", "itemSku": "YaiKv30N", "itemType": "XdzfEi7b"}, {"count": 4, "duration": 75, "endDate": "1995-09-10T00:00:00Z", "itemId": "jysvcsgg", "itemSku": "DzVappNg", "itemType": "JfxUmR6J"}], "name": "gIEpGD1c", "odds": 0.7467716098544515, "type": "REWARD_GROUP", "weight": 2}, {"lootBoxItems": [{"count": 36, "duration": 3, "endDate": "1977-11-15T00:00:00Z", "itemId": "HLHsX7U8", "itemSku": "DDzEXiDg", "itemType": "GwXfUezB"}, {"count": 14, "duration": 74, "endDate": "1977-12-15T00:00:00Z", "itemId": "X1bHqh8P", "itemSku": "0206SqUM", "itemType": "L6uC70zG"}, {"count": 70, "duration": 14, "endDate": "1998-05-31T00:00:00Z", "itemId": "2XyBtnVM", "itemSku": "l89eRUrq", "itemType": "2h6s1gDw"}], "name": "9dLwAjwM", "odds": 0.6281187318961452, "type": "REWARD_GROUP", "weight": 80}], "rollFunction": "CUSTOM"}, "maxCount": 36, "maxCountPerUser": 28, "name": "UJwPMcdk", "optionBoxConfig": {"boxItems": [{"count": 62, "duration": 73, "endDate": "1976-12-20T00:00:00Z", "itemId": "y3JBGhbg", "itemSku": "392GmOiO", "itemType": "QgXyENLN"}, {"count": 23, "duration": 58, "endDate": "1977-01-19T00:00:00Z", "itemId": "NPmv4qbh", "itemSku": "uVuTHbDD", "itemType": "U6IzQH1n"}, {"count": 76, "duration": 43, "endDate": "1997-11-03T00:00:00Z", "itemId": "fgYlWDKp", "itemSku": "SYIkJtb4", "itemType": "WT7oteUB"}]}, "purchasable": false, "recurring": {"cycle": "YEARLY", "fixedFreeDays": 29, "fixedTrialCycles": 67, "graceDays": 19}, "regionData": {"8dzrJnbW": [{"currencyCode": "jEWJOm75", "currencyNamespace": "cTAZNoTN", "currencyType": "REAL", "discountAmount": 66, "discountExpireAt": "1996-03-06T00:00:00Z", "discountPercentage": 27, "discountPurchaseAt": "1980-06-26T00:00:00Z", "expireAt": "1992-01-26T00:00:00Z", "price": 82, "purchaseAt": "1973-02-21T00:00:00Z", "trialPrice": 40}, {"currencyCode": "KWJ4UjPH", "currencyNamespace": "WQ1bvMcX", "currencyType": "REAL", "discountAmount": 47, "discountExpireAt": "1994-07-15T00:00:00Z", "discountPercentage": 3, "discountPurchaseAt": "1994-04-27T00:00:00Z", "expireAt": "1977-08-17T00:00:00Z", "price": 70, "purchaseAt": "1998-01-17T00:00:00Z", "trialPrice": 78}, {"currencyCode": "vDbwOpSe", "currencyNamespace": "VjTaRkH9", "currencyType": "REAL", "discountAmount": 70, "discountExpireAt": "1971-11-28T00:00:00Z", "discountPercentage": 10, "discountPurchaseAt": "1995-01-25T00:00:00Z", "expireAt": "1986-04-05T00:00:00Z", "price": 28, "purchaseAt": "1989-08-10T00:00:00Z", "trialPrice": 25}], "e4Uv7LnH": [{"currencyCode": "WeN79XaW", "currencyNamespace": "aLANzY2z", "currencyType": "REAL", "discountAmount": 62, "discountExpireAt": "1975-04-05T00:00:00Z", "discountPercentage": 67, "discountPurchaseAt": "1988-03-26T00:00:00Z", "expireAt": "1976-12-18T00:00:00Z", "price": 85, "purchaseAt": "1994-10-03T00:00:00Z", "trialPrice": 76}, {"currencyCode": "j25Wdjhj", "currencyNamespace": "HTvJx9iL", "currencyType": "VIRTUAL", "discountAmount": 94, "discountExpireAt": "1979-04-24T00:00:00Z", "discountPercentage": 89, "discountPurchaseAt": "1971-02-09T00:00:00Z", "expireAt": "1994-12-03T00:00:00Z", "price": 67, "purchaseAt": "1998-12-24T00:00:00Z", "trialPrice": 92}, {"currencyCode": "jHB2ktO6", "currencyNamespace": "9a7GmYNi", "currencyType": "VIRTUAL", "discountAmount": 21, "discountExpireAt": "1980-12-15T00:00:00Z", "discountPercentage": 58, "discountPurchaseAt": "1987-11-29T00:00:00Z", "expireAt": "1982-07-02T00:00:00Z", "price": 34, "purchaseAt": "1992-06-17T00:00:00Z", "trialPrice": 68}], "F358FJKF": [{"currencyCode": "jmXLTLcp", "currencyNamespace": "1gMur6h4", "currencyType": "VIRTUAL", "discountAmount": 85, "discountExpireAt": "1972-01-24T00:00:00Z", "discountPercentage": 58, "discountPurchaseAt": "1982-09-30T00:00:00Z", "expireAt": "1989-07-05T00:00:00Z", "price": 18, "purchaseAt": "1972-09-02T00:00:00Z", "trialPrice": 23}, {"currencyCode": "u8m7pWwa", "currencyNamespace": "f1PA4a9n", "currencyType": "REAL", "discountAmount": 71, "discountExpireAt": "1977-07-15T00:00:00Z", "discountPercentage": 64, "discountPurchaseAt": "1986-02-02T00:00:00Z", "expireAt": "1981-08-25T00:00:00Z", "price": 21, "purchaseAt": "1975-10-09T00:00:00Z", "trialPrice": 61}, {"currencyCode": "yylYMaeO", "currencyNamespace": "gCAF9DE5", "currencyType": "VIRTUAL", "discountAmount": 54, "discountExpireAt": "1987-12-28T00:00:00Z", "discountPercentage": 70, "discountPurchaseAt": "1984-03-19T00:00:00Z", "expireAt": "1976-05-24T00:00:00Z", "price": 81, "purchaseAt": "1983-03-04T00:00:00Z", "trialPrice": 63}]}, "saleConfig": {"currencyCode": "U5ZczZ9F", "price": 66}, "seasonType": "PASS", "sectionExclusive": false, "sellable": false, "sku": "gPHTAXAG", "stackable": true, "status": "ACTIVE", "tags": ["dc891fdN", "RAm8sr4b", "1ygqfXRw"], "targetCurrencyCode": "DGYMULSO", "targetNamespace": "Dp15x4aN", "thumbnailUrl": "fuVGw2LY", "useCount": 25}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateItem \
    --itemId '5H7HhDwb' \
    --namespace $AB_NAMESPACE \
    --storeId '9S2HR6ne' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 136 'UpdateItem' test.out

#- 137 DeleteItem
$CLI_EXE \
    --sn platform \
    --op DeleteItem \
    --itemId '9D1r9xzb' \
    --namespace $AB_NAMESPACE \
    --featuresToCheck '["IAP", "DLC", "IAP"]' \
    --force 'true' \
    --storeId 'oFOjAVkT' \
    > test.out 2>&1
eval_tap $? 137 'DeleteItem' test.out

#- 138 AcquireItem
# body param: body
echo '{"count": 63, "orderNo": "EzoutfFO"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op AcquireItem \
    --itemId 'vb5fR7Zd' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 138 'AcquireItem' test.out

#- 139 GetApp
$CLI_EXE \
    --sn platform \
    --op GetApp \
    --itemId 'pl9fUr9Y' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --storeId '5R84jWzf' \
    > test.out 2>&1
eval_tap $? 139 'GetApp' test.out

#- 140 UpdateApp
# body param: body
echo '{"carousel": [{"alt": "iZ4cAQ1d", "previewUrl": "mL248Rli", "thumbnailUrl": "RCMPwcWj", "type": "video", "url": "dpgBo4oL", "videoSource": "generic"}, {"alt": "kLmzKyvf", "previewUrl": "Qs4TypJb", "thumbnailUrl": "W3z9Zsi5", "type": "image", "url": "IsKbysa0", "videoSource": "vimeo"}, {"alt": "Be0hsHZ0", "previewUrl": "yqM2z82N", "thumbnailUrl": "FTP3Yagx", "type": "image", "url": "RBwoqMNE", "videoSource": "vimeo"}], "developer": "umG6UDFa", "forumUrl": "hhVj7nvN", "genres": ["Sports", "RPG", "FreeToPlay"], "localizations": {"EIJlqSmK": {"announcement": "IAuh9nbI", "slogan": "Q03x4nWi"}, "QXyuNJvn": {"announcement": "VEPvwDja", "slogan": "kaDsKLsd"}, "FfzYun18": {"announcement": "4qKsbQY4", "slogan": "N6lh74EP"}}, "platformRequirements": {"AJK42eOZ": [{"additionals": "shW6bntl", "directXVersion": "rlSyqhcn", "diskSpace": "EIoRoOEj", "graphics": "YtO7vKVj", "label": "R1og5diI", "osVersion": "GsfbSZ6T", "processor": "lImiGPSQ", "ram": "LYcgqtZV", "soundCard": "W9L99m1J"}, {"additionals": "Hc40AiXg", "directXVersion": "Z7QxA5kl", "diskSpace": "EfzzKrDf", "graphics": "P4yPbi8i", "label": "xLdGKi0a", "osVersion": "tSyKmaNu", "processor": "NGMPknEH", "ram": "ANZDe05l", "soundCard": "FHNLbsqG"}, {"additionals": "2b9AN6HM", "directXVersion": "y9uUx7dR", "diskSpace": "rB0xvLLe", "graphics": "gF3rt45l", "label": "QC4PVTuq", "osVersion": "yfBed2N3", "processor": "R6XWz3mz", "ram": "EONeUUfx", "soundCard": "1EL71ra6"}], "2Tn5mb6o": [{"additionals": "m33HD7PL", "directXVersion": "IaaDQnOU", "diskSpace": "cg25rlwN", "graphics": "vasBqfhl", "label": "gky26xgr", "osVersion": "OLGMfXvw", "processor": "l2Pl41jK", "ram": "KMN8lcqb", "soundCard": "KUhcGIfS"}, {"additionals": "GLZdBqNp", "directXVersion": "J0cENLlr", "diskSpace": "EarPy002", "graphics": "HbFXEgkC", "label": "3y2XvEoY", "osVersion": "GZLoZblA", "processor": "os394Trk", "ram": "PqyI8qOM", "soundCard": "TW0aSKQA"}, {"additionals": "0NzpNlu5", "directXVersion": "vWTuhCEp", "diskSpace": "agEW3WCT", "graphics": "MwpxdezU", "label": "xd7KMqRs", "osVersion": "8aGk6KI8", "processor": "EjMNvfJF", "ram": "elOPdBYf", "soundCard": "p2vWB3R7"}], "nWuTgeLs": [{"additionals": "Bt9Q49GU", "directXVersion": "c8Zm8pUE", "diskSpace": "dff5zAT1", "graphics": "9M1SpYvP", "label": "tVLl3jhg", "osVersion": "oUofkRwo", "processor": "Jl8poBx8", "ram": "hrDMMfAE", "soundCard": "rEROFCmu"}, {"additionals": "NDRAQDH9", "directXVersion": "CM57P3IG", "diskSpace": "sNIxSAgj", "graphics": "3yiCtlvr", "label": "LV1I8a4Q", "osVersion": "pGoDPPaV", "processor": "n9gvx7lJ", "ram": "4Ku66V1J", "soundCard": "PYtL17ir"}, {"additionals": "7Q05uMrZ", "directXVersion": "2gl8mhtx", "diskSpace": "BdebJKxT", "graphics": "uNUY8Ho9", "label": "tGbpiQ3t", "osVersion": "Ed283N1W", "processor": "wQ2oDKGF", "ram": "oISbS8d6", "soundCard": "yHFdyOfH"}]}, "platforms": ["Windows", "Linux", "Windows"], "players": ["CrossPlatformMulti", "MMO", "Multi"], "primaryGenre": "Action", "publisher": "2vYrv0iw", "releaseDate": "1983-09-22T00:00:00Z", "websiteUrl": "e2cXDs6u"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateApp \
    --itemId 'klx8PHjM' \
    --namespace $AB_NAMESPACE \
    --storeId 'xmdlOwNh' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 140 'UpdateApp' test.out

#- 141 DisableItem
# body param: body
echo '{"featuresToCheck": ["DLC", "CAMPAIGN"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op DisableItem \
    --itemId '4zi57zMd' \
    --namespace $AB_NAMESPACE \
    --storeId 'o56keG6s' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 141 'DisableItem' test.out

#- 142 GetItemDynamicData
$CLI_EXE \
    --sn platform \
    --op GetItemDynamicData \
    --itemId 'YcDaULAV' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 142 'GetItemDynamicData' test.out

#- 143 EnableItem
$CLI_EXE \
    --sn platform \
    --op EnableItem \
    --itemId 'j6QWuFLB' \
    --namespace $AB_NAMESPACE \
    --storeId 'eb3zrL6w' \
    > test.out 2>&1
eval_tap $? 143 'EnableItem' test.out

#- 144 FeatureItem
$CLI_EXE \
    --sn platform \
    --op FeatureItem \
    --feature 'obwmLZBx' \
    --itemId '9EuVXJ1F' \
    --namespace $AB_NAMESPACE \
    --storeId 'uNwOso1R' \
    > test.out 2>&1
eval_tap $? 144 'FeatureItem' test.out

#- 145 DefeatureItem
$CLI_EXE \
    --sn platform \
    --op DefeatureItem \
    --feature 'Uiw5LZnM' \
    --itemId 'LuisRkol' \
    --namespace $AB_NAMESPACE \
    --storeId 'CmFdoDh2' \
    > test.out 2>&1
eval_tap $? 145 'DefeatureItem' test.out

#- 146 GetLocaleItem
$CLI_EXE \
    --sn platform \
    --op GetLocaleItem \
    --itemId 'L9DYcnwI' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --language '7sBEZvMc' \
    --populateBundle 'true' \
    --region '0Z2nXny6' \
    --storeId 'U3DL3Hkj' \
    > test.out 2>&1
eval_tap $? 146 'GetLocaleItem' test.out

#- 147 UpdateItemPurchaseCondition
# body param: body
echo '{"purchaseCondition": {"conditionGroups": [{"operator": "and", "predicates": [{"anyOf": 54, "code": "H4KPwdBl", "comparison": "isNot", "name": "HMIWn6Sk", "predicateType": "SeasonPassPredicate", "value": "cid0OKiC", "values": ["LvVTHVnh", "rBdibQzR", "XKjqZwYN"]}, {"anyOf": 58, "code": "nv5kCSlV", "comparison": "isLessThanOrEqual", "name": "xS0KsCXc", "predicateType": "SeasonTierPredicate", "value": "HYXLUcNH", "values": ["Cp1jSxrV", "gytQwPfP", "Mc4m5Ket"]}, {"anyOf": 20, "code": "fiXHmzhA", "comparison": "isLessThanOrEqual", "name": "jw0iXBQW", "predicateType": "EntitlementPredicate", "value": "vzdBF9Zv", "values": ["Quy3RUAX", "DJI4BI42", "z9hmksb5"]}]}, {"operator": "and", "predicates": [{"anyOf": 89, "code": "gV2LMCcv", "comparison": "isGreaterThanOrEqual", "name": "xek10Ckn", "predicateType": "SeasonPassPredicate", "value": "Q0nterPJ", "values": ["k5qNUNv7", "8qO2xyD2", "r2dmMHu0"]}, {"anyOf": 6, "code": "0oC7TJ23", "comparison": "isGreaterThanOrEqual", "name": "SOa6kUdL", "predicateType": "StatisticCodePredicate", "value": "KP1mfMSE", "values": ["GeUvNMsd", "n1l384Xc", "6q5XV7ti"]}, {"anyOf": 48, "code": "EWZlQkV8", "comparison": "isGreaterThan", "name": "hQPE2U3i", "predicateType": "SeasonPassPredicate", "value": "tMgRZRD7", "values": ["bXSJ0L8w", "BiDWaGQ9", "PYN06Lbv"]}]}, {"operator": "and", "predicates": [{"anyOf": 88, "code": "o0Ed6fki", "comparison": "includes", "name": "omAFIYYu", "predicateType": "SeasonPassPredicate", "value": "MjTbPN6j", "values": ["l8rj7bKx", "YQMjgM2R", "x8HqkAcB"]}, {"anyOf": 81, "code": "HxgJ1Wes", "comparison": "isNot", "name": "NkYckzDE", "predicateType": "EntitlementPredicate", "value": "Mx6izxzI", "values": ["xnRkxK9t", "KvjEirCd", "cAoTvayM"]}, {"anyOf": 95, "code": "MzzKojsA", "comparison": "includes", "name": "t1E5AqRd", "predicateType": "EntitlementPredicate", "value": "GUeF9Zru", "values": ["AQMFXO61", "mpvme2lZ", "wd5e615T"]}]}]}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateItemPurchaseCondition \
    --itemId 'gtiyKIIp' \
    --namespace $AB_NAMESPACE \
    --storeId 'LqozWQMs' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 147 'UpdateItemPurchaseCondition' test.out

#- 148 QueryItemReferences
$CLI_EXE \
    --sn platform \
    --op QueryItemReferences \
    --itemId 'jRf0N44C' \
    --namespace $AB_NAMESPACE \
    --featuresToCheck '["IAP", "ENTITLEMENT", "REWARD"]' \
    --storeId 'NUqfXE83' \
    > test.out 2>&1
eval_tap $? 148 'QueryItemReferences' test.out

#- 149 ReturnItem
# body param: body
echo '{"orderNo": "ubJdoGVl"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ReturnItem \
    --itemId '0JQquhZq' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 149 'ReturnItem' test.out

#- 150 QueryKeyGroups
$CLI_EXE \
    --sn platform \
    --op QueryKeyGroups \
    --namespace $AB_NAMESPACE \
    --limit '3' \
    --name 'orcRnYeK' \
    --offset '35' \
    --tag 'tGJqZQ7l' \
    > test.out 2>&1
eval_tap $? 150 'QueryKeyGroups' test.out

#- 151 CreateKeyGroup
# body param: body
echo '{"description": "f4rbuvHm", "name": "PmwiQBq6", "status": "ACTIVE", "tags": ["KjwndDUp", "51GvAaL4", "vwrPmGiD"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateKeyGroup \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 151 'CreateKeyGroup' test.out

#- 152 GetKeyGroupByBoothName
eval_tap 0 152 'GetKeyGroupByBoothName # SKIP deprecated' test.out

#- 153 GetKeyGroup
$CLI_EXE \
    --sn platform \
    --op GetKeyGroup \
    --keyGroupId '5y74wqQS' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 153 'GetKeyGroup' test.out

#- 154 UpdateKeyGroup
# body param: body
echo '{"description": "94OJxA1O", "name": "oUdJrpT2", "status": "ACTIVE", "tags": ["P4CTRiPs", "pL4qUONL", "RhrcRnhs"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateKeyGroup \
    --keyGroupId 'hoSWrX15' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 154 'UpdateKeyGroup' test.out

#- 155 GetKeyGroupDynamic
$CLI_EXE \
    --sn platform \
    --op GetKeyGroupDynamic \
    --keyGroupId 'qmhjYZeV' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 155 'GetKeyGroupDynamic' test.out

#- 156 ListKeys
$CLI_EXE \
    --sn platform \
    --op ListKeys \
    --keyGroupId 'y44UgSpD' \
    --namespace $AB_NAMESPACE \
    --limit '75' \
    --offset '41' \
    --status 'ACQUIRED' \
    > test.out 2>&1
eval_tap $? 156 'ListKeys' test.out

#- 157 UploadKeys
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UploadKeys \
    --keyGroupId 'RzLmcSTd' \
    --namespace $AB_NAMESPACE \
    --upload file $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 157 'UploadKeys' test.out

#- 158 QueryOrders
$CLI_EXE \
    --sn platform \
    --op QueryOrders \
    --namespace $AB_NAMESPACE \
    --endTime 'ZD19SnGc' \
    --limit '13' \
    --offset '16' \
    --orderNos '["f0pGKQtG", "nC0BUJRj", "Gqkxlp0v"]' \
    --sortBy 'mDbLuYmo' \
    --startTime 'e6l6Mz4b' \
    --status 'CHARGED' \
    --withTotal 'false' \
    > test.out 2>&1
eval_tap $? 158 'QueryOrders' test.out

#- 159 GetOrderStatistics
$CLI_EXE \
    --sn platform \
    --op GetOrderStatistics \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 159 'GetOrderStatistics' test.out

#- 160 GetOrder
$CLI_EXE \
    --sn platform \
    --op GetOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'KRuqMGDm' \
    > test.out 2>&1
eval_tap $? 160 'GetOrder' test.out

#- 161 RefundOrder
# body param: body
echo '{"description": "E4p2p2G9"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RefundOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'XVUGpxJP' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 161 'RefundOrder' test.out

#- 162 GetPaymentCallbackConfig
eval_tap 0 162 'GetPaymentCallbackConfig # SKIP deprecated' test.out

#- 163 UpdatePaymentCallbackConfig
eval_tap 0 163 'UpdatePaymentCallbackConfig # SKIP deprecated' test.out

#- 164 GetPaymentMerchantConfig
$CLI_EXE \
    --sn platform \
    --op GetPaymentMerchantConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 164 'GetPaymentMerchantConfig' test.out

#- 165 UpdatePaymentDomainWhitelistConfig
# body param: body
echo '{"domains": ["JoamKPus", "Zex4oDA8", "UoVpslMi"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePaymentDomainWhitelistConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 165 'UpdatePaymentDomainWhitelistConfig' test.out

#- 166 QueryPaymentNotifications
$CLI_EXE \
    --sn platform \
    --op QueryPaymentNotifications \
    --namespace $AB_NAMESPACE \
    --endDate 'gVWbPCLd' \
    --externalId 'LIQf9pp9' \
    --limit '48' \
    --notificationSource 'WALLET' \
    --notificationType 'yMH79Mrl' \
    --offset '65' \
    --paymentOrderNo 'x8JuniAN' \
    --startDate 't1dQpdmw' \
    --status 'PROCESSED' \
    > test.out 2>&1
eval_tap $? 166 'QueryPaymentNotifications' test.out

#- 167 QueryPaymentOrders
$CLI_EXE \
    --sn platform \
    --op QueryPaymentOrders \
    --namespace $AB_NAMESPACE \
    --channel 'EXTERNAL' \
    --extTxId '6jktFTEt' \
    --limit '71' \
    --offset '1' \
    --status 'REFUNDING' \
    > test.out 2>&1
eval_tap $? 167 'QueryPaymentOrders' test.out

#- 168 CreatePaymentOrderByDedicated
# body param: body
echo '{"currencyCode": "ZAJH3NAO", "currencyNamespace": "a6FanMAc", "customParameters": {"xbA0aZpJ": {}, "visFTYMx": {}, "EGzZFO2l": {}}, "description": "Hq0ierA1", "extOrderNo": "IWFLZOyI", "extUserId": "iD7MiDRT", "itemType": "INGAMEITEM", "language": "lu", "metadata": {"v3geaTPd": "PuqF36Ey", "urmUZlRY": "uAgA2Sth", "fR1xLA2F": "wPxlfwaj"}, "notifyUrl": "nEgCAwd1", "omitNotification": false, "platform": "OY8BAcY7", "price": 34, "recurringPaymentOrderNo": "h3lRhWpM", "region": "lUyTYlPB", "returnUrl": "pvPGOeKy", "sandbox": false, "sku": "r4UCpB6p", "subscriptionId": "Q8Yx15oI", "targetNamespace": "IbRzTuEy", "targetUserId": "pKZpO17l", "title": "aAwvJQLQ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreatePaymentOrderByDedicated \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 168 'CreatePaymentOrderByDedicated' test.out

#- 169 ListExtOrderNoByExtTxId
$CLI_EXE \
    --sn platform \
    --op ListExtOrderNoByExtTxId \
    --namespace $AB_NAMESPACE \
    --extTxId 'UKCw87ms' \
    > test.out 2>&1
eval_tap $? 169 'ListExtOrderNoByExtTxId' test.out

#- 170 GetPaymentOrder
$CLI_EXE \
    --sn platform \
    --op GetPaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'szZ13tTU' \
    > test.out 2>&1
eval_tap $? 170 'GetPaymentOrder' test.out

#- 171 ChargePaymentOrder
# body param: body
echo '{"extTxId": "u2usFPmq", "paymentMethod": "jF5nxzMM", "paymentProvider": "CHECKOUT"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ChargePaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'vJviIHff' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 171 'ChargePaymentOrder' test.out

#- 172 RefundPaymentOrderByDedicated
# body param: body
echo '{"description": "WPyWw6pR"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RefundPaymentOrderByDedicated \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'ReDggqpq' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 172 'RefundPaymentOrderByDedicated' test.out

#- 173 SimulatePaymentOrderNotification
# body param: body
echo '{"amount": 34, "currencyCode": "SV1TpV82", "notifyType": "CHARGE", "paymentProvider": "NEONPAY", "salesTax": 84, "vat": 57}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SimulatePaymentOrderNotification \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'XZsRkIOv' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 173 'SimulatePaymentOrderNotification' test.out

#- 174 GetPaymentOrderChargeStatus
$CLI_EXE \
    --sn platform \
    --op GetPaymentOrderChargeStatus \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'lsgqdvkz' \
    > test.out 2>&1
eval_tap $? 174 'GetPaymentOrderChargeStatus' test.out

#- 175 GetPsnEntitlementOwnership
# body param: body
echo '{"accessToken": "lEFUe5pO", "serviceLabel": 59}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op GetPsnEntitlementOwnership \
    --entitlementLabel 'HVqCKxuD' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 175 'GetPsnEntitlementOwnership' test.out

#- 176 GetXboxEntitlementOwnership
# body param: body
echo '{"delegationToken": "K8kl5Rna", "sandboxId": "HRWX5JFi"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op GetXboxEntitlementOwnership \
    --namespace $AB_NAMESPACE \
    --productSku 'fqfAtUC6' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 176 'GetXboxEntitlementOwnership' test.out

#- 177 GetPlatformEntitlementConfig
$CLI_EXE \
    --sn platform \
    --op GetPlatformEntitlementConfig \
    --namespace $AB_NAMESPACE \
    --platform 'Epic' \
    > test.out 2>&1
eval_tap $? 177 'GetPlatformEntitlementConfig' test.out

#- 178 UpdatePlatformEntitlementConfig
# body param: body
echo '{"allowedPlatformOrigins": ["Playstation", "Xbox", "Playstation"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePlatformEntitlementConfig \
    --namespace $AB_NAMESPACE \
    --platform 'Steam' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 178 'UpdatePlatformEntitlementConfig' test.out

#- 179 GetPlatformWalletConfig
$CLI_EXE \
    --sn platform \
    --op GetPlatformWalletConfig \
    --namespace $AB_NAMESPACE \
    --platform 'IOS' \
    > test.out 2>&1
eval_tap $? 179 'GetPlatformWalletConfig' test.out

#- 180 UpdatePlatformWalletConfig
# body param: body
echo '{"allowedBalanceOrigins": ["Playstation", "Other", "Twitch"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePlatformWalletConfig \
    --namespace $AB_NAMESPACE \
    --platform 'Oculus' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 180 'UpdatePlatformWalletConfig' test.out

#- 181 ResetPlatformWalletConfig
$CLI_EXE \
    --sn platform \
    --op ResetPlatformWalletConfig \
    --namespace $AB_NAMESPACE \
    --platform 'Nintendo' \
    > test.out 2>&1
eval_tap $? 181 'ResetPlatformWalletConfig' test.out

#- 182 GetRevocationConfig
$CLI_EXE \
    --sn platform \
    --op GetRevocationConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 182 'GetRevocationConfig' test.out

#- 183 UpdateRevocationConfig
# body param: body
echo '{"entitlement": {"consumable": {"enabled": true, "strategy": "CUSTOM"}, "durable": {"enabled": true, "strategy": "CUSTOM"}}, "wallet": {"enabled": true, "strategy": "REVOKE_OR_REPORT"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateRevocationConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 183 'UpdateRevocationConfig' test.out

#- 184 DeleteRevocationConfig
$CLI_EXE \
    --sn platform \
    --op DeleteRevocationConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 184 'DeleteRevocationConfig' test.out

#- 185 QueryRevocationHistories
$CLI_EXE \
    --sn platform \
    --op QueryRevocationHistories \
    --namespace $AB_NAMESPACE \
    --endTime '5uoaWyCk' \
    --limit '40' \
    --offset '8' \
    --source 'IAP' \
    --startTime 'D6yVWZcr' \
    --status 'FAIL' \
    --transactionId 'AFIm9hGW' \
    --userId 'G0Vnglgq' \
    > test.out 2>&1
eval_tap $? 185 'QueryRevocationHistories' test.out

#- 186 GetRevocationPluginConfig
$CLI_EXE \
    --sn platform \
    --op GetRevocationPluginConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 186 'GetRevocationPluginConfig' test.out

#- 187 UpdateRevocationPluginConfig
# body param: body
echo '{"appConfig": {"appName": "8uyeKMNw"}, "customConfig": {"connectionType": "TLS", "grpcServerAddress": "ml8B0DUp"}, "extendType": "CUSTOM"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateRevocationPluginConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 187 'UpdateRevocationPluginConfig' test.out

#- 188 DeleteRevocationPluginConfig
$CLI_EXE \
    --sn platform \
    --op DeleteRevocationPluginConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 188 'DeleteRevocationPluginConfig' test.out

#- 189 UploadRevocationPluginConfigCert
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UploadRevocationPluginConfigCert \
    --namespace $AB_NAMESPACE \
    --upload file $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 189 'UploadRevocationPluginConfigCert' test.out

#- 190 CreateReward
# body param: body
echo '{"description": "KkXQTZCb", "eventTopic": "hSNcYger", "maxAwarded": 12, "maxAwardedPerUser": 10, "namespaceExpression": "06opJCcf", "rewardCode": "NX6O40F0", "rewardConditions": [{"condition": "mgRPzpYT", "conditionName": "g6YtuzD6", "eventName": "LFLXA28m", "rewardItems": [{"duration": 79, "endDate": "1981-04-03T00:00:00Z", "identityType": "ITEM_ID", "itemId": "26bMWmpf", "quantity": 1, "sku": "cqVD8LPm"}, {"duration": 92, "endDate": "1981-09-26T00:00:00Z", "identityType": "ITEM_ID", "itemId": "gbzMqHKM", "quantity": 1, "sku": "WtpQG5be"}, {"duration": 98, "endDate": "1991-03-19T00:00:00Z", "identityType": "ITEM_SKU", "itemId": "fe8ey6Mf", "quantity": 99, "sku": "AkQzZ6sx"}]}, {"condition": "BGMXW7YA", "conditionName": "pzbDQRrc", "eventName": "5jFMFaJ6", "rewardItems": [{"duration": 100, "endDate": "1995-03-03T00:00:00Z", "identityType": "ITEM_SKU", "itemId": "mB5pX7SB", "quantity": 98, "sku": "MZsVRIjc"}, {"duration": 44, "endDate": "1986-10-20T00:00:00Z", "identityType": "ITEM_ID", "itemId": "JY8I0wgZ", "quantity": 68, "sku": "LroxGZB4"}, {"duration": 92, "endDate": "1984-07-31T00:00:00Z", "identityType": "ITEM_SKU", "itemId": "uBvVousm", "quantity": 11, "sku": "KJg5liUV"}]}, {"condition": "MwOFqzQk", "conditionName": "McXXay5j", "eventName": "J4AWXegA", "rewardItems": [{"duration": 71, "endDate": "1980-06-25T00:00:00Z", "identityType": "ITEM_SKU", "itemId": "cnZ1KAaL", "quantity": 34, "sku": "XTMRi7pC"}, {"duration": 79, "endDate": "1988-12-27T00:00:00Z", "identityType": "ITEM_SKU", "itemId": "JCfen3za", "quantity": 5, "sku": "EEY56ovj"}, {"duration": 80, "endDate": "1979-02-07T00:00:00Z", "identityType": "ITEM_SKU", "itemId": "A8roChMK", "quantity": 53, "sku": "TRNQCcTM"}]}], "userIdExpression": "hIXBzoLl"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateReward \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 190 'CreateReward' test.out

#- 191 QueryRewards
$CLI_EXE \
    --sn platform \
    --op QueryRewards \
    --namespace $AB_NAMESPACE \
    --eventTopic 'wonwKNGC' \
    --limit '10' \
    --offset '69' \
    --sortBy '["namespace", "rewardCode:desc"]' \
    > test.out 2>&1
eval_tap $? 191 'QueryRewards' test.out

#- 192 ExportRewards
$CLI_EXE \
    --sn platform \
    --op ExportRewards \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 192 'ExportRewards' test.out

#- 193 ImportRewards
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op ImportRewards \
    --namespace $AB_NAMESPACE \
    --replaceExisting 'true' \
    --upload file $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 193 'ImportRewards' test.out

#- 194 GetReward
$CLI_EXE \
    --sn platform \
    --op GetReward \
    --namespace $AB_NAMESPACE \
    --rewardId 'onjvQIAT' \
    > test.out 2>&1
eval_tap $? 194 'GetReward' test.out

#- 195 UpdateReward
# body param: body
echo '{"description": "6h6um2WV", "eventTopic": "6bBaXUW6", "maxAwarded": 84, "maxAwardedPerUser": 8, "namespaceExpression": "esSTy46C", "rewardCode": "8E84xArq", "rewardConditions": [{"condition": "tcCzAcob", "conditionName": "X2Q5ufIO", "eventName": "1f0N5khn", "rewardItems": [{"duration": 6, "endDate": "1996-12-19T00:00:00Z", "identityType": "ITEM_ID", "itemId": "BPRcCRNs", "quantity": 9, "sku": "fpWK8HlE"}, {"duration": 41, "endDate": "1988-11-15T00:00:00Z", "identityType": "ITEM_ID", "itemId": "nDxYrg4Q", "quantity": 51, "sku": "4qNdmFIw"}, {"duration": 29, "endDate": "1996-04-17T00:00:00Z", "identityType": "ITEM_ID", "itemId": "x88Hv3Np", "quantity": 84, "sku": "NrmdWFzg"}]}, {"condition": "6PawWqqc", "conditionName": "k81xx1sm", "eventName": "IGz0VuPi", "rewardItems": [{"duration": 80, "endDate": "1987-02-17T00:00:00Z", "identityType": "ITEM_SKU", "itemId": "WwchyjbH", "quantity": 17, "sku": "d8fhLUBY"}, {"duration": 36, "endDate": "1994-04-11T00:00:00Z", "identityType": "ITEM_SKU", "itemId": "EnMQHbSk", "quantity": 19, "sku": "lCAvOHN9"}, {"duration": 29, "endDate": "1996-10-17T00:00:00Z", "identityType": "ITEM_SKU", "itemId": "Qw9093to", "quantity": 77, "sku": "I951GOYd"}]}, {"condition": "SctteWzb", "conditionName": "MAyfUPNn", "eventName": "DBwcobUQ", "rewardItems": [{"duration": 13, "endDate": "1977-04-27T00:00:00Z", "identityType": "ITEM_SKU", "itemId": "QBRE8LOy", "quantity": 73, "sku": "ZNgxcPCX"}, {"duration": 87, "endDate": "1982-08-24T00:00:00Z", "identityType": "ITEM_ID", "itemId": "3tP6YrsN", "quantity": 63, "sku": "d1y3XVE2"}, {"duration": 9, "endDate": "1992-12-23T00:00:00Z", "identityType": "ITEM_SKU", "itemId": "hrNEluHE", "quantity": 9, "sku": "6WDe0SIe"}]}], "userIdExpression": "yWdKo0ti"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateReward \
    --namespace $AB_NAMESPACE \
    --rewardId 'rkCQVBT0' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 195 'UpdateReward' test.out

#- 196 DeleteReward
$CLI_EXE \
    --sn platform \
    --op DeleteReward \
    --namespace $AB_NAMESPACE \
    --rewardId 'ZL1kGTo2' \
    > test.out 2>&1
eval_tap $? 196 'DeleteReward' test.out

#- 197 CheckEventCondition
# body param: body
echo '{"payload": {"ishhoe70": {}, "uKurDhAv": {}, "RYv8FDs4": {}}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CheckEventCondition \
    --namespace $AB_NAMESPACE \
    --rewardId '66YHvrGF' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 197 'CheckEventCondition' test.out

#- 198 DeleteRewardConditionRecord
# body param: body
echo '{"conditionName": "PQ4YAuw2", "userId": "9BBsGAeb"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op DeleteRewardConditionRecord \
    --namespace $AB_NAMESPACE \
    --rewardId 'JFa2EUro' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 198 'DeleteRewardConditionRecord' test.out

#- 199 QuerySections
$CLI_EXE \
    --sn platform \
    --op QuerySections \
    --namespace $AB_NAMESPACE \
    --end 'cxZrlfun' \
    --limit '2' \
    --offset '6' \
    --start 'yr8CsWCx' \
    --storeId '40SeujrI' \
    --viewId 'OV1f77ju' \
    > test.out 2>&1
eval_tap $? 199 'QuerySections' test.out

#- 200 CreateSection
# body param: body
echo '{"active": true, "displayOrder": 63, "endDate": "1985-09-19T00:00:00Z", "ext": {"IdMaeXnE": {}, "54BSDdO4": {}, "Xvm2oueh": {}}, "fixedPeriodRotationConfig": {"backfillType": "CUSTOM", "duration": 57, "itemCount": 19, "rule": "SEQUENCE"}, "items": [{"id": "NQrhZSr9", "sku": "DkMQonC4"}, {"id": "XvSgv0yl", "sku": "74lFY37a"}, {"id": "Mfr86sre", "sku": "VLVTShEx"}], "localizations": {"ayW4VsX0": {"description": "aZHesXQs", "localExt": {"xb8HjS8j": {}, "JdPG3ZHS": {}, "HtHBLYsO": {}}, "longDescription": "PhH8O6OK", "title": "ipCmvMJj"}, "5B1CywxY": {"description": "i30plAlv", "localExt": {"TTPwldiv": {}, "f6hxqGUv": {}, "t0AB5Lty": {}}, "longDescription": "FvDLpIp6", "title": "sBPyTW4h"}, "cGUOIgRa": {"description": "96cbtbXc", "localExt": {"PnSiLlNi": {}, "6IaDvpRD": {}, "zyUlL7DC": {}}, "longDescription": "o93BvSCS", "title": "dEIKFxU2"}}, "name": "vq8H2wdX", "rotationType": "NONE", "startDate": "1996-11-10T00:00:00Z", "viewId": "zAzjzNSL"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateSection \
    --namespace $AB_NAMESPACE \
    --storeId 'l0XwNOVn' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 200 'CreateSection' test.out

#- 201 PurgeExpiredSection
$CLI_EXE \
    --sn platform \
    --op PurgeExpiredSection \
    --namespace $AB_NAMESPACE \
    --storeId '2xppQWKo' \
    > test.out 2>&1
eval_tap $? 201 'PurgeExpiredSection' test.out

#- 202 GetSection
$CLI_EXE \
    --sn platform \
    --op GetSection \
    --namespace $AB_NAMESPACE \
    --sectionId 'Zj7BdQJS' \
    --storeId 'WB9mSG8A' \
    > test.out 2>&1
eval_tap $? 202 'GetSection' test.out

#- 203 UpdateSection
# body param: body
echo '{"active": true, "displayOrder": 60, "endDate": "1994-10-02T00:00:00Z", "ext": {"qjUUXiC4": {}, "3BuwTh5H": {}, "MgJRu6cW": {}}, "fixedPeriodRotationConfig": {"backfillType": "CUSTOM", "duration": 35, "itemCount": 58, "rule": "SEQUENCE"}, "items": [{"id": "M9XJlYQM", "sku": "CRbIgW64"}, {"id": "uNcay3OA", "sku": "GPckEWUu"}, {"id": "Ginn6whJ", "sku": "WAsonVMy"}], "localizations": {"56gSnyib": {"description": "ZBj3x2CR", "localExt": {"vlm9MMU6": {}, "YFDEdRRc": {}, "yLhKb2ff": {}}, "longDescription": "cZBF9Nvh", "title": "pJZIe0FE"}, "JVbTK4Jn": {"description": "MnB2tmwV", "localExt": {"QLdg9yDn": {}, "PEizOS2n": {}, "P22Ld5h4": {}}, "longDescription": "uymj8Agj", "title": "rDv5Pg1A"}, "K1IIN2h8": {"description": "r21knW37", "localExt": {"bMTuraLc": {}, "7kvz7hre": {}, "EPb0g5d2": {}}, "longDescription": "aCu5UDbC", "title": "Nugh38Sv"}}, "name": "4ScTQYMe", "rotationType": "CUSTOM", "startDate": "1999-04-04T00:00:00Z", "viewId": "er04UEBh"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateSection \
    --namespace $AB_NAMESPACE \
    --sectionId 'z6rCCZAB' \
    --storeId 'eLrdRce0' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 203 'UpdateSection' test.out

#- 204 DeleteSection
$CLI_EXE \
    --sn platform \
    --op DeleteSection \
    --namespace $AB_NAMESPACE \
    --sectionId 'gYdjpO7l' \
    --storeId 'Bct8kV7n' \
    > test.out 2>&1
eval_tap $? 204 'DeleteSection' test.out

#- 205 ListStores
$CLI_EXE \
    --sn platform \
    --op ListStores \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 205 'ListStores' test.out

#- 206 CreateStore
# body param: body
echo '{"defaultLanguage": "zlVB7ca4", "defaultRegion": "qP0aMmzg", "description": "hdsf7ZNU", "supportedLanguages": ["YF0MsfXZ", "4iqKTzI3", "3huNgCu7"], "supportedRegions": ["lKLxcAZK", "VH5smMnq", "TzZJfn3A"], "title": "7uxa6kI6"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateStore \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 206 'CreateStore' test.out

#- 207 GetCatalogDefinition
$CLI_EXE \
    --sn platform \
    --op GetCatalogDefinition \
    --namespace $AB_NAMESPACE \
    --catalogType 'CATEGORY' \
    > test.out 2>&1
eval_tap $? 207 'GetCatalogDefinition' test.out

#- 208 DownloadCSVTemplates
$CLI_EXE \
    --sn platform \
    --op DownloadCSVTemplates \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 208 'DownloadCSVTemplates' test.out

#- 209 ExportStoreByCSV
# body param: body
echo '{"catalogType": "CATEGORY", "fieldsToBeIncluded": ["dD4xCftP", "gOGVh5r9", "rxjosUhY"], "idsToBeExported": ["42IYhC4N", "8uq5Y7Bt", "b3F8yd2l"], "storeId": "zbbbqzMo"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ExportStoreByCSV \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 209 'ExportStoreByCSV' test.out

#- 210 ImportStore
eval_tap 0 210 'ImportStore # SKIP deprecated' test.out

#- 211 GetPublishedStore
$CLI_EXE \
    --sn platform \
    --op GetPublishedStore \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 211 'GetPublishedStore' test.out

#- 212 DeletePublishedStore
$CLI_EXE \
    --sn platform \
    --op DeletePublishedStore \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 212 'DeletePublishedStore' test.out

#- 213 GetPublishedStoreBackup
$CLI_EXE \
    --sn platform \
    --op GetPublishedStoreBackup \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 213 'GetPublishedStoreBackup' test.out

#- 214 RollbackPublishedStore
$CLI_EXE \
    --sn platform \
    --op RollbackPublishedStore \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 214 'RollbackPublishedStore' test.out

#- 215 GetStore
$CLI_EXE \
    --sn platform \
    --op GetStore \
    --namespace $AB_NAMESPACE \
    --storeId 'gIkz8K71' \
    > test.out 2>&1
eval_tap $? 215 'GetStore' test.out

#- 216 UpdateStore
# body param: body
echo '{"defaultLanguage": "UreTWzfy", "defaultRegion": "a0pSEFOc", "description": "AGca6cJw", "supportedLanguages": ["n4InhfKc", "5Ani9Hxg", "ChU4MwQv"], "supportedRegions": ["BfGG3LCX", "p8dajARF", "zFfiYMIz"], "title": "wl7mHPrn"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateStore \
    --namespace $AB_NAMESPACE \
    --storeId 'ZNRxnSi0' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 216 'UpdateStore' test.out

#- 217 DeleteStore
$CLI_EXE \
    --sn platform \
    --op DeleteStore \
    --namespace $AB_NAMESPACE \
    --storeId 'aqAIaWTw' \
    > test.out 2>&1
eval_tap $? 217 'DeleteStore' test.out

#- 218 QueryChanges
$CLI_EXE \
    --sn platform \
    --op QueryChanges \
    --namespace $AB_NAMESPACE \
    --storeId 'vRaqxFJJ' \
    --action 'DELETE' \
    --itemSku '9Peod5pm' \
    --itemType 'EXTENSION' \
    --limit '14' \
    --offset '96' \
    --selected 'true' \
    --sortBy '["updatedAt:desc", "createdAt"]' \
    --status 'UNPUBLISHED' \
    --type 'STORE' \
    --updatedAtEnd '393SCWqM' \
    --updatedAtStart 'GmJGquRA' \
    --withTotal 'true' \
    > test.out 2>&1
eval_tap $? 218 'QueryChanges' test.out

#- 219 PublishAll
$CLI_EXE \
    --sn platform \
    --op PublishAll \
    --namespace $AB_NAMESPACE \
    --storeId 'mPOUrx6R' \
    > test.out 2>&1
eval_tap $? 219 'PublishAll' test.out

#- 220 PublishSelected
$CLI_EXE \
    --sn platform \
    --op PublishSelected \
    --namespace $AB_NAMESPACE \
    --storeId 'n2DprbY5' \
    > test.out 2>&1
eval_tap $? 220 'PublishSelected' test.out

#- 221 SelectAllRecords
$CLI_EXE \
    --sn platform \
    --op SelectAllRecords \
    --namespace $AB_NAMESPACE \
    --storeId 'zDbRjk53' \
    > test.out 2>&1
eval_tap $? 221 'SelectAllRecords' test.out

#- 222 SelectAllRecordsByCriteria
$CLI_EXE \
    --sn platform \
    --op SelectAllRecordsByCriteria \
    --namespace $AB_NAMESPACE \
    --storeId '7BblljWg' \
    --action 'UPDATE' \
    --itemSku 'mM7TJVR4' \
    --itemType 'CODE' \
    --selected 'true' \
    --type 'STORE' \
    --updatedAtEnd 'lJK07Dqd' \
    --updatedAtStart 'Rdat1w4I' \
    > test.out 2>&1
eval_tap $? 222 'SelectAllRecordsByCriteria' test.out

#- 223 GetStatistic
$CLI_EXE \
    --sn platform \
    --op GetStatistic \
    --namespace $AB_NAMESPACE \
    --storeId 'iE0REq58' \
    --action 'UPDATE' \
    --itemSku '7Q3CWLRi' \
    --itemType 'COINS' \
    --type 'CATEGORY' \
    --updatedAtEnd 'lcoRPRO9' \
    --updatedAtStart '1PjEhr7o' \
    > test.out 2>&1
eval_tap $? 223 'GetStatistic' test.out

#- 224 UnselectAllRecords
$CLI_EXE \
    --sn platform \
    --op UnselectAllRecords \
    --namespace $AB_NAMESPACE \
    --storeId 'tQ5D5tBd' \
    > test.out 2>&1
eval_tap $? 224 'UnselectAllRecords' test.out

#- 225 SelectRecord
$CLI_EXE \
    --sn platform \
    --op SelectRecord \
    --changeId 'Rix1LvHf' \
    --namespace $AB_NAMESPACE \
    --storeId 'op3oU6g1' \
    > test.out 2>&1
eval_tap $? 225 'SelectRecord' test.out

#- 226 UnselectRecord
$CLI_EXE \
    --sn platform \
    --op UnselectRecord \
    --changeId '8X2X4Qfy' \
    --namespace $AB_NAMESPACE \
    --storeId 'em4uDSAf' \
    > test.out 2>&1
eval_tap $? 226 'UnselectRecord' test.out

#- 227 CloneStore
$CLI_EXE \
    --sn platform \
    --op CloneStore \
    --namespace $AB_NAMESPACE \
    --storeId 'D77qTVlr' \
    --targetStoreId 'fOH7dLeI' \
    > test.out 2>&1
eval_tap $? 227 'CloneStore' test.out

#- 228 ExportStore
eval_tap 0 228 'ExportStore # SKIP deprecated' test.out

#- 229 QueryImportHistory
$CLI_EXE \
    --sn platform \
    --op QueryImportHistory \
    --namespace $AB_NAMESPACE \
    --storeId 'bzIRv9LP' \
    --end 'Om84YJNE' \
    --limit '17' \
    --offset '98' \
    --sortBy 'euXrrG37' \
    --start 'ZKXobiUc' \
    --success 'true' \
    > test.out 2>&1
eval_tap $? 229 'QueryImportHistory' test.out

#- 230 ImportStoreByCSV
# form data upload: category
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
# form data upload: display
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
# form data upload: item
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
# form data upload: section
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op ImportStoreByCSV \
    --namespace $AB_NAMESPACE \
    --storeId 'Gq6NupBK' \
    --upload category $TEMP_FILE_UPLOAD \
    --upload display $TEMP_FILE_UPLOAD \
    --upload item $TEMP_FILE_UPLOAD \
    --notes 'GJtKSwfo' \
    --upload section $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 230 'ImportStoreByCSV' test.out

#- 231 QuerySubscriptions
$CLI_EXE \
    --sn platform \
    --op QuerySubscriptions \
    --namespace $AB_NAMESPACE \
    --chargeStatus 'NEVER' \
    --itemId 'GJU4AG29' \
    --limit '63' \
    --offset '82' \
    --sku 'yHm9BQwZ' \
    --status 'INIT' \
    --subscribedBy 'USER' \
    --userId '3flqzLrj' \
    > test.out 2>&1
eval_tap $? 231 'QuerySubscriptions' test.out

#- 232 RecurringChargeSubscription
$CLI_EXE \
    --sn platform \
    --op RecurringChargeSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'tpKXbtCX' \
    > test.out 2>&1
eval_tap $? 232 'RecurringChargeSubscription' test.out

#- 233 GetTicketDynamic
$CLI_EXE \
    --sn platform \
    --op GetTicketDynamic \
    --boothName '4WETKvMu' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 233 'GetTicketDynamic' test.out

#- 234 DecreaseTicketSale
# body param: body
echo '{"orderNo": "BcBu5kfg"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op DecreaseTicketSale \
    --boothName 'JICgHUoc' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 234 'DecreaseTicketSale' test.out

#- 235 GetTicketBoothID
$CLI_EXE \
    --sn platform \
    --op GetTicketBoothID \
    --boothName '7oyQmCx2' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 235 'GetTicketBoothID' test.out

#- 236 IncreaseTicketSale
# body param: body
echo '{"count": 10, "orderNo": "jPmSSJZy"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op IncreaseTicketSale \
    --boothName 'kspDh0pg' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 236 'IncreaseTicketSale' test.out

#- 237 Commit
# body param: body
echo '{"actions": [{"operations": [{"creditPayload": {"balanceOrigin": "Nintendo", "count": 35, "currencyCode": "7DTxvcfu", "expireAt": "1986-10-05T00:00:00Z"}, "debitPayload": {"count": 7, "currencyCode": "MosuZ8Gd", "walletPlatform": "Nintendo"}, "fulFillItemPayload": {"count": 85, "entitlementCollectionId": "JUue8vHK", "entitlementOrigin": "Epic", "itemIdentity": "rAY307Lu", "itemIdentityType": "ITEM_ID"}, "revokeEntitlementPayload": {"count": 88, "entitlementId": "cwPRmMos"}, "type": "CREDIT_WALLET"}, {"creditPayload": {"balanceOrigin": "Other", "count": 70, "currencyCode": "QmVCMWaf", "expireAt": "1980-09-10T00:00:00Z"}, "debitPayload": {"count": 45, "currencyCode": "DnJBFKEB", "walletPlatform": "IOS"}, "fulFillItemPayload": {"count": 13, "entitlementCollectionId": "yKeHXBE4", "entitlementOrigin": "Twitch", "itemIdentity": "sJT4Plpv", "itemIdentityType": "ITEM_SKU"}, "revokeEntitlementPayload": {"count": 14, "entitlementId": "TtJSIYJY"}, "type": "CREDIT_WALLET"}, {"creditPayload": {"balanceOrigin": "Oculus", "count": 70, "currencyCode": "SClAcOat", "expireAt": "1997-07-17T00:00:00Z"}, "debitPayload": {"count": 31, "currencyCode": "ivQGbmiO", "walletPlatform": "IOS"}, "fulFillItemPayload": {"count": 4, "entitlementCollectionId": "gLIjemMx", "entitlementOrigin": "Playstation", "itemIdentity": "itGwCFGZ", "itemIdentityType": "ITEM_SKU"}, "revokeEntitlementPayload": {"count": 32, "entitlementId": "HpVHyTkd"}, "type": "FULFILL_ITEM"}], "userId": "fu5CvGjN"}, {"operations": [{"creditPayload": {"balanceOrigin": "IOS", "count": 91, "currencyCode": "qPMMHzW4", "expireAt": "1988-05-09T00:00:00Z"}, "debitPayload": {"count": 83, "currencyCode": "eVeE3Xk9", "walletPlatform": "Playstation"}, "fulFillItemPayload": {"count": 53, "entitlementCollectionId": "Tm7Hw4OW", "entitlementOrigin": "GooglePlay", "itemIdentity": "lg3KRPow", "itemIdentityType": "ITEM_ID"}, "revokeEntitlementPayload": {"count": 17, "entitlementId": "5HBvCp8Q"}, "type": "REVOKE_ENTITLEMENT"}, {"creditPayload": {"balanceOrigin": "Playstation", "count": 35, "currencyCode": "XDunEqSk", "expireAt": "1994-06-21T00:00:00Z"}, "debitPayload": {"count": 9, "currencyCode": "6vn3cb1O", "walletPlatform": "Epic"}, "fulFillItemPayload": {"count": 8, "entitlementCollectionId": "iWeG8XgV", "entitlementOrigin": "Nintendo", "itemIdentity": "iptTn1GU", "itemIdentityType": "ITEM_SKU"}, "revokeEntitlementPayload": {"count": 89, "entitlementId": "dWq6NPJI"}, "type": "CREDIT_WALLET"}, {"creditPayload": {"balanceOrigin": "Nintendo", "count": 87, "currencyCode": "soJkdXHX", "expireAt": "1985-06-11T00:00:00Z"}, "debitPayload": {"count": 26, "currencyCode": "9Sg3SnqX", "walletPlatform": "Nintendo"}, "fulFillItemPayload": {"count": 44, "entitlementCollectionId": "dfj2ZT65", "entitlementOrigin": "Twitch", "itemIdentity": "L5pQEeJW", "itemIdentityType": "ITEM_SKU"}, "revokeEntitlementPayload": {"count": 96, "entitlementId": "W4FTETMT"}, "type": "FULFILL_ITEM"}], "userId": "f9dJuwHY"}, {"operations": [{"creditPayload": {"balanceOrigin": "Epic", "count": 81, "currencyCode": "IZC1w6cu", "expireAt": "1971-09-20T00:00:00Z"}, "debitPayload": {"count": 93, "currencyCode": "eVrtHBbe", "walletPlatform": "IOS"}, "fulFillItemPayload": {"count": 60, "entitlementCollectionId": "8gncyBwC", "entitlementOrigin": "Epic", "itemIdentity": "2bYGw7Fk", "itemIdentityType": "ITEM_ID"}, "revokeEntitlementPayload": {"count": 10, "entitlementId": "X7oHn4ek"}, "type": "DEBIT_WALLET"}, {"creditPayload": {"balanceOrigin": "Playstation", "count": 99, "currencyCode": "dB2BmyrU", "expireAt": "1973-05-27T00:00:00Z"}, "debitPayload": {"count": 68, "currencyCode": "wI5GOaWj", "walletPlatform": "Steam"}, "fulFillItemPayload": {"count": 68, "entitlementCollectionId": "nQ8I0SZD", "entitlementOrigin": "System", "itemIdentity": "hdlRBReQ", "itemIdentityType": "ITEM_SKU"}, "revokeEntitlementPayload": {"count": 54, "entitlementId": "Wiug5QXh"}, "type": "FULFILL_ITEM"}, {"creditPayload": {"balanceOrigin": "System", "count": 31, "currencyCode": "QXu1xglW", "expireAt": "1975-01-11T00:00:00Z"}, "debitPayload": {"count": 73, "currencyCode": "BKTzXAAe", "walletPlatform": "Steam"}, "fulFillItemPayload": {"count": 1, "entitlementCollectionId": "1Xk7RpEn", "entitlementOrigin": "IOS", "itemIdentity": "RpaTph5p", "itemIdentityType": "ITEM_ID"}, "revokeEntitlementPayload": {"count": 46, "entitlementId": "naOYYFsj"}, "type": "DEBIT_WALLET"}], "userId": "RHUCTSaP"}], "metadata": {"k9l0aWyc": {}, "r7KEElak": {}, "exRC2mMy": {}}, "needPreCheck": true, "transactionId": "gBSPRonE", "type": "AwjqcWzo"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op Commit \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 237 'Commit' test.out

#- 238 GetTradeHistoryByCriteria
$CLI_EXE \
    --sn platform \
    --op GetTradeHistoryByCriteria \
    --namespace $AB_NAMESPACE \
    --limit '88' \
    --offset '58' \
    --status 'INIT' \
    --type 'doHF2l93' \
    --userId 'Wi2epTEm' \
    > test.out 2>&1
eval_tap $? 238 'GetTradeHistoryByCriteria' test.out

#- 239 GetTradeHistoryByTransactionId
$CLI_EXE \
    --sn platform \
    --op GetTradeHistoryByTransactionId \
    --namespace $AB_NAMESPACE \
    --transactionId 'V6cPMb9G' \
    > test.out 2>&1
eval_tap $? 239 'GetTradeHistoryByTransactionId' test.out

#- 240 UnlockSteamUserAchievement
# body param: body
echo '{"achievements": [{"id": "3BckGJF6", "value": 58}, {"id": "eco3Loiz", "value": 20}, {"id": "PsOqtRdK", "value": 26}], "steamUserId": "mwFVw9Yw"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UnlockSteamUserAchievement \
    --namespace $AB_NAMESPACE \
    --userId 'r6ekb1j5' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 240 'UnlockSteamUserAchievement' test.out

#- 241 GetXblUserAchievements
$CLI_EXE \
    --sn platform \
    --op GetXblUserAchievements \
    --namespace $AB_NAMESPACE \
    --userId 'Y251QkCp' \
    --xboxUserId '9wpRby7n' \
    > test.out 2>&1
eval_tap $? 241 'GetXblUserAchievements' test.out

#- 242 UpdateXblUserAchievement
# body param: body
echo '{"achievements": [{"id": "rcVgRsSE", "percentComplete": 98}, {"id": "W2Tdr2Wb", "percentComplete": 31}, {"id": "UOJNNBan", "percentComplete": 33}], "serviceConfigId": "OPqgdiDY", "titleId": "6bcpmeM2", "xboxUserId": "iPpfGlqR"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXblUserAchievement \
    --namespace $AB_NAMESPACE \
    --userId 'uphLZwAq' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 242 'UpdateXblUserAchievement' test.out

#- 243 AnonymizeCampaign
$CLI_EXE \
    --sn platform \
    --op AnonymizeCampaign \
    --namespace $AB_NAMESPACE \
    --userId '0LXW9qJK' \
    > test.out 2>&1
eval_tap $? 243 'AnonymizeCampaign' test.out

#- 244 AnonymizeEntitlement
$CLI_EXE \
    --sn platform \
    --op AnonymizeEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'e3nKyOhR' \
    > test.out 2>&1
eval_tap $? 244 'AnonymizeEntitlement' test.out

#- 245 AnonymizeFulfillment
$CLI_EXE \
    --sn platform \
    --op AnonymizeFulfillment \
    --namespace $AB_NAMESPACE \
    --userId 'SS1p7roz' \
    > test.out 2>&1
eval_tap $? 245 'AnonymizeFulfillment' test.out

#- 246 AnonymizeIntegration
$CLI_EXE \
    --sn platform \
    --op AnonymizeIntegration \
    --namespace $AB_NAMESPACE \
    --userId '0PgdQq4O' \
    > test.out 2>&1
eval_tap $? 246 'AnonymizeIntegration' test.out

#- 247 AnonymizeOrder
$CLI_EXE \
    --sn platform \
    --op AnonymizeOrder \
    --namespace $AB_NAMESPACE \
    --userId 'BimLoYBN' \
    > test.out 2>&1
eval_tap $? 247 'AnonymizeOrder' test.out

#- 248 AnonymizePayment
$CLI_EXE \
    --sn platform \
    --op AnonymizePayment \
    --namespace $AB_NAMESPACE \
    --userId 'daBOxiMI' \
    > test.out 2>&1
eval_tap $? 248 'AnonymizePayment' test.out

#- 249 AnonymizeRevocation
$CLI_EXE \
    --sn platform \
    --op AnonymizeRevocation \
    --namespace $AB_NAMESPACE \
    --userId 'Vhvp3cBy' \
    > test.out 2>&1
eval_tap $? 249 'AnonymizeRevocation' test.out

#- 250 AnonymizeSubscription
$CLI_EXE \
    --sn platform \
    --op AnonymizeSubscription \
    --namespace $AB_NAMESPACE \
    --userId 'is24q780' \
    > test.out 2>&1
eval_tap $? 250 'AnonymizeSubscription' test.out

#- 251 AnonymizeWallet
$CLI_EXE \
    --sn platform \
    --op AnonymizeWallet \
    --namespace $AB_NAMESPACE \
    --userId 'dW9WS5U0' \
    > test.out 2>&1
eval_tap $? 251 'AnonymizeWallet' test.out

#- 252 GetUserDLCByPlatform
$CLI_EXE \
    --sn platform \
    --op GetUserDLCByPlatform \
    --namespace $AB_NAMESPACE \
    --userId 'XXuvp7su' \
    --type 'EPICGAMES' \
    > test.out 2>&1
eval_tap $? 252 'GetUserDLCByPlatform' test.out

#- 253 GetUserDLC
$CLI_EXE \
    --sn platform \
    --op GetUserDLC \
    --namespace $AB_NAMESPACE \
    --userId 'hZ7IuqlR' \
    --includeAllNamespaces 'true' \
    --status 'FULFILLED' \
    --type 'EPICGAMES' \
    > test.out 2>&1
eval_tap $? 253 'GetUserDLC' test.out

#- 254 QueryUserEntitlements
$CLI_EXE \
    --sn platform \
    --op QueryUserEntitlements \
    --namespace $AB_NAMESPACE \
    --userId 'TjOTSukR' \
    --activeOnly 'false' \
    --appType 'GAME' \
    --collectionId '1MJHvbTL' \
    --entitlementClazz 'OPTIONBOX' \
    --entitlementName 'Bib2zzZQ' \
    --features '["yuMlxe6U", "I5P1w9Ip", "p6BJdgBK"]' \
    --fuzzyMatchName 'false' \
    --ignoreActiveDate 'true' \
    --itemId '["dUbiUrXX", "TZptjxu8", "GzVX1VMM"]' \
    --limit '55' \
    --offset '30' \
    --origin 'IOS' \
    > test.out 2>&1
eval_tap $? 254 'QueryUserEntitlements' test.out

#- 255 GrantUserEntitlement
# body param: body
echo '[{"collectionId": "B2nCn4i9", "endDate": "1987-01-12T00:00:00Z", "grantedCode": "nssKHEry", "itemId": "80AcPp9s", "itemNamespace": "sH2hVTdS", "language": "rj", "metadata": {"8jsdPC1D": {}, "apv2Hc3I": {}, "lzUegZXj": {}}, "origin": "Xbox", "quantity": 74, "region": "AoqoKkpk", "source": "IAP", "startDate": "1977-06-12T00:00:00Z", "storeId": "hWOCsMd4"}, {"collectionId": "3DCX9WWT", "endDate": "1978-10-14T00:00:00Z", "grantedCode": "Fjg8JkQa", "itemId": "Y8RqGh38", "itemNamespace": "6LCPgAT6", "language": "cOm", "metadata": {"g142ctP6": {}, "sukENYn8": {}, "7GAkx6y4": {}}, "origin": "Oculus", "quantity": 33, "region": "7nHUUGYr", "source": "PURCHASE", "startDate": "1996-10-26T00:00:00Z", "storeId": "BtKiymEG"}, {"collectionId": "lfQJujAL", "endDate": "1977-05-30T00:00:00Z", "grantedCode": "3nrWFW2z", "itemId": "xIeHq31K", "itemNamespace": "K04JkBpg", "language": "WjM-NFML_uj", "metadata": {"2NwDk50C": {}, "JM5bn3Hb": {}, "qEMKkmDm": {}}, "origin": "Nintendo", "quantity": 26, "region": "mAZAb0iF", "source": "ACHIEVEMENT", "startDate": "1975-04-16T00:00:00Z", "storeId": "LNim5wlG"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op GrantUserEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'bdqO9KVl' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 255 'GrantUserEntitlement' test.out

#- 256 GetUserAppEntitlementByAppId
$CLI_EXE \
    --sn platform \
    --op GetUserAppEntitlementByAppId \
    --namespace $AB_NAMESPACE \
    --userId 'XewWhRZM' \
    --activeOnly 'true' \
    --appId 'ZOsVQrJg' \
    > test.out 2>&1
eval_tap $? 256 'GetUserAppEntitlementByAppId' test.out

#- 257 QueryUserEntitlementsByAppType
$CLI_EXE \
    --sn platform \
    --op QueryUserEntitlementsByAppType \
    --namespace $AB_NAMESPACE \
    --userId 'CfuLWMbA' \
    --activeOnly 'true' \
    --limit '43' \
    --offset '57' \
    --appType 'GAME' \
    > test.out 2>&1
eval_tap $? 257 'QueryUserEntitlementsByAppType' test.out

#- 258 GetUserEntitlementsByIds
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementsByIds \
    --namespace $AB_NAMESPACE \
    --userId 'VUEnkhIz' \
    --ids '["QvIjY5Nx", "YlRQP1V0", "qRS1g0CZ"]' \
    > test.out 2>&1
eval_tap $? 258 'GetUserEntitlementsByIds' test.out

#- 259 GetUserEntitlementByItemId
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'qQ2PI4KD' \
    --activeOnly 'true' \
    --entitlementClazz 'CODE' \
    --platform 'h2T7gMD6' \
    --itemId 'pWRfKzkm' \
    > test.out 2>&1
eval_tap $? 259 'GetUserEntitlementByItemId' test.out

#- 260 GetUserActiveEntitlementsByItemIds
$CLI_EXE \
    --sn platform \
    --op GetUserActiveEntitlementsByItemIds \
    --namespace $AB_NAMESPACE \
    --userId 'EWVU9hCA' \
    --ids '["ptXTvSx3", "Lm2E8CVj", "8AZH8Hil"]' \
    --platform 'MXrItXJs' \
    > test.out 2>&1
eval_tap $? 260 'GetUserActiveEntitlementsByItemIds' test.out

#- 261 GetUserEntitlementBySku
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementBySku \
    --namespace $AB_NAMESPACE \
    --userId '6t1luPch' \
    --activeOnly 'false' \
    --entitlementClazz 'SUBSCRIPTION' \
    --platform 'a6qgU0YU' \
    --sku 'UThCuaAk' \
    > test.out 2>&1
eval_tap $? 261 'GetUserEntitlementBySku' test.out

#- 262 ExistsAnyUserActiveEntitlement
$CLI_EXE \
    --sn platform \
    --op ExistsAnyUserActiveEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'MQrwmDeU' \
    --appIds '["pOCOV9Dx", "gCe6tHW2", "X3bm4gOs"]' \
    --itemIds '["ag9EaMKO", "yMvF8u00", "pQA3vrO2"]' \
    --platform 'VT5ZxXQ9' \
    --skus '["keOrdQBf", "pcvLUdf9", "uOeMvWOS"]' \
    > test.out 2>&1
eval_tap $? 262 'ExistsAnyUserActiveEntitlement' test.out

#- 263 ExistsAnyUserActiveEntitlementByItemIds
$CLI_EXE \
    --sn platform \
    --op ExistsAnyUserActiveEntitlementByItemIds \
    --namespace $AB_NAMESPACE \
    --userId 'IDER9CwF' \
    --platform '4UFf56q7' \
    --itemIds '["qEH73eTT", "RpDj9aPi", "ctpBk1xM"]' \
    > test.out 2>&1
eval_tap $? 263 'ExistsAnyUserActiveEntitlementByItemIds' test.out

#- 264 GetUserAppEntitlementOwnershipByAppId
$CLI_EXE \
    --sn platform \
    --op GetUserAppEntitlementOwnershipByAppId \
    --namespace $AB_NAMESPACE \
    --userId '7uxuq53C' \
    --appId 'zoRl83WW' \
    > test.out 2>&1
eval_tap $? 264 'GetUserAppEntitlementOwnershipByAppId' test.out

#- 265 GetUserEntitlementOwnershipByItemId
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementOwnershipByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'RgoPt6pM' \
    --entitlementClazz 'MEDIA' \
    --platform '0BrLPmsH' \
    --itemId 'lbxCUObx' \
    > test.out 2>&1
eval_tap $? 265 'GetUserEntitlementOwnershipByItemId' test.out

#- 266 GetUserEntitlementOwnershipByItemIds
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementOwnershipByItemIds \
    --namespace $AB_NAMESPACE \
    --userId 'GNpwOrrW' \
    --ids '["Xh0VchXW", "6MDjTMmd", "eod5tYEI"]' \
    --platform 'Ft3Le6PV' \
    > test.out 2>&1
eval_tap $? 266 'GetUserEntitlementOwnershipByItemIds' test.out

#- 267 GetUserEntitlementOwnershipBySku
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementOwnershipBySku \
    --namespace $AB_NAMESPACE \
    --userId 'MxTOXgX8' \
    --entitlementClazz 'SUBSCRIPTION' \
    --platform 'IMeY2jSk' \
    --sku 'BYWb148o' \
    > test.out 2>&1
eval_tap $? 267 'GetUserEntitlementOwnershipBySku' test.out

#- 268 RevokeAllEntitlements
$CLI_EXE \
    --sn platform \
    --op RevokeAllEntitlements \
    --namespace $AB_NAMESPACE \
    --userId 'hsMjZfBr' \
    > test.out 2>&1
eval_tap $? 268 'RevokeAllEntitlements' test.out

#- 269 RevokeUserEntitlements
$CLI_EXE \
    --sn platform \
    --op RevokeUserEntitlements \
    --namespace $AB_NAMESPACE \
    --userId 'OV9lGeVe' \
    --entitlementIds 'AEH8XH8Q' \
    > test.out 2>&1
eval_tap $? 269 'RevokeUserEntitlements' test.out

#- 270 GetUserEntitlement
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlement \
    --entitlementId '6e6byA3l' \
    --namespace $AB_NAMESPACE \
    --userId '6dFyeby5' \
    > test.out 2>&1
eval_tap $? 270 'GetUserEntitlement' test.out

#- 271 UpdateUserEntitlement
# body param: body
echo '{"collectionId": "VkayIq11", "endDate": "1991-01-26T00:00:00Z", "nullFieldList": ["9hH4v7W6", "z21ppMw8", "YEesal83"], "origin": "GooglePlay", "reason": "zbKZxKeG", "startDate": "1998-10-04T00:00:00Z", "status": "INACTIVE", "useCount": 3}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateUserEntitlement \
    --entitlementId 'jzucwob2' \
    --namespace $AB_NAMESPACE \
    --userId 'TIfWn3kw' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 271 'UpdateUserEntitlement' test.out

#- 272 ConsumeUserEntitlement
# body param: body
echo '{"metadata": {"w8IuVcAH": {}, "fIP2KDhG": {}, "teDBvnAn": {}}, "options": ["0VCvVM52", "A7fCnYS5", "jCNafqEA"], "platform": "QZ5UKqaR", "requestId": "7Qa6umOc", "useCount": 66}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ConsumeUserEntitlement \
    --entitlementId 'l8gtkIuY' \
    --namespace $AB_NAMESPACE \
    --userId '7SL6d63s' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 272 'ConsumeUserEntitlement' test.out

#- 273 DisableUserEntitlement
$CLI_EXE \
    --sn platform \
    --op DisableUserEntitlement \
    --entitlementId 'TFW6Lc1U' \
    --namespace $AB_NAMESPACE \
    --userId 'RK0m0RJc' \
    > test.out 2>&1
eval_tap $? 273 'DisableUserEntitlement' test.out

#- 274 EnableUserEntitlement
$CLI_EXE \
    --sn platform \
    --op EnableUserEntitlement \
    --entitlementId 'tbbRW7U1' \
    --namespace $AB_NAMESPACE \
    --userId 'MTMB7q0a' \
    > test.out 2>&1
eval_tap $? 274 'EnableUserEntitlement' test.out

#- 275 GetUserEntitlementHistories
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementHistories \
    --entitlementId '6c3JcPGV' \
    --namespace $AB_NAMESPACE \
    --userId 'wu8MQ9fD' \
    > test.out 2>&1
eval_tap $? 275 'GetUserEntitlementHistories' test.out

#- 276 RevokeUserEntitlement
# body param: body
echo '{"metadata": {"KDyWWmc4": {}, "JCQGCVNe": {}, "34VKrWws": {}}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RevokeUserEntitlement \
    --entitlementId 'eCoO6OBs' \
    --namespace $AB_NAMESPACE \
    --userId 'ERcfWaGf' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 276 'RevokeUserEntitlement' test.out

#- 277 RevokeUserEntitlementByUseCount
# body param: body
echo '{"reason": "YSNWeDVi", "useCount": 79}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RevokeUserEntitlementByUseCount \
    --entitlementId 'YOgy5t6B' \
    --namespace $AB_NAMESPACE \
    --userId 'y2dNGEqI' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 277 'RevokeUserEntitlementByUseCount' test.out

#- 278 PreCheckRevokeUserEntitlementByUseCount
$CLI_EXE \
    --sn platform \
    --op PreCheckRevokeUserEntitlementByUseCount \
    --entitlementId 'IE3TmLio' \
    --namespace $AB_NAMESPACE \
    --userId 'E6idLPZb' \
    --quantity '52' \
    > test.out 2>&1
eval_tap $? 278 'PreCheckRevokeUserEntitlementByUseCount' test.out

#- 279 RevokeUseCount
eval_tap 0 279 'RevokeUseCount # SKIP deprecated' test.out

#- 280 SellUserEntitlement
# body param: body
echo '{"platform": "GlfB7ErP", "requestId": "avuDkAhO", "useCount": 11}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SellUserEntitlement \
    --entitlementId 'jknO9NUg' \
    --namespace $AB_NAMESPACE \
    --userId 'aVS2uz51' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 280 'SellUserEntitlement' test.out

#- 281 FulfillItem
# body param: body
echo '{"duration": 92, "endDate": "1981-04-20T00:00:00Z", "entitlementCollectionId": "2kDh5HC1", "entitlementOrigin": "Twitch", "itemId": "ofpdNGuS", "itemSku": "yOGFserE", "language": "Un5aToD9", "metadata": {"retH94dl": {}, "1TK9JtT1": {}, "DAAa7LsD": {}}, "order": {"currency": {"currencyCode": "7AKh2Jxb", "currencySymbol": "GncXnNN6", "currencyType": "REAL", "decimals": 12, "namespace": "ynSYbEw3"}, "ext": {"PBTNmGbU": {}, "5fBs1a8A": {}, "Siz248XL": {}}, "free": true}, "orderNo": "pTSIbiXB", "origin": "Steam", "overrideBundleItemQty": {"PZjzAr4N": 90, "njbpoJms": 31, "zr8LKDHU": 66}, "quantity": 10, "region": "EbiaKz16", "source": "SELL_BACK", "startDate": "1998-03-17T00:00:00Z", "storeId": "uJwX40Qj"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op FulfillItem \
    --namespace $AB_NAMESPACE \
    --userId 'GV9sxt9O' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 281 'FulfillItem' test.out

#- 282 RedeemCode
# body param: body
echo '{"code": "24B1MaSp", "language": "hC-HcGm", "region": "PSSQjUtD"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RedeemCode \
    --namespace $AB_NAMESPACE \
    --userId 'sLgzRL4E' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 282 'RedeemCode' test.out

#- 283 PreCheckFulfillItem
# body param: body
echo '{"itemId": "WwD0XRXv", "itemSku": "N1c1pqn9", "quantity": 66}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PreCheckFulfillItem \
    --namespace $AB_NAMESPACE \
    --userId 'vwDQQeJY' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 283 'PreCheckFulfillItem' test.out

#- 284 FulfillRewards
# body param: body
echo '{"entitlementCollectionId": "SlRqTqX9", "entitlementOrigin": "GooglePlay", "metadata": {"8sSH3XZb": {}, "rgNhh2ww": {}, "UDTlPdXe": {}}, "origin": "Epic", "rewards": [{"currency": {"currencyCode": "TPyKlFGh", "namespace": "NXCOeOhW"}, "item": {"itemId": "CFJGnZKz", "itemName": "utmSWC31", "itemSku": "lJzIK4t9", "itemType": "CxfQaKA4"}, "quantity": 71, "type": "ITEM"}, {"currency": {"currencyCode": "ZdPyDzfv", "namespace": "39BanHbp"}, "item": {"itemId": "gym0Rhjo", "itemName": "vRu9uA34", "itemSku": "V5CsbuI3", "itemType": "Q36upWUM"}, "quantity": 40, "type": "ITEM"}, {"currency": {"currencyCode": "eNZ5ZNGm", "namespace": "DfSPSo9r"}, "item": {"itemId": "M8bBaHde", "itemName": "xH8Lq9xp", "itemSku": "P5SisKxs", "itemType": "4vJzr1WZ"}, "quantity": 32, "type": "CURRENCY"}], "source": "IAP", "transactionId": "vsztv3xm"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op FulfillRewards \
    --namespace $AB_NAMESPACE \
    --userId 'Ww6b2bR8' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 284 'FulfillRewards' test.out

#- 285 QueryUserIAPOrders
$CLI_EXE \
    --sn platform \
    --op QueryUserIAPOrders \
    --namespace $AB_NAMESPACE \
    --userId 'YNQtrwkn' \
    --endTime '421aNBzr' \
    --limit '1' \
    --offset '0' \
    --productId 'q4wCYxE6' \
    --startTime '2W1GzRJs' \
    --status 'FAILED' \
    --type 'XBOX' \
    > test.out 2>&1
eval_tap $? 285 'QueryUserIAPOrders' test.out

#- 286 QueryAllUserIAPOrders
$CLI_EXE \
    --sn platform \
    --op QueryAllUserIAPOrders \
    --namespace $AB_NAMESPACE \
    --userId 'OOBIpRet' \
    > test.out 2>&1
eval_tap $? 286 'QueryAllUserIAPOrders' test.out

#- 287 QueryUserIAPConsumeHistory
$CLI_EXE \
    --sn platform \
    --op QueryUserIAPConsumeHistory \
    --namespace $AB_NAMESPACE \
    --userId 'CdTJfA0l' \
    --endTime 'hMV5EKPn' \
    --limit '72' \
    --offset '74' \
    --startTime 'tjoqsrJ5' \
    --status 'FAIL' \
    --type 'APPLE' \
    > test.out 2>&1
eval_tap $? 287 'QueryUserIAPConsumeHistory' test.out

#- 288 MockFulfillIAPItem
# body param: body
echo '{"itemIdentityType": "ITEM_ID", "language": "ljx-VTxf", "productId": "NeL3gpNf", "region": "X9AanOaW", "transactionId": "sqLaIdvQ", "type": "OCULUS"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op MockFulfillIAPItem \
    --namespace $AB_NAMESPACE \
    --userId 'pJIk2BxY' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 288 'MockFulfillIAPItem' test.out

#- 289 AdminGetIAPOrderLineItems
$CLI_EXE \
    --sn platform \
    --op AdminGetIAPOrderLineItems \
    --iapOrderNo 'TojpnD42' \
    --namespace $AB_NAMESPACE \
    --userId 'KWSph4aD' \
    > test.out 2>&1
eval_tap $? 289 'AdminGetIAPOrderLineItems' test.out

#- 290 AdminSyncSteamAbnormalTransaction
$CLI_EXE \
    --sn platform \
    --op AdminSyncSteamAbnormalTransaction \
    --namespace $AB_NAMESPACE \
    --userId 'U5f3rS2N' \
    > test.out 2>&1
eval_tap $? 290 'AdminSyncSteamAbnormalTransaction' test.out

#- 291 AdminSyncSteamIAPByTransaction
# body param: body
echo '{"orderId": "AeXndIUp"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op AdminSyncSteamIAPByTransaction \
    --namespace $AB_NAMESPACE \
    --userId 'MV1MpOlA' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 291 'AdminSyncSteamIAPByTransaction' test.out

#- 292 QueryUserThirdPartySubscription
$CLI_EXE \
    --sn platform \
    --op QueryUserThirdPartySubscription \
    --namespace $AB_NAMESPACE \
    --userId 'G3u29fuw' \
    --activeOnly 'true' \
    --groupId 'WFgyC5Ci' \
    --limit '57' \
    --offset '73' \
    --platform 'XBOX' \
    --productId 'dt0rtYP1' \
    > test.out 2>&1
eval_tap $? 292 'QueryUserThirdPartySubscription' test.out

#- 293 GetThirdPartyPlatformSubscriptionOwnershipByGroupId
$CLI_EXE \
    --sn platform \
    --op GetThirdPartyPlatformSubscriptionOwnershipByGroupId \
    --namespace $AB_NAMESPACE \
    --platform 'STADIA' \
    --userId 'xO1rp6ss' \
    --groupId 'cM88oYUM' \
    > test.out 2>&1
eval_tap $? 293 'GetThirdPartyPlatformSubscriptionOwnershipByGroupId' test.out

#- 294 GetThirdPartyPlatformSubscriptionOwnershipByProductId
$CLI_EXE \
    --sn platform \
    --op GetThirdPartyPlatformSubscriptionOwnershipByProductId \
    --namespace $AB_NAMESPACE \
    --platform 'GOOGLE' \
    --userId 'GHM6tw07' \
    --productId 'n6vfXThb' \
    > test.out 2>&1
eval_tap $? 294 'GetThirdPartyPlatformSubscriptionOwnershipByProductId' test.out

#- 295 QueryUserThirdPartySubscriptionTransactions
$CLI_EXE \
    --sn platform \
    --op QueryUserThirdPartySubscriptionTransactions \
    --namespace $AB_NAMESPACE \
    --userId 'BF9cNORQ' \
    --activeOnly 'false' \
    --groupId 'nYDrjXsb' \
    --limit '47' \
    --offset '60' \
    --platform 'TWITCH' \
    --productId 'NPd3F6q8' \
    > test.out 2>&1
eval_tap $? 295 'QueryUserThirdPartySubscriptionTransactions' test.out

#- 296 GetThirdPartySubscriptionDetails
$CLI_EXE \
    --sn platform \
    --op GetThirdPartySubscriptionDetails \
    --id 'M0uJ46ZT' \
    --namespace $AB_NAMESPACE \
    --userId '8wlzjdWq' \
    > test.out 2>&1
eval_tap $? 296 'GetThirdPartySubscriptionDetails' test.out

#- 297 GetSubscriptionHistory
$CLI_EXE \
    --sn platform \
    --op GetSubscriptionHistory \
    --id '0bQQYvmI' \
    --namespace $AB_NAMESPACE \
    --userId 'GT42mikT' \
    --limit '65' \
    --offset '67' \
    > test.out 2>&1
eval_tap $? 297 'GetSubscriptionHistory' test.out

#- 298 SyncSubscriptionTransaction
$CLI_EXE \
    --sn platform \
    --op SyncSubscriptionTransaction \
    --id 'ivUpCX8I' \
    --namespace $AB_NAMESPACE \
    --userId 'a3e35TQ5' \
    > test.out 2>&1
eval_tap $? 298 'SyncSubscriptionTransaction' test.out

#- 299 GetThirdPartyUserSubscriptionDetails
$CLI_EXE \
    --sn platform \
    --op GetThirdPartyUserSubscriptionDetails \
    --id 'vl3Emas3' \
    --namespace $AB_NAMESPACE \
    --userId '1R1pnbwT' \
    > test.out 2>&1
eval_tap $? 299 'GetThirdPartyUserSubscriptionDetails' test.out

#- 300 SyncSubscription
$CLI_EXE \
    --sn platform \
    --op SyncSubscription \
    --id 'uIYzPC4S' \
    --namespace $AB_NAMESPACE \
    --userId 'mwq1Li0H' \
    > test.out 2>&1
eval_tap $? 300 'SyncSubscription' test.out

#- 301 QueryUserOrders
$CLI_EXE \
    --sn platform \
    --op QueryUserOrders \
    --namespace $AB_NAMESPACE \
    --userId 'uv0IIbkW' \
    --discounted 'true' \
    --itemId 'DTWOCwwN' \
    --limit '47' \
    --offset '47' \
    --status 'INIT' \
    > test.out 2>&1
eval_tap $? 301 'QueryUserOrders' test.out

#- 302 AdminCreateUserOrder
# body param: body
echo '{"currencyCode": "KxySL2RM", "currencyNamespace": "kqX8i6BR", "discountCodes": ["vm43KVVe", "UbBFR8i0", "1ZCf7lkX"], "discountedPrice": 98, "entitlementPlatform": "Xbox", "ext": {"zQckt5QQ": {}, "27Ujnzop": {}, "2LfA2FQH": {}}, "itemId": "QNveQ92N", "language": "WQTFCDpj", "options": {"skipPriceValidation": false}, "platform": "Xbox", "price": 33, "quantity": 96, "region": "CW7D65To", "returnUrl": "gpqdeUuh", "sandbox": false, "sectionId": "jWM7hAZO"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op AdminCreateUserOrder \
    --namespace $AB_NAMESPACE \
    --userId 'QVfQ31UK' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 302 'AdminCreateUserOrder' test.out

#- 303 CountOfPurchasedItem
$CLI_EXE \
    --sn platform \
    --op CountOfPurchasedItem \
    --namespace $AB_NAMESPACE \
    --userId 'TvFkvl8L' \
    --itemId 'xC3X62R2' \
    > test.out 2>&1
eval_tap $? 303 'CountOfPurchasedItem' test.out

#- 304 GetUserOrder
$CLI_EXE \
    --sn platform \
    --op GetUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo '4e0qYJ3l' \
    --userId '8fNzHPej' \
    > test.out 2>&1
eval_tap $? 304 'GetUserOrder' test.out

#- 305 UpdateUserOrderStatus
# body param: body
echo '{"status": "FULFILL_FAILED", "statusReason": "qQQBoWCa"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateUserOrderStatus \
    --namespace $AB_NAMESPACE \
    --orderNo 'ncFof8m1' \
    --userId 'x3HrVsM6' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 305 'UpdateUserOrderStatus' test.out

#- 306 FulfillUserOrder
$CLI_EXE \
    --sn platform \
    --op FulfillUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'A8dFXbHZ' \
    --userId 'mTUXsCiX' \
    > test.out 2>&1
eval_tap $? 306 'FulfillUserOrder' test.out

#- 307 GetUserOrderGrant
eval_tap 0 307 'GetUserOrderGrant # SKIP deprecated' test.out

#- 308 GetUserOrderHistories
$CLI_EXE \
    --sn platform \
    --op GetUserOrderHistories \
    --namespace $AB_NAMESPACE \
    --orderNo '9JFNVFTY' \
    --userId 'hWZgifoU' \
    > test.out 2>&1
eval_tap $? 308 'GetUserOrderHistories' test.out

#- 309 ProcessUserOrderNotification
# body param: body
echo '{"additionalData": {"cardSummary": "y0Ov5wey"}, "authorisedTime": "1975-11-03T00:00:00Z", "chargebackReversedTime": "1975-10-17T00:00:00Z", "chargebackTime": "1984-01-11T00:00:00Z", "chargedTime": "1988-12-28T00:00:00Z", "createdTime": "1987-05-20T00:00:00Z", "currency": {"currencyCode": "d9hwntuW", "currencySymbol": "kh4afeNG", "currencyType": "REAL", "decimals": 49, "namespace": "50okiVpH"}, "customParameters": {"GTZghwto": {}, "u8BcDcFW": {}, "unZAqiWN": {}}, "extOrderNo": "vbDwwGwu", "extTxId": "fhC2xOYq", "extUserId": "LwChq7tB", "issuedAt": "1992-09-12T00:00:00Z", "metadata": {"lwRF3S5f": "PDhp53kj", "HTXtP1hN": "GL7eIrmg", "7Pm1ci2D": "noHBuLQB"}, "namespace": "YSEyvu4c", "nonceStr": "HqAuz8Lw", "paymentData": {"discountAmount": 64, "discountCode": "9Jcf9xJ1", "subtotalPrice": 64, "tax": 46, "totalPrice": 56}, "paymentMethod": "zPubnIXP", "paymentMethodFee": 94, "paymentOrderNo": "GnkVbq9b", "paymentProvider": "PAYPAL", "paymentProviderFee": 4, "paymentStationUrl": "4Tj1Bw6E", "price": 18, "refundedTime": "1992-05-30T00:00:00Z", "salesTax": 33, "sandbox": true, "sku": "IsWJdwH0", "status": "REQUEST_FOR_INFORMATION", "statusReason": "LJU6Q0QJ", "subscriptionId": "5zldE4AU", "subtotalPrice": 36, "targetNamespace": "khGObGJw", "targetUserId": "KDXBLuxx", "tax": 58, "totalPrice": 18, "totalTax": 3, "txEndTime": "1972-11-20T00:00:00Z", "type": "dvJkRhgG", "userId": "bmVeZzPB", "vat": 5}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ProcessUserOrderNotification \
    --namespace $AB_NAMESPACE \
    --orderNo 'Ym13tZbU' \
    --userId '4wB3gLqA' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 309 'ProcessUserOrderNotification' test.out

#- 310 DownloadUserOrderReceipt
$CLI_EXE \
    --sn platform \
    --op DownloadUserOrderReceipt \
    --namespace $AB_NAMESPACE \
    --orderNo 'MTsIrdls' \
    --userId '3owjWpjZ' \
    > test.out 2>&1
eval_tap $? 310 'DownloadUserOrderReceipt' test.out

#- 311 CreateUserPaymentOrder
# body param: body
echo '{"currencyCode": "6wfXKzzI", "currencyNamespace": "9qdcltTX", "customParameters": {"eDsfX3O6": {}, "GJsxhyK9": {}, "G3SJJBOj": {}}, "description": "01LKTikb", "extOrderNo": "hw40t9LD", "extUserId": "lXXRFnPk", "itemType": "BUNDLE", "language": "FfRz", "metadata": {"j7kFwA1o": "n44q18Vr", "mgwduLBt": "oH09kH5y", "8zkRZIKL": "CWpLqd7m"}, "notifyUrl": "lC0P2uRX", "omitNotification": false, "platform": "kFDeZBcI", "price": 62, "recurringPaymentOrderNo": "Dfr5MNh3", "region": "xv66CjsF", "returnUrl": "aQzGpeuS", "sandbox": true, "sku": "Rpe7InSc", "subscriptionId": "nCDBNSyy", "title": "2KWFz7n7"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateUserPaymentOrder \
    --namespace $AB_NAMESPACE \
    --userId 'WdPaf4iv' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 311 'CreateUserPaymentOrder' test.out

#- 312 RefundUserPaymentOrder
# body param: body
echo '{"description": "ABSzkqFL"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RefundUserPaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'D4blZerF' \
    --userId 'ijWZtOF9' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 312 'RefundUserPaymentOrder' test.out

#- 313 GetUserPlatformAccountClosureHistories
$CLI_EXE \
    --sn platform \
    --op GetUserPlatformAccountClosureHistories \
    --namespace $AB_NAMESPACE \
    --userId 'sJOoNWdh' \
    > test.out 2>&1
eval_tap $? 313 'GetUserPlatformAccountClosureHistories' test.out

#- 314 ApplyUserRedemption
# body param: body
echo '{"code": "6bj9uqic", "orderNo": "J437xbdB"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ApplyUserRedemption \
    --namespace $AB_NAMESPACE \
    --userId 'tUPhx6QZ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 314 'ApplyUserRedemption' test.out

#- 315 DoRevocation
# body param: body
echo '{"meta": {"hpF3J5bG": {}, "3t8tpDti": {}, "9dkVnua4": {}}, "reason": "c2ccFtDx", "requestId": "6dHznLMv", "revokeEntries": [{"currency": {"balanceOrigin": "IOS", "currencyCode": "b98yQQTf", "namespace": "cgTid3RG"}, "entitlement": {"entitlementId": "Tl0Nl11s"}, "item": {"entitlementOrigin": "Nintendo", "itemIdentity": "MS9b4vMF", "itemIdentityType": "ITEM_ID", "origin": "Epic"}, "quantity": 78, "type": "CURRENCY"}, {"currency": {"balanceOrigin": "Playstation", "currencyCode": "DY8cpxUs", "namespace": "6sozRUq8"}, "entitlement": {"entitlementId": "KGr0yDI9"}, "item": {"entitlementOrigin": "Oculus", "itemIdentity": "tbExIA8W", "itemIdentityType": "ITEM_ID", "origin": "System"}, "quantity": 65, "type": "ITEM"}, {"currency": {"balanceOrigin": "Other", "currencyCode": "IJdp7kRr", "namespace": "woNCYgmt"}, "entitlement": {"entitlementId": "qhuakQ4N"}, "item": {"entitlementOrigin": "Xbox", "itemIdentity": "wh9e6p8E", "itemIdentityType": "ITEM_ID", "origin": "Steam"}, "quantity": 51, "type": "ITEM"}], "source": "DLC", "transactionId": "hFXQaXFr"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op DoRevocation \
    --namespace $AB_NAMESPACE \
    --userId 'DJFYZf6o' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 315 'DoRevocation' test.out

#- 316 RegisterXblSessions
# body param: body
echo '{"gameSessionId": "jXy8ghfI", "payload": {"pIldp7DC": {}, "ZKIwWsto": {}, "rMNox7eg": {}}, "scid": "6peCQGcL", "sessionTemplateName": "tZz77YXr"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RegisterXblSessions \
    --namespace $AB_NAMESPACE \
    --userId 'hqCAEtXf' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 316 'RegisterXblSessions' test.out

#- 317 QueryUserSubscriptions
$CLI_EXE \
    --sn platform \
    --op QueryUserSubscriptions \
    --namespace $AB_NAMESPACE \
    --userId 'W4LRsVdI' \
    --chargeStatus 'NEVER' \
    --itemId 'uth8gSeT' \
    --limit '95' \
    --offset '37' \
    --sku 'FD6Vm0o4' \
    --status 'INIT' \
    --subscribedBy 'USER' \
    > test.out 2>&1
eval_tap $? 317 'QueryUserSubscriptions' test.out

#- 318 GetUserSubscriptionActivities
$CLI_EXE \
    --sn platform \
    --op GetUserSubscriptionActivities \
    --namespace $AB_NAMESPACE \
    --userId 'SXY78gu0' \
    --excludeSystem 'true' \
    --limit '3' \
    --offset '98' \
    --subscriptionId 'TE8CEIQm' \
    > test.out 2>&1
eval_tap $? 318 'GetUserSubscriptionActivities' test.out

#- 319 PlatformSubscribeSubscription
# body param: body
echo '{"grantDays": 90, "itemId": "l588Dubq", "language": "f14VJKrc", "reason": "FD1pOo53", "region": "XDPP5fCa", "source": "akyacy2R"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PlatformSubscribeSubscription \
    --namespace $AB_NAMESPACE \
    --userId '5FmcLK5U' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 319 'PlatformSubscribeSubscription' test.out

#- 320 CheckUserSubscriptionSubscribableByItemId
$CLI_EXE \
    --sn platform \
    --op CheckUserSubscriptionSubscribableByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'NQpUdN8t' \
    --itemId '5ZsIJLFC' \
    > test.out 2>&1
eval_tap $? 320 'CheckUserSubscriptionSubscribableByItemId' test.out

#- 321 GetUserSubscription
$CLI_EXE \
    --sn platform \
    --op GetUserSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'wsDtat10' \
    --userId '1En8zOAC' \
    > test.out 2>&1
eval_tap $? 321 'GetUserSubscription' test.out

#- 322 DeleteUserSubscription
$CLI_EXE \
    --sn platform \
    --op DeleteUserSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'Wp3U71LJ' \
    --userId 'bTvPc3ds' \
    > test.out 2>&1
eval_tap $? 322 'DeleteUserSubscription' test.out

#- 323 CancelSubscription
# body param: body
echo '{"immediate": true, "reason": "cdtV7DjB"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CancelSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'D2rZSUuo' \
    --userId '4iC4pyeH' \
    --force 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 323 'CancelSubscription' test.out

#- 324 GrantDaysToSubscription
# body param: body
echo '{"grantDays": 36, "reason": "0rdl889e"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op GrantDaysToSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'uRUYVnFu' \
    --userId 'okpsuf53' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 324 'GrantDaysToSubscription' test.out

#- 325 GetUserSubscriptionBillingHistories
$CLI_EXE \
    --sn platform \
    --op GetUserSubscriptionBillingHistories \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'QiQU5zYK' \
    --userId 'HDh44wMG' \
    --excludeFree 'false' \
    --limit '26' \
    --offset '74' \
    > test.out 2>&1
eval_tap $? 325 'GetUserSubscriptionBillingHistories' test.out

#- 326 ProcessUserSubscriptionNotification
# body param: body
echo '{"additionalData": {"cardSummary": "gU3QEkSj"}, "authorisedTime": "1982-02-04T00:00:00Z", "chargebackReversedTime": "1987-08-11T00:00:00Z", "chargebackTime": "1988-11-11T00:00:00Z", "chargedTime": "1990-07-28T00:00:00Z", "createdTime": "1981-04-24T00:00:00Z", "currency": {"currencyCode": "y9EwIvyV", "currencySymbol": "c2LJGNEU", "currencyType": "VIRTUAL", "decimals": 70, "namespace": "UMOQLpVE"}, "customParameters": {"b1o9VqeG": {}, "41LbChlk": {}, "RCe04ni3": {}}, "extOrderNo": "cjjRFHxB", "extTxId": "PlUZQCGz", "extUserId": "BJ8OvfL2", "issuedAt": "1983-03-31T00:00:00Z", "metadata": {"qGFFNSXe": "p5PHPGrm", "pfJqywUX": "Bj13pUXV", "MdX7d65O": "HemZInqL"}, "namespace": "B2sFMxCf", "nonceStr": "P8TS6FWa", "paymentData": {"discountAmount": 92, "discountCode": "yYxPHys3", "subtotalPrice": 80, "tax": 46, "totalPrice": 91}, "paymentMethod": "04JRctLq", "paymentMethodFee": 99, "paymentOrderNo": "yy7pwbBy", "paymentProvider": "STRIPE", "paymentProviderFee": 35, "paymentStationUrl": "1o6HlHAY", "price": 50, "refundedTime": "1992-08-03T00:00:00Z", "salesTax": 54, "sandbox": true, "sku": "BP9ICZqQ", "status": "REFUND_FAILED", "statusReason": "J6NWJfQJ", "subscriptionId": "NhNGZkDe", "subtotalPrice": 32, "targetNamespace": "tnrQPLsP", "targetUserId": "Ljce79Do", "tax": 44, "totalPrice": 38, "totalTax": 90, "txEndTime": "1972-10-23T00:00:00Z", "type": "01N5weve", "userId": "PD2Rp4sk", "vat": 13}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ProcessUserSubscriptionNotification \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'BUT0L10x' \
    --userId 'ZiZE26jr' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 326 'ProcessUserSubscriptionNotification' test.out

#- 327 AcquireUserTicket
# body param: body
echo '{"count": 25, "orderNo": "LlwGeCEi"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op AcquireUserTicket \
    --boothName 'iuRZkwTu' \
    --namespace $AB_NAMESPACE \
    --userId 'Jc5xJ5yk' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 327 'AcquireUserTicket' test.out

#- 328 QueryUserCurrencyWallets
$CLI_EXE \
    --sn platform \
    --op QueryUserCurrencyWallets \
    --namespace $AB_NAMESPACE \
    --userId 'WJLu3cCp' \
    > test.out 2>&1
eval_tap $? 328 'QueryUserCurrencyWallets' test.out

#- 329 DebitUserWalletByCurrencyCode
# body param: body
echo '{"allowOverdraft": false, "amount": 49, "balanceOrigin": "GooglePlay", "balanceSource": "DLC_REVOCATION", "metadata": {"yePxNpmF": {}, "13lqWTNh": {}, "mX9ymSsG": {}}, "reason": "PJzcyyJi"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op DebitUserWalletByCurrencyCode \
    --currencyCode 'l5xtGCBj' \
    --namespace $AB_NAMESPACE \
    --userId '9aJrVp20' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 329 'DebitUserWalletByCurrencyCode' test.out

#- 330 ListUserCurrencyTransactions
$CLI_EXE \
    --sn platform \
    --op ListUserCurrencyTransactions \
    --currencyCode '0pr3orRO' \
    --namespace $AB_NAMESPACE \
    --userId 'DeHML0nk' \
    --limit '22' \
    --offset '54' \
    > test.out 2>&1
eval_tap $? 330 'ListUserCurrencyTransactions' test.out

#- 331 CheckBalance
# body param: request
echo '{"amount": 64, "debitBalanceSource": "PAYMENT", "metadata": {"IE2xhO4j": {}, "UUmvvY84": {}, "0z893J0T": {}}, "reason": "GIF6jK3y", "walletPlatform": "Other"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CheckBalance \
    --currencyCode 'sxum0s0W' \
    --namespace $AB_NAMESPACE \
    --userId 'ie62pb00' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 331 'CheckBalance' test.out

#- 332 CheckWallet
eval_tap 0 332 'CheckWallet # SKIP deprecated' test.out

#- 333 CreditUserWallet
# body param: body
echo '{"amount": 78, "expireAt": "1982-02-02T00:00:00Z", "metadata": {"x0mCMOqZ": {}, "14bSf0JK": {}, "EoVf2DT3": {}}, "origin": "Xbox", "reason": "u6W8j0KA", "source": "PROMOTION"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreditUserWallet \
    --currencyCode 'lGh097KA' \
    --namespace $AB_NAMESPACE \
    --userId '9IcTAvMH' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 333 'CreditUserWallet' test.out

#- 334 DebitByWalletPlatform
# body param: request
echo '{"amount": 62, "debitBalanceSource": "TRADE", "metadata": {"cOp4f70R": {}, "lWS921Nd": {}, "M9YwT5o6": {}}, "reason": "mysaLMmk", "walletPlatform": "Xbox"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op DebitByWalletPlatform \
    --currencyCode 'VmXVjWoT' \
    --namespace $AB_NAMESPACE \
    --userId 't2biOZTE' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 334 'DebitByWalletPlatform' test.out

#- 335 PayWithUserWallet
# body param: body
echo '{"amount": 28, "metadata": {"7qoLtjs2": {}, "azL4EbIm": {}, "MWSATcPz": {}}, "walletPlatform": "GooglePlay"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PayWithUserWallet \
    --currencyCode 'If0J8sF7' \
    --namespace $AB_NAMESPACE \
    --userId 'ei3oE4pJ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 335 'PayWithUserWallet' test.out

#- 336 GetUserWallet
eval_tap 0 336 'GetUserWallet # SKIP deprecated' test.out

#- 337 DebitUserWallet
eval_tap 0 337 'DebitUserWallet # SKIP deprecated' test.out

#- 338 DisableUserWallet
eval_tap 0 338 'DisableUserWallet # SKIP deprecated' test.out

#- 339 EnableUserWallet
eval_tap 0 339 'EnableUserWallet # SKIP deprecated' test.out

#- 340 ListUserWalletTransactions
eval_tap 0 340 'ListUserWalletTransactions # SKIP deprecated' test.out

#- 341 ListViews
$CLI_EXE \
    --sn platform \
    --op ListViews \
    --namespace $AB_NAMESPACE \
    --storeId 'aGi5wGTm' \
    > test.out 2>&1
eval_tap $? 341 'ListViews' test.out

#- 342 CreateView
# body param: body
echo '{"displayOrder": 80, "localizations": {"6j7iUJK7": {"description": "63F9Bd0s", "localExt": {"w6rDZshk": {}, "uTVFWrku": {}, "chMGT75S": {}}, "longDescription": "a0Xnq9kX", "title": "rYJPY7rY"}, "aBczMZ7I": {"description": "Qrq6ch1V", "localExt": {"iFcy6aOc": {}, "udvrBY8i": {}, "o2GuuBGz": {}}, "longDescription": "eTzJZI54", "title": "hhWM9SwK"}, "HHQTPQ5u": {"description": "r4mWRMe9", "localExt": {"vzOvrVM7": {}, "RqLVpWRU": {}, "KONf1sb1": {}}, "longDescription": "wALWY3jB", "title": "wBZOiVey"}}, "name": "BKAUBzNk"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateView \
    --namespace $AB_NAMESPACE \
    --storeId 'jYY5jxMX' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 342 'CreateView' test.out

#- 343 GetView
$CLI_EXE \
    --sn platform \
    --op GetView \
    --namespace $AB_NAMESPACE \
    --viewId '3VdExvBf' \
    --storeId 'naJ4Girk' \
    > test.out 2>&1
eval_tap $? 343 'GetView' test.out

#- 344 UpdateView
# body param: body
echo '{"displayOrder": 81, "localizations": {"5QPFH8mK": {"description": "9ZRjyRqa", "localExt": {"ooRVSISR": {}, "zC4NzHyJ": {}, "67ftmFjM": {}}, "longDescription": "uVw0k6Zj", "title": "WGX7rGUi"}, "L9JARVwW": {"description": "pudBxGjR", "localExt": {"MoLfjn91": {}, "o51mDrxy": {}, "lVtznRWe": {}}, "longDescription": "BXjQ9TDu", "title": "EhVUZTpe"}, "V6ePNI27": {"description": "z9lK6TJP", "localExt": {"HSBlTvWo": {}, "IAN3QWGv": {}, "rMiX2ith": {}}, "longDescription": "p10vCwFL", "title": "OWof1PW9"}}, "name": "RSAZXeMa"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateView \
    --namespace $AB_NAMESPACE \
    --viewId '1k7zkOEz' \
    --storeId 'tfTe9w6N' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 344 'UpdateView' test.out

#- 345 DeleteView
$CLI_EXE \
    --sn platform \
    --op DeleteView \
    --namespace $AB_NAMESPACE \
    --viewId 'vJzPS429' \
    --storeId 'pqikkJET' \
    > test.out 2>&1
eval_tap $? 345 'DeleteView' test.out

#- 346 GetWalletConfig
$CLI_EXE \
    --sn platform \
    --op GetWalletConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 346 'GetWalletConfig' test.out

#- 347 UpdateWalletConfig
# body param: body
echo '{"enablePaidForVCExpiration": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateWalletConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 347 'UpdateWalletConfig' test.out

#- 348 QueryWallets
eval_tap 0 348 'QueryWallets # SKIP deprecated' test.out

#- 349 BulkCredit
# body param: body
echo '[{"creditRequest": {"amount": 59, "expireAt": "1981-05-01T00:00:00Z", "metadata": {"86S5Fpg3": {}, "rqeC5JP7": {}, "LIBXrn0f": {}}, "origin": "System", "reason": "0bbjOMhi", "source": "PROMOTION"}, "currencyCode": "j29zAtox", "userIds": ["plvFLI9p", "PI26CWxM", "5hhSsi6F"]}, {"creditRequest": {"amount": 60, "expireAt": "1973-07-31T00:00:00Z", "metadata": {"XaLwwAXS": {}, "q7H2fB7R": {}, "WFkIHP59": {}}, "origin": "Epic", "reason": "SmTMKVAN", "source": "CONSUME_ENTITLEMENT"}, "currencyCode": "aPKCRIIJ", "userIds": ["eBNRsFRp", "Wk2IFMI5", "g6D5J2TL"]}, {"creditRequest": {"amount": 2, "expireAt": "1989-04-12T00:00:00Z", "metadata": {"kaGDzd8E": {}, "hGpoBliN": {}, "1GUh8y8k": {}}, "origin": "GooglePlay", "reason": "zx34y7Jg", "source": "PURCHASE"}, "currencyCode": "3UoF6FCo", "userIds": ["nJBCiK3K", "eK4axEad", "mPP43QQa"]}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op BulkCredit \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 349 'BulkCredit' test.out

#- 350 BulkDebit
# body param: body
echo '[{"currencyCode": "Bi9TIWhs", "request": {"allowOverdraft": false, "amount": 70, "balanceOrigin": "IOS", "balanceSource": "IAP_REVOCATION", "metadata": {"LwxShl3I": {}, "78ptodmH": {}, "rZICHcUe": {}}, "reason": "mSVCrFGZ"}, "userIds": ["7bXpEIGo", "pgLQZ56p", "5Zmbp2vM"]}, {"currencyCode": "kKPU14F1", "request": {"allowOverdraft": false, "amount": 1, "balanceOrigin": "Playstation", "balanceSource": "IAP_REVOCATION", "metadata": {"RffUCloo": {}, "rEXvZGA0": {}, "QU0xsqkM": {}}, "reason": "jJTxcVzF"}, "userIds": ["oUnbgTps", "WE4MyRmV", "oooTrQeB"]}, {"currencyCode": "MNbRi51x", "request": {"allowOverdraft": false, "amount": 14, "balanceOrigin": "Xbox", "balanceSource": "EXPIRATION", "metadata": {"pXpvmyve": {}, "Y6MXQhuQ": {}, "8Pw8IwRl": {}}, "reason": "EsTcBJkB"}, "userIds": ["eXzRp0Sq", "dXGHOFQs", "r9SWAwNE"]}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op BulkDebit \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 350 'BulkDebit' test.out

#- 351 GetWallet
eval_tap 0 351 'GetWallet # SKIP deprecated' test.out

#- 352 SyncOrders
$CLI_EXE \
    --sn platform \
    --op SyncOrders \
    --nextEvaluatedKey 'r5uGzF4y' \
    --end 'tFyVbpDG' \
    --start 'gjmAZ05o' \
    > test.out 2>&1
eval_tap $? 352 'SyncOrders' test.out

#- 353 TestAdyenConfig
# body param: body
echo '{"allowedPaymentMethods": ["Z3z3VlWJ", "cAaK6J3J", "k3uWmYAx"], "apiKey": "lDMYhSSW", "authoriseAsCapture": false, "blockedPaymentMethods": ["pvTe88T6", "4F8rcRmK", "gOXb669y"], "clientKey": "ECrR5ML2", "dropInSettings": "efW4fqBu", "liveEndpointUrlPrefix": "lCdlwaUx", "merchantAccount": "eFbMD7mE", "notificationHmacKey": "5vPoskpk", "notificationPassword": "f7VtbSvS", "notificationUsername": "EFcZjvVy", "returnUrl": "coW6Mr4g", "settings": "IDiPGGQQ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestAdyenConfig \
    --sandbox 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 353 'TestAdyenConfig' test.out

#- 354 TestAliPayConfig
# body param: body
echo '{"appId": "jzjWuYcj", "privateKey": "BeqKf3il", "publicKey": "kaWAAkzt", "returnUrl": "cJHT9tFx"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestAliPayConfig \
    --sandbox 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 354 'TestAliPayConfig' test.out

#- 355 TestCheckoutConfig
# body param: body
echo '{"publicKey": "8cLBvrbd", "secretKey": "hHJhofDy"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestCheckoutConfig \
    --sandbox 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 355 'TestCheckoutConfig' test.out

#- 356 DebugMatchedPaymentMerchantConfig
$CLI_EXE \
    --sn platform \
    --op DebugMatchedPaymentMerchantConfig \
    --namespace_ 'CvaNDFcX' \
    --region 'uUCUZOVu' \
    > test.out 2>&1
eval_tap $? 356 'DebugMatchedPaymentMerchantConfig' test.out

#- 357 TestNeonPayConfig
# body param: body
echo '{"apiKey": "LsfFc35C", "webhookSecretKey": "oZhqk95L"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestNeonPayConfig \
    --sandbox 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 357 'TestNeonPayConfig' test.out

#- 358 TestPayPalConfig
# body param: body
echo '{"clientID": "9AXcy9wR", "clientSecret": "TWaZzmNK", "returnUrl": "f8djs7cs", "webHookId": "VbP2Cidv"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestPayPalConfig \
    --sandbox 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 358 'TestPayPalConfig' test.out

#- 359 TestStripeConfig
# body param: body
echo '{"allowedPaymentMethodTypes": ["DoesUl7D", "agSytZR9", "gToPsGJc"], "publishableKey": "5aCyQ41P", "secretKey": "njDkzScO", "webhookSecret": "FAvCdE3q"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestStripeConfig \
    --sandbox 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 359 'TestStripeConfig' test.out

#- 360 TestWxPayConfig
# body param: body
echo '{"appId": "hcGYAoA7", "key": "44ZaNTw8", "mchid": "tx0kDoYK", "returnUrl": "9AbZPv0C"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestWxPayConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 360 'TestWxPayConfig' test.out

#- 361 TestXsollaConfig
# body param: body
echo '{"apiKey": "zHQTQuHV", "flowCompletionUrl": "t2vzMHBr", "merchantId": 0, "projectId": 60, "projectSecretKey": "jtSvCIOb"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestXsollaConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 361 'TestXsollaConfig' test.out

#- 362 GetPaymentMerchantConfig1
$CLI_EXE \
    --sn platform \
    --op GetPaymentMerchantConfig1 \
    --id 'PQgLoZ55' \
    > test.out 2>&1
eval_tap $? 362 'GetPaymentMerchantConfig1' test.out

#- 363 UpdateAdyenConfig
# body param: body
echo '{"allowedPaymentMethods": ["UVcM98Sb", "IPhkcwS8", "QNELNu1h"], "apiKey": "GFWq0BqC", "authoriseAsCapture": false, "blockedPaymentMethods": ["iPXSWytH", "HVseBcR1", "36W6YbPK"], "clientKey": "trM9KjhK", "dropInSettings": "NUvlO7wZ", "liveEndpointUrlPrefix": "228O0KYN", "merchantAccount": "87NgMIQ6", "notificationHmacKey": "msOQMhLJ", "notificationPassword": "aZnZrtwA", "notificationUsername": "zxNenlo1", "returnUrl": "4qndoNnL", "settings": "DzO9VRm7"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateAdyenConfig \
    --id 'w8jnKvgw' \
    --sandbox 'true' \
    --validate 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 363 'UpdateAdyenConfig' test.out

#- 364 TestAdyenConfigById
$CLI_EXE \
    --sn platform \
    --op TestAdyenConfigById \
    --id 'WxDzdpsV' \
    --sandbox 'true' \
    > test.out 2>&1
eval_tap $? 364 'TestAdyenConfigById' test.out

#- 365 UpdateAliPayConfig
# body param: body
echo '{"appId": "6BplFj6T", "privateKey": "c6jXfHeV", "publicKey": "5F3aP4it", "returnUrl": "YnToJ3oE"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateAliPayConfig \
    --id 'zzkGWlJx' \
    --sandbox 'false' \
    --validate 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 365 'UpdateAliPayConfig' test.out

#- 366 TestAliPayConfigById
$CLI_EXE \
    --sn platform \
    --op TestAliPayConfigById \
    --id 'x9kPCsvA' \
    --sandbox 'false' \
    > test.out 2>&1
eval_tap $? 366 'TestAliPayConfigById' test.out

#- 367 UpdateCheckoutConfig
# body param: body
echo '{"publicKey": "SBLT9PNG", "secretKey": "zjF8Fvic"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCheckoutConfig \
    --id '1q0H47n8' \
    --sandbox 'true' \
    --validate 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 367 'UpdateCheckoutConfig' test.out

#- 368 TestCheckoutConfigById
$CLI_EXE \
    --sn platform \
    --op TestCheckoutConfigById \
    --id 'JSQzWDj3' \
    --sandbox 'true' \
    > test.out 2>&1
eval_tap $? 368 'TestCheckoutConfigById' test.out

#- 369 UpdateNeonPayConfig
# body param: body
echo '{"apiKey": "xnwHHypc", "webhookSecretKey": "cbjDMGR0"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateNeonPayConfig \
    --id 'YwRpeWTj' \
    --sandbox 'false' \
    --validate 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 369 'UpdateNeonPayConfig' test.out

#- 370 TestNeonPayConfigById
$CLI_EXE \
    --sn platform \
    --op TestNeonPayConfigById \
    --id '447xNLVV' \
    --sandbox 'true' \
    > test.out 2>&1
eval_tap $? 370 'TestNeonPayConfigById' test.out

#- 371 UpdatePayPalConfig
# body param: body
echo '{"clientID": "nKEex3ne", "clientSecret": "qjepDP3K", "returnUrl": "hN8KnE17", "webHookId": "DrtNMJ26"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePayPalConfig \
    --id 'WHYel0dE' \
    --sandbox 'false' \
    --validate 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 371 'UpdatePayPalConfig' test.out

#- 372 TestPayPalConfigById
$CLI_EXE \
    --sn platform \
    --op TestPayPalConfigById \
    --id 'xvRaXN5b' \
    --sandbox 'false' \
    > test.out 2>&1
eval_tap $? 372 'TestPayPalConfigById' test.out

#- 373 UpdateStripeConfig
# body param: body
echo '{"allowedPaymentMethodTypes": ["SXM9XYve", "naqPPsUl", "FPshAP5f"], "publishableKey": "qxQEhhW8", "secretKey": "Zmr6FeuX", "webhookSecret": "QxrslREc"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateStripeConfig \
    --id 'deYzNR5q' \
    --sandbox 'true' \
    --validate 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 373 'UpdateStripeConfig' test.out

#- 374 TestStripeConfigById
$CLI_EXE \
    --sn platform \
    --op TestStripeConfigById \
    --id 'ePiaZREo' \
    --sandbox 'true' \
    > test.out 2>&1
eval_tap $? 374 'TestStripeConfigById' test.out

#- 375 UpdateWxPayConfig
# body param: body
echo '{"appId": "Rndozbn0", "key": "Wgu3eqXA", "mchid": "ADUOSQe3", "returnUrl": "QOqMCbqD"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateWxPayConfig \
    --id 'Po7Ij2cV' \
    --validate 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 375 'UpdateWxPayConfig' test.out

#- 376 UpdateWxPayConfigCert
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UpdateWxPayConfigCert \
    --id '0aQJK591' \
    --upload file $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 376 'UpdateWxPayConfigCert' test.out

#- 377 TestWxPayConfigById
$CLI_EXE \
    --sn platform \
    --op TestWxPayConfigById \
    --id '6dZdnclh' \
    > test.out 2>&1
eval_tap $? 377 'TestWxPayConfigById' test.out

#- 378 UpdateXsollaConfig
# body param: body
echo '{"apiKey": "Emn0wE9g", "flowCompletionUrl": "Vb8FCNg4", "merchantId": 51, "projectId": 64, "projectSecretKey": "9MbXbiTT"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXsollaConfig \
    --id '0ExL7TRe' \
    --validate 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 378 'UpdateXsollaConfig' test.out

#- 379 TestXsollaConfigById
$CLI_EXE \
    --sn platform \
    --op TestXsollaConfigById \
    --id 'Wq4HGqlq' \
    > test.out 2>&1
eval_tap $? 379 'TestXsollaConfigById' test.out

#- 380 UpdateXsollaUIConfig
# body param: body
echo '{"device": "DESKTOP", "showCloseButton": true, "size": "LARGE", "theme": "DEFAULT_DARK"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXsollaUIConfig \
    --id 'N36Iqhuy' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 380 'UpdateXsollaUIConfig' test.out

#- 381 QueryPaymentProviderConfig
$CLI_EXE \
    --sn platform \
    --op QueryPaymentProviderConfig \
    --limit '77' \
    --namespace_ 'jLYky7e8' \
    --offset '64' \
    --region 'NO877a4l' \
    > test.out 2>&1
eval_tap $? 381 'QueryPaymentProviderConfig' test.out

#- 382 CreatePaymentProviderConfig
# body param: body
echo '{"aggregate": "NEONPAY", "namespace": "NIHBwbqk", "region": "aNZJRBPX", "sandboxTaxJarApiToken": "9MaWqOTn", "specials": ["ADYEN", "ALIPAY", "STRIPE"], "taxJarApiToken": "ZI9wBEzl", "taxJarEnabled": true, "useGlobalTaxJarApiToken": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreatePaymentProviderConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 382 'CreatePaymentProviderConfig' test.out

#- 383 GetAggregatePaymentProviders
$CLI_EXE \
    --sn platform \
    --op GetAggregatePaymentProviders \
    > test.out 2>&1
eval_tap $? 383 'GetAggregatePaymentProviders' test.out

#- 384 DebugMatchedPaymentProviderConfig
$CLI_EXE \
    --sn platform \
    --op DebugMatchedPaymentProviderConfig \
    --namespace_ 'uRMzWRIW' \
    --region '9k7KcuVk' \
    > test.out 2>&1
eval_tap $? 384 'DebugMatchedPaymentProviderConfig' test.out

#- 385 GetSpecialPaymentProviders
$CLI_EXE \
    --sn platform \
    --op GetSpecialPaymentProviders \
    > test.out 2>&1
eval_tap $? 385 'GetSpecialPaymentProviders' test.out

#- 386 UpdatePaymentProviderConfig
# body param: body
echo '{"aggregate": "NEONPAY", "namespace": "Cp3YdS0C", "region": "Z9cmsDW4", "sandboxTaxJarApiToken": "iu4RMYBR", "specials": ["NEONPAY", "NEONPAY", "XSOLLA"], "taxJarApiToken": "GJmynygw", "taxJarEnabled": true, "useGlobalTaxJarApiToken": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePaymentProviderConfig \
    --id 'KkqFReXA' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 386 'UpdatePaymentProviderConfig' test.out

#- 387 DeletePaymentProviderConfig
$CLI_EXE \
    --sn platform \
    --op DeletePaymentProviderConfig \
    --id '5zjlcSWS' \
    > test.out 2>&1
eval_tap $? 387 'DeletePaymentProviderConfig' test.out

#- 388 GetPaymentTaxConfig
$CLI_EXE \
    --sn platform \
    --op GetPaymentTaxConfig \
    > test.out 2>&1
eval_tap $? 388 'GetPaymentTaxConfig' test.out

#- 389 UpdatePaymentTaxConfig
# body param: body
echo '{"sandboxTaxJarApiToken": "LyL42h5v", "taxJarApiToken": "EKUnKxcP", "taxJarEnabled": false, "taxJarProductCodesMapping": {"q8jAHdtM": "9GPSnw6H", "v0b5nMxv": "2RqTAnfN", "JbMOEAF1": "v6m2Y5St"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePaymentTaxConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 389 'UpdatePaymentTaxConfig' test.out

#- 390 SyncPaymentOrders
$CLI_EXE \
    --sn platform \
    --op SyncPaymentOrders \
    --nextEvaluatedKey '1Ax7wY99' \
    --end 'ho7g3KRK' \
    --start 'mRQMuqfh' \
    > test.out 2>&1
eval_tap $? 390 'SyncPaymentOrders' test.out

#- 391 PublicGetRootCategories
$CLI_EXE \
    --sn platform \
    --op PublicGetRootCategories \
    --namespace $AB_NAMESPACE \
    --language 'rUyD0lhn' \
    --storeId 'kfSNYrh9' \
    > test.out 2>&1
eval_tap $? 391 'PublicGetRootCategories' test.out

#- 392 DownloadCategories
$CLI_EXE \
    --sn platform \
    --op DownloadCategories \
    --namespace $AB_NAMESPACE \
    --language 'JuVXtOc1' \
    --storeId 'ofxyDg7i' \
    > test.out 2>&1
eval_tap $? 392 'DownloadCategories' test.out

#- 393 PublicGetCategory
$CLI_EXE \
    --sn platform \
    --op PublicGetCategory \
    --categoryPath 'BGz0Y20y' \
    --namespace $AB_NAMESPACE \
    --language 'd0K4jkvf' \
    --storeId 'plVNBRdX' \
    > test.out 2>&1
eval_tap $? 393 'PublicGetCategory' test.out

#- 394 PublicGetChildCategories
$CLI_EXE \
    --sn platform \
    --op PublicGetChildCategories \
    --categoryPath 'VXcwwzVE' \
    --namespace $AB_NAMESPACE \
    --language 'kz1mLGUG' \
    --storeId 'rOkj0cbf' \
    > test.out 2>&1
eval_tap $? 394 'PublicGetChildCategories' test.out

#- 395 PublicGetDescendantCategories
$CLI_EXE \
    --sn platform \
    --op PublicGetDescendantCategories \
    --categoryPath 'q3lZrS9z' \
    --namespace $AB_NAMESPACE \
    --language 'nNmH3Gwz' \
    --storeId 'ziJCAFXe' \
    > test.out 2>&1
eval_tap $? 395 'PublicGetDescendantCategories' test.out

#- 396 PublicListCurrencies
$CLI_EXE \
    --sn platform \
    --op PublicListCurrencies \
    --namespace $AB_NAMESPACE \
    --currencyType 'REAL' \
    > test.out 2>&1
eval_tap $? 396 'PublicListCurrencies' test.out

#- 397 GeDLCDurableRewardShortMap
$CLI_EXE \
    --sn platform \
    --op GeDLCDurableRewardShortMap \
    --namespace $AB_NAMESPACE \
    --dlcType 'XBOX' \
    > test.out 2>&1
eval_tap $? 397 'GeDLCDurableRewardShortMap' test.out

#- 398 GetAppleConfigVersion
$CLI_EXE \
    --sn platform \
    --op GetAppleConfigVersion \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 398 'GetAppleConfigVersion' test.out

#- 399 GetIAPItemMapping
$CLI_EXE \
    --sn platform \
    --op GetIAPItemMapping \
    --namespace $AB_NAMESPACE \
    --platform 'STADIA' \
    > test.out 2>&1
eval_tap $? 399 'GetIAPItemMapping' test.out

#- 400 PublicGetItemByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetItemByAppId \
    --namespace $AB_NAMESPACE \
    --language 'p5YxEHGn' \
    --region 'QEQD5Vpx' \
    --storeId 'AJEEYDTU' \
    --appId 'l8Lj3ivW' \
    > test.out 2>&1
eval_tap $? 400 'PublicGetItemByAppId' test.out

#- 401 PublicQueryItems
$CLI_EXE \
    --sn platform \
    --op PublicQueryItems \
    --namespace $AB_NAMESPACE \
    --appType 'GAME' \
    --autoCalcEstimatedPrice 'true' \
    --baseAppId 'A11XFf07' \
    --categoryPath 'UlTPgUYb' \
    --features 'lbpEigrD' \
    --includeSubCategoryItem 'true' \
    --itemType 'MEDIA' \
    --language 'eMEI5mCL' \
    --limit '60' \
    --offset '69' \
    --region 'Kc31sSZW' \
    --sortBy '["name", "updatedAt:desc", "displayOrder"]' \
    --storeId 'tKPnampk' \
    --tags '4WApEuXj' \
    > test.out 2>&1
eval_tap $? 401 'PublicQueryItems' test.out

#- 402 PublicGetItemBySku
$CLI_EXE \
    --sn platform \
    --op PublicGetItemBySku \
    --namespace $AB_NAMESPACE \
    --autoCalcEstimatedPrice 'true' \
    --language 'FgYbYAx2' \
    --region 'sdLpSJy6' \
    --storeId 'Ze2obKgr' \
    --sku 'THor4krq' \
    > test.out 2>&1
eval_tap $? 402 'PublicGetItemBySku' test.out

#- 403 PublicGetEstimatedPrice
$CLI_EXE \
    --sn platform \
    --op PublicGetEstimatedPrice \
    --namespace $AB_NAMESPACE \
    --region 'r55dhBaN' \
    --storeId 'C8Ys2Pz7' \
    --itemIds 'QTKe2SCe' \
    > test.out 2>&1
eval_tap $? 403 'PublicGetEstimatedPrice' test.out

#- 404 PublicBulkGetItems
$CLI_EXE \
    --sn platform \
    --op PublicBulkGetItems \
    --namespace $AB_NAMESPACE \
    --autoCalcEstimatedPrice 'false' \
    --language 'GJ6lmPv0' \
    --region 'ylS7lMsI' \
    --storeId 'IFbChat2' \
    --itemIds 'RX4rbod6' \
    > test.out 2>&1
eval_tap $? 404 'PublicBulkGetItems' test.out

#- 405 PublicValidateItemPurchaseCondition
# body param: body
echo '{"itemIds": ["uYEpk09s", "9JH9bBni", "wvalC6Lo"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicValidateItemPurchaseCondition \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 405 'PublicValidateItemPurchaseCondition' test.out

#- 406 PublicSearchItems
$CLI_EXE \
    --sn platform \
    --op PublicSearchItems \
    --namespace $AB_NAMESPACE \
    --autoCalcEstimatedPrice 'false' \
    --itemType 'APP' \
    --limit '59' \
    --offset '10' \
    --region 'p2mAC51P' \
    --storeId 'KIqct4ZG' \
    --keyword 'mfMSTltU' \
    --language 'L5SHQ5Oo' \
    > test.out 2>&1
eval_tap $? 406 'PublicSearchItems' test.out

#- 407 PublicGetApp
$CLI_EXE \
    --sn platform \
    --op PublicGetApp \
    --itemId 'JE5IhDES' \
    --namespace $AB_NAMESPACE \
    --language 'jAeKfelx' \
    --region 'qW6aZa4x' \
    --storeId 'r7botB5h' \
    > test.out 2>&1
eval_tap $? 407 'PublicGetApp' test.out

#- 408 PublicGetItemDynamicData
$CLI_EXE \
    --sn platform \
    --op PublicGetItemDynamicData \
    --itemId 'gZQazifP' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 408 'PublicGetItemDynamicData' test.out

#- 409 PublicGetItem
$CLI_EXE \
    --sn platform \
    --op PublicGetItem \
    --itemId 'GPMQAq4T' \
    --namespace $AB_NAMESPACE \
    --autoCalcEstimatedPrice 'true' \
    --language 'LmdtOenE' \
    --populateBundle 'true' \
    --region '4I3mjH7i' \
    --storeId 'h4dLT6ON' \
    > test.out 2>&1
eval_tap $? 409 'PublicGetItem' test.out

#- 410 GetPaymentCustomization
eval_tap 0 410 'GetPaymentCustomization # SKIP deprecated' test.out

#- 411 PublicGetPaymentUrl
# body param: body
echo '{"neonPayConfig": {"cancelUrl": "qBGCe7qO", "successUrl": "71qdS7uQ"}, "paymentOrderNo": "tCa7mOhC", "paymentProvider": "XSOLLA", "returnUrl": "H6isd3mZ", "ui": "mqaLg3AN", "zipCode": "Erg6VHRR"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicGetPaymentUrl \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 411 'PublicGetPaymentUrl' test.out

#- 412 PublicGetPaymentMethods
$CLI_EXE \
    --sn platform \
    --op PublicGetPaymentMethods \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'K6TqlqEi' \
    > test.out 2>&1
eval_tap $? 412 'PublicGetPaymentMethods' test.out

#- 413 PublicGetUnpaidPaymentOrder
$CLI_EXE \
    --sn platform \
    --op PublicGetUnpaidPaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'EcudYxPu' \
    > test.out 2>&1
eval_tap $? 413 'PublicGetUnpaidPaymentOrder' test.out

#- 414 Pay
# body param: body
echo '{"token": "LT7RYLws"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op Pay \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'd9NWuqSf' \
    --paymentProvider 'ALIPAY' \
    --zipCode '1uPSuJdU' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 414 'Pay' test.out

#- 415 PublicCheckPaymentOrderPaidStatus
$CLI_EXE \
    --sn platform \
    --op PublicCheckPaymentOrderPaidStatus \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'tYZARkMQ' \
    > test.out 2>&1
eval_tap $? 415 'PublicCheckPaymentOrderPaidStatus' test.out

#- 416 GetPaymentPublicConfig
$CLI_EXE \
    --sn platform \
    --op GetPaymentPublicConfig \
    --namespace $AB_NAMESPACE \
    --sandbox 'true' \
    --paymentProvider 'PAYPAL' \
    --region 'eY7vgus0' \
    > test.out 2>&1
eval_tap $? 416 'GetPaymentPublicConfig' test.out

#- 417 PublicGetQRCode
$CLI_EXE \
    --sn platform \
    --op PublicGetQRCode \
    --namespace $AB_NAMESPACE \
    --code 'ZcvVRVBk' \
    > test.out 2>&1
eval_tap $? 417 'PublicGetQRCode' test.out

#- 418 PublicNormalizePaymentReturnUrl
$CLI_EXE \
    --sn platform \
    --op PublicNormalizePaymentReturnUrl \
    --namespace $AB_NAMESPACE \
    --payerID 'fW4R4MFF' \
    --foreinginvoice 'oYeuxGwK' \
    --invoiceId '1LlufKqb' \
    --payload 'EnjLEJVo' \
    --redirectResult 'xynyYQ7M' \
    --resultCode 'Wc5NSO75' \
    --sessionId 'IQlYGMnu' \
    --status 'dLtrBNbO' \
    --token '1GWKv5uc' \
    --type 'Xv4Zhww5' \
    --userId 'IyBzlyL7' \
    --orderNo 'c4sUfscD' \
    --paymentOrderNo 's6ztLvjA' \
    --paymentProvider 'WXPAY' \
    --returnUrl 'g6jyQaxB' \
    > test.out 2>&1
eval_tap $? 418 'PublicNormalizePaymentReturnUrl' test.out

#- 419 GetPaymentTaxValue
$CLI_EXE \
    --sn platform \
    --op GetPaymentTaxValue \
    --namespace $AB_NAMESPACE \
    --zipCode 'NDk1MYtm' \
    --paymentOrderNo 'GKpdK0kU' \
    --paymentProvider 'STRIPE' \
    > test.out 2>&1
eval_tap $? 419 'GetPaymentTaxValue' test.out

#- 420 GetRewardByCode
$CLI_EXE \
    --sn platform \
    --op GetRewardByCode \
    --namespace $AB_NAMESPACE \
    --rewardCode 'NdBa81XV' \
    > test.out 2>&1
eval_tap $? 420 'GetRewardByCode' test.out

#- 421 QueryRewards1
$CLI_EXE \
    --sn platform \
    --op QueryRewards1 \
    --namespace $AB_NAMESPACE \
    --eventTopic 'AbwZQFvQ' \
    --limit '52' \
    --offset '73' \
    --sortBy '["namespace", "rewardCode:asc", "rewardCode:desc"]' \
    > test.out 2>&1
eval_tap $? 421 'QueryRewards1' test.out

#- 422 GetReward1
$CLI_EXE \
    --sn platform \
    --op GetReward1 \
    --namespace $AB_NAMESPACE \
    --rewardId 'szfVTYbE' \
    > test.out 2>&1
eval_tap $? 422 'GetReward1' test.out

#- 423 PublicListStores
$CLI_EXE \
    --sn platform \
    --op PublicListStores \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 423 'PublicListStores' test.out

#- 424 PublicExistsAnyMyActiveEntitlement
$CLI_EXE \
    --sn platform \
    --op PublicExistsAnyMyActiveEntitlement \
    --namespace $AB_NAMESPACE \
    --appIds '["vcw4KMQa", "5f66mEeS", "hwbVi1tF"]' \
    --itemIds '["AAF8gLpF", "PWR6BcE9", "qwyCEOlW"]' \
    --skus '["QjJkQi9T", "l5cAEhsR", "Y9QKn4GJ"]' \
    > test.out 2>&1
eval_tap $? 424 'PublicExistsAnyMyActiveEntitlement' test.out

#- 425 PublicGetMyAppEntitlementOwnershipByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetMyAppEntitlementOwnershipByAppId \
    --namespace $AB_NAMESPACE \
    --appId 'ju6FnjGi' \
    > test.out 2>&1
eval_tap $? 425 'PublicGetMyAppEntitlementOwnershipByAppId' test.out

#- 426 PublicGetMyEntitlementOwnershipByItemId
$CLI_EXE \
    --sn platform \
    --op PublicGetMyEntitlementOwnershipByItemId \
    --namespace $AB_NAMESPACE \
    --entitlementClazz 'LOOTBOX' \
    --itemId 'u63PgjL2' \
    > test.out 2>&1
eval_tap $? 426 'PublicGetMyEntitlementOwnershipByItemId' test.out

#- 427 PublicGetMyEntitlementOwnershipBySku
$CLI_EXE \
    --sn platform \
    --op PublicGetMyEntitlementOwnershipBySku \
    --namespace $AB_NAMESPACE \
    --entitlementClazz 'LOOTBOX' \
    --sku 'Fk6Mvgpn' \
    > test.out 2>&1
eval_tap $? 427 'PublicGetMyEntitlementOwnershipBySku' test.out

#- 428 PublicGetEntitlementOwnershipToken
$CLI_EXE \
    --sn platform \
    --op PublicGetEntitlementOwnershipToken \
    --namespace $AB_NAMESPACE \
    --appIds '["AEhBsxdL", "1IGO3Njq", "Gei9NKuI"]' \
    --itemIds '["EWsyhIcZ", "mf5i623b", "Ss1GiVSL"]' \
    --skus '["F36XeqTH", "ac682Cy2", "ttZSBaOu"]' \
    > test.out 2>&1
eval_tap $? 428 'PublicGetEntitlementOwnershipToken' test.out

#- 429 SyncTwitchDropsEntitlement
# body param: body
echo '{"gameId": "9acl5pCN", "language": "BAq_yO", "region": "Lq1RNENs"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncTwitchDropsEntitlement \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 429 'SyncTwitchDropsEntitlement' test.out

#- 430 PublicGetMyWallet
$CLI_EXE \
    --sn platform \
    --op PublicGetMyWallet \
    --currencyCode 'vgl6VsNf' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 430 'PublicGetMyWallet' test.out

#- 431 SyncEpicGameDLC
# body param: body
echo '{"epicGamesJwtToken": "lFOcHBFg"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncEpicGameDLC \
    --namespace $AB_NAMESPACE \
    --userId 'C4wLx6m7' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 431 'SyncEpicGameDLC' test.out

#- 432 SyncOculusDLC
$CLI_EXE \
    --sn platform \
    --op SyncOculusDLC \
    --namespace $AB_NAMESPACE \
    --userId 'PTmR5VBd' \
    > test.out 2>&1
eval_tap $? 432 'SyncOculusDLC' test.out

#- 433 PublicSyncPsnDlcInventory
# body param: body
echo '{"serviceLabel": 77}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicSyncPsnDlcInventory \
    --namespace $AB_NAMESPACE \
    --userId 'ZFrOfNVh' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 433 'PublicSyncPsnDlcInventory' test.out

#- 434 PublicSyncPsnDlcInventoryWithMultipleServiceLabels
# body param: body
echo '{"serviceLabels": [64, 88, 28]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicSyncPsnDlcInventoryWithMultipleServiceLabels \
    --namespace $AB_NAMESPACE \
    --userId '5T3FLXtP' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 434 'PublicSyncPsnDlcInventoryWithMultipleServiceLabels' test.out

#- 435 SyncSteamDLC
# body param: body
echo '{"appId": "8UQrQUt3", "steamId": "YDEqFE8s"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncSteamDLC \
    --namespace $AB_NAMESPACE \
    --userId 'VNnsOdVv' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 435 'SyncSteamDLC' test.out

#- 436 SyncXboxDLC
# body param: body
echo '{"xstsToken": "FsGgCllp"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncXboxDLC \
    --namespace $AB_NAMESPACE \
    --userId 'GZQZarrt' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 436 'SyncXboxDLC' test.out

#- 437 PublicQueryUserEntitlements
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserEntitlements \
    --namespace $AB_NAMESPACE \
    --userId '9JAQjlaU' \
    --appType 'SOFTWARE' \
    --entitlementClazz 'APP' \
    --entitlementName 'SSPZHRuT' \
    --features '["UiefiRT3", "694nNOWL", "5ho8Xy7Y"]' \
    --itemId '["zCCjd6U4", "HhrxrS1X", "dXIykUQE"]' \
    --limit '51' \
    --offset '22' \
    > test.out 2>&1
eval_tap $? 437 'PublicQueryUserEntitlements' test.out

#- 438 PublicGetUserAppEntitlementByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetUserAppEntitlementByAppId \
    --namespace $AB_NAMESPACE \
    --userId 'COGh6K73' \
    --appId 'i0dG9OGw' \
    > test.out 2>&1
eval_tap $? 438 'PublicGetUserAppEntitlementByAppId' test.out

#- 439 PublicQueryUserEntitlementsByAppType
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserEntitlementsByAppType \
    --namespace $AB_NAMESPACE \
    --userId 'nWI0dOGL' \
    --limit '0' \
    --offset '18' \
    --appType 'GAME' \
    > test.out 2>&1
eval_tap $? 439 'PublicQueryUserEntitlementsByAppType' test.out

#- 440 PublicGetUserEntitlementsByIds
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementsByIds \
    --namespace $AB_NAMESPACE \
    --userId 'srwWMsYt' \
    --availablePlatformOnly 'false' \
    --ids '["N5cf3Ghf", "TlxWibjN", "dwKrgxKM"]' \
    > test.out 2>&1
eval_tap $? 440 'PublicGetUserEntitlementsByIds' test.out

#- 441 PublicGetUserEntitlementByItemId
eval_tap 0 441 'PublicGetUserEntitlementByItemId # SKIP deprecated' test.out

#- 442 PublicGetUserEntitlementBySku
eval_tap 0 442 'PublicGetUserEntitlementBySku # SKIP deprecated' test.out

#- 443 PublicUserEntitlementHistory
$CLI_EXE \
    --sn platform \
    --op PublicUserEntitlementHistory \
    --namespace $AB_NAMESPACE \
    --userId '4QeSfmA4' \
    --endDate 'wTC9Sj99' \
    --entitlementClazz 'SUBSCRIPTION' \
    --limit '68' \
    --offset '66' \
    --startDate 'xIv59PaB' \
    > test.out 2>&1
eval_tap $? 443 'PublicUserEntitlementHistory' test.out

#- 444 PublicExistsAnyUserActiveEntitlement
$CLI_EXE \
    --sn platform \
    --op PublicExistsAnyUserActiveEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'KtIB3Jtq' \
    --appIds '["pMBttMIj", "LbGgbHja", "6YaBF1fM"]' \
    --itemIds '["F7DRtej1", "CrzzoFjV", "d1m1pT3A"]' \
    --skus '["QqD7BL7p", "w2wRlrcC", "7iv06lx0"]' \
    > test.out 2>&1
eval_tap $? 444 'PublicExistsAnyUserActiveEntitlement' test.out

#- 445 PublicGetUserAppEntitlementOwnershipByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetUserAppEntitlementOwnershipByAppId \
    --namespace $AB_NAMESPACE \
    --userId 'DjKE6WsP' \
    --appId 'KY8kDIiI' \
    > test.out 2>&1
eval_tap $? 445 'PublicGetUserAppEntitlementOwnershipByAppId' test.out

#- 446 PublicGetUserEntitlementOwnershipByItemId
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementOwnershipByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'BZLeTWRs' \
    --entitlementClazz 'ENTITLEMENT' \
    --itemId 'skqU2zQQ' \
    > test.out 2>&1
eval_tap $? 446 'PublicGetUserEntitlementOwnershipByItemId' test.out

#- 447 PublicGetUserEntitlementOwnershipByItemIds
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementOwnershipByItemIds \
    --namespace $AB_NAMESPACE \
    --userId 'Cb7xn1sl' \
    --ids '["7KCiQ811", "NU6Kcfr6", "juslBKts"]' \
    > test.out 2>&1
eval_tap $? 447 'PublicGetUserEntitlementOwnershipByItemIds' test.out

#- 448 PublicGetUserEntitlementOwnershipBySku
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementOwnershipBySku \
    --namespace $AB_NAMESPACE \
    --userId 'Kfp2sFMp' \
    --entitlementClazz 'ENTITLEMENT' \
    --sku 'mzHVKvch' \
    > test.out 2>&1
eval_tap $? 448 'PublicGetUserEntitlementOwnershipBySku' test.out

#- 449 PublicGetUserEntitlement
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlement \
    --entitlementId 'hvEYPuha' \
    --namespace $AB_NAMESPACE \
    --userId 'YtUnB4Wh' \
    > test.out 2>&1
eval_tap $? 449 'PublicGetUserEntitlement' test.out

#- 450 PublicConsumeUserEntitlement
# body param: body
echo '{"metadata": {"operationSource": "INVENTORY"}, "options": ["sfbv8qd3", "wZVBfdbi", "dYXrkcJc"], "requestId": "j51Q32x1", "useCount": 79}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicConsumeUserEntitlement \
    --entitlementId 'ZhZKSe1j' \
    --namespace $AB_NAMESPACE \
    --userId '6dWBMn8c' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 450 'PublicConsumeUserEntitlement' test.out

#- 451 PublicSellUserEntitlement
# body param: body
echo '{"requestId": "yeM9WpRo", "useCount": 12}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicSellUserEntitlement \
    --entitlementId 'eYLJ0Yzm' \
    --namespace $AB_NAMESPACE \
    --userId 'wPtI4K5C' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 451 'PublicSellUserEntitlement' test.out

#- 452 PublicSplitUserEntitlement
# body param: body
echo '{"metadata": {"operationSource": "INVENTORY"}, "useCount": 77}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicSplitUserEntitlement \
    --entitlementId 'n0lECa3H' \
    --namespace $AB_NAMESPACE \
    --userId 'BeoOPhij' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 452 'PublicSplitUserEntitlement' test.out

#- 453 PublicTransferUserEntitlement
# body param: body
echo '{"entitlementId": "ciD6UhA2", "metadata": {"operationSource": "INVENTORY"}, "useCount": 33}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicTransferUserEntitlement \
    --entitlementId 'wLCWSVn4' \
    --namespace $AB_NAMESPACE \
    --userId '8gLjEszn' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 453 'PublicTransferUserEntitlement' test.out

#- 454 PublicRedeemCode
# body param: body
echo '{"code": "YSve62XK", "language": "KUx_732", "region": "FBT1Dd75"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicRedeemCode \
    --namespace $AB_NAMESPACE \
    --userId 'l3lgrFaZ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 454 'PublicRedeemCode' test.out

#- 455 PublicFulfillAppleIAPItem
# body param: body
echo '{"excludeOldTransactions": true, "language": "Flb", "productId": "L8XLwxlU", "receiptData": "19e2Ra4q", "region": "Dcmfod3k", "transactionId": "TOxLDOkK"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicFulfillAppleIAPItem \
    --namespace $AB_NAMESPACE \
    --userId 'LddzrLWm' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 455 'PublicFulfillAppleIAPItem' test.out

#- 456 SyncEpicGamesInventory
# body param: body
echo '{"epicGamesJwtToken": "jLBeC3Nn"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncEpicGamesInventory \
    --namespace $AB_NAMESPACE \
    --userId 'qvi8x4Jz' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 456 'SyncEpicGamesInventory' test.out

#- 457 PublicFulfillGoogleIAPItem
# body param: body
echo '{"autoAck": true, "autoConsume": false, "language": "UCb", "orderId": "U6YNllyf", "packageName": "dLuAasSl", "productId": "F22ftZAx", "purchaseTime": 57, "purchaseToken": "SNB8yLgB", "region": "70jR1R2R", "subscriptionPurchase": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicFulfillGoogleIAPItem \
    --namespace $AB_NAMESPACE \
    --userId 'ttEAaujX' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 457 'PublicFulfillGoogleIAPItem' test.out

#- 458 SyncOculusConsumableEntitlements
$CLI_EXE \
    --sn platform \
    --op SyncOculusConsumableEntitlements \
    --namespace $AB_NAMESPACE \
    --userId 'ORhddUmN' \
    > test.out 2>&1
eval_tap $? 458 'SyncOculusConsumableEntitlements' test.out

#- 459 PublicReconcilePlayStationStore
# body param: body
echo '{"currencyCode": "7mYHEWBp", "price": 0.9951124330605761, "productId": "kMGHKXGa", "serviceLabel": 41}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicReconcilePlayStationStore \
    --namespace $AB_NAMESPACE \
    --userId 'UFifDu03' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 459 'PublicReconcilePlayStationStore' test.out

#- 460 PublicReconcilePlayStationStoreWithMultipleServiceLabels
# body param: body
echo '{"currencyCode": "NjsS0qlY", "price": 0.18728689548093946, "productId": "bi10TjKB", "serviceLabels": [63, 22, 79]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicReconcilePlayStationStoreWithMultipleServiceLabels \
    --namespace $AB_NAMESPACE \
    --userId '5g4lXKip' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 460 'PublicReconcilePlayStationStoreWithMultipleServiceLabels' test.out

#- 461 SyncSteamInventory
# body param: body
echo '{"appId": "qbdccsZa", "currencyCode": "1Z9OpHMg", "language": "pwik", "price": 0.11795892213942205, "productId": "AWdXUPzh", "region": "RIDk55kq", "steamId": "oULUfIQx"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncSteamInventory \
    --namespace $AB_NAMESPACE \
    --userId 'Xi9GC8jW' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 461 'SyncSteamInventory' test.out

#- 462 SyncSteamAbnormalTransaction
$CLI_EXE \
    --sn platform \
    --op SyncSteamAbnormalTransaction \
    --namespace $AB_NAMESPACE \
    --userId '2cvQbNGv' \
    > test.out 2>&1
eval_tap $? 462 'SyncSteamAbnormalTransaction' test.out

#- 463 SyncSteamIAPByTransaction
# body param: body
echo '{"orderId": "ZP2oB8po"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncSteamIAPByTransaction \
    --namespace $AB_NAMESPACE \
    --userId '3n71rXz8' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 463 'SyncSteamIAPByTransaction' test.out

#- 464 PublicQueryUserThirdPartySubscription
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserThirdPartySubscription \
    --namespace $AB_NAMESPACE \
    --platform 'GOOGLE' \
    --userId 'iVnmgtxk' \
    --activeOnly 'true' \
    --groupId 'wt8DNaA8' \
    --limit '7' \
    --offset '22' \
    --productId 'oK2QdHCs' \
    > test.out 2>&1
eval_tap $? 464 'PublicQueryUserThirdPartySubscription' test.out

#- 465 SyncTwitchDropsEntitlement1
# body param: body
echo '{"gameId": "EOjjsebG", "language": "xR", "region": "N43957FR"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncTwitchDropsEntitlement1 \
    --namespace $AB_NAMESPACE \
    --userId 'KHIC82wM' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 465 'SyncTwitchDropsEntitlement1' test.out

#- 466 SyncXboxInventory
# body param: body
echo '{"currencyCode": "YSpYQpIj", "price": 0.2567380801750119, "productId": "YQT1rMJn", "xstsToken": "fKNqaOoc"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncXboxInventory \
    --namespace $AB_NAMESPACE \
    --userId 'Ipbn43E1' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 466 'SyncXboxInventory' test.out

#- 467 PublicQueryUserOrders
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserOrders \
    --namespace $AB_NAMESPACE \
    --userId 'Yx6cldkC' \
    --discounted 'false' \
    --itemId 'FXeUulY0' \
    --limit '10' \
    --offset '3' \
    --status 'CHARGEBACK' \
    > test.out 2>&1
eval_tap $? 467 'PublicQueryUserOrders' test.out

#- 468 PublicCreateUserOrder
# body param: body
echo '{"currencyCode": "tkYjL09Y", "discountCodes": ["L6uJruBw", "aAKdyu8D", "areiPVpN"], "discountedPrice": 86, "ext": {"GRMSkuOZ": {}, "42DOKngv": {}, "FiRfp9Cw": {}}, "itemId": "lxqR55Ag", "language": "zyC_gquX", "price": 87, "quantity": 61, "region": "sIR0vV4L", "returnUrl": "0nHCHoVu", "sectionId": "rlDjg3ax"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicCreateUserOrder \
    --namespace $AB_NAMESPACE \
    --userId 'LrCqRTkW' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 468 'PublicCreateUserOrder' test.out

#- 469 PublicPreviewOrderPrice
# body param: body
echo '{"currencyCode": "PT6X84H3", "discountCodes": ["N2C3B0B9", "rpEJqFUg", "EWgY4efv"], "discountedPrice": 28, "itemId": "tRXic4Fv", "price": 56, "quantity": 88}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicPreviewOrderPrice \
    --namespace $AB_NAMESPACE \
    --userId 'YGo7ti3C' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 469 'PublicPreviewOrderPrice' test.out

#- 470 PublicGetUserOrder
$CLI_EXE \
    --sn platform \
    --op PublicGetUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'MhL5SQtN' \
    --userId 'p17HfcvR' \
    > test.out 2>&1
eval_tap $? 470 'PublicGetUserOrder' test.out

#- 471 PublicCancelUserOrder
$CLI_EXE \
    --sn platform \
    --op PublicCancelUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'ndHH0Gsz' \
    --userId 'y5VXP8OH' \
    > test.out 2>&1
eval_tap $? 471 'PublicCancelUserOrder' test.out

#- 472 PublicGetUserOrderHistories
$CLI_EXE \
    --sn platform \
    --op PublicGetUserOrderHistories \
    --namespace $AB_NAMESPACE \
    --orderNo '6cveJqjC' \
    --userId 'Je6fChg0' \
    > test.out 2>&1
eval_tap $? 472 'PublicGetUserOrderHistories' test.out

#- 473 PublicDownloadUserOrderReceipt
$CLI_EXE \
    --sn platform \
    --op PublicDownloadUserOrderReceipt \
    --namespace $AB_NAMESPACE \
    --orderNo 'oLYcPxqo' \
    --userId 'W6ds5uJo' \
    > test.out 2>&1
eval_tap $? 473 'PublicDownloadUserOrderReceipt' test.out

#- 474 PublicGetPaymentAccounts
$CLI_EXE \
    --sn platform \
    --op PublicGetPaymentAccounts \
    --namespace $AB_NAMESPACE \
    --userId 'hpWkYdUW' \
    > test.out 2>&1
eval_tap $? 474 'PublicGetPaymentAccounts' test.out

#- 475 PublicDeletePaymentAccount
$CLI_EXE \
    --sn platform \
    --op PublicDeletePaymentAccount \
    --id 'eNRLDiX5' \
    --namespace $AB_NAMESPACE \
    --type 'paypal' \
    --userId '15xILVR0' \
    > test.out 2>&1
eval_tap $? 475 'PublicDeletePaymentAccount' test.out

#- 476 PublicListActiveSections
$CLI_EXE \
    --sn platform \
    --op PublicListActiveSections \
    --namespace $AB_NAMESPACE \
    --userId 'tP2Av0P8' \
    --autoCalcEstimatedPrice 'false' \
    --language '0ShUTsRi' \
    --region 'VI1Xo0x6' \
    --storeId 'JENw5eZz' \
    --viewId '4KbyLcvE' \
    > test.out 2>&1
eval_tap $? 476 'PublicListActiveSections' test.out

#- 477 PublicQueryUserSubscriptions
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserSubscriptions \
    --namespace $AB_NAMESPACE \
    --userId '4xN1w2Ge' \
    --chargeStatus 'NEVER' \
    --itemId 'jkWKoIrU' \
    --limit '26' \
    --offset '48' \
    --sku '4zFvqZOT' \
    --status 'ACTIVE' \
    --subscribedBy 'USER' \
    > test.out 2>&1
eval_tap $? 477 'PublicQueryUserSubscriptions' test.out

#- 478 PublicSubscribeSubscription
# body param: body
echo '{"currencyCode": "mIudFJSV", "itemId": "z94PWRVz", "language": "nWav_CjVD_733", "region": "fgcd8rHd", "returnUrl": "oWx1xwJm", "source": "mcHMjsyd"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicSubscribeSubscription \
    --namespace $AB_NAMESPACE \
    --userId 'aDfGvNVj' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 478 'PublicSubscribeSubscription' test.out

#- 479 PublicCheckUserSubscriptionSubscribableByItemId
$CLI_EXE \
    --sn platform \
    --op PublicCheckUserSubscriptionSubscribableByItemId \
    --namespace $AB_NAMESPACE \
    --userId '5haoHizC' \
    --itemId 'KWIh56WS' \
    > test.out 2>&1
eval_tap $? 479 'PublicCheckUserSubscriptionSubscribableByItemId' test.out

#- 480 PublicGetUserSubscription
$CLI_EXE \
    --sn platform \
    --op PublicGetUserSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'MzKblw98' \
    --userId 'TU7Ze00T' \
    > test.out 2>&1
eval_tap $? 480 'PublicGetUserSubscription' test.out

#- 481 PublicChangeSubscriptionBillingAccount
$CLI_EXE \
    --sn platform \
    --op PublicChangeSubscriptionBillingAccount \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'giNlXBVZ' \
    --userId '3vJpw2lh' \
    > test.out 2>&1
eval_tap $? 481 'PublicChangeSubscriptionBillingAccount' test.out

#- 482 PublicCancelSubscription
# body param: body
echo '{"immediate": false, "reason": "5uwMYuWO"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicCancelSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId '46hx3uLF' \
    --userId 'iFLv8w1h' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 482 'PublicCancelSubscription' test.out

#- 483 PublicGetUserSubscriptionBillingHistories
$CLI_EXE \
    --sn platform \
    --op PublicGetUserSubscriptionBillingHistories \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'GsUGiUSd' \
    --userId '38mes3db' \
    --excludeFree 'false' \
    --limit '97' \
    --offset '19' \
    > test.out 2>&1
eval_tap $? 483 'PublicGetUserSubscriptionBillingHistories' test.out

#- 484 PublicListViews
$CLI_EXE \
    --sn platform \
    --op PublicListViews \
    --namespace $AB_NAMESPACE \
    --userId 'aYT5ODzT' \
    --language 'VuZXmE9Z' \
    --storeId 'KBTspFUW' \
    > test.out 2>&1
eval_tap $? 484 'PublicListViews' test.out

#- 485 PublicGetWallet
$CLI_EXE \
    --sn platform \
    --op PublicGetWallet \
    --currencyCode '4rQwVZmY' \
    --namespace $AB_NAMESPACE \
    --userId 'wewsgk5L' \
    > test.out 2>&1
eval_tap $? 485 'PublicGetWallet' test.out

#- 486 PublicListUserWalletTransactions
$CLI_EXE \
    --sn platform \
    --op PublicListUserWalletTransactions \
    --currencyCode 'Sjqw8trc' \
    --namespace $AB_NAMESPACE \
    --userId 'wWnx9bqC' \
    --limit '51' \
    --offset '93' \
    > test.out 2>&1
eval_tap $? 486 'PublicListUserWalletTransactions' test.out

#- 487 PublicGetMyDLCContent
$CLI_EXE \
    --sn platform \
    --op PublicGetMyDLCContent \
    --includeAllNamespaces 'false' \
    --type 'STEAM' \
    > test.out 2>&1
eval_tap $? 487 'PublicGetMyDLCContent' test.out

#- 488 QueryFulfillments
$CLI_EXE \
    --sn platform \
    --op QueryFulfillments \
    --namespace $AB_NAMESPACE \
    --endTime 'sXsI4ox4' \
    --limit '78' \
    --offset '83' \
    --startTime 'sbNGNtLl' \
    --state 'REVOKED' \
    --transactionId 'XaRDZwP3' \
    --userId 'OiIiBEMg' \
    > test.out 2>&1
eval_tap $? 488 'QueryFulfillments' test.out

#- 489 QueryItemsV2
$CLI_EXE \
    --sn platform \
    --op QueryItemsV2 \
    --namespace $AB_NAMESPACE \
    --appType 'DLC' \
    --availableDate 'lUQpJ3Dk' \
    --baseAppId 'fjYHTbvO' \
    --categoryPath '2Kq8dvPd' \
    --features 'V07LJzmH' \
    --includeSubCategoryItem 'true' \
    --itemName 'V8RnzTn8' \
    --itemStatus 'ACTIVE' \
    --itemType '["SUBSCRIPTION", "SEASON", "CODE"]' \
    --limit '21' \
    --offset '64' \
    --region 'V88UYo5N' \
    --sectionExclusive 'true' \
    --sortBy '["name", "updatedAt:desc", "updatedAt:asc"]' \
    --storeId '5T58iuK0' \
    --tags 'Umnx8znX' \
    --targetNamespace 'bt0HRP7x' \
    --withTotal 'true' \
    > test.out 2>&1
eval_tap $? 489 'QueryItemsV2' test.out

#- 490 ImportStore1
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op ImportStore1 \
    --namespace $AB_NAMESPACE \
    --storeId 'RHGFVjeH' \
    --strictMode 'true' \
    --upload file $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 490 'ImportStore1' test.out

#- 491 ExportStore1
# body param: body
echo '{"itemIds": ["xO90qkGh", "GGF86PrK", "PpxSk13R"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ExportStore1 \
    --namespace $AB_NAMESPACE \
    --storeId 'Mj9qN9L9' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 491 'ExportStore1' test.out

#- 492 FulfillRewardsV2
# body param: body
echo '{"entitlementCollectionId": "PWYrVJh7", "entitlementOrigin": "Epic", "metadata": {"m2g5pda3": {}, "dYztpnjB": {}, "msATpiKq": {}}, "origin": "Xbox", "rewards": [{"currency": {"currencyCode": "p7b1dnms", "namespace": "I8ZXanLm"}, "item": {"itemId": "fRSj0kaq", "itemName": "0rY0h82P", "itemSku": "0IaudmP3", "itemType": "2QwFEopt"}, "quantity": 50, "type": "CURRENCY"}, {"currency": {"currencyCode": "5Ybb5HB0", "namespace": "1R4tWp71"}, "item": {"itemId": "gYFwcQAR", "itemName": "oPiM8a48", "itemSku": "VybRpXfb", "itemType": "MYz8UFV5"}, "quantity": 95, "type": "CURRENCY"}, {"currency": {"currencyCode": "38kvTYc4", "namespace": "ZJjeIFFx"}, "item": {"itemId": "lmO7QZFC", "itemName": "pOBbLr7l", "itemSku": "xIIGkGMm", "itemType": "4lEz1XVZ"}, "quantity": 61, "type": "ITEM"}], "source": "GIFT", "transactionId": "ywiiPD0p"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op FulfillRewardsV2 \
    --namespace $AB_NAMESPACE \
    --userId 'DUJVkwxJ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 492 'FulfillRewardsV2' test.out

#- 493 FulfillItems
eval_tap 0 493 'FulfillItems # SKIP deprecated' test.out

#- 494 RetryFulfillItems
eval_tap 0 494 'RetryFulfillItems # SKIP deprecated' test.out

#- 495 RevokeItems
eval_tap 0 495 'RevokeItems # SKIP deprecated' test.out

#- 496 V2PublicFulfillAppleIAPItem
# body param: body
echo '{"transactionId": "OXNzfbQ0"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op V2PublicFulfillAppleIAPItem \
    --namespace $AB_NAMESPACE \
    --userId 'Ucnkzmq5' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 496 'V2PublicFulfillAppleIAPItem' test.out

#- 497 FulfillItemsV3
# body param: body
echo '{"items": [{"duration": 25, "endDate": "1982-11-25T00:00:00Z", "entitlementCollectionId": "Q5V1XGLZ", "entitlementOrigin": "Epic", "itemId": "mN8h4qoj", "itemSku": "b9glPF7p", "language": "CKCcdmno", "metadata": {"CrXK8bgO": {}, "SX7DRxhN": {}, "VdUG5kA4": {}}, "orderNo": "NLRVpto4", "origin": "Playstation", "quantity": 100, "region": "4coQTyLC", "source": "REWARD", "startDate": "1984-08-27T00:00:00Z", "storeId": "NhrLAbvT"}, {"duration": 11, "endDate": "1973-10-06T00:00:00Z", "entitlementCollectionId": "3dOwOweM", "entitlementOrigin": "Playstation", "itemId": "dUFSIvb9", "itemSku": "EZrYNyjm", "language": "0sbEIvzW", "metadata": {"HL1DqIMZ": {}, "dXfgNS1q": {}, "2T2rff8p": {}}, "orderNo": "vTSvb0a8", "origin": "Nintendo", "quantity": 58, "region": "7q9tJHWd", "source": "REFERRAL_BONUS", "startDate": "1997-04-28T00:00:00Z", "storeId": "SxGZVZYf"}, {"duration": 21, "endDate": "1984-07-03T00:00:00Z", "entitlementCollectionId": "ZWNSAv6P", "entitlementOrigin": "Steam", "itemId": "ik3MIKcM", "itemSku": "zt1yIkdM", "language": "KhG9rTks", "metadata": {"bWuEHXnT": {}, "p0jHUmBG": {}, "Yas615lh": {}}, "orderNo": "8q59Ht9Q", "origin": "Other", "quantity": 13, "region": "4qNNAjhD", "source": "OTHER", "startDate": "1982-06-07T00:00:00Z", "storeId": "TcU68Lzb"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op FulfillItemsV3 \
    --namespace $AB_NAMESPACE \
    --transactionId 'aGW6PsEo' \
    --userId 'd420KlAy' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 497 'FulfillItemsV3' test.out

#- 498 RetryFulfillItemsV3
$CLI_EXE \
    --sn platform \
    --op RetryFulfillItemsV3 \
    --namespace $AB_NAMESPACE \
    --transactionId 'TyldkLeV' \
    --userId 'QGV7l5wJ' \
    > test.out 2>&1
eval_tap $? 498 'RetryFulfillItemsV3' test.out

#- 499 RevokeItemsV3
$CLI_EXE \
    --sn platform \
    --op RevokeItemsV3 \
    --namespace $AB_NAMESPACE \
    --transactionId '9LSN97xM' \
    --userId '8LvkvbHq' \
    > test.out 2>&1
eval_tap $? 499 'RevokeItemsV3' test.out


# remove artifacts
rm -f "$CLI_TOKEN_FILE"
rm -f "$TEMP_JSON_INPUT"
rm -f "$TEMP_FILE_UPLOAD"

exit $EXIT_CODE