#!/usr/bin/env bash

# Copyright (c) 2021 AccelByte Inc. All Rights Reserved.
# This is licensed software from AccelByte Inc, for limitations
# and restrictions contact your company contract manager.

# This code is generated by tool. DO NOT EDIT.

# Meta:
# - random seed: 
# - template file: 

# Instructions:
# - Run the Justice SDK Mock Server first before running this script.

export AB_BASE_URL="http://127.0.0.1:8080"
export AB_CLIENT_ID="admin"
export AB_CLIENT_SECRET="admin"
export AB_NAMESPACE="test"
export AB_APP_NAME="UnitTest"

EXIT_CODE=0

eval_tap() {
  if [ $1 -eq 0 ]; then
    echo "ok $2 - $3"
  else
    EXIT_CODE=1
    echo "not ok $2 - $3"
    sed 's/^/# /g' $4
  fi
  rm -f $4
}

CLI_EXE="AccelByte.Sdk.Sample.Cli"
CLI_TOKEN_FILE="$(dirname "$(which $CLI_EXE)")/token.json"
TEMP_JSON_INPUT="input_json.json"
TEMP_FILE_UPLOAD="file_upload.bin"

echo "TAP version 13"
echo "1..420"

#- 1 Login
$CLI_EXE --op login --lt user --user user --pass user > test.out 2>&1
eval_tap $? 1 'Login' test.out

if [ $EXIT_CODE -ne 0 ]; then
  echo "Bail out! Login failed."
  exit $EXIT_CODE
fi

# echo "foo" > "$CLI_TOKEN_FILE"

#- 2 ListFulfillmentScripts
$CLI_EXE \
    --sn platform \
    --op ListFulfillmentScripts \
    > test.out 2>&1
eval_tap $? 2 'ListFulfillmentScripts' test.out

#- 3 TestFulfillmentScriptEval
# body param: body
echo '{"context": {"item": {"appId": "pxZKdSg1", "appType": "GAME", "baseAppId": "YW5cY3lQ", "boothName": "DB0h5S2p", "boundItemIds": ["mFJtJHTN", "CK7ABN95", "COsQT9AH"], "categoryPath": "QxFo4bt1", "clazz": "WnP0Mx6Y", "createdAt": "1995-06-09T00:00:00Z", "description": "Fc9FN3S8", "displayOrder": 21, "entitlementType": "CONSUMABLE", "ext": {"Yh5Xc1R4": {}, "eLzt42dT": {}, "uqlLxzER": {}}, "features": ["zccE8vPp", "7OYgOOvV", "wlXAdxyQ"], "fresh": false, "images": [{"as": "IaNWEqcY", "caption": "HVe7wFwq", "height": 89, "imageUrl": "dQdMhVW5", "smallImageUrl": "tdXawj9V", "width": 0}, {"as": "nhga70pn", "caption": "k0fSSae1", "height": 31, "imageUrl": "z7YN6i3C", "smallImageUrl": "z2wTZOb1", "width": 30}, {"as": "e05bkuxV", "caption": "DWc1Eu3i", "height": 62, "imageUrl": "RFqGaFJu", "smallImageUrl": "I1ut7UeX", "width": 25}], "itemId": "r7GakVmJ", "itemIds": ["ET8KgjZ4", "TQc967px", "Af7LYj3e"], "itemQty": {"MuTA5EEr": 26, "Y6nAarDE": 71, "4Wk99msi": 61}, "itemType": "CODE", "language": "IXHPBEsN", "listable": false, "localExt": {"DAzbLSHp": {}, "G4knx2JZ": {}, "WxDZuEAx": {}}, "longDescription": "ZK4vPDE9", "lootBoxConfig": {"rewardCount": 20, "rewards": [{"lootBoxItems": [{"count": 20, "duration": 40, "endDate": "1977-03-03T00:00:00Z", "itemId": "uDoHxkbB", "itemSku": "ecEh8QgZ", "itemType": "SP7okzfh"}, {"count": 76, "duration": 94, "endDate": "1975-02-28T00:00:00Z", "itemId": "fo0GP7Uv", "itemSku": "wiv3iLHC", "itemType": "tcmeSuDc"}, {"count": 17, "duration": 34, "endDate": "1984-04-16T00:00:00Z", "itemId": "c0XWWbDO", "itemSku": "ayA1yyIC", "itemType": "e75tXXkr"}], "name": "0vs1Sium", "odds": 0.4532563729905146, "type": "REWARD", "weight": 59}, {"lootBoxItems": [{"count": 54, "duration": 37, "endDate": "1993-11-01T00:00:00Z", "itemId": "qr4SGPDg", "itemSku": "sYnmjNWa", "itemType": "ixiNJi1Y"}, {"count": 28, "duration": 57, "endDate": "1987-10-29T00:00:00Z", "itemId": "6YcAZ7VS", "itemSku": "LlWIYdJm", "itemType": "u8UWkztF"}, {"count": 21, "duration": 32, "endDate": "1997-09-29T00:00:00Z", "itemId": "hwRaDXzy", "itemSku": "5ZSvAvpG", "itemType": "rI9iqxjH"}], "name": "TNt7xGF6", "odds": 0.9089318491476053, "type": "REWARD", "weight": 35}, {"lootBoxItems": [{"count": 32, "duration": 65, "endDate": "1999-10-31T00:00:00Z", "itemId": "q41jvitQ", "itemSku": "yFoAYorr", "itemType": "HvAPkHt5"}, {"count": 57, "duration": 53, "endDate": "1985-10-19T00:00:00Z", "itemId": "HT53FxkB", "itemSku": "2GsypAgN", "itemType": "MXBKBgos"}, {"count": 52, "duration": 79, "endDate": "1991-01-16T00:00:00Z", "itemId": "OdZas4Ml", "itemSku": "zNGpuD30", "itemType": "Mu0wmOBa"}], "name": "0HufKiqT", "odds": 0.16245056652508538, "type": "REWARD_GROUP", "weight": 22}], "rollFunction": "DEFAULT"}, "maxCount": 42, "maxCountPerUser": 1, "name": "jpG4ML0Q", "namespace": "KTEGwhv1", "optionBoxConfig": {"boxItems": [{"count": 40, "duration": 55, "endDate": "1998-12-25T00:00:00Z", "itemId": "nhoBle1A", "itemSku": "X0iEthd2", "itemType": "yvXd6m6D"}, {"count": 73, "duration": 80, "endDate": "1999-04-16T00:00:00Z", "itemId": "qgEfMs6C", "itemSku": "URI9wjWL", "itemType": "NosDmOn9"}, {"count": 48, "duration": 65, "endDate": "1979-09-24T00:00:00Z", "itemId": "Q95VznRk", "itemSku": "AQ2qgqwQ", "itemType": "9xraMSd4"}]}, "purchasable": true, "purchaseCondition": {"conditionGroups": [{"operator": "and", "predicates": [{"anyOf": 69, "comparison": "isLessThan", "name": "5ZjYzxkV", "predicateType": "SeasonTierPredicate", "value": "bGQ1yUFt", "values": ["LrgWOh4V", "1otUXlXw", "RCoyuh8R"]}, {"anyOf": 19, "comparison": "excludes", "name": "u6etZbel", "predicateType": "SeasonPassPredicate", "value": "4DZv3yvO", "values": ["PbjnIusA", "ho3139qI", "CBUVXUjk"]}, {"anyOf": 73, "comparison": "includes", "name": "7epWhy7W", "predicateType": "SeasonPassPredicate", "value": "YyPcbSUK", "values": ["LjDoRehW", "aOhiv11r", "IWmnl7XV"]}]}, {"operator": "or", "predicates": [{"anyOf": 46, "comparison": "isLessThanOrEqual", "name": "JLNLmV96", "predicateType": "SeasonTierPredicate", "value": "WZUhDOL6", "values": ["32yubEmw", "GNR3ImdB", "JUwKdElR"]}, {"anyOf": 16, "comparison": "is", "name": "z0UttTXz", "predicateType": "SeasonPassPredicate", "value": "NlGcWsB7", "values": ["J5hoL2bU", "fTqjOpyX", "JIaDEAQN"]}, {"anyOf": 64, "comparison": "includes", "name": "QyhsyBAc", "predicateType": "EntitlementPredicate", "value": "T0bsv9S9", "values": ["SmbOMg1L", "1ZYLEw7q", "oMKYgaP1"]}]}, {"operator": "or", "predicates": [{"anyOf": 12, "comparison": "isNot", "name": "VEfwZGb1", "predicateType": "SeasonTierPredicate", "value": "A87ITGCO", "values": ["rtJGhqPd", "01O6FlQO", "nWM1Vfg9"]}, {"anyOf": 10, "comparison": "isLessThan", "name": "HcsOlJTc", "predicateType": "EntitlementPredicate", "value": "I4xRP6Vj", "values": ["ZUCLlsJR", "xneVQjkW", "JTmCQHHi"]}, {"anyOf": 31, "comparison": "isLessThan", "name": "7euDLNr2", "predicateType": "SeasonPassPredicate", "value": "SPdYneP2", "values": ["Gzttag0n", "JBtXVqeo", "pc7DPtms"]}]}]}, "recurring": {"cycle": "MONTHLY", "fixedFreeDays": 92, "fixedTrialCycles": 85, "graceDays": 82}, "region": "VEQpGS3E", "regionData": [{"currencyCode": "JXoMBB5o", "currencyNamespace": "GsZAFkKq", "currencyType": "VIRTUAL", "discountAmount": 10, "discountExpireAt": "1995-10-20T00:00:00Z", "discountPercentage": 91, "discountPurchaseAt": "1994-05-02T00:00:00Z", "discountedPrice": 10, "expireAt": "1978-11-08T00:00:00Z", "price": 13, "purchaseAt": "1984-07-10T00:00:00Z", "trialPrice": 96}, {"currencyCode": "QjVsxJo6", "currencyNamespace": "0r0zuL16", "currencyType": "VIRTUAL", "discountAmount": 62, "discountExpireAt": "1990-12-25T00:00:00Z", "discountPercentage": 81, "discountPurchaseAt": "1979-02-26T00:00:00Z", "discountedPrice": 79, "expireAt": "1983-12-18T00:00:00Z", "price": 60, "purchaseAt": "1986-06-13T00:00:00Z", "trialPrice": 73}, {"currencyCode": "4XHAzbaE", "currencyNamespace": "CbDm5KOL", "currencyType": "REAL", "discountAmount": 11, "discountExpireAt": "1985-08-05T00:00:00Z", "discountPercentage": 59, "discountPurchaseAt": "1979-01-21T00:00:00Z", "discountedPrice": 13, "expireAt": "1995-05-09T00:00:00Z", "price": 72, "purchaseAt": "1982-12-12T00:00:00Z", "trialPrice": 62}], "saleConfig": {"currencyCode": "YltS18A1", "price": 67}, "seasonType": "PASS", "sectionExclusive": true, "sellable": false, "sku": "Wylf1WQK", "stackable": false, "status": "ACTIVE", "tags": ["RhjJK3bW", "QwwuF4hl", "NLJaJ96p"], "targetCurrencyCode": "yGUD4SKf", "targetItemId": "M716PFoM", "targetNamespace": "oUOaMiRv", "thumbnailUrl": "ufft5mlJ", "title": "XBUwpy9B", "updatedAt": "1999-09-21T00:00:00Z", "useCount": 96}, "namespace": "av2oTyFA", "order": {"currency": {"currencyCode": "tXzlFd51", "currencySymbol": "ZO33qkIW", "currencyType": "VIRTUAL", "decimals": 20, "namespace": "pfa2W2ja"}, "ext": {"ccfaOXek": {}, "zkmUkMKM": {}, "Do3grRAm": {}}, "free": true}, "source": "PROMOTION"}, "script": "Q9t4B1XS", "type": "grantDays"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestFulfillmentScriptEval \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 3 'TestFulfillmentScriptEval' test.out

#- 4 GetFulfillmentScript
$CLI_EXE \
    --sn platform \
    --op GetFulfillmentScript \
    --id '7RpceypO' \
    > test.out 2>&1
eval_tap $? 4 'GetFulfillmentScript' test.out

#- 5 CreateFulfillmentScript
# body param: body
echo '{"grantDays": "rotwWlq5"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateFulfillmentScript \
    --id 'c2kl8lIH' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 5 'CreateFulfillmentScript' test.out

#- 6 DeleteFulfillmentScript
$CLI_EXE \
    --sn platform \
    --op DeleteFulfillmentScript \
    --id '0sYrYhp8' \
    > test.out 2>&1
eval_tap $? 6 'DeleteFulfillmentScript' test.out

#- 7 UpdateFulfillmentScript
# body param: body
echo '{"grantDays": "0aPcVWDi"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateFulfillmentScript \
    --id 'p9bu9so2' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 7 'UpdateFulfillmentScript' test.out

#- 8 ListItemTypeConfigs
$CLI_EXE \
    --sn platform \
    --op ListItemTypeConfigs \
    > test.out 2>&1
eval_tap $? 8 'ListItemTypeConfigs' test.out

#- 9 CreateItemTypeConfig
# body param: body
echo '{"clazz": "7JDx64ze", "dryRun": false, "fulfillmentUrl": "IkMbK1NQ", "itemType": "COINS", "purchaseConditionUrl": "l2I6QfQs"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateItemTypeConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 9 'CreateItemTypeConfig' test.out

#- 10 SearchItemTypeConfig
$CLI_EXE \
    --sn platform \
    --op SearchItemTypeConfig \
    --clazz 'q1EUMvWW' \
    --itemType 'SEASON' \
    > test.out 2>&1
eval_tap $? 10 'SearchItemTypeConfig' test.out

#- 11 GetItemTypeConfig
$CLI_EXE \
    --sn platform \
    --op GetItemTypeConfig \
    --id 'g7K41ayi' \
    > test.out 2>&1
eval_tap $? 11 'GetItemTypeConfig' test.out

#- 12 UpdateItemTypeConfig
# body param: body
echo '{"clazz": "KVL33UAw", "dryRun": true, "fulfillmentUrl": "cMEfxaX8", "purchaseConditionUrl": "1TvEsQL1"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateItemTypeConfig \
    --id '9oHzhPE7' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 12 'UpdateItemTypeConfig' test.out

#- 13 DeleteItemTypeConfig
$CLI_EXE \
    --sn platform \
    --op DeleteItemTypeConfig \
    --id 'lw9zwc6A' \
    > test.out 2>&1
eval_tap $? 13 'DeleteItemTypeConfig' test.out

#- 14 QueryCampaigns
$CLI_EXE \
    --sn platform \
    --op QueryCampaigns \
    --namespace $AB_NAMESPACE \
    --limit '77' \
    --name '0c4dg82S' \
    --offset '90' \
    --tag 'j9Q2iBlp' \
    > test.out 2>&1
eval_tap $? 14 'QueryCampaigns' test.out

#- 15 CreateCampaign
# body param: body
echo '{"description": "uLzJkIoG", "items": [{"extraSubscriptionDays": 91, "itemId": "VTPfkJLu", "itemName": "HlJCvCXE", "quantity": 72}, {"extraSubscriptionDays": 27, "itemId": "WZinoSNm", "itemName": "kWMOW2vg", "quantity": 52}, {"extraSubscriptionDays": 43, "itemId": "ARYeI3OA", "itemName": "fSym2Wko", "quantity": 34}], "maxRedeemCountPerCampaignPerUser": 22, "maxRedeemCountPerCode": 73, "maxRedeemCountPerCodePerUser": 76, "maxSaleCount": 93, "name": "Z4NuChud", "redeemEnd": "1998-04-01T00:00:00Z", "redeemStart": "1999-08-20T00:00:00Z", "redeemType": "ITEM", "status": "INACTIVE", "tags": ["IipGIn2x", "32ErNzAs", "SI4quSxr"], "type": "REDEMPTION"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCampaign \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 15 'CreateCampaign' test.out

#- 16 GetCampaign
$CLI_EXE \
    --sn platform \
    --op GetCampaign \
    --campaignId 'Oel9834X' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 16 'GetCampaign' test.out

#- 17 UpdateCampaign
# body param: body
echo '{"description": "r4i83391", "items": [{"extraSubscriptionDays": 90, "itemId": "TSQvxYNF", "itemName": "rmpsbdAi", "quantity": 20}, {"extraSubscriptionDays": 73, "itemId": "REIS1ObV", "itemName": "JgCpfTHF", "quantity": 88}, {"extraSubscriptionDays": 89, "itemId": "GYfG3dB2", "itemName": "nZm1Noqg", "quantity": 7}], "maxRedeemCountPerCampaignPerUser": 43, "maxRedeemCountPerCode": 27, "maxRedeemCountPerCodePerUser": 13, "maxSaleCount": 21, "name": "1s6Oqmxl", "redeemEnd": "1987-09-28T00:00:00Z", "redeemStart": "1990-06-09T00:00:00Z", "redeemType": "ITEM", "status": "INACTIVE", "tags": ["fWVvi9wo", "mS7yWIJ4", "8ZR2UCN0"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCampaign \
    --campaignId 'KUi77L6e' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 17 'UpdateCampaign' test.out

#- 18 GetCampaignDynamic
$CLI_EXE \
    --sn platform \
    --op GetCampaignDynamic \
    --campaignId 'dOTARODh' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 18 'GetCampaignDynamic' test.out

#- 19 GetLootBoxPluginConfig
$CLI_EXE \
    --sn platform \
    --op GetLootBoxPluginConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 19 'GetLootBoxPluginConfig' test.out

#- 20 UpdateLootBoxPluginConfig
# body param: body
echo '{"appConfig": {"appName": "hmajsaK9"}, "customConfig": {"connectionType": "INSECURE", "grpcServerAddress": "GMogA6AN"}, "extendType": "APP"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateLootBoxPluginConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 20 'UpdateLootBoxPluginConfig' test.out

#- 21 DeleteLootBoxPluginConfig
$CLI_EXE \
    --sn platform \
    --op DeleteLootBoxPluginConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 21 'DeleteLootBoxPluginConfig' test.out

#- 22 UplodLootBoxPluginConfigCert
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UplodLootBoxPluginConfigCert \
    --namespace $AB_NAMESPACE \
    --upload $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 22 'UplodLootBoxPluginConfigCert' test.out

#- 23 GetLootBoxGrpcInfo
$CLI_EXE \
    --sn platform \
    --op GetLootBoxGrpcInfo \
    --namespace $AB_NAMESPACE \
    --force 'false' \
    > test.out 2>&1
eval_tap $? 23 'GetLootBoxGrpcInfo' test.out

#- 24 GetSectionPluginConfig
$CLI_EXE \
    --sn platform \
    --op GetSectionPluginConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 24 'GetSectionPluginConfig' test.out

#- 25 UpdateSectionPluginConfig
# body param: body
echo '{"appConfig": {"appName": "b47bmW8T"}, "customConfig": {"connectionType": "INSECURE", "grpcServerAddress": "iUfTZddb"}, "extendType": "CUSTOM"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateSectionPluginConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 25 'UpdateSectionPluginConfig' test.out

#- 26 DeleteSectionPluginConfig
$CLI_EXE \
    --sn platform \
    --op DeleteSectionPluginConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 26 'DeleteSectionPluginConfig' test.out

#- 27 UploadSectionPluginConfigCert
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UploadSectionPluginConfigCert \
    --namespace $AB_NAMESPACE \
    --upload $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 27 'UploadSectionPluginConfigCert' test.out

#- 28 GetRootCategories
$CLI_EXE \
    --sn platform \
    --op GetRootCategories \
    --namespace $AB_NAMESPACE \
    --storeId 'nVPCIlNf' \
    > test.out 2>&1
eval_tap $? 28 'GetRootCategories' test.out

#- 29 CreateCategory
# body param: body
echo '{"categoryPath": "BKFZ69Ld", "localizationDisplayNames": {"cpsIuYud": "8SAkkc9r", "J6iYSrZ3": "UmH8w1E0", "gLq0vZU6": "R8KK2DsI"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCategory \
    --namespace $AB_NAMESPACE \
    --storeId 'qLA0H54j' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 29 'CreateCategory' test.out

#- 30 ListCategoriesBasic
$CLI_EXE \
    --sn platform \
    --op ListCategoriesBasic \
    --namespace $AB_NAMESPACE \
    --storeId 'YZWQbiNp' \
    > test.out 2>&1
eval_tap $? 30 'ListCategoriesBasic' test.out

#- 31 GetCategory
$CLI_EXE \
    --sn platform \
    --op GetCategory \
    --categoryPath 'zAKqmHq8' \
    --namespace $AB_NAMESPACE \
    --storeId 'NdZoPfxg' \
    > test.out 2>&1
eval_tap $? 31 'GetCategory' test.out

#- 32 UpdateCategory
# body param: body
echo '{"localizationDisplayNames": {"SqO2tQNs": "Y0jys3gA", "EPOldnBd": "u6INTKT4", "Ju7SkzDT": "phqAV2fi"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCategory \
    --categoryPath 'uQocJFEP' \
    --namespace $AB_NAMESPACE \
    --storeId 'YgHymbFR' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 32 'UpdateCategory' test.out

#- 33 DeleteCategory
$CLI_EXE \
    --sn platform \
    --op DeleteCategory \
    --categoryPath '1UDzC81z' \
    --namespace $AB_NAMESPACE \
    --storeId 'OwfjQsn1' \
    > test.out 2>&1
eval_tap $? 33 'DeleteCategory' test.out

#- 34 GetChildCategories
$CLI_EXE \
    --sn platform \
    --op GetChildCategories \
    --categoryPath 'OxvpQ9uJ' \
    --namespace $AB_NAMESPACE \
    --storeId '31ETGDz0' \
    > test.out 2>&1
eval_tap $? 34 'GetChildCategories' test.out

#- 35 GetDescendantCategories
$CLI_EXE \
    --sn platform \
    --op GetDescendantCategories \
    --categoryPath '3x3Zkb1O' \
    --namespace $AB_NAMESPACE \
    --storeId 'xuDzfYlR' \
    > test.out 2>&1
eval_tap $? 35 'GetDescendantCategories' test.out

#- 36 QueryCodes
$CLI_EXE \
    --sn platform \
    --op QueryCodes \
    --campaignId 'njsScyCM' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --batchNo '56' \
    --code 'Vg9mfjFr' \
    --limit '75' \
    --offset '3' \
    > test.out 2>&1
eval_tap $? 36 'QueryCodes' test.out

#- 37 CreateCodes
# body param: body
echo '{"quantity": 84}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCodes \
    --campaignId 'BTWQWhk2' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 37 'CreateCodes' test.out

#- 38 Download
$CLI_EXE \
    --sn platform \
    --op Download \
    --campaignId 'Md5PUerp' \
    --namespace $AB_NAMESPACE \
    --batchNo '42' \
    > test.out 2>&1
eval_tap $? 38 'Download' test.out

#- 39 BulkDisableCodes
$CLI_EXE \
    --sn platform \
    --op BulkDisableCodes \
    --campaignId 'FaQvtnsM' \
    --namespace $AB_NAMESPACE \
    --batchNo '76' \
    > test.out 2>&1
eval_tap $? 39 'BulkDisableCodes' test.out

#- 40 BulkEnableCodes
$CLI_EXE \
    --sn platform \
    --op BulkEnableCodes \
    --campaignId 'kWB2ByoP' \
    --namespace $AB_NAMESPACE \
    --batchNo '24' \
    > test.out 2>&1
eval_tap $? 40 'BulkEnableCodes' test.out

#- 41 QueryRedeemHistory
$CLI_EXE \
    --sn platform \
    --op QueryRedeemHistory \
    --campaignId 'Ew10OGve' \
    --namespace $AB_NAMESPACE \
    --code 'KBjUFTop' \
    --limit '25' \
    --offset '94' \
    --userId '5HtODKk9' \
    > test.out 2>&1
eval_tap $? 41 'QueryRedeemHistory' test.out

#- 42 GetCode
$CLI_EXE \
    --sn platform \
    --op GetCode \
    --code 'G9G2rf97' \
    --namespace $AB_NAMESPACE \
    --redeemable 'false' \
    > test.out 2>&1
eval_tap $? 42 'GetCode' test.out

#- 43 DisableCode
$CLI_EXE \
    --sn platform \
    --op DisableCode \
    --code 'U9kJZ03Z' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 43 'DisableCode' test.out

#- 44 EnableCode
$CLI_EXE \
    --sn platform \
    --op EnableCode \
    --code 'PYkCjzzu' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 44 'EnableCode' test.out

#- 45 GetServicePluginConfig
eval_tap 0 45 'GetServicePluginConfig # SKIP deprecated' test.out

#- 46 UpdateServicePluginConfig
eval_tap 0 46 'UpdateServicePluginConfig # SKIP deprecated' test.out

#- 47 DeleteServicePluginConfig
eval_tap 0 47 'DeleteServicePluginConfig # SKIP deprecated' test.out

#- 48 ListCurrencies
$CLI_EXE \
    --sn platform \
    --op ListCurrencies \
    --namespace $AB_NAMESPACE \
    --currencyType 'REAL' \
    > test.out 2>&1
eval_tap $? 48 'ListCurrencies' test.out

#- 49 CreateCurrency
# body param: body
echo '{"currencyCode": "wK2FEgyv", "currencySymbol": "kaKdpnQ5", "currencyType": "REAL", "decimals": 21, "localizationDescriptions": {"R1oW86zD": "4bO8fMgM", "5b7HKLJZ": "Qmh4dBYw", "hRKsxEG0": "A7rd0aQP"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCurrency \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 49 'CreateCurrency' test.out

#- 50 UpdateCurrency
# body param: body
echo '{"localizationDescriptions": {"K71ODgcQ": "RZH5WhOp", "BtMD3VZG": "QuXJc73n", "AkM2Ey6A": "PObKdbae"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCurrency \
    --currencyCode 'iByISxY0' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 50 'UpdateCurrency' test.out

#- 51 DeleteCurrency
$CLI_EXE \
    --sn platform \
    --op DeleteCurrency \
    --currencyCode 'BZQeXfpz' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 51 'DeleteCurrency' test.out

#- 52 GetCurrencyConfig
$CLI_EXE \
    --sn platform \
    --op GetCurrencyConfig \
    --currencyCode '7hi7fwfd' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 52 'GetCurrencyConfig' test.out

#- 53 GetCurrencySummary
$CLI_EXE \
    --sn platform \
    --op GetCurrencySummary \
    --currencyCode 'VvCa6c6D' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 53 'GetCurrencySummary' test.out

#- 54 GetDLCItemConfig
$CLI_EXE \
    --sn platform \
    --op GetDLCItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 54 'GetDLCItemConfig' test.out

#- 55 UpdateDLCItemConfig
# body param: body
echo '{"data": [{"id": "xPDAZPve", "rewards": [{"currency": {"currencyCode": "CnRjAD5M", "namespace": "kZkNHmdh"}, "item": {"itemId": "2qPgsmE1", "itemSku": "kmNvaD68", "itemType": "onViTWGz"}, "quantity": 93, "type": "ITEM"}, {"currency": {"currencyCode": "YWygdSTp", "namespace": "SlGJtU0B"}, "item": {"itemId": "0ZVphVJ2", "itemSku": "o99EbcbC", "itemType": "dELFFQIt"}, "quantity": 27, "type": "CURRENCY"}, {"currency": {"currencyCode": "Zb7P3pmQ", "namespace": "5xL2wofW"}, "item": {"itemId": "MclufYPD", "itemSku": "g28aDll3", "itemType": "C0sB5DMc"}, "quantity": 46, "type": "CURRENCY"}]}, {"id": "cMluFbg5", "rewards": [{"currency": {"currencyCode": "bKC6Fs3I", "namespace": "9MTTA0fV"}, "item": {"itemId": "nHrsYS8L", "itemSku": "LnOhfTIe", "itemType": "oOhTTk8g"}, "quantity": 99, "type": "ITEM"}, {"currency": {"currencyCode": "ilMTnfto", "namespace": "4qSfLOIM"}, "item": {"itemId": "lKmVULAS", "itemSku": "FBDGTU1m", "itemType": "CKF32PnN"}, "quantity": 47, "type": "ITEM"}, {"currency": {"currencyCode": "4VSaMiY9", "namespace": "X7xMMSnh"}, "item": {"itemId": "Ycm5LYAx", "itemSku": "xK5l2JEg", "itemType": "lH6Kydyy"}, "quantity": 24, "type": "CURRENCY"}]}, {"id": "AsVRNWK3", "rewards": [{"currency": {"currencyCode": "W7QyavKA", "namespace": "ZqvFGDbJ"}, "item": {"itemId": "kJ85vQdA", "itemSku": "sdmFy20W", "itemType": "zPhwgC2e"}, "quantity": 73, "type": "ITEM"}, {"currency": {"currencyCode": "WaR1QLku", "namespace": "LKjLmauH"}, "item": {"itemId": "1noC4JKy", "itemSku": "z9NtL8fe", "itemType": "zN3OXAgd"}, "quantity": 93, "type": "CURRENCY"}, {"currency": {"currencyCode": "oYjuLr7Q", "namespace": "TuUKNNT1"}, "item": {"itemId": "GMUbYhvm", "itemSku": "Rreeif4b", "itemType": "a9qGZkgK"}, "quantity": 40, "type": "CURRENCY"}]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateDLCItemConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 55 'UpdateDLCItemConfig' test.out

#- 56 DeleteDLCItemConfig
$CLI_EXE \
    --sn platform \
    --op DeleteDLCItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 56 'DeleteDLCItemConfig' test.out

#- 57 GetPlatformDLCConfig
$CLI_EXE \
    --sn platform \
    --op GetPlatformDLCConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 57 'GetPlatformDLCConfig' test.out

#- 58 UpdatePlatformDLCConfig
# body param: body
echo '{"data": [{"platform": "XBOX", "platformDlcIdMap": {"jV5OfxlP": "1jcEIpDu", "f6J4SvfO": "4SSslIFi", "LJKRuZW4": "qVuCUfCm"}}, {"platform": "XBOX", "platformDlcIdMap": {"fU1yXUch": "pCoFYURT", "hGWLPNGE": "eoBGah5R", "wfP73Fuu": "6X755i5a"}}, {"platform": "PSN", "platformDlcIdMap": {"xxamM6oe": "ZklbnWMt", "moW3qNtS": "uXxeIJSf", "ae4GBiCS": "ZevwM2Fu"}}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePlatformDLCConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 58 'UpdatePlatformDLCConfig' test.out

#- 59 DeletePlatformDLCConfig
$CLI_EXE \
    --sn platform \
    --op DeletePlatformDLCConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 59 'DeletePlatformDLCConfig' test.out

#- 60 QueryEntitlements
$CLI_EXE \
    --sn platform \
    --op QueryEntitlements \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --appType 'SOFTWARE' \
    --entitlementClazz 'ENTITLEMENT' \
    --entitlementName 'tr6gcpav' \
    --itemId '["jMEguEBH", "CSa3U7v2", "lYNpJWNw"]' \
    --limit '89' \
    --offset '74' \
    --userId '4axgUEbl' \
    > test.out 2>&1
eval_tap $? 60 'QueryEntitlements' test.out

#- 61 QueryEntitlements1
$CLI_EXE \
    --sn platform \
    --op QueryEntitlements1 \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --itemIds '["6FYqiMoC", "GAorufBa", "MNACjUDH"]' \
    --limit '68' \
    --offset '37' \
    > test.out 2>&1
eval_tap $? 61 'QueryEntitlements1' test.out

#- 62 GrantEntitlements
# body param: body
echo '{"entitlementGrantList": [{"endDate": "1997-07-19T00:00:00Z", "grantedCode": "DUZOVken", "itemId": "3SN7FTVH", "itemNamespace": "C5NgHHYe", "language": "XFKR_yiAC", "quantity": 25, "region": "PAgLVYvS", "source": "ACHIEVEMENT", "startDate": "1993-06-04T00:00:00Z", "storeId": "FB6ow059"}, {"endDate": "1998-10-18T00:00:00Z", "grantedCode": "OoBHTp9z", "itemId": "fhUv72aX", "itemNamespace": "vWibzWKL", "language": "MYfh_krAM", "quantity": 63, "region": "cHTZNdkt", "source": "PROMOTION", "startDate": "1978-11-27T00:00:00Z", "storeId": "aBb6BeEO"}, {"endDate": "1996-05-21T00:00:00Z", "grantedCode": "nbKsNFRz", "itemId": "MllaaRhL", "itemNamespace": "0bUzjxXZ", "language": "IzH-730", "quantity": 27, "region": "fuN04GG4", "source": "GIFT", "startDate": "1992-03-31T00:00:00Z", "storeId": "zOfIiMgJ"}], "userIds": ["r31nNxdS", "3suo47Ss", "FPReFvON"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op GrantEntitlements \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 62 'GrantEntitlements' test.out

#- 63 RevokeEntitlements
# body param: body
echo '["OxDl8ljy", "bA8KMYku", "xr3O01t0"]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RevokeEntitlements \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 63 'RevokeEntitlements' test.out

#- 64 GetEntitlement
$CLI_EXE \
    --sn platform \
    --op GetEntitlement \
    --entitlementId 'BlD6ZJ7N' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 64 'GetEntitlement' test.out

#- 65 QueryFulfillmentHistories
$CLI_EXE \
    --sn platform \
    --op QueryFulfillmentHistories \
    --namespace $AB_NAMESPACE \
    --limit '92' \
    --offset '100' \
    --status 'SUCCESS' \
    --userId 'ySo3PMAV' \
    > test.out 2>&1
eval_tap $? 65 'QueryFulfillmentHistories' test.out

#- 66 QueryIAPClawbackHistory
$CLI_EXE \
    --sn platform \
    --op QueryIAPClawbackHistory \
    --namespace $AB_NAMESPACE \
    --endTime 'gCZH2Z73' \
    --eventType 'CHARGEBACK' \
    --externalOrderId 'B6iIHGMj' \
    --limit '97' \
    --offset '34' \
    --startTime 'WOJu0JJF' \
    --status 'FAIL' \
    --userId 'uyjrbqMK' \
    > test.out 2>&1
eval_tap $? 66 'QueryIAPClawbackHistory' test.out

#- 67 MockPlayStationStreamEvent
# body param: body
echo '{"body": {"account": "seDTgxxv", "additionalData": {"entitlement": [{"clientTransaction": [{"amountConsumed": 86, "clientTransactionId": "khG7rJH9"}, {"amountConsumed": 32, "clientTransactionId": "yiTWFbpk"}, {"amountConsumed": 3, "clientTransactionId": "PEhAl4iA"}], "entitlementId": "NK12akN7", "usageCount": 56}, {"clientTransaction": [{"amountConsumed": 61, "clientTransactionId": "d56eBmfO"}, {"amountConsumed": 72, "clientTransactionId": "RH4Bf1El"}, {"amountConsumed": 22, "clientTransactionId": "gpQmtR34"}], "entitlementId": "nNfJKAyM", "usageCount": 47}, {"clientTransaction": [{"amountConsumed": 32, "clientTransactionId": "jGoy2LWc"}, {"amountConsumed": 73, "clientTransactionId": "om7CjArv"}, {"amountConsumed": 94, "clientTransactionId": "eHH7Z1LJ"}], "entitlementId": "PmUKwgXj", "usageCount": 93}], "purpose": "4ZrjLAtE"}, "originalTitleName": "knxbudRg", "paymentProductSKU": "qkODcKJp", "purchaseDate": "l3ifHft3", "sourceOrderItemId": "6Tq24xXo", "titleName": "DSSgU9FQ"}, "eventDomain": "D5g5Zf8U", "eventSource": "h7sQCGSb", "eventType": "yyTkSQP6", "eventVersion": 92, "id": "lDtDpxzm", "timestamp": "02JmWLVb"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op MockPlayStationStreamEvent \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 67 'MockPlayStationStreamEvent' test.out

#- 68 GetAppleIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetAppleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 68 'GetAppleIAPConfig' test.out

#- 69 UpdateAppleIAPConfig
# body param: body
echo '{"bundleId": "wkjY2IxT", "password": "E1XB4mXj"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateAppleIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 69 'UpdateAppleIAPConfig' test.out

#- 70 DeleteAppleIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteAppleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 70 'DeleteAppleIAPConfig' test.out

#- 71 GetEpicGamesIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetEpicGamesIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 71 'GetEpicGamesIAPConfig' test.out

#- 72 UpdateEpicGamesIAPConfig
# body param: body
echo '{"sandboxId": "sWreLQjv"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateEpicGamesIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 72 'UpdateEpicGamesIAPConfig' test.out

#- 73 DeleteEpicGamesIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteEpicGamesIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 73 'DeleteEpicGamesIAPConfig' test.out

#- 74 GetGoogleIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetGoogleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 74 'GetGoogleIAPConfig' test.out

#- 75 UpdateGoogleIAPConfig
# body param: body
echo '{"applicationName": "5HqaLS1N", "serviceAccountId": "rQi25cWS"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateGoogleIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 75 'UpdateGoogleIAPConfig' test.out

#- 76 DeleteGoogleIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteGoogleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 76 'DeleteGoogleIAPConfig' test.out

#- 77 UpdateGoogleP12File
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UpdateGoogleP12File \
    --namespace $AB_NAMESPACE \
    --upload $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 77 'UpdateGoogleP12File' test.out

#- 78 GetIAPItemConfig
$CLI_EXE \
    --sn platform \
    --op GetIAPItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 78 'GetIAPItemConfig' test.out

#- 79 UpdateIAPItemConfig
# body param: body
echo '{"data": [{"itemIdentity": "9AxNfYeH", "itemIdentityType": "ITEM_ID", "platformProductIdMap": {"b1fEkOYy": "3AUdj52C", "izSebXwD": "zHMUKOgj", "KYDoPcpC": "S2b8H7lp"}}, {"itemIdentity": "cgIPV2YU", "itemIdentityType": "ITEM_ID", "platformProductIdMap": {"S110VQa8": "Xdja1cne", "lGXEebq2": "dABDWUnt", "BJ7AIV4g": "xVKBUwFA"}}, {"itemIdentity": "Lbh82TJD", "itemIdentityType": "ITEM_ID", "platformProductIdMap": {"GSgm4I9b": "NArokrKd", "6bChjOTA": "FYzq6gM3", "T8f9Q0XG": "m9fjsuFK"}}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateIAPItemConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 79 'UpdateIAPItemConfig' test.out

#- 80 DeleteIAPItemConfig
$CLI_EXE \
    --sn platform \
    --op DeleteIAPItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 80 'DeleteIAPItemConfig' test.out

#- 81 GetOculusIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetOculusIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 81 'GetOculusIAPConfig' test.out

#- 82 UpdateOculusIAPConfig
# body param: body
echo '{"appId": "4H6jYZbV", "appSecret": "h3LroRyv"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateOculusIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 82 'UpdateOculusIAPConfig' test.out

#- 83 DeleteOculusIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteOculusIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 83 'DeleteOculusIAPConfig' test.out

#- 84 GetPlayStationIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetPlayStationIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 84 'GetPlayStationIAPConfig' test.out

#- 85 UpdatePlaystationIAPConfig
# body param: body
echo '{"backOfficeServerClientId": "PlAvXUWK", "backOfficeServerClientSecret": "0rs36qxv", "enableStreamJob": false, "environment": "IVsW9XKz", "streamName": "KBHc3Rka", "streamPartnerName": "pBPunI5m"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePlaystationIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 85 'UpdatePlaystationIAPConfig' test.out

#- 86 DeletePlaystationIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeletePlaystationIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 86 'DeletePlaystationIAPConfig' test.out

#- 87 ValidateExistedPlaystationIAPConfig
$CLI_EXE \
    --sn platform \
    --op ValidateExistedPlaystationIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 87 'ValidateExistedPlaystationIAPConfig' test.out

#- 88 ValidatePlaystationIAPConfig
# body param: body
echo '{"backOfficeServerClientId": "6WtLCqWD", "backOfficeServerClientSecret": "Lunxd3xV", "enableStreamJob": true, "environment": "dtL0C9AA", "streamName": "VZWNUmco", "streamPartnerName": "RJhviolJ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ValidatePlaystationIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 88 'ValidatePlaystationIAPConfig' test.out

#- 89 GetSteamIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetSteamIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 89 'GetSteamIAPConfig' test.out

#- 90 UpdateSteamIAPConfig
# body param: body
echo '{"appId": "QPacbIEF", "publisherAuthenticationKey": "3lao8i4R"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateSteamIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 90 'UpdateSteamIAPConfig' test.out

#- 91 DeleteSteamIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteSteamIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 91 'DeleteSteamIAPConfig' test.out

#- 92 GetTwitchIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetTwitchIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 92 'GetTwitchIAPConfig' test.out

#- 93 UpdateTwitchIAPConfig
# body param: body
echo '{"clientId": "5Z0Qu1wo", "clientSecret": "G1qTCGru", "organizationId": "QO7qTkOX"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateTwitchIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 93 'UpdateTwitchIAPConfig' test.out

#- 94 DeleteTwitchIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteTwitchIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 94 'DeleteTwitchIAPConfig' test.out

#- 95 GetXblIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetXblIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 95 'GetXblIAPConfig' test.out

#- 96 UpdateXblIAPConfig
# body param: body
echo '{"relyingPartyCert": "4nR1m3sH"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXblIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 96 'UpdateXblIAPConfig' test.out

#- 97 DeleteXblAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteXblAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 97 'DeleteXblAPConfig' test.out

#- 98 UpdateXblBPCertFile
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UpdateXblBPCertFile \
    --namespace $AB_NAMESPACE \
    --upload $TEMP_FILE_UPLOAD \
    --password 'E5Uj4ye2' \
    > test.out 2>&1
eval_tap $? 98 'UpdateXblBPCertFile' test.out

#- 99 DownloadInvoiceDetails
$CLI_EXE \
    --sn platform \
    --op DownloadInvoiceDetails \
    --namespace $AB_NAMESPACE \
    --feature 'd2gWPpVf' \
    --itemId 'PJ6QNvWX' \
    --itemType 'COINS' \
    --endTime 'I1zjp2l2' \
    --startTime 'x3NTYrQN' \
    > test.out 2>&1
eval_tap $? 99 'DownloadInvoiceDetails' test.out

#- 100 GenerateInvoiceSummary
$CLI_EXE \
    --sn platform \
    --op GenerateInvoiceSummary \
    --namespace $AB_NAMESPACE \
    --feature 'su0olviv' \
    --itemId 'UN9WSjOP' \
    --itemType 'SEASON' \
    --endTime 'Q7aLPmUe' \
    --startTime 'dpw8B4nZ' \
    > test.out 2>&1
eval_tap $? 100 'GenerateInvoiceSummary' test.out

#- 101 SyncInGameItem
# body param: body
echo '{"categoryPath": "gMw1599n", "targetItemId": "b1dzT4UU", "targetNamespace": "qIGsxB1B"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncInGameItem \
    --namespace $AB_NAMESPACE \
    --storeId 'AbCU1Xif' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 101 'SyncInGameItem' test.out

#- 102 CreateItem
# body param: body
echo '{"appId": "jhjGUKJ1", "appType": "DEMO", "baseAppId": "2DsfZThP", "boothName": "dSa5Coz6", "categoryPath": "ve2ecU2Y", "clazz": "osaPzZ21", "displayOrder": 57, "entitlementType": "DURABLE", "ext": {"CfQ0XAqb": {}, "LVOl5YW6": {}, "KU8SHwwC": {}}, "features": ["KjNfGtU3", "yA0r10Wn", "KUSOvBOC"], "images": [{"as": "8y0WO2SY", "caption": "VdhCGp2u", "height": 14, "imageUrl": "eYudUDxM", "smallImageUrl": "lE39Kfc5", "width": 84}, {"as": "sxb63PK8", "caption": "5F6xmhkE", "height": 98, "imageUrl": "dBXi5pdL", "smallImageUrl": "VqqFdZ21", "width": 34}, {"as": "ZyMdt0Ba", "caption": "Aa2yKjkH", "height": 18, "imageUrl": "0lAndTTc", "smallImageUrl": "9lVXZ2w9", "width": 14}], "itemIds": ["vjoLFqNj", "DV2ZrISn", "WEcvtL42"], "itemQty": {"pDbNPem9": 90, "CqJ68ydg": 6, "3Cn9914W": 68}, "itemType": "EXTENSION", "listable": false, "localizations": {"UrLGfLb7": {"description": "kIEoafup", "localExt": {"Z9HIQfGx": {}, "cX1rpqO5": {}, "DrVEkzNQ": {}}, "longDescription": "Rl0GRj9Q", "title": "p8jt2lYJ"}, "Kf5ko5Gy": {"description": "w2MbGOmN", "localExt": {"mJTwM49y": {}, "IYZUI1Po": {}, "SWZxl6Za": {}}, "longDescription": "n8DMd0lu", "title": "Am23J4Ah"}, "Tgrtv0bT": {"description": "c6fFIIPq", "localExt": {"IBmrZqWY": {}, "xIdSdBm8": {}, "AZtqioq8": {}}, "longDescription": "BCChodCf", "title": "brcssLI4"}}, "lootBoxConfig": {"rewardCount": 84, "rewards": [{"lootBoxItems": [{"count": 70, "duration": 45, "endDate": "1987-05-21T00:00:00Z", "itemId": "dEcBpCWc", "itemSku": "8XNRMxyN", "itemType": "mty67qnQ"}, {"count": 93, "duration": 57, "endDate": "1997-12-07T00:00:00Z", "itemId": "PfvmSkA8", "itemSku": "TNbAzevy", "itemType": "7DXQEOGl"}, {"count": 38, "duration": 20, "endDate": "1972-09-02T00:00:00Z", "itemId": "d1vq1F8Z", "itemSku": "R1ZfCZGQ", "itemType": "gOlTNUJI"}], "name": "Ig1M8IGe", "odds": 0.500186512517848, "type": "PROBABILITY_GROUP", "weight": 12}, {"lootBoxItems": [{"count": 96, "duration": 97, "endDate": "1976-10-31T00:00:00Z", "itemId": "aGhuaihi", "itemSku": "MXgCSMog", "itemType": "6KswrbGX"}, {"count": 23, "duration": 34, "endDate": "1989-09-07T00:00:00Z", "itemId": "wCDIJ5nC", "itemSku": "1KfwNXXC", "itemType": "AQsPcITZ"}, {"count": 71, "duration": 62, "endDate": "1991-04-13T00:00:00Z", "itemId": "jFiDez73", "itemSku": "qcOFPYCn", "itemType": "8txCqBqX"}], "name": "4ZCzTZNj", "odds": 0.8893637708263634, "type": "REWARD_GROUP", "weight": 84}, {"lootBoxItems": [{"count": 22, "duration": 66, "endDate": "1973-02-10T00:00:00Z", "itemId": "tvMqBBIj", "itemSku": "pXnAwlE2", "itemType": "QQApWi2C"}, {"count": 12, "duration": 9, "endDate": "1998-06-11T00:00:00Z", "itemId": "EbEWf6ph", "itemSku": "RheyIK7O", "itemType": "SBMjbI6x"}, {"count": 29, "duration": 11, "endDate": "1975-06-30T00:00:00Z", "itemId": "i1IOP3ep", "itemSku": "6Bc7xmMC", "itemType": "w41vFK4q"}], "name": "O9iUeRA3", "odds": 0.8463756950603412, "type": "PROBABILITY_GROUP", "weight": 87}], "rollFunction": "DEFAULT"}, "maxCount": 19, "maxCountPerUser": 66, "name": "RENDMHc0", "optionBoxConfig": {"boxItems": [{"count": 53, "duration": 6, "endDate": "1986-10-19T00:00:00Z", "itemId": "GACScO4C", "itemSku": "KyXJJvie", "itemType": "OruBr69G"}, {"count": 36, "duration": 91, "endDate": "1976-10-27T00:00:00Z", "itemId": "J85s0j3y", "itemSku": "p4LVAhKM", "itemType": "b6lizJTW"}, {"count": 16, "duration": 85, "endDate": "1984-09-29T00:00:00Z", "itemId": "pLo9Ofls", "itemSku": "31U3xURY", "itemType": "tEdyw0FS"}]}, "purchasable": false, "recurring": {"cycle": "MONTHLY", "fixedFreeDays": 22, "fixedTrialCycles": 93, "graceDays": 20}, "regionData": {"ub0WyqJF": [{"currencyCode": "lhSVlpFG", "currencyNamespace": "ZBPcXH3o", "currencyType": "REAL", "discountAmount": 97, "discountExpireAt": "1994-07-07T00:00:00Z", "discountPercentage": 40, "discountPurchaseAt": "1990-01-22T00:00:00Z", "expireAt": "1974-01-31T00:00:00Z", "price": 30, "purchaseAt": "1988-12-26T00:00:00Z", "trialPrice": 81}, {"currencyCode": "F0pV2F3W", "currencyNamespace": "njT0a5zi", "currencyType": "REAL", "discountAmount": 12, "discountExpireAt": "1985-06-10T00:00:00Z", "discountPercentage": 74, "discountPurchaseAt": "1999-02-14T00:00:00Z", "expireAt": "1996-01-19T00:00:00Z", "price": 1, "purchaseAt": "1991-10-16T00:00:00Z", "trialPrice": 30}, {"currencyCode": "lJA9SYox", "currencyNamespace": "5OQLkhxp", "currencyType": "REAL", "discountAmount": 67, "discountExpireAt": "1990-05-15T00:00:00Z", "discountPercentage": 66, "discountPurchaseAt": "1988-01-15T00:00:00Z", "expireAt": "1987-08-20T00:00:00Z", "price": 68, "purchaseAt": "1993-08-26T00:00:00Z", "trialPrice": 66}], "qPVM7Bma": [{"currencyCode": "F2bXWP6a", "currencyNamespace": "TBgA76Yz", "currencyType": "VIRTUAL", "discountAmount": 24, "discountExpireAt": "1983-10-25T00:00:00Z", "discountPercentage": 16, "discountPurchaseAt": "1973-03-03T00:00:00Z", "expireAt": "1975-03-18T00:00:00Z", "price": 89, "purchaseAt": "1979-06-05T00:00:00Z", "trialPrice": 88}, {"currencyCode": "ZOSM2NFs", "currencyNamespace": "7NSJvOIp", "currencyType": "REAL", "discountAmount": 78, "discountExpireAt": "1986-08-22T00:00:00Z", "discountPercentage": 23, "discountPurchaseAt": "1971-12-18T00:00:00Z", "expireAt": "1991-10-17T00:00:00Z", "price": 66, "purchaseAt": "1978-03-09T00:00:00Z", "trialPrice": 94}, {"currencyCode": "wbHwaePA", "currencyNamespace": "WeeDxARd", "currencyType": "REAL", "discountAmount": 29, "discountExpireAt": "1984-11-25T00:00:00Z", "discountPercentage": 99, "discountPurchaseAt": "1991-08-03T00:00:00Z", "expireAt": "1983-08-14T00:00:00Z", "price": 23, "purchaseAt": "1998-04-15T00:00:00Z", "trialPrice": 46}], "88h9YBWM": [{"currencyCode": "W3iBn5Do", "currencyNamespace": "R0NuDsGO", "currencyType": "REAL", "discountAmount": 50, "discountExpireAt": "1974-06-03T00:00:00Z", "discountPercentage": 63, "discountPurchaseAt": "1979-06-08T00:00:00Z", "expireAt": "1997-04-14T00:00:00Z", "price": 15, "purchaseAt": "1978-01-23T00:00:00Z", "trialPrice": 97}, {"currencyCode": "86qlBVIV", "currencyNamespace": "wFSNvBKn", "currencyType": "VIRTUAL", "discountAmount": 16, "discountExpireAt": "1979-04-13T00:00:00Z", "discountPercentage": 47, "discountPurchaseAt": "1984-04-17T00:00:00Z", "expireAt": "1978-06-28T00:00:00Z", "price": 61, "purchaseAt": "1999-10-02T00:00:00Z", "trialPrice": 35}, {"currencyCode": "cDhzXR6J", "currencyNamespace": "BgsNTiFR", "currencyType": "REAL", "discountAmount": 0, "discountExpireAt": "1976-09-05T00:00:00Z", "discountPercentage": 19, "discountPurchaseAt": "1973-01-01T00:00:00Z", "expireAt": "1987-11-14T00:00:00Z", "price": 3, "purchaseAt": "1985-03-07T00:00:00Z", "trialPrice": 40}]}, "saleConfig": {"currencyCode": "pfNxO2ti", "price": 4}, "seasonType": "PASS", "sectionExclusive": false, "sellable": true, "sku": "VMkeUWKn", "stackable": false, "status": "ACTIVE", "tags": ["lF1d5io2", "EJdXQJIn", "d1YAQyxE"], "targetCurrencyCode": "PXC2Tt7E", "targetNamespace": "Q7yqea7T", "thumbnailUrl": "9kZYwcoK", "useCount": 4}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateItem \
    --namespace $AB_NAMESPACE \
    --storeId 'Qauu4n2w' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 102 'CreateItem' test.out

#- 103 GetItemByAppId
$CLI_EXE \
    --sn platform \
    --op GetItemByAppId \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --storeId 'Lklsus8w' \
    --appId 'MZ7uc8BE' \
    > test.out 2>&1
eval_tap $? 103 'GetItemByAppId' test.out

#- 104 QueryItems
$CLI_EXE \
    --sn platform \
    --op QueryItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --appType 'DEMO' \
    --availableDate 'bYrSbbAV' \
    --baseAppId 'tzGTKAvJ' \
    --categoryPath 'ceCd0Fqz' \
    --features 'Gosiqq9z' \
    --includeSubCategoryItem 'true' \
    --itemType 'COINS' \
    --limit '71' \
    --offset '94' \
    --region '4q7MYwd2' \
    --sortBy '["updatedAt:asc", "updatedAt:desc", "createdAt:asc"]' \
    --storeId 'J75sMEYl' \
    --tags 'aFyyKYa4' \
    --targetNamespace 'S8mcCHzp' \
    > test.out 2>&1
eval_tap $? 104 'QueryItems' test.out

#- 105 ListBasicItemsByFeatures
$CLI_EXE \
    --sn platform \
    --op ListBasicItemsByFeatures \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --features '["LfATMGTJ", "kYMoMy11", "N5q7XBSC"]' \
    > test.out 2>&1
eval_tap $? 105 'ListBasicItemsByFeatures' test.out

#- 106 GetItemBySku
$CLI_EXE \
    --sn platform \
    --op GetItemBySku \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --storeId 'SStNNGB9' \
    --sku '17gL1Ux1' \
    > test.out 2>&1
eval_tap $? 106 'GetItemBySku' test.out

#- 107 GetLocaleItemBySku
$CLI_EXE \
    --sn platform \
    --op GetLocaleItemBySku \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --language 'GB1U3yCL' \
    --populateBundle 'false' \
    --region 'm9DkyBzZ' \
    --storeId 'Gkpx0EDJ' \
    --sku 'aqOFMpFg' \
    > test.out 2>&1
eval_tap $? 107 'GetLocaleItemBySku' test.out

#- 108 GetItemIdBySku
$CLI_EXE \
    --sn platform \
    --op GetItemIdBySku \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --storeId 'Q7E2O5R8' \
    --sku 'VdtMMrP9' \
    > test.out 2>&1
eval_tap $? 108 'GetItemIdBySku' test.out

#- 109 GetBulkItemIdBySkus
$CLI_EXE \
    --sn platform \
    --op GetBulkItemIdBySkus \
    --namespace $AB_NAMESPACE \
    --sku '["yCzm9Fcx", "dVUgY672", "9newuZbc"]' \
    --storeId '7oDFLF7F' \
    > test.out 2>&1
eval_tap $? 109 'GetBulkItemIdBySkus' test.out

#- 110 BulkGetLocaleItems
$CLI_EXE \
    --sn platform \
    --op BulkGetLocaleItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --language 'ZayHDYcv' \
    --region 'OTPR9mND' \
    --storeId 'KAAoSWP2' \
    --itemIds 'D1gwPl0x' \
    > test.out 2>&1
eval_tap $? 110 'BulkGetLocaleItems' test.out

#- 111 GetAvailablePredicateTypes
$CLI_EXE \
    --sn platform \
    --op GetAvailablePredicateTypes \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 111 'GetAvailablePredicateTypes' test.out

#- 112 ValidateItemPurchaseCondition
# body param: body
echo '{"itemIds": ["xBPCYnxW", "SeaKrGNN", "sEHEnbCI"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ValidateItemPurchaseCondition \
    --namespace $AB_NAMESPACE \
    --userId 'lehvXYCp' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 112 'ValidateItemPurchaseCondition' test.out

#- 113 BulkUpdateRegionData
# body param: body
echo '{"changes": [{"itemIdentities": ["84JvQ8YO", "x3io16F6", "DnIA64jm"], "itemIdentityType": "ITEM_SKU", "regionData": {"CKhxRkoe": [{"currencyCode": "oV2WFeCL", "currencyNamespace": "F00jI0uZ", "currencyType": "REAL", "discountAmount": 17, "discountExpireAt": "1981-03-27T00:00:00Z", "discountPercentage": 14, "discountPurchaseAt": "1991-03-11T00:00:00Z", "discountedPrice": 23, "expireAt": "1972-01-08T00:00:00Z", "price": 72, "purchaseAt": "1993-01-02T00:00:00Z", "trialPrice": 93}, {"currencyCode": "nZC5wPPJ", "currencyNamespace": "GGCv3ZUI", "currencyType": "VIRTUAL", "discountAmount": 46, "discountExpireAt": "1993-02-13T00:00:00Z", "discountPercentage": 82, "discountPurchaseAt": "1978-02-16T00:00:00Z", "discountedPrice": 25, "expireAt": "1995-12-25T00:00:00Z", "price": 57, "purchaseAt": "1984-09-06T00:00:00Z", "trialPrice": 78}, {"currencyCode": "vHNjUuTM", "currencyNamespace": "XK0CH3PW", "currencyType": "VIRTUAL", "discountAmount": 75, "discountExpireAt": "1971-03-10T00:00:00Z", "discountPercentage": 14, "discountPurchaseAt": "1984-01-26T00:00:00Z", "discountedPrice": 33, "expireAt": "1990-05-23T00:00:00Z", "price": 25, "purchaseAt": "1977-09-06T00:00:00Z", "trialPrice": 52}], "fAWNBqlL": [{"currencyCode": "yo1BnSqh", "currencyNamespace": "EXZDi8N0", "currencyType": "VIRTUAL", "discountAmount": 81, "discountExpireAt": "1993-04-10T00:00:00Z", "discountPercentage": 80, "discountPurchaseAt": "1989-07-03T00:00:00Z", "discountedPrice": 32, "expireAt": "1972-07-14T00:00:00Z", "price": 100, "purchaseAt": "1986-09-23T00:00:00Z", "trialPrice": 2}, {"currencyCode": "C6AY7e3m", "currencyNamespace": "akpycKB5", "currencyType": "REAL", "discountAmount": 40, "discountExpireAt": "1985-06-30T00:00:00Z", "discountPercentage": 76, "discountPurchaseAt": "1984-05-14T00:00:00Z", "discountedPrice": 88, "expireAt": "1992-04-25T00:00:00Z", "price": 1, "purchaseAt": "1987-11-24T00:00:00Z", "trialPrice": 44}, {"currencyCode": "6X8E6SwD", "currencyNamespace": "JqhIP4k5", "currencyType": "VIRTUAL", "discountAmount": 36, "discountExpireAt": "1989-08-16T00:00:00Z", "discountPercentage": 42, "discountPurchaseAt": "1993-06-11T00:00:00Z", "discountedPrice": 64, "expireAt": "1994-02-13T00:00:00Z", "price": 52, "purchaseAt": "1971-01-10T00:00:00Z", "trialPrice": 74}], "pnekbBo2": [{"currencyCode": "5o7U2a84", "currencyNamespace": "EZthUNcJ", "currencyType": "REAL", "discountAmount": 97, "discountExpireAt": "1993-07-21T00:00:00Z", "discountPercentage": 87, "discountPurchaseAt": "1995-12-02T00:00:00Z", "discountedPrice": 28, "expireAt": "1980-11-20T00:00:00Z", "price": 99, "purchaseAt": "1988-04-06T00:00:00Z", "trialPrice": 76}, {"currencyCode": "hTFooYFo", "currencyNamespace": "999ooGuK", "currencyType": "VIRTUAL", "discountAmount": 22, "discountExpireAt": "1978-07-20T00:00:00Z", "discountPercentage": 77, "discountPurchaseAt": "1993-08-06T00:00:00Z", "discountedPrice": 59, "expireAt": "1986-06-03T00:00:00Z", "price": 64, "purchaseAt": "1974-04-09T00:00:00Z", "trialPrice": 54}, {"currencyCode": "GhFnqm2F", "currencyNamespace": "6g934ERO", "currencyType": "REAL", "discountAmount": 26, "discountExpireAt": "1978-01-13T00:00:00Z", "discountPercentage": 30, "discountPurchaseAt": "1992-06-07T00:00:00Z", "discountedPrice": 4, "expireAt": "1982-01-24T00:00:00Z", "price": 66, "purchaseAt": "1974-11-30T00:00:00Z", "trialPrice": 92}]}}, {"itemIdentities": ["1X06hP8t", "OlZGXhJ2", "JCll9XsM"], "itemIdentityType": "ITEM_ID", "regionData": {"nlzO5l1O": [{"currencyCode": "F2cWNa0T", "currencyNamespace": "8Rvtel2n", "currencyType": "REAL", "discountAmount": 22, "discountExpireAt": "1991-04-27T00:00:00Z", "discountPercentage": 35, "discountPurchaseAt": "1984-07-31T00:00:00Z", "discountedPrice": 43, "expireAt": "1995-11-08T00:00:00Z", "price": 4, "purchaseAt": "1989-09-27T00:00:00Z", "trialPrice": 66}, {"currencyCode": "E3S0ra99", "currencyNamespace": "Ns7Ei3JA", "currencyType": "VIRTUAL", "discountAmount": 69, "discountExpireAt": "1992-05-14T00:00:00Z", "discountPercentage": 66, "discountPurchaseAt": "1976-01-14T00:00:00Z", "discountedPrice": 45, "expireAt": "1972-11-02T00:00:00Z", "price": 67, "purchaseAt": "1978-03-20T00:00:00Z", "trialPrice": 5}, {"currencyCode": "GwyBQDIg", "currencyNamespace": "X2wpQb1K", "currencyType": "VIRTUAL", "discountAmount": 38, "discountExpireAt": "1986-12-30T00:00:00Z", "discountPercentage": 95, "discountPurchaseAt": "1986-06-08T00:00:00Z", "discountedPrice": 38, "expireAt": "1992-12-08T00:00:00Z", "price": 78, "purchaseAt": "1974-06-07T00:00:00Z", "trialPrice": 92}], "iDIdNBhR": [{"currencyCode": "H2vjetsu", "currencyNamespace": "YbeRv1up", "currencyType": "REAL", "discountAmount": 53, "discountExpireAt": "1990-01-29T00:00:00Z", "discountPercentage": 29, "discountPurchaseAt": "1986-09-20T00:00:00Z", "discountedPrice": 30, "expireAt": "1994-01-10T00:00:00Z", "price": 3, "purchaseAt": "1994-04-29T00:00:00Z", "trialPrice": 18}, {"currencyCode": "YaVzwEZJ", "currencyNamespace": "C533h36G", "currencyType": "VIRTUAL", "discountAmount": 4, "discountExpireAt": "1974-07-27T00:00:00Z", "discountPercentage": 54, "discountPurchaseAt": "1983-04-01T00:00:00Z", "discountedPrice": 25, "expireAt": "1981-05-26T00:00:00Z", "price": 23, "purchaseAt": "1994-10-23T00:00:00Z", "trialPrice": 57}, {"currencyCode": "mxBegQf1", "currencyNamespace": "lTGFbyp3", "currencyType": "REAL", "discountAmount": 1, "discountExpireAt": "1971-01-09T00:00:00Z", "discountPercentage": 32, "discountPurchaseAt": "1999-09-05T00:00:00Z", "discountedPrice": 52, "expireAt": "1983-05-24T00:00:00Z", "price": 27, "purchaseAt": "1977-11-06T00:00:00Z", "trialPrice": 60}], "JyAmR1ja": [{"currencyCode": "82YbOtek", "currencyNamespace": "9XLIDefo", "currencyType": "VIRTUAL", "discountAmount": 82, "discountExpireAt": "1973-06-05T00:00:00Z", "discountPercentage": 66, "discountPurchaseAt": "1992-03-23T00:00:00Z", "discountedPrice": 74, "expireAt": "1992-07-05T00:00:00Z", "price": 12, "purchaseAt": "1998-03-24T00:00:00Z", "trialPrice": 9}, {"currencyCode": "YdWy4sfi", "currencyNamespace": "KVvj5jab", "currencyType": "VIRTUAL", "discountAmount": 14, "discountExpireAt": "1987-03-07T00:00:00Z", "discountPercentage": 0, "discountPurchaseAt": "1988-03-23T00:00:00Z", "discountedPrice": 14, "expireAt": "1997-05-09T00:00:00Z", "price": 81, "purchaseAt": "1973-07-01T00:00:00Z", "trialPrice": 89}, {"currencyCode": "mtpbopZk", "currencyNamespace": "4eZdvJxN", "currencyType": "VIRTUAL", "discountAmount": 23, "discountExpireAt": "1992-04-19T00:00:00Z", "discountPercentage": 41, "discountPurchaseAt": "1996-10-01T00:00:00Z", "discountedPrice": 54, "expireAt": "1980-02-17T00:00:00Z", "price": 84, "purchaseAt": "1976-08-16T00:00:00Z", "trialPrice": 96}]}}, {"itemIdentities": ["VOZRmD1o", "oYxq8kgp", "8uSh52nS"], "itemIdentityType": "ITEM_SKU", "regionData": {"av4uc4PP": [{"currencyCode": "nSWxUM7x", "currencyNamespace": "5UrP8Q86", "currencyType": "REAL", "discountAmount": 30, "discountExpireAt": "1976-04-27T00:00:00Z", "discountPercentage": 99, "discountPurchaseAt": "1985-04-28T00:00:00Z", "discountedPrice": 73, "expireAt": "1991-02-28T00:00:00Z", "price": 75, "purchaseAt": "1989-04-09T00:00:00Z", "trialPrice": 55}, {"currencyCode": "SaiIVIcH", "currencyNamespace": "flypWopI", "currencyType": "REAL", "discountAmount": 30, "discountExpireAt": "1981-03-06T00:00:00Z", "discountPercentage": 47, "discountPurchaseAt": "1980-10-09T00:00:00Z", "discountedPrice": 80, "expireAt": "1972-02-23T00:00:00Z", "price": 66, "purchaseAt": "1977-09-05T00:00:00Z", "trialPrice": 16}, {"currencyCode": "nN3MYOlw", "currencyNamespace": "EGJEGRvo", "currencyType": "REAL", "discountAmount": 72, "discountExpireAt": "1999-06-07T00:00:00Z", "discountPercentage": 24, "discountPurchaseAt": "1984-05-06T00:00:00Z", "discountedPrice": 52, "expireAt": "1987-03-11T00:00:00Z", "price": 88, "purchaseAt": "1977-09-03T00:00:00Z", "trialPrice": 21}], "WaNCFYi7": [{"currencyCode": "OWItNJnJ", "currencyNamespace": "KjJZF2xL", "currencyType": "VIRTUAL", "discountAmount": 70, "discountExpireAt": "1973-12-22T00:00:00Z", "discountPercentage": 47, "discountPurchaseAt": "1998-09-06T00:00:00Z", "discountedPrice": 98, "expireAt": "1986-03-07T00:00:00Z", "price": 13, "purchaseAt": "1977-02-04T00:00:00Z", "trialPrice": 19}, {"currencyCode": "cTJFiIcs", "currencyNamespace": "wFJ2qebc", "currencyType": "VIRTUAL", "discountAmount": 31, "discountExpireAt": "1977-03-01T00:00:00Z", "discountPercentage": 68, "discountPurchaseAt": "1991-09-11T00:00:00Z", "discountedPrice": 65, "expireAt": "1999-10-10T00:00:00Z", "price": 80, "purchaseAt": "1982-09-28T00:00:00Z", "trialPrice": 50}, {"currencyCode": "AMCI8w6T", "currencyNamespace": "EW4D0YRl", "currencyType": "REAL", "discountAmount": 4, "discountExpireAt": "1974-09-11T00:00:00Z", "discountPercentage": 50, "discountPurchaseAt": "1998-07-30T00:00:00Z", "discountedPrice": 3, "expireAt": "1994-07-03T00:00:00Z", "price": 74, "purchaseAt": "1971-01-13T00:00:00Z", "trialPrice": 30}], "SCA5m6hq": [{"currencyCode": "z5CVAfxR", "currencyNamespace": "FMkpTbgF", "currencyType": "VIRTUAL", "discountAmount": 86, "discountExpireAt": "1984-12-06T00:00:00Z", "discountPercentage": 32, "discountPurchaseAt": "1986-01-30T00:00:00Z", "discountedPrice": 48, "expireAt": "1988-06-03T00:00:00Z", "price": 30, "purchaseAt": "1975-08-30T00:00:00Z", "trialPrice": 21}, {"currencyCode": "ceusI3dM", "currencyNamespace": "V2r3lF4u", "currencyType": "REAL", "discountAmount": 42, "discountExpireAt": "1977-10-08T00:00:00Z", "discountPercentage": 13, "discountPurchaseAt": "1971-04-02T00:00:00Z", "discountedPrice": 30, "expireAt": "1988-12-14T00:00:00Z", "price": 52, "purchaseAt": "1977-08-11T00:00:00Z", "trialPrice": 64}, {"currencyCode": "IkwQXNRu", "currencyNamespace": "Zv6gRnie", "currencyType": "REAL", "discountAmount": 15, "discountExpireAt": "1985-11-30T00:00:00Z", "discountPercentage": 47, "discountPurchaseAt": "1987-07-17T00:00:00Z", "discountedPrice": 58, "expireAt": "1992-11-20T00:00:00Z", "price": 1, "purchaseAt": "1973-07-24T00:00:00Z", "trialPrice": 86}]}}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op BulkUpdateRegionData \
    --namespace $AB_NAMESPACE \
    --storeId 'aMJ3ooKx' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 113 'BulkUpdateRegionData' test.out

#- 114 SearchItems
$CLI_EXE \
    --sn platform \
    --op SearchItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --itemType 'EXTENSION' \
    --limit '9' \
    --offset '80' \
    --sortBy 'hhWmfDWa' \
    --storeId 'l3YXm9Lx' \
    --keyword 'fMkz8C6d' \
    --language 'vlB3Et59' \
    > test.out 2>&1
eval_tap $? 114 'SearchItems' test.out

#- 115 QueryUncategorizedItems
$CLI_EXE \
    --sn platform \
    --op QueryUncategorizedItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --limit '56' \
    --offset '15' \
    --sortBy '["displayOrder", "name:desc", "name"]' \
    --storeId 'GYxmmZNG' \
    > test.out 2>&1
eval_tap $? 115 'QueryUncategorizedItems' test.out

#- 116 GetItem
$CLI_EXE \
    --sn platform \
    --op GetItem \
    --itemId 'GkHxrFfS' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --storeId 'TDWxzqTt' \
    > test.out 2>&1
eval_tap $? 116 'GetItem' test.out

#- 117 UpdateItem
# body param: body
echo '{"appId": "FV7pxIfJ", "appType": "DLC", "baseAppId": "5fF2goGg", "boothName": "ble8rCAx", "categoryPath": "mSIWdJsV", "clazz": "v0hrLabk", "displayOrder": 96, "entitlementType": "CONSUMABLE", "ext": {"2sG7Q9JV": {}, "nlZqmbi6": {}, "UpziQ9P6": {}}, "features": ["KWt2vpzF", "rAfwaxDN", "Oii8zBcJ"], "images": [{"as": "9l3pQau6", "caption": "I5Ht6Clk", "height": 57, "imageUrl": "KjuB90on", "smallImageUrl": "ipIeAM95", "width": 19}, {"as": "IJIguZuY", "caption": "IuQ8tUtg", "height": 79, "imageUrl": "AikNpEI0", "smallImageUrl": "9YYDFsVf", "width": 3}, {"as": "5brFXpJq", "caption": "kDxOhsFI", "height": 56, "imageUrl": "6EsMRiKX", "smallImageUrl": "gJB61eX3", "width": 19}], "itemIds": ["bUHnexx6", "2tWlwhwH", "ZokuhUJy"], "itemQty": {"Fu2othOE": 89, "v05cghYQ": 82, "OZs6XTzy": 97}, "itemType": "SUBSCRIPTION", "listable": false, "localizations": {"xZNQgQwg": {"description": "QzmkBPSM", "localExt": {"FhDQyT7g": {}, "vaDV4sWy": {}, "RRy6igwV": {}}, "longDescription": "5LUNfel5", "title": "K9bqWbjn"}, "KAwRJpia": {"description": "I39xYMpH", "localExt": {"XpVixf2X": {}, "yxBZcU1M": {}, "w676Rstp": {}}, "longDescription": "q6a99Y8T", "title": "vVCkKMiO"}, "OrQ8jUoV": {"description": "yv8VNRyW", "localExt": {"fp89Hd0I": {}, "mPOX84rW": {}, "c7GoARzT": {}}, "longDescription": "BPz0iE77", "title": "u4dyuexl"}}, "lootBoxConfig": {"rewardCount": 40, "rewards": [{"lootBoxItems": [{"count": 97, "duration": 68, "endDate": "1991-02-21T00:00:00Z", "itemId": "UkD8KiJR", "itemSku": "KFnLKkDH", "itemType": "FyfvleJA"}, {"count": 62, "duration": 11, "endDate": "1973-05-21T00:00:00Z", "itemId": "foGsn10l", "itemSku": "sNwnHTQs", "itemType": "MmeXVxBr"}, {"count": 99, "duration": 32, "endDate": "1992-12-15T00:00:00Z", "itemId": "Kg3vkXS2", "itemSku": "vwZqap8P", "itemType": "6sfUxyZx"}], "name": "9m2qaW7l", "odds": 0.7843440868991531, "type": "REWARD", "weight": 6}, {"lootBoxItems": [{"count": 92, "duration": 22, "endDate": "1991-01-14T00:00:00Z", "itemId": "hr9sdRLs", "itemSku": "9YZdnQPU", "itemType": "8wZfNcln"}, {"count": 76, "duration": 47, "endDate": "1985-07-22T00:00:00Z", "itemId": "SBJ2s6cd", "itemSku": "vmruFyk2", "itemType": "XAwKSKpp"}, {"count": 44, "duration": 10, "endDate": "1972-09-02T00:00:00Z", "itemId": "z7YP6FCI", "itemSku": "8vIoJi24", "itemType": "3xgqaHSN"}], "name": "qjZJswG1", "odds": 0.5793667745865061, "type": "PROBABILITY_GROUP", "weight": 83}, {"lootBoxItems": [{"count": 77, "duration": 31, "endDate": "1982-09-15T00:00:00Z", "itemId": "1aP3YTW4", "itemSku": "AjqSkC0k", "itemType": "s1PgHDPC"}, {"count": 60, "duration": 3, "endDate": "1992-12-04T00:00:00Z", "itemId": "OsGDE2cA", "itemSku": "S76XebW9", "itemType": "0HNJlYXt"}, {"count": 96, "duration": 16, "endDate": "1979-01-20T00:00:00Z", "itemId": "U7QVu9EU", "itemSku": "xDRxb4Ir", "itemType": "onLA3h3d"}], "name": "4x7baBbv", "odds": 0.8723923211046792, "type": "REWARD", "weight": 12}], "rollFunction": "DEFAULT"}, "maxCount": 0, "maxCountPerUser": 24, "name": "aziwz9Dp", "optionBoxConfig": {"boxItems": [{"count": 80, "duration": 50, "endDate": "1995-04-12T00:00:00Z", "itemId": "YSNK4a9E", "itemSku": "q7NuhEHc", "itemType": "rSZKDMOG"}, {"count": 47, "duration": 95, "endDate": "1991-10-13T00:00:00Z", "itemId": "8BvHCVrm", "itemSku": "3sI2FG10", "itemType": "ks9ooCbU"}, {"count": 11, "duration": 99, "endDate": "1974-11-03T00:00:00Z", "itemId": "EdlToS5o", "itemSku": "dzBjOhxH", "itemType": "HFwoarBj"}]}, "purchasable": false, "recurring": {"cycle": "WEEKLY", "fixedFreeDays": 9, "fixedTrialCycles": 64, "graceDays": 87}, "regionData": {"4lDo4HWt": [{"currencyCode": "a8QFCLcY", "currencyNamespace": "a9ltMiU0", "currencyType": "VIRTUAL", "discountAmount": 41, "discountExpireAt": "1985-06-25T00:00:00Z", "discountPercentage": 91, "discountPurchaseAt": "1977-06-30T00:00:00Z", "expireAt": "1980-04-06T00:00:00Z", "price": 73, "purchaseAt": "1972-12-10T00:00:00Z", "trialPrice": 5}, {"currencyCode": "Jkjj5Uen", "currencyNamespace": "WH4Ks2Za", "currencyType": "REAL", "discountAmount": 75, "discountExpireAt": "1988-06-29T00:00:00Z", "discountPercentage": 26, "discountPurchaseAt": "1995-05-30T00:00:00Z", "expireAt": "1983-07-05T00:00:00Z", "price": 15, "purchaseAt": "1995-08-11T00:00:00Z", "trialPrice": 94}, {"currencyCode": "DBoQ4og8", "currencyNamespace": "wPRgvGQu", "currencyType": "REAL", "discountAmount": 48, "discountExpireAt": "1975-11-06T00:00:00Z", "discountPercentage": 44, "discountPurchaseAt": "1988-05-01T00:00:00Z", "expireAt": "1973-09-06T00:00:00Z", "price": 41, "purchaseAt": "1992-05-05T00:00:00Z", "trialPrice": 96}], "TnXqinFg": [{"currencyCode": "0yA94Mv8", "currencyNamespace": "NxaXuHrP", "currencyType": "REAL", "discountAmount": 3, "discountExpireAt": "1978-01-21T00:00:00Z", "discountPercentage": 31, "discountPurchaseAt": "1987-07-29T00:00:00Z", "expireAt": "1982-04-21T00:00:00Z", "price": 46, "purchaseAt": "1981-07-25T00:00:00Z", "trialPrice": 73}, {"currencyCode": "beE1dxqn", "currencyNamespace": "2c9WzMAf", "currencyType": "VIRTUAL", "discountAmount": 2, "discountExpireAt": "1994-09-02T00:00:00Z", "discountPercentage": 85, "discountPurchaseAt": "1978-01-18T00:00:00Z", "expireAt": "1986-07-12T00:00:00Z", "price": 26, "purchaseAt": "1987-10-18T00:00:00Z", "trialPrice": 84}, {"currencyCode": "lO2DPU2e", "currencyNamespace": "NIb8JlZe", "currencyType": "VIRTUAL", "discountAmount": 79, "discountExpireAt": "1987-06-15T00:00:00Z", "discountPercentage": 90, "discountPurchaseAt": "1996-08-21T00:00:00Z", "expireAt": "1974-05-09T00:00:00Z", "price": 79, "purchaseAt": "1988-12-14T00:00:00Z", "trialPrice": 13}], "iX7Hw531": [{"currencyCode": "k4rYpbXk", "currencyNamespace": "ObPXfEOr", "currencyType": "REAL", "discountAmount": 43, "discountExpireAt": "1995-04-19T00:00:00Z", "discountPercentage": 52, "discountPurchaseAt": "1985-09-28T00:00:00Z", "expireAt": "1983-01-04T00:00:00Z", "price": 13, "purchaseAt": "1983-10-12T00:00:00Z", "trialPrice": 74}, {"currencyCode": "qhbPh9Yh", "currencyNamespace": "tooDnYNI", "currencyType": "REAL", "discountAmount": 31, "discountExpireAt": "1987-05-17T00:00:00Z", "discountPercentage": 26, "discountPurchaseAt": "1988-05-05T00:00:00Z", "expireAt": "1985-02-25T00:00:00Z", "price": 45, "purchaseAt": "1991-11-09T00:00:00Z", "trialPrice": 95}, {"currencyCode": "nNkUtEKN", "currencyNamespace": "Sb0j8bOj", "currencyType": "REAL", "discountAmount": 48, "discountExpireAt": "1989-08-16T00:00:00Z", "discountPercentage": 56, "discountPurchaseAt": "1989-09-12T00:00:00Z", "expireAt": "1981-08-31T00:00:00Z", "price": 53, "purchaseAt": "1996-06-26T00:00:00Z", "trialPrice": 75}]}, "saleConfig": {"currencyCode": "gGDCyiWg", "price": 32}, "seasonType": "PASS", "sectionExclusive": true, "sellable": false, "sku": "VNuIaVrl", "stackable": true, "status": "INACTIVE", "tags": ["m5mFXOop", "R6EPUkOy", "VlBBfplE"], "targetCurrencyCode": "QlpvZzS0", "targetNamespace": "Jd8l6T5j", "thumbnailUrl": "poWSaHAG", "useCount": 100}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateItem \
    --itemId 'MehLyug0' \
    --namespace $AB_NAMESPACE \
    --storeId 'KezUXm8G' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 117 'UpdateItem' test.out

#- 118 DeleteItem
$CLI_EXE \
    --sn platform \
    --op DeleteItem \
    --itemId 'WCfRrxmE' \
    --namespace $AB_NAMESPACE \
    --force 'true' \
    --storeId 'LzatvqS2' \
    > test.out 2>&1
eval_tap $? 118 'DeleteItem' test.out

#- 119 AcquireItem
# body param: body
echo '{"count": 60, "orderNo": "2wDrHI0V"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op AcquireItem \
    --itemId 'fJ6mhSpl' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 119 'AcquireItem' test.out

#- 120 GetApp
$CLI_EXE \
    --sn platform \
    --op GetApp \
    --itemId 'g1w1b872' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --storeId 'OJEokFUE' \
    > test.out 2>&1
eval_tap $? 120 'GetApp' test.out

#- 121 UpdateApp
# body param: body
echo '{"carousel": [{"alt": "j6aTqoBl", "previewUrl": "onz7CyY7", "thumbnailUrl": "ZTW9kI0r", "type": "video", "url": "ZfaumX1E", "videoSource": "youtube"}, {"alt": "ZHJTtDQW", "previewUrl": "R20ltZlp", "thumbnailUrl": "30f0Qlzx", "type": "image", "url": "Uh4ep2vF", "videoSource": "vimeo"}, {"alt": "m9F38yGT", "previewUrl": "BO8bACan", "thumbnailUrl": "fAPbdQ7H", "type": "image", "url": "fenSmCn2", "videoSource": "youtube"}], "developer": "zuxrrRJI", "forumUrl": "yQG9hFRh", "genres": ["Adventure", "Sports", "Casual"], "localizations": {"WY5ARVgC": {"announcement": "fy8ARI6L", "slogan": "pFhGxYFK"}, "Va67cWFT": {"announcement": "KSa0fM4u", "slogan": "KTNodYmn"}, "XS0Rviqo": {"announcement": "FoK3uUWa", "slogan": "gLMUe9Ar"}}, "platformRequirements": {"M9Hwf0jc": [{"additionals": "jZP1vsG1", "directXVersion": "ke0ED2hS", "diskSpace": "p1POlsqc", "graphics": "ypa1wYR3", "label": "eRpO3ZgC", "osVersion": "MVufTyBK", "processor": "hxFve3Hi", "ram": "GvKivAjj", "soundCard": "Y66Vkh7Z"}, {"additionals": "wz2sSLTJ", "directXVersion": "WftffsXy", "diskSpace": "S1DdGMyT", "graphics": "gLDI2H3V", "label": "Z5vVZopP", "osVersion": "bW2skWgy", "processor": "jCbBdS20", "ram": "H08e5X8L", "soundCard": "WZNVdMca"}, {"additionals": "fV2rizFa", "directXVersion": "mGPIJ7yv", "diskSpace": "Mxyl6uhq", "graphics": "XzSLXKoJ", "label": "Av5RIY4Q", "osVersion": "pG8JKFUI", "processor": "ifJ4KiCy", "ram": "kVkFrVw2", "soundCard": "nQJ12axp"}], "NaFZdqAY": [{"additionals": "JRvJKfQf", "directXVersion": "mGyTWyzu", "diskSpace": "YrkjPIpz", "graphics": "UGvoZWnl", "label": "VAHyuWrU", "osVersion": "elYdBcyN", "processor": "EdnWw3IG", "ram": "WUzLBe2I", "soundCard": "XWGlGYDd"}, {"additionals": "H00x9hEy", "directXVersion": "OWMgOPW8", "diskSpace": "2Yq8YVUr", "graphics": "RNsxbA9y", "label": "pjVDwqOW", "osVersion": "frPFg2V5", "processor": "2VH9um3Y", "ram": "pnXkFsqT", "soundCard": "RLfPO09H"}, {"additionals": "AZ5E9t6k", "directXVersion": "P1zRQUCd", "diskSpace": "0jSFjCXX", "graphics": "4hj09A4E", "label": "LMe7T0wN", "osVersion": "1MUSF88J", "processor": "fit9D4HE", "ram": "gPdXta8O", "soundCard": "9uZehhiX"}], "qOtxnWcb": [{"additionals": "TgdMAClX", "directXVersion": "33MkKtDx", "diskSpace": "hrKLCRkv", "graphics": "1cVm1EMr", "label": "90jJANa2", "osVersion": "TcqS2SKj", "processor": "nGW8Fq2k", "ram": "cbTXpuaW", "soundCard": "fQ10pnbC"}, {"additionals": "DTbXNo12", "directXVersion": "UnMym3ot", "diskSpace": "4SSch1xp", "graphics": "xS3uJ69V", "label": "PsKh8cJs", "osVersion": "iQov0r4r", "processor": "ZHwlp96Y", "ram": "jxpPKmfr", "soundCard": "YKAhJ3Lm"}, {"additionals": "CvfuA35c", "directXVersion": "zoPptgWJ", "diskSpace": "YNny6Yen", "graphics": "vcyvu1ko", "label": "IxXP71Cc", "osVersion": "RunQIbB4", "processor": "w4Uf7ugp", "ram": "XNLty7FX", "soundCard": "vi93iGVt"}]}, "platforms": ["Linux", "Windows", "Windows"], "players": ["Single", "Single", "Single"], "primaryGenre": "Casual", "publisher": "RCN6mtsZ", "releaseDate": "1978-04-28T00:00:00Z", "websiteUrl": "4GT5OeZX"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateApp \
    --itemId 'zwxE6Xsy' \
    --namespace $AB_NAMESPACE \
    --storeId 'GNX3RiyB' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 121 'UpdateApp' test.out

#- 122 DisableItem
$CLI_EXE \
    --sn platform \
    --op DisableItem \
    --itemId 'fZAFRMGp' \
    --namespace $AB_NAMESPACE \
    --storeId 'EMctrFwf' \
    > test.out 2>&1
eval_tap $? 122 'DisableItem' test.out

#- 123 GetItemDynamicData
$CLI_EXE \
    --sn platform \
    --op GetItemDynamicData \
    --itemId 'H8KAJPqZ' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 123 'GetItemDynamicData' test.out

#- 124 EnableItem
$CLI_EXE \
    --sn platform \
    --op EnableItem \
    --itemId 'Ur2wy3Fw' \
    --namespace $AB_NAMESPACE \
    --storeId 'OQlTeJdc' \
    > test.out 2>&1
eval_tap $? 124 'EnableItem' test.out

#- 125 FeatureItem
$CLI_EXE \
    --sn platform \
    --op FeatureItem \
    --feature '2TlbY6Kw' \
    --itemId 'hIYIHPB9' \
    --namespace $AB_NAMESPACE \
    --storeId '9agUX3pZ' \
    > test.out 2>&1
eval_tap $? 125 'FeatureItem' test.out

#- 126 DefeatureItem
$CLI_EXE \
    --sn platform \
    --op DefeatureItem \
    --feature '8S5pHEpR' \
    --itemId 'eVtGu5EJ' \
    --namespace $AB_NAMESPACE \
    --storeId 'FoHvaFPu' \
    > test.out 2>&1
eval_tap $? 126 'DefeatureItem' test.out

#- 127 GetLocaleItem
$CLI_EXE \
    --sn platform \
    --op GetLocaleItem \
    --itemId '6Xog1XmC' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --language 'B3h2pEQz' \
    --populateBundle 'false' \
    --region 'UxOxmPN9' \
    --storeId 'VT41fNqz' \
    > test.out 2>&1
eval_tap $? 127 'GetLocaleItem' test.out

#- 128 UpdateItemPurchaseCondition
# body param: body
echo '{"purchaseCondition": {"conditionGroups": [{"operator": "or", "predicates": [{"anyOf": 87, "comparison": "isNot", "name": "SxG5duDf", "predicateType": "EntitlementPredicate", "value": "PAGuLrJO", "values": ["UldAoNNT", "Sk4FVHIA", "USbIsIe5"]}, {"anyOf": 0, "comparison": "isGreaterThan", "name": "bn1yWB2w", "predicateType": "SeasonTierPredicate", "value": "bnZSWugJ", "values": ["BN25cmsQ", "jxI50Q6G", "0OP2l1iN"]}, {"anyOf": 43, "comparison": "is", "name": "HrIpRJ8y", "predicateType": "EntitlementPredicate", "value": "tE5ZbIlp", "values": ["Jpx7RZut", "quNMjh0c", "JwL2Oh7b"]}]}, {"operator": "and", "predicates": [{"anyOf": 76, "comparison": "includes", "name": "2ypQNN3B", "predicateType": "SeasonTierPredicate", "value": "bE1frgRP", "values": ["MkG5HWBt", "coAu7zhY", "PTzR1sGf"]}, {"anyOf": 78, "comparison": "excludes", "name": "Zk6vAvLb", "predicateType": "EntitlementPredicate", "value": "tXwZMAq9", "values": ["jXvjTs0g", "fkCbkn0D", "FYoZ4m7r"]}, {"anyOf": 50, "comparison": "isGreaterThanOrEqual", "name": "NkOtzURu", "predicateType": "EntitlementPredicate", "value": "4uOzY7Bl", "values": ["mXo22Uir", "JncV6OxI", "FuKixKRq"]}]}, {"operator": "or", "predicates": [{"anyOf": 99, "comparison": "includes", "name": "YfvZB4VJ", "predicateType": "SeasonTierPredicate", "value": "WUvBxfcX", "values": ["w7RQmG5w", "7qXTmYJC", "SnNQhUQc"]}, {"anyOf": 88, "comparison": "includes", "name": "mQhA79Or", "predicateType": "SeasonPassPredicate", "value": "PCNZPDYz", "values": ["6ccQ363M", "32ugiHmI", "vjIRkJbR"]}, {"anyOf": 41, "comparison": "isGreaterThan", "name": "bUC11JYh", "predicateType": "SeasonTierPredicate", "value": "0fhwOmQh", "values": ["OqQQKrdG", "QY8xlkuF", "Q4TeeWaK"]}]}]}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateItemPurchaseCondition \
    --itemId 'KVgA5uWa' \
    --namespace $AB_NAMESPACE \
    --storeId 'BHxDMYuI' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 128 'UpdateItemPurchaseCondition' test.out

#- 129 ReturnItem
# body param: body
echo '{"orderNo": "9n5JVFh9"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ReturnItem \
    --itemId 'OUjL6i4A' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 129 'ReturnItem' test.out

#- 130 QueryKeyGroups
$CLI_EXE \
    --sn platform \
    --op QueryKeyGroups \
    --namespace $AB_NAMESPACE \
    --limit '8' \
    --name 'me8HyVG6' \
    --offset '76' \
    --tag 'wcP5yG32' \
    > test.out 2>&1
eval_tap $? 130 'QueryKeyGroups' test.out

#- 131 CreateKeyGroup
# body param: body
echo '{"description": "fehr1sYh", "name": "PUze4bM1", "status": "INACTIVE", "tags": ["MSC2QRfL", "UhcxOCrD", "naoGNozu"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateKeyGroup \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 131 'CreateKeyGroup' test.out

#- 132 GetKeyGroupByBoothName
eval_tap 0 132 'GetKeyGroupByBoothName # SKIP deprecated' test.out

#- 133 GetKeyGroup
$CLI_EXE \
    --sn platform \
    --op GetKeyGroup \
    --keyGroupId '4Zs3ffnW' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 133 'GetKeyGroup' test.out

#- 134 UpdateKeyGroup
# body param: body
echo '{"description": "u7G3VJAP", "name": "n30IY5LP", "status": "INACTIVE", "tags": ["vwuBopZN", "fAvsaC5m", "CAk4UCIN"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateKeyGroup \
    --keyGroupId 'QqkpRntc' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 134 'UpdateKeyGroup' test.out

#- 135 GetKeyGroupDynamic
$CLI_EXE \
    --sn platform \
    --op GetKeyGroupDynamic \
    --keyGroupId '6bM0EbL2' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 135 'GetKeyGroupDynamic' test.out

#- 136 ListKeys
$CLI_EXE \
    --sn platform \
    --op ListKeys \
    --keyGroupId 'Vfxx6h6p' \
    --namespace $AB_NAMESPACE \
    --limit '24' \
    --offset '61' \
    --status 'ACQUIRED' \
    > test.out 2>&1
eval_tap $? 136 'ListKeys' test.out

#- 137 UploadKeys
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UploadKeys \
    --keyGroupId 'hq3qONug' \
    --namespace $AB_NAMESPACE \
    --upload $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 137 'UploadKeys' test.out

#- 138 QueryOrders
$CLI_EXE \
    --sn platform \
    --op QueryOrders \
    --namespace $AB_NAMESPACE \
    --endTime '8ucTvAPw' \
    --limit '90' \
    --offset '8' \
    --orderNos '["ms3bsY8i", "fyw7Bo8Q", "kpe4F32B"]' \
    --sortBy '91ipehd1' \
    --startTime '6Gx3aEKb' \
    --status 'FULFILLED' \
    --withTotal 'false' \
    > test.out 2>&1
eval_tap $? 138 'QueryOrders' test.out

#- 139 GetOrderStatistics
$CLI_EXE \
    --sn platform \
    --op GetOrderStatistics \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 139 'GetOrderStatistics' test.out

#- 140 GetOrder
$CLI_EXE \
    --sn platform \
    --op GetOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'qFFe3LQf' \
    > test.out 2>&1
eval_tap $? 140 'GetOrder' test.out

#- 141 RefundOrder
# body param: body
echo '{"description": "OcUBiIeD"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RefundOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'LGtBKdu2' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 141 'RefundOrder' test.out

#- 142 GetPaymentCallbackConfig
$CLI_EXE \
    --sn platform \
    --op GetPaymentCallbackConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 142 'GetPaymentCallbackConfig' test.out

#- 143 UpdatePaymentCallbackConfig
# body param: body
echo '{"dryRun": false, "notifyUrl": "W6tXSPcB", "privateKey": "Y6dKUJ64"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePaymentCallbackConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 143 'UpdatePaymentCallbackConfig' test.out

#- 144 QueryPaymentNotifications
$CLI_EXE \
    --sn platform \
    --op QueryPaymentNotifications \
    --namespace $AB_NAMESPACE \
    --endDate 'CiqZh0jt' \
    --externalId 'OtQS2MOX' \
    --limit '67' \
    --notificationSource 'ALIPAY' \
    --notificationType 'ChXxA5Vd' \
    --offset '1' \
    --paymentOrderNo 'RSTo6who' \
    --startDate 'pwZySBPW' \
    --status 'IGNORED' \
    > test.out 2>&1
eval_tap $? 144 'QueryPaymentNotifications' test.out

#- 145 QueryPaymentOrders
$CLI_EXE \
    --sn platform \
    --op QueryPaymentOrders \
    --namespace $AB_NAMESPACE \
    --channel 'EXTERNAL' \
    --extTxId 'a4d08mTo' \
    --limit '75' \
    --offset '28' \
    --status 'CHARGE_FAILED' \
    > test.out 2>&1
eval_tap $? 145 'QueryPaymentOrders' test.out

#- 146 CreatePaymentOrderByDedicated
# body param: body
echo '{"currencyCode": "m2XDPpBm", "currencyNamespace": "1hGUZ9ZQ", "customParameters": {"koxwOy6O": {}, "iO12J9vr": {}, "Bc4HhUqk": {}}, "description": "6qSoDKrr", "extOrderNo": "BrV1arxb", "extUserId": "ZZTjhncx", "itemType": "LOOTBOX", "language": "ouG_hGKN-337", "metadata": {"MxVx7rZn": "UuEHUlcc", "Rbcgjn3G": "fuQH4HAR", "7sRQNnmL": "tNEOwT6o"}, "notifyUrl": "1Va4ubmE", "omitNotification": true, "platform": "KxwsFsbe", "price": 50, "recurringPaymentOrderNo": "zhhibZ2K", "region": "XPMwhqAd", "returnUrl": "cCIMjsoh", "sandbox": true, "sku": "3ijY9PLV", "subscriptionId": "Q6njGZZq", "targetNamespace": "0tVOCJJN", "targetUserId": "07CravvV", "title": "LrgUmkaP"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreatePaymentOrderByDedicated \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 146 'CreatePaymentOrderByDedicated' test.out

#- 147 ListExtOrderNoByExtTxId
$CLI_EXE \
    --sn platform \
    --op ListExtOrderNoByExtTxId \
    --namespace $AB_NAMESPACE \
    --extTxId '5xdJSWvq' \
    > test.out 2>&1
eval_tap $? 147 'ListExtOrderNoByExtTxId' test.out

#- 148 GetPaymentOrder
$CLI_EXE \
    --sn platform \
    --op GetPaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'Mr5f1BEj' \
    > test.out 2>&1
eval_tap $? 148 'GetPaymentOrder' test.out

#- 149 ChargePaymentOrder
# body param: body
echo '{"extTxId": "sHryR5iJ", "paymentMethod": "fPrQmw0u", "paymentProvider": "PAYPAL"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ChargePaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'V1RgPVk3' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 149 'ChargePaymentOrder' test.out

#- 150 RefundPaymentOrderByDedicated
# body param: body
echo '{"description": "bkOFA73t"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RefundPaymentOrderByDedicated \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'M0CUwIKs' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 150 'RefundPaymentOrderByDedicated' test.out

#- 151 SimulatePaymentOrderNotification
# body param: body
echo '{"amount": 22, "currencyCode": "VCZwko03", "notifyType": "CHARGE", "paymentProvider": "WALLET", "salesTax": 4, "vat": 65}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SimulatePaymentOrderNotification \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'CIqJpV4j' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 151 'SimulatePaymentOrderNotification' test.out

#- 152 GetPaymentOrderChargeStatus
$CLI_EXE \
    --sn platform \
    --op GetPaymentOrderChargeStatus \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'twGUJpuX' \
    > test.out 2>&1
eval_tap $? 152 'GetPaymentOrderChargeStatus' test.out

#- 153 GetPlatformWalletConfig
$CLI_EXE \
    --sn platform \
    --op GetPlatformWalletConfig \
    --namespace $AB_NAMESPACE \
    --platform 'Epic' \
    > test.out 2>&1
eval_tap $? 153 'GetPlatformWalletConfig' test.out

#- 154 UpdatePlatformWalletConfig
# body param: body
echo '{"allowedBalanceOrigins": ["Oculus", "Playstation", "GooglePlay"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePlatformWalletConfig \
    --namespace $AB_NAMESPACE \
    --platform 'Steam' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 154 'UpdatePlatformWalletConfig' test.out

#- 155 ResetPlatformWalletConfig
$CLI_EXE \
    --sn platform \
    --op ResetPlatformWalletConfig \
    --namespace $AB_NAMESPACE \
    --platform 'IOS' \
    > test.out 2>&1
eval_tap $? 155 'ResetPlatformWalletConfig' test.out

#- 156 GetRevocationConfig
$CLI_EXE \
    --sn platform \
    --op GetRevocationConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 156 'GetRevocationConfig' test.out

#- 157 UpdateRevocationConfig
# body param: body
echo '{"entitlement": {"consumable": {"enabled": false, "strategy": "REVOKE_OR_REPORT"}, "durable": {"enabled": true, "strategy": "CUSTOM"}}, "wallet": {"enabled": true, "strategy": "REVOKE_OR_REPORT"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateRevocationConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 157 'UpdateRevocationConfig' test.out

#- 158 DeleteRevocationConfig
$CLI_EXE \
    --sn platform \
    --op DeleteRevocationConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 158 'DeleteRevocationConfig' test.out

#- 159 QueryRevocationHistories
$CLI_EXE \
    --sn platform \
    --op QueryRevocationHistories \
    --namespace $AB_NAMESPACE \
    --endTime 'BRpNNYTw' \
    --limit '50' \
    --offset '10' \
    --source 'OTHER' \
    --startTime 'HC1RcLtq' \
    --status 'FAIL' \
    --transactionId 'sLBSWzfa' \
    --userId 'BsadKSZn' \
    > test.out 2>&1
eval_tap $? 159 'QueryRevocationHistories' test.out

#- 160 GetRevocationPluginConfig
$CLI_EXE \
    --sn platform \
    --op GetRevocationPluginConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 160 'GetRevocationPluginConfig' test.out

#- 161 UpdateRevocationPluginConfig
# body param: body
echo '{"appConfig": {"appName": "W54UFG1E"}, "customConfig": {"connectionType": "INSECURE", "grpcServerAddress": "EAlisUIY"}, "extendType": "CUSTOM"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateRevocationPluginConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 161 'UpdateRevocationPluginConfig' test.out

#- 162 DeleteRevocationPluginConfig
$CLI_EXE \
    --sn platform \
    --op DeleteRevocationPluginConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 162 'DeleteRevocationPluginConfig' test.out

#- 163 UploadRevocationPluginConfigCert
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UploadRevocationPluginConfigCert \
    --namespace $AB_NAMESPACE \
    --upload $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 163 'UploadRevocationPluginConfigCert' test.out

#- 164 CreateReward
# body param: body
echo '{"description": "sn16cjxn", "eventTopic": "gLqBqQcO", "maxAwarded": 91, "maxAwardedPerUser": 72, "namespaceExpression": "trmIB9NB", "rewardCode": "cnB9DdQn", "rewardConditions": [{"condition": "qUvUWTOu", "conditionName": "lNV5Sqoi", "eventName": "MLbNhgs7", "rewardItems": [{"duration": 95, "endDate": "1973-11-09T00:00:00Z", "itemId": "r6TUDQa8", "quantity": 5}, {"duration": 47, "endDate": "1997-02-13T00:00:00Z", "itemId": "cr7GNN4p", "quantity": 85}, {"duration": 93, "endDate": "1988-09-02T00:00:00Z", "itemId": "QXrhMKml", "quantity": 39}]}, {"condition": "PbQufR5Q", "conditionName": "Ins80ZMK", "eventName": "NJxMP7qt", "rewardItems": [{"duration": 67, "endDate": "1991-08-23T00:00:00Z", "itemId": "Sbb4Ulg6", "quantity": 68}, {"duration": 66, "endDate": "1975-01-20T00:00:00Z", "itemId": "J4aDRTeJ", "quantity": 29}, {"duration": 2, "endDate": "1972-04-29T00:00:00Z", "itemId": "ZCQv59pw", "quantity": 91}]}, {"condition": "X6Nt25Vd", "conditionName": "NJaDiQZN", "eventName": "3STsWY4a", "rewardItems": [{"duration": 61, "endDate": "1986-11-09T00:00:00Z", "itemId": "a8KHAPYk", "quantity": 49}, {"duration": 74, "endDate": "1973-02-07T00:00:00Z", "itemId": "0QWdmlJh", "quantity": 99}, {"duration": 76, "endDate": "1994-04-16T00:00:00Z", "itemId": "a6RY3Y4a", "quantity": 37}]}], "userIdExpression": "RlGXPXKv"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateReward \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 164 'CreateReward' test.out

#- 165 QueryRewards
$CLI_EXE \
    --sn platform \
    --op QueryRewards \
    --namespace $AB_NAMESPACE \
    --eventTopic 'afnOrZN5' \
    --limit '45' \
    --offset '78' \
    --sortBy '["rewardCode:asc"]' \
    > test.out 2>&1
eval_tap $? 165 'QueryRewards' test.out

#- 166 ExportRewards
$CLI_EXE \
    --sn platform \
    --op ExportRewards \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 166 'ExportRewards' test.out

#- 167 ImportRewards
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op ImportRewards \
    --namespace $AB_NAMESPACE \
    --replaceExisting 'false' \
    --upload $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 167 'ImportRewards' test.out

#- 168 GetReward
$CLI_EXE \
    --sn platform \
    --op GetReward \
    --namespace $AB_NAMESPACE \
    --rewardId 'AaIzu5vQ' \
    > test.out 2>&1
eval_tap $? 168 'GetReward' test.out

#- 169 UpdateReward
# body param: body
echo '{"description": "Z99kKcUR", "eventTopic": "528BPvOK", "maxAwarded": 90, "maxAwardedPerUser": 68, "namespaceExpression": "ReN4XBtM", "rewardCode": "IHgrHIUS", "rewardConditions": [{"condition": "GoMYRIv1", "conditionName": "PCgLoHm9", "eventName": "TJk6AfxK", "rewardItems": [{"duration": 45, "endDate": "1975-08-14T00:00:00Z", "itemId": "2zn2B98E", "quantity": 4}, {"duration": 97, "endDate": "1991-10-31T00:00:00Z", "itemId": "6HnuEbk7", "quantity": 34}, {"duration": 12, "endDate": "1977-04-18T00:00:00Z", "itemId": "IFFlnLde", "quantity": 52}]}, {"condition": "UDhJ01UD", "conditionName": "w7fPPFjm", "eventName": "vWCcX5uA", "rewardItems": [{"duration": 11, "endDate": "1983-07-29T00:00:00Z", "itemId": "D7vpgmXz", "quantity": 0}, {"duration": 63, "endDate": "1992-10-03T00:00:00Z", "itemId": "a0TZ36S8", "quantity": 68}, {"duration": 66, "endDate": "1976-05-24T00:00:00Z", "itemId": "YGNYQKCH", "quantity": 24}]}, {"condition": "C0nosJCY", "conditionName": "hKzdP0sA", "eventName": "ucsW5EGu", "rewardItems": [{"duration": 63, "endDate": "1979-07-02T00:00:00Z", "itemId": "5yovMn36", "quantity": 56}, {"duration": 77, "endDate": "1977-06-14T00:00:00Z", "itemId": "qNDbqjV1", "quantity": 83}, {"duration": 65, "endDate": "1994-04-11T00:00:00Z", "itemId": "odMcPEc1", "quantity": 38}]}], "userIdExpression": "CJUXxGqI"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateReward \
    --namespace $AB_NAMESPACE \
    --rewardId 'MctC6CBU' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 169 'UpdateReward' test.out

#- 170 DeleteReward
$CLI_EXE \
    --sn platform \
    --op DeleteReward \
    --namespace $AB_NAMESPACE \
    --rewardId 'GSFmggyB' \
    > test.out 2>&1
eval_tap $? 170 'DeleteReward' test.out

#- 171 CheckEventCondition
# body param: body
echo '{"payload": {"cRqAU3Ky": {}, "Mfr41L6h": {}, "o90OyJK1": {}}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CheckEventCondition \
    --namespace $AB_NAMESPACE \
    --rewardId 'tTe3mQ1s' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 171 'CheckEventCondition' test.out

#- 172 DeleteRewardConditionRecord
# body param: body
echo '{"conditionName": "hIvT1TlG", "userId": "5bZuBPHA"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op DeleteRewardConditionRecord \
    --namespace $AB_NAMESPACE \
    --rewardId '4fBwKjN9' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 172 'DeleteRewardConditionRecord' test.out

#- 173 QuerySections
$CLI_EXE \
    --sn platform \
    --op QuerySections \
    --namespace $AB_NAMESPACE \
    --end 'yvM4o3UI' \
    --limit '74' \
    --offset '57' \
    --start 'caZGX5W4' \
    --storeId 'CHh1MOSL' \
    --viewId 'NVkbkWRe' \
    > test.out 2>&1
eval_tap $? 173 'QuerySections' test.out

#- 174 CreateSection
# body param: body
echo '{"active": false, "displayOrder": 25, "endDate": "1991-05-29T00:00:00Z", "ext": {"rcG7mj2Q": {}, "Z2iNRxJh": {}, "KSQRwaff": {}}, "fixedPeriodRotationConfig": {"backfillType": "CUSTOM", "duration": 69, "itemCount": 27, "rule": "SEQUENCE"}, "items": [{"id": "FTzAs1ZH", "sku": "nzklthAp"}, {"id": "6lZEzA57", "sku": "hGtlehbR"}, {"id": "7yaSBUyX", "sku": "mOEuH1nm"}], "localizations": {"OyQlIfrR": {"description": "2sVNijC9", "localExt": {"f8znOSEc": {}, "9Wkrvr3L": {}, "ethMOGmi": {}}, "longDescription": "oPrACkou", "title": "QTpOxrk5"}, "3AwXyj0Z": {"description": "WY74h3QS", "localExt": {"KfOsXl5S": {}, "DnY9mNCp": {}, "Az98hAuv": {}}, "longDescription": "POFdhlfP", "title": "XbD1k3U6"}, "wBCyTGTV": {"description": "yd7r7Ayo", "localExt": {"Uceo5VmT": {}, "Q55JjhNC": {}, "XuPTXUty": {}}, "longDescription": "bVdCNt65", "title": "aLVu83T2"}}, "name": "gLUfLT5p", "rotationType": "FIXED_PERIOD", "startDate": "1971-04-07T00:00:00Z", "viewId": "BPkPhakv"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateSection \
    --namespace $AB_NAMESPACE \
    --storeId 'n5ICOo4H' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 174 'CreateSection' test.out

#- 175 PurgeExpiredSection
$CLI_EXE \
    --sn platform \
    --op PurgeExpiredSection \
    --namespace $AB_NAMESPACE \
    --storeId 'pJePhAAy' \
    > test.out 2>&1
eval_tap $? 175 'PurgeExpiredSection' test.out

#- 176 GetSection
$CLI_EXE \
    --sn platform \
    --op GetSection \
    --namespace $AB_NAMESPACE \
    --sectionId 'n7Y1vXDQ' \
    --storeId 'Gwz3TJg0' \
    > test.out 2>&1
eval_tap $? 176 'GetSection' test.out

#- 177 UpdateSection
# body param: body
echo '{"active": true, "displayOrder": 22, "endDate": "1999-04-23T00:00:00Z", "ext": {"q6VJpZgr": {}, "iTcua7v2": {}, "rbiSGAxJ": {}}, "fixedPeriodRotationConfig": {"backfillType": "CUSTOM", "duration": 83, "itemCount": 9, "rule": "SEQUENCE"}, "items": [{"id": "yrMuiFjx", "sku": "4hAyJFVI"}, {"id": "P6DYzMmY", "sku": "L4F9T2Yp"}, {"id": "1CAt3lZ8", "sku": "ahDmBros"}], "localizations": {"cPAk2Cqr": {"description": "SwzpPJBz", "localExt": {"9gsmWR1G": {}, "3qs5bOjb": {}, "skLWYzEV": {}}, "longDescription": "MopSndNo", "title": "Zu7NckNJ"}, "o65CENgP": {"description": "Qi5surKw", "localExt": {"djpm3ay5": {}, "ZZVNzeKz": {}, "LdEILSig": {}}, "longDescription": "5dL0y6UQ", "title": "EgrVTOjj"}, "0pl0rnxd": {"description": "Pq81bOek", "localExt": {"MfiXNawB": {}, "p2zWQUMz": {}, "t2UyHWsa": {}}, "longDescription": "FW0Xv1Xg", "title": "3Nbbolcz"}}, "name": "EGvdtg7X", "rotationType": "FIXED_PERIOD", "startDate": "1976-04-25T00:00:00Z", "viewId": "Vau9Jlzb"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateSection \
    --namespace $AB_NAMESPACE \
    --sectionId 'iikBZVmM' \
    --storeId 'SaxAXluF' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 177 'UpdateSection' test.out

#- 178 DeleteSection
$CLI_EXE \
    --sn platform \
    --op DeleteSection \
    --namespace $AB_NAMESPACE \
    --sectionId 'Po47knbt' \
    --storeId 'ORA0ZeMD' \
    > test.out 2>&1
eval_tap $? 178 'DeleteSection' test.out

#- 179 ListStores
$CLI_EXE \
    --sn platform \
    --op ListStores \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 179 'ListStores' test.out

#- 180 CreateStore
# body param: body
echo '{"defaultLanguage": "PXv5n6ti", "defaultRegion": "4ovVrdyM", "description": "wgN8avtv", "supportedLanguages": ["JM7UkNQo", "gtJnKGUU", "ACc1ldgU"], "supportedRegions": ["z3KSS88K", "Dozfq8nL", "8XDfzFLv"], "title": "jSLAyUb4"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateStore \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 180 'CreateStore' test.out

#- 181 ImportStore
eval_tap 0 181 'ImportStore # SKIP deprecated' test.out

#- 182 GetPublishedStore
$CLI_EXE \
    --sn platform \
    --op GetPublishedStore \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 182 'GetPublishedStore' test.out

#- 183 DeletePublishedStore
$CLI_EXE \
    --sn platform \
    --op DeletePublishedStore \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 183 'DeletePublishedStore' test.out

#- 184 GetPublishedStoreBackup
$CLI_EXE \
    --sn platform \
    --op GetPublishedStoreBackup \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 184 'GetPublishedStoreBackup' test.out

#- 185 RollbackPublishedStore
$CLI_EXE \
    --sn platform \
    --op RollbackPublishedStore \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 185 'RollbackPublishedStore' test.out

#- 186 GetStore
$CLI_EXE \
    --sn platform \
    --op GetStore \
    --namespace $AB_NAMESPACE \
    --storeId 'qvgSmXwO' \
    > test.out 2>&1
eval_tap $? 186 'GetStore' test.out

#- 187 UpdateStore
# body param: body
echo '{"defaultLanguage": "I4nnJOdY", "defaultRegion": "XyRrIBBJ", "description": "m6hn7oaP", "supportedLanguages": ["gFNhhcUw", "4odHLiLe", "5Ex4102S"], "supportedRegions": ["37cEGUe8", "vj8kf4sD", "CzGjA9vU"], "title": "usTH9Vsd"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateStore \
    --namespace $AB_NAMESPACE \
    --storeId 'f3FoGxfC' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 187 'UpdateStore' test.out

#- 188 DeleteStore
$CLI_EXE \
    --sn platform \
    --op DeleteStore \
    --namespace $AB_NAMESPACE \
    --storeId 'bZvqKmRi' \
    > test.out 2>&1
eval_tap $? 188 'DeleteStore' test.out

#- 189 QueryChanges
$CLI_EXE \
    --sn platform \
    --op QueryChanges \
    --namespace $AB_NAMESPACE \
    --storeId 'P1VV1F9R' \
    --action 'UPDATE' \
    --itemSku 'LaqzVAt7' \
    --itemType 'SEASON' \
    --limit '32' \
    --offset '39' \
    --selected 'true' \
    --sortBy '["updatedAt:desc", "updatedAt", "createdAt"]' \
    --status 'PUBLISHED' \
    --type 'CATEGORY' \
    --updatedAtEnd 'O5ctXa8E' \
    --updatedAtStart 'bxld8HMm' \
    > test.out 2>&1
eval_tap $? 189 'QueryChanges' test.out

#- 190 PublishAll
$CLI_EXE \
    --sn platform \
    --op PublishAll \
    --namespace $AB_NAMESPACE \
    --storeId 'ta9bG84d' \
    > test.out 2>&1
eval_tap $? 190 'PublishAll' test.out

#- 191 PublishSelected
$CLI_EXE \
    --sn platform \
    --op PublishSelected \
    --namespace $AB_NAMESPACE \
    --storeId 'mQnV1B4v' \
    > test.out 2>&1
eval_tap $? 191 'PublishSelected' test.out

#- 192 SelectAllRecords
$CLI_EXE \
    --sn platform \
    --op SelectAllRecords \
    --namespace $AB_NAMESPACE \
    --storeId 'yBQj6T2f' \
    > test.out 2>&1
eval_tap $? 192 'SelectAllRecords' test.out

#- 193 GetStatistic
$CLI_EXE \
    --sn platform \
    --op GetStatistic \
    --namespace $AB_NAMESPACE \
    --storeId 'VId4Lx1U' \
    --action 'CREATE' \
    --itemSku '7d9JVNVl' \
    --itemType 'LOOTBOX' \
    --type 'CATEGORY' \
    --updatedAtEnd 'ndl41RCj' \
    --updatedAtStart '8zbhswMI' \
    > test.out 2>&1
eval_tap $? 193 'GetStatistic' test.out

#- 194 UnselectAllRecords
$CLI_EXE \
    --sn platform \
    --op UnselectAllRecords \
    --namespace $AB_NAMESPACE \
    --storeId 'CCCCo0O1' \
    > test.out 2>&1
eval_tap $? 194 'UnselectAllRecords' test.out

#- 195 SelectRecord
$CLI_EXE \
    --sn platform \
    --op SelectRecord \
    --changeId 'M056qo0q' \
    --namespace $AB_NAMESPACE \
    --storeId 'VDEGQ5lD' \
    > test.out 2>&1
eval_tap $? 195 'SelectRecord' test.out

#- 196 UnselectRecord
$CLI_EXE \
    --sn platform \
    --op UnselectRecord \
    --changeId 'SudxgDO0' \
    --namespace $AB_NAMESPACE \
    --storeId 'j2btJ53d' \
    > test.out 2>&1
eval_tap $? 196 'UnselectRecord' test.out

#- 197 CloneStore
$CLI_EXE \
    --sn platform \
    --op CloneStore \
    --namespace $AB_NAMESPACE \
    --storeId 'J0VDOAjS' \
    --targetStoreId '42fzYFUW' \
    > test.out 2>&1
eval_tap $? 197 'CloneStore' test.out

#- 198 ExportStore
eval_tap 0 198 'ExportStore # SKIP deprecated' test.out

#- 199 QuerySubscriptions
$CLI_EXE \
    --sn platform \
    --op QuerySubscriptions \
    --namespace $AB_NAMESPACE \
    --chargeStatus 'RECURRING_CHARGING' \
    --itemId '4nifGEgQ' \
    --limit '32' \
    --offset '76' \
    --sku 'eXjnGFZO' \
    --status 'EXPIRED' \
    --subscribedBy 'USER' \
    --userId 'bRSAMG0q' \
    > test.out 2>&1
eval_tap $? 199 'QuerySubscriptions' test.out

#- 200 RecurringChargeSubscription
$CLI_EXE \
    --sn platform \
    --op RecurringChargeSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'S0txMA73' \
    > test.out 2>&1
eval_tap $? 200 'RecurringChargeSubscription' test.out

#- 201 GetTicketDynamic
$CLI_EXE \
    --sn platform \
    --op GetTicketDynamic \
    --boothName 'To5JbqVX' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 201 'GetTicketDynamic' test.out

#- 202 DecreaseTicketSale
# body param: body
echo '{"orderNo": "TnTX92YF"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op DecreaseTicketSale \
    --boothName 'nrm63h0F' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 202 'DecreaseTicketSale' test.out

#- 203 GetTicketBoothID
$CLI_EXE \
    --sn platform \
    --op GetTicketBoothID \
    --boothName 'm4Y94rIO' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 203 'GetTicketBoothID' test.out

#- 204 IncreaseTicketSale
# body param: body
echo '{"count": 32, "orderNo": "g8I6Ei6s"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op IncreaseTicketSale \
    --boothName 'jFutl0s2' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 204 'IncreaseTicketSale' test.out

#- 205 UnlockSteamUserAchievement
# body param: body
echo '{"achievements": [{"id": "mxL5eLF5", "value": 22}, {"id": "8MbLuXxO", "value": 98}, {"id": "k9AYW7UT", "value": 65}], "steamUserId": "3Xf6lGv2"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UnlockSteamUserAchievement \
    --namespace $AB_NAMESPACE \
    --userId '0EKQbxTu' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 205 'UnlockSteamUserAchievement' test.out

#- 206 GetXblUserAchievements
$CLI_EXE \
    --sn platform \
    --op GetXblUserAchievements \
    --namespace $AB_NAMESPACE \
    --userId 'qpFMf9dO' \
    --xboxUserId 'Sj2A1Qtj' \
    > test.out 2>&1
eval_tap $? 206 'GetXblUserAchievements' test.out

#- 207 UpdateXblUserAchievement
# body param: body
echo '{"achievements": [{"id": "e8vTICyv", "percentComplete": 29}, {"id": "Cxm3qQd0", "percentComplete": 61}, {"id": "GCiscTgP", "percentComplete": 50}], "serviceConfigId": "lkI1VjRJ", "titleId": "Ms05kjUZ", "xboxUserId": "e90RMDM8"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXblUserAchievement \
    --namespace $AB_NAMESPACE \
    --userId 'e8uq1hXk' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 207 'UpdateXblUserAchievement' test.out

#- 208 AnonymizeCampaign
$CLI_EXE \
    --sn platform \
    --op AnonymizeCampaign \
    --namespace $AB_NAMESPACE \
    --userId 'bWILnkv2' \
    > test.out 2>&1
eval_tap $? 208 'AnonymizeCampaign' test.out

#- 209 AnonymizeEntitlement
$CLI_EXE \
    --sn platform \
    --op AnonymizeEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'ltBAOOel' \
    > test.out 2>&1
eval_tap $? 209 'AnonymizeEntitlement' test.out

#- 210 AnonymizeFulfillment
$CLI_EXE \
    --sn platform \
    --op AnonymizeFulfillment \
    --namespace $AB_NAMESPACE \
    --userId 'Vgqs5fmM' \
    > test.out 2>&1
eval_tap $? 210 'AnonymizeFulfillment' test.out

#- 211 AnonymizeIntegration
$CLI_EXE \
    --sn platform \
    --op AnonymizeIntegration \
    --namespace $AB_NAMESPACE \
    --userId 'OryMPmYt' \
    > test.out 2>&1
eval_tap $? 211 'AnonymizeIntegration' test.out

#- 212 AnonymizeOrder
$CLI_EXE \
    --sn platform \
    --op AnonymizeOrder \
    --namespace $AB_NAMESPACE \
    --userId 'yQzsQUuk' \
    > test.out 2>&1
eval_tap $? 212 'AnonymizeOrder' test.out

#- 213 AnonymizePayment
$CLI_EXE \
    --sn platform \
    --op AnonymizePayment \
    --namespace $AB_NAMESPACE \
    --userId 'N95DfnoS' \
    > test.out 2>&1
eval_tap $? 213 'AnonymizePayment' test.out

#- 214 AnonymizeRevocation
$CLI_EXE \
    --sn platform \
    --op AnonymizeRevocation \
    --namespace $AB_NAMESPACE \
    --userId 'soHBh6pZ' \
    > test.out 2>&1
eval_tap $? 214 'AnonymizeRevocation' test.out

#- 215 AnonymizeSubscription
$CLI_EXE \
    --sn platform \
    --op AnonymizeSubscription \
    --namespace $AB_NAMESPACE \
    --userId 'USEgVbgY' \
    > test.out 2>&1
eval_tap $? 215 'AnonymizeSubscription' test.out

#- 216 AnonymizeWallet
$CLI_EXE \
    --sn platform \
    --op AnonymizeWallet \
    --namespace $AB_NAMESPACE \
    --userId '8KNpR6DC' \
    > test.out 2>&1
eval_tap $? 216 'AnonymizeWallet' test.out

#- 217 GetUserDLCByPlatform
$CLI_EXE \
    --sn platform \
    --op GetUserDLCByPlatform \
    --namespace $AB_NAMESPACE \
    --userId 'NOYamVe4' \
    --type 'EPICGAMES' \
    > test.out 2>&1
eval_tap $? 217 'GetUserDLCByPlatform' test.out

#- 218 GetUserDLC
$CLI_EXE \
    --sn platform \
    --op GetUserDLC \
    --namespace $AB_NAMESPACE \
    --userId 'VG2vhEzs' \
    --type 'OCULUS' \
    > test.out 2>&1
eval_tap $? 218 'GetUserDLC' test.out

#- 219 QueryUserEntitlements
$CLI_EXE \
    --sn platform \
    --op QueryUserEntitlements \
    --namespace $AB_NAMESPACE \
    --userId 'WoldgQIT' \
    --activeOnly 'true' \
    --appType 'DEMO' \
    --entitlementClazz 'OPTIONBOX' \
    --entitlementName '36CsseJb' \
    --features '["2MR0MykQ", "4n3u4fID", "IkhFhu5i"]' \
    --itemId '["JFdXxMSt", "hXGhD4JV", "oj1MkMh9"]' \
    --limit '28' \
    --offset '25' \
    > test.out 2>&1
eval_tap $? 219 'QueryUserEntitlements' test.out

#- 220 GrantUserEntitlement
# body param: body
echo '[{"endDate": "1974-06-05T00:00:00Z", "grantedCode": "S1lmPE61", "itemId": "fmMjgVIZ", "itemNamespace": "1LzhHRnP", "language": "gbpb_UglK-SJ", "quantity": 41, "region": "TSIxcqBD", "source": "REDEEM_CODE", "startDate": "1994-07-27T00:00:00Z", "storeId": "4J9UcmLn"}, {"endDate": "1987-05-18T00:00:00Z", "grantedCode": "zJhty0JQ", "itemId": "2o6UCGP9", "itemNamespace": "WPd1x1tw", "language": "KDBW_Cbxx_xz", "quantity": 10, "region": "fmqAwkCI", "source": "ACHIEVEMENT", "startDate": "1975-06-01T00:00:00Z", "storeId": "TTdnLl7a"}, {"endDate": "1978-03-29T00:00:00Z", "grantedCode": "atVJ6JyX", "itemId": "vn7SpD5I", "itemNamespace": "iAc8fntW", "language": "MwY_372", "quantity": 78, "region": "sVlfr5Gk", "source": "REFERRAL_BONUS", "startDate": "1993-09-02T00:00:00Z", "storeId": "LGQobonB"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op GrantUserEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'EkT9uqo6' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 220 'GrantUserEntitlement' test.out

#- 221 GetUserAppEntitlementByAppId
$CLI_EXE \
    --sn platform \
    --op GetUserAppEntitlementByAppId \
    --namespace $AB_NAMESPACE \
    --userId '1ve77day' \
    --activeOnly 'true' \
    --appId 'qjYMF7Ys' \
    > test.out 2>&1
eval_tap $? 221 'GetUserAppEntitlementByAppId' test.out

#- 222 QueryUserEntitlementsByAppType
$CLI_EXE \
    --sn platform \
    --op QueryUserEntitlementsByAppType \
    --namespace $AB_NAMESPACE \
    --userId '59LhMJco' \
    --activeOnly 'false' \
    --limit '19' \
    --offset '38' \
    --appType 'DLC' \
    > test.out 2>&1
eval_tap $? 222 'QueryUserEntitlementsByAppType' test.out

#- 223 GetUserEntitlementByItemId
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'vgN0WLsw' \
    --activeOnly 'true' \
    --entitlementClazz 'APP' \
    --itemId 'o97VpOp0' \
    > test.out 2>&1
eval_tap $? 223 'GetUserEntitlementByItemId' test.out

#- 224 GetUserActiveEntitlementsByItemIds
$CLI_EXE \
    --sn platform \
    --op GetUserActiveEntitlementsByItemIds \
    --namespace $AB_NAMESPACE \
    --userId 'Y8z04VZ5' \
    --ids '["kEeGOBix", "oFF7xy2H", "zreev653"]' \
    > test.out 2>&1
eval_tap $? 224 'GetUserActiveEntitlementsByItemIds' test.out

#- 225 GetUserEntitlementBySku
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementBySku \
    --namespace $AB_NAMESPACE \
    --userId '3QVWYqkL' \
    --activeOnly 'false' \
    --entitlementClazz 'OPTIONBOX' \
    --sku 'L1QJy2k7' \
    > test.out 2>&1
eval_tap $? 225 'GetUserEntitlementBySku' test.out

#- 226 ExistsAnyUserActiveEntitlement
$CLI_EXE \
    --sn platform \
    --op ExistsAnyUserActiveEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'FnbSkyFm' \
    --appIds '["O8xSEJ5E", "E827l7Gh", "zVFYh0PB"]' \
    --itemIds '["0fd9CQyk", "i67kXOul", "l274AOjG"]' \
    --skus '["rzA7nj0r", "cTKQSSbe", "TEDpE4F4"]' \
    > test.out 2>&1
eval_tap $? 226 'ExistsAnyUserActiveEntitlement' test.out

#- 227 ExistsAnyUserActiveEntitlementByItemIds
$CLI_EXE \
    --sn platform \
    --op ExistsAnyUserActiveEntitlementByItemIds \
    --namespace $AB_NAMESPACE \
    --userId '2zY3ieGt' \
    --itemIds '["FGFq6Ucw", "8EdxQ0e3", "BWd1UNeb"]' \
    > test.out 2>&1
eval_tap $? 227 'ExistsAnyUserActiveEntitlementByItemIds' test.out

#- 228 GetUserAppEntitlementOwnershipByAppId
$CLI_EXE \
    --sn platform \
    --op GetUserAppEntitlementOwnershipByAppId \
    --namespace $AB_NAMESPACE \
    --userId 'IHbCa9Vk' \
    --appId 'wd5eqzUU' \
    > test.out 2>&1
eval_tap $? 228 'GetUserAppEntitlementOwnershipByAppId' test.out

#- 229 GetUserEntitlementOwnershipByItemId
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementOwnershipByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'n3iiamQY' \
    --entitlementClazz 'MEDIA' \
    --itemId 'GEz9g3qc' \
    > test.out 2>&1
eval_tap $? 229 'GetUserEntitlementOwnershipByItemId' test.out

#- 230 GetUserEntitlementOwnershipByItemIds
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementOwnershipByItemIds \
    --namespace $AB_NAMESPACE \
    --userId 'p4R5CSsW' \
    --ids '["wzeKxomq", "dBxLPgLo", "qS5TnQ5Q"]' \
    > test.out 2>&1
eval_tap $? 230 'GetUserEntitlementOwnershipByItemIds' test.out

#- 231 GetUserEntitlementOwnershipBySku
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementOwnershipBySku \
    --namespace $AB_NAMESPACE \
    --userId 'JXe82iuw' \
    --entitlementClazz 'APP' \
    --sku 'lfbSUpOk' \
    > test.out 2>&1
eval_tap $? 231 'GetUserEntitlementOwnershipBySku' test.out

#- 232 RevokeAllEntitlements
$CLI_EXE \
    --sn platform \
    --op RevokeAllEntitlements \
    --namespace $AB_NAMESPACE \
    --userId 'LK6Lel4e' \
    > test.out 2>&1
eval_tap $? 232 'RevokeAllEntitlements' test.out

#- 233 RevokeUserEntitlements
$CLI_EXE \
    --sn platform \
    --op RevokeUserEntitlements \
    --namespace $AB_NAMESPACE \
    --userId 'eSoQ69n3' \
    --entitlementIds 'DnBs2pgI' \
    > test.out 2>&1
eval_tap $? 233 'RevokeUserEntitlements' test.out

#- 234 GetUserEntitlement
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlement \
    --entitlementId '3V6RLXdA' \
    --namespace $AB_NAMESPACE \
    --userId 'MbQTLJED' \
    > test.out 2>&1
eval_tap $? 234 'GetUserEntitlement' test.out

#- 235 UpdateUserEntitlement
# body param: body
echo '{"endDate": "1980-06-04T00:00:00Z", "nullFieldList": ["j7oRohRB", "qusirtUY", "xwjRE3NR"], "startDate": "1973-11-09T00:00:00Z", "status": "ACTIVE", "useCount": 33}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateUserEntitlement \
    --entitlementId 'QtCHtfpS' \
    --namespace $AB_NAMESPACE \
    --userId '99HSpOFB' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 235 'UpdateUserEntitlement' test.out

#- 236 ConsumeUserEntitlement
# body param: body
echo '{"options": ["SGpIaaRs", "MvgUCkA2", "yaqqR3Co"], "requestId": "byBzggUb", "useCount": 58}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ConsumeUserEntitlement \
    --entitlementId 'h23tHUiq' \
    --namespace $AB_NAMESPACE \
    --userId 'D1FwZPuf' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 236 'ConsumeUserEntitlement' test.out

#- 237 DisableUserEntitlement
$CLI_EXE \
    --sn platform \
    --op DisableUserEntitlement \
    --entitlementId 'sGutWj4G' \
    --namespace $AB_NAMESPACE \
    --userId 'eTjL2ZO8' \
    > test.out 2>&1
eval_tap $? 237 'DisableUserEntitlement' test.out

#- 238 EnableUserEntitlement
$CLI_EXE \
    --sn platform \
    --op EnableUserEntitlement \
    --entitlementId 'NjiGWVJI' \
    --namespace $AB_NAMESPACE \
    --userId 'vunLcFZk' \
    > test.out 2>&1
eval_tap $? 238 'EnableUserEntitlement' test.out

#- 239 GetUserEntitlementHistories
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementHistories \
    --entitlementId 'iqorhzSE' \
    --namespace $AB_NAMESPACE \
    --userId 'y3yG0Qg7' \
    > test.out 2>&1
eval_tap $? 239 'GetUserEntitlementHistories' test.out

#- 240 RevokeUserEntitlement
$CLI_EXE \
    --sn platform \
    --op RevokeUserEntitlement \
    --entitlementId 'KXGxqMFF' \
    --namespace $AB_NAMESPACE \
    --userId 'Pi24K9dh' \
    > test.out 2>&1
eval_tap $? 240 'RevokeUserEntitlement' test.out

#- 241 RevokeUseCount
# body param: body
echo '{"reason": "uffGeYN3", "useCount": 34}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RevokeUseCount \
    --entitlementId 'Mpp0epzU' \
    --namespace $AB_NAMESPACE \
    --userId 'SNIz6Ggg' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 241 'RevokeUseCount' test.out

#- 242 SellUserEntitlement
# body param: body
echo '{"requestId": "xyaYQUdw", "useCount": 14}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SellUserEntitlement \
    --entitlementId 'osR4c4Oh' \
    --namespace $AB_NAMESPACE \
    --userId '2kH3veow' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 242 'SellUserEntitlement' test.out

#- 243 FulfillItem
# body param: body
echo '{"duration": 27, "endDate": "1987-04-09T00:00:00Z", "itemId": "wvhnIrTX", "itemSku": "B70oXRU1", "language": "Vx1jHWIW", "metadata": {"tdS3pZDb": {}, "GBNN4hq3": {}, "9eEv7wvz": {}}, "order": {"currency": {"currencyCode": "VUjgh3XA", "currencySymbol": "BlYtsA55", "currencyType": "VIRTUAL", "decimals": 0, "namespace": "WOeiII7K"}, "ext": {"l7XP3yr9": {}, "qSdLsKtZ": {}, "j7btKa0O": {}}, "free": false}, "orderNo": "q8SLxZh9", "origin": "Playstation", "quantity": 16, "region": "VhjA4AQL", "source": "SELL_BACK", "startDate": "1983-09-22T00:00:00Z", "storeId": "TB7z2DQV"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op FulfillItem \
    --namespace $AB_NAMESPACE \
    --userId 'TFaXZs2z' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 243 'FulfillItem' test.out

#- 244 RedeemCode
# body param: body
echo '{"code": "Kwgy7CWJ", "language": "xP-Vk", "region": "0P4JMTar"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RedeemCode \
    --namespace $AB_NAMESPACE \
    --userId 'fgRj6F8h' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 244 'RedeemCode' test.out

#- 245 FulfillRewards
# body param: body
echo '{"metadata": {"9FWZ6YHQ": {}, "glk0gxAu": {}, "KwWrCpca": {}}, "origin": "IOS", "rewards": [{"currency": {"currencyCode": "7qEle4Lv", "namespace": "TwKwRGoh"}, "item": {"itemId": "SwOxkQRk", "itemSku": "u3KBinsw", "itemType": "wR6YxuTD"}, "quantity": 59, "type": "CURRENCY"}, {"currency": {"currencyCode": "qnWRc6F5", "namespace": "m4V0fgz3"}, "item": {"itemId": "eunWIDjO", "itemSku": "FXuv66Vt", "itemType": "fUYzn5QY"}, "quantity": 28, "type": "CURRENCY"}, {"currency": {"currencyCode": "gcd6vkC6", "namespace": "bFZm2T5F"}, "item": {"itemId": "stu5u8QZ", "itemSku": "nfGQNcoZ", "itemType": "mT4xWoqi"}, "quantity": 1, "type": "ITEM"}], "source": "DLC", "transactionId": "tzUZDD1T"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op FulfillRewards \
    --namespace $AB_NAMESPACE \
    --userId 'PuzO3hxm' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 245 'FulfillRewards' test.out

#- 246 QueryUserIAPOrders
$CLI_EXE \
    --sn platform \
    --op QueryUserIAPOrders \
    --namespace $AB_NAMESPACE \
    --userId '6uOEO2F6' \
    --endTime 'cfMeJaGA' \
    --limit '52' \
    --offset '3' \
    --productId 'Ir5ZlVqy' \
    --startTime 'ZrImj5lw' \
    --status 'FULFILLED' \
    --type 'EPICGAMES' \
    > test.out 2>&1
eval_tap $? 246 'QueryUserIAPOrders' test.out

#- 247 QueryAllUserIAPOrders
$CLI_EXE \
    --sn platform \
    --op QueryAllUserIAPOrders \
    --namespace $AB_NAMESPACE \
    --userId 'BsvAnbx4' \
    > test.out 2>&1
eval_tap $? 247 'QueryAllUserIAPOrders' test.out

#- 248 QueryUserIAPConsumeHistory
$CLI_EXE \
    --sn platform \
    --op QueryUserIAPConsumeHistory \
    --namespace $AB_NAMESPACE \
    --userId 'lK5QQYDv' \
    --endTime 'ObgenSdx' \
    --limit '49' \
    --offset '15' \
    --startTime 'A3EXhZAp' \
    --status 'FAIL' \
    --type 'APPLE' \
    > test.out 2>&1
eval_tap $? 248 'QueryUserIAPConsumeHistory' test.out

#- 249 MockFulfillIAPItem
# body param: body
echo '{"itemIdentityType": "ITEM_ID", "language": "ueu-exPL", "productId": "K9VVNkyE", "region": "Ybla8mdl", "transactionId": "8Fy3AGt4", "type": "XBOX"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op MockFulfillIAPItem \
    --namespace $AB_NAMESPACE \
    --userId '9UqWE4Fr' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 249 'MockFulfillIAPItem' test.out

#- 250 QueryUserOrders
$CLI_EXE \
    --sn platform \
    --op QueryUserOrders \
    --namespace $AB_NAMESPACE \
    --userId 'c18Esqha' \
    --itemId 'kErJTYfo' \
    --limit '61' \
    --offset '2' \
    --status 'REFUNDING' \
    > test.out 2>&1
eval_tap $? 250 'QueryUserOrders' test.out

#- 251 AdminCreateUserOrder
# body param: body
echo '{"currencyCode": "agqZWhQc", "currencyNamespace": "eV0haiQV", "discountedPrice": 81, "ext": {"sWtBbk1Y": {}, "jzD62qzH": {}, "81ptUF69": {}}, "itemId": "2PIVJ1P2", "language": "6n4PPIrx", "options": {"skipPriceValidation": true}, "platform": "GooglePlay", "price": 11, "quantity": 72, "region": "TLlscUB8", "returnUrl": "1V2atqYz", "sandbox": true, "sectionId": "cWSILedO"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op AdminCreateUserOrder \
    --namespace $AB_NAMESPACE \
    --userId 'ft2MiAjg' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 251 'AdminCreateUserOrder' test.out

#- 252 CountOfPurchasedItem
$CLI_EXE \
    --sn platform \
    --op CountOfPurchasedItem \
    --namespace $AB_NAMESPACE \
    --userId 'PLVlXJvJ' \
    --itemId 'LfpdqfMn' \
    > test.out 2>&1
eval_tap $? 252 'CountOfPurchasedItem' test.out

#- 253 GetUserOrder
$CLI_EXE \
    --sn platform \
    --op GetUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'k0V8Zgm3' \
    --userId 'sKu3zKEY' \
    > test.out 2>&1
eval_tap $? 253 'GetUserOrder' test.out

#- 254 UpdateUserOrderStatus
# body param: body
echo '{"status": "CHARGEBACK_REVERSED", "statusReason": "bBCaRgwn"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateUserOrderStatus \
    --namespace $AB_NAMESPACE \
    --orderNo 'lghtVYEk' \
    --userId 'edDibhUg' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 254 'UpdateUserOrderStatus' test.out

#- 255 FulfillUserOrder
$CLI_EXE \
    --sn platform \
    --op FulfillUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'vu6kSUBo' \
    --userId 'TjjMqUvx' \
    > test.out 2>&1
eval_tap $? 255 'FulfillUserOrder' test.out

#- 256 GetUserOrderGrant
$CLI_EXE \
    --sn platform \
    --op GetUserOrderGrant \
    --namespace $AB_NAMESPACE \
    --orderNo 'kpupsprj' \
    --userId '71ozSIa5' \
    > test.out 2>&1
eval_tap $? 256 'GetUserOrderGrant' test.out

#- 257 GetUserOrderHistories
$CLI_EXE \
    --sn platform \
    --op GetUserOrderHistories \
    --namespace $AB_NAMESPACE \
    --orderNo 'EM2m6zTG' \
    --userId 'kEOhsLvG' \
    > test.out 2>&1
eval_tap $? 257 'GetUserOrderHistories' test.out

#- 258 ProcessUserOrderNotification
# body param: body
echo '{"additionalData": {"cardSummary": "hoWdLwVL"}, "authorisedTime": "1980-03-03T00:00:00Z", "chargebackReversedTime": "1999-12-22T00:00:00Z", "chargebackTime": "1972-04-03T00:00:00Z", "chargedTime": "1971-11-07T00:00:00Z", "createdTime": "1981-12-27T00:00:00Z", "currency": {"currencyCode": "2Fj21wr4", "currencySymbol": "qax6L0I9", "currencyType": "REAL", "decimals": 70, "namespace": "b4LytvsX"}, "customParameters": {"35D5rvWl": {}, "gSmNqgGD": {}, "HaBKukqj": {}}, "extOrderNo": "U9LfUJTI", "extTxId": "0KIejLnE", "extUserId": "tTugpFOX", "issuedAt": "1999-12-16T00:00:00Z", "metadata": {"ot9T2rE3": "FILynA9Y", "8yQrdbcN": "FfjpAAfH", "9cCmgENo": "7CpJc86w"}, "namespace": "UX1BA0Pe", "nonceStr": "gtHlJXcV", "paymentMethod": "mAfZms7R", "paymentMethodFee": 48, "paymentOrderNo": "8v5GO9oN", "paymentProvider": "PAYPAL", "paymentProviderFee": 41, "paymentStationUrl": "zMUmjhH1", "price": 76, "refundedTime": "1993-06-04T00:00:00Z", "salesTax": 26, "sandbox": true, "sku": "CB2lNlu9", "status": "AUTHORISED", "statusReason": "chy9Wf3Y", "subscriptionId": "ULG8UqAR", "subtotalPrice": 13, "targetNamespace": "WUcXZN3d", "targetUserId": "7I3vzzpP", "tax": 41, "totalPrice": 1, "totalTax": 76, "txEndTime": "1971-12-02T00:00:00Z", "type": "jHOpqxfv", "userId": "r5nzf2CX", "vat": 34}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ProcessUserOrderNotification \
    --namespace $AB_NAMESPACE \
    --orderNo 'yEI8sloE' \
    --userId 'dH9EGzMI' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 258 'ProcessUserOrderNotification' test.out

#- 259 DownloadUserOrderReceipt
$CLI_EXE \
    --sn platform \
    --op DownloadUserOrderReceipt \
    --namespace $AB_NAMESPACE \
    --orderNo '78Yj2e6E' \
    --userId 'B4HujW7t' \
    > test.out 2>&1
eval_tap $? 259 'DownloadUserOrderReceipt' test.out

#- 260 CreateUserPaymentOrder
# body param: body
echo '{"currencyCode": "FEqPZM2M", "currencyNamespace": "2PDfxslp", "customParameters": {"oEyJmm1S": {}, "GJSNeeDN": {}, "mN9sElFD": {}}, "description": "PgFsp2Hm", "extOrderNo": "X3zzSVxt", "extUserId": "qmQZ3YJw", "itemType": "OPTIONBOX", "language": "ci", "metadata": {"b57C4MGL": "j4XQTfgK", "vsN7dw91": "gFmojL9u", "7jQcURBi": "oNgTuJN2"}, "notifyUrl": "wt2Jtrai", "omitNotification": false, "platform": "kCry8qX5", "price": 32, "recurringPaymentOrderNo": "B6lRjEEn", "region": "cfZfquxk", "returnUrl": "PNNtRrpG", "sandbox": true, "sku": "tJIRrqld", "subscriptionId": "UPJJYL4e", "title": "JFOlxoHT"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateUserPaymentOrder \
    --namespace $AB_NAMESPACE \
    --userId 'EwCHBnM2' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 260 'CreateUserPaymentOrder' test.out

#- 261 RefundUserPaymentOrder
# body param: body
echo '{"description": "AlBpNgis"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RefundUserPaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo '1oIv9Wh9' \
    --userId 'FlqtyYMH' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 261 'RefundUserPaymentOrder' test.out

#- 262 ApplyUserRedemption
# body param: body
echo '{"code": "qGsg4jPI", "orderNo": "unb759Bb"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ApplyUserRedemption \
    --namespace $AB_NAMESPACE \
    --userId 'O24bBJHe' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 262 'ApplyUserRedemption' test.out

#- 263 DoRevocation
# body param: body
echo '{"meta": {"qQJ8gjSi": {}, "vxvNrro7": {}, "lhNSRClh": {}}, "revokeEntries": [{"currency": {"balanceOrigin": "Epic", "currencyCode": "T9IVpbxA", "namespace": "wsNOeP53"}, "entitlement": {"entitlementId": "2Krcf9hU"}, "item": {"itemIdentity": "sQoJDvL5", "itemIdentityType": "ITEM_SKU", "origin": "IOS"}, "quantity": 97, "type": "ENTITLEMENT"}, {"currency": {"balanceOrigin": "Playstation", "currencyCode": "0FuobpYs", "namespace": "n8CcDEAg"}, "entitlement": {"entitlementId": "wpQmeISg"}, "item": {"itemIdentity": "ql9ZGKQM", "itemIdentityType": "ITEM_SKU", "origin": "IOS"}, "quantity": 88, "type": "ITEM"}, {"currency": {"balanceOrigin": "Epic", "currencyCode": "Iac2UcDT", "namespace": "IwHFBcBm"}, "entitlement": {"entitlementId": "Zd6HCo0d"}, "item": {"itemIdentity": "JVrLiNCx", "itemIdentityType": "ITEM_SKU", "origin": "GooglePlay"}, "quantity": 44, "type": "ITEM"}], "source": "IAP", "transactionId": "JX0lKuKI"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op DoRevocation \
    --namespace $AB_NAMESPACE \
    --userId 'QnXBKl5x' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 263 'DoRevocation' test.out

#- 264 RegisterXblSessions
# body param: body
echo '{"gameSessionId": "U2l2cFkX", "payload": {"zSzn5PTr": {}, "S07mPi0R": {}, "k2XvgG8F": {}}, "scid": "kstA2AwZ", "sessionTemplateName": "aW511L09"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RegisterXblSessions \
    --namespace $AB_NAMESPACE \
    --userId 'YtF7A3J5' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 264 'RegisterXblSessions' test.out

#- 265 QueryUserSubscriptions
$CLI_EXE \
    --sn platform \
    --op QueryUserSubscriptions \
    --namespace $AB_NAMESPACE \
    --userId 'QCvX43BA' \
    --chargeStatus 'CHARGED' \
    --itemId 'VdlpzdaU' \
    --limit '68' \
    --offset '7' \
    --sku '2ZhtqvOI' \
    --status 'ACTIVE' \
    --subscribedBy 'PLATFORM' \
    > test.out 2>&1
eval_tap $? 265 'QueryUserSubscriptions' test.out

#- 266 GetUserSubscriptionActivities
$CLI_EXE \
    --sn platform \
    --op GetUserSubscriptionActivities \
    --namespace $AB_NAMESPACE \
    --userId 'v4Z7UJ5g' \
    --excludeSystem 'false' \
    --limit '71' \
    --offset '91' \
    --subscriptionId 'InXc9v7S' \
    > test.out 2>&1
eval_tap $? 266 'GetUserSubscriptionActivities' test.out

#- 267 PlatformSubscribeSubscription
# body param: body
echo '{"grantDays": 87, "itemId": "Bvd1WPVD", "language": "xOUEbHUD", "reason": "e50nkSa8", "region": "ZuvK44Cb", "source": "wJvh4tD3"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PlatformSubscribeSubscription \
    --namespace $AB_NAMESPACE \
    --userId '4ZbFEwqn' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 267 'PlatformSubscribeSubscription' test.out

#- 268 CheckUserSubscriptionSubscribableByItemId
$CLI_EXE \
    --sn platform \
    --op CheckUserSubscriptionSubscribableByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'na93aMXE' \
    --itemId 'wbSspwpz' \
    > test.out 2>&1
eval_tap $? 268 'CheckUserSubscriptionSubscribableByItemId' test.out

#- 269 GetUserSubscription
$CLI_EXE \
    --sn platform \
    --op GetUserSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'Z6tHpo8u' \
    --userId 'uiekGb7R' \
    > test.out 2>&1
eval_tap $? 269 'GetUserSubscription' test.out

#- 270 DeleteUserSubscription
$CLI_EXE \
    --sn platform \
    --op DeleteUserSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'zuNla9wF' \
    --userId '8girxHba' \
    > test.out 2>&1
eval_tap $? 270 'DeleteUserSubscription' test.out

#- 271 CancelSubscription
# body param: body
echo '{"immediate": true, "reason": "TCwzxQSf"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CancelSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'IubpWMKY' \
    --userId 'hrsOd8ny' \
    --force 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 271 'CancelSubscription' test.out

#- 272 GrantDaysToSubscription
# body param: body
echo '{"grantDays": 52, "reason": "5IQW7hnC"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op GrantDaysToSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'Z9uBr7To' \
    --userId 'nKKrVdaZ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 272 'GrantDaysToSubscription' test.out

#- 273 GetUserSubscriptionBillingHistories
$CLI_EXE \
    --sn platform \
    --op GetUserSubscriptionBillingHistories \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'jlzPHVfD' \
    --userId 'tsBVQAR9' \
    --excludeFree 'false' \
    --limit '68' \
    --offset '41' \
    > test.out 2>&1
eval_tap $? 273 'GetUserSubscriptionBillingHistories' test.out

#- 274 ProcessUserSubscriptionNotification
# body param: body
echo '{"additionalData": {"cardSummary": "EkdFeS2Y"}, "authorisedTime": "1975-10-10T00:00:00Z", "chargebackReversedTime": "1987-08-17T00:00:00Z", "chargebackTime": "1988-12-18T00:00:00Z", "chargedTime": "1987-01-13T00:00:00Z", "createdTime": "1977-05-29T00:00:00Z", "currency": {"currencyCode": "gBIuI8WF", "currencySymbol": "TXktj4BK", "currencyType": "REAL", "decimals": 10, "namespace": "ldILPRlt"}, "customParameters": {"BbRsjGfQ": {}, "FdHKchsN": {}, "6Vln0a9E": {}}, "extOrderNo": "jJ5XAVw8", "extTxId": "r7cjVl8b", "extUserId": "twByIqNP", "issuedAt": "1996-08-16T00:00:00Z", "metadata": {"bBJQ86xP": "yeQbo8By", "eJiX1yQ2": "iE46ZMKM", "3JxEC6G2": "kUa2nwr9"}, "namespace": "6lXguk0u", "nonceStr": "nl37hFHm", "paymentMethod": "XkumNt5E", "paymentMethodFee": 32, "paymentOrderNo": "vImXMQ6Q", "paymentProvider": "ADYEN", "paymentProviderFee": 39, "paymentStationUrl": "O08AXLL0", "price": 26, "refundedTime": "1982-09-10T00:00:00Z", "salesTax": 69, "sandbox": true, "sku": "QcVeYnYJ", "status": "REQUEST_FOR_INFORMATION", "statusReason": "inn5qxnQ", "subscriptionId": "yQkCO2AB", "subtotalPrice": 2, "targetNamespace": "y1j09aKB", "targetUserId": "s0pj82mt", "tax": 39, "totalPrice": 12, "totalTax": 26, "txEndTime": "1999-06-20T00:00:00Z", "type": "m8T4w4Sx", "userId": "GD2JDoV9", "vat": 14}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ProcessUserSubscriptionNotification \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'eP9EgsbE' \
    --userId 'VUrNEWF9' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 274 'ProcessUserSubscriptionNotification' test.out

#- 275 AcquireUserTicket
# body param: body
echo '{"count": 10, "orderNo": "P6a7vDFI"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op AcquireUserTicket \
    --boothName 'ymTVEeYA' \
    --namespace $AB_NAMESPACE \
    --userId '29WGdco6' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 275 'AcquireUserTicket' test.out

#- 276 QueryUserCurrencyWallets
$CLI_EXE \
    --sn platform \
    --op QueryUserCurrencyWallets \
    --namespace $AB_NAMESPACE \
    --userId '1qq2Z5Al' \
    > test.out 2>&1
eval_tap $? 276 'QueryUserCurrencyWallets' test.out

#- 277 DebitUserWalletByCurrencyCode
# body param: body
echo '{"allowOverdraft": true, "amount": 65, "balanceOrigin": "Oculus", "balanceSource": "OTHER", "metadata": {"P6yyImPb": {}, "QJ74k5Mc": {}, "ZmH8o3ab": {}}, "reason": "nCJZSGR1"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op DebitUserWalletByCurrencyCode \
    --currencyCode 'nHHkBc4e' \
    --namespace $AB_NAMESPACE \
    --userId '4TbrP6F0' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 277 'DebitUserWalletByCurrencyCode' test.out

#- 278 ListUserCurrencyTransactions
$CLI_EXE \
    --sn platform \
    --op ListUserCurrencyTransactions \
    --currencyCode 'NUBIRiyy' \
    --namespace $AB_NAMESPACE \
    --userId 'G258Qgp6' \
    --limit '21' \
    --offset '85' \
    > test.out 2>&1
eval_tap $? 278 'ListUserCurrencyTransactions' test.out

#- 279 CheckWallet
eval_tap 0 279 'CheckWallet # SKIP deprecated' test.out

#- 280 CreditUserWallet
# body param: body
echo '{"amount": 74, "expireAt": "1972-09-06T00:00:00Z", "metadata": {"kYpwNuE6": {}, "zlIiSxEb": {}, "vKSBZPON": {}}, "origin": "Xbox", "reason": "Ss4SUxj2", "source": "IAP_CHARGEBACK_REVERSED"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreditUserWallet \
    --currencyCode '1dKeOqRu' \
    --namespace $AB_NAMESPACE \
    --userId 'fvkkAVmL' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 280 'CreditUserWallet' test.out

#- 281 PayWithUserWallet
# body param: body
echo '{"amount": 18, "metadata": {"UvPWXlkL": {}, "1FlmLszC": {}, "8YeZm6gt": {}}, "walletPlatform": "Epic"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PayWithUserWallet \
    --currencyCode 'WaFV5Mkg' \
    --namespace $AB_NAMESPACE \
    --userId 'Wzb2SA4m' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 281 'PayWithUserWallet' test.out

#- 282 GetUserWallet
eval_tap 0 282 'GetUserWallet # SKIP deprecated' test.out

#- 283 DebitUserWallet
eval_tap 0 283 'DebitUserWallet # SKIP deprecated' test.out

#- 284 DisableUserWallet
eval_tap 0 284 'DisableUserWallet # SKIP deprecated' test.out

#- 285 EnableUserWallet
eval_tap 0 285 'EnableUserWallet # SKIP deprecated' test.out

#- 286 ListUserWalletTransactions
eval_tap 0 286 'ListUserWalletTransactions # SKIP deprecated' test.out

#- 287 ListViews
$CLI_EXE \
    --sn platform \
    --op ListViews \
    --namespace $AB_NAMESPACE \
    --storeId '9XnH0KZU' \
    > test.out 2>&1
eval_tap $? 287 'ListViews' test.out

#- 288 CreateView
# body param: body
echo '{"displayOrder": 81, "localizations": {"WSLUnYKm": {"description": "UXogXMMF", "localExt": {"90h7oyK8": {}, "7mRKBBVn": {}, "xiDwdkS1": {}}, "longDescription": "0iPsTMFw", "title": "EYjZbL8o"}, "LWYOzpKB": {"description": "rwSDVxpm", "localExt": {"bHCHU0Rs": {}, "kuwyO1He": {}, "03SKrEVF": {}}, "longDescription": "EvKZzURF", "title": "dAK0bEHp"}, "02liKRPy": {"description": "kZuCUYgY", "localExt": {"Sgdyul8W": {}, "t25d1lD5": {}, "iG9AoHA4": {}}, "longDescription": "3gJM2lX2", "title": "IhJv9mtI"}}, "name": "L6PTwCsu"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateView \
    --namespace $AB_NAMESPACE \
    --storeId '8ArB6HOA' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 288 'CreateView' test.out

#- 289 GetView
$CLI_EXE \
    --sn platform \
    --op GetView \
    --namespace $AB_NAMESPACE \
    --viewId 'fJWPxEHh' \
    --storeId 'PKK5qiL7' \
    > test.out 2>&1
eval_tap $? 289 'GetView' test.out

#- 290 UpdateView
# body param: body
echo '{"displayOrder": 14, "localizations": {"hlK7dEDz": {"description": "bxgPdpsD", "localExt": {"qJiP4v6S": {}, "IBKYvj4q": {}, "ilju4Ovj": {}}, "longDescription": "BzWWuRrs", "title": "y9QQyyqF"}, "v6xHDt5p": {"description": "sBcO13HS", "localExt": {"HjBkvXE2": {}, "kRlRt44t": {}, "u4x7C6x1": {}}, "longDescription": "7jmwhC23", "title": "uMNGsAPc"}, "zBf16GrV": {"description": "5SXholds", "localExt": {"sy1HMCbd": {}, "KkfSYl0k": {}, "jefYyS9z": {}}, "longDescription": "HqxMjMQr", "title": "g9nnOzwG"}}, "name": "X1sGT3K1"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateView \
    --namespace $AB_NAMESPACE \
    --viewId 'LsfPH6MC' \
    --storeId 'MVRFcwDP' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 290 'UpdateView' test.out

#- 291 DeleteView
$CLI_EXE \
    --sn platform \
    --op DeleteView \
    --namespace $AB_NAMESPACE \
    --viewId 'Y84XGFin' \
    --storeId 'yCzQZZZu' \
    > test.out 2>&1
eval_tap $? 291 'DeleteView' test.out

#- 292 QueryWallets
eval_tap 0 292 'QueryWallets # SKIP deprecated' test.out

#- 293 BulkCredit
# body param: body
echo '[{"creditRequest": {"amount": 5, "expireAt": "1992-02-07T00:00:00Z", "metadata": {"iEUr406e": {}, "aywxQrJc": {}, "jTwOnYLD": {}}, "origin": "Twitch", "reason": "S2iHwNI8", "source": "PURCHASE"}, "currencyCode": "I8nJnUBO", "userIds": ["QitiYons", "Bgs6YCSk", "v1vHHZKG"]}, {"creditRequest": {"amount": 34, "expireAt": "1984-08-05T00:00:00Z", "metadata": {"WyMFJh4Y": {}, "crlYGVTt": {}, "hPWoUxsm": {}}, "origin": "Oculus", "reason": "tQsBkJdu", "source": "REFERRAL_BONUS"}, "currencyCode": "51CWP1Ri", "userIds": ["dcMbAWos", "SNShHsgF", "VSZc184z"]}, {"creditRequest": {"amount": 90, "expireAt": "1999-05-27T00:00:00Z", "metadata": {"4fcr8r3b": {}, "DjCXPGFX": {}, "XzzvXttA": {}}, "origin": "Steam", "reason": "uYfj0ufP", "source": "REFERRAL_BONUS"}, "currencyCode": "nOppAH7S", "userIds": ["qOzK9fEg", "u9KHFtk8", "Yq9Nil9y"]}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op BulkCredit \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 293 'BulkCredit' test.out

#- 294 BulkDebit
# body param: body
echo '[{"currencyCode": "qWwGJsT6", "request": {"allowOverdraft": false, "amount": 91, "balanceOrigin": "Xbox", "balanceSource": "PAYMENT", "metadata": {"HCGQ5Fhe": {}, "hLauYUJQ": {}, "PZX74eXC": {}}, "reason": "JFHiuDbm"}, "userIds": ["r5XxzE9w", "wzQPNNjb", "wECnM2mY"]}, {"currencyCode": "hSC2n2wf", "request": {"allowOverdraft": true, "amount": 12, "balanceOrigin": "Twitch", "balanceSource": "IAP_REVOCATION", "metadata": {"coZTbDjs": {}, "pILLjLvc": {}, "E6WJWOhy": {}}, "reason": "kX3S6P4e"}, "userIds": ["FOwzh8qL", "mA7jwS54", "quwp2yzs"]}, {"currencyCode": "UkxnDXeY", "request": {"allowOverdraft": true, "amount": 29, "balanceOrigin": "Oculus", "balanceSource": "IAP_REVOCATION", "metadata": {"BUepxhKj": {}, "nH2dxp1A": {}, "i0Muc2Ln": {}}, "reason": "vxFQ71Dk"}, "userIds": ["LPpEsUcM", "6p8kTcpQ", "AR1KtjMq"]}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op BulkDebit \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 294 'BulkDebit' test.out

#- 295 GetWallet
eval_tap 0 295 'GetWallet # SKIP deprecated' test.out

#- 296 SyncOrders
$CLI_EXE \
    --sn platform \
    --op SyncOrders \
    --nextEvaluatedKey 'Kd8vNtZY' \
    --end 'OhaIQIQx' \
    --start 'sBrkQtSN' \
    > test.out 2>&1
eval_tap $? 296 'SyncOrders' test.out

#- 297 TestAdyenConfig
# body param: body
echo '{"allowedPaymentMethods": ["XRFlzb2g", "un3oZZv7", "bt6eFSZ3"], "apiKey": "ofz4anoo", "authoriseAsCapture": true, "blockedPaymentMethods": ["XSj6i2jX", "vy1ceDcT", "LXnBPJDS"], "clientKey": "e0bOKeIu", "dropInSettings": "mFwZ2UzS", "liveEndpointUrlPrefix": "qRoR56Zn", "merchantAccount": "fGiWs0U6", "notificationHmacKey": "1Q1CxEiS", "notificationPassword": "WLPv3v5X", "notificationUsername": "wiMUdB8t", "returnUrl": "ETda8txu", "settings": "YIDNNVje"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestAdyenConfig \
    --sandbox 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 297 'TestAdyenConfig' test.out

#- 298 TestAliPayConfig
# body param: body
echo '{"appId": "qHGlGjm5", "privateKey": "yNsdXO9E", "publicKey": "xE3r1Sg2", "returnUrl": "cdIh0iq4"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestAliPayConfig \
    --sandbox 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 298 'TestAliPayConfig' test.out

#- 299 TestCheckoutConfig
# body param: body
echo '{"publicKey": "rbGeknga", "secretKey": "v6bPHQYL"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestCheckoutConfig \
    --sandbox 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 299 'TestCheckoutConfig' test.out

#- 300 DebugMatchedPaymentMerchantConfig
$CLI_EXE \
    --sn platform \
    --op DebugMatchedPaymentMerchantConfig \
    --namespace_ 'OU9ueWIi' \
    --region 'eMOWnL4k' \
    > test.out 2>&1
eval_tap $? 300 'DebugMatchedPaymentMerchantConfig' test.out

#- 301 TestPayPalConfig
# body param: body
echo '{"clientID": "2yFQFtfX", "clientSecret": "xRvMwQas", "returnUrl": "vj4CduLV", "webHookId": "Jw2UgxPU"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestPayPalConfig \
    --sandbox 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 301 'TestPayPalConfig' test.out

#- 302 TestStripeConfig
# body param: body
echo '{"allowedPaymentMethodTypes": ["PYTv15n0", "VGgzCbWV", "EWfK8SxD"], "publishableKey": "kygTM06y", "secretKey": "1cwJUYcI", "webhookSecret": "0NBh8QFS"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestStripeConfig \
    --sandbox 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 302 'TestStripeConfig' test.out

#- 303 TestWxPayConfig
# body param: body
echo '{"appId": "UNsO9Hw8", "key": "PusxzHnm", "mchid": "f2MIMgzP", "returnUrl": "I8yDG7KX"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestWxPayConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 303 'TestWxPayConfig' test.out

#- 304 TestXsollaConfig
# body param: body
echo '{"apiKey": "VWdH0L34", "flowCompletionUrl": "FDgSD7P2", "merchantId": 69, "projectId": 39, "projectSecretKey": "puxbHvTW"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestXsollaConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 304 'TestXsollaConfig' test.out

#- 305 GetPaymentMerchantConfig
$CLI_EXE \
    --sn platform \
    --op GetPaymentMerchantConfig \
    --id '3avW0tG8' \
    > test.out 2>&1
eval_tap $? 305 'GetPaymentMerchantConfig' test.out

#- 306 UpdateAdyenConfig
# body param: body
echo '{"allowedPaymentMethods": ["Bl5vDNX2", "8UNIrNEJ", "98D9HDJu"], "apiKey": "YCLn4p7y", "authoriseAsCapture": false, "blockedPaymentMethods": ["QLUfxxdR", "afudXftU", "fOR5Uhn9"], "clientKey": "HhblwEYL", "dropInSettings": "pPyhyObH", "liveEndpointUrlPrefix": "rFsqQTBa", "merchantAccount": "zuhQk58a", "notificationHmacKey": "QbZoy7FJ", "notificationPassword": "rm2PVSYk", "notificationUsername": "Y73tnAmV", "returnUrl": "Gx8dj6DT", "settings": "gg6HXMU3"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateAdyenConfig \
    --id 'RCsCJDuu' \
    --sandbox 'true' \
    --validate 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 306 'UpdateAdyenConfig' test.out

#- 307 TestAdyenConfigById
$CLI_EXE \
    --sn platform \
    --op TestAdyenConfigById \
    --id '9NiwZibW' \
    --sandbox 'false' \
    > test.out 2>&1
eval_tap $? 307 'TestAdyenConfigById' test.out

#- 308 UpdateAliPayConfig
# body param: body
echo '{"appId": "S7QJUW3p", "privateKey": "VaVqp9Lg", "publicKey": "BST2fzUG", "returnUrl": "RXkTKCBp"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateAliPayConfig \
    --id 'WNIUFJRE' \
    --sandbox 'true' \
    --validate 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 308 'UpdateAliPayConfig' test.out

#- 309 TestAliPayConfigById
$CLI_EXE \
    --sn platform \
    --op TestAliPayConfigById \
    --id 'RiMrYYRn' \
    --sandbox 'false' \
    > test.out 2>&1
eval_tap $? 309 'TestAliPayConfigById' test.out

#- 310 UpdateCheckoutConfig
# body param: body
echo '{"publicKey": "ZTLfK9L4", "secretKey": "YC3uxnj0"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCheckoutConfig \
    --id 'zWVNehCx' \
    --sandbox 'true' \
    --validate 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 310 'UpdateCheckoutConfig' test.out

#- 311 TestCheckoutConfigById
$CLI_EXE \
    --sn platform \
    --op TestCheckoutConfigById \
    --id 'SRbn0TdA' \
    --sandbox 'false' \
    > test.out 2>&1
eval_tap $? 311 'TestCheckoutConfigById' test.out

#- 312 UpdatePayPalConfig
# body param: body
echo '{"clientID": "GUbRZ4FP", "clientSecret": "eQARIxSS", "returnUrl": "Kbiy0FrN", "webHookId": "49AIyw4Z"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePayPalConfig \
    --id 'Axry54OX' \
    --sandbox 'true' \
    --validate 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 312 'UpdatePayPalConfig' test.out

#- 313 TestPayPalConfigById
$CLI_EXE \
    --sn platform \
    --op TestPayPalConfigById \
    --id '1107XZy9' \
    --sandbox 'false' \
    > test.out 2>&1
eval_tap $? 313 'TestPayPalConfigById' test.out

#- 314 UpdateStripeConfig
# body param: body
echo '{"allowedPaymentMethodTypes": ["xqkXDZ9k", "8LR7FQEn", "DDfMtlcM"], "publishableKey": "PpvvL8xl", "secretKey": "PzLyJpLg", "webhookSecret": "xGXkz3eL"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateStripeConfig \
    --id 'jfgeARml' \
    --sandbox 'true' \
    --validate 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 314 'UpdateStripeConfig' test.out

#- 315 TestStripeConfigById
$CLI_EXE \
    --sn platform \
    --op TestStripeConfigById \
    --id 'osToD0uN' \
    --sandbox 'true' \
    > test.out 2>&1
eval_tap $? 315 'TestStripeConfigById' test.out

#- 316 UpdateWxPayConfig
# body param: body
echo '{"appId": "McezzMDi", "key": "IoihCmpH", "mchid": "wAIXilyX", "returnUrl": "hrHDuNW4"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateWxPayConfig \
    --id 'VbKNFGqH' \
    --validate 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 316 'UpdateWxPayConfig' test.out

#- 317 UpdateWxPayConfigCert
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UpdateWxPayConfigCert \
    --id 'nzx5q7tl' \
    --upload $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 317 'UpdateWxPayConfigCert' test.out

#- 318 TestWxPayConfigById
$CLI_EXE \
    --sn platform \
    --op TestWxPayConfigById \
    --id 'z410sqiM' \
    > test.out 2>&1
eval_tap $? 318 'TestWxPayConfigById' test.out

#- 319 UpdateXsollaConfig
# body param: body
echo '{"apiKey": "frvp360a", "flowCompletionUrl": "zYYicGU1", "merchantId": 40, "projectId": 12, "projectSecretKey": "mCDpWXG2"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXsollaConfig \
    --id 'nid271Ub' \
    --validate 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 319 'UpdateXsollaConfig' test.out

#- 320 TestXsollaConfigById
$CLI_EXE \
    --sn platform \
    --op TestXsollaConfigById \
    --id 'QTuUpkCq' \
    > test.out 2>&1
eval_tap $? 320 'TestXsollaConfigById' test.out

#- 321 UpdateXsollaUIConfig
# body param: body
echo '{"device": "DESKTOP", "showCloseButton": true, "size": "MEDIUM", "theme": "DEFAULT_DARK"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXsollaUIConfig \
    --id 'emeHMwkW' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 321 'UpdateXsollaUIConfig' test.out

#- 322 QueryPaymentProviderConfig
$CLI_EXE \
    --sn platform \
    --op QueryPaymentProviderConfig \
    --limit '7' \
    --namespace_ 'PLVVDoUX' \
    --offset '86' \
    --region 'P0qSmQ4w' \
    > test.out 2>&1
eval_tap $? 322 'QueryPaymentProviderConfig' test.out

#- 323 CreatePaymentProviderConfig
# body param: body
echo '{"aggregate": "XSOLLA", "namespace": "cp18ij8U", "region": "UzlTvGrK", "sandboxTaxJarApiToken": "VWPguEAF", "specials": ["ALIPAY", "XSOLLA", "WALLET"], "taxJarApiToken": "GgSVf7lD", "taxJarEnabled": true, "useGlobalTaxJarApiToken": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreatePaymentProviderConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 323 'CreatePaymentProviderConfig' test.out

#- 324 GetAggregatePaymentProviders
$CLI_EXE \
    --sn platform \
    --op GetAggregatePaymentProviders \
    > test.out 2>&1
eval_tap $? 324 'GetAggregatePaymentProviders' test.out

#- 325 DebugMatchedPaymentProviderConfig
$CLI_EXE \
    --sn platform \
    --op DebugMatchedPaymentProviderConfig \
    --namespace_ 'QEI0wK41' \
    --region 'bGEPKztF' \
    > test.out 2>&1
eval_tap $? 325 'DebugMatchedPaymentProviderConfig' test.out

#- 326 GetSpecialPaymentProviders
$CLI_EXE \
    --sn platform \
    --op GetSpecialPaymentProviders \
    > test.out 2>&1
eval_tap $? 326 'GetSpecialPaymentProviders' test.out

#- 327 UpdatePaymentProviderConfig
# body param: body
echo '{"aggregate": "ADYEN", "namespace": "VazACgBS", "region": "b6R4HHZ8", "sandboxTaxJarApiToken": "oeVINFBn", "specials": ["STRIPE", "WALLET", "ADYEN"], "taxJarApiToken": "qB2GJhK8", "taxJarEnabled": true, "useGlobalTaxJarApiToken": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePaymentProviderConfig \
    --id 'STIn75HV' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 327 'UpdatePaymentProviderConfig' test.out

#- 328 DeletePaymentProviderConfig
$CLI_EXE \
    --sn platform \
    --op DeletePaymentProviderConfig \
    --id '4MuMpyy1' \
    > test.out 2>&1
eval_tap $? 328 'DeletePaymentProviderConfig' test.out

#- 329 GetPaymentTaxConfig
$CLI_EXE \
    --sn platform \
    --op GetPaymentTaxConfig \
    > test.out 2>&1
eval_tap $? 329 'GetPaymentTaxConfig' test.out

#- 330 UpdatePaymentTaxConfig
# body param: body
echo '{"sandboxTaxJarApiToken": "naHnJPXc", "taxJarApiToken": "eLGNsnm3", "taxJarEnabled": true, "taxJarProductCodesMapping": {"GOSq0ZI0": "ONSjCJf7", "W6W5cJaE": "xoEPg0lj", "tJW2Jc9e": "iGu5RKWU"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePaymentTaxConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 330 'UpdatePaymentTaxConfig' test.out

#- 331 SyncPaymentOrders
$CLI_EXE \
    --sn platform \
    --op SyncPaymentOrders \
    --nextEvaluatedKey 'ZRuDDXsk' \
    --end 'SsNrB2V9' \
    --start '5tibrqep' \
    > test.out 2>&1
eval_tap $? 331 'SyncPaymentOrders' test.out

#- 332 PublicGetRootCategories
$CLI_EXE \
    --sn platform \
    --op PublicGetRootCategories \
    --namespace $AB_NAMESPACE \
    --language 'WMaBro00' \
    --storeId 'hQC0buZI' \
    > test.out 2>&1
eval_tap $? 332 'PublicGetRootCategories' test.out

#- 333 DownloadCategories
$CLI_EXE \
    --sn platform \
    --op DownloadCategories \
    --namespace $AB_NAMESPACE \
    --language 'kU8uuZ6U' \
    --storeId 'rcoDI8HK' \
    > test.out 2>&1
eval_tap $? 333 'DownloadCategories' test.out

#- 334 PublicGetCategory
$CLI_EXE \
    --sn platform \
    --op PublicGetCategory \
    --categoryPath '5dzf2QEQ' \
    --namespace $AB_NAMESPACE \
    --language 'ZI4N3MvD' \
    --storeId '4B3X574x' \
    > test.out 2>&1
eval_tap $? 334 'PublicGetCategory' test.out

#- 335 PublicGetChildCategories
$CLI_EXE \
    --sn platform \
    --op PublicGetChildCategories \
    --categoryPath 'AgHVU6to' \
    --namespace $AB_NAMESPACE \
    --language 'DdJ6wmRv' \
    --storeId 'qDO7clQO' \
    > test.out 2>&1
eval_tap $? 335 'PublicGetChildCategories' test.out

#- 336 PublicGetDescendantCategories
$CLI_EXE \
    --sn platform \
    --op PublicGetDescendantCategories \
    --categoryPath 'IV66My5w' \
    --namespace $AB_NAMESPACE \
    --language 'zWpyyLEe' \
    --storeId 'PIOGxcQW' \
    > test.out 2>&1
eval_tap $? 336 'PublicGetDescendantCategories' test.out

#- 337 PublicListCurrencies
$CLI_EXE \
    --sn platform \
    --op PublicListCurrencies \
    --namespace $AB_NAMESPACE \
    --currencyType 'VIRTUAL' \
    > test.out 2>&1
eval_tap $? 337 'PublicListCurrencies' test.out

#- 338 GetIAPItemMapping
$CLI_EXE \
    --sn platform \
    --op GetIAPItemMapping \
    --namespace $AB_NAMESPACE \
    --platform 'APPLE' \
    > test.out 2>&1
eval_tap $? 338 'GetIAPItemMapping' test.out

#- 339 PublicGetItemByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetItemByAppId \
    --namespace $AB_NAMESPACE \
    --language 'qexKhDNV' \
    --region '3jhNfFIP' \
    --storeId '2UUBXiFc' \
    --appId 'oqHSASHm' \
    > test.out 2>&1
eval_tap $? 339 'PublicGetItemByAppId' test.out

#- 340 PublicQueryItems
$CLI_EXE \
    --sn platform \
    --op PublicQueryItems \
    --namespace $AB_NAMESPACE \
    --appType 'DEMO' \
    --baseAppId 'ojCazrQF' \
    --categoryPath 'A0CxtZYQ' \
    --features 'uExgv9NR' \
    --includeSubCategoryItem 'true' \
    --itemType 'APP' \
    --language '8xdsbBwG' \
    --limit '98' \
    --offset '72' \
    --region 'Eb2ckVna' \
    --sortBy '["displayOrder:asc", "name", "name:asc"]' \
    --storeId '5lpvnkEE' \
    --tags 'OSd5EsDd' \
    > test.out 2>&1
eval_tap $? 340 'PublicQueryItems' test.out

#- 341 PublicGetItemBySku
$CLI_EXE \
    --sn platform \
    --op PublicGetItemBySku \
    --namespace $AB_NAMESPACE \
    --language '9wMFfJJB' \
    --region 'LzofBuYE' \
    --storeId '8TdeEnzU' \
    --sku 'ngJ8CZov' \
    > test.out 2>&1
eval_tap $? 341 'PublicGetItemBySku' test.out

#- 342 PublicBulkGetItems
$CLI_EXE \
    --sn platform \
    --op PublicBulkGetItems \
    --namespace $AB_NAMESPACE \
    --language 'ykUc6qGB' \
    --region 'g78hCJwl' \
    --storeId 'H6UGS4WN' \
    --itemIds 'mi2JH71x' \
    > test.out 2>&1
eval_tap $? 342 'PublicBulkGetItems' test.out

#- 343 PublicValidateItemPurchaseCondition
# body param: body
echo '{"itemIds": ["2o2oRWu0", "IreGchGo", "2d6kj7sT"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicValidateItemPurchaseCondition \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 343 'PublicValidateItemPurchaseCondition' test.out

#- 344 PublicSearchItems
$CLI_EXE \
    --sn platform \
    --op PublicSearchItems \
    --namespace $AB_NAMESPACE \
    --itemType 'BUNDLE' \
    --limit '46' \
    --offset '91' \
    --region 'hWpXwfWa' \
    --storeId 'hJLjdgk1' \
    --keyword 'gx86dIGI' \
    --language 'ENbkIwkL' \
    > test.out 2>&1
eval_tap $? 344 'PublicSearchItems' test.out

#- 345 PublicGetApp
$CLI_EXE \
    --sn platform \
    --op PublicGetApp \
    --itemId 'FLDz5zQs' \
    --namespace $AB_NAMESPACE \
    --language 'X8t47H2g' \
    --region 'S9gmTRrB' \
    --storeId 'WjIOTTyM' \
    > test.out 2>&1
eval_tap $? 345 'PublicGetApp' test.out

#- 346 PublicGetItemDynamicData
$CLI_EXE \
    --sn platform \
    --op PublicGetItemDynamicData \
    --itemId 'FbjtVw92' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 346 'PublicGetItemDynamicData' test.out

#- 347 PublicGetItem
$CLI_EXE \
    --sn platform \
    --op PublicGetItem \
    --itemId 'AGo615TD' \
    --namespace $AB_NAMESPACE \
    --language 'GkjTtcyW' \
    --populateBundle 'false' \
    --region 'PmT84wUM' \
    --storeId 'jWuYfi9a' \
    > test.out 2>&1
eval_tap $? 347 'PublicGetItem' test.out

#- 348 GetPaymentCustomization
eval_tap 0 348 'GetPaymentCustomization # SKIP deprecated' test.out

#- 349 PublicGetPaymentUrl
# body param: body
echo '{"paymentOrderNo": "sTs66OsC", "paymentProvider": "PAYPAL", "returnUrl": "EEFh9L07", "ui": "28dxgfvT", "zipCode": "tDi5jUXr"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicGetPaymentUrl \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 349 'PublicGetPaymentUrl' test.out

#- 350 PublicGetPaymentMethods
$CLI_EXE \
    --sn platform \
    --op PublicGetPaymentMethods \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'NQW1IicR' \
    > test.out 2>&1
eval_tap $? 350 'PublicGetPaymentMethods' test.out

#- 351 PublicGetUnpaidPaymentOrder
$CLI_EXE \
    --sn platform \
    --op PublicGetUnpaidPaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'LOZ8ggSz' \
    > test.out 2>&1
eval_tap $? 351 'PublicGetUnpaidPaymentOrder' test.out

#- 352 Pay
# body param: body
echo '{"token": "EWVeiukW"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op Pay \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo '1XChNuWN' \
    --paymentProvider 'STRIPE' \
    --zipCode '3fDto7vY' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 352 'Pay' test.out

#- 353 PublicCheckPaymentOrderPaidStatus
$CLI_EXE \
    --sn platform \
    --op PublicCheckPaymentOrderPaidStatus \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo '7sdrYMeL' \
    > test.out 2>&1
eval_tap $? 353 'PublicCheckPaymentOrderPaidStatus' test.out

#- 354 GetPaymentPublicConfig
$CLI_EXE \
    --sn platform \
    --op GetPaymentPublicConfig \
    --namespace $AB_NAMESPACE \
    --sandbox 'true' \
    --paymentProvider 'XSOLLA' \
    --region 'XYs27pb6' \
    > test.out 2>&1
eval_tap $? 354 'GetPaymentPublicConfig' test.out

#- 355 PublicGetQRCode
$CLI_EXE \
    --sn platform \
    --op PublicGetQRCode \
    --namespace $AB_NAMESPACE \
    --code 'MMV5dAm2' \
    > test.out 2>&1
eval_tap $? 355 'PublicGetQRCode' test.out

#- 356 PublicNormalizePaymentReturnUrl
$CLI_EXE \
    --sn platform \
    --op PublicNormalizePaymentReturnUrl \
    --namespace $AB_NAMESPACE \
    --payerID 'mjKEB4JG' \
    --foreinginvoice '35gryTzD' \
    --invoiceId 'IBugTbpf' \
    --payload '67jVSSxL' \
    --redirectResult '7GnVgxwg' \
    --resultCode '7kbvKh0J' \
    --sessionId '6kSzKwkh' \
    --status '7YwMUaIH' \
    --token '6I4jKppY' \
    --type 'FYT2VXAz' \
    --userId 'hYCtnnKV' \
    --orderNo 'up634yrW' \
    --paymentOrderNo '2MhuaDgE' \
    --paymentProvider 'PAYPAL' \
    --returnUrl 'naAwnGQr' \
    > test.out 2>&1
eval_tap $? 356 'PublicNormalizePaymentReturnUrl' test.out

#- 357 GetPaymentTaxValue
$CLI_EXE \
    --sn platform \
    --op GetPaymentTaxValue \
    --namespace $AB_NAMESPACE \
    --zipCode 'zYgUL4Fa' \
    --paymentOrderNo 'owEXEseb' \
    --paymentProvider 'WALLET' \
    > test.out 2>&1
eval_tap $? 357 'GetPaymentTaxValue' test.out

#- 358 GetRewardByCode
$CLI_EXE \
    --sn platform \
    --op GetRewardByCode \
    --namespace $AB_NAMESPACE \
    --rewardCode 'cv6KifhL' \
    > test.out 2>&1
eval_tap $? 358 'GetRewardByCode' test.out

#- 359 QueryRewards1
$CLI_EXE \
    --sn platform \
    --op QueryRewards1 \
    --namespace $AB_NAMESPACE \
    --eventTopic 'EiYjwa3L' \
    --limit '93' \
    --offset '56' \
    --sortBy '["rewardCode:desc", "rewardCode"]' \
    > test.out 2>&1
eval_tap $? 359 'QueryRewards1' test.out

#- 360 GetReward1
$CLI_EXE \
    --sn platform \
    --op GetReward1 \
    --namespace $AB_NAMESPACE \
    --rewardId 'LrHWAjFZ' \
    > test.out 2>&1
eval_tap $? 360 'GetReward1' test.out

#- 361 PublicListStores
$CLI_EXE \
    --sn platform \
    --op PublicListStores \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 361 'PublicListStores' test.out

#- 362 PublicExistsAnyMyActiveEntitlement
$CLI_EXE \
    --sn platform \
    --op PublicExistsAnyMyActiveEntitlement \
    --namespace $AB_NAMESPACE \
    --appIds '["9tmWu0Ra", "0kCFSwnR", "ZrXMUZkf"]' \
    --itemIds '["XtZzmSLt", "sf28KO4s", "cfe1znpK"]' \
    --skus '["fksrZluJ", "AMc5jtwj", "jfPz1ZIv"]' \
    > test.out 2>&1
eval_tap $? 362 'PublicExistsAnyMyActiveEntitlement' test.out

#- 363 PublicGetMyAppEntitlementOwnershipByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetMyAppEntitlementOwnershipByAppId \
    --namespace $AB_NAMESPACE \
    --appId 'dynHLZKW' \
    > test.out 2>&1
eval_tap $? 363 'PublicGetMyAppEntitlementOwnershipByAppId' test.out

#- 364 PublicGetMyEntitlementOwnershipByItemId
$CLI_EXE \
    --sn platform \
    --op PublicGetMyEntitlementOwnershipByItemId \
    --namespace $AB_NAMESPACE \
    --entitlementClazz 'ENTITLEMENT' \
    --itemId 'JKGa7HO2' \
    > test.out 2>&1
eval_tap $? 364 'PublicGetMyEntitlementOwnershipByItemId' test.out

#- 365 PublicGetMyEntitlementOwnershipBySku
$CLI_EXE \
    --sn platform \
    --op PublicGetMyEntitlementOwnershipBySku \
    --namespace $AB_NAMESPACE \
    --entitlementClazz 'APP' \
    --sku 'XI6VHy26' \
    > test.out 2>&1
eval_tap $? 365 'PublicGetMyEntitlementOwnershipBySku' test.out

#- 366 PublicGetEntitlementOwnershipToken
$CLI_EXE \
    --sn platform \
    --op PublicGetEntitlementOwnershipToken \
    --namespace $AB_NAMESPACE \
    --appIds '["o0Wwqx1o", "e2Bncfgj", "lTp1Moqi"]' \
    --itemIds '["RYSGxzcs", "v4FYQ036", "DgLMFujQ"]' \
    --skus '["C1wUb5pV", "CU5ixXAk", "rwPhQ10h"]' \
    > test.out 2>&1
eval_tap $? 366 'PublicGetEntitlementOwnershipToken' test.out

#- 367 SyncTwitchDropsEntitlement
# body param: body
echo '{"gameId": "NagcMx6x", "language": "RQqe-177", "region": "YD3zGMDj"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncTwitchDropsEntitlement \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 367 'SyncTwitchDropsEntitlement' test.out

#- 368 PublicGetMyWallet
$CLI_EXE \
    --sn platform \
    --op PublicGetMyWallet \
    --currencyCode 'E54FOTQn' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 368 'PublicGetMyWallet' test.out

#- 369 SyncEpicGameDLC
# body param: body
echo '{"epicGamesJwtToken": "edQBHbit"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncEpicGameDLC \
    --namespace $AB_NAMESPACE \
    --userId 'UVX9KwO0' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 369 'SyncEpicGameDLC' test.out

#- 370 SyncOculusDLC
$CLI_EXE \
    --sn platform \
    --op SyncOculusDLC \
    --namespace $AB_NAMESPACE \
    --userId 'NIBofkLX' \
    > test.out 2>&1
eval_tap $? 370 'SyncOculusDLC' test.out

#- 371 PublicSyncPsnDlcInventory
# body param: body
echo '{"serviceLabel": 48}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicSyncPsnDlcInventory \
    --namespace $AB_NAMESPACE \
    --userId 'F8wF56wC' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 371 'PublicSyncPsnDlcInventory' test.out

#- 372 PublicSyncPsnDlcInventoryWithMultipleServiceLabels
# body param: body
echo '{"serviceLabels": [50, 3, 28]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicSyncPsnDlcInventoryWithMultipleServiceLabels \
    --namespace $AB_NAMESPACE \
    --userId 'C3Isrm9L' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 372 'PublicSyncPsnDlcInventoryWithMultipleServiceLabels' test.out

#- 373 SyncSteamDLC
# body param: body
echo '{"appId": "BmgARMco", "steamId": "IBxqFL05"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncSteamDLC \
    --namespace $AB_NAMESPACE \
    --userId 'pKbI5Opu' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 373 'SyncSteamDLC' test.out

#- 374 SyncXboxDLC
# body param: body
echo '{"xstsToken": "Bmjp2Evq"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncXboxDLC \
    --namespace $AB_NAMESPACE \
    --userId 'z88e4jzL' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 374 'SyncXboxDLC' test.out

#- 375 PublicQueryUserEntitlements
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserEntitlements \
    --namespace $AB_NAMESPACE \
    --userId 'EvOatSCj' \
    --appType 'DEMO' \
    --entitlementClazz 'CODE' \
    --entitlementName 'yEnm151i' \
    --features '["KkFuReIp", "flpaLEQV", "2ajSnKco"]' \
    --itemId '["eQadtRD7", "CL3O1oC2", "W3Pdnsvc"]' \
    --limit '7' \
    --offset '58' \
    > test.out 2>&1
eval_tap $? 375 'PublicQueryUserEntitlements' test.out

#- 376 PublicGetUserAppEntitlementByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetUserAppEntitlementByAppId \
    --namespace $AB_NAMESPACE \
    --userId 'gJWcA075' \
    --appId 'tThTHYKV' \
    > test.out 2>&1
eval_tap $? 376 'PublicGetUserAppEntitlementByAppId' test.out

#- 377 PublicQueryUserEntitlementsByAppType
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserEntitlementsByAppType \
    --namespace $AB_NAMESPACE \
    --userId 'fBlQabC2' \
    --limit '1' \
    --offset '32' \
    --appType 'GAME' \
    > test.out 2>&1
eval_tap $? 377 'PublicQueryUserEntitlementsByAppType' test.out

#- 378 PublicGetUserEntitlementByItemId
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'mI3nn9mo' \
    --entitlementClazz 'SUBSCRIPTION' \
    --itemId '07rSi2Vo' \
    > test.out 2>&1
eval_tap $? 378 'PublicGetUserEntitlementByItemId' test.out

#- 379 PublicGetUserEntitlementBySku
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementBySku \
    --namespace $AB_NAMESPACE \
    --userId 'GEsp1J3f' \
    --entitlementClazz 'SUBSCRIPTION' \
    --sku 'NzrlgxYM' \
    > test.out 2>&1
eval_tap $? 379 'PublicGetUserEntitlementBySku' test.out

#- 380 PublicExistsAnyUserActiveEntitlement
$CLI_EXE \
    --sn platform \
    --op PublicExistsAnyUserActiveEntitlement \
    --namespace $AB_NAMESPACE \
    --userId '9GXihdHU' \
    --appIds '["gVRFa91c", "WtJk8GtS", "CszelJiS"]' \
    --itemIds '["9h78pUVR", "b6IfBWbi", "EbBl4Aii"]' \
    --skus '["nRRXpZ6y", "Whz6wxGR", "LI7MEmwa"]' \
    > test.out 2>&1
eval_tap $? 380 'PublicExistsAnyUserActiveEntitlement' test.out

#- 381 PublicGetUserAppEntitlementOwnershipByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetUserAppEntitlementOwnershipByAppId \
    --namespace $AB_NAMESPACE \
    --userId 'sJvEnwp6' \
    --appId 'Zl05RlqZ' \
    > test.out 2>&1
eval_tap $? 381 'PublicGetUserAppEntitlementOwnershipByAppId' test.out

#- 382 PublicGetUserEntitlementOwnershipByItemId
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementOwnershipByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'qAg5OMFx' \
    --entitlementClazz 'ENTITLEMENT' \
    --itemId 'nGD1r7AO' \
    > test.out 2>&1
eval_tap $? 382 'PublicGetUserEntitlementOwnershipByItemId' test.out

#- 383 PublicGetUserEntitlementOwnershipByItemIds
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementOwnershipByItemIds \
    --namespace $AB_NAMESPACE \
    --userId 'd4YUCvYB' \
    --ids '["nNh1wHbo", "VtlLFjxx", "uJbM9cj6"]' \
    > test.out 2>&1
eval_tap $? 383 'PublicGetUserEntitlementOwnershipByItemIds' test.out

#- 384 PublicGetUserEntitlementOwnershipBySku
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementOwnershipBySku \
    --namespace $AB_NAMESPACE \
    --userId 'YnKUnX92' \
    --entitlementClazz 'SUBSCRIPTION' \
    --sku '7QLpthbe' \
    > test.out 2>&1
eval_tap $? 384 'PublicGetUserEntitlementOwnershipBySku' test.out

#- 385 PublicGetUserEntitlement
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlement \
    --entitlementId 'FtOCmbl3' \
    --namespace $AB_NAMESPACE \
    --userId 'JskI52Os' \
    > test.out 2>&1
eval_tap $? 385 'PublicGetUserEntitlement' test.out

#- 386 PublicConsumeUserEntitlement
# body param: body
echo '{"options": ["NosWyrcu", "Kr2xDMPv", "Jqn46yTi"], "requestId": "vQWl8Vai", "useCount": 26}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicConsumeUserEntitlement \
    --entitlementId '9VizyHXs' \
    --namespace $AB_NAMESPACE \
    --userId 'Ly2j0Nye' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 386 'PublicConsumeUserEntitlement' test.out

#- 387 PublicSellUserEntitlement
# body param: body
echo '{"requestId": "pc2M2nMu", "useCount": 79}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicSellUserEntitlement \
    --entitlementId 'sfTIPHOF' \
    --namespace $AB_NAMESPACE \
    --userId 'uiFw86r8' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 387 'PublicSellUserEntitlement' test.out

#- 388 PublicRedeemCode
# body param: body
echo '{"code": "sYaQ4Hix", "language": "dRGu-pCZx_Uk", "region": "cdlkA992"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicRedeemCode \
    --namespace $AB_NAMESPACE \
    --userId 'df03dHft' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 388 'PublicRedeemCode' test.out

#- 389 PublicFulfillAppleIAPItem
# body param: body
echo '{"excludeOldTransactions": true, "language": "lk-pXhr", "productId": "kAX5eIj8", "receiptData": "CTOPvbdr", "region": "J1oNAQAW", "transactionId": "dzybboUB"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicFulfillAppleIAPItem \
    --namespace $AB_NAMESPACE \
    --userId 'JjamhKS5' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 389 'PublicFulfillAppleIAPItem' test.out

#- 390 SyncEpicGamesInventory
# body param: body
echo '{"epicGamesJwtToken": "yG36qQuz"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncEpicGamesInventory \
    --namespace $AB_NAMESPACE \
    --userId '36k4Qz8E' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 390 'SyncEpicGamesInventory' test.out

#- 391 PublicFulfillGoogleIAPItem
# body param: body
echo '{"autoAck": true, "language": "IUJi", "orderId": "OnTTFRy4", "packageName": "Rr7IjNv9", "productId": "X5gmFP2u", "purchaseTime": 54, "purchaseToken": "CDPtwcW5", "region": "mAq7rhEk"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicFulfillGoogleIAPItem \
    --namespace $AB_NAMESPACE \
    --userId 'DbG43dQk' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 391 'PublicFulfillGoogleIAPItem' test.out

#- 392 SyncOculusConsumableEntitlements
$CLI_EXE \
    --sn platform \
    --op SyncOculusConsumableEntitlements \
    --namespace $AB_NAMESPACE \
    --userId 'ayLps9Nr' \
    > test.out 2>&1
eval_tap $? 392 'SyncOculusConsumableEntitlements' test.out

#- 393 PublicReconcilePlayStationStore
# body param: body
echo '{"currencyCode": "1EqvxJWw", "price": 0.47238718184128814, "productId": "wrM8qftL", "serviceLabel": 70}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicReconcilePlayStationStore \
    --namespace $AB_NAMESPACE \
    --userId 'zaoOTldi' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 393 'PublicReconcilePlayStationStore' test.out

#- 394 PublicReconcilePlayStationStoreWithMultipleServiceLabels
# body param: body
echo '{"currencyCode": "i98za2Dp", "price": 0.35360880774880776, "productId": "OH2NHtEy", "serviceLabels": [48, 11, 69]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicReconcilePlayStationStoreWithMultipleServiceLabels \
    --namespace $AB_NAMESPACE \
    --userId 'dOgYsxrC' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 394 'PublicReconcilePlayStationStoreWithMultipleServiceLabels' test.out

#- 395 SyncSteamInventory
# body param: body
echo '{"appId": "HAaoPmtJ", "currencyCode": "n33NiCIB", "language": "cBCB-CZTq-105", "price": 0.23601060750574432, "productId": "RhzkMsyd", "region": "inxQRjIe", "steamId": "UGC5bkge"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncSteamInventory \
    --namespace $AB_NAMESPACE \
    --userId '872E4leF' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 395 'SyncSteamInventory' test.out

#- 396 SyncTwitchDropsEntitlement1
# body param: body
echo '{"gameId": "9eacelgm", "language": "hBiR-NNUk", "region": "xoHCCRrh"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncTwitchDropsEntitlement1 \
    --namespace $AB_NAMESPACE \
    --userId 'zopNfMF5' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 396 'SyncTwitchDropsEntitlement1' test.out

#- 397 SyncXboxInventory
# body param: body
echo '{"currencyCode": "8mlY5POI", "price": 0.9755777258167354, "productId": "cNQXyLzV", "xstsToken": "GYKXEbDb"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncXboxInventory \
    --namespace $AB_NAMESPACE \
    --userId 'VEdMEweo' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 397 'SyncXboxInventory' test.out

#- 398 PublicQueryUserOrders
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserOrders \
    --namespace $AB_NAMESPACE \
    --userId 'nELKQz56' \
    --itemId '84YI59eY' \
    --limit '22' \
    --offset '32' \
    --status 'DELETED' \
    > test.out 2>&1
eval_tap $? 398 'PublicQueryUserOrders' test.out

#- 399 PublicCreateUserOrder
# body param: body
echo '{"currencyCode": "AJwBVQnb", "discountedPrice": 13, "ext": {"y7JErrFy": {}, "KI6OWW9R": {}, "Q8iuaM6q": {}}, "itemId": "UAELoxly", "language": "JMZH-KxoH_YF", "price": 61, "quantity": 26, "region": "eNG1F8Dv", "returnUrl": "71AQLFZR", "sectionId": "dwnIXnbh"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicCreateUserOrder \
    --namespace $AB_NAMESPACE \
    --userId 'DQIjhC2L' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 399 'PublicCreateUserOrder' test.out

#- 400 PublicGetUserOrder
$CLI_EXE \
    --sn platform \
    --op PublicGetUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'Y2a6LOZz' \
    --userId 'X9P9Wh6p' \
    > test.out 2>&1
eval_tap $? 400 'PublicGetUserOrder' test.out

#- 401 PublicCancelUserOrder
$CLI_EXE \
    --sn platform \
    --op PublicCancelUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'OgDqT7Dp' \
    --userId 'qVvm1R2A' \
    > test.out 2>&1
eval_tap $? 401 'PublicCancelUserOrder' test.out

#- 402 PublicGetUserOrderHistories
$CLI_EXE \
    --sn platform \
    --op PublicGetUserOrderHistories \
    --namespace $AB_NAMESPACE \
    --orderNo 'MwLdes6F' \
    --userId 'ptopCvqF' \
    > test.out 2>&1
eval_tap $? 402 'PublicGetUserOrderHistories' test.out

#- 403 PublicDownloadUserOrderReceipt
$CLI_EXE \
    --sn platform \
    --op PublicDownloadUserOrderReceipt \
    --namespace $AB_NAMESPACE \
    --orderNo 'xlpwcKje' \
    --userId 'YkLBUuHz' \
    > test.out 2>&1
eval_tap $? 403 'PublicDownloadUserOrderReceipt' test.out

#- 404 PublicGetPaymentAccounts
$CLI_EXE \
    --sn platform \
    --op PublicGetPaymentAccounts \
    --namespace $AB_NAMESPACE \
    --userId 'u2siMtjs' \
    > test.out 2>&1
eval_tap $? 404 'PublicGetPaymentAccounts' test.out

#- 405 PublicDeletePaymentAccount
$CLI_EXE \
    --sn platform \
    --op PublicDeletePaymentAccount \
    --id 'e4TApVzX' \
    --namespace $AB_NAMESPACE \
    --type 'card' \
    --userId 'YPssQ5ax' \
    > test.out 2>&1
eval_tap $? 405 'PublicDeletePaymentAccount' test.out

#- 406 PublicListActiveSections
$CLI_EXE \
    --sn platform \
    --op PublicListActiveSections \
    --namespace $AB_NAMESPACE \
    --userId 'Q0ZG4Q1h' \
    --language 'oH5gpIzs' \
    --region '7uPYq7aV' \
    --storeId 'jM79g6Nc' \
    --viewId 'biS4OROc' \
    > test.out 2>&1
eval_tap $? 406 'PublicListActiveSections' test.out

#- 407 PublicQueryUserSubscriptions
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserSubscriptions \
    --namespace $AB_NAMESPACE \
    --userId 'XGSqYSFV' \
    --chargeStatus 'SETUP' \
    --itemId 'aJK2saeH' \
    --limit '13' \
    --offset '53' \
    --sku 'ovd4Uicw' \
    --status 'CANCELLED' \
    --subscribedBy 'PLATFORM' \
    > test.out 2>&1
eval_tap $? 407 'PublicQueryUserSubscriptions' test.out

#- 408 PublicSubscribeSubscription
# body param: body
echo '{"currencyCode": "KRoOeYUm", "itemId": "QhVwwZ9l", "language": "NSbR_940", "region": "nbuZxICL", "returnUrl": "yyvBuYyl", "source": "tzqkJsDf"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicSubscribeSubscription \
    --namespace $AB_NAMESPACE \
    --userId 'sMj0JqQH' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 408 'PublicSubscribeSubscription' test.out

#- 409 PublicCheckUserSubscriptionSubscribableByItemId
$CLI_EXE \
    --sn platform \
    --op PublicCheckUserSubscriptionSubscribableByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'nyvRdxBk' \
    --itemId 'a6xtUPKe' \
    > test.out 2>&1
eval_tap $? 409 'PublicCheckUserSubscriptionSubscribableByItemId' test.out

#- 410 PublicGetUserSubscription
$CLI_EXE \
    --sn platform \
    --op PublicGetUserSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'NV80hxpB' \
    --userId 'SLlzTeWu' \
    > test.out 2>&1
eval_tap $? 410 'PublicGetUserSubscription' test.out

#- 411 PublicChangeSubscriptionBillingAccount
$CLI_EXE \
    --sn platform \
    --op PublicChangeSubscriptionBillingAccount \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'w6NlKIDT' \
    --userId 'XrYuqFds' \
    > test.out 2>&1
eval_tap $? 411 'PublicChangeSubscriptionBillingAccount' test.out

#- 412 PublicCancelSubscription
# body param: body
echo '{"immediate": true, "reason": "I7n4GsHI"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicCancelSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'MncKAZ3J' \
    --userId 'DKgS32OI' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 412 'PublicCancelSubscription' test.out

#- 413 PublicGetUserSubscriptionBillingHistories
$CLI_EXE \
    --sn platform \
    --op PublicGetUserSubscriptionBillingHistories \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'IbmIQR6G' \
    --userId 'pLY3EBKO' \
    --excludeFree 'true' \
    --limit '96' \
    --offset '73' \
    > test.out 2>&1
eval_tap $? 413 'PublicGetUserSubscriptionBillingHistories' test.out

#- 414 PublicListViews
$CLI_EXE \
    --sn platform \
    --op PublicListViews \
    --namespace $AB_NAMESPACE \
    --userId 'UovJXMsh' \
    --language 'KTUWNvXq' \
    --storeId 'cCcyJl3a' \
    > test.out 2>&1
eval_tap $? 414 'PublicListViews' test.out

#- 415 PublicGetWallet
$CLI_EXE \
    --sn platform \
    --op PublicGetWallet \
    --currencyCode 'ZzlmFnyl' \
    --namespace $AB_NAMESPACE \
    --userId 'ioyNkkGJ' \
    > test.out 2>&1
eval_tap $? 415 'PublicGetWallet' test.out

#- 416 PublicListUserWalletTransactions
$CLI_EXE \
    --sn platform \
    --op PublicListUserWalletTransactions \
    --currencyCode 'nUtD5yQp' \
    --namespace $AB_NAMESPACE \
    --userId 'ZwRHbzpW' \
    --limit '57' \
    --offset '68' \
    > test.out 2>&1
eval_tap $? 416 'PublicListUserWalletTransactions' test.out

#- 417 QueryItems1
$CLI_EXE \
    --sn platform \
    --op QueryItems1 \
    --namespace $AB_NAMESPACE \
    --appType 'DLC' \
    --availableDate 'UHBg8kZu' \
    --baseAppId 'mGSDb78W' \
    --categoryPath 'cX7NK4nf' \
    --features 'TgQFaOa3' \
    --includeSubCategoryItem 'true' \
    --itemName 'pUPGhaLn' \
    --itemStatus 'INACTIVE' \
    --itemType 'MEDIA' \
    --limit '32' \
    --offset '29' \
    --region 'W7LMCLzK' \
    --sectionExclusive 'true' \
    --sortBy '["displayOrder", "displayOrder:asc", "name:asc"]' \
    --storeId '1uSOpK0r' \
    --tags 'AwrlFYAn' \
    --targetNamespace 'prRfyuE1' \
    > test.out 2>&1
eval_tap $? 417 'QueryItems1' test.out

#- 418 ImportStore1
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op ImportStore1 \
    --namespace $AB_NAMESPACE \
    --storeId 'NfqYC0fz' \
    --strictMode 'true' \
    --upload $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 418 'ImportStore1' test.out

#- 419 ExportStore1
# body param: body
echo '{"itemIds": ["0V1gasvw", "lYM8wLuN", "0FUIjHic"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ExportStore1 \
    --namespace $AB_NAMESPACE \
    --storeId 'g4tpmnt3' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 419 'ExportStore1' test.out

#- 420 FulfillRewardsV2
# body param: body
echo '{"metadata": {"gasjRa2P": {}, "fBNJR4T5": {}, "4Laeo4tX": {}}, "origin": "GooglePlay", "rewards": [{"currency": {"currencyCode": "feeoE3NN", "namespace": "poQiVTlz"}, "item": {"itemId": "JT5J5LLG", "itemSku": "4ebFinkE", "itemType": "iJmScMPF"}, "quantity": 89, "type": "ITEM"}, {"currency": {"currencyCode": "7jptcQqX", "namespace": "hoov4IRN"}, "item": {"itemId": "lYHyDj5m", "itemSku": "sN25WKfw", "itemType": "b4xPmUL8"}, "quantity": 22, "type": "CURRENCY"}, {"currency": {"currencyCode": "qepeHHe7", "namespace": "xdu8VM5Q"}, "item": {"itemId": "XQPLA2Hz", "itemSku": "SU1qM509", "itemType": "pB1kmxc7"}, "quantity": 45, "type": "ITEM"}], "source": "ACHIEVEMENT", "transactionId": "pHMXX1tM"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op FulfillRewardsV2 \
    --namespace $AB_NAMESPACE \
    --userId 'Uv1Nngpb' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 420 'FulfillRewardsV2' test.out


# remove artifacts
rm -f "$CLI_TOKEN_FILE"
rm -f "$TEMP_JSON_INPUT"
rm -f "$TEMP_FILE_UPLOAD"

exit $EXIT_CODE