#!/usr/bin/env bash

# Copyright (c) 2021 AccelByte Inc. All Rights Reserved.
# This is licensed software from AccelByte Inc, for limitations
# and restrictions contact your company contract manager.

# This code is generated by tool. DO NOT EDIT.

# Meta:
# - random seed: 
# - template file: 

# Instructions:
# - Run the Justice SDK Mock Server first before running this script.

export AB_BASE_URL="http://127.0.0.1:8080"
export AB_CLIENT_ID="admin"
export AB_CLIENT_SECRET="admin"
export AB_NAMESPACE="test"
export AB_APP_NAME="UnitTest"

EXIT_CODE=0

eval_tap() {
  if [ $1 -eq 0 ]; then
    echo "ok $2 - $3"
  else
    EXIT_CODE=1
    echo "not ok $2 - $3"
    sed 's/^/# /g' $4
  fi
  rm -f $4
}

CLI_EXE="AccelByte.Sdk.Sample.Cli"
CLI_TOKEN_FILE="$(dirname "$(which $CLI_EXE)")/token.json"
TEMP_JSON_INPUT="input_json.json"
TEMP_FILE_UPLOAD="file_upload.bin"

echo "TAP version 13"
echo "1..460"

#- 1 Login
$CLI_EXE --op login --lt user --user user --pass user > test.out 2>&1
eval_tap $? 1 'Login' test.out

if [ $EXIT_CODE -ne 0 ]; then
  echo "Bail out! Login failed."
  exit $EXIT_CODE
fi

# echo "foo" > "$CLI_TOKEN_FILE"

#- 2 ListFulfillmentScripts
$CLI_EXE \
    --sn platform \
    --op ListFulfillmentScripts \
    > test.out 2>&1
eval_tap $? 2 'ListFulfillmentScripts' test.out

#- 3 GetFulfillmentScript
$CLI_EXE \
    --sn platform \
    --op GetFulfillmentScript \
    --id 'x5uUFLCR' \
    > test.out 2>&1
eval_tap $? 3 'GetFulfillmentScript' test.out

#- 4 CreateFulfillmentScript
# body param: body
echo '{"grantDays": "rcjI64Jv"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateFulfillmentScript \
    --id 'dCTyOaer' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 4 'CreateFulfillmentScript' test.out

#- 5 DeleteFulfillmentScript
$CLI_EXE \
    --sn platform \
    --op DeleteFulfillmentScript \
    --id 'Wmmuu1VN' \
    > test.out 2>&1
eval_tap $? 5 'DeleteFulfillmentScript' test.out

#- 6 UpdateFulfillmentScript
# body param: body
echo '{"grantDays": "BWadrt8F"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateFulfillmentScript \
    --id '7VwepkXz' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 6 'UpdateFulfillmentScript' test.out

#- 7 ListItemTypeConfigs
$CLI_EXE \
    --sn platform \
    --op ListItemTypeConfigs \
    > test.out 2>&1
eval_tap $? 7 'ListItemTypeConfigs' test.out

#- 8 CreateItemTypeConfig
# body param: body
echo '{"clazz": "pl4sBq8E", "dryRun": true, "fulfillmentUrl": "SGMXMd6x", "itemType": "SUBSCRIPTION", "purchaseConditionUrl": "BtQClJjQ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateItemTypeConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 8 'CreateItemTypeConfig' test.out

#- 9 SearchItemTypeConfig
$CLI_EXE \
    --sn platform \
    --op SearchItemTypeConfig \
    --clazz 'rlRKWuCQ' \
    --itemType 'INGAMEITEM' \
    > test.out 2>&1
eval_tap $? 9 'SearchItemTypeConfig' test.out

#- 10 GetItemTypeConfig
$CLI_EXE \
    --sn platform \
    --op GetItemTypeConfig \
    --id 'OAB2WDAm' \
    > test.out 2>&1
eval_tap $? 10 'GetItemTypeConfig' test.out

#- 11 UpdateItemTypeConfig
# body param: body
echo '{"clazz": "FcfGj85w", "dryRun": false, "fulfillmentUrl": "Ew14GJw9", "purchaseConditionUrl": "SzdOvlDO"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateItemTypeConfig \
    --id 'StJhpuPF' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 11 'UpdateItemTypeConfig' test.out

#- 12 DeleteItemTypeConfig
$CLI_EXE \
    --sn platform \
    --op DeleteItemTypeConfig \
    --id 'YOfPP7qq' \
    > test.out 2>&1
eval_tap $? 12 'DeleteItemTypeConfig' test.out

#- 13 QueryCampaigns
$CLI_EXE \
    --sn platform \
    --op QueryCampaigns \
    --namespace $AB_NAMESPACE \
    --limit '43' \
    --name 'j6t3h2hF' \
    --offset '90' \
    --tag '8plKewqT' \
    > test.out 2>&1
eval_tap $? 13 'QueryCampaigns' test.out

#- 14 CreateCampaign
# body param: body
echo '{"description": "9GEdzQjQ", "discountConfig": {"categories": [{"categoryPath": "TNVsAROZ", "includeSubCategories": false}, {"categoryPath": "i3uyyK2O", "includeSubCategories": true}, {"categoryPath": "G5IGHcPo", "includeSubCategories": false}], "currencyCode": "V2I2aN0j", "currencyNamespace": "WMxrz7eg", "discountAmount": 0, "discountPercentage": 93, "discountType": "AMOUNT", "items": [{"itemId": "fWTOGZH9", "itemName": "nZSOuLtf"}, {"itemId": "Y8xcin0p", "itemName": "koagiMUX"}, {"itemId": "Z7W77L0Z", "itemName": "dFuxDeb1"}], "restrictType": "NONE", "stackable": true}, "items": [{"extraSubscriptionDays": 81, "itemId": "U0HyvX4x", "itemName": "LA2Oz9kM", "quantity": 85}, {"extraSubscriptionDays": 56, "itemId": "uigVl5Nm", "itemName": "Sy3aIHlx", "quantity": 29}, {"extraSubscriptionDays": 60, "itemId": "Ckh9TQfN", "itemName": "p1VZBgU3", "quantity": 97}], "maxRedeemCountPerCampaignPerUser": 71, "maxRedeemCountPerCode": 18, "maxRedeemCountPerCodePerUser": 22, "maxSaleCount": 55, "name": "Ts9tU1gz", "redeemEnd": "1978-08-13T00:00:00Z", "redeemStart": "1988-08-27T00:00:00Z", "redeemType": "DISCOUNT", "status": "INACTIVE", "tags": ["CllWCWbP", "Y3nWPncU", "I1OMMf3Y"], "type": "REDEMPTION"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCampaign \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 14 'CreateCampaign' test.out

#- 15 GetCampaign
$CLI_EXE \
    --sn platform \
    --op GetCampaign \
    --campaignId 'smBAvxBG' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 15 'GetCampaign' test.out

#- 16 UpdateCampaign
# body param: body
echo '{"description": "AewoKklL", "discountConfig": {"categories": [{"categoryPath": "mRMKLu9B", "includeSubCategories": true}, {"categoryPath": "7NE3s5p7", "includeSubCategories": true}, {"categoryPath": "vBiSiyRz", "includeSubCategories": true}], "currencyCode": "XcEfqpvB", "currencyNamespace": "UgNSFakl", "discountAmount": 61, "discountPercentage": 11, "discountType": "PERCENTAGE", "items": [{"itemId": "7ZJFtPJu", "itemName": "tvpJlJ3Q"}, {"itemId": "FHmt5OQL", "itemName": "KKED2qGb"}, {"itemId": "YtgZ2bfR", "itemName": "Kq2xuLb3"}], "restrictType": "ITEMS_AND_CATEGORIES", "stackable": true}, "items": [{"extraSubscriptionDays": 16, "itemId": "jPgiTxJX", "itemName": "1A29AZsj", "quantity": 69}, {"extraSubscriptionDays": 17, "itemId": "gnxe4lgp", "itemName": "wcyMQB0N", "quantity": 12}, {"extraSubscriptionDays": 47, "itemId": "uP8eCH60", "itemName": "S0kqu3ad", "quantity": 19}], "maxRedeemCountPerCampaignPerUser": 20, "maxRedeemCountPerCode": 96, "maxRedeemCountPerCodePerUser": 42, "maxSaleCount": 58, "name": "eP47zrce", "redeemEnd": "1991-05-25T00:00:00Z", "redeemStart": "1991-11-29T00:00:00Z", "redeemType": "ITEM", "status": "INACTIVE", "tags": ["qBNvORjy", "5TSlJUKW", "ctjiOQMr"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCampaign \
    --campaignId 'IvMERXqp' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 16 'UpdateCampaign' test.out

#- 17 GetCampaignDynamic
$CLI_EXE \
    --sn platform \
    --op GetCampaignDynamic \
    --campaignId 'CyjG7H3K' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 17 'GetCampaignDynamic' test.out

#- 18 GetCatalogConfig
$CLI_EXE \
    --sn platform \
    --op GetCatalogConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 18 'GetCatalogConfig' test.out

#- 19 UpdateCatalogConfig
# body param: body
echo '{"enableInventoryCheck": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCatalogConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 19 'UpdateCatalogConfig' test.out

#- 20 GetLootBoxPluginConfig
$CLI_EXE \
    --sn platform \
    --op GetLootBoxPluginConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 20 'GetLootBoxPluginConfig' test.out

#- 21 UpdateLootBoxPluginConfig
# body param: body
echo '{"appConfig": {"appName": "EPSriho3"}, "customConfig": {"connectionType": "TLS", "grpcServerAddress": "hRt64Wve"}, "extendType": "APP"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateLootBoxPluginConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 21 'UpdateLootBoxPluginConfig' test.out

#- 22 DeleteLootBoxPluginConfig
$CLI_EXE \
    --sn platform \
    --op DeleteLootBoxPluginConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 22 'DeleteLootBoxPluginConfig' test.out

#- 23 UplodLootBoxPluginConfigCert
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UplodLootBoxPluginConfigCert \
    --namespace $AB_NAMESPACE \
    --upload file $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 23 'UplodLootBoxPluginConfigCert' test.out

#- 24 GetLootBoxGrpcInfo
$CLI_EXE \
    --sn platform \
    --op GetLootBoxGrpcInfo \
    --namespace $AB_NAMESPACE \
    --force 'true' \
    > test.out 2>&1
eval_tap $? 24 'GetLootBoxGrpcInfo' test.out

#- 25 GetSectionPluginConfig
$CLI_EXE \
    --sn platform \
    --op GetSectionPluginConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 25 'GetSectionPluginConfig' test.out

#- 26 UpdateSectionPluginConfig
# body param: body
echo '{"appConfig": {"appName": "FYzO2ymH"}, "customConfig": {"connectionType": "TLS", "grpcServerAddress": "0NFWjPzu"}, "extendType": "APP"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateSectionPluginConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 26 'UpdateSectionPluginConfig' test.out

#- 27 DeleteSectionPluginConfig
$CLI_EXE \
    --sn platform \
    --op DeleteSectionPluginConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 27 'DeleteSectionPluginConfig' test.out

#- 28 UploadSectionPluginConfigCert
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UploadSectionPluginConfigCert \
    --namespace $AB_NAMESPACE \
    --upload file $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 28 'UploadSectionPluginConfigCert' test.out

#- 29 GetRootCategories
$CLI_EXE \
    --sn platform \
    --op GetRootCategories \
    --namespace $AB_NAMESPACE \
    --storeId 'gyhHnL7P' \
    > test.out 2>&1
eval_tap $? 29 'GetRootCategories' test.out

#- 30 CreateCategory
# body param: body
echo '{"categoryPath": "iRakVDyM", "localizationDisplayNames": {"6beCaTS7": "vlEFQCy4", "gUgvqAJ6": "69oToUvi", "RVFcwAYP": "Ag2Ri27U"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCategory \
    --namespace $AB_NAMESPACE \
    --storeId 'dDYBfHHB' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 30 'CreateCategory' test.out

#- 31 ListCategoriesBasic
$CLI_EXE \
    --sn platform \
    --op ListCategoriesBasic \
    --namespace $AB_NAMESPACE \
    --storeId 'jN47XU0s' \
    > test.out 2>&1
eval_tap $? 31 'ListCategoriesBasic' test.out

#- 32 GetCategory
$CLI_EXE \
    --sn platform \
    --op GetCategory \
    --categoryPath 'LBLeOqwh' \
    --namespace $AB_NAMESPACE \
    --storeId 'OlI6XDbh' \
    > test.out 2>&1
eval_tap $? 32 'GetCategory' test.out

#- 33 UpdateCategory
# body param: body
echo '{"localizationDisplayNames": {"DdVCfmVI": "wj36zXqn", "4SIFAZXL": "bMSe2ZhQ", "NkpetSpN": "Kk4Es1n3"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCategory \
    --categoryPath 'd6KTmgOM' \
    --namespace $AB_NAMESPACE \
    --storeId 'QZBJRjxW' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 33 'UpdateCategory' test.out

#- 34 DeleteCategory
$CLI_EXE \
    --sn platform \
    --op DeleteCategory \
    --categoryPath 'vdpz3NJa' \
    --namespace $AB_NAMESPACE \
    --storeId 'aFYzyZLW' \
    > test.out 2>&1
eval_tap $? 34 'DeleteCategory' test.out

#- 35 GetChildCategories
$CLI_EXE \
    --sn platform \
    --op GetChildCategories \
    --categoryPath 'X9bNekSy' \
    --namespace $AB_NAMESPACE \
    --storeId 'K9TyBhAA' \
    > test.out 2>&1
eval_tap $? 35 'GetChildCategories' test.out

#- 36 GetDescendantCategories
$CLI_EXE \
    --sn platform \
    --op GetDescendantCategories \
    --categoryPath 's8sZsB03' \
    --namespace $AB_NAMESPACE \
    --storeId 'Yi2zC6bT' \
    > test.out 2>&1
eval_tap $? 36 'GetDescendantCategories' test.out

#- 37 QueryCodes
$CLI_EXE \
    --sn platform \
    --op QueryCodes \
    --campaignId 'ytdXvAA2' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --batchNo '3' \
    --code 'UggfDBBL' \
    --limit '22' \
    --offset '16' \
    > test.out 2>&1
eval_tap $? 37 'QueryCodes' test.out

#- 38 CreateCodes
# body param: body
echo '{"codeValue": "pzAUHdVH", "quantity": 35}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCodes \
    --campaignId 'POTxpt3e' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 38 'CreateCodes' test.out

#- 39 Download
$CLI_EXE \
    --sn platform \
    --op Download \
    --campaignId '2jcX5xki' \
    --namespace $AB_NAMESPACE \
    --batchNo '34' \
    > test.out 2>&1
eval_tap $? 39 'Download' test.out

#- 40 BulkDisableCodes
$CLI_EXE \
    --sn platform \
    --op BulkDisableCodes \
    --campaignId '8gCbysSk' \
    --namespace $AB_NAMESPACE \
    --batchNo '13' \
    > test.out 2>&1
eval_tap $? 40 'BulkDisableCodes' test.out

#- 41 BulkEnableCodes
$CLI_EXE \
    --sn platform \
    --op BulkEnableCodes \
    --campaignId 'zqIxmwqE' \
    --namespace $AB_NAMESPACE \
    --batchNo '84' \
    > test.out 2>&1
eval_tap $? 41 'BulkEnableCodes' test.out

#- 42 QueryRedeemHistory
$CLI_EXE \
    --sn platform \
    --op QueryRedeemHistory \
    --campaignId 'noephMun' \
    --namespace $AB_NAMESPACE \
    --code 'A0NfCeRc' \
    --limit '83' \
    --offset '30' \
    --userId '14zwxwDQ' \
    > test.out 2>&1
eval_tap $? 42 'QueryRedeemHistory' test.out

#- 43 GetCode
$CLI_EXE \
    --sn platform \
    --op GetCode \
    --code 'CuYtbWHe' \
    --namespace $AB_NAMESPACE \
    --redeemable 'false' \
    > test.out 2>&1
eval_tap $? 43 'GetCode' test.out

#- 44 DisableCode
$CLI_EXE \
    --sn platform \
    --op DisableCode \
    --code 'AZpUrps1' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 44 'DisableCode' test.out

#- 45 EnableCode
$CLI_EXE \
    --sn platform \
    --op EnableCode \
    --code 'wIH51NbO' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 45 'EnableCode' test.out

#- 46 GetServicePluginConfig
eval_tap 0 46 'GetServicePluginConfig # SKIP deprecated' test.out

#- 47 UpdateServicePluginConfig
eval_tap 0 47 'UpdateServicePluginConfig # SKIP deprecated' test.out

#- 48 DeleteServicePluginConfig
eval_tap 0 48 'DeleteServicePluginConfig # SKIP deprecated' test.out

#- 49 ListCurrencies
$CLI_EXE \
    --sn platform \
    --op ListCurrencies \
    --namespace $AB_NAMESPACE \
    --currencyType 'VIRTUAL' \
    > test.out 2>&1
eval_tap $? 49 'ListCurrencies' test.out

#- 50 CreateCurrency
# body param: body
echo '{"currencyCode": "6UTpJfwk", "currencySymbol": "H8fQzNc2", "currencyType": "VIRTUAL", "decimals": 19, "localizationDescriptions": {"nFH7Cx8b": "1OKV6TEm", "3e5Q13AA": "tLcU8CxE", "oqdFHnnZ": "lDc6ClX8"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCurrency \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 50 'CreateCurrency' test.out

#- 51 UpdateCurrency
# body param: body
echo '{"localizationDescriptions": {"U6FvhFew": "YLKOK4Xw", "0TTFnpfd": "Oiqhd6Td", "wl0IzC23": "EJIjfMM9"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCurrency \
    --currencyCode '4eickz3h' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 51 'UpdateCurrency' test.out

#- 52 DeleteCurrency
$CLI_EXE \
    --sn platform \
    --op DeleteCurrency \
    --currencyCode 'rJrQvirc' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 52 'DeleteCurrency' test.out

#- 53 GetCurrencyConfig
$CLI_EXE \
    --sn platform \
    --op GetCurrencyConfig \
    --currencyCode 'AI63EwfB' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 53 'GetCurrencyConfig' test.out

#- 54 GetCurrencySummary
$CLI_EXE \
    --sn platform \
    --op GetCurrencySummary \
    --currencyCode 'DMODnr4Z' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 54 'GetCurrencySummary' test.out

#- 55 GetDLCItemConfig
$CLI_EXE \
    --sn platform \
    --op GetDLCItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 55 'GetDLCItemConfig' test.out

#- 56 UpdateDLCItemConfig
# body param: body
echo '{"data": [{"id": "p9PNlBl8", "rewards": [{"currency": {"currencyCode": "yX4W6cxm", "namespace": "QikpgWot"}, "item": {"itemId": "kHo7ZmoR", "itemName": "hAxaeJes", "itemSku": "V7uet4eg", "itemType": "I4LhiSzY"}, "quantity": 0, "type": "ITEM"}, {"currency": {"currencyCode": "DQw07Mde", "namespace": "pDsUYn5Y"}, "item": {"itemId": "bGgSOofL", "itemName": "mgEFerjV", "itemSku": "oi8hhHWE", "itemType": "GS0CqSpb"}, "quantity": 7, "type": "CURRENCY"}, {"currency": {"currencyCode": "1czUiBWd", "namespace": "H2e6Ys4C"}, "item": {"itemId": "vmCvkLxk", "itemName": "5Fi4H1gb", "itemSku": "aa0ZTZsC", "itemType": "hWBOezng"}, "quantity": 81, "type": "ITEM"}]}, {"id": "E4Blf6AE", "rewards": [{"currency": {"currencyCode": "BxsWTANr", "namespace": "KCxWua3F"}, "item": {"itemId": "SZMTTtxc", "itemName": "31C1AGVf", "itemSku": "CnbWeLQR", "itemType": "nhCSGLH2"}, "quantity": 68, "type": "CURRENCY"}, {"currency": {"currencyCode": "IkopLGvV", "namespace": "pzznk5k3"}, "item": {"itemId": "WG5NIMlI", "itemName": "M442kUe9", "itemSku": "JHPutQ8t", "itemType": "c2hEwC9C"}, "quantity": 60, "type": "CURRENCY"}, {"currency": {"currencyCode": "RazR5W3m", "namespace": "X0EeTlvv"}, "item": {"itemId": "blhNrp4Y", "itemName": "3GezYw4o", "itemSku": "9aRcF0yn", "itemType": "HV9PLL0p"}, "quantity": 25, "type": "CURRENCY"}]}, {"id": "ZUP8QSHq", "rewards": [{"currency": {"currencyCode": "yddQubP1", "namespace": "P4NCSasr"}, "item": {"itemId": "OCafoYN0", "itemName": "Normu3GI", "itemSku": "YYk5m0rA", "itemType": "YKyQav0H"}, "quantity": 49, "type": "ITEM"}, {"currency": {"currencyCode": "wMZK7cf4", "namespace": "KlhS6PJU"}, "item": {"itemId": "ETXmVHYF", "itemName": "Fc4eE2Is", "itemSku": "8ORHjyNF", "itemType": "d0NKtBlm"}, "quantity": 64, "type": "ITEM"}, {"currency": {"currencyCode": "QVvz56m2", "namespace": "JQDYrAqS"}, "item": {"itemId": "gny6JTkE", "itemName": "NqRB8GOM", "itemSku": "YCEBx43s", "itemType": "H3ubq5dY"}, "quantity": 85, "type": "CURRENCY"}]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateDLCItemConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 56 'UpdateDLCItemConfig' test.out

#- 57 DeleteDLCItemConfig
$CLI_EXE \
    --sn platform \
    --op DeleteDLCItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 57 'DeleteDLCItemConfig' test.out

#- 58 GetPlatformDLCConfig
$CLI_EXE \
    --sn platform \
    --op GetPlatformDLCConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 58 'GetPlatformDLCConfig' test.out

#- 59 UpdatePlatformDLCConfig
# body param: body
echo '{"data": [{"platform": "EPICGAMES", "platformDlcIdMap": {"aLEZY7Kk": "KflD00pP", "TbzFvAcs": "5NKvYvej", "riAFgBhw": "csmJuxWR"}}, {"platform": "PSN", "platformDlcIdMap": {"vuqNGgKn": "RyJn8Pqr", "1ebeHx1g": "ue1RzJAm", "0XYfNYvr": "wbDFFLhw"}}, {"platform": "EPICGAMES", "platformDlcIdMap": {"Ybbmpady": "NneqP3bD", "djzoG4aD": "kcIxETuU", "HELUELx6": "IQ013Dmj"}}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePlatformDLCConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 59 'UpdatePlatformDLCConfig' test.out

#- 60 DeletePlatformDLCConfig
$CLI_EXE \
    --sn platform \
    --op DeletePlatformDLCConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 60 'DeletePlatformDLCConfig' test.out

#- 61 QueryEntitlements
$CLI_EXE \
    --sn platform \
    --op QueryEntitlements \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --appType 'DEMO' \
    --entitlementClazz 'SUBSCRIPTION' \
    --entitlementName 'FHr0dxvV' \
    --itemId '["bFHS4hCB", "XzttPcT6", "y5S7pmZD"]' \
    --limit '8' \
    --offset '53' \
    --origin 'Twitch' \
    --userId 'O5HQiDk7' \
    > test.out 2>&1
eval_tap $? 61 'QueryEntitlements' test.out

#- 62 QueryEntitlements1
$CLI_EXE \
    --sn platform \
    --op QueryEntitlements1 \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --itemIds '["F8ElKBkN", "vZ7q0VIJ", "cppJMajs"]' \
    --limit '10' \
    --offset '52' \
    > test.out 2>&1
eval_tap $? 62 'QueryEntitlements1' test.out

#- 63 EnableEntitlementOriginFeature
$CLI_EXE \
    --sn platform \
    --op EnableEntitlementOriginFeature \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 63 'EnableEntitlementOriginFeature' test.out

#- 64 GetEntitlementConfigInfo
$CLI_EXE \
    --sn platform \
    --op GetEntitlementConfigInfo \
    --namespace $AB_NAMESPACE \
    --withoutCache 'true' \
    > test.out 2>&1
eval_tap $? 64 'GetEntitlementConfigInfo' test.out

#- 65 GrantEntitlements
# body param: body
echo '{"entitlementGrantList": [{"collectionId": "rRvqkmkm", "endDate": "1984-10-19T00:00:00Z", "grantedCode": "4BAjeR4K", "itemId": "3gWF2v41", "itemNamespace": "Uvo8aLUD", "language": "ZCO", "origin": "Playstation", "quantity": 78, "region": "VKhdYSID", "source": "REWARD", "startDate": "1982-03-25T00:00:00Z", "storeId": "cyTvERPX"}, {"collectionId": "9t9wjnkK", "endDate": "1986-10-08T00:00:00Z", "grantedCode": "1siIkqt9", "itemId": "l2ZCamR0", "itemNamespace": "VG32nET1", "language": "ZsPc_EC", "origin": "Playstation", "quantity": 47, "region": "335mPB9r", "source": "REDEEM_CODE", "startDate": "1993-08-26T00:00:00Z", "storeId": "zaSacFKD"}, {"collectionId": "jtdeA79i", "endDate": "1985-03-30T00:00:00Z", "grantedCode": "LwvAvVAf", "itemId": "50Rr66Mj", "itemNamespace": "hoy5uJD6", "language": "MCR", "origin": "Oculus", "quantity": 45, "region": "e8MthnGV", "source": "ACHIEVEMENT", "startDate": "1985-11-03T00:00:00Z", "storeId": "TrCfd2Ng"}], "userIds": ["ysR50Qmt", "VnaNO9E1", "vVpvi8Yy"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op GrantEntitlements \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 65 'GrantEntitlements' test.out

#- 66 RevokeEntitlements
# body param: body
echo '["fZKgFTmf", "mkSd49ru", "7MkFXtVO"]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RevokeEntitlements \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 66 'RevokeEntitlements' test.out

#- 67 GetEntitlement
$CLI_EXE \
    --sn platform \
    --op GetEntitlement \
    --entitlementId 'jPV3x2jp' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 67 'GetEntitlement' test.out

#- 68 QueryFulfillmentHistories
$CLI_EXE \
    --sn platform \
    --op QueryFulfillmentHistories \
    --namespace $AB_NAMESPACE \
    --limit '55' \
    --offset '60' \
    --status 'FAIL' \
    --userId 'Sh6QQ1TF' \
    > test.out 2>&1
eval_tap $? 68 'QueryFulfillmentHistories' test.out

#- 69 QueryIAPClawbackHistory
$CLI_EXE \
    --sn platform \
    --op QueryIAPClawbackHistory \
    --namespace $AB_NAMESPACE \
    --endTime 'N4pE5R7K' \
    --eventType 'CHARGEBACK' \
    --externalOrderId 'dTKTZoUK' \
    --limit '53' \
    --offset '88' \
    --startTime 'ZypbApB0' \
    --status 'IGNORED' \
    --userId 'jXZRPcvx' \
    > test.out 2>&1
eval_tap $? 69 'QueryIAPClawbackHistory' test.out

#- 70 MockPlayStationStreamEvent
# body param: body
echo '{"body": {"account": "ds9oCfY7", "additionalData": {"entitlement": [{"clientTransaction": [{"amountConsumed": 33, "clientTransactionId": "VjSgutCr"}, {"amountConsumed": 49, "clientTransactionId": "VTjBwUDR"}, {"amountConsumed": 49, "clientTransactionId": "FBzd8jyQ"}], "entitlementId": "BZEvolbz", "usageCount": 84}, {"clientTransaction": [{"amountConsumed": 100, "clientTransactionId": "FMUjcDZa"}, {"amountConsumed": 82, "clientTransactionId": "o3mCyuez"}, {"amountConsumed": 74, "clientTransactionId": "4laMdMaN"}], "entitlementId": "sMhPojLm", "usageCount": 62}, {"clientTransaction": [{"amountConsumed": 46, "clientTransactionId": "Vm6jV3no"}, {"amountConsumed": 71, "clientTransactionId": "vCRO4Orh"}, {"amountConsumed": 76, "clientTransactionId": "cMBY9ML4"}], "entitlementId": "bum2BHJ2", "usageCount": 97}], "purpose": "8WyoOLvi"}, "originalTitleName": "8psWbXpG", "paymentProductSKU": "NM0F1zJ5", "purchaseDate": "SomnqQI5", "sourceOrderItemId": "LhC3C1qz", "titleName": "LMM24Nsi"}, "eventDomain": "YUx6ncNW", "eventSource": "Pp9cix6N", "eventType": "DScKjq4Z", "eventVersion": 81, "id": "AEOw0eMm", "timestamp": "zJUHWm3f"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op MockPlayStationStreamEvent \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 70 'MockPlayStationStreamEvent' test.out

#- 71 GetAppleIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetAppleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 71 'GetAppleIAPConfig' test.out

#- 72 UpdateAppleIAPConfig
# body param: body
echo '{"bundleId": "PA4ooEDo", "password": "iaEb3YhC"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateAppleIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 72 'UpdateAppleIAPConfig' test.out

#- 73 DeleteAppleIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteAppleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 73 'DeleteAppleIAPConfig' test.out

#- 74 GetEpicGamesIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetEpicGamesIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 74 'GetEpicGamesIAPConfig' test.out

#- 75 UpdateEpicGamesIAPConfig
# body param: body
echo '{"sandboxId": "0Vekdc31"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateEpicGamesIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 75 'UpdateEpicGamesIAPConfig' test.out

#- 76 DeleteEpicGamesIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteEpicGamesIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 76 'DeleteEpicGamesIAPConfig' test.out

#- 77 GetGoogleIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetGoogleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 77 'GetGoogleIAPConfig' test.out

#- 78 UpdateGoogleIAPConfig
# body param: body
echo '{"applicationName": "pLIoiZQf", "serviceAccountId": "Bz055F1T"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateGoogleIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 78 'UpdateGoogleIAPConfig' test.out

#- 79 DeleteGoogleIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteGoogleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 79 'DeleteGoogleIAPConfig' test.out

#- 80 UpdateGoogleP12File
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UpdateGoogleP12File \
    --namespace $AB_NAMESPACE \
    --upload file $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 80 'UpdateGoogleP12File' test.out

#- 81 GetIAPItemConfig
$CLI_EXE \
    --sn platform \
    --op GetIAPItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 81 'GetIAPItemConfig' test.out

#- 82 UpdateIAPItemConfig
# body param: body
echo '{"data": [{"itemIdentity": "A8ykt2wR", "itemIdentityType": "ITEM_SKU", "platformProductIdMap": {"Mq69Yeb9": "PR0hLoKs", "B6kVPsdl": "hbLXFhVd", "Px4qSXGz": "nvkl01qg"}}, {"itemIdentity": "95FcTcu4", "itemIdentityType": "ITEM_ID", "platformProductIdMap": {"yPX9gyzl": "QQf3p3Gj", "lXyEKtWN": "Rx0l3Y1q", "IweBhq97": "FzFCXZGv"}}, {"itemIdentity": "10Yp8Cmg", "itemIdentityType": "ITEM_ID", "platformProductIdMap": {"UVtob08P": "pKDajAlN", "dvAY2yUR": "ykMekxpI", "xHVQ1VIy": "UvTDFmrf"}}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateIAPItemConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 82 'UpdateIAPItemConfig' test.out

#- 83 DeleteIAPItemConfig
$CLI_EXE \
    --sn platform \
    --op DeleteIAPItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 83 'DeleteIAPItemConfig' test.out

#- 84 GetOculusIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetOculusIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 84 'GetOculusIAPConfig' test.out

#- 85 UpdateOculusIAPConfig
# body param: body
echo '{"appId": "QY643xvo", "appSecret": "9GkYEwYp"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateOculusIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 85 'UpdateOculusIAPConfig' test.out

#- 86 DeleteOculusIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteOculusIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 86 'DeleteOculusIAPConfig' test.out

#- 87 GetPlayStationIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetPlayStationIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 87 'GetPlayStationIAPConfig' test.out

#- 88 UpdatePlaystationIAPConfig
# body param: body
echo '{"backOfficeServerClientId": "WUw2cZTH", "backOfficeServerClientSecret": "Wjw6jxox", "enableStreamJob": false, "environment": "YUzaIRLX", "streamName": "QVIRnA21", "streamPartnerName": "JrhlXJpO"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePlaystationIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 88 'UpdatePlaystationIAPConfig' test.out

#- 89 DeletePlaystationIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeletePlaystationIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 89 'DeletePlaystationIAPConfig' test.out

#- 90 ValidateExistedPlaystationIAPConfig
$CLI_EXE \
    --sn platform \
    --op ValidateExistedPlaystationIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 90 'ValidateExistedPlaystationIAPConfig' test.out

#- 91 ValidatePlaystationIAPConfig
# body param: body
echo '{"backOfficeServerClientId": "nIJ5YpJT", "backOfficeServerClientSecret": "w2cdgKpA", "enableStreamJob": true, "environment": "blUu8P0c", "streamName": "1Ak00DMj", "streamPartnerName": "PwPTdRWe"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ValidatePlaystationIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 91 'ValidatePlaystationIAPConfig' test.out

#- 92 GetSteamIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetSteamIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 92 'GetSteamIAPConfig' test.out

#- 93 UpdateSteamIAPConfig
# body param: body
echo '{"appId": "pLuL3orb", "publisherAuthenticationKey": "5Uhs8D8t"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateSteamIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 93 'UpdateSteamIAPConfig' test.out

#- 94 DeleteSteamIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteSteamIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 94 'DeleteSteamIAPConfig' test.out

#- 95 GetTwitchIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetTwitchIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 95 'GetTwitchIAPConfig' test.out

#- 96 UpdateTwitchIAPConfig
# body param: body
echo '{"clientId": "goWBSdIO", "clientSecret": "XiDyaNSo", "organizationId": "VeNR1CnZ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateTwitchIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 96 'UpdateTwitchIAPConfig' test.out

#- 97 DeleteTwitchIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteTwitchIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 97 'DeleteTwitchIAPConfig' test.out

#- 98 GetXblIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetXblIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 98 'GetXblIAPConfig' test.out

#- 99 UpdateXblIAPConfig
# body param: body
echo '{"relyingPartyCert": "tgsFQxj8"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXblIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 99 'UpdateXblIAPConfig' test.out

#- 100 DeleteXblAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteXblAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 100 'DeleteXblAPConfig' test.out

#- 101 UpdateXblBPCertFile
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UpdateXblBPCertFile \
    --namespace $AB_NAMESPACE \
    --upload file $TEMP_FILE_UPLOAD \
    --password 'yvfZg5ad' \
    > test.out 2>&1
eval_tap $? 101 'UpdateXblBPCertFile' test.out

#- 102 DownloadInvoiceDetails
$CLI_EXE \
    --sn platform \
    --op DownloadInvoiceDetails \
    --namespace $AB_NAMESPACE \
    --feature 'RLqk8RJ7' \
    --itemId 'eRPRZQEa' \
    --itemType 'OPTIONBOX' \
    --endTime 'fsMEpIYp' \
    --startTime 'CFLsMBtb' \
    > test.out 2>&1
eval_tap $? 102 'DownloadInvoiceDetails' test.out

#- 103 GenerateInvoiceSummary
$CLI_EXE \
    --sn platform \
    --op GenerateInvoiceSummary \
    --namespace $AB_NAMESPACE \
    --feature 'UFHuXEk5' \
    --itemId '45rna4yq' \
    --itemType 'OPTIONBOX' \
    --endTime '0CasV3E4' \
    --startTime 'Y5thfhr7' \
    > test.out 2>&1
eval_tap $? 103 'GenerateInvoiceSummary' test.out

#- 104 SyncInGameItem
# body param: body
echo '{"categoryPath": "mtbORY3t", "targetItemId": "gWQoPXy6", "targetNamespace": "UcLsE8ax"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncInGameItem \
    --namespace $AB_NAMESPACE \
    --storeId 'INeVgXRS' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 104 'SyncInGameItem' test.out

#- 105 CreateItem
# body param: body
echo '{"appId": "Wunyyjb6", "appType": "SOFTWARE", "baseAppId": "emYDrZUa", "boothName": "8vQDCN7I", "categoryPath": "dlJ1PMOU", "clazz": "RgagYvvn", "displayOrder": 3, "entitlementType": "DURABLE", "ext": {"Mcn7bPSw": {}, "DrnwSAsz": {}, "YqlmRleL": {}}, "features": ["Lur8ZDTq", "i4wZKaTs", "IYBUt6I9"], "flexible": true, "images": [{"as": "jEyARBBy", "caption": "dvokCwOE", "height": 49, "imageUrl": "qM6gRUDR", "smallImageUrl": "1z4MR9LI", "width": 75}, {"as": "XzWxdX0x", "caption": "YnjGYCCy", "height": 65, "imageUrl": "Z8GWWW5Y", "smallImageUrl": "VCB49EZ1", "width": 95}, {"as": "Bf8ZGZFD", "caption": "3UMEVag4", "height": 0, "imageUrl": "x0LXJFAX", "smallImageUrl": "5vAlEDrJ", "width": 19}], "inventoryConfig": {"customAttributes": {"sSos99Cq": {}, "KnpPxdrk": {}, "71LB9aPX": {}}, "serverCustomAttributes": {"BoJYVeot": {}, "bRB4b5Mx": {}, "yt9piE6b": {}}, "slotUsed": 43}, "itemIds": ["ejCQVHQh", "pjIV57iZ", "3dotiexK"], "itemQty": {"FRnTeZUj": 98, "AtmM9giC": 25, "MmgTEcq9": 10}, "itemType": "CODE", "listable": true, "localizations": {"VlldeCyz": {"description": "La9iLQfp", "localExt": {"7qesVRpU": {}, "h0hHfd4l": {}, "f9KEkm4o": {}}, "longDescription": "AEYjIRuQ", "title": "j2eY18Uk"}, "fbJKGSq3": {"description": "FZ7S5mZw", "localExt": {"5xmK0X3q": {}, "40kHF4AU": {}, "j2aj34Hd": {}}, "longDescription": "4JlFxAd6", "title": "pFlIwdLM"}, "q3wkXFgb": {"description": "UE15VSDh", "localExt": {"dLkMGnJC": {}, "f5AsFSk1": {}, "RbbhgbUt": {}}, "longDescription": "xmr7JWx7", "title": "qO8gBrSE"}}, "lootBoxConfig": {"rewardCount": 79, "rewards": [{"lootBoxItems": [{"count": 60, "duration": 3, "endDate": "1984-02-20T00:00:00Z", "itemId": "GeET3JIt", "itemSku": "9Rije8I2", "itemType": "gcwZ3gQD"}, {"count": 40, "duration": 4, "endDate": "1973-10-20T00:00:00Z", "itemId": "6SIHjEMN", "itemSku": "70vkEkeW", "itemType": "WuKdkj6U"}, {"count": 7, "duration": 51, "endDate": "1971-04-02T00:00:00Z", "itemId": "nqg5WMee", "itemSku": "eQcNzaR2", "itemType": "GUUh8z21"}], "name": "qUZToAWe", "odds": 0.5738413902128001, "type": "PROBABILITY_GROUP", "weight": 51}, {"lootBoxItems": [{"count": 70, "duration": 7, "endDate": "1999-02-26T00:00:00Z", "itemId": "EEf6Y4L2", "itemSku": "3t1jActS", "itemType": "lkcTEheN"}, {"count": 92, "duration": 59, "endDate": "1997-01-28T00:00:00Z", "itemId": "6RRclxEM", "itemSku": "AUBlL1q5", "itemType": "drjNlSaE"}, {"count": 1, "duration": 60, "endDate": "1979-06-04T00:00:00Z", "itemId": "KeiiIDSA", "itemSku": "L4bmaWWi", "itemType": "HGWAw334"}], "name": "IA2ab6dP", "odds": 0.056753272985303416, "type": "REWARD_GROUP", "weight": 8}, {"lootBoxItems": [{"count": 26, "duration": 0, "endDate": "1999-01-20T00:00:00Z", "itemId": "aJxpwcOf", "itemSku": "PgCh9mZF", "itemType": "vSSgdSHF"}, {"count": 88, "duration": 27, "endDate": "1994-02-14T00:00:00Z", "itemId": "ZvbErgpG", "itemSku": "9sHIrMFo", "itemType": "uUeoseVC"}, {"count": 59, "duration": 56, "endDate": "1980-11-13T00:00:00Z", "itemId": "iUs7pJMo", "itemSku": "TQF0Nfsp", "itemType": "erdRGw16"}], "name": "ZLOFHUXZ", "odds": 0.14276846616944094, "type": "REWARD", "weight": 33}], "rollFunction": "DEFAULT"}, "maxCount": 30, "maxCountPerUser": 33, "name": "NrKNCM7i", "optionBoxConfig": {"boxItems": [{"count": 31, "duration": 62, "endDate": "1984-02-14T00:00:00Z", "itemId": "GOzuzKeP", "itemSku": "fqneyS76", "itemType": "9Sk6zGil"}, {"count": 5, "duration": 22, "endDate": "1994-11-27T00:00:00Z", "itemId": "QhVR7wDn", "itemSku": "vSnJgEKy", "itemType": "jLf25db0"}, {"count": 28, "duration": 9, "endDate": "1990-03-20T00:00:00Z", "itemId": "bZI8eJdo", "itemSku": "6JxswzKh", "itemType": "OHLga3Bx"}]}, "purchasable": false, "recurring": {"cycle": "MONTHLY", "fixedFreeDays": 11, "fixedTrialCycles": 78, "graceDays": 25}, "regionData": {"y6XbNuKy": [{"currencyCode": "sFzpRfxk", "currencyNamespace": "o9Ef1sM2", "currencyType": "REAL", "discountAmount": 40, "discountExpireAt": "1972-05-27T00:00:00Z", "discountPercentage": 7, "discountPurchaseAt": "1978-01-16T00:00:00Z", "expireAt": "1977-09-19T00:00:00Z", "price": 63, "purchaseAt": "1999-07-23T00:00:00Z", "trialPrice": 86}, {"currencyCode": "RbbdVY3b", "currencyNamespace": "O9iqJxu2", "currencyType": "VIRTUAL", "discountAmount": 25, "discountExpireAt": "1996-12-14T00:00:00Z", "discountPercentage": 25, "discountPurchaseAt": "1976-10-04T00:00:00Z", "expireAt": "1972-02-22T00:00:00Z", "price": 9, "purchaseAt": "1980-06-06T00:00:00Z", "trialPrice": 49}, {"currencyCode": "UkQZuugy", "currencyNamespace": "gNS0xdFU", "currencyType": "REAL", "discountAmount": 66, "discountExpireAt": "1989-03-10T00:00:00Z", "discountPercentage": 98, "discountPurchaseAt": "1985-05-02T00:00:00Z", "expireAt": "1973-03-01T00:00:00Z", "price": 33, "purchaseAt": "1989-11-02T00:00:00Z", "trialPrice": 38}], "DLt3VRJg": [{"currencyCode": "vfjBouVB", "currencyNamespace": "LtdjPv7w", "currencyType": "VIRTUAL", "discountAmount": 43, "discountExpireAt": "1998-06-15T00:00:00Z", "discountPercentage": 94, "discountPurchaseAt": "1992-05-04T00:00:00Z", "expireAt": "1992-11-03T00:00:00Z", "price": 72, "purchaseAt": "1990-09-04T00:00:00Z", "trialPrice": 71}, {"currencyCode": "YmiY2kBC", "currencyNamespace": "y7lHqlzi", "currencyType": "VIRTUAL", "discountAmount": 29, "discountExpireAt": "1977-12-15T00:00:00Z", "discountPercentage": 49, "discountPurchaseAt": "1997-04-21T00:00:00Z", "expireAt": "1986-03-06T00:00:00Z", "price": 57, "purchaseAt": "1999-09-11T00:00:00Z", "trialPrice": 57}, {"currencyCode": "2hZKSWrk", "currencyNamespace": "K8E7nEj2", "currencyType": "VIRTUAL", "discountAmount": 51, "discountExpireAt": "1996-12-15T00:00:00Z", "discountPercentage": 20, "discountPurchaseAt": "1980-06-12T00:00:00Z", "expireAt": "1974-08-08T00:00:00Z", "price": 58, "purchaseAt": "1998-07-01T00:00:00Z", "trialPrice": 19}], "cO3faIFp": [{"currencyCode": "m7M1wvzK", "currencyNamespace": "KAVGlZL4", "currencyType": "VIRTUAL", "discountAmount": 84, "discountExpireAt": "1988-11-24T00:00:00Z", "discountPercentage": 54, "discountPurchaseAt": "1985-07-30T00:00:00Z", "expireAt": "1988-06-26T00:00:00Z", "price": 89, "purchaseAt": "1971-01-03T00:00:00Z", "trialPrice": 66}, {"currencyCode": "gb2Gr4Zz", "currencyNamespace": "rrTLfVXq", "currencyType": "VIRTUAL", "discountAmount": 21, "discountExpireAt": "1995-07-28T00:00:00Z", "discountPercentage": 95, "discountPurchaseAt": "1999-09-29T00:00:00Z", "expireAt": "1991-05-24T00:00:00Z", "price": 95, "purchaseAt": "1994-03-11T00:00:00Z", "trialPrice": 72}, {"currencyCode": "uVMaU6yc", "currencyNamespace": "IVGcIqz9", "currencyType": "REAL", "discountAmount": 11, "discountExpireAt": "1978-10-15T00:00:00Z", "discountPercentage": 70, "discountPurchaseAt": "1982-04-21T00:00:00Z", "expireAt": "1998-09-11T00:00:00Z", "price": 7, "purchaseAt": "1972-06-20T00:00:00Z", "trialPrice": 6}]}, "saleConfig": {"currencyCode": "aK1KwCWy", "price": 96}, "seasonType": "PASS", "sectionExclusive": true, "sellable": false, "sku": "Ils5Tbaf", "stackable": false, "status": "ACTIVE", "tags": ["2dujDGRq", "6PqhIYkv", "99WyTYOZ"], "targetCurrencyCode": "ZzygRzbm", "targetNamespace": "mhHJ3fK5", "thumbnailUrl": "74KbqpNC", "useCount": 58}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateItem \
    --namespace $AB_NAMESPACE \
    --storeId 'fA7Q5XtM' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 105 'CreateItem' test.out

#- 106 GetItemByAppId
$CLI_EXE \
    --sn platform \
    --op GetItemByAppId \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --storeId 'Tn98R4H2' \
    --appId 'MVsX6fy6' \
    > test.out 2>&1
eval_tap $? 106 'GetItemByAppId' test.out

#- 107 QueryItems
$CLI_EXE \
    --sn platform \
    --op QueryItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --appType 'SOFTWARE' \
    --availableDate 'LQ1PcV10' \
    --baseAppId 'VVyi5sPz' \
    --categoryPath 'ExzEZDtl' \
    --features 'a0S4aRsr' \
    --includeSubCategoryItem 'true' \
    --itemType 'OPTIONBOX' \
    --limit '67' \
    --offset '65' \
    --region '1A1CmqiX' \
    --sortBy '["createdAt:asc", "updatedAt:asc"]' \
    --storeId 'Npb3P10u' \
    --tags 'H00HBf67' \
    --targetNamespace '6moEobdE' \
    > test.out 2>&1
eval_tap $? 107 'QueryItems' test.out

#- 108 ListBasicItemsByFeatures
$CLI_EXE \
    --sn platform \
    --op ListBasicItemsByFeatures \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --features '["dcNFTPfd", "DuxRVgK0", "NlRjqTJ7"]' \
    > test.out 2>&1
eval_tap $? 108 'ListBasicItemsByFeatures' test.out

#- 109 GetItems
$CLI_EXE \
    --sn platform \
    --op GetItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --storeId 'tsJpgREo' \
    --itemIds 'KJ78NLh2' \
    > test.out 2>&1
eval_tap $? 109 'GetItems' test.out

#- 110 GetItemBySku
$CLI_EXE \
    --sn platform \
    --op GetItemBySku \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --storeId '8WbZetBD' \
    --sku '6URsNcsC' \
    > test.out 2>&1
eval_tap $? 110 'GetItemBySku' test.out

#- 111 GetLocaleItemBySku
$CLI_EXE \
    --sn platform \
    --op GetLocaleItemBySku \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --language 'Xj2XBtIG' \
    --populateBundle 'false' \
    --region '5TV30b60' \
    --storeId 'lu4F30Cf' \
    --sku 'S3ghN3i2' \
    > test.out 2>&1
eval_tap $? 111 'GetLocaleItemBySku' test.out

#- 112 GetEstimatedPrice
$CLI_EXE \
    --sn platform \
    --op GetEstimatedPrice \
    --namespace $AB_NAMESPACE \
    --platform 'jGhryxFC' \
    --region 't9dXisju' \
    --storeId 'w5FVEenI' \
    --itemIds '9HBxUMjb' \
    --userId 'RgN7hSFv' \
    > test.out 2>&1
eval_tap $? 112 'GetEstimatedPrice' test.out

#- 113 GetItemIdBySku
$CLI_EXE \
    --sn platform \
    --op GetItemIdBySku \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --storeId 'ubTDZKUR' \
    --sku 'CDw55vZY' \
    > test.out 2>&1
eval_tap $? 113 'GetItemIdBySku' test.out

#- 114 GetBulkItemIdBySkus
$CLI_EXE \
    --sn platform \
    --op GetBulkItemIdBySkus \
    --namespace $AB_NAMESPACE \
    --sku '["pDcz7VXM", "4i7FuGg4", "yAjfn2NU"]' \
    --storeId 'xJ178iXq' \
    > test.out 2>&1
eval_tap $? 114 'GetBulkItemIdBySkus' test.out

#- 115 BulkGetLocaleItems
$CLI_EXE \
    --sn platform \
    --op BulkGetLocaleItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --language 'CTknOnrh' \
    --region '6qIIlHmJ' \
    --storeId 'XFUPCUrl' \
    --itemIds 'koAVVrW0' \
    > test.out 2>&1
eval_tap $? 115 'BulkGetLocaleItems' test.out

#- 116 GetAvailablePredicateTypes
$CLI_EXE \
    --sn platform \
    --op GetAvailablePredicateTypes \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 116 'GetAvailablePredicateTypes' test.out

#- 117 ValidateItemPurchaseCondition
# body param: body
echo '{"itemIds": ["DIlw9UrL", "aZo4zRxm", "ohjvXyHM"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ValidateItemPurchaseCondition \
    --namespace $AB_NAMESPACE \
    --platform 'urWRL7Vd' \
    --userId 'm751JZnp' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 117 'ValidateItemPurchaseCondition' test.out

#- 118 BulkUpdateRegionData
# body param: body
echo '{"changes": [{"itemIdentities": ["MocYANwu", "qtGSEguy", "sX8fOhah"], "itemIdentityType": "ITEM_ID", "regionData": {"YEklRl5i": [{"currencyCode": "232CPKCb", "currencyNamespace": "PhpYMwXN", "currencyType": "REAL", "discountAmount": 44, "discountExpireAt": "1973-07-22T00:00:00Z", "discountPercentage": 8, "discountPurchaseAt": "1972-06-12T00:00:00Z", "discountedPrice": 13, "expireAt": "1976-03-31T00:00:00Z", "price": 85, "purchaseAt": "1973-08-18T00:00:00Z", "trialPrice": 20}, {"currencyCode": "yTwE9PDf", "currencyNamespace": "dUfIs7mz", "currencyType": "REAL", "discountAmount": 35, "discountExpireAt": "1992-08-06T00:00:00Z", "discountPercentage": 16, "discountPurchaseAt": "1985-02-08T00:00:00Z", "discountedPrice": 84, "expireAt": "1990-07-04T00:00:00Z", "price": 89, "purchaseAt": "1996-03-11T00:00:00Z", "trialPrice": 65}, {"currencyCode": "z41MbH4n", "currencyNamespace": "0i0wMaMj", "currencyType": "VIRTUAL", "discountAmount": 29, "discountExpireAt": "1973-10-26T00:00:00Z", "discountPercentage": 30, "discountPurchaseAt": "1994-12-12T00:00:00Z", "discountedPrice": 56, "expireAt": "1980-09-15T00:00:00Z", "price": 27, "purchaseAt": "1981-07-18T00:00:00Z", "trialPrice": 78}], "LlQlIk2S": [{"currencyCode": "upIlMAxD", "currencyNamespace": "2M2Mq8hF", "currencyType": "VIRTUAL", "discountAmount": 62, "discountExpireAt": "1994-06-06T00:00:00Z", "discountPercentage": 55, "discountPurchaseAt": "1982-09-20T00:00:00Z", "discountedPrice": 22, "expireAt": "1995-07-01T00:00:00Z", "price": 9, "purchaseAt": "1981-01-31T00:00:00Z", "trialPrice": 2}, {"currencyCode": "auXDIzjh", "currencyNamespace": "7n6ObHtR", "currencyType": "VIRTUAL", "discountAmount": 21, "discountExpireAt": "1975-11-18T00:00:00Z", "discountPercentage": 70, "discountPurchaseAt": "1990-09-03T00:00:00Z", "discountedPrice": 10, "expireAt": "1999-02-20T00:00:00Z", "price": 62, "purchaseAt": "1993-06-27T00:00:00Z", "trialPrice": 99}, {"currencyCode": "iD9NC6j4", "currencyNamespace": "cVqcnjEh", "currencyType": "VIRTUAL", "discountAmount": 68, "discountExpireAt": "1996-03-12T00:00:00Z", "discountPercentage": 9, "discountPurchaseAt": "1997-11-14T00:00:00Z", "discountedPrice": 64, "expireAt": "1974-03-16T00:00:00Z", "price": 1, "purchaseAt": "1978-01-13T00:00:00Z", "trialPrice": 68}], "oMR9J0Sg": [{"currencyCode": "VyfLSZPg", "currencyNamespace": "SGCaFObp", "currencyType": "VIRTUAL", "discountAmount": 13, "discountExpireAt": "1999-02-16T00:00:00Z", "discountPercentage": 61, "discountPurchaseAt": "1996-01-31T00:00:00Z", "discountedPrice": 91, "expireAt": "1993-08-13T00:00:00Z", "price": 38, "purchaseAt": "1983-03-17T00:00:00Z", "trialPrice": 84}, {"currencyCode": "9Df4QLUF", "currencyNamespace": "cs1dGzsD", "currencyType": "VIRTUAL", "discountAmount": 69, "discountExpireAt": "1986-06-20T00:00:00Z", "discountPercentage": 88, "discountPurchaseAt": "1976-09-10T00:00:00Z", "discountedPrice": 40, "expireAt": "1999-03-28T00:00:00Z", "price": 81, "purchaseAt": "1979-01-13T00:00:00Z", "trialPrice": 6}, {"currencyCode": "qVmJk5Qv", "currencyNamespace": "Bndwl4q0", "currencyType": "REAL", "discountAmount": 45, "discountExpireAt": "1974-07-14T00:00:00Z", "discountPercentage": 73, "discountPurchaseAt": "1982-06-29T00:00:00Z", "discountedPrice": 22, "expireAt": "1975-09-05T00:00:00Z", "price": 99, "purchaseAt": "1972-10-13T00:00:00Z", "trialPrice": 17}]}}, {"itemIdentities": ["2JdpnFfG", "sWo0rEoK", "t6vmtjYC"], "itemIdentityType": "ITEM_ID", "regionData": {"vH2UD0en": [{"currencyCode": "oxCSUyuZ", "currencyNamespace": "2pbTvFB5", "currencyType": "REAL", "discountAmount": 12, "discountExpireAt": "1997-03-15T00:00:00Z", "discountPercentage": 51, "discountPurchaseAt": "1991-12-26T00:00:00Z", "discountedPrice": 75, "expireAt": "1988-06-24T00:00:00Z", "price": 60, "purchaseAt": "1996-05-08T00:00:00Z", "trialPrice": 36}, {"currencyCode": "mGk5E04R", "currencyNamespace": "d6KGhesE", "currencyType": "VIRTUAL", "discountAmount": 94, "discountExpireAt": "1993-03-08T00:00:00Z", "discountPercentage": 42, "discountPurchaseAt": "1979-08-19T00:00:00Z", "discountedPrice": 66, "expireAt": "1982-12-07T00:00:00Z", "price": 21, "purchaseAt": "1983-06-19T00:00:00Z", "trialPrice": 49}, {"currencyCode": "4f7Auv2C", "currencyNamespace": "REo6OUrx", "currencyType": "VIRTUAL", "discountAmount": 64, "discountExpireAt": "1984-10-13T00:00:00Z", "discountPercentage": 19, "discountPurchaseAt": "1983-11-21T00:00:00Z", "discountedPrice": 50, "expireAt": "1973-04-20T00:00:00Z", "price": 60, "purchaseAt": "1998-01-17T00:00:00Z", "trialPrice": 67}], "iYEdfrGv": [{"currencyCode": "roTaOmRl", "currencyNamespace": "PjVVLoiF", "currencyType": "VIRTUAL", "discountAmount": 80, "discountExpireAt": "1985-10-15T00:00:00Z", "discountPercentage": 4, "discountPurchaseAt": "1996-09-30T00:00:00Z", "discountedPrice": 64, "expireAt": "1991-03-04T00:00:00Z", "price": 14, "purchaseAt": "1981-04-17T00:00:00Z", "trialPrice": 59}, {"currencyCode": "HbZRu9G0", "currencyNamespace": "v1xDdjeo", "currencyType": "VIRTUAL", "discountAmount": 46, "discountExpireAt": "1986-04-09T00:00:00Z", "discountPercentage": 8, "discountPurchaseAt": "1980-01-29T00:00:00Z", "discountedPrice": 61, "expireAt": "1992-10-10T00:00:00Z", "price": 95, "purchaseAt": "1991-02-14T00:00:00Z", "trialPrice": 35}, {"currencyCode": "MtxrsTyH", "currencyNamespace": "pm4pm7VC", "currencyType": "VIRTUAL", "discountAmount": 77, "discountExpireAt": "1987-08-13T00:00:00Z", "discountPercentage": 83, "discountPurchaseAt": "1974-06-20T00:00:00Z", "discountedPrice": 36, "expireAt": "1983-04-30T00:00:00Z", "price": 42, "purchaseAt": "1974-01-14T00:00:00Z", "trialPrice": 69}], "6Bmx4tmc": [{"currencyCode": "Luaq6cOt", "currencyNamespace": "SKFvoxZJ", "currencyType": "VIRTUAL", "discountAmount": 94, "discountExpireAt": "1973-06-20T00:00:00Z", "discountPercentage": 12, "discountPurchaseAt": "1993-12-01T00:00:00Z", "discountedPrice": 96, "expireAt": "1988-03-16T00:00:00Z", "price": 21, "purchaseAt": "1973-11-23T00:00:00Z", "trialPrice": 19}, {"currencyCode": "2TiIvs7m", "currencyNamespace": "WSoSFfy0", "currencyType": "VIRTUAL", "discountAmount": 55, "discountExpireAt": "1981-09-13T00:00:00Z", "discountPercentage": 83, "discountPurchaseAt": "1982-03-01T00:00:00Z", "discountedPrice": 88, "expireAt": "1979-12-01T00:00:00Z", "price": 11, "purchaseAt": "1983-08-24T00:00:00Z", "trialPrice": 33}, {"currencyCode": "2gImDmO6", "currencyNamespace": "n1d0JCVZ", "currencyType": "REAL", "discountAmount": 59, "discountExpireAt": "1985-06-28T00:00:00Z", "discountPercentage": 80, "discountPurchaseAt": "1995-10-04T00:00:00Z", "discountedPrice": 11, "expireAt": "1973-04-07T00:00:00Z", "price": 66, "purchaseAt": "1981-04-20T00:00:00Z", "trialPrice": 10}]}}, {"itemIdentities": ["X2s8QO6c", "VQW8rgkO", "QeX8lukY"], "itemIdentityType": "ITEM_SKU", "regionData": {"mhk0X3ej": [{"currencyCode": "9Uti3dyG", "currencyNamespace": "bEkBxg74", "currencyType": "REAL", "discountAmount": 60, "discountExpireAt": "1988-03-10T00:00:00Z", "discountPercentage": 1, "discountPurchaseAt": "1989-01-16T00:00:00Z", "discountedPrice": 38, "expireAt": "1977-07-08T00:00:00Z", "price": 27, "purchaseAt": "1979-02-12T00:00:00Z", "trialPrice": 41}, {"currencyCode": "yQjDo4kz", "currencyNamespace": "wyXelzRN", "currencyType": "REAL", "discountAmount": 82, "discountExpireAt": "1996-06-14T00:00:00Z", "discountPercentage": 74, "discountPurchaseAt": "1998-01-16T00:00:00Z", "discountedPrice": 69, "expireAt": "1985-05-25T00:00:00Z", "price": 63, "purchaseAt": "1997-04-30T00:00:00Z", "trialPrice": 0}, {"currencyCode": "dgiI9spL", "currencyNamespace": "oEtndjE2", "currencyType": "REAL", "discountAmount": 73, "discountExpireAt": "1994-04-04T00:00:00Z", "discountPercentage": 20, "discountPurchaseAt": "1975-07-11T00:00:00Z", "discountedPrice": 5, "expireAt": "1991-08-06T00:00:00Z", "price": 28, "purchaseAt": "1995-08-22T00:00:00Z", "trialPrice": 61}], "lvmpRedp": [{"currencyCode": "kHktsK4R", "currencyNamespace": "fZnHpFlx", "currencyType": "VIRTUAL", "discountAmount": 8, "discountExpireAt": "1977-11-10T00:00:00Z", "discountPercentage": 91, "discountPurchaseAt": "1989-02-21T00:00:00Z", "discountedPrice": 1, "expireAt": "1987-03-28T00:00:00Z", "price": 0, "purchaseAt": "1995-01-13T00:00:00Z", "trialPrice": 62}, {"currencyCode": "yDAPiX4B", "currencyNamespace": "dyvySB5C", "currencyType": "VIRTUAL", "discountAmount": 40, "discountExpireAt": "1982-06-05T00:00:00Z", "discountPercentage": 91, "discountPurchaseAt": "1983-01-27T00:00:00Z", "discountedPrice": 80, "expireAt": "1995-09-19T00:00:00Z", "price": 54, "purchaseAt": "1983-04-12T00:00:00Z", "trialPrice": 41}, {"currencyCode": "TNvMEtxF", "currencyNamespace": "EIudQzjv", "currencyType": "VIRTUAL", "discountAmount": 57, "discountExpireAt": "1972-07-30T00:00:00Z", "discountPercentage": 70, "discountPurchaseAt": "1989-01-03T00:00:00Z", "discountedPrice": 100, "expireAt": "1975-08-06T00:00:00Z", "price": 37, "purchaseAt": "1988-03-16T00:00:00Z", "trialPrice": 28}], "QXUAIbB2": [{"currencyCode": "dLR6TB3v", "currencyNamespace": "Gn8d66LY", "currencyType": "REAL", "discountAmount": 5, "discountExpireAt": "1991-08-01T00:00:00Z", "discountPercentage": 42, "discountPurchaseAt": "1988-05-15T00:00:00Z", "discountedPrice": 34, "expireAt": "1999-04-30T00:00:00Z", "price": 89, "purchaseAt": "1971-03-25T00:00:00Z", "trialPrice": 27}, {"currencyCode": "crrVWr6L", "currencyNamespace": "DjRbA9Mh", "currencyType": "VIRTUAL", "discountAmount": 91, "discountExpireAt": "1996-11-28T00:00:00Z", "discountPercentage": 80, "discountPurchaseAt": "1980-11-05T00:00:00Z", "discountedPrice": 83, "expireAt": "1984-07-24T00:00:00Z", "price": 15, "purchaseAt": "1997-12-02T00:00:00Z", "trialPrice": 64}, {"currencyCode": "Ru2zQoWN", "currencyNamespace": "MyuE8IFT", "currencyType": "VIRTUAL", "discountAmount": 78, "discountExpireAt": "1986-10-21T00:00:00Z", "discountPercentage": 32, "discountPurchaseAt": "1992-07-18T00:00:00Z", "discountedPrice": 88, "expireAt": "1971-02-20T00:00:00Z", "price": 8, "purchaseAt": "1999-06-18T00:00:00Z", "trialPrice": 82}]}}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op BulkUpdateRegionData \
    --namespace $AB_NAMESPACE \
    --storeId 'lzYCJQBl' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 118 'BulkUpdateRegionData' test.out

#- 119 SearchItems
$CLI_EXE \
    --sn platform \
    --op SearchItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --itemType 'OPTIONBOX' \
    --limit '38' \
    --offset '82' \
    --sortBy 'HL8fr44G' \
    --storeId 'kAJSW92x' \
    --keyword 'Uw3pCm0N' \
    --language 'LT6IjBJU' \
    > test.out 2>&1
eval_tap $? 119 'SearchItems' test.out

#- 120 QueryUncategorizedItems
$CLI_EXE \
    --sn platform \
    --op QueryUncategorizedItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --limit '54' \
    --offset '26' \
    --sortBy '["createdAt", "displayOrder", "name"]' \
    --storeId 'cvAXH0FR' \
    > test.out 2>&1
eval_tap $? 120 'QueryUncategorizedItems' test.out

#- 121 GetItem
$CLI_EXE \
    --sn platform \
    --op GetItem \
    --itemId 'AkUbE84B' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --storeId 'tP4oKzgt' \
    > test.out 2>&1
eval_tap $? 121 'GetItem' test.out

#- 122 UpdateItem
# body param: body
echo '{"appId": "0PRoEs95", "appType": "SOFTWARE", "baseAppId": "MWpc6PZ7", "boothName": "xxxsTrlY", "categoryPath": "oxr4t5xw", "clazz": "uNnl2dOz", "displayOrder": 94, "entitlementType": "CONSUMABLE", "ext": {"UCeBe3v8": {}, "ZmhRMuQ0": {}, "8VGASKQB": {}}, "features": ["KtC8hN3M", "2Hf6eakZ", "XW4SY4nz"], "flexible": false, "images": [{"as": "vPP1KGgJ", "caption": "xoWYmSHP", "height": 80, "imageUrl": "iuK9QTik", "smallImageUrl": "MnuNgZKM", "width": 6}, {"as": "9VM0KCek", "caption": "KBIBri7S", "height": 10, "imageUrl": "0PRLgsXw", "smallImageUrl": "N0miVTbH", "width": 41}, {"as": "YCe4Qnze", "caption": "Vm6ZrHKO", "height": 51, "imageUrl": "sqnC48R5", "smallImageUrl": "8kKZSWHk", "width": 13}], "inventoryConfig": {"customAttributes": {"ovdH5vzP": {}, "P40xf0e0": {}, "a1bT4Vtw": {}}, "serverCustomAttributes": {"nv1yCJqo": {}, "JhE2VPHs": {}, "vUoG1Fsb": {}}, "slotUsed": 53}, "itemIds": ["lQJzQLnb", "iDsrNpgl", "GWrJH0BA"], "itemQty": {"pAEqrNkc": 66, "CVMqXdL0": 22, "Sl6AQwwu": 83}, "itemType": "LOOTBOX", "listable": false, "localizations": {"EeVvwGyh": {"description": "EYwxxHUp", "localExt": {"gMuBDqC1": {}, "0lrcKOTX": {}, "xpWEiy8r": {}}, "longDescription": "LX36XVPH", "title": "NIbOlLdp"}, "ZyAldc4o": {"description": "RC1VxgVx", "localExt": {"kDlyYTHJ": {}, "xfDouXSk": {}, "9yivzueI": {}}, "longDescription": "iL7f7LM1", "title": "CUxcqrxE"}, "bEaWUwyh": {"description": "5TqS1Lab", "localExt": {"TKzeWGOr": {}, "NHaDyxHs": {}, "DD3589EY": {}}, "longDescription": "vzRdU5f3", "title": "txPABdT5"}}, "lootBoxConfig": {"rewardCount": 22, "rewards": [{"lootBoxItems": [{"count": 35, "duration": 52, "endDate": "1975-04-11T00:00:00Z", "itemId": "XMy8W7pn", "itemSku": "2WGZL06W", "itemType": "lTwBPtmp"}, {"count": 87, "duration": 56, "endDate": "1979-01-28T00:00:00Z", "itemId": "kDu9uyM1", "itemSku": "Mvng90X1", "itemType": "ORV8IrLy"}, {"count": 16, "duration": 25, "endDate": "1978-12-06T00:00:00Z", "itemId": "ZKnyJbmi", "itemSku": "R1dSs6JY", "itemType": "rdfWzFhW"}], "name": "dnnplncW", "odds": 0.35689300214555253, "type": "REWARD", "weight": 37}, {"lootBoxItems": [{"count": 29, "duration": 22, "endDate": "1990-12-08T00:00:00Z", "itemId": "uhwE81Pc", "itemSku": "Xxie89c5", "itemType": "AwIeccM5"}, {"count": 32, "duration": 93, "endDate": "1983-09-15T00:00:00Z", "itemId": "8q2peECm", "itemSku": "ckk04cjX", "itemType": "omHVZkPm"}, {"count": 70, "duration": 63, "endDate": "1995-02-04T00:00:00Z", "itemId": "rLENeBMS", "itemSku": "HEcCredU", "itemType": "cSfJbBae"}], "name": "YwKVmRDB", "odds": 0.332699785677928, "type": "PROBABILITY_GROUP", "weight": 26}, {"lootBoxItems": [{"count": 56, "duration": 28, "endDate": "1983-12-25T00:00:00Z", "itemId": "LTFG1g3y", "itemSku": "oJSOrd8s", "itemType": "XLJ99irH"}, {"count": 29, "duration": 37, "endDate": "1994-03-21T00:00:00Z", "itemId": "aaIYfFzN", "itemSku": "kWGUjnNH", "itemType": "EaGZ1m6Y"}, {"count": 2, "duration": 14, "endDate": "1997-02-02T00:00:00Z", "itemId": "bAcWD6bJ", "itemSku": "k1NNogAu", "itemType": "SCivZ6Wv"}], "name": "KZ4XIMcr", "odds": 0.7895535756283172, "type": "PROBABILITY_GROUP", "weight": 34}], "rollFunction": "DEFAULT"}, "maxCount": 86, "maxCountPerUser": 67, "name": "Bs0o6r7n", "optionBoxConfig": {"boxItems": [{"count": 1, "duration": 76, "endDate": "1995-11-29T00:00:00Z", "itemId": "33UyILLw", "itemSku": "WVW6nZJU", "itemType": "QVUBZz1U"}, {"count": 35, "duration": 6, "endDate": "1974-12-25T00:00:00Z", "itemId": "GwlVHWFd", "itemSku": "QwTMxnSk", "itemType": "se05gY3K"}, {"count": 37, "duration": 10, "endDate": "1985-11-08T00:00:00Z", "itemId": "dAwIhIJp", "itemSku": "YYXbPWye", "itemType": "S3ypO6Fd"}]}, "purchasable": true, "recurring": {"cycle": "QUARTERLY", "fixedFreeDays": 85, "fixedTrialCycles": 31, "graceDays": 82}, "regionData": {"DWzDVvOo": [{"currencyCode": "QQdDBF47", "currencyNamespace": "spwLRRDa", "currencyType": "REAL", "discountAmount": 81, "discountExpireAt": "1983-09-30T00:00:00Z", "discountPercentage": 26, "discountPurchaseAt": "1993-08-23T00:00:00Z", "expireAt": "1972-06-10T00:00:00Z", "price": 11, "purchaseAt": "1977-11-27T00:00:00Z", "trialPrice": 49}, {"currencyCode": "9pyX7foj", "currencyNamespace": "W5jwxlNB", "currencyType": "REAL", "discountAmount": 95, "discountExpireAt": "1992-07-04T00:00:00Z", "discountPercentage": 13, "discountPurchaseAt": "1978-03-30T00:00:00Z", "expireAt": "1994-11-12T00:00:00Z", "price": 11, "purchaseAt": "1977-10-31T00:00:00Z", "trialPrice": 90}, {"currencyCode": "bONdhe8O", "currencyNamespace": "8YbPTWST", "currencyType": "VIRTUAL", "discountAmount": 41, "discountExpireAt": "1997-12-24T00:00:00Z", "discountPercentage": 36, "discountPurchaseAt": "1971-04-10T00:00:00Z", "expireAt": "1999-12-18T00:00:00Z", "price": 16, "purchaseAt": "1971-01-23T00:00:00Z", "trialPrice": 43}], "BKrUTjdj": [{"currencyCode": "O8alr6oL", "currencyNamespace": "F17B64iz", "currencyType": "REAL", "discountAmount": 98, "discountExpireAt": "1985-10-19T00:00:00Z", "discountPercentage": 41, "discountPurchaseAt": "1988-02-19T00:00:00Z", "expireAt": "1991-06-16T00:00:00Z", "price": 26, "purchaseAt": "1996-03-16T00:00:00Z", "trialPrice": 89}, {"currencyCode": "2CbJ8tZ2", "currencyNamespace": "O5Cpa7t2", "currencyType": "VIRTUAL", "discountAmount": 18, "discountExpireAt": "1978-08-11T00:00:00Z", "discountPercentage": 60, "discountPurchaseAt": "1987-08-24T00:00:00Z", "expireAt": "1979-11-21T00:00:00Z", "price": 71, "purchaseAt": "1985-09-22T00:00:00Z", "trialPrice": 0}, {"currencyCode": "N38YD8vh", "currencyNamespace": "NCSKKAob", "currencyType": "VIRTUAL", "discountAmount": 47, "discountExpireAt": "1974-03-30T00:00:00Z", "discountPercentage": 28, "discountPurchaseAt": "1979-03-06T00:00:00Z", "expireAt": "1998-10-14T00:00:00Z", "price": 6, "purchaseAt": "1980-01-03T00:00:00Z", "trialPrice": 73}], "ISKqKSu8": [{"currencyCode": "h1dCWpft", "currencyNamespace": "GezE0jnG", "currencyType": "REAL", "discountAmount": 92, "discountExpireAt": "1975-04-25T00:00:00Z", "discountPercentage": 63, "discountPurchaseAt": "1979-11-07T00:00:00Z", "expireAt": "1988-08-15T00:00:00Z", "price": 36, "purchaseAt": "1971-03-30T00:00:00Z", "trialPrice": 72}, {"currencyCode": "NhbaZ5R6", "currencyNamespace": "6onjpIcs", "currencyType": "REAL", "discountAmount": 39, "discountExpireAt": "1974-10-28T00:00:00Z", "discountPercentage": 35, "discountPurchaseAt": "1975-01-16T00:00:00Z", "expireAt": "1987-08-08T00:00:00Z", "price": 68, "purchaseAt": "1975-04-14T00:00:00Z", "trialPrice": 20}, {"currencyCode": "H13eJhNl", "currencyNamespace": "FBUGYZNB", "currencyType": "VIRTUAL", "discountAmount": 88, "discountExpireAt": "1996-08-25T00:00:00Z", "discountPercentage": 40, "discountPurchaseAt": "1975-06-15T00:00:00Z", "expireAt": "1980-06-02T00:00:00Z", "price": 59, "purchaseAt": "1982-11-20T00:00:00Z", "trialPrice": 49}]}, "saleConfig": {"currencyCode": "QOCbTXgs", "price": 7}, "seasonType": "TIER", "sectionExclusive": true, "sellable": true, "sku": "jGtXoiop", "stackable": false, "status": "ACTIVE", "tags": ["fThsFpFs", "REmVQeA0", "FZIcBJ2R"], "targetCurrencyCode": "ZcHxkZmK", "targetNamespace": "urAv8n5e", "thumbnailUrl": "z6pbrPmq", "useCount": 9}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateItem \
    --itemId 'st1Ltani' \
    --namespace $AB_NAMESPACE \
    --storeId '1PhQNzhu' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 122 'UpdateItem' test.out

#- 123 DeleteItem
$CLI_EXE \
    --sn platform \
    --op DeleteItem \
    --itemId 'lpYuJsnR' \
    --namespace $AB_NAMESPACE \
    --force 'false' \
    --storeId '0carcTv3' \
    > test.out 2>&1
eval_tap $? 123 'DeleteItem' test.out

#- 124 AcquireItem
# body param: body
echo '{"count": 96, "orderNo": "gXFl5OuR"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op AcquireItem \
    --itemId 'ICnAjKRz' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 124 'AcquireItem' test.out

#- 125 GetApp
$CLI_EXE \
    --sn platform \
    --op GetApp \
    --itemId 'mV8DVM7c' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --storeId 'Ja5AHqWx' \
    > test.out 2>&1
eval_tap $? 125 'GetApp' test.out

#- 126 UpdateApp
# body param: body
echo '{"carousel": [{"alt": "pHKLWvqy", "previewUrl": "iFocRP8q", "thumbnailUrl": "nrMqvmZU", "type": "image", "url": "xj0gpQjE", "videoSource": "generic"}, {"alt": "eJdKhO8l", "previewUrl": "0obajFA4", "thumbnailUrl": "kr7jwLpG", "type": "video", "url": "C0QQfm15", "videoSource": "vimeo"}, {"alt": "14eMAgc1", "previewUrl": "BRsUpvCl", "thumbnailUrl": "x90x0HAV", "type": "video", "url": "ZfQBu3Qi", "videoSource": "generic"}], "developer": "bY7dyBxV", "forumUrl": "gEiICBFl", "genres": ["Strategy", "Racing", "Strategy"], "localizations": {"WyGEn07x": {"announcement": "2jF6cy76", "slogan": "Pbz4kTBo"}, "QXXtWjUL": {"announcement": "bjXQVFIr", "slogan": "5jTjcqKL"}, "gkuhihBk": {"announcement": "3eDiuNwW", "slogan": "Dpx1VCo4"}}, "platformRequirements": {"ON0Ova6s": [{"additionals": "vwf88Q4g", "directXVersion": "Qa6pEINE", "diskSpace": "PCl7CAYJ", "graphics": "ovToq4zl", "label": "EQ7ioRjD", "osVersion": "ZDrwdQS7", "processor": "7hwzl2NW", "ram": "Vhcccr67", "soundCard": "UXBLSOdx"}, {"additionals": "nohAcIkJ", "directXVersion": "1Ny4hTdU", "diskSpace": "UjLpgQLE", "graphics": "bYkEM2Cl", "label": "uCFekiKG", "osVersion": "SmgfefAN", "processor": "A6nEO1pl", "ram": "8sIdxZXO", "soundCard": "NX8c6BGY"}, {"additionals": "DRzF6ABa", "directXVersion": "kXAs01Ra", "diskSpace": "nRHHE4UF", "graphics": "nxl2pm47", "label": "gd4qjQGR", "osVersion": "vpSGDYJt", "processor": "qsuja8rV", "ram": "82w2Sy8P", "soundCard": "Md5hNZgz"}], "D6VpHOip": [{"additionals": "9jfAkG4c", "directXVersion": "MfLONjxw", "diskSpace": "O1QVaOxi", "graphics": "ScGp03K4", "label": "LgegKPSw", "osVersion": "RqangAUp", "processor": "ftOSBJtn", "ram": "aWECFu63", "soundCard": "RAmF5XyU"}, {"additionals": "uWaBLDU3", "directXVersion": "qYSf7PKr", "diskSpace": "LW53Q9ia", "graphics": "IQHlY82h", "label": "iSM3v1DN", "osVersion": "pwZbBr8k", "processor": "b3otjf8Z", "ram": "ISFnnIUZ", "soundCard": "JLvN334T"}, {"additionals": "oTbBPTgz", "directXVersion": "qiGcBgeu", "diskSpace": "Wg9ZUUOd", "graphics": "dP4KpGpc", "label": "U8wBLN2l", "osVersion": "3Rk9JShu", "processor": "XIlkZYz6", "ram": "FzmmyaPV", "soundCard": "VEprom0B"}], "vVg1S713": [{"additionals": "rCDGLfOI", "directXVersion": "FGnQ91SL", "diskSpace": "PFnOXTOP", "graphics": "8bPWARpP", "label": "LIrVuIFz", "osVersion": "BSiglv9J", "processor": "ejsYsfwa", "ram": "mrWB9aik", "soundCard": "uGm5xVst"}, {"additionals": "eG9OoeC5", "directXVersion": "Lc70KbS6", "diskSpace": "MuRu02sf", "graphics": "ZW3bHRKJ", "label": "urCI4nli", "osVersion": "59Lw6vC1", "processor": "xuiSAEpy", "ram": "XuLZcF6R", "soundCard": "opWLXXl4"}, {"additionals": "FPJpIfIi", "directXVersion": "MAl6jkd9", "diskSpace": "yXCMGXX6", "graphics": "CBL19fWZ", "label": "KhJqUjED", "osVersion": "xM9Ko7Tk", "processor": "yn3wRhPn", "ram": "AobrxrFH", "soundCard": "oBpVGPxi"}]}, "platforms": ["MacOS", "IOS", "Android"], "players": ["Coop", "LocalCoop", "MMO"], "primaryGenre": "MassivelyMultiplayer", "publisher": "qHACnTci", "releaseDate": "1990-06-15T00:00:00Z", "websiteUrl": "gDLaQZJO"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateApp \
    --itemId 'TBWHc8R9' \
    --namespace $AB_NAMESPACE \
    --storeId '6WM9KB8y' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 126 'UpdateApp' test.out

#- 127 DisableItem
$CLI_EXE \
    --sn platform \
    --op DisableItem \
    --itemId 'xHhC5hQh' \
    --namespace $AB_NAMESPACE \
    --storeId 'Yrwgslvc' \
    > test.out 2>&1
eval_tap $? 127 'DisableItem' test.out

#- 128 GetItemDynamicData
$CLI_EXE \
    --sn platform \
    --op GetItemDynamicData \
    --itemId 'PIw2EKmm' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 128 'GetItemDynamicData' test.out

#- 129 EnableItem
$CLI_EXE \
    --sn platform \
    --op EnableItem \
    --itemId 'Fqe5VOIp' \
    --namespace $AB_NAMESPACE \
    --storeId '4jXFvyVn' \
    > test.out 2>&1
eval_tap $? 129 'EnableItem' test.out

#- 130 FeatureItem
$CLI_EXE \
    --sn platform \
    --op FeatureItem \
    --feature 'cUV1Apwc' \
    --itemId 'CVrhzwbo' \
    --namespace $AB_NAMESPACE \
    --storeId 'Xda3Yxsj' \
    > test.out 2>&1
eval_tap $? 130 'FeatureItem' test.out

#- 131 DefeatureItem
$CLI_EXE \
    --sn platform \
    --op DefeatureItem \
    --feature 'Y5mEwdiz' \
    --itemId 'TJuoHePb' \
    --namespace $AB_NAMESPACE \
    --storeId 'r3I7ZQBE' \
    > test.out 2>&1
eval_tap $? 131 'DefeatureItem' test.out

#- 132 GetLocaleItem
$CLI_EXE \
    --sn platform \
    --op GetLocaleItem \
    --itemId '6oPJir4N' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --language 'nd1crwst' \
    --populateBundle 'false' \
    --region 'uftU8qb6' \
    --storeId 'uCoh5F2N' \
    > test.out 2>&1
eval_tap $? 132 'GetLocaleItem' test.out

#- 133 UpdateItemPurchaseCondition
# body param: body
echo '{"purchaseCondition": {"conditionGroups": [{"operator": "or", "predicates": [{"anyOf": 7, "code": "PXdKdk05", "comparison": "isLessThan", "name": "712cmKym", "predicateType": "SeasonPassPredicate", "value": "XEoh5b52", "values": ["UfLByist", "dynKXDPK", "lYd4IFSF"]}, {"anyOf": 51, "code": "OciZdjFa", "comparison": "isGreaterThanOrEqual", "name": "TGTiqfr1", "predicateType": "SeasonTierPredicate", "value": "S6ZscZvp", "values": ["kmMhjbMC", "aSQf3qeW", "XcvWvEVW"]}, {"anyOf": 38, "code": "G5xrpdS1", "comparison": "isLessThan", "name": "6bJTW7rp", "predicateType": "SeasonTierPredicate", "value": "feWoG7tQ", "values": ["COHRT5zu", "NrNFLeW4", "00vQdEW2"]}]}, {"operator": "and", "predicates": [{"anyOf": 2, "code": "5rlmbgi9", "comparison": "excludes", "name": "N4URc5r3", "predicateType": "SeasonTierPredicate", "value": "KpLjNsrC", "values": ["c9m35WUs", "5gUcrA5i", "i2DeXxTu"]}, {"anyOf": 92, "code": "49EKtHOU", "comparison": "isNot", "name": "M4F28rFJ", "predicateType": "SeasonTierPredicate", "value": "DZdxQJGC", "values": ["5w7UgToo", "Bf9Zzgv8", "rSq3zCm2"]}, {"anyOf": 31, "code": "oBwUo1mT", "comparison": "includes", "name": "qHtKLsDH", "predicateType": "EntitlementPredicate", "value": "PRETDu75", "values": ["68CTRiiQ", "DHLy9hKT", "aS1oTbfm"]}]}, {"operator": "and", "predicates": [{"anyOf": 57, "code": "gea9FAfT", "comparison": "is", "name": "A7EsCISh", "predicateType": "SeasonPassPredicate", "value": "omXNCkw3", "values": ["ejMoxZ98", "kCLQ03Ka", "5QfsG7u5"]}, {"anyOf": 68, "code": "2aC0yniH", "comparison": "includes", "name": "FoUsydHk", "predicateType": "SeasonTierPredicate", "value": "yMtFALBM", "values": ["UpdsqRTB", "3bhxOy9l", "3tqYWHVN"]}, {"anyOf": 57, "code": "tQPy4rEW", "comparison": "isNot", "name": "qluIUAGW", "predicateType": "SeasonPassPredicate", "value": "yFzKXJPc", "values": ["lhlIMMqB", "OV9DUm8e", "3xM6tmLu"]}]}]}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateItemPurchaseCondition \
    --itemId 'Bkn7QSmA' \
    --namespace $AB_NAMESPACE \
    --storeId 'GFdEABlR' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 133 'UpdateItemPurchaseCondition' test.out

#- 134 ReturnItem
# body param: body
echo '{"orderNo": "klZ8VsXm"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ReturnItem \
    --itemId 'vyNxlqyP' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 134 'ReturnItem' test.out

#- 135 QueryKeyGroups
$CLI_EXE \
    --sn platform \
    --op QueryKeyGroups \
    --namespace $AB_NAMESPACE \
    --limit '30' \
    --name 'XMunTSWM' \
    --offset '25' \
    --tag 'Pg9AQIcE' \
    > test.out 2>&1
eval_tap $? 135 'QueryKeyGroups' test.out

#- 136 CreateKeyGroup
# body param: body
echo '{"description": "ClLvueZw", "name": "ctQ40tG5", "status": "ACTIVE", "tags": ["iuVPEmMQ", "DXWqD8Jh", "HkGFZFkx"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateKeyGroup \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 136 'CreateKeyGroup' test.out

#- 137 GetKeyGroupByBoothName
eval_tap 0 137 'GetKeyGroupByBoothName # SKIP deprecated' test.out

#- 138 GetKeyGroup
$CLI_EXE \
    --sn platform \
    --op GetKeyGroup \
    --keyGroupId 'yZ6dWCAb' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 138 'GetKeyGroup' test.out

#- 139 UpdateKeyGroup
# body param: body
echo '{"description": "PrY0uGLf", "name": "QhACjOYq", "status": "ACTIVE", "tags": ["gN8ht6nJ", "mJKpsdA6", "AyeCrIqz"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateKeyGroup \
    --keyGroupId '7wskUX6F' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 139 'UpdateKeyGroup' test.out

#- 140 GetKeyGroupDynamic
$CLI_EXE \
    --sn platform \
    --op GetKeyGroupDynamic \
    --keyGroupId '87nPoL3B' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 140 'GetKeyGroupDynamic' test.out

#- 141 ListKeys
$CLI_EXE \
    --sn platform \
    --op ListKeys \
    --keyGroupId '0YykQKby' \
    --namespace $AB_NAMESPACE \
    --limit '11' \
    --offset '56' \
    --status 'ACQUIRED' \
    > test.out 2>&1
eval_tap $? 141 'ListKeys' test.out

#- 142 UploadKeys
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UploadKeys \
    --keyGroupId 'k8sb3QfT' \
    --namespace $AB_NAMESPACE \
    --upload file $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 142 'UploadKeys' test.out

#- 143 QueryOrders
$CLI_EXE \
    --sn platform \
    --op QueryOrders \
    --namespace $AB_NAMESPACE \
    --endTime 'BKYFwUPt' \
    --limit '45' \
    --offset '98' \
    --orderNos '["nlP8seR8", "xpRNNEYR", "F7pHhFyc"]' \
    --sortBy 'PluNNPe9' \
    --startTime 'kIomHkV6' \
    --status 'REFUNDED' \
    --withTotal 'false' \
    > test.out 2>&1
eval_tap $? 143 'QueryOrders' test.out

#- 144 GetOrderStatistics
$CLI_EXE \
    --sn platform \
    --op GetOrderStatistics \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 144 'GetOrderStatistics' test.out

#- 145 GetOrder
$CLI_EXE \
    --sn platform \
    --op GetOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'MFoKVG8h' \
    > test.out 2>&1
eval_tap $? 145 'GetOrder' test.out

#- 146 RefundOrder
# body param: body
echo '{"description": "KfAPsH8Q"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RefundOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'yC7lUhOk' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 146 'RefundOrder' test.out

#- 147 GetPaymentCallbackConfig
$CLI_EXE \
    --sn platform \
    --op GetPaymentCallbackConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 147 'GetPaymentCallbackConfig' test.out

#- 148 UpdatePaymentCallbackConfig
# body param: body
echo '{"dryRun": false, "notifyUrl": "teeQr5uy", "privateKey": "m9rqBSyv"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePaymentCallbackConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 148 'UpdatePaymentCallbackConfig' test.out

#- 149 GetPaymentMerchantConfig
$CLI_EXE \
    --sn platform \
    --op GetPaymentMerchantConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 149 'GetPaymentMerchantConfig' test.out

#- 150 UpdatePaymentDomainWhitelistConfig
# body param: body
echo '{"domains": ["h5tac4hI", "1Wnhhesg", "jqky5x7J"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePaymentDomainWhitelistConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 150 'UpdatePaymentDomainWhitelistConfig' test.out

#- 151 QueryPaymentNotifications
$CLI_EXE \
    --sn platform \
    --op QueryPaymentNotifications \
    --namespace $AB_NAMESPACE \
    --endDate '4ucggV4c' \
    --externalId 'KmgeQyCe' \
    --limit '46' \
    --notificationSource 'NEONPAY' \
    --notificationType 'dMVaCrjZ' \
    --offset '36' \
    --paymentOrderNo 'xHcLaGZJ' \
    --startDate 'EaXkansj' \
    --status 'ERROR' \
    > test.out 2>&1
eval_tap $? 151 'QueryPaymentNotifications' test.out

#- 152 QueryPaymentOrders
$CLI_EXE \
    --sn platform \
    --op QueryPaymentOrders \
    --namespace $AB_NAMESPACE \
    --channel 'INTERNAL' \
    --extTxId '7XnrzfLq' \
    --limit '48' \
    --offset '81' \
    --status 'CHARGEBACK_REVERSED' \
    > test.out 2>&1
eval_tap $? 152 'QueryPaymentOrders' test.out

#- 153 CreatePaymentOrderByDedicated
# body param: body
echo '{"currencyCode": "vjwKbzSi", "currencyNamespace": "eTzFDg60", "customParameters": {"ryo10n0u": {}, "LI12ozia": {}, "KeIRFtaZ": {}}, "description": "AwKLjVt7", "extOrderNo": "FwCsQA4W", "extUserId": "JA364Slf", "itemType": "SEASON", "language": "RoGr_814", "metadata": {"InRDRyiG": "xkzWLeg0", "ui8QT3zU": "LTTv6fyq", "BbM7hxh5": "no3jo3Dc"}, "notifyUrl": "5BYcAXZQ", "omitNotification": false, "platform": "f2sZ2Ffx", "price": 30, "recurringPaymentOrderNo": "rnH1GSBm", "region": "HSAKeAvC", "returnUrl": "La4J4HFG", "sandbox": true, "sku": "8z6NH4Lm", "subscriptionId": "HsZr1dQu", "targetNamespace": "hTklvE3v", "targetUserId": "IwG5nSQl", "title": "jGsS88hJ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreatePaymentOrderByDedicated \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 153 'CreatePaymentOrderByDedicated' test.out

#- 154 ListExtOrderNoByExtTxId
$CLI_EXE \
    --sn platform \
    --op ListExtOrderNoByExtTxId \
    --namespace $AB_NAMESPACE \
    --extTxId 'yDIX1rmL' \
    > test.out 2>&1
eval_tap $? 154 'ListExtOrderNoByExtTxId' test.out

#- 155 GetPaymentOrder
$CLI_EXE \
    --sn platform \
    --op GetPaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'fdSOZYFr' \
    > test.out 2>&1
eval_tap $? 155 'GetPaymentOrder' test.out

#- 156 ChargePaymentOrder
# body param: body
echo '{"extTxId": "TFTpV1TW", "paymentMethod": "vXyhFBou", "paymentProvider": "NEONPAY"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ChargePaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo '04E3lxaj' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 156 'ChargePaymentOrder' test.out

#- 157 RefundPaymentOrderByDedicated
# body param: body
echo '{"description": "bYswG9qp"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RefundPaymentOrderByDedicated \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'kuUr9kCn' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 157 'RefundPaymentOrderByDedicated' test.out

#- 158 SimulatePaymentOrderNotification
# body param: body
echo '{"amount": 49, "currencyCode": "n92f9Kn9", "notifyType": "REFUND", "paymentProvider": "WALLET", "salesTax": 60, "vat": 39}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SimulatePaymentOrderNotification \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'vf6YuhCu' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 158 'SimulatePaymentOrderNotification' test.out

#- 159 GetPaymentOrderChargeStatus
$CLI_EXE \
    --sn platform \
    --op GetPaymentOrderChargeStatus \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'H2g05Xte' \
    > test.out 2>&1
eval_tap $? 159 'GetPaymentOrderChargeStatus' test.out

#- 160 GetPsnEntitlementOwnership
# body param: body
echo '{"accessToken": "Iq0qmNOJ", "serviceLabel": 8}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op GetPsnEntitlementOwnership \
    --entitlementLabel '3HqkTKUG' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 160 'GetPsnEntitlementOwnership' test.out

#- 161 GetXboxEntitlementOwnership
# body param: body
echo '{"delegationToken": "v3GVRpZY", "sandboxId": "JW2F8Tt6"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op GetXboxEntitlementOwnership \
    --namespace $AB_NAMESPACE \
    --productSku 'QcrdRivy' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 161 'GetXboxEntitlementOwnership' test.out

#- 162 GetPlatformEntitlementConfig
$CLI_EXE \
    --sn platform \
    --op GetPlatformEntitlementConfig \
    --namespace $AB_NAMESPACE \
    --platform 'Other' \
    > test.out 2>&1
eval_tap $? 162 'GetPlatformEntitlementConfig' test.out

#- 163 UpdatePlatformEntitlementConfig
# body param: body
echo '{"allowedPlatformOrigins": ["Oculus", "Xbox", "Steam"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePlatformEntitlementConfig \
    --namespace $AB_NAMESPACE \
    --platform 'Oculus' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 163 'UpdatePlatformEntitlementConfig' test.out

#- 164 GetPlatformWalletConfig
$CLI_EXE \
    --sn platform \
    --op GetPlatformWalletConfig \
    --namespace $AB_NAMESPACE \
    --platform 'Steam' \
    > test.out 2>&1
eval_tap $? 164 'GetPlatformWalletConfig' test.out

#- 165 UpdatePlatformWalletConfig
# body param: body
echo '{"allowedBalanceOrigins": ["System", "Xbox", "System"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePlatformWalletConfig \
    --namespace $AB_NAMESPACE \
    --platform 'Playstation' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 165 'UpdatePlatformWalletConfig' test.out

#- 166 ResetPlatformWalletConfig
$CLI_EXE \
    --sn platform \
    --op ResetPlatformWalletConfig \
    --namespace $AB_NAMESPACE \
    --platform 'Other' \
    > test.out 2>&1
eval_tap $? 166 'ResetPlatformWalletConfig' test.out

#- 167 GetRevocationConfig
$CLI_EXE \
    --sn platform \
    --op GetRevocationConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 167 'GetRevocationConfig' test.out

#- 168 UpdateRevocationConfig
# body param: body
echo '{"entitlement": {"consumable": {"enabled": false, "strategy": "CUSTOM"}, "durable": {"enabled": true, "strategy": "REVOKE_OR_REPORT"}}, "wallet": {"enabled": true, "strategy": "CUSTOM"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateRevocationConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 168 'UpdateRevocationConfig' test.out

#- 169 DeleteRevocationConfig
$CLI_EXE \
    --sn platform \
    --op DeleteRevocationConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 169 'DeleteRevocationConfig' test.out

#- 170 QueryRevocationHistories
$CLI_EXE \
    --sn platform \
    --op QueryRevocationHistories \
    --namespace $AB_NAMESPACE \
    --endTime 'JxSiBU5D' \
    --limit '57' \
    --offset '24' \
    --source 'DLC' \
    --startTime 'HiOvZsSp' \
    --status 'SUCCESS' \
    --transactionId 'fDHZof4N' \
    --userId 'EaUmWgzt' \
    > test.out 2>&1
eval_tap $? 170 'QueryRevocationHistories' test.out

#- 171 GetRevocationPluginConfig
$CLI_EXE \
    --sn platform \
    --op GetRevocationPluginConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 171 'GetRevocationPluginConfig' test.out

#- 172 UpdateRevocationPluginConfig
# body param: body
echo '{"appConfig": {"appName": "Ms0MKYX9"}, "customConfig": {"connectionType": "INSECURE", "grpcServerAddress": "C6ydGbRG"}, "extendType": "APP"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateRevocationPluginConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 172 'UpdateRevocationPluginConfig' test.out

#- 173 DeleteRevocationPluginConfig
$CLI_EXE \
    --sn platform \
    --op DeleteRevocationPluginConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 173 'DeleteRevocationPluginConfig' test.out

#- 174 UploadRevocationPluginConfigCert
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UploadRevocationPluginConfigCert \
    --namespace $AB_NAMESPACE \
    --upload file $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 174 'UploadRevocationPluginConfigCert' test.out

#- 175 CreateReward
# body param: body
echo '{"description": "824BTApx", "eventTopic": "2n8kP5gW", "maxAwarded": 56, "maxAwardedPerUser": 58, "namespaceExpression": "bURPpP6f", "rewardCode": "0FJEtkU3", "rewardConditions": [{"condition": "QQKTUfB9", "conditionName": "Ei9mNps5", "eventName": "SAS0BTUD", "rewardItems": [{"duration": 37, "endDate": "1978-06-05T00:00:00Z", "identityType": "ITEM_SKU", "itemId": "DRdatTUa", "quantity": 92, "sku": "MleLkzgD"}, {"duration": 92, "endDate": "1972-08-10T00:00:00Z", "identityType": "ITEM_SKU", "itemId": "0fgWe94X", "quantity": 11, "sku": "aWUZXZRN"}, {"duration": 67, "endDate": "1978-05-05T00:00:00Z", "identityType": "ITEM_ID", "itemId": "z6Y8yshu", "quantity": 2, "sku": "YZOiBq6f"}]}, {"condition": "2KWyUwmw", "conditionName": "tHkh8QbL", "eventName": "ENCANTpj", "rewardItems": [{"duration": 66, "endDate": "1996-12-15T00:00:00Z", "identityType": "ITEM_ID", "itemId": "3lRU2KkR", "quantity": 65, "sku": "ZbwKBWuc"}, {"duration": 91, "endDate": "1976-03-27T00:00:00Z", "identityType": "ITEM_SKU", "itemId": "0N7KulTb", "quantity": 37, "sku": "jejNjcPH"}, {"duration": 77, "endDate": "1987-10-26T00:00:00Z", "identityType": "ITEM_ID", "itemId": "pLWUl2JO", "quantity": 68, "sku": "GUUdxRpp"}]}, {"condition": "cige49yr", "conditionName": "yTprwYQQ", "eventName": "8asDZ7D1", "rewardItems": [{"duration": 76, "endDate": "1985-05-06T00:00:00Z", "identityType": "ITEM_ID", "itemId": "fUP8jqOI", "quantity": 92, "sku": "T5YNMgMB"}, {"duration": 75, "endDate": "1976-09-06T00:00:00Z", "identityType": "ITEM_SKU", "itemId": "PvxRElX2", "quantity": 41, "sku": "OlPuW7Ce"}, {"duration": 37, "endDate": "1977-07-28T00:00:00Z", "identityType": "ITEM_ID", "itemId": "DZYTVX3I", "quantity": 35, "sku": "e9qDdrdx"}]}], "userIdExpression": "0IuunDvh"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateReward \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 175 'CreateReward' test.out

#- 176 QueryRewards
$CLI_EXE \
    --sn platform \
    --op QueryRewards \
    --namespace $AB_NAMESPACE \
    --eventTopic 'VJUBP5RC' \
    --limit '76' \
    --offset '56' \
    --sortBy '["rewardCode:desc", "namespace:desc", "rewardCode:asc"]' \
    > test.out 2>&1
eval_tap $? 176 'QueryRewards' test.out

#- 177 ExportRewards
$CLI_EXE \
    --sn platform \
    --op ExportRewards \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 177 'ExportRewards' test.out

#- 178 ImportRewards
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op ImportRewards \
    --namespace $AB_NAMESPACE \
    --replaceExisting 'false' \
    --upload file $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 178 'ImportRewards' test.out

#- 179 GetReward
$CLI_EXE \
    --sn platform \
    --op GetReward \
    --namespace $AB_NAMESPACE \
    --rewardId 'juGHA2JD' \
    > test.out 2>&1
eval_tap $? 179 'GetReward' test.out

#- 180 UpdateReward
# body param: body
echo '{"description": "yyc1Z6DH", "eventTopic": "lfOX5oF6", "maxAwarded": 1, "maxAwardedPerUser": 100, "namespaceExpression": "Sjqva922", "rewardCode": "ZQmd3wNy", "rewardConditions": [{"condition": "9kIf9nEG", "conditionName": "DkqX9g9x", "eventName": "i5MdBJhf", "rewardItems": [{"duration": 46, "endDate": "1974-03-08T00:00:00Z", "identityType": "ITEM_ID", "itemId": "0DW3gN91", "quantity": 87, "sku": "6Jr4WRN0"}, {"duration": 100, "endDate": "1982-10-03T00:00:00Z", "identityType": "ITEM_ID", "itemId": "jzmQfE9x", "quantity": 44, "sku": "XyjbBRGe"}, {"duration": 86, "endDate": "1993-09-04T00:00:00Z", "identityType": "ITEM_SKU", "itemId": "HsqzLeuu", "quantity": 29, "sku": "VSFATjjG"}]}, {"condition": "H7HyIH8x", "conditionName": "qu8B4Ahx", "eventName": "IgAzMDOO", "rewardItems": [{"duration": 62, "endDate": "1993-12-19T00:00:00Z", "identityType": "ITEM_SKU", "itemId": "wwLPUU5F", "quantity": 18, "sku": "cB9scH6a"}, {"duration": 38, "endDate": "1984-07-14T00:00:00Z", "identityType": "ITEM_SKU", "itemId": "0MpwnxdF", "quantity": 31, "sku": "vwHh8hxe"}, {"duration": 59, "endDate": "1971-10-14T00:00:00Z", "identityType": "ITEM_SKU", "itemId": "eQiNkPy2", "quantity": 63, "sku": "AzYRvVdN"}]}, {"condition": "h76bpjkB", "conditionName": "ZgnB5Wnl", "eventName": "VR2YfoL2", "rewardItems": [{"duration": 68, "endDate": "1972-01-20T00:00:00Z", "identityType": "ITEM_SKU", "itemId": "UiyfX5E0", "quantity": 76, "sku": "a5eOlMlK"}, {"duration": 79, "endDate": "1980-09-08T00:00:00Z", "identityType": "ITEM_SKU", "itemId": "LyVm6OKz", "quantity": 34, "sku": "Uwc2BA7S"}, {"duration": 61, "endDate": "1986-08-27T00:00:00Z", "identityType": "ITEM_SKU", "itemId": "K6s8sFsE", "quantity": 100, "sku": "FeZgnIst"}]}], "userIdExpression": "7mDlMoDH"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateReward \
    --namespace $AB_NAMESPACE \
    --rewardId 'O8M8II79' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 180 'UpdateReward' test.out

#- 181 DeleteReward
$CLI_EXE \
    --sn platform \
    --op DeleteReward \
    --namespace $AB_NAMESPACE \
    --rewardId 'k3500mq2' \
    > test.out 2>&1
eval_tap $? 181 'DeleteReward' test.out

#- 182 CheckEventCondition
# body param: body
echo '{"payload": {"q0kScFYk": {}, "8GZ1Gich": {}, "TVrK8vlP": {}}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CheckEventCondition \
    --namespace $AB_NAMESPACE \
    --rewardId 'l9qdAw7N' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 182 'CheckEventCondition' test.out

#- 183 DeleteRewardConditionRecord
# body param: body
echo '{"conditionName": "MCYWPkZi", "userId": "IesP1XFp"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op DeleteRewardConditionRecord \
    --namespace $AB_NAMESPACE \
    --rewardId 'ja7rw6nP' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 183 'DeleteRewardConditionRecord' test.out

#- 184 QuerySections
$CLI_EXE \
    --sn platform \
    --op QuerySections \
    --namespace $AB_NAMESPACE \
    --end 'CILXAVRf' \
    --limit '62' \
    --offset '90' \
    --start '6aU1CTe6' \
    --storeId 'IsaP2LN7' \
    --viewId 'VdvSqVDa' \
    > test.out 2>&1
eval_tap $? 184 'QuerySections' test.out

#- 185 CreateSection
# body param: body
echo '{"active": true, "displayOrder": 46, "endDate": "1972-04-06T00:00:00Z", "ext": {"f3sYTLxo": {}, "ZjVr7FXm": {}, "t3hgHLpr": {}}, "fixedPeriodRotationConfig": {"backfillType": "CUSTOM", "duration": 97, "itemCount": 95, "rule": "SEQUENCE"}, "items": [{"id": "BWzV0sdX", "sku": "OtZgH0Oc"}, {"id": "wiwRHG1j", "sku": "SPOn4IBI"}, {"id": "szBIcS3i", "sku": "Z7UcOLLL"}], "localizations": {"GPLzkNtA": {"description": "R8L66fJK", "localExt": {"WJplV8Aa": {}, "CaTDZJOl": {}, "DibUJr5C": {}}, "longDescription": "9LAdMs68", "title": "P9ja6SfM"}, "xHrsA6gN": {"description": "O7C4gGym", "localExt": {"g5Gg2BeV": {}, "avADwibo": {}, "bLgQlSiM": {}}, "longDescription": "ZkRTDd1d", "title": "qJ75Eo8F"}, "3SRQHuLu": {"description": "sRWiJX7g", "localExt": {"i3hEksv2": {}, "jllBJkqN": {}, "ftBDBd7q": {}}, "longDescription": "yWx9uYde", "title": "BbDuhNeB"}}, "name": "HJ2aypfv", "rotationType": "FIXED_PERIOD", "startDate": "1979-11-26T00:00:00Z", "viewId": "LXCj4W0w"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateSection \
    --namespace $AB_NAMESPACE \
    --storeId 'dFXMYhnn' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 185 'CreateSection' test.out

#- 186 PurgeExpiredSection
$CLI_EXE \
    --sn platform \
    --op PurgeExpiredSection \
    --namespace $AB_NAMESPACE \
    --storeId '8hkJFV9R' \
    > test.out 2>&1
eval_tap $? 186 'PurgeExpiredSection' test.out

#- 187 GetSection
$CLI_EXE \
    --sn platform \
    --op GetSection \
    --namespace $AB_NAMESPACE \
    --sectionId 'YLTYVnVh' \
    --storeId 'tUmlZBk6' \
    > test.out 2>&1
eval_tap $? 187 'GetSection' test.out

#- 188 UpdateSection
# body param: body
echo '{"active": true, "displayOrder": 64, "endDate": "1995-01-03T00:00:00Z", "ext": {"cNuew5WU": {}, "fjhb5PBe": {}, "v0diGguN": {}}, "fixedPeriodRotationConfig": {"backfillType": "CUSTOM", "duration": 92, "itemCount": 44, "rule": "SEQUENCE"}, "items": [{"id": "HAAotydY", "sku": "8X3BwQAY"}, {"id": "K8dYoKWY", "sku": "biat4S5M"}, {"id": "4Q51sFh1", "sku": "7vCbYvTu"}], "localizations": {"VZ308blF": {"description": "MZZO6Elc", "localExt": {"XXLAe4C5": {}, "PpI4NCz9": {}, "qp7MY5Zb": {}}, "longDescription": "3kUFvTsa", "title": "jbtN26ck"}, "kGgpcBse": {"description": "lhEMmStV", "localExt": {"uH1xiKtK": {}, "N6645d3X": {}, "q0Neevt1": {}}, "longDescription": "YV6gLpEX", "title": "lSbDMoUw"}, "fLL5KCcJ": {"description": "EQcwxu4n", "localExt": {"bjSO6noo": {}, "e181wbYu": {}, "vcQEU1Yv": {}}, "longDescription": "NNdGft8o", "title": "IQrKACGR"}}, "name": "cU87ZdjO", "rotationType": "CUSTOM", "startDate": "1990-04-02T00:00:00Z", "viewId": "hPss4JD0"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateSection \
    --namespace $AB_NAMESPACE \
    --sectionId 'Dn5X6sLd' \
    --storeId 's0vZ82oe' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 188 'UpdateSection' test.out

#- 189 DeleteSection
$CLI_EXE \
    --sn platform \
    --op DeleteSection \
    --namespace $AB_NAMESPACE \
    --sectionId 'X1TeE9cq' \
    --storeId 'woaKDc7q' \
    > test.out 2>&1
eval_tap $? 189 'DeleteSection' test.out

#- 190 ListStores
$CLI_EXE \
    --sn platform \
    --op ListStores \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 190 'ListStores' test.out

#- 191 CreateStore
# body param: body
echo '{"defaultLanguage": "cCTHVo3V", "defaultRegion": "vWkZj0hw", "description": "MP9BJeI5", "supportedLanguages": ["o7iyb08X", "G8vZKpAn", "mqeaCo7M"], "supportedRegions": ["reDcs2TV", "7JlgDaZU", "GCuPwbWj"], "title": "zJ8mM8jW"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateStore \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 191 'CreateStore' test.out

#- 192 GetCatalogDefinition
$CLI_EXE \
    --sn platform \
    --op GetCatalogDefinition \
    --namespace $AB_NAMESPACE \
    --catalogType 'SECTION' \
    > test.out 2>&1
eval_tap $? 192 'GetCatalogDefinition' test.out

#- 193 DownloadCSVTemplates
$CLI_EXE \
    --sn platform \
    --op DownloadCSVTemplates \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 193 'DownloadCSVTemplates' test.out

#- 194 ExportStoreByCSV
# body param: body
echo '{"catalogType": "APP", "fieldsToBeIncluded": ["JlskyvFR", "UFhtsAfV", "LmebbuXG"], "idsToBeExported": ["MDKaad7p", "cyNf7PmI", "bqYd0aIB"], "storeId": "p3TxnhWv"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ExportStoreByCSV \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 194 'ExportStoreByCSV' test.out

#- 195 ImportStore
eval_tap 0 195 'ImportStore # SKIP deprecated' test.out

#- 196 GetPublishedStore
$CLI_EXE \
    --sn platform \
    --op GetPublishedStore \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 196 'GetPublishedStore' test.out

#- 197 DeletePublishedStore
$CLI_EXE \
    --sn platform \
    --op DeletePublishedStore \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 197 'DeletePublishedStore' test.out

#- 198 GetPublishedStoreBackup
$CLI_EXE \
    --sn platform \
    --op GetPublishedStoreBackup \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 198 'GetPublishedStoreBackup' test.out

#- 199 RollbackPublishedStore
$CLI_EXE \
    --sn platform \
    --op RollbackPublishedStore \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 199 'RollbackPublishedStore' test.out

#- 200 GetStore
$CLI_EXE \
    --sn platform \
    --op GetStore \
    --namespace $AB_NAMESPACE \
    --storeId 'C3ZWA8BM' \
    > test.out 2>&1
eval_tap $? 200 'GetStore' test.out

#- 201 UpdateStore
# body param: body
echo '{"defaultLanguage": "BmBznbhL", "defaultRegion": "geLqVLvF", "description": "fBORfYrn", "supportedLanguages": ["8jYIlFoT", "fVzlRySZ", "OGUIu037"], "supportedRegions": ["8r0QHpRr", "oXh207Pj", "YNONpqf8"], "title": "TkYf1ciS"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateStore \
    --namespace $AB_NAMESPACE \
    --storeId 'ALWp8ox1' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 201 'UpdateStore' test.out

#- 202 DeleteStore
$CLI_EXE \
    --sn platform \
    --op DeleteStore \
    --namespace $AB_NAMESPACE \
    --storeId 'NOyVwcSs' \
    > test.out 2>&1
eval_tap $? 202 'DeleteStore' test.out

#- 203 QueryChanges
$CLI_EXE \
    --sn platform \
    --op QueryChanges \
    --namespace $AB_NAMESPACE \
    --storeId 'cle6vh1m' \
    --action 'UPDATE' \
    --itemSku 'cze6ViW8' \
    --itemType 'APP' \
    --limit '36' \
    --offset '16' \
    --selected 'false' \
    --sortBy '["updatedAt:desc", "updatedAt"]' \
    --status 'PUBLISHED' \
    --type 'STORE' \
    --updatedAtEnd '05aMRCTf' \
    --updatedAtStart 'MisVazc2' \
    --withTotal 'true' \
    > test.out 2>&1
eval_tap $? 203 'QueryChanges' test.out

#- 204 PublishAll
$CLI_EXE \
    --sn platform \
    --op PublishAll \
    --namespace $AB_NAMESPACE \
    --storeId 'UWxsYxTe' \
    > test.out 2>&1
eval_tap $? 204 'PublishAll' test.out

#- 205 PublishSelected
$CLI_EXE \
    --sn platform \
    --op PublishSelected \
    --namespace $AB_NAMESPACE \
    --storeId '6DlkyWAM' \
    > test.out 2>&1
eval_tap $? 205 'PublishSelected' test.out

#- 206 SelectAllRecords
$CLI_EXE \
    --sn platform \
    --op SelectAllRecords \
    --namespace $AB_NAMESPACE \
    --storeId 'fMusVunT' \
    > test.out 2>&1
eval_tap $? 206 'SelectAllRecords' test.out

#- 207 SelectAllRecordsByCriteria
$CLI_EXE \
    --sn platform \
    --op SelectAllRecordsByCriteria \
    --namespace $AB_NAMESPACE \
    --storeId 'zJR6xjej' \
    --action 'CREATE' \
    --itemSku 'pLrtDIgK' \
    --itemType 'INGAMEITEM' \
    --selected 'true' \
    --type 'STORE' \
    --updatedAtEnd 'Vl57Iwn8' \
    --updatedAtStart '2Qvu2fZM' \
    > test.out 2>&1
eval_tap $? 207 'SelectAllRecordsByCriteria' test.out

#- 208 GetStatistic
$CLI_EXE \
    --sn platform \
    --op GetStatistic \
    --namespace $AB_NAMESPACE \
    --storeId 'GpAbi7Cu' \
    --action 'DELETE' \
    --itemSku 'IMoUFfiQ' \
    --itemType 'INGAMEITEM' \
    --type 'VIEW' \
    --updatedAtEnd 'I42L5MBo' \
    --updatedAtStart '04aDRvRl' \
    > test.out 2>&1
eval_tap $? 208 'GetStatistic' test.out

#- 209 UnselectAllRecords
$CLI_EXE \
    --sn platform \
    --op UnselectAllRecords \
    --namespace $AB_NAMESPACE \
    --storeId 'm9b0dIUE' \
    > test.out 2>&1
eval_tap $? 209 'UnselectAllRecords' test.out

#- 210 SelectRecord
$CLI_EXE \
    --sn platform \
    --op SelectRecord \
    --changeId 'jFjaZhU9' \
    --namespace $AB_NAMESPACE \
    --storeId 'gOtxMYrh' \
    > test.out 2>&1
eval_tap $? 210 'SelectRecord' test.out

#- 211 UnselectRecord
$CLI_EXE \
    --sn platform \
    --op UnselectRecord \
    --changeId 'J7sSbmnp' \
    --namespace $AB_NAMESPACE \
    --storeId 'FvJMXk4H' \
    > test.out 2>&1
eval_tap $? 211 'UnselectRecord' test.out

#- 212 CloneStore
$CLI_EXE \
    --sn platform \
    --op CloneStore \
    --namespace $AB_NAMESPACE \
    --storeId '0LMatniL' \
    --targetStoreId 'ojr7I4PS' \
    > test.out 2>&1
eval_tap $? 212 'CloneStore' test.out

#- 213 ExportStore
eval_tap 0 213 'ExportStore # SKIP deprecated' test.out

#- 214 QueryImportHistory
$CLI_EXE \
    --sn platform \
    --op QueryImportHistory \
    --namespace $AB_NAMESPACE \
    --storeId 'T55uDQgU' \
    --end 'j2zxlIDG' \
    --limit '97' \
    --offset '9' \
    --sortBy 'MNjjzSG9' \
    --start '3PcQDClr' \
    --success 'false' \
    > test.out 2>&1
eval_tap $? 214 'QueryImportHistory' test.out

#- 215 ImportStoreByCSV
# form data upload: category
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
# form data upload: display
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
# form data upload: item
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
# form data upload: section
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op ImportStoreByCSV \
    --namespace $AB_NAMESPACE \
    --storeId 'OjYDzY7V' \
    --upload category $TEMP_FILE_UPLOAD \
    --upload display $TEMP_FILE_UPLOAD \
    --upload item $TEMP_FILE_UPLOAD \
    --notes 'JBDVwNGT' \
    --upload section $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 215 'ImportStoreByCSV' test.out

#- 216 QuerySubscriptions
$CLI_EXE \
    --sn platform \
    --op QuerySubscriptions \
    --namespace $AB_NAMESPACE \
    --chargeStatus 'CHARGED' \
    --itemId '0wuvYyGE' \
    --limit '99' \
    --offset '26' \
    --sku 'XOAUo0Xu' \
    --status 'ACTIVE' \
    --subscribedBy 'PLATFORM' \
    --userId 'jOYTmqNf' \
    > test.out 2>&1
eval_tap $? 216 'QuerySubscriptions' test.out

#- 217 RecurringChargeSubscription
$CLI_EXE \
    --sn platform \
    --op RecurringChargeSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'QrVaSHfK' \
    > test.out 2>&1
eval_tap $? 217 'RecurringChargeSubscription' test.out

#- 218 GetTicketDynamic
$CLI_EXE \
    --sn platform \
    --op GetTicketDynamic \
    --boothName 'GEKlsMbd' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 218 'GetTicketDynamic' test.out

#- 219 DecreaseTicketSale
# body param: body
echo '{"orderNo": "kn9LCXrq"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op DecreaseTicketSale \
    --boothName 'MKlrUwNm' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 219 'DecreaseTicketSale' test.out

#- 220 GetTicketBoothID
$CLI_EXE \
    --sn platform \
    --op GetTicketBoothID \
    --boothName '8RHctrtc' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 220 'GetTicketBoothID' test.out

#- 221 IncreaseTicketSale
# body param: body
echo '{"count": 65, "orderNo": "Jx2I7uqv"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op IncreaseTicketSale \
    --boothName 'xweISNPz' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 221 'IncreaseTicketSale' test.out

#- 222 Commit
# body param: body
echo '{"actions": [{"operations": [{"creditPayload": {"balanceOrigin": "Xbox", "count": 28, "currencyCode": "SOBQ2Sqk", "expireAt": "1972-09-26T00:00:00Z"}, "debitPayload": {"count": 9, "currencyCode": "ovmWA1sY", "walletPlatform": "Xbox"}, "fulFillItemPayload": {"count": 58, "entitlementCollectionId": "E3tZCXDE", "entitlementOrigin": "Oculus", "itemIdentity": "siJSZEsN", "itemIdentityType": "ITEM_ID"}, "revokeEntitlementPayload": {"count": 56, "entitlementId": "uhPlsh9h"}, "type": "FULFILL_ITEM"}, {"creditPayload": {"balanceOrigin": "Xbox", "count": 84, "currencyCode": "IKhtwCi0", "expireAt": "1987-10-22T00:00:00Z"}, "debitPayload": {"count": 77, "currencyCode": "Ev5GhTcZ", "walletPlatform": "IOS"}, "fulFillItemPayload": {"count": 26, "entitlementCollectionId": "QAWih31x", "entitlementOrigin": "Other", "itemIdentity": "yZOl8U6j", "itemIdentityType": "ITEM_SKU"}, "revokeEntitlementPayload": {"count": 60, "entitlementId": "PxWEu9ij"}, "type": "DEBIT_WALLET"}, {"creditPayload": {"balanceOrigin": "GooglePlay", "count": 98, "currencyCode": "U5LlJK5f", "expireAt": "1988-12-01T00:00:00Z"}, "debitPayload": {"count": 55, "currencyCode": "TUfjw7WE", "walletPlatform": "Nintendo"}, "fulFillItemPayload": {"count": 67, "entitlementCollectionId": "xM7BcKgN", "entitlementOrigin": "Xbox", "itemIdentity": "2IwZqlPx", "itemIdentityType": "ITEM_SKU"}, "revokeEntitlementPayload": {"count": 74, "entitlementId": "t5YqtuCL"}, "type": "REVOKE_ENTITLEMENT"}], "userId": "tJIUVMUP"}, {"operations": [{"creditPayload": {"balanceOrigin": "IOS", "count": 46, "currencyCode": "EJIHtX8L", "expireAt": "1993-09-09T00:00:00Z"}, "debitPayload": {"count": 91, "currencyCode": "lk0w88Tc", "walletPlatform": "Xbox"}, "fulFillItemPayload": {"count": 59, "entitlementCollectionId": "NEtzMdsR", "entitlementOrigin": "Xbox", "itemIdentity": "M8n0H2iy", "itemIdentityType": "ITEM_ID"}, "revokeEntitlementPayload": {"count": 65, "entitlementId": "v4mYkrYU"}, "type": "FULFILL_ITEM"}, {"creditPayload": {"balanceOrigin": "Twitch", "count": 1, "currencyCode": "DwT5a2lX", "expireAt": "1993-04-21T00:00:00Z"}, "debitPayload": {"count": 42, "currencyCode": "KPx3srcC", "walletPlatform": "Other"}, "fulFillItemPayload": {"count": 47, "entitlementCollectionId": "0aeNuKDV", "entitlementOrigin": "Xbox", "itemIdentity": "RSciINXk", "itemIdentityType": "ITEM_ID"}, "revokeEntitlementPayload": {"count": 63, "entitlementId": "YDPwz1GL"}, "type": "FULFILL_ITEM"}, {"creditPayload": {"balanceOrigin": "System", "count": 87, "currencyCode": "eA7tZD05", "expireAt": "1997-05-30T00:00:00Z"}, "debitPayload": {"count": 73, "currencyCode": "vQuDSkxk", "walletPlatform": "Nintendo"}, "fulFillItemPayload": {"count": 37, "entitlementCollectionId": "WqHE1qo3", "entitlementOrigin": "Steam", "itemIdentity": "bPisJvgI", "itemIdentityType": "ITEM_SKU"}, "revokeEntitlementPayload": {"count": 96, "entitlementId": "JIsByW37"}, "type": "FULFILL_ITEM"}], "userId": "voepb78a"}, {"operations": [{"creditPayload": {"balanceOrigin": "Xbox", "count": 95, "currencyCode": "TKnSP31i", "expireAt": "1992-03-06T00:00:00Z"}, "debitPayload": {"count": 98, "currencyCode": "LtfLAhsM", "walletPlatform": "IOS"}, "fulFillItemPayload": {"count": 64, "entitlementCollectionId": "HKVvXijM", "entitlementOrigin": "Playstation", "itemIdentity": "r8zl4LZQ", "itemIdentityType": "ITEM_SKU"}, "revokeEntitlementPayload": {"count": 62, "entitlementId": "D4r0rDsH"}, "type": "FULFILL_ITEM"}, {"creditPayload": {"balanceOrigin": "Oculus", "count": 88, "currencyCode": "zgFZMTQg", "expireAt": "1987-06-07T00:00:00Z"}, "debitPayload": {"count": 26, "currencyCode": "ToQOoqtI", "walletPlatform": "Nintendo"}, "fulFillItemPayload": {"count": 30, "entitlementCollectionId": "tl6621sC", "entitlementOrigin": "System", "itemIdentity": "3z0TTSvy", "itemIdentityType": "ITEM_SKU"}, "revokeEntitlementPayload": {"count": 75, "entitlementId": "AeCSr2Ck"}, "type": "CREDIT_WALLET"}, {"creditPayload": {"balanceOrigin": "Playstation", "count": 5, "currencyCode": "KGUh5MMP", "expireAt": "1972-05-20T00:00:00Z"}, "debitPayload": {"count": 42, "currencyCode": "LXbRxNmQ", "walletPlatform": "Nintendo"}, "fulFillItemPayload": {"count": 4, "entitlementCollectionId": "0btU6LYs", "entitlementOrigin": "GooglePlay", "itemIdentity": "qYSrCOJ8", "itemIdentityType": "ITEM_ID"}, "revokeEntitlementPayload": {"count": 42, "entitlementId": "thAmRg6V"}, "type": "FULFILL_ITEM"}], "userId": "0LKapktA"}], "metadata": {"iQVX3rph": {}, "NZII4y8w": {}, "P7Bdme9u": {}}, "needPreCheck": false, "transactionId": "2uvy2eRB", "type": "7DaPFyZg"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op Commit \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 222 'Commit' test.out

#- 223 GetTradeHistoryByCriteria
$CLI_EXE \
    --sn platform \
    --op GetTradeHistoryByCriteria \
    --namespace $AB_NAMESPACE \
    --limit '75' \
    --offset '39' \
    --status 'FAILED' \
    --type 'YSMlbPe1' \
    --userId 'rdzaLFVe' \
    > test.out 2>&1
eval_tap $? 223 'GetTradeHistoryByCriteria' test.out

#- 224 GetTradeHistoryByTransactionId
$CLI_EXE \
    --sn platform \
    --op GetTradeHistoryByTransactionId \
    --namespace $AB_NAMESPACE \
    --transactionId '6WgkSagc' \
    > test.out 2>&1
eval_tap $? 224 'GetTradeHistoryByTransactionId' test.out

#- 225 UnlockSteamUserAchievement
# body param: body
echo '{"achievements": [{"id": "8C2V21Qn", "value": 38}, {"id": "5ByP7Fht", "value": 92}, {"id": "wSljpQac", "value": 51}], "steamUserId": "SLqUKhhN"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UnlockSteamUserAchievement \
    --namespace $AB_NAMESPACE \
    --userId 'DPx78qVj' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 225 'UnlockSteamUserAchievement' test.out

#- 226 GetXblUserAchievements
$CLI_EXE \
    --sn platform \
    --op GetXblUserAchievements \
    --namespace $AB_NAMESPACE \
    --userId 'tc7Ym74y' \
    --xboxUserId 'P3Ni1JbC' \
    > test.out 2>&1
eval_tap $? 226 'GetXblUserAchievements' test.out

#- 227 UpdateXblUserAchievement
# body param: body
echo '{"achievements": [{"id": "YkaOljr3", "percentComplete": 39}, {"id": "QbqL5zD4", "percentComplete": 5}, {"id": "VweSA18G", "percentComplete": 74}], "serviceConfigId": "k62TIjDd", "titleId": "3iIZYSNF", "xboxUserId": "x8XvKd0a"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXblUserAchievement \
    --namespace $AB_NAMESPACE \
    --userId 'lNxZRAyO' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 227 'UpdateXblUserAchievement' test.out

#- 228 AnonymizeCampaign
$CLI_EXE \
    --sn platform \
    --op AnonymizeCampaign \
    --namespace $AB_NAMESPACE \
    --userId 'JHGCTttV' \
    > test.out 2>&1
eval_tap $? 228 'AnonymizeCampaign' test.out

#- 229 AnonymizeEntitlement
$CLI_EXE \
    --sn platform \
    --op AnonymizeEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'uYwBZnGz' \
    > test.out 2>&1
eval_tap $? 229 'AnonymizeEntitlement' test.out

#- 230 AnonymizeFulfillment
$CLI_EXE \
    --sn platform \
    --op AnonymizeFulfillment \
    --namespace $AB_NAMESPACE \
    --userId 'kjRAGZfm' \
    > test.out 2>&1
eval_tap $? 230 'AnonymizeFulfillment' test.out

#- 231 AnonymizeIntegration
$CLI_EXE \
    --sn platform \
    --op AnonymizeIntegration \
    --namespace $AB_NAMESPACE \
    --userId 'jTUwChp1' \
    > test.out 2>&1
eval_tap $? 231 'AnonymizeIntegration' test.out

#- 232 AnonymizeOrder
$CLI_EXE \
    --sn platform \
    --op AnonymizeOrder \
    --namespace $AB_NAMESPACE \
    --userId 'Tc5jpVP4' \
    > test.out 2>&1
eval_tap $? 232 'AnonymizeOrder' test.out

#- 233 AnonymizePayment
$CLI_EXE \
    --sn platform \
    --op AnonymizePayment \
    --namespace $AB_NAMESPACE \
    --userId 'hhxosddj' \
    > test.out 2>&1
eval_tap $? 233 'AnonymizePayment' test.out

#- 234 AnonymizeRevocation
$CLI_EXE \
    --sn platform \
    --op AnonymizeRevocation \
    --namespace $AB_NAMESPACE \
    --userId 'ICSqGSdW' \
    > test.out 2>&1
eval_tap $? 234 'AnonymizeRevocation' test.out

#- 235 AnonymizeSubscription
$CLI_EXE \
    --sn platform \
    --op AnonymizeSubscription \
    --namespace $AB_NAMESPACE \
    --userId 'gl0NLelO' \
    > test.out 2>&1
eval_tap $? 235 'AnonymizeSubscription' test.out

#- 236 AnonymizeWallet
$CLI_EXE \
    --sn platform \
    --op AnonymizeWallet \
    --namespace $AB_NAMESPACE \
    --userId 'QzfPkh7n' \
    > test.out 2>&1
eval_tap $? 236 'AnonymizeWallet' test.out

#- 237 GetUserDLCByPlatform
$CLI_EXE \
    --sn platform \
    --op GetUserDLCByPlatform \
    --namespace $AB_NAMESPACE \
    --userId 'IQi2EWpc' \
    --type 'STEAM' \
    > test.out 2>&1
eval_tap $? 237 'GetUserDLCByPlatform' test.out

#- 238 GetUserDLC
$CLI_EXE \
    --sn platform \
    --op GetUserDLC \
    --namespace $AB_NAMESPACE \
    --userId '7cdvgvOQ' \
    --includeAllNamespaces 'true' \
    --status 'REVOKED' \
    --type 'XBOX' \
    > test.out 2>&1
eval_tap $? 238 'GetUserDLC' test.out

#- 239 QueryUserEntitlements
$CLI_EXE \
    --sn platform \
    --op QueryUserEntitlements \
    --namespace $AB_NAMESPACE \
    --userId 'ht7aWFrZ' \
    --activeOnly 'true' \
    --appType 'SOFTWARE' \
    --collectionId 'Bd8BCOqT' \
    --entitlementClazz 'OPTIONBOX' \
    --entitlementName 'favRhydw' \
    --features '["Ve6K1WM9", "bQuSzb0P", "WLYWq2Cl"]' \
    --fuzzyMatchName 'true' \
    --itemId '["BnPqMWpG", "DmZiCwtK", "HerHqEGF"]' \
    --limit '75' \
    --offset '34' \
    --origin 'Oculus' \
    > test.out 2>&1
eval_tap $? 239 'QueryUserEntitlements' test.out

#- 240 GrantUserEntitlement
# body param: body
echo '[{"collectionId": "NM3Lb4xP", "endDate": "1981-11-02T00:00:00Z", "grantedCode": "JfATZABj", "itemId": "YVQNZaOg", "itemNamespace": "tXj0YUhX", "language": "Hqu_mdOt", "origin": "Oculus", "quantity": 0, "region": "Shk4QYJR", "source": "OTHER", "startDate": "1994-05-04T00:00:00Z", "storeId": "9q420tMj"}, {"collectionId": "wlfWpeIB", "endDate": "1971-08-19T00:00:00Z", "grantedCode": "nzfCLqkM", "itemId": "BWEQF3Cc", "itemNamespace": "XeYUwWW9", "language": "js_BLwD-zV", "origin": "Nintendo", "quantity": 46, "region": "roiXobY2", "source": "REFERRAL_BONUS", "startDate": "1989-02-14T00:00:00Z", "storeId": "RNikpLxH"}, {"collectionId": "q8uVXxaD", "endDate": "1972-06-16T00:00:00Z", "grantedCode": "XFhUN5rG", "itemId": "G2wtDDia", "itemNamespace": "TnLXMc2B", "language": "lJ-lnlp", "origin": "IOS", "quantity": 50, "region": "evWHso0I", "source": "ACHIEVEMENT", "startDate": "1987-07-31T00:00:00Z", "storeId": "xp4n3IMI"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op GrantUserEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'w7bzoC4x' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 240 'GrantUserEntitlement' test.out

#- 241 GetUserAppEntitlementByAppId
$CLI_EXE \
    --sn platform \
    --op GetUserAppEntitlementByAppId \
    --namespace $AB_NAMESPACE \
    --userId 'jgVTS2lm' \
    --activeOnly 'true' \
    --appId 'nZ5nNVD9' \
    > test.out 2>&1
eval_tap $? 241 'GetUserAppEntitlementByAppId' test.out

#- 242 QueryUserEntitlementsByAppType
$CLI_EXE \
    --sn platform \
    --op QueryUserEntitlementsByAppType \
    --namespace $AB_NAMESPACE \
    --userId 'ankAsLWh' \
    --activeOnly 'false' \
    --limit '65' \
    --offset '49' \
    --appType 'GAME' \
    > test.out 2>&1
eval_tap $? 242 'QueryUserEntitlementsByAppType' test.out

#- 243 GetUserEntitlementByItemId
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'cMA1eEsm' \
    --activeOnly 'true' \
    --entitlementClazz 'MEDIA' \
    --platform 'qnsBqJfK' \
    --itemId 'g9QMnwOF' \
    > test.out 2>&1
eval_tap $? 243 'GetUserEntitlementByItemId' test.out

#- 244 GetUserActiveEntitlementsByItemIds
$CLI_EXE \
    --sn platform \
    --op GetUserActiveEntitlementsByItemIds \
    --namespace $AB_NAMESPACE \
    --userId 'wDDcfzlr' \
    --ids '["WBLaa98i", "UYkgi6IS", "3Z8Ne9SN"]' \
    --platform 'N2TMAq9B' \
    > test.out 2>&1
eval_tap $? 244 'GetUserActiveEntitlementsByItemIds' test.out

#- 245 GetUserEntitlementBySku
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementBySku \
    --namespace $AB_NAMESPACE \
    --userId 'cCd5hgyN' \
    --activeOnly 'true' \
    --entitlementClazz 'MEDIA' \
    --platform 'Ewr7y3Rt' \
    --sku 'zUnfbljG' \
    > test.out 2>&1
eval_tap $? 245 'GetUserEntitlementBySku' test.out

#- 246 ExistsAnyUserActiveEntitlement
$CLI_EXE \
    --sn platform \
    --op ExistsAnyUserActiveEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'WhxSR6d1' \
    --appIds '["GAeeCbms", "j4rViyqH", "esQR5XZW"]' \
    --itemIds '["vMWskh1J", "Im9rpkEd", "vnz40hJR"]' \
    --platform 'hx9BdTeW' \
    --skus '["EVh9knPG", "iapZcGMI", "qMJNQb1w"]' \
    > test.out 2>&1
eval_tap $? 246 'ExistsAnyUserActiveEntitlement' test.out

#- 247 ExistsAnyUserActiveEntitlementByItemIds
$CLI_EXE \
    --sn platform \
    --op ExistsAnyUserActiveEntitlementByItemIds \
    --namespace $AB_NAMESPACE \
    --userId 'WmcRZ8rH' \
    --platform 'sYTCAMqo' \
    --itemIds '["tB5ZRqms", "Oo7vGfv5", "rLqVg7b9"]' \
    > test.out 2>&1
eval_tap $? 247 'ExistsAnyUserActiveEntitlementByItemIds' test.out

#- 248 GetUserAppEntitlementOwnershipByAppId
$CLI_EXE \
    --sn platform \
    --op GetUserAppEntitlementOwnershipByAppId \
    --namespace $AB_NAMESPACE \
    --userId 'zOD5ndZ0' \
    --appId 'o2qk3X4g' \
    > test.out 2>&1
eval_tap $? 248 'GetUserAppEntitlementOwnershipByAppId' test.out

#- 249 GetUserEntitlementOwnershipByItemId
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementOwnershipByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'y3J09C6s' \
    --entitlementClazz 'SUBSCRIPTION' \
    --platform 'ZebFW992' \
    --itemId 'cupSLu2F' \
    > test.out 2>&1
eval_tap $? 249 'GetUserEntitlementOwnershipByItemId' test.out

#- 250 GetUserEntitlementOwnershipByItemIds
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementOwnershipByItemIds \
    --namespace $AB_NAMESPACE \
    --userId 'X78iqlVc' \
    --ids '["GAZTfYE2", "4JjzN0FO", "2wfhes3w"]' \
    --platform 'UHPheu7V' \
    > test.out 2>&1
eval_tap $? 250 'GetUserEntitlementOwnershipByItemIds' test.out

#- 251 GetUserEntitlementOwnershipBySku
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementOwnershipBySku \
    --namespace $AB_NAMESPACE \
    --userId 'pETlvMPm' \
    --entitlementClazz 'ENTITLEMENT' \
    --platform 'o6WR09dL' \
    --sku '0PEXrlXF' \
    > test.out 2>&1
eval_tap $? 251 'GetUserEntitlementOwnershipBySku' test.out

#- 252 RevokeAllEntitlements
$CLI_EXE \
    --sn platform \
    --op RevokeAllEntitlements \
    --namespace $AB_NAMESPACE \
    --userId 'OeihiR2h' \
    > test.out 2>&1
eval_tap $? 252 'RevokeAllEntitlements' test.out

#- 253 RevokeUserEntitlements
$CLI_EXE \
    --sn platform \
    --op RevokeUserEntitlements \
    --namespace $AB_NAMESPACE \
    --userId 'ckbdj8He' \
    --entitlementIds 'cvRVMybC' \
    > test.out 2>&1
eval_tap $? 253 'RevokeUserEntitlements' test.out

#- 254 GetUserEntitlement
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlement \
    --entitlementId '6lCbMmPe' \
    --namespace $AB_NAMESPACE \
    --userId 'z6FKU0lp' \
    > test.out 2>&1
eval_tap $? 254 'GetUserEntitlement' test.out

#- 255 UpdateUserEntitlement
# body param: body
echo '{"collectionId": "k7vFejuI", "endDate": "1991-09-17T00:00:00Z", "nullFieldList": ["dKrRtQU3", "38I51KO1", "UrhNESRM"], "origin": "Other", "reason": "C3zz3oLp", "startDate": "1972-12-14T00:00:00Z", "status": "ACTIVE", "useCount": 92}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateUserEntitlement \
    --entitlementId 'TL349rXo' \
    --namespace $AB_NAMESPACE \
    --userId 'NY1deOHt' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 255 'UpdateUserEntitlement' test.out

#- 256 ConsumeUserEntitlement
# body param: body
echo '{"options": ["EcruczDH", "FEK22uZX", "zOGWuQTK"], "platform": "r93VoTWN", "requestId": "cxnPSpOr", "useCount": 57}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ConsumeUserEntitlement \
    --entitlementId 'Kz4BDhdN' \
    --namespace $AB_NAMESPACE \
    --userId 'GKZT9Kx6' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 256 'ConsumeUserEntitlement' test.out

#- 257 DisableUserEntitlement
$CLI_EXE \
    --sn platform \
    --op DisableUserEntitlement \
    --entitlementId 'DJWvoEIr' \
    --namespace $AB_NAMESPACE \
    --userId '9TsQ41o5' \
    > test.out 2>&1
eval_tap $? 257 'DisableUserEntitlement' test.out

#- 258 EnableUserEntitlement
$CLI_EXE \
    --sn platform \
    --op EnableUserEntitlement \
    --entitlementId '9NRVUAl6' \
    --namespace $AB_NAMESPACE \
    --userId '4qdCAq8R' \
    > test.out 2>&1
eval_tap $? 258 'EnableUserEntitlement' test.out

#- 259 GetUserEntitlementHistories
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementHistories \
    --entitlementId 'jBWtKUD7' \
    --namespace $AB_NAMESPACE \
    --userId 'jkED9ura' \
    > test.out 2>&1
eval_tap $? 259 'GetUserEntitlementHistories' test.out

#- 260 RevokeUserEntitlement
$CLI_EXE \
    --sn platform \
    --op RevokeUserEntitlement \
    --entitlementId '5n1hhvLx' \
    --namespace $AB_NAMESPACE \
    --userId '2YpdPFov' \
    > test.out 2>&1
eval_tap $? 260 'RevokeUserEntitlement' test.out

#- 261 RevokeUserEntitlementByUseCount
# body param: body
echo '{"reason": "uYTsO1LN", "useCount": 33}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RevokeUserEntitlementByUseCount \
    --entitlementId '2aIKu25z' \
    --namespace $AB_NAMESPACE \
    --userId 'BBA6k4SE' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 261 'RevokeUserEntitlementByUseCount' test.out

#- 262 PreCheckRevokeUserEntitlementByUseCount
$CLI_EXE \
    --sn platform \
    --op PreCheckRevokeUserEntitlementByUseCount \
    --entitlementId 'jxN0SKoy' \
    --namespace $AB_NAMESPACE \
    --userId '0LAtC15l' \
    --quantity '34' \
    > test.out 2>&1
eval_tap $? 262 'PreCheckRevokeUserEntitlementByUseCount' test.out

#- 263 RevokeUseCount
eval_tap 0 263 'RevokeUseCount # SKIP deprecated' test.out

#- 264 SellUserEntitlement
# body param: body
echo '{"platform": "tENTdioK", "requestId": "jmh0Pdi7", "useCount": 77}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SellUserEntitlement \
    --entitlementId 'K77EiKH1' \
    --namespace $AB_NAMESPACE \
    --userId 'nMNjESf1' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 264 'SellUserEntitlement' test.out

#- 265 FulfillItem
# body param: body
echo '{"duration": 11, "endDate": "1972-06-25T00:00:00Z", "entitlementCollectionId": "nzsVQXtv", "entitlementOrigin": "Twitch", "itemId": "3x4Xwf2m", "itemSku": "cZg1EJLv", "language": "Qsci8LGs", "metadata": {"AB8umXpM": {}, "9yLhljaO": {}, "L1NCkEbX": {}}, "order": {"currency": {"currencyCode": "5za2Qdi0", "currencySymbol": "DCyeCZwI", "currencyType": "VIRTUAL", "decimals": 3, "namespace": "0r52eAwX"}, "ext": {"C0DNwodM": {}, "oYsyqrio": {}, "cvaLqyPi": {}}, "free": true}, "orderNo": "2cYkny01", "origin": "Nintendo", "overrideBundleItemQty": {"Z8mE3Bwu": 43, "2PjtHCia": 52, "Ep4OTCNw": 81}, "quantity": 88, "region": "oXjq0eVA", "source": "PAYMENT", "startDate": "1983-01-22T00:00:00Z", "storeId": "EDsu4L0W"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op FulfillItem \
    --namespace $AB_NAMESPACE \
    --userId 'm2OKKpuh' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 265 'FulfillItem' test.out

#- 266 RedeemCode
# body param: body
echo '{"code": "0MmzcW3C", "language": "Zbj-NlHo", "region": "3bR3Qykh"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RedeemCode \
    --namespace $AB_NAMESPACE \
    --userId 'Zl731SYO' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 266 'RedeemCode' test.out

#- 267 PreCheckFulfillItem
# body param: body
echo '{"itemId": "9OA9onQR", "itemSku": "YnH4fr8n", "quantity": 59}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PreCheckFulfillItem \
    --namespace $AB_NAMESPACE \
    --userId 'Rk1BF7sE' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 267 'PreCheckFulfillItem' test.out

#- 268 FulfillRewards
# body param: body
echo '{"entitlementCollectionId": "sK2e3Fu0", "entitlementOrigin": "GooglePlay", "metadata": {"Y6JoTCZT": {}, "U4fXZG4P": {}, "RK9YmZr4": {}}, "origin": "GooglePlay", "rewards": [{"currency": {"currencyCode": "peIV3Ni1", "namespace": "vHZYxhQD"}, "item": {"itemId": "kXOBrjwH", "itemName": "ktsKebFO", "itemSku": "ujWdOcL6", "itemType": "m1cwJiOq"}, "quantity": 58, "type": "CURRENCY"}, {"currency": {"currencyCode": "ytf5IrWL", "namespace": "NeIx2AWp"}, "item": {"itemId": "u1QrTIzV", "itemName": "iYxk3Edf", "itemSku": "PlDwfGJm", "itemType": "H9fS5wcE"}, "quantity": 77, "type": "ITEM"}, {"currency": {"currencyCode": "XG7JpZe1", "namespace": "Pa32ZY3l"}, "item": {"itemId": "A6E7NG3m", "itemName": "ATHahRMk", "itemSku": "x3K6ryUb", "itemType": "aJFM3mes"}, "quantity": 10, "type": "ITEM"}], "source": "DLC", "transactionId": "2kCnTKR0"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op FulfillRewards \
    --namespace $AB_NAMESPACE \
    --userId '77K6oB2b' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 268 'FulfillRewards' test.out

#- 269 QueryUserIAPOrders
$CLI_EXE \
    --sn platform \
    --op QueryUserIAPOrders \
    --namespace $AB_NAMESPACE \
    --userId 'qT9AYj0K' \
    --endTime 'o8gaySgg' \
    --limit '76' \
    --offset '100' \
    --productId 'BGII0xxj' \
    --startTime '57ZWMmQH' \
    --status 'VERIFIED' \
    --type 'APPLE' \
    > test.out 2>&1
eval_tap $? 269 'QueryUserIAPOrders' test.out

#- 270 QueryAllUserIAPOrders
$CLI_EXE \
    --sn platform \
    --op QueryAllUserIAPOrders \
    --namespace $AB_NAMESPACE \
    --userId 'ZyH0ilC3' \
    > test.out 2>&1
eval_tap $? 270 'QueryAllUserIAPOrders' test.out

#- 271 QueryUserIAPConsumeHistory
$CLI_EXE \
    --sn platform \
    --op QueryUserIAPConsumeHistory \
    --namespace $AB_NAMESPACE \
    --userId 'eM4wMQ04' \
    --endTime 'E4ggVacx' \
    --limit '57' \
    --offset '8' \
    --startTime 'OqBDP5wM' \
    --status 'SUCCESS' \
    --type 'STADIA' \
    > test.out 2>&1
eval_tap $? 271 'QueryUserIAPConsumeHistory' test.out

#- 272 MockFulfillIAPItem
# body param: body
echo '{"itemIdentityType": "ITEM_ID", "language": "pw", "productId": "TgbnS9AE", "region": "eDzlCtGO", "transactionId": "fgGyXvjW", "type": "EPICGAMES"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op MockFulfillIAPItem \
    --namespace $AB_NAMESPACE \
    --userId '4wCGBP53' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 272 'MockFulfillIAPItem' test.out

#- 273 QueryUserOrders
$CLI_EXE \
    --sn platform \
    --op QueryUserOrders \
    --namespace $AB_NAMESPACE \
    --userId 'VcwmFHFP' \
    --discounted 'true' \
    --itemId 'DiXArbbK' \
    --limit '80' \
    --offset '26' \
    --status 'FULFILLED' \
    > test.out 2>&1
eval_tap $? 273 'QueryUserOrders' test.out

#- 274 AdminCreateUserOrder
# body param: body
echo '{"currencyCode": "D2ZO5E9n", "currencyNamespace": "Rxv7hpyN", "discountCodes": ["ZRy1IFf8", "KE4LfHGt", "Iv5HfPSo"], "discountedPrice": 78, "entitlementPlatform": "Xbox", "ext": {"EinCRiuG": {}, "8lNXpFv6": {}, "hxkRhNu7": {}}, "itemId": "URhGaDW1", "language": "vF4OXJtW", "options": {"skipPriceValidation": true}, "platform": "IOS", "price": 69, "quantity": 61, "region": "dTEV8V3v", "returnUrl": "omL2VVJQ", "sandbox": true, "sectionId": "uE3xJCk2"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op AdminCreateUserOrder \
    --namespace $AB_NAMESPACE \
    --userId 'U3angjSc' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 274 'AdminCreateUserOrder' test.out

#- 275 CountOfPurchasedItem
$CLI_EXE \
    --sn platform \
    --op CountOfPurchasedItem \
    --namespace $AB_NAMESPACE \
    --userId 'VS6yssYJ' \
    --itemId 'NBom99Ex' \
    > test.out 2>&1
eval_tap $? 275 'CountOfPurchasedItem' test.out

#- 276 GetUserOrder
$CLI_EXE \
    --sn platform \
    --op GetUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'zq42nK8D' \
    --userId '1NRPSYm2' \
    > test.out 2>&1
eval_tap $? 276 'GetUserOrder' test.out

#- 277 UpdateUserOrderStatus
# body param: body
echo '{"status": "FULFILL_FAILED", "statusReason": "hUDn8WXF"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateUserOrderStatus \
    --namespace $AB_NAMESPACE \
    --orderNo 'kcMxr043' \
    --userId 'wWU8Uhd7' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 277 'UpdateUserOrderStatus' test.out

#- 278 FulfillUserOrder
$CLI_EXE \
    --sn platform \
    --op FulfillUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'vDwWYQs8' \
    --userId 'lrJpPcuH' \
    > test.out 2>&1
eval_tap $? 278 'FulfillUserOrder' test.out

#- 279 GetUserOrderGrant
eval_tap 0 279 'GetUserOrderGrant # SKIP deprecated' test.out

#- 280 GetUserOrderHistories
$CLI_EXE \
    --sn platform \
    --op GetUserOrderHistories \
    --namespace $AB_NAMESPACE \
    --orderNo 'QxasBdhW' \
    --userId '3xNGytTd' \
    > test.out 2>&1
eval_tap $? 280 'GetUserOrderHistories' test.out

#- 281 ProcessUserOrderNotification
# body param: body
echo '{"additionalData": {"cardSummary": "b43l4jk3"}, "authorisedTime": "1980-09-16T00:00:00Z", "chargebackReversedTime": "1977-03-08T00:00:00Z", "chargebackTime": "1978-06-30T00:00:00Z", "chargedTime": "1981-09-18T00:00:00Z", "createdTime": "1979-10-16T00:00:00Z", "currency": {"currencyCode": "8uEnEcmg", "currencySymbol": "pOAaKtbJ", "currencyType": "REAL", "decimals": 87, "namespace": "Atik8khj"}, "customParameters": {"y6c0TOSF": {}, "J5jWc6Nb": {}, "M38Pd49w": {}}, "extOrderNo": "jmWPeWzg", "extTxId": "N25J2YNq", "extUserId": "g1YZCz5v", "issuedAt": "1996-04-26T00:00:00Z", "metadata": {"fTmp70v6": "jVT9oNK9", "Ay2C6wwR": "NlatCiWO", "gFXtUaWk": "fe29wKUA"}, "namespace": "7SCZRonj", "nonceStr": "16wBQyn9", "paymentData": {"discountAmount": 85, "discountCode": "IU1NukPC", "subtotalPrice": 35, "tax": 58, "totalPrice": 34}, "paymentMethod": "H6UB1HWN", "paymentMethodFee": 14, "paymentOrderNo": "qceQyFlJ", "paymentProvider": "STRIPE", "paymentProviderFee": 44, "paymentStationUrl": "EcdvDSb7", "price": 49, "refundedTime": "1999-11-30T00:00:00Z", "salesTax": 46, "sandbox": true, "sku": "f8qIQnir", "status": "AUTHORISE_FAILED", "statusReason": "4BSe0vKO", "subscriptionId": "snEG3jLA", "subtotalPrice": 20, "targetNamespace": "l7fD7YvU", "targetUserId": "JB6EoD2E", "tax": 78, "totalPrice": 26, "totalTax": 59, "txEndTime": "1994-07-04T00:00:00Z", "type": "YUTMZsRZ", "userId": "JhFfbvZV", "vat": 79}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ProcessUserOrderNotification \
    --namespace $AB_NAMESPACE \
    --orderNo 'iuT1PG7m' \
    --userId 'bJRNlr8S' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 281 'ProcessUserOrderNotification' test.out

#- 282 DownloadUserOrderReceipt
$CLI_EXE \
    --sn platform \
    --op DownloadUserOrderReceipt \
    --namespace $AB_NAMESPACE \
    --orderNo 'zjoISuLG' \
    --userId 'HISiwEnL' \
    > test.out 2>&1
eval_tap $? 282 'DownloadUserOrderReceipt' test.out

#- 283 CreateUserPaymentOrder
# body param: body
echo '{"currencyCode": "RENGbPlW", "currencyNamespace": "VRYTyE0f", "customParameters": {"XYc6vHqj": {}, "AawXQh9C": {}, "cXq2CjMq": {}}, "description": "DMTl6UDo", "extOrderNo": "nqLDgCEo", "extUserId": "fnNXwpO6", "itemType": "OPTIONBOX", "language": "OxB-UxWv", "metadata": {"eK6n4LiF": "lPXYBPoX", "jGVp1XxV": "zOSpKHvX", "PsoSoRp3": "FyLsc3ll"}, "notifyUrl": "NqmXrumG", "omitNotification": true, "platform": "j5c3WtuZ", "price": 20, "recurringPaymentOrderNo": "6Fm4xV55", "region": "6zWW381M", "returnUrl": "UEzKyxYc", "sandbox": true, "sku": "x5bjwn5l", "subscriptionId": "n37YCG2N", "title": "EX6ACuhm"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateUserPaymentOrder \
    --namespace $AB_NAMESPACE \
    --userId 'twFCgNje' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 283 'CreateUserPaymentOrder' test.out

#- 284 RefundUserPaymentOrder
# body param: body
echo '{"description": "RRTCYXqy"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RefundUserPaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'au4t0fiO' \
    --userId 'LgeYEGEO' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 284 'RefundUserPaymentOrder' test.out

#- 285 GetUserPlatformAccountClosureHistories
$CLI_EXE \
    --sn platform \
    --op GetUserPlatformAccountClosureHistories \
    --namespace $AB_NAMESPACE \
    --userId 'jJ5egCTc' \
    > test.out 2>&1
eval_tap $? 285 'GetUserPlatformAccountClosureHistories' test.out

#- 286 ApplyUserRedemption
# body param: body
echo '{"code": "h8QByLGN", "orderNo": "CtdsTm3p"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ApplyUserRedemption \
    --namespace $AB_NAMESPACE \
    --userId 'anqRYLL0' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 286 'ApplyUserRedemption' test.out

#- 287 DoRevocation
# body param: body
echo '{"meta": {"7e4jiTg8": {}, "ESuBL0sC": {}, "FdN11O8d": {}}, "reason": "Diwdo7M9", "revokeEntries": [{"currency": {"balanceOrigin": "GooglePlay", "currencyCode": "uPtPqvPE", "namespace": "yAUIeRSa"}, "entitlement": {"entitlementId": "ANgFYfjg"}, "item": {"entitlementOrigin": "Playstation", "itemIdentity": "M7r3CY7p", "itemIdentityType": "ITEM_ID", "origin": "Epic"}, "quantity": 18, "type": "ITEM"}, {"currency": {"balanceOrigin": "Oculus", "currencyCode": "IZWjwjJ0", "namespace": "F9lKLGau"}, "entitlement": {"entitlementId": "SV4sIcKT"}, "item": {"entitlementOrigin": "IOS", "itemIdentity": "hkal54wQ", "itemIdentityType": "ITEM_SKU", "origin": "Twitch"}, "quantity": 12, "type": "ITEM"}, {"currency": {"balanceOrigin": "Epic", "currencyCode": "9HQjjzpF", "namespace": "ROkqnp90"}, "entitlement": {"entitlementId": "eEqfyPqU"}, "item": {"entitlementOrigin": "Oculus", "itemIdentity": "0s47Pwi0", "itemIdentityType": "ITEM_ID", "origin": "GooglePlay"}, "quantity": 75, "type": "CURRENCY"}], "source": "ORDER", "transactionId": "DwZWh9u9"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op DoRevocation \
    --namespace $AB_NAMESPACE \
    --userId 'kRcBSVYW' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 287 'DoRevocation' test.out

#- 288 RegisterXblSessions
# body param: body
echo '{"gameSessionId": "bs3IaRbv", "payload": {"LbDIpUPP": {}, "A9Owwmpg": {}, "N9GUP9R2": {}}, "scid": "PGpgVSye", "sessionTemplateName": "g1b71Q3u"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RegisterXblSessions \
    --namespace $AB_NAMESPACE \
    --userId 'kQ58LYQj' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 288 'RegisterXblSessions' test.out

#- 289 QueryUserSubscriptions
$CLI_EXE \
    --sn platform \
    --op QueryUserSubscriptions \
    --namespace $AB_NAMESPACE \
    --userId 'bfycbnsn' \
    --chargeStatus 'CHARGE_FAILED' \
    --itemId '4hMG22fY' \
    --limit '26' \
    --offset '33' \
    --sku 'aZ1gEnpF' \
    --status 'EXPIRED' \
    --subscribedBy 'USER' \
    > test.out 2>&1
eval_tap $? 289 'QueryUserSubscriptions' test.out

#- 290 GetUserSubscriptionActivities
$CLI_EXE \
    --sn platform \
    --op GetUserSubscriptionActivities \
    --namespace $AB_NAMESPACE \
    --userId 'Q4MIuhXy' \
    --excludeSystem 'true' \
    --limit '81' \
    --offset '27' \
    --subscriptionId 'ydyRMDIF' \
    > test.out 2>&1
eval_tap $? 290 'GetUserSubscriptionActivities' test.out

#- 291 PlatformSubscribeSubscription
# body param: body
echo '{"grantDays": 59, "itemId": "BBfLItz4", "language": "tddixVV6", "reason": "YpsejnZq", "region": "r4Pv0E9B", "source": "enpCw0Wy"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PlatformSubscribeSubscription \
    --namespace $AB_NAMESPACE \
    --userId '2kTGdbWB' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 291 'PlatformSubscribeSubscription' test.out

#- 292 CheckUserSubscriptionSubscribableByItemId
$CLI_EXE \
    --sn platform \
    --op CheckUserSubscriptionSubscribableByItemId \
    --namespace $AB_NAMESPACE \
    --userId '0gaDyaJX' \
    --itemId 'pxQ7l4qT' \
    > test.out 2>&1
eval_tap $? 292 'CheckUserSubscriptionSubscribableByItemId' test.out

#- 293 GetUserSubscription
$CLI_EXE \
    --sn platform \
    --op GetUserSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId '20VIPyB8' \
    --userId 'u83BLVMq' \
    > test.out 2>&1
eval_tap $? 293 'GetUserSubscription' test.out

#- 294 DeleteUserSubscription
$CLI_EXE \
    --sn platform \
    --op DeleteUserSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'y7m9HqLm' \
    --userId 'YcDZDvIB' \
    > test.out 2>&1
eval_tap $? 294 'DeleteUserSubscription' test.out

#- 295 CancelSubscription
# body param: body
echo '{"immediate": true, "reason": "Qv6oRgZ4"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CancelSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'SLg6u39S' \
    --userId 'wMgp2H40' \
    --force 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 295 'CancelSubscription' test.out

#- 296 GrantDaysToSubscription
# body param: body
echo '{"grantDays": 8, "reason": "Bj3iOsmV"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op GrantDaysToSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId '6LOSvl3q' \
    --userId 'CUQ5MsUK' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 296 'GrantDaysToSubscription' test.out

#- 297 GetUserSubscriptionBillingHistories
$CLI_EXE \
    --sn platform \
    --op GetUserSubscriptionBillingHistories \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'NZLDjhN1' \
    --userId 'EHBqGaoO' \
    --excludeFree 'false' \
    --limit '27' \
    --offset '32' \
    > test.out 2>&1
eval_tap $? 297 'GetUserSubscriptionBillingHistories' test.out

#- 298 ProcessUserSubscriptionNotification
# body param: body
echo '{"additionalData": {"cardSummary": "zIJU1cxB"}, "authorisedTime": "1974-08-13T00:00:00Z", "chargebackReversedTime": "1999-08-21T00:00:00Z", "chargebackTime": "1971-03-15T00:00:00Z", "chargedTime": "1979-08-15T00:00:00Z", "createdTime": "1977-11-20T00:00:00Z", "currency": {"currencyCode": "1XqFELps", "currencySymbol": "Ip0blQ9W", "currencyType": "VIRTUAL", "decimals": 80, "namespace": "lcwloa8C"}, "customParameters": {"qTWBdt9M": {}, "JYJM08bX": {}, "oKYb4wTc": {}}, "extOrderNo": "8nKza6po", "extTxId": "QSiIC6o0", "extUserId": "hOzQ5NKt", "issuedAt": "1999-09-14T00:00:00Z", "metadata": {"U7gecAdV": "WH0JcDq3", "J4i8jzos": "4ooNjv7N", "FGwNXyCH": "4jIjCgEU"}, "namespace": "2lSORqrF", "nonceStr": "B3vXrdI0", "paymentData": {"discountAmount": 64, "discountCode": "Dn5d3aMQ", "subtotalPrice": 100, "tax": 81, "totalPrice": 67}, "paymentMethod": "1G0OxkuL", "paymentMethodFee": 5, "paymentOrderNo": "ruDQIFK1", "paymentProvider": "XSOLLA", "paymentProviderFee": 85, "paymentStationUrl": "RXvH5Wdf", "price": 15, "refundedTime": "1995-01-04T00:00:00Z", "salesTax": 71, "sandbox": false, "sku": "dprrB2Am", "status": "REFUNDED", "statusReason": "AMqC8p2Y", "subscriptionId": "Jj7ThfvR", "subtotalPrice": 59, "targetNamespace": "OmRlxm5x", "targetUserId": "7s3nXqyy", "tax": 81, "totalPrice": 15, "totalTax": 76, "txEndTime": "1998-06-24T00:00:00Z", "type": "3YhRisXb", "userId": "YCVHvfzt", "vat": 7}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ProcessUserSubscriptionNotification \
    --namespace $AB_NAMESPACE \
    --subscriptionId '7ExkoHLM' \
    --userId 'VSYAPUZB' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 298 'ProcessUserSubscriptionNotification' test.out

#- 299 AcquireUserTicket
# body param: body
echo '{"count": 61, "orderNo": "9qlLfVFz"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op AcquireUserTicket \
    --boothName 'wPmC1z87' \
    --namespace $AB_NAMESPACE \
    --userId '1JBpE9Ji' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 299 'AcquireUserTicket' test.out

#- 300 QueryUserCurrencyWallets
$CLI_EXE \
    --sn platform \
    --op QueryUserCurrencyWallets \
    --namespace $AB_NAMESPACE \
    --userId 'qTQRhUyX' \
    > test.out 2>&1
eval_tap $? 300 'QueryUserCurrencyWallets' test.out

#- 301 DebitUserWalletByCurrencyCode
# body param: body
echo '{"allowOverdraft": true, "amount": 31, "balanceOrigin": "System", "balanceSource": "TRADE", "metadata": {"p1y2wgwK": {}, "gpXa7x1a": {}, "H8bZGsvH": {}}, "reason": "4gp7FNzj"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op DebitUserWalletByCurrencyCode \
    --currencyCode 'i5GEAzBa' \
    --namespace $AB_NAMESPACE \
    --userId 'oIWSHHk3' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 301 'DebitUserWalletByCurrencyCode' test.out

#- 302 ListUserCurrencyTransactions
$CLI_EXE \
    --sn platform \
    --op ListUserCurrencyTransactions \
    --currencyCode 'aKt5DhUP' \
    --namespace $AB_NAMESPACE \
    --userId 'SkQ9SYZR' \
    --limit '89' \
    --offset '43' \
    > test.out 2>&1
eval_tap $? 302 'ListUserCurrencyTransactions' test.out

#- 303 CheckBalance
# body param: request
echo '{"amount": 62, "debitBalanceSource": "ORDER_REVOCATION", "metadata": {"cKQZtlRL": {}, "rh9xxWQo": {}, "1OpNqIO3": {}}, "reason": "qXwuOiYu", "walletPlatform": "Xbox"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CheckBalance \
    --currencyCode 'tKDf2NcC' \
    --namespace $AB_NAMESPACE \
    --userId 'KBhKeyu4' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 303 'CheckBalance' test.out

#- 304 CheckWallet
eval_tap 0 304 'CheckWallet # SKIP deprecated' test.out

#- 305 CreditUserWallet
# body param: body
echo '{"amount": 77, "expireAt": "1995-06-23T00:00:00Z", "metadata": {"tm3D2MsR": {}, "pN7XVlaB": {}, "EPxDcZ7s": {}}, "origin": "IOS", "reason": "TXoH78PC", "source": "CONSUME_ENTITLEMENT"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreditUserWallet \
    --currencyCode 'XkRgKtlR' \
    --namespace $AB_NAMESPACE \
    --userId 'InV3ZE98' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 305 'CreditUserWallet' test.out

#- 306 DebitByWalletPlatform
# body param: request
echo '{"amount": 39, "debitBalanceSource": "TRADE", "metadata": {"PK6sPSJu": {}, "jW3QtpmG": {}, "zvfh4UPl": {}}, "reason": "EUG9GaeQ", "walletPlatform": "Oculus"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op DebitByWalletPlatform \
    --currencyCode '8czkSLjf' \
    --namespace $AB_NAMESPACE \
    --userId 'PIeD130r' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 306 'DebitByWalletPlatform' test.out

#- 307 PayWithUserWallet
# body param: body
echo '{"amount": 68, "metadata": {"jOliNY6o": {}, "CJo1sM9Y": {}, "b3jQEK80": {}}, "walletPlatform": "Xbox"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PayWithUserWallet \
    --currencyCode 'fFUEKLU9' \
    --namespace $AB_NAMESPACE \
    --userId 'gWi23S8f' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 307 'PayWithUserWallet' test.out

#- 308 GetUserWallet
eval_tap 0 308 'GetUserWallet # SKIP deprecated' test.out

#- 309 DebitUserWallet
eval_tap 0 309 'DebitUserWallet # SKIP deprecated' test.out

#- 310 DisableUserWallet
eval_tap 0 310 'DisableUserWallet # SKIP deprecated' test.out

#- 311 EnableUserWallet
eval_tap 0 311 'EnableUserWallet # SKIP deprecated' test.out

#- 312 ListUserWalletTransactions
eval_tap 0 312 'ListUserWalletTransactions # SKIP deprecated' test.out

#- 313 ListViews
$CLI_EXE \
    --sn platform \
    --op ListViews \
    --namespace $AB_NAMESPACE \
    --storeId 'IfgSeJ28' \
    > test.out 2>&1
eval_tap $? 313 'ListViews' test.out

#- 314 CreateView
# body param: body
echo '{"displayOrder": 17, "localizations": {"NPZ5bLsz": {"description": "1C0E4n2E", "localExt": {"Bx0uIfMn": {}, "ykvNqyqI": {}, "vckotaZT": {}}, "longDescription": "xqLTYMWo", "title": "35KXwCef"}, "v8h1ghWD": {"description": "TSPhgxe2", "localExt": {"0ghw8Mo0": {}, "XripUiyy": {}, "esNsfUjm": {}}, "longDescription": "C2vBOGtZ", "title": "wcUDEKtl"}, "IcQNhNPx": {"description": "DWJjCPyx", "localExt": {"F91EMixB": {}, "PGhZ21oU": {}, "FuzmBPnx": {}}, "longDescription": "wMFvp0Oh", "title": "QL97dJVa"}}, "name": "sxRbJC0l"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateView \
    --namespace $AB_NAMESPACE \
    --storeId '6NdMza1R' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 314 'CreateView' test.out

#- 315 GetView
$CLI_EXE \
    --sn platform \
    --op GetView \
    --namespace $AB_NAMESPACE \
    --viewId 'RO7IukS8' \
    --storeId 'h2qXlReR' \
    > test.out 2>&1
eval_tap $? 315 'GetView' test.out

#- 316 UpdateView
# body param: body
echo '{"displayOrder": 24, "localizations": {"OsypEX6O": {"description": "lPQP7ZSX", "localExt": {"GmnmFj2g": {}, "8nQuhg0i": {}, "qWRMDdd4": {}}, "longDescription": "UFiw5yJC", "title": "36qptbXt"}, "mJ6Bt2zH": {"description": "0GDYj1Wt", "localExt": {"ZLuJOQRU": {}, "FsukXk3z": {}, "owKZBqvU": {}}, "longDescription": "Gh8u7pph", "title": "8BUU73ty"}, "92GfHqq8": {"description": "VRy3mkvd", "localExt": {"Ikv5CEdG": {}, "KvaIPjtZ": {}, "rng5iHAc": {}}, "longDescription": "jVo3YLqs", "title": "BOgGa1ac"}}, "name": "dXnn6VDb"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateView \
    --namespace $AB_NAMESPACE \
    --viewId 'IAipztAT' \
    --storeId 'atCyvA10' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 316 'UpdateView' test.out

#- 317 DeleteView
$CLI_EXE \
    --sn platform \
    --op DeleteView \
    --namespace $AB_NAMESPACE \
    --viewId 'bKmmCMrG' \
    --storeId '9mtdyV2R' \
    > test.out 2>&1
eval_tap $? 317 'DeleteView' test.out

#- 318 QueryWallets
eval_tap 0 318 'QueryWallets # SKIP deprecated' test.out

#- 319 BulkCredit
# body param: body
echo '[{"creditRequest": {"amount": 24, "expireAt": "1981-06-26T00:00:00Z", "metadata": {"3TnQfeS0": {}, "gGZr2ixO": {}, "BGDmsjVP": {}}, "origin": "Oculus", "reason": "jk7jSElK", "source": "CONSUME_ENTITLEMENT"}, "currencyCode": "2O70duyZ", "userIds": ["5xbzcjHF", "23IanIHN", "w1sRCKby"]}, {"creditRequest": {"amount": 3, "expireAt": "1996-03-30T00:00:00Z", "metadata": {"93bitLFx": {}, "mYjR86E0": {}, "t1QtEUX8": {}}, "origin": "Oculus", "reason": "NDcABm9a", "source": "IAP_CHARGEBACK_REVERSED"}, "currencyCode": "gZXVbvf0", "userIds": ["dEMpv1uq", "IU9T3zr4", "X702QVo3"]}, {"creditRequest": {"amount": 14, "expireAt": "1984-11-15T00:00:00Z", "metadata": {"jVnwv5oF": {}, "nmS1D2un": {}, "aD2hD87e": {}}, "origin": "Xbox", "reason": "6U4WiZin", "source": "SELL_BACK"}, "currencyCode": "SPIQIJZw", "userIds": ["U0QwiN2w", "OzxlCFrZ", "GJM3jjY1"]}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op BulkCredit \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 319 'BulkCredit' test.out

#- 320 BulkDebit
# body param: body
echo '[{"currencyCode": "rBBQQpii", "request": {"allowOverdraft": true, "amount": 68, "balanceOrigin": "Playstation", "balanceSource": "OTHER", "metadata": {"DCHDU3DS": {}, "QfDO4Qff": {}, "6raFET5f": {}}, "reason": "Z13OWx6O"}, "userIds": ["zyZCCcVK", "O2mpdLFI", "nwD2rElZ"]}, {"currencyCode": "JFMYQ1WN", "request": {"allowOverdraft": false, "amount": 14, "balanceOrigin": "Epic", "balanceSource": "OTHER", "metadata": {"XDZrWTxl": {}, "l6HioZ8X": {}, "OjCEDiBY": {}}, "reason": "I3F9bdoa"}, "userIds": ["1pZEgNzJ", "AqgKbs6q", "DnS2K08p"]}, {"currencyCode": "IeXiMpT9", "request": {"allowOverdraft": true, "amount": 2, "balanceOrigin": "GooglePlay", "balanceSource": "DLC_REVOCATION", "metadata": {"vfYRw4Cn": {}, "Ax6cCQNx": {}, "D9SBGoAs": {}}, "reason": "pdMctsYG"}, "userIds": ["EIkAJ28T", "0Uz0DWRg", "WjCdKB6s"]}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op BulkDebit \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 320 'BulkDebit' test.out

#- 321 GetWallet
eval_tap 0 321 'GetWallet # SKIP deprecated' test.out

#- 322 SyncOrders
$CLI_EXE \
    --sn platform \
    --op SyncOrders \
    --nextEvaluatedKey 'Rucyv6TC' \
    --end 'iH1EsACf' \
    --start 'kMJh9tQc' \
    > test.out 2>&1
eval_tap $? 322 'SyncOrders' test.out

#- 323 TestAdyenConfig
# body param: body
echo '{"allowedPaymentMethods": ["T6VgDVkE", "qJ286GpU", "ucwdkE6G"], "apiKey": "97mKRsls", "authoriseAsCapture": false, "blockedPaymentMethods": ["GENAdGFM", "F6OkzjMD", "nYStG8zW"], "clientKey": "x64lCXys", "dropInSettings": "DhAyQZ0x", "liveEndpointUrlPrefix": "nCXSlsEY", "merchantAccount": "OztkAEh2", "notificationHmacKey": "8FLLyuPx", "notificationPassword": "PvpGmFs9", "notificationUsername": "MT94gbsS", "returnUrl": "axjcvGcR", "settings": "plfhgAoS"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestAdyenConfig \
    --sandbox 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 323 'TestAdyenConfig' test.out

#- 324 TestAliPayConfig
# body param: body
echo '{"appId": "Rn2x1F1U", "privateKey": "r8fPqJhG", "publicKey": "nawK2IIM", "returnUrl": "pP4PJxRY"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestAliPayConfig \
    --sandbox 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 324 'TestAliPayConfig' test.out

#- 325 TestCheckoutConfig
# body param: body
echo '{"publicKey": "0j8VG7FX", "secretKey": "FupaNHrO"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestCheckoutConfig \
    --sandbox 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 325 'TestCheckoutConfig' test.out

#- 326 DebugMatchedPaymentMerchantConfig
$CLI_EXE \
    --sn platform \
    --op DebugMatchedPaymentMerchantConfig \
    --namespace_ 'JZvVzhNd' \
    --region 'KM1ovPQm' \
    > test.out 2>&1
eval_tap $? 326 'DebugMatchedPaymentMerchantConfig' test.out

#- 327 TestNeonPayConfig
# body param: body
echo '{"apiKey": "gPJzK4H7", "webhookSecretKey": "yjyOHbjl"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestNeonPayConfig \
    --sandbox 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 327 'TestNeonPayConfig' test.out

#- 328 TestPayPalConfig
# body param: body
echo '{"clientID": "kfTTYlWQ", "clientSecret": "yFGeMejh", "returnUrl": "pH11Gv5I", "webHookId": "h8RJK57A"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestPayPalConfig \
    --sandbox 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 328 'TestPayPalConfig' test.out

#- 329 TestStripeConfig
# body param: body
echo '{"allowedPaymentMethodTypes": ["l00fS0dD", "ekSYXEe3", "832zhSJH"], "publishableKey": "sH9DkOwy", "secretKey": "yPr1wO1E", "webhookSecret": "NYeMjiDf"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestStripeConfig \
    --sandbox 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 329 'TestStripeConfig' test.out

#- 330 TestWxPayConfig
# body param: body
echo '{"appId": "TgDqRGj4", "key": "Jw0eRHiH", "mchid": "q5bMzNaF", "returnUrl": "K31e7Pry"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestWxPayConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 330 'TestWxPayConfig' test.out

#- 331 TestXsollaConfig
# body param: body
echo '{"apiKey": "DOwpiqJA", "flowCompletionUrl": "mvVdNqnj", "merchantId": 56, "projectId": 58, "projectSecretKey": "EsotCBMK"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestXsollaConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 331 'TestXsollaConfig' test.out

#- 332 GetPaymentMerchantConfig1
$CLI_EXE \
    --sn platform \
    --op GetPaymentMerchantConfig1 \
    --id 'rOBOW6pm' \
    > test.out 2>&1
eval_tap $? 332 'GetPaymentMerchantConfig1' test.out

#- 333 UpdateAdyenConfig
# body param: body
echo '{"allowedPaymentMethods": ["7Vr8RBXG", "LwXtraYo", "ywLC4gQa"], "apiKey": "1I7KtXdA", "authoriseAsCapture": true, "blockedPaymentMethods": ["OiHdyTKG", "17fgqkaG", "SUTfSc6p"], "clientKey": "P9PC06yA", "dropInSettings": "IZGLHzCu", "liveEndpointUrlPrefix": "jSYinkEn", "merchantAccount": "WCTDXjAR", "notificationHmacKey": "WHv18EMa", "notificationPassword": "DUVenacE", "notificationUsername": "tfkz1L9n", "returnUrl": "bl7sFe9h", "settings": "aQCPdbks"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateAdyenConfig \
    --id 'IJTK8TYI' \
    --sandbox 'false' \
    --validate 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 333 'UpdateAdyenConfig' test.out

#- 334 TestAdyenConfigById
$CLI_EXE \
    --sn platform \
    --op TestAdyenConfigById \
    --id 'j8FVq17C' \
    --sandbox 'false' \
    > test.out 2>&1
eval_tap $? 334 'TestAdyenConfigById' test.out

#- 335 UpdateAliPayConfig
# body param: body
echo '{"appId": "aRnleoNW", "privateKey": "2gEjB1Ra", "publicKey": "a69cfVjW", "returnUrl": "4B2as1On"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateAliPayConfig \
    --id '0VjLrSXg' \
    --sandbox 'true' \
    --validate 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 335 'UpdateAliPayConfig' test.out

#- 336 TestAliPayConfigById
$CLI_EXE \
    --sn platform \
    --op TestAliPayConfigById \
    --id '4SZidiUl' \
    --sandbox 'false' \
    > test.out 2>&1
eval_tap $? 336 'TestAliPayConfigById' test.out

#- 337 UpdateCheckoutConfig
# body param: body
echo '{"publicKey": "3bpFCPup", "secretKey": "ZOpC6NWi"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCheckoutConfig \
    --id 'HO8A4MqO' \
    --sandbox 'false' \
    --validate 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 337 'UpdateCheckoutConfig' test.out

#- 338 TestCheckoutConfigById
$CLI_EXE \
    --sn platform \
    --op TestCheckoutConfigById \
    --id 'Ablpdtue' \
    --sandbox 'true' \
    > test.out 2>&1
eval_tap $? 338 'TestCheckoutConfigById' test.out

#- 339 UpdateNeonPayConfig
# body param: body
echo '{"apiKey": "4lLh58Op", "webhookSecretKey": "adb9k4HD"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateNeonPayConfig \
    --id 'iU5BNnXo' \
    --sandbox 'true' \
    --validate 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 339 'UpdateNeonPayConfig' test.out

#- 340 TestNeonPayConfigById
$CLI_EXE \
    --sn platform \
    --op TestNeonPayConfigById \
    --id 'bJ4iIISp' \
    --sandbox 'false' \
    > test.out 2>&1
eval_tap $? 340 'TestNeonPayConfigById' test.out

#- 341 UpdatePayPalConfig
# body param: body
echo '{"clientID": "rBqQtpbn", "clientSecret": "eAbl0Pnv", "returnUrl": "6WJ9J7SY", "webHookId": "DYfGDaYb"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePayPalConfig \
    --id '1LmDdH05' \
    --sandbox 'true' \
    --validate 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 341 'UpdatePayPalConfig' test.out

#- 342 TestPayPalConfigById
$CLI_EXE \
    --sn platform \
    --op TestPayPalConfigById \
    --id 'ZsuiDvdr' \
    --sandbox 'false' \
    > test.out 2>&1
eval_tap $? 342 'TestPayPalConfigById' test.out

#- 343 UpdateStripeConfig
# body param: body
echo '{"allowedPaymentMethodTypes": ["jb8j2vQR", "wb1HR586", "r5S6Zrrz"], "publishableKey": "Y6J8OO4S", "secretKey": "M9UYPSWw", "webhookSecret": "qUZrZFbC"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateStripeConfig \
    --id 'UXGI8T7X' \
    --sandbox 'false' \
    --validate 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 343 'UpdateStripeConfig' test.out

#- 344 TestStripeConfigById
$CLI_EXE \
    --sn platform \
    --op TestStripeConfigById \
    --id 'kceUs2Sv' \
    --sandbox 'false' \
    > test.out 2>&1
eval_tap $? 344 'TestStripeConfigById' test.out

#- 345 UpdateWxPayConfig
# body param: body
echo '{"appId": "SbXgvv0c", "key": "kW0yRoTT", "mchid": "QRgiiKp9", "returnUrl": "zBIMnLKb"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateWxPayConfig \
    --id 'YnbqcPjc' \
    --validate 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 345 'UpdateWxPayConfig' test.out

#- 346 UpdateWxPayConfigCert
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UpdateWxPayConfigCert \
    --id 'cB8kXOAd' \
    --upload file $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 346 'UpdateWxPayConfigCert' test.out

#- 347 TestWxPayConfigById
$CLI_EXE \
    --sn platform \
    --op TestWxPayConfigById \
    --id 'ne9fFVOb' \
    > test.out 2>&1
eval_tap $? 347 'TestWxPayConfigById' test.out

#- 348 UpdateXsollaConfig
# body param: body
echo '{"apiKey": "omSV3nLh", "flowCompletionUrl": "LEvO4uAH", "merchantId": 84, "projectId": 37, "projectSecretKey": "FtFleLmZ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXsollaConfig \
    --id '2tj0hIHP' \
    --validate 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 348 'UpdateXsollaConfig' test.out

#- 349 TestXsollaConfigById
$CLI_EXE \
    --sn platform \
    --op TestXsollaConfigById \
    --id '9oQlG6Rq' \
    > test.out 2>&1
eval_tap $? 349 'TestXsollaConfigById' test.out

#- 350 UpdateXsollaUIConfig
# body param: body
echo '{"device": "DESKTOP", "showCloseButton": true, "size": "LARGE", "theme": "DEFAULT"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXsollaUIConfig \
    --id '4GsSEpjX' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 350 'UpdateXsollaUIConfig' test.out

#- 351 QueryPaymentProviderConfig
$CLI_EXE \
    --sn platform \
    --op QueryPaymentProviderConfig \
    --limit '14' \
    --namespace_ 'EvpupyGP' \
    --offset '84' \
    --region 'sEymCCYB' \
    > test.out 2>&1
eval_tap $? 351 'QueryPaymentProviderConfig' test.out

#- 352 CreatePaymentProviderConfig
# body param: body
echo '{"aggregate": "NEONPAY", "namespace": "Uw81zmJB", "region": "LUGDyRdi", "sandboxTaxJarApiToken": "6K1ofiyb", "specials": ["WXPAY", "ADYEN", "ADYEN"], "taxJarApiToken": "Ch9F79EV", "taxJarEnabled": false, "useGlobalTaxJarApiToken": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreatePaymentProviderConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 352 'CreatePaymentProviderConfig' test.out

#- 353 GetAggregatePaymentProviders
$CLI_EXE \
    --sn platform \
    --op GetAggregatePaymentProviders \
    > test.out 2>&1
eval_tap $? 353 'GetAggregatePaymentProviders' test.out

#- 354 DebugMatchedPaymentProviderConfig
$CLI_EXE \
    --sn platform \
    --op DebugMatchedPaymentProviderConfig \
    --namespace_ 'bhmxFrS5' \
    --region 'K15jRnjA' \
    > test.out 2>&1
eval_tap $? 354 'DebugMatchedPaymentProviderConfig' test.out

#- 355 GetSpecialPaymentProviders
$CLI_EXE \
    --sn platform \
    --op GetSpecialPaymentProviders \
    > test.out 2>&1
eval_tap $? 355 'GetSpecialPaymentProviders' test.out

#- 356 UpdatePaymentProviderConfig
# body param: body
echo '{"aggregate": "NEONPAY", "namespace": "WWWiEGbx", "region": "f2hE7rZK", "sandboxTaxJarApiToken": "WbxEFMA8", "specials": ["NEONPAY", "PAYPAL", "CHECKOUT"], "taxJarApiToken": "lVrWd7AT", "taxJarEnabled": false, "useGlobalTaxJarApiToken": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePaymentProviderConfig \
    --id 'eCTH9fgj' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 356 'UpdatePaymentProviderConfig' test.out

#- 357 DeletePaymentProviderConfig
$CLI_EXE \
    --sn platform \
    --op DeletePaymentProviderConfig \
    --id 'O2npM0hI' \
    > test.out 2>&1
eval_tap $? 357 'DeletePaymentProviderConfig' test.out

#- 358 GetPaymentTaxConfig
$CLI_EXE \
    --sn platform \
    --op GetPaymentTaxConfig \
    > test.out 2>&1
eval_tap $? 358 'GetPaymentTaxConfig' test.out

#- 359 UpdatePaymentTaxConfig
# body param: body
echo '{"sandboxTaxJarApiToken": "5MEHuWjn", "taxJarApiToken": "n50jUHLu", "taxJarEnabled": false, "taxJarProductCodesMapping": {"LiUKJxLV": "2OM4YxqB", "tcTzQqeW": "MerLVcbH", "AX8n5lp2": "ZCKJ348z"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePaymentTaxConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 359 'UpdatePaymentTaxConfig' test.out

#- 360 SyncPaymentOrders
$CLI_EXE \
    --sn platform \
    --op SyncPaymentOrders \
    --nextEvaluatedKey 'VelaXnY9' \
    --end 'C6PADcY2' \
    --start '4DKK0YUs' \
    > test.out 2>&1
eval_tap $? 360 'SyncPaymentOrders' test.out

#- 361 PublicGetRootCategories
$CLI_EXE \
    --sn platform \
    --op PublicGetRootCategories \
    --namespace $AB_NAMESPACE \
    --language '5KYgEsG7' \
    --storeId 'ymiabqc8' \
    > test.out 2>&1
eval_tap $? 361 'PublicGetRootCategories' test.out

#- 362 DownloadCategories
$CLI_EXE \
    --sn platform \
    --op DownloadCategories \
    --namespace $AB_NAMESPACE \
    --language 'YjUyZk3Q' \
    --storeId 'a9v5GAlq' \
    > test.out 2>&1
eval_tap $? 362 'DownloadCategories' test.out

#- 363 PublicGetCategory
$CLI_EXE \
    --sn platform \
    --op PublicGetCategory \
    --categoryPath 'dXEGdZK4' \
    --namespace $AB_NAMESPACE \
    --language 'q9amYwvC' \
    --storeId 'dNN1bPSU' \
    > test.out 2>&1
eval_tap $? 363 'PublicGetCategory' test.out

#- 364 PublicGetChildCategories
$CLI_EXE \
    --sn platform \
    --op PublicGetChildCategories \
    --categoryPath 'mi7d7jhT' \
    --namespace $AB_NAMESPACE \
    --language 'lMjz1U7U' \
    --storeId 'fBQjwVhT' \
    > test.out 2>&1
eval_tap $? 364 'PublicGetChildCategories' test.out

#- 365 PublicGetDescendantCategories
$CLI_EXE \
    --sn platform \
    --op PublicGetDescendantCategories \
    --categoryPath 'O1fydrWh' \
    --namespace $AB_NAMESPACE \
    --language 'cOA3yhmW' \
    --storeId 'QsvY6V7a' \
    > test.out 2>&1
eval_tap $? 365 'PublicGetDescendantCategories' test.out

#- 366 PublicListCurrencies
$CLI_EXE \
    --sn platform \
    --op PublicListCurrencies \
    --namespace $AB_NAMESPACE \
    --currencyType 'REAL' \
    > test.out 2>&1
eval_tap $? 366 'PublicListCurrencies' test.out

#- 367 GeDLCDurableRewardShortMap
$CLI_EXE \
    --sn platform \
    --op GeDLCDurableRewardShortMap \
    --namespace $AB_NAMESPACE \
    --dlcType 'EPICGAMES' \
    > test.out 2>&1
eval_tap $? 367 'GeDLCDurableRewardShortMap' test.out

#- 368 GetIAPItemMapping
$CLI_EXE \
    --sn platform \
    --op GetIAPItemMapping \
    --namespace $AB_NAMESPACE \
    --platform 'PLAYSTATION' \
    > test.out 2>&1
eval_tap $? 368 'GetIAPItemMapping' test.out

#- 369 PublicGetItemByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetItemByAppId \
    --namespace $AB_NAMESPACE \
    --language 'bOKWJDVa' \
    --region 'qXVvkHlM' \
    --storeId 'RL4VnROc' \
    --appId 'V6Mbbeye' \
    > test.out 2>&1
eval_tap $? 369 'PublicGetItemByAppId' test.out

#- 370 PublicQueryItems
$CLI_EXE \
    --sn platform \
    --op PublicQueryItems \
    --namespace $AB_NAMESPACE \
    --appType 'SOFTWARE' \
    --autoCalcEstimatedPrice 'true' \
    --baseAppId 'BDJHx2p7' \
    --categoryPath '2vnPbalh' \
    --features 'lprwHWUW' \
    --includeSubCategoryItem 'false' \
    --itemType 'LOOTBOX' \
    --language 'PCeTPVa0' \
    --limit '14' \
    --offset '63' \
    --region 'GPionnhS' \
    --sortBy '["displayOrder", "updatedAt", "createdAt:asc"]' \
    --storeId 'N673G8AP' \
    --tags '8RFebtvU' \
    > test.out 2>&1
eval_tap $? 370 'PublicQueryItems' test.out

#- 371 PublicGetItemBySku
$CLI_EXE \
    --sn platform \
    --op PublicGetItemBySku \
    --namespace $AB_NAMESPACE \
    --autoCalcEstimatedPrice 'false' \
    --language 'DHGnDJhr' \
    --region '9aHhnUZZ' \
    --storeId 'UEa48vZf' \
    --sku 'xXJCwTri' \
    > test.out 2>&1
eval_tap $? 371 'PublicGetItemBySku' test.out

#- 372 PublicGetEstimatedPrice
$CLI_EXE \
    --sn platform \
    --op PublicGetEstimatedPrice \
    --namespace $AB_NAMESPACE \
    --region 'ryAKH3JI' \
    --storeId 'Of5gXTVO' \
    --itemIds 'Md9elohM' \
    > test.out 2>&1
eval_tap $? 372 'PublicGetEstimatedPrice' test.out

#- 373 PublicBulkGetItems
$CLI_EXE \
    --sn platform \
    --op PublicBulkGetItems \
    --namespace $AB_NAMESPACE \
    --autoCalcEstimatedPrice 'false' \
    --language '8B1qaW9G' \
    --region 's2xWID97' \
    --storeId 'CWttN8Bn' \
    --itemIds 'CGZ3nblT' \
    > test.out 2>&1
eval_tap $? 373 'PublicBulkGetItems' test.out

#- 374 PublicValidateItemPurchaseCondition
# body param: body
echo '{"itemIds": ["cyL3XTwX", "hY9bPSgw", "50D7Ruv0"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicValidateItemPurchaseCondition \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 374 'PublicValidateItemPurchaseCondition' test.out

#- 375 PublicSearchItems
$CLI_EXE \
    --sn platform \
    --op PublicSearchItems \
    --namespace $AB_NAMESPACE \
    --autoCalcEstimatedPrice 'true' \
    --itemType 'BUNDLE' \
    --limit '58' \
    --offset '76' \
    --region '9vHh9r0V' \
    --storeId 'aiiqioVY' \
    --keyword '3U2uTOKF' \
    --language 'GoEOsgU6' \
    > test.out 2>&1
eval_tap $? 375 'PublicSearchItems' test.out

#- 376 PublicGetApp
$CLI_EXE \
    --sn platform \
    --op PublicGetApp \
    --itemId 'yc4f92tG' \
    --namespace $AB_NAMESPACE \
    --language 'hZJ6VoFX' \
    --region 'hHFQa9sL' \
    --storeId 'dPQ1zSg3' \
    > test.out 2>&1
eval_tap $? 376 'PublicGetApp' test.out

#- 377 PublicGetItemDynamicData
$CLI_EXE \
    --sn platform \
    --op PublicGetItemDynamicData \
    --itemId 'w3rWgGsu' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 377 'PublicGetItemDynamicData' test.out

#- 378 PublicGetItem
$CLI_EXE \
    --sn platform \
    --op PublicGetItem \
    --itemId 'kYJMZhQ5' \
    --namespace $AB_NAMESPACE \
    --autoCalcEstimatedPrice 'true' \
    --language 'GxSUOMIK' \
    --populateBundle 'false' \
    --region 'XMwnewZC' \
    --storeId 'uElf7tQ7' \
    > test.out 2>&1
eval_tap $? 378 'PublicGetItem' test.out

#- 379 GetPaymentCustomization
eval_tap 0 379 'GetPaymentCustomization # SKIP deprecated' test.out

#- 380 PublicGetPaymentUrl
# body param: body
echo '{"neonPayConfig": {"cancelUrl": "OpEHnvkE", "successUrl": "3s94AwA6"}, "paymentOrderNo": "XTfWc4T0", "paymentProvider": "XSOLLA", "returnUrl": "sR6ukWCE", "ui": "uBSBTYXn", "zipCode": "i9HafIi2"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicGetPaymentUrl \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 380 'PublicGetPaymentUrl' test.out

#- 381 PublicGetPaymentMethods
$CLI_EXE \
    --sn platform \
    --op PublicGetPaymentMethods \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo '1Qfr9XHj' \
    > test.out 2>&1
eval_tap $? 381 'PublicGetPaymentMethods' test.out

#- 382 PublicGetUnpaidPaymentOrder
$CLI_EXE \
    --sn platform \
    --op PublicGetUnpaidPaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'YCKvc40y' \
    > test.out 2>&1
eval_tap $? 382 'PublicGetUnpaidPaymentOrder' test.out

#- 383 Pay
# body param: body
echo '{"token": "aoTZTqt9"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op Pay \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo '03m6aqRX' \
    --paymentProvider 'CHECKOUT' \
    --zipCode 'sX3efZ3R' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 383 'Pay' test.out

#- 384 PublicCheckPaymentOrderPaidStatus
$CLI_EXE \
    --sn platform \
    --op PublicCheckPaymentOrderPaidStatus \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'U0Lemwwm' \
    > test.out 2>&1
eval_tap $? 384 'PublicCheckPaymentOrderPaidStatus' test.out

#- 385 GetPaymentPublicConfig
$CLI_EXE \
    --sn platform \
    --op GetPaymentPublicConfig \
    --namespace $AB_NAMESPACE \
    --sandbox 'false' \
    --paymentProvider 'WXPAY' \
    --region 'Ia6D2KTI' \
    > test.out 2>&1
eval_tap $? 385 'GetPaymentPublicConfig' test.out

#- 386 PublicGetQRCode
$CLI_EXE \
    --sn platform \
    --op PublicGetQRCode \
    --namespace $AB_NAMESPACE \
    --code 'P9JNz80s' \
    > test.out 2>&1
eval_tap $? 386 'PublicGetQRCode' test.out

#- 387 PublicNormalizePaymentReturnUrl
$CLI_EXE \
    --sn platform \
    --op PublicNormalizePaymentReturnUrl \
    --namespace $AB_NAMESPACE \
    --payerID '0ZnqURQf' \
    --foreinginvoice 'nzlD8tID' \
    --invoiceId 'OlgzQABC' \
    --payload 'PRSajSNT' \
    --redirectResult '0Gv4D2zF' \
    --resultCode 'mHdzUHYZ' \
    --sessionId 'FgZlK3Xg' \
    --status 'FtfVjeQx' \
    --token 'ZxXHXfGV' \
    --type '9RM29JuR' \
    --userId 'cmYxeLDo' \
    --orderNo 'xoVianKL' \
    --paymentOrderNo 'asyiB1uI' \
    --paymentProvider 'NEONPAY' \
    --returnUrl 'xbTmslDE' \
    > test.out 2>&1
eval_tap $? 387 'PublicNormalizePaymentReturnUrl' test.out

#- 388 GetPaymentTaxValue
$CLI_EXE \
    --sn platform \
    --op GetPaymentTaxValue \
    --namespace $AB_NAMESPACE \
    --zipCode 'tC7kgLEX' \
    --paymentOrderNo '4oIQErjj' \
    --paymentProvider 'CHECKOUT' \
    > test.out 2>&1
eval_tap $? 388 'GetPaymentTaxValue' test.out

#- 389 GetRewardByCode
$CLI_EXE \
    --sn platform \
    --op GetRewardByCode \
    --namespace $AB_NAMESPACE \
    --rewardCode 'f44aqxQd' \
    > test.out 2>&1
eval_tap $? 389 'GetRewardByCode' test.out

#- 390 QueryRewards1
$CLI_EXE \
    --sn platform \
    --op QueryRewards1 \
    --namespace $AB_NAMESPACE \
    --eventTopic '22xFZT1y' \
    --limit '32' \
    --offset '88' \
    --sortBy '["rewardCode:asc", "namespace"]' \
    > test.out 2>&1
eval_tap $? 390 'QueryRewards1' test.out

#- 391 GetReward1
$CLI_EXE \
    --sn platform \
    --op GetReward1 \
    --namespace $AB_NAMESPACE \
    --rewardId 'vcWg0spM' \
    > test.out 2>&1
eval_tap $? 391 'GetReward1' test.out

#- 392 PublicListStores
$CLI_EXE \
    --sn platform \
    --op PublicListStores \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 392 'PublicListStores' test.out

#- 393 PublicExistsAnyMyActiveEntitlement
$CLI_EXE \
    --sn platform \
    --op PublicExistsAnyMyActiveEntitlement \
    --namespace $AB_NAMESPACE \
    --appIds '["QyuTTPdV", "Ot8WozkO", "VbbcYnb3"]' \
    --itemIds '["GuBqszBy", "0RAUuoJP", "taI9yEDi"]' \
    --skus '["AaO92RWR", "kKWI2OkP", "JB9XCyxE"]' \
    > test.out 2>&1
eval_tap $? 393 'PublicExistsAnyMyActiveEntitlement' test.out

#- 394 PublicGetMyAppEntitlementOwnershipByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetMyAppEntitlementOwnershipByAppId \
    --namespace $AB_NAMESPACE \
    --appId '2V7bKcXL' \
    > test.out 2>&1
eval_tap $? 394 'PublicGetMyAppEntitlementOwnershipByAppId' test.out

#- 395 PublicGetMyEntitlementOwnershipByItemId
$CLI_EXE \
    --sn platform \
    --op PublicGetMyEntitlementOwnershipByItemId \
    --namespace $AB_NAMESPACE \
    --entitlementClazz 'SUBSCRIPTION' \
    --itemId 'C2Tu1kzn' \
    > test.out 2>&1
eval_tap $? 395 'PublicGetMyEntitlementOwnershipByItemId' test.out

#- 396 PublicGetMyEntitlementOwnershipBySku
$CLI_EXE \
    --sn platform \
    --op PublicGetMyEntitlementOwnershipBySku \
    --namespace $AB_NAMESPACE \
    --entitlementClazz 'CODE' \
    --sku '6FzZ8TwD' \
    > test.out 2>&1
eval_tap $? 396 'PublicGetMyEntitlementOwnershipBySku' test.out

#- 397 PublicGetEntitlementOwnershipToken
$CLI_EXE \
    --sn platform \
    --op PublicGetEntitlementOwnershipToken \
    --namespace $AB_NAMESPACE \
    --appIds '["XclavrrY", "8MaofR7n", "NyCq5Si4"]' \
    --itemIds '["sA0Ekmxq", "G9UqnD85", "pRIesdaA"]' \
    --skus '["yynwcjPp", "54qVeGTB", "E6ntxy6V"]' \
    > test.out 2>&1
eval_tap $? 397 'PublicGetEntitlementOwnershipToken' test.out

#- 398 SyncTwitchDropsEntitlement
# body param: body
echo '{"gameId": "DnduJZ6T", "language": "pwz", "region": "GJWlvtq6"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncTwitchDropsEntitlement \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 398 'SyncTwitchDropsEntitlement' test.out

#- 399 PublicGetMyWallet
$CLI_EXE \
    --sn platform \
    --op PublicGetMyWallet \
    --currencyCode 'XvPDamKO' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 399 'PublicGetMyWallet' test.out

#- 400 SyncEpicGameDLC
# body param: body
echo '{"epicGamesJwtToken": "z2FQ5TL1"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncEpicGameDLC \
    --namespace $AB_NAMESPACE \
    --userId 'qlaMsj4p' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 400 'SyncEpicGameDLC' test.out

#- 401 SyncOculusDLC
$CLI_EXE \
    --sn platform \
    --op SyncOculusDLC \
    --namespace $AB_NAMESPACE \
    --userId 'hZJDRF8E' \
    > test.out 2>&1
eval_tap $? 401 'SyncOculusDLC' test.out

#- 402 PublicSyncPsnDlcInventory
# body param: body
echo '{"serviceLabel": 18}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicSyncPsnDlcInventory \
    --namespace $AB_NAMESPACE \
    --userId 'PveYRgjY' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 402 'PublicSyncPsnDlcInventory' test.out

#- 403 PublicSyncPsnDlcInventoryWithMultipleServiceLabels
# body param: body
echo '{"serviceLabels": [49, 11, 13]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicSyncPsnDlcInventoryWithMultipleServiceLabels \
    --namespace $AB_NAMESPACE \
    --userId 'yZPCSGv4' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 403 'PublicSyncPsnDlcInventoryWithMultipleServiceLabels' test.out

#- 404 SyncSteamDLC
# body param: body
echo '{"appId": "lrX0roNj", "steamId": "08Utx3Xi"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncSteamDLC \
    --namespace $AB_NAMESPACE \
    --userId '2fvVCt0I' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 404 'SyncSteamDLC' test.out

#- 405 SyncXboxDLC
# body param: body
echo '{"xstsToken": "Q975yxXh"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncXboxDLC \
    --namespace $AB_NAMESPACE \
    --userId 'psFRJoSv' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 405 'SyncXboxDLC' test.out

#- 406 PublicQueryUserEntitlements
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserEntitlements \
    --namespace $AB_NAMESPACE \
    --userId 'fYd2WmmQ' \
    --appType 'DLC' \
    --entitlementClazz 'APP' \
    --entitlementName 'zOzyd6WI' \
    --features '["9fuJj5rm", "UocHn1x3", "F0mHFPMj"]' \
    --itemId '["RKOracJE", "0ilgFco6", "hhj8jj1D"]' \
    --limit '76' \
    --offset '8' \
    > test.out 2>&1
eval_tap $? 406 'PublicQueryUserEntitlements' test.out

#- 407 PublicGetUserAppEntitlementByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetUserAppEntitlementByAppId \
    --namespace $AB_NAMESPACE \
    --userId 'w6miPkYq' \
    --appId 'LFd2QNuG' \
    > test.out 2>&1
eval_tap $? 407 'PublicGetUserAppEntitlementByAppId' test.out

#- 408 PublicQueryUserEntitlementsByAppType
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserEntitlementsByAppType \
    --namespace $AB_NAMESPACE \
    --userId 'vXgJjUYM' \
    --limit '55' \
    --offset '5' \
    --appType 'DLC' \
    > test.out 2>&1
eval_tap $? 408 'PublicQueryUserEntitlementsByAppType' test.out

#- 409 PublicGetUserEntitlementsByIds
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementsByIds \
    --namespace $AB_NAMESPACE \
    --userId 'yqf2ep7n' \
    --availablePlatformOnly 'false' \
    --ids '["iVeToLia", "l7mObgAw", "ze0WRX8A"]' \
    > test.out 2>&1
eval_tap $? 409 'PublicGetUserEntitlementsByIds' test.out

#- 410 PublicGetUserEntitlementByItemId
eval_tap 0 410 'PublicGetUserEntitlementByItemId # SKIP deprecated' test.out

#- 411 PublicGetUserEntitlementBySku
eval_tap 0 411 'PublicGetUserEntitlementBySku # SKIP deprecated' test.out

#- 412 PublicUserEntitlementHistory
$CLI_EXE \
    --sn platform \
    --op PublicUserEntitlementHistory \
    --namespace $AB_NAMESPACE \
    --userId 'bytgaMHx' \
    --endDate 'xMOrDSpm' \
    --entitlementClazz 'OPTIONBOX' \
    --limit '31' \
    --offset '42' \
    --startDate '5QBmvmBa' \
    > test.out 2>&1
eval_tap $? 412 'PublicUserEntitlementHistory' test.out

#- 413 PublicExistsAnyUserActiveEntitlement
$CLI_EXE \
    --sn platform \
    --op PublicExistsAnyUserActiveEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'nWpqoNG4' \
    --appIds '["KwV4eagC", "vYcb0gbH", "Hw3x2N6w"]' \
    --itemIds '["9PgzoV2f", "D1g7oMMY", "L1mdjl8c"]' \
    --skus '["INA6IpyP", "AjFHdGWO", "rVqVm5BP"]' \
    > test.out 2>&1
eval_tap $? 413 'PublicExistsAnyUserActiveEntitlement' test.out

#- 414 PublicGetUserAppEntitlementOwnershipByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetUserAppEntitlementOwnershipByAppId \
    --namespace $AB_NAMESPACE \
    --userId 'vtVNVK9x' \
    --appId 'c2qXMSkm' \
    > test.out 2>&1
eval_tap $? 414 'PublicGetUserAppEntitlementOwnershipByAppId' test.out

#- 415 PublicGetUserEntitlementOwnershipByItemId
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementOwnershipByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'RbXHbV75' \
    --entitlementClazz 'ENTITLEMENT' \
    --itemId 'fqNPxMQI' \
    > test.out 2>&1
eval_tap $? 415 'PublicGetUserEntitlementOwnershipByItemId' test.out

#- 416 PublicGetUserEntitlementOwnershipByItemIds
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementOwnershipByItemIds \
    --namespace $AB_NAMESPACE \
    --userId 'pbwtyzbg' \
    --ids '["2kpkm0np", "dYDfOYDz", "sWdm5lEV"]' \
    > test.out 2>&1
eval_tap $? 416 'PublicGetUserEntitlementOwnershipByItemIds' test.out

#- 417 PublicGetUserEntitlementOwnershipBySku
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementOwnershipBySku \
    --namespace $AB_NAMESPACE \
    --userId '6QhXv3my' \
    --entitlementClazz 'CODE' \
    --sku 'ELnHQ0hS' \
    > test.out 2>&1
eval_tap $? 417 'PublicGetUserEntitlementOwnershipBySku' test.out

#- 418 PublicGetUserEntitlement
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlement \
    --entitlementId '8obEOucP' \
    --namespace $AB_NAMESPACE \
    --userId '2vO3TaZx' \
    > test.out 2>&1
eval_tap $? 418 'PublicGetUserEntitlement' test.out

#- 419 PublicConsumeUserEntitlement
# body param: body
echo '{"options": ["guuNlPzp", "gPRBa7dD", "d6FOK6cw"], "requestId": "JtksHeb9", "useCount": 19}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicConsumeUserEntitlement \
    --entitlementId 'BJ2oy8g2' \
    --namespace $AB_NAMESPACE \
    --userId 'NqyZQTOr' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 419 'PublicConsumeUserEntitlement' test.out

#- 420 PublicSellUserEntitlement
# body param: body
echo '{"requestId": "e5O82pe2", "useCount": 27}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicSellUserEntitlement \
    --entitlementId 'snCqqdBi' \
    --namespace $AB_NAMESPACE \
    --userId 'lgt2aqii' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 420 'PublicSellUserEntitlement' test.out

#- 421 PublicSplitUserEntitlement
# body param: body
echo '{"useCount": 98}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicSplitUserEntitlement \
    --entitlementId 'XzwnGJSG' \
    --namespace $AB_NAMESPACE \
    --userId 'PqPORoJx' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 421 'PublicSplitUserEntitlement' test.out

#- 422 PublicTransferUserEntitlement
# body param: body
echo '{"entitlementId": "n5Iu7uya", "useCount": 52}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicTransferUserEntitlement \
    --entitlementId 'LoOpbXS6' \
    --namespace $AB_NAMESPACE \
    --userId 'UqbQQ8Nb' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 422 'PublicTransferUserEntitlement' test.out

#- 423 PublicRedeemCode
# body param: body
echo '{"code": "4mrxytr6", "language": "Wd_GabT", "region": "Ws1JR7jC"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicRedeemCode \
    --namespace $AB_NAMESPACE \
    --userId 'O4OXr4EV' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 423 'PublicRedeemCode' test.out

#- 424 PublicFulfillAppleIAPItem
# body param: body
echo '{"excludeOldTransactions": false, "language": "gTc_WXiF", "productId": "Ws1V9tSN", "receiptData": "Vb4fPVxZ", "region": "ktOStyrl", "transactionId": "hhsk1yAI"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicFulfillAppleIAPItem \
    --namespace $AB_NAMESPACE \
    --userId '5U9aKmgA' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 424 'PublicFulfillAppleIAPItem' test.out

#- 425 SyncEpicGamesInventory
# body param: body
echo '{"epicGamesJwtToken": "9EG40VPx"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncEpicGamesInventory \
    --namespace $AB_NAMESPACE \
    --userId 'qyAj7g47' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 425 'SyncEpicGamesInventory' test.out

#- 426 PublicFulfillGoogleIAPItem
# body param: body
echo '{"autoAck": false, "language": "cTv-kM", "orderId": "Y6SOwcCn", "packageName": "MX58Dlua", "productId": "5JaR8u3q", "purchaseTime": 95, "purchaseToken": "29mLWjtj", "region": "C2dyDp9Q"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicFulfillGoogleIAPItem \
    --namespace $AB_NAMESPACE \
    --userId 'RbXuDJdy' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 426 'PublicFulfillGoogleIAPItem' test.out

#- 427 SyncOculusConsumableEntitlements
$CLI_EXE \
    --sn platform \
    --op SyncOculusConsumableEntitlements \
    --namespace $AB_NAMESPACE \
    --userId '0yy4Nfdd' \
    > test.out 2>&1
eval_tap $? 427 'SyncOculusConsumableEntitlements' test.out

#- 428 PublicReconcilePlayStationStore
# body param: body
echo '{"currencyCode": "c7vAyVk6", "price": 0.5413201571010665, "productId": "EwTaDqtq", "serviceLabel": 92}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicReconcilePlayStationStore \
    --namespace $AB_NAMESPACE \
    --userId 'KJMTLJCj' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 428 'PublicReconcilePlayStationStore' test.out

#- 429 PublicReconcilePlayStationStoreWithMultipleServiceLabels
# body param: body
echo '{"currencyCode": "gV8D9Ulq", "price": 0.2596623363919406, "productId": "QG09ag3D", "serviceLabels": [16, 82, 51]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicReconcilePlayStationStoreWithMultipleServiceLabels \
    --namespace $AB_NAMESPACE \
    --userId 'tkzixPMJ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 429 'PublicReconcilePlayStationStoreWithMultipleServiceLabels' test.out

#- 430 SyncSteamInventory
# body param: body
echo '{"appId": "6GkXRa3M", "currencyCode": "Szn4pucz", "language": "yHti-tuxQ", "price": 0.5034799270694916, "productId": "leSmZ7Uu", "region": "CwrGTiEr", "steamId": "GieT8SFp"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncSteamInventory \
    --namespace $AB_NAMESPACE \
    --userId 'KjQIjAv9' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 430 'SyncSteamInventory' test.out

#- 431 SyncTwitchDropsEntitlement1
# body param: body
echo '{"gameId": "c48rnzE5", "language": "QfV-ivGl-260", "region": "XGEcn6fq"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncTwitchDropsEntitlement1 \
    --namespace $AB_NAMESPACE \
    --userId 'gTq0jcqx' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 431 'SyncTwitchDropsEntitlement1' test.out

#- 432 SyncXboxInventory
# body param: body
echo '{"currencyCode": "sy3fcxhC", "price": 0.8514300582386386, "productId": "yrMB27AM", "xstsToken": "XBddbCt6"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncXboxInventory \
    --namespace $AB_NAMESPACE \
    --userId 'CJysJLf7' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 432 'SyncXboxInventory' test.out

#- 433 PublicQueryUserOrders
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserOrders \
    --namespace $AB_NAMESPACE \
    --userId 'biT0KWCw' \
    --discounted 'false' \
    --itemId 'r6Adj0qw' \
    --limit '38' \
    --offset '33' \
    --status 'DELETED' \
    > test.out 2>&1
eval_tap $? 433 'PublicQueryUserOrders' test.out

#- 434 PublicCreateUserOrder
# body param: body
echo '{"currencyCode": "sqmAVXEE", "discountCodes": ["tSI54KVu", "U8miQlW8", "vgOSdzBF"], "discountedPrice": 33, "ext": {"rpRb3cR3": {}, "vR0LPdad": {}, "wNZ64ZxF": {}}, "itemId": "uE7aYnNC", "language": "RGp-898", "price": 58, "quantity": 7, "region": "o3RB2mfL", "returnUrl": "XI7edOfL", "sectionId": "NxwpympE"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicCreateUserOrder \
    --namespace $AB_NAMESPACE \
    --userId 'M1pyeavO' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 434 'PublicCreateUserOrder' test.out

#- 435 PublicPreviewOrderPrice
# body param: body
echo '{"currencyCode": "iTUdKZNa", "discountCodes": ["D5yqme5P", "shDQdCxB", "sQ264BvP"], "discountedPrice": 3, "itemId": "N675rKVs", "price": 37, "quantity": 66}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicPreviewOrderPrice \
    --namespace $AB_NAMESPACE \
    --userId 'Vd3h5fRJ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 435 'PublicPreviewOrderPrice' test.out

#- 436 PublicGetUserOrder
$CLI_EXE \
    --sn platform \
    --op PublicGetUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo '2EjJpRn2' \
    --userId 'MJAYMKJn' \
    > test.out 2>&1
eval_tap $? 436 'PublicGetUserOrder' test.out

#- 437 PublicCancelUserOrder
$CLI_EXE \
    --sn platform \
    --op PublicCancelUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'RUfyVlGR' \
    --userId 'b9yPmQ9t' \
    > test.out 2>&1
eval_tap $? 437 'PublicCancelUserOrder' test.out

#- 438 PublicGetUserOrderHistories
$CLI_EXE \
    --sn platform \
    --op PublicGetUserOrderHistories \
    --namespace $AB_NAMESPACE \
    --orderNo 'MYDLrTqp' \
    --userId 'bu9Qt2bF' \
    > test.out 2>&1
eval_tap $? 438 'PublicGetUserOrderHistories' test.out

#- 439 PublicDownloadUserOrderReceipt
$CLI_EXE \
    --sn platform \
    --op PublicDownloadUserOrderReceipt \
    --namespace $AB_NAMESPACE \
    --orderNo 'H1atLRQq' \
    --userId 'nsPztSs4' \
    > test.out 2>&1
eval_tap $? 439 'PublicDownloadUserOrderReceipt' test.out

#- 440 PublicGetPaymentAccounts
$CLI_EXE \
    --sn platform \
    --op PublicGetPaymentAccounts \
    --namespace $AB_NAMESPACE \
    --userId 'j1srAzDg' \
    > test.out 2>&1
eval_tap $? 440 'PublicGetPaymentAccounts' test.out

#- 441 PublicDeletePaymentAccount
$CLI_EXE \
    --sn platform \
    --op PublicDeletePaymentAccount \
    --id '9WLcARwl' \
    --namespace $AB_NAMESPACE \
    --type 'card' \
    --userId 'mLA93tpq' \
    > test.out 2>&1
eval_tap $? 441 'PublicDeletePaymentAccount' test.out

#- 442 PublicListActiveSections
$CLI_EXE \
    --sn platform \
    --op PublicListActiveSections \
    --namespace $AB_NAMESPACE \
    --userId 'JkGPogir' \
    --autoCalcEstimatedPrice 'true' \
    --language '6PSYM6Ln' \
    --region '2Wi2xJQv' \
    --storeId 'RP7TLJZP' \
    --viewId 'tA5wnozz' \
    > test.out 2>&1
eval_tap $? 442 'PublicListActiveSections' test.out

#- 443 PublicQueryUserSubscriptions
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserSubscriptions \
    --namespace $AB_NAMESPACE \
    --userId '0M7TbmGg' \
    --chargeStatus 'NEVER' \
    --itemId 'M9q6rv0g' \
    --limit '53' \
    --offset '53' \
    --sku 'hhNHyr1L' \
    --status 'INIT' \
    --subscribedBy 'PLATFORM' \
    > test.out 2>&1
eval_tap $? 443 'PublicQueryUserSubscriptions' test.out

#- 444 PublicSubscribeSubscription
# body param: body
echo '{"currencyCode": "4peEBglD", "itemId": "Pzprqmjp", "language": "EEL-GkcY-085", "region": "O3OfESQy", "returnUrl": "fmdPJLne", "source": "3tvE7aDy"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicSubscribeSubscription \
    --namespace $AB_NAMESPACE \
    --userId 'npZQp4YN' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 444 'PublicSubscribeSubscription' test.out

#- 445 PublicCheckUserSubscriptionSubscribableByItemId
$CLI_EXE \
    --sn platform \
    --op PublicCheckUserSubscriptionSubscribableByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'yrY6iNkm' \
    --itemId 'rDPPIYtn' \
    > test.out 2>&1
eval_tap $? 445 'PublicCheckUserSubscriptionSubscribableByItemId' test.out

#- 446 PublicGetUserSubscription
$CLI_EXE \
    --sn platform \
    --op PublicGetUserSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId '8R80e9Oi' \
    --userId 'JClhQXl6' \
    > test.out 2>&1
eval_tap $? 446 'PublicGetUserSubscription' test.out

#- 447 PublicChangeSubscriptionBillingAccount
$CLI_EXE \
    --sn platform \
    --op PublicChangeSubscriptionBillingAccount \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'XDsecqcA' \
    --userId 'Wiy5irtN' \
    > test.out 2>&1
eval_tap $? 447 'PublicChangeSubscriptionBillingAccount' test.out

#- 448 PublicCancelSubscription
# body param: body
echo '{"immediate": true, "reason": "xsqq6fC8"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicCancelSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId '3W6sK4fu' \
    --userId 'KBnp1zxX' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 448 'PublicCancelSubscription' test.out

#- 449 PublicGetUserSubscriptionBillingHistories
$CLI_EXE \
    --sn platform \
    --op PublicGetUserSubscriptionBillingHistories \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'Df48dRfu' \
    --userId 'g7mkgqGM' \
    --excludeFree 'false' \
    --limit '25' \
    --offset '48' \
    > test.out 2>&1
eval_tap $? 449 'PublicGetUserSubscriptionBillingHistories' test.out

#- 450 PublicListViews
$CLI_EXE \
    --sn platform \
    --op PublicListViews \
    --namespace $AB_NAMESPACE \
    --userId 'QuUVy7XC' \
    --language '00S6kd3N' \
    --storeId 'ILVF7Fpf' \
    > test.out 2>&1
eval_tap $? 450 'PublicListViews' test.out

#- 451 PublicGetWallet
$CLI_EXE \
    --sn platform \
    --op PublicGetWallet \
    --currencyCode 'VTXFkDpf' \
    --namespace $AB_NAMESPACE \
    --userId 'QsfmDkyA' \
    > test.out 2>&1
eval_tap $? 451 'PublicGetWallet' test.out

#- 452 PublicListUserWalletTransactions
$CLI_EXE \
    --sn platform \
    --op PublicListUserWalletTransactions \
    --currencyCode 'YTc2bUMZ' \
    --namespace $AB_NAMESPACE \
    --userId '6tTKVPfc' \
    --limit '26' \
    --offset '11' \
    > test.out 2>&1
eval_tap $? 452 'PublicListUserWalletTransactions' test.out

#- 453 PublicGetMyDLCContent
$CLI_EXE \
    --sn platform \
    --op PublicGetMyDLCContent \
    --includeAllNamespaces 'true' \
    --type 'PSN' \
    > test.out 2>&1
eval_tap $? 453 'PublicGetMyDLCContent' test.out

#- 454 QueryFulfillments
$CLI_EXE \
    --sn platform \
    --op QueryFulfillments \
    --namespace $AB_NAMESPACE \
    --endTime '1nhfTj3h' \
    --limit '89' \
    --offset '64' \
    --startTime 'CzW9CY3F' \
    --state 'REVOKE_FAILED' \
    --transactionId 'sIxoIgwz' \
    --userId 'WY6MdREN' \
    > test.out 2>&1
eval_tap $? 454 'QueryFulfillments' test.out

#- 455 QueryItemsV2
$CLI_EXE \
    --sn platform \
    --op QueryItemsV2 \
    --namespace $AB_NAMESPACE \
    --appType 'DEMO' \
    --availableDate 'n2NfRi7x' \
    --baseAppId 'lrbOMi5M' \
    --categoryPath 'qjcw5QM5' \
    --features 'gEjpdwmq' \
    --includeSubCategoryItem 'true' \
    --itemName 'C5HQwJl6' \
    --itemStatus 'INACTIVE' \
    --itemType '["SUBSCRIPTION", "LOOTBOX", "LOOTBOX"]' \
    --limit '31' \
    --offset '82' \
    --region 'nC1EdhZD' \
    --sectionExclusive 'true' \
    --sortBy '["updatedAt", "name:asc", "name"]' \
    --storeId 'YsVxw02k' \
    --tags 'egzjscv5' \
    --targetNamespace 'PKJ0TsEd' \
    --withTotal 'false' \
    > test.out 2>&1
eval_tap $? 455 'QueryItemsV2' test.out

#- 456 ImportStore1
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op ImportStore1 \
    --namespace $AB_NAMESPACE \
    --storeId 'sAsis3KM' \
    --strictMode 'true' \
    --upload file $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 456 'ImportStore1' test.out

#- 457 ExportStore1
# body param: body
echo '{"itemIds": ["JeA1yKXS", "UgiTVIaK", "n8KvuB4E"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ExportStore1 \
    --namespace $AB_NAMESPACE \
    --storeId 'WoVSiqNy' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 457 'ExportStore1' test.out

#- 458 FulfillRewardsV2
# body param: body
echo '{"entitlementCollectionId": "COPP5cxG", "entitlementOrigin": "GooglePlay", "metadata": {"5sRPHXuL": {}, "G97S1wAW": {}, "gXBwlqzu": {}}, "origin": "Oculus", "rewards": [{"currency": {"currencyCode": "ZnzjGrT3", "namespace": "2t3PQTiH"}, "item": {"itemId": "qd05qRQl", "itemName": "xpaB9qZ8", "itemSku": "R5c0AKM7", "itemType": "gdlwG3NU"}, "quantity": 17, "type": "CURRENCY"}, {"currency": {"currencyCode": "94WIzg4N", "namespace": "FszUojtO"}, "item": {"itemId": "FRRCTwFs", "itemName": "SOcuGpGL", "itemSku": "ccHr54cl", "itemType": "xr5Mm9X9"}, "quantity": 51, "type": "CURRENCY"}, {"currency": {"currencyCode": "dRLytLIy", "namespace": "jwbSfK11"}, "item": {"itemId": "99wjHA6P", "itemName": "iXhPDKWe", "itemSku": "oJDaG7AB", "itemType": "DFCZVi1b"}, "quantity": 67, "type": "ITEM"}], "source": "DLC", "transactionId": "9TKUejZv"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op FulfillRewardsV2 \
    --namespace $AB_NAMESPACE \
    --userId 'REo4emj5' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 458 'FulfillRewardsV2' test.out

#- 459 FulfillItems
# body param: body
echo '{"items": [{"duration": 84, "endDate": "1992-10-14T00:00:00Z", "entitlementCollectionId": "CGv7v7Mp", "entitlementOrigin": "Oculus", "itemId": "4RXEbKXS", "itemSku": "W8UvGcNd", "language": "UbrnMp6K", "metadata": {"vRYWSexD": {}, "Y2cvErN9": {}, "c86i8Opa": {}}, "orderNo": "YE6OL6aL", "origin": "Xbox", "quantity": 77, "region": "oeD3kgJl", "source": "ACHIEVEMENT", "startDate": "1995-01-11T00:00:00Z", "storeId": "ATBK8LdE"}, {"duration": 58, "endDate": "1999-06-19T00:00:00Z", "entitlementCollectionId": "fKsQiHFN", "entitlementOrigin": "GooglePlay", "itemId": "7trSwdvi", "itemSku": "MN9PYIIS", "language": "U50LbOxV", "metadata": {"pBAjPfMh": {}, "RUwUwJcw": {}, "D6h78Tgi": {}}, "orderNo": "sDkkut2K", "origin": "Other", "quantity": 40, "region": "z5gmdCtJ", "source": "REFERRAL_BONUS", "startDate": "1997-08-01T00:00:00Z", "storeId": "LisLzQ4Z"}, {"duration": 59, "endDate": "1972-09-25T00:00:00Z", "entitlementCollectionId": "7dbAmVwN", "entitlementOrigin": "Other", "itemId": "rMQrGgO1", "itemSku": "YpD3gpNx", "language": "XlcDTwlr", "metadata": {"3mr4Lyiz": {}, "fm0SydXV": {}, "pRnyGocK": {}}, "orderNo": "ccZUVZaA", "origin": "Nintendo", "quantity": 16, "region": "GpjgNCy0", "source": "ORDER_REVOCATION", "startDate": "1993-12-02T00:00:00Z", "storeId": "apbBCOpK"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op FulfillItems \
    --namespace $AB_NAMESPACE \
    --transactionId 'V3rIeAn9' \
    --userId '44y1gi4M' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 459 'FulfillItems' test.out

#- 460 RevokeItems
$CLI_EXE \
    --sn platform \
    --op RevokeItems \
    --namespace $AB_NAMESPACE \
    --transactionId 'p3HwNTFy' \
    --userId 'pNzJqE3t' \
    > test.out 2>&1
eval_tap $? 460 'RevokeItems' test.out


# remove artifacts
rm -f "$CLI_TOKEN_FILE"
rm -f "$TEMP_JSON_INPUT"
rm -f "$TEMP_FILE_UPLOAD"

exit $EXIT_CODE