#!/usr/bin/env bash

# Copyright (c) 2021 AccelByte Inc. All Rights Reserved.
# This is licensed software from AccelByte Inc, for limitations
# and restrictions contact your company contract manager.

# This code is generated by tool. DO NOT EDIT.

# Meta:
# - random seed: 
# - template file: 

# Instructions:
# - Run the Justice SDK Mock Server first before running this script.

export AB_BASE_URL="http://127.0.0.1:8080"
export AB_CLIENT_ID="admin"
export AB_CLIENT_SECRET="admin"
export AB_NAMESPACE="test"
export AB_APP_NAME="UnitTest"

EXIT_CODE=0

eval_tap() {
  if [ $1 -eq 0 ]; then
    echo "ok $2 - $3"
  else
    EXIT_CODE=1
    echo "not ok $2 - $3"
    sed 's/^/# /g' $4
  fi
  rm -f $4
}

CLI_EXE="AccelByte.Sdk.Sample.Cli"
CLI_TOKEN_FILE="$(dirname "$(which $CLI_EXE)")/token.json"
TEMP_JSON_INPUT="input_json.json"
TEMP_FILE_UPLOAD="file_upload.bin"

echo "TAP version 13"
echo "1..481"

#- 1 Login
$CLI_EXE --op login --lt user --user user --pass user > test.out 2>&1
eval_tap $? 1 'Login' test.out

if [ $EXIT_CODE -ne 0 ]; then
  echo "Bail out! Login failed."
  exit $EXIT_CODE
fi

# echo "foo" > "$CLI_TOKEN_FILE"

#- 2 ListFulfillmentScripts
$CLI_EXE \
    --sn platform \
    --op ListFulfillmentScripts \
    > test.out 2>&1
eval_tap $? 2 'ListFulfillmentScripts' test.out

#- 3 GetFulfillmentScript
$CLI_EXE \
    --sn platform \
    --op GetFulfillmentScript \
    --id 'LNIjarw0' \
    > test.out 2>&1
eval_tap $? 3 'GetFulfillmentScript' test.out

#- 4 CreateFulfillmentScript
# body param: body
echo '{"grantDays": "hOUJYhKQ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateFulfillmentScript \
    --id 'PNgKrHG3' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 4 'CreateFulfillmentScript' test.out

#- 5 DeleteFulfillmentScript
$CLI_EXE \
    --sn platform \
    --op DeleteFulfillmentScript \
    --id 'Pr9rmoqn' \
    > test.out 2>&1
eval_tap $? 5 'DeleteFulfillmentScript' test.out

#- 6 UpdateFulfillmentScript
# body param: body
echo '{"grantDays": "N7Lbd8Al"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateFulfillmentScript \
    --id '4Of8WF0o' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 6 'UpdateFulfillmentScript' test.out

#- 7 ListItemTypeConfigs
$CLI_EXE \
    --sn platform \
    --op ListItemTypeConfigs \
    > test.out 2>&1
eval_tap $? 7 'ListItemTypeConfigs' test.out

#- 8 CreateItemTypeConfig
# body param: body
echo '{"clazz": "WNgjWjqV", "dryRun": false, "fulfillmentUrl": "hQNChWn5", "itemType": "APP", "purchaseConditionUrl": "dy1stiwE"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateItemTypeConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 8 'CreateItemTypeConfig' test.out

#- 9 SearchItemTypeConfig
$CLI_EXE \
    --sn platform \
    --op SearchItemTypeConfig \
    --clazz '1W9nx9Vg' \
    --itemType 'MEDIA' \
    > test.out 2>&1
eval_tap $? 9 'SearchItemTypeConfig' test.out

#- 10 GetItemTypeConfig
$CLI_EXE \
    --sn platform \
    --op GetItemTypeConfig \
    --id 'ZKbVHJpC' \
    > test.out 2>&1
eval_tap $? 10 'GetItemTypeConfig' test.out

#- 11 UpdateItemTypeConfig
# body param: body
echo '{"clazz": "6QEbT27O", "dryRun": true, "fulfillmentUrl": "uPXMVj4N", "purchaseConditionUrl": "aF2Npld8"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateItemTypeConfig \
    --id 'IOXpHvQl' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 11 'UpdateItemTypeConfig' test.out

#- 12 DeleteItemTypeConfig
$CLI_EXE \
    --sn platform \
    --op DeleteItemTypeConfig \
    --id 'GoPxMLmm' \
    > test.out 2>&1
eval_tap $? 12 'DeleteItemTypeConfig' test.out

#- 13 QueryCampaigns
$CLI_EXE \
    --sn platform \
    --op QueryCampaigns \
    --namespace $AB_NAMESPACE \
    --limit '16' \
    --name 'hXbaRRoR' \
    --offset '9' \
    --tag 'O6i1fRNc' \
    > test.out 2>&1
eval_tap $? 13 'QueryCampaigns' test.out

#- 14 CreateCampaign
# body param: body
echo '{"description": "77toRcFk", "discountConfig": {"categories": [{"categoryPath": "Rz9JPvlF", "includeSubCategories": true}, {"categoryPath": "BMUWFSEV", "includeSubCategories": false}, {"categoryPath": "pg6JSHW0", "includeSubCategories": false}], "currencyCode": "Jp6nyQnl", "currencyNamespace": "Ihz8cyTa", "discountAmount": 15, "discountPercentage": 54, "discountType": "AMOUNT", "items": [{"itemId": "McAnefGo", "itemName": "aYrEWxiC"}, {"itemId": "0G78VSgT", "itemName": "q2E7WXfV"}, {"itemId": "pgjK9nJ7", "itemName": "y3dUWOi3"}], "restrictType": "NONE", "stackable": true}, "items": [{"extraSubscriptionDays": 66, "itemId": "MCGVRXJX", "itemName": "FNQexklS", "quantity": 54}, {"extraSubscriptionDays": 28, "itemId": "aY5xuJVS", "itemName": "l5gdTWEv", "quantity": 29}, {"extraSubscriptionDays": 59, "itemId": "NGT8GKiG", "itemName": "EwTPzWkJ", "quantity": 56}], "maxRedeemCountPerCampaignPerUser": 79, "maxRedeemCountPerCode": 77, "maxRedeemCountPerCodePerUser": 17, "maxSaleCount": 53, "name": "RIt3NO95", "redeemEnd": "1971-09-19T00:00:00Z", "redeemStart": "1992-07-22T00:00:00Z", "redeemType": "ITEM", "status": "INACTIVE", "tags": ["MW3pASr3", "DUNPlPcT", "4Mmnk5jd"], "type": "REDEMPTION"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCampaign \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 14 'CreateCampaign' test.out

#- 15 GetCampaign
$CLI_EXE \
    --sn platform \
    --op GetCampaign \
    --campaignId 'mQj3rcpP' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 15 'GetCampaign' test.out

#- 16 UpdateCampaign
# body param: body
echo '{"description": "24zn9DxE", "discountConfig": {"categories": [{"categoryPath": "bjnN5bSq", "includeSubCategories": true}, {"categoryPath": "5zD3yPy6", "includeSubCategories": true}, {"categoryPath": "wtxa6c0n", "includeSubCategories": false}], "currencyCode": "7tEDknSw", "currencyNamespace": "Luhu7OKE", "discountAmount": 79, "discountPercentage": 69, "discountType": "PERCENTAGE", "items": [{"itemId": "Jkh8pUy6", "itemName": "44m4PMZ4"}, {"itemId": "paklGkRI", "itemName": "U225NLvp"}, {"itemId": "ulGxFTri", "itemName": "vQQxIMbp"}], "restrictType": "NONE", "stackable": true}, "items": [{"extraSubscriptionDays": 7, "itemId": "16qZg4iy", "itemName": "9sGdeMzY", "quantity": 88}, {"extraSubscriptionDays": 3, "itemId": "FyKOfpv7", "itemName": "xGauxeg1", "quantity": 33}, {"extraSubscriptionDays": 40, "itemId": "KWpww79g", "itemName": "6Wi1VucC", "quantity": 43}], "maxRedeemCountPerCampaignPerUser": 9, "maxRedeemCountPerCode": 8, "maxRedeemCountPerCodePerUser": 17, "maxSaleCount": 79, "name": "YHbkM3vm", "redeemEnd": "1999-03-17T00:00:00Z", "redeemStart": "1991-07-22T00:00:00Z", "redeemType": "ITEM", "status": "ACTIVE", "tags": ["YsmDdtwT", "3zOD8gjM", "PDmRIS1E"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCampaign \
    --campaignId 'gjnwsz6q' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 16 'UpdateCampaign' test.out

#- 17 RenameBatch
# body param: body
echo '{"newName": "rlps69A6", "oldName": "UBVbRAGj"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RenameBatch \
    --campaignId 'VsoaMVrF' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 17 'RenameBatch' test.out

#- 18 QueryCampaignBatchNames
$CLI_EXE \
    --sn platform \
    --op QueryCampaignBatchNames \
    --campaignId 'pzobHspe' \
    --namespace $AB_NAMESPACE \
    --batchName 'e5crd0Yd' \
    --limit '86' \
    > test.out 2>&1
eval_tap $? 18 'QueryCampaignBatchNames' test.out

#- 19 GetCampaignDynamic
$CLI_EXE \
    --sn platform \
    --op GetCampaignDynamic \
    --campaignId 'HfVzgSyj' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 19 'GetCampaignDynamic' test.out

#- 20 GetCatalogConfig
$CLI_EXE \
    --sn platform \
    --op GetCatalogConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 20 'GetCatalogConfig' test.out

#- 21 UpdateCatalogConfig
# body param: body
echo '{"enableInventoryCheck": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCatalogConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 21 'UpdateCatalogConfig' test.out

#- 22 GetLootBoxPluginConfig
$CLI_EXE \
    --sn platform \
    --op GetLootBoxPluginConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 22 'GetLootBoxPluginConfig' test.out

#- 23 UpdateLootBoxPluginConfig
# body param: body
echo '{"appConfig": {"appName": "IUOOAg0l"}, "customConfig": {"connectionType": "INSECURE", "grpcServerAddress": "rXHy4seP"}, "extendType": "CUSTOM"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateLootBoxPluginConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 23 'UpdateLootBoxPluginConfig' test.out

#- 24 DeleteLootBoxPluginConfig
$CLI_EXE \
    --sn platform \
    --op DeleteLootBoxPluginConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 24 'DeleteLootBoxPluginConfig' test.out

#- 25 UplodLootBoxPluginConfigCert
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UplodLootBoxPluginConfigCert \
    --namespace $AB_NAMESPACE \
    --upload file $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 25 'UplodLootBoxPluginConfigCert' test.out

#- 26 GetLootBoxGrpcInfo
$CLI_EXE \
    --sn platform \
    --op GetLootBoxGrpcInfo \
    --namespace $AB_NAMESPACE \
    --force 'true' \
    > test.out 2>&1
eval_tap $? 26 'GetLootBoxGrpcInfo' test.out

#- 27 GetSectionPluginConfig
$CLI_EXE \
    --sn platform \
    --op GetSectionPluginConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 27 'GetSectionPluginConfig' test.out

#- 28 UpdateSectionPluginConfig
# body param: body
echo '{"appConfig": {"appName": "liQsSB4X"}, "customConfig": {"connectionType": "TLS", "grpcServerAddress": "nnEWXaMm"}, "extendType": "APP"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateSectionPluginConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 28 'UpdateSectionPluginConfig' test.out

#- 29 DeleteSectionPluginConfig
$CLI_EXE \
    --sn platform \
    --op DeleteSectionPluginConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 29 'DeleteSectionPluginConfig' test.out

#- 30 UploadSectionPluginConfigCert
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UploadSectionPluginConfigCert \
    --namespace $AB_NAMESPACE \
    --upload file $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 30 'UploadSectionPluginConfigCert' test.out

#- 31 GetRootCategories
$CLI_EXE \
    --sn platform \
    --op GetRootCategories \
    --namespace $AB_NAMESPACE \
    --storeId 'Tu4Ffclb' \
    > test.out 2>&1
eval_tap $? 31 'GetRootCategories' test.out

#- 32 CreateCategory
# body param: body
echo '{"categoryPath": "6AydzafA", "localizationDisplayNames": {"riomion5": "WTQOGiov", "nlINeRKG": "FX1gRx16", "KLrfOdY1": "588oAedv"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCategory \
    --namespace $AB_NAMESPACE \
    --storeId '4OYJnfZF' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 32 'CreateCategory' test.out

#- 33 ListCategoriesBasic
$CLI_EXE \
    --sn platform \
    --op ListCategoriesBasic \
    --namespace $AB_NAMESPACE \
    --storeId 'oYP14pGp' \
    > test.out 2>&1
eval_tap $? 33 'ListCategoriesBasic' test.out

#- 34 GetCategory
$CLI_EXE \
    --sn platform \
    --op GetCategory \
    --categoryPath 'kZixcQ73' \
    --namespace $AB_NAMESPACE \
    --storeId 'XXXEBbuO' \
    > test.out 2>&1
eval_tap $? 34 'GetCategory' test.out

#- 35 UpdateCategory
# body param: body
echo '{"localizationDisplayNames": {"fvc0Ad6N": "N8O0Cvep", "llbPKtpd": "AdlyiKLK", "hGSSamvA": "QZGkqB2C"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCategory \
    --categoryPath 'd7Q5Cq2P' \
    --namespace $AB_NAMESPACE \
    --storeId 'zO2Yy5Qc' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 35 'UpdateCategory' test.out

#- 36 DeleteCategory
$CLI_EXE \
    --sn platform \
    --op DeleteCategory \
    --categoryPath 'GWQmhsP0' \
    --namespace $AB_NAMESPACE \
    --storeId 'FByg9c5c' \
    > test.out 2>&1
eval_tap $? 36 'DeleteCategory' test.out

#- 37 GetChildCategories
$CLI_EXE \
    --sn platform \
    --op GetChildCategories \
    --categoryPath 'Mgb9n23F' \
    --namespace $AB_NAMESPACE \
    --storeId 'FUzRv3fB' \
    > test.out 2>&1
eval_tap $? 37 'GetChildCategories' test.out

#- 38 GetDescendantCategories
$CLI_EXE \
    --sn platform \
    --op GetDescendantCategories \
    --categoryPath 'nz8dLNob' \
    --namespace $AB_NAMESPACE \
    --storeId 'YLfqNamy' \
    > test.out 2>&1
eval_tap $? 38 'GetDescendantCategories' test.out

#- 39 QueryCodes
$CLI_EXE \
    --sn platform \
    --op QueryCodes \
    --campaignId '8oSKnqhu' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --batchName 'LxLKcQfl' \
    --batchNo '[10, 31, 55]' \
    --code 't4PFr9fZ' \
    --limit '34' \
    --offset '33' \
    --withBatchName 'true' \
    > test.out 2>&1
eval_tap $? 39 'QueryCodes' test.out

#- 40 CreateCodes
# body param: body
echo '{"batchName": "nOm5SHq0", "codeValue": "kdpDmyAF", "quantity": 40}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCodes \
    --campaignId 'wlUxHr00' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 40 'CreateCodes' test.out

#- 41 Download
$CLI_EXE \
    --sn platform \
    --op Download \
    --campaignId 'XbcvDpQG' \
    --namespace $AB_NAMESPACE \
    --batchName '9GrqZ5lr' \
    --batchNo '[75, 12, 98]' \
    --withBatchName 'true' \
    > test.out 2>&1
eval_tap $? 41 'Download' test.out

#- 42 BulkDisableCodes
$CLI_EXE \
    --sn platform \
    --op BulkDisableCodes \
    --campaignId 'QL1LlE0p' \
    --namespace $AB_NAMESPACE \
    --batchName 'UwCHbHYE' \
    --batchNo '[35, 33, 71]' \
    > test.out 2>&1
eval_tap $? 42 'BulkDisableCodes' test.out

#- 43 BulkEnableCodes
$CLI_EXE \
    --sn platform \
    --op BulkEnableCodes \
    --campaignId 'Cwf4eASU' \
    --namespace $AB_NAMESPACE \
    --batchName 'pWgsCZxM' \
    --batchNo '[26, 90, 57]' \
    > test.out 2>&1
eval_tap $? 43 'BulkEnableCodes' test.out

#- 44 QueryRedeemHistory
$CLI_EXE \
    --sn platform \
    --op QueryRedeemHistory \
    --campaignId 'xlpReIDM' \
    --namespace $AB_NAMESPACE \
    --code 'FyekKNXi' \
    --limit '41' \
    --offset '47' \
    --userId 'FvWpiJxw' \
    > test.out 2>&1
eval_tap $? 44 'QueryRedeemHistory' test.out

#- 45 GetCode
$CLI_EXE \
    --sn platform \
    --op GetCode \
    --code 'eToboDkS' \
    --namespace $AB_NAMESPACE \
    --redeemable 'false' \
    --withBatchName 'true' \
    > test.out 2>&1
eval_tap $? 45 'GetCode' test.out

#- 46 DisableCode
$CLI_EXE \
    --sn platform \
    --op DisableCode \
    --code 'n7YhGSWv' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 46 'DisableCode' test.out

#- 47 EnableCode
$CLI_EXE \
    --sn platform \
    --op EnableCode \
    --code 'hag0HVS3' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 47 'EnableCode' test.out

#- 48 GetServicePluginConfig
eval_tap 0 48 'GetServicePluginConfig # SKIP deprecated' test.out

#- 49 UpdateServicePluginConfig
eval_tap 0 49 'UpdateServicePluginConfig # SKIP deprecated' test.out

#- 50 DeleteServicePluginConfig
eval_tap 0 50 'DeleteServicePluginConfig # SKIP deprecated' test.out

#- 51 ListCurrencies
$CLI_EXE \
    --sn platform \
    --op ListCurrencies \
    --namespace $AB_NAMESPACE \
    --currencyType 'REAL' \
    > test.out 2>&1
eval_tap $? 51 'ListCurrencies' test.out

#- 52 CreateCurrency
# body param: body
echo '{"currencyCode": "dNHbcU5b", "currencySymbol": "NkaVHIQG", "currencyType": "VIRTUAL", "decimals": 92, "localizationDescriptions": {"8vyFXHOl": "GbY17G7H", "dSIe39Pv": "0B4T78b5", "YVjNDusN": "X3Efkupj"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCurrency \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 52 'CreateCurrency' test.out

#- 53 UpdateCurrency
# body param: body
echo '{"localizationDescriptions": {"sNoX1Rgg": "GC154Gj5", "jGZ5U6BV": "0VfD8lbf", "fHULZWiN": "NJbSIhhm"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCurrency \
    --currencyCode 'nb2F1U2P' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 53 'UpdateCurrency' test.out

#- 54 DeleteCurrency
$CLI_EXE \
    --sn platform \
    --op DeleteCurrency \
    --currencyCode 'bi53qxnG' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 54 'DeleteCurrency' test.out

#- 55 GetCurrencyConfig
$CLI_EXE \
    --sn platform \
    --op GetCurrencyConfig \
    --currencyCode 'JpDLxpuz' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 55 'GetCurrencyConfig' test.out

#- 56 GetCurrencySummary
$CLI_EXE \
    --sn platform \
    --op GetCurrencySummary \
    --currencyCode 'WAGwVhO7' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 56 'GetCurrencySummary' test.out

#- 57 GetDLCItemConfig
$CLI_EXE \
    --sn platform \
    --op GetDLCItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 57 'GetDLCItemConfig' test.out

#- 58 UpdateDLCItemConfig
# body param: body
echo '{"data": [{"id": "unRUJAQn", "rewards": [{"currency": {"currencyCode": "6oUww2gM", "namespace": "dHw4kO4q"}, "item": {"itemId": "ddtm7nV1", "itemName": "jzSuPHkL", "itemSku": "TYmjSlWz", "itemType": "Y8eYa8Qd"}, "quantity": 50, "type": "CURRENCY"}, {"currency": {"currencyCode": "o7G7pS3R", "namespace": "2e7ev3ci"}, "item": {"itemId": "y3GKf5UY", "itemName": "crGyPu2o", "itemSku": "t64pZ7on", "itemType": "btjKcMUC"}, "quantity": 58, "type": "ITEM"}, {"currency": {"currencyCode": "WMzbKPpp", "namespace": "MvGe3cx4"}, "item": {"itemId": "KcLAbM3b", "itemName": "SDDzxgA6", "itemSku": "qsSu1sQY", "itemType": "zhgBtXFX"}, "quantity": 33, "type": "CURRENCY"}]}, {"id": "kMiNWq61", "rewards": [{"currency": {"currencyCode": "1S0QX8zm", "namespace": "1amWZCk6"}, "item": {"itemId": "vnC1YC3E", "itemName": "zSSGiuir", "itemSku": "ws8D1ySC", "itemType": "NvTSF6WN"}, "quantity": 33, "type": "ITEM"}, {"currency": {"currencyCode": "Q0pyh6ei", "namespace": "fMoKKaKf"}, "item": {"itemId": "d5rL46Rs", "itemName": "2XXuiB2y", "itemSku": "gHcl4joH", "itemType": "X9tYP4au"}, "quantity": 35, "type": "ITEM"}, {"currency": {"currencyCode": "Xv30STcx", "namespace": "NEPCWA42"}, "item": {"itemId": "MSUIEc6C", "itemName": "4o2qYuIs", "itemSku": "LvvjR3Hz", "itemType": "Vy2rMaMM"}, "quantity": 45, "type": "ITEM"}]}, {"id": "WB5Kod2C", "rewards": [{"currency": {"currencyCode": "S3KNcJLj", "namespace": "OZ9pj56V"}, "item": {"itemId": "H8klJNbX", "itemName": "WBAXyHrP", "itemSku": "oYvcSM49", "itemType": "Vrzn8wfH"}, "quantity": 58, "type": "ITEM"}, {"currency": {"currencyCode": "Y7nODN5b", "namespace": "sDRoMtYN"}, "item": {"itemId": "IEFS49fT", "itemName": "h0GCKpu3", "itemSku": "dgf4Jtcb", "itemType": "1umJwGcN"}, "quantity": 87, "type": "ITEM"}, {"currency": {"currencyCode": "38ZM3rLU", "namespace": "FqXsvWf1"}, "item": {"itemId": "PInAro0Z", "itemName": "8UHJh2Yy", "itemSku": "9czRIaLF", "itemType": "j5k7Yk7G"}, "quantity": 46, "type": "ITEM"}]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateDLCItemConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 58 'UpdateDLCItemConfig' test.out

#- 59 DeleteDLCItemConfig
$CLI_EXE \
    --sn platform \
    --op DeleteDLCItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 59 'DeleteDLCItemConfig' test.out

#- 60 GetPlatformDLCConfig
$CLI_EXE \
    --sn platform \
    --op GetPlatformDLCConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 60 'GetPlatformDLCConfig' test.out

#- 61 UpdatePlatformDLCConfig
# body param: body
echo '{"data": [{"platform": "EPICGAMES", "platformDlcIdMap": {"T2jpPSc2": "NSdic11o", "cTGtqa5z": "tMi2KvnV", "rbm8MYle": "BmrUCKyR"}}, {"platform": "PSN", "platformDlcIdMap": {"5ZgWqblu": "QfsfE2gM", "G4QNFS8d": "oJ2MFRfA", "y5xXa7Je": "bGGf62tG"}}, {"platform": "PSN", "platformDlcIdMap": {"Vg2ZTBI0": "rxiKWVJn", "firnVoGV": "pUMcpZqu", "kK2gkJmq": "4skqjwon"}}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePlatformDLCConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 61 'UpdatePlatformDLCConfig' test.out

#- 62 DeletePlatformDLCConfig
$CLI_EXE \
    --sn platform \
    --op DeletePlatformDLCConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 62 'DeletePlatformDLCConfig' test.out

#- 63 QueryEntitlements1
$CLI_EXE \
    --sn platform \
    --op QueryEntitlements1 \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --appType 'SOFTWARE' \
    --entitlementClazz 'ENTITLEMENT' \
    --entitlementName 'TSnaaKj5' \
    --itemId '["3ZnTeit5", "8SZbtk5u", "93jojvKK"]' \
    --limit '100' \
    --offset '75' \
    --origin 'Epic' \
    --userId 'EQHtMKZ5' \
    > test.out 2>&1
eval_tap $? 63 'QueryEntitlements1' test.out

#- 64 QueryEntitlements
$CLI_EXE \
    --sn platform \
    --op QueryEntitlements \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --itemIds '["XtmtxvDa", "f3bex65O", "KnTJyMp5"]' \
    --limit '42' \
    --offset '29' \
    > test.out 2>&1
eval_tap $? 64 'QueryEntitlements' test.out

#- 65 EnableEntitlementOriginFeature
$CLI_EXE \
    --sn platform \
    --op EnableEntitlementOriginFeature \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 65 'EnableEntitlementOriginFeature' test.out

#- 66 GetEntitlementConfigInfo
$CLI_EXE \
    --sn platform \
    --op GetEntitlementConfigInfo \
    --namespace $AB_NAMESPACE \
    --withoutCache 'false' \
    > test.out 2>&1
eval_tap $? 66 'GetEntitlementConfigInfo' test.out

#- 67 GrantEntitlements
# body param: body
echo '{"entitlementGrantList": [{"collectionId": "JtffW6u4", "endDate": "1975-04-26T00:00:00Z", "grantedCode": "0J6CkKyL", "itemId": "lfcpWc36", "itemNamespace": "DhBESEcM", "language": "zknS", "metadata": {"Vnt77ROx": {}, "8tFKCHpf": {}, "yeUdUf6y": {}}, "origin": "System", "quantity": 15, "region": "QYij0Jnk", "source": "OTHER", "startDate": "1992-10-12T00:00:00Z", "storeId": "2skpZbuH"}, {"collectionId": "JbBkO4VY", "endDate": "1999-01-16T00:00:00Z", "grantedCode": "7ETGLGoq", "itemId": "K74tblPd", "itemNamespace": "xaoApNbw", "language": "rY_pj", "metadata": {"6ox8kOjy": {}, "zwDG2O5j": {}, "Oxm3dihz": {}}, "origin": "IOS", "quantity": 24, "region": "CNYPkies", "source": "REWARD", "startDate": "1981-05-21T00:00:00Z", "storeId": "RrSHrZep"}, {"collectionId": "L5WYGMMO", "endDate": "1986-12-31T00:00:00Z", "grantedCode": "ohiglmyg", "itemId": "PbjLAnP6", "itemNamespace": "iSYUtLdo", "language": "BEnh-896", "metadata": {"MBTlY8RX": {}, "KDamR958": {}, "Cm6kzM0P": {}}, "origin": "Playstation", "quantity": 85, "region": "NUEMtN6t", "source": "REFERRAL_BONUS", "startDate": "1994-09-01T00:00:00Z", "storeId": "w4Nw5jOU"}], "userIds": ["kWiDHCGG", "2PfYYUVU", "lrB0FUWj"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op GrantEntitlements \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 67 'GrantEntitlements' test.out

#- 68 RevokeEntitlements
# body param: body
echo '["CwgUg9E5", "211INCpb", "1Rn7asjW"]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RevokeEntitlements \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 68 'RevokeEntitlements' test.out

#- 69 GetEntitlement
$CLI_EXE \
    --sn platform \
    --op GetEntitlement \
    --entitlementId 'QtEhOFfc' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 69 'GetEntitlement' test.out

#- 70 QueryFulfillmentHistories
$CLI_EXE \
    --sn platform \
    --op QueryFulfillmentHistories \
    --namespace $AB_NAMESPACE \
    --limit '62' \
    --offset '95' \
    --status 'SUCCESS' \
    --userId 'hNoUrlki' \
    > test.out 2>&1
eval_tap $? 70 'QueryFulfillmentHistories' test.out

#- 71 QueryIAPClawbackHistory
$CLI_EXE \
    --sn platform \
    --op QueryIAPClawbackHistory \
    --namespace $AB_NAMESPACE \
    --endTime 'cVMSZfD9' \
    --eventType 'CHARGEBACK_REVERSED' \
    --externalOrderId 'BSdLhPdf' \
    --limit '39' \
    --offset '79' \
    --startTime 'mJ4f2xBE' \
    --status 'IGNORED' \
    --userId 'adq2UYtp' \
    > test.out 2>&1
eval_tap $? 71 'QueryIAPClawbackHistory' test.out

#- 72 MockPlayStationStreamEvent
# body param: body
echo '{"body": {"account": "wMQ4pb4i", "additionalData": {"entitlement": [{"clientTransaction": [{"amountConsumed": 2, "clientTransactionId": "jiGRso7F"}, {"amountConsumed": 88, "clientTransactionId": "WHjz8sjL"}, {"amountConsumed": 67, "clientTransactionId": "nfsvu9lX"}], "entitlementId": "tGLf1RiC", "usageCount": 47}, {"clientTransaction": [{"amountConsumed": 85, "clientTransactionId": "LJF2vTtE"}, {"amountConsumed": 44, "clientTransactionId": "MT9VlVDL"}, {"amountConsumed": 49, "clientTransactionId": "CAoRsS2Q"}], "entitlementId": "f5JG1LSV", "usageCount": 15}, {"clientTransaction": [{"amountConsumed": 76, "clientTransactionId": "rkbfyoBg"}, {"amountConsumed": 23, "clientTransactionId": "ouOCntPu"}, {"amountConsumed": 87, "clientTransactionId": "xZeNhtIf"}], "entitlementId": "9P7aCQ2b", "usageCount": 91}], "purpose": "YMRqM1cR"}, "originalTitleName": "Bywa84S9", "paymentProductSKU": "jnYHtQ08", "purchaseDate": "UsIOEnc0", "sourceOrderItemId": "7R51JD8q", "titleName": "Oq2Ehga5"}, "eventDomain": "7RxvGLGb", "eventSource": "1s4qlvIZ", "eventType": "uFz4kxxe", "eventVersion": 38, "id": "TxyZXxtC", "timestamp": "HZvfxVm9"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op MockPlayStationStreamEvent \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 72 'MockPlayStationStreamEvent' test.out

#- 73 MockXblClawbackEvent
# body param: body
echo '{"data": {"eventDate": "0JADdZsV", "eventState": "XR8Piipq", "lineItemId": "XB8d4YzG", "orderId": "Zvhvdpyz", "productId": "2grR4hQK", "productType": "h2bG9tJ2", "purchasedDate": "GupKxt1a", "sandboxId": "c62mFlPI", "skuId": "th3XML2I", "subscriptionData": {"consumedDurationInDays": 40, "dateTime": "TTVZh2na", "durationInDays": 11, "recurrenceId": "iG3DsrHg"}}, "datacontenttype": "7gj9szXF", "id": "EztLmEwh", "source": "4kX5QsOv", "specVersion": "8Gbk1CxV", "subject": "JkMFiQao", "time": "VVrZWyen", "traceparent": "mUK0BYwI", "type": "1aVPJvPO"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op MockXblClawbackEvent \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 73 'MockXblClawbackEvent' test.out

#- 74 GetAppleIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetAppleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 74 'GetAppleIAPConfig' test.out

#- 75 UpdateAppleIAPConfig
# body param: body
echo '{"appAppleId": 29, "bundleId": "IjbyXXd5", "issuerId": "OaQ0mtlS", "keyId": "TwYN1iPq", "password": "w06fhQgO", "version": "V2"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateAppleIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 75 'UpdateAppleIAPConfig' test.out

#- 76 DeleteAppleIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteAppleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 76 'DeleteAppleIAPConfig' test.out

#- 77 UpdateAppleP8File
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UpdateAppleP8File \
    --namespace $AB_NAMESPACE \
    --upload file $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 77 'UpdateAppleP8File' test.out

#- 78 GetEpicGamesIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetEpicGamesIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 78 'GetEpicGamesIAPConfig' test.out

#- 79 UpdateEpicGamesIAPConfig
# body param: body
echo '{"sandboxId": "N0PQ7hAj"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateEpicGamesIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 79 'UpdateEpicGamesIAPConfig' test.out

#- 80 DeleteEpicGamesIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteEpicGamesIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 80 'DeleteEpicGamesIAPConfig' test.out

#- 81 GetGoogleIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetGoogleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 81 'GetGoogleIAPConfig' test.out

#- 82 UpdateGoogleIAPConfig
# body param: body
echo '{"applicationName": "7Cm7HEyu", "notificationTokenAudience": "M6fvEMhV", "notificationTokenEmail": "B0qI2bQT", "packageName": "QyGZ3iFr", "serviceAccountId": "Q3blU15q"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateGoogleIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 82 'UpdateGoogleIAPConfig' test.out

#- 83 DeleteGoogleIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteGoogleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 83 'DeleteGoogleIAPConfig' test.out

#- 84 UpdateGoogleP12File
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UpdateGoogleP12File \
    --namespace $AB_NAMESPACE \
    --upload file $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 84 'UpdateGoogleP12File' test.out

#- 85 GetIAPItemConfig
$CLI_EXE \
    --sn platform \
    --op GetIAPItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 85 'GetIAPItemConfig' test.out

#- 86 UpdateIAPItemConfig
# body param: body
echo '{"data": [{"itemIdentity": "x0sdpF55", "itemIdentityType": "ITEM_SKU", "platformProductIdMap": {"h3cK0nkF": "vywcAHX3", "TfrzBq6s": "sY8iMaRU", "JnLpZu2J": "cDisRbfc"}}, {"itemIdentity": "dw9zwSrp", "itemIdentityType": "ITEM_SKU", "platformProductIdMap": {"vktW3fe5": "0E0asaGh", "OejAuGhv": "N26aZ18V", "boD3R22C": "Eh9Aal6K"}}, {"itemIdentity": "tTE10frk", "itemIdentityType": "ITEM_ID", "platformProductIdMap": {"X5accprK": "A4UTJniY", "dgbNqlY7": "bGnLEYj5", "A9exyYPY": "UEt43JkD"}}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateIAPItemConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 86 'UpdateIAPItemConfig' test.out

#- 87 DeleteIAPItemConfig
$CLI_EXE \
    --sn platform \
    --op DeleteIAPItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 87 'DeleteIAPItemConfig' test.out

#- 88 GetOculusIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetOculusIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 88 'GetOculusIAPConfig' test.out

#- 89 UpdateOculusIAPConfig
# body param: body
echo '{"appId": "Ff7vzAkq", "appSecret": "v0ln64TF"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateOculusIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 89 'UpdateOculusIAPConfig' test.out

#- 90 DeleteOculusIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteOculusIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 90 'DeleteOculusIAPConfig' test.out

#- 91 GetPlayStationIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetPlayStationIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 91 'GetPlayStationIAPConfig' test.out

#- 92 UpdatePlaystationIAPConfig
# body param: body
echo '{"backOfficeServerClientId": "6LvYzwma", "backOfficeServerClientSecret": "fyhRrg0C", "enableStreamJob": false, "environment": "a3ATKUe0", "streamName": "MK2rXodr", "streamPartnerName": "otYQVWNx"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePlaystationIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 92 'UpdatePlaystationIAPConfig' test.out

#- 93 DeletePlaystationIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeletePlaystationIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 93 'DeletePlaystationIAPConfig' test.out

#- 94 ValidateExistedPlaystationIAPConfig
$CLI_EXE \
    --sn platform \
    --op ValidateExistedPlaystationIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 94 'ValidateExistedPlaystationIAPConfig' test.out

#- 95 ValidatePlaystationIAPConfig
# body param: body
echo '{"backOfficeServerClientId": "SukH5E5J", "backOfficeServerClientSecret": "XmpmTpVo", "enableStreamJob": false, "environment": "W5USSlZF", "streamName": "CdT3ct2E", "streamPartnerName": "BTHWf8Ab"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ValidatePlaystationIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 95 'ValidatePlaystationIAPConfig' test.out

#- 96 GetSteamIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetSteamIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 96 'GetSteamIAPConfig' test.out

#- 97 UpdateSteamIAPConfig
# body param: body
echo '{"appId": "T8Br4Sa1", "publisherAuthenticationKey": "wMHlqu7E"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateSteamIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 97 'UpdateSteamIAPConfig' test.out

#- 98 DeleteSteamIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteSteamIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 98 'DeleteSteamIAPConfig' test.out

#- 99 GetTwitchIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetTwitchIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 99 'GetTwitchIAPConfig' test.out

#- 100 UpdateTwitchIAPConfig
# body param: body
echo '{"clientId": "b8ju3eAS", "clientSecret": "hnSHWzrT", "organizationId": "39e0OPbj"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateTwitchIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 100 'UpdateTwitchIAPConfig' test.out

#- 101 DeleteTwitchIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteTwitchIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 101 'DeleteTwitchIAPConfig' test.out

#- 102 GetXblIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetXblIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 102 'GetXblIAPConfig' test.out

#- 103 UpdateXblIAPConfig
# body param: body
echo '{"enableClawback": false, "entraAppClientId": "PES5i228", "entraAppClientSecret": "lpngT0zO", "entraTenantId": "Cn7GIqi8", "relyingPartyCert": "jhiLnJBp"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXblIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 103 'UpdateXblIAPConfig' test.out

#- 104 DeleteXblAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteXblAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 104 'DeleteXblAPConfig' test.out

#- 105 UpdateXblBPCertFile
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UpdateXblBPCertFile \
    --namespace $AB_NAMESPACE \
    --upload file $TEMP_FILE_UPLOAD \
    --password 'CUWUthlo' \
    > test.out 2>&1
eval_tap $? 105 'UpdateXblBPCertFile' test.out

#- 106 QueryThirdPartyNotifications
$CLI_EXE \
    --sn platform \
    --op QueryThirdPartyNotifications \
    --namespace $AB_NAMESPACE \
    --endDate 'Gv80mD1l' \
    --externalId 'T1kYh82M' \
    --limit '58' \
    --offset '53' \
    --source 'STADIA' \
    --startDate 'w2a4Cy6E' \
    --status 'PROCESSED' \
    --type 'WxVn5XB1' \
    > test.out 2>&1
eval_tap $? 106 'QueryThirdPartyNotifications' test.out

#- 107 QueryThirdPartySubscription
$CLI_EXE \
    --sn platform \
    --op QueryThirdPartySubscription \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --groupId '0PXUJLPi' \
    --limit '14' \
    --offset '77' \
    --platform 'APPLE' \
    --productId 'df8Gt2NS' \
    --userId 'Wj8KUXwi' \
    > test.out 2>&1
eval_tap $? 107 'QueryThirdPartySubscription' test.out

#- 108 GetIAPOrderConsumeDetails
$CLI_EXE \
    --sn platform \
    --op GetIAPOrderConsumeDetails \
    --iapOrderNo '28l24lTo' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 108 'GetIAPOrderConsumeDetails' test.out

#- 109 DownloadInvoiceDetails
$CLI_EXE \
    --sn platform \
    --op DownloadInvoiceDetails \
    --namespace $AB_NAMESPACE \
    --endTime 'set05D6B' \
    --feature 'GiqpkzF7' \
    --itemId 'g16gxuqU' \
    --itemType 'SEASON' \
    --startTime 'AKXGi41U' \
    > test.out 2>&1
eval_tap $? 109 'DownloadInvoiceDetails' test.out

#- 110 GenerateInvoiceSummary
$CLI_EXE \
    --sn platform \
    --op GenerateInvoiceSummary \
    --namespace $AB_NAMESPACE \
    --endTime '5K7qhqiB' \
    --feature 'ihtEHlZa' \
    --itemId 'hwSYzK6t' \
    --itemType 'OPTIONBOX' \
    --startTime 'blaTk3lY' \
    > test.out 2>&1
eval_tap $? 110 'GenerateInvoiceSummary' test.out

#- 111 SyncInGameItem
# body param: body
echo '{"categoryPath": "NNhld35x", "targetItemId": "B5SGG1qC", "targetNamespace": "ybC1hGJ8"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncInGameItem \
    --namespace $AB_NAMESPACE \
    --storeId '8WARBbiQ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 111 'SyncInGameItem' test.out

#- 112 CreateItem
# body param: body
echo '{"appId": "MciGjKQJ", "appType": "DEMO", "baseAppId": "uEqbdhEw", "boothName": "GrdO85Xa", "categoryPath": "RsfrNiNm", "clazz": "lziNjqzo", "displayOrder": 88, "entitlementType": "DURABLE", "ext": {"KmIWUlaJ": {}, "DZefTYEj": {}, "xQHwW5q4": {}}, "features": ["H3vLS3cl", "jNkWReDV", "kTSP6oR6"], "flexible": false, "images": [{"as": "s5M2gmrO", "caption": "nY39JXJm", "height": 46, "imageUrl": "EXyJblov", "smallImageUrl": "musfETU4", "width": 89}, {"as": "axrcgLSK", "caption": "MRIqgG9J", "height": 41, "imageUrl": "jjH9M7Rb", "smallImageUrl": "jIfh6K5B", "width": 62}, {"as": "apJdfkSx", "caption": "LGuAghBx", "height": 73, "imageUrl": "QtiEi2ql", "smallImageUrl": "Not6rzg5", "width": 83}], "inventoryConfig": {"customAttributes": {"eVcNaqhJ": {}, "8FbsHsGf": {}, "VYuhYe20": {}}, "serverCustomAttributes": {"ScwjX7RI": {}, "8TA6dt6x": {}, "2nYP0pVT": {}}, "slotUsed": 52}, "itemIds": ["AZDOLegG", "0tiAC9hP", "HmhL7pmI"], "itemQty": {"dUHDh7Cq": 12, "U3XkUmCc": 75, "H3TRpmXn": 82}, "itemType": "OPTIONBOX", "listable": false, "localizations": {"uKmcJnud": {"description": "R1vcm7il", "localExt": {"CU4umDnW": {}, "aJuKfy5W": {}, "WRMd1aHs": {}}, "longDescription": "4LH0DcTe", "title": "BT2sOiE1"}, "1Ogj2qbb": {"description": "YnjEJckZ", "localExt": {"YXrJW2op": {}, "BTRTvsi7": {}, "omKSbiue": {}}, "longDescription": "3J5x8zKC", "title": "vkvlNyij"}, "641OwwlP": {"description": "w3Vlr9cD", "localExt": {"k6il7hAF": {}, "vNA2pUOv": {}, "wIVv5Wqm": {}}, "longDescription": "jhbSi0JF", "title": "8xnKKFbE"}}, "lootBoxConfig": {"rewardCount": 60, "rewards": [{"lootBoxItems": [{"count": 95, "duration": 34, "endDate": "1984-10-03T00:00:00Z", "itemId": "aB0pNJBQ", "itemSku": "ZDfbsOYD", "itemType": "gmVkDOLE"}, {"count": 20, "duration": 4, "endDate": "1971-05-14T00:00:00Z", "itemId": "TibMx062", "itemSku": "uEQ0cVaD", "itemType": "iuMVb0dS"}, {"count": 17, "duration": 98, "endDate": "1993-10-21T00:00:00Z", "itemId": "GftsJfmK", "itemSku": "ryxiVM7y", "itemType": "eWz1z1WR"}], "name": "QyOuvDiG", "odds": 0.5737572583221562, "type": "REWARD_GROUP", "weight": 77}, {"lootBoxItems": [{"count": 42, "duration": 54, "endDate": "1998-04-01T00:00:00Z", "itemId": "wggiuryp", "itemSku": "u83Z4ep7", "itemType": "Uh3o9aCi"}, {"count": 54, "duration": 60, "endDate": "1997-10-13T00:00:00Z", "itemId": "UvKBFGKZ", "itemSku": "rV5dFoSD", "itemType": "TwOUZCTK"}, {"count": 20, "duration": 97, "endDate": "1982-09-05T00:00:00Z", "itemId": "Ruuvy2Yi", "itemSku": "cS2Q47sQ", "itemType": "13RQN1d3"}], "name": "Jbb11foO", "odds": 0.4252368216180741, "type": "REWARD_GROUP", "weight": 70}, {"lootBoxItems": [{"count": 92, "duration": 58, "endDate": "1991-05-15T00:00:00Z", "itemId": "eTwjYG1G", "itemSku": "WY5ceQzI", "itemType": "cDsxzXAw"}, {"count": 98, "duration": 55, "endDate": "1976-07-14T00:00:00Z", "itemId": "mZjDw0OQ", "itemSku": "mq0xmdwe", "itemType": "INWeoRL3"}, {"count": 27, "duration": 6, "endDate": "1992-07-09T00:00:00Z", "itemId": "4O1UOOSg", "itemSku": "jqlcf3Gu", "itemType": "IeUdCrov"}], "name": "bNrqiQ12", "odds": 0.5013709566527439, "type": "REWARD", "weight": 96}], "rollFunction": "CUSTOM"}, "maxCount": 99, "maxCountPerUser": 94, "name": "zNfACxqE", "optionBoxConfig": {"boxItems": [{"count": 92, "duration": 58, "endDate": "1994-04-03T00:00:00Z", "itemId": "HwSn7pmt", "itemSku": "64bdjGqw", "itemType": "ZB0pyP6h"}, {"count": 29, "duration": 8, "endDate": "1999-01-07T00:00:00Z", "itemId": "8LBIFDUm", "itemSku": "zVm4XfPL", "itemType": "6ti1rR3K"}, {"count": 42, "duration": 91, "endDate": "1976-12-23T00:00:00Z", "itemId": "OWXc0og5", "itemSku": "4L0nDhTl", "itemType": "Ru0ecTsD"}]}, "purchasable": false, "recurring": {"cycle": "MONTHLY", "fixedFreeDays": 64, "fixedTrialCycles": 69, "graceDays": 57}, "regionData": {"zsuABh6i": [{"currencyCode": "Y8JdsDdu", "currencyNamespace": "AQZ5TzhX", "currencyType": "VIRTUAL", "discountAmount": 65, "discountExpireAt": "1992-07-17T00:00:00Z", "discountPercentage": 5, "discountPurchaseAt": "1974-08-07T00:00:00Z", "expireAt": "1988-11-19T00:00:00Z", "price": 73, "purchaseAt": "1971-11-15T00:00:00Z", "trialPrice": 82}, {"currencyCode": "4HvlaQCA", "currencyNamespace": "pbJ4M3K7", "currencyType": "REAL", "discountAmount": 21, "discountExpireAt": "1999-03-27T00:00:00Z", "discountPercentage": 29, "discountPurchaseAt": "1980-06-27T00:00:00Z", "expireAt": "1975-01-11T00:00:00Z", "price": 24, "purchaseAt": "1976-09-17T00:00:00Z", "trialPrice": 27}, {"currencyCode": "R2qo2LZR", "currencyNamespace": "bcqYQQB9", "currencyType": "VIRTUAL", "discountAmount": 46, "discountExpireAt": "1988-10-17T00:00:00Z", "discountPercentage": 83, "discountPurchaseAt": "1992-10-27T00:00:00Z", "expireAt": "1991-03-29T00:00:00Z", "price": 16, "purchaseAt": "1984-11-12T00:00:00Z", "trialPrice": 11}], "pc2pinoc": [{"currencyCode": "yBZjWUYo", "currencyNamespace": "J5VfORSF", "currencyType": "VIRTUAL", "discountAmount": 20, "discountExpireAt": "1988-03-07T00:00:00Z", "discountPercentage": 84, "discountPurchaseAt": "1993-01-04T00:00:00Z", "expireAt": "1979-12-28T00:00:00Z", "price": 41, "purchaseAt": "1995-03-31T00:00:00Z", "trialPrice": 69}, {"currencyCode": "d4Nu0nGv", "currencyNamespace": "mh7Wjtr8", "currencyType": "VIRTUAL", "discountAmount": 3, "discountExpireAt": "1980-03-26T00:00:00Z", "discountPercentage": 98, "discountPurchaseAt": "1984-09-05T00:00:00Z", "expireAt": "1993-07-15T00:00:00Z", "price": 98, "purchaseAt": "1985-06-03T00:00:00Z", "trialPrice": 35}, {"currencyCode": "EPWDoyMz", "currencyNamespace": "CtCe6tqt", "currencyType": "VIRTUAL", "discountAmount": 18, "discountExpireAt": "1989-07-16T00:00:00Z", "discountPercentage": 13, "discountPurchaseAt": "1982-08-02T00:00:00Z", "expireAt": "1994-01-11T00:00:00Z", "price": 81, "purchaseAt": "1979-04-02T00:00:00Z", "trialPrice": 1}], "S1Te7gdN": [{"currencyCode": "bVkVC95v", "currencyNamespace": "16r1g92c", "currencyType": "REAL", "discountAmount": 29, "discountExpireAt": "1995-05-02T00:00:00Z", "discountPercentage": 52, "discountPurchaseAt": "1996-06-12T00:00:00Z", "expireAt": "1987-08-24T00:00:00Z", "price": 27, "purchaseAt": "1992-03-17T00:00:00Z", "trialPrice": 47}, {"currencyCode": "IVIWROwQ", "currencyNamespace": "VViUGwqg", "currencyType": "REAL", "discountAmount": 3, "discountExpireAt": "1987-12-08T00:00:00Z", "discountPercentage": 51, "discountPurchaseAt": "1988-05-28T00:00:00Z", "expireAt": "1992-09-13T00:00:00Z", "price": 21, "purchaseAt": "1974-09-28T00:00:00Z", "trialPrice": 62}, {"currencyCode": "SsE3PX7I", "currencyNamespace": "XWEUoCfx", "currencyType": "REAL", "discountAmount": 31, "discountExpireAt": "1992-06-29T00:00:00Z", "discountPercentage": 83, "discountPurchaseAt": "1998-02-12T00:00:00Z", "expireAt": "1990-11-04T00:00:00Z", "price": 99, "purchaseAt": "1981-05-07T00:00:00Z", "trialPrice": 33}]}, "saleConfig": {"currencyCode": "7UuBTH4u", "price": 52}, "seasonType": "TIER", "sectionExclusive": false, "sellable": true, "sku": "1SMwUmpo", "stackable": false, "status": "INACTIVE", "tags": ["6l1jLMJ6", "j1yc0us3", "FC4xLtii"], "targetCurrencyCode": "U083UVka", "targetNamespace": "1OukIbgZ", "thumbnailUrl": "kGMRHeKs", "useCount": 56}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateItem \
    --namespace $AB_NAMESPACE \
    --storeId 'CZx7X4BZ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 112 'CreateItem' test.out

#- 113 GetItemByAppId
$CLI_EXE \
    --sn platform \
    --op GetItemByAppId \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --storeId 'xYftsulm' \
    --appId 'EdrK103E' \
    > test.out 2>&1
eval_tap $? 113 'GetItemByAppId' test.out

#- 114 QueryItems
$CLI_EXE \
    --sn platform \
    --op QueryItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --appType 'DEMO' \
    --availableDate 'g1Y6QsA6' \
    --baseAppId 'SBdZMQIZ' \
    --categoryPath 'veG0XnFM' \
    --features '6gXOfnet' \
    --includeSubCategoryItem 'false' \
    --itemType 'SUBSCRIPTION' \
    --limit '78' \
    --offset '58' \
    --region 'An84AfQX' \
    --sortBy '["createdAt", "createdAt:asc", "displayOrder"]' \
    --storeId '2A9ZxYn2' \
    --tags 'C8Kf0Vee' \
    --targetNamespace '87I7YtOU' \
    > test.out 2>&1
eval_tap $? 114 'QueryItems' test.out

#- 115 ListBasicItemsByFeatures
$CLI_EXE \
    --sn platform \
    --op ListBasicItemsByFeatures \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --features '["BYvG4m57", "ojhcIAVD", "kBZQ6Jf0"]' \
    > test.out 2>&1
eval_tap $? 115 'ListBasicItemsByFeatures' test.out

#- 116 GetItems
$CLI_EXE \
    --sn platform \
    --op GetItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --storeId 'yPTdbcJN' \
    --itemIds 'xp5OdNpn' \
    > test.out 2>&1
eval_tap $? 116 'GetItems' test.out

#- 117 GetItemBySku
$CLI_EXE \
    --sn platform \
    --op GetItemBySku \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --storeId 'OkplN3GB' \
    --sku 'dewv7CEI' \
    > test.out 2>&1
eval_tap $? 117 'GetItemBySku' test.out

#- 118 GetLocaleItemBySku
$CLI_EXE \
    --sn platform \
    --op GetLocaleItemBySku \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --language 'GlI9DFT0' \
    --populateBundle 'true' \
    --region 'p99nNGaC' \
    --storeId 'Xh9YOR7R' \
    --sku 'AUyfbc3j' \
    > test.out 2>&1
eval_tap $? 118 'GetLocaleItemBySku' test.out

#- 119 GetEstimatedPrice
$CLI_EXE \
    --sn platform \
    --op GetEstimatedPrice \
    --namespace $AB_NAMESPACE \
    --platform 'SlJLPBqs' \
    --region 'ighAL1RB' \
    --storeId 'd49qd4W0' \
    --itemIds 'TsT1weTA' \
    --userId 'RVbaiopY' \
    > test.out 2>&1
eval_tap $? 119 'GetEstimatedPrice' test.out

#- 120 GetItemIdBySku
$CLI_EXE \
    --sn platform \
    --op GetItemIdBySku \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --storeId 'B0QE40B6' \
    --sku '4bcsO1js' \
    > test.out 2>&1
eval_tap $? 120 'GetItemIdBySku' test.out

#- 121 GetBulkItemIdBySkus
$CLI_EXE \
    --sn platform \
    --op GetBulkItemIdBySkus \
    --namespace $AB_NAMESPACE \
    --sku '["vJpY9qcv", "08XeNWAI", "cQxBPNXX"]' \
    --storeId 'TWitGoau' \
    > test.out 2>&1
eval_tap $? 121 'GetBulkItemIdBySkus' test.out

#- 122 BulkGetLocaleItems
$CLI_EXE \
    --sn platform \
    --op BulkGetLocaleItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --language 'HK7AnN7q' \
    --region 'kpUd6CBn' \
    --storeId 'HwSvAA7R' \
    --itemIds 'ZsP8E1JT' \
    > test.out 2>&1
eval_tap $? 122 'BulkGetLocaleItems' test.out

#- 123 GetAvailablePredicateTypes
$CLI_EXE \
    --sn platform \
    --op GetAvailablePredicateTypes \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 123 'GetAvailablePredicateTypes' test.out

#- 124 ValidateItemPurchaseCondition
# body param: body
echo '{"itemIds": ["cunrXkbi", "5qiIGtHI", "8Y2hSCVJ"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ValidateItemPurchaseCondition \
    --namespace $AB_NAMESPACE \
    --platform 'dlFXNVdD' \
    --userId 'qj6nk2jv' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 124 'ValidateItemPurchaseCondition' test.out

#- 125 BulkUpdateRegionData
# body param: body
echo '{"changes": [{"itemIdentities": ["4t9sSZ6a", "q0tbK1nn", "CKu4zatO"], "itemIdentityType": "ITEM_ID", "regionData": {"wYQds2SH": [{"currencyCode": "YDF4zLMA", "currencyNamespace": "W9wMDLMY", "currencyType": "VIRTUAL", "discountAmount": 10, "discountExpireAt": "1995-11-11T00:00:00Z", "discountPercentage": 82, "discountPurchaseAt": "1974-06-28T00:00:00Z", "discountedPrice": 31, "expireAt": "1979-02-19T00:00:00Z", "price": 27, "purchaseAt": "1979-10-01T00:00:00Z", "trialPrice": 14}, {"currencyCode": "1Dgqrrbc", "currencyNamespace": "hqCo6Uvi", "currencyType": "VIRTUAL", "discountAmount": 57, "discountExpireAt": "1979-05-19T00:00:00Z", "discountPercentage": 43, "discountPurchaseAt": "1988-06-10T00:00:00Z", "discountedPrice": 59, "expireAt": "1989-03-14T00:00:00Z", "price": 95, "purchaseAt": "1993-05-23T00:00:00Z", "trialPrice": 10}, {"currencyCode": "nPS0uQ1e", "currencyNamespace": "l4DhkWTD", "currencyType": "REAL", "discountAmount": 93, "discountExpireAt": "1994-02-06T00:00:00Z", "discountPercentage": 0, "discountPurchaseAt": "1983-11-16T00:00:00Z", "discountedPrice": 26, "expireAt": "1972-01-27T00:00:00Z", "price": 49, "purchaseAt": "1983-05-10T00:00:00Z", "trialPrice": 62}], "qq3UpXq2": [{"currencyCode": "7a8OArGI", "currencyNamespace": "9fJEZam9", "currencyType": "VIRTUAL", "discountAmount": 20, "discountExpireAt": "1989-01-04T00:00:00Z", "discountPercentage": 26, "discountPurchaseAt": "1981-05-05T00:00:00Z", "discountedPrice": 20, "expireAt": "1971-03-12T00:00:00Z", "price": 13, "purchaseAt": "1999-08-19T00:00:00Z", "trialPrice": 59}, {"currencyCode": "jlkLEOCw", "currencyNamespace": "6r0gco9E", "currencyType": "REAL", "discountAmount": 39, "discountExpireAt": "1983-09-05T00:00:00Z", "discountPercentage": 75, "discountPurchaseAt": "1985-10-01T00:00:00Z", "discountedPrice": 52, "expireAt": "1971-05-24T00:00:00Z", "price": 40, "purchaseAt": "1977-02-16T00:00:00Z", "trialPrice": 37}, {"currencyCode": "Nswc4Mp1", "currencyNamespace": "6v6oXVoO", "currencyType": "REAL", "discountAmount": 72, "discountExpireAt": "1974-03-29T00:00:00Z", "discountPercentage": 48, "discountPurchaseAt": "1986-03-05T00:00:00Z", "discountedPrice": 5, "expireAt": "1986-09-14T00:00:00Z", "price": 14, "purchaseAt": "1973-03-11T00:00:00Z", "trialPrice": 21}], "MsLpxti1": [{"currencyCode": "7pVW7x1Z", "currencyNamespace": "XqyXT1WF", "currencyType": "VIRTUAL", "discountAmount": 79, "discountExpireAt": "1971-12-09T00:00:00Z", "discountPercentage": 19, "discountPurchaseAt": "1996-06-26T00:00:00Z", "discountedPrice": 8, "expireAt": "1976-01-13T00:00:00Z", "price": 4, "purchaseAt": "1990-08-03T00:00:00Z", "trialPrice": 31}, {"currencyCode": "YAx0S6DN", "currencyNamespace": "MqnWaCUr", "currencyType": "VIRTUAL", "discountAmount": 43, "discountExpireAt": "1987-09-29T00:00:00Z", "discountPercentage": 41, "discountPurchaseAt": "1972-10-01T00:00:00Z", "discountedPrice": 83, "expireAt": "1998-01-31T00:00:00Z", "price": 58, "purchaseAt": "1985-10-23T00:00:00Z", "trialPrice": 63}, {"currencyCode": "CnRcBkls", "currencyNamespace": "XwfEvI5a", "currencyType": "REAL", "discountAmount": 77, "discountExpireAt": "1992-01-17T00:00:00Z", "discountPercentage": 94, "discountPurchaseAt": "1984-12-30T00:00:00Z", "discountedPrice": 2, "expireAt": "1983-07-04T00:00:00Z", "price": 47, "purchaseAt": "1985-03-11T00:00:00Z", "trialPrice": 51}]}}, {"itemIdentities": ["GIRqGZTK", "ru2afEvW", "lQLyL6Yc"], "itemIdentityType": "ITEM_ID", "regionData": {"vKI7LQIY": [{"currencyCode": "GnvyDw8d", "currencyNamespace": "BkYMDKul", "currencyType": "REAL", "discountAmount": 52, "discountExpireAt": "1995-11-19T00:00:00Z", "discountPercentage": 25, "discountPurchaseAt": "1987-05-06T00:00:00Z", "discountedPrice": 1, "expireAt": "1996-08-05T00:00:00Z", "price": 98, "purchaseAt": "1985-12-31T00:00:00Z", "trialPrice": 19}, {"currencyCode": "khC03CT3", "currencyNamespace": "tXUnUaBa", "currencyType": "REAL", "discountAmount": 54, "discountExpireAt": "1992-05-30T00:00:00Z", "discountPercentage": 28, "discountPurchaseAt": "1996-08-28T00:00:00Z", "discountedPrice": 86, "expireAt": "1980-09-20T00:00:00Z", "price": 16, "purchaseAt": "1992-06-23T00:00:00Z", "trialPrice": 30}, {"currencyCode": "ezWSD6ga", "currencyNamespace": "pwmWiruI", "currencyType": "VIRTUAL", "discountAmount": 66, "discountExpireAt": "1993-08-17T00:00:00Z", "discountPercentage": 28, "discountPurchaseAt": "1972-06-08T00:00:00Z", "discountedPrice": 100, "expireAt": "1986-01-11T00:00:00Z", "price": 35, "purchaseAt": "1985-05-21T00:00:00Z", "trialPrice": 2}], "FZBq8avQ": [{"currencyCode": "xAfnCpDC", "currencyNamespace": "BchaNys3", "currencyType": "REAL", "discountAmount": 77, "discountExpireAt": "1987-02-14T00:00:00Z", "discountPercentage": 8, "discountPurchaseAt": "1972-10-10T00:00:00Z", "discountedPrice": 26, "expireAt": "1994-09-07T00:00:00Z", "price": 70, "purchaseAt": "1973-05-18T00:00:00Z", "trialPrice": 40}, {"currencyCode": "jRr1kLxy", "currencyNamespace": "aKnBtdNu", "currencyType": "REAL", "discountAmount": 58, "discountExpireAt": "1981-01-14T00:00:00Z", "discountPercentage": 41, "discountPurchaseAt": "1983-01-30T00:00:00Z", "discountedPrice": 95, "expireAt": "1983-06-28T00:00:00Z", "price": 42, "purchaseAt": "1980-11-13T00:00:00Z", "trialPrice": 56}, {"currencyCode": "LC5tQuZn", "currencyNamespace": "xVpFba4k", "currencyType": "REAL", "discountAmount": 76, "discountExpireAt": "1997-02-12T00:00:00Z", "discountPercentage": 91, "discountPurchaseAt": "1978-01-08T00:00:00Z", "discountedPrice": 97, "expireAt": "1986-03-28T00:00:00Z", "price": 63, "purchaseAt": "1974-06-22T00:00:00Z", "trialPrice": 2}], "5Krlr0zl": [{"currencyCode": "JVaDiP6Z", "currencyNamespace": "9D6gddI0", "currencyType": "REAL", "discountAmount": 66, "discountExpireAt": "1999-06-17T00:00:00Z", "discountPercentage": 71, "discountPurchaseAt": "1989-02-13T00:00:00Z", "discountedPrice": 46, "expireAt": "1995-02-22T00:00:00Z", "price": 30, "purchaseAt": "1993-10-09T00:00:00Z", "trialPrice": 19}, {"currencyCode": "XQxYlAuN", "currencyNamespace": "LbgPZVoj", "currencyType": "REAL", "discountAmount": 80, "discountExpireAt": "1983-01-08T00:00:00Z", "discountPercentage": 69, "discountPurchaseAt": "1994-01-28T00:00:00Z", "discountedPrice": 29, "expireAt": "1972-01-19T00:00:00Z", "price": 96, "purchaseAt": "1994-05-11T00:00:00Z", "trialPrice": 1}, {"currencyCode": "FMAgT7Mb", "currencyNamespace": "HJD8JJxb", "currencyType": "VIRTUAL", "discountAmount": 87, "discountExpireAt": "1992-12-16T00:00:00Z", "discountPercentage": 28, "discountPurchaseAt": "1978-11-09T00:00:00Z", "discountedPrice": 0, "expireAt": "1972-08-18T00:00:00Z", "price": 76, "purchaseAt": "1981-06-26T00:00:00Z", "trialPrice": 46}]}}, {"itemIdentities": ["4zY9keQa", "PHjbAide", "cQ2qXJww"], "itemIdentityType": "ITEM_ID", "regionData": {"mZu7qxFJ": [{"currencyCode": "HvWI5TQV", "currencyNamespace": "pnLOljDt", "currencyType": "VIRTUAL", "discountAmount": 54, "discountExpireAt": "1994-01-05T00:00:00Z", "discountPercentage": 8, "discountPurchaseAt": "1996-07-19T00:00:00Z", "discountedPrice": 36, "expireAt": "1999-07-24T00:00:00Z", "price": 17, "purchaseAt": "1971-07-12T00:00:00Z", "trialPrice": 69}, {"currencyCode": "loRTyLSR", "currencyNamespace": "m7QJX3kI", "currencyType": "VIRTUAL", "discountAmount": 61, "discountExpireAt": "1994-10-04T00:00:00Z", "discountPercentage": 78, "discountPurchaseAt": "1974-04-02T00:00:00Z", "discountedPrice": 44, "expireAt": "1995-01-29T00:00:00Z", "price": 66, "purchaseAt": "1980-11-28T00:00:00Z", "trialPrice": 78}, {"currencyCode": "PHBt7ooa", "currencyNamespace": "IiFjQ3E5", "currencyType": "VIRTUAL", "discountAmount": 26, "discountExpireAt": "1994-03-17T00:00:00Z", "discountPercentage": 39, "discountPurchaseAt": "1976-12-12T00:00:00Z", "discountedPrice": 49, "expireAt": "1976-08-20T00:00:00Z", "price": 1, "purchaseAt": "1998-11-11T00:00:00Z", "trialPrice": 91}], "LWbfZUWs": [{"currencyCode": "9gkoFe4m", "currencyNamespace": "bEpx7JXS", "currencyType": "VIRTUAL", "discountAmount": 20, "discountExpireAt": "1981-02-14T00:00:00Z", "discountPercentage": 66, "discountPurchaseAt": "1984-05-22T00:00:00Z", "discountedPrice": 19, "expireAt": "1973-11-26T00:00:00Z", "price": 5, "purchaseAt": "1986-01-21T00:00:00Z", "trialPrice": 30}, {"currencyCode": "aladyMvv", "currencyNamespace": "al9OZnWB", "currencyType": "REAL", "discountAmount": 1, "discountExpireAt": "1985-03-25T00:00:00Z", "discountPercentage": 46, "discountPurchaseAt": "1972-05-08T00:00:00Z", "discountedPrice": 32, "expireAt": "1983-06-23T00:00:00Z", "price": 68, "purchaseAt": "1978-06-16T00:00:00Z", "trialPrice": 85}, {"currencyCode": "IaTyybYa", "currencyNamespace": "ChEExZZH", "currencyType": "REAL", "discountAmount": 59, "discountExpireAt": "1995-09-06T00:00:00Z", "discountPercentage": 96, "discountPurchaseAt": "1985-02-27T00:00:00Z", "discountedPrice": 82, "expireAt": "1997-10-15T00:00:00Z", "price": 35, "purchaseAt": "1977-04-16T00:00:00Z", "trialPrice": 28}], "rXe3xY6W": [{"currencyCode": "uySJuS1e", "currencyNamespace": "EGPm8ANH", "currencyType": "VIRTUAL", "discountAmount": 67, "discountExpireAt": "1990-12-28T00:00:00Z", "discountPercentage": 5, "discountPurchaseAt": "1991-04-20T00:00:00Z", "discountedPrice": 51, "expireAt": "1978-03-17T00:00:00Z", "price": 45, "purchaseAt": "1987-10-27T00:00:00Z", "trialPrice": 33}, {"currencyCode": "P1lfnrr3", "currencyNamespace": "kOA8kYil", "currencyType": "REAL", "discountAmount": 12, "discountExpireAt": "1999-11-19T00:00:00Z", "discountPercentage": 89, "discountPurchaseAt": "1980-04-25T00:00:00Z", "discountedPrice": 34, "expireAt": "1976-12-19T00:00:00Z", "price": 40, "purchaseAt": "1996-04-06T00:00:00Z", "trialPrice": 98}, {"currencyCode": "KFj15axG", "currencyNamespace": "6fvA2Yb7", "currencyType": "VIRTUAL", "discountAmount": 77, "discountExpireAt": "1980-12-23T00:00:00Z", "discountPercentage": 43, "discountPurchaseAt": "1973-11-03T00:00:00Z", "discountedPrice": 26, "expireAt": "1975-08-19T00:00:00Z", "price": 48, "purchaseAt": "1986-05-22T00:00:00Z", "trialPrice": 2}]}}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op BulkUpdateRegionData \
    --namespace $AB_NAMESPACE \
    --storeId '1BAnMqEd' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 125 'BulkUpdateRegionData' test.out

#- 126 SearchItems
$CLI_EXE \
    --sn platform \
    --op SearchItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --itemType 'INGAMEITEM' \
    --limit '21' \
    --offset '22' \
    --sortBy '4VP2cqzL' \
    --storeId 'ivrh7lFA' \
    --keyword 'pKzGfmE4' \
    --language 'I8oAUfyG' \
    > test.out 2>&1
eval_tap $? 126 'SearchItems' test.out

#- 127 QueryUncategorizedItems
$CLI_EXE \
    --sn platform \
    --op QueryUncategorizedItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --limit '65' \
    --offset '21' \
    --sortBy '["createdAt:desc", "displayOrder:asc", "createdAt"]' \
    --storeId 'VobkslsD' \
    > test.out 2>&1
eval_tap $? 127 'QueryUncategorizedItems' test.out

#- 128 GetItem
$CLI_EXE \
    --sn platform \
    --op GetItem \
    --itemId 'CuqDlF6S' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --storeId 'Dj6dsGUo' \
    > test.out 2>&1
eval_tap $? 128 'GetItem' test.out

#- 129 UpdateItem
# body param: body
echo '{"appId": "XOZLNw65", "appType": "GAME", "baseAppId": "emeqviU6", "boothName": "IYIkqp2X", "categoryPath": "tpSy5HKF", "clazz": "HfqxUDtm", "displayOrder": 78, "entitlementType": "CONSUMABLE", "ext": {"NaDJdlht": {}, "EPzd9qXi": {}, "Jq2IUPY0": {}}, "features": ["GgtY4VqY", "m7I44SWg", "6fdAGStN"], "flexible": true, "images": [{"as": "LGXsZ2GT", "caption": "bdXqjxJO", "height": 83, "imageUrl": "sE7nDnJY", "smallImageUrl": "zj315c00", "width": 95}, {"as": "lIbCNnGz", "caption": "tMa4ZCe5", "height": 73, "imageUrl": "fUxqhRmF", "smallImageUrl": "ioFVHIxO", "width": 58}, {"as": "2HjGF3fo", "caption": "pXxiRIw2", "height": 70, "imageUrl": "wNEjBCSj", "smallImageUrl": "oKuAOLxd", "width": 24}], "inventoryConfig": {"customAttributes": {"m88z9BfS": {}, "xKLCEpsg": {}, "P7I3A08M": {}}, "serverCustomAttributes": {"hD7s2ZiM": {}, "2DKwx6du": {}, "r664wYdj": {}}, "slotUsed": 48}, "itemIds": ["Bg1AQPkF", "0yB9iEHt", "U8R9QqjI"], "itemQty": {"n3qoTMVn": 2, "3mz0r4Ml": 91, "dIGDz3zr": 77}, "itemType": "OPTIONBOX", "listable": true, "localizations": {"CPAhHe7R": {"description": "wHZJ56f8", "localExt": {"8HT3d48t": {}, "rUdoyMaT": {}, "wKfrDn4B": {}}, "longDescription": "vJ3ECXM6", "title": "301eR3ZM"}, "hpbfC1Wq": {"description": "xMXJMaSk", "localExt": {"TFlmYfLT": {}, "2z8yzIFr": {}, "acu3B9fr": {}}, "longDescription": "6UhQhLzP", "title": "EnQhXSRi"}, "7lohKVlp": {"description": "kaGq9LkQ", "localExt": {"EC8pUnEU": {}, "4mqpqr8P": {}, "6JeaNzYd": {}}, "longDescription": "mw5YERVn", "title": "7b6Mko0c"}}, "lootBoxConfig": {"rewardCount": 99, "rewards": [{"lootBoxItems": [{"count": 41, "duration": 17, "endDate": "1983-04-11T00:00:00Z", "itemId": "i3SjgoDV", "itemSku": "gCcv8MVV", "itemType": "pRCUtw4T"}, {"count": 58, "duration": 78, "endDate": "1998-11-04T00:00:00Z", "itemId": "twL2P56h", "itemSku": "1syu65ku", "itemType": "TXO0EJJF"}, {"count": 7, "duration": 97, "endDate": "1998-09-19T00:00:00Z", "itemId": "5pQ7wNc0", "itemSku": "alx0POlo", "itemType": "OFl4qeel"}], "name": "aC06a7ci", "odds": 0.9313000023170694, "type": "PROBABILITY_GROUP", "weight": 98}, {"lootBoxItems": [{"count": 96, "duration": 96, "endDate": "1987-11-18T00:00:00Z", "itemId": "1TC48F2r", "itemSku": "jyoxOi26", "itemType": "WKehlyTJ"}, {"count": 4, "duration": 27, "endDate": "1979-09-05T00:00:00Z", "itemId": "r5mk8tPH", "itemSku": "cBbe49dU", "itemType": "X6Ozbbva"}, {"count": 46, "duration": 23, "endDate": "1978-07-05T00:00:00Z", "itemId": "ucGJBInc", "itemSku": "I1a06aPz", "itemType": "c2ALszoy"}], "name": "Q6y19zLn", "odds": 0.026172014584652237, "type": "REWARD_GROUP", "weight": 92}, {"lootBoxItems": [{"count": 4, "duration": 62, "endDate": "1979-09-08T00:00:00Z", "itemId": "pxk9D4n1", "itemSku": "CTBczkV1", "itemType": "whjGIeZZ"}, {"count": 37, "duration": 19, "endDate": "1984-04-28T00:00:00Z", "itemId": "0e2DwqtX", "itemSku": "VhrOAiMP", "itemType": "IkQiifrY"}, {"count": 66, "duration": 68, "endDate": "1972-11-07T00:00:00Z", "itemId": "ZHBnqhMl", "itemSku": "xXwyxy3n", "itemType": "UwwM6OBP"}], "name": "1xCDT4b4", "odds": 0.059702797813366626, "type": "REWARD", "weight": 44}], "rollFunction": "CUSTOM"}, "maxCount": 30, "maxCountPerUser": 99, "name": "IE3gHevn", "optionBoxConfig": {"boxItems": [{"count": 3, "duration": 31, "endDate": "1996-01-10T00:00:00Z", "itemId": "olkxFdCh", "itemSku": "iawOYRpP", "itemType": "4cCDbsao"}, {"count": 2, "duration": 41, "endDate": "1976-01-08T00:00:00Z", "itemId": "NzWsjOli", "itemSku": "gvbL0Wo9", "itemType": "ekRXxXkF"}, {"count": 67, "duration": 13, "endDate": "1983-09-04T00:00:00Z", "itemId": "UJLNxpnx", "itemSku": "iCQvPHLM", "itemType": "somUblin"}]}, "purchasable": false, "recurring": {"cycle": "YEARLY", "fixedFreeDays": 39, "fixedTrialCycles": 37, "graceDays": 48}, "regionData": {"p0QzC7wC": [{"currencyCode": "PxlWnPjy", "currencyNamespace": "S88ssgJF", "currencyType": "VIRTUAL", "discountAmount": 44, "discountExpireAt": "1986-10-14T00:00:00Z", "discountPercentage": 67, "discountPurchaseAt": "1973-10-16T00:00:00Z", "expireAt": "1991-01-24T00:00:00Z", "price": 52, "purchaseAt": "1983-09-10T00:00:00Z", "trialPrice": 3}, {"currencyCode": "yEhUon94", "currencyNamespace": "2YauPaNy", "currencyType": "REAL", "discountAmount": 54, "discountExpireAt": "1985-12-11T00:00:00Z", "discountPercentage": 66, "discountPurchaseAt": "1972-07-28T00:00:00Z", "expireAt": "1988-03-05T00:00:00Z", "price": 43, "purchaseAt": "1985-03-08T00:00:00Z", "trialPrice": 2}, {"currencyCode": "yOOAq0Lu", "currencyNamespace": "TMXWENv5", "currencyType": "REAL", "discountAmount": 47, "discountExpireAt": "1981-04-01T00:00:00Z", "discountPercentage": 59, "discountPurchaseAt": "1976-02-18T00:00:00Z", "expireAt": "1992-01-01T00:00:00Z", "price": 22, "purchaseAt": "1973-12-29T00:00:00Z", "trialPrice": 40}], "UEzT4Dbh": [{"currencyCode": "RMOdc4Rq", "currencyNamespace": "2E1wL1GB", "currencyType": "REAL", "discountAmount": 44, "discountExpireAt": "1982-01-31T00:00:00Z", "discountPercentage": 85, "discountPurchaseAt": "1986-10-20T00:00:00Z", "expireAt": "1981-12-04T00:00:00Z", "price": 26, "purchaseAt": "1974-06-07T00:00:00Z", "trialPrice": 37}, {"currencyCode": "T1xdkDwC", "currencyNamespace": "7p7kJlrM", "currencyType": "VIRTUAL", "discountAmount": 95, "discountExpireAt": "1990-04-21T00:00:00Z", "discountPercentage": 35, "discountPurchaseAt": "1996-07-30T00:00:00Z", "expireAt": "1984-10-16T00:00:00Z", "price": 98, "purchaseAt": "1973-04-18T00:00:00Z", "trialPrice": 36}, {"currencyCode": "49GVaUXm", "currencyNamespace": "ueOCW9zz", "currencyType": "VIRTUAL", "discountAmount": 83, "discountExpireAt": "1974-10-10T00:00:00Z", "discountPercentage": 65, "discountPurchaseAt": "1997-12-24T00:00:00Z", "expireAt": "1979-05-10T00:00:00Z", "price": 4, "purchaseAt": "1990-01-02T00:00:00Z", "trialPrice": 95}], "YWLo8Xxc": [{"currencyCode": "QaRNyVzK", "currencyNamespace": "cakJDQZY", "currencyType": "VIRTUAL", "discountAmount": 83, "discountExpireAt": "1992-01-14T00:00:00Z", "discountPercentage": 42, "discountPurchaseAt": "1974-01-19T00:00:00Z", "expireAt": "1990-06-04T00:00:00Z", "price": 38, "purchaseAt": "1974-02-06T00:00:00Z", "trialPrice": 86}, {"currencyCode": "ZxImaalX", "currencyNamespace": "wWt1CWoB", "currencyType": "REAL", "discountAmount": 90, "discountExpireAt": "1998-07-30T00:00:00Z", "discountPercentage": 98, "discountPurchaseAt": "1985-03-01T00:00:00Z", "expireAt": "1996-11-26T00:00:00Z", "price": 80, "purchaseAt": "1993-12-25T00:00:00Z", "trialPrice": 92}, {"currencyCode": "brjsk4Q5", "currencyNamespace": "dNhruw21", "currencyType": "REAL", "discountAmount": 81, "discountExpireAt": "1997-01-18T00:00:00Z", "discountPercentage": 92, "discountPurchaseAt": "1975-04-01T00:00:00Z", "expireAt": "1990-03-28T00:00:00Z", "price": 76, "purchaseAt": "1983-06-17T00:00:00Z", "trialPrice": 99}]}, "saleConfig": {"currencyCode": "iLvmrWmA", "price": 28}, "seasonType": "TIER", "sectionExclusive": true, "sellable": true, "sku": "6M73BIIy", "stackable": true, "status": "ACTIVE", "tags": ["TaYyefLf", "lR3ljtiq", "W7Gjo0WA"], "targetCurrencyCode": "XfL5tOHY", "targetNamespace": "KGojYoNL", "thumbnailUrl": "vVqb2Se1", "useCount": 12}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateItem \
    --itemId 'WshkPvCj' \
    --namespace $AB_NAMESPACE \
    --storeId 'QY9E12IS' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 129 'UpdateItem' test.out

#- 130 DeleteItem
$CLI_EXE \
    --sn platform \
    --op DeleteItem \
    --itemId 'N9Gu6peg' \
    --namespace $AB_NAMESPACE \
    --force 'true' \
    --storeId '4zblUR5t' \
    > test.out 2>&1
eval_tap $? 130 'DeleteItem' test.out

#- 131 AcquireItem
# body param: body
echo '{"count": 18, "orderNo": "lZefdYcH"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op AcquireItem \
    --itemId 'QRqyC8C3' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 131 'AcquireItem' test.out

#- 132 GetApp
$CLI_EXE \
    --sn platform \
    --op GetApp \
    --itemId 'hcqAChCr' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --storeId 'qtlIybKc' \
    > test.out 2>&1
eval_tap $? 132 'GetApp' test.out

#- 133 UpdateApp
# body param: body
echo '{"carousel": [{"alt": "8uaynclP", "previewUrl": "NxGOM6je", "thumbnailUrl": "fFuRZXHT", "type": "video", "url": "ehYQfH14", "videoSource": "generic"}, {"alt": "qE4HQDI7", "previewUrl": "QhqehtRE", "thumbnailUrl": "2CulPx9X", "type": "video", "url": "wN3xoXY0", "videoSource": "generic"}, {"alt": "sC4e00rZ", "previewUrl": "cgW7M6qC", "thumbnailUrl": "2jTK3usc", "type": "image", "url": "lTaD5KKE", "videoSource": "generic"}], "developer": "u6UZI9QI", "forumUrl": "fSJpzxh3", "genres": ["MassivelyMultiplayer", "Action", "Simulation"], "localizations": {"MrIQpwKE": {"announcement": "l9DBfts9", "slogan": "Y7xbw5XW"}, "7cNnQtba": {"announcement": "4FoxMC4H", "slogan": "PrvvF2X0"}, "rriZzWVc": {"announcement": "e5SAzeEs", "slogan": "DPfTNUfM"}}, "platformRequirements": {"SF9eBi3A": [{"additionals": "6oKOxpoo", "directXVersion": "u9i77MD5", "diskSpace": "ydG230KW", "graphics": "7DcV1llJ", "label": "GtOF3PpB", "osVersion": "1T5ZPcmq", "processor": "0AcEJKZJ", "ram": "bSUr0YF4", "soundCard": "MuowdWQ7"}, {"additionals": "FelbkAUl", "directXVersion": "thAAqn4M", "diskSpace": "myKX57gN", "graphics": "ueIs5JP7", "label": "qJMc4N1V", "osVersion": "68AjiZun", "processor": "6ngnOs2F", "ram": "k4gcXJg3", "soundCard": "VSC70oKL"}, {"additionals": "pl72oPrp", "directXVersion": "qDIM028r", "diskSpace": "cgbyaH4z", "graphics": "AhFCB36s", "label": "8hgsuNzG", "osVersion": "teDFaBCT", "processor": "cdfoVb7T", "ram": "oq4Gtnks", "soundCard": "ObgnIYVO"}], "t3DZc9jq": [{"additionals": "A8pFAIQa", "directXVersion": "SrCEmKHL", "diskSpace": "aMHIEilg", "graphics": "mFU1vnAl", "label": "FWUjZ6gy", "osVersion": "TsZ5QKwT", "processor": "xqydOJzf", "ram": "hkVzQSso", "soundCard": "MYF8eadv"}, {"additionals": "g93T6a5W", "directXVersion": "kTofHgHg", "diskSpace": "qWzs4Iin", "graphics": "GNcK8rjf", "label": "rWSOmAOC", "osVersion": "C1Miv88x", "processor": "qdSwixKa", "ram": "8u8Eppa5", "soundCard": "SPwzlxlp"}, {"additionals": "CHiAMboA", "directXVersion": "ocKgnKgs", "diskSpace": "6d99Z0wB", "graphics": "5UzwG6pj", "label": "a1hyLVnO", "osVersion": "cyZ2681d", "processor": "fVWnuBej", "ram": "hj9uyW1t", "soundCard": "3DuQCqwI"}], "6GnDUZpk": [{"additionals": "U5tfuceZ", "directXVersion": "6u8cdT14", "diskSpace": "XNDDxXDe", "graphics": "ZsegoV1J", "label": "2INXXSJN", "osVersion": "yRENWwIA", "processor": "za4LJugr", "ram": "itcXIZu5", "soundCard": "X53FRWcK"}, {"additionals": "jRqk6a0F", "directXVersion": "Ssh8UtqV", "diskSpace": "ShqjMdl1", "graphics": "vItD7CBN", "label": "T6XKmwES", "osVersion": "hT0h68as", "processor": "CL60f6OU", "ram": "BKO07h73", "soundCard": "0eT78g3C"}, {"additionals": "aVUUfHLw", "directXVersion": "3opPhxHF", "diskSpace": "8nQ9O2w1", "graphics": "K5joBjey", "label": "AkbiTokn", "osVersion": "zTD9Zld9", "processor": "KDpl1xJJ", "ram": "E9G8ZOtF", "soundCard": "TM17rkD3"}]}, "platforms": ["Android", "Android", "Linux"], "players": ["Single", "Multi", "MMO"], "primaryGenre": "Strategy", "publisher": "7oDqg2kP", "releaseDate": "1975-07-26T00:00:00Z", "websiteUrl": "LxqSVin7"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateApp \
    --itemId 'VUmXmtPf' \
    --namespace $AB_NAMESPACE \
    --storeId 'qsOCojDY' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 133 'UpdateApp' test.out

#- 134 DisableItem
$CLI_EXE \
    --sn platform \
    --op DisableItem \
    --itemId 'z3Ez4O4g' \
    --namespace $AB_NAMESPACE \
    --storeId 'Y96yeYh1' \
    > test.out 2>&1
eval_tap $? 134 'DisableItem' test.out

#- 135 GetItemDynamicData
$CLI_EXE \
    --sn platform \
    --op GetItemDynamicData \
    --itemId 'FwM1Mh71' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 135 'GetItemDynamicData' test.out

#- 136 EnableItem
$CLI_EXE \
    --sn platform \
    --op EnableItem \
    --itemId 'S8OdJzQr' \
    --namespace $AB_NAMESPACE \
    --storeId 'e2OwpV5O' \
    > test.out 2>&1
eval_tap $? 136 'EnableItem' test.out

#- 137 FeatureItem
$CLI_EXE \
    --sn platform \
    --op FeatureItem \
    --feature '9f9q9jjT' \
    --itemId 'nHmSD2BL' \
    --namespace $AB_NAMESPACE \
    --storeId 'Yz9w6y7d' \
    > test.out 2>&1
eval_tap $? 137 'FeatureItem' test.out

#- 138 DefeatureItem
$CLI_EXE \
    --sn platform \
    --op DefeatureItem \
    --feature 'yEaV6mWf' \
    --itemId '7gmmMdhE' \
    --namespace $AB_NAMESPACE \
    --storeId 'Iz9d7JVe' \
    > test.out 2>&1
eval_tap $? 138 'DefeatureItem' test.out

#- 139 GetLocaleItem
$CLI_EXE \
    --sn platform \
    --op GetLocaleItem \
    --itemId 'xuy5ToiF' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --language 'CtwB8aE6' \
    --populateBundle 'false' \
    --region 'N4pgVKXE' \
    --storeId 'gOrzBWb2' \
    > test.out 2>&1
eval_tap $? 139 'GetLocaleItem' test.out

#- 140 UpdateItemPurchaseCondition
# body param: body
echo '{"purchaseCondition": {"conditionGroups": [{"operator": "or", "predicates": [{"anyOf": 53, "code": "7ZYr5JZ8", "comparison": "isGreaterThanOrEqual", "name": "lrnaoS8Y", "predicateType": "EntitlementPredicate", "value": "G14JBwC4", "values": ["pXrtFBIz", "tDGrvbCc", "tg3evspO"]}, {"anyOf": 9, "code": "Z7hIn3RP", "comparison": "isGreaterThan", "name": "lEcuKTM0", "predicateType": "SeasonTierPredicate", "value": "utx5W84m", "values": ["mVHOLWxw", "Jz9ffbGR", "jXBC4gRs"]}, {"anyOf": 84, "code": "NcgJ84FR", "comparison": "isGreaterThanOrEqual", "name": "Ai8TLA8u", "predicateType": "EntitlementPredicate", "value": "3mnynnYb", "values": ["LHdEQLTB", "V18ltlao", "l3Kqq53l"]}]}, {"operator": "or", "predicates": [{"anyOf": 65, "code": "jbaOHeBR", "comparison": "excludes", "name": "kf5cQJCI", "predicateType": "EntitlementPredicate", "value": "GGFv96Hk", "values": ["zgTARChe", "QF8hezv7", "hTFLf9l4"]}, {"anyOf": 65, "code": "4fejprAD", "comparison": "isGreaterThanOrEqual", "name": "9ziPGfBA", "predicateType": "EntitlementPredicate", "value": "F2cibrVH", "values": ["88b6Kw5e", "laflj1Lp", "D71ds9zS"]}, {"anyOf": 10, "code": "9wofaNJd", "comparison": "excludes", "name": "OsknJcHw", "predicateType": "StatisticCodePredicate", "value": "5fasjfE2", "values": ["32b09XHL", "hb33Poiv", "0IicEVum"]}]}, {"operator": "and", "predicates": [{"anyOf": 2, "code": "XFDHhf9q", "comparison": "isLessThanOrEqual", "name": "LvTJETOs", "predicateType": "SeasonTierPredicate", "value": "RLg2pfgj", "values": ["MQbrGcat", "zTuAfG01", "InPXxj0p"]}, {"anyOf": 42, "code": "s9DsppwG", "comparison": "isLessThanOrEqual", "name": "2kPqbwIO", "predicateType": "StatisticCodePredicate", "value": "2EF9uXK4", "values": ["dEEVic4k", "LWvBdSne", "Az8FlJpW"]}, {"anyOf": 87, "code": "Rukr98MC", "comparison": "isGreaterThan", "name": "oBHWfmSd", "predicateType": "StatisticCodePredicate", "value": "RAo0oYE1", "values": ["p4WuGZzp", "Jwpcq92x", "0sVjSEtj"]}]}]}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateItemPurchaseCondition \
    --itemId 'd7lvw3yF' \
    --namespace $AB_NAMESPACE \
    --storeId 'd5vEVnLm' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 140 'UpdateItemPurchaseCondition' test.out

#- 141 ReturnItem
# body param: body
echo '{"orderNo": "QGW10DWV"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ReturnItem \
    --itemId 'r9XMmj4f' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 141 'ReturnItem' test.out

#- 142 QueryKeyGroups
$CLI_EXE \
    --sn platform \
    --op QueryKeyGroups \
    --namespace $AB_NAMESPACE \
    --limit '54' \
    --name '2km58PmD' \
    --offset '42' \
    --tag 'WBqRkxkG' \
    > test.out 2>&1
eval_tap $? 142 'QueryKeyGroups' test.out

#- 143 CreateKeyGroup
# body param: body
echo '{"description": "M0rEyxsX", "name": "tw6CjTgO", "status": "ACTIVE", "tags": ["wf5aBvhT", "giMwLf8P", "3W3BUyT9"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateKeyGroup \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 143 'CreateKeyGroup' test.out

#- 144 GetKeyGroupByBoothName
eval_tap 0 144 'GetKeyGroupByBoothName # SKIP deprecated' test.out

#- 145 GetKeyGroup
$CLI_EXE \
    --sn platform \
    --op GetKeyGroup \
    --keyGroupId 'z5LjMhaM' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 145 'GetKeyGroup' test.out

#- 146 UpdateKeyGroup
# body param: body
echo '{"description": "jUQuk0iM", "name": "2AQ3B8Tp", "status": "INACTIVE", "tags": ["GCMrtmOC", "doLL77Wc", "24QEcb2M"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateKeyGroup \
    --keyGroupId 'pb9fs0Mb' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 146 'UpdateKeyGroup' test.out

#- 147 GetKeyGroupDynamic
$CLI_EXE \
    --sn platform \
    --op GetKeyGroupDynamic \
    --keyGroupId 'sJ9leOvi' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 147 'GetKeyGroupDynamic' test.out

#- 148 ListKeys
$CLI_EXE \
    --sn platform \
    --op ListKeys \
    --keyGroupId 'lktaDySG' \
    --namespace $AB_NAMESPACE \
    --limit '70' \
    --offset '84' \
    --status 'ACTIVE' \
    > test.out 2>&1
eval_tap $? 148 'ListKeys' test.out

#- 149 UploadKeys
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UploadKeys \
    --keyGroupId 'Xes4vLfL' \
    --namespace $AB_NAMESPACE \
    --upload file $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 149 'UploadKeys' test.out

#- 150 QueryOrders
$CLI_EXE \
    --sn platform \
    --op QueryOrders \
    --namespace $AB_NAMESPACE \
    --endTime 'DYtPC3tt' \
    --limit '7' \
    --offset '70' \
    --orderNos '["HYRGejJR", "csFgTQDK", "cgvWIY7X"]' \
    --sortBy 'QTOV6V4G' \
    --startTime 'rolZffbR' \
    --status 'REFUNDING' \
    --withTotal 'true' \
    > test.out 2>&1
eval_tap $? 150 'QueryOrders' test.out

#- 151 GetOrderStatistics
$CLI_EXE \
    --sn platform \
    --op GetOrderStatistics \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 151 'GetOrderStatistics' test.out

#- 152 GetOrder
$CLI_EXE \
    --sn platform \
    --op GetOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'BFfGjO87' \
    > test.out 2>&1
eval_tap $? 152 'GetOrder' test.out

#- 153 RefundOrder
# body param: body
echo '{"description": "e01Inc2y"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RefundOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'SiSmKFDb' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 153 'RefundOrder' test.out

#- 154 GetPaymentCallbackConfig
$CLI_EXE \
    --sn platform \
    --op GetPaymentCallbackConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 154 'GetPaymentCallbackConfig' test.out

#- 155 UpdatePaymentCallbackConfig
# body param: body
echo '{"dryRun": true, "notifyUrl": "0gOrEgLA", "privateKey": "sAuaakiB"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePaymentCallbackConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 155 'UpdatePaymentCallbackConfig' test.out

#- 156 GetPaymentMerchantConfig
$CLI_EXE \
    --sn platform \
    --op GetPaymentMerchantConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 156 'GetPaymentMerchantConfig' test.out

#- 157 UpdatePaymentDomainWhitelistConfig
# body param: body
echo '{"domains": ["coMIRPQD", "8xKbUqwF", "V4PalvkL"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePaymentDomainWhitelistConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 157 'UpdatePaymentDomainWhitelistConfig' test.out

#- 158 QueryPaymentNotifications
$CLI_EXE \
    --sn platform \
    --op QueryPaymentNotifications \
    --namespace $AB_NAMESPACE \
    --endDate 'l1pOcSAh' \
    --externalId 'VxHqzM7B' \
    --limit '54' \
    --notificationSource 'STRIPE' \
    --notificationType 'f3zYkf0g' \
    --offset '77' \
    --paymentOrderNo 'iAW2BQXc' \
    --startDate 'z1sygeSb' \
    --status 'PROCESSED' \
    > test.out 2>&1
eval_tap $? 158 'QueryPaymentNotifications' test.out

#- 159 QueryPaymentOrders
$CLI_EXE \
    --sn platform \
    --op QueryPaymentOrders \
    --namespace $AB_NAMESPACE \
    --channel 'EXTERNAL' \
    --extTxId '9EWeBIz4' \
    --limit '22' \
    --offset '66' \
    --status 'CHARGEBACK_REVERSED' \
    > test.out 2>&1
eval_tap $? 159 'QueryPaymentOrders' test.out

#- 160 CreatePaymentOrderByDedicated
# body param: body
echo '{"currencyCode": "DALzcvAC", "currencyNamespace": "TPjNQbko", "customParameters": {"XpUf4q61": {}, "pqFgKHhE": {}, "WoqZdVM6": {}}, "description": "S1fh4RWF", "extOrderNo": "BopNqHvf", "extUserId": "HJS7dILZ", "itemType": "SUBSCRIPTION", "language": "rghn", "metadata": {"RMahaBYi": "QTwQkBbE", "jQLG7zzk": "UTgaGjuu", "gxPBHFiW": "kTLzmDSW"}, "notifyUrl": "rTvEO5Yv", "omitNotification": false, "platform": "XHjK7pMN", "price": 8, "recurringPaymentOrderNo": "mBvEt5ix", "region": "1gTwGCOJ", "returnUrl": "bYVVsNwm", "sandbox": false, "sku": "vDBNhoo4", "subscriptionId": "lJLoVxw3", "targetNamespace": "8oLTn6ej", "targetUserId": "DQH1aVlB", "title": "Py40hn83"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreatePaymentOrderByDedicated \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 160 'CreatePaymentOrderByDedicated' test.out

#- 161 ListExtOrderNoByExtTxId
$CLI_EXE \
    --sn platform \
    --op ListExtOrderNoByExtTxId \
    --namespace $AB_NAMESPACE \
    --extTxId 'cJWdgqus' \
    > test.out 2>&1
eval_tap $? 161 'ListExtOrderNoByExtTxId' test.out

#- 162 GetPaymentOrder
$CLI_EXE \
    --sn platform \
    --op GetPaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo '4lD71LUa' \
    > test.out 2>&1
eval_tap $? 162 'GetPaymentOrder' test.out

#- 163 ChargePaymentOrder
# body param: body
echo '{"extTxId": "WKpbCZzh", "paymentMethod": "VGeoAMjf", "paymentProvider": "PAYPAL"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ChargePaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo '32qfylHP' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 163 'ChargePaymentOrder' test.out

#- 164 RefundPaymentOrderByDedicated
# body param: body
echo '{"description": "ndjVukJI"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RefundPaymentOrderByDedicated \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'TMslY0r8' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 164 'RefundPaymentOrderByDedicated' test.out

#- 165 SimulatePaymentOrderNotification
# body param: body
echo '{"amount": 90, "currencyCode": "sVmxxcl0", "notifyType": "CHARGE", "paymentProvider": "WXPAY", "salesTax": 65, "vat": 55}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SimulatePaymentOrderNotification \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'Vfi3DrvZ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 165 'SimulatePaymentOrderNotification' test.out

#- 166 GetPaymentOrderChargeStatus
$CLI_EXE \
    --sn platform \
    --op GetPaymentOrderChargeStatus \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'Acpau4Pz' \
    > test.out 2>&1
eval_tap $? 166 'GetPaymentOrderChargeStatus' test.out

#- 167 GetPsnEntitlementOwnership
# body param: body
echo '{"accessToken": "2z6Yn4Bh", "serviceLabel": 61}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op GetPsnEntitlementOwnership \
    --entitlementLabel 'yYs1MWEX' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 167 'GetPsnEntitlementOwnership' test.out

#- 168 GetXboxEntitlementOwnership
# body param: body
echo '{"delegationToken": "EuHaElY4", "sandboxId": "xRlYLfpP"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op GetXboxEntitlementOwnership \
    --namespace $AB_NAMESPACE \
    --productSku 'CchtdfoB' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 168 'GetXboxEntitlementOwnership' test.out

#- 169 GetPlatformEntitlementConfig
$CLI_EXE \
    --sn platform \
    --op GetPlatformEntitlementConfig \
    --namespace $AB_NAMESPACE \
    --platform 'Nintendo' \
    > test.out 2>&1
eval_tap $? 169 'GetPlatformEntitlementConfig' test.out

#- 170 UpdatePlatformEntitlementConfig
# body param: body
echo '{"allowedPlatformOrigins": ["IOS", "Xbox", "Epic"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePlatformEntitlementConfig \
    --namespace $AB_NAMESPACE \
    --platform 'Epic' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 170 'UpdatePlatformEntitlementConfig' test.out

#- 171 GetPlatformWalletConfig
$CLI_EXE \
    --sn platform \
    --op GetPlatformWalletConfig \
    --namespace $AB_NAMESPACE \
    --platform 'Other' \
    > test.out 2>&1
eval_tap $? 171 'GetPlatformWalletConfig' test.out

#- 172 UpdatePlatformWalletConfig
# body param: body
echo '{"allowedBalanceOrigins": ["Steam", "Nintendo", "Oculus"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePlatformWalletConfig \
    --namespace $AB_NAMESPACE \
    --platform 'Playstation' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 172 'UpdatePlatformWalletConfig' test.out

#- 173 ResetPlatformWalletConfig
$CLI_EXE \
    --sn platform \
    --op ResetPlatformWalletConfig \
    --namespace $AB_NAMESPACE \
    --platform 'Oculus' \
    > test.out 2>&1
eval_tap $? 173 'ResetPlatformWalletConfig' test.out

#- 174 GetRevocationConfig
$CLI_EXE \
    --sn platform \
    --op GetRevocationConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 174 'GetRevocationConfig' test.out

#- 175 UpdateRevocationConfig
# body param: body
echo '{"entitlement": {"consumable": {"enabled": true, "strategy": "CUSTOM"}, "durable": {"enabled": false, "strategy": "CUSTOM"}}, "wallet": {"enabled": false, "strategy": "REVOKE_OR_REPORT"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateRevocationConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 175 'UpdateRevocationConfig' test.out

#- 176 DeleteRevocationConfig
$CLI_EXE \
    --sn platform \
    --op DeleteRevocationConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 176 'DeleteRevocationConfig' test.out

#- 177 QueryRevocationHistories
$CLI_EXE \
    --sn platform \
    --op QueryRevocationHistories \
    --namespace $AB_NAMESPACE \
    --endTime 'OadSC3c0' \
    --limit '6' \
    --offset '99' \
    --source 'ORDER' \
    --startTime 'Lpk7cx9i' \
    --status 'FAIL' \
    --transactionId '6P3IODJw' \
    --userId 'C5kLEC9D' \
    > test.out 2>&1
eval_tap $? 177 'QueryRevocationHistories' test.out

#- 178 GetRevocationPluginConfig
$CLI_EXE \
    --sn platform \
    --op GetRevocationPluginConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 178 'GetRevocationPluginConfig' test.out

#- 179 UpdateRevocationPluginConfig
# body param: body
echo '{"appConfig": {"appName": "lbWyeoB9"}, "customConfig": {"connectionType": "TLS", "grpcServerAddress": "SANYFXOC"}, "extendType": "CUSTOM"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateRevocationPluginConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 179 'UpdateRevocationPluginConfig' test.out

#- 180 DeleteRevocationPluginConfig
$CLI_EXE \
    --sn platform \
    --op DeleteRevocationPluginConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 180 'DeleteRevocationPluginConfig' test.out

#- 181 UploadRevocationPluginConfigCert
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UploadRevocationPluginConfigCert \
    --namespace $AB_NAMESPACE \
    --upload file $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 181 'UploadRevocationPluginConfigCert' test.out

#- 182 CreateReward
# body param: body
echo '{"description": "Iqcguw7e", "eventTopic": "mwX4JF1G", "maxAwarded": 65, "maxAwardedPerUser": 88, "namespaceExpression": "TiGQuVWK", "rewardCode": "OfJjh3j6", "rewardConditions": [{"condition": "w9wR3uuM", "conditionName": "1twiFQom", "eventName": "2rqhCPCj", "rewardItems": [{"duration": 42, "endDate": "1984-10-08T00:00:00Z", "identityType": "ITEM_ID", "itemId": "XgZDGyH6", "quantity": 13, "sku": "h1G7Nhgh"}, {"duration": 60, "endDate": "1985-03-14T00:00:00Z", "identityType": "ITEM_SKU", "itemId": "RbUjPaaM", "quantity": 59, "sku": "i3EqXS05"}, {"duration": 80, "endDate": "1973-11-09T00:00:00Z", "identityType": "ITEM_ID", "itemId": "yHreYH7r", "quantity": 83, "sku": "aiTpC0AK"}]}, {"condition": "5DhwAftD", "conditionName": "IcMDpWzO", "eventName": "xRQax1bS", "rewardItems": [{"duration": 5, "endDate": "1982-09-21T00:00:00Z", "identityType": "ITEM_ID", "itemId": "GkCt6Ccs", "quantity": 73, "sku": "smzfFmIr"}, {"duration": 26, "endDate": "1978-07-10T00:00:00Z", "identityType": "ITEM_SKU", "itemId": "UTffKMUb", "quantity": 94, "sku": "JeS5ws0O"}, {"duration": 74, "endDate": "1983-07-29T00:00:00Z", "identityType": "ITEM_SKU", "itemId": "inJdLmW6", "quantity": 96, "sku": "KSySTBAH"}]}, {"condition": "Hp220uyO", "conditionName": "hMQerRUB", "eventName": "y0YZitSk", "rewardItems": [{"duration": 66, "endDate": "1996-01-05T00:00:00Z", "identityType": "ITEM_SKU", "itemId": "X5h9Df5l", "quantity": 22, "sku": "veK3CuzP"}, {"duration": 26, "endDate": "1989-03-17T00:00:00Z", "identityType": "ITEM_ID", "itemId": "u9az0qYH", "quantity": 52, "sku": "YY7ZsPWv"}, {"duration": 66, "endDate": "1981-09-21T00:00:00Z", "identityType": "ITEM_SKU", "itemId": "wjZD0yyC", "quantity": 64, "sku": "GKS8fUjz"}]}], "userIdExpression": "q5t6r1dp"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateReward \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 182 'CreateReward' test.out

#- 183 QueryRewards
$CLI_EXE \
    --sn platform \
    --op QueryRewards \
    --namespace $AB_NAMESPACE \
    --eventTopic 'C3TyNxJH' \
    --limit '28' \
    --offset '76' \
    --sortBy '["rewardCode:asc", "namespace:asc"]' \
    > test.out 2>&1
eval_tap $? 183 'QueryRewards' test.out

#- 184 ExportRewards
$CLI_EXE \
    --sn platform \
    --op ExportRewards \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 184 'ExportRewards' test.out

#- 185 ImportRewards
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op ImportRewards \
    --namespace $AB_NAMESPACE \
    --replaceExisting 'false' \
    --upload file $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 185 'ImportRewards' test.out

#- 186 GetReward
$CLI_EXE \
    --sn platform \
    --op GetReward \
    --namespace $AB_NAMESPACE \
    --rewardId 'FmgoWwkE' \
    > test.out 2>&1
eval_tap $? 186 'GetReward' test.out

#- 187 UpdateReward
# body param: body
echo '{"description": "oKRB2Xlg", "eventTopic": "1dwAaqy0", "maxAwarded": 17, "maxAwardedPerUser": 23, "namespaceExpression": "YaxrTU0U", "rewardCode": "GSZOgKVq", "rewardConditions": [{"condition": "rUEzBnCf", "conditionName": "8o5YO0XJ", "eventName": "kfXZbJSP", "rewardItems": [{"duration": 92, "endDate": "1976-08-26T00:00:00Z", "identityType": "ITEM_ID", "itemId": "g8SXJDF8", "quantity": 88, "sku": "bxq2ubFU"}, {"duration": 79, "endDate": "1994-08-11T00:00:00Z", "identityType": "ITEM_SKU", "itemId": "zQw4PQ2w", "quantity": 30, "sku": "AHF2cxFc"}, {"duration": 34, "endDate": "1978-07-03T00:00:00Z", "identityType": "ITEM_SKU", "itemId": "L4IH8XfT", "quantity": 39, "sku": "iAZXXmBe"}]}, {"condition": "KYCiB17X", "conditionName": "F5zQMfUW", "eventName": "ctztvgHD", "rewardItems": [{"duration": 5, "endDate": "1979-08-16T00:00:00Z", "identityType": "ITEM_SKU", "itemId": "DTaHja8l", "quantity": 27, "sku": "lRizfLc8"}, {"duration": 77, "endDate": "1999-01-05T00:00:00Z", "identityType": "ITEM_SKU", "itemId": "ZmXT09W7", "quantity": 35, "sku": "HtbMKqQt"}, {"duration": 37, "endDate": "1993-06-16T00:00:00Z", "identityType": "ITEM_ID", "itemId": "53vfrVYs", "quantity": 48, "sku": "uwX3UUgT"}]}, {"condition": "3qpZwl3A", "conditionName": "MtFCNV8m", "eventName": "pZKeFSeF", "rewardItems": [{"duration": 12, "endDate": "1978-09-14T00:00:00Z", "identityType": "ITEM_ID", "itemId": "UnMOGcJG", "quantity": 99, "sku": "yc7z25nS"}, {"duration": 36, "endDate": "1972-05-07T00:00:00Z", "identityType": "ITEM_SKU", "itemId": "TBDywcpd", "quantity": 33, "sku": "BJbYxrb6"}, {"duration": 76, "endDate": "1986-08-15T00:00:00Z", "identityType": "ITEM_ID", "itemId": "vq716yRl", "quantity": 67, "sku": "gopbWQlg"}]}], "userIdExpression": "BJL58mpH"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateReward \
    --namespace $AB_NAMESPACE \
    --rewardId 'fjXVHQyA' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 187 'UpdateReward' test.out

#- 188 DeleteReward
$CLI_EXE \
    --sn platform \
    --op DeleteReward \
    --namespace $AB_NAMESPACE \
    --rewardId '2Sl5ropP' \
    > test.out 2>&1
eval_tap $? 188 'DeleteReward' test.out

#- 189 CheckEventCondition
# body param: body
echo '{"payload": {"G2px1cDe": {}, "Q8Gb5Q2m": {}, "JGuItLyO": {}}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CheckEventCondition \
    --namespace $AB_NAMESPACE \
    --rewardId '1A2Eo31K' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 189 'CheckEventCondition' test.out

#- 190 DeleteRewardConditionRecord
# body param: body
echo '{"conditionName": "LSlDTswo", "userId": "K9XBSXQX"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op DeleteRewardConditionRecord \
    --namespace $AB_NAMESPACE \
    --rewardId '9w4nc5Eu' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 190 'DeleteRewardConditionRecord' test.out

#- 191 QuerySections
$CLI_EXE \
    --sn platform \
    --op QuerySections \
    --namespace $AB_NAMESPACE \
    --end 'VvSJhEf1' \
    --limit '89' \
    --offset '5' \
    --start 'SQPm6O5R' \
    --storeId '7y4U9qjh' \
    --viewId '2KkK9jHy' \
    > test.out 2>&1
eval_tap $? 191 'QuerySections' test.out

#- 192 CreateSection
# body param: body
echo '{"active": true, "displayOrder": 69, "endDate": "1977-07-20T00:00:00Z", "ext": {"9jQxopdE": {}, "cZewwcBG": {}, "EFBKJPbV": {}}, "fixedPeriodRotationConfig": {"backfillType": "CUSTOM", "duration": 95, "itemCount": 34, "rule": "SEQUENCE"}, "items": [{"id": "U1GFEDdS", "sku": "0aG3db9J"}, {"id": "Tyjqaaxy", "sku": "8ZniLcG6"}, {"id": "Fbo7sktu", "sku": "No3XegX4"}], "localizations": {"8mz1QWSp": {"description": "L4IyEJ82", "localExt": {"YK6iXvyS": {}, "EYtmn9mE": {}, "PKHSTMDv": {}}, "longDescription": "ZmpEm9x7", "title": "M7RvSgZ8"}, "rU2hotzH": {"description": "O35jJdgu", "localExt": {"SWhPuy3e": {}, "0YFUsIo1": {}, "LNdbVyHw": {}}, "longDescription": "cW5bPgFl", "title": "OW6xGVBu"}, "TgsPdV52": {"description": "iGvODoyJ", "localExt": {"7WoBd0UW": {}, "bqkglhg5": {}, "mHwu0L7s": {}}, "longDescription": "yPGWwlHE", "title": "DiZld5YM"}}, "name": "skXLLhiv", "rotationType": "CUSTOM", "startDate": "1977-08-08T00:00:00Z", "viewId": "IvMnyXa6"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateSection \
    --namespace $AB_NAMESPACE \
    --storeId '3RKSZ059' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 192 'CreateSection' test.out

#- 193 PurgeExpiredSection
$CLI_EXE \
    --sn platform \
    --op PurgeExpiredSection \
    --namespace $AB_NAMESPACE \
    --storeId 'wOT1uFrd' \
    > test.out 2>&1
eval_tap $? 193 'PurgeExpiredSection' test.out

#- 194 GetSection
$CLI_EXE \
    --sn platform \
    --op GetSection \
    --namespace $AB_NAMESPACE \
    --sectionId 'CQA3StCd' \
    --storeId '76JIK7oX' \
    > test.out 2>&1
eval_tap $? 194 'GetSection' test.out

#- 195 UpdateSection
# body param: body
echo '{"active": true, "displayOrder": 87, "endDate": "1999-05-15T00:00:00Z", "ext": {"ilhQOt9p": {}, "f7eSQFu6": {}, "Gl2Ea3cZ": {}}, "fixedPeriodRotationConfig": {"backfillType": "NONE", "duration": 12, "itemCount": 63, "rule": "SEQUENCE"}, "items": [{"id": "seS8elTb", "sku": "aqSw5jxm"}, {"id": "3DXCpuDJ", "sku": "ewNLCUuO"}, {"id": "zvQnxOCd", "sku": "Y7t8xAHJ"}], "localizations": {"m2MbMSfy": {"description": "XjteUpVj", "localExt": {"QbwZI70M": {}, "izYviuX2": {}, "prBhnsFX": {}}, "longDescription": "21GBx40w", "title": "tL2qYRLI"}, "g1RVS1PQ": {"description": "xVjdTnbh", "localExt": {"gfKLbBFm": {}, "MR47uSg1": {}, "GRl6KmsS": {}}, "longDescription": "8Wf6pbjF", "title": "35czk9or"}, "P2KmOUNC": {"description": "k4Pomlzj", "localExt": {"eVE7vYFi": {}, "Ll8Kuz5y": {}, "pcbFdZdS": {}}, "longDescription": "konhYegZ", "title": "id8YrM6h"}}, "name": "lDrymv3s", "rotationType": "FIXED_PERIOD", "startDate": "1996-03-03T00:00:00Z", "viewId": "imD3wDmC"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateSection \
    --namespace $AB_NAMESPACE \
    --sectionId 'EKiqkZOj' \
    --storeId '2VXyBIPE' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 195 'UpdateSection' test.out

#- 196 DeleteSection
$CLI_EXE \
    --sn platform \
    --op DeleteSection \
    --namespace $AB_NAMESPACE \
    --sectionId 'Nyh2TqiX' \
    --storeId '4UtFXOmQ' \
    > test.out 2>&1
eval_tap $? 196 'DeleteSection' test.out

#- 197 ListStores
$CLI_EXE \
    --sn platform \
    --op ListStores \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 197 'ListStores' test.out

#- 198 CreateStore
# body param: body
echo '{"defaultLanguage": "tDbQAGKJ", "defaultRegion": "N1F3LDI1", "description": "rzOvshvc", "supportedLanguages": ["BJ6epKgL", "CNWnjE9t", "EDyTqQ6y"], "supportedRegions": ["W6zYKLrh", "TWcII0bX", "Lwf4Q4do"], "title": "VLjpU4QR"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateStore \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 198 'CreateStore' test.out

#- 199 GetCatalogDefinition
$CLI_EXE \
    --sn platform \
    --op GetCatalogDefinition \
    --namespace $AB_NAMESPACE \
    --catalogType 'ITEM' \
    > test.out 2>&1
eval_tap $? 199 'GetCatalogDefinition' test.out

#- 200 DownloadCSVTemplates
$CLI_EXE \
    --sn platform \
    --op DownloadCSVTemplates \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 200 'DownloadCSVTemplates' test.out

#- 201 ExportStoreByCSV
# body param: body
echo '{"catalogType": "CATEGORY", "fieldsToBeIncluded": ["tx5eXVMV", "LLjwcjJr", "fW17XvU8"], "idsToBeExported": ["0Z84XgEn", "Y5XaQnE7", "4tYg1K65"], "storeId": "3CTkkj8L"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ExportStoreByCSV \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 201 'ExportStoreByCSV' test.out

#- 202 ImportStore
eval_tap 0 202 'ImportStore # SKIP deprecated' test.out

#- 203 GetPublishedStore
$CLI_EXE \
    --sn platform \
    --op GetPublishedStore \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 203 'GetPublishedStore' test.out

#- 204 DeletePublishedStore
$CLI_EXE \
    --sn platform \
    --op DeletePublishedStore \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 204 'DeletePublishedStore' test.out

#- 205 GetPublishedStoreBackup
$CLI_EXE \
    --sn platform \
    --op GetPublishedStoreBackup \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 205 'GetPublishedStoreBackup' test.out

#- 206 RollbackPublishedStore
$CLI_EXE \
    --sn platform \
    --op RollbackPublishedStore \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 206 'RollbackPublishedStore' test.out

#- 207 GetStore
$CLI_EXE \
    --sn platform \
    --op GetStore \
    --namespace $AB_NAMESPACE \
    --storeId 'O8M6sM3c' \
    > test.out 2>&1
eval_tap $? 207 'GetStore' test.out

#- 208 UpdateStore
# body param: body
echo '{"defaultLanguage": "g7dVF9R1", "defaultRegion": "uATPTq5j", "description": "cy3d5ZNP", "supportedLanguages": ["1vLfmbvu", "0oYKkoHM", "Xdc8PdLl"], "supportedRegions": ["XOBMuod6", "HblsdfgC", "1IIrN97t"], "title": "e7B6rDx4"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateStore \
    --namespace $AB_NAMESPACE \
    --storeId 'ArHcNIeZ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 208 'UpdateStore' test.out

#- 209 DeleteStore
$CLI_EXE \
    --sn platform \
    --op DeleteStore \
    --namespace $AB_NAMESPACE \
    --storeId '2pIcoCii' \
    > test.out 2>&1
eval_tap $? 209 'DeleteStore' test.out

#- 210 QueryChanges
$CLI_EXE \
    --sn platform \
    --op QueryChanges \
    --namespace $AB_NAMESPACE \
    --storeId 'M2ICwvHJ' \
    --action 'CREATE' \
    --itemSku 'jclVumRC' \
    --itemType 'COINS' \
    --limit '38' \
    --offset '1' \
    --selected 'false' \
    --sortBy '["createdAt", "updatedAt:asc", "updatedAt"]' \
    --status 'PUBLISHED' \
    --type 'ITEM' \
    --updatedAtEnd 'rV0CqSdu' \
    --updatedAtStart 'ZRSQVptK' \
    --withTotal 'true' \
    > test.out 2>&1
eval_tap $? 210 'QueryChanges' test.out

#- 211 PublishAll
$CLI_EXE \
    --sn platform \
    --op PublishAll \
    --namespace $AB_NAMESPACE \
    --storeId 'lnqoG71a' \
    > test.out 2>&1
eval_tap $? 211 'PublishAll' test.out

#- 212 PublishSelected
$CLI_EXE \
    --sn platform \
    --op PublishSelected \
    --namespace $AB_NAMESPACE \
    --storeId 'hkpxdL4o' \
    > test.out 2>&1
eval_tap $? 212 'PublishSelected' test.out

#- 213 SelectAllRecords
$CLI_EXE \
    --sn platform \
    --op SelectAllRecords \
    --namespace $AB_NAMESPACE \
    --storeId '88ykgE07' \
    > test.out 2>&1
eval_tap $? 213 'SelectAllRecords' test.out

#- 214 SelectAllRecordsByCriteria
$CLI_EXE \
    --sn platform \
    --op SelectAllRecordsByCriteria \
    --namespace $AB_NAMESPACE \
    --storeId 'IeSHnCKq' \
    --action 'DELETE' \
    --itemSku '1kp7BjIU' \
    --itemType 'OPTIONBOX' \
    --selected 'true' \
    --type 'STORE' \
    --updatedAtEnd 'jhGBkcGg' \
    --updatedAtStart 'mlC98YqD' \
    > test.out 2>&1
eval_tap $? 214 'SelectAllRecordsByCriteria' test.out

#- 215 GetStatistic
$CLI_EXE \
    --sn platform \
    --op GetStatistic \
    --namespace $AB_NAMESPACE \
    --storeId 'ytuRvRMK' \
    --action 'UPDATE' \
    --itemSku 'R25SlYu3' \
    --itemType 'COINS' \
    --type 'STORE' \
    --updatedAtEnd 't1R5mS4Q' \
    --updatedAtStart 'XuWlOlyz' \
    > test.out 2>&1
eval_tap $? 215 'GetStatistic' test.out

#- 216 UnselectAllRecords
$CLI_EXE \
    --sn platform \
    --op UnselectAllRecords \
    --namespace $AB_NAMESPACE \
    --storeId '3bf6lNDa' \
    > test.out 2>&1
eval_tap $? 216 'UnselectAllRecords' test.out

#- 217 SelectRecord
$CLI_EXE \
    --sn platform \
    --op SelectRecord \
    --changeId 'fjnOOUgq' \
    --namespace $AB_NAMESPACE \
    --storeId 'w5IyXS5v' \
    > test.out 2>&1
eval_tap $? 217 'SelectRecord' test.out

#- 218 UnselectRecord
$CLI_EXE \
    --sn platform \
    --op UnselectRecord \
    --changeId '7uhm1PXz' \
    --namespace $AB_NAMESPACE \
    --storeId 'OMSOl9a8' \
    > test.out 2>&1
eval_tap $? 218 'UnselectRecord' test.out

#- 219 CloneStore
$CLI_EXE \
    --sn platform \
    --op CloneStore \
    --namespace $AB_NAMESPACE \
    --storeId 'nh2ScwAK' \
    --targetStoreId 'l99V55Vr' \
    > test.out 2>&1
eval_tap $? 219 'CloneStore' test.out

#- 220 ExportStore
eval_tap 0 220 'ExportStore # SKIP deprecated' test.out

#- 221 QueryImportHistory
$CLI_EXE \
    --sn platform \
    --op QueryImportHistory \
    --namespace $AB_NAMESPACE \
    --storeId 'yCogHwxM' \
    --end 'myCXqPnV' \
    --limit '19' \
    --offset '27' \
    --sortBy 'Wcn5464s' \
    --start 'P3qgcokq' \
    --success 'true' \
    > test.out 2>&1
eval_tap $? 221 'QueryImportHistory' test.out

#- 222 ImportStoreByCSV
# form data upload: category
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
# form data upload: display
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
# form data upload: item
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
# form data upload: section
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op ImportStoreByCSV \
    --namespace $AB_NAMESPACE \
    --storeId 'j3Hzlulw' \
    --upload category $TEMP_FILE_UPLOAD \
    --upload display $TEMP_FILE_UPLOAD \
    --upload item $TEMP_FILE_UPLOAD \
    --notes 'toHd6ZEM' \
    --upload section $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 222 'ImportStoreByCSV' test.out

#- 223 QuerySubscriptions
$CLI_EXE \
    --sn platform \
    --op QuerySubscriptions \
    --namespace $AB_NAMESPACE \
    --chargeStatus 'SETUP' \
    --itemId '9KF9IDGL' \
    --limit '82' \
    --offset '15' \
    --sku 'OWSHA1aR' \
    --status 'EXPIRED' \
    --subscribedBy 'PLATFORM' \
    --userId '9ZNMcicK' \
    > test.out 2>&1
eval_tap $? 223 'QuerySubscriptions' test.out

#- 224 RecurringChargeSubscription
$CLI_EXE \
    --sn platform \
    --op RecurringChargeSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'FHTdo8Qz' \
    > test.out 2>&1
eval_tap $? 224 'RecurringChargeSubscription' test.out

#- 225 GetTicketDynamic
$CLI_EXE \
    --sn platform \
    --op GetTicketDynamic \
    --boothName 'WUd0v3ek' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 225 'GetTicketDynamic' test.out

#- 226 DecreaseTicketSale
# body param: body
echo '{"orderNo": "Aqgc95to"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op DecreaseTicketSale \
    --boothName 'RpPjdPqH' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 226 'DecreaseTicketSale' test.out

#- 227 GetTicketBoothID
$CLI_EXE \
    --sn platform \
    --op GetTicketBoothID \
    --boothName 'H1lqgV0J' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 227 'GetTicketBoothID' test.out

#- 228 IncreaseTicketSale
# body param: body
echo '{"count": 77, "orderNo": "9bXAqtAf"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op IncreaseTicketSale \
    --boothName 'xlriRGnf' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 228 'IncreaseTicketSale' test.out

#- 229 Commit
# body param: body
echo '{"actions": [{"operations": [{"creditPayload": {"balanceOrigin": "IOS", "count": 81, "currencyCode": "sScBxL0z", "expireAt": "1975-04-28T00:00:00Z"}, "debitPayload": {"count": 29, "currencyCode": "iYqgTqaK", "walletPlatform": "Nintendo"}, "fulFillItemPayload": {"count": 60, "entitlementCollectionId": "imJ8VjPp", "entitlementOrigin": "Playstation", "itemIdentity": "el9Yr1FJ", "itemIdentityType": "ITEM_SKU"}, "revokeEntitlementPayload": {"count": 47, "entitlementId": "hGmgRjdO"}, "type": "FULFILL_ITEM"}, {"creditPayload": {"balanceOrigin": "Xbox", "count": 61, "currencyCode": "0dvC4Lys", "expireAt": "1992-12-23T00:00:00Z"}, "debitPayload": {"count": 74, "currencyCode": "2KzNwV2X", "walletPlatform": "Epic"}, "fulFillItemPayload": {"count": 82, "entitlementCollectionId": "HeV1qkqX", "entitlementOrigin": "Nintendo", "itemIdentity": "cJi2OPUE", "itemIdentityType": "ITEM_ID"}, "revokeEntitlementPayload": {"count": 48, "entitlementId": "oqVIpH52"}, "type": "CREDIT_WALLET"}, {"creditPayload": {"balanceOrigin": "Steam", "count": 3, "currencyCode": "kulwdzSU", "expireAt": "1986-06-17T00:00:00Z"}, "debitPayload": {"count": 81, "currencyCode": "OXFiO8P7", "walletPlatform": "Steam"}, "fulFillItemPayload": {"count": 90, "entitlementCollectionId": "CLVn7hce", "entitlementOrigin": "Epic", "itemIdentity": "jXvGzRQK", "itemIdentityType": "ITEM_SKU"}, "revokeEntitlementPayload": {"count": 6, "entitlementId": "xewsfV9A"}, "type": "CREDIT_WALLET"}], "userId": "gyWmC7wg"}, {"operations": [{"creditPayload": {"balanceOrigin": "IOS", "count": 60, "currencyCode": "NIS7MD22", "expireAt": "1982-11-29T00:00:00Z"}, "debitPayload": {"count": 28, "currencyCode": "cSMYIrWC", "walletPlatform": "Playstation"}, "fulFillItemPayload": {"count": 41, "entitlementCollectionId": "4D5kdJBc", "entitlementOrigin": "Nintendo", "itemIdentity": "8d8XAg7i", "itemIdentityType": "ITEM_SKU"}, "revokeEntitlementPayload": {"count": 73, "entitlementId": "5iYfs00O"}, "type": "DEBIT_WALLET"}, {"creditPayload": {"balanceOrigin": "IOS", "count": 53, "currencyCode": "ia4ewiYm", "expireAt": "1998-02-14T00:00:00Z"}, "debitPayload": {"count": 93, "currencyCode": "ovT2DXbk", "walletPlatform": "Playstation"}, "fulFillItemPayload": {"count": 36, "entitlementCollectionId": "LBMkqp6I", "entitlementOrigin": "GooglePlay", "itemIdentity": "2ZK0z2aM", "itemIdentityType": "ITEM_ID"}, "revokeEntitlementPayload": {"count": 21, "entitlementId": "Nof0O19Y"}, "type": "DEBIT_WALLET"}, {"creditPayload": {"balanceOrigin": "Epic", "count": 98, "currencyCode": "V66jHXNM", "expireAt": "1978-02-03T00:00:00Z"}, "debitPayload": {"count": 71, "currencyCode": "9kKByi9S", "walletPlatform": "Playstation"}, "fulFillItemPayload": {"count": 52, "entitlementCollectionId": "D6kBrt5f", "entitlementOrigin": "System", "itemIdentity": "ePC0OKfi", "itemIdentityType": "ITEM_ID"}, "revokeEntitlementPayload": {"count": 0, "entitlementId": "V6adWwH5"}, "type": "FULFILL_ITEM"}], "userId": "bdzRWYLR"}, {"operations": [{"creditPayload": {"balanceOrigin": "System", "count": 39, "currencyCode": "rzItVhuP", "expireAt": "1971-08-05T00:00:00Z"}, "debitPayload": {"count": 36, "currencyCode": "1yvBtJtw", "walletPlatform": "Oculus"}, "fulFillItemPayload": {"count": 91, "entitlementCollectionId": "Rp5reXyq", "entitlementOrigin": "Nintendo", "itemIdentity": "AnYaDXwl", "itemIdentityType": "ITEM_ID"}, "revokeEntitlementPayload": {"count": 68, "entitlementId": "2jMHOoyZ"}, "type": "FULFILL_ITEM"}, {"creditPayload": {"balanceOrigin": "GooglePlay", "count": 93, "currencyCode": "LBmZ5DKx", "expireAt": "1973-07-28T00:00:00Z"}, "debitPayload": {"count": 3, "currencyCode": "9uRzvw9e", "walletPlatform": "Other"}, "fulFillItemPayload": {"count": 48, "entitlementCollectionId": "Xsq3En81", "entitlementOrigin": "Other", "itemIdentity": "fz18nvJP", "itemIdentityType": "ITEM_ID"}, "revokeEntitlementPayload": {"count": 3, "entitlementId": "nyEh5MwZ"}, "type": "FULFILL_ITEM"}, {"creditPayload": {"balanceOrigin": "Steam", "count": 11, "currencyCode": "oGZiR7hT", "expireAt": "1992-08-19T00:00:00Z"}, "debitPayload": {"count": 40, "currencyCode": "YF2aUfZi", "walletPlatform": "Nintendo"}, "fulFillItemPayload": {"count": 94, "entitlementCollectionId": "0pMDcdf4", "entitlementOrigin": "Other", "itemIdentity": "TWZ5OBIJ", "itemIdentityType": "ITEM_ID"}, "revokeEntitlementPayload": {"count": 22, "entitlementId": "ELthiaRD"}, "type": "FULFILL_ITEM"}], "userId": "Lfv7H3yM"}], "metadata": {"TKnQwuWb": {}, "tU1uJjw7": {}, "OYPuy2rz": {}}, "needPreCheck": true, "transactionId": "hGLdjBxe", "type": "21aL84cX"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op Commit \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 229 'Commit' test.out

#- 230 GetTradeHistoryByCriteria
$CLI_EXE \
    --sn platform \
    --op GetTradeHistoryByCriteria \
    --namespace $AB_NAMESPACE \
    --limit '88' \
    --offset '59' \
    --status 'FAILED' \
    --type 'uDj8l1Gh' \
    --userId 'zIEUxYsK' \
    > test.out 2>&1
eval_tap $? 230 'GetTradeHistoryByCriteria' test.out

#- 231 GetTradeHistoryByTransactionId
$CLI_EXE \
    --sn platform \
    --op GetTradeHistoryByTransactionId \
    --namespace $AB_NAMESPACE \
    --transactionId 'KyjpGA6t' \
    > test.out 2>&1
eval_tap $? 231 'GetTradeHistoryByTransactionId' test.out

#- 232 UnlockSteamUserAchievement
# body param: body
echo '{"achievements": [{"id": "9fdTN6wx", "value": 98}, {"id": "Y0wRthan", "value": 53}, {"id": "N9RTSl5t", "value": 48}], "steamUserId": "he2RWYSd"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UnlockSteamUserAchievement \
    --namespace $AB_NAMESPACE \
    --userId 'oNXsRgZx' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 232 'UnlockSteamUserAchievement' test.out

#- 233 GetXblUserAchievements
$CLI_EXE \
    --sn platform \
    --op GetXblUserAchievements \
    --namespace $AB_NAMESPACE \
    --userId 'VS4GC66m' \
    --xboxUserId 'EYMLLLjE' \
    > test.out 2>&1
eval_tap $? 233 'GetXblUserAchievements' test.out

#- 234 UpdateXblUserAchievement
# body param: body
echo '{"achievements": [{"id": "VywSPNKE", "percentComplete": 81}, {"id": "BQF3p4QY", "percentComplete": 78}, {"id": "iM1Qdeiv", "percentComplete": 97}], "serviceConfigId": "Tzq4SdaH", "titleId": "qS2g4Qvc", "xboxUserId": "Dn2pDDI4"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXblUserAchievement \
    --namespace $AB_NAMESPACE \
    --userId 'go3JxfIK' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 234 'UpdateXblUserAchievement' test.out

#- 235 AnonymizeCampaign
$CLI_EXE \
    --sn platform \
    --op AnonymizeCampaign \
    --namespace $AB_NAMESPACE \
    --userId 'DzHSA1Hh' \
    > test.out 2>&1
eval_tap $? 235 'AnonymizeCampaign' test.out

#- 236 AnonymizeEntitlement
$CLI_EXE \
    --sn platform \
    --op AnonymizeEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'sO3TzLup' \
    > test.out 2>&1
eval_tap $? 236 'AnonymizeEntitlement' test.out

#- 237 AnonymizeFulfillment
$CLI_EXE \
    --sn platform \
    --op AnonymizeFulfillment \
    --namespace $AB_NAMESPACE \
    --userId 'giXJy3Sv' \
    > test.out 2>&1
eval_tap $? 237 'AnonymizeFulfillment' test.out

#- 238 AnonymizeIntegration
$CLI_EXE \
    --sn platform \
    --op AnonymizeIntegration \
    --namespace $AB_NAMESPACE \
    --userId 'WNt4Glwa' \
    > test.out 2>&1
eval_tap $? 238 'AnonymizeIntegration' test.out

#- 239 AnonymizeOrder
$CLI_EXE \
    --sn platform \
    --op AnonymizeOrder \
    --namespace $AB_NAMESPACE \
    --userId 'j8M8djNl' \
    > test.out 2>&1
eval_tap $? 239 'AnonymizeOrder' test.out

#- 240 AnonymizePayment
$CLI_EXE \
    --sn platform \
    --op AnonymizePayment \
    --namespace $AB_NAMESPACE \
    --userId 'XJZXcoUV' \
    > test.out 2>&1
eval_tap $? 240 'AnonymizePayment' test.out

#- 241 AnonymizeRevocation
$CLI_EXE \
    --sn platform \
    --op AnonymizeRevocation \
    --namespace $AB_NAMESPACE \
    --userId 'VpA5w0UB' \
    > test.out 2>&1
eval_tap $? 241 'AnonymizeRevocation' test.out

#- 242 AnonymizeSubscription
$CLI_EXE \
    --sn platform \
    --op AnonymizeSubscription \
    --namespace $AB_NAMESPACE \
    --userId 'Ww9cmVzN' \
    > test.out 2>&1
eval_tap $? 242 'AnonymizeSubscription' test.out

#- 243 AnonymizeWallet
$CLI_EXE \
    --sn platform \
    --op AnonymizeWallet \
    --namespace $AB_NAMESPACE \
    --userId 'K20URHRA' \
    > test.out 2>&1
eval_tap $? 243 'AnonymizeWallet' test.out

#- 244 GetUserDLCByPlatform
$CLI_EXE \
    --sn platform \
    --op GetUserDLCByPlatform \
    --namespace $AB_NAMESPACE \
    --userId 'yvNR7Tmv' \
    --type 'PSN' \
    > test.out 2>&1
eval_tap $? 244 'GetUserDLCByPlatform' test.out

#- 245 GetUserDLC
$CLI_EXE \
    --sn platform \
    --op GetUserDLC \
    --namespace $AB_NAMESPACE \
    --userId '0Dgi3NPk' \
    --includeAllNamespaces 'false' \
    --status 'REVOKED' \
    --type 'OCULUS' \
    > test.out 2>&1
eval_tap $? 245 'GetUserDLC' test.out

#- 246 QueryUserEntitlements
$CLI_EXE \
    --sn platform \
    --op QueryUserEntitlements \
    --namespace $AB_NAMESPACE \
    --userId 'NxhY9e12' \
    --activeOnly 'true' \
    --appType 'GAME' \
    --collectionId '6i5EnIg3' \
    --entitlementClazz 'CODE' \
    --entitlementName 'H7Cbh73y' \
    --features '["IXAiSHGJ", "LxrDCBxz", "OmgxC4h3"]' \
    --fuzzyMatchName 'true' \
    --ignoreActiveDate 'false' \
    --itemId '["EQnWCQ2t", "CHDOpxTc", "F0RL7fwA"]' \
    --limit '52' \
    --offset '68' \
    --origin 'Nintendo' \
    > test.out 2>&1
eval_tap $? 246 'QueryUserEntitlements' test.out

#- 247 GrantUserEntitlement
# body param: body
echo '[{"collectionId": "vWu5cIeJ", "endDate": "1989-06-02T00:00:00Z", "grantedCode": "YaxLp1oz", "itemId": "FgK4y1gE", "itemNamespace": "jY2Hun6u", "language": "MeY_AraW-MP", "metadata": {"Z2UPClcD": {}, "T23qEyPY": {}, "BWbhfScv": {}}, "origin": "Playstation", "quantity": 94, "region": "DjClVEj2", "source": "IAP", "startDate": "1994-09-07T00:00:00Z", "storeId": "MCetYpN6"}, {"collectionId": "Xpd4HVFa", "endDate": "1973-02-28T00:00:00Z", "grantedCode": "LskqHfoa", "itemId": "Nl1yCz3N", "itemNamespace": "FOZBGvGq", "language": "ovo_iP", "metadata": {"yg4TeT0A": {}, "dkaN9NW8": {}, "hMXUFZRm": {}}, "origin": "Nintendo", "quantity": 36, "region": "WKPuk3eX", "source": "REDEEM_CODE", "startDate": "1983-02-14T00:00:00Z", "storeId": "qhSSCjUt"}, {"collectionId": "Xq5fFcWa", "endDate": "1989-11-06T00:00:00Z", "grantedCode": "51kIFjiG", "itemId": "mGPzsmOQ", "itemNamespace": "tByd45G4", "language": "xal-239", "metadata": {"bAhwcLKD": {}, "Xr8TbTvF": {}, "52OmpcgP": {}}, "origin": "Playstation", "quantity": 11, "region": "GRaDUbw0", "source": "REDEEM_CODE", "startDate": "1981-12-10T00:00:00Z", "storeId": "3zocpEtB"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op GrantUserEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'sO9RxUU5' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 247 'GrantUserEntitlement' test.out

#- 248 GetUserAppEntitlementByAppId
$CLI_EXE \
    --sn platform \
    --op GetUserAppEntitlementByAppId \
    --namespace $AB_NAMESPACE \
    --userId 'KoRbBGmI' \
    --activeOnly 'false' \
    --appId 'i4pRvbWx' \
    > test.out 2>&1
eval_tap $? 248 'GetUserAppEntitlementByAppId' test.out

#- 249 QueryUserEntitlementsByAppType
$CLI_EXE \
    --sn platform \
    --op QueryUserEntitlementsByAppType \
    --namespace $AB_NAMESPACE \
    --userId '5zT4x15E' \
    --activeOnly 'true' \
    --limit '87' \
    --offset '24' \
    --appType 'SOFTWARE' \
    > test.out 2>&1
eval_tap $? 249 'QueryUserEntitlementsByAppType' test.out

#- 250 GetUserEntitlementsByIds
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementsByIds \
    --namespace $AB_NAMESPACE \
    --userId 'ougyxzp5' \
    --ids '["1C0P1Xpe", "rEDwEGDN", "IfkUTqeb"]' \
    > test.out 2>&1
eval_tap $? 250 'GetUserEntitlementsByIds' test.out

#- 251 GetUserEntitlementByItemId
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'znLq2oAc' \
    --activeOnly 'false' \
    --entitlementClazz 'LOOTBOX' \
    --platform 'wOkcKclE' \
    --itemId 'k1gxszFF' \
    > test.out 2>&1
eval_tap $? 251 'GetUserEntitlementByItemId' test.out

#- 252 GetUserActiveEntitlementsByItemIds
$CLI_EXE \
    --sn platform \
    --op GetUserActiveEntitlementsByItemIds \
    --namespace $AB_NAMESPACE \
    --userId 'oHcxTh6J' \
    --ids '["LHkQHNR5", "OzB3zEbY", "XqHA5Ejm"]' \
    --platform 'yI6jdTTB' \
    > test.out 2>&1
eval_tap $? 252 'GetUserActiveEntitlementsByItemIds' test.out

#- 253 GetUserEntitlementBySku
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementBySku \
    --namespace $AB_NAMESPACE \
    --userId '00j9WTY0' \
    --activeOnly 'true' \
    --entitlementClazz 'LOOTBOX' \
    --platform 'FLSfx0EB' \
    --sku '0mE275aE' \
    > test.out 2>&1
eval_tap $? 253 'GetUserEntitlementBySku' test.out

#- 254 ExistsAnyUserActiveEntitlement
$CLI_EXE \
    --sn platform \
    --op ExistsAnyUserActiveEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'NhiLHV3Z' \
    --appIds '["4Bx9w4Sk", "d8jTJXbO", "5Py9ferJ"]' \
    --itemIds '["cmUGFrl6", "hSgzDiaL", "wuHCKMHM"]' \
    --platform 'resZZ25e' \
    --skus '["pfxjAiIt", "O9qRC4wP", "5KotVXqB"]' \
    > test.out 2>&1
eval_tap $? 254 'ExistsAnyUserActiveEntitlement' test.out

#- 255 ExistsAnyUserActiveEntitlementByItemIds
$CLI_EXE \
    --sn platform \
    --op ExistsAnyUserActiveEntitlementByItemIds \
    --namespace $AB_NAMESPACE \
    --userId 'DcaCFDJO' \
    --platform '4RNzOFiE' \
    --itemIds '["VEQbzTaq", "5Ka3lXKE", "pqdw3da8"]' \
    > test.out 2>&1
eval_tap $? 255 'ExistsAnyUserActiveEntitlementByItemIds' test.out

#- 256 GetUserAppEntitlementOwnershipByAppId
$CLI_EXE \
    --sn platform \
    --op GetUserAppEntitlementOwnershipByAppId \
    --namespace $AB_NAMESPACE \
    --userId 'PYNBUg20' \
    --appId 'HnfDlwoj' \
    > test.out 2>&1
eval_tap $? 256 'GetUserAppEntitlementOwnershipByAppId' test.out

#- 257 GetUserEntitlementOwnershipByItemId
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementOwnershipByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'WF9uPNYi' \
    --entitlementClazz 'ENTITLEMENT' \
    --platform 'G0SNPDc7' \
    --itemId 'uPwoWNtq' \
    > test.out 2>&1
eval_tap $? 257 'GetUserEntitlementOwnershipByItemId' test.out

#- 258 GetUserEntitlementOwnershipByItemIds
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementOwnershipByItemIds \
    --namespace $AB_NAMESPACE \
    --userId 'dp1xsoYj' \
    --ids '["ydGVASHP", "vswwTQpW", "9GhhMvgy"]' \
    --platform 'H9jxVPXV' \
    > test.out 2>&1
eval_tap $? 258 'GetUserEntitlementOwnershipByItemIds' test.out

#- 259 GetUserEntitlementOwnershipBySku
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementOwnershipBySku \
    --namespace $AB_NAMESPACE \
    --userId 'bFVufp9m' \
    --entitlementClazz 'SUBSCRIPTION' \
    --platform 'x0Exbnjn' \
    --sku 'yVZptrme' \
    > test.out 2>&1
eval_tap $? 259 'GetUserEntitlementOwnershipBySku' test.out

#- 260 RevokeAllEntitlements
$CLI_EXE \
    --sn platform \
    --op RevokeAllEntitlements \
    --namespace $AB_NAMESPACE \
    --userId 'F33tWQBd' \
    > test.out 2>&1
eval_tap $? 260 'RevokeAllEntitlements' test.out

#- 261 RevokeUserEntitlements
$CLI_EXE \
    --sn platform \
    --op RevokeUserEntitlements \
    --namespace $AB_NAMESPACE \
    --userId '9HlSdYj3' \
    --entitlementIds 'j0aa9zV9' \
    > test.out 2>&1
eval_tap $? 261 'RevokeUserEntitlements' test.out

#- 262 GetUserEntitlement
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlement \
    --entitlementId '5gLdqp43' \
    --namespace $AB_NAMESPACE \
    --userId 'zkBjCLUX' \
    > test.out 2>&1
eval_tap $? 262 'GetUserEntitlement' test.out

#- 263 UpdateUserEntitlement
# body param: body
echo '{"collectionId": "sE7IDibl", "endDate": "1982-02-25T00:00:00Z", "nullFieldList": ["ri50duVv", "SG1QiKyC", "pRAou3F6"], "origin": "Oculus", "reason": "61DamdKh", "startDate": "1984-12-12T00:00:00Z", "status": "ACTIVE", "useCount": 37}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateUserEntitlement \
    --entitlementId 'OgcE4IKx' \
    --namespace $AB_NAMESPACE \
    --userId 'ZAWWy6eW' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 263 'UpdateUserEntitlement' test.out

#- 264 ConsumeUserEntitlement
# body param: body
echo '{"metadata": {"Wqw489pz": {}, "5O1LvXra": {}, "XXtvIr1F": {}}, "options": ["8f3g5DWn", "SyHPawAA", "f6dmsbQn"], "platform": "aFrlDcYg", "requestId": "y39DBWkU", "useCount": 59}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ConsumeUserEntitlement \
    --entitlementId 'hsAEUClz' \
    --namespace $AB_NAMESPACE \
    --userId 'JPr6DdBE' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 264 'ConsumeUserEntitlement' test.out

#- 265 DisableUserEntitlement
$CLI_EXE \
    --sn platform \
    --op DisableUserEntitlement \
    --entitlementId '7ZWePEc6' \
    --namespace $AB_NAMESPACE \
    --userId '6PEQEAB6' \
    > test.out 2>&1
eval_tap $? 265 'DisableUserEntitlement' test.out

#- 266 EnableUserEntitlement
$CLI_EXE \
    --sn platform \
    --op EnableUserEntitlement \
    --entitlementId 'DXytPc7a' \
    --namespace $AB_NAMESPACE \
    --userId 'MD0Iaxk4' \
    > test.out 2>&1
eval_tap $? 266 'EnableUserEntitlement' test.out

#- 267 GetUserEntitlementHistories
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementHistories \
    --entitlementId '5MdVkZUE' \
    --namespace $AB_NAMESPACE \
    --userId 'pns9f50p' \
    > test.out 2>&1
eval_tap $? 267 'GetUserEntitlementHistories' test.out

#- 268 RevokeUserEntitlement
# body param: body
echo '{"metadata": {"9kPzFdWp": {}, "cQBhGngX": {}, "We91vRJZ": {}}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RevokeUserEntitlement \
    --entitlementId '7QX0JfsV' \
    --namespace $AB_NAMESPACE \
    --userId 'ibULUdEC' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 268 'RevokeUserEntitlement' test.out

#- 269 RevokeUserEntitlementByUseCount
# body param: body
echo '{"reason": "eZiOeWV1", "useCount": 91}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RevokeUserEntitlementByUseCount \
    --entitlementId 'XkfTjaUq' \
    --namespace $AB_NAMESPACE \
    --userId '1TPLs1AP' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 269 'RevokeUserEntitlementByUseCount' test.out

#- 270 PreCheckRevokeUserEntitlementByUseCount
$CLI_EXE \
    --sn platform \
    --op PreCheckRevokeUserEntitlementByUseCount \
    --entitlementId 'fGesOgPp' \
    --namespace $AB_NAMESPACE \
    --userId 'psApdGm9' \
    --quantity '84' \
    > test.out 2>&1
eval_tap $? 270 'PreCheckRevokeUserEntitlementByUseCount' test.out

#- 271 RevokeUseCount
eval_tap 0 271 'RevokeUseCount # SKIP deprecated' test.out

#- 272 SellUserEntitlement
# body param: body
echo '{"platform": "Ccij9gHu", "requestId": "a8rD0DwR", "useCount": 87}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SellUserEntitlement \
    --entitlementId 'QPK4YKjP' \
    --namespace $AB_NAMESPACE \
    --userId 'YqghB54y' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 272 'SellUserEntitlement' test.out

#- 273 FulfillItem
# body param: body
echo '{"duration": 93, "endDate": "1972-07-04T00:00:00Z", "entitlementCollectionId": "ayUTLJyW", "entitlementOrigin": "Epic", "itemId": "uRrEMXy8", "itemSku": "MPI06ATf", "language": "vgNDA6fR", "metadata": {"YH12K52H": {}, "lsmNP3cx": {}, "GT5UkJCe": {}}, "order": {"currency": {"currencyCode": "mmnsbjcd", "currencySymbol": "2SBWccbK", "currencyType": "VIRTUAL", "decimals": 24, "namespace": "6TD61EOd"}, "ext": {"jUYbX1V4": {}, "x3992NqX": {}, "CUEuiDsw": {}}, "free": false}, "orderNo": "WhCF88Vx", "origin": "Nintendo", "overrideBundleItemQty": {"IBrVsECY": 21, "pVrArp6h": 50, "oy5Sozfc": 93}, "quantity": 24, "region": "GKsJbWbw", "source": "GIFT", "startDate": "1974-05-02T00:00:00Z", "storeId": "SuQmOSUH"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op FulfillItem \
    --namespace $AB_NAMESPACE \
    --userId 'AacBk0cR' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 273 'FulfillItem' test.out

#- 274 RedeemCode
# body param: body
echo '{"code": "JDTV3CTM", "language": "Jz_tDub-dV", "region": "It78Lhr5"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RedeemCode \
    --namespace $AB_NAMESPACE \
    --userId 'X9tRj6lj' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 274 'RedeemCode' test.out

#- 275 PreCheckFulfillItem
# body param: body
echo '{"itemId": "QFbkl2er", "itemSku": "YFKXdCKS", "quantity": 6}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PreCheckFulfillItem \
    --namespace $AB_NAMESPACE \
    --userId 'i1ybimSL' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 275 'PreCheckFulfillItem' test.out

#- 276 FulfillRewards
# body param: body
echo '{"entitlementCollectionId": "HNCNJ37x", "entitlementOrigin": "Other", "metadata": {"CHcyCEIo": {}, "IZ139G9a": {}, "RjeSTqxO": {}}, "origin": "Epic", "rewards": [{"currency": {"currencyCode": "g8sB8Z0T", "namespace": "V1ZqmW6W"}, "item": {"itemId": "Vnu6JUae", "itemName": "w9y4UtUq", "itemSku": "8yDT4yNv", "itemType": "Jbj68tFM"}, "quantity": 23, "type": "CURRENCY"}, {"currency": {"currencyCode": "7kELNcOL", "namespace": "792CqEjf"}, "item": {"itemId": "aM5Fpo8s", "itemName": "nEk1lWz9", "itemSku": "cvz2mh0b", "itemType": "WrN5DBI5"}, "quantity": 49, "type": "CURRENCY"}, {"currency": {"currencyCode": "WVeH0hcR", "namespace": "C8VbrAzd"}, "item": {"itemId": "kbLyAgl0", "itemName": "8hLabldg", "itemSku": "pXsp5KIZ", "itemType": "T6ydvZAo"}, "quantity": 22, "type": "CURRENCY"}], "source": "PURCHASE", "transactionId": "0qPIt6PH"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op FulfillRewards \
    --namespace $AB_NAMESPACE \
    --userId 'oTMjWxwJ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 276 'FulfillRewards' test.out

#- 277 QueryUserIAPOrders
$CLI_EXE \
    --sn platform \
    --op QueryUserIAPOrders \
    --namespace $AB_NAMESPACE \
    --userId 'MTMFF7LH' \
    --endTime '1HHL22e9' \
    --limit '45' \
    --offset '49' \
    --productId 'x7t8P91k' \
    --startTime 'SHJxdHgk' \
    --status 'FAILED' \
    --type 'OCULUS' \
    > test.out 2>&1
eval_tap $? 277 'QueryUserIAPOrders' test.out

#- 278 QueryAllUserIAPOrders
$CLI_EXE \
    --sn platform \
    --op QueryAllUserIAPOrders \
    --namespace $AB_NAMESPACE \
    --userId '5xSC4eXR' \
    > test.out 2>&1
eval_tap $? 278 'QueryAllUserIAPOrders' test.out

#- 279 QueryUserIAPConsumeHistory
$CLI_EXE \
    --sn platform \
    --op QueryUserIAPConsumeHistory \
    --namespace $AB_NAMESPACE \
    --userId 'Z8tRE9cC' \
    --endTime 'ufNEq6jP' \
    --limit '31' \
    --offset '58' \
    --startTime 'HjWAVS3k' \
    --status 'FAIL' \
    --type 'STEAM' \
    > test.out 2>&1
eval_tap $? 279 'QueryUserIAPConsumeHistory' test.out

#- 280 MockFulfillIAPItem
# body param: body
echo '{"itemIdentityType": "ITEM_SKU", "language": "Fn", "productId": "yGlJpQvs", "region": "HWePEQ4P", "transactionId": "aaEe3l2Q", "type": "EPICGAMES"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op MockFulfillIAPItem \
    --namespace $AB_NAMESPACE \
    --userId 'BAgCNVrf' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 280 'MockFulfillIAPItem' test.out

#- 281 QueryUserThirdPartySubscription
$CLI_EXE \
    --sn platform \
    --op QueryUserThirdPartySubscription \
    --namespace $AB_NAMESPACE \
    --userId 'z2QnALGk' \
    --activeOnly 'true' \
    --groupId 'GjnHRoVo' \
    --limit '95' \
    --offset '70' \
    --platform 'PLAYSTATION' \
    --productId 'Qm4UvPgV' \
    > test.out 2>&1
eval_tap $? 281 'QueryUserThirdPartySubscription' test.out

#- 282 GetThirdPartyPlatformSubscriptionOwnershipByGroupId
$CLI_EXE \
    --sn platform \
    --op GetThirdPartyPlatformSubscriptionOwnershipByGroupId \
    --namespace $AB_NAMESPACE \
    --platform 'XBOX' \
    --userId 'EfFrLUBk' \
    --groupId 'Jeq3eOiV' \
    > test.out 2>&1
eval_tap $? 282 'GetThirdPartyPlatformSubscriptionOwnershipByGroupId' test.out

#- 283 GetThirdPartyPlatformSubscriptionOwnershipByProductId
$CLI_EXE \
    --sn platform \
    --op GetThirdPartyPlatformSubscriptionOwnershipByProductId \
    --namespace $AB_NAMESPACE \
    --platform 'EPICGAMES' \
    --userId '0vBPocM4' \
    --productId 'KEvy32eu' \
    > test.out 2>&1
eval_tap $? 283 'GetThirdPartyPlatformSubscriptionOwnershipByProductId' test.out

#- 284 QueryUserThirdPartySubscriptionTransactions
$CLI_EXE \
    --sn platform \
    --op QueryUserThirdPartySubscriptionTransactions \
    --namespace $AB_NAMESPACE \
    --userId 'VGtO1Cky' \
    --activeOnly 'false' \
    --groupId 'VMOTmHbU' \
    --limit '89' \
    --offset '19' \
    --platform 'STADIA' \
    --productId 'dYQ9mzRe' \
    > test.out 2>&1
eval_tap $? 284 'QueryUserThirdPartySubscriptionTransactions' test.out

#- 285 GetThirdPartySubscriptionDetails
$CLI_EXE \
    --sn platform \
    --op GetThirdPartySubscriptionDetails \
    --id 'e1tyaMds' \
    --namespace $AB_NAMESPACE \
    --userId '1mxKR7pT' \
    > test.out 2>&1
eval_tap $? 285 'GetThirdPartySubscriptionDetails' test.out

#- 286 GetSubscriptionHistory
$CLI_EXE \
    --sn platform \
    --op GetSubscriptionHistory \
    --id '5rEJbTpM' \
    --namespace $AB_NAMESPACE \
    --userId 'yQNrz2PI' \
    --limit '10' \
    --offset '57' \
    > test.out 2>&1
eval_tap $? 286 'GetSubscriptionHistory' test.out

#- 287 SyncSubscriptionTransaction
$CLI_EXE \
    --sn platform \
    --op SyncSubscriptionTransaction \
    --id 'IHWsBQ7W' \
    --namespace $AB_NAMESPACE \
    --userId 'Y6dKJ2HA' \
    > test.out 2>&1
eval_tap $? 287 'SyncSubscriptionTransaction' test.out

#- 288 GetThirdPartyUserSubscriptionDetails
$CLI_EXE \
    --sn platform \
    --op GetThirdPartyUserSubscriptionDetails \
    --id 'xIPUrjK5' \
    --namespace $AB_NAMESPACE \
    --userId 'hVuEYi3y' \
    > test.out 2>&1
eval_tap $? 288 'GetThirdPartyUserSubscriptionDetails' test.out

#- 289 SyncSubscription
$CLI_EXE \
    --sn platform \
    --op SyncSubscription \
    --id 'LEU8X0gz' \
    --namespace $AB_NAMESPACE \
    --userId 'JFfTyo9X' \
    > test.out 2>&1
eval_tap $? 289 'SyncSubscription' test.out

#- 290 QueryUserOrders
$CLI_EXE \
    --sn platform \
    --op QueryUserOrders \
    --namespace $AB_NAMESPACE \
    --userId 'p3OgSajO' \
    --discounted 'false' \
    --itemId 'KDVtJ61n' \
    --limit '84' \
    --offset '77' \
    --status 'REFUND_FAILED' \
    > test.out 2>&1
eval_tap $? 290 'QueryUserOrders' test.out

#- 291 AdminCreateUserOrder
# body param: body
echo '{"currencyCode": "93QDyolx", "currencyNamespace": "fpwXxRQy", "discountCodes": ["a3l6fspe", "kenO3vst", "usPELp9w"], "discountedPrice": 37, "entitlementPlatform": "Steam", "ext": {"tkPINjnD": {}, "11W8XQLC": {}, "EgjJkvjs": {}}, "itemId": "SkmPS8fm", "language": "W2eWaJSB", "options": {"skipPriceValidation": true}, "platform": "Steam", "price": 6, "quantity": 44, "region": "hLNau1m3", "returnUrl": "bmpbo2SL", "sandbox": false, "sectionId": "RWPEypF7"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op AdminCreateUserOrder \
    --namespace $AB_NAMESPACE \
    --userId 'EB8pNvNr' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 291 'AdminCreateUserOrder' test.out

#- 292 CountOfPurchasedItem
$CLI_EXE \
    --sn platform \
    --op CountOfPurchasedItem \
    --namespace $AB_NAMESPACE \
    --userId 'GXCtm2wf' \
    --itemId 'yd3ryKTQ' \
    > test.out 2>&1
eval_tap $? 292 'CountOfPurchasedItem' test.out

#- 293 GetUserOrder
$CLI_EXE \
    --sn platform \
    --op GetUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'pY9fruGB' \
    --userId 'qvqangMv' \
    > test.out 2>&1
eval_tap $? 293 'GetUserOrder' test.out

#- 294 UpdateUserOrderStatus
# body param: body
echo '{"status": "CHARGEBACK", "statusReason": "CVle877S"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateUserOrderStatus \
    --namespace $AB_NAMESPACE \
    --orderNo '4bhjajFu' \
    --userId 'oMk6cBHn' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 294 'UpdateUserOrderStatus' test.out

#- 295 FulfillUserOrder
$CLI_EXE \
    --sn platform \
    --op FulfillUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'n6YPKx9h' \
    --userId '0LMYxDt1' \
    > test.out 2>&1
eval_tap $? 295 'FulfillUserOrder' test.out

#- 296 GetUserOrderGrant
eval_tap 0 296 'GetUserOrderGrant # SKIP deprecated' test.out

#- 297 GetUserOrderHistories
$CLI_EXE \
    --sn platform \
    --op GetUserOrderHistories \
    --namespace $AB_NAMESPACE \
    --orderNo 'h6jd4Qxa' \
    --userId 'd304XV9f' \
    > test.out 2>&1
eval_tap $? 297 'GetUserOrderHistories' test.out

#- 298 ProcessUserOrderNotification
# body param: body
echo '{"additionalData": {"cardSummary": "5MaP0l3s"}, "authorisedTime": "1984-10-23T00:00:00Z", "chargebackReversedTime": "1992-08-24T00:00:00Z", "chargebackTime": "1974-02-12T00:00:00Z", "chargedTime": "1975-08-09T00:00:00Z", "createdTime": "1994-12-01T00:00:00Z", "currency": {"currencyCode": "pQKrsnzn", "currencySymbol": "dUhV0aYO", "currencyType": "REAL", "decimals": 22, "namespace": "CNNVaJwC"}, "customParameters": {"shzcnIrP": {}, "qmgloXdm": {}, "Q1HWCtMw": {}}, "extOrderNo": "xdOP7MiJ", "extTxId": "htvolKN5", "extUserId": "7WUn9Zhd", "issuedAt": "1983-10-07T00:00:00Z", "metadata": {"YW68iGzY": "8IbPHORT", "pk1YyBVB": "rufLqIFM", "zaWTFZ5i": "mAIeRxPQ"}, "namespace": "1xtodyiy", "nonceStr": "ckW546DR", "paymentData": {"discountAmount": 65, "discountCode": "s2aloz6r", "subtotalPrice": 20, "tax": 16, "totalPrice": 57}, "paymentMethod": "nD17sz5j", "paymentMethodFee": 79, "paymentOrderNo": "EMhie2j4", "paymentProvider": "WALLET", "paymentProviderFee": 37, "paymentStationUrl": "FKpXziIT", "price": 48, "refundedTime": "1998-04-22T00:00:00Z", "salesTax": 50, "sandbox": true, "sku": "QU9K6Ql1", "status": "CHARGE_FAILED", "statusReason": "55ME1jMG", "subscriptionId": "JFjYruLA", "subtotalPrice": 26, "targetNamespace": "CjRM3fDz", "targetUserId": "Yn2TE8Wj", "tax": 50, "totalPrice": 63, "totalTax": 29, "txEndTime": "1971-09-02T00:00:00Z", "type": "OYvv2UWq", "userId": "JEtNWEQj", "vat": 25}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ProcessUserOrderNotification \
    --namespace $AB_NAMESPACE \
    --orderNo 'eAZJcdzm' \
    --userId 'WebsfpMV' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 298 'ProcessUserOrderNotification' test.out

#- 299 DownloadUserOrderReceipt
$CLI_EXE \
    --sn platform \
    --op DownloadUserOrderReceipt \
    --namespace $AB_NAMESPACE \
    --orderNo 'YuAM8aC4' \
    --userId '9Vn3Usro' \
    > test.out 2>&1
eval_tap $? 299 'DownloadUserOrderReceipt' test.out

#- 300 CreateUserPaymentOrder
# body param: body
echo '{"currencyCode": "6646tBLD", "currencyNamespace": "N3m2EeMX", "customParameters": {"zOFlU3cf": {}, "Hp0VzZ3Y": {}, "YLMxt64A": {}}, "description": "NwIss1lw", "extOrderNo": "4yCts9pT", "extUserId": "qFW0qmzc", "itemType": "MEDIA", "language": "ZK-XYqk", "metadata": {"fNVmgAL6": "MgHkZMXg", "52LDT5o8": "3FzqaZNT", "lEpbXsDI": "dNpooZ9r"}, "notifyUrl": "tS19ftuu", "omitNotification": false, "platform": "o3amy5sy", "price": 8, "recurringPaymentOrderNo": "AMISkdbg", "region": "K8FDYnmm", "returnUrl": "6eVEuBaA", "sandbox": false, "sku": "uaaQJalA", "subscriptionId": "f3hZlQl2", "title": "Xz1vKbsG"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateUserPaymentOrder \
    --namespace $AB_NAMESPACE \
    --userId 'Lhvexxh8' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 300 'CreateUserPaymentOrder' test.out

#- 301 RefundUserPaymentOrder
# body param: body
echo '{"description": "UeBMzUY5"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RefundUserPaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'eKupHW9Y' \
    --userId 'Q0toTaqK' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 301 'RefundUserPaymentOrder' test.out

#- 302 GetUserPlatformAccountClosureHistories
$CLI_EXE \
    --sn platform \
    --op GetUserPlatformAccountClosureHistories \
    --namespace $AB_NAMESPACE \
    --userId 'GSNkwFYH' \
    > test.out 2>&1
eval_tap $? 302 'GetUserPlatformAccountClosureHistories' test.out

#- 303 ApplyUserRedemption
# body param: body
echo '{"code": "KL9J7Y3C", "orderNo": "yl3IBO2g"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ApplyUserRedemption \
    --namespace $AB_NAMESPACE \
    --userId 'fUtalynZ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 303 'ApplyUserRedemption' test.out

#- 304 DoRevocation
# body param: body
echo '{"meta": {"vLRoOE6B": {}, "QL3uTIAZ": {}, "8wyeIZlT": {}}, "reason": "PqyRanIm", "revokeEntries": [{"currency": {"balanceOrigin": "IOS", "currencyCode": "HRtOUEAx", "namespace": "gCf1u6SE"}, "entitlement": {"entitlementId": "xf2uvI8O"}, "item": {"entitlementOrigin": "GooglePlay", "itemIdentity": "97DXgk3D", "itemIdentityType": "ITEM_ID", "origin": "Epic"}, "quantity": 54, "type": "ITEM"}, {"currency": {"balanceOrigin": "Other", "currencyCode": "GivOJ06U", "namespace": "XE8bQzMu"}, "entitlement": {"entitlementId": "7NfzhSot"}, "item": {"entitlementOrigin": "Oculus", "itemIdentity": "MPzTB3gm", "itemIdentityType": "ITEM_ID", "origin": "Playstation"}, "quantity": 64, "type": "CURRENCY"}, {"currency": {"balanceOrigin": "Steam", "currencyCode": "IcZ9x7o8", "namespace": "ttLWAaEb"}, "entitlement": {"entitlementId": "chGGjgHI"}, "item": {"entitlementOrigin": "GooglePlay", "itemIdentity": "Z5Geg80Q", "itemIdentityType": "ITEM_ID", "origin": "System"}, "quantity": 29, "type": "ENTITLEMENT"}], "source": "OTHER", "transactionId": "HHgWBaQ8"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op DoRevocation \
    --namespace $AB_NAMESPACE \
    --userId '0Y2MiPKL' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 304 'DoRevocation' test.out

#- 305 RegisterXblSessions
# body param: body
echo '{"gameSessionId": "RyLTszBq", "payload": {"9wSNiTlv": {}, "KQU44X0w": {}, "eqb0iKy5": {}}, "scid": "QThF4T0h", "sessionTemplateName": "IH9sJg04"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RegisterXblSessions \
    --namespace $AB_NAMESPACE \
    --userId 'Zc958HMq' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 305 'RegisterXblSessions' test.out

#- 306 QueryUserSubscriptions
$CLI_EXE \
    --sn platform \
    --op QueryUserSubscriptions \
    --namespace $AB_NAMESPACE \
    --userId '6xsbuA9q' \
    --chargeStatus 'NEVER' \
    --itemId 'm6eXhNtW' \
    --limit '28' \
    --offset '97' \
    --sku 'nOkoMOqG' \
    --status 'EXPIRED' \
    --subscribedBy 'PLATFORM' \
    > test.out 2>&1
eval_tap $? 306 'QueryUserSubscriptions' test.out

#- 307 GetUserSubscriptionActivities
$CLI_EXE \
    --sn platform \
    --op GetUserSubscriptionActivities \
    --namespace $AB_NAMESPACE \
    --userId 'm89nkNwo' \
    --excludeSystem 'false' \
    --limit '13' \
    --offset '97' \
    --subscriptionId 'C98nhaNv' \
    > test.out 2>&1
eval_tap $? 307 'GetUserSubscriptionActivities' test.out

#- 308 PlatformSubscribeSubscription
# body param: body
echo '{"grantDays": 53, "itemId": "p4Gdb8B4", "language": "Rm9zJgWu", "reason": "1MwtC3Rv", "region": "A7Q19oN4", "source": "OUatHpi6"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PlatformSubscribeSubscription \
    --namespace $AB_NAMESPACE \
    --userId 'HfFMYwET' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 308 'PlatformSubscribeSubscription' test.out

#- 309 CheckUserSubscriptionSubscribableByItemId
$CLI_EXE \
    --sn platform \
    --op CheckUserSubscriptionSubscribableByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'pAYG111m' \
    --itemId 'm8h2pPlh' \
    > test.out 2>&1
eval_tap $? 309 'CheckUserSubscriptionSubscribableByItemId' test.out

#- 310 GetUserSubscription
$CLI_EXE \
    --sn platform \
    --op GetUserSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId '824BAXcT' \
    --userId 'ZhjWYsDP' \
    > test.out 2>&1
eval_tap $? 310 'GetUserSubscription' test.out

#- 311 DeleteUserSubscription
$CLI_EXE \
    --sn platform \
    --op DeleteUserSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'P2M0ChyV' \
    --userId 'GnIUPErK' \
    > test.out 2>&1
eval_tap $? 311 'DeleteUserSubscription' test.out

#- 312 CancelSubscription
# body param: body
echo '{"immediate": true, "reason": "GQRTpz1S"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CancelSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'vdz3nBr8' \
    --userId 'p6d8310q' \
    --force 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 312 'CancelSubscription' test.out

#- 313 GrantDaysToSubscription
# body param: body
echo '{"grantDays": 7, "reason": "AwNqSDQa"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op GrantDaysToSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'VJMyBjk6' \
    --userId 'A9O3f1FG' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 313 'GrantDaysToSubscription' test.out

#- 314 GetUserSubscriptionBillingHistories
$CLI_EXE \
    --sn platform \
    --op GetUserSubscriptionBillingHistories \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'ptVuyf4c' \
    --userId 'm3b70bcJ' \
    --excludeFree 'true' \
    --limit '94' \
    --offset '47' \
    > test.out 2>&1
eval_tap $? 314 'GetUserSubscriptionBillingHistories' test.out

#- 315 ProcessUserSubscriptionNotification
# body param: body
echo '{"additionalData": {"cardSummary": "iQhSmO8B"}, "authorisedTime": "1985-07-16T00:00:00Z", "chargebackReversedTime": "1979-12-26T00:00:00Z", "chargebackTime": "1995-08-10T00:00:00Z", "chargedTime": "1994-10-25T00:00:00Z", "createdTime": "1999-05-09T00:00:00Z", "currency": {"currencyCode": "SsaUxehC", "currencySymbol": "akV9W7hP", "currencyType": "VIRTUAL", "decimals": 75, "namespace": "MzkMmu2r"}, "customParameters": {"T8Ghuozx": {}, "uDVBoQXL": {}, "V2x5nO7u": {}}, "extOrderNo": "NGMAlXqS", "extTxId": "ruaGwMmB", "extUserId": "mVo0tkiB", "issuedAt": "1974-06-26T00:00:00Z", "metadata": {"kzVN3fla": "unIAcyDV", "pM5yQLDw": "LjwOT0zj", "P1xpcT8I": "xFxp2O0z"}, "namespace": "GyQIW8Eq", "nonceStr": "dBQEPy8J", "paymentData": {"discountAmount": 23, "discountCode": "QHcfGUXM", "subtotalPrice": 41, "tax": 19, "totalPrice": 17}, "paymentMethod": "DXzUw9ZQ", "paymentMethodFee": 22, "paymentOrderNo": "n93s1MzT", "paymentProvider": "ALIPAY", "paymentProviderFee": 11, "paymentStationUrl": "SENUiOaK", "price": 99, "refundedTime": "1984-09-01T00:00:00Z", "salesTax": 15, "sandbox": true, "sku": "vq0Ww75V", "status": "REFUNDED", "statusReason": "mXZAmOw6", "subscriptionId": "5YJ8MsNb", "subtotalPrice": 83, "targetNamespace": "qe1z65EE", "targetUserId": "DEznU5oH", "tax": 95, "totalPrice": 83, "totalTax": 54, "txEndTime": "1985-02-24T00:00:00Z", "type": "6Llw5x89", "userId": "1up4syPl", "vat": 29}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ProcessUserSubscriptionNotification \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'ptXOWgB4' \
    --userId '8OOBhbvs' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 315 'ProcessUserSubscriptionNotification' test.out

#- 316 AcquireUserTicket
# body param: body
echo '{"count": 58, "orderNo": "MP6IQtO1"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op AcquireUserTicket \
    --boothName '8h4zW2Kp' \
    --namespace $AB_NAMESPACE \
    --userId 'QPcrS0qU' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 316 'AcquireUserTicket' test.out

#- 317 QueryUserCurrencyWallets
$CLI_EXE \
    --sn platform \
    --op QueryUserCurrencyWallets \
    --namespace $AB_NAMESPACE \
    --userId '7cvZfmjX' \
    > test.out 2>&1
eval_tap $? 317 'QueryUserCurrencyWallets' test.out

#- 318 DebitUserWalletByCurrencyCode
# body param: body
echo '{"allowOverdraft": false, "amount": 56, "balanceOrigin": "Xbox", "balanceSource": "IAP_REVOCATION", "metadata": {"kbX9sEAs": {}, "QnvRlS8S": {}, "oqbOVEN9": {}}, "reason": "YGICTgo7"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op DebitUserWalletByCurrencyCode \
    --currencyCode '6M3miQhn' \
    --namespace $AB_NAMESPACE \
    --userId '3AIZadTJ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 318 'DebitUserWalletByCurrencyCode' test.out

#- 319 ListUserCurrencyTransactions
$CLI_EXE \
    --sn platform \
    --op ListUserCurrencyTransactions \
    --currencyCode 'tkpDUW0z' \
    --namespace $AB_NAMESPACE \
    --userId '9wr8mlN5' \
    --limit '93' \
    --offset '43' \
    > test.out 2>&1
eval_tap $? 319 'ListUserCurrencyTransactions' test.out

#- 320 CheckBalance
# body param: request
echo '{"amount": 26, "debitBalanceSource": "IAP_REVOCATION", "metadata": {"2mIRY6OA": {}, "lgOWtmeo": {}, "uoLH2sR3": {}}, "reason": "ZOxvDOn9", "walletPlatform": "Nintendo"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CheckBalance \
    --currencyCode 'p7IH8GTu' \
    --namespace $AB_NAMESPACE \
    --userId 'l83WL3Jz' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 320 'CheckBalance' test.out

#- 321 CheckWallet
eval_tap 0 321 'CheckWallet # SKIP deprecated' test.out

#- 322 CreditUserWallet
# body param: body
echo '{"amount": 8, "expireAt": "1971-05-13T00:00:00Z", "metadata": {"9mfbmIl7": {}, "7HMPyhBM": {}, "hXLGQW4O": {}}, "origin": "Oculus", "reason": "w6JRRSEu", "source": "REDEEM_CODE"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreditUserWallet \
    --currencyCode 'vsqQoyQ4' \
    --namespace $AB_NAMESPACE \
    --userId 'vI6kauk8' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 322 'CreditUserWallet' test.out

#- 323 DebitByWalletPlatform
# body param: request
echo '{"amount": 97, "debitBalanceSource": "PAYMENT", "metadata": {"4ZU6xSNv": {}, "os8EwLbR": {}, "6abkuve8": {}}, "reason": "Vy8NBexY", "walletPlatform": "Epic"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op DebitByWalletPlatform \
    --currencyCode '3SMCqON5' \
    --namespace $AB_NAMESPACE \
    --userId 'TaSwSqi0' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 323 'DebitByWalletPlatform' test.out

#- 324 PayWithUserWallet
# body param: body
echo '{"amount": 39, "metadata": {"745rcoSC": {}, "1NQZyz3O": {}, "JSdFMgHc": {}}, "walletPlatform": "IOS"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PayWithUserWallet \
    --currencyCode 'qLamkHGn' \
    --namespace $AB_NAMESPACE \
    --userId '7Q0BxdgT' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 324 'PayWithUserWallet' test.out

#- 325 GetUserWallet
eval_tap 0 325 'GetUserWallet # SKIP deprecated' test.out

#- 326 DebitUserWallet
eval_tap 0 326 'DebitUserWallet # SKIP deprecated' test.out

#- 327 DisableUserWallet
eval_tap 0 327 'DisableUserWallet # SKIP deprecated' test.out

#- 328 EnableUserWallet
eval_tap 0 328 'EnableUserWallet # SKIP deprecated' test.out

#- 329 ListUserWalletTransactions
eval_tap 0 329 'ListUserWalletTransactions # SKIP deprecated' test.out

#- 330 ListViews
$CLI_EXE \
    --sn platform \
    --op ListViews \
    --namespace $AB_NAMESPACE \
    --storeId 'X7PnVvhE' \
    > test.out 2>&1
eval_tap $? 330 'ListViews' test.out

#- 331 CreateView
# body param: body
echo '{"displayOrder": 80, "localizations": {"3flkbBwB": {"description": "7IZ31rFv", "localExt": {"dLl7D7K6": {}, "pNq2yz4i": {}, "GQQMMEN6": {}}, "longDescription": "AS13xN6c", "title": "4P61nSRe"}, "i7eAtLEi": {"description": "u0wiQCKV", "localExt": {"kCOArc8Z": {}, "TBv3qmCf": {}, "WHuifqgN": {}}, "longDescription": "cQBhC5xW", "title": "doNv91GR"}, "sZWIA3w5": {"description": "QvW31P4A", "localExt": {"1Z0txB81": {}, "hz7oFDiR": {}, "ZsbA0z1X": {}}, "longDescription": "bGmebsO7", "title": "o76bETRl"}}, "name": "31pjqCs1"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateView \
    --namespace $AB_NAMESPACE \
    --storeId '0MdQIzYv' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 331 'CreateView' test.out

#- 332 GetView
$CLI_EXE \
    --sn platform \
    --op GetView \
    --namespace $AB_NAMESPACE \
    --viewId 'pcB0QDUb' \
    --storeId 'OXSDxprf' \
    > test.out 2>&1
eval_tap $? 332 'GetView' test.out

#- 333 UpdateView
# body param: body
echo '{"displayOrder": 46, "localizations": {"ao9aEkdU": {"description": "X7ZcWhp3", "localExt": {"KuAe3bnp": {}, "ls9FIyfX": {}, "biHTphue": {}}, "longDescription": "k69iM9Wl", "title": "cHXN12e3"}, "xbc875bW": {"description": "5HcHL5xm", "localExt": {"JNKPI8HP": {}, "EqmjeWYc": {}, "3SS42l6N": {}}, "longDescription": "odOJoLiX", "title": "4kubds7K"}, "vKBgQkSn": {"description": "gRLadvMZ", "localExt": {"sklbghGD": {}, "TqHOuSqE": {}, "HLHHDSYa": {}}, "longDescription": "c59mDXwH", "title": "FQALAc7T"}}, "name": "kjivmJAy"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateView \
    --namespace $AB_NAMESPACE \
    --viewId 'c8QirDPk' \
    --storeId 'svTvobYQ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 333 'UpdateView' test.out

#- 334 DeleteView
$CLI_EXE \
    --sn platform \
    --op DeleteView \
    --namespace $AB_NAMESPACE \
    --viewId 'OBQm58nH' \
    --storeId '5IXOwlja' \
    > test.out 2>&1
eval_tap $? 334 'DeleteView' test.out

#- 335 QueryWallets
eval_tap 0 335 'QueryWallets # SKIP deprecated' test.out

#- 336 BulkCredit
# body param: body
echo '[{"creditRequest": {"amount": 25, "expireAt": "1982-11-17T00:00:00Z", "metadata": {"HS88zcpb": {}, "XHII3YPw": {}, "O1GVDkxM": {}}, "origin": "Playstation", "reason": "NlpHuysI", "source": "PURCHASE"}, "currencyCode": "IqZoVBne", "userIds": ["OGOgyT5t", "6S5q8sV2", "EBHUkP9Y"]}, {"creditRequest": {"amount": 80, "expireAt": "1989-07-19T00:00:00Z", "metadata": {"s45zozw1": {}, "TaqKqyYa": {}, "K9Mr3NMW": {}}, "origin": "GooglePlay", "reason": "2rjIA4Oj", "source": "REFERRAL_BONUS"}, "currencyCode": "aT5G1xfu", "userIds": ["VES4pMB4", "Ht1Ka2Se", "aF1iaSjX"]}, {"creditRequest": {"amount": 51, "expireAt": "1982-06-26T00:00:00Z", "metadata": {"NMOLayjR": {}, "6yVqadow": {}, "5NjMeQH9": {}}, "origin": "Oculus", "reason": "xZHRb4gu", "source": "DLC"}, "currencyCode": "579ML5x7", "userIds": ["XhFXvo8M", "k8SydcZX", "nvVLOpps"]}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op BulkCredit \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 336 'BulkCredit' test.out

#- 337 BulkDebit
# body param: body
echo '[{"currencyCode": "3TRi3O04", "request": {"allowOverdraft": false, "amount": 62, "balanceOrigin": "Steam", "balanceSource": "OTHER", "metadata": {"BPm1RJFc": {}, "RlLSkF21": {}, "gPY7c3Os": {}}, "reason": "ngC1Ugs3"}, "userIds": ["571IGbz1", "L6CRkrV9", "x0mr4cOQ"]}, {"currencyCode": "LsQpkvT2", "request": {"allowOverdraft": true, "amount": 39, "balanceOrigin": "Oculus", "balanceSource": "PAYMENT", "metadata": {"9Slrugo1": {}, "kdPQ9Gzt": {}, "CHykIGuV": {}}, "reason": "EZ9qiqCf"}, "userIds": ["nPtBJ5Sf", "FZWCz7b3", "HUeDVZcH"]}, {"currencyCode": "PC163e1f", "request": {"allowOverdraft": true, "amount": 64, "balanceOrigin": "Nintendo", "balanceSource": "IAP_REVOCATION", "metadata": {"wtoncxTb": {}, "mSEMuY5V": {}, "K509HV0x": {}}, "reason": "D9505Stg"}, "userIds": ["c8GEroVk", "SCD4afoS", "ny6WHhH9"]}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op BulkDebit \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 337 'BulkDebit' test.out

#- 338 GetWallet
eval_tap 0 338 'GetWallet # SKIP deprecated' test.out

#- 339 SyncOrders
$CLI_EXE \
    --sn platform \
    --op SyncOrders \
    --nextEvaluatedKey '8ENWfTWu' \
    --end 'O16mLSCR' \
    --start '9IRlglwV' \
    > test.out 2>&1
eval_tap $? 339 'SyncOrders' test.out

#- 340 TestAdyenConfig
# body param: body
echo '{"allowedPaymentMethods": ["rLAcXHdB", "JItjr4CL", "sOpLXW9s"], "apiKey": "fdnTxJru", "authoriseAsCapture": false, "blockedPaymentMethods": ["PSeIxEM0", "5gpYUBot", "q9vTvE4y"], "clientKey": "XPwMRDOO", "dropInSettings": "Xp33Wkiy", "liveEndpointUrlPrefix": "NJUWRcC9", "merchantAccount": "8elDMc0E", "notificationHmacKey": "uepCJUHR", "notificationPassword": "BoajeWDp", "notificationUsername": "1OwYe8bT", "returnUrl": "lV8IOVKN", "settings": "8G3NaCqR"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestAdyenConfig \
    --sandbox 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 340 'TestAdyenConfig' test.out

#- 341 TestAliPayConfig
# body param: body
echo '{"appId": "BZE5ZGCT", "privateKey": "uln32zOw", "publicKey": "w1gcFp4d", "returnUrl": "YQ6rDPT5"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestAliPayConfig \
    --sandbox 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 341 'TestAliPayConfig' test.out

#- 342 TestCheckoutConfig
# body param: body
echo '{"publicKey": "dHhEebwC", "secretKey": "Yo8Vrh3t"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestCheckoutConfig \
    --sandbox 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 342 'TestCheckoutConfig' test.out

#- 343 DebugMatchedPaymentMerchantConfig
$CLI_EXE \
    --sn platform \
    --op DebugMatchedPaymentMerchantConfig \
    --namespace_ 'rQMayD1i' \
    --region 'q5Os55Mp' \
    > test.out 2>&1
eval_tap $? 343 'DebugMatchedPaymentMerchantConfig' test.out

#- 344 TestNeonPayConfig
# body param: body
echo '{"apiKey": "yumWRpE2", "webhookSecretKey": "3RQfWoSy"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestNeonPayConfig \
    --sandbox 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 344 'TestNeonPayConfig' test.out

#- 345 TestPayPalConfig
# body param: body
echo '{"clientID": "H8ybFlxw", "clientSecret": "UWEmdy0H", "returnUrl": "nQoT4uSE", "webHookId": "xRBJTEFQ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestPayPalConfig \
    --sandbox 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 345 'TestPayPalConfig' test.out

#- 346 TestStripeConfig
# body param: body
echo '{"allowedPaymentMethodTypes": ["INb4aMIn", "K0p9Cp4A", "M5lFSiH6"], "publishableKey": "bFcdfnmd", "secretKey": "mr8eX8Nv", "webhookSecret": "13mBUzNP"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestStripeConfig \
    --sandbox 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 346 'TestStripeConfig' test.out

#- 347 TestWxPayConfig
# body param: body
echo '{"appId": "cYVUVHxD", "key": "SXosGx5x", "mchid": "t7MVGnoR", "returnUrl": "I52MNnYV"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestWxPayConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 347 'TestWxPayConfig' test.out

#- 348 TestXsollaConfig
# body param: body
echo '{"apiKey": "fj9VHIQP", "flowCompletionUrl": "sudMPL04", "merchantId": 63, "projectId": 95, "projectSecretKey": "NnPXbiMT"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestXsollaConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 348 'TestXsollaConfig' test.out

#- 349 GetPaymentMerchantConfig1
$CLI_EXE \
    --sn platform \
    --op GetPaymentMerchantConfig1 \
    --id 'JYXxMj6q' \
    > test.out 2>&1
eval_tap $? 349 'GetPaymentMerchantConfig1' test.out

#- 350 UpdateAdyenConfig
# body param: body
echo '{"allowedPaymentMethods": ["StMLbiXA", "xijtQfbB", "IetSRQBG"], "apiKey": "KP46pO2P", "authoriseAsCapture": false, "blockedPaymentMethods": ["Bkw4Nwm9", "aVQyetWa", "I2vvoNJh"], "clientKey": "9FJA74Mw", "dropInSettings": "aIZzISTX", "liveEndpointUrlPrefix": "BM5FiJ1Z", "merchantAccount": "ZRD6mL4O", "notificationHmacKey": "Sg4aJMDc", "notificationPassword": "ixgV67Qe", "notificationUsername": "h17fBCX1", "returnUrl": "MY1EKR8a", "settings": "iAVnpJ5a"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateAdyenConfig \
    --id 'SKZrOyie' \
    --sandbox 'true' \
    --validate 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 350 'UpdateAdyenConfig' test.out

#- 351 TestAdyenConfigById
$CLI_EXE \
    --sn platform \
    --op TestAdyenConfigById \
    --id 'rHHgxAAV' \
    --sandbox 'false' \
    > test.out 2>&1
eval_tap $? 351 'TestAdyenConfigById' test.out

#- 352 UpdateAliPayConfig
# body param: body
echo '{"appId": "j29c9WbZ", "privateKey": "UhqkoJO9", "publicKey": "sBX4Sk75", "returnUrl": "KdN3hsSC"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateAliPayConfig \
    --id 'xhtCcwG7' \
    --sandbox 'false' \
    --validate 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 352 'UpdateAliPayConfig' test.out

#- 353 TestAliPayConfigById
$CLI_EXE \
    --sn platform \
    --op TestAliPayConfigById \
    --id '9PiiZDXZ' \
    --sandbox 'true' \
    > test.out 2>&1
eval_tap $? 353 'TestAliPayConfigById' test.out

#- 354 UpdateCheckoutConfig
# body param: body
echo '{"publicKey": "Ss2wpj7y", "secretKey": "cTZGIJLl"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCheckoutConfig \
    --id 'fhbh3CNu' \
    --sandbox 'true' \
    --validate 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 354 'UpdateCheckoutConfig' test.out

#- 355 TestCheckoutConfigById
$CLI_EXE \
    --sn platform \
    --op TestCheckoutConfigById \
    --id '4EAX0p4L' \
    --sandbox 'true' \
    > test.out 2>&1
eval_tap $? 355 'TestCheckoutConfigById' test.out

#- 356 UpdateNeonPayConfig
# body param: body
echo '{"apiKey": "aeRSdwZr", "webhookSecretKey": "f6CIvsZZ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateNeonPayConfig \
    --id 'xmV2zna6' \
    --sandbox 'false' \
    --validate 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 356 'UpdateNeonPayConfig' test.out

#- 357 TestNeonPayConfigById
$CLI_EXE \
    --sn platform \
    --op TestNeonPayConfigById \
    --id 'pgtzrC7D' \
    --sandbox 'false' \
    > test.out 2>&1
eval_tap $? 357 'TestNeonPayConfigById' test.out

#- 358 UpdatePayPalConfig
# body param: body
echo '{"clientID": "u3kvTlXM", "clientSecret": "o8lzAKQk", "returnUrl": "2ywPqndR", "webHookId": "8Wh3Veqj"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePayPalConfig \
    --id '1XE3QNz0' \
    --sandbox 'false' \
    --validate 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 358 'UpdatePayPalConfig' test.out

#- 359 TestPayPalConfigById
$CLI_EXE \
    --sn platform \
    --op TestPayPalConfigById \
    --id 'DltEuRQD' \
    --sandbox 'true' \
    > test.out 2>&1
eval_tap $? 359 'TestPayPalConfigById' test.out

#- 360 UpdateStripeConfig
# body param: body
echo '{"allowedPaymentMethodTypes": ["J1tQRhji", "J794TB6l", "RqZkE015"], "publishableKey": "z1TGYpgA", "secretKey": "Puq0X5f5", "webhookSecret": "kP206EWp"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateStripeConfig \
    --id '33nYtVtN' \
    --sandbox 'true' \
    --validate 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 360 'UpdateStripeConfig' test.out

#- 361 TestStripeConfigById
$CLI_EXE \
    --sn platform \
    --op TestStripeConfigById \
    --id 'XRIJVQhK' \
    --sandbox 'false' \
    > test.out 2>&1
eval_tap $? 361 'TestStripeConfigById' test.out

#- 362 UpdateWxPayConfig
# body param: body
echo '{"appId": "vB9H05HV", "key": "8H0kGoQz", "mchid": "uW5TFKEE", "returnUrl": "HRC1K1Ne"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateWxPayConfig \
    --id 'NyQkUptQ' \
    --validate 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 362 'UpdateWxPayConfig' test.out

#- 363 UpdateWxPayConfigCert
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UpdateWxPayConfigCert \
    --id 'YskRbrFv' \
    --upload file $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 363 'UpdateWxPayConfigCert' test.out

#- 364 TestWxPayConfigById
$CLI_EXE \
    --sn platform \
    --op TestWxPayConfigById \
    --id 'XGiTK12G' \
    > test.out 2>&1
eval_tap $? 364 'TestWxPayConfigById' test.out

#- 365 UpdateXsollaConfig
# body param: body
echo '{"apiKey": "SpBNhbIO", "flowCompletionUrl": "IkCWM4Xh", "merchantId": 70, "projectId": 3, "projectSecretKey": "vGe9QyfZ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXsollaConfig \
    --id 'L7OAda20' \
    --validate 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 365 'UpdateXsollaConfig' test.out

#- 366 TestXsollaConfigById
$CLI_EXE \
    --sn platform \
    --op TestXsollaConfigById \
    --id 'vfivtBZw' \
    > test.out 2>&1
eval_tap $? 366 'TestXsollaConfigById' test.out

#- 367 UpdateXsollaUIConfig
# body param: body
echo '{"device": "MOBILE", "showCloseButton": true, "size": "MEDIUM", "theme": "DEFAULT_DARK"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXsollaUIConfig \
    --id 'aXM5M9sN' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 367 'UpdateXsollaUIConfig' test.out

#- 368 QueryPaymentProviderConfig
$CLI_EXE \
    --sn platform \
    --op QueryPaymentProviderConfig \
    --limit '7' \
    --namespace_ 'S7OhS844' \
    --offset '54' \
    --region 'Cro9vR8C' \
    > test.out 2>&1
eval_tap $? 368 'QueryPaymentProviderConfig' test.out

#- 369 CreatePaymentProviderConfig
# body param: body
echo '{"aggregate": "STRIPE", "namespace": "vKaEY4wX", "region": "y8EXh3ze", "sandboxTaxJarApiToken": "8Eh9LOIk", "specials": ["XSOLLA", "WXPAY", "STRIPE"], "taxJarApiToken": "DTHnGKQt", "taxJarEnabled": true, "useGlobalTaxJarApiToken": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreatePaymentProviderConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 369 'CreatePaymentProviderConfig' test.out

#- 370 GetAggregatePaymentProviders
$CLI_EXE \
    --sn platform \
    --op GetAggregatePaymentProviders \
    > test.out 2>&1
eval_tap $? 370 'GetAggregatePaymentProviders' test.out

#- 371 DebugMatchedPaymentProviderConfig
$CLI_EXE \
    --sn platform \
    --op DebugMatchedPaymentProviderConfig \
    --namespace_ 'K9wO1Cg7' \
    --region '45MmtLMs' \
    > test.out 2>&1
eval_tap $? 371 'DebugMatchedPaymentProviderConfig' test.out

#- 372 GetSpecialPaymentProviders
$CLI_EXE \
    --sn platform \
    --op GetSpecialPaymentProviders \
    > test.out 2>&1
eval_tap $? 372 'GetSpecialPaymentProviders' test.out

#- 373 UpdatePaymentProviderConfig
# body param: body
echo '{"aggregate": "XSOLLA", "namespace": "q3D5rF6o", "region": "cACFGFoo", "sandboxTaxJarApiToken": "CGa0H73j", "specials": ["STRIPE", "STRIPE", "CHECKOUT"], "taxJarApiToken": "S0tDLZ58", "taxJarEnabled": false, "useGlobalTaxJarApiToken": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePaymentProviderConfig \
    --id 'WcFH3e0C' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 373 'UpdatePaymentProviderConfig' test.out

#- 374 DeletePaymentProviderConfig
$CLI_EXE \
    --sn platform \
    --op DeletePaymentProviderConfig \
    --id 'ly5eVyHL' \
    > test.out 2>&1
eval_tap $? 374 'DeletePaymentProviderConfig' test.out

#- 375 GetPaymentTaxConfig
$CLI_EXE \
    --sn platform \
    --op GetPaymentTaxConfig \
    > test.out 2>&1
eval_tap $? 375 'GetPaymentTaxConfig' test.out

#- 376 UpdatePaymentTaxConfig
# body param: body
echo '{"sandboxTaxJarApiToken": "mKuhIN61", "taxJarApiToken": "qTDrsgjw", "taxJarEnabled": true, "taxJarProductCodesMapping": {"SwgYk3ov": "CSCZofWx", "M09VBAY9": "43Id8erK", "l5JL5Lbv": "wpWSx8GL"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePaymentTaxConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 376 'UpdatePaymentTaxConfig' test.out

#- 377 SyncPaymentOrders
$CLI_EXE \
    --sn platform \
    --op SyncPaymentOrders \
    --nextEvaluatedKey 'iA3LnRLO' \
    --end 'zUgd33hT' \
    --start '7XH2C3W2' \
    > test.out 2>&1
eval_tap $? 377 'SyncPaymentOrders' test.out

#- 378 PublicGetRootCategories
$CLI_EXE \
    --sn platform \
    --op PublicGetRootCategories \
    --namespace $AB_NAMESPACE \
    --language 'WD8v6cbM' \
    --storeId 'Oc3W0xqS' \
    > test.out 2>&1
eval_tap $? 378 'PublicGetRootCategories' test.out

#- 379 DownloadCategories
$CLI_EXE \
    --sn platform \
    --op DownloadCategories \
    --namespace $AB_NAMESPACE \
    --language 'XdR1G3w7' \
    --storeId 'o9rXbAYZ' \
    > test.out 2>&1
eval_tap $? 379 'DownloadCategories' test.out

#- 380 PublicGetCategory
$CLI_EXE \
    --sn platform \
    --op PublicGetCategory \
    --categoryPath 'TYeO71Uv' \
    --namespace $AB_NAMESPACE \
    --language 'utEylRU1' \
    --storeId '8FpNyBmA' \
    > test.out 2>&1
eval_tap $? 380 'PublicGetCategory' test.out

#- 381 PublicGetChildCategories
$CLI_EXE \
    --sn platform \
    --op PublicGetChildCategories \
    --categoryPath 'wx7YDg8a' \
    --namespace $AB_NAMESPACE \
    --language '53OIWrp7' \
    --storeId 'D0AVBinw' \
    > test.out 2>&1
eval_tap $? 381 'PublicGetChildCategories' test.out

#- 382 PublicGetDescendantCategories
$CLI_EXE \
    --sn platform \
    --op PublicGetDescendantCategories \
    --categoryPath 'V6RTFYsf' \
    --namespace $AB_NAMESPACE \
    --language 'irgwlqnX' \
    --storeId 't4ynYqJK' \
    > test.out 2>&1
eval_tap $? 382 'PublicGetDescendantCategories' test.out

#- 383 PublicListCurrencies
$CLI_EXE \
    --sn platform \
    --op PublicListCurrencies \
    --namespace $AB_NAMESPACE \
    --currencyType 'VIRTUAL' \
    > test.out 2>&1
eval_tap $? 383 'PublicListCurrencies' test.out

#- 384 GeDLCDurableRewardShortMap
$CLI_EXE \
    --sn platform \
    --op GeDLCDurableRewardShortMap \
    --namespace $AB_NAMESPACE \
    --dlcType 'OCULUS' \
    > test.out 2>&1
eval_tap $? 384 'GeDLCDurableRewardShortMap' test.out

#- 385 GetAppleConfigVersion
$CLI_EXE \
    --sn platform \
    --op GetAppleConfigVersion \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 385 'GetAppleConfigVersion' test.out

#- 386 GetIAPItemMapping
$CLI_EXE \
    --sn platform \
    --op GetIAPItemMapping \
    --namespace $AB_NAMESPACE \
    --platform 'STADIA' \
    > test.out 2>&1
eval_tap $? 386 'GetIAPItemMapping' test.out

#- 387 PublicGetItemByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetItemByAppId \
    --namespace $AB_NAMESPACE \
    --language 'B3zFbOdk' \
    --region 'EmJ3Zjwj' \
    --storeId 'iqjFZx2Z' \
    --appId 'eULdpKCn' \
    > test.out 2>&1
eval_tap $? 387 'PublicGetItemByAppId' test.out

#- 388 PublicQueryItems
$CLI_EXE \
    --sn platform \
    --op PublicQueryItems \
    --namespace $AB_NAMESPACE \
    --appType 'DEMO' \
    --autoCalcEstimatedPrice 'false' \
    --baseAppId 'JSPMSRRs' \
    --categoryPath 'OTrS4ruE' \
    --features 'oMHrxB91' \
    --includeSubCategoryItem 'true' \
    --itemType 'APP' \
    --language 'hwbbT99A' \
    --limit '48' \
    --offset '15' \
    --region 'bMf3vWL2' \
    --sortBy '["displayOrder:asc", "displayOrder:desc", "updatedAt:desc"]' \
    --storeId 'CbJJaB3r' \
    --tags '1t4uU3k2' \
    > test.out 2>&1
eval_tap $? 388 'PublicQueryItems' test.out

#- 389 PublicGetItemBySku
$CLI_EXE \
    --sn platform \
    --op PublicGetItemBySku \
    --namespace $AB_NAMESPACE \
    --autoCalcEstimatedPrice 'false' \
    --language 'lAe0MaW7' \
    --region '8KKH6kCN' \
    --storeId 'EpFTwQOs' \
    --sku 'mWKFdaqV' \
    > test.out 2>&1
eval_tap $? 389 'PublicGetItemBySku' test.out

#- 390 PublicGetEstimatedPrice
$CLI_EXE \
    --sn platform \
    --op PublicGetEstimatedPrice \
    --namespace $AB_NAMESPACE \
    --region 'CnCK9Jfo' \
    --storeId 'XM3n86CN' \
    --itemIds 'Fp1iam3x' \
    > test.out 2>&1
eval_tap $? 390 'PublicGetEstimatedPrice' test.out

#- 391 PublicBulkGetItems
$CLI_EXE \
    --sn platform \
    --op PublicBulkGetItems \
    --namespace $AB_NAMESPACE \
    --autoCalcEstimatedPrice 'true' \
    --language 'N50M6qN6' \
    --region 'R4njPgLo' \
    --storeId 'HmBXmfW2' \
    --itemIds 'h38s6USA' \
    > test.out 2>&1
eval_tap $? 391 'PublicBulkGetItems' test.out

#- 392 PublicValidateItemPurchaseCondition
# body param: body
echo '{"itemIds": ["Od2FjKVm", "L7dv7brp", "7oHlfnPR"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicValidateItemPurchaseCondition \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 392 'PublicValidateItemPurchaseCondition' test.out

#- 393 PublicSearchItems
$CLI_EXE \
    --sn platform \
    --op PublicSearchItems \
    --namespace $AB_NAMESPACE \
    --autoCalcEstimatedPrice 'false' \
    --itemType 'SEASON' \
    --limit '66' \
    --offset '28' \
    --region 'XSo9PDDg' \
    --storeId 'V3tSGLOL' \
    --keyword 'mb1nybF9' \
    --language 'YAuV0Y8Z' \
    > test.out 2>&1
eval_tap $? 393 'PublicSearchItems' test.out

#- 394 PublicGetApp
$CLI_EXE \
    --sn platform \
    --op PublicGetApp \
    --itemId 'djIYbTKT' \
    --namespace $AB_NAMESPACE \
    --language 'sFbw5HNy' \
    --region 'IXeT1Fwc' \
    --storeId 'qLyRKiDi' \
    > test.out 2>&1
eval_tap $? 394 'PublicGetApp' test.out

#- 395 PublicGetItemDynamicData
$CLI_EXE \
    --sn platform \
    --op PublicGetItemDynamicData \
    --itemId 'jnCdai7E' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 395 'PublicGetItemDynamicData' test.out

#- 396 PublicGetItem
$CLI_EXE \
    --sn platform \
    --op PublicGetItem \
    --itemId 'BqE764UV' \
    --namespace $AB_NAMESPACE \
    --autoCalcEstimatedPrice 'true' \
    --language 'a8z6U5RL' \
    --populateBundle 'true' \
    --region 'JWyv8IhP' \
    --storeId 'l7FF9lPs' \
    > test.out 2>&1
eval_tap $? 396 'PublicGetItem' test.out

#- 397 GetPaymentCustomization
eval_tap 0 397 'GetPaymentCustomization # SKIP deprecated' test.out

#- 398 PublicGetPaymentUrl
# body param: body
echo '{"neonPayConfig": {"cancelUrl": "lRl1Vi4J", "successUrl": "nTFI4PMG"}, "paymentOrderNo": "JXY1sHsE", "paymentProvider": "WALLET", "returnUrl": "Vwoe0n00", "ui": "Z3DIKBfu", "zipCode": "f3aUl27o"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicGetPaymentUrl \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 398 'PublicGetPaymentUrl' test.out

#- 399 PublicGetPaymentMethods
$CLI_EXE \
    --sn platform \
    --op PublicGetPaymentMethods \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'uvNMPV5D' \
    > test.out 2>&1
eval_tap $? 399 'PublicGetPaymentMethods' test.out

#- 400 PublicGetUnpaidPaymentOrder
$CLI_EXE \
    --sn platform \
    --op PublicGetUnpaidPaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo '5vgChC03' \
    > test.out 2>&1
eval_tap $? 400 'PublicGetUnpaidPaymentOrder' test.out

#- 401 Pay
# body param: body
echo '{"token": "1qyvpMaJ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op Pay \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'chqdIyN5' \
    --paymentProvider 'WALLET' \
    --zipCode 'fk5t6bbZ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 401 'Pay' test.out

#- 402 PublicCheckPaymentOrderPaidStatus
$CLI_EXE \
    --sn platform \
    --op PublicCheckPaymentOrderPaidStatus \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'AytQWupn' \
    > test.out 2>&1
eval_tap $? 402 'PublicCheckPaymentOrderPaidStatus' test.out

#- 403 GetPaymentPublicConfig
$CLI_EXE \
    --sn platform \
    --op GetPaymentPublicConfig \
    --namespace $AB_NAMESPACE \
    --sandbox 'false' \
    --paymentProvider 'XSOLLA' \
    --region 'bS5OalEj' \
    > test.out 2>&1
eval_tap $? 403 'GetPaymentPublicConfig' test.out

#- 404 PublicGetQRCode
$CLI_EXE \
    --sn platform \
    --op PublicGetQRCode \
    --namespace $AB_NAMESPACE \
    --code 'IwIx6m0H' \
    > test.out 2>&1
eval_tap $? 404 'PublicGetQRCode' test.out

#- 405 PublicNormalizePaymentReturnUrl
$CLI_EXE \
    --sn platform \
    --op PublicNormalizePaymentReturnUrl \
    --namespace $AB_NAMESPACE \
    --payerID 'Hjg3ie1Y' \
    --foreinginvoice 'YgsRsCFB' \
    --invoiceId 'MTsvUuID' \
    --payload '2iPhcicq' \
    --redirectResult 'uVpKeH0S' \
    --resultCode '55GBJ27b' \
    --sessionId 'lqw3I6yw' \
    --status 'xSBwwgI8' \
    --token 'irJ7OXvr' \
    --type '4tn8M63X' \
    --userId 'VcRYcStq' \
    --orderNo 'duiu3NIa' \
    --paymentOrderNo 'tRALWJfx' \
    --paymentProvider 'NEONPAY' \
    --returnUrl 'RMEFqPvo' \
    > test.out 2>&1
eval_tap $? 405 'PublicNormalizePaymentReturnUrl' test.out

#- 406 GetPaymentTaxValue
$CLI_EXE \
    --sn platform \
    --op GetPaymentTaxValue \
    --namespace $AB_NAMESPACE \
    --zipCode '7Bwmwvcj' \
    --paymentOrderNo 'fBDTUtHz' \
    --paymentProvider 'XSOLLA' \
    > test.out 2>&1
eval_tap $? 406 'GetPaymentTaxValue' test.out

#- 407 GetRewardByCode
$CLI_EXE \
    --sn platform \
    --op GetRewardByCode \
    --namespace $AB_NAMESPACE \
    --rewardCode 'HtKIrgRL' \
    > test.out 2>&1
eval_tap $? 407 'GetRewardByCode' test.out

#- 408 QueryRewards1
$CLI_EXE \
    --sn platform \
    --op QueryRewards1 \
    --namespace $AB_NAMESPACE \
    --eventTopic 'npwsshc1' \
    --limit '53' \
    --offset '65' \
    --sortBy '["rewardCode", "namespace:desc", "namespace"]' \
    > test.out 2>&1
eval_tap $? 408 'QueryRewards1' test.out

#- 409 GetReward1
$CLI_EXE \
    --sn platform \
    --op GetReward1 \
    --namespace $AB_NAMESPACE \
    --rewardId 'phfGY6Ax' \
    > test.out 2>&1
eval_tap $? 409 'GetReward1' test.out

#- 410 PublicListStores
$CLI_EXE \
    --sn platform \
    --op PublicListStores \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 410 'PublicListStores' test.out

#- 411 PublicExistsAnyMyActiveEntitlement
$CLI_EXE \
    --sn platform \
    --op PublicExistsAnyMyActiveEntitlement \
    --namespace $AB_NAMESPACE \
    --appIds '["LSHYsUkc", "qQp7pFhP", "fU3yrGTt"]' \
    --itemIds '["THLZqLwK", "gBycqcSF", "Oeu9T30J"]' \
    --skus '["DdowADnP", "eL7Wgedc", "i9qWq406"]' \
    > test.out 2>&1
eval_tap $? 411 'PublicExistsAnyMyActiveEntitlement' test.out

#- 412 PublicGetMyAppEntitlementOwnershipByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetMyAppEntitlementOwnershipByAppId \
    --namespace $AB_NAMESPACE \
    --appId '9Qj5uzSN' \
    > test.out 2>&1
eval_tap $? 412 'PublicGetMyAppEntitlementOwnershipByAppId' test.out

#- 413 PublicGetMyEntitlementOwnershipByItemId
$CLI_EXE \
    --sn platform \
    --op PublicGetMyEntitlementOwnershipByItemId \
    --namespace $AB_NAMESPACE \
    --entitlementClazz 'ENTITLEMENT' \
    --itemId 'jBxwnU0U' \
    > test.out 2>&1
eval_tap $? 413 'PublicGetMyEntitlementOwnershipByItemId' test.out

#- 414 PublicGetMyEntitlementOwnershipBySku
$CLI_EXE \
    --sn platform \
    --op PublicGetMyEntitlementOwnershipBySku \
    --namespace $AB_NAMESPACE \
    --entitlementClazz 'SUBSCRIPTION' \
    --sku '3fMqvmv3' \
    > test.out 2>&1
eval_tap $? 414 'PublicGetMyEntitlementOwnershipBySku' test.out

#- 415 PublicGetEntitlementOwnershipToken
$CLI_EXE \
    --sn platform \
    --op PublicGetEntitlementOwnershipToken \
    --namespace $AB_NAMESPACE \
    --appIds '["clsB6iqv", "BAE5rhng", "DeyFuQne"]' \
    --itemIds '["M8KyVIx7", "ZkMbl6ai", "sl5D0PVD"]' \
    --skus '["c5C8W7HK", "12QVUYo1", "98kcZE3s"]' \
    > test.out 2>&1
eval_tap $? 415 'PublicGetEntitlementOwnershipToken' test.out

#- 416 SyncTwitchDropsEntitlement
# body param: body
echo '{"gameId": "ySqjMVim", "language": "Emw-Ac", "region": "u0AQefSU"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncTwitchDropsEntitlement \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 416 'SyncTwitchDropsEntitlement' test.out

#- 417 PublicGetMyWallet
$CLI_EXE \
    --sn platform \
    --op PublicGetMyWallet \
    --currencyCode 'SZ0znNb3' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 417 'PublicGetMyWallet' test.out

#- 418 SyncEpicGameDLC
# body param: body
echo '{"epicGamesJwtToken": "bRltbSeC"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncEpicGameDLC \
    --namespace $AB_NAMESPACE \
    --userId 'iopkQ0vC' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 418 'SyncEpicGameDLC' test.out

#- 419 SyncOculusDLC
$CLI_EXE \
    --sn platform \
    --op SyncOculusDLC \
    --namespace $AB_NAMESPACE \
    --userId '3d5SzOXl' \
    > test.out 2>&1
eval_tap $? 419 'SyncOculusDLC' test.out

#- 420 PublicSyncPsnDlcInventory
# body param: body
echo '{"serviceLabel": 88}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicSyncPsnDlcInventory \
    --namespace $AB_NAMESPACE \
    --userId 'Yp96oS2U' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 420 'PublicSyncPsnDlcInventory' test.out

#- 421 PublicSyncPsnDlcInventoryWithMultipleServiceLabels
# body param: body
echo '{"serviceLabels": [32, 45, 6]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicSyncPsnDlcInventoryWithMultipleServiceLabels \
    --namespace $AB_NAMESPACE \
    --userId 'Wa55RhWG' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 421 'PublicSyncPsnDlcInventoryWithMultipleServiceLabels' test.out

#- 422 SyncSteamDLC
# body param: body
echo '{"appId": "MnHzpV0D", "steamId": "FVIguQj7"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncSteamDLC \
    --namespace $AB_NAMESPACE \
    --userId 'PodMxJMI' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 422 'SyncSteamDLC' test.out

#- 423 SyncXboxDLC
# body param: body
echo '{"xstsToken": "BvNFfuAz"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncXboxDLC \
    --namespace $AB_NAMESPACE \
    --userId 'fTOMu8rI' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 423 'SyncXboxDLC' test.out

#- 424 PublicQueryUserEntitlements
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserEntitlements \
    --namespace $AB_NAMESPACE \
    --userId 'WIbq8BuO' \
    --appType 'GAME' \
    --entitlementClazz 'APP' \
    --entitlementName 'miXqvb8Q' \
    --features '["js71EI2N", "1sFCtV4j", "ruxbVSNS"]' \
    --itemId '["RAzYqHa2", "npXLx5Uc", "podsvZ9o"]' \
    --limit '18' \
    --offset '38' \
    > test.out 2>&1
eval_tap $? 424 'PublicQueryUserEntitlements' test.out

#- 425 PublicGetUserAppEntitlementByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetUserAppEntitlementByAppId \
    --namespace $AB_NAMESPACE \
    --userId 'VoeVnEp2' \
    --appId '9mjwsdcF' \
    > test.out 2>&1
eval_tap $? 425 'PublicGetUserAppEntitlementByAppId' test.out

#- 426 PublicQueryUserEntitlementsByAppType
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserEntitlementsByAppType \
    --namespace $AB_NAMESPACE \
    --userId 'i8grxu8Y' \
    --limit '42' \
    --offset '18' \
    --appType 'DLC' \
    > test.out 2>&1
eval_tap $? 426 'PublicQueryUserEntitlementsByAppType' test.out

#- 427 PublicGetUserEntitlementsByIds
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementsByIds \
    --namespace $AB_NAMESPACE \
    --userId 'xebqH6Z7' \
    --availablePlatformOnly 'true' \
    --ids '["L3kV4zTx", "baUzPjKW", "IunR9Oh4"]' \
    > test.out 2>&1
eval_tap $? 427 'PublicGetUserEntitlementsByIds' test.out

#- 428 PublicGetUserEntitlementByItemId
eval_tap 0 428 'PublicGetUserEntitlementByItemId # SKIP deprecated' test.out

#- 429 PublicGetUserEntitlementBySku
eval_tap 0 429 'PublicGetUserEntitlementBySku # SKIP deprecated' test.out

#- 430 PublicUserEntitlementHistory
$CLI_EXE \
    --sn platform \
    --op PublicUserEntitlementHistory \
    --namespace $AB_NAMESPACE \
    --userId 'i6dJhNdN' \
    --endDate 't1hUyelH' \
    --entitlementClazz 'LOOTBOX' \
    --limit '89' \
    --offset '28' \
    --startDate 'hAIS8j5a' \
    > test.out 2>&1
eval_tap $? 430 'PublicUserEntitlementHistory' test.out

#- 431 PublicExistsAnyUserActiveEntitlement
$CLI_EXE \
    --sn platform \
    --op PublicExistsAnyUserActiveEntitlement \
    --namespace $AB_NAMESPACE \
    --userId '7tLS0MAN' \
    --appIds '["2x7mb9Bc", "Y0Z7GB31", "Ac3tX47w"]' \
    --itemIds '["K5Xbci0F", "coUM5ZH0", "ecDHCHOf"]' \
    --skus '["yHxRyk0K", "1awV4mBB", "fAhkIymi"]' \
    > test.out 2>&1
eval_tap $? 431 'PublicExistsAnyUserActiveEntitlement' test.out

#- 432 PublicGetUserAppEntitlementOwnershipByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetUserAppEntitlementOwnershipByAppId \
    --namespace $AB_NAMESPACE \
    --userId 'Fi4RLrqA' \
    --appId 'sq2A3qZ6' \
    > test.out 2>&1
eval_tap $? 432 'PublicGetUserAppEntitlementOwnershipByAppId' test.out

#- 433 PublicGetUserEntitlementOwnershipByItemId
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementOwnershipByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'RwWCdock' \
    --entitlementClazz 'CODE' \
    --itemId 'GqupMNQ4' \
    > test.out 2>&1
eval_tap $? 433 'PublicGetUserEntitlementOwnershipByItemId' test.out

#- 434 PublicGetUserEntitlementOwnershipByItemIds
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementOwnershipByItemIds \
    --namespace $AB_NAMESPACE \
    --userId 'tHpxEwKF' \
    --ids '["xLoas5IO", "81iiY1Vg", "zV86k4TJ"]' \
    > test.out 2>&1
eval_tap $? 434 'PublicGetUserEntitlementOwnershipByItemIds' test.out

#- 435 PublicGetUserEntitlementOwnershipBySku
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementOwnershipBySku \
    --namespace $AB_NAMESPACE \
    --userId 'vTs1zCHC' \
    --entitlementClazz 'LOOTBOX' \
    --sku 'LVvUBsCk' \
    > test.out 2>&1
eval_tap $? 435 'PublicGetUserEntitlementOwnershipBySku' test.out

#- 436 PublicGetUserEntitlement
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlement \
    --entitlementId 'kvclkB1d' \
    --namespace $AB_NAMESPACE \
    --userId 'Fr5XxP7b' \
    > test.out 2>&1
eval_tap $? 436 'PublicGetUserEntitlement' test.out

#- 437 PublicConsumeUserEntitlement
# body param: body
echo '{"metadata": {"operationSource": "INVENTORY"}, "options": ["CoVdqbB5", "7BuSwkYb", "PAKZUhVS"], "requestId": "prjuZpZO", "useCount": 28}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicConsumeUserEntitlement \
    --entitlementId 'KTEC9feQ' \
    --namespace $AB_NAMESPACE \
    --userId 'gxjkYuS4' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 437 'PublicConsumeUserEntitlement' test.out

#- 438 PublicSellUserEntitlement
# body param: body
echo '{"requestId": "dNqlbHK4", "useCount": 73}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicSellUserEntitlement \
    --entitlementId '1MIO2dat' \
    --namespace $AB_NAMESPACE \
    --userId '6EpUv4Ir' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 438 'PublicSellUserEntitlement' test.out

#- 439 PublicSplitUserEntitlement
# body param: body
echo '{"metadata": {"operationSource": "INVENTORY"}, "useCount": 22}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicSplitUserEntitlement \
    --entitlementId 'yMzAEE3S' \
    --namespace $AB_NAMESPACE \
    --userId '2QgCawdf' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 439 'PublicSplitUserEntitlement' test.out

#- 440 PublicTransferUserEntitlement
# body param: body
echo '{"entitlementId": "bjSduceP", "metadata": {"operationSource": "INVENTORY"}, "useCount": 18}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicTransferUserEntitlement \
    --entitlementId 'H9zZ7yIw' \
    --namespace $AB_NAMESPACE \
    --userId 'HxxkqpMz' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 440 'PublicTransferUserEntitlement' test.out

#- 441 PublicRedeemCode
# body param: body
echo '{"code": "hUcb2lOI", "language": "uHU_lMnq-654", "region": "C0aktvdK"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicRedeemCode \
    --namespace $AB_NAMESPACE \
    --userId '16upDSw3' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 441 'PublicRedeemCode' test.out

#- 442 PublicFulfillAppleIAPItem
# body param: body
echo '{"excludeOldTransactions": true, "language": "pnE-433", "productId": "UNjiO6NM", "receiptData": "cnFAFscj", "region": "xpjaDUZ6", "transactionId": "npULtnwr"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicFulfillAppleIAPItem \
    --namespace $AB_NAMESPACE \
    --userId 'nT1aBnM9' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 442 'PublicFulfillAppleIAPItem' test.out

#- 443 SyncEpicGamesInventory
# body param: body
echo '{"epicGamesJwtToken": "CrDOS98P"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncEpicGamesInventory \
    --namespace $AB_NAMESPACE \
    --userId 'Bwzg9Amb' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 443 'SyncEpicGamesInventory' test.out

#- 444 PublicFulfillGoogleIAPItem
# body param: body
echo '{"autoAck": false, "autoConsume": false, "language": "gGne_jiYc-767", "orderId": "OeuDlwto", "packageName": "Cf26kFnb", "productId": "e7x1b3dA", "purchaseTime": 51, "purchaseToken": "NJaQKjy5", "region": "NdATMc5W", "subscriptionPurchase": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicFulfillGoogleIAPItem \
    --namespace $AB_NAMESPACE \
    --userId 'kluy1BMB' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 444 'PublicFulfillGoogleIAPItem' test.out

#- 445 SyncOculusConsumableEntitlements
$CLI_EXE \
    --sn platform \
    --op SyncOculusConsumableEntitlements \
    --namespace $AB_NAMESPACE \
    --userId 'RsrUQKnA' \
    > test.out 2>&1
eval_tap $? 445 'SyncOculusConsumableEntitlements' test.out

#- 446 PublicReconcilePlayStationStore
# body param: body
echo '{"currencyCode": "49vNUKeE", "price": 0.7994483744608778, "productId": "1IRyLGha", "serviceLabel": 40}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicReconcilePlayStationStore \
    --namespace $AB_NAMESPACE \
    --userId 'iaDu61wz' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 446 'PublicReconcilePlayStationStore' test.out

#- 447 PublicReconcilePlayStationStoreWithMultipleServiceLabels
# body param: body
echo '{"currencyCode": "pQuuDNPw", "price": 0.8669484183729571, "productId": "Nbu0MJab", "serviceLabels": [32, 67, 60]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicReconcilePlayStationStoreWithMultipleServiceLabels \
    --namespace $AB_NAMESPACE \
    --userId 'sLDsVCUJ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 447 'PublicReconcilePlayStationStoreWithMultipleServiceLabels' test.out

#- 448 SyncSteamInventory
# body param: body
echo '{"appId": "vcvzKNWU", "currencyCode": "hqReaXaP", "language": "lC", "price": 0.7342438754298314, "productId": "MBi5NnR8", "region": "mV8kRefU", "steamId": "jKAKfIn3"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncSteamInventory \
    --namespace $AB_NAMESPACE \
    --userId '6I8uRrNp' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 448 'SyncSteamInventory' test.out

#- 449 PublicQueryUserThirdPartySubscription
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserThirdPartySubscription \
    --namespace $AB_NAMESPACE \
    --platform 'OCULUS' \
    --userId '7MxtucX6' \
    --activeOnly 'true' \
    --groupId 'iPKKgmWI' \
    --limit '19' \
    --offset '35' \
    --productId 'fFZBRhdD' \
    > test.out 2>&1
eval_tap $? 449 'PublicQueryUserThirdPartySubscription' test.out

#- 450 SyncTwitchDropsEntitlement1
# body param: body
echo '{"gameId": "WQqiclae", "language": "taJ-373", "region": "srkqXVU6"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncTwitchDropsEntitlement1 \
    --namespace $AB_NAMESPACE \
    --userId '5T9JmYqu' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 450 'SyncTwitchDropsEntitlement1' test.out

#- 451 SyncXboxInventory
# body param: body
echo '{"currencyCode": "2nOrBYKJ", "price": 0.7046071364111621, "productId": "U0iYhmWs", "xstsToken": "uwpf2Rwm"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncXboxInventory \
    --namespace $AB_NAMESPACE \
    --userId 'tTG6Yulg' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 451 'SyncXboxInventory' test.out

#- 452 PublicQueryUserOrders
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserOrders \
    --namespace $AB_NAMESPACE \
    --userId 'isOjPDAZ' \
    --discounted 'false' \
    --itemId '2gJR5DhA' \
    --limit '20' \
    --offset '19' \
    --status 'REFUND_FAILED' \
    > test.out 2>&1
eval_tap $? 452 'PublicQueryUserOrders' test.out

#- 453 PublicCreateUserOrder
# body param: body
echo '{"currencyCode": "L3P0Kult", "discountCodes": ["6il63MOH", "CQ6F4D8h", "iLnf3wRU"], "discountedPrice": 32, "ext": {"ZExkAoRP": {}, "aSD8stqK": {}, "1zoM46QC": {}}, "itemId": "dV38h7JN", "language": "fl_301", "price": 71, "quantity": 19, "region": "POIj95bQ", "returnUrl": "wuoPgRP0", "sectionId": "eMjRw4PT"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicCreateUserOrder \
    --namespace $AB_NAMESPACE \
    --userId '6eJ57Dlq' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 453 'PublicCreateUserOrder' test.out

#- 454 PublicPreviewOrderPrice
# body param: body
echo '{"currencyCode": "H5zmEE8O", "discountCodes": ["byLtoyPp", "vYpM3CNt", "rieRrnoT"], "discountedPrice": 96, "itemId": "IwtEWQLW", "price": 85, "quantity": 57}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicPreviewOrderPrice \
    --namespace $AB_NAMESPACE \
    --userId 'tmnZ4H5X' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 454 'PublicPreviewOrderPrice' test.out

#- 455 PublicGetUserOrder
$CLI_EXE \
    --sn platform \
    --op PublicGetUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo '2t33KWXT' \
    --userId 'JzKa3uvC' \
    > test.out 2>&1
eval_tap $? 455 'PublicGetUserOrder' test.out

#- 456 PublicCancelUserOrder
$CLI_EXE \
    --sn platform \
    --op PublicCancelUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'iQyOqXix' \
    --userId 'zTsizaay' \
    > test.out 2>&1
eval_tap $? 456 'PublicCancelUserOrder' test.out

#- 457 PublicGetUserOrderHistories
$CLI_EXE \
    --sn platform \
    --op PublicGetUserOrderHistories \
    --namespace $AB_NAMESPACE \
    --orderNo 'WTgCvGiO' \
    --userId '0k9bxX54' \
    > test.out 2>&1
eval_tap $? 457 'PublicGetUserOrderHistories' test.out

#- 458 PublicDownloadUserOrderReceipt
$CLI_EXE \
    --sn platform \
    --op PublicDownloadUserOrderReceipt \
    --namespace $AB_NAMESPACE \
    --orderNo 'FUeKpAKG' \
    --userId 'yD5onPTO' \
    > test.out 2>&1
eval_tap $? 458 'PublicDownloadUserOrderReceipt' test.out

#- 459 PublicGetPaymentAccounts
$CLI_EXE \
    --sn platform \
    --op PublicGetPaymentAccounts \
    --namespace $AB_NAMESPACE \
    --userId 'LdhkiMd5' \
    > test.out 2>&1
eval_tap $? 459 'PublicGetPaymentAccounts' test.out

#- 460 PublicDeletePaymentAccount
$CLI_EXE \
    --sn platform \
    --op PublicDeletePaymentAccount \
    --id 'eAgxOdNl' \
    --namespace $AB_NAMESPACE \
    --type 'card' \
    --userId 'w6iFeXCv' \
    > test.out 2>&1
eval_tap $? 460 'PublicDeletePaymentAccount' test.out

#- 461 PublicListActiveSections
$CLI_EXE \
    --sn platform \
    --op PublicListActiveSections \
    --namespace $AB_NAMESPACE \
    --userId 'C1vNem5t' \
    --autoCalcEstimatedPrice 'true' \
    --language '6NIeM847' \
    --region '4yO2pVnq' \
    --storeId '3S93k1uJ' \
    --viewId '2Fy9rASx' \
    > test.out 2>&1
eval_tap $? 461 'PublicListActiveSections' test.out

#- 462 PublicQueryUserSubscriptions
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserSubscriptions \
    --namespace $AB_NAMESPACE \
    --userId 'ThpeEZO1' \
    --chargeStatus 'CHARGED' \
    --itemId 'rEJzvQhU' \
    --limit '81' \
    --offset '15' \
    --sku 'VMokiD0s' \
    --status 'ACTIVE' \
    --subscribedBy 'PLATFORM' \
    > test.out 2>&1
eval_tap $? 462 'PublicQueryUserSubscriptions' test.out

#- 463 PublicSubscribeSubscription
# body param: body
echo '{"currencyCode": "cGuievxs", "itemId": "22uIL1uN", "language": "YuA_920", "region": "5Up2Jvis", "returnUrl": "H2sfJuOb", "source": "Jd6x5Mum"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicSubscribeSubscription \
    --namespace $AB_NAMESPACE \
    --userId '1O6UgwjK' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 463 'PublicSubscribeSubscription' test.out

#- 464 PublicCheckUserSubscriptionSubscribableByItemId
$CLI_EXE \
    --sn platform \
    --op PublicCheckUserSubscriptionSubscribableByItemId \
    --namespace $AB_NAMESPACE \
    --userId '4IFanWhF' \
    --itemId 'qyAVnIxp' \
    > test.out 2>&1
eval_tap $? 464 'PublicCheckUserSubscriptionSubscribableByItemId' test.out

#- 465 PublicGetUserSubscription
$CLI_EXE \
    --sn platform \
    --op PublicGetUserSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'r3epdjPy' \
    --userId '0XVBoUAs' \
    > test.out 2>&1
eval_tap $? 465 'PublicGetUserSubscription' test.out

#- 466 PublicChangeSubscriptionBillingAccount
$CLI_EXE \
    --sn platform \
    --op PublicChangeSubscriptionBillingAccount \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'zrIPlUxz' \
    --userId 'Px3GyBiv' \
    > test.out 2>&1
eval_tap $? 466 'PublicChangeSubscriptionBillingAccount' test.out

#- 467 PublicCancelSubscription
# body param: body
echo '{"immediate": true, "reason": "zI0EnHfX"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicCancelSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'j6rOoysE' \
    --userId 'jp3EwyS3' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 467 'PublicCancelSubscription' test.out

#- 468 PublicGetUserSubscriptionBillingHistories
$CLI_EXE \
    --sn platform \
    --op PublicGetUserSubscriptionBillingHistories \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'PjPD5j99' \
    --userId 'OugOryws' \
    --excludeFree 'true' \
    --limit '68' \
    --offset '59' \
    > test.out 2>&1
eval_tap $? 468 'PublicGetUserSubscriptionBillingHistories' test.out

#- 469 PublicListViews
$CLI_EXE \
    --sn platform \
    --op PublicListViews \
    --namespace $AB_NAMESPACE \
    --userId '3yBX3aKl' \
    --language 'JPcLVUXu' \
    --storeId 'oa7dRqgz' \
    > test.out 2>&1
eval_tap $? 469 'PublicListViews' test.out

#- 470 PublicGetWallet
$CLI_EXE \
    --sn platform \
    --op PublicGetWallet \
    --currencyCode 'hYIeW74S' \
    --namespace $AB_NAMESPACE \
    --userId 'aM53Mf3d' \
    > test.out 2>&1
eval_tap $? 470 'PublicGetWallet' test.out

#- 471 PublicListUserWalletTransactions
$CLI_EXE \
    --sn platform \
    --op PublicListUserWalletTransactions \
    --currencyCode 'gwcZuqym' \
    --namespace $AB_NAMESPACE \
    --userId 'N3M6TQqJ' \
    --limit '100' \
    --offset '40' \
    > test.out 2>&1
eval_tap $? 471 'PublicListUserWalletTransactions' test.out

#- 472 PublicGetMyDLCContent
$CLI_EXE \
    --sn platform \
    --op PublicGetMyDLCContent \
    --includeAllNamespaces 'true' \
    --type 'STEAM' \
    > test.out 2>&1
eval_tap $? 472 'PublicGetMyDLCContent' test.out

#- 473 QueryFulfillments
$CLI_EXE \
    --sn platform \
    --op QueryFulfillments \
    --namespace $AB_NAMESPACE \
    --endTime '8eVj1ZW4' \
    --limit '8' \
    --offset '87' \
    --startTime 'vHh0tPRb' \
    --state 'FULFILL_FAILED' \
    --transactionId 'vNKwX01a' \
    --userId 'PzE7P2Pe' \
    > test.out 2>&1
eval_tap $? 473 'QueryFulfillments' test.out

#- 474 QueryItemsV2
$CLI_EXE \
    --sn platform \
    --op QueryItemsV2 \
    --namespace $AB_NAMESPACE \
    --appType 'DEMO' \
    --availableDate 'sTVejnzC' \
    --baseAppId 'JipOaCqB' \
    --categoryPath 'oe2GQSNe' \
    --features 'ezC3mYAC' \
    --includeSubCategoryItem 'false' \
    --itemName 'MIqymKoL' \
    --itemStatus 'INACTIVE' \
    --itemType '["APP", "APP", "SEASON"]' \
    --limit '9' \
    --offset '58' \
    --region 'bsZnpQaa' \
    --sectionExclusive 'false' \
    --sortBy '["name:desc", "name:asc"]' \
    --storeId '9UXKfipZ' \
    --tags 'ZvW9BeC8' \
    --targetNamespace 'rBy1Cspy' \
    --withTotal 'false' \
    > test.out 2>&1
eval_tap $? 474 'QueryItemsV2' test.out

#- 475 ImportStore1
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op ImportStore1 \
    --namespace $AB_NAMESPACE \
    --storeId 'Ph9Q7n3X' \
    --strictMode 'true' \
    --upload file $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 475 'ImportStore1' test.out

#- 476 ExportStore1
# body param: body
echo '{"itemIds": ["qqSxB1WK", "BFyP5DLu", "ju2lJIVt"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ExportStore1 \
    --namespace $AB_NAMESPACE \
    --storeId 'R74uyCj3' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 476 'ExportStore1' test.out

#- 477 FulfillRewardsV2
# body param: body
echo '{"entitlementCollectionId": "IplFJAQZ", "entitlementOrigin": "Xbox", "metadata": {"uqqtyyLM": {}, "pwhXrzvg": {}, "W1amvJwJ": {}}, "origin": "Twitch", "rewards": [{"currency": {"currencyCode": "NsvboQri", "namespace": "cHMxv5Zm"}, "item": {"itemId": "hGSc2uIo", "itemName": "Ek75tTot", "itemSku": "HT55Sczw", "itemType": "KWhNZizC"}, "quantity": 30, "type": "CURRENCY"}, {"currency": {"currencyCode": "B5lqCu9O", "namespace": "u17FZY70"}, "item": {"itemId": "Pe5nvig8", "itemName": "YCIjaqeM", "itemSku": "7W8UtdiE", "itemType": "JzIT8hyK"}, "quantity": 49, "type": "ITEM"}, {"currency": {"currencyCode": "I1GcV1zj", "namespace": "jWLONKDd"}, "item": {"itemId": "jVhSUIRL", "itemName": "uGbkOGQW", "itemSku": "gGlTnsVR", "itemType": "5dZGlG5l"}, "quantity": 82, "type": "CURRENCY"}], "source": "REDEEM_CODE", "transactionId": "k8fAopqM"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op FulfillRewardsV2 \
    --namespace $AB_NAMESPACE \
    --userId 'DMPqKXG0' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 477 'FulfillRewardsV2' test.out

#- 478 FulfillItems
# body param: body
echo '{"items": [{"duration": 75, "endDate": "1990-04-26T00:00:00Z", "entitlementCollectionId": "BYIBCCXP", "entitlementOrigin": "Nintendo", "itemId": "onaxzYYq", "itemSku": "P3WEa3Oe", "language": "0Tp6SYk0", "metadata": {"1EWQM9xB": {}, "tHSUZZK6": {}, "Qgsct6cR": {}}, "orderNo": "2uR6SzIy", "origin": "Oculus", "quantity": 27, "region": "uCVDdult", "source": "PURCHASE", "startDate": "1998-08-28T00:00:00Z", "storeId": "IH1VyqKD"}, {"duration": 40, "endDate": "1975-07-14T00:00:00Z", "entitlementCollectionId": "3WLDKzBv", "entitlementOrigin": "Steam", "itemId": "STYeAujV", "itemSku": "q7bgY5La", "language": "m8kfsD0h", "metadata": {"BVH0ZN9a": {}, "sguanaVk": {}, "wydvvOLC": {}}, "orderNo": "2WfojQle", "origin": "Playstation", "quantity": 2, "region": "9eaUAQYr", "source": "REFERRAL_BONUS", "startDate": "1972-09-14T00:00:00Z", "storeId": "v47R0rmr"}, {"duration": 67, "endDate": "1983-11-14T00:00:00Z", "entitlementCollectionId": "irsWp1wG", "entitlementOrigin": "Xbox", "itemId": "tuR4lO49", "itemSku": "igi5mf1B", "language": "ghFsRR8c", "metadata": {"C4B5WeXL": {}, "2GLC4jiA": {}, "Jo5HzUMa": {}}, "orderNo": "P0mBsZC2", "origin": "Epic", "quantity": 24, "region": "GAZOYHZH", "source": "SELL_BACK", "startDate": "1974-03-22T00:00:00Z", "storeId": "aMgivDbv"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op FulfillItems \
    --namespace $AB_NAMESPACE \
    --transactionId '3zkuCfQS' \
    --userId 'qbKHNWif' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 478 'FulfillItems' test.out

#- 479 RetryFulfillItems
$CLI_EXE \
    --sn platform \
    --op RetryFulfillItems \
    --namespace $AB_NAMESPACE \
    --transactionId 'zewdWBaD' \
    --userId 'j9mWKmCZ' \
    > test.out 2>&1
eval_tap $? 479 'RetryFulfillItems' test.out

#- 480 RevokeItems
$CLI_EXE \
    --sn platform \
    --op RevokeItems \
    --namespace $AB_NAMESPACE \
    --transactionId 'h6SH0nim' \
    --userId 'SBGPseIy' \
    > test.out 2>&1
eval_tap $? 480 'RevokeItems' test.out

#- 481 V2PublicFulfillAppleIAPItem
# body param: body
echo '{"transactionId": "HbJbI0pt"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op V2PublicFulfillAppleIAPItem \
    --namespace $AB_NAMESPACE \
    --userId 'VaxCqlBU' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 481 'V2PublicFulfillAppleIAPItem' test.out


# remove artifacts
rm -f "$CLI_TOKEN_FILE"
rm -f "$TEMP_JSON_INPUT"
rm -f "$TEMP_FILE_UPLOAD"

exit $EXIT_CODE