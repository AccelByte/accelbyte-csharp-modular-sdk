#!/usr/bin/env bash

# Copyright (c) 2021 AccelByte Inc. All Rights Reserved.
# This is licensed software from AccelByte Inc, for limitations
# and restrictions contact your company contract manager.

# This code is generated by tool. DO NOT EDIT.

# Meta:
# - random seed: 
# - template file: 

# Instructions:
# - Run the Justice SDK Mock Server first before running this script.

export AB_BASE_URL="http://127.0.0.1:8080"
export AB_CLIENT_ID="admin"
export AB_CLIENT_SECRET="admin"
export AB_NAMESPACE="test"
export AB_APP_NAME="UnitTest"

EXIT_CODE=0

eval_tap() {
  if [ $1 -eq 0 ]; then
    echo "ok $2 - $3"
  else
    EXIT_CODE=1
    echo "not ok $2 - $3"
    sed 's/^/# /g' $4
  fi
  rm -f $4
}

CLI_EXE="AccelByte.Sdk.Sample.Cli"
CLI_TOKEN_FILE="$(dirname "$(which $CLI_EXE)")/token.json"
TEMP_JSON_INPUT="input_json.json"
TEMP_FILE_UPLOAD="file_upload.bin"

echo "TAP version 13"
echo "1..497"

#- 1 Login
$CLI_EXE --op login --lt user --user user --pass user > test.out 2>&1
eval_tap $? 1 'Login' test.out

if [ $EXIT_CODE -ne 0 ]; then
  echo "Bail out! Login failed."
  exit $EXIT_CODE
fi

# echo "foo" > "$CLI_TOKEN_FILE"

#- 2 ListFulfillmentScripts
$CLI_EXE \
    --sn platform \
    --op ListFulfillmentScripts \
    > test.out 2>&1
eval_tap $? 2 'ListFulfillmentScripts' test.out

#- 3 GetFulfillmentScript
$CLI_EXE \
    --sn platform \
    --op GetFulfillmentScript \
    --id 'eJjPxK8t' \
    > test.out 2>&1
eval_tap $? 3 'GetFulfillmentScript' test.out

#- 4 CreateFulfillmentScript
# body param: body
echo '{"grantDays": "dELZthHC"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateFulfillmentScript \
    --id 'aI3vDPGw' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 4 'CreateFulfillmentScript' test.out

#- 5 DeleteFulfillmentScript
$CLI_EXE \
    --sn platform \
    --op DeleteFulfillmentScript \
    --id 'oBQImwZS' \
    > test.out 2>&1
eval_tap $? 5 'DeleteFulfillmentScript' test.out

#- 6 UpdateFulfillmentScript
# body param: body
echo '{"grantDays": "WdL4J5jM"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateFulfillmentScript \
    --id 'czoh1irX' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 6 'UpdateFulfillmentScript' test.out

#- 7 ListItemTypeConfigs
$CLI_EXE \
    --sn platform \
    --op ListItemTypeConfigs \
    > test.out 2>&1
eval_tap $? 7 'ListItemTypeConfigs' test.out

#- 8 CreateItemTypeConfig
# body param: body
echo '{"clazz": "zYrRt6ex", "dryRun": false, "fulfillmentUrl": "Jx1r7j0C", "itemType": "MEDIA", "purchaseConditionUrl": "D2M4m1gZ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateItemTypeConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 8 'CreateItemTypeConfig' test.out

#- 9 SearchItemTypeConfig
$CLI_EXE \
    --sn platform \
    --op SearchItemTypeConfig \
    --clazz 'dTKbFrSH' \
    --itemType 'LOOTBOX' \
    > test.out 2>&1
eval_tap $? 9 'SearchItemTypeConfig' test.out

#- 10 GetItemTypeConfig
$CLI_EXE \
    --sn platform \
    --op GetItemTypeConfig \
    --id 'Zamc1e3V' \
    > test.out 2>&1
eval_tap $? 10 'GetItemTypeConfig' test.out

#- 11 UpdateItemTypeConfig
# body param: body
echo '{"clazz": "J5pO8XOU", "dryRun": true, "fulfillmentUrl": "CK36ugXs", "purchaseConditionUrl": "lWeElyn8"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateItemTypeConfig \
    --id 'H53rzj3b' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 11 'UpdateItemTypeConfig' test.out

#- 12 DeleteItemTypeConfig
$CLI_EXE \
    --sn platform \
    --op DeleteItemTypeConfig \
    --id 'VwSpdy4Z' \
    > test.out 2>&1
eval_tap $? 12 'DeleteItemTypeConfig' test.out

#- 13 QueryCampaigns
$CLI_EXE \
    --sn platform \
    --op QueryCampaigns \
    --namespace $AB_NAMESPACE \
    --limit '10' \
    --name 'ck5mB5KH' \
    --offset '2' \
    --tag 'WGZihtUe' \
    > test.out 2>&1
eval_tap $? 13 'QueryCampaigns' test.out

#- 14 CreateCampaign
# body param: body
echo '{"description": "sjCwK8e1", "discountConfig": {"categories": [{"categoryPath": "z6rvV8it", "includeSubCategories": true}, {"categoryPath": "306T0I3u", "includeSubCategories": true}, {"categoryPath": "0g2I8M4H", "includeSubCategories": false}], "currencyCode": "svhp6QkR", "currencyNamespace": "2UZtnjIe", "discountAmount": 32, "discountPercentage": 38, "discountType": "PERCENTAGE", "items": [{"itemId": "G67H2LeV", "itemName": "UBYnSBEl"}, {"itemId": "bekDX5E8", "itemName": "6B7A1j1f"}, {"itemId": "nATzZVRz", "itemName": "3axnOB1r"}], "restrictType": "NONE", "stackable": true}, "items": [{"extraSubscriptionDays": 76, "itemId": "wZuwsuZb", "itemName": "JuSmzLxr", "quantity": 76}, {"extraSubscriptionDays": 25, "itemId": "ETtsMjBU", "itemName": "XdiFYKSI", "quantity": 13}, {"extraSubscriptionDays": 20, "itemId": "zGpY9G9v", "itemName": "Vi7ckad3", "quantity": 27}], "maxRedeemCountPerCampaignPerUser": 14, "maxRedeemCountPerCode": 55, "maxRedeemCountPerCodePerUser": 70, "maxSaleCount": 15, "name": "QkKwBkB7", "redeemEnd": "1999-07-07T00:00:00Z", "redeemStart": "1991-12-16T00:00:00Z", "redeemType": "ITEM", "status": "ACTIVE", "tags": ["H5i70nIT", "pVNy6i8g", "pnLJsX8S"], "type": "REDEMPTION"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCampaign \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 14 'CreateCampaign' test.out

#- 15 GetCampaign
$CLI_EXE \
    --sn platform \
    --op GetCampaign \
    --campaignId 'VQVgnnnu' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 15 'GetCampaign' test.out

#- 16 UpdateCampaign
# body param: body
echo '{"description": "EIfAiGmT", "discountConfig": {"categories": [{"categoryPath": "UgX5CQVx", "includeSubCategories": true}, {"categoryPath": "fNYEZt0v", "includeSubCategories": true}, {"categoryPath": "OFit2Owo", "includeSubCategories": false}], "currencyCode": "ygAjguHo", "currencyNamespace": "mjCCFNfC", "discountAmount": 42, "discountPercentage": 17, "discountType": "AMOUNT", "items": [{"itemId": "8bMC5zVr", "itemName": "neN5udZc"}, {"itemId": "EfYVwN1z", "itemName": "WF8eVgxC"}, {"itemId": "9QFdT4T5", "itemName": "NBE48qmS"}], "restrictType": "ITEMS_AND_CATEGORIES", "stackable": true}, "items": [{"extraSubscriptionDays": 2, "itemId": "LtMi6oBL", "itemName": "1BOvGhnf", "quantity": 46}, {"extraSubscriptionDays": 72, "itemId": "pBVHgpkC", "itemName": "RpMXrqf3", "quantity": 90}, {"extraSubscriptionDays": 64, "itemId": "aXLeCfVE", "itemName": "8HQNMrfP", "quantity": 44}], "maxRedeemCountPerCampaignPerUser": 93, "maxRedeemCountPerCode": 88, "maxRedeemCountPerCodePerUser": 94, "maxSaleCount": 22, "name": "E3rz29On", "redeemEnd": "1979-08-16T00:00:00Z", "redeemStart": "1996-10-15T00:00:00Z", "redeemType": "ITEM", "status": "INACTIVE", "tags": ["GkTkx1OY", "EFl5pvau", "2uY8NVHf"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCampaign \
    --campaignId '22sjMBk2' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 16 'UpdateCampaign' test.out

#- 17 RenameBatch
# body param: body
echo '{"newName": "ZJfUZNXa", "oldName": "OBLkZECB"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RenameBatch \
    --campaignId 'dYSaE4jE' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 17 'RenameBatch' test.out

#- 18 QueryCampaignBatchNames
$CLI_EXE \
    --sn platform \
    --op QueryCampaignBatchNames \
    --campaignId 'Jj3bNpi5' \
    --namespace $AB_NAMESPACE \
    --batchName '46LP1BMr' \
    --limit '36' \
    > test.out 2>&1
eval_tap $? 18 'QueryCampaignBatchNames' test.out

#- 19 GetCampaignDynamic
$CLI_EXE \
    --sn platform \
    --op GetCampaignDynamic \
    --campaignId '9wM9DMlq' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 19 'GetCampaignDynamic' test.out

#- 20 GetCatalogConfig
$CLI_EXE \
    --sn platform \
    --op GetCatalogConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 20 'GetCatalogConfig' test.out

#- 21 UpdateCatalogConfig
# body param: body
echo '{"enableInventoryCheck": false, "itemDeletionCheckConfig": ["IAP", "CAMPAIGN", "ENTITLEMENT"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCatalogConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 21 'UpdateCatalogConfig' test.out

#- 22 GetLootBoxPluginConfig
$CLI_EXE \
    --sn platform \
    --op GetLootBoxPluginConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 22 'GetLootBoxPluginConfig' test.out

#- 23 UpdateLootBoxPluginConfig
# body param: body
echo '{"appConfig": {"appName": "gIfec9ti"}, "customConfig": {"connectionType": "TLS", "grpcServerAddress": "P0jAhatL"}, "extendType": "APP"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateLootBoxPluginConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 23 'UpdateLootBoxPluginConfig' test.out

#- 24 DeleteLootBoxPluginConfig
$CLI_EXE \
    --sn platform \
    --op DeleteLootBoxPluginConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 24 'DeleteLootBoxPluginConfig' test.out

#- 25 UplodLootBoxPluginConfigCert
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UplodLootBoxPluginConfigCert \
    --namespace $AB_NAMESPACE \
    --upload file $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 25 'UplodLootBoxPluginConfigCert' test.out

#- 26 GetLootBoxGrpcInfo
$CLI_EXE \
    --sn platform \
    --op GetLootBoxGrpcInfo \
    --namespace $AB_NAMESPACE \
    --force 'false' \
    > test.out 2>&1
eval_tap $? 26 'GetLootBoxGrpcInfo' test.out

#- 27 GetSectionPluginConfig
$CLI_EXE \
    --sn platform \
    --op GetSectionPluginConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 27 'GetSectionPluginConfig' test.out

#- 28 UpdateSectionPluginConfig
# body param: body
echo '{"appConfig": {"appName": "99s6jdJR"}, "customConfig": {"connectionType": "INSECURE", "grpcServerAddress": "xfYNTVf4"}, "extendType": "CUSTOM"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateSectionPluginConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 28 'UpdateSectionPluginConfig' test.out

#- 29 DeleteSectionPluginConfig
$CLI_EXE \
    --sn platform \
    --op DeleteSectionPluginConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 29 'DeleteSectionPluginConfig' test.out

#- 30 UploadSectionPluginConfigCert
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UploadSectionPluginConfigCert \
    --namespace $AB_NAMESPACE \
    --upload file $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 30 'UploadSectionPluginConfigCert' test.out

#- 31 GetRootCategories
$CLI_EXE \
    --sn platform \
    --op GetRootCategories \
    --namespace $AB_NAMESPACE \
    --storeId 'qE03MpdS' \
    > test.out 2>&1
eval_tap $? 31 'GetRootCategories' test.out

#- 32 CreateCategory
# body param: body
echo '{"categoryPath": "QKYsr8AX", "localizationDisplayNames": {"Wl7tkvmO": "U0HzeC9y", "II8eUUp6": "wa5MxmD1", "2NcZuTVs": "LYlc6ITc"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCategory \
    --namespace $AB_NAMESPACE \
    --storeId 'wwENHDAm' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 32 'CreateCategory' test.out

#- 33 ListCategoriesBasic
$CLI_EXE \
    --sn platform \
    --op ListCategoriesBasic \
    --namespace $AB_NAMESPACE \
    --storeId '2wBHSAJp' \
    > test.out 2>&1
eval_tap $? 33 'ListCategoriesBasic' test.out

#- 34 GetCategory
$CLI_EXE \
    --sn platform \
    --op GetCategory \
    --categoryPath 'bIb4mDxb' \
    --namespace $AB_NAMESPACE \
    --storeId '4Gck4MsV' \
    > test.out 2>&1
eval_tap $? 34 'GetCategory' test.out

#- 35 UpdateCategory
# body param: body
echo '{"localizationDisplayNames": {"BbBxbwqw": "p57FRJ9S", "a7jm5KfK": "AHFG2j8x", "gRXugQK9": "jjLUZNHf"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCategory \
    --categoryPath 'sDtsDaSt' \
    --namespace $AB_NAMESPACE \
    --storeId 'FTf95NAZ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 35 'UpdateCategory' test.out

#- 36 DeleteCategory
$CLI_EXE \
    --sn platform \
    --op DeleteCategory \
    --categoryPath '84cPhvaC' \
    --namespace $AB_NAMESPACE \
    --storeId '5F4Lxl2D' \
    > test.out 2>&1
eval_tap $? 36 'DeleteCategory' test.out

#- 37 GetChildCategories
$CLI_EXE \
    --sn platform \
    --op GetChildCategories \
    --categoryPath 'ifO2qTG3' \
    --namespace $AB_NAMESPACE \
    --storeId 'XyOjWsNy' \
    > test.out 2>&1
eval_tap $? 37 'GetChildCategories' test.out

#- 38 GetDescendantCategories
$CLI_EXE \
    --sn platform \
    --op GetDescendantCategories \
    --categoryPath 'qgaqXVgK' \
    --namespace $AB_NAMESPACE \
    --storeId 'BbkrHEJ3' \
    > test.out 2>&1
eval_tap $? 38 'GetDescendantCategories' test.out

#- 39 QueryCodes
$CLI_EXE \
    --sn platform \
    --op QueryCodes \
    --campaignId 'FPJ6BTc4' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --batchName 'vo4vMOky' \
    --batchNo '[33, 49, 64]' \
    --code '0xZKnabU' \
    --limit '16' \
    --offset '74' \
    --withBatchName 'true' \
    > test.out 2>&1
eval_tap $? 39 'QueryCodes' test.out

#- 40 CreateCodes
# body param: body
echo '{"batchName": "9p39xCVQ", "codeValue": "aB3jGDb4", "quantity": 0}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCodes \
    --campaignId 'YJePi17Z' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 40 'CreateCodes' test.out

#- 41 Download
$CLI_EXE \
    --sn platform \
    --op Download \
    --campaignId 'hcmTd2lU' \
    --namespace $AB_NAMESPACE \
    --batchName 'D2ZIy4Br' \
    --batchNo '[71, 58, 15]' \
    --withBatchName 'false' \
    > test.out 2>&1
eval_tap $? 41 'Download' test.out

#- 42 BulkDisableCodes
$CLI_EXE \
    --sn platform \
    --op BulkDisableCodes \
    --campaignId 'rgiaXbnc' \
    --namespace $AB_NAMESPACE \
    --batchName 'ucYjvISf' \
    --batchNo '[11, 96, 81]' \
    > test.out 2>&1
eval_tap $? 42 'BulkDisableCodes' test.out

#- 43 BulkEnableCodes
$CLI_EXE \
    --sn platform \
    --op BulkEnableCodes \
    --campaignId 'FYlCzATE' \
    --namespace $AB_NAMESPACE \
    --batchName 'wY9jj4nL' \
    --batchNo '[7, 54, 43]' \
    > test.out 2>&1
eval_tap $? 43 'BulkEnableCodes' test.out

#- 44 QueryRedeemHistory
$CLI_EXE \
    --sn platform \
    --op QueryRedeemHistory \
    --campaignId 'w69NDjii' \
    --namespace $AB_NAMESPACE \
    --code 'hGW9pd29' \
    --limit '36' \
    --offset '0' \
    --userId 'kb6zW9MS' \
    > test.out 2>&1
eval_tap $? 44 'QueryRedeemHistory' test.out

#- 45 GetCode
$CLI_EXE \
    --sn platform \
    --op GetCode \
    --code 'c2FtKCiz' \
    --namespace $AB_NAMESPACE \
    --redeemable 'false' \
    --withBatchName 'true' \
    > test.out 2>&1
eval_tap $? 45 'GetCode' test.out

#- 46 DisableCode
$CLI_EXE \
    --sn platform \
    --op DisableCode \
    --code 'C4pG5QkK' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 46 'DisableCode' test.out

#- 47 EnableCode
$CLI_EXE \
    --sn platform \
    --op EnableCode \
    --code 'J2Pnwm5h' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 47 'EnableCode' test.out

#- 48 GetServicePluginConfig
eval_tap 0 48 'GetServicePluginConfig # SKIP deprecated' test.out

#- 49 UpdateServicePluginConfig
eval_tap 0 49 'UpdateServicePluginConfig # SKIP deprecated' test.out

#- 50 DeleteServicePluginConfig
eval_tap 0 50 'DeleteServicePluginConfig # SKIP deprecated' test.out

#- 51 ListCurrencies
$CLI_EXE \
    --sn platform \
    --op ListCurrencies \
    --namespace $AB_NAMESPACE \
    --currencyType 'REAL' \
    > test.out 2>&1
eval_tap $? 51 'ListCurrencies' test.out

#- 52 CreateCurrency
# body param: body
echo '{"currencyCode": "r9GBEAph", "currencySymbol": "WYZpYW2t", "currencyType": "VIRTUAL", "decimals": 11, "localizationDescriptions": {"VMXGeNdx": "ZGsiCt2Z", "1YxCnogs": "ZzMe0gxv", "6creCwbX": "xZQ9NInn"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCurrency \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 52 'CreateCurrency' test.out

#- 53 UpdateCurrency
# body param: body
echo '{"localizationDescriptions": {"Y0YztgCA": "KXEifJMg", "5Xo9BuKJ": "zzl97P7O", "zhDr6Feh": "lyTuEPTw"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCurrency \
    --currencyCode 'u6Bb8h7P' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 53 'UpdateCurrency' test.out

#- 54 DeleteCurrency
$CLI_EXE \
    --sn platform \
    --op DeleteCurrency \
    --currencyCode 'XiIIYzDj' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 54 'DeleteCurrency' test.out

#- 55 GetCurrencyConfig
$CLI_EXE \
    --sn platform \
    --op GetCurrencyConfig \
    --currencyCode 'ciV7jq2X' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 55 'GetCurrencyConfig' test.out

#- 56 GetCurrencySummary
$CLI_EXE \
    --sn platform \
    --op GetCurrencySummary \
    --currencyCode 'TL335Tw5' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 56 'GetCurrencySummary' test.out

#- 57 GetDLCItemConfig
$CLI_EXE \
    --sn platform \
    --op GetDLCItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 57 'GetDLCItemConfig' test.out

#- 58 UpdateDLCItemConfig
# body param: body
echo '{"data": [{"id": "ZFsmOhWl", "rewards": [{"currency": {"currencyCode": "eJUN9pV8", "namespace": "FvcOuIAU"}, "item": {"itemId": "UTRWycGP", "itemName": "NkCRwrz5", "itemSku": "M7I0029N", "itemType": "8FsNR4r4"}, "quantity": 13, "type": "CURRENCY"}, {"currency": {"currencyCode": "ZELMf37F", "namespace": "eaAd5vvg"}, "item": {"itemId": "522JXMIq", "itemName": "xFDddLaM", "itemSku": "h2bagOgN", "itemType": "OEtVkH6e"}, "quantity": 24, "type": "CURRENCY"}, {"currency": {"currencyCode": "FndKJLSU", "namespace": "VqecIhge"}, "item": {"itemId": "iJtKvLlF", "itemName": "d9sESjuP", "itemSku": "PyULbLXp", "itemType": "0QC6aUZl"}, "quantity": 4, "type": "ITEM"}]}, {"id": "kh4nmYdD", "rewards": [{"currency": {"currencyCode": "XQL2VIpc", "namespace": "87iivbGH"}, "item": {"itemId": "QfVbDuXG", "itemName": "aBrenOzZ", "itemSku": "ohNDJrf6", "itemType": "ZgqANbQc"}, "quantity": 65, "type": "CURRENCY"}, {"currency": {"currencyCode": "6JJJbkBo", "namespace": "n4iXxBRq"}, "item": {"itemId": "6rsHQTSf", "itemName": "HWOOfDmC", "itemSku": "Fi8aiUNb", "itemType": "TQURWAUU"}, "quantity": 21, "type": "CURRENCY"}, {"currency": {"currencyCode": "rsaoiWID", "namespace": "D9q1ELcO"}, "item": {"itemId": "RL59qwcQ", "itemName": "iiDEN5Tf", "itemSku": "SUdvoTN7", "itemType": "iIIFauxt"}, "quantity": 51, "type": "ITEM"}]}, {"id": "ajoBEcJ0", "rewards": [{"currency": {"currencyCode": "HcboulQq", "namespace": "eYhirhGL"}, "item": {"itemId": "CdHfyIDp", "itemName": "3rmrEoAK", "itemSku": "djMBRMSv", "itemType": "ToyWOJFd"}, "quantity": 91, "type": "CURRENCY"}, {"currency": {"currencyCode": "tKUWfBX0", "namespace": "3nKD5SOO"}, "item": {"itemId": "BUOnyvA0", "itemName": "ubfcUukU", "itemSku": "tAHdMC0t", "itemType": "Sa5xaba7"}, "quantity": 27, "type": "CURRENCY"}, {"currency": {"currencyCode": "C4WmuwUm", "namespace": "YmMBqka2"}, "item": {"itemId": "wZ6JpcEh", "itemName": "OIhmM0wE", "itemSku": "UPnlDOm1", "itemType": "eB1NHSih"}, "quantity": 74, "type": "CURRENCY"}]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateDLCItemConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 58 'UpdateDLCItemConfig' test.out

#- 59 DeleteDLCItemConfig
$CLI_EXE \
    --sn platform \
    --op DeleteDLCItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 59 'DeleteDLCItemConfig' test.out

#- 60 GetPlatformDLCConfig
$CLI_EXE \
    --sn platform \
    --op GetPlatformDLCConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 60 'GetPlatformDLCConfig' test.out

#- 61 UpdatePlatformDLCConfig
# body param: body
echo '{"data": [{"platform": "STEAM", "platformDlcIdMap": {"wI24AiA2": "ZSGclxno", "nMDYZMBp": "t9HTJs3S", "1WApHayW": "KTpXMEZE"}}, {"platform": "XBOX", "platformDlcIdMap": {"ebkXQ8lu": "xkXLmItm", "FaFpKdTF": "QWj6DXRj", "ynPie9ll": "nngdlzRF"}}, {"platform": "EPICGAMES", "platformDlcIdMap": {"SZqiyjhn": "pYY7uKyE", "HLMfU0Qy": "n5dDUi43", "wXCXRM4j": "tbiUqsU0"}}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePlatformDLCConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 61 'UpdatePlatformDLCConfig' test.out

#- 62 DeletePlatformDLCConfig
$CLI_EXE \
    --sn platform \
    --op DeletePlatformDLCConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 62 'DeletePlatformDLCConfig' test.out

#- 63 QueryEntitlements1
$CLI_EXE \
    --sn platform \
    --op QueryEntitlements1 \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --appType 'DLC' \
    --entitlementClazz 'ENTITLEMENT' \
    --entitlementName 'Q9LadZlQ' \
    --itemId '["WTDiQznx", "fURJXz68", "OREEbxJy"]' \
    --limit '59' \
    --offset '30' \
    --origin 'Xbox' \
    --userId 'O1pDPL7b' \
    > test.out 2>&1
eval_tap $? 63 'QueryEntitlements1' test.out

#- 64 QueryEntitlements
$CLI_EXE \
    --sn platform \
    --op QueryEntitlements \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --itemIds '["yUpOuOeB", "ApRQP2eo", "qvFNryoU"]' \
    --limit '87' \
    --offset '72' \
    > test.out 2>&1
eval_tap $? 64 'QueryEntitlements' test.out

#- 65 EnableEntitlementOriginFeature
$CLI_EXE \
    --sn platform \
    --op EnableEntitlementOriginFeature \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 65 'EnableEntitlementOriginFeature' test.out

#- 66 GetEntitlementConfigInfo
$CLI_EXE \
    --sn platform \
    --op GetEntitlementConfigInfo \
    --namespace $AB_NAMESPACE \
    --withoutCache 'false' \
    > test.out 2>&1
eval_tap $? 66 'GetEntitlementConfigInfo' test.out

#- 67 GrantEntitlements
# body param: body
echo '{"entitlementGrantList": [{"collectionId": "XYAhJrHg", "endDate": "1974-09-19T00:00:00Z", "grantedCode": "2PnyZsY5", "itemId": "mosw4mp7", "itemNamespace": "yskXUPk9", "language": "YI", "metadata": {"tL4kuWd3": {}, "BEBV42a9": {}, "7satLeg3": {}}, "origin": "Other", "quantity": 32, "region": "m8ErG83n", "source": "IAP", "startDate": "1977-09-30T00:00:00Z", "storeId": "kLhrgi4O"}, {"collectionId": "WKxVL9Xq", "endDate": "1998-07-18T00:00:00Z", "grantedCode": "W2XTg6eL", "itemId": "qz10soZd", "itemNamespace": "9iihWtLr", "language": "OHs-RzZv", "metadata": {"dNwb7ph8": {}, "PbU7UPN7": {}, "7blJF1Nu": {}}, "origin": "System", "quantity": 12, "region": "IILFSLmf", "source": "REWARD", "startDate": "1974-12-05T00:00:00Z", "storeId": "fHmbO6Od"}, {"collectionId": "PuFPX448", "endDate": "1984-03-05T00:00:00Z", "grantedCode": "cB4ISOPf", "itemId": "d6olrUKB", "itemNamespace": "3GMMEnnE", "language": "hn_yFpR_294", "metadata": {"LrxhPI2J": {}, "YPiawTsj": {}, "aRAaYAZf": {}}, "origin": "GooglePlay", "quantity": 41, "region": "22CQtIsl", "source": "IAP", "startDate": "1972-12-01T00:00:00Z", "storeId": "BucHznjv"}], "userIds": ["ljbml4ql", "2QIGAtGU", "5NIamH3p"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op GrantEntitlements \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 67 'GrantEntitlements' test.out

#- 68 RevokeEntitlements
# body param: body
echo '["43kwq6qo", "FWgyhWae", "7nGc57XJ"]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RevokeEntitlements \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 68 'RevokeEntitlements' test.out

#- 69 GetEntitlement
$CLI_EXE \
    --sn platform \
    --op GetEntitlement \
    --entitlementId '61OtnHjb' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 69 'GetEntitlement' test.out

#- 70 QueryFulfillmentHistories
$CLI_EXE \
    --sn platform \
    --op QueryFulfillmentHistories \
    --namespace $AB_NAMESPACE \
    --limit '44' \
    --offset '100' \
    --status 'FAIL' \
    --userId 'OEqPh5oE' \
    > test.out 2>&1
eval_tap $? 70 'QueryFulfillmentHistories' test.out

#- 71 QueryIAPClawbackHistory
$CLI_EXE \
    --sn platform \
    --op QueryIAPClawbackHistory \
    --namespace $AB_NAMESPACE \
    --endTime 'mwJ31YsA' \
    --eventType 'CHARGEBACK' \
    --externalOrderId 'iJuYjIYD' \
    --limit '20' \
    --offset '37' \
    --startTime 'qRTImgmQ' \
    --status 'INIT' \
    --userId 'RALn5mfV' \
    > test.out 2>&1
eval_tap $? 71 'QueryIAPClawbackHistory' test.out

#- 72 MockPlayStationStreamEvent
# body param: body
echo '{"body": {"account": "UWOwdjfQ", "additionalData": {"entitlement": [{"clientTransaction": [{"amountConsumed": 16, "clientTransactionId": "tcBMyR5Z"}, {"amountConsumed": 25, "clientTransactionId": "VBmzwtPK"}, {"amountConsumed": 34, "clientTransactionId": "KZbYfkqn"}], "entitlementId": "Mcnixgkg", "usageCount": 6}, {"clientTransaction": [{"amountConsumed": 58, "clientTransactionId": "ylBr8cwH"}, {"amountConsumed": 94, "clientTransactionId": "EBkb8aB0"}, {"amountConsumed": 59, "clientTransactionId": "htoMuVPS"}], "entitlementId": "yN2eTCn4", "usageCount": 2}, {"clientTransaction": [{"amountConsumed": 42, "clientTransactionId": "vQ4vuKam"}, {"amountConsumed": 86, "clientTransactionId": "82em04sI"}, {"amountConsumed": 81, "clientTransactionId": "sysNWNpB"}], "entitlementId": "qAp8ndAR", "usageCount": 88}], "purpose": "AYIcwUe8"}, "originalTitleName": "E0Cge2Mu", "paymentProductSKU": "LHusSJ7q", "purchaseDate": "ZZJgidtG", "sourceOrderItemId": "UXiSlIUW", "titleName": "Oh2yKlPK"}, "eventDomain": "oZC47UVi", "eventSource": "04H1FpWg", "eventType": "Px1gIb06", "eventVersion": 41, "id": "OHuxrUry", "timestamp": "0dUSyFy8"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op MockPlayStationStreamEvent \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 72 'MockPlayStationStreamEvent' test.out

#- 73 MockXblClawbackEvent
# body param: body
echo '{"data": {"eventDate": "56mPHhmi", "eventState": "j4ep2yXA", "lineItemId": "1woNbpi0", "orderId": "a4Tgghv0", "productId": "AzCbOhr2", "productType": "lhYuAo65", "purchasedDate": "G8Es7va9", "sandboxId": "2M440Lau", "skuId": "IogT2Q4w", "subscriptionData": {"consumedDurationInDays": 17, "dateTime": "0Z3CI8fA", "durationInDays": 44, "recurrenceId": "I7FPipH8"}}, "datacontenttype": "NP9xdUcY", "id": "XbpjXRqA", "source": "9HngU3CK", "specVersion": "31Fw1iAz", "subject": "Z4FZoYXu", "time": "vgIGKoGN", "traceparent": "93lZDfDF", "type": "bfrUkkAy"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op MockXblClawbackEvent \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 73 'MockXblClawbackEvent' test.out

#- 74 GetAppleIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetAppleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 74 'GetAppleIAPConfig' test.out

#- 75 UpdateAppleIAPConfig
# body param: body
echo '{"appAppleId": 64, "bundleId": "z1Z6LOW3", "issuerId": "pV4uT0kF", "keyId": "7dsTnft1", "password": "1fPzdsqr", "version": "V2"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateAppleIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 75 'UpdateAppleIAPConfig' test.out

#- 76 DeleteAppleIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteAppleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 76 'DeleteAppleIAPConfig' test.out

#- 77 UpdateAppleP8File
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UpdateAppleP8File \
    --namespace $AB_NAMESPACE \
    --upload file $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 77 'UpdateAppleP8File' test.out

#- 78 GetEpicGamesIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetEpicGamesIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 78 'GetEpicGamesIAPConfig' test.out

#- 79 UpdateEpicGamesIAPConfig
# body param: body
echo '{"sandboxId": "Gs8nOTyN"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateEpicGamesIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 79 'UpdateEpicGamesIAPConfig' test.out

#- 80 DeleteEpicGamesIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteEpicGamesIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 80 'DeleteEpicGamesIAPConfig' test.out

#- 81 GetGoogleIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetGoogleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 81 'GetGoogleIAPConfig' test.out

#- 82 UpdateGoogleIAPConfig
# body param: body
echo '{"applicationName": "I6TcIQLf", "notificationTokenAudience": "iYyciAzo", "notificationTokenEmail": "rBGI7dOq", "packageName": "BWkYNLaK", "serviceAccountId": "tvjDCcX7"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateGoogleIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 82 'UpdateGoogleIAPConfig' test.out

#- 83 DeleteGoogleIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteGoogleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 83 'DeleteGoogleIAPConfig' test.out

#- 84 UpdateGoogleP12File
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UpdateGoogleP12File \
    --namespace $AB_NAMESPACE \
    --upload file $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 84 'UpdateGoogleP12File' test.out

#- 85 GetIAPItemConfig
$CLI_EXE \
    --sn platform \
    --op GetIAPItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 85 'GetIAPItemConfig' test.out

#- 86 UpdateIAPItemConfig
# body param: body
echo '{"data": [{"itemIdentity": "AkDEvJCj", "itemIdentityType": "ITEM_ID", "platformProductIdMap": {"DD7EG7e4": "s4b2AIeN", "NXk5wLI8": "U3xLMXiN", "6Q5IazHr": "hmW9hBA0"}}, {"itemIdentity": "1g4c9Acf", "itemIdentityType": "ITEM_ID", "platformProductIdMap": {"hR8yz3go": "DirvbkZo", "Sv9g7jBs": "EeoARl2Y", "kbfwwyPO": "HuhJq3OB"}}, {"itemIdentity": "ojJnCljs", "itemIdentityType": "ITEM_SKU", "platformProductIdMap": {"WWwf63Ec": "PdQeiu0Y", "8UcSry4G": "mUphDc6X", "dNzXtVBf": "K300L3YE"}}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateIAPItemConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 86 'UpdateIAPItemConfig' test.out

#- 87 DeleteIAPItemConfig
$CLI_EXE \
    --sn platform \
    --op DeleteIAPItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 87 'DeleteIAPItemConfig' test.out

#- 88 GetOculusIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetOculusIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 88 'GetOculusIAPConfig' test.out

#- 89 UpdateOculusIAPConfig
# body param: body
echo '{"appId": "Lc8H3AwF", "appSecret": "aE9CJUMS"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateOculusIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 89 'UpdateOculusIAPConfig' test.out

#- 90 DeleteOculusIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteOculusIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 90 'DeleteOculusIAPConfig' test.out

#- 91 GetPlayStationIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetPlayStationIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 91 'GetPlayStationIAPConfig' test.out

#- 92 UpdatePlaystationIAPConfig
# body param: body
echo '{"backOfficeServerClientId": "nlGfq22Z", "backOfficeServerClientSecret": "BLDm8fp1", "enableStreamJob": false, "environment": "KX0R0LFM", "streamName": "x1nJkWWU", "streamPartnerName": "eXnJnWxN"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePlaystationIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 92 'UpdatePlaystationIAPConfig' test.out

#- 93 DeletePlaystationIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeletePlaystationIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 93 'DeletePlaystationIAPConfig' test.out

#- 94 ValidateExistedPlaystationIAPConfig
$CLI_EXE \
    --sn platform \
    --op ValidateExistedPlaystationIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 94 'ValidateExistedPlaystationIAPConfig' test.out

#- 95 ValidatePlaystationIAPConfig
# body param: body
echo '{"backOfficeServerClientId": "r5bUEHKN", "backOfficeServerClientSecret": "8uHevqVM", "enableStreamJob": true, "environment": "bBsgZEB5", "streamName": "wrEKMHTU", "streamPartnerName": "5VubJ6Yy"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ValidatePlaystationIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 95 'ValidatePlaystationIAPConfig' test.out

#- 96 GetSteamIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetSteamIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 96 'GetSteamIAPConfig' test.out

#- 97 UpdateSteamIAPConfig
# body param: body
echo '{"appId": "9jWBUsoy", "env": "LIVE", "publisherAuthenticationKey": "arJFEKBH", "syncMode": "TRANSACTION"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateSteamIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 97 'UpdateSteamIAPConfig' test.out

#- 98 DeleteSteamIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteSteamIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 98 'DeleteSteamIAPConfig' test.out

#- 99 GetTwitchIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetTwitchIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 99 'GetTwitchIAPConfig' test.out

#- 100 UpdateTwitchIAPConfig
# body param: body
echo '{"clientId": "lDH4j8uD", "clientSecret": "1EjnSJ1h", "organizationId": "F3m7E40U"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateTwitchIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 100 'UpdateTwitchIAPConfig' test.out

#- 101 DeleteTwitchIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteTwitchIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 101 'DeleteTwitchIAPConfig' test.out

#- 102 GetXblIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetXblIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 102 'GetXblIAPConfig' test.out

#- 103 UpdateXblIAPConfig
# body param: body
echo '{"enableClawback": false, "entraAppClientId": "Q0raQ8lQ", "entraAppClientSecret": "7q67axLk", "entraTenantId": "Ihw0BQWx", "relyingPartyCert": "ExOBP3sK"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXblIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 103 'UpdateXblIAPConfig' test.out

#- 104 DeleteXblAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteXblAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 104 'DeleteXblAPConfig' test.out

#- 105 UpdateXblBPCertFile
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UpdateXblBPCertFile \
    --namespace $AB_NAMESPACE \
    --upload file $TEMP_FILE_UPLOAD \
    --password '5W9xy3zP' \
    > test.out 2>&1
eval_tap $? 105 'UpdateXblBPCertFile' test.out

#- 106 QueryThirdPartyNotifications
$CLI_EXE \
    --sn platform \
    --op QueryThirdPartyNotifications \
    --namespace $AB_NAMESPACE \
    --endDate 'RV5lGIOA' \
    --externalId '7SvGLGYe' \
    --limit '89' \
    --offset '65' \
    --source 'STEAM' \
    --startDate 'raHyhC2u' \
    --status 'WARN' \
    --type 'Sz0XnNFK' \
    > test.out 2>&1
eval_tap $? 106 'QueryThirdPartyNotifications' test.out

#- 107 QueryAbnormalTransactions
$CLI_EXE \
    --sn platform \
    --op QueryAbnormalTransactions \
    --namespace $AB_NAMESPACE \
    --limit '6' \
    --offset '93' \
    --orderId 'p3UqDvBv' \
    --steamId 'no2WuCcD' \
    > test.out 2>&1
eval_tap $? 107 'QueryAbnormalTransactions' test.out

#- 108 AdminGetSteamJobInfo
$CLI_EXE \
    --sn platform \
    --op AdminGetSteamJobInfo \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 108 'AdminGetSteamJobInfo' test.out

#- 109 AdminResetSteamJobTime
# body param: body
echo '{"env": "LIVE", "lastTime": "1971-06-12T00:00:00Z"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op AdminResetSteamJobTime \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 109 'AdminResetSteamJobTime' test.out

#- 110 AdminRefundIAPOrder
$CLI_EXE \
    --sn platform \
    --op AdminRefundIAPOrder \
    --iapOrderNo 'eAy5I8TZ' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 110 'AdminRefundIAPOrder' test.out

#- 111 QuerySteamReportHistories
$CLI_EXE \
    --sn platform \
    --op QuerySteamReportHistories \
    --namespace $AB_NAMESPACE \
    --limit '24' \
    --offset '94' \
    --orderId 'GtcEuYBT' \
    --processStatus 'PROCESSED' \
    --steamId 'm2CGmv7N' \
    > test.out 2>&1
eval_tap $? 111 'QuerySteamReportHistories' test.out

#- 112 QueryThirdPartySubscription
$CLI_EXE \
    --sn platform \
    --op QueryThirdPartySubscription \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --groupId 'AHK1Pp9A' \
    --limit '52' \
    --offset '3' \
    --platform 'TWITCH' \
    --productId '8zZFcJxX' \
    --userId 'puCisN4y' \
    > test.out 2>&1
eval_tap $? 112 'QueryThirdPartySubscription' test.out

#- 113 GetIAPOrderConsumeDetails
$CLI_EXE \
    --sn platform \
    --op GetIAPOrderConsumeDetails \
    --iapOrderNo 'ufDXYVJI' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 113 'GetIAPOrderConsumeDetails' test.out

#- 114 DownloadInvoiceDetails
$CLI_EXE \
    --sn platform \
    --op DownloadInvoiceDetails \
    --namespace $AB_NAMESPACE \
    --endTime 'BY3SliWj' \
    --feature 'ZVpHk5Ly' \
    --itemId 'gHBdseON' \
    --itemType 'MEDIA' \
    --startTime 'YoDyRCK0' \
    > test.out 2>&1
eval_tap $? 114 'DownloadInvoiceDetails' test.out

#- 115 GenerateInvoiceSummary
$CLI_EXE \
    --sn platform \
    --op GenerateInvoiceSummary \
    --namespace $AB_NAMESPACE \
    --endTime 'ANZAyE7J' \
    --feature 'LDNseSXL' \
    --itemId 'HP45AWcf' \
    --itemType 'BUNDLE' \
    --startTime 'l83eXkDe' \
    > test.out 2>&1
eval_tap $? 115 'GenerateInvoiceSummary' test.out

#- 116 SyncInGameItem
# body param: body
echo '{"categoryPath": "mbA77Bx6", "targetItemId": "GEgT0yMW", "targetNamespace": "a4rK1kRq"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncInGameItem \
    --namespace $AB_NAMESPACE \
    --storeId 'nZQudM6W' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 116 'SyncInGameItem' test.out

#- 117 CreateItem
# body param: body
echo '{"appId": "pTpry5zr", "appType": "DLC", "baseAppId": "txxFTQi1", "boothName": "lsejDL5P", "categoryPath": "P8qVT4DT", "clazz": "WgRO2DTV", "displayOrder": 91, "entitlementType": "CONSUMABLE", "ext": {"MPBvU4Xw": {}, "wNaTexkJ": {}, "lH57TDc5": {}}, "features": ["YjPLTDsT", "qWBRW4LL", "NRc8uvkc"], "flexible": false, "images": [{"as": "hU4wSJcs", "caption": "9N3OYRJS", "height": 92, "imageUrl": "jJAuWTZk", "smallImageUrl": "8bxIKrdH", "width": 20}, {"as": "1i3E3kGe", "caption": "NbrhvfDN", "height": 47, "imageUrl": "Td3RvknZ", "smallImageUrl": "BBC04arg", "width": 65}, {"as": "lyNshCPn", "caption": "t3xuZ7wU", "height": 80, "imageUrl": "WMhtkquV", "smallImageUrl": "pmOpgpfC", "width": 81}], "inventoryConfig": {"customAttributes": {"OvyfKCR0": {}, "PbbLCn5n": {}, "sTA6shes": {}}, "serverCustomAttributes": {"LfW4gitn": {}, "OPVoqsN0": {}, "LtBpiasG": {}}, "slotUsed": 75}, "itemIds": ["puZYBW24", "nqnth4bk", "u28kBE0F"], "itemQty": {"F6s8T6RK": 75, "qaBgfsEW": 60, "EgcQ7n6o": 67}, "itemType": "OPTIONBOX", "listable": true, "localizations": {"oMcwOVu7": {"description": "FvFhzsUF", "localExt": {"qcQHTuRX": {}, "Lb6hxJ8m": {}, "zeLSoZ3L": {}}, "longDescription": "ilSA7nT3", "title": "yohCZlJa"}, "sf46S6SH": {"description": "7yIF3TuP", "localExt": {"quh4wL6u": {}, "AORg1SOq": {}, "P4IcXCI2": {}}, "longDescription": "WcHaXD5Z", "title": "uIPXqA2P"}, "FoWhrqKL": {"description": "WckB5Xgx", "localExt": {"jKJbaTzo": {}, "ShGn09jS": {}, "IlA5RBtW": {}}, "longDescription": "v0CtjqdJ", "title": "yqUdfqmv"}}, "lootBoxConfig": {"rewardCount": 45, "rewards": [{"lootBoxItems": [{"count": 45, "duration": 29, "endDate": "1985-03-30T00:00:00Z", "itemId": "1f32kDT7", "itemSku": "cXAVwwVf", "itemType": "ec3RniLi"}, {"count": 22, "duration": 78, "endDate": "1991-06-28T00:00:00Z", "itemId": "MwvY7j0D", "itemSku": "ykBNvGip", "itemType": "O6OXoRMN"}, {"count": 62, "duration": 41, "endDate": "1975-02-13T00:00:00Z", "itemId": "PHYCyx9U", "itemSku": "NoSpoQhr", "itemType": "SDZcyQq6"}], "name": "SF7i2Vjf", "odds": 0.7633178058117129, "type": "REWARD", "weight": 5}, {"lootBoxItems": [{"count": 85, "duration": 56, "endDate": "1973-09-27T00:00:00Z", "itemId": "nkvvOLFt", "itemSku": "N0TigSCr", "itemType": "OX0aCmF9"}, {"count": 23, "duration": 76, "endDate": "1985-02-17T00:00:00Z", "itemId": "Pg2BOeP8", "itemSku": "lMnygnh4", "itemType": "Urjx4HW4"}, {"count": 18, "duration": 47, "endDate": "1997-11-12T00:00:00Z", "itemId": "ZrtIT2vz", "itemSku": "fqUOkjXj", "itemType": "8uE02xa1"}], "name": "BAG4Dfyp", "odds": 0.41620380198341833, "type": "PROBABILITY_GROUP", "weight": 58}, {"lootBoxItems": [{"count": 19, "duration": 18, "endDate": "1999-06-01T00:00:00Z", "itemId": "ItH4EJSs", "itemSku": "FkxfcnsR", "itemType": "YCzdoAuE"}, {"count": 75, "duration": 16, "endDate": "1972-11-13T00:00:00Z", "itemId": "7gbyoAYR", "itemSku": "Bxk7CH2V", "itemType": "wc91knaH"}, {"count": 48, "duration": 4, "endDate": "1983-03-31T00:00:00Z", "itemId": "ObiWrLIC", "itemSku": "FsyqTr0c", "itemType": "C9vJ8XZm"}], "name": "1a6ZBUDi", "odds": 0.6314323642921028, "type": "REWARD", "weight": 4}], "rollFunction": "CUSTOM"}, "maxCount": 55, "maxCountPerUser": 30, "name": "JsAfArrU", "optionBoxConfig": {"boxItems": [{"count": 15, "duration": 52, "endDate": "1986-05-17T00:00:00Z", "itemId": "naE5gHAK", "itemSku": "y1bIXdBE", "itemType": "PTErA6P0"}, {"count": 37, "duration": 2, "endDate": "1977-05-04T00:00:00Z", "itemId": "cwJisT1x", "itemSku": "ExGyTqlz", "itemType": "pIz4lAar"}, {"count": 99, "duration": 81, "endDate": "1999-01-17T00:00:00Z", "itemId": "NoiNZS0V", "itemSku": "H9nBMiia", "itemType": "a3fISYVr"}]}, "purchasable": true, "recurring": {"cycle": "QUARTERLY", "fixedFreeDays": 3, "fixedTrialCycles": 54, "graceDays": 85}, "regionData": {"cyR8Iq0g": [{"currencyCode": "i0kVccHj", "currencyNamespace": "N2nSu0zR", "currencyType": "REAL", "discountAmount": 55, "discountExpireAt": "1993-01-11T00:00:00Z", "discountPercentage": 71, "discountPurchaseAt": "1989-02-05T00:00:00Z", "expireAt": "1986-11-24T00:00:00Z", "price": 23, "purchaseAt": "1993-07-02T00:00:00Z", "trialPrice": 51}, {"currencyCode": "EMapPnrj", "currencyNamespace": "AURZgy48", "currencyType": "VIRTUAL", "discountAmount": 66, "discountExpireAt": "1997-12-20T00:00:00Z", "discountPercentage": 90, "discountPurchaseAt": "1990-09-11T00:00:00Z", "expireAt": "1974-09-24T00:00:00Z", "price": 73, "purchaseAt": "1989-10-22T00:00:00Z", "trialPrice": 30}, {"currencyCode": "IXxeuKOT", "currencyNamespace": "ESqjwj46", "currencyType": "REAL", "discountAmount": 25, "discountExpireAt": "1999-06-21T00:00:00Z", "discountPercentage": 41, "discountPurchaseAt": "1991-01-05T00:00:00Z", "expireAt": "1980-02-14T00:00:00Z", "price": 91, "purchaseAt": "1978-05-20T00:00:00Z", "trialPrice": 5}], "n0ciTMJV": [{"currencyCode": "RY4BQvM1", "currencyNamespace": "8VQ1imjL", "currencyType": "REAL", "discountAmount": 87, "discountExpireAt": "1973-10-20T00:00:00Z", "discountPercentage": 18, "discountPurchaseAt": "1987-03-23T00:00:00Z", "expireAt": "1989-02-03T00:00:00Z", "price": 33, "purchaseAt": "1977-04-13T00:00:00Z", "trialPrice": 60}, {"currencyCode": "xRmbAC9Z", "currencyNamespace": "efuylNEn", "currencyType": "VIRTUAL", "discountAmount": 78, "discountExpireAt": "1985-05-26T00:00:00Z", "discountPercentage": 46, "discountPurchaseAt": "1978-02-02T00:00:00Z", "expireAt": "1986-12-28T00:00:00Z", "price": 2, "purchaseAt": "1976-07-14T00:00:00Z", "trialPrice": 95}, {"currencyCode": "tA2L3Txq", "currencyNamespace": "LLVkLyZ2", "currencyType": "REAL", "discountAmount": 21, "discountExpireAt": "1978-10-05T00:00:00Z", "discountPercentage": 96, "discountPurchaseAt": "1978-06-15T00:00:00Z", "expireAt": "1982-01-01T00:00:00Z", "price": 16, "purchaseAt": "1988-11-12T00:00:00Z", "trialPrice": 7}], "1nn5vmkD": [{"currencyCode": "BNJsJ8QT", "currencyNamespace": "zThQ4qY8", "currencyType": "VIRTUAL", "discountAmount": 24, "discountExpireAt": "1994-09-22T00:00:00Z", "discountPercentage": 88, "discountPurchaseAt": "1975-03-28T00:00:00Z", "expireAt": "1984-01-07T00:00:00Z", "price": 38, "purchaseAt": "1986-06-24T00:00:00Z", "trialPrice": 76}, {"currencyCode": "O1PUKSOP", "currencyNamespace": "EYPtSG1I", "currencyType": "REAL", "discountAmount": 16, "discountExpireAt": "1997-12-20T00:00:00Z", "discountPercentage": 33, "discountPurchaseAt": "1985-01-10T00:00:00Z", "expireAt": "1971-08-06T00:00:00Z", "price": 92, "purchaseAt": "1988-04-01T00:00:00Z", "trialPrice": 17}, {"currencyCode": "1XrOG7Gx", "currencyNamespace": "NL6dNuun", "currencyType": "VIRTUAL", "discountAmount": 80, "discountExpireAt": "1975-07-12T00:00:00Z", "discountPercentage": 98, "discountPurchaseAt": "1980-08-21T00:00:00Z", "expireAt": "1995-04-02T00:00:00Z", "price": 77, "purchaseAt": "1996-08-05T00:00:00Z", "trialPrice": 15}]}, "saleConfig": {"currencyCode": "C0617ZcN", "price": 12}, "seasonType": "PASS", "sectionExclusive": true, "sellable": true, "sku": "7HQEanrr", "stackable": true, "status": "INACTIVE", "tags": ["BtTezytV", "4XWLjNz4", "ZzxunVg5"], "targetCurrencyCode": "Mai3iIfO", "targetNamespace": "pJZf8gys", "thumbnailUrl": "YZgBJeAf", "useCount": 82}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateItem \
    --namespace $AB_NAMESPACE \
    --storeId '4srgMsOZ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 117 'CreateItem' test.out

#- 118 GetItemByAppId
$CLI_EXE \
    --sn platform \
    --op GetItemByAppId \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --storeId 'AUVIh9dE' \
    --appId 'OVaG2sQV' \
    > test.out 2>&1
eval_tap $? 118 'GetItemByAppId' test.out

#- 119 QueryItems
$CLI_EXE \
    --sn platform \
    --op QueryItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --appType 'DLC' \
    --availableDate 'C3jP0ith' \
    --baseAppId 'tnrfb004' \
    --categoryPath 'SDfNJE45' \
    --features '6ZCwczlM' \
    --includeSubCategoryItem 'true' \
    --itemType 'OPTIONBOX' \
    --limit '79' \
    --offset '38' \
    --region 'AwAZgThv' \
    --sortBy '["name:asc", "displayOrder:asc", "updatedAt:desc"]' \
    --storeId 'QtaMZ6iJ' \
    --tags 'hv2B0Bie' \
    --targetNamespace '8JkFjcEk' \
    > test.out 2>&1
eval_tap $? 119 'QueryItems' test.out

#- 120 ListBasicItemsByFeatures
$CLI_EXE \
    --sn platform \
    --op ListBasicItemsByFeatures \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --features '["w9E0tIX0", "jBOHttg0", "b65hBMfi"]' \
    > test.out 2>&1
eval_tap $? 120 'ListBasicItemsByFeatures' test.out

#- 121 GetItems
$CLI_EXE \
    --sn platform \
    --op GetItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --storeId 'affRMBzG' \
    --itemIds 'ZF3r1d9v' \
    > test.out 2>&1
eval_tap $? 121 'GetItems' test.out

#- 122 GetItemBySku
$CLI_EXE \
    --sn platform \
    --op GetItemBySku \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --storeId '2z0bo38j' \
    --sku 'orOOJO8e' \
    > test.out 2>&1
eval_tap $? 122 'GetItemBySku' test.out

#- 123 GetLocaleItemBySku
$CLI_EXE \
    --sn platform \
    --op GetLocaleItemBySku \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --language 'MIc5bAFl' \
    --populateBundle 'true' \
    --region '3L6xsk8N' \
    --storeId 'z8okjkuO' \
    --sku 'FY1uQKdD' \
    > test.out 2>&1
eval_tap $? 123 'GetLocaleItemBySku' test.out

#- 124 GetEstimatedPrice
$CLI_EXE \
    --sn platform \
    --op GetEstimatedPrice \
    --namespace $AB_NAMESPACE \
    --platform 'rmSZMTRe' \
    --region 'cbqFiG85' \
    --storeId 'A3BEvFDA' \
    --itemIds 'a1Ompm5r' \
    --userId 'aRAc4BFn' \
    > test.out 2>&1
eval_tap $? 124 'GetEstimatedPrice' test.out

#- 125 GetItemIdBySku
$CLI_EXE \
    --sn platform \
    --op GetItemIdBySku \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --storeId '7GnC1YXE' \
    --sku 'Bq3NA8lA' \
    > test.out 2>&1
eval_tap $? 125 'GetItemIdBySku' test.out

#- 126 GetBulkItemIdBySkus
$CLI_EXE \
    --sn platform \
    --op GetBulkItemIdBySkus \
    --namespace $AB_NAMESPACE \
    --sku '["LFXFVxmQ", "VxNC5Pbf", "gemrMWdt"]' \
    --storeId 'rrNEIHXL' \
    > test.out 2>&1
eval_tap $? 126 'GetBulkItemIdBySkus' test.out

#- 127 BulkGetLocaleItems
$CLI_EXE \
    --sn platform \
    --op BulkGetLocaleItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --language 'wddL4zi9' \
    --region '8lBHHg18' \
    --storeId '6mmwN23X' \
    --itemIds '0yx7ixqp' \
    > test.out 2>&1
eval_tap $? 127 'BulkGetLocaleItems' test.out

#- 128 GetAvailablePredicateTypes
$CLI_EXE \
    --sn platform \
    --op GetAvailablePredicateTypes \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 128 'GetAvailablePredicateTypes' test.out

#- 129 ValidateItemPurchaseCondition
# body param: body
echo '{"itemIds": ["kCGlvGdH", "H49S96VA", "8P8zEHy3"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ValidateItemPurchaseCondition \
    --namespace $AB_NAMESPACE \
    --platform 'BOXSIsgL' \
    --userId 'Wiby3FSs' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 129 'ValidateItemPurchaseCondition' test.out

#- 130 BulkUpdateRegionData
# body param: body
echo '{"changes": [{"itemIdentities": ["kZWRlc3K", "IB61eZKB", "IW3zUW7f"], "itemIdentityType": "ITEM_SKU", "regionData": {"SfXq3EXZ": [{"currencyCode": "zfbC7hTg", "currencyNamespace": "9rl55Vir", "currencyType": "REAL", "discountAmount": 15, "discountExpireAt": "1999-05-31T00:00:00Z", "discountPercentage": 14, "discountPurchaseAt": "1978-09-25T00:00:00Z", "discountedPrice": 39, "expireAt": "1985-02-20T00:00:00Z", "price": 55, "purchaseAt": "1992-07-31T00:00:00Z", "trialPrice": 32}, {"currencyCode": "BB2rXTGF", "currencyNamespace": "QPlmH8by", "currencyType": "VIRTUAL", "discountAmount": 96, "discountExpireAt": "1978-07-16T00:00:00Z", "discountPercentage": 86, "discountPurchaseAt": "1977-03-18T00:00:00Z", "discountedPrice": 88, "expireAt": "1997-05-08T00:00:00Z", "price": 51, "purchaseAt": "1991-10-16T00:00:00Z", "trialPrice": 73}, {"currencyCode": "JnRtRHHw", "currencyNamespace": "9UjP6cUS", "currencyType": "REAL", "discountAmount": 0, "discountExpireAt": "1983-07-25T00:00:00Z", "discountPercentage": 70, "discountPurchaseAt": "1992-12-28T00:00:00Z", "discountedPrice": 74, "expireAt": "1977-07-11T00:00:00Z", "price": 37, "purchaseAt": "1988-05-22T00:00:00Z", "trialPrice": 66}], "ixSmJNmT": [{"currencyCode": "gen8a8sw", "currencyNamespace": "rzLWFIod", "currencyType": "VIRTUAL", "discountAmount": 86, "discountExpireAt": "1993-01-27T00:00:00Z", "discountPercentage": 49, "discountPurchaseAt": "1998-03-05T00:00:00Z", "discountedPrice": 89, "expireAt": "1994-02-09T00:00:00Z", "price": 27, "purchaseAt": "1972-07-02T00:00:00Z", "trialPrice": 6}, {"currencyCode": "DqOwhXbG", "currencyNamespace": "9L2JQJtR", "currencyType": "REAL", "discountAmount": 66, "discountExpireAt": "1975-09-11T00:00:00Z", "discountPercentage": 84, "discountPurchaseAt": "1975-09-29T00:00:00Z", "discountedPrice": 71, "expireAt": "1979-07-05T00:00:00Z", "price": 26, "purchaseAt": "1990-10-17T00:00:00Z", "trialPrice": 88}, {"currencyCode": "vVxuxIng", "currencyNamespace": "n1GQinE7", "currencyType": "VIRTUAL", "discountAmount": 6, "discountExpireAt": "1985-10-21T00:00:00Z", "discountPercentage": 66, "discountPurchaseAt": "1971-11-23T00:00:00Z", "discountedPrice": 6, "expireAt": "1984-04-22T00:00:00Z", "price": 92, "purchaseAt": "1980-09-05T00:00:00Z", "trialPrice": 74}], "Jl7Opejo": [{"currencyCode": "sefOkmY5", "currencyNamespace": "s8hnkZ2R", "currencyType": "VIRTUAL", "discountAmount": 84, "discountExpireAt": "1984-06-09T00:00:00Z", "discountPercentage": 17, "discountPurchaseAt": "1976-10-28T00:00:00Z", "discountedPrice": 39, "expireAt": "1985-01-16T00:00:00Z", "price": 67, "purchaseAt": "1990-01-31T00:00:00Z", "trialPrice": 31}, {"currencyCode": "htswxXH1", "currencyNamespace": "8TSt94gJ", "currencyType": "REAL", "discountAmount": 57, "discountExpireAt": "1990-03-18T00:00:00Z", "discountPercentage": 6, "discountPurchaseAt": "1986-04-08T00:00:00Z", "discountedPrice": 23, "expireAt": "1989-08-22T00:00:00Z", "price": 62, "purchaseAt": "1996-01-11T00:00:00Z", "trialPrice": 54}, {"currencyCode": "hfcMukBp", "currencyNamespace": "vsD7OziH", "currencyType": "VIRTUAL", "discountAmount": 84, "discountExpireAt": "1977-02-13T00:00:00Z", "discountPercentage": 36, "discountPurchaseAt": "1998-04-11T00:00:00Z", "discountedPrice": 52, "expireAt": "1984-12-08T00:00:00Z", "price": 31, "purchaseAt": "1975-07-28T00:00:00Z", "trialPrice": 34}]}}, {"itemIdentities": ["3olo5ET5", "Wd4uVeiS", "IMhtWOF9"], "itemIdentityType": "ITEM_ID", "regionData": {"3Y2XBlMJ": [{"currencyCode": "3xTQZWX1", "currencyNamespace": "ji6E3NgK", "currencyType": "VIRTUAL", "discountAmount": 59, "discountExpireAt": "1995-08-08T00:00:00Z", "discountPercentage": 33, "discountPurchaseAt": "1984-06-11T00:00:00Z", "discountedPrice": 75, "expireAt": "1982-09-22T00:00:00Z", "price": 19, "purchaseAt": "1999-10-05T00:00:00Z", "trialPrice": 44}, {"currencyCode": "ISL8nHxa", "currencyNamespace": "1KDywIio", "currencyType": "VIRTUAL", "discountAmount": 41, "discountExpireAt": "1992-05-16T00:00:00Z", "discountPercentage": 15, "discountPurchaseAt": "1977-12-22T00:00:00Z", "discountedPrice": 18, "expireAt": "1999-05-04T00:00:00Z", "price": 65, "purchaseAt": "1972-10-18T00:00:00Z", "trialPrice": 30}, {"currencyCode": "mXJyutad", "currencyNamespace": "woMnzQSq", "currencyType": "VIRTUAL", "discountAmount": 74, "discountExpireAt": "1977-09-10T00:00:00Z", "discountPercentage": 37, "discountPurchaseAt": "1977-09-16T00:00:00Z", "discountedPrice": 18, "expireAt": "1997-04-30T00:00:00Z", "price": 38, "purchaseAt": "1978-03-08T00:00:00Z", "trialPrice": 57}], "tXX2uIzg": [{"currencyCode": "zvN5uPB8", "currencyNamespace": "3EjuV6G4", "currencyType": "REAL", "discountAmount": 53, "discountExpireAt": "1998-09-14T00:00:00Z", "discountPercentage": 38, "discountPurchaseAt": "1977-12-31T00:00:00Z", "discountedPrice": 56, "expireAt": "1990-01-10T00:00:00Z", "price": 0, "purchaseAt": "1995-10-08T00:00:00Z", "trialPrice": 62}, {"currencyCode": "xXEwROmx", "currencyNamespace": "lgMEF20K", "currencyType": "REAL", "discountAmount": 57, "discountExpireAt": "1982-03-15T00:00:00Z", "discountPercentage": 6, "discountPurchaseAt": "1990-06-15T00:00:00Z", "discountedPrice": 56, "expireAt": "1973-10-22T00:00:00Z", "price": 61, "purchaseAt": "1988-08-29T00:00:00Z", "trialPrice": 56}, {"currencyCode": "A9TSsZ5v", "currencyNamespace": "w0O5cmw7", "currencyType": "REAL", "discountAmount": 6, "discountExpireAt": "1990-11-30T00:00:00Z", "discountPercentage": 84, "discountPurchaseAt": "1979-02-06T00:00:00Z", "discountedPrice": 19, "expireAt": "1982-10-26T00:00:00Z", "price": 44, "purchaseAt": "1971-01-19T00:00:00Z", "trialPrice": 18}], "jmTC9AjM": [{"currencyCode": "CqaXh3pG", "currencyNamespace": "Y3CB3fZb", "currencyType": "REAL", "discountAmount": 45, "discountExpireAt": "1988-06-23T00:00:00Z", "discountPercentage": 27, "discountPurchaseAt": "1997-11-24T00:00:00Z", "discountedPrice": 67, "expireAt": "1994-10-10T00:00:00Z", "price": 31, "purchaseAt": "1997-05-07T00:00:00Z", "trialPrice": 95}, {"currencyCode": "mn9xNqgW", "currencyNamespace": "01giDbDz", "currencyType": "VIRTUAL", "discountAmount": 74, "discountExpireAt": "1971-10-06T00:00:00Z", "discountPercentage": 68, "discountPurchaseAt": "1976-04-24T00:00:00Z", "discountedPrice": 56, "expireAt": "1987-08-12T00:00:00Z", "price": 35, "purchaseAt": "1991-09-28T00:00:00Z", "trialPrice": 66}, {"currencyCode": "kqDlZHV9", "currencyNamespace": "tM2LwBFK", "currencyType": "REAL", "discountAmount": 2, "discountExpireAt": "1990-05-14T00:00:00Z", "discountPercentage": 41, "discountPurchaseAt": "1977-09-24T00:00:00Z", "discountedPrice": 60, "expireAt": "1988-02-25T00:00:00Z", "price": 33, "purchaseAt": "1997-02-28T00:00:00Z", "trialPrice": 34}]}}, {"itemIdentities": ["hHhB0Wkz", "WF5YwJyr", "ZeMngpJ8"], "itemIdentityType": "ITEM_ID", "regionData": {"O4aDJXbJ": [{"currencyCode": "XXRGyu0i", "currencyNamespace": "nLl4roEN", "currencyType": "VIRTUAL", "discountAmount": 30, "discountExpireAt": "1995-05-28T00:00:00Z", "discountPercentage": 85, "discountPurchaseAt": "1998-01-04T00:00:00Z", "discountedPrice": 44, "expireAt": "1978-08-28T00:00:00Z", "price": 97, "purchaseAt": "1980-07-17T00:00:00Z", "trialPrice": 70}, {"currencyCode": "D9wCQC0O", "currencyNamespace": "gLqWU9vj", "currencyType": "VIRTUAL", "discountAmount": 26, "discountExpireAt": "1971-08-01T00:00:00Z", "discountPercentage": 15, "discountPurchaseAt": "1975-05-02T00:00:00Z", "discountedPrice": 51, "expireAt": "1971-09-29T00:00:00Z", "price": 40, "purchaseAt": "1980-07-03T00:00:00Z", "trialPrice": 93}, {"currencyCode": "UyMEUCzv", "currencyNamespace": "rODVwT3F", "currencyType": "VIRTUAL", "discountAmount": 5, "discountExpireAt": "1989-12-01T00:00:00Z", "discountPercentage": 51, "discountPurchaseAt": "1972-04-04T00:00:00Z", "discountedPrice": 97, "expireAt": "1986-03-24T00:00:00Z", "price": 97, "purchaseAt": "1981-04-11T00:00:00Z", "trialPrice": 35}], "eCRCyarq": [{"currencyCode": "FGxydp1b", "currencyNamespace": "gU4E7XOt", "currencyType": "REAL", "discountAmount": 79, "discountExpireAt": "1984-08-11T00:00:00Z", "discountPercentage": 62, "discountPurchaseAt": "1979-09-22T00:00:00Z", "discountedPrice": 44, "expireAt": "1981-01-06T00:00:00Z", "price": 33, "purchaseAt": "1974-06-18T00:00:00Z", "trialPrice": 68}, {"currencyCode": "G1MLWxMd", "currencyNamespace": "kjIPoNp2", "currencyType": "VIRTUAL", "discountAmount": 17, "discountExpireAt": "1998-03-31T00:00:00Z", "discountPercentage": 59, "discountPurchaseAt": "1994-07-31T00:00:00Z", "discountedPrice": 40, "expireAt": "1995-05-30T00:00:00Z", "price": 72, "purchaseAt": "1982-01-08T00:00:00Z", "trialPrice": 82}, {"currencyCode": "tsX82NAT", "currencyNamespace": "0monrnRp", "currencyType": "REAL", "discountAmount": 7, "discountExpireAt": "1985-06-20T00:00:00Z", "discountPercentage": 28, "discountPurchaseAt": "1988-01-03T00:00:00Z", "discountedPrice": 34, "expireAt": "1977-08-17T00:00:00Z", "price": 10, "purchaseAt": "1997-05-09T00:00:00Z", "trialPrice": 38}], "TO4ukDML": [{"currencyCode": "W0XRxNg3", "currencyNamespace": "TtSPSf6S", "currencyType": "VIRTUAL", "discountAmount": 66, "discountExpireAt": "1995-08-18T00:00:00Z", "discountPercentage": 93, "discountPurchaseAt": "1990-05-15T00:00:00Z", "discountedPrice": 98, "expireAt": "1987-12-28T00:00:00Z", "price": 75, "purchaseAt": "1976-03-04T00:00:00Z", "trialPrice": 89}, {"currencyCode": "YrSGSxpq", "currencyNamespace": "2ihrJ5CW", "currencyType": "VIRTUAL", "discountAmount": 79, "discountExpireAt": "1993-06-29T00:00:00Z", "discountPercentage": 51, "discountPurchaseAt": "1980-08-10T00:00:00Z", "discountedPrice": 93, "expireAt": "1978-05-24T00:00:00Z", "price": 69, "purchaseAt": "1996-10-23T00:00:00Z", "trialPrice": 90}, {"currencyCode": "q6SDAbTx", "currencyNamespace": "5nR7cYHz", "currencyType": "VIRTUAL", "discountAmount": 99, "discountExpireAt": "1979-12-22T00:00:00Z", "discountPercentage": 58, "discountPurchaseAt": "1987-07-24T00:00:00Z", "discountedPrice": 15, "expireAt": "1982-05-25T00:00:00Z", "price": 94, "purchaseAt": "1973-01-12T00:00:00Z", "trialPrice": 33}]}}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op BulkUpdateRegionData \
    --namespace $AB_NAMESPACE \
    --storeId 'jeYMXlLQ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 130 'BulkUpdateRegionData' test.out

#- 131 SearchItems
$CLI_EXE \
    --sn platform \
    --op SearchItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --itemType 'CODE' \
    --limit '33' \
    --offset '2' \
    --sortBy '0q3ZSQm9' \
    --storeId 'zvZAz1pl' \
    --keyword 'iGR4WPkw' \
    --language 'FQv6Rb1i' \
    > test.out 2>&1
eval_tap $? 131 'SearchItems' test.out

#- 132 QueryUncategorizedItems
$CLI_EXE \
    --sn platform \
    --op QueryUncategorizedItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --limit '21' \
    --offset '38' \
    --sortBy '["updatedAt:asc", "name:asc"]' \
    --storeId 'JNEwGJqS' \
    > test.out 2>&1
eval_tap $? 132 'QueryUncategorizedItems' test.out

#- 133 GetItem
$CLI_EXE \
    --sn platform \
    --op GetItem \
    --itemId 'CihQnld1' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --storeId 'xHA4hPrB' \
    > test.out 2>&1
eval_tap $? 133 'GetItem' test.out

#- 134 UpdateItem
# body param: body
echo '{"appId": "2e3Uu7Sn", "appType": "DLC", "baseAppId": "W1oydJMP", "boothName": "klqzReos", "categoryPath": "CCrZLQQc", "clazz": "NH3bJpCX", "displayOrder": 95, "entitlementType": "DURABLE", "ext": {"UmHWRgKH": {}, "9ubC9u79": {}, "50Qp8Hni": {}}, "features": ["yFyRY3cI", "OeShy9ya", "NCGueZYc"], "flexible": false, "images": [{"as": "h7Fi4bsP", "caption": "2Gi3ym1d", "height": 50, "imageUrl": "zJuuJuPs", "smallImageUrl": "wGE99bmR", "width": 32}, {"as": "DUJQe9qU", "caption": "UlC8sIiU", "height": 30, "imageUrl": "2DiKVsMJ", "smallImageUrl": "rAKECn1J", "width": 37}, {"as": "au7sbXgL", "caption": "yKnjqkgJ", "height": 1, "imageUrl": "0NnzIRwr", "smallImageUrl": "qCQn0g1q", "width": 90}], "inventoryConfig": {"customAttributes": {"Uh0Y8JXU": {}, "TJYYw2Bb": {}, "r2xvk4TX": {}}, "serverCustomAttributes": {"usBWgnJb": {}, "kq568nYy": {}, "KVCjDokU": {}}, "slotUsed": 22}, "itemIds": ["VoLGm6Qa", "X1LuYPJc", "6yDmn0SG"], "itemQty": {"lIfCk6qe": 74, "EuY1TFzd": 32, "kb1nW2cX": 0}, "itemType": "CODE", "listable": false, "localizations": {"emY1pHI4": {"description": "HtpVsZZ8", "localExt": {"S4dcj0qg": {}, "UkC9LjSD": {}, "WG0Zgg3J": {}}, "longDescription": "MffcnRkJ", "title": "3f0DwxP9"}, "mSpvrwyW": {"description": "eLDAYzIy", "localExt": {"rZxeAjLA": {}, "q89J9Dc1": {}, "2J7OP7DU": {}}, "longDescription": "4Xu06PU2", "title": "goRwKtZO"}, "ctuHKzE9": {"description": "RBSXtdyY", "localExt": {"jUGKjnoF": {}, "crkx60Le": {}, "hiz0toI2": {}}, "longDescription": "AZggmz76", "title": "FvrsYYJM"}}, "lootBoxConfig": {"rewardCount": 37, "rewards": [{"lootBoxItems": [{"count": 44, "duration": 34, "endDate": "1976-02-25T00:00:00Z", "itemId": "7FM879CE", "itemSku": "NCBdduq6", "itemType": "j8j8nIjU"}, {"count": 73, "duration": 57, "endDate": "1986-01-18T00:00:00Z", "itemId": "7XQ0vLMI", "itemSku": "LqLbZMM9", "itemType": "QzHfT4JT"}, {"count": 39, "duration": 25, "endDate": "1983-08-16T00:00:00Z", "itemId": "sbn6ixZy", "itemSku": "mZv2bRGm", "itemType": "Cq6cc08c"}], "name": "vhNMRxIp", "odds": 0.931427408397609, "type": "REWARD", "weight": 60}, {"lootBoxItems": [{"count": 9, "duration": 22, "endDate": "1973-02-21T00:00:00Z", "itemId": "xrmUBYC4", "itemSku": "Nv0nZnuH", "itemType": "CXjAvWWR"}, {"count": 0, "duration": 33, "endDate": "1986-08-08T00:00:00Z", "itemId": "NPXpp9hM", "itemSku": "JFAXlaTG", "itemType": "mEIQGT93"}, {"count": 87, "duration": 12, "endDate": "1997-04-29T00:00:00Z", "itemId": "RoLnuj52", "itemSku": "K1xiGqwT", "itemType": "NBW7e84k"}], "name": "V15QMnt4", "odds": 0.7870257702633998, "type": "PROBABILITY_GROUP", "weight": 27}, {"lootBoxItems": [{"count": 30, "duration": 83, "endDate": "1987-06-07T00:00:00Z", "itemId": "5lucFfBp", "itemSku": "AL0l96kV", "itemType": "xjA0GdoM"}, {"count": 30, "duration": 57, "endDate": "1990-12-04T00:00:00Z", "itemId": "QSAv3E3Q", "itemSku": "xjNnPoSr", "itemType": "HmTBrOdh"}, {"count": 66, "duration": 56, "endDate": "1991-04-26T00:00:00Z", "itemId": "bNJT2XgG", "itemSku": "bYf2BQaI", "itemType": "3R1LUb6Q"}], "name": "jDC0g1lL", "odds": 0.5553151257397755, "type": "PROBABILITY_GROUP", "weight": 45}], "rollFunction": "CUSTOM"}, "maxCount": 46, "maxCountPerUser": 64, "name": "3cYRWsnv", "optionBoxConfig": {"boxItems": [{"count": 97, "duration": 9, "endDate": "1974-06-13T00:00:00Z", "itemId": "kpXKdlmV", "itemSku": "1gc0kdl2", "itemType": "NhMjzyY9"}, {"count": 7, "duration": 16, "endDate": "1973-11-06T00:00:00Z", "itemId": "c9OesFii", "itemSku": "PAkdct8C", "itemType": "nub3d88a"}, {"count": 84, "duration": 89, "endDate": "1979-06-20T00:00:00Z", "itemId": "Aj4xRBpd", "itemSku": "6VoAE2yF", "itemType": "5uIdYBS1"}]}, "purchasable": false, "recurring": {"cycle": "MONTHLY", "fixedFreeDays": 94, "fixedTrialCycles": 50, "graceDays": 62}, "regionData": {"jWYjche7": [{"currencyCode": "3SUVJxxL", "currencyNamespace": "vYZ7MXXu", "currencyType": "REAL", "discountAmount": 29, "discountExpireAt": "1987-09-30T00:00:00Z", "discountPercentage": 25, "discountPurchaseAt": "1972-01-17T00:00:00Z", "expireAt": "1995-03-06T00:00:00Z", "price": 17, "purchaseAt": "1976-09-05T00:00:00Z", "trialPrice": 47}, {"currencyCode": "dc8EccAB", "currencyNamespace": "IDYh2R7K", "currencyType": "REAL", "discountAmount": 57, "discountExpireAt": "1987-03-28T00:00:00Z", "discountPercentage": 83, "discountPurchaseAt": "1984-01-17T00:00:00Z", "expireAt": "1993-12-01T00:00:00Z", "price": 79, "purchaseAt": "1971-09-26T00:00:00Z", "trialPrice": 35}, {"currencyCode": "ABGBUvhE", "currencyNamespace": "Z5qq1fMS", "currencyType": "VIRTUAL", "discountAmount": 81, "discountExpireAt": "1987-12-05T00:00:00Z", "discountPercentage": 10, "discountPurchaseAt": "1992-12-13T00:00:00Z", "expireAt": "1994-12-24T00:00:00Z", "price": 22, "purchaseAt": "1978-07-14T00:00:00Z", "trialPrice": 87}], "AZtXwY11": [{"currencyCode": "6iAK4BVc", "currencyNamespace": "7KAl15dF", "currencyType": "VIRTUAL", "discountAmount": 25, "discountExpireAt": "1991-07-14T00:00:00Z", "discountPercentage": 92, "discountPurchaseAt": "1997-07-19T00:00:00Z", "expireAt": "1986-11-18T00:00:00Z", "price": 14, "purchaseAt": "1979-07-13T00:00:00Z", "trialPrice": 88}, {"currencyCode": "vuVAAEmJ", "currencyNamespace": "3NaW8dIS", "currencyType": "REAL", "discountAmount": 18, "discountExpireAt": "1987-01-10T00:00:00Z", "discountPercentage": 87, "discountPurchaseAt": "1982-01-26T00:00:00Z", "expireAt": "1989-07-08T00:00:00Z", "price": 95, "purchaseAt": "1993-10-04T00:00:00Z", "trialPrice": 94}, {"currencyCode": "LqwY47yW", "currencyNamespace": "vJFRGbqE", "currencyType": "VIRTUAL", "discountAmount": 34, "discountExpireAt": "1982-11-07T00:00:00Z", "discountPercentage": 44, "discountPurchaseAt": "1982-11-02T00:00:00Z", "expireAt": "1992-07-24T00:00:00Z", "price": 63, "purchaseAt": "1998-09-05T00:00:00Z", "trialPrice": 19}], "V7SNWJiv": [{"currencyCode": "c5lzyeSU", "currencyNamespace": "CUaHxSGP", "currencyType": "REAL", "discountAmount": 96, "discountExpireAt": "1980-09-30T00:00:00Z", "discountPercentage": 6, "discountPurchaseAt": "1983-03-02T00:00:00Z", "expireAt": "1979-07-12T00:00:00Z", "price": 42, "purchaseAt": "1989-06-30T00:00:00Z", "trialPrice": 55}, {"currencyCode": "q3xGNhvX", "currencyNamespace": "aiPhxBnQ", "currencyType": "REAL", "discountAmount": 65, "discountExpireAt": "1974-03-21T00:00:00Z", "discountPercentage": 51, "discountPurchaseAt": "1981-02-13T00:00:00Z", "expireAt": "1975-10-01T00:00:00Z", "price": 12, "purchaseAt": "1979-04-22T00:00:00Z", "trialPrice": 34}, {"currencyCode": "PV1Te9BB", "currencyNamespace": "vWLtwWdy", "currencyType": "REAL", "discountAmount": 1, "discountExpireAt": "1993-04-16T00:00:00Z", "discountPercentage": 96, "discountPurchaseAt": "1995-07-15T00:00:00Z", "expireAt": "1975-01-21T00:00:00Z", "price": 27, "purchaseAt": "1988-08-07T00:00:00Z", "trialPrice": 14}]}, "saleConfig": {"currencyCode": "HhlYMWmN", "price": 85}, "seasonType": "TIER", "sectionExclusive": false, "sellable": false, "sku": "a03tBuKv", "stackable": false, "status": "ACTIVE", "tags": ["tsWsnRrh", "T6s1wKLH", "5xS7IOh1"], "targetCurrencyCode": "hZWcoBts", "targetNamespace": "eOwkXmDP", "thumbnailUrl": "PX0GsafT", "useCount": 64}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateItem \
    --itemId 'CQPYAGjt' \
    --namespace $AB_NAMESPACE \
    --storeId 'KDr0wcb6' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 134 'UpdateItem' test.out

#- 135 DeleteItem
$CLI_EXE \
    --sn platform \
    --op DeleteItem \
    --itemId 'wlmlsPON' \
    --namespace $AB_NAMESPACE \
    --featuresToCheck '["IAP", "CATALOG", "CAMPAIGN"]' \
    --force 'true' \
    --storeId 'szw5zuZv' \
    > test.out 2>&1
eval_tap $? 135 'DeleteItem' test.out

#- 136 AcquireItem
# body param: body
echo '{"count": 73, "orderNo": "d70GcXXo"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op AcquireItem \
    --itemId '6OACM5Tz' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 136 'AcquireItem' test.out

#- 137 GetApp
$CLI_EXE \
    --sn platform \
    --op GetApp \
    --itemId 'GW6DNM2T' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --storeId 'QDruUAOH' \
    > test.out 2>&1
eval_tap $? 137 'GetApp' test.out

#- 138 UpdateApp
# body param: body
echo '{"carousel": [{"alt": "lXvY7lJD", "previewUrl": "UUJzsz3k", "thumbnailUrl": "XoQG8Une", "type": "video", "url": "692BS0Pf", "videoSource": "youtube"}, {"alt": "7ROP8n1v", "previewUrl": "D2BEUpJo", "thumbnailUrl": "Sjy5PPQP", "type": "image", "url": "Io9hekWf", "videoSource": "generic"}, {"alt": "wMJzq6X6", "previewUrl": "yoanwkiW", "thumbnailUrl": "GuoXSaCZ", "type": "video", "url": "9CV8xJFx", "videoSource": "vimeo"}], "developer": "uR9xuzne", "forumUrl": "1xC7571i", "genres": ["Simulation", "Sports", "Strategy"], "localizations": {"qbOurr0Z": {"announcement": "Dr8QYP7K", "slogan": "odR0CHom"}, "4z0heLsC": {"announcement": "EGkeBICy", "slogan": "Ecmh68G6"}, "DIm24jiY": {"announcement": "l9bg5GEg", "slogan": "KSRtsPY0"}}, "platformRequirements": {"i14Qebi3": [{"additionals": "vt8DMMpV", "directXVersion": "nvYLJY62", "diskSpace": "Js7HToFe", "graphics": "nGP5Lt6f", "label": "0y8EDVeu", "osVersion": "jofl8zIy", "processor": "wXDLpK1K", "ram": "bOqIDsPS", "soundCard": "rzc2bJTb"}, {"additionals": "fYzX5ULQ", "directXVersion": "pkuebUpZ", "diskSpace": "zrVWYXJD", "graphics": "Yp7HdKQj", "label": "3mlvW94T", "osVersion": "hZcykh8n", "processor": "wKreaxLJ", "ram": "gHlI9iNl", "soundCard": "oA0vHEgh"}, {"additionals": "Kvw83ddS", "directXVersion": "7wCZsaLI", "diskSpace": "TcCqI3Iv", "graphics": "x0BGTnm1", "label": "S6eYFS1x", "osVersion": "sjl3wlor", "processor": "KI4UJwNz", "ram": "PzSO7z29", "soundCard": "jGU0QSSa"}], "7IDM7TYn": [{"additionals": "krWDzEvF", "directXVersion": "bHE1ETpp", "diskSpace": "lHLgZUiu", "graphics": "6gwdiJ3Y", "label": "ROE8lSgW", "osVersion": "TKr1oJNo", "processor": "G3e2Z76S", "ram": "wGTrFvoZ", "soundCard": "a3Y1MUNR"}, {"additionals": "a6rVoKoE", "directXVersion": "wLP6OKYE", "diskSpace": "TgNplFGm", "graphics": "N7QBd4B2", "label": "JbVDnndq", "osVersion": "CeyPkbwT", "processor": "uG8EgGla", "ram": "kpUEBJH2", "soundCard": "goloZOtQ"}, {"additionals": "QM4clX2p", "directXVersion": "AGQANeZ0", "diskSpace": "HyIawKHl", "graphics": "XGTXWPdb", "label": "cLHyD7ur", "osVersion": "1IJ9NVjs", "processor": "C8ol6Pc0", "ram": "6hK84Ntg", "soundCard": "jGBT17dd"}], "YqyuST3b": [{"additionals": "ooRNMoOk", "directXVersion": "k0OfEGM0", "diskSpace": "d6gIpJNp", "graphics": "2M9ccOeU", "label": "TcBfF5Jl", "osVersion": "nw0Ijij1", "processor": "3g5PCdHi", "ram": "w1ynX5oy", "soundCard": "htU9Q7Cv"}, {"additionals": "COxBPDEj", "directXVersion": "6pdPsLE8", "diskSpace": "IMDIwvYn", "graphics": "JNfBy9bR", "label": "aIWRGtYZ", "osVersion": "qs0l061K", "processor": "Mojp6Fyn", "ram": "JpLS3z2W", "soundCard": "6JWBTywC"}, {"additionals": "DVAP73Lk", "directXVersion": "EFFtUK6e", "diskSpace": "uVkou5fW", "graphics": "UPtg43lz", "label": "LDCLwLrD", "osVersion": "P0jf0pWM", "processor": "i2jwVKPo", "ram": "leBbNAcY", "soundCard": "75eMguhR"}]}, "platforms": ["MacOS", "Linux", "Windows"], "players": ["Single", "Single", "Multi"], "primaryGenre": "Strategy", "publisher": "AOWGaWbG", "releaseDate": "1971-02-23T00:00:00Z", "websiteUrl": "L5mzhWFI"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateApp \
    --itemId 'x5vtHasj' \
    --namespace $AB_NAMESPACE \
    --storeId 'k3BXKaHz' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 138 'UpdateApp' test.out

#- 139 DisableItem
# body param: body
echo '{"featuresToCheck": ["DLC", "CAMPAIGN"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op DisableItem \
    --itemId 'Hj86m0H1' \
    --namespace $AB_NAMESPACE \
    --storeId 'x7KgAMV2' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 139 'DisableItem' test.out

#- 140 GetItemDynamicData
$CLI_EXE \
    --sn platform \
    --op GetItemDynamicData \
    --itemId 'm9I7d5d8' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 140 'GetItemDynamicData' test.out

#- 141 EnableItem
$CLI_EXE \
    --sn platform \
    --op EnableItem \
    --itemId '9cSZrdoW' \
    --namespace $AB_NAMESPACE \
    --storeId 'JZBqQM5u' \
    > test.out 2>&1
eval_tap $? 141 'EnableItem' test.out

#- 142 FeatureItem
$CLI_EXE \
    --sn platform \
    --op FeatureItem \
    --feature 'meBal1qi' \
    --itemId 'Na1TE3OV' \
    --namespace $AB_NAMESPACE \
    --storeId '3OOUGddg' \
    > test.out 2>&1
eval_tap $? 142 'FeatureItem' test.out

#- 143 DefeatureItem
$CLI_EXE \
    --sn platform \
    --op DefeatureItem \
    --feature '1r0FXjS1' \
    --itemId 'ip5vbqBy' \
    --namespace $AB_NAMESPACE \
    --storeId '5cumpHBJ' \
    > test.out 2>&1
eval_tap $? 143 'DefeatureItem' test.out

#- 144 GetLocaleItem
$CLI_EXE \
    --sn platform \
    --op GetLocaleItem \
    --itemId 'vSzEaOTf' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --language 'P5jkPiXw' \
    --populateBundle 'true' \
    --region 'dCwAHv9i' \
    --storeId 'yxeNxfxJ' \
    > test.out 2>&1
eval_tap $? 144 'GetLocaleItem' test.out

#- 145 UpdateItemPurchaseCondition
# body param: body
echo '{"purchaseCondition": {"conditionGroups": [{"operator": "or", "predicates": [{"anyOf": 67, "code": "FRTNnfQR", "comparison": "includes", "name": "Vm5R0qGd", "predicateType": "StatisticCodePredicate", "value": "CyU3P7Iv", "values": ["bhgRbQkq", "jRwkXoZ0", "DfzVXuu8"]}, {"anyOf": 61, "code": "OcaxXnQR", "comparison": "isGreaterThanOrEqual", "name": "46xv0fMv", "predicateType": "EntitlementPredicate", "value": "G1R0Z1Rb", "values": ["Tv17azGD", "XJfnieyz", "IFEnV2Dx"]}, {"anyOf": 74, "code": "GagDQGiV", "comparison": "isGreaterThanOrEqual", "name": "ozWWbfmU", "predicateType": "StatisticCodePredicate", "value": "7nmPxoem", "values": ["nah3Gbli", "96Aff9fF", "mmePANyA"]}]}, {"operator": "and", "predicates": [{"anyOf": 7, "code": "kb71ItFP", "comparison": "includes", "name": "YgsqohFz", "predicateType": "SeasonPassPredicate", "value": "YznXbxwm", "values": ["0KwJm5Rt", "03lhskUw", "eDxv6DZH"]}, {"anyOf": 13, "code": "TN9riW1H", "comparison": "isGreaterThanOrEqual", "name": "misIUmMl", "predicateType": "StatisticCodePredicate", "value": "WSyNcW4t", "values": ["oEXDaVr6", "tFlogbCt", "l6kyVQsH"]}, {"anyOf": 75, "code": "h6p2q7N2", "comparison": "isLessThanOrEqual", "name": "cVykLONj", "predicateType": "SeasonPassPredicate", "value": "L94FBJLO", "values": ["Y06cVm4F", "YLYK5gDk", "ltzlbyQ9"]}]}, {"operator": "or", "predicates": [{"anyOf": 42, "code": "k8ORXwez", "comparison": "isLessThan", "name": "xvfwKdFQ", "predicateType": "EntitlementPredicate", "value": "uh6LWyr0", "values": ["vFTa8NUT", "AH5aaOR2", "bmlaRbHn"]}, {"anyOf": 23, "code": "Rw5B5eKY", "comparison": "isLessThanOrEqual", "name": "xA1vv8IF", "predicateType": "StatisticCodePredicate", "value": "uRuWkAvn", "values": ["bjwuhWJq", "B2Bt6idg", "BCWe0sXi"]}, {"anyOf": 10, "code": "bn9lGsMC", "comparison": "is", "name": "bxy21QHW", "predicateType": "SeasonPassPredicate", "value": "b7INtv5Z", "values": ["2ebxbmXz", "aAOgYTXZ", "MvrHov2j"]}]}]}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateItemPurchaseCondition \
    --itemId 'PSmkxeqT' \
    --namespace $AB_NAMESPACE \
    --storeId 'h6gWjiJV' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 145 'UpdateItemPurchaseCondition' test.out

#- 146 QueryItemReferences
$CLI_EXE \
    --sn platform \
    --op QueryItemReferences \
    --itemId 'ODemxfE5' \
    --namespace $AB_NAMESPACE \
    --featuresToCheck '["REWARD", "DLC", "DLC"]' \
    --storeId 'txjdp28L' \
    > test.out 2>&1
eval_tap $? 146 'QueryItemReferences' test.out

#- 147 ReturnItem
# body param: body
echo '{"orderNo": "L2toqlxr"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ReturnItem \
    --itemId 'HWYiGoNJ' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 147 'ReturnItem' test.out

#- 148 QueryKeyGroups
$CLI_EXE \
    --sn platform \
    --op QueryKeyGroups \
    --namespace $AB_NAMESPACE \
    --limit '98' \
    --name 'uQarct4M' \
    --offset '57' \
    --tag 'ieHbqcZ7' \
    > test.out 2>&1
eval_tap $? 148 'QueryKeyGroups' test.out

#- 149 CreateKeyGroup
# body param: body
echo '{"description": "7KI1DApl", "name": "EGPxxEFn", "status": "INACTIVE", "tags": ["Lha1Hoco", "4xy8VE11", "XJnbV9xS"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateKeyGroup \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 149 'CreateKeyGroup' test.out

#- 150 GetKeyGroupByBoothName
eval_tap 0 150 'GetKeyGroupByBoothName # SKIP deprecated' test.out

#- 151 GetKeyGroup
$CLI_EXE \
    --sn platform \
    --op GetKeyGroup \
    --keyGroupId 'aXDapaVv' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 151 'GetKeyGroup' test.out

#- 152 UpdateKeyGroup
# body param: body
echo '{"description": "s9COEDUe", "name": "r14fV3WD", "status": "ACTIVE", "tags": ["aCwxfNHs", "loRxrifA", "SFzm9C0K"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateKeyGroup \
    --keyGroupId 'wpHLordw' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 152 'UpdateKeyGroup' test.out

#- 153 GetKeyGroupDynamic
$CLI_EXE \
    --sn platform \
    --op GetKeyGroupDynamic \
    --keyGroupId 'BqSEfPAN' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 153 'GetKeyGroupDynamic' test.out

#- 154 ListKeys
$CLI_EXE \
    --sn platform \
    --op ListKeys \
    --keyGroupId 'D52IAfz5' \
    --namespace $AB_NAMESPACE \
    --limit '71' \
    --offset '4' \
    --status 'ACQUIRED' \
    > test.out 2>&1
eval_tap $? 154 'ListKeys' test.out

#- 155 UploadKeys
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UploadKeys \
    --keyGroupId '79r9csFc' \
    --namespace $AB_NAMESPACE \
    --upload file $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 155 'UploadKeys' test.out

#- 156 QueryOrders
$CLI_EXE \
    --sn platform \
    --op QueryOrders \
    --namespace $AB_NAMESPACE \
    --endTime 'Ag2ANEvA' \
    --limit '33' \
    --offset '65' \
    --orderNos '["TImRunnE", "2z5tAZ4y", "ly4ewl9w"]' \
    --sortBy '5RShvNVr' \
    --startTime 'gt6sDYVb' \
    --status 'CHARGEBACK_REVERSED' \
    --withTotal 'true' \
    > test.out 2>&1
eval_tap $? 156 'QueryOrders' test.out

#- 157 GetOrderStatistics
$CLI_EXE \
    --sn platform \
    --op GetOrderStatistics \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 157 'GetOrderStatistics' test.out

#- 158 GetOrder
$CLI_EXE \
    --sn platform \
    --op GetOrder \
    --namespace $AB_NAMESPACE \
    --orderNo '7H68NKzn' \
    > test.out 2>&1
eval_tap $? 158 'GetOrder' test.out

#- 159 RefundOrder
# body param: body
echo '{"description": "TixOjGa7"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RefundOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'wQzFCl0i' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 159 'RefundOrder' test.out

#- 160 GetPaymentCallbackConfig
eval_tap 0 160 'GetPaymentCallbackConfig # SKIP deprecated' test.out

#- 161 UpdatePaymentCallbackConfig
eval_tap 0 161 'UpdatePaymentCallbackConfig # SKIP deprecated' test.out

#- 162 GetPaymentMerchantConfig
$CLI_EXE \
    --sn platform \
    --op GetPaymentMerchantConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 162 'GetPaymentMerchantConfig' test.out

#- 163 UpdatePaymentDomainWhitelistConfig
# body param: body
echo '{"domains": ["Muk5ZZIr", "aDTk9nDL", "DSA6aYDP"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePaymentDomainWhitelistConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 163 'UpdatePaymentDomainWhitelistConfig' test.out

#- 164 QueryPaymentNotifications
$CLI_EXE \
    --sn platform \
    --op QueryPaymentNotifications \
    --namespace $AB_NAMESPACE \
    --endDate 'jdsIWl4x' \
    --externalId '5ggR5TZs' \
    --limit '85' \
    --notificationSource 'XSOLLA' \
    --notificationType '8u9Wxg0F' \
    --offset '82' \
    --paymentOrderNo 'ZWKhB9LI' \
    --startDate 'JP4iLxiH' \
    --status 'WARN' \
    > test.out 2>&1
eval_tap $? 164 'QueryPaymentNotifications' test.out

#- 165 QueryPaymentOrders
$CLI_EXE \
    --sn platform \
    --op QueryPaymentOrders \
    --namespace $AB_NAMESPACE \
    --channel 'EXTERNAL' \
    --extTxId '9EsMmv3o' \
    --limit '71' \
    --offset '69' \
    --status 'AUTHORISE_FAILED' \
    > test.out 2>&1
eval_tap $? 165 'QueryPaymentOrders' test.out

#- 166 CreatePaymentOrderByDedicated
# body param: body
echo '{"currencyCode": "pPyFAeBs", "currencyNamespace": "sxeuJAh1", "customParameters": {"yLSYoRx6": {}, "CGcanlxc": {}, "XZX6wgH3": {}}, "description": "cCTuyYfq", "extOrderNo": "G2EFFNCK", "extUserId": "SNSZqTZT", "itemType": "LOOTBOX", "language": "Or-OSmw", "metadata": {"gTcb64B6": "mkCJrduX", "BW1c0Sx9": "ndBWPjQ1", "MC9M1IK9": "xvkffHRE"}, "notifyUrl": "sofj0NzC", "omitNotification": true, "platform": "Wj60OaEN", "price": 18, "recurringPaymentOrderNo": "cewHvtET", "region": "eLFreWIT", "returnUrl": "FhAjzSd6", "sandbox": false, "sku": "OF1edwL3", "subscriptionId": "47nslghT", "targetNamespace": "izXj2dYa", "targetUserId": "OUwrc7N6", "title": "qGj3GMZY"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreatePaymentOrderByDedicated \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 166 'CreatePaymentOrderByDedicated' test.out

#- 167 ListExtOrderNoByExtTxId
$CLI_EXE \
    --sn platform \
    --op ListExtOrderNoByExtTxId \
    --namespace $AB_NAMESPACE \
    --extTxId 'FCRtIKN5' \
    > test.out 2>&1
eval_tap $? 167 'ListExtOrderNoByExtTxId' test.out

#- 168 GetPaymentOrder
$CLI_EXE \
    --sn platform \
    --op GetPaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo '8iCXj6mV' \
    > test.out 2>&1
eval_tap $? 168 'GetPaymentOrder' test.out

#- 169 ChargePaymentOrder
# body param: body
echo '{"extTxId": "CZGcTz0r", "paymentMethod": "FeFzKFNr", "paymentProvider": "NEONPAY"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ChargePaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'Bt1iM6w4' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 169 'ChargePaymentOrder' test.out

#- 170 RefundPaymentOrderByDedicated
# body param: body
echo '{"description": "MvM6IHwL"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RefundPaymentOrderByDedicated \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo '7GvYSDYD' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 170 'RefundPaymentOrderByDedicated' test.out

#- 171 SimulatePaymentOrderNotification
# body param: body
echo '{"amount": 3, "currencyCode": "ZB6WxQhL", "notifyType": "CHARGE", "paymentProvider": "XSOLLA", "salesTax": 45, "vat": 61}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SimulatePaymentOrderNotification \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'rP76gjcR' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 171 'SimulatePaymentOrderNotification' test.out

#- 172 GetPaymentOrderChargeStatus
$CLI_EXE \
    --sn platform \
    --op GetPaymentOrderChargeStatus \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'pCohv5bj' \
    > test.out 2>&1
eval_tap $? 172 'GetPaymentOrderChargeStatus' test.out

#- 173 GetPsnEntitlementOwnership
# body param: body
echo '{"accessToken": "CPAD9m1T", "serviceLabel": 67}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op GetPsnEntitlementOwnership \
    --entitlementLabel 'uLVlqp8i' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 173 'GetPsnEntitlementOwnership' test.out

#- 174 GetXboxEntitlementOwnership
# body param: body
echo '{"delegationToken": "nlVsBpmT", "sandboxId": "evwWY43o"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op GetXboxEntitlementOwnership \
    --namespace $AB_NAMESPACE \
    --productSku '0kXuTcXN' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 174 'GetXboxEntitlementOwnership' test.out

#- 175 GetPlatformEntitlementConfig
$CLI_EXE \
    --sn platform \
    --op GetPlatformEntitlementConfig \
    --namespace $AB_NAMESPACE \
    --platform 'Playstation' \
    > test.out 2>&1
eval_tap $? 175 'GetPlatformEntitlementConfig' test.out

#- 176 UpdatePlatformEntitlementConfig
# body param: body
echo '{"allowedPlatformOrigins": ["Xbox", "Nintendo", "Playstation"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePlatformEntitlementConfig \
    --namespace $AB_NAMESPACE \
    --platform 'Epic' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 176 'UpdatePlatformEntitlementConfig' test.out

#- 177 GetPlatformWalletConfig
$CLI_EXE \
    --sn platform \
    --op GetPlatformWalletConfig \
    --namespace $AB_NAMESPACE \
    --platform 'Epic' \
    > test.out 2>&1
eval_tap $? 177 'GetPlatformWalletConfig' test.out

#- 178 UpdatePlatformWalletConfig
# body param: body
echo '{"allowedBalanceOrigins": ["IOS", "Twitch", "GooglePlay"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePlatformWalletConfig \
    --namespace $AB_NAMESPACE \
    --platform 'Nintendo' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 178 'UpdatePlatformWalletConfig' test.out

#- 179 ResetPlatformWalletConfig
$CLI_EXE \
    --sn platform \
    --op ResetPlatformWalletConfig \
    --namespace $AB_NAMESPACE \
    --platform 'Epic' \
    > test.out 2>&1
eval_tap $? 179 'ResetPlatformWalletConfig' test.out

#- 180 GetRevocationConfig
$CLI_EXE \
    --sn platform \
    --op GetRevocationConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 180 'GetRevocationConfig' test.out

#- 181 UpdateRevocationConfig
# body param: body
echo '{"entitlement": {"consumable": {"enabled": false, "strategy": "CUSTOM"}, "durable": {"enabled": false, "strategy": "CUSTOM"}}, "wallet": {"enabled": true, "strategy": "CUSTOM"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateRevocationConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 181 'UpdateRevocationConfig' test.out

#- 182 DeleteRevocationConfig
$CLI_EXE \
    --sn platform \
    --op DeleteRevocationConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 182 'DeleteRevocationConfig' test.out

#- 183 QueryRevocationHistories
$CLI_EXE \
    --sn platform \
    --op QueryRevocationHistories \
    --namespace $AB_NAMESPACE \
    --endTime 'ZGCXjhsU' \
    --limit '74' \
    --offset '4' \
    --source 'ORDER' \
    --startTime 'CWVx8cVX' \
    --status 'FAIL' \
    --transactionId 'iuUDI42T' \
    --userId '1P8AY6Sp' \
    > test.out 2>&1
eval_tap $? 183 'QueryRevocationHistories' test.out

#- 184 GetRevocationPluginConfig
$CLI_EXE \
    --sn platform \
    --op GetRevocationPluginConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 184 'GetRevocationPluginConfig' test.out

#- 185 UpdateRevocationPluginConfig
# body param: body
echo '{"appConfig": {"appName": "rNY2GUws"}, "customConfig": {"connectionType": "TLS", "grpcServerAddress": "dScnnjqY"}, "extendType": "APP"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateRevocationPluginConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 185 'UpdateRevocationPluginConfig' test.out

#- 186 DeleteRevocationPluginConfig
$CLI_EXE \
    --sn platform \
    --op DeleteRevocationPluginConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 186 'DeleteRevocationPluginConfig' test.out

#- 187 UploadRevocationPluginConfigCert
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UploadRevocationPluginConfigCert \
    --namespace $AB_NAMESPACE \
    --upload file $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 187 'UploadRevocationPluginConfigCert' test.out

#- 188 CreateReward
# body param: body
echo '{"description": "MhhK9oVH", "eventTopic": "ihnxh1tg", "maxAwarded": 25, "maxAwardedPerUser": 31, "namespaceExpression": "xPtwN4kD", "rewardCode": "jqT7gpJz", "rewardConditions": [{"condition": "MJnYgg0b", "conditionName": "4V6jBMKX", "eventName": "5kDtxsJM", "rewardItems": [{"duration": 72, "endDate": "1990-12-01T00:00:00Z", "identityType": "ITEM_SKU", "itemId": "7fJWnQHT", "quantity": 29, "sku": "Q1kCTOeV"}, {"duration": 55, "endDate": "1998-08-31T00:00:00Z", "identityType": "ITEM_ID", "itemId": "XIefmQDq", "quantity": 52, "sku": "G0DpaPPS"}, {"duration": 20, "endDate": "1977-05-08T00:00:00Z", "identityType": "ITEM_ID", "itemId": "1CA1ELvY", "quantity": 22, "sku": "3vwKP2n9"}]}, {"condition": "oYrkjfBv", "conditionName": "GbC2M3rU", "eventName": "cnI8bsGl", "rewardItems": [{"duration": 91, "endDate": "1991-07-06T00:00:00Z", "identityType": "ITEM_ID", "itemId": "KK1Wb2gn", "quantity": 63, "sku": "nPLVGciv"}, {"duration": 79, "endDate": "1997-02-01T00:00:00Z", "identityType": "ITEM_ID", "itemId": "aIeX6IT6", "quantity": 4, "sku": "MxbgBtz4"}, {"duration": 11, "endDate": "1997-11-08T00:00:00Z", "identityType": "ITEM_ID", "itemId": "dM1EjF5x", "quantity": 44, "sku": "3P8feja6"}]}, {"condition": "GWieURBi", "conditionName": "P3FAhLvv", "eventName": "vqPX4PUL", "rewardItems": [{"duration": 34, "endDate": "1993-06-19T00:00:00Z", "identityType": "ITEM_SKU", "itemId": "vUx6QkkW", "quantity": 48, "sku": "qNul1v6t"}, {"duration": 34, "endDate": "1975-09-18T00:00:00Z", "identityType": "ITEM_ID", "itemId": "cwdPIigX", "quantity": 75, "sku": "YAJigRbC"}, {"duration": 93, "endDate": "1993-02-01T00:00:00Z", "identityType": "ITEM_SKU", "itemId": "xLkeRM68", "quantity": 98, "sku": "qbyRPlko"}]}], "userIdExpression": "XJFnh8NZ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateReward \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 188 'CreateReward' test.out

#- 189 QueryRewards
$CLI_EXE \
    --sn platform \
    --op QueryRewards \
    --namespace $AB_NAMESPACE \
    --eventTopic '9hBCPea0' \
    --limit '79' \
    --offset '63' \
    --sortBy '["namespace:asc", "rewardCode:desc", "namespace:desc"]' \
    > test.out 2>&1
eval_tap $? 189 'QueryRewards' test.out

#- 190 ExportRewards
$CLI_EXE \
    --sn platform \
    --op ExportRewards \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 190 'ExportRewards' test.out

#- 191 ImportRewards
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op ImportRewards \
    --namespace $AB_NAMESPACE \
    --replaceExisting 'false' \
    --upload file $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 191 'ImportRewards' test.out

#- 192 GetReward
$CLI_EXE \
    --sn platform \
    --op GetReward \
    --namespace $AB_NAMESPACE \
    --rewardId 'Zsj5YqpQ' \
    > test.out 2>&1
eval_tap $? 192 'GetReward' test.out

#- 193 UpdateReward
# body param: body
echo '{"description": "SxwVgAsx", "eventTopic": "m8bma1xM", "maxAwarded": 30, "maxAwardedPerUser": 11, "namespaceExpression": "N4jvWoPn", "rewardCode": "3qZGiMFX", "rewardConditions": [{"condition": "Hx58ZJkO", "conditionName": "yHztLxb8", "eventName": "DbdXnL4L", "rewardItems": [{"duration": 76, "endDate": "1994-01-01T00:00:00Z", "identityType": "ITEM_ID", "itemId": "qdeU8zVc", "quantity": 44, "sku": "4b6bCXhl"}, {"duration": 31, "endDate": "1988-03-26T00:00:00Z", "identityType": "ITEM_ID", "itemId": "DChvAja1", "quantity": 49, "sku": "nHqwnArd"}, {"duration": 5, "endDate": "1983-09-11T00:00:00Z", "identityType": "ITEM_SKU", "itemId": "DHXDh2dj", "quantity": 41, "sku": "g5X2XyN7"}]}, {"condition": "6i99pkeV", "conditionName": "OqFcyE8E", "eventName": "nkdiciIn", "rewardItems": [{"duration": 52, "endDate": "1992-04-22T00:00:00Z", "identityType": "ITEM_SKU", "itemId": "9LhFsYxM", "quantity": 9, "sku": "PxxelCFA"}, {"duration": 80, "endDate": "1980-06-07T00:00:00Z", "identityType": "ITEM_ID", "itemId": "eVVEqnNN", "quantity": 17, "sku": "FkjNgN8C"}, {"duration": 68, "endDate": "1988-04-27T00:00:00Z", "identityType": "ITEM_ID", "itemId": "rGFhK5Z2", "quantity": 18, "sku": "WpREog6p"}]}, {"condition": "2QLdn2at", "conditionName": "neuNXQyT", "eventName": "e7MsE8QG", "rewardItems": [{"duration": 78, "endDate": "1982-11-26T00:00:00Z", "identityType": "ITEM_SKU", "itemId": "OaVITRe5", "quantity": 76, "sku": "n92t9p1k"}, {"duration": 36, "endDate": "1978-01-27T00:00:00Z", "identityType": "ITEM_SKU", "itemId": "8cfRa7BB", "quantity": 70, "sku": "ckj5QDY7"}, {"duration": 57, "endDate": "1975-10-08T00:00:00Z", "identityType": "ITEM_ID", "itemId": "ZBHPczBD", "quantity": 36, "sku": "eglEgNDR"}]}], "userIdExpression": "EotGAhCc"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateReward \
    --namespace $AB_NAMESPACE \
    --rewardId 'w72FIJEt' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 193 'UpdateReward' test.out

#- 194 DeleteReward
$CLI_EXE \
    --sn platform \
    --op DeleteReward \
    --namespace $AB_NAMESPACE \
    --rewardId 'ZX4iEE98' \
    > test.out 2>&1
eval_tap $? 194 'DeleteReward' test.out

#- 195 CheckEventCondition
# body param: body
echo '{"payload": {"fX3iWtwZ": {}, "W7NVuQYD": {}, "u1eHbcpW": {}}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CheckEventCondition \
    --namespace $AB_NAMESPACE \
    --rewardId 'wpzdS9F8' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 195 'CheckEventCondition' test.out

#- 196 DeleteRewardConditionRecord
# body param: body
echo '{"conditionName": "eeKNnlNc", "userId": "jOh11XEc"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op DeleteRewardConditionRecord \
    --namespace $AB_NAMESPACE \
    --rewardId 'NxUPcPKk' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 196 'DeleteRewardConditionRecord' test.out

#- 197 QuerySections
$CLI_EXE \
    --sn platform \
    --op QuerySections \
    --namespace $AB_NAMESPACE \
    --end 'TIeoBfZq' \
    --limit '27' \
    --offset '18' \
    --start 'HyBXUwDa' \
    --storeId 'P6xXKeDo' \
    --viewId 'yjunSFNm' \
    > test.out 2>&1
eval_tap $? 197 'QuerySections' test.out

#- 198 CreateSection
# body param: body
echo '{"active": true, "displayOrder": 48, "endDate": "1974-02-12T00:00:00Z", "ext": {"oAoAA4KT": {}, "S7zH6t0k": {}, "yAry1i2P": {}}, "fixedPeriodRotationConfig": {"backfillType": "NONE", "duration": 45, "itemCount": 1, "rule": "SEQUENCE"}, "items": [{"id": "Y9gyyVDZ", "sku": "fptlF4Zy"}, {"id": "pvz9CYpO", "sku": "d6roBzEu"}, {"id": "QNB7dskP", "sku": "AaAjIsCq"}], "localizations": {"wNLrM5F0": {"description": "nvO9Ug8K", "localExt": {"RyBLNsw3": {}, "YzLUTEaE": {}, "zWvZSDP8": {}}, "longDescription": "pILi3jkj", "title": "ZR07cLQT"}, "qJyeFpRD": {"description": "W33LJaBP", "localExt": {"56IBT8ZC": {}, "EiCjMZ50": {}, "e2U8RvIZ": {}}, "longDescription": "hVlFxyfd", "title": "G8ordRTN"}, "BTc2Q5bu": {"description": "gteYnPeU", "localExt": {"GKZA552Z": {}, "PIbPPtGf": {}, "47pyDkMw": {}}, "longDescription": "RM43WxFS", "title": "F5d9i8NT"}}, "name": "x26FkGGM", "rotationType": "CUSTOM", "startDate": "1971-11-13T00:00:00Z", "viewId": "VUlzyhHn"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateSection \
    --namespace $AB_NAMESPACE \
    --storeId '2OwubTZZ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 198 'CreateSection' test.out

#- 199 PurgeExpiredSection
$CLI_EXE \
    --sn platform \
    --op PurgeExpiredSection \
    --namespace $AB_NAMESPACE \
    --storeId 'kTrH3zkn' \
    > test.out 2>&1
eval_tap $? 199 'PurgeExpiredSection' test.out

#- 200 GetSection
$CLI_EXE \
    --sn platform \
    --op GetSection \
    --namespace $AB_NAMESPACE \
    --sectionId 'dBfDpxzg' \
    --storeId 'jMlyd0jU' \
    > test.out 2>&1
eval_tap $? 200 'GetSection' test.out

#- 201 UpdateSection
# body param: body
echo '{"active": false, "displayOrder": 1, "endDate": "1984-02-07T00:00:00Z", "ext": {"BZrm4EcR": {}, "8N7hNrDW": {}, "zk18Ipkq": {}}, "fixedPeriodRotationConfig": {"backfillType": "NONE", "duration": 42, "itemCount": 67, "rule": "SEQUENCE"}, "items": [{"id": "88shlLX7", "sku": "pcurlJCk"}, {"id": "iVBiVHKf", "sku": "0cXdSaSk"}, {"id": "Ejw5GZmf", "sku": "BRe5PtpP"}], "localizations": {"tZwYJ2Pq": {"description": "cdVnnWkk", "localExt": {"JiDJDBVP": {}, "QEAHIaOh": {}, "8pshzQ9X": {}}, "longDescription": "JfFeexYN", "title": "lBQQY3ls"}, "l8n0x7RS": {"description": "JsPoUBpI", "localExt": {"QChKAxKz": {}, "Nm0p5N6X": {}, "hnmDYIdk": {}}, "longDescription": "D0x6bn26", "title": "3OdNEs4l"}, "yQHNO0id": {"description": "wMaUkSku", "localExt": {"ofqTJWXY": {}, "DirspqA3": {}, "MXbZNUvl": {}}, "longDescription": "dgaOivZU", "title": "o5PCECIZ"}}, "name": "dUJrulxK", "rotationType": "CUSTOM", "startDate": "1999-03-02T00:00:00Z", "viewId": "vZl8Az5N"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateSection \
    --namespace $AB_NAMESPACE \
    --sectionId 'TW9EHZxr' \
    --storeId 'qHy5PVXG' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 201 'UpdateSection' test.out

#- 202 DeleteSection
$CLI_EXE \
    --sn platform \
    --op DeleteSection \
    --namespace $AB_NAMESPACE \
    --sectionId '7mOecRXy' \
    --storeId 'jKMWPsyL' \
    > test.out 2>&1
eval_tap $? 202 'DeleteSection' test.out

#- 203 ListStores
$CLI_EXE \
    --sn platform \
    --op ListStores \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 203 'ListStores' test.out

#- 204 CreateStore
# body param: body
echo '{"defaultLanguage": "TTcuQFzW", "defaultRegion": "K5fmDxEm", "description": "MxZfFZKe", "supportedLanguages": ["FAcHTjnb", "rB58w1xR", "1sc8FWqr"], "supportedRegions": ["0FoXE0zt", "pHw7j4lF", "KGSAshiS"], "title": "k1nZxbrd"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateStore \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 204 'CreateStore' test.out

#- 205 GetCatalogDefinition
$CLI_EXE \
    --sn platform \
    --op GetCatalogDefinition \
    --namespace $AB_NAMESPACE \
    --catalogType 'SECTION' \
    > test.out 2>&1
eval_tap $? 205 'GetCatalogDefinition' test.out

#- 206 DownloadCSVTemplates
$CLI_EXE \
    --sn platform \
    --op DownloadCSVTemplates \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 206 'DownloadCSVTemplates' test.out

#- 207 ExportStoreByCSV
# body param: body
echo '{"catalogType": "CATEGORY", "fieldsToBeIncluded": ["I2CyOiEm", "UlPOeaJS", "Bd5AEF66"], "idsToBeExported": ["BiYUDqYg", "n4BY2DFK", "fqD8y7ma"], "storeId": "sxDJTBHz"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ExportStoreByCSV \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 207 'ExportStoreByCSV' test.out

#- 208 ImportStore
eval_tap 0 208 'ImportStore # SKIP deprecated' test.out

#- 209 GetPublishedStore
$CLI_EXE \
    --sn platform \
    --op GetPublishedStore \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 209 'GetPublishedStore' test.out

#- 210 DeletePublishedStore
$CLI_EXE \
    --sn platform \
    --op DeletePublishedStore \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 210 'DeletePublishedStore' test.out

#- 211 GetPublishedStoreBackup
$CLI_EXE \
    --sn platform \
    --op GetPublishedStoreBackup \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 211 'GetPublishedStoreBackup' test.out

#- 212 RollbackPublishedStore
$CLI_EXE \
    --sn platform \
    --op RollbackPublishedStore \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 212 'RollbackPublishedStore' test.out

#- 213 GetStore
$CLI_EXE \
    --sn platform \
    --op GetStore \
    --namespace $AB_NAMESPACE \
    --storeId 'ngFa0AXL' \
    > test.out 2>&1
eval_tap $? 213 'GetStore' test.out

#- 214 UpdateStore
# body param: body
echo '{"defaultLanguage": "BQNoaTFh", "defaultRegion": "Io0PP2dl", "description": "dOiCvftM", "supportedLanguages": ["vJ8LFqfT", "6O3F9Idi", "7feqN2NE"], "supportedRegions": ["EYc7A33b", "q6MJc97G", "3L0JnKDj"], "title": "RsfIHB57"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateStore \
    --namespace $AB_NAMESPACE \
    --storeId 'prTrpi5X' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 214 'UpdateStore' test.out

#- 215 DeleteStore
$CLI_EXE \
    --sn platform \
    --op DeleteStore \
    --namespace $AB_NAMESPACE \
    --storeId 'ThoYFpxm' \
    > test.out 2>&1
eval_tap $? 215 'DeleteStore' test.out

#- 216 QueryChanges
$CLI_EXE \
    --sn platform \
    --op QueryChanges \
    --namespace $AB_NAMESPACE \
    --storeId '353FCkIO' \
    --action 'DELETE' \
    --itemSku 'n8mJNyqh' \
    --itemType 'SUBSCRIPTION' \
    --limit '35' \
    --offset '46' \
    --selected 'false' \
    --sortBy '["updatedAt:asc", "updatedAt", "updatedAt:desc"]' \
    --status 'PUBLISHED' \
    --type 'STORE' \
    --updatedAtEnd 'PRxdWEWq' \
    --updatedAtStart 'w6zYIfaf' \
    --withTotal 'true' \
    > test.out 2>&1
eval_tap $? 216 'QueryChanges' test.out

#- 217 PublishAll
$CLI_EXE \
    --sn platform \
    --op PublishAll \
    --namespace $AB_NAMESPACE \
    --storeId '22gzvG6B' \
    > test.out 2>&1
eval_tap $? 217 'PublishAll' test.out

#- 218 PublishSelected
$CLI_EXE \
    --sn platform \
    --op PublishSelected \
    --namespace $AB_NAMESPACE \
    --storeId 'bX7xCwu9' \
    > test.out 2>&1
eval_tap $? 218 'PublishSelected' test.out

#- 219 SelectAllRecords
$CLI_EXE \
    --sn platform \
    --op SelectAllRecords \
    --namespace $AB_NAMESPACE \
    --storeId 'vhdT5U9J' \
    > test.out 2>&1
eval_tap $? 219 'SelectAllRecords' test.out

#- 220 SelectAllRecordsByCriteria
$CLI_EXE \
    --sn platform \
    --op SelectAllRecordsByCriteria \
    --namespace $AB_NAMESPACE \
    --storeId 'zLjKfs6d' \
    --action 'UPDATE' \
    --itemSku 'BeBKlcZr' \
    --itemType 'OPTIONBOX' \
    --selected 'false' \
    --type 'VIEW' \
    --updatedAtEnd 'LOOD4DPB' \
    --updatedAtStart 'u5mqWi8L' \
    > test.out 2>&1
eval_tap $? 220 'SelectAllRecordsByCriteria' test.out

#- 221 GetStatistic
$CLI_EXE \
    --sn platform \
    --op GetStatistic \
    --namespace $AB_NAMESPACE \
    --storeId 'XPl95mjw' \
    --action 'DELETE' \
    --itemSku 'pR3btZgI' \
    --itemType 'SUBSCRIPTION' \
    --type 'STORE' \
    --updatedAtEnd 'gc2yWkpW' \
    --updatedAtStart 'pANpIHNQ' \
    > test.out 2>&1
eval_tap $? 221 'GetStatistic' test.out

#- 222 UnselectAllRecords
$CLI_EXE \
    --sn platform \
    --op UnselectAllRecords \
    --namespace $AB_NAMESPACE \
    --storeId '62twznlq' \
    > test.out 2>&1
eval_tap $? 222 'UnselectAllRecords' test.out

#- 223 SelectRecord
$CLI_EXE \
    --sn platform \
    --op SelectRecord \
    --changeId '18nZ76ty' \
    --namespace $AB_NAMESPACE \
    --storeId 'xL1x78gi' \
    > test.out 2>&1
eval_tap $? 223 'SelectRecord' test.out

#- 224 UnselectRecord
$CLI_EXE \
    --sn platform \
    --op UnselectRecord \
    --changeId '0WuWel0b' \
    --namespace $AB_NAMESPACE \
    --storeId 'wNLPvlmS' \
    > test.out 2>&1
eval_tap $? 224 'UnselectRecord' test.out

#- 225 CloneStore
$CLI_EXE \
    --sn platform \
    --op CloneStore \
    --namespace $AB_NAMESPACE \
    --storeId 'qgNIO60u' \
    --targetStoreId 'svBkxEjr' \
    > test.out 2>&1
eval_tap $? 225 'CloneStore' test.out

#- 226 ExportStore
eval_tap 0 226 'ExportStore # SKIP deprecated' test.out

#- 227 QueryImportHistory
$CLI_EXE \
    --sn platform \
    --op QueryImportHistory \
    --namespace $AB_NAMESPACE \
    --storeId '94mXSsSG' \
    --end '6vY3oDIa' \
    --limit '29' \
    --offset '53' \
    --sortBy 'En4hbvxq' \
    --start 'gAkbZTtY' \
    --success 'true' \
    > test.out 2>&1
eval_tap $? 227 'QueryImportHistory' test.out

#- 228 ImportStoreByCSV
# form data upload: category
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
# form data upload: display
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
# form data upload: item
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
# form data upload: section
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op ImportStoreByCSV \
    --namespace $AB_NAMESPACE \
    --storeId 'e1fubShj' \
    --upload category $TEMP_FILE_UPLOAD \
    --upload display $TEMP_FILE_UPLOAD \
    --upload item $TEMP_FILE_UPLOAD \
    --notes 'yMKQtix6' \
    --upload section $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 228 'ImportStoreByCSV' test.out

#- 229 QuerySubscriptions
$CLI_EXE \
    --sn platform \
    --op QuerySubscriptions \
    --namespace $AB_NAMESPACE \
    --chargeStatus 'CHARGED' \
    --itemId 'PYHw5ZFs' \
    --limit '58' \
    --offset '11' \
    --sku 'RQ8r53Y8' \
    --status 'ACTIVE' \
    --subscribedBy 'USER' \
    --userId 'UMMzclxV' \
    > test.out 2>&1
eval_tap $? 229 'QuerySubscriptions' test.out

#- 230 RecurringChargeSubscription
$CLI_EXE \
    --sn platform \
    --op RecurringChargeSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId '3kvfbsrG' \
    > test.out 2>&1
eval_tap $? 230 'RecurringChargeSubscription' test.out

#- 231 GetTicketDynamic
$CLI_EXE \
    --sn platform \
    --op GetTicketDynamic \
    --boothName '2FDcUoze' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 231 'GetTicketDynamic' test.out

#- 232 DecreaseTicketSale
# body param: body
echo '{"orderNo": "7n2spF3z"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op DecreaseTicketSale \
    --boothName 'WcmekJXi' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 232 'DecreaseTicketSale' test.out

#- 233 GetTicketBoothID
$CLI_EXE \
    --sn platform \
    --op GetTicketBoothID \
    --boothName 'EHzEmlk7' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 233 'GetTicketBoothID' test.out

#- 234 IncreaseTicketSale
# body param: body
echo '{"count": 80, "orderNo": "x75tQSk7"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op IncreaseTicketSale \
    --boothName 'r5MNfyT6' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 234 'IncreaseTicketSale' test.out

#- 235 Commit
# body param: body
echo '{"actions": [{"operations": [{"creditPayload": {"balanceOrigin": "Oculus", "count": 15, "currencyCode": "V293WzH0", "expireAt": "1988-12-02T00:00:00Z"}, "debitPayload": {"count": 48, "currencyCode": "xNJ1oYiK", "walletPlatform": "Oculus"}, "fulFillItemPayload": {"count": 60, "entitlementCollectionId": "3szNc1tL", "entitlementOrigin": "Nintendo", "itemIdentity": "bJlJnGZo", "itemIdentityType": "ITEM_ID"}, "revokeEntitlementPayload": {"count": 98, "entitlementId": "AGQl4nXL"}, "type": "REVOKE_ENTITLEMENT"}, {"creditPayload": {"balanceOrigin": "GooglePlay", "count": 48, "currencyCode": "vYT1TUME", "expireAt": "1999-01-20T00:00:00Z"}, "debitPayload": {"count": 52, "currencyCode": "93HTOcDQ", "walletPlatform": "Xbox"}, "fulFillItemPayload": {"count": 44, "entitlementCollectionId": "6SyRNet3", "entitlementOrigin": "System", "itemIdentity": "gZd0swnX", "itemIdentityType": "ITEM_SKU"}, "revokeEntitlementPayload": {"count": 75, "entitlementId": "et08gUdu"}, "type": "FULFILL_ITEM"}, {"creditPayload": {"balanceOrigin": "Twitch", "count": 90, "currencyCode": "kCTC0Ied", "expireAt": "1979-11-27T00:00:00Z"}, "debitPayload": {"count": 9, "currencyCode": "IlknIJnG", "walletPlatform": "Xbox"}, "fulFillItemPayload": {"count": 73, "entitlementCollectionId": "jaqHVhUI", "entitlementOrigin": "Twitch", "itemIdentity": "PymvR5QG", "itemIdentityType": "ITEM_ID"}, "revokeEntitlementPayload": {"count": 93, "entitlementId": "3TP0rjGH"}, "type": "FULFILL_ITEM"}], "userId": "P7a4porO"}, {"operations": [{"creditPayload": {"balanceOrigin": "Steam", "count": 98, "currencyCode": "vcMYY2vn", "expireAt": "1996-11-27T00:00:00Z"}, "debitPayload": {"count": 45, "currencyCode": "SGNQD1ln", "walletPlatform": "Other"}, "fulFillItemPayload": {"count": 64, "entitlementCollectionId": "SA8yFxMe", "entitlementOrigin": "Epic", "itemIdentity": "rZEkAtPH", "itemIdentityType": "ITEM_ID"}, "revokeEntitlementPayload": {"count": 10, "entitlementId": "wC7ZGdxY"}, "type": "DEBIT_WALLET"}, {"creditPayload": {"balanceOrigin": "Xbox", "count": 1, "currencyCode": "sDlNZSXI", "expireAt": "1988-04-17T00:00:00Z"}, "debitPayload": {"count": 2, "currencyCode": "Ko2S6prB", "walletPlatform": "Oculus"}, "fulFillItemPayload": {"count": 80, "entitlementCollectionId": "GsFgfmV6", "entitlementOrigin": "System", "itemIdentity": "nH5FkcGR", "itemIdentityType": "ITEM_SKU"}, "revokeEntitlementPayload": {"count": 50, "entitlementId": "1CqWz5bp"}, "type": "DEBIT_WALLET"}, {"creditPayload": {"balanceOrigin": "System", "count": 70, "currencyCode": "DdLPDGrj", "expireAt": "1999-03-14T00:00:00Z"}, "debitPayload": {"count": 62, "currencyCode": "9oG75ETi", "walletPlatform": "Epic"}, "fulFillItemPayload": {"count": 28, "entitlementCollectionId": "5RoOLtqN", "entitlementOrigin": "Playstation", "itemIdentity": "FKm9Xn5P", "itemIdentityType": "ITEM_SKU"}, "revokeEntitlementPayload": {"count": 58, "entitlementId": "8psXSx2Y"}, "type": "FULFILL_ITEM"}], "userId": "W49xV5Xq"}, {"operations": [{"creditPayload": {"balanceOrigin": "IOS", "count": 90, "currencyCode": "OzSnoPWh", "expireAt": "1986-12-12T00:00:00Z"}, "debitPayload": {"count": 18, "currencyCode": "s4SiKDT7", "walletPlatform": "Xbox"}, "fulFillItemPayload": {"count": 19, "entitlementCollectionId": "OpUI4brj", "entitlementOrigin": "Nintendo", "itemIdentity": "oXpZiL6v", "itemIdentityType": "ITEM_ID"}, "revokeEntitlementPayload": {"count": 40, "entitlementId": "477kBjew"}, "type": "FULFILL_ITEM"}, {"creditPayload": {"balanceOrigin": "Nintendo", "count": 48, "currencyCode": "xWCuesjp", "expireAt": "1972-03-16T00:00:00Z"}, "debitPayload": {"count": 85, "currencyCode": "sPlZmbJk", "walletPlatform": "IOS"}, "fulFillItemPayload": {"count": 64, "entitlementCollectionId": "3EOUp76F", "entitlementOrigin": "Steam", "itemIdentity": "oMABD8bi", "itemIdentityType": "ITEM_ID"}, "revokeEntitlementPayload": {"count": 20, "entitlementId": "MhxDSTkJ"}, "type": "CREDIT_WALLET"}, {"creditPayload": {"balanceOrigin": "System", "count": 52, "currencyCode": "hhKxDIaA", "expireAt": "1997-03-21T00:00:00Z"}, "debitPayload": {"count": 88, "currencyCode": "oZk5XX64", "walletPlatform": "Other"}, "fulFillItemPayload": {"count": 3, "entitlementCollectionId": "iXHOanxg", "entitlementOrigin": "Steam", "itemIdentity": "vWAC2dBr", "itemIdentityType": "ITEM_SKU"}, "revokeEntitlementPayload": {"count": 21, "entitlementId": "QUwpvTPT"}, "type": "CREDIT_WALLET"}], "userId": "fbmRzxuz"}], "metadata": {"gfcSdMsP": {}, "l9R0i2Y6": {}, "HRHIR8dz": {}}, "needPreCheck": false, "transactionId": "urzRwEqG", "type": "bxktdtnr"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op Commit \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 235 'Commit' test.out

#- 236 GetTradeHistoryByCriteria
$CLI_EXE \
    --sn platform \
    --op GetTradeHistoryByCriteria \
    --namespace $AB_NAMESPACE \
    --limit '46' \
    --offset '87' \
    --status 'SUCCESS' \
    --type '5owNfqL7' \
    --userId 'wQYaqRak' \
    > test.out 2>&1
eval_tap $? 236 'GetTradeHistoryByCriteria' test.out

#- 237 GetTradeHistoryByTransactionId
$CLI_EXE \
    --sn platform \
    --op GetTradeHistoryByTransactionId \
    --namespace $AB_NAMESPACE \
    --transactionId 'aFoN0zD9' \
    > test.out 2>&1
eval_tap $? 237 'GetTradeHistoryByTransactionId' test.out

#- 238 UnlockSteamUserAchievement
# body param: body
echo '{"achievements": [{"id": "HcFAkNwE", "value": 43}, {"id": "HUyOltwp", "value": 74}, {"id": "ENEQtMjk", "value": 52}], "steamUserId": "zJ7ZS0vu"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UnlockSteamUserAchievement \
    --namespace $AB_NAMESPACE \
    --userId 'XgsSCJVm' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 238 'UnlockSteamUserAchievement' test.out

#- 239 GetXblUserAchievements
$CLI_EXE \
    --sn platform \
    --op GetXblUserAchievements \
    --namespace $AB_NAMESPACE \
    --userId 'M9Ob2MvW' \
    --xboxUserId '0dYoeC0R' \
    > test.out 2>&1
eval_tap $? 239 'GetXblUserAchievements' test.out

#- 240 UpdateXblUserAchievement
# body param: body
echo '{"achievements": [{"id": "yaLlx0lF", "percentComplete": 51}, {"id": "SsfNh6ab", "percentComplete": 76}, {"id": "LZMtC0Im", "percentComplete": 84}], "serviceConfigId": "gg1tL5Lh", "titleId": "wBYOoLOo", "xboxUserId": "BjkWdyAZ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXblUserAchievement \
    --namespace $AB_NAMESPACE \
    --userId 'NeZJZvW9' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 240 'UpdateXblUserAchievement' test.out

#- 241 AnonymizeCampaign
$CLI_EXE \
    --sn platform \
    --op AnonymizeCampaign \
    --namespace $AB_NAMESPACE \
    --userId 'cGmunltW' \
    > test.out 2>&1
eval_tap $? 241 'AnonymizeCampaign' test.out

#- 242 AnonymizeEntitlement
$CLI_EXE \
    --sn platform \
    --op AnonymizeEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'AUXUKR5h' \
    > test.out 2>&1
eval_tap $? 242 'AnonymizeEntitlement' test.out

#- 243 AnonymizeFulfillment
$CLI_EXE \
    --sn platform \
    --op AnonymizeFulfillment \
    --namespace $AB_NAMESPACE \
    --userId 'lOeb2TsS' \
    > test.out 2>&1
eval_tap $? 243 'AnonymizeFulfillment' test.out

#- 244 AnonymizeIntegration
$CLI_EXE \
    --sn platform \
    --op AnonymizeIntegration \
    --namespace $AB_NAMESPACE \
    --userId 'ASpKVE79' \
    > test.out 2>&1
eval_tap $? 244 'AnonymizeIntegration' test.out

#- 245 AnonymizeOrder
$CLI_EXE \
    --sn platform \
    --op AnonymizeOrder \
    --namespace $AB_NAMESPACE \
    --userId '3EQswMK0' \
    > test.out 2>&1
eval_tap $? 245 'AnonymizeOrder' test.out

#- 246 AnonymizePayment
$CLI_EXE \
    --sn platform \
    --op AnonymizePayment \
    --namespace $AB_NAMESPACE \
    --userId 'M3uhSkbp' \
    > test.out 2>&1
eval_tap $? 246 'AnonymizePayment' test.out

#- 247 AnonymizeRevocation
$CLI_EXE \
    --sn platform \
    --op AnonymizeRevocation \
    --namespace $AB_NAMESPACE \
    --userId 'ubwuqZEP' \
    > test.out 2>&1
eval_tap $? 247 'AnonymizeRevocation' test.out

#- 248 AnonymizeSubscription
$CLI_EXE \
    --sn platform \
    --op AnonymizeSubscription \
    --namespace $AB_NAMESPACE \
    --userId 'HgMylyOf' \
    > test.out 2>&1
eval_tap $? 248 'AnonymizeSubscription' test.out

#- 249 AnonymizeWallet
$CLI_EXE \
    --sn platform \
    --op AnonymizeWallet \
    --namespace $AB_NAMESPACE \
    --userId 'ALrKB6GT' \
    > test.out 2>&1
eval_tap $? 249 'AnonymizeWallet' test.out

#- 250 GetUserDLCByPlatform
$CLI_EXE \
    --sn platform \
    --op GetUserDLCByPlatform \
    --namespace $AB_NAMESPACE \
    --userId 'HUZF4Vp7' \
    --type 'STEAM' \
    > test.out 2>&1
eval_tap $? 250 'GetUserDLCByPlatform' test.out

#- 251 GetUserDLC
$CLI_EXE \
    --sn platform \
    --op GetUserDLC \
    --namespace $AB_NAMESPACE \
    --userId 'OgdTq9l8' \
    --includeAllNamespaces 'false' \
    --status 'REVOKED' \
    --type 'OCULUS' \
    > test.out 2>&1
eval_tap $? 251 'GetUserDLC' test.out

#- 252 QueryUserEntitlements
$CLI_EXE \
    --sn platform \
    --op QueryUserEntitlements \
    --namespace $AB_NAMESPACE \
    --userId 'bzX20RbU' \
    --activeOnly 'false' \
    --appType 'GAME' \
    --collectionId 'Wik6gtiL' \
    --entitlementClazz 'CODE' \
    --entitlementName '2oELIUrR' \
    --features '["MtwRPlz8", "Rs8KZwMz", "KI2PUP43"]' \
    --fuzzyMatchName 'true' \
    --ignoreActiveDate 'true' \
    --itemId '["z6hMaKXL", "n6IlRFX2", "qn55BHyI"]' \
    --limit '84' \
    --offset '50' \
    --origin 'GooglePlay' \
    > test.out 2>&1
eval_tap $? 252 'QueryUserEntitlements' test.out

#- 253 GrantUserEntitlement
# body param: body
echo '[{"collectionId": "JsW8Y1V8", "endDate": "1982-08-31T00:00:00Z", "grantedCode": "WbL0ZY3w", "itemId": "7XDvfMbB", "itemNamespace": "JDawDlKO", "language": "vrZE", "metadata": {"TnfGcFoh": {}, "NtzlOzwR": {}, "IPtJ8JHw": {}}, "origin": "Twitch", "quantity": 5, "region": "NStrqdJp", "source": "PURCHASE", "startDate": "1973-04-05T00:00:00Z", "storeId": "CbopjkP4"}, {"collectionId": "eReG2AUp", "endDate": "1995-01-10T00:00:00Z", "grantedCode": "xQqcepO4", "itemId": "TbOKpaxk", "itemNamespace": "1qpnk5Rx", "language": "Do_cWya", "metadata": {"bbtmgFmS": {}, "lQdZ5CFv": {}, "PKnbjaak": {}}, "origin": "System", "quantity": 36, "region": "TceWErv1", "source": "PURCHASE", "startDate": "1977-09-28T00:00:00Z", "storeId": "1i1MTIha"}, {"collectionId": "OUfBJsKH", "endDate": "1984-04-09T00:00:00Z", "grantedCode": "TCVwh1M1", "itemId": "6swMca8l", "itemNamespace": "Y70L0LxE", "language": "LsP_264", "metadata": {"T3aveVo7": {}, "xVDknzjw": {}, "Xr6syPSm": {}}, "origin": "Epic", "quantity": 63, "region": "uJP8OrJq", "source": "REDEEM_CODE", "startDate": "1994-08-18T00:00:00Z", "storeId": "TtKwePBH"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op GrantUserEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'RsDKtwP0' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 253 'GrantUserEntitlement' test.out

#- 254 GetUserAppEntitlementByAppId
$CLI_EXE \
    --sn platform \
    --op GetUserAppEntitlementByAppId \
    --namespace $AB_NAMESPACE \
    --userId 'aCAg6zT5' \
    --activeOnly 'false' \
    --appId 'IEKZraFa' \
    > test.out 2>&1
eval_tap $? 254 'GetUserAppEntitlementByAppId' test.out

#- 255 QueryUserEntitlementsByAppType
$CLI_EXE \
    --sn platform \
    --op QueryUserEntitlementsByAppType \
    --namespace $AB_NAMESPACE \
    --userId 'TvfHyttt' \
    --activeOnly 'true' \
    --limit '19' \
    --offset '55' \
    --appType 'DLC' \
    > test.out 2>&1
eval_tap $? 255 'QueryUserEntitlementsByAppType' test.out

#- 256 GetUserEntitlementsByIds
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementsByIds \
    --namespace $AB_NAMESPACE \
    --userId 'gaC6O86K' \
    --ids '["rRSwmaAH", "5J3OU1jY", "yXS8a4SU"]' \
    > test.out 2>&1
eval_tap $? 256 'GetUserEntitlementsByIds' test.out

#- 257 GetUserEntitlementByItemId
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'eKHDrXv3' \
    --activeOnly 'true' \
    --entitlementClazz 'SUBSCRIPTION' \
    --platform 'dAfmncSj' \
    --itemId 'l7eL3yWs' \
    > test.out 2>&1
eval_tap $? 257 'GetUserEntitlementByItemId' test.out

#- 258 GetUserActiveEntitlementsByItemIds
$CLI_EXE \
    --sn platform \
    --op GetUserActiveEntitlementsByItemIds \
    --namespace $AB_NAMESPACE \
    --userId 'S6nvIeIZ' \
    --ids '["wtIz0Fk9", "gwQIr4K1", "LvCGYDYo"]' \
    --platform 'l23F83Zm' \
    > test.out 2>&1
eval_tap $? 258 'GetUserActiveEntitlementsByItemIds' test.out

#- 259 GetUserEntitlementBySku
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementBySku \
    --namespace $AB_NAMESPACE \
    --userId 'k6QduWEv' \
    --activeOnly 'false' \
    --entitlementClazz 'OPTIONBOX' \
    --platform 'ececvt7b' \
    --sku 'pkThSYoN' \
    > test.out 2>&1
eval_tap $? 259 'GetUserEntitlementBySku' test.out

#- 260 ExistsAnyUserActiveEntitlement
$CLI_EXE \
    --sn platform \
    --op ExistsAnyUserActiveEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'BzjOE3gH' \
    --appIds '["vPnXUDeR", "ugqloa8K", "RXKOBgN7"]' \
    --itemIds '["LZYiZn18", "aR5NpYqH", "evCDooNA"]' \
    --platform 'yn8QvYf8' \
    --skus '["YXOLBCzZ", "uOpoUKue", "DIBIQGdU"]' \
    > test.out 2>&1
eval_tap $? 260 'ExistsAnyUserActiveEntitlement' test.out

#- 261 ExistsAnyUserActiveEntitlementByItemIds
$CLI_EXE \
    --sn platform \
    --op ExistsAnyUserActiveEntitlementByItemIds \
    --namespace $AB_NAMESPACE \
    --userId 'trpQnrI1' \
    --platform 'RPFUkXKo' \
    --itemIds '["jfxd3mwR", "wM2I73CN", "GbP2Cn1v"]' \
    > test.out 2>&1
eval_tap $? 261 'ExistsAnyUserActiveEntitlementByItemIds' test.out

#- 262 GetUserAppEntitlementOwnershipByAppId
$CLI_EXE \
    --sn platform \
    --op GetUserAppEntitlementOwnershipByAppId \
    --namespace $AB_NAMESPACE \
    --userId 'VVs1CDZY' \
    --appId 'JlSN1VmL' \
    > test.out 2>&1
eval_tap $? 262 'GetUserAppEntitlementOwnershipByAppId' test.out

#- 263 GetUserEntitlementOwnershipByItemId
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementOwnershipByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'TZo1xR9P' \
    --entitlementClazz 'LOOTBOX' \
    --platform 'E3icW8TR' \
    --itemId 'PyrGw8oq' \
    > test.out 2>&1
eval_tap $? 263 'GetUserEntitlementOwnershipByItemId' test.out

#- 264 GetUserEntitlementOwnershipByItemIds
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementOwnershipByItemIds \
    --namespace $AB_NAMESPACE \
    --userId '8rPLj5yA' \
    --ids '["KW5QTmFk", "RG7dzaRE", "lj4c5cSd"]' \
    --platform 'goMtI8xY' \
    > test.out 2>&1
eval_tap $? 264 'GetUserEntitlementOwnershipByItemIds' test.out

#- 265 GetUserEntitlementOwnershipBySku
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementOwnershipBySku \
    --namespace $AB_NAMESPACE \
    --userId 'ZqaMz2tR' \
    --entitlementClazz 'APP' \
    --platform 'P7Hdqsjq' \
    --sku '7xp2pLE5' \
    > test.out 2>&1
eval_tap $? 265 'GetUserEntitlementOwnershipBySku' test.out

#- 266 RevokeAllEntitlements
$CLI_EXE \
    --sn platform \
    --op RevokeAllEntitlements \
    --namespace $AB_NAMESPACE \
    --userId 'ITxtONEF' \
    > test.out 2>&1
eval_tap $? 266 'RevokeAllEntitlements' test.out

#- 267 RevokeUserEntitlements
$CLI_EXE \
    --sn platform \
    --op RevokeUserEntitlements \
    --namespace $AB_NAMESPACE \
    --userId 'jMUTJP62' \
    --entitlementIds 'betxSkPq' \
    > test.out 2>&1
eval_tap $? 267 'RevokeUserEntitlements' test.out

#- 268 GetUserEntitlement
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlement \
    --entitlementId 'KQkNCRKy' \
    --namespace $AB_NAMESPACE \
    --userId 'EN6YAixh' \
    > test.out 2>&1
eval_tap $? 268 'GetUserEntitlement' test.out

#- 269 UpdateUserEntitlement
# body param: body
echo '{"collectionId": "MrmuUxXB", "endDate": "1997-11-25T00:00:00Z", "nullFieldList": ["QJn9n6uv", "n36uA5lZ", "IJJA4wUO"], "origin": "Playstation", "reason": "aVgW9VIo", "startDate": "1990-05-16T00:00:00Z", "status": "SOLD", "useCount": 79}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateUserEntitlement \
    --entitlementId 'Y0VJvKl1' \
    --namespace $AB_NAMESPACE \
    --userId 'MIgr4vuY' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 269 'UpdateUserEntitlement' test.out

#- 270 ConsumeUserEntitlement
# body param: body
echo '{"metadata": {"lUZ6n0tM": {}, "k7cf9Rz4": {}, "8gaBqF0o": {}}, "options": ["rNRT9PcZ", "iNY344Sx", "YiHe02zu"], "platform": "FvJIrN9Y", "requestId": "wOjh5n3F", "useCount": 10}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ConsumeUserEntitlement \
    --entitlementId 'isKBHthM' \
    --namespace $AB_NAMESPACE \
    --userId 'xBXj7p6W' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 270 'ConsumeUserEntitlement' test.out

#- 271 DisableUserEntitlement
$CLI_EXE \
    --sn platform \
    --op DisableUserEntitlement \
    --entitlementId '0k7zx7V9' \
    --namespace $AB_NAMESPACE \
    --userId 'kxC1XREX' \
    > test.out 2>&1
eval_tap $? 271 'DisableUserEntitlement' test.out

#- 272 EnableUserEntitlement
$CLI_EXE \
    --sn platform \
    --op EnableUserEntitlement \
    --entitlementId 'tNqYM6As' \
    --namespace $AB_NAMESPACE \
    --userId 'wWrlBKDK' \
    > test.out 2>&1
eval_tap $? 272 'EnableUserEntitlement' test.out

#- 273 GetUserEntitlementHistories
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementHistories \
    --entitlementId 'DjxU0X03' \
    --namespace $AB_NAMESPACE \
    --userId 'jFANgTFn' \
    > test.out 2>&1
eval_tap $? 273 'GetUserEntitlementHistories' test.out

#- 274 RevokeUserEntitlement
# body param: body
echo '{"metadata": {"PIaEN0yc": {}, "SgW3aW7p": {}, "HzzK2nHp": {}}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RevokeUserEntitlement \
    --entitlementId 'Xbl4FGhk' \
    --namespace $AB_NAMESPACE \
    --userId '7S5n7aeD' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 274 'RevokeUserEntitlement' test.out

#- 275 RevokeUserEntitlementByUseCount
# body param: body
echo '{"reason": "j5Wxd0Ch", "useCount": 46}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RevokeUserEntitlementByUseCount \
    --entitlementId '7j5eWT4r' \
    --namespace $AB_NAMESPACE \
    --userId 'YNLdpHJR' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 275 'RevokeUserEntitlementByUseCount' test.out

#- 276 PreCheckRevokeUserEntitlementByUseCount
$CLI_EXE \
    --sn platform \
    --op PreCheckRevokeUserEntitlementByUseCount \
    --entitlementId 'mYCEZZW1' \
    --namespace $AB_NAMESPACE \
    --userId 'V1FsOPM7' \
    --quantity '36' \
    > test.out 2>&1
eval_tap $? 276 'PreCheckRevokeUserEntitlementByUseCount' test.out

#- 277 RevokeUseCount
eval_tap 0 277 'RevokeUseCount # SKIP deprecated' test.out

#- 278 SellUserEntitlement
# body param: body
echo '{"platform": "FpLLow3T", "requestId": "riTyViaU", "useCount": 8}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SellUserEntitlement \
    --entitlementId 'wSHlqGWl' \
    --namespace $AB_NAMESPACE \
    --userId 'cGlKGu91' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 278 'SellUserEntitlement' test.out

#- 279 FulfillItem
# body param: body
echo '{"duration": 96, "endDate": "1989-06-05T00:00:00Z", "entitlementCollectionId": "PQatT3DW", "entitlementOrigin": "Playstation", "itemId": "1SZlHAXt", "itemSku": "pKLA507a", "language": "ySuXe73m", "metadata": {"kbcAdsxj": {}, "oSF7Ip40": {}, "Bs7LxPVD": {}}, "order": {"currency": {"currencyCode": "mlsCUiry", "currencySymbol": "w0Hy04v0", "currencyType": "REAL", "decimals": 95, "namespace": "yEUujWFH"}, "ext": {"HUQ7q0aU": {}, "QmxZZKxi": {}, "85vORUId": {}}, "free": false}, "orderNo": "4nkdK7gL", "origin": "IOS", "overrideBundleItemQty": {"k06HDez1": 9, "Qcu5yyRf": 0, "XCIw5vTj": 40}, "quantity": 51, "region": "Ix93RpuI", "source": "PROMOTION", "startDate": "1999-10-21T00:00:00Z", "storeId": "XYGN5Vlz"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op FulfillItem \
    --namespace $AB_NAMESPACE \
    --userId 'SJbWNB3o' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 279 'FulfillItem' test.out

#- 280 RedeemCode
# body param: body
echo '{"code": "hBqZsKoC", "language": "yXAZ", "region": "m9aPlYmq"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RedeemCode \
    --namespace $AB_NAMESPACE \
    --userId '2OddpALL' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 280 'RedeemCode' test.out

#- 281 PreCheckFulfillItem
# body param: body
echo '{"itemId": "CT6DMjcg", "itemSku": "LHBGpFfT", "quantity": 10}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PreCheckFulfillItem \
    --namespace $AB_NAMESPACE \
    --userId 'kiOJtaKp' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 281 'PreCheckFulfillItem' test.out

#- 282 FulfillRewards
# body param: body
echo '{"entitlementCollectionId": "a6MGKsPM", "entitlementOrigin": "GooglePlay", "metadata": {"JfoDA6Qx": {}, "FUfhy4J6": {}, "LVJVzI01": {}}, "origin": "Oculus", "rewards": [{"currency": {"currencyCode": "efYKe0M8", "namespace": "VolDL8vn"}, "item": {"itemId": "ZN0c9vHN", "itemName": "UI41T5HF", "itemSku": "bfyqtm9B", "itemType": "Tt3HTX8D"}, "quantity": 78, "type": "CURRENCY"}, {"currency": {"currencyCode": "7hzqlzSj", "namespace": "r4o3Cn70"}, "item": {"itemId": "UxP09xy3", "itemName": "8nucur0s", "itemSku": "WGkWu49Q", "itemType": "pccsyP2N"}, "quantity": 5, "type": "CURRENCY"}, {"currency": {"currencyCode": "G1Nz7Sec", "namespace": "tHjTCSZ3"}, "item": {"itemId": "NWvQjpvw", "itemName": "FJZvZWCs", "itemSku": "538e3fMK", "itemType": "YI1aJSVq"}, "quantity": 76, "type": "ITEM"}], "source": "PURCHASE", "transactionId": "4tK5Huyx"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op FulfillRewards \
    --namespace $AB_NAMESPACE \
    --userId 'BUr88AuI' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 282 'FulfillRewards' test.out

#- 283 QueryUserIAPOrders
$CLI_EXE \
    --sn platform \
    --op QueryUserIAPOrders \
    --namespace $AB_NAMESPACE \
    --userId 'l7ma8dVa' \
    --endTime 'eYsNa3Yp' \
    --limit '78' \
    --offset '73' \
    --productId 'Tn83ovY8' \
    --startTime '3bsSrBpn' \
    --status 'FAILED' \
    --type 'XBOX' \
    > test.out 2>&1
eval_tap $? 283 'QueryUserIAPOrders' test.out

#- 284 QueryAllUserIAPOrders
$CLI_EXE \
    --sn platform \
    --op QueryAllUserIAPOrders \
    --namespace $AB_NAMESPACE \
    --userId 'UKYcWehD' \
    > test.out 2>&1
eval_tap $? 284 'QueryAllUserIAPOrders' test.out

#- 285 QueryUserIAPConsumeHistory
$CLI_EXE \
    --sn platform \
    --op QueryUserIAPConsumeHistory \
    --namespace $AB_NAMESPACE \
    --userId 'zrTDi59V' \
    --endTime 'btvFNwtP' \
    --limit '32' \
    --offset '60' \
    --startTime 'IEdUROS8' \
    --status 'PENDING' \
    --type 'OCULUS' \
    > test.out 2>&1
eval_tap $? 285 'QueryUserIAPConsumeHistory' test.out

#- 286 MockFulfillIAPItem
# body param: body
echo '{"itemIdentityType": "ITEM_SKU", "language": "wvW-kztS", "productId": "hvieCIUH", "region": "7393rCp3", "transactionId": "1W8JuLs3", "type": "STEAM"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op MockFulfillIAPItem \
    --namespace $AB_NAMESPACE \
    --userId '0ik4g5fI' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 286 'MockFulfillIAPItem' test.out

#- 287 AdminGetIAPOrderLineItems
$CLI_EXE \
    --sn platform \
    --op AdminGetIAPOrderLineItems \
    --iapOrderNo 'CGbfiN0a' \
    --namespace $AB_NAMESPACE \
    --userId '23V668Vk' \
    > test.out 2>&1
eval_tap $? 287 'AdminGetIAPOrderLineItems' test.out

#- 288 AdminSyncSteamAbnormalTransaction
$CLI_EXE \
    --sn platform \
    --op AdminSyncSteamAbnormalTransaction \
    --namespace $AB_NAMESPACE \
    --userId 'XPb8YzTO' \
    > test.out 2>&1
eval_tap $? 288 'AdminSyncSteamAbnormalTransaction' test.out

#- 289 AdminSyncSteamIAPByTransaction
# body param: body
echo '{"orderId": "i7NZbM4e"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op AdminSyncSteamIAPByTransaction \
    --namespace $AB_NAMESPACE \
    --userId '5xHPjEDQ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 289 'AdminSyncSteamIAPByTransaction' test.out

#- 290 QueryUserThirdPartySubscription
$CLI_EXE \
    --sn platform \
    --op QueryUserThirdPartySubscription \
    --namespace $AB_NAMESPACE \
    --userId 'Dl8UDbKW' \
    --activeOnly 'true' \
    --groupId 'iURyisMX' \
    --limit '34' \
    --offset '54' \
    --platform 'STEAM' \
    --productId 'HKkp3ZXF' \
    > test.out 2>&1
eval_tap $? 290 'QueryUserThirdPartySubscription' test.out

#- 291 GetThirdPartyPlatformSubscriptionOwnershipByGroupId
$CLI_EXE \
    --sn platform \
    --op GetThirdPartyPlatformSubscriptionOwnershipByGroupId \
    --namespace $AB_NAMESPACE \
    --platform 'APPLE' \
    --userId 's4kC6I35' \
    --groupId '9SDysKie' \
    > test.out 2>&1
eval_tap $? 291 'GetThirdPartyPlatformSubscriptionOwnershipByGroupId' test.out

#- 292 GetThirdPartyPlatformSubscriptionOwnershipByProductId
$CLI_EXE \
    --sn platform \
    --op GetThirdPartyPlatformSubscriptionOwnershipByProductId \
    --namespace $AB_NAMESPACE \
    --platform 'TWITCH' \
    --userId 'Ghb4BGVP' \
    --productId 'qvyBBNml' \
    > test.out 2>&1
eval_tap $? 292 'GetThirdPartyPlatformSubscriptionOwnershipByProductId' test.out

#- 293 QueryUserThirdPartySubscriptionTransactions
$CLI_EXE \
    --sn platform \
    --op QueryUserThirdPartySubscriptionTransactions \
    --namespace $AB_NAMESPACE \
    --userId 'W8rlohLd' \
    --activeOnly 'true' \
    --groupId 'qjw5IjCw' \
    --limit '54' \
    --offset '62' \
    --platform 'GOOGLE' \
    --productId 'VfiIGufx' \
    > test.out 2>&1
eval_tap $? 293 'QueryUserThirdPartySubscriptionTransactions' test.out

#- 294 GetThirdPartySubscriptionDetails
$CLI_EXE \
    --sn platform \
    --op GetThirdPartySubscriptionDetails \
    --id 'dxruvJJW' \
    --namespace $AB_NAMESPACE \
    --userId 'e0xVyJu0' \
    > test.out 2>&1
eval_tap $? 294 'GetThirdPartySubscriptionDetails' test.out

#- 295 GetSubscriptionHistory
$CLI_EXE \
    --sn platform \
    --op GetSubscriptionHistory \
    --id 'jEZbO6bP' \
    --namespace $AB_NAMESPACE \
    --userId 'QnWjybFF' \
    --limit '2' \
    --offset '68' \
    > test.out 2>&1
eval_tap $? 295 'GetSubscriptionHistory' test.out

#- 296 SyncSubscriptionTransaction
$CLI_EXE \
    --sn platform \
    --op SyncSubscriptionTransaction \
    --id 'U0yEjDyu' \
    --namespace $AB_NAMESPACE \
    --userId 'sqYkbzEa' \
    > test.out 2>&1
eval_tap $? 296 'SyncSubscriptionTransaction' test.out

#- 297 GetThirdPartyUserSubscriptionDetails
$CLI_EXE \
    --sn platform \
    --op GetThirdPartyUserSubscriptionDetails \
    --id '0j0hwRXO' \
    --namespace $AB_NAMESPACE \
    --userId '1G9l0noH' \
    > test.out 2>&1
eval_tap $? 297 'GetThirdPartyUserSubscriptionDetails' test.out

#- 298 SyncSubscription
$CLI_EXE \
    --sn platform \
    --op SyncSubscription \
    --id 'e64BG6wO' \
    --namespace $AB_NAMESPACE \
    --userId 'E6LfCXWX' \
    > test.out 2>&1
eval_tap $? 298 'SyncSubscription' test.out

#- 299 QueryUserOrders
$CLI_EXE \
    --sn platform \
    --op QueryUserOrders \
    --namespace $AB_NAMESPACE \
    --userId 'owbj7NPE' \
    --discounted 'true' \
    --itemId 'qt4tkh8Z' \
    --limit '61' \
    --offset '10' \
    --status 'CHARGEBACK' \
    > test.out 2>&1
eval_tap $? 299 'QueryUserOrders' test.out

#- 300 AdminCreateUserOrder
# body param: body
echo '{"currencyCode": "oCwXEI0N", "currencyNamespace": "cglMiW3Q", "discountCodes": ["XDja6vX9", "27iyOfwW", "SYu3gZOR"], "discountedPrice": 13, "entitlementPlatform": "Epic", "ext": {"NX86DZpL": {}, "vn7WinAg": {}, "V3s4ADrL": {}}, "itemId": "froV8bW1", "language": "yUMUE0LV", "options": {"skipPriceValidation": true}, "platform": "Epic", "price": 40, "quantity": 69, "region": "kmeO8aaw", "returnUrl": "9D4k7o9F", "sandbox": false, "sectionId": "3ZCxpkiw"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op AdminCreateUserOrder \
    --namespace $AB_NAMESPACE \
    --userId 'hpkaI1iQ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 300 'AdminCreateUserOrder' test.out

#- 301 CountOfPurchasedItem
$CLI_EXE \
    --sn platform \
    --op CountOfPurchasedItem \
    --namespace $AB_NAMESPACE \
    --userId 'esPHsrvc' \
    --itemId 'oX5KmcWF' \
    > test.out 2>&1
eval_tap $? 301 'CountOfPurchasedItem' test.out

#- 302 GetUserOrder
$CLI_EXE \
    --sn platform \
    --op GetUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'Bhmm9f7n' \
    --userId 'NQyxdDEs' \
    > test.out 2>&1
eval_tap $? 302 'GetUserOrder' test.out

#- 303 UpdateUserOrderStatus
# body param: body
echo '{"status": "CHARGEBACK_REVERSED", "statusReason": "tw4j8Fho"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateUserOrderStatus \
    --namespace $AB_NAMESPACE \
    --orderNo 'J9m79OFe' \
    --userId 'awFyA7mw' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 303 'UpdateUserOrderStatus' test.out

#- 304 FulfillUserOrder
$CLI_EXE \
    --sn platform \
    --op FulfillUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'JA3VyLP5' \
    --userId 'xHtUQiel' \
    > test.out 2>&1
eval_tap $? 304 'FulfillUserOrder' test.out

#- 305 GetUserOrderGrant
eval_tap 0 305 'GetUserOrderGrant # SKIP deprecated' test.out

#- 306 GetUserOrderHistories
$CLI_EXE \
    --sn platform \
    --op GetUserOrderHistories \
    --namespace $AB_NAMESPACE \
    --orderNo '0AZMhpui' \
    --userId 'oXOfsbJA' \
    > test.out 2>&1
eval_tap $? 306 'GetUserOrderHistories' test.out

#- 307 ProcessUserOrderNotification
# body param: body
echo '{"additionalData": {"cardSummary": "sUvh3Dnb"}, "authorisedTime": "1997-02-20T00:00:00Z", "chargebackReversedTime": "1987-10-03T00:00:00Z", "chargebackTime": "1978-06-12T00:00:00Z", "chargedTime": "1977-09-04T00:00:00Z", "createdTime": "1997-12-22T00:00:00Z", "currency": {"currencyCode": "Tecq1Onw", "currencySymbol": "1Y6DVbcv", "currencyType": "REAL", "decimals": 12, "namespace": "Xc0gCxqb"}, "customParameters": {"ZC6P3rAU": {}, "x5ftsVVP": {}, "7zAkR7QS": {}}, "extOrderNo": "1VRFI03r", "extTxId": "nzbJsuMj", "extUserId": "uKwiQLmb", "issuedAt": "1975-03-07T00:00:00Z", "metadata": {"fNHgJNds": "r8lAhgpC", "R2fYyNGq": "4PmCJ1Tf", "t7ukPoBd": "a3qpxNLz"}, "namespace": "GWVZlPv6", "nonceStr": "CdgErNhH", "paymentData": {"discountAmount": 2, "discountCode": "fFchOpuf", "subtotalPrice": 42, "tax": 98, "totalPrice": 30}, "paymentMethod": "p3hkPLau", "paymentMethodFee": 78, "paymentOrderNo": "44Yv4YQE", "paymentProvider": "CHECKOUT", "paymentProviderFee": 52, "paymentStationUrl": "moZNxiSQ", "price": 24, "refundedTime": "1971-11-27T00:00:00Z", "salesTax": 24, "sandbox": false, "sku": "lpzFtq0I", "status": "CHARGE_FAILED", "statusReason": "dG9ayajM", "subscriptionId": "08Zv6AbK", "subtotalPrice": 63, "targetNamespace": "a2DTxKra", "targetUserId": "fO4KI6hB", "tax": 68, "totalPrice": 39, "totalTax": 52, "txEndTime": "1993-03-08T00:00:00Z", "type": "pL7VRVji", "userId": "vVkmXPDQ", "vat": 7}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ProcessUserOrderNotification \
    --namespace $AB_NAMESPACE \
    --orderNo 'XJZSz1q6' \
    --userId 'fmYzdIRA' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 307 'ProcessUserOrderNotification' test.out

#- 308 DownloadUserOrderReceipt
$CLI_EXE \
    --sn platform \
    --op DownloadUserOrderReceipt \
    --namespace $AB_NAMESPACE \
    --orderNo 'Qk09nTIl' \
    --userId 'QbK3IkdP' \
    > test.out 2>&1
eval_tap $? 308 'DownloadUserOrderReceipt' test.out

#- 309 CreateUserPaymentOrder
# body param: body
echo '{"currencyCode": "EHSyic1h", "currencyNamespace": "AGZYsCij", "customParameters": {"RFtcVysb": {}, "mQsI0Z8h": {}, "fRsrTO5v": {}}, "description": "n89pA0Ow", "extOrderNo": "ldsytpA8", "extUserId": "6pCaSemp", "itemType": "SEASON", "language": "RDI-MvRW_893", "metadata": {"kpGFztJq": "f4FNzkV9", "0ZoocQqi": "bB85gr3G", "WItt5QGP": "DXUBifJd"}, "notifyUrl": "j7naQhWR", "omitNotification": false, "platform": "aTjQnBf4", "price": 48, "recurringPaymentOrderNo": "xmsgeiHH", "region": "OcZyqOPg", "returnUrl": "4fv0bmHV", "sandbox": false, "sku": "195qRosR", "subscriptionId": "BYw1lgBh", "title": "NAOU1Arq"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateUserPaymentOrder \
    --namespace $AB_NAMESPACE \
    --userId 'y7crwW31' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 309 'CreateUserPaymentOrder' test.out

#- 310 RefundUserPaymentOrder
# body param: body
echo '{"description": "gef9OBSc"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RefundUserPaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'u1BGGG9N' \
    --userId 'AKUDBXKd' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 310 'RefundUserPaymentOrder' test.out

#- 311 GetUserPlatformAccountClosureHistories
$CLI_EXE \
    --sn platform \
    --op GetUserPlatformAccountClosureHistories \
    --namespace $AB_NAMESPACE \
    --userId 'GczPWX46' \
    > test.out 2>&1
eval_tap $? 311 'GetUserPlatformAccountClosureHistories' test.out

#- 312 ApplyUserRedemption
# body param: body
echo '{"code": "oLPnVT9Z", "orderNo": "L8wOCXih"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ApplyUserRedemption \
    --namespace $AB_NAMESPACE \
    --userId 'FIOiGcSq' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 312 'ApplyUserRedemption' test.out

#- 313 DoRevocation
# body param: body
echo '{"meta": {"aWLXRqh9": {}, "31tMAz9t": {}, "lEuAurFf": {}}, "reason": "WR9jB0Hj", "requestId": "PjhUqpb9", "revokeEntries": [{"currency": {"balanceOrigin": "IOS", "currencyCode": "1nGsqQR2", "namespace": "kXRTKfpz"}, "entitlement": {"entitlementId": "N2OGoEWX"}, "item": {"entitlementOrigin": "System", "itemIdentity": "0J5fGQAZ", "itemIdentityType": "ITEM_ID", "origin": "Steam"}, "quantity": 91, "type": "ITEM"}, {"currency": {"balanceOrigin": "Oculus", "currencyCode": "ak3D8OBq", "namespace": "ipZosCX4"}, "entitlement": {"entitlementId": "SXNZMvPz"}, "item": {"entitlementOrigin": "Playstation", "itemIdentity": "25G5e1Ap", "itemIdentityType": "ITEM_SKU", "origin": "System"}, "quantity": 92, "type": "ITEM"}, {"currency": {"balanceOrigin": "Other", "currencyCode": "BgPiEEUW", "namespace": "z4dguQSt"}, "entitlement": {"entitlementId": "M0fa7iMm"}, "item": {"entitlementOrigin": "Twitch", "itemIdentity": "na1hdq2m", "itemIdentityType": "ITEM_ID", "origin": "IOS"}, "quantity": 7, "type": "ITEM"}], "source": "IAP", "transactionId": "AwBYfo0z"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op DoRevocation \
    --namespace $AB_NAMESPACE \
    --userId 'vO4q5v2j' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 313 'DoRevocation' test.out

#- 314 RegisterXblSessions
# body param: body
echo '{"gameSessionId": "0j7Xnfo7", "payload": {"SuYHFd0N": {}, "SA5gSMTY": {}, "sZJdy8CT": {}}, "scid": "A1CeyD80", "sessionTemplateName": "XMw4SH0Q"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RegisterXblSessions \
    --namespace $AB_NAMESPACE \
    --userId '8q20bL3x' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 314 'RegisterXblSessions' test.out

#- 315 QueryUserSubscriptions
$CLI_EXE \
    --sn platform \
    --op QueryUserSubscriptions \
    --namespace $AB_NAMESPACE \
    --userId 'IPJvRjDW' \
    --chargeStatus 'RECURRING_CHARGING' \
    --itemId 'ucvbtBmr' \
    --limit '63' \
    --offset '20' \
    --sku 'wueBz5gV' \
    --status 'INIT' \
    --subscribedBy 'PLATFORM' \
    > test.out 2>&1
eval_tap $? 315 'QueryUserSubscriptions' test.out

#- 316 GetUserSubscriptionActivities
$CLI_EXE \
    --sn platform \
    --op GetUserSubscriptionActivities \
    --namespace $AB_NAMESPACE \
    --userId 'VqrTnWbI' \
    --excludeSystem 'false' \
    --limit '21' \
    --offset '53' \
    --subscriptionId 'X2E4l9j5' \
    > test.out 2>&1
eval_tap $? 316 'GetUserSubscriptionActivities' test.out

#- 317 PlatformSubscribeSubscription
# body param: body
echo '{"grantDays": 68, "itemId": "sMCfuVfK", "language": "CpsFNtkM", "reason": "VsHTdt74", "region": "PZwmlL0n", "source": "ED1rox3K"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PlatformSubscribeSubscription \
    --namespace $AB_NAMESPACE \
    --userId 'APlJsLn2' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 317 'PlatformSubscribeSubscription' test.out

#- 318 CheckUserSubscriptionSubscribableByItemId
$CLI_EXE \
    --sn platform \
    --op CheckUserSubscriptionSubscribableByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'Cqz0Xp2a' \
    --itemId 'zvzu7CHP' \
    > test.out 2>&1
eval_tap $? 318 'CheckUserSubscriptionSubscribableByItemId' test.out

#- 319 GetUserSubscription
$CLI_EXE \
    --sn platform \
    --op GetUserSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'holCwgDw' \
    --userId 'PHGdR4bI' \
    > test.out 2>&1
eval_tap $? 319 'GetUserSubscription' test.out

#- 320 DeleteUserSubscription
$CLI_EXE \
    --sn platform \
    --op DeleteUserSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'UM7cl5Zw' \
    --userId 'Waj2QOuf' \
    > test.out 2>&1
eval_tap $? 320 'DeleteUserSubscription' test.out

#- 321 CancelSubscription
# body param: body
echo '{"immediate": false, "reason": "Pu7I8ygI"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CancelSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'Dx9MYr97' \
    --userId 'AtwZZdzC' \
    --force 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 321 'CancelSubscription' test.out

#- 322 GrantDaysToSubscription
# body param: body
echo '{"grantDays": 16, "reason": "rbAPW18c"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op GrantDaysToSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'A1Eqmayq' \
    --userId 'G6xDYjXN' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 322 'GrantDaysToSubscription' test.out

#- 323 GetUserSubscriptionBillingHistories
$CLI_EXE \
    --sn platform \
    --op GetUserSubscriptionBillingHistories \
    --namespace $AB_NAMESPACE \
    --subscriptionId '5pJfbdEl' \
    --userId 'AByyr6vx' \
    --excludeFree 'false' \
    --limit '68' \
    --offset '5' \
    > test.out 2>&1
eval_tap $? 323 'GetUserSubscriptionBillingHistories' test.out

#- 324 ProcessUserSubscriptionNotification
# body param: body
echo '{"additionalData": {"cardSummary": "RtQObvdG"}, "authorisedTime": "1981-10-01T00:00:00Z", "chargebackReversedTime": "1987-10-21T00:00:00Z", "chargebackTime": "1973-04-24T00:00:00Z", "chargedTime": "1982-08-20T00:00:00Z", "createdTime": "1982-09-18T00:00:00Z", "currency": {"currencyCode": "Viyqrl3V", "currencySymbol": "xPMPlDhP", "currencyType": "VIRTUAL", "decimals": 10, "namespace": "kHTQ6EL3"}, "customParameters": {"kpGPlmss": {}, "uKOGVUsP": {}, "IlSmeUoe": {}}, "extOrderNo": "AcVTenF2", "extTxId": "E2KoPEvA", "extUserId": "I8w75GqA", "issuedAt": "1976-02-22T00:00:00Z", "metadata": {"0F15Ya3B": "dZihgNN9", "oiTzFCAz": "dEfRiBlg", "JPUUE8qA": "TqVfDcr2"}, "namespace": "b5xdO9fo", "nonceStr": "0Ll05g4l", "paymentData": {"discountAmount": 37, "discountCode": "xmcwT0HN", "subtotalPrice": 90, "tax": 68, "totalPrice": 38}, "paymentMethod": "CfusqeVS", "paymentMethodFee": 17, "paymentOrderNo": "cxSvaaKU", "paymentProvider": "CHECKOUT", "paymentProviderFee": 31, "paymentStationUrl": "J8vYgHDY", "price": 17, "refundedTime": "1972-12-28T00:00:00Z", "salesTax": 29, "sandbox": true, "sku": "xd0UkAQh", "status": "REQUEST_FOR_INFORMATION", "statusReason": "TKyFiUXp", "subscriptionId": "eL2cFZnk", "subtotalPrice": 93, "targetNamespace": "5RdgGNRo", "targetUserId": "bo45ySAE", "tax": 97, "totalPrice": 73, "totalTax": 2, "txEndTime": "1990-05-16T00:00:00Z", "type": "u2SREoP5", "userId": "nYkxV7Sw", "vat": 50}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ProcessUserSubscriptionNotification \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'qkThigRb' \
    --userId 'sd8IE6El' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 324 'ProcessUserSubscriptionNotification' test.out

#- 325 AcquireUserTicket
# body param: body
echo '{"count": 91, "orderNo": "FlpM16iD"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op AcquireUserTicket \
    --boothName 'MQ0O97q8' \
    --namespace $AB_NAMESPACE \
    --userId 'WoRjJA2Z' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 325 'AcquireUserTicket' test.out

#- 326 QueryUserCurrencyWallets
$CLI_EXE \
    --sn platform \
    --op QueryUserCurrencyWallets \
    --namespace $AB_NAMESPACE \
    --userId 'kFt3eMoh' \
    > test.out 2>&1
eval_tap $? 326 'QueryUserCurrencyWallets' test.out

#- 327 DebitUserWalletByCurrencyCode
# body param: body
echo '{"allowOverdraft": true, "amount": 16, "balanceOrigin": "Epic", "balanceSource": "DLC_REVOCATION", "metadata": {"5comJtaR": {}, "DRJ2URjD": {}, "YgQmQPdw": {}}, "reason": "tqCK9Es0"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op DebitUserWalletByCurrencyCode \
    --currencyCode 'oYvRVO8K' \
    --namespace $AB_NAMESPACE \
    --userId '6bk5DCVh' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 327 'DebitUserWalletByCurrencyCode' test.out

#- 328 ListUserCurrencyTransactions
$CLI_EXE \
    --sn platform \
    --op ListUserCurrencyTransactions \
    --currencyCode 'aKfxH1Pr' \
    --namespace $AB_NAMESPACE \
    --userId 'arnnga5u' \
    --limit '62' \
    --offset '43' \
    > test.out 2>&1
eval_tap $? 328 'ListUserCurrencyTransactions' test.out

#- 329 CheckBalance
# body param: request
echo '{"amount": 93, "debitBalanceSource": "TRADE", "metadata": {"IHEXnPKc": {}, "DxvbgMTU": {}, "p41qV6QP": {}}, "reason": "3fczkMao", "walletPlatform": "Epic"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CheckBalance \
    --currencyCode 'bPIWz0xK' \
    --namespace $AB_NAMESPACE \
    --userId 'LM9G4L5a' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 329 'CheckBalance' test.out

#- 330 CheckWallet
eval_tap 0 330 'CheckWallet # SKIP deprecated' test.out

#- 331 CreditUserWallet
# body param: body
echo '{"amount": 37, "expireAt": "1975-05-19T00:00:00Z", "metadata": {"gpfZXooI": {}, "Xkgvg72v": {}, "bQ94WUoc": {}}, "origin": "Xbox", "reason": "khbOyckG", "source": "REWARD"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreditUserWallet \
    --currencyCode 'SRaLEqHX' \
    --namespace $AB_NAMESPACE \
    --userId 'ZwwreuFH' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 331 'CreditUserWallet' test.out

#- 332 DebitByWalletPlatform
# body param: request
echo '{"amount": 5, "debitBalanceSource": "ORDER_REVOCATION", "metadata": {"D9Ot4TXt": {}, "fIK4d4hr": {}, "IPyRxPo5": {}}, "reason": "52DqLRbu", "walletPlatform": "Other"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op DebitByWalletPlatform \
    --currencyCode 'LetpzXbN' \
    --namespace $AB_NAMESPACE \
    --userId 'JoBAiMNs' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 332 'DebitByWalletPlatform' test.out

#- 333 PayWithUserWallet
# body param: body
echo '{"amount": 72, "metadata": {"BpU0pR3M": {}, "Df0yXXBy": {}, "NzYqEOA7": {}}, "walletPlatform": "Xbox"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PayWithUserWallet \
    --currencyCode 'XmVNaX4W' \
    --namespace $AB_NAMESPACE \
    --userId 'Jqbwr3ck' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 333 'PayWithUserWallet' test.out

#- 334 GetUserWallet
eval_tap 0 334 'GetUserWallet # SKIP deprecated' test.out

#- 335 DebitUserWallet
eval_tap 0 335 'DebitUserWallet # SKIP deprecated' test.out

#- 336 DisableUserWallet
eval_tap 0 336 'DisableUserWallet # SKIP deprecated' test.out

#- 337 EnableUserWallet
eval_tap 0 337 'EnableUserWallet # SKIP deprecated' test.out

#- 338 ListUserWalletTransactions
eval_tap 0 338 'ListUserWalletTransactions # SKIP deprecated' test.out

#- 339 ListViews
$CLI_EXE \
    --sn platform \
    --op ListViews \
    --namespace $AB_NAMESPACE \
    --storeId 'RvtCpBeb' \
    > test.out 2>&1
eval_tap $? 339 'ListViews' test.out

#- 340 CreateView
# body param: body
echo '{"displayOrder": 64, "localizations": {"XrRUs6R6": {"description": "sdzvlq1T", "localExt": {"b6KBkgvT": {}, "6mkwR6W0": {}, "FMS2N21i": {}}, "longDescription": "sTRJAIGL", "title": "kAVLkVqE"}, "ontrTrER": {"description": "bz3hz23U", "localExt": {"RUao8EvT": {}, "NLtvrbhs": {}, "otl19Cuh": {}}, "longDescription": "gTw55uRv", "title": "UnxcRGX6"}, "j7hs7pKw": {"description": "fjS74rEr", "localExt": {"LT0l4H9f": {}, "3oM5zE28": {}, "Ap9F0Uuq": {}}, "longDescription": "Atx7nrSP", "title": "ZbUNp4hw"}}, "name": "QSCKoYDS"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateView \
    --namespace $AB_NAMESPACE \
    --storeId 'GQHtNE5Q' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 340 'CreateView' test.out

#- 341 GetView
$CLI_EXE \
    --sn platform \
    --op GetView \
    --namespace $AB_NAMESPACE \
    --viewId 'DWdmdI0G' \
    --storeId 'wbA18xH7' \
    > test.out 2>&1
eval_tap $? 341 'GetView' test.out

#- 342 UpdateView
# body param: body
echo '{"displayOrder": 14, "localizations": {"RQmBD4TY": {"description": "ySMowMSF", "localExt": {"H6LtkcuU": {}, "IBf1e5od": {}, "yrbVnRXb": {}}, "longDescription": "R6rj1FNq", "title": "eEHJZhNx"}, "7Xug45p1": {"description": "cP9Xu7Bt", "localExt": {"S3UNpbHR": {}, "KqufDP7h": {}, "UtHnyxFC": {}}, "longDescription": "nChsL2aI", "title": "KYxXAngC"}, "2V4UqFMC": {"description": "OZVomIwH", "localExt": {"NhdFrudm": {}, "Xh56cHk6": {}, "lRowqxY1": {}}, "longDescription": "nCFzDBSl", "title": "SGLPvkvI"}}, "name": "8IKmDTiZ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateView \
    --namespace $AB_NAMESPACE \
    --viewId 'EsbK54LV' \
    --storeId 'erX9c6MP' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 342 'UpdateView' test.out

#- 343 DeleteView
$CLI_EXE \
    --sn platform \
    --op DeleteView \
    --namespace $AB_NAMESPACE \
    --viewId 'jLg8ZYTR' \
    --storeId 'tQj5HzJz' \
    > test.out 2>&1
eval_tap $? 343 'DeleteView' test.out

#- 344 GetWalletConfig
$CLI_EXE \
    --sn platform \
    --op GetWalletConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 344 'GetWalletConfig' test.out

#- 345 UpdateWalletConfig
# body param: body
echo '{"enablePaidForVCExpiration": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateWalletConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 345 'UpdateWalletConfig' test.out

#- 346 QueryWallets
eval_tap 0 346 'QueryWallets # SKIP deprecated' test.out

#- 347 BulkCredit
# body param: body
echo '[{"creditRequest": {"amount": 23, "expireAt": "1971-12-31T00:00:00Z", "metadata": {"ynXrAR3N": {}, "cP8MC8Ua": {}, "Fphw224O": {}}, "origin": "GooglePlay", "reason": "MgcSNE1Z", "source": "ACHIEVEMENT"}, "currencyCode": "As3HlvRs", "userIds": ["iQ5UKlET", "yk22qytg", "t4JhAkr5"]}, {"creditRequest": {"amount": 44, "expireAt": "1996-10-22T00:00:00Z", "metadata": {"z2t7LZus": {}, "k9aDtcNC": {}, "LEpFyU3l": {}}, "origin": "Steam", "reason": "hUJwAcHV", "source": "GIFT"}, "currencyCode": "AIUywDeD", "userIds": ["UcW4de1V", "b4Bo6hgD", "Zh4wB6PJ"]}, {"creditRequest": {"amount": 36, "expireAt": "1971-06-02T00:00:00Z", "metadata": {"LVoxrpIr": {}, "dNNNx7SM": {}, "Jqtsp1Q2": {}}, "origin": "IOS", "reason": "uByADohz", "source": "TRADE"}, "currencyCode": "hBzFYAbo", "userIds": ["qu0vCttU", "JBVQJaXZ", "0juzU4cF"]}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op BulkCredit \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 347 'BulkCredit' test.out

#- 348 BulkDebit
# body param: body
echo '[{"currencyCode": "VHnTfe5r", "request": {"allowOverdraft": false, "amount": 63, "balanceOrigin": "Xbox", "balanceSource": "TRADE", "metadata": {"fiCZhQzb": {}, "IticSUrW": {}, "PHny82uX": {}}, "reason": "gVXXxTOr"}, "userIds": ["MMm0WcyW", "irCwWvTT", "ZgB8L2ID"]}, {"currencyCode": "32kpA48U", "request": {"allowOverdraft": true, "amount": 81, "balanceOrigin": "Epic", "balanceSource": "DLC_REVOCATION", "metadata": {"R5Zz7q61": {}, "ldoKGrvR": {}, "cuFF2h6p": {}}, "reason": "R37uImk4"}, "userIds": ["sMnw3oSa", "RdG4YcZb", "ekQhvt6d"]}, {"currencyCode": "zD8qDWQx", "request": {"allowOverdraft": true, "amount": 45, "balanceOrigin": "Playstation", "balanceSource": "EXPIRATION", "metadata": {"aW4ZWQUq": {}, "utuhoE9I": {}, "NHi2KmBX": {}}, "reason": "lkiSfStC"}, "userIds": ["p88e85He", "REBAGCYM", "Y15OdX1H"]}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op BulkDebit \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 348 'BulkDebit' test.out

#- 349 GetWallet
eval_tap 0 349 'GetWallet # SKIP deprecated' test.out

#- 350 SyncOrders
$CLI_EXE \
    --sn platform \
    --op SyncOrders \
    --nextEvaluatedKey 'bOt0f3Ll' \
    --end 'ODOKS8IM' \
    --start 'ybyU1Bah' \
    > test.out 2>&1
eval_tap $? 350 'SyncOrders' test.out

#- 351 TestAdyenConfig
# body param: body
echo '{"allowedPaymentMethods": ["0AtNK26K", "BVP83n7k", "bnVUJafX"], "apiKey": "jdGcALvQ", "authoriseAsCapture": true, "blockedPaymentMethods": ["aUpkgWC7", "9hg53gjv", "4opSLm0D"], "clientKey": "d5v1T9qu", "dropInSettings": "k75VPh2p", "liveEndpointUrlPrefix": "yk6CRnZE", "merchantAccount": "mL0FWuEb", "notificationHmacKey": "Gu5gblwH", "notificationPassword": "OBvJzsun", "notificationUsername": "3BGcM5T4", "returnUrl": "ovwhoIVz", "settings": "DxoRbQxc"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestAdyenConfig \
    --sandbox 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 351 'TestAdyenConfig' test.out

#- 352 TestAliPayConfig
# body param: body
echo '{"appId": "whYH7U8d", "privateKey": "plWRAx0d", "publicKey": "MXEbL8di", "returnUrl": "r4RYfgvm"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestAliPayConfig \
    --sandbox 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 352 'TestAliPayConfig' test.out

#- 353 TestCheckoutConfig
# body param: body
echo '{"publicKey": "OFrbU1T2", "secretKey": "r2hmF4Jp"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestCheckoutConfig \
    --sandbox 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 353 'TestCheckoutConfig' test.out

#- 354 DebugMatchedPaymentMerchantConfig
$CLI_EXE \
    --sn platform \
    --op DebugMatchedPaymentMerchantConfig \
    --namespace_ 'bdik1q3H' \
    --region '7sNGMnAu' \
    > test.out 2>&1
eval_tap $? 354 'DebugMatchedPaymentMerchantConfig' test.out

#- 355 TestNeonPayConfig
# body param: body
echo '{"apiKey": "333EGKNm", "webhookSecretKey": "mcUwEqoY"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestNeonPayConfig \
    --sandbox 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 355 'TestNeonPayConfig' test.out

#- 356 TestPayPalConfig
# body param: body
echo '{"clientID": "MEZZxL9N", "clientSecret": "NVj5pnfF", "returnUrl": "yh4rtZ58", "webHookId": "fd1i0b9r"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestPayPalConfig \
    --sandbox 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 356 'TestPayPalConfig' test.out

#- 357 TestStripeConfig
# body param: body
echo '{"allowedPaymentMethodTypes": ["tPiwPuwy", "CZ1DVfvt", "Xn0lkcMV"], "publishableKey": "PGK0lGVb", "secretKey": "MqOrxNFQ", "webhookSecret": "bgDgiCk1"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestStripeConfig \
    --sandbox 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 357 'TestStripeConfig' test.out

#- 358 TestWxPayConfig
# body param: body
echo '{"appId": "Qkbw2kMg", "key": "eHzadubW", "mchid": "mpUy9idD", "returnUrl": "fLMwhXL7"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestWxPayConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 358 'TestWxPayConfig' test.out

#- 359 TestXsollaConfig
# body param: body
echo '{"apiKey": "zQiOvgON", "flowCompletionUrl": "kgCkkCVs", "merchantId": 29, "projectId": 19, "projectSecretKey": "y6pDcOE2"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestXsollaConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 359 'TestXsollaConfig' test.out

#- 360 GetPaymentMerchantConfig1
$CLI_EXE \
    --sn platform \
    --op GetPaymentMerchantConfig1 \
    --id '1lEjLtxV' \
    > test.out 2>&1
eval_tap $? 360 'GetPaymentMerchantConfig1' test.out

#- 361 UpdateAdyenConfig
# body param: body
echo '{"allowedPaymentMethods": ["GQphtO2r", "lTtcXlVe", "6unW0bdB"], "apiKey": "GUvsJaLo", "authoriseAsCapture": true, "blockedPaymentMethods": ["UybwER71", "NaFV8dWJ", "jAO4PeFy"], "clientKey": "8OBf9wlq", "dropInSettings": "XE8WdtTP", "liveEndpointUrlPrefix": "CUUtF15H", "merchantAccount": "N6rrf5ae", "notificationHmacKey": "SYwuTO2g", "notificationPassword": "AXs0f5G8", "notificationUsername": "b0ajFurb", "returnUrl": "Qp8Ro3Cc", "settings": "HAluGdJ3"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateAdyenConfig \
    --id 'QbDK7dSN' \
    --sandbox 'false' \
    --validate 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 361 'UpdateAdyenConfig' test.out

#- 362 TestAdyenConfigById
$CLI_EXE \
    --sn platform \
    --op TestAdyenConfigById \
    --id 'BBCZLGl3' \
    --sandbox 'false' \
    > test.out 2>&1
eval_tap $? 362 'TestAdyenConfigById' test.out

#- 363 UpdateAliPayConfig
# body param: body
echo '{"appId": "L6riFGsb", "privateKey": "jQrYMgFi", "publicKey": "8Hi2zede", "returnUrl": "DphX2LGJ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateAliPayConfig \
    --id 'plDHoddm' \
    --sandbox 'true' \
    --validate 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 363 'UpdateAliPayConfig' test.out

#- 364 TestAliPayConfigById
$CLI_EXE \
    --sn platform \
    --op TestAliPayConfigById \
    --id 'QGjTzWV1' \
    --sandbox 'true' \
    > test.out 2>&1
eval_tap $? 364 'TestAliPayConfigById' test.out

#- 365 UpdateCheckoutConfig
# body param: body
echo '{"publicKey": "z09mWuQE", "secretKey": "AGkfmjvH"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCheckoutConfig \
    --id 'iuW6tAq8' \
    --sandbox 'false' \
    --validate 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 365 'UpdateCheckoutConfig' test.out

#- 366 TestCheckoutConfigById
$CLI_EXE \
    --sn platform \
    --op TestCheckoutConfigById \
    --id 'Y0SsylQV' \
    --sandbox 'false' \
    > test.out 2>&1
eval_tap $? 366 'TestCheckoutConfigById' test.out

#- 367 UpdateNeonPayConfig
# body param: body
echo '{"apiKey": "dOLfDJoK", "webhookSecretKey": "BoKPQbWs"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateNeonPayConfig \
    --id 'SlB2Tscf' \
    --sandbox 'false' \
    --validate 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 367 'UpdateNeonPayConfig' test.out

#- 368 TestNeonPayConfigById
$CLI_EXE \
    --sn platform \
    --op TestNeonPayConfigById \
    --id 'KSkTF4lI' \
    --sandbox 'true' \
    > test.out 2>&1
eval_tap $? 368 'TestNeonPayConfigById' test.out

#- 369 UpdatePayPalConfig
# body param: body
echo '{"clientID": "0m7BDGQO", "clientSecret": "qtH8YcEL", "returnUrl": "madMDSqJ", "webHookId": "oevsL7Nz"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePayPalConfig \
    --id 'lCp93LgP' \
    --sandbox 'true' \
    --validate 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 369 'UpdatePayPalConfig' test.out

#- 370 TestPayPalConfigById
$CLI_EXE \
    --sn platform \
    --op TestPayPalConfigById \
    --id 'wTlOatWB' \
    --sandbox 'true' \
    > test.out 2>&1
eval_tap $? 370 'TestPayPalConfigById' test.out

#- 371 UpdateStripeConfig
# body param: body
echo '{"allowedPaymentMethodTypes": ["s8vgRGxj", "Xyuwc8NP", "Gg9GU4w3"], "publishableKey": "TxBzAMqH", "secretKey": "ZNO1n3zB", "webhookSecret": "9RSWYQVX"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateStripeConfig \
    --id 'biKTHdIA' \
    --sandbox 'false' \
    --validate 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 371 'UpdateStripeConfig' test.out

#- 372 TestStripeConfigById
$CLI_EXE \
    --sn platform \
    --op TestStripeConfigById \
    --id '1ivR7SHw' \
    --sandbox 'false' \
    > test.out 2>&1
eval_tap $? 372 'TestStripeConfigById' test.out

#- 373 UpdateWxPayConfig
# body param: body
echo '{"appId": "Fqqrb7oS", "key": "t2vU4B7C", "mchid": "DZed2jKh", "returnUrl": "JVAloseA"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateWxPayConfig \
    --id 'vhBzy2Hh' \
    --validate 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 373 'UpdateWxPayConfig' test.out

#- 374 UpdateWxPayConfigCert
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UpdateWxPayConfigCert \
    --id '1UFsKNIO' \
    --upload file $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 374 'UpdateWxPayConfigCert' test.out

#- 375 TestWxPayConfigById
$CLI_EXE \
    --sn platform \
    --op TestWxPayConfigById \
    --id '8oC9C13u' \
    > test.out 2>&1
eval_tap $? 375 'TestWxPayConfigById' test.out

#- 376 UpdateXsollaConfig
# body param: body
echo '{"apiKey": "PYHi1ZdF", "flowCompletionUrl": "lWN8u87k", "merchantId": 67, "projectId": 61, "projectSecretKey": "rchMMQKj"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXsollaConfig \
    --id 'kHnVsaTI' \
    --validate 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 376 'UpdateXsollaConfig' test.out

#- 377 TestXsollaConfigById
$CLI_EXE \
    --sn platform \
    --op TestXsollaConfigById \
    --id 'kZ6OIOvW' \
    > test.out 2>&1
eval_tap $? 377 'TestXsollaConfigById' test.out

#- 378 UpdateXsollaUIConfig
# body param: body
echo '{"device": "MOBILE", "showCloseButton": false, "size": "SMALL", "theme": "DARK"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXsollaUIConfig \
    --id 'YhBwUB2o' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 378 'UpdateXsollaUIConfig' test.out

#- 379 QueryPaymentProviderConfig
$CLI_EXE \
    --sn platform \
    --op QueryPaymentProviderConfig \
    --limit '2' \
    --namespace_ '5B65kjk7' \
    --offset '80' \
    --region 'VS1Z2W51' \
    > test.out 2>&1
eval_tap $? 379 'QueryPaymentProviderConfig' test.out

#- 380 CreatePaymentProviderConfig
# body param: body
echo '{"aggregate": "XSOLLA", "namespace": "b0bFP7u4", "region": "htlSRoV2", "sandboxTaxJarApiToken": "bE4PAJdg", "specials": ["WALLET", "ALIPAY", "STRIPE"], "taxJarApiToken": "eX7Efl0w", "taxJarEnabled": false, "useGlobalTaxJarApiToken": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreatePaymentProviderConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 380 'CreatePaymentProviderConfig' test.out

#- 381 GetAggregatePaymentProviders
$CLI_EXE \
    --sn platform \
    --op GetAggregatePaymentProviders \
    > test.out 2>&1
eval_tap $? 381 'GetAggregatePaymentProviders' test.out

#- 382 DebugMatchedPaymentProviderConfig
$CLI_EXE \
    --sn platform \
    --op DebugMatchedPaymentProviderConfig \
    --namespace_ 'kRvxsjzu' \
    --region 'WbjYhwnD' \
    > test.out 2>&1
eval_tap $? 382 'DebugMatchedPaymentProviderConfig' test.out

#- 383 GetSpecialPaymentProviders
$CLI_EXE \
    --sn platform \
    --op GetSpecialPaymentProviders \
    > test.out 2>&1
eval_tap $? 383 'GetSpecialPaymentProviders' test.out

#- 384 UpdatePaymentProviderConfig
# body param: body
echo '{"aggregate": "XSOLLA", "namespace": "iVb63k9Z", "region": "lmwds8cj", "sandboxTaxJarApiToken": "btuopw9o", "specials": ["XSOLLA", "PAYPAL", "STRIPE"], "taxJarApiToken": "OtonPLt7", "taxJarEnabled": false, "useGlobalTaxJarApiToken": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePaymentProviderConfig \
    --id 'Ls1lHNGL' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 384 'UpdatePaymentProviderConfig' test.out

#- 385 DeletePaymentProviderConfig
$CLI_EXE \
    --sn platform \
    --op DeletePaymentProviderConfig \
    --id 'UEqDFMfo' \
    > test.out 2>&1
eval_tap $? 385 'DeletePaymentProviderConfig' test.out

#- 386 GetPaymentTaxConfig
$CLI_EXE \
    --sn platform \
    --op GetPaymentTaxConfig \
    > test.out 2>&1
eval_tap $? 386 'GetPaymentTaxConfig' test.out

#- 387 UpdatePaymentTaxConfig
# body param: body
echo '{"sandboxTaxJarApiToken": "vVr5EkDS", "taxJarApiToken": "Ejwkzjd7", "taxJarEnabled": false, "taxJarProductCodesMapping": {"12gMAVzW": "iQuXtU8C", "92WeS1mB": "YJ9Vr8D2", "1DjYqup3": "s5hMdcAX"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePaymentTaxConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 387 'UpdatePaymentTaxConfig' test.out

#- 388 SyncPaymentOrders
$CLI_EXE \
    --sn platform \
    --op SyncPaymentOrders \
    --nextEvaluatedKey '1PhaEOTR' \
    --end 'YjrUh28I' \
    --start 't8HLM0sa' \
    > test.out 2>&1
eval_tap $? 388 'SyncPaymentOrders' test.out

#- 389 PublicGetRootCategories
$CLI_EXE \
    --sn platform \
    --op PublicGetRootCategories \
    --namespace $AB_NAMESPACE \
    --language 'StDlEhKd' \
    --storeId 'qNTc4iME' \
    > test.out 2>&1
eval_tap $? 389 'PublicGetRootCategories' test.out

#- 390 DownloadCategories
$CLI_EXE \
    --sn platform \
    --op DownloadCategories \
    --namespace $AB_NAMESPACE \
    --language 'I9xaJHTA' \
    --storeId 'gaBkb65L' \
    > test.out 2>&1
eval_tap $? 390 'DownloadCategories' test.out

#- 391 PublicGetCategory
$CLI_EXE \
    --sn platform \
    --op PublicGetCategory \
    --categoryPath 'mMrwB9vw' \
    --namespace $AB_NAMESPACE \
    --language 'G9e29eZ4' \
    --storeId 'iwCsC9qt' \
    > test.out 2>&1
eval_tap $? 391 'PublicGetCategory' test.out

#- 392 PublicGetChildCategories
$CLI_EXE \
    --sn platform \
    --op PublicGetChildCategories \
    --categoryPath 'vo7Ijo9I' \
    --namespace $AB_NAMESPACE \
    --language 'moBYSuvL' \
    --storeId 'yTr7sgN8' \
    > test.out 2>&1
eval_tap $? 392 'PublicGetChildCategories' test.out

#- 393 PublicGetDescendantCategories
$CLI_EXE \
    --sn platform \
    --op PublicGetDescendantCategories \
    --categoryPath 'JfDcBeYa' \
    --namespace $AB_NAMESPACE \
    --language 'dcuLeauo' \
    --storeId 'L3OeUb2A' \
    > test.out 2>&1
eval_tap $? 393 'PublicGetDescendantCategories' test.out

#- 394 PublicListCurrencies
$CLI_EXE \
    --sn platform \
    --op PublicListCurrencies \
    --namespace $AB_NAMESPACE \
    --currencyType 'VIRTUAL' \
    > test.out 2>&1
eval_tap $? 394 'PublicListCurrencies' test.out

#- 395 GeDLCDurableRewardShortMap
$CLI_EXE \
    --sn platform \
    --op GeDLCDurableRewardShortMap \
    --namespace $AB_NAMESPACE \
    --dlcType 'EPICGAMES' \
    > test.out 2>&1
eval_tap $? 395 'GeDLCDurableRewardShortMap' test.out

#- 396 GetAppleConfigVersion
$CLI_EXE \
    --sn platform \
    --op GetAppleConfigVersion \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 396 'GetAppleConfigVersion' test.out

#- 397 GetIAPItemMapping
$CLI_EXE \
    --sn platform \
    --op GetIAPItemMapping \
    --namespace $AB_NAMESPACE \
    --platform 'GOOGLE' \
    > test.out 2>&1
eval_tap $? 397 'GetIAPItemMapping' test.out

#- 398 PublicGetItemByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetItemByAppId \
    --namespace $AB_NAMESPACE \
    --language 'DUiREjq4' \
    --region 's6QemMjh' \
    --storeId 'K5nheewB' \
    --appId 'uOSPqecY' \
    > test.out 2>&1
eval_tap $? 398 'PublicGetItemByAppId' test.out

#- 399 PublicQueryItems
$CLI_EXE \
    --sn platform \
    --op PublicQueryItems \
    --namespace $AB_NAMESPACE \
    --appType 'DLC' \
    --autoCalcEstimatedPrice 'true' \
    --baseAppId 'mLg3aqSd' \
    --categoryPath '9Kt7bo2d' \
    --features 'kpeK0OMg' \
    --includeSubCategoryItem 'false' \
    --itemType 'LOOTBOX' \
    --language 'vYS85naQ' \
    --limit '82' \
    --offset '65' \
    --region 'PxZ1A9RN' \
    --sortBy '["createdAt", "createdAt:desc", "updatedAt"]' \
    --storeId 'Ae8cVMqV' \
    --tags 'IagDbURk' \
    > test.out 2>&1
eval_tap $? 399 'PublicQueryItems' test.out

#- 400 PublicGetItemBySku
$CLI_EXE \
    --sn platform \
    --op PublicGetItemBySku \
    --namespace $AB_NAMESPACE \
    --autoCalcEstimatedPrice 'false' \
    --language 'wn4zFK0A' \
    --region '3amuXu4W' \
    --storeId 'N9kh97Bj' \
    --sku 'QSVIDYan' \
    > test.out 2>&1
eval_tap $? 400 'PublicGetItemBySku' test.out

#- 401 PublicGetEstimatedPrice
$CLI_EXE \
    --sn platform \
    --op PublicGetEstimatedPrice \
    --namespace $AB_NAMESPACE \
    --region 'BKn4Zq6q' \
    --storeId 'Pzy9JQy8' \
    --itemIds '7hkvYdKY' \
    > test.out 2>&1
eval_tap $? 401 'PublicGetEstimatedPrice' test.out

#- 402 PublicBulkGetItems
$CLI_EXE \
    --sn platform \
    --op PublicBulkGetItems \
    --namespace $AB_NAMESPACE \
    --autoCalcEstimatedPrice 'true' \
    --language 'iKDqNE8O' \
    --region 'neYJ4gTN' \
    --storeId 'LIzWnQDL' \
    --itemIds 'r0hMtukH' \
    > test.out 2>&1
eval_tap $? 402 'PublicBulkGetItems' test.out

#- 403 PublicValidateItemPurchaseCondition
# body param: body
echo '{"itemIds": ["Tmmy8JtO", "Pd0JxkJr", "9DefAsZg"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicValidateItemPurchaseCondition \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 403 'PublicValidateItemPurchaseCondition' test.out

#- 404 PublicSearchItems
$CLI_EXE \
    --sn platform \
    --op PublicSearchItems \
    --namespace $AB_NAMESPACE \
    --autoCalcEstimatedPrice 'true' \
    --itemType 'OPTIONBOX' \
    --limit '74' \
    --offset '23' \
    --region '8kBXUaBQ' \
    --storeId 'txPI1xG4' \
    --keyword 'BFmZ3JLX' \
    --language 'YtIkF119' \
    > test.out 2>&1
eval_tap $? 404 'PublicSearchItems' test.out

#- 405 PublicGetApp
$CLI_EXE \
    --sn platform \
    --op PublicGetApp \
    --itemId 'D5qb8Oaw' \
    --namespace $AB_NAMESPACE \
    --language 'jJ4EEovh' \
    --region 'gPOMBw6z' \
    --storeId '5orISNTM' \
    > test.out 2>&1
eval_tap $? 405 'PublicGetApp' test.out

#- 406 PublicGetItemDynamicData
$CLI_EXE \
    --sn platform \
    --op PublicGetItemDynamicData \
    --itemId 'cWyXPxod' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 406 'PublicGetItemDynamicData' test.out

#- 407 PublicGetItem
$CLI_EXE \
    --sn platform \
    --op PublicGetItem \
    --itemId 'c1VuqAlf' \
    --namespace $AB_NAMESPACE \
    --autoCalcEstimatedPrice 'true' \
    --language 'IslIUcJo' \
    --populateBundle 'true' \
    --region 'JowseD1w' \
    --storeId '8timzCyu' \
    > test.out 2>&1
eval_tap $? 407 'PublicGetItem' test.out

#- 408 GetPaymentCustomization
eval_tap 0 408 'GetPaymentCustomization # SKIP deprecated' test.out

#- 409 PublicGetPaymentUrl
# body param: body
echo '{"neonPayConfig": {"cancelUrl": "FzFcxylt", "successUrl": "2f06ZJzZ"}, "paymentOrderNo": "g6cUXely", "paymentProvider": "ADYEN", "returnUrl": "JetTf1bW", "ui": "5JcQNxwV", "zipCode": "lKnBuL1O"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicGetPaymentUrl \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 409 'PublicGetPaymentUrl' test.out

#- 410 PublicGetPaymentMethods
$CLI_EXE \
    --sn platform \
    --op PublicGetPaymentMethods \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'ujS4l5Zk' \
    > test.out 2>&1
eval_tap $? 410 'PublicGetPaymentMethods' test.out

#- 411 PublicGetUnpaidPaymentOrder
$CLI_EXE \
    --sn platform \
    --op PublicGetUnpaidPaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'M8kx7cAw' \
    > test.out 2>&1
eval_tap $? 411 'PublicGetUnpaidPaymentOrder' test.out

#- 412 Pay
# body param: body
echo '{"token": "MM1rcL4F"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op Pay \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'Zb1RBmJ4' \
    --paymentProvider 'STRIPE' \
    --zipCode 'euaOB4RQ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 412 'Pay' test.out

#- 413 PublicCheckPaymentOrderPaidStatus
$CLI_EXE \
    --sn platform \
    --op PublicCheckPaymentOrderPaidStatus \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'r24HLLXb' \
    > test.out 2>&1
eval_tap $? 413 'PublicCheckPaymentOrderPaidStatus' test.out

#- 414 GetPaymentPublicConfig
$CLI_EXE \
    --sn platform \
    --op GetPaymentPublicConfig \
    --namespace $AB_NAMESPACE \
    --sandbox 'false' \
    --paymentProvider 'CHECKOUT' \
    --region 'YIFz3WER' \
    > test.out 2>&1
eval_tap $? 414 'GetPaymentPublicConfig' test.out

#- 415 PublicGetQRCode
$CLI_EXE \
    --sn platform \
    --op PublicGetQRCode \
    --namespace $AB_NAMESPACE \
    --code '2pKhKr3l' \
    > test.out 2>&1
eval_tap $? 415 'PublicGetQRCode' test.out

#- 416 PublicNormalizePaymentReturnUrl
$CLI_EXE \
    --sn platform \
    --op PublicNormalizePaymentReturnUrl \
    --namespace $AB_NAMESPACE \
    --payerID 'OIOXPt2N' \
    --foreinginvoice 'qkxWtI3n' \
    --invoiceId 'WHmAEfLA' \
    --payload 'p5rnf19x' \
    --redirectResult '0x1ECVuO' \
    --resultCode 'DDIjgBgM' \
    --sessionId '3xNUzHOK' \
    --status 'PNWLtcld' \
    --token 'zgrGNGNy' \
    --type 'CAIlzdRI' \
    --userId 'rkNasV0Z' \
    --orderNo 'YUGuzOza' \
    --paymentOrderNo 'aZlAtaki' \
    --paymentProvider 'NEONPAY' \
    --returnUrl 'x0KUj7CX' \
    > test.out 2>&1
eval_tap $? 416 'PublicNormalizePaymentReturnUrl' test.out

#- 417 GetPaymentTaxValue
$CLI_EXE \
    --sn platform \
    --op GetPaymentTaxValue \
    --namespace $AB_NAMESPACE \
    --zipCode 'EWjpEPQH' \
    --paymentOrderNo 'OAm7oGku' \
    --paymentProvider 'WXPAY' \
    > test.out 2>&1
eval_tap $? 417 'GetPaymentTaxValue' test.out

#- 418 GetRewardByCode
$CLI_EXE \
    --sn platform \
    --op GetRewardByCode \
    --namespace $AB_NAMESPACE \
    --rewardCode '9xicXrOl' \
    > test.out 2>&1
eval_tap $? 418 'GetRewardByCode' test.out

#- 419 QueryRewards1
$CLI_EXE \
    --sn platform \
    --op QueryRewards1 \
    --namespace $AB_NAMESPACE \
    --eventTopic 'gDFAVIhZ' \
    --limit '27' \
    --offset '13' \
    --sortBy '["rewardCode:asc", "rewardCode:desc", "namespace:asc"]' \
    > test.out 2>&1
eval_tap $? 419 'QueryRewards1' test.out

#- 420 GetReward1
$CLI_EXE \
    --sn platform \
    --op GetReward1 \
    --namespace $AB_NAMESPACE \
    --rewardId 'bLbJ10ed' \
    > test.out 2>&1
eval_tap $? 420 'GetReward1' test.out

#- 421 PublicListStores
$CLI_EXE \
    --sn platform \
    --op PublicListStores \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 421 'PublicListStores' test.out

#- 422 PublicExistsAnyMyActiveEntitlement
$CLI_EXE \
    --sn platform \
    --op PublicExistsAnyMyActiveEntitlement \
    --namespace $AB_NAMESPACE \
    --appIds '["mLyjmEaX", "O5eihkmz", "XeAJyHqR"]' \
    --itemIds '["G2oBEClr", "q9paUoBe", "lWR5ycKH"]' \
    --skus '["N2M5fgTK", "F91NkTBE", "dnj3Jgkw"]' \
    > test.out 2>&1
eval_tap $? 422 'PublicExistsAnyMyActiveEntitlement' test.out

#- 423 PublicGetMyAppEntitlementOwnershipByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetMyAppEntitlementOwnershipByAppId \
    --namespace $AB_NAMESPACE \
    --appId 'kyE0uXHt' \
    > test.out 2>&1
eval_tap $? 423 'PublicGetMyAppEntitlementOwnershipByAppId' test.out

#- 424 PublicGetMyEntitlementOwnershipByItemId
$CLI_EXE \
    --sn platform \
    --op PublicGetMyEntitlementOwnershipByItemId \
    --namespace $AB_NAMESPACE \
    --entitlementClazz 'APP' \
    --itemId 'aHFYjyH3' \
    > test.out 2>&1
eval_tap $? 424 'PublicGetMyEntitlementOwnershipByItemId' test.out

#- 425 PublicGetMyEntitlementOwnershipBySku
$CLI_EXE \
    --sn platform \
    --op PublicGetMyEntitlementOwnershipBySku \
    --namespace $AB_NAMESPACE \
    --entitlementClazz 'LOOTBOX' \
    --sku 'iFfRVVWJ' \
    > test.out 2>&1
eval_tap $? 425 'PublicGetMyEntitlementOwnershipBySku' test.out

#- 426 PublicGetEntitlementOwnershipToken
$CLI_EXE \
    --sn platform \
    --op PublicGetEntitlementOwnershipToken \
    --namespace $AB_NAMESPACE \
    --appIds '["bGA8JVdR", "M7ASyNJE", "r4K70zvr"]' \
    --itemIds '["kX8ernow", "IR2kOLfh", "m2kEkUgd"]' \
    --skus '["ZW0vUhy8", "g0FFvB0h", "srmbGmEh"]' \
    > test.out 2>&1
eval_tap $? 426 'PublicGetEntitlementOwnershipToken' test.out

#- 427 SyncTwitchDropsEntitlement
# body param: body
echo '{"gameId": "7oIu9hac", "language": "rG-WUaD-VO", "region": "P1nKoxsR"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncTwitchDropsEntitlement \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 427 'SyncTwitchDropsEntitlement' test.out

#- 428 PublicGetMyWallet
$CLI_EXE \
    --sn platform \
    --op PublicGetMyWallet \
    --currencyCode 'WuovqJfp' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 428 'PublicGetMyWallet' test.out

#- 429 SyncEpicGameDLC
# body param: body
echo '{"epicGamesJwtToken": "66HuHCNr"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncEpicGameDLC \
    --namespace $AB_NAMESPACE \
    --userId '0cwUVhoL' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 429 'SyncEpicGameDLC' test.out

#- 430 SyncOculusDLC
$CLI_EXE \
    --sn platform \
    --op SyncOculusDLC \
    --namespace $AB_NAMESPACE \
    --userId 'yz9xEXlE' \
    > test.out 2>&1
eval_tap $? 430 'SyncOculusDLC' test.out

#- 431 PublicSyncPsnDlcInventory
# body param: body
echo '{"serviceLabel": 8}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicSyncPsnDlcInventory \
    --namespace $AB_NAMESPACE \
    --userId 'eUNbZ1U3' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 431 'PublicSyncPsnDlcInventory' test.out

#- 432 PublicSyncPsnDlcInventoryWithMultipleServiceLabels
# body param: body
echo '{"serviceLabels": [75, 68, 85]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicSyncPsnDlcInventoryWithMultipleServiceLabels \
    --namespace $AB_NAMESPACE \
    --userId 'tQTqV27C' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 432 'PublicSyncPsnDlcInventoryWithMultipleServiceLabels' test.out

#- 433 SyncSteamDLC
# body param: body
echo '{"appId": "kRCjmsfZ", "steamId": "IF0mOh0J"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncSteamDLC \
    --namespace $AB_NAMESPACE \
    --userId 'Tg1pahan' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 433 'SyncSteamDLC' test.out

#- 434 SyncXboxDLC
# body param: body
echo '{"xstsToken": "kPvkzFD9"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncXboxDLC \
    --namespace $AB_NAMESPACE \
    --userId 'BXG0D7xQ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 434 'SyncXboxDLC' test.out

#- 435 PublicQueryUserEntitlements
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserEntitlements \
    --namespace $AB_NAMESPACE \
    --userId 'pbfW4lNX' \
    --appType 'SOFTWARE' \
    --entitlementClazz 'LOOTBOX' \
    --entitlementName 'nKrat0il' \
    --features '["DoOVwsbD", "huhPLb6A", "gCueHGbE"]' \
    --itemId '["szdUAwsD", "VWYqEqq7", "XjBLtn7u"]' \
    --limit '21' \
    --offset '96' \
    > test.out 2>&1
eval_tap $? 435 'PublicQueryUserEntitlements' test.out

#- 436 PublicGetUserAppEntitlementByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetUserAppEntitlementByAppId \
    --namespace $AB_NAMESPACE \
    --userId 'W5FXgtdw' \
    --appId 'S8rQ8xrF' \
    > test.out 2>&1
eval_tap $? 436 'PublicGetUserAppEntitlementByAppId' test.out

#- 437 PublicQueryUserEntitlementsByAppType
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserEntitlementsByAppType \
    --namespace $AB_NAMESPACE \
    --userId '9f9ZjL8j' \
    --limit '27' \
    --offset '78' \
    --appType 'GAME' \
    > test.out 2>&1
eval_tap $? 437 'PublicQueryUserEntitlementsByAppType' test.out

#- 438 PublicGetUserEntitlementsByIds
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementsByIds \
    --namespace $AB_NAMESPACE \
    --userId 'w9gpnhlg' \
    --availablePlatformOnly 'false' \
    --ids '["ipdPxy91", "r9n8eclA", "CrSUQLwd"]' \
    > test.out 2>&1
eval_tap $? 438 'PublicGetUserEntitlementsByIds' test.out

#- 439 PublicGetUserEntitlementByItemId
eval_tap 0 439 'PublicGetUserEntitlementByItemId # SKIP deprecated' test.out

#- 440 PublicGetUserEntitlementBySku
eval_tap 0 440 'PublicGetUserEntitlementBySku # SKIP deprecated' test.out

#- 441 PublicUserEntitlementHistory
$CLI_EXE \
    --sn platform \
    --op PublicUserEntitlementHistory \
    --namespace $AB_NAMESPACE \
    --userId '220eqo9p' \
    --endDate '5IqnrKCR' \
    --entitlementClazz 'CODE' \
    --limit '35' \
    --offset '66' \
    --startDate 'LPohOjR5' \
    > test.out 2>&1
eval_tap $? 441 'PublicUserEntitlementHistory' test.out

#- 442 PublicExistsAnyUserActiveEntitlement
$CLI_EXE \
    --sn platform \
    --op PublicExistsAnyUserActiveEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'ZgymjW3V' \
    --appIds '["EapFhtz5", "RUH4bhXp", "Rn4i0kmr"]' \
    --itemIds '["nrXDUS6I", "AI6KoZfV", "F9X3LmPa"]' \
    --skus '["5sb0V1y7", "lXly1tG3", "3IKvz3Sf"]' \
    > test.out 2>&1
eval_tap $? 442 'PublicExistsAnyUserActiveEntitlement' test.out

#- 443 PublicGetUserAppEntitlementOwnershipByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetUserAppEntitlementOwnershipByAppId \
    --namespace $AB_NAMESPACE \
    --userId 'fQO8Mh35' \
    --appId 'qxfYUN8i' \
    > test.out 2>&1
eval_tap $? 443 'PublicGetUserAppEntitlementOwnershipByAppId' test.out

#- 444 PublicGetUserEntitlementOwnershipByItemId
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementOwnershipByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'vYtnN2K0' \
    --entitlementClazz 'ENTITLEMENT' \
    --itemId 'cJtFmpT6' \
    > test.out 2>&1
eval_tap $? 444 'PublicGetUserEntitlementOwnershipByItemId' test.out

#- 445 PublicGetUserEntitlementOwnershipByItemIds
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementOwnershipByItemIds \
    --namespace $AB_NAMESPACE \
    --userId '6Un1HA7L' \
    --ids '["ffXjHXlF", "f4PhwUCY", "AVE2qW22"]' \
    > test.out 2>&1
eval_tap $? 445 'PublicGetUserEntitlementOwnershipByItemIds' test.out

#- 446 PublicGetUserEntitlementOwnershipBySku
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementOwnershipBySku \
    --namespace $AB_NAMESPACE \
    --userId 'z2IQecBa' \
    --entitlementClazz 'OPTIONBOX' \
    --sku 'CMGNLJlj' \
    > test.out 2>&1
eval_tap $? 446 'PublicGetUserEntitlementOwnershipBySku' test.out

#- 447 PublicGetUserEntitlement
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlement \
    --entitlementId 'XRLna8ZG' \
    --namespace $AB_NAMESPACE \
    --userId 'cqdsZJhN' \
    > test.out 2>&1
eval_tap $? 447 'PublicGetUserEntitlement' test.out

#- 448 PublicConsumeUserEntitlement
# body param: body
echo '{"metadata": {"operationSource": "INVENTORY"}, "options": ["wEGQSqNn", "1FmnNmvU", "9hm3CCLH"], "requestId": "oGFB4uEd", "useCount": 5}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicConsumeUserEntitlement \
    --entitlementId '2MFBceTl' \
    --namespace $AB_NAMESPACE \
    --userId 'g0K7B3m9' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 448 'PublicConsumeUserEntitlement' test.out

#- 449 PublicSellUserEntitlement
# body param: body
echo '{"requestId": "62I70ycN", "useCount": 48}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicSellUserEntitlement \
    --entitlementId 'nfngVIpt' \
    --namespace $AB_NAMESPACE \
    --userId '1y8CaqBb' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 449 'PublicSellUserEntitlement' test.out

#- 450 PublicSplitUserEntitlement
# body param: body
echo '{"metadata": {"operationSource": "INVENTORY"}, "useCount": 90}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicSplitUserEntitlement \
    --entitlementId 'UwUsiwgh' \
    --namespace $AB_NAMESPACE \
    --userId '7X7unD9N' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 450 'PublicSplitUserEntitlement' test.out

#- 451 PublicTransferUserEntitlement
# body param: body
echo '{"entitlementId": "G9jhSrA5", "metadata": {"operationSource": "INVENTORY"}, "useCount": 0}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicTransferUserEntitlement \
    --entitlementId 'Cgirp2OY' \
    --namespace $AB_NAMESPACE \
    --userId 'HQkwDzai' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 451 'PublicTransferUserEntitlement' test.out

#- 452 PublicRedeemCode
# body param: body
echo '{"code": "KoBCjKso", "language": "oT", "region": "KfUidnTg"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicRedeemCode \
    --namespace $AB_NAMESPACE \
    --userId 'KmAXi3ZG' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 452 'PublicRedeemCode' test.out

#- 453 PublicFulfillAppleIAPItem
# body param: body
echo '{"excludeOldTransactions": false, "language": "dIH-Ig", "productId": "JuVQhpU0", "receiptData": "AORjCzvT", "region": "QxTMF98u", "transactionId": "EGPydDZr"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicFulfillAppleIAPItem \
    --namespace $AB_NAMESPACE \
    --userId 'E0q8fzRM' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 453 'PublicFulfillAppleIAPItem' test.out

#- 454 SyncEpicGamesInventory
# body param: body
echo '{"epicGamesJwtToken": "6rUqLbKN"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncEpicGamesInventory \
    --namespace $AB_NAMESPACE \
    --userId '6599NVKS' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 454 'SyncEpicGamesInventory' test.out

#- 455 PublicFulfillGoogleIAPItem
# body param: body
echo '{"autoAck": true, "autoConsume": true, "language": "MuYh", "orderId": "iRauLRcT", "packageName": "VQEozixS", "productId": "2nck5w18", "purchaseTime": 26, "purchaseToken": "kUP4EGcJ", "region": "6CI696up", "subscriptionPurchase": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicFulfillGoogleIAPItem \
    --namespace $AB_NAMESPACE \
    --userId 'Hu968dkC' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 455 'PublicFulfillGoogleIAPItem' test.out

#- 456 SyncOculusConsumableEntitlements
$CLI_EXE \
    --sn platform \
    --op SyncOculusConsumableEntitlements \
    --namespace $AB_NAMESPACE \
    --userId 'l2PhC2Rw' \
    > test.out 2>&1
eval_tap $? 456 'SyncOculusConsumableEntitlements' test.out

#- 457 PublicReconcilePlayStationStore
# body param: body
echo '{"currencyCode": "W4yHHvNj", "price": 0.7143112418322347, "productId": "5hspLbO5", "serviceLabel": 45}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicReconcilePlayStationStore \
    --namespace $AB_NAMESPACE \
    --userId 'RATyJOAj' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 457 'PublicReconcilePlayStationStore' test.out

#- 458 PublicReconcilePlayStationStoreWithMultipleServiceLabels
# body param: body
echo '{"currencyCode": "3aGDPkea", "price": 0.9207441037545789, "productId": "z2PpctLp", "serviceLabels": [72, 74, 79]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicReconcilePlayStationStoreWithMultipleServiceLabels \
    --namespace $AB_NAMESPACE \
    --userId 'xtcB3nsg' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 458 'PublicReconcilePlayStationStoreWithMultipleServiceLabels' test.out

#- 459 SyncSteamInventory
# body param: body
echo '{"appId": "OVowX5F1", "currencyCode": "YSB9XTVk", "language": "xz_790", "price": 0.6871860424088463, "productId": "1m7k3R7r", "region": "YKtMuPms", "steamId": "5FjDZrGV"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncSteamInventory \
    --namespace $AB_NAMESPACE \
    --userId '11Bs3Uyl' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 459 'SyncSteamInventory' test.out

#- 460 SyncSteamAbnormalTransaction
$CLI_EXE \
    --sn platform \
    --op SyncSteamAbnormalTransaction \
    --namespace $AB_NAMESPACE \
    --userId 'g9Qy4nvI' \
    > test.out 2>&1
eval_tap $? 460 'SyncSteamAbnormalTransaction' test.out

#- 461 SyncSteamIAPByTransaction
# body param: body
echo '{"orderId": "Ktn5sKkq"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncSteamIAPByTransaction \
    --namespace $AB_NAMESPACE \
    --userId 'DgNnbz6g' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 461 'SyncSteamIAPByTransaction' test.out

#- 462 PublicQueryUserThirdPartySubscription
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserThirdPartySubscription \
    --namespace $AB_NAMESPACE \
    --platform 'XBOX' \
    --userId 'aJR4SYPv' \
    --activeOnly 'false' \
    --groupId 'Dmy5tP0h' \
    --limit '53' \
    --offset '37' \
    --productId 'rJWFH5dL' \
    > test.out 2>&1
eval_tap $? 462 'PublicQueryUserThirdPartySubscription' test.out

#- 463 SyncTwitchDropsEntitlement1
# body param: body
echo '{"gameId": "pvYr7t4A", "language": "Rl-ccHr", "region": "sDW0J1hN"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncTwitchDropsEntitlement1 \
    --namespace $AB_NAMESPACE \
    --userId 'h1776zNG' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 463 'SyncTwitchDropsEntitlement1' test.out

#- 464 SyncXboxInventory
# body param: body
echo '{"currencyCode": "uXnbZ2gL", "price": 0.28887525040838924, "productId": "OGg85dOO", "xstsToken": "cQp107QR"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncXboxInventory \
    --namespace $AB_NAMESPACE \
    --userId '4jQrZOnu' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 464 'SyncXboxInventory' test.out

#- 465 PublicQueryUserOrders
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserOrders \
    --namespace $AB_NAMESPACE \
    --userId '1FVhLsvp' \
    --discounted 'false' \
    --itemId 'PEFWiPpU' \
    --limit '37' \
    --offset '68' \
    --status 'REFUNDING' \
    > test.out 2>&1
eval_tap $? 465 'PublicQueryUserOrders' test.out

#- 466 PublicCreateUserOrder
# body param: body
echo '{"currencyCode": "nunZpqyJ", "discountCodes": ["noHJJu9e", "EUPHBoQf", "Vpb5qcIm"], "discountedPrice": 93, "ext": {"BpnLV1iy": {}, "zFC6PhTR": {}, "f4ye0Zfa": {}}, "itemId": "yZNLgT65", "language": "ozK_riCe-701", "price": 76, "quantity": 37, "region": "skF3wFMj", "returnUrl": "c93DcEPx", "sectionId": "YGFj76kV"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicCreateUserOrder \
    --namespace $AB_NAMESPACE \
    --userId '1dcHeOU3' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 466 'PublicCreateUserOrder' test.out

#- 467 PublicPreviewOrderPrice
# body param: body
echo '{"currencyCode": "23Qq1lVq", "discountCodes": ["jv9N3Poc", "kWiVyp0F", "FUCo3RTM"], "discountedPrice": 1, "itemId": "GQxNbvrH", "price": 19, "quantity": 83}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicPreviewOrderPrice \
    --namespace $AB_NAMESPACE \
    --userId 'mrnXZkUF' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 467 'PublicPreviewOrderPrice' test.out

#- 468 PublicGetUserOrder
$CLI_EXE \
    --sn platform \
    --op PublicGetUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'UgumRp6U' \
    --userId 'B4Jtn0mw' \
    > test.out 2>&1
eval_tap $? 468 'PublicGetUserOrder' test.out

#- 469 PublicCancelUserOrder
$CLI_EXE \
    --sn platform \
    --op PublicCancelUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'ggQOQJFP' \
    --userId 'Cq4A999a' \
    > test.out 2>&1
eval_tap $? 469 'PublicCancelUserOrder' test.out

#- 470 PublicGetUserOrderHistories
$CLI_EXE \
    --sn platform \
    --op PublicGetUserOrderHistories \
    --namespace $AB_NAMESPACE \
    --orderNo 'aTyQd01e' \
    --userId 'gYkugx94' \
    > test.out 2>&1
eval_tap $? 470 'PublicGetUserOrderHistories' test.out

#- 471 PublicDownloadUserOrderReceipt
$CLI_EXE \
    --sn platform \
    --op PublicDownloadUserOrderReceipt \
    --namespace $AB_NAMESPACE \
    --orderNo 'NbhzMBkS' \
    --userId '0dpkqOXf' \
    > test.out 2>&1
eval_tap $? 471 'PublicDownloadUserOrderReceipt' test.out

#- 472 PublicGetPaymentAccounts
$CLI_EXE \
    --sn platform \
    --op PublicGetPaymentAccounts \
    --namespace $AB_NAMESPACE \
    --userId 'P2dGNatA' \
    > test.out 2>&1
eval_tap $? 472 'PublicGetPaymentAccounts' test.out

#- 473 PublicDeletePaymentAccount
$CLI_EXE \
    --sn platform \
    --op PublicDeletePaymentAccount \
    --id '5h1CllTr' \
    --namespace $AB_NAMESPACE \
    --type 'card' \
    --userId '6Nq4UB83' \
    > test.out 2>&1
eval_tap $? 473 'PublicDeletePaymentAccount' test.out

#- 474 PublicListActiveSections
$CLI_EXE \
    --sn platform \
    --op PublicListActiveSections \
    --namespace $AB_NAMESPACE \
    --userId 'FROe3kEg' \
    --autoCalcEstimatedPrice 'false' \
    --language 'JgYWyaxa' \
    --region '2OKtZUgV' \
    --storeId '7RbJgWBD' \
    --viewId 'wtthTdKV' \
    > test.out 2>&1
eval_tap $? 474 'PublicListActiveSections' test.out

#- 475 PublicQueryUserSubscriptions
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserSubscriptions \
    --namespace $AB_NAMESPACE \
    --userId 'FvFq3sxK' \
    --chargeStatus 'NEVER' \
    --itemId 'XGWEi6mU' \
    --limit '29' \
    --offset '96' \
    --sku 'rbM8Fzvg' \
    --status 'EXPIRED' \
    --subscribedBy 'USER' \
    > test.out 2>&1
eval_tap $? 475 'PublicQueryUserSubscriptions' test.out

#- 476 PublicSubscribeSubscription
# body param: body
echo '{"currencyCode": "QPbwSQ5f", "itemId": "wcJan1VR", "language": "RH_GFur_Rh", "region": "L7igwVTV", "returnUrl": "9GIiny7Q", "source": "kqYhJHFT"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicSubscribeSubscription \
    --namespace $AB_NAMESPACE \
    --userId 'Av3VGPDo' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 476 'PublicSubscribeSubscription' test.out

#- 477 PublicCheckUserSubscriptionSubscribableByItemId
$CLI_EXE \
    --sn platform \
    --op PublicCheckUserSubscriptionSubscribableByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'UgM3ZCrP' \
    --itemId '4FtIOvaM' \
    > test.out 2>&1
eval_tap $? 477 'PublicCheckUserSubscriptionSubscribableByItemId' test.out

#- 478 PublicGetUserSubscription
$CLI_EXE \
    --sn platform \
    --op PublicGetUserSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'A7C6yLce' \
    --userId 'hKXnbTBf' \
    > test.out 2>&1
eval_tap $? 478 'PublicGetUserSubscription' test.out

#- 479 PublicChangeSubscriptionBillingAccount
$CLI_EXE \
    --sn platform \
    --op PublicChangeSubscriptionBillingAccount \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'y1QRRQEX' \
    --userId 'LjVY1UHN' \
    > test.out 2>&1
eval_tap $? 479 'PublicChangeSubscriptionBillingAccount' test.out

#- 480 PublicCancelSubscription
# body param: body
echo '{"immediate": false, "reason": "9v5ZcDgH"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicCancelSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'FFDt8DPo' \
    --userId 'uPKuVzwg' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 480 'PublicCancelSubscription' test.out

#- 481 PublicGetUserSubscriptionBillingHistories
$CLI_EXE \
    --sn platform \
    --op PublicGetUserSubscriptionBillingHistories \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'ghEZ0QE1' \
    --userId 'TyEUDVpC' \
    --excludeFree 'false' \
    --limit '23' \
    --offset '90' \
    > test.out 2>&1
eval_tap $? 481 'PublicGetUserSubscriptionBillingHistories' test.out

#- 482 PublicListViews
$CLI_EXE \
    --sn platform \
    --op PublicListViews \
    --namespace $AB_NAMESPACE \
    --userId '38bZsDI9' \
    --language '3hTiokb6' \
    --storeId 'tn0XpcAg' \
    > test.out 2>&1
eval_tap $? 482 'PublicListViews' test.out

#- 483 PublicGetWallet
$CLI_EXE \
    --sn platform \
    --op PublicGetWallet \
    --currencyCode 'lstNOj3y' \
    --namespace $AB_NAMESPACE \
    --userId 'TQcxu0CV' \
    > test.out 2>&1
eval_tap $? 483 'PublicGetWallet' test.out

#- 484 PublicListUserWalletTransactions
$CLI_EXE \
    --sn platform \
    --op PublicListUserWalletTransactions \
    --currencyCode 'VDtJbIwk' \
    --namespace $AB_NAMESPACE \
    --userId 'QMHHeTRt' \
    --limit '22' \
    --offset '23' \
    > test.out 2>&1
eval_tap $? 484 'PublicListUserWalletTransactions' test.out

#- 485 PublicGetMyDLCContent
$CLI_EXE \
    --sn platform \
    --op PublicGetMyDLCContent \
    --includeAllNamespaces 'true' \
    --type 'PSN' \
    > test.out 2>&1
eval_tap $? 485 'PublicGetMyDLCContent' test.out

#- 486 QueryFulfillments
$CLI_EXE \
    --sn platform \
    --op QueryFulfillments \
    --namespace $AB_NAMESPACE \
    --endTime '0sEz4kI1' \
    --limit '33' \
    --offset '27' \
    --startTime 'ekMaHh7K' \
    --state 'REVOKED' \
    --transactionId 'ojKOBbZg' \
    --userId '1I9xtDq7' \
    > test.out 2>&1
eval_tap $? 486 'QueryFulfillments' test.out

#- 487 QueryItemsV2
$CLI_EXE \
    --sn platform \
    --op QueryItemsV2 \
    --namespace $AB_NAMESPACE \
    --appType 'DEMO' \
    --availableDate 'hRlPVcLn' \
    --baseAppId '3v0UE5um' \
    --categoryPath 'H3BCRJ0n' \
    --features 'FJkSCw5T' \
    --includeSubCategoryItem 'true' \
    --itemName 'CeIl8wOk' \
    --itemStatus 'ACTIVE' \
    --itemType '["APP", "SUBSCRIPTION", "APP"]' \
    --limit '54' \
    --offset '36' \
    --region '00CCZud7' \
    --sectionExclusive 'true' \
    --sortBy '["createdAt", "displayOrder", "displayOrder:desc"]' \
    --storeId 'WfFTHmfS' \
    --tags 'jGcMz5Xt' \
    --targetNamespace 'p9a06y8g' \
    --withTotal 'true' \
    > test.out 2>&1
eval_tap $? 487 'QueryItemsV2' test.out

#- 488 ImportStore1
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op ImportStore1 \
    --namespace $AB_NAMESPACE \
    --storeId 'pbkCzVZ4' \
    --strictMode 'false' \
    --upload file $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 488 'ImportStore1' test.out

#- 489 ExportStore1
# body param: body
echo '{"itemIds": ["Ha36R4Hc", "jVH3DLfK", "j4HxaRwE"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ExportStore1 \
    --namespace $AB_NAMESPACE \
    --storeId 'HSGNSOfS' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 489 'ExportStore1' test.out

#- 490 FulfillRewardsV2
# body param: body
echo '{"entitlementCollectionId": "9atIFTPV", "entitlementOrigin": "Other", "metadata": {"oD0DCs1N": {}, "xwnnhFmE": {}, "hKboMFw2": {}}, "origin": "Oculus", "rewards": [{"currency": {"currencyCode": "tQ4igTzj", "namespace": "WxlaYcjb"}, "item": {"itemId": "yGh9taBd", "itemName": "ukvZWez6", "itemSku": "J4PXksLw", "itemType": "z8CgYiFu"}, "quantity": 85, "type": "ITEM"}, {"currency": {"currencyCode": "eJBlSE98", "namespace": "tAmVtzoS"}, "item": {"itemId": "kfup0d5D", "itemName": "Z3JX2ANH", "itemSku": "zUQy3iU3", "itemType": "ChXNFZAq"}, "quantity": 1, "type": "ITEM"}, {"currency": {"currencyCode": "0gcXllSX", "namespace": "o8ildO6U"}, "item": {"itemId": "4fA78Od9", "itemName": "NVChguqQ", "itemSku": "JuMbctSN", "itemType": "L56j3xJ9"}, "quantity": 40, "type": "CURRENCY"}], "source": "ACHIEVEMENT", "transactionId": "SWUAw2xF"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op FulfillRewardsV2 \
    --namespace $AB_NAMESPACE \
    --userId 'nrdpl2ZO' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 490 'FulfillRewardsV2' test.out

#- 491 FulfillItems
eval_tap 0 491 'FulfillItems # SKIP deprecated' test.out

#- 492 RetryFulfillItems
eval_tap 0 492 'RetryFulfillItems # SKIP deprecated' test.out

#- 493 RevokeItems
eval_tap 0 493 'RevokeItems # SKIP deprecated' test.out

#- 494 V2PublicFulfillAppleIAPItem
# body param: body
echo '{"transactionId": "c9EsbGDU"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op V2PublicFulfillAppleIAPItem \
    --namespace $AB_NAMESPACE \
    --userId 'xBqEP5yD' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 494 'V2PublicFulfillAppleIAPItem' test.out

#- 495 FulfillItemsV3
# body param: body
echo '{"items": [{"duration": 18, "endDate": "1972-11-24T00:00:00Z", "entitlementCollectionId": "WDp7QJOJ", "entitlementOrigin": "Playstation", "itemId": "8ZHvFcs6", "itemSku": "UGt5HSOH", "language": "fCQsnyVB", "metadata": {"T1PIDOxQ": {}, "EimoSgH2": {}, "7gymJJDZ": {}}, "orderNo": "S4iTS3xH", "origin": "Oculus", "quantity": 97, "region": "0ZtfBzfN", "source": "REWARD", "startDate": "1981-01-17T00:00:00Z", "storeId": "EFkBVSDQ"}, {"duration": 74, "endDate": "1994-10-27T00:00:00Z", "entitlementCollectionId": "uzeShHgC", "entitlementOrigin": "Nintendo", "itemId": "9IEz7HaD", "itemSku": "VMH3JnxS", "language": "WYg1GjWQ", "metadata": {"Prh5SXBE": {}, "iWfVhQ9j": {}, "JPSGbvcB": {}}, "orderNo": "FbS25q2L", "origin": "Nintendo", "quantity": 30, "region": "ggQNZ9dg", "source": "OTHER", "startDate": "1993-07-25T00:00:00Z", "storeId": "1y4uzgxg"}, {"duration": 46, "endDate": "1999-10-30T00:00:00Z", "entitlementCollectionId": "coef8IVO", "entitlementOrigin": "Other", "itemId": "YYCzm3Pj", "itemSku": "DNB8REyq", "language": "6bIUeky5", "metadata": {"ZUXAsEj5": {}, "adK4FGMu": {}, "pLhZLOLU": {}}, "orderNo": "VrcTt8dx", "origin": "GooglePlay", "quantity": 91, "region": "qdorlDQZ", "source": "CONSUME_ENTITLEMENT", "startDate": "1983-07-09T00:00:00Z", "storeId": "BThUQiLD"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op FulfillItemsV3 \
    --namespace $AB_NAMESPACE \
    --transactionId 'PhbkXrvj' \
    --userId '1qZnns3r' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 495 'FulfillItemsV3' test.out

#- 496 RetryFulfillItemsV3
$CLI_EXE \
    --sn platform \
    --op RetryFulfillItemsV3 \
    --namespace $AB_NAMESPACE \
    --transactionId 'uA1xhi2f' \
    --userId 'PaYLCWXE' \
    > test.out 2>&1
eval_tap $? 496 'RetryFulfillItemsV3' test.out

#- 497 RevokeItemsV3
$CLI_EXE \
    --sn platform \
    --op RevokeItemsV3 \
    --namespace $AB_NAMESPACE \
    --transactionId 'hS8qVAs0' \
    --userId 'Sn5D6908' \
    > test.out 2>&1
eval_tap $? 497 'RevokeItemsV3' test.out


# remove artifacts
rm -f "$CLI_TOKEN_FILE"
rm -f "$TEMP_JSON_INPUT"
rm -f "$TEMP_FILE_UPLOAD"

exit $EXIT_CODE