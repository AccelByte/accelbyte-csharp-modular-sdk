#!/usr/bin/env bash

# Copyright (c) 2021 AccelByte Inc. All Rights Reserved.
# This is licensed software from AccelByte Inc, for limitations
# and restrictions contact your company contract manager.

# This code is generated by tool. DO NOT EDIT.

# Meta:
# - random seed: 
# - template file: 

# Instructions:
# - Run the Justice SDK Mock Server first before running this script.

export AB_BASE_URL="http://127.0.0.1:8080"
export AB_CLIENT_ID="admin"
export AB_CLIENT_SECRET="admin"
export AB_NAMESPACE="test"
export AB_APP_NAME="UnitTest"

EXIT_CODE=0

eval_tap() {
  if [ $1 -eq 0 ]; then
    echo "ok $2 - $3"
  else
    EXIT_CODE=1
    echo "not ok $2 - $3"
    sed 's/^/# /g' $4
  fi
  rm -f $4
}

CLI_EXE="AccelByte.Sdk.Sample.Cli"
CLI_TOKEN_FILE="$(dirname "$(which $CLI_EXE)")/token.json"
TEMP_JSON_INPUT="input_json.json"
TEMP_FILE_UPLOAD="file_upload.bin"

echo "TAP version 13"
echo "1..497"

#- 1 Login
$CLI_EXE --op login --lt user --user user --pass user > test.out 2>&1
eval_tap $? 1 'Login' test.out

if [ $EXIT_CODE -ne 0 ]; then
  echo "Bail out! Login failed."
  exit $EXIT_CODE
fi

# echo "foo" > "$CLI_TOKEN_FILE"

#- 2 ListFulfillmentScripts
$CLI_EXE \
    --sn platform \
    --op ListFulfillmentScripts \
    > test.out 2>&1
eval_tap $? 2 'ListFulfillmentScripts' test.out

#- 3 GetFulfillmentScript
$CLI_EXE \
    --sn platform \
    --op GetFulfillmentScript \
    --id 'stywuvlK' \
    > test.out 2>&1
eval_tap $? 3 'GetFulfillmentScript' test.out

#- 4 CreateFulfillmentScript
# body param: body
echo '{"grantDays": "MLmQkW2d"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateFulfillmentScript \
    --id 'GKAfMrlD' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 4 'CreateFulfillmentScript' test.out

#- 5 DeleteFulfillmentScript
$CLI_EXE \
    --sn platform \
    --op DeleteFulfillmentScript \
    --id 'U1pgQ8h5' \
    > test.out 2>&1
eval_tap $? 5 'DeleteFulfillmentScript' test.out

#- 6 UpdateFulfillmentScript
# body param: body
echo '{"grantDays": "0e0lvW7D"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateFulfillmentScript \
    --id '9dEV3qnk' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 6 'UpdateFulfillmentScript' test.out

#- 7 ListItemTypeConfigs
$CLI_EXE \
    --sn platform \
    --op ListItemTypeConfigs \
    > test.out 2>&1
eval_tap $? 7 'ListItemTypeConfigs' test.out

#- 8 CreateItemTypeConfig
# body param: body
echo '{"clazz": "cujOhhSe", "dryRun": false, "fulfillmentUrl": "3wccLeUy", "itemType": "OPTIONBOX", "purchaseConditionUrl": "SURiV3v2"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateItemTypeConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 8 'CreateItemTypeConfig' test.out

#- 9 SearchItemTypeConfig
$CLI_EXE \
    --sn platform \
    --op SearchItemTypeConfig \
    --clazz 'Wb8OU8QS' \
    --itemType 'CODE' \
    > test.out 2>&1
eval_tap $? 9 'SearchItemTypeConfig' test.out

#- 10 GetItemTypeConfig
$CLI_EXE \
    --sn platform \
    --op GetItemTypeConfig \
    --id 'JF2lxtl8' \
    > test.out 2>&1
eval_tap $? 10 'GetItemTypeConfig' test.out

#- 11 UpdateItemTypeConfig
# body param: body
echo '{"clazz": "F0yiDoEq", "dryRun": false, "fulfillmentUrl": "QFXSF29e", "purchaseConditionUrl": "WmOdV6dm"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateItemTypeConfig \
    --id 'SrYa2R19' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 11 'UpdateItemTypeConfig' test.out

#- 12 DeleteItemTypeConfig
$CLI_EXE \
    --sn platform \
    --op DeleteItemTypeConfig \
    --id 'QR7DMAlE' \
    > test.out 2>&1
eval_tap $? 12 'DeleteItemTypeConfig' test.out

#- 13 QueryCampaigns
$CLI_EXE \
    --sn platform \
    --op QueryCampaigns \
    --namespace $AB_NAMESPACE \
    --limit '75' \
    --name '8niAKNiV' \
    --offset '60' \
    --tag 'Qr7JfELQ' \
    > test.out 2>&1
eval_tap $? 13 'QueryCampaigns' test.out

#- 14 CreateCampaign
# body param: body
echo '{"description": "9qQIInWZ", "discountConfig": {"categories": [{"categoryPath": "qI8XzGGR", "includeSubCategories": true}, {"categoryPath": "WkhUsHX0", "includeSubCategories": false}, {"categoryPath": "5cInbUSI", "includeSubCategories": false}], "currencyCode": "avjlPadl", "currencyNamespace": "feZctUhi", "discountAmount": 41, "discountPercentage": 64, "discountType": "AMOUNT", "items": [{"itemId": "J5qrtMLf", "itemName": "iuMMufrR"}, {"itemId": "PKZZfmeK", "itemName": "yjVWUHhC"}, {"itemId": "lK20Rvv2", "itemName": "Xybi0P9u"}], "restrictType": "NONE", "stackable": true}, "items": [{"extraSubscriptionDays": 3, "itemId": "MuEfE6wU", "itemName": "ko8inrgP", "quantity": 17}, {"extraSubscriptionDays": 89, "itemId": "f48bdkYa", "itemName": "kNkvdpAh", "quantity": 48}, {"extraSubscriptionDays": 20, "itemId": "3wufvhHy", "itemName": "zaRGVHZH", "quantity": 61}], "maxRedeemCountPerCampaignPerUser": 82, "maxRedeemCountPerCode": 74, "maxRedeemCountPerCodePerUser": 56, "maxSaleCount": 22, "name": "1Zu2qBEm", "redeemEnd": "1979-02-18T00:00:00Z", "redeemStart": "1984-05-02T00:00:00Z", "redeemType": "ITEM", "status": "ACTIVE", "tags": ["PdzPS1pd", "POKQGuP9", "WT4l6Wsh"], "type": "REDEMPTION"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCampaign \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 14 'CreateCampaign' test.out

#- 15 GetCampaign
$CLI_EXE \
    --sn platform \
    --op GetCampaign \
    --campaignId '4KU4i6dX' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 15 'GetCampaign' test.out

#- 16 UpdateCampaign
# body param: body
echo '{"description": "4veRbIxK", "discountConfig": {"categories": [{"categoryPath": "heLi7jDD", "includeSubCategories": true}, {"categoryPath": "F9WmhKKo", "includeSubCategories": false}, {"categoryPath": "1tI1ibSu", "includeSubCategories": false}], "currencyCode": "gpsWUEcl", "currencyNamespace": "Awx8nUwY", "discountAmount": 88, "discountPercentage": 23, "discountType": "PERCENTAGE", "items": [{"itemId": "mjnqlQwl", "itemName": "pDiLabjm"}, {"itemId": "I32Sk0k6", "itemName": "jChPMp1h"}, {"itemId": "LsQOJlSZ", "itemName": "B2NqUqyp"}], "restrictType": "ITEMS_AND_CATEGORIES", "stackable": true}, "items": [{"extraSubscriptionDays": 100, "itemId": "HsYT8kkZ", "itemName": "zX4emg0f", "quantity": 63}, {"extraSubscriptionDays": 94, "itemId": "NZIWikFr", "itemName": "fq7suOdD", "quantity": 1}, {"extraSubscriptionDays": 99, "itemId": "fEvqyt5B", "itemName": "78v1IW3n", "quantity": 70}], "maxRedeemCountPerCampaignPerUser": 46, "maxRedeemCountPerCode": 59, "maxRedeemCountPerCodePerUser": 19, "maxSaleCount": 50, "name": "f377WKL9", "redeemEnd": "1981-01-26T00:00:00Z", "redeemStart": "1973-12-28T00:00:00Z", "redeemType": "ITEM", "status": "INACTIVE", "tags": ["ZftivGpT", "o8TDokl5", "u4rzOBpN"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCampaign \
    --campaignId 'PCtgetRq' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 16 'UpdateCampaign' test.out

#- 17 RenameBatch
# body param: body
echo '{"newName": "7KCQwtB4", "oldName": "8fLm6oYc"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RenameBatch \
    --campaignId '0V31EykJ' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 17 'RenameBatch' test.out

#- 18 QueryCampaignBatchNames
$CLI_EXE \
    --sn platform \
    --op QueryCampaignBatchNames \
    --campaignId 'E75qSy7F' \
    --namespace $AB_NAMESPACE \
    --batchName 'S0sUkeBe' \
    --limit '17' \
    > test.out 2>&1
eval_tap $? 18 'QueryCampaignBatchNames' test.out

#- 19 GetCampaignDynamic
$CLI_EXE \
    --sn platform \
    --op GetCampaignDynamic \
    --campaignId 'j7ybScQR' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 19 'GetCampaignDynamic' test.out

#- 20 GetCatalogConfig
$CLI_EXE \
    --sn platform \
    --op GetCatalogConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 20 'GetCatalogConfig' test.out

#- 21 UpdateCatalogConfig
# body param: body
echo '{"enableInventoryCheck": false, "itemDeletionCheckConfig": ["REWARD", "CAMPAIGN"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCatalogConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 21 'UpdateCatalogConfig' test.out

#- 22 GetLootBoxPluginConfig
$CLI_EXE \
    --sn platform \
    --op GetLootBoxPluginConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 22 'GetLootBoxPluginConfig' test.out

#- 23 UpdateLootBoxPluginConfig
# body param: body
echo '{"appConfig": {"appName": "SPmfCbIN"}, "customConfig": {"connectionType": "INSECURE", "grpcServerAddress": "c4BRQzz4"}, "extendType": "CUSTOM"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateLootBoxPluginConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 23 'UpdateLootBoxPluginConfig' test.out

#- 24 DeleteLootBoxPluginConfig
$CLI_EXE \
    --sn platform \
    --op DeleteLootBoxPluginConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 24 'DeleteLootBoxPluginConfig' test.out

#- 25 UplodLootBoxPluginConfigCert
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UplodLootBoxPluginConfigCert \
    --namespace $AB_NAMESPACE \
    --upload file $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 25 'UplodLootBoxPluginConfigCert' test.out

#- 26 GetLootBoxGrpcInfo
$CLI_EXE \
    --sn platform \
    --op GetLootBoxGrpcInfo \
    --namespace $AB_NAMESPACE \
    --force 'false' \
    > test.out 2>&1
eval_tap $? 26 'GetLootBoxGrpcInfo' test.out

#- 27 GetSectionPluginConfig
$CLI_EXE \
    --sn platform \
    --op GetSectionPluginConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 27 'GetSectionPluginConfig' test.out

#- 28 UpdateSectionPluginConfig
# body param: body
echo '{"appConfig": {"appName": "dmsZBTPw"}, "customConfig": {"connectionType": "INSECURE", "grpcServerAddress": "QUvFpfKk"}, "extendType": "APP"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateSectionPluginConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 28 'UpdateSectionPluginConfig' test.out

#- 29 DeleteSectionPluginConfig
$CLI_EXE \
    --sn platform \
    --op DeleteSectionPluginConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 29 'DeleteSectionPluginConfig' test.out

#- 30 UploadSectionPluginConfigCert
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UploadSectionPluginConfigCert \
    --namespace $AB_NAMESPACE \
    --upload file $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 30 'UploadSectionPluginConfigCert' test.out

#- 31 GetRootCategories
$CLI_EXE \
    --sn platform \
    --op GetRootCategories \
    --namespace $AB_NAMESPACE \
    --storeId 'EDWfApSq' \
    > test.out 2>&1
eval_tap $? 31 'GetRootCategories' test.out

#- 32 CreateCategory
# body param: body
echo '{"categoryPath": "3il2Cy0l", "localizationDisplayNames": {"gFPF03ve": "7Fp3vveU", "tk2gyRQm": "F1XYiaVn", "9hSHRbvY": "t0Mtti3L"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCategory \
    --namespace $AB_NAMESPACE \
    --storeId 'lJcZ4pwO' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 32 'CreateCategory' test.out

#- 33 ListCategoriesBasic
$CLI_EXE \
    --sn platform \
    --op ListCategoriesBasic \
    --namespace $AB_NAMESPACE \
    --storeId 'eFjoB1kD' \
    > test.out 2>&1
eval_tap $? 33 'ListCategoriesBasic' test.out

#- 34 GetCategory
$CLI_EXE \
    --sn platform \
    --op GetCategory \
    --categoryPath 'zqEeXkgf' \
    --namespace $AB_NAMESPACE \
    --storeId 'oMdxQ8Hy' \
    > test.out 2>&1
eval_tap $? 34 'GetCategory' test.out

#- 35 UpdateCategory
# body param: body
echo '{"localizationDisplayNames": {"D3bQeGQX": "Jo4CO7TR", "KJpdKYzt": "C3wvHapd", "auVfVyPW": "U8juoGgH"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCategory \
    --categoryPath 'J5bUmEbj' \
    --namespace $AB_NAMESPACE \
    --storeId 'vqD8PoRu' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 35 'UpdateCategory' test.out

#- 36 DeleteCategory
$CLI_EXE \
    --sn platform \
    --op DeleteCategory \
    --categoryPath 'sKNSchR3' \
    --namespace $AB_NAMESPACE \
    --storeId 'pkEoqc2f' \
    > test.out 2>&1
eval_tap $? 36 'DeleteCategory' test.out

#- 37 GetChildCategories
$CLI_EXE \
    --sn platform \
    --op GetChildCategories \
    --categoryPath '7iZS81HT' \
    --namespace $AB_NAMESPACE \
    --storeId '1GLZX2ip' \
    > test.out 2>&1
eval_tap $? 37 'GetChildCategories' test.out

#- 38 GetDescendantCategories
$CLI_EXE \
    --sn platform \
    --op GetDescendantCategories \
    --categoryPath '4KEPtRCC' \
    --namespace $AB_NAMESPACE \
    --storeId 'YH1lHvCp' \
    > test.out 2>&1
eval_tap $? 38 'GetDescendantCategories' test.out

#- 39 QueryCodes
$CLI_EXE \
    --sn platform \
    --op QueryCodes \
    --campaignId 'g3vJObG5' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --batchName 'kwFXmuPD' \
    --batchNo '[82, 63, 16]' \
    --code 'HqlO9BOR' \
    --limit '91' \
    --offset '72' \
    --withBatchName 'true' \
    > test.out 2>&1
eval_tap $? 39 'QueryCodes' test.out

#- 40 CreateCodes
# body param: body
echo '{"batchName": "TaHlgsZA", "codeValue": "Xv45JWNR", "quantity": 29}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCodes \
    --campaignId 'kJR562hC' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 40 'CreateCodes' test.out

#- 41 Download
$CLI_EXE \
    --sn platform \
    --op Download \
    --campaignId 'iFdy4Eun' \
    --namespace $AB_NAMESPACE \
    --batchName 'ftSBYCjO' \
    --batchNo '[99, 89, 74]' \
    --withBatchName 'true' \
    > test.out 2>&1
eval_tap $? 41 'Download' test.out

#- 42 BulkDisableCodes
$CLI_EXE \
    --sn platform \
    --op BulkDisableCodes \
    --campaignId 'igYLh6Zk' \
    --namespace $AB_NAMESPACE \
    --batchName 'CY3fGNvD' \
    --batchNo '[96, 84, 47]' \
    > test.out 2>&1
eval_tap $? 42 'BulkDisableCodes' test.out

#- 43 BulkEnableCodes
$CLI_EXE \
    --sn platform \
    --op BulkEnableCodes \
    --campaignId 'GMMUiWIh' \
    --namespace $AB_NAMESPACE \
    --batchName 'pYyE36k3' \
    --batchNo '[66, 34, 45]' \
    > test.out 2>&1
eval_tap $? 43 'BulkEnableCodes' test.out

#- 44 QueryRedeemHistory
$CLI_EXE \
    --sn platform \
    --op QueryRedeemHistory \
    --campaignId 'VLFCeaRU' \
    --namespace $AB_NAMESPACE \
    --code 'r5UnxVnb' \
    --limit '66' \
    --offset '51' \
    --userId 'tgcWOFUI' \
    > test.out 2>&1
eval_tap $? 44 'QueryRedeemHistory' test.out

#- 45 GetCode
$CLI_EXE \
    --sn platform \
    --op GetCode \
    --code 'MSRtjgop' \
    --namespace $AB_NAMESPACE \
    --redeemable 'false' \
    --withBatchName 'false' \
    > test.out 2>&1
eval_tap $? 45 'GetCode' test.out

#- 46 DisableCode
$CLI_EXE \
    --sn platform \
    --op DisableCode \
    --code 'XZo9LoGV' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 46 'DisableCode' test.out

#- 47 EnableCode
$CLI_EXE \
    --sn platform \
    --op EnableCode \
    --code 'f8PircDl' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 47 'EnableCode' test.out

#- 48 GetServicePluginConfig
eval_tap 0 48 'GetServicePluginConfig # SKIP deprecated' test.out

#- 49 UpdateServicePluginConfig
eval_tap 0 49 'UpdateServicePluginConfig # SKIP deprecated' test.out

#- 50 DeleteServicePluginConfig
eval_tap 0 50 'DeleteServicePluginConfig # SKIP deprecated' test.out

#- 51 ListCurrencies
$CLI_EXE \
    --sn platform \
    --op ListCurrencies \
    --namespace $AB_NAMESPACE \
    --currencyType 'REAL' \
    > test.out 2>&1
eval_tap $? 51 'ListCurrencies' test.out

#- 52 CreateCurrency
# body param: body
echo '{"currencyCode": "RG2RXvSj", "currencySymbol": "jINuDG3M", "currencyType": "REAL", "decimals": 7, "localizationDescriptions": {"Twr8rP4S": "zhykQyGb", "RpwKxjhY": "W79VBqtb", "K4BcKA5v": "GM9TBvkL"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCurrency \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 52 'CreateCurrency' test.out

#- 53 UpdateCurrency
# body param: body
echo '{"localizationDescriptions": {"OwR9Jo0j": "eBduWrcE", "ln3NecWE": "sbiqf1oO", "6YU7Mkjm": "2yPkwZcY"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCurrency \
    --currencyCode 'NwHeJwTv' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 53 'UpdateCurrency' test.out

#- 54 DeleteCurrency
$CLI_EXE \
    --sn platform \
    --op DeleteCurrency \
    --currencyCode '9UYqkNo7' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 54 'DeleteCurrency' test.out

#- 55 GetCurrencyConfig
$CLI_EXE \
    --sn platform \
    --op GetCurrencyConfig \
    --currencyCode 'jnlXOdN2' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 55 'GetCurrencyConfig' test.out

#- 56 GetCurrencySummary
$CLI_EXE \
    --sn platform \
    --op GetCurrencySummary \
    --currencyCode 'nlNqfzT4' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 56 'GetCurrencySummary' test.out

#- 57 GetDLCItemConfig
$CLI_EXE \
    --sn platform \
    --op GetDLCItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 57 'GetDLCItemConfig' test.out

#- 58 UpdateDLCItemConfig
# body param: body
echo '{"data": [{"id": "oCgXaDOs", "rewards": [{"currency": {"currencyCode": "ucm5ttSa", "namespace": "aLx08msE"}, "item": {"itemId": "HNJjGmR2", "itemName": "bDVq9rqC", "itemSku": "8yQq3gBc", "itemType": "3F8Wce1p"}, "quantity": 34, "type": "CURRENCY"}, {"currency": {"currencyCode": "3dWOX0aQ", "namespace": "RWz3ixNY"}, "item": {"itemId": "VpKJUhTh", "itemName": "MiQcYGJl", "itemSku": "R3ylYEy3", "itemType": "cUpqZ7dx"}, "quantity": 37, "type": "CURRENCY"}, {"currency": {"currencyCode": "YPAwrLmM", "namespace": "KJDQp9lq"}, "item": {"itemId": "b0D4TE9h", "itemName": "wyPe73TD", "itemSku": "2hYbrSCL", "itemType": "7nXSIqRp"}, "quantity": 49, "type": "CURRENCY"}]}, {"id": "5ju0P14S", "rewards": [{"currency": {"currencyCode": "0jru17ZQ", "namespace": "Cj2Q7ihp"}, "item": {"itemId": "km7iymC0", "itemName": "PhLorq9U", "itemSku": "urvguW0O", "itemType": "7tKhetNy"}, "quantity": 56, "type": "CURRENCY"}, {"currency": {"currencyCode": "aDirFkoy", "namespace": "FT2ZtaJ9"}, "item": {"itemId": "HGrqp0st", "itemName": "0T4Drcld", "itemSku": "idWoMTkm", "itemType": "4tLzHGjb"}, "quantity": 1, "type": "ITEM"}, {"currency": {"currencyCode": "4VGWnFmx", "namespace": "88tNkX3K"}, "item": {"itemId": "uOZDcQP7", "itemName": "Kn6RsJ9d", "itemSku": "J1W5NL8D", "itemType": "zr5BEG3E"}, "quantity": 30, "type": "CURRENCY"}]}, {"id": "Ra03q8ap", "rewards": [{"currency": {"currencyCode": "iA6q9bPv", "namespace": "4DQCAJ7j"}, "item": {"itemId": "2t9q6D67", "itemName": "GcbP5HPg", "itemSku": "8pQ1SM2N", "itemType": "WrIXEM3r"}, "quantity": 54, "type": "CURRENCY"}, {"currency": {"currencyCode": "EPTTNOUs", "namespace": "z0EFPHwL"}, "item": {"itemId": "GLUUTH2Z", "itemName": "FfRTGhNx", "itemSku": "uTxAST4o", "itemType": "0Vy69oDk"}, "quantity": 10, "type": "CURRENCY"}, {"currency": {"currencyCode": "FZDUf6Pn", "namespace": "DKWFhb9T"}, "item": {"itemId": "ZDPWIN2S", "itemName": "Jq99afmq", "itemSku": "K2f5hqIg", "itemType": "q0wYzRcU"}, "quantity": 29, "type": "ITEM"}]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateDLCItemConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 58 'UpdateDLCItemConfig' test.out

#- 59 DeleteDLCItemConfig
$CLI_EXE \
    --sn platform \
    --op DeleteDLCItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 59 'DeleteDLCItemConfig' test.out

#- 60 GetPlatformDLCConfig
$CLI_EXE \
    --sn platform \
    --op GetPlatformDLCConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 60 'GetPlatformDLCConfig' test.out

#- 61 UpdatePlatformDLCConfig
# body param: body
echo '{"data": [{"platform": "OCULUS", "platformDlcIdMap": {"WTlz083q": "4Z2Xbnk8", "cLgeH7GE": "SWT1yFtB", "HiGGReTB": "1ZM2fppJ"}}, {"platform": "EPICGAMES", "platformDlcIdMap": {"225s8OK3": "XIOgqSf0", "2lZ7Ryhc": "yRlD2PQt", "08hDJdky": "llcbAimg"}}, {"platform": "XBOX", "platformDlcIdMap": {"flfviYrw": "nAU10CAI", "2DOJvYEc": "9ldWmu7U", "BiQsFCFn": "rY4fLfft"}}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePlatformDLCConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 61 'UpdatePlatformDLCConfig' test.out

#- 62 DeletePlatformDLCConfig
$CLI_EXE \
    --sn platform \
    --op DeletePlatformDLCConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 62 'DeletePlatformDLCConfig' test.out

#- 63 QueryEntitlements1
$CLI_EXE \
    --sn platform \
    --op QueryEntitlements1 \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --appType 'GAME' \
    --entitlementClazz 'ENTITLEMENT' \
    --entitlementName '6R8HZwtd' \
    --itemId '["BEOs4Bkm", "g8wGplyi", "UMURQe1W"]' \
    --limit '84' \
    --offset '14' \
    --origin 'GooglePlay' \
    --userId 'PrbSW2QT' \
    > test.out 2>&1
eval_tap $? 63 'QueryEntitlements1' test.out

#- 64 QueryEntitlements
$CLI_EXE \
    --sn platform \
    --op QueryEntitlements \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --itemIds '["fDSkFoIJ", "pZO4Hpkc", "3rCsH2DC"]' \
    --limit '77' \
    --offset '82' \
    > test.out 2>&1
eval_tap $? 64 'QueryEntitlements' test.out

#- 65 EnableEntitlementOriginFeature
$CLI_EXE \
    --sn platform \
    --op EnableEntitlementOriginFeature \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 65 'EnableEntitlementOriginFeature' test.out

#- 66 GetEntitlementConfigInfo
$CLI_EXE \
    --sn platform \
    --op GetEntitlementConfigInfo \
    --namespace $AB_NAMESPACE \
    --withoutCache 'true' \
    > test.out 2>&1
eval_tap $? 66 'GetEntitlementConfigInfo' test.out

#- 67 GrantEntitlements
# body param: body
echo '{"entitlementGrantList": [{"collectionId": "pmBJYePE", "endDate": "1980-09-05T00:00:00Z", "grantedCode": "2nlAC4vl", "itemId": "3Obgw0io", "itemNamespace": "KrBEn5cI", "language": "eWU-le", "metadata": {"weeNJfT2": {}, "povtQOna": {}, "rit4SNs6": {}}, "origin": "Epic", "quantity": 50, "region": "IdlleY9z", "source": "REDEEM_CODE", "startDate": "1988-04-05T00:00:00Z", "storeId": "f7WryMHD"}, {"collectionId": "5Rx5NC0M", "endDate": "1979-08-09T00:00:00Z", "grantedCode": "9JQUdcmn", "itemId": "GuxjbE0F", "itemNamespace": "PMwoeeZu", "language": "yOD-pvjJ", "metadata": {"QDsa8Ruu": {}, "l8OPF1Eu": {}, "E8wOY6DC": {}}, "origin": "Epic", "quantity": 54, "region": "GYZbt9RH", "source": "REDEEM_CODE", "startDate": "1995-01-24T00:00:00Z", "storeId": "12K6YF6V"}, {"collectionId": "52fUpRer", "endDate": "1972-05-10T00:00:00Z", "grantedCode": "jDeaQrg5", "itemId": "Gfn1DQeq", "itemNamespace": "M6XvwLKg", "language": "Oqp", "metadata": {"gE72rnvP": {}, "1uvntiaT": {}, "Fc0Iu0bP": {}}, "origin": "Playstation", "quantity": 82, "region": "XfsJ1m84", "source": "REDEEM_CODE", "startDate": "1993-02-02T00:00:00Z", "storeId": "J8xPKCnU"}], "userIds": ["1WZ9NFvr", "eOIEGClN", "VbkF5iO7"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op GrantEntitlements \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 67 'GrantEntitlements' test.out

#- 68 RevokeEntitlements
# body param: body
echo '["owgvXa3w", "GsZBDUcz", "FYC5QST8"]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RevokeEntitlements \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 68 'RevokeEntitlements' test.out

#- 69 GetEntitlement
$CLI_EXE \
    --sn platform \
    --op GetEntitlement \
    --entitlementId 'Tq5AdJkW' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 69 'GetEntitlement' test.out

#- 70 QueryFulfillmentHistories
$CLI_EXE \
    --sn platform \
    --op QueryFulfillmentHistories \
    --namespace $AB_NAMESPACE \
    --limit '99' \
    --offset '81' \
    --status 'SUCCESS' \
    --userId '8q8g97yY' \
    > test.out 2>&1
eval_tap $? 70 'QueryFulfillmentHistories' test.out

#- 71 QueryIAPClawbackHistory
$CLI_EXE \
    --sn platform \
    --op QueryIAPClawbackHistory \
    --namespace $AB_NAMESPACE \
    --endTime 'M6PPJqPE' \
    --eventType 'REVOKED' \
    --externalOrderId 'q64LCnCs' \
    --limit '63' \
    --offset '13' \
    --startTime 'bh3R7srb' \
    --status 'FAIL' \
    --userId 'r46wAGPD' \
    > test.out 2>&1
eval_tap $? 71 'QueryIAPClawbackHistory' test.out

#- 72 MockPlayStationStreamEvent
# body param: body
echo '{"body": {"account": "GZC6NnNu", "additionalData": {"entitlement": [{"clientTransaction": [{"amountConsumed": 92, "clientTransactionId": "CeNrPnTO"}, {"amountConsumed": 87, "clientTransactionId": "BxljzOdQ"}, {"amountConsumed": 99, "clientTransactionId": "SnGthU1b"}], "entitlementId": "hDckAVSR", "usageCount": 38}, {"clientTransaction": [{"amountConsumed": 91, "clientTransactionId": "n91QXfeC"}, {"amountConsumed": 17, "clientTransactionId": "1g59Oqb7"}, {"amountConsumed": 78, "clientTransactionId": "sN6StKlc"}], "entitlementId": "8kEwnd2l", "usageCount": 64}, {"clientTransaction": [{"amountConsumed": 4, "clientTransactionId": "Eo0DnkYQ"}, {"amountConsumed": 44, "clientTransactionId": "UhACLZ9g"}, {"amountConsumed": 13, "clientTransactionId": "os28W6vs"}], "entitlementId": "PUrE9HpB", "usageCount": 9}], "purpose": "ZVJnn1dR"}, "originalTitleName": "3BoQzQbl", "paymentProductSKU": "CSpIuTcv", "purchaseDate": "jg5oOiGU", "sourceOrderItemId": "2ZeAz3uA", "titleName": "rKtegJV3"}, "eventDomain": "xFJnowrM", "eventSource": "2BDsgyfn", "eventType": "rxL7L2fe", "eventVersion": 56, "id": "kx9gOjMu", "timestamp": "1fvpv9zF"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op MockPlayStationStreamEvent \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 72 'MockPlayStationStreamEvent' test.out

#- 73 MockXblClawbackEvent
# body param: body
echo '{"data": {"eventDate": "olV1Ydc0", "eventState": "l7a7LAgx", "lineItemId": "C8aD3rlF", "orderId": "QPTifGk7", "productId": "HYRuB6mA", "productType": "ZPMP4350", "purchasedDate": "a339N6Av", "sandboxId": "UawM9KR9", "skuId": "odJbdaZJ", "subscriptionData": {"consumedDurationInDays": 91, "dateTime": "Ul8Ks3Gn", "durationInDays": 26, "recurrenceId": "Ud0yvDYC"}}, "datacontenttype": "2dxEImh4", "id": "AaO26MLY", "source": "8ZpFauOK", "specVersion": "0teEhsTY", "subject": "O7SxOaNH", "time": "18OLbA1r", "traceparent": "RtkXkacO", "type": "hK4dt7Po"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op MockXblClawbackEvent \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 73 'MockXblClawbackEvent' test.out

#- 74 GetAppleIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetAppleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 74 'GetAppleIAPConfig' test.out

#- 75 UpdateAppleIAPConfig
# body param: body
echo '{"appAppleId": 31, "bundleId": "omeiKS1K", "issuerId": "q8hytklT", "keyId": "r63qsHXb", "password": "ZEcbpU5S", "version": "V2"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateAppleIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 75 'UpdateAppleIAPConfig' test.out

#- 76 DeleteAppleIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteAppleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 76 'DeleteAppleIAPConfig' test.out

#- 77 UpdateAppleP8File
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UpdateAppleP8File \
    --namespace $AB_NAMESPACE \
    --upload file $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 77 'UpdateAppleP8File' test.out

#- 78 GetEpicGamesIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetEpicGamesIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 78 'GetEpicGamesIAPConfig' test.out

#- 79 UpdateEpicGamesIAPConfig
# body param: body
echo '{"sandboxId": "atg4INLI"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateEpicGamesIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 79 'UpdateEpicGamesIAPConfig' test.out

#- 80 DeleteEpicGamesIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteEpicGamesIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 80 'DeleteEpicGamesIAPConfig' test.out

#- 81 GetGoogleIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetGoogleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 81 'GetGoogleIAPConfig' test.out

#- 82 UpdateGoogleIAPConfig
# body param: body
echo '{"applicationName": "kaiw9Hdd", "notificationTokenAudience": "fGoyN6Ss", "notificationTokenEmail": "z4s4dtMH", "packageName": "bwp7BimK", "serviceAccountId": "dNbAwEYH"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateGoogleIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 82 'UpdateGoogleIAPConfig' test.out

#- 83 DeleteGoogleIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteGoogleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 83 'DeleteGoogleIAPConfig' test.out

#- 84 UpdateGoogleP12File
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UpdateGoogleP12File \
    --namespace $AB_NAMESPACE \
    --upload file $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 84 'UpdateGoogleP12File' test.out

#- 85 GetIAPItemConfig
$CLI_EXE \
    --sn platform \
    --op GetIAPItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 85 'GetIAPItemConfig' test.out

#- 86 UpdateIAPItemConfig
# body param: body
echo '{"data": [{"itemIdentity": "utN4Hl4F", "itemIdentityType": "ITEM_ID", "platformProductIdMap": {"fX19KKPC": "Ql3Wynuv", "DkSFJs1s": "vkgoEbnO", "9cxpd3hZ": "4e7zOwbI"}}, {"itemIdentity": "8hIrxTr6", "itemIdentityType": "ITEM_SKU", "platformProductIdMap": {"A1HcWxw6": "WTCLtAJG", "JAZzEV6l": "3NeeRGWw", "jWZBn8xA": "zAYYqpPb"}}, {"itemIdentity": "L1lJix1I", "itemIdentityType": "ITEM_ID", "platformProductIdMap": {"cDlzeZ3e": "MiiKPeQp", "1FL3okR6": "eNeDzVme", "gVoa5OQk": "qV4CoSFW"}}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateIAPItemConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 86 'UpdateIAPItemConfig' test.out

#- 87 DeleteIAPItemConfig
$CLI_EXE \
    --sn platform \
    --op DeleteIAPItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 87 'DeleteIAPItemConfig' test.out

#- 88 GetOculusIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetOculusIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 88 'GetOculusIAPConfig' test.out

#- 89 UpdateOculusIAPConfig
# body param: body
echo '{"appId": "2zEKTFfF", "appSecret": "c9jYCm1q"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateOculusIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 89 'UpdateOculusIAPConfig' test.out

#- 90 DeleteOculusIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteOculusIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 90 'DeleteOculusIAPConfig' test.out

#- 91 GetPlayStationIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetPlayStationIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 91 'GetPlayStationIAPConfig' test.out

#- 92 UpdatePlaystationIAPConfig
# body param: body
echo '{"backOfficeServerClientId": "tEZjEotP", "backOfficeServerClientSecret": "wKOza4Vt", "enableStreamJob": true, "environment": "qcn4u2oi", "streamName": "nucsuns5", "streamPartnerName": "dT4ehV8a"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePlaystationIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 92 'UpdatePlaystationIAPConfig' test.out

#- 93 DeletePlaystationIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeletePlaystationIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 93 'DeletePlaystationIAPConfig' test.out

#- 94 ValidateExistedPlaystationIAPConfig
$CLI_EXE \
    --sn platform \
    --op ValidateExistedPlaystationIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 94 'ValidateExistedPlaystationIAPConfig' test.out

#- 95 ValidatePlaystationIAPConfig
# body param: body
echo '{"backOfficeServerClientId": "v4tY5ttl", "backOfficeServerClientSecret": "e27htuLR", "enableStreamJob": false, "environment": "U2IzhUyA", "streamName": "Sfq6W4ui", "streamPartnerName": "yDtigt28"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ValidatePlaystationIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 95 'ValidatePlaystationIAPConfig' test.out

#- 96 GetSteamIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetSteamIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 96 'GetSteamIAPConfig' test.out

#- 97 UpdateSteamIAPConfig
# body param: body
echo '{"appId": "uiwvaMxj", "env": "SANDBOX", "publisherAuthenticationKey": "uAQLyoS5", "syncMode": "TRANSACTION"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateSteamIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 97 'UpdateSteamIAPConfig' test.out

#- 98 DeleteSteamIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteSteamIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 98 'DeleteSteamIAPConfig' test.out

#- 99 GetTwitchIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetTwitchIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 99 'GetTwitchIAPConfig' test.out

#- 100 UpdateTwitchIAPConfig
# body param: body
echo '{"clientId": "XCSvHvfS", "clientSecret": "bkisvN2Q", "organizationId": "b8m8OjJC"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateTwitchIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 100 'UpdateTwitchIAPConfig' test.out

#- 101 DeleteTwitchIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteTwitchIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 101 'DeleteTwitchIAPConfig' test.out

#- 102 GetXblIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetXblIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 102 'GetXblIAPConfig' test.out

#- 103 UpdateXblIAPConfig
# body param: body
echo '{"enableClawback": false, "entraAppClientId": "tgDvbj0i", "entraAppClientSecret": "MblElfuY", "entraTenantId": "EmrjncQk", "relyingPartyCert": "jYO4JMKp"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXblIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 103 'UpdateXblIAPConfig' test.out

#- 104 DeleteXblAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteXblAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 104 'DeleteXblAPConfig' test.out

#- 105 UpdateXblBPCertFile
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UpdateXblBPCertFile \
    --namespace $AB_NAMESPACE \
    --upload file $TEMP_FILE_UPLOAD \
    --password 'LrEg9itm' \
    > test.out 2>&1
eval_tap $? 105 'UpdateXblBPCertFile' test.out

#- 106 QueryThirdPartyNotifications
$CLI_EXE \
    --sn platform \
    --op QueryThirdPartyNotifications \
    --namespace $AB_NAMESPACE \
    --endDate 'ahHzKoAY' \
    --externalId 'vvZ0O30U' \
    --limit '28' \
    --offset '96' \
    --source 'OCULUS' \
    --startDate 'yaMeGyJ8' \
    --status 'PROCESSED' \
    --type 'Z121G1WL' \
    > test.out 2>&1
eval_tap $? 106 'QueryThirdPartyNotifications' test.out

#- 107 QueryAbnormalTransactions
$CLI_EXE \
    --sn platform \
    --op QueryAbnormalTransactions \
    --namespace $AB_NAMESPACE \
    --limit '28' \
    --offset '81' \
    --orderId 'XWFSZrIX' \
    --steamId 'dYW5phCU' \
    > test.out 2>&1
eval_tap $? 107 'QueryAbnormalTransactions' test.out

#- 108 AdminGetSteamJobInfo
$CLI_EXE \
    --sn platform \
    --op AdminGetSteamJobInfo \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 108 'AdminGetSteamJobInfo' test.out

#- 109 AdminResetSteamJobTime
# body param: body
echo '{"env": "LIVE", "lastTime": "1992-04-17T00:00:00Z"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op AdminResetSteamJobTime \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 109 'AdminResetSteamJobTime' test.out

#- 110 AdminRefundIAPOrder
$CLI_EXE \
    --sn platform \
    --op AdminRefundIAPOrder \
    --iapOrderNo 'GrWPgdIP' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 110 'AdminRefundIAPOrder' test.out

#- 111 QuerySteamReportHistories
$CLI_EXE \
    --sn platform \
    --op QuerySteamReportHistories \
    --namespace $AB_NAMESPACE \
    --limit '96' \
    --offset '86' \
    --orderId 'N8B0N5oT' \
    --processStatus 'ERROR' \
    --steamId 'gaA9OJZ6' \
    > test.out 2>&1
eval_tap $? 111 'QuerySteamReportHistories' test.out

#- 112 QueryThirdPartySubscription
$CLI_EXE \
    --sn platform \
    --op QueryThirdPartySubscription \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --groupId '3TgZtBMk' \
    --limit '39' \
    --offset '15' \
    --platform 'PLAYSTATION' \
    --productId '32dqCoEM' \
    --userId '0TS3yV2t' \
    > test.out 2>&1
eval_tap $? 112 'QueryThirdPartySubscription' test.out

#- 113 GetIAPOrderConsumeDetails
$CLI_EXE \
    --sn platform \
    --op GetIAPOrderConsumeDetails \
    --iapOrderNo 'XKBY5HVj' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 113 'GetIAPOrderConsumeDetails' test.out

#- 114 DownloadInvoiceDetails
$CLI_EXE \
    --sn platform \
    --op DownloadInvoiceDetails \
    --namespace $AB_NAMESPACE \
    --endTime 'mdphqr7o' \
    --feature 'I19rQ86t' \
    --itemId '82tH3B66' \
    --itemType 'BUNDLE' \
    --startTime 'RjPqghey' \
    > test.out 2>&1
eval_tap $? 114 'DownloadInvoiceDetails' test.out

#- 115 GenerateInvoiceSummary
$CLI_EXE \
    --sn platform \
    --op GenerateInvoiceSummary \
    --namespace $AB_NAMESPACE \
    --endTime '6Hc7UqEM' \
    --feature 'kBCAIilH' \
    --itemId 'Be1yhf9E' \
    --itemType 'SUBSCRIPTION' \
    --startTime 'kDnZDbqQ' \
    > test.out 2>&1
eval_tap $? 115 'GenerateInvoiceSummary' test.out

#- 116 SyncInGameItem
# body param: body
echo '{"categoryPath": "d1bp6d7B", "targetItemId": "IKKBUvG8", "targetNamespace": "D7hd2RF5"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncInGameItem \
    --namespace $AB_NAMESPACE \
    --storeId '9RISprb9' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 116 'SyncInGameItem' test.out

#- 117 CreateItem
# body param: body
echo '{"appId": "WOfNLT9t", "appType": "DEMO", "baseAppId": "FKttSduI", "boothName": "58iD3rkb", "categoryPath": "bDB55XcH", "clazz": "F2arKULb", "displayOrder": 41, "entitlementType": "CONSUMABLE", "ext": {"J7PkaXTd": {}, "x06P4JrL": {}, "9KG1nsAM": {}}, "features": ["yk16hSFu", "66jItWnL", "yJS8Ajpt"], "flexible": true, "images": [{"as": "9stcx27z", "caption": "9A0V4Z3E", "height": 6, "imageUrl": "t4P355IY", "smallImageUrl": "qIH0P8Ir", "width": 22}, {"as": "9WpILyoH", "caption": "1FPYwJzT", "height": 90, "imageUrl": "y994KjpV", "smallImageUrl": "fGh1rOrb", "width": 66}, {"as": "TA0Pi7tk", "caption": "j6PrtSrb", "height": 93, "imageUrl": "ffHSxzys", "smallImageUrl": "JkBEemwM", "width": 19}], "inventoryConfig": {"customAttributes": {"r0UFHszJ": {}, "HgvuhOEj": {}, "OaWH1MVv": {}}, "serverCustomAttributes": {"mx9DTNiD": {}, "wblyGYIj": {}, "4IEb82E1": {}}, "slotUsed": 22}, "itemIds": ["oU6trSmb", "idsnr1Cc", "P049Znez"], "itemQty": {"KWfq0W57": 6, "YrXB5HfL": 76, "kDem9b31": 23}, "itemType": "INGAMEITEM", "listable": true, "localizations": {"NySGz4PG": {"description": "Ehj7uao7", "localExt": {"Em7gEmPJ": {}, "XE4al1Aa": {}, "l31lySZI": {}}, "longDescription": "kw0ytFHU", "title": "m3bwI302"}, "tGGvTghO": {"description": "QWaNge1U", "localExt": {"S273Y98S": {}, "O3HX5DC0": {}, "SK3tosu4": {}}, "longDescription": "hPaKOZlP", "title": "Jshpn4R7"}, "DTSmNHlO": {"description": "owamJZrI", "localExt": {"dz34Bdgu": {}, "rWuAYdLg": {}, "6zjn35cs": {}}, "longDescription": "iOHkp1iU", "title": "ItEwftdy"}}, "lootBoxConfig": {"rewardCount": 0, "rewards": [{"lootBoxItems": [{"count": 50, "duration": 62, "endDate": "1976-08-13T00:00:00Z", "itemId": "NxCffwgT", "itemSku": "an6WAKOa", "itemType": "J0b9LzMw"}, {"count": 83, "duration": 40, "endDate": "1977-07-26T00:00:00Z", "itemId": "nCcbvqnG", "itemSku": "qPCkImFT", "itemType": "B8ALM4x9"}, {"count": 71, "duration": 22, "endDate": "1994-11-29T00:00:00Z", "itemId": "chY7Yja6", "itemSku": "QmY5gpJk", "itemType": "Vqsfev3e"}], "name": "C6LXZ0YV", "odds": 0.8015114555268118, "type": "PROBABILITY_GROUP", "weight": 4}, {"lootBoxItems": [{"count": 16, "duration": 81, "endDate": "1973-05-16T00:00:00Z", "itemId": "7KowANyP", "itemSku": "Irm9IbJh", "itemType": "9DncsJLt"}, {"count": 9, "duration": 22, "endDate": "1978-08-31T00:00:00Z", "itemId": "bz8Xcrkt", "itemSku": "iofV0USn", "itemType": "ATQAmnPx"}, {"count": 51, "duration": 32, "endDate": "1985-04-16T00:00:00Z", "itemId": "gQxhIPsP", "itemSku": "KdEUTInk", "itemType": "jNQnxVKf"}], "name": "YMwzt1Op", "odds": 0.7698971420941018, "type": "PROBABILITY_GROUP", "weight": 86}, {"lootBoxItems": [{"count": 79, "duration": 67, "endDate": "1975-05-23T00:00:00Z", "itemId": "3b7UuHX9", "itemSku": "IEjpMZhX", "itemType": "sUcapzWH"}, {"count": 92, "duration": 97, "endDate": "1983-12-18T00:00:00Z", "itemId": "zfifmSXx", "itemSku": "bbp0pj8V", "itemType": "2jQsGaF0"}, {"count": 60, "duration": 24, "endDate": "1994-10-11T00:00:00Z", "itemId": "kwkcItCe", "itemSku": "Q90UQyC9", "itemType": "0tU92vX6"}], "name": "rCnMJGqZ", "odds": 0.6833957729765803, "type": "REWARD", "weight": 42}], "rollFunction": "DEFAULT"}, "maxCount": 92, "maxCountPerUser": 58, "name": "bUHPRFmT", "optionBoxConfig": {"boxItems": [{"count": 46, "duration": 56, "endDate": "1981-11-19T00:00:00Z", "itemId": "pm99aGx9", "itemSku": "MahBZkPI", "itemType": "WdQ9gdcU"}, {"count": 41, "duration": 12, "endDate": "1977-10-18T00:00:00Z", "itemId": "C6yvCS1z", "itemSku": "fsRYPfCb", "itemType": "oRS4c7Gd"}, {"count": 58, "duration": 62, "endDate": "1989-10-02T00:00:00Z", "itemId": "CoFbo1zY", "itemSku": "eOdUfg4o", "itemType": "F9C7wJY1"}]}, "purchasable": false, "recurring": {"cycle": "YEARLY", "fixedFreeDays": 86, "fixedTrialCycles": 15, "graceDays": 78}, "regionData": {"VPOPkg2A": [{"currencyCode": "cBihGpZs", "currencyNamespace": "Uf1kdRAp", "currencyType": "VIRTUAL", "discountAmount": 12, "discountExpireAt": "1993-06-09T00:00:00Z", "discountPercentage": 55, "discountPurchaseAt": "1994-05-09T00:00:00Z", "expireAt": "1974-10-26T00:00:00Z", "price": 52, "purchaseAt": "1988-08-27T00:00:00Z", "trialPrice": 66}, {"currencyCode": "eAcS1K2g", "currencyNamespace": "gOFGvESy", "currencyType": "REAL", "discountAmount": 72, "discountExpireAt": "1990-01-20T00:00:00Z", "discountPercentage": 59, "discountPurchaseAt": "1973-05-26T00:00:00Z", "expireAt": "1977-10-21T00:00:00Z", "price": 76, "purchaseAt": "1985-12-07T00:00:00Z", "trialPrice": 22}, {"currencyCode": "IlRFOEzQ", "currencyNamespace": "cNut0IPQ", "currencyType": "REAL", "discountAmount": 33, "discountExpireAt": "1992-10-12T00:00:00Z", "discountPercentage": 74, "discountPurchaseAt": "1987-09-12T00:00:00Z", "expireAt": "1983-12-02T00:00:00Z", "price": 52, "purchaseAt": "1979-04-25T00:00:00Z", "trialPrice": 56}], "u8dgCnat": [{"currencyCode": "HTgbmbwZ", "currencyNamespace": "l2iHd76d", "currencyType": "REAL", "discountAmount": 59, "discountExpireAt": "1989-09-03T00:00:00Z", "discountPercentage": 9, "discountPurchaseAt": "1983-09-13T00:00:00Z", "expireAt": "1981-08-25T00:00:00Z", "price": 3, "purchaseAt": "1994-03-31T00:00:00Z", "trialPrice": 85}, {"currencyCode": "AAzNHYmS", "currencyNamespace": "pipkLwBO", "currencyType": "VIRTUAL", "discountAmount": 74, "discountExpireAt": "1978-04-08T00:00:00Z", "discountPercentage": 94, "discountPurchaseAt": "1995-08-12T00:00:00Z", "expireAt": "1979-07-03T00:00:00Z", "price": 10, "purchaseAt": "1975-04-09T00:00:00Z", "trialPrice": 47}, {"currencyCode": "tbAAtK2v", "currencyNamespace": "G9mA7MXF", "currencyType": "VIRTUAL", "discountAmount": 83, "discountExpireAt": "1977-11-18T00:00:00Z", "discountPercentage": 8, "discountPurchaseAt": "1979-07-15T00:00:00Z", "expireAt": "1971-07-08T00:00:00Z", "price": 77, "purchaseAt": "1998-04-18T00:00:00Z", "trialPrice": 32}], "DM5TaVgP": [{"currencyCode": "f3wWUE40", "currencyNamespace": "kwRHI6Bf", "currencyType": "VIRTUAL", "discountAmount": 9, "discountExpireAt": "1981-01-19T00:00:00Z", "discountPercentage": 48, "discountPurchaseAt": "1973-12-28T00:00:00Z", "expireAt": "1971-11-11T00:00:00Z", "price": 17, "purchaseAt": "1986-02-21T00:00:00Z", "trialPrice": 7}, {"currencyCode": "V0HIbzYv", "currencyNamespace": "Q699Sumi", "currencyType": "REAL", "discountAmount": 12, "discountExpireAt": "1988-08-14T00:00:00Z", "discountPercentage": 98, "discountPurchaseAt": "1973-05-10T00:00:00Z", "expireAt": "1997-05-09T00:00:00Z", "price": 83, "purchaseAt": "1999-06-29T00:00:00Z", "trialPrice": 55}, {"currencyCode": "Tv9yKpzK", "currencyNamespace": "SXh6NyMe", "currencyType": "VIRTUAL", "discountAmount": 59, "discountExpireAt": "1971-09-22T00:00:00Z", "discountPercentage": 7, "discountPurchaseAt": "1978-04-14T00:00:00Z", "expireAt": "1991-05-24T00:00:00Z", "price": 82, "purchaseAt": "1994-06-28T00:00:00Z", "trialPrice": 89}]}, "saleConfig": {"currencyCode": "32aD0Z2L", "price": 63}, "seasonType": "TIER", "sectionExclusive": true, "sellable": true, "sku": "gthVcywn", "stackable": true, "status": "ACTIVE", "tags": ["FS0oPpCa", "R77qloUo", "Ivoj3cTH"], "targetCurrencyCode": "TwVvnhDG", "targetNamespace": "iw67hMxF", "thumbnailUrl": "0l0zxnUL", "useCount": 3}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateItem \
    --namespace $AB_NAMESPACE \
    --storeId '5CpySAre' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 117 'CreateItem' test.out

#- 118 GetItemByAppId
$CLI_EXE \
    --sn platform \
    --op GetItemByAppId \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --storeId 'otFkltfY' \
    --appId 'hsODro8S' \
    > test.out 2>&1
eval_tap $? 118 'GetItemByAppId' test.out

#- 119 QueryItems
$CLI_EXE \
    --sn platform \
    --op QueryItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --appType 'SOFTWARE' \
    --availableDate '3LlFy7NN' \
    --baseAppId 'HwFdKpax' \
    --categoryPath '7MpZrKAv' \
    --features 'q1Lmi6sR' \
    --includeSubCategoryItem 'true' \
    --itemType 'SUBSCRIPTION' \
    --limit '94' \
    --offset '16' \
    --region '3qHWVgnd' \
    --sortBy '["createdAt", "updatedAt:asc", "name:desc"]' \
    --storeId 'FJc5nGVm' \
    --tags 'mmNANe8J' \
    --targetNamespace 'Lyt09uC1' \
    > test.out 2>&1
eval_tap $? 119 'QueryItems' test.out

#- 120 ListBasicItemsByFeatures
$CLI_EXE \
    --sn platform \
    --op ListBasicItemsByFeatures \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --features '["LHC6JdTi", "UQ1XqZzh", "P9WM1N3N"]' \
    > test.out 2>&1
eval_tap $? 120 'ListBasicItemsByFeatures' test.out

#- 121 GetItems
$CLI_EXE \
    --sn platform \
    --op GetItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --storeId 'ZEHUPfjr' \
    --itemIds 'iiO7rveh' \
    > test.out 2>&1
eval_tap $? 121 'GetItems' test.out

#- 122 GetItemBySku
$CLI_EXE \
    --sn platform \
    --op GetItemBySku \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --storeId 'QlbwyMQW' \
    --sku '3AjIPHcl' \
    > test.out 2>&1
eval_tap $? 122 'GetItemBySku' test.out

#- 123 GetLocaleItemBySku
$CLI_EXE \
    --sn platform \
    --op GetLocaleItemBySku \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --language 'OtJ35Eeo' \
    --populateBundle 'true' \
    --region 'HgzWdLzL' \
    --storeId 'pbRzPVTi' \
    --sku 'yWy9PnX6' \
    > test.out 2>&1
eval_tap $? 123 'GetLocaleItemBySku' test.out

#- 124 GetEstimatedPrice
$CLI_EXE \
    --sn platform \
    --op GetEstimatedPrice \
    --namespace $AB_NAMESPACE \
    --platform '17t4uAiM' \
    --region 'dknCjxzf' \
    --storeId 'uTYWvHdw' \
    --itemIds 'yA9R03M4' \
    --userId 'CUx627ff' \
    > test.out 2>&1
eval_tap $? 124 'GetEstimatedPrice' test.out

#- 125 GetItemIdBySku
$CLI_EXE \
    --sn platform \
    --op GetItemIdBySku \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --storeId 'osySlfav' \
    --sku 'LKv8UyDq' \
    > test.out 2>&1
eval_tap $? 125 'GetItemIdBySku' test.out

#- 126 GetBulkItemIdBySkus
$CLI_EXE \
    --sn platform \
    --op GetBulkItemIdBySkus \
    --namespace $AB_NAMESPACE \
    --sku '["4TXbi1TP", "Tg6ONo8u", "J8RRE1pc"]' \
    --storeId 'cs99ilBE' \
    > test.out 2>&1
eval_tap $? 126 'GetBulkItemIdBySkus' test.out

#- 127 BulkGetLocaleItems
$CLI_EXE \
    --sn platform \
    --op BulkGetLocaleItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --language 'gz3TFXAf' \
    --region 'Z4Bos0gt' \
    --storeId '09TJcaHY' \
    --itemIds 'o1LtS2Eh' \
    > test.out 2>&1
eval_tap $? 127 'BulkGetLocaleItems' test.out

#- 128 GetAvailablePredicateTypes
$CLI_EXE \
    --sn platform \
    --op GetAvailablePredicateTypes \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 128 'GetAvailablePredicateTypes' test.out

#- 129 ValidateItemPurchaseCondition
# body param: body
echo '{"itemIds": ["cTEleVDl", "wlAEzX8g", "gGJlI6v8"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ValidateItemPurchaseCondition \
    --namespace $AB_NAMESPACE \
    --platform 'XveJG4lp' \
    --userId 'Fde7czLD' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 129 'ValidateItemPurchaseCondition' test.out

#- 130 BulkUpdateRegionData
# body param: body
echo '{"changes": [{"itemIdentities": ["Yu66Nk2f", "uiQCh8dy", "mEnNdTXx"], "itemIdentityType": "ITEM_SKU", "regionData": {"m97y6r5F": [{"currencyCode": "iRNIxHPp", "currencyNamespace": "0BJeMmBQ", "currencyType": "VIRTUAL", "discountAmount": 92, "discountExpireAt": "1985-09-12T00:00:00Z", "discountPercentage": 44, "discountPurchaseAt": "1984-01-30T00:00:00Z", "discountedPrice": 4, "expireAt": "1993-02-11T00:00:00Z", "price": 17, "purchaseAt": "1987-02-01T00:00:00Z", "trialPrice": 92}, {"currencyCode": "zUpX6iOe", "currencyNamespace": "qHpq5R0c", "currencyType": "REAL", "discountAmount": 47, "discountExpireAt": "1985-03-06T00:00:00Z", "discountPercentage": 23, "discountPurchaseAt": "1997-01-20T00:00:00Z", "discountedPrice": 30, "expireAt": "1982-01-20T00:00:00Z", "price": 27, "purchaseAt": "1977-09-23T00:00:00Z", "trialPrice": 22}, {"currencyCode": "tl0VLP3K", "currencyNamespace": "EhEzuUct", "currencyType": "REAL", "discountAmount": 15, "discountExpireAt": "1975-08-11T00:00:00Z", "discountPercentage": 58, "discountPurchaseAt": "1987-06-15T00:00:00Z", "discountedPrice": 73, "expireAt": "1998-08-07T00:00:00Z", "price": 90, "purchaseAt": "1979-01-29T00:00:00Z", "trialPrice": 45}], "DgZ7Cx1a": [{"currencyCode": "Y90N8EUz", "currencyNamespace": "AzJ6h8Wn", "currencyType": "REAL", "discountAmount": 75, "discountExpireAt": "1976-02-26T00:00:00Z", "discountPercentage": 38, "discountPurchaseAt": "1995-05-16T00:00:00Z", "discountedPrice": 26, "expireAt": "1989-02-26T00:00:00Z", "price": 19, "purchaseAt": "1990-12-08T00:00:00Z", "trialPrice": 34}, {"currencyCode": "pCnoHOWd", "currencyNamespace": "bgOyPP8b", "currencyType": "VIRTUAL", "discountAmount": 38, "discountExpireAt": "1984-05-26T00:00:00Z", "discountPercentage": 96, "discountPurchaseAt": "1982-10-29T00:00:00Z", "discountedPrice": 94, "expireAt": "1973-03-16T00:00:00Z", "price": 76, "purchaseAt": "1982-09-01T00:00:00Z", "trialPrice": 77}, {"currencyCode": "C3UNG7Gi", "currencyNamespace": "WaYqtpke", "currencyType": "VIRTUAL", "discountAmount": 17, "discountExpireAt": "1999-10-05T00:00:00Z", "discountPercentage": 52, "discountPurchaseAt": "1985-08-05T00:00:00Z", "discountedPrice": 81, "expireAt": "1997-01-08T00:00:00Z", "price": 41, "purchaseAt": "1994-04-30T00:00:00Z", "trialPrice": 99}], "BQushUly": [{"currencyCode": "JNb2xTha", "currencyNamespace": "uFM4RH9A", "currencyType": "REAL", "discountAmount": 33, "discountExpireAt": "1989-06-04T00:00:00Z", "discountPercentage": 29, "discountPurchaseAt": "1982-08-24T00:00:00Z", "discountedPrice": 12, "expireAt": "1995-08-01T00:00:00Z", "price": 10, "purchaseAt": "1992-03-30T00:00:00Z", "trialPrice": 63}, {"currencyCode": "36T8Pb9N", "currencyNamespace": "dvuKGmg1", "currencyType": "VIRTUAL", "discountAmount": 100, "discountExpireAt": "1986-06-06T00:00:00Z", "discountPercentage": 9, "discountPurchaseAt": "1989-01-11T00:00:00Z", "discountedPrice": 2, "expireAt": "1992-06-17T00:00:00Z", "price": 12, "purchaseAt": "1992-12-11T00:00:00Z", "trialPrice": 19}, {"currencyCode": "v6tZHbRm", "currencyNamespace": "FyPfGdMJ", "currencyType": "VIRTUAL", "discountAmount": 69, "discountExpireAt": "1993-05-13T00:00:00Z", "discountPercentage": 63, "discountPurchaseAt": "1986-06-06T00:00:00Z", "discountedPrice": 2, "expireAt": "1997-01-05T00:00:00Z", "price": 74, "purchaseAt": "1993-10-13T00:00:00Z", "trialPrice": 78}]}}, {"itemIdentities": ["tjia93dR", "H2kkTUri", "CyzaIPPr"], "itemIdentityType": "ITEM_ID", "regionData": {"EG1K0m3G": [{"currencyCode": "EFIou4WE", "currencyNamespace": "yx5PDRRL", "currencyType": "REAL", "discountAmount": 4, "discountExpireAt": "1971-08-04T00:00:00Z", "discountPercentage": 40, "discountPurchaseAt": "1984-07-06T00:00:00Z", "discountedPrice": 3, "expireAt": "1984-05-19T00:00:00Z", "price": 68, "purchaseAt": "1995-02-16T00:00:00Z", "trialPrice": 40}, {"currencyCode": "hgn6XwMw", "currencyNamespace": "jblcVKXR", "currencyType": "VIRTUAL", "discountAmount": 30, "discountExpireAt": "1976-10-05T00:00:00Z", "discountPercentage": 58, "discountPurchaseAt": "1985-09-21T00:00:00Z", "discountedPrice": 13, "expireAt": "1998-11-13T00:00:00Z", "price": 68, "purchaseAt": "1990-11-24T00:00:00Z", "trialPrice": 76}, {"currencyCode": "luqKTCjJ", "currencyNamespace": "hc3RwlCG", "currencyType": "VIRTUAL", "discountAmount": 66, "discountExpireAt": "1996-07-14T00:00:00Z", "discountPercentage": 99, "discountPurchaseAt": "1994-05-29T00:00:00Z", "discountedPrice": 46, "expireAt": "1972-01-10T00:00:00Z", "price": 97, "purchaseAt": "1976-10-19T00:00:00Z", "trialPrice": 24}], "vbXy2Emj": [{"currencyCode": "d2wg00gy", "currencyNamespace": "0NaNZOKn", "currencyType": "REAL", "discountAmount": 25, "discountExpireAt": "1994-08-05T00:00:00Z", "discountPercentage": 41, "discountPurchaseAt": "1993-10-15T00:00:00Z", "discountedPrice": 23, "expireAt": "1983-03-28T00:00:00Z", "price": 80, "purchaseAt": "1985-06-13T00:00:00Z", "trialPrice": 87}, {"currencyCode": "6s8efewv", "currencyNamespace": "5qFe4A2D", "currencyType": "REAL", "discountAmount": 62, "discountExpireAt": "1979-03-11T00:00:00Z", "discountPercentage": 96, "discountPurchaseAt": "1996-07-20T00:00:00Z", "discountedPrice": 15, "expireAt": "1975-12-19T00:00:00Z", "price": 25, "purchaseAt": "1986-02-02T00:00:00Z", "trialPrice": 39}, {"currencyCode": "cLk2cD5H", "currencyNamespace": "OxmAoTfI", "currencyType": "REAL", "discountAmount": 11, "discountExpireAt": "1990-10-11T00:00:00Z", "discountPercentage": 87, "discountPurchaseAt": "1992-06-24T00:00:00Z", "discountedPrice": 34, "expireAt": "1971-03-31T00:00:00Z", "price": 37, "purchaseAt": "1974-12-30T00:00:00Z", "trialPrice": 70}], "RfWnQEtz": [{"currencyCode": "7T7DfoHd", "currencyNamespace": "FT1geMLU", "currencyType": "REAL", "discountAmount": 85, "discountExpireAt": "1996-01-17T00:00:00Z", "discountPercentage": 48, "discountPurchaseAt": "1985-01-05T00:00:00Z", "discountedPrice": 44, "expireAt": "1986-02-04T00:00:00Z", "price": 76, "purchaseAt": "1977-02-23T00:00:00Z", "trialPrice": 78}, {"currencyCode": "Xl77SaCb", "currencyNamespace": "s5vwStVg", "currencyType": "VIRTUAL", "discountAmount": 34, "discountExpireAt": "1995-01-30T00:00:00Z", "discountPercentage": 99, "discountPurchaseAt": "1997-03-13T00:00:00Z", "discountedPrice": 13, "expireAt": "1981-11-15T00:00:00Z", "price": 37, "purchaseAt": "1992-04-05T00:00:00Z", "trialPrice": 83}, {"currencyCode": "uex8my5g", "currencyNamespace": "pEmUhBby", "currencyType": "REAL", "discountAmount": 84, "discountExpireAt": "1995-11-12T00:00:00Z", "discountPercentage": 15, "discountPurchaseAt": "1989-02-20T00:00:00Z", "discountedPrice": 62, "expireAt": "1980-07-29T00:00:00Z", "price": 73, "purchaseAt": "1980-03-13T00:00:00Z", "trialPrice": 65}]}}, {"itemIdentities": ["1rcikiyg", "J4vNoEZc", "KEz1MKlL"], "itemIdentityType": "ITEM_SKU", "regionData": {"WrSZSNcr": [{"currencyCode": "pfRhnJnB", "currencyNamespace": "POYzu7Ks", "currencyType": "REAL", "discountAmount": 66, "discountExpireAt": "1978-04-11T00:00:00Z", "discountPercentage": 26, "discountPurchaseAt": "1973-09-21T00:00:00Z", "discountedPrice": 37, "expireAt": "1998-05-09T00:00:00Z", "price": 70, "purchaseAt": "1993-09-02T00:00:00Z", "trialPrice": 47}, {"currencyCode": "mJY8aLaX", "currencyNamespace": "ngmV2dAW", "currencyType": "REAL", "discountAmount": 48, "discountExpireAt": "1971-01-11T00:00:00Z", "discountPercentage": 55, "discountPurchaseAt": "1980-11-26T00:00:00Z", "discountedPrice": 55, "expireAt": "1982-08-13T00:00:00Z", "price": 88, "purchaseAt": "1988-07-06T00:00:00Z", "trialPrice": 24}, {"currencyCode": "ua7iJZUr", "currencyNamespace": "rqgYgWuI", "currencyType": "REAL", "discountAmount": 43, "discountExpireAt": "1994-02-20T00:00:00Z", "discountPercentage": 54, "discountPurchaseAt": "1972-12-28T00:00:00Z", "discountedPrice": 32, "expireAt": "1988-03-01T00:00:00Z", "price": 17, "purchaseAt": "1993-07-14T00:00:00Z", "trialPrice": 46}], "RQfeI456": [{"currencyCode": "j3qwwRcf", "currencyNamespace": "5NHj3L2W", "currencyType": "REAL", "discountAmount": 30, "discountExpireAt": "1993-11-25T00:00:00Z", "discountPercentage": 28, "discountPurchaseAt": "1979-03-29T00:00:00Z", "discountedPrice": 83, "expireAt": "1994-09-04T00:00:00Z", "price": 93, "purchaseAt": "1975-12-04T00:00:00Z", "trialPrice": 3}, {"currencyCode": "8KAKcSUo", "currencyNamespace": "05jkceeG", "currencyType": "REAL", "discountAmount": 19, "discountExpireAt": "1979-01-03T00:00:00Z", "discountPercentage": 27, "discountPurchaseAt": "1990-11-02T00:00:00Z", "discountedPrice": 88, "expireAt": "1995-12-07T00:00:00Z", "price": 14, "purchaseAt": "1994-04-29T00:00:00Z", "trialPrice": 43}, {"currencyCode": "Dtwx7Cfu", "currencyNamespace": "F2CkSdRd", "currencyType": "VIRTUAL", "discountAmount": 98, "discountExpireAt": "1971-01-19T00:00:00Z", "discountPercentage": 70, "discountPurchaseAt": "1978-10-13T00:00:00Z", "discountedPrice": 16, "expireAt": "1975-02-06T00:00:00Z", "price": 85, "purchaseAt": "1989-01-06T00:00:00Z", "trialPrice": 99}], "t9vT2oiK": [{"currencyCode": "cgr65K99", "currencyNamespace": "Td7DRtS4", "currencyType": "VIRTUAL", "discountAmount": 51, "discountExpireAt": "1990-12-03T00:00:00Z", "discountPercentage": 10, "discountPurchaseAt": "1981-03-25T00:00:00Z", "discountedPrice": 88, "expireAt": "1993-12-08T00:00:00Z", "price": 10, "purchaseAt": "1992-01-28T00:00:00Z", "trialPrice": 36}, {"currencyCode": "KWZTJnmx", "currencyNamespace": "e8EUad7S", "currencyType": "REAL", "discountAmount": 96, "discountExpireAt": "1986-07-07T00:00:00Z", "discountPercentage": 51, "discountPurchaseAt": "1973-06-27T00:00:00Z", "discountedPrice": 62, "expireAt": "1979-09-13T00:00:00Z", "price": 63, "purchaseAt": "1991-07-10T00:00:00Z", "trialPrice": 48}, {"currencyCode": "XWyJw7rp", "currencyNamespace": "ULoXAO0H", "currencyType": "VIRTUAL", "discountAmount": 14, "discountExpireAt": "1995-06-05T00:00:00Z", "discountPercentage": 80, "discountPurchaseAt": "1995-06-27T00:00:00Z", "discountedPrice": 24, "expireAt": "1987-08-15T00:00:00Z", "price": 28, "purchaseAt": "1990-01-18T00:00:00Z", "trialPrice": 46}]}}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op BulkUpdateRegionData \
    --namespace $AB_NAMESPACE \
    --storeId 'vqGngH49' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 130 'BulkUpdateRegionData' test.out

#- 131 SearchItems
$CLI_EXE \
    --sn platform \
    --op SearchItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --itemType 'LOOTBOX' \
    --limit '84' \
    --offset '25' \
    --sortBy 'doyeJboY' \
    --storeId 'LGsPK1fo' \
    --keyword 'SAjYMlQ3' \
    --language 'IkIU82kp' \
    > test.out 2>&1
eval_tap $? 131 'SearchItems' test.out

#- 132 QueryUncategorizedItems
$CLI_EXE \
    --sn platform \
    --op QueryUncategorizedItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --limit '11' \
    --offset '84' \
    --sortBy '["displayOrder:desc", "updatedAt", "updatedAt:asc"]' \
    --storeId '38wuvjVB' \
    > test.out 2>&1
eval_tap $? 132 'QueryUncategorizedItems' test.out

#- 133 GetItem
$CLI_EXE \
    --sn platform \
    --op GetItem \
    --itemId 'QfeiXoQL' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --storeId '7Ei0g9Oo' \
    > test.out 2>&1
eval_tap $? 133 'GetItem' test.out

#- 134 UpdateItem
# body param: body
echo '{"appId": "OF2P6s0N", "appType": "DLC", "baseAppId": "GfKegyLy", "boothName": "RosbScaU", "categoryPath": "OUxvpAXc", "clazz": "HLoF4MT7", "displayOrder": 96, "entitlementType": "CONSUMABLE", "ext": {"sb0cofQa": {}, "JrOnSVb5": {}, "oxrhzX2Z": {}}, "features": ["w8A1YTv5", "Vc6gd9Bw", "gqZ7pHXB"], "flexible": false, "images": [{"as": "o6qkkhRZ", "caption": "7im8QUmE", "height": 52, "imageUrl": "2PYO1JW8", "smallImageUrl": "yfnAK0j2", "width": 0}, {"as": "0V4raxxa", "caption": "Ksn0MyOr", "height": 49, "imageUrl": "Ou59qb4B", "smallImageUrl": "bucBHMnh", "width": 73}, {"as": "lPac8Gcp", "caption": "hZTnIHRP", "height": 57, "imageUrl": "NPSfEAxZ", "smallImageUrl": "z2NBHML3", "width": 63}], "inventoryConfig": {"customAttributes": {"4z0hQhoR": {}, "n32x1s4I": {}, "iEdzjHUl": {}}, "serverCustomAttributes": {"tUVa6tt3": {}, "QjrNtOXk": {}, "EAI6NgX1": {}}, "slotUsed": 27}, "itemIds": ["hjL8403a", "zA9mZXVg", "izHMJuaN"], "itemQty": {"YZ1oUswX": 58, "FahZH859": 98, "sygkBglG": 82}, "itemType": "APP", "listable": true, "localizations": {"FGVhyZTr": {"description": "C2scqBIz", "localExt": {"hNf2v90C": {}, "LcMXgqjN": {}, "BA1LmGQH": {}}, "longDescription": "WJUWa1rc", "title": "lT2PADBx"}, "vMd3w5F0": {"description": "FsGGpokb", "localExt": {"6pcRIT3Y": {}, "uNsSWJaP": {}, "25z22zGX": {}}, "longDescription": "0GfCGSV4", "title": "MFJ0rBAn"}, "0p8VjDff": {"description": "5Xpv0lwm", "localExt": {"Dcs8srs5": {}, "JTqWIMS0": {}, "J9kpwgWx": {}}, "longDescription": "v6yaATMK", "title": "eaFDd5st"}}, "lootBoxConfig": {"rewardCount": 96, "rewards": [{"lootBoxItems": [{"count": 36, "duration": 97, "endDate": "1995-01-08T00:00:00Z", "itemId": "jNs9Scpn", "itemSku": "xMG1jXfF", "itemType": "V5yBaHZ0"}, {"count": 77, "duration": 3, "endDate": "1984-04-24T00:00:00Z", "itemId": "siLKmvHJ", "itemSku": "kEh0JUYt", "itemType": "qCpnCyZu"}, {"count": 88, "duration": 16, "endDate": "1990-09-11T00:00:00Z", "itemId": "xKaNd34F", "itemSku": "zW9KaYFG", "itemType": "V5bBLIOq"}], "name": "8ZHb9AMS", "odds": 0.28826866610187774, "type": "REWARD", "weight": 10}, {"lootBoxItems": [{"count": 29, "duration": 44, "endDate": "1992-12-19T00:00:00Z", "itemId": "kZOBN35h", "itemSku": "qGTgfFwq", "itemType": "yuWRKe7Y"}, {"count": 62, "duration": 30, "endDate": "1977-10-31T00:00:00Z", "itemId": "0K1WncqJ", "itemSku": "xxnCJtwb", "itemType": "8XyTsJhD"}, {"count": 26, "duration": 49, "endDate": "1975-04-26T00:00:00Z", "itemId": "rwahQNkQ", "itemSku": "OjWMSZF5", "itemType": "fIPAI3gW"}], "name": "eoJxc26D", "odds": 0.2608879372869931, "type": "REWARD", "weight": 48}, {"lootBoxItems": [{"count": 68, "duration": 90, "endDate": "1992-04-14T00:00:00Z", "itemId": "gIDRRnxY", "itemSku": "hb0SP8gJ", "itemType": "ubAVeYyq"}, {"count": 8, "duration": 61, "endDate": "1993-03-11T00:00:00Z", "itemId": "Lvj8DReV", "itemSku": "y8x7UGCS", "itemType": "TdLX0O9a"}, {"count": 41, "duration": 97, "endDate": "1974-08-31T00:00:00Z", "itemId": "EnSN36Fh", "itemSku": "DcAkjqCi", "itemType": "h25P8dSl"}], "name": "AIlZ6nr8", "odds": 0.500303002394147, "type": "PROBABILITY_GROUP", "weight": 66}], "rollFunction": "CUSTOM"}, "maxCount": 62, "maxCountPerUser": 17, "name": "P6oNRjHm", "optionBoxConfig": {"boxItems": [{"count": 59, "duration": 57, "endDate": "1975-08-01T00:00:00Z", "itemId": "uyLU9Su5", "itemSku": "Uzp8hGYK", "itemType": "c5jcUQrE"}, {"count": 71, "duration": 14, "endDate": "1996-01-05T00:00:00Z", "itemId": "4XOAChbX", "itemSku": "HMzSp7Qc", "itemType": "W5FBbwye"}, {"count": 81, "duration": 70, "endDate": "1993-09-23T00:00:00Z", "itemId": "6n0UZ2jJ", "itemSku": "9KiScbHv", "itemType": "4h7mvvtK"}]}, "purchasable": true, "recurring": {"cycle": "YEARLY", "fixedFreeDays": 15, "fixedTrialCycles": 50, "graceDays": 52}, "regionData": {"KLXurhwN": [{"currencyCode": "6BePRkZq", "currencyNamespace": "14kcvh2R", "currencyType": "VIRTUAL", "discountAmount": 64, "discountExpireAt": "1992-07-10T00:00:00Z", "discountPercentage": 49, "discountPurchaseAt": "1979-07-26T00:00:00Z", "expireAt": "1993-01-08T00:00:00Z", "price": 33, "purchaseAt": "1985-03-17T00:00:00Z", "trialPrice": 49}, {"currencyCode": "RJ0Yxdul", "currencyNamespace": "bAxFU2Fl", "currencyType": "REAL", "discountAmount": 49, "discountExpireAt": "1994-02-02T00:00:00Z", "discountPercentage": 42, "discountPurchaseAt": "1983-03-05T00:00:00Z", "expireAt": "1984-12-27T00:00:00Z", "price": 39, "purchaseAt": "1974-03-25T00:00:00Z", "trialPrice": 50}, {"currencyCode": "L1cd692u", "currencyNamespace": "9l2XRq35", "currencyType": "REAL", "discountAmount": 4, "discountExpireAt": "1998-02-17T00:00:00Z", "discountPercentage": 77, "discountPurchaseAt": "1979-12-06T00:00:00Z", "expireAt": "1972-07-07T00:00:00Z", "price": 90, "purchaseAt": "1996-12-04T00:00:00Z", "trialPrice": 97}], "e6qA3wcY": [{"currencyCode": "bw1ZlW44", "currencyNamespace": "Hs7Jdlto", "currencyType": "VIRTUAL", "discountAmount": 1, "discountExpireAt": "1984-01-23T00:00:00Z", "discountPercentage": 64, "discountPurchaseAt": "1973-08-14T00:00:00Z", "expireAt": "1971-10-09T00:00:00Z", "price": 46, "purchaseAt": "1995-07-21T00:00:00Z", "trialPrice": 20}, {"currencyCode": "ocqmOTyX", "currencyNamespace": "FnHv7etB", "currencyType": "REAL", "discountAmount": 22, "discountExpireAt": "1998-08-11T00:00:00Z", "discountPercentage": 57, "discountPurchaseAt": "1996-03-13T00:00:00Z", "expireAt": "1981-05-17T00:00:00Z", "price": 76, "purchaseAt": "1971-04-09T00:00:00Z", "trialPrice": 64}, {"currencyCode": "rqx6C9iK", "currencyNamespace": "hnu8FIOX", "currencyType": "VIRTUAL", "discountAmount": 66, "discountExpireAt": "1986-10-27T00:00:00Z", "discountPercentage": 90, "discountPurchaseAt": "1983-10-26T00:00:00Z", "expireAt": "1972-11-09T00:00:00Z", "price": 56, "purchaseAt": "1976-01-14T00:00:00Z", "trialPrice": 16}], "xRRQrXDV": [{"currencyCode": "DnwtMX84", "currencyNamespace": "kwXpkCUB", "currencyType": "REAL", "discountAmount": 9, "discountExpireAt": "1995-03-02T00:00:00Z", "discountPercentage": 73, "discountPurchaseAt": "1995-08-26T00:00:00Z", "expireAt": "1991-08-13T00:00:00Z", "price": 73, "purchaseAt": "1998-10-06T00:00:00Z", "trialPrice": 91}, {"currencyCode": "twExDEid", "currencyNamespace": "FjwCUSLM", "currencyType": "REAL", "discountAmount": 63, "discountExpireAt": "1997-08-14T00:00:00Z", "discountPercentage": 47, "discountPurchaseAt": "1980-09-25T00:00:00Z", "expireAt": "1985-02-03T00:00:00Z", "price": 65, "purchaseAt": "1997-01-25T00:00:00Z", "trialPrice": 77}, {"currencyCode": "eSyFG1c9", "currencyNamespace": "RgJMIpm0", "currencyType": "REAL", "discountAmount": 89, "discountExpireAt": "1994-12-01T00:00:00Z", "discountPercentage": 18, "discountPurchaseAt": "1974-04-03T00:00:00Z", "expireAt": "1988-12-05T00:00:00Z", "price": 73, "purchaseAt": "1988-12-22T00:00:00Z", "trialPrice": 38}]}, "saleConfig": {"currencyCode": "eYEUN04n", "price": 68}, "seasonType": "TIER", "sectionExclusive": false, "sellable": true, "sku": "3PeljDdO", "stackable": true, "status": "ACTIVE", "tags": ["SQBSmv6F", "GtT028vt", "o5DYgPTU"], "targetCurrencyCode": "cfuZVz2X", "targetNamespace": "h6LvQXkO", "thumbnailUrl": "HAfr2ePI", "useCount": 87}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateItem \
    --itemId '3S4h6RGJ' \
    --namespace $AB_NAMESPACE \
    --storeId 'xlmLNBDt' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 134 'UpdateItem' test.out

#- 135 DeleteItem
$CLI_EXE \
    --sn platform \
    --op DeleteItem \
    --itemId 'mmk1wbdm' \
    --namespace $AB_NAMESPACE \
    --featuresToCheck '["DLC", "ENTITLEMENT", "DLC"]' \
    --force 'false' \
    --storeId 'gDFhF8j1' \
    > test.out 2>&1
eval_tap $? 135 'DeleteItem' test.out

#- 136 AcquireItem
# body param: body
echo '{"count": 16, "orderNo": "aFSfUojU"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op AcquireItem \
    --itemId 'pJRXmMeX' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 136 'AcquireItem' test.out

#- 137 GetApp
$CLI_EXE \
    --sn platform \
    --op GetApp \
    --itemId 'RCJC12zW' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --storeId 'SInnsw05' \
    > test.out 2>&1
eval_tap $? 137 'GetApp' test.out

#- 138 UpdateApp
# body param: body
echo '{"carousel": [{"alt": "eyRhGLey", "previewUrl": "4x92T82T", "thumbnailUrl": "89owXLKa", "type": "image", "url": "EmoEw3Zm", "videoSource": "generic"}, {"alt": "1ucD1U3e", "previewUrl": "cH6mpvCE", "thumbnailUrl": "Y5qsyNgy", "type": "video", "url": "Qkv1G4tK", "videoSource": "vimeo"}, {"alt": "bx7VpNd4", "previewUrl": "kk4QwL9B", "thumbnailUrl": "X24zdkSi", "type": "video", "url": "F5Z6erw2", "videoSource": "generic"}], "developer": "Tjnvdx9r", "forumUrl": "M0pm2jQE", "genres": ["Sports", "Casual", "Simulation"], "localizations": {"1QsDvrK9": {"announcement": "lAEpQah4", "slogan": "kRpdFmvg"}, "WRLrjHQ2": {"announcement": "xOUJ2dNG", "slogan": "IhPIecqr"}, "1EExcD4D": {"announcement": "63zcVeK1", "slogan": "AoNtRxtZ"}}, "platformRequirements": {"pFzic4z2": [{"additionals": "8mNpxAsl", "directXVersion": "LgdlSTA2", "diskSpace": "1UJ1e9yd", "graphics": "kD6VvjY9", "label": "mC7LInHl", "osVersion": "06q5Amau", "processor": "aMA2sKDl", "ram": "WoyHiiH8", "soundCard": "pW15wXjw"}, {"additionals": "aIgWOTaH", "directXVersion": "Vbm1fhct", "diskSpace": "0q8FUdiv", "graphics": "SFZFH7hC", "label": "WPV9F68o", "osVersion": "Nc13GBrq", "processor": "2SVTHYB6", "ram": "bpmOTTkC", "soundCard": "p4rZbXEP"}, {"additionals": "CXgVy5Sx", "directXVersion": "iT7Xx0tk", "diskSpace": "cCHlcyrV", "graphics": "KpStRQLE", "label": "C8HrfOhu", "osVersion": "VXyAVpos", "processor": "DdcG3vxm", "ram": "PiK3utpm", "soundCard": "2Lg1miXu"}], "0s4aZzJw": [{"additionals": "v2ue2ip1", "directXVersion": "xc0103iJ", "diskSpace": "kfFSSPAo", "graphics": "F7BBNhbz", "label": "8qe40KIk", "osVersion": "llTb3xJb", "processor": "9PkwyFIv", "ram": "EkGmY0jZ", "soundCard": "TjeXR4K6"}, {"additionals": "3LhsrGrO", "directXVersion": "Y0rCg3Po", "diskSpace": "KFQgtY3u", "graphics": "dKArQ3PQ", "label": "ZvVC2D8Y", "osVersion": "g80F8KYY", "processor": "4jgOTakg", "ram": "4WUDKsVG", "soundCard": "XLmE193o"}, {"additionals": "2MHVPTWp", "directXVersion": "0L06Tpxe", "diskSpace": "8A7e4Hgj", "graphics": "9kLBYv1l", "label": "oX7jGhyi", "osVersion": "5BxwApN9", "processor": "eblARjT9", "ram": "yvz0RpqM", "soundCard": "dBCSLW4K"}], "wsYIlSs2": [{"additionals": "7Zo6OOzF", "directXVersion": "MjwDX9Kw", "diskSpace": "GRVAT2E6", "graphics": "NknTaOjX", "label": "LJUgU1lb", "osVersion": "4HVp0C4V", "processor": "Zz0wsfio", "ram": "JecPuHiq", "soundCard": "iRfQuxYP"}, {"additionals": "bdXW3dA1", "directXVersion": "yWU4I3FG", "diskSpace": "u0d8Gncq", "graphics": "vRaVQVUr", "label": "xhlA0jqY", "osVersion": "WKfODHY1", "processor": "qV1QlCqA", "ram": "nUswDoAP", "soundCard": "DVGL3svh"}, {"additionals": "L2dVLDjk", "directXVersion": "SANQTYjl", "diskSpace": "2dskqfy0", "graphics": "lsiyZZAG", "label": "gACpNdsD", "osVersion": "ZXMyp2DU", "processor": "5C1P2s8W", "ram": "7jAVrnLy", "soundCard": "xw7Op66A"}]}, "platforms": ["Android", "Android", "Android"], "players": ["CrossPlatformMulti", "LocalCoop", "LocalCoop"], "primaryGenre": "Simulation", "publisher": "02poH7Js", "releaseDate": "1971-08-30T00:00:00Z", "websiteUrl": "qZabgTua"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateApp \
    --itemId 'cCFIRhuN' \
    --namespace $AB_NAMESPACE \
    --storeId 'e7sM3ZR2' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 138 'UpdateApp' test.out

#- 139 DisableItem
# body param: body
echo '{"featuresToCheck": ["IAP", "CATALOG"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op DisableItem \
    --itemId '8bxJJL1G' \
    --namespace $AB_NAMESPACE \
    --storeId 'YWx7tYnE' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 139 'DisableItem' test.out

#- 140 GetItemDynamicData
$CLI_EXE \
    --sn platform \
    --op GetItemDynamicData \
    --itemId 'pH33ULMq' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 140 'GetItemDynamicData' test.out

#- 141 EnableItem
$CLI_EXE \
    --sn platform \
    --op EnableItem \
    --itemId 'LoV72ReT' \
    --namespace $AB_NAMESPACE \
    --storeId 'mVOHr7A6' \
    > test.out 2>&1
eval_tap $? 141 'EnableItem' test.out

#- 142 FeatureItem
$CLI_EXE \
    --sn platform \
    --op FeatureItem \
    --feature 'JkcqyAmN' \
    --itemId 'ScjCIjRh' \
    --namespace $AB_NAMESPACE \
    --storeId 'ZgncVmOi' \
    > test.out 2>&1
eval_tap $? 142 'FeatureItem' test.out

#- 143 DefeatureItem
$CLI_EXE \
    --sn platform \
    --op DefeatureItem \
    --feature 'OtQsMPQb' \
    --itemId 'mjVVHpi3' \
    --namespace $AB_NAMESPACE \
    --storeId 'M78wj0jW' \
    > test.out 2>&1
eval_tap $? 143 'DefeatureItem' test.out

#- 144 GetLocaleItem
$CLI_EXE \
    --sn platform \
    --op GetLocaleItem \
    --itemId 'Tyj3MPNo' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --language 'pxm2FEJy' \
    --populateBundle 'false' \
    --region 'wHBi9VeT' \
    --storeId 'l6A0Y8KB' \
    > test.out 2>&1
eval_tap $? 144 'GetLocaleItem' test.out

#- 145 UpdateItemPurchaseCondition
# body param: body
echo '{"purchaseCondition": {"conditionGroups": [{"operator": "or", "predicates": [{"anyOf": 19, "code": "kgtlVRtZ", "comparison": "isLessThanOrEqual", "name": "yULjz8J6", "predicateType": "StatisticCodePredicate", "value": "iJCXQ2rK", "values": ["hc8mte2J", "aV9y6mHR", "T9IJvBfM"]}, {"anyOf": 75, "code": "g3nmTWvQ", "comparison": "isNot", "name": "hDpVFKLF", "predicateType": "StatisticCodePredicate", "value": "FMVvtuuJ", "values": ["yFUDHWcW", "JbEXrfbX", "yYJZI1EM"]}, {"anyOf": 0, "code": "aDAu0yEz", "comparison": "isLessThanOrEqual", "name": "8pWZCFl5", "predicateType": "StatisticCodePredicate", "value": "qBM4aGix", "values": ["UCvZLTH5", "qFeiEmPz", "NsMdDaqS"]}]}, {"operator": "or", "predicates": [{"anyOf": 91, "code": "fDRQFBwh", "comparison": "isNot", "name": "2hjYGRIh", "predicateType": "StatisticCodePredicate", "value": "DEgg7DQt", "values": ["BCHGKMgj", "vKaPDCex", "S6W5ks3T"]}, {"anyOf": 47, "code": "FhBNUcDj", "comparison": "isNot", "name": "Ni3YXWHO", "predicateType": "SeasonPassPredicate", "value": "pQwb9wwx", "values": ["TURAFnHr", "4atQPAYS", "2jwdffO4"]}, {"anyOf": 61, "code": "dRugFMxO", "comparison": "isGreaterThanOrEqual", "name": "k2MSawjg", "predicateType": "EntitlementPredicate", "value": "ke8W6WF8", "values": ["aFHlYzNO", "YLbtWMyC", "nMUeeyd3"]}]}, {"operator": "or", "predicates": [{"anyOf": 44, "code": "WVfUtUwB", "comparison": "isGreaterThan", "name": "Zu1GfvDH", "predicateType": "SeasonTierPredicate", "value": "siJaONNX", "values": ["EwlSvvs1", "9ws8SM5J", "wX59jeH7"]}, {"anyOf": 90, "code": "J2jj5luL", "comparison": "isLessThanOrEqual", "name": "0OeF18ab", "predicateType": "SeasonPassPredicate", "value": "fOdfGqn4", "values": ["l6G3CtXR", "Ip13ZjMq", "MDVLynWh"]}, {"anyOf": 74, "code": "YHKNUZQS", "comparison": "excludes", "name": "RJlkPOYO", "predicateType": "EntitlementPredicate", "value": "20eHdrW4", "values": ["ANCkm47h", "jhP4iB4k", "zxhiZwlp"]}]}]}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateItemPurchaseCondition \
    --itemId 'lQDqFehh' \
    --namespace $AB_NAMESPACE \
    --storeId 'iWlAr2d8' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 145 'UpdateItemPurchaseCondition' test.out

#- 146 QueryItemReferences
$CLI_EXE \
    --sn platform \
    --op QueryItemReferences \
    --itemId 'LmHemzCU' \
    --namespace $AB_NAMESPACE \
    --featuresToCheck '["DLC", "CATALOG", "CAMPAIGN"]' \
    --storeId 'SMTV1j4i' \
    > test.out 2>&1
eval_tap $? 146 'QueryItemReferences' test.out

#- 147 ReturnItem
# body param: body
echo '{"orderNo": "GRpNZ0tJ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ReturnItem \
    --itemId 'YK6JAEM5' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 147 'ReturnItem' test.out

#- 148 QueryKeyGroups
$CLI_EXE \
    --sn platform \
    --op QueryKeyGroups \
    --namespace $AB_NAMESPACE \
    --limit '69' \
    --name '2og9lIFe' \
    --offset '46' \
    --tag 'uiaZd8x7' \
    > test.out 2>&1
eval_tap $? 148 'QueryKeyGroups' test.out

#- 149 CreateKeyGroup
# body param: body
echo '{"description": "rT8dwqw3", "name": "mzvFPAno", "status": "INACTIVE", "tags": ["ehJ6FA1C", "f6f5AbgB", "rE0faurm"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateKeyGroup \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 149 'CreateKeyGroup' test.out

#- 150 GetKeyGroupByBoothName
eval_tap 0 150 'GetKeyGroupByBoothName # SKIP deprecated' test.out

#- 151 GetKeyGroup
$CLI_EXE \
    --sn platform \
    --op GetKeyGroup \
    --keyGroupId 'MT2ECbYl' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 151 'GetKeyGroup' test.out

#- 152 UpdateKeyGroup
# body param: body
echo '{"description": "0wxl2V2j", "name": "vDXtQstL", "status": "ACTIVE", "tags": ["EGPbziXH", "rgomtdwW", "C82qQwOz"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateKeyGroup \
    --keyGroupId 'jAS1y2A1' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 152 'UpdateKeyGroup' test.out

#- 153 GetKeyGroupDynamic
$CLI_EXE \
    --sn platform \
    --op GetKeyGroupDynamic \
    --keyGroupId '4du06gDY' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 153 'GetKeyGroupDynamic' test.out

#- 154 ListKeys
$CLI_EXE \
    --sn platform \
    --op ListKeys \
    --keyGroupId 'IkvX2RDf' \
    --namespace $AB_NAMESPACE \
    --limit '98' \
    --offset '13' \
    --status 'ACQUIRED' \
    > test.out 2>&1
eval_tap $? 154 'ListKeys' test.out

#- 155 UploadKeys
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UploadKeys \
    --keyGroupId 'Omr4gz3G' \
    --namespace $AB_NAMESPACE \
    --upload file $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 155 'UploadKeys' test.out

#- 156 QueryOrders
$CLI_EXE \
    --sn platform \
    --op QueryOrders \
    --namespace $AB_NAMESPACE \
    --endTime '04PZz0DX' \
    --limit '4' \
    --offset '10' \
    --orderNos '["Xbw0ZfmP", "d94OA2jt", "ADTJBRus"]' \
    --sortBy 'UNoAMfsQ' \
    --startTime '9e9Msjja' \
    --status 'FULFILLED' \
    --withTotal 'true' \
    > test.out 2>&1
eval_tap $? 156 'QueryOrders' test.out

#- 157 GetOrderStatistics
$CLI_EXE \
    --sn platform \
    --op GetOrderStatistics \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 157 'GetOrderStatistics' test.out

#- 158 GetOrder
$CLI_EXE \
    --sn platform \
    --op GetOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'C2692ZhF' \
    > test.out 2>&1
eval_tap $? 158 'GetOrder' test.out

#- 159 RefundOrder
# body param: body
echo '{"description": "RItNrrM1"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RefundOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'XDk468Gq' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 159 'RefundOrder' test.out

#- 160 GetPaymentCallbackConfig
eval_tap 0 160 'GetPaymentCallbackConfig # SKIP deprecated' test.out

#- 161 UpdatePaymentCallbackConfig
eval_tap 0 161 'UpdatePaymentCallbackConfig # SKIP deprecated' test.out

#- 162 GetPaymentMerchantConfig
$CLI_EXE \
    --sn platform \
    --op GetPaymentMerchantConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 162 'GetPaymentMerchantConfig' test.out

#- 163 UpdatePaymentDomainWhitelistConfig
# body param: body
echo '{"domains": ["ZdQbaZPt", "2pJqu6Ge", "dQJ9vQOX"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePaymentDomainWhitelistConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 163 'UpdatePaymentDomainWhitelistConfig' test.out

#- 164 QueryPaymentNotifications
$CLI_EXE \
    --sn platform \
    --op QueryPaymentNotifications \
    --namespace $AB_NAMESPACE \
    --endDate 'vTbIXBdN' \
    --externalId 'NAKGxh6T' \
    --limit '55' \
    --notificationSource 'ADYEN' \
    --notificationType 'SzCNSCKT' \
    --offset '51' \
    --paymentOrderNo 'uH7xQ9OS' \
    --startDate 'WMBIgfno' \
    --status 'ERROR' \
    > test.out 2>&1
eval_tap $? 164 'QueryPaymentNotifications' test.out

#- 165 QueryPaymentOrders
$CLI_EXE \
    --sn platform \
    --op QueryPaymentOrders \
    --namespace $AB_NAMESPACE \
    --channel 'EXTERNAL' \
    --extTxId 'trw6aKJD' \
    --limit '87' \
    --offset '49' \
    --status 'DELETED' \
    > test.out 2>&1
eval_tap $? 165 'QueryPaymentOrders' test.out

#- 166 CreatePaymentOrderByDedicated
# body param: body
echo '{"currencyCode": "C37IOll3", "currencyNamespace": "5w5h6WkK", "customParameters": {"f6kL98qw": {}, "wunFsvER": {}, "ic9r1lX0": {}}, "description": "Vs0LlU2L", "extOrderNo": "nrMtmQH4", "extUserId": "HQGBNJJD", "itemType": "LOOTBOX", "language": "eEe_BOYM_132", "metadata": {"3JilsVSX": "30njUI6g", "on75OpXO": "IUsmp6Tx", "YbApaulL": "XnCtY9ci"}, "notifyUrl": "TMe4a07p", "omitNotification": false, "platform": "iRfYL6Zm", "price": 57, "recurringPaymentOrderNo": "eWrGnQU6", "region": "OPa5p40D", "returnUrl": "blMfhOBv", "sandbox": true, "sku": "OKI8YbU1", "subscriptionId": "o0QGVgwk", "targetNamespace": "iJri20Qz", "targetUserId": "ZBsuqUky", "title": "mpa6N5iN"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreatePaymentOrderByDedicated \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 166 'CreatePaymentOrderByDedicated' test.out

#- 167 ListExtOrderNoByExtTxId
$CLI_EXE \
    --sn platform \
    --op ListExtOrderNoByExtTxId \
    --namespace $AB_NAMESPACE \
    --extTxId 'ogpUJIZr' \
    > test.out 2>&1
eval_tap $? 167 'ListExtOrderNoByExtTxId' test.out

#- 168 GetPaymentOrder
$CLI_EXE \
    --sn platform \
    --op GetPaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'fY6U9tez' \
    > test.out 2>&1
eval_tap $? 168 'GetPaymentOrder' test.out

#- 169 ChargePaymentOrder
# body param: body
echo '{"extTxId": "Mv4x3UMD", "paymentMethod": "1N3vsok6", "paymentProvider": "ADYEN"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ChargePaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'o4XbMZ6v' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 169 'ChargePaymentOrder' test.out

#- 170 RefundPaymentOrderByDedicated
# body param: body
echo '{"description": "auYiJxsX"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RefundPaymentOrderByDedicated \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'KpqgGTR1' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 170 'RefundPaymentOrderByDedicated' test.out

#- 171 SimulatePaymentOrderNotification
# body param: body
echo '{"amount": 74, "currencyCode": "y72z5s1b", "notifyType": "REFUND", "paymentProvider": "NEONPAY", "salesTax": 75, "vat": 81}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SimulatePaymentOrderNotification \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'i8GRYdn8' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 171 'SimulatePaymentOrderNotification' test.out

#- 172 GetPaymentOrderChargeStatus
$CLI_EXE \
    --sn platform \
    --op GetPaymentOrderChargeStatus \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'GmZVMykW' \
    > test.out 2>&1
eval_tap $? 172 'GetPaymentOrderChargeStatus' test.out

#- 173 GetPsnEntitlementOwnership
# body param: body
echo '{"accessToken": "NnnFoANR", "serviceLabel": 67}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op GetPsnEntitlementOwnership \
    --entitlementLabel 'KaTfJY5B' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 173 'GetPsnEntitlementOwnership' test.out

#- 174 GetXboxEntitlementOwnership
# body param: body
echo '{"delegationToken": "D2POqwN4", "sandboxId": "59Eniv0g"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op GetXboxEntitlementOwnership \
    --namespace $AB_NAMESPACE \
    --productSku 'woj2TXOk' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 174 'GetXboxEntitlementOwnership' test.out

#- 175 GetPlatformEntitlementConfig
$CLI_EXE \
    --sn platform \
    --op GetPlatformEntitlementConfig \
    --namespace $AB_NAMESPACE \
    --platform 'Nintendo' \
    > test.out 2>&1
eval_tap $? 175 'GetPlatformEntitlementConfig' test.out

#- 176 UpdatePlatformEntitlementConfig
# body param: body
echo '{"allowedPlatformOrigins": ["GooglePlay", "Steam", "Oculus"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePlatformEntitlementConfig \
    --namespace $AB_NAMESPACE \
    --platform 'Nintendo' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 176 'UpdatePlatformEntitlementConfig' test.out

#- 177 GetPlatformWalletConfig
$CLI_EXE \
    --sn platform \
    --op GetPlatformWalletConfig \
    --namespace $AB_NAMESPACE \
    --platform 'Steam' \
    > test.out 2>&1
eval_tap $? 177 'GetPlatformWalletConfig' test.out

#- 178 UpdatePlatformWalletConfig
# body param: body
echo '{"allowedBalanceOrigins": ["Oculus", "Epic", "Other"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePlatformWalletConfig \
    --namespace $AB_NAMESPACE \
    --platform 'Xbox' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 178 'UpdatePlatformWalletConfig' test.out

#- 179 ResetPlatformWalletConfig
$CLI_EXE \
    --sn platform \
    --op ResetPlatformWalletConfig \
    --namespace $AB_NAMESPACE \
    --platform 'Xbox' \
    > test.out 2>&1
eval_tap $? 179 'ResetPlatformWalletConfig' test.out

#- 180 GetRevocationConfig
$CLI_EXE \
    --sn platform \
    --op GetRevocationConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 180 'GetRevocationConfig' test.out

#- 181 UpdateRevocationConfig
# body param: body
echo '{"entitlement": {"consumable": {"enabled": false, "strategy": "REVOKE_OR_REPORT"}, "durable": {"enabled": false, "strategy": "REVOKE_OR_REPORT"}}, "wallet": {"enabled": true, "strategy": "CUSTOM"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateRevocationConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 181 'UpdateRevocationConfig' test.out

#- 182 DeleteRevocationConfig
$CLI_EXE \
    --sn platform \
    --op DeleteRevocationConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 182 'DeleteRevocationConfig' test.out

#- 183 QueryRevocationHistories
$CLI_EXE \
    --sn platform \
    --op QueryRevocationHistories \
    --namespace $AB_NAMESPACE \
    --endTime 'Li4Byy3r' \
    --limit '89' \
    --offset '37' \
    --source 'DLC' \
    --startTime 'HnfGohJE' \
    --status 'FAIL' \
    --transactionId 'wD0kWbjj' \
    --userId 'GNxfHaHu' \
    > test.out 2>&1
eval_tap $? 183 'QueryRevocationHistories' test.out

#- 184 GetRevocationPluginConfig
$CLI_EXE \
    --sn platform \
    --op GetRevocationPluginConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 184 'GetRevocationPluginConfig' test.out

#- 185 UpdateRevocationPluginConfig
# body param: body
echo '{"appConfig": {"appName": "Vc07IxTu"}, "customConfig": {"connectionType": "INSECURE", "grpcServerAddress": "DirDmgNP"}, "extendType": "APP"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateRevocationPluginConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 185 'UpdateRevocationPluginConfig' test.out

#- 186 DeleteRevocationPluginConfig
$CLI_EXE \
    --sn platform \
    --op DeleteRevocationPluginConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 186 'DeleteRevocationPluginConfig' test.out

#- 187 UploadRevocationPluginConfigCert
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UploadRevocationPluginConfigCert \
    --namespace $AB_NAMESPACE \
    --upload file $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 187 'UploadRevocationPluginConfigCert' test.out

#- 188 CreateReward
# body param: body
echo '{"description": "NQIe62nY", "eventTopic": "yHdnomtV", "maxAwarded": 60, "maxAwardedPerUser": 62, "namespaceExpression": "D9zGfbnS", "rewardCode": "plA8Whar", "rewardConditions": [{"condition": "U9ktnsG5", "conditionName": "prkBmdG9", "eventName": "s9N9Kjg0", "rewardItems": [{"duration": 15, "endDate": "1981-08-22T00:00:00Z", "identityType": "ITEM_ID", "itemId": "mWBP8Dov", "quantity": 97, "sku": "Pb9nwkf9"}, {"duration": 61, "endDate": "1984-07-21T00:00:00Z", "identityType": "ITEM_SKU", "itemId": "wa1MRkEr", "quantity": 70, "sku": "aeU1I2lJ"}, {"duration": 17, "endDate": "1990-04-18T00:00:00Z", "identityType": "ITEM_SKU", "itemId": "Nk5FGzDQ", "quantity": 93, "sku": "BD0JZXct"}]}, {"condition": "7FJVrwZH", "conditionName": "76LzZVCL", "eventName": "HIiBOwZJ", "rewardItems": [{"duration": 67, "endDate": "1994-09-04T00:00:00Z", "identityType": "ITEM_ID", "itemId": "aT8dpTkq", "quantity": 83, "sku": "HibAm7Vm"}, {"duration": 70, "endDate": "1975-09-21T00:00:00Z", "identityType": "ITEM_ID", "itemId": "lcmLbH8Q", "quantity": 11, "sku": "SkauBbYS"}, {"duration": 87, "endDate": "1984-02-06T00:00:00Z", "identityType": "ITEM_SKU", "itemId": "zqpME7Fy", "quantity": 50, "sku": "oSfY0ESn"}]}, {"condition": "wWj177ny", "conditionName": "72BZHRlt", "eventName": "qAktpgbG", "rewardItems": [{"duration": 72, "endDate": "1993-04-15T00:00:00Z", "identityType": "ITEM_ID", "itemId": "3riPYmvv", "quantity": 50, "sku": "lcjiOpnw"}, {"duration": 82, "endDate": "1989-07-23T00:00:00Z", "identityType": "ITEM_SKU", "itemId": "3typZTqh", "quantity": 35, "sku": "nyUldnNK"}, {"duration": 49, "endDate": "1995-01-06T00:00:00Z", "identityType": "ITEM_ID", "itemId": "XBcDds14", "quantity": 12, "sku": "KUfKoILX"}]}], "userIdExpression": "RSZx7Fym"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateReward \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 188 'CreateReward' test.out

#- 189 QueryRewards
$CLI_EXE \
    --sn platform \
    --op QueryRewards \
    --namespace $AB_NAMESPACE \
    --eventTopic '4ohGpXtz' \
    --limit '2' \
    --offset '57' \
    --sortBy '["namespace", "rewardCode"]' \
    > test.out 2>&1
eval_tap $? 189 'QueryRewards' test.out

#- 190 ExportRewards
$CLI_EXE \
    --sn platform \
    --op ExportRewards \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 190 'ExportRewards' test.out

#- 191 ImportRewards
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op ImportRewards \
    --namespace $AB_NAMESPACE \
    --replaceExisting 'true' \
    --upload file $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 191 'ImportRewards' test.out

#- 192 GetReward
$CLI_EXE \
    --sn platform \
    --op GetReward \
    --namespace $AB_NAMESPACE \
    --rewardId 'ZmqWsZaF' \
    > test.out 2>&1
eval_tap $? 192 'GetReward' test.out

#- 193 UpdateReward
# body param: body
echo '{"description": "BFYx4dIn", "eventTopic": "6lo3CCvl", "maxAwarded": 28, "maxAwardedPerUser": 30, "namespaceExpression": "EX81G1oM", "rewardCode": "s014yWKU", "rewardConditions": [{"condition": "3EkgGOc1", "conditionName": "ijZ0ylOv", "eventName": "oK4UPmOn", "rewardItems": [{"duration": 19, "endDate": "1994-03-15T00:00:00Z", "identityType": "ITEM_ID", "itemId": "FEfG4S1h", "quantity": 36, "sku": "xy7Wj7qT"}, {"duration": 16, "endDate": "1998-09-25T00:00:00Z", "identityType": "ITEM_SKU", "itemId": "qBsB57L6", "quantity": 86, "sku": "uxFtk2GP"}, {"duration": 44, "endDate": "1971-06-12T00:00:00Z", "identityType": "ITEM_ID", "itemId": "Ln6niVfN", "quantity": 29, "sku": "QUEPV1bl"}]}, {"condition": "HOHQq7Mb", "conditionName": "Ua3BNmXk", "eventName": "R2moGSKM", "rewardItems": [{"duration": 37, "endDate": "1999-09-16T00:00:00Z", "identityType": "ITEM_SKU", "itemId": "Npbr4usZ", "quantity": 27, "sku": "saEzp76n"}, {"duration": 19, "endDate": "1982-04-05T00:00:00Z", "identityType": "ITEM_ID", "itemId": "rATXOWWH", "quantity": 66, "sku": "eZuCaOuR"}, {"duration": 72, "endDate": "1974-10-08T00:00:00Z", "identityType": "ITEM_ID", "itemId": "3Ta3GGv7", "quantity": 33, "sku": "t4d0Pj15"}]}, {"condition": "42rrZmbt", "conditionName": "AzgX3gpy", "eventName": "qteVXrNh", "rewardItems": [{"duration": 20, "endDate": "1975-11-26T00:00:00Z", "identityType": "ITEM_SKU", "itemId": "RCb51dD9", "quantity": 42, "sku": "zE1OT3QM"}, {"duration": 48, "endDate": "1992-06-14T00:00:00Z", "identityType": "ITEM_SKU", "itemId": "PXH6Oc9b", "quantity": 6, "sku": "WWT5IAaa"}, {"duration": 34, "endDate": "1985-04-10T00:00:00Z", "identityType": "ITEM_SKU", "itemId": "MqBVF8v0", "quantity": 39, "sku": "7aQkNhNi"}]}], "userIdExpression": "VFNmgYsd"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateReward \
    --namespace $AB_NAMESPACE \
    --rewardId 'c0IWBHkK' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 193 'UpdateReward' test.out

#- 194 DeleteReward
$CLI_EXE \
    --sn platform \
    --op DeleteReward \
    --namespace $AB_NAMESPACE \
    --rewardId 'rzrrVb0Q' \
    > test.out 2>&1
eval_tap $? 194 'DeleteReward' test.out

#- 195 CheckEventCondition
# body param: body
echo '{"payload": {"necOslg2": {}, "VweWMVkT": {}, "VQRpU81p": {}}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CheckEventCondition \
    --namespace $AB_NAMESPACE \
    --rewardId 'vNSWgsUX' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 195 'CheckEventCondition' test.out

#- 196 DeleteRewardConditionRecord
# body param: body
echo '{"conditionName": "sv14HJx3", "userId": "1QDu5QT6"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op DeleteRewardConditionRecord \
    --namespace $AB_NAMESPACE \
    --rewardId 'PdPPpF89' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 196 'DeleteRewardConditionRecord' test.out

#- 197 QuerySections
$CLI_EXE \
    --sn platform \
    --op QuerySections \
    --namespace $AB_NAMESPACE \
    --end 'FYKaEu2j' \
    --limit '87' \
    --offset '22' \
    --start 'Y2JKnt0L' \
    --storeId 'oCIkwnCA' \
    --viewId 'SBoSgdPW' \
    > test.out 2>&1
eval_tap $? 197 'QuerySections' test.out

#- 198 CreateSection
# body param: body
echo '{"active": false, "displayOrder": 17, "endDate": "1996-07-28T00:00:00Z", "ext": {"3ZxBz2dj": {}, "2043TzbM": {}, "oH4CgZL7": {}}, "fixedPeriodRotationConfig": {"backfillType": "NONE", "duration": 79, "itemCount": 32, "rule": "SEQUENCE"}, "items": [{"id": "AlqNSYcp", "sku": "u3qhQDXY"}, {"id": "cHx5cLrW", "sku": "YAkQ3aBK"}, {"id": "OMez8eQq", "sku": "WJ9noVYK"}], "localizations": {"mI6Zi0aU": {"description": "5Tg2HoIW", "localExt": {"otliRslj": {}, "op9SyXZ9": {}, "sU5q7PmL": {}}, "longDescription": "TTL1bCER", "title": "D1j8E1qf"}, "9ZJtLmcn": {"description": "VpntEUH2", "localExt": {"TkJUn6fA": {}, "gprfgLjY": {}, "heZxQezh": {}}, "longDescription": "eLUgv854", "title": "DD6pmOxn"}, "xfTs1u5n": {"description": "eQSTrQum", "localExt": {"v9alhU6z": {}, "nm506EPD": {}, "l2HjbLwc": {}}, "longDescription": "V2QGgdZ9", "title": "JY4L75n2"}}, "name": "4v2YjqTd", "rotationType": "NONE", "startDate": "1972-08-27T00:00:00Z", "viewId": "1dFU5HCd"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateSection \
    --namespace $AB_NAMESPACE \
    --storeId 'lmM7IFhr' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 198 'CreateSection' test.out

#- 199 PurgeExpiredSection
$CLI_EXE \
    --sn platform \
    --op PurgeExpiredSection \
    --namespace $AB_NAMESPACE \
    --storeId 's2LVksEI' \
    > test.out 2>&1
eval_tap $? 199 'PurgeExpiredSection' test.out

#- 200 GetSection
$CLI_EXE \
    --sn platform \
    --op GetSection \
    --namespace $AB_NAMESPACE \
    --sectionId 'gElwwwG4' \
    --storeId 'yjo2lJVR' \
    > test.out 2>&1
eval_tap $? 200 'GetSection' test.out

#- 201 UpdateSection
# body param: body
echo '{"active": false, "displayOrder": 88, "endDate": "1986-05-19T00:00:00Z", "ext": {"KfojUfpe": {}, "Zyqv5U8g": {}, "jc4yNaaF": {}}, "fixedPeriodRotationConfig": {"backfillType": "CUSTOM", "duration": 64, "itemCount": 14, "rule": "SEQUENCE"}, "items": [{"id": "50lIWOgC", "sku": "EIC0NBQT"}, {"id": "L5Lmaj36", "sku": "hLg7qa7b"}, {"id": "00fw7vuS", "sku": "smJCJbgP"}], "localizations": {"MfbiEFlK": {"description": "kQjSSmiv", "localExt": {"VQPyKLO3": {}, "p9TpQjNG": {}, "B5VMO6hT": {}}, "longDescription": "vKKZLkfY", "title": "CMrFD7h1"}, "DYwQXyB5": {"description": "NaMnYu39", "localExt": {"MZDDurlc": {}, "aGTfMFua": {}, "v9NOB3Kj": {}}, "longDescription": "Zzbo5NHG", "title": "xnQELbfL"}, "Pok6fRYx": {"description": "r673Yov5", "localExt": {"N5GEHT7H": {}, "tNVbqFAh": {}, "C5xlLSNV": {}}, "longDescription": "m71XkH45", "title": "cm0mRDun"}}, "name": "p5RAN8MN", "rotationType": "NONE", "startDate": "1991-10-21T00:00:00Z", "viewId": "Dj0vdZn8"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateSection \
    --namespace $AB_NAMESPACE \
    --sectionId 'ZmKV7TvQ' \
    --storeId 'aF24ftDT' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 201 'UpdateSection' test.out

#- 202 DeleteSection
$CLI_EXE \
    --sn platform \
    --op DeleteSection \
    --namespace $AB_NAMESPACE \
    --sectionId 'YOoN5xDr' \
    --storeId 'Z8yRBA94' \
    > test.out 2>&1
eval_tap $? 202 'DeleteSection' test.out

#- 203 ListStores
$CLI_EXE \
    --sn platform \
    --op ListStores \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 203 'ListStores' test.out

#- 204 CreateStore
# body param: body
echo '{"defaultLanguage": "NaMRgJ5F", "defaultRegion": "FcK6xOEO", "description": "ChipAmr2", "supportedLanguages": ["yyroJjIn", "TEN9iM9S", "EEjMP4cc"], "supportedRegions": ["61uq98Wo", "7jH6v9bE", "gSD0uC1n"], "title": "QtHGnnw7"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateStore \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 204 'CreateStore' test.out

#- 205 GetCatalogDefinition
$CLI_EXE \
    --sn platform \
    --op GetCatalogDefinition \
    --namespace $AB_NAMESPACE \
    --catalogType 'VIEW' \
    > test.out 2>&1
eval_tap $? 205 'GetCatalogDefinition' test.out

#- 206 DownloadCSVTemplates
$CLI_EXE \
    --sn platform \
    --op DownloadCSVTemplates \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 206 'DownloadCSVTemplates' test.out

#- 207 ExportStoreByCSV
# body param: body
echo '{"catalogType": "APP", "fieldsToBeIncluded": ["8J9G1BBg", "doB2KsgN", "syaS1fwE"], "idsToBeExported": ["JVOLbpwU", "IrBpaiq3", "idNhvSsY"], "storeId": "UEfXD8Tv"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ExportStoreByCSV \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 207 'ExportStoreByCSV' test.out

#- 208 ImportStore
eval_tap 0 208 'ImportStore # SKIP deprecated' test.out

#- 209 GetPublishedStore
$CLI_EXE \
    --sn platform \
    --op GetPublishedStore \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 209 'GetPublishedStore' test.out

#- 210 DeletePublishedStore
$CLI_EXE \
    --sn platform \
    --op DeletePublishedStore \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 210 'DeletePublishedStore' test.out

#- 211 GetPublishedStoreBackup
$CLI_EXE \
    --sn platform \
    --op GetPublishedStoreBackup \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 211 'GetPublishedStoreBackup' test.out

#- 212 RollbackPublishedStore
$CLI_EXE \
    --sn platform \
    --op RollbackPublishedStore \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 212 'RollbackPublishedStore' test.out

#- 213 GetStore
$CLI_EXE \
    --sn platform \
    --op GetStore \
    --namespace $AB_NAMESPACE \
    --storeId 'Eq8fsCf8' \
    > test.out 2>&1
eval_tap $? 213 'GetStore' test.out

#- 214 UpdateStore
# body param: body
echo '{"defaultLanguage": "zs0jQCqe", "defaultRegion": "Po313x4V", "description": "618DLCPX", "supportedLanguages": ["ebVH6k9s", "oCq9MihY", "xos0KLRv"], "supportedRegions": ["qsjxT3ge", "Eb4CAySt", "o3EHaDxS"], "title": "LHcxoUxM"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateStore \
    --namespace $AB_NAMESPACE \
    --storeId 'rPC85cOo' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 214 'UpdateStore' test.out

#- 215 DeleteStore
$CLI_EXE \
    --sn platform \
    --op DeleteStore \
    --namespace $AB_NAMESPACE \
    --storeId 'FSuFP0gj' \
    > test.out 2>&1
eval_tap $? 215 'DeleteStore' test.out

#- 216 QueryChanges
$CLI_EXE \
    --sn platform \
    --op QueryChanges \
    --namespace $AB_NAMESPACE \
    --storeId 'DIdldV63' \
    --action 'CREATE' \
    --itemSku 'EVLWQ8qJ' \
    --itemType 'MEDIA' \
    --limit '82' \
    --offset '20' \
    --selected 'true' \
    --sortBy '["updatedAt", "updatedAt:asc", "createdAt:desc"]' \
    --status 'UNPUBLISHED' \
    --type 'STORE' \
    --updatedAtEnd '4G2cVxGn' \
    --updatedAtStart 'cMwcSxD6' \
    --withTotal 'false' \
    > test.out 2>&1
eval_tap $? 216 'QueryChanges' test.out

#- 217 PublishAll
$CLI_EXE \
    --sn platform \
    --op PublishAll \
    --namespace $AB_NAMESPACE \
    --storeId 'ykf2sW7E' \
    > test.out 2>&1
eval_tap $? 217 'PublishAll' test.out

#- 218 PublishSelected
$CLI_EXE \
    --sn platform \
    --op PublishSelected \
    --namespace $AB_NAMESPACE \
    --storeId 'R19xeoha' \
    > test.out 2>&1
eval_tap $? 218 'PublishSelected' test.out

#- 219 SelectAllRecords
$CLI_EXE \
    --sn platform \
    --op SelectAllRecords \
    --namespace $AB_NAMESPACE \
    --storeId 'VL8vi8Hn' \
    > test.out 2>&1
eval_tap $? 219 'SelectAllRecords' test.out

#- 220 SelectAllRecordsByCriteria
$CLI_EXE \
    --sn platform \
    --op SelectAllRecordsByCriteria \
    --namespace $AB_NAMESPACE \
    --storeId 'Sk3TvLKW' \
    --action 'DELETE' \
    --itemSku 'sl1IqFs0' \
    --itemType 'BUNDLE' \
    --selected 'false' \
    --type 'VIEW' \
    --updatedAtEnd 'XYDf6Jmv' \
    --updatedAtStart 'onnrjqQL' \
    > test.out 2>&1
eval_tap $? 220 'SelectAllRecordsByCriteria' test.out

#- 221 GetStatistic
$CLI_EXE \
    --sn platform \
    --op GetStatistic \
    --namespace $AB_NAMESPACE \
    --storeId '5QU8npsD' \
    --action 'DELETE' \
    --itemSku '8nnaOCMZ' \
    --itemType 'SUBSCRIPTION' \
    --type 'ITEM' \
    --updatedAtEnd 'qP88FwLu' \
    --updatedAtStart 'hnNJoNEQ' \
    > test.out 2>&1
eval_tap $? 221 'GetStatistic' test.out

#- 222 UnselectAllRecords
$CLI_EXE \
    --sn platform \
    --op UnselectAllRecords \
    --namespace $AB_NAMESPACE \
    --storeId 'd1fQmKlJ' \
    > test.out 2>&1
eval_tap $? 222 'UnselectAllRecords' test.out

#- 223 SelectRecord
$CLI_EXE \
    --sn platform \
    --op SelectRecord \
    --changeId 'FQHhxZuo' \
    --namespace $AB_NAMESPACE \
    --storeId 'b6VwXTMn' \
    > test.out 2>&1
eval_tap $? 223 'SelectRecord' test.out

#- 224 UnselectRecord
$CLI_EXE \
    --sn platform \
    --op UnselectRecord \
    --changeId 'dkr8arAJ' \
    --namespace $AB_NAMESPACE \
    --storeId 'nE5CCu8D' \
    > test.out 2>&1
eval_tap $? 224 'UnselectRecord' test.out

#- 225 CloneStore
$CLI_EXE \
    --sn platform \
    --op CloneStore \
    --namespace $AB_NAMESPACE \
    --storeId 'kr0ZI8jq' \
    --targetStoreId 'KX3mvpo5' \
    > test.out 2>&1
eval_tap $? 225 'CloneStore' test.out

#- 226 ExportStore
eval_tap 0 226 'ExportStore # SKIP deprecated' test.out

#- 227 QueryImportHistory
$CLI_EXE \
    --sn platform \
    --op QueryImportHistory \
    --namespace $AB_NAMESPACE \
    --storeId 'yh0KS4H2' \
    --end 'jfQaFw4a' \
    --limit '34' \
    --offset '73' \
    --sortBy '2qx2zOYZ' \
    --start 'Ts1wDpFW' \
    --success 'true' \
    > test.out 2>&1
eval_tap $? 227 'QueryImportHistory' test.out

#- 228 ImportStoreByCSV
# form data upload: category
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
# form data upload: display
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
# form data upload: item
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
# form data upload: section
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op ImportStoreByCSV \
    --namespace $AB_NAMESPACE \
    --storeId 'oqHjm4VQ' \
    --upload category $TEMP_FILE_UPLOAD \
    --upload display $TEMP_FILE_UPLOAD \
    --upload item $TEMP_FILE_UPLOAD \
    --notes 'p66qQwO4' \
    --upload section $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 228 'ImportStoreByCSV' test.out

#- 229 QuerySubscriptions
$CLI_EXE \
    --sn platform \
    --op QuerySubscriptions \
    --namespace $AB_NAMESPACE \
    --chargeStatus 'CHARGED' \
    --itemId 'Sj6kWn4r' \
    --limit '67' \
    --offset '21' \
    --sku 'O7gpyiEo' \
    --status 'INIT' \
    --subscribedBy 'PLATFORM' \
    --userId 'uRRsGnGP' \
    > test.out 2>&1
eval_tap $? 229 'QuerySubscriptions' test.out

#- 230 RecurringChargeSubscription
$CLI_EXE \
    --sn platform \
    --op RecurringChargeSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'SfziRIUF' \
    > test.out 2>&1
eval_tap $? 230 'RecurringChargeSubscription' test.out

#- 231 GetTicketDynamic
$CLI_EXE \
    --sn platform \
    --op GetTicketDynamic \
    --boothName 'snp35i1Z' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 231 'GetTicketDynamic' test.out

#- 232 DecreaseTicketSale
# body param: body
echo '{"orderNo": "tmIVYWCK"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op DecreaseTicketSale \
    --boothName 'IHKECgPa' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 232 'DecreaseTicketSale' test.out

#- 233 GetTicketBoothID
$CLI_EXE \
    --sn platform \
    --op GetTicketBoothID \
    --boothName 'knjEgevP' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 233 'GetTicketBoothID' test.out

#- 234 IncreaseTicketSale
# body param: body
echo '{"count": 25, "orderNo": "T6D68FsL"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op IncreaseTicketSale \
    --boothName 'mxtIUkXE' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 234 'IncreaseTicketSale' test.out

#- 235 Commit
# body param: body
echo '{"actions": [{"operations": [{"creditPayload": {"balanceOrigin": "System", "count": 98, "currencyCode": "0D87enSp", "expireAt": "1995-05-01T00:00:00Z"}, "debitPayload": {"count": 36, "currencyCode": "QU0vVhMY", "walletPlatform": "Other"}, "fulFillItemPayload": {"count": 42, "entitlementCollectionId": "mkEMQkXd", "entitlementOrigin": "Twitch", "itemIdentity": "ohJ9A7RC", "itemIdentityType": "ITEM_SKU"}, "revokeEntitlementPayload": {"count": 59, "entitlementId": "4LqsGcf9"}, "type": "CREDIT_WALLET"}, {"creditPayload": {"balanceOrigin": "GooglePlay", "count": 19, "currencyCode": "1qCdOOZN", "expireAt": "1976-04-11T00:00:00Z"}, "debitPayload": {"count": 69, "currencyCode": "mXrwjZcX", "walletPlatform": "Epic"}, "fulFillItemPayload": {"count": 15, "entitlementCollectionId": "9kprOVED", "entitlementOrigin": "Steam", "itemIdentity": "SHmUoUoD", "itemIdentityType": "ITEM_ID"}, "revokeEntitlementPayload": {"count": 46, "entitlementId": "GrBXEtOg"}, "type": "DEBIT_WALLET"}, {"creditPayload": {"balanceOrigin": "Playstation", "count": 20, "currencyCode": "hmMSGmX2", "expireAt": "1983-06-21T00:00:00Z"}, "debitPayload": {"count": 25, "currencyCode": "dnBlG0lM", "walletPlatform": "Steam"}, "fulFillItemPayload": {"count": 100, "entitlementCollectionId": "6X5mbEWQ", "entitlementOrigin": "Xbox", "itemIdentity": "e9uGec4e", "itemIdentityType": "ITEM_SKU"}, "revokeEntitlementPayload": {"count": 46, "entitlementId": "bCOyW7Pb"}, "type": "DEBIT_WALLET"}], "userId": "nuZt3YDh"}, {"operations": [{"creditPayload": {"balanceOrigin": "Oculus", "count": 55, "currencyCode": "cMzNzFiX", "expireAt": "1990-09-24T00:00:00Z"}, "debitPayload": {"count": 96, "currencyCode": "XpbJcXjq", "walletPlatform": "Steam"}, "fulFillItemPayload": {"count": 67, "entitlementCollectionId": "y8pjAjLE", "entitlementOrigin": "Xbox", "itemIdentity": "RU9MHxKG", "itemIdentityType": "ITEM_SKU"}, "revokeEntitlementPayload": {"count": 4, "entitlementId": "NYglHCaK"}, "type": "FULFILL_ITEM"}, {"creditPayload": {"balanceOrigin": "Xbox", "count": 46, "currencyCode": "LXaMRuiD", "expireAt": "1997-02-12T00:00:00Z"}, "debitPayload": {"count": 4, "currencyCode": "LxLWezgN", "walletPlatform": "Nintendo"}, "fulFillItemPayload": {"count": 15, "entitlementCollectionId": "3Nfh9wEH", "entitlementOrigin": "Epic", "itemIdentity": "SGhsorHw", "itemIdentityType": "ITEM_ID"}, "revokeEntitlementPayload": {"count": 44, "entitlementId": "v0E8zlH0"}, "type": "REVOKE_ENTITLEMENT"}, {"creditPayload": {"balanceOrigin": "Epic", "count": 59, "currencyCode": "uDbuYo1Q", "expireAt": "1993-05-25T00:00:00Z"}, "debitPayload": {"count": 62, "currencyCode": "qPnKWMn5", "walletPlatform": "Steam"}, "fulFillItemPayload": {"count": 22, "entitlementCollectionId": "bS7LtGsW", "entitlementOrigin": "Playstation", "itemIdentity": "eZXNNmZX", "itemIdentityType": "ITEM_ID"}, "revokeEntitlementPayload": {"count": 10, "entitlementId": "E3r0nWAG"}, "type": "REVOKE_ENTITLEMENT"}], "userId": "ppWaI5v0"}, {"operations": [{"creditPayload": {"balanceOrigin": "IOS", "count": 69, "currencyCode": "sNHDUXKg", "expireAt": "1989-12-30T00:00:00Z"}, "debitPayload": {"count": 37, "currencyCode": "3DtKT9ke", "walletPlatform": "GooglePlay"}, "fulFillItemPayload": {"count": 21, "entitlementCollectionId": "OoJkqG00", "entitlementOrigin": "System", "itemIdentity": "jXSK1ItW", "itemIdentityType": "ITEM_SKU"}, "revokeEntitlementPayload": {"count": 18, "entitlementId": "Xdlg80ps"}, "type": "CREDIT_WALLET"}, {"creditPayload": {"balanceOrigin": "GooglePlay", "count": 85, "currencyCode": "TYBh7fVi", "expireAt": "1986-03-24T00:00:00Z"}, "debitPayload": {"count": 52, "currencyCode": "pni8WnYf", "walletPlatform": "Other"}, "fulFillItemPayload": {"count": 22, "entitlementCollectionId": "iKnX4kti", "entitlementOrigin": "Playstation", "itemIdentity": "4iddeK1H", "itemIdentityType": "ITEM_SKU"}, "revokeEntitlementPayload": {"count": 46, "entitlementId": "n1ORf3Lu"}, "type": "DEBIT_WALLET"}, {"creditPayload": {"balanceOrigin": "Twitch", "count": 73, "currencyCode": "39m1OEz9", "expireAt": "1976-01-02T00:00:00Z"}, "debitPayload": {"count": 56, "currencyCode": "qPxEqdPc", "walletPlatform": "Steam"}, "fulFillItemPayload": {"count": 94, "entitlementCollectionId": "SnFYR2To", "entitlementOrigin": "Twitch", "itemIdentity": "79sQafLm", "itemIdentityType": "ITEM_ID"}, "revokeEntitlementPayload": {"count": 8, "entitlementId": "vqwVjwYL"}, "type": "FULFILL_ITEM"}], "userId": "wxlMH3cV"}], "metadata": {"07VjVcCV": {}, "MVCIFqTt": {}, "2gLdwwvo": {}}, "needPreCheck": false, "transactionId": "yminik6G", "type": "No7DCc7R"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op Commit \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 235 'Commit' test.out

#- 236 GetTradeHistoryByCriteria
$CLI_EXE \
    --sn platform \
    --op GetTradeHistoryByCriteria \
    --namespace $AB_NAMESPACE \
    --limit '44' \
    --offset '28' \
    --status 'SUCCESS' \
    --type 'mLrZmI2v' \
    --userId 'WfK9vaxs' \
    > test.out 2>&1
eval_tap $? 236 'GetTradeHistoryByCriteria' test.out

#- 237 GetTradeHistoryByTransactionId
$CLI_EXE \
    --sn platform \
    --op GetTradeHistoryByTransactionId \
    --namespace $AB_NAMESPACE \
    --transactionId 'EF7Vlz7g' \
    > test.out 2>&1
eval_tap $? 237 'GetTradeHistoryByTransactionId' test.out

#- 238 UnlockSteamUserAchievement
# body param: body
echo '{"achievements": [{"id": "4aRtbtPR", "value": 39}, {"id": "njZ65f88", "value": 87}, {"id": "BOlABQaU", "value": 11}], "steamUserId": "OhvPNQTA"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UnlockSteamUserAchievement \
    --namespace $AB_NAMESPACE \
    --userId 'WAPBupXI' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 238 'UnlockSteamUserAchievement' test.out

#- 239 GetXblUserAchievements
$CLI_EXE \
    --sn platform \
    --op GetXblUserAchievements \
    --namespace $AB_NAMESPACE \
    --userId 'usHTVDWy' \
    --xboxUserId '8qxrla5B' \
    > test.out 2>&1
eval_tap $? 239 'GetXblUserAchievements' test.out

#- 240 UpdateXblUserAchievement
# body param: body
echo '{"achievements": [{"id": "CoFxUchf", "percentComplete": 100}, {"id": "oQY9SoWH", "percentComplete": 65}, {"id": "Q4lDveEM", "percentComplete": 70}], "serviceConfigId": "q3kW3hKS", "titleId": "SBHYNciI", "xboxUserId": "qDpi2lwd"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXblUserAchievement \
    --namespace $AB_NAMESPACE \
    --userId 'A7vrSXmA' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 240 'UpdateXblUserAchievement' test.out

#- 241 AnonymizeCampaign
$CLI_EXE \
    --sn platform \
    --op AnonymizeCampaign \
    --namespace $AB_NAMESPACE \
    --userId 'w3dxwIJQ' \
    > test.out 2>&1
eval_tap $? 241 'AnonymizeCampaign' test.out

#- 242 AnonymizeEntitlement
$CLI_EXE \
    --sn platform \
    --op AnonymizeEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'i7tmRg2Z' \
    > test.out 2>&1
eval_tap $? 242 'AnonymizeEntitlement' test.out

#- 243 AnonymizeFulfillment
$CLI_EXE \
    --sn platform \
    --op AnonymizeFulfillment \
    --namespace $AB_NAMESPACE \
    --userId 'Q6Sb9sEb' \
    > test.out 2>&1
eval_tap $? 243 'AnonymizeFulfillment' test.out

#- 244 AnonymizeIntegration
$CLI_EXE \
    --sn platform \
    --op AnonymizeIntegration \
    --namespace $AB_NAMESPACE \
    --userId 'Fp2qeY9l' \
    > test.out 2>&1
eval_tap $? 244 'AnonymizeIntegration' test.out

#- 245 AnonymizeOrder
$CLI_EXE \
    --sn platform \
    --op AnonymizeOrder \
    --namespace $AB_NAMESPACE \
    --userId 'jnSFS0Sx' \
    > test.out 2>&1
eval_tap $? 245 'AnonymizeOrder' test.out

#- 246 AnonymizePayment
$CLI_EXE \
    --sn platform \
    --op AnonymizePayment \
    --namespace $AB_NAMESPACE \
    --userId '86CvyHtQ' \
    > test.out 2>&1
eval_tap $? 246 'AnonymizePayment' test.out

#- 247 AnonymizeRevocation
$CLI_EXE \
    --sn platform \
    --op AnonymizeRevocation \
    --namespace $AB_NAMESPACE \
    --userId 'olucc0Ad' \
    > test.out 2>&1
eval_tap $? 247 'AnonymizeRevocation' test.out

#- 248 AnonymizeSubscription
$CLI_EXE \
    --sn platform \
    --op AnonymizeSubscription \
    --namespace $AB_NAMESPACE \
    --userId 'P945nyZM' \
    > test.out 2>&1
eval_tap $? 248 'AnonymizeSubscription' test.out

#- 249 AnonymizeWallet
$CLI_EXE \
    --sn platform \
    --op AnonymizeWallet \
    --namespace $AB_NAMESPACE \
    --userId 'eWQGiTfl' \
    > test.out 2>&1
eval_tap $? 249 'AnonymizeWallet' test.out

#- 250 GetUserDLCByPlatform
$CLI_EXE \
    --sn platform \
    --op GetUserDLCByPlatform \
    --namespace $AB_NAMESPACE \
    --userId 'bGlwJ7hT' \
    --type 'XBOX' \
    > test.out 2>&1
eval_tap $? 250 'GetUserDLCByPlatform' test.out

#- 251 GetUserDLC
$CLI_EXE \
    --sn platform \
    --op GetUserDLC \
    --namespace $AB_NAMESPACE \
    --userId 'ZZdroIb6' \
    --includeAllNamespaces 'true' \
    --status 'FULFILLED' \
    --type 'STEAM' \
    > test.out 2>&1
eval_tap $? 251 'GetUserDLC' test.out

#- 252 QueryUserEntitlements
$CLI_EXE \
    --sn platform \
    --op QueryUserEntitlements \
    --namespace $AB_NAMESPACE \
    --userId 'G7tCqypy' \
    --activeOnly 'true' \
    --appType 'SOFTWARE' \
    --collectionId 'svjyejKL' \
    --entitlementClazz 'ENTITLEMENT' \
    --entitlementName 'jzfVJicF' \
    --features '["9erWJDNr", "D5D6ZOxq", "bqqpIYPu"]' \
    --fuzzyMatchName 'true' \
    --ignoreActiveDate 'false' \
    --itemId '["ut5wQowd", "QLNPO7pm", "1U9jGwor"]' \
    --limit '33' \
    --offset '79' \
    --origin 'GooglePlay' \
    > test.out 2>&1
eval_tap $? 252 'QueryUserEntitlements' test.out

#- 253 GrantUserEntitlement
# body param: body
echo '[{"collectionId": "1SkhzHYA", "endDate": "1998-01-15T00:00:00Z", "grantedCode": "CAL3VzJG", "itemId": "eAfCJ4Lz", "itemNamespace": "rCBYryeL", "language": "vm-hqzv_uC", "metadata": {"nzMH290D": {}, "Qb6OKkx1": {}, "FK6fShZH": {}}, "origin": "GooglePlay", "quantity": 78, "region": "DSuNzPFR", "source": "REFERRAL_BONUS", "startDate": "1980-06-26T00:00:00Z", "storeId": "kmKvOcc5"}, {"collectionId": "8gcrRwKN", "endDate": "1999-06-02T00:00:00Z", "grantedCode": "G4dGOMe8", "itemId": "dAdD2Pu6", "itemNamespace": "MTzao0cM", "language": "ol-vwlM_Me", "metadata": {"qt1XPJgN": {}, "elAclXYw": {}, "Iz7ABnsU": {}}, "origin": "Nintendo", "quantity": 25, "region": "AtlIGtEE", "source": "OTHER", "startDate": "1980-07-29T00:00:00Z", "storeId": "ybr4tbUH"}, {"collectionId": "gCTfTqiA", "endDate": "1994-01-01T00:00:00Z", "grantedCode": "ID2OhAtu", "itemId": "IJBxBvN0", "itemNamespace": "mIVUPKAz", "language": "rbuS", "metadata": {"aMQLdPAH": {}, "84BI7ahR": {}, "s8J8MT2w": {}}, "origin": "Nintendo", "quantity": 5, "region": "POT6LVhW", "source": "IAP", "startDate": "1989-09-11T00:00:00Z", "storeId": "VKyykvER"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op GrantUserEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'ILwi7nya' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 253 'GrantUserEntitlement' test.out

#- 254 GetUserAppEntitlementByAppId
$CLI_EXE \
    --sn platform \
    --op GetUserAppEntitlementByAppId \
    --namespace $AB_NAMESPACE \
    --userId 'D3F5wdnB' \
    --activeOnly 'false' \
    --appId 'UDmUj8yK' \
    > test.out 2>&1
eval_tap $? 254 'GetUserAppEntitlementByAppId' test.out

#- 255 QueryUserEntitlementsByAppType
$CLI_EXE \
    --sn platform \
    --op QueryUserEntitlementsByAppType \
    --namespace $AB_NAMESPACE \
    --userId '7Za8ZtJZ' \
    --activeOnly 'false' \
    --limit '89' \
    --offset '91' \
    --appType 'GAME' \
    > test.out 2>&1
eval_tap $? 255 'QueryUserEntitlementsByAppType' test.out

#- 256 GetUserEntitlementsByIds
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementsByIds \
    --namespace $AB_NAMESPACE \
    --userId '30hu7aVW' \
    --ids '["6fenL5TY", "1P7P1Tzt", "uY3lFYQz"]' \
    > test.out 2>&1
eval_tap $? 256 'GetUserEntitlementsByIds' test.out

#- 257 GetUserEntitlementByItemId
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'Pht2XQAh' \
    --activeOnly 'true' \
    --entitlementClazz 'CODE' \
    --platform 'p6zVjv8o' \
    --itemId 'ZdPV7llk' \
    > test.out 2>&1
eval_tap $? 257 'GetUserEntitlementByItemId' test.out

#- 258 GetUserActiveEntitlementsByItemIds
$CLI_EXE \
    --sn platform \
    --op GetUserActiveEntitlementsByItemIds \
    --namespace $AB_NAMESPACE \
    --userId '9WeDHv7A' \
    --ids '["6Z6R4mTL", "wi0YCsGn", "JpyjoDFm"]' \
    --platform 'JY4GPd2n' \
    > test.out 2>&1
eval_tap $? 258 'GetUserActiveEntitlementsByItemIds' test.out

#- 259 GetUserEntitlementBySku
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementBySku \
    --namespace $AB_NAMESPACE \
    --userId 'S5kzME9n' \
    --activeOnly 'true' \
    --entitlementClazz 'CODE' \
    --platform 'm8Kf4x6L' \
    --sku 'eZUzkyoC' \
    > test.out 2>&1
eval_tap $? 259 'GetUserEntitlementBySku' test.out

#- 260 ExistsAnyUserActiveEntitlement
$CLI_EXE \
    --sn platform \
    --op ExistsAnyUserActiveEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'ZwAYMnnE' \
    --appIds '["j0M1FjAe", "4vVopkNB", "5xkc1nG7"]' \
    --itemIds '["NQLbBs9D", "Fyt6abOG", "hzIOrkcr"]' \
    --platform 'wR0lidOm' \
    --skus '["vqPf4ued", "mh0ZYGpF", "uYJo1UIV"]' \
    > test.out 2>&1
eval_tap $? 260 'ExistsAnyUserActiveEntitlement' test.out

#- 261 ExistsAnyUserActiveEntitlementByItemIds
$CLI_EXE \
    --sn platform \
    --op ExistsAnyUserActiveEntitlementByItemIds \
    --namespace $AB_NAMESPACE \
    --userId '0C3YZDGt' \
    --platform 'eq5lBnYg' \
    --itemIds '["ACn8Wlca", "0UTAV8Si", "vqAcTYlr"]' \
    > test.out 2>&1
eval_tap $? 261 'ExistsAnyUserActiveEntitlementByItemIds' test.out

#- 262 GetUserAppEntitlementOwnershipByAppId
$CLI_EXE \
    --sn platform \
    --op GetUserAppEntitlementOwnershipByAppId \
    --namespace $AB_NAMESPACE \
    --userId '2Z4popbT' \
    --appId 'wefUGdFa' \
    > test.out 2>&1
eval_tap $? 262 'GetUserAppEntitlementOwnershipByAppId' test.out

#- 263 GetUserEntitlementOwnershipByItemId
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementOwnershipByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'g8O5TAbY' \
    --entitlementClazz 'LOOTBOX' \
    --platform 'ThvB5VEr' \
    --itemId 'Iu2U6h1q' \
    > test.out 2>&1
eval_tap $? 263 'GetUserEntitlementOwnershipByItemId' test.out

#- 264 GetUserEntitlementOwnershipByItemIds
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementOwnershipByItemIds \
    --namespace $AB_NAMESPACE \
    --userId 'EGFYT817' \
    --ids '["XkIbKEAd", "XyyGcHPs", "hfu2UQH5"]' \
    --platform 'XVUNULuR' \
    > test.out 2>&1
eval_tap $? 264 'GetUserEntitlementOwnershipByItemIds' test.out

#- 265 GetUserEntitlementOwnershipBySku
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementOwnershipBySku \
    --namespace $AB_NAMESPACE \
    --userId 'hJNPjKT7' \
    --entitlementClazz 'MEDIA' \
    --platform 'kLZ82FNQ' \
    --sku 'e9e9hSab' \
    > test.out 2>&1
eval_tap $? 265 'GetUserEntitlementOwnershipBySku' test.out

#- 266 RevokeAllEntitlements
$CLI_EXE \
    --sn platform \
    --op RevokeAllEntitlements \
    --namespace $AB_NAMESPACE \
    --userId 'BYDPCAwc' \
    > test.out 2>&1
eval_tap $? 266 'RevokeAllEntitlements' test.out

#- 267 RevokeUserEntitlements
$CLI_EXE \
    --sn platform \
    --op RevokeUserEntitlements \
    --namespace $AB_NAMESPACE \
    --userId 'cEnMndZB' \
    --entitlementIds '7kj98s0C' \
    > test.out 2>&1
eval_tap $? 267 'RevokeUserEntitlements' test.out

#- 268 GetUserEntitlement
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlement \
    --entitlementId '4Eh9f1e4' \
    --namespace $AB_NAMESPACE \
    --userId 'sN3rafGw' \
    > test.out 2>&1
eval_tap $? 268 'GetUserEntitlement' test.out

#- 269 UpdateUserEntitlement
# body param: body
echo '{"collectionId": "tboZYDlR", "endDate": "1989-06-15T00:00:00Z", "nullFieldList": ["zrjBVww1", "Kl8Z5TcD", "YJAJzvjL"], "origin": "Twitch", "reason": "CLFhFnDS", "startDate": "1988-02-24T00:00:00Z", "status": "INACTIVE", "useCount": 76}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateUserEntitlement \
    --entitlementId 'X1qktdXf' \
    --namespace $AB_NAMESPACE \
    --userId 'TQviEGLC' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 269 'UpdateUserEntitlement' test.out

#- 270 ConsumeUserEntitlement
# body param: body
echo '{"metadata": {"xVRsdNOA": {}, "idPBUR5v": {}, "c1ZqwXdG": {}}, "options": ["fjfShAok", "9mQjvP1P", "uxxotgkc"], "platform": "UXQz3VUw", "requestId": "K9S4T0FH", "useCount": 81}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ConsumeUserEntitlement \
    --entitlementId 'asTnA40U' \
    --namespace $AB_NAMESPACE \
    --userId 'yTBvLSWm' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 270 'ConsumeUserEntitlement' test.out

#- 271 DisableUserEntitlement
$CLI_EXE \
    --sn platform \
    --op DisableUserEntitlement \
    --entitlementId 'A4H7QikC' \
    --namespace $AB_NAMESPACE \
    --userId 'KpF6vmLv' \
    > test.out 2>&1
eval_tap $? 271 'DisableUserEntitlement' test.out

#- 272 EnableUserEntitlement
$CLI_EXE \
    --sn platform \
    --op EnableUserEntitlement \
    --entitlementId '6IXZlS2n' \
    --namespace $AB_NAMESPACE \
    --userId 'sbSXdYH6' \
    > test.out 2>&1
eval_tap $? 272 'EnableUserEntitlement' test.out

#- 273 GetUserEntitlementHistories
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementHistories \
    --entitlementId '8yxpWde2' \
    --namespace $AB_NAMESPACE \
    --userId 'aZfJxb8R' \
    > test.out 2>&1
eval_tap $? 273 'GetUserEntitlementHistories' test.out

#- 274 RevokeUserEntitlement
# body param: body
echo '{"metadata": {"0uTn5MHJ": {}, "fLkiyqrl": {}, "QXfmdra6": {}}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RevokeUserEntitlement \
    --entitlementId '6VaAkUT8' \
    --namespace $AB_NAMESPACE \
    --userId 'fJx9lruN' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 274 'RevokeUserEntitlement' test.out

#- 275 RevokeUserEntitlementByUseCount
# body param: body
echo '{"reason": "IMo18q2v", "useCount": 99}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RevokeUserEntitlementByUseCount \
    --entitlementId 'zEiFQ4Eu' \
    --namespace $AB_NAMESPACE \
    --userId 'RpibJmav' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 275 'RevokeUserEntitlementByUseCount' test.out

#- 276 PreCheckRevokeUserEntitlementByUseCount
$CLI_EXE \
    --sn platform \
    --op PreCheckRevokeUserEntitlementByUseCount \
    --entitlementId 'KEh893Td' \
    --namespace $AB_NAMESPACE \
    --userId 'HUChG9vj' \
    --quantity '55' \
    > test.out 2>&1
eval_tap $? 276 'PreCheckRevokeUserEntitlementByUseCount' test.out

#- 277 RevokeUseCount
eval_tap 0 277 'RevokeUseCount # SKIP deprecated' test.out

#- 278 SellUserEntitlement
# body param: body
echo '{"platform": "D2lsGJBw", "requestId": "0c01EerZ", "useCount": 80}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SellUserEntitlement \
    --entitlementId 'aSw4Uc0s' \
    --namespace $AB_NAMESPACE \
    --userId '4k8dLhhN' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 278 'SellUserEntitlement' test.out

#- 279 FulfillItem
# body param: body
echo '{"duration": 10, "endDate": "1984-12-09T00:00:00Z", "entitlementCollectionId": "tfg5Z1aJ", "entitlementOrigin": "System", "itemId": "Dh7jbnnN", "itemSku": "j0vfOL4m", "language": "QqLLmp47", "metadata": {"pGiG4GdD": {}, "X5yInvOw": {}, "nAiWpUeY": {}}, "order": {"currency": {"currencyCode": "KisOA0xQ", "currencySymbol": "0msa3FAN", "currencyType": "VIRTUAL", "decimals": 61, "namespace": "YqztGPph"}, "ext": {"Zj77R75h": {}, "REmVLZk6": {}, "ZCGk9vAt": {}}, "free": false}, "orderNo": "h0TBpPiL", "origin": "Xbox", "overrideBundleItemQty": {"JZXVoJ7P": 74, "343kLrOJ": 54, "u1E7ojga": 90}, "quantity": 49, "region": "TTTBtGkj", "source": "ORDER_REVOCATION", "startDate": "1982-03-02T00:00:00Z", "storeId": "xGSrnaoS"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op FulfillItem \
    --namespace $AB_NAMESPACE \
    --userId 'Nk7R1nbu' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 279 'FulfillItem' test.out

#- 280 RedeemCode
# body param: body
echo '{"code": "M6PqYfHU", "language": "OQkq", "region": "EA4X8iYg"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RedeemCode \
    --namespace $AB_NAMESPACE \
    --userId 'NMu7juGz' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 280 'RedeemCode' test.out

#- 281 PreCheckFulfillItem
# body param: body
echo '{"itemId": "AnVDM9Ms", "itemSku": "g1VM9MIp", "quantity": 53}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PreCheckFulfillItem \
    --namespace $AB_NAMESPACE \
    --userId 'mRMvBLUC' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 281 'PreCheckFulfillItem' test.out

#- 282 FulfillRewards
# body param: body
echo '{"entitlementCollectionId": "0hDO8pYF", "entitlementOrigin": "Nintendo", "metadata": {"S1wZITK0": {}, "iQDM8IbY": {}, "ikPZxhWa": {}}, "origin": "Playstation", "rewards": [{"currency": {"currencyCode": "AoIcS4uL", "namespace": "mVeAf6p4"}, "item": {"itemId": "BFPjJnJW", "itemName": "XMp72Ueq", "itemSku": "MNRJAXpu", "itemType": "FA3kKFDz"}, "quantity": 12, "type": "ITEM"}, {"currency": {"currencyCode": "UqgQWTvL", "namespace": "7SoOHscl"}, "item": {"itemId": "V202XaGE", "itemName": "mLns7ITh", "itemSku": "QOV1x7PC", "itemType": "nZhL6Se0"}, "quantity": 24, "type": "ITEM"}, {"currency": {"currencyCode": "3nJC0ztF", "namespace": "fBQIsNT4"}, "item": {"itemId": "dmYJbiCi", "itemName": "0cHNKMMM", "itemSku": "jg9jG8dy", "itemType": "ETTH5eyi"}, "quantity": 73, "type": "CURRENCY"}], "source": "CONSUME_ENTITLEMENT", "transactionId": "zFNC91AK"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op FulfillRewards \
    --namespace $AB_NAMESPACE \
    --userId 'PU9p9FYd' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 282 'FulfillRewards' test.out

#- 283 QueryUserIAPOrders
$CLI_EXE \
    --sn platform \
    --op QueryUserIAPOrders \
    --namespace $AB_NAMESPACE \
    --userId '9pdcdxlO' \
    --endTime 'Xitr3w4X' \
    --limit '21' \
    --offset '78' \
    --productId '5qFnu9JN' \
    --startTime 'NsGYWJm9' \
    --status 'VERIFIED' \
    --type 'XBOX' \
    > test.out 2>&1
eval_tap $? 283 'QueryUserIAPOrders' test.out

#- 284 QueryAllUserIAPOrders
$CLI_EXE \
    --sn platform \
    --op QueryAllUserIAPOrders \
    --namespace $AB_NAMESPACE \
    --userId 'v7S45K9a' \
    > test.out 2>&1
eval_tap $? 284 'QueryAllUserIAPOrders' test.out

#- 285 QueryUserIAPConsumeHistory
$CLI_EXE \
    --sn platform \
    --op QueryUserIAPConsumeHistory \
    --namespace $AB_NAMESPACE \
    --userId '7YWw3pwD' \
    --endTime '8gMlRbpq' \
    --limit '91' \
    --offset '26' \
    --startTime 'YBHE6Lh1' \
    --status 'FAIL' \
    --type 'XBOX' \
    > test.out 2>&1
eval_tap $? 285 'QueryUserIAPConsumeHistory' test.out

#- 286 MockFulfillIAPItem
# body param: body
echo '{"itemIdentityType": "ITEM_SKU", "language": "xzxf_551", "productId": "051YU5pV", "region": "4RJWJrN3", "transactionId": "qIkecCUc", "type": "OCULUS"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op MockFulfillIAPItem \
    --namespace $AB_NAMESPACE \
    --userId '0vXEvNsO' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 286 'MockFulfillIAPItem' test.out

#- 287 AdminGetIAPOrderLineItems
$CLI_EXE \
    --sn platform \
    --op AdminGetIAPOrderLineItems \
    --iapOrderNo 'VGfYAYRo' \
    --namespace $AB_NAMESPACE \
    --userId '10Fl7oR6' \
    > test.out 2>&1
eval_tap $? 287 'AdminGetIAPOrderLineItems' test.out

#- 288 AdminSyncSteamAbnormalTransaction
$CLI_EXE \
    --sn platform \
    --op AdminSyncSteamAbnormalTransaction \
    --namespace $AB_NAMESPACE \
    --userId 'wN5haYRK' \
    > test.out 2>&1
eval_tap $? 288 'AdminSyncSteamAbnormalTransaction' test.out

#- 289 AdminSyncSteamIAPByTransaction
# body param: body
echo '{"orderId": "I745RvDv"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op AdminSyncSteamIAPByTransaction \
    --namespace $AB_NAMESPACE \
    --userId 'OsJcy5jv' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 289 'AdminSyncSteamIAPByTransaction' test.out

#- 290 QueryUserThirdPartySubscription
$CLI_EXE \
    --sn platform \
    --op QueryUserThirdPartySubscription \
    --namespace $AB_NAMESPACE \
    --userId 'JuaSkkPF' \
    --activeOnly 'true' \
    --groupId '4pJmgJzb' \
    --limit '46' \
    --offset '63' \
    --platform 'XBOX' \
    --productId 'uCxJPWQ9' \
    > test.out 2>&1
eval_tap $? 290 'QueryUserThirdPartySubscription' test.out

#- 291 GetThirdPartyPlatformSubscriptionOwnershipByGroupId
$CLI_EXE \
    --sn platform \
    --op GetThirdPartyPlatformSubscriptionOwnershipByGroupId \
    --namespace $AB_NAMESPACE \
    --platform 'PLAYSTATION' \
    --userId '6g5vH2MW' \
    --groupId 'YTttCa5t' \
    > test.out 2>&1
eval_tap $? 291 'GetThirdPartyPlatformSubscriptionOwnershipByGroupId' test.out

#- 292 GetThirdPartyPlatformSubscriptionOwnershipByProductId
$CLI_EXE \
    --sn platform \
    --op GetThirdPartyPlatformSubscriptionOwnershipByProductId \
    --namespace $AB_NAMESPACE \
    --platform 'STEAM' \
    --userId 'izxkPnRb' \
    --productId 'AgIxrbNX' \
    > test.out 2>&1
eval_tap $? 292 'GetThirdPartyPlatformSubscriptionOwnershipByProductId' test.out

#- 293 QueryUserThirdPartySubscriptionTransactions
$CLI_EXE \
    --sn platform \
    --op QueryUserThirdPartySubscriptionTransactions \
    --namespace $AB_NAMESPACE \
    --userId '4qQCwW90' \
    --activeOnly 'false' \
    --groupId 'cktkX488' \
    --limit '29' \
    --offset '61' \
    --platform 'OCULUS' \
    --productId '0870OiFn' \
    > test.out 2>&1
eval_tap $? 293 'QueryUserThirdPartySubscriptionTransactions' test.out

#- 294 GetThirdPartySubscriptionDetails
$CLI_EXE \
    --sn platform \
    --op GetThirdPartySubscriptionDetails \
    --id 'nwWwgMOj' \
    --namespace $AB_NAMESPACE \
    --userId '8LA77Gir' \
    > test.out 2>&1
eval_tap $? 294 'GetThirdPartySubscriptionDetails' test.out

#- 295 GetSubscriptionHistory
$CLI_EXE \
    --sn platform \
    --op GetSubscriptionHistory \
    --id 'XfyUri1a' \
    --namespace $AB_NAMESPACE \
    --userId 'Mw5uAJbh' \
    --limit '38' \
    --offset '69' \
    > test.out 2>&1
eval_tap $? 295 'GetSubscriptionHistory' test.out

#- 296 SyncSubscriptionTransaction
$CLI_EXE \
    --sn platform \
    --op SyncSubscriptionTransaction \
    --id 'eS8oVnUk' \
    --namespace $AB_NAMESPACE \
    --userId 'gE9mypP9' \
    > test.out 2>&1
eval_tap $? 296 'SyncSubscriptionTransaction' test.out

#- 297 GetThirdPartyUserSubscriptionDetails
$CLI_EXE \
    --sn platform \
    --op GetThirdPartyUserSubscriptionDetails \
    --id 'tRt3UeQO' \
    --namespace $AB_NAMESPACE \
    --userId 'bQ5VYUet' \
    > test.out 2>&1
eval_tap $? 297 'GetThirdPartyUserSubscriptionDetails' test.out

#- 298 SyncSubscription
$CLI_EXE \
    --sn platform \
    --op SyncSubscription \
    --id 'KghkUDEw' \
    --namespace $AB_NAMESPACE \
    --userId 'XgjsyE9r' \
    > test.out 2>&1
eval_tap $? 298 'SyncSubscription' test.out

#- 299 QueryUserOrders
$CLI_EXE \
    --sn platform \
    --op QueryUserOrders \
    --namespace $AB_NAMESPACE \
    --userId 'X7riIbeM' \
    --discounted 'true' \
    --itemId 'zFXQyW1L' \
    --limit '44' \
    --offset '4' \
    --status 'CLOSED' \
    > test.out 2>&1
eval_tap $? 299 'QueryUserOrders' test.out

#- 300 AdminCreateUserOrder
# body param: body
echo '{"currencyCode": "kooYGW1U", "currencyNamespace": "jDFDDBI7", "discountCodes": ["WiVR88Ii", "Fw8mBNb0", "gmP6t7iM"], "discountedPrice": 82, "entitlementPlatform": "Oculus", "ext": {"6prQGFWl": {}, "3UiGp4HZ": {}, "JIK5Yev4": {}}, "itemId": "t3I7CgXJ", "language": "hLwfrfJz", "options": {"skipPriceValidation": true}, "platform": "Epic", "price": 61, "quantity": 1, "region": "3mFuv35l", "returnUrl": "Y54OtVRA", "sandbox": true, "sectionId": "22qwhxkX"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op AdminCreateUserOrder \
    --namespace $AB_NAMESPACE \
    --userId '6aP1VQ5d' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 300 'AdminCreateUserOrder' test.out

#- 301 CountOfPurchasedItem
$CLI_EXE \
    --sn platform \
    --op CountOfPurchasedItem \
    --namespace $AB_NAMESPACE \
    --userId 'QXfVvq5j' \
    --itemId 'td8Cfx6u' \
    > test.out 2>&1
eval_tap $? 301 'CountOfPurchasedItem' test.out

#- 302 GetUserOrder
$CLI_EXE \
    --sn platform \
    --op GetUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'G3KOBWLF' \
    --userId 'gVyRFyC9' \
    > test.out 2>&1
eval_tap $? 302 'GetUserOrder' test.out

#- 303 UpdateUserOrderStatus
# body param: body
echo '{"status": "CHARGED", "statusReason": "klM6N3fU"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateUserOrderStatus \
    --namespace $AB_NAMESPACE \
    --orderNo 'DSqhnK53' \
    --userId 'dE9rv11i' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 303 'UpdateUserOrderStatus' test.out

#- 304 FulfillUserOrder
$CLI_EXE \
    --sn platform \
    --op FulfillUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo '5k2wvlyD' \
    --userId 'H9nAbHim' \
    > test.out 2>&1
eval_tap $? 304 'FulfillUserOrder' test.out

#- 305 GetUserOrderGrant
eval_tap 0 305 'GetUserOrderGrant # SKIP deprecated' test.out

#- 306 GetUserOrderHistories
$CLI_EXE \
    --sn platform \
    --op GetUserOrderHistories \
    --namespace $AB_NAMESPACE \
    --orderNo 'rwA9YlLZ' \
    --userId 'E6pg4HFP' \
    > test.out 2>&1
eval_tap $? 306 'GetUserOrderHistories' test.out

#- 307 ProcessUserOrderNotification
# body param: body
echo '{"additionalData": {"cardSummary": "bpM74yPU"}, "authorisedTime": "1987-01-06T00:00:00Z", "chargebackReversedTime": "1979-01-02T00:00:00Z", "chargebackTime": "1974-05-17T00:00:00Z", "chargedTime": "1980-06-18T00:00:00Z", "createdTime": "1976-09-10T00:00:00Z", "currency": {"currencyCode": "geQLmAum", "currencySymbol": "vZLdZIm5", "currencyType": "REAL", "decimals": 97, "namespace": "0pY2meMg"}, "customParameters": {"LOvqognz": {}, "6OuguBE3": {}, "cEFkEaLc": {}}, "extOrderNo": "woQLIBM3", "extTxId": "TfFDVVjf", "extUserId": "eKmDb81d", "issuedAt": "1990-09-23T00:00:00Z", "metadata": {"QT4KaoCC": "6NovMGYT", "3lUbcvH1": "HHxTgMgo", "0Dm4iloj": "cqeJSSXd"}, "namespace": "ncUtSaWT", "nonceStr": "6bVO52El", "paymentData": {"discountAmount": 100, "discountCode": "KA9QbCvy", "subtotalPrice": 75, "tax": 45, "totalPrice": 96}, "paymentMethod": "JZS78NaR", "paymentMethodFee": 51, "paymentOrderNo": "BpOt2dXc", "paymentProvider": "WXPAY", "paymentProviderFee": 89, "paymentStationUrl": "z5V6qHXE", "price": 36, "refundedTime": "1977-09-15T00:00:00Z", "salesTax": 71, "sandbox": false, "sku": "Cw9oZz4s", "status": "CHARGEBACK", "statusReason": "4zhGJLhF", "subscriptionId": "s7KNgTDJ", "subtotalPrice": 20, "targetNamespace": "6aqsoBzD", "targetUserId": "CYfIic9L", "tax": 9, "totalPrice": 0, "totalTax": 78, "txEndTime": "1979-11-14T00:00:00Z", "type": "kTK4fYqY", "userId": "oW7BTLA1", "vat": 56}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ProcessUserOrderNotification \
    --namespace $AB_NAMESPACE \
    --orderNo 'e2vanV9g' \
    --userId 'c55stXf1' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 307 'ProcessUserOrderNotification' test.out

#- 308 DownloadUserOrderReceipt
$CLI_EXE \
    --sn platform \
    --op DownloadUserOrderReceipt \
    --namespace $AB_NAMESPACE \
    --orderNo 'ogj8ZXEA' \
    --userId 'VoYSvu5L' \
    > test.out 2>&1
eval_tap $? 308 'DownloadUserOrderReceipt' test.out

#- 309 CreateUserPaymentOrder
# body param: body
echo '{"currencyCode": "m7NPhRUg", "currencyNamespace": "EfzEnrQ1", "customParameters": {"22wNk5gD": {}, "1x7bRRia": {}, "6GCqDNBS": {}}, "description": "st5krPps", "extOrderNo": "P4JqnEwm", "extUserId": "q0l2nnrx", "itemType": "SEASON", "language": "VaeE", "metadata": {"Iv2u3d3b": "acr9fvow", "fMHi9TZt": "0egSroz5", "r86KxUGE": "J68Eg29X"}, "notifyUrl": "ThVSgmsr", "omitNotification": false, "platform": "aCnCOas9", "price": 98, "recurringPaymentOrderNo": "IRw3KZ9J", "region": "Y95An1lH", "returnUrl": "KfyfX8OS", "sandbox": false, "sku": "aOV4YevS", "subscriptionId": "V2BudmRH", "title": "aRJbMCpN"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateUserPaymentOrder \
    --namespace $AB_NAMESPACE \
    --userId 'npiOwofG' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 309 'CreateUserPaymentOrder' test.out

#- 310 RefundUserPaymentOrder
# body param: body
echo '{"description": "PcphKm8f"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RefundUserPaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'k2JKTXIa' \
    --userId 'bkQBdWNX' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 310 'RefundUserPaymentOrder' test.out

#- 311 GetUserPlatformAccountClosureHistories
$CLI_EXE \
    --sn platform \
    --op GetUserPlatformAccountClosureHistories \
    --namespace $AB_NAMESPACE \
    --userId 'aRiUE9Fj' \
    > test.out 2>&1
eval_tap $? 311 'GetUserPlatformAccountClosureHistories' test.out

#- 312 ApplyUserRedemption
# body param: body
echo '{"code": "tcBiwqSZ", "orderNo": "BRzLeGGI"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ApplyUserRedemption \
    --namespace $AB_NAMESPACE \
    --userId 'IKkwfhM1' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 312 'ApplyUserRedemption' test.out

#- 313 DoRevocation
# body param: body
echo '{"meta": {"2e4UKABl": {}, "rEeAmvXj": {}, "SflpXtFD": {}}, "reason": "x3gVTRiQ", "requestId": "uYdInaFL", "revokeEntries": [{"currency": {"balanceOrigin": "Twitch", "currencyCode": "FuAHpgd1", "namespace": "fFxexNAi"}, "entitlement": {"entitlementId": "Xcp5UP30"}, "item": {"entitlementOrigin": "Epic", "itemIdentity": "jRjE2Z3A", "itemIdentityType": "ITEM_ID", "origin": "Steam"}, "quantity": 49, "type": "CURRENCY"}, {"currency": {"balanceOrigin": "Playstation", "currencyCode": "IbwPsmZk", "namespace": "AEp40ZQ1"}, "entitlement": {"entitlementId": "mVCJ4WJG"}, "item": {"entitlementOrigin": "Other", "itemIdentity": "SssvKw5p", "itemIdentityType": "ITEM_ID", "origin": "Steam"}, "quantity": 44, "type": "CURRENCY"}, {"currency": {"balanceOrigin": "Playstation", "currencyCode": "VBzxsRXI", "namespace": "0CRONaTb"}, "entitlement": {"entitlementId": "SQU68uxS"}, "item": {"entitlementOrigin": "Other", "itemIdentity": "nIy8sgOZ", "itemIdentityType": "ITEM_ID", "origin": "Nintendo"}, "quantity": 21, "type": "CURRENCY"}], "source": "OTHER", "transactionId": "ir2Czv0A"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op DoRevocation \
    --namespace $AB_NAMESPACE \
    --userId 'aJ8luXuH' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 313 'DoRevocation' test.out

#- 314 RegisterXblSessions
# body param: body
echo '{"gameSessionId": "NTipRAfl", "payload": {"m8TfLNcf": {}, "wzJUsmib": {}, "PhsaA3lm": {}}, "scid": "iZe4kZTM", "sessionTemplateName": "bFAwQjCT"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RegisterXblSessions \
    --namespace $AB_NAMESPACE \
    --userId 'SqWNVkA7' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 314 'RegisterXblSessions' test.out

#- 315 QueryUserSubscriptions
$CLI_EXE \
    --sn platform \
    --op QueryUserSubscriptions \
    --namespace $AB_NAMESPACE \
    --userId 'BCS5NTAl' \
    --chargeStatus 'CHARGED' \
    --itemId 'Dr2j0ERz' \
    --limit '31' \
    --offset '8' \
    --sku 'zmZAqoCy' \
    --status 'EXPIRED' \
    --subscribedBy 'PLATFORM' \
    > test.out 2>&1
eval_tap $? 315 'QueryUserSubscriptions' test.out

#- 316 GetUserSubscriptionActivities
$CLI_EXE \
    --sn platform \
    --op GetUserSubscriptionActivities \
    --namespace $AB_NAMESPACE \
    --userId '3ABpyOjX' \
    --excludeSystem 'true' \
    --limit '3' \
    --offset '100' \
    --subscriptionId 'bSziOPIP' \
    > test.out 2>&1
eval_tap $? 316 'GetUserSubscriptionActivities' test.out

#- 317 PlatformSubscribeSubscription
# body param: body
echo '{"grantDays": 30, "itemId": "hXLTrFSo", "language": "6E9FjkVl", "reason": "dfRG243K", "region": "ahKB7t6V", "source": "gLPSz4Yo"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PlatformSubscribeSubscription \
    --namespace $AB_NAMESPACE \
    --userId 'pCihszWn' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 317 'PlatformSubscribeSubscription' test.out

#- 318 CheckUserSubscriptionSubscribableByItemId
$CLI_EXE \
    --sn platform \
    --op CheckUserSubscriptionSubscribableByItemId \
    --namespace $AB_NAMESPACE \
    --userId '3J2L18wU' \
    --itemId 'PalQ3upc' \
    > test.out 2>&1
eval_tap $? 318 'CheckUserSubscriptionSubscribableByItemId' test.out

#- 319 GetUserSubscription
$CLI_EXE \
    --sn platform \
    --op GetUserSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'gudiU1O5' \
    --userId '1UrpwgGG' \
    > test.out 2>&1
eval_tap $? 319 'GetUserSubscription' test.out

#- 320 DeleteUserSubscription
$CLI_EXE \
    --sn platform \
    --op DeleteUserSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'XrDfsXdI' \
    --userId 'wQ2Ac4nE' \
    > test.out 2>&1
eval_tap $? 320 'DeleteUserSubscription' test.out

#- 321 CancelSubscription
# body param: body
echo '{"immediate": false, "reason": "DKPa2GLe"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CancelSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'CGwmT9r9' \
    --userId 'Dhv55MGX' \
    --force 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 321 'CancelSubscription' test.out

#- 322 GrantDaysToSubscription
# body param: body
echo '{"grantDays": 59, "reason": "jyqwf9uX"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op GrantDaysToSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'mSDIV1KY' \
    --userId 'DJ4gWPWM' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 322 'GrantDaysToSubscription' test.out

#- 323 GetUserSubscriptionBillingHistories
$CLI_EXE \
    --sn platform \
    --op GetUserSubscriptionBillingHistories \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'Xo4bPIBF' \
    --userId 'Mo2e2SjQ' \
    --excludeFree 'false' \
    --limit '27' \
    --offset '98' \
    > test.out 2>&1
eval_tap $? 323 'GetUserSubscriptionBillingHistories' test.out

#- 324 ProcessUserSubscriptionNotification
# body param: body
echo '{"additionalData": {"cardSummary": "J8EU5OI1"}, "authorisedTime": "1995-05-24T00:00:00Z", "chargebackReversedTime": "1981-10-03T00:00:00Z", "chargebackTime": "1993-03-28T00:00:00Z", "chargedTime": "1990-11-27T00:00:00Z", "createdTime": "1999-01-01T00:00:00Z", "currency": {"currencyCode": "T3UxBBTP", "currencySymbol": "zMwRTxCl", "currencyType": "VIRTUAL", "decimals": 11, "namespace": "ndO7Mw8E"}, "customParameters": {"6tWLYyT3": {}, "iWaSqJMr": {}, "EPvV2mb6": {}}, "extOrderNo": "o4GCOX2p", "extTxId": "YPkE58WN", "extUserId": "iXzWTCSd", "issuedAt": "1992-11-22T00:00:00Z", "metadata": {"DtC91UFU": "Cd5tpL4o", "VKgQrGTw": "Pif2esq7", "d3fVc45d": "CaZgCY78"}, "namespace": "mjDMakyZ", "nonceStr": "ZbnbAfA2", "paymentData": {"discountAmount": 1, "discountCode": "lu1z5XU6", "subtotalPrice": 7, "tax": 58, "totalPrice": 65}, "paymentMethod": "njD0Qv2L", "paymentMethodFee": 18, "paymentOrderNo": "60aBmyBY", "paymentProvider": "NEONPAY", "paymentProviderFee": 56, "paymentStationUrl": "o1L7RS2I", "price": 72, "refundedTime": "1980-09-14T00:00:00Z", "salesTax": 85, "sandbox": true, "sku": "z7wsnVfl", "status": "CHARGE_FAILED", "statusReason": "igUnrn7w", "subscriptionId": "5tXrpJd3", "subtotalPrice": 39, "targetNamespace": "yInuKuDF", "targetUserId": "f8OTJT5O", "tax": 68, "totalPrice": 93, "totalTax": 55, "txEndTime": "1992-10-04T00:00:00Z", "type": "vkXFjSKN", "userId": "R2l5yHuQ", "vat": 95}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ProcessUserSubscriptionNotification \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'pyLTFSm6' \
    --userId '15t5wIML' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 324 'ProcessUserSubscriptionNotification' test.out

#- 325 AcquireUserTicket
# body param: body
echo '{"count": 67, "orderNo": "suZ6vRRM"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op AcquireUserTicket \
    --boothName '4fWAx08H' \
    --namespace $AB_NAMESPACE \
    --userId 'heG2PSli' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 325 'AcquireUserTicket' test.out

#- 326 QueryUserCurrencyWallets
$CLI_EXE \
    --sn platform \
    --op QueryUserCurrencyWallets \
    --namespace $AB_NAMESPACE \
    --userId 'MlYytE2G' \
    > test.out 2>&1
eval_tap $? 326 'QueryUserCurrencyWallets' test.out

#- 327 DebitUserWalletByCurrencyCode
# body param: body
echo '{"allowOverdraft": true, "amount": 58, "balanceOrigin": "IOS", "balanceSource": "EXPIRATION", "metadata": {"tnHUPWqN": {}, "ejkn6kgI": {}, "JMoVw3Yk": {}}, "reason": "e9QSqiug"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op DebitUserWalletByCurrencyCode \
    --currencyCode 'EuA0shZM' \
    --namespace $AB_NAMESPACE \
    --userId 'KUapjpfR' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 327 'DebitUserWalletByCurrencyCode' test.out

#- 328 ListUserCurrencyTransactions
$CLI_EXE \
    --sn platform \
    --op ListUserCurrencyTransactions \
    --currencyCode 'UTzTvQ5w' \
    --namespace $AB_NAMESPACE \
    --userId 'Cq1kr9ge' \
    --limit '58' \
    --offset '14' \
    > test.out 2>&1
eval_tap $? 328 'ListUserCurrencyTransactions' test.out

#- 329 CheckBalance
# body param: request
echo '{"amount": 33, "debitBalanceSource": "TRADE", "metadata": {"3ztXGzVF": {}, "i42SPo8O": {}, "k755oHUz": {}}, "reason": "81bx2tdr", "walletPlatform": "Steam"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CheckBalance \
    --currencyCode '9scTrNJo' \
    --namespace $AB_NAMESPACE \
    --userId 'VHVzd1kE' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 329 'CheckBalance' test.out

#- 330 CheckWallet
eval_tap 0 330 'CheckWallet # SKIP deprecated' test.out

#- 331 CreditUserWallet
# body param: body
echo '{"amount": 91, "expireAt": "1985-06-14T00:00:00Z", "metadata": {"qhUuKuIj": {}, "vBG9LgrV": {}, "ioYy01hF": {}}, "origin": "Oculus", "reason": "xJJ0OSZI", "source": "PROMOTION"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreditUserWallet \
    --currencyCode '2WXvsPxJ' \
    --namespace $AB_NAMESPACE \
    --userId 'zgaqQ7zI' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 331 'CreditUserWallet' test.out

#- 332 DebitByWalletPlatform
# body param: request
echo '{"amount": 85, "debitBalanceSource": "OTHER", "metadata": {"uE1RYZUf": {}, "LPNruLXN": {}, "N4zOcKS7": {}}, "reason": "70pIG4ho", "walletPlatform": "Oculus"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op DebitByWalletPlatform \
    --currencyCode '1y4u322u' \
    --namespace $AB_NAMESPACE \
    --userId '1XW0UEHg' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 332 'DebitByWalletPlatform' test.out

#- 333 PayWithUserWallet
# body param: body
echo '{"amount": 81, "metadata": {"SwmKFqwN": {}, "3OUDJccl": {}, "6nLR2xsI": {}}, "walletPlatform": "Other"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PayWithUserWallet \
    --currencyCode 'V9iGmUtB' \
    --namespace $AB_NAMESPACE \
    --userId 'q0pdLdB8' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 333 'PayWithUserWallet' test.out

#- 334 GetUserWallet
eval_tap 0 334 'GetUserWallet # SKIP deprecated' test.out

#- 335 DebitUserWallet
eval_tap 0 335 'DebitUserWallet # SKIP deprecated' test.out

#- 336 DisableUserWallet
eval_tap 0 336 'DisableUserWallet # SKIP deprecated' test.out

#- 337 EnableUserWallet
eval_tap 0 337 'EnableUserWallet # SKIP deprecated' test.out

#- 338 ListUserWalletTransactions
eval_tap 0 338 'ListUserWalletTransactions # SKIP deprecated' test.out

#- 339 ListViews
$CLI_EXE \
    --sn platform \
    --op ListViews \
    --namespace $AB_NAMESPACE \
    --storeId 'eaxndWFF' \
    > test.out 2>&1
eval_tap $? 339 'ListViews' test.out

#- 340 CreateView
# body param: body
echo '{"displayOrder": 30, "localizations": {"CJFuKknS": {"description": "ZqEELBmt", "localExt": {"iKGvnMFW": {}, "M9l9AcLv": {}, "SDLcdWPT": {}}, "longDescription": "v5kOS4q3", "title": "SosKcE0k"}, "IAdCVxGF": {"description": "LvNDDxTm", "localExt": {"3ySLETHt": {}, "Z9GqoZqo": {}, "8NHkFE1x": {}}, "longDescription": "eVGxOfYf", "title": "yzmeR4kB"}, "jxGYz8nc": {"description": "I7qCLTdR", "localExt": {"qSzjF1Sf": {}, "OU3h3UJD": {}, "r8Z1jCI5": {}}, "longDescription": "4kxcIjcV", "title": "mZMxGgfR"}}, "name": "JPnVvKyj"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateView \
    --namespace $AB_NAMESPACE \
    --storeId 'uK8tOeET' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 340 'CreateView' test.out

#- 341 GetView
$CLI_EXE \
    --sn platform \
    --op GetView \
    --namespace $AB_NAMESPACE \
    --viewId '3c4Ta1ch' \
    --storeId '54xpjojT' \
    > test.out 2>&1
eval_tap $? 341 'GetView' test.out

#- 342 UpdateView
# body param: body
echo '{"displayOrder": 8, "localizations": {"szn3QGWn": {"description": "Kl1HPvxp", "localExt": {"jHgT13W1": {}, "m45bfOpP": {}, "J24kGlKa": {}}, "longDescription": "85IQhVxq", "title": "UYapuv03"}, "bUMjSQGX": {"description": "lFCsqAnn", "localExt": {"HNeRZZ3W": {}, "bRolRwWI": {}, "NM8IsHDv": {}}, "longDescription": "ePe3dKXy", "title": "Y3eUEMIM"}, "aDFrYsjI": {"description": "8Tcwy7JR", "localExt": {"mH2Rdtcd": {}, "zawLGEv7": {}, "EeeU50kr": {}}, "longDescription": "l38g2JdS", "title": "bE1Og2GK"}}, "name": "ZTe89NyU"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateView \
    --namespace $AB_NAMESPACE \
    --viewId '8NsU2RXG' \
    --storeId 'xFLzSlqK' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 342 'UpdateView' test.out

#- 343 DeleteView
$CLI_EXE \
    --sn platform \
    --op DeleteView \
    --namespace $AB_NAMESPACE \
    --viewId 'qhhMo1TC' \
    --storeId 'p6RLOfjA' \
    > test.out 2>&1
eval_tap $? 343 'DeleteView' test.out

#- 344 GetWalletConfig
$CLI_EXE \
    --sn platform \
    --op GetWalletConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 344 'GetWalletConfig' test.out

#- 345 UpdateWalletConfig
# body param: body
echo '{"enablePaidForVCExpiration": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateWalletConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 345 'UpdateWalletConfig' test.out

#- 346 QueryWallets
eval_tap 0 346 'QueryWallets # SKIP deprecated' test.out

#- 347 BulkCredit
# body param: body
echo '[{"creditRequest": {"amount": 4, "expireAt": "1983-08-16T00:00:00Z", "metadata": {"SuZt3aKd": {}, "Dr2NyasE": {}, "SfhAaWHq": {}}, "origin": "Steam", "reason": "1hX9HzqJ", "source": "OTHER"}, "currencyCode": "cKYilBHe", "userIds": ["odCQOmNv", "v87qyYn5", "aPAT1OXt"]}, {"creditRequest": {"amount": 24, "expireAt": "1980-06-28T00:00:00Z", "metadata": {"iEljrmaf": {}, "deI7x7LR": {}, "L7sUdTJU": {}}, "origin": "Nintendo", "reason": "qrHc9nHV", "source": "REWARD"}, "currencyCode": "kXAHf14Y", "userIds": ["xGPMSha6", "dCkqbQ4b", "9BUgZ8Hk"]}, {"creditRequest": {"amount": 5, "expireAt": "1988-08-09T00:00:00Z", "metadata": {"UDEQOO0J": {}, "CwppIDtI": {}, "R9pFLjBs": {}}, "origin": "GooglePlay", "reason": "kAsGQqmt", "source": "REWARD"}, "currencyCode": "q00wWjIa", "userIds": ["KDfm7MDH", "T7bBKZ2k", "OOGrDEFU"]}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op BulkCredit \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 347 'BulkCredit' test.out

#- 348 BulkDebit
# body param: body
echo '[{"currencyCode": "KEHp5ocW", "request": {"allowOverdraft": true, "amount": 53, "balanceOrigin": "Steam", "balanceSource": "TRADE", "metadata": {"1kgTi4In": {}, "GViHKP1t": {}, "QjsXXucX": {}}, "reason": "z0xuI5Fl"}, "userIds": ["sPVYMaG5", "nLkbkn23", "1Dfzmw7C"]}, {"currencyCode": "h1quiTGJ", "request": {"allowOverdraft": true, "amount": 47, "balanceOrigin": "Xbox", "balanceSource": "PAYMENT", "metadata": {"GThC0Yls": {}, "twJtPi0r": {}, "yPMKtpYv": {}}, "reason": "nAwD1z0S"}, "userIds": ["QSIP4LhH", "VMj62fNi", "zy33ZKwo"]}, {"currencyCode": "vtEws36u", "request": {"allowOverdraft": false, "amount": 29, "balanceOrigin": "Playstation", "balanceSource": "PAYMENT", "metadata": {"bPSF9IbD": {}, "Loo1EOli": {}, "y8yXDjvZ": {}}, "reason": "lMK1l2EN"}, "userIds": ["J5LVxmUH", "2Is5DAFk", "eF9yf2HR"]}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op BulkDebit \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 348 'BulkDebit' test.out

#- 349 GetWallet
eval_tap 0 349 'GetWallet # SKIP deprecated' test.out

#- 350 SyncOrders
$CLI_EXE \
    --sn platform \
    --op SyncOrders \
    --nextEvaluatedKey 'LsVflyJF' \
    --end 'WsbpWfoU' \
    --start 'ORPU0356' \
    > test.out 2>&1
eval_tap $? 350 'SyncOrders' test.out

#- 351 TestAdyenConfig
# body param: body
echo '{"allowedPaymentMethods": ["kznoEOHN", "EDD4xEkQ", "yTS5VfyK"], "apiKey": "pVixU9nj", "authoriseAsCapture": false, "blockedPaymentMethods": ["MRAq7Pv3", "Xoyuh0b1", "BbvtPHew"], "clientKey": "O06kY9TJ", "dropInSettings": "VYIgSja3", "liveEndpointUrlPrefix": "urB3yKuB", "merchantAccount": "bE49RT2Z", "notificationHmacKey": "vw9ThWEZ", "notificationPassword": "gIq2BBGM", "notificationUsername": "GHb6y3Ie", "returnUrl": "ql9nYKEj", "settings": "8jOClDeH"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestAdyenConfig \
    --sandbox 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 351 'TestAdyenConfig' test.out

#- 352 TestAliPayConfig
# body param: body
echo '{"appId": "lOlOGwEx", "privateKey": "PNB91g7w", "publicKey": "UeakxZ6A", "returnUrl": "6Wqluqtl"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestAliPayConfig \
    --sandbox 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 352 'TestAliPayConfig' test.out

#- 353 TestCheckoutConfig
# body param: body
echo '{"publicKey": "dUlmDOPt", "secretKey": "VFlKX5sa"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestCheckoutConfig \
    --sandbox 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 353 'TestCheckoutConfig' test.out

#- 354 DebugMatchedPaymentMerchantConfig
$CLI_EXE \
    --sn platform \
    --op DebugMatchedPaymentMerchantConfig \
    --namespace_ '3RWoO6rK' \
    --region 'Y8LEre9B' \
    > test.out 2>&1
eval_tap $? 354 'DebugMatchedPaymentMerchantConfig' test.out

#- 355 TestNeonPayConfig
# body param: body
echo '{"apiKey": "WsCvqJUH", "webhookSecretKey": "8U8wr4RE"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestNeonPayConfig \
    --sandbox 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 355 'TestNeonPayConfig' test.out

#- 356 TestPayPalConfig
# body param: body
echo '{"clientID": "hW7VVTtV", "clientSecret": "KiilFZXc", "returnUrl": "twvmCPsJ", "webHookId": "qGfIzrvw"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestPayPalConfig \
    --sandbox 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 356 'TestPayPalConfig' test.out

#- 357 TestStripeConfig
# body param: body
echo '{"allowedPaymentMethodTypes": ["KLZss0uD", "SgpSNtIG", "RsqvLDxY"], "publishableKey": "OEZz6qlw", "secretKey": "6PICDl98", "webhookSecret": "G2pwbRIZ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestStripeConfig \
    --sandbox 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 357 'TestStripeConfig' test.out

#- 358 TestWxPayConfig
# body param: body
echo '{"appId": "hbaQc5F0", "key": "EOiAcwYT", "mchid": "ppYa8sIm", "returnUrl": "rB1odNtw"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestWxPayConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 358 'TestWxPayConfig' test.out

#- 359 TestXsollaConfig
# body param: body
echo '{"apiKey": "3jqnu2IR", "flowCompletionUrl": "RyD4Ra4F", "merchantId": 5, "projectId": 50, "projectSecretKey": "KUOQdH00"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestXsollaConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 359 'TestXsollaConfig' test.out

#- 360 GetPaymentMerchantConfig1
$CLI_EXE \
    --sn platform \
    --op GetPaymentMerchantConfig1 \
    --id 'fRtkwdwv' \
    > test.out 2>&1
eval_tap $? 360 'GetPaymentMerchantConfig1' test.out

#- 361 UpdateAdyenConfig
# body param: body
echo '{"allowedPaymentMethods": ["mfOsAAaW", "qTmOmEap", "TRH6dcPf"], "apiKey": "AzgFiEA5", "authoriseAsCapture": true, "blockedPaymentMethods": ["RkjvBD8J", "1Zc4uj4l", "z9XxsEng"], "clientKey": "XrfEM4hS", "dropInSettings": "e4m9LzqY", "liveEndpointUrlPrefix": "Mnwtrn50", "merchantAccount": "G0dPjqbp", "notificationHmacKey": "3hWPSX4L", "notificationPassword": "GScchYq8", "notificationUsername": "Wfbd8QW3", "returnUrl": "LhAJhGtQ", "settings": "6VDmC3qG"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateAdyenConfig \
    --id 'q7Igf9zF' \
    --sandbox 'true' \
    --validate 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 361 'UpdateAdyenConfig' test.out

#- 362 TestAdyenConfigById
$CLI_EXE \
    --sn platform \
    --op TestAdyenConfigById \
    --id 'CJu3eKoG' \
    --sandbox 'false' \
    > test.out 2>&1
eval_tap $? 362 'TestAdyenConfigById' test.out

#- 363 UpdateAliPayConfig
# body param: body
echo '{"appId": "g4gJSeRn", "privateKey": "I5xKiN3J", "publicKey": "FRnAosiW", "returnUrl": "GunVcsCt"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateAliPayConfig \
    --id 'LZiWf8od' \
    --sandbox 'false' \
    --validate 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 363 'UpdateAliPayConfig' test.out

#- 364 TestAliPayConfigById
$CLI_EXE \
    --sn platform \
    --op TestAliPayConfigById \
    --id 'yApvtawX' \
    --sandbox 'true' \
    > test.out 2>&1
eval_tap $? 364 'TestAliPayConfigById' test.out

#- 365 UpdateCheckoutConfig
# body param: body
echo '{"publicKey": "7WWQ2mIf", "secretKey": "6OsTyVSK"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCheckoutConfig \
    --id 'aKkeWh4y' \
    --sandbox 'true' \
    --validate 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 365 'UpdateCheckoutConfig' test.out

#- 366 TestCheckoutConfigById
$CLI_EXE \
    --sn platform \
    --op TestCheckoutConfigById \
    --id 'sP8hTfpj' \
    --sandbox 'true' \
    > test.out 2>&1
eval_tap $? 366 'TestCheckoutConfigById' test.out

#- 367 UpdateNeonPayConfig
# body param: body
echo '{"apiKey": "FUB2UzNi", "webhookSecretKey": "jkcgUnKZ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateNeonPayConfig \
    --id 'zq524hBk' \
    --sandbox 'true' \
    --validate 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 367 'UpdateNeonPayConfig' test.out

#- 368 TestNeonPayConfigById
$CLI_EXE \
    --sn platform \
    --op TestNeonPayConfigById \
    --id '6YpPCeH4' \
    --sandbox 'true' \
    > test.out 2>&1
eval_tap $? 368 'TestNeonPayConfigById' test.out

#- 369 UpdatePayPalConfig
# body param: body
echo '{"clientID": "sWauZHht", "clientSecret": "SR2JFb0e", "returnUrl": "pejO4vQt", "webHookId": "xB395b49"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePayPalConfig \
    --id 'wwFHloKd' \
    --sandbox 'false' \
    --validate 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 369 'UpdatePayPalConfig' test.out

#- 370 TestPayPalConfigById
$CLI_EXE \
    --sn platform \
    --op TestPayPalConfigById \
    --id 'xSfrgc3G' \
    --sandbox 'false' \
    > test.out 2>&1
eval_tap $? 370 'TestPayPalConfigById' test.out

#- 371 UpdateStripeConfig
# body param: body
echo '{"allowedPaymentMethodTypes": ["327nM5eH", "uAnyL4xi", "Uw3OLyrU"], "publishableKey": "BDLs6zKu", "secretKey": "V1yFolLo", "webhookSecret": "Yyh9FdB4"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateStripeConfig \
    --id 'BAr2FVoc' \
    --sandbox 'false' \
    --validate 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 371 'UpdateStripeConfig' test.out

#- 372 TestStripeConfigById
$CLI_EXE \
    --sn platform \
    --op TestStripeConfigById \
    --id 'gDGZbpZz' \
    --sandbox 'true' \
    > test.out 2>&1
eval_tap $? 372 'TestStripeConfigById' test.out

#- 373 UpdateWxPayConfig
# body param: body
echo '{"appId": "PXMZgDbM", "key": "46rSwTk5", "mchid": "7V8SFeGE", "returnUrl": "y0lvaLo9"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateWxPayConfig \
    --id 'IYf28eci' \
    --validate 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 373 'UpdateWxPayConfig' test.out

#- 374 UpdateWxPayConfigCert
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UpdateWxPayConfigCert \
    --id 'uhfdbQIh' \
    --upload file $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 374 'UpdateWxPayConfigCert' test.out

#- 375 TestWxPayConfigById
$CLI_EXE \
    --sn platform \
    --op TestWxPayConfigById \
    --id '8UuSVRNO' \
    > test.out 2>&1
eval_tap $? 375 'TestWxPayConfigById' test.out

#- 376 UpdateXsollaConfig
# body param: body
echo '{"apiKey": "7SGTpM6A", "flowCompletionUrl": "qy69230i", "merchantId": 85, "projectId": 91, "projectSecretKey": "WYN8Llal"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXsollaConfig \
    --id '3T55Hllf' \
    --validate 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 376 'UpdateXsollaConfig' test.out

#- 377 TestXsollaConfigById
$CLI_EXE \
    --sn platform \
    --op TestXsollaConfigById \
    --id 'r4ZwmEpn' \
    > test.out 2>&1
eval_tap $? 377 'TestXsollaConfigById' test.out

#- 378 UpdateXsollaUIConfig
# body param: body
echo '{"device": "DESKTOP", "showCloseButton": false, "size": "MEDIUM", "theme": "DEFAULT_DARK"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXsollaUIConfig \
    --id 'RgVAuatZ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 378 'UpdateXsollaUIConfig' test.out

#- 379 QueryPaymentProviderConfig
$CLI_EXE \
    --sn platform \
    --op QueryPaymentProviderConfig \
    --limit '64' \
    --namespace_ 'h1fnXMOF' \
    --offset '2' \
    --region 'uEaCDsTV' \
    > test.out 2>&1
eval_tap $? 379 'QueryPaymentProviderConfig' test.out

#- 380 CreatePaymentProviderConfig
# body param: body
echo '{"aggregate": "STRIPE", "namespace": "gyKaHHOC", "region": "AI9zLwpj", "sandboxTaxJarApiToken": "iOQEbbMS", "specials": ["WXPAY", "ALIPAY", "CHECKOUT"], "taxJarApiToken": "MVOovrHl", "taxJarEnabled": true, "useGlobalTaxJarApiToken": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreatePaymentProviderConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 380 'CreatePaymentProviderConfig' test.out

#- 381 GetAggregatePaymentProviders
$CLI_EXE \
    --sn platform \
    --op GetAggregatePaymentProviders \
    > test.out 2>&1
eval_tap $? 381 'GetAggregatePaymentProviders' test.out

#- 382 DebugMatchedPaymentProviderConfig
$CLI_EXE \
    --sn platform \
    --op DebugMatchedPaymentProviderConfig \
    --namespace_ '8Jhmi1LV' \
    --region 'VZM5IyiE' \
    > test.out 2>&1
eval_tap $? 382 'DebugMatchedPaymentProviderConfig' test.out

#- 383 GetSpecialPaymentProviders
$CLI_EXE \
    --sn platform \
    --op GetSpecialPaymentProviders \
    > test.out 2>&1
eval_tap $? 383 'GetSpecialPaymentProviders' test.out

#- 384 UpdatePaymentProviderConfig
# body param: body
echo '{"aggregate": "CHECKOUT", "namespace": "OulLIoHV", "region": "GBrcCuRv", "sandboxTaxJarApiToken": "nnlqVbL4", "specials": ["NEONPAY", "ALIPAY", "CHECKOUT"], "taxJarApiToken": "xcow3Yew", "taxJarEnabled": true, "useGlobalTaxJarApiToken": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePaymentProviderConfig \
    --id 'ZxW3nQeV' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 384 'UpdatePaymentProviderConfig' test.out

#- 385 DeletePaymentProviderConfig
$CLI_EXE \
    --sn platform \
    --op DeletePaymentProviderConfig \
    --id 'caIWoqFE' \
    > test.out 2>&1
eval_tap $? 385 'DeletePaymentProviderConfig' test.out

#- 386 GetPaymentTaxConfig
$CLI_EXE \
    --sn platform \
    --op GetPaymentTaxConfig \
    > test.out 2>&1
eval_tap $? 386 'GetPaymentTaxConfig' test.out

#- 387 UpdatePaymentTaxConfig
# body param: body
echo '{"sandboxTaxJarApiToken": "1WGX6VUV", "taxJarApiToken": "nG3aGzrM", "taxJarEnabled": false, "taxJarProductCodesMapping": {"zWMadB5W": "TyIgflqq", "zRa4b0gR": "mSc50Jit", "GT3jrYX3": "TgPKtU41"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePaymentTaxConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 387 'UpdatePaymentTaxConfig' test.out

#- 388 SyncPaymentOrders
$CLI_EXE \
    --sn platform \
    --op SyncPaymentOrders \
    --nextEvaluatedKey '0VJLQluz' \
    --end '2REJxqus' \
    --start 'd55MzBGL' \
    > test.out 2>&1
eval_tap $? 388 'SyncPaymentOrders' test.out

#- 389 PublicGetRootCategories
$CLI_EXE \
    --sn platform \
    --op PublicGetRootCategories \
    --namespace $AB_NAMESPACE \
    --language 'pBWZHxz9' \
    --storeId 'nJaVOX86' \
    > test.out 2>&1
eval_tap $? 389 'PublicGetRootCategories' test.out

#- 390 DownloadCategories
$CLI_EXE \
    --sn platform \
    --op DownloadCategories \
    --namespace $AB_NAMESPACE \
    --language 'oKD73ETj' \
    --storeId 'dQzvcxKZ' \
    > test.out 2>&1
eval_tap $? 390 'DownloadCategories' test.out

#- 391 PublicGetCategory
$CLI_EXE \
    --sn platform \
    --op PublicGetCategory \
    --categoryPath 'qU6kgcZ2' \
    --namespace $AB_NAMESPACE \
    --language 'bptKUwCX' \
    --storeId 'jO8O2dwQ' \
    > test.out 2>&1
eval_tap $? 391 'PublicGetCategory' test.out

#- 392 PublicGetChildCategories
$CLI_EXE \
    --sn platform \
    --op PublicGetChildCategories \
    --categoryPath 'VsMpJJrR' \
    --namespace $AB_NAMESPACE \
    --language 'gagbpM3R' \
    --storeId 'JTkO1uOi' \
    > test.out 2>&1
eval_tap $? 392 'PublicGetChildCategories' test.out

#- 393 PublicGetDescendantCategories
$CLI_EXE \
    --sn platform \
    --op PublicGetDescendantCategories \
    --categoryPath '8rXD1DWB' \
    --namespace $AB_NAMESPACE \
    --language 'iVS0eFQb' \
    --storeId 'zQYkLGTE' \
    > test.out 2>&1
eval_tap $? 393 'PublicGetDescendantCategories' test.out

#- 394 PublicListCurrencies
$CLI_EXE \
    --sn platform \
    --op PublicListCurrencies \
    --namespace $AB_NAMESPACE \
    --currencyType 'REAL' \
    > test.out 2>&1
eval_tap $? 394 'PublicListCurrencies' test.out

#- 395 GeDLCDurableRewardShortMap
$CLI_EXE \
    --sn platform \
    --op GeDLCDurableRewardShortMap \
    --namespace $AB_NAMESPACE \
    --dlcType 'STEAM' \
    > test.out 2>&1
eval_tap $? 395 'GeDLCDurableRewardShortMap' test.out

#- 396 GetAppleConfigVersion
$CLI_EXE \
    --sn platform \
    --op GetAppleConfigVersion \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 396 'GetAppleConfigVersion' test.out

#- 397 GetIAPItemMapping
$CLI_EXE \
    --sn platform \
    --op GetIAPItemMapping \
    --namespace $AB_NAMESPACE \
    --platform 'PLAYSTATION' \
    > test.out 2>&1
eval_tap $? 397 'GetIAPItemMapping' test.out

#- 398 PublicGetItemByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetItemByAppId \
    --namespace $AB_NAMESPACE \
    --language 'yXIRB48n' \
    --region 'D5ZYGM81' \
    --storeId 'EWSwOBtJ' \
    --appId 'hEyRgOuP' \
    > test.out 2>&1
eval_tap $? 398 'PublicGetItemByAppId' test.out

#- 399 PublicQueryItems
$CLI_EXE \
    --sn platform \
    --op PublicQueryItems \
    --namespace $AB_NAMESPACE \
    --appType 'SOFTWARE' \
    --autoCalcEstimatedPrice 'true' \
    --baseAppId 'oViSlATV' \
    --categoryPath 'PLSl5fP9' \
    --features 'wsJcnlyH' \
    --includeSubCategoryItem 'false' \
    --itemType 'EXTENSION' \
    --language 'CjHT4rrc' \
    --limit '98' \
    --offset '57' \
    --region 'p4ncbGFm' \
    --sortBy '["name:asc", "name:desc", "updatedAt:desc"]' \
    --storeId '9JxyiTE2' \
    --tags 'TaBWFfk0' \
    > test.out 2>&1
eval_tap $? 399 'PublicQueryItems' test.out

#- 400 PublicGetItemBySku
$CLI_EXE \
    --sn platform \
    --op PublicGetItemBySku \
    --namespace $AB_NAMESPACE \
    --autoCalcEstimatedPrice 'true' \
    --language '7w8uXuHS' \
    --region 'MnoezRJv' \
    --storeId 't1KrtAi5' \
    --sku 'hgrokikw' \
    > test.out 2>&1
eval_tap $? 400 'PublicGetItemBySku' test.out

#- 401 PublicGetEstimatedPrice
$CLI_EXE \
    --sn platform \
    --op PublicGetEstimatedPrice \
    --namespace $AB_NAMESPACE \
    --region 'YtOELwak' \
    --storeId 'JjmFRRyJ' \
    --itemIds 'ehvoCG5Z' \
    > test.out 2>&1
eval_tap $? 401 'PublicGetEstimatedPrice' test.out

#- 402 PublicBulkGetItems
$CLI_EXE \
    --sn platform \
    --op PublicBulkGetItems \
    --namespace $AB_NAMESPACE \
    --autoCalcEstimatedPrice 'true' \
    --language 'PxFIfVXA' \
    --region 'T6MXXc43' \
    --storeId 's9XUBpOR' \
    --itemIds 'Z3ElFNgV' \
    > test.out 2>&1
eval_tap $? 402 'PublicBulkGetItems' test.out

#- 403 PublicValidateItemPurchaseCondition
# body param: body
echo '{"itemIds": ["DPx9i2bK", "KWGOJdfj", "HcSa0FEG"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicValidateItemPurchaseCondition \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 403 'PublicValidateItemPurchaseCondition' test.out

#- 404 PublicSearchItems
$CLI_EXE \
    --sn platform \
    --op PublicSearchItems \
    --namespace $AB_NAMESPACE \
    --autoCalcEstimatedPrice 'true' \
    --itemType 'SEASON' \
    --limit '93' \
    --offset '38' \
    --region 'Xom3zDuV' \
    --storeId '0g8hh4oZ' \
    --keyword 'u3VU3cgL' \
    --language 'btoRCrjc' \
    > test.out 2>&1
eval_tap $? 404 'PublicSearchItems' test.out

#- 405 PublicGetApp
$CLI_EXE \
    --sn platform \
    --op PublicGetApp \
    --itemId '3J6vy3GB' \
    --namespace $AB_NAMESPACE \
    --language 'aFouENJv' \
    --region 'rl2L6qy4' \
    --storeId 'QA32lqXv' \
    > test.out 2>&1
eval_tap $? 405 'PublicGetApp' test.out

#- 406 PublicGetItemDynamicData
$CLI_EXE \
    --sn platform \
    --op PublicGetItemDynamicData \
    --itemId 'lHQwnu6l' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 406 'PublicGetItemDynamicData' test.out

#- 407 PublicGetItem
$CLI_EXE \
    --sn platform \
    --op PublicGetItem \
    --itemId 'ih8a90xn' \
    --namespace $AB_NAMESPACE \
    --autoCalcEstimatedPrice 'false' \
    --language 'hYsOzZxo' \
    --populateBundle 'true' \
    --region 'ctyb217L' \
    --storeId 'uB5uoBy7' \
    > test.out 2>&1
eval_tap $? 407 'PublicGetItem' test.out

#- 408 GetPaymentCustomization
eval_tap 0 408 'GetPaymentCustomization # SKIP deprecated' test.out

#- 409 PublicGetPaymentUrl
# body param: body
echo '{"neonPayConfig": {"cancelUrl": "ADWR1ntt", "successUrl": "RgQK0vXz"}, "paymentOrderNo": "x7CaYXne", "paymentProvider": "PAYPAL", "returnUrl": "LCnh4hAl", "ui": "y7mkzqMc", "zipCode": "R2ft69oO"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicGetPaymentUrl \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 409 'PublicGetPaymentUrl' test.out

#- 410 PublicGetPaymentMethods
$CLI_EXE \
    --sn platform \
    --op PublicGetPaymentMethods \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'k6RU2nFQ' \
    > test.out 2>&1
eval_tap $? 410 'PublicGetPaymentMethods' test.out

#- 411 PublicGetUnpaidPaymentOrder
$CLI_EXE \
    --sn platform \
    --op PublicGetUnpaidPaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'WiLxdgYr' \
    > test.out 2>&1
eval_tap $? 411 'PublicGetUnpaidPaymentOrder' test.out

#- 412 Pay
# body param: body
echo '{"token": "gazc6lwd"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op Pay \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo '9l7UrQ43' \
    --paymentProvider 'ALIPAY' \
    --zipCode 'Q1pvhXeH' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 412 'Pay' test.out

#- 413 PublicCheckPaymentOrderPaidStatus
$CLI_EXE \
    --sn platform \
    --op PublicCheckPaymentOrderPaidStatus \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'mxQsnWTt' \
    > test.out 2>&1
eval_tap $? 413 'PublicCheckPaymentOrderPaidStatus' test.out

#- 414 GetPaymentPublicConfig
$CLI_EXE \
    --sn platform \
    --op GetPaymentPublicConfig \
    --namespace $AB_NAMESPACE \
    --sandbox 'true' \
    --paymentProvider 'NEONPAY' \
    --region '9Vqrqypu' \
    > test.out 2>&1
eval_tap $? 414 'GetPaymentPublicConfig' test.out

#- 415 PublicGetQRCode
$CLI_EXE \
    --sn platform \
    --op PublicGetQRCode \
    --namespace $AB_NAMESPACE \
    --code 'dsJBM1UI' \
    > test.out 2>&1
eval_tap $? 415 'PublicGetQRCode' test.out

#- 416 PublicNormalizePaymentReturnUrl
$CLI_EXE \
    --sn platform \
    --op PublicNormalizePaymentReturnUrl \
    --namespace $AB_NAMESPACE \
    --payerID 'uNXlJLbt' \
    --foreinginvoice '2FTYC0RA' \
    --invoiceId 'D2oLQibW' \
    --payload 'aDbrWPer' \
    --redirectResult 'qrr2kYGU' \
    --resultCode 'awASAxHv' \
    --sessionId 'sGZlWktO' \
    --status '44SnG4Mr' \
    --token 'nohz9djc' \
    --type 'OCPiSRag' \
    --userId 'enP94kzI' \
    --orderNo 'BRoNKodT' \
    --paymentOrderNo 'gJfyXCxp' \
    --paymentProvider 'WXPAY' \
    --returnUrl 'HXe9cCAP' \
    > test.out 2>&1
eval_tap $? 416 'PublicNormalizePaymentReturnUrl' test.out

#- 417 GetPaymentTaxValue
$CLI_EXE \
    --sn platform \
    --op GetPaymentTaxValue \
    --namespace $AB_NAMESPACE \
    --zipCode '1Ug08NjZ' \
    --paymentOrderNo 'gD5URsG5' \
    --paymentProvider 'ALIPAY' \
    > test.out 2>&1
eval_tap $? 417 'GetPaymentTaxValue' test.out

#- 418 GetRewardByCode
$CLI_EXE \
    --sn platform \
    --op GetRewardByCode \
    --namespace $AB_NAMESPACE \
    --rewardCode 'N0jaCuIC' \
    > test.out 2>&1
eval_tap $? 418 'GetRewardByCode' test.out

#- 419 QueryRewards1
$CLI_EXE \
    --sn platform \
    --op QueryRewards1 \
    --namespace $AB_NAMESPACE \
    --eventTopic 'ibhhAM4n' \
    --limit '14' \
    --offset '58' \
    --sortBy '["namespace:desc", "namespace:asc", "rewardCode"]' \
    > test.out 2>&1
eval_tap $? 419 'QueryRewards1' test.out

#- 420 GetReward1
$CLI_EXE \
    --sn platform \
    --op GetReward1 \
    --namespace $AB_NAMESPACE \
    --rewardId 'dsZMQitP' \
    > test.out 2>&1
eval_tap $? 420 'GetReward1' test.out

#- 421 PublicListStores
$CLI_EXE \
    --sn platform \
    --op PublicListStores \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 421 'PublicListStores' test.out

#- 422 PublicExistsAnyMyActiveEntitlement
$CLI_EXE \
    --sn platform \
    --op PublicExistsAnyMyActiveEntitlement \
    --namespace $AB_NAMESPACE \
    --appIds '["LkPxkp26", "audD99ij", "QYAhtP1Q"]' \
    --itemIds '["X2n5kTu3", "KSiy3rA8", "O3I4oTnO"]' \
    --skus '["FFbXjAWn", "pHKfLRcy", "NQ4neTDm"]' \
    > test.out 2>&1
eval_tap $? 422 'PublicExistsAnyMyActiveEntitlement' test.out

#- 423 PublicGetMyAppEntitlementOwnershipByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetMyAppEntitlementOwnershipByAppId \
    --namespace $AB_NAMESPACE \
    --appId '1ak2JL4Z' \
    > test.out 2>&1
eval_tap $? 423 'PublicGetMyAppEntitlementOwnershipByAppId' test.out

#- 424 PublicGetMyEntitlementOwnershipByItemId
$CLI_EXE \
    --sn platform \
    --op PublicGetMyEntitlementOwnershipByItemId \
    --namespace $AB_NAMESPACE \
    --entitlementClazz 'ENTITLEMENT' \
    --itemId 'FuwHxxM2' \
    > test.out 2>&1
eval_tap $? 424 'PublicGetMyEntitlementOwnershipByItemId' test.out

#- 425 PublicGetMyEntitlementOwnershipBySku
$CLI_EXE \
    --sn platform \
    --op PublicGetMyEntitlementOwnershipBySku \
    --namespace $AB_NAMESPACE \
    --entitlementClazz 'SUBSCRIPTION' \
    --sku 'ddL8FcYn' \
    > test.out 2>&1
eval_tap $? 425 'PublicGetMyEntitlementOwnershipBySku' test.out

#- 426 PublicGetEntitlementOwnershipToken
$CLI_EXE \
    --sn platform \
    --op PublicGetEntitlementOwnershipToken \
    --namespace $AB_NAMESPACE \
    --appIds '["tXnfzMIc", "reHXpq4r", "X8Z3WzmJ"]' \
    --itemIds '["3C5x3L28", "nfZLBQlY", "wUpHmn0d"]' \
    --skus '["P001bjMl", "E04EerZf", "zmv5qMpa"]' \
    > test.out 2>&1
eval_tap $? 426 'PublicGetEntitlementOwnershipToken' test.out

#- 427 SyncTwitchDropsEntitlement
# body param: body
echo '{"gameId": "cmWd8CwU", "language": "qwsR-610", "region": "do3f3SRs"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncTwitchDropsEntitlement \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 427 'SyncTwitchDropsEntitlement' test.out

#- 428 PublicGetMyWallet
$CLI_EXE \
    --sn platform \
    --op PublicGetMyWallet \
    --currencyCode '9rUrEcAK' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 428 'PublicGetMyWallet' test.out

#- 429 SyncEpicGameDLC
# body param: body
echo '{"epicGamesJwtToken": "tp0eIrGg"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncEpicGameDLC \
    --namespace $AB_NAMESPACE \
    --userId '94SG7bqV' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 429 'SyncEpicGameDLC' test.out

#- 430 SyncOculusDLC
$CLI_EXE \
    --sn platform \
    --op SyncOculusDLC \
    --namespace $AB_NAMESPACE \
    --userId '5L9wTZ8L' \
    > test.out 2>&1
eval_tap $? 430 'SyncOculusDLC' test.out

#- 431 PublicSyncPsnDlcInventory
# body param: body
echo '{"serviceLabel": 75}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicSyncPsnDlcInventory \
    --namespace $AB_NAMESPACE \
    --userId 'jxrs35ry' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 431 'PublicSyncPsnDlcInventory' test.out

#- 432 PublicSyncPsnDlcInventoryWithMultipleServiceLabels
# body param: body
echo '{"serviceLabels": [41, 26, 28]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicSyncPsnDlcInventoryWithMultipleServiceLabels \
    --namespace $AB_NAMESPACE \
    --userId 'enlRAzU5' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 432 'PublicSyncPsnDlcInventoryWithMultipleServiceLabels' test.out

#- 433 SyncSteamDLC
# body param: body
echo '{"appId": "YaQnOYCL", "steamId": "yIhLysQU"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncSteamDLC \
    --namespace $AB_NAMESPACE \
    --userId 'RmpZ4k6x' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 433 'SyncSteamDLC' test.out

#- 434 SyncXboxDLC
# body param: body
echo '{"xstsToken": "rC7mIbuU"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncXboxDLC \
    --namespace $AB_NAMESPACE \
    --userId 'B8CPja9z' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 434 'SyncXboxDLC' test.out

#- 435 PublicQueryUserEntitlements
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserEntitlements \
    --namespace $AB_NAMESPACE \
    --userId 'Y5k005ZZ' \
    --appType 'DEMO' \
    --entitlementClazz 'MEDIA' \
    --entitlementName 'JLi9LomM' \
    --features '["xo7ofMOt", "P1hIG5B3", "ykCCwMxC"]' \
    --itemId '["3SyqRRPW", "aG6BTRrE", "YkVJs0Rz"]' \
    --limit '6' \
    --offset '33' \
    > test.out 2>&1
eval_tap $? 435 'PublicQueryUserEntitlements' test.out

#- 436 PublicGetUserAppEntitlementByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetUserAppEntitlementByAppId \
    --namespace $AB_NAMESPACE \
    --userId 'iPPyvq9e' \
    --appId 'u7aPIYYQ' \
    > test.out 2>&1
eval_tap $? 436 'PublicGetUserAppEntitlementByAppId' test.out

#- 437 PublicQueryUserEntitlementsByAppType
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserEntitlementsByAppType \
    --namespace $AB_NAMESPACE \
    --userId 'ZoyM0pFz' \
    --limit '14' \
    --offset '89' \
    --appType 'GAME' \
    > test.out 2>&1
eval_tap $? 437 'PublicQueryUserEntitlementsByAppType' test.out

#- 438 PublicGetUserEntitlementsByIds
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementsByIds \
    --namespace $AB_NAMESPACE \
    --userId 'DBpV2MLS' \
    --availablePlatformOnly 'true' \
    --ids '["6PGb2xEv", "rZbEjNLH", "B6TY6ZLL"]' \
    > test.out 2>&1
eval_tap $? 438 'PublicGetUserEntitlementsByIds' test.out

#- 439 PublicGetUserEntitlementByItemId
eval_tap 0 439 'PublicGetUserEntitlementByItemId # SKIP deprecated' test.out

#- 440 PublicGetUserEntitlementBySku
eval_tap 0 440 'PublicGetUserEntitlementBySku # SKIP deprecated' test.out

#- 441 PublicUserEntitlementHistory
$CLI_EXE \
    --sn platform \
    --op PublicUserEntitlementHistory \
    --namespace $AB_NAMESPACE \
    --userId 'bgYQaSGT' \
    --endDate 'yk5U0JRL' \
    --entitlementClazz 'CODE' \
    --limit '93' \
    --offset '14' \
    --startDate 'B9uA12fB' \
    > test.out 2>&1
eval_tap $? 441 'PublicUserEntitlementHistory' test.out

#- 442 PublicExistsAnyUserActiveEntitlement
$CLI_EXE \
    --sn platform \
    --op PublicExistsAnyUserActiveEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'Vhb0Ty36' \
    --appIds '["3JmZDym0", "qlwRavsL", "PKIdSC3S"]' \
    --itemIds '["Lgb9e4nO", "GYjRseSv", "47to5kfc"]' \
    --skus '["8uxhQJf7", "AgRagxnz", "jOLD7Vga"]' \
    > test.out 2>&1
eval_tap $? 442 'PublicExistsAnyUserActiveEntitlement' test.out

#- 443 PublicGetUserAppEntitlementOwnershipByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetUserAppEntitlementOwnershipByAppId \
    --namespace $AB_NAMESPACE \
    --userId '3MtLBX0I' \
    --appId 'l5kynw1U' \
    > test.out 2>&1
eval_tap $? 443 'PublicGetUserAppEntitlementOwnershipByAppId' test.out

#- 444 PublicGetUserEntitlementOwnershipByItemId
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementOwnershipByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'hkBdIH5x' \
    --entitlementClazz 'ENTITLEMENT' \
    --itemId 'oocI6tEi' \
    > test.out 2>&1
eval_tap $? 444 'PublicGetUserEntitlementOwnershipByItemId' test.out

#- 445 PublicGetUserEntitlementOwnershipByItemIds
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementOwnershipByItemIds \
    --namespace $AB_NAMESPACE \
    --userId '9V8FcgPy' \
    --ids '["U6cVfycV", "7KdhULoV", "9V2fvRHT"]' \
    > test.out 2>&1
eval_tap $? 445 'PublicGetUserEntitlementOwnershipByItemIds' test.out

#- 446 PublicGetUserEntitlementOwnershipBySku
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementOwnershipBySku \
    --namespace $AB_NAMESPACE \
    --userId 'Nz1OJrtp' \
    --entitlementClazz 'ENTITLEMENT' \
    --sku '7x35ItTl' \
    > test.out 2>&1
eval_tap $? 446 'PublicGetUserEntitlementOwnershipBySku' test.out

#- 447 PublicGetUserEntitlement
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlement \
    --entitlementId 'XEZH4JEc' \
    --namespace $AB_NAMESPACE \
    --userId 'MYd2RjwF' \
    > test.out 2>&1
eval_tap $? 447 'PublicGetUserEntitlement' test.out

#- 448 PublicConsumeUserEntitlement
# body param: body
echo '{"metadata": {"operationSource": "INVENTORY"}, "options": ["cw3V9mPq", "nVNojyLY", "cHlq5pj5"], "requestId": "QaAoLJFk", "useCount": 93}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicConsumeUserEntitlement \
    --entitlementId 'XQ5oqCcp' \
    --namespace $AB_NAMESPACE \
    --userId '8PGrHOBd' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 448 'PublicConsumeUserEntitlement' test.out

#- 449 PublicSellUserEntitlement
# body param: body
echo '{"requestId": "kY03twtF", "useCount": 30}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicSellUserEntitlement \
    --entitlementId 'rhPDoolY' \
    --namespace $AB_NAMESPACE \
    --userId 'nuhXZeyq' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 449 'PublicSellUserEntitlement' test.out

#- 450 PublicSplitUserEntitlement
# body param: body
echo '{"metadata": {"operationSource": "INVENTORY"}, "useCount": 89}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicSplitUserEntitlement \
    --entitlementId 'pT8N8UIR' \
    --namespace $AB_NAMESPACE \
    --userId 'NRukZG9a' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 450 'PublicSplitUserEntitlement' test.out

#- 451 PublicTransferUserEntitlement
# body param: body
echo '{"entitlementId": "bEqkAUFk", "metadata": {"operationSource": "INVENTORY"}, "useCount": 21}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicTransferUserEntitlement \
    --entitlementId 'iqQ3FnOf' \
    --namespace $AB_NAMESPACE \
    --userId 'sRMKjPr0' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 451 'PublicTransferUserEntitlement' test.out

#- 452 PublicRedeemCode
# body param: body
echo '{"code": "Ot86sV06", "language": "Tv_Fjqg", "region": "Kn1i2DNl"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicRedeemCode \
    --namespace $AB_NAMESPACE \
    --userId 'Sy1nSP5A' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 452 'PublicRedeemCode' test.out

#- 453 PublicFulfillAppleIAPItem
# body param: body
echo '{"excludeOldTransactions": false, "language": "mn-xAoE", "productId": "4NEAauNT", "receiptData": "MD6DsJBW", "region": "A8x7fK9v", "transactionId": "VIUXNWBt"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicFulfillAppleIAPItem \
    --namespace $AB_NAMESPACE \
    --userId 'hkrfP7bb' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 453 'PublicFulfillAppleIAPItem' test.out

#- 454 SyncEpicGamesInventory
# body param: body
echo '{"epicGamesJwtToken": "YhZr3Nxx"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncEpicGamesInventory \
    --namespace $AB_NAMESPACE \
    --userId '5oh4Ek8r' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 454 'SyncEpicGamesInventory' test.out

#- 455 PublicFulfillGoogleIAPItem
# body param: body
echo '{"autoAck": false, "autoConsume": true, "language": "zlSU", "orderId": "DFKy13YQ", "packageName": "9vfMBxJ1", "productId": "N9Il9HLr", "purchaseTime": 26, "purchaseToken": "WWER0I2W", "region": "tr05u1iZ", "subscriptionPurchase": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicFulfillGoogleIAPItem \
    --namespace $AB_NAMESPACE \
    --userId 'Ye2HDBIw' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 455 'PublicFulfillGoogleIAPItem' test.out

#- 456 SyncOculusConsumableEntitlements
$CLI_EXE \
    --sn platform \
    --op SyncOculusConsumableEntitlements \
    --namespace $AB_NAMESPACE \
    --userId 'FPK1RGs7' \
    > test.out 2>&1
eval_tap $? 456 'SyncOculusConsumableEntitlements' test.out

#- 457 PublicReconcilePlayStationStore
# body param: body
echo '{"currencyCode": "uVhXZyhn", "price": 0.1976332340952256, "productId": "uszQeEE4", "serviceLabel": 50}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicReconcilePlayStationStore \
    --namespace $AB_NAMESPACE \
    --userId 'el5MGYlY' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 457 'PublicReconcilePlayStationStore' test.out

#- 458 PublicReconcilePlayStationStoreWithMultipleServiceLabels
# body param: body
echo '{"currencyCode": "96pXn8ye", "price": 0.13100009410831404, "productId": "vwD11VoH", "serviceLabels": [67, 3, 52]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicReconcilePlayStationStoreWithMultipleServiceLabels \
    --namespace $AB_NAMESPACE \
    --userId 'gQRYhmjF' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 458 'PublicReconcilePlayStationStoreWithMultipleServiceLabels' test.out

#- 459 SyncSteamInventory
# body param: body
echo '{"appId": "BqG7jNjc", "currencyCode": "eXdqxrfE", "language": "HjYX", "price": 0.8350432377384632, "productId": "6yZ633LV", "region": "ue1Ynroc", "steamId": "rI1Ohmfd"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncSteamInventory \
    --namespace $AB_NAMESPACE \
    --userId 'nJvEluSP' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 459 'SyncSteamInventory' test.out

#- 460 SyncSteamAbnormalTransaction
$CLI_EXE \
    --sn platform \
    --op SyncSteamAbnormalTransaction \
    --namespace $AB_NAMESPACE \
    --userId 'Ddf6QBZK' \
    > test.out 2>&1
eval_tap $? 460 'SyncSteamAbnormalTransaction' test.out

#- 461 SyncSteamIAPByTransaction
# body param: body
echo '{"orderId": "w0bNTIkF"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncSteamIAPByTransaction \
    --namespace $AB_NAMESPACE \
    --userId 'OFxUyojB' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 461 'SyncSteamIAPByTransaction' test.out

#- 462 PublicQueryUserThirdPartySubscription
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserThirdPartySubscription \
    --namespace $AB_NAMESPACE \
    --platform 'STADIA' \
    --userId 'BuYSfUbd' \
    --activeOnly 'true' \
    --groupId 'qMXijZGL' \
    --limit '77' \
    --offset '100' \
    --productId 'w1AcUFT3' \
    > test.out 2>&1
eval_tap $? 462 'PublicQueryUserThirdPartySubscription' test.out

#- 463 SyncTwitchDropsEntitlement1
# body param: body
echo '{"gameId": "gykfHQDV", "language": "WYyo-645", "region": "LPTNGQED"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncTwitchDropsEntitlement1 \
    --namespace $AB_NAMESPACE \
    --userId '0DrWVOfQ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 463 'SyncTwitchDropsEntitlement1' test.out

#- 464 SyncXboxInventory
# body param: body
echo '{"currencyCode": "pPENE0wx", "price": 0.10230941914175207, "productId": "2jlBAjQy", "xstsToken": "E7ht35dG"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncXboxInventory \
    --namespace $AB_NAMESPACE \
    --userId '4Z0W697N' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 464 'SyncXboxInventory' test.out

#- 465 PublicQueryUserOrders
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserOrders \
    --namespace $AB_NAMESPACE \
    --userId 'KD6DuEpf' \
    --discounted 'false' \
    --itemId 'mKBo5N6n' \
    --limit '25' \
    --offset '62' \
    --status 'FULFILL_FAILED' \
    > test.out 2>&1
eval_tap $? 465 'PublicQueryUserOrders' test.out

#- 466 PublicCreateUserOrder
# body param: body
echo '{"currencyCode": "nC9ee0uU", "discountCodes": ["fu8SJPWt", "6baVGf1Y", "eCc8ryTq"], "discountedPrice": 25, "ext": {"KQR1ERZE": {}, "fX92TH0l": {}, "WLDSKiu4": {}}, "itemId": "30N2k3mr", "language": "tF-841", "price": 45, "quantity": 30, "region": "bQKQa8BA", "returnUrl": "mZnTmYrM", "sectionId": "FZLNUT3m"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicCreateUserOrder \
    --namespace $AB_NAMESPACE \
    --userId '93UWXHhC' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 466 'PublicCreateUserOrder' test.out

#- 467 PublicPreviewOrderPrice
# body param: body
echo '{"currencyCode": "UzTUfOfV", "discountCodes": ["24QxbptC", "E4d2PJsz", "XteSOxUC"], "discountedPrice": 66, "itemId": "K4yjMmrf", "price": 94, "quantity": 83}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicPreviewOrderPrice \
    --namespace $AB_NAMESPACE \
    --userId 'i16T595F' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 467 'PublicPreviewOrderPrice' test.out

#- 468 PublicGetUserOrder
$CLI_EXE \
    --sn platform \
    --op PublicGetUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'Nan0K5gN' \
    --userId 'R785yIys' \
    > test.out 2>&1
eval_tap $? 468 'PublicGetUserOrder' test.out

#- 469 PublicCancelUserOrder
$CLI_EXE \
    --sn platform \
    --op PublicCancelUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'zoDQgmdK' \
    --userId 'bNhLtYyM' \
    > test.out 2>&1
eval_tap $? 469 'PublicCancelUserOrder' test.out

#- 470 PublicGetUserOrderHistories
$CLI_EXE \
    --sn platform \
    --op PublicGetUserOrderHistories \
    --namespace $AB_NAMESPACE \
    --orderNo 'fpfVQCRY' \
    --userId 'QCNI50Jv' \
    > test.out 2>&1
eval_tap $? 470 'PublicGetUserOrderHistories' test.out

#- 471 PublicDownloadUserOrderReceipt
$CLI_EXE \
    --sn platform \
    --op PublicDownloadUserOrderReceipt \
    --namespace $AB_NAMESPACE \
    --orderNo 'KsKRWLbY' \
    --userId 'gVLMBB1p' \
    > test.out 2>&1
eval_tap $? 471 'PublicDownloadUserOrderReceipt' test.out

#- 472 PublicGetPaymentAccounts
$CLI_EXE \
    --sn platform \
    --op PublicGetPaymentAccounts \
    --namespace $AB_NAMESPACE \
    --userId 'hFzSSD8a' \
    > test.out 2>&1
eval_tap $? 472 'PublicGetPaymentAccounts' test.out

#- 473 PublicDeletePaymentAccount
$CLI_EXE \
    --sn platform \
    --op PublicDeletePaymentAccount \
    --id 'zkxKMA1L' \
    --namespace $AB_NAMESPACE \
    --type 'paypal' \
    --userId 'kXu0dYXP' \
    > test.out 2>&1
eval_tap $? 473 'PublicDeletePaymentAccount' test.out

#- 474 PublicListActiveSections
$CLI_EXE \
    --sn platform \
    --op PublicListActiveSections \
    --namespace $AB_NAMESPACE \
    --userId 'KZ3Ynvz7' \
    --autoCalcEstimatedPrice 'false' \
    --language '37T7oFft' \
    --region 'M4kCK3Wd' \
    --storeId '6Svtysy0' \
    --viewId 'bkovakeu' \
    > test.out 2>&1
eval_tap $? 474 'PublicListActiveSections' test.out

#- 475 PublicQueryUserSubscriptions
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserSubscriptions \
    --namespace $AB_NAMESPACE \
    --userId 'BpRiUYpr' \
    --chargeStatus 'CHARGED' \
    --itemId 'CAkS8uVJ' \
    --limit '86' \
    --offset '23' \
    --sku 'eYtMi6yB' \
    --status 'ACTIVE' \
    --subscribedBy 'PLATFORM' \
    > test.out 2>&1
eval_tap $? 475 'PublicQueryUserSubscriptions' test.out

#- 476 PublicSubscribeSubscription
# body param: body
echo '{"currencyCode": "UXLXDzrw", "itemId": "WeWb8I8Y", "language": "Uopf", "region": "7rX7OGQU", "returnUrl": "t3G6FaN5", "source": "KRhryLfu"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicSubscribeSubscription \
    --namespace $AB_NAMESPACE \
    --userId 'fAUpE4Cv' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 476 'PublicSubscribeSubscription' test.out

#- 477 PublicCheckUserSubscriptionSubscribableByItemId
$CLI_EXE \
    --sn platform \
    --op PublicCheckUserSubscriptionSubscribableByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'O3mkwQ4k' \
    --itemId 'W89CzJTq' \
    > test.out 2>&1
eval_tap $? 477 'PublicCheckUserSubscriptionSubscribableByItemId' test.out

#- 478 PublicGetUserSubscription
$CLI_EXE \
    --sn platform \
    --op PublicGetUserSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId '4O8kZHYr' \
    --userId 'XGiqNP1x' \
    > test.out 2>&1
eval_tap $? 478 'PublicGetUserSubscription' test.out

#- 479 PublicChangeSubscriptionBillingAccount
$CLI_EXE \
    --sn platform \
    --op PublicChangeSubscriptionBillingAccount \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'bjJk8IjQ' \
    --userId '0AZy76CB' \
    > test.out 2>&1
eval_tap $? 479 'PublicChangeSubscriptionBillingAccount' test.out

#- 480 PublicCancelSubscription
# body param: body
echo '{"immediate": true, "reason": "oN6Jp1LE"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicCancelSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'GsS8vMiH' \
    --userId 'yvefQgb2' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 480 'PublicCancelSubscription' test.out

#- 481 PublicGetUserSubscriptionBillingHistories
$CLI_EXE \
    --sn platform \
    --op PublicGetUserSubscriptionBillingHistories \
    --namespace $AB_NAMESPACE \
    --subscriptionId '3prpnq04' \
    --userId 'uVRbXimI' \
    --excludeFree 'true' \
    --limit '51' \
    --offset '5' \
    > test.out 2>&1
eval_tap $? 481 'PublicGetUserSubscriptionBillingHistories' test.out

#- 482 PublicListViews
$CLI_EXE \
    --sn platform \
    --op PublicListViews \
    --namespace $AB_NAMESPACE \
    --userId 'BzzsZKuy' \
    --language 'B5x7AcQ7' \
    --storeId 'Bic6jSJN' \
    > test.out 2>&1
eval_tap $? 482 'PublicListViews' test.out

#- 483 PublicGetWallet
$CLI_EXE \
    --sn platform \
    --op PublicGetWallet \
    --currencyCode '4nJxLjLR' \
    --namespace $AB_NAMESPACE \
    --userId 'h73y4gta' \
    > test.out 2>&1
eval_tap $? 483 'PublicGetWallet' test.out

#- 484 PublicListUserWalletTransactions
$CLI_EXE \
    --sn platform \
    --op PublicListUserWalletTransactions \
    --currencyCode '0ln5sLDw' \
    --namespace $AB_NAMESPACE \
    --userId 'OXb5eJfG' \
    --limit '63' \
    --offset '84' \
    > test.out 2>&1
eval_tap $? 484 'PublicListUserWalletTransactions' test.out

#- 485 PublicGetMyDLCContent
$CLI_EXE \
    --sn platform \
    --op PublicGetMyDLCContent \
    --includeAllNamespaces 'true' \
    --type 'STEAM' \
    > test.out 2>&1
eval_tap $? 485 'PublicGetMyDLCContent' test.out

#- 486 QueryFulfillments
$CLI_EXE \
    --sn platform \
    --op QueryFulfillments \
    --namespace $AB_NAMESPACE \
    --endTime 'bgNEwJLe' \
    --limit '72' \
    --offset '0' \
    --startTime 'ZXKN6las' \
    --state 'REVOKE_FAILED' \
    --transactionId 'OXpyVRu4' \
    --userId 'WZN9MRx9' \
    > test.out 2>&1
eval_tap $? 486 'QueryFulfillments' test.out

#- 487 QueryItemsV2
$CLI_EXE \
    --sn platform \
    --op QueryItemsV2 \
    --namespace $AB_NAMESPACE \
    --appType 'DEMO' \
    --availableDate 'ytY6Yh96' \
    --baseAppId '0PelWyND' \
    --categoryPath 'bQWltRRf' \
    --features 'gldfLnoR' \
    --includeSubCategoryItem 'false' \
    --itemName 'SFTsQU6U' \
    --itemStatus 'ACTIVE' \
    --itemType '["BUNDLE", "CODE", "SUBSCRIPTION"]' \
    --limit '7' \
    --offset '19' \
    --region '1lu4tzYv' \
    --sectionExclusive 'true' \
    --sortBy '["displayOrder:desc", "displayOrder", "updatedAt:desc"]' \
    --storeId 'hKzE6Q4l' \
    --tags 'DyspIgN1' \
    --targetNamespace 'sOtFUMxj' \
    --withTotal 'true' \
    > test.out 2>&1
eval_tap $? 487 'QueryItemsV2' test.out

#- 488 ImportStore1
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op ImportStore1 \
    --namespace $AB_NAMESPACE \
    --storeId 'ZkWY0NsG' \
    --strictMode 'false' \
    --upload file $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 488 'ImportStore1' test.out

#- 489 ExportStore1
# body param: body
echo '{"itemIds": ["wp0T5Xee", "AgofONx6", "uHnjmWGA"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ExportStore1 \
    --namespace $AB_NAMESPACE \
    --storeId '4dglSBgq' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 489 'ExportStore1' test.out

#- 490 FulfillRewardsV2
# body param: body
echo '{"entitlementCollectionId": "RJ1XO8P7", "entitlementOrigin": "Oculus", "metadata": {"0qeKEKGw": {}, "JYeS97eA": {}, "Kwf9va1l": {}}, "origin": "GooglePlay", "rewards": [{"currency": {"currencyCode": "uPNUnJ80", "namespace": "B492oYU4"}, "item": {"itemId": "T4j0eww3", "itemName": "wTFdcLA0", "itemSku": "sVoAak0q", "itemType": "BbsclLF2"}, "quantity": 49, "type": "CURRENCY"}, {"currency": {"currencyCode": "yK6nM0nr", "namespace": "6ISP9LVd"}, "item": {"itemId": "LWyCayHl", "itemName": "8uB1bv79", "itemSku": "XOPAuxdQ", "itemType": "tRDo0uN6"}, "quantity": 33, "type": "ITEM"}, {"currency": {"currencyCode": "1Upqn2YK", "namespace": "SQ4Cd1eJ"}, "item": {"itemId": "wyHrHfi4", "itemName": "WbIa4mNs", "itemSku": "i2Or1yBy", "itemType": "OkwZ6Wje"}, "quantity": 63, "type": "CURRENCY"}], "source": "PURCHASE", "transactionId": "kBoqomAM"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op FulfillRewardsV2 \
    --namespace $AB_NAMESPACE \
    --userId 'wS9K6elY' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 490 'FulfillRewardsV2' test.out

#- 491 FulfillItems
eval_tap 0 491 'FulfillItems # SKIP deprecated' test.out

#- 492 RetryFulfillItems
eval_tap 0 492 'RetryFulfillItems # SKIP deprecated' test.out

#- 493 RevokeItems
eval_tap 0 493 'RevokeItems # SKIP deprecated' test.out

#- 494 V2PublicFulfillAppleIAPItem
# body param: body
echo '{"transactionId": "4ccRQfob"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op V2PublicFulfillAppleIAPItem \
    --namespace $AB_NAMESPACE \
    --userId 'ljBhlP7h' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 494 'V2PublicFulfillAppleIAPItem' test.out

#- 495 FulfillItemsV3
# body param: body
echo '{"items": [{"duration": 15, "endDate": "1985-05-04T00:00:00Z", "entitlementCollectionId": "FOuZc6I8", "entitlementOrigin": "Epic", "itemId": "PzH7CoAU", "itemSku": "3whDnvOR", "language": "65YplcZF", "metadata": {"UlWk5Aud": {}, "kie6hoo9": {}, "RkOjL0m9": {}}, "orderNo": "KmrXovDn", "origin": "System", "quantity": 74, "region": "bzWS1d7K", "source": "EXPIRATION", "startDate": "1984-11-01T00:00:00Z", "storeId": "cNDhFRA7"}, {"duration": 37, "endDate": "1978-08-31T00:00:00Z", "entitlementCollectionId": "dMrr99Z6", "entitlementOrigin": "Xbox", "itemId": "q4pxANlp", "itemSku": "lApC9BHJ", "language": "ZS3HoyhP", "metadata": {"5epKacGS": {}, "HLwpEXqe": {}, "Z9kaqLkR": {}}, "orderNo": "YsvdgXSg", "origin": "Twitch", "quantity": 84, "region": "3B5IrnoQ", "source": "IAP_CHARGEBACK_REVERSED", "startDate": "1993-05-30T00:00:00Z", "storeId": "vtGZxqDI"}, {"duration": 3, "endDate": "1997-10-22T00:00:00Z", "entitlementCollectionId": "Cm707KHK", "entitlementOrigin": "Xbox", "itemId": "33mwcGTr", "itemSku": "kmVDjrBh", "language": "2INCoC2R", "metadata": {"fqNxX66e": {}, "q4FTVusl": {}, "5eNfgeID": {}}, "orderNo": "DpBnPvtS", "origin": "Steam", "quantity": 62, "region": "wYmLHWdU", "source": "PROMOTION", "startDate": "1974-04-21T00:00:00Z", "storeId": "jo2Kj4GH"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op FulfillItemsV3 \
    --namespace $AB_NAMESPACE \
    --transactionId 'idxWLgEN' \
    --userId 'j3ekt9rE' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 495 'FulfillItemsV3' test.out

#- 496 RetryFulfillItemsV3
$CLI_EXE \
    --sn platform \
    --op RetryFulfillItemsV3 \
    --namespace $AB_NAMESPACE \
    --transactionId '5UbPm0aw' \
    --userId 'azMMIFz3' \
    > test.out 2>&1
eval_tap $? 496 'RetryFulfillItemsV3' test.out

#- 497 RevokeItemsV3
$CLI_EXE \
    --sn platform \
    --op RevokeItemsV3 \
    --namespace $AB_NAMESPACE \
    --transactionId 'ibjq1us1' \
    --userId 'GBdK70xS' \
    > test.out 2>&1
eval_tap $? 497 'RevokeItemsV3' test.out


# remove artifacts
rm -f "$CLI_TOKEN_FILE"
rm -f "$TEMP_JSON_INPUT"
rm -f "$TEMP_FILE_UPLOAD"

exit $EXIT_CODE