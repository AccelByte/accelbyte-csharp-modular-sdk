#!/usr/bin/env bash

# Copyright (c) 2021 AccelByte Inc. All Rights Reserved.
# This is licensed software from AccelByte Inc, for limitations
# and restrictions contact your company contract manager.

# This code is generated by tool. DO NOT EDIT.

# Meta:
# - random seed: 
# - template file: 

# Instructions:
# - Run the Justice SDK Mock Server first before running this script.

export AB_BASE_URL="http://127.0.0.1:8080"
export AB_CLIENT_ID="admin"
export AB_CLIENT_SECRET="admin"
export AB_NAMESPACE="test"
export AB_APP_NAME="UnitTest"

EXIT_CODE=0

eval_tap() {
  if [ $1 -eq 0 ]; then
    echo "ok $2 - $3"
  else
    EXIT_CODE=1
    echo "not ok $2 - $3"
    sed 's/^/# /g' $4
  fi
  rm -f $4
}

CLI_EXE="AccelByte.Sdk.Sample.Cli"
CLI_TOKEN_FILE="$(dirname "$(which $CLI_EXE)")/token.json"
TEMP_JSON_INPUT="input_json.json"
TEMP_FILE_UPLOAD="file_upload.bin"

echo "TAP version 13"
echo "1..445"

#- 1 Login
$CLI_EXE --op login --lt user --user user --pass user > test.out 2>&1
eval_tap $? 1 'Login' test.out

if [ $EXIT_CODE -ne 0 ]; then
  echo "Bail out! Login failed."
  exit $EXIT_CODE
fi

# echo "foo" > "$CLI_TOKEN_FILE"

#- 2 ListFulfillmentScripts
$CLI_EXE \
    --sn platform \
    --op ListFulfillmentScripts \
    > test.out 2>&1
eval_tap $? 2 'ListFulfillmentScripts' test.out

#- 3 GetFulfillmentScript
$CLI_EXE \
    --sn platform \
    --op GetFulfillmentScript \
    --id 'M0hPoXvG' \
    > test.out 2>&1
eval_tap $? 3 'GetFulfillmentScript' test.out

#- 4 CreateFulfillmentScript
# body param: body
echo '{"grantDays": "nxuWjnMo"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateFulfillmentScript \
    --id 'C3QvE1ob' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 4 'CreateFulfillmentScript' test.out

#- 5 DeleteFulfillmentScript
$CLI_EXE \
    --sn platform \
    --op DeleteFulfillmentScript \
    --id 'jVJRVYA0' \
    > test.out 2>&1
eval_tap $? 5 'DeleteFulfillmentScript' test.out

#- 6 UpdateFulfillmentScript
# body param: body
echo '{"grantDays": "3R7n42Fa"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateFulfillmentScript \
    --id 'WeEzhlEq' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 6 'UpdateFulfillmentScript' test.out

#- 7 ListItemTypeConfigs
$CLI_EXE \
    --sn platform \
    --op ListItemTypeConfigs \
    > test.out 2>&1
eval_tap $? 7 'ListItemTypeConfigs' test.out

#- 8 CreateItemTypeConfig
# body param: body
echo '{"clazz": "UirRQNij", "dryRun": true, "fulfillmentUrl": "ceCYNIEi", "itemType": "MEDIA", "purchaseConditionUrl": "mwElkdHq"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateItemTypeConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 8 'CreateItemTypeConfig' test.out

#- 9 SearchItemTypeConfig
$CLI_EXE \
    --sn platform \
    --op SearchItemTypeConfig \
    --clazz 'SaRIBG2H' \
    --itemType 'COINS' \
    > test.out 2>&1
eval_tap $? 9 'SearchItemTypeConfig' test.out

#- 10 GetItemTypeConfig
$CLI_EXE \
    --sn platform \
    --op GetItemTypeConfig \
    --id 'V4VKLRI1' \
    > test.out 2>&1
eval_tap $? 10 'GetItemTypeConfig' test.out

#- 11 UpdateItemTypeConfig
# body param: body
echo '{"clazz": "twfZRN8A", "dryRun": false, "fulfillmentUrl": "NTJCukz0", "purchaseConditionUrl": "ovQbIkba"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateItemTypeConfig \
    --id 'kZQFvF8d' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 11 'UpdateItemTypeConfig' test.out

#- 12 DeleteItemTypeConfig
$CLI_EXE \
    --sn platform \
    --op DeleteItemTypeConfig \
    --id 'r4EtYtBi' \
    > test.out 2>&1
eval_tap $? 12 'DeleteItemTypeConfig' test.out

#- 13 QueryCampaigns
$CLI_EXE \
    --sn platform \
    --op QueryCampaigns \
    --namespace $AB_NAMESPACE \
    --limit '9' \
    --name 'x748MjJI' \
    --offset '24' \
    --tag 'yvSeGPcK' \
    > test.out 2>&1
eval_tap $? 13 'QueryCampaigns' test.out

#- 14 CreateCampaign
# body param: body
echo '{"description": "ayMrLgLR", "items": [{"extraSubscriptionDays": 80, "itemId": "EkZGODbE", "itemName": "Z4DcbmaU", "quantity": 0}, {"extraSubscriptionDays": 79, "itemId": "KuaECrDm", "itemName": "n2rYblV2", "quantity": 98}, {"extraSubscriptionDays": 79, "itemId": "WKyBIZLJ", "itemName": "UDmxr5ew", "quantity": 35}], "maxRedeemCountPerCampaignPerUser": 2, "maxRedeemCountPerCode": 63, "maxRedeemCountPerCodePerUser": 38, "maxSaleCount": 20, "name": "dCqN8klD", "redeemEnd": "1991-09-03T00:00:00Z", "redeemStart": "1998-10-21T00:00:00Z", "redeemType": "ITEM", "status": "ACTIVE", "tags": ["wGxOCimR", "ixFCJO2n", "iMFuScY9"], "type": "REDEMPTION"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCampaign \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 14 'CreateCampaign' test.out

#- 15 GetCampaign
$CLI_EXE \
    --sn platform \
    --op GetCampaign \
    --campaignId 'dUvzmV6X' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 15 'GetCampaign' test.out

#- 16 UpdateCampaign
# body param: body
echo '{"description": "Qg8Sv62v", "items": [{"extraSubscriptionDays": 22, "itemId": "tibOMop1", "itemName": "GTurJnCg", "quantity": 3}, {"extraSubscriptionDays": 47, "itemId": "RzFEf5Q1", "itemName": "FNwsNdu4", "quantity": 29}, {"extraSubscriptionDays": 18, "itemId": "zA23SR1p", "itemName": "d70BzZyd", "quantity": 43}], "maxRedeemCountPerCampaignPerUser": 85, "maxRedeemCountPerCode": 82, "maxRedeemCountPerCodePerUser": 31, "maxSaleCount": 72, "name": "wDzr8Cc7", "redeemEnd": "1989-01-26T00:00:00Z", "redeemStart": "1978-09-08T00:00:00Z", "redeemType": "ITEM", "status": "ACTIVE", "tags": ["AgvnGhft", "a2z784uz", "fCgLgg0T"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCampaign \
    --campaignId 'dvx9khtW' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 16 'UpdateCampaign' test.out

#- 17 GetCampaignDynamic
$CLI_EXE \
    --sn platform \
    --op GetCampaignDynamic \
    --campaignId 'KhrljPXV' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 17 'GetCampaignDynamic' test.out

#- 18 GetLootBoxPluginConfig
$CLI_EXE \
    --sn platform \
    --op GetLootBoxPluginConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 18 'GetLootBoxPluginConfig' test.out

#- 19 UpdateLootBoxPluginConfig
# body param: body
echo '{"appConfig": {"appName": "RWNAMlWb"}, "customConfig": {"connectionType": "INSECURE", "grpcServerAddress": "6T6dlBtl"}, "extendType": "APP"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateLootBoxPluginConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 19 'UpdateLootBoxPluginConfig' test.out

#- 20 DeleteLootBoxPluginConfig
$CLI_EXE \
    --sn platform \
    --op DeleteLootBoxPluginConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 20 'DeleteLootBoxPluginConfig' test.out

#- 21 UplodLootBoxPluginConfigCert
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UplodLootBoxPluginConfigCert \
    --namespace $AB_NAMESPACE \
    --upload file $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 21 'UplodLootBoxPluginConfigCert' test.out

#- 22 GetLootBoxGrpcInfo
$CLI_EXE \
    --sn platform \
    --op GetLootBoxGrpcInfo \
    --namespace $AB_NAMESPACE \
    --force 'true' \
    > test.out 2>&1
eval_tap $? 22 'GetLootBoxGrpcInfo' test.out

#- 23 GetSectionPluginConfig
$CLI_EXE \
    --sn platform \
    --op GetSectionPluginConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 23 'GetSectionPluginConfig' test.out

#- 24 UpdateSectionPluginConfig
# body param: body
echo '{"appConfig": {"appName": "wQPsbTxs"}, "customConfig": {"connectionType": "TLS", "grpcServerAddress": "129RdJWm"}, "extendType": "CUSTOM"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateSectionPluginConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 24 'UpdateSectionPluginConfig' test.out

#- 25 DeleteSectionPluginConfig
$CLI_EXE \
    --sn platform \
    --op DeleteSectionPluginConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 25 'DeleteSectionPluginConfig' test.out

#- 26 UploadSectionPluginConfigCert
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UploadSectionPluginConfigCert \
    --namespace $AB_NAMESPACE \
    --upload file $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 26 'UploadSectionPluginConfigCert' test.out

#- 27 GetRootCategories
$CLI_EXE \
    --sn platform \
    --op GetRootCategories \
    --namespace $AB_NAMESPACE \
    --storeId '1iooy6xu' \
    > test.out 2>&1
eval_tap $? 27 'GetRootCategories' test.out

#- 28 CreateCategory
# body param: body
echo '{"categoryPath": "5tpsFgnh", "localizationDisplayNames": {"nNhcZd0k": "0rfA0jrt", "l5s59odA": "0hapcMGC", "pGknghS5": "0jCIP7NM"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCategory \
    --namespace $AB_NAMESPACE \
    --storeId 'rK8zjm8l' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 28 'CreateCategory' test.out

#- 29 ListCategoriesBasic
$CLI_EXE \
    --sn platform \
    --op ListCategoriesBasic \
    --namespace $AB_NAMESPACE \
    --storeId 'HtHBh3YY' \
    > test.out 2>&1
eval_tap $? 29 'ListCategoriesBasic' test.out

#- 30 GetCategory
$CLI_EXE \
    --sn platform \
    --op GetCategory \
    --categoryPath '6htFmGo2' \
    --namespace $AB_NAMESPACE \
    --storeId 'mbQ1qFvX' \
    > test.out 2>&1
eval_tap $? 30 'GetCategory' test.out

#- 31 UpdateCategory
# body param: body
echo '{"localizationDisplayNames": {"ZN2kEOBl": "cax0IcLD", "bLuW4E64": "iEZkuhKE", "RY1IiU36": "V1OZb2qk"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCategory \
    --categoryPath 'FAqCgQiW' \
    --namespace $AB_NAMESPACE \
    --storeId 'njzgyFyD' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 31 'UpdateCategory' test.out

#- 32 DeleteCategory
$CLI_EXE \
    --sn platform \
    --op DeleteCategory \
    --categoryPath 'e0YT0UbJ' \
    --namespace $AB_NAMESPACE \
    --storeId '1ZSqD47W' \
    > test.out 2>&1
eval_tap $? 32 'DeleteCategory' test.out

#- 33 GetChildCategories
$CLI_EXE \
    --sn platform \
    --op GetChildCategories \
    --categoryPath 'xKENZkx8' \
    --namespace $AB_NAMESPACE \
    --storeId '1cCmw8kr' \
    > test.out 2>&1
eval_tap $? 33 'GetChildCategories' test.out

#- 34 GetDescendantCategories
$CLI_EXE \
    --sn platform \
    --op GetDescendantCategories \
    --categoryPath 'dhETQI3J' \
    --namespace $AB_NAMESPACE \
    --storeId 'hDWMnwPC' \
    > test.out 2>&1
eval_tap $? 34 'GetDescendantCategories' test.out

#- 35 QueryCodes
$CLI_EXE \
    --sn platform \
    --op QueryCodes \
    --campaignId 'DqZKSnrs' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --batchNo '29' \
    --code 'Ggol266B' \
    --limit '98' \
    --offset '93' \
    > test.out 2>&1
eval_tap $? 35 'QueryCodes' test.out

#- 36 CreateCodes
# body param: body
echo '{"quantity": 34}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCodes \
    --campaignId 'oQDeOjRM' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 36 'CreateCodes' test.out

#- 37 Download
$CLI_EXE \
    --sn platform \
    --op Download \
    --campaignId '5PI2aHNW' \
    --namespace $AB_NAMESPACE \
    --batchNo '87' \
    > test.out 2>&1
eval_tap $? 37 'Download' test.out

#- 38 BulkDisableCodes
$CLI_EXE \
    --sn platform \
    --op BulkDisableCodes \
    --campaignId 'ImcetBcp' \
    --namespace $AB_NAMESPACE \
    --batchNo '80' \
    > test.out 2>&1
eval_tap $? 38 'BulkDisableCodes' test.out

#- 39 BulkEnableCodes
$CLI_EXE \
    --sn platform \
    --op BulkEnableCodes \
    --campaignId 'ov5RuGcd' \
    --namespace $AB_NAMESPACE \
    --batchNo '99' \
    > test.out 2>&1
eval_tap $? 39 'BulkEnableCodes' test.out

#- 40 QueryRedeemHistory
$CLI_EXE \
    --sn platform \
    --op QueryRedeemHistory \
    --campaignId 'sBvxBwOY' \
    --namespace $AB_NAMESPACE \
    --code '2LrlQVJ7' \
    --limit '74' \
    --offset '13' \
    --userId '9BLdRAce' \
    > test.out 2>&1
eval_tap $? 40 'QueryRedeemHistory' test.out

#- 41 GetCode
$CLI_EXE \
    --sn platform \
    --op GetCode \
    --code 'h6lhA94k' \
    --namespace $AB_NAMESPACE \
    --redeemable 'false' \
    > test.out 2>&1
eval_tap $? 41 'GetCode' test.out

#- 42 DisableCode
$CLI_EXE \
    --sn platform \
    --op DisableCode \
    --code 'wHlDWF3q' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 42 'DisableCode' test.out

#- 43 EnableCode
$CLI_EXE \
    --sn platform \
    --op EnableCode \
    --code 'cGr1cvOM' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 43 'EnableCode' test.out

#- 44 GetServicePluginConfig
eval_tap 0 44 'GetServicePluginConfig # SKIP deprecated' test.out

#- 45 UpdateServicePluginConfig
eval_tap 0 45 'UpdateServicePluginConfig # SKIP deprecated' test.out

#- 46 DeleteServicePluginConfig
eval_tap 0 46 'DeleteServicePluginConfig # SKIP deprecated' test.out

#- 47 ListCurrencies
$CLI_EXE \
    --sn platform \
    --op ListCurrencies \
    --namespace $AB_NAMESPACE \
    --currencyType 'VIRTUAL' \
    > test.out 2>&1
eval_tap $? 47 'ListCurrencies' test.out

#- 48 CreateCurrency
# body param: body
echo '{"currencyCode": "hlWOMBxT", "currencySymbol": "o9PW6Y86", "currencyType": "REAL", "decimals": 93, "localizationDescriptions": {"UQ9e1cmV": "k9NTtIr0", "Ax41gviR": "5OFXRFUt", "zNI1JeVw": "X6nqSjJ2"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCurrency \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 48 'CreateCurrency' test.out

#- 49 UpdateCurrency
# body param: body
echo '{"localizationDescriptions": {"qIYYvKlz": "dgwqt51i", "TWj7GtmY": "j6Ohx9GX", "PTnbk4ns": "agb3X9sM"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCurrency \
    --currencyCode 'dNQE5Fah' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 49 'UpdateCurrency' test.out

#- 50 DeleteCurrency
$CLI_EXE \
    --sn platform \
    --op DeleteCurrency \
    --currencyCode 'JORGN9Q9' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 50 'DeleteCurrency' test.out

#- 51 GetCurrencyConfig
$CLI_EXE \
    --sn platform \
    --op GetCurrencyConfig \
    --currencyCode 'Gntzl7az' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 51 'GetCurrencyConfig' test.out

#- 52 GetCurrencySummary
$CLI_EXE \
    --sn platform \
    --op GetCurrencySummary \
    --currencyCode 'SigAT0gz' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 52 'GetCurrencySummary' test.out

#- 53 GetDLCItemConfig
$CLI_EXE \
    --sn platform \
    --op GetDLCItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 53 'GetDLCItemConfig' test.out

#- 54 UpdateDLCItemConfig
# body param: body
echo '{"data": [{"id": "kIPZAt7R", "rewards": [{"currency": {"currencyCode": "UqkhDeJ6", "namespace": "OV8THk0R"}, "item": {"itemId": "5GTONwpc", "itemSku": "LcJGjCAm", "itemType": "8JPmHh3S"}, "quantity": 25, "type": "ITEM"}, {"currency": {"currencyCode": "EU6CKD52", "namespace": "rKs6Joc4"}, "item": {"itemId": "A5O5HPVD", "itemSku": "fVCdhWJz", "itemType": "hn1yGCMv"}, "quantity": 45, "type": "ITEM"}, {"currency": {"currencyCode": "wi49VkkK", "namespace": "XCqeDzqa"}, "item": {"itemId": "P0AEVBZd", "itemSku": "iWoibCOv", "itemType": "IXb453Ye"}, "quantity": 89, "type": "ITEM"}]}, {"id": "9lJg3HVz", "rewards": [{"currency": {"currencyCode": "EQdpIrwp", "namespace": "2PwPXzVt"}, "item": {"itemId": "nvXgIo1T", "itemSku": "H0e6XZPP", "itemType": "0bpbisM2"}, "quantity": 54, "type": "ITEM"}, {"currency": {"currencyCode": "mQqZsMND", "namespace": "0q5TNo8z"}, "item": {"itemId": "yHLfCiuZ", "itemSku": "zWEa7mjZ", "itemType": "9DZkThcx"}, "quantity": 96, "type": "CURRENCY"}, {"currency": {"currencyCode": "3Ox30Goe", "namespace": "tozWq2mb"}, "item": {"itemId": "WBmfQT7j", "itemSku": "k3oP4WuB", "itemType": "DIbk94tr"}, "quantity": 91, "type": "CURRENCY"}]}, {"id": "6Buou2wg", "rewards": [{"currency": {"currencyCode": "SCxFwdQL", "namespace": "Tkw9lUC5"}, "item": {"itemId": "ip9PQ8Sc", "itemSku": "8ibtP5s3", "itemType": "BclY18ps"}, "quantity": 45, "type": "CURRENCY"}, {"currency": {"currencyCode": "mnQqboEG", "namespace": "feoWStY6"}, "item": {"itemId": "NKtybflm", "itemSku": "SlnT9XvY", "itemType": "kmfGYcYV"}, "quantity": 74, "type": "CURRENCY"}, {"currency": {"currencyCode": "gjMBWhGn", "namespace": "KYqASBSb"}, "item": {"itemId": "Vm9fqGmq", "itemSku": "5ItbTDpD", "itemType": "vadnhmF1"}, "quantity": 33, "type": "CURRENCY"}]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateDLCItemConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 54 'UpdateDLCItemConfig' test.out

#- 55 DeleteDLCItemConfig
$CLI_EXE \
    --sn platform \
    --op DeleteDLCItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 55 'DeleteDLCItemConfig' test.out

#- 56 GetPlatformDLCConfig
$CLI_EXE \
    --sn platform \
    --op GetPlatformDLCConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 56 'GetPlatformDLCConfig' test.out

#- 57 UpdatePlatformDLCConfig
# body param: body
echo '{"data": [{"platform": "PSN", "platformDlcIdMap": {"2A7k5Cow": "gu8Y7ulo", "CBiqUnCR": "58zIm1Hv", "DBKwfQO0": "yCmBXHzE"}}, {"platform": "OCULUS", "platformDlcIdMap": {"JP1zJck1": "yKojUapR", "ECONIdLo": "e0pSSVZD", "uPDx5HYO": "PsigdaIc"}}, {"platform": "EPICGAMES", "platformDlcIdMap": {"98RkE8QH": "sSUKzqzs", "iSqHV0sy": "MdDIVKcl", "Kfxz6gSF": "ZDVRHjsZ"}}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePlatformDLCConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 57 'UpdatePlatformDLCConfig' test.out

#- 58 DeletePlatformDLCConfig
$CLI_EXE \
    --sn platform \
    --op DeletePlatformDLCConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 58 'DeletePlatformDLCConfig' test.out

#- 59 QueryEntitlements
$CLI_EXE \
    --sn platform \
    --op QueryEntitlements \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --appType 'SOFTWARE' \
    --entitlementClazz 'CODE' \
    --entitlementName 'rTne1jxr' \
    --itemId '["DYEoXIpb", "nNvMSJtH", "eVIfgxuz"]' \
    --limit '88' \
    --offset '47' \
    --origin 'Other' \
    --userId 'ljpgRUs9' \
    > test.out 2>&1
eval_tap $? 59 'QueryEntitlements' test.out

#- 60 QueryEntitlements1
$CLI_EXE \
    --sn platform \
    --op QueryEntitlements1 \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --itemIds '["45vSnlde", "AxtlbVtT", "ZzqSBngP"]' \
    --limit '82' \
    --offset '14' \
    > test.out 2>&1
eval_tap $? 60 'QueryEntitlements1' test.out

#- 61 EnableEntitlementOriginFeature
$CLI_EXE \
    --sn platform \
    --op EnableEntitlementOriginFeature \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 61 'EnableEntitlementOriginFeature' test.out

#- 62 GetEntitlementConfigInfo
$CLI_EXE \
    --sn platform \
    --op GetEntitlementConfigInfo \
    --namespace $AB_NAMESPACE \
    --withoutCache 'true' \
    > test.out 2>&1
eval_tap $? 62 'GetEntitlementConfigInfo' test.out

#- 63 GrantEntitlements
# body param: body
echo '{"entitlementGrantList": [{"collectionId": "o6PyVFtp", "endDate": "1994-05-26T00:00:00Z", "grantedCode": "bweuzwAV", "itemId": "jGKMpAj9", "itemNamespace": "uDb0i45f", "language": "dY_oGQJ-op", "origin": "Steam", "quantity": 31, "region": "Ft0EE2bD", "source": "REWARD", "startDate": "1987-11-22T00:00:00Z", "storeId": "zcmqotjm"}, {"collectionId": "SHrW48h1", "endDate": "1985-05-24T00:00:00Z", "grantedCode": "7dbQ7fRg", "itemId": "XUsDASBr", "itemNamespace": "1RAo8UcM", "language": "WAY_rF", "origin": "System", "quantity": 30, "region": "5Lxk1js3", "source": "PURCHASE", "startDate": "1972-12-14T00:00:00Z", "storeId": "ef1g67Oy"}, {"collectionId": "fIxTZYam", "endDate": "1997-02-10T00:00:00Z", "grantedCode": "4P2J6Q9u", "itemId": "RMsZA4tq", "itemNamespace": "8j6bxLqb", "language": "HXNL-vz", "origin": "Steam", "quantity": 92, "region": "0jWIumr0", "source": "PURCHASE", "startDate": "1980-04-17T00:00:00Z", "storeId": "1e2iJEKi"}], "userIds": ["XFYbnx4g", "LbE4ASgW", "erXaJLgO"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op GrantEntitlements \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 63 'GrantEntitlements' test.out

#- 64 RevokeEntitlements
# body param: body
echo '["kAYDIndU", "GzpXCjmz", "lpzGZqAz"]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RevokeEntitlements \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 64 'RevokeEntitlements' test.out

#- 65 GetEntitlement
$CLI_EXE \
    --sn platform \
    --op GetEntitlement \
    --entitlementId 'dJKTJJPI' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 65 'GetEntitlement' test.out

#- 66 QueryFulfillmentHistories
$CLI_EXE \
    --sn platform \
    --op QueryFulfillmentHistories \
    --namespace $AB_NAMESPACE \
    --limit '58' \
    --offset '32' \
    --status 'FAIL' \
    --userId '74hYtgRZ' \
    > test.out 2>&1
eval_tap $? 66 'QueryFulfillmentHistories' test.out

#- 67 QueryIAPClawbackHistory
$CLI_EXE \
    --sn platform \
    --op QueryIAPClawbackHistory \
    --namespace $AB_NAMESPACE \
    --endTime 'gtXA75cI' \
    --eventType 'CHARGEBACK' \
    --externalOrderId 'w0wrhyiw' \
    --limit '100' \
    --offset '26' \
    --startTime 'CrrGZJ33' \
    --status 'FAIL' \
    --userId 'QaJ4p5cc' \
    > test.out 2>&1
eval_tap $? 67 'QueryIAPClawbackHistory' test.out

#- 68 MockPlayStationStreamEvent
# body param: body
echo '{"body": {"account": "t48rfhA5", "additionalData": {"entitlement": [{"clientTransaction": [{"amountConsumed": 17, "clientTransactionId": "x8gW0mWJ"}, {"amountConsumed": 24, "clientTransactionId": "uAhVo843"}, {"amountConsumed": 17, "clientTransactionId": "PXrEgzw9"}], "entitlementId": "VLMoor7x", "usageCount": 34}, {"clientTransaction": [{"amountConsumed": 49, "clientTransactionId": "cEu5tXOF"}, {"amountConsumed": 17, "clientTransactionId": "v7O6QBjN"}, {"amountConsumed": 90, "clientTransactionId": "PagDzMOo"}], "entitlementId": "ojmPqZSO", "usageCount": 47}, {"clientTransaction": [{"amountConsumed": 52, "clientTransactionId": "ZYC7UMLB"}, {"amountConsumed": 13, "clientTransactionId": "8YQbAzz1"}, {"amountConsumed": 28, "clientTransactionId": "UajKTj88"}], "entitlementId": "dERSyQZt", "usageCount": 100}], "purpose": "0UEyG3GF"}, "originalTitleName": "bp4AuPqG", "paymentProductSKU": "SoyRkmvk", "purchaseDate": "OzJK38AJ", "sourceOrderItemId": "8k2BSreW", "titleName": "NM8yAoVF"}, "eventDomain": "iSb17Tkv", "eventSource": "IGBn29Jg", "eventType": "7oTA2xvw", "eventVersion": 19, "id": "OoE6xhh7", "timestamp": "2KJnKlB6"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op MockPlayStationStreamEvent \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 68 'MockPlayStationStreamEvent' test.out

#- 69 GetAppleIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetAppleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 69 'GetAppleIAPConfig' test.out

#- 70 UpdateAppleIAPConfig
# body param: body
echo '{"bundleId": "gKShCoOi", "password": "xP3OeVEa"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateAppleIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 70 'UpdateAppleIAPConfig' test.out

#- 71 DeleteAppleIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteAppleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 71 'DeleteAppleIAPConfig' test.out

#- 72 GetEpicGamesIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetEpicGamesIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 72 'GetEpicGamesIAPConfig' test.out

#- 73 UpdateEpicGamesIAPConfig
# body param: body
echo '{"sandboxId": "qIfqv5DA"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateEpicGamesIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 73 'UpdateEpicGamesIAPConfig' test.out

#- 74 DeleteEpicGamesIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteEpicGamesIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 74 'DeleteEpicGamesIAPConfig' test.out

#- 75 GetGoogleIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetGoogleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 75 'GetGoogleIAPConfig' test.out

#- 76 UpdateGoogleIAPConfig
# body param: body
echo '{"applicationName": "2t8btizo", "serviceAccountId": "BoKzuW5A"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateGoogleIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 76 'UpdateGoogleIAPConfig' test.out

#- 77 DeleteGoogleIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteGoogleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 77 'DeleteGoogleIAPConfig' test.out

#- 78 UpdateGoogleP12File
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UpdateGoogleP12File \
    --namespace $AB_NAMESPACE \
    --upload file $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 78 'UpdateGoogleP12File' test.out

#- 79 GetIAPItemConfig
$CLI_EXE \
    --sn platform \
    --op GetIAPItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 79 'GetIAPItemConfig' test.out

#- 80 UpdateIAPItemConfig
# body param: body
echo '{"data": [{"itemIdentity": "9doJsF64", "itemIdentityType": "ITEM_ID", "platformProductIdMap": {"uamLH0Ju": "v7AL5KUs", "yS56XimC": "Dcr971U5", "CekQOayc": "6G2ZDNeg"}}, {"itemIdentity": "XOKPLcAi", "itemIdentityType": "ITEM_ID", "platformProductIdMap": {"7QPWN6D6": "tFmDLfib", "VE7OYWc2": "6xA66FlD", "PySMk8NT": "fWJLniEe"}}, {"itemIdentity": "Me673i39", "itemIdentityType": "ITEM_ID", "platformProductIdMap": {"fpJuxVfe": "0e9Z39px", "agFTXwEy": "Z9nvND4v", "fAGvPIIZ": "5mbvAPKj"}}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateIAPItemConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 80 'UpdateIAPItemConfig' test.out

#- 81 DeleteIAPItemConfig
$CLI_EXE \
    --sn platform \
    --op DeleteIAPItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 81 'DeleteIAPItemConfig' test.out

#- 82 GetOculusIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetOculusIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 82 'GetOculusIAPConfig' test.out

#- 83 UpdateOculusIAPConfig
# body param: body
echo '{"appId": "AhGN5Inr", "appSecret": "JbhPzfe8"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateOculusIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 83 'UpdateOculusIAPConfig' test.out

#- 84 DeleteOculusIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteOculusIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 84 'DeleteOculusIAPConfig' test.out

#- 85 GetPlayStationIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetPlayStationIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 85 'GetPlayStationIAPConfig' test.out

#- 86 UpdatePlaystationIAPConfig
# body param: body
echo '{"backOfficeServerClientId": "HjyuRu9Q", "backOfficeServerClientSecret": "j6E9Uvw7", "enableStreamJob": true, "environment": "w8zHK4TV", "streamName": "ukdaNmgZ", "streamPartnerName": "potp81Np"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePlaystationIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 86 'UpdatePlaystationIAPConfig' test.out

#- 87 DeletePlaystationIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeletePlaystationIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 87 'DeletePlaystationIAPConfig' test.out

#- 88 ValidateExistedPlaystationIAPConfig
$CLI_EXE \
    --sn platform \
    --op ValidateExistedPlaystationIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 88 'ValidateExistedPlaystationIAPConfig' test.out

#- 89 ValidatePlaystationIAPConfig
# body param: body
echo '{"backOfficeServerClientId": "KETVb5aT", "backOfficeServerClientSecret": "RppLUtd3", "enableStreamJob": true, "environment": "yogVqAP0", "streamName": "rFCRkAUw", "streamPartnerName": "q8z3GYPD"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ValidatePlaystationIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 89 'ValidatePlaystationIAPConfig' test.out

#- 90 GetSteamIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetSteamIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 90 'GetSteamIAPConfig' test.out

#- 91 UpdateSteamIAPConfig
# body param: body
echo '{"appId": "awHA9Alp", "publisherAuthenticationKey": "2lktTYka"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateSteamIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 91 'UpdateSteamIAPConfig' test.out

#- 92 DeleteSteamIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteSteamIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 92 'DeleteSteamIAPConfig' test.out

#- 93 GetTwitchIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetTwitchIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 93 'GetTwitchIAPConfig' test.out

#- 94 UpdateTwitchIAPConfig
# body param: body
echo '{"clientId": "fiYJ9ZDU", "clientSecret": "8zCcDLhM", "organizationId": "jaG2Rdms"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateTwitchIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 94 'UpdateTwitchIAPConfig' test.out

#- 95 DeleteTwitchIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteTwitchIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 95 'DeleteTwitchIAPConfig' test.out

#- 96 GetXblIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetXblIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 96 'GetXblIAPConfig' test.out

#- 97 UpdateXblIAPConfig
# body param: body
echo '{"relyingPartyCert": "6Lw70Aad"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXblIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 97 'UpdateXblIAPConfig' test.out

#- 98 DeleteXblAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteXblAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 98 'DeleteXblAPConfig' test.out

#- 99 UpdateXblBPCertFile
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UpdateXblBPCertFile \
    --namespace $AB_NAMESPACE \
    --upload file $TEMP_FILE_UPLOAD \
    --password 'nS2cKV1z' \
    > test.out 2>&1
eval_tap $? 99 'UpdateXblBPCertFile' test.out

#- 100 DownloadInvoiceDetails
$CLI_EXE \
    --sn platform \
    --op DownloadInvoiceDetails \
    --namespace $AB_NAMESPACE \
    --feature 'jlhmjTHn' \
    --itemId '4a8a3viT' \
    --itemType 'CODE' \
    --endTime 'eHutDPAo' \
    --startTime 'vtyJZYvX' \
    > test.out 2>&1
eval_tap $? 100 'DownloadInvoiceDetails' test.out

#- 101 GenerateInvoiceSummary
$CLI_EXE \
    --sn platform \
    --op GenerateInvoiceSummary \
    --namespace $AB_NAMESPACE \
    --feature 'IHch5Fnh' \
    --itemId 'DSWWRo1c' \
    --itemType 'OPTIONBOX' \
    --endTime 'HZt5QWn9' \
    --startTime 'uLzMnUmp' \
    > test.out 2>&1
eval_tap $? 101 'GenerateInvoiceSummary' test.out

#- 102 SyncInGameItem
# body param: body
echo '{"categoryPath": "h4Gkoito", "targetItemId": "hI15dxN2", "targetNamespace": "UEVOzm3P"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncInGameItem \
    --namespace $AB_NAMESPACE \
    --storeId '6CJzmshL' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 102 'SyncInGameItem' test.out

#- 103 CreateItem
# body param: body
echo '{"appId": "nt3M0TMW", "appType": "GAME", "baseAppId": "JNC1cHfz", "boothName": "91PiYMjb", "categoryPath": "i4KtsjG5", "clazz": "LvcBkDwz", "displayOrder": 40, "entitlementType": "CONSUMABLE", "ext": {"LhlDTRDn": {}, "kZ425hZb": {}, "iSCkcWrN": {}}, "features": ["blNKJsq3", "92pTu3y7", "5spv71OT"], "flexible": false, "images": [{"as": "IxcFTfYD", "caption": "rdjR0G80", "height": 47, "imageUrl": "UeaITNFV", "smallImageUrl": "4bMOYkWl", "width": 90}, {"as": "qMxlzUMn", "caption": "DVIGLo38", "height": 43, "imageUrl": "YnvlTJXv", "smallImageUrl": "b9bCtTwF", "width": 34}, {"as": "xrCxDxVD", "caption": "JbtbDGpx", "height": 5, "imageUrl": "1x4vGPvj", "smallImageUrl": "awIB8TGB", "width": 84}], "inventoryConfig": {"customAttributes": {"xbM3lJZZ": {}, "H9vfWawz": {}, "kKolGUim": {}}, "serverCustomAttributes": {"KETvW4Rz": {}, "5DWfygrJ": {}, "sz6Axv3h": {}}, "slotUsed": 28}, "itemIds": ["y8sqlfgt", "gvDGSJCE", "blWQJePh"], "itemQty": {"zmn6LxDy": 88, "Tu8Muhyt": 50, "cIEVQuzF": 14}, "itemType": "LOOTBOX", "listable": false, "localizations": {"Z2qSVGky": {"description": "U7dEYR8p", "localExt": {"eCXmmrtL": {}, "R6gndD1y": {}, "6iqdqYUl": {}}, "longDescription": "GUMV4bPa", "title": "HPDO76Ar"}, "4NnRVQu5": {"description": "KjxcRbOq", "localExt": {"p6Ij57KF": {}, "IHooMfXU": {}, "gXw74r9n": {}}, "longDescription": "krXRWKWo", "title": "VMUWkNuQ"}, "xUf2ZY0Z": {"description": "VxhJMGGz", "localExt": {"IIJiv9EE": {}, "VIrkwoqE": {}, "7Wmw3Jt4": {}}, "longDescription": "eDUjpqHj", "title": "gs5LEDa6"}}, "lootBoxConfig": {"rewardCount": 12, "rewards": [{"lootBoxItems": [{"count": 100, "duration": 89, "endDate": "1990-05-14T00:00:00Z", "itemId": "vp2XuCGF", "itemSku": "uW3jya0y", "itemType": "WEosxMEp"}, {"count": 98, "duration": 22, "endDate": "1995-07-21T00:00:00Z", "itemId": "XsFhsTkg", "itemSku": "YwizoFs5", "itemType": "RK0Xgqty"}, {"count": 8, "duration": 74, "endDate": "1985-07-22T00:00:00Z", "itemId": "QvjUNare", "itemSku": "pcwfqXaF", "itemType": "WeQKCzti"}], "name": "dlQ6nEMo", "odds": 0.7609630194774324, "type": "REWARD", "weight": 56}, {"lootBoxItems": [{"count": 98, "duration": 77, "endDate": "1971-05-17T00:00:00Z", "itemId": "x7UtsQuW", "itemSku": "iA1PTrCq", "itemType": "Dy3a4zYO"}, {"count": 65, "duration": 97, "endDate": "1998-01-03T00:00:00Z", "itemId": "qlE4V4Ib", "itemSku": "jYHgYgIY", "itemType": "A2yONlCE"}, {"count": 23, "duration": 81, "endDate": "1980-12-01T00:00:00Z", "itemId": "rIS4jEAy", "itemSku": "Fp22rrAL", "itemType": "c7DQoJxJ"}], "name": "Rv4uvNa3", "odds": 0.502427363865586, "type": "PROBABILITY_GROUP", "weight": 38}, {"lootBoxItems": [{"count": 57, "duration": 69, "endDate": "1973-08-21T00:00:00Z", "itemId": "h8AJ6QVc", "itemSku": "aF0gwnYn", "itemType": "WZ8i6blh"}, {"count": 87, "duration": 29, "endDate": "1971-11-17T00:00:00Z", "itemId": "GZr9ypR4", "itemSku": "1pNE90vC", "itemType": "ZKMko9PU"}, {"count": 62, "duration": 37, "endDate": "1971-06-22T00:00:00Z", "itemId": "AONHGHz3", "itemSku": "ihVAcsNE", "itemType": "W3Y1KHtj"}], "name": "XA7VEuAH", "odds": 0.4456062185359486, "type": "PROBABILITY_GROUP", "weight": 9}], "rollFunction": "DEFAULT"}, "maxCount": 68, "maxCountPerUser": 59, "name": "QKy4MPoN", "optionBoxConfig": {"boxItems": [{"count": 12, "duration": 40, "endDate": "1986-09-24T00:00:00Z", "itemId": "y1ovEi1p", "itemSku": "OjDOhYSp", "itemType": "x33a9Nom"}, {"count": 56, "duration": 70, "endDate": "1993-06-28T00:00:00Z", "itemId": "OW9yzhoH", "itemSku": "70HrSwNg", "itemType": "KHwyN7id"}, {"count": 49, "duration": 6, "endDate": "1983-05-11T00:00:00Z", "itemId": "43bBBUv1", "itemSku": "ESfS0fos", "itemType": "n8yRhYdt"}]}, "purchasable": true, "recurring": {"cycle": "MONTHLY", "fixedFreeDays": 31, "fixedTrialCycles": 49, "graceDays": 49}, "regionData": {"KyMIX9gI": [{"currencyCode": "xa1Cf5ku", "currencyNamespace": "XKUyvU39", "currencyType": "REAL", "discountAmount": 96, "discountExpireAt": "1994-04-13T00:00:00Z", "discountPercentage": 5, "discountPurchaseAt": "1992-05-22T00:00:00Z", "expireAt": "1983-04-19T00:00:00Z", "price": 94, "purchaseAt": "1993-02-28T00:00:00Z", "trialPrice": 99}, {"currencyCode": "t1n7LMtZ", "currencyNamespace": "rM9wFi4e", "currencyType": "VIRTUAL", "discountAmount": 11, "discountExpireAt": "1986-06-15T00:00:00Z", "discountPercentage": 34, "discountPurchaseAt": "1982-11-18T00:00:00Z", "expireAt": "1995-03-18T00:00:00Z", "price": 90, "purchaseAt": "1986-12-28T00:00:00Z", "trialPrice": 58}, {"currencyCode": "rdMVSbeV", "currencyNamespace": "3hyhdWhn", "currencyType": "VIRTUAL", "discountAmount": 49, "discountExpireAt": "1991-01-18T00:00:00Z", "discountPercentage": 60, "discountPurchaseAt": "1996-02-24T00:00:00Z", "expireAt": "1994-08-18T00:00:00Z", "price": 87, "purchaseAt": "1972-07-27T00:00:00Z", "trialPrice": 85}], "lkCqx1F6": [{"currencyCode": "qtRqJg1u", "currencyNamespace": "l5fFolu8", "currencyType": "REAL", "discountAmount": 75, "discountExpireAt": "1986-12-09T00:00:00Z", "discountPercentage": 63, "discountPurchaseAt": "1972-10-25T00:00:00Z", "expireAt": "1971-03-26T00:00:00Z", "price": 29, "purchaseAt": "1993-04-30T00:00:00Z", "trialPrice": 41}, {"currencyCode": "aCKL6Jti", "currencyNamespace": "jCqEmVoa", "currencyType": "REAL", "discountAmount": 9, "discountExpireAt": "1979-01-07T00:00:00Z", "discountPercentage": 46, "discountPurchaseAt": "1998-08-06T00:00:00Z", "expireAt": "1977-12-17T00:00:00Z", "price": 80, "purchaseAt": "1980-11-16T00:00:00Z", "trialPrice": 69}, {"currencyCode": "ySPADcHb", "currencyNamespace": "sff3XFVI", "currencyType": "VIRTUAL", "discountAmount": 62, "discountExpireAt": "1984-06-02T00:00:00Z", "discountPercentage": 9, "discountPurchaseAt": "1988-10-21T00:00:00Z", "expireAt": "1991-12-08T00:00:00Z", "price": 57, "purchaseAt": "1983-06-26T00:00:00Z", "trialPrice": 76}], "HJwMl0o8": [{"currencyCode": "7B2Bs0cW", "currencyNamespace": "A4nuvOUF", "currencyType": "VIRTUAL", "discountAmount": 86, "discountExpireAt": "1997-04-03T00:00:00Z", "discountPercentage": 40, "discountPurchaseAt": "1982-12-09T00:00:00Z", "expireAt": "1991-07-01T00:00:00Z", "price": 88, "purchaseAt": "1982-10-19T00:00:00Z", "trialPrice": 59}, {"currencyCode": "Er3X8RKq", "currencyNamespace": "qp9A9mIN", "currencyType": "VIRTUAL", "discountAmount": 20, "discountExpireAt": "1989-01-22T00:00:00Z", "discountPercentage": 62, "discountPurchaseAt": "1974-06-29T00:00:00Z", "expireAt": "1972-07-04T00:00:00Z", "price": 99, "purchaseAt": "1993-05-11T00:00:00Z", "trialPrice": 61}, {"currencyCode": "djIeMzCR", "currencyNamespace": "yRusa7Y3", "currencyType": "VIRTUAL", "discountAmount": 9, "discountExpireAt": "1972-12-11T00:00:00Z", "discountPercentage": 18, "discountPurchaseAt": "1984-01-28T00:00:00Z", "expireAt": "1996-05-01T00:00:00Z", "price": 10, "purchaseAt": "1988-12-13T00:00:00Z", "trialPrice": 28}]}, "saleConfig": {"currencyCode": "jQtLStCO", "price": 70}, "seasonType": "TIER", "sectionExclusive": true, "sellable": true, "sku": "ZbKgu1Ys", "stackable": false, "status": "INACTIVE", "tags": ["0g651w17", "0GLYwDvc", "Kxh4JqNW"], "targetCurrencyCode": "HMBHjkWc", "targetNamespace": "21D7WS44", "thumbnailUrl": "LGYy3QXg", "useCount": 37}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateItem \
    --namespace $AB_NAMESPACE \
    --storeId 'mn65s9dy' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 103 'CreateItem' test.out

#- 104 GetItemByAppId
$CLI_EXE \
    --sn platform \
    --op GetItemByAppId \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --storeId 'ALhcGeVF' \
    --appId '4IPQnHoZ' \
    > test.out 2>&1
eval_tap $? 104 'GetItemByAppId' test.out

#- 105 QueryItems
$CLI_EXE \
    --sn platform \
    --op QueryItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --appType 'DEMO' \
    --availableDate 'ue07lEnG' \
    --baseAppId 'xLIyFwJt' \
    --categoryPath 'gaBaKjpK' \
    --features 'wftLVu43' \
    --includeSubCategoryItem 'true' \
    --itemType 'BUNDLE' \
    --limit '86' \
    --offset '37' \
    --region 'tcdTETcs' \
    --sortBy '["createdAt:desc", "createdAt", "createdAt:asc"]' \
    --storeId 'E7eHN7KM' \
    --tags '2god12wx' \
    --targetNamespace 'TDc6qQhj' \
    > test.out 2>&1
eval_tap $? 105 'QueryItems' test.out

#- 106 ListBasicItemsByFeatures
$CLI_EXE \
    --sn platform \
    --op ListBasicItemsByFeatures \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --features '["0LVeHtpi", "YhORpL9f", "IQCGUgDA"]' \
    > test.out 2>&1
eval_tap $? 106 'ListBasicItemsByFeatures' test.out

#- 107 GetItems
$CLI_EXE \
    --sn platform \
    --op GetItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --storeId 'RT0JXqnQ' \
    --itemIds 'flRXM5Px' \
    > test.out 2>&1
eval_tap $? 107 'GetItems' test.out

#- 108 GetItemBySku
$CLI_EXE \
    --sn platform \
    --op GetItemBySku \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --storeId 'LmqVCpeJ' \
    --sku 'ebojAZ1B' \
    > test.out 2>&1
eval_tap $? 108 'GetItemBySku' test.out

#- 109 GetLocaleItemBySku
$CLI_EXE \
    --sn platform \
    --op GetLocaleItemBySku \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --language 'ayJyEkb3' \
    --populateBundle 'false' \
    --region 'kfBbckB0' \
    --storeId 'D8ykaXH9' \
    --sku 'QkEUmVwU' \
    > test.out 2>&1
eval_tap $? 109 'GetLocaleItemBySku' test.out

#- 110 GetEstimatedPrice
$CLI_EXE \
    --sn platform \
    --op GetEstimatedPrice \
    --namespace $AB_NAMESPACE \
    --platform 'JH1iqApR' \
    --region 'O56AifrT' \
    --storeId 'JuR8POki' \
    --itemIds 'OYrA2jD8' \
    --userId 'Nn8l2yLj' \
    > test.out 2>&1
eval_tap $? 110 'GetEstimatedPrice' test.out

#- 111 GetItemIdBySku
$CLI_EXE \
    --sn platform \
    --op GetItemIdBySku \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --storeId '9k89VaoE' \
    --sku 'AeAh6QRy' \
    > test.out 2>&1
eval_tap $? 111 'GetItemIdBySku' test.out

#- 112 GetBulkItemIdBySkus
$CLI_EXE \
    --sn platform \
    --op GetBulkItemIdBySkus \
    --namespace $AB_NAMESPACE \
    --sku '["RyMoPIGx", "Eh5cOReq", "IecWZ5Mx"]' \
    --storeId 'ZcZDBVpg' \
    > test.out 2>&1
eval_tap $? 112 'GetBulkItemIdBySkus' test.out

#- 113 BulkGetLocaleItems
$CLI_EXE \
    --sn platform \
    --op BulkGetLocaleItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --language 'VhvBBjLh' \
    --region 'MxdBZvrZ' \
    --storeId 'lkDUHWRB' \
    --itemIds '6xgrTDTr' \
    > test.out 2>&1
eval_tap $? 113 'BulkGetLocaleItems' test.out

#- 114 GetAvailablePredicateTypes
$CLI_EXE \
    --sn platform \
    --op GetAvailablePredicateTypes \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 114 'GetAvailablePredicateTypes' test.out

#- 115 ValidateItemPurchaseCondition
# body param: body
echo '{"itemIds": ["CYg9XVkk", "ZtXkcCCe", "vQCG8MkU"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ValidateItemPurchaseCondition \
    --namespace $AB_NAMESPACE \
    --platform '3MU3OwXJ' \
    --userId 'Wpezm2QM' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 115 'ValidateItemPurchaseCondition' test.out

#- 116 BulkUpdateRegionData
# body param: body
echo '{"changes": [{"itemIdentities": ["xwnV7sJG", "YIG7YLRW", "3uMCS9rn"], "itemIdentityType": "ITEM_ID", "regionData": {"uvW95ikY": [{"currencyCode": "ers9LUlK", "currencyNamespace": "gE9woy55", "currencyType": "VIRTUAL", "discountAmount": 54, "discountExpireAt": "1984-07-26T00:00:00Z", "discountPercentage": 12, "discountPurchaseAt": "1971-06-10T00:00:00Z", "discountedPrice": 86, "expireAt": "1998-08-02T00:00:00Z", "price": 89, "purchaseAt": "1971-08-13T00:00:00Z", "trialPrice": 20}, {"currencyCode": "0QxvvO4K", "currencyNamespace": "YENzwQe7", "currencyType": "VIRTUAL", "discountAmount": 89, "discountExpireAt": "1973-03-16T00:00:00Z", "discountPercentage": 38, "discountPurchaseAt": "1995-09-23T00:00:00Z", "discountedPrice": 89, "expireAt": "1972-07-04T00:00:00Z", "price": 94, "purchaseAt": "1971-02-12T00:00:00Z", "trialPrice": 100}, {"currencyCode": "S8bueLEQ", "currencyNamespace": "ibYYHQiS", "currencyType": "REAL", "discountAmount": 70, "discountExpireAt": "1999-08-01T00:00:00Z", "discountPercentage": 94, "discountPurchaseAt": "1990-08-15T00:00:00Z", "discountedPrice": 13, "expireAt": "1997-05-25T00:00:00Z", "price": 21, "purchaseAt": "1989-08-09T00:00:00Z", "trialPrice": 2}], "mHlaCvP1": [{"currencyCode": "MPQeCp4K", "currencyNamespace": "b01ynbBr", "currencyType": "VIRTUAL", "discountAmount": 19, "discountExpireAt": "1990-01-08T00:00:00Z", "discountPercentage": 14, "discountPurchaseAt": "1975-03-27T00:00:00Z", "discountedPrice": 20, "expireAt": "1971-10-25T00:00:00Z", "price": 76, "purchaseAt": "1979-04-07T00:00:00Z", "trialPrice": 80}, {"currencyCode": "252a6Agu", "currencyNamespace": "HDznh8pG", "currencyType": "REAL", "discountAmount": 97, "discountExpireAt": "1985-04-10T00:00:00Z", "discountPercentage": 56, "discountPurchaseAt": "1994-12-02T00:00:00Z", "discountedPrice": 25, "expireAt": "1978-03-30T00:00:00Z", "price": 58, "purchaseAt": "1976-05-15T00:00:00Z", "trialPrice": 61}, {"currencyCode": "VeEthGJT", "currencyNamespace": "JsJRKvVw", "currencyType": "REAL", "discountAmount": 60, "discountExpireAt": "1985-09-26T00:00:00Z", "discountPercentage": 46, "discountPurchaseAt": "1991-01-15T00:00:00Z", "discountedPrice": 19, "expireAt": "1974-08-29T00:00:00Z", "price": 3, "purchaseAt": "1978-08-02T00:00:00Z", "trialPrice": 6}], "eGMaxx4W": [{"currencyCode": "QZhBVMky", "currencyNamespace": "Vzznf0Cx", "currencyType": "REAL", "discountAmount": 6, "discountExpireAt": "1986-11-19T00:00:00Z", "discountPercentage": 46, "discountPurchaseAt": "1977-01-02T00:00:00Z", "discountedPrice": 76, "expireAt": "1975-05-07T00:00:00Z", "price": 65, "purchaseAt": "1984-11-19T00:00:00Z", "trialPrice": 33}, {"currencyCode": "wWeBHVuH", "currencyNamespace": "8dsugkHW", "currencyType": "REAL", "discountAmount": 20, "discountExpireAt": "1985-02-03T00:00:00Z", "discountPercentage": 14, "discountPurchaseAt": "1979-11-22T00:00:00Z", "discountedPrice": 44, "expireAt": "1997-12-18T00:00:00Z", "price": 10, "purchaseAt": "1993-06-01T00:00:00Z", "trialPrice": 11}, {"currencyCode": "gYI4m53B", "currencyNamespace": "LuCoT8S5", "currencyType": "REAL", "discountAmount": 100, "discountExpireAt": "1974-02-09T00:00:00Z", "discountPercentage": 95, "discountPurchaseAt": "1977-09-17T00:00:00Z", "discountedPrice": 94, "expireAt": "1983-12-02T00:00:00Z", "price": 96, "purchaseAt": "1978-12-03T00:00:00Z", "trialPrice": 81}]}}, {"itemIdentities": ["Vr2w9CAE", "EIX7GuDo", "LGsZkEcA"], "itemIdentityType": "ITEM_ID", "regionData": {"9XEgYyIP": [{"currencyCode": "ZPfZCrwk", "currencyNamespace": "DIYmaBHl", "currencyType": "REAL", "discountAmount": 70, "discountExpireAt": "1979-12-24T00:00:00Z", "discountPercentage": 45, "discountPurchaseAt": "1971-07-06T00:00:00Z", "discountedPrice": 61, "expireAt": "1995-10-30T00:00:00Z", "price": 78, "purchaseAt": "1974-03-15T00:00:00Z", "trialPrice": 33}, {"currencyCode": "DH2dlxgw", "currencyNamespace": "UgR9H77d", "currencyType": "REAL", "discountAmount": 99, "discountExpireAt": "1996-05-06T00:00:00Z", "discountPercentage": 29, "discountPurchaseAt": "1980-05-28T00:00:00Z", "discountedPrice": 7, "expireAt": "1976-04-14T00:00:00Z", "price": 27, "purchaseAt": "1980-07-24T00:00:00Z", "trialPrice": 42}, {"currencyCode": "kY5FIJ1N", "currencyNamespace": "697Jozni", "currencyType": "VIRTUAL", "discountAmount": 7, "discountExpireAt": "1989-10-31T00:00:00Z", "discountPercentage": 92, "discountPurchaseAt": "1981-01-29T00:00:00Z", "discountedPrice": 23, "expireAt": "1975-06-17T00:00:00Z", "price": 32, "purchaseAt": "1980-03-08T00:00:00Z", "trialPrice": 33}], "L0PrERkZ": [{"currencyCode": "z9uj3adk", "currencyNamespace": "VtEUXF4D", "currencyType": "VIRTUAL", "discountAmount": 29, "discountExpireAt": "1974-08-02T00:00:00Z", "discountPercentage": 47, "discountPurchaseAt": "1985-04-25T00:00:00Z", "discountedPrice": 43, "expireAt": "1991-10-01T00:00:00Z", "price": 79, "purchaseAt": "1992-06-25T00:00:00Z", "trialPrice": 14}, {"currencyCode": "ZrAdLgtp", "currencyNamespace": "b9HMZSkF", "currencyType": "VIRTUAL", "discountAmount": 39, "discountExpireAt": "1978-09-20T00:00:00Z", "discountPercentage": 36, "discountPurchaseAt": "1985-08-04T00:00:00Z", "discountedPrice": 78, "expireAt": "1982-04-28T00:00:00Z", "price": 33, "purchaseAt": "1995-07-30T00:00:00Z", "trialPrice": 20}, {"currencyCode": "DwbJkBZh", "currencyNamespace": "qzICA9A6", "currencyType": "REAL", "discountAmount": 83, "discountExpireAt": "1975-10-04T00:00:00Z", "discountPercentage": 72, "discountPurchaseAt": "1994-05-17T00:00:00Z", "discountedPrice": 8, "expireAt": "1971-01-10T00:00:00Z", "price": 36, "purchaseAt": "1986-04-26T00:00:00Z", "trialPrice": 23}], "SVJSmPkd": [{"currencyCode": "pO29BolB", "currencyNamespace": "errTxvKF", "currencyType": "VIRTUAL", "discountAmount": 74, "discountExpireAt": "1979-07-03T00:00:00Z", "discountPercentage": 80, "discountPurchaseAt": "1992-12-19T00:00:00Z", "discountedPrice": 43, "expireAt": "1980-06-16T00:00:00Z", "price": 99, "purchaseAt": "1990-11-28T00:00:00Z", "trialPrice": 95}, {"currencyCode": "kfGab4q9", "currencyNamespace": "5e6wclVV", "currencyType": "VIRTUAL", "discountAmount": 12, "discountExpireAt": "1974-05-14T00:00:00Z", "discountPercentage": 17, "discountPurchaseAt": "1985-11-13T00:00:00Z", "discountedPrice": 83, "expireAt": "1982-11-04T00:00:00Z", "price": 27, "purchaseAt": "1984-12-19T00:00:00Z", "trialPrice": 57}, {"currencyCode": "wIpTMW9V", "currencyNamespace": "DaJ8RMl5", "currencyType": "REAL", "discountAmount": 90, "discountExpireAt": "1974-03-14T00:00:00Z", "discountPercentage": 84, "discountPurchaseAt": "1993-10-11T00:00:00Z", "discountedPrice": 82, "expireAt": "1978-08-30T00:00:00Z", "price": 95, "purchaseAt": "1993-01-05T00:00:00Z", "trialPrice": 73}]}}, {"itemIdentities": ["ZBZi2H4P", "IsSzKimw", "4ZAEnE0v"], "itemIdentityType": "ITEM_ID", "regionData": {"XufFqord": [{"currencyCode": "PWY5RvoP", "currencyNamespace": "nr0t235d", "currencyType": "VIRTUAL", "discountAmount": 30, "discountExpireAt": "1983-08-01T00:00:00Z", "discountPercentage": 86, "discountPurchaseAt": "1983-04-18T00:00:00Z", "discountedPrice": 3, "expireAt": "1993-11-10T00:00:00Z", "price": 11, "purchaseAt": "1985-02-12T00:00:00Z", "trialPrice": 18}, {"currencyCode": "f2gWQVJQ", "currencyNamespace": "gw6eEhhW", "currencyType": "REAL", "discountAmount": 42, "discountExpireAt": "1999-12-07T00:00:00Z", "discountPercentage": 27, "discountPurchaseAt": "1976-03-09T00:00:00Z", "discountedPrice": 68, "expireAt": "1981-08-24T00:00:00Z", "price": 67, "purchaseAt": "1979-03-14T00:00:00Z", "trialPrice": 16}, {"currencyCode": "o2ZRrv58", "currencyNamespace": "xb7f5jv8", "currencyType": "VIRTUAL", "discountAmount": 39, "discountExpireAt": "1981-07-04T00:00:00Z", "discountPercentage": 1, "discountPurchaseAt": "1999-02-09T00:00:00Z", "discountedPrice": 79, "expireAt": "1972-12-20T00:00:00Z", "price": 4, "purchaseAt": "1996-04-30T00:00:00Z", "trialPrice": 57}], "HFqhCx0a": [{"currencyCode": "DR2mlMvg", "currencyNamespace": "Ji0xAphq", "currencyType": "REAL", "discountAmount": 54, "discountExpireAt": "1979-01-23T00:00:00Z", "discountPercentage": 10, "discountPurchaseAt": "1972-03-09T00:00:00Z", "discountedPrice": 43, "expireAt": "1975-01-19T00:00:00Z", "price": 39, "purchaseAt": "1988-05-14T00:00:00Z", "trialPrice": 22}, {"currencyCode": "ML54s8kJ", "currencyNamespace": "sD8eQ3tn", "currencyType": "VIRTUAL", "discountAmount": 42, "discountExpireAt": "1995-10-20T00:00:00Z", "discountPercentage": 73, "discountPurchaseAt": "1995-01-22T00:00:00Z", "discountedPrice": 57, "expireAt": "1986-10-11T00:00:00Z", "price": 75, "purchaseAt": "1980-05-13T00:00:00Z", "trialPrice": 19}, {"currencyCode": "ttMXFxZu", "currencyNamespace": "8KarwbUW", "currencyType": "REAL", "discountAmount": 4, "discountExpireAt": "1997-04-28T00:00:00Z", "discountPercentage": 30, "discountPurchaseAt": "1996-01-29T00:00:00Z", "discountedPrice": 44, "expireAt": "1972-08-01T00:00:00Z", "price": 52, "purchaseAt": "1997-05-18T00:00:00Z", "trialPrice": 27}], "odVY7xWN": [{"currencyCode": "cuuKDXrU", "currencyNamespace": "SbUBFYcD", "currencyType": "REAL", "discountAmount": 99, "discountExpireAt": "1983-04-19T00:00:00Z", "discountPercentage": 19, "discountPurchaseAt": "1972-11-03T00:00:00Z", "discountedPrice": 23, "expireAt": "1974-12-13T00:00:00Z", "price": 75, "purchaseAt": "1972-11-22T00:00:00Z", "trialPrice": 100}, {"currencyCode": "QnsUHHl9", "currencyNamespace": "eac6iJwC", "currencyType": "VIRTUAL", "discountAmount": 95, "discountExpireAt": "1998-11-26T00:00:00Z", "discountPercentage": 43, "discountPurchaseAt": "1982-09-23T00:00:00Z", "discountedPrice": 50, "expireAt": "1979-07-20T00:00:00Z", "price": 27, "purchaseAt": "1979-04-22T00:00:00Z", "trialPrice": 70}, {"currencyCode": "UkBNaHi6", "currencyNamespace": "NfPL4B9K", "currencyType": "VIRTUAL", "discountAmount": 83, "discountExpireAt": "1981-05-20T00:00:00Z", "discountPercentage": 55, "discountPurchaseAt": "1979-06-29T00:00:00Z", "discountedPrice": 15, "expireAt": "1981-01-18T00:00:00Z", "price": 58, "purchaseAt": "1989-07-10T00:00:00Z", "trialPrice": 28}]}}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op BulkUpdateRegionData \
    --namespace $AB_NAMESPACE \
    --storeId 'RqeBh9Sr' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 116 'BulkUpdateRegionData' test.out

#- 117 SearchItems
$CLI_EXE \
    --sn platform \
    --op SearchItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --itemType 'BUNDLE' \
    --limit '83' \
    --offset '52' \
    --sortBy 'epJvmH0T' \
    --storeId '5eit1UJj' \
    --keyword 'CaZqxRTA' \
    --language 'rHtyAWeY' \
    > test.out 2>&1
eval_tap $? 117 'SearchItems' test.out

#- 118 QueryUncategorizedItems
$CLI_EXE \
    --sn platform \
    --op QueryUncategorizedItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --limit '71' \
    --offset '71' \
    --sortBy '["updatedAt", "name", "name:asc"]' \
    --storeId 'JYyAINMo' \
    > test.out 2>&1
eval_tap $? 118 'QueryUncategorizedItems' test.out

#- 119 GetItem
$CLI_EXE \
    --sn platform \
    --op GetItem \
    --itemId 'C9p3ZYkF' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --storeId '7ulp0VeL' \
    > test.out 2>&1
eval_tap $? 119 'GetItem' test.out

#- 120 UpdateItem
# body param: body
echo '{"appId": "9TmDKlgn", "appType": "SOFTWARE", "baseAppId": "JM02zHjl", "boothName": "wpNUKLb9", "categoryPath": "Ktc0ef8R", "clazz": "80fVNplh", "displayOrder": 36, "entitlementType": "CONSUMABLE", "ext": {"byDOSmQo": {}, "OYDeKcC2": {}, "zkqhrWHq": {}}, "features": ["uim1nuhE", "Jsp4DY8H", "GcjYalXI"], "flexible": false, "images": [{"as": "VLvexQk7", "caption": "2eqZ252Q", "height": 32, "imageUrl": "f93MVXm4", "smallImageUrl": "k5lnSZEI", "width": 8}, {"as": "i2BL2zxt", "caption": "h2VpneuR", "height": 16, "imageUrl": "DetZk7Gz", "smallImageUrl": "M8STILcD", "width": 54}, {"as": "mye9RNJE", "caption": "GVOYuBxo", "height": 46, "imageUrl": "Pa6y0rIz", "smallImageUrl": "5N0Zbi1u", "width": 70}], "inventoryConfig": {"customAttributes": {"lQWVctYM": {}, "Loon32en": {}, "cW3vDYyX": {}}, "serverCustomAttributes": {"3YdLQZxG": {}, "GOTbBFnt": {}, "jet6zcfE": {}}, "slotUsed": 35}, "itemIds": ["ukEQSuJs", "X7gMgnkw", "tTqWHuLQ"], "itemQty": {"NyInqX4V": 56, "exdz2Ad6": 37, "gnAo8zAz": 83}, "itemType": "SEASON", "listable": true, "localizations": {"6QEzwPyU": {"description": "WVcTquoy", "localExt": {"J243owkk": {}, "0VLiTRfq": {}, "QpZcjpyB": {}}, "longDescription": "yxdTOkwL", "title": "Dd5uIFXD"}, "rsnIxLAx": {"description": "sikrqAp4", "localExt": {"Uv7Picbd": {}, "DOCVVyc2": {}, "PSOUFceJ": {}}, "longDescription": "qasuAWnZ", "title": "iSFdc7o6"}, "fcaW0XPb": {"description": "fhrjgrGR", "localExt": {"o44lUKYZ": {}, "pH2HGqei": {}, "4zusqTvw": {}}, "longDescription": "Pcc23qTp", "title": "yWr7azzk"}}, "lootBoxConfig": {"rewardCount": 69, "rewards": [{"lootBoxItems": [{"count": 42, "duration": 98, "endDate": "1971-06-05T00:00:00Z", "itemId": "SEajQhgr", "itemSku": "Joh6aPyR", "itemType": "FsEsJHtn"}, {"count": 4, "duration": 99, "endDate": "1996-04-08T00:00:00Z", "itemId": "xfzfRjOI", "itemSku": "UwPsn1bU", "itemType": "XcnhgFF9"}, {"count": 42, "duration": 0, "endDate": "1982-12-19T00:00:00Z", "itemId": "1rc6rshc", "itemSku": "kj4k1URq", "itemType": "QYCtInWL"}], "name": "AL95bha4", "odds": 0.21637374272263554, "type": "REWARD", "weight": 85}, {"lootBoxItems": [{"count": 37, "duration": 3, "endDate": "1979-02-18T00:00:00Z", "itemId": "jjCnnP8S", "itemSku": "hbxjg813", "itemType": "gVpUyCX5"}, {"count": 7, "duration": 8, "endDate": "1981-06-07T00:00:00Z", "itemId": "vBYYhDRY", "itemSku": "c47fcSg3", "itemType": "xS0GiDkr"}, {"count": 12, "duration": 81, "endDate": "1991-07-12T00:00:00Z", "itemId": "86Yw759i", "itemSku": "Mh3nRwan", "itemType": "AMXMKtPz"}], "name": "pSd1KXtk", "odds": 0.7670626050001835, "type": "PROBABILITY_GROUP", "weight": 25}, {"lootBoxItems": [{"count": 27, "duration": 91, "endDate": "1971-08-04T00:00:00Z", "itemId": "hIvX2Muq", "itemSku": "bGnqoIW6", "itemType": "Hk7oEcEn"}, {"count": 23, "duration": 6, "endDate": "1981-03-09T00:00:00Z", "itemId": "HTxVc1XC", "itemSku": "JWotFP1z", "itemType": "4l8e4XDV"}, {"count": 54, "duration": 14, "endDate": "1976-09-13T00:00:00Z", "itemId": "x7DWQyPs", "itemSku": "PZZ81dQV", "itemType": "mxbSOElc"}], "name": "DrAtKGxz", "odds": 0.7135268480106063, "type": "REWARD", "weight": 53}], "rollFunction": "CUSTOM"}, "maxCount": 29, "maxCountPerUser": 42, "name": "IGT2UW6z", "optionBoxConfig": {"boxItems": [{"count": 96, "duration": 35, "endDate": "1988-12-26T00:00:00Z", "itemId": "VVMO3WzK", "itemSku": "dhdZqwp4", "itemType": "HBFkqq7Q"}, {"count": 2, "duration": 21, "endDate": "1992-02-18T00:00:00Z", "itemId": "Y49pfKM6", "itemSku": "IDjjPmYI", "itemType": "WbkE9bdg"}, {"count": 14, "duration": 38, "endDate": "1985-04-21T00:00:00Z", "itemId": "v1x5qQRe", "itemSku": "Iy4U0EQ3", "itemType": "QIvE30wN"}]}, "purchasable": true, "recurring": {"cycle": "WEEKLY", "fixedFreeDays": 47, "fixedTrialCycles": 7, "graceDays": 96}, "regionData": {"unONy8F2": [{"currencyCode": "BeJl3RlN", "currencyNamespace": "eIL6G6Aj", "currencyType": "REAL", "discountAmount": 73, "discountExpireAt": "1980-09-20T00:00:00Z", "discountPercentage": 18, "discountPurchaseAt": "1989-05-10T00:00:00Z", "expireAt": "1982-07-01T00:00:00Z", "price": 25, "purchaseAt": "1976-10-02T00:00:00Z", "trialPrice": 33}, {"currencyCode": "LRvNDhLY", "currencyNamespace": "kA0aiuNy", "currencyType": "VIRTUAL", "discountAmount": 38, "discountExpireAt": "1996-04-03T00:00:00Z", "discountPercentage": 57, "discountPurchaseAt": "1983-07-31T00:00:00Z", "expireAt": "1999-11-02T00:00:00Z", "price": 14, "purchaseAt": "1977-01-11T00:00:00Z", "trialPrice": 30}, {"currencyCode": "0OO0UkJ9", "currencyNamespace": "oCZoofRi", "currencyType": "REAL", "discountAmount": 95, "discountExpireAt": "1984-03-06T00:00:00Z", "discountPercentage": 54, "discountPurchaseAt": "1993-10-15T00:00:00Z", "expireAt": "1972-09-23T00:00:00Z", "price": 20, "purchaseAt": "1997-09-12T00:00:00Z", "trialPrice": 13}], "hyULlw9r": [{"currencyCode": "Vn3IO7ak", "currencyNamespace": "uSLd4eQJ", "currencyType": "VIRTUAL", "discountAmount": 3, "discountExpireAt": "1974-08-23T00:00:00Z", "discountPercentage": 16, "discountPurchaseAt": "1991-09-23T00:00:00Z", "expireAt": "1982-02-23T00:00:00Z", "price": 3, "purchaseAt": "1991-08-12T00:00:00Z", "trialPrice": 59}, {"currencyCode": "rfTwiara", "currencyNamespace": "sTj4NBiu", "currencyType": "REAL", "discountAmount": 14, "discountExpireAt": "1998-07-18T00:00:00Z", "discountPercentage": 56, "discountPurchaseAt": "1998-06-06T00:00:00Z", "expireAt": "1999-07-08T00:00:00Z", "price": 73, "purchaseAt": "1984-10-31T00:00:00Z", "trialPrice": 10}, {"currencyCode": "hJ0CLNi5", "currencyNamespace": "pqv5cQwl", "currencyType": "VIRTUAL", "discountAmount": 91, "discountExpireAt": "1996-09-21T00:00:00Z", "discountPercentage": 61, "discountPurchaseAt": "1983-09-26T00:00:00Z", "expireAt": "1988-01-18T00:00:00Z", "price": 33, "purchaseAt": "1998-09-07T00:00:00Z", "trialPrice": 89}], "lXjpZ0e7": [{"currencyCode": "LWM6Kr4r", "currencyNamespace": "YkW59CHE", "currencyType": "VIRTUAL", "discountAmount": 87, "discountExpireAt": "1981-08-11T00:00:00Z", "discountPercentage": 7, "discountPurchaseAt": "1996-11-11T00:00:00Z", "expireAt": "1992-10-12T00:00:00Z", "price": 48, "purchaseAt": "1980-10-29T00:00:00Z", "trialPrice": 63}, {"currencyCode": "IPhAlepJ", "currencyNamespace": "DjhkK0Ev", "currencyType": "VIRTUAL", "discountAmount": 81, "discountExpireAt": "1989-09-14T00:00:00Z", "discountPercentage": 47, "discountPurchaseAt": "1978-03-18T00:00:00Z", "expireAt": "1972-01-21T00:00:00Z", "price": 9, "purchaseAt": "1979-05-26T00:00:00Z", "trialPrice": 26}, {"currencyCode": "KGigI1Zj", "currencyNamespace": "mmSnTU6v", "currencyType": "REAL", "discountAmount": 87, "discountExpireAt": "1985-09-21T00:00:00Z", "discountPercentage": 67, "discountPurchaseAt": "1973-04-21T00:00:00Z", "expireAt": "1988-02-01T00:00:00Z", "price": 57, "purchaseAt": "1976-08-04T00:00:00Z", "trialPrice": 52}]}, "saleConfig": {"currencyCode": "U81CmXYF", "price": 20}, "seasonType": "PASS", "sectionExclusive": true, "sellable": true, "sku": "sgGCQ13c", "stackable": false, "status": "ACTIVE", "tags": ["8UuB7eqL", "UaHaLG0r", "SSS2A8r8"], "targetCurrencyCode": "fmQX4tCT", "targetNamespace": "FpIiGgeN", "thumbnailUrl": "gGIug63t", "useCount": 61}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateItem \
    --itemId 'hSvRDOTy' \
    --namespace $AB_NAMESPACE \
    --storeId 'yLtEyOeA' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 120 'UpdateItem' test.out

#- 121 DeleteItem
$CLI_EXE \
    --sn platform \
    --op DeleteItem \
    --itemId 'oiBr9C8N' \
    --namespace $AB_NAMESPACE \
    --force 'false' \
    --storeId 'wPZav68g' \
    > test.out 2>&1
eval_tap $? 121 'DeleteItem' test.out

#- 122 AcquireItem
# body param: body
echo '{"count": 3, "orderNo": "X7CUlOE6"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op AcquireItem \
    --itemId 'XNUmHn3W' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 122 'AcquireItem' test.out

#- 123 GetApp
$CLI_EXE \
    --sn platform \
    --op GetApp \
    --itemId 'yGcsY2sH' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --storeId 'QvRGUYCy' \
    > test.out 2>&1
eval_tap $? 123 'GetApp' test.out

#- 124 UpdateApp
# body param: body
echo '{"carousel": [{"alt": "e7PAFHcF", "previewUrl": "EexS11m7", "thumbnailUrl": "iCvqvAMB", "type": "image", "url": "qvOL3MAC", "videoSource": "youtube"}, {"alt": "I6OWlOjX", "previewUrl": "X6xHAajF", "thumbnailUrl": "kLCeA4R7", "type": "image", "url": "JETfo87B", "videoSource": "generic"}, {"alt": "zcuShNKI", "previewUrl": "RziCUZuA", "thumbnailUrl": "sobbVCeE", "type": "image", "url": "i2jTy6Fo", "videoSource": "vimeo"}], "developer": "ntivSi2T", "forumUrl": "wFdOscQC", "genres": ["RPG", "FreeToPlay", "RPG"], "localizations": {"RbPMew8W": {"announcement": "JMOJJYSV", "slogan": "sPjrY5ES"}, "svWEfbf4": {"announcement": "EARd2lTI", "slogan": "NKgf0Sk9"}, "cZcYXT0f": {"announcement": "i0bn6Oob", "slogan": "bPvs5RZb"}}, "platformRequirements": {"0dQwbiT3": [{"additionals": "G7B7cDUp", "directXVersion": "Nyl28CPk", "diskSpace": "669S3b4G", "graphics": "EsDGc65y", "label": "5hq00CkZ", "osVersion": "O3tDIQGe", "processor": "418xmo7K", "ram": "gKHV2nUN", "soundCard": "F2fwJZxh"}, {"additionals": "fs84kFSF", "directXVersion": "WHV6rFkT", "diskSpace": "LJlLoTRT", "graphics": "GnhNbJYW", "label": "gNTIOaoU", "osVersion": "4ciiEKU2", "processor": "djofEdKG", "ram": "MHYiPBJu", "soundCard": "peD7mDF5"}, {"additionals": "ellAhXen", "directXVersion": "ZjHADn5T", "diskSpace": "IJxgqYX8", "graphics": "nF9FIMUT", "label": "v76zJZwq", "osVersion": "7cAdOJ2R", "processor": "9Uw4fC4q", "ram": "tmLVecLM", "soundCard": "71TQMgyM"}], "bBhITH76": [{"additionals": "OKTF3Lis", "directXVersion": "V6FtT4cq", "diskSpace": "p8B9K0au", "graphics": "IYGC1sHW", "label": "nLcOdHHY", "osVersion": "SWtYLpEW", "processor": "cPpXNpiq", "ram": "zghLfIUC", "soundCard": "fZFrKw3L"}, {"additionals": "n0w5Bvxw", "directXVersion": "texwkg0Z", "diskSpace": "I9hYRupo", "graphics": "SRBOzn14", "label": "001ZSgf3", "osVersion": "cmpu4g5G", "processor": "Tn1NNvCw", "ram": "Z5ucpBam", "soundCard": "i25GBOro"}, {"additionals": "YuZrBMAA", "directXVersion": "vgEGN3t4", "diskSpace": "xYOYdVAF", "graphics": "YFWKkekZ", "label": "zbQpwbGQ", "osVersion": "AZRFMkz5", "processor": "ZRw1yibS", "ram": "Ctwx9BOH", "soundCard": "y8IHApnA"}], "CxBesCzB": [{"additionals": "UfizOKUN", "directXVersion": "kTXVAvCF", "diskSpace": "CkzKNw50", "graphics": "u0Tuzcrv", "label": "J2nTSTro", "osVersion": "wAZpydhW", "processor": "l8KzAm6v", "ram": "GLy2QFRZ", "soundCard": "LVRBno74"}, {"additionals": "vaC6A6jX", "directXVersion": "TYEx5UBj", "diskSpace": "eYagbPcH", "graphics": "2BrYcZVF", "label": "BdAyGuMV", "osVersion": "HywsaICA", "processor": "uNabQ1kZ", "ram": "znDKjOvd", "soundCard": "kRDU43ma"}, {"additionals": "JCoQ4J6R", "directXVersion": "E8kFSNUa", "diskSpace": "zUJlfsbB", "graphics": "JJ6h18Kc", "label": "LXvYryvw", "osVersion": "AnL0ak7O", "processor": "gTUv4L3c", "ram": "khskiODa", "soundCard": "7lODUlRP"}]}, "platforms": ["MacOS", "MacOS", "Windows"], "players": ["Coop", "LocalCoop", "Single"], "primaryGenre": "Sports", "publisher": "MDonkugd", "releaseDate": "1977-04-25T00:00:00Z", "websiteUrl": "7WLpTdtm"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateApp \
    --itemId 'ySP9L6oq' \
    --namespace $AB_NAMESPACE \
    --storeId 'tLS0DB8O' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 124 'UpdateApp' test.out

#- 125 DisableItem
$CLI_EXE \
    --sn platform \
    --op DisableItem \
    --itemId 'Cyyy17i1' \
    --namespace $AB_NAMESPACE \
    --storeId 'r8Y4NuqI' \
    > test.out 2>&1
eval_tap $? 125 'DisableItem' test.out

#- 126 GetItemDynamicData
$CLI_EXE \
    --sn platform \
    --op GetItemDynamicData \
    --itemId 'TKl45wFy' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 126 'GetItemDynamicData' test.out

#- 127 EnableItem
$CLI_EXE \
    --sn platform \
    --op EnableItem \
    --itemId 'zIOhhTsQ' \
    --namespace $AB_NAMESPACE \
    --storeId 'gdDhqQXi' \
    > test.out 2>&1
eval_tap $? 127 'EnableItem' test.out

#- 128 FeatureItem
$CLI_EXE \
    --sn platform \
    --op FeatureItem \
    --feature 'FR1OGTI8' \
    --itemId 'pt0HV8uQ' \
    --namespace $AB_NAMESPACE \
    --storeId 'ojLpZRuq' \
    > test.out 2>&1
eval_tap $? 128 'FeatureItem' test.out

#- 129 DefeatureItem
$CLI_EXE \
    --sn platform \
    --op DefeatureItem \
    --feature 'vbNjWjmf' \
    --itemId 'AJJmmX98' \
    --namespace $AB_NAMESPACE \
    --storeId 'bxiyJ7zw' \
    > test.out 2>&1
eval_tap $? 129 'DefeatureItem' test.out

#- 130 GetLocaleItem
$CLI_EXE \
    --sn platform \
    --op GetLocaleItem \
    --itemId 'FS67RBgK' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --language 'HBk4zOgr' \
    --populateBundle 'true' \
    --region 'I7jTaXnT' \
    --storeId 'CDZr6WDL' \
    > test.out 2>&1
eval_tap $? 130 'GetLocaleItem' test.out

#- 131 UpdateItemPurchaseCondition
# body param: body
echo '{"purchaseCondition": {"conditionGroups": [{"operator": "or", "predicates": [{"anyOf": 91, "comparison": "includes", "name": "UpV37dQC", "predicateType": "SeasonTierPredicate", "value": "GBV66Aao", "values": ["P8FUSoSP", "L7GFVkZH", "QFqGysC1"]}, {"anyOf": 17, "comparison": "excludes", "name": "A3drjiXy", "predicateType": "SeasonTierPredicate", "value": "tFVsjscQ", "values": ["I2JTxoGF", "eaCDu5Px", "nfp24k0z"]}, {"anyOf": 62, "comparison": "is", "name": "xnQhZk57", "predicateType": "SeasonPassPredicate", "value": "GU363qyG", "values": ["XHSN6D0O", "ymVAiLbH", "Gb7coGc0"]}]}, {"operator": "and", "predicates": [{"anyOf": 12, "comparison": "includes", "name": "PiDycSin", "predicateType": "SeasonTierPredicate", "value": "nTSXCMnc", "values": ["BKe4lIix", "CFSF9ATU", "NiMRJKm3"]}, {"anyOf": 87, "comparison": "isLessThanOrEqual", "name": "WkYRbM8m", "predicateType": "SeasonPassPredicate", "value": "8c2sKE6g", "values": ["V1PSUnhq", "jwRFbDcj", "H3Xo7DnA"]}, {"anyOf": 66, "comparison": "excludes", "name": "2fL70Wkt", "predicateType": "EntitlementPredicate", "value": "yZdTBEG9", "values": ["r3yAbdvW", "su77EwnK", "7nCGVaKv"]}]}, {"operator": "or", "predicates": [{"anyOf": 62, "comparison": "isNot", "name": "3zGoW6Uy", "predicateType": "EntitlementPredicate", "value": "xj58qCK5", "values": ["uFwak2jj", "ozmAhbq1", "vkammicO"]}, {"anyOf": 41, "comparison": "excludes", "name": "BR2bGBgg", "predicateType": "SeasonTierPredicate", "value": "KVBlbamm", "values": ["Ps2pe3mT", "jzhSNpiI", "EEgrs3Ln"]}, {"anyOf": 95, "comparison": "excludes", "name": "OaEjNBON", "predicateType": "SeasonTierPredicate", "value": "cpFazOCS", "values": ["fEIeLhow", "AihJeaxa", "LOu3wFVL"]}]}]}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateItemPurchaseCondition \
    --itemId 'alZFDz3X' \
    --namespace $AB_NAMESPACE \
    --storeId 'tQGDIhAt' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 131 'UpdateItemPurchaseCondition' test.out

#- 132 ReturnItem
# body param: body
echo '{"orderNo": "1O0qrH4w"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ReturnItem \
    --itemId 'BA15kHDn' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 132 'ReturnItem' test.out

#- 133 QueryKeyGroups
$CLI_EXE \
    --sn platform \
    --op QueryKeyGroups \
    --namespace $AB_NAMESPACE \
    --limit '46' \
    --name 'cW7ZdsUN' \
    --offset '5' \
    --tag 'wYztBp28' \
    > test.out 2>&1
eval_tap $? 133 'QueryKeyGroups' test.out

#- 134 CreateKeyGroup
# body param: body
echo '{"description": "t8ePoZGm", "name": "bZbiSqpG", "status": "INACTIVE", "tags": ["03RdcO8j", "3DT2BXXj", "VM2BbzPr"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateKeyGroup \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 134 'CreateKeyGroup' test.out

#- 135 GetKeyGroupByBoothName
eval_tap 0 135 'GetKeyGroupByBoothName # SKIP deprecated' test.out

#- 136 GetKeyGroup
$CLI_EXE \
    --sn platform \
    --op GetKeyGroup \
    --keyGroupId '3VETMF4N' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 136 'GetKeyGroup' test.out

#- 137 UpdateKeyGroup
# body param: body
echo '{"description": "2iBKBQj6", "name": "YCTMKGQu", "status": "INACTIVE", "tags": ["vFxKQ4Xp", "TRy77bvG", "tj2a6U5r"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateKeyGroup \
    --keyGroupId '8vLvXJbj' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 137 'UpdateKeyGroup' test.out

#- 138 GetKeyGroupDynamic
$CLI_EXE \
    --sn platform \
    --op GetKeyGroupDynamic \
    --keyGroupId 'nN7Noid1' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 138 'GetKeyGroupDynamic' test.out

#- 139 ListKeys
$CLI_EXE \
    --sn platform \
    --op ListKeys \
    --keyGroupId 'LbRkZfpi' \
    --namespace $AB_NAMESPACE \
    --limit '19' \
    --offset '53' \
    --status 'ACTIVE' \
    > test.out 2>&1
eval_tap $? 139 'ListKeys' test.out

#- 140 UploadKeys
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UploadKeys \
    --keyGroupId 'dLcz6lix' \
    --namespace $AB_NAMESPACE \
    --upload file $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 140 'UploadKeys' test.out

#- 141 QueryOrders
$CLI_EXE \
    --sn platform \
    --op QueryOrders \
    --namespace $AB_NAMESPACE \
    --endTime 'LrUO6fIV' \
    --limit '9' \
    --offset '33' \
    --orderNos '["cXX6kd7a", "Mk7XboXS", "YuK4ShxM"]' \
    --sortBy 'lrD3lJOh' \
    --startTime '9NIZefI9' \
    --status 'FULFILL_FAILED' \
    --withTotal 'true' \
    > test.out 2>&1
eval_tap $? 141 'QueryOrders' test.out

#- 142 GetOrderStatistics
$CLI_EXE \
    --sn platform \
    --op GetOrderStatistics \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 142 'GetOrderStatistics' test.out

#- 143 GetOrder
$CLI_EXE \
    --sn platform \
    --op GetOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'S9nISWcF' \
    > test.out 2>&1
eval_tap $? 143 'GetOrder' test.out

#- 144 RefundOrder
# body param: body
echo '{"description": "2dpISzxc"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RefundOrder \
    --namespace $AB_NAMESPACE \
    --orderNo '9TMdZbz6' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 144 'RefundOrder' test.out

#- 145 GetPaymentCallbackConfig
$CLI_EXE \
    --sn platform \
    --op GetPaymentCallbackConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 145 'GetPaymentCallbackConfig' test.out

#- 146 UpdatePaymentCallbackConfig
# body param: body
echo '{"dryRun": true, "notifyUrl": "rw2IYdYu", "privateKey": "rZc4Jwp7"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePaymentCallbackConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 146 'UpdatePaymentCallbackConfig' test.out

#- 147 QueryPaymentNotifications
$CLI_EXE \
    --sn platform \
    --op QueryPaymentNotifications \
    --namespace $AB_NAMESPACE \
    --endDate 'rxtNtCPZ' \
    --externalId 'QBlCBkQl' \
    --limit '96' \
    --notificationSource 'XSOLLA' \
    --notificationType 'nP4KOj33' \
    --offset '50' \
    --paymentOrderNo 'h9oqSGfB' \
    --startDate '8r7OMfzt' \
    --status 'WARN' \
    > test.out 2>&1
eval_tap $? 147 'QueryPaymentNotifications' test.out

#- 148 QueryPaymentOrders
$CLI_EXE \
    --sn platform \
    --op QueryPaymentOrders \
    --namespace $AB_NAMESPACE \
    --channel 'INTERNAL' \
    --extTxId 'BM5GziTa' \
    --limit '99' \
    --offset '23' \
    --status 'NOTIFICATION_OF_CHARGEBACK' \
    > test.out 2>&1
eval_tap $? 148 'QueryPaymentOrders' test.out

#- 149 CreatePaymentOrderByDedicated
# body param: body
echo '{"currencyCode": "uxm6s9gh", "currencyNamespace": "4Vh5UoL5", "customParameters": {"8hsLA8nd": {}, "LpJhhvsS": {}, "D8q30BHV": {}}, "description": "v6GEqXtn", "extOrderNo": "sEjt8v5y", "extUserId": "xsyknFPo", "itemType": "COINS", "language": "Hvz-DoBf-931", "metadata": {"eTgmlU4D": "uUZaKMZx", "kZQZcXbh": "4ZEYNtEZ", "rKjbpnRH": "9j1RiLlk"}, "notifyUrl": "xzJnOfZF", "omitNotification": true, "platform": "lKtuwxPH", "price": 16, "recurringPaymentOrderNo": "CcqTH3zs", "region": "YAMYCqUU", "returnUrl": "kddeUvFJ", "sandbox": true, "sku": "1nGbBoGg", "subscriptionId": "CrcsF9Cf", "targetNamespace": "AzoC6O8L", "targetUserId": "7VMjeSTj", "title": "dLLGtnOr"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreatePaymentOrderByDedicated \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 149 'CreatePaymentOrderByDedicated' test.out

#- 150 ListExtOrderNoByExtTxId
$CLI_EXE \
    --sn platform \
    --op ListExtOrderNoByExtTxId \
    --namespace $AB_NAMESPACE \
    --extTxId 'AXMmtp3O' \
    > test.out 2>&1
eval_tap $? 150 'ListExtOrderNoByExtTxId' test.out

#- 151 GetPaymentOrder
$CLI_EXE \
    --sn platform \
    --op GetPaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'TIcdzzYu' \
    > test.out 2>&1
eval_tap $? 151 'GetPaymentOrder' test.out

#- 152 ChargePaymentOrder
# body param: body
echo '{"extTxId": "YWoKpewK", "paymentMethod": "ieuXkuuy", "paymentProvider": "PAYPAL"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ChargePaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'gJiA7zME' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 152 'ChargePaymentOrder' test.out

#- 153 RefundPaymentOrderByDedicated
# body param: body
echo '{"description": "vMmfqKue"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RefundPaymentOrderByDedicated \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo '1E8NsJkE' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 153 'RefundPaymentOrderByDedicated' test.out

#- 154 SimulatePaymentOrderNotification
# body param: body
echo '{"amount": 94, "currencyCode": "1LEjJ6PN", "notifyType": "CHARGE", "paymentProvider": "CHECKOUT", "salesTax": 34, "vat": 90}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SimulatePaymentOrderNotification \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'PJwYuP2N' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 154 'SimulatePaymentOrderNotification' test.out

#- 155 GetPaymentOrderChargeStatus
$CLI_EXE \
    --sn platform \
    --op GetPaymentOrderChargeStatus \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'WqSjWCoH' \
    > test.out 2>&1
eval_tap $? 155 'GetPaymentOrderChargeStatus' test.out

#- 156 GetPlatformEntitlementConfig
$CLI_EXE \
    --sn platform \
    --op GetPlatformEntitlementConfig \
    --namespace $AB_NAMESPACE \
    --platform 'Playstation' \
    > test.out 2>&1
eval_tap $? 156 'GetPlatformEntitlementConfig' test.out

#- 157 UpdatePlatformEntitlementConfig
# body param: body
echo '{"allowedPlatformOrigins": ["System", "GooglePlay", "Playstation"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePlatformEntitlementConfig \
    --namespace $AB_NAMESPACE \
    --platform 'Playstation' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 157 'UpdatePlatformEntitlementConfig' test.out

#- 158 GetPlatformWalletConfig
$CLI_EXE \
    --sn platform \
    --op GetPlatformWalletConfig \
    --namespace $AB_NAMESPACE \
    --platform 'Playstation' \
    > test.out 2>&1
eval_tap $? 158 'GetPlatformWalletConfig' test.out

#- 159 UpdatePlatformWalletConfig
# body param: body
echo '{"allowedBalanceOrigins": ["Other", "Epic", "Oculus"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePlatformWalletConfig \
    --namespace $AB_NAMESPACE \
    --platform 'Epic' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 159 'UpdatePlatformWalletConfig' test.out

#- 160 ResetPlatformWalletConfig
$CLI_EXE \
    --sn platform \
    --op ResetPlatformWalletConfig \
    --namespace $AB_NAMESPACE \
    --platform 'Oculus' \
    > test.out 2>&1
eval_tap $? 160 'ResetPlatformWalletConfig' test.out

#- 161 GetRevocationConfig
$CLI_EXE \
    --sn platform \
    --op GetRevocationConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 161 'GetRevocationConfig' test.out

#- 162 UpdateRevocationConfig
# body param: body
echo '{"entitlement": {"consumable": {"enabled": false, "strategy": "REVOKE_OR_REPORT"}, "durable": {"enabled": false, "strategy": "REVOKE_OR_REPORT"}}, "wallet": {"enabled": true, "strategy": "REVOKE_OR_REPORT"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateRevocationConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 162 'UpdateRevocationConfig' test.out

#- 163 DeleteRevocationConfig
$CLI_EXE \
    --sn platform \
    --op DeleteRevocationConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 163 'DeleteRevocationConfig' test.out

#- 164 QueryRevocationHistories
$CLI_EXE \
    --sn platform \
    --op QueryRevocationHistories \
    --namespace $AB_NAMESPACE \
    --endTime 'wcbklmZg' \
    --limit '0' \
    --offset '79' \
    --source 'IAP' \
    --startTime 'MqeftGkg' \
    --status 'SUCCESS' \
    --transactionId '6QFqDMDt' \
    --userId 'aqPad7S5' \
    > test.out 2>&1
eval_tap $? 164 'QueryRevocationHistories' test.out

#- 165 GetRevocationPluginConfig
$CLI_EXE \
    --sn platform \
    --op GetRevocationPluginConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 165 'GetRevocationPluginConfig' test.out

#- 166 UpdateRevocationPluginConfig
# body param: body
echo '{"appConfig": {"appName": "vq3ikYix"}, "customConfig": {"connectionType": "TLS", "grpcServerAddress": "FwYz53gU"}, "extendType": "CUSTOM"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateRevocationPluginConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 166 'UpdateRevocationPluginConfig' test.out

#- 167 DeleteRevocationPluginConfig
$CLI_EXE \
    --sn platform \
    --op DeleteRevocationPluginConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 167 'DeleteRevocationPluginConfig' test.out

#- 168 UploadRevocationPluginConfigCert
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UploadRevocationPluginConfigCert \
    --namespace $AB_NAMESPACE \
    --upload file $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 168 'UploadRevocationPluginConfigCert' test.out

#- 169 CreateReward
# body param: body
echo '{"description": "Q5Rdtec3", "eventTopic": "glBzZXVw", "maxAwarded": 74, "maxAwardedPerUser": 48, "namespaceExpression": "i7akKf6L", "rewardCode": "0BU2TCQd", "rewardConditions": [{"condition": "6STxrR0e", "conditionName": "Yf7MgekI", "eventName": "qTVPgBcJ", "rewardItems": [{"duration": 69, "endDate": "1999-02-04T00:00:00Z", "identityType": "ITEM_ID", "itemId": "2qVAhSNv", "quantity": 3, "sku": "0TnC5jx3"}, {"duration": 36, "endDate": "1980-02-26T00:00:00Z", "identityType": "ITEM_ID", "itemId": "vThi62pG", "quantity": 96, "sku": "sN2Od1fH"}, {"duration": 82, "endDate": "1990-08-13T00:00:00Z", "identityType": "ITEM_ID", "itemId": "tvvkCXNQ", "quantity": 73, "sku": "ZSDyrBFm"}]}, {"condition": "I4JudioX", "conditionName": "cw7crNKb", "eventName": "dbeVGCH1", "rewardItems": [{"duration": 41, "endDate": "1974-07-14T00:00:00Z", "identityType": "ITEM_SKU", "itemId": "73vqK2A5", "quantity": 10, "sku": "KR0tRLCn"}, {"duration": 19, "endDate": "1995-05-13T00:00:00Z", "identityType": "ITEM_ID", "itemId": "oGsNWEdM", "quantity": 71, "sku": "o6yCpJG8"}, {"duration": 48, "endDate": "1977-10-22T00:00:00Z", "identityType": "ITEM_ID", "itemId": "csKOUZQf", "quantity": 13, "sku": "cmPQ52kL"}]}, {"condition": "ILq2zWmg", "conditionName": "yDbbSYmE", "eventName": "qH7s71rK", "rewardItems": [{"duration": 53, "endDate": "1988-05-10T00:00:00Z", "identityType": "ITEM_ID", "itemId": "QQqqbZEe", "quantity": 8, "sku": "pHqwL9KP"}, {"duration": 90, "endDate": "1979-06-28T00:00:00Z", "identityType": "ITEM_SKU", "itemId": "a8ufCPJp", "quantity": 60, "sku": "eKZWOlx2"}, {"duration": 3, "endDate": "1972-03-10T00:00:00Z", "identityType": "ITEM_SKU", "itemId": "eyD0sveo", "quantity": 43, "sku": "vvABWWav"}]}], "userIdExpression": "dhqQlJ8P"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateReward \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 169 'CreateReward' test.out

#- 170 QueryRewards
$CLI_EXE \
    --sn platform \
    --op QueryRewards \
    --namespace $AB_NAMESPACE \
    --eventTopic 'tfaOtCTa' \
    --limit '79' \
    --offset '11' \
    --sortBy '["rewardCode:desc", "namespace:desc"]' \
    > test.out 2>&1
eval_tap $? 170 'QueryRewards' test.out

#- 171 ExportRewards
$CLI_EXE \
    --sn platform \
    --op ExportRewards \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 171 'ExportRewards' test.out

#- 172 ImportRewards
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op ImportRewards \
    --namespace $AB_NAMESPACE \
    --replaceExisting 'true' \
    --upload file $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 172 'ImportRewards' test.out

#- 173 GetReward
$CLI_EXE \
    --sn platform \
    --op GetReward \
    --namespace $AB_NAMESPACE \
    --rewardId 'Kk4ko94G' \
    > test.out 2>&1
eval_tap $? 173 'GetReward' test.out

#- 174 UpdateReward
# body param: body
echo '{"description": "XM3Y2a08", "eventTopic": "kqwO7H1U", "maxAwarded": 16, "maxAwardedPerUser": 30, "namespaceExpression": "erifppsT", "rewardCode": "dJhnFBLZ", "rewardConditions": [{"condition": "Z045Vix2", "conditionName": "8eaKQIe2", "eventName": "Y7YFt8Bq", "rewardItems": [{"duration": 78, "endDate": "1977-11-28T00:00:00Z", "identityType": "ITEM_SKU", "itemId": "iQmDNrCR", "quantity": 10, "sku": "RcaWWVGG"}, {"duration": 55, "endDate": "1984-10-09T00:00:00Z", "identityType": "ITEM_ID", "itemId": "8KPcC4eL", "quantity": 23, "sku": "Q1YpihqM"}, {"duration": 97, "endDate": "1980-11-25T00:00:00Z", "identityType": "ITEM_ID", "itemId": "dpUAANpq", "quantity": 68, "sku": "tS7lUOc0"}]}, {"condition": "3t9oheLO", "conditionName": "Oep3xGpP", "eventName": "7ce83RZG", "rewardItems": [{"duration": 48, "endDate": "1973-12-23T00:00:00Z", "identityType": "ITEM_ID", "itemId": "LYmj7Eqz", "quantity": 63, "sku": "oHcIoDTt"}, {"duration": 56, "endDate": "1972-02-10T00:00:00Z", "identityType": "ITEM_ID", "itemId": "NsxjKcTM", "quantity": 38, "sku": "mw4EeOkg"}, {"duration": 62, "endDate": "1998-11-10T00:00:00Z", "identityType": "ITEM_ID", "itemId": "oFSg6xnL", "quantity": 80, "sku": "K16fnHEB"}]}, {"condition": "EMml53bQ", "conditionName": "xJUR02Ta", "eventName": "ovLfa7mw", "rewardItems": [{"duration": 10, "endDate": "1985-10-06T00:00:00Z", "identityType": "ITEM_ID", "itemId": "uNnNqYC6", "quantity": 52, "sku": "dpJevM3H"}, {"duration": 95, "endDate": "1975-12-28T00:00:00Z", "identityType": "ITEM_ID", "itemId": "vjXO11hA", "quantity": 94, "sku": "Emm1cZKT"}, {"duration": 51, "endDate": "1982-12-28T00:00:00Z", "identityType": "ITEM_ID", "itemId": "3KrZeBn1", "quantity": 82, "sku": "4f0MgtWM"}]}], "userIdExpression": "7HCIZbwz"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateReward \
    --namespace $AB_NAMESPACE \
    --rewardId '9VYzTzI9' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 174 'UpdateReward' test.out

#- 175 DeleteReward
$CLI_EXE \
    --sn platform \
    --op DeleteReward \
    --namespace $AB_NAMESPACE \
    --rewardId 'SvvT6dkA' \
    > test.out 2>&1
eval_tap $? 175 'DeleteReward' test.out

#- 176 CheckEventCondition
# body param: body
echo '{"payload": {"ngWGjDZj": {}, "DGYdBKB5": {}, "j3CNSF7W": {}}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CheckEventCondition \
    --namespace $AB_NAMESPACE \
    --rewardId 'W7f9jMEa' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 176 'CheckEventCondition' test.out

#- 177 DeleteRewardConditionRecord
# body param: body
echo '{"conditionName": "4n6aC5ZN", "userId": "dAVI2lIp"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op DeleteRewardConditionRecord \
    --namespace $AB_NAMESPACE \
    --rewardId 'NAflvzRN' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 177 'DeleteRewardConditionRecord' test.out

#- 178 QuerySections
$CLI_EXE \
    --sn platform \
    --op QuerySections \
    --namespace $AB_NAMESPACE \
    --end 'QCFXv6sS' \
    --limit '20' \
    --offset '12' \
    --start 'bgRGyfxc' \
    --storeId 'cGb2YUHZ' \
    --viewId 'AqpZBMl0' \
    > test.out 2>&1
eval_tap $? 178 'QuerySections' test.out

#- 179 CreateSection
# body param: body
echo '{"active": true, "displayOrder": 19, "endDate": "1972-04-20T00:00:00Z", "ext": {"P72NFMfY": {}, "73inwiXu": {}, "Rh7a97co": {}}, "fixedPeriodRotationConfig": {"backfillType": "CUSTOM", "duration": 76, "itemCount": 95, "rule": "SEQUENCE"}, "items": [{"id": "SezDMMKv", "sku": "IBpKBwF6"}, {"id": "m5J8hexw", "sku": "hmSb3WcO"}, {"id": "UNUTRZmc", "sku": "psz8sn1x"}], "localizations": {"BmrZGYla": {"description": "96Tfp4Kb", "localExt": {"0f1dNHyO": {}, "AS3opPxQ": {}, "S3j8ep6N": {}}, "longDescription": "JZHnAJfb", "title": "xjnM2VRZ"}, "NY4W8gnF": {"description": "2EEumIZc", "localExt": {"H3foRb3A": {}, "E9l1BXeP": {}, "2NxPuwW9": {}}, "longDescription": "Bdw18h7r", "title": "OPGYzT2C"}, "crXKNco6": {"description": "ds8yE34c", "localExt": {"AENbIEEw": {}, "TbGHLdSX": {}, "IP51mCbq": {}}, "longDescription": "Bb9qOV4a", "title": "A5M1bp6N"}}, "name": "LLgyNsa5", "rotationType": "CUSTOM", "startDate": "1991-06-21T00:00:00Z", "viewId": "Yx1GBnoQ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateSection \
    --namespace $AB_NAMESPACE \
    --storeId 'MSSXMbPr' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 179 'CreateSection' test.out

#- 180 PurgeExpiredSection
$CLI_EXE \
    --sn platform \
    --op PurgeExpiredSection \
    --namespace $AB_NAMESPACE \
    --storeId '7gYIV7Pt' \
    > test.out 2>&1
eval_tap $? 180 'PurgeExpiredSection' test.out

#- 181 GetSection
$CLI_EXE \
    --sn platform \
    --op GetSection \
    --namespace $AB_NAMESPACE \
    --sectionId 'cpIja4dw' \
    --storeId 'IdHY243v' \
    > test.out 2>&1
eval_tap $? 181 'GetSection' test.out

#- 182 UpdateSection
# body param: body
echo '{"active": true, "displayOrder": 99, "endDate": "1991-03-12T00:00:00Z", "ext": {"TRKLfLiO": {}, "xBIddsip": {}, "JMmWc7sx": {}}, "fixedPeriodRotationConfig": {"backfillType": "NONE", "duration": 69, "itemCount": 38, "rule": "SEQUENCE"}, "items": [{"id": "PgGo3WkZ", "sku": "0QxIFriw"}, {"id": "ghPdqscM", "sku": "Fr07sViL"}, {"id": "HASKeWUw", "sku": "eahEROB1"}], "localizations": {"bLDvlnPx": {"description": "aWIUi8bV", "localExt": {"nzsFvHY5": {}, "ISxCzs06": {}, "rdEacfGX": {}}, "longDescription": "EmfNVFyr", "title": "hskLzrEx"}, "0RDxE1ba": {"description": "hs8Ttuul", "localExt": {"Eh64QIvf": {}, "s4TQygow": {}, "teB09Lya": {}}, "longDescription": "n0bpbwjt", "title": "Wu5EUZYX"}, "tSDUmcDG": {"description": "xNSkMekg", "localExt": {"65wJf71Z": {}, "pO1xJ7RS": {}, "nt0pLQOu": {}}, "longDescription": "Bt84cott", "title": "DiGDclKb"}}, "name": "SwllUC6y", "rotationType": "CUSTOM", "startDate": "1986-02-15T00:00:00Z", "viewId": "oRDrc0QR"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateSection \
    --namespace $AB_NAMESPACE \
    --sectionId 'Q11vFlov' \
    --storeId '3VmVH8zK' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 182 'UpdateSection' test.out

#- 183 DeleteSection
$CLI_EXE \
    --sn platform \
    --op DeleteSection \
    --namespace $AB_NAMESPACE \
    --sectionId 'YrYFg1Lt' \
    --storeId '0cZVOjMs' \
    > test.out 2>&1
eval_tap $? 183 'DeleteSection' test.out

#- 184 ListStores
$CLI_EXE \
    --sn platform \
    --op ListStores \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 184 'ListStores' test.out

#- 185 CreateStore
# body param: body
echo '{"defaultLanguage": "7FMVmlnv", "defaultRegion": "ELjZo9zm", "description": "CDNi4FUV", "supportedLanguages": ["nqNmO76d", "MXG8mSgs", "WfPbzXxw"], "supportedRegions": ["PNanUtqS", "A8AnOsD1", "1exRZVvR"], "title": "BsOiYnSn"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateStore \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 185 'CreateStore' test.out

#- 186 GetCatalogDefinition
$CLI_EXE \
    --sn platform \
    --op GetCatalogDefinition \
    --namespace $AB_NAMESPACE \
    --catalogType 'CATEGORY' \
    > test.out 2>&1
eval_tap $? 186 'GetCatalogDefinition' test.out

#- 187 DownloadCSVTemplates
$CLI_EXE \
    --sn platform \
    --op DownloadCSVTemplates \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 187 'DownloadCSVTemplates' test.out

#- 188 ExportStoreByCSV
# body param: body
echo '{"catalogType": "APP", "fieldsToBeIncluded": ["YyD8itAE", "pq2QRIAc", "HqWWJL8X"], "idsToBeExported": ["ewtCa7vz", "P6iw2shY", "aR4nl7tt"], "storeId": "7QhI087G"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ExportStoreByCSV \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 188 'ExportStoreByCSV' test.out

#- 189 ImportStore
eval_tap 0 189 'ImportStore # SKIP deprecated' test.out

#- 190 GetPublishedStore
$CLI_EXE \
    --sn platform \
    --op GetPublishedStore \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 190 'GetPublishedStore' test.out

#- 191 DeletePublishedStore
$CLI_EXE \
    --sn platform \
    --op DeletePublishedStore \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 191 'DeletePublishedStore' test.out

#- 192 GetPublishedStoreBackup
$CLI_EXE \
    --sn platform \
    --op GetPublishedStoreBackup \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 192 'GetPublishedStoreBackup' test.out

#- 193 RollbackPublishedStore
$CLI_EXE \
    --sn platform \
    --op RollbackPublishedStore \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 193 'RollbackPublishedStore' test.out

#- 194 GetStore
$CLI_EXE \
    --sn platform \
    --op GetStore \
    --namespace $AB_NAMESPACE \
    --storeId '4p5vlsll' \
    > test.out 2>&1
eval_tap $? 194 'GetStore' test.out

#- 195 UpdateStore
# body param: body
echo '{"defaultLanguage": "ujfW8Y3a", "defaultRegion": "GP2wZAUk", "description": "ikTw1IyE", "supportedLanguages": ["0zmjjhb5", "uk3ejdrm", "D9v6HlMN"], "supportedRegions": ["i5Exfwyu", "B7EXgsSE", "uUkdu1Oy"], "title": "skJvKXcA"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateStore \
    --namespace $AB_NAMESPACE \
    --storeId 'n8jh1mnH' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 195 'UpdateStore' test.out

#- 196 DeleteStore
$CLI_EXE \
    --sn platform \
    --op DeleteStore \
    --namespace $AB_NAMESPACE \
    --storeId 'CcDaCQMU' \
    > test.out 2>&1
eval_tap $? 196 'DeleteStore' test.out

#- 197 QueryChanges
$CLI_EXE \
    --sn platform \
    --op QueryChanges \
    --namespace $AB_NAMESPACE \
    --storeId 'lPShuywo' \
    --action 'CREATE' \
    --itemSku 'NqTW3FO0' \
    --itemType 'COINS' \
    --limit '8' \
    --offset '60' \
    --selected 'true' \
    --sortBy '["createdAt:desc", "createdAt:asc"]' \
    --status 'PUBLISHED' \
    --type 'VIEW' \
    --updatedAtEnd 'f9Q3xF9r' \
    --updatedAtStart 'oBExaXuJ' \
    --withTotal 'true' \
    > test.out 2>&1
eval_tap $? 197 'QueryChanges' test.out

#- 198 PublishAll
$CLI_EXE \
    --sn platform \
    --op PublishAll \
    --namespace $AB_NAMESPACE \
    --storeId 'HBBVXlOb' \
    > test.out 2>&1
eval_tap $? 198 'PublishAll' test.out

#- 199 PublishSelected
$CLI_EXE \
    --sn platform \
    --op PublishSelected \
    --namespace $AB_NAMESPACE \
    --storeId 'jGOy6JfA' \
    > test.out 2>&1
eval_tap $? 199 'PublishSelected' test.out

#- 200 SelectAllRecords
$CLI_EXE \
    --sn platform \
    --op SelectAllRecords \
    --namespace $AB_NAMESPACE \
    --storeId 'aLebLy2V' \
    > test.out 2>&1
eval_tap $? 200 'SelectAllRecords' test.out

#- 201 SelectAllRecordsByCriteria
$CLI_EXE \
    --sn platform \
    --op SelectAllRecordsByCriteria \
    --namespace $AB_NAMESPACE \
    --storeId 'QVAxJ1hc' \
    --action 'CREATE' \
    --itemSku 'xJ14pcvX' \
    --itemType 'MEDIA' \
    --selected 'false' \
    --type 'ITEM' \
    --updatedAtEnd 'GtUR5Aqr' \
    --updatedAtStart 'JMPdfyfv' \
    > test.out 2>&1
eval_tap $? 201 'SelectAllRecordsByCriteria' test.out

#- 202 GetStatistic
$CLI_EXE \
    --sn platform \
    --op GetStatistic \
    --namespace $AB_NAMESPACE \
    --storeId 'aR9cs1Ja' \
    --action 'UPDATE' \
    --itemSku 'lyb044mQ' \
    --itemType 'SEASON' \
    --type 'STORE' \
    --updatedAtEnd 'gDi0bUA9' \
    --updatedAtStart 'vCNmj52E' \
    > test.out 2>&1
eval_tap $? 202 'GetStatistic' test.out

#- 203 UnselectAllRecords
$CLI_EXE \
    --sn platform \
    --op UnselectAllRecords \
    --namespace $AB_NAMESPACE \
    --storeId 'FJF7iYvm' \
    > test.out 2>&1
eval_tap $? 203 'UnselectAllRecords' test.out

#- 204 SelectRecord
$CLI_EXE \
    --sn platform \
    --op SelectRecord \
    --changeId 'xqAry9YQ' \
    --namespace $AB_NAMESPACE \
    --storeId 'kbzzTDqU' \
    > test.out 2>&1
eval_tap $? 204 'SelectRecord' test.out

#- 205 UnselectRecord
$CLI_EXE \
    --sn platform \
    --op UnselectRecord \
    --changeId 'oyQ8ZwS7' \
    --namespace $AB_NAMESPACE \
    --storeId 'xEZVlc94' \
    > test.out 2>&1
eval_tap $? 205 'UnselectRecord' test.out

#- 206 CloneStore
$CLI_EXE \
    --sn platform \
    --op CloneStore \
    --namespace $AB_NAMESPACE \
    --storeId 'UInqRUSZ' \
    --targetStoreId 'cM3mXIci' \
    > test.out 2>&1
eval_tap $? 206 'CloneStore' test.out

#- 207 ExportStore
eval_tap 0 207 'ExportStore # SKIP deprecated' test.out

#- 208 QueryImportHistory
$CLI_EXE \
    --sn platform \
    --op QueryImportHistory \
    --namespace $AB_NAMESPACE \
    --storeId 'fU6N0KvN' \
    --end 'JSJDHc3j' \
    --limit '61' \
    --offset '17' \
    --sortBy 'XrQto1yV' \
    --start 'uDAwIrj7' \
    --success 'false' \
    > test.out 2>&1
eval_tap $? 208 'QueryImportHistory' test.out

#- 209 ImportStoreByCSV
# form data upload: category
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
# form data upload: display
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
# form data upload: item
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
# form data upload: section
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op ImportStoreByCSV \
    --namespace $AB_NAMESPACE \
    --storeId 'OfnNbM5s' \
    --upload category $TEMP_FILE_UPLOAD \
    --upload display $TEMP_FILE_UPLOAD \
    --upload item $TEMP_FILE_UPLOAD \
    --notes '8iD6Fcj1' \
    --upload section $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 209 'ImportStoreByCSV' test.out

#- 210 QuerySubscriptions
$CLI_EXE \
    --sn platform \
    --op QuerySubscriptions \
    --namespace $AB_NAMESPACE \
    --chargeStatus 'CHARGE_FAILED' \
    --itemId 'wrisFcgT' \
    --limit '95' \
    --offset '90' \
    --sku '3w178ckZ' \
    --status 'INIT' \
    --subscribedBy 'PLATFORM' \
    --userId 'kBihIsI0' \
    > test.out 2>&1
eval_tap $? 210 'QuerySubscriptions' test.out

#- 211 RecurringChargeSubscription
$CLI_EXE \
    --sn platform \
    --op RecurringChargeSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'IjIt07JW' \
    > test.out 2>&1
eval_tap $? 211 'RecurringChargeSubscription' test.out

#- 212 GetTicketDynamic
$CLI_EXE \
    --sn platform \
    --op GetTicketDynamic \
    --boothName '60fDqkBj' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 212 'GetTicketDynamic' test.out

#- 213 DecreaseTicketSale
# body param: body
echo '{"orderNo": "gcWDr7jJ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op DecreaseTicketSale \
    --boothName 'yStOHkj9' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 213 'DecreaseTicketSale' test.out

#- 214 GetTicketBoothID
$CLI_EXE \
    --sn platform \
    --op GetTicketBoothID \
    --boothName 'FB2hwBbu' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 214 'GetTicketBoothID' test.out

#- 215 IncreaseTicketSale
# body param: body
echo '{"count": 86, "orderNo": "dVPoqH7l"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op IncreaseTicketSale \
    --boothName 'gE42sYhA' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 215 'IncreaseTicketSale' test.out

#- 216 Commit
# body param: body
echo '{"actions": [{"operations": [{"creditPayload": {"balanceOrigin": "System", "count": 87, "currencyCode": "OTdiv5Rx", "expireAt": "1986-09-25T00:00:00Z"}, "debitPayload": {"count": 40, "currencyCode": "NXKNQq3P", "walletPlatform": "Epic"}, "fulFillItemPayload": {"count": 32, "entitlementCollectionId": "ZI4tYDMX", "entitlementOrigin": "GooglePlay", "itemIdentity": "UwAeWXhP", "itemIdentityType": "ITEM_ID"}, "revokeEntitlementPayload": {"count": 69, "entitlementId": "FC6ugLEO"}, "type": "CREDIT_WALLET"}, {"creditPayload": {"balanceOrigin": "Nintendo", "count": 38, "currencyCode": "f7PTbKgg", "expireAt": "1976-03-24T00:00:00Z"}, "debitPayload": {"count": 46, "currencyCode": "fudRmqOG", "walletPlatform": "Epic"}, "fulFillItemPayload": {"count": 20, "entitlementCollectionId": "n8rH9nrC", "entitlementOrigin": "GooglePlay", "itemIdentity": "ETKUeTJc", "itemIdentityType": "ITEM_SKU"}, "revokeEntitlementPayload": {"count": 31, "entitlementId": "yS8aGp6q"}, "type": "FULFILL_ITEM"}, {"creditPayload": {"balanceOrigin": "Epic", "count": 33, "currencyCode": "BYplkP8M", "expireAt": "1985-10-31T00:00:00Z"}, "debitPayload": {"count": 94, "currencyCode": "CNwZT3vn", "walletPlatform": "Xbox"}, "fulFillItemPayload": {"count": 68, "entitlementCollectionId": "3Uy3ahyz", "entitlementOrigin": "GooglePlay", "itemIdentity": "2D7NpDRA", "itemIdentityType": "ITEM_SKU"}, "revokeEntitlementPayload": {"count": 35, "entitlementId": "6lt3nOU1"}, "type": "DEBIT_WALLET"}], "userId": "7gvD2D1O"}, {"operations": [{"creditPayload": {"balanceOrigin": "Oculus", "count": 20, "currencyCode": "iVgYBYPX", "expireAt": "1972-05-19T00:00:00Z"}, "debitPayload": {"count": 8, "currencyCode": "kew9JPWK", "walletPlatform": "Epic"}, "fulFillItemPayload": {"count": 13, "entitlementCollectionId": "TBuaumkN", "entitlementOrigin": "Playstation", "itemIdentity": "1GMebJTH", "itemIdentityType": "ITEM_SKU"}, "revokeEntitlementPayload": {"count": 77, "entitlementId": "uHQVT5tg"}, "type": "REVOKE_ENTITLEMENT"}, {"creditPayload": {"balanceOrigin": "Oculus", "count": 4, "currencyCode": "ona9Bo5T", "expireAt": "1997-07-28T00:00:00Z"}, "debitPayload": {"count": 93, "currencyCode": "rtJTOi5n", "walletPlatform": "Other"}, "fulFillItemPayload": {"count": 72, "entitlementCollectionId": "rtkSBNd9", "entitlementOrigin": "Nintendo", "itemIdentity": "WjC3NguP", "itemIdentityType": "ITEM_SKU"}, "revokeEntitlementPayload": {"count": 35, "entitlementId": "2TEit8fO"}, "type": "CREDIT_WALLET"}, {"creditPayload": {"balanceOrigin": "Twitch", "count": 26, "currencyCode": "81wPtu9y", "expireAt": "1995-03-17T00:00:00Z"}, "debitPayload": {"count": 8, "currencyCode": "BBZi4nwr", "walletPlatform": "Nintendo"}, "fulFillItemPayload": {"count": 39, "entitlementCollectionId": "dVwtvNYd", "entitlementOrigin": "Playstation", "itemIdentity": "G6E3bW8x", "itemIdentityType": "ITEM_SKU"}, "revokeEntitlementPayload": {"count": 8, "entitlementId": "pdFz7kP6"}, "type": "REVOKE_ENTITLEMENT"}], "userId": "7ise2V8v"}, {"operations": [{"creditPayload": {"balanceOrigin": "Epic", "count": 65, "currencyCode": "MWumD4Zx", "expireAt": "1979-01-24T00:00:00Z"}, "debitPayload": {"count": 95, "currencyCode": "AMQGqh4y", "walletPlatform": "IOS"}, "fulFillItemPayload": {"count": 33, "entitlementCollectionId": "KUsduFte", "entitlementOrigin": "Other", "itemIdentity": "3dNZw6sr", "itemIdentityType": "ITEM_SKU"}, "revokeEntitlementPayload": {"count": 26, "entitlementId": "MfsF80K4"}, "type": "CREDIT_WALLET"}, {"creditPayload": {"balanceOrigin": "Other", "count": 8, "currencyCode": "iqa12Ha9", "expireAt": "1985-04-02T00:00:00Z"}, "debitPayload": {"count": 85, "currencyCode": "H7OLa6ju", "walletPlatform": "Steam"}, "fulFillItemPayload": {"count": 82, "entitlementCollectionId": "di63BAId", "entitlementOrigin": "Xbox", "itemIdentity": "SOoRmX6o", "itemIdentityType": "ITEM_SKU"}, "revokeEntitlementPayload": {"count": 73, "entitlementId": "6uEDALLF"}, "type": "CREDIT_WALLET"}, {"creditPayload": {"balanceOrigin": "Twitch", "count": 18, "currencyCode": "GEzflJWZ", "expireAt": "1983-04-26T00:00:00Z"}, "debitPayload": {"count": 71, "currencyCode": "hrDhAMql", "walletPlatform": "Oculus"}, "fulFillItemPayload": {"count": 34, "entitlementCollectionId": "m90uV8wP", "entitlementOrigin": "Steam", "itemIdentity": "6R56KN5b", "itemIdentityType": "ITEM_ID"}, "revokeEntitlementPayload": {"count": 99, "entitlementId": "9BF9b0iZ"}, "type": "FULFILL_ITEM"}], "userId": "IBAuF6pe"}], "metadata": {"NMgQdB3L": {}, "kfUjlPpI": {}, "nSTFy2yZ": {}}, "needPreCheck": true, "transactionId": "2LRpKmBu", "type": "5GNHSUhw"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op Commit \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 216 'Commit' test.out

#- 217 GetTradeHistoryByCriteria
$CLI_EXE \
    --sn platform \
    --op GetTradeHistoryByCriteria \
    --namespace $AB_NAMESPACE \
    --limit '83' \
    --offset '100' \
    --status 'SUCCESS' \
    --type 'GON4oNkk' \
    --userId 'wY6vqmMC' \
    > test.out 2>&1
eval_tap $? 217 'GetTradeHistoryByCriteria' test.out

#- 218 GetTradeHistoryByTransactionId
$CLI_EXE \
    --sn platform \
    --op GetTradeHistoryByTransactionId \
    --namespace $AB_NAMESPACE \
    --transactionId 'OPvai5Gh' \
    > test.out 2>&1
eval_tap $? 218 'GetTradeHistoryByTransactionId' test.out

#- 219 UnlockSteamUserAchievement
# body param: body
echo '{"achievements": [{"id": "SKZ9YECX", "value": 2}, {"id": "fWNJX8tn", "value": 72}, {"id": "Y8DUVUaO", "value": 56}], "steamUserId": "cIHYn0nq"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UnlockSteamUserAchievement \
    --namespace $AB_NAMESPACE \
    --userId 'DnVY0zi4' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 219 'UnlockSteamUserAchievement' test.out

#- 220 GetXblUserAchievements
$CLI_EXE \
    --sn platform \
    --op GetXblUserAchievements \
    --namespace $AB_NAMESPACE \
    --userId 'GEhjjlDw' \
    --xboxUserId 'g2BKnoaj' \
    > test.out 2>&1
eval_tap $? 220 'GetXblUserAchievements' test.out

#- 221 UpdateXblUserAchievement
# body param: body
echo '{"achievements": [{"id": "pusqkSAt", "percentComplete": 73}, {"id": "k4kxHETv", "percentComplete": 44}, {"id": "ALP6jBcF", "percentComplete": 75}], "serviceConfigId": "JCDgdOjg", "titleId": "lmDDRBFo", "xboxUserId": "9jxrOcDX"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXblUserAchievement \
    --namespace $AB_NAMESPACE \
    --userId 'clSALljO' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 221 'UpdateXblUserAchievement' test.out

#- 222 AnonymizeCampaign
$CLI_EXE \
    --sn platform \
    --op AnonymizeCampaign \
    --namespace $AB_NAMESPACE \
    --userId '61WDeKnA' \
    > test.out 2>&1
eval_tap $? 222 'AnonymizeCampaign' test.out

#- 223 AnonymizeEntitlement
$CLI_EXE \
    --sn platform \
    --op AnonymizeEntitlement \
    --namespace $AB_NAMESPACE \
    --userId '44sQjyix' \
    > test.out 2>&1
eval_tap $? 223 'AnonymizeEntitlement' test.out

#- 224 AnonymizeFulfillment
$CLI_EXE \
    --sn platform \
    --op AnonymizeFulfillment \
    --namespace $AB_NAMESPACE \
    --userId 'BwbB9DKV' \
    > test.out 2>&1
eval_tap $? 224 'AnonymizeFulfillment' test.out

#- 225 AnonymizeIntegration
$CLI_EXE \
    --sn platform \
    --op AnonymizeIntegration \
    --namespace $AB_NAMESPACE \
    --userId 'qtJmUubV' \
    > test.out 2>&1
eval_tap $? 225 'AnonymizeIntegration' test.out

#- 226 AnonymizeOrder
$CLI_EXE \
    --sn platform \
    --op AnonymizeOrder \
    --namespace $AB_NAMESPACE \
    --userId 'CpnLY4o6' \
    > test.out 2>&1
eval_tap $? 226 'AnonymizeOrder' test.out

#- 227 AnonymizePayment
$CLI_EXE \
    --sn platform \
    --op AnonymizePayment \
    --namespace $AB_NAMESPACE \
    --userId 'fOt4nzBK' \
    > test.out 2>&1
eval_tap $? 227 'AnonymizePayment' test.out

#- 228 AnonymizeRevocation
$CLI_EXE \
    --sn platform \
    --op AnonymizeRevocation \
    --namespace $AB_NAMESPACE \
    --userId 'yGwN9LLH' \
    > test.out 2>&1
eval_tap $? 228 'AnonymizeRevocation' test.out

#- 229 AnonymizeSubscription
$CLI_EXE \
    --sn platform \
    --op AnonymizeSubscription \
    --namespace $AB_NAMESPACE \
    --userId 'uHQLhx6L' \
    > test.out 2>&1
eval_tap $? 229 'AnonymizeSubscription' test.out

#- 230 AnonymizeWallet
$CLI_EXE \
    --sn platform \
    --op AnonymizeWallet \
    --namespace $AB_NAMESPACE \
    --userId 'XtsYwqje' \
    > test.out 2>&1
eval_tap $? 230 'AnonymizeWallet' test.out

#- 231 GetUserDLCByPlatform
$CLI_EXE \
    --sn platform \
    --op GetUserDLCByPlatform \
    --namespace $AB_NAMESPACE \
    --userId 'GUH40jJd' \
    --type 'EPICGAMES' \
    > test.out 2>&1
eval_tap $? 231 'GetUserDLCByPlatform' test.out

#- 232 GetUserDLC
$CLI_EXE \
    --sn platform \
    --op GetUserDLC \
    --namespace $AB_NAMESPACE \
    --userId 'xd3hg7Nz' \
    --type 'XBOX' \
    > test.out 2>&1
eval_tap $? 232 'GetUserDLC' test.out

#- 233 QueryUserEntitlements
$CLI_EXE \
    --sn platform \
    --op QueryUserEntitlements \
    --namespace $AB_NAMESPACE \
    --userId 'Oi7Zu8zQ' \
    --activeOnly 'false' \
    --appType 'SOFTWARE' \
    --collectionId 'G7EEZFCl' \
    --entitlementClazz 'CODE' \
    --entitlementName 'f1BZtR1h' \
    --features '["cApuwjb6", "lhyAVbmW", "ilaF6EcQ"]' \
    --fuzzyMatchName 'false' \
    --itemId '["icVKLBvM", "MdhawIh2", "souimu50"]' \
    --limit '75' \
    --offset '7' \
    --origin 'IOS' \
    > test.out 2>&1
eval_tap $? 233 'QueryUserEntitlements' test.out

#- 234 GrantUserEntitlement
# body param: body
echo '[{"collectionId": "g0HOVzhb", "endDate": "1989-11-09T00:00:00Z", "grantedCode": "zDtVSW03", "itemId": "mild1cIb", "itemNamespace": "ELqs7pnj", "language": "Hm", "origin": "IOS", "quantity": 21, "region": "EvFB8wRw", "source": "REFERRAL_BONUS", "startDate": "1980-07-26T00:00:00Z", "storeId": "jb5a1Uo5"}, {"collectionId": "G4cikt8I", "endDate": "1975-10-16T00:00:00Z", "grantedCode": "gs057mpn", "itemId": "R6gFO5BH", "itemNamespace": "BRvxedna", "language": "bP_tovG", "origin": "Xbox", "quantity": 84, "region": "FgTQmHR0", "source": "REDEEM_CODE", "startDate": "1988-09-07T00:00:00Z", "storeId": "3bKpvyEe"}, {"collectionId": "hHfGp9y4", "endDate": "1985-10-12T00:00:00Z", "grantedCode": "OkKkaE2A", "itemId": "qZyx1oY9", "itemNamespace": "y46vxfif", "language": "LoX", "origin": "Epic", "quantity": 49, "region": "D4gyAkNE", "source": "IAP", "startDate": "1984-12-28T00:00:00Z", "storeId": "UAQtViup"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op GrantUserEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'lJ2gLPBR' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 234 'GrantUserEntitlement' test.out

#- 235 GetUserAppEntitlementByAppId
$CLI_EXE \
    --sn platform \
    --op GetUserAppEntitlementByAppId \
    --namespace $AB_NAMESPACE \
    --userId 'R4lMvC6z' \
    --activeOnly 'false' \
    --appId 'jypq38Vk' \
    > test.out 2>&1
eval_tap $? 235 'GetUserAppEntitlementByAppId' test.out

#- 236 QueryUserEntitlementsByAppType
$CLI_EXE \
    --sn platform \
    --op QueryUserEntitlementsByAppType \
    --namespace $AB_NAMESPACE \
    --userId '0rIoop7o' \
    --activeOnly 'false' \
    --limit '70' \
    --offset '97' \
    --appType 'DEMO' \
    > test.out 2>&1
eval_tap $? 236 'QueryUserEntitlementsByAppType' test.out

#- 237 GetUserEntitlementByItemId
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementByItemId \
    --namespace $AB_NAMESPACE \
    --userId '05georGb' \
    --activeOnly 'true' \
    --entitlementClazz 'MEDIA' \
    --platform 'lTKCEefz' \
    --itemId 'RI7n33tt' \
    > test.out 2>&1
eval_tap $? 237 'GetUserEntitlementByItemId' test.out

#- 238 GetUserActiveEntitlementsByItemIds
$CLI_EXE \
    --sn platform \
    --op GetUserActiveEntitlementsByItemIds \
    --namespace $AB_NAMESPACE \
    --userId 'fEgg94GP' \
    --ids '["NBBehIEn", "TDrRNtan", "eXALVcEQ"]' \
    --platform 'blrxZPtb' \
    > test.out 2>&1
eval_tap $? 238 'GetUserActiveEntitlementsByItemIds' test.out

#- 239 GetUserEntitlementBySku
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementBySku \
    --namespace $AB_NAMESPACE \
    --userId 'cIpvvMV3' \
    --activeOnly 'true' \
    --entitlementClazz 'LOOTBOX' \
    --platform 'aGO08rm3' \
    --sku 'XKSKB8HR' \
    > test.out 2>&1
eval_tap $? 239 'GetUserEntitlementBySku' test.out

#- 240 ExistsAnyUserActiveEntitlement
$CLI_EXE \
    --sn platform \
    --op ExistsAnyUserActiveEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'zbiGYeOX' \
    --appIds '["KliKZyjz", "Y3iu7Cjb", "djyDOoAO"]' \
    --itemIds '["dk79PhTV", "JAJQSiFO", "iZiLU3fL"]' \
    --platform 'UMhuSTxB' \
    --skus '["fLc6Jlu9", "A3BtQLrB", "LqEV3CW7"]' \
    > test.out 2>&1
eval_tap $? 240 'ExistsAnyUserActiveEntitlement' test.out

#- 241 ExistsAnyUserActiveEntitlementByItemIds
$CLI_EXE \
    --sn platform \
    --op ExistsAnyUserActiveEntitlementByItemIds \
    --namespace $AB_NAMESPACE \
    --userId 'YZ2zRjNl' \
    --platform '1eTXkIBc' \
    --itemIds '["0jZdLGhM", "5fVWeTDu", "uLfFsJR4"]' \
    > test.out 2>&1
eval_tap $? 241 'ExistsAnyUserActiveEntitlementByItemIds' test.out

#- 242 GetUserAppEntitlementOwnershipByAppId
$CLI_EXE \
    --sn platform \
    --op GetUserAppEntitlementOwnershipByAppId \
    --namespace $AB_NAMESPACE \
    --userId '6RzIidse' \
    --appId '6CGkjD2i' \
    > test.out 2>&1
eval_tap $? 242 'GetUserAppEntitlementOwnershipByAppId' test.out

#- 243 GetUserEntitlementOwnershipByItemId
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementOwnershipByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'cpBjwYqz' \
    --entitlementClazz 'MEDIA' \
    --platform 'dSi02xLf' \
    --itemId 'bfndqfck' \
    > test.out 2>&1
eval_tap $? 243 'GetUserEntitlementOwnershipByItemId' test.out

#- 244 GetUserEntitlementOwnershipByItemIds
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementOwnershipByItemIds \
    --namespace $AB_NAMESPACE \
    --userId 'SAbmA8Hk' \
    --ids '["GRhdrdrX", "ZME9CNFl", "a9axFFLp"]' \
    --platform 'iMM3pboB' \
    > test.out 2>&1
eval_tap $? 244 'GetUserEntitlementOwnershipByItemIds' test.out

#- 245 GetUserEntitlementOwnershipBySku
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementOwnershipBySku \
    --namespace $AB_NAMESPACE \
    --userId 'WLaFA6sa' \
    --entitlementClazz 'OPTIONBOX' \
    --platform 'YXxP4ioa' \
    --sku '9ua43x9m' \
    > test.out 2>&1
eval_tap $? 245 'GetUserEntitlementOwnershipBySku' test.out

#- 246 RevokeAllEntitlements
$CLI_EXE \
    --sn platform \
    --op RevokeAllEntitlements \
    --namespace $AB_NAMESPACE \
    --userId '9oj4pjlf' \
    > test.out 2>&1
eval_tap $? 246 'RevokeAllEntitlements' test.out

#- 247 RevokeUserEntitlements
$CLI_EXE \
    --sn platform \
    --op RevokeUserEntitlements \
    --namespace $AB_NAMESPACE \
    --userId 'RekurKqz' \
    --entitlementIds 'MfCpA4iR' \
    > test.out 2>&1
eval_tap $? 247 'RevokeUserEntitlements' test.out

#- 248 GetUserEntitlement
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlement \
    --entitlementId 'H5zKKU2j' \
    --namespace $AB_NAMESPACE \
    --userId 'bUrZq6vQ' \
    > test.out 2>&1
eval_tap $? 248 'GetUserEntitlement' test.out

#- 249 UpdateUserEntitlement
# body param: body
echo '{"collectionId": "nwNLT9re", "endDate": "1995-05-18T00:00:00Z", "nullFieldList": ["zsRlHUXT", "Lx3d4RLb", "9U5LTLWQ"], "origin": "Playstation", "reason": "R1dUdcoc", "startDate": "1992-04-26T00:00:00Z", "status": "CONSUMED", "useCount": 93}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateUserEntitlement \
    --entitlementId 'ZEZ4YofR' \
    --namespace $AB_NAMESPACE \
    --userId 'jnvPcFui' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 249 'UpdateUserEntitlement' test.out

#- 250 ConsumeUserEntitlement
# body param: body
echo '{"options": ["KrlSTpDZ", "jjWGYRGi", "qzBOjrdj"], "platform": "KVaYfVjU", "requestId": "J0NG4dGr", "useCount": 43}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ConsumeUserEntitlement \
    --entitlementId 'yGgt4g2l' \
    --namespace $AB_NAMESPACE \
    --userId 'zSY97OXE' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 250 'ConsumeUserEntitlement' test.out

#- 251 DisableUserEntitlement
$CLI_EXE \
    --sn platform \
    --op DisableUserEntitlement \
    --entitlementId 'kTeacUEn' \
    --namespace $AB_NAMESPACE \
    --userId 'dusjOKDC' \
    > test.out 2>&1
eval_tap $? 251 'DisableUserEntitlement' test.out

#- 252 EnableUserEntitlement
$CLI_EXE \
    --sn platform \
    --op EnableUserEntitlement \
    --entitlementId 'shPckvLT' \
    --namespace $AB_NAMESPACE \
    --userId 'CZwWqJ4U' \
    > test.out 2>&1
eval_tap $? 252 'EnableUserEntitlement' test.out

#- 253 GetUserEntitlementHistories
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementHistories \
    --entitlementId 'RwyMTjYz' \
    --namespace $AB_NAMESPACE \
    --userId 'EojdEvgV' \
    > test.out 2>&1
eval_tap $? 253 'GetUserEntitlementHistories' test.out

#- 254 RevokeUserEntitlement
$CLI_EXE \
    --sn platform \
    --op RevokeUserEntitlement \
    --entitlementId '4wF8VCV6' \
    --namespace $AB_NAMESPACE \
    --userId 'X0BdlNir' \
    > test.out 2>&1
eval_tap $? 254 'RevokeUserEntitlement' test.out

#- 255 RevokeUserEntitlementByUseCount
# body param: body
echo '{"reason": "htu1rkxw", "useCount": 19}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RevokeUserEntitlementByUseCount \
    --entitlementId 'tMsneHJH' \
    --namespace $AB_NAMESPACE \
    --userId '1hdFX25v' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 255 'RevokeUserEntitlementByUseCount' test.out

#- 256 PreCheckRevokeUserEntitlementByUseCount
$CLI_EXE \
    --sn platform \
    --op PreCheckRevokeUserEntitlementByUseCount \
    --entitlementId 'ygASTPVV' \
    --namespace $AB_NAMESPACE \
    --userId 'knFgPxq3' \
    --quantity '47' \
    > test.out 2>&1
eval_tap $? 256 'PreCheckRevokeUserEntitlementByUseCount' test.out

#- 257 RevokeUseCount
eval_tap 0 257 'RevokeUseCount # SKIP deprecated' test.out

#- 258 SellUserEntitlement
# body param: body
echo '{"platform": "xw0NTxGB", "requestId": "UqB3wRjz", "useCount": 67}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SellUserEntitlement \
    --entitlementId 'FScIUAmT' \
    --namespace $AB_NAMESPACE \
    --userId 'mUHE6NFE' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 258 'SellUserEntitlement' test.out

#- 259 FulfillItem
# body param: body
echo '{"duration": 89, "endDate": "1975-08-03T00:00:00Z", "entitlementCollectionId": "9KvM0YQZ", "entitlementOrigin": "Other", "itemId": "8ZLNFsJ6", "itemSku": "xoiGq1eJ", "language": "idecQjnz", "metadata": {"fXrVZJSA": {}, "Ty0zj5K0": {}, "Zr3lmNHW": {}}, "order": {"currency": {"currencyCode": "ONS9aFz3", "currencySymbol": "TQZGZl6N", "currencyType": "REAL", "decimals": 66, "namespace": "38yHRZvg"}, "ext": {"HrcLmyGj": {}, "vvRCZL6g": {}, "5JVL5kh5": {}}, "free": false}, "orderNo": "nZ2QlhdT", "origin": "Epic", "overrideBundleItemQty": {"6I3zOpSl": 0, "x03APkcz": 20, "8lN3UVJH": 72}, "quantity": 34, "region": "21DJWli9", "source": "REWARD", "startDate": "1987-10-02T00:00:00Z", "storeId": "5XrGfk42"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op FulfillItem \
    --namespace $AB_NAMESPACE \
    --userId 'bkQiwWrp' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 259 'FulfillItem' test.out

#- 260 RedeemCode
# body param: body
echo '{"code": "WBdxf5e0", "language": "prHR_MHln", "region": "ILgpp2qM"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RedeemCode \
    --namespace $AB_NAMESPACE \
    --userId 'oNl6bpcr' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 260 'RedeemCode' test.out

#- 261 PreCheckFulfillItem
# body param: body
echo '{"itemId": "IGulzXRn", "itemSku": "LmHeDuFq", "quantity": 58}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PreCheckFulfillItem \
    --namespace $AB_NAMESPACE \
    --userId 'K2NdZtRV' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 261 'PreCheckFulfillItem' test.out

#- 262 FulfillRewards
# body param: body
echo '{"entitlementCollectionId": "Vu2bSqkf", "entitlementOrigin": "Playstation", "metadata": {"E6veJgIH": {}, "dl5Ff89q": {}, "DTG8AHqc": {}}, "origin": "Epic", "rewards": [{"currency": {"currencyCode": "jQg3bD4Y", "namespace": "TaqMvNoc"}, "item": {"itemId": "JF9dqVOx", "itemSku": "i3MosLYG", "itemType": "wTR8AhJZ"}, "quantity": 75, "type": "CURRENCY"}, {"currency": {"currencyCode": "xkULg8Hu", "namespace": "gqWP2Dc5"}, "item": {"itemId": "5QCWV8Fc", "itemSku": "Un9Mq7HQ", "itemType": "GEx7G8j4"}, "quantity": 24, "type": "ITEM"}, {"currency": {"currencyCode": "vpqLM54H", "namespace": "fCQQB5mX"}, "item": {"itemId": "kkFRZiqT", "itemSku": "a7bVb10Y", "itemType": "F1EfxA8E"}, "quantity": 83, "type": "ITEM"}], "source": "EXPIRATION", "transactionId": "aF9c1z79"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op FulfillRewards \
    --namespace $AB_NAMESPACE \
    --userId 'dJcZdsoS' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 262 'FulfillRewards' test.out

#- 263 QueryUserIAPOrders
$CLI_EXE \
    --sn platform \
    --op QueryUserIAPOrders \
    --namespace $AB_NAMESPACE \
    --userId 'N4vxjTJO' \
    --endTime 'Y6pgrPY8' \
    --limit '89' \
    --offset '29' \
    --productId 'kU4phhiS' \
    --startTime 'JEbDNUWm' \
    --status 'FULFILLED' \
    --type 'OCULUS' \
    > test.out 2>&1
eval_tap $? 263 'QueryUserIAPOrders' test.out

#- 264 QueryAllUserIAPOrders
$CLI_EXE \
    --sn platform \
    --op QueryAllUserIAPOrders \
    --namespace $AB_NAMESPACE \
    --userId 'nbIHQOXi' \
    > test.out 2>&1
eval_tap $? 264 'QueryAllUserIAPOrders' test.out

#- 265 QueryUserIAPConsumeHistory
$CLI_EXE \
    --sn platform \
    --op QueryUserIAPConsumeHistory \
    --namespace $AB_NAMESPACE \
    --userId 'vmvvK6Yo' \
    --endTime 'fetrLeu2' \
    --limit '41' \
    --offset '29' \
    --startTime '7hCNNY1u' \
    --status 'PENDING' \
    --type 'OCULUS' \
    > test.out 2>&1
eval_tap $? 265 'QueryUserIAPConsumeHistory' test.out

#- 266 MockFulfillIAPItem
# body param: body
echo '{"itemIdentityType": "ITEM_SKU", "language": "dG_oAJO", "productId": "X2cKTy1S", "region": "5bNeyfJx", "transactionId": "B6hpKtqI", "type": "PLAYSTATION"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op MockFulfillIAPItem \
    --namespace $AB_NAMESPACE \
    --userId 'DFLffM42' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 266 'MockFulfillIAPItem' test.out

#- 267 QueryUserOrders
$CLI_EXE \
    --sn platform \
    --op QueryUserOrders \
    --namespace $AB_NAMESPACE \
    --userId 'HwRDxNiv' \
    --itemId 's4kSURWz' \
    --limit '93' \
    --offset '5' \
    --status 'REFUNDED' \
    > test.out 2>&1
eval_tap $? 267 'QueryUserOrders' test.out

#- 268 AdminCreateUserOrder
# body param: body
echo '{"currencyCode": "VfvBBseQ", "currencyNamespace": "Bz6Zce7d", "discountedPrice": 42, "entitlementPlatform": "Nintendo", "ext": {"M2hFTpsd": {}, "gKkNVh3m": {}, "6sHxyG4n": {}}, "itemId": "xumtl9tv", "language": "S2DCoxYM", "options": {"skipPriceValidation": false}, "platform": "Xbox", "price": 32, "quantity": 27, "region": "tkcRw0JC", "returnUrl": "y1YIQbk7", "sandbox": false, "sectionId": "Ens836iY"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op AdminCreateUserOrder \
    --namespace $AB_NAMESPACE \
    --userId '2ZAv3kDJ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 268 'AdminCreateUserOrder' test.out

#- 269 CountOfPurchasedItem
$CLI_EXE \
    --sn platform \
    --op CountOfPurchasedItem \
    --namespace $AB_NAMESPACE \
    --userId 'IF0PMfbY' \
    --itemId 'TwaovACr' \
    > test.out 2>&1
eval_tap $? 269 'CountOfPurchasedItem' test.out

#- 270 GetUserOrder
$CLI_EXE \
    --sn platform \
    --op GetUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo '8RBLlf0k' \
    --userId 'gxar0wJt' \
    > test.out 2>&1
eval_tap $? 270 'GetUserOrder' test.out

#- 271 UpdateUserOrderStatus
# body param: body
echo '{"status": "INIT", "statusReason": "sdFcV3kK"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateUserOrderStatus \
    --namespace $AB_NAMESPACE \
    --orderNo 'QgOpBjHg' \
    --userId 'P1DqrcQR' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 271 'UpdateUserOrderStatus' test.out

#- 272 FulfillUserOrder
$CLI_EXE \
    --sn platform \
    --op FulfillUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'BfiO2f5X' \
    --userId 'x9b8Wc18' \
    > test.out 2>&1
eval_tap $? 272 'FulfillUserOrder' test.out

#- 273 GetUserOrderGrant
$CLI_EXE \
    --sn platform \
    --op GetUserOrderGrant \
    --namespace $AB_NAMESPACE \
    --orderNo 'zjwmAi6y' \
    --userId 'oNUds6NW' \
    > test.out 2>&1
eval_tap $? 273 'GetUserOrderGrant' test.out

#- 274 GetUserOrderHistories
$CLI_EXE \
    --sn platform \
    --op GetUserOrderHistories \
    --namespace $AB_NAMESPACE \
    --orderNo 'C2qQKklN' \
    --userId 'VbrAGcEj' \
    > test.out 2>&1
eval_tap $? 274 'GetUserOrderHistories' test.out

#- 275 ProcessUserOrderNotification
# body param: body
echo '{"additionalData": {"cardSummary": "AFbSd3bQ"}, "authorisedTime": "1999-11-13T00:00:00Z", "chargebackReversedTime": "1985-10-30T00:00:00Z", "chargebackTime": "1983-09-20T00:00:00Z", "chargedTime": "1986-01-28T00:00:00Z", "createdTime": "1998-12-29T00:00:00Z", "currency": {"currencyCode": "pOy1Jquj", "currencySymbol": "JNZcoM4q", "currencyType": "VIRTUAL", "decimals": 95, "namespace": "Fi6kOgus"}, "customParameters": {"VWdzoQay": {}, "LOBqXi9s": {}, "fyX3Lr5f": {}}, "extOrderNo": "n9J4ELX2", "extTxId": "Caebo7XV", "extUserId": "W6z2T740", "issuedAt": "1989-02-07T00:00:00Z", "metadata": {"02NPs05j": "ZwPUPT5l", "sY12Wq0L": "KLq7vfzG", "h6FDMsxW": "sa3oUx2E"}, "namespace": "Sdzm0CCl", "nonceStr": "ZNGdmkny", "paymentMethod": "IYYt7Hxm", "paymentMethodFee": 91, "paymentOrderNo": "Jd956ZiT", "paymentProvider": "XSOLLA", "paymentProviderFee": 93, "paymentStationUrl": "o043zERT", "price": 86, "refundedTime": "1989-01-29T00:00:00Z", "salesTax": 80, "sandbox": false, "sku": "VOQ3rFt7", "status": "NOTIFICATION_OF_CHARGEBACK", "statusReason": "j5GoHaWd", "subscriptionId": "TZibI2iC", "subtotalPrice": 97, "targetNamespace": "MxSCgdGQ", "targetUserId": "Z8fSanZB", "tax": 28, "totalPrice": 15, "totalTax": 26, "txEndTime": "1975-05-19T00:00:00Z", "type": "86b1KoEW", "userId": "3yrcA2ZO", "vat": 46}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ProcessUserOrderNotification \
    --namespace $AB_NAMESPACE \
    --orderNo '0r0gQs42' \
    --userId 'qdCBQPkO' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 275 'ProcessUserOrderNotification' test.out

#- 276 DownloadUserOrderReceipt
$CLI_EXE \
    --sn platform \
    --op DownloadUserOrderReceipt \
    --namespace $AB_NAMESPACE \
    --orderNo 'GMJlm8ME' \
    --userId 'tP3sRVfg' \
    > test.out 2>&1
eval_tap $? 276 'DownloadUserOrderReceipt' test.out

#- 277 CreateUserPaymentOrder
# body param: body
echo '{"currencyCode": "8wbOiClj", "currencyNamespace": "GZCRMgsI", "customParameters": {"apKwxg3M": {}, "grlemU5k": {}, "HWTUmtP6": {}}, "description": "R5KZYaWx", "extOrderNo": "Oi5UJ8fp", "extUserId": "SxsBvGk0", "itemType": "OPTIONBOX", "language": "SQ_niTP", "metadata": {"6Mx9qfSr": "fxBsJ2pz", "LNvxue9G": "EeBT5tTx", "TpRKZpFd": "DNlBkrtW"}, "notifyUrl": "X3tXqQvz", "omitNotification": true, "platform": "k1bqG1bx", "price": 69, "recurringPaymentOrderNo": "QBZ4DcH3", "region": "nL63flHA", "returnUrl": "LWoTG0hj", "sandbox": false, "sku": "p47B2fkr", "subscriptionId": "tTyMHioG", "title": "2Ql2acZt"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateUserPaymentOrder \
    --namespace $AB_NAMESPACE \
    --userId 'byJNeRGa' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 277 'CreateUserPaymentOrder' test.out

#- 278 RefundUserPaymentOrder
# body param: body
echo '{"description": "lib2ObK4"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RefundUserPaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'QHBfyCHy' \
    --userId 'znv53JDW' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 278 'RefundUserPaymentOrder' test.out

#- 279 ApplyUserRedemption
# body param: body
echo '{"code": "p9AnWFDm", "orderNo": "84r44ukT"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ApplyUserRedemption \
    --namespace $AB_NAMESPACE \
    --userId 'YuZuQwu1' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 279 'ApplyUserRedemption' test.out

#- 280 DoRevocation
# body param: body
echo '{"meta": {"rcMgQbLm": {}, "vkpaVZ0z": {}, "KYcHfKQq": {}}, "revokeEntries": [{"currency": {"balanceOrigin": "Xbox", "currencyCode": "zM02wQXI", "namespace": "JZlsXE8V"}, "entitlement": {"entitlementId": "muoYIpoQ"}, "item": {"entitlementOrigin": "Other", "itemIdentity": "Rgl8eJkc", "itemIdentityType": "ITEM_ID", "origin": "Nintendo"}, "quantity": 0, "type": "ENTITLEMENT"}, {"currency": {"balanceOrigin": "Xbox", "currencyCode": "oiUspKWu", "namespace": "Jnc0ztpg"}, "entitlement": {"entitlementId": "hMh0cgzq"}, "item": {"entitlementOrigin": "Playstation", "itemIdentity": "hQGkdMEy", "itemIdentityType": "ITEM_SKU", "origin": "IOS"}, "quantity": 97, "type": "ENTITLEMENT"}, {"currency": {"balanceOrigin": "Oculus", "currencyCode": "ZqHursX9", "namespace": "e0tb92No"}, "entitlement": {"entitlementId": "ScRCjoio"}, "item": {"entitlementOrigin": "Epic", "itemIdentity": "fHTyeRXK", "itemIdentityType": "ITEM_SKU", "origin": "Other"}, "quantity": 79, "type": "ENTITLEMENT"}], "source": "DLC", "transactionId": "W51N36J7"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op DoRevocation \
    --namespace $AB_NAMESPACE \
    --userId '3UGaSroz' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 280 'DoRevocation' test.out

#- 281 RegisterXblSessions
# body param: body
echo '{"gameSessionId": "dInST5sa", "payload": {"XT0lySxx": {}, "5GGWwpWV": {}, "L9z6eKXS": {}}, "scid": "L4R4Lw6M", "sessionTemplateName": "4KWaRZCb"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RegisterXblSessions \
    --namespace $AB_NAMESPACE \
    --userId '8djhmZgU' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 281 'RegisterXblSessions' test.out

#- 282 QueryUserSubscriptions
$CLI_EXE \
    --sn platform \
    --op QueryUserSubscriptions \
    --namespace $AB_NAMESPACE \
    --userId 'sDpYDjZl' \
    --chargeStatus 'CHARGED' \
    --itemId 'uS2uRxLg' \
    --limit '31' \
    --offset '79' \
    --sku 'u47FqYlM' \
    --status 'INIT' \
    --subscribedBy 'PLATFORM' \
    > test.out 2>&1
eval_tap $? 282 'QueryUserSubscriptions' test.out

#- 283 GetUserSubscriptionActivities
$CLI_EXE \
    --sn platform \
    --op GetUserSubscriptionActivities \
    --namespace $AB_NAMESPACE \
    --userId '26Yajboj' \
    --excludeSystem 'true' \
    --limit '47' \
    --offset '30' \
    --subscriptionId 'ofJklBm6' \
    > test.out 2>&1
eval_tap $? 283 'GetUserSubscriptionActivities' test.out

#- 284 PlatformSubscribeSubscription
# body param: body
echo '{"grantDays": 91, "itemId": "EvOy1iR9", "language": "WZFDDlNZ", "reason": "dENkfIhv", "region": "rvSarn1X", "source": "ot6B1AyV"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PlatformSubscribeSubscription \
    --namespace $AB_NAMESPACE \
    --userId 'EalUxWQr' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 284 'PlatformSubscribeSubscription' test.out

#- 285 CheckUserSubscriptionSubscribableByItemId
$CLI_EXE \
    --sn platform \
    --op CheckUserSubscriptionSubscribableByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'pzALsT22' \
    --itemId '5sGzCOoP' \
    > test.out 2>&1
eval_tap $? 285 'CheckUserSubscriptionSubscribableByItemId' test.out

#- 286 GetUserSubscription
$CLI_EXE \
    --sn platform \
    --op GetUserSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'TQC3UFYG' \
    --userId 'KwJIHn8K' \
    > test.out 2>&1
eval_tap $? 286 'GetUserSubscription' test.out

#- 287 DeleteUserSubscription
$CLI_EXE \
    --sn platform \
    --op DeleteUserSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'OrvHicbT' \
    --userId 'oTuDAE69' \
    > test.out 2>&1
eval_tap $? 287 'DeleteUserSubscription' test.out

#- 288 CancelSubscription
# body param: body
echo '{"immediate": false, "reason": "CluUmjJe"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CancelSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'rZ0oY1fu' \
    --userId 'F3Pdvb9a' \
    --force 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 288 'CancelSubscription' test.out

#- 289 GrantDaysToSubscription
# body param: body
echo '{"grantDays": 91, "reason": "k3qHvCrD"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op GrantDaysToSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'TEtpVeMi' \
    --userId 'rgwLc7hy' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 289 'GrantDaysToSubscription' test.out

#- 290 GetUserSubscriptionBillingHistories
$CLI_EXE \
    --sn platform \
    --op GetUserSubscriptionBillingHistories \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'OsjwqJ84' \
    --userId 'NM2ghJIF' \
    --excludeFree 'true' \
    --limit '14' \
    --offset '17' \
    > test.out 2>&1
eval_tap $? 290 'GetUserSubscriptionBillingHistories' test.out

#- 291 ProcessUserSubscriptionNotification
# body param: body
echo '{"additionalData": {"cardSummary": "Yj0DZm3Y"}, "authorisedTime": "1978-02-22T00:00:00Z", "chargebackReversedTime": "1977-08-13T00:00:00Z", "chargebackTime": "1986-06-17T00:00:00Z", "chargedTime": "1983-12-18T00:00:00Z", "createdTime": "1972-11-08T00:00:00Z", "currency": {"currencyCode": "2Mm46wWJ", "currencySymbol": "oxDsp0i2", "currencyType": "REAL", "decimals": 2, "namespace": "7VFIjxdh"}, "customParameters": {"wknPGt4j": {}, "SCKLAxtL": {}, "tiwZXxCB": {}}, "extOrderNo": "MNAiaOhG", "extTxId": "biqzqu0t", "extUserId": "RnNM54k4", "issuedAt": "1988-07-08T00:00:00Z", "metadata": {"Bkcch3ED": "bpNRafWJ", "lJv3v7gX": "0l5xBqx2", "ZCFwhWna": "dT3ZdF4s"}, "namespace": "xQxxFw8Y", "nonceStr": "f1MMeNqT", "paymentMethod": "VqdfNhTr", "paymentMethodFee": 6, "paymentOrderNo": "lnN9EMhR", "paymentProvider": "XSOLLA", "paymentProviderFee": 52, "paymentStationUrl": "IEFS61g0", "price": 86, "refundedTime": "1983-01-27T00:00:00Z", "salesTax": 46, "sandbox": false, "sku": "L9TrFnyM", "status": "INIT", "statusReason": "t2FQYfSO", "subscriptionId": "w0LQBn4I", "subtotalPrice": 76, "targetNamespace": "IGD2ll4k", "targetUserId": "JrzUuk47", "tax": 56, "totalPrice": 49, "totalTax": 50, "txEndTime": "1983-06-15T00:00:00Z", "type": "SpBtlJif", "userId": "2KufWcaC", "vat": 31}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ProcessUserSubscriptionNotification \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'NrrfyhIm' \
    --userId 'fP88Qkqu' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 291 'ProcessUserSubscriptionNotification' test.out

#- 292 AcquireUserTicket
# body param: body
echo '{"count": 19, "orderNo": "0iNQvi3V"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op AcquireUserTicket \
    --boothName 'XCoIQEAD' \
    --namespace $AB_NAMESPACE \
    --userId 'I723R8aI' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 292 'AcquireUserTicket' test.out

#- 293 QueryUserCurrencyWallets
$CLI_EXE \
    --sn platform \
    --op QueryUserCurrencyWallets \
    --namespace $AB_NAMESPACE \
    --userId 'vW8BsEcA' \
    > test.out 2>&1
eval_tap $? 293 'QueryUserCurrencyWallets' test.out

#- 294 DebitUserWalletByCurrencyCode
# body param: body
echo '{"allowOverdraft": true, "amount": 30, "balanceOrigin": "Other", "balanceSource": "OTHER", "metadata": {"uzNXx93G": {}, "m0eMnMUd": {}, "YLLKQQKj": {}}, "reason": "9olChfo1"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op DebitUserWalletByCurrencyCode \
    --currencyCode 'JMC7miHs' \
    --namespace $AB_NAMESPACE \
    --userId 'EeqxsoYL' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 294 'DebitUserWalletByCurrencyCode' test.out

#- 295 ListUserCurrencyTransactions
$CLI_EXE \
    --sn platform \
    --op ListUserCurrencyTransactions \
    --currencyCode '0iahVno2' \
    --namespace $AB_NAMESPACE \
    --userId 'XbXYPNfe' \
    --limit '42' \
    --offset '26' \
    > test.out 2>&1
eval_tap $? 295 'ListUserCurrencyTransactions' test.out

#- 296 CheckBalance
# body param: request
echo '{"amount": 37, "debitBalanceSource": "OTHER", "metadata": {"NfxEn7ei": {}, "5vur3MTy": {}, "5fmH6gLI": {}}, "reason": "XwHcyvJx", "walletPlatform": "GooglePlay"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CheckBalance \
    --currencyCode '4w0vKI44' \
    --namespace $AB_NAMESPACE \
    --userId 'Cc4I7cfV' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 296 'CheckBalance' test.out

#- 297 CheckWallet
eval_tap 0 297 'CheckWallet # SKIP deprecated' test.out

#- 298 CreditUserWallet
# body param: body
echo '{"amount": 75, "expireAt": "1990-06-20T00:00:00Z", "metadata": {"rxOOFqTY": {}, "WU6t63FE": {}, "JkeJfc6S": {}}, "origin": "Steam", "reason": "9iJs864k", "source": "ACHIEVEMENT"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreditUserWallet \
    --currencyCode 'VcZQZLgm' \
    --namespace $AB_NAMESPACE \
    --userId 'kuVQaaDq' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 298 'CreditUserWallet' test.out

#- 299 DebitByWalletPlatform
# body param: request
echo '{"amount": 43, "debitBalanceSource": "IAP_REVOCATION", "metadata": {"S0yT5ISz": {}, "7QpTf3pP": {}, "SyIyqEcA": {}}, "reason": "9QB7vsdz", "walletPlatform": "Oculus"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op DebitByWalletPlatform \
    --currencyCode 'sqNwz87H' \
    --namespace $AB_NAMESPACE \
    --userId 'PnDRIFU4' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 299 'DebitByWalletPlatform' test.out

#- 300 PayWithUserWallet
# body param: body
echo '{"amount": 87, "metadata": {"3bsO6sAn": {}, "D6hkscHK": {}, "Sd9ZRoCR": {}}, "walletPlatform": "IOS"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PayWithUserWallet \
    --currencyCode 'XiT3rFyR' \
    --namespace $AB_NAMESPACE \
    --userId 'OWE0jfRQ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 300 'PayWithUserWallet' test.out

#- 301 GetUserWallet
eval_tap 0 301 'GetUserWallet # SKIP deprecated' test.out

#- 302 DebitUserWallet
eval_tap 0 302 'DebitUserWallet # SKIP deprecated' test.out

#- 303 DisableUserWallet
eval_tap 0 303 'DisableUserWallet # SKIP deprecated' test.out

#- 304 EnableUserWallet
eval_tap 0 304 'EnableUserWallet # SKIP deprecated' test.out

#- 305 ListUserWalletTransactions
eval_tap 0 305 'ListUserWalletTransactions # SKIP deprecated' test.out

#- 306 ListViews
$CLI_EXE \
    --sn platform \
    --op ListViews \
    --namespace $AB_NAMESPACE \
    --storeId '6f538vwG' \
    > test.out 2>&1
eval_tap $? 306 'ListViews' test.out

#- 307 CreateView
# body param: body
echo '{"displayOrder": 53, "localizations": {"5N6WIFAE": {"description": "9JeQN0YQ", "localExt": {"Kd0LbNxb": {}, "ZUSBZ4cv": {}, "cT1lDN6i": {}}, "longDescription": "mfY1utsF", "title": "m9tVpfdL"}, "UQnN1lKp": {"description": "ekrZm3jM", "localExt": {"vb284kD1": {}, "T3mSTKBJ": {}, "mRQ2qqLx": {}}, "longDescription": "XxOrrGQF", "title": "8pJqhDCk"}, "z5cx59vM": {"description": "MFWyJRzJ", "localExt": {"pXFZMzVh": {}, "2fCcHh1i": {}, "ZUWpsxnA": {}}, "longDescription": "n1lIAUGr", "title": "A8wuqbeT"}}, "name": "rH6LcUNy"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateView \
    --namespace $AB_NAMESPACE \
    --storeId 'bc11tA9z' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 307 'CreateView' test.out

#- 308 GetView
$CLI_EXE \
    --sn platform \
    --op GetView \
    --namespace $AB_NAMESPACE \
    --viewId '8wMcGQ6G' \
    --storeId 'Pviyf0c8' \
    > test.out 2>&1
eval_tap $? 308 'GetView' test.out

#- 309 UpdateView
# body param: body
echo '{"displayOrder": 96, "localizations": {"4l1KxsPI": {"description": "TpThkxyp", "localExt": {"q8q2vfUf": {}, "oLdBsFTt": {}, "yYNvw8Dj": {}}, "longDescription": "fXLz9vJc", "title": "07GPNSyq"}, "RhPadNWU": {"description": "jD87nRKQ", "localExt": {"EzqR9H7Z": {}, "2hRJP48R": {}, "7xjWNrNQ": {}}, "longDescription": "33AuO2sU", "title": "RyPlvBdq"}, "Y0WTDJlR": {"description": "dKXJZo1A", "localExt": {"orvIepT7": {}, "VEXjpUdl": {}, "SY8VrjyI": {}}, "longDescription": "ayFOxxZd", "title": "7SJxIlBR"}}, "name": "4vAftrdv"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateView \
    --namespace $AB_NAMESPACE \
    --viewId 'BnJ0FDI4' \
    --storeId 'KVsoXqv4' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 309 'UpdateView' test.out

#- 310 DeleteView
$CLI_EXE \
    --sn platform \
    --op DeleteView \
    --namespace $AB_NAMESPACE \
    --viewId '70lzIAa8' \
    --storeId '1wh6HjYu' \
    > test.out 2>&1
eval_tap $? 310 'DeleteView' test.out

#- 311 QueryWallets
eval_tap 0 311 'QueryWallets # SKIP deprecated' test.out

#- 312 BulkCredit
# body param: body
echo '[{"creditRequest": {"amount": 87, "expireAt": "1991-11-29T00:00:00Z", "metadata": {"f2yPM4ky": {}, "s5rQSjDL": {}, "Y9wzVeXc": {}}, "origin": "Epic", "reason": "wqHugVKL", "source": "IAP"}, "currencyCode": "K2CZdHjK", "userIds": ["Q01m913C", "jerreEXD", "4mOhqOz0"]}, {"creditRequest": {"amount": 43, "expireAt": "1983-06-03T00:00:00Z", "metadata": {"1Vrkkv4y": {}, "21OXEtv0": {}, "jLnVwJRo": {}}, "origin": "IOS", "reason": "8Z1jomjw", "source": "IAP"}, "currencyCode": "koTNCknx", "userIds": ["FzNrq173", "i4wDctEk", "UXnwd95n"]}, {"creditRequest": {"amount": 32, "expireAt": "1996-10-08T00:00:00Z", "metadata": {"o5jqrxsr": {}, "SRJ8cBUb": {}, "0T1hG7ua": {}}, "origin": "System", "reason": "sym0BuW8", "source": "PURCHASE"}, "currencyCode": "WQRwIs8Z", "userIds": ["ccdlZDYw", "QKnTJf1i", "AKRo8Sc4"]}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op BulkCredit \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 312 'BulkCredit' test.out

#- 313 BulkDebit
# body param: body
echo '[{"currencyCode": "vlSwGHZY", "request": {"allowOverdraft": false, "amount": 36, "balanceOrigin": "Oculus", "balanceSource": "DLC_REVOCATION", "metadata": {"MALaEWvo": {}, "hu5k9e3w": {}, "2CRNGtCN": {}}, "reason": "6ToV7K1X"}, "userIds": ["egVHow9K", "hT5g6j2R", "FYHDUj0b"]}, {"currencyCode": "llXMdcOL", "request": {"allowOverdraft": false, "amount": 22, "balanceOrigin": "Nintendo", "balanceSource": "PAYMENT", "metadata": {"6KrFC9qZ": {}, "I6EurDCR": {}, "chgaRHed": {}}, "reason": "jHx73gsB"}, "userIds": ["3j4qztMi", "olRkkcdN", "GKiUkClA"]}, {"currencyCode": "BjXdgtSK", "request": {"allowOverdraft": true, "amount": 98, "balanceOrigin": "Steam", "balanceSource": "ORDER_REVOCATION", "metadata": {"Pgq5p7wr": {}, "hQLqXisf": {}, "vuUKQKmE": {}}, "reason": "B33qp5mY"}, "userIds": ["bGbmGSxJ", "28yJ4i0Z", "tvw8xLNt"]}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op BulkDebit \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 313 'BulkDebit' test.out

#- 314 GetWallet
eval_tap 0 314 'GetWallet # SKIP deprecated' test.out

#- 315 SyncOrders
$CLI_EXE \
    --sn platform \
    --op SyncOrders \
    --nextEvaluatedKey 'm7zcsNaq' \
    --end 'sQPAj96g' \
    --start 'YSXLGMNC' \
    > test.out 2>&1
eval_tap $? 315 'SyncOrders' test.out

#- 316 TestAdyenConfig
# body param: body
echo '{"allowedPaymentMethods": ["NEkzfnpm", "xVR2dc93", "7C8eszNM"], "apiKey": "4zhTqQMw", "authoriseAsCapture": true, "blockedPaymentMethods": ["9oKsNRj1", "RegpmBnK", "ToP8DhVH"], "clientKey": "UwQ9NDbd", "dropInSettings": "WnZnhy4w", "liveEndpointUrlPrefix": "3dK75Mif", "merchantAccount": "BKYhnI8Y", "notificationHmacKey": "2omCKP3M", "notificationPassword": "6raYZ8Pu", "notificationUsername": "XrnY8Kp9", "returnUrl": "qqsv7WaB", "settings": "RtEaWg7j"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestAdyenConfig \
    --sandbox 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 316 'TestAdyenConfig' test.out

#- 317 TestAliPayConfig
# body param: body
echo '{"appId": "hG7rsqCG", "privateKey": "e6ZcSRTr", "publicKey": "BCRoHkgv", "returnUrl": "thGDRFjg"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestAliPayConfig \
    --sandbox 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 317 'TestAliPayConfig' test.out

#- 318 TestCheckoutConfig
# body param: body
echo '{"publicKey": "GfjcaAc1", "secretKey": "uEyDllPO"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestCheckoutConfig \
    --sandbox 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 318 'TestCheckoutConfig' test.out

#- 319 DebugMatchedPaymentMerchantConfig
$CLI_EXE \
    --sn platform \
    --op DebugMatchedPaymentMerchantConfig \
    --namespace_ 'c72o5uhe' \
    --region 'SJdFsbYy' \
    > test.out 2>&1
eval_tap $? 319 'DebugMatchedPaymentMerchantConfig' test.out

#- 320 TestPayPalConfig
# body param: body
echo '{"clientID": "BQTevQjI", "clientSecret": "4oKbHFZe", "returnUrl": "dKx7D2s0", "webHookId": "WHFjvhch"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestPayPalConfig \
    --sandbox 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 320 'TestPayPalConfig' test.out

#- 321 TestStripeConfig
# body param: body
echo '{"allowedPaymentMethodTypes": ["uVKdt4ZF", "hIyx04zp", "2M6pj44C"], "publishableKey": "Jt2Mugr2", "secretKey": "XhhJPDC6", "webhookSecret": "Oe6VUWVl"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestStripeConfig \
    --sandbox 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 321 'TestStripeConfig' test.out

#- 322 TestWxPayConfig
# body param: body
echo '{"appId": "b71XvD88", "key": "5tengX3d", "mchid": "uCPEU5Zb", "returnUrl": "xXpcMW5d"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestWxPayConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 322 'TestWxPayConfig' test.out

#- 323 TestXsollaConfig
# body param: body
echo '{"apiKey": "Ie5Ayryn", "flowCompletionUrl": "xHTnb4J1", "merchantId": 85, "projectId": 49, "projectSecretKey": "PP4KH60Q"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestXsollaConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 323 'TestXsollaConfig' test.out

#- 324 GetPaymentMerchantConfig
$CLI_EXE \
    --sn platform \
    --op GetPaymentMerchantConfig \
    --id 'FBAL4tQI' \
    > test.out 2>&1
eval_tap $? 324 'GetPaymentMerchantConfig' test.out

#- 325 UpdateAdyenConfig
# body param: body
echo '{"allowedPaymentMethods": ["egERnJ1n", "INYejXC7", "ds3C6j4O"], "apiKey": "t9vQ6QIe", "authoriseAsCapture": false, "blockedPaymentMethods": ["YqvE6WxT", "l902m3yD", "Q2xdlQTJ"], "clientKey": "RPiBBYtV", "dropInSettings": "Gsn6klWH", "liveEndpointUrlPrefix": "hSpKG2gQ", "merchantAccount": "oYnWdFMN", "notificationHmacKey": "0y8d1s1H", "notificationPassword": "Ca05GdHx", "notificationUsername": "ae4xjk4x", "returnUrl": "IGM1gfZh", "settings": "NsBOxhMA"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateAdyenConfig \
    --id 'H0cTYAhv' \
    --sandbox 'false' \
    --validate 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 325 'UpdateAdyenConfig' test.out

#- 326 TestAdyenConfigById
$CLI_EXE \
    --sn platform \
    --op TestAdyenConfigById \
    --id 'OoZ10jQK' \
    --sandbox 'true' \
    > test.out 2>&1
eval_tap $? 326 'TestAdyenConfigById' test.out

#- 327 UpdateAliPayConfig
# body param: body
echo '{"appId": "98qWjLp9", "privateKey": "Zd9Tdt85", "publicKey": "uMP6Qrx2", "returnUrl": "s6SnJ7qi"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateAliPayConfig \
    --id 'uzVGiQRJ' \
    --sandbox 'false' \
    --validate 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 327 'UpdateAliPayConfig' test.out

#- 328 TestAliPayConfigById
$CLI_EXE \
    --sn platform \
    --op TestAliPayConfigById \
    --id '7cXogo91' \
    --sandbox 'false' \
    > test.out 2>&1
eval_tap $? 328 'TestAliPayConfigById' test.out

#- 329 UpdateCheckoutConfig
# body param: body
echo '{"publicKey": "QKHMRbCl", "secretKey": "CbLs33AY"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCheckoutConfig \
    --id 'OuA2GbDj' \
    --sandbox 'false' \
    --validate 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 329 'UpdateCheckoutConfig' test.out

#- 330 TestCheckoutConfigById
$CLI_EXE \
    --sn platform \
    --op TestCheckoutConfigById \
    --id '2ORBMKdr' \
    --sandbox 'false' \
    > test.out 2>&1
eval_tap $? 330 'TestCheckoutConfigById' test.out

#- 331 UpdatePayPalConfig
# body param: body
echo '{"clientID": "ELcVZZM2", "clientSecret": "YXzRqSew", "returnUrl": "PB4DUCJF", "webHookId": "YUz9a4SN"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePayPalConfig \
    --id 'vBqwtmH6' \
    --sandbox 'true' \
    --validate 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 331 'UpdatePayPalConfig' test.out

#- 332 TestPayPalConfigById
$CLI_EXE \
    --sn platform \
    --op TestPayPalConfigById \
    --id 'DHlDjb6p' \
    --sandbox 'true' \
    > test.out 2>&1
eval_tap $? 332 'TestPayPalConfigById' test.out

#- 333 UpdateStripeConfig
# body param: body
echo '{"allowedPaymentMethodTypes": ["nukk0n7t", "uVgBaln9", "szgBvInn"], "publishableKey": "UORAs7xd", "secretKey": "4QmnuUZY", "webhookSecret": "lKY3FyB1"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateStripeConfig \
    --id '71WuruYK' \
    --sandbox 'true' \
    --validate 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 333 'UpdateStripeConfig' test.out

#- 334 TestStripeConfigById
$CLI_EXE \
    --sn platform \
    --op TestStripeConfigById \
    --id 'urOVSTlS' \
    --sandbox 'true' \
    > test.out 2>&1
eval_tap $? 334 'TestStripeConfigById' test.out

#- 335 UpdateWxPayConfig
# body param: body
echo '{"appId": "3SbX4kjE", "key": "gySrTLhs", "mchid": "JdLAgF65", "returnUrl": "vaLbnYWB"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateWxPayConfig \
    --id 'jlbJEDTH' \
    --validate 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 335 'UpdateWxPayConfig' test.out

#- 336 UpdateWxPayConfigCert
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UpdateWxPayConfigCert \
    --id 'wF6K1Gsw' \
    --upload file $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 336 'UpdateWxPayConfigCert' test.out

#- 337 TestWxPayConfigById
$CLI_EXE \
    --sn platform \
    --op TestWxPayConfigById \
    --id 'fC9BHlmw' \
    > test.out 2>&1
eval_tap $? 337 'TestWxPayConfigById' test.out

#- 338 UpdateXsollaConfig
# body param: body
echo '{"apiKey": "SWruW3Iu", "flowCompletionUrl": "iErlQ5Hs", "merchantId": 90, "projectId": 49, "projectSecretKey": "i4pGtTCD"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXsollaConfig \
    --id 'sjjpp5eq' \
    --validate 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 338 'UpdateXsollaConfig' test.out

#- 339 TestXsollaConfigById
$CLI_EXE \
    --sn platform \
    --op TestXsollaConfigById \
    --id 'kg1jrZer' \
    > test.out 2>&1
eval_tap $? 339 'TestXsollaConfigById' test.out

#- 340 UpdateXsollaUIConfig
# body param: body
echo '{"device": "MOBILE", "showCloseButton": true, "size": "MEDIUM", "theme": "DEFAULT"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXsollaUIConfig \
    --id 'etBlfqn3' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 340 'UpdateXsollaUIConfig' test.out

#- 341 QueryPaymentProviderConfig
$CLI_EXE \
    --sn platform \
    --op QueryPaymentProviderConfig \
    --limit '76' \
    --namespace_ 'NHPMzrI6' \
    --offset '27' \
    --region '2FaLhsi1' \
    > test.out 2>&1
eval_tap $? 341 'QueryPaymentProviderConfig' test.out

#- 342 CreatePaymentProviderConfig
# body param: body
echo '{"aggregate": "ADYEN", "namespace": "yzg7Rd1A", "region": "22q9arM8", "sandboxTaxJarApiToken": "5ifDewqi", "specials": ["PAYPAL", "XSOLLA", "WXPAY"], "taxJarApiToken": "najlmJDB", "taxJarEnabled": true, "useGlobalTaxJarApiToken": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreatePaymentProviderConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 342 'CreatePaymentProviderConfig' test.out

#- 343 GetAggregatePaymentProviders
$CLI_EXE \
    --sn platform \
    --op GetAggregatePaymentProviders \
    > test.out 2>&1
eval_tap $? 343 'GetAggregatePaymentProviders' test.out

#- 344 DebugMatchedPaymentProviderConfig
$CLI_EXE \
    --sn platform \
    --op DebugMatchedPaymentProviderConfig \
    --namespace_ '9MVi3GBL' \
    --region '8JOiUlQt' \
    > test.out 2>&1
eval_tap $? 344 'DebugMatchedPaymentProviderConfig' test.out

#- 345 GetSpecialPaymentProviders
$CLI_EXE \
    --sn platform \
    --op GetSpecialPaymentProviders \
    > test.out 2>&1
eval_tap $? 345 'GetSpecialPaymentProviders' test.out

#- 346 UpdatePaymentProviderConfig
# body param: body
echo '{"aggregate": "ADYEN", "namespace": "rJT4aOqO", "region": "jxcxnOaS", "sandboxTaxJarApiToken": "OtISNmIJ", "specials": ["WXPAY", "XSOLLA", "WXPAY"], "taxJarApiToken": "1udVYeB4", "taxJarEnabled": true, "useGlobalTaxJarApiToken": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePaymentProviderConfig \
    --id '69i6zbRM' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 346 'UpdatePaymentProviderConfig' test.out

#- 347 DeletePaymentProviderConfig
$CLI_EXE \
    --sn platform \
    --op DeletePaymentProviderConfig \
    --id 'u5zxUUhI' \
    > test.out 2>&1
eval_tap $? 347 'DeletePaymentProviderConfig' test.out

#- 348 GetPaymentTaxConfig
$CLI_EXE \
    --sn platform \
    --op GetPaymentTaxConfig \
    > test.out 2>&1
eval_tap $? 348 'GetPaymentTaxConfig' test.out

#- 349 UpdatePaymentTaxConfig
# body param: body
echo '{"sandboxTaxJarApiToken": "CPalXTx0", "taxJarApiToken": "4AHhDzKI", "taxJarEnabled": true, "taxJarProductCodesMapping": {"Mj5kfhyS": "yKEm183H", "kEhpmr1u": "zBv5bJHk", "8VOqnwPj": "rS8lUhOj"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePaymentTaxConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 349 'UpdatePaymentTaxConfig' test.out

#- 350 SyncPaymentOrders
$CLI_EXE \
    --sn platform \
    --op SyncPaymentOrders \
    --nextEvaluatedKey 'Lv83ZlDV' \
    --end 'Y4utQwMD' \
    --start 'kAeVYqke' \
    > test.out 2>&1
eval_tap $? 350 'SyncPaymentOrders' test.out

#- 351 PublicGetRootCategories
$CLI_EXE \
    --sn platform \
    --op PublicGetRootCategories \
    --namespace $AB_NAMESPACE \
    --language '45GlGbiP' \
    --storeId 'TgkQnnYf' \
    > test.out 2>&1
eval_tap $? 351 'PublicGetRootCategories' test.out

#- 352 DownloadCategories
$CLI_EXE \
    --sn platform \
    --op DownloadCategories \
    --namespace $AB_NAMESPACE \
    --language 'zDdjMaKe' \
    --storeId 'J6Qk0CnW' \
    > test.out 2>&1
eval_tap $? 352 'DownloadCategories' test.out

#- 353 PublicGetCategory
$CLI_EXE \
    --sn platform \
    --op PublicGetCategory \
    --categoryPath 'gS6nn2hI' \
    --namespace $AB_NAMESPACE \
    --language 'mLjLw71x' \
    --storeId 'p1klZMak' \
    > test.out 2>&1
eval_tap $? 353 'PublicGetCategory' test.out

#- 354 PublicGetChildCategories
$CLI_EXE \
    --sn platform \
    --op PublicGetChildCategories \
    --categoryPath 'jhHWGR15' \
    --namespace $AB_NAMESPACE \
    --language 'Rm2Y9HjS' \
    --storeId 'LbzDqmbQ' \
    > test.out 2>&1
eval_tap $? 354 'PublicGetChildCategories' test.out

#- 355 PublicGetDescendantCategories
$CLI_EXE \
    --sn platform \
    --op PublicGetDescendantCategories \
    --categoryPath 'qz0H8A4P' \
    --namespace $AB_NAMESPACE \
    --language 'rgdHi9CT' \
    --storeId 'ENOEz1qB' \
    > test.out 2>&1
eval_tap $? 355 'PublicGetDescendantCategories' test.out

#- 356 PublicListCurrencies
$CLI_EXE \
    --sn platform \
    --op PublicListCurrencies \
    --namespace $AB_NAMESPACE \
    --currencyType 'REAL' \
    > test.out 2>&1
eval_tap $? 356 'PublicListCurrencies' test.out

#- 357 GeDLCDurableRewardShortMap
$CLI_EXE \
    --sn platform \
    --op GeDLCDurableRewardShortMap \
    --namespace $AB_NAMESPACE \
    --dlcType 'EPICGAMES' \
    > test.out 2>&1
eval_tap $? 357 'GeDLCDurableRewardShortMap' test.out

#- 358 GetIAPItemMapping
$CLI_EXE \
    --sn platform \
    --op GetIAPItemMapping \
    --namespace $AB_NAMESPACE \
    --platform 'APPLE' \
    > test.out 2>&1
eval_tap $? 358 'GetIAPItemMapping' test.out

#- 359 PublicGetItemByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetItemByAppId \
    --namespace $AB_NAMESPACE \
    --language 'GxQXlhSB' \
    --region '4neSpnqG' \
    --storeId 'bvLPqVjT' \
    --appId 'ztdI2kZK' \
    > test.out 2>&1
eval_tap $? 359 'PublicGetItemByAppId' test.out

#- 360 PublicQueryItems
$CLI_EXE \
    --sn platform \
    --op PublicQueryItems \
    --namespace $AB_NAMESPACE \
    --appType 'DLC' \
    --autoCalcEstimatedPrice 'true' \
    --baseAppId '9HihXBP4' \
    --categoryPath 'GdN5MyyJ' \
    --features 'PAJxPU1C' \
    --includeSubCategoryItem 'false' \
    --itemType 'SUBSCRIPTION' \
    --language 'CdCHS5RU' \
    --limit '37' \
    --offset '96' \
    --region 'Ywr8u1w9' \
    --sortBy '["displayOrder:desc", "name:desc", "displayOrder"]' \
    --storeId '1QrCdw1T' \
    --tags 'hgVVfU2E' \
    > test.out 2>&1
eval_tap $? 360 'PublicQueryItems' test.out

#- 361 PublicGetItemBySku
$CLI_EXE \
    --sn platform \
    --op PublicGetItemBySku \
    --namespace $AB_NAMESPACE \
    --autoCalcEstimatedPrice 'false' \
    --language 'Y55heh9F' \
    --region 'MKyo8LJx' \
    --storeId 'xwkzgpiF' \
    --sku 'FygTDoiz' \
    > test.out 2>&1
eval_tap $? 361 'PublicGetItemBySku' test.out

#- 362 PublicGetEstimatedPrice
$CLI_EXE \
    --sn platform \
    --op PublicGetEstimatedPrice \
    --namespace $AB_NAMESPACE \
    --region 'F1eNnDJs' \
    --storeId 'D8kbglao' \
    --itemIds '9PejAP4a' \
    > test.out 2>&1
eval_tap $? 362 'PublicGetEstimatedPrice' test.out

#- 363 PublicBulkGetItems
$CLI_EXE \
    --sn platform \
    --op PublicBulkGetItems \
    --namespace $AB_NAMESPACE \
    --autoCalcEstimatedPrice 'false' \
    --language 'uJ4L51Cl' \
    --region 'MtzuDHZy' \
    --storeId 'uuuLxOy1' \
    --itemIds 'mjaB70Iz' \
    > test.out 2>&1
eval_tap $? 363 'PublicBulkGetItems' test.out

#- 364 PublicValidateItemPurchaseCondition
# body param: body
echo '{"itemIds": ["f05fQwVF", "ZhiC8uiH", "ginQZ66n"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicValidateItemPurchaseCondition \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 364 'PublicValidateItemPurchaseCondition' test.out

#- 365 PublicSearchItems
$CLI_EXE \
    --sn platform \
    --op PublicSearchItems \
    --namespace $AB_NAMESPACE \
    --autoCalcEstimatedPrice 'false' \
    --itemType 'LOOTBOX' \
    --limit '14' \
    --offset '14' \
    --region 'eqKhcdht' \
    --storeId 'dgG8u70l' \
    --keyword 'uqGBhKAL' \
    --language 'iSluAwwr' \
    > test.out 2>&1
eval_tap $? 365 'PublicSearchItems' test.out

#- 366 PublicGetApp
$CLI_EXE \
    --sn platform \
    --op PublicGetApp \
    --itemId 'WorRjzUC' \
    --namespace $AB_NAMESPACE \
    --language '2NdpZbdC' \
    --region 'nZZb17g6' \
    --storeId 'gAowkx6b' \
    > test.out 2>&1
eval_tap $? 366 'PublicGetApp' test.out

#- 367 PublicGetItemDynamicData
$CLI_EXE \
    --sn platform \
    --op PublicGetItemDynamicData \
    --itemId '59BJHDfU' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 367 'PublicGetItemDynamicData' test.out

#- 368 PublicGetItem
$CLI_EXE \
    --sn platform \
    --op PublicGetItem \
    --itemId 'nn3Ag9QK' \
    --namespace $AB_NAMESPACE \
    --autoCalcEstimatedPrice 'true' \
    --language 'iKVmISvW' \
    --populateBundle 'true' \
    --region 'XbodmzyD' \
    --storeId 'I5zjjSKB' \
    > test.out 2>&1
eval_tap $? 368 'PublicGetItem' test.out

#- 369 GetPaymentCustomization
eval_tap 0 369 'GetPaymentCustomization # SKIP deprecated' test.out

#- 370 PublicGetPaymentUrl
# body param: body
echo '{"paymentOrderNo": "0AUYh8uP", "paymentProvider": "WALLET", "returnUrl": "xSl0ixH2", "ui": "tkgWEfFk", "zipCode": "w9rNoEZ8"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicGetPaymentUrl \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 370 'PublicGetPaymentUrl' test.out

#- 371 PublicGetPaymentMethods
$CLI_EXE \
    --sn platform \
    --op PublicGetPaymentMethods \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'IuaassNs' \
    > test.out 2>&1
eval_tap $? 371 'PublicGetPaymentMethods' test.out

#- 372 PublicGetUnpaidPaymentOrder
$CLI_EXE \
    --sn platform \
    --op PublicGetUnpaidPaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'PmJEhOXA' \
    > test.out 2>&1
eval_tap $? 372 'PublicGetUnpaidPaymentOrder' test.out

#- 373 Pay
# body param: body
echo '{"token": "ldCMwKyO"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op Pay \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'c1dXIgeP' \
    --paymentProvider 'WALLET' \
    --zipCode 'EZrOG7sT' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 373 'Pay' test.out

#- 374 PublicCheckPaymentOrderPaidStatus
$CLI_EXE \
    --sn platform \
    --op PublicCheckPaymentOrderPaidStatus \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'BQgYnMcs' \
    > test.out 2>&1
eval_tap $? 374 'PublicCheckPaymentOrderPaidStatus' test.out

#- 375 GetPaymentPublicConfig
$CLI_EXE \
    --sn platform \
    --op GetPaymentPublicConfig \
    --namespace $AB_NAMESPACE \
    --sandbox 'false' \
    --paymentProvider 'WALLET' \
    --region 'MxO1O1MI' \
    > test.out 2>&1
eval_tap $? 375 'GetPaymentPublicConfig' test.out

#- 376 PublicGetQRCode
$CLI_EXE \
    --sn platform \
    --op PublicGetQRCode \
    --namespace $AB_NAMESPACE \
    --code 'aWYgk3WH' \
    > test.out 2>&1
eval_tap $? 376 'PublicGetQRCode' test.out

#- 377 PublicNormalizePaymentReturnUrl
$CLI_EXE \
    --sn platform \
    --op PublicNormalizePaymentReturnUrl \
    --namespace $AB_NAMESPACE \
    --payerID '3dlncfC4' \
    --foreinginvoice 'ZyRP9m3W' \
    --invoiceId 'MDeGiPIK' \
    --payload 'BTRlpppB' \
    --redirectResult '2UUTc9ax' \
    --resultCode 'PMHEndCv' \
    --sessionId 'yejZyodu' \
    --status 'modm1nec' \
    --token 'cSNxxkwp' \
    --type 'PyE06a4Q' \
    --userId 'isC4qxiV' \
    --orderNo 'bfJCzmXn' \
    --paymentOrderNo 'pZZKVWun' \
    --paymentProvider 'WALLET' \
    --returnUrl 'LSRpMrNS' \
    > test.out 2>&1
eval_tap $? 377 'PublicNormalizePaymentReturnUrl' test.out

#- 378 GetPaymentTaxValue
$CLI_EXE \
    --sn platform \
    --op GetPaymentTaxValue \
    --namespace $AB_NAMESPACE \
    --zipCode 'UQArypfl' \
    --paymentOrderNo '1PKN0uo3' \
    --paymentProvider 'ALIPAY' \
    > test.out 2>&1
eval_tap $? 378 'GetPaymentTaxValue' test.out

#- 379 GetRewardByCode
$CLI_EXE \
    --sn platform \
    --op GetRewardByCode \
    --namespace $AB_NAMESPACE \
    --rewardCode 'fyk9yAnt' \
    > test.out 2>&1
eval_tap $? 379 'GetRewardByCode' test.out

#- 380 QueryRewards1
$CLI_EXE \
    --sn platform \
    --op QueryRewards1 \
    --namespace $AB_NAMESPACE \
    --eventTopic 'wIqRx95B' \
    --limit '56' \
    --offset '99' \
    --sortBy '["rewardCode:desc", "namespace:desc", "rewardCode"]' \
    > test.out 2>&1
eval_tap $? 380 'QueryRewards1' test.out

#- 381 GetReward1
$CLI_EXE \
    --sn platform \
    --op GetReward1 \
    --namespace $AB_NAMESPACE \
    --rewardId 'OUkVtwpi' \
    > test.out 2>&1
eval_tap $? 381 'GetReward1' test.out

#- 382 PublicListStores
$CLI_EXE \
    --sn platform \
    --op PublicListStores \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 382 'PublicListStores' test.out

#- 383 PublicExistsAnyMyActiveEntitlement
$CLI_EXE \
    --sn platform \
    --op PublicExistsAnyMyActiveEntitlement \
    --namespace $AB_NAMESPACE \
    --appIds '["vmhPnILF", "pMdCE8Ku", "zDpm3SKK"]' \
    --itemIds '["ziYJGVqb", "CHfGjBuw", "KaxQrF2c"]' \
    --skus '["nPcByCZN", "6s7Eibp1", "ODz86IHT"]' \
    > test.out 2>&1
eval_tap $? 383 'PublicExistsAnyMyActiveEntitlement' test.out

#- 384 PublicGetMyAppEntitlementOwnershipByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetMyAppEntitlementOwnershipByAppId \
    --namespace $AB_NAMESPACE \
    --appId 'cjDnGqnJ' \
    > test.out 2>&1
eval_tap $? 384 'PublicGetMyAppEntitlementOwnershipByAppId' test.out

#- 385 PublicGetMyEntitlementOwnershipByItemId
$CLI_EXE \
    --sn platform \
    --op PublicGetMyEntitlementOwnershipByItemId \
    --namespace $AB_NAMESPACE \
    --entitlementClazz 'APP' \
    --itemId 'nCJg6Wlw' \
    > test.out 2>&1
eval_tap $? 385 'PublicGetMyEntitlementOwnershipByItemId' test.out

#- 386 PublicGetMyEntitlementOwnershipBySku
$CLI_EXE \
    --sn platform \
    --op PublicGetMyEntitlementOwnershipBySku \
    --namespace $AB_NAMESPACE \
    --entitlementClazz 'ENTITLEMENT' \
    --sku 'IdGCUrDy' \
    > test.out 2>&1
eval_tap $? 386 'PublicGetMyEntitlementOwnershipBySku' test.out

#- 387 PublicGetEntitlementOwnershipToken
$CLI_EXE \
    --sn platform \
    --op PublicGetEntitlementOwnershipToken \
    --namespace $AB_NAMESPACE \
    --appIds '["lE4Akqqp", "JiPzD77k", "3OpslaWl"]' \
    --itemIds '["klzXSepc", "M9CxneC8", "a6FFXVL4"]' \
    --skus '["i2hIWxmj", "scZFlUin", "tJRYo0oA"]' \
    > test.out 2>&1
eval_tap $? 387 'PublicGetEntitlementOwnershipToken' test.out

#- 388 SyncTwitchDropsEntitlement
# body param: body
echo '{"gameId": "Lwg23fIq", "language": "fGxc", "region": "5gI2trXx"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncTwitchDropsEntitlement \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 388 'SyncTwitchDropsEntitlement' test.out

#- 389 PublicGetMyWallet
$CLI_EXE \
    --sn platform \
    --op PublicGetMyWallet \
    --currencyCode 'bXKjabtf' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 389 'PublicGetMyWallet' test.out

#- 390 SyncEpicGameDLC
# body param: body
echo '{"epicGamesJwtToken": "rzR5dgJt"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncEpicGameDLC \
    --namespace $AB_NAMESPACE \
    --userId 'j1WoCCFB' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 390 'SyncEpicGameDLC' test.out

#- 391 SyncOculusDLC
$CLI_EXE \
    --sn platform \
    --op SyncOculusDLC \
    --namespace $AB_NAMESPACE \
    --userId 'MVSJAHOw' \
    > test.out 2>&1
eval_tap $? 391 'SyncOculusDLC' test.out

#- 392 PublicSyncPsnDlcInventory
# body param: body
echo '{"serviceLabel": 1}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicSyncPsnDlcInventory \
    --namespace $AB_NAMESPACE \
    --userId 'JFevrgCV' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 392 'PublicSyncPsnDlcInventory' test.out

#- 393 PublicSyncPsnDlcInventoryWithMultipleServiceLabels
# body param: body
echo '{"serviceLabels": [50, 14, 55]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicSyncPsnDlcInventoryWithMultipleServiceLabels \
    --namespace $AB_NAMESPACE \
    --userId 'P45ylchS' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 393 'PublicSyncPsnDlcInventoryWithMultipleServiceLabels' test.out

#- 394 SyncSteamDLC
# body param: body
echo '{"appId": "jMTpEznk", "steamId": "xmVoz0Bn"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncSteamDLC \
    --namespace $AB_NAMESPACE \
    --userId 'vWHv8fVy' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 394 'SyncSteamDLC' test.out

#- 395 SyncXboxDLC
# body param: body
echo '{"xstsToken": "obj7VVLg"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncXboxDLC \
    --namespace $AB_NAMESPACE \
    --userId '8N7dfVFP' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 395 'SyncXboxDLC' test.out

#- 396 PublicQueryUserEntitlements
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserEntitlements \
    --namespace $AB_NAMESPACE \
    --userId 'fsoXxYmt' \
    --appType 'GAME' \
    --entitlementClazz 'SUBSCRIPTION' \
    --entitlementName 'z9WLsYla' \
    --features '["AAkAcHKG", "n8CFRlOh", "oG6OH2pT"]' \
    --itemId '["rfYJzwOi", "Kc3zYkvS", "mxmnWZZF"]' \
    --limit '96' \
    --offset '3' \
    > test.out 2>&1
eval_tap $? 396 'PublicQueryUserEntitlements' test.out

#- 397 PublicGetUserAppEntitlementByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetUserAppEntitlementByAppId \
    --namespace $AB_NAMESPACE \
    --userId 'hk2ky5wX' \
    --appId 'EgRUMP3Z' \
    > test.out 2>&1
eval_tap $? 397 'PublicGetUserAppEntitlementByAppId' test.out

#- 398 PublicQueryUserEntitlementsByAppType
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserEntitlementsByAppType \
    --namespace $AB_NAMESPACE \
    --userId 'YtLQonUP' \
    --limit '30' \
    --offset '91' \
    --appType 'GAME' \
    > test.out 2>&1
eval_tap $? 398 'PublicQueryUserEntitlementsByAppType' test.out

#- 399 PublicGetUserEntitlementsByIds
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementsByIds \
    --namespace $AB_NAMESPACE \
    --userId '3xUjC2CX' \
    --availablePlatformOnly 'true' \
    --ids '["2hmmms0F", "BWjoaPQT", "0zmmorpm"]' \
    > test.out 2>&1
eval_tap $? 399 'PublicGetUserEntitlementsByIds' test.out

#- 400 PublicGetUserEntitlementByItemId
eval_tap 0 400 'PublicGetUserEntitlementByItemId # SKIP deprecated' test.out

#- 401 PublicGetUserEntitlementBySku
eval_tap 0 401 'PublicGetUserEntitlementBySku # SKIP deprecated' test.out

#- 402 PublicUserEntitlementHistory
$CLI_EXE \
    --sn platform \
    --op PublicUserEntitlementHistory \
    --namespace $AB_NAMESPACE \
    --userId 'k6IQ7iC6' \
    --endDate 'DvBcCZhB' \
    --entitlementClazz 'CODE' \
    --limit '38' \
    --offset '44' \
    --startDate 'xJuaJuDv' \
    > test.out 2>&1
eval_tap $? 402 'PublicUserEntitlementHistory' test.out

#- 403 PublicExistsAnyUserActiveEntitlement
$CLI_EXE \
    --sn platform \
    --op PublicExistsAnyUserActiveEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'Ay1jIxD0' \
    --appIds '["LIgZ8T6b", "HcegNkoM", "OhfC4VLu"]' \
    --itemIds '["f3t2WycV", "bQ09Ghud", "7vz1arHq"]' \
    --skus '["MH3Jy3SP", "lRSJcUEw", "b3iS7W8B"]' \
    > test.out 2>&1
eval_tap $? 403 'PublicExistsAnyUserActiveEntitlement' test.out

#- 404 PublicGetUserAppEntitlementOwnershipByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetUserAppEntitlementOwnershipByAppId \
    --namespace $AB_NAMESPACE \
    --userId 'qpUFaWZ2' \
    --appId 'LZrvIgzE' \
    > test.out 2>&1
eval_tap $? 404 'PublicGetUserAppEntitlementOwnershipByAppId' test.out

#- 405 PublicGetUserEntitlementOwnershipByItemId
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementOwnershipByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'cYGLe5Yd' \
    --entitlementClazz 'MEDIA' \
    --itemId 'AnloZj4S' \
    > test.out 2>&1
eval_tap $? 405 'PublicGetUserEntitlementOwnershipByItemId' test.out

#- 406 PublicGetUserEntitlementOwnershipByItemIds
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementOwnershipByItemIds \
    --namespace $AB_NAMESPACE \
    --userId 'OTsVUxgg' \
    --ids '["oyurCrTk", "8Xx4JLVw", "wIjayu7w"]' \
    > test.out 2>&1
eval_tap $? 406 'PublicGetUserEntitlementOwnershipByItemIds' test.out

#- 407 PublicGetUserEntitlementOwnershipBySku
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementOwnershipBySku \
    --namespace $AB_NAMESPACE \
    --userId 'hmPfpWkd' \
    --entitlementClazz 'LOOTBOX' \
    --sku 'aeqXA4Eh' \
    > test.out 2>&1
eval_tap $? 407 'PublicGetUserEntitlementOwnershipBySku' test.out

#- 408 PublicGetUserEntitlement
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlement \
    --entitlementId 'O9WqrsvT' \
    --namespace $AB_NAMESPACE \
    --userId 'pmu9PE3P' \
    > test.out 2>&1
eval_tap $? 408 'PublicGetUserEntitlement' test.out

#- 409 PublicConsumeUserEntitlement
# body param: body
echo '{"options": ["ugaPKLCJ", "tQEma591", "j5d4boKL"], "requestId": "NPRTzGG7", "useCount": 39}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicConsumeUserEntitlement \
    --entitlementId '3Z5mZliB' \
    --namespace $AB_NAMESPACE \
    --userId 'b8oeD4OX' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 409 'PublicConsumeUserEntitlement' test.out

#- 410 PublicSellUserEntitlement
# body param: body
echo '{"requestId": "wQshT7Ms", "useCount": 98}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicSellUserEntitlement \
    --entitlementId 'RBTIyVHr' \
    --namespace $AB_NAMESPACE \
    --userId 'QGIi8cKd' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 410 'PublicSellUserEntitlement' test.out

#- 411 PublicSplitUserEntitlement
# body param: body
echo '{"useCount": 85}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicSplitUserEntitlement \
    --entitlementId 'V7tUZmbp' \
    --namespace $AB_NAMESPACE \
    --userId 'cZr2ayAU' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 411 'PublicSplitUserEntitlement' test.out

#- 412 PublicTransferUserEntitlement
# body param: body
echo '{"entitlementId": "kCVYMoty", "useCount": 97}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicTransferUserEntitlement \
    --entitlementId 'lxB7O5dl' \
    --namespace $AB_NAMESPACE \
    --userId 'uOukc3E8' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 412 'PublicTransferUserEntitlement' test.out

#- 413 PublicRedeemCode
# body param: body
echo '{"code": "U0WfvKnV", "language": "mitQ-mBPj", "region": "7vkK4bNg"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicRedeemCode \
    --namespace $AB_NAMESPACE \
    --userId 'aWYcO0Kh' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 413 'PublicRedeemCode' test.out

#- 414 PublicFulfillAppleIAPItem
# body param: body
echo '{"excludeOldTransactions": true, "language": "GGyU-UVne-qY", "productId": "ciz9tqcu", "receiptData": "KKVmgDSi", "region": "CR7DTTt3", "transactionId": "dr0xgKrq"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicFulfillAppleIAPItem \
    --namespace $AB_NAMESPACE \
    --userId 'uZFIPBiW' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 414 'PublicFulfillAppleIAPItem' test.out

#- 415 SyncEpicGamesInventory
# body param: body
echo '{"epicGamesJwtToken": "tRl3DJxO"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncEpicGamesInventory \
    --namespace $AB_NAMESPACE \
    --userId 'ege27JS3' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 415 'SyncEpicGamesInventory' test.out

#- 416 PublicFulfillGoogleIAPItem
# body param: body
echo '{"autoAck": true, "language": "VQVv_672", "orderId": "la3QxYRN", "packageName": "fvSkulGg", "productId": "54ZnmG2S", "purchaseTime": 43, "purchaseToken": "3VJF7Hsz", "region": "YTj5G5zK"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicFulfillGoogleIAPItem \
    --namespace $AB_NAMESPACE \
    --userId 'm7dPib3B' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 416 'PublicFulfillGoogleIAPItem' test.out

#- 417 SyncOculusConsumableEntitlements
$CLI_EXE \
    --sn platform \
    --op SyncOculusConsumableEntitlements \
    --namespace $AB_NAMESPACE \
    --userId 'lB5HjOmo' \
    > test.out 2>&1
eval_tap $? 417 'SyncOculusConsumableEntitlements' test.out

#- 418 PublicReconcilePlayStationStore
# body param: body
echo '{"currencyCode": "UNkeOcgk", "price": 0.7172495223977298, "productId": "joDxk79n", "serviceLabel": 66}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicReconcilePlayStationStore \
    --namespace $AB_NAMESPACE \
    --userId 'iwqKj8bI' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 418 'PublicReconcilePlayStationStore' test.out

#- 419 PublicReconcilePlayStationStoreWithMultipleServiceLabels
# body param: body
echo '{"currencyCode": "LCP3Lxn8", "price": 0.769997156877165, "productId": "i4kt9QzG", "serviceLabels": [33, 68, 4]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicReconcilePlayStationStoreWithMultipleServiceLabels \
    --namespace $AB_NAMESPACE \
    --userId 'l9lj0SVb' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 419 'PublicReconcilePlayStationStoreWithMultipleServiceLabels' test.out

#- 420 SyncSteamInventory
# body param: body
echo '{"appId": "wEHaqZdt", "currencyCode": "WRBH1sAm", "language": "my-LnBE", "price": 0.1702578859786662, "productId": "Jn78VPiA", "region": "6qg9d6iG", "steamId": "INx9589Q"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncSteamInventory \
    --namespace $AB_NAMESPACE \
    --userId 'dXJgnee8' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 420 'SyncSteamInventory' test.out

#- 421 SyncTwitchDropsEntitlement1
# body param: body
echo '{"gameId": "sG8HhBqv", "language": "PAI_wSQD_yT", "region": "qRGZBWGZ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncTwitchDropsEntitlement1 \
    --namespace $AB_NAMESPACE \
    --userId '2ctBBqDj' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 421 'SyncTwitchDropsEntitlement1' test.out

#- 422 SyncXboxInventory
# body param: body
echo '{"currencyCode": "T5wQh6eW", "price": 0.3071613710208625, "productId": "Jyr6Znmg", "xstsToken": "ZFpjc5nD"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncXboxInventory \
    --namespace $AB_NAMESPACE \
    --userId 'xzGMmbd3' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 422 'SyncXboxInventory' test.out

#- 423 PublicQueryUserOrders
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserOrders \
    --namespace $AB_NAMESPACE \
    --userId 'jg1X68Y5' \
    --itemId 'Ks43CcFE' \
    --limit '91' \
    --offset '77' \
    --status 'REFUNDED' \
    > test.out 2>&1
eval_tap $? 423 'PublicQueryUserOrders' test.out

#- 424 PublicCreateUserOrder
# body param: body
echo '{"currencyCode": "Oh1n8Haf", "discountedPrice": 82, "ext": {"bcI9dQJt": {}, "ghmbK9fH": {}, "ftx0YdaA": {}}, "itemId": "rdC7WVca", "language": "qCz", "price": 56, "quantity": 38, "region": "jVoX6qj0", "returnUrl": "l9fy1fbY", "sectionId": "pzIEUZ9K"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicCreateUserOrder \
    --namespace $AB_NAMESPACE \
    --userId 'r9kcFwu9' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 424 'PublicCreateUserOrder' test.out

#- 425 PublicGetUserOrder
$CLI_EXE \
    --sn platform \
    --op PublicGetUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'B9XauDMp' \
    --userId 'DaE6wwJc' \
    > test.out 2>&1
eval_tap $? 425 'PublicGetUserOrder' test.out

#- 426 PublicCancelUserOrder
$CLI_EXE \
    --sn platform \
    --op PublicCancelUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo '3cZJbA1z' \
    --userId '4OXshKad' \
    > test.out 2>&1
eval_tap $? 426 'PublicCancelUserOrder' test.out

#- 427 PublicGetUserOrderHistories
$CLI_EXE \
    --sn platform \
    --op PublicGetUserOrderHistories \
    --namespace $AB_NAMESPACE \
    --orderNo 'nKbLxy8L' \
    --userId 'iw8dtuR1' \
    > test.out 2>&1
eval_tap $? 427 'PublicGetUserOrderHistories' test.out

#- 428 PublicDownloadUserOrderReceipt
$CLI_EXE \
    --sn platform \
    --op PublicDownloadUserOrderReceipt \
    --namespace $AB_NAMESPACE \
    --orderNo 'XeC5lcGo' \
    --userId 'DMeHNA2D' \
    > test.out 2>&1
eval_tap $? 428 'PublicDownloadUserOrderReceipt' test.out

#- 429 PublicGetPaymentAccounts
$CLI_EXE \
    --sn platform \
    --op PublicGetPaymentAccounts \
    --namespace $AB_NAMESPACE \
    --userId 'daSg0wXS' \
    > test.out 2>&1
eval_tap $? 429 'PublicGetPaymentAccounts' test.out

#- 430 PublicDeletePaymentAccount
$CLI_EXE \
    --sn platform \
    --op PublicDeletePaymentAccount \
    --id 'O2aoGOhP' \
    --namespace $AB_NAMESPACE \
    --type 'paypal' \
    --userId 'WqdilXKC' \
    > test.out 2>&1
eval_tap $? 430 'PublicDeletePaymentAccount' test.out

#- 431 PublicListActiveSections
$CLI_EXE \
    --sn platform \
    --op PublicListActiveSections \
    --namespace $AB_NAMESPACE \
    --userId 'tfuYqNMt' \
    --autoCalcEstimatedPrice 'false' \
    --language 'mj4AhCle' \
    --region 'CpKd9LjD' \
    --storeId 'ivaOjeq7' \
    --viewId 'hBsP0TVL' \
    > test.out 2>&1
eval_tap $? 431 'PublicListActiveSections' test.out

#- 432 PublicQueryUserSubscriptions
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserSubscriptions \
    --namespace $AB_NAMESPACE \
    --userId 'bmZg9S0V' \
    --chargeStatus 'CHARGE_FAILED' \
    --itemId '6NILJquV' \
    --limit '90' \
    --offset '95' \
    --sku 'T2tvXJV9' \
    --status 'ACTIVE' \
    --subscribedBy 'PLATFORM' \
    > test.out 2>&1
eval_tap $? 432 'PublicQueryUserSubscriptions' test.out

#- 433 PublicSubscribeSubscription
# body param: body
echo '{"currencyCode": "KlRn1AY9", "itemId": "XKv7EK8N", "language": "CiZI", "region": "NZGagYbl", "returnUrl": "AZLW9Q0l", "source": "05YvFoR5"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicSubscribeSubscription \
    --namespace $AB_NAMESPACE \
    --userId 'It4oDQF6' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 433 'PublicSubscribeSubscription' test.out

#- 434 PublicCheckUserSubscriptionSubscribableByItemId
$CLI_EXE \
    --sn platform \
    --op PublicCheckUserSubscriptionSubscribableByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'ZgELfttP' \
    --itemId 'uDdC5cev' \
    > test.out 2>&1
eval_tap $? 434 'PublicCheckUserSubscriptionSubscribableByItemId' test.out

#- 435 PublicGetUserSubscription
$CLI_EXE \
    --sn platform \
    --op PublicGetUserSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'YFKKRgA4' \
    --userId 'ZDSlfAtG' \
    > test.out 2>&1
eval_tap $? 435 'PublicGetUserSubscription' test.out

#- 436 PublicChangeSubscriptionBillingAccount
$CLI_EXE \
    --sn platform \
    --op PublicChangeSubscriptionBillingAccount \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'NX4KFezz' \
    --userId 'R4O08QVU' \
    > test.out 2>&1
eval_tap $? 436 'PublicChangeSubscriptionBillingAccount' test.out

#- 437 PublicCancelSubscription
# body param: body
echo '{"immediate": true, "reason": "GrGghsiz"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicCancelSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'jTCL5DXD' \
    --userId 'Je1HUPkR' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 437 'PublicCancelSubscription' test.out

#- 438 PublicGetUserSubscriptionBillingHistories
$CLI_EXE \
    --sn platform \
    --op PublicGetUserSubscriptionBillingHistories \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'sXhNtTPg' \
    --userId '2c3Zdn4z' \
    --excludeFree 'false' \
    --limit '58' \
    --offset '78' \
    > test.out 2>&1
eval_tap $? 438 'PublicGetUserSubscriptionBillingHistories' test.out

#- 439 PublicListViews
$CLI_EXE \
    --sn platform \
    --op PublicListViews \
    --namespace $AB_NAMESPACE \
    --userId '43lyzP3Y' \
    --language 'M1910RmH' \
    --storeId 'wbZsHJwq' \
    > test.out 2>&1
eval_tap $? 439 'PublicListViews' test.out

#- 440 PublicGetWallet
$CLI_EXE \
    --sn platform \
    --op PublicGetWallet \
    --currencyCode '5Be6SQAV' \
    --namespace $AB_NAMESPACE \
    --userId '0Iiw3JZU' \
    > test.out 2>&1
eval_tap $? 440 'PublicGetWallet' test.out

#- 441 PublicListUserWalletTransactions
$CLI_EXE \
    --sn platform \
    --op PublicListUserWalletTransactions \
    --currencyCode 'wOd58DMp' \
    --namespace $AB_NAMESPACE \
    --userId 'TPbDVeqm' \
    --limit '54' \
    --offset '31' \
    > test.out 2>&1
eval_tap $? 441 'PublicListUserWalletTransactions' test.out

#- 442 QueryItems1
$CLI_EXE \
    --sn platform \
    --op QueryItems1 \
    --namespace $AB_NAMESPACE \
    --appType 'DEMO' \
    --availableDate 'DcksLcdE' \
    --baseAppId 'nOLZF7yz' \
    --categoryPath 'RUdHvjjR' \
    --features 's9QoHQtu' \
    --includeSubCategoryItem 'true' \
    --itemName '9yUELxJO' \
    --itemStatus 'INACTIVE' \
    --itemType 'CODE' \
    --limit '100' \
    --offset '91' \
    --region 'TKnhGtfJ' \
    --sectionExclusive 'false' \
    --sortBy '["displayOrder:desc", "name", "name:asc"]' \
    --storeId 'qkpe3ktd' \
    --tags '5t5SlDKe' \
    --targetNamespace 'FqHDi3RE' \
    --withTotal 'false' \
    > test.out 2>&1
eval_tap $? 442 'QueryItems1' test.out

#- 443 ImportStore1
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op ImportStore1 \
    --namespace $AB_NAMESPACE \
    --storeId 'jXuXMO0X' \
    --strictMode 'false' \
    --upload file $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 443 'ImportStore1' test.out

#- 444 ExportStore1
# body param: body
echo '{"itemIds": ["zmt2otlE", "S95KaPmu", "Z2cAoDSx"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ExportStore1 \
    --namespace $AB_NAMESPACE \
    --storeId 'OsUkMF8E' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 444 'ExportStore1' test.out

#- 445 FulfillRewardsV2
# body param: body
echo '{"entitlementCollectionId": "qJPmxiRf", "entitlementOrigin": "Steam", "metadata": {"NnP4If8m": {}, "WzrjFnef": {}, "m63OElxi": {}}, "origin": "IOS", "rewards": [{"currency": {"currencyCode": "S4yHEy4o", "namespace": "23hhl4CQ"}, "item": {"itemId": "pNslAgQg", "itemSku": "myrFaRi6", "itemType": "sumaPTKP"}, "quantity": 93, "type": "ITEM"}, {"currency": {"currencyCode": "fc52GF7o", "namespace": "LfN148hS"}, "item": {"itemId": "E2ndLtJY", "itemSku": "V9TYnpQg", "itemType": "aSaaveIt"}, "quantity": 55, "type": "ITEM"}, {"currency": {"currencyCode": "JXwZjE8X", "namespace": "TNCRSE7Q"}, "item": {"itemId": "8G5FgW04", "itemSku": "4ZFlpZhR", "itemType": "NUWnl9oJ"}, "quantity": 66, "type": "CURRENCY"}], "source": "PROMOTION", "transactionId": "d7XMvB2d"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op FulfillRewardsV2 \
    --namespace $AB_NAMESPACE \
    --userId 'VVZLa1aN' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 445 'FulfillRewardsV2' test.out


# remove artifacts
rm -f "$CLI_TOKEN_FILE"
rm -f "$TEMP_JSON_INPUT"
rm -f "$TEMP_FILE_UPLOAD"

exit $EXIT_CODE