#!/usr/bin/env bash

# Copyright (c) 2021 AccelByte Inc. All Rights Reserved.
# This is licensed software from AccelByte Inc, for limitations
# and restrictions contact your company contract manager.

# This code is generated by tool. DO NOT EDIT.

# Meta:
# - random seed: 
# - template file: 

# Instructions:
# - Run the Justice SDK Mock Server first before running this script.

export AB_BASE_URL="http://127.0.0.1:8080"
export AB_CLIENT_ID="admin"
export AB_CLIENT_SECRET="admin"
export AB_NAMESPACE="test"
export AB_APP_NAME="UnitTest"

EXIT_CODE=0

eval_tap() {
  if [ $1 -eq 0 ]; then
    echo "ok $2 - $3"
  else
    EXIT_CODE=1
    echo "not ok $2 - $3"
    sed 's/^/# /g' $4
  fi
  rm -f $4
}

CLI_EXE="AccelByte.Sdk.Sample.Cli"
CLI_TOKEN_FILE="$(dirname "$(which $CLI_EXE)")/token.json"
TEMP_JSON_INPUT="input_json.json"
TEMP_FILE_UPLOAD="file_upload.bin"

echo "TAP version 13"
echo "1..484"

#- 1 Login
$CLI_EXE --op login --lt user --user user --pass user > test.out 2>&1
eval_tap $? 1 'Login' test.out

if [ $EXIT_CODE -ne 0 ]; then
  echo "Bail out! Login failed."
  exit $EXIT_CODE
fi

# echo "foo" > "$CLI_TOKEN_FILE"

#- 2 ListFulfillmentScripts
$CLI_EXE \
    --sn platform \
    --op ListFulfillmentScripts \
    > test.out 2>&1
eval_tap $? 2 'ListFulfillmentScripts' test.out

#- 3 GetFulfillmentScript
$CLI_EXE \
    --sn platform \
    --op GetFulfillmentScript \
    --id 'ebXZaTPo' \
    > test.out 2>&1
eval_tap $? 3 'GetFulfillmentScript' test.out

#- 4 CreateFulfillmentScript
# body param: body
echo '{"grantDays": "1cwQCeCi"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateFulfillmentScript \
    --id 'Tbkhl6So' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 4 'CreateFulfillmentScript' test.out

#- 5 DeleteFulfillmentScript
$CLI_EXE \
    --sn platform \
    --op DeleteFulfillmentScript \
    --id 'GhxJwGZM' \
    > test.out 2>&1
eval_tap $? 5 'DeleteFulfillmentScript' test.out

#- 6 UpdateFulfillmentScript
# body param: body
echo '{"grantDays": "rbQasMJN"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateFulfillmentScript \
    --id 'usPSFbih' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 6 'UpdateFulfillmentScript' test.out

#- 7 ListItemTypeConfigs
$CLI_EXE \
    --sn platform \
    --op ListItemTypeConfigs \
    > test.out 2>&1
eval_tap $? 7 'ListItemTypeConfigs' test.out

#- 8 CreateItemTypeConfig
# body param: body
echo '{"clazz": "jT3vQ0m4", "dryRun": false, "fulfillmentUrl": "6anF20uS", "itemType": "LOOTBOX", "purchaseConditionUrl": "7RdJ8gRJ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateItemTypeConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 8 'CreateItemTypeConfig' test.out

#- 9 SearchItemTypeConfig
$CLI_EXE \
    --sn platform \
    --op SearchItemTypeConfig \
    --clazz 'M78vlbkk' \
    --itemType 'BUNDLE' \
    > test.out 2>&1
eval_tap $? 9 'SearchItemTypeConfig' test.out

#- 10 GetItemTypeConfig
$CLI_EXE \
    --sn platform \
    --op GetItemTypeConfig \
    --id 'Eh7Xwxm0' \
    > test.out 2>&1
eval_tap $? 10 'GetItemTypeConfig' test.out

#- 11 UpdateItemTypeConfig
# body param: body
echo '{"clazz": "gnrikYxz", "dryRun": true, "fulfillmentUrl": "OSTmFgDM", "purchaseConditionUrl": "JkQfu7mB"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateItemTypeConfig \
    --id '4Id5JJvH' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 11 'UpdateItemTypeConfig' test.out

#- 12 DeleteItemTypeConfig
$CLI_EXE \
    --sn platform \
    --op DeleteItemTypeConfig \
    --id 'MPJeyP4q' \
    > test.out 2>&1
eval_tap $? 12 'DeleteItemTypeConfig' test.out

#- 13 QueryCampaigns
$CLI_EXE \
    --sn platform \
    --op QueryCampaigns \
    --namespace $AB_NAMESPACE \
    --limit '7' \
    --name 'KXTqmYXR' \
    --offset '91' \
    --tag 'BBydxESo' \
    > test.out 2>&1
eval_tap $? 13 'QueryCampaigns' test.out

#- 14 CreateCampaign
# body param: body
echo '{"description": "uCLhDtvy", "discountConfig": {"categories": [{"categoryPath": "NuiDaXzj", "includeSubCategories": true}, {"categoryPath": "TPXTjxGW", "includeSubCategories": false}, {"categoryPath": "UfN8wyau", "includeSubCategories": false}], "currencyCode": "sSl9dzFz", "currencyNamespace": "H2efWzcE", "discountAmount": 29, "discountPercentage": 31, "discountType": "AMOUNT", "items": [{"itemId": "4mTJi8Ot", "itemName": "r6nIpO0p"}, {"itemId": "ZFoe9Bcn", "itemName": "vHrpVGUd"}, {"itemId": "kvPLnMho", "itemName": "qHk38D1b"}], "restrictType": "NONE", "stackable": false}, "items": [{"extraSubscriptionDays": 8, "itemId": "GSFjDgIL", "itemName": "GyEZD6BD", "quantity": 30}, {"extraSubscriptionDays": 5, "itemId": "uUDwnfJg", "itemName": "5qDlSOd6", "quantity": 33}, {"extraSubscriptionDays": 87, "itemId": "IbEHd3oH", "itemName": "mUMCXBmc", "quantity": 84}], "maxRedeemCountPerCampaignPerUser": 87, "maxRedeemCountPerCode": 33, "maxRedeemCountPerCodePerUser": 9, "maxSaleCount": 67, "name": "HIpbHeFN", "redeemEnd": "1988-02-27T00:00:00Z", "redeemStart": "1981-03-08T00:00:00Z", "redeemType": "ITEM", "status": "ACTIVE", "tags": ["rzl33LVy", "721jYMfe", "LE9atTXc"], "type": "REDEMPTION"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCampaign \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 14 'CreateCampaign' test.out

#- 15 GetCampaign
$CLI_EXE \
    --sn platform \
    --op GetCampaign \
    --campaignId 'Jw7D6vQk' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 15 'GetCampaign' test.out

#- 16 UpdateCampaign
# body param: body
echo '{"description": "9yaoxbcL", "discountConfig": {"categories": [{"categoryPath": "PphnzgKo", "includeSubCategories": false}, {"categoryPath": "hz560PRS", "includeSubCategories": false}, {"categoryPath": "li8FeUbw", "includeSubCategories": true}], "currencyCode": "Hggn3lzo", "currencyNamespace": "STJrfJDh", "discountAmount": 14, "discountPercentage": 79, "discountType": "AMOUNT", "items": [{"itemId": "qd9Nd9xJ", "itemName": "D0GM5KXo"}, {"itemId": "08qWJalt", "itemName": "DVWiunCk"}, {"itemId": "jlFk3nq6", "itemName": "KTy5I2p3"}], "restrictType": "ITEMS_AND_CATEGORIES", "stackable": true}, "items": [{"extraSubscriptionDays": 67, "itemId": "ZfrUJmGa", "itemName": "YeiF7GpK", "quantity": 77}, {"extraSubscriptionDays": 85, "itemId": "ROlnedYM", "itemName": "RAskby9R", "quantity": 43}, {"extraSubscriptionDays": 90, "itemId": "eel2znuU", "itemName": "W9jbCpKv", "quantity": 9}], "maxRedeemCountPerCampaignPerUser": 60, "maxRedeemCountPerCode": 7, "maxRedeemCountPerCodePerUser": 35, "maxSaleCount": 97, "name": "O88yztxE", "redeemEnd": "1972-06-08T00:00:00Z", "redeemStart": "1979-11-02T00:00:00Z", "redeemType": "DISCOUNT", "status": "ACTIVE", "tags": ["Lc2rt4Bm", "1DPeDzjE", "PFogih0d"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCampaign \
    --campaignId 'PtkILHAs' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 16 'UpdateCampaign' test.out

#- 17 RenameBatch
# body param: body
echo '{"newName": "l6h03uv6", "oldName": "u51dA7Ih"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RenameBatch \
    --campaignId 'xLYlbNmN' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 17 'RenameBatch' test.out

#- 18 QueryCampaignBatchNames
$CLI_EXE \
    --sn platform \
    --op QueryCampaignBatchNames \
    --campaignId '7gyBgR9L' \
    --namespace $AB_NAMESPACE \
    --batchName 'pksHGWM7' \
    --limit '43' \
    > test.out 2>&1
eval_tap $? 18 'QueryCampaignBatchNames' test.out

#- 19 GetCampaignDynamic
$CLI_EXE \
    --sn platform \
    --op GetCampaignDynamic \
    --campaignId 'vMsIhLYJ' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 19 'GetCampaignDynamic' test.out

#- 20 GetCatalogConfig
$CLI_EXE \
    --sn platform \
    --op GetCatalogConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 20 'GetCatalogConfig' test.out

#- 21 UpdateCatalogConfig
# body param: body
echo '{"enableInventoryCheck": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCatalogConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 21 'UpdateCatalogConfig' test.out

#- 22 GetLootBoxPluginConfig
$CLI_EXE \
    --sn platform \
    --op GetLootBoxPluginConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 22 'GetLootBoxPluginConfig' test.out

#- 23 UpdateLootBoxPluginConfig
# body param: body
echo '{"appConfig": {"appName": "Y0pvOtiO"}, "customConfig": {"connectionType": "INSECURE", "grpcServerAddress": "KdkT9MeY"}, "extendType": "CUSTOM"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateLootBoxPluginConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 23 'UpdateLootBoxPluginConfig' test.out

#- 24 DeleteLootBoxPluginConfig
$CLI_EXE \
    --sn platform \
    --op DeleteLootBoxPluginConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 24 'DeleteLootBoxPluginConfig' test.out

#- 25 UplodLootBoxPluginConfigCert
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UplodLootBoxPluginConfigCert \
    --namespace $AB_NAMESPACE \
    --upload file $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 25 'UplodLootBoxPluginConfigCert' test.out

#- 26 GetLootBoxGrpcInfo
$CLI_EXE \
    --sn platform \
    --op GetLootBoxGrpcInfo \
    --namespace $AB_NAMESPACE \
    --force 'false' \
    > test.out 2>&1
eval_tap $? 26 'GetLootBoxGrpcInfo' test.out

#- 27 GetSectionPluginConfig
$CLI_EXE \
    --sn platform \
    --op GetSectionPluginConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 27 'GetSectionPluginConfig' test.out

#- 28 UpdateSectionPluginConfig
# body param: body
echo '{"appConfig": {"appName": "XzHSz7H3"}, "customConfig": {"connectionType": "TLS", "grpcServerAddress": "48UnbZrm"}, "extendType": "APP"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateSectionPluginConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 28 'UpdateSectionPluginConfig' test.out

#- 29 DeleteSectionPluginConfig
$CLI_EXE \
    --sn platform \
    --op DeleteSectionPluginConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 29 'DeleteSectionPluginConfig' test.out

#- 30 UploadSectionPluginConfigCert
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UploadSectionPluginConfigCert \
    --namespace $AB_NAMESPACE \
    --upload file $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 30 'UploadSectionPluginConfigCert' test.out

#- 31 GetRootCategories
$CLI_EXE \
    --sn platform \
    --op GetRootCategories \
    --namespace $AB_NAMESPACE \
    --storeId '4Y6PzcKN' \
    > test.out 2>&1
eval_tap $? 31 'GetRootCategories' test.out

#- 32 CreateCategory
# body param: body
echo '{"categoryPath": "pIHSxaYA", "localizationDisplayNames": {"iOtC8WQV": "eLsvw8yR", "MVVANMTF": "19IAQH0L", "0ePr5YSv": "GQdf7Ds3"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCategory \
    --namespace $AB_NAMESPACE \
    --storeId 'qmUPhHu4' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 32 'CreateCategory' test.out

#- 33 ListCategoriesBasic
$CLI_EXE \
    --sn platform \
    --op ListCategoriesBasic \
    --namespace $AB_NAMESPACE \
    --storeId 'cKoZv7Hk' \
    > test.out 2>&1
eval_tap $? 33 'ListCategoriesBasic' test.out

#- 34 GetCategory
$CLI_EXE \
    --sn platform \
    --op GetCategory \
    --categoryPath '1xMW1uQq' \
    --namespace $AB_NAMESPACE \
    --storeId 'pYp2FHcx' \
    > test.out 2>&1
eval_tap $? 34 'GetCategory' test.out

#- 35 UpdateCategory
# body param: body
echo '{"localizationDisplayNames": {"mY4OQNQB": "canat5Iv", "eLovEsh1": "cce2NhGC", "qPk3QUr1": "rseEO76g"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCategory \
    --categoryPath 'AWmogcZZ' \
    --namespace $AB_NAMESPACE \
    --storeId 'cJnJ6i7B' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 35 'UpdateCategory' test.out

#- 36 DeleteCategory
$CLI_EXE \
    --sn platform \
    --op DeleteCategory \
    --categoryPath 'WhD1fCVt' \
    --namespace $AB_NAMESPACE \
    --storeId 'OgkZGweG' \
    > test.out 2>&1
eval_tap $? 36 'DeleteCategory' test.out

#- 37 GetChildCategories
$CLI_EXE \
    --sn platform \
    --op GetChildCategories \
    --categoryPath '4bLD0O9U' \
    --namespace $AB_NAMESPACE \
    --storeId 'qQEUTJpM' \
    > test.out 2>&1
eval_tap $? 37 'GetChildCategories' test.out

#- 38 GetDescendantCategories
$CLI_EXE \
    --sn platform \
    --op GetDescendantCategories \
    --categoryPath 'K2InD4rx' \
    --namespace $AB_NAMESPACE \
    --storeId 'CiGJ5TJX' \
    > test.out 2>&1
eval_tap $? 38 'GetDescendantCategories' test.out

#- 39 QueryCodes
$CLI_EXE \
    --sn platform \
    --op QueryCodes \
    --campaignId '4DmQL1y8' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --batchName 'VfBj3GBl' \
    --batchNo '[80, 71, 47]' \
    --code 'GuJwlAN9' \
    --limit '32' \
    --offset '82' \
    --withBatchName 'false' \
    > test.out 2>&1
eval_tap $? 39 'QueryCodes' test.out

#- 40 CreateCodes
# body param: body
echo '{"batchName": "EPOeCOVO", "codeValue": "l0J2EgxV", "quantity": 60}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCodes \
    --campaignId 'yTGShPxK' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 40 'CreateCodes' test.out

#- 41 Download
$CLI_EXE \
    --sn platform \
    --op Download \
    --campaignId 'hSvGqD0E' \
    --namespace $AB_NAMESPACE \
    --batchName 'Ec5RXty6' \
    --batchNo '[11, 65, 58]' \
    --withBatchName 'false' \
    > test.out 2>&1
eval_tap $? 41 'Download' test.out

#- 42 BulkDisableCodes
$CLI_EXE \
    --sn platform \
    --op BulkDisableCodes \
    --campaignId 'HGg1FeYy' \
    --namespace $AB_NAMESPACE \
    --batchName 'bSjYMlBV' \
    --batchNo '[63, 57, 57]' \
    > test.out 2>&1
eval_tap $? 42 'BulkDisableCodes' test.out

#- 43 BulkEnableCodes
$CLI_EXE \
    --sn platform \
    --op BulkEnableCodes \
    --campaignId 'NQ0R1bj8' \
    --namespace $AB_NAMESPACE \
    --batchName 'cbp0TG7P' \
    --batchNo '[46, 53, 91]' \
    > test.out 2>&1
eval_tap $? 43 'BulkEnableCodes' test.out

#- 44 QueryRedeemHistory
$CLI_EXE \
    --sn platform \
    --op QueryRedeemHistory \
    --campaignId 'q1M9H4a0' \
    --namespace $AB_NAMESPACE \
    --code '9uCq11eX' \
    --limit '56' \
    --offset '12' \
    --userId 'jizwpl9R' \
    > test.out 2>&1
eval_tap $? 44 'QueryRedeemHistory' test.out

#- 45 GetCode
$CLI_EXE \
    --sn platform \
    --op GetCode \
    --code 'V2AyoJ4j' \
    --namespace $AB_NAMESPACE \
    --redeemable 'false' \
    --withBatchName 'false' \
    > test.out 2>&1
eval_tap $? 45 'GetCode' test.out

#- 46 DisableCode
$CLI_EXE \
    --sn platform \
    --op DisableCode \
    --code 'wtvLuY1j' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 46 'DisableCode' test.out

#- 47 EnableCode
$CLI_EXE \
    --sn platform \
    --op EnableCode \
    --code 'd9mSHzot' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 47 'EnableCode' test.out

#- 48 GetServicePluginConfig
eval_tap 0 48 'GetServicePluginConfig # SKIP deprecated' test.out

#- 49 UpdateServicePluginConfig
eval_tap 0 49 'UpdateServicePluginConfig # SKIP deprecated' test.out

#- 50 DeleteServicePluginConfig
eval_tap 0 50 'DeleteServicePluginConfig # SKIP deprecated' test.out

#- 51 ListCurrencies
$CLI_EXE \
    --sn platform \
    --op ListCurrencies \
    --namespace $AB_NAMESPACE \
    --currencyType 'VIRTUAL' \
    > test.out 2>&1
eval_tap $? 51 'ListCurrencies' test.out

#- 52 CreateCurrency
# body param: body
echo '{"currencyCode": "7ZOfYJNT", "currencySymbol": "TDZxTEL2", "currencyType": "VIRTUAL", "decimals": 96, "localizationDescriptions": {"nAs9WSn6": "1Mp9Hpop", "R2SFSZAu": "4KsV2TtQ", "2RsA5NQY": "fqoEU99D"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCurrency \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 52 'CreateCurrency' test.out

#- 53 UpdateCurrency
# body param: body
echo '{"localizationDescriptions": {"7voOWDu9": "uEueZoyj", "HUOneJct": "wCcPzhMw", "C5BUa7DV": "fVhDsvwc"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCurrency \
    --currencyCode 'k5qMbp7b' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 53 'UpdateCurrency' test.out

#- 54 DeleteCurrency
$CLI_EXE \
    --sn platform \
    --op DeleteCurrency \
    --currencyCode 'QnSQBZ3n' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 54 'DeleteCurrency' test.out

#- 55 GetCurrencyConfig
$CLI_EXE \
    --sn platform \
    --op GetCurrencyConfig \
    --currencyCode '7tFEoss5' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 55 'GetCurrencyConfig' test.out

#- 56 GetCurrencySummary
$CLI_EXE \
    --sn platform \
    --op GetCurrencySummary \
    --currencyCode '1vgDwyMv' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 56 'GetCurrencySummary' test.out

#- 57 GetDLCItemConfig
$CLI_EXE \
    --sn platform \
    --op GetDLCItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 57 'GetDLCItemConfig' test.out

#- 58 UpdateDLCItemConfig
# body param: body
echo '{"data": [{"id": "vZ6ICFmh", "rewards": [{"currency": {"currencyCode": "y3zHiMMS", "namespace": "8ApSrfO9"}, "item": {"itemId": "pf1dTd24", "itemName": "eTyzbY4W", "itemSku": "emU5FiEe", "itemType": "MwJmks0J"}, "quantity": 75, "type": "CURRENCY"}, {"currency": {"currencyCode": "cCL4rUJQ", "namespace": "WgIowCxN"}, "item": {"itemId": "lxNr7kfj", "itemName": "8vXeAWqe", "itemSku": "te8X5vm2", "itemType": "JkHXfYlH"}, "quantity": 87, "type": "ITEM"}, {"currency": {"currencyCode": "2MoadnYe", "namespace": "49HZiyYn"}, "item": {"itemId": "y1sPuIxl", "itemName": "NRLS9rm5", "itemSku": "nTJKYn0n", "itemType": "cxr9c25f"}, "quantity": 81, "type": "ITEM"}]}, {"id": "48xUL51H", "rewards": [{"currency": {"currencyCode": "vbnh1W4n", "namespace": "s8vP8BOx"}, "item": {"itemId": "xoX94uQy", "itemName": "kqtMTwxv", "itemSku": "iJhBMIuA", "itemType": "0eygKa5y"}, "quantity": 43, "type": "CURRENCY"}, {"currency": {"currencyCode": "bR1JR4ou", "namespace": "MnWDdiwm"}, "item": {"itemId": "hr1wr2We", "itemName": "ZSSLz1Jc", "itemSku": "YJZrEBQO", "itemType": "CazINNL4"}, "quantity": 74, "type": "CURRENCY"}, {"currency": {"currencyCode": "a4IRU8O6", "namespace": "g995UNPZ"}, "item": {"itemId": "nkUHLYrA", "itemName": "XBHIohnU", "itemSku": "RlIygLOS", "itemType": "nVAbQW5X"}, "quantity": 64, "type": "CURRENCY"}]}, {"id": "6fqK5oNu", "rewards": [{"currency": {"currencyCode": "fhdLvZq8", "namespace": "KThS3Cs9"}, "item": {"itemId": "V8NK109g", "itemName": "o0RioT1B", "itemSku": "lh3tFtY7", "itemType": "7W7U2Wh4"}, "quantity": 46, "type": "ITEM"}, {"currency": {"currencyCode": "gvlfqH0y", "namespace": "YUMwR5ay"}, "item": {"itemId": "IWTeca7J", "itemName": "M73NBrZD", "itemSku": "uib0gBKV", "itemType": "ka4uNPCj"}, "quantity": 97, "type": "ITEM"}, {"currency": {"currencyCode": "ZJYhHA1Y", "namespace": "Iqdp3Ntq"}, "item": {"itemId": "9X5o72Km", "itemName": "fwPWbRwQ", "itemSku": "ch0O2BfT", "itemType": "A2vuYHWo"}, "quantity": 37, "type": "CURRENCY"}]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateDLCItemConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 58 'UpdateDLCItemConfig' test.out

#- 59 DeleteDLCItemConfig
$CLI_EXE \
    --sn platform \
    --op DeleteDLCItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 59 'DeleteDLCItemConfig' test.out

#- 60 GetPlatformDLCConfig
$CLI_EXE \
    --sn platform \
    --op GetPlatformDLCConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 60 'GetPlatformDLCConfig' test.out

#- 61 UpdatePlatformDLCConfig
# body param: body
echo '{"data": [{"platform": "OCULUS", "platformDlcIdMap": {"sK8hwFTK": "KHqMfxgC", "AUtxsKKu": "QPR8cbFD", "JF9Wp5Ta": "xNN51tuY"}}, {"platform": "PSN", "platformDlcIdMap": {"UghBMVL8": "GmoUObDi", "BY4C9uZs": "DIw0T44D", "i2N1tcB2": "QXQzVLgS"}}, {"platform": "PSN", "platformDlcIdMap": {"bAakVVHD": "xGzN1Ess", "qyZO0L9B": "1JL9wa4i", "NeONB1mb": "8DMhyU4v"}}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePlatformDLCConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 61 'UpdatePlatformDLCConfig' test.out

#- 62 DeletePlatformDLCConfig
$CLI_EXE \
    --sn platform \
    --op DeletePlatformDLCConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 62 'DeletePlatformDLCConfig' test.out

#- 63 QueryEntitlements1
$CLI_EXE \
    --sn platform \
    --op QueryEntitlements1 \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --appType 'SOFTWARE' \
    --entitlementClazz 'LOOTBOX' \
    --entitlementName 'BBMjX2zE' \
    --itemId '["yAZvQmSc", "c8RYk8H9", "NsUNvFhs"]' \
    --limit '19' \
    --offset '99' \
    --origin 'Nintendo' \
    --userId 'f9udJxBg' \
    > test.out 2>&1
eval_tap $? 63 'QueryEntitlements1' test.out

#- 64 QueryEntitlements
$CLI_EXE \
    --sn platform \
    --op QueryEntitlements \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --itemIds '["RifpDOjj", "SaCfqurE", "thWR2mfj"]' \
    --limit '87' \
    --offset '42' \
    > test.out 2>&1
eval_tap $? 64 'QueryEntitlements' test.out

#- 65 EnableEntitlementOriginFeature
$CLI_EXE \
    --sn platform \
    --op EnableEntitlementOriginFeature \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 65 'EnableEntitlementOriginFeature' test.out

#- 66 GetEntitlementConfigInfo
$CLI_EXE \
    --sn platform \
    --op GetEntitlementConfigInfo \
    --namespace $AB_NAMESPACE \
    --withoutCache 'false' \
    > test.out 2>&1
eval_tap $? 66 'GetEntitlementConfigInfo' test.out

#- 67 GrantEntitlements
# body param: body
echo '{"entitlementGrantList": [{"collectionId": "Jh2guNba", "endDate": "1993-08-31T00:00:00Z", "grantedCode": "6gDdTpKT", "itemId": "3CHNqwTt", "itemNamespace": "YdGQSWPV", "language": "zHSL_vRke-BM", "metadata": {"t19gAzLy": {}, "q9P17wl4": {}, "BRJZX3d4": {}}, "origin": "Other", "quantity": 99, "region": "9PA0bUjr", "source": "REWARD", "startDate": "1973-05-17T00:00:00Z", "storeId": "oLfjwvnZ"}, {"collectionId": "SOnAiOqP", "endDate": "1990-01-29T00:00:00Z", "grantedCode": "F5cfLuCS", "itemId": "fA600qNW", "itemNamespace": "kkEq6zWs", "language": "Cv_xWvv", "metadata": {"bApj9NWJ": {}, "l46mnSGu": {}, "NMCkzd1u": {}}, "origin": "IOS", "quantity": 97, "region": "0lxKm9Tn", "source": "PROMOTION", "startDate": "1987-08-01T00:00:00Z", "storeId": "nsPzGINE"}, {"collectionId": "5KnPwlkY", "endDate": "1982-02-27T00:00:00Z", "grantedCode": "xidyJYos", "itemId": "jcYDdEwJ", "itemNamespace": "CiUjR0Nq", "language": "Ncrd_YvsO", "metadata": {"xtWBeSFA": {}, "uBcenHwM": {}, "UzWo7XPj": {}}, "origin": "System", "quantity": 64, "region": "pADtsam6", "source": "PURCHASE", "startDate": "1995-03-16T00:00:00Z", "storeId": "4hKA13PM"}], "userIds": ["3mMJszV2", "wAJe80QI", "bdJj3bXx"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op GrantEntitlements \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 67 'GrantEntitlements' test.out

#- 68 RevokeEntitlements
# body param: body
echo '["9xGr3OPs", "5Y8itXnp", "ah7M4vvO"]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RevokeEntitlements \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 68 'RevokeEntitlements' test.out

#- 69 GetEntitlement
$CLI_EXE \
    --sn platform \
    --op GetEntitlement \
    --entitlementId 'Hax0hbxW' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 69 'GetEntitlement' test.out

#- 70 QueryFulfillmentHistories
$CLI_EXE \
    --sn platform \
    --op QueryFulfillmentHistories \
    --namespace $AB_NAMESPACE \
    --limit '95' \
    --offset '23' \
    --status 'SUCCESS' \
    --userId 'SmU5MPps' \
    > test.out 2>&1
eval_tap $? 70 'QueryFulfillmentHistories' test.out

#- 71 QueryIAPClawbackHistory
$CLI_EXE \
    --sn platform \
    --op QueryIAPClawbackHistory \
    --namespace $AB_NAMESPACE \
    --endTime 'nMYuhMDi' \
    --eventType 'CHARGEBACK' \
    --externalOrderId 'McQrG8C3' \
    --limit '80' \
    --offset '84' \
    --startTime '35WuZF9g' \
    --status 'INIT' \
    --userId 'aRVod6ao' \
    > test.out 2>&1
eval_tap $? 71 'QueryIAPClawbackHistory' test.out

#- 72 MockPlayStationStreamEvent
# body param: body
echo '{"body": {"account": "PAFdJXbD", "additionalData": {"entitlement": [{"clientTransaction": [{"amountConsumed": 36, "clientTransactionId": "BqvmZpZy"}, {"amountConsumed": 28, "clientTransactionId": "dDv6egBo"}, {"amountConsumed": 23, "clientTransactionId": "j47HqQAA"}], "entitlementId": "kfx3bRqQ", "usageCount": 91}, {"clientTransaction": [{"amountConsumed": 40, "clientTransactionId": "AycNO4T4"}, {"amountConsumed": 13, "clientTransactionId": "rS4DVf1N"}, {"amountConsumed": 77, "clientTransactionId": "ASituvhS"}], "entitlementId": "AEopjDmZ", "usageCount": 98}, {"clientTransaction": [{"amountConsumed": 75, "clientTransactionId": "DZHwZ8eJ"}, {"amountConsumed": 37, "clientTransactionId": "sDvfbHh5"}, {"amountConsumed": 50, "clientTransactionId": "iJim2vxx"}], "entitlementId": "eDTi4eIP", "usageCount": 13}], "purpose": "KALNYlMX"}, "originalTitleName": "Y1ApPJ2i", "paymentProductSKU": "pLlWpUaM", "purchaseDate": "Jjon1EsT", "sourceOrderItemId": "qnGduXvP", "titleName": "Py3ImPSi"}, "eventDomain": "N71asKHC", "eventSource": "gJOwjKXZ", "eventType": "7cLfHbOM", "eventVersion": 0, "id": "EcFTprA4", "timestamp": "789pj761"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op MockPlayStationStreamEvent \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 72 'MockPlayStationStreamEvent' test.out

#- 73 MockXblClawbackEvent
# body param: body
echo '{"data": {"eventDate": "JCFd0sBb", "eventState": "p4jbAr15", "lineItemId": "yX1i6cnj", "orderId": "9tLF5uMW", "productId": "B4QyIng6", "productType": "mxTlLHQP", "purchasedDate": "SKM8P2q7", "sandboxId": "ZkGEsWzJ", "skuId": "6MoafINl", "subscriptionData": {"consumedDurationInDays": 22, "dateTime": "2WIiyX6o", "durationInDays": 42, "recurrenceId": "dObWbpke"}}, "datacontenttype": "9T5kqNt3", "id": "kK24RQPZ", "source": "H7Kx3nvS", "specVersion": "fwRSO0qj", "subject": "KYKNvwZJ", "time": "sfjtu9XB", "traceparent": "gTCSfl7b", "type": "ypNmuoJp"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op MockXblClawbackEvent \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 73 'MockXblClawbackEvent' test.out

#- 74 GetAppleIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetAppleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 74 'GetAppleIAPConfig' test.out

#- 75 UpdateAppleIAPConfig
# body param: body
echo '{"appAppleId": 58, "bundleId": "X97LgOLR", "issuerId": "zAd14MED", "keyId": "7yGAc79H", "password": "fNV51RPC", "version": "V1"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateAppleIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 75 'UpdateAppleIAPConfig' test.out

#- 76 DeleteAppleIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteAppleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 76 'DeleteAppleIAPConfig' test.out

#- 77 UpdateAppleP8File
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UpdateAppleP8File \
    --namespace $AB_NAMESPACE \
    --upload file $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 77 'UpdateAppleP8File' test.out

#- 78 GetEpicGamesIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetEpicGamesIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 78 'GetEpicGamesIAPConfig' test.out

#- 79 UpdateEpicGamesIAPConfig
# body param: body
echo '{"sandboxId": "6jAfTDs8"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateEpicGamesIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 79 'UpdateEpicGamesIAPConfig' test.out

#- 80 DeleteEpicGamesIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteEpicGamesIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 80 'DeleteEpicGamesIAPConfig' test.out

#- 81 GetGoogleIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetGoogleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 81 'GetGoogleIAPConfig' test.out

#- 82 UpdateGoogleIAPConfig
# body param: body
echo '{"applicationName": "AVaDZpHE", "notificationTokenAudience": "YY1kGU3a", "notificationTokenEmail": "SWEBDL8t", "packageName": "oWpdjdcT", "serviceAccountId": "EBK0avuv"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateGoogleIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 82 'UpdateGoogleIAPConfig' test.out

#- 83 DeleteGoogleIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteGoogleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 83 'DeleteGoogleIAPConfig' test.out

#- 84 UpdateGoogleP12File
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UpdateGoogleP12File \
    --namespace $AB_NAMESPACE \
    --upload file $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 84 'UpdateGoogleP12File' test.out

#- 85 GetIAPItemConfig
$CLI_EXE \
    --sn platform \
    --op GetIAPItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 85 'GetIAPItemConfig' test.out

#- 86 UpdateIAPItemConfig
# body param: body
echo '{"data": [{"itemIdentity": "fLhV62iv", "itemIdentityType": "ITEM_ID", "platformProductIdMap": {"ufN4pOhL": "MZ2QIBnG", "8E1dmdqS": "Yipdsj89", "4YblayAl": "cdmJDNkN"}}, {"itemIdentity": "dU15tJ1R", "itemIdentityType": "ITEM_ID", "platformProductIdMap": {"9mP6Z1xU": "Gjd5AFdZ", "O8hgDdf2": "EGaDeEUC", "F2HtSM7s": "94nF5Lcy"}}, {"itemIdentity": "OcdIUeio", "itemIdentityType": "ITEM_ID", "platformProductIdMap": {"mqkdyYOl": "xBMHaPS9", "OoVHECht": "u2rH1kSl", "DP8uaEFd": "AlCyJM6p"}}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateIAPItemConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 86 'UpdateIAPItemConfig' test.out

#- 87 DeleteIAPItemConfig
$CLI_EXE \
    --sn platform \
    --op DeleteIAPItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 87 'DeleteIAPItemConfig' test.out

#- 88 GetOculusIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetOculusIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 88 'GetOculusIAPConfig' test.out

#- 89 UpdateOculusIAPConfig
# body param: body
echo '{"appId": "4WiKGpFD", "appSecret": "rHkLi8Bn"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateOculusIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 89 'UpdateOculusIAPConfig' test.out

#- 90 DeleteOculusIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteOculusIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 90 'DeleteOculusIAPConfig' test.out

#- 91 GetPlayStationIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetPlayStationIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 91 'GetPlayStationIAPConfig' test.out

#- 92 UpdatePlaystationIAPConfig
# body param: body
echo '{"backOfficeServerClientId": "nOLNKaRf", "backOfficeServerClientSecret": "rgz7Ixfs", "enableStreamJob": false, "environment": "XpcRc5U9", "streamName": "J7quf0gP", "streamPartnerName": "xlgYvWIp"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePlaystationIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 92 'UpdatePlaystationIAPConfig' test.out

#- 93 DeletePlaystationIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeletePlaystationIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 93 'DeletePlaystationIAPConfig' test.out

#- 94 ValidateExistedPlaystationIAPConfig
$CLI_EXE \
    --sn platform \
    --op ValidateExistedPlaystationIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 94 'ValidateExistedPlaystationIAPConfig' test.out

#- 95 ValidatePlaystationIAPConfig
# body param: body
echo '{"backOfficeServerClientId": "lwduADiv", "backOfficeServerClientSecret": "cDCyrsf0", "enableStreamJob": true, "environment": "emZbwmbG", "streamName": "EAAoTSxI", "streamPartnerName": "B1XRYrJb"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ValidatePlaystationIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 95 'ValidatePlaystationIAPConfig' test.out

#- 96 GetSteamIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetSteamIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 96 'GetSteamIAPConfig' test.out

#- 97 UpdateSteamIAPConfig
# body param: body
echo '{"appId": "rswfvB94", "publisherAuthenticationKey": "B59hJtvi"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateSteamIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 97 'UpdateSteamIAPConfig' test.out

#- 98 DeleteSteamIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteSteamIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 98 'DeleteSteamIAPConfig' test.out

#- 99 GetTwitchIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetTwitchIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 99 'GetTwitchIAPConfig' test.out

#- 100 UpdateTwitchIAPConfig
# body param: body
echo '{"clientId": "qOifjpvl", "clientSecret": "DY0PciW8", "organizationId": "JJIDPmmQ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateTwitchIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 100 'UpdateTwitchIAPConfig' test.out

#- 101 DeleteTwitchIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteTwitchIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 101 'DeleteTwitchIAPConfig' test.out

#- 102 GetXblIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetXblIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 102 'GetXblIAPConfig' test.out

#- 103 UpdateXblIAPConfig
# body param: body
echo '{"enableClawback": true, "entraAppClientId": "KAT8ndEo", "entraAppClientSecret": "yhcUl4gl", "entraTenantId": "ESBRBiGE", "relyingPartyCert": "8iozBhcq"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXblIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 103 'UpdateXblIAPConfig' test.out

#- 104 DeleteXblAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteXblAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 104 'DeleteXblAPConfig' test.out

#- 105 UpdateXblBPCertFile
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UpdateXblBPCertFile \
    --namespace $AB_NAMESPACE \
    --upload file $TEMP_FILE_UPLOAD \
    --password 'dDuRrDlF' \
    > test.out 2>&1
eval_tap $? 105 'UpdateXblBPCertFile' test.out

#- 106 QueryThirdPartyNotifications
$CLI_EXE \
    --sn platform \
    --op QueryThirdPartyNotifications \
    --namespace $AB_NAMESPACE \
    --endDate 'eGWbecnt' \
    --externalId 'xNtECVDt' \
    --limit '58' \
    --offset '94' \
    --source 'PLAYSTATION' \
    --startDate 'qWyhXUwt' \
    --status 'IGNORED' \
    --type '3luA3LW5' \
    > test.out 2>&1
eval_tap $? 106 'QueryThirdPartyNotifications' test.out

#- 107 QueryThirdPartySubscription
$CLI_EXE \
    --sn platform \
    --op QueryThirdPartySubscription \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --groupId 'zooTk7hv' \
    --limit '10' \
    --offset '0' \
    --platform 'OCULUS' \
    --productId '30HWILuy' \
    --userId 'vUmXZ1ao' \
    > test.out 2>&1
eval_tap $? 107 'QueryThirdPartySubscription' test.out

#- 108 GetIAPOrderConsumeDetails
$CLI_EXE \
    --sn platform \
    --op GetIAPOrderConsumeDetails \
    --iapOrderNo 'Ufz8XSgm' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 108 'GetIAPOrderConsumeDetails' test.out

#- 109 DownloadInvoiceDetails
$CLI_EXE \
    --sn platform \
    --op DownloadInvoiceDetails \
    --namespace $AB_NAMESPACE \
    --endTime 'x9x9SEGI' \
    --feature 'BGKlNtic' \
    --itemId '2IvocKIo' \
    --itemType 'SEASON' \
    --startTime 'NYNf0CvL' \
    > test.out 2>&1
eval_tap $? 109 'DownloadInvoiceDetails' test.out

#- 110 GenerateInvoiceSummary
$CLI_EXE \
    --sn platform \
    --op GenerateInvoiceSummary \
    --namespace $AB_NAMESPACE \
    --endTime 'XfJjZqVh' \
    --feature 'gqeVgIIN' \
    --itemId 'SMfDI8cQ' \
    --itemType 'BUNDLE' \
    --startTime 'L53MGmzH' \
    > test.out 2>&1
eval_tap $? 110 'GenerateInvoiceSummary' test.out

#- 111 SyncInGameItem
# body param: body
echo '{"categoryPath": "iC8QZufE", "targetItemId": "x9Y0X2Dw", "targetNamespace": "uJHsiRkK"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncInGameItem \
    --namespace $AB_NAMESPACE \
    --storeId 'gUdSipKT' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 111 'SyncInGameItem' test.out

#- 112 CreateItem
# body param: body
echo '{"appId": "qx791HMM", "appType": "DLC", "baseAppId": "1hG7Oz6O", "boothName": "0xqNk5S8", "categoryPath": "ojlWF891", "clazz": "3UphaAPp", "displayOrder": 93, "entitlementType": "CONSUMABLE", "ext": {"Hi5waHLI": {}, "DUpgCZcp": {}, "d6nT3COf": {}}, "features": ["tVpFLb1Y", "aI59zYfW", "0GUHWdVs"], "flexible": false, "images": [{"as": "fNnvqM9j", "caption": "IO51xxWM", "height": 16, "imageUrl": "iUEWurbr", "smallImageUrl": "GdJjI1NB", "width": 67}, {"as": "7dG3bcig", "caption": "YdB3Xgqk", "height": 80, "imageUrl": "dCagtBMn", "smallImageUrl": "PuetU1vo", "width": 55}, {"as": "on3zLxNG", "caption": "P6Ly9FQ3", "height": 49, "imageUrl": "BahWNHXL", "smallImageUrl": "AjR5GTar", "width": 74}], "inventoryConfig": {"customAttributes": {"8LphLNob": {}, "HZnzjRhP": {}, "djayKezu": {}}, "serverCustomAttributes": {"Vi7goQUz": {}, "3YTv6D5P": {}, "fqz8a5j5": {}}, "slotUsed": 68}, "itemIds": ["Lo8HjReg", "c6u3XJBO", "EO4dFFXG"], "itemQty": {"ktzuTKrE": 11, "8aApgj5T": 22, "f6Srf0xL": 28}, "itemType": "CODE", "listable": false, "localizations": {"O1l5QIsm": {"description": "hz0JHJQ7", "localExt": {"R4oCj0xm": {}, "pyj3llRR": {}, "GkU3is3M": {}}, "longDescription": "4m6TEc3x", "title": "CirL40zJ"}, "qunTUjOd": {"description": "jQFd9rii", "localExt": {"fF70cqpS": {}, "rVooR3MV": {}, "aa8j1vq0": {}}, "longDescription": "U1xrPFi6", "title": "Flllei6u"}, "zReSFm3t": {"description": "WdMfX2IW", "localExt": {"fzx2aLtI": {}, "pPwvleMV": {}, "VAL3PgB4": {}}, "longDescription": "LObwZCtq", "title": "YVkQAiAi"}}, "lootBoxConfig": {"rewardCount": 71, "rewards": [{"lootBoxItems": [{"count": 89, "duration": 70, "endDate": "1982-10-07T00:00:00Z", "itemId": "I6sSMbR6", "itemSku": "LNu0Wfpp", "itemType": "qxsWSHrz"}, {"count": 91, "duration": 16, "endDate": "1987-06-20T00:00:00Z", "itemId": "zBhyuwiZ", "itemSku": "Yr0oX82Q", "itemType": "fEvJtMbg"}, {"count": 31, "duration": 77, "endDate": "1983-02-12T00:00:00Z", "itemId": "dQP6KE4o", "itemSku": "i55gbrMi", "itemType": "TX2zIRQC"}], "name": "bj6YgGAQ", "odds": 0.91536617128434, "type": "REWARD_GROUP", "weight": 68}, {"lootBoxItems": [{"count": 52, "duration": 68, "endDate": "1994-08-06T00:00:00Z", "itemId": "wvGljOAl", "itemSku": "5XHexsfb", "itemType": "Kqsp5Dit"}, {"count": 88, "duration": 9, "endDate": "1995-01-04T00:00:00Z", "itemId": "lXMYkfU2", "itemSku": "r4RhDE7r", "itemType": "kZTvNN4q"}, {"count": 39, "duration": 56, "endDate": "1973-07-21T00:00:00Z", "itemId": "BcIlyX33", "itemSku": "MO4WUuTu", "itemType": "ekw6ckyK"}], "name": "rdcDuGpf", "odds": 0.37392380144957993, "type": "REWARD_GROUP", "weight": 28}, {"lootBoxItems": [{"count": 82, "duration": 21, "endDate": "1978-08-31T00:00:00Z", "itemId": "4PY5QQVe", "itemSku": "qxal5Xyp", "itemType": "08nKRV96"}, {"count": 26, "duration": 33, "endDate": "1972-05-23T00:00:00Z", "itemId": "Q8H3ScoW", "itemSku": "Zye8FN5A", "itemType": "FlJN8gXP"}, {"count": 80, "duration": 74, "endDate": "1979-07-16T00:00:00Z", "itemId": "DHYL2c7A", "itemSku": "w4Gupale", "itemType": "2g2rUTOP"}], "name": "JjCgi6L3", "odds": 0.13812227973604196, "type": "REWARD", "weight": 7}], "rollFunction": "CUSTOM"}, "maxCount": 27, "maxCountPerUser": 95, "name": "ZpOPjMMI", "optionBoxConfig": {"boxItems": [{"count": 84, "duration": 65, "endDate": "1974-12-16T00:00:00Z", "itemId": "JxMEfRYt", "itemSku": "dqCkTcdd", "itemType": "vgBHcZ6j"}, {"count": 10, "duration": 70, "endDate": "1984-03-23T00:00:00Z", "itemId": "695AXU6L", "itemSku": "zD6puV6u", "itemType": "ATcApoXa"}, {"count": 19, "duration": 63, "endDate": "1984-12-15T00:00:00Z", "itemId": "hfQdLXKh", "itemSku": "ovAA1CXE", "itemType": "Vzf1cd9Y"}]}, "purchasable": true, "recurring": {"cycle": "QUARTERLY", "fixedFreeDays": 81, "fixedTrialCycles": 65, "graceDays": 2}, "regionData": {"j5UylZT4": [{"currencyCode": "R5n3K6d2", "currencyNamespace": "ye50xnTP", "currencyType": "REAL", "discountAmount": 46, "discountExpireAt": "1979-10-01T00:00:00Z", "discountPercentage": 28, "discountPurchaseAt": "1989-01-15T00:00:00Z", "expireAt": "1979-09-22T00:00:00Z", "price": 43, "purchaseAt": "1999-08-29T00:00:00Z", "trialPrice": 55}, {"currencyCode": "hxW8JC0e", "currencyNamespace": "vSCm6lw8", "currencyType": "VIRTUAL", "discountAmount": 41, "discountExpireAt": "1975-07-10T00:00:00Z", "discountPercentage": 76, "discountPurchaseAt": "1975-03-28T00:00:00Z", "expireAt": "1974-03-13T00:00:00Z", "price": 42, "purchaseAt": "1983-08-01T00:00:00Z", "trialPrice": 39}, {"currencyCode": "ybt8MDQe", "currencyNamespace": "W3RY8cZD", "currencyType": "VIRTUAL", "discountAmount": 40, "discountExpireAt": "1975-11-12T00:00:00Z", "discountPercentage": 21, "discountPurchaseAt": "1989-12-19T00:00:00Z", "expireAt": "1972-12-03T00:00:00Z", "price": 56, "purchaseAt": "1985-09-12T00:00:00Z", "trialPrice": 37}], "wLrG7HFT": [{"currencyCode": "l7fXGryY", "currencyNamespace": "kXee6M0S", "currencyType": "REAL", "discountAmount": 7, "discountExpireAt": "1983-08-26T00:00:00Z", "discountPercentage": 42, "discountPurchaseAt": "1980-03-02T00:00:00Z", "expireAt": "1993-07-03T00:00:00Z", "price": 33, "purchaseAt": "1990-03-19T00:00:00Z", "trialPrice": 57}, {"currencyCode": "QqwWO5hJ", "currencyNamespace": "5Qt77TDj", "currencyType": "VIRTUAL", "discountAmount": 11, "discountExpireAt": "1993-09-13T00:00:00Z", "discountPercentage": 63, "discountPurchaseAt": "1990-05-24T00:00:00Z", "expireAt": "1985-12-17T00:00:00Z", "price": 5, "purchaseAt": "1974-04-12T00:00:00Z", "trialPrice": 87}, {"currencyCode": "I3Gp5QnJ", "currencyNamespace": "UJfPe2XP", "currencyType": "VIRTUAL", "discountAmount": 46, "discountExpireAt": "1977-02-04T00:00:00Z", "discountPercentage": 50, "discountPurchaseAt": "1995-07-26T00:00:00Z", "expireAt": "1974-09-02T00:00:00Z", "price": 83, "purchaseAt": "1995-08-26T00:00:00Z", "trialPrice": 54}], "joMzvOHm": [{"currencyCode": "zxVyILTk", "currencyNamespace": "g9F6QPqh", "currencyType": "VIRTUAL", "discountAmount": 36, "discountExpireAt": "1999-02-27T00:00:00Z", "discountPercentage": 16, "discountPurchaseAt": "1991-10-10T00:00:00Z", "expireAt": "1976-08-02T00:00:00Z", "price": 79, "purchaseAt": "1972-12-18T00:00:00Z", "trialPrice": 8}, {"currencyCode": "nw20pYai", "currencyNamespace": "rSlznPLk", "currencyType": "REAL", "discountAmount": 44, "discountExpireAt": "1982-09-14T00:00:00Z", "discountPercentage": 99, "discountPurchaseAt": "1995-12-14T00:00:00Z", "expireAt": "1975-10-22T00:00:00Z", "price": 20, "purchaseAt": "1984-05-31T00:00:00Z", "trialPrice": 40}, {"currencyCode": "zepVJPP0", "currencyNamespace": "dL0TAQl8", "currencyType": "REAL", "discountAmount": 97, "discountExpireAt": "1976-12-26T00:00:00Z", "discountPercentage": 3, "discountPurchaseAt": "1984-03-11T00:00:00Z", "expireAt": "1980-05-31T00:00:00Z", "price": 98, "purchaseAt": "1997-06-02T00:00:00Z", "trialPrice": 39}]}, "saleConfig": {"currencyCode": "6f2gDkWF", "price": 19}, "seasonType": "PASS", "sectionExclusive": true, "sellable": false, "sku": "N0WEb3en", "stackable": true, "status": "ACTIVE", "tags": ["NwWm9ol3", "fKUJK07q", "pqZma7Ry"], "targetCurrencyCode": "qp7Gmkk7", "targetNamespace": "nghyg2BC", "thumbnailUrl": "iPBH18TW", "useCount": 84}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateItem \
    --namespace $AB_NAMESPACE \
    --storeId 'FkHm0ykg' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 112 'CreateItem' test.out

#- 113 GetItemByAppId
$CLI_EXE \
    --sn platform \
    --op GetItemByAppId \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --storeId 'GAkFe58Y' \
    --appId 'nc7THwdQ' \
    > test.out 2>&1
eval_tap $? 113 'GetItemByAppId' test.out

#- 114 QueryItems
$CLI_EXE \
    --sn platform \
    --op QueryItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --appType 'DLC' \
    --availableDate 'vA5SeKRV' \
    --baseAppId 'eovHhVP8' \
    --categoryPath 'P9eYo2GD' \
    --features 'FBkfEa5h' \
    --includeSubCategoryItem 'true' \
    --itemType 'EXTENSION' \
    --limit '86' \
    --offset '20' \
    --region 'eGyjnOWb' \
    --sortBy '["displayOrder:asc", "createdAt:desc"]' \
    --storeId 'HHSDfOMR' \
    --tags 'gdWEt5I8' \
    --targetNamespace '2Wh8KGyx' \
    > test.out 2>&1
eval_tap $? 114 'QueryItems' test.out

#- 115 ListBasicItemsByFeatures
$CLI_EXE \
    --sn platform \
    --op ListBasicItemsByFeatures \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --features '["0hCgTV0m", "2oPXNKkU", "3Xu4pCqW"]' \
    > test.out 2>&1
eval_tap $? 115 'ListBasicItemsByFeatures' test.out

#- 116 GetItems
$CLI_EXE \
    --sn platform \
    --op GetItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --storeId 'X0Qe56MI' \
    --itemIds 'Opny8KI3' \
    > test.out 2>&1
eval_tap $? 116 'GetItems' test.out

#- 117 GetItemBySku
$CLI_EXE \
    --sn platform \
    --op GetItemBySku \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --storeId 'nZjnjsiD' \
    --sku 'eVpDN19u' \
    > test.out 2>&1
eval_tap $? 117 'GetItemBySku' test.out

#- 118 GetLocaleItemBySku
$CLI_EXE \
    --sn platform \
    --op GetLocaleItemBySku \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --language 'TF9kKvs2' \
    --populateBundle 'true' \
    --region 'XS191RSt' \
    --storeId 'UubItu8e' \
    --sku 'iQ3vW8Wh' \
    > test.out 2>&1
eval_tap $? 118 'GetLocaleItemBySku' test.out

#- 119 GetEstimatedPrice
$CLI_EXE \
    --sn platform \
    --op GetEstimatedPrice \
    --namespace $AB_NAMESPACE \
    --platform 'PGjt2ff1' \
    --region 'inqZvBUh' \
    --storeId 'FFLZTxVg' \
    --itemIds 'hexOrjSi' \
    --userId '9KUN1Ngn' \
    > test.out 2>&1
eval_tap $? 119 'GetEstimatedPrice' test.out

#- 120 GetItemIdBySku
$CLI_EXE \
    --sn platform \
    --op GetItemIdBySku \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --storeId 'P7E213t7' \
    --sku '2vPnwKOA' \
    > test.out 2>&1
eval_tap $? 120 'GetItemIdBySku' test.out

#- 121 GetBulkItemIdBySkus
$CLI_EXE \
    --sn platform \
    --op GetBulkItemIdBySkus \
    --namespace $AB_NAMESPACE \
    --sku '["pjnT1FeE", "324C7ZfJ", "7lFSetKe"]' \
    --storeId 'KfPTD0lH' \
    > test.out 2>&1
eval_tap $? 121 'GetBulkItemIdBySkus' test.out

#- 122 BulkGetLocaleItems
$CLI_EXE \
    --sn platform \
    --op BulkGetLocaleItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --language 'AOkyZQjw' \
    --region 'NZ5CHuQ5' \
    --storeId 'rZ500zpQ' \
    --itemIds 'WEi4Bt81' \
    > test.out 2>&1
eval_tap $? 122 'BulkGetLocaleItems' test.out

#- 123 GetAvailablePredicateTypes
$CLI_EXE \
    --sn platform \
    --op GetAvailablePredicateTypes \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 123 'GetAvailablePredicateTypes' test.out

#- 124 ValidateItemPurchaseCondition
# body param: body
echo '{"itemIds": ["A2rZ58zE", "tdWgu5TV", "P9dvd0xj"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ValidateItemPurchaseCondition \
    --namespace $AB_NAMESPACE \
    --platform 'mnG2AxRP' \
    --userId 'HER0KiH9' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 124 'ValidateItemPurchaseCondition' test.out

#- 125 BulkUpdateRegionData
# body param: body
echo '{"changes": [{"itemIdentities": ["1Y7saEgf", "PLoVBOCf", "7oHPyAMh"], "itemIdentityType": "ITEM_SKU", "regionData": {"VbSlNfh3": [{"currencyCode": "6AcBl44y", "currencyNamespace": "Q8rophre", "currencyType": "VIRTUAL", "discountAmount": 64, "discountExpireAt": "1984-07-17T00:00:00Z", "discountPercentage": 90, "discountPurchaseAt": "1992-03-18T00:00:00Z", "discountedPrice": 33, "expireAt": "1987-12-17T00:00:00Z", "price": 36, "purchaseAt": "1997-05-15T00:00:00Z", "trialPrice": 63}, {"currencyCode": "0Av3x60K", "currencyNamespace": "EDB5tJQo", "currencyType": "REAL", "discountAmount": 32, "discountExpireAt": "1982-05-21T00:00:00Z", "discountPercentage": 86, "discountPurchaseAt": "1994-07-27T00:00:00Z", "discountedPrice": 37, "expireAt": "1973-07-23T00:00:00Z", "price": 79, "purchaseAt": "1991-05-26T00:00:00Z", "trialPrice": 31}, {"currencyCode": "auQBSarT", "currencyNamespace": "28HCtS3V", "currencyType": "REAL", "discountAmount": 82, "discountExpireAt": "1994-12-02T00:00:00Z", "discountPercentage": 47, "discountPurchaseAt": "1975-06-10T00:00:00Z", "discountedPrice": 93, "expireAt": "1975-06-20T00:00:00Z", "price": 91, "purchaseAt": "1996-12-21T00:00:00Z", "trialPrice": 23}], "rohLjGc4": [{"currencyCode": "mXcG2X12", "currencyNamespace": "rfYvsQ9g", "currencyType": "VIRTUAL", "discountAmount": 64, "discountExpireAt": "1973-01-15T00:00:00Z", "discountPercentage": 61, "discountPurchaseAt": "1988-01-19T00:00:00Z", "discountedPrice": 47, "expireAt": "1986-10-14T00:00:00Z", "price": 37, "purchaseAt": "1987-01-01T00:00:00Z", "trialPrice": 58}, {"currencyCode": "Kd8VxWWz", "currencyNamespace": "YW1qFaIM", "currencyType": "VIRTUAL", "discountAmount": 89, "discountExpireAt": "1976-08-21T00:00:00Z", "discountPercentage": 6, "discountPurchaseAt": "1972-08-30T00:00:00Z", "discountedPrice": 14, "expireAt": "1971-03-09T00:00:00Z", "price": 10, "purchaseAt": "1971-12-17T00:00:00Z", "trialPrice": 93}, {"currencyCode": "vJJgO1Tc", "currencyNamespace": "jHHFZoaZ", "currencyType": "VIRTUAL", "discountAmount": 95, "discountExpireAt": "1987-10-16T00:00:00Z", "discountPercentage": 1, "discountPurchaseAt": "1986-07-30T00:00:00Z", "discountedPrice": 88, "expireAt": "1974-11-08T00:00:00Z", "price": 12, "purchaseAt": "1972-02-21T00:00:00Z", "trialPrice": 93}], "z5OKXzkg": [{"currencyCode": "9aT25Qd7", "currencyNamespace": "Sk8UmQnp", "currencyType": "REAL", "discountAmount": 36, "discountExpireAt": "1999-02-22T00:00:00Z", "discountPercentage": 36, "discountPurchaseAt": "1986-04-21T00:00:00Z", "discountedPrice": 65, "expireAt": "1983-02-26T00:00:00Z", "price": 84, "purchaseAt": "1997-12-08T00:00:00Z", "trialPrice": 36}, {"currencyCode": "OXpSXNKb", "currencyNamespace": "lFQlw21j", "currencyType": "REAL", "discountAmount": 3, "discountExpireAt": "1981-05-27T00:00:00Z", "discountPercentage": 43, "discountPurchaseAt": "1995-10-19T00:00:00Z", "discountedPrice": 50, "expireAt": "1997-05-17T00:00:00Z", "price": 0, "purchaseAt": "1979-10-16T00:00:00Z", "trialPrice": 69}, {"currencyCode": "KbXhTDFa", "currencyNamespace": "AUOhjhs8", "currencyType": "REAL", "discountAmount": 18, "discountExpireAt": "1974-11-21T00:00:00Z", "discountPercentage": 30, "discountPurchaseAt": "1991-07-16T00:00:00Z", "discountedPrice": 57, "expireAt": "1996-01-02T00:00:00Z", "price": 46, "purchaseAt": "1974-05-27T00:00:00Z", "trialPrice": 61}]}}, {"itemIdentities": ["4KjpN5S8", "BPqt9KRT", "868W0XMj"], "itemIdentityType": "ITEM_SKU", "regionData": {"3N5VAzGB": [{"currencyCode": "DVwlPTvm", "currencyNamespace": "F8fgZ0R0", "currencyType": "VIRTUAL", "discountAmount": 3, "discountExpireAt": "1985-02-01T00:00:00Z", "discountPercentage": 9, "discountPurchaseAt": "1983-08-29T00:00:00Z", "discountedPrice": 46, "expireAt": "1998-10-30T00:00:00Z", "price": 13, "purchaseAt": "1988-12-19T00:00:00Z", "trialPrice": 26}, {"currencyCode": "DcResddz", "currencyNamespace": "BGXcyLu9", "currencyType": "REAL", "discountAmount": 9, "discountExpireAt": "1974-06-05T00:00:00Z", "discountPercentage": 56, "discountPurchaseAt": "1991-10-11T00:00:00Z", "discountedPrice": 32, "expireAt": "1978-01-08T00:00:00Z", "price": 93, "purchaseAt": "1990-08-16T00:00:00Z", "trialPrice": 97}, {"currencyCode": "v0SyqCAT", "currencyNamespace": "ZilXAGUV", "currencyType": "REAL", "discountAmount": 55, "discountExpireAt": "1987-05-14T00:00:00Z", "discountPercentage": 33, "discountPurchaseAt": "1987-11-06T00:00:00Z", "discountedPrice": 1, "expireAt": "1975-07-01T00:00:00Z", "price": 83, "purchaseAt": "1980-11-13T00:00:00Z", "trialPrice": 3}], "6rEETTr8": [{"currencyCode": "YzwscWMW", "currencyNamespace": "oYOyNZgZ", "currencyType": "REAL", "discountAmount": 84, "discountExpireAt": "1976-10-06T00:00:00Z", "discountPercentage": 10, "discountPurchaseAt": "1980-02-22T00:00:00Z", "discountedPrice": 67, "expireAt": "1978-06-25T00:00:00Z", "price": 78, "purchaseAt": "1975-05-05T00:00:00Z", "trialPrice": 100}, {"currencyCode": "p3KYE7tz", "currencyNamespace": "DHo87YKn", "currencyType": "REAL", "discountAmount": 12, "discountExpireAt": "1994-03-01T00:00:00Z", "discountPercentage": 71, "discountPurchaseAt": "1993-06-21T00:00:00Z", "discountedPrice": 80, "expireAt": "1987-11-29T00:00:00Z", "price": 3, "purchaseAt": "1992-09-06T00:00:00Z", "trialPrice": 30}, {"currencyCode": "FtQSCF3N", "currencyNamespace": "OjCeTpus", "currencyType": "REAL", "discountAmount": 83, "discountExpireAt": "1993-04-18T00:00:00Z", "discountPercentage": 72, "discountPurchaseAt": "1997-06-18T00:00:00Z", "discountedPrice": 87, "expireAt": "1973-02-13T00:00:00Z", "price": 57, "purchaseAt": "1983-04-29T00:00:00Z", "trialPrice": 60}], "9prTLjb2": [{"currencyCode": "VGsWSWu7", "currencyNamespace": "3GUNPqNJ", "currencyType": "VIRTUAL", "discountAmount": 76, "discountExpireAt": "1996-04-20T00:00:00Z", "discountPercentage": 33, "discountPurchaseAt": "1988-12-30T00:00:00Z", "discountedPrice": 55, "expireAt": "1974-03-14T00:00:00Z", "price": 70, "purchaseAt": "1979-05-11T00:00:00Z", "trialPrice": 78}, {"currencyCode": "RyJToVWh", "currencyNamespace": "dTMJXSvO", "currencyType": "VIRTUAL", "discountAmount": 77, "discountExpireAt": "1992-07-25T00:00:00Z", "discountPercentage": 73, "discountPurchaseAt": "1993-02-03T00:00:00Z", "discountedPrice": 31, "expireAt": "1994-04-06T00:00:00Z", "price": 72, "purchaseAt": "1980-08-01T00:00:00Z", "trialPrice": 77}, {"currencyCode": "lHhYVDHd", "currencyNamespace": "6W2LXSj4", "currencyType": "REAL", "discountAmount": 40, "discountExpireAt": "1973-10-08T00:00:00Z", "discountPercentage": 67, "discountPurchaseAt": "1989-05-28T00:00:00Z", "discountedPrice": 53, "expireAt": "1972-09-13T00:00:00Z", "price": 41, "purchaseAt": "1994-04-19T00:00:00Z", "trialPrice": 79}]}}, {"itemIdentities": ["3F5xllLY", "bSiqEQee", "Osth4iRS"], "itemIdentityType": "ITEM_ID", "regionData": {"EwLJrQ2K": [{"currencyCode": "Q5ywcn76", "currencyNamespace": "MudJ0i3Q", "currencyType": "VIRTUAL", "discountAmount": 24, "discountExpireAt": "1975-03-21T00:00:00Z", "discountPercentage": 77, "discountPurchaseAt": "1984-04-04T00:00:00Z", "discountedPrice": 96, "expireAt": "1976-07-06T00:00:00Z", "price": 63, "purchaseAt": "1998-05-10T00:00:00Z", "trialPrice": 5}, {"currencyCode": "FuXogkVu", "currencyNamespace": "5Q5tyvqI", "currencyType": "REAL", "discountAmount": 78, "discountExpireAt": "1974-10-17T00:00:00Z", "discountPercentage": 39, "discountPurchaseAt": "1992-06-26T00:00:00Z", "discountedPrice": 62, "expireAt": "1975-08-24T00:00:00Z", "price": 0, "purchaseAt": "1994-06-09T00:00:00Z", "trialPrice": 15}, {"currencyCode": "BydKmGxA", "currencyNamespace": "m6sb7nZy", "currencyType": "REAL", "discountAmount": 23, "discountExpireAt": "1974-05-20T00:00:00Z", "discountPercentage": 49, "discountPurchaseAt": "1973-08-31T00:00:00Z", "discountedPrice": 3, "expireAt": "1996-06-02T00:00:00Z", "price": 52, "purchaseAt": "1991-12-02T00:00:00Z", "trialPrice": 20}], "rxjirx9i": [{"currencyCode": "0VTOW16X", "currencyNamespace": "PkZjSbxa", "currencyType": "REAL", "discountAmount": 23, "discountExpireAt": "1974-12-23T00:00:00Z", "discountPercentage": 50, "discountPurchaseAt": "1989-03-05T00:00:00Z", "discountedPrice": 66, "expireAt": "1972-11-26T00:00:00Z", "price": 93, "purchaseAt": "1988-10-02T00:00:00Z", "trialPrice": 70}, {"currencyCode": "iDaVPc2b", "currencyNamespace": "DThnM7Dg", "currencyType": "REAL", "discountAmount": 80, "discountExpireAt": "1989-09-12T00:00:00Z", "discountPercentage": 66, "discountPurchaseAt": "1991-10-04T00:00:00Z", "discountedPrice": 95, "expireAt": "1992-04-09T00:00:00Z", "price": 54, "purchaseAt": "1990-06-25T00:00:00Z", "trialPrice": 91}, {"currencyCode": "Pj3NUSFo", "currencyNamespace": "WhA5MuzW", "currencyType": "REAL", "discountAmount": 54, "discountExpireAt": "1984-01-11T00:00:00Z", "discountPercentage": 55, "discountPurchaseAt": "1981-04-23T00:00:00Z", "discountedPrice": 58, "expireAt": "1994-03-30T00:00:00Z", "price": 61, "purchaseAt": "1996-10-24T00:00:00Z", "trialPrice": 39}], "MTvM5oRA": [{"currencyCode": "L7G1xa0n", "currencyNamespace": "Pt7xNOCn", "currencyType": "REAL", "discountAmount": 96, "discountExpireAt": "1975-04-19T00:00:00Z", "discountPercentage": 18, "discountPurchaseAt": "1971-06-29T00:00:00Z", "discountedPrice": 37, "expireAt": "1999-12-15T00:00:00Z", "price": 87, "purchaseAt": "1990-09-01T00:00:00Z", "trialPrice": 56}, {"currencyCode": "2lXKwad8", "currencyNamespace": "3RCPuJy1", "currencyType": "VIRTUAL", "discountAmount": 86, "discountExpireAt": "1972-10-28T00:00:00Z", "discountPercentage": 95, "discountPurchaseAt": "1981-09-03T00:00:00Z", "discountedPrice": 93, "expireAt": "1975-03-27T00:00:00Z", "price": 40, "purchaseAt": "1979-09-12T00:00:00Z", "trialPrice": 13}, {"currencyCode": "MKVvIWTa", "currencyNamespace": "9zYAWl4D", "currencyType": "VIRTUAL", "discountAmount": 10, "discountExpireAt": "1983-10-02T00:00:00Z", "discountPercentage": 52, "discountPurchaseAt": "1979-09-01T00:00:00Z", "discountedPrice": 71, "expireAt": "1998-10-04T00:00:00Z", "price": 19, "purchaseAt": "1971-01-21T00:00:00Z", "trialPrice": 6}]}}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op BulkUpdateRegionData \
    --namespace $AB_NAMESPACE \
    --storeId 'Eb33aNcO' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 125 'BulkUpdateRegionData' test.out

#- 126 SearchItems
$CLI_EXE \
    --sn platform \
    --op SearchItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --itemType 'MEDIA' \
    --limit '95' \
    --offset '97' \
    --sortBy 'QmWinknH' \
    --storeId 'ZFaddeq9' \
    --keyword 'k1XLQ3rg' \
    --language 'qogzgP7O' \
    > test.out 2>&1
eval_tap $? 126 'SearchItems' test.out

#- 127 QueryUncategorizedItems
$CLI_EXE \
    --sn platform \
    --op QueryUncategorizedItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --limit '72' \
    --offset '18' \
    --sortBy '["createdAt", "updatedAt:asc", "createdAt:asc"]' \
    --storeId 'GseuPSDs' \
    > test.out 2>&1
eval_tap $? 127 'QueryUncategorizedItems' test.out

#- 128 GetItem
$CLI_EXE \
    --sn platform \
    --op GetItem \
    --itemId 'drBxJQbe' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --storeId 'Zcvktbt1' \
    > test.out 2>&1
eval_tap $? 128 'GetItem' test.out

#- 129 UpdateItem
# body param: body
echo '{"appId": "4m8sn4Lm", "appType": "GAME", "baseAppId": "SCBEcXNX", "boothName": "3Wz78BG3", "categoryPath": "HE4PuSba", "clazz": "rO5IQRRS", "displayOrder": 63, "entitlementType": "DURABLE", "ext": {"qskfbgAI": {}, "Y2ZbZEux": {}, "KojBtqYN": {}}, "features": ["zPLBCsKQ", "fuh8k1Xq", "uN4KxwcR"], "flexible": true, "images": [{"as": "kUnsuYCX", "caption": "TLj5KQ3C", "height": 18, "imageUrl": "zBr5Pa7x", "smallImageUrl": "GHgykdFm", "width": 58}, {"as": "N6zhyCv4", "caption": "clxCQHaJ", "height": 65, "imageUrl": "wxCQmDN9", "smallImageUrl": "tAbDyy0n", "width": 38}, {"as": "HqE91GQ8", "caption": "oxEBTF13", "height": 96, "imageUrl": "CsVHX4VT", "smallImageUrl": "zYcaZ2MO", "width": 47}], "inventoryConfig": {"customAttributes": {"4fiB6xgA": {}, "CPF70Mh9": {}, "TSHtdbwV": {}}, "serverCustomAttributes": {"MwOD9LTo": {}, "a27wUOkS": {}, "AUPQFu9r": {}}, "slotUsed": 94}, "itemIds": ["dhnpL5lP", "NDZGno1p", "pGLraxcE"], "itemQty": {"WaTYMgOo": 72, "COwNn2EH": 94, "niHf5uBF": 88}, "itemType": "BUNDLE", "listable": false, "localizations": {"uD3DpQGZ": {"description": "d6Eleape", "localExt": {"fRLIpuWY": {}, "OdjWiC1t": {}, "8Qa1m8zs": {}}, "longDescription": "0Ji7oIlE", "title": "mcoGzd1V"}, "VnD5yJxK": {"description": "k1p9ROLB", "localExt": {"Ey0KTd6u": {}, "jA7y5kD4": {}, "jC33A5Rc": {}}, "longDescription": "dEbsTpSj", "title": "WwOrRb1I"}, "SZ7lXWOz": {"description": "C0Lsrt2Z", "localExt": {"uSstF0Q6": {}, "8dXn5CiR": {}, "AKMtpvEv": {}}, "longDescription": "34vKJmJk", "title": "ugdZ6Sfa"}}, "lootBoxConfig": {"rewardCount": 51, "rewards": [{"lootBoxItems": [{"count": 5, "duration": 59, "endDate": "1993-09-07T00:00:00Z", "itemId": "NocIdAwk", "itemSku": "nua0diYV", "itemType": "Va5yBm0C"}, {"count": 62, "duration": 35, "endDate": "1975-12-11T00:00:00Z", "itemId": "0np9q6UQ", "itemSku": "uSguDW1m", "itemType": "Brur4Epk"}, {"count": 53, "duration": 85, "endDate": "1979-07-11T00:00:00Z", "itemId": "pOE0W3dB", "itemSku": "5EBIz4lw", "itemType": "w91qYki5"}], "name": "ETRRo11t", "odds": 0.17865675697197836, "type": "REWARD_GROUP", "weight": 76}, {"lootBoxItems": [{"count": 59, "duration": 57, "endDate": "1982-07-17T00:00:00Z", "itemId": "GWiL7FAw", "itemSku": "DJieyEkN", "itemType": "aZaHNW6i"}, {"count": 18, "duration": 7, "endDate": "1975-07-22T00:00:00Z", "itemId": "OdpPebUl", "itemSku": "yHpY0phL", "itemType": "jtPDUQov"}, {"count": 46, "duration": 99, "endDate": "1980-01-31T00:00:00Z", "itemId": "iD5Koape", "itemSku": "Hjal6ZIg", "itemType": "i8xpTHfv"}], "name": "VO2rn9EK", "odds": 0.6542242046299209, "type": "REWARD_GROUP", "weight": 3}, {"lootBoxItems": [{"count": 14, "duration": 73, "endDate": "1991-04-01T00:00:00Z", "itemId": "i4MnWIVs", "itemSku": "eoAmwKi9", "itemType": "Pq9BQgRP"}, {"count": 25, "duration": 8, "endDate": "1972-05-21T00:00:00Z", "itemId": "joIDrHTP", "itemSku": "vCCQ2Dgc", "itemType": "6msJeHo7"}, {"count": 50, "duration": 33, "endDate": "1977-12-03T00:00:00Z", "itemId": "TY8m8uPa", "itemSku": "8k7DQE28", "itemType": "TylGLxeG"}], "name": "TwwhUMHY", "odds": 0.5805601572882002, "type": "REWARD", "weight": 66}], "rollFunction": "DEFAULT"}, "maxCount": 51, "maxCountPerUser": 99, "name": "ohoZ1G1V", "optionBoxConfig": {"boxItems": [{"count": 11, "duration": 8, "endDate": "1983-06-17T00:00:00Z", "itemId": "28yIFmXH", "itemSku": "Ni63ZtHQ", "itemType": "U2sMI68n"}, {"count": 78, "duration": 59, "endDate": "1974-05-06T00:00:00Z", "itemId": "AZtPtK9B", "itemSku": "1WfLqflg", "itemType": "zZ6Gw5Fh"}, {"count": 20, "duration": 9, "endDate": "1998-03-29T00:00:00Z", "itemId": "lAkVQoSF", "itemSku": "mhbgtmTr", "itemType": "KQ8mb1ia"}]}, "purchasable": true, "recurring": {"cycle": "YEARLY", "fixedFreeDays": 55, "fixedTrialCycles": 40, "graceDays": 15}, "regionData": {"tNH3vOQl": [{"currencyCode": "c5wLNTId", "currencyNamespace": "vdbeMXum", "currencyType": "REAL", "discountAmount": 21, "discountExpireAt": "1987-02-09T00:00:00Z", "discountPercentage": 20, "discountPurchaseAt": "1996-08-28T00:00:00Z", "expireAt": "1988-11-11T00:00:00Z", "price": 93, "purchaseAt": "1999-06-10T00:00:00Z", "trialPrice": 13}, {"currencyCode": "KJLKuev3", "currencyNamespace": "9Vicqf5E", "currencyType": "VIRTUAL", "discountAmount": 46, "discountExpireAt": "1982-06-06T00:00:00Z", "discountPercentage": 74, "discountPurchaseAt": "1971-12-18T00:00:00Z", "expireAt": "1971-03-01T00:00:00Z", "price": 87, "purchaseAt": "1989-10-08T00:00:00Z", "trialPrice": 18}, {"currencyCode": "VzEEw3QN", "currencyNamespace": "u9uQwMZo", "currencyType": "REAL", "discountAmount": 47, "discountExpireAt": "1995-03-11T00:00:00Z", "discountPercentage": 42, "discountPurchaseAt": "1980-01-14T00:00:00Z", "expireAt": "1980-12-27T00:00:00Z", "price": 78, "purchaseAt": "1996-11-23T00:00:00Z", "trialPrice": 16}], "340k4WAU": [{"currencyCode": "xyt0Ik5M", "currencyNamespace": "dwHvKxnH", "currencyType": "VIRTUAL", "discountAmount": 59, "discountExpireAt": "1999-03-20T00:00:00Z", "discountPercentage": 39, "discountPurchaseAt": "1981-11-08T00:00:00Z", "expireAt": "1980-12-06T00:00:00Z", "price": 27, "purchaseAt": "1987-12-11T00:00:00Z", "trialPrice": 79}, {"currencyCode": "RxhO9mdj", "currencyNamespace": "tEJ0uVAg", "currencyType": "REAL", "discountAmount": 4, "discountExpireAt": "1971-03-09T00:00:00Z", "discountPercentage": 88, "discountPurchaseAt": "1972-01-06T00:00:00Z", "expireAt": "1997-11-05T00:00:00Z", "price": 45, "purchaseAt": "1983-10-06T00:00:00Z", "trialPrice": 19}, {"currencyCode": "isWxaCJT", "currencyNamespace": "TtHAtEmW", "currencyType": "REAL", "discountAmount": 5, "discountExpireAt": "1983-02-24T00:00:00Z", "discountPercentage": 90, "discountPurchaseAt": "1983-11-15T00:00:00Z", "expireAt": "1986-03-07T00:00:00Z", "price": 49, "purchaseAt": "1980-10-05T00:00:00Z", "trialPrice": 73}], "ZbofQT5Q": [{"currencyCode": "PNqLw9U6", "currencyNamespace": "QpxTi3M3", "currencyType": "REAL", "discountAmount": 35, "discountExpireAt": "1984-05-07T00:00:00Z", "discountPercentage": 40, "discountPurchaseAt": "1993-08-16T00:00:00Z", "expireAt": "1990-12-08T00:00:00Z", "price": 68, "purchaseAt": "1979-01-04T00:00:00Z", "trialPrice": 13}, {"currencyCode": "eKydbQV5", "currencyNamespace": "20enbP0O", "currencyType": "VIRTUAL", "discountAmount": 60, "discountExpireAt": "1992-02-08T00:00:00Z", "discountPercentage": 70, "discountPurchaseAt": "1978-05-08T00:00:00Z", "expireAt": "1978-07-17T00:00:00Z", "price": 8, "purchaseAt": "1983-02-25T00:00:00Z", "trialPrice": 91}, {"currencyCode": "ASwwp3ol", "currencyNamespace": "ybSaU2AD", "currencyType": "REAL", "discountAmount": 88, "discountExpireAt": "1992-12-31T00:00:00Z", "discountPercentage": 78, "discountPurchaseAt": "1975-12-18T00:00:00Z", "expireAt": "1986-09-17T00:00:00Z", "price": 24, "purchaseAt": "1984-01-03T00:00:00Z", "trialPrice": 23}]}, "saleConfig": {"currencyCode": "ZOnStYx4", "price": 43}, "seasonType": "PASS", "sectionExclusive": false, "sellable": true, "sku": "CVRHMqlJ", "stackable": true, "status": "INACTIVE", "tags": ["lZddmBCu", "Nd46ljt4", "2wXLXGsW"], "targetCurrencyCode": "85vcfzyA", "targetNamespace": "TaFGrxLf", "thumbnailUrl": "tWz1ZkBj", "useCount": 89}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateItem \
    --itemId '6J9xKomM' \
    --namespace $AB_NAMESPACE \
    --storeId 'kDfKx91K' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 129 'UpdateItem' test.out

#- 130 DeleteItem
$CLI_EXE \
    --sn platform \
    --op DeleteItem \
    --itemId 'eEtvLP4Y' \
    --namespace $AB_NAMESPACE \
    --force 'true' \
    --storeId '3Vi0Gyr7' \
    > test.out 2>&1
eval_tap $? 130 'DeleteItem' test.out

#- 131 AcquireItem
# body param: body
echo '{"count": 14, "orderNo": "NVQExB45"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op AcquireItem \
    --itemId 'sIYlHv4q' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 131 'AcquireItem' test.out

#- 132 GetApp
$CLI_EXE \
    --sn platform \
    --op GetApp \
    --itemId 'azGTBBXP' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --storeId '7GLogmvo' \
    > test.out 2>&1
eval_tap $? 132 'GetApp' test.out

#- 133 UpdateApp
# body param: body
echo '{"carousel": [{"alt": "EldRyopc", "previewUrl": "pzflSHnA", "thumbnailUrl": "vy25pUc4", "type": "video", "url": "4V8A4U2D", "videoSource": "generic"}, {"alt": "FcGOACRD", "previewUrl": "kffK2FtO", "thumbnailUrl": "O6JvVHpd", "type": "image", "url": "qGeDY6PY", "videoSource": "vimeo"}, {"alt": "NUqOFwHp", "previewUrl": "AGJo0dJY", "thumbnailUrl": "QNwvrZHp", "type": "video", "url": "3fBSqA4O", "videoSource": "youtube"}], "developer": "HPaMIegE", "forumUrl": "v8wZtHXW", "genres": ["Casual", "RPG", "Action"], "localizations": {"0anXNlBx": {"announcement": "QMQyj9j4", "slogan": "U0BlN7G4"}, "hpnSqM0k": {"announcement": "wkY0hmtb", "slogan": "UkcaH4mS"}, "6EKJi6z0": {"announcement": "bak3w2ml", "slogan": "JpUuUl4q"}}, "platformRequirements": {"dZxcnuA7": [{"additionals": "As0aMlkE", "directXVersion": "jF8c0rkd", "diskSpace": "3mLIjvpG", "graphics": "xHeR7Jg9", "label": "j4LxIVzV", "osVersion": "zqppA0jE", "processor": "b8Mw7rmB", "ram": "zppUbA8B", "soundCard": "GJc46gMz"}, {"additionals": "x5Vi9aLw", "directXVersion": "mbUqHrK7", "diskSpace": "oYonV6Or", "graphics": "v0WnJN8M", "label": "EHDFxYg1", "osVersion": "edya57nY", "processor": "nS0qsLAL", "ram": "6HXnlquS", "soundCard": "Oug2QXHu"}, {"additionals": "GHNC5CtM", "directXVersion": "ylshF9lZ", "diskSpace": "92CCo7La", "graphics": "T149YQP3", "label": "0JhE9DVC", "osVersion": "LPXU6CCA", "processor": "NL8BUqA4", "ram": "BcBxEBzR", "soundCard": "zdd44tcW"}], "Bbq0T704": [{"additionals": "l3fWCgd3", "directXVersion": "qzOdWzT4", "diskSpace": "Vdy6WP3P", "graphics": "JE4Mmqb4", "label": "Uc52JmiZ", "osVersion": "5UmsWbhs", "processor": "owbQYmdg", "ram": "KrNPN8Oo", "soundCard": "3nmgmO8k"}, {"additionals": "t6T7kjbe", "directXVersion": "DjqhAeBZ", "diskSpace": "Lw7Qu9pF", "graphics": "ftVHeEmY", "label": "cgzyMVZW", "osVersion": "qcbOZ6HQ", "processor": "352R40Kb", "ram": "6fXcEslE", "soundCard": "UF1TtFGF"}, {"additionals": "Vv31prGq", "directXVersion": "s0dh8NSh", "diskSpace": "4HsZY8aw", "graphics": "5NlTyNRq", "label": "SoKRpBxc", "osVersion": "7M9RREZ8", "processor": "l5AYXKVD", "ram": "WiCYczjF", "soundCard": "HBLjVdtP"}], "4vSzWAWs": [{"additionals": "s0pZKy7v", "directXVersion": "KT9Rp53e", "diskSpace": "87TUuNDW", "graphics": "ye88W45q", "label": "fwr0PZcT", "osVersion": "lYpBNr3C", "processor": "lh55T3WM", "ram": "JPhsy6wl", "soundCard": "mYKxFlja"}, {"additionals": "OaGVkgO2", "directXVersion": "FE6tmM3G", "diskSpace": "lrINOGe8", "graphics": "FW6au328", "label": "nn7I41jF", "osVersion": "xkwpCojS", "processor": "BpBbJJQC", "ram": "rHxymWko", "soundCard": "iOy9BEQ8"}, {"additionals": "f9ykv8So", "directXVersion": "31b4qGQd", "diskSpace": "py9YTu9d", "graphics": "PKAquytk", "label": "0LApH8Qu", "osVersion": "I56Mmst4", "processor": "tIsnHm7j", "ram": "DPTQTrhi", "soundCard": "c53afgz6"}]}, "platforms": ["Windows", "Linux", "IOS"], "players": ["Single", "MMO", "Single"], "primaryGenre": "MassivelyMultiplayer", "publisher": "DckStsmZ", "releaseDate": "1975-08-20T00:00:00Z", "websiteUrl": "5A8EK3XP"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateApp \
    --itemId 'Xp1JJ3p7' \
    --namespace $AB_NAMESPACE \
    --storeId '65T1iV4p' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 133 'UpdateApp' test.out

#- 134 DisableItem
$CLI_EXE \
    --sn platform \
    --op DisableItem \
    --itemId 'rdkjCoeI' \
    --namespace $AB_NAMESPACE \
    --storeId 'jeLam6kY' \
    > test.out 2>&1
eval_tap $? 134 'DisableItem' test.out

#- 135 GetItemDynamicData
$CLI_EXE \
    --sn platform \
    --op GetItemDynamicData \
    --itemId 'X34Suo05' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 135 'GetItemDynamicData' test.out

#- 136 EnableItem
$CLI_EXE \
    --sn platform \
    --op EnableItem \
    --itemId 'TWEL2gs1' \
    --namespace $AB_NAMESPACE \
    --storeId '0Mp4FVgf' \
    > test.out 2>&1
eval_tap $? 136 'EnableItem' test.out

#- 137 FeatureItem
$CLI_EXE \
    --sn platform \
    --op FeatureItem \
    --feature 'jPqvecca' \
    --itemId 'QyWwE6Yv' \
    --namespace $AB_NAMESPACE \
    --storeId 'c0nJJsFK' \
    > test.out 2>&1
eval_tap $? 137 'FeatureItem' test.out

#- 138 DefeatureItem
$CLI_EXE \
    --sn platform \
    --op DefeatureItem \
    --feature '0OghGHrD' \
    --itemId 'hOqYic4o' \
    --namespace $AB_NAMESPACE \
    --storeId 'ouYlHeZY' \
    > test.out 2>&1
eval_tap $? 138 'DefeatureItem' test.out

#- 139 GetLocaleItem
$CLI_EXE \
    --sn platform \
    --op GetLocaleItem \
    --itemId '3FENfoGs' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --language 'GWBov7Je' \
    --populateBundle 'true' \
    --region '69AICz1c' \
    --storeId 'cI0uH34E' \
    > test.out 2>&1
eval_tap $? 139 'GetLocaleItem' test.out

#- 140 UpdateItemPurchaseCondition
# body param: body
echo '{"purchaseCondition": {"conditionGroups": [{"operator": "or", "predicates": [{"anyOf": 11, "code": "VrW1f3Ez", "comparison": "isGreaterThan", "name": "6KtiJVg2", "predicateType": "EntitlementPredicate", "value": "7vnoPE35", "values": ["zKn7ev3c", "vu0BYka7", "OCA1FZOV"]}, {"anyOf": 77, "code": "yOqXjDk5", "comparison": "includes", "name": "zSQPIf8l", "predicateType": "SeasonPassPredicate", "value": "uvBLDqn7", "values": ["Cwlhe6lp", "Re4PRJLI", "jI3n9q8p"]}, {"anyOf": 78, "code": "MYmh3GiY", "comparison": "isLessThanOrEqual", "name": "cqqxcrPH", "predicateType": "SeasonTierPredicate", "value": "mE08zETi", "values": ["p5q1TBNf", "CdP1iqI5", "AaV00yzz"]}]}, {"operator": "or", "predicates": [{"anyOf": 84, "code": "KY0covG4", "comparison": "isLessThan", "name": "cnSBHDv7", "predicateType": "SeasonPassPredicate", "value": "0qA60brb", "values": ["KSRKnutU", "TQdae1R9", "lxtT5QLX"]}, {"anyOf": 16, "code": "JkwK5Yqu", "comparison": "isGreaterThan", "name": "cS9YNzmV", "predicateType": "SeasonTierPredicate", "value": "4Nue5fyz", "values": ["UjHJDPeP", "IgVKNyCA", "PYwMh6nW"]}, {"anyOf": 75, "code": "QVdCLX73", "comparison": "isLessThan", "name": "J0jHMTF8", "predicateType": "SeasonPassPredicate", "value": "aVxjtohI", "values": ["eXrQ1Wlw", "InKByhnK", "8hP4SKkW"]}]}, {"operator": "or", "predicates": [{"anyOf": 65, "code": "5Eln8ozR", "comparison": "is", "name": "FCjfkhfu", "predicateType": "SeasonPassPredicate", "value": "ocZdGgAB", "values": ["oE4MuqJV", "QJSeJPdv", "XYwVhRat"]}, {"anyOf": 12, "code": "iSM1qUUw", "comparison": "isLessThan", "name": "IxFhLszf", "predicateType": "EntitlementPredicate", "value": "JrfX7SOy", "values": ["5OBNJpNo", "35PQJoe8", "CCwJhL4Z"]}, {"anyOf": 26, "code": "vayHgqRN", "comparison": "isNot", "name": "fxFYw9aX", "predicateType": "SeasonPassPredicate", "value": "KwrItqYW", "values": ["Dx4T5M2j", "VZ14KGQT", "YVccn0iN"]}]}]}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateItemPurchaseCondition \
    --itemId 'jbrmjbMb' \
    --namespace $AB_NAMESPACE \
    --storeId 'nlTdVgaQ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 140 'UpdateItemPurchaseCondition' test.out

#- 141 ReturnItem
# body param: body
echo '{"orderNo": "Dc9VWmXq"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ReturnItem \
    --itemId 'J3o2zUlg' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 141 'ReturnItem' test.out

#- 142 QueryKeyGroups
$CLI_EXE \
    --sn platform \
    --op QueryKeyGroups \
    --namespace $AB_NAMESPACE \
    --limit '50' \
    --name '6XLsNv3b' \
    --offset '30' \
    --tag '4D6jXMoW' \
    > test.out 2>&1
eval_tap $? 142 'QueryKeyGroups' test.out

#- 143 CreateKeyGroup
# body param: body
echo '{"description": "2DCapSGk", "name": "qVLuzBu4", "status": "ACTIVE", "tags": ["hfDVcKT6", "yR9mfnpj", "KSecE9u8"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateKeyGroup \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 143 'CreateKeyGroup' test.out

#- 144 GetKeyGroupByBoothName
eval_tap 0 144 'GetKeyGroupByBoothName # SKIP deprecated' test.out

#- 145 GetKeyGroup
$CLI_EXE \
    --sn platform \
    --op GetKeyGroup \
    --keyGroupId 'oa4ml1v7' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 145 'GetKeyGroup' test.out

#- 146 UpdateKeyGroup
# body param: body
echo '{"description": "ZAYFtm2R", "name": "Gooia6Ri", "status": "ACTIVE", "tags": ["AaQFSIKu", "100VxGww", "ClOM8nnl"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateKeyGroup \
    --keyGroupId 'GltZwNoA' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 146 'UpdateKeyGroup' test.out

#- 147 GetKeyGroupDynamic
$CLI_EXE \
    --sn platform \
    --op GetKeyGroupDynamic \
    --keyGroupId 'UL6NjSet' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 147 'GetKeyGroupDynamic' test.out

#- 148 ListKeys
$CLI_EXE \
    --sn platform \
    --op ListKeys \
    --keyGroupId 'MdAKIwjx' \
    --namespace $AB_NAMESPACE \
    --limit '51' \
    --offset '7' \
    --status 'ACQUIRED' \
    > test.out 2>&1
eval_tap $? 148 'ListKeys' test.out

#- 149 UploadKeys
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UploadKeys \
    --keyGroupId 'ft3OLlJe' \
    --namespace $AB_NAMESPACE \
    --upload file $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 149 'UploadKeys' test.out

#- 150 QueryOrders
$CLI_EXE \
    --sn platform \
    --op QueryOrders \
    --namespace $AB_NAMESPACE \
    --endTime 'hSn9BBip' \
    --limit '28' \
    --offset '87' \
    --orderNos '["bx1AC6xM", "hCMtTScU", "Fm6iY573"]' \
    --sortBy 'ZOrRYwXs' \
    --startTime 'T8gnCOqA' \
    --status 'FULFILL_FAILED' \
    --withTotal 'true' \
    > test.out 2>&1
eval_tap $? 150 'QueryOrders' test.out

#- 151 GetOrderStatistics
$CLI_EXE \
    --sn platform \
    --op GetOrderStatistics \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 151 'GetOrderStatistics' test.out

#- 152 GetOrder
$CLI_EXE \
    --sn platform \
    --op GetOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'mKkmbIXJ' \
    > test.out 2>&1
eval_tap $? 152 'GetOrder' test.out

#- 153 RefundOrder
# body param: body
echo '{"description": "fmtYflBN"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RefundOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'xPuNNHdV' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 153 'RefundOrder' test.out

#- 154 GetPaymentCallbackConfig
eval_tap 0 154 'GetPaymentCallbackConfig # SKIP deprecated' test.out

#- 155 UpdatePaymentCallbackConfig
eval_tap 0 155 'UpdatePaymentCallbackConfig # SKIP deprecated' test.out

#- 156 GetPaymentMerchantConfig
$CLI_EXE \
    --sn platform \
    --op GetPaymentMerchantConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 156 'GetPaymentMerchantConfig' test.out

#- 157 UpdatePaymentDomainWhitelistConfig
# body param: body
echo '{"domains": ["02SoZUQu", "2fs9iniL", "sVsw7fh0"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePaymentDomainWhitelistConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 157 'UpdatePaymentDomainWhitelistConfig' test.out

#- 158 QueryPaymentNotifications
$CLI_EXE \
    --sn platform \
    --op QueryPaymentNotifications \
    --namespace $AB_NAMESPACE \
    --endDate '3SCVNKlE' \
    --externalId 'kJB81GMV' \
    --limit '35' \
    --notificationSource 'WXPAY' \
    --notificationType 'heTKk1QQ' \
    --offset '65' \
    --paymentOrderNo 'GAg4XE4j' \
    --startDate 'g3JbIq9r' \
    --status 'WARN' \
    > test.out 2>&1
eval_tap $? 158 'QueryPaymentNotifications' test.out

#- 159 QueryPaymentOrders
$CLI_EXE \
    --sn platform \
    --op QueryPaymentOrders \
    --namespace $AB_NAMESPACE \
    --channel 'INTERNAL' \
    --extTxId 'vXeS7ior' \
    --limit '83' \
    --offset '44' \
    --status 'CHARGE_FAILED' \
    > test.out 2>&1
eval_tap $? 159 'QueryPaymentOrders' test.out

#- 160 CreatePaymentOrderByDedicated
# body param: body
echo '{"currencyCode": "oCvD0QVc", "currencyNamespace": "Kv4GJmw5", "customParameters": {"MRPOGNSm": {}, "opiQomnA": {}, "lTZXWasj": {}}, "description": "1tKyGqEZ", "extOrderNo": "tNyoVdRY", "extUserId": "LyCLgFVy", "itemType": "MEDIA", "language": "uKC_KWIM", "metadata": {"4sRSuM2b": "QZgjwSaI", "kpVDbiFX": "DOwm0DwA", "T5tyrSC6": "cRqLqOOK"}, "notifyUrl": "i1hfjfk9", "omitNotification": false, "platform": "rDMD4H5t", "price": 13, "recurringPaymentOrderNo": "SfjTGt9l", "region": "T6MG5Mor", "returnUrl": "D7uF6hpw", "sandbox": true, "sku": "b7LreJbK", "subscriptionId": "OlAQNWtQ", "targetNamespace": "HtTdMVRW", "targetUserId": "VTtCCkON", "title": "rLP1O81o"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreatePaymentOrderByDedicated \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 160 'CreatePaymentOrderByDedicated' test.out

#- 161 ListExtOrderNoByExtTxId
$CLI_EXE \
    --sn platform \
    --op ListExtOrderNoByExtTxId \
    --namespace $AB_NAMESPACE \
    --extTxId 'UaLvn6t9' \
    > test.out 2>&1
eval_tap $? 161 'ListExtOrderNoByExtTxId' test.out

#- 162 GetPaymentOrder
$CLI_EXE \
    --sn platform \
    --op GetPaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'PZvLocay' \
    > test.out 2>&1
eval_tap $? 162 'GetPaymentOrder' test.out

#- 163 ChargePaymentOrder
# body param: body
echo '{"extTxId": "H4V9mO0o", "paymentMethod": "r7b07wuz", "paymentProvider": "PAYPAL"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ChargePaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'TJnfwYFx' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 163 'ChargePaymentOrder' test.out

#- 164 RefundPaymentOrderByDedicated
# body param: body
echo '{"description": "MyHvhaWP"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RefundPaymentOrderByDedicated \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'Vav4QFHY' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 164 'RefundPaymentOrderByDedicated' test.out

#- 165 SimulatePaymentOrderNotification
# body param: body
echo '{"amount": 1, "currencyCode": "FdvZHsBs", "notifyType": "CHARGE", "paymentProvider": "STRIPE", "salesTax": 62, "vat": 96}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SimulatePaymentOrderNotification \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'v0tptH0J' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 165 'SimulatePaymentOrderNotification' test.out

#- 166 GetPaymentOrderChargeStatus
$CLI_EXE \
    --sn platform \
    --op GetPaymentOrderChargeStatus \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'aHBYFtM9' \
    > test.out 2>&1
eval_tap $? 166 'GetPaymentOrderChargeStatus' test.out

#- 167 GetPsnEntitlementOwnership
# body param: body
echo '{"accessToken": "IFUbSFD3", "serviceLabel": 98}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op GetPsnEntitlementOwnership \
    --entitlementLabel 'LrJYXbpo' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 167 'GetPsnEntitlementOwnership' test.out

#- 168 GetXboxEntitlementOwnership
# body param: body
echo '{"delegationToken": "SaKRvN3f", "sandboxId": "CNSCljP0"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op GetXboxEntitlementOwnership \
    --namespace $AB_NAMESPACE \
    --productSku 'aeelMOak' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 168 'GetXboxEntitlementOwnership' test.out

#- 169 GetPlatformEntitlementConfig
$CLI_EXE \
    --sn platform \
    --op GetPlatformEntitlementConfig \
    --namespace $AB_NAMESPACE \
    --platform 'Steam' \
    > test.out 2>&1
eval_tap $? 169 'GetPlatformEntitlementConfig' test.out

#- 170 UpdatePlatformEntitlementConfig
# body param: body
echo '{"allowedPlatformOrigins": ["Other", "Other", "Playstation"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePlatformEntitlementConfig \
    --namespace $AB_NAMESPACE \
    --platform 'Nintendo' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 170 'UpdatePlatformEntitlementConfig' test.out

#- 171 GetPlatformWalletConfig
$CLI_EXE \
    --sn platform \
    --op GetPlatformWalletConfig \
    --namespace $AB_NAMESPACE \
    --platform 'IOS' \
    > test.out 2>&1
eval_tap $? 171 'GetPlatformWalletConfig' test.out

#- 172 UpdatePlatformWalletConfig
# body param: body
echo '{"allowedBalanceOrigins": ["Nintendo", "Other", "Xbox"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePlatformWalletConfig \
    --namespace $AB_NAMESPACE \
    --platform 'Xbox' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 172 'UpdatePlatformWalletConfig' test.out

#- 173 ResetPlatformWalletConfig
$CLI_EXE \
    --sn platform \
    --op ResetPlatformWalletConfig \
    --namespace $AB_NAMESPACE \
    --platform 'Other' \
    > test.out 2>&1
eval_tap $? 173 'ResetPlatformWalletConfig' test.out

#- 174 GetRevocationConfig
$CLI_EXE \
    --sn platform \
    --op GetRevocationConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 174 'GetRevocationConfig' test.out

#- 175 UpdateRevocationConfig
# body param: body
echo '{"entitlement": {"consumable": {"enabled": true, "strategy": "CUSTOM"}, "durable": {"enabled": true, "strategy": "REVOKE_OR_REPORT"}}, "wallet": {"enabled": false, "strategy": "CUSTOM"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateRevocationConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 175 'UpdateRevocationConfig' test.out

#- 176 DeleteRevocationConfig
$CLI_EXE \
    --sn platform \
    --op DeleteRevocationConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 176 'DeleteRevocationConfig' test.out

#- 177 QueryRevocationHistories
$CLI_EXE \
    --sn platform \
    --op QueryRevocationHistories \
    --namespace $AB_NAMESPACE \
    --endTime 'nfcs7ALL' \
    --limit '51' \
    --offset '1' \
    --source 'IAP' \
    --startTime 'Bapw4V7g' \
    --status 'SUCCESS' \
    --transactionId '2lfIQYEw' \
    --userId '1SeNegzI' \
    > test.out 2>&1
eval_tap $? 177 'QueryRevocationHistories' test.out

#- 178 GetRevocationPluginConfig
$CLI_EXE \
    --sn platform \
    --op GetRevocationPluginConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 178 'GetRevocationPluginConfig' test.out

#- 179 UpdateRevocationPluginConfig
# body param: body
echo '{"appConfig": {"appName": "hUcEPImS"}, "customConfig": {"connectionType": "INSECURE", "grpcServerAddress": "VHyUU4MS"}, "extendType": "CUSTOM"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateRevocationPluginConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 179 'UpdateRevocationPluginConfig' test.out

#- 180 DeleteRevocationPluginConfig
$CLI_EXE \
    --sn platform \
    --op DeleteRevocationPluginConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 180 'DeleteRevocationPluginConfig' test.out

#- 181 UploadRevocationPluginConfigCert
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UploadRevocationPluginConfigCert \
    --namespace $AB_NAMESPACE \
    --upload file $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 181 'UploadRevocationPluginConfigCert' test.out

#- 182 CreateReward
# body param: body
echo '{"description": "dr1mJ02x", "eventTopic": "yEOATsn4", "maxAwarded": 39, "maxAwardedPerUser": 67, "namespaceExpression": "JlH1UxY6", "rewardCode": "pZP1bNyw", "rewardConditions": [{"condition": "UGEeAYY2", "conditionName": "yv8sNVAA", "eventName": "91MLJEOM", "rewardItems": [{"duration": 80, "endDate": "1981-07-04T00:00:00Z", "identityType": "ITEM_ID", "itemId": "6FDM23kg", "quantity": 73, "sku": "43WzUi3W"}, {"duration": 44, "endDate": "1996-01-10T00:00:00Z", "identityType": "ITEM_SKU", "itemId": "gnP9B0yi", "quantity": 7, "sku": "j9IYqayF"}, {"duration": 49, "endDate": "1985-05-23T00:00:00Z", "identityType": "ITEM_SKU", "itemId": "u8Tn9MtC", "quantity": 74, "sku": "GWCrYRF2"}]}, {"condition": "cCfAdhsl", "conditionName": "7hmNNsDM", "eventName": "MaQaiv8R", "rewardItems": [{"duration": 24, "endDate": "1988-05-24T00:00:00Z", "identityType": "ITEM_ID", "itemId": "FXySkHmY", "quantity": 45, "sku": "pIq1qGjm"}, {"duration": 91, "endDate": "1983-10-26T00:00:00Z", "identityType": "ITEM_SKU", "itemId": "YubBHevE", "quantity": 82, "sku": "UgnRNOm5"}, {"duration": 43, "endDate": "1985-11-18T00:00:00Z", "identityType": "ITEM_ID", "itemId": "4IBqxekc", "quantity": 33, "sku": "s8UmhDJw"}]}, {"condition": "xq0UhJ70", "conditionName": "wyda48uD", "eventName": "e9K1kLCB", "rewardItems": [{"duration": 86, "endDate": "1976-09-15T00:00:00Z", "identityType": "ITEM_SKU", "itemId": "vNPgIIuQ", "quantity": 57, "sku": "oD16EYcM"}, {"duration": 22, "endDate": "1980-02-16T00:00:00Z", "identityType": "ITEM_ID", "itemId": "ECB5C6CN", "quantity": 90, "sku": "aPWqE7Mm"}, {"duration": 28, "endDate": "1976-04-16T00:00:00Z", "identityType": "ITEM_SKU", "itemId": "Ac5kSP0T", "quantity": 42, "sku": "p1llD6Fx"}]}], "userIdExpression": "JDj4FILh"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateReward \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 182 'CreateReward' test.out

#- 183 QueryRewards
$CLI_EXE \
    --sn platform \
    --op QueryRewards \
    --namespace $AB_NAMESPACE \
    --eventTopic 'cTLWMgft' \
    --limit '47' \
    --offset '76' \
    --sortBy '["rewardCode:asc", "namespace:asc"]' \
    > test.out 2>&1
eval_tap $? 183 'QueryRewards' test.out

#- 184 ExportRewards
$CLI_EXE \
    --sn platform \
    --op ExportRewards \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 184 'ExportRewards' test.out

#- 185 ImportRewards
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op ImportRewards \
    --namespace $AB_NAMESPACE \
    --replaceExisting 'false' \
    --upload file $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 185 'ImportRewards' test.out

#- 186 GetReward
$CLI_EXE \
    --sn platform \
    --op GetReward \
    --namespace $AB_NAMESPACE \
    --rewardId 'wt9fbFwM' \
    > test.out 2>&1
eval_tap $? 186 'GetReward' test.out

#- 187 UpdateReward
# body param: body
echo '{"description": "3ISppkDz", "eventTopic": "IqdcqivJ", "maxAwarded": 53, "maxAwardedPerUser": 60, "namespaceExpression": "AkfcTGGb", "rewardCode": "Lyqs4oLK", "rewardConditions": [{"condition": "jeHFYykO", "conditionName": "tWEI9B7B", "eventName": "g9ruDeMq", "rewardItems": [{"duration": 53, "endDate": "1971-12-01T00:00:00Z", "identityType": "ITEM_SKU", "itemId": "3gzKxpXy", "quantity": 58, "sku": "gAOgLSf3"}, {"duration": 29, "endDate": "1986-08-05T00:00:00Z", "identityType": "ITEM_SKU", "itemId": "IhajLrAk", "quantity": 57, "sku": "gurDcYqU"}, {"duration": 84, "endDate": "1999-01-17T00:00:00Z", "identityType": "ITEM_SKU", "itemId": "Gtnf3Jft", "quantity": 81, "sku": "y961S6BY"}]}, {"condition": "PXlwFnxt", "conditionName": "IOyneQGq", "eventName": "g0w67T8R", "rewardItems": [{"duration": 86, "endDate": "1997-09-20T00:00:00Z", "identityType": "ITEM_ID", "itemId": "4t5vE9hE", "quantity": 27, "sku": "EPBC77UI"}, {"duration": 74, "endDate": "1993-01-29T00:00:00Z", "identityType": "ITEM_ID", "itemId": "FxGgdd8r", "quantity": 2, "sku": "psZhb9bN"}, {"duration": 55, "endDate": "1986-06-26T00:00:00Z", "identityType": "ITEM_ID", "itemId": "4KRV9Jp5", "quantity": 78, "sku": "ixK5j72k"}]}, {"condition": "RQ7Piv5S", "conditionName": "xZuArjAA", "eventName": "QW0H3cwI", "rewardItems": [{"duration": 87, "endDate": "1979-09-20T00:00:00Z", "identityType": "ITEM_SKU", "itemId": "mPDJDA6I", "quantity": 58, "sku": "s9O27Q2V"}, {"duration": 67, "endDate": "1998-08-03T00:00:00Z", "identityType": "ITEM_SKU", "itemId": "uX0zCzBT", "quantity": 19, "sku": "VKaYsiL8"}, {"duration": 90, "endDate": "1972-07-15T00:00:00Z", "identityType": "ITEM_ID", "itemId": "k1Yn89gh", "quantity": 83, "sku": "14TaNxSc"}]}], "userIdExpression": "xPxWWMgB"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateReward \
    --namespace $AB_NAMESPACE \
    --rewardId 'v0nYfCm8' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 187 'UpdateReward' test.out

#- 188 DeleteReward
$CLI_EXE \
    --sn platform \
    --op DeleteReward \
    --namespace $AB_NAMESPACE \
    --rewardId 'ZyuE7cFY' \
    > test.out 2>&1
eval_tap $? 188 'DeleteReward' test.out

#- 189 CheckEventCondition
# body param: body
echo '{"payload": {"nxHRUYqT": {}, "HvkhWX2t": {}, "F211ZMhK": {}}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CheckEventCondition \
    --namespace $AB_NAMESPACE \
    --rewardId 'nLiz6Tg9' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 189 'CheckEventCondition' test.out

#- 190 DeleteRewardConditionRecord
# body param: body
echo '{"conditionName": "kcYioqBp", "userId": "vjs6mXTh"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op DeleteRewardConditionRecord \
    --namespace $AB_NAMESPACE \
    --rewardId 'A3hkIkO0' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 190 'DeleteRewardConditionRecord' test.out

#- 191 QuerySections
$CLI_EXE \
    --sn platform \
    --op QuerySections \
    --namespace $AB_NAMESPACE \
    --end 'WyU8v63r' \
    --limit '33' \
    --offset '95' \
    --start 'XqG26ygO' \
    --storeId 'o4zmSSv1' \
    --viewId 'oRkqs2tf' \
    > test.out 2>&1
eval_tap $? 191 'QuerySections' test.out

#- 192 CreateSection
# body param: body
echo '{"active": true, "displayOrder": 84, "endDate": "1972-02-17T00:00:00Z", "ext": {"IC2mewuG": {}, "t6Rtgu9c": {}, "M0T0yFUJ": {}}, "fixedPeriodRotationConfig": {"backfillType": "CUSTOM", "duration": 95, "itemCount": 85, "rule": "SEQUENCE"}, "items": [{"id": "KotQSlAK", "sku": "rpiNsnMX"}, {"id": "aCu1kDLJ", "sku": "JOiVzDvp"}, {"id": "vOttAbw2", "sku": "6tvsYQrM"}], "localizations": {"x2Xwd3Gy": {"description": "6Pneirxk", "localExt": {"oY2MVuxU": {}, "HQZ1WnGg": {}, "DYwx74aU": {}}, "longDescription": "ky3mval2", "title": "Iucze1Fi"}, "w6r5aEbs": {"description": "rQGKeG2D", "localExt": {"K0j2R0dX": {}, "03QlVMCf": {}, "OnQuNEYO": {}}, "longDescription": "27z18VBx", "title": "UVa0BWwW"}, "iR3KPZT7": {"description": "ENhjVRVy", "localExt": {"LA2nxRUB": {}, "Xg34fs4m": {}, "O0pJmfAq": {}}, "longDescription": "afJqjJbw", "title": "MTa0TT6O"}}, "name": "LpTTT5ZP", "rotationType": "NONE", "startDate": "1992-04-03T00:00:00Z", "viewId": "rkm1zu8X"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateSection \
    --namespace $AB_NAMESPACE \
    --storeId 'h6BuzHlE' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 192 'CreateSection' test.out

#- 193 PurgeExpiredSection
$CLI_EXE \
    --sn platform \
    --op PurgeExpiredSection \
    --namespace $AB_NAMESPACE \
    --storeId 'AaugtGMw' \
    > test.out 2>&1
eval_tap $? 193 'PurgeExpiredSection' test.out

#- 194 GetSection
$CLI_EXE \
    --sn platform \
    --op GetSection \
    --namespace $AB_NAMESPACE \
    --sectionId 'Gfto57zd' \
    --storeId 'spgER0sv' \
    > test.out 2>&1
eval_tap $? 194 'GetSection' test.out

#- 195 UpdateSection
# body param: body
echo '{"active": false, "displayOrder": 4, "endDate": "1991-09-14T00:00:00Z", "ext": {"OujPlTYM": {}, "y1BPvuQ3": {}, "D5Xa9fi7": {}}, "fixedPeriodRotationConfig": {"backfillType": "NONE", "duration": 61, "itemCount": 52, "rule": "SEQUENCE"}, "items": [{"id": "sErCAuRM", "sku": "WCP6wjt6"}, {"id": "UhprkQN5", "sku": "d4ZOCM32"}, {"id": "CP5bDao3", "sku": "JOsi2Czt"}], "localizations": {"fpO7AycJ": {"description": "jviX6w0k", "localExt": {"7QswZV6g": {}, "Q2MTtH1S": {}, "Kltjhuc8": {}}, "longDescription": "kwGS2Mqo", "title": "28htVwqL"}, "TREr2YiW": {"description": "LwEBAE8h", "localExt": {"ymhFxInH": {}, "uG0xkz1y": {}, "SXIC0VTP": {}}, "longDescription": "VHh2sScx", "title": "pOoZeKY7"}, "aSezIBUQ": {"description": "RIdfAu0Z", "localExt": {"HvD6HwOH": {}, "NBbd9pjS": {}, "UOYE90lo": {}}, "longDescription": "k0amgAte", "title": "qyzj7yto"}}, "name": "PSQlFc0A", "rotationType": "CUSTOM", "startDate": "1998-10-13T00:00:00Z", "viewId": "KWseXope"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateSection \
    --namespace $AB_NAMESPACE \
    --sectionId 'sRLxNtPT' \
    --storeId 'Hu3C0n2w' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 195 'UpdateSection' test.out

#- 196 DeleteSection
$CLI_EXE \
    --sn platform \
    --op DeleteSection \
    --namespace $AB_NAMESPACE \
    --sectionId 'bRDd13vo' \
    --storeId 'rlS9y9q8' \
    > test.out 2>&1
eval_tap $? 196 'DeleteSection' test.out

#- 197 ListStores
$CLI_EXE \
    --sn platform \
    --op ListStores \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 197 'ListStores' test.out

#- 198 CreateStore
# body param: body
echo '{"defaultLanguage": "r2CrGIlA", "defaultRegion": "IG3wudCI", "description": "KXM4W6FO", "supportedLanguages": ["S8AYekBb", "AlInDoJT", "SQ8PkzqO"], "supportedRegions": ["9Wv2lTqi", "lDcrOYQ5", "4q2VDN0M"], "title": "dlvLK88k"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateStore \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 198 'CreateStore' test.out

#- 199 GetCatalogDefinition
$CLI_EXE \
    --sn platform \
    --op GetCatalogDefinition \
    --namespace $AB_NAMESPACE \
    --catalogType 'SECTION' \
    > test.out 2>&1
eval_tap $? 199 'GetCatalogDefinition' test.out

#- 200 DownloadCSVTemplates
$CLI_EXE \
    --sn platform \
    --op DownloadCSVTemplates \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 200 'DownloadCSVTemplates' test.out

#- 201 ExportStoreByCSV
# body param: body
echo '{"catalogType": "APP", "fieldsToBeIncluded": ["UjSo2hBv", "w9emMO0g", "kLRurt68"], "idsToBeExported": ["QwHWFox8", "EGwZFoiI", "I7SqxumN"], "storeId": "HTpAVFOu"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ExportStoreByCSV \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 201 'ExportStoreByCSV' test.out

#- 202 ImportStore
eval_tap 0 202 'ImportStore # SKIP deprecated' test.out

#- 203 GetPublishedStore
$CLI_EXE \
    --sn platform \
    --op GetPublishedStore \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 203 'GetPublishedStore' test.out

#- 204 DeletePublishedStore
$CLI_EXE \
    --sn platform \
    --op DeletePublishedStore \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 204 'DeletePublishedStore' test.out

#- 205 GetPublishedStoreBackup
$CLI_EXE \
    --sn platform \
    --op GetPublishedStoreBackup \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 205 'GetPublishedStoreBackup' test.out

#- 206 RollbackPublishedStore
$CLI_EXE \
    --sn platform \
    --op RollbackPublishedStore \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 206 'RollbackPublishedStore' test.out

#- 207 GetStore
$CLI_EXE \
    --sn platform \
    --op GetStore \
    --namespace $AB_NAMESPACE \
    --storeId 'quskVjtX' \
    > test.out 2>&1
eval_tap $? 207 'GetStore' test.out

#- 208 UpdateStore
# body param: body
echo '{"defaultLanguage": "759LgscY", "defaultRegion": "y4Ne0624", "description": "wObLHvJo", "supportedLanguages": ["qpmBmg2U", "zPUc959M", "el3nYYdI"], "supportedRegions": ["nFfM70rg", "V1KcgFRV", "UOVcDBxp"], "title": "FtmX3YkG"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateStore \
    --namespace $AB_NAMESPACE \
    --storeId 'brLETvkc' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 208 'UpdateStore' test.out

#- 209 DeleteStore
$CLI_EXE \
    --sn platform \
    --op DeleteStore \
    --namespace $AB_NAMESPACE \
    --storeId 'Dq5zqYjz' \
    > test.out 2>&1
eval_tap $? 209 'DeleteStore' test.out

#- 210 QueryChanges
$CLI_EXE \
    --sn platform \
    --op QueryChanges \
    --namespace $AB_NAMESPACE \
    --storeId 'Vi59BF9M' \
    --action 'CREATE' \
    --itemSku 'yBiaNG1E' \
    --itemType 'LOOTBOX' \
    --limit '95' \
    --offset '88' \
    --selected 'true' \
    --sortBy '["createdAt", "createdAt:asc"]' \
    --status 'PUBLISHED' \
    --type 'STORE' \
    --updatedAtEnd 'kaQYKUXw' \
    --updatedAtStart 'giPYN3d6' \
    --withTotal 'true' \
    > test.out 2>&1
eval_tap $? 210 'QueryChanges' test.out

#- 211 PublishAll
$CLI_EXE \
    --sn platform \
    --op PublishAll \
    --namespace $AB_NAMESPACE \
    --storeId 'uJNYx3L2' \
    > test.out 2>&1
eval_tap $? 211 'PublishAll' test.out

#- 212 PublishSelected
$CLI_EXE \
    --sn platform \
    --op PublishSelected \
    --namespace $AB_NAMESPACE \
    --storeId 'SBeLWGCO' \
    > test.out 2>&1
eval_tap $? 212 'PublishSelected' test.out

#- 213 SelectAllRecords
$CLI_EXE \
    --sn platform \
    --op SelectAllRecords \
    --namespace $AB_NAMESPACE \
    --storeId '2BzLXGmD' \
    > test.out 2>&1
eval_tap $? 213 'SelectAllRecords' test.out

#- 214 SelectAllRecordsByCriteria
$CLI_EXE \
    --sn platform \
    --op SelectAllRecordsByCriteria \
    --namespace $AB_NAMESPACE \
    --storeId 'zeQvbAsz' \
    --action 'DELETE' \
    --itemSku 'EUeNCE47' \
    --itemType 'INGAMEITEM' \
    --selected 'true' \
    --type 'CATEGORY' \
    --updatedAtEnd 'AJvzYBzU' \
    --updatedAtStart 'uU0D8blo' \
    > test.out 2>&1
eval_tap $? 214 'SelectAllRecordsByCriteria' test.out

#- 215 GetStatistic
$CLI_EXE \
    --sn platform \
    --op GetStatistic \
    --namespace $AB_NAMESPACE \
    --storeId '2x5SeDbb' \
    --action 'CREATE' \
    --itemSku 'sxv1C18v' \
    --itemType 'INGAMEITEM' \
    --type 'STORE' \
    --updatedAtEnd 'enWyb4Qn' \
    --updatedAtStart 'vY1gi5kK' \
    > test.out 2>&1
eval_tap $? 215 'GetStatistic' test.out

#- 216 UnselectAllRecords
$CLI_EXE \
    --sn platform \
    --op UnselectAllRecords \
    --namespace $AB_NAMESPACE \
    --storeId 'yxgxzcJB' \
    > test.out 2>&1
eval_tap $? 216 'UnselectAllRecords' test.out

#- 217 SelectRecord
$CLI_EXE \
    --sn platform \
    --op SelectRecord \
    --changeId 'r0RxmYZQ' \
    --namespace $AB_NAMESPACE \
    --storeId 'nw0YgE4S' \
    > test.out 2>&1
eval_tap $? 217 'SelectRecord' test.out

#- 218 UnselectRecord
$CLI_EXE \
    --sn platform \
    --op UnselectRecord \
    --changeId '2qvpo2T6' \
    --namespace $AB_NAMESPACE \
    --storeId 'TZXLkBxw' \
    > test.out 2>&1
eval_tap $? 218 'UnselectRecord' test.out

#- 219 CloneStore
$CLI_EXE \
    --sn platform \
    --op CloneStore \
    --namespace $AB_NAMESPACE \
    --storeId 'QYSxj7X1' \
    --targetStoreId 'D9Vnwq72' \
    > test.out 2>&1
eval_tap $? 219 'CloneStore' test.out

#- 220 ExportStore
eval_tap 0 220 'ExportStore # SKIP deprecated' test.out

#- 221 QueryImportHistory
$CLI_EXE \
    --sn platform \
    --op QueryImportHistory \
    --namespace $AB_NAMESPACE \
    --storeId 'zvYcn623' \
    --end 'pld2wh38' \
    --limit '29' \
    --offset '16' \
    --sortBy '4CICaVz5' \
    --start 'f8WMV0N7' \
    --success 'true' \
    > test.out 2>&1
eval_tap $? 221 'QueryImportHistory' test.out

#- 222 ImportStoreByCSV
# form data upload: category
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
# form data upload: display
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
# form data upload: item
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
# form data upload: section
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op ImportStoreByCSV \
    --namespace $AB_NAMESPACE \
    --storeId 'jyX2pa5b' \
    --upload category $TEMP_FILE_UPLOAD \
    --upload display $TEMP_FILE_UPLOAD \
    --upload item $TEMP_FILE_UPLOAD \
    --notes 'wq6RnHlV' \
    --upload section $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 222 'ImportStoreByCSV' test.out

#- 223 QuerySubscriptions
$CLI_EXE \
    --sn platform \
    --op QuerySubscriptions \
    --namespace $AB_NAMESPACE \
    --chargeStatus 'RECURRING_CHARGING' \
    --itemId 'zdv6n7Xg' \
    --limit '22' \
    --offset '22' \
    --sku 'c8AnjxhI' \
    --status 'CANCELLED' \
    --subscribedBy 'USER' \
    --userId 'J32z1Ubk' \
    > test.out 2>&1
eval_tap $? 223 'QuerySubscriptions' test.out

#- 224 RecurringChargeSubscription
$CLI_EXE \
    --sn platform \
    --op RecurringChargeSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'SYdTcLBB' \
    > test.out 2>&1
eval_tap $? 224 'RecurringChargeSubscription' test.out

#- 225 GetTicketDynamic
$CLI_EXE \
    --sn platform \
    --op GetTicketDynamic \
    --boothName 'j33xe9F3' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 225 'GetTicketDynamic' test.out

#- 226 DecreaseTicketSale
# body param: body
echo '{"orderNo": "6kPvZY4s"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op DecreaseTicketSale \
    --boothName 'oMzZiV0G' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 226 'DecreaseTicketSale' test.out

#- 227 GetTicketBoothID
$CLI_EXE \
    --sn platform \
    --op GetTicketBoothID \
    --boothName '5E0oDSkx' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 227 'GetTicketBoothID' test.out

#- 228 IncreaseTicketSale
# body param: body
echo '{"count": 96, "orderNo": "w4GxD8kz"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op IncreaseTicketSale \
    --boothName 'WDA5AZlo' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 228 'IncreaseTicketSale' test.out

#- 229 Commit
# body param: body
echo '{"actions": [{"operations": [{"creditPayload": {"balanceOrigin": "System", "count": 78, "currencyCode": "sCogY8t3", "expireAt": "1993-06-23T00:00:00Z"}, "debitPayload": {"count": 64, "currencyCode": "46q7aHBH", "walletPlatform": "Steam"}, "fulFillItemPayload": {"count": 7, "entitlementCollectionId": "SzAvfX24", "entitlementOrigin": "Epic", "itemIdentity": "15KNlhYl", "itemIdentityType": "ITEM_SKU"}, "revokeEntitlementPayload": {"count": 55, "entitlementId": "jowusCuJ"}, "type": "FULFILL_ITEM"}, {"creditPayload": {"balanceOrigin": "System", "count": 40, "currencyCode": "cG4fAdZM", "expireAt": "1990-11-22T00:00:00Z"}, "debitPayload": {"count": 77, "currencyCode": "LwMmoUC1", "walletPlatform": "Other"}, "fulFillItemPayload": {"count": 93, "entitlementCollectionId": "531zzlGZ", "entitlementOrigin": "GooglePlay", "itemIdentity": "sbaDck8S", "itemIdentityType": "ITEM_ID"}, "revokeEntitlementPayload": {"count": 32, "entitlementId": "0steJGlq"}, "type": "FULFILL_ITEM"}, {"creditPayload": {"balanceOrigin": "Other", "count": 16, "currencyCode": "9LLYnN8M", "expireAt": "1994-02-08T00:00:00Z"}, "debitPayload": {"count": 30, "currencyCode": "4pzIhs0r", "walletPlatform": "Epic"}, "fulFillItemPayload": {"count": 47, "entitlementCollectionId": "WEUZ1Okj", "entitlementOrigin": "Other", "itemIdentity": "EEI1bYHz", "itemIdentityType": "ITEM_ID"}, "revokeEntitlementPayload": {"count": 96, "entitlementId": "gQqyIsir"}, "type": "DEBIT_WALLET"}], "userId": "eqDmM7kd"}, {"operations": [{"creditPayload": {"balanceOrigin": "IOS", "count": 66, "currencyCode": "yPGAQXTZ", "expireAt": "1996-12-21T00:00:00Z"}, "debitPayload": {"count": 91, "currencyCode": "871S0u9b", "walletPlatform": "GooglePlay"}, "fulFillItemPayload": {"count": 50, "entitlementCollectionId": "H5f0nnYD", "entitlementOrigin": "System", "itemIdentity": "t90W5ihg", "itemIdentityType": "ITEM_ID"}, "revokeEntitlementPayload": {"count": 33, "entitlementId": "KSe0G8zS"}, "type": "DEBIT_WALLET"}, {"creditPayload": {"balanceOrigin": "Steam", "count": 60, "currencyCode": "lCk3biK7", "expireAt": "1976-05-20T00:00:00Z"}, "debitPayload": {"count": 51, "currencyCode": "feQSVzUP", "walletPlatform": "IOS"}, "fulFillItemPayload": {"count": 13, "entitlementCollectionId": "9Q7ombmg", "entitlementOrigin": "Twitch", "itemIdentity": "EEwTC6Cg", "itemIdentityType": "ITEM_SKU"}, "revokeEntitlementPayload": {"count": 34, "entitlementId": "d2GO56DY"}, "type": "DEBIT_WALLET"}, {"creditPayload": {"balanceOrigin": "Steam", "count": 77, "currencyCode": "4Uc5kmnY", "expireAt": "1980-05-14T00:00:00Z"}, "debitPayload": {"count": 41, "currencyCode": "xLQU3rcD", "walletPlatform": "Xbox"}, "fulFillItemPayload": {"count": 80, "entitlementCollectionId": "app4L35L", "entitlementOrigin": "Steam", "itemIdentity": "sPNZPIPA", "itemIdentityType": "ITEM_ID"}, "revokeEntitlementPayload": {"count": 40, "entitlementId": "YKIykce8"}, "type": "FULFILL_ITEM"}], "userId": "SIcSTHXj"}, {"operations": [{"creditPayload": {"balanceOrigin": "GooglePlay", "count": 26, "currencyCode": "yPC6TlEI", "expireAt": "1988-09-30T00:00:00Z"}, "debitPayload": {"count": 3, "currencyCode": "deP2dCHr", "walletPlatform": "Nintendo"}, "fulFillItemPayload": {"count": 23, "entitlementCollectionId": "TnVAZXVW", "entitlementOrigin": "Playstation", "itemIdentity": "CUxr98Pu", "itemIdentityType": "ITEM_ID"}, "revokeEntitlementPayload": {"count": 1, "entitlementId": "qrRshY1P"}, "type": "REVOKE_ENTITLEMENT"}, {"creditPayload": {"balanceOrigin": "Twitch", "count": 2, "currencyCode": "mLw2pOOx", "expireAt": "1990-12-08T00:00:00Z"}, "debitPayload": {"count": 4, "currencyCode": "K0CRHXGf", "walletPlatform": "Epic"}, "fulFillItemPayload": {"count": 89, "entitlementCollectionId": "BDKJKGbf", "entitlementOrigin": "System", "itemIdentity": "pP9X4rxR", "itemIdentityType": "ITEM_ID"}, "revokeEntitlementPayload": {"count": 38, "entitlementId": "grgicq5n"}, "type": "DEBIT_WALLET"}, {"creditPayload": {"balanceOrigin": "Nintendo", "count": 10, "currencyCode": "22owvWyK", "expireAt": "1979-06-26T00:00:00Z"}, "debitPayload": {"count": 96, "currencyCode": "a8dpMIc2", "walletPlatform": "Nintendo"}, "fulFillItemPayload": {"count": 75, "entitlementCollectionId": "Hs1yEryH", "entitlementOrigin": "Playstation", "itemIdentity": "aZttsTs8", "itemIdentityType": "ITEM_SKU"}, "revokeEntitlementPayload": {"count": 87, "entitlementId": "m9akW3Yr"}, "type": "DEBIT_WALLET"}], "userId": "O3NysDHr"}], "metadata": {"1GATHzry": {}, "80Yrbihr": {}, "R0gNwhXp": {}}, "needPreCheck": true, "transactionId": "MATPFtIu", "type": "tVayx8pt"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op Commit \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 229 'Commit' test.out

#- 230 GetTradeHistoryByCriteria
$CLI_EXE \
    --sn platform \
    --op GetTradeHistoryByCriteria \
    --namespace $AB_NAMESPACE \
    --limit '10' \
    --offset '10' \
    --status 'FAILED' \
    --type 'lWzQybKf' \
    --userId 'DIAVx6XM' \
    > test.out 2>&1
eval_tap $? 230 'GetTradeHistoryByCriteria' test.out

#- 231 GetTradeHistoryByTransactionId
$CLI_EXE \
    --sn platform \
    --op GetTradeHistoryByTransactionId \
    --namespace $AB_NAMESPACE \
    --transactionId 'TzgdtfgA' \
    > test.out 2>&1
eval_tap $? 231 'GetTradeHistoryByTransactionId' test.out

#- 232 UnlockSteamUserAchievement
# body param: body
echo '{"achievements": [{"id": "NqpCaEOo", "value": 52}, {"id": "z6kZ8eVc", "value": 37}, {"id": "LSVDmnOu", "value": 83}], "steamUserId": "yDrfxAwo"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UnlockSteamUserAchievement \
    --namespace $AB_NAMESPACE \
    --userId '1mXzS27t' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 232 'UnlockSteamUserAchievement' test.out

#- 233 GetXblUserAchievements
$CLI_EXE \
    --sn platform \
    --op GetXblUserAchievements \
    --namespace $AB_NAMESPACE \
    --userId 'a29t04zK' \
    --xboxUserId 'dChwhzv3' \
    > test.out 2>&1
eval_tap $? 233 'GetXblUserAchievements' test.out

#- 234 UpdateXblUserAchievement
# body param: body
echo '{"achievements": [{"id": "xLqSvkVZ", "percentComplete": 100}, {"id": "8qTIsnUQ", "percentComplete": 21}, {"id": "anWvvNuV", "percentComplete": 14}], "serviceConfigId": "E1rDb5HP", "titleId": "jg5r4w1y", "xboxUserId": "NLFRU4aZ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXblUserAchievement \
    --namespace $AB_NAMESPACE \
    --userId 'seLvJnID' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 234 'UpdateXblUserAchievement' test.out

#- 235 AnonymizeCampaign
$CLI_EXE \
    --sn platform \
    --op AnonymizeCampaign \
    --namespace $AB_NAMESPACE \
    --userId 'Ux2srSx0' \
    > test.out 2>&1
eval_tap $? 235 'AnonymizeCampaign' test.out

#- 236 AnonymizeEntitlement
$CLI_EXE \
    --sn platform \
    --op AnonymizeEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'FWL1wzRh' \
    > test.out 2>&1
eval_tap $? 236 'AnonymizeEntitlement' test.out

#- 237 AnonymizeFulfillment
$CLI_EXE \
    --sn platform \
    --op AnonymizeFulfillment \
    --namespace $AB_NAMESPACE \
    --userId 'XwmSYLNI' \
    > test.out 2>&1
eval_tap $? 237 'AnonymizeFulfillment' test.out

#- 238 AnonymizeIntegration
$CLI_EXE \
    --sn platform \
    --op AnonymizeIntegration \
    --namespace $AB_NAMESPACE \
    --userId 'cndJuTmy' \
    > test.out 2>&1
eval_tap $? 238 'AnonymizeIntegration' test.out

#- 239 AnonymizeOrder
$CLI_EXE \
    --sn platform \
    --op AnonymizeOrder \
    --namespace $AB_NAMESPACE \
    --userId 'MdCV3K6g' \
    > test.out 2>&1
eval_tap $? 239 'AnonymizeOrder' test.out

#- 240 AnonymizePayment
$CLI_EXE \
    --sn platform \
    --op AnonymizePayment \
    --namespace $AB_NAMESPACE \
    --userId 'JNEKhQa6' \
    > test.out 2>&1
eval_tap $? 240 'AnonymizePayment' test.out

#- 241 AnonymizeRevocation
$CLI_EXE \
    --sn platform \
    --op AnonymizeRevocation \
    --namespace $AB_NAMESPACE \
    --userId 'Ncaw1Igx' \
    > test.out 2>&1
eval_tap $? 241 'AnonymizeRevocation' test.out

#- 242 AnonymizeSubscription
$CLI_EXE \
    --sn platform \
    --op AnonymizeSubscription \
    --namespace $AB_NAMESPACE \
    --userId 'kJRdWGRJ' \
    > test.out 2>&1
eval_tap $? 242 'AnonymizeSubscription' test.out

#- 243 AnonymizeWallet
$CLI_EXE \
    --sn platform \
    --op AnonymizeWallet \
    --namespace $AB_NAMESPACE \
    --userId 'P2T8TsVm' \
    > test.out 2>&1
eval_tap $? 243 'AnonymizeWallet' test.out

#- 244 GetUserDLCByPlatform
$CLI_EXE \
    --sn platform \
    --op GetUserDLCByPlatform \
    --namespace $AB_NAMESPACE \
    --userId 'TKxQVwdm' \
    --type 'EPICGAMES' \
    > test.out 2>&1
eval_tap $? 244 'GetUserDLCByPlatform' test.out

#- 245 GetUserDLC
$CLI_EXE \
    --sn platform \
    --op GetUserDLC \
    --namespace $AB_NAMESPACE \
    --userId 'sa66L3Z1' \
    --includeAllNamespaces 'false' \
    --status 'FULFILLED' \
    --type 'OCULUS' \
    > test.out 2>&1
eval_tap $? 245 'GetUserDLC' test.out

#- 246 QueryUserEntitlements
$CLI_EXE \
    --sn platform \
    --op QueryUserEntitlements \
    --namespace $AB_NAMESPACE \
    --userId 'DANe8kgy' \
    --activeOnly 'false' \
    --appType 'DLC' \
    --collectionId '0b6QvGAr' \
    --entitlementClazz 'APP' \
    --entitlementName 'bLVZvYVm' \
    --features '["Uz4QaGRj", "Gf7TSNRw", "N3Eb1vD8"]' \
    --fuzzyMatchName 'false' \
    --ignoreActiveDate 'false' \
    --itemId '["9SBdaESu", "LCEtUZFC", "xKjt5rhO"]' \
    --limit '89' \
    --offset '17' \
    --origin 'Twitch' \
    > test.out 2>&1
eval_tap $? 246 'QueryUserEntitlements' test.out

#- 247 GrantUserEntitlement
# body param: body
echo '[{"collectionId": "JFr0AcGW", "endDate": "1971-11-18T00:00:00Z", "grantedCode": "NIacqWFv", "itemId": "hjKxU5Se", "itemNamespace": "AFXV6OLU", "language": "QN", "metadata": {"lnDmD1zd": {}, "WbD8k6TY": {}, "foyclJox": {}}, "origin": "GooglePlay", "quantity": 97, "region": "bti2llib", "source": "REWARD", "startDate": "1982-06-03T00:00:00Z", "storeId": "f6MYMKGB"}, {"collectionId": "QlIcxp6a", "endDate": "1990-01-15T00:00:00Z", "grantedCode": "DTnQgNuh", "itemId": "Aw63OxjF", "itemNamespace": "fQx09XQb", "language": "hcC-dq", "metadata": {"LxvqIOr9": {}, "rvdACPPQ": {}, "QpgQC3M8": {}}, "origin": "Twitch", "quantity": 31, "region": "QBEk2k4L", "source": "PURCHASE", "startDate": "1971-01-25T00:00:00Z", "storeId": "5GlRmYbH"}, {"collectionId": "Ymq8EKeh", "endDate": "1985-05-11T00:00:00Z", "grantedCode": "Ry0MxOZQ", "itemId": "Kpgr4qvZ", "itemNamespace": "kXdNhLG2", "language": "mwU_GayP", "metadata": {"eZl9LJ0B": {}, "J8E5pZ2I": {}, "iuC3VxLy": {}}, "origin": "Nintendo", "quantity": 20, "region": "7Kkw6Whq", "source": "ACHIEVEMENT", "startDate": "1996-04-16T00:00:00Z", "storeId": "gXyV6CWB"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op GrantUserEntitlement \
    --namespace $AB_NAMESPACE \
    --userId '1WSZV2da' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 247 'GrantUserEntitlement' test.out

#- 248 GetUserAppEntitlementByAppId
$CLI_EXE \
    --sn platform \
    --op GetUserAppEntitlementByAppId \
    --namespace $AB_NAMESPACE \
    --userId 'zKgLS7VC' \
    --activeOnly 'true' \
    --appId 'UblgM7nj' \
    > test.out 2>&1
eval_tap $? 248 'GetUserAppEntitlementByAppId' test.out

#- 249 QueryUserEntitlementsByAppType
$CLI_EXE \
    --sn platform \
    --op QueryUserEntitlementsByAppType \
    --namespace $AB_NAMESPACE \
    --userId 'fnfiK3ff' \
    --activeOnly 'false' \
    --limit '7' \
    --offset '8' \
    --appType 'DEMO' \
    > test.out 2>&1
eval_tap $? 249 'QueryUserEntitlementsByAppType' test.out

#- 250 GetUserEntitlementsByIds
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementsByIds \
    --namespace $AB_NAMESPACE \
    --userId 'Itvg68K4' \
    --ids '["3tvsmbbD", "OjwIvDcR", "UNLdySU5"]' \
    > test.out 2>&1
eval_tap $? 250 'GetUserEntitlementsByIds' test.out

#- 251 GetUserEntitlementByItemId
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'UD1qvPUz' \
    --activeOnly 'true' \
    --entitlementClazz 'LOOTBOX' \
    --platform 'PNAd1sSu' \
    --itemId 'iFaoGXaO' \
    > test.out 2>&1
eval_tap $? 251 'GetUserEntitlementByItemId' test.out

#- 252 GetUserActiveEntitlementsByItemIds
$CLI_EXE \
    --sn platform \
    --op GetUserActiveEntitlementsByItemIds \
    --namespace $AB_NAMESPACE \
    --userId 'HZVvSzJ3' \
    --ids '["jGoiE2yo", "ITIvTHjG", "9dEFhHtF"]' \
    --platform 'I60HavvA' \
    > test.out 2>&1
eval_tap $? 252 'GetUserActiveEntitlementsByItemIds' test.out

#- 253 GetUserEntitlementBySku
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementBySku \
    --namespace $AB_NAMESPACE \
    --userId 'ARn39ESk' \
    --activeOnly 'true' \
    --entitlementClazz 'APP' \
    --platform 'nOAZx1zV' \
    --sku 'KtxuNTDJ' \
    > test.out 2>&1
eval_tap $? 253 'GetUserEntitlementBySku' test.out

#- 254 ExistsAnyUserActiveEntitlement
$CLI_EXE \
    --sn platform \
    --op ExistsAnyUserActiveEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'SVFRJi4S' \
    --appIds '["U8K29NlS", "0eWmTIMJ", "aDvnyoPE"]' \
    --itemIds '["Qixw72zN", "XBq1MRrY", "ONEi3DJd"]' \
    --platform 'SvhBdgdv' \
    --skus '["vXpEU36u", "oxe1LAvl", "RiXeATaq"]' \
    > test.out 2>&1
eval_tap $? 254 'ExistsAnyUserActiveEntitlement' test.out

#- 255 ExistsAnyUserActiveEntitlementByItemIds
$CLI_EXE \
    --sn platform \
    --op ExistsAnyUserActiveEntitlementByItemIds \
    --namespace $AB_NAMESPACE \
    --userId 'qH2GHV55' \
    --platform 'f0QmVaeY' \
    --itemIds '["dFgngGir", "XkC3MFWK", "RzVos5E9"]' \
    > test.out 2>&1
eval_tap $? 255 'ExistsAnyUserActiveEntitlementByItemIds' test.out

#- 256 GetUserAppEntitlementOwnershipByAppId
$CLI_EXE \
    --sn platform \
    --op GetUserAppEntitlementOwnershipByAppId \
    --namespace $AB_NAMESPACE \
    --userId '5LYokTvA' \
    --appId 'J2oMUKff' \
    > test.out 2>&1
eval_tap $? 256 'GetUserAppEntitlementOwnershipByAppId' test.out

#- 257 GetUserEntitlementOwnershipByItemId
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementOwnershipByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'YufuTCSy' \
    --entitlementClazz 'APP' \
    --platform '4xrnCvml' \
    --itemId 'GKoo9A0T' \
    > test.out 2>&1
eval_tap $? 257 'GetUserEntitlementOwnershipByItemId' test.out

#- 258 GetUserEntitlementOwnershipByItemIds
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementOwnershipByItemIds \
    --namespace $AB_NAMESPACE \
    --userId '7CQIzVjQ' \
    --ids '["wtNPFl3r", "vg1LaLb1", "ztF6GJyn"]' \
    --platform '0cyvfS5y' \
    > test.out 2>&1
eval_tap $? 258 'GetUserEntitlementOwnershipByItemIds' test.out

#- 259 GetUserEntitlementOwnershipBySku
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementOwnershipBySku \
    --namespace $AB_NAMESPACE \
    --userId 'd0RpNr8U' \
    --entitlementClazz 'ENTITLEMENT' \
    --platform '0rogsA44' \
    --sku 'uzcEZNyz' \
    > test.out 2>&1
eval_tap $? 259 'GetUserEntitlementOwnershipBySku' test.out

#- 260 RevokeAllEntitlements
$CLI_EXE \
    --sn platform \
    --op RevokeAllEntitlements \
    --namespace $AB_NAMESPACE \
    --userId 'FY0Jod9M' \
    > test.out 2>&1
eval_tap $? 260 'RevokeAllEntitlements' test.out

#- 261 RevokeUserEntitlements
$CLI_EXE \
    --sn platform \
    --op RevokeUserEntitlements \
    --namespace $AB_NAMESPACE \
    --userId '6rWl5SNg' \
    --entitlementIds 'BUjHZq2l' \
    > test.out 2>&1
eval_tap $? 261 'RevokeUserEntitlements' test.out

#- 262 GetUserEntitlement
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlement \
    --entitlementId 'YvC8lUiT' \
    --namespace $AB_NAMESPACE \
    --userId 'qk1Ye4cy' \
    > test.out 2>&1
eval_tap $? 262 'GetUserEntitlement' test.out

#- 263 UpdateUserEntitlement
# body param: body
echo '{"collectionId": "ghO7j26p", "endDate": "1976-10-25T00:00:00Z", "nullFieldList": ["fHY63Sbq", "0p1jPmCN", "e1Gt3YNk"], "origin": "GooglePlay", "reason": "hzkG1OZJ", "startDate": "1982-03-16T00:00:00Z", "status": "ACTIVE", "useCount": 50}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateUserEntitlement \
    --entitlementId 'eo5ApGTi' \
    --namespace $AB_NAMESPACE \
    --userId 'yW3IIPda' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 263 'UpdateUserEntitlement' test.out

#- 264 ConsumeUserEntitlement
# body param: body
echo '{"metadata": {"JaKrmnzj": {}, "JKSgyVYD": {}, "CEoi1LA6": {}}, "options": ["kt7iGLWy", "msrGathY", "K3SAYFrs"], "platform": "0RxJrqzY", "requestId": "9vtCkYYK", "useCount": 35}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ConsumeUserEntitlement \
    --entitlementId '7B5hejTR' \
    --namespace $AB_NAMESPACE \
    --userId 'lYevGS8R' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 264 'ConsumeUserEntitlement' test.out

#- 265 DisableUserEntitlement
$CLI_EXE \
    --sn platform \
    --op DisableUserEntitlement \
    --entitlementId 'd8wdbnkI' \
    --namespace $AB_NAMESPACE \
    --userId 'kwWy9FuW' \
    > test.out 2>&1
eval_tap $? 265 'DisableUserEntitlement' test.out

#- 266 EnableUserEntitlement
$CLI_EXE \
    --sn platform \
    --op EnableUserEntitlement \
    --entitlementId 'BBOYJNw8' \
    --namespace $AB_NAMESPACE \
    --userId 'v2rzlQgO' \
    > test.out 2>&1
eval_tap $? 266 'EnableUserEntitlement' test.out

#- 267 GetUserEntitlementHistories
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementHistories \
    --entitlementId 'UNScxB39' \
    --namespace $AB_NAMESPACE \
    --userId 'hn3dokgW' \
    > test.out 2>&1
eval_tap $? 267 'GetUserEntitlementHistories' test.out

#- 268 RevokeUserEntitlement
# body param: body
echo '{"metadata": {"vB8M2ziZ": {}, "bbYCrL9i": {}, "6ZCq8YgK": {}}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RevokeUserEntitlement \
    --entitlementId 'zzwwgUdV' \
    --namespace $AB_NAMESPACE \
    --userId '6AIybl6d' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 268 'RevokeUserEntitlement' test.out

#- 269 RevokeUserEntitlementByUseCount
# body param: body
echo '{"reason": "4Q2wX29c", "useCount": 81}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RevokeUserEntitlementByUseCount \
    --entitlementId '89iBhT9y' \
    --namespace $AB_NAMESPACE \
    --userId 'FzXrdJcJ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 269 'RevokeUserEntitlementByUseCount' test.out

#- 270 PreCheckRevokeUserEntitlementByUseCount
$CLI_EXE \
    --sn platform \
    --op PreCheckRevokeUserEntitlementByUseCount \
    --entitlementId '4RHKQP3T' \
    --namespace $AB_NAMESPACE \
    --userId 'RBMkdy7S' \
    --quantity '50' \
    > test.out 2>&1
eval_tap $? 270 'PreCheckRevokeUserEntitlementByUseCount' test.out

#- 271 RevokeUseCount
eval_tap 0 271 'RevokeUseCount # SKIP deprecated' test.out

#- 272 SellUserEntitlement
# body param: body
echo '{"platform": "G2XkCs4o", "requestId": "OjM42YUP", "useCount": 47}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SellUserEntitlement \
    --entitlementId 'HLKqeQPi' \
    --namespace $AB_NAMESPACE \
    --userId 'nVeWF9Ih' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 272 'SellUserEntitlement' test.out

#- 273 FulfillItem
# body param: body
echo '{"duration": 7, "endDate": "1977-10-05T00:00:00Z", "entitlementCollectionId": "PpOiZi3g", "entitlementOrigin": "Xbox", "itemId": "iGQd1Gct", "itemSku": "pnPueDjP", "language": "sfqliu3t", "metadata": {"NXj3Bing": {}, "DK3a9rZ8": {}, "WvnAqw83": {}}, "order": {"currency": {"currencyCode": "NaJaA0AO", "currencySymbol": "g2ysPw1O", "currencyType": "VIRTUAL", "decimals": 35, "namespace": "iVMH3oK0"}, "ext": {"tv8QuAHk": {}, "82GO5QfZ": {}, "L4Aciwgc": {}}, "free": true}, "orderNo": "ToKbnvF3", "origin": "Oculus", "overrideBundleItemQty": {"3ldezYbo": 80, "ag3ZpSbK": 38, "Ng9IPoUl": 4}, "quantity": 67, "region": "dRvzimHj", "source": "REDEEM_CODE", "startDate": "1972-05-02T00:00:00Z", "storeId": "MhUFaG57"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op FulfillItem \
    --namespace $AB_NAMESPACE \
    --userId 'i8Ot5hQx' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 273 'FulfillItem' test.out

#- 274 RedeemCode
# body param: body
echo '{"code": "3eTS5yEm", "language": "xuUe-bVUp", "region": "SOFjiNBL"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RedeemCode \
    --namespace $AB_NAMESPACE \
    --userId '5MxHpHDg' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 274 'RedeemCode' test.out

#- 275 PreCheckFulfillItem
# body param: body
echo '{"itemId": "yVz3oCoK", "itemSku": "W5Vg72Fg", "quantity": 80}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PreCheckFulfillItem \
    --namespace $AB_NAMESPACE \
    --userId 'uTRvp3gM' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 275 'PreCheckFulfillItem' test.out

#- 276 FulfillRewards
# body param: body
echo '{"entitlementCollectionId": "gfg9zqYM", "entitlementOrigin": "Oculus", "metadata": {"kFK9rWFi": {}, "UQR94Gia": {}, "iTucsgX6": {}}, "origin": "Steam", "rewards": [{"currency": {"currencyCode": "wI8g5lHW", "namespace": "zTx4vB3G"}, "item": {"itemId": "xucEhZzS", "itemName": "SPxqfvyQ", "itemSku": "iCJYzit4", "itemType": "P1LrhwBi"}, "quantity": 86, "type": "CURRENCY"}, {"currency": {"currencyCode": "uOyTi5vG", "namespace": "UBtyjojR"}, "item": {"itemId": "O9JBfhaq", "itemName": "q6KZjfwX", "itemSku": "3wTOzOGH", "itemType": "6xsSOiJ6"}, "quantity": 24, "type": "ITEM"}, {"currency": {"currencyCode": "ylxKdREv", "namespace": "tgJzqYWi"}, "item": {"itemId": "nXZBicmu", "itemName": "w2DjCXmf", "itemSku": "yzeMVK9Q", "itemType": "u5hhlim4"}, "quantity": 38, "type": "CURRENCY"}], "source": "ACHIEVEMENT", "transactionId": "M4gl0x1b"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op FulfillRewards \
    --namespace $AB_NAMESPACE \
    --userId '1IzbhWpb' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 276 'FulfillRewards' test.out

#- 277 QueryUserIAPOrders
$CLI_EXE \
    --sn platform \
    --op QueryUserIAPOrders \
    --namespace $AB_NAMESPACE \
    --userId '0cZzXKEa' \
    --endTime 'gCGSUCnC' \
    --limit '2' \
    --offset '28' \
    --productId 'kgRZ8kqN' \
    --startTime 'jabd1sh9' \
    --status 'FAILED' \
    --type 'PLAYSTATION' \
    > test.out 2>&1
eval_tap $? 277 'QueryUserIAPOrders' test.out

#- 278 QueryAllUserIAPOrders
$CLI_EXE \
    --sn platform \
    --op QueryAllUserIAPOrders \
    --namespace $AB_NAMESPACE \
    --userId '5tnaUKgP' \
    > test.out 2>&1
eval_tap $? 278 'QueryAllUserIAPOrders' test.out

#- 279 QueryUserIAPConsumeHistory
$CLI_EXE \
    --sn platform \
    --op QueryUserIAPConsumeHistory \
    --namespace $AB_NAMESPACE \
    --userId 'IVkB81FP' \
    --endTime 'cNIuitKI' \
    --limit '69' \
    --offset '41' \
    --startTime 'IaM3Fim8' \
    --status 'SUCCESS' \
    --type 'XBOX' \
    > test.out 2>&1
eval_tap $? 279 'QueryUserIAPConsumeHistory' test.out

#- 280 MockFulfillIAPItem
# body param: body
echo '{"itemIdentityType": "ITEM_SKU", "language": "auca_262", "productId": "dIRn3QQf", "region": "mzhlENK4", "transactionId": "pUUHKNlH", "type": "GOOGLE"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op MockFulfillIAPItem \
    --namespace $AB_NAMESPACE \
    --userId 'POa2sjD0' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 280 'MockFulfillIAPItem' test.out

#- 281 QueryUserThirdPartySubscription
$CLI_EXE \
    --sn platform \
    --op QueryUserThirdPartySubscription \
    --namespace $AB_NAMESPACE \
    --userId 'fwnE8wnZ' \
    --activeOnly 'true' \
    --groupId 'AG3r35K8' \
    --limit '58' \
    --offset '34' \
    --platform 'TWITCH' \
    --productId 'yBVP3B9i' \
    > test.out 2>&1
eval_tap $? 281 'QueryUserThirdPartySubscription' test.out

#- 282 GetThirdPartyPlatformSubscriptionOwnershipByGroupId
$CLI_EXE \
    --sn platform \
    --op GetThirdPartyPlatformSubscriptionOwnershipByGroupId \
    --namespace $AB_NAMESPACE \
    --platform 'XBOX' \
    --userId 'j4If04ff' \
    --groupId 'ieWAPsOP' \
    > test.out 2>&1
eval_tap $? 282 'GetThirdPartyPlatformSubscriptionOwnershipByGroupId' test.out

#- 283 GetThirdPartyPlatformSubscriptionOwnershipByProductId
$CLI_EXE \
    --sn platform \
    --op GetThirdPartyPlatformSubscriptionOwnershipByProductId \
    --namespace $AB_NAMESPACE \
    --platform 'XBOX' \
    --userId '28nv5tPo' \
    --productId 'h7FkYNRw' \
    > test.out 2>&1
eval_tap $? 283 'GetThirdPartyPlatformSubscriptionOwnershipByProductId' test.out

#- 284 QueryUserThirdPartySubscriptionTransactions
$CLI_EXE \
    --sn platform \
    --op QueryUserThirdPartySubscriptionTransactions \
    --namespace $AB_NAMESPACE \
    --userId 'QFWb9wua' \
    --activeOnly 'false' \
    --groupId 'nErHccH3' \
    --limit '63' \
    --offset '67' \
    --platform 'PLAYSTATION' \
    --productId 'NWdOVMp2' \
    > test.out 2>&1
eval_tap $? 284 'QueryUserThirdPartySubscriptionTransactions' test.out

#- 285 GetThirdPartySubscriptionDetails
$CLI_EXE \
    --sn platform \
    --op GetThirdPartySubscriptionDetails \
    --id 'iuKm3UvS' \
    --namespace $AB_NAMESPACE \
    --userId 'xu2iMJmd' \
    > test.out 2>&1
eval_tap $? 285 'GetThirdPartySubscriptionDetails' test.out

#- 286 GetSubscriptionHistory
$CLI_EXE \
    --sn platform \
    --op GetSubscriptionHistory \
    --id 'J8QeJ5k7' \
    --namespace $AB_NAMESPACE \
    --userId '0dusP2Nu' \
    --limit '8' \
    --offset '47' \
    > test.out 2>&1
eval_tap $? 286 'GetSubscriptionHistory' test.out

#- 287 SyncSubscriptionTransaction
$CLI_EXE \
    --sn platform \
    --op SyncSubscriptionTransaction \
    --id 'bIW7aqS9' \
    --namespace $AB_NAMESPACE \
    --userId '78vnyDnh' \
    > test.out 2>&1
eval_tap $? 287 'SyncSubscriptionTransaction' test.out

#- 288 GetThirdPartyUserSubscriptionDetails
$CLI_EXE \
    --sn platform \
    --op GetThirdPartyUserSubscriptionDetails \
    --id 'TLFczsR2' \
    --namespace $AB_NAMESPACE \
    --userId 'OIM5unrd' \
    > test.out 2>&1
eval_tap $? 288 'GetThirdPartyUserSubscriptionDetails' test.out

#- 289 SyncSubscription
$CLI_EXE \
    --sn platform \
    --op SyncSubscription \
    --id '4VmoB4GG' \
    --namespace $AB_NAMESPACE \
    --userId 'LkpFBhUz' \
    > test.out 2>&1
eval_tap $? 289 'SyncSubscription' test.out

#- 290 QueryUserOrders
$CLI_EXE \
    --sn platform \
    --op QueryUserOrders \
    --namespace $AB_NAMESPACE \
    --userId 'h3tbrIQA' \
    --discounted 'false' \
    --itemId 'AO9NaZk4' \
    --limit '5' \
    --offset '84' \
    --status 'INIT' \
    > test.out 2>&1
eval_tap $? 290 'QueryUserOrders' test.out

#- 291 AdminCreateUserOrder
# body param: body
echo '{"currencyCode": "PqJejhTZ", "currencyNamespace": "DvKE9sO5", "discountCodes": ["2yI7Fzxu", "RlKdS5EC", "Jlr5ARVo"], "discountedPrice": 19, "entitlementPlatform": "IOS", "ext": {"MYXPlWt8": {}, "tSCoJG6d": {}, "BR4Hzybx": {}}, "itemId": "28netlPe", "language": "DdzWdYmI", "options": {"skipPriceValidation": true}, "platform": "Playstation", "price": 53, "quantity": 93, "region": "SQAdLanR", "returnUrl": "mHjZrD0N", "sandbox": false, "sectionId": "7Qvz7d29"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op AdminCreateUserOrder \
    --namespace $AB_NAMESPACE \
    --userId 'CwvbJ9mi' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 291 'AdminCreateUserOrder' test.out

#- 292 CountOfPurchasedItem
$CLI_EXE \
    --sn platform \
    --op CountOfPurchasedItem \
    --namespace $AB_NAMESPACE \
    --userId 'y0KWhEup' \
    --itemId 'V6jm2iEM' \
    > test.out 2>&1
eval_tap $? 292 'CountOfPurchasedItem' test.out

#- 293 GetUserOrder
$CLI_EXE \
    --sn platform \
    --op GetUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'IplsesN3' \
    --userId 'aglqNHOS' \
    > test.out 2>&1
eval_tap $? 293 'GetUserOrder' test.out

#- 294 UpdateUserOrderStatus
# body param: body
echo '{"status": "CHARGED", "statusReason": "OboPVqR6"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateUserOrderStatus \
    --namespace $AB_NAMESPACE \
    --orderNo 'mLxl1PTS' \
    --userId 'da7Rrxrd' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 294 'UpdateUserOrderStatus' test.out

#- 295 FulfillUserOrder
$CLI_EXE \
    --sn platform \
    --op FulfillUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'dnVoTCyF' \
    --userId 'BgwHTNMV' \
    > test.out 2>&1
eval_tap $? 295 'FulfillUserOrder' test.out

#- 296 GetUserOrderGrant
eval_tap 0 296 'GetUserOrderGrant # SKIP deprecated' test.out

#- 297 GetUserOrderHistories
$CLI_EXE \
    --sn platform \
    --op GetUserOrderHistories \
    --namespace $AB_NAMESPACE \
    --orderNo '2WdrXRxo' \
    --userId 'fQ4e61ep' \
    > test.out 2>&1
eval_tap $? 297 'GetUserOrderHistories' test.out

#- 298 ProcessUserOrderNotification
# body param: body
echo '{"additionalData": {"cardSummary": "oHlI6Lwf"}, "authorisedTime": "1995-07-17T00:00:00Z", "chargebackReversedTime": "1971-05-08T00:00:00Z", "chargebackTime": "1983-04-03T00:00:00Z", "chargedTime": "1993-10-28T00:00:00Z", "createdTime": "1996-03-10T00:00:00Z", "currency": {"currencyCode": "0jg9882y", "currencySymbol": "XP5GtLHO", "currencyType": "REAL", "decimals": 18, "namespace": "h04yy1St"}, "customParameters": {"6t4biVdf": {}, "WPqf7tJo": {}, "AcfKlKvB": {}}, "extOrderNo": "2RvV4CjQ", "extTxId": "cPPJVjvG", "extUserId": "O60py4d2", "issuedAt": "1994-05-04T00:00:00Z", "metadata": {"U9RW1AZj": "LBNN4u4n", "HLVhWM6h": "uYtdsqbl", "ipFMOVNt": "wC5suLaH"}, "namespace": "spGtboN0", "nonceStr": "FB5A0bML", "paymentData": {"discountAmount": 33, "discountCode": "y8hkd4SH", "subtotalPrice": 2, "tax": 3, "totalPrice": 18}, "paymentMethod": "oQsnLEgx", "paymentMethodFee": 13, "paymentOrderNo": "PfqdJVGH", "paymentProvider": "CHECKOUT", "paymentProviderFee": 18, "paymentStationUrl": "5DouQ9E7", "price": 8, "refundedTime": "1980-02-24T00:00:00Z", "salesTax": 59, "sandbox": true, "sku": "Plht6VSG", "status": "AUTHORISED", "statusReason": "CswfXXVr", "subscriptionId": "u5NOwuOW", "subtotalPrice": 80, "targetNamespace": "GlII1zJV", "targetUserId": "WdQKAT9R", "tax": 98, "totalPrice": 91, "totalTax": 98, "txEndTime": "1980-09-06T00:00:00Z", "type": "k1MaKE30", "userId": "xmjMa62M", "vat": 71}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ProcessUserOrderNotification \
    --namespace $AB_NAMESPACE \
    --orderNo 'kx74lGB5' \
    --userId 'rDG8OGGT' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 298 'ProcessUserOrderNotification' test.out

#- 299 DownloadUserOrderReceipt
$CLI_EXE \
    --sn platform \
    --op DownloadUserOrderReceipt \
    --namespace $AB_NAMESPACE \
    --orderNo 'SS7VjkZ6' \
    --userId 'hgG5yYl3' \
    > test.out 2>&1
eval_tap $? 299 'DownloadUserOrderReceipt' test.out

#- 300 CreateUserPaymentOrder
# body param: body
echo '{"currencyCode": "K2M6bVSi", "currencyNamespace": "xgVLmDna", "customParameters": {"rMAro67x": {}, "JtWX2HxH": {}, "vrbSYZUi": {}}, "description": "T3tzNz4c", "extOrderNo": "vpJPyJkN", "extUserId": "i812sbpz", "itemType": "SEASON", "language": "jrX_cNyR", "metadata": {"56cLLzBW": "pNEVVCkR", "U45agFZx": "WQckFRnf", "KxOLkZUF": "r22TsXec"}, "notifyUrl": "nTmaLhmD", "omitNotification": true, "platform": "8yw4aCaE", "price": 29, "recurringPaymentOrderNo": "75Tz3gvu", "region": "MaoYNxR1", "returnUrl": "X1rjjEgE", "sandbox": false, "sku": "bRw5skwb", "subscriptionId": "nDOGB3hI", "title": "uWUotKnx"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateUserPaymentOrder \
    --namespace $AB_NAMESPACE \
    --userId 'xr1v4pAC' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 300 'CreateUserPaymentOrder' test.out

#- 301 RefundUserPaymentOrder
# body param: body
echo '{"description": "IRPcT0Qx"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RefundUserPaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'oud1eBHw' \
    --userId 'AdWTtrna' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 301 'RefundUserPaymentOrder' test.out

#- 302 GetUserPlatformAccountClosureHistories
$CLI_EXE \
    --sn platform \
    --op GetUserPlatformAccountClosureHistories \
    --namespace $AB_NAMESPACE \
    --userId 'X7SkGKlN' \
    > test.out 2>&1
eval_tap $? 302 'GetUserPlatformAccountClosureHistories' test.out

#- 303 ApplyUserRedemption
# body param: body
echo '{"code": "AGGGWGCx", "orderNo": "eLoIQAci"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ApplyUserRedemption \
    --namespace $AB_NAMESPACE \
    --userId 'Ov1MXciw' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 303 'ApplyUserRedemption' test.out

#- 304 DoRevocation
# body param: body
echo '{"meta": {"Zvy90UpZ": {}, "QFDjDrok": {}, "4enPZEEG": {}}, "reason": "4qzS4BFY", "requestId": "CP1kUJIp", "revokeEntries": [{"currency": {"balanceOrigin": "Steam", "currencyCode": "fsKkd2Dt", "namespace": "D71siKbN"}, "entitlement": {"entitlementId": "3aRLI4tV"}, "item": {"entitlementOrigin": "Steam", "itemIdentity": "lCyPcYLs", "itemIdentityType": "ITEM_ID", "origin": "System"}, "quantity": 93, "type": "CURRENCY"}, {"currency": {"balanceOrigin": "System", "currencyCode": "45Azg3ju", "namespace": "C0o48fvs"}, "entitlement": {"entitlementId": "pSKNb3vY"}, "item": {"entitlementOrigin": "Oculus", "itemIdentity": "tXoMaxh6", "itemIdentityType": "ITEM_ID", "origin": "Epic"}, "quantity": 0, "type": "ENTITLEMENT"}, {"currency": {"balanceOrigin": "Nintendo", "currencyCode": "mk8qbjZt", "namespace": "sVcfhlVF"}, "entitlement": {"entitlementId": "vdJEqd7G"}, "item": {"entitlementOrigin": "Playstation", "itemIdentity": "KYKgfMKh", "itemIdentityType": "ITEM_SKU", "origin": "GooglePlay"}, "quantity": 87, "type": "ENTITLEMENT"}], "source": "DLC", "transactionId": "YuwU0BvC"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op DoRevocation \
    --namespace $AB_NAMESPACE \
    --userId '1iUvU4it' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 304 'DoRevocation' test.out

#- 305 RegisterXblSessions
# body param: body
echo '{"gameSessionId": "puI1AuHo", "payload": {"v6PQoPKX": {}, "NmnMk8Hr": {}, "stPmyXaX": {}}, "scid": "FD821HVK", "sessionTemplateName": "m8OwQncw"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RegisterXblSessions \
    --namespace $AB_NAMESPACE \
    --userId 'Lq6TXndN' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 305 'RegisterXblSessions' test.out

#- 306 QueryUserSubscriptions
$CLI_EXE \
    --sn platform \
    --op QueryUserSubscriptions \
    --namespace $AB_NAMESPACE \
    --userId 'bfilSCVH' \
    --chargeStatus 'CHARGED' \
    --itemId '3t9lpawl' \
    --limit '49' \
    --offset '3' \
    --sku 'J8UAsDcI' \
    --status 'CANCELLED' \
    --subscribedBy 'PLATFORM' \
    > test.out 2>&1
eval_tap $? 306 'QueryUserSubscriptions' test.out

#- 307 GetUserSubscriptionActivities
$CLI_EXE \
    --sn platform \
    --op GetUserSubscriptionActivities \
    --namespace $AB_NAMESPACE \
    --userId 'Yi6yaVGy' \
    --excludeSystem 'false' \
    --limit '57' \
    --offset '46' \
    --subscriptionId '3jZVHagE' \
    > test.out 2>&1
eval_tap $? 307 'GetUserSubscriptionActivities' test.out

#- 308 PlatformSubscribeSubscription
# body param: body
echo '{"grantDays": 97, "itemId": "6PeJqyQS", "language": "X9tRw45I", "reason": "0lP4tZ4C", "region": "bG4yW1Tk", "source": "7sGJU01S"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PlatformSubscribeSubscription \
    --namespace $AB_NAMESPACE \
    --userId 'gcBG73GX' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 308 'PlatformSubscribeSubscription' test.out

#- 309 CheckUserSubscriptionSubscribableByItemId
$CLI_EXE \
    --sn platform \
    --op CheckUserSubscriptionSubscribableByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'HDqCmmhJ' \
    --itemId 'S3xH9KlB' \
    > test.out 2>&1
eval_tap $? 309 'CheckUserSubscriptionSubscribableByItemId' test.out

#- 310 GetUserSubscription
$CLI_EXE \
    --sn platform \
    --op GetUserSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'JPWiZodB' \
    --userId 'hzKMY2o2' \
    > test.out 2>&1
eval_tap $? 310 'GetUserSubscription' test.out

#- 311 DeleteUserSubscription
$CLI_EXE \
    --sn platform \
    --op DeleteUserSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'LYFnzA8k' \
    --userId 'q0yD5afv' \
    > test.out 2>&1
eval_tap $? 311 'DeleteUserSubscription' test.out

#- 312 CancelSubscription
# body param: body
echo '{"immediate": true, "reason": "XKh5sHuQ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CancelSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'rvttPXK0' \
    --userId 'T7amvEH1' \
    --force 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 312 'CancelSubscription' test.out

#- 313 GrantDaysToSubscription
# body param: body
echo '{"grantDays": 27, "reason": "O5wMlt2G"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op GrantDaysToSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'zcaBjczK' \
    --userId 'sgLN9VnI' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 313 'GrantDaysToSubscription' test.out

#- 314 GetUserSubscriptionBillingHistories
$CLI_EXE \
    --sn platform \
    --op GetUserSubscriptionBillingHistories \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'jLdqBMzj' \
    --userId 'Z1NGWS16' \
    --excludeFree 'true' \
    --limit '31' \
    --offset '96' \
    > test.out 2>&1
eval_tap $? 314 'GetUserSubscriptionBillingHistories' test.out

#- 315 ProcessUserSubscriptionNotification
# body param: body
echo '{"additionalData": {"cardSummary": "jGd2xEhe"}, "authorisedTime": "1998-01-03T00:00:00Z", "chargebackReversedTime": "1977-07-24T00:00:00Z", "chargebackTime": "1994-07-21T00:00:00Z", "chargedTime": "1999-02-10T00:00:00Z", "createdTime": "1971-06-21T00:00:00Z", "currency": {"currencyCode": "Ku0o3Jqg", "currencySymbol": "Or2DJwGf", "currencyType": "REAL", "decimals": 54, "namespace": "gSbT8CMC"}, "customParameters": {"WzwQbIIs": {}, "zP4jfkND": {}, "MLmXeSM7": {}}, "extOrderNo": "zT7A3U2N", "extTxId": "gahgvTzw", "extUserId": "g1nP5cum", "issuedAt": "1974-10-10T00:00:00Z", "metadata": {"zciROD4u": "NG8mWmnf", "b2HeAXZF": "rPhUmsrH", "BkzKrUle": "LhKGkp9x"}, "namespace": "ZhdGA2Ab", "nonceStr": "Q3tDdjZJ", "paymentData": {"discountAmount": 82, "discountCode": "GBUFQwYN", "subtotalPrice": 73, "tax": 43, "totalPrice": 31}, "paymentMethod": "GIfS3aMp", "paymentMethodFee": 56, "paymentOrderNo": "HpVQ9hT6", "paymentProvider": "ADYEN", "paymentProviderFee": 95, "paymentStationUrl": "kaWsZujJ", "price": 16, "refundedTime": "1990-08-16T00:00:00Z", "salesTax": 74, "sandbox": true, "sku": "QKRPYJcz", "status": "AUTHORISE_FAILED", "statusReason": "lgT6Wm6X", "subscriptionId": "wFCzmwxm", "subtotalPrice": 64, "targetNamespace": "pLQQvWNx", "targetUserId": "nE5x9fkW", "tax": 11, "totalPrice": 10, "totalTax": 37, "txEndTime": "1996-02-14T00:00:00Z", "type": "vIhyocOz", "userId": "sSVPGyo6", "vat": 12}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ProcessUserSubscriptionNotification \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'jP4tGTIe' \
    --userId 'P0meZwXY' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 315 'ProcessUserSubscriptionNotification' test.out

#- 316 AcquireUserTicket
# body param: body
echo '{"count": 82, "orderNo": "IXRFwQ8r"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op AcquireUserTicket \
    --boothName 'cq4RcUFx' \
    --namespace $AB_NAMESPACE \
    --userId 'XqYB5Tiy' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 316 'AcquireUserTicket' test.out

#- 317 QueryUserCurrencyWallets
$CLI_EXE \
    --sn platform \
    --op QueryUserCurrencyWallets \
    --namespace $AB_NAMESPACE \
    --userId 'AFf2dt18' \
    > test.out 2>&1
eval_tap $? 317 'QueryUserCurrencyWallets' test.out

#- 318 DebitUserWalletByCurrencyCode
# body param: body
echo '{"allowOverdraft": true, "amount": 96, "balanceOrigin": "Playstation", "balanceSource": "EXPIRATION", "metadata": {"3DlDkmWL": {}, "WLvpWhNb": {}, "XuGPE81e": {}}, "reason": "HMmcVTo6"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op DebitUserWalletByCurrencyCode \
    --currencyCode 'lR9xN5I5' \
    --namespace $AB_NAMESPACE \
    --userId 'IORycAZt' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 318 'DebitUserWalletByCurrencyCode' test.out

#- 319 ListUserCurrencyTransactions
$CLI_EXE \
    --sn platform \
    --op ListUserCurrencyTransactions \
    --currencyCode 'X81iy0bZ' \
    --namespace $AB_NAMESPACE \
    --userId 'KlXtzdJ9' \
    --limit '95' \
    --offset '50' \
    > test.out 2>&1
eval_tap $? 319 'ListUserCurrencyTransactions' test.out

#- 320 CheckBalance
# body param: request
echo '{"amount": 11, "debitBalanceSource": "IAP_REVOCATION", "metadata": {"cfifXmPk": {}, "z9mGlasn": {}, "NjeakKWr": {}}, "reason": "kPkSEVEZ", "walletPlatform": "Other"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CheckBalance \
    --currencyCode '3bRY2kM6' \
    --namespace $AB_NAMESPACE \
    --userId 'DFLz7Pwh' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 320 'CheckBalance' test.out

#- 321 CheckWallet
eval_tap 0 321 'CheckWallet # SKIP deprecated' test.out

#- 322 CreditUserWallet
# body param: body
echo '{"amount": 50, "expireAt": "1975-01-13T00:00:00Z", "metadata": {"aIrge5VE": {}, "wRxjOabe": {}, "SK2N6V2W": {}}, "origin": "IOS", "reason": "c16xoHJn", "source": "REDEEM_CODE"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreditUserWallet \
    --currencyCode 'wID7GPoA' \
    --namespace $AB_NAMESPACE \
    --userId 'iuyXal9Z' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 322 'CreditUserWallet' test.out

#- 323 DebitByWalletPlatform
# body param: request
echo '{"amount": 12, "debitBalanceSource": "OTHER", "metadata": {"r7C9M90c": {}, "raivFOwM": {}, "gNytRVFp": {}}, "reason": "dAuuLDjX", "walletPlatform": "Playstation"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op DebitByWalletPlatform \
    --currencyCode 'c1c50nzR' \
    --namespace $AB_NAMESPACE \
    --userId '7RIaQUOZ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 323 'DebitByWalletPlatform' test.out

#- 324 PayWithUserWallet
# body param: body
echo '{"amount": 20, "metadata": {"8SkHbzG1": {}, "HfdZ4Zrc": {}, "A4T704af": {}}, "walletPlatform": "Steam"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PayWithUserWallet \
    --currencyCode 'M7Aqoa1n' \
    --namespace $AB_NAMESPACE \
    --userId 'MIX9Yq06' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 324 'PayWithUserWallet' test.out

#- 325 GetUserWallet
eval_tap 0 325 'GetUserWallet # SKIP deprecated' test.out

#- 326 DebitUserWallet
eval_tap 0 326 'DebitUserWallet # SKIP deprecated' test.out

#- 327 DisableUserWallet
eval_tap 0 327 'DisableUserWallet # SKIP deprecated' test.out

#- 328 EnableUserWallet
eval_tap 0 328 'EnableUserWallet # SKIP deprecated' test.out

#- 329 ListUserWalletTransactions
eval_tap 0 329 'ListUserWalletTransactions # SKIP deprecated' test.out

#- 330 ListViews
$CLI_EXE \
    --sn platform \
    --op ListViews \
    --namespace $AB_NAMESPACE \
    --storeId 'BnFIY7EJ' \
    > test.out 2>&1
eval_tap $? 330 'ListViews' test.out

#- 331 CreateView
# body param: body
echo '{"displayOrder": 53, "localizations": {"ytl4rNom": {"description": "bUJUHZMS", "localExt": {"9L3IZdlf": {}, "ctujIHKm": {}, "GYEzBT9D": {}}, "longDescription": "SqzQZ5Vv", "title": "zHixI9Rm"}, "m7qg2nto": {"description": "SAh6qH0R", "localExt": {"lllCTqf1": {}, "IqFhjbLP": {}, "3dys5IHW": {}}, "longDescription": "QNDMXtAm", "title": "445tO4tz"}, "v9QlvcqL": {"description": "BKnZPRKH", "localExt": {"Pk1vN3n5": {}, "E7ROq9g4": {}, "aJtS237V": {}}, "longDescription": "KmTauIOg", "title": "UunZXkjl"}}, "name": "oiuFd757"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateView \
    --namespace $AB_NAMESPACE \
    --storeId 'dkyBGYwn' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 331 'CreateView' test.out

#- 332 GetView
$CLI_EXE \
    --sn platform \
    --op GetView \
    --namespace $AB_NAMESPACE \
    --viewId '0yEMEJZb' \
    --storeId 'Fks1MOyJ' \
    > test.out 2>&1
eval_tap $? 332 'GetView' test.out

#- 333 UpdateView
# body param: body
echo '{"displayOrder": 33, "localizations": {"ZlHVbPCo": {"description": "4DhSuo8T", "localExt": {"bEfVK0hg": {}, "B2Y4X8wZ": {}, "qXgZ3kn3": {}}, "longDescription": "PZvFg0Wv", "title": "orGrXOBO"}, "EsJV6Wd4": {"description": "H7I4kb9m", "localExt": {"E7AXyLR3": {}, "vVbKBc5J": {}, "3B65joxQ": {}}, "longDescription": "ntaqaUYa", "title": "wah2du9S"}, "VzFFHwZ9": {"description": "K6LljZfT", "localExt": {"qkVqSVkw": {}, "7zIfQ0hZ": {}, "7FzODUhd": {}}, "longDescription": "eTfbk6So", "title": "37r0V3lR"}}, "name": "DIB2bCxi"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateView \
    --namespace $AB_NAMESPACE \
    --viewId 'W8n7ZXI0' \
    --storeId 'jH2jDSO8' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 333 'UpdateView' test.out

#- 334 DeleteView
$CLI_EXE \
    --sn platform \
    --op DeleteView \
    --namespace $AB_NAMESPACE \
    --viewId 'MJWorNiP' \
    --storeId 'O4p6NxML' \
    > test.out 2>&1
eval_tap $? 334 'DeleteView' test.out

#- 335 QueryWallets
eval_tap 0 335 'QueryWallets # SKIP deprecated' test.out

#- 336 BulkCredit
# body param: body
echo '[{"creditRequest": {"amount": 36, "expireAt": "1972-11-15T00:00:00Z", "metadata": {"wo6GRMgt": {}, "UyZoGqCW": {}, "XkVaXZCM": {}}, "origin": "Epic", "reason": "jP6aTNfz", "source": "REDEEM_CODE"}, "currencyCode": "p6JIIDNE", "userIds": ["J9hvI8qQ", "07w0REU3", "qklip21m"]}, {"creditRequest": {"amount": 74, "expireAt": "1998-12-12T00:00:00Z", "metadata": {"p9RWnm0L": {}, "tsGvmadq": {}, "XHOHGbCU": {}}, "origin": "Xbox", "reason": "Z69Z87cu", "source": "PROMOTION"}, "currencyCode": "EuAnBjqE", "userIds": ["uZZI0B5P", "NgyrMkhO", "iQyX2via"]}, {"creditRequest": {"amount": 93, "expireAt": "1997-06-29T00:00:00Z", "metadata": {"FIQWAcI4": {}, "87NyXcdZ": {}, "gQQfMdRQ": {}}, "origin": "Epic", "reason": "MtrybChB", "source": "DLC"}, "currencyCode": "GpB5zMKi", "userIds": ["ZLssw0xl", "qGz0YV6b", "1pK5kTck"]}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op BulkCredit \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 336 'BulkCredit' test.out

#- 337 BulkDebit
# body param: body
echo '[{"currencyCode": "lNDbpMkY", "request": {"allowOverdraft": false, "amount": 54, "balanceOrigin": "IOS", "balanceSource": "OTHER", "metadata": {"ZUDJ7Kwg": {}, "NR0GtZZf": {}, "iTY62Zc4": {}}, "reason": "PQDSU64A"}, "userIds": ["Gfvufi3C", "G7X0SwIg", "J3GD8bvu"]}, {"currencyCode": "0P6BLg52", "request": {"allowOverdraft": true, "amount": 64, "balanceOrigin": "Nintendo", "balanceSource": "OTHER", "metadata": {"twaqL4SF": {}, "9oxJiUKW": {}, "nNLcNxrX": {}}, "reason": "6iRLf1Nf"}, "userIds": ["ctZBVCMb", "Bo9izK3B", "wys7h2us"]}, {"currencyCode": "oKwwAjUb", "request": {"allowOverdraft": false, "amount": 74, "balanceOrigin": "Other", "balanceSource": "PAYMENT", "metadata": {"sY6n4GIU": {}, "ljfSGX3t": {}, "UhE5ZsfZ": {}}, "reason": "koD2d37g"}, "userIds": ["txXrsqQ9", "2cAEmXl5", "SPYo7vX0"]}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op BulkDebit \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 337 'BulkDebit' test.out

#- 338 GetWallet
eval_tap 0 338 'GetWallet # SKIP deprecated' test.out

#- 339 SyncOrders
$CLI_EXE \
    --sn platform \
    --op SyncOrders \
    --nextEvaluatedKey 'ey42OnuV' \
    --end 'ZuBGuKLQ' \
    --start 'hA8c0V73' \
    > test.out 2>&1
eval_tap $? 339 'SyncOrders' test.out

#- 340 TestAdyenConfig
# body param: body
echo '{"allowedPaymentMethods": ["13i6vqF0", "6s7VGlHd", "U13YjhMI"], "apiKey": "tfZPRFf5", "authoriseAsCapture": false, "blockedPaymentMethods": ["ZOXU7fMS", "5Sc0c93k", "pZSRQ9g2"], "clientKey": "Jf8EoOZW", "dropInSettings": "QJRT24SC", "liveEndpointUrlPrefix": "unwwhpjb", "merchantAccount": "YKvKr6VG", "notificationHmacKey": "PGg8HXVS", "notificationPassword": "dMTfI5Xc", "notificationUsername": "nr8Y5cr3", "returnUrl": "TkeIIOWU", "settings": "1nWEJZXr"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestAdyenConfig \
    --sandbox 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 340 'TestAdyenConfig' test.out

#- 341 TestAliPayConfig
# body param: body
echo '{"appId": "6IUgW67p", "privateKey": "KYcbgQae", "publicKey": "WcGayQlg", "returnUrl": "P9t02NJ0"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestAliPayConfig \
    --sandbox 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 341 'TestAliPayConfig' test.out

#- 342 TestCheckoutConfig
# body param: body
echo '{"publicKey": "yEn9AZ46", "secretKey": "Vjgzo83Z"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestCheckoutConfig \
    --sandbox 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 342 'TestCheckoutConfig' test.out

#- 343 DebugMatchedPaymentMerchantConfig
$CLI_EXE \
    --sn platform \
    --op DebugMatchedPaymentMerchantConfig \
    --namespace_ 'EXxcNIJH' \
    --region 'cYqG2OI2' \
    > test.out 2>&1
eval_tap $? 343 'DebugMatchedPaymentMerchantConfig' test.out

#- 344 TestNeonPayConfig
# body param: body
echo '{"apiKey": "jVJkXtEr", "webhookSecretKey": "BNjDYA4F"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestNeonPayConfig \
    --sandbox 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 344 'TestNeonPayConfig' test.out

#- 345 TestPayPalConfig
# body param: body
echo '{"clientID": "wLAIV6qi", "clientSecret": "h9xZmmg2", "returnUrl": "8YUY8J37", "webHookId": "7uYzf1r0"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestPayPalConfig \
    --sandbox 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 345 'TestPayPalConfig' test.out

#- 346 TestStripeConfig
# body param: body
echo '{"allowedPaymentMethodTypes": ["wGSmud96", "Vh1UbzJR", "BgDdKj4X"], "publishableKey": "DxatQJO1", "secretKey": "vP7dgeRD", "webhookSecret": "3wMbQvVe"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestStripeConfig \
    --sandbox 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 346 'TestStripeConfig' test.out

#- 347 TestWxPayConfig
# body param: body
echo '{"appId": "4CQNPjbp", "key": "QxSppepX", "mchid": "T32amvpW", "returnUrl": "sxxc3FWy"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestWxPayConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 347 'TestWxPayConfig' test.out

#- 348 TestXsollaConfig
# body param: body
echo '{"apiKey": "STQ61ifZ", "flowCompletionUrl": "4XNIlGVD", "merchantId": 73, "projectId": 85, "projectSecretKey": "Di0MsqTr"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestXsollaConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 348 'TestXsollaConfig' test.out

#- 349 GetPaymentMerchantConfig1
$CLI_EXE \
    --sn platform \
    --op GetPaymentMerchantConfig1 \
    --id 'LMpkLoC8' \
    > test.out 2>&1
eval_tap $? 349 'GetPaymentMerchantConfig1' test.out

#- 350 UpdateAdyenConfig
# body param: body
echo '{"allowedPaymentMethods": ["yCvtqbWP", "iAQ9V6Y0", "9NEBm0yz"], "apiKey": "xqmtgTsJ", "authoriseAsCapture": false, "blockedPaymentMethods": ["4mwV32cb", "91U5X7XP", "bqvezIrI"], "clientKey": "sNdnhbNH", "dropInSettings": "luEAWkQs", "liveEndpointUrlPrefix": "54nf29gM", "merchantAccount": "VUYYgSxZ", "notificationHmacKey": "7X0GUVEE", "notificationPassword": "cNyvuNbN", "notificationUsername": "x86X7Fmv", "returnUrl": "ATML9ybm", "settings": "n8xY436e"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateAdyenConfig \
    --id '4ow7OMRg' \
    --sandbox 'true' \
    --validate 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 350 'UpdateAdyenConfig' test.out

#- 351 TestAdyenConfigById
$CLI_EXE \
    --sn platform \
    --op TestAdyenConfigById \
    --id 'cjSdeamA' \
    --sandbox 'false' \
    > test.out 2>&1
eval_tap $? 351 'TestAdyenConfigById' test.out

#- 352 UpdateAliPayConfig
# body param: body
echo '{"appId": "fTp3GAXL", "privateKey": "eCEkITl1", "publicKey": "Y2Pe0Dkk", "returnUrl": "RHcBYzKV"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateAliPayConfig \
    --id 'dgmyhejV' \
    --sandbox 'false' \
    --validate 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 352 'UpdateAliPayConfig' test.out

#- 353 TestAliPayConfigById
$CLI_EXE \
    --sn platform \
    --op TestAliPayConfigById \
    --id '1UVXFDbj' \
    --sandbox 'false' \
    > test.out 2>&1
eval_tap $? 353 'TestAliPayConfigById' test.out

#- 354 UpdateCheckoutConfig
# body param: body
echo '{"publicKey": "GLqPfE65", "secretKey": "9jxy3WoB"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCheckoutConfig \
    --id 'tdMlrmoA' \
    --sandbox 'true' \
    --validate 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 354 'UpdateCheckoutConfig' test.out

#- 355 TestCheckoutConfigById
$CLI_EXE \
    --sn platform \
    --op TestCheckoutConfigById \
    --id 'r7vKIfIY' \
    --sandbox 'true' \
    > test.out 2>&1
eval_tap $? 355 'TestCheckoutConfigById' test.out

#- 356 UpdateNeonPayConfig
# body param: body
echo '{"apiKey": "EyKtfOP6", "webhookSecretKey": "KhyaS0Yu"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateNeonPayConfig \
    --id 'WnYZhBNH' \
    --sandbox 'true' \
    --validate 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 356 'UpdateNeonPayConfig' test.out

#- 357 TestNeonPayConfigById
$CLI_EXE \
    --sn platform \
    --op TestNeonPayConfigById \
    --id 'sVZnPH4z' \
    --sandbox 'false' \
    > test.out 2>&1
eval_tap $? 357 'TestNeonPayConfigById' test.out

#- 358 UpdatePayPalConfig
# body param: body
echo '{"clientID": "Lj1pxOXm", "clientSecret": "lz4s0ULe", "returnUrl": "VUKzdFW5", "webHookId": "oYM1DmRG"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePayPalConfig \
    --id '3Pw5DDo8' \
    --sandbox 'false' \
    --validate 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 358 'UpdatePayPalConfig' test.out

#- 359 TestPayPalConfigById
$CLI_EXE \
    --sn platform \
    --op TestPayPalConfigById \
    --id 'tWeUbgxj' \
    --sandbox 'false' \
    > test.out 2>&1
eval_tap $? 359 'TestPayPalConfigById' test.out

#- 360 UpdateStripeConfig
# body param: body
echo '{"allowedPaymentMethodTypes": ["LAqoI3Zk", "yIhVZ4dv", "jnT4PpAl"], "publishableKey": "ZAqOdkVq", "secretKey": "84M1MRNW", "webhookSecret": "0W6zVRgL"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateStripeConfig \
    --id '1GTAF2ZH' \
    --sandbox 'true' \
    --validate 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 360 'UpdateStripeConfig' test.out

#- 361 TestStripeConfigById
$CLI_EXE \
    --sn platform \
    --op TestStripeConfigById \
    --id '57iDJcZz' \
    --sandbox 'false' \
    > test.out 2>&1
eval_tap $? 361 'TestStripeConfigById' test.out

#- 362 UpdateWxPayConfig
# body param: body
echo '{"appId": "tudHwTXv", "key": "YLEanxik", "mchid": "4JhEERjY", "returnUrl": "DGpb0oDs"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateWxPayConfig \
    --id 'ufX6TP8r' \
    --validate 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 362 'UpdateWxPayConfig' test.out

#- 363 UpdateWxPayConfigCert
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UpdateWxPayConfigCert \
    --id 'knGqCdK6' \
    --upload file $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 363 'UpdateWxPayConfigCert' test.out

#- 364 TestWxPayConfigById
$CLI_EXE \
    --sn platform \
    --op TestWxPayConfigById \
    --id 'qV0S2LxQ' \
    > test.out 2>&1
eval_tap $? 364 'TestWxPayConfigById' test.out

#- 365 UpdateXsollaConfig
# body param: body
echo '{"apiKey": "2pcA036F", "flowCompletionUrl": "IfB3UHOU", "merchantId": 46, "projectId": 57, "projectSecretKey": "PLF1OqVN"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXsollaConfig \
    --id 'czd83WCX' \
    --validate 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 365 'UpdateXsollaConfig' test.out

#- 366 TestXsollaConfigById
$CLI_EXE \
    --sn platform \
    --op TestXsollaConfigById \
    --id '5WhSO2ni' \
    > test.out 2>&1
eval_tap $? 366 'TestXsollaConfigById' test.out

#- 367 UpdateXsollaUIConfig
# body param: body
echo '{"device": "MOBILE", "showCloseButton": true, "size": "MEDIUM", "theme": "DEFAULT"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXsollaUIConfig \
    --id 'WlnytvEe' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 367 'UpdateXsollaUIConfig' test.out

#- 368 QueryPaymentProviderConfig
$CLI_EXE \
    --sn platform \
    --op QueryPaymentProviderConfig \
    --limit '51' \
    --namespace_ 'TXnvFMGy' \
    --offset '85' \
    --region 'iMsEfiLo' \
    > test.out 2>&1
eval_tap $? 368 'QueryPaymentProviderConfig' test.out

#- 369 CreatePaymentProviderConfig
# body param: body
echo '{"aggregate": "STRIPE", "namespace": "acDhpkjv", "region": "rJLgA65c", "sandboxTaxJarApiToken": "MqCclNcI", "specials": ["PAYPAL", "XSOLLA", "STRIPE"], "taxJarApiToken": "KSOMWW6k", "taxJarEnabled": true, "useGlobalTaxJarApiToken": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreatePaymentProviderConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 369 'CreatePaymentProviderConfig' test.out

#- 370 GetAggregatePaymentProviders
$CLI_EXE \
    --sn platform \
    --op GetAggregatePaymentProviders \
    > test.out 2>&1
eval_tap $? 370 'GetAggregatePaymentProviders' test.out

#- 371 DebugMatchedPaymentProviderConfig
$CLI_EXE \
    --sn platform \
    --op DebugMatchedPaymentProviderConfig \
    --namespace_ 'Fo5IifVX' \
    --region 'iPWUc6RD' \
    > test.out 2>&1
eval_tap $? 371 'DebugMatchedPaymentProviderConfig' test.out

#- 372 GetSpecialPaymentProviders
$CLI_EXE \
    --sn platform \
    --op GetSpecialPaymentProviders \
    > test.out 2>&1
eval_tap $? 372 'GetSpecialPaymentProviders' test.out

#- 373 UpdatePaymentProviderConfig
# body param: body
echo '{"aggregate": "XSOLLA", "namespace": "pIgu8Z3R", "region": "ltQM8GYg", "sandboxTaxJarApiToken": "HhhM5OCw", "specials": ["ADYEN", "NEONPAY", "PAYPAL"], "taxJarApiToken": "VT8ncbMt", "taxJarEnabled": true, "useGlobalTaxJarApiToken": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePaymentProviderConfig \
    --id 'I6GpRSPs' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 373 'UpdatePaymentProviderConfig' test.out

#- 374 DeletePaymentProviderConfig
$CLI_EXE \
    --sn platform \
    --op DeletePaymentProviderConfig \
    --id '5K1RUq81' \
    > test.out 2>&1
eval_tap $? 374 'DeletePaymentProviderConfig' test.out

#- 375 GetPaymentTaxConfig
$CLI_EXE \
    --sn platform \
    --op GetPaymentTaxConfig \
    > test.out 2>&1
eval_tap $? 375 'GetPaymentTaxConfig' test.out

#- 376 UpdatePaymentTaxConfig
# body param: body
echo '{"sandboxTaxJarApiToken": "wa3lEGCy", "taxJarApiToken": "FyXKSaxw", "taxJarEnabled": true, "taxJarProductCodesMapping": {"euN87DcN": "xxp0XC3o", "wK8wYnpR": "gey2hrj9", "ShXTK33U": "7aBf84oY"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePaymentTaxConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 376 'UpdatePaymentTaxConfig' test.out

#- 377 SyncPaymentOrders
$CLI_EXE \
    --sn platform \
    --op SyncPaymentOrders \
    --nextEvaluatedKey 'yNqA8VVM' \
    --end 'ZQPc6fQz' \
    --start 'XNk59mmV' \
    > test.out 2>&1
eval_tap $? 377 'SyncPaymentOrders' test.out

#- 378 PublicGetRootCategories
$CLI_EXE \
    --sn platform \
    --op PublicGetRootCategories \
    --namespace $AB_NAMESPACE \
    --language '6vh92Y3p' \
    --storeId 'WNmz9VcD' \
    > test.out 2>&1
eval_tap $? 378 'PublicGetRootCategories' test.out

#- 379 DownloadCategories
$CLI_EXE \
    --sn platform \
    --op DownloadCategories \
    --namespace $AB_NAMESPACE \
    --language 'jnwu82ip' \
    --storeId 'Xq1tDjQj' \
    > test.out 2>&1
eval_tap $? 379 'DownloadCategories' test.out

#- 380 PublicGetCategory
$CLI_EXE \
    --sn platform \
    --op PublicGetCategory \
    --categoryPath 'OkNXOiuw' \
    --namespace $AB_NAMESPACE \
    --language 'WlAPHTie' \
    --storeId 'vxORtxqD' \
    > test.out 2>&1
eval_tap $? 380 'PublicGetCategory' test.out

#- 381 PublicGetChildCategories
$CLI_EXE \
    --sn platform \
    --op PublicGetChildCategories \
    --categoryPath 'sebQ9c3B' \
    --namespace $AB_NAMESPACE \
    --language 'P31Ofnzn' \
    --storeId 'o1Ni9hvM' \
    > test.out 2>&1
eval_tap $? 381 'PublicGetChildCategories' test.out

#- 382 PublicGetDescendantCategories
$CLI_EXE \
    --sn platform \
    --op PublicGetDescendantCategories \
    --categoryPath 'ymLgtO4b' \
    --namespace $AB_NAMESPACE \
    --language 'C80KFh94' \
    --storeId 'VYEsF80s' \
    > test.out 2>&1
eval_tap $? 382 'PublicGetDescendantCategories' test.out

#- 383 PublicListCurrencies
$CLI_EXE \
    --sn platform \
    --op PublicListCurrencies \
    --namespace $AB_NAMESPACE \
    --currencyType 'REAL' \
    > test.out 2>&1
eval_tap $? 383 'PublicListCurrencies' test.out

#- 384 GeDLCDurableRewardShortMap
$CLI_EXE \
    --sn platform \
    --op GeDLCDurableRewardShortMap \
    --namespace $AB_NAMESPACE \
    --dlcType 'OCULUS' \
    > test.out 2>&1
eval_tap $? 384 'GeDLCDurableRewardShortMap' test.out

#- 385 GetAppleConfigVersion
$CLI_EXE \
    --sn platform \
    --op GetAppleConfigVersion \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 385 'GetAppleConfigVersion' test.out

#- 386 GetIAPItemMapping
$CLI_EXE \
    --sn platform \
    --op GetIAPItemMapping \
    --namespace $AB_NAMESPACE \
    --platform 'STEAM' \
    > test.out 2>&1
eval_tap $? 386 'GetIAPItemMapping' test.out

#- 387 PublicGetItemByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetItemByAppId \
    --namespace $AB_NAMESPACE \
    --language 'OkRcrzOq' \
    --region 'fU6PHcKR' \
    --storeId 'dQCiuwIh' \
    --appId 'ZpQ2K1fG' \
    > test.out 2>&1
eval_tap $? 387 'PublicGetItemByAppId' test.out

#- 388 PublicQueryItems
$CLI_EXE \
    --sn platform \
    --op PublicQueryItems \
    --namespace $AB_NAMESPACE \
    --appType 'GAME' \
    --autoCalcEstimatedPrice 'false' \
    --baseAppId 'SWKWeS6V' \
    --categoryPath 'WDMYOJIK' \
    --features '9nh6Oc4j' \
    --includeSubCategoryItem 'false' \
    --itemType 'SUBSCRIPTION' \
    --language 'tvxZvADW' \
    --limit '61' \
    --offset '7' \
    --region '7W3H5i86' \
    --sortBy '["name:desc", "createdAt", "updatedAt:desc"]' \
    --storeId 'ckgGgCaj' \
    --tags 'vuGny9or' \
    > test.out 2>&1
eval_tap $? 388 'PublicQueryItems' test.out

#- 389 PublicGetItemBySku
$CLI_EXE \
    --sn platform \
    --op PublicGetItemBySku \
    --namespace $AB_NAMESPACE \
    --autoCalcEstimatedPrice 'true' \
    --language 'O9G4p8vR' \
    --region 'hOp2ISmV' \
    --storeId 'yZUAWCHY' \
    --sku '6vbhHFTt' \
    > test.out 2>&1
eval_tap $? 389 'PublicGetItemBySku' test.out

#- 390 PublicGetEstimatedPrice
$CLI_EXE \
    --sn platform \
    --op PublicGetEstimatedPrice \
    --namespace $AB_NAMESPACE \
    --region '8qxxEPAV' \
    --storeId 'pM8atWlO' \
    --itemIds '1WlWQery' \
    > test.out 2>&1
eval_tap $? 390 'PublicGetEstimatedPrice' test.out

#- 391 PublicBulkGetItems
$CLI_EXE \
    --sn platform \
    --op PublicBulkGetItems \
    --namespace $AB_NAMESPACE \
    --autoCalcEstimatedPrice 'true' \
    --language 'zjQicKm7' \
    --region 'iKvUGOPG' \
    --storeId 'nKiOxDOO' \
    --itemIds 'GdP8KxwO' \
    > test.out 2>&1
eval_tap $? 391 'PublicBulkGetItems' test.out

#- 392 PublicValidateItemPurchaseCondition
# body param: body
echo '{"itemIds": ["QLzGqmZ3", "W9cGTCkZ", "bP7fWaAc"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicValidateItemPurchaseCondition \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 392 'PublicValidateItemPurchaseCondition' test.out

#- 393 PublicSearchItems
$CLI_EXE \
    --sn platform \
    --op PublicSearchItems \
    --namespace $AB_NAMESPACE \
    --autoCalcEstimatedPrice 'false' \
    --itemType 'COINS' \
    --limit '74' \
    --offset '52' \
    --region 'MUCW2mtY' \
    --storeId 'VHwocez8' \
    --keyword 'wmNHx03W' \
    --language 'UmU6WgAB' \
    > test.out 2>&1
eval_tap $? 393 'PublicSearchItems' test.out

#- 394 PublicGetApp
$CLI_EXE \
    --sn platform \
    --op PublicGetApp \
    --itemId 'FuT3ftOS' \
    --namespace $AB_NAMESPACE \
    --language 'F58LCb8r' \
    --region 'rAxESyYY' \
    --storeId '02Jqiqv0' \
    > test.out 2>&1
eval_tap $? 394 'PublicGetApp' test.out

#- 395 PublicGetItemDynamicData
$CLI_EXE \
    --sn platform \
    --op PublicGetItemDynamicData \
    --itemId 'jzRzk563' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 395 'PublicGetItemDynamicData' test.out

#- 396 PublicGetItem
$CLI_EXE \
    --sn platform \
    --op PublicGetItem \
    --itemId 'nYev1yWl' \
    --namespace $AB_NAMESPACE \
    --autoCalcEstimatedPrice 'false' \
    --language '2EIjMd19' \
    --populateBundle 'true' \
    --region 'WzkxHUJY' \
    --storeId 'fFjb5PRl' \
    > test.out 2>&1
eval_tap $? 396 'PublicGetItem' test.out

#- 397 GetPaymentCustomization
eval_tap 0 397 'GetPaymentCustomization # SKIP deprecated' test.out

#- 398 PublicGetPaymentUrl
# body param: body
echo '{"neonPayConfig": {"cancelUrl": "lWFEAAOL", "successUrl": "VDVWdz0A"}, "paymentOrderNo": "VO0W2QPD", "paymentProvider": "PAYPAL", "returnUrl": "jgFiVhM0", "ui": "U7sTt8lH", "zipCode": "daFO7r2P"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicGetPaymentUrl \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 398 'PublicGetPaymentUrl' test.out

#- 399 PublicGetPaymentMethods
$CLI_EXE \
    --sn platform \
    --op PublicGetPaymentMethods \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'kZ7KKrnE' \
    > test.out 2>&1
eval_tap $? 399 'PublicGetPaymentMethods' test.out

#- 400 PublicGetUnpaidPaymentOrder
$CLI_EXE \
    --sn platform \
    --op PublicGetUnpaidPaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'mBz6HqhD' \
    > test.out 2>&1
eval_tap $? 400 'PublicGetUnpaidPaymentOrder' test.out

#- 401 Pay
# body param: body
echo '{"token": "aq5pZVVG"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op Pay \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'ofpT4L8Z' \
    --paymentProvider 'PAYPAL' \
    --zipCode 'ANxXjKCm' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 401 'Pay' test.out

#- 402 PublicCheckPaymentOrderPaidStatus
$CLI_EXE \
    --sn platform \
    --op PublicCheckPaymentOrderPaidStatus \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'sC9QBtTQ' \
    > test.out 2>&1
eval_tap $? 402 'PublicCheckPaymentOrderPaidStatus' test.out

#- 403 GetPaymentPublicConfig
$CLI_EXE \
    --sn platform \
    --op GetPaymentPublicConfig \
    --namespace $AB_NAMESPACE \
    --sandbox 'true' \
    --paymentProvider 'STRIPE' \
    --region 'IH3uVYgk' \
    > test.out 2>&1
eval_tap $? 403 'GetPaymentPublicConfig' test.out

#- 404 PublicGetQRCode
$CLI_EXE \
    --sn platform \
    --op PublicGetQRCode \
    --namespace $AB_NAMESPACE \
    --code '0wHM73qg' \
    > test.out 2>&1
eval_tap $? 404 'PublicGetQRCode' test.out

#- 405 PublicNormalizePaymentReturnUrl
$CLI_EXE \
    --sn platform \
    --op PublicNormalizePaymentReturnUrl \
    --namespace $AB_NAMESPACE \
    --payerID 'vEuBtrvB' \
    --foreinginvoice '3QWdPisa' \
    --invoiceId 'qeXG7KrD' \
    --payload 'ah9SlZqz' \
    --redirectResult 'DK7sVWh6' \
    --resultCode 'oACN57XB' \
    --sessionId 'o5eZJXJV' \
    --status 'aab1itAv' \
    --token 'YGWEOR1y' \
    --type 'k1GGbLra' \
    --userId 'uYtC6W8n' \
    --orderNo 'HBduMnv3' \
    --paymentOrderNo '6ImzWOVZ' \
    --paymentProvider 'WXPAY' \
    --returnUrl '0QKcBwWP' \
    > test.out 2>&1
eval_tap $? 405 'PublicNormalizePaymentReturnUrl' test.out

#- 406 GetPaymentTaxValue
$CLI_EXE \
    --sn platform \
    --op GetPaymentTaxValue \
    --namespace $AB_NAMESPACE \
    --zipCode '9KLR1Fy3' \
    --paymentOrderNo 'eUyBZVnX' \
    --paymentProvider 'ADYEN' \
    > test.out 2>&1
eval_tap $? 406 'GetPaymentTaxValue' test.out

#- 407 GetRewardByCode
$CLI_EXE \
    --sn platform \
    --op GetRewardByCode \
    --namespace $AB_NAMESPACE \
    --rewardCode 'M6PWDApT' \
    > test.out 2>&1
eval_tap $? 407 'GetRewardByCode' test.out

#- 408 QueryRewards1
$CLI_EXE \
    --sn platform \
    --op QueryRewards1 \
    --namespace $AB_NAMESPACE \
    --eventTopic '3qPZE2Ya' \
    --limit '99' \
    --offset '43' \
    --sortBy '["namespace:desc", "rewardCode", "namespace:asc"]' \
    > test.out 2>&1
eval_tap $? 408 'QueryRewards1' test.out

#- 409 GetReward1
$CLI_EXE \
    --sn platform \
    --op GetReward1 \
    --namespace $AB_NAMESPACE \
    --rewardId 'oroYR0oe' \
    > test.out 2>&1
eval_tap $? 409 'GetReward1' test.out

#- 410 PublicListStores
$CLI_EXE \
    --sn platform \
    --op PublicListStores \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 410 'PublicListStores' test.out

#- 411 PublicExistsAnyMyActiveEntitlement
$CLI_EXE \
    --sn platform \
    --op PublicExistsAnyMyActiveEntitlement \
    --namespace $AB_NAMESPACE \
    --appIds '["18VUL9XD", "wq5Pf0sY", "15oXjb2Q"]' \
    --itemIds '["eqwzYgMx", "Ys5YbBjo", "mYqV3QqF"]' \
    --skus '["oaY1tyrL", "JThP58Zs", "xGBifw2p"]' \
    > test.out 2>&1
eval_tap $? 411 'PublicExistsAnyMyActiveEntitlement' test.out

#- 412 PublicGetMyAppEntitlementOwnershipByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetMyAppEntitlementOwnershipByAppId \
    --namespace $AB_NAMESPACE \
    --appId 'e0yyKKJH' \
    > test.out 2>&1
eval_tap $? 412 'PublicGetMyAppEntitlementOwnershipByAppId' test.out

#- 413 PublicGetMyEntitlementOwnershipByItemId
$CLI_EXE \
    --sn platform \
    --op PublicGetMyEntitlementOwnershipByItemId \
    --namespace $AB_NAMESPACE \
    --entitlementClazz 'MEDIA' \
    --itemId 'tHsj2NAL' \
    > test.out 2>&1
eval_tap $? 413 'PublicGetMyEntitlementOwnershipByItemId' test.out

#- 414 PublicGetMyEntitlementOwnershipBySku
$CLI_EXE \
    --sn platform \
    --op PublicGetMyEntitlementOwnershipBySku \
    --namespace $AB_NAMESPACE \
    --entitlementClazz 'SUBSCRIPTION' \
    --sku '61uXURvy' \
    > test.out 2>&1
eval_tap $? 414 'PublicGetMyEntitlementOwnershipBySku' test.out

#- 415 PublicGetEntitlementOwnershipToken
$CLI_EXE \
    --sn platform \
    --op PublicGetEntitlementOwnershipToken \
    --namespace $AB_NAMESPACE \
    --appIds '["lpFEgUdt", "3JSnnkRl", "scioPvvE"]' \
    --itemIds '["fs3ewrK9", "TW6hzP29", "304YutWe"]' \
    --skus '["Etad3pS4", "ELDZ7XgL", "Oa2CgxBI"]' \
    > test.out 2>&1
eval_tap $? 415 'PublicGetEntitlementOwnershipToken' test.out

#- 416 SyncTwitchDropsEntitlement
# body param: body
echo '{"gameId": "DYHd9O8m", "language": "uYUS_ejgM_Ok", "region": "YXmP04Ra"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncTwitchDropsEntitlement \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 416 'SyncTwitchDropsEntitlement' test.out

#- 417 PublicGetMyWallet
$CLI_EXE \
    --sn platform \
    --op PublicGetMyWallet \
    --currencyCode 'bpa6kTeY' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 417 'PublicGetMyWallet' test.out

#- 418 SyncEpicGameDLC
# body param: body
echo '{"epicGamesJwtToken": "VI2d2wiS"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncEpicGameDLC \
    --namespace $AB_NAMESPACE \
    --userId '9Bg1N3ut' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 418 'SyncEpicGameDLC' test.out

#- 419 SyncOculusDLC
$CLI_EXE \
    --sn platform \
    --op SyncOculusDLC \
    --namespace $AB_NAMESPACE \
    --userId 'aGkWR84C' \
    > test.out 2>&1
eval_tap $? 419 'SyncOculusDLC' test.out

#- 420 PublicSyncPsnDlcInventory
# body param: body
echo '{"serviceLabel": 47}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicSyncPsnDlcInventory \
    --namespace $AB_NAMESPACE \
    --userId 'M4UgHWA3' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 420 'PublicSyncPsnDlcInventory' test.out

#- 421 PublicSyncPsnDlcInventoryWithMultipleServiceLabels
# body param: body
echo '{"serviceLabels": [21, 76, 37]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicSyncPsnDlcInventoryWithMultipleServiceLabels \
    --namespace $AB_NAMESPACE \
    --userId 'BzcnoZFW' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 421 'PublicSyncPsnDlcInventoryWithMultipleServiceLabels' test.out

#- 422 SyncSteamDLC
# body param: body
echo '{"appId": "lgFLbABb", "steamId": "sZEJICkX"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncSteamDLC \
    --namespace $AB_NAMESPACE \
    --userId 'oHmz4P9I' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 422 'SyncSteamDLC' test.out

#- 423 SyncXboxDLC
# body param: body
echo '{"xstsToken": "EO7xHXJR"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncXboxDLC \
    --namespace $AB_NAMESPACE \
    --userId 'MuM9rIi8' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 423 'SyncXboxDLC' test.out

#- 424 PublicQueryUserEntitlements
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserEntitlements \
    --namespace $AB_NAMESPACE \
    --userId 'jBlyaaIv' \
    --appType 'DLC' \
    --entitlementClazz 'OPTIONBOX' \
    --entitlementName 'YK1EzUO5' \
    --features '["FFH5SXfV", "DZCviLgR", "heif7lAs"]' \
    --itemId '["8HIx3Enh", "DqN1uA0H", "JXKdSyDF"]' \
    --limit '29' \
    --offset '19' \
    > test.out 2>&1
eval_tap $? 424 'PublicQueryUserEntitlements' test.out

#- 425 PublicGetUserAppEntitlementByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetUserAppEntitlementByAppId \
    --namespace $AB_NAMESPACE \
    --userId '84bPAH1x' \
    --appId 'hacrnmlK' \
    > test.out 2>&1
eval_tap $? 425 'PublicGetUserAppEntitlementByAppId' test.out

#- 426 PublicQueryUserEntitlementsByAppType
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserEntitlementsByAppType \
    --namespace $AB_NAMESPACE \
    --userId 'gAFs5wqJ' \
    --limit '2' \
    --offset '8' \
    --appType 'SOFTWARE' \
    > test.out 2>&1
eval_tap $? 426 'PublicQueryUserEntitlementsByAppType' test.out

#- 427 PublicGetUserEntitlementsByIds
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementsByIds \
    --namespace $AB_NAMESPACE \
    --userId 'RgKbSQK5' \
    --availablePlatformOnly 'true' \
    --ids '["O0QM9Huv", "kzwULetH", "0ZBy7C6Y"]' \
    > test.out 2>&1
eval_tap $? 427 'PublicGetUserEntitlementsByIds' test.out

#- 428 PublicGetUserEntitlementByItemId
eval_tap 0 428 'PublicGetUserEntitlementByItemId # SKIP deprecated' test.out

#- 429 PublicGetUserEntitlementBySku
eval_tap 0 429 'PublicGetUserEntitlementBySku # SKIP deprecated' test.out

#- 430 PublicUserEntitlementHistory
$CLI_EXE \
    --sn platform \
    --op PublicUserEntitlementHistory \
    --namespace $AB_NAMESPACE \
    --userId 'ZtjivaNX' \
    --endDate 'SAfIktxR' \
    --entitlementClazz 'OPTIONBOX' \
    --limit '6' \
    --offset '6' \
    --startDate 'lqbao999' \
    > test.out 2>&1
eval_tap $? 430 'PublicUserEntitlementHistory' test.out

#- 431 PublicExistsAnyUserActiveEntitlement
$CLI_EXE \
    --sn platform \
    --op PublicExistsAnyUserActiveEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'h02riplz' \
    --appIds '["yXjHWNGe", "SHuT54GA", "Xpht6vOB"]' \
    --itemIds '["CZWMCUaR", "h4DtXzXR", "64xVjb2S"]' \
    --skus '["RXm4CyOM", "Hp2O5UyG", "5K5t4qsl"]' \
    > test.out 2>&1
eval_tap $? 431 'PublicExistsAnyUserActiveEntitlement' test.out

#- 432 PublicGetUserAppEntitlementOwnershipByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetUserAppEntitlementOwnershipByAppId \
    --namespace $AB_NAMESPACE \
    --userId 'LA4Itplc' \
    --appId 'A4crRt0Z' \
    > test.out 2>&1
eval_tap $? 432 'PublicGetUserAppEntitlementOwnershipByAppId' test.out

#- 433 PublicGetUserEntitlementOwnershipByItemId
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementOwnershipByItemId \
    --namespace $AB_NAMESPACE \
    --userId '7aslRzZV' \
    --entitlementClazz 'ENTITLEMENT' \
    --itemId 'B0nGrJEk' \
    > test.out 2>&1
eval_tap $? 433 'PublicGetUserEntitlementOwnershipByItemId' test.out

#- 434 PublicGetUserEntitlementOwnershipByItemIds
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementOwnershipByItemIds \
    --namespace $AB_NAMESPACE \
    --userId 'cNwyAlv1' \
    --ids '["Efkwh2U7", "3zSFDWCX", "nevlmrok"]' \
    > test.out 2>&1
eval_tap $? 434 'PublicGetUserEntitlementOwnershipByItemIds' test.out

#- 435 PublicGetUserEntitlementOwnershipBySku
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementOwnershipBySku \
    --namespace $AB_NAMESPACE \
    --userId 'SrUnAWGr' \
    --entitlementClazz 'OPTIONBOX' \
    --sku 'cNXYzqy1' \
    > test.out 2>&1
eval_tap $? 435 'PublicGetUserEntitlementOwnershipBySku' test.out

#- 436 PublicGetUserEntitlement
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlement \
    --entitlementId 'jvjgF67p' \
    --namespace $AB_NAMESPACE \
    --userId 'YvUerrbb' \
    > test.out 2>&1
eval_tap $? 436 'PublicGetUserEntitlement' test.out

#- 437 PublicConsumeUserEntitlement
# body param: body
echo '{"metadata": {"operationSource": "INVENTORY"}, "options": ["NLLTz63g", "YquPHlNE", "77gOPALA"], "requestId": "Y4ZThdXE", "useCount": 26}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicConsumeUserEntitlement \
    --entitlementId 'gjMfsr36' \
    --namespace $AB_NAMESPACE \
    --userId 'GUDPDLaH' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 437 'PublicConsumeUserEntitlement' test.out

#- 438 PublicSellUserEntitlement
# body param: body
echo '{"requestId": "i84wnyN9", "useCount": 81}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicSellUserEntitlement \
    --entitlementId 'YwNblPhk' \
    --namespace $AB_NAMESPACE \
    --userId 'fWx994wM' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 438 'PublicSellUserEntitlement' test.out

#- 439 PublicSplitUserEntitlement
# body param: body
echo '{"metadata": {"operationSource": "INVENTORY"}, "useCount": 94}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicSplitUserEntitlement \
    --entitlementId 'okEBxwKl' \
    --namespace $AB_NAMESPACE \
    --userId 'kOs3FHMy' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 439 'PublicSplitUserEntitlement' test.out

#- 440 PublicTransferUserEntitlement
# body param: body
echo '{"entitlementId": "wRlwF8GX", "metadata": {"operationSource": "INVENTORY"}, "useCount": 64}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicTransferUserEntitlement \
    --entitlementId 'CMaYSL2X' \
    --namespace $AB_NAMESPACE \
    --userId 'hJ4hzFnr' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 440 'PublicTransferUserEntitlement' test.out

#- 441 PublicRedeemCode
# body param: body
echo '{"code": "o0xZ4xI1", "language": "FH_YWjm", "region": "8vQ5KD29"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicRedeemCode \
    --namespace $AB_NAMESPACE \
    --userId 'zFcqo4RZ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 441 'PublicRedeemCode' test.out

#- 442 PublicFulfillAppleIAPItem
# body param: body
echo '{"excludeOldTransactions": false, "language": "qnY-MqUN", "productId": "s19FIBmF", "receiptData": "fHHMPNg1", "region": "w9Fx1fWo", "transactionId": "iCHOXWXa"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicFulfillAppleIAPItem \
    --namespace $AB_NAMESPACE \
    --userId 'sP2JN9rs' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 442 'PublicFulfillAppleIAPItem' test.out

#- 443 SyncEpicGamesInventory
# body param: body
echo '{"epicGamesJwtToken": "W2Y4fbmg"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncEpicGamesInventory \
    --namespace $AB_NAMESPACE \
    --userId 'UgcRxfAy' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 443 'SyncEpicGamesInventory' test.out

#- 444 PublicFulfillGoogleIAPItem
# body param: body
echo '{"autoAck": false, "autoConsume": true, "language": "UAM-PVAD", "orderId": "eqDoSuIW", "packageName": "RCzVClNu", "productId": "8pqD5Z7x", "purchaseTime": 22, "purchaseToken": "Psdkc2cF", "region": "JomSuDJO", "subscriptionPurchase": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicFulfillGoogleIAPItem \
    --namespace $AB_NAMESPACE \
    --userId 'jPhv0sRv' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 444 'PublicFulfillGoogleIAPItem' test.out

#- 445 SyncOculusConsumableEntitlements
$CLI_EXE \
    --sn platform \
    --op SyncOculusConsumableEntitlements \
    --namespace $AB_NAMESPACE \
    --userId '1Nh2qW1e' \
    > test.out 2>&1
eval_tap $? 445 'SyncOculusConsumableEntitlements' test.out

#- 446 PublicReconcilePlayStationStore
# body param: body
echo '{"currencyCode": "1aoIRVic", "price": 0.3857263277513895, "productId": "Bp7UknOM", "serviceLabel": 51}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicReconcilePlayStationStore \
    --namespace $AB_NAMESPACE \
    --userId 'v8CjNbuI' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 446 'PublicReconcilePlayStationStore' test.out

#- 447 PublicReconcilePlayStationStoreWithMultipleServiceLabels
# body param: body
echo '{"currencyCode": "UqnND7eW", "price": 0.8552004479148267, "productId": "FyJ6fqHI", "serviceLabels": [33, 66, 51]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicReconcilePlayStationStoreWithMultipleServiceLabels \
    --namespace $AB_NAMESPACE \
    --userId 'LeLVupAS' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 447 'PublicReconcilePlayStationStoreWithMultipleServiceLabels' test.out

#- 448 SyncSteamInventory
# body param: body
echo '{"appId": "D2LJMohM", "currencyCode": "EcEfXYUD", "language": "mBNX", "price": 0.8210388697087125, "productId": "X7DDi7sZ", "region": "ie1DkV7q", "steamId": "flvjtz4R"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncSteamInventory \
    --namespace $AB_NAMESPACE \
    --userId 'Us313PbH' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 448 'SyncSteamInventory' test.out

#- 449 PublicQueryUserThirdPartySubscription
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserThirdPartySubscription \
    --namespace $AB_NAMESPACE \
    --platform 'XBOX' \
    --userId 'lFKO2WBM' \
    --activeOnly 'false' \
    --groupId 'P8bDxIC6' \
    --limit '22' \
    --offset '4' \
    --productId 'LM3QZpLD' \
    > test.out 2>&1
eval_tap $? 449 'PublicQueryUserThirdPartySubscription' test.out

#- 450 SyncTwitchDropsEntitlement1
# body param: body
echo '{"gameId": "p6PwLTWe", "language": "oE-221", "region": "abIUNwpN"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncTwitchDropsEntitlement1 \
    --namespace $AB_NAMESPACE \
    --userId 'Zc49VEi7' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 450 'SyncTwitchDropsEntitlement1' test.out

#- 451 SyncXboxInventory
# body param: body
echo '{"currencyCode": "jOViZJa4", "price": 0.3211930797909761, "productId": "fUGeRFpu", "xstsToken": "sbMDJ6Oq"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncXboxInventory \
    --namespace $AB_NAMESPACE \
    --userId 'dgx2oNA6' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 451 'SyncXboxInventory' test.out

#- 452 PublicQueryUserOrders
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserOrders \
    --namespace $AB_NAMESPACE \
    --userId 'EHAXbpoz' \
    --discounted 'true' \
    --itemId 'M1lG3hX1' \
    --limit '45' \
    --offset '36' \
    --status 'INIT' \
    > test.out 2>&1
eval_tap $? 452 'PublicQueryUserOrders' test.out

#- 453 PublicCreateUserOrder
# body param: body
echo '{"currencyCode": "kHMNjWQ9", "discountCodes": ["WXt54OSs", "llhWGVEW", "DMR9WYpU"], "discountedPrice": 96, "ext": {"sdA3Mfab": {}, "hw4IRvPb": {}, "q4WJeXNg": {}}, "itemId": "KAbKEIkO", "language": "tV_434", "price": 76, "quantity": 23, "region": "X0T2bsRl", "returnUrl": "hch9Iu88", "sectionId": "NKwo2VJb"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicCreateUserOrder \
    --namespace $AB_NAMESPACE \
    --userId 'GhOC1kcY' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 453 'PublicCreateUserOrder' test.out

#- 454 PublicPreviewOrderPrice
# body param: body
echo '{"currencyCode": "k8lGH3Ib", "discountCodes": ["RkrYhLnI", "F7cRtf3E", "NmlOtcHa"], "discountedPrice": 22, "itemId": "76yyDdKm", "price": 86, "quantity": 6}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicPreviewOrderPrice \
    --namespace $AB_NAMESPACE \
    --userId 'HNVzpFya' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 454 'PublicPreviewOrderPrice' test.out

#- 455 PublicGetUserOrder
$CLI_EXE \
    --sn platform \
    --op PublicGetUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo '0CKTdkYU' \
    --userId 'hDTpfWPk' \
    > test.out 2>&1
eval_tap $? 455 'PublicGetUserOrder' test.out

#- 456 PublicCancelUserOrder
$CLI_EXE \
    --sn platform \
    --op PublicCancelUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo '0Ezo3VqH' \
    --userId 'qxWt0S5k' \
    > test.out 2>&1
eval_tap $? 456 'PublicCancelUserOrder' test.out

#- 457 PublicGetUserOrderHistories
$CLI_EXE \
    --sn platform \
    --op PublicGetUserOrderHistories \
    --namespace $AB_NAMESPACE \
    --orderNo '7xhdL6Te' \
    --userId '7j9zl0pT' \
    > test.out 2>&1
eval_tap $? 457 'PublicGetUserOrderHistories' test.out

#- 458 PublicDownloadUserOrderReceipt
$CLI_EXE \
    --sn platform \
    --op PublicDownloadUserOrderReceipt \
    --namespace $AB_NAMESPACE \
    --orderNo 'xXbxzvLp' \
    --userId 'ee0JXj7o' \
    > test.out 2>&1
eval_tap $? 458 'PublicDownloadUserOrderReceipt' test.out

#- 459 PublicGetPaymentAccounts
$CLI_EXE \
    --sn platform \
    --op PublicGetPaymentAccounts \
    --namespace $AB_NAMESPACE \
    --userId 'hFGXkuZu' \
    > test.out 2>&1
eval_tap $? 459 'PublicGetPaymentAccounts' test.out

#- 460 PublicDeletePaymentAccount
$CLI_EXE \
    --sn platform \
    --op PublicDeletePaymentAccount \
    --id 'p6zq1Gip' \
    --namespace $AB_NAMESPACE \
    --type 'paypal' \
    --userId '70sCxqL3' \
    > test.out 2>&1
eval_tap $? 460 'PublicDeletePaymentAccount' test.out

#- 461 PublicListActiveSections
$CLI_EXE \
    --sn platform \
    --op PublicListActiveSections \
    --namespace $AB_NAMESPACE \
    --userId 'JStOd7hZ' \
    --autoCalcEstimatedPrice 'false' \
    --language 'orwhFVDh' \
    --region 'ewFRiz2H' \
    --storeId 'WAHP7Aq3' \
    --viewId 'nMWGZkCM' \
    > test.out 2>&1
eval_tap $? 461 'PublicListActiveSections' test.out

#- 462 PublicQueryUserSubscriptions
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserSubscriptions \
    --namespace $AB_NAMESPACE \
    --userId 'eb298SIT' \
    --chargeStatus 'SETUP' \
    --itemId 'Mo6jcROy' \
    --limit '69' \
    --offset '31' \
    --sku 'D3yoJqe8' \
    --status 'INIT' \
    --subscribedBy 'USER' \
    > test.out 2>&1
eval_tap $? 462 'PublicQueryUserSubscriptions' test.out

#- 463 PublicSubscribeSubscription
# body param: body
echo '{"currencyCode": "QjIRiKsc", "itemId": "QQ2OzGIe", "language": "dgX_NRDv", "region": "aPWeE6bZ", "returnUrl": "DdYcHSgv", "source": "1mE0yhpK"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicSubscribeSubscription \
    --namespace $AB_NAMESPACE \
    --userId 'QS6Me2bi' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 463 'PublicSubscribeSubscription' test.out

#- 464 PublicCheckUserSubscriptionSubscribableByItemId
$CLI_EXE \
    --sn platform \
    --op PublicCheckUserSubscriptionSubscribableByItemId \
    --namespace $AB_NAMESPACE \
    --userId '5wTfXn6O' \
    --itemId 'MaL7JuFq' \
    > test.out 2>&1
eval_tap $? 464 'PublicCheckUserSubscriptionSubscribableByItemId' test.out

#- 465 PublicGetUserSubscription
$CLI_EXE \
    --sn platform \
    --op PublicGetUserSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'NQje5HjL' \
    --userId '45FuwAUX' \
    > test.out 2>&1
eval_tap $? 465 'PublicGetUserSubscription' test.out

#- 466 PublicChangeSubscriptionBillingAccount
$CLI_EXE \
    --sn platform \
    --op PublicChangeSubscriptionBillingAccount \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'ez46Sjfm' \
    --userId 'PdUuFKuT' \
    > test.out 2>&1
eval_tap $? 466 'PublicChangeSubscriptionBillingAccount' test.out

#- 467 PublicCancelSubscription
# body param: body
echo '{"immediate": false, "reason": "32yi0cos"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicCancelSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'uc7802nq' \
    --userId 'cWAkKHTA' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 467 'PublicCancelSubscription' test.out

#- 468 PublicGetUserSubscriptionBillingHistories
$CLI_EXE \
    --sn platform \
    --op PublicGetUserSubscriptionBillingHistories \
    --namespace $AB_NAMESPACE \
    --subscriptionId '6F6QIuwv' \
    --userId 'S4XI19LT' \
    --excludeFree 'true' \
    --limit '81' \
    --offset '37' \
    > test.out 2>&1
eval_tap $? 468 'PublicGetUserSubscriptionBillingHistories' test.out

#- 469 PublicListViews
$CLI_EXE \
    --sn platform \
    --op PublicListViews \
    --namespace $AB_NAMESPACE \
    --userId '0lSxwFBM' \
    --language 'QOBPUKUW' \
    --storeId 'g6zblhUq' \
    > test.out 2>&1
eval_tap $? 469 'PublicListViews' test.out

#- 470 PublicGetWallet
$CLI_EXE \
    --sn platform \
    --op PublicGetWallet \
    --currencyCode 'BJ4bI4v0' \
    --namespace $AB_NAMESPACE \
    --userId 'nmko4z1M' \
    > test.out 2>&1
eval_tap $? 470 'PublicGetWallet' test.out

#- 471 PublicListUserWalletTransactions
$CLI_EXE \
    --sn platform \
    --op PublicListUserWalletTransactions \
    --currencyCode 'qbFAk0Nw' \
    --namespace $AB_NAMESPACE \
    --userId '2UplqcX3' \
    --limit '11' \
    --offset '72' \
    > test.out 2>&1
eval_tap $? 471 'PublicListUserWalletTransactions' test.out

#- 472 PublicGetMyDLCContent
$CLI_EXE \
    --sn platform \
    --op PublicGetMyDLCContent \
    --includeAllNamespaces 'false' \
    --type 'PSN' \
    > test.out 2>&1
eval_tap $? 472 'PublicGetMyDLCContent' test.out

#- 473 QueryFulfillments
$CLI_EXE \
    --sn platform \
    --op QueryFulfillments \
    --namespace $AB_NAMESPACE \
    --endTime '8SBAyKD4' \
    --limit '92' \
    --offset '83' \
    --startTime 'ErxitPkl' \
    --state 'FULFILLED' \
    --transactionId 'K59TmJ4x' \
    --userId '04a0fg4J' \
    > test.out 2>&1
eval_tap $? 473 'QueryFulfillments' test.out

#- 474 QueryItemsV2
$CLI_EXE \
    --sn platform \
    --op QueryItemsV2 \
    --namespace $AB_NAMESPACE \
    --appType 'SOFTWARE' \
    --availableDate 'Va9bgV14' \
    --baseAppId 'MjuzVlBC' \
    --categoryPath 'deMWTodu' \
    --features 'WRS9vycn' \
    --includeSubCategoryItem 'true' \
    --itemName 'rJDYmVEi' \
    --itemStatus 'ACTIVE' \
    --itemType '["APP", "LOOTBOX", "APP"]' \
    --limit '81' \
    --offset '60' \
    --region 'NGGUAQjl' \
    --sectionExclusive 'false' \
    --sortBy '["createdAt", "updatedAt:desc"]' \
    --storeId 'XnMysr7e' \
    --tags 'xUPQAnZ3' \
    --targetNamespace '9Bybob76' \
    --withTotal 'true' \
    > test.out 2>&1
eval_tap $? 474 'QueryItemsV2' test.out

#- 475 ImportStore1
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op ImportStore1 \
    --namespace $AB_NAMESPACE \
    --storeId 'gxQ0AdGv' \
    --strictMode 'true' \
    --upload file $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 475 'ImportStore1' test.out

#- 476 ExportStore1
# body param: body
echo '{"itemIds": ["3ZUOIUaq", "kOpb2Xqg", "trUvO1lX"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ExportStore1 \
    --namespace $AB_NAMESPACE \
    --storeId 'cAU2SRdY' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 476 'ExportStore1' test.out

#- 477 FulfillRewardsV2
# body param: body
echo '{"entitlementCollectionId": "rbJMj6na", "entitlementOrigin": "Oculus", "metadata": {"V2rS6X9A": {}, "WeP4h8qM": {}, "qJ3aG56j": {}}, "origin": "Playstation", "rewards": [{"currency": {"currencyCode": "hicuk28S", "namespace": "yjmfJlcy"}, "item": {"itemId": "5S90XVdZ", "itemName": "drmHJo56", "itemSku": "QFNIWmKd", "itemType": "eY4qjSoO"}, "quantity": 70, "type": "CURRENCY"}, {"currency": {"currencyCode": "fDiwDEBN", "namespace": "Xx269rdX"}, "item": {"itemId": "pDE5RqXj", "itemName": "gUjljF7w", "itemSku": "FrAtwqml", "itemType": "LsZhFyTs"}, "quantity": 23, "type": "CURRENCY"}, {"currency": {"currencyCode": "1UeOABQx", "namespace": "WV2YOYAq"}, "item": {"itemId": "soooWVpQ", "itemName": "TXT6GKbc", "itemSku": "KmikJb1z", "itemType": "EbVWVm10"}, "quantity": 76, "type": "CURRENCY"}], "source": "PURCHASE", "transactionId": "JULfTiGv"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op FulfillRewardsV2 \
    --namespace $AB_NAMESPACE \
    --userId 'cYqUaOXk' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 477 'FulfillRewardsV2' test.out

#- 478 FulfillItems
eval_tap 0 478 'FulfillItems # SKIP deprecated' test.out

#- 479 RetryFulfillItems
eval_tap 0 479 'RetryFulfillItems # SKIP deprecated' test.out

#- 480 RevokeItems
eval_tap 0 480 'RevokeItems # SKIP deprecated' test.out

#- 481 V2PublicFulfillAppleIAPItem
# body param: body
echo '{"transactionId": "l9F9pHBI"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op V2PublicFulfillAppleIAPItem \
    --namespace $AB_NAMESPACE \
    --userId 'aAh1LfI6' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 481 'V2PublicFulfillAppleIAPItem' test.out

#- 482 FulfillItemsV3
# body param: body
echo '{"items": [{"duration": 38, "endDate": "1996-08-20T00:00:00Z", "entitlementCollectionId": "b04LqABy", "entitlementOrigin": "Oculus", "itemId": "5ge3eJQQ", "itemSku": "2xqGEjgX", "language": "8Rmy3NvR", "metadata": {"pdSm6S0C": {}, "xaxAAnAy": {}, "gddYkw2A": {}}, "orderNo": "63NG27EX", "origin": "Playstation", "quantity": 1, "region": "8nzGbzuD", "source": "REFERRAL_BONUS", "startDate": "1999-02-03T00:00:00Z", "storeId": "PhNWswj0"}, {"duration": 32, "endDate": "1973-04-02T00:00:00Z", "entitlementCollectionId": "HGBGnVr6", "entitlementOrigin": "Other", "itemId": "j4RFhy5p", "itemSku": "3dHSR1JU", "language": "Z1CMUBS4", "metadata": {"8xXSP0lT": {}, "V5TAzI1M": {}, "cQ35ZWjR": {}}, "orderNo": "0Y3CsL6w", "origin": "Other", "quantity": 85, "region": "9mfip3YF", "source": "REDEEM_CODE", "startDate": "1993-06-24T00:00:00Z", "storeId": "kqUrIMUE"}, {"duration": 27, "endDate": "1981-11-17T00:00:00Z", "entitlementCollectionId": "K31AIgjf", "entitlementOrigin": "Oculus", "itemId": "xoFbEccR", "itemSku": "ZfNKwN8c", "language": "w3UNho7n", "metadata": {"3Cv8384e": {}, "8Bv1HKLo": {}, "xug1Ultp": {}}, "orderNo": "csFkoGNM", "origin": "Nintendo", "quantity": 48, "region": "eoIcCm2m", "source": "GIFT", "startDate": "1975-04-24T00:00:00Z", "storeId": "4eoy6g1W"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op FulfillItemsV3 \
    --namespace $AB_NAMESPACE \
    --transactionId 'ylT5RIzE' \
    --userId 'DP8jefCD' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 482 'FulfillItemsV3' test.out

#- 483 RetryFulfillItemsV3
$CLI_EXE \
    --sn platform \
    --op RetryFulfillItemsV3 \
    --namespace $AB_NAMESPACE \
    --transactionId 'DKH2U5rR' \
    --userId 's9lew5vn' \
    > test.out 2>&1
eval_tap $? 483 'RetryFulfillItemsV3' test.out

#- 484 RevokeItemsV3
$CLI_EXE \
    --sn platform \
    --op RevokeItemsV3 \
    --namespace $AB_NAMESPACE \
    --transactionId 'ZXuOTwE8' \
    --userId 'xrhnDhAm' \
    > test.out 2>&1
eval_tap $? 484 'RevokeItemsV3' test.out


# remove artifacts
rm -f "$CLI_TOKEN_FILE"
rm -f "$TEMP_JSON_INPUT"
rm -f "$TEMP_FILE_UPLOAD"

exit $EXIT_CODE