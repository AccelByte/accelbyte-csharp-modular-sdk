#!/usr/bin/env bash

# Copyright (c) 2021 AccelByte Inc. All Rights Reserved.
# This is licensed software from AccelByte Inc, for limitations
# and restrictions contact your company contract manager.

# This code is generated by tool. DO NOT EDIT.

# Meta:
# - random seed: 
# - template file: 

# Instructions:
# - Run the Justice SDK Mock Server first before running this script.

export AB_BASE_URL="http://127.0.0.1:8080"
export AB_CLIENT_ID="admin"
export AB_CLIENT_SECRET="admin"
export AB_NAMESPACE="test"
export AB_APP_NAME="UnitTest"

EXIT_CODE=0

eval_tap() {
  if [ $1 -eq 0 ]; then
    echo "ok $2 - $3"
  else
    EXIT_CODE=1
    echo "not ok $2 - $3"
    sed 's/^/# /g' $4
  fi
  rm -f $4
}

CLI_EXE="AccelByte.Sdk.Sample.Cli"
CLI_TOKEN_FILE="$(dirname "$(which $CLI_EXE)")/token.json"
TEMP_JSON_INPUT="input_json.json"
TEMP_FILE_UPLOAD="file_upload.bin"

echo "TAP version 13"
echo "1..456"

#- 1 Login
$CLI_EXE --op login --lt user --user user --pass user > test.out 2>&1
eval_tap $? 1 'Login' test.out

if [ $EXIT_CODE -ne 0 ]; then
  echo "Bail out! Login failed."
  exit $EXIT_CODE
fi

# echo "foo" > "$CLI_TOKEN_FILE"

#- 2 ListFulfillmentScripts
$CLI_EXE \
    --sn platform \
    --op ListFulfillmentScripts \
    > test.out 2>&1
eval_tap $? 2 'ListFulfillmentScripts' test.out

#- 3 GetFulfillmentScript
$CLI_EXE \
    --sn platform \
    --op GetFulfillmentScript \
    --id 'yguSvmY0' \
    > test.out 2>&1
eval_tap $? 3 'GetFulfillmentScript' test.out

#- 4 CreateFulfillmentScript
# body param: body
echo '{"grantDays": "4qOV2uwC"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateFulfillmentScript \
    --id 'tsfL0DzO' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 4 'CreateFulfillmentScript' test.out

#- 5 DeleteFulfillmentScript
$CLI_EXE \
    --sn platform \
    --op DeleteFulfillmentScript \
    --id 'lu2qfkXf' \
    > test.out 2>&1
eval_tap $? 5 'DeleteFulfillmentScript' test.out

#- 6 UpdateFulfillmentScript
# body param: body
echo '{"grantDays": "tHpysG3V"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateFulfillmentScript \
    --id 'n29x7ZjY' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 6 'UpdateFulfillmentScript' test.out

#- 7 ListItemTypeConfigs
$CLI_EXE \
    --sn platform \
    --op ListItemTypeConfigs \
    > test.out 2>&1
eval_tap $? 7 'ListItemTypeConfigs' test.out

#- 8 CreateItemTypeConfig
# body param: body
echo '{"clazz": "TgJwLh2q", "dryRun": true, "fulfillmentUrl": "6uWtXBbd", "itemType": "MEDIA", "purchaseConditionUrl": "Qw75cq5P"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateItemTypeConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 8 'CreateItemTypeConfig' test.out

#- 9 SearchItemTypeConfig
$CLI_EXE \
    --sn platform \
    --op SearchItemTypeConfig \
    --clazz 'otZ7wjdk' \
    --itemType 'BUNDLE' \
    > test.out 2>&1
eval_tap $? 9 'SearchItemTypeConfig' test.out

#- 10 GetItemTypeConfig
$CLI_EXE \
    --sn platform \
    --op GetItemTypeConfig \
    --id 'oYsFOENf' \
    > test.out 2>&1
eval_tap $? 10 'GetItemTypeConfig' test.out

#- 11 UpdateItemTypeConfig
# body param: body
echo '{"clazz": "YbGeCHsS", "dryRun": true, "fulfillmentUrl": "9HbBHhtG", "purchaseConditionUrl": "77dV1E2Y"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateItemTypeConfig \
    --id 'tf9fqwHD' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 11 'UpdateItemTypeConfig' test.out

#- 12 DeleteItemTypeConfig
$CLI_EXE \
    --sn platform \
    --op DeleteItemTypeConfig \
    --id 'mZF8n5fF' \
    > test.out 2>&1
eval_tap $? 12 'DeleteItemTypeConfig' test.out

#- 13 QueryCampaigns
$CLI_EXE \
    --sn platform \
    --op QueryCampaigns \
    --namespace $AB_NAMESPACE \
    --limit '60' \
    --name 'E4Hxtr9C' \
    --offset '9' \
    --tag 'gV40Oqdy' \
    > test.out 2>&1
eval_tap $? 13 'QueryCampaigns' test.out

#- 14 CreateCampaign
# body param: body
echo '{"description": "H8Bpm8nN", "discountConfig": {"categories": [{"categoryPath": "0PM5Th3w", "includeSubCategories": false}, {"categoryPath": "LNx4xww4", "includeSubCategories": false}, {"categoryPath": "KPI9u4Bo", "includeSubCategories": true}], "currencyCode": "3PkZbkuW", "currencyNamespace": "OMioBNCp", "discountAmount": 44, "discountPercentage": 47, "discountType": "AMOUNT", "items": [{"itemId": "iFyq42hg", "itemName": "aXW5oaN0"}, {"itemId": "h783SwEG", "itemName": "SuD8rkSN"}, {"itemId": "1c7GvJob", "itemName": "MoLgv9j2"}], "restrictType": "NONE", "stackable": false}, "items": [{"extraSubscriptionDays": 68, "itemId": "8NGVrk2o", "itemName": "3euzMu4x", "quantity": 45}, {"extraSubscriptionDays": 15, "itemId": "BAhrn7Yt", "itemName": "W9W5GccE", "quantity": 62}, {"extraSubscriptionDays": 66, "itemId": "MUIWYwch", "itemName": "6BvrmexN", "quantity": 45}], "maxRedeemCountPerCampaignPerUser": 86, "maxRedeemCountPerCode": 1, "maxRedeemCountPerCodePerUser": 37, "maxSaleCount": 4, "name": "jbQ5g5D7", "redeemEnd": "1973-06-29T00:00:00Z", "redeemStart": "1982-03-02T00:00:00Z", "redeemType": "ITEM", "status": "ACTIVE", "tags": ["1HxYmftC", "tpVRml9G", "WHy50eRg"], "type": "REDEMPTION"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCampaign \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 14 'CreateCampaign' test.out

#- 15 GetCampaign
$CLI_EXE \
    --sn platform \
    --op GetCampaign \
    --campaignId 'x7dGE5Sb' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 15 'GetCampaign' test.out

#- 16 UpdateCampaign
# body param: body
echo '{"description": "6MS5ffbd", "discountConfig": {"categories": [{"categoryPath": "DKIF5vh2", "includeSubCategories": false}, {"categoryPath": "gzsMOjEH", "includeSubCategories": true}, {"categoryPath": "4iINJx1c", "includeSubCategories": false}], "currencyCode": "PSv4a5b4", "currencyNamespace": "IFQTOOvG", "discountAmount": 18, "discountPercentage": 93, "discountType": "AMOUNT", "items": [{"itemId": "KxCIMvpR", "itemName": "bbYoI9r9"}, {"itemId": "bU8ZeRtY", "itemName": "Ux0awk7a"}, {"itemId": "XkjrIKMf", "itemName": "ZDWbdSER"}], "restrictType": "ITEMS_AND_CATEGORIES", "stackable": false}, "items": [{"extraSubscriptionDays": 40, "itemId": "9gYoAcFF", "itemName": "f9GBGuFq", "quantity": 10}, {"extraSubscriptionDays": 46, "itemId": "hZ8ec7ld", "itemName": "uFJulIY4", "quantity": 23}, {"extraSubscriptionDays": 14, "itemId": "7UqQw7SV", "itemName": "rE3s8EGN", "quantity": 100}], "maxRedeemCountPerCampaignPerUser": 91, "maxRedeemCountPerCode": 30, "maxRedeemCountPerCodePerUser": 29, "maxSaleCount": 96, "name": "oBFDf0VX", "redeemEnd": "1991-09-23T00:00:00Z", "redeemStart": "1995-05-01T00:00:00Z", "redeemType": "DISCOUNT", "status": "ACTIVE", "tags": ["XY4snOXh", "M8VNmnhD", "FNKCznd5"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCampaign \
    --campaignId 'CZoWm2m8' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 16 'UpdateCampaign' test.out

#- 17 GetCampaignDynamic
$CLI_EXE \
    --sn platform \
    --op GetCampaignDynamic \
    --campaignId 'nAPfCjJK' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 17 'GetCampaignDynamic' test.out

#- 18 GetCatalogConfig
$CLI_EXE \
    --sn platform \
    --op GetCatalogConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 18 'GetCatalogConfig' test.out

#- 19 UpdateCatalogConfig
# body param: body
echo '{"enableInventoryCheck": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCatalogConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 19 'UpdateCatalogConfig' test.out

#- 20 GetLootBoxPluginConfig
$CLI_EXE \
    --sn platform \
    --op GetLootBoxPluginConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 20 'GetLootBoxPluginConfig' test.out

#- 21 UpdateLootBoxPluginConfig
# body param: body
echo '{"appConfig": {"appName": "mzwkBUQ1"}, "customConfig": {"connectionType": "TLS", "grpcServerAddress": "4PZSNEbK"}, "extendType": "CUSTOM"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateLootBoxPluginConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 21 'UpdateLootBoxPluginConfig' test.out

#- 22 DeleteLootBoxPluginConfig
$CLI_EXE \
    --sn platform \
    --op DeleteLootBoxPluginConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 22 'DeleteLootBoxPluginConfig' test.out

#- 23 UplodLootBoxPluginConfigCert
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UplodLootBoxPluginConfigCert \
    --namespace $AB_NAMESPACE \
    --upload file $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 23 'UplodLootBoxPluginConfigCert' test.out

#- 24 GetLootBoxGrpcInfo
$CLI_EXE \
    --sn platform \
    --op GetLootBoxGrpcInfo \
    --namespace $AB_NAMESPACE \
    --force 'true' \
    > test.out 2>&1
eval_tap $? 24 'GetLootBoxGrpcInfo' test.out

#- 25 GetSectionPluginConfig
$CLI_EXE \
    --sn platform \
    --op GetSectionPluginConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 25 'GetSectionPluginConfig' test.out

#- 26 UpdateSectionPluginConfig
# body param: body
echo '{"appConfig": {"appName": "JmeJThkE"}, "customConfig": {"connectionType": "INSECURE", "grpcServerAddress": "M3dfPpN2"}, "extendType": "APP"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateSectionPluginConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 26 'UpdateSectionPluginConfig' test.out

#- 27 DeleteSectionPluginConfig
$CLI_EXE \
    --sn platform \
    --op DeleteSectionPluginConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 27 'DeleteSectionPluginConfig' test.out

#- 28 UploadSectionPluginConfigCert
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UploadSectionPluginConfigCert \
    --namespace $AB_NAMESPACE \
    --upload file $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 28 'UploadSectionPluginConfigCert' test.out

#- 29 GetRootCategories
$CLI_EXE \
    --sn platform \
    --op GetRootCategories \
    --namespace $AB_NAMESPACE \
    --storeId 'SwjhmJjO' \
    > test.out 2>&1
eval_tap $? 29 'GetRootCategories' test.out

#- 30 CreateCategory
# body param: body
echo '{"categoryPath": "JfVwg7XP", "localizationDisplayNames": {"bAxT66Ni": "kY2jUwgu", "MxorEzV5": "plTlaLyq", "AC9ZHzus": "obS0LYEW"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCategory \
    --namespace $AB_NAMESPACE \
    --storeId 'Aak65Y0l' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 30 'CreateCategory' test.out

#- 31 ListCategoriesBasic
$CLI_EXE \
    --sn platform \
    --op ListCategoriesBasic \
    --namespace $AB_NAMESPACE \
    --storeId 'tA2V5Rol' \
    > test.out 2>&1
eval_tap $? 31 'ListCategoriesBasic' test.out

#- 32 GetCategory
$CLI_EXE \
    --sn platform \
    --op GetCategory \
    --categoryPath '0330wGoJ' \
    --namespace $AB_NAMESPACE \
    --storeId 'xKWvtxw1' \
    > test.out 2>&1
eval_tap $? 32 'GetCategory' test.out

#- 33 UpdateCategory
# body param: body
echo '{"localizationDisplayNames": {"vJOYK5fB": "AMZ6eYDK", "uAI6tRWz": "jlADAuS9", "ZWk89Vkw": "88c7lLyA"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCategory \
    --categoryPath 'kSiCWTAw' \
    --namespace $AB_NAMESPACE \
    --storeId 'A5dTn8G5' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 33 'UpdateCategory' test.out

#- 34 DeleteCategory
$CLI_EXE \
    --sn platform \
    --op DeleteCategory \
    --categoryPath 'VyBPqNg3' \
    --namespace $AB_NAMESPACE \
    --storeId 'awgcmKDt' \
    > test.out 2>&1
eval_tap $? 34 'DeleteCategory' test.out

#- 35 GetChildCategories
$CLI_EXE \
    --sn platform \
    --op GetChildCategories \
    --categoryPath 'jtzOCWsF' \
    --namespace $AB_NAMESPACE \
    --storeId 'P6wps4oY' \
    > test.out 2>&1
eval_tap $? 35 'GetChildCategories' test.out

#- 36 GetDescendantCategories
$CLI_EXE \
    --sn platform \
    --op GetDescendantCategories \
    --categoryPath 'gkpfkKZe' \
    --namespace $AB_NAMESPACE \
    --storeId '2xmW3PhL' \
    > test.out 2>&1
eval_tap $? 36 'GetDescendantCategories' test.out

#- 37 QueryCodes
$CLI_EXE \
    --sn platform \
    --op QueryCodes \
    --campaignId '9r1iwWnc' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --batchNo '23' \
    --code '4rqDZCf3' \
    --limit '78' \
    --offset '34' \
    > test.out 2>&1
eval_tap $? 37 'QueryCodes' test.out

#- 38 CreateCodes
# body param: body
echo '{"codeValue": "nlhU69aH", "quantity": 0}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCodes \
    --campaignId 'OzfQUrDc' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 38 'CreateCodes' test.out

#- 39 Download
$CLI_EXE \
    --sn platform \
    --op Download \
    --campaignId 'rkDtYHpP' \
    --namespace $AB_NAMESPACE \
    --batchNo '67' \
    > test.out 2>&1
eval_tap $? 39 'Download' test.out

#- 40 BulkDisableCodes
$CLI_EXE \
    --sn platform \
    --op BulkDisableCodes \
    --campaignId 'X5BebK6m' \
    --namespace $AB_NAMESPACE \
    --batchNo '59' \
    > test.out 2>&1
eval_tap $? 40 'BulkDisableCodes' test.out

#- 41 BulkEnableCodes
$CLI_EXE \
    --sn platform \
    --op BulkEnableCodes \
    --campaignId 'SBgQOYHB' \
    --namespace $AB_NAMESPACE \
    --batchNo '82' \
    > test.out 2>&1
eval_tap $? 41 'BulkEnableCodes' test.out

#- 42 QueryRedeemHistory
$CLI_EXE \
    --sn platform \
    --op QueryRedeemHistory \
    --campaignId 'sV2WQh3p' \
    --namespace $AB_NAMESPACE \
    --code 'I21Tc9z4' \
    --limit '55' \
    --offset '20' \
    --userId 'hzPspAUr' \
    > test.out 2>&1
eval_tap $? 42 'QueryRedeemHistory' test.out

#- 43 GetCode
$CLI_EXE \
    --sn platform \
    --op GetCode \
    --code 'V0ayYdQ3' \
    --namespace $AB_NAMESPACE \
    --redeemable 'true' \
    > test.out 2>&1
eval_tap $? 43 'GetCode' test.out

#- 44 DisableCode
$CLI_EXE \
    --sn platform \
    --op DisableCode \
    --code 'gbh5f0YX' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 44 'DisableCode' test.out

#- 45 EnableCode
$CLI_EXE \
    --sn platform \
    --op EnableCode \
    --code '9Bttc2eR' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 45 'EnableCode' test.out

#- 46 GetServicePluginConfig
eval_tap 0 46 'GetServicePluginConfig # SKIP deprecated' test.out

#- 47 UpdateServicePluginConfig
eval_tap 0 47 'UpdateServicePluginConfig # SKIP deprecated' test.out

#- 48 DeleteServicePluginConfig
eval_tap 0 48 'DeleteServicePluginConfig # SKIP deprecated' test.out

#- 49 ListCurrencies
$CLI_EXE \
    --sn platform \
    --op ListCurrencies \
    --namespace $AB_NAMESPACE \
    --currencyType 'REAL' \
    > test.out 2>&1
eval_tap $? 49 'ListCurrencies' test.out

#- 50 CreateCurrency
# body param: body
echo '{"currencyCode": "nllVJhae", "currencySymbol": "wQSAcasc", "currencyType": "VIRTUAL", "decimals": 83, "localizationDescriptions": {"qT3z0ozY": "yPPFbDoi", "1ETsRcvQ": "fWbk5wWg", "2o1RuCUK": "c2tEwSY9"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCurrency \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 50 'CreateCurrency' test.out

#- 51 UpdateCurrency
# body param: body
echo '{"localizationDescriptions": {"agJ4ETHz": "rojVVpjY", "3a90I6BP": "UafLSZQe", "eAD0KWMG": "NbW8PfDw"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCurrency \
    --currencyCode 'IS08kYh1' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 51 'UpdateCurrency' test.out

#- 52 DeleteCurrency
$CLI_EXE \
    --sn platform \
    --op DeleteCurrency \
    --currencyCode 'b0BNkpoQ' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 52 'DeleteCurrency' test.out

#- 53 GetCurrencyConfig
$CLI_EXE \
    --sn platform \
    --op GetCurrencyConfig \
    --currencyCode 'QhJPFncM' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 53 'GetCurrencyConfig' test.out

#- 54 GetCurrencySummary
$CLI_EXE \
    --sn platform \
    --op GetCurrencySummary \
    --currencyCode '41af8YxI' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 54 'GetCurrencySummary' test.out

#- 55 GetDLCItemConfig
$CLI_EXE \
    --sn platform \
    --op GetDLCItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 55 'GetDLCItemConfig' test.out

#- 56 UpdateDLCItemConfig
# body param: body
echo '{"data": [{"id": "ZZcMPmBN", "rewards": [{"currency": {"currencyCode": "KiaHWmAo", "namespace": "lrTm3ZBu"}, "item": {"itemId": "bXk3TqWt", "itemSku": "M1f2FbM1", "itemType": "oAMcTZHn"}, "quantity": 32, "type": "CURRENCY"}, {"currency": {"currencyCode": "uzIkAiqa", "namespace": "EtvworEh"}, "item": {"itemId": "TEDD9Odi", "itemSku": "iA15885c", "itemType": "aLJmZLII"}, "quantity": 74, "type": "CURRENCY"}, {"currency": {"currencyCode": "PeYPVv0Z", "namespace": "tzKkRkGH"}, "item": {"itemId": "gYaqKGCA", "itemSku": "bLQugibo", "itemType": "rHMk2akk"}, "quantity": 33, "type": "ITEM"}]}, {"id": "2CiBDBgc", "rewards": [{"currency": {"currencyCode": "28Y2kqLD", "namespace": "ZFmH9fXL"}, "item": {"itemId": "A5FcmyND", "itemSku": "pwOS8BpT", "itemType": "9TnJIHHF"}, "quantity": 76, "type": "ITEM"}, {"currency": {"currencyCode": "jLsGI3i0", "namespace": "hI7AuqVK"}, "item": {"itemId": "fJBlsfSC", "itemSku": "g5I6Qgcp", "itemType": "vvJwPFcT"}, "quantity": 51, "type": "CURRENCY"}, {"currency": {"currencyCode": "6ubX6nmR", "namespace": "1EMTXM8o"}, "item": {"itemId": "o79bs6p6", "itemSku": "fSV33snv", "itemType": "mqpwFvdy"}, "quantity": 56, "type": "CURRENCY"}]}, {"id": "BNEcLPCw", "rewards": [{"currency": {"currencyCode": "4Slglc2v", "namespace": "PefRskI5"}, "item": {"itemId": "fxBQ3BSB", "itemSku": "SbYN5ffI", "itemType": "Gx3EC7bp"}, "quantity": 84, "type": "CURRENCY"}, {"currency": {"currencyCode": "mUSN9Vyc", "namespace": "21BMkiKf"}, "item": {"itemId": "75nN2Khd", "itemSku": "xmsOEdFX", "itemType": "brsmAR0K"}, "quantity": 60, "type": "CURRENCY"}, {"currency": {"currencyCode": "Tpd60MVF", "namespace": "k8UwunEy"}, "item": {"itemId": "eStcHBGR", "itemSku": "0Z5GyMZW", "itemType": "Ifw70oFw"}, "quantity": 34, "type": "ITEM"}]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateDLCItemConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 56 'UpdateDLCItemConfig' test.out

#- 57 DeleteDLCItemConfig
$CLI_EXE \
    --sn platform \
    --op DeleteDLCItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 57 'DeleteDLCItemConfig' test.out

#- 58 GetPlatformDLCConfig
$CLI_EXE \
    --sn platform \
    --op GetPlatformDLCConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 58 'GetPlatformDLCConfig' test.out

#- 59 UpdatePlatformDLCConfig
# body param: body
echo '{"data": [{"platform": "EPICGAMES", "platformDlcIdMap": {"O1lQDCYk": "Vh6lT3Nq", "yiHVO7nE": "xG4MvuHZ", "wUpuYQny": "oiNbR71Z"}}, {"platform": "EPICGAMES", "platformDlcIdMap": {"sBv4Pvux": "n0NFmx1A", "BhNcQqE8": "2VvWkg4j", "vPQpfi3r": "HA0qlr6j"}}, {"platform": "XBOX", "platformDlcIdMap": {"Q1rrIsbg": "baOtbPTo", "9OWf3PTb": "QL5lliFP", "dPHVsc5I": "J3RWZyOK"}}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePlatformDLCConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 59 'UpdatePlatformDLCConfig' test.out

#- 60 DeletePlatformDLCConfig
$CLI_EXE \
    --sn platform \
    --op DeletePlatformDLCConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 60 'DeletePlatformDLCConfig' test.out

#- 61 QueryEntitlements
$CLI_EXE \
    --sn platform \
    --op QueryEntitlements \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --appType 'DLC' \
    --entitlementClazz 'ENTITLEMENT' \
    --entitlementName 'hooHuewj' \
    --itemId '["0TxIuDJz", "pgtHwNOO", "NX88dibs"]' \
    --limit '87' \
    --offset '49' \
    --origin 'System' \
    --userId 'mn5PTDWr' \
    > test.out 2>&1
eval_tap $? 61 'QueryEntitlements' test.out

#- 62 QueryEntitlements1
$CLI_EXE \
    --sn platform \
    --op QueryEntitlements1 \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --itemIds '["pyqZim33", "pIacNQUH", "PNPTvrm7"]' \
    --limit '89' \
    --offset '92' \
    > test.out 2>&1
eval_tap $? 62 'QueryEntitlements1' test.out

#- 63 EnableEntitlementOriginFeature
$CLI_EXE \
    --sn platform \
    --op EnableEntitlementOriginFeature \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 63 'EnableEntitlementOriginFeature' test.out

#- 64 GetEntitlementConfigInfo
$CLI_EXE \
    --sn platform \
    --op GetEntitlementConfigInfo \
    --namespace $AB_NAMESPACE \
    --withoutCache 'true' \
    > test.out 2>&1
eval_tap $? 64 'GetEntitlementConfigInfo' test.out

#- 65 GrantEntitlements
# body param: body
echo '{"entitlementGrantList": [{"collectionId": "RQANj5Tw", "endDate": "1994-10-16T00:00:00Z", "grantedCode": "GvUVFdpe", "itemId": "UPwRaE3l", "itemNamespace": "VzRSNArL", "language": "MF-fanA", "origin": "Twitch", "quantity": 91, "region": "6qr6mQjt", "source": "REWARD", "startDate": "1977-04-13T00:00:00Z", "storeId": "wzBA8Lwe"}, {"collectionId": "uYNcqbNX", "endDate": "1972-02-21T00:00:00Z", "grantedCode": "Eyw0PiCS", "itemId": "F2nbI6JW", "itemNamespace": "kO1dNzYW", "language": "Uwbm-emjK", "origin": "Other", "quantity": 8, "region": "ShcT2mGe", "source": "GIFT", "startDate": "1987-06-06T00:00:00Z", "storeId": "uGxOpp70"}, {"collectionId": "2eI3VttJ", "endDate": "1983-04-06T00:00:00Z", "grantedCode": "ymBrWp6p", "itemId": "3E7FbKBS", "itemNamespace": "X9F9qHH8", "language": "eOSK_YsEx_Lg", "origin": "Playstation", "quantity": 30, "region": "Z7m4dpIu", "source": "GIFT", "startDate": "1978-01-12T00:00:00Z", "storeId": "X8UO4s8b"}], "userIds": ["Zc8BN93v", "5eXhfjUg", "hat6MUUY"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op GrantEntitlements \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 65 'GrantEntitlements' test.out

#- 66 RevokeEntitlements
# body param: body
echo '["jPqws4IW", "4LwC1gau", "Fn4KkoHy"]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RevokeEntitlements \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 66 'RevokeEntitlements' test.out

#- 67 GetEntitlement
$CLI_EXE \
    --sn platform \
    --op GetEntitlement \
    --entitlementId '9cYIYh9x' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 67 'GetEntitlement' test.out

#- 68 QueryFulfillmentHistories
$CLI_EXE \
    --sn platform \
    --op QueryFulfillmentHistories \
    --namespace $AB_NAMESPACE \
    --limit '80' \
    --offset '63' \
    --status 'FAIL' \
    --userId 'dIkF3gzk' \
    > test.out 2>&1
eval_tap $? 68 'QueryFulfillmentHistories' test.out

#- 69 QueryIAPClawbackHistory
$CLI_EXE \
    --sn platform \
    --op QueryIAPClawbackHistory \
    --namespace $AB_NAMESPACE \
    --endTime 'oLPpYBra' \
    --eventType 'CHARGEBACK' \
    --externalOrderId 'SWc9xWIy' \
    --limit '75' \
    --offset '28' \
    --startTime '6sJXbeSQ' \
    --status 'FAIL' \
    --userId 'KO4A2oDr' \
    > test.out 2>&1
eval_tap $? 69 'QueryIAPClawbackHistory' test.out

#- 70 MockPlayStationStreamEvent
# body param: body
echo '{"body": {"account": "2yzamlck", "additionalData": {"entitlement": [{"clientTransaction": [{"amountConsumed": 73, "clientTransactionId": "MJo9jhgd"}, {"amountConsumed": 58, "clientTransactionId": "k3n33Q4m"}, {"amountConsumed": 18, "clientTransactionId": "Ia7EvGqa"}], "entitlementId": "Wn8eWt4T", "usageCount": 0}, {"clientTransaction": [{"amountConsumed": 63, "clientTransactionId": "ZbY0igaK"}, {"amountConsumed": 47, "clientTransactionId": "bINgAXp5"}, {"amountConsumed": 93, "clientTransactionId": "HZeeq6QX"}], "entitlementId": "Lcu4RC4T", "usageCount": 25}, {"clientTransaction": [{"amountConsumed": 79, "clientTransactionId": "w37x0xOR"}, {"amountConsumed": 13, "clientTransactionId": "wmkd2bMT"}, {"amountConsumed": 38, "clientTransactionId": "swsslg4b"}], "entitlementId": "V4JehfKF", "usageCount": 37}], "purpose": "REt2PAJc"}, "originalTitleName": "a17GRzYx", "paymentProductSKU": "b3qhc8fn", "purchaseDate": "P9ho82j9", "sourceOrderItemId": "iQ1qxcHX", "titleName": "dXYAA2rH"}, "eventDomain": "Mhi9btdB", "eventSource": "c1szH95T", "eventType": "0czc8UKH", "eventVersion": 29, "id": "JT7snEQg", "timestamp": "70AvTwoq"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op MockPlayStationStreamEvent \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 70 'MockPlayStationStreamEvent' test.out

#- 71 GetAppleIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetAppleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 71 'GetAppleIAPConfig' test.out

#- 72 UpdateAppleIAPConfig
# body param: body
echo '{"bundleId": "Ms0fUbob", "password": "Baac9CLX"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateAppleIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 72 'UpdateAppleIAPConfig' test.out

#- 73 DeleteAppleIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteAppleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 73 'DeleteAppleIAPConfig' test.out

#- 74 GetEpicGamesIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetEpicGamesIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 74 'GetEpicGamesIAPConfig' test.out

#- 75 UpdateEpicGamesIAPConfig
# body param: body
echo '{"sandboxId": "NLObYkSZ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateEpicGamesIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 75 'UpdateEpicGamesIAPConfig' test.out

#- 76 DeleteEpicGamesIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteEpicGamesIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 76 'DeleteEpicGamesIAPConfig' test.out

#- 77 GetGoogleIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetGoogleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 77 'GetGoogleIAPConfig' test.out

#- 78 UpdateGoogleIAPConfig
# body param: body
echo '{"applicationName": "gIqKizI7", "serviceAccountId": "OIum5xEu"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateGoogleIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 78 'UpdateGoogleIAPConfig' test.out

#- 79 DeleteGoogleIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteGoogleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 79 'DeleteGoogleIAPConfig' test.out

#- 80 UpdateGoogleP12File
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UpdateGoogleP12File \
    --namespace $AB_NAMESPACE \
    --upload file $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 80 'UpdateGoogleP12File' test.out

#- 81 GetIAPItemConfig
$CLI_EXE \
    --sn platform \
    --op GetIAPItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 81 'GetIAPItemConfig' test.out

#- 82 UpdateIAPItemConfig
# body param: body
echo '{"data": [{"itemIdentity": "YpIZgiK1", "itemIdentityType": "ITEM_ID", "platformProductIdMap": {"zzvNjNmA": "t9wQXeMR", "5ZWRLyr6": "tipJLiWG", "iMXzEJ9L": "HnSUW1tk"}}, {"itemIdentity": "ZQf8E4Vk", "itemIdentityType": "ITEM_SKU", "platformProductIdMap": {"LICL8ATN": "eZsrDZOV", "Q128f4r4": "MWofhh5u", "D0B9wfRB": "Kj8Q3zJy"}}, {"itemIdentity": "l1yJTL8l", "itemIdentityType": "ITEM_ID", "platformProductIdMap": {"tBvXZBzn": "STVbLPCT", "OwzCXXV6": "HnkHBIgT", "L31T7M6k": "cqiPIwYT"}}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateIAPItemConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 82 'UpdateIAPItemConfig' test.out

#- 83 DeleteIAPItemConfig
$CLI_EXE \
    --sn platform \
    --op DeleteIAPItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 83 'DeleteIAPItemConfig' test.out

#- 84 GetOculusIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetOculusIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 84 'GetOculusIAPConfig' test.out

#- 85 UpdateOculusIAPConfig
# body param: body
echo '{"appId": "GlDtoez1", "appSecret": "N45VtINh"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateOculusIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 85 'UpdateOculusIAPConfig' test.out

#- 86 DeleteOculusIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteOculusIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 86 'DeleteOculusIAPConfig' test.out

#- 87 GetPlayStationIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetPlayStationIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 87 'GetPlayStationIAPConfig' test.out

#- 88 UpdatePlaystationIAPConfig
# body param: body
echo '{"backOfficeServerClientId": "dyITdP8Y", "backOfficeServerClientSecret": "381HiEK8", "enableStreamJob": false, "environment": "krz10ZFb", "streamName": "XvjNI6eJ", "streamPartnerName": "zYlxzrVb"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePlaystationIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 88 'UpdatePlaystationIAPConfig' test.out

#- 89 DeletePlaystationIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeletePlaystationIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 89 'DeletePlaystationIAPConfig' test.out

#- 90 ValidateExistedPlaystationIAPConfig
$CLI_EXE \
    --sn platform \
    --op ValidateExistedPlaystationIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 90 'ValidateExistedPlaystationIAPConfig' test.out

#- 91 ValidatePlaystationIAPConfig
# body param: body
echo '{"backOfficeServerClientId": "pLTthvvT", "backOfficeServerClientSecret": "I5AfEJK1", "enableStreamJob": true, "environment": "MHRsaNlm", "streamName": "VcmX2V2U", "streamPartnerName": "VIoFiBJB"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ValidatePlaystationIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 91 'ValidatePlaystationIAPConfig' test.out

#- 92 GetSteamIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetSteamIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 92 'GetSteamIAPConfig' test.out

#- 93 UpdateSteamIAPConfig
# body param: body
echo '{"appId": "tpxDVicj", "publisherAuthenticationKey": "Poe3qP1O"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateSteamIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 93 'UpdateSteamIAPConfig' test.out

#- 94 DeleteSteamIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteSteamIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 94 'DeleteSteamIAPConfig' test.out

#- 95 GetTwitchIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetTwitchIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 95 'GetTwitchIAPConfig' test.out

#- 96 UpdateTwitchIAPConfig
# body param: body
echo '{"clientId": "5IQsgrfY", "clientSecret": "G0fDKHKg", "organizationId": "LqSWElcU"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateTwitchIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 96 'UpdateTwitchIAPConfig' test.out

#- 97 DeleteTwitchIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteTwitchIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 97 'DeleteTwitchIAPConfig' test.out

#- 98 GetXblIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetXblIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 98 'GetXblIAPConfig' test.out

#- 99 UpdateXblIAPConfig
# body param: body
echo '{"relyingPartyCert": "HxVNzE3P"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXblIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 99 'UpdateXblIAPConfig' test.out

#- 100 DeleteXblAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteXblAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 100 'DeleteXblAPConfig' test.out

#- 101 UpdateXblBPCertFile
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UpdateXblBPCertFile \
    --namespace $AB_NAMESPACE \
    --upload file $TEMP_FILE_UPLOAD \
    --password 'YGe1OQo7' \
    > test.out 2>&1
eval_tap $? 101 'UpdateXblBPCertFile' test.out

#- 102 DownloadInvoiceDetails
$CLI_EXE \
    --sn platform \
    --op DownloadInvoiceDetails \
    --namespace $AB_NAMESPACE \
    --feature 'C9RwfL5N' \
    --itemId 'UMU9hMeQ' \
    --itemType 'SUBSCRIPTION' \
    --endTime 'ZlsRM6ZF' \
    --startTime 'gAK9XXs6' \
    > test.out 2>&1
eval_tap $? 102 'DownloadInvoiceDetails' test.out

#- 103 GenerateInvoiceSummary
$CLI_EXE \
    --sn platform \
    --op GenerateInvoiceSummary \
    --namespace $AB_NAMESPACE \
    --feature 'eiezAmle' \
    --itemId 'n05zm76f' \
    --itemType 'BUNDLE' \
    --endTime 'qNxh9N4a' \
    --startTime '1f0YvK9n' \
    > test.out 2>&1
eval_tap $? 103 'GenerateInvoiceSummary' test.out

#- 104 SyncInGameItem
# body param: body
echo '{"categoryPath": "iYK07Ks3", "targetItemId": "6CHzWgv9", "targetNamespace": "c2fD3n45"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncInGameItem \
    --namespace $AB_NAMESPACE \
    --storeId 'vQwTKlur' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 104 'SyncInGameItem' test.out

#- 105 CreateItem
# body param: body
echo '{"appId": "SNYCjfOD", "appType": "SOFTWARE", "baseAppId": "yZrGGQV8", "boothName": "Giq724zz", "categoryPath": "QkPhRSeI", "clazz": "moQNvTa5", "displayOrder": 81, "entitlementType": "CONSUMABLE", "ext": {"oM3cSUYx": {}, "HkjKkU58": {}, "uMWnxD3I": {}}, "features": ["tleLD2AL", "JW2JgIZT", "7uo6IOsJ"], "flexible": false, "images": [{"as": "T1kvZSu3", "caption": "iNAGlLlS", "height": 33, "imageUrl": "QtiZHv4v", "smallImageUrl": "IdFJAZrs", "width": 71}, {"as": "bfHZ9MIf", "caption": "blbrq68r", "height": 48, "imageUrl": "MQCVz3fG", "smallImageUrl": "EFcw610w", "width": 68}, {"as": "v31YUfLm", "caption": "UQV6E9tu", "height": 31, "imageUrl": "wgsdAEUo", "smallImageUrl": "eV5NxiTh", "width": 4}], "inventoryConfig": {"customAttributes": {"4SEZxxeR": {}, "whAtzEgp": {}, "ay1ADlbO": {}}, "serverCustomAttributes": {"scbm4Qw5": {}, "Ofy4Ly30": {}, "WmA2sBCi": {}}, "slotUsed": 15}, "itemIds": ["IgW6Xrnq", "IC2jmW2b", "sYNaTAI4"], "itemQty": {"SEVGSQFE": 79, "UHtZhU4D": 67, "F2UXrEUU": 74}, "itemType": "COINS", "listable": false, "localizations": {"W8Z1i44K": {"description": "ddRjy8ts", "localExt": {"ihKVwO9s": {}, "Iu7MWh0l": {}, "yLsFLntX": {}}, "longDescription": "s50S4NBm", "title": "UeQHRr02"}, "MgHScdu5": {"description": "IclDMTXf", "localExt": {"gjqEnS1H": {}, "4WuxXmmM": {}, "oM6jwxS2": {}}, "longDescription": "MKdKKqGR", "title": "LzYl3nox"}, "xivx1k9F": {"description": "s7pDAHzW", "localExt": {"w2L4Ciy3": {}, "Xzp0x3Mq": {}, "nU4GvqoY": {}}, "longDescription": "WW8JaKdR", "title": "PdSk4Zdv"}}, "lootBoxConfig": {"rewardCount": 67, "rewards": [{"lootBoxItems": [{"count": 87, "duration": 8, "endDate": "1982-06-23T00:00:00Z", "itemId": "pIEdyefX", "itemSku": "OH7I9pY9", "itemType": "2PhZWy9A"}, {"count": 58, "duration": 20, "endDate": "1984-01-08T00:00:00Z", "itemId": "xLzPgBG9", "itemSku": "wCt2tlO1", "itemType": "btOZs4Vj"}, {"count": 11, "duration": 16, "endDate": "1987-08-17T00:00:00Z", "itemId": "YmtV9HCJ", "itemSku": "Roz7gJiR", "itemType": "HrJ3XROt"}], "name": "GL4P9EP2", "odds": 0.895776778223709, "type": "REWARD_GROUP", "weight": 96}, {"lootBoxItems": [{"count": 3, "duration": 93, "endDate": "1999-01-31T00:00:00Z", "itemId": "bienGOSZ", "itemSku": "AQVIQwdW", "itemType": "ym4G2nNS"}, {"count": 82, "duration": 34, "endDate": "1988-05-09T00:00:00Z", "itemId": "8zOp9wM0", "itemSku": "eao6Y17l", "itemType": "PqGybddB"}, {"count": 75, "duration": 1, "endDate": "1976-11-12T00:00:00Z", "itemId": "TCTKWgrm", "itemSku": "fmftyERs", "itemType": "kEx6eotf"}], "name": "kvNrI1KB", "odds": 0.4393189366979713, "type": "REWARD_GROUP", "weight": 48}, {"lootBoxItems": [{"count": 13, "duration": 57, "endDate": "1976-02-05T00:00:00Z", "itemId": "j0lnO9YP", "itemSku": "9INhUXSq", "itemType": "lvggAvwu"}, {"count": 50, "duration": 10, "endDate": "1984-10-21T00:00:00Z", "itemId": "NfBfAJd6", "itemSku": "rMuD9CJt", "itemType": "eqOdK1sH"}, {"count": 29, "duration": 72, "endDate": "1982-10-30T00:00:00Z", "itemId": "XPaLHdzC", "itemSku": "q9sDx2S3", "itemType": "mXVT8T8c"}], "name": "K3bq8Ute", "odds": 0.17041566891911764, "type": "PROBABILITY_GROUP", "weight": 57}], "rollFunction": "DEFAULT"}, "maxCount": 61, "maxCountPerUser": 19, "name": "CMpB4i5b", "optionBoxConfig": {"boxItems": [{"count": 17, "duration": 6, "endDate": "1993-03-15T00:00:00Z", "itemId": "prY9bkfD", "itemSku": "EzMmEPea", "itemType": "W0IZHbXz"}, {"count": 83, "duration": 77, "endDate": "1983-01-19T00:00:00Z", "itemId": "9c7NRkXU", "itemSku": "ityp4lha", "itemType": "aAO9xPog"}, {"count": 30, "duration": 42, "endDate": "1987-11-25T00:00:00Z", "itemId": "dSC4hY2v", "itemSku": "AWCbMJBN", "itemType": "CNT9tNqT"}]}, "purchasable": false, "recurring": {"cycle": "WEEKLY", "fixedFreeDays": 18, "fixedTrialCycles": 6, "graceDays": 29}, "regionData": {"5vQ8ugrl": [{"currencyCode": "iCLHedaN", "currencyNamespace": "AC4P9gcV", "currencyType": "REAL", "discountAmount": 36, "discountExpireAt": "1990-12-30T00:00:00Z", "discountPercentage": 29, "discountPurchaseAt": "1990-02-24T00:00:00Z", "expireAt": "1983-11-01T00:00:00Z", "price": 100, "purchaseAt": "1995-04-04T00:00:00Z", "trialPrice": 71}, {"currencyCode": "iiDooZgZ", "currencyNamespace": "xWvS8yVO", "currencyType": "VIRTUAL", "discountAmount": 91, "discountExpireAt": "1982-11-04T00:00:00Z", "discountPercentage": 96, "discountPurchaseAt": "1991-12-12T00:00:00Z", "expireAt": "1993-01-05T00:00:00Z", "price": 67, "purchaseAt": "1980-03-30T00:00:00Z", "trialPrice": 15}, {"currencyCode": "0nxPysSg", "currencyNamespace": "SRo6HaTp", "currencyType": "REAL", "discountAmount": 72, "discountExpireAt": "1997-06-13T00:00:00Z", "discountPercentage": 25, "discountPurchaseAt": "1978-09-22T00:00:00Z", "expireAt": "1987-04-05T00:00:00Z", "price": 19, "purchaseAt": "1972-02-04T00:00:00Z", "trialPrice": 91}], "V0tcFTvf": [{"currencyCode": "eA41qLpR", "currencyNamespace": "tglvW9zs", "currencyType": "VIRTUAL", "discountAmount": 74, "discountExpireAt": "1977-12-01T00:00:00Z", "discountPercentage": 44, "discountPurchaseAt": "1998-11-02T00:00:00Z", "expireAt": "1971-04-09T00:00:00Z", "price": 7, "purchaseAt": "1993-06-14T00:00:00Z", "trialPrice": 72}, {"currencyCode": "BUyU9i4o", "currencyNamespace": "OeHMrmJy", "currencyType": "REAL", "discountAmount": 96, "discountExpireAt": "1972-12-08T00:00:00Z", "discountPercentage": 23, "discountPurchaseAt": "1980-10-09T00:00:00Z", "expireAt": "1973-07-18T00:00:00Z", "price": 86, "purchaseAt": "1972-11-21T00:00:00Z", "trialPrice": 67}, {"currencyCode": "pwrpQPyn", "currencyNamespace": "Oe6aohJF", "currencyType": "VIRTUAL", "discountAmount": 38, "discountExpireAt": "1988-01-02T00:00:00Z", "discountPercentage": 11, "discountPurchaseAt": "1991-05-23T00:00:00Z", "expireAt": "1982-04-19T00:00:00Z", "price": 30, "purchaseAt": "1991-07-22T00:00:00Z", "trialPrice": 74}], "AW0nMLqJ": [{"currencyCode": "fYIIwYuo", "currencyNamespace": "ojzGu1Qz", "currencyType": "REAL", "discountAmount": 9, "discountExpireAt": "1979-04-13T00:00:00Z", "discountPercentage": 90, "discountPurchaseAt": "1998-11-19T00:00:00Z", "expireAt": "1984-12-13T00:00:00Z", "price": 59, "purchaseAt": "1996-04-20T00:00:00Z", "trialPrice": 98}, {"currencyCode": "yU5cXL4v", "currencyNamespace": "92uVXMyN", "currencyType": "VIRTUAL", "discountAmount": 98, "discountExpireAt": "1976-08-31T00:00:00Z", "discountPercentage": 79, "discountPurchaseAt": "1991-01-31T00:00:00Z", "expireAt": "1971-02-17T00:00:00Z", "price": 72, "purchaseAt": "1981-07-29T00:00:00Z", "trialPrice": 54}, {"currencyCode": "DWzYp8ag", "currencyNamespace": "mChAQVU2", "currencyType": "REAL", "discountAmount": 70, "discountExpireAt": "1993-03-27T00:00:00Z", "discountPercentage": 21, "discountPurchaseAt": "1992-12-18T00:00:00Z", "expireAt": "1978-03-16T00:00:00Z", "price": 63, "purchaseAt": "1972-02-03T00:00:00Z", "trialPrice": 58}]}, "saleConfig": {"currencyCode": "uWf56Ctx", "price": 45}, "seasonType": "TIER", "sectionExclusive": false, "sellable": false, "sku": "KOq7bDv2", "stackable": true, "status": "ACTIVE", "tags": ["ywGbTd2O", "zg6MrFfg", "t5APKQZv"], "targetCurrencyCode": "fwBfnqOT", "targetNamespace": "O3HQmI0y", "thumbnailUrl": "LODrY4u0", "useCount": 99}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateItem \
    --namespace $AB_NAMESPACE \
    --storeId 'cPosDBif' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 105 'CreateItem' test.out

#- 106 GetItemByAppId
$CLI_EXE \
    --sn platform \
    --op GetItemByAppId \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --storeId '81gA8M50' \
    --appId 'ZngzX2Nh' \
    > test.out 2>&1
eval_tap $? 106 'GetItemByAppId' test.out

#- 107 QueryItems
$CLI_EXE \
    --sn platform \
    --op QueryItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --appType 'GAME' \
    --availableDate 'u3xXWfDa' \
    --baseAppId 'xre8RW5C' \
    --categoryPath 'PvwuOd8H' \
    --features 'TArciP6U' \
    --includeSubCategoryItem 'false' \
    --itemType 'SUBSCRIPTION' \
    --limit '74' \
    --offset '7' \
    --region 'qsipAcgF' \
    --sortBy '["name:desc", "name:asc", "updatedAt:desc"]' \
    --storeId 'P2zpFSo8' \
    --tags '3i62PYFP' \
    --targetNamespace '3XPsxtlE' \
    > test.out 2>&1
eval_tap $? 107 'QueryItems' test.out

#- 108 ListBasicItemsByFeatures
$CLI_EXE \
    --sn platform \
    --op ListBasicItemsByFeatures \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --features '["6FjIfwm2", "EjIYXFv5", "O3FbcpFl"]' \
    > test.out 2>&1
eval_tap $? 108 'ListBasicItemsByFeatures' test.out

#- 109 GetItems
$CLI_EXE \
    --sn platform \
    --op GetItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --storeId 'ztMpXBkY' \
    --itemIds 'FaPa631Y' \
    > test.out 2>&1
eval_tap $? 109 'GetItems' test.out

#- 110 GetItemBySku
$CLI_EXE \
    --sn platform \
    --op GetItemBySku \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --storeId 'VtOgKifV' \
    --sku 'aMbSKJFW' \
    > test.out 2>&1
eval_tap $? 110 'GetItemBySku' test.out

#- 111 GetLocaleItemBySku
$CLI_EXE \
    --sn platform \
    --op GetLocaleItemBySku \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --language 'THjJYGvN' \
    --populateBundle 'true' \
    --region 'RDswgyfk' \
    --storeId 'Vd7b4IFm' \
    --sku 'p8vijDJa' \
    > test.out 2>&1
eval_tap $? 111 'GetLocaleItemBySku' test.out

#- 112 GetEstimatedPrice
$CLI_EXE \
    --sn platform \
    --op GetEstimatedPrice \
    --namespace $AB_NAMESPACE \
    --platform '9EQ7sY1D' \
    --region 'zaQs39iJ' \
    --storeId 'TMHXAzMa' \
    --itemIds '31Ywmtb9' \
    --userId 'g083ed1C' \
    > test.out 2>&1
eval_tap $? 112 'GetEstimatedPrice' test.out

#- 113 GetItemIdBySku
$CLI_EXE \
    --sn platform \
    --op GetItemIdBySku \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --storeId 'WYkTbbdg' \
    --sku 'akABJ0Sy' \
    > test.out 2>&1
eval_tap $? 113 'GetItemIdBySku' test.out

#- 114 GetBulkItemIdBySkus
$CLI_EXE \
    --sn platform \
    --op GetBulkItemIdBySkus \
    --namespace $AB_NAMESPACE \
    --sku '["NzsmIKC9", "Bcgpq9Mq", "aoNs9hiw"]' \
    --storeId 'dDzBYfma' \
    > test.out 2>&1
eval_tap $? 114 'GetBulkItemIdBySkus' test.out

#- 115 BulkGetLocaleItems
$CLI_EXE \
    --sn platform \
    --op BulkGetLocaleItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --language 'N7sayLwc' \
    --region 'ZWGVRMTV' \
    --storeId 'sYRMad6O' \
    --itemIds 'afceB3xc' \
    > test.out 2>&1
eval_tap $? 115 'BulkGetLocaleItems' test.out

#- 116 GetAvailablePredicateTypes
$CLI_EXE \
    --sn platform \
    --op GetAvailablePredicateTypes \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 116 'GetAvailablePredicateTypes' test.out

#- 117 ValidateItemPurchaseCondition
# body param: body
echo '{"itemIds": ["SbJnqh9M", "uUPA2D5N", "efXtKP9w"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ValidateItemPurchaseCondition \
    --namespace $AB_NAMESPACE \
    --platform 'jXrxtgW7' \
    --userId 'XAV8D2Uf' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 117 'ValidateItemPurchaseCondition' test.out

#- 118 BulkUpdateRegionData
# body param: body
echo '{"changes": [{"itemIdentities": ["RP0mWmCX", "FDxeEt7L", "g2WFFJwu"], "itemIdentityType": "ITEM_ID", "regionData": {"8pCKRPLc": [{"currencyCode": "LoxBfnbt", "currencyNamespace": "wR9iT4t5", "currencyType": "VIRTUAL", "discountAmount": 63, "discountExpireAt": "1974-04-15T00:00:00Z", "discountPercentage": 91, "discountPurchaseAt": "1987-10-24T00:00:00Z", "discountedPrice": 97, "expireAt": "1992-04-03T00:00:00Z", "price": 58, "purchaseAt": "1987-09-05T00:00:00Z", "trialPrice": 77}, {"currencyCode": "kViMx1hf", "currencyNamespace": "IGQEjYdg", "currencyType": "REAL", "discountAmount": 94, "discountExpireAt": "1986-06-08T00:00:00Z", "discountPercentage": 97, "discountPurchaseAt": "1997-02-15T00:00:00Z", "discountedPrice": 35, "expireAt": "1995-12-19T00:00:00Z", "price": 86, "purchaseAt": "1984-08-28T00:00:00Z", "trialPrice": 31}, {"currencyCode": "5Yl8JgUi", "currencyNamespace": "fgFfOxWR", "currencyType": "VIRTUAL", "discountAmount": 59, "discountExpireAt": "1982-04-19T00:00:00Z", "discountPercentage": 99, "discountPurchaseAt": "1998-03-30T00:00:00Z", "discountedPrice": 24, "expireAt": "1982-08-21T00:00:00Z", "price": 63, "purchaseAt": "1988-07-30T00:00:00Z", "trialPrice": 72}], "BVB7KYGF": [{"currencyCode": "OGXuaXP3", "currencyNamespace": "EQvYwJmb", "currencyType": "VIRTUAL", "discountAmount": 24, "discountExpireAt": "1984-02-03T00:00:00Z", "discountPercentage": 60, "discountPurchaseAt": "1986-01-01T00:00:00Z", "discountedPrice": 74, "expireAt": "1984-01-14T00:00:00Z", "price": 83, "purchaseAt": "1974-08-12T00:00:00Z", "trialPrice": 42}, {"currencyCode": "tLI2qA6t", "currencyNamespace": "zsIkiitm", "currencyType": "REAL", "discountAmount": 36, "discountExpireAt": "1994-04-14T00:00:00Z", "discountPercentage": 99, "discountPurchaseAt": "1980-05-20T00:00:00Z", "discountedPrice": 62, "expireAt": "1987-08-19T00:00:00Z", "price": 19, "purchaseAt": "1987-04-28T00:00:00Z", "trialPrice": 96}, {"currencyCode": "J2FEt5Hj", "currencyNamespace": "O79jD5Cn", "currencyType": "REAL", "discountAmount": 100, "discountExpireAt": "1987-10-07T00:00:00Z", "discountPercentage": 74, "discountPurchaseAt": "1982-09-28T00:00:00Z", "discountedPrice": 54, "expireAt": "1975-03-02T00:00:00Z", "price": 54, "purchaseAt": "1990-02-03T00:00:00Z", "trialPrice": 38}], "JhIewZTf": [{"currencyCode": "zKJmQjH7", "currencyNamespace": "kxsoVnb0", "currencyType": "VIRTUAL", "discountAmount": 65, "discountExpireAt": "1985-12-04T00:00:00Z", "discountPercentage": 68, "discountPurchaseAt": "1982-01-18T00:00:00Z", "discountedPrice": 3, "expireAt": "1999-06-26T00:00:00Z", "price": 5, "purchaseAt": "1978-09-14T00:00:00Z", "trialPrice": 36}, {"currencyCode": "ZCJ9l3OA", "currencyNamespace": "023JEXwv", "currencyType": "VIRTUAL", "discountAmount": 26, "discountExpireAt": "1973-10-19T00:00:00Z", "discountPercentage": 92, "discountPurchaseAt": "1990-03-25T00:00:00Z", "discountedPrice": 33, "expireAt": "1974-02-08T00:00:00Z", "price": 24, "purchaseAt": "1986-08-27T00:00:00Z", "trialPrice": 7}, {"currencyCode": "I4oSQuk9", "currencyNamespace": "Y9yNXR7P", "currencyType": "VIRTUAL", "discountAmount": 56, "discountExpireAt": "1974-01-12T00:00:00Z", "discountPercentage": 15, "discountPurchaseAt": "1992-12-21T00:00:00Z", "discountedPrice": 4, "expireAt": "1978-08-02T00:00:00Z", "price": 43, "purchaseAt": "1998-02-23T00:00:00Z", "trialPrice": 66}]}}, {"itemIdentities": ["2WCgBegp", "4Ye3emLJ", "uIASI3Uc"], "itemIdentityType": "ITEM_ID", "regionData": {"stpLB0zF": [{"currencyCode": "IvpGTPXn", "currencyNamespace": "Spc0meiX", "currencyType": "VIRTUAL", "discountAmount": 55, "discountExpireAt": "1984-09-08T00:00:00Z", "discountPercentage": 21, "discountPurchaseAt": "1997-02-13T00:00:00Z", "discountedPrice": 85, "expireAt": "1986-03-18T00:00:00Z", "price": 45, "purchaseAt": "1979-03-03T00:00:00Z", "trialPrice": 52}, {"currencyCode": "BEqJuxFx", "currencyNamespace": "HekgEKxK", "currencyType": "VIRTUAL", "discountAmount": 32, "discountExpireAt": "1983-02-05T00:00:00Z", "discountPercentage": 91, "discountPurchaseAt": "1997-09-16T00:00:00Z", "discountedPrice": 11, "expireAt": "1978-04-19T00:00:00Z", "price": 53, "purchaseAt": "1984-01-30T00:00:00Z", "trialPrice": 72}, {"currencyCode": "l9WSOn1a", "currencyNamespace": "4nGOMlG8", "currencyType": "REAL", "discountAmount": 16, "discountExpireAt": "1986-04-08T00:00:00Z", "discountPercentage": 5, "discountPurchaseAt": "1984-03-29T00:00:00Z", "discountedPrice": 97, "expireAt": "1988-01-31T00:00:00Z", "price": 9, "purchaseAt": "1977-12-14T00:00:00Z", "trialPrice": 34}], "N3lWDJ3o": [{"currencyCode": "3hyL4x8z", "currencyNamespace": "f85uYluB", "currencyType": "REAL", "discountAmount": 67, "discountExpireAt": "1982-08-01T00:00:00Z", "discountPercentage": 13, "discountPurchaseAt": "1973-02-20T00:00:00Z", "discountedPrice": 4, "expireAt": "1991-12-06T00:00:00Z", "price": 40, "purchaseAt": "1983-07-27T00:00:00Z", "trialPrice": 22}, {"currencyCode": "qtoUZlAD", "currencyNamespace": "xzLL28zk", "currencyType": "REAL", "discountAmount": 15, "discountExpireAt": "1976-08-26T00:00:00Z", "discountPercentage": 9, "discountPurchaseAt": "1985-04-19T00:00:00Z", "discountedPrice": 1, "expireAt": "1998-09-11T00:00:00Z", "price": 85, "purchaseAt": "1978-03-14T00:00:00Z", "trialPrice": 23}, {"currencyCode": "hizHQqZy", "currencyNamespace": "RXTabvNt", "currencyType": "VIRTUAL", "discountAmount": 28, "discountExpireAt": "1993-01-02T00:00:00Z", "discountPercentage": 66, "discountPurchaseAt": "1972-06-02T00:00:00Z", "discountedPrice": 100, "expireAt": "1981-09-29T00:00:00Z", "price": 10, "purchaseAt": "1992-11-30T00:00:00Z", "trialPrice": 35}], "xeCTSSJd": [{"currencyCode": "PjMZSaO1", "currencyNamespace": "y4WayUBE", "currencyType": "REAL", "discountAmount": 19, "discountExpireAt": "1977-04-14T00:00:00Z", "discountPercentage": 81, "discountPurchaseAt": "1980-07-26T00:00:00Z", "discountedPrice": 85, "expireAt": "1990-06-01T00:00:00Z", "price": 10, "purchaseAt": "1982-04-01T00:00:00Z", "trialPrice": 63}, {"currencyCode": "dEa802Hg", "currencyNamespace": "fkJueYHs", "currencyType": "VIRTUAL", "discountAmount": 78, "discountExpireAt": "1996-06-05T00:00:00Z", "discountPercentage": 23, "discountPurchaseAt": "1999-07-01T00:00:00Z", "discountedPrice": 52, "expireAt": "1986-04-18T00:00:00Z", "price": 73, "purchaseAt": "1984-11-30T00:00:00Z", "trialPrice": 44}, {"currencyCode": "ADh8UzkQ", "currencyNamespace": "xpGSkdYc", "currencyType": "REAL", "discountAmount": 91, "discountExpireAt": "1991-09-26T00:00:00Z", "discountPercentage": 11, "discountPurchaseAt": "1981-08-22T00:00:00Z", "discountedPrice": 23, "expireAt": "1974-12-04T00:00:00Z", "price": 41, "purchaseAt": "1982-08-13T00:00:00Z", "trialPrice": 79}]}}, {"itemIdentities": ["AU2XOw6x", "Wdu50lsx", "IlTcoJRG"], "itemIdentityType": "ITEM_SKU", "regionData": {"ltFJ6PGN": [{"currencyCode": "z2cDQjLi", "currencyNamespace": "VuPQtuOG", "currencyType": "VIRTUAL", "discountAmount": 44, "discountExpireAt": "1983-05-30T00:00:00Z", "discountPercentage": 19, "discountPurchaseAt": "1990-08-20T00:00:00Z", "discountedPrice": 21, "expireAt": "1994-04-29T00:00:00Z", "price": 46, "purchaseAt": "1992-07-17T00:00:00Z", "trialPrice": 38}, {"currencyCode": "2DRRTGzY", "currencyNamespace": "hHDNdMTD", "currencyType": "REAL", "discountAmount": 29, "discountExpireAt": "1996-06-23T00:00:00Z", "discountPercentage": 2, "discountPurchaseAt": "1985-09-26T00:00:00Z", "discountedPrice": 78, "expireAt": "1990-07-21T00:00:00Z", "price": 80, "purchaseAt": "1998-10-30T00:00:00Z", "trialPrice": 74}, {"currencyCode": "auh7jZZt", "currencyNamespace": "I1vhdYdY", "currencyType": "VIRTUAL", "discountAmount": 64, "discountExpireAt": "1973-05-10T00:00:00Z", "discountPercentage": 53, "discountPurchaseAt": "1974-11-07T00:00:00Z", "discountedPrice": 62, "expireAt": "1977-05-02T00:00:00Z", "price": 7, "purchaseAt": "1995-11-17T00:00:00Z", "trialPrice": 16}], "mPnhldNC": [{"currencyCode": "HDFhehUW", "currencyNamespace": "eFhaCnWU", "currencyType": "REAL", "discountAmount": 94, "discountExpireAt": "1979-03-29T00:00:00Z", "discountPercentage": 9, "discountPurchaseAt": "1976-06-22T00:00:00Z", "discountedPrice": 60, "expireAt": "1982-11-26T00:00:00Z", "price": 17, "purchaseAt": "1991-08-03T00:00:00Z", "trialPrice": 32}, {"currencyCode": "KpDr1Wdk", "currencyNamespace": "AyQAXGzC", "currencyType": "VIRTUAL", "discountAmount": 94, "discountExpireAt": "1978-08-12T00:00:00Z", "discountPercentage": 81, "discountPurchaseAt": "1994-11-28T00:00:00Z", "discountedPrice": 100, "expireAt": "1975-06-16T00:00:00Z", "price": 42, "purchaseAt": "1989-08-13T00:00:00Z", "trialPrice": 75}, {"currencyCode": "YdpDoRkU", "currencyNamespace": "eNM6HvVu", "currencyType": "REAL", "discountAmount": 18, "discountExpireAt": "1991-03-01T00:00:00Z", "discountPercentage": 92, "discountPurchaseAt": "1986-03-18T00:00:00Z", "discountedPrice": 51, "expireAt": "1982-05-29T00:00:00Z", "price": 21, "purchaseAt": "1983-10-03T00:00:00Z", "trialPrice": 30}], "doTkImd0": [{"currencyCode": "34Vq7S2l", "currencyNamespace": "SB6mgqSS", "currencyType": "REAL", "discountAmount": 41, "discountExpireAt": "1995-10-31T00:00:00Z", "discountPercentage": 52, "discountPurchaseAt": "1974-08-01T00:00:00Z", "discountedPrice": 61, "expireAt": "1977-02-21T00:00:00Z", "price": 69, "purchaseAt": "1990-08-30T00:00:00Z", "trialPrice": 0}, {"currencyCode": "veNiFLUW", "currencyNamespace": "n92Ekw8X", "currencyType": "REAL", "discountAmount": 3, "discountExpireAt": "1998-07-29T00:00:00Z", "discountPercentage": 26, "discountPurchaseAt": "1992-02-05T00:00:00Z", "discountedPrice": 26, "expireAt": "1972-04-12T00:00:00Z", "price": 36, "purchaseAt": "1983-12-13T00:00:00Z", "trialPrice": 42}, {"currencyCode": "Gd8tHLWV", "currencyNamespace": "0WUPEV3Y", "currencyType": "VIRTUAL", "discountAmount": 67, "discountExpireAt": "1997-09-16T00:00:00Z", "discountPercentage": 50, "discountPurchaseAt": "1974-12-23T00:00:00Z", "discountedPrice": 41, "expireAt": "1975-01-30T00:00:00Z", "price": 12, "purchaseAt": "1996-03-18T00:00:00Z", "trialPrice": 45}]}}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op BulkUpdateRegionData \
    --namespace $AB_NAMESPACE \
    --storeId '1SWavrgY' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 118 'BulkUpdateRegionData' test.out

#- 119 SearchItems
$CLI_EXE \
    --sn platform \
    --op SearchItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --itemType 'BUNDLE' \
    --limit '59' \
    --offset '36' \
    --sortBy 's3x8RYHE' \
    --storeId '5LsZnlpy' \
    --keyword 'UUQNkBoO' \
    --language 'fKINvQnL' \
    > test.out 2>&1
eval_tap $? 119 'SearchItems' test.out

#- 120 QueryUncategorizedItems
$CLI_EXE \
    --sn platform \
    --op QueryUncategorizedItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --limit '31' \
    --offset '49' \
    --sortBy '["createdAt:asc", "name:asc", "updatedAt:asc"]' \
    --storeId 'oOYm7sKq' \
    > test.out 2>&1
eval_tap $? 120 'QueryUncategorizedItems' test.out

#- 121 GetItem
$CLI_EXE \
    --sn platform \
    --op GetItem \
    --itemId 'rQ5PQ2sn' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --storeId 'Rks9c43U' \
    > test.out 2>&1
eval_tap $? 121 'GetItem' test.out

#- 122 UpdateItem
# body param: body
echo '{"appId": "6FrcWfjB", "appType": "DEMO", "baseAppId": "rgwfdWJZ", "boothName": "Jiat03rQ", "categoryPath": "g9VYH2Te", "clazz": "pwcqAtAq", "displayOrder": 53, "entitlementType": "CONSUMABLE", "ext": {"CpYEFPY8": {}, "pyaum7ps": {}, "iwsF6YaG": {}}, "features": ["TFrgp9wM", "udNSWFvF", "Rsp0yCkt"], "flexible": true, "images": [{"as": "XQdjQDNm", "caption": "0Kts2xO9", "height": 53, "imageUrl": "iT2TqSUw", "smallImageUrl": "9V6RXeHQ", "width": 24}, {"as": "2reFbCEX", "caption": "bRr2PNso", "height": 82, "imageUrl": "vCZGwkvt", "smallImageUrl": "ca2MVIWY", "width": 81}, {"as": "LPTnHvSh", "caption": "64IQpZVl", "height": 52, "imageUrl": "xDUttZPy", "smallImageUrl": "Z5Uo9fyg", "width": 64}], "inventoryConfig": {"customAttributes": {"YnpJDENd": {}, "DnuBUgyl": {}, "vsQGfQRP": {}}, "serverCustomAttributes": {"hQcro2Co": {}, "1y6lMKta": {}, "Zn8aVDuZ": {}}, "slotUsed": 10}, "itemIds": ["zeJjV3yO", "WF3M7lPB", "hNZdGylI"], "itemQty": {"6SH3BoqR": 99, "unKX9qCG": 97, "BQnBoGig": 83}, "itemType": "CODE", "listable": true, "localizations": {"k62JayIc": {"description": "n0WScrTJ", "localExt": {"ROQe27tA": {}, "gNznN4hK": {}, "yOBmq15S": {}}, "longDescription": "uF4uERvX", "title": "QftLBfFW"}, "cOVNGyhj": {"description": "xtH0x4UX", "localExt": {"fDUdYl34": {}, "OdZ6dwPi": {}, "LaYVXG5d": {}}, "longDescription": "WQGsyiwd", "title": "uvhYHsob"}, "kOdtNwvQ": {"description": "lwc83Bxm", "localExt": {"L4oGLPgy": {}, "quGWwAew": {}, "BgM4VTO8": {}}, "longDescription": "zj1dSJtg", "title": "55JNE3NE"}}, "lootBoxConfig": {"rewardCount": 26, "rewards": [{"lootBoxItems": [{"count": 2, "duration": 54, "endDate": "1991-09-22T00:00:00Z", "itemId": "xbvqYBnz", "itemSku": "iJeDzZ6T", "itemType": "atmpqQVI"}, {"count": 86, "duration": 94, "endDate": "1976-04-08T00:00:00Z", "itemId": "gLc7CAOs", "itemSku": "V9WZKniq", "itemType": "0VvtgnRf"}, {"count": 36, "duration": 42, "endDate": "1994-04-14T00:00:00Z", "itemId": "1kP0kUnp", "itemSku": "0EiDwjkt", "itemType": "FZvnXQI2"}], "name": "OTF4kUJt", "odds": 0.5921930698033606, "type": "REWARD_GROUP", "weight": 21}, {"lootBoxItems": [{"count": 45, "duration": 95, "endDate": "1981-04-15T00:00:00Z", "itemId": "dT9CtrG6", "itemSku": "MM3XrgrO", "itemType": "E8yoY6ur"}, {"count": 38, "duration": 63, "endDate": "1982-07-13T00:00:00Z", "itemId": "jfnp8jhG", "itemSku": "WFDSP9qX", "itemType": "6kdYWfga"}, {"count": 51, "duration": 89, "endDate": "1999-04-03T00:00:00Z", "itemId": "qVKeTsyr", "itemSku": "xO9taZic", "itemType": "7KrUcj5Z"}], "name": "2HNHyvOS", "odds": 0.13574825388893696, "type": "PROBABILITY_GROUP", "weight": 8}, {"lootBoxItems": [{"count": 80, "duration": 32, "endDate": "1980-03-13T00:00:00Z", "itemId": "iGchye0U", "itemSku": "PlbhJXMY", "itemType": "MgKRimNz"}, {"count": 70, "duration": 44, "endDate": "1987-10-03T00:00:00Z", "itemId": "CGHOsFIT", "itemSku": "A1WcUkU1", "itemType": "Zz6TrJVR"}, {"count": 83, "duration": 7, "endDate": "1978-08-02T00:00:00Z", "itemId": "FyGRCWYs", "itemSku": "AqIzkHvS", "itemType": "5kmc7fws"}], "name": "J92mf4aV", "odds": 0.6477990258408952, "type": "PROBABILITY_GROUP", "weight": 37}], "rollFunction": "DEFAULT"}, "maxCount": 59, "maxCountPerUser": 8, "name": "hqCXDgYc", "optionBoxConfig": {"boxItems": [{"count": 35, "duration": 54, "endDate": "1976-09-26T00:00:00Z", "itemId": "4WW7C8ls", "itemSku": "i2c6J4hH", "itemType": "HMMVFjHk"}, {"count": 95, "duration": 47, "endDate": "1975-04-20T00:00:00Z", "itemId": "lWj2VkR1", "itemSku": "w8hnAypm", "itemType": "eDob9UmI"}, {"count": 26, "duration": 78, "endDate": "1973-06-06T00:00:00Z", "itemId": "9YCea3kp", "itemSku": "Aa2zW2MF", "itemType": "qqM8Ximo"}]}, "purchasable": false, "recurring": {"cycle": "WEEKLY", "fixedFreeDays": 41, "fixedTrialCycles": 83, "graceDays": 78}, "regionData": {"zvw1TxyZ": [{"currencyCode": "gGrH30Er", "currencyNamespace": "nsXCqkxA", "currencyType": "REAL", "discountAmount": 22, "discountExpireAt": "1982-03-24T00:00:00Z", "discountPercentage": 80, "discountPurchaseAt": "1976-04-05T00:00:00Z", "expireAt": "1990-09-28T00:00:00Z", "price": 12, "purchaseAt": "1991-04-12T00:00:00Z", "trialPrice": 47}, {"currencyCode": "XTxHFCyS", "currencyNamespace": "C2msdS2l", "currencyType": "VIRTUAL", "discountAmount": 8, "discountExpireAt": "1988-12-10T00:00:00Z", "discountPercentage": 81, "discountPurchaseAt": "1978-09-22T00:00:00Z", "expireAt": "1994-10-04T00:00:00Z", "price": 84, "purchaseAt": "1978-03-06T00:00:00Z", "trialPrice": 99}, {"currencyCode": "Bv7SF1xz", "currencyNamespace": "5rYr10ER", "currencyType": "REAL", "discountAmount": 48, "discountExpireAt": "1983-02-18T00:00:00Z", "discountPercentage": 37, "discountPurchaseAt": "1974-07-15T00:00:00Z", "expireAt": "1978-09-27T00:00:00Z", "price": 73, "purchaseAt": "1997-05-06T00:00:00Z", "trialPrice": 45}], "b04tHY40": [{"currencyCode": "RtqbcSel", "currencyNamespace": "xw3v4TOd", "currencyType": "VIRTUAL", "discountAmount": 63, "discountExpireAt": "1973-12-23T00:00:00Z", "discountPercentage": 78, "discountPurchaseAt": "1997-05-02T00:00:00Z", "expireAt": "1977-08-08T00:00:00Z", "price": 11, "purchaseAt": "1999-09-15T00:00:00Z", "trialPrice": 82}, {"currencyCode": "X7hQXmxE", "currencyNamespace": "zdY9VorH", "currencyType": "VIRTUAL", "discountAmount": 47, "discountExpireAt": "1972-09-28T00:00:00Z", "discountPercentage": 57, "discountPurchaseAt": "1998-09-28T00:00:00Z", "expireAt": "1991-01-02T00:00:00Z", "price": 97, "purchaseAt": "1997-09-25T00:00:00Z", "trialPrice": 79}, {"currencyCode": "F3dhnAKs", "currencyNamespace": "53IEx4Q9", "currencyType": "VIRTUAL", "discountAmount": 43, "discountExpireAt": "1992-07-27T00:00:00Z", "discountPercentage": 17, "discountPurchaseAt": "1974-07-28T00:00:00Z", "expireAt": "1983-03-17T00:00:00Z", "price": 30, "purchaseAt": "1994-08-12T00:00:00Z", "trialPrice": 71}], "tLiQB9le": [{"currencyCode": "7cET9c7q", "currencyNamespace": "hLNhRbtu", "currencyType": "REAL", "discountAmount": 75, "discountExpireAt": "1993-04-01T00:00:00Z", "discountPercentage": 27, "discountPurchaseAt": "1998-04-03T00:00:00Z", "expireAt": "1979-06-18T00:00:00Z", "price": 89, "purchaseAt": "1976-05-08T00:00:00Z", "trialPrice": 17}, {"currencyCode": "jeBZBD4T", "currencyNamespace": "t4R6n3oL", "currencyType": "REAL", "discountAmount": 37, "discountExpireAt": "1981-08-15T00:00:00Z", "discountPercentage": 54, "discountPurchaseAt": "1997-05-15T00:00:00Z", "expireAt": "1985-02-12T00:00:00Z", "price": 50, "purchaseAt": "1977-03-07T00:00:00Z", "trialPrice": 55}, {"currencyCode": "3DCL08cs", "currencyNamespace": "iSMAmsoH", "currencyType": "VIRTUAL", "discountAmount": 1, "discountExpireAt": "1980-09-16T00:00:00Z", "discountPercentage": 61, "discountPurchaseAt": "1983-03-14T00:00:00Z", "expireAt": "1992-05-29T00:00:00Z", "price": 66, "purchaseAt": "1976-01-10T00:00:00Z", "trialPrice": 36}]}, "saleConfig": {"currencyCode": "CHujIfds", "price": 21}, "seasonType": "TIER", "sectionExclusive": false, "sellable": true, "sku": "97IevSce", "stackable": true, "status": "INACTIVE", "tags": ["Y7MACUqw", "reed5M47", "KanYxOir"], "targetCurrencyCode": "6zQAu5Sb", "targetNamespace": "Z8qfqotM", "thumbnailUrl": "QYOdc2Yq", "useCount": 26}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateItem \
    --itemId 'FISYJ51M' \
    --namespace $AB_NAMESPACE \
    --storeId 'FgMjbvrc' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 122 'UpdateItem' test.out

#- 123 DeleteItem
$CLI_EXE \
    --sn platform \
    --op DeleteItem \
    --itemId 'F6tsZyqI' \
    --namespace $AB_NAMESPACE \
    --force 'false' \
    --storeId 'rmP73D3X' \
    > test.out 2>&1
eval_tap $? 123 'DeleteItem' test.out

#- 124 AcquireItem
# body param: body
echo '{"count": 35, "orderNo": "NTOeST3g"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op AcquireItem \
    --itemId 'CIh4qniL' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 124 'AcquireItem' test.out

#- 125 GetApp
$CLI_EXE \
    --sn platform \
    --op GetApp \
    --itemId 'GP2jhhAm' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --storeId 'Uwf3WKa9' \
    > test.out 2>&1
eval_tap $? 125 'GetApp' test.out

#- 126 UpdateApp
# body param: body
echo '{"carousel": [{"alt": "MyRNTbG7", "previewUrl": "THOUj0Eh", "thumbnailUrl": "EzYCTtXc", "type": "video", "url": "bVTCJxTF", "videoSource": "youtube"}, {"alt": "s9gbJGDV", "previewUrl": "QpYB1ciN", "thumbnailUrl": "RZ1v4FOU", "type": "image", "url": "MYduIg5a", "videoSource": "vimeo"}, {"alt": "xzjAhvi4", "previewUrl": "UVmXHqpq", "thumbnailUrl": "AW3xbTRA", "type": "image", "url": "B25WSwcR", "videoSource": "generic"}], "developer": "JGoIwTNx", "forumUrl": "Q0rjUlKF", "genres": ["Indie", "Racing", "Action"], "localizations": {"vvpK2ald": {"announcement": "snmNs5VS", "slogan": "zjXIkbZT"}, "3vKWHq3l": {"announcement": "YHQySJPp", "slogan": "9B6MU1aR"}, "EFVm0Z8M": {"announcement": "b9P75GUU", "slogan": "zZyCTrvy"}}, "platformRequirements": {"D27IRRqY": [{"additionals": "9A7RN9XP", "directXVersion": "k4r2ZutF", "diskSpace": "VFvXQS48", "graphics": "EqGz94V2", "label": "snHW0TZT", "osVersion": "pIR9rPLD", "processor": "cparRx85", "ram": "dWegp4CR", "soundCard": "tH9aT3rT"}, {"additionals": "Adg7yd3Y", "directXVersion": "cJHkeUVw", "diskSpace": "hW60Jr8I", "graphics": "PJf1umHg", "label": "jgnmkgQx", "osVersion": "fGmr7GZp", "processor": "W16QXCJZ", "ram": "oyNcFxqd", "soundCard": "5Kh8FVTv"}, {"additionals": "aTw53f46", "directXVersion": "7uFUo0Z6", "diskSpace": "3UbW7tAD", "graphics": "8pHM8HWg", "label": "vdMzdhRV", "osVersion": "loq4OA3m", "processor": "Y4sECKow", "ram": "g81TXaKC", "soundCard": "OTfdIDGL"}], "oUgW3D8G": [{"additionals": "EVeCGym1", "directXVersion": "6R6PAPvj", "diskSpace": "mbDUVWx0", "graphics": "iVjrypDG", "label": "zi6Hb6zI", "osVersion": "nJ1hgAQs", "processor": "qTFfNJtM", "ram": "ncDuP0iM", "soundCard": "d3SgDZSk"}, {"additionals": "d63oiFCt", "directXVersion": "CuoNVZ4K", "diskSpace": "PBzfTTjJ", "graphics": "Ndu1zg3R", "label": "5iEcVK3p", "osVersion": "bjnAeZVk", "processor": "iiAUBGiV", "ram": "Dp80zohi", "soundCard": "IWqHGF3N"}, {"additionals": "Hff7yorc", "directXVersion": "6Iwc0piU", "diskSpace": "0Im1qlvl", "graphics": "GCyzgVMU", "label": "8P6tiWSB", "osVersion": "FT1oh3ho", "processor": "2LH99SRp", "ram": "gUoGWPk2", "soundCard": "ATUWDWJq"}], "dWJfeDSD": [{"additionals": "b59j4vwn", "directXVersion": "oxywR3lc", "diskSpace": "nnWqSDVL", "graphics": "FAmOpHZv", "label": "G7DThnkm", "osVersion": "yNvy4dck", "processor": "XJSBfehy", "ram": "19uKt4lb", "soundCard": "Be1PQbfZ"}, {"additionals": "ZCiSpboD", "directXVersion": "lZ4deJhb", "diskSpace": "DnCLXlsl", "graphics": "9hkMTbtQ", "label": "bvtV8oKg", "osVersion": "oldzj7xq", "processor": "vsd8n1GE", "ram": "kc2XMjQQ", "soundCard": "dUZWa48Y"}, {"additionals": "M1M6iuMP", "directXVersion": "y3rm5HbQ", "diskSpace": "c2hB8ysA", "graphics": "UtyyJsLs", "label": "4vtxI2Hy", "osVersion": "6S2RM5re", "processor": "PFMgwOAs", "ram": "lQTtLzSo", "soundCard": "VnzNsXoE"}]}, "platforms": ["Linux", "IOS", "MacOS"], "players": ["LocalCoop", "CrossPlatformMulti", "Single"], "primaryGenre": "FreeToPlay", "publisher": "EmBOjKP7", "releaseDate": "1990-01-20T00:00:00Z", "websiteUrl": "nWjmKwFV"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateApp \
    --itemId 'u4K6fHTb' \
    --namespace $AB_NAMESPACE \
    --storeId 'hHmYPUsX' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 126 'UpdateApp' test.out

#- 127 DisableItem
$CLI_EXE \
    --sn platform \
    --op DisableItem \
    --itemId 'dT9yKYUi' \
    --namespace $AB_NAMESPACE \
    --storeId 'oRcljVPB' \
    > test.out 2>&1
eval_tap $? 127 'DisableItem' test.out

#- 128 GetItemDynamicData
$CLI_EXE \
    --sn platform \
    --op GetItemDynamicData \
    --itemId 'Mkdv7y1i' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 128 'GetItemDynamicData' test.out

#- 129 EnableItem
$CLI_EXE \
    --sn platform \
    --op EnableItem \
    --itemId '8gqadTFN' \
    --namespace $AB_NAMESPACE \
    --storeId 'e13bGc2T' \
    > test.out 2>&1
eval_tap $? 129 'EnableItem' test.out

#- 130 FeatureItem
$CLI_EXE \
    --sn platform \
    --op FeatureItem \
    --feature 'oXe1u5N6' \
    --itemId 'ECGg3qly' \
    --namespace $AB_NAMESPACE \
    --storeId 'ISRa5obr' \
    > test.out 2>&1
eval_tap $? 130 'FeatureItem' test.out

#- 131 DefeatureItem
$CLI_EXE \
    --sn platform \
    --op DefeatureItem \
    --feature 'QVpShzR9' \
    --itemId 'R71YjQFe' \
    --namespace $AB_NAMESPACE \
    --storeId 'x6jn5Vy9' \
    > test.out 2>&1
eval_tap $? 131 'DefeatureItem' test.out

#- 132 GetLocaleItem
$CLI_EXE \
    --sn platform \
    --op GetLocaleItem \
    --itemId 'apccfxSF' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --language 'Ic49CzTC' \
    --populateBundle 'false' \
    --region '7dRxBidQ' \
    --storeId 'NkLR5aS2' \
    > test.out 2>&1
eval_tap $? 132 'GetLocaleItem' test.out

#- 133 UpdateItemPurchaseCondition
# body param: body
echo '{"purchaseCondition": {"conditionGroups": [{"operator": "or", "predicates": [{"anyOf": 77, "comparison": "isGreaterThan", "name": "uPEbtoHV", "predicateType": "SeasonPassPredicate", "value": "Ujo1o0CV", "values": ["qUBcmiDx", "iB2jQq5l", "dVAnjwSi"]}, {"anyOf": 53, "comparison": "isLessThan", "name": "UDm0AV5z", "predicateType": "SeasonPassPredicate", "value": "t9cOzDxS", "values": ["tvBXLZh1", "3YNXLsM9", "wvNkbuqw"]}, {"anyOf": 24, "comparison": "isLessThan", "name": "YbkDbUz4", "predicateType": "SeasonTierPredicate", "value": "5qcmBUrh", "values": ["i0jKOsGo", "GF6dB68Z", "VzZWqV3Y"]}]}, {"operator": "or", "predicates": [{"anyOf": 94, "comparison": "isLessThan", "name": "DeJcHK7p", "predicateType": "SeasonPassPredicate", "value": "xRZ8sGQ7", "values": ["ihNQxYSN", "IAAhE0HK", "j5aHCzyt"]}, {"anyOf": 28, "comparison": "isGreaterThan", "name": "Cgeh9fRO", "predicateType": "SeasonPassPredicate", "value": "n8V9fuQa", "values": ["eMJneBWJ", "YWajhp9F", "0Naq5xzo"]}, {"anyOf": 48, "comparison": "isLessThan", "name": "fzLtAqFN", "predicateType": "SeasonPassPredicate", "value": "bkm4BjvW", "values": ["mGztyB8f", "qL4bsiFx", "n3cqshLC"]}]}, {"operator": "and", "predicates": [{"anyOf": 42, "comparison": "isLessThan", "name": "QB1ZFfMP", "predicateType": "EntitlementPredicate", "value": "NhOc1KA7", "values": ["rra4I6ri", "BUi6POVW", "CwDxHwfq"]}, {"anyOf": 37, "comparison": "isLessThan", "name": "qDEQC52a", "predicateType": "SeasonPassPredicate", "value": "p3X9TjTT", "values": ["TxLMFq15", "2gHwwzCA", "I2VOhzJu"]}, {"anyOf": 69, "comparison": "isLessThan", "name": "8Mbysm1Q", "predicateType": "SeasonTierPredicate", "value": "V5n1YTA8", "values": ["mKbtT9rc", "BopwkwFz", "7fVPBTXA"]}]}]}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateItemPurchaseCondition \
    --itemId 'oaciU8O5' \
    --namespace $AB_NAMESPACE \
    --storeId 'KDosloNS' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 133 'UpdateItemPurchaseCondition' test.out

#- 134 ReturnItem
# body param: body
echo '{"orderNo": "Zv5zQm3b"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ReturnItem \
    --itemId 'r00uveou' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 134 'ReturnItem' test.out

#- 135 QueryKeyGroups
$CLI_EXE \
    --sn platform \
    --op QueryKeyGroups \
    --namespace $AB_NAMESPACE \
    --limit '21' \
    --name 'Ulx5pmg8' \
    --offset '88' \
    --tag 'iRYutajC' \
    > test.out 2>&1
eval_tap $? 135 'QueryKeyGroups' test.out

#- 136 CreateKeyGroup
# body param: body
echo '{"description": "QqxCXrkD", "name": "mAQGGmcn", "status": "INACTIVE", "tags": ["USSmmjGl", "MoYES5gT", "9tsQRRM0"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateKeyGroup \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 136 'CreateKeyGroup' test.out

#- 137 GetKeyGroupByBoothName
eval_tap 0 137 'GetKeyGroupByBoothName # SKIP deprecated' test.out

#- 138 GetKeyGroup
$CLI_EXE \
    --sn platform \
    --op GetKeyGroup \
    --keyGroupId 'avnXvDis' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 138 'GetKeyGroup' test.out

#- 139 UpdateKeyGroup
# body param: body
echo '{"description": "Xhb83Xq9", "name": "LWCCY69Z", "status": "INACTIVE", "tags": ["L0RWpusd", "9Crmu8Hh", "uoq5K2fx"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateKeyGroup \
    --keyGroupId 'Zct2fpeu' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 139 'UpdateKeyGroup' test.out

#- 140 GetKeyGroupDynamic
$CLI_EXE \
    --sn platform \
    --op GetKeyGroupDynamic \
    --keyGroupId 'HtazRdCu' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 140 'GetKeyGroupDynamic' test.out

#- 141 ListKeys
$CLI_EXE \
    --sn platform \
    --op ListKeys \
    --keyGroupId 'MPLE7Klm' \
    --namespace $AB_NAMESPACE \
    --limit '4' \
    --offset '72' \
    --status 'ACTIVE' \
    > test.out 2>&1
eval_tap $? 141 'ListKeys' test.out

#- 142 UploadKeys
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UploadKeys \
    --keyGroupId '2ne1y0Ed' \
    --namespace $AB_NAMESPACE \
    --upload file $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 142 'UploadKeys' test.out

#- 143 QueryOrders
$CLI_EXE \
    --sn platform \
    --op QueryOrders \
    --namespace $AB_NAMESPACE \
    --endTime 'WO6zXBwu' \
    --limit '9' \
    --offset '82' \
    --orderNos '["GaUWakqc", "HTziz1eW", "Zv7r56xu"]' \
    --sortBy 'NLn0CfiH' \
    --startTime 'EkFbUWCq' \
    --status 'FULFILLED' \
    --withTotal 'false' \
    > test.out 2>&1
eval_tap $? 143 'QueryOrders' test.out

#- 144 GetOrderStatistics
$CLI_EXE \
    --sn platform \
    --op GetOrderStatistics \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 144 'GetOrderStatistics' test.out

#- 145 GetOrder
$CLI_EXE \
    --sn platform \
    --op GetOrder \
    --namespace $AB_NAMESPACE \
    --orderNo '50cJ3FDx' \
    > test.out 2>&1
eval_tap $? 145 'GetOrder' test.out

#- 146 RefundOrder
# body param: body
echo '{"description": "BtGGkY9n"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RefundOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'qUqirAPa' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 146 'RefundOrder' test.out

#- 147 GetPaymentCallbackConfig
$CLI_EXE \
    --sn platform \
    --op GetPaymentCallbackConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 147 'GetPaymentCallbackConfig' test.out

#- 148 UpdatePaymentCallbackConfig
# body param: body
echo '{"dryRun": true, "notifyUrl": "u1YHD0aD", "privateKey": "GlibTJHQ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePaymentCallbackConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 148 'UpdatePaymentCallbackConfig' test.out

#- 149 GetPaymentMerchantConfig
$CLI_EXE \
    --sn platform \
    --op GetPaymentMerchantConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 149 'GetPaymentMerchantConfig' test.out

#- 150 UpdatePaymentDomainWhitelistConfig
# body param: body
echo '{"domains": ["s9AlErDN", "muZ3aYQl", "w3077gFm"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePaymentDomainWhitelistConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 150 'UpdatePaymentDomainWhitelistConfig' test.out

#- 151 QueryPaymentNotifications
$CLI_EXE \
    --sn platform \
    --op QueryPaymentNotifications \
    --namespace $AB_NAMESPACE \
    --endDate '3nd9Zcb4' \
    --externalId 'SgDyQmyy' \
    --limit '74' \
    --notificationSource 'CHECKOUT' \
    --notificationType 'RV7xluzn' \
    --offset '85' \
    --paymentOrderNo 'DMQchVIW' \
    --startDate 'sAZQrv82' \
    --status 'IGNORED' \
    > test.out 2>&1
eval_tap $? 151 'QueryPaymentNotifications' test.out

#- 152 QueryPaymentOrders
$CLI_EXE \
    --sn platform \
    --op QueryPaymentOrders \
    --namespace $AB_NAMESPACE \
    --channel 'INTERNAL' \
    --extTxId '4Lhs7Off' \
    --limit '92' \
    --offset '33' \
    --status 'CHARGEBACK' \
    > test.out 2>&1
eval_tap $? 152 'QueryPaymentOrders' test.out

#- 153 CreatePaymentOrderByDedicated
# body param: body
echo '{"currencyCode": "anuHprh7", "currencyNamespace": "smvAWSyV", "customParameters": {"Y81p3euW": {}, "FMf7F1LK": {}, "Peq6lk5D": {}}, "description": "ZelW0VAy", "extOrderNo": "Ld6Zc81y", "extUserId": "5HifHVbt", "itemType": "COINS", "language": "CA", "metadata": {"Nxu1HK4C": "dEEKsMhM", "JwMpScCl": "0Nyp0iRr", "wBdhOGCq": "rKFDPckA"}, "notifyUrl": "DA1nyExC", "omitNotification": true, "platform": "mtotJ6yq", "price": 88, "recurringPaymentOrderNo": "aKSZkQYB", "region": "zixwo4F6", "returnUrl": "DlMvsEuR", "sandbox": true, "sku": "9HpCZ7xl", "subscriptionId": "6zC6Ygtu", "targetNamespace": "h3fO9I1Q", "targetUserId": "l2odNgUc", "title": "pVRD5x8m"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreatePaymentOrderByDedicated \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 153 'CreatePaymentOrderByDedicated' test.out

#- 154 ListExtOrderNoByExtTxId
$CLI_EXE \
    --sn platform \
    --op ListExtOrderNoByExtTxId \
    --namespace $AB_NAMESPACE \
    --extTxId '5BbazR3c' \
    > test.out 2>&1
eval_tap $? 154 'ListExtOrderNoByExtTxId' test.out

#- 155 GetPaymentOrder
$CLI_EXE \
    --sn platform \
    --op GetPaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'lYDRStM7' \
    > test.out 2>&1
eval_tap $? 155 'GetPaymentOrder' test.out

#- 156 ChargePaymentOrder
# body param: body
echo '{"extTxId": "n9XYXyVd", "paymentMethod": "70EiAVJM", "paymentProvider": "WXPAY"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ChargePaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'WF6PMi4S' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 156 'ChargePaymentOrder' test.out

#- 157 RefundPaymentOrderByDedicated
# body param: body
echo '{"description": "ZICE86tU"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RefundPaymentOrderByDedicated \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'effAQQUu' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 157 'RefundPaymentOrderByDedicated' test.out

#- 158 SimulatePaymentOrderNotification
# body param: body
echo '{"amount": 13, "currencyCode": "yeyvIQCI", "notifyType": "REFUND", "paymentProvider": "WALLET", "salesTax": 83, "vat": 49}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SimulatePaymentOrderNotification \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'TjvyaVQ4' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 158 'SimulatePaymentOrderNotification' test.out

#- 159 GetPaymentOrderChargeStatus
$CLI_EXE \
    --sn platform \
    --op GetPaymentOrderChargeStatus \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'ub8dzxmX' \
    > test.out 2>&1
eval_tap $? 159 'GetPaymentOrderChargeStatus' test.out

#- 160 GetPsnEntitlementOwnership
# body param: body
echo '{"accessToken": "Un8al03e", "serviceLabel": 72}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op GetPsnEntitlementOwnership \
    --entitlementLabel 'dbBVvCSF' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 160 'GetPsnEntitlementOwnership' test.out

#- 161 GetXboxEntitlementOwnership
# body param: body
echo '{"delegationToken": "Q8QlhAWB", "sandboxId": "njlESvWt"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op GetXboxEntitlementOwnership \
    --namespace $AB_NAMESPACE \
    --productSku 'xGIi4oSc' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 161 'GetXboxEntitlementOwnership' test.out

#- 162 GetPlatformEntitlementConfig
$CLI_EXE \
    --sn platform \
    --op GetPlatformEntitlementConfig \
    --namespace $AB_NAMESPACE \
    --platform 'Playstation' \
    > test.out 2>&1
eval_tap $? 162 'GetPlatformEntitlementConfig' test.out

#- 163 UpdatePlatformEntitlementConfig
# body param: body
echo '{"allowedPlatformOrigins": ["Playstation", "Twitch", "Oculus"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePlatformEntitlementConfig \
    --namespace $AB_NAMESPACE \
    --platform 'Xbox' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 163 'UpdatePlatformEntitlementConfig' test.out

#- 164 GetPlatformWalletConfig
$CLI_EXE \
    --sn platform \
    --op GetPlatformWalletConfig \
    --namespace $AB_NAMESPACE \
    --platform 'Playstation' \
    > test.out 2>&1
eval_tap $? 164 'GetPlatformWalletConfig' test.out

#- 165 UpdatePlatformWalletConfig
# body param: body
echo '{"allowedBalanceOrigins": ["Epic", "Xbox", "Xbox"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePlatformWalletConfig \
    --namespace $AB_NAMESPACE \
    --platform 'GooglePlay' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 165 'UpdatePlatformWalletConfig' test.out

#- 166 ResetPlatformWalletConfig
$CLI_EXE \
    --sn platform \
    --op ResetPlatformWalletConfig \
    --namespace $AB_NAMESPACE \
    --platform 'IOS' \
    > test.out 2>&1
eval_tap $? 166 'ResetPlatformWalletConfig' test.out

#- 167 GetRevocationConfig
$CLI_EXE \
    --sn platform \
    --op GetRevocationConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 167 'GetRevocationConfig' test.out

#- 168 UpdateRevocationConfig
# body param: body
echo '{"entitlement": {"consumable": {"enabled": true, "strategy": "CUSTOM"}, "durable": {"enabled": false, "strategy": "CUSTOM"}}, "wallet": {"enabled": false, "strategy": "CUSTOM"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateRevocationConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 168 'UpdateRevocationConfig' test.out

#- 169 DeleteRevocationConfig
$CLI_EXE \
    --sn platform \
    --op DeleteRevocationConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 169 'DeleteRevocationConfig' test.out

#- 170 QueryRevocationHistories
$CLI_EXE \
    --sn platform \
    --op QueryRevocationHistories \
    --namespace $AB_NAMESPACE \
    --endTime 'P9lm5NyJ' \
    --limit '65' \
    --offset '88' \
    --source 'DLC' \
    --startTime 'yxc0nIrO' \
    --status 'SUCCESS' \
    --transactionId 'ByANfHqu' \
    --userId 'LRV7TcAN' \
    > test.out 2>&1
eval_tap $? 170 'QueryRevocationHistories' test.out

#- 171 GetRevocationPluginConfig
$CLI_EXE \
    --sn platform \
    --op GetRevocationPluginConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 171 'GetRevocationPluginConfig' test.out

#- 172 UpdateRevocationPluginConfig
# body param: body
echo '{"appConfig": {"appName": "0xV6LL6n"}, "customConfig": {"connectionType": "TLS", "grpcServerAddress": "fFx4EgvI"}, "extendType": "APP"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateRevocationPluginConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 172 'UpdateRevocationPluginConfig' test.out

#- 173 DeleteRevocationPluginConfig
$CLI_EXE \
    --sn platform \
    --op DeleteRevocationPluginConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 173 'DeleteRevocationPluginConfig' test.out

#- 174 UploadRevocationPluginConfigCert
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UploadRevocationPluginConfigCert \
    --namespace $AB_NAMESPACE \
    --upload file $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 174 'UploadRevocationPluginConfigCert' test.out

#- 175 CreateReward
# body param: body
echo '{"description": "lpstO0FK", "eventTopic": "xjVKQ9Kx", "maxAwarded": 96, "maxAwardedPerUser": 96, "namespaceExpression": "WFxfgBsf", "rewardCode": "Gg0hwnRD", "rewardConditions": [{"condition": "IEzjjRct", "conditionName": "oxufzIpm", "eventName": "q4YNrkZB", "rewardItems": [{"duration": 92, "endDate": "1995-05-01T00:00:00Z", "identityType": "ITEM_ID", "itemId": "HXNeFTHp", "quantity": 30, "sku": "fFEb9U4K"}, {"duration": 43, "endDate": "1991-11-19T00:00:00Z", "identityType": "ITEM_SKU", "itemId": "0KH3jAEx", "quantity": 96, "sku": "SKPHd4cN"}, {"duration": 89, "endDate": "1976-04-28T00:00:00Z", "identityType": "ITEM_ID", "itemId": "qUKDyaUa", "quantity": 74, "sku": "35cveyEL"}]}, {"condition": "Lw3pIiAQ", "conditionName": "uAsI9PEX", "eventName": "jKEJ3Vc5", "rewardItems": [{"duration": 48, "endDate": "1993-08-01T00:00:00Z", "identityType": "ITEM_ID", "itemId": "yijRbPeY", "quantity": 56, "sku": "DRQ8ARjd"}, {"duration": 75, "endDate": "1974-01-28T00:00:00Z", "identityType": "ITEM_SKU", "itemId": "iMxE7RxW", "quantity": 8, "sku": "NxAAG3wx"}, {"duration": 7, "endDate": "1973-09-16T00:00:00Z", "identityType": "ITEM_ID", "itemId": "cT7rWe12", "quantity": 49, "sku": "NaYzkfWP"}]}, {"condition": "4P0mCx6G", "conditionName": "LuPQ6fjI", "eventName": "5AoPPg1B", "rewardItems": [{"duration": 2, "endDate": "1987-05-12T00:00:00Z", "identityType": "ITEM_ID", "itemId": "NOkuKjPo", "quantity": 31, "sku": "hnxpjHqE"}, {"duration": 24, "endDate": "1971-12-11T00:00:00Z", "identityType": "ITEM_ID", "itemId": "nktJsqN7", "quantity": 72, "sku": "mn4g0YOm"}, {"duration": 58, "endDate": "1973-03-28T00:00:00Z", "identityType": "ITEM_ID", "itemId": "7EPKHIIx", "quantity": 54, "sku": "fkgqLI8n"}]}], "userIdExpression": "mr50bZoc"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateReward \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 175 'CreateReward' test.out

#- 176 QueryRewards
$CLI_EXE \
    --sn platform \
    --op QueryRewards \
    --namespace $AB_NAMESPACE \
    --eventTopic 'ntxJV0jT' \
    --limit '25' \
    --offset '48' \
    --sortBy '["namespace:desc", "rewardCode"]' \
    > test.out 2>&1
eval_tap $? 176 'QueryRewards' test.out

#- 177 ExportRewards
$CLI_EXE \
    --sn platform \
    --op ExportRewards \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 177 'ExportRewards' test.out

#- 178 ImportRewards
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op ImportRewards \
    --namespace $AB_NAMESPACE \
    --replaceExisting 'false' \
    --upload file $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 178 'ImportRewards' test.out

#- 179 GetReward
$CLI_EXE \
    --sn platform \
    --op GetReward \
    --namespace $AB_NAMESPACE \
    --rewardId '1q6UtC5q' \
    > test.out 2>&1
eval_tap $? 179 'GetReward' test.out

#- 180 UpdateReward
# body param: body
echo '{"description": "dXDMlv28", "eventTopic": "79QPllZS", "maxAwarded": 76, "maxAwardedPerUser": 33, "namespaceExpression": "vQTMvlMS", "rewardCode": "UUGdILrc", "rewardConditions": [{"condition": "Eae1r2Wn", "conditionName": "F2LVrMkO", "eventName": "KvVqDbmD", "rewardItems": [{"duration": 29, "endDate": "1999-08-15T00:00:00Z", "identityType": "ITEM_SKU", "itemId": "KV6V5Rsf", "quantity": 54, "sku": "oJxRhhdE"}, {"duration": 37, "endDate": "1976-01-21T00:00:00Z", "identityType": "ITEM_ID", "itemId": "w0JrLJ0N", "quantity": 46, "sku": "J9egUybG"}, {"duration": 79, "endDate": "1972-03-25T00:00:00Z", "identityType": "ITEM_SKU", "itemId": "mvDaPrRR", "quantity": 29, "sku": "RTm4D0SC"}]}, {"condition": "eeI6OiIK", "conditionName": "KmfVAHx0", "eventName": "ZkXRZkHs", "rewardItems": [{"duration": 15, "endDate": "1988-11-14T00:00:00Z", "identityType": "ITEM_ID", "itemId": "rdxEvzKG", "quantity": 46, "sku": "4HieA7qI"}, {"duration": 55, "endDate": "1976-02-13T00:00:00Z", "identityType": "ITEM_SKU", "itemId": "8llnIKmy", "quantity": 24, "sku": "z2b8JRzh"}, {"duration": 31, "endDate": "1985-06-27T00:00:00Z", "identityType": "ITEM_SKU", "itemId": "YfnSvT9q", "quantity": 67, "sku": "N6f3qBhs"}]}, {"condition": "GsM30cL0", "conditionName": "Pcomwq22", "eventName": "IAozX8SP", "rewardItems": [{"duration": 31, "endDate": "1975-05-03T00:00:00Z", "identityType": "ITEM_SKU", "itemId": "8dpKIlAm", "quantity": 99, "sku": "bLKVUzxJ"}, {"duration": 99, "endDate": "1999-06-29T00:00:00Z", "identityType": "ITEM_ID", "itemId": "Vidk3DWR", "quantity": 92, "sku": "11mujq6g"}, {"duration": 53, "endDate": "1980-03-10T00:00:00Z", "identityType": "ITEM_SKU", "itemId": "v4DKjpOX", "quantity": 55, "sku": "tYefLIey"}]}], "userIdExpression": "Bq5iPvvA"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateReward \
    --namespace $AB_NAMESPACE \
    --rewardId 'XAVne8ZZ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 180 'UpdateReward' test.out

#- 181 DeleteReward
$CLI_EXE \
    --sn platform \
    --op DeleteReward \
    --namespace $AB_NAMESPACE \
    --rewardId 'i02bMUj6' \
    > test.out 2>&1
eval_tap $? 181 'DeleteReward' test.out

#- 182 CheckEventCondition
# body param: body
echo '{"payload": {"7QVtHFkM": {}, "SfqFUgaf": {}, "AbsGd9K4": {}}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CheckEventCondition \
    --namespace $AB_NAMESPACE \
    --rewardId 'lIp7CMUR' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 182 'CheckEventCondition' test.out

#- 183 DeleteRewardConditionRecord
# body param: body
echo '{"conditionName": "uHacHQws", "userId": "6mfDuPuY"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op DeleteRewardConditionRecord \
    --namespace $AB_NAMESPACE \
    --rewardId 'y8p7rdNd' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 183 'DeleteRewardConditionRecord' test.out

#- 184 QuerySections
$CLI_EXE \
    --sn platform \
    --op QuerySections \
    --namespace $AB_NAMESPACE \
    --end 'q2dmK3n8' \
    --limit '91' \
    --offset '35' \
    --start 'O6c1ZAqd' \
    --storeId 'OWmgrX96' \
    --viewId 'VMZBpxy3' \
    > test.out 2>&1
eval_tap $? 184 'QuerySections' test.out

#- 185 CreateSection
# body param: body
echo '{"active": true, "displayOrder": 34, "endDate": "1980-11-18T00:00:00Z", "ext": {"0nsPqa3S": {}, "ItgES9PM": {}, "BUvHuozn": {}}, "fixedPeriodRotationConfig": {"backfillType": "NONE", "duration": 38, "itemCount": 58, "rule": "SEQUENCE"}, "items": [{"id": "k4M57BML", "sku": "fhZdO2wk"}, {"id": "1nppmvoY", "sku": "dTIBpYQu"}, {"id": "Sr3c94FZ", "sku": "qmmrc7ev"}], "localizations": {"DTtcwqUO": {"description": "6ZSofHL5", "localExt": {"FX7PLwt5": {}, "zVbXOqyI": {}, "3HSWNb56": {}}, "longDescription": "qILQUa5e", "title": "3Shy1gUf"}, "Fx9XcpDb": {"description": "8yH1Qeud", "localExt": {"LDkF1gX4": {}, "QLqwtSOn": {}, "mXwouJPY": {}}, "longDescription": "uMut2EyR", "title": "keKEv7mv"}, "FzEmv6H6": {"description": "8fQE7sf4", "localExt": {"mMYWBFNj": {}, "RtR80Odm": {}, "ize8gEes": {}}, "longDescription": "r2tNk3YK", "title": "1Fjecjhw"}}, "name": "90JylYdL", "rotationType": "NONE", "startDate": "1988-11-24T00:00:00Z", "viewId": "OhC76Xsl"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateSection \
    --namespace $AB_NAMESPACE \
    --storeId 'YqUZVqUJ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 185 'CreateSection' test.out

#- 186 PurgeExpiredSection
$CLI_EXE \
    --sn platform \
    --op PurgeExpiredSection \
    --namespace $AB_NAMESPACE \
    --storeId 'IjdDNQXq' \
    > test.out 2>&1
eval_tap $? 186 'PurgeExpiredSection' test.out

#- 187 GetSection
$CLI_EXE \
    --sn platform \
    --op GetSection \
    --namespace $AB_NAMESPACE \
    --sectionId 'Z464n1Rp' \
    --storeId 'F7Oz5zaB' \
    > test.out 2>&1
eval_tap $? 187 'GetSection' test.out

#- 188 UpdateSection
# body param: body
echo '{"active": false, "displayOrder": 39, "endDate": "1977-10-13T00:00:00Z", "ext": {"UoYQPVk6": {}, "rYMJypKX": {}, "v7u8Hezl": {}}, "fixedPeriodRotationConfig": {"backfillType": "NONE", "duration": 58, "itemCount": 5, "rule": "SEQUENCE"}, "items": [{"id": "AC3n0Q94", "sku": "8mpJSUh5"}, {"id": "oP2ahIts", "sku": "plHYRaFP"}, {"id": "dqni90DD", "sku": "PGpNlI6M"}], "localizations": {"qGJN4aUT": {"description": "iRMBYX54", "localExt": {"s3gmb72H": {}, "XmXEZBPF": {}, "YRxtdF8g": {}}, "longDescription": "wgTTESa7", "title": "zlyAGr7o"}, "f3cbrWkb": {"description": "HgCLZfXH", "localExt": {"B7M5YBw5": {}, "quw6xt8h": {}, "5vKan7mp": {}}, "longDescription": "ygioUwuN", "title": "iZ0noQkg"}, "x7kIpo1J": {"description": "PHJg4VwW", "localExt": {"8KcdaVLh": {}, "MorQnsAc": {}, "qGfcJgVK": {}}, "longDescription": "FCNwM0Ap", "title": "KvcvGpqc"}}, "name": "eENDe9Dq", "rotationType": "CUSTOM", "startDate": "1983-11-06T00:00:00Z", "viewId": "mHvZ3QEx"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateSection \
    --namespace $AB_NAMESPACE \
    --sectionId 'EXfmLd0b' \
    --storeId 'DyeHANfI' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 188 'UpdateSection' test.out

#- 189 DeleteSection
$CLI_EXE \
    --sn platform \
    --op DeleteSection \
    --namespace $AB_NAMESPACE \
    --sectionId 'Fh21s0lS' \
    --storeId 'xGtk8SZh' \
    > test.out 2>&1
eval_tap $? 189 'DeleteSection' test.out

#- 190 ListStores
$CLI_EXE \
    --sn platform \
    --op ListStores \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 190 'ListStores' test.out

#- 191 CreateStore
# body param: body
echo '{"defaultLanguage": "4e59wxQL", "defaultRegion": "Wv8taqWR", "description": "zWsCXh5c", "supportedLanguages": ["E2qu7SxZ", "IluH0JKy", "US8VkyMm"], "supportedRegions": ["8Hi4NxVc", "EO2rqG9S", "7uYG1PVT"], "title": "KEOG79SA"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateStore \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 191 'CreateStore' test.out

#- 192 GetCatalogDefinition
$CLI_EXE \
    --sn platform \
    --op GetCatalogDefinition \
    --namespace $AB_NAMESPACE \
    --catalogType 'SECTION' \
    > test.out 2>&1
eval_tap $? 192 'GetCatalogDefinition' test.out

#- 193 DownloadCSVTemplates
$CLI_EXE \
    --sn platform \
    --op DownloadCSVTemplates \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 193 'DownloadCSVTemplates' test.out

#- 194 ExportStoreByCSV
# body param: body
echo '{"catalogType": "APP", "fieldsToBeIncluded": ["LYqUMMhu", "LUiyVPiP", "KWi4bD7A"], "idsToBeExported": ["jUT1Akm7", "RnSoMphZ", "zMr5l3I5"], "storeId": "y2XER5xt"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ExportStoreByCSV \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 194 'ExportStoreByCSV' test.out

#- 195 ImportStore
eval_tap 0 195 'ImportStore # SKIP deprecated' test.out

#- 196 GetPublishedStore
$CLI_EXE \
    --sn platform \
    --op GetPublishedStore \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 196 'GetPublishedStore' test.out

#- 197 DeletePublishedStore
$CLI_EXE \
    --sn platform \
    --op DeletePublishedStore \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 197 'DeletePublishedStore' test.out

#- 198 GetPublishedStoreBackup
$CLI_EXE \
    --sn platform \
    --op GetPublishedStoreBackup \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 198 'GetPublishedStoreBackup' test.out

#- 199 RollbackPublishedStore
$CLI_EXE \
    --sn platform \
    --op RollbackPublishedStore \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 199 'RollbackPublishedStore' test.out

#- 200 GetStore
$CLI_EXE \
    --sn platform \
    --op GetStore \
    --namespace $AB_NAMESPACE \
    --storeId 'BKP7lRiq' \
    > test.out 2>&1
eval_tap $? 200 'GetStore' test.out

#- 201 UpdateStore
# body param: body
echo '{"defaultLanguage": "spYlpr9A", "defaultRegion": "8FXT7ugz", "description": "33BfoOj2", "supportedLanguages": ["7mXeDSqf", "TRdMbIUn", "zPB5QTJt"], "supportedRegions": ["2BgqaCeQ", "gf0EmcL7", "yOBFt5dC"], "title": "O9fUi4gP"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateStore \
    --namespace $AB_NAMESPACE \
    --storeId 'VhjIOujd' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 201 'UpdateStore' test.out

#- 202 DeleteStore
$CLI_EXE \
    --sn platform \
    --op DeleteStore \
    --namespace $AB_NAMESPACE \
    --storeId 'DyWp2nyG' \
    > test.out 2>&1
eval_tap $? 202 'DeleteStore' test.out

#- 203 QueryChanges
$CLI_EXE \
    --sn platform \
    --op QueryChanges \
    --namespace $AB_NAMESPACE \
    --storeId 'WBLbZUFW' \
    --action 'CREATE' \
    --itemSku 'BiWOMllB' \
    --itemType 'BUNDLE' \
    --limit '91' \
    --offset '68' \
    --selected 'false' \
    --sortBy '["createdAt:asc", "updatedAt:desc"]' \
    --status 'PUBLISHED' \
    --type 'CATEGORY' \
    --updatedAtEnd '7kyhfWnF' \
    --updatedAtStart 'oVi9sUCv' \
    --withTotal 'true' \
    > test.out 2>&1
eval_tap $? 203 'QueryChanges' test.out

#- 204 PublishAll
$CLI_EXE \
    --sn platform \
    --op PublishAll \
    --namespace $AB_NAMESPACE \
    --storeId 'c6P7RCSy' \
    > test.out 2>&1
eval_tap $? 204 'PublishAll' test.out

#- 205 PublishSelected
$CLI_EXE \
    --sn platform \
    --op PublishSelected \
    --namespace $AB_NAMESPACE \
    --storeId 'zJ9lZ3u2' \
    > test.out 2>&1
eval_tap $? 205 'PublishSelected' test.out

#- 206 SelectAllRecords
$CLI_EXE \
    --sn platform \
    --op SelectAllRecords \
    --namespace $AB_NAMESPACE \
    --storeId 'jiBKKv3y' \
    > test.out 2>&1
eval_tap $? 206 'SelectAllRecords' test.out

#- 207 SelectAllRecordsByCriteria
$CLI_EXE \
    --sn platform \
    --op SelectAllRecordsByCriteria \
    --namespace $AB_NAMESPACE \
    --storeId 'n2SGfF5v' \
    --action 'UPDATE' \
    --itemSku 'W4o159Af' \
    --itemType 'APP' \
    --selected 'false' \
    --type 'STORE' \
    --updatedAtEnd 'W715w7mQ' \
    --updatedAtStart 'kUUsIaRd' \
    > test.out 2>&1
eval_tap $? 207 'SelectAllRecordsByCriteria' test.out

#- 208 GetStatistic
$CLI_EXE \
    --sn platform \
    --op GetStatistic \
    --namespace $AB_NAMESPACE \
    --storeId '0mzp3zjA' \
    --action 'UPDATE' \
    --itemSku 'oNG0jQKJ' \
    --itemType 'SUBSCRIPTION' \
    --type 'VIEW' \
    --updatedAtEnd 'EfLYTrO9' \
    --updatedAtStart '01ntkB6w' \
    > test.out 2>&1
eval_tap $? 208 'GetStatistic' test.out

#- 209 UnselectAllRecords
$CLI_EXE \
    --sn platform \
    --op UnselectAllRecords \
    --namespace $AB_NAMESPACE \
    --storeId 'gELO24Xp' \
    > test.out 2>&1
eval_tap $? 209 'UnselectAllRecords' test.out

#- 210 SelectRecord
$CLI_EXE \
    --sn platform \
    --op SelectRecord \
    --changeId 'BtHMCCvm' \
    --namespace $AB_NAMESPACE \
    --storeId '9Mbp56SM' \
    > test.out 2>&1
eval_tap $? 210 'SelectRecord' test.out

#- 211 UnselectRecord
$CLI_EXE \
    --sn platform \
    --op UnselectRecord \
    --changeId 'SClOsskf' \
    --namespace $AB_NAMESPACE \
    --storeId 'CffjbQAW' \
    > test.out 2>&1
eval_tap $? 211 'UnselectRecord' test.out

#- 212 CloneStore
$CLI_EXE \
    --sn platform \
    --op CloneStore \
    --namespace $AB_NAMESPACE \
    --storeId 'OQADFrPF' \
    --targetStoreId 'uLHmgMQK' \
    > test.out 2>&1
eval_tap $? 212 'CloneStore' test.out

#- 213 ExportStore
eval_tap 0 213 'ExportStore # SKIP deprecated' test.out

#- 214 QueryImportHistory
$CLI_EXE \
    --sn platform \
    --op QueryImportHistory \
    --namespace $AB_NAMESPACE \
    --storeId 'NMMMDccq' \
    --end 'O2d7nDXP' \
    --limit '61' \
    --offset '82' \
    --sortBy 'YCWgW3Wj' \
    --start 'q86TVhrD' \
    --success 'true' \
    > test.out 2>&1
eval_tap $? 214 'QueryImportHistory' test.out

#- 215 ImportStoreByCSV
# form data upload: category
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
# form data upload: display
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
# form data upload: item
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
# form data upload: section
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op ImportStoreByCSV \
    --namespace $AB_NAMESPACE \
    --storeId '4WWoIqDA' \
    --upload category $TEMP_FILE_UPLOAD \
    --upload display $TEMP_FILE_UPLOAD \
    --upload item $TEMP_FILE_UPLOAD \
    --notes 'JB8cBzIO' \
    --upload section $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 215 'ImportStoreByCSV' test.out

#- 216 QuerySubscriptions
$CLI_EXE \
    --sn platform \
    --op QuerySubscriptions \
    --namespace $AB_NAMESPACE \
    --chargeStatus 'CHARGE_FAILED' \
    --itemId 'wLzrmbCR' \
    --limit '58' \
    --offset '44' \
    --sku 'NmY3yPnP' \
    --status 'INIT' \
    --subscribedBy 'USER' \
    --userId 'DsT0V0c0' \
    > test.out 2>&1
eval_tap $? 216 'QuerySubscriptions' test.out

#- 217 RecurringChargeSubscription
$CLI_EXE \
    --sn platform \
    --op RecurringChargeSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'tLR54KFz' \
    > test.out 2>&1
eval_tap $? 217 'RecurringChargeSubscription' test.out

#- 218 GetTicketDynamic
$CLI_EXE \
    --sn platform \
    --op GetTicketDynamic \
    --boothName 'h781B5K6' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 218 'GetTicketDynamic' test.out

#- 219 DecreaseTicketSale
# body param: body
echo '{"orderNo": "n8KDYrpw"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op DecreaseTicketSale \
    --boothName 'pO3TQA42' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 219 'DecreaseTicketSale' test.out

#- 220 GetTicketBoothID
$CLI_EXE \
    --sn platform \
    --op GetTicketBoothID \
    --boothName 'nHDKhLmT' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 220 'GetTicketBoothID' test.out

#- 221 IncreaseTicketSale
# body param: body
echo '{"count": 97, "orderNo": "SByoA2NX"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op IncreaseTicketSale \
    --boothName 'oKBG7SDM' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 221 'IncreaseTicketSale' test.out

#- 222 Commit
# body param: body
echo '{"actions": [{"operations": [{"creditPayload": {"balanceOrigin": "Xbox", "count": 66, "currencyCode": "44dZlUrs", "expireAt": "1975-02-01T00:00:00Z"}, "debitPayload": {"count": 93, "currencyCode": "qkRQpS2M", "walletPlatform": "Epic"}, "fulFillItemPayload": {"count": 61, "entitlementCollectionId": "Hz6EZltG", "entitlementOrigin": "Oculus", "itemIdentity": "jAeHsavh", "itemIdentityType": "ITEM_ID"}, "revokeEntitlementPayload": {"count": 20, "entitlementId": "pS6McQja"}, "type": "CREDIT_WALLET"}, {"creditPayload": {"balanceOrigin": "Playstation", "count": 48, "currencyCode": "4ySGEZRY", "expireAt": "1992-11-10T00:00:00Z"}, "debitPayload": {"count": 36, "currencyCode": "wHPKbFiq", "walletPlatform": "Other"}, "fulFillItemPayload": {"count": 40, "entitlementCollectionId": "avfxulcg", "entitlementOrigin": "Playstation", "itemIdentity": "GyVcWxBl", "itemIdentityType": "ITEM_ID"}, "revokeEntitlementPayload": {"count": 80, "entitlementId": "rsIT7zB0"}, "type": "FULFILL_ITEM"}, {"creditPayload": {"balanceOrigin": "Epic", "count": 27, "currencyCode": "IJFtoPz2", "expireAt": "1999-02-22T00:00:00Z"}, "debitPayload": {"count": 1, "currencyCode": "9dawx8Gz", "walletPlatform": "Playstation"}, "fulFillItemPayload": {"count": 62, "entitlementCollectionId": "5kV6bAJ2", "entitlementOrigin": "Playstation", "itemIdentity": "4nqgTH2i", "itemIdentityType": "ITEM_SKU"}, "revokeEntitlementPayload": {"count": 11, "entitlementId": "AvneW1ls"}, "type": "FULFILL_ITEM"}], "userId": "L8lLk5gR"}, {"operations": [{"creditPayload": {"balanceOrigin": "Nintendo", "count": 45, "currencyCode": "CZlFaEe9", "expireAt": "1998-05-31T00:00:00Z"}, "debitPayload": {"count": 55, "currencyCode": "N21UV4MK", "walletPlatform": "Other"}, "fulFillItemPayload": {"count": 43, "entitlementCollectionId": "Q7f42yCQ", "entitlementOrigin": "Twitch", "itemIdentity": "Wqqun95l", "itemIdentityType": "ITEM_SKU"}, "revokeEntitlementPayload": {"count": 32, "entitlementId": "nK6jzVbs"}, "type": "FULFILL_ITEM"}, {"creditPayload": {"balanceOrigin": "Xbox", "count": 77, "currencyCode": "36TGxQzt", "expireAt": "1988-08-13T00:00:00Z"}, "debitPayload": {"count": 62, "currencyCode": "ZVg1xsCq", "walletPlatform": "GooglePlay"}, "fulFillItemPayload": {"count": 9, "entitlementCollectionId": "monn6gby", "entitlementOrigin": "Playstation", "itemIdentity": "OKgrO1AC", "itemIdentityType": "ITEM_SKU"}, "revokeEntitlementPayload": {"count": 100, "entitlementId": "bBDeIDjG"}, "type": "FULFILL_ITEM"}, {"creditPayload": {"balanceOrigin": "Playstation", "count": 18, "currencyCode": "B4hmfCCt", "expireAt": "1975-11-30T00:00:00Z"}, "debitPayload": {"count": 71, "currencyCode": "hcEbdraJ", "walletPlatform": "Steam"}, "fulFillItemPayload": {"count": 61, "entitlementCollectionId": "b6UpwEB6", "entitlementOrigin": "IOS", "itemIdentity": "3HlGZDTA", "itemIdentityType": "ITEM_SKU"}, "revokeEntitlementPayload": {"count": 75, "entitlementId": "5WYF8HG0"}, "type": "CREDIT_WALLET"}], "userId": "B0QjlPL4"}, {"operations": [{"creditPayload": {"balanceOrigin": "Other", "count": 91, "currencyCode": "o7T6YsWa", "expireAt": "1990-06-01T00:00:00Z"}, "debitPayload": {"count": 69, "currencyCode": "h99rD787", "walletPlatform": "Xbox"}, "fulFillItemPayload": {"count": 65, "entitlementCollectionId": "O4K4WTNe", "entitlementOrigin": "Xbox", "itemIdentity": "L0BVa07w", "itemIdentityType": "ITEM_ID"}, "revokeEntitlementPayload": {"count": 43, "entitlementId": "s7T0KGwR"}, "type": "REVOKE_ENTITLEMENT"}, {"creditPayload": {"balanceOrigin": "Xbox", "count": 45, "currencyCode": "FRlzE5S4", "expireAt": "1994-04-28T00:00:00Z"}, "debitPayload": {"count": 91, "currencyCode": "qLWupbbq", "walletPlatform": "Playstation"}, "fulFillItemPayload": {"count": 75, "entitlementCollectionId": "LKtEDmFC", "entitlementOrigin": "Oculus", "itemIdentity": "cynwGbFt", "itemIdentityType": "ITEM_ID"}, "revokeEntitlementPayload": {"count": 47, "entitlementId": "ewRU7RlX"}, "type": "CREDIT_WALLET"}, {"creditPayload": {"balanceOrigin": "Other", "count": 64, "currencyCode": "RajewhAV", "expireAt": "1989-12-17T00:00:00Z"}, "debitPayload": {"count": 7, "currencyCode": "IRdXP58D", "walletPlatform": "Oculus"}, "fulFillItemPayload": {"count": 84, "entitlementCollectionId": "ypX0X169", "entitlementOrigin": "Nintendo", "itemIdentity": "imyi2XxE", "itemIdentityType": "ITEM_ID"}, "revokeEntitlementPayload": {"count": 21, "entitlementId": "SRZWUyEI"}, "type": "FULFILL_ITEM"}], "userId": "ny2rl3DD"}], "metadata": {"swqgGYhm": {}, "ZYEreLtw": {}, "X8KnJd1v": {}}, "needPreCheck": false, "transactionId": "uvd3K5n1", "type": "9BoZo4ur"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op Commit \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 222 'Commit' test.out

#- 223 GetTradeHistoryByCriteria
$CLI_EXE \
    --sn platform \
    --op GetTradeHistoryByCriteria \
    --namespace $AB_NAMESPACE \
    --limit '37' \
    --offset '64' \
    --status 'SUCCESS' \
    --type '0VAoqnk8' \
    --userId 'bv2SsqTa' \
    > test.out 2>&1
eval_tap $? 223 'GetTradeHistoryByCriteria' test.out

#- 224 GetTradeHistoryByTransactionId
$CLI_EXE \
    --sn platform \
    --op GetTradeHistoryByTransactionId \
    --namespace $AB_NAMESPACE \
    --transactionId 'sa5TLs3c' \
    > test.out 2>&1
eval_tap $? 224 'GetTradeHistoryByTransactionId' test.out

#- 225 UnlockSteamUserAchievement
# body param: body
echo '{"achievements": [{"id": "RkzxuY4B", "value": 93}, {"id": "FSnyo6co", "value": 18}, {"id": "3UXTRiuY", "value": 62}], "steamUserId": "4uVF68bT"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UnlockSteamUserAchievement \
    --namespace $AB_NAMESPACE \
    --userId 'lvJkB6Nc' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 225 'UnlockSteamUserAchievement' test.out

#- 226 GetXblUserAchievements
$CLI_EXE \
    --sn platform \
    --op GetXblUserAchievements \
    --namespace $AB_NAMESPACE \
    --userId 'GWPr0pZD' \
    --xboxUserId '3FXH6dr5' \
    > test.out 2>&1
eval_tap $? 226 'GetXblUserAchievements' test.out

#- 227 UpdateXblUserAchievement
# body param: body
echo '{"achievements": [{"id": "7SUNsliV", "percentComplete": 77}, {"id": "xzUWNq6K", "percentComplete": 63}, {"id": "NOUc4jfX", "percentComplete": 71}], "serviceConfigId": "u1a1FdAq", "titleId": "b6ggILve", "xboxUserId": "1SbVufS3"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXblUserAchievement \
    --namespace $AB_NAMESPACE \
    --userId 'iiVdyH5U' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 227 'UpdateXblUserAchievement' test.out

#- 228 AnonymizeCampaign
$CLI_EXE \
    --sn platform \
    --op AnonymizeCampaign \
    --namespace $AB_NAMESPACE \
    --userId 'iblICVld' \
    > test.out 2>&1
eval_tap $? 228 'AnonymizeCampaign' test.out

#- 229 AnonymizeEntitlement
$CLI_EXE \
    --sn platform \
    --op AnonymizeEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'ypG07J8f' \
    > test.out 2>&1
eval_tap $? 229 'AnonymizeEntitlement' test.out

#- 230 AnonymizeFulfillment
$CLI_EXE \
    --sn platform \
    --op AnonymizeFulfillment \
    --namespace $AB_NAMESPACE \
    --userId 'HKg98ZvN' \
    > test.out 2>&1
eval_tap $? 230 'AnonymizeFulfillment' test.out

#- 231 AnonymizeIntegration
$CLI_EXE \
    --sn platform \
    --op AnonymizeIntegration \
    --namespace $AB_NAMESPACE \
    --userId 'Xb2aBMhe' \
    > test.out 2>&1
eval_tap $? 231 'AnonymizeIntegration' test.out

#- 232 AnonymizeOrder
$CLI_EXE \
    --sn platform \
    --op AnonymizeOrder \
    --namespace $AB_NAMESPACE \
    --userId 'btwLSAqs' \
    > test.out 2>&1
eval_tap $? 232 'AnonymizeOrder' test.out

#- 233 AnonymizePayment
$CLI_EXE \
    --sn platform \
    --op AnonymizePayment \
    --namespace $AB_NAMESPACE \
    --userId 'of30NAFd' \
    > test.out 2>&1
eval_tap $? 233 'AnonymizePayment' test.out

#- 234 AnonymizeRevocation
$CLI_EXE \
    --sn platform \
    --op AnonymizeRevocation \
    --namespace $AB_NAMESPACE \
    --userId '4HNppDHr' \
    > test.out 2>&1
eval_tap $? 234 'AnonymizeRevocation' test.out

#- 235 AnonymizeSubscription
$CLI_EXE \
    --sn platform \
    --op AnonymizeSubscription \
    --namespace $AB_NAMESPACE \
    --userId 'i7GyXBJt' \
    > test.out 2>&1
eval_tap $? 235 'AnonymizeSubscription' test.out

#- 236 AnonymizeWallet
$CLI_EXE \
    --sn platform \
    --op AnonymizeWallet \
    --namespace $AB_NAMESPACE \
    --userId 'qVONhkSh' \
    > test.out 2>&1
eval_tap $? 236 'AnonymizeWallet' test.out

#- 237 GetUserDLCByPlatform
$CLI_EXE \
    --sn platform \
    --op GetUserDLCByPlatform \
    --namespace $AB_NAMESPACE \
    --userId '9R1Pq4UR' \
    --type 'OCULUS' \
    > test.out 2>&1
eval_tap $? 237 'GetUserDLCByPlatform' test.out

#- 238 GetUserDLC
$CLI_EXE \
    --sn platform \
    --op GetUserDLC \
    --namespace $AB_NAMESPACE \
    --userId 'qUA98dRa' \
    --type 'OCULUS' \
    > test.out 2>&1
eval_tap $? 238 'GetUserDLC' test.out

#- 239 QueryUserEntitlements
$CLI_EXE \
    --sn platform \
    --op QueryUserEntitlements \
    --namespace $AB_NAMESPACE \
    --userId '0EUl8Lzw' \
    --activeOnly 'true' \
    --appType 'DLC' \
    --collectionId 'bl1sZReG' \
    --entitlementClazz 'CODE' \
    --entitlementName '0k89v2JN' \
    --features '["Wm1fD7Sn", "1EVLO8T4", "P0jPxMv4"]' \
    --fuzzyMatchName 'true' \
    --itemId '["vytQcqkk", "8duIsk0V", "HUwaJ1HX"]' \
    --limit '87' \
    --offset '13' \
    --origin 'Xbox' \
    > test.out 2>&1
eval_tap $? 239 'QueryUserEntitlements' test.out

#- 240 GrantUserEntitlement
# body param: body
echo '[{"collectionId": "UlOR0U0Z", "endDate": "1984-08-19T00:00:00Z", "grantedCode": "LPW3Yfyx", "itemId": "5TLIwZs5", "itemNamespace": "c7FRM0mE", "language": "NtEw-kH", "origin": "GooglePlay", "quantity": 33, "region": "6Aau74fO", "source": "ACHIEVEMENT", "startDate": "1994-11-12T00:00:00Z", "storeId": "ec4JtdsW"}, {"collectionId": "SzqYYrqV", "endDate": "1974-01-27T00:00:00Z", "grantedCode": "OiB6BoZx", "itemId": "bQ1A98h1", "itemNamespace": "9prMH3Pb", "language": "LD_wBpr", "origin": "System", "quantity": 47, "region": "t0ziNyrs", "source": "REWARD", "startDate": "1978-03-26T00:00:00Z", "storeId": "iE9R38IZ"}, {"collectionId": "Z0lkl6pS", "endDate": "1998-03-06T00:00:00Z", "grantedCode": "270juzQs", "itemId": "svb6K99b", "itemNamespace": "OsUt8QBd", "language": "TRSr_302", "origin": "Steam", "quantity": 0, "region": "W8OL4XLM", "source": "REWARD", "startDate": "1981-07-19T00:00:00Z", "storeId": "kW9dxK5c"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op GrantUserEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'NmKLjjMQ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 240 'GrantUserEntitlement' test.out

#- 241 GetUserAppEntitlementByAppId
$CLI_EXE \
    --sn platform \
    --op GetUserAppEntitlementByAppId \
    --namespace $AB_NAMESPACE \
    --userId 'uoR5Q1n3' \
    --activeOnly 'false' \
    --appId 'aIVkrlPz' \
    > test.out 2>&1
eval_tap $? 241 'GetUserAppEntitlementByAppId' test.out

#- 242 QueryUserEntitlementsByAppType
$CLI_EXE \
    --sn platform \
    --op QueryUserEntitlementsByAppType \
    --namespace $AB_NAMESPACE \
    --userId 'a4e8YkLZ' \
    --activeOnly 'false' \
    --limit '0' \
    --offset '75' \
    --appType 'DEMO' \
    > test.out 2>&1
eval_tap $? 242 'QueryUserEntitlementsByAppType' test.out

#- 243 GetUserEntitlementByItemId
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'I3aRspfv' \
    --activeOnly 'true' \
    --entitlementClazz 'OPTIONBOX' \
    --platform 'D8YVWHQg' \
    --itemId '5SB3Qmr5' \
    > test.out 2>&1
eval_tap $? 243 'GetUserEntitlementByItemId' test.out

#- 244 GetUserActiveEntitlementsByItemIds
$CLI_EXE \
    --sn platform \
    --op GetUserActiveEntitlementsByItemIds \
    --namespace $AB_NAMESPACE \
    --userId 'Tf6ZszNX' \
    --ids '["DqJckLEx", "zcp1RXwt", "AypIi2Dp"]' \
    --platform 'IHi3VRyu' \
    > test.out 2>&1
eval_tap $? 244 'GetUserActiveEntitlementsByItemIds' test.out

#- 245 GetUserEntitlementBySku
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementBySku \
    --namespace $AB_NAMESPACE \
    --userId 'ea8sSzkJ' \
    --activeOnly 'false' \
    --entitlementClazz 'OPTIONBOX' \
    --platform 'raS6I6v6' \
    --sku '6wFtJ41Z' \
    > test.out 2>&1
eval_tap $? 245 'GetUserEntitlementBySku' test.out

#- 246 ExistsAnyUserActiveEntitlement
$CLI_EXE \
    --sn platform \
    --op ExistsAnyUserActiveEntitlement \
    --namespace $AB_NAMESPACE \
    --userId '8MvPexBz' \
    --appIds '["AtiWLLbz", "p7f4O4iy", "nKDI4CTA"]' \
    --itemIds '["F1SPz7YN", "LNme62LR", "3Urjt5vI"]' \
    --platform 'iBEogS9H' \
    --skus '["z5QIAEjD", "63tGeDXW", "zJrEvgzM"]' \
    > test.out 2>&1
eval_tap $? 246 'ExistsAnyUserActiveEntitlement' test.out

#- 247 ExistsAnyUserActiveEntitlementByItemIds
$CLI_EXE \
    --sn platform \
    --op ExistsAnyUserActiveEntitlementByItemIds \
    --namespace $AB_NAMESPACE \
    --userId 'BdzBkFt9' \
    --platform 'iizOvp1T' \
    --itemIds '["4ecNKRoR", "LSZLT6KZ", "xXSOE68Y"]' \
    > test.out 2>&1
eval_tap $? 247 'ExistsAnyUserActiveEntitlementByItemIds' test.out

#- 248 GetUserAppEntitlementOwnershipByAppId
$CLI_EXE \
    --sn platform \
    --op GetUserAppEntitlementOwnershipByAppId \
    --namespace $AB_NAMESPACE \
    --userId 'EHLZKkpZ' \
    --appId '8XZ1JgAj' \
    > test.out 2>&1
eval_tap $? 248 'GetUserAppEntitlementOwnershipByAppId' test.out

#- 249 GetUserEntitlementOwnershipByItemId
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementOwnershipByItemId \
    --namespace $AB_NAMESPACE \
    --userId 't1L5LZ82' \
    --entitlementClazz 'ENTITLEMENT' \
    --platform '0Y7wmeS2' \
    --itemId 'Y7u0zNdB' \
    > test.out 2>&1
eval_tap $? 249 'GetUserEntitlementOwnershipByItemId' test.out

#- 250 GetUserEntitlementOwnershipByItemIds
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementOwnershipByItemIds \
    --namespace $AB_NAMESPACE \
    --userId 'zaKMmXFu' \
    --ids '["SnDffLPH", "hvNhs2Fx", "rQEwihDl"]' \
    --platform 'AIYm8iVR' \
    > test.out 2>&1
eval_tap $? 250 'GetUserEntitlementOwnershipByItemIds' test.out

#- 251 GetUserEntitlementOwnershipBySku
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementOwnershipBySku \
    --namespace $AB_NAMESPACE \
    --userId '5MQLjPhF' \
    --entitlementClazz 'LOOTBOX' \
    --platform '4mgzGEVF' \
    --sku 'dQBJxzUI' \
    > test.out 2>&1
eval_tap $? 251 'GetUserEntitlementOwnershipBySku' test.out

#- 252 RevokeAllEntitlements
$CLI_EXE \
    --sn platform \
    --op RevokeAllEntitlements \
    --namespace $AB_NAMESPACE \
    --userId 'I1e9vPB0' \
    > test.out 2>&1
eval_tap $? 252 'RevokeAllEntitlements' test.out

#- 253 RevokeUserEntitlements
$CLI_EXE \
    --sn platform \
    --op RevokeUserEntitlements \
    --namespace $AB_NAMESPACE \
    --userId 'qZOLOIPn' \
    --entitlementIds 'dWWomuiG' \
    > test.out 2>&1
eval_tap $? 253 'RevokeUserEntitlements' test.out

#- 254 GetUserEntitlement
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlement \
    --entitlementId 'pfve7A4X' \
    --namespace $AB_NAMESPACE \
    --userId 'cxSBRDK5' \
    > test.out 2>&1
eval_tap $? 254 'GetUserEntitlement' test.out

#- 255 UpdateUserEntitlement
# body param: body
echo '{"collectionId": "g1sVKpme", "endDate": "1980-05-30T00:00:00Z", "nullFieldList": ["6jLUUOE3", "6XyBoJha", "g7uhZod5"], "origin": "Twitch", "reason": "a2ZxctlM", "startDate": "1987-12-15T00:00:00Z", "status": "CONSUMED", "useCount": 87}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateUserEntitlement \
    --entitlementId 'SjkXjHHN' \
    --namespace $AB_NAMESPACE \
    --userId 'lHVrl42H' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 255 'UpdateUserEntitlement' test.out

#- 256 ConsumeUserEntitlement
# body param: body
echo '{"options": ["VpaxNEFl", "DQRuKxGL", "CjR8F7z3"], "platform": "wfydta4w", "requestId": "vDcV1gvG", "useCount": 80}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ConsumeUserEntitlement \
    --entitlementId 'M7Dcp9G2' \
    --namespace $AB_NAMESPACE \
    --userId 'Ae6qKrpY' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 256 'ConsumeUserEntitlement' test.out

#- 257 DisableUserEntitlement
$CLI_EXE \
    --sn platform \
    --op DisableUserEntitlement \
    --entitlementId '7ld2lYKd' \
    --namespace $AB_NAMESPACE \
    --userId 'RCTJ6xOo' \
    > test.out 2>&1
eval_tap $? 257 'DisableUserEntitlement' test.out

#- 258 EnableUserEntitlement
$CLI_EXE \
    --sn platform \
    --op EnableUserEntitlement \
    --entitlementId 'f7TmmJj7' \
    --namespace $AB_NAMESPACE \
    --userId '5VR1UW8i' \
    > test.out 2>&1
eval_tap $? 258 'EnableUserEntitlement' test.out

#- 259 GetUserEntitlementHistories
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementHistories \
    --entitlementId 'KCPQFt5u' \
    --namespace $AB_NAMESPACE \
    --userId 'EIDSxzbW' \
    > test.out 2>&1
eval_tap $? 259 'GetUserEntitlementHistories' test.out

#- 260 RevokeUserEntitlement
$CLI_EXE \
    --sn platform \
    --op RevokeUserEntitlement \
    --entitlementId 'g9PREn9r' \
    --namespace $AB_NAMESPACE \
    --userId '7ok9bihI' \
    > test.out 2>&1
eval_tap $? 260 'RevokeUserEntitlement' test.out

#- 261 RevokeUserEntitlementByUseCount
# body param: body
echo '{"reason": "VdOElmdw", "useCount": 30}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RevokeUserEntitlementByUseCount \
    --entitlementId 'TEOD2PwA' \
    --namespace $AB_NAMESPACE \
    --userId '3mPHblWz' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 261 'RevokeUserEntitlementByUseCount' test.out

#- 262 PreCheckRevokeUserEntitlementByUseCount
$CLI_EXE \
    --sn platform \
    --op PreCheckRevokeUserEntitlementByUseCount \
    --entitlementId 'QMedB7yx' \
    --namespace $AB_NAMESPACE \
    --userId 'ozwM8lqT' \
    --quantity '46' \
    > test.out 2>&1
eval_tap $? 262 'PreCheckRevokeUserEntitlementByUseCount' test.out

#- 263 RevokeUseCount
eval_tap 0 263 'RevokeUseCount # SKIP deprecated' test.out

#- 264 SellUserEntitlement
# body param: body
echo '{"platform": "RMrh06vF", "requestId": "nvy5b7m9", "useCount": 84}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SellUserEntitlement \
    --entitlementId 'FZ5tihyC' \
    --namespace $AB_NAMESPACE \
    --userId 'tZ14wWql' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 264 'SellUserEntitlement' test.out

#- 265 FulfillItem
# body param: body
echo '{"duration": 97, "endDate": "1994-07-04T00:00:00Z", "entitlementCollectionId": "2T2IW9MX", "entitlementOrigin": "Oculus", "itemId": "OATknZ2X", "itemSku": "KAzW0xTe", "language": "vNvsLnBQ", "metadata": {"2Fs99suV": {}, "s6bzGfz2": {}, "W9TFlzaf": {}}, "order": {"currency": {"currencyCode": "23Dz2BpY", "currencySymbol": "oQR2YuhH", "currencyType": "REAL", "decimals": 44, "namespace": "2ecoegrI"}, "ext": {"16uiGYYN": {}, "pgdcig5W": {}, "HaPwDdLv": {}}, "free": false}, "orderNo": "G41Ga3CK", "origin": "Steam", "overrideBundleItemQty": {"ezxYfmPl": 24, "hoaQlD2Q": 53, "dlUMFKhR": 39}, "quantity": 82, "region": "7G73iDrt", "source": "EXPIRATION", "startDate": "1993-05-08T00:00:00Z", "storeId": "4mU4TRLQ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op FulfillItem \
    --namespace $AB_NAMESPACE \
    --userId 'qBuToDbM' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 265 'FulfillItem' test.out

#- 266 RedeemCode
# body param: body
echo '{"code": "cObc53Fe", "language": "KTe_KnSY", "region": "eAAdr6AK"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RedeemCode \
    --namespace $AB_NAMESPACE \
    --userId '9ZkbNk4E' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 266 'RedeemCode' test.out

#- 267 PreCheckFulfillItem
# body param: body
echo '{"itemId": "1cgNF5Ei", "itemSku": "liF4Xtsk", "quantity": 42}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PreCheckFulfillItem \
    --namespace $AB_NAMESPACE \
    --userId 'MeFqOZzm' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 267 'PreCheckFulfillItem' test.out

#- 268 FulfillRewards
# body param: body
echo '{"entitlementCollectionId": "knDYgeiS", "entitlementOrigin": "Steam", "metadata": {"tQEGt8dG": {}, "4dau8w81": {}, "ZM3k6xy9": {}}, "origin": "Playstation", "rewards": [{"currency": {"currencyCode": "wOdji5lh", "namespace": "Tp7rQvMF"}, "item": {"itemId": "7J7A44Cw", "itemSku": "bPCT93KB", "itemType": "fepfDjqA"}, "quantity": 69, "type": "CURRENCY"}, {"currency": {"currencyCode": "PztRasBA", "namespace": "QnqgtDzu"}, "item": {"itemId": "Oc832c1z", "itemSku": "L9fYCXQ5", "itemType": "0GsoyY7I"}, "quantity": 88, "type": "ITEM"}, {"currency": {"currencyCode": "G3zqshRa", "namespace": "aJ9RgLgH"}, "item": {"itemId": "dyDVPyK7", "itemSku": "dzPRwelg", "itemType": "sEUnQMls"}, "quantity": 100, "type": "CURRENCY"}], "source": "IAP_CHARGEBACK_REVERSED", "transactionId": "6V5rNXJA"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op FulfillRewards \
    --namespace $AB_NAMESPACE \
    --userId 'sWxjL7lm' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 268 'FulfillRewards' test.out

#- 269 QueryUserIAPOrders
$CLI_EXE \
    --sn platform \
    --op QueryUserIAPOrders \
    --namespace $AB_NAMESPACE \
    --userId 'QweyU1Ur' \
    --endTime 'YHnOJlyd' \
    --limit '83' \
    --offset '29' \
    --productId 'qoH564Ov' \
    --startTime 'a75y5Bnr' \
    --status 'FAILED' \
    --type 'APPLE' \
    > test.out 2>&1
eval_tap $? 269 'QueryUserIAPOrders' test.out

#- 270 QueryAllUserIAPOrders
$CLI_EXE \
    --sn platform \
    --op QueryAllUserIAPOrders \
    --namespace $AB_NAMESPACE \
    --userId 'l9l9DMnD' \
    > test.out 2>&1
eval_tap $? 270 'QueryAllUserIAPOrders' test.out

#- 271 QueryUserIAPConsumeHistory
$CLI_EXE \
    --sn platform \
    --op QueryUserIAPConsumeHistory \
    --namespace $AB_NAMESPACE \
    --userId 'FbQibSF9' \
    --endTime 'y1VxM7ia' \
    --limit '17' \
    --offset '49' \
    --startTime 'QwGwQVne' \
    --status 'SUCCESS' \
    --type 'APPLE' \
    > test.out 2>&1
eval_tap $? 271 'QueryUserIAPConsumeHistory' test.out

#- 272 MockFulfillIAPItem
# body param: body
echo '{"itemIdentityType": "ITEM_ID", "language": "vXj", "productId": "lA6PVCw4", "region": "fUB4sRY4", "transactionId": "Ncio9aSQ", "type": "TWITCH"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op MockFulfillIAPItem \
    --namespace $AB_NAMESPACE \
    --userId 'QNvccaMs' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 272 'MockFulfillIAPItem' test.out

#- 273 QueryUserOrders
$CLI_EXE \
    --sn platform \
    --op QueryUserOrders \
    --namespace $AB_NAMESPACE \
    --userId '5kBaewkf' \
    --discounted 'false' \
    --itemId 'CactmdFn' \
    --limit '51' \
    --offset '69' \
    --status 'CHARGED' \
    > test.out 2>&1
eval_tap $? 273 'QueryUserOrders' test.out

#- 274 AdminCreateUserOrder
# body param: body
echo '{"currencyCode": "5p5N3Pkg", "currencyNamespace": "7rbqpMZR", "discountCodes": ["DkPHWnvh", "sz9IFFwU", "biEW2tTl"], "discountedPrice": 67, "entitlementPlatform": "Steam", "ext": {"JceuIkF4": {}, "II1gWTJP": {}, "DBEFEWUH": {}}, "itemId": "wtgPoQQs", "language": "iE8zFxmi", "options": {"skipPriceValidation": false}, "platform": "Xbox", "price": 79, "quantity": 58, "region": "rdQONo1Y", "returnUrl": "lkISL2Bk", "sandbox": true, "sectionId": "jfNBWpRK"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op AdminCreateUserOrder \
    --namespace $AB_NAMESPACE \
    --userId 'T0P9ZdKc' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 274 'AdminCreateUserOrder' test.out

#- 275 CountOfPurchasedItem
$CLI_EXE \
    --sn platform \
    --op CountOfPurchasedItem \
    --namespace $AB_NAMESPACE \
    --userId '6rK0xdRZ' \
    --itemId 'r7paszfG' \
    > test.out 2>&1
eval_tap $? 275 'CountOfPurchasedItem' test.out

#- 276 GetUserOrder
$CLI_EXE \
    --sn platform \
    --op GetUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo '5LC7O8TU' \
    --userId 'Vdb0yfXW' \
    > test.out 2>&1
eval_tap $? 276 'GetUserOrder' test.out

#- 277 UpdateUserOrderStatus
# body param: body
echo '{"status": "CLOSED", "statusReason": "eJ4P4NwE"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateUserOrderStatus \
    --namespace $AB_NAMESPACE \
    --orderNo 'vr5pWCDA' \
    --userId 'LAKbx9pr' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 277 'UpdateUserOrderStatus' test.out

#- 278 FulfillUserOrder
$CLI_EXE \
    --sn platform \
    --op FulfillUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'xE8FgRhN' \
    --userId 'Udi49Hw1' \
    > test.out 2>&1
eval_tap $? 278 'FulfillUserOrder' test.out

#- 279 GetUserOrderGrant
eval_tap 0 279 'GetUserOrderGrant # SKIP deprecated' test.out

#- 280 GetUserOrderHistories
$CLI_EXE \
    --sn platform \
    --op GetUserOrderHistories \
    --namespace $AB_NAMESPACE \
    --orderNo 'MhGHvxmc' \
    --userId 'oToqncMt' \
    > test.out 2>&1
eval_tap $? 280 'GetUserOrderHistories' test.out

#- 281 ProcessUserOrderNotification
# body param: body
echo '{"additionalData": {"cardSummary": "FWtpf0Oj"}, "authorisedTime": "1986-11-06T00:00:00Z", "chargebackReversedTime": "1985-11-09T00:00:00Z", "chargebackTime": "1986-05-30T00:00:00Z", "chargedTime": "1989-10-18T00:00:00Z", "createdTime": "1992-05-14T00:00:00Z", "currency": {"currencyCode": "vtLh2gqX", "currencySymbol": "p1HetDUI", "currencyType": "REAL", "decimals": 45, "namespace": "mEgLp0So"}, "customParameters": {"E5IY0auL": {}, "MP0YhjT9": {}, "VSwWXlAQ": {}}, "extOrderNo": "f9t5dg8t", "extTxId": "BLfALquq", "extUserId": "dlcro5vk", "issuedAt": "1983-07-27T00:00:00Z", "metadata": {"PpezqyO5": "2jEaFPxP", "sdpZQTYG": "o1C0QxqJ", "Pr05n025": "1AcMWSUP"}, "namespace": "CosbfDgy", "nonceStr": "oefWhxGz", "paymentData": {"subtotalPrice": 75, "tax": 60, "totalPrice": 6}, "paymentMethod": "GAL9sZxh", "paymentMethodFee": 77, "paymentOrderNo": "jy7M69D8", "paymentProvider": "ALIPAY", "paymentProviderFee": 76, "paymentStationUrl": "3EdJG3C5", "price": 53, "refundedTime": "1995-12-14T00:00:00Z", "salesTax": 37, "sandbox": false, "sku": "57ZUHbjd", "status": "DELETED", "statusReason": "sb0V7fXB", "subscriptionId": "SBKIozVy", "subtotalPrice": 17, "targetNamespace": "5OgL3yKp", "targetUserId": "LD57f00Y", "tax": 37, "totalPrice": 87, "totalTax": 96, "txEndTime": "1983-07-07T00:00:00Z", "type": "Dyt12q93", "userId": "XaAa9SCf", "vat": 55}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ProcessUserOrderNotification \
    --namespace $AB_NAMESPACE \
    --orderNo 'vUZvipHq' \
    --userId 'PSlCDFar' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 281 'ProcessUserOrderNotification' test.out

#- 282 DownloadUserOrderReceipt
$CLI_EXE \
    --sn platform \
    --op DownloadUserOrderReceipt \
    --namespace $AB_NAMESPACE \
    --orderNo 'sWygcCnj' \
    --userId 'F8Grc3on' \
    > test.out 2>&1
eval_tap $? 282 'DownloadUserOrderReceipt' test.out

#- 283 CreateUserPaymentOrder
# body param: body
echo '{"currencyCode": "maNyJGMU", "currencyNamespace": "RkFAXCaM", "customParameters": {"vs8n5YJP": {}, "voOnRQdd": {}, "i8GQnU1Q": {}}, "description": "7B3uCSH3", "extOrderNo": "Xu8GbcfE", "extUserId": "e0QMj397", "itemType": "SEASON", "language": "CXtP", "metadata": {"BiQqrOrV": "IJNPtoQx", "6fvU0tBA": "GDEGhE7k", "L90KgjEB": "U2UnNTbG"}, "notifyUrl": "1pfzOaRE", "omitNotification": true, "platform": "HrTOHB6E", "price": 41, "recurringPaymentOrderNo": "B8fIPBsH", "region": "E7rviegD", "returnUrl": "XiGpd9U0", "sandbox": false, "sku": "yW8gtFFW", "subscriptionId": "O7tcSP8X", "title": "73ocfY9r"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateUserPaymentOrder \
    --namespace $AB_NAMESPACE \
    --userId 'G6x05dWJ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 283 'CreateUserPaymentOrder' test.out

#- 284 RefundUserPaymentOrder
# body param: body
echo '{"description": "JcKs3MUt"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RefundUserPaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'SMWAVvl6' \
    --userId 'crGnWa76' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 284 'RefundUserPaymentOrder' test.out

#- 285 GetUserPlatformAccountClosureHistories
$CLI_EXE \
    --sn platform \
    --op GetUserPlatformAccountClosureHistories \
    --namespace $AB_NAMESPACE \
    --userId 'mjbXf02z' \
    > test.out 2>&1
eval_tap $? 285 'GetUserPlatformAccountClosureHistories' test.out

#- 286 ApplyUserRedemption
# body param: body
echo '{"code": "jHrBBgFf", "orderNo": "mwQSX0b7"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ApplyUserRedemption \
    --namespace $AB_NAMESPACE \
    --userId '2YsUu32k' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 286 'ApplyUserRedemption' test.out

#- 287 DoRevocation
# body param: body
echo '{"meta": {"FxdkD3bL": {}, "NldTLWxi": {}, "FLUeVju0": {}}, "revokeEntries": [{"currency": {"balanceOrigin": "Epic", "currencyCode": "AOpI9ZH8", "namespace": "LENk9aGP"}, "entitlement": {"entitlementId": "BmY3ZTLw"}, "item": {"entitlementOrigin": "Oculus", "itemIdentity": "AIPR5Xh9", "itemIdentityType": "ITEM_SKU", "origin": "Oculus"}, "quantity": 1, "type": "ITEM"}, {"currency": {"balanceOrigin": "Twitch", "currencyCode": "2wPdRP14", "namespace": "8Hh8u1h7"}, "entitlement": {"entitlementId": "Qh9d0e08"}, "item": {"entitlementOrigin": "Twitch", "itemIdentity": "xRKZ95Kb", "itemIdentityType": "ITEM_ID", "origin": "IOS"}, "quantity": 85, "type": "ITEM"}, {"currency": {"balanceOrigin": "IOS", "currencyCode": "wpUvf5dE", "namespace": "jlacumFH"}, "entitlement": {"entitlementId": "QL3nmxMz"}, "item": {"entitlementOrigin": "Playstation", "itemIdentity": "R5NNkTaG", "itemIdentityType": "ITEM_SKU", "origin": "Playstation"}, "quantity": 47, "type": "CURRENCY"}], "source": "ORDER", "transactionId": "VmMQA2cE"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op DoRevocation \
    --namespace $AB_NAMESPACE \
    --userId 'kb83Qzeb' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 287 'DoRevocation' test.out

#- 288 RegisterXblSessions
# body param: body
echo '{"gameSessionId": "rkKpDUlJ", "payload": {"RTfPpGkn": {}, "wxstp9du": {}, "cAlCe0Ka": {}}, "scid": "QD6FxMUb", "sessionTemplateName": "DQtNCdIk"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RegisterXblSessions \
    --namespace $AB_NAMESPACE \
    --userId 't88ocbGm' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 288 'RegisterXblSessions' test.out

#- 289 QueryUserSubscriptions
$CLI_EXE \
    --sn platform \
    --op QueryUserSubscriptions \
    --namespace $AB_NAMESPACE \
    --userId 'ynYrjAhu' \
    --chargeStatus 'CHARGE_FAILED' \
    --itemId 'jGPVvJha' \
    --limit '84' \
    --offset '66' \
    --sku 'tFufaYFw' \
    --status 'INIT' \
    --subscribedBy 'PLATFORM' \
    > test.out 2>&1
eval_tap $? 289 'QueryUserSubscriptions' test.out

#- 290 GetUserSubscriptionActivities
$CLI_EXE \
    --sn platform \
    --op GetUserSubscriptionActivities \
    --namespace $AB_NAMESPACE \
    --userId 'wMPhANA0' \
    --excludeSystem 'false' \
    --limit '77' \
    --offset '97' \
    --subscriptionId 'QpD1qexc' \
    > test.out 2>&1
eval_tap $? 290 'GetUserSubscriptionActivities' test.out

#- 291 PlatformSubscribeSubscription
# body param: body
echo '{"grantDays": 5, "itemId": "msSY527P", "language": "QJDDwYig", "reason": "mNOjoK9c", "region": "yu67o1aL", "source": "2a06qkyd"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PlatformSubscribeSubscription \
    --namespace $AB_NAMESPACE \
    --userId 'Fc1hhq9Z' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 291 'PlatformSubscribeSubscription' test.out

#- 292 CheckUserSubscriptionSubscribableByItemId
$CLI_EXE \
    --sn platform \
    --op CheckUserSubscriptionSubscribableByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'YcYpwPGR' \
    --itemId 'NTDyKYQU' \
    > test.out 2>&1
eval_tap $? 292 'CheckUserSubscriptionSubscribableByItemId' test.out

#- 293 GetUserSubscription
$CLI_EXE \
    --sn platform \
    --op GetUserSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'GB0RhejH' \
    --userId 'hR3M1EUV' \
    > test.out 2>&1
eval_tap $? 293 'GetUserSubscription' test.out

#- 294 DeleteUserSubscription
$CLI_EXE \
    --sn platform \
    --op DeleteUserSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId '9tcQL4Co' \
    --userId 'CuupJP8S' \
    > test.out 2>&1
eval_tap $? 294 'DeleteUserSubscription' test.out

#- 295 CancelSubscription
# body param: body
echo '{"immediate": true, "reason": "XsHH5wzQ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CancelSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId '2XTC0ljf' \
    --userId 'lOg7Y9Nk' \
    --force 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 295 'CancelSubscription' test.out

#- 296 GrantDaysToSubscription
# body param: body
echo '{"grantDays": 54, "reason": "1xPDeGY3"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op GrantDaysToSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'VMY9QUpY' \
    --userId '6pamNHuZ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 296 'GrantDaysToSubscription' test.out

#- 297 GetUserSubscriptionBillingHistories
$CLI_EXE \
    --sn platform \
    --op GetUserSubscriptionBillingHistories \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'wc92QmHj' \
    --userId 'iHNOHb06' \
    --excludeFree 'true' \
    --limit '38' \
    --offset '45' \
    > test.out 2>&1
eval_tap $? 297 'GetUserSubscriptionBillingHistories' test.out

#- 298 ProcessUserSubscriptionNotification
# body param: body
echo '{"additionalData": {"cardSummary": "IjoCq10Z"}, "authorisedTime": "1998-10-21T00:00:00Z", "chargebackReversedTime": "1988-11-11T00:00:00Z", "chargebackTime": "1984-05-06T00:00:00Z", "chargedTime": "1987-01-22T00:00:00Z", "createdTime": "1979-03-24T00:00:00Z", "currency": {"currencyCode": "zTGwEffy", "currencySymbol": "RiWGCM6D", "currencyType": "REAL", "decimals": 68, "namespace": "VBqZ7ABV"}, "customParameters": {"ZSy6Oelf": {}, "MZltWQKi": {}, "oqyMHAoF": {}}, "extOrderNo": "GVPnQb8u", "extTxId": "MKCAUWpJ", "extUserId": "A0nysOZe", "issuedAt": "1990-12-03T00:00:00Z", "metadata": {"zt0wAfdI": "J7yMfODX", "ofAj2Hur": "0hwoa3l5", "tRjxOHk2": "hHHQWGwk"}, "namespace": "Uhjst47f", "nonceStr": "G8xKyiDR", "paymentData": {"subtotalPrice": 67, "tax": 100, "totalPrice": 3}, "paymentMethod": "6zblqUuV", "paymentMethodFee": 23, "paymentOrderNo": "DKF2SFte", "paymentProvider": "WALLET", "paymentProviderFee": 25, "paymentStationUrl": "yjFAMUpf", "price": 92, "refundedTime": "1974-08-20T00:00:00Z", "salesTax": 39, "sandbox": false, "sku": "sEFNhsVe", "status": "REFUNDED", "statusReason": "6yFzhjCo", "subscriptionId": "QNKsxED0", "subtotalPrice": 48, "targetNamespace": "QD1rhvsi", "targetUserId": "KVNxWxiY", "tax": 30, "totalPrice": 44, "totalTax": 59, "txEndTime": "1977-04-17T00:00:00Z", "type": "xJ5RRKOT", "userId": "2N5uRpBK", "vat": 48}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ProcessUserSubscriptionNotification \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'NmZKKcdk' \
    --userId 'Gfa0M82x' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 298 'ProcessUserSubscriptionNotification' test.out

#- 299 AcquireUserTicket
# body param: body
echo '{"count": 16, "orderNo": "1UW7oE0o"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op AcquireUserTicket \
    --boothName 'Oj7Dtx3B' \
    --namespace $AB_NAMESPACE \
    --userId 'cW0PYAVs' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 299 'AcquireUserTicket' test.out

#- 300 QueryUserCurrencyWallets
$CLI_EXE \
    --sn platform \
    --op QueryUserCurrencyWallets \
    --namespace $AB_NAMESPACE \
    --userId 'E6Q4V2IV' \
    > test.out 2>&1
eval_tap $? 300 'QueryUserCurrencyWallets' test.out

#- 301 DebitUserWalletByCurrencyCode
# body param: body
echo '{"allowOverdraft": false, "amount": 60, "balanceOrigin": "Xbox", "balanceSource": "TRADE", "metadata": {"l4L0cwss": {}, "TzDLmCD3": {}, "rjW1P96O": {}}, "reason": "vVsqXl44"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op DebitUserWalletByCurrencyCode \
    --currencyCode 'C6eztWUf' \
    --namespace $AB_NAMESPACE \
    --userId 'VqsGcmzU' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 301 'DebitUserWalletByCurrencyCode' test.out

#- 302 ListUserCurrencyTransactions
$CLI_EXE \
    --sn platform \
    --op ListUserCurrencyTransactions \
    --currencyCode 'LBh7Isfn' \
    --namespace $AB_NAMESPACE \
    --userId 'PZU19sYP' \
    --limit '22' \
    --offset '34' \
    > test.out 2>&1
eval_tap $? 302 'ListUserCurrencyTransactions' test.out

#- 303 CheckBalance
# body param: request
echo '{"amount": 49, "debitBalanceSource": "OTHER", "metadata": {"k9kSwrRj": {}, "rT1nVH2C": {}, "meRWaG5n": {}}, "reason": "c6ux2Wyv", "walletPlatform": "GooglePlay"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CheckBalance \
    --currencyCode 'P5KGSkiu' \
    --namespace $AB_NAMESPACE \
    --userId 'maUFumNL' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 303 'CheckBalance' test.out

#- 304 CheckWallet
eval_tap 0 304 'CheckWallet # SKIP deprecated' test.out

#- 305 CreditUserWallet
# body param: body
echo '{"amount": 31, "expireAt": "1997-06-21T00:00:00Z", "metadata": {"63Qj5HCS": {}, "TXPTVLTY": {}, "aTVAMAwU": {}}, "origin": "Epic", "reason": "Q9YhfTDM", "source": "SELL_BACK"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreditUserWallet \
    --currencyCode '949PiUdl' \
    --namespace $AB_NAMESPACE \
    --userId 'kUZDKsjD' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 305 'CreditUserWallet' test.out

#- 306 DebitByWalletPlatform
# body param: request
echo '{"amount": 100, "debitBalanceSource": "IAP_REVOCATION", "metadata": {"FKCyoimr": {}, "1BvADmHt": {}, "M8JLLXMa": {}}, "reason": "TYQaX2IP", "walletPlatform": "Other"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op DebitByWalletPlatform \
    --currencyCode '2WDnGACX' \
    --namespace $AB_NAMESPACE \
    --userId '19vIPXo0' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 306 'DebitByWalletPlatform' test.out

#- 307 PayWithUserWallet
# body param: body
echo '{"amount": 6, "metadata": {"qDb9oQVC": {}, "fW8Sjd7O": {}, "xqvBToIG": {}}, "walletPlatform": "Epic"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PayWithUserWallet \
    --currencyCode 'vJwfgZml' \
    --namespace $AB_NAMESPACE \
    --userId '7zFrw03w' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 307 'PayWithUserWallet' test.out

#- 308 GetUserWallet
eval_tap 0 308 'GetUserWallet # SKIP deprecated' test.out

#- 309 DebitUserWallet
eval_tap 0 309 'DebitUserWallet # SKIP deprecated' test.out

#- 310 DisableUserWallet
eval_tap 0 310 'DisableUserWallet # SKIP deprecated' test.out

#- 311 EnableUserWallet
eval_tap 0 311 'EnableUserWallet # SKIP deprecated' test.out

#- 312 ListUserWalletTransactions
eval_tap 0 312 'ListUserWalletTransactions # SKIP deprecated' test.out

#- 313 ListViews
$CLI_EXE \
    --sn platform \
    --op ListViews \
    --namespace $AB_NAMESPACE \
    --storeId 'z9ikq3Of' \
    > test.out 2>&1
eval_tap $? 313 'ListViews' test.out

#- 314 CreateView
# body param: body
echo '{"displayOrder": 76, "localizations": {"YRZxZWSf": {"description": "e7cTvXlE", "localExt": {"cJHBRGGL": {}, "enW7cddX": {}, "fiToo1k6": {}}, "longDescription": "HQWVPxem", "title": "Mhw6X2BL"}, "PzlAx1zZ": {"description": "c1ApQ7Gg", "localExt": {"hY0stpmV": {}, "AuZhU2LO": {}, "ihvU5DO5": {}}, "longDescription": "XXadbksv", "title": "duzVt2is"}, "lkixiuSS": {"description": "UbwmPbg9", "localExt": {"GSin237N": {}, "9oDfIb3U": {}, "4eSsWbxg": {}}, "longDescription": "KAJ27QEL", "title": "p2kdYlgb"}}, "name": "VSs69g76"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateView \
    --namespace $AB_NAMESPACE \
    --storeId '1N5fBsgM' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 314 'CreateView' test.out

#- 315 GetView
$CLI_EXE \
    --sn platform \
    --op GetView \
    --namespace $AB_NAMESPACE \
    --viewId 'A8wpUY3o' \
    --storeId 'GfUT1j0z' \
    > test.out 2>&1
eval_tap $? 315 'GetView' test.out

#- 316 UpdateView
# body param: body
echo '{"displayOrder": 61, "localizations": {"g06r0JGF": {"description": "eVteRZ6C", "localExt": {"RoU30yJ9": {}, "8U7Vfee7": {}, "H7sFQZWk": {}}, "longDescription": "DWyAmmXu", "title": "SBwBZsbR"}, "uKKmOPCF": {"description": "F03gKszx", "localExt": {"f24tAiLF": {}, "fnuVKra6": {}, "yOwlZHDC": {}}, "longDescription": "Ghe9MaKz", "title": "rIYczcw2"}, "Hyx7Xhlc": {"description": "z9igU7E5", "localExt": {"EECKWUMr": {}, "7CfmfOD9": {}, "XsyuSy63": {}}, "longDescription": "ECsiqsjC", "title": "OYkfxo1I"}}, "name": "Kt0ge7PL"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateView \
    --namespace $AB_NAMESPACE \
    --viewId 'lyyngUjH' \
    --storeId 'BSfFQelm' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 316 'UpdateView' test.out

#- 317 DeleteView
$CLI_EXE \
    --sn platform \
    --op DeleteView \
    --namespace $AB_NAMESPACE \
    --viewId 'kdxZRiym' \
    --storeId '7zGdm3l1' \
    > test.out 2>&1
eval_tap $? 317 'DeleteView' test.out

#- 318 QueryWallets
eval_tap 0 318 'QueryWallets # SKIP deprecated' test.out

#- 319 BulkCredit
# body param: body
echo '[{"creditRequest": {"amount": 4, "expireAt": "1983-09-13T00:00:00Z", "metadata": {"NjCDuBS8": {}, "D8qXN4JP": {}, "0kF1kW9S": {}}, "origin": "Steam", "reason": "pfZxirk3", "source": "IAP"}, "currencyCode": "0VgU9SYE", "userIds": ["SuH1Pwe0", "8gTqHZXl", "KFF9V6YR"]}, {"creditRequest": {"amount": 58, "expireAt": "1989-02-26T00:00:00Z", "metadata": {"nQBFsdVf": {}, "iubNeQF1": {}, "ti7rpVUw": {}}, "origin": "System", "reason": "xJYhvhjJ", "source": "REFERRAL_BONUS"}, "currencyCode": "ifW2T1Yb", "userIds": ["BHDemj5U", "ZQ0oV1b4", "8n5NivVk"]}, {"creditRequest": {"amount": 3, "expireAt": "1974-10-30T00:00:00Z", "metadata": {"eyV47Pn2": {}, "nj7vgle6": {}, "GAT06dKN": {}}, "origin": "Steam", "reason": "KKUdkvcK", "source": "REWARD"}, "currencyCode": "L4kIUWiF", "userIds": ["gAzIdpor", "aMi9bUkD", "y8I46xo3"]}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op BulkCredit \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 319 'BulkCredit' test.out

#- 320 BulkDebit
# body param: body
echo '[{"currencyCode": "yUtZ6qG9", "request": {"allowOverdraft": false, "amount": 17, "balanceOrigin": "System", "balanceSource": "ORDER_REVOCATION", "metadata": {"tVMW3OBG": {}, "U6SvOVMX": {}, "xAZ8ShBL": {}}, "reason": "Ano9DB3S"}, "userIds": ["n8hymDU0", "TVzxUAMZ", "2GvyZLB5"]}, {"currencyCode": "MWPSEZJ5", "request": {"allowOverdraft": false, "amount": 27, "balanceOrigin": "Playstation", "balanceSource": "OTHER", "metadata": {"sTL2bsf0": {}, "8hk2cByD": {}, "GauQGRX5": {}}, "reason": "qg0T6AiJ"}, "userIds": ["xSKgBen0", "nol8Da5n", "VC5ss4Kh"]}, {"currencyCode": "y0Xdw6rE", "request": {"allowOverdraft": true, "amount": 11, "balanceOrigin": "Other", "balanceSource": "PAYMENT", "metadata": {"s1Ggwlki": {}, "SXpOyLlT": {}, "mOr0fBxS": {}}, "reason": "fIvL4stE"}, "userIds": ["lTrpqrc0", "4AJGi7Xw", "WFp8hU4Z"]}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op BulkDebit \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 320 'BulkDebit' test.out

#- 321 GetWallet
eval_tap 0 321 'GetWallet # SKIP deprecated' test.out

#- 322 SyncOrders
$CLI_EXE \
    --sn platform \
    --op SyncOrders \
    --nextEvaluatedKey 'OYHe1Qua' \
    --end 'aOLtWXEi' \
    --start 'x2hV28vg' \
    > test.out 2>&1
eval_tap $? 322 'SyncOrders' test.out

#- 323 TestAdyenConfig
# body param: body
echo '{"allowedPaymentMethods": ["udMhcv4T", "oBtrmO6z", "ZLBJx2CC"], "apiKey": "bRnZSL2C", "authoriseAsCapture": false, "blockedPaymentMethods": ["jDaDWMJo", "9AZGqOz8", "28zA8HCC"], "clientKey": "x7LmOcZT", "dropInSettings": "vGMv1uJ2", "liveEndpointUrlPrefix": "HCRVm4aR", "merchantAccount": "2aY2t3Pl", "notificationHmacKey": "2PUP2okf", "notificationPassword": "cWxm679D", "notificationUsername": "5TN9IWLl", "returnUrl": "TKMNC8Xq", "settings": "7xRR14Tn"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestAdyenConfig \
    --sandbox 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 323 'TestAdyenConfig' test.out

#- 324 TestAliPayConfig
# body param: body
echo '{"appId": "2XAEMPMr", "privateKey": "hl2NXZPf", "publicKey": "W3bITP1j", "returnUrl": "CPIXHdPn"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestAliPayConfig \
    --sandbox 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 324 'TestAliPayConfig' test.out

#- 325 TestCheckoutConfig
# body param: body
echo '{"publicKey": "GsAAFht9", "secretKey": "hkjUjy5q"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestCheckoutConfig \
    --sandbox 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 325 'TestCheckoutConfig' test.out

#- 326 DebugMatchedPaymentMerchantConfig
$CLI_EXE \
    --sn platform \
    --op DebugMatchedPaymentMerchantConfig \
    --namespace_ 'Wr0kjnC0' \
    --region '2Astwtlc' \
    > test.out 2>&1
eval_tap $? 326 'DebugMatchedPaymentMerchantConfig' test.out

#- 327 TestNeonPayConfig
# body param: body
echo '{"apiKey": "aqH88U9p", "webhookSecretKey": "I6mWj2lA"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestNeonPayConfig \
    --sandbox 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 327 'TestNeonPayConfig' test.out

#- 328 TestPayPalConfig
# body param: body
echo '{"clientID": "5RrSngLw", "clientSecret": "En5ssdF4", "returnUrl": "eotoLhAA", "webHookId": "ujlRSL60"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestPayPalConfig \
    --sandbox 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 328 'TestPayPalConfig' test.out

#- 329 TestStripeConfig
# body param: body
echo '{"allowedPaymentMethodTypes": ["uNJGx3dz", "XaKqXXr7", "12BvfU8b"], "publishableKey": "k1ENsz4d", "secretKey": "KqlGWGVo", "webhookSecret": "RZHftK0b"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestStripeConfig \
    --sandbox 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 329 'TestStripeConfig' test.out

#- 330 TestWxPayConfig
# body param: body
echo '{"appId": "KCtF4OSr", "key": "EqS3ed9N", "mchid": "priUjnYV", "returnUrl": "c0VuH9yN"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestWxPayConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 330 'TestWxPayConfig' test.out

#- 331 TestXsollaConfig
# body param: body
echo '{"apiKey": "1BP3fKsH", "flowCompletionUrl": "rbMHlwT0", "merchantId": 39, "projectId": 86, "projectSecretKey": "VSGBBT1W"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestXsollaConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 331 'TestXsollaConfig' test.out

#- 332 GetPaymentMerchantConfig1
$CLI_EXE \
    --sn platform \
    --op GetPaymentMerchantConfig1 \
    --id 'rZ3XCWbN' \
    > test.out 2>&1
eval_tap $? 332 'GetPaymentMerchantConfig1' test.out

#- 333 UpdateAdyenConfig
# body param: body
echo '{"allowedPaymentMethods": ["XUIRN4r2", "65ii6PQO", "crLrpRP0"], "apiKey": "YlLgUECr", "authoriseAsCapture": true, "blockedPaymentMethods": ["h2wM63JV", "x3tRPTxb", "SqbnFy9k"], "clientKey": "JxdI55z9", "dropInSettings": "Ul5DBrLq", "liveEndpointUrlPrefix": "Vymze9O7", "merchantAccount": "KNvMsDMI", "notificationHmacKey": "I0bZWyy8", "notificationPassword": "0rOVJu0d", "notificationUsername": "DkEx9wVx", "returnUrl": "KDSQ4DHB", "settings": "lqGxQDTR"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateAdyenConfig \
    --id 'yYmAoF1Z' \
    --sandbox 'false' \
    --validate 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 333 'UpdateAdyenConfig' test.out

#- 334 TestAdyenConfigById
$CLI_EXE \
    --sn platform \
    --op TestAdyenConfigById \
    --id 'sMK5g8Ga' \
    --sandbox 'false' \
    > test.out 2>&1
eval_tap $? 334 'TestAdyenConfigById' test.out

#- 335 UpdateAliPayConfig
# body param: body
echo '{"appId": "E0NIvJfW", "privateKey": "QNSjEwkI", "publicKey": "6e81gZvB", "returnUrl": "KWIiMYEa"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateAliPayConfig \
    --id 'cNRljOrc' \
    --sandbox 'true' \
    --validate 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 335 'UpdateAliPayConfig' test.out

#- 336 TestAliPayConfigById
$CLI_EXE \
    --sn platform \
    --op TestAliPayConfigById \
    --id 'hQOt29jp' \
    --sandbox 'false' \
    > test.out 2>&1
eval_tap $? 336 'TestAliPayConfigById' test.out

#- 337 UpdateCheckoutConfig
# body param: body
echo '{"publicKey": "jwWQIM3k", "secretKey": "HixdFmRB"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCheckoutConfig \
    --id 'YF3mmb8c' \
    --sandbox 'false' \
    --validate 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 337 'UpdateCheckoutConfig' test.out

#- 338 TestCheckoutConfigById
$CLI_EXE \
    --sn platform \
    --op TestCheckoutConfigById \
    --id 'QLjzco5I' \
    --sandbox 'false' \
    > test.out 2>&1
eval_tap $? 338 'TestCheckoutConfigById' test.out

#- 339 UpdateNeonPayConfig
# body param: body
echo '{"apiKey": "gfSFq72S", "webhookSecretKey": "ks1sjpwM"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateNeonPayConfig \
    --id 'u27IF5ln' \
    --sandbox 'false' \
    --validate 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 339 'UpdateNeonPayConfig' test.out

#- 340 TestNeonPayConfigById
$CLI_EXE \
    --sn platform \
    --op TestNeonPayConfigById \
    --id 'KPgCCYZH' \
    --sandbox 'false' \
    > test.out 2>&1
eval_tap $? 340 'TestNeonPayConfigById' test.out

#- 341 UpdatePayPalConfig
# body param: body
echo '{"clientID": "ll8sbHD4", "clientSecret": "9wkfZbNI", "returnUrl": "plrvqGy1", "webHookId": "486b98JO"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePayPalConfig \
    --id 'Z0ODcY72' \
    --sandbox 'true' \
    --validate 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 341 'UpdatePayPalConfig' test.out

#- 342 TestPayPalConfigById
$CLI_EXE \
    --sn platform \
    --op TestPayPalConfigById \
    --id 'U4iGcaAk' \
    --sandbox 'true' \
    > test.out 2>&1
eval_tap $? 342 'TestPayPalConfigById' test.out

#- 343 UpdateStripeConfig
# body param: body
echo '{"allowedPaymentMethodTypes": ["NUS9aKeu", "wMuoF3Xp", "Nlodb0rE"], "publishableKey": "18Xjp2Ow", "secretKey": "o3EqfPFs", "webhookSecret": "LvFSioJ2"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateStripeConfig \
    --id 'ql5JoPJi' \
    --sandbox 'false' \
    --validate 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 343 'UpdateStripeConfig' test.out

#- 344 TestStripeConfigById
$CLI_EXE \
    --sn platform \
    --op TestStripeConfigById \
    --id '6uBBVq7f' \
    --sandbox 'true' \
    > test.out 2>&1
eval_tap $? 344 'TestStripeConfigById' test.out

#- 345 UpdateWxPayConfig
# body param: body
echo '{"appId": "eTEunh48", "key": "7qbnaAuv", "mchid": "kxcvslBB", "returnUrl": "N538Pb8O"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateWxPayConfig \
    --id 'uehwnmKg' \
    --validate 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 345 'UpdateWxPayConfig' test.out

#- 346 UpdateWxPayConfigCert
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UpdateWxPayConfigCert \
    --id 'DyHnPqVs' \
    --upload file $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 346 'UpdateWxPayConfigCert' test.out

#- 347 TestWxPayConfigById
$CLI_EXE \
    --sn platform \
    --op TestWxPayConfigById \
    --id 'h7gpw3RT' \
    > test.out 2>&1
eval_tap $? 347 'TestWxPayConfigById' test.out

#- 348 UpdateXsollaConfig
# body param: body
echo '{"apiKey": "YkEz1cRR", "flowCompletionUrl": "sLpplrfw", "merchantId": 34, "projectId": 1, "projectSecretKey": "dnuidD3M"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXsollaConfig \
    --id 'MDvhrLtV' \
    --validate 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 348 'UpdateXsollaConfig' test.out

#- 349 TestXsollaConfigById
$CLI_EXE \
    --sn platform \
    --op TestXsollaConfigById \
    --id 'FK54ZJTm' \
    > test.out 2>&1
eval_tap $? 349 'TestXsollaConfigById' test.out

#- 350 UpdateXsollaUIConfig
# body param: body
echo '{"device": "MOBILE", "showCloseButton": true, "size": "MEDIUM", "theme": "DEFAULT_DARK"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXsollaUIConfig \
    --id 'gU1vvtUi' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 350 'UpdateXsollaUIConfig' test.out

#- 351 QueryPaymentProviderConfig
$CLI_EXE \
    --sn platform \
    --op QueryPaymentProviderConfig \
    --limit '53' \
    --namespace_ 'EZX8cvoF' \
    --offset '7' \
    --region '60EuS6tw' \
    > test.out 2>&1
eval_tap $? 351 'QueryPaymentProviderConfig' test.out

#- 352 CreatePaymentProviderConfig
# body param: body
echo '{"aggregate": "ADYEN", "namespace": "hpelpTMS", "region": "gK2sst7L", "sandboxTaxJarApiToken": "tKCEJ88i", "specials": ["ALIPAY", "WXPAY", "WXPAY"], "taxJarApiToken": "Lyk7Vdw0", "taxJarEnabled": true, "useGlobalTaxJarApiToken": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreatePaymentProviderConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 352 'CreatePaymentProviderConfig' test.out

#- 353 GetAggregatePaymentProviders
$CLI_EXE \
    --sn platform \
    --op GetAggregatePaymentProviders \
    > test.out 2>&1
eval_tap $? 353 'GetAggregatePaymentProviders' test.out

#- 354 DebugMatchedPaymentProviderConfig
$CLI_EXE \
    --sn platform \
    --op DebugMatchedPaymentProviderConfig \
    --namespace_ '3EzHQqYa' \
    --region 'piDIgPAN' \
    > test.out 2>&1
eval_tap $? 354 'DebugMatchedPaymentProviderConfig' test.out

#- 355 GetSpecialPaymentProviders
$CLI_EXE \
    --sn platform \
    --op GetSpecialPaymentProviders \
    > test.out 2>&1
eval_tap $? 355 'GetSpecialPaymentProviders' test.out

#- 356 UpdatePaymentProviderConfig
# body param: body
echo '{"aggregate": "XSOLLA", "namespace": "pxAzvhQQ", "region": "I9AF221Q", "sandboxTaxJarApiToken": "9DJSu84j", "specials": ["ADYEN", "ALIPAY", "ADYEN"], "taxJarApiToken": "hZBjrKER", "taxJarEnabled": false, "useGlobalTaxJarApiToken": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePaymentProviderConfig \
    --id 'A8GKfHAs' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 356 'UpdatePaymentProviderConfig' test.out

#- 357 DeletePaymentProviderConfig
$CLI_EXE \
    --sn platform \
    --op DeletePaymentProviderConfig \
    --id 'xeYQlJvp' \
    > test.out 2>&1
eval_tap $? 357 'DeletePaymentProviderConfig' test.out

#- 358 GetPaymentTaxConfig
$CLI_EXE \
    --sn platform \
    --op GetPaymentTaxConfig \
    > test.out 2>&1
eval_tap $? 358 'GetPaymentTaxConfig' test.out

#- 359 UpdatePaymentTaxConfig
# body param: body
echo '{"sandboxTaxJarApiToken": "xLbSp9v1", "taxJarApiToken": "NwC0W0cT", "taxJarEnabled": false, "taxJarProductCodesMapping": {"0KHKeD2J": "iGD1oTHT", "FrIvtfrJ": "PIM3Rfkm", "dVKNZs1n": "HZBLoa22"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePaymentTaxConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 359 'UpdatePaymentTaxConfig' test.out

#- 360 SyncPaymentOrders
$CLI_EXE \
    --sn platform \
    --op SyncPaymentOrders \
    --nextEvaluatedKey 'ncJBQ1r9' \
    --end 'rDseEOiL' \
    --start 'V3Hp13ak' \
    > test.out 2>&1
eval_tap $? 360 'SyncPaymentOrders' test.out

#- 361 PublicGetRootCategories
$CLI_EXE \
    --sn platform \
    --op PublicGetRootCategories \
    --namespace $AB_NAMESPACE \
    --language 'LsltuTIS' \
    --storeId 'TXNGxUl2' \
    > test.out 2>&1
eval_tap $? 361 'PublicGetRootCategories' test.out

#- 362 DownloadCategories
$CLI_EXE \
    --sn platform \
    --op DownloadCategories \
    --namespace $AB_NAMESPACE \
    --language 'MxCPni9z' \
    --storeId 'mbpq0aEN' \
    > test.out 2>&1
eval_tap $? 362 'DownloadCategories' test.out

#- 363 PublicGetCategory
$CLI_EXE \
    --sn platform \
    --op PublicGetCategory \
    --categoryPath 'XCrZB0Ne' \
    --namespace $AB_NAMESPACE \
    --language '2rhFlg1s' \
    --storeId 'vvxSk0JO' \
    > test.out 2>&1
eval_tap $? 363 'PublicGetCategory' test.out

#- 364 PublicGetChildCategories
$CLI_EXE \
    --sn platform \
    --op PublicGetChildCategories \
    --categoryPath 'plOyOUZS' \
    --namespace $AB_NAMESPACE \
    --language 'km39Ohhs' \
    --storeId 'cfIWDlJZ' \
    > test.out 2>&1
eval_tap $? 364 'PublicGetChildCategories' test.out

#- 365 PublicGetDescendantCategories
$CLI_EXE \
    --sn platform \
    --op PublicGetDescendantCategories \
    --categoryPath 'b5Hykn85' \
    --namespace $AB_NAMESPACE \
    --language 'PUjMP2Ks' \
    --storeId 'z5pEi8Sj' \
    > test.out 2>&1
eval_tap $? 365 'PublicGetDescendantCategories' test.out

#- 366 PublicListCurrencies
$CLI_EXE \
    --sn platform \
    --op PublicListCurrencies \
    --namespace $AB_NAMESPACE \
    --currencyType 'REAL' \
    > test.out 2>&1
eval_tap $? 366 'PublicListCurrencies' test.out

#- 367 GeDLCDurableRewardShortMap
$CLI_EXE \
    --sn platform \
    --op GeDLCDurableRewardShortMap \
    --namespace $AB_NAMESPACE \
    --dlcType 'OCULUS' \
    > test.out 2>&1
eval_tap $? 367 'GeDLCDurableRewardShortMap' test.out

#- 368 GetIAPItemMapping
$CLI_EXE \
    --sn platform \
    --op GetIAPItemMapping \
    --namespace $AB_NAMESPACE \
    --platform 'EPICGAMES' \
    > test.out 2>&1
eval_tap $? 368 'GetIAPItemMapping' test.out

#- 369 PublicGetItemByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetItemByAppId \
    --namespace $AB_NAMESPACE \
    --language 'POsX6dEw' \
    --region 'otGhVRjY' \
    --storeId 'ZszCzhzk' \
    --appId 'xYsYZl6a' \
    > test.out 2>&1
eval_tap $? 369 'PublicGetItemByAppId' test.out

#- 370 PublicQueryItems
$CLI_EXE \
    --sn platform \
    --op PublicQueryItems \
    --namespace $AB_NAMESPACE \
    --appType 'GAME' \
    --autoCalcEstimatedPrice 'false' \
    --baseAppId '202aX7SK' \
    --categoryPath 'XKTuguVK' \
    --features 'kA93wtsF' \
    --includeSubCategoryItem 'true' \
    --itemType 'INGAMEITEM' \
    --language 'Lz6lYLl5' \
    --limit '23' \
    --offset '27' \
    --region '4nLc1Evg' \
    --sortBy '["displayOrder:desc", "displayOrder:asc", "updatedAt:asc"]' \
    --storeId 'kSTaVDaw' \
    --tags 'ZR09iu8n' \
    > test.out 2>&1
eval_tap $? 370 'PublicQueryItems' test.out

#- 371 PublicGetItemBySku
$CLI_EXE \
    --sn platform \
    --op PublicGetItemBySku \
    --namespace $AB_NAMESPACE \
    --autoCalcEstimatedPrice 'false' \
    --language 'iSGxpgdQ' \
    --region 'n9g7m05x' \
    --storeId 'fOaZIB2D' \
    --sku 'ujIK3LKP' \
    > test.out 2>&1
eval_tap $? 371 'PublicGetItemBySku' test.out

#- 372 PublicGetEstimatedPrice
$CLI_EXE \
    --sn platform \
    --op PublicGetEstimatedPrice \
    --namespace $AB_NAMESPACE \
    --region 'A9rfvhxI' \
    --storeId 'Wtb6D9O2' \
    --itemIds '6JjAhSeh' \
    > test.out 2>&1
eval_tap $? 372 'PublicGetEstimatedPrice' test.out

#- 373 PublicBulkGetItems
$CLI_EXE \
    --sn platform \
    --op PublicBulkGetItems \
    --namespace $AB_NAMESPACE \
    --autoCalcEstimatedPrice 'true' \
    --language 'DGffzym0' \
    --region 'nW4zWQ3J' \
    --storeId 'TlH8ccOO' \
    --itemIds 'wlctpXhm' \
    > test.out 2>&1
eval_tap $? 373 'PublicBulkGetItems' test.out

#- 374 PublicValidateItemPurchaseCondition
# body param: body
echo '{"itemIds": ["9aU5wQ7A", "x4YwT7IT", "Sj4Bx25P"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicValidateItemPurchaseCondition \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 374 'PublicValidateItemPurchaseCondition' test.out

#- 375 PublicSearchItems
$CLI_EXE \
    --sn platform \
    --op PublicSearchItems \
    --namespace $AB_NAMESPACE \
    --autoCalcEstimatedPrice 'false' \
    --itemType 'BUNDLE' \
    --limit '70' \
    --offset '27' \
    --region 'IAHvGuIq' \
    --storeId 'DHOfUXiP' \
    --keyword 'a6mjVnSG' \
    --language 'e1Ao0fYY' \
    > test.out 2>&1
eval_tap $? 375 'PublicSearchItems' test.out

#- 376 PublicGetApp
$CLI_EXE \
    --sn platform \
    --op PublicGetApp \
    --itemId 'AILJNoPM' \
    --namespace $AB_NAMESPACE \
    --language '6ZMKSthG' \
    --region '6rOyPds8' \
    --storeId 'Ut8fY3Ue' \
    > test.out 2>&1
eval_tap $? 376 'PublicGetApp' test.out

#- 377 PublicGetItemDynamicData
$CLI_EXE \
    --sn platform \
    --op PublicGetItemDynamicData \
    --itemId '7x1kc9oF' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 377 'PublicGetItemDynamicData' test.out

#- 378 PublicGetItem
$CLI_EXE \
    --sn platform \
    --op PublicGetItem \
    --itemId '2KHvQXqU' \
    --namespace $AB_NAMESPACE \
    --autoCalcEstimatedPrice 'true' \
    --language 'LmlB12Q6' \
    --populateBundle 'false' \
    --region 'MRckT4Pr' \
    --storeId 'y3DNGjXy' \
    > test.out 2>&1
eval_tap $? 378 'PublicGetItem' test.out

#- 379 GetPaymentCustomization
eval_tap 0 379 'GetPaymentCustomization # SKIP deprecated' test.out

#- 380 PublicGetPaymentUrl
# body param: body
echo '{"neonPayConfig": {"cancelUrl": "gIMc3iLn", "successUrl": "573rmIPg"}, "paymentOrderNo": "N5ERJfDG", "paymentProvider": "NEONPAY", "returnUrl": "3MSvBg1r", "ui": "P4vSi4iF", "zipCode": "QHfAbJcA"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicGetPaymentUrl \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 380 'PublicGetPaymentUrl' test.out

#- 381 PublicGetPaymentMethods
$CLI_EXE \
    --sn platform \
    --op PublicGetPaymentMethods \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 't1Ha3ADE' \
    > test.out 2>&1
eval_tap $? 381 'PublicGetPaymentMethods' test.out

#- 382 PublicGetUnpaidPaymentOrder
$CLI_EXE \
    --sn platform \
    --op PublicGetUnpaidPaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'FrfiOFHw' \
    > test.out 2>&1
eval_tap $? 382 'PublicGetUnpaidPaymentOrder' test.out

#- 383 Pay
# body param: body
echo '{"token": "ReBfzuzq"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op Pay \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'RyA9aPoo' \
    --paymentProvider 'STRIPE' \
    --zipCode 'n5FgCrmK' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 383 'Pay' test.out

#- 384 PublicCheckPaymentOrderPaidStatus
$CLI_EXE \
    --sn platform \
    --op PublicCheckPaymentOrderPaidStatus \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'tNB3EZLj' \
    > test.out 2>&1
eval_tap $? 384 'PublicCheckPaymentOrderPaidStatus' test.out

#- 385 GetPaymentPublicConfig
$CLI_EXE \
    --sn platform \
    --op GetPaymentPublicConfig \
    --namespace $AB_NAMESPACE \
    --sandbox 'false' \
    --paymentProvider 'ALIPAY' \
    --region 'C6wO6cSX' \
    > test.out 2>&1
eval_tap $? 385 'GetPaymentPublicConfig' test.out

#- 386 PublicGetQRCode
$CLI_EXE \
    --sn platform \
    --op PublicGetQRCode \
    --namespace $AB_NAMESPACE \
    --code 'dti94aDS' \
    > test.out 2>&1
eval_tap $? 386 'PublicGetQRCode' test.out

#- 387 PublicNormalizePaymentReturnUrl
$CLI_EXE \
    --sn platform \
    --op PublicNormalizePaymentReturnUrl \
    --namespace $AB_NAMESPACE \
    --payerID '4FEzBuYr' \
    --foreinginvoice 'bFGvIc0r' \
    --invoiceId 'dVBsls9Z' \
    --payload 'hEsvefy7' \
    --redirectResult '3Gdiyo1n' \
    --resultCode 'gsxKIeVb' \
    --sessionId 'qiclMEiD' \
    --status 'lKPrxqdU' \
    --token 'YGnUf0R7' \
    --type '3cx0Pn2W' \
    --userId 'dKX5CUDk' \
    --orderNo 'x8ACOWJ3' \
    --paymentOrderNo 'jNJxH5N8' \
    --paymentProvider 'XSOLLA' \
    --returnUrl 'B3iCIpNk' \
    > test.out 2>&1
eval_tap $? 387 'PublicNormalizePaymentReturnUrl' test.out

#- 388 GetPaymentTaxValue
$CLI_EXE \
    --sn platform \
    --op GetPaymentTaxValue \
    --namespace $AB_NAMESPACE \
    --zipCode 'qO1SBBaQ' \
    --paymentOrderNo 'gx0ZQQJH' \
    --paymentProvider 'WXPAY' \
    > test.out 2>&1
eval_tap $? 388 'GetPaymentTaxValue' test.out

#- 389 GetRewardByCode
$CLI_EXE \
    --sn platform \
    --op GetRewardByCode \
    --namespace $AB_NAMESPACE \
    --rewardCode 'TOJ57Art' \
    > test.out 2>&1
eval_tap $? 389 'GetRewardByCode' test.out

#- 390 QueryRewards1
$CLI_EXE \
    --sn platform \
    --op QueryRewards1 \
    --namespace $AB_NAMESPACE \
    --eventTopic 'micosT3s' \
    --limit '50' \
    --offset '16' \
    --sortBy '["namespace", "rewardCode:desc"]' \
    > test.out 2>&1
eval_tap $? 390 'QueryRewards1' test.out

#- 391 GetReward1
$CLI_EXE \
    --sn platform \
    --op GetReward1 \
    --namespace $AB_NAMESPACE \
    --rewardId 'IxcS7dQk' \
    > test.out 2>&1
eval_tap $? 391 'GetReward1' test.out

#- 392 PublicListStores
$CLI_EXE \
    --sn platform \
    --op PublicListStores \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 392 'PublicListStores' test.out

#- 393 PublicExistsAnyMyActiveEntitlement
$CLI_EXE \
    --sn platform \
    --op PublicExistsAnyMyActiveEntitlement \
    --namespace $AB_NAMESPACE \
    --appIds '["RfTxUz9I", "01J3gxqZ", "HAojjedo"]' \
    --itemIds '["GxqAgB5s", "7YyRCskG", "RsTncf1v"]' \
    --skus '["mokIjAIb", "MHUqFyi7", "XnNVpzao"]' \
    > test.out 2>&1
eval_tap $? 393 'PublicExistsAnyMyActiveEntitlement' test.out

#- 394 PublicGetMyAppEntitlementOwnershipByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetMyAppEntitlementOwnershipByAppId \
    --namespace $AB_NAMESPACE \
    --appId '3is4YO8A' \
    > test.out 2>&1
eval_tap $? 394 'PublicGetMyAppEntitlementOwnershipByAppId' test.out

#- 395 PublicGetMyEntitlementOwnershipByItemId
$CLI_EXE \
    --sn platform \
    --op PublicGetMyEntitlementOwnershipByItemId \
    --namespace $AB_NAMESPACE \
    --entitlementClazz 'LOOTBOX' \
    --itemId '9fRb8cAn' \
    > test.out 2>&1
eval_tap $? 395 'PublicGetMyEntitlementOwnershipByItemId' test.out

#- 396 PublicGetMyEntitlementOwnershipBySku
$CLI_EXE \
    --sn platform \
    --op PublicGetMyEntitlementOwnershipBySku \
    --namespace $AB_NAMESPACE \
    --entitlementClazz 'SUBSCRIPTION' \
    --sku 'Wld10Wpk' \
    > test.out 2>&1
eval_tap $? 396 'PublicGetMyEntitlementOwnershipBySku' test.out

#- 397 PublicGetEntitlementOwnershipToken
$CLI_EXE \
    --sn platform \
    --op PublicGetEntitlementOwnershipToken \
    --namespace $AB_NAMESPACE \
    --appIds '["kkVC2Sgl", "iekW4Iwq", "BPvU5Ozm"]' \
    --itemIds '["XLpyRCeS", "muMABDcd", "GvshNlqK"]' \
    --skus '["H78KCgfg", "AfjPmT5S", "jUgO2QWE"]' \
    > test.out 2>&1
eval_tap $? 397 'PublicGetEntitlementOwnershipToken' test.out

#- 398 SyncTwitchDropsEntitlement
# body param: body
echo '{"gameId": "zu0mwg8h", "language": "vJG_kmAo_za", "region": "JX3yhkIE"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncTwitchDropsEntitlement \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 398 'SyncTwitchDropsEntitlement' test.out

#- 399 PublicGetMyWallet
$CLI_EXE \
    --sn platform \
    --op PublicGetMyWallet \
    --currencyCode 'SOiKBaCL' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 399 'PublicGetMyWallet' test.out

#- 400 SyncEpicGameDLC
# body param: body
echo '{"epicGamesJwtToken": "CRjtwq56"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncEpicGameDLC \
    --namespace $AB_NAMESPACE \
    --userId 'GYNZgB54' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 400 'SyncEpicGameDLC' test.out

#- 401 SyncOculusDLC
$CLI_EXE \
    --sn platform \
    --op SyncOculusDLC \
    --namespace $AB_NAMESPACE \
    --userId '8BG2SoyR' \
    > test.out 2>&1
eval_tap $? 401 'SyncOculusDLC' test.out

#- 402 PublicSyncPsnDlcInventory
# body param: body
echo '{"serviceLabel": 60}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicSyncPsnDlcInventory \
    --namespace $AB_NAMESPACE \
    --userId '6srnzNDw' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 402 'PublicSyncPsnDlcInventory' test.out

#- 403 PublicSyncPsnDlcInventoryWithMultipleServiceLabels
# body param: body
echo '{"serviceLabels": [89, 83, 68]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicSyncPsnDlcInventoryWithMultipleServiceLabels \
    --namespace $AB_NAMESPACE \
    --userId 'A4tMU3bK' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 403 'PublicSyncPsnDlcInventoryWithMultipleServiceLabels' test.out

#- 404 SyncSteamDLC
# body param: body
echo '{"appId": "AGOduvq0", "steamId": "CoRShD96"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncSteamDLC \
    --namespace $AB_NAMESPACE \
    --userId 'lnFryiv8' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 404 'SyncSteamDLC' test.out

#- 405 SyncXboxDLC
# body param: body
echo '{"xstsToken": "RbBWABHB"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncXboxDLC \
    --namespace $AB_NAMESPACE \
    --userId 'Uc9akcP7' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 405 'SyncXboxDLC' test.out

#- 406 PublicQueryUserEntitlements
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserEntitlements \
    --namespace $AB_NAMESPACE \
    --userId '11BRmZO5' \
    --appType 'DEMO' \
    --entitlementClazz 'LOOTBOX' \
    --entitlementName 'y9CfC9yv' \
    --features '["nV9TXGfE", "YpGwRScT", "XIUHHoOX"]' \
    --itemId '["BbACIJgS", "KhdTXxzr", "e85IHFiJ"]' \
    --limit '3' \
    --offset '25' \
    > test.out 2>&1
eval_tap $? 406 'PublicQueryUserEntitlements' test.out

#- 407 PublicGetUserAppEntitlementByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetUserAppEntitlementByAppId \
    --namespace $AB_NAMESPACE \
    --userId '2WcBYHHy' \
    --appId 'AXIeD8TZ' \
    > test.out 2>&1
eval_tap $? 407 'PublicGetUserAppEntitlementByAppId' test.out

#- 408 PublicQueryUserEntitlementsByAppType
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserEntitlementsByAppType \
    --namespace $AB_NAMESPACE \
    --userId 'iCwtTdnA' \
    --limit '44' \
    --offset '50' \
    --appType 'GAME' \
    > test.out 2>&1
eval_tap $? 408 'PublicQueryUserEntitlementsByAppType' test.out

#- 409 PublicGetUserEntitlementsByIds
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementsByIds \
    --namespace $AB_NAMESPACE \
    --userId 'bYEiopCk' \
    --availablePlatformOnly 'false' \
    --ids '["ah3sbrDA", "QA4oliBB", "BSepxh2I"]' \
    > test.out 2>&1
eval_tap $? 409 'PublicGetUserEntitlementsByIds' test.out

#- 410 PublicGetUserEntitlementByItemId
eval_tap 0 410 'PublicGetUserEntitlementByItemId # SKIP deprecated' test.out

#- 411 PublicGetUserEntitlementBySku
eval_tap 0 411 'PublicGetUserEntitlementBySku # SKIP deprecated' test.out

#- 412 PublicUserEntitlementHistory
$CLI_EXE \
    --sn platform \
    --op PublicUserEntitlementHistory \
    --namespace $AB_NAMESPACE \
    --userId 'PgKH03oS' \
    --endDate 'OAWWnUEi' \
    --entitlementClazz 'LOOTBOX' \
    --limit '100' \
    --offset '24' \
    --startDate 'dpAGJ102' \
    > test.out 2>&1
eval_tap $? 412 'PublicUserEntitlementHistory' test.out

#- 413 PublicExistsAnyUserActiveEntitlement
$CLI_EXE \
    --sn platform \
    --op PublicExistsAnyUserActiveEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'pJWRmM8P' \
    --appIds '["iKrypjH1", "mGwHb4PL", "ghJq0LUy"]' \
    --itemIds '["lz4NYL8g", "XT38uSNc", "VrjsVLri"]' \
    --skus '["8unUxkXY", "W7Zs6Xgs", "khDIsM36"]' \
    > test.out 2>&1
eval_tap $? 413 'PublicExistsAnyUserActiveEntitlement' test.out

#- 414 PublicGetUserAppEntitlementOwnershipByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetUserAppEntitlementOwnershipByAppId \
    --namespace $AB_NAMESPACE \
    --userId 'dVU7nejV' \
    --appId 'ud2zRXI5' \
    > test.out 2>&1
eval_tap $? 414 'PublicGetUserAppEntitlementOwnershipByAppId' test.out

#- 415 PublicGetUserEntitlementOwnershipByItemId
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementOwnershipByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'fHokruHw' \
    --entitlementClazz 'ENTITLEMENT' \
    --itemId '4YilU1Ta' \
    > test.out 2>&1
eval_tap $? 415 'PublicGetUserEntitlementOwnershipByItemId' test.out

#- 416 PublicGetUserEntitlementOwnershipByItemIds
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementOwnershipByItemIds \
    --namespace $AB_NAMESPACE \
    --userId '8QVXDAaY' \
    --ids '["0dbNBB8J", "d274CJ1s", "YGVxbFGv"]' \
    > test.out 2>&1
eval_tap $? 416 'PublicGetUserEntitlementOwnershipByItemIds' test.out

#- 417 PublicGetUserEntitlementOwnershipBySku
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementOwnershipBySku \
    --namespace $AB_NAMESPACE \
    --userId 'FUWindjJ' \
    --entitlementClazz 'MEDIA' \
    --sku 'QocAWRM0' \
    > test.out 2>&1
eval_tap $? 417 'PublicGetUserEntitlementOwnershipBySku' test.out

#- 418 PublicGetUserEntitlement
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlement \
    --entitlementId 'l2oEdGKe' \
    --namespace $AB_NAMESPACE \
    --userId 'G2FhYqLH' \
    > test.out 2>&1
eval_tap $? 418 'PublicGetUserEntitlement' test.out

#- 419 PublicConsumeUserEntitlement
# body param: body
echo '{"options": ["3Va2FxWY", "auV1rgjP", "IDg0UWWe"], "requestId": "qwVkk0p0", "useCount": 91}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicConsumeUserEntitlement \
    --entitlementId 'NNXNSpI0' \
    --namespace $AB_NAMESPACE \
    --userId 'JySSTSVs' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 419 'PublicConsumeUserEntitlement' test.out

#- 420 PublicSellUserEntitlement
# body param: body
echo '{"requestId": "dqZl7Xn0", "useCount": 4}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicSellUserEntitlement \
    --entitlementId 'qr6Rki6a' \
    --namespace $AB_NAMESPACE \
    --userId 'dYnYSM6W' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 420 'PublicSellUserEntitlement' test.out

#- 421 PublicSplitUserEntitlement
# body param: body
echo '{"useCount": 71}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicSplitUserEntitlement \
    --entitlementId '3Gc7P7Zh' \
    --namespace $AB_NAMESPACE \
    --userId '9yRtQnWB' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 421 'PublicSplitUserEntitlement' test.out

#- 422 PublicTransferUserEntitlement
# body param: body
echo '{"entitlementId": "ceqtY4iE", "useCount": 3}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicTransferUserEntitlement \
    --entitlementId 'ahqrDdP4' \
    --namespace $AB_NAMESPACE \
    --userId 'By0yqy2T' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 422 'PublicTransferUserEntitlement' test.out

#- 423 PublicRedeemCode
# body param: body
echo '{"code": "avYtOlQO", "language": "pLpW-510", "region": "CphL9ccB"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicRedeemCode \
    --namespace $AB_NAMESPACE \
    --userId '7IbQWh85' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 423 'PublicRedeemCode' test.out

#- 424 PublicFulfillAppleIAPItem
# body param: body
echo '{"excludeOldTransactions": false, "language": "BOuE_nOgD_426", "productId": "jimofKGp", "receiptData": "6UsSGCKk", "region": "RQVQlBpq", "transactionId": "joi0CaXe"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicFulfillAppleIAPItem \
    --namespace $AB_NAMESPACE \
    --userId 'QnXSqMXh' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 424 'PublicFulfillAppleIAPItem' test.out

#- 425 SyncEpicGamesInventory
# body param: body
echo '{"epicGamesJwtToken": "WyU0ttQp"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncEpicGamesInventory \
    --namespace $AB_NAMESPACE \
    --userId 'FO48FG9d' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 425 'SyncEpicGamesInventory' test.out

#- 426 PublicFulfillGoogleIAPItem
# body param: body
echo '{"autoAck": true, "language": "qxG_iO", "orderId": "kuBi4sXe", "packageName": "YreXbXT8", "productId": "5mC7j2jb", "purchaseTime": 7, "purchaseToken": "L2zWkWLe", "region": "WNuxL2i5"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicFulfillGoogleIAPItem \
    --namespace $AB_NAMESPACE \
    --userId 'IrmRmML8' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 426 'PublicFulfillGoogleIAPItem' test.out

#- 427 SyncOculusConsumableEntitlements
$CLI_EXE \
    --sn platform \
    --op SyncOculusConsumableEntitlements \
    --namespace $AB_NAMESPACE \
    --userId 'JyBpc9KN' \
    > test.out 2>&1
eval_tap $? 427 'SyncOculusConsumableEntitlements' test.out

#- 428 PublicReconcilePlayStationStore
# body param: body
echo '{"currencyCode": "5TlrKKS6", "price": 0.8774371232715311, "productId": "FvtfXigm", "serviceLabel": 51}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicReconcilePlayStationStore \
    --namespace $AB_NAMESPACE \
    --userId 'NozTWZwp' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 428 'PublicReconcilePlayStationStore' test.out

#- 429 PublicReconcilePlayStationStoreWithMultipleServiceLabels
# body param: body
echo '{"currencyCode": "VgyGwV6Y", "price": 0.033131993575262864, "productId": "vkRqfXUu", "serviceLabels": [91, 68, 7]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicReconcilePlayStationStoreWithMultipleServiceLabels \
    --namespace $AB_NAMESPACE \
    --userId '8tvVozCk' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 429 'PublicReconcilePlayStationStoreWithMultipleServiceLabels' test.out

#- 430 SyncSteamInventory
# body param: body
echo '{"appId": "G60lwJBt", "currencyCode": "E9tyxvEF", "language": "JzR_599", "price": 0.9558006520135274, "productId": "KmRpOmK3", "region": "hWBsHM9X", "steamId": "GIF2aZFR"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncSteamInventory \
    --namespace $AB_NAMESPACE \
    --userId '6DNVWV6t' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 430 'SyncSteamInventory' test.out

#- 431 SyncTwitchDropsEntitlement1
# body param: body
echo '{"gameId": "uKuEgxfC", "language": "Usq", "region": "Exrv2sT2"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncTwitchDropsEntitlement1 \
    --namespace $AB_NAMESPACE \
    --userId 'zaK7RxTq' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 431 'SyncTwitchDropsEntitlement1' test.out

#- 432 SyncXboxInventory
# body param: body
echo '{"currencyCode": "1KiDG28G", "price": 0.08065156524733907, "productId": "wTTBxENP", "xstsToken": "7JLSkaDC"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncXboxInventory \
    --namespace $AB_NAMESPACE \
    --userId '9fgL7WiZ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 432 'SyncXboxInventory' test.out

#- 433 PublicQueryUserOrders
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserOrders \
    --namespace $AB_NAMESPACE \
    --userId 'L2JanMxR' \
    --discounted 'false' \
    --itemId '3NRLCk1p' \
    --limit '6' \
    --offset '69' \
    --status 'FULFILL_FAILED' \
    > test.out 2>&1
eval_tap $? 433 'PublicQueryUserOrders' test.out

#- 434 PublicCreateUserOrder
# body param: body
echo '{"currencyCode": "QpfbW5oV", "discountCodes": ["lAEkPPJd", "s3o625sn", "mowaghfM"], "discountedPrice": 20, "ext": {"VSrib4fc": {}, "KQJJO15l": {}, "wYsxNl20": {}}, "itemId": "MBZW1J6u", "language": "vrL-845", "price": 61, "quantity": 70, "region": "MLx4nheH", "returnUrl": "szg4qpFm", "sectionId": "FOOLmILB"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicCreateUserOrder \
    --namespace $AB_NAMESPACE \
    --userId '3gxnbrOU' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 434 'PublicCreateUserOrder' test.out

#- 435 PublicPreviewOrderPrice
# body param: body
echo '{"currencyCode": "EnFBbV9L", "discountCodes": ["jouapcyS", "C3cyAkQe", "HUJyaXzY"], "discountedPrice": 7, "itemId": "YtRRIIkh", "price": 88, "quantity": 94}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicPreviewOrderPrice \
    --namespace $AB_NAMESPACE \
    --userId 'DSyXuj50' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 435 'PublicPreviewOrderPrice' test.out

#- 436 PublicGetUserOrder
$CLI_EXE \
    --sn platform \
    --op PublicGetUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'WdDMePwV' \
    --userId '2foJTyxY' \
    > test.out 2>&1
eval_tap $? 436 'PublicGetUserOrder' test.out

#- 437 PublicCancelUserOrder
$CLI_EXE \
    --sn platform \
    --op PublicCancelUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'wdhPRqLn' \
    --userId 'hbnoJF7E' \
    > test.out 2>&1
eval_tap $? 437 'PublicCancelUserOrder' test.out

#- 438 PublicGetUserOrderHistories
$CLI_EXE \
    --sn platform \
    --op PublicGetUserOrderHistories \
    --namespace $AB_NAMESPACE \
    --orderNo '7ePkbtFF' \
    --userId 'DSknd2cE' \
    > test.out 2>&1
eval_tap $? 438 'PublicGetUserOrderHistories' test.out

#- 439 PublicDownloadUserOrderReceipt
$CLI_EXE \
    --sn platform \
    --op PublicDownloadUserOrderReceipt \
    --namespace $AB_NAMESPACE \
    --orderNo 'EG5h8Hav' \
    --userId 'QuzVezE5' \
    > test.out 2>&1
eval_tap $? 439 'PublicDownloadUserOrderReceipt' test.out

#- 440 PublicGetPaymentAccounts
$CLI_EXE \
    --sn platform \
    --op PublicGetPaymentAccounts \
    --namespace $AB_NAMESPACE \
    --userId 'QhVEF7Qz' \
    > test.out 2>&1
eval_tap $? 440 'PublicGetPaymentAccounts' test.out

#- 441 PublicDeletePaymentAccount
$CLI_EXE \
    --sn platform \
    --op PublicDeletePaymentAccount \
    --id '1kNT79m1' \
    --namespace $AB_NAMESPACE \
    --type 'paypal' \
    --userId 'lTRJ6G7A' \
    > test.out 2>&1
eval_tap $? 441 'PublicDeletePaymentAccount' test.out

#- 442 PublicListActiveSections
$CLI_EXE \
    --sn platform \
    --op PublicListActiveSections \
    --namespace $AB_NAMESPACE \
    --userId 'kjaoZyd2' \
    --autoCalcEstimatedPrice 'false' \
    --language 'EJeWKugz' \
    --region '26ZiGujf' \
    --storeId 'dAKFfvsl' \
    --viewId 'U6VD0wGa' \
    > test.out 2>&1
eval_tap $? 442 'PublicListActiveSections' test.out

#- 443 PublicQueryUserSubscriptions
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserSubscriptions \
    --namespace $AB_NAMESPACE \
    --userId 'JuaVdpCz' \
    --chargeStatus 'NEVER' \
    --itemId 'eYrtsUoB' \
    --limit '42' \
    --offset '76' \
    --sku 'm7lJ3rO7' \
    --status 'ACTIVE' \
    --subscribedBy 'PLATFORM' \
    > test.out 2>&1
eval_tap $? 443 'PublicQueryUserSubscriptions' test.out

#- 444 PublicSubscribeSubscription
# body param: body
echo '{"currencyCode": "XEgMeian", "itemId": "ZM3PzWbt", "language": "vd_117", "region": "l43Vay6K", "returnUrl": "mktWokbJ", "source": "6H6Sxbux"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicSubscribeSubscription \
    --namespace $AB_NAMESPACE \
    --userId 'qr5reSom' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 444 'PublicSubscribeSubscription' test.out

#- 445 PublicCheckUserSubscriptionSubscribableByItemId
$CLI_EXE \
    --sn platform \
    --op PublicCheckUserSubscriptionSubscribableByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'DJTY9VGg' \
    --itemId '9DU5XVTP' \
    > test.out 2>&1
eval_tap $? 445 'PublicCheckUserSubscriptionSubscribableByItemId' test.out

#- 446 PublicGetUserSubscription
$CLI_EXE \
    --sn platform \
    --op PublicGetUserSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId '6qP2kltI' \
    --userId '8swRzMH0' \
    > test.out 2>&1
eval_tap $? 446 'PublicGetUserSubscription' test.out

#- 447 PublicChangeSubscriptionBillingAccount
$CLI_EXE \
    --sn platform \
    --op PublicChangeSubscriptionBillingAccount \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'iaKMFfY5' \
    --userId 'HFWUcf4o' \
    > test.out 2>&1
eval_tap $? 447 'PublicChangeSubscriptionBillingAccount' test.out

#- 448 PublicCancelSubscription
# body param: body
echo '{"immediate": false, "reason": "X71MGgY6"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicCancelSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'M3fbR8OW' \
    --userId 'gvrYNHZ4' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 448 'PublicCancelSubscription' test.out

#- 449 PublicGetUserSubscriptionBillingHistories
$CLI_EXE \
    --sn platform \
    --op PublicGetUserSubscriptionBillingHistories \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'QT6yDDhV' \
    --userId '1kZwfufp' \
    --excludeFree 'false' \
    --limit '92' \
    --offset '90' \
    > test.out 2>&1
eval_tap $? 449 'PublicGetUserSubscriptionBillingHistories' test.out

#- 450 PublicListViews
$CLI_EXE \
    --sn platform \
    --op PublicListViews \
    --namespace $AB_NAMESPACE \
    --userId 'kxrN2U6B' \
    --language '8A69EnFL' \
    --storeId 'Q4Qm7VfP' \
    > test.out 2>&1
eval_tap $? 450 'PublicListViews' test.out

#- 451 PublicGetWallet
$CLI_EXE \
    --sn platform \
    --op PublicGetWallet \
    --currencyCode 'ezEEDsxq' \
    --namespace $AB_NAMESPACE \
    --userId 'M2ViX6Q2' \
    > test.out 2>&1
eval_tap $? 451 'PublicGetWallet' test.out

#- 452 PublicListUserWalletTransactions
$CLI_EXE \
    --sn platform \
    --op PublicListUserWalletTransactions \
    --currencyCode 'f9gVVi99' \
    --namespace $AB_NAMESPACE \
    --userId 'P9oKgN8i' \
    --limit '65' \
    --offset '10' \
    > test.out 2>&1
eval_tap $? 452 'PublicListUserWalletTransactions' test.out

#- 453 QueryItemsV2
$CLI_EXE \
    --sn platform \
    --op QueryItemsV2 \
    --namespace $AB_NAMESPACE \
    --appType 'GAME' \
    --availableDate 'NOavWOb5' \
    --baseAppId 'iULb8xJW' \
    --categoryPath 'Mo4P23Da' \
    --features 'J5GGynpO' \
    --includeSubCategoryItem 'false' \
    --itemName 'ea0rohwx' \
    --itemStatus 'ACTIVE' \
    --itemType '["SEASON", "SUBSCRIPTION", "SUBSCRIPTION"]' \
    --limit '24' \
    --offset '41' \
    --region '2iVMYLeg' \
    --sectionExclusive 'true' \
    --sortBy '["createdAt", "displayOrder:desc"]' \
    --storeId 'lCB9QpSn' \
    --tags 'fVzeRKPg' \
    --targetNamespace 'QF1GLRe7' \
    --withTotal 'false' \
    > test.out 2>&1
eval_tap $? 453 'QueryItemsV2' test.out

#- 454 ImportStore1
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op ImportStore1 \
    --namespace $AB_NAMESPACE \
    --storeId 'RK41BX5y' \
    --strictMode 'false' \
    --upload file $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 454 'ImportStore1' test.out

#- 455 ExportStore1
# body param: body
echo '{"itemIds": ["sxjOxtRF", "lmQhrmwf", "naQRUzHZ"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ExportStore1 \
    --namespace $AB_NAMESPACE \
    --storeId 'n9tkUMlY' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 455 'ExportStore1' test.out

#- 456 FulfillRewardsV2
# body param: body
echo '{"entitlementCollectionId": "NnGpHLMV", "entitlementOrigin": "Steam", "metadata": {"V6ReT4k3": {}, "LyOuchoc": {}, "F6EwqWlu": {}}, "origin": "Oculus", "rewards": [{"currency": {"currencyCode": "jb5rCYbZ", "namespace": "pd7uchmO"}, "item": {"itemId": "8Yp75Mhm", "itemSku": "iYtBmskc", "itemType": "bIa1Fl2B"}, "quantity": 48, "type": "CURRENCY"}, {"currency": {"currencyCode": "aKGWmXXK", "namespace": "oT5JbXK8"}, "item": {"itemId": "eyfoLbIn", "itemSku": "zThmAl2X", "itemType": "IJM80rdc"}, "quantity": 27, "type": "ITEM"}, {"currency": {"currencyCode": "f45TThEu", "namespace": "OXl60Oe7"}, "item": {"itemId": "7YYUKZdE", "itemSku": "xf5vAEPL", "itemType": "cHRdGMAt"}, "quantity": 55, "type": "CURRENCY"}], "source": "GIFT", "transactionId": "IVtv9fUN"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op FulfillRewardsV2 \
    --namespace $AB_NAMESPACE \
    --userId 'L56ftdR6' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 456 'FulfillRewardsV2' test.out


# remove artifacts
rm -f "$CLI_TOKEN_FILE"
rm -f "$TEMP_JSON_INPUT"
rm -f "$TEMP_FILE_UPLOAD"

exit $EXIT_CODE