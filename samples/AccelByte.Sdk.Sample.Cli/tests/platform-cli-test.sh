#!/usr/bin/env bash

# Copyright (c) 2021 AccelByte Inc. All Rights Reserved.
# This is licensed software from AccelByte Inc, for limitations
# and restrictions contact your company contract manager.

# This code is generated by tool. DO NOT EDIT.

# Meta:
# - random seed: 
# - template file: 

# Instructions:
# - Run the Justice SDK Mock Server first before running this script.

export AB_BASE_URL="http://127.0.0.1:8080"
export AB_CLIENT_ID="admin"
export AB_CLIENT_SECRET="admin"
export AB_NAMESPACE="test"
export AB_APP_NAME="UnitTest"

EXIT_CODE=0

eval_tap() {
  if [ $1 -eq 0 ]; then
    echo "ok $2 - $3"
  else
    EXIT_CODE=1
    echo "not ok $2 - $3"
    sed 's/^/# /g' $4
  fi
  rm -f $4
}

CLI_EXE="AccelByte.Sdk.Sample.Cli"
CLI_TOKEN_FILE="$(dirname "$(which $CLI_EXE)")/token.json"
TEMP_JSON_INPUT="input_json.json"
TEMP_FILE_UPLOAD="file_upload.bin"

echo "TAP version 13"
echo "1..499"

#- 1 Login
$CLI_EXE --op login --lt user --user user --pass user > test.out 2>&1
eval_tap $? 1 'Login' test.out

if [ $EXIT_CODE -ne 0 ]; then
  echo "Bail out! Login failed."
  exit $EXIT_CODE
fi

# echo "foo" > "$CLI_TOKEN_FILE"

#- 2 ListFulfillmentScripts
$CLI_EXE \
    --sn platform \
    --op ListFulfillmentScripts \
    > test.out 2>&1
eval_tap $? 2 'ListFulfillmentScripts' test.out

#- 3 GetFulfillmentScript
$CLI_EXE \
    --sn platform \
    --op GetFulfillmentScript \
    --id 'kkNBxQah' \
    > test.out 2>&1
eval_tap $? 3 'GetFulfillmentScript' test.out

#- 4 CreateFulfillmentScript
# body param: body
echo '{"grantDays": "dX4OU59k"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateFulfillmentScript \
    --id 'g2ZqhKt0' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 4 'CreateFulfillmentScript' test.out

#- 5 DeleteFulfillmentScript
$CLI_EXE \
    --sn platform \
    --op DeleteFulfillmentScript \
    --id 'UMPuZbJu' \
    > test.out 2>&1
eval_tap $? 5 'DeleteFulfillmentScript' test.out

#- 6 UpdateFulfillmentScript
# body param: body
echo '{"grantDays": "s5jxU7ty"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateFulfillmentScript \
    --id '7n9u4KeJ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 6 'UpdateFulfillmentScript' test.out

#- 7 ListItemTypeConfigs
$CLI_EXE \
    --sn platform \
    --op ListItemTypeConfigs \
    > test.out 2>&1
eval_tap $? 7 'ListItemTypeConfigs' test.out

#- 8 CreateItemTypeConfig
# body param: body
echo '{"clazz": "V2wPd5FG", "dryRun": true, "fulfillmentUrl": "XCLROki1", "itemType": "SEASON", "purchaseConditionUrl": "o7AEZY3O"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateItemTypeConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 8 'CreateItemTypeConfig' test.out

#- 9 SearchItemTypeConfig
$CLI_EXE \
    --sn platform \
    --op SearchItemTypeConfig \
    --clazz '2s4oqFPP' \
    --itemType 'EXTENSION' \
    > test.out 2>&1
eval_tap $? 9 'SearchItemTypeConfig' test.out

#- 10 GetItemTypeConfig
$CLI_EXE \
    --sn platform \
    --op GetItemTypeConfig \
    --id 'N63WULAk' \
    > test.out 2>&1
eval_tap $? 10 'GetItemTypeConfig' test.out

#- 11 UpdateItemTypeConfig
# body param: body
echo '{"clazz": "d3EO0F3s", "dryRun": false, "fulfillmentUrl": "WuLjAulk", "purchaseConditionUrl": "f8EepSER"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateItemTypeConfig \
    --id 'hgLaFhE3' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 11 'UpdateItemTypeConfig' test.out

#- 12 DeleteItemTypeConfig
$CLI_EXE \
    --sn platform \
    --op DeleteItemTypeConfig \
    --id 'CGiLAO4Y' \
    > test.out 2>&1
eval_tap $? 12 'DeleteItemTypeConfig' test.out

#- 13 QueryCampaigns
$CLI_EXE \
    --sn platform \
    --op QueryCampaigns \
    --namespace $AB_NAMESPACE \
    --limit '83' \
    --name 'Ksm2lTSt' \
    --offset '71' \
    --tag 'q2fsBxCc' \
    > test.out 2>&1
eval_tap $? 13 'QueryCampaigns' test.out

#- 14 CreateCampaign
# body param: body
echo '{"description": "ReqrlDwH", "discountConfig": {"categories": [{"categoryPath": "VlMWNbho", "includeSubCategories": false}, {"categoryPath": "IeHJERaE", "includeSubCategories": true}, {"categoryPath": "G2pqkb1V", "includeSubCategories": false}], "currencyCode": "Tx6196AA", "currencyNamespace": "oZghLjdw", "discountAmount": 67, "discountPercentage": 9, "discountType": "AMOUNT", "items": [{"itemId": "yzWIYFT5", "itemName": "n7xlkqI9"}, {"itemId": "rwwi6wW5", "itemName": "dvz5MuoH"}, {"itemId": "YIr45KrD", "itemName": "XgwWX2V7"}], "restrictType": "ITEMS_AND_CATEGORIES", "stackable": true}, "items": [{"extraSubscriptionDays": 81, "itemId": "EGZkQIHv", "itemName": "2HAIfFZp", "quantity": 33}, {"extraSubscriptionDays": 93, "itemId": "f26v5phe", "itemName": "Ah1UlGxQ", "quantity": 82}, {"extraSubscriptionDays": 88, "itemId": "9qgKvOx9", "itemName": "3jIouhYQ", "quantity": 94}], "maxRedeemCountPerCampaignPerUser": 23, "maxRedeemCountPerCode": 2, "maxRedeemCountPerCodePerUser": 28, "maxSaleCount": 65, "name": "u3HqzCkI", "redeemEnd": "1974-08-27T00:00:00Z", "redeemStart": "1982-12-07T00:00:00Z", "redeemType": "ITEM", "status": "INACTIVE", "tags": ["rxrhWls8", "p0MSJwnw", "ypBHT3n3"], "type": "REDEMPTION"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCampaign \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 14 'CreateCampaign' test.out

#- 15 GetCampaign
$CLI_EXE \
    --sn platform \
    --op GetCampaign \
    --campaignId 'iE3elGGU' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 15 'GetCampaign' test.out

#- 16 UpdateCampaign
# body param: body
echo '{"description": "srPmNsgD", "discountConfig": {"categories": [{"categoryPath": "tz2nhKCD", "includeSubCategories": false}, {"categoryPath": "dWOn2vIG", "includeSubCategories": false}, {"categoryPath": "mYXbfpsF", "includeSubCategories": true}], "currencyCode": "I8i0jWR0", "currencyNamespace": "u42v7nTn", "discountAmount": 24, "discountPercentage": 18, "discountType": "AMOUNT", "items": [{"itemId": "HqufpvkD", "itemName": "38egsiIf"}, {"itemId": "OlFCz3DL", "itemName": "VwFH9zl5"}, {"itemId": "IShmlhCZ", "itemName": "fbZJkv6n"}], "restrictType": "ITEMS_AND_CATEGORIES", "stackable": true}, "items": [{"extraSubscriptionDays": 28, "itemId": "3orBrE7F", "itemName": "iINN18A8", "quantity": 52}, {"extraSubscriptionDays": 10, "itemId": "KP2KA9t2", "itemName": "1QLMr4ee", "quantity": 31}, {"extraSubscriptionDays": 85, "itemId": "84ZWg0m7", "itemName": "H7L89eVM", "quantity": 14}], "maxRedeemCountPerCampaignPerUser": 42, "maxRedeemCountPerCode": 58, "maxRedeemCountPerCodePerUser": 11, "maxSaleCount": 100, "name": "DVd7JcE4", "redeemEnd": "1992-02-11T00:00:00Z", "redeemStart": "1983-12-07T00:00:00Z", "redeemType": "DISCOUNT", "status": "ACTIVE", "tags": ["JDma03kq", "fVFC3p01", "JENd4Rs6"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCampaign \
    --campaignId 'rDfPnk3O' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 16 'UpdateCampaign' test.out

#- 17 RenameBatch
# body param: body
echo '{"newName": "lttBVSWu", "oldName": "i0peRmcU"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RenameBatch \
    --campaignId 'Temcnlfs' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 17 'RenameBatch' test.out

#- 18 QueryCampaignBatchNames
$CLI_EXE \
    --sn platform \
    --op QueryCampaignBatchNames \
    --campaignId 'ObqE8754' \
    --namespace $AB_NAMESPACE \
    --batchName 'j7K9PrS4' \
    --limit '3' \
    > test.out 2>&1
eval_tap $? 18 'QueryCampaignBatchNames' test.out

#- 19 GetCampaignDynamic
$CLI_EXE \
    --sn platform \
    --op GetCampaignDynamic \
    --campaignId 'nEvvisvT' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 19 'GetCampaignDynamic' test.out

#- 20 GetCatalogConfig
$CLI_EXE \
    --sn platform \
    --op GetCatalogConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 20 'GetCatalogConfig' test.out

#- 21 UpdateCatalogConfig
# body param: body
echo '{"enableInventoryCheck": false, "itemDeletionCheckConfig": ["IAP", "CAMPAIGN", "DLC"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCatalogConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 21 'UpdateCatalogConfig' test.out

#- 22 GetLootBoxPluginConfig
$CLI_EXE \
    --sn platform \
    --op GetLootBoxPluginConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 22 'GetLootBoxPluginConfig' test.out

#- 23 UpdateLootBoxPluginConfig
# body param: body
echo '{"appConfig": {"appName": "P4rOamY4"}, "customConfig": {"connectionType": "INSECURE", "grpcServerAddress": "DNGh625t"}, "extendType": "CUSTOM"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateLootBoxPluginConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 23 'UpdateLootBoxPluginConfig' test.out

#- 24 DeleteLootBoxPluginConfig
$CLI_EXE \
    --sn platform \
    --op DeleteLootBoxPluginConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 24 'DeleteLootBoxPluginConfig' test.out

#- 25 UplodLootBoxPluginConfigCert
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UplodLootBoxPluginConfigCert \
    --namespace $AB_NAMESPACE \
    --upload file $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 25 'UplodLootBoxPluginConfigCert' test.out

#- 26 GetLootBoxGrpcInfo
$CLI_EXE \
    --sn platform \
    --op GetLootBoxGrpcInfo \
    --namespace $AB_NAMESPACE \
    --force 'true' \
    > test.out 2>&1
eval_tap $? 26 'GetLootBoxGrpcInfo' test.out

#- 27 GetSectionPluginConfig
$CLI_EXE \
    --sn platform \
    --op GetSectionPluginConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 27 'GetSectionPluginConfig' test.out

#- 28 UpdateSectionPluginConfig
# body param: body
echo '{"appConfig": {"appName": "wHDnzF1v"}, "customConfig": {"connectionType": "TLS", "grpcServerAddress": "6pRG1Bi4"}, "extendType": "APP"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateSectionPluginConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 28 'UpdateSectionPluginConfig' test.out

#- 29 DeleteSectionPluginConfig
$CLI_EXE \
    --sn platform \
    --op DeleteSectionPluginConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 29 'DeleteSectionPluginConfig' test.out

#- 30 UploadSectionPluginConfigCert
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UploadSectionPluginConfigCert \
    --namespace $AB_NAMESPACE \
    --upload file $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 30 'UploadSectionPluginConfigCert' test.out

#- 31 GetRootCategories
$CLI_EXE \
    --sn platform \
    --op GetRootCategories \
    --namespace $AB_NAMESPACE \
    --storeId 'HJSdCJio' \
    > test.out 2>&1
eval_tap $? 31 'GetRootCategories' test.out

#- 32 CreateCategory
# body param: body
echo '{"categoryPath": "NbtTXHTk", "localizationDisplayNames": {"cciMvZLP": "0DQ9YkV6", "g7mZ6jNy": "d7Z7uIya", "z3MXsE88": "Q5zsSKhi"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCategory \
    --namespace $AB_NAMESPACE \
    --storeId 'puBBMzvN' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 32 'CreateCategory' test.out

#- 33 ListCategoriesBasic
$CLI_EXE \
    --sn platform \
    --op ListCategoriesBasic \
    --namespace $AB_NAMESPACE \
    --storeId 'bWmsdisC' \
    > test.out 2>&1
eval_tap $? 33 'ListCategoriesBasic' test.out

#- 34 GetCategory
$CLI_EXE \
    --sn platform \
    --op GetCategory \
    --categoryPath 'zmN40aox' \
    --namespace $AB_NAMESPACE \
    --storeId '0TxBkHhQ' \
    > test.out 2>&1
eval_tap $? 34 'GetCategory' test.out

#- 35 UpdateCategory
# body param: body
echo '{"localizationDisplayNames": {"tf5TbhBZ": "g3lXJv66", "NZpQ9res": "7ACcsJr8", "Knyb8YSX": "bhoxDowL"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCategory \
    --categoryPath 'GnYvhfLV' \
    --namespace $AB_NAMESPACE \
    --storeId '3bF5jyD1' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 35 'UpdateCategory' test.out

#- 36 DeleteCategory
$CLI_EXE \
    --sn platform \
    --op DeleteCategory \
    --categoryPath 'ARbZOpwE' \
    --namespace $AB_NAMESPACE \
    --storeId 'NUxY44Wu' \
    > test.out 2>&1
eval_tap $? 36 'DeleteCategory' test.out

#- 37 GetChildCategories
$CLI_EXE \
    --sn platform \
    --op GetChildCategories \
    --categoryPath 'hW6RKLip' \
    --namespace $AB_NAMESPACE \
    --storeId '0VxanXPS' \
    > test.out 2>&1
eval_tap $? 37 'GetChildCategories' test.out

#- 38 GetDescendantCategories
$CLI_EXE \
    --sn platform \
    --op GetDescendantCategories \
    --categoryPath 'LaHK1wxC' \
    --namespace $AB_NAMESPACE \
    --storeId 'HkJ7ByM7' \
    > test.out 2>&1
eval_tap $? 38 'GetDescendantCategories' test.out

#- 39 QueryCodes
$CLI_EXE \
    --sn platform \
    --op QueryCodes \
    --campaignId 'CeXuGTtn' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --batchName 'VdRf2dri' \
    --batchNo '[5, 10, 75]' \
    --code '6lSyWLWP' \
    --limit '7' \
    --offset '98' \
    --withBatchName 'true' \
    > test.out 2>&1
eval_tap $? 39 'QueryCodes' test.out

#- 40 CreateCodes
# body param: body
echo '{"batchName": "8evOCkX1", "codeValue": "JUd4CWub", "quantity": 41}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCodes \
    --campaignId 'mZpuSfNz' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 40 'CreateCodes' test.out

#- 41 Download
$CLI_EXE \
    --sn platform \
    --op Download \
    --campaignId 'FXdHsH1u' \
    --namespace $AB_NAMESPACE \
    --batchName '7Y8i7z2a' \
    --batchNo '[70, 54, 8]' \
    --withBatchName 'false' \
    > test.out 2>&1
eval_tap $? 41 'Download' test.out

#- 42 BulkDisableCodes
$CLI_EXE \
    --sn platform \
    --op BulkDisableCodes \
    --campaignId 'HGMZJRJt' \
    --namespace $AB_NAMESPACE \
    --batchName 'c9FQfd48' \
    --batchNo '[57, 36, 85]' \
    > test.out 2>&1
eval_tap $? 42 'BulkDisableCodes' test.out

#- 43 BulkEnableCodes
$CLI_EXE \
    --sn platform \
    --op BulkEnableCodes \
    --campaignId 'm9wBKd42' \
    --namespace $AB_NAMESPACE \
    --batchName '1b5ycUo2' \
    --batchNo '[57, 14, 11]' \
    > test.out 2>&1
eval_tap $? 43 'BulkEnableCodes' test.out

#- 44 QueryRedeemHistory
$CLI_EXE \
    --sn platform \
    --op QueryRedeemHistory \
    --campaignId 'UNFDmz4b' \
    --namespace $AB_NAMESPACE \
    --code '1fdCQakP' \
    --limit '34' \
    --offset '51' \
    --userId 'qd2weQMZ' \
    > test.out 2>&1
eval_tap $? 44 'QueryRedeemHistory' test.out

#- 45 GetCode
$CLI_EXE \
    --sn platform \
    --op GetCode \
    --code 'yhzKwJbg' \
    --namespace $AB_NAMESPACE \
    --redeemable 'false' \
    --withBatchName 'false' \
    > test.out 2>&1
eval_tap $? 45 'GetCode' test.out

#- 46 DisableCode
$CLI_EXE \
    --sn platform \
    --op DisableCode \
    --code '9MLctcWt' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 46 'DisableCode' test.out

#- 47 EnableCode
$CLI_EXE \
    --sn platform \
    --op EnableCode \
    --code 'l4A2ENJd' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 47 'EnableCode' test.out

#- 48 GetServicePluginConfig
eval_tap 0 48 'GetServicePluginConfig # SKIP deprecated' test.out

#- 49 UpdateServicePluginConfig
eval_tap 0 49 'UpdateServicePluginConfig # SKIP deprecated' test.out

#- 50 DeleteServicePluginConfig
eval_tap 0 50 'DeleteServicePluginConfig # SKIP deprecated' test.out

#- 51 ListCurrencies
$CLI_EXE \
    --sn platform \
    --op ListCurrencies \
    --namespace $AB_NAMESPACE \
    --currencyType 'REAL' \
    > test.out 2>&1
eval_tap $? 51 'ListCurrencies' test.out

#- 52 CreateCurrency
# body param: body
echo '{"currencyCode": "71SfAB5C", "currencySymbol": "PYDl2bXH", "currencyType": "REAL", "decimals": 76, "localizationDescriptions": {"6fTxyzfN": "nxHZ69dn", "WsncqOeN": "hN5hawYH", "w4uPcTKT": "7vxE9DTl"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCurrency \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 52 'CreateCurrency' test.out

#- 53 UpdateCurrency
# body param: body
echo '{"localizationDescriptions": {"3WPYHUQ2": "JKlaMiil", "ZV0xGk4R": "LlWVp7Mv", "UVcHCl85": "AetIpjbg"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCurrency \
    --currencyCode 'R1z9gnAJ' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 53 'UpdateCurrency' test.out

#- 54 DeleteCurrency
$CLI_EXE \
    --sn platform \
    --op DeleteCurrency \
    --currencyCode 'rL7wGkhV' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 54 'DeleteCurrency' test.out

#- 55 GetCurrencyConfig
$CLI_EXE \
    --sn platform \
    --op GetCurrencyConfig \
    --currencyCode 'VPBr4xXC' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 55 'GetCurrencyConfig' test.out

#- 56 GetCurrencySummary
$CLI_EXE \
    --sn platform \
    --op GetCurrencySummary \
    --currencyCode 'VecOnVK6' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 56 'GetCurrencySummary' test.out

#- 57 GetDLCItemConfigHistory
$CLI_EXE \
    --sn platform \
    --op GetDLCItemConfigHistory \
    --namespace $AB_NAMESPACE \
    --dlcId 'H6kxJ0R2' \
    > test.out 2>&1
eval_tap $? 57 'GetDLCItemConfigHistory' test.out

#- 58 RestoreDLCItemConfigHistory
$CLI_EXE \
    --sn platform \
    --op RestoreDLCItemConfigHistory \
    --id '2AoeWVTa' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 58 'RestoreDLCItemConfigHistory' test.out

#- 59 GetDLCItemConfig
$CLI_EXE \
    --sn platform \
    --op GetDLCItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 59 'GetDLCItemConfig' test.out

#- 60 UpdateDLCItemConfig
# body param: body
echo '{"data": [{"autoUpdate": true, "enableRevocation": false, "id": "dpgSbnSv", "rewards": [{"currency": {"currencyCode": "SO3uqzz4", "namespace": "5gsJhIDI"}, "item": {"itemId": "Zdh0qJ2v", "itemName": "y4R9YjMm", "itemSku": "ibpPvG4z", "itemType": "yQsbBRfc"}, "quantity": 68, "type": "ITEM"}, {"currency": {"currencyCode": "vLHeUxP3", "namespace": "YTuIXYjD"}, "item": {"itemId": "Y3Upb0vs", "itemName": "cMMz7E0d", "itemSku": "nMCQTLv6", "itemType": "LYE0c1Bq"}, "quantity": 32, "type": "CURRENCY"}, {"currency": {"currencyCode": "tQJvLmxO", "namespace": "lgG4dw8i"}, "item": {"itemId": "c9L9FHel", "itemName": "A3NRTIxJ", "itemSku": "L8U9Vw6S", "itemType": "AgqjsoRB"}, "quantity": 16, "type": "ITEM"}], "rvn": 65}, {"autoUpdate": false, "enableRevocation": true, "id": "6IA4Fl00", "rewards": [{"currency": {"currencyCode": "d8LC81Lv", "namespace": "uh1o3f8R"}, "item": {"itemId": "IrPYfVYS", "itemName": "ugJ1evjK", "itemSku": "LFP0Q9a0", "itemType": "ZHxXZYV5"}, "quantity": 71, "type": "CURRENCY"}, {"currency": {"currencyCode": "QqZOEXot", "namespace": "1wjt6VJe"}, "item": {"itemId": "XCjYHYtW", "itemName": "apGcEW77", "itemSku": "Aw6EWCFg", "itemType": "GVzpPXAe"}, "quantity": 60, "type": "CURRENCY"}, {"currency": {"currencyCode": "XwP0TBNm", "namespace": "yNF9mgWI"}, "item": {"itemId": "rlSQPekz", "itemName": "vfHt1ZPK", "itemSku": "Jy1zeFpE", "itemType": "Y9cGBOUX"}, "quantity": 34, "type": "CURRENCY"}], "rvn": 3}, {"autoUpdate": false, "enableRevocation": true, "id": "MN7McJ5g", "rewards": [{"currency": {"currencyCode": "Jnnf97Pi", "namespace": "RcFkHx8E"}, "item": {"itemId": "y0B4hw0I", "itemName": "86clC5Aq", "itemSku": "6K6QebxZ", "itemType": "dK6X1AaV"}, "quantity": 93, "type": "CURRENCY"}, {"currency": {"currencyCode": "tHuIMnzh", "namespace": "YD8EzbXx"}, "item": {"itemId": "RsDPZbl4", "itemName": "NYdulAXr", "itemSku": "zo426nRo", "itemType": "tgO2lM47"}, "quantity": 41, "type": "ITEM"}, {"currency": {"currencyCode": "1AUAqsNX", "namespace": "CQkH7X35"}, "item": {"itemId": "4BGojtgA", "itemName": "dLarIbs1", "itemSku": "SgYTMrdu", "itemType": "LRPeLkys"}, "quantity": 98, "type": "ITEM"}], "rvn": 34}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateDLCItemConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 60 'UpdateDLCItemConfig' test.out

#- 61 DeleteDLCItemConfig
$CLI_EXE \
    --sn platform \
    --op DeleteDLCItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 61 'DeleteDLCItemConfig' test.out

#- 62 GetPlatformDLCConfig
$CLI_EXE \
    --sn platform \
    --op GetPlatformDLCConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 62 'GetPlatformDLCConfig' test.out

#- 63 UpdatePlatformDLCConfig
# body param: body
echo '{"data": [{"platform": "PSN", "platformDlcIdMap": {"9j2SQ2tW": "5SqnoIke", "KRZqjESr": "A3D24IgW", "rAOU5mcO": "xlbcumxl"}}, {"platform": "EPICGAMES", "platformDlcIdMap": {"yl3B4jgb": "XGTmb4wd", "JLaxIqkT": "4I5tBsg8", "aHd35NQi": "RLg7OIpI"}}, {"platform": "PSN", "platformDlcIdMap": {"GA8XZAsI": "rcLXJhYN", "ARXol0gV": "NkocuvNd", "QQ6767CI": "HI8NC3fv"}}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePlatformDLCConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 63 'UpdatePlatformDLCConfig' test.out

#- 64 DeletePlatformDLCConfig
$CLI_EXE \
    --sn platform \
    --op DeletePlatformDLCConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 64 'DeletePlatformDLCConfig' test.out

#- 65 QueryEntitlements1
$CLI_EXE \
    --sn platform \
    --op QueryEntitlements1 \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --appType 'SOFTWARE' \
    --entitlementClazz 'LOOTBOX' \
    --entitlementName 'LJqDGwuB' \
    --itemId '["tXGNfuTi", "tarSII2y", "4NnIfqin"]' \
    --limit '75' \
    --offset '42' \
    --origin 'Nintendo' \
    --userId 'CPYJFO2a' \
    > test.out 2>&1
eval_tap $? 65 'QueryEntitlements1' test.out

#- 66 QueryEntitlements
$CLI_EXE \
    --sn platform \
    --op QueryEntitlements \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --itemIds '["zHLkHmZj", "VlIka9bQ", "yQStRcNx"]' \
    --limit '14' \
    --offset '47' \
    > test.out 2>&1
eval_tap $? 66 'QueryEntitlements' test.out

#- 67 EnableEntitlementOriginFeature
$CLI_EXE \
    --sn platform \
    --op EnableEntitlementOriginFeature \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 67 'EnableEntitlementOriginFeature' test.out

#- 68 GetEntitlementConfigInfo
$CLI_EXE \
    --sn platform \
    --op GetEntitlementConfigInfo \
    --namespace $AB_NAMESPACE \
    --withoutCache 'false' \
    > test.out 2>&1
eval_tap $? 68 'GetEntitlementConfigInfo' test.out

#- 69 GrantEntitlements
# body param: body
echo '{"entitlementGrantList": [{"collectionId": "mKZpHtqA", "endDate": "1993-05-01T00:00:00Z", "grantedCode": "mDSzYkNn", "itemId": "34dDiDwh", "itemNamespace": "Fr7Aq43I", "language": "ZpV", "metadata": {"JHqBWiOw": {}, "jryOKvTp": {}, "CocowADA": {}}, "origin": "Xbox", "quantity": 90, "region": "57euruhR", "source": "PURCHASE", "startDate": "1998-11-28T00:00:00Z", "storeId": "AjixUQDX"}, {"collectionId": "MflXwTfG", "endDate": "1991-02-17T00:00:00Z", "grantedCode": "9dfFButA", "itemId": "zMYxgm8R", "itemNamespace": "fnHEf1b3", "language": "rgK_LooV-QW", "metadata": {"IDvqSEgM": {}, "uoebTyEd": {}, "N4YKIWU0": {}}, "origin": "Twitch", "quantity": 88, "region": "i0wufyZG", "source": "PROMOTION", "startDate": "1997-05-04T00:00:00Z", "storeId": "KGrN2dif"}, {"collectionId": "iKwlYoRl", "endDate": "1986-10-17T00:00:00Z", "grantedCode": "ixPOAz5J", "itemId": "m5CBZGkJ", "itemNamespace": "YSLPDEKM", "language": "Mf", "metadata": {"QFAQMRl1": {}, "e00HKD6c": {}, "TLm7AtLV": {}}, "origin": "Nintendo", "quantity": 32, "region": "32SsinZy", "source": "PURCHASE", "startDate": "1996-05-09T00:00:00Z", "storeId": "wQFHoTwe"}], "userIds": ["Q3UebM73", "FxOOGpu8", "9a5eXP4W"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op GrantEntitlements \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 69 'GrantEntitlements' test.out

#- 70 RevokeEntitlements
# body param: body
echo '["e3Vk7KXT", "2JanjCla", "BSbYTBTl"]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RevokeEntitlements \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 70 'RevokeEntitlements' test.out

#- 71 GetEntitlement
$CLI_EXE \
    --sn platform \
    --op GetEntitlement \
    --entitlementId 'kksEA6oC' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 71 'GetEntitlement' test.out

#- 72 QueryFulfillmentHistories
$CLI_EXE \
    --sn platform \
    --op QueryFulfillmentHistories \
    --namespace $AB_NAMESPACE \
    --limit '19' \
    --offset '63' \
    --status 'SUCCESS' \
    --userId '2GawDnBe' \
    > test.out 2>&1
eval_tap $? 72 'QueryFulfillmentHistories' test.out

#- 73 QueryIAPClawbackHistory
$CLI_EXE \
    --sn platform \
    --op QueryIAPClawbackHistory \
    --namespace $AB_NAMESPACE \
    --endTime '2HV2wzoh' \
    --eventType 'CHARGEBACK' \
    --externalOrderId 'aSH1EBLW' \
    --limit '85' \
    --offset '95' \
    --startTime 'WNuok6gn' \
    --status 'FAIL' \
    --userId 'mXo8HpIl' \
    > test.out 2>&1
eval_tap $? 73 'QueryIAPClawbackHistory' test.out

#- 74 MockPlayStationStreamEvent
# body param: body
echo '{"body": {"account": "QxcI57dz", "additionalData": {"entitlement": [{"clientTransaction": [{"amountConsumed": 73, "clientTransactionId": "QmjOR151"}, {"amountConsumed": 79, "clientTransactionId": "ljmF0VXr"}, {"amountConsumed": 59, "clientTransactionId": "hnDaZUcy"}], "entitlementId": "FcoufpjE", "usageCount": 98}, {"clientTransaction": [{"amountConsumed": 36, "clientTransactionId": "x3FJkcIq"}, {"amountConsumed": 42, "clientTransactionId": "t4Qg0VGS"}, {"amountConsumed": 74, "clientTransactionId": "f4OqEb5K"}], "entitlementId": "Mcdt9691", "usageCount": 29}, {"clientTransaction": [{"amountConsumed": 91, "clientTransactionId": "K4qXINEv"}, {"amountConsumed": 27, "clientTransactionId": "ZVqD2NEq"}, {"amountConsumed": 76, "clientTransactionId": "btIkr45d"}], "entitlementId": "lGaZx4z3", "usageCount": 30}], "purpose": "sVQqynhP"}, "originalTitleName": "98m56GlU", "paymentProductSKU": "Kp38CcjV", "purchaseDate": "rHvY43fl", "sourceOrderItemId": "A2cnnFxO", "titleName": "vhH6VeuN"}, "eventDomain": "75No9sIc", "eventSource": "ZMygoIFV", "eventType": "syuykqj3", "eventVersion": 85, "id": "ZaNSelMu", "timestamp": "CJC0P45Z"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op MockPlayStationStreamEvent \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 74 'MockPlayStationStreamEvent' test.out

#- 75 MockXblClawbackEvent
# body param: body
echo '{"data": {"eventDate": "Vs5JjnoI", "eventState": "fMdD3k63", "lineItemId": "KoMPyoo4", "orderId": "m7ONKeDo", "productId": "8h9nj9ix", "productType": "YvKhGSct", "purchasedDate": "g8UQ3vcl", "sandboxId": "YcK2bYE1", "skuId": "8YbgSgVz", "subscriptionData": {"consumedDurationInDays": 98, "dateTime": "YGdkPsoU", "durationInDays": 60, "recurrenceId": "dldKZodz"}}, "datacontenttype": "qsKGBdgj", "id": "hEY7ACiu", "source": "UXgSaoCc", "specVersion": "ZVe0PCc5", "subject": "7QFhuNaq", "time": "yHpiNXsq", "traceparent": "VpCEAETQ", "type": "XCPFq9aV"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op MockXblClawbackEvent \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 75 'MockXblClawbackEvent' test.out

#- 76 GetAppleIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetAppleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 76 'GetAppleIAPConfig' test.out

#- 77 UpdateAppleIAPConfig
# body param: body
echo '{"appAppleId": 20, "bundleId": "aMML006f", "issuerId": "tNpQaBo8", "keyId": "cfd0MkBw", "password": "QDe1F4MU", "version": "V2"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateAppleIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 77 'UpdateAppleIAPConfig' test.out

#- 78 DeleteAppleIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteAppleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 78 'DeleteAppleIAPConfig' test.out

#- 79 UpdateAppleP8File
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UpdateAppleP8File \
    --namespace $AB_NAMESPACE \
    --upload file $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 79 'UpdateAppleP8File' test.out

#- 80 GetEpicGamesIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetEpicGamesIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 80 'GetEpicGamesIAPConfig' test.out

#- 81 UpdateEpicGamesIAPConfig
# body param: body
echo '{"sandboxId": "LR4KSQwP"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateEpicGamesIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 81 'UpdateEpicGamesIAPConfig' test.out

#- 82 DeleteEpicGamesIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteEpicGamesIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 82 'DeleteEpicGamesIAPConfig' test.out

#- 83 GetGoogleIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetGoogleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 83 'GetGoogleIAPConfig' test.out

#- 84 UpdateGoogleIAPConfig
# body param: body
echo '{"applicationName": "ME6OeLTg", "notificationTokenAudience": "OEJcShko", "notificationTokenEmail": "JIyiNpY3", "packageName": "AMSGSasQ", "serviceAccountId": "U1l5Fe0C"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateGoogleIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 84 'UpdateGoogleIAPConfig' test.out

#- 85 DeleteGoogleIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteGoogleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 85 'DeleteGoogleIAPConfig' test.out

#- 86 UpdateGoogleP12File
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UpdateGoogleP12File \
    --namespace $AB_NAMESPACE \
    --upload file $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 86 'UpdateGoogleP12File' test.out

#- 87 GetIAPItemConfig
$CLI_EXE \
    --sn platform \
    --op GetIAPItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 87 'GetIAPItemConfig' test.out

#- 88 UpdateIAPItemConfig
# body param: body
echo '{"data": [{"itemIdentity": "SAV6MCYF", "itemIdentityType": "ITEM_ID", "platformProductIdMap": {"OWGgs0Cc": "zXqokkSj", "HtE3m6mF": "8s2JiTl3", "DytHeJBw": "KBD0q9LM"}}, {"itemIdentity": "byDtldTS", "itemIdentityType": "ITEM_ID", "platformProductIdMap": {"V4LcjH6R": "f2RfZvdo", "vivUwLEu": "TcgNcsAm", "JTp8BNsi": "pU1jvwJn"}}, {"itemIdentity": "MvmgkC7T", "itemIdentityType": "ITEM_ID", "platformProductIdMap": {"VJEZriPW": "QkyiRuvT", "KPUEHycs": "nMvCMz5i", "kgaZQ4cz": "pNlYPQ1x"}}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateIAPItemConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 88 'UpdateIAPItemConfig' test.out

#- 89 DeleteIAPItemConfig
$CLI_EXE \
    --sn platform \
    --op DeleteIAPItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 89 'DeleteIAPItemConfig' test.out

#- 90 GetOculusIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetOculusIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 90 'GetOculusIAPConfig' test.out

#- 91 UpdateOculusIAPConfig
# body param: body
echo '{"appId": "gWAla8S6", "appSecret": "3zdo0P7x"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateOculusIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 91 'UpdateOculusIAPConfig' test.out

#- 92 DeleteOculusIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteOculusIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 92 'DeleteOculusIAPConfig' test.out

#- 93 GetPlayStationIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetPlayStationIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 93 'GetPlayStationIAPConfig' test.out

#- 94 UpdatePlaystationIAPConfig
# body param: body
echo '{"backOfficeServerClientId": "eQuu8L1M", "backOfficeServerClientSecret": "Mz6REpLq", "enableStreamJob": false, "environment": "933yQWlS", "streamName": "EHFolmFM", "streamPartnerName": "VMfYaXwh"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePlaystationIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 94 'UpdatePlaystationIAPConfig' test.out

#- 95 DeletePlaystationIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeletePlaystationIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 95 'DeletePlaystationIAPConfig' test.out

#- 96 ValidateExistedPlaystationIAPConfig
$CLI_EXE \
    --sn platform \
    --op ValidateExistedPlaystationIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 96 'ValidateExistedPlaystationIAPConfig' test.out

#- 97 ValidatePlaystationIAPConfig
# body param: body
echo '{"backOfficeServerClientId": "mGlD4AQs", "backOfficeServerClientSecret": "ykFwkFyV", "enableStreamJob": false, "environment": "Cuub3Kqm", "streamName": "kpAvLjcr", "streamPartnerName": "yP84OLcD"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ValidatePlaystationIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 97 'ValidatePlaystationIAPConfig' test.out

#- 98 GetSteamIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetSteamIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 98 'GetSteamIAPConfig' test.out

#- 99 UpdateSteamIAPConfig
# body param: body
echo '{"appId": "7ZV4ZxHv", "env": "LIVE", "publisherAuthenticationKey": "aAHflfkO", "syncMode": "INVENTORY"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateSteamIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 99 'UpdateSteamIAPConfig' test.out

#- 100 DeleteSteamIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteSteamIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 100 'DeleteSteamIAPConfig' test.out

#- 101 GetTwitchIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetTwitchIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 101 'GetTwitchIAPConfig' test.out

#- 102 UpdateTwitchIAPConfig
# body param: body
echo '{"clientId": "xwxSJbZR", "clientSecret": "NtItvUgT", "organizationId": "h07y7dAk"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateTwitchIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 102 'UpdateTwitchIAPConfig' test.out

#- 103 DeleteTwitchIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteTwitchIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 103 'DeleteTwitchIAPConfig' test.out

#- 104 GetXblIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetXblIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 104 'GetXblIAPConfig' test.out

#- 105 UpdateXblIAPConfig
# body param: body
echo '{"enableClawback": false, "entraAppClientId": "LqolRHX6", "entraAppClientSecret": "6VKqtQmk", "entraTenantId": "X0Xbuiuv", "relyingPartyCert": "qFWWfvf0"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXblIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 105 'UpdateXblIAPConfig' test.out

#- 106 DeleteXblAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteXblAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 106 'DeleteXblAPConfig' test.out

#- 107 UpdateXblBPCertFile
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UpdateXblBPCertFile \
    --namespace $AB_NAMESPACE \
    --upload file $TEMP_FILE_UPLOAD \
    --password 'nAuyPCoO' \
    > test.out 2>&1
eval_tap $? 107 'UpdateXblBPCertFile' test.out

#- 108 QueryThirdPartyNotifications
$CLI_EXE \
    --sn platform \
    --op QueryThirdPartyNotifications \
    --namespace $AB_NAMESPACE \
    --endDate 'eUn5m5Ul' \
    --externalId 'z3vaS9WK' \
    --limit '61' \
    --offset '51' \
    --source 'TWITCH' \
    --startDate 'tgdt0XqX' \
    --status 'PROCESSED' \
    --type 'k4PQlzhI' \
    > test.out 2>&1
eval_tap $? 108 'QueryThirdPartyNotifications' test.out

#- 109 QueryAbnormalTransactions
$CLI_EXE \
    --sn platform \
    --op QueryAbnormalTransactions \
    --namespace $AB_NAMESPACE \
    --limit '10' \
    --offset '24' \
    --orderId '8Ii0g6PP' \
    --steamId 'GqKG3RNm' \
    > test.out 2>&1
eval_tap $? 109 'QueryAbnormalTransactions' test.out

#- 110 AdminGetSteamJobInfo
$CLI_EXE \
    --sn platform \
    --op AdminGetSteamJobInfo \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 110 'AdminGetSteamJobInfo' test.out

#- 111 AdminResetSteamJobTime
# body param: body
echo '{"env": "LIVE", "lastTime": "1995-10-14T00:00:00Z"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op AdminResetSteamJobTime \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 111 'AdminResetSteamJobTime' test.out

#- 112 AdminRefundIAPOrder
$CLI_EXE \
    --sn platform \
    --op AdminRefundIAPOrder \
    --iapOrderNo 't7h8VzGa' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 112 'AdminRefundIAPOrder' test.out

#- 113 QuerySteamReportHistories
$CLI_EXE \
    --sn platform \
    --op QuerySteamReportHistories \
    --namespace $AB_NAMESPACE \
    --limit '64' \
    --offset '58' \
    --orderId 'LYiwLuF1' \
    --processStatus 'PROCESSED' \
    --steamId 'o29pU0Ls' \
    > test.out 2>&1
eval_tap $? 113 'QuerySteamReportHistories' test.out

#- 114 QueryThirdPartySubscription
$CLI_EXE \
    --sn platform \
    --op QueryThirdPartySubscription \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --groupId 'SvTpRomY' \
    --limit '47' \
    --offset '45' \
    --platform 'XBOX' \
    --productId 'JT4tMaWI' \
    --userId 'VIVpe1mQ' \
    > test.out 2>&1
eval_tap $? 114 'QueryThirdPartySubscription' test.out

#- 115 GetIAPOrderConsumeDetails
$CLI_EXE \
    --sn platform \
    --op GetIAPOrderConsumeDetails \
    --iapOrderNo 'RVXdkPFm' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 115 'GetIAPOrderConsumeDetails' test.out

#- 116 DownloadInvoiceDetails
$CLI_EXE \
    --sn platform \
    --op DownloadInvoiceDetails \
    --namespace $AB_NAMESPACE \
    --endTime 'WzIOCArR' \
    --feature '0tXxAnoj' \
    --itemId 'urEHYQXq' \
    --itemType 'COINS' \
    --startTime 'ovDGZWrH' \
    > test.out 2>&1
eval_tap $? 116 'DownloadInvoiceDetails' test.out

#- 117 GenerateInvoiceSummary
$CLI_EXE \
    --sn platform \
    --op GenerateInvoiceSummary \
    --namespace $AB_NAMESPACE \
    --endTime 'SdwK6lyo' \
    --feature '1cPzSROk' \
    --itemId 'DjPqetRS' \
    --itemType 'SEASON' \
    --startTime 'KqBzf1bu' \
    > test.out 2>&1
eval_tap $? 117 'GenerateInvoiceSummary' test.out

#- 118 SyncInGameItem
# body param: body
echo '{"categoryPath": "Bu645c2s", "targetItemId": "wKcUmhCw", "targetNamespace": "igAGAlnX"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncInGameItem \
    --namespace $AB_NAMESPACE \
    --storeId 'HX7BeAcw' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 118 'SyncInGameItem' test.out

#- 119 CreateItem
# body param: body
echo '{"appId": "g6bIOEjG", "appType": "DLC", "baseAppId": "arjlnuab", "boothName": "F3RFQ1xH", "categoryPath": "RWFCA0jX", "clazz": "PiqtaAME", "displayOrder": 35, "entitlementType": "DURABLE", "ext": {"hJFrehWY": {}, "ZyiCA1oR": {}, "Q1LsUT8e": {}}, "features": ["kiTlE6Yy", "b18ahzXz", "IToxllw6"], "flexible": false, "images": [{"as": "GmfCxXuD", "caption": "9qWkuv2Z", "height": 40, "imageUrl": "fY8Q3m3a", "smallImageUrl": "NLpewnaM", "width": 15}, {"as": "gnjoJ9li", "caption": "wL5lUpVi", "height": 2, "imageUrl": "Qlt95Pyq", "smallImageUrl": "uXfIOUVY", "width": 95}, {"as": "lZFGhcHF", "caption": "wtf7htEW", "height": 27, "imageUrl": "Jnh1AfWH", "smallImageUrl": "SPOHzYYX", "width": 6}], "inventoryConfig": {"customAttributes": {"gqWDhodX": {}, "0SSTUDDC": {}, "1mlm9AfX": {}}, "serverCustomAttributes": {"i4Aims41": {}, "r7esdmJM": {}, "g6MnCwzT": {}}, "slotUsed": 11}, "itemIds": ["RJLeRSv3", "cBLXanry", "Vb3NyZfX"], "itemQty": {"oCbUPFen": 22, "b0T2B7sL": 3, "dj5hBqus": 85}, "itemType": "LOOTBOX", "listable": false, "localizations": {"6g6DhGMW": {"description": "2mv5d16I", "localExt": {"gXOCK0y3": {}, "WL4kV7RB": {}, "OebMJiYI": {}}, "longDescription": "OBMRiwD1", "title": "1E8twwED"}, "tzoHs4Gu": {"description": "MYZlDCPt", "localExt": {"Ea8FVRqs": {}, "Er5B9fDR": {}, "588q3wtY": {}}, "longDescription": "dpAxZiL9", "title": "pxYSt9Eh"}, "y10HXd2e": {"description": "eytsXIBP", "localExt": {"VxTnqurG": {}, "2thqivLp": {}, "ClQRRoYV": {}}, "longDescription": "12oUNOYF", "title": "W0wcBm2B"}}, "lootBoxConfig": {"rewardCount": 13, "rewards": [{"lootBoxItems": [{"count": 21, "duration": 56, "endDate": "1986-10-10T00:00:00Z", "itemId": "WnWhtqRn", "itemSku": "jcLqHCpy", "itemType": "jN06fRnV"}, {"count": 46, "duration": 10, "endDate": "1976-08-30T00:00:00Z", "itemId": "5YWn1SSA", "itemSku": "qMD9I4mq", "itemType": "8b5TuW1Q"}, {"count": 18, "duration": 81, "endDate": "1979-04-27T00:00:00Z", "itemId": "IsWA2lCK", "itemSku": "9BYcUtLS", "itemType": "8vgVk2bO"}], "name": "OpKd0YCk", "odds": 0.9890361978720245, "type": "REWARD", "weight": 91}, {"lootBoxItems": [{"count": 24, "duration": 99, "endDate": "1997-01-14T00:00:00Z", "itemId": "pcNW1CCG", "itemSku": "e9rFJH5t", "itemType": "GeRYXjha"}, {"count": 14, "duration": 74, "endDate": "1979-09-07T00:00:00Z", "itemId": "LYfhLMpx", "itemSku": "AYunGMWh", "itemType": "Ue8dJSGf"}, {"count": 63, "duration": 18, "endDate": "1991-09-19T00:00:00Z", "itemId": "HHkpIPGA", "itemSku": "jaJ2ThP1", "itemType": "WSXgjjXR"}], "name": "OIkJo3I8", "odds": 0.4423589443271221, "type": "PROBABILITY_GROUP", "weight": 12}, {"lootBoxItems": [{"count": 33, "duration": 9, "endDate": "1988-03-25T00:00:00Z", "itemId": "VaEAvrHb", "itemSku": "fH5D0EgV", "itemType": "qYIkkwAB"}, {"count": 39, "duration": 14, "endDate": "1975-09-17T00:00:00Z", "itemId": "VmNXl48R", "itemSku": "5pGKuI43", "itemType": "acoVBZNG"}, {"count": 7, "duration": 19, "endDate": "1981-03-19T00:00:00Z", "itemId": "pX4HX4U5", "itemSku": "HjcWaFXG", "itemType": "ESKS1DCd"}], "name": "kf0zRt06", "odds": 0.780738203291504, "type": "REWARD_GROUP", "weight": 16}], "rollFunction": "CUSTOM"}, "maxCount": 52, "maxCountPerUser": 11, "name": "B3K4GUxh", "optionBoxConfig": {"boxItems": [{"count": 100, "duration": 83, "endDate": "1983-06-30T00:00:00Z", "itemId": "ztj76BYL", "itemSku": "dKtMVemd", "itemType": "QbETWuCn"}, {"count": 41, "duration": 23, "endDate": "1972-12-24T00:00:00Z", "itemId": "BYldx7yV", "itemSku": "EHvbPzxN", "itemType": "v5dhkgDj"}, {"count": 69, "duration": 85, "endDate": "1977-02-06T00:00:00Z", "itemId": "QYf3UHrH", "itemSku": "9SURjE6M", "itemType": "hK68B5td"}]}, "purchasable": true, "recurring": {"cycle": "WEEKLY", "fixedFreeDays": 34, "fixedTrialCycles": 79, "graceDays": 24}, "regionData": {"AGyLarU5": [{"currencyCode": "9t8Bxy9I", "currencyNamespace": "EKwgDJy0", "currencyType": "VIRTUAL", "discountAmount": 55, "discountExpireAt": "1975-12-27T00:00:00Z", "discountPercentage": 73, "discountPurchaseAt": "1972-02-17T00:00:00Z", "expireAt": "1984-08-25T00:00:00Z", "price": 64, "purchaseAt": "1997-04-23T00:00:00Z", "trialPrice": 26}, {"currencyCode": "2fG9DGGX", "currencyNamespace": "fMTVLfnE", "currencyType": "VIRTUAL", "discountAmount": 1, "discountExpireAt": "1994-10-15T00:00:00Z", "discountPercentage": 67, "discountPurchaseAt": "1976-03-10T00:00:00Z", "expireAt": "1975-10-04T00:00:00Z", "price": 91, "purchaseAt": "1972-11-19T00:00:00Z", "trialPrice": 7}, {"currencyCode": "WhFxn8Sq", "currencyNamespace": "MuDRw11i", "currencyType": "REAL", "discountAmount": 4, "discountExpireAt": "1979-06-06T00:00:00Z", "discountPercentage": 93, "discountPurchaseAt": "1993-02-09T00:00:00Z", "expireAt": "1982-01-14T00:00:00Z", "price": 83, "purchaseAt": "1995-11-24T00:00:00Z", "trialPrice": 7}], "W16fVp9r": [{"currencyCode": "xKA41Zhk", "currencyNamespace": "2p55CdVl", "currencyType": "VIRTUAL", "discountAmount": 68, "discountExpireAt": "1971-03-15T00:00:00Z", "discountPercentage": 53, "discountPurchaseAt": "1986-04-07T00:00:00Z", "expireAt": "1980-11-11T00:00:00Z", "price": 11, "purchaseAt": "1982-10-19T00:00:00Z", "trialPrice": 59}, {"currencyCode": "A5dff5ke", "currencyNamespace": "PZ59iZk6", "currencyType": "REAL", "discountAmount": 12, "discountExpireAt": "1973-07-16T00:00:00Z", "discountPercentage": 60, "discountPurchaseAt": "1984-06-11T00:00:00Z", "expireAt": "1972-11-10T00:00:00Z", "price": 10, "purchaseAt": "1994-07-14T00:00:00Z", "trialPrice": 99}, {"currencyCode": "12yp9pTp", "currencyNamespace": "mb7BiBcm", "currencyType": "VIRTUAL", "discountAmount": 97, "discountExpireAt": "1977-01-23T00:00:00Z", "discountPercentage": 76, "discountPurchaseAt": "1978-07-06T00:00:00Z", "expireAt": "1976-11-15T00:00:00Z", "price": 33, "purchaseAt": "1985-06-27T00:00:00Z", "trialPrice": 0}], "1GoJcIzP": [{"currencyCode": "r8MXbOz0", "currencyNamespace": "wAzKuMbk", "currencyType": "REAL", "discountAmount": 96, "discountExpireAt": "1999-05-19T00:00:00Z", "discountPercentage": 34, "discountPurchaseAt": "1971-02-28T00:00:00Z", "expireAt": "1995-08-23T00:00:00Z", "price": 100, "purchaseAt": "1973-10-26T00:00:00Z", "trialPrice": 36}, {"currencyCode": "NiRhAFlH", "currencyNamespace": "imggcrcD", "currencyType": "REAL", "discountAmount": 80, "discountExpireAt": "1992-03-21T00:00:00Z", "discountPercentage": 67, "discountPurchaseAt": "1998-06-22T00:00:00Z", "expireAt": "1986-01-05T00:00:00Z", "price": 19, "purchaseAt": "1971-05-16T00:00:00Z", "trialPrice": 29}, {"currencyCode": "XddiBwKx", "currencyNamespace": "LG4av2YL", "currencyType": "REAL", "discountAmount": 80, "discountExpireAt": "1973-07-21T00:00:00Z", "discountPercentage": 26, "discountPurchaseAt": "1989-09-12T00:00:00Z", "expireAt": "1983-04-08T00:00:00Z", "price": 44, "purchaseAt": "1972-06-18T00:00:00Z", "trialPrice": 14}]}, "saleConfig": {"currencyCode": "Ku2A6O8E", "price": 29}, "seasonType": "TIER", "sectionExclusive": true, "sellable": true, "sku": "bwTJ5uht", "stackable": false, "status": "INACTIVE", "tags": ["rcgbxz8h", "IqRUcYfG", "eMuauwC6"], "targetCurrencyCode": "3COuqpjz", "targetNamespace": "8hCFuynk", "thumbnailUrl": "AGSLPoLN", "useCount": 33}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateItem \
    --namespace $AB_NAMESPACE \
    --storeId 'Hd4lJnD3' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 119 'CreateItem' test.out

#- 120 GetItemByAppId
$CLI_EXE \
    --sn platform \
    --op GetItemByAppId \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --storeId 'rvZDHTjs' \
    --appId 'C4WML7S1' \
    > test.out 2>&1
eval_tap $? 120 'GetItemByAppId' test.out

#- 121 QueryItems
$CLI_EXE \
    --sn platform \
    --op QueryItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --appType 'DLC' \
    --availableDate 'n5IGNpVl' \
    --baseAppId 'pjHXjeY5' \
    --categoryPath 'aZ3ladKn' \
    --features 'kPs2OpSM' \
    --includeSubCategoryItem 'false' \
    --itemType 'SEASON' \
    --limit '34' \
    --offset '94' \
    --region 'XwbYrNdB' \
    --sortBy '["createdAt:asc", "name", "updatedAt:desc"]' \
    --storeId 'RlUZT7T4' \
    --tags 'lOOywVCQ' \
    --targetNamespace 'F8TOnxzn' \
    > test.out 2>&1
eval_tap $? 121 'QueryItems' test.out

#- 122 ListBasicItemsByFeatures
$CLI_EXE \
    --sn platform \
    --op ListBasicItemsByFeatures \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --features '["jkUebFZX", "XE7EnLXb", "5IQBiaT3"]' \
    > test.out 2>&1
eval_tap $? 122 'ListBasicItemsByFeatures' test.out

#- 123 GetItems
$CLI_EXE \
    --sn platform \
    --op GetItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --storeId 'XjC1l7K2' \
    --itemIds 'Dt1GNLNO' \
    > test.out 2>&1
eval_tap $? 123 'GetItems' test.out

#- 124 GetItemBySku
$CLI_EXE \
    --sn platform \
    --op GetItemBySku \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --storeId 'nxNte3B0' \
    --sku 'OfQGcaxY' \
    > test.out 2>&1
eval_tap $? 124 'GetItemBySku' test.out

#- 125 GetLocaleItemBySku
$CLI_EXE \
    --sn platform \
    --op GetLocaleItemBySku \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --language 'JUTqaRJt' \
    --populateBundle 'true' \
    --region 'P2nZZEER' \
    --storeId 'DeCwehjr' \
    --sku 'dVEugCrt' \
    > test.out 2>&1
eval_tap $? 125 'GetLocaleItemBySku' test.out

#- 126 GetEstimatedPrice
$CLI_EXE \
    --sn platform \
    --op GetEstimatedPrice \
    --namespace $AB_NAMESPACE \
    --platform 'UIfTm8qx' \
    --region 'GUNOf0s3' \
    --storeId '9Qt9FaW5' \
    --itemIds 'RAyrKg8s' \
    --userId 'myd5YCX5' \
    > test.out 2>&1
eval_tap $? 126 'GetEstimatedPrice' test.out

#- 127 GetItemIdBySku
$CLI_EXE \
    --sn platform \
    --op GetItemIdBySku \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --storeId 'vrIbcYjf' \
    --sku 'bTl0LMEm' \
    > test.out 2>&1
eval_tap $? 127 'GetItemIdBySku' test.out

#- 128 GetBulkItemIdBySkus
$CLI_EXE \
    --sn platform \
    --op GetBulkItemIdBySkus \
    --namespace $AB_NAMESPACE \
    --sku '["Ra9LQrDY", "doOPDBdR", "w075L07w"]' \
    --storeId 'RsOmGMts' \
    > test.out 2>&1
eval_tap $? 128 'GetBulkItemIdBySkus' test.out

#- 129 BulkGetLocaleItems
$CLI_EXE \
    --sn platform \
    --op BulkGetLocaleItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --language 'ZyuPkkZS' \
    --region '0ETw2wIc' \
    --storeId 'UxwegckP' \
    --itemIds 'dAGsZq0x' \
    > test.out 2>&1
eval_tap $? 129 'BulkGetLocaleItems' test.out

#- 130 GetAvailablePredicateTypes
$CLI_EXE \
    --sn platform \
    --op GetAvailablePredicateTypes \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 130 'GetAvailablePredicateTypes' test.out

#- 131 ValidateItemPurchaseCondition
# body param: body
echo '{"itemIds": ["khHoatBB", "08otKvbx", "gBwjLW32"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ValidateItemPurchaseCondition \
    --namespace $AB_NAMESPACE \
    --platform '73wQeyQu' \
    --userId '25mBStsS' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 131 'ValidateItemPurchaseCondition' test.out

#- 132 BulkUpdateRegionData
# body param: body
echo '{"changes": [{"itemIdentities": ["oevAky1K", "m2CKSGM8", "V3X2MJ26"], "itemIdentityType": "ITEM_SKU", "regionData": {"djzqGae7": [{"currencyCode": "mT2piWS0", "currencyNamespace": "REiBbezC", "currencyType": "REAL", "discountAmount": 90, "discountExpireAt": "1993-02-18T00:00:00Z", "discountPercentage": 35, "discountPurchaseAt": "1993-07-22T00:00:00Z", "discountedPrice": 82, "expireAt": "1973-08-14T00:00:00Z", "price": 33, "purchaseAt": "1981-11-26T00:00:00Z", "trialPrice": 71}, {"currencyCode": "ulQJ4XoS", "currencyNamespace": "27hhV7c3", "currencyType": "REAL", "discountAmount": 73, "discountExpireAt": "1975-02-16T00:00:00Z", "discountPercentage": 55, "discountPurchaseAt": "1971-11-23T00:00:00Z", "discountedPrice": 29, "expireAt": "1972-05-25T00:00:00Z", "price": 48, "purchaseAt": "1974-02-13T00:00:00Z", "trialPrice": 50}, {"currencyCode": "ZoAjWMRZ", "currencyNamespace": "MfNzeJw3", "currencyType": "REAL", "discountAmount": 62, "discountExpireAt": "1976-01-24T00:00:00Z", "discountPercentage": 43, "discountPurchaseAt": "1994-05-25T00:00:00Z", "discountedPrice": 64, "expireAt": "1988-06-05T00:00:00Z", "price": 30, "purchaseAt": "1987-08-10T00:00:00Z", "trialPrice": 97}], "IaP3zV38": [{"currencyCode": "jiFGpyPY", "currencyNamespace": "17iABDXl", "currencyType": "VIRTUAL", "discountAmount": 17, "discountExpireAt": "1974-02-14T00:00:00Z", "discountPercentage": 83, "discountPurchaseAt": "1996-03-05T00:00:00Z", "discountedPrice": 8, "expireAt": "1980-04-17T00:00:00Z", "price": 97, "purchaseAt": "1996-12-23T00:00:00Z", "trialPrice": 46}, {"currencyCode": "jCkeqovF", "currencyNamespace": "x40ttfbc", "currencyType": "REAL", "discountAmount": 44, "discountExpireAt": "1995-12-29T00:00:00Z", "discountPercentage": 2, "discountPurchaseAt": "1996-05-26T00:00:00Z", "discountedPrice": 90, "expireAt": "1989-05-26T00:00:00Z", "price": 76, "purchaseAt": "1972-12-23T00:00:00Z", "trialPrice": 57}, {"currencyCode": "o3zLmcy3", "currencyNamespace": "k6tTSeNu", "currencyType": "VIRTUAL", "discountAmount": 24, "discountExpireAt": "1982-09-17T00:00:00Z", "discountPercentage": 52, "discountPurchaseAt": "1978-04-30T00:00:00Z", "discountedPrice": 30, "expireAt": "1996-03-10T00:00:00Z", "price": 81, "purchaseAt": "1975-04-01T00:00:00Z", "trialPrice": 50}], "EO7Gwi16": [{"currencyCode": "ddlBOYja", "currencyNamespace": "nFKLv60Z", "currencyType": "REAL", "discountAmount": 9, "discountExpireAt": "1986-02-02T00:00:00Z", "discountPercentage": 73, "discountPurchaseAt": "1986-07-23T00:00:00Z", "discountedPrice": 69, "expireAt": "1981-05-12T00:00:00Z", "price": 47, "purchaseAt": "1999-10-24T00:00:00Z", "trialPrice": 54}, {"currencyCode": "axqWRddm", "currencyNamespace": "8LhCAI4q", "currencyType": "REAL", "discountAmount": 92, "discountExpireAt": "1994-10-27T00:00:00Z", "discountPercentage": 41, "discountPurchaseAt": "1996-05-31T00:00:00Z", "discountedPrice": 33, "expireAt": "1983-12-11T00:00:00Z", "price": 30, "purchaseAt": "1972-04-25T00:00:00Z", "trialPrice": 55}, {"currencyCode": "K2oceRM8", "currencyNamespace": "tdv7mwMk", "currencyType": "VIRTUAL", "discountAmount": 98, "discountExpireAt": "1995-05-15T00:00:00Z", "discountPercentage": 59, "discountPurchaseAt": "1980-08-17T00:00:00Z", "discountedPrice": 88, "expireAt": "1984-08-19T00:00:00Z", "price": 40, "purchaseAt": "1991-06-09T00:00:00Z", "trialPrice": 62}]}}, {"itemIdentities": ["hYQTACsO", "lcfqJ0IJ", "4lbZf2EP"], "itemIdentityType": "ITEM_ID", "regionData": {"tkrMI9EL": [{"currencyCode": "KrUQFSb6", "currencyNamespace": "YSHZh8q5", "currencyType": "VIRTUAL", "discountAmount": 86, "discountExpireAt": "1985-11-07T00:00:00Z", "discountPercentage": 99, "discountPurchaseAt": "1979-08-07T00:00:00Z", "discountedPrice": 31, "expireAt": "1976-09-11T00:00:00Z", "price": 80, "purchaseAt": "1976-02-27T00:00:00Z", "trialPrice": 20}, {"currencyCode": "ZD4Jz8Hx", "currencyNamespace": "760uIltK", "currencyType": "VIRTUAL", "discountAmount": 86, "discountExpireAt": "1986-11-11T00:00:00Z", "discountPercentage": 57, "discountPurchaseAt": "1977-07-14T00:00:00Z", "discountedPrice": 76, "expireAt": "1981-05-21T00:00:00Z", "price": 47, "purchaseAt": "1991-10-07T00:00:00Z", "trialPrice": 84}, {"currencyCode": "RrHzs1R7", "currencyNamespace": "DNQA52wh", "currencyType": "VIRTUAL", "discountAmount": 85, "discountExpireAt": "1972-03-21T00:00:00Z", "discountPercentage": 7, "discountPurchaseAt": "1990-09-17T00:00:00Z", "discountedPrice": 62, "expireAt": "1983-07-01T00:00:00Z", "price": 52, "purchaseAt": "1995-09-02T00:00:00Z", "trialPrice": 36}], "TplSHmK7": [{"currencyCode": "d2iLhkgH", "currencyNamespace": "Y4Jc6jdQ", "currencyType": "REAL", "discountAmount": 26, "discountExpireAt": "1992-08-26T00:00:00Z", "discountPercentage": 21, "discountPurchaseAt": "1989-11-11T00:00:00Z", "discountedPrice": 85, "expireAt": "1980-12-18T00:00:00Z", "price": 97, "purchaseAt": "1990-08-06T00:00:00Z", "trialPrice": 51}, {"currencyCode": "3Qdy7bXN", "currencyNamespace": "T1Jjj0KK", "currencyType": "VIRTUAL", "discountAmount": 95, "discountExpireAt": "1981-05-31T00:00:00Z", "discountPercentage": 52, "discountPurchaseAt": "1999-10-13T00:00:00Z", "discountedPrice": 100, "expireAt": "1999-04-26T00:00:00Z", "price": 6, "purchaseAt": "1992-10-22T00:00:00Z", "trialPrice": 37}, {"currencyCode": "i7lTOpsj", "currencyNamespace": "sXTrS49q", "currencyType": "REAL", "discountAmount": 98, "discountExpireAt": "1987-02-19T00:00:00Z", "discountPercentage": 27, "discountPurchaseAt": "1999-02-12T00:00:00Z", "discountedPrice": 24, "expireAt": "1975-08-26T00:00:00Z", "price": 10, "purchaseAt": "1998-05-29T00:00:00Z", "trialPrice": 35}], "Qj19dEmJ": [{"currencyCode": "srFFwVck", "currencyNamespace": "N7DQWOK8", "currencyType": "REAL", "discountAmount": 99, "discountExpireAt": "1996-02-03T00:00:00Z", "discountPercentage": 70, "discountPurchaseAt": "1978-08-05T00:00:00Z", "discountedPrice": 44, "expireAt": "1982-11-30T00:00:00Z", "price": 69, "purchaseAt": "1996-06-01T00:00:00Z", "trialPrice": 87}, {"currencyCode": "AXUnK68R", "currencyNamespace": "LkvHJbce", "currencyType": "REAL", "discountAmount": 5, "discountExpireAt": "1977-10-01T00:00:00Z", "discountPercentage": 27, "discountPurchaseAt": "1982-10-26T00:00:00Z", "discountedPrice": 20, "expireAt": "1999-06-10T00:00:00Z", "price": 84, "purchaseAt": "1984-08-12T00:00:00Z", "trialPrice": 35}, {"currencyCode": "9W2SQ4IH", "currencyNamespace": "4nPICni8", "currencyType": "VIRTUAL", "discountAmount": 10, "discountExpireAt": "1992-09-12T00:00:00Z", "discountPercentage": 92, "discountPurchaseAt": "1989-10-16T00:00:00Z", "discountedPrice": 2, "expireAt": "1988-12-08T00:00:00Z", "price": 9, "purchaseAt": "1972-07-08T00:00:00Z", "trialPrice": 35}]}}, {"itemIdentities": ["WcxuKrTK", "CBoCiJSb", "xwY1NgOG"], "itemIdentityType": "ITEM_ID", "regionData": {"vpaROhu3": [{"currencyCode": "l6FjcPSe", "currencyNamespace": "8C9WWHSc", "currencyType": "REAL", "discountAmount": 54, "discountExpireAt": "1980-08-01T00:00:00Z", "discountPercentage": 34, "discountPurchaseAt": "1977-03-31T00:00:00Z", "discountedPrice": 83, "expireAt": "1990-11-12T00:00:00Z", "price": 73, "purchaseAt": "1993-05-20T00:00:00Z", "trialPrice": 32}, {"currencyCode": "yXFPKIsx", "currencyNamespace": "4aEPlLWQ", "currencyType": "VIRTUAL", "discountAmount": 100, "discountExpireAt": "1994-07-27T00:00:00Z", "discountPercentage": 46, "discountPurchaseAt": "1995-05-21T00:00:00Z", "discountedPrice": 18, "expireAt": "1981-10-08T00:00:00Z", "price": 80, "purchaseAt": "1991-04-20T00:00:00Z", "trialPrice": 67}, {"currencyCode": "k9f6thjb", "currencyNamespace": "hBfu3Nii", "currencyType": "VIRTUAL", "discountAmount": 12, "discountExpireAt": "1971-10-13T00:00:00Z", "discountPercentage": 73, "discountPurchaseAt": "1997-04-04T00:00:00Z", "discountedPrice": 2, "expireAt": "1997-04-27T00:00:00Z", "price": 0, "purchaseAt": "1993-10-29T00:00:00Z", "trialPrice": 41}], "17cn1gpc": [{"currencyCode": "ZxxutKnm", "currencyNamespace": "LNyVWJ0w", "currencyType": "REAL", "discountAmount": 32, "discountExpireAt": "1990-02-23T00:00:00Z", "discountPercentage": 31, "discountPurchaseAt": "1989-02-24T00:00:00Z", "discountedPrice": 2, "expireAt": "1979-10-04T00:00:00Z", "price": 95, "purchaseAt": "1979-12-22T00:00:00Z", "trialPrice": 83}, {"currencyCode": "vKSCZPih", "currencyNamespace": "vVqtSnwI", "currencyType": "REAL", "discountAmount": 88, "discountExpireAt": "1993-07-30T00:00:00Z", "discountPercentage": 64, "discountPurchaseAt": "1989-05-25T00:00:00Z", "discountedPrice": 63, "expireAt": "1997-11-08T00:00:00Z", "price": 23, "purchaseAt": "1986-08-22T00:00:00Z", "trialPrice": 73}, {"currencyCode": "O7RLeEAd", "currencyNamespace": "LUYIiQzX", "currencyType": "REAL", "discountAmount": 37, "discountExpireAt": "1977-12-09T00:00:00Z", "discountPercentage": 29, "discountPurchaseAt": "1983-09-23T00:00:00Z", "discountedPrice": 57, "expireAt": "1994-01-01T00:00:00Z", "price": 48, "purchaseAt": "1993-07-15T00:00:00Z", "trialPrice": 57}], "ulCFIgPA": [{"currencyCode": "BAKVV4xr", "currencyNamespace": "9Mg8XBfN", "currencyType": "VIRTUAL", "discountAmount": 99, "discountExpireAt": "1995-10-07T00:00:00Z", "discountPercentage": 97, "discountPurchaseAt": "1992-02-29T00:00:00Z", "discountedPrice": 64, "expireAt": "1988-11-08T00:00:00Z", "price": 13, "purchaseAt": "1995-06-14T00:00:00Z", "trialPrice": 13}, {"currencyCode": "RhKeoCYv", "currencyNamespace": "CO5ghq4L", "currencyType": "REAL", "discountAmount": 15, "discountExpireAt": "1985-12-17T00:00:00Z", "discountPercentage": 46, "discountPurchaseAt": "1974-07-23T00:00:00Z", "discountedPrice": 18, "expireAt": "1975-07-29T00:00:00Z", "price": 97, "purchaseAt": "1972-03-07T00:00:00Z", "trialPrice": 20}, {"currencyCode": "jqU6NHzD", "currencyNamespace": "eH6JiWja", "currencyType": "REAL", "discountAmount": 79, "discountExpireAt": "1979-07-26T00:00:00Z", "discountPercentage": 69, "discountPurchaseAt": "1991-02-02T00:00:00Z", "discountedPrice": 78, "expireAt": "1983-09-18T00:00:00Z", "price": 64, "purchaseAt": "1991-10-29T00:00:00Z", "trialPrice": 53}]}}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op BulkUpdateRegionData \
    --namespace $AB_NAMESPACE \
    --storeId 'LqtmaacJ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 132 'BulkUpdateRegionData' test.out

#- 133 SearchItems
$CLI_EXE \
    --sn platform \
    --op SearchItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --itemType 'INGAMEITEM' \
    --limit '8' \
    --offset '65' \
    --sortBy 'fcbHyyrR' \
    --storeId 'yVDovvX3' \
    --keyword '8u0qXbEi' \
    --language 'T2V6Sjwh' \
    > test.out 2>&1
eval_tap $? 133 'SearchItems' test.out

#- 134 QueryUncategorizedItems
$CLI_EXE \
    --sn platform \
    --op QueryUncategorizedItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --limit '46' \
    --offset '31' \
    --sortBy '["displayOrder:asc", "createdAt:desc", "updatedAt:asc"]' \
    --storeId 'fUqV2YoY' \
    > test.out 2>&1
eval_tap $? 134 'QueryUncategorizedItems' test.out

#- 135 GetItem
$CLI_EXE \
    --sn platform \
    --op GetItem \
    --itemId 'Kbt1rFFi' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --storeId 'pVRXBkUC' \
    > test.out 2>&1
eval_tap $? 135 'GetItem' test.out

#- 136 UpdateItem
# body param: body
echo '{"appId": "Ykp0otlK", "appType": "SOFTWARE", "baseAppId": "Q1LHU97o", "boothName": "ahOiavHV", "categoryPath": "6RxvPVDZ", "clazz": "g7pQ7oRY", "displayOrder": 85, "entitlementType": "CONSUMABLE", "ext": {"E4FPvASB": {}, "sEUgkNRc": {}, "TvD49Y74": {}}, "features": ["b6LnYzJh", "xzCaJHfG", "ND9KjjoH"], "flexible": true, "images": [{"as": "XxOeCZx8", "caption": "xu0a8pEp", "height": 24, "imageUrl": "Jxl1cGno", "smallImageUrl": "7mRHm1Gs", "width": 47}, {"as": "Tuf4FkFK", "caption": "15mYqqS9", "height": 76, "imageUrl": "a0ZQeIjB", "smallImageUrl": "6CnOWEGu", "width": 78}, {"as": "vwSweCoS", "caption": "MxUxpcDY", "height": 21, "imageUrl": "ICsfjfej", "smallImageUrl": "gut38J9e", "width": 0}], "inventoryConfig": {"customAttributes": {"QRRaAeCD": {}, "DHE9Hhql": {}, "32r82hJy": {}}, "serverCustomAttributes": {"lldxBsoW": {}, "gShyvvYi": {}, "oTXmshSM": {}}, "slotUsed": 32}, "itemIds": ["qTQ6p7Bz", "8m4eIg6G", "de6m79E8"], "itemQty": {"ePBmZvEn": 60, "3Kg8TMgU": 86, "AKYAJTH8": 60}, "itemType": "SEASON", "listable": true, "localizations": {"KCC40QU4": {"description": "nJughUUC", "localExt": {"9keUnVlb": {}, "8HLVrdMJ": {}, "iOEOkWFw": {}}, "longDescription": "WjU7uM4W", "title": "CFJdMcgv"}, "s3CEXKGB": {"description": "9zq08crr", "localExt": {"mcDAKUgK": {}, "soH2WGrf": {}, "N6LG8GT2": {}}, "longDescription": "nUQwu2cb", "title": "70kZ6siN"}, "eyd8mrbr": {"description": "15OwqsD7", "localExt": {"AxnifgrX": {}, "A73PNOoa": {}, "sSLztQVb": {}}, "longDescription": "ZO31Pqp5", "title": "pEa6IrfT"}}, "lootBoxConfig": {"rewardCount": 51, "rewards": [{"lootBoxItems": [{"count": 66, "duration": 78, "endDate": "1982-08-31T00:00:00Z", "itemId": "Y8R424oj", "itemSku": "aG11A6pp", "itemType": "Nmk6cnEl"}, {"count": 81, "duration": 49, "endDate": "1995-07-28T00:00:00Z", "itemId": "Bxb0zOoN", "itemSku": "8zoAN0nR", "itemType": "Gb3MwtZN"}, {"count": 71, "duration": 2, "endDate": "1978-06-22T00:00:00Z", "itemId": "3EYPUPI3", "itemSku": "4LRPg8Fm", "itemType": "g5iDkGrZ"}], "name": "cq28JOao", "odds": 0.22906109422019139, "type": "REWARD", "weight": 38}, {"lootBoxItems": [{"count": 57, "duration": 43, "endDate": "1994-05-06T00:00:00Z", "itemId": "pwhfvJoy", "itemSku": "28rB8msl", "itemType": "JQIekQmj"}, {"count": 52, "duration": 84, "endDate": "1973-01-24T00:00:00Z", "itemId": "BPMPc5Gs", "itemSku": "H5GWmMfr", "itemType": "ljZR7HUQ"}, {"count": 85, "duration": 6, "endDate": "1977-05-23T00:00:00Z", "itemId": "KrQuZdAH", "itemSku": "Hkwcs6Py", "itemType": "T5it6Brt"}], "name": "k3uXrwos", "odds": 0.63049110849827, "type": "REWARD_GROUP", "weight": 91}, {"lootBoxItems": [{"count": 10, "duration": 77, "endDate": "1994-06-05T00:00:00Z", "itemId": "ABTbcqJs", "itemSku": "NiDdtLsZ", "itemType": "CDGE2QcR"}, {"count": 22, "duration": 54, "endDate": "1998-10-18T00:00:00Z", "itemId": "jfRGvSVy", "itemSku": "KV5WdrEb", "itemType": "I5gHh4A4"}, {"count": 87, "duration": 43, "endDate": "1980-05-13T00:00:00Z", "itemId": "BH4BoRd0", "itemSku": "2NH4wJhd", "itemType": "zA1oF6uW"}], "name": "j2f4Iwx6", "odds": 0.8014885610707189, "type": "REWARD", "weight": 44}], "rollFunction": "DEFAULT"}, "maxCount": 5, "maxCountPerUser": 91, "name": "skWD78kh", "optionBoxConfig": {"boxItems": [{"count": 80, "duration": 1, "endDate": "1989-05-26T00:00:00Z", "itemId": "5mFqfjGi", "itemSku": "LzrbXG0k", "itemType": "NHbdCI1H"}, {"count": 62, "duration": 2, "endDate": "1993-03-23T00:00:00Z", "itemId": "F03lOzmW", "itemSku": "rxk1t1he", "itemType": "8AgRU9Ce"}, {"count": 2, "duration": 99, "endDate": "1972-08-24T00:00:00Z", "itemId": "5jHdUwO4", "itemSku": "POgvujtt", "itemType": "v1sLo98E"}]}, "purchasable": true, "recurring": {"cycle": "QUARTERLY", "fixedFreeDays": 3, "fixedTrialCycles": 81, "graceDays": 40}, "regionData": {"neHD4XKy": [{"currencyCode": "3rXvQh62", "currencyNamespace": "XVB7pTbP", "currencyType": "REAL", "discountAmount": 41, "discountExpireAt": "1977-10-28T00:00:00Z", "discountPercentage": 51, "discountPurchaseAt": "1986-06-07T00:00:00Z", "expireAt": "1975-06-01T00:00:00Z", "price": 100, "purchaseAt": "1982-06-16T00:00:00Z", "trialPrice": 76}, {"currencyCode": "CVVbVz2O", "currencyNamespace": "cANBc0kM", "currencyType": "VIRTUAL", "discountAmount": 97, "discountExpireAt": "1972-09-27T00:00:00Z", "discountPercentage": 51, "discountPurchaseAt": "1976-01-27T00:00:00Z", "expireAt": "1986-09-13T00:00:00Z", "price": 85, "purchaseAt": "1989-09-25T00:00:00Z", "trialPrice": 15}, {"currencyCode": "UOfUR8oG", "currencyNamespace": "0uJ65wJi", "currencyType": "VIRTUAL", "discountAmount": 60, "discountExpireAt": "1994-12-12T00:00:00Z", "discountPercentage": 39, "discountPurchaseAt": "1990-02-12T00:00:00Z", "expireAt": "1994-12-26T00:00:00Z", "price": 69, "purchaseAt": "1985-01-14T00:00:00Z", "trialPrice": 39}], "tknru75T": [{"currencyCode": "aPtNZb0X", "currencyNamespace": "ZWVGO22R", "currencyType": "VIRTUAL", "discountAmount": 78, "discountExpireAt": "1980-01-14T00:00:00Z", "discountPercentage": 97, "discountPurchaseAt": "1976-03-14T00:00:00Z", "expireAt": "1991-02-16T00:00:00Z", "price": 73, "purchaseAt": "1993-02-03T00:00:00Z", "trialPrice": 30}, {"currencyCode": "GZH2Eco8", "currencyNamespace": "8Zcjlbdy", "currencyType": "VIRTUAL", "discountAmount": 39, "discountExpireAt": "1994-10-31T00:00:00Z", "discountPercentage": 36, "discountPurchaseAt": "1981-09-27T00:00:00Z", "expireAt": "1971-01-02T00:00:00Z", "price": 10, "purchaseAt": "1993-04-30T00:00:00Z", "trialPrice": 49}, {"currencyCode": "aqUlKgtT", "currencyNamespace": "8jc0yo0K", "currencyType": "VIRTUAL", "discountAmount": 9, "discountExpireAt": "1974-12-10T00:00:00Z", "discountPercentage": 95, "discountPurchaseAt": "1994-02-15T00:00:00Z", "expireAt": "1982-10-11T00:00:00Z", "price": 87, "purchaseAt": "1990-07-18T00:00:00Z", "trialPrice": 64}], "QjcFlNF8": [{"currencyCode": "HkHQIRqB", "currencyNamespace": "zoaLMG1N", "currencyType": "VIRTUAL", "discountAmount": 12, "discountExpireAt": "1999-03-03T00:00:00Z", "discountPercentage": 75, "discountPurchaseAt": "1983-01-08T00:00:00Z", "expireAt": "1982-08-27T00:00:00Z", "price": 73, "purchaseAt": "1983-05-03T00:00:00Z", "trialPrice": 68}, {"currencyCode": "Ze4HiS17", "currencyNamespace": "gUDeROvG", "currencyType": "VIRTUAL", "discountAmount": 10, "discountExpireAt": "1976-09-07T00:00:00Z", "discountPercentage": 32, "discountPurchaseAt": "1990-11-28T00:00:00Z", "expireAt": "1998-01-02T00:00:00Z", "price": 28, "purchaseAt": "1998-02-15T00:00:00Z", "trialPrice": 26}, {"currencyCode": "PTJkoSaV", "currencyNamespace": "aCTOvraW", "currencyType": "VIRTUAL", "discountAmount": 28, "discountExpireAt": "1980-10-22T00:00:00Z", "discountPercentage": 34, "discountPurchaseAt": "1992-03-17T00:00:00Z", "expireAt": "1990-11-06T00:00:00Z", "price": 72, "purchaseAt": "1982-05-14T00:00:00Z", "trialPrice": 5}]}, "saleConfig": {"currencyCode": "Xp9tTAIQ", "price": 11}, "seasonType": "TIER", "sectionExclusive": false, "sellable": false, "sku": "yc9YpdgO", "stackable": true, "status": "INACTIVE", "tags": ["bw7x04Je", "Y8L1vXIb", "CHeqrphj"], "targetCurrencyCode": "er41Gj7j", "targetNamespace": "zz7F3EOY", "thumbnailUrl": "6L2PAq71", "useCount": 3}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateItem \
    --itemId 'enmHvOGL' \
    --namespace $AB_NAMESPACE \
    --storeId 'MEQkXgSW' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 136 'UpdateItem' test.out

#- 137 DeleteItem
$CLI_EXE \
    --sn platform \
    --op DeleteItem \
    --itemId '6Eg9RBSN' \
    --namespace $AB_NAMESPACE \
    --featuresToCheck '["ENTITLEMENT", "CATALOG", "CATALOG"]' \
    --force 'true' \
    --storeId 'enft8at3' \
    > test.out 2>&1
eval_tap $? 137 'DeleteItem' test.out

#- 138 AcquireItem
# body param: body
echo '{"count": 51, "orderNo": "zB6KHIfk"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op AcquireItem \
    --itemId 'qOKlBW07' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 138 'AcquireItem' test.out

#- 139 GetApp
$CLI_EXE \
    --sn platform \
    --op GetApp \
    --itemId 'XOa5ywfp' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --storeId 'E0FlU9r5' \
    > test.out 2>&1
eval_tap $? 139 'GetApp' test.out

#- 140 UpdateApp
# body param: body
echo '{"carousel": [{"alt": "fRv9qIJD", "previewUrl": "XCn5uAoo", "thumbnailUrl": "LjUR6FNr", "type": "image", "url": "6FLWMnmp", "videoSource": "youtube"}, {"alt": "yAMHBJq5", "previewUrl": "d6kvqh0B", "thumbnailUrl": "8Uudsdww", "type": "image", "url": "1ObwTZ7N", "videoSource": "generic"}, {"alt": "rQa2WUbd", "previewUrl": "msmx07Dh", "thumbnailUrl": "7ffRA26k", "type": "image", "url": "5kupo4TT", "videoSource": "youtube"}], "developer": "m0SECDc0", "forumUrl": "C2NR3lqx", "genres": ["FreeToPlay", "FreeToPlay", "Indie"], "localizations": {"9luuIhqi": {"announcement": "0hUlm3As", "slogan": "MROrLAqd"}, "8ihhCDNT": {"announcement": "prHCqhrz", "slogan": "eSD1kCf9"}, "YitLKqMM": {"announcement": "goylqOlX", "slogan": "IIkvcxpM"}}, "platformRequirements": {"SgGFRq66": [{"additionals": "YEmMRzfL", "directXVersion": "0124XVOQ", "diskSpace": "3UKnmMv2", "graphics": "U0uarVty", "label": "Gh7qjUYp", "osVersion": "T8ZQYmm1", "processor": "mTpXiMav", "ram": "yNWU2xEa", "soundCard": "qr4GhXHq"}, {"additionals": "LhtZAjnq", "directXVersion": "KJnlOJww", "diskSpace": "aQ6MPGR9", "graphics": "eRaiWRGn", "label": "9CvHSees", "osVersion": "BeemY4Jh", "processor": "ZVMvKRTw", "ram": "cSkCfQwI", "soundCard": "1HEKAxeu"}, {"additionals": "Tn0cxlhu", "directXVersion": "2JhDokqe", "diskSpace": "O9nxBdbb", "graphics": "2jdHCQsp", "label": "sk1gmY7Q", "osVersion": "vuaIgvd0", "processor": "Eo2OdoAw", "ram": "QF2e0lir", "soundCard": "dybWpcqt"}], "yZzc6PQq": [{"additionals": "HPErbmfY", "directXVersion": "08kIz2CN", "diskSpace": "e7NWCfJN", "graphics": "v57REfiY", "label": "ApKPFcZR", "osVersion": "2v72twrb", "processor": "e8V0WyqF", "ram": "bsz54EJ0", "soundCard": "wpanReqc"}, {"additionals": "Xq5p0VWV", "directXVersion": "95WkKwF3", "diskSpace": "ISJOhbTM", "graphics": "pooXsRkx", "label": "btN0pDmP", "osVersion": "awzvIwws", "processor": "BZmA2O5B", "ram": "33LVTURw", "soundCard": "vDWz2UVe"}, {"additionals": "ozbZ5wt9", "directXVersion": "a5POZXHU", "diskSpace": "Evynfir8", "graphics": "FRgYEGcs", "label": "QCkqVWBe", "osVersion": "Ql0uv8Hc", "processor": "vtNWlVbm", "ram": "4tErfQgo", "soundCard": "3joaa50G"}], "reOSF5Uc": [{"additionals": "7lYD1jUO", "directXVersion": "ZR80w5tW", "diskSpace": "UVgVpmcR", "graphics": "ractNcUb", "label": "WY3sKTpY", "osVersion": "Ik7Hit1I", "processor": "C22L1vxX", "ram": "wKM0jmx3", "soundCard": "AWt0ZeW5"}, {"additionals": "ra76aOHj", "directXVersion": "eBBF3r28", "diskSpace": "pKe9oczC", "graphics": "MS36IfDO", "label": "kJEAA8i5", "osVersion": "p9iSwDFK", "processor": "4RZFsbSw", "ram": "YUsHTppu", "soundCard": "8iFQEH6q"}, {"additionals": "SvmlmrEd", "directXVersion": "uYvCQLQl", "diskSpace": "uZdMVaHt", "graphics": "SZdaCNWW", "label": "tdZQ4xM3", "osVersion": "EZ45UvVT", "processor": "rro6DAua", "ram": "42U8SkGN", "soundCard": "Ws68hu7R"}]}, "platforms": ["Android", "MacOS", "Windows"], "players": ["Coop", "Single", "Coop"], "primaryGenre": "Strategy", "publisher": "w0WHb7WQ", "releaseDate": "1993-06-08T00:00:00Z", "websiteUrl": "T5k0LkXJ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateApp \
    --itemId 'JRQM19mR' \
    --namespace $AB_NAMESPACE \
    --storeId '2NOrEv7O' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 140 'UpdateApp' test.out

#- 141 DisableItem
# body param: body
echo '{"featuresToCheck": ["IAP", "REWARD", "ENTITLEMENT"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op DisableItem \
    --itemId 'VMytHSsC' \
    --namespace $AB_NAMESPACE \
    --storeId '7u6XdJQx' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 141 'DisableItem' test.out

#- 142 GetItemDynamicData
$CLI_EXE \
    --sn platform \
    --op GetItemDynamicData \
    --itemId 'MNy9SD56' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 142 'GetItemDynamicData' test.out

#- 143 EnableItem
$CLI_EXE \
    --sn platform \
    --op EnableItem \
    --itemId 'CpMnvwce' \
    --namespace $AB_NAMESPACE \
    --storeId 'NG57G9AB' \
    > test.out 2>&1
eval_tap $? 143 'EnableItem' test.out

#- 144 FeatureItem
$CLI_EXE \
    --sn platform \
    --op FeatureItem \
    --feature '0TmljeAs' \
    --itemId 'Aw54cLxI' \
    --namespace $AB_NAMESPACE \
    --storeId 'CweLbSwg' \
    > test.out 2>&1
eval_tap $? 144 'FeatureItem' test.out

#- 145 DefeatureItem
$CLI_EXE \
    --sn platform \
    --op DefeatureItem \
    --feature 'NiGZisPI' \
    --itemId 'uRVNtQ18' \
    --namespace $AB_NAMESPACE \
    --storeId 'f7qjEpdj' \
    > test.out 2>&1
eval_tap $? 145 'DefeatureItem' test.out

#- 146 GetLocaleItem
$CLI_EXE \
    --sn platform \
    --op GetLocaleItem \
    --itemId 'G1873jEO' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --language 'l5XUrJrk' \
    --populateBundle 'true' \
    --region 'cPIH8rZ6' \
    --storeId 'eivh5KTU' \
    > test.out 2>&1
eval_tap $? 146 'GetLocaleItem' test.out

#- 147 UpdateItemPurchaseCondition
# body param: body
echo '{"purchaseCondition": {"conditionGroups": [{"operator": "and", "predicates": [{"anyOf": 97, "code": "IEcc78CW", "comparison": "includes", "name": "rkLi8Opa", "predicateType": "StatisticCodePredicate", "value": "UeJel1i8", "values": ["2x2hUcTq", "jZMoJHQG", "416NKWkh"]}, {"anyOf": 3, "code": "IOyGnybD", "comparison": "isGreaterThanOrEqual", "name": "4dwge0Rc", "predicateType": "SeasonPassPredicate", "value": "QxgPLhR1", "values": ["X8aaecwA", "0S1DLSZq", "IiKz3f4x"]}, {"anyOf": 16, "code": "lvvQ33it", "comparison": "excludes", "name": "InBxDBSI", "predicateType": "SeasonTierPredicate", "value": "Zk4ZQLkO", "values": ["CfYvXynp", "F7y3NvB7", "886igVET"]}]}, {"operator": "and", "predicates": [{"anyOf": 33, "code": "uCwVcOF9", "comparison": "isLessThan", "name": "LTK5uaTR", "predicateType": "StatisticCodePredicate", "value": "WqI7R3Te", "values": ["MMNFp3Zo", "lhmNS8vI", "JK4eAUAf"]}, {"anyOf": 4, "code": "6363SzOw", "comparison": "excludes", "name": "KD95xix0", "predicateType": "StatisticCodePredicate", "value": "njMB8M5V", "values": ["mpqgkQ1L", "HrYXjsQo", "cFtfiCFW"]}, {"anyOf": 51, "code": "NiyzVw8c", "comparison": "is", "name": "BrqjA5Aw", "predicateType": "SeasonPassPredicate", "value": "1PAKUXU7", "values": ["WsMG8hoK", "7wVOX17K", "j3Yl7egq"]}]}, {"operator": "or", "predicates": [{"anyOf": 40, "code": "c4QVZLVE", "comparison": "isGreaterThan", "name": "XJfdwtkA", "predicateType": "SeasonTierPredicate", "value": "arQZuwK3", "values": ["glXIQ5aF", "7IDIeXRx", "vHYKyMnU"]}, {"anyOf": 45, "code": "7lNFIWgm", "comparison": "is", "name": "qoV0VH5H", "predicateType": "SeasonTierPredicate", "value": "BmtBpbBD", "values": ["KiYcdPgV", "dbl9EFNX", "VLzmwhCy"]}, {"anyOf": 93, "code": "TgmPpq1H", "comparison": "isLessThanOrEqual", "name": "8lOcGib1", "predicateType": "EntitlementPredicate", "value": "rbNXDKCk", "values": ["Ubbtm7g7", "BYYZuW6m", "1RHD5qu7"]}]}]}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateItemPurchaseCondition \
    --itemId 'irLzudfg' \
    --namespace $AB_NAMESPACE \
    --storeId 'zIcNUcvE' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 147 'UpdateItemPurchaseCondition' test.out

#- 148 QueryItemReferences
$CLI_EXE \
    --sn platform \
    --op QueryItemReferences \
    --itemId 'VrpzrHUa' \
    --namespace $AB_NAMESPACE \
    --featuresToCheck '["CAMPAIGN", "REWARD", "CATALOG"]' \
    --storeId 'RPrEHu5z' \
    > test.out 2>&1
eval_tap $? 148 'QueryItemReferences' test.out

#- 149 ReturnItem
# body param: body
echo '{"orderNo": "IaDZuhot"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ReturnItem \
    --itemId 'knE8iBxZ' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 149 'ReturnItem' test.out

#- 150 QueryKeyGroups
$CLI_EXE \
    --sn platform \
    --op QueryKeyGroups \
    --namespace $AB_NAMESPACE \
    --limit '69' \
    --name '6sv3llVB' \
    --offset '56' \
    --tag 'UhS47kTt' \
    > test.out 2>&1
eval_tap $? 150 'QueryKeyGroups' test.out

#- 151 CreateKeyGroup
# body param: body
echo '{"description": "BFE2paKv", "name": "fzCkgvKe", "status": "ACTIVE", "tags": ["WnaqDZ5b", "Geu65kdf", "NXOVLIr5"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateKeyGroup \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 151 'CreateKeyGroup' test.out

#- 152 GetKeyGroupByBoothName
eval_tap 0 152 'GetKeyGroupByBoothName # SKIP deprecated' test.out

#- 153 GetKeyGroup
$CLI_EXE \
    --sn platform \
    --op GetKeyGroup \
    --keyGroupId 'CPnZAHhG' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 153 'GetKeyGroup' test.out

#- 154 UpdateKeyGroup
# body param: body
echo '{"description": "RmovNQrw", "name": "wIuVqv67", "status": "INACTIVE", "tags": ["3QSZkNue", "G4HToFHF", "VKJpBYms"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateKeyGroup \
    --keyGroupId 'HmEQOTcC' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 154 'UpdateKeyGroup' test.out

#- 155 GetKeyGroupDynamic
$CLI_EXE \
    --sn platform \
    --op GetKeyGroupDynamic \
    --keyGroupId 'MYgnDwJB' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 155 'GetKeyGroupDynamic' test.out

#- 156 ListKeys
$CLI_EXE \
    --sn platform \
    --op ListKeys \
    --keyGroupId 'gtQqblhr' \
    --namespace $AB_NAMESPACE \
    --limit '96' \
    --offset '12' \
    --status 'ACQUIRED' \
    > test.out 2>&1
eval_tap $? 156 'ListKeys' test.out

#- 157 UploadKeys
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UploadKeys \
    --keyGroupId 'mJjeq8Y6' \
    --namespace $AB_NAMESPACE \
    --upload file $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 157 'UploadKeys' test.out

#- 158 QueryOrders
$CLI_EXE \
    --sn platform \
    --op QueryOrders \
    --namespace $AB_NAMESPACE \
    --endTime 'AOJngYzs' \
    --limit '76' \
    --offset '48' \
    --orderNos '["pc3sLLbC", "708GUigb", "QuKKmqtn"]' \
    --sortBy 'JC7oTpCh' \
    --startTime 'xKs45Mhl' \
    --status 'CHARGEBACK_REVERSED' \
    --withTotal 'false' \
    > test.out 2>&1
eval_tap $? 158 'QueryOrders' test.out

#- 159 GetOrderStatistics
$CLI_EXE \
    --sn platform \
    --op GetOrderStatistics \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 159 'GetOrderStatistics' test.out

#- 160 GetOrder
$CLI_EXE \
    --sn platform \
    --op GetOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'SUDwQTvI' \
    > test.out 2>&1
eval_tap $? 160 'GetOrder' test.out

#- 161 RefundOrder
# body param: body
echo '{"description": "0wwHmkQ8"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RefundOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'IltyIrRA' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 161 'RefundOrder' test.out

#- 162 GetPaymentCallbackConfig
eval_tap 0 162 'GetPaymentCallbackConfig # SKIP deprecated' test.out

#- 163 UpdatePaymentCallbackConfig
eval_tap 0 163 'UpdatePaymentCallbackConfig # SKIP deprecated' test.out

#- 164 GetPaymentMerchantConfig
$CLI_EXE \
    --sn platform \
    --op GetPaymentMerchantConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 164 'GetPaymentMerchantConfig' test.out

#- 165 UpdatePaymentDomainWhitelistConfig
# body param: body
echo '{"domains": ["NajheRjp", "Hok1fCDo", "eMTzOZZz"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePaymentDomainWhitelistConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 165 'UpdatePaymentDomainWhitelistConfig' test.out

#- 166 QueryPaymentNotifications
$CLI_EXE \
    --sn platform \
    --op QueryPaymentNotifications \
    --namespace $AB_NAMESPACE \
    --endDate 'gYaoflN4' \
    --externalId 'wPYgVmIK' \
    --limit '41' \
    --notificationSource 'CHECKOUT' \
    --notificationType 'WW5AsCjj' \
    --offset '67' \
    --paymentOrderNo 'XvlSPSxy' \
    --startDate 'k2ic3mRx' \
    --status 'WARN' \
    > test.out 2>&1
eval_tap $? 166 'QueryPaymentNotifications' test.out

#- 167 QueryPaymentOrders
$CLI_EXE \
    --sn platform \
    --op QueryPaymentOrders \
    --namespace $AB_NAMESPACE \
    --channel 'INTERNAL' \
    --extTxId 'sEaP5ife' \
    --limit '25' \
    --offset '60' \
    --status 'AUTHORISE_FAILED' \
    > test.out 2>&1
eval_tap $? 167 'QueryPaymentOrders' test.out

#- 168 CreatePaymentOrderByDedicated
# body param: body
echo '{"currencyCode": "U9PGi4yr", "currencyNamespace": "eLHXClmH", "customParameters": {"5wrbD4Hu": {}, "txEOGwyT": {}, "F2TWjwsU": {}}, "description": "0ZG7d7AH", "extOrderNo": "NpMcPWvd", "extUserId": "88y0A0ym", "itemType": "SEASON", "language": "gYk", "metadata": {"MoePfsIm": "K8D2nAN8", "gYH9t9j3": "eQbVN2NH", "OqjzHi9u": "XHiEfPNm"}, "notifyUrl": "dI7lRnOm", "omitNotification": true, "platform": "HA3VX09J", "price": 97, "recurringPaymentOrderNo": "jkp8pQya", "region": "3pJk5KVk", "returnUrl": "eRpE4VVu", "sandbox": true, "sku": "l1LoerhY", "subscriptionId": "6LhUaUUe", "targetNamespace": "9qaSOWCg", "targetUserId": "mFTR594j", "title": "WK5SO7ju"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreatePaymentOrderByDedicated \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 168 'CreatePaymentOrderByDedicated' test.out

#- 169 ListExtOrderNoByExtTxId
$CLI_EXE \
    --sn platform \
    --op ListExtOrderNoByExtTxId \
    --namespace $AB_NAMESPACE \
    --extTxId 'AeI9dbls' \
    > test.out 2>&1
eval_tap $? 169 'ListExtOrderNoByExtTxId' test.out

#- 170 GetPaymentOrder
$CLI_EXE \
    --sn platform \
    --op GetPaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'GrafDl2g' \
    > test.out 2>&1
eval_tap $? 170 'GetPaymentOrder' test.out

#- 171 ChargePaymentOrder
# body param: body
echo '{"extTxId": "RsxgrYJv", "paymentMethod": "Loac41IR", "paymentProvider": "XSOLLA"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ChargePaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'oszdT8fL' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 171 'ChargePaymentOrder' test.out

#- 172 RefundPaymentOrderByDedicated
# body param: body
echo '{"description": "xuRnWZSf"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RefundPaymentOrderByDedicated \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'slBBvi4y' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 172 'RefundPaymentOrderByDedicated' test.out

#- 173 SimulatePaymentOrderNotification
# body param: body
echo '{"amount": 20, "currencyCode": "m1qBSZdo", "notifyType": "CHARGE", "paymentProvider": "PAYPAL", "salesTax": 71, "vat": 99}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SimulatePaymentOrderNotification \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'SPiihSKR' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 173 'SimulatePaymentOrderNotification' test.out

#- 174 GetPaymentOrderChargeStatus
$CLI_EXE \
    --sn platform \
    --op GetPaymentOrderChargeStatus \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'buCjCp83' \
    > test.out 2>&1
eval_tap $? 174 'GetPaymentOrderChargeStatus' test.out

#- 175 GetPsnEntitlementOwnership
# body param: body
echo '{"accessToken": "M5NsxaEW", "serviceLabel": 76}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op GetPsnEntitlementOwnership \
    --entitlementLabel 'u6q3m292' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 175 'GetPsnEntitlementOwnership' test.out

#- 176 GetXboxEntitlementOwnership
# body param: body
echo '{"delegationToken": "H4VEsmZD", "sandboxId": "NNGYWxfe"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op GetXboxEntitlementOwnership \
    --namespace $AB_NAMESPACE \
    --productSku 'qK0eXIRa' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 176 'GetXboxEntitlementOwnership' test.out

#- 177 GetPlatformEntitlementConfig
$CLI_EXE \
    --sn platform \
    --op GetPlatformEntitlementConfig \
    --namespace $AB_NAMESPACE \
    --platform 'Oculus' \
    > test.out 2>&1
eval_tap $? 177 'GetPlatformEntitlementConfig' test.out

#- 178 UpdatePlatformEntitlementConfig
# body param: body
echo '{"allowedPlatformOrigins": ["Epic", "Xbox", "Oculus"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePlatformEntitlementConfig \
    --namespace $AB_NAMESPACE \
    --platform 'Oculus' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 178 'UpdatePlatformEntitlementConfig' test.out

#- 179 GetPlatformWalletConfig
$CLI_EXE \
    --sn platform \
    --op GetPlatformWalletConfig \
    --namespace $AB_NAMESPACE \
    --platform 'Playstation' \
    > test.out 2>&1
eval_tap $? 179 'GetPlatformWalletConfig' test.out

#- 180 UpdatePlatformWalletConfig
# body param: body
echo '{"allowedBalanceOrigins": ["Epic", "System", "GooglePlay"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePlatformWalletConfig \
    --namespace $AB_NAMESPACE \
    --platform 'Epic' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 180 'UpdatePlatformWalletConfig' test.out

#- 181 ResetPlatformWalletConfig
$CLI_EXE \
    --sn platform \
    --op ResetPlatformWalletConfig \
    --namespace $AB_NAMESPACE \
    --platform 'Xbox' \
    > test.out 2>&1
eval_tap $? 181 'ResetPlatformWalletConfig' test.out

#- 182 GetRevocationConfig
$CLI_EXE \
    --sn platform \
    --op GetRevocationConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 182 'GetRevocationConfig' test.out

#- 183 UpdateRevocationConfig
# body param: body
echo '{"entitlement": {"consumable": {"enabled": false, "strategy": "REVOKE_OR_REPORT"}, "durable": {"enabled": true, "strategy": "CUSTOM"}}, "wallet": {"enabled": false, "strategy": "ALWAYS_REVOKE"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateRevocationConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 183 'UpdateRevocationConfig' test.out

#- 184 DeleteRevocationConfig
$CLI_EXE \
    --sn platform \
    --op DeleteRevocationConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 184 'DeleteRevocationConfig' test.out

#- 185 QueryRevocationHistories
$CLI_EXE \
    --sn platform \
    --op QueryRevocationHistories \
    --namespace $AB_NAMESPACE \
    --endTime 'c7tEsP5w' \
    --limit '55' \
    --offset '57' \
    --source 'DLC' \
    --startTime '7r051s5V' \
    --status 'FAIL' \
    --transactionId 'cLGbnVLO' \
    --userId '39J3DOQ8' \
    > test.out 2>&1
eval_tap $? 185 'QueryRevocationHistories' test.out

#- 186 GetRevocationPluginConfig
$CLI_EXE \
    --sn platform \
    --op GetRevocationPluginConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 186 'GetRevocationPluginConfig' test.out

#- 187 UpdateRevocationPluginConfig
# body param: body
echo '{"appConfig": {"appName": "BXvQTwgm"}, "customConfig": {"connectionType": "TLS", "grpcServerAddress": "0LVJfEe1"}, "extendType": "APP"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateRevocationPluginConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 187 'UpdateRevocationPluginConfig' test.out

#- 188 DeleteRevocationPluginConfig
$CLI_EXE \
    --sn platform \
    --op DeleteRevocationPluginConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 188 'DeleteRevocationPluginConfig' test.out

#- 189 UploadRevocationPluginConfigCert
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UploadRevocationPluginConfigCert \
    --namespace $AB_NAMESPACE \
    --upload file $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 189 'UploadRevocationPluginConfigCert' test.out

#- 190 CreateReward
# body param: body
echo '{"description": "AsFG8kL0", "eventTopic": "gnB0XZzQ", "maxAwarded": 84, "maxAwardedPerUser": 6, "namespaceExpression": "kdSGlrvJ", "rewardCode": "yrCpP5cg", "rewardConditions": [{"condition": "Dr8vQZ2O", "conditionName": "o5riaXxW", "eventName": "WLZUzPBN", "rewardItems": [{"duration": 62, "endDate": "1990-03-30T00:00:00Z", "identityType": "ITEM_ID", "itemId": "FF0EPA7x", "quantity": 56, "sku": "Km5ZToaQ"}, {"duration": 24, "endDate": "1991-02-15T00:00:00Z", "identityType": "ITEM_SKU", "itemId": "I82cXDYV", "quantity": 92, "sku": "1znYKviP"}, {"duration": 32, "endDate": "1989-09-16T00:00:00Z", "identityType": "ITEM_ID", "itemId": "BNAatGdv", "quantity": 34, "sku": "MUslGhir"}]}, {"condition": "d3DrwwtU", "conditionName": "I1Pp4Jcs", "eventName": "WU1BDkx7", "rewardItems": [{"duration": 33, "endDate": "1999-06-17T00:00:00Z", "identityType": "ITEM_SKU", "itemId": "1dmcDpiO", "quantity": 61, "sku": "52nJeZas"}, {"duration": 49, "endDate": "1977-08-07T00:00:00Z", "identityType": "ITEM_SKU", "itemId": "WdQjWPP3", "quantity": 13, "sku": "QPj4u5Ao"}, {"duration": 95, "endDate": "1979-08-05T00:00:00Z", "identityType": "ITEM_SKU", "itemId": "mFwQb5rL", "quantity": 85, "sku": "ZHl6QfXZ"}]}, {"condition": "8jFR8EkM", "conditionName": "W71lE2hL", "eventName": "ih2yIrA7", "rewardItems": [{"duration": 87, "endDate": "1974-05-13T00:00:00Z", "identityType": "ITEM_ID", "itemId": "7gEQZpb6", "quantity": 77, "sku": "L7NQbjgx"}, {"duration": 20, "endDate": "1996-02-15T00:00:00Z", "identityType": "ITEM_SKU", "itemId": "YJaH85T7", "quantity": 95, "sku": "59yCWFnO"}, {"duration": 93, "endDate": "1986-03-30T00:00:00Z", "identityType": "ITEM_ID", "itemId": "DVC9MLI6", "quantity": 84, "sku": "YV292Fjk"}]}], "userIdExpression": "hlc0E2zD"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateReward \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 190 'CreateReward' test.out

#- 191 QueryRewards
$CLI_EXE \
    --sn platform \
    --op QueryRewards \
    --namespace $AB_NAMESPACE \
    --eventTopic 'UH8vVRS1' \
    --limit '66' \
    --offset '52' \
    --sortBy '["namespace:asc", "rewardCode:desc"]' \
    > test.out 2>&1
eval_tap $? 191 'QueryRewards' test.out

#- 192 ExportRewards
$CLI_EXE \
    --sn platform \
    --op ExportRewards \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 192 'ExportRewards' test.out

#- 193 ImportRewards
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op ImportRewards \
    --namespace $AB_NAMESPACE \
    --replaceExisting 'false' \
    --upload file $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 193 'ImportRewards' test.out

#- 194 GetReward
$CLI_EXE \
    --sn platform \
    --op GetReward \
    --namespace $AB_NAMESPACE \
    --rewardId 'UC4l9bCg' \
    > test.out 2>&1
eval_tap $? 194 'GetReward' test.out

#- 195 UpdateReward
# body param: body
echo '{"description": "etCLGpJa", "eventTopic": "5Lj6nKJE", "maxAwarded": 94, "maxAwardedPerUser": 39, "namespaceExpression": "Ta8Mg6Uo", "rewardCode": "sASjqIhc", "rewardConditions": [{"condition": "yG4TwpFb", "conditionName": "oEvO9IJm", "eventName": "VZ62d8EW", "rewardItems": [{"duration": 18, "endDate": "1989-06-04T00:00:00Z", "identityType": "ITEM_ID", "itemId": "gGkIzXDS", "quantity": 83, "sku": "mm6uLzwG"}, {"duration": 56, "endDate": "1987-03-26T00:00:00Z", "identityType": "ITEM_SKU", "itemId": "Kf7An45c", "quantity": 78, "sku": "MbrwQGwa"}, {"duration": 55, "endDate": "1971-03-01T00:00:00Z", "identityType": "ITEM_SKU", "itemId": "22wyPzbg", "quantity": 60, "sku": "Mby7XYZS"}]}, {"condition": "8lsfagj1", "conditionName": "DuRNGDRU", "eventName": "F8fjBxIH", "rewardItems": [{"duration": 4, "endDate": "1986-06-09T00:00:00Z", "identityType": "ITEM_SKU", "itemId": "tPVKXmci", "quantity": 99, "sku": "dVTRo2OF"}, {"duration": 72, "endDate": "1988-12-29T00:00:00Z", "identityType": "ITEM_ID", "itemId": "ulLhZsxs", "quantity": 83, "sku": "gv9lRHfx"}, {"duration": 49, "endDate": "1988-01-03T00:00:00Z", "identityType": "ITEM_ID", "itemId": "zt6cWxMU", "quantity": 19, "sku": "r4QnXQGR"}]}, {"condition": "zIcw5LWD", "conditionName": "t2prmhb4", "eventName": "u2vidfGv", "rewardItems": [{"duration": 3, "endDate": "1994-08-10T00:00:00Z", "identityType": "ITEM_ID", "itemId": "0iZCpfMz", "quantity": 5, "sku": "YIqpGLI7"}, {"duration": 78, "endDate": "1973-08-16T00:00:00Z", "identityType": "ITEM_ID", "itemId": "83t9ThKl", "quantity": 84, "sku": "QTy1d364"}, {"duration": 61, "endDate": "1977-09-30T00:00:00Z", "identityType": "ITEM_ID", "itemId": "QLzjONZB", "quantity": 66, "sku": "1aTCCNy0"}]}], "userIdExpression": "VhpXqDpi"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateReward \
    --namespace $AB_NAMESPACE \
    --rewardId 'DhKBmPWK' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 195 'UpdateReward' test.out

#- 196 DeleteReward
$CLI_EXE \
    --sn platform \
    --op DeleteReward \
    --namespace $AB_NAMESPACE \
    --rewardId 'vm4YblSR' \
    > test.out 2>&1
eval_tap $? 196 'DeleteReward' test.out

#- 197 CheckEventCondition
# body param: body
echo '{"payload": {"nr2KlBNl": {}, "O06LwOmL": {}, "AVwO9McZ": {}}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CheckEventCondition \
    --namespace $AB_NAMESPACE \
    --rewardId 'oDzJcP32' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 197 'CheckEventCondition' test.out

#- 198 DeleteRewardConditionRecord
# body param: body
echo '{"conditionName": "Y4OKChbK", "userId": "ehwvGjyT"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op DeleteRewardConditionRecord \
    --namespace $AB_NAMESPACE \
    --rewardId 'kV0oS874' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 198 'DeleteRewardConditionRecord' test.out

#- 199 QuerySections
$CLI_EXE \
    --sn platform \
    --op QuerySections \
    --namespace $AB_NAMESPACE \
    --end 'AqucpXnU' \
    --limit '0' \
    --offset '8' \
    --start 'iojRsbMH' \
    --storeId 'EkuilkvM' \
    --viewId 'yVNUFCy9' \
    > test.out 2>&1
eval_tap $? 199 'QuerySections' test.out

#- 200 CreateSection
# body param: body
echo '{"active": true, "displayOrder": 74, "endDate": "1994-12-01T00:00:00Z", "ext": {"aKxg0GPt": {}, "FUK0MeVa": {}, "LNbQmyAf": {}}, "fixedPeriodRotationConfig": {"backfillType": "CUSTOM", "duration": 9, "itemCount": 87, "rule": "SEQUENCE"}, "items": [{"id": "sbBzeQ68", "sku": "YKhjhxFp"}, {"id": "xYUIZAcI", "sku": "AERzsdfb"}, {"id": "OUkVdSVn", "sku": "IsyKPebx"}], "localizations": {"u6SYE9zT": {"description": "dEdVb6sb", "localExt": {"viKSpSL7": {}, "7bxoK9fx": {}, "qRfyHUGj": {}}, "longDescription": "ToWn42iX", "title": "vb4X5cc0"}, "026INsNj": {"description": "k97XGDqc", "localExt": {"SSGdyZbB": {}, "lPMgZWEJ": {}, "DcPH0vjT": {}}, "longDescription": "XRGBbU1V", "title": "eAbYhgZl"}, "8nB1Oowv": {"description": "6qocVBXP", "localExt": {"ObQmquaa": {}, "vcwPbnqw": {}, "PC1peZaz": {}}, "longDescription": "7fXkTxSs", "title": "W6pOVqGY"}}, "name": "yskEESvV", "rotationType": "NONE", "startDate": "1998-04-02T00:00:00Z", "viewId": "DeBAQQfY"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateSection \
    --namespace $AB_NAMESPACE \
    --storeId 'JljBqKiQ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 200 'CreateSection' test.out

#- 201 PurgeExpiredSection
$CLI_EXE \
    --sn platform \
    --op PurgeExpiredSection \
    --namespace $AB_NAMESPACE \
    --storeId 'EPJpRlQV' \
    > test.out 2>&1
eval_tap $? 201 'PurgeExpiredSection' test.out

#- 202 GetSection
$CLI_EXE \
    --sn platform \
    --op GetSection \
    --namespace $AB_NAMESPACE \
    --sectionId 'stTlpcbp' \
    --storeId 'gwlXLwFa' \
    > test.out 2>&1
eval_tap $? 202 'GetSection' test.out

#- 203 UpdateSection
# body param: body
echo '{"active": false, "displayOrder": 99, "endDate": "1976-11-23T00:00:00Z", "ext": {"a0S4nmXE": {}, "ddHlEMIW": {}, "XRh2ADiv": {}}, "fixedPeriodRotationConfig": {"backfillType": "CUSTOM", "duration": 98, "itemCount": 96, "rule": "SEQUENCE"}, "items": [{"id": "WCF6H6rb", "sku": "3WNp29ob"}, {"id": "6NitPNay", "sku": "8aAo2biY"}, {"id": "SC6Pz6eU", "sku": "OY8gmJSb"}], "localizations": {"9YLdPVyb": {"description": "9q3VaVhJ", "localExt": {"3Psgn5Ji": {}, "jYpLA3lF": {}, "1NWgvHTW": {}}, "longDescription": "HVbtQVZa", "title": "f9IOSJYA"}, "XBGBZanX": {"description": "Lz6mALf1", "localExt": {"EasHQqaw": {}, "gbs38K8W": {}, "43vonFwd": {}}, "longDescription": "kAvHjb2A", "title": "4gMVRi9s"}, "FpOq4eIl": {"description": "9JIuOo8W", "localExt": {"wS8JdauX": {}, "Tx0ePPA8": {}, "7XgnApbY": {}}, "longDescription": "ECxWRdm0", "title": "86LWCvSi"}}, "name": "n6f0NVDQ", "rotationType": "NONE", "startDate": "1999-06-26T00:00:00Z", "viewId": "h9MINatq"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateSection \
    --namespace $AB_NAMESPACE \
    --sectionId 'D4NdEYPv' \
    --storeId '6FVGILcA' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 203 'UpdateSection' test.out

#- 204 DeleteSection
$CLI_EXE \
    --sn platform \
    --op DeleteSection \
    --namespace $AB_NAMESPACE \
    --sectionId 'zuzGmzwZ' \
    --storeId 'qopGosYJ' \
    > test.out 2>&1
eval_tap $? 204 'DeleteSection' test.out

#- 205 ListStores
$CLI_EXE \
    --sn platform \
    --op ListStores \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 205 'ListStores' test.out

#- 206 CreateStore
# body param: body
echo '{"defaultLanguage": "cx2U77vP", "defaultRegion": "7SEDkjxU", "description": "p3dT3Jsz", "supportedLanguages": ["HtLzX6x8", "d7l6znoP", "mFcGR0gr"], "supportedRegions": ["xLjR9qiH", "CPBtSJbw", "zxCPOmDz"], "title": "dtwIxX3Q"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateStore \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 206 'CreateStore' test.out

#- 207 GetCatalogDefinition
$CLI_EXE \
    --sn platform \
    --op GetCatalogDefinition \
    --namespace $AB_NAMESPACE \
    --catalogType 'VIEW' \
    > test.out 2>&1
eval_tap $? 207 'GetCatalogDefinition' test.out

#- 208 DownloadCSVTemplates
$CLI_EXE \
    --sn platform \
    --op DownloadCSVTemplates \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 208 'DownloadCSVTemplates' test.out

#- 209 ExportStoreByCSV
# body param: body
echo '{"catalogType": "APP", "fieldsToBeIncluded": ["JhqxMEuu", "JaDNW5oc", "O5eM5yPQ"], "idsToBeExported": ["qjjNgKGO", "89UMkiJi", "AQpzqGah"], "storeId": "kbtO7FSi"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ExportStoreByCSV \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 209 'ExportStoreByCSV' test.out

#- 210 ImportStore
eval_tap 0 210 'ImportStore # SKIP deprecated' test.out

#- 211 GetPublishedStore
$CLI_EXE \
    --sn platform \
    --op GetPublishedStore \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 211 'GetPublishedStore' test.out

#- 212 DeletePublishedStore
$CLI_EXE \
    --sn platform \
    --op DeletePublishedStore \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 212 'DeletePublishedStore' test.out

#- 213 GetPublishedStoreBackup
$CLI_EXE \
    --sn platform \
    --op GetPublishedStoreBackup \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 213 'GetPublishedStoreBackup' test.out

#- 214 RollbackPublishedStore
$CLI_EXE \
    --sn platform \
    --op RollbackPublishedStore \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 214 'RollbackPublishedStore' test.out

#- 215 GetStore
$CLI_EXE \
    --sn platform \
    --op GetStore \
    --namespace $AB_NAMESPACE \
    --storeId '2atjNltu' \
    > test.out 2>&1
eval_tap $? 215 'GetStore' test.out

#- 216 UpdateStore
# body param: body
echo '{"defaultLanguage": "oCiz1mZu", "defaultRegion": "NsLfwHnZ", "description": "WGEC9YOO", "supportedLanguages": ["1iZTCqkP", "WAhQbQ2l", "3Sbrd4x8"], "supportedRegions": ["ge9Ayji7", "ObEBJr6U", "65bfjsNa"], "title": "PWPnum3q"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateStore \
    --namespace $AB_NAMESPACE \
    --storeId 'xmVgpx22' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 216 'UpdateStore' test.out

#- 217 DeleteStore
$CLI_EXE \
    --sn platform \
    --op DeleteStore \
    --namespace $AB_NAMESPACE \
    --storeId 'MFWeiUjh' \
    > test.out 2>&1
eval_tap $? 217 'DeleteStore' test.out

#- 218 QueryChanges
$CLI_EXE \
    --sn platform \
    --op QueryChanges \
    --namespace $AB_NAMESPACE \
    --storeId 'TcIdSi6s' \
    --action 'DELETE' \
    --itemSku 'GpDiHQm2' \
    --itemType 'LOOTBOX' \
    --limit '29' \
    --offset '39' \
    --selected 'true' \
    --sortBy '["createdAt:desc", "updatedAt"]' \
    --status 'PUBLISHED' \
    --type 'ITEM' \
    --updatedAtEnd 'nkMpf2VB' \
    --updatedAtStart 'yJqYLWsF' \
    --withTotal 'false' \
    > test.out 2>&1
eval_tap $? 218 'QueryChanges' test.out

#- 219 PublishAll
$CLI_EXE \
    --sn platform \
    --op PublishAll \
    --namespace $AB_NAMESPACE \
    --storeId 'JNlo6I8l' \
    > test.out 2>&1
eval_tap $? 219 'PublishAll' test.out

#- 220 PublishSelected
$CLI_EXE \
    --sn platform \
    --op PublishSelected \
    --namespace $AB_NAMESPACE \
    --storeId 'vFuGOgdR' \
    > test.out 2>&1
eval_tap $? 220 'PublishSelected' test.out

#- 221 SelectAllRecords
$CLI_EXE \
    --sn platform \
    --op SelectAllRecords \
    --namespace $AB_NAMESPACE \
    --storeId 'ThUG54ss' \
    > test.out 2>&1
eval_tap $? 221 'SelectAllRecords' test.out

#- 222 SelectAllRecordsByCriteria
$CLI_EXE \
    --sn platform \
    --op SelectAllRecordsByCriteria \
    --namespace $AB_NAMESPACE \
    --storeId '58PSkHlw' \
    --action 'CREATE' \
    --itemSku 'uXieIxLC' \
    --itemType 'SUBSCRIPTION' \
    --selected 'false' \
    --type 'SECTION' \
    --updatedAtEnd 'mZlFv9A8' \
    --updatedAtStart 'B4cWsPc2' \
    > test.out 2>&1
eval_tap $? 222 'SelectAllRecordsByCriteria' test.out

#- 223 GetStatistic
$CLI_EXE \
    --sn platform \
    --op GetStatistic \
    --namespace $AB_NAMESPACE \
    --storeId 'aqRpDzw1' \
    --action 'DELETE' \
    --itemSku 'qWynYF80' \
    --itemType 'COINS' \
    --type 'STORE' \
    --updatedAtEnd 'KfgcfPkj' \
    --updatedAtStart 'H64NYzSW' \
    > test.out 2>&1
eval_tap $? 223 'GetStatistic' test.out

#- 224 UnselectAllRecords
$CLI_EXE \
    --sn platform \
    --op UnselectAllRecords \
    --namespace $AB_NAMESPACE \
    --storeId '0RR6gQQb' \
    > test.out 2>&1
eval_tap $? 224 'UnselectAllRecords' test.out

#- 225 SelectRecord
$CLI_EXE \
    --sn platform \
    --op SelectRecord \
    --changeId 'Lx1bdm4G' \
    --namespace $AB_NAMESPACE \
    --storeId 'hWRitN69' \
    > test.out 2>&1
eval_tap $? 225 'SelectRecord' test.out

#- 226 UnselectRecord
$CLI_EXE \
    --sn platform \
    --op UnselectRecord \
    --changeId 'CrkE8npo' \
    --namespace $AB_NAMESPACE \
    --storeId 't7NzWyJ1' \
    > test.out 2>&1
eval_tap $? 226 'UnselectRecord' test.out

#- 227 CloneStore
$CLI_EXE \
    --sn platform \
    --op CloneStore \
    --namespace $AB_NAMESPACE \
    --storeId 'ZcZbLzG9' \
    --targetStoreId '7lniD8GF' \
    > test.out 2>&1
eval_tap $? 227 'CloneStore' test.out

#- 228 ExportStore
eval_tap 0 228 'ExportStore # SKIP deprecated' test.out

#- 229 QueryImportHistory
$CLI_EXE \
    --sn platform \
    --op QueryImportHistory \
    --namespace $AB_NAMESPACE \
    --storeId '85fpgNu0' \
    --end 'NsrfWU0J' \
    --limit '72' \
    --offset '32' \
    --sortBy 'y3LGvM9X' \
    --start 't4jrwy4J' \
    --success 'false' \
    > test.out 2>&1
eval_tap $? 229 'QueryImportHistory' test.out

#- 230 ImportStoreByCSV
# form data upload: category
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
# form data upload: display
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
# form data upload: item
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
# form data upload: section
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op ImportStoreByCSV \
    --namespace $AB_NAMESPACE \
    --storeId 'cqUEcJ60' \
    --upload category $TEMP_FILE_UPLOAD \
    --upload display $TEMP_FILE_UPLOAD \
    --upload item $TEMP_FILE_UPLOAD \
    --notes 'eRfMUqBl' \
    --upload section $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 230 'ImportStoreByCSV' test.out

#- 231 QuerySubscriptions
$CLI_EXE \
    --sn platform \
    --op QuerySubscriptions \
    --namespace $AB_NAMESPACE \
    --chargeStatus 'SETUP' \
    --itemId 'A0fBmPaX' \
    --limit '69' \
    --offset '53' \
    --sku 'r7VK0TZZ' \
    --status 'CANCELLED' \
    --subscribedBy 'USER' \
    --userId 'ui2nuqnH' \
    > test.out 2>&1
eval_tap $? 231 'QuerySubscriptions' test.out

#- 232 RecurringChargeSubscription
$CLI_EXE \
    --sn platform \
    --op RecurringChargeSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'QAvfKpU5' \
    > test.out 2>&1
eval_tap $? 232 'RecurringChargeSubscription' test.out

#- 233 GetTicketDynamic
$CLI_EXE \
    --sn platform \
    --op GetTicketDynamic \
    --boothName 'JY8Nnyju' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 233 'GetTicketDynamic' test.out

#- 234 DecreaseTicketSale
# body param: body
echo '{"orderNo": "xaxSx91x"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op DecreaseTicketSale \
    --boothName 'JStD3btj' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 234 'DecreaseTicketSale' test.out

#- 235 GetTicketBoothID
$CLI_EXE \
    --sn platform \
    --op GetTicketBoothID \
    --boothName 'JIpQVaQF' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 235 'GetTicketBoothID' test.out

#- 236 IncreaseTicketSale
# body param: body
echo '{"count": 67, "orderNo": "elV2QHi9"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op IncreaseTicketSale \
    --boothName '16jvKubm' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 236 'IncreaseTicketSale' test.out

#- 237 Commit
# body param: body
echo '{"actions": [{"operations": [{"creditPayload": {"balanceOrigin": "IOS", "count": 59, "currencyCode": "j5o9X0Zf", "expireAt": "1987-09-29T00:00:00Z"}, "debitPayload": {"count": 93, "currencyCode": "gpg4dR7d", "walletPlatform": "IOS"}, "fulFillItemPayload": {"count": 39, "entitlementCollectionId": "z4GMBO5R", "entitlementOrigin": "GooglePlay", "itemIdentity": "Nh6zXVnO", "itemIdentityType": "ITEM_SKU"}, "revokeEntitlementPayload": {"count": 8, "entitlementId": "UTO23CwY"}, "type": "FULFILL_ITEM"}, {"creditPayload": {"balanceOrigin": "Steam", "count": 61, "currencyCode": "G1seiC2i", "expireAt": "1974-03-01T00:00:00Z"}, "debitPayload": {"count": 36, "currencyCode": "OWqwNQ1A", "walletPlatform": "Playstation"}, "fulFillItemPayload": {"count": 55, "entitlementCollectionId": "zXrKoCEm", "entitlementOrigin": "Epic", "itemIdentity": "VN5n9gE0", "itemIdentityType": "ITEM_ID"}, "revokeEntitlementPayload": {"count": 82, "entitlementId": "ykNCm4nS"}, "type": "FULFILL_ITEM"}, {"creditPayload": {"balanceOrigin": "System", "count": 57, "currencyCode": "XuavHxD0", "expireAt": "1992-05-06T00:00:00Z"}, "debitPayload": {"count": 91, "currencyCode": "lukWC8Yl", "walletPlatform": "Other"}, "fulFillItemPayload": {"count": 70, "entitlementCollectionId": "0X3pfPZ6", "entitlementOrigin": "Epic", "itemIdentity": "bEox0ymL", "itemIdentityType": "ITEM_ID"}, "revokeEntitlementPayload": {"count": 84, "entitlementId": "rLv4aLO3"}, "type": "DEBIT_WALLET"}], "userId": "MQGGuOtv"}, {"operations": [{"creditPayload": {"balanceOrigin": "System", "count": 28, "currencyCode": "LMmz3KMI", "expireAt": "1989-11-25T00:00:00Z"}, "debitPayload": {"count": 20, "currencyCode": "8a0ruoZb", "walletPlatform": "Xbox"}, "fulFillItemPayload": {"count": 84, "entitlementCollectionId": "WnZ4ODCG", "entitlementOrigin": "Other", "itemIdentity": "X7ci5b4k", "itemIdentityType": "ITEM_SKU"}, "revokeEntitlementPayload": {"count": 2, "entitlementId": "Szzf6Dgw"}, "type": "REVOKE_ENTITLEMENT"}, {"creditPayload": {"balanceOrigin": "Nintendo", "count": 44, "currencyCode": "L8hgXRdg", "expireAt": "1992-08-11T00:00:00Z"}, "debitPayload": {"count": 61, "currencyCode": "tk5RDcG6", "walletPlatform": "Playstation"}, "fulFillItemPayload": {"count": 32, "entitlementCollectionId": "l2GPqDEz", "entitlementOrigin": "Steam", "itemIdentity": "ZgTAg3cK", "itemIdentityType": "ITEM_SKU"}, "revokeEntitlementPayload": {"count": 22, "entitlementId": "ElrjfzN7"}, "type": "CREDIT_WALLET"}, {"creditPayload": {"balanceOrigin": "IOS", "count": 5, "currencyCode": "AMBDzuiQ", "expireAt": "1971-01-06T00:00:00Z"}, "debitPayload": {"count": 78, "currencyCode": "RGtXiQvA", "walletPlatform": "Nintendo"}, "fulFillItemPayload": {"count": 67, "entitlementCollectionId": "mEihPnBq", "entitlementOrigin": "Xbox", "itemIdentity": "WTBx4qXJ", "itemIdentityType": "ITEM_SKU"}, "revokeEntitlementPayload": {"count": 25, "entitlementId": "JZ0RpmLk"}, "type": "CREDIT_WALLET"}], "userId": "gwWcqfeu"}, {"operations": [{"creditPayload": {"balanceOrigin": "Playstation", "count": 29, "currencyCode": "mTcKqjp7", "expireAt": "1996-03-10T00:00:00Z"}, "debitPayload": {"count": 9, "currencyCode": "wjUWX6S8", "walletPlatform": "Nintendo"}, "fulFillItemPayload": {"count": 6, "entitlementCollectionId": "E47TrNNh", "entitlementOrigin": "Nintendo", "itemIdentity": "dDU3kUc6", "itemIdentityType": "ITEM_SKU"}, "revokeEntitlementPayload": {"count": 91, "entitlementId": "H6C4Nq8d"}, "type": "CREDIT_WALLET"}, {"creditPayload": {"balanceOrigin": "GooglePlay", "count": 38, "currencyCode": "PWwizEwx", "expireAt": "1988-12-16T00:00:00Z"}, "debitPayload": {"count": 57, "currencyCode": "OvIYu8Gt", "walletPlatform": "Nintendo"}, "fulFillItemPayload": {"count": 9, "entitlementCollectionId": "d1v2jIM2", "entitlementOrigin": "IOS", "itemIdentity": "T7SOmWK1", "itemIdentityType": "ITEM_SKU"}, "revokeEntitlementPayload": {"count": 77, "entitlementId": "BuFrpw7F"}, "type": "FULFILL_ITEM"}, {"creditPayload": {"balanceOrigin": "GooglePlay", "count": 1, "currencyCode": "lTrzloOL", "expireAt": "1991-08-19T00:00:00Z"}, "debitPayload": {"count": 37, "currencyCode": "6RpvZCkf", "walletPlatform": "Steam"}, "fulFillItemPayload": {"count": 6, "entitlementCollectionId": "3OvbES0K", "entitlementOrigin": "Xbox", "itemIdentity": "mGQNd5qg", "itemIdentityType": "ITEM_ID"}, "revokeEntitlementPayload": {"count": 50, "entitlementId": "hZRjGGJn"}, "type": "CREDIT_WALLET"}], "userId": "nqs0I64y"}], "metadata": {"iUqhr0PU": {}, "A8N7JXZ4": {}, "6iCFA91q": {}}, "needPreCheck": true, "transactionId": "uHhXuKvX", "type": "7ZieTZkT"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op Commit \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 237 'Commit' test.out

#- 238 GetTradeHistoryByCriteria
$CLI_EXE \
    --sn platform \
    --op GetTradeHistoryByCriteria \
    --namespace $AB_NAMESPACE \
    --limit '0' \
    --offset '10' \
    --status 'INIT' \
    --type 'Puft93ZW' \
    --userId 'BFw1HLhT' \
    > test.out 2>&1
eval_tap $? 238 'GetTradeHistoryByCriteria' test.out

#- 239 GetTradeHistoryByTransactionId
$CLI_EXE \
    --sn platform \
    --op GetTradeHistoryByTransactionId \
    --namespace $AB_NAMESPACE \
    --transactionId '3vIq1V9v' \
    > test.out 2>&1
eval_tap $? 239 'GetTradeHistoryByTransactionId' test.out

#- 240 UnlockSteamUserAchievement
# body param: body
echo '{"achievements": [{"id": "2FoHMdgK", "value": 68}, {"id": "XFuomOUW", "value": 68}, {"id": "KaSUbnLS", "value": 62}], "steamUserId": "T3L1lSa5"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UnlockSteamUserAchievement \
    --namespace $AB_NAMESPACE \
    --userId 'R9cGGRCx' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 240 'UnlockSteamUserAchievement' test.out

#- 241 GetXblUserAchievements
$CLI_EXE \
    --sn platform \
    --op GetXblUserAchievements \
    --namespace $AB_NAMESPACE \
    --userId 'AuDGbDu4' \
    --xboxUserId 'ixylr6ww' \
    > test.out 2>&1
eval_tap $? 241 'GetXblUserAchievements' test.out

#- 242 UpdateXblUserAchievement
# body param: body
echo '{"achievements": [{"id": "b4SzJZ3G", "percentComplete": 36}, {"id": "E7RDz57C", "percentComplete": 45}, {"id": "KYTqdNC5", "percentComplete": 58}], "serviceConfigId": "1ozscABB", "titleId": "fXuzPK3M", "xboxUserId": "MFMGNVYZ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXblUserAchievement \
    --namespace $AB_NAMESPACE \
    --userId 'BPphVdZC' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 242 'UpdateXblUserAchievement' test.out

#- 243 AnonymizeCampaign
$CLI_EXE \
    --sn platform \
    --op AnonymizeCampaign \
    --namespace $AB_NAMESPACE \
    --userId 'agcH7pQJ' \
    > test.out 2>&1
eval_tap $? 243 'AnonymizeCampaign' test.out

#- 244 AnonymizeEntitlement
$CLI_EXE \
    --sn platform \
    --op AnonymizeEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'AMB8h2Ih' \
    > test.out 2>&1
eval_tap $? 244 'AnonymizeEntitlement' test.out

#- 245 AnonymizeFulfillment
$CLI_EXE \
    --sn platform \
    --op AnonymizeFulfillment \
    --namespace $AB_NAMESPACE \
    --userId '2LbBW209' \
    > test.out 2>&1
eval_tap $? 245 'AnonymizeFulfillment' test.out

#- 246 AnonymizeIntegration
$CLI_EXE \
    --sn platform \
    --op AnonymizeIntegration \
    --namespace $AB_NAMESPACE \
    --userId 'J7xRiPRc' \
    > test.out 2>&1
eval_tap $? 246 'AnonymizeIntegration' test.out

#- 247 AnonymizeOrder
$CLI_EXE \
    --sn platform \
    --op AnonymizeOrder \
    --namespace $AB_NAMESPACE \
    --userId 'LreGmjTZ' \
    > test.out 2>&1
eval_tap $? 247 'AnonymizeOrder' test.out

#- 248 AnonymizePayment
$CLI_EXE \
    --sn platform \
    --op AnonymizePayment \
    --namespace $AB_NAMESPACE \
    --userId 'iz8Pj7Fy' \
    > test.out 2>&1
eval_tap $? 248 'AnonymizePayment' test.out

#- 249 AnonymizeRevocation
$CLI_EXE \
    --sn platform \
    --op AnonymizeRevocation \
    --namespace $AB_NAMESPACE \
    --userId 'ggLEXnqf' \
    > test.out 2>&1
eval_tap $? 249 'AnonymizeRevocation' test.out

#- 250 AnonymizeSubscription
$CLI_EXE \
    --sn platform \
    --op AnonymizeSubscription \
    --namespace $AB_NAMESPACE \
    --userId 'KtjCPjIC' \
    > test.out 2>&1
eval_tap $? 250 'AnonymizeSubscription' test.out

#- 251 AnonymizeWallet
$CLI_EXE \
    --sn platform \
    --op AnonymizeWallet \
    --namespace $AB_NAMESPACE \
    --userId 'yqVy6mtM' \
    > test.out 2>&1
eval_tap $? 251 'AnonymizeWallet' test.out

#- 252 GetUserDLCByPlatform
$CLI_EXE \
    --sn platform \
    --op GetUserDLCByPlatform \
    --namespace $AB_NAMESPACE \
    --userId 'CbygqAcU' \
    --type 'PSN' \
    > test.out 2>&1
eval_tap $? 252 'GetUserDLCByPlatform' test.out

#- 253 GetUserDLC
$CLI_EXE \
    --sn platform \
    --op GetUserDLC \
    --namespace $AB_NAMESPACE \
    --userId 'mnv8Q5zZ' \
    --includeAllNamespaces 'false' \
    --status 'FULFILLED' \
    --type 'STEAM' \
    > test.out 2>&1
eval_tap $? 253 'GetUserDLC' test.out

#- 254 QueryUserEntitlements
$CLI_EXE \
    --sn platform \
    --op QueryUserEntitlements \
    --namespace $AB_NAMESPACE \
    --userId 'qgXOsmLR' \
    --activeOnly 'true' \
    --appType 'GAME' \
    --collectionId 'V5E8fGnw' \
    --entitlementClazz 'SUBSCRIPTION' \
    --entitlementName 'Ptf1ujyc' \
    --features '["qL6gAW2G", "q0myBKU3", "HSwvtpms"]' \
    --fuzzyMatchName 'false' \
    --ignoreActiveDate 'false' \
    --itemId '["qLW8lEbx", "7pSCgsM2", "WJmHlrB7"]' \
    --limit '40' \
    --offset '33' \
    --origin 'Xbox' \
    > test.out 2>&1
eval_tap $? 254 'QueryUserEntitlements' test.out

#- 255 GrantUserEntitlement
# body param: body
echo '[{"collectionId": "ngqjQB6Z", "endDate": "1998-12-06T00:00:00Z", "grantedCode": "UFgXrPrP", "itemId": "dXKvMTJ7", "itemNamespace": "hfToiQtf", "language": "uSLl", "metadata": {"ROULfHQP": {}, "Vdf2cVaB": {}, "BZXrerca": {}}, "origin": "GooglePlay", "quantity": 36, "region": "1uIZQ1bv", "source": "ACHIEVEMENT", "startDate": "1976-12-15T00:00:00Z", "storeId": "BSZBh9eV"}, {"collectionId": "GdS5I1FA", "endDate": "1991-01-20T00:00:00Z", "grantedCode": "xyrAR28C", "itemId": "6FWCwika", "itemNamespace": "hPVOfkDH", "language": "QuwM_VdgR", "metadata": {"B3lUg8ag": {}, "cyICY9Gh": {}, "nwNzkwXj": {}}, "origin": "Epic", "quantity": 47, "region": "W4yJGvlC", "source": "IAP", "startDate": "1974-03-01T00:00:00Z", "storeId": "CgyDwmw6"}, {"collectionId": "3K6kZGSA", "endDate": "1979-04-10T00:00:00Z", "grantedCode": "peFscVWo", "itemId": "QtpJK72l", "itemNamespace": "irR7R8iL", "language": "Coib-dbXx", "metadata": {"vckJNgRF": {}, "tdfpaUYC": {}, "G2R5J9KA": {}}, "origin": "Twitch", "quantity": 67, "region": "YdVNAiH6", "source": "REFERRAL_BONUS", "startDate": "1996-07-08T00:00:00Z", "storeId": "whnr5awQ"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op GrantUserEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'I4uP9ShE' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 255 'GrantUserEntitlement' test.out

#- 256 GetUserAppEntitlementByAppId
$CLI_EXE \
    --sn platform \
    --op GetUserAppEntitlementByAppId \
    --namespace $AB_NAMESPACE \
    --userId 'u2RofsIX' \
    --activeOnly 'false' \
    --appId 'wcYLNQG1' \
    > test.out 2>&1
eval_tap $? 256 'GetUserAppEntitlementByAppId' test.out

#- 257 QueryUserEntitlementsByAppType
$CLI_EXE \
    --sn platform \
    --op QueryUserEntitlementsByAppType \
    --namespace $AB_NAMESPACE \
    --userId 'CZhQ0azV' \
    --activeOnly 'true' \
    --limit '51' \
    --offset '89' \
    --appType 'SOFTWARE' \
    > test.out 2>&1
eval_tap $? 257 'QueryUserEntitlementsByAppType' test.out

#- 258 GetUserEntitlementsByIds
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementsByIds \
    --namespace $AB_NAMESPACE \
    --userId 'yGFZ1R2R' \
    --ids '["MGyB55XY", "jv2aYQqU", "OGdDAWo1"]' \
    > test.out 2>&1
eval_tap $? 258 'GetUserEntitlementsByIds' test.out

#- 259 GetUserEntitlementByItemId
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'vGfoPyvw' \
    --activeOnly 'false' \
    --entitlementClazz 'SUBSCRIPTION' \
    --platform 'N7pCGsjE' \
    --itemId 'RvRD160q' \
    > test.out 2>&1
eval_tap $? 259 'GetUserEntitlementByItemId' test.out

#- 260 GetUserActiveEntitlementsByItemIds
$CLI_EXE \
    --sn platform \
    --op GetUserActiveEntitlementsByItemIds \
    --namespace $AB_NAMESPACE \
    --userId 'taAedmg0' \
    --ids '["f6mkKVSY", "hBxDtALf", "RlK83Zgd"]' \
    --platform 'afGwhZlP' \
    > test.out 2>&1
eval_tap $? 260 'GetUserActiveEntitlementsByItemIds' test.out

#- 261 GetUserEntitlementBySku
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementBySku \
    --namespace $AB_NAMESPACE \
    --userId 'CjszThcH' \
    --activeOnly 'true' \
    --entitlementClazz 'LOOTBOX' \
    --platform 'awVu8St4' \
    --sku 'dxhe35eb' \
    > test.out 2>&1
eval_tap $? 261 'GetUserEntitlementBySku' test.out

#- 262 ExistsAnyUserActiveEntitlement
$CLI_EXE \
    --sn platform \
    --op ExistsAnyUserActiveEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'evbHmYTD' \
    --appIds '["2YCAebla", "tdTJzepS", "0O1aW7Wk"]' \
    --itemIds '["u0SRcwD0", "GmQnh2zd", "aSuZjboR"]' \
    --platform 'uyiuW3cC' \
    --skus '["nu8hPKiD", "7uqtgYcp", "V3YUemCs"]' \
    > test.out 2>&1
eval_tap $? 262 'ExistsAnyUserActiveEntitlement' test.out

#- 263 ExistsAnyUserActiveEntitlementByItemIds
$CLI_EXE \
    --sn platform \
    --op ExistsAnyUserActiveEntitlementByItemIds \
    --namespace $AB_NAMESPACE \
    --userId 'xXdrhHgg' \
    --platform 'AzBLUWrc' \
    --itemIds '["QuEILj4e", "ASwcS6Tz", "ZYy5oYOR"]' \
    > test.out 2>&1
eval_tap $? 263 'ExistsAnyUserActiveEntitlementByItemIds' test.out

#- 264 GetUserAppEntitlementOwnershipByAppId
$CLI_EXE \
    --sn platform \
    --op GetUserAppEntitlementOwnershipByAppId \
    --namespace $AB_NAMESPACE \
    --userId 'osZ34sxz' \
    --appId 'StZ4TGSl' \
    > test.out 2>&1
eval_tap $? 264 'GetUserAppEntitlementOwnershipByAppId' test.out

#- 265 GetUserEntitlementOwnershipByItemId
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementOwnershipByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'J6tzt2lJ' \
    --entitlementClazz 'LOOTBOX' \
    --platform 'cTgiMEPD' \
    --itemId 'ZL2EntVJ' \
    > test.out 2>&1
eval_tap $? 265 'GetUserEntitlementOwnershipByItemId' test.out

#- 266 GetUserEntitlementOwnershipByItemIds
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementOwnershipByItemIds \
    --namespace $AB_NAMESPACE \
    --userId 'jXjDuJJ5' \
    --ids '["ZQ0ECjb9", "pNPVuSkD", "6axvjGqf"]' \
    --platform '09GqvE4w' \
    > test.out 2>&1
eval_tap $? 266 'GetUserEntitlementOwnershipByItemIds' test.out

#- 267 GetUserEntitlementOwnershipBySku
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementOwnershipBySku \
    --namespace $AB_NAMESPACE \
    --userId 'tK92eWug' \
    --entitlementClazz 'LOOTBOX' \
    --platform 'HHcTP2Tn' \
    --sku 'RFB5Bh9Y' \
    > test.out 2>&1
eval_tap $? 267 'GetUserEntitlementOwnershipBySku' test.out

#- 268 RevokeAllEntitlements
$CLI_EXE \
    --sn platform \
    --op RevokeAllEntitlements \
    --namespace $AB_NAMESPACE \
    --userId 'n7VkPcuU' \
    > test.out 2>&1
eval_tap $? 268 'RevokeAllEntitlements' test.out

#- 269 RevokeUserEntitlements
$CLI_EXE \
    --sn platform \
    --op RevokeUserEntitlements \
    --namespace $AB_NAMESPACE \
    --userId 'HXMjv4ko' \
    --entitlementIds '0wPFH8HA' \
    > test.out 2>&1
eval_tap $? 269 'RevokeUserEntitlements' test.out

#- 270 GetUserEntitlement
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlement \
    --entitlementId 'J5Nbire5' \
    --namespace $AB_NAMESPACE \
    --userId 'ELspZtoi' \
    > test.out 2>&1
eval_tap $? 270 'GetUserEntitlement' test.out

#- 271 UpdateUserEntitlement
# body param: body
echo '{"collectionId": "morPfv2y", "endDate": "1990-03-01T00:00:00Z", "nullFieldList": ["WVB8MgPi", "yxcKuuPd", "jCZW04Y8"], "origin": "Xbox", "reason": "xE9lw0l6", "startDate": "1981-04-22T00:00:00Z", "status": "CONSUMED", "useCount": 97}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateUserEntitlement \
    --entitlementId 'WkNCcsBo' \
    --namespace $AB_NAMESPACE \
    --userId 'IZFgnZJf' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 271 'UpdateUserEntitlement' test.out

#- 272 ConsumeUserEntitlement
# body param: body
echo '{"metadata": {"YSPzxEnK": {}, "HAPOachf": {}, "LP3P6oK8": {}}, "options": ["aypIiyRj", "yLsMCjco", "axaCrPrC"], "platform": "oxa34Ws6", "requestId": "xDWxx3q3", "useCount": 80}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ConsumeUserEntitlement \
    --entitlementId 'rJZGe8dD' \
    --namespace $AB_NAMESPACE \
    --userId 'Lq6EpInp' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 272 'ConsumeUserEntitlement' test.out

#- 273 DisableUserEntitlement
$CLI_EXE \
    --sn platform \
    --op DisableUserEntitlement \
    --entitlementId '6v75fzHr' \
    --namespace $AB_NAMESPACE \
    --userId 'RoPqcwKw' \
    > test.out 2>&1
eval_tap $? 273 'DisableUserEntitlement' test.out

#- 274 EnableUserEntitlement
$CLI_EXE \
    --sn platform \
    --op EnableUserEntitlement \
    --entitlementId 'DLoEhCTG' \
    --namespace $AB_NAMESPACE \
    --userId 'YAL39k3z' \
    > test.out 2>&1
eval_tap $? 274 'EnableUserEntitlement' test.out

#- 275 GetUserEntitlementHistories
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementHistories \
    --entitlementId 'B7BuZLoI' \
    --namespace $AB_NAMESPACE \
    --userId 'QS3Gnsf9' \
    > test.out 2>&1
eval_tap $? 275 'GetUserEntitlementHistories' test.out

#- 276 RevokeUserEntitlement
# body param: body
echo '{"metadata": {"bX1ICf3v": {}, "IagrCbeO": {}, "7mIH8qWV": {}}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RevokeUserEntitlement \
    --entitlementId 'MlLwIGEc' \
    --namespace $AB_NAMESPACE \
    --userId '5F7JyCyo' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 276 'RevokeUserEntitlement' test.out

#- 277 RevokeUserEntitlementByUseCount
# body param: body
echo '{"reason": "bZ6tutEf", "useCount": 73}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RevokeUserEntitlementByUseCount \
    --entitlementId 'Rs5bpcyx' \
    --namespace $AB_NAMESPACE \
    --userId 'yNHyYGj4' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 277 'RevokeUserEntitlementByUseCount' test.out

#- 278 PreCheckRevokeUserEntitlementByUseCount
$CLI_EXE \
    --sn platform \
    --op PreCheckRevokeUserEntitlementByUseCount \
    --entitlementId 'mwTWO2do' \
    --namespace $AB_NAMESPACE \
    --userId 'BNqQch3m' \
    --quantity '54' \
    > test.out 2>&1
eval_tap $? 278 'PreCheckRevokeUserEntitlementByUseCount' test.out

#- 279 RevokeUseCount
eval_tap 0 279 'RevokeUseCount # SKIP deprecated' test.out

#- 280 SellUserEntitlement
# body param: body
echo '{"platform": "S7cVmtdW", "requestId": "YEiZbgv9", "useCount": 97}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SellUserEntitlement \
    --entitlementId 'Qy35mXtD' \
    --namespace $AB_NAMESPACE \
    --userId 'wntEYs6I' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 280 'SellUserEntitlement' test.out

#- 281 FulfillItem
# body param: body
echo '{"duration": 11, "endDate": "1999-01-27T00:00:00Z", "entitlementCollectionId": "SVhXCZXi", "entitlementOrigin": "Epic", "itemId": "96Tr85zx", "itemSku": "b40AP6JU", "language": "5q9rsRCu", "metadata": {"eVGhTFgX": {}, "ygXS2hu6": {}, "kRMNmiGq": {}}, "order": {"currency": {"currencyCode": "nBGGAOKY", "currencySymbol": "UI48UJOf", "currencyType": "VIRTUAL", "decimals": 26, "namespace": "aBPZbm16"}, "ext": {"VE3aIJsP": {}, "1uvZUUbm": {}, "ICdWBgPz": {}}, "free": false}, "orderNo": "wSO0WgbV", "origin": "Epic", "overrideBundleItemQty": {"BG1oYMMf": 6, "19XujNXp": 94, "IHi4dqIo": 57}, "quantity": 25, "region": "wDN1341g", "source": "IAP", "startDate": "1985-12-03T00:00:00Z", "storeId": "EvTnemzi"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op FulfillItem \
    --namespace $AB_NAMESPACE \
    --userId 'YZGyIsg0' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 281 'FulfillItem' test.out

#- 282 RedeemCode
# body param: body
echo '{"code": "717lLmHV", "language": "cGa", "region": "gFQuRuTP"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RedeemCode \
    --namespace $AB_NAMESPACE \
    --userId 'oGhl61R1' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 282 'RedeemCode' test.out

#- 283 PreCheckFulfillItem
# body param: body
echo '{"itemId": "3UmVuQaK", "itemSku": "tEV2B5N7", "quantity": 8}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PreCheckFulfillItem \
    --namespace $AB_NAMESPACE \
    --userId 'VXEBrJYq' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 283 'PreCheckFulfillItem' test.out

#- 284 FulfillRewards
# body param: body
echo '{"entitlementCollectionId": "JjnUjew7", "entitlementOrigin": "Twitch", "metadata": {"bc4DcRWg": {}, "bDANMzJj": {}, "21kGJobg": {}}, "origin": "Oculus", "rewards": [{"currency": {"currencyCode": "JE9UuYEo", "namespace": "za0WRPgJ"}, "item": {"itemId": "zZCaUYGY", "itemName": "PHoOEbmK", "itemSku": "kJaODwqo", "itemType": "IIOHDD9q"}, "quantity": 80, "type": "CURRENCY"}, {"currency": {"currencyCode": "vDVY6vi1", "namespace": "YTPEaUDT"}, "item": {"itemId": "SGijbEuK", "itemName": "gLNoszKp", "itemSku": "6UVOrXEw", "itemType": "dPtIxr0B"}, "quantity": 91, "type": "CURRENCY"}, {"currency": {"currencyCode": "b78fcdh6", "namespace": "wDkDPl5W"}, "item": {"itemId": "YdEzu00F", "itemName": "Ij6Hb7Fq", "itemSku": "PQEjVANp", "itemType": "Oduka4LQ"}, "quantity": 38, "type": "ITEM"}], "source": "GIFT", "transactionId": "fDwzJ5mH"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op FulfillRewards \
    --namespace $AB_NAMESPACE \
    --userId 'r3IpBql9' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 284 'FulfillRewards' test.out

#- 285 QueryUserIAPOrders
$CLI_EXE \
    --sn platform \
    --op QueryUserIAPOrders \
    --namespace $AB_NAMESPACE \
    --userId 'QddzA0N5' \
    --endTime 'k4OVcIN2' \
    --limit '64' \
    --offset '55' \
    --productId 'k4S8hrhe' \
    --startTime 'BdM8J8Qd' \
    --status 'REVOKED' \
    --type 'OCULUS' \
    > test.out 2>&1
eval_tap $? 285 'QueryUserIAPOrders' test.out

#- 286 QueryAllUserIAPOrders
$CLI_EXE \
    --sn platform \
    --op QueryAllUserIAPOrders \
    --namespace $AB_NAMESPACE \
    --userId 'eJ946kRO' \
    > test.out 2>&1
eval_tap $? 286 'QueryAllUserIAPOrders' test.out

#- 287 QueryUserIAPConsumeHistory
$CLI_EXE \
    --sn platform \
    --op QueryUserIAPConsumeHistory \
    --namespace $AB_NAMESPACE \
    --userId 'Rtw87AA5' \
    --endTime 'kj7rBXmM' \
    --limit '65' \
    --offset '72' \
    --startTime 'YQkJWLRd' \
    --status 'FAIL' \
    --type 'XBOX' \
    > test.out 2>&1
eval_tap $? 287 'QueryUserIAPConsumeHistory' test.out

#- 288 MockFulfillIAPItem
# body param: body
echo '{"itemIdentityType": "ITEM_ID", "language": "Vx-LlyV_CR", "productId": "CyQKo2us", "region": "Xol9O5pJ", "transactionId": "HBZmnfvO", "type": "APPLE"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op MockFulfillIAPItem \
    --namespace $AB_NAMESPACE \
    --userId 'WSKAKpae' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 288 'MockFulfillIAPItem' test.out

#- 289 AdminGetIAPOrderLineItems
$CLI_EXE \
    --sn platform \
    --op AdminGetIAPOrderLineItems \
    --iapOrderNo 'fFb8zJaJ' \
    --namespace $AB_NAMESPACE \
    --userId 'B8wuoQ9E' \
    > test.out 2>&1
eval_tap $? 289 'AdminGetIAPOrderLineItems' test.out

#- 290 AdminSyncSteamAbnormalTransaction
$CLI_EXE \
    --sn platform \
    --op AdminSyncSteamAbnormalTransaction \
    --namespace $AB_NAMESPACE \
    --userId '61aqG3Rs' \
    > test.out 2>&1
eval_tap $? 290 'AdminSyncSteamAbnormalTransaction' test.out

#- 291 AdminSyncSteamIAPByTransaction
# body param: body
echo '{"orderId": "5k8sxfHp"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op AdminSyncSteamIAPByTransaction \
    --namespace $AB_NAMESPACE \
    --userId '7ctyhOok' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 291 'AdminSyncSteamIAPByTransaction' test.out

#- 292 QueryUserThirdPartySubscription
$CLI_EXE \
    --sn platform \
    --op QueryUserThirdPartySubscription \
    --namespace $AB_NAMESPACE \
    --userId '4AiNPD36' \
    --activeOnly 'false' \
    --groupId 'YBE27I7J' \
    --limit '25' \
    --offset '26' \
    --platform 'EPICGAMES' \
    --productId 'xacCz13j' \
    > test.out 2>&1
eval_tap $? 292 'QueryUserThirdPartySubscription' test.out

#- 293 GetThirdPartyPlatformSubscriptionOwnershipByGroupId
$CLI_EXE \
    --sn platform \
    --op GetThirdPartyPlatformSubscriptionOwnershipByGroupId \
    --namespace $AB_NAMESPACE \
    --platform 'PLAYSTATION' \
    --userId 'AaEa5q4b' \
    --groupId '8YN9j3SF' \
    > test.out 2>&1
eval_tap $? 293 'GetThirdPartyPlatformSubscriptionOwnershipByGroupId' test.out

#- 294 GetThirdPartyPlatformSubscriptionOwnershipByProductId
$CLI_EXE \
    --sn platform \
    --op GetThirdPartyPlatformSubscriptionOwnershipByProductId \
    --namespace $AB_NAMESPACE \
    --platform 'XBOX' \
    --userId 'UzD6ZbSb' \
    --productId '0F2ZzDZ3' \
    > test.out 2>&1
eval_tap $? 294 'GetThirdPartyPlatformSubscriptionOwnershipByProductId' test.out

#- 295 QueryUserThirdPartySubscriptionTransactions
$CLI_EXE \
    --sn platform \
    --op QueryUserThirdPartySubscriptionTransactions \
    --namespace $AB_NAMESPACE \
    --userId 'NDUO3o8d' \
    --activeOnly 'true' \
    --groupId 'UbMoscIf' \
    --limit '65' \
    --offset '49' \
    --platform 'STEAM' \
    --productId 'AqOWZJqT' \
    > test.out 2>&1
eval_tap $? 295 'QueryUserThirdPartySubscriptionTransactions' test.out

#- 296 GetThirdPartySubscriptionDetails
$CLI_EXE \
    --sn platform \
    --op GetThirdPartySubscriptionDetails \
    --id 'ClwmXph5' \
    --namespace $AB_NAMESPACE \
    --userId 'wABaVdsm' \
    > test.out 2>&1
eval_tap $? 296 'GetThirdPartySubscriptionDetails' test.out

#- 297 GetSubscriptionHistory
$CLI_EXE \
    --sn platform \
    --op GetSubscriptionHistory \
    --id 'yubW8FxR' \
    --namespace $AB_NAMESPACE \
    --userId 'mvlhhVaq' \
    --limit '100' \
    --offset '96' \
    > test.out 2>&1
eval_tap $? 297 'GetSubscriptionHistory' test.out

#- 298 SyncSubscriptionTransaction
$CLI_EXE \
    --sn platform \
    --op SyncSubscriptionTransaction \
    --id 'W8Tlqaa7' \
    --namespace $AB_NAMESPACE \
    --userId 'zIUQ2CrU' \
    > test.out 2>&1
eval_tap $? 298 'SyncSubscriptionTransaction' test.out

#- 299 GetThirdPartyUserSubscriptionDetails
$CLI_EXE \
    --sn platform \
    --op GetThirdPartyUserSubscriptionDetails \
    --id 'esx4D8Tw' \
    --namespace $AB_NAMESPACE \
    --userId 'wukDlOcQ' \
    > test.out 2>&1
eval_tap $? 299 'GetThirdPartyUserSubscriptionDetails' test.out

#- 300 SyncSubscription
$CLI_EXE \
    --sn platform \
    --op SyncSubscription \
    --id 'LARCZCVP' \
    --namespace $AB_NAMESPACE \
    --userId 'HwzCu2CA' \
    > test.out 2>&1
eval_tap $? 300 'SyncSubscription' test.out

#- 301 QueryUserOrders
$CLI_EXE \
    --sn platform \
    --op QueryUserOrders \
    --namespace $AB_NAMESPACE \
    --userId 'auxboNhQ' \
    --discounted 'false' \
    --itemId 'viSw7UgA' \
    --limit '91' \
    --offset '3' \
    --status 'CHARGEBACK_REVERSED' \
    > test.out 2>&1
eval_tap $? 301 'QueryUserOrders' test.out

#- 302 AdminCreateUserOrder
# body param: body
echo '{"currencyCode": "g2SsJkum", "currencyNamespace": "uAl2Il72", "discountCodes": ["ZrvYHWBY", "hcknj1xW", "J6FdhS4x"], "discountedPrice": 0, "entitlementPlatform": "Nintendo", "ext": {"rb3DbCE5": {}, "76vEAgdb": {}, "cJOY7CyF": {}}, "itemId": "YbeheFDp", "language": "vnMW8pZs", "options": {"skipPriceValidation": true}, "platform": "Epic", "price": 59, "quantity": 55, "region": "pbEI5xsr", "returnUrl": "zpL4992V", "sandbox": false, "sectionId": "kFrGHRr8"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op AdminCreateUserOrder \
    --namespace $AB_NAMESPACE \
    --userId 'wiB2b78G' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 302 'AdminCreateUserOrder' test.out

#- 303 CountOfPurchasedItem
$CLI_EXE \
    --sn platform \
    --op CountOfPurchasedItem \
    --namespace $AB_NAMESPACE \
    --userId 'tfodIghb' \
    --itemId '3A9CpDCj' \
    > test.out 2>&1
eval_tap $? 303 'CountOfPurchasedItem' test.out

#- 304 GetUserOrder
$CLI_EXE \
    --sn platform \
    --op GetUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo '70ztcDKf' \
    --userId 'T8qy4L0Q' \
    > test.out 2>&1
eval_tap $? 304 'GetUserOrder' test.out

#- 305 UpdateUserOrderStatus
# body param: body
echo '{"status": "CLOSED", "statusReason": "lVCWVLpO"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateUserOrderStatus \
    --namespace $AB_NAMESPACE \
    --orderNo 'OdwW1XLM' \
    --userId 'gK7WIC9S' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 305 'UpdateUserOrderStatus' test.out

#- 306 FulfillUserOrder
$CLI_EXE \
    --sn platform \
    --op FulfillUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'UjIqwErg' \
    --userId 'caNRTxrm' \
    > test.out 2>&1
eval_tap $? 306 'FulfillUserOrder' test.out

#- 307 GetUserOrderGrant
eval_tap 0 307 'GetUserOrderGrant # SKIP deprecated' test.out

#- 308 GetUserOrderHistories
$CLI_EXE \
    --sn platform \
    --op GetUserOrderHistories \
    --namespace $AB_NAMESPACE \
    --orderNo 'qiqafBwz' \
    --userId '6URhlaS7' \
    > test.out 2>&1
eval_tap $? 308 'GetUserOrderHistories' test.out

#- 309 ProcessUserOrderNotification
# body param: body
echo '{"additionalData": {"cardSummary": "3nqtGZgU"}, "authorisedTime": "1997-05-12T00:00:00Z", "chargebackReversedTime": "1976-05-15T00:00:00Z", "chargebackTime": "1989-06-05T00:00:00Z", "chargedTime": "1989-10-14T00:00:00Z", "createdTime": "1973-09-12T00:00:00Z", "currency": {"currencyCode": "P3mnOmud", "currencySymbol": "Rs869R2Y", "currencyType": "REAL", "decimals": 38, "namespace": "q9q81yVI"}, "customParameters": {"2ZlRJPao": {}, "4INUZpWF": {}, "jhwqYct8": {}}, "extOrderNo": "qOTKXdTE", "extTxId": "P9uVGgYC", "extUserId": "WTZV8biN", "issuedAt": "1974-07-13T00:00:00Z", "metadata": {"v4U7fQ4n": "XrJFqVnd", "EPrL5xWn": "gC61ppjB", "P8cGq66a": "B3AYlMBy"}, "namespace": "xorx4oEz", "nonceStr": "RQgF6jjs", "paymentData": {"discountAmount": 7, "discountCode": "1yIReZXU", "subtotalPrice": 5, "tax": 58, "totalPrice": 67}, "paymentMethod": "jdfTvOsb", "paymentMethodFee": 8, "paymentOrderNo": "CYOp4hZj", "paymentProvider": "STRIPE", "paymentProviderFee": 21, "paymentStationUrl": "zBIi2nCL", "price": 11, "refundedTime": "1992-02-29T00:00:00Z", "salesTax": 62, "sandbox": false, "sku": "pB2DbLj7", "status": "AUTHORISE_FAILED", "statusReason": "e804U1xx", "subscriptionId": "VxBTDjVI", "subtotalPrice": 81, "targetNamespace": "qwxaOsve", "targetUserId": "Fex70P7C", "tax": 25, "totalPrice": 84, "totalTax": 91, "txEndTime": "1986-03-19T00:00:00Z", "type": "WZUy5Xck", "userId": "2tD8jK6b", "vat": 63}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ProcessUserOrderNotification \
    --namespace $AB_NAMESPACE \
    --orderNo 'qQOepy1r' \
    --userId 'BeWfD94u' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 309 'ProcessUserOrderNotification' test.out

#- 310 DownloadUserOrderReceipt
$CLI_EXE \
    --sn platform \
    --op DownloadUserOrderReceipt \
    --namespace $AB_NAMESPACE \
    --orderNo 'i9qeRkud' \
    --userId 'yTmeexH7' \
    > test.out 2>&1
eval_tap $? 310 'DownloadUserOrderReceipt' test.out

#- 311 CreateUserPaymentOrder
# body param: body
echo '{"currencyCode": "IaoTKQbA", "currencyNamespace": "PPCFB5VR", "customParameters": {"l6t9D4Wp": {}, "HwG7hcFc": {}, "tT14lMkG": {}}, "description": "Ej3SMpPx", "extOrderNo": "WzrSI0s3", "extUserId": "WCxKgnKg", "itemType": "EXTENSION", "language": "lE-Sybx", "metadata": {"5VpkGd0P": "jExOWvKu", "NNp0KQ6p": "79keE8Ld", "Nb61S3JN": "wrJSvKSB"}, "notifyUrl": "K8aLSnk8", "omitNotification": false, "platform": "Dzx6GvKJ", "price": 6, "recurringPaymentOrderNo": "XTIn7ICC", "region": "y3NZbwYu", "returnUrl": "YZXXlknf", "sandbox": false, "sku": "Qm8twxkG", "subscriptionId": "KXKfgpTG", "title": "NZdIFQsn"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateUserPaymentOrder \
    --namespace $AB_NAMESPACE \
    --userId 'WS5gRFqy' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 311 'CreateUserPaymentOrder' test.out

#- 312 RefundUserPaymentOrder
# body param: body
echo '{"description": "LoMpiVHt"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RefundUserPaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'sNYkEtYY' \
    --userId 'gk32BUpH' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 312 'RefundUserPaymentOrder' test.out

#- 313 GetUserPlatformAccountClosureHistories
$CLI_EXE \
    --sn platform \
    --op GetUserPlatformAccountClosureHistories \
    --namespace $AB_NAMESPACE \
    --userId 'OS2bf0jQ' \
    > test.out 2>&1
eval_tap $? 313 'GetUserPlatformAccountClosureHistories' test.out

#- 314 ApplyUserRedemption
# body param: body
echo '{"code": "Ai4wk5wi", "orderNo": "U58iCO3t"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ApplyUserRedemption \
    --namespace $AB_NAMESPACE \
    --userId 'A7i9Fz5v' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 314 'ApplyUserRedemption' test.out

#- 315 DoRevocation
# body param: body
echo '{"meta": {"E6w9mqXn": {}, "V4EMImvC": {}, "8NwvV1XB": {}}, "reason": "NxrALAEG", "requestId": "MJOSdfde", "revokeEntries": [{"currency": {"balanceOrigin": "IOS", "currencyCode": "vWu1Iu23", "namespace": "oU8OpYsL"}, "entitlement": {"entitlementId": "sdzgtBOJ"}, "item": {"entitlementOrigin": "Playstation", "itemIdentity": "rN2fVO4H", "itemIdentityType": "ITEM_SKU", "origin": "Epic"}, "quantity": 85, "type": "CURRENCY"}, {"currency": {"balanceOrigin": "Nintendo", "currencyCode": "FUELOK3V", "namespace": "l2loyQP6"}, "entitlement": {"entitlementId": "UsPC1Zne"}, "item": {"entitlementOrigin": "Steam", "itemIdentity": "w380gpXU", "itemIdentityType": "ITEM_SKU", "origin": "Steam"}, "quantity": 17, "type": "ITEM"}, {"currency": {"balanceOrigin": "Twitch", "currencyCode": "ERpimIBv", "namespace": "wC1rK9vE"}, "entitlement": {"entitlementId": "7sv9G8GM"}, "item": {"entitlementOrigin": "System", "itemIdentity": "496DWG1T", "itemIdentityType": "ITEM_SKU", "origin": "IOS"}, "quantity": 87, "type": "ITEM"}], "source": "ORDER", "transactionId": "iSaSNhWK"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op DoRevocation \
    --namespace $AB_NAMESPACE \
    --userId 'R0hzn32k' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 315 'DoRevocation' test.out

#- 316 RegisterXblSessions
# body param: body
echo '{"gameSessionId": "dPNasdva", "payload": {"yllSyhTu": {}, "i1XDcYmd": {}, "JQ3AswFT": {}}, "scid": "0fqElLLW", "sessionTemplateName": "lqbCx2OJ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RegisterXblSessions \
    --namespace $AB_NAMESPACE \
    --userId 'soWYGHXw' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 316 'RegisterXblSessions' test.out

#- 317 QueryUserSubscriptions
$CLI_EXE \
    --sn platform \
    --op QueryUserSubscriptions \
    --namespace $AB_NAMESPACE \
    --userId '2f5TB9cU' \
    --chargeStatus 'SETUP' \
    --itemId 'vNhtWLlw' \
    --limit '12' \
    --offset '100' \
    --sku 'k7uRi9DK' \
    --status 'CANCELLED' \
    --subscribedBy 'USER' \
    > test.out 2>&1
eval_tap $? 317 'QueryUserSubscriptions' test.out

#- 318 GetUserSubscriptionActivities
$CLI_EXE \
    --sn platform \
    --op GetUserSubscriptionActivities \
    --namespace $AB_NAMESPACE \
    --userId 'AhyRRheU' \
    --excludeSystem 'false' \
    --limit '67' \
    --offset '16' \
    --subscriptionId 'd3yT4gV7' \
    > test.out 2>&1
eval_tap $? 318 'GetUserSubscriptionActivities' test.out

#- 319 PlatformSubscribeSubscription
# body param: body
echo '{"grantDays": 38, "itemId": "moVlsvNJ", "language": "9Th7pCdI", "reason": "W90CwAJ8", "region": "VC2OwBXl", "source": "l1HLLYs5"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PlatformSubscribeSubscription \
    --namespace $AB_NAMESPACE \
    --userId 'kctjnG26' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 319 'PlatformSubscribeSubscription' test.out

#- 320 CheckUserSubscriptionSubscribableByItemId
$CLI_EXE \
    --sn platform \
    --op CheckUserSubscriptionSubscribableByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'XbXdr6gr' \
    --itemId 'YOp9VMjp' \
    > test.out 2>&1
eval_tap $? 320 'CheckUserSubscriptionSubscribableByItemId' test.out

#- 321 GetUserSubscription
$CLI_EXE \
    --sn platform \
    --op GetUserSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'RL3YD9OO' \
    --userId 'GnJ12F5J' \
    > test.out 2>&1
eval_tap $? 321 'GetUserSubscription' test.out

#- 322 DeleteUserSubscription
$CLI_EXE \
    --sn platform \
    --op DeleteUserSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'LxOQRkJx' \
    --userId '5sDmwtxu' \
    > test.out 2>&1
eval_tap $? 322 'DeleteUserSubscription' test.out

#- 323 CancelSubscription
# body param: body
echo '{"immediate": true, "reason": "sWBAUH48"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CancelSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'MBn9sgLF' \
    --userId '2dQ9yzer' \
    --force 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 323 'CancelSubscription' test.out

#- 324 GrantDaysToSubscription
# body param: body
echo '{"grantDays": 99, "reason": "nLfcVaLJ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op GrantDaysToSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId '1xyoVGoS' \
    --userId 'VTwHRjPx' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 324 'GrantDaysToSubscription' test.out

#- 325 GetUserSubscriptionBillingHistories
$CLI_EXE \
    --sn platform \
    --op GetUserSubscriptionBillingHistories \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'vVmlDSgl' \
    --userId 'vYtdSgas' \
    --excludeFree 'false' \
    --limit '39' \
    --offset '42' \
    > test.out 2>&1
eval_tap $? 325 'GetUserSubscriptionBillingHistories' test.out

#- 326 ProcessUserSubscriptionNotification
# body param: body
echo '{"additionalData": {"cardSummary": "W4aEf7qu"}, "authorisedTime": "1999-11-07T00:00:00Z", "chargebackReversedTime": "1975-12-12T00:00:00Z", "chargebackTime": "1988-09-13T00:00:00Z", "chargedTime": "1975-12-25T00:00:00Z", "createdTime": "1998-04-06T00:00:00Z", "currency": {"currencyCode": "CPp0jltb", "currencySymbol": "deSDwrHN", "currencyType": "REAL", "decimals": 74, "namespace": "BYnRgn0a"}, "customParameters": {"RRnh8qNm": {}, "ZayMtwzd": {}, "QX2rM9Z8": {}}, "extOrderNo": "A9PeRKXV", "extTxId": "AUdHMUVs", "extUserId": "sUaoJIhE", "issuedAt": "1997-09-28T00:00:00Z", "metadata": {"qbbrJ3AN": "V73quRkd", "KGAPXuJC": "VnJUYnZi", "1yPiQ6aC": "DHZXPv8F"}, "namespace": "DhTGqZrs", "nonceStr": "lsEKREHk", "paymentData": {"discountAmount": 76, "discountCode": "psnmmdE0", "subtotalPrice": 72, "tax": 7, "totalPrice": 26}, "paymentMethod": "O1KyzEzt", "paymentMethodFee": 57, "paymentOrderNo": "DdYW0fGs", "paymentProvider": "XSOLLA", "paymentProviderFee": 19, "paymentStationUrl": "EfKI0BZ1", "price": 67, "refundedTime": "1979-01-08T00:00:00Z", "salesTax": 43, "sandbox": true, "sku": "0gcVhCTO", "status": "REFUND_FAILED", "statusReason": "1DcFVKmN", "subscriptionId": "4jGAVAN2", "subtotalPrice": 19, "targetNamespace": "BkIuq1KM", "targetUserId": "3QrokoUS", "tax": 41, "totalPrice": 16, "totalTax": 55, "txEndTime": "1999-05-29T00:00:00Z", "type": "RDZigEBN", "userId": "sPPRijgA", "vat": 27}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ProcessUserSubscriptionNotification \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'ffSDd9XZ' \
    --userId 'qbDYq7yW' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 326 'ProcessUserSubscriptionNotification' test.out

#- 327 AcquireUserTicket
# body param: body
echo '{"count": 7, "orderNo": "8jdXzmnB"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op AcquireUserTicket \
    --boothName 'm0UwlsCJ' \
    --namespace $AB_NAMESPACE \
    --userId '194JNQtt' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 327 'AcquireUserTicket' test.out

#- 328 QueryUserCurrencyWallets
$CLI_EXE \
    --sn platform \
    --op QueryUserCurrencyWallets \
    --namespace $AB_NAMESPACE \
    --userId 'Fzsa88yk' \
    > test.out 2>&1
eval_tap $? 328 'QueryUserCurrencyWallets' test.out

#- 329 DebitUserWalletByCurrencyCode
# body param: body
echo '{"allowOverdraft": true, "amount": 85, "balanceOrigin": "Xbox", "balanceSource": "IAP_REVOCATION", "metadata": {"3jaiUpqx": {}, "UrDfXyaD": {}, "1RRyHUYq": {}}, "reason": "sW19doC7"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op DebitUserWalletByCurrencyCode \
    --currencyCode 'vnwp1rQo' \
    --namespace $AB_NAMESPACE \
    --userId 'YAmxkbvb' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 329 'DebitUserWalletByCurrencyCode' test.out

#- 330 ListUserCurrencyTransactions
$CLI_EXE \
    --sn platform \
    --op ListUserCurrencyTransactions \
    --currencyCode 'SFiH890W' \
    --namespace $AB_NAMESPACE \
    --userId 'uTlgZPSn' \
    --limit '3' \
    --offset '19' \
    > test.out 2>&1
eval_tap $? 330 'ListUserCurrencyTransactions' test.out

#- 331 CheckBalance
# body param: request
echo '{"amount": 86, "debitBalanceSource": "DLC_REVOCATION", "metadata": {"CV1W2uEY": {}, "B4ZqwSxP": {}, "OJcQqXYT": {}}, "reason": "WqCa7ApA", "walletPlatform": "Epic"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CheckBalance \
    --currencyCode 'L0698uvd' \
    --namespace $AB_NAMESPACE \
    --userId 'F508skoJ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 331 'CheckBalance' test.out

#- 332 CheckWallet
eval_tap 0 332 'CheckWallet # SKIP deprecated' test.out

#- 333 CreditUserWallet
# body param: body
echo '{"amount": 65, "expireAt": "1999-01-17T00:00:00Z", "metadata": {"pN6dOOoQ": {}, "5DAMeRbq": {}, "vLNZbmxg": {}}, "origin": "Nintendo", "reason": "Y5zK9e8N", "source": "REFERRAL_BONUS"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreditUserWallet \
    --currencyCode 'tMOEidnc' \
    --namespace $AB_NAMESPACE \
    --userId 'aghlEPA6' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 333 'CreditUserWallet' test.out

#- 334 DebitByWalletPlatform
# body param: request
echo '{"amount": 30, "debitBalanceSource": "IAP_REVOCATION", "metadata": {"swTIhxsx": {}, "RMOFZ2HC": {}, "iiMsh7iU": {}}, "reason": "EPuWykyb", "walletPlatform": "Playstation"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op DebitByWalletPlatform \
    --currencyCode 'NhMZhqta' \
    --namespace $AB_NAMESPACE \
    --userId 'RAUKlrMq' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 334 'DebitByWalletPlatform' test.out

#- 335 PayWithUserWallet
# body param: body
echo '{"amount": 31, "metadata": {"AdKWs1YR": {}, "DDQzv2bT": {}, "pnjWm2Jn": {}}, "walletPlatform": "GooglePlay"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PayWithUserWallet \
    --currencyCode 'KK6vMluF' \
    --namespace $AB_NAMESPACE \
    --userId 'O8VTC9C9' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 335 'PayWithUserWallet' test.out

#- 336 GetUserWallet
eval_tap 0 336 'GetUserWallet # SKIP deprecated' test.out

#- 337 DebitUserWallet
eval_tap 0 337 'DebitUserWallet # SKIP deprecated' test.out

#- 338 DisableUserWallet
eval_tap 0 338 'DisableUserWallet # SKIP deprecated' test.out

#- 339 EnableUserWallet
eval_tap 0 339 'EnableUserWallet # SKIP deprecated' test.out

#- 340 ListUserWalletTransactions
eval_tap 0 340 'ListUserWalletTransactions # SKIP deprecated' test.out

#- 341 ListViews
$CLI_EXE \
    --sn platform \
    --op ListViews \
    --namespace $AB_NAMESPACE \
    --storeId 'MuYU92Mq' \
    > test.out 2>&1
eval_tap $? 341 'ListViews' test.out

#- 342 CreateView
# body param: body
echo '{"displayOrder": 71, "localizations": {"xRkv6rfX": {"description": "aMZXtFXk", "localExt": {"U7Th26nA": {}, "ENaQ6XPC": {}, "wflqeXkW": {}}, "longDescription": "Zwp0yp0l", "title": "GLqmDkJc"}, "QprkQBqt": {"description": "23qmeRQg", "localExt": {"RraXPBkr": {}, "zzm6F6t4": {}, "EzfGgr6z": {}}, "longDescription": "X2BrWJgY", "title": "PJ1r8Yag"}, "mmdBz0mC": {"description": "I74WEMD8", "localExt": {"NpvbOyLo": {}, "sa8ukDWg": {}, "Idy5dNTA": {}}, "longDescription": "U4xbgYX7", "title": "KP6WHtDy"}}, "name": "oYhaLiyr"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateView \
    --namespace $AB_NAMESPACE \
    --storeId 'm9jrVaXZ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 342 'CreateView' test.out

#- 343 GetView
$CLI_EXE \
    --sn platform \
    --op GetView \
    --namespace $AB_NAMESPACE \
    --viewId 'uJ7Ql4ZE' \
    --storeId 'YokI5Ile' \
    > test.out 2>&1
eval_tap $? 343 'GetView' test.out

#- 344 UpdateView
# body param: body
echo '{"displayOrder": 38, "localizations": {"PPrW4NPw": {"description": "9ayEh8q7", "localExt": {"nOHu15ku": {}, "pc1PGavp": {}, "uE2lRuYB": {}}, "longDescription": "SJwyB5Hr", "title": "JmHWBDat"}, "dgG6zlCj": {"description": "lBp9uYng", "localExt": {"EpbQMutD": {}, "Tg72mmsn": {}, "OuIwFFHq": {}}, "longDescription": "pRzbT2dc", "title": "l8ZU7fiS"}, "d0K53qMH": {"description": "7iOVrNK3", "localExt": {"IkUUEpVA": {}, "7fI6uMlV": {}, "lYEEPZlZ": {}}, "longDescription": "fD34RrTb", "title": "uVGgHCgN"}}, "name": "z7Oi2nJV"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateView \
    --namespace $AB_NAMESPACE \
    --viewId 'AH2VFvpH' \
    --storeId '9nrDvxnd' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 344 'UpdateView' test.out

#- 345 DeleteView
$CLI_EXE \
    --sn platform \
    --op DeleteView \
    --namespace $AB_NAMESPACE \
    --viewId 'Ik8uihpJ' \
    --storeId 'U465BtWf' \
    > test.out 2>&1
eval_tap $? 345 'DeleteView' test.out

#- 346 GetWalletConfig
$CLI_EXE \
    --sn platform \
    --op GetWalletConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 346 'GetWalletConfig' test.out

#- 347 UpdateWalletConfig
# body param: body
echo '{"enablePaidForVCExpiration": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateWalletConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 347 'UpdateWalletConfig' test.out

#- 348 QueryWallets
eval_tap 0 348 'QueryWallets # SKIP deprecated' test.out

#- 349 BulkCredit
# body param: body
echo '[{"creditRequest": {"amount": 9, "expireAt": "1979-09-06T00:00:00Z", "metadata": {"d4CdHWXD": {}, "kGnaIycI": {}, "dFDeYSMo": {}}, "origin": "Epic", "reason": "e7UOKYfp", "source": "CONSUME_ENTITLEMENT"}, "currencyCode": "OWIkJ24p", "userIds": ["1zewe1vf", "9sbmRKQN", "G6agiVM3"]}, {"creditRequest": {"amount": 7, "expireAt": "1977-07-04T00:00:00Z", "metadata": {"8mnkbxbw": {}, "XchLHRVU": {}, "1kkH0e52": {}}, "origin": "IOS", "reason": "xxN8ldTu", "source": "DLC"}, "currencyCode": "nbrmZFS8", "userIds": ["t4cUKgns", "Cq9gYDj6", "HCSD0kQU"]}, {"creditRequest": {"amount": 15, "expireAt": "1976-06-04T00:00:00Z", "metadata": {"YKaM8s0y": {}, "yIIjbPuP": {}, "QNKRSBgY": {}}, "origin": "IOS", "reason": "10ic2Wti", "source": "CONSUME_ENTITLEMENT"}, "currencyCode": "SowwXsx0", "userIds": ["wggztNhk", "tEVUp4DI", "OJbkL1kB"]}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op BulkCredit \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 349 'BulkCredit' test.out

#- 350 BulkDebit
# body param: body
echo '[{"currencyCode": "Uk6Sdw0i", "request": {"allowOverdraft": false, "amount": 27, "balanceOrigin": "Twitch", "balanceSource": "ORDER_REVOCATION", "metadata": {"Nux2UQW6": {}, "c3FLQkKm": {}, "xsJb5Nmg": {}}, "reason": "h0M1tQLR"}, "userIds": ["BwCm3fMD", "9IOopb6j", "QtGdzZoC"]}, {"currencyCode": "veMYFvVa", "request": {"allowOverdraft": true, "amount": 32, "balanceOrigin": "Steam", "balanceSource": "TRADE", "metadata": {"xgunu8a3": {}, "DbRapJNT": {}, "f9218GFA": {}}, "reason": "kpsDxWhe"}, "userIds": ["jKV1tRs5", "r9EMBJwg", "jYgSz9tr"]}, {"currencyCode": "1OfYj4Ag", "request": {"allowOverdraft": false, "amount": 84, "balanceOrigin": "GooglePlay", "balanceSource": "OTHER", "metadata": {"i0mvNhJL": {}, "BtT6KIc3": {}, "XzEk8JXx": {}}, "reason": "vOjXARF8"}, "userIds": ["L9pz0PoE", "flmkP8rg", "1o5qSGnF"]}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op BulkDebit \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 350 'BulkDebit' test.out

#- 351 GetWallet
eval_tap 0 351 'GetWallet # SKIP deprecated' test.out

#- 352 SyncOrders
$CLI_EXE \
    --sn platform \
    --op SyncOrders \
    --nextEvaluatedKey 'VVtcBQ86' \
    --end '2Lw0sTIK' \
    --start 'OjIA4DlZ' \
    > test.out 2>&1
eval_tap $? 352 'SyncOrders' test.out

#- 353 TestAdyenConfig
# body param: body
echo '{"allowedPaymentMethods": ["v81lP09O", "zK25x3J7", "TgmDaJH9"], "apiKey": "OoTZ2cof", "authoriseAsCapture": true, "blockedPaymentMethods": ["5ir0mprm", "dFjijXCJ", "Y0grqtMv"], "clientKey": "1OdlH0T0", "dropInSettings": "aesALqYB", "liveEndpointUrlPrefix": "Gv1m4Kay", "merchantAccount": "T1pOlCRX", "notificationHmacKey": "qs4KpgCK", "notificationPassword": "sUdWNrfm", "notificationUsername": "dq5LNCqt", "returnUrl": "IEdwi8Bx", "settings": "SmNmDv83"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestAdyenConfig \
    --sandbox 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 353 'TestAdyenConfig' test.out

#- 354 TestAliPayConfig
# body param: body
echo '{"appId": "bSAuu1ct", "privateKey": "EjmTx4k5", "publicKey": "VnXSVHpX", "returnUrl": "uXdc67H4"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestAliPayConfig \
    --sandbox 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 354 'TestAliPayConfig' test.out

#- 355 TestCheckoutConfig
# body param: body
echo '{"publicKey": "Xl4ycPKa", "secretKey": "IfuhRdPq"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestCheckoutConfig \
    --sandbox 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 355 'TestCheckoutConfig' test.out

#- 356 DebugMatchedPaymentMerchantConfig
$CLI_EXE \
    --sn platform \
    --op DebugMatchedPaymentMerchantConfig \
    --namespace_ 'bMiFfGco' \
    --region '0VCXXPia' \
    > test.out 2>&1
eval_tap $? 356 'DebugMatchedPaymentMerchantConfig' test.out

#- 357 TestNeonPayConfig
# body param: body
echo '{"apiKey": "28m6DURy", "webhookSecretKey": "lEKVcood"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestNeonPayConfig \
    --sandbox 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 357 'TestNeonPayConfig' test.out

#- 358 TestPayPalConfig
# body param: body
echo '{"clientID": "G7pLepZm", "clientSecret": "IP4p575n", "returnUrl": "me5duIP6", "webHookId": "dOFjFlqt"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestPayPalConfig \
    --sandbox 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 358 'TestPayPalConfig' test.out

#- 359 TestStripeConfig
# body param: body
echo '{"allowedPaymentMethodTypes": ["5tcuaYfQ", "Olu8JvDX", "pQscECDA"], "publishableKey": "w93dT1Zx", "secretKey": "lOPzJUOf", "webhookSecret": "DPZUmsaZ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestStripeConfig \
    --sandbox 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 359 'TestStripeConfig' test.out

#- 360 TestWxPayConfig
# body param: body
echo '{"appId": "DPQJdt51", "key": "j6z1Jbco", "mchid": "koEn5j5g", "returnUrl": "EhYX6OW1"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestWxPayConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 360 'TestWxPayConfig' test.out

#- 361 TestXsollaConfig
# body param: body
echo '{"apiKey": "qzilmqLu", "flowCompletionUrl": "uAlzPZxe", "merchantId": 90, "projectId": 97, "projectSecretKey": "PaSpkCLA"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestXsollaConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 361 'TestXsollaConfig' test.out

#- 362 GetPaymentMerchantConfig1
$CLI_EXE \
    --sn platform \
    --op GetPaymentMerchantConfig1 \
    --id '3cGyy3rz' \
    > test.out 2>&1
eval_tap $? 362 'GetPaymentMerchantConfig1' test.out

#- 363 UpdateAdyenConfig
# body param: body
echo '{"allowedPaymentMethods": ["JfmUmo3L", "Qrf8nd6w", "cXnfbxLm"], "apiKey": "T1TUWVLD", "authoriseAsCapture": false, "blockedPaymentMethods": ["pKfYn8Jh", "B2AemDDb", "e8Q1h7Nd"], "clientKey": "Rf4YdXsj", "dropInSettings": "sJSYYqfE", "liveEndpointUrlPrefix": "pu1rhbvc", "merchantAccount": "CBY8tpkG", "notificationHmacKey": "Jx6OjIi4", "notificationPassword": "0NSEbk1S", "notificationUsername": "Nziw3lmO", "returnUrl": "5E3vsKK9", "settings": "hgtcHfgk"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateAdyenConfig \
    --id 'osQydlh4' \
    --sandbox 'false' \
    --validate 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 363 'UpdateAdyenConfig' test.out

#- 364 TestAdyenConfigById
$CLI_EXE \
    --sn platform \
    --op TestAdyenConfigById \
    --id '9KONhYmy' \
    --sandbox 'true' \
    > test.out 2>&1
eval_tap $? 364 'TestAdyenConfigById' test.out

#- 365 UpdateAliPayConfig
# body param: body
echo '{"appId": "hKVm7NGD", "privateKey": "EwxVHHME", "publicKey": "V864Vrpc", "returnUrl": "Ibnpj607"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateAliPayConfig \
    --id 'FKzzhlpX' \
    --sandbox 'false' \
    --validate 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 365 'UpdateAliPayConfig' test.out

#- 366 TestAliPayConfigById
$CLI_EXE \
    --sn platform \
    --op TestAliPayConfigById \
    --id '8LwhAgk7' \
    --sandbox 'true' \
    > test.out 2>&1
eval_tap $? 366 'TestAliPayConfigById' test.out

#- 367 UpdateCheckoutConfig
# body param: body
echo '{"publicKey": "KnZzCJqI", "secretKey": "NpHPXeZc"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCheckoutConfig \
    --id 'sinqCRdx' \
    --sandbox 'false' \
    --validate 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 367 'UpdateCheckoutConfig' test.out

#- 368 TestCheckoutConfigById
$CLI_EXE \
    --sn platform \
    --op TestCheckoutConfigById \
    --id 'Xp3Y9vy5' \
    --sandbox 'true' \
    > test.out 2>&1
eval_tap $? 368 'TestCheckoutConfigById' test.out

#- 369 UpdateNeonPayConfig
# body param: body
echo '{"apiKey": "YAMvPmQ9", "webhookSecretKey": "R9dpc51w"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateNeonPayConfig \
    --id 'ifYXjIhb' \
    --sandbox 'false' \
    --validate 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 369 'UpdateNeonPayConfig' test.out

#- 370 TestNeonPayConfigById
$CLI_EXE \
    --sn platform \
    --op TestNeonPayConfigById \
    --id 'Q5MNr8oG' \
    --sandbox 'true' \
    > test.out 2>&1
eval_tap $? 370 'TestNeonPayConfigById' test.out

#- 371 UpdatePayPalConfig
# body param: body
echo '{"clientID": "tZQVQ5wU", "clientSecret": "mh9GOEjQ", "returnUrl": "dzLrIXu6", "webHookId": "pxDXGDh9"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePayPalConfig \
    --id 'QXOAn3Ye' \
    --sandbox 'true' \
    --validate 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 371 'UpdatePayPalConfig' test.out

#- 372 TestPayPalConfigById
$CLI_EXE \
    --sn platform \
    --op TestPayPalConfigById \
    --id 'ysD4IIsU' \
    --sandbox 'false' \
    > test.out 2>&1
eval_tap $? 372 'TestPayPalConfigById' test.out

#- 373 UpdateStripeConfig
# body param: body
echo '{"allowedPaymentMethodTypes": ["OeldKFvV", "zdRZQSB0", "KQG9kjfy"], "publishableKey": "tIwC1olm", "secretKey": "LseQTJzJ", "webhookSecret": "7Heif2u8"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateStripeConfig \
    --id 'r4sDojCH' \
    --sandbox 'false' \
    --validate 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 373 'UpdateStripeConfig' test.out

#- 374 TestStripeConfigById
$CLI_EXE \
    --sn platform \
    --op TestStripeConfigById \
    --id 'mH2msIcY' \
    --sandbox 'true' \
    > test.out 2>&1
eval_tap $? 374 'TestStripeConfigById' test.out

#- 375 UpdateWxPayConfig
# body param: body
echo '{"appId": "gX5i5Y6l", "key": "3aQjLYnt", "mchid": "g45FRq2C", "returnUrl": "fC0EBH2p"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateWxPayConfig \
    --id 'ElecYq4T' \
    --validate 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 375 'UpdateWxPayConfig' test.out

#- 376 UpdateWxPayConfigCert
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UpdateWxPayConfigCert \
    --id 'aIlp5PZ1' \
    --upload file $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 376 'UpdateWxPayConfigCert' test.out

#- 377 TestWxPayConfigById
$CLI_EXE \
    --sn platform \
    --op TestWxPayConfigById \
    --id 'NNOxloeU' \
    > test.out 2>&1
eval_tap $? 377 'TestWxPayConfigById' test.out

#- 378 UpdateXsollaConfig
# body param: body
echo '{"apiKey": "bq7fqfPL", "flowCompletionUrl": "SNiGKL7v", "merchantId": 27, "projectId": 4, "projectSecretKey": "K5DXMawR"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXsollaConfig \
    --id 'LEjPri29' \
    --validate 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 378 'UpdateXsollaConfig' test.out

#- 379 TestXsollaConfigById
$CLI_EXE \
    --sn platform \
    --op TestXsollaConfigById \
    --id 'adlkHJiL' \
    > test.out 2>&1
eval_tap $? 379 'TestXsollaConfigById' test.out

#- 380 UpdateXsollaUIConfig
# body param: body
echo '{"device": "MOBILE", "showCloseButton": true, "size": "LARGE", "theme": "DEFAULT"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXsollaUIConfig \
    --id 'IN0CY9Te' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 380 'UpdateXsollaUIConfig' test.out

#- 381 QueryPaymentProviderConfig
$CLI_EXE \
    --sn platform \
    --op QueryPaymentProviderConfig \
    --limit '86' \
    --namespace_ 'jaTMFhjI' \
    --offset '79' \
    --region 'cM3OsmXR' \
    > test.out 2>&1
eval_tap $? 381 'QueryPaymentProviderConfig' test.out

#- 382 CreatePaymentProviderConfig
# body param: body
echo '{"aggregate": "STRIPE", "namespace": "7YZGidM8", "region": "ImdlHMqz", "sandboxTaxJarApiToken": "HoNY8hTB", "specials": ["PAYPAL", "PAYPAL", "WALLET"], "taxJarApiToken": "gkedvhON", "taxJarEnabled": true, "useGlobalTaxJarApiToken": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreatePaymentProviderConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 382 'CreatePaymentProviderConfig' test.out

#- 383 GetAggregatePaymentProviders
$CLI_EXE \
    --sn platform \
    --op GetAggregatePaymentProviders \
    > test.out 2>&1
eval_tap $? 383 'GetAggregatePaymentProviders' test.out

#- 384 DebugMatchedPaymentProviderConfig
$CLI_EXE \
    --sn platform \
    --op DebugMatchedPaymentProviderConfig \
    --namespace_ 'S4ge80XD' \
    --region 'Ij0augk8' \
    > test.out 2>&1
eval_tap $? 384 'DebugMatchedPaymentProviderConfig' test.out

#- 385 GetSpecialPaymentProviders
$CLI_EXE \
    --sn platform \
    --op GetSpecialPaymentProviders \
    > test.out 2>&1
eval_tap $? 385 'GetSpecialPaymentProviders' test.out

#- 386 UpdatePaymentProviderConfig
# body param: body
echo '{"aggregate": "ADYEN", "namespace": "gliK9tlj", "region": "r2FC2kUn", "sandboxTaxJarApiToken": "PSAT64se", "specials": ["STRIPE", "ALIPAY", "CHECKOUT"], "taxJarApiToken": "chDBuzpL", "taxJarEnabled": true, "useGlobalTaxJarApiToken": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePaymentProviderConfig \
    --id 'VIveotUG' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 386 'UpdatePaymentProviderConfig' test.out

#- 387 DeletePaymentProviderConfig
$CLI_EXE \
    --sn platform \
    --op DeletePaymentProviderConfig \
    --id 'ZX77CpB5' \
    > test.out 2>&1
eval_tap $? 387 'DeletePaymentProviderConfig' test.out

#- 388 GetPaymentTaxConfig
$CLI_EXE \
    --sn platform \
    --op GetPaymentTaxConfig \
    > test.out 2>&1
eval_tap $? 388 'GetPaymentTaxConfig' test.out

#- 389 UpdatePaymentTaxConfig
# body param: body
echo '{"sandboxTaxJarApiToken": "BBal6SJn", "taxJarApiToken": "J8kQrPKS", "taxJarEnabled": true, "taxJarProductCodesMapping": {"8XxxUpDN": "Pdg380So", "IbZj15Xw": "6zVzOazw", "SRXmXnby": "KD3qP93J"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePaymentTaxConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 389 'UpdatePaymentTaxConfig' test.out

#- 390 SyncPaymentOrders
$CLI_EXE \
    --sn platform \
    --op SyncPaymentOrders \
    --nextEvaluatedKey 'GfbKzLKu' \
    --end 'r4GfHuCb' \
    --start 'W3zM9BbA' \
    > test.out 2>&1
eval_tap $? 390 'SyncPaymentOrders' test.out

#- 391 PublicGetRootCategories
$CLI_EXE \
    --sn platform \
    --op PublicGetRootCategories \
    --namespace $AB_NAMESPACE \
    --language 'cVemUfuG' \
    --storeId 'NDkjNRlz' \
    > test.out 2>&1
eval_tap $? 391 'PublicGetRootCategories' test.out

#- 392 DownloadCategories
$CLI_EXE \
    --sn platform \
    --op DownloadCategories \
    --namespace $AB_NAMESPACE \
    --language '0WLdNih4' \
    --storeId 'p9GUIIsz' \
    > test.out 2>&1
eval_tap $? 392 'DownloadCategories' test.out

#- 393 PublicGetCategory
$CLI_EXE \
    --sn platform \
    --op PublicGetCategory \
    --categoryPath '7m11AAm9' \
    --namespace $AB_NAMESPACE \
    --language 'Ij8uHSsq' \
    --storeId 'd1bT2Fu7' \
    > test.out 2>&1
eval_tap $? 393 'PublicGetCategory' test.out

#- 394 PublicGetChildCategories
$CLI_EXE \
    --sn platform \
    --op PublicGetChildCategories \
    --categoryPath 'oNgpZMOd' \
    --namespace $AB_NAMESPACE \
    --language 'mG876TKl' \
    --storeId 'KPMzHGFO' \
    > test.out 2>&1
eval_tap $? 394 'PublicGetChildCategories' test.out

#- 395 PublicGetDescendantCategories
$CLI_EXE \
    --sn platform \
    --op PublicGetDescendantCategories \
    --categoryPath 'LBd4nV7V' \
    --namespace $AB_NAMESPACE \
    --language 'FueE9csb' \
    --storeId '6LDNEJ5x' \
    > test.out 2>&1
eval_tap $? 395 'PublicGetDescendantCategories' test.out

#- 396 PublicListCurrencies
$CLI_EXE \
    --sn platform \
    --op PublicListCurrencies \
    --namespace $AB_NAMESPACE \
    --currencyType 'VIRTUAL' \
    > test.out 2>&1
eval_tap $? 396 'PublicListCurrencies' test.out

#- 397 GeDLCDurableRewardShortMap
$CLI_EXE \
    --sn platform \
    --op GeDLCDurableRewardShortMap \
    --namespace $AB_NAMESPACE \
    --dlcType 'OCULUS' \
    > test.out 2>&1
eval_tap $? 397 'GeDLCDurableRewardShortMap' test.out

#- 398 GetAppleConfigVersion
$CLI_EXE \
    --sn platform \
    --op GetAppleConfigVersion \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 398 'GetAppleConfigVersion' test.out

#- 399 GetIAPItemMapping
$CLI_EXE \
    --sn platform \
    --op GetIAPItemMapping \
    --namespace $AB_NAMESPACE \
    --platform 'STADIA' \
    > test.out 2>&1
eval_tap $? 399 'GetIAPItemMapping' test.out

#- 400 PublicGetItemByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetItemByAppId \
    --namespace $AB_NAMESPACE \
    --language 'MVfVQA69' \
    --region 'cdSU0L99' \
    --storeId 'xBMKlr0K' \
    --appId 'soESLr7g' \
    > test.out 2>&1
eval_tap $? 400 'PublicGetItemByAppId' test.out

#- 401 PublicQueryItems
$CLI_EXE \
    --sn platform \
    --op PublicQueryItems \
    --namespace $AB_NAMESPACE \
    --appType 'DLC' \
    --autoCalcEstimatedPrice 'true' \
    --baseAppId 'ov7GGr8F' \
    --categoryPath '8qmUBjwY' \
    --features 'aDcvr46V' \
    --includeSubCategoryItem 'false' \
    --itemType 'COINS' \
    --language 'jsJ21sml' \
    --limit '34' \
    --offset '90' \
    --region 'FfyeQGKj' \
    --sortBy '["displayOrder:asc", "displayOrder", "name"]' \
    --storeId 'LACt8wRo' \
    --tags 'NTNhO1ws' \
    > test.out 2>&1
eval_tap $? 401 'PublicQueryItems' test.out

#- 402 PublicGetItemBySku
$CLI_EXE \
    --sn platform \
    --op PublicGetItemBySku \
    --namespace $AB_NAMESPACE \
    --autoCalcEstimatedPrice 'true' \
    --language 'yUNpHAJl' \
    --region '3k3D3L7W' \
    --storeId '193fu84i' \
    --sku '4u0uPjEX' \
    > test.out 2>&1
eval_tap $? 402 'PublicGetItemBySku' test.out

#- 403 PublicGetEstimatedPrice
$CLI_EXE \
    --sn platform \
    --op PublicGetEstimatedPrice \
    --namespace $AB_NAMESPACE \
    --region 'L8P8uolV' \
    --storeId '0OFcPocQ' \
    --itemIds 'E1l2HTle' \
    > test.out 2>&1
eval_tap $? 403 'PublicGetEstimatedPrice' test.out

#- 404 PublicBulkGetItems
$CLI_EXE \
    --sn platform \
    --op PublicBulkGetItems \
    --namespace $AB_NAMESPACE \
    --autoCalcEstimatedPrice 'true' \
    --language 'k123Mysw' \
    --region 'kzGJ0VO9' \
    --storeId 'msYUW29W' \
    --itemIds 'VJ8NNeyy' \
    > test.out 2>&1
eval_tap $? 404 'PublicBulkGetItems' test.out

#- 405 PublicValidateItemPurchaseCondition
# body param: body
echo '{"itemIds": ["iwgTJqYo", "OZ8mVVYm", "vGcZWbmU"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicValidateItemPurchaseCondition \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 405 'PublicValidateItemPurchaseCondition' test.out

#- 406 PublicSearchItems
$CLI_EXE \
    --sn platform \
    --op PublicSearchItems \
    --namespace $AB_NAMESPACE \
    --autoCalcEstimatedPrice 'false' \
    --itemType 'EXTENSION' \
    --limit '2' \
    --offset '61' \
    --region 'iWi74b4o' \
    --storeId '5EDAw4Ea' \
    --keyword 'C05G7Wou' \
    --language 'jySXYV2w' \
    > test.out 2>&1
eval_tap $? 406 'PublicSearchItems' test.out

#- 407 PublicGetApp
$CLI_EXE \
    --sn platform \
    --op PublicGetApp \
    --itemId 'bRpV87yh' \
    --namespace $AB_NAMESPACE \
    --language 'SW7oWVIO' \
    --region '6rHYWaZ5' \
    --storeId 'QTfBzmjd' \
    > test.out 2>&1
eval_tap $? 407 'PublicGetApp' test.out

#- 408 PublicGetItemDynamicData
$CLI_EXE \
    --sn platform \
    --op PublicGetItemDynamicData \
    --itemId 'ZQTVQCEn' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 408 'PublicGetItemDynamicData' test.out

#- 409 PublicGetItem
$CLI_EXE \
    --sn platform \
    --op PublicGetItem \
    --itemId 'fb5FxGyp' \
    --namespace $AB_NAMESPACE \
    --autoCalcEstimatedPrice 'false' \
    --language '7KT05IsE' \
    --populateBundle 'false' \
    --region 'hJZmhMwt' \
    --storeId 'e38LZOIh' \
    > test.out 2>&1
eval_tap $? 409 'PublicGetItem' test.out

#- 410 GetPaymentCustomization
eval_tap 0 410 'GetPaymentCustomization # SKIP deprecated' test.out

#- 411 PublicGetPaymentUrl
# body param: body
echo '{"neonPayConfig": {"cancelUrl": "ROGEV6ve", "successUrl": "ih7y3EEb"}, "paymentOrderNo": "w25fDkwD", "paymentProvider": "NEONPAY", "returnUrl": "cXYPIY9X", "ui": "zuydBdwo", "zipCode": "q283GZOr"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicGetPaymentUrl \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 411 'PublicGetPaymentUrl' test.out

#- 412 PublicGetPaymentMethods
$CLI_EXE \
    --sn platform \
    --op PublicGetPaymentMethods \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'KmHaDMG4' \
    > test.out 2>&1
eval_tap $? 412 'PublicGetPaymentMethods' test.out

#- 413 PublicGetUnpaidPaymentOrder
$CLI_EXE \
    --sn platform \
    --op PublicGetUnpaidPaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'T5Pv7ZKr' \
    > test.out 2>&1
eval_tap $? 413 'PublicGetUnpaidPaymentOrder' test.out

#- 414 Pay
# body param: body
echo '{"token": "3DkUwWjz"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op Pay \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 't4ayuAg2' \
    --paymentProvider 'WXPAY' \
    --zipCode 'SeCL4DAV' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 414 'Pay' test.out

#- 415 PublicCheckPaymentOrderPaidStatus
$CLI_EXE \
    --sn platform \
    --op PublicCheckPaymentOrderPaidStatus \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'z9Mx3vSA' \
    > test.out 2>&1
eval_tap $? 415 'PublicCheckPaymentOrderPaidStatus' test.out

#- 416 GetPaymentPublicConfig
$CLI_EXE \
    --sn platform \
    --op GetPaymentPublicConfig \
    --namespace $AB_NAMESPACE \
    --sandbox 'false' \
    --paymentProvider 'ADYEN' \
    --region 'r0PWZwRj' \
    > test.out 2>&1
eval_tap $? 416 'GetPaymentPublicConfig' test.out

#- 417 PublicGetQRCode
$CLI_EXE \
    --sn platform \
    --op PublicGetQRCode \
    --namespace $AB_NAMESPACE \
    --code 'J7eydLua' \
    > test.out 2>&1
eval_tap $? 417 'PublicGetQRCode' test.out

#- 418 PublicNormalizePaymentReturnUrl
$CLI_EXE \
    --sn platform \
    --op PublicNormalizePaymentReturnUrl \
    --namespace $AB_NAMESPACE \
    --payerID '2ZdWC3gi' \
    --foreinginvoice 'IwsOGjPy' \
    --invoiceId 'y5UuqLYk' \
    --payload 'qjwWwDaM' \
    --redirectResult 'okZA4nDF' \
    --resultCode 'IX7utywq' \
    --sessionId 'mLPi3pCA' \
    --status 'B3eSYLSy' \
    --token 'g76FhBqg' \
    --type 'GcHmAtyE' \
    --userId 'sL5L7jHt' \
    --orderNo '5PAqODjz' \
    --paymentOrderNo 'TtjBl6ZS' \
    --paymentProvider 'CHECKOUT' \
    --returnUrl 'qyBQv9DQ' \
    > test.out 2>&1
eval_tap $? 418 'PublicNormalizePaymentReturnUrl' test.out

#- 419 GetPaymentTaxValue
$CLI_EXE \
    --sn platform \
    --op GetPaymentTaxValue \
    --namespace $AB_NAMESPACE \
    --zipCode '8QPYBq4v' \
    --paymentOrderNo 'IVlWSMtM' \
    --paymentProvider 'ADYEN' \
    > test.out 2>&1
eval_tap $? 419 'GetPaymentTaxValue' test.out

#- 420 GetRewardByCode
$CLI_EXE \
    --sn platform \
    --op GetRewardByCode \
    --namespace $AB_NAMESPACE \
    --rewardCode 'DBbmsCLY' \
    > test.out 2>&1
eval_tap $? 420 'GetRewardByCode' test.out

#- 421 QueryRewards1
$CLI_EXE \
    --sn platform \
    --op QueryRewards1 \
    --namespace $AB_NAMESPACE \
    --eventTopic 'gBvGMFoW' \
    --limit '77' \
    --offset '19' \
    --sortBy '["namespace:asc", "namespace:desc"]' \
    > test.out 2>&1
eval_tap $? 421 'QueryRewards1' test.out

#- 422 GetReward1
$CLI_EXE \
    --sn platform \
    --op GetReward1 \
    --namespace $AB_NAMESPACE \
    --rewardId 'rhzkzEv0' \
    > test.out 2>&1
eval_tap $? 422 'GetReward1' test.out

#- 423 PublicListStores
$CLI_EXE \
    --sn platform \
    --op PublicListStores \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 423 'PublicListStores' test.out

#- 424 PublicExistsAnyMyActiveEntitlement
$CLI_EXE \
    --sn platform \
    --op PublicExistsAnyMyActiveEntitlement \
    --namespace $AB_NAMESPACE \
    --appIds '["mDt65nzP", "9qg8q3Nq", "IDI47gLV"]' \
    --itemIds '["YNfhm7Ps", "lwvSRalF", "ZWLxUXlf"]' \
    --skus '["43jhmm3A", "IGucS3XX", "6HNv2DG8"]' \
    > test.out 2>&1
eval_tap $? 424 'PublicExistsAnyMyActiveEntitlement' test.out

#- 425 PublicGetMyAppEntitlementOwnershipByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetMyAppEntitlementOwnershipByAppId \
    --namespace $AB_NAMESPACE \
    --appId 'Z6mJWHNG' \
    > test.out 2>&1
eval_tap $? 425 'PublicGetMyAppEntitlementOwnershipByAppId' test.out

#- 426 PublicGetMyEntitlementOwnershipByItemId
$CLI_EXE \
    --sn platform \
    --op PublicGetMyEntitlementOwnershipByItemId \
    --namespace $AB_NAMESPACE \
    --entitlementClazz 'CODE' \
    --itemId '2BEZ8VB6' \
    > test.out 2>&1
eval_tap $? 426 'PublicGetMyEntitlementOwnershipByItemId' test.out

#- 427 PublicGetMyEntitlementOwnershipBySku
$CLI_EXE \
    --sn platform \
    --op PublicGetMyEntitlementOwnershipBySku \
    --namespace $AB_NAMESPACE \
    --entitlementClazz 'OPTIONBOX' \
    --sku 'vaFoXaUA' \
    > test.out 2>&1
eval_tap $? 427 'PublicGetMyEntitlementOwnershipBySku' test.out

#- 428 PublicGetEntitlementOwnershipToken
$CLI_EXE \
    --sn platform \
    --op PublicGetEntitlementOwnershipToken \
    --namespace $AB_NAMESPACE \
    --appIds '["12GkiZ0T", "nrLmnPF2", "POAsSCPA"]' \
    --itemIds '["egUjDIoK", "9ZDwcxe3", "nXQIsFwp"]' \
    --skus '["31Q5dl4F", "EzSc8ZFv", "xv27A37L"]' \
    > test.out 2>&1
eval_tap $? 428 'PublicGetEntitlementOwnershipToken' test.out

#- 429 SyncTwitchDropsEntitlement
# body param: body
echo '{"gameId": "oNpP7cqr", "language": "ydx_CHdt", "region": "EXQjTjNd"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncTwitchDropsEntitlement \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 429 'SyncTwitchDropsEntitlement' test.out

#- 430 PublicGetMyWallet
$CLI_EXE \
    --sn platform \
    --op PublicGetMyWallet \
    --currencyCode 'rT3Kd9ln' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 430 'PublicGetMyWallet' test.out

#- 431 SyncEpicGameDLC
# body param: body
echo '{"epicGamesJwtToken": "IBhkHGdp"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncEpicGameDLC \
    --namespace $AB_NAMESPACE \
    --userId 'ZQO0jCuW' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 431 'SyncEpicGameDLC' test.out

#- 432 SyncOculusDLC
$CLI_EXE \
    --sn platform \
    --op SyncOculusDLC \
    --namespace $AB_NAMESPACE \
    --userId 'tZqK0qpg' \
    > test.out 2>&1
eval_tap $? 432 'SyncOculusDLC' test.out

#- 433 PublicSyncPsnDlcInventory
# body param: body
echo '{"serviceLabel": 57}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicSyncPsnDlcInventory \
    --namespace $AB_NAMESPACE \
    --userId '73wpYPkD' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 433 'PublicSyncPsnDlcInventory' test.out

#- 434 PublicSyncPsnDlcInventoryWithMultipleServiceLabels
# body param: body
echo '{"serviceLabels": [25, 34, 79]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicSyncPsnDlcInventoryWithMultipleServiceLabels \
    --namespace $AB_NAMESPACE \
    --userId 'bZPSfdPl' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 434 'PublicSyncPsnDlcInventoryWithMultipleServiceLabels' test.out

#- 435 SyncSteamDLC
# body param: body
echo '{"appId": "pCyuIAvr", "steamId": "NlAHsoOn"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncSteamDLC \
    --namespace $AB_NAMESPACE \
    --userId 'LbIOhKlj' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 435 'SyncSteamDLC' test.out

#- 436 SyncXboxDLC
# body param: body
echo '{"xstsToken": "BSuKI44I"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncXboxDLC \
    --namespace $AB_NAMESPACE \
    --userId 'MdKIeMKr' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 436 'SyncXboxDLC' test.out

#- 437 PublicQueryUserEntitlements
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserEntitlements \
    --namespace $AB_NAMESPACE \
    --userId 'gq89bvtM' \
    --appType 'DEMO' \
    --entitlementClazz 'LOOTBOX' \
    --entitlementName 'CdHSGmRW' \
    --features '["KXOYbKf6", "dcItIhjc", "ZNz1ichj"]' \
    --itemId '["co9dQnSV", "qZysYuqI", "L2bSkzlv"]' \
    --limit '74' \
    --offset '50' \
    > test.out 2>&1
eval_tap $? 437 'PublicQueryUserEntitlements' test.out

#- 438 PublicGetUserAppEntitlementByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetUserAppEntitlementByAppId \
    --namespace $AB_NAMESPACE \
    --userId 'kL4r76TI' \
    --appId 'Y4cdpZ06' \
    > test.out 2>&1
eval_tap $? 438 'PublicGetUserAppEntitlementByAppId' test.out

#- 439 PublicQueryUserEntitlementsByAppType
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserEntitlementsByAppType \
    --namespace $AB_NAMESPACE \
    --userId 'Kn9vI2fQ' \
    --limit '47' \
    --offset '87' \
    --appType 'DEMO' \
    > test.out 2>&1
eval_tap $? 439 'PublicQueryUserEntitlementsByAppType' test.out

#- 440 PublicGetUserEntitlementsByIds
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementsByIds \
    --namespace $AB_NAMESPACE \
    --userId 'PIijAt0M' \
    --availablePlatformOnly 'false' \
    --ids '["FCteqr5d", "a6S9hQJt", "gY4kBHcQ"]' \
    > test.out 2>&1
eval_tap $? 440 'PublicGetUserEntitlementsByIds' test.out

#- 441 PublicGetUserEntitlementByItemId
eval_tap 0 441 'PublicGetUserEntitlementByItemId # SKIP deprecated' test.out

#- 442 PublicGetUserEntitlementBySku
eval_tap 0 442 'PublicGetUserEntitlementBySku # SKIP deprecated' test.out

#- 443 PublicUserEntitlementHistory
$CLI_EXE \
    --sn platform \
    --op PublicUserEntitlementHistory \
    --namespace $AB_NAMESPACE \
    --userId 'g7tgRWmc' \
    --endDate '9QdmekCO' \
    --entitlementClazz 'ENTITLEMENT' \
    --limit '82' \
    --offset '55' \
    --startDate 'BfoQmRRH' \
    > test.out 2>&1
eval_tap $? 443 'PublicUserEntitlementHistory' test.out

#- 444 PublicExistsAnyUserActiveEntitlement
$CLI_EXE \
    --sn platform \
    --op PublicExistsAnyUserActiveEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'GKLpE4AP' \
    --appIds '["vuWzEuGm", "kBZjl90e", "kKwZYAbC"]' \
    --itemIds '["8FfRUnHj", "gQUUywD1", "fB7BeGPj"]' \
    --skus '["JPyqbO6e", "0u190FzH", "GqAGl3fo"]' \
    > test.out 2>&1
eval_tap $? 444 'PublicExistsAnyUserActiveEntitlement' test.out

#- 445 PublicGetUserAppEntitlementOwnershipByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetUserAppEntitlementOwnershipByAppId \
    --namespace $AB_NAMESPACE \
    --userId 'mCH5RIQa' \
    --appId '7wyywHbY' \
    > test.out 2>&1
eval_tap $? 445 'PublicGetUserAppEntitlementOwnershipByAppId' test.out

#- 446 PublicGetUserEntitlementOwnershipByItemId
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementOwnershipByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'tZwCPk49' \
    --entitlementClazz 'MEDIA' \
    --itemId 'rE38XdGJ' \
    > test.out 2>&1
eval_tap $? 446 'PublicGetUserEntitlementOwnershipByItemId' test.out

#- 447 PublicGetUserEntitlementOwnershipByItemIds
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementOwnershipByItemIds \
    --namespace $AB_NAMESPACE \
    --userId 'wnuhh5H7' \
    --ids '["7Q9afxBy", "sQjdkEyq", "6KmmKKQI"]' \
    > test.out 2>&1
eval_tap $? 447 'PublicGetUserEntitlementOwnershipByItemIds' test.out

#- 448 PublicGetUserEntitlementOwnershipBySku
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementOwnershipBySku \
    --namespace $AB_NAMESPACE \
    --userId 'tDBt1MhQ' \
    --entitlementClazz 'ENTITLEMENT' \
    --sku '1bcckPcw' \
    > test.out 2>&1
eval_tap $? 448 'PublicGetUserEntitlementOwnershipBySku' test.out

#- 449 PublicGetUserEntitlement
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlement \
    --entitlementId 'O85vwRi5' \
    --namespace $AB_NAMESPACE \
    --userId 'xoSe5ekK' \
    > test.out 2>&1
eval_tap $? 449 'PublicGetUserEntitlement' test.out

#- 450 PublicConsumeUserEntitlement
# body param: body
echo '{"metadata": {"operationSource": "INVENTORY"}, "options": ["7SF33Bk2", "ASj0526C", "V4x17UjS"], "requestId": "VCoPGQ0n", "useCount": 0}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicConsumeUserEntitlement \
    --entitlementId 'zoR6S87M' \
    --namespace $AB_NAMESPACE \
    --userId 'p9rehQmF' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 450 'PublicConsumeUserEntitlement' test.out

#- 451 PublicSellUserEntitlement
# body param: body
echo '{"requestId": "e4CcUei2", "useCount": 41}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicSellUserEntitlement \
    --entitlementId 'yC9xqKi5' \
    --namespace $AB_NAMESPACE \
    --userId '2BbsOPoE' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 451 'PublicSellUserEntitlement' test.out

#- 452 PublicSplitUserEntitlement
# body param: body
echo '{"metadata": {"operationSource": "INVENTORY"}, "useCount": 14}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicSplitUserEntitlement \
    --entitlementId 'VcqPaYdU' \
    --namespace $AB_NAMESPACE \
    --userId '52MnDCOR' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 452 'PublicSplitUserEntitlement' test.out

#- 453 PublicTransferUserEntitlement
# body param: body
echo '{"entitlementId": "QjWhC89B", "metadata": {"operationSource": "INVENTORY"}, "useCount": 5}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicTransferUserEntitlement \
    --entitlementId 'uAi5kWfl' \
    --namespace $AB_NAMESPACE \
    --userId 'oPd9oAA9' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 453 'PublicTransferUserEntitlement' test.out

#- 454 PublicRedeemCode
# body param: body
echo '{"code": "Bn7op5vx", "language": "osJ_ee", "region": "stiQylov"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicRedeemCode \
    --namespace $AB_NAMESPACE \
    --userId 'HeiEyakx' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 454 'PublicRedeemCode' test.out

#- 455 PublicFulfillAppleIAPItem
# body param: body
echo '{"excludeOldTransactions": true, "language": "RD", "productId": "gBpIV9dK", "receiptData": "LD3SwhqZ", "region": "N6xmlbl0", "transactionId": "GkGqO39j"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicFulfillAppleIAPItem \
    --namespace $AB_NAMESPACE \
    --userId 'huXBuB7p' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 455 'PublicFulfillAppleIAPItem' test.out

#- 456 SyncEpicGamesInventory
# body param: body
echo '{"epicGamesJwtToken": "DozElBrg"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncEpicGamesInventory \
    --namespace $AB_NAMESPACE \
    --userId 'mfeVgjs4' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 456 'SyncEpicGamesInventory' test.out

#- 457 PublicFulfillGoogleIAPItem
# body param: body
echo '{"autoAck": true, "autoConsume": false, "language": "QduG-694", "orderId": "B1jcPfIv", "packageName": "lanSoR82", "productId": "eXk5wKfd", "purchaseTime": 37, "purchaseToken": "mqg9DhCl", "region": "yYMnvEHy", "subscriptionPurchase": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicFulfillGoogleIAPItem \
    --namespace $AB_NAMESPACE \
    --userId 'nAjfV8YK' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 457 'PublicFulfillGoogleIAPItem' test.out

#- 458 SyncOculusConsumableEntitlements
$CLI_EXE \
    --sn platform \
    --op SyncOculusConsumableEntitlements \
    --namespace $AB_NAMESPACE \
    --userId 'r2AQwizC' \
    > test.out 2>&1
eval_tap $? 458 'SyncOculusConsumableEntitlements' test.out

#- 459 PublicReconcilePlayStationStore
# body param: body
echo '{"currencyCode": "vy9BNbSP", "price": 0.6201586151373941, "productId": "HUwCa5FG", "serviceLabel": 12}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicReconcilePlayStationStore \
    --namespace $AB_NAMESPACE \
    --userId 'VUUWAN4n' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 459 'PublicReconcilePlayStationStore' test.out

#- 460 PublicReconcilePlayStationStoreWithMultipleServiceLabels
# body param: body
echo '{"currencyCode": "8YJhNI6W", "price": 0.7041246582705344, "productId": "lnAooiYL", "serviceLabels": [50, 42, 45]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicReconcilePlayStationStoreWithMultipleServiceLabels \
    --namespace $AB_NAMESPACE \
    --userId 'bfEdZC59' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 460 'PublicReconcilePlayStationStoreWithMultipleServiceLabels' test.out

#- 461 SyncSteamInventory
# body param: body
echo '{"appId": "iuAuaght", "currencyCode": "qzP9xNew", "language": "rWXA", "price": 0.29250479671840346, "productId": "wLQaQO92", "region": "Sb011e4N", "steamId": "q4QU2GPc"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncSteamInventory \
    --namespace $AB_NAMESPACE \
    --userId 'XPoK1dbe' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 461 'SyncSteamInventory' test.out

#- 462 SyncSteamAbnormalTransaction
$CLI_EXE \
    --sn platform \
    --op SyncSteamAbnormalTransaction \
    --namespace $AB_NAMESPACE \
    --userId 'hzlq3aDN' \
    > test.out 2>&1
eval_tap $? 462 'SyncSteamAbnormalTransaction' test.out

#- 463 SyncSteamIAPByTransaction
# body param: body
echo '{"orderId": "D8ja9Ce5"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncSteamIAPByTransaction \
    --namespace $AB_NAMESPACE \
    --userId 'h4Xx2Oxv' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 463 'SyncSteamIAPByTransaction' test.out

#- 464 PublicQueryUserThirdPartySubscription
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserThirdPartySubscription \
    --namespace $AB_NAMESPACE \
    --platform 'GOOGLE' \
    --userId 'hku6Aqzc' \
    --activeOnly 'true' \
    --groupId '7AHcVoYm' \
    --limit '66' \
    --offset '57' \
    --productId 'c8bz4SlF' \
    > test.out 2>&1
eval_tap $? 464 'PublicQueryUserThirdPartySubscription' test.out

#- 465 SyncTwitchDropsEntitlement1
# body param: body
echo '{"gameId": "PnTxivor", "language": "eS_PN", "region": "tC6WozmF"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncTwitchDropsEntitlement1 \
    --namespace $AB_NAMESPACE \
    --userId '4abctwWn' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 465 'SyncTwitchDropsEntitlement1' test.out

#- 466 SyncXboxInventory
# body param: body
echo '{"currencyCode": "r4hJOhjq", "price": 0.4126477559544426, "productId": "lBv5fFZL", "xstsToken": "CFKvpKt9"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncXboxInventory \
    --namespace $AB_NAMESPACE \
    --userId 'UdqgRTku' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 466 'SyncXboxInventory' test.out

#- 467 PublicQueryUserOrders
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserOrders \
    --namespace $AB_NAMESPACE \
    --userId '10dWv2FS' \
    --discounted 'false' \
    --itemId 'ZeCa6leq' \
    --limit '51' \
    --offset '65' \
    --status 'CHARGEBACK_REVERSED' \
    > test.out 2>&1
eval_tap $? 467 'PublicQueryUserOrders' test.out

#- 468 PublicCreateUserOrder
# body param: body
echo '{"currencyCode": "WbzkGJdQ", "discountCodes": ["UTOnUoBn", "5BaQwD93", "hHLDyazc"], "discountedPrice": 67, "ext": {"oid76bqs": {}, "Dw42hVbI": {}, "UZIYwL4a": {}}, "itemId": "8SR0lj9M", "language": "uMr-ev", "price": 42, "quantity": 3, "region": "ylsCNBKp", "returnUrl": "E9nDDsJH", "sectionId": "23E4m28R"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicCreateUserOrder \
    --namespace $AB_NAMESPACE \
    --userId 'vCn2MgW5' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 468 'PublicCreateUserOrder' test.out

#- 469 PublicPreviewOrderPrice
# body param: body
echo '{"currencyCode": "FwhCeztu", "discountCodes": ["mj7GmJ9f", "cSnIPaJ1", "CrDTjh3s"], "discountedPrice": 80, "itemId": "hqWIgH4R", "price": 5, "quantity": 20}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicPreviewOrderPrice \
    --namespace $AB_NAMESPACE \
    --userId 'zj3hZRwP' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 469 'PublicPreviewOrderPrice' test.out

#- 470 PublicGetUserOrder
$CLI_EXE \
    --sn platform \
    --op PublicGetUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'ez8i33Uf' \
    --userId 'QVEsJWmT' \
    > test.out 2>&1
eval_tap $? 470 'PublicGetUserOrder' test.out

#- 471 PublicCancelUserOrder
$CLI_EXE \
    --sn platform \
    --op PublicCancelUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo '8qpVDnvt' \
    --userId 'hAzTITEQ' \
    > test.out 2>&1
eval_tap $? 471 'PublicCancelUserOrder' test.out

#- 472 PublicGetUserOrderHistories
$CLI_EXE \
    --sn platform \
    --op PublicGetUserOrderHistories \
    --namespace $AB_NAMESPACE \
    --orderNo 'ccWp1vFP' \
    --userId '4m6eDmnO' \
    > test.out 2>&1
eval_tap $? 472 'PublicGetUserOrderHistories' test.out

#- 473 PublicDownloadUserOrderReceipt
$CLI_EXE \
    --sn platform \
    --op PublicDownloadUserOrderReceipt \
    --namespace $AB_NAMESPACE \
    --orderNo 'dBg73nGR' \
    --userId 'XUxnSpU9' \
    > test.out 2>&1
eval_tap $? 473 'PublicDownloadUserOrderReceipt' test.out

#- 474 PublicGetPaymentAccounts
$CLI_EXE \
    --sn platform \
    --op PublicGetPaymentAccounts \
    --namespace $AB_NAMESPACE \
    --userId 'e3uME2GR' \
    > test.out 2>&1
eval_tap $? 474 'PublicGetPaymentAccounts' test.out

#- 475 PublicDeletePaymentAccount
$CLI_EXE \
    --sn platform \
    --op PublicDeletePaymentAccount \
    --id 'TiPxvsiK' \
    --namespace $AB_NAMESPACE \
    --type 'paypal' \
    --userId 'KECavMex' \
    > test.out 2>&1
eval_tap $? 475 'PublicDeletePaymentAccount' test.out

#- 476 PublicListActiveSections
$CLI_EXE \
    --sn platform \
    --op PublicListActiveSections \
    --namespace $AB_NAMESPACE \
    --userId 'fNSZ0EoY' \
    --autoCalcEstimatedPrice 'false' \
    --language 'MrkCCv04' \
    --region 'tg9Pxcv7' \
    --storeId 'b7upgVgV' \
    --viewId '2z7XaNfO' \
    > test.out 2>&1
eval_tap $? 476 'PublicListActiveSections' test.out

#- 477 PublicQueryUserSubscriptions
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserSubscriptions \
    --namespace $AB_NAMESPACE \
    --userId '5Y9hqwmv' \
    --chargeStatus 'RECURRING_CHARGING' \
    --itemId 'ISRKAcel' \
    --limit '81' \
    --offset '0' \
    --sku '8dJymixh' \
    --status 'EXPIRED' \
    --subscribedBy 'PLATFORM' \
    > test.out 2>&1
eval_tap $? 477 'PublicQueryUserSubscriptions' test.out

#- 478 PublicSubscribeSubscription
# body param: body
echo '{"currencyCode": "7RK9tX6l", "itemId": "GxQ8M6vk", "language": "jL_iEon-dj", "region": "q23H2xs3", "returnUrl": "X4LjBZhK", "source": "kFOXDwxa"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicSubscribeSubscription \
    --namespace $AB_NAMESPACE \
    --userId 't2NGKHHN' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 478 'PublicSubscribeSubscription' test.out

#- 479 PublicCheckUserSubscriptionSubscribableByItemId
$CLI_EXE \
    --sn platform \
    --op PublicCheckUserSubscriptionSubscribableByItemId \
    --namespace $AB_NAMESPACE \
    --userId '2kIJwbfF' \
    --itemId 'SeMVpXhh' \
    > test.out 2>&1
eval_tap $? 479 'PublicCheckUserSubscriptionSubscribableByItemId' test.out

#- 480 PublicGetUserSubscription
$CLI_EXE \
    --sn platform \
    --op PublicGetUserSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'pJsGaa9l' \
    --userId 'AE4TrrqS' \
    > test.out 2>&1
eval_tap $? 480 'PublicGetUserSubscription' test.out

#- 481 PublicChangeSubscriptionBillingAccount
$CLI_EXE \
    --sn platform \
    --op PublicChangeSubscriptionBillingAccount \
    --namespace $AB_NAMESPACE \
    --subscriptionId '6IyYe3IW' \
    --userId '50l3leib' \
    > test.out 2>&1
eval_tap $? 481 'PublicChangeSubscriptionBillingAccount' test.out

#- 482 PublicCancelSubscription
# body param: body
echo '{"immediate": true, "reason": "m5ssP43f"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicCancelSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId '6yikAtrb' \
    --userId '55D1QtF1' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 482 'PublicCancelSubscription' test.out

#- 483 PublicGetUserSubscriptionBillingHistories
$CLI_EXE \
    --sn platform \
    --op PublicGetUserSubscriptionBillingHistories \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'znrxcdbb' \
    --userId 'k38xETGE' \
    --excludeFree 'true' \
    --limit '45' \
    --offset '75' \
    > test.out 2>&1
eval_tap $? 483 'PublicGetUserSubscriptionBillingHistories' test.out

#- 484 PublicListViews
$CLI_EXE \
    --sn platform \
    --op PublicListViews \
    --namespace $AB_NAMESPACE \
    --userId 'MOb4BoLm' \
    --language 'VgOnogom' \
    --storeId 't5rlMy9S' \
    > test.out 2>&1
eval_tap $? 484 'PublicListViews' test.out

#- 485 PublicGetWallet
$CLI_EXE \
    --sn platform \
    --op PublicGetWallet \
    --currencyCode 'GuAfpIuk' \
    --namespace $AB_NAMESPACE \
    --userId 'W5WNKfe7' \
    > test.out 2>&1
eval_tap $? 485 'PublicGetWallet' test.out

#- 486 PublicListUserWalletTransactions
$CLI_EXE \
    --sn platform \
    --op PublicListUserWalletTransactions \
    --currencyCode 'xNJyurIv' \
    --namespace $AB_NAMESPACE \
    --userId 'brD1LYY0' \
    --limit '84' \
    --offset '76' \
    > test.out 2>&1
eval_tap $? 486 'PublicListUserWalletTransactions' test.out

#- 487 PublicGetMyDLCContent
$CLI_EXE \
    --sn platform \
    --op PublicGetMyDLCContent \
    --includeAllNamespaces 'false' \
    --type 'EPICGAMES' \
    > test.out 2>&1
eval_tap $? 487 'PublicGetMyDLCContent' test.out

#- 488 QueryFulfillments
$CLI_EXE \
    --sn platform \
    --op QueryFulfillments \
    --namespace $AB_NAMESPACE \
    --endTime 'Z5ueOv2v' \
    --limit '56' \
    --offset '80' \
    --startTime 'MFUiPNHP' \
    --state 'REVOKED' \
    --transactionId 'VY0SiNut' \
    --userId 'TFy4h6b3' \
    > test.out 2>&1
eval_tap $? 488 'QueryFulfillments' test.out

#- 489 QueryItemsV2
$CLI_EXE \
    --sn platform \
    --op QueryItemsV2 \
    --namespace $AB_NAMESPACE \
    --appType 'SOFTWARE' \
    --availableDate 'CJjt2gmf' \
    --baseAppId 'MzbUnWwe' \
    --categoryPath 'SjonHSfX' \
    --features 'upLVR09X' \
    --includeSubCategoryItem 'true' \
    --itemName 'xXZZY4Ew' \
    --itemStatus 'ACTIVE' \
    --itemType '["MEDIA", "LOOTBOX", "BUNDLE"]' \
    --limit '80' \
    --offset '35' \
    --region 'viz0exIB' \
    --sectionExclusive 'true' \
    --sortBy '["createdAt:asc", "name:asc", "displayOrder"]' \
    --storeId 'DZxzo8Ru' \
    --tags '83v1Seg3' \
    --targetNamespace 'AKGlFPvl' \
    --withTotal 'true' \
    > test.out 2>&1
eval_tap $? 489 'QueryItemsV2' test.out

#- 490 ImportStore1
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op ImportStore1 \
    --namespace $AB_NAMESPACE \
    --storeId 'NdtzjVn9' \
    --strictMode 'true' \
    --upload file $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 490 'ImportStore1' test.out

#- 491 ExportStore1
# body param: body
echo '{"itemIds": ["yOoVCyNA", "rWgmtkuu", "mBfqyvbL"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ExportStore1 \
    --namespace $AB_NAMESPACE \
    --storeId 'mKgjr1mt' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 491 'ExportStore1' test.out

#- 492 FulfillRewardsV2
# body param: body
echo '{"entitlementCollectionId": "zzRr5Txl", "entitlementOrigin": "Nintendo", "metadata": {"Q7Rpxabv": {}, "JO13yuK5": {}, "4YEmAj66": {}}, "origin": "Xbox", "rewards": [{"currency": {"currencyCode": "4UgHh8m6", "namespace": "6YH0BXcB"}, "item": {"itemId": "rqlnV6X0", "itemName": "DjneCK4i", "itemSku": "KZbqIOG7", "itemType": "iN2Y1TTg"}, "quantity": 43, "type": "CURRENCY"}, {"currency": {"currencyCode": "E8NjkI7M", "namespace": "ypEliEAV"}, "item": {"itemId": "LBaxs81i", "itemName": "NHWFF5Ya", "itemSku": "KPMjM5Sc", "itemType": "IQ3sLJjx"}, "quantity": 57, "type": "CURRENCY"}, {"currency": {"currencyCode": "TL2DY7ZQ", "namespace": "nEkbuY4Q"}, "item": {"itemId": "UwXynye1", "itemName": "BzImH8PQ", "itemSku": "cOyXnLuw", "itemType": "9LnvkdaF"}, "quantity": 99, "type": "ITEM"}], "source": "ACHIEVEMENT", "transactionId": "RCDOvLO6"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op FulfillRewardsV2 \
    --namespace $AB_NAMESPACE \
    --userId 'X2y0nVSe' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 492 'FulfillRewardsV2' test.out

#- 493 FulfillItems
eval_tap 0 493 'FulfillItems # SKIP deprecated' test.out

#- 494 RetryFulfillItems
eval_tap 0 494 'RetryFulfillItems # SKIP deprecated' test.out

#- 495 RevokeItems
eval_tap 0 495 'RevokeItems # SKIP deprecated' test.out

#- 496 V2PublicFulfillAppleIAPItem
# body param: body
echo '{"transactionId": "QkiGhLLC"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op V2PublicFulfillAppleIAPItem \
    --namespace $AB_NAMESPACE \
    --userId 'ewjtTTEb' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 496 'V2PublicFulfillAppleIAPItem' test.out

#- 497 FulfillItemsV3
# body param: body
echo '{"items": [{"duration": 7, "endDate": "1990-09-03T00:00:00Z", "entitlementCollectionId": "FnJm9jjo", "entitlementOrigin": "Oculus", "itemId": "ugkKSMJP", "itemSku": "K1eVV25K", "language": "IAcxtHN8", "metadata": {"SLB1sDNO": {}, "F2tyB5kt": {}, "w5DTCylD": {}}, "orderNo": "O56E3nQ5", "origin": "Nintendo", "quantity": 37, "region": "Yqio7FsN", "source": "CONSUME_ENTITLEMENT", "startDate": "1999-05-30T00:00:00Z", "storeId": "W8GlFFD6"}, {"duration": 31, "endDate": "1989-10-30T00:00:00Z", "entitlementCollectionId": "mfdnlqeN", "entitlementOrigin": "Xbox", "itemId": "V7steiQ3", "itemSku": "64oW1RuY", "language": "G6LzZeeF", "metadata": {"wHUmWmNQ": {}, "E1eJwtjQ": {}, "0SWzpmrp": {}}, "orderNo": "btSU7m62", "origin": "Xbox", "quantity": 83, "region": "aQw8PGJe", "source": "ORDER_REVOCATION", "startDate": "1989-06-11T00:00:00Z", "storeId": "g34s4VCk"}, {"duration": 18, "endDate": "1983-09-21T00:00:00Z", "entitlementCollectionId": "kjTLUF86", "entitlementOrigin": "Steam", "itemId": "TkbJzVQI", "itemSku": "02kGQQhJ", "language": "lVRpdfZ7", "metadata": {"KyVoFhPH": {}, "lydKSM2m": {}, "wRY4I9XL": {}}, "orderNo": "fe6fhZ4W", "origin": "Twitch", "quantity": 4, "region": "kyjP67rE", "source": "SELL_BACK", "startDate": "1989-01-25T00:00:00Z", "storeId": "9BhTMkkz"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op FulfillItemsV3 \
    --namespace $AB_NAMESPACE \
    --transactionId 'KxsZQayx' \
    --userId 'NkJkhlkp' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 497 'FulfillItemsV3' test.out

#- 498 RetryFulfillItemsV3
$CLI_EXE \
    --sn platform \
    --op RetryFulfillItemsV3 \
    --namespace $AB_NAMESPACE \
    --transactionId 'iUzsswnU' \
    --userId '6ETfWYIs' \
    > test.out 2>&1
eval_tap $? 498 'RetryFulfillItemsV3' test.out

#- 499 RevokeItemsV3
$CLI_EXE \
    --sn platform \
    --op RevokeItemsV3 \
    --namespace $AB_NAMESPACE \
    --transactionId 'FSVjFknh' \
    --userId 'k08MsL7O' \
    > test.out 2>&1
eval_tap $? 499 'RevokeItemsV3' test.out


# remove artifacts
rm -f "$CLI_TOKEN_FILE"
rm -f "$TEMP_JSON_INPUT"
rm -f "$TEMP_FILE_UPLOAD"

exit $EXIT_CODE