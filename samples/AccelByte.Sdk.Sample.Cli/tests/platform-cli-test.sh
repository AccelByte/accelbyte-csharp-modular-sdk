#!/usr/bin/env bash

# Copyright (c) 2021 AccelByte Inc. All Rights Reserved.
# This is licensed software from AccelByte Inc, for limitations
# and restrictions contact your company contract manager.

# This code is generated by tool. DO NOT EDIT.

# Meta:
# - random seed: 
# - template file: 

# Instructions:
# - Run the Justice SDK Mock Server first before running this script.

export AB_BASE_URL="http://127.0.0.1:8080"
export AB_CLIENT_ID="admin"
export AB_CLIENT_SECRET="admin"
export AB_NAMESPACE="test"
export AB_APP_NAME="UnitTest"

EXIT_CODE=0

eval_tap() {
  if [ $1 -eq 0 ]; then
    echo "ok $2 - $3"
  else
    EXIT_CODE=1
    echo "not ok $2 - $3"
    sed 's/^/# /g' $4
  fi
  rm -f $4
}

CLI_EXE="AccelByte.Sdk.Sample.Cli"
CLI_TOKEN_FILE="$(dirname "$(which $CLI_EXE)")/token.json"
TEMP_JSON_INPUT="input_json.json"
TEMP_FILE_UPLOAD="file_upload.bin"

echo "TAP version 13"
echo "1..445"

#- 1 Login
$CLI_EXE --op login --lt user --user user --pass user > test.out 2>&1
eval_tap $? 1 'Login' test.out

if [ $EXIT_CODE -ne 0 ]; then
  echo "Bail out! Login failed."
  exit $EXIT_CODE
fi

# echo "foo" > "$CLI_TOKEN_FILE"

#- 2 ListFulfillmentScripts
$CLI_EXE \
    --sn platform \
    --op ListFulfillmentScripts \
    > test.out 2>&1
eval_tap $? 2 'ListFulfillmentScripts' test.out

#- 3 GetFulfillmentScript
$CLI_EXE \
    --sn platform \
    --op GetFulfillmentScript \
    --id 'CwOCabCs' \
    > test.out 2>&1
eval_tap $? 3 'GetFulfillmentScript' test.out

#- 4 CreateFulfillmentScript
# body param: body
echo '{"grantDays": "oHX78PWu"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateFulfillmentScript \
    --id 'b79DD9nF' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 4 'CreateFulfillmentScript' test.out

#- 5 DeleteFulfillmentScript
$CLI_EXE \
    --sn platform \
    --op DeleteFulfillmentScript \
    --id 'FF3lMYsr' \
    > test.out 2>&1
eval_tap $? 5 'DeleteFulfillmentScript' test.out

#- 6 UpdateFulfillmentScript
# body param: body
echo '{"grantDays": "P9VYprbc"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateFulfillmentScript \
    --id 'mOWvGv40' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 6 'UpdateFulfillmentScript' test.out

#- 7 ListItemTypeConfigs
$CLI_EXE \
    --sn platform \
    --op ListItemTypeConfigs \
    > test.out 2>&1
eval_tap $? 7 'ListItemTypeConfigs' test.out

#- 8 CreateItemTypeConfig
# body param: body
echo '{"clazz": "L2cagLFt", "dryRun": true, "fulfillmentUrl": "m27YdvW3", "itemType": "EXTENSION", "purchaseConditionUrl": "l0hJFik4"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateItemTypeConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 8 'CreateItemTypeConfig' test.out

#- 9 SearchItemTypeConfig
$CLI_EXE \
    --sn platform \
    --op SearchItemTypeConfig \
    --clazz 'S1meuECd' \
    --itemType 'SEASON' \
    > test.out 2>&1
eval_tap $? 9 'SearchItemTypeConfig' test.out

#- 10 GetItemTypeConfig
$CLI_EXE \
    --sn platform \
    --op GetItemTypeConfig \
    --id '8CtdecyH' \
    > test.out 2>&1
eval_tap $? 10 'GetItemTypeConfig' test.out

#- 11 UpdateItemTypeConfig
# body param: body
echo '{"clazz": "rLtqNr92", "dryRun": true, "fulfillmentUrl": "srlZlNhQ", "purchaseConditionUrl": "5QCAqH0i"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateItemTypeConfig \
    --id '1nfHC6TE' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 11 'UpdateItemTypeConfig' test.out

#- 12 DeleteItemTypeConfig
$CLI_EXE \
    --sn platform \
    --op DeleteItemTypeConfig \
    --id 'F8Z3Mogd' \
    > test.out 2>&1
eval_tap $? 12 'DeleteItemTypeConfig' test.out

#- 13 QueryCampaigns
$CLI_EXE \
    --sn platform \
    --op QueryCampaigns \
    --namespace $AB_NAMESPACE \
    --limit '77' \
    --name 'Oay1IgwF' \
    --offset '73' \
    --tag 'BEifPU12' \
    > test.out 2>&1
eval_tap $? 13 'QueryCampaigns' test.out

#- 14 CreateCampaign
# body param: body
echo '{"description": "Ffz7cdRL", "items": [{"extraSubscriptionDays": 81, "itemId": "sfUWbiUG", "itemName": "Fq3CdZAv", "quantity": 35}, {"extraSubscriptionDays": 5, "itemId": "1PS39QCY", "itemName": "pf1CaHTg", "quantity": 4}, {"extraSubscriptionDays": 37, "itemId": "Ua288SJi", "itemName": "fVz6ZK1k", "quantity": 4}], "maxRedeemCountPerCampaignPerUser": 92, "maxRedeemCountPerCode": 25, "maxRedeemCountPerCodePerUser": 65, "maxSaleCount": 54, "name": "6swVoZjB", "redeemEnd": "1993-10-01T00:00:00Z", "redeemStart": "1981-10-15T00:00:00Z", "redeemType": "ITEM", "status": "ACTIVE", "tags": ["VtQAgv2o", "l8IGKnrA", "OMh8GjxM"], "type": "REDEMPTION"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCampaign \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 14 'CreateCampaign' test.out

#- 15 GetCampaign
$CLI_EXE \
    --sn platform \
    --op GetCampaign \
    --campaignId 'UGebH6x9' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 15 'GetCampaign' test.out

#- 16 UpdateCampaign
# body param: body
echo '{"description": "M0LibHVD", "items": [{"extraSubscriptionDays": 74, "itemId": "7Jg38vLq", "itemName": "EhbYQ2OW", "quantity": 11}, {"extraSubscriptionDays": 58, "itemId": "wV2HTtT1", "itemName": "HtE2in0I", "quantity": 82}, {"extraSubscriptionDays": 83, "itemId": "eeQ5Sf44", "itemName": "wJAxkJR8", "quantity": 13}], "maxRedeemCountPerCampaignPerUser": 7, "maxRedeemCountPerCode": 45, "maxRedeemCountPerCodePerUser": 32, "maxSaleCount": 41, "name": "pSmBM1C2", "redeemEnd": "1978-05-09T00:00:00Z", "redeemStart": "1984-12-17T00:00:00Z", "redeemType": "ITEM", "status": "INACTIVE", "tags": ["GXic51WB", "eLPdQruO", "ebo6l7PO"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCampaign \
    --campaignId 'Uf96d31E' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 16 'UpdateCampaign' test.out

#- 17 GetCampaignDynamic
$CLI_EXE \
    --sn platform \
    --op GetCampaignDynamic \
    --campaignId 'NbS0RK4a' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 17 'GetCampaignDynamic' test.out

#- 18 GetLootBoxPluginConfig
$CLI_EXE \
    --sn platform \
    --op GetLootBoxPluginConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 18 'GetLootBoxPluginConfig' test.out

#- 19 UpdateLootBoxPluginConfig
# body param: body
echo '{"appConfig": {"appName": "yti5DEW6"}, "customConfig": {"connectionType": "INSECURE", "grpcServerAddress": "SIKveoOD"}, "extendType": "APP"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateLootBoxPluginConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 19 'UpdateLootBoxPluginConfig' test.out

#- 20 DeleteLootBoxPluginConfig
$CLI_EXE \
    --sn platform \
    --op DeleteLootBoxPluginConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 20 'DeleteLootBoxPluginConfig' test.out

#- 21 UplodLootBoxPluginConfigCert
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UplodLootBoxPluginConfigCert \
    --namespace $AB_NAMESPACE \
    --upload file $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 21 'UplodLootBoxPluginConfigCert' test.out

#- 22 GetLootBoxGrpcInfo
$CLI_EXE \
    --sn platform \
    --op GetLootBoxGrpcInfo \
    --namespace $AB_NAMESPACE \
    --force 'true' \
    > test.out 2>&1
eval_tap $? 22 'GetLootBoxGrpcInfo' test.out

#- 23 GetSectionPluginConfig
$CLI_EXE \
    --sn platform \
    --op GetSectionPluginConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 23 'GetSectionPluginConfig' test.out

#- 24 UpdateSectionPluginConfig
# body param: body
echo '{"appConfig": {"appName": "HxiwnF20"}, "customConfig": {"connectionType": "TLS", "grpcServerAddress": "xpXQShJg"}, "extendType": "APP"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateSectionPluginConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 24 'UpdateSectionPluginConfig' test.out

#- 25 DeleteSectionPluginConfig
$CLI_EXE \
    --sn platform \
    --op DeleteSectionPluginConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 25 'DeleteSectionPluginConfig' test.out

#- 26 UploadSectionPluginConfigCert
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UploadSectionPluginConfigCert \
    --namespace $AB_NAMESPACE \
    --upload file $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 26 'UploadSectionPluginConfigCert' test.out

#- 27 GetRootCategories
$CLI_EXE \
    --sn platform \
    --op GetRootCategories \
    --namespace $AB_NAMESPACE \
    --storeId 'ByqNqU4Y' \
    > test.out 2>&1
eval_tap $? 27 'GetRootCategories' test.out

#- 28 CreateCategory
# body param: body
echo '{"categoryPath": "0aCYBjqe", "localizationDisplayNames": {"Z4iLjFMS": "iJyaRl3O", "sDUoNxV7": "yocKzal3", "yIm8WyzF": "jBfNXq8e"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCategory \
    --namespace $AB_NAMESPACE \
    --storeId '7bQcQc8V' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 28 'CreateCategory' test.out

#- 29 ListCategoriesBasic
$CLI_EXE \
    --sn platform \
    --op ListCategoriesBasic \
    --namespace $AB_NAMESPACE \
    --storeId 'PDc9KvI1' \
    > test.out 2>&1
eval_tap $? 29 'ListCategoriesBasic' test.out

#- 30 GetCategory
$CLI_EXE \
    --sn platform \
    --op GetCategory \
    --categoryPath '8v6ANEuJ' \
    --namespace $AB_NAMESPACE \
    --storeId 'WygyJUtj' \
    > test.out 2>&1
eval_tap $? 30 'GetCategory' test.out

#- 31 UpdateCategory
# body param: body
echo '{"localizationDisplayNames": {"Yzgqc7Sx": "g4PnhGbh", "U8Wqz9aG": "q2p3C0P6", "rlFENB5b": "kIQ5Mc7w"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCategory \
    --categoryPath 'U6Uol2Ro' \
    --namespace $AB_NAMESPACE \
    --storeId 'A1cSTDPM' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 31 'UpdateCategory' test.out

#- 32 DeleteCategory
$CLI_EXE \
    --sn platform \
    --op DeleteCategory \
    --categoryPath 'a1csiR57' \
    --namespace $AB_NAMESPACE \
    --storeId '2vkR0OtB' \
    > test.out 2>&1
eval_tap $? 32 'DeleteCategory' test.out

#- 33 GetChildCategories
$CLI_EXE \
    --sn platform \
    --op GetChildCategories \
    --categoryPath 'twLveH5V' \
    --namespace $AB_NAMESPACE \
    --storeId 'tn6R4ZhZ' \
    > test.out 2>&1
eval_tap $? 33 'GetChildCategories' test.out

#- 34 GetDescendantCategories
$CLI_EXE \
    --sn platform \
    --op GetDescendantCategories \
    --categoryPath '5cPw5Ueu' \
    --namespace $AB_NAMESPACE \
    --storeId 'Eabmvcye' \
    > test.out 2>&1
eval_tap $? 34 'GetDescendantCategories' test.out

#- 35 QueryCodes
$CLI_EXE \
    --sn platform \
    --op QueryCodes \
    --campaignId 'W13FnMOe' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --batchNo '96' \
    --code 'LP66V0jj' \
    --limit '51' \
    --offset '49' \
    > test.out 2>&1
eval_tap $? 35 'QueryCodes' test.out

#- 36 CreateCodes
# body param: body
echo '{"quantity": 95}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCodes \
    --campaignId 'w9jpqB1J' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 36 'CreateCodes' test.out

#- 37 Download
$CLI_EXE \
    --sn platform \
    --op Download \
    --campaignId '6OksaJ4r' \
    --namespace $AB_NAMESPACE \
    --batchNo '8' \
    > test.out 2>&1
eval_tap $? 37 'Download' test.out

#- 38 BulkDisableCodes
$CLI_EXE \
    --sn platform \
    --op BulkDisableCodes \
    --campaignId 'TMiw3UFp' \
    --namespace $AB_NAMESPACE \
    --batchNo '18' \
    > test.out 2>&1
eval_tap $? 38 'BulkDisableCodes' test.out

#- 39 BulkEnableCodes
$CLI_EXE \
    --sn platform \
    --op BulkEnableCodes \
    --campaignId 'MrekXwMY' \
    --namespace $AB_NAMESPACE \
    --batchNo '64' \
    > test.out 2>&1
eval_tap $? 39 'BulkEnableCodes' test.out

#- 40 QueryRedeemHistory
$CLI_EXE \
    --sn platform \
    --op QueryRedeemHistory \
    --campaignId 'ON6CFGOx' \
    --namespace $AB_NAMESPACE \
    --code '7DzhlJBs' \
    --limit '31' \
    --offset '54' \
    --userId 'AoiTytX7' \
    > test.out 2>&1
eval_tap $? 40 'QueryRedeemHistory' test.out

#- 41 GetCode
$CLI_EXE \
    --sn platform \
    --op GetCode \
    --code 'zqrc4GJK' \
    --namespace $AB_NAMESPACE \
    --redeemable 'true' \
    > test.out 2>&1
eval_tap $? 41 'GetCode' test.out

#- 42 DisableCode
$CLI_EXE \
    --sn platform \
    --op DisableCode \
    --code 'R3QW2GGl' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 42 'DisableCode' test.out

#- 43 EnableCode
$CLI_EXE \
    --sn platform \
    --op EnableCode \
    --code 'nGOuuNwz' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 43 'EnableCode' test.out

#- 44 GetServicePluginConfig
eval_tap 0 44 'GetServicePluginConfig # SKIP deprecated' test.out

#- 45 UpdateServicePluginConfig
eval_tap 0 45 'UpdateServicePluginConfig # SKIP deprecated' test.out

#- 46 DeleteServicePluginConfig
eval_tap 0 46 'DeleteServicePluginConfig # SKIP deprecated' test.out

#- 47 ListCurrencies
$CLI_EXE \
    --sn platform \
    --op ListCurrencies \
    --namespace $AB_NAMESPACE \
    --currencyType 'REAL' \
    > test.out 2>&1
eval_tap $? 47 'ListCurrencies' test.out

#- 48 CreateCurrency
# body param: body
echo '{"currencyCode": "W7WO8hCm", "currencySymbol": "Iu8LLj4v", "currencyType": "REAL", "decimals": 4, "localizationDescriptions": {"ywfO1DVb": "1hp4FM6a", "9Fd5kZ5G": "bDpv2wZF", "6TiFof15": "mm2vZyDu"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCurrency \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 48 'CreateCurrency' test.out

#- 49 UpdateCurrency
# body param: body
echo '{"localizationDescriptions": {"UuVjXZdd": "pMHSQzFd", "CbsqQ3x0": "TOlPfpNA", "jW4auzyO": "0lrbCvEW"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCurrency \
    --currencyCode 'd0WhKvUw' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 49 'UpdateCurrency' test.out

#- 50 DeleteCurrency
$CLI_EXE \
    --sn platform \
    --op DeleteCurrency \
    --currencyCode '9LQvDG1R' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 50 'DeleteCurrency' test.out

#- 51 GetCurrencyConfig
$CLI_EXE \
    --sn platform \
    --op GetCurrencyConfig \
    --currencyCode 'GAgtAs45' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 51 'GetCurrencyConfig' test.out

#- 52 GetCurrencySummary
$CLI_EXE \
    --sn platform \
    --op GetCurrencySummary \
    --currencyCode 'A8iEfY5v' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 52 'GetCurrencySummary' test.out

#- 53 GetDLCItemConfig
$CLI_EXE \
    --sn platform \
    --op GetDLCItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 53 'GetDLCItemConfig' test.out

#- 54 UpdateDLCItemConfig
# body param: body
echo '{"data": [{"id": "d8fneWYz", "rewards": [{"currency": {"currencyCode": "Yv6nvKBF", "namespace": "0ID7CHHB"}, "item": {"itemId": "E6l6H7nM", "itemSku": "X3vmR6pF", "itemType": "8Z3X5qgn"}, "quantity": 0, "type": "ITEM"}, {"currency": {"currencyCode": "cuvgFpF3", "namespace": "YkYBrVCT"}, "item": {"itemId": "BP7aGh9S", "itemSku": "firoyEAD", "itemType": "u0Hcaf5q"}, "quantity": 0, "type": "CURRENCY"}, {"currency": {"currencyCode": "r2f1Fq2V", "namespace": "kCQZIK1p"}, "item": {"itemId": "GLqc4H4U", "itemSku": "U5QP3S4K", "itemType": "zBvSylaH"}, "quantity": 84, "type": "CURRENCY"}]}, {"id": "4niOu1Sl", "rewards": [{"currency": {"currencyCode": "v6MT42X7", "namespace": "Opdev4nd"}, "item": {"itemId": "ZfKtCBA7", "itemSku": "XvZWmT3V", "itemType": "PJ5Aqari"}, "quantity": 67, "type": "ITEM"}, {"currency": {"currencyCode": "CkM2UlxP", "namespace": "2ds8qXWz"}, "item": {"itemId": "McEJAITG", "itemSku": "QFrnjC25", "itemType": "0Fatgn5Y"}, "quantity": 55, "type": "CURRENCY"}, {"currency": {"currencyCode": "ej5rniCW", "namespace": "osJch3Yb"}, "item": {"itemId": "TwwK03Bl", "itemSku": "LUQaA0Cc", "itemType": "hXaVZlqO"}, "quantity": 51, "type": "ITEM"}]}, {"id": "CE6oNaJD", "rewards": [{"currency": {"currencyCode": "8QITdE2B", "namespace": "e4M3QvJT"}, "item": {"itemId": "UrWlLLrj", "itemSku": "lGRFRCJN", "itemType": "we9VFD2o"}, "quantity": 89, "type": "CURRENCY"}, {"currency": {"currencyCode": "Yw72PPyk", "namespace": "PB8WgE1A"}, "item": {"itemId": "yuwoU7Mk", "itemSku": "LfvAMP5n", "itemType": "DmztrJJk"}, "quantity": 40, "type": "CURRENCY"}, {"currency": {"currencyCode": "BkZoM7vx", "namespace": "45a3rt1o"}, "item": {"itemId": "baMRKHeW", "itemSku": "6ULX3c2m", "itemType": "20f6kNMc"}, "quantity": 99, "type": "ITEM"}]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateDLCItemConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 54 'UpdateDLCItemConfig' test.out

#- 55 DeleteDLCItemConfig
$CLI_EXE \
    --sn platform \
    --op DeleteDLCItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 55 'DeleteDLCItemConfig' test.out

#- 56 GetPlatformDLCConfig
$CLI_EXE \
    --sn platform \
    --op GetPlatformDLCConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 56 'GetPlatformDLCConfig' test.out

#- 57 UpdatePlatformDLCConfig
# body param: body
echo '{"data": [{"platform": "OCULUS", "platformDlcIdMap": {"Q1QoRQ3y": "iQBdYLgg", "iAeYfKOo": "owSmAqDt", "NDZu25Ou": "0P6BtSHM"}}, {"platform": "OCULUS", "platformDlcIdMap": {"a4SUrGrC": "Y54G9VX7", "2zwXQ2S7": "1dUddmBt", "N4Gg14k4": "5XJ2rnJd"}}, {"platform": "PSN", "platformDlcIdMap": {"oE5KzHbx": "Ck6c712G", "am3VEIPj": "MIdyzKQx", "9apE3Aqf": "QrUuYunZ"}}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePlatformDLCConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 57 'UpdatePlatformDLCConfig' test.out

#- 58 DeletePlatformDLCConfig
$CLI_EXE \
    --sn platform \
    --op DeletePlatformDLCConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 58 'DeletePlatformDLCConfig' test.out

#- 59 QueryEntitlements
$CLI_EXE \
    --sn platform \
    --op QueryEntitlements \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --appType 'SOFTWARE' \
    --entitlementClazz 'MEDIA' \
    --entitlementName '4Z1Xe379' \
    --itemId '["Xbt5ykYm", "6lHoDCEC", "oikGdfNb"]' \
    --limit '89' \
    --offset '68' \
    --origin 'System' \
    --userId 'MXCbsfrO' \
    > test.out 2>&1
eval_tap $? 59 'QueryEntitlements' test.out

#- 60 QueryEntitlements1
$CLI_EXE \
    --sn platform \
    --op QueryEntitlements1 \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --itemIds '["M0AOCD4w", "l6mSpDpa", "A2HrDWpE"]' \
    --limit '54' \
    --offset '12' \
    > test.out 2>&1
eval_tap $? 60 'QueryEntitlements1' test.out

#- 61 EnableEntitlementOriginFeature
$CLI_EXE \
    --sn platform \
    --op EnableEntitlementOriginFeature \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 61 'EnableEntitlementOriginFeature' test.out

#- 62 GetEntitlementConfigInfo
$CLI_EXE \
    --sn platform \
    --op GetEntitlementConfigInfo \
    --namespace $AB_NAMESPACE \
    --withoutCache 'false' \
    > test.out 2>&1
eval_tap $? 62 'GetEntitlementConfigInfo' test.out

#- 63 GrantEntitlements
# body param: body
echo '{"entitlementGrantList": [{"collectionId": "TEyqsoOG", "endDate": "1987-12-27T00:00:00Z", "grantedCode": "xnuZWTjl", "itemId": "hkCwXJLU", "itemNamespace": "9ZnERqZA", "language": "NfP_sUaE", "origin": "GooglePlay", "quantity": 86, "region": "ZQvgFtW4", "source": "GIFT", "startDate": "1994-01-16T00:00:00Z", "storeId": "E7W9j7lH"}, {"collectionId": "zOS8q3ce", "endDate": "1979-02-16T00:00:00Z", "grantedCode": "LuTVdaxo", "itemId": "KvpLhOcr", "itemNamespace": "a6IcWcFs", "language": "YAor_596", "origin": "Steam", "quantity": 43, "region": "X7oGkLmA", "source": "PROMOTION", "startDate": "1992-06-24T00:00:00Z", "storeId": "zFPT8ggB"}, {"collectionId": "HF3M56KY", "endDate": "1988-10-16T00:00:00Z", "grantedCode": "ZIct1Z2N", "itemId": "pkvqW0By", "itemNamespace": "WNVcCaZ7", "language": "td_Pf", "origin": "Twitch", "quantity": 65, "region": "0KRGGbjp", "source": "REFERRAL_BONUS", "startDate": "1977-07-10T00:00:00Z", "storeId": "5uUmNdGu"}], "userIds": ["6goemHvK", "AX3BHJ95", "Nhy8QjPP"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op GrantEntitlements \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 63 'GrantEntitlements' test.out

#- 64 RevokeEntitlements
# body param: body
echo '["zw4lBIoB", "XO7nIoC0", "m36rSLjv"]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RevokeEntitlements \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 64 'RevokeEntitlements' test.out

#- 65 GetEntitlement
$CLI_EXE \
    --sn platform \
    --op GetEntitlement \
    --entitlementId '4mt3140x' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 65 'GetEntitlement' test.out

#- 66 QueryFulfillmentHistories
$CLI_EXE \
    --sn platform \
    --op QueryFulfillmentHistories \
    --namespace $AB_NAMESPACE \
    --limit '16' \
    --offset '39' \
    --status 'FAIL' \
    --userId 'rNV44msF' \
    > test.out 2>&1
eval_tap $? 66 'QueryFulfillmentHistories' test.out

#- 67 QueryIAPClawbackHistory
$CLI_EXE \
    --sn platform \
    --op QueryIAPClawbackHistory \
    --namespace $AB_NAMESPACE \
    --endTime 'Y4OdnmRx' \
    --eventType 'OTHER' \
    --externalOrderId 'gSKUGn95' \
    --limit '95' \
    --offset '90' \
    --startTime 'KTT7PQOj' \
    --status 'SUCCESS' \
    --userId 'd97UxabI' \
    > test.out 2>&1
eval_tap $? 67 'QueryIAPClawbackHistory' test.out

#- 68 MockPlayStationStreamEvent
# body param: body
echo '{"body": {"account": "i3BTrBFD", "additionalData": {"entitlement": [{"clientTransaction": [{"amountConsumed": 100, "clientTransactionId": "oARrDgWx"}, {"amountConsumed": 68, "clientTransactionId": "WcD4atZs"}, {"amountConsumed": 21, "clientTransactionId": "n33hGFCm"}], "entitlementId": "FYKGDEEJ", "usageCount": 85}, {"clientTransaction": [{"amountConsumed": 44, "clientTransactionId": "GBs9siNV"}, {"amountConsumed": 24, "clientTransactionId": "pV2zQuAc"}, {"amountConsumed": 59, "clientTransactionId": "UHOtRVoW"}], "entitlementId": "3OHdz8OL", "usageCount": 99}, {"clientTransaction": [{"amountConsumed": 91, "clientTransactionId": "eMzoCIWn"}, {"amountConsumed": 62, "clientTransactionId": "bIwVQNwo"}, {"amountConsumed": 4, "clientTransactionId": "HzrTSNDs"}], "entitlementId": "6fO0uWCf", "usageCount": 92}], "purpose": "ItWsNRY2"}, "originalTitleName": "Q7A1MDrw", "paymentProductSKU": "hle3pmEJ", "purchaseDate": "WIY73Hsm", "sourceOrderItemId": "SibVhSvX", "titleName": "lD58hrdb"}, "eventDomain": "Lr5hhdHY", "eventSource": "QtFDwGuN", "eventType": "o8jQGDGy", "eventVersion": 46, "id": "ygjZeNwE", "timestamp": "KCeZlYaG"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op MockPlayStationStreamEvent \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 68 'MockPlayStationStreamEvent' test.out

#- 69 GetAppleIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetAppleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 69 'GetAppleIAPConfig' test.out

#- 70 UpdateAppleIAPConfig
# body param: body
echo '{"bundleId": "3MI0nd6W", "password": "vPqSFmEY"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateAppleIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 70 'UpdateAppleIAPConfig' test.out

#- 71 DeleteAppleIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteAppleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 71 'DeleteAppleIAPConfig' test.out

#- 72 GetEpicGamesIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetEpicGamesIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 72 'GetEpicGamesIAPConfig' test.out

#- 73 UpdateEpicGamesIAPConfig
# body param: body
echo '{"sandboxId": "lAScZqGz"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateEpicGamesIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 73 'UpdateEpicGamesIAPConfig' test.out

#- 74 DeleteEpicGamesIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteEpicGamesIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 74 'DeleteEpicGamesIAPConfig' test.out

#- 75 GetGoogleIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetGoogleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 75 'GetGoogleIAPConfig' test.out

#- 76 UpdateGoogleIAPConfig
# body param: body
echo '{"applicationName": "3JGDSN4e", "serviceAccountId": "ct1QuuG1"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateGoogleIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 76 'UpdateGoogleIAPConfig' test.out

#- 77 DeleteGoogleIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteGoogleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 77 'DeleteGoogleIAPConfig' test.out

#- 78 UpdateGoogleP12File
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UpdateGoogleP12File \
    --namespace $AB_NAMESPACE \
    --upload file $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 78 'UpdateGoogleP12File' test.out

#- 79 GetIAPItemConfig
$CLI_EXE \
    --sn platform \
    --op GetIAPItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 79 'GetIAPItemConfig' test.out

#- 80 UpdateIAPItemConfig
# body param: body
echo '{"data": [{"itemIdentity": "DSONojLZ", "itemIdentityType": "ITEM_ID", "platformProductIdMap": {"1gYMAkmm": "5mQGBL0t", "lhFuDJfB": "fqWkRP0w", "56XUkKNg": "JDhhiwKR"}}, {"itemIdentity": "1C9MVxjl", "itemIdentityType": "ITEM_SKU", "platformProductIdMap": {"8zvYg1Bs": "Hw0je2Ok", "2o5eeRqz": "6eV1Z5TG", "RzEDHBBo": "9V6WhWvv"}}, {"itemIdentity": "SzoCz7zt", "itemIdentityType": "ITEM_SKU", "platformProductIdMap": {"k9GWu7pj": "lCK4qBGN", "vRVCeDgU": "07E2CtRT", "gOtdwKuX": "G6IcBm5S"}}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateIAPItemConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 80 'UpdateIAPItemConfig' test.out

#- 81 DeleteIAPItemConfig
$CLI_EXE \
    --sn platform \
    --op DeleteIAPItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 81 'DeleteIAPItemConfig' test.out

#- 82 GetOculusIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetOculusIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 82 'GetOculusIAPConfig' test.out

#- 83 UpdateOculusIAPConfig
# body param: body
echo '{"appId": "pKd1FCiU", "appSecret": "jWZNoAnU"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateOculusIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 83 'UpdateOculusIAPConfig' test.out

#- 84 DeleteOculusIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteOculusIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 84 'DeleteOculusIAPConfig' test.out

#- 85 GetPlayStationIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetPlayStationIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 85 'GetPlayStationIAPConfig' test.out

#- 86 UpdatePlaystationIAPConfig
# body param: body
echo '{"backOfficeServerClientId": "FMoxXHt1", "backOfficeServerClientSecret": "lTNfQhMg", "enableStreamJob": false, "environment": "XHdIETBQ", "streamName": "iu9uAnOK", "streamPartnerName": "KGsJNEwA"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePlaystationIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 86 'UpdatePlaystationIAPConfig' test.out

#- 87 DeletePlaystationIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeletePlaystationIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 87 'DeletePlaystationIAPConfig' test.out

#- 88 ValidateExistedPlaystationIAPConfig
$CLI_EXE \
    --sn platform \
    --op ValidateExistedPlaystationIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 88 'ValidateExistedPlaystationIAPConfig' test.out

#- 89 ValidatePlaystationIAPConfig
# body param: body
echo '{"backOfficeServerClientId": "jBwbetrr", "backOfficeServerClientSecret": "j9ZlDYSF", "enableStreamJob": true, "environment": "g9MAwgxF", "streamName": "5XTQnx25", "streamPartnerName": "hH6I9WrU"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ValidatePlaystationIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 89 'ValidatePlaystationIAPConfig' test.out

#- 90 GetSteamIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetSteamIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 90 'GetSteamIAPConfig' test.out

#- 91 UpdateSteamIAPConfig
# body param: body
echo '{"appId": "N8TzwfrJ", "publisherAuthenticationKey": "IPxC2ioP"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateSteamIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 91 'UpdateSteamIAPConfig' test.out

#- 92 DeleteSteamIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteSteamIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 92 'DeleteSteamIAPConfig' test.out

#- 93 GetTwitchIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetTwitchIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 93 'GetTwitchIAPConfig' test.out

#- 94 UpdateTwitchIAPConfig
# body param: body
echo '{"clientId": "K0pSAZsi", "clientSecret": "ModKfnNU", "organizationId": "1EQ24Miv"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateTwitchIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 94 'UpdateTwitchIAPConfig' test.out

#- 95 DeleteTwitchIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteTwitchIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 95 'DeleteTwitchIAPConfig' test.out

#- 96 GetXblIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetXblIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 96 'GetXblIAPConfig' test.out

#- 97 UpdateXblIAPConfig
# body param: body
echo '{"relyingPartyCert": "JAcG2FRb"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXblIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 97 'UpdateXblIAPConfig' test.out

#- 98 DeleteXblAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteXblAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 98 'DeleteXblAPConfig' test.out

#- 99 UpdateXblBPCertFile
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UpdateXblBPCertFile \
    --namespace $AB_NAMESPACE \
    --upload file $TEMP_FILE_UPLOAD \
    --password 'yU701VGM' \
    > test.out 2>&1
eval_tap $? 99 'UpdateXblBPCertFile' test.out

#- 100 DownloadInvoiceDetails
$CLI_EXE \
    --sn platform \
    --op DownloadInvoiceDetails \
    --namespace $AB_NAMESPACE \
    --feature 'UE394XdM' \
    --itemId 'WQJLZiyT' \
    --itemType 'BUNDLE' \
    --endTime '5teKVGuN' \
    --startTime 'HgvZMP8m' \
    > test.out 2>&1
eval_tap $? 100 'DownloadInvoiceDetails' test.out

#- 101 GenerateInvoiceSummary
$CLI_EXE \
    --sn platform \
    --op GenerateInvoiceSummary \
    --namespace $AB_NAMESPACE \
    --feature 'gl6AsVvj' \
    --itemId 'TXXq3CXE' \
    --itemType 'EXTENSION' \
    --endTime 'KnVr4ZCY' \
    --startTime 'kQmP1vaA' \
    > test.out 2>&1
eval_tap $? 101 'GenerateInvoiceSummary' test.out

#- 102 SyncInGameItem
# body param: body
echo '{"categoryPath": "ms2xhZrN", "targetItemId": "dEibugyG", "targetNamespace": "dpWnucdn"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncInGameItem \
    --namespace $AB_NAMESPACE \
    --storeId 'HiA1SGU5' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 102 'SyncInGameItem' test.out

#- 103 CreateItem
# body param: body
echo '{"appId": "kSQ4TPHb", "appType": "DLC", "baseAppId": "QC9gH8kO", "boothName": "a1MMlhy8", "categoryPath": "djwobZI1", "clazz": "OG5KxLYJ", "displayOrder": 61, "entitlementType": "DURABLE", "ext": {"GvUlRHT8": {}, "JZYD4jJf": {}, "jbmSrgkD": {}}, "features": ["rt9Q1Xtr", "zOR7Cn6A", "OZnNlelP"], "flexible": true, "images": [{"as": "HqQ4Cz73", "caption": "RmJMlpdv", "height": 85, "imageUrl": "BJFj93St", "smallImageUrl": "K5g5kFXL", "width": 31}, {"as": "4FNduTZn", "caption": "wZTW9qbp", "height": 35, "imageUrl": "meJLKvXp", "smallImageUrl": "zdBomZ5s", "width": 98}, {"as": "nlJXiSfk", "caption": "KhPbLKdm", "height": 58, "imageUrl": "VwlgAqs9", "smallImageUrl": "gTGyK0cK", "width": 3}], "inventoryConfig": {"customAttributes": {"qJPrgikU": {}, "MEV4Xrqu": {}, "zcm8aPYw": {}}, "serverCustomAttributes": {"PSYiFKvY": {}, "8NDxtIb7": {}, "fQXRq3qt": {}}, "slotUsed": 6}, "itemIds": ["eW2QrAdx", "pQ3hAUqM", "cACudjkP"], "itemQty": {"p2W9Tj3D": 83, "dE5uRls1": 18, "WtbaHCjT": 13}, "itemType": "SEASON", "listable": false, "localizations": {"c04UAy66": {"description": "RCf9tQy0", "localExt": {"z5WgAqRB": {}, "h4hj5k2G": {}, "WKc2kx9H": {}}, "longDescription": "9ZljDDia", "title": "JXyT9uMZ"}, "R85RK7Js": {"description": "V7EpOvYS", "localExt": {"MXy3sYTk": {}, "CdCFVPVq": {}, "9PQkU364": {}}, "longDescription": "zcUpiOPS", "title": "wwIslBIK"}, "bsfzWaHK": {"description": "P5hJ7SjJ", "localExt": {"15HNXI97": {}, "D4tWc7eS": {}, "DCzAnL5R": {}}, "longDescription": "q0tGdcdW", "title": "IdZATLyy"}}, "lootBoxConfig": {"rewardCount": 96, "rewards": [{"lootBoxItems": [{"count": 46, "duration": 15, "endDate": "1977-08-23T00:00:00Z", "itemId": "fnZk0WpC", "itemSku": "3P8HSNbb", "itemType": "ijYQmcf3"}, {"count": 51, "duration": 85, "endDate": "1994-11-28T00:00:00Z", "itemId": "rgqtdGYk", "itemSku": "DoY1oGEd", "itemType": "3PmgzaCC"}, {"count": 16, "duration": 62, "endDate": "1972-03-30T00:00:00Z", "itemId": "lxnNGaf3", "itemSku": "OQdrqFN5", "itemType": "IgZwXkUk"}], "name": "kJUw24Pu", "odds": 0.7075004787312968, "type": "REWARD", "weight": 1}, {"lootBoxItems": [{"count": 69, "duration": 19, "endDate": "1975-04-20T00:00:00Z", "itemId": "u8I1pWLf", "itemSku": "v55aKVNA", "itemType": "pCZLCtm8"}, {"count": 42, "duration": 49, "endDate": "1980-08-22T00:00:00Z", "itemId": "icRL0SiJ", "itemSku": "BIkltLre", "itemType": "sfzsMYZA"}, {"count": 32, "duration": 82, "endDate": "1988-06-29T00:00:00Z", "itemId": "fOY6CGzY", "itemSku": "gG3SY8ym", "itemType": "yo98BCaO"}], "name": "4t9hhygP", "odds": 0.41025139869219673, "type": "REWARD", "weight": 22}, {"lootBoxItems": [{"count": 67, "duration": 92, "endDate": "1990-06-06T00:00:00Z", "itemId": "4Bep03h8", "itemSku": "GNBcZUDS", "itemType": "PgOyppZ0"}, {"count": 94, "duration": 49, "endDate": "1971-03-18T00:00:00Z", "itemId": "Hvw41Sn3", "itemSku": "XwLLpjiF", "itemType": "xAeilNJ3"}, {"count": 50, "duration": 20, "endDate": "1979-09-12T00:00:00Z", "itemId": "vm8oVOe2", "itemSku": "auu5K3Ge", "itemType": "kwDh2MoU"}], "name": "RXBkSsTx", "odds": 0.6794421093733101, "type": "REWARD", "weight": 18}], "rollFunction": "CUSTOM"}, "maxCount": 92, "maxCountPerUser": 63, "name": "xVSAf4Js", "optionBoxConfig": {"boxItems": [{"count": 72, "duration": 39, "endDate": "1982-01-14T00:00:00Z", "itemId": "fpFsxs8y", "itemSku": "524esH5Q", "itemType": "EysquYKB"}, {"count": 22, "duration": 84, "endDate": "1981-02-06T00:00:00Z", "itemId": "IADZd5I0", "itemSku": "7pczeQE4", "itemType": "jItYQz2t"}, {"count": 65, "duration": 38, "endDate": "1987-03-25T00:00:00Z", "itemId": "vpRjPNVd", "itemSku": "W2UzxwNd", "itemType": "yb3exgAZ"}]}, "purchasable": true, "recurring": {"cycle": "YEARLY", "fixedFreeDays": 7, "fixedTrialCycles": 32, "graceDays": 33}, "regionData": {"yMBotzOc": [{"currencyCode": "s9OhasGP", "currencyNamespace": "xTpeYci3", "currencyType": "VIRTUAL", "discountAmount": 24, "discountExpireAt": "1976-05-29T00:00:00Z", "discountPercentage": 53, "discountPurchaseAt": "1989-06-16T00:00:00Z", "expireAt": "1997-01-19T00:00:00Z", "price": 31, "purchaseAt": "1976-01-02T00:00:00Z", "trialPrice": 27}, {"currencyCode": "4ae2H5eq", "currencyNamespace": "Y7ZkxpzA", "currencyType": "VIRTUAL", "discountAmount": 12, "discountExpireAt": "1986-02-22T00:00:00Z", "discountPercentage": 21, "discountPurchaseAt": "1999-06-29T00:00:00Z", "expireAt": "1994-07-24T00:00:00Z", "price": 56, "purchaseAt": "1981-09-08T00:00:00Z", "trialPrice": 67}, {"currencyCode": "yzApmiXI", "currencyNamespace": "iorwIPKQ", "currencyType": "REAL", "discountAmount": 37, "discountExpireAt": "1988-07-27T00:00:00Z", "discountPercentage": 29, "discountPurchaseAt": "1978-11-30T00:00:00Z", "expireAt": "1981-12-15T00:00:00Z", "price": 2, "purchaseAt": "1988-05-13T00:00:00Z", "trialPrice": 87}], "CMlydJhJ": [{"currencyCode": "pBEElVuL", "currencyNamespace": "d6lixX7P", "currencyType": "VIRTUAL", "discountAmount": 13, "discountExpireAt": "1980-04-26T00:00:00Z", "discountPercentage": 56, "discountPurchaseAt": "1988-04-22T00:00:00Z", "expireAt": "1981-08-31T00:00:00Z", "price": 92, "purchaseAt": "1992-02-08T00:00:00Z", "trialPrice": 14}, {"currencyCode": "Yg9YQMOp", "currencyNamespace": "8Ltog08i", "currencyType": "VIRTUAL", "discountAmount": 70, "discountExpireAt": "1974-01-07T00:00:00Z", "discountPercentage": 75, "discountPurchaseAt": "1977-03-17T00:00:00Z", "expireAt": "1971-10-21T00:00:00Z", "price": 50, "purchaseAt": "1976-07-30T00:00:00Z", "trialPrice": 83}, {"currencyCode": "TiUE61ot", "currencyNamespace": "I5NWGGYE", "currencyType": "VIRTUAL", "discountAmount": 84, "discountExpireAt": "1972-06-01T00:00:00Z", "discountPercentage": 57, "discountPurchaseAt": "1995-03-22T00:00:00Z", "expireAt": "1987-07-14T00:00:00Z", "price": 86, "purchaseAt": "1982-09-12T00:00:00Z", "trialPrice": 93}], "M3SZy4Lb": [{"currencyCode": "0aIQshIm", "currencyNamespace": "M607IsMJ", "currencyType": "VIRTUAL", "discountAmount": 17, "discountExpireAt": "1975-03-10T00:00:00Z", "discountPercentage": 33, "discountPurchaseAt": "1994-09-13T00:00:00Z", "expireAt": "1985-06-18T00:00:00Z", "price": 93, "purchaseAt": "1999-08-04T00:00:00Z", "trialPrice": 25}, {"currencyCode": "53svLOnr", "currencyNamespace": "sf0gBu7x", "currencyType": "VIRTUAL", "discountAmount": 8, "discountExpireAt": "1973-05-25T00:00:00Z", "discountPercentage": 66, "discountPurchaseAt": "1980-05-29T00:00:00Z", "expireAt": "1972-11-10T00:00:00Z", "price": 34, "purchaseAt": "1971-12-29T00:00:00Z", "trialPrice": 2}, {"currencyCode": "a1vCTGJg", "currencyNamespace": "N3Tn0RIJ", "currencyType": "REAL", "discountAmount": 72, "discountExpireAt": "1999-01-21T00:00:00Z", "discountPercentage": 86, "discountPurchaseAt": "1972-08-11T00:00:00Z", "expireAt": "1989-04-14T00:00:00Z", "price": 25, "purchaseAt": "1992-02-04T00:00:00Z", "trialPrice": 87}]}, "saleConfig": {"currencyCode": "wuefATq4", "price": 73}, "seasonType": "PASS", "sectionExclusive": false, "sellable": false, "sku": "d4jbrXEH", "stackable": false, "status": "INACTIVE", "tags": ["0HUebLxQ", "PMQefeyc", "kJAOF85S"], "targetCurrencyCode": "mxrlsG87", "targetNamespace": "KDRwfOXR", "thumbnailUrl": "DWfmES42", "useCount": 55}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateItem \
    --namespace $AB_NAMESPACE \
    --storeId 'hKfX8hKV' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 103 'CreateItem' test.out

#- 104 GetItemByAppId
$CLI_EXE \
    --sn platform \
    --op GetItemByAppId \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --storeId 'FIPl9grp' \
    --appId 'ufqds194' \
    > test.out 2>&1
eval_tap $? 104 'GetItemByAppId' test.out

#- 105 QueryItems
$CLI_EXE \
    --sn platform \
    --op QueryItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --appType 'GAME' \
    --availableDate '9EEmqfh9' \
    --baseAppId 'f9KOsLCr' \
    --categoryPath 'OPftcMy7' \
    --features 'JKvde7nc' \
    --includeSubCategoryItem 'true' \
    --itemType 'SUBSCRIPTION' \
    --limit '48' \
    --offset '53' \
    --region 'kqkkuVTd' \
    --sortBy '["name:asc"]' \
    --storeId 'C22i5MzC' \
    --tags 'HUUXVQEG' \
    --targetNamespace 'PAidufY2' \
    > test.out 2>&1
eval_tap $? 105 'QueryItems' test.out

#- 106 ListBasicItemsByFeatures
$CLI_EXE \
    --sn platform \
    --op ListBasicItemsByFeatures \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --features '["2cOozA8g", "bEtdLKSL", "RIwA20zH"]' \
    > test.out 2>&1
eval_tap $? 106 'ListBasicItemsByFeatures' test.out

#- 107 GetItems
$CLI_EXE \
    --sn platform \
    --op GetItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --storeId 'mlIrSBys' \
    --itemIds 'AR4soaho' \
    > test.out 2>&1
eval_tap $? 107 'GetItems' test.out

#- 108 GetItemBySku
$CLI_EXE \
    --sn platform \
    --op GetItemBySku \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --storeId 'LTYPjCiu' \
    --sku '1hsyBC2o' \
    > test.out 2>&1
eval_tap $? 108 'GetItemBySku' test.out

#- 109 GetLocaleItemBySku
$CLI_EXE \
    --sn platform \
    --op GetLocaleItemBySku \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --language 'qjHsJmue' \
    --populateBundle 'true' \
    --region 'jqNiGuTF' \
    --storeId 'DFiUcVyA' \
    --sku 'U5oUcUXX' \
    > test.out 2>&1
eval_tap $? 109 'GetLocaleItemBySku' test.out

#- 110 GetEstimatedPrice
$CLI_EXE \
    --sn platform \
    --op GetEstimatedPrice \
    --namespace $AB_NAMESPACE \
    --platform 'AK8BbJbV' \
    --region 'yxO7rTY6' \
    --storeId 'TsTBz9KP' \
    --itemIds 'NGjFbwYe' \
    --userId 'c4oTd5Ht' \
    > test.out 2>&1
eval_tap $? 110 'GetEstimatedPrice' test.out

#- 111 GetItemIdBySku
$CLI_EXE \
    --sn platform \
    --op GetItemIdBySku \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --storeId '3FcKFKxv' \
    --sku 'VaXWZ42H' \
    > test.out 2>&1
eval_tap $? 111 'GetItemIdBySku' test.out

#- 112 GetBulkItemIdBySkus
$CLI_EXE \
    --sn platform \
    --op GetBulkItemIdBySkus \
    --namespace $AB_NAMESPACE \
    --sku '["TX3KmGbT", "acrNZggn", "3olaSiei"]' \
    --storeId '2qEdVTXK' \
    > test.out 2>&1
eval_tap $? 112 'GetBulkItemIdBySkus' test.out

#- 113 BulkGetLocaleItems
$CLI_EXE \
    --sn platform \
    --op BulkGetLocaleItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --language 'vyToEfdJ' \
    --region 'VcbT54yr' \
    --storeId '95OJvCcM' \
    --itemIds 'zIejUg21' \
    > test.out 2>&1
eval_tap $? 113 'BulkGetLocaleItems' test.out

#- 114 GetAvailablePredicateTypes
$CLI_EXE \
    --sn platform \
    --op GetAvailablePredicateTypes \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 114 'GetAvailablePredicateTypes' test.out

#- 115 ValidateItemPurchaseCondition
# body param: body
echo '{"itemIds": ["LFUvOtTG", "ajX4rx59", "4XXMhV6s"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ValidateItemPurchaseCondition \
    --namespace $AB_NAMESPACE \
    --platform '4l5VCliO' \
    --userId 'g2NcZ62v' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 115 'ValidateItemPurchaseCondition' test.out

#- 116 BulkUpdateRegionData
# body param: body
echo '{"changes": [{"itemIdentities": ["rmNZHNrG", "MTEKobDd", "0B1TrH4E"], "itemIdentityType": "ITEM_SKU", "regionData": {"BeFZel6E": [{"currencyCode": "7L3FsJhz", "currencyNamespace": "jRNDbiez", "currencyType": "REAL", "discountAmount": 37, "discountExpireAt": "1989-12-13T00:00:00Z", "discountPercentage": 23, "discountPurchaseAt": "1997-10-09T00:00:00Z", "discountedPrice": 61, "expireAt": "1977-03-13T00:00:00Z", "price": 88, "purchaseAt": "1997-10-10T00:00:00Z", "trialPrice": 80}, {"currencyCode": "iyK9fCJl", "currencyNamespace": "S3Ue361u", "currencyType": "VIRTUAL", "discountAmount": 94, "discountExpireAt": "1998-08-15T00:00:00Z", "discountPercentage": 8, "discountPurchaseAt": "1985-09-13T00:00:00Z", "discountedPrice": 56, "expireAt": "1976-09-03T00:00:00Z", "price": 83, "purchaseAt": "1983-01-25T00:00:00Z", "trialPrice": 31}, {"currencyCode": "JTwqHxN4", "currencyNamespace": "Q9d3XInG", "currencyType": "VIRTUAL", "discountAmount": 16, "discountExpireAt": "1973-08-08T00:00:00Z", "discountPercentage": 99, "discountPurchaseAt": "1984-01-05T00:00:00Z", "discountedPrice": 40, "expireAt": "1990-11-14T00:00:00Z", "price": 12, "purchaseAt": "1996-01-08T00:00:00Z", "trialPrice": 41}], "bcS0sBvp": [{"currencyCode": "5CzK5ewR", "currencyNamespace": "4cmOJC4p", "currencyType": "REAL", "discountAmount": 12, "discountExpireAt": "1974-02-06T00:00:00Z", "discountPercentage": 38, "discountPurchaseAt": "1974-11-21T00:00:00Z", "discountedPrice": 91, "expireAt": "1973-08-19T00:00:00Z", "price": 36, "purchaseAt": "1998-06-21T00:00:00Z", "trialPrice": 10}, {"currencyCode": "RE7Ch3yb", "currencyNamespace": "Ks6gm90z", "currencyType": "REAL", "discountAmount": 46, "discountExpireAt": "1978-02-24T00:00:00Z", "discountPercentage": 73, "discountPurchaseAt": "1980-09-12T00:00:00Z", "discountedPrice": 56, "expireAt": "1990-01-07T00:00:00Z", "price": 10, "purchaseAt": "1994-01-28T00:00:00Z", "trialPrice": 11}, {"currencyCode": "w8RUmRWQ", "currencyNamespace": "oTbdgwNs", "currencyType": "REAL", "discountAmount": 89, "discountExpireAt": "1972-04-12T00:00:00Z", "discountPercentage": 96, "discountPurchaseAt": "1998-04-12T00:00:00Z", "discountedPrice": 7, "expireAt": "1974-09-14T00:00:00Z", "price": 55, "purchaseAt": "1992-08-17T00:00:00Z", "trialPrice": 31}], "Z9CHJN1E": [{"currencyCode": "8MWbPecw", "currencyNamespace": "0KFHS8GB", "currencyType": "VIRTUAL", "discountAmount": 85, "discountExpireAt": "1971-07-21T00:00:00Z", "discountPercentage": 1, "discountPurchaseAt": "1986-07-25T00:00:00Z", "discountedPrice": 73, "expireAt": "1990-02-08T00:00:00Z", "price": 29, "purchaseAt": "1998-05-12T00:00:00Z", "trialPrice": 23}, {"currencyCode": "kxUA4Xif", "currencyNamespace": "jJtTEqW4", "currencyType": "VIRTUAL", "discountAmount": 73, "discountExpireAt": "1973-03-10T00:00:00Z", "discountPercentage": 96, "discountPurchaseAt": "1976-12-30T00:00:00Z", "discountedPrice": 50, "expireAt": "1996-08-09T00:00:00Z", "price": 54, "purchaseAt": "1990-07-25T00:00:00Z", "trialPrice": 95}, {"currencyCode": "huXtXZlJ", "currencyNamespace": "TuFYhfLk", "currencyType": "REAL", "discountAmount": 1, "discountExpireAt": "1992-07-01T00:00:00Z", "discountPercentage": 49, "discountPurchaseAt": "1989-01-05T00:00:00Z", "discountedPrice": 39, "expireAt": "1993-10-22T00:00:00Z", "price": 79, "purchaseAt": "1976-06-22T00:00:00Z", "trialPrice": 45}]}}, {"itemIdentities": ["zPlvhf3f", "AtrQfYFp", "thHzWHMz"], "itemIdentityType": "ITEM_ID", "regionData": {"5MekfdXf": [{"currencyCode": "15a7Sxcd", "currencyNamespace": "RGVSfWZu", "currencyType": "REAL", "discountAmount": 2, "discountExpireAt": "1990-05-13T00:00:00Z", "discountPercentage": 17, "discountPurchaseAt": "1986-02-09T00:00:00Z", "discountedPrice": 81, "expireAt": "1972-02-14T00:00:00Z", "price": 3, "purchaseAt": "1971-02-24T00:00:00Z", "trialPrice": 10}, {"currencyCode": "GVn18vVk", "currencyNamespace": "LjZzP9rD", "currencyType": "VIRTUAL", "discountAmount": 84, "discountExpireAt": "1985-03-31T00:00:00Z", "discountPercentage": 92, "discountPurchaseAt": "1972-05-26T00:00:00Z", "discountedPrice": 53, "expireAt": "1981-09-05T00:00:00Z", "price": 36, "purchaseAt": "1979-12-16T00:00:00Z", "trialPrice": 19}, {"currencyCode": "ncvXU8RD", "currencyNamespace": "3LiCsshX", "currencyType": "REAL", "discountAmount": 53, "discountExpireAt": "1981-03-26T00:00:00Z", "discountPercentage": 44, "discountPurchaseAt": "1985-05-10T00:00:00Z", "discountedPrice": 8, "expireAt": "1996-10-15T00:00:00Z", "price": 6, "purchaseAt": "1978-02-26T00:00:00Z", "trialPrice": 64}], "Xfq5WDVS": [{"currencyCode": "sTZgQ2Jr", "currencyNamespace": "2uGwSaV0", "currencyType": "VIRTUAL", "discountAmount": 23, "discountExpireAt": "1978-03-12T00:00:00Z", "discountPercentage": 60, "discountPurchaseAt": "1997-10-31T00:00:00Z", "discountedPrice": 14, "expireAt": "1974-12-07T00:00:00Z", "price": 17, "purchaseAt": "1975-07-29T00:00:00Z", "trialPrice": 99}, {"currencyCode": "ji8Yv7uo", "currencyNamespace": "bbR8u1Gf", "currencyType": "VIRTUAL", "discountAmount": 27, "discountExpireAt": "1976-03-16T00:00:00Z", "discountPercentage": 9, "discountPurchaseAt": "1997-08-02T00:00:00Z", "discountedPrice": 50, "expireAt": "1997-07-05T00:00:00Z", "price": 87, "purchaseAt": "1975-07-31T00:00:00Z", "trialPrice": 67}, {"currencyCode": "krJYdes5", "currencyNamespace": "AjXdNE0D", "currencyType": "REAL", "discountAmount": 94, "discountExpireAt": "1984-10-08T00:00:00Z", "discountPercentage": 49, "discountPurchaseAt": "1999-01-19T00:00:00Z", "discountedPrice": 52, "expireAt": "1997-09-28T00:00:00Z", "price": 46, "purchaseAt": "1975-10-17T00:00:00Z", "trialPrice": 80}], "voQ9hCTm": [{"currencyCode": "qsZ5XC22", "currencyNamespace": "zAf7Cf3l", "currencyType": "VIRTUAL", "discountAmount": 85, "discountExpireAt": "1983-03-02T00:00:00Z", "discountPercentage": 49, "discountPurchaseAt": "1976-08-16T00:00:00Z", "discountedPrice": 13, "expireAt": "1992-08-10T00:00:00Z", "price": 98, "purchaseAt": "1983-03-23T00:00:00Z", "trialPrice": 62}, {"currencyCode": "a25YStLB", "currencyNamespace": "0e9dpmUH", "currencyType": "VIRTUAL", "discountAmount": 53, "discountExpireAt": "1995-11-30T00:00:00Z", "discountPercentage": 29, "discountPurchaseAt": "1994-10-27T00:00:00Z", "discountedPrice": 90, "expireAt": "1987-04-13T00:00:00Z", "price": 13, "purchaseAt": "1976-08-07T00:00:00Z", "trialPrice": 67}, {"currencyCode": "fsTVOgPk", "currencyNamespace": "eBdjyPWm", "currencyType": "VIRTUAL", "discountAmount": 49, "discountExpireAt": "1981-07-07T00:00:00Z", "discountPercentage": 27, "discountPurchaseAt": "1971-03-02T00:00:00Z", "discountedPrice": 59, "expireAt": "1974-06-30T00:00:00Z", "price": 46, "purchaseAt": "1991-12-11T00:00:00Z", "trialPrice": 94}]}}, {"itemIdentities": ["aUFfRNcJ", "pHNBKH0v", "Mk6SvGRk"], "itemIdentityType": "ITEM_ID", "regionData": {"YVcdW9vZ": [{"currencyCode": "K5fdzFmg", "currencyNamespace": "dHL9mRaf", "currencyType": "REAL", "discountAmount": 43, "discountExpireAt": "1997-05-22T00:00:00Z", "discountPercentage": 86, "discountPurchaseAt": "1975-02-25T00:00:00Z", "discountedPrice": 38, "expireAt": "1996-01-15T00:00:00Z", "price": 49, "purchaseAt": "1976-06-04T00:00:00Z", "trialPrice": 100}, {"currencyCode": "6gyTqKXv", "currencyNamespace": "JBNNmtjs", "currencyType": "VIRTUAL", "discountAmount": 56, "discountExpireAt": "1981-11-14T00:00:00Z", "discountPercentage": 57, "discountPurchaseAt": "1972-12-15T00:00:00Z", "discountedPrice": 69, "expireAt": "1996-10-05T00:00:00Z", "price": 79, "purchaseAt": "1972-03-09T00:00:00Z", "trialPrice": 57}, {"currencyCode": "y4L7yzM3", "currencyNamespace": "ZLiPMBkD", "currencyType": "VIRTUAL", "discountAmount": 75, "discountExpireAt": "1988-09-21T00:00:00Z", "discountPercentage": 63, "discountPurchaseAt": "1972-03-03T00:00:00Z", "discountedPrice": 12, "expireAt": "1993-05-25T00:00:00Z", "price": 8, "purchaseAt": "1974-01-25T00:00:00Z", "trialPrice": 63}], "y7CbcKXB": [{"currencyCode": "FifsT1GN", "currencyNamespace": "LyA9T0i0", "currencyType": "VIRTUAL", "discountAmount": 47, "discountExpireAt": "1997-12-27T00:00:00Z", "discountPercentage": 17, "discountPurchaseAt": "1988-11-06T00:00:00Z", "discountedPrice": 58, "expireAt": "1986-11-24T00:00:00Z", "price": 38, "purchaseAt": "1987-03-06T00:00:00Z", "trialPrice": 74}, {"currencyCode": "GuCeoIel", "currencyNamespace": "puR4hRGO", "currencyType": "REAL", "discountAmount": 99, "discountExpireAt": "1985-07-01T00:00:00Z", "discountPercentage": 45, "discountPurchaseAt": "1978-12-27T00:00:00Z", "discountedPrice": 45, "expireAt": "1993-06-04T00:00:00Z", "price": 6, "purchaseAt": "1993-02-17T00:00:00Z", "trialPrice": 75}, {"currencyCode": "PBTyyRer", "currencyNamespace": "n8BlRnjL", "currencyType": "VIRTUAL", "discountAmount": 93, "discountExpireAt": "1984-06-02T00:00:00Z", "discountPercentage": 3, "discountPurchaseAt": "1977-05-19T00:00:00Z", "discountedPrice": 93, "expireAt": "1976-09-04T00:00:00Z", "price": 53, "purchaseAt": "1993-05-04T00:00:00Z", "trialPrice": 81}], "EDzRuvhc": [{"currencyCode": "lvqmM2sZ", "currencyNamespace": "8XWPDCxF", "currencyType": "REAL", "discountAmount": 56, "discountExpireAt": "1994-04-01T00:00:00Z", "discountPercentage": 45, "discountPurchaseAt": "1977-10-27T00:00:00Z", "discountedPrice": 19, "expireAt": "1986-02-27T00:00:00Z", "price": 13, "purchaseAt": "1977-03-14T00:00:00Z", "trialPrice": 26}, {"currencyCode": "6lgnZAz8", "currencyNamespace": "oPauqRaD", "currencyType": "REAL", "discountAmount": 63, "discountExpireAt": "1971-12-04T00:00:00Z", "discountPercentage": 17, "discountPurchaseAt": "1993-01-15T00:00:00Z", "discountedPrice": 31, "expireAt": "1996-06-22T00:00:00Z", "price": 22, "purchaseAt": "1993-08-19T00:00:00Z", "trialPrice": 12}, {"currencyCode": "vSKtD9yU", "currencyNamespace": "FNyspeUu", "currencyType": "VIRTUAL", "discountAmount": 11, "discountExpireAt": "1983-12-14T00:00:00Z", "discountPercentage": 76, "discountPurchaseAt": "1977-10-18T00:00:00Z", "discountedPrice": 82, "expireAt": "1976-06-30T00:00:00Z", "price": 37, "purchaseAt": "1997-08-16T00:00:00Z", "trialPrice": 83}]}}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op BulkUpdateRegionData \
    --namespace $AB_NAMESPACE \
    --storeId 'CYaeMz10' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 116 'BulkUpdateRegionData' test.out

#- 117 SearchItems
$CLI_EXE \
    --sn platform \
    --op SearchItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --itemType 'COINS' \
    --limit '76' \
    --offset '72' \
    --sortBy 'YULaOx7v' \
    --storeId 'BQdUAY29' \
    --keyword 'lWme6odH' \
    --language 'tyZYlkIF' \
    > test.out 2>&1
eval_tap $? 117 'SearchItems' test.out

#- 118 QueryUncategorizedItems
$CLI_EXE \
    --sn platform \
    --op QueryUncategorizedItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --limit '36' \
    --offset '25' \
    --sortBy '["updatedAt:desc", "displayOrder:desc", "name:desc"]' \
    --storeId 'oK8fyxS2' \
    > test.out 2>&1
eval_tap $? 118 'QueryUncategorizedItems' test.out

#- 119 GetItem
$CLI_EXE \
    --sn platform \
    --op GetItem \
    --itemId 'M9jGpuQ3' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --storeId 'urvqXUJd' \
    > test.out 2>&1
eval_tap $? 119 'GetItem' test.out

#- 120 UpdateItem
# body param: body
echo '{"appId": "fuuBE2e8", "appType": "SOFTWARE", "baseAppId": "Kh8FWJRF", "boothName": "T4VZ35UC", "categoryPath": "16f75QZd", "clazz": "qoEZrGvg", "displayOrder": 72, "entitlementType": "DURABLE", "ext": {"Sqm2tGWL": {}, "hvbou1rP": {}, "6LpwB5IB": {}}, "features": ["M8OFjBDB", "bvxCeHlX", "zhk7UnsA"], "flexible": false, "images": [{"as": "19sI4QbK", "caption": "SzW8o0YP", "height": 29, "imageUrl": "gkiW40j0", "smallImageUrl": "5waYlRY7", "width": 17}, {"as": "LZyEngPq", "caption": "19Y1ckvL", "height": 24, "imageUrl": "qX9jq4O3", "smallImageUrl": "g13S1uQL", "width": 70}, {"as": "txbbyKCX", "caption": "VXgYoBA2", "height": 41, "imageUrl": "qoqaj0Pc", "smallImageUrl": "pAdQf5Xi", "width": 49}], "inventoryConfig": {"customAttributes": {"isoT8gjb": {}, "FwFEtXN7": {}, "2QURJEEo": {}}, "serverCustomAttributes": {"ghDrJIZ5": {}, "2Sbf6Gur": {}, "Xrq9C6Af": {}}, "slotUsed": 26}, "itemIds": ["xXIItdjT", "5beFLgQc", "0udmwUzq"], "itemQty": {"SBzVO27o": 82, "v8mwUnAZ": 15, "46IcLq33": 82}, "itemType": "EXTENSION", "listable": false, "localizations": {"5ysjYPM0": {"description": "7NImPQ1T", "localExt": {"IUe4OvE6": {}, "QRRNacJP": {}, "LWIseaVN": {}}, "longDescription": "3PBkvUim", "title": "2n8AQXMR"}, "U2Wdv4SO": {"description": "wDOj6u0M", "localExt": {"ZORB3WeN": {}, "3YBUNp5a": {}, "5dAngzRi": {}}, "longDescription": "deB11BB0", "title": "uLCkGMJd"}, "agFo5ULt": {"description": "YOvAarYf", "localExt": {"sdZnz7ZM": {}, "6G5lCfTh": {}, "9aN2St70": {}}, "longDescription": "HeSKj6jx", "title": "xIe2CtdG"}}, "lootBoxConfig": {"rewardCount": 15, "rewards": [{"lootBoxItems": [{"count": 83, "duration": 70, "endDate": "1991-01-22T00:00:00Z", "itemId": "x7lGfgWp", "itemSku": "nHaxAGIZ", "itemType": "d2Xharcs"}, {"count": 31, "duration": 84, "endDate": "1988-04-01T00:00:00Z", "itemId": "Rjot37Bv", "itemSku": "UgwuuPxa", "itemType": "vAkOQaqw"}, {"count": 64, "duration": 69, "endDate": "1991-12-23T00:00:00Z", "itemId": "fOPdScXt", "itemSku": "kXv9XkoD", "itemType": "ZbsnLWMo"}], "name": "wyrVg6ih", "odds": 0.5448725492229695, "type": "PROBABILITY_GROUP", "weight": 86}, {"lootBoxItems": [{"count": 70, "duration": 12, "endDate": "1982-05-14T00:00:00Z", "itemId": "RrmQksop", "itemSku": "a5J8apNd", "itemType": "U6m4Dj5M"}, {"count": 83, "duration": 80, "endDate": "1972-06-02T00:00:00Z", "itemId": "wNo7k6zR", "itemSku": "OMbkpOo5", "itemType": "hLh2cAsy"}, {"count": 53, "duration": 77, "endDate": "1971-12-25T00:00:00Z", "itemId": "Ldflrtil", "itemSku": "IqGMWHnx", "itemType": "OPTZJdC5"}], "name": "vHzg2qUC", "odds": 0.6555472819460312, "type": "PROBABILITY_GROUP", "weight": 66}, {"lootBoxItems": [{"count": 77, "duration": 10, "endDate": "1982-11-14T00:00:00Z", "itemId": "avEu5l57", "itemSku": "OKNPPjNF", "itemType": "hs8Arpsd"}, {"count": 90, "duration": 4, "endDate": "1979-02-20T00:00:00Z", "itemId": "sY19KnjQ", "itemSku": "Nj8sppos", "itemType": "bXhYSE3P"}, {"count": 66, "duration": 64, "endDate": "1987-09-07T00:00:00Z", "itemId": "DsqKpGCJ", "itemSku": "xkOcJ6cl", "itemType": "sRyvBp9D"}], "name": "Ffk9O4zP", "odds": 0.7012497243306586, "type": "PROBABILITY_GROUP", "weight": 3}], "rollFunction": "CUSTOM"}, "maxCount": 30, "maxCountPerUser": 28, "name": "WX0ZiG7c", "optionBoxConfig": {"boxItems": [{"count": 69, "duration": 72, "endDate": "1998-05-12T00:00:00Z", "itemId": "R4Y0JExU", "itemSku": "FpQ6l4jW", "itemType": "Lv6sB3IQ"}, {"count": 93, "duration": 72, "endDate": "1980-02-22T00:00:00Z", "itemId": "Mp5PRNdA", "itemSku": "XMMNZt9E", "itemType": "yMchZRMC"}, {"count": 30, "duration": 59, "endDate": "1975-07-21T00:00:00Z", "itemId": "L5Fj33Vw", "itemSku": "wSGNWGrX", "itemType": "tyiMFDvD"}]}, "purchasable": true, "recurring": {"cycle": "YEARLY", "fixedFreeDays": 13, "fixedTrialCycles": 45, "graceDays": 68}, "regionData": {"aohjWnyb": [{"currencyCode": "kf22eaTc", "currencyNamespace": "xd8cVGkF", "currencyType": "REAL", "discountAmount": 6, "discountExpireAt": "1997-05-11T00:00:00Z", "discountPercentage": 95, "discountPurchaseAt": "1987-03-21T00:00:00Z", "expireAt": "1993-03-28T00:00:00Z", "price": 44, "purchaseAt": "1991-11-01T00:00:00Z", "trialPrice": 71}, {"currencyCode": "8Vs8a4k1", "currencyNamespace": "yEQqQGND", "currencyType": "VIRTUAL", "discountAmount": 71, "discountExpireAt": "1988-12-18T00:00:00Z", "discountPercentage": 10, "discountPurchaseAt": "1995-03-19T00:00:00Z", "expireAt": "1971-11-15T00:00:00Z", "price": 10, "purchaseAt": "1974-12-26T00:00:00Z", "trialPrice": 64}, {"currencyCode": "DuZEMJlS", "currencyNamespace": "vhrCWsIO", "currencyType": "REAL", "discountAmount": 5, "discountExpireAt": "1988-06-10T00:00:00Z", "discountPercentage": 41, "discountPurchaseAt": "1980-04-10T00:00:00Z", "expireAt": "1999-04-01T00:00:00Z", "price": 95, "purchaseAt": "1977-10-14T00:00:00Z", "trialPrice": 8}], "QGoftVvZ": [{"currencyCode": "NYOLIdwM", "currencyNamespace": "WWDspc5e", "currencyType": "VIRTUAL", "discountAmount": 19, "discountExpireAt": "1973-02-27T00:00:00Z", "discountPercentage": 67, "discountPurchaseAt": "1978-04-14T00:00:00Z", "expireAt": "1999-09-19T00:00:00Z", "price": 59, "purchaseAt": "1982-06-06T00:00:00Z", "trialPrice": 1}, {"currencyCode": "Mu1vy2Ue", "currencyNamespace": "gSXWFo3N", "currencyType": "REAL", "discountAmount": 57, "discountExpireAt": "1983-09-27T00:00:00Z", "discountPercentage": 30, "discountPurchaseAt": "1977-07-07T00:00:00Z", "expireAt": "1979-11-04T00:00:00Z", "price": 16, "purchaseAt": "1978-08-02T00:00:00Z", "trialPrice": 56}, {"currencyCode": "aIqNJKKF", "currencyNamespace": "6QyoNTdx", "currencyType": "VIRTUAL", "discountAmount": 49, "discountExpireAt": "1978-09-21T00:00:00Z", "discountPercentage": 18, "discountPurchaseAt": "1983-10-18T00:00:00Z", "expireAt": "1999-05-04T00:00:00Z", "price": 1, "purchaseAt": "1980-02-14T00:00:00Z", "trialPrice": 75}], "I2vB1HzV": [{"currencyCode": "JD4oMweH", "currencyNamespace": "TvWUcXx3", "currencyType": "REAL", "discountAmount": 62, "discountExpireAt": "1981-03-03T00:00:00Z", "discountPercentage": 86, "discountPurchaseAt": "1973-10-03T00:00:00Z", "expireAt": "1999-07-01T00:00:00Z", "price": 84, "purchaseAt": "1981-11-23T00:00:00Z", "trialPrice": 76}, {"currencyCode": "kMEepDkQ", "currencyNamespace": "zrBivXZm", "currencyType": "REAL", "discountAmount": 97, "discountExpireAt": "1974-10-09T00:00:00Z", "discountPercentage": 18, "discountPurchaseAt": "1996-03-09T00:00:00Z", "expireAt": "1998-07-15T00:00:00Z", "price": 45, "purchaseAt": "1979-08-30T00:00:00Z", "trialPrice": 58}, {"currencyCode": "KM8yajrq", "currencyNamespace": "p481j8w7", "currencyType": "VIRTUAL", "discountAmount": 32, "discountExpireAt": "1985-09-08T00:00:00Z", "discountPercentage": 7, "discountPurchaseAt": "1991-05-16T00:00:00Z", "expireAt": "1985-05-04T00:00:00Z", "price": 11, "purchaseAt": "1976-01-29T00:00:00Z", "trialPrice": 92}]}, "saleConfig": {"currencyCode": "2lTgJVNX", "price": 64}, "seasonType": "TIER", "sectionExclusive": false, "sellable": false, "sku": "3CKTB7Wk", "stackable": true, "status": "INACTIVE", "tags": ["xGFYBHB3", "P9CubKoE", "HgR1Qzku"], "targetCurrencyCode": "PiGmhwD4", "targetNamespace": "iO5UW7Tt", "thumbnailUrl": "qSCiBR8y", "useCount": 23}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateItem \
    --itemId 'tDJxFrSG' \
    --namespace $AB_NAMESPACE \
    --storeId 'Zh0fR3YV' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 120 'UpdateItem' test.out

#- 121 DeleteItem
$CLI_EXE \
    --sn platform \
    --op DeleteItem \
    --itemId 'Ob1hNqSY' \
    --namespace $AB_NAMESPACE \
    --force 'false' \
    --storeId 'G9mbIyti' \
    > test.out 2>&1
eval_tap $? 121 'DeleteItem' test.out

#- 122 AcquireItem
# body param: body
echo '{"count": 48, "orderNo": "MSYuYHKw"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op AcquireItem \
    --itemId 'hnFWhTcf' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 122 'AcquireItem' test.out

#- 123 GetApp
$CLI_EXE \
    --sn platform \
    --op GetApp \
    --itemId 'fmQtaim0' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --storeId '1BeCOMwr' \
    > test.out 2>&1
eval_tap $? 123 'GetApp' test.out

#- 124 UpdateApp
# body param: body
echo '{"carousel": [{"alt": "8rlihYDg", "previewUrl": "py1wZcLZ", "thumbnailUrl": "tsyNO32S", "type": "video", "url": "gUNow7Q1", "videoSource": "generic"}, {"alt": "9BNN78nh", "previewUrl": "GCCIfaG5", "thumbnailUrl": "xL5Omw09", "type": "video", "url": "uO1uMeEP", "videoSource": "generic"}, {"alt": "O6BXNqu2", "previewUrl": "rlZDmvWw", "thumbnailUrl": "mAAvKw6Y", "type": "image", "url": "wsVRAuIb", "videoSource": "generic"}], "developer": "P4zXL4NS", "forumUrl": "W8JZgXCG", "genres": ["Racing", "Strategy", "Sports"], "localizations": {"p8B8ekn4": {"announcement": "bAnQdmgN", "slogan": "7MuT9iTe"}, "xaxFwFqq": {"announcement": "xc5MvGV6", "slogan": "6kjmV73P"}, "bs82b2Uz": {"announcement": "tuwRyunW", "slogan": "uuWgKfqR"}}, "platformRequirements": {"5icJ0k6i": [{"additionals": "0ZaiY0c7", "directXVersion": "2eaftOgG", "diskSpace": "9QRRPnK8", "graphics": "CwmXjgRh", "label": "zwJZRB9i", "osVersion": "yVE23Ymj", "processor": "41XhwkBI", "ram": "tq4QIIJL", "soundCard": "dxers2Ea"}, {"additionals": "1bfEotBM", "directXVersion": "4PC371oN", "diskSpace": "S9mGB6Hv", "graphics": "qSX3q7d0", "label": "H1C2dVTE", "osVersion": "sBgWfg34", "processor": "IhtALQqQ", "ram": "shUD4cpR", "soundCard": "IXWlfVxY"}, {"additionals": "AVuOB50l", "directXVersion": "7D5OhrMF", "diskSpace": "Lq9ghfNb", "graphics": "bcs20Rc0", "label": "4O2vb7lo", "osVersion": "tFML2aZ6", "processor": "huK4Gz0L", "ram": "rpPFH2AE", "soundCard": "oWmRtURp"}], "JMcgcTuS": [{"additionals": "fuAwY278", "directXVersion": "oVNz1AdO", "diskSpace": "CT1AvLti", "graphics": "QDIGd4s8", "label": "aqa1HyYM", "osVersion": "AbhrJFSE", "processor": "xWQlhPYg", "ram": "LVWaoXjv", "soundCard": "JMxGKQkN"}, {"additionals": "gIW1hdha", "directXVersion": "i5ZdtzrN", "diskSpace": "mKxIqVCd", "graphics": "t4YfV5yX", "label": "a7qInyCn", "osVersion": "W2wEbTt0", "processor": "IUvnDPHD", "ram": "EJ8bxsQm", "soundCard": "m9kTcROL"}, {"additionals": "L02XT0ay", "directXVersion": "lIkeNXda", "diskSpace": "hqbcfPjB", "graphics": "TIZDLIYe", "label": "paOIqdCd", "osVersion": "sGg2sOzb", "processor": "27PQTcZb", "ram": "RnemlGjX", "soundCard": "4LUnDLgB"}], "WG297miO": [{"additionals": "gcg5XlIr", "directXVersion": "omXsPzf5", "diskSpace": "GtILaC5P", "graphics": "J6SjT8kr", "label": "unAnq6DJ", "osVersion": "twuDEJFT", "processor": "QReTVnR5", "ram": "ZgKdt6NY", "soundCard": "JKj8xJxa"}, {"additionals": "HBELYZE2", "directXVersion": "yXVPWgvY", "diskSpace": "CBwb0QWM", "graphics": "Z4aESSuY", "label": "rHjyi2Tc", "osVersion": "GW3JNwxq", "processor": "Gub3Lnzf", "ram": "AC3x5xwS", "soundCard": "0Jn2rtVb"}, {"additionals": "Sei5hAOK", "directXVersion": "0JBBPibB", "diskSpace": "VKrylohO", "graphics": "4Kz6flT3", "label": "ur4BZ3JF", "osVersion": "v2P04Xkn", "processor": "55wnmXLd", "ram": "bA4XdTsG", "soundCard": "BgBcWDd6"}]}, "platforms": ["MacOS", "Windows", "Windows"], "players": ["LocalCoop", "Single", "Coop"], "primaryGenre": "Racing", "publisher": "T7l5e4kW", "releaseDate": "1988-06-19T00:00:00Z", "websiteUrl": "ivK5Q5ed"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateApp \
    --itemId 'V8xglLRy' \
    --namespace $AB_NAMESPACE \
    --storeId 'ggcdlHhA' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 124 'UpdateApp' test.out

#- 125 DisableItem
$CLI_EXE \
    --sn platform \
    --op DisableItem \
    --itemId '20oD8Tai' \
    --namespace $AB_NAMESPACE \
    --storeId 'fhC8hGu3' \
    > test.out 2>&1
eval_tap $? 125 'DisableItem' test.out

#- 126 GetItemDynamicData
$CLI_EXE \
    --sn platform \
    --op GetItemDynamicData \
    --itemId 'BtvcOjN6' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 126 'GetItemDynamicData' test.out

#- 127 EnableItem
$CLI_EXE \
    --sn platform \
    --op EnableItem \
    --itemId 'c8yod0Wa' \
    --namespace $AB_NAMESPACE \
    --storeId '6FAeeaEm' \
    > test.out 2>&1
eval_tap $? 127 'EnableItem' test.out

#- 128 FeatureItem
$CLI_EXE \
    --sn platform \
    --op FeatureItem \
    --feature 'ueh6d1pB' \
    --itemId 'p4h7x90i' \
    --namespace $AB_NAMESPACE \
    --storeId 'QB3FgwRs' \
    > test.out 2>&1
eval_tap $? 128 'FeatureItem' test.out

#- 129 DefeatureItem
$CLI_EXE \
    --sn platform \
    --op DefeatureItem \
    --feature 'dHBbY7tA' \
    --itemId 'n9jINhNv' \
    --namespace $AB_NAMESPACE \
    --storeId 'kBJPW9sq' \
    > test.out 2>&1
eval_tap $? 129 'DefeatureItem' test.out

#- 130 GetLocaleItem
$CLI_EXE \
    --sn platform \
    --op GetLocaleItem \
    --itemId '37FxbEYF' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --language 'NLU9QVZa' \
    --populateBundle 'true' \
    --region 'qPzK9m0Y' \
    --storeId 'SSr8Xivh' \
    > test.out 2>&1
eval_tap $? 130 'GetLocaleItem' test.out

#- 131 UpdateItemPurchaseCondition
# body param: body
echo '{"purchaseCondition": {"conditionGroups": [{"operator": "or", "predicates": [{"anyOf": 12, "comparison": "isNot", "name": "TMOQyS4r", "predicateType": "SeasonPassPredicate", "value": "uMedRKfk", "values": ["mAkXEBLA", "dmjCubQp", "Pl6yW4zZ"]}, {"anyOf": 72, "comparison": "includes", "name": "zmo7qRXU", "predicateType": "EntitlementPredicate", "value": "Y0qLrPZh", "values": ["rlC1gcPU", "1O5UL1bH", "oxphC2bV"]}, {"anyOf": 73, "comparison": "isLessThan", "name": "cxamMClL", "predicateType": "SeasonTierPredicate", "value": "t9UKNQdH", "values": ["BOrKvWt5", "slkYsLqC", "XJAzakma"]}]}, {"operator": "and", "predicates": [{"anyOf": 64, "comparison": "isGreaterThanOrEqual", "name": "Xfi4mHeA", "predicateType": "SeasonTierPredicate", "value": "8gbozjMY", "values": ["RLWiA4OK", "V0DzWpAI", "fu2cx4vq"]}, {"anyOf": 85, "comparison": "excludes", "name": "Ey4OLa0F", "predicateType": "EntitlementPredicate", "value": "BycfkWQw", "values": ["QwgRckS3", "qwcrY8ZC", "DR81EgFr"]}, {"anyOf": 45, "comparison": "isGreaterThan", "name": "FQGIUKN0", "predicateType": "EntitlementPredicate", "value": "L8uOQeCx", "values": ["IvjrXRqE", "LkKN8XW0", "lb0vyPH8"]}]}, {"operator": "and", "predicates": [{"anyOf": 7, "comparison": "isNot", "name": "3xyxbxdt", "predicateType": "SeasonPassPredicate", "value": "HS9nGC16", "values": ["j6haHJKQ", "TtYizHrA", "EXkrpMbw"]}, {"anyOf": 83, "comparison": "excludes", "name": "WAg9Ff2B", "predicateType": "EntitlementPredicate", "value": "vldUm0pj", "values": ["l8VQZ4DZ", "Qm1oX6cG", "w978gVPL"]}, {"anyOf": 22, "comparison": "isLessThanOrEqual", "name": "fR6vxQRe", "predicateType": "SeasonPassPredicate", "value": "JY4cU8l2", "values": ["tDAOQTNQ", "PKijZKhD", "4whxt6jZ"]}]}]}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateItemPurchaseCondition \
    --itemId 'TKMxiAk5' \
    --namespace $AB_NAMESPACE \
    --storeId 'D6eKtvLO' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 131 'UpdateItemPurchaseCondition' test.out

#- 132 ReturnItem
# body param: body
echo '{"orderNo": "Kln4Wx43"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ReturnItem \
    --itemId 'qDgaBsKQ' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 132 'ReturnItem' test.out

#- 133 QueryKeyGroups
$CLI_EXE \
    --sn platform \
    --op QueryKeyGroups \
    --namespace $AB_NAMESPACE \
    --limit '95' \
    --name 'uBuvgxRv' \
    --offset '22' \
    --tag 'kDUzrbJa' \
    > test.out 2>&1
eval_tap $? 133 'QueryKeyGroups' test.out

#- 134 CreateKeyGroup
# body param: body
echo '{"description": "Bqnz6PXz", "name": "6lSd3AF8", "status": "INACTIVE", "tags": ["8r8B7z8D", "QgF3ILfB", "tlwJrunC"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateKeyGroup \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 134 'CreateKeyGroup' test.out

#- 135 GetKeyGroupByBoothName
eval_tap 0 135 'GetKeyGroupByBoothName # SKIP deprecated' test.out

#- 136 GetKeyGroup
$CLI_EXE \
    --sn platform \
    --op GetKeyGroup \
    --keyGroupId 'KP7NY7uj' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 136 'GetKeyGroup' test.out

#- 137 UpdateKeyGroup
# body param: body
echo '{"description": "wRhM1cM4", "name": "fHoZadRz", "status": "ACTIVE", "tags": ["wtnpR56j", "ai19z3Sh", "3Ck5KGCw"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateKeyGroup \
    --keyGroupId 'FmoMBNR1' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 137 'UpdateKeyGroup' test.out

#- 138 GetKeyGroupDynamic
$CLI_EXE \
    --sn platform \
    --op GetKeyGroupDynamic \
    --keyGroupId 'q2HUs3n2' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 138 'GetKeyGroupDynamic' test.out

#- 139 ListKeys
$CLI_EXE \
    --sn platform \
    --op ListKeys \
    --keyGroupId '1smgIn9l' \
    --namespace $AB_NAMESPACE \
    --limit '83' \
    --offset '95' \
    --status 'ACTIVE' \
    > test.out 2>&1
eval_tap $? 139 'ListKeys' test.out

#- 140 UploadKeys
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UploadKeys \
    --keyGroupId 'lXU9SkkY' \
    --namespace $AB_NAMESPACE \
    --upload file $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 140 'UploadKeys' test.out

#- 141 QueryOrders
$CLI_EXE \
    --sn platform \
    --op QueryOrders \
    --namespace $AB_NAMESPACE \
    --endTime 'fMmZ0xjx' \
    --limit '56' \
    --offset '97' \
    --orderNos '["9uDAetmt", "BBQ9AMTx", "5b8xtiJL"]' \
    --sortBy 'EzSu8kP7' \
    --startTime 'EeH01qmb' \
    --status 'REFUNDING' \
    --withTotal 'false' \
    > test.out 2>&1
eval_tap $? 141 'QueryOrders' test.out

#- 142 GetOrderStatistics
$CLI_EXE \
    --sn platform \
    --op GetOrderStatistics \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 142 'GetOrderStatistics' test.out

#- 143 GetOrder
$CLI_EXE \
    --sn platform \
    --op GetOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'fPqZPwC4' \
    > test.out 2>&1
eval_tap $? 143 'GetOrder' test.out

#- 144 RefundOrder
# body param: body
echo '{"description": "RsnkCF7Z"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RefundOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'SSVNPd7p' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 144 'RefundOrder' test.out

#- 145 GetPaymentCallbackConfig
$CLI_EXE \
    --sn platform \
    --op GetPaymentCallbackConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 145 'GetPaymentCallbackConfig' test.out

#- 146 UpdatePaymentCallbackConfig
# body param: body
echo '{"dryRun": true, "notifyUrl": "xqfHcoX1", "privateKey": "p97QSima"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePaymentCallbackConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 146 'UpdatePaymentCallbackConfig' test.out

#- 147 QueryPaymentNotifications
$CLI_EXE \
    --sn platform \
    --op QueryPaymentNotifications \
    --namespace $AB_NAMESPACE \
    --endDate 'CIKdTzt2' \
    --externalId 'Y3C4cVrV' \
    --limit '10' \
    --notificationSource 'XSOLLA' \
    --notificationType 'JtxI5Iei' \
    --offset '40' \
    --paymentOrderNo 'G4007bl2' \
    --startDate 'PQP4z7XW' \
    --status 'WARN' \
    > test.out 2>&1
eval_tap $? 147 'QueryPaymentNotifications' test.out

#- 148 QueryPaymentOrders
$CLI_EXE \
    --sn platform \
    --op QueryPaymentOrders \
    --namespace $AB_NAMESPACE \
    --channel 'INTERNAL' \
    --extTxId 'hD8zLBVn' \
    --limit '60' \
    --offset '91' \
    --status 'REFUNDING' \
    > test.out 2>&1
eval_tap $? 148 'QueryPaymentOrders' test.out

#- 149 CreatePaymentOrderByDedicated
# body param: body
echo '{"currencyCode": "5WFxGBMe", "currencyNamespace": "hVHwiXVJ", "customParameters": {"an0oAaQg": {}, "JpjaSMlX": {}, "lM5NXcNw": {}}, "description": "Rb20KoUR", "extOrderNo": "2ts5spHK", "extUserId": "KeYvDni6", "itemType": "INGAMEITEM", "language": "LzH-XWbj", "metadata": {"F1wh8xNH": "06GlsdN7", "pErM0CKM": "YGlp53UP", "S40xGO9J": "m8EnPlbq"}, "notifyUrl": "ovWwWO3B", "omitNotification": false, "platform": "A3wHsi91", "price": 16, "recurringPaymentOrderNo": "sY4fUsld", "region": "Kq3FGmAb", "returnUrl": "zGxhD3NW", "sandbox": true, "sku": "R6oD2ibN", "subscriptionId": "KehKAYLS", "targetNamespace": "t62Q8YIu", "targetUserId": "mtRWm6bF", "title": "b6CxeFOE"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreatePaymentOrderByDedicated \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 149 'CreatePaymentOrderByDedicated' test.out

#- 150 ListExtOrderNoByExtTxId
$CLI_EXE \
    --sn platform \
    --op ListExtOrderNoByExtTxId \
    --namespace $AB_NAMESPACE \
    --extTxId 'mms1UPoD' \
    > test.out 2>&1
eval_tap $? 150 'ListExtOrderNoByExtTxId' test.out

#- 151 GetPaymentOrder
$CLI_EXE \
    --sn platform \
    --op GetPaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'qrckVZYy' \
    > test.out 2>&1
eval_tap $? 151 'GetPaymentOrder' test.out

#- 152 ChargePaymentOrder
# body param: body
echo '{"extTxId": "20Wlk4Fp", "paymentMethod": "AMocBRzw", "paymentProvider": "WXPAY"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ChargePaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'DH9kMBuP' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 152 'ChargePaymentOrder' test.out

#- 153 RefundPaymentOrderByDedicated
# body param: body
echo '{"description": "hlhcF1LY"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RefundPaymentOrderByDedicated \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'PTYZyeTG' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 153 'RefundPaymentOrderByDedicated' test.out

#- 154 SimulatePaymentOrderNotification
# body param: body
echo '{"amount": 7, "currencyCode": "YA0su81E", "notifyType": "CHARGE", "paymentProvider": "STRIPE", "salesTax": 45, "vat": 34}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SimulatePaymentOrderNotification \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'xeIrCfQe' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 154 'SimulatePaymentOrderNotification' test.out

#- 155 GetPaymentOrderChargeStatus
$CLI_EXE \
    --sn platform \
    --op GetPaymentOrderChargeStatus \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'TMmjk6kd' \
    > test.out 2>&1
eval_tap $? 155 'GetPaymentOrderChargeStatus' test.out

#- 156 GetPlatformEntitlementConfig
$CLI_EXE \
    --sn platform \
    --op GetPlatformEntitlementConfig \
    --namespace $AB_NAMESPACE \
    --platform 'Steam' \
    > test.out 2>&1
eval_tap $? 156 'GetPlatformEntitlementConfig' test.out

#- 157 UpdatePlatformEntitlementConfig
# body param: body
echo '{"allowedPlatformOrigins": ["GooglePlay", "Xbox", "Nintendo"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePlatformEntitlementConfig \
    --namespace $AB_NAMESPACE \
    --platform 'Steam' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 157 'UpdatePlatformEntitlementConfig' test.out

#- 158 GetPlatformWalletConfig
$CLI_EXE \
    --sn platform \
    --op GetPlatformWalletConfig \
    --namespace $AB_NAMESPACE \
    --platform 'Oculus' \
    > test.out 2>&1
eval_tap $? 158 'GetPlatformWalletConfig' test.out

#- 159 UpdatePlatformWalletConfig
# body param: body
echo '{"allowedBalanceOrigins": ["Epic", "Steam", "Steam"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePlatformWalletConfig \
    --namespace $AB_NAMESPACE \
    --platform 'Xbox' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 159 'UpdatePlatformWalletConfig' test.out

#- 160 ResetPlatformWalletConfig
$CLI_EXE \
    --sn platform \
    --op ResetPlatformWalletConfig \
    --namespace $AB_NAMESPACE \
    --platform 'IOS' \
    > test.out 2>&1
eval_tap $? 160 'ResetPlatformWalletConfig' test.out

#- 161 GetRevocationConfig
$CLI_EXE \
    --sn platform \
    --op GetRevocationConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 161 'GetRevocationConfig' test.out

#- 162 UpdateRevocationConfig
# body param: body
echo '{"entitlement": {"consumable": {"enabled": true, "strategy": "CUSTOM"}, "durable": {"enabled": false, "strategy": "REVOKE_OR_REPORT"}}, "wallet": {"enabled": true, "strategy": "ALWAYS_REVOKE"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateRevocationConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 162 'UpdateRevocationConfig' test.out

#- 163 DeleteRevocationConfig
$CLI_EXE \
    --sn platform \
    --op DeleteRevocationConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 163 'DeleteRevocationConfig' test.out

#- 164 QueryRevocationHistories
$CLI_EXE \
    --sn platform \
    --op QueryRevocationHistories \
    --namespace $AB_NAMESPACE \
    --endTime 'klaKvw5P' \
    --limit '66' \
    --offset '72' \
    --source 'DLC' \
    --startTime 'MFmMLZEg' \
    --status 'FAIL' \
    --transactionId 'AKSLGIHj' \
    --userId 'BFMj6pMx' \
    > test.out 2>&1
eval_tap $? 164 'QueryRevocationHistories' test.out

#- 165 GetRevocationPluginConfig
$CLI_EXE \
    --sn platform \
    --op GetRevocationPluginConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 165 'GetRevocationPluginConfig' test.out

#- 166 UpdateRevocationPluginConfig
# body param: body
echo '{"appConfig": {"appName": "z3Ttk5oL"}, "customConfig": {"connectionType": "INSECURE", "grpcServerAddress": "b94UAZrk"}, "extendType": "CUSTOM"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateRevocationPluginConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 166 'UpdateRevocationPluginConfig' test.out

#- 167 DeleteRevocationPluginConfig
$CLI_EXE \
    --sn platform \
    --op DeleteRevocationPluginConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 167 'DeleteRevocationPluginConfig' test.out

#- 168 UploadRevocationPluginConfigCert
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UploadRevocationPluginConfigCert \
    --namespace $AB_NAMESPACE \
    --upload file $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 168 'UploadRevocationPluginConfigCert' test.out

#- 169 CreateReward
# body param: body
echo '{"description": "10L7D0vQ", "eventTopic": "4ZNQzDYe", "maxAwarded": 10, "maxAwardedPerUser": 19, "namespaceExpression": "YV5MNrBE", "rewardCode": "KfKbytSK", "rewardConditions": [{"condition": "F0lUb5we", "conditionName": "Io37RjRZ", "eventName": "XaooveBv", "rewardItems": [{"duration": 80, "endDate": "1999-06-25T00:00:00Z", "identityType": "ITEM_ID", "itemId": "SYEiRiXD", "quantity": 17, "sku": "HRcsAPuo"}, {"duration": 89, "endDate": "1973-07-15T00:00:00Z", "identityType": "ITEM_ID", "itemId": "sfDXWSm2", "quantity": 52, "sku": "WgxqzTS4"}, {"duration": 72, "endDate": "1982-02-06T00:00:00Z", "identityType": "ITEM_ID", "itemId": "kFn7nX5M", "quantity": 98, "sku": "gsuHVlYK"}]}, {"condition": "PwRAsVr8", "conditionName": "KiyUJVwU", "eventName": "srtTzb1O", "rewardItems": [{"duration": 89, "endDate": "1996-03-20T00:00:00Z", "identityType": "ITEM_SKU", "itemId": "h1Bps0Ah", "quantity": 63, "sku": "U23RgUvD"}, {"duration": 36, "endDate": "1977-08-15T00:00:00Z", "identityType": "ITEM_ID", "itemId": "Hx3ncr9H", "quantity": 80, "sku": "M65rPT4o"}, {"duration": 11, "endDate": "1980-04-25T00:00:00Z", "identityType": "ITEM_ID", "itemId": "1Qq6gXhW", "quantity": 32, "sku": "408x6uGs"}]}, {"condition": "7k2SJfau", "conditionName": "EfAQrCjQ", "eventName": "l18o8wNA", "rewardItems": [{"duration": 29, "endDate": "1996-06-26T00:00:00Z", "identityType": "ITEM_ID", "itemId": "QwmViGGz", "quantity": 27, "sku": "JMghV3Nq"}, {"duration": 16, "endDate": "1981-01-30T00:00:00Z", "identityType": "ITEM_SKU", "itemId": "6REhfSvZ", "quantity": 92, "sku": "bY2BVL11"}, {"duration": 39, "endDate": "1974-07-13T00:00:00Z", "identityType": "ITEM_SKU", "itemId": "ADCqGAV7", "quantity": 67, "sku": "hw4cviOa"}]}], "userIdExpression": "DsBkydcP"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateReward \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 169 'CreateReward' test.out

#- 170 QueryRewards
$CLI_EXE \
    --sn platform \
    --op QueryRewards \
    --namespace $AB_NAMESPACE \
    --eventTopic 'BODsD4wv' \
    --limit '6' \
    --offset '99' \
    --sortBy '["rewardCode", "rewardCode:asc"]' \
    > test.out 2>&1
eval_tap $? 170 'QueryRewards' test.out

#- 171 ExportRewards
$CLI_EXE \
    --sn platform \
    --op ExportRewards \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 171 'ExportRewards' test.out

#- 172 ImportRewards
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op ImportRewards \
    --namespace $AB_NAMESPACE \
    --replaceExisting 'true' \
    --upload file $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 172 'ImportRewards' test.out

#- 173 GetReward
$CLI_EXE \
    --sn platform \
    --op GetReward \
    --namespace $AB_NAMESPACE \
    --rewardId 'buLAqzj7' \
    > test.out 2>&1
eval_tap $? 173 'GetReward' test.out

#- 174 UpdateReward
# body param: body
echo '{"description": "Py4kgDvj", "eventTopic": "pQKNkBqh", "maxAwarded": 30, "maxAwardedPerUser": 21, "namespaceExpression": "yEtZvXtC", "rewardCode": "USTpcmpR", "rewardConditions": [{"condition": "pCQt5Z9W", "conditionName": "YP5wJcwT", "eventName": "qhhR7sEM", "rewardItems": [{"duration": 39, "endDate": "1983-11-15T00:00:00Z", "identityType": "ITEM_SKU", "itemId": "ohLVOwhY", "quantity": 6, "sku": "Q67oRcaJ"}, {"duration": 60, "endDate": "1994-05-12T00:00:00Z", "identityType": "ITEM_ID", "itemId": "LULRQJXj", "quantity": 95, "sku": "e3L6EP54"}, {"duration": 19, "endDate": "1977-12-27T00:00:00Z", "identityType": "ITEM_ID", "itemId": "r6xF0L21", "quantity": 7, "sku": "JFJLtDSF"}]}, {"condition": "Wxw4YUwg", "conditionName": "bCk6FuW9", "eventName": "HXrBGdQf", "rewardItems": [{"duration": 66, "endDate": "1979-03-16T00:00:00Z", "identityType": "ITEM_SKU", "itemId": "wq4xvUTH", "quantity": 75, "sku": "LKYAmZRI"}, {"duration": 29, "endDate": "1992-07-28T00:00:00Z", "identityType": "ITEM_SKU", "itemId": "zEZppybD", "quantity": 83, "sku": "lBO3EjHx"}, {"duration": 38, "endDate": "1981-11-04T00:00:00Z", "identityType": "ITEM_ID", "itemId": "GDGzdc3H", "quantity": 51, "sku": "cUxRf1YK"}]}, {"condition": "uBSEF5B2", "conditionName": "ZjVC8pZb", "eventName": "foqevbqC", "rewardItems": [{"duration": 69, "endDate": "1978-12-26T00:00:00Z", "identityType": "ITEM_SKU", "itemId": "ySZ46eK3", "quantity": 90, "sku": "6fWtSLdV"}, {"duration": 46, "endDate": "1991-02-21T00:00:00Z", "identityType": "ITEM_SKU", "itemId": "GhFWG2E2", "quantity": 66, "sku": "wuW9RAXh"}, {"duration": 36, "endDate": "1977-03-03T00:00:00Z", "identityType": "ITEM_ID", "itemId": "4d8uOE4l", "quantity": 58, "sku": "QAV7bzMJ"}]}], "userIdExpression": "x0firKp8"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateReward \
    --namespace $AB_NAMESPACE \
    --rewardId 'c76sUoSp' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 174 'UpdateReward' test.out

#- 175 DeleteReward
$CLI_EXE \
    --sn platform \
    --op DeleteReward \
    --namespace $AB_NAMESPACE \
    --rewardId 'rRreHi91' \
    > test.out 2>&1
eval_tap $? 175 'DeleteReward' test.out

#- 176 CheckEventCondition
# body param: body
echo '{"payload": {"rGxFycLt": {}, "u5WV8dVe": {}, "LoBLDR5m": {}}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CheckEventCondition \
    --namespace $AB_NAMESPACE \
    --rewardId 'rDmBqgjd' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 176 'CheckEventCondition' test.out

#- 177 DeleteRewardConditionRecord
# body param: body
echo '{"conditionName": "pU8530BX", "userId": "DE20EnRm"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op DeleteRewardConditionRecord \
    --namespace $AB_NAMESPACE \
    --rewardId 'cGN1HRpL' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 177 'DeleteRewardConditionRecord' test.out

#- 178 QuerySections
$CLI_EXE \
    --sn platform \
    --op QuerySections \
    --namespace $AB_NAMESPACE \
    --end 'r2gPPjtM' \
    --limit '84' \
    --offset '68' \
    --start 'psf4KSDI' \
    --storeId 'lNGactic' \
    --viewId 'DwfJS3J0' \
    > test.out 2>&1
eval_tap $? 178 'QuerySections' test.out

#- 179 CreateSection
# body param: body
echo '{"active": true, "displayOrder": 3, "endDate": "1971-01-14T00:00:00Z", "ext": {"hQFNY0Bk": {}, "DEqCiWlC": {}, "oNkiCo6j": {}}, "fixedPeriodRotationConfig": {"backfillType": "CUSTOM", "duration": 94, "itemCount": 76, "rule": "SEQUENCE"}, "items": [{"id": "aeealLjx", "sku": "G34cOolW"}, {"id": "NtaAwvus", "sku": "JeeME9WK"}, {"id": "8P21KJqW", "sku": "UTBIwGA6"}], "localizations": {"RGm2dM8X": {"description": "KrehOpKT", "localExt": {"59NIc4JO": {}, "mE0XfWLu": {}, "nO8tBJgI": {}}, "longDescription": "I56cBX3f", "title": "gQHrifMb"}, "Uhh0GmR6": {"description": "oFnEWeMh", "localExt": {"rN6qZWJr": {}, "ozBsf6hC": {}, "6nmrTqfk": {}}, "longDescription": "oRwY7pUm", "title": "AwOLfUty"}, "dcEPofUR": {"description": "aGgOol41", "localExt": {"wtez0LfQ": {}, "ReLJoEQ7": {}, "DVWlJdMD": {}}, "longDescription": "ej8HaQA9", "title": "hPYu41On"}}, "name": "dUpJo45q", "rotationType": "NONE", "startDate": "1992-04-30T00:00:00Z", "viewId": "rlffMX5u"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateSection \
    --namespace $AB_NAMESPACE \
    --storeId 'kFOOB210' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 179 'CreateSection' test.out

#- 180 PurgeExpiredSection
$CLI_EXE \
    --sn platform \
    --op PurgeExpiredSection \
    --namespace $AB_NAMESPACE \
    --storeId '1SDM279K' \
    > test.out 2>&1
eval_tap $? 180 'PurgeExpiredSection' test.out

#- 181 GetSection
$CLI_EXE \
    --sn platform \
    --op GetSection \
    --namespace $AB_NAMESPACE \
    --sectionId '9F5zVZHw' \
    --storeId '9Gba93rl' \
    > test.out 2>&1
eval_tap $? 181 'GetSection' test.out

#- 182 UpdateSection
# body param: body
echo '{"active": false, "displayOrder": 99, "endDate": "1981-01-26T00:00:00Z", "ext": {"LW15WRru": {}, "qq61HNu2": {}, "kRH5wtKA": {}}, "fixedPeriodRotationConfig": {"backfillType": "CUSTOM", "duration": 53, "itemCount": 13, "rule": "SEQUENCE"}, "items": [{"id": "OJCXe1Rh", "sku": "4XeTsjOm"}, {"id": "9ico6Gac", "sku": "vtQNOoq0"}, {"id": "FcjkmLvU", "sku": "KYTeITjb"}], "localizations": {"CE6NMRsG": {"description": "vuRFo0ep", "localExt": {"1oXLQyGG": {}, "nd8lrew9": {}, "Bq66B5Ki": {}}, "longDescription": "6sy2hFbH", "title": "2KQNxPcc"}, "khcTAKkv": {"description": "4WqddNrp", "localExt": {"ylsCMAmx": {}, "F2nMU1Dj": {}, "ZxSKSixv": {}}, "longDescription": "Mup6Iylt", "title": "mejC2G45"}, "KJ3EBb3L": {"description": "KyKmSKOy", "localExt": {"nJ8Fp5e1": {}, "HL24Sq01": {}, "ZyZJNX1o": {}}, "longDescription": "4SxAWMCD", "title": "bBFfxjJF"}}, "name": "2latWqEA", "rotationType": "NONE", "startDate": "1998-01-06T00:00:00Z", "viewId": "BSOiZKe6"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateSection \
    --namespace $AB_NAMESPACE \
    --sectionId 'xVWcmvPU' \
    --storeId 'mdPaQohE' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 182 'UpdateSection' test.out

#- 183 DeleteSection
$CLI_EXE \
    --sn platform \
    --op DeleteSection \
    --namespace $AB_NAMESPACE \
    --sectionId 'XSfsnQgI' \
    --storeId 'SwDNg8IC' \
    > test.out 2>&1
eval_tap $? 183 'DeleteSection' test.out

#- 184 ListStores
$CLI_EXE \
    --sn platform \
    --op ListStores \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 184 'ListStores' test.out

#- 185 CreateStore
# body param: body
echo '{"defaultLanguage": "k0qfuJPj", "defaultRegion": "eKumsiNO", "description": "JafyGkbK", "supportedLanguages": ["244ApfQU", "7TWskUu8", "dwD5G0DL"], "supportedRegions": ["ObAy8PrD", "z4vXCHSr", "og8xpfAP"], "title": "IQa3PkLM"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateStore \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 185 'CreateStore' test.out

#- 186 GetCatalogDefinition
$CLI_EXE \
    --sn platform \
    --op GetCatalogDefinition \
    --namespace $AB_NAMESPACE \
    --catalogType 'ITEM' \
    > test.out 2>&1
eval_tap $? 186 'GetCatalogDefinition' test.out

#- 187 DownloadCSVTemplates
$CLI_EXE \
    --sn platform \
    --op DownloadCSVTemplates \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 187 'DownloadCSVTemplates' test.out

#- 188 ExportStoreByCSV
# body param: body
echo '{"catalogType": "ITEM", "fieldsToBeIncluded": ["FOZxXWpH", "OCojrttB", "X9wMNRd8"], "idsToBeExported": ["BSzgmnrX", "9tWyOfEX", "9ddKy6Xz"], "storeId": "Jx9UGiaR"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ExportStoreByCSV \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 188 'ExportStoreByCSV' test.out

#- 189 ImportStore
eval_tap 0 189 'ImportStore # SKIP deprecated' test.out

#- 190 GetPublishedStore
$CLI_EXE \
    --sn platform \
    --op GetPublishedStore \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 190 'GetPublishedStore' test.out

#- 191 DeletePublishedStore
$CLI_EXE \
    --sn platform \
    --op DeletePublishedStore \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 191 'DeletePublishedStore' test.out

#- 192 GetPublishedStoreBackup
$CLI_EXE \
    --sn platform \
    --op GetPublishedStoreBackup \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 192 'GetPublishedStoreBackup' test.out

#- 193 RollbackPublishedStore
$CLI_EXE \
    --sn platform \
    --op RollbackPublishedStore \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 193 'RollbackPublishedStore' test.out

#- 194 GetStore
$CLI_EXE \
    --sn platform \
    --op GetStore \
    --namespace $AB_NAMESPACE \
    --storeId 'uQc6T7sF' \
    > test.out 2>&1
eval_tap $? 194 'GetStore' test.out

#- 195 UpdateStore
# body param: body
echo '{"defaultLanguage": "cqR1G4Iu", "defaultRegion": "RNde38pV", "description": "5yZqvaEa", "supportedLanguages": ["IlnhG2Zm", "9LqwjlNg", "ZGO6sJcH"], "supportedRegions": ["ftjShUVT", "eFtjjrco", "Hn0RpxJx"], "title": "A3Ib7hCh"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateStore \
    --namespace $AB_NAMESPACE \
    --storeId '2i7KWjiN' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 195 'UpdateStore' test.out

#- 196 DeleteStore
$CLI_EXE \
    --sn platform \
    --op DeleteStore \
    --namespace $AB_NAMESPACE \
    --storeId 'sVkBIcwX' \
    > test.out 2>&1
eval_tap $? 196 'DeleteStore' test.out

#- 197 QueryChanges
$CLI_EXE \
    --sn platform \
    --op QueryChanges \
    --namespace $AB_NAMESPACE \
    --storeId 'sBUIEmr0' \
    --action 'CREATE' \
    --itemSku 'NtmE1GXY' \
    --itemType 'INGAMEITEM' \
    --limit '31' \
    --offset '27' \
    --selected 'true' \
    --sortBy '["updatedAt", "createdAt"]' \
    --status 'UNPUBLISHED' \
    --type 'ITEM' \
    --updatedAtEnd 'JZ4ZBsqk' \
    --updatedAtStart 'M6WFFW6G' \
    --withTotal 'false' \
    > test.out 2>&1
eval_tap $? 197 'QueryChanges' test.out

#- 198 PublishAll
$CLI_EXE \
    --sn platform \
    --op PublishAll \
    --namespace $AB_NAMESPACE \
    --storeId 'cWZvWCJq' \
    > test.out 2>&1
eval_tap $? 198 'PublishAll' test.out

#- 199 PublishSelected
$CLI_EXE \
    --sn platform \
    --op PublishSelected \
    --namespace $AB_NAMESPACE \
    --storeId '9BNmng7B' \
    > test.out 2>&1
eval_tap $? 199 'PublishSelected' test.out

#- 200 SelectAllRecords
$CLI_EXE \
    --sn platform \
    --op SelectAllRecords \
    --namespace $AB_NAMESPACE \
    --storeId 'Tu1elntN' \
    > test.out 2>&1
eval_tap $? 200 'SelectAllRecords' test.out

#- 201 SelectAllRecordsByCriteria
$CLI_EXE \
    --sn platform \
    --op SelectAllRecordsByCriteria \
    --namespace $AB_NAMESPACE \
    --storeId '3ZtBymm9' \
    --action 'CREATE' \
    --itemSku 'sLI9Snx4' \
    --itemType 'COINS' \
    --selected 'false' \
    --type 'ITEM' \
    --updatedAtEnd 'FIZLWYZf' \
    --updatedAtStart 'VwVem7wa' \
    > test.out 2>&1
eval_tap $? 201 'SelectAllRecordsByCriteria' test.out

#- 202 GetStatistic
$CLI_EXE \
    --sn platform \
    --op GetStatistic \
    --namespace $AB_NAMESPACE \
    --storeId 'KxdMijLV' \
    --action 'CREATE' \
    --itemSku 'n6SNf7Pt' \
    --itemType 'COINS' \
    --type 'STORE' \
    --updatedAtEnd 'x9MTRWaq' \
    --updatedAtStart '0GM4LAiN' \
    > test.out 2>&1
eval_tap $? 202 'GetStatistic' test.out

#- 203 UnselectAllRecords
$CLI_EXE \
    --sn platform \
    --op UnselectAllRecords \
    --namespace $AB_NAMESPACE \
    --storeId 'n9MDYXJI' \
    > test.out 2>&1
eval_tap $? 203 'UnselectAllRecords' test.out

#- 204 SelectRecord
$CLI_EXE \
    --sn platform \
    --op SelectRecord \
    --changeId 'ucReE62Z' \
    --namespace $AB_NAMESPACE \
    --storeId 'q6yIGbvV' \
    > test.out 2>&1
eval_tap $? 204 'SelectRecord' test.out

#- 205 UnselectRecord
$CLI_EXE \
    --sn platform \
    --op UnselectRecord \
    --changeId 'pMrt48ln' \
    --namespace $AB_NAMESPACE \
    --storeId 'iriiz9b4' \
    > test.out 2>&1
eval_tap $? 205 'UnselectRecord' test.out

#- 206 CloneStore
$CLI_EXE \
    --sn platform \
    --op CloneStore \
    --namespace $AB_NAMESPACE \
    --storeId 'nHsygFEP' \
    --targetStoreId 'ZfRHUM19' \
    > test.out 2>&1
eval_tap $? 206 'CloneStore' test.out

#- 207 ExportStore
eval_tap 0 207 'ExportStore # SKIP deprecated' test.out

#- 208 QueryImportHistory
$CLI_EXE \
    --sn platform \
    --op QueryImportHistory \
    --namespace $AB_NAMESPACE \
    --storeId '06FFejkz' \
    --end 'RfTZ5ox7' \
    --limit '25' \
    --offset '80' \
    --sortBy 'bwVN32OA' \
    --start '39xHbpyb' \
    --success 'false' \
    > test.out 2>&1
eval_tap $? 208 'QueryImportHistory' test.out

#- 209 ImportStoreByCSV
# form data upload: category
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
# form data upload: display
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
# form data upload: item
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
# form data upload: section
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op ImportStoreByCSV \
    --namespace $AB_NAMESPACE \
    --storeId 'DnKOU503' \
    --upload category $TEMP_FILE_UPLOAD \
    --upload display $TEMP_FILE_UPLOAD \
    --upload item $TEMP_FILE_UPLOAD \
    --notes 'VP3mfihf' \
    --upload section $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 209 'ImportStoreByCSV' test.out

#- 210 QuerySubscriptions
$CLI_EXE \
    --sn platform \
    --op QuerySubscriptions \
    --namespace $AB_NAMESPACE \
    --chargeStatus 'SETUP' \
    --itemId 'HDLDmaEj' \
    --limit '23' \
    --offset '9' \
    --sku '57Nmb9Sg' \
    --status 'CANCELLED' \
    --subscribedBy 'PLATFORM' \
    --userId 'T0TvEEt1' \
    > test.out 2>&1
eval_tap $? 210 'QuerySubscriptions' test.out

#- 211 RecurringChargeSubscription
$CLI_EXE \
    --sn platform \
    --op RecurringChargeSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId '5PPrY6Ep' \
    > test.out 2>&1
eval_tap $? 211 'RecurringChargeSubscription' test.out

#- 212 GetTicketDynamic
$CLI_EXE \
    --sn platform \
    --op GetTicketDynamic \
    --boothName 'hHZDmV5u' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 212 'GetTicketDynamic' test.out

#- 213 DecreaseTicketSale
# body param: body
echo '{"orderNo": "pbNIUDrJ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op DecreaseTicketSale \
    --boothName 'JmRx3CLu' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 213 'DecreaseTicketSale' test.out

#- 214 GetTicketBoothID
$CLI_EXE \
    --sn platform \
    --op GetTicketBoothID \
    --boothName '55rITqYk' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 214 'GetTicketBoothID' test.out

#- 215 IncreaseTicketSale
# body param: body
echo '{"count": 61, "orderNo": "qAYcEv3u"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op IncreaseTicketSale \
    --boothName 'o18EtXlP' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 215 'IncreaseTicketSale' test.out

#- 216 Commit
# body param: body
echo '{"actions": [{"operations": [{"creditPayload": {"balanceOrigin": "Other", "count": 50, "currencyCode": "4VhcIn8o", "expireAt": "1985-05-11T00:00:00Z"}, "debitPayload": {"count": 52, "currencyCode": "nZ4RRq8K", "walletPlatform": "Other"}, "fulFillItemPayload": {"count": 96, "entitlementCollectionId": "GEo1LepD", "entitlementOrigin": "Twitch", "itemIdentity": "08NRDD7W", "itemIdentityType": "ITEM_ID"}, "revokeEntitlementPayload": {"count": 0, "entitlementId": "yx3IJH1L"}, "type": "CREDIT_WALLET"}, {"creditPayload": {"balanceOrigin": "Epic", "count": 76, "currencyCode": "AsOFOZ5h", "expireAt": "1972-12-09T00:00:00Z"}, "debitPayload": {"count": 57, "currencyCode": "obwYf2gt", "walletPlatform": "Epic"}, "fulFillItemPayload": {"count": 42, "entitlementCollectionId": "1ONYEOKT", "entitlementOrigin": "Playstation", "itemIdentity": "sbSr3KY3", "itemIdentityType": "ITEM_SKU"}, "revokeEntitlementPayload": {"count": 69, "entitlementId": "1VbYyxGx"}, "type": "FULFILL_ITEM"}, {"creditPayload": {"balanceOrigin": "Twitch", "count": 11, "currencyCode": "ZoyjFex4", "expireAt": "1997-07-23T00:00:00Z"}, "debitPayload": {"count": 22, "currencyCode": "iV4ev2cz", "walletPlatform": "GooglePlay"}, "fulFillItemPayload": {"count": 7, "entitlementCollectionId": "VeJI8HRk", "entitlementOrigin": "System", "itemIdentity": "28mWr58z", "itemIdentityType": "ITEM_ID"}, "revokeEntitlementPayload": {"count": 9, "entitlementId": "MF9mOHOW"}, "type": "REVOKE_ENTITLEMENT"}], "userId": "usbTT37Z"}, {"operations": [{"creditPayload": {"balanceOrigin": "Nintendo", "count": 68, "currencyCode": "EHpqdw2U", "expireAt": "1979-02-16T00:00:00Z"}, "debitPayload": {"count": 96, "currencyCode": "mbAcsdzw", "walletPlatform": "Xbox"}, "fulFillItemPayload": {"count": 77, "entitlementCollectionId": "XsCeUmvl", "entitlementOrigin": "Playstation", "itemIdentity": "54dzwjNg", "itemIdentityType": "ITEM_ID"}, "revokeEntitlementPayload": {"count": 61, "entitlementId": "Ji6nA5Tw"}, "type": "CREDIT_WALLET"}, {"creditPayload": {"balanceOrigin": "Other", "count": 51, "currencyCode": "hVZEu6nn", "expireAt": "1999-04-19T00:00:00Z"}, "debitPayload": {"count": 2, "currencyCode": "VhppKyqY", "walletPlatform": "Nintendo"}, "fulFillItemPayload": {"count": 27, "entitlementCollectionId": "BDgqMJB0", "entitlementOrigin": "System", "itemIdentity": "LeCmZyag", "itemIdentityType": "ITEM_SKU"}, "revokeEntitlementPayload": {"count": 59, "entitlementId": "huxjI1Sx"}, "type": "CREDIT_WALLET"}, {"creditPayload": {"balanceOrigin": "System", "count": 19, "currencyCode": "vD8TVimK", "expireAt": "1987-12-25T00:00:00Z"}, "debitPayload": {"count": 0, "currencyCode": "jWZM5CD0", "walletPlatform": "Nintendo"}, "fulFillItemPayload": {"count": 83, "entitlementCollectionId": "VUYhEgWz", "entitlementOrigin": "IOS", "itemIdentity": "98CQhjfZ", "itemIdentityType": "ITEM_SKU"}, "revokeEntitlementPayload": {"count": 77, "entitlementId": "2KOQbL1e"}, "type": "DEBIT_WALLET"}], "userId": "9W7chmv0"}, {"operations": [{"creditPayload": {"balanceOrigin": "Epic", "count": 36, "currencyCode": "Y0argN18", "expireAt": "1995-10-16T00:00:00Z"}, "debitPayload": {"count": 11, "currencyCode": "gB24MoAI", "walletPlatform": "Oculus"}, "fulFillItemPayload": {"count": 50, "entitlementCollectionId": "84ahTc1d", "entitlementOrigin": "GooglePlay", "itemIdentity": "hSnQYVPz", "itemIdentityType": "ITEM_ID"}, "revokeEntitlementPayload": {"count": 59, "entitlementId": "mbvU7GkT"}, "type": "DEBIT_WALLET"}, {"creditPayload": {"balanceOrigin": "System", "count": 5, "currencyCode": "DQFh4H07", "expireAt": "1998-12-14T00:00:00Z"}, "debitPayload": {"count": 65, "currencyCode": "oQS5xVPG", "walletPlatform": "Other"}, "fulFillItemPayload": {"count": 94, "entitlementCollectionId": "NrTyvNpW", "entitlementOrigin": "GooglePlay", "itemIdentity": "ItHbAZKJ", "itemIdentityType": "ITEM_ID"}, "revokeEntitlementPayload": {"count": 41, "entitlementId": "LjUg2ZVz"}, "type": "REVOKE_ENTITLEMENT"}, {"creditPayload": {"balanceOrigin": "Nintendo", "count": 23, "currencyCode": "PsQcyKio", "expireAt": "1986-08-21T00:00:00Z"}, "debitPayload": {"count": 24, "currencyCode": "f7HZWEdP", "walletPlatform": "Nintendo"}, "fulFillItemPayload": {"count": 7, "entitlementCollectionId": "L03ryRfR", "entitlementOrigin": "Nintendo", "itemIdentity": "Cttjagyu", "itemIdentityType": "ITEM_SKU"}, "revokeEntitlementPayload": {"count": 54, "entitlementId": "R7zwXHL9"}, "type": "REVOKE_ENTITLEMENT"}], "userId": "xDKbqao5"}], "metadata": {"oUDUSFjl": {}, "Lt5xu0Vo": {}, "u6m0dlPU": {}}, "needPreCheck": true, "transactionId": "PpRhhMiS", "type": "TccdMHne"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op Commit \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 216 'Commit' test.out

#- 217 GetTradeHistoryByCriteria
$CLI_EXE \
    --sn platform \
    --op GetTradeHistoryByCriteria \
    --namespace $AB_NAMESPACE \
    --limit '19' \
    --offset '52' \
    --status 'FAILED' \
    --type 'cVTYVM11' \
    --userId 'NkqFaFZR' \
    > test.out 2>&1
eval_tap $? 217 'GetTradeHistoryByCriteria' test.out

#- 218 GetTradeHistoryByTransactionId
$CLI_EXE \
    --sn platform \
    --op GetTradeHistoryByTransactionId \
    --namespace $AB_NAMESPACE \
    --transactionId 's1OwmAzD' \
    > test.out 2>&1
eval_tap $? 218 'GetTradeHistoryByTransactionId' test.out

#- 219 UnlockSteamUserAchievement
# body param: body
echo '{"achievements": [{"id": "H6CvAysN", "value": 5}, {"id": "bQhxyIb7", "value": 30}, {"id": "qovLfxLY", "value": 84}], "steamUserId": "Tr0YiMQv"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UnlockSteamUserAchievement \
    --namespace $AB_NAMESPACE \
    --userId 'PLhJTNPp' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 219 'UnlockSteamUserAchievement' test.out

#- 220 GetXblUserAchievements
$CLI_EXE \
    --sn platform \
    --op GetXblUserAchievements \
    --namespace $AB_NAMESPACE \
    --userId 'nPcyTIXi' \
    --xboxUserId 'kqPbbHqc' \
    > test.out 2>&1
eval_tap $? 220 'GetXblUserAchievements' test.out

#- 221 UpdateXblUserAchievement
# body param: body
echo '{"achievements": [{"id": "Cz1pHp2Q", "percentComplete": 95}, {"id": "KGMVzDEB", "percentComplete": 96}, {"id": "IUXBwVaX", "percentComplete": 77}], "serviceConfigId": "9HnwrkYA", "titleId": "QX6NnMBL", "xboxUserId": "eSjAarNt"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXblUserAchievement \
    --namespace $AB_NAMESPACE \
    --userId 'XdFsdkFk' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 221 'UpdateXblUserAchievement' test.out

#- 222 AnonymizeCampaign
$CLI_EXE \
    --sn platform \
    --op AnonymizeCampaign \
    --namespace $AB_NAMESPACE \
    --userId '71LviBMy' \
    > test.out 2>&1
eval_tap $? 222 'AnonymizeCampaign' test.out

#- 223 AnonymizeEntitlement
$CLI_EXE \
    --sn platform \
    --op AnonymizeEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'Dx59EMo6' \
    > test.out 2>&1
eval_tap $? 223 'AnonymizeEntitlement' test.out

#- 224 AnonymizeFulfillment
$CLI_EXE \
    --sn platform \
    --op AnonymizeFulfillment \
    --namespace $AB_NAMESPACE \
    --userId 'qZQtHJj4' \
    > test.out 2>&1
eval_tap $? 224 'AnonymizeFulfillment' test.out

#- 225 AnonymizeIntegration
$CLI_EXE \
    --sn platform \
    --op AnonymizeIntegration \
    --namespace $AB_NAMESPACE \
    --userId 'JmUdqHIh' \
    > test.out 2>&1
eval_tap $? 225 'AnonymizeIntegration' test.out

#- 226 AnonymizeOrder
$CLI_EXE \
    --sn platform \
    --op AnonymizeOrder \
    --namespace $AB_NAMESPACE \
    --userId 'Kd8hMQaE' \
    > test.out 2>&1
eval_tap $? 226 'AnonymizeOrder' test.out

#- 227 AnonymizePayment
$CLI_EXE \
    --sn platform \
    --op AnonymizePayment \
    --namespace $AB_NAMESPACE \
    --userId 'tfV6SkUE' \
    > test.out 2>&1
eval_tap $? 227 'AnonymizePayment' test.out

#- 228 AnonymizeRevocation
$CLI_EXE \
    --sn platform \
    --op AnonymizeRevocation \
    --namespace $AB_NAMESPACE \
    --userId '7IBP4SGg' \
    > test.out 2>&1
eval_tap $? 228 'AnonymizeRevocation' test.out

#- 229 AnonymizeSubscription
$CLI_EXE \
    --sn platform \
    --op AnonymizeSubscription \
    --namespace $AB_NAMESPACE \
    --userId 'DS6GkXyY' \
    > test.out 2>&1
eval_tap $? 229 'AnonymizeSubscription' test.out

#- 230 AnonymizeWallet
$CLI_EXE \
    --sn platform \
    --op AnonymizeWallet \
    --namespace $AB_NAMESPACE \
    --userId 'ZGHV7qmW' \
    > test.out 2>&1
eval_tap $? 230 'AnonymizeWallet' test.out

#- 231 GetUserDLCByPlatform
$CLI_EXE \
    --sn platform \
    --op GetUserDLCByPlatform \
    --namespace $AB_NAMESPACE \
    --userId 'sAqnpTOW' \
    --type 'OCULUS' \
    > test.out 2>&1
eval_tap $? 231 'GetUserDLCByPlatform' test.out

#- 232 GetUserDLC
$CLI_EXE \
    --sn platform \
    --op GetUserDLC \
    --namespace $AB_NAMESPACE \
    --userId 'soWpWu3x' \
    --type 'OCULUS' \
    > test.out 2>&1
eval_tap $? 232 'GetUserDLC' test.out

#- 233 QueryUserEntitlements
$CLI_EXE \
    --sn platform \
    --op QueryUserEntitlements \
    --namespace $AB_NAMESPACE \
    --userId '2Ijovldo' \
    --activeOnly 'true' \
    --appType 'DEMO' \
    --collectionId 'iViTh9H5' \
    --entitlementClazz 'OPTIONBOX' \
    --entitlementName 'ko57hsZa' \
    --features '["qSFpftHM", "o6k43ZYJ", "f0TBWNAr"]' \
    --fuzzyMatchName 'true' \
    --itemId '["YcLE3aqr", "lCt3jI8J", "bjOgWVKW"]' \
    --limit '37' \
    --offset '79' \
    --origin 'System' \
    > test.out 2>&1
eval_tap $? 233 'QueryUserEntitlements' test.out

#- 234 GrantUserEntitlement
# body param: body
echo '[{"collectionId": "8zRhy1w7", "endDate": "1971-06-17T00:00:00Z", "grantedCode": "vy0lwC3A", "itemId": "HL2m5fKB", "itemNamespace": "02fECK2j", "language": "TJR-458", "origin": "Playstation", "quantity": 1, "region": "C9i4w3L5", "source": "REFERRAL_BONUS", "startDate": "1986-09-19T00:00:00Z", "storeId": "2j5AuDyu"}, {"collectionId": "Re4QEgA7", "endDate": "1992-06-23T00:00:00Z", "grantedCode": "C34AZv54", "itemId": "DGmQlX3w", "itemNamespace": "yW7J84Gd", "language": "ffZ_qO", "origin": "Other", "quantity": 7, "region": "yhQdvb7Z", "source": "GIFT", "startDate": "1984-02-06T00:00:00Z", "storeId": "6atNTC4u"}, {"collectionId": "0znSoole", "endDate": "1998-06-01T00:00:00Z", "grantedCode": "lzFDnnLm", "itemId": "CI1GI4Hw", "itemNamespace": "BtleNXKB", "language": "ce_Vr", "origin": "Epic", "quantity": 77, "region": "fHeSYKub", "source": "GIFT", "startDate": "1991-11-06T00:00:00Z", "storeId": "CakS5scL"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op GrantUserEntitlement \
    --namespace $AB_NAMESPACE \
    --userId '3jtlV5je' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 234 'GrantUserEntitlement' test.out

#- 235 GetUserAppEntitlementByAppId
$CLI_EXE \
    --sn platform \
    --op GetUserAppEntitlementByAppId \
    --namespace $AB_NAMESPACE \
    --userId 'Fbh0Pz4N' \
    --activeOnly 'false' \
    --appId 'wzHKVOWH' \
    > test.out 2>&1
eval_tap $? 235 'GetUserAppEntitlementByAppId' test.out

#- 236 QueryUserEntitlementsByAppType
$CLI_EXE \
    --sn platform \
    --op QueryUserEntitlementsByAppType \
    --namespace $AB_NAMESPACE \
    --userId 'DBQEMLwS' \
    --activeOnly 'false' \
    --limit '74' \
    --offset '46' \
    --appType 'SOFTWARE' \
    > test.out 2>&1
eval_tap $? 236 'QueryUserEntitlementsByAppType' test.out

#- 237 GetUserEntitlementByItemId
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'UB6IPqpp' \
    --activeOnly 'true' \
    --entitlementClazz 'CODE' \
    --platform '7JKz604O' \
    --itemId 'vmlKgmRj' \
    > test.out 2>&1
eval_tap $? 237 'GetUserEntitlementByItemId' test.out

#- 238 GetUserActiveEntitlementsByItemIds
$CLI_EXE \
    --sn platform \
    --op GetUserActiveEntitlementsByItemIds \
    --namespace $AB_NAMESPACE \
    --userId 'B7zR8w6P' \
    --ids '["UkKmofEt", "5KORT5RB", "dcfCBAkc"]' \
    --platform 'kcdvyHCp' \
    > test.out 2>&1
eval_tap $? 238 'GetUserActiveEntitlementsByItemIds' test.out

#- 239 GetUserEntitlementBySku
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementBySku \
    --namespace $AB_NAMESPACE \
    --userId 'iNadyrH6' \
    --activeOnly 'true' \
    --entitlementClazz 'ENTITLEMENT' \
    --platform 'Ei165IFm' \
    --sku 'QUPbcp5k' \
    > test.out 2>&1
eval_tap $? 239 'GetUserEntitlementBySku' test.out

#- 240 ExistsAnyUserActiveEntitlement
$CLI_EXE \
    --sn platform \
    --op ExistsAnyUserActiveEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'LGClx9tW' \
    --appIds '["s6DMdhTv", "qEcPrqQC", "VVo3giIc"]' \
    --itemIds '["vfAsB4Pj", "TuxgeNic", "6cKGZSKZ"]' \
    --platform 'vQXNR6iq' \
    --skus '["9F8Dglss", "3EYLqQcr", "BVQdP6gR"]' \
    > test.out 2>&1
eval_tap $? 240 'ExistsAnyUserActiveEntitlement' test.out

#- 241 ExistsAnyUserActiveEntitlementByItemIds
$CLI_EXE \
    --sn platform \
    --op ExistsAnyUserActiveEntitlementByItemIds \
    --namespace $AB_NAMESPACE \
    --userId 'NS2a8QDK' \
    --platform '3RvEAbA6' \
    --itemIds '["oV31VVRK", "q95cqdSM", "PbwoVLjT"]' \
    > test.out 2>&1
eval_tap $? 241 'ExistsAnyUserActiveEntitlementByItemIds' test.out

#- 242 GetUserAppEntitlementOwnershipByAppId
$CLI_EXE \
    --sn platform \
    --op GetUserAppEntitlementOwnershipByAppId \
    --namespace $AB_NAMESPACE \
    --userId 'wRe3ck6x' \
    --appId 'sIt6jTIK' \
    > test.out 2>&1
eval_tap $? 242 'GetUserAppEntitlementOwnershipByAppId' test.out

#- 243 GetUserEntitlementOwnershipByItemId
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementOwnershipByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'Tm1pzddP' \
    --entitlementClazz 'MEDIA' \
    --platform 'x6hGBuV9' \
    --itemId 'gMp4CNMW' \
    > test.out 2>&1
eval_tap $? 243 'GetUserEntitlementOwnershipByItemId' test.out

#- 244 GetUserEntitlementOwnershipByItemIds
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementOwnershipByItemIds \
    --namespace $AB_NAMESPACE \
    --userId 'wjabi50e' \
    --ids '["3CuYKdFa", "AIxaQZJF", "JJUJiwkK"]' \
    --platform 'gpbiaeZw' \
    > test.out 2>&1
eval_tap $? 244 'GetUserEntitlementOwnershipByItemIds' test.out

#- 245 GetUserEntitlementOwnershipBySku
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementOwnershipBySku \
    --namespace $AB_NAMESPACE \
    --userId 'BoLCq5K3' \
    --entitlementClazz 'MEDIA' \
    --platform 'r4wVYY29' \
    --sku 'D0ihi4NK' \
    > test.out 2>&1
eval_tap $? 245 'GetUserEntitlementOwnershipBySku' test.out

#- 246 RevokeAllEntitlements
$CLI_EXE \
    --sn platform \
    --op RevokeAllEntitlements \
    --namespace $AB_NAMESPACE \
    --userId 'DUQxlbsx' \
    > test.out 2>&1
eval_tap $? 246 'RevokeAllEntitlements' test.out

#- 247 RevokeUserEntitlements
$CLI_EXE \
    --sn platform \
    --op RevokeUserEntitlements \
    --namespace $AB_NAMESPACE \
    --userId 'FPtGAo0m' \
    --entitlementIds 'mJn12XHT' \
    > test.out 2>&1
eval_tap $? 247 'RevokeUserEntitlements' test.out

#- 248 GetUserEntitlement
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlement \
    --entitlementId 'RGkE8Mkp' \
    --namespace $AB_NAMESPACE \
    --userId 'LAkRkJ3s' \
    > test.out 2>&1
eval_tap $? 248 'GetUserEntitlement' test.out

#- 249 UpdateUserEntitlement
# body param: body
echo '{"collectionId": "yg6Oa1hE", "endDate": "1996-12-09T00:00:00Z", "nullFieldList": ["b5Krn4T3", "ApJTuaxM", "cSkkEOuv"], "origin": "Steam", "reason": "sqRTGbV2", "startDate": "1985-12-01T00:00:00Z", "status": "SOLD", "useCount": 21}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateUserEntitlement \
    --entitlementId 'Re9dudG6' \
    --namespace $AB_NAMESPACE \
    --userId 'NmliJpOh' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 249 'UpdateUserEntitlement' test.out

#- 250 ConsumeUserEntitlement
# body param: body
echo '{"options": ["s3MEqV9T", "4QOXnvjd", "ispUOn0g"], "platform": "xMyShyGP", "requestId": "j5bkET7p", "useCount": 89}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ConsumeUserEntitlement \
    --entitlementId 'WuHU2A8U' \
    --namespace $AB_NAMESPACE \
    --userId 'x1ajQgT2' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 250 'ConsumeUserEntitlement' test.out

#- 251 DisableUserEntitlement
$CLI_EXE \
    --sn platform \
    --op DisableUserEntitlement \
    --entitlementId 'JKCq8Clo' \
    --namespace $AB_NAMESPACE \
    --userId 'KHEZDVox' \
    > test.out 2>&1
eval_tap $? 251 'DisableUserEntitlement' test.out

#- 252 EnableUserEntitlement
$CLI_EXE \
    --sn platform \
    --op EnableUserEntitlement \
    --entitlementId '2aQKBpNk' \
    --namespace $AB_NAMESPACE \
    --userId 'V5BRV94w' \
    > test.out 2>&1
eval_tap $? 252 'EnableUserEntitlement' test.out

#- 253 GetUserEntitlementHistories
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementHistories \
    --entitlementId '50ME78fG' \
    --namespace $AB_NAMESPACE \
    --userId 'kYbmGZoY' \
    > test.out 2>&1
eval_tap $? 253 'GetUserEntitlementHistories' test.out

#- 254 RevokeUserEntitlement
$CLI_EXE \
    --sn platform \
    --op RevokeUserEntitlement \
    --entitlementId 'zBpIH07j' \
    --namespace $AB_NAMESPACE \
    --userId 'Kta5UUYp' \
    > test.out 2>&1
eval_tap $? 254 'RevokeUserEntitlement' test.out

#- 255 RevokeUserEntitlementByUseCount
# body param: body
echo '{"reason": "MdWRu9lf", "useCount": 48}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RevokeUserEntitlementByUseCount \
    --entitlementId 'OX7PeUMB' \
    --namespace $AB_NAMESPACE \
    --userId 'qs8igSIy' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 255 'RevokeUserEntitlementByUseCount' test.out

#- 256 PreCheckRevokeUserEntitlementByUseCount
$CLI_EXE \
    --sn platform \
    --op PreCheckRevokeUserEntitlementByUseCount \
    --entitlementId '7pjNC2Kf' \
    --namespace $AB_NAMESPACE \
    --userId 'TbCadaDm' \
    --quantity '17' \
    > test.out 2>&1
eval_tap $? 256 'PreCheckRevokeUserEntitlementByUseCount' test.out

#- 257 RevokeUseCount
eval_tap 0 257 'RevokeUseCount # SKIP deprecated' test.out

#- 258 SellUserEntitlement
# body param: body
echo '{"platform": "T1lov6WU", "requestId": "qFSZXbbY", "useCount": 79}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SellUserEntitlement \
    --entitlementId 'IO1GNX1q' \
    --namespace $AB_NAMESPACE \
    --userId 'f3SNtIQG' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 258 'SellUserEntitlement' test.out

#- 259 FulfillItem
# body param: body
echo '{"duration": 79, "endDate": "1998-12-04T00:00:00Z", "entitlementCollectionId": "Lu0BR5OA", "entitlementOrigin": "Nintendo", "itemId": "VQfguMs7", "itemSku": "wdIyNklC", "language": "Qryii61j", "metadata": {"GwYQc49a": {}, "gvu1wDe8": {}, "mwWphBOH": {}}, "order": {"currency": {"currencyCode": "PVzUa6J3", "currencySymbol": "BKwyM2V4", "currencyType": "VIRTUAL", "decimals": 36, "namespace": "lDkxDiOy"}, "ext": {"N1Rxw4oZ": {}, "MfVdHVBQ": {}, "dSQOIAhb": {}}, "free": false}, "orderNo": "KQZ2Ki3X", "origin": "Epic", "overrideBundleItemQty": {"aeYQYCmi": 79, "FsPYhO8m": 39, "nuHktURg": 43}, "quantity": 72, "region": "HMVrajNo", "source": "CONSUME_ENTITLEMENT", "startDate": "1973-05-14T00:00:00Z", "storeId": "YBAyevYR"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op FulfillItem \
    --namespace $AB_NAMESPACE \
    --userId 'PhpiN0vT' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 259 'FulfillItem' test.out

#- 260 RedeemCode
# body param: body
echo '{"code": "Ucqp0VO2", "language": "UO_IKES", "region": "SApffqxi"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RedeemCode \
    --namespace $AB_NAMESPACE \
    --userId 'EQLodfc9' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 260 'RedeemCode' test.out

#- 261 PreCheckFulfillItem
# body param: body
echo '{"itemId": "Rm0sCZzf", "itemSku": "d9AoNJlb", "quantity": 94}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PreCheckFulfillItem \
    --namespace $AB_NAMESPACE \
    --userId 'u08Ftguk' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 261 'PreCheckFulfillItem' test.out

#- 262 FulfillRewards
# body param: body
echo '{"entitlementCollectionId": "pqaPgduT", "entitlementOrigin": "Steam", "metadata": {"2uAtEYVv": {}, "OtUn7Di2": {}, "hrUF4nLZ": {}}, "origin": "Epic", "rewards": [{"currency": {"currencyCode": "xeLQCUW5", "namespace": "INSxa8F6"}, "item": {"itemId": "cO8liSCb", "itemSku": "yvGT6det", "itemType": "p0kKMTkM"}, "quantity": 90, "type": "CURRENCY"}, {"currency": {"currencyCode": "YeZEyzuB", "namespace": "UTcCKaAa"}, "item": {"itemId": "ObV1Z7ar", "itemSku": "tlc4lc8Y", "itemType": "7bUC1Qfb"}, "quantity": 45, "type": "ITEM"}, {"currency": {"currencyCode": "UgiOI7PW", "namespace": "jJZZrYzM"}, "item": {"itemId": "LOW6qJ9A", "itemSku": "zUIvdEtl", "itemType": "1wCdqH4F"}, "quantity": 84, "type": "ITEM"}], "source": "PAYMENT", "transactionId": "WWF8M3ty"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op FulfillRewards \
    --namespace $AB_NAMESPACE \
    --userId '95eaoqkJ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 262 'FulfillRewards' test.out

#- 263 QueryUserIAPOrders
$CLI_EXE \
    --sn platform \
    --op QueryUserIAPOrders \
    --namespace $AB_NAMESPACE \
    --userId 'NAaY6YVA' \
    --endTime 'N3xgxski' \
    --limit '25' \
    --offset '31' \
    --productId 'OWCRpq6t' \
    --startTime 'pwyh9oLo' \
    --status 'FULFILLED' \
    --type 'TWITCH' \
    > test.out 2>&1
eval_tap $? 263 'QueryUserIAPOrders' test.out

#- 264 QueryAllUserIAPOrders
$CLI_EXE \
    --sn platform \
    --op QueryAllUserIAPOrders \
    --namespace $AB_NAMESPACE \
    --userId 'ESQxEQJx' \
    > test.out 2>&1
eval_tap $? 264 'QueryAllUserIAPOrders' test.out

#- 265 QueryUserIAPConsumeHistory
$CLI_EXE \
    --sn platform \
    --op QueryUserIAPConsumeHistory \
    --namespace $AB_NAMESPACE \
    --userId 'D8yT4JZj' \
    --endTime 'WE9hIHxf' \
    --limit '14' \
    --offset '46' \
    --startTime 'qo9fXy8e' \
    --status 'PENDING' \
    --type 'EPICGAMES' \
    > test.out 2>&1
eval_tap $? 265 'QueryUserIAPConsumeHistory' test.out

#- 266 MockFulfillIAPItem
# body param: body
echo '{"itemIdentityType": "ITEM_SKU", "language": "nmv_815", "productId": "E1pacdZ2", "region": "ssd0VCW5", "transactionId": "D5pyVaj2", "type": "GOOGLE"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op MockFulfillIAPItem \
    --namespace $AB_NAMESPACE \
    --userId 'nydjjDMK' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 266 'MockFulfillIAPItem' test.out

#- 267 QueryUserOrders
$CLI_EXE \
    --sn platform \
    --op QueryUserOrders \
    --namespace $AB_NAMESPACE \
    --userId 'uIrSsx6V' \
    --itemId 'mn1s14eN' \
    --limit '93' \
    --offset '38' \
    --status 'CHARGEBACK' \
    > test.out 2>&1
eval_tap $? 267 'QueryUserOrders' test.out

#- 268 AdminCreateUserOrder
# body param: body
echo '{"currencyCode": "z7Pj9xH7", "currencyNamespace": "JGqBYl3a", "discountedPrice": 20, "entitlementPlatform": "Playstation", "ext": {"sjD7LVMa": {}, "tR5nR3po": {}, "lS1asfLI": {}}, "itemId": "2OvXDKbK", "language": "w2eyJsWm", "options": {"skipPriceValidation": true}, "platform": "Nintendo", "price": 9, "quantity": 10, "region": "421pKtaB", "returnUrl": "487T67C3", "sandbox": false, "sectionId": "XmLjbgom"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op AdminCreateUserOrder \
    --namespace $AB_NAMESPACE \
    --userId 'O9Gril83' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 268 'AdminCreateUserOrder' test.out

#- 269 CountOfPurchasedItem
$CLI_EXE \
    --sn platform \
    --op CountOfPurchasedItem \
    --namespace $AB_NAMESPACE \
    --userId 'TwNuSOlc' \
    --itemId 'MtdzjwTj' \
    > test.out 2>&1
eval_tap $? 269 'CountOfPurchasedItem' test.out

#- 270 GetUserOrder
$CLI_EXE \
    --sn platform \
    --op GetUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'oj1dZJcO' \
    --userId 'K6ePsgXk' \
    > test.out 2>&1
eval_tap $? 270 'GetUserOrder' test.out

#- 271 UpdateUserOrderStatus
# body param: body
echo '{"status": "REFUNDED", "statusReason": "e3p9Xubl"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateUserOrderStatus \
    --namespace $AB_NAMESPACE \
    --orderNo 'fyx9mZfE' \
    --userId '7TZgLiwV' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 271 'UpdateUserOrderStatus' test.out

#- 272 FulfillUserOrder
$CLI_EXE \
    --sn platform \
    --op FulfillUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'uKIEzipb' \
    --userId 'am7bFSqe' \
    > test.out 2>&1
eval_tap $? 272 'FulfillUserOrder' test.out

#- 273 GetUserOrderGrant
$CLI_EXE \
    --sn platform \
    --op GetUserOrderGrant \
    --namespace $AB_NAMESPACE \
    --orderNo 'cZl3eSlj' \
    --userId '2DJWcD9N' \
    > test.out 2>&1
eval_tap $? 273 'GetUserOrderGrant' test.out

#- 274 GetUserOrderHistories
$CLI_EXE \
    --sn platform \
    --op GetUserOrderHistories \
    --namespace $AB_NAMESPACE \
    --orderNo 'LWVBA4Tg' \
    --userId 'c7ISkbhx' \
    > test.out 2>&1
eval_tap $? 274 'GetUserOrderHistories' test.out

#- 275 ProcessUserOrderNotification
# body param: body
echo '{"additionalData": {"cardSummary": "yeoWXgRG"}, "authorisedTime": "1975-04-03T00:00:00Z", "chargebackReversedTime": "1996-08-27T00:00:00Z", "chargebackTime": "1979-08-04T00:00:00Z", "chargedTime": "1991-08-26T00:00:00Z", "createdTime": "1997-08-01T00:00:00Z", "currency": {"currencyCode": "7lyNtICP", "currencySymbol": "ObuUPNWI", "currencyType": "VIRTUAL", "decimals": 6, "namespace": "OTPRgfN3"}, "customParameters": {"luqu7QtZ": {}, "elucniBC": {}, "xSTbhLw5": {}}, "extOrderNo": "1QYoZsIl", "extTxId": "Anc7JDRe", "extUserId": "kRjcRXFE", "issuedAt": "1985-06-09T00:00:00Z", "metadata": {"i2wexXMw": "q4ulNQhM", "zyCiqC7u": "hXODEaxb", "Ux5bvEon": "tXD7jahl"}, "namespace": "4LSUsUj7", "nonceStr": "KWvpjciv", "paymentMethod": "sN1HiOly", "paymentMethodFee": 60, "paymentOrderNo": "kjxX6r1U", "paymentProvider": "ALIPAY", "paymentProviderFee": 59, "paymentStationUrl": "srUZlSra", "price": 18, "refundedTime": "1999-05-22T00:00:00Z", "salesTax": 82, "sandbox": true, "sku": "o7vyESVC", "status": "REFUNDED", "statusReason": "MvXNZCkr", "subscriptionId": "8FWTmqmV", "subtotalPrice": 87, "targetNamespace": "zdSiFfhU", "targetUserId": "ZKcBc2Uq", "tax": 14, "totalPrice": 73, "totalTax": 92, "txEndTime": "1975-03-01T00:00:00Z", "type": "4KSLMGtN", "userId": "DjeoUZTu", "vat": 58}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ProcessUserOrderNotification \
    --namespace $AB_NAMESPACE \
    --orderNo 'I5WYLcSC' \
    --userId 'VRRvQJZf' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 275 'ProcessUserOrderNotification' test.out

#- 276 DownloadUserOrderReceipt
$CLI_EXE \
    --sn platform \
    --op DownloadUserOrderReceipt \
    --namespace $AB_NAMESPACE \
    --orderNo 'lyZF1Udn' \
    --userId 'auUf3YU9' \
    > test.out 2>&1
eval_tap $? 276 'DownloadUserOrderReceipt' test.out

#- 277 CreateUserPaymentOrder
# body param: body
echo '{"currencyCode": "GOiHySHu", "currencyNamespace": "WA1B5bEU", "customParameters": {"8G5nFtfL": {}, "lOQBHpjS": {}, "dIfWtKGD": {}}, "description": "2nLCMc95", "extOrderNo": "mx5NIR67", "extUserId": "jY6D1bb6", "itemType": "SEASON", "language": "xsCX-wKkj-242", "metadata": {"XfDZSIYW": "I5bbTCum", "M2bgAaIL": "V0CGeifj", "Z6CowUAV": "q9cUG9m9"}, "notifyUrl": "JOg5nDhx", "omitNotification": false, "platform": "pUC3Eli7", "price": 19, "recurringPaymentOrderNo": "1dOwrORU", "region": "fCzvyWv6", "returnUrl": "LYzJKOe7", "sandbox": true, "sku": "dKEcnqOb", "subscriptionId": "ImT4aeh1", "title": "80LnQYKX"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateUserPaymentOrder \
    --namespace $AB_NAMESPACE \
    --userId '3BHauAgv' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 277 'CreateUserPaymentOrder' test.out

#- 278 RefundUserPaymentOrder
# body param: body
echo '{"description": "h1NT7rZl"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RefundUserPaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo '6psBMvv2' \
    --userId '53Po6U4B' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 278 'RefundUserPaymentOrder' test.out

#- 279 ApplyUserRedemption
# body param: body
echo '{"code": "92qsJfnv", "orderNo": "XQQX9GYr"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ApplyUserRedemption \
    --namespace $AB_NAMESPACE \
    --userId 'nh3ei7mc' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 279 'ApplyUserRedemption' test.out

#- 280 DoRevocation
# body param: body
echo '{"meta": {"IjlNMmc7": {}, "9QwLEvsk": {}, "3KItUjK8": {}}, "revokeEntries": [{"currency": {"balanceOrigin": "Oculus", "currencyCode": "UIrFKRRI", "namespace": "ZR5m9MFY"}, "entitlement": {"entitlementId": "oATaqzPk"}, "item": {"entitlementOrigin": "GooglePlay", "itemIdentity": "lJ4gEnib", "itemIdentityType": "ITEM_SKU", "origin": "Xbox"}, "quantity": 67, "type": "ITEM"}, {"currency": {"balanceOrigin": "Epic", "currencyCode": "oeO20Enr", "namespace": "sUfBMFPK"}, "entitlement": {"entitlementId": "zNbSTo8J"}, "item": {"entitlementOrigin": "Twitch", "itemIdentity": "HCDRa4oP", "itemIdentityType": "ITEM_SKU", "origin": "Nintendo"}, "quantity": 84, "type": "ENTITLEMENT"}, {"currency": {"balanceOrigin": "IOS", "currencyCode": "2v2vUEF5", "namespace": "lYIdfwja"}, "entitlement": {"entitlementId": "r1XjXPbf"}, "item": {"entitlementOrigin": "Xbox", "itemIdentity": "ivMGrqKj", "itemIdentityType": "ITEM_SKU", "origin": "Steam"}, "quantity": 35, "type": "ENTITLEMENT"}], "source": "IAP", "transactionId": "djH58yR5"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op DoRevocation \
    --namespace $AB_NAMESPACE \
    --userId 's7z4HEhd' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 280 'DoRevocation' test.out

#- 281 RegisterXblSessions
# body param: body
echo '{"gameSessionId": "EcyujndK", "payload": {"w0ALe6Rr": {}, "t86RWaqZ": {}, "16z4WlXE": {}}, "scid": "4Jm53jGS", "sessionTemplateName": "P1q65FY0"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RegisterXblSessions \
    --namespace $AB_NAMESPACE \
    --userId 'PXG6vLPe' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 281 'RegisterXblSessions' test.out

#- 282 QueryUserSubscriptions
$CLI_EXE \
    --sn platform \
    --op QueryUserSubscriptions \
    --namespace $AB_NAMESPACE \
    --userId 'oxcAKVYK' \
    --chargeStatus 'RECURRING_CHARGING' \
    --itemId 'Gd0nN5Mn' \
    --limit '87' \
    --offset '83' \
    --sku 'Rs5SoEpB' \
    --status 'EXPIRED' \
    --subscribedBy 'PLATFORM' \
    > test.out 2>&1
eval_tap $? 282 'QueryUserSubscriptions' test.out

#- 283 GetUserSubscriptionActivities
$CLI_EXE \
    --sn platform \
    --op GetUserSubscriptionActivities \
    --namespace $AB_NAMESPACE \
    --userId 'IIZhOfRg' \
    --excludeSystem 'false' \
    --limit '77' \
    --offset '48' \
    --subscriptionId 'dyxlPLMt' \
    > test.out 2>&1
eval_tap $? 283 'GetUserSubscriptionActivities' test.out

#- 284 PlatformSubscribeSubscription
# body param: body
echo '{"grantDays": 62, "itemId": "SKkHtAoq", "language": "z1xz7Rm7", "reason": "MVVNrKwi", "region": "yVGYS3S7", "source": "VSaSbtxg"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PlatformSubscribeSubscription \
    --namespace $AB_NAMESPACE \
    --userId '4SWVaU4C' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 284 'PlatformSubscribeSubscription' test.out

#- 285 CheckUserSubscriptionSubscribableByItemId
$CLI_EXE \
    --sn platform \
    --op CheckUserSubscriptionSubscribableByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'yCLGl5GS' \
    --itemId 'PVIJLUzB' \
    > test.out 2>&1
eval_tap $? 285 'CheckUserSubscriptionSubscribableByItemId' test.out

#- 286 GetUserSubscription
$CLI_EXE \
    --sn platform \
    --op GetUserSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'INYdtzH5' \
    --userId 'iYV4IyOg' \
    > test.out 2>&1
eval_tap $? 286 'GetUserSubscription' test.out

#- 287 DeleteUserSubscription
$CLI_EXE \
    --sn platform \
    --op DeleteUserSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'l7Av1R6s' \
    --userId 'gZ1rmOF0' \
    > test.out 2>&1
eval_tap $? 287 'DeleteUserSubscription' test.out

#- 288 CancelSubscription
# body param: body
echo '{"immediate": true, "reason": "2DdqQWSW"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CancelSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId '6gicIhMX' \
    --userId 'tXBh7II3' \
    --force 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 288 'CancelSubscription' test.out

#- 289 GrantDaysToSubscription
# body param: body
echo '{"grantDays": 43, "reason": "PG3SvzZb"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op GrantDaysToSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'BMI0oTVQ' \
    --userId 'dx0dW9zI' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 289 'GrantDaysToSubscription' test.out

#- 290 GetUserSubscriptionBillingHistories
$CLI_EXE \
    --sn platform \
    --op GetUserSubscriptionBillingHistories \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'jOaC2rrr' \
    --userId 'czGrPxZl' \
    --excludeFree 'true' \
    --limit '78' \
    --offset '17' \
    > test.out 2>&1
eval_tap $? 290 'GetUserSubscriptionBillingHistories' test.out

#- 291 ProcessUserSubscriptionNotification
# body param: body
echo '{"additionalData": {"cardSummary": "FNDpKH3V"}, "authorisedTime": "1990-09-12T00:00:00Z", "chargebackReversedTime": "1999-11-07T00:00:00Z", "chargebackTime": "1980-02-08T00:00:00Z", "chargedTime": "1973-06-10T00:00:00Z", "createdTime": "1971-05-07T00:00:00Z", "currency": {"currencyCode": "FCPOSIGT", "currencySymbol": "bLcndqP5", "currencyType": "VIRTUAL", "decimals": 62, "namespace": "AUPTydX4"}, "customParameters": {"tVM9rGle": {}, "RLIu3byS": {}, "Rt5vyWjn": {}}, "extOrderNo": "Cac8jx8j", "extTxId": "1zbdajEO", "extUserId": "vsstLtvm", "issuedAt": "1973-07-08T00:00:00Z", "metadata": {"6K0XKVJj": "1Gufmqyv", "bUiNPCHb": "8UzvYKtq", "oyPSdIhN": "UERXMENe"}, "namespace": "JpWGGqfD", "nonceStr": "UDrfiIiX", "paymentMethod": "7enob0pY", "paymentMethodFee": 35, "paymentOrderNo": "EcxiTxey", "paymentProvider": "WXPAY", "paymentProviderFee": 28, "paymentStationUrl": "SpFtYSUk", "price": 43, "refundedTime": "1979-04-01T00:00:00Z", "salesTax": 32, "sandbox": false, "sku": "2WH82Veg", "status": "REFUNDING", "statusReason": "B3URI7tW", "subscriptionId": "nDLcFTJO", "subtotalPrice": 71, "targetNamespace": "iezOHjpp", "targetUserId": "FBCNzkUs", "tax": 59, "totalPrice": 74, "totalTax": 56, "txEndTime": "1974-02-06T00:00:00Z", "type": "AgYGa8ye", "userId": "AYgs2nva", "vat": 9}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ProcessUserSubscriptionNotification \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'DfQLQQtL' \
    --userId 'pP2DKcpe' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 291 'ProcessUserSubscriptionNotification' test.out

#- 292 AcquireUserTicket
# body param: body
echo '{"count": 40, "orderNo": "HgUnbrTH"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op AcquireUserTicket \
    --boothName 'QNvEf213' \
    --namespace $AB_NAMESPACE \
    --userId '0HkoGety' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 292 'AcquireUserTicket' test.out

#- 293 QueryUserCurrencyWallets
$CLI_EXE \
    --sn platform \
    --op QueryUserCurrencyWallets \
    --namespace $AB_NAMESPACE \
    --userId 'pWgaUTlt' \
    > test.out 2>&1
eval_tap $? 293 'QueryUserCurrencyWallets' test.out

#- 294 DebitUserWalletByCurrencyCode
# body param: body
echo '{"allowOverdraft": true, "amount": 38, "balanceOrigin": "Steam", "balanceSource": "OTHER", "metadata": {"zCu6OJ5o": {}, "FUIfnOBJ": {}, "afQ0jxJr": {}}, "reason": "6DwOXh34"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op DebitUserWalletByCurrencyCode \
    --currencyCode 'BDBhDjSm' \
    --namespace $AB_NAMESPACE \
    --userId 'uurdoi2E' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 294 'DebitUserWalletByCurrencyCode' test.out

#- 295 ListUserCurrencyTransactions
$CLI_EXE \
    --sn platform \
    --op ListUserCurrencyTransactions \
    --currencyCode '0SvaJhtJ' \
    --namespace $AB_NAMESPACE \
    --userId 'QdgcFkA7' \
    --limit '34' \
    --offset '19' \
    > test.out 2>&1
eval_tap $? 295 'ListUserCurrencyTransactions' test.out

#- 296 CheckBalance
# body param: request
echo '{"amount": 88, "debitBalanceSource": "DLC_REVOCATION", "metadata": {"Y2HdKBPT": {}, "0w3ODQGJ": {}, "KOaGUn5p": {}}, "reason": "0verpgqE", "walletPlatform": "Playstation"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CheckBalance \
    --currencyCode '3HIE138u' \
    --namespace $AB_NAMESPACE \
    --userId 'ZavqXJZs' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 296 'CheckBalance' test.out

#- 297 CheckWallet
eval_tap 0 297 'CheckWallet # SKIP deprecated' test.out

#- 298 CreditUserWallet
# body param: body
echo '{"amount": 31, "expireAt": "1977-03-13T00:00:00Z", "metadata": {"BVbuHsSx": {}, "i6clm03C": {}, "ANX3Vv6T": {}}, "origin": "Steam", "reason": "P6p7fshp", "source": "ACHIEVEMENT"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreditUserWallet \
    --currencyCode 'ic6dON2q' \
    --namespace $AB_NAMESPACE \
    --userId 'ECz2zKU0' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 298 'CreditUserWallet' test.out

#- 299 DebitByWalletPlatform
# body param: request
echo '{"amount": 58, "debitBalanceSource": "PAYMENT", "metadata": {"vw8gyDdv": {}, "ivqx0pwZ": {}, "wkVoMsUg": {}}, "reason": "490OIG3R", "walletPlatform": "Other"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op DebitByWalletPlatform \
    --currencyCode 'ikivdC1E' \
    --namespace $AB_NAMESPACE \
    --userId 'loZloJKE' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 299 'DebitByWalletPlatform' test.out

#- 300 PayWithUserWallet
# body param: body
echo '{"amount": 96, "metadata": {"0ggo8d2E": {}, "Matw4XCQ": {}, "QjQenCf8": {}}, "walletPlatform": "GooglePlay"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PayWithUserWallet \
    --currencyCode 'EhfEJFzU' \
    --namespace $AB_NAMESPACE \
    --userId 'xrSWzU2K' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 300 'PayWithUserWallet' test.out

#- 301 GetUserWallet
eval_tap 0 301 'GetUserWallet # SKIP deprecated' test.out

#- 302 DebitUserWallet
eval_tap 0 302 'DebitUserWallet # SKIP deprecated' test.out

#- 303 DisableUserWallet
eval_tap 0 303 'DisableUserWallet # SKIP deprecated' test.out

#- 304 EnableUserWallet
eval_tap 0 304 'EnableUserWallet # SKIP deprecated' test.out

#- 305 ListUserWalletTransactions
eval_tap 0 305 'ListUserWalletTransactions # SKIP deprecated' test.out

#- 306 ListViews
$CLI_EXE \
    --sn platform \
    --op ListViews \
    --namespace $AB_NAMESPACE \
    --storeId 'eZI1H1J5' \
    > test.out 2>&1
eval_tap $? 306 'ListViews' test.out

#- 307 CreateView
# body param: body
echo '{"displayOrder": 34, "localizations": {"8g18rxev": {"description": "ZWfOz7Ug", "localExt": {"KqwrRszj": {}, "7cBmMr8R": {}, "cKBUtBtF": {}}, "longDescription": "biw5oSae", "title": "QYlV5gFQ"}, "KrLcdIxi": {"description": "3Wi87ey9", "localExt": {"WzZL3luc": {}, "ViGJ9rls": {}, "uFScB04P": {}}, "longDescription": "x5tOplAz", "title": "ymsTBVrl"}, "4pRqOVRM": {"description": "7np1jyK5", "localExt": {"2yDrgvb7": {}, "2ySAKiJI": {}, "e6kieI4q": {}}, "longDescription": "SBfx7xUb", "title": "55FRuSLf"}}, "name": "glvckc96"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateView \
    --namespace $AB_NAMESPACE \
    --storeId '6aE1EmgD' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 307 'CreateView' test.out

#- 308 GetView
$CLI_EXE \
    --sn platform \
    --op GetView \
    --namespace $AB_NAMESPACE \
    --viewId 'AZTUqdFd' \
    --storeId 'e8Wn0dBD' \
    > test.out 2>&1
eval_tap $? 308 'GetView' test.out

#- 309 UpdateView
# body param: body
echo '{"displayOrder": 33, "localizations": {"Ae08WqIO": {"description": "5uXdWnhO", "localExt": {"342HpVFy": {}, "WXMAVPK3": {}, "8J9xF3Yj": {}}, "longDescription": "RcuQs5Ru", "title": "cL9HefRw"}, "L63bVvAs": {"description": "UpYUtmwd", "localExt": {"vWR6mXoz": {}, "VQWULRPc": {}, "WdBMnmlP": {}}, "longDescription": "QJHfnqIw", "title": "wDz45uZL"}, "d8rhNlaV": {"description": "bxUgQPAt", "localExt": {"HRobIwT2": {}, "4cIWlzY1": {}, "ml7dibXh": {}}, "longDescription": "XGkIazN6", "title": "FFduuBrE"}}, "name": "LEis8421"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateView \
    --namespace $AB_NAMESPACE \
    --viewId 'DQUzV4ss' \
    --storeId 'GIttIk6K' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 309 'UpdateView' test.out

#- 310 DeleteView
$CLI_EXE \
    --sn platform \
    --op DeleteView \
    --namespace $AB_NAMESPACE \
    --viewId 'oQ1NX4Sa' \
    --storeId '1jkXTMN4' \
    > test.out 2>&1
eval_tap $? 310 'DeleteView' test.out

#- 311 QueryWallets
eval_tap 0 311 'QueryWallets # SKIP deprecated' test.out

#- 312 BulkCredit
# body param: body
echo '[{"creditRequest": {"amount": 5, "expireAt": "1990-11-16T00:00:00Z", "metadata": {"dOsIJY1e": {}, "H2S4LPwW": {}, "TZ4NsHSg": {}}, "origin": "Other", "reason": "CSJ2Ot8u", "source": "GIFT"}, "currencyCode": "8XyXYLIA", "userIds": ["q9GCiHtw", "I0vBWNX5", "Ls3wAv5h"]}, {"creditRequest": {"amount": 17, "expireAt": "1995-03-22T00:00:00Z", "metadata": {"uwJe9VAM": {}, "pu9zR6Y5": {}, "ROVa2qT3": {}}, "origin": "Xbox", "reason": "gh5eVZf9", "source": "TRADE"}, "currencyCode": "tS6nVwWL", "userIds": ["I0gikgGK", "TBy1tMgd", "ta2Vh0Bi"]}, {"creditRequest": {"amount": 47, "expireAt": "1971-01-28T00:00:00Z", "metadata": {"9GAEXLp9": {}, "d3iDzYBb": {}, "90RGAkBH": {}}, "origin": "IOS", "reason": "E1egCQW5", "source": "PURCHASE"}, "currencyCode": "4Pd8SaVY", "userIds": ["sp799qBd", "9AMEejRu", "kS0cKHNy"]}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op BulkCredit \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 312 'BulkCredit' test.out

#- 313 BulkDebit
# body param: body
echo '[{"currencyCode": "F6P5R9od", "request": {"allowOverdraft": false, "amount": 59, "balanceOrigin": "Xbox", "balanceSource": "ORDER_REVOCATION", "metadata": {"p2u3fMid": {}, "LqtP88gJ": {}, "r8xNlHzF": {}}, "reason": "UpydYjYZ"}, "userIds": ["rIuTzNAm", "1fvq0f3l", "b6tEry3N"]}, {"currencyCode": "CSWoF4Bs", "request": {"allowOverdraft": true, "amount": 30, "balanceOrigin": "Epic", "balanceSource": "IAP_REVOCATION", "metadata": {"NKzHz5mZ": {}, "1czrU6Z1": {}, "jVSFKKpz": {}}, "reason": "4o44zjqN"}, "userIds": ["Hl4RQtrd", "GhVsPYBq", "yisEniJo"]}, {"currencyCode": "rrvBV3WT", "request": {"allowOverdraft": false, "amount": 70, "balanceOrigin": "System", "balanceSource": "IAP_REVOCATION", "metadata": {"e0GkOzWF": {}, "QaYy1giw": {}, "0iuDK8kU": {}}, "reason": "cOUVR9LL"}, "userIds": ["IdumolWv", "9ZK9jmR2", "GlTn2XBW"]}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op BulkDebit \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 313 'BulkDebit' test.out

#- 314 GetWallet
eval_tap 0 314 'GetWallet # SKIP deprecated' test.out

#- 315 SyncOrders
$CLI_EXE \
    --sn platform \
    --op SyncOrders \
    --nextEvaluatedKey 'X9nEW2rO' \
    --end 'nmUVP71D' \
    --start 'Cf9ZKyA5' \
    > test.out 2>&1
eval_tap $? 315 'SyncOrders' test.out

#- 316 TestAdyenConfig
# body param: body
echo '{"allowedPaymentMethods": ["sJxs0f8m", "SqWjH3Xu", "jNSipQGh"], "apiKey": "PLnaMdUL", "authoriseAsCapture": false, "blockedPaymentMethods": ["FvbVAjMC", "6aEAz3ky", "1xBj0Ibl"], "clientKey": "dLpqLEnV", "dropInSettings": "HelnFryN", "liveEndpointUrlPrefix": "42jwzn5l", "merchantAccount": "s7PD69cl", "notificationHmacKey": "7kRSnLXT", "notificationPassword": "j7g9QXLV", "notificationUsername": "oX3BDBmA", "returnUrl": "vz9DO5Qz", "settings": "oCEOLIGF"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestAdyenConfig \
    --sandbox 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 316 'TestAdyenConfig' test.out

#- 317 TestAliPayConfig
# body param: body
echo '{"appId": "1HBLsYPQ", "privateKey": "aLqwUYKy", "publicKey": "JmFO3sQC", "returnUrl": "0p1YhEGC"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestAliPayConfig \
    --sandbox 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 317 'TestAliPayConfig' test.out

#- 318 TestCheckoutConfig
# body param: body
echo '{"publicKey": "DqgIfrXS", "secretKey": "GtBC760H"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestCheckoutConfig \
    --sandbox 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 318 'TestCheckoutConfig' test.out

#- 319 DebugMatchedPaymentMerchantConfig
$CLI_EXE \
    --sn platform \
    --op DebugMatchedPaymentMerchantConfig \
    --namespace_ 'Tq5vw0NP' \
    --region 'iAeug74f' \
    > test.out 2>&1
eval_tap $? 319 'DebugMatchedPaymentMerchantConfig' test.out

#- 320 TestPayPalConfig
# body param: body
echo '{"clientID": "MjjGrLdR", "clientSecret": "5TaiqBoR", "returnUrl": "nEjhm2QW", "webHookId": "OuFgZOgw"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestPayPalConfig \
    --sandbox 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 320 'TestPayPalConfig' test.out

#- 321 TestStripeConfig
# body param: body
echo '{"allowedPaymentMethodTypes": ["yvpwM7O5", "JWyYgBp0", "XncgYGT3"], "publishableKey": "Ign4dTve", "secretKey": "ivQ5ojTu", "webhookSecret": "oPGAJnrv"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestStripeConfig \
    --sandbox 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 321 'TestStripeConfig' test.out

#- 322 TestWxPayConfig
# body param: body
echo '{"appId": "a4t71aDM", "key": "aXvQiSU8", "mchid": "TeQtam7W", "returnUrl": "wGHi9Xxn"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestWxPayConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 322 'TestWxPayConfig' test.out

#- 323 TestXsollaConfig
# body param: body
echo '{"apiKey": "t6rnBAIZ", "flowCompletionUrl": "XjPO3oxr", "merchantId": 39, "projectId": 78, "projectSecretKey": "rWPoaqTU"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestXsollaConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 323 'TestXsollaConfig' test.out

#- 324 GetPaymentMerchantConfig
$CLI_EXE \
    --sn platform \
    --op GetPaymentMerchantConfig \
    --id 'N59weVlU' \
    > test.out 2>&1
eval_tap $? 324 'GetPaymentMerchantConfig' test.out

#- 325 UpdateAdyenConfig
# body param: body
echo '{"allowedPaymentMethods": ["nSbi2ZqM", "1AsskwfM", "VlJxJYXW"], "apiKey": "v4mF6JW1", "authoriseAsCapture": true, "blockedPaymentMethods": ["BwNMoGDE", "pp4eFYnV", "hq7Bd3kf"], "clientKey": "QgcqfBJp", "dropInSettings": "MmA8EGMf", "liveEndpointUrlPrefix": "UqjeUI9z", "merchantAccount": "fqnMVe4B", "notificationHmacKey": "sJ0e5Mmg", "notificationPassword": "ik9UM2aD", "notificationUsername": "dvPVLRtM", "returnUrl": "6IVSC4mp", "settings": "jgJvGvgl"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateAdyenConfig \
    --id 'hqjLLdFn' \
    --sandbox 'false' \
    --validate 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 325 'UpdateAdyenConfig' test.out

#- 326 TestAdyenConfigById
$CLI_EXE \
    --sn platform \
    --op TestAdyenConfigById \
    --id 'BKKO8rhm' \
    --sandbox 'true' \
    > test.out 2>&1
eval_tap $? 326 'TestAdyenConfigById' test.out

#- 327 UpdateAliPayConfig
# body param: body
echo '{"appId": "mKqNm3GW", "privateKey": "u4WcvNIz", "publicKey": "OZglkCGy", "returnUrl": "jGdbQMsL"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateAliPayConfig \
    --id 'NFviEeAM' \
    --sandbox 'false' \
    --validate 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 327 'UpdateAliPayConfig' test.out

#- 328 TestAliPayConfigById
$CLI_EXE \
    --sn platform \
    --op TestAliPayConfigById \
    --id 'HRAdVBTN' \
    --sandbox 'true' \
    > test.out 2>&1
eval_tap $? 328 'TestAliPayConfigById' test.out

#- 329 UpdateCheckoutConfig
# body param: body
echo '{"publicKey": "M5Mf1eIZ", "secretKey": "pB3bvHyD"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCheckoutConfig \
    --id 'X4VnOGkC' \
    --sandbox 'true' \
    --validate 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 329 'UpdateCheckoutConfig' test.out

#- 330 TestCheckoutConfigById
$CLI_EXE \
    --sn platform \
    --op TestCheckoutConfigById \
    --id 'hAIjDJes' \
    --sandbox 'false' \
    > test.out 2>&1
eval_tap $? 330 'TestCheckoutConfigById' test.out

#- 331 UpdatePayPalConfig
# body param: body
echo '{"clientID": "E5UiiYcx", "clientSecret": "Dfnjhy4S", "returnUrl": "pgs03WLl", "webHookId": "W806ZS0Z"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePayPalConfig \
    --id 'Szj2nyEU' \
    --sandbox 'true' \
    --validate 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 331 'UpdatePayPalConfig' test.out

#- 332 TestPayPalConfigById
$CLI_EXE \
    --sn platform \
    --op TestPayPalConfigById \
    --id 'xi9md9Yf' \
    --sandbox 'false' \
    > test.out 2>&1
eval_tap $? 332 'TestPayPalConfigById' test.out

#- 333 UpdateStripeConfig
# body param: body
echo '{"allowedPaymentMethodTypes": ["sDMYpQyH", "Iyu1YJRV", "N6zm7Vtl"], "publishableKey": "i4zPKJrP", "secretKey": "zfUGBgnB", "webhookSecret": "yTg1aQLN"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateStripeConfig \
    --id 'wbrzptNq' \
    --sandbox 'false' \
    --validate 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 333 'UpdateStripeConfig' test.out

#- 334 TestStripeConfigById
$CLI_EXE \
    --sn platform \
    --op TestStripeConfigById \
    --id 'c8dIfD6F' \
    --sandbox 'true' \
    > test.out 2>&1
eval_tap $? 334 'TestStripeConfigById' test.out

#- 335 UpdateWxPayConfig
# body param: body
echo '{"appId": "x3FJoyZW", "key": "As8kiSOE", "mchid": "1DJDnHJq", "returnUrl": "bIgkWHvg"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateWxPayConfig \
    --id '4KMooQMB' \
    --validate 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 335 'UpdateWxPayConfig' test.out

#- 336 UpdateWxPayConfigCert
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UpdateWxPayConfigCert \
    --id 'ynCsbPCq' \
    --upload file $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 336 'UpdateWxPayConfigCert' test.out

#- 337 TestWxPayConfigById
$CLI_EXE \
    --sn platform \
    --op TestWxPayConfigById \
    --id 'mqvyYLMN' \
    > test.out 2>&1
eval_tap $? 337 'TestWxPayConfigById' test.out

#- 338 UpdateXsollaConfig
# body param: body
echo '{"apiKey": "MsY3S9FZ", "flowCompletionUrl": "aoP3MVMu", "merchantId": 1, "projectId": 5, "projectSecretKey": "ZUBD39HK"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXsollaConfig \
    --id '2M0k8vQC' \
    --validate 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 338 'UpdateXsollaConfig' test.out

#- 339 TestXsollaConfigById
$CLI_EXE \
    --sn platform \
    --op TestXsollaConfigById \
    --id 'svruW1jD' \
    > test.out 2>&1
eval_tap $? 339 'TestXsollaConfigById' test.out

#- 340 UpdateXsollaUIConfig
# body param: body
echo '{"device": "MOBILE", "showCloseButton": false, "size": "SMALL", "theme": "DARK"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXsollaUIConfig \
    --id 'o1pdYknK' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 340 'UpdateXsollaUIConfig' test.out

#- 341 QueryPaymentProviderConfig
$CLI_EXE \
    --sn platform \
    --op QueryPaymentProviderConfig \
    --limit '38' \
    --namespace_ 'Dtdcajdo' \
    --offset '8' \
    --region 'wwzF58DN' \
    > test.out 2>&1
eval_tap $? 341 'QueryPaymentProviderConfig' test.out

#- 342 CreatePaymentProviderConfig
# body param: body
echo '{"aggregate": "XSOLLA", "namespace": "qV562aov", "region": "JE3tiPac", "sandboxTaxJarApiToken": "jyuEMlWA", "specials": ["WALLET", "PAYPAL", "PAYPAL"], "taxJarApiToken": "M13gFqmm", "taxJarEnabled": true, "useGlobalTaxJarApiToken": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreatePaymentProviderConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 342 'CreatePaymentProviderConfig' test.out

#- 343 GetAggregatePaymentProviders
$CLI_EXE \
    --sn platform \
    --op GetAggregatePaymentProviders \
    > test.out 2>&1
eval_tap $? 343 'GetAggregatePaymentProviders' test.out

#- 344 DebugMatchedPaymentProviderConfig
$CLI_EXE \
    --sn platform \
    --op DebugMatchedPaymentProviderConfig \
    --namespace_ 'VobHEEft' \
    --region 'sDPiG9qf' \
    > test.out 2>&1
eval_tap $? 344 'DebugMatchedPaymentProviderConfig' test.out

#- 345 GetSpecialPaymentProviders
$CLI_EXE \
    --sn platform \
    --op GetSpecialPaymentProviders \
    > test.out 2>&1
eval_tap $? 345 'GetSpecialPaymentProviders' test.out

#- 346 UpdatePaymentProviderConfig
# body param: body
echo '{"aggregate": "XSOLLA", "namespace": "8XktyRIu", "region": "CnuAqhby", "sandboxTaxJarApiToken": "mA7RCvq2", "specials": ["XSOLLA", "WXPAY", "WXPAY"], "taxJarApiToken": "kCY0MDxl", "taxJarEnabled": false, "useGlobalTaxJarApiToken": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePaymentProviderConfig \
    --id 'h44Co69Z' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 346 'UpdatePaymentProviderConfig' test.out

#- 347 DeletePaymentProviderConfig
$CLI_EXE \
    --sn platform \
    --op DeletePaymentProviderConfig \
    --id '4e42Z5rq' \
    > test.out 2>&1
eval_tap $? 347 'DeletePaymentProviderConfig' test.out

#- 348 GetPaymentTaxConfig
$CLI_EXE \
    --sn platform \
    --op GetPaymentTaxConfig \
    > test.out 2>&1
eval_tap $? 348 'GetPaymentTaxConfig' test.out

#- 349 UpdatePaymentTaxConfig
# body param: body
echo '{"sandboxTaxJarApiToken": "dtJegnnI", "taxJarApiToken": "6tEgluEw", "taxJarEnabled": true, "taxJarProductCodesMapping": {"7NZFtWfa": "RA8xdojf", "poXYeUhy": "UjnEoVQY", "BYyW1rZu": "TkoP4yH0"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePaymentTaxConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 349 'UpdatePaymentTaxConfig' test.out

#- 350 SyncPaymentOrders
$CLI_EXE \
    --sn platform \
    --op SyncPaymentOrders \
    --nextEvaluatedKey 'n1aebYwc' \
    --end 'SsscYsTi' \
    --start 'Zcge9yEg' \
    > test.out 2>&1
eval_tap $? 350 'SyncPaymentOrders' test.out

#- 351 PublicGetRootCategories
$CLI_EXE \
    --sn platform \
    --op PublicGetRootCategories \
    --namespace $AB_NAMESPACE \
    --language 'vZ1GiVho' \
    --storeId 'EMgWGa9h' \
    > test.out 2>&1
eval_tap $? 351 'PublicGetRootCategories' test.out

#- 352 DownloadCategories
$CLI_EXE \
    --sn platform \
    --op DownloadCategories \
    --namespace $AB_NAMESPACE \
    --language 'LLuQImhW' \
    --storeId 'yE5LvDhh' \
    > test.out 2>&1
eval_tap $? 352 'DownloadCategories' test.out

#- 353 PublicGetCategory
$CLI_EXE \
    --sn platform \
    --op PublicGetCategory \
    --categoryPath '98sF6c7z' \
    --namespace $AB_NAMESPACE \
    --language 'FpUXfj3X' \
    --storeId 'VsCavbx7' \
    > test.out 2>&1
eval_tap $? 353 'PublicGetCategory' test.out

#- 354 PublicGetChildCategories
$CLI_EXE \
    --sn platform \
    --op PublicGetChildCategories \
    --categoryPath 'Zh0vCQGq' \
    --namespace $AB_NAMESPACE \
    --language '9SVHStnI' \
    --storeId 'mVpgT3sg' \
    > test.out 2>&1
eval_tap $? 354 'PublicGetChildCategories' test.out

#- 355 PublicGetDescendantCategories
$CLI_EXE \
    --sn platform \
    --op PublicGetDescendantCategories \
    --categoryPath 'knwBWZUd' \
    --namespace $AB_NAMESPACE \
    --language 'uZL2so2r' \
    --storeId '9f2Nhcc7' \
    > test.out 2>&1
eval_tap $? 355 'PublicGetDescendantCategories' test.out

#- 356 PublicListCurrencies
$CLI_EXE \
    --sn platform \
    --op PublicListCurrencies \
    --namespace $AB_NAMESPACE \
    --currencyType 'REAL' \
    > test.out 2>&1
eval_tap $? 356 'PublicListCurrencies' test.out

#- 357 GeDLCDurableRewardShortMap
$CLI_EXE \
    --sn platform \
    --op GeDLCDurableRewardShortMap \
    --namespace $AB_NAMESPACE \
    --dlcType 'EPICGAMES' \
    > test.out 2>&1
eval_tap $? 357 'GeDLCDurableRewardShortMap' test.out

#- 358 GetIAPItemMapping
$CLI_EXE \
    --sn platform \
    --op GetIAPItemMapping \
    --namespace $AB_NAMESPACE \
    --platform 'APPLE' \
    > test.out 2>&1
eval_tap $? 358 'GetIAPItemMapping' test.out

#- 359 PublicGetItemByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetItemByAppId \
    --namespace $AB_NAMESPACE \
    --language 'JMA3J5Pb' \
    --region 'O80Exu7H' \
    --storeId 'I9uyb3lV' \
    --appId 'f4xqGJOY' \
    > test.out 2>&1
eval_tap $? 359 'PublicGetItemByAppId' test.out

#- 360 PublicQueryItems
$CLI_EXE \
    --sn platform \
    --op PublicQueryItems \
    --namespace $AB_NAMESPACE \
    --appType 'SOFTWARE' \
    --autoCalcEstimatedPrice 'false' \
    --baseAppId '5YDWF1uC' \
    --categoryPath 'I9JZSc8m' \
    --features 'Y8tBeUWe' \
    --includeSubCategoryItem 'false' \
    --itemType 'BUNDLE' \
    --language 'axTfwocS' \
    --limit '96' \
    --offset '45' \
    --region '0j3qY0Ym' \
    --sortBy '["displayOrder", "name", "updatedAt:asc"]' \
    --storeId 'uj7I4Ydj' \
    --tags 'jNcabJ53' \
    > test.out 2>&1
eval_tap $? 360 'PublicQueryItems' test.out

#- 361 PublicGetItemBySku
$CLI_EXE \
    --sn platform \
    --op PublicGetItemBySku \
    --namespace $AB_NAMESPACE \
    --autoCalcEstimatedPrice 'false' \
    --language 'UQxCjSyc' \
    --region 'jmcw7uoH' \
    --storeId 'omXRtyq8' \
    --sku '8jqIYTL8' \
    > test.out 2>&1
eval_tap $? 361 'PublicGetItemBySku' test.out

#- 362 PublicGetEstimatedPrice
$CLI_EXE \
    --sn platform \
    --op PublicGetEstimatedPrice \
    --namespace $AB_NAMESPACE \
    --region 'vPeY7jsS' \
    --storeId 'wGqucff8' \
    --itemIds 'IQraNkFI' \
    > test.out 2>&1
eval_tap $? 362 'PublicGetEstimatedPrice' test.out

#- 363 PublicBulkGetItems
$CLI_EXE \
    --sn platform \
    --op PublicBulkGetItems \
    --namespace $AB_NAMESPACE \
    --autoCalcEstimatedPrice 'true' \
    --language '2Zv3JBuW' \
    --region '3iM1QNEL' \
    --storeId 'cPSa5VHz' \
    --itemIds 'N4gG1Oly' \
    > test.out 2>&1
eval_tap $? 363 'PublicBulkGetItems' test.out

#- 364 PublicValidateItemPurchaseCondition
# body param: body
echo '{"itemIds": ["tMk6ZRRQ", "y39m72Bp", "mwAso2H8"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicValidateItemPurchaseCondition \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 364 'PublicValidateItemPurchaseCondition' test.out

#- 365 PublicSearchItems
$CLI_EXE \
    --sn platform \
    --op PublicSearchItems \
    --namespace $AB_NAMESPACE \
    --autoCalcEstimatedPrice 'true' \
    --itemType 'INGAMEITEM' \
    --limit '50' \
    --offset '57' \
    --region '4JBkX0Bi' \
    --storeId 'rvuhPAuC' \
    --keyword 'dmLh9F6k' \
    --language 'nMGGE7Ae' \
    > test.out 2>&1
eval_tap $? 365 'PublicSearchItems' test.out

#- 366 PublicGetApp
$CLI_EXE \
    --sn platform \
    --op PublicGetApp \
    --itemId 'bIJdRGP3' \
    --namespace $AB_NAMESPACE \
    --language 'jJs6L8Iq' \
    --region 'XHE4XumR' \
    --storeId 'Lbd8d7WX' \
    > test.out 2>&1
eval_tap $? 366 'PublicGetApp' test.out

#- 367 PublicGetItemDynamicData
$CLI_EXE \
    --sn platform \
    --op PublicGetItemDynamicData \
    --itemId 'Oqb4XSSI' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 367 'PublicGetItemDynamicData' test.out

#- 368 PublicGetItem
$CLI_EXE \
    --sn platform \
    --op PublicGetItem \
    --itemId 'td7gjs7w' \
    --namespace $AB_NAMESPACE \
    --autoCalcEstimatedPrice 'false' \
    --language 'uQF28ZnS' \
    --populateBundle 'true' \
    --region 'NkJEcZdi' \
    --storeId 'BjvVKTTL' \
    > test.out 2>&1
eval_tap $? 368 'PublicGetItem' test.out

#- 369 GetPaymentCustomization
eval_tap 0 369 'GetPaymentCustomization # SKIP deprecated' test.out

#- 370 PublicGetPaymentUrl
# body param: body
echo '{"paymentOrderNo": "7GcsdqKA", "paymentProvider": "XSOLLA", "returnUrl": "4zBqaHt5", "ui": "5sJdZdCR", "zipCode": "sx3QNfDQ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicGetPaymentUrl \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 370 'PublicGetPaymentUrl' test.out

#- 371 PublicGetPaymentMethods
$CLI_EXE \
    --sn platform \
    --op PublicGetPaymentMethods \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'zyAmjUgD' \
    > test.out 2>&1
eval_tap $? 371 'PublicGetPaymentMethods' test.out

#- 372 PublicGetUnpaidPaymentOrder
$CLI_EXE \
    --sn platform \
    --op PublicGetUnpaidPaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'pShqcv4Q' \
    > test.out 2>&1
eval_tap $? 372 'PublicGetUnpaidPaymentOrder' test.out

#- 373 Pay
# body param: body
echo '{"token": "4pwfUrd7"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op Pay \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo '39QRceGX' \
    --paymentProvider 'WALLET' \
    --zipCode 'Qb7sOhVi' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 373 'Pay' test.out

#- 374 PublicCheckPaymentOrderPaidStatus
$CLI_EXE \
    --sn platform \
    --op PublicCheckPaymentOrderPaidStatus \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo '2QlM8Qoj' \
    > test.out 2>&1
eval_tap $? 374 'PublicCheckPaymentOrderPaidStatus' test.out

#- 375 GetPaymentPublicConfig
$CLI_EXE \
    --sn platform \
    --op GetPaymentPublicConfig \
    --namespace $AB_NAMESPACE \
    --sandbox 'true' \
    --paymentProvider 'CHECKOUT' \
    --region 'I9vhMKYI' \
    > test.out 2>&1
eval_tap $? 375 'GetPaymentPublicConfig' test.out

#- 376 PublicGetQRCode
$CLI_EXE \
    --sn platform \
    --op PublicGetQRCode \
    --namespace $AB_NAMESPACE \
    --code '6WI4OS0a' \
    > test.out 2>&1
eval_tap $? 376 'PublicGetQRCode' test.out

#- 377 PublicNormalizePaymentReturnUrl
$CLI_EXE \
    --sn platform \
    --op PublicNormalizePaymentReturnUrl \
    --namespace $AB_NAMESPACE \
    --payerID 'supXQjU6' \
    --foreinginvoice 'oDVzLZ1H' \
    --invoiceId 'jJw1gZVD' \
    --payload '09qkD6kE' \
    --redirectResult 'EGWQkORt' \
    --resultCode 'AhhA5gNN' \
    --sessionId 'kzwcUGTq' \
    --status 'FRwrmxA6' \
    --token 'ztwk2a3n' \
    --type '34uS1jkV' \
    --userId 'ix9dmt7Y' \
    --orderNo 'F1FF952a' \
    --paymentOrderNo 'PkMD0H7V' \
    --paymentProvider 'ADYEN' \
    --returnUrl 'afduOSD7' \
    > test.out 2>&1
eval_tap $? 377 'PublicNormalizePaymentReturnUrl' test.out

#- 378 GetPaymentTaxValue
$CLI_EXE \
    --sn platform \
    --op GetPaymentTaxValue \
    --namespace $AB_NAMESPACE \
    --zipCode '6plXVS6n' \
    --paymentOrderNo 'WZdeSsxB' \
    --paymentProvider 'WXPAY' \
    > test.out 2>&1
eval_tap $? 378 'GetPaymentTaxValue' test.out

#- 379 GetRewardByCode
$CLI_EXE \
    --sn platform \
    --op GetRewardByCode \
    --namespace $AB_NAMESPACE \
    --rewardCode 'qX7oV3Qr' \
    > test.out 2>&1
eval_tap $? 379 'GetRewardByCode' test.out

#- 380 QueryRewards1
$CLI_EXE \
    --sn platform \
    --op QueryRewards1 \
    --namespace $AB_NAMESPACE \
    --eventTopic '19gBxhis' \
    --limit '73' \
    --offset '45' \
    --sortBy '["namespace", "rewardCode:desc", "namespace:asc"]' \
    > test.out 2>&1
eval_tap $? 380 'QueryRewards1' test.out

#- 381 GetReward1
$CLI_EXE \
    --sn platform \
    --op GetReward1 \
    --namespace $AB_NAMESPACE \
    --rewardId '9rcNNprn' \
    > test.out 2>&1
eval_tap $? 381 'GetReward1' test.out

#- 382 PublicListStores
$CLI_EXE \
    --sn platform \
    --op PublicListStores \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 382 'PublicListStores' test.out

#- 383 PublicExistsAnyMyActiveEntitlement
$CLI_EXE \
    --sn platform \
    --op PublicExistsAnyMyActiveEntitlement \
    --namespace $AB_NAMESPACE \
    --appIds '["mQRTCf5e", "A4sEd0VM", "YjIdJu5P"]' \
    --itemIds '["BNFhhgC6", "Tucfw7HI", "OxPSA59d"]' \
    --skus '["9Tt4cFjA", "LeHRYn4I", "wskFkYKE"]' \
    > test.out 2>&1
eval_tap $? 383 'PublicExistsAnyMyActiveEntitlement' test.out

#- 384 PublicGetMyAppEntitlementOwnershipByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetMyAppEntitlementOwnershipByAppId \
    --namespace $AB_NAMESPACE \
    --appId 'PRTB37Jx' \
    > test.out 2>&1
eval_tap $? 384 'PublicGetMyAppEntitlementOwnershipByAppId' test.out

#- 385 PublicGetMyEntitlementOwnershipByItemId
$CLI_EXE \
    --sn platform \
    --op PublicGetMyEntitlementOwnershipByItemId \
    --namespace $AB_NAMESPACE \
    --entitlementClazz 'APP' \
    --itemId 'iuT7n7CT' \
    > test.out 2>&1
eval_tap $? 385 'PublicGetMyEntitlementOwnershipByItemId' test.out

#- 386 PublicGetMyEntitlementOwnershipBySku
$CLI_EXE \
    --sn platform \
    --op PublicGetMyEntitlementOwnershipBySku \
    --namespace $AB_NAMESPACE \
    --entitlementClazz 'OPTIONBOX' \
    --sku 'p3Dzl6YJ' \
    > test.out 2>&1
eval_tap $? 386 'PublicGetMyEntitlementOwnershipBySku' test.out

#- 387 PublicGetEntitlementOwnershipToken
$CLI_EXE \
    --sn platform \
    --op PublicGetEntitlementOwnershipToken \
    --namespace $AB_NAMESPACE \
    --appIds '["LzRYooZn", "qR5YkuDd", "lUpYUeEo"]' \
    --itemIds '["3su1tQbK", "VjKeBb4c", "fbGl1UJj"]' \
    --skus '["mUhYpH4g", "vodu3Rda", "JhDg35Dd"]' \
    > test.out 2>&1
eval_tap $? 387 'PublicGetEntitlementOwnershipToken' test.out

#- 388 SyncTwitchDropsEntitlement
# body param: body
echo '{"gameId": "MJOwCGWK", "language": "bYx-LKnV", "region": "KHv8siNo"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncTwitchDropsEntitlement \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 388 'SyncTwitchDropsEntitlement' test.out

#- 389 PublicGetMyWallet
$CLI_EXE \
    --sn platform \
    --op PublicGetMyWallet \
    --currencyCode 'xRglVSQH' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 389 'PublicGetMyWallet' test.out

#- 390 SyncEpicGameDLC
# body param: body
echo '{"epicGamesJwtToken": "eBjDkm1d"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncEpicGameDLC \
    --namespace $AB_NAMESPACE \
    --userId '3zuKaJvH' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 390 'SyncEpicGameDLC' test.out

#- 391 SyncOculusDLC
$CLI_EXE \
    --sn platform \
    --op SyncOculusDLC \
    --namespace $AB_NAMESPACE \
    --userId 'EfB3mh1P' \
    > test.out 2>&1
eval_tap $? 391 'SyncOculusDLC' test.out

#- 392 PublicSyncPsnDlcInventory
# body param: body
echo '{"serviceLabel": 96}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicSyncPsnDlcInventory \
    --namespace $AB_NAMESPACE \
    --userId '2ihxeO52' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 392 'PublicSyncPsnDlcInventory' test.out

#- 393 PublicSyncPsnDlcInventoryWithMultipleServiceLabels
# body param: body
echo '{"serviceLabels": [19, 4, 93]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicSyncPsnDlcInventoryWithMultipleServiceLabels \
    --namespace $AB_NAMESPACE \
    --userId 'PyQYGKkC' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 393 'PublicSyncPsnDlcInventoryWithMultipleServiceLabels' test.out

#- 394 SyncSteamDLC
# body param: body
echo '{"appId": "HMLUBD9d", "steamId": "m8fX0k6b"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncSteamDLC \
    --namespace $AB_NAMESPACE \
    --userId 'vBz7w8Yn' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 394 'SyncSteamDLC' test.out

#- 395 SyncXboxDLC
# body param: body
echo '{"xstsToken": "ES4H7h6r"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncXboxDLC \
    --namespace $AB_NAMESPACE \
    --userId 'nnvGHCHQ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 395 'SyncXboxDLC' test.out

#- 396 PublicQueryUserEntitlements
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserEntitlements \
    --namespace $AB_NAMESPACE \
    --userId 'HF7E1UZj' \
    --appType 'DEMO' \
    --entitlementClazz 'ENTITLEMENT' \
    --entitlementName 'Vaq9kpIM' \
    --features '["fcxGo9w7", "DjSwYXIp", "Ozee2USl"]' \
    --itemId '["AiBjTNwn", "VyeOIwzo", "AEq8BAb0"]' \
    --limit '27' \
    --offset '18' \
    > test.out 2>&1
eval_tap $? 396 'PublicQueryUserEntitlements' test.out

#- 397 PublicGetUserAppEntitlementByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetUserAppEntitlementByAppId \
    --namespace $AB_NAMESPACE \
    --userId 'P2eox76E' \
    --appId 'Vqkt8SsM' \
    > test.out 2>&1
eval_tap $? 397 'PublicGetUserAppEntitlementByAppId' test.out

#- 398 PublicQueryUserEntitlementsByAppType
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserEntitlementsByAppType \
    --namespace $AB_NAMESPACE \
    --userId 'LYbaweig' \
    --limit '6' \
    --offset '22' \
    --appType 'DLC' \
    > test.out 2>&1
eval_tap $? 398 'PublicQueryUserEntitlementsByAppType' test.out

#- 399 PublicGetUserEntitlementsByIds
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementsByIds \
    --namespace $AB_NAMESPACE \
    --userId '0Xg1bh5v' \
    --availablePlatformOnly 'false' \
    --ids '["JpeWOpwD", "cfe0XrGL", "JC2mykCU"]' \
    > test.out 2>&1
eval_tap $? 399 'PublicGetUserEntitlementsByIds' test.out

#- 400 PublicGetUserEntitlementByItemId
eval_tap 0 400 'PublicGetUserEntitlementByItemId # SKIP deprecated' test.out

#- 401 PublicGetUserEntitlementBySku
eval_tap 0 401 'PublicGetUserEntitlementBySku # SKIP deprecated' test.out

#- 402 PublicUserEntitlementHistory
$CLI_EXE \
    --sn platform \
    --op PublicUserEntitlementHistory \
    --namespace $AB_NAMESPACE \
    --userId 'MpyV7c7Y' \
    --endDate 'NInHKb7G' \
    --entitlementClazz 'SUBSCRIPTION' \
    --limit '1' \
    --offset '83' \
    --startDate 'BsxSKljA' \
    > test.out 2>&1
eval_tap $? 402 'PublicUserEntitlementHistory' test.out

#- 403 PublicExistsAnyUserActiveEntitlement
$CLI_EXE \
    --sn platform \
    --op PublicExistsAnyUserActiveEntitlement \
    --namespace $AB_NAMESPACE \
    --userId '4wv8AMr5' \
    --appIds '["AtEORMaU", "NGTiOSPa", "bwJHLj4L"]' \
    --itemIds '["R2jQ7KVg", "gcCwbpzf", "lTNpgdZu"]' \
    --skus '["Kz87j58b", "Z4Csc6gW", "TFeCprOh"]' \
    > test.out 2>&1
eval_tap $? 403 'PublicExistsAnyUserActiveEntitlement' test.out

#- 404 PublicGetUserAppEntitlementOwnershipByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetUserAppEntitlementOwnershipByAppId \
    --namespace $AB_NAMESPACE \
    --userId 'Ux9YlZNW' \
    --appId 'rY7ExlCh' \
    > test.out 2>&1
eval_tap $? 404 'PublicGetUserAppEntitlementOwnershipByAppId' test.out

#- 405 PublicGetUserEntitlementOwnershipByItemId
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementOwnershipByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'hYkJ4Uz4' \
    --entitlementClazz 'OPTIONBOX' \
    --itemId 'kyKgCALg' \
    > test.out 2>&1
eval_tap $? 405 'PublicGetUserEntitlementOwnershipByItemId' test.out

#- 406 PublicGetUserEntitlementOwnershipByItemIds
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementOwnershipByItemIds \
    --namespace $AB_NAMESPACE \
    --userId 'aLDoW2OU' \
    --ids '["OE1g57O7", "2U9xOukj", "VG4nibL9"]' \
    > test.out 2>&1
eval_tap $? 406 'PublicGetUserEntitlementOwnershipByItemIds' test.out

#- 407 PublicGetUserEntitlementOwnershipBySku
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementOwnershipBySku \
    --namespace $AB_NAMESPACE \
    --userId 'KwssBntf' \
    --entitlementClazz 'LOOTBOX' \
    --sku 'kuRpdzqL' \
    > test.out 2>&1
eval_tap $? 407 'PublicGetUserEntitlementOwnershipBySku' test.out

#- 408 PublicGetUserEntitlement
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlement \
    --entitlementId 'ApdzdmCe' \
    --namespace $AB_NAMESPACE \
    --userId 'TN02ElXS' \
    > test.out 2>&1
eval_tap $? 408 'PublicGetUserEntitlement' test.out

#- 409 PublicConsumeUserEntitlement
# body param: body
echo '{"options": ["W51E4pbe", "GPvetEob", "jqHhHijk"], "requestId": "J3IaTIH2", "useCount": 68}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicConsumeUserEntitlement \
    --entitlementId 'VU3CkObH' \
    --namespace $AB_NAMESPACE \
    --userId 'lMPuUC3g' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 409 'PublicConsumeUserEntitlement' test.out

#- 410 PublicSellUserEntitlement
# body param: body
echo '{"requestId": "isoTtAxe", "useCount": 25}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicSellUserEntitlement \
    --entitlementId 'PQxffLYu' \
    --namespace $AB_NAMESPACE \
    --userId 'CFaNzE4z' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 410 'PublicSellUserEntitlement' test.out

#- 411 PublicSplitUserEntitlement
# body param: body
echo '{"useCount": 96}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicSplitUserEntitlement \
    --entitlementId 'BlLDj51P' \
    --namespace $AB_NAMESPACE \
    --userId 'OfNa4z4n' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 411 'PublicSplitUserEntitlement' test.out

#- 412 PublicTransferUserEntitlement
# body param: body
echo '{"entitlementId": "khKXlIiB", "useCount": 74}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicTransferUserEntitlement \
    --entitlementId '8mJXnaf4' \
    --namespace $AB_NAMESPACE \
    --userId '1BMjkDCO' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 412 'PublicTransferUserEntitlement' test.out

#- 413 PublicRedeemCode
# body param: body
echo '{"code": "spsxRfwt", "language": "dpf", "region": "ddiZkrAY"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicRedeemCode \
    --namespace $AB_NAMESPACE \
    --userId 'O07RPEz2' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 413 'PublicRedeemCode' test.out

#- 414 PublicFulfillAppleIAPItem
# body param: body
echo '{"excludeOldTransactions": true, "language": "hB-354", "productId": "qvS1K8XH", "receiptData": "C2ZbQN3Q", "region": "Wk2NGrPA", "transactionId": "w789KJ1l"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicFulfillAppleIAPItem \
    --namespace $AB_NAMESPACE \
    --userId 'VgmcBspr' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 414 'PublicFulfillAppleIAPItem' test.out

#- 415 SyncEpicGamesInventory
# body param: body
echo '{"epicGamesJwtToken": "Bi2Oo0kW"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncEpicGamesInventory \
    --namespace $AB_NAMESPACE \
    --userId 'fxj6vDgm' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 415 'SyncEpicGamesInventory' test.out

#- 416 PublicFulfillGoogleIAPItem
# body param: body
echo '{"autoAck": true, "language": "Vwl-547", "orderId": "oL6rqzGk", "packageName": "c1BjIZSm", "productId": "gwfJQhth", "purchaseTime": 65, "purchaseToken": "3kcrn9Pt", "region": "VlKOFwjX"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicFulfillGoogleIAPItem \
    --namespace $AB_NAMESPACE \
    --userId 'NeqsP87g' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 416 'PublicFulfillGoogleIAPItem' test.out

#- 417 SyncOculusConsumableEntitlements
$CLI_EXE \
    --sn platform \
    --op SyncOculusConsumableEntitlements \
    --namespace $AB_NAMESPACE \
    --userId '5LETnfw4' \
    > test.out 2>&1
eval_tap $? 417 'SyncOculusConsumableEntitlements' test.out

#- 418 PublicReconcilePlayStationStore
# body param: body
echo '{"currencyCode": "OF6ARder", "price": 0.98556248092698, "productId": "NVeW9dR2", "serviceLabel": 3}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicReconcilePlayStationStore \
    --namespace $AB_NAMESPACE \
    --userId '2DLpBxRy' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 418 'PublicReconcilePlayStationStore' test.out

#- 419 PublicReconcilePlayStationStoreWithMultipleServiceLabels
# body param: body
echo '{"currencyCode": "E9bVmmrf", "price": 0.2042660366761263, "productId": "W6yUMZMI", "serviceLabels": [34, 83, 100]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicReconcilePlayStationStoreWithMultipleServiceLabels \
    --namespace $AB_NAMESPACE \
    --userId 'QOzeYMdw' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 419 'PublicReconcilePlayStationStoreWithMultipleServiceLabels' test.out

#- 420 SyncSteamInventory
# body param: body
echo '{"appId": "7y8FTFK4", "currencyCode": "3zUdWhCW", "language": "Bg_eMsd", "price": 0.31584890875171734, "productId": "8UnGdaA0", "region": "fkDMMhJe", "steamId": "PeslQPyd"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncSteamInventory \
    --namespace $AB_NAMESPACE \
    --userId 'FkLUu6UW' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 420 'SyncSteamInventory' test.out

#- 421 SyncTwitchDropsEntitlement1
# body param: body
echo '{"gameId": "oH9FLHkl", "language": "ssy-QTHs", "region": "1PpA98kb"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncTwitchDropsEntitlement1 \
    --namespace $AB_NAMESPACE \
    --userId 'JFySoPjD' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 421 'SyncTwitchDropsEntitlement1' test.out

#- 422 SyncXboxInventory
# body param: body
echo '{"currencyCode": "GWPb8zpj", "price": 0.5810495722552235, "productId": "0lF3O0Uq", "xstsToken": "1DvvFA58"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncXboxInventory \
    --namespace $AB_NAMESPACE \
    --userId 'kSKtQDvP' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 422 'SyncXboxInventory' test.out

#- 423 PublicQueryUserOrders
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserOrders \
    --namespace $AB_NAMESPACE \
    --userId 'nCm6Bm8l' \
    --itemId 'EM1le6es' \
    --limit '80' \
    --offset '95' \
    --status 'CHARGEBACK' \
    > test.out 2>&1
eval_tap $? 423 'PublicQueryUserOrders' test.out

#- 424 PublicCreateUserOrder
# body param: body
echo '{"currencyCode": "LtKwFpnG", "discountedPrice": 36, "ext": {"y7OwDzcD": {}, "5LCuUmYU": {}, "ZLgyQPge": {}}, "itemId": "zY12L8RL", "language": "WE", "price": 83, "quantity": 53, "region": "0tiISkRz", "returnUrl": "OdphlhkQ", "sectionId": "EUVM2OTI"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicCreateUserOrder \
    --namespace $AB_NAMESPACE \
    --userId 'QzosBJib' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 424 'PublicCreateUserOrder' test.out

#- 425 PublicGetUserOrder
$CLI_EXE \
    --sn platform \
    --op PublicGetUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'sTNq9BnG' \
    --userId 'FmJgxsFc' \
    > test.out 2>&1
eval_tap $? 425 'PublicGetUserOrder' test.out

#- 426 PublicCancelUserOrder
$CLI_EXE \
    --sn platform \
    --op PublicCancelUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'LOeQX7N6' \
    --userId 'z0FgwMhy' \
    > test.out 2>&1
eval_tap $? 426 'PublicCancelUserOrder' test.out

#- 427 PublicGetUserOrderHistories
$CLI_EXE \
    --sn platform \
    --op PublicGetUserOrderHistories \
    --namespace $AB_NAMESPACE \
    --orderNo 'SS0oMnWI' \
    --userId 'EoX6BgZy' \
    > test.out 2>&1
eval_tap $? 427 'PublicGetUserOrderHistories' test.out

#- 428 PublicDownloadUserOrderReceipt
$CLI_EXE \
    --sn platform \
    --op PublicDownloadUserOrderReceipt \
    --namespace $AB_NAMESPACE \
    --orderNo 'kRkANGpq' \
    --userId 'vNuJrLAO' \
    > test.out 2>&1
eval_tap $? 428 'PublicDownloadUserOrderReceipt' test.out

#- 429 PublicGetPaymentAccounts
$CLI_EXE \
    --sn platform \
    --op PublicGetPaymentAccounts \
    --namespace $AB_NAMESPACE \
    --userId '9VHz1p1q' \
    > test.out 2>&1
eval_tap $? 429 'PublicGetPaymentAccounts' test.out

#- 430 PublicDeletePaymentAccount
$CLI_EXE \
    --sn platform \
    --op PublicDeletePaymentAccount \
    --id 'aNrnmQdk' \
    --namespace $AB_NAMESPACE \
    --type 'paypal' \
    --userId 'Jvz0upu0' \
    > test.out 2>&1
eval_tap $? 430 'PublicDeletePaymentAccount' test.out

#- 431 PublicListActiveSections
$CLI_EXE \
    --sn platform \
    --op PublicListActiveSections \
    --namespace $AB_NAMESPACE \
    --userId 'ld5mBmTT' \
    --autoCalcEstimatedPrice 'false' \
    --language 'cKWG4122' \
    --region 'Viddvx8H' \
    --storeId 'XYmhCIDZ' \
    --viewId 'O97POfHs' \
    > test.out 2>&1
eval_tap $? 431 'PublicListActiveSections' test.out

#- 432 PublicQueryUserSubscriptions
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserSubscriptions \
    --namespace $AB_NAMESPACE \
    --userId 'Ir7A4hwP' \
    --chargeStatus 'CHARGED' \
    --itemId 'NPTxIwhM' \
    --limit '38' \
    --offset '9' \
    --sku 'jds8PlZ9' \
    --status 'EXPIRED' \
    --subscribedBy 'USER' \
    > test.out 2>&1
eval_tap $? 432 'PublicQueryUserSubscriptions' test.out

#- 433 PublicSubscribeSubscription
# body param: body
echo '{"currencyCode": "nmVEmnuG", "itemId": "VPGRJrA6", "language": "qtu", "region": "1g8WMIIf", "returnUrl": "lUah7vvb", "source": "JFfRMEVJ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicSubscribeSubscription \
    --namespace $AB_NAMESPACE \
    --userId 'LupfGMQh' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 433 'PublicSubscribeSubscription' test.out

#- 434 PublicCheckUserSubscriptionSubscribableByItemId
$CLI_EXE \
    --sn platform \
    --op PublicCheckUserSubscriptionSubscribableByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'oxHxUDcr' \
    --itemId 'cVXKwCVs' \
    > test.out 2>&1
eval_tap $? 434 'PublicCheckUserSubscriptionSubscribableByItemId' test.out

#- 435 PublicGetUserSubscription
$CLI_EXE \
    --sn platform \
    --op PublicGetUserSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 's1siAATJ' \
    --userId '7GHkZV1f' \
    > test.out 2>&1
eval_tap $? 435 'PublicGetUserSubscription' test.out

#- 436 PublicChangeSubscriptionBillingAccount
$CLI_EXE \
    --sn platform \
    --op PublicChangeSubscriptionBillingAccount \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'xcen7HBx' \
    --userId 'ErG0lISM' \
    > test.out 2>&1
eval_tap $? 436 'PublicChangeSubscriptionBillingAccount' test.out

#- 437 PublicCancelSubscription
# body param: body
echo '{"immediate": false, "reason": "CHNAfpCT"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicCancelSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'XgnLmXQv' \
    --userId 'l0spiiF1' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 437 'PublicCancelSubscription' test.out

#- 438 PublicGetUserSubscriptionBillingHistories
$CLI_EXE \
    --sn platform \
    --op PublicGetUserSubscriptionBillingHistories \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'oKoLSDxZ' \
    --userId 'TBFVysSo' \
    --excludeFree 'false' \
    --limit '28' \
    --offset '96' \
    > test.out 2>&1
eval_tap $? 438 'PublicGetUserSubscriptionBillingHistories' test.out

#- 439 PublicListViews
$CLI_EXE \
    --sn platform \
    --op PublicListViews \
    --namespace $AB_NAMESPACE \
    --userId 'E1bWM3Ev' \
    --language 'xevETlaJ' \
    --storeId 'jEEDgV2W' \
    > test.out 2>&1
eval_tap $? 439 'PublicListViews' test.out

#- 440 PublicGetWallet
$CLI_EXE \
    --sn platform \
    --op PublicGetWallet \
    --currencyCode 'GFFyHgzl' \
    --namespace $AB_NAMESPACE \
    --userId 'k2gUL415' \
    > test.out 2>&1
eval_tap $? 440 'PublicGetWallet' test.out

#- 441 PublicListUserWalletTransactions
$CLI_EXE \
    --sn platform \
    --op PublicListUserWalletTransactions \
    --currencyCode '6XLvjDO8' \
    --namespace $AB_NAMESPACE \
    --userId 'yTM75poq' \
    --limit '73' \
    --offset '17' \
    > test.out 2>&1
eval_tap $? 441 'PublicListUserWalletTransactions' test.out

#- 442 QueryItems1
$CLI_EXE \
    --sn platform \
    --op QueryItems1 \
    --namespace $AB_NAMESPACE \
    --appType 'GAME' \
    --availableDate 'K1EJXxSu' \
    --baseAppId '1jSCrekq' \
    --categoryPath 'scpzuGHz' \
    --features '2XWR460t' \
    --includeSubCategoryItem 'false' \
    --itemName 'EtravqO6' \
    --itemStatus 'ACTIVE' \
    --itemType 'EXTENSION' \
    --limit '14' \
    --offset '97' \
    --region 'ncDpnHOX' \
    --sectionExclusive 'false' \
    --sortBy '["displayOrder:desc", "name:asc", "updatedAt:asc"]' \
    --storeId 'AyWBNUql' \
    --tags 'doFX1YlN' \
    --targetNamespace 'tsNLsY9a' \
    --withTotal 'true' \
    > test.out 2>&1
eval_tap $? 442 'QueryItems1' test.out

#- 443 ImportStore1
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op ImportStore1 \
    --namespace $AB_NAMESPACE \
    --storeId '5s7FGfhF' \
    --strictMode 'false' \
    --upload file $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 443 'ImportStore1' test.out

#- 444 ExportStore1
# body param: body
echo '{"itemIds": ["ow0LdwrX", "CrlVZq7y", "FmZk8WjN"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ExportStore1 \
    --namespace $AB_NAMESPACE \
    --storeId 'zJj4NkY3' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 444 'ExportStore1' test.out

#- 445 FulfillRewardsV2
# body param: body
echo '{"entitlementCollectionId": "beeapOyZ", "entitlementOrigin": "System", "metadata": {"SSAo54oN": {}, "cblHlsgv": {}, "wyrxVRa5": {}}, "origin": "Playstation", "rewards": [{"currency": {"currencyCode": "uxuITQZZ", "namespace": "p8Xchsqz"}, "item": {"itemId": "BVWCEq7f", "itemSku": "WlJq8OUq", "itemType": "r8xXfXxJ"}, "quantity": 77, "type": "ITEM"}, {"currency": {"currencyCode": "71lgnudN", "namespace": "ql419bGW"}, "item": {"itemId": "ckEnJtlY", "itemSku": "VjFkIfTj", "itemType": "O6sdzyvv"}, "quantity": 85, "type": "ITEM"}, {"currency": {"currencyCode": "LV2YIor5", "namespace": "qudHwQSn"}, "item": {"itemId": "1lw4qT5g", "itemSku": "wgPnjl9O", "itemType": "gu0mHDD0"}, "quantity": 21, "type": "CURRENCY"}], "source": "PURCHASE", "transactionId": "o7zFQHur"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op FulfillRewardsV2 \
    --namespace $AB_NAMESPACE \
    --userId 'GXWLKxX8' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 445 'FulfillRewardsV2' test.out


# remove artifacts
rm -f "$CLI_TOKEN_FILE"
rm -f "$TEMP_JSON_INPUT"
rm -f "$TEMP_FILE_UPLOAD"

exit $EXIT_CODE