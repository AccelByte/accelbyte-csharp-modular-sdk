#!/usr/bin/env bash

# Copyright (c) 2021 AccelByte Inc. All Rights Reserved.
# This is licensed software from AccelByte Inc, for limitations
# and restrictions contact your company contract manager.

# This code is generated by tool. DO NOT EDIT.

# Meta:
# - random seed: 
# - template file: 

# Instructions:
# - Run the Justice SDK Mock Server first before running this script.

export AB_BASE_URL="http://127.0.0.1:8080"
export AB_CLIENT_ID="admin"
export AB_CLIENT_SECRET="admin"
export AB_NAMESPACE="test"
export AB_APP_NAME="UnitTest"

EXIT_CODE=0

eval_tap() {
  if [ $1 -eq 0 ]; then
    echo "ok $2 - $3"
  else
    EXIT_CODE=1
    echo "not ok $2 - $3"
    sed 's/^/# /g' $4
  fi
  rm -f $4
}

CLI_EXE="AccelByte.Sdk.Sample.Cli"
CLI_TOKEN_FILE="$(dirname "$(which $CLI_EXE)")/token.json"
TEMP_JSON_INPUT="input_json.json"
TEMP_FILE_UPLOAD="file_upload.bin"

echo "TAP version 13"
echo "1..444"

#- 1 Login
$CLI_EXE --op login --lt user --user user --pass user > test.out 2>&1
eval_tap $? 1 'Login' test.out

if [ $EXIT_CODE -ne 0 ]; then
  echo "Bail out! Login failed."
  exit $EXIT_CODE
fi

# echo "foo" > "$CLI_TOKEN_FILE"

#- 2 ListFulfillmentScripts
$CLI_EXE \
    --sn platform \
    --op ListFulfillmentScripts \
    > test.out 2>&1
eval_tap $? 2 'ListFulfillmentScripts' test.out

#- 3 GetFulfillmentScript
$CLI_EXE \
    --sn platform \
    --op GetFulfillmentScript \
    --id 'qtyUsf7T' \
    > test.out 2>&1
eval_tap $? 3 'GetFulfillmentScript' test.out

#- 4 CreateFulfillmentScript
# body param: body
echo '{"grantDays": "YndrrpFG"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateFulfillmentScript \
    --id 'l7w3nVgQ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 4 'CreateFulfillmentScript' test.out

#- 5 DeleteFulfillmentScript
$CLI_EXE \
    --sn platform \
    --op DeleteFulfillmentScript \
    --id 'xcbMmruX' \
    > test.out 2>&1
eval_tap $? 5 'DeleteFulfillmentScript' test.out

#- 6 UpdateFulfillmentScript
# body param: body
echo '{"grantDays": "mrMNLQqB"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateFulfillmentScript \
    --id 'SHePG2p0' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 6 'UpdateFulfillmentScript' test.out

#- 7 ListItemTypeConfigs
$CLI_EXE \
    --sn platform \
    --op ListItemTypeConfigs \
    > test.out 2>&1
eval_tap $? 7 'ListItemTypeConfigs' test.out

#- 8 CreateItemTypeConfig
# body param: body
echo '{"clazz": "we7kbcww", "dryRun": false, "fulfillmentUrl": "pBvD7stl", "itemType": "SUBSCRIPTION", "purchaseConditionUrl": "hR9NmCWj"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateItemTypeConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 8 'CreateItemTypeConfig' test.out

#- 9 SearchItemTypeConfig
$CLI_EXE \
    --sn platform \
    --op SearchItemTypeConfig \
    --clazz 'TG2zTPcT' \
    --itemType 'APP' \
    > test.out 2>&1
eval_tap $? 9 'SearchItemTypeConfig' test.out

#- 10 GetItemTypeConfig
$CLI_EXE \
    --sn platform \
    --op GetItemTypeConfig \
    --id 'Jxodv8oF' \
    > test.out 2>&1
eval_tap $? 10 'GetItemTypeConfig' test.out

#- 11 UpdateItemTypeConfig
# body param: body
echo '{"clazz": "dAqm6wtL", "dryRun": true, "fulfillmentUrl": "WjBJytBB", "purchaseConditionUrl": "dqi4daD9"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateItemTypeConfig \
    --id 'TOpfTxYE' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 11 'UpdateItemTypeConfig' test.out

#- 12 DeleteItemTypeConfig
$CLI_EXE \
    --sn platform \
    --op DeleteItemTypeConfig \
    --id '0XbM86W0' \
    > test.out 2>&1
eval_tap $? 12 'DeleteItemTypeConfig' test.out

#- 13 QueryCampaigns
$CLI_EXE \
    --sn platform \
    --op QueryCampaigns \
    --namespace $AB_NAMESPACE \
    --limit '58' \
    --name '8q9AjUHq' \
    --offset '30' \
    --tag 'iRErbK6C' \
    > test.out 2>&1
eval_tap $? 13 'QueryCampaigns' test.out

#- 14 CreateCampaign
# body param: body
echo '{"description": "Tu5rGaNY", "items": [{"extraSubscriptionDays": 78, "itemId": "9Q5aaDVS", "itemName": "ufXvvaoh", "quantity": 56}, {"extraSubscriptionDays": 83, "itemId": "5oamLVel", "itemName": "8zYxMwoU", "quantity": 67}, {"extraSubscriptionDays": 26, "itemId": "t6z6qeMC", "itemName": "WknWk869", "quantity": 81}], "maxRedeemCountPerCampaignPerUser": 12, "maxRedeemCountPerCode": 73, "maxRedeemCountPerCodePerUser": 12, "maxSaleCount": 3, "name": "VeSyfmWg", "redeemEnd": "1989-06-28T00:00:00Z", "redeemStart": "1988-01-27T00:00:00Z", "redeemType": "ITEM", "status": "ACTIVE", "tags": ["nuxOKzxZ", "tf5E9klV", "rJHaVid2"], "type": "REDEMPTION"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCampaign \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 14 'CreateCampaign' test.out

#- 15 GetCampaign
$CLI_EXE \
    --sn platform \
    --op GetCampaign \
    --campaignId '2voe7IlN' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 15 'GetCampaign' test.out

#- 16 UpdateCampaign
# body param: body
echo '{"description": "E64J0Rtq", "items": [{"extraSubscriptionDays": 6, "itemId": "cGoso3w8", "itemName": "pkKH1Dxo", "quantity": 96}, {"extraSubscriptionDays": 32, "itemId": "7JCJKMmH", "itemName": "G7dAHwff", "quantity": 47}, {"extraSubscriptionDays": 31, "itemId": "qPPXK2cY", "itemName": "9ldYMbyF", "quantity": 57}], "maxRedeemCountPerCampaignPerUser": 57, "maxRedeemCountPerCode": 18, "maxRedeemCountPerCodePerUser": 34, "maxSaleCount": 93, "name": "ayD7xQOa", "redeemEnd": "1997-01-22T00:00:00Z", "redeemStart": "1972-03-27T00:00:00Z", "redeemType": "ITEM", "status": "ACTIVE", "tags": ["TUASANqR", "bIrp5STz", "XpxlPSlH"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCampaign \
    --campaignId 'JlbrCn4T' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 16 'UpdateCampaign' test.out

#- 17 GetCampaignDynamic
$CLI_EXE \
    --sn platform \
    --op GetCampaignDynamic \
    --campaignId 'ixfalCoy' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 17 'GetCampaignDynamic' test.out

#- 18 GetLootBoxPluginConfig
$CLI_EXE \
    --sn platform \
    --op GetLootBoxPluginConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 18 'GetLootBoxPluginConfig' test.out

#- 19 UpdateLootBoxPluginConfig
# body param: body
echo '{"appConfig": {"appName": "lO9iGqQm"}, "customConfig": {"connectionType": "TLS", "grpcServerAddress": "lcOBwzaJ"}, "extendType": "APP"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateLootBoxPluginConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 19 'UpdateLootBoxPluginConfig' test.out

#- 20 DeleteLootBoxPluginConfig
$CLI_EXE \
    --sn platform \
    --op DeleteLootBoxPluginConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 20 'DeleteLootBoxPluginConfig' test.out

#- 21 UplodLootBoxPluginConfigCert
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UplodLootBoxPluginConfigCert \
    --namespace $AB_NAMESPACE \
    --upload file $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 21 'UplodLootBoxPluginConfigCert' test.out

#- 22 GetLootBoxGrpcInfo
$CLI_EXE \
    --sn platform \
    --op GetLootBoxGrpcInfo \
    --namespace $AB_NAMESPACE \
    --force 'true' \
    > test.out 2>&1
eval_tap $? 22 'GetLootBoxGrpcInfo' test.out

#- 23 GetSectionPluginConfig
$CLI_EXE \
    --sn platform \
    --op GetSectionPluginConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 23 'GetSectionPluginConfig' test.out

#- 24 UpdateSectionPluginConfig
# body param: body
echo '{"appConfig": {"appName": "x7zcahuH"}, "customConfig": {"connectionType": "TLS", "grpcServerAddress": "n3xb96iZ"}, "extendType": "APP"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateSectionPluginConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 24 'UpdateSectionPluginConfig' test.out

#- 25 DeleteSectionPluginConfig
$CLI_EXE \
    --sn platform \
    --op DeleteSectionPluginConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 25 'DeleteSectionPluginConfig' test.out

#- 26 UploadSectionPluginConfigCert
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UploadSectionPluginConfigCert \
    --namespace $AB_NAMESPACE \
    --upload file $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 26 'UploadSectionPluginConfigCert' test.out

#- 27 GetRootCategories
$CLI_EXE \
    --sn platform \
    --op GetRootCategories \
    --namespace $AB_NAMESPACE \
    --storeId 'fszHIFOB' \
    > test.out 2>&1
eval_tap $? 27 'GetRootCategories' test.out

#- 28 CreateCategory
# body param: body
echo '{"categoryPath": "bSxlS5v7", "localizationDisplayNames": {"RpBmIsoF": "YS47dOEO", "xKdj5SJb": "93P1ixNF", "QtoZMmv5": "NBpidOvA"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCategory \
    --namespace $AB_NAMESPACE \
    --storeId 'yyIFfz7m' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 28 'CreateCategory' test.out

#- 29 ListCategoriesBasic
$CLI_EXE \
    --sn platform \
    --op ListCategoriesBasic \
    --namespace $AB_NAMESPACE \
    --storeId 'fjhvWitl' \
    > test.out 2>&1
eval_tap $? 29 'ListCategoriesBasic' test.out

#- 30 GetCategory
$CLI_EXE \
    --sn platform \
    --op GetCategory \
    --categoryPath 'GDiSj2O2' \
    --namespace $AB_NAMESPACE \
    --storeId 'bhVITiLF' \
    > test.out 2>&1
eval_tap $? 30 'GetCategory' test.out

#- 31 UpdateCategory
# body param: body
echo '{"localizationDisplayNames": {"hOMw9Tj7": "vlbnDjzT", "xVmT4FSR": "BUAIZbVH", "GrHAPqfh": "NwrQvg9z"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCategory \
    --categoryPath 'adUuAc3A' \
    --namespace $AB_NAMESPACE \
    --storeId 'gSSJCkKq' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 31 'UpdateCategory' test.out

#- 32 DeleteCategory
$CLI_EXE \
    --sn platform \
    --op DeleteCategory \
    --categoryPath 'p1GUlBfe' \
    --namespace $AB_NAMESPACE \
    --storeId 'YSbTLAub' \
    > test.out 2>&1
eval_tap $? 32 'DeleteCategory' test.out

#- 33 GetChildCategories
$CLI_EXE \
    --sn platform \
    --op GetChildCategories \
    --categoryPath '9Mepifk4' \
    --namespace $AB_NAMESPACE \
    --storeId 'oZeNmPna' \
    > test.out 2>&1
eval_tap $? 33 'GetChildCategories' test.out

#- 34 GetDescendantCategories
$CLI_EXE \
    --sn platform \
    --op GetDescendantCategories \
    --categoryPath 'T4zcYhJE' \
    --namespace $AB_NAMESPACE \
    --storeId 'Pgmdr8km' \
    > test.out 2>&1
eval_tap $? 34 'GetDescendantCategories' test.out

#- 35 QueryCodes
$CLI_EXE \
    --sn platform \
    --op QueryCodes \
    --campaignId 'sq7BEx4n' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --batchNo '23' \
    --code 'zzczSJEh' \
    --limit '15' \
    --offset '71' \
    > test.out 2>&1
eval_tap $? 35 'QueryCodes' test.out

#- 36 CreateCodes
# body param: body
echo '{"quantity": 34}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCodes \
    --campaignId 'kmPklj6F' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 36 'CreateCodes' test.out

#- 37 Download
$CLI_EXE \
    --sn platform \
    --op Download \
    --campaignId 'FkCsMvFp' \
    --namespace $AB_NAMESPACE \
    --batchNo '44' \
    > test.out 2>&1
eval_tap $? 37 'Download' test.out

#- 38 BulkDisableCodes
$CLI_EXE \
    --sn platform \
    --op BulkDisableCodes \
    --campaignId '0gotNuIA' \
    --namespace $AB_NAMESPACE \
    --batchNo '25' \
    > test.out 2>&1
eval_tap $? 38 'BulkDisableCodes' test.out

#- 39 BulkEnableCodes
$CLI_EXE \
    --sn platform \
    --op BulkEnableCodes \
    --campaignId 'Pn7aWWIK' \
    --namespace $AB_NAMESPACE \
    --batchNo '81' \
    > test.out 2>&1
eval_tap $? 39 'BulkEnableCodes' test.out

#- 40 QueryRedeemHistory
$CLI_EXE \
    --sn platform \
    --op QueryRedeemHistory \
    --campaignId 'qBmVUzmM' \
    --namespace $AB_NAMESPACE \
    --code 'pqRHnln8' \
    --limit '97' \
    --offset '78' \
    --userId 'tYGIqNHd' \
    > test.out 2>&1
eval_tap $? 40 'QueryRedeemHistory' test.out

#- 41 GetCode
$CLI_EXE \
    --sn platform \
    --op GetCode \
    --code '9OR7JAHL' \
    --namespace $AB_NAMESPACE \
    --redeemable 'false' \
    > test.out 2>&1
eval_tap $? 41 'GetCode' test.out

#- 42 DisableCode
$CLI_EXE \
    --sn platform \
    --op DisableCode \
    --code '0AdYCDCI' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 42 'DisableCode' test.out

#- 43 EnableCode
$CLI_EXE \
    --sn platform \
    --op EnableCode \
    --code 'T4H0POOD' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 43 'EnableCode' test.out

#- 44 GetServicePluginConfig
eval_tap 0 44 'GetServicePluginConfig # SKIP deprecated' test.out

#- 45 UpdateServicePluginConfig
eval_tap 0 45 'UpdateServicePluginConfig # SKIP deprecated' test.out

#- 46 DeleteServicePluginConfig
eval_tap 0 46 'DeleteServicePluginConfig # SKIP deprecated' test.out

#- 47 ListCurrencies
$CLI_EXE \
    --sn platform \
    --op ListCurrencies \
    --namespace $AB_NAMESPACE \
    --currencyType 'REAL' \
    > test.out 2>&1
eval_tap $? 47 'ListCurrencies' test.out

#- 48 CreateCurrency
# body param: body
echo '{"currencyCode": "wRzn5bAF", "currencySymbol": "Vzw7QTrr", "currencyType": "REAL", "decimals": 2, "localizationDescriptions": {"zkjz1GXp": "rTSr5ePD", "xKT0E50r": "DI4fM6io", "POT1Sd8C": "xCbjZ6cU"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCurrency \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 48 'CreateCurrency' test.out

#- 49 UpdateCurrency
# body param: body
echo '{"localizationDescriptions": {"p4nNIPuG": "eD47b3VQ", "EUGs6sGT": "Ii1dO4KC", "JS3SMV1r": "KcBlpxoK"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCurrency \
    --currencyCode 'UkOEkBnJ' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 49 'UpdateCurrency' test.out

#- 50 DeleteCurrency
$CLI_EXE \
    --sn platform \
    --op DeleteCurrency \
    --currencyCode 'lGI1eptZ' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 50 'DeleteCurrency' test.out

#- 51 GetCurrencyConfig
$CLI_EXE \
    --sn platform \
    --op GetCurrencyConfig \
    --currencyCode '4UXe3ALL' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 51 'GetCurrencyConfig' test.out

#- 52 GetCurrencySummary
$CLI_EXE \
    --sn platform \
    --op GetCurrencySummary \
    --currencyCode 'kpF0WJPV' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 52 'GetCurrencySummary' test.out

#- 53 GetDLCItemConfig
$CLI_EXE \
    --sn platform \
    --op GetDLCItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 53 'GetDLCItemConfig' test.out

#- 54 UpdateDLCItemConfig
# body param: body
echo '{"data": [{"id": "PJagjp72", "rewards": [{"currency": {"currencyCode": "ilOtMxm1", "namespace": "2NC7OBNU"}, "item": {"itemId": "FToPXC1i", "itemSku": "Y6w12yAR", "itemType": "NI5aZ75a"}, "quantity": 78, "type": "CURRENCY"}, {"currency": {"currencyCode": "OIS0EtAA", "namespace": "ELlT2sAD"}, "item": {"itemId": "Ht4H3jLg", "itemSku": "a79J5mty", "itemType": "jn8pBu64"}, "quantity": 31, "type": "ITEM"}, {"currency": {"currencyCode": "qpcPAI5W", "namespace": "8u9tRSY2"}, "item": {"itemId": "itAywArb", "itemSku": "gf4z5Dao", "itemType": "axLMXJC2"}, "quantity": 57, "type": "ITEM"}]}, {"id": "gnnuORci", "rewards": [{"currency": {"currencyCode": "8akHEg7B", "namespace": "XN25i0fn"}, "item": {"itemId": "URZfZhUR", "itemSku": "neQFo1z2", "itemType": "bNpK1tll"}, "quantity": 91, "type": "CURRENCY"}, {"currency": {"currencyCode": "rJwioVj5", "namespace": "hMARWkCo"}, "item": {"itemId": "WVBHxs2b", "itemSku": "cKI9GbSU", "itemType": "L6uKMga6"}, "quantity": 14, "type": "CURRENCY"}, {"currency": {"currencyCode": "lnOuXhC0", "namespace": "wlt0mN9k"}, "item": {"itemId": "Pw5PQlyC", "itemSku": "b7MXvCIO", "itemType": "dJVYSEXq"}, "quantity": 98, "type": "ITEM"}]}, {"id": "3IOYJnjH", "rewards": [{"currency": {"currencyCode": "v4nqL92B", "namespace": "zKQAYcaI"}, "item": {"itemId": "H7esos0o", "itemSku": "CWhhFHzI", "itemType": "ecqbp2zU"}, "quantity": 27, "type": "ITEM"}, {"currency": {"currencyCode": "IvHAIl0p", "namespace": "QAKmWDg4"}, "item": {"itemId": "CD2MIj1i", "itemSku": "3QbG06Z6", "itemType": "w0KnwwXK"}, "quantity": 32, "type": "ITEM"}, {"currency": {"currencyCode": "EMz5FH8x", "namespace": "aIllcJX3"}, "item": {"itemId": "BnTaTTn7", "itemSku": "JMJ6nrHG", "itemType": "ZDx76kSA"}, "quantity": 90, "type": "ITEM"}]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateDLCItemConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 54 'UpdateDLCItemConfig' test.out

#- 55 DeleteDLCItemConfig
$CLI_EXE \
    --sn platform \
    --op DeleteDLCItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 55 'DeleteDLCItemConfig' test.out

#- 56 GetPlatformDLCConfig
$CLI_EXE \
    --sn platform \
    --op GetPlatformDLCConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 56 'GetPlatformDLCConfig' test.out

#- 57 UpdatePlatformDLCConfig
# body param: body
echo '{"data": [{"platform": "XBOX", "platformDlcIdMap": {"oNv7fb7F": "4macKRMS", "dsAhjosH": "AXf1IwYe", "Ii5uWC7S": "tz1CNz2R"}}, {"platform": "PSN", "platformDlcIdMap": {"rcNMPelB": "bM8DlFSe", "TexdsnjB": "6GfBLGX0", "MPkhokWy": "Eatjnido"}}, {"platform": "STEAM", "platformDlcIdMap": {"sLsDURKH": "Ogt6RD1w", "dKM2RJbX": "WtqyG9Hu", "sHGRegGe": "FYgUj2J9"}}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePlatformDLCConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 57 'UpdatePlatformDLCConfig' test.out

#- 58 DeletePlatformDLCConfig
$CLI_EXE \
    --sn platform \
    --op DeletePlatformDLCConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 58 'DeletePlatformDLCConfig' test.out

#- 59 QueryEntitlements
$CLI_EXE \
    --sn platform \
    --op QueryEntitlements \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --appType 'GAME' \
    --entitlementClazz 'SUBSCRIPTION' \
    --entitlementName '3aXzQhFe' \
    --itemId '["mVo4duER", "DRh8JYqO", "7mOBdgfE"]' \
    --limit '53' \
    --offset '16' \
    --origin 'Other' \
    --userId '0eIzR2Sd' \
    > test.out 2>&1
eval_tap $? 59 'QueryEntitlements' test.out

#- 60 QueryEntitlements1
$CLI_EXE \
    --sn platform \
    --op QueryEntitlements1 \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --itemIds '["lKe0wQ7n", "QEqpBAqP", "XXY2ZdJ5"]' \
    --limit '30' \
    --offset '18' \
    > test.out 2>&1
eval_tap $? 60 'QueryEntitlements1' test.out

#- 61 EnableEntitlementOriginFeature
$CLI_EXE \
    --sn platform \
    --op EnableEntitlementOriginFeature \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 61 'EnableEntitlementOriginFeature' test.out

#- 62 GetEntitlementConfigInfo
$CLI_EXE \
    --sn platform \
    --op GetEntitlementConfigInfo \
    --namespace $AB_NAMESPACE \
    --withoutCache 'true' \
    > test.out 2>&1
eval_tap $? 62 'GetEntitlementConfigInfo' test.out

#- 63 GrantEntitlements
# body param: body
echo '{"entitlementGrantList": [{"collectionId": "HhgnTtin", "endDate": "1993-03-30T00:00:00Z", "grantedCode": "NQk676lc", "itemId": "DQWgfEjD", "itemNamespace": "s0llpReD", "language": "UW-129", "origin": "Epic", "quantity": 55, "region": "3bkPCdoM", "source": "REDEEM_CODE", "startDate": "1992-01-24T00:00:00Z", "storeId": "FjGqKRT6"}, {"collectionId": "xJqhBBWu", "endDate": "1984-04-16T00:00:00Z", "grantedCode": "LvzoZA2v", "itemId": "s9DWgKAh", "itemNamespace": "Rd3s5nGt", "language": "qCA_FH", "origin": "IOS", "quantity": 72, "region": "6VqeUXA9", "source": "OTHER", "startDate": "1982-08-21T00:00:00Z", "storeId": "x94ibkAr"}, {"collectionId": "F1yKDmA0", "endDate": "1984-01-05T00:00:00Z", "grantedCode": "YVVsPcoJ", "itemId": "cUXc9nvQ", "itemNamespace": "LPH0zBoi", "language": "Azq-DVGm_115", "origin": "Other", "quantity": 29, "region": "IyszoJ24", "source": "PROMOTION", "startDate": "1990-04-04T00:00:00Z", "storeId": "U7TE49Ff"}], "userIds": ["kwkZdmry", "uxUtnbMG", "wuGIXtzU"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op GrantEntitlements \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 63 'GrantEntitlements' test.out

#- 64 RevokeEntitlements
# body param: body
echo '["UJqMtqQb", "WQ6azMsb", "x54E0xNJ"]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RevokeEntitlements \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 64 'RevokeEntitlements' test.out

#- 65 GetEntitlement
$CLI_EXE \
    --sn platform \
    --op GetEntitlement \
    --entitlementId 'HVI3X3ME' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 65 'GetEntitlement' test.out

#- 66 QueryFulfillmentHistories
$CLI_EXE \
    --sn platform \
    --op QueryFulfillmentHistories \
    --namespace $AB_NAMESPACE \
    --limit '7' \
    --offset '49' \
    --status 'SUCCESS' \
    --userId '4vDD5nDw' \
    > test.out 2>&1
eval_tap $? 66 'QueryFulfillmentHistories' test.out

#- 67 QueryIAPClawbackHistory
$CLI_EXE \
    --sn platform \
    --op QueryIAPClawbackHistory \
    --namespace $AB_NAMESPACE \
    --endTime '4X9BZEPK' \
    --eventType 'CHARGEBACK_REVERSED' \
    --externalOrderId 'HKQrlMn2' \
    --limit '17' \
    --offset '15' \
    --startTime 'xDJR3aVH' \
    --status 'FAIL' \
    --userId 'xb6nzoER' \
    > test.out 2>&1
eval_tap $? 67 'QueryIAPClawbackHistory' test.out

#- 68 MockPlayStationStreamEvent
# body param: body
echo '{"body": {"account": "stm1w23x", "additionalData": {"entitlement": [{"clientTransaction": [{"amountConsumed": 9, "clientTransactionId": "H4TpwW1f"}, {"amountConsumed": 55, "clientTransactionId": "AxUmX3pV"}, {"amountConsumed": 86, "clientTransactionId": "gCV48vCJ"}], "entitlementId": "joKJ5TNe", "usageCount": 22}, {"clientTransaction": [{"amountConsumed": 7, "clientTransactionId": "7PSPd8A7"}, {"amountConsumed": 43, "clientTransactionId": "3kWpTvwP"}, {"amountConsumed": 82, "clientTransactionId": "wiUmqHtj"}], "entitlementId": "ULWHis3A", "usageCount": 50}, {"clientTransaction": [{"amountConsumed": 8, "clientTransactionId": "8Lv8RJ5f"}, {"amountConsumed": 71, "clientTransactionId": "aizBECmZ"}, {"amountConsumed": 8, "clientTransactionId": "Mz8UJBLY"}], "entitlementId": "UaRfgMs0", "usageCount": 80}], "purpose": "DYetzA6k"}, "originalTitleName": "oSWwaZXW", "paymentProductSKU": "7Mod1YW6", "purchaseDate": "mGkRX14G", "sourceOrderItemId": "RvieesjK", "titleName": "6ZfVivNh"}, "eventDomain": "gIMKBlNJ", "eventSource": "tuaYcrMX", "eventType": "0KEb1sP6", "eventVersion": 3, "id": "wcaj4Otu", "timestamp": "yRWoG7hY"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op MockPlayStationStreamEvent \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 68 'MockPlayStationStreamEvent' test.out

#- 69 GetAppleIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetAppleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 69 'GetAppleIAPConfig' test.out

#- 70 UpdateAppleIAPConfig
# body param: body
echo '{"bundleId": "wjEhdHgv", "password": "K1hMq2Li"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateAppleIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 70 'UpdateAppleIAPConfig' test.out

#- 71 DeleteAppleIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteAppleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 71 'DeleteAppleIAPConfig' test.out

#- 72 GetEpicGamesIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetEpicGamesIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 72 'GetEpicGamesIAPConfig' test.out

#- 73 UpdateEpicGamesIAPConfig
# body param: body
echo '{"sandboxId": "beajrE6l"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateEpicGamesIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 73 'UpdateEpicGamesIAPConfig' test.out

#- 74 DeleteEpicGamesIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteEpicGamesIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 74 'DeleteEpicGamesIAPConfig' test.out

#- 75 GetGoogleIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetGoogleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 75 'GetGoogleIAPConfig' test.out

#- 76 UpdateGoogleIAPConfig
# body param: body
echo '{"applicationName": "fb3lbIc4", "serviceAccountId": "T71VZKeC"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateGoogleIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 76 'UpdateGoogleIAPConfig' test.out

#- 77 DeleteGoogleIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteGoogleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 77 'DeleteGoogleIAPConfig' test.out

#- 78 UpdateGoogleP12File
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UpdateGoogleP12File \
    --namespace $AB_NAMESPACE \
    --upload file $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 78 'UpdateGoogleP12File' test.out

#- 79 GetIAPItemConfig
$CLI_EXE \
    --sn platform \
    --op GetIAPItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 79 'GetIAPItemConfig' test.out

#- 80 UpdateIAPItemConfig
# body param: body
echo '{"data": [{"itemIdentity": "xiNSltLK", "itemIdentityType": "ITEM_ID", "platformProductIdMap": {"4dFki8jH": "KseltxfS", "RzrdfdYC": "f0th27RD", "6cAZU4hL": "PFpTxOJC"}}, {"itemIdentity": "9aSrA75P", "itemIdentityType": "ITEM_SKU", "platformProductIdMap": {"Nt2Ev5Yv": "nTMfx1lJ", "fUSpWtH0": "Wwf9H5l6", "MZHxfGKC": "bzjCBRM8"}}, {"itemIdentity": "RdXrPegw", "itemIdentityType": "ITEM_SKU", "platformProductIdMap": {"p7qfH2dh": "BFebH1NY", "sRR2BTRv": "wmvroPKt", "YgrMgG7A": "cN3jDjsi"}}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateIAPItemConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 80 'UpdateIAPItemConfig' test.out

#- 81 DeleteIAPItemConfig
$CLI_EXE \
    --sn platform \
    --op DeleteIAPItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 81 'DeleteIAPItemConfig' test.out

#- 82 GetOculusIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetOculusIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 82 'GetOculusIAPConfig' test.out

#- 83 UpdateOculusIAPConfig
# body param: body
echo '{"appId": "1NEmCIm2", "appSecret": "J2wWxyFA"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateOculusIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 83 'UpdateOculusIAPConfig' test.out

#- 84 DeleteOculusIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteOculusIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 84 'DeleteOculusIAPConfig' test.out

#- 85 GetPlayStationIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetPlayStationIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 85 'GetPlayStationIAPConfig' test.out

#- 86 UpdatePlaystationIAPConfig
# body param: body
echo '{"backOfficeServerClientId": "VQFzHxsF", "backOfficeServerClientSecret": "BFgEcIdy", "enableStreamJob": false, "environment": "3i9KxFJr", "streamName": "WvQQOrKg", "streamPartnerName": "2SmH1GWk"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePlaystationIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 86 'UpdatePlaystationIAPConfig' test.out

#- 87 DeletePlaystationIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeletePlaystationIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 87 'DeletePlaystationIAPConfig' test.out

#- 88 ValidateExistedPlaystationIAPConfig
$CLI_EXE \
    --sn platform \
    --op ValidateExistedPlaystationIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 88 'ValidateExistedPlaystationIAPConfig' test.out

#- 89 ValidatePlaystationIAPConfig
# body param: body
echo '{"backOfficeServerClientId": "A1qkuqML", "backOfficeServerClientSecret": "6KLapCFe", "enableStreamJob": false, "environment": "ql9FQXgm", "streamName": "oYCX91A4", "streamPartnerName": "tborGmk4"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ValidatePlaystationIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 89 'ValidatePlaystationIAPConfig' test.out

#- 90 GetSteamIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetSteamIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 90 'GetSteamIAPConfig' test.out

#- 91 UpdateSteamIAPConfig
# body param: body
echo '{"appId": "fCSxwjd1", "publisherAuthenticationKey": "TwVQpxo3"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateSteamIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 91 'UpdateSteamIAPConfig' test.out

#- 92 DeleteSteamIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteSteamIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 92 'DeleteSteamIAPConfig' test.out

#- 93 GetTwitchIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetTwitchIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 93 'GetTwitchIAPConfig' test.out

#- 94 UpdateTwitchIAPConfig
# body param: body
echo '{"clientId": "5uK6XDEr", "clientSecret": "q905odxs", "organizationId": "nNTLyTBe"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateTwitchIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 94 'UpdateTwitchIAPConfig' test.out

#- 95 DeleteTwitchIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteTwitchIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 95 'DeleteTwitchIAPConfig' test.out

#- 96 GetXblIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetXblIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 96 'GetXblIAPConfig' test.out

#- 97 UpdateXblIAPConfig
# body param: body
echo '{"relyingPartyCert": "EHAc51pD"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXblIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 97 'UpdateXblIAPConfig' test.out

#- 98 DeleteXblAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteXblAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 98 'DeleteXblAPConfig' test.out

#- 99 UpdateXblBPCertFile
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UpdateXblBPCertFile \
    --namespace $AB_NAMESPACE \
    --upload file $TEMP_FILE_UPLOAD \
    --password 'PUhqkSk1' \
    > test.out 2>&1
eval_tap $? 99 'UpdateXblBPCertFile' test.out

#- 100 DownloadInvoiceDetails
$CLI_EXE \
    --sn platform \
    --op DownloadInvoiceDetails \
    --namespace $AB_NAMESPACE \
    --feature 'H4PVRbIu' \
    --itemId 'gl7fmeR1' \
    --itemType 'SUBSCRIPTION' \
    --endTime 'pN1tVdBQ' \
    --startTime 'iqMF8ihZ' \
    > test.out 2>&1
eval_tap $? 100 'DownloadInvoiceDetails' test.out

#- 101 GenerateInvoiceSummary
$CLI_EXE \
    --sn platform \
    --op GenerateInvoiceSummary \
    --namespace $AB_NAMESPACE \
    --feature 'kVEYJB4s' \
    --itemId 'YzxH1vCo' \
    --itemType 'INGAMEITEM' \
    --endTime 'AntZakQA' \
    --startTime '1OZ2EdQg' \
    > test.out 2>&1
eval_tap $? 101 'GenerateInvoiceSummary' test.out

#- 102 SyncInGameItem
# body param: body
echo '{"categoryPath": "1WrvHsE9", "targetItemId": "rQJ5WnU3", "targetNamespace": "LUIoeIHU"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncInGameItem \
    --namespace $AB_NAMESPACE \
    --storeId 'Z1uFEngj' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 102 'SyncInGameItem' test.out

#- 103 CreateItem
# body param: body
echo '{"appId": "xnW5uuzv", "appType": "DEMO", "baseAppId": "nQNnJBnm", "boothName": "IJWDdcUM", "categoryPath": "MRRcvBrE", "clazz": "qejemTPm", "displayOrder": 64, "entitlementType": "DURABLE", "ext": {"PRbU9JOF": {}, "4AcItZqg": {}, "klGlGSHU": {}}, "features": ["JIumxDhH", "lwobUuLP", "1PfQY1Y2"], "flexible": false, "images": [{"as": "9tpga5B1", "caption": "3sBZNjDI", "height": 67, "imageUrl": "UH2VnmML", "smallImageUrl": "A3Wf5qUd", "width": 60}, {"as": "QTATerev", "caption": "VpTtbr4F", "height": 73, "imageUrl": "krhSHhhF", "smallImageUrl": "5LpiupA2", "width": 59}, {"as": "3acqukxp", "caption": "QU9Ssr6T", "height": 38, "imageUrl": "vXztM12M", "smallImageUrl": "OVytks1O", "width": 49}], "inventoryConfig": {"customAttributes": {"92IbHXzI": {}, "1QTNfRHc": {}, "juzHx9uX": {}}, "serverCustomAttributes": {"s29mkKjB": {}, "nv63kEPp": {}, "AMCVd8le": {}}, "slotUsed": 8}, "itemIds": ["ifHUI9tQ", "mS0ZftZy", "2RQMjIPl"], "itemQty": {"ZRV7iOhr": 14, "q8uJjep8": 20, "yG3DyELO": 86}, "itemType": "INGAMEITEM", "listable": false, "localizations": {"GfAtzZYq": {"description": "swmDLhWO", "localExt": {"RxDiFclw": {}, "vmYQzB3A": {}, "Qz6JQPIu": {}}, "longDescription": "VmpXT2Yx", "title": "nB2sMesr"}, "6CQ9uU6w": {"description": "J8hSpQHb", "localExt": {"gQgG8NBF": {}, "sClVhkzE": {}, "e6TDAmWO": {}}, "longDescription": "I3vBr4Dw", "title": "JncY3fmX"}, "wbuajEdq": {"description": "CTBCrnV6", "localExt": {"F1zNATl0": {}, "9nmZxbHy": {}, "vweycsxe": {}}, "longDescription": "1NJOixOT", "title": "7VhDYZTg"}}, "lootBoxConfig": {"rewardCount": 99, "rewards": [{"lootBoxItems": [{"count": 18, "duration": 65, "endDate": "1974-05-04T00:00:00Z", "itemId": "vwSTMqqE", "itemSku": "I9LTi82C", "itemType": "UfSnN18K"}, {"count": 6, "duration": 24, "endDate": "1995-11-19T00:00:00Z", "itemId": "KEFDzqz5", "itemSku": "nob9mbtn", "itemType": "GQkVtH81"}, {"count": 72, "duration": 85, "endDate": "1971-09-17T00:00:00Z", "itemId": "7o0gxbyD", "itemSku": "zc5Tsttg", "itemType": "aYxm6iqp"}], "name": "yxCsmpKy", "odds": 0.45952189931610343, "type": "PROBABILITY_GROUP", "weight": 58}, {"lootBoxItems": [{"count": 82, "duration": 71, "endDate": "1978-06-30T00:00:00Z", "itemId": "3RAUWvOx", "itemSku": "k9F4gTbc", "itemType": "NzxA1LPA"}, {"count": 10, "duration": 42, "endDate": "1983-10-24T00:00:00Z", "itemId": "eCJVjSVu", "itemSku": "lzKbPeH3", "itemType": "2x0BUyXQ"}, {"count": 5, "duration": 11, "endDate": "1972-10-01T00:00:00Z", "itemId": "zBejwxQN", "itemSku": "As5atsMk", "itemType": "ogAGbS20"}], "name": "OOj7lDAb", "odds": 0.6035881435129496, "type": "REWARD", "weight": 24}, {"lootBoxItems": [{"count": 29, "duration": 82, "endDate": "1993-01-09T00:00:00Z", "itemId": "4YSIhpn8", "itemSku": "BhR0RvNx", "itemType": "4LRaax1b"}, {"count": 32, "duration": 4, "endDate": "1973-05-01T00:00:00Z", "itemId": "CBZi8OBe", "itemSku": "PYUdVIv3", "itemType": "ABaZaUIO"}, {"count": 86, "duration": 63, "endDate": "1986-02-09T00:00:00Z", "itemId": "yCH0wWqy", "itemSku": "0a0Mbblv", "itemType": "m1E0VWiA"}], "name": "QFGGMfn1", "odds": 0.42608666659878547, "type": "REWARD", "weight": 52}], "rollFunction": "DEFAULT"}, "maxCount": 11, "maxCountPerUser": 55, "name": "xEgWRSmx", "optionBoxConfig": {"boxItems": [{"count": 61, "duration": 86, "endDate": "1987-03-30T00:00:00Z", "itemId": "DCzTV4c6", "itemSku": "txEZ6Pmq", "itemType": "8azP9mw3"}, {"count": 68, "duration": 11, "endDate": "1977-05-15T00:00:00Z", "itemId": "N4HWGr3v", "itemSku": "E23Ql2kX", "itemType": "5lkqahHs"}, {"count": 74, "duration": 94, "endDate": "1978-06-23T00:00:00Z", "itemId": "wGa7RI8g", "itemSku": "vGgP6OBQ", "itemType": "yXCEJpPk"}]}, "purchasable": true, "recurring": {"cycle": "WEEKLY", "fixedFreeDays": 0, "fixedTrialCycles": 80, "graceDays": 93}, "regionData": {"NIKp0U9j": [{"currencyCode": "3xAXga1I", "currencyNamespace": "gElm2sCl", "currencyType": "REAL", "discountAmount": 47, "discountExpireAt": "1998-04-13T00:00:00Z", "discountPercentage": 41, "discountPurchaseAt": "1990-08-23T00:00:00Z", "expireAt": "1985-09-02T00:00:00Z", "price": 38, "purchaseAt": "1993-12-14T00:00:00Z", "trialPrice": 72}, {"currencyCode": "FXyn8PlN", "currencyNamespace": "qFGxSUzK", "currencyType": "VIRTUAL", "discountAmount": 47, "discountExpireAt": "1994-01-11T00:00:00Z", "discountPercentage": 3, "discountPurchaseAt": "1976-10-07T00:00:00Z", "expireAt": "1990-05-11T00:00:00Z", "price": 18, "purchaseAt": "1981-04-25T00:00:00Z", "trialPrice": 82}, {"currencyCode": "4h69HRFR", "currencyNamespace": "R4R8IJf9", "currencyType": "REAL", "discountAmount": 33, "discountExpireAt": "1990-02-24T00:00:00Z", "discountPercentage": 49, "discountPurchaseAt": "1991-11-11T00:00:00Z", "expireAt": "1977-10-20T00:00:00Z", "price": 22, "purchaseAt": "1971-05-22T00:00:00Z", "trialPrice": 50}], "UvEBugOX": [{"currencyCode": "5RC69xzT", "currencyNamespace": "4nhLEH1M", "currencyType": "REAL", "discountAmount": 15, "discountExpireAt": "1983-05-28T00:00:00Z", "discountPercentage": 58, "discountPurchaseAt": "1998-11-03T00:00:00Z", "expireAt": "1974-11-23T00:00:00Z", "price": 92, "purchaseAt": "1999-08-17T00:00:00Z", "trialPrice": 94}, {"currencyCode": "M1SFPXAv", "currencyNamespace": "aafmY0Uo", "currencyType": "REAL", "discountAmount": 43, "discountExpireAt": "1996-04-15T00:00:00Z", "discountPercentage": 90, "discountPurchaseAt": "1977-12-02T00:00:00Z", "expireAt": "1986-11-25T00:00:00Z", "price": 67, "purchaseAt": "1995-07-08T00:00:00Z", "trialPrice": 6}, {"currencyCode": "uH5LoTHc", "currencyNamespace": "Ps3hliAN", "currencyType": "VIRTUAL", "discountAmount": 10, "discountExpireAt": "1975-07-26T00:00:00Z", "discountPercentage": 70, "discountPurchaseAt": "1981-04-25T00:00:00Z", "expireAt": "1984-05-03T00:00:00Z", "price": 57, "purchaseAt": "1997-05-19T00:00:00Z", "trialPrice": 92}], "ZoVEPHaq": [{"currencyCode": "NGgtSMjI", "currencyNamespace": "5pVSOzWa", "currencyType": "REAL", "discountAmount": 14, "discountExpireAt": "1981-12-26T00:00:00Z", "discountPercentage": 56, "discountPurchaseAt": "1993-01-30T00:00:00Z", "expireAt": "1984-08-28T00:00:00Z", "price": 79, "purchaseAt": "1989-06-20T00:00:00Z", "trialPrice": 97}, {"currencyCode": "4HYivTWR", "currencyNamespace": "tpksAUGa", "currencyType": "REAL", "discountAmount": 4, "discountExpireAt": "1982-01-19T00:00:00Z", "discountPercentage": 32, "discountPurchaseAt": "1986-10-29T00:00:00Z", "expireAt": "1997-11-28T00:00:00Z", "price": 42, "purchaseAt": "1992-02-04T00:00:00Z", "trialPrice": 26}, {"currencyCode": "LF3Ci2BP", "currencyNamespace": "1VCuJ2ou", "currencyType": "VIRTUAL", "discountAmount": 35, "discountExpireAt": "1992-03-31T00:00:00Z", "discountPercentage": 48, "discountPurchaseAt": "1977-06-19T00:00:00Z", "expireAt": "1999-06-28T00:00:00Z", "price": 68, "purchaseAt": "1990-10-24T00:00:00Z", "trialPrice": 70}]}, "saleConfig": {"currencyCode": "L48jqWOo", "price": 4}, "seasonType": "PASS", "sectionExclusive": false, "sellable": false, "sku": "K4YLUWIu", "stackable": true, "status": "ACTIVE", "tags": ["hVtvRc8y", "m6Jmohf4", "8ID7UJzW"], "targetCurrencyCode": "XrKN7tN6", "targetNamespace": "lzQFx9O3", "thumbnailUrl": "hhj1gRcd", "useCount": 89}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateItem \
    --namespace $AB_NAMESPACE \
    --storeId 'mJ3AZpOP' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 103 'CreateItem' test.out

#- 104 GetItemByAppId
$CLI_EXE \
    --sn platform \
    --op GetItemByAppId \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --storeId 'dyxQ1cX0' \
    --appId '8IMR6Obp' \
    > test.out 2>&1
eval_tap $? 104 'GetItemByAppId' test.out

#- 105 QueryItems
$CLI_EXE \
    --sn platform \
    --op QueryItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --appType 'SOFTWARE' \
    --availableDate '6Jm9Trhm' \
    --baseAppId 'dSOHJIyf' \
    --categoryPath 'bHs0DcPL' \
    --features 'U01uzTjc' \
    --includeSubCategoryItem 'true' \
    --itemType 'INGAMEITEM' \
    --limit '65' \
    --offset '52' \
    --region 'bkYeP9BC' \
    --sortBy '["displayOrder", "name", "displayOrder:asc"]' \
    --storeId 'VaHXMR2I' \
    --tags 'oPmPAJxH' \
    --targetNamespace 'GlyGcs30' \
    > test.out 2>&1
eval_tap $? 105 'QueryItems' test.out

#- 106 ListBasicItemsByFeatures
$CLI_EXE \
    --sn platform \
    --op ListBasicItemsByFeatures \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --features '["PyOFGpAK", "IMfuqxPn", "1Sk6IH3a"]' \
    > test.out 2>&1
eval_tap $? 106 'ListBasicItemsByFeatures' test.out

#- 107 GetItems
$CLI_EXE \
    --sn platform \
    --op GetItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --storeId 'SPfntK1M' \
    --itemIds 'msDv7niu' \
    > test.out 2>&1
eval_tap $? 107 'GetItems' test.out

#- 108 GetItemBySku
$CLI_EXE \
    --sn platform \
    --op GetItemBySku \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --storeId 'NLXpfH5K' \
    --sku 'ohG8HI5K' \
    > test.out 2>&1
eval_tap $? 108 'GetItemBySku' test.out

#- 109 GetLocaleItemBySku
$CLI_EXE \
    --sn platform \
    --op GetLocaleItemBySku \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --language 'SeYk8JMI' \
    --populateBundle 'true' \
    --region '7yNeR1Z3' \
    --storeId 'TjyiGI88' \
    --sku 'bs9vlSp9' \
    > test.out 2>&1
eval_tap $? 109 'GetLocaleItemBySku' test.out

#- 110 GetEstimatedPrice
$CLI_EXE \
    --sn platform \
    --op GetEstimatedPrice \
    --namespace $AB_NAMESPACE \
    --platform 'Fe9wOiX8' \
    --region 'Tq7nXGK7' \
    --storeId 'cw2OuhK6' \
    --itemIds 'FYkTcu46' \
    --userId 'L206aod8' \
    > test.out 2>&1
eval_tap $? 110 'GetEstimatedPrice' test.out

#- 111 GetItemIdBySku
$CLI_EXE \
    --sn platform \
    --op GetItemIdBySku \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --storeId 'Kj9J7mtF' \
    --sku 'pnF7ZFbc' \
    > test.out 2>&1
eval_tap $? 111 'GetItemIdBySku' test.out

#- 112 GetBulkItemIdBySkus
$CLI_EXE \
    --sn platform \
    --op GetBulkItemIdBySkus \
    --namespace $AB_NAMESPACE \
    --sku '["yMQcQluG", "gh95vvZx", "do6f7tev"]' \
    --storeId 'jiaKTKUB' \
    > test.out 2>&1
eval_tap $? 112 'GetBulkItemIdBySkus' test.out

#- 113 BulkGetLocaleItems
$CLI_EXE \
    --sn platform \
    --op BulkGetLocaleItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --language 'QC3G64pp' \
    --region 'lJEwm4Li' \
    --storeId 'dKbEC4Zk' \
    --itemIds '6c9KzM6S' \
    > test.out 2>&1
eval_tap $? 113 'BulkGetLocaleItems' test.out

#- 114 GetAvailablePredicateTypes
$CLI_EXE \
    --sn platform \
    --op GetAvailablePredicateTypes \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 114 'GetAvailablePredicateTypes' test.out

#- 115 ValidateItemPurchaseCondition
# body param: body
echo '{"itemIds": ["dnFXePv0", "hOOTBUPB", "opZh60Ta"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ValidateItemPurchaseCondition \
    --namespace $AB_NAMESPACE \
    --platform 'GyCSbrmU' \
    --userId '4Y0qXTcp' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 115 'ValidateItemPurchaseCondition' test.out

#- 116 BulkUpdateRegionData
# body param: body
echo '{"changes": [{"itemIdentities": ["RvCH1CtM", "YQj7GzeF", "HzWAD6io"], "itemIdentityType": "ITEM_SKU", "regionData": {"hOaEaw2E": [{"currencyCode": "uSGhM0pY", "currencyNamespace": "Zd1c2fN8", "currencyType": "VIRTUAL", "discountAmount": 78, "discountExpireAt": "1973-05-22T00:00:00Z", "discountPercentage": 54, "discountPurchaseAt": "1985-03-09T00:00:00Z", "discountedPrice": 16, "expireAt": "1999-03-26T00:00:00Z", "price": 94, "purchaseAt": "1971-01-28T00:00:00Z", "trialPrice": 91}, {"currencyCode": "kLXbmWD9", "currencyNamespace": "2Y7KBaRQ", "currencyType": "VIRTUAL", "discountAmount": 14, "discountExpireAt": "1993-05-04T00:00:00Z", "discountPercentage": 76, "discountPurchaseAt": "1980-03-19T00:00:00Z", "discountedPrice": 26, "expireAt": "1988-02-14T00:00:00Z", "price": 38, "purchaseAt": "1995-01-13T00:00:00Z", "trialPrice": 58}, {"currencyCode": "5Ak5XZTo", "currencyNamespace": "ZiLjNNAp", "currencyType": "VIRTUAL", "discountAmount": 71, "discountExpireAt": "1986-04-17T00:00:00Z", "discountPercentage": 56, "discountPurchaseAt": "1983-03-20T00:00:00Z", "discountedPrice": 61, "expireAt": "1995-01-25T00:00:00Z", "price": 34, "purchaseAt": "1989-06-29T00:00:00Z", "trialPrice": 43}], "B4Wn1RTF": [{"currencyCode": "TZeLsYp1", "currencyNamespace": "tKWO0oGq", "currencyType": "VIRTUAL", "discountAmount": 55, "discountExpireAt": "1999-09-05T00:00:00Z", "discountPercentage": 75, "discountPurchaseAt": "1985-09-15T00:00:00Z", "discountedPrice": 63, "expireAt": "1971-10-13T00:00:00Z", "price": 31, "purchaseAt": "1996-03-20T00:00:00Z", "trialPrice": 77}, {"currencyCode": "VakauT11", "currencyNamespace": "6UP4AZF3", "currencyType": "VIRTUAL", "discountAmount": 16, "discountExpireAt": "1987-04-01T00:00:00Z", "discountPercentage": 1, "discountPurchaseAt": "1986-10-05T00:00:00Z", "discountedPrice": 40, "expireAt": "1988-06-13T00:00:00Z", "price": 46, "purchaseAt": "1990-10-20T00:00:00Z", "trialPrice": 31}, {"currencyCode": "WagRNCDC", "currencyNamespace": "IkBnCsjz", "currencyType": "VIRTUAL", "discountAmount": 36, "discountExpireAt": "1986-02-12T00:00:00Z", "discountPercentage": 40, "discountPurchaseAt": "1987-04-13T00:00:00Z", "discountedPrice": 2, "expireAt": "1992-07-25T00:00:00Z", "price": 3, "purchaseAt": "1997-08-17T00:00:00Z", "trialPrice": 93}], "mVCUmLhj": [{"currencyCode": "RpTcr8Ur", "currencyNamespace": "AeybtDDH", "currencyType": "VIRTUAL", "discountAmount": 53, "discountExpireAt": "1999-10-18T00:00:00Z", "discountPercentage": 5, "discountPurchaseAt": "1996-01-03T00:00:00Z", "discountedPrice": 4, "expireAt": "1978-11-26T00:00:00Z", "price": 30, "purchaseAt": "1984-04-07T00:00:00Z", "trialPrice": 5}, {"currencyCode": "Lw5u4T0Y", "currencyNamespace": "kMEv1NFi", "currencyType": "REAL", "discountAmount": 34, "discountExpireAt": "1994-10-14T00:00:00Z", "discountPercentage": 51, "discountPurchaseAt": "1987-10-23T00:00:00Z", "discountedPrice": 58, "expireAt": "1978-06-17T00:00:00Z", "price": 62, "purchaseAt": "1972-04-15T00:00:00Z", "trialPrice": 2}, {"currencyCode": "UVCIGG7r", "currencyNamespace": "9QqbKBHD", "currencyType": "REAL", "discountAmount": 63, "discountExpireAt": "1995-03-08T00:00:00Z", "discountPercentage": 55, "discountPurchaseAt": "1986-01-30T00:00:00Z", "discountedPrice": 73, "expireAt": "1999-06-12T00:00:00Z", "price": 77, "purchaseAt": "1976-09-22T00:00:00Z", "trialPrice": 95}]}}, {"itemIdentities": ["UN2x3gsC", "TlWqHX0C", "KiYSn3Yo"], "itemIdentityType": "ITEM_ID", "regionData": {"JtTnaXWn": [{"currencyCode": "93Ucqjj6", "currencyNamespace": "o8CbMPJi", "currencyType": "VIRTUAL", "discountAmount": 1, "discountExpireAt": "1981-10-20T00:00:00Z", "discountPercentage": 68, "discountPurchaseAt": "1976-08-09T00:00:00Z", "discountedPrice": 41, "expireAt": "1985-02-13T00:00:00Z", "price": 26, "purchaseAt": "1987-01-09T00:00:00Z", "trialPrice": 35}, {"currencyCode": "7YsmDvi4", "currencyNamespace": "6mDDowR5", "currencyType": "REAL", "discountAmount": 6, "discountExpireAt": "1978-11-23T00:00:00Z", "discountPercentage": 71, "discountPurchaseAt": "1980-05-12T00:00:00Z", "discountedPrice": 88, "expireAt": "1995-12-15T00:00:00Z", "price": 2, "purchaseAt": "1988-01-02T00:00:00Z", "trialPrice": 5}, {"currencyCode": "2cWtcUlP", "currencyNamespace": "rql05HCM", "currencyType": "VIRTUAL", "discountAmount": 97, "discountExpireAt": "1972-08-03T00:00:00Z", "discountPercentage": 20, "discountPurchaseAt": "1979-09-07T00:00:00Z", "discountedPrice": 78, "expireAt": "1999-05-18T00:00:00Z", "price": 33, "purchaseAt": "1986-10-02T00:00:00Z", "trialPrice": 96}], "pgirPpoS": [{"currencyCode": "OrcA4FTv", "currencyNamespace": "UfE81atj", "currencyType": "VIRTUAL", "discountAmount": 59, "discountExpireAt": "1997-11-09T00:00:00Z", "discountPercentage": 15, "discountPurchaseAt": "1999-02-21T00:00:00Z", "discountedPrice": 93, "expireAt": "1974-02-21T00:00:00Z", "price": 63, "purchaseAt": "1999-07-07T00:00:00Z", "trialPrice": 12}, {"currencyCode": "9beyvfE6", "currencyNamespace": "ZRxZUWSy", "currencyType": "REAL", "discountAmount": 48, "discountExpireAt": "1974-01-06T00:00:00Z", "discountPercentage": 26, "discountPurchaseAt": "1976-11-29T00:00:00Z", "discountedPrice": 89, "expireAt": "1983-03-12T00:00:00Z", "price": 97, "purchaseAt": "1991-12-29T00:00:00Z", "trialPrice": 62}, {"currencyCode": "zMm7txOK", "currencyNamespace": "dXtnG4wU", "currencyType": "REAL", "discountAmount": 46, "discountExpireAt": "1983-12-14T00:00:00Z", "discountPercentage": 28, "discountPurchaseAt": "1986-06-14T00:00:00Z", "discountedPrice": 81, "expireAt": "1982-07-08T00:00:00Z", "price": 99, "purchaseAt": "1996-10-26T00:00:00Z", "trialPrice": 81}], "kr4MnvVY": [{"currencyCode": "LyNnwNFz", "currencyNamespace": "67K21wbF", "currencyType": "VIRTUAL", "discountAmount": 46, "discountExpireAt": "1999-07-27T00:00:00Z", "discountPercentage": 91, "discountPurchaseAt": "1988-03-10T00:00:00Z", "discountedPrice": 79, "expireAt": "1996-05-26T00:00:00Z", "price": 55, "purchaseAt": "1991-09-30T00:00:00Z", "trialPrice": 48}, {"currencyCode": "AEfYsKBq", "currencyNamespace": "5R1VE12q", "currencyType": "REAL", "discountAmount": 33, "discountExpireAt": "1971-08-06T00:00:00Z", "discountPercentage": 80, "discountPurchaseAt": "1971-02-08T00:00:00Z", "discountedPrice": 37, "expireAt": "1977-04-30T00:00:00Z", "price": 37, "purchaseAt": "1975-12-13T00:00:00Z", "trialPrice": 90}, {"currencyCode": "h87yLXRV", "currencyNamespace": "uAF7DnQ6", "currencyType": "VIRTUAL", "discountAmount": 17, "discountExpireAt": "1985-05-29T00:00:00Z", "discountPercentage": 78, "discountPurchaseAt": "1992-01-21T00:00:00Z", "discountedPrice": 14, "expireAt": "1996-12-08T00:00:00Z", "price": 23, "purchaseAt": "1982-06-18T00:00:00Z", "trialPrice": 81}]}}, {"itemIdentities": ["V3G9Uqu5", "rL6jEvWd", "6UtoW78B"], "itemIdentityType": "ITEM_ID", "regionData": {"413nxWNo": [{"currencyCode": "E3c8dnvg", "currencyNamespace": "edUGCGGP", "currencyType": "REAL", "discountAmount": 77, "discountExpireAt": "1976-12-04T00:00:00Z", "discountPercentage": 4, "discountPurchaseAt": "1971-12-26T00:00:00Z", "discountedPrice": 67, "expireAt": "1974-01-10T00:00:00Z", "price": 33, "purchaseAt": "1993-08-08T00:00:00Z", "trialPrice": 63}, {"currencyCode": "7LZQdyUI", "currencyNamespace": "1MhPx9W3", "currencyType": "REAL", "discountAmount": 24, "discountExpireAt": "1985-01-25T00:00:00Z", "discountPercentage": 21, "discountPurchaseAt": "1991-08-27T00:00:00Z", "discountedPrice": 78, "expireAt": "1987-06-09T00:00:00Z", "price": 49, "purchaseAt": "1996-04-27T00:00:00Z", "trialPrice": 80}, {"currencyCode": "iTprQ35u", "currencyNamespace": "ztFlMY0Z", "currencyType": "VIRTUAL", "discountAmount": 68, "discountExpireAt": "1996-12-31T00:00:00Z", "discountPercentage": 61, "discountPurchaseAt": "1974-01-27T00:00:00Z", "discountedPrice": 54, "expireAt": "1977-09-14T00:00:00Z", "price": 6, "purchaseAt": "1996-05-21T00:00:00Z", "trialPrice": 36}], "khoAEB94": [{"currencyCode": "YM0TQtSw", "currencyNamespace": "Oc2awUcX", "currencyType": "VIRTUAL", "discountAmount": 65, "discountExpireAt": "1972-07-23T00:00:00Z", "discountPercentage": 93, "discountPurchaseAt": "1998-06-08T00:00:00Z", "discountedPrice": 4, "expireAt": "1972-12-02T00:00:00Z", "price": 68, "purchaseAt": "1983-04-26T00:00:00Z", "trialPrice": 85}, {"currencyCode": "qH5jteCn", "currencyNamespace": "Fv0sGuTC", "currencyType": "REAL", "discountAmount": 7, "discountExpireAt": "1976-02-15T00:00:00Z", "discountPercentage": 9, "discountPurchaseAt": "1982-09-10T00:00:00Z", "discountedPrice": 27, "expireAt": "1982-08-12T00:00:00Z", "price": 81, "purchaseAt": "1997-02-27T00:00:00Z", "trialPrice": 67}, {"currencyCode": "sWHFdK22", "currencyNamespace": "10MgpKEy", "currencyType": "REAL", "discountAmount": 49, "discountExpireAt": "1979-10-26T00:00:00Z", "discountPercentage": 78, "discountPurchaseAt": "1996-07-09T00:00:00Z", "discountedPrice": 76, "expireAt": "1971-12-07T00:00:00Z", "price": 11, "purchaseAt": "1998-01-21T00:00:00Z", "trialPrice": 90}], "odZXKyv7": [{"currencyCode": "t7oJEenX", "currencyNamespace": "WTIsbya2", "currencyType": "REAL", "discountAmount": 87, "discountExpireAt": "1972-04-10T00:00:00Z", "discountPercentage": 45, "discountPurchaseAt": "1986-10-28T00:00:00Z", "discountedPrice": 30, "expireAt": "1977-11-23T00:00:00Z", "price": 96, "purchaseAt": "1993-07-08T00:00:00Z", "trialPrice": 97}, {"currencyCode": "WRlbIzwr", "currencyNamespace": "Kt6gxxFN", "currencyType": "VIRTUAL", "discountAmount": 66, "discountExpireAt": "1977-10-06T00:00:00Z", "discountPercentage": 52, "discountPurchaseAt": "1973-09-15T00:00:00Z", "discountedPrice": 47, "expireAt": "1976-03-31T00:00:00Z", "price": 18, "purchaseAt": "1977-04-15T00:00:00Z", "trialPrice": 46}, {"currencyCode": "XRMrCSIh", "currencyNamespace": "LmazB5oK", "currencyType": "VIRTUAL", "discountAmount": 72, "discountExpireAt": "1994-02-22T00:00:00Z", "discountPercentage": 97, "discountPurchaseAt": "1990-08-21T00:00:00Z", "discountedPrice": 86, "expireAt": "1979-11-25T00:00:00Z", "price": 4, "purchaseAt": "1977-11-17T00:00:00Z", "trialPrice": 78}]}}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op BulkUpdateRegionData \
    --namespace $AB_NAMESPACE \
    --storeId 'hpAK36Tx' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 116 'BulkUpdateRegionData' test.out

#- 117 SearchItems
$CLI_EXE \
    --sn platform \
    --op SearchItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --itemType 'COINS' \
    --limit '1' \
    --offset '78' \
    --sortBy 'muWys7sE' \
    --storeId 'NafxEAOQ' \
    --keyword 'QojCQwzC' \
    --language 'I95BE33n' \
    > test.out 2>&1
eval_tap $? 117 'SearchItems' test.out

#- 118 QueryUncategorizedItems
$CLI_EXE \
    --sn platform \
    --op QueryUncategorizedItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --limit '18' \
    --offset '92' \
    --sortBy '["displayOrder", "displayOrder:asc", "displayOrder:desc"]' \
    --storeId 'bSmTqLvn' \
    > test.out 2>&1
eval_tap $? 118 'QueryUncategorizedItems' test.out

#- 119 GetItem
$CLI_EXE \
    --sn platform \
    --op GetItem \
    --itemId 'VnezLCGq' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --storeId 'IsZii8bJ' \
    > test.out 2>&1
eval_tap $? 119 'GetItem' test.out

#- 120 UpdateItem
# body param: body
echo '{"appId": "DsnSQOo3", "appType": "SOFTWARE", "baseAppId": "3QEyKnk5", "boothName": "KO36Jvab", "categoryPath": "BOLzgLze", "clazz": "akjrW1us", "displayOrder": 58, "entitlementType": "CONSUMABLE", "ext": {"egUOPnr4": {}, "wjX1j4Ip": {}, "Y5SIdDFN": {}}, "features": ["2Vparbg0", "OmkjaMoW", "bXczVz7t"], "flexible": false, "images": [{"as": "ReouXl5V", "caption": "RwRzEW2a", "height": 48, "imageUrl": "cS6WhgnO", "smallImageUrl": "AUPwxGMf", "width": 13}, {"as": "RDKOPcMd", "caption": "EXgdsCYx", "height": 38, "imageUrl": "wfFicJkL", "smallImageUrl": "R5XV8XtF", "width": 61}, {"as": "gVYGLMWw", "caption": "hkVWKuai", "height": 59, "imageUrl": "Pbr6Bvx3", "smallImageUrl": "ya52eurF", "width": 30}], "inventoryConfig": {"customAttributes": {"mirP9TVT": {}, "HfVpMeOm": {}, "byQCZwGC": {}}, "serverCustomAttributes": {"z4Ziefdi": {}, "LtIUpctP": {}, "yYYbdaAA": {}}, "slotUsed": 67}, "itemIds": ["5zeJzJVb", "Gb2lrCcJ", "fu2Cl869"], "itemQty": {"EreCmUvl": 51, "zkOKOKqo": 86, "risSxhJz": 88}, "itemType": "EXTENSION", "listable": false, "localizations": {"zL3CgA8t": {"description": "B4NKiNQL", "localExt": {"MKyGr8hY": {}, "JaROKY8b": {}, "Z8w40YsF": {}}, "longDescription": "lXD38EcB", "title": "J8Mav3nX"}, "mGKxQCg4": {"description": "hALzUE0i", "localExt": {"s8L1HLis": {}, "wtAm4A40": {}, "ixLVyfwJ": {}}, "longDescription": "Cf7uqjUS", "title": "ul7dwYqw"}, "FXTvu3bw": {"description": "SVvXTQnk", "localExt": {"2ll78rF6": {}, "DdHpE5QL": {}, "3m5iZdJf": {}}, "longDescription": "0j6DpOIL", "title": "OUvtnXZe"}}, "lootBoxConfig": {"rewardCount": 59, "rewards": [{"lootBoxItems": [{"count": 48, "duration": 59, "endDate": "1974-09-16T00:00:00Z", "itemId": "uor4uWHs", "itemSku": "nnfaRG7N", "itemType": "o766Xzky"}, {"count": 61, "duration": 5, "endDate": "1979-07-18T00:00:00Z", "itemId": "ljcNh5e3", "itemSku": "NKzyaKnS", "itemType": "rCBAn1Cw"}, {"count": 59, "duration": 80, "endDate": "1996-04-13T00:00:00Z", "itemId": "p1qb3mSu", "itemSku": "eInIaf10", "itemType": "2sb3ifBe"}], "name": "Usod1nC5", "odds": 0.14156347521349844, "type": "REWARD", "weight": 20}, {"lootBoxItems": [{"count": 43, "duration": 48, "endDate": "1972-12-09T00:00:00Z", "itemId": "fD5vCpCa", "itemSku": "sVLAVPTq", "itemType": "OraBwj5y"}, {"count": 0, "duration": 80, "endDate": "1996-07-30T00:00:00Z", "itemId": "DxeLDSsj", "itemSku": "PVQLGtge", "itemType": "rG6RSPZK"}, {"count": 83, "duration": 8, "endDate": "1977-11-26T00:00:00Z", "itemId": "1kAtd5lD", "itemSku": "HLKlc0F2", "itemType": "oEu405ZU"}], "name": "mtfVmnKm", "odds": 0.7235644412181303, "type": "REWARD_GROUP", "weight": 5}, {"lootBoxItems": [{"count": 20, "duration": 51, "endDate": "1982-11-07T00:00:00Z", "itemId": "JKLP9d47", "itemSku": "1txzV3Q3", "itemType": "EDvmzGz0"}, {"count": 93, "duration": 80, "endDate": "1993-08-09T00:00:00Z", "itemId": "0vF0ZEI7", "itemSku": "iVpbYUY6", "itemType": "tu4IEfRn"}, {"count": 23, "duration": 0, "endDate": "1974-01-01T00:00:00Z", "itemId": "7ChBzlxX", "itemSku": "YC2I8F2z", "itemType": "arR5qGXN"}], "name": "XhBGsPp5", "odds": 0.9130580981889024, "type": "PROBABILITY_GROUP", "weight": 37}], "rollFunction": "CUSTOM"}, "maxCount": 34, "maxCountPerUser": 59, "name": "ilgvAdhF", "optionBoxConfig": {"boxItems": [{"count": 65, "duration": 75, "endDate": "1990-11-25T00:00:00Z", "itemId": "YJF3lnGi", "itemSku": "vRY385ue", "itemType": "VneCXy7y"}, {"count": 86, "duration": 47, "endDate": "1972-12-01T00:00:00Z", "itemId": "TYgHP1l5", "itemSku": "K3c25jgq", "itemType": "KP4I4HBz"}, {"count": 74, "duration": 59, "endDate": "1996-10-24T00:00:00Z", "itemId": "5rwt8ujg", "itemSku": "Z8U4iQty", "itemType": "U7RgbfXs"}]}, "purchasable": true, "recurring": {"cycle": "MONTHLY", "fixedFreeDays": 44, "fixedTrialCycles": 15, "graceDays": 63}, "regionData": {"SiayIUL4": [{"currencyCode": "esMawLIK", "currencyNamespace": "ytx8Ae1u", "currencyType": "REAL", "discountAmount": 50, "discountExpireAt": "1996-12-29T00:00:00Z", "discountPercentage": 27, "discountPurchaseAt": "1986-09-04T00:00:00Z", "expireAt": "1996-03-14T00:00:00Z", "price": 46, "purchaseAt": "1992-03-23T00:00:00Z", "trialPrice": 89}, {"currencyCode": "uAYtKLCs", "currencyNamespace": "AaWUxiKb", "currencyType": "REAL", "discountAmount": 95, "discountExpireAt": "1981-07-19T00:00:00Z", "discountPercentage": 73, "discountPurchaseAt": "1984-11-04T00:00:00Z", "expireAt": "1977-02-16T00:00:00Z", "price": 10, "purchaseAt": "1999-02-15T00:00:00Z", "trialPrice": 50}, {"currencyCode": "VSSlR4aD", "currencyNamespace": "YPukBBxU", "currencyType": "REAL", "discountAmount": 9, "discountExpireAt": "1975-09-14T00:00:00Z", "discountPercentage": 51, "discountPurchaseAt": "1983-01-04T00:00:00Z", "expireAt": "1977-05-04T00:00:00Z", "price": 64, "purchaseAt": "1972-03-25T00:00:00Z", "trialPrice": 81}], "tCMHWA0L": [{"currencyCode": "cOZ4t2lG", "currencyNamespace": "xERTqnvZ", "currencyType": "REAL", "discountAmount": 74, "discountExpireAt": "1989-01-03T00:00:00Z", "discountPercentage": 62, "discountPurchaseAt": "1986-06-14T00:00:00Z", "expireAt": "1974-12-23T00:00:00Z", "price": 42, "purchaseAt": "1989-09-15T00:00:00Z", "trialPrice": 6}, {"currencyCode": "rNmwFRDJ", "currencyNamespace": "ystdNMmR", "currencyType": "REAL", "discountAmount": 41, "discountExpireAt": "1994-11-07T00:00:00Z", "discountPercentage": 22, "discountPurchaseAt": "1975-08-24T00:00:00Z", "expireAt": "1972-10-02T00:00:00Z", "price": 15, "purchaseAt": "1992-01-30T00:00:00Z", "trialPrice": 94}, {"currencyCode": "9FsDpXwk", "currencyNamespace": "y2ELQaGI", "currencyType": "REAL", "discountAmount": 3, "discountExpireAt": "1991-04-02T00:00:00Z", "discountPercentage": 16, "discountPurchaseAt": "1975-01-13T00:00:00Z", "expireAt": "1982-09-27T00:00:00Z", "price": 61, "purchaseAt": "1983-04-04T00:00:00Z", "trialPrice": 90}], "vonzkTvn": [{"currencyCode": "5BbCOibO", "currencyNamespace": "ztXWPAXc", "currencyType": "REAL", "discountAmount": 85, "discountExpireAt": "1981-07-17T00:00:00Z", "discountPercentage": 20, "discountPurchaseAt": "1994-09-20T00:00:00Z", "expireAt": "1972-07-20T00:00:00Z", "price": 18, "purchaseAt": "1988-08-29T00:00:00Z", "trialPrice": 84}, {"currencyCode": "rF3Eqych", "currencyNamespace": "t1ugLYb4", "currencyType": "VIRTUAL", "discountAmount": 74, "discountExpireAt": "1997-05-27T00:00:00Z", "discountPercentage": 27, "discountPurchaseAt": "1987-08-06T00:00:00Z", "expireAt": "1981-04-07T00:00:00Z", "price": 66, "purchaseAt": "1992-12-10T00:00:00Z", "trialPrice": 73}, {"currencyCode": "kRopfGIc", "currencyNamespace": "C0Q8JkKZ", "currencyType": "VIRTUAL", "discountAmount": 6, "discountExpireAt": "1980-08-23T00:00:00Z", "discountPercentage": 52, "discountPurchaseAt": "1979-03-07T00:00:00Z", "expireAt": "1990-04-19T00:00:00Z", "price": 4, "purchaseAt": "1993-10-06T00:00:00Z", "trialPrice": 53}]}, "saleConfig": {"currencyCode": "3HYB1rzo", "price": 18}, "seasonType": "TIER", "sectionExclusive": false, "sellable": true, "sku": "i2vyAabX", "stackable": false, "status": "INACTIVE", "tags": ["KtLDcS24", "mvCgGZw4", "OrZyvgMl"], "targetCurrencyCode": "rOPEDvz7", "targetNamespace": "wBFqusek", "thumbnailUrl": "HSWQ0cfm", "useCount": 85}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateItem \
    --itemId 'eGl1k0EG' \
    --namespace $AB_NAMESPACE \
    --storeId 'JuOWgChD' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 120 'UpdateItem' test.out

#- 121 DeleteItem
$CLI_EXE \
    --sn platform \
    --op DeleteItem \
    --itemId 'cFlz2Iiz' \
    --namespace $AB_NAMESPACE \
    --force 'true' \
    --storeId 'JVFT7HOD' \
    > test.out 2>&1
eval_tap $? 121 'DeleteItem' test.out

#- 122 AcquireItem
# body param: body
echo '{"count": 40, "orderNo": "ERc9fgfQ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op AcquireItem \
    --itemId 'YZgFgWR3' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 122 'AcquireItem' test.out

#- 123 GetApp
$CLI_EXE \
    --sn platform \
    --op GetApp \
    --itemId 'XsrSm2yZ' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --storeId '3e0qa12U' \
    > test.out 2>&1
eval_tap $? 123 'GetApp' test.out

#- 124 UpdateApp
# body param: body
echo '{"carousel": [{"alt": "rBs91AU0", "previewUrl": "4CdkO3gz", "thumbnailUrl": "KUVNyBsg", "type": "image", "url": "egIH644V", "videoSource": "vimeo"}, {"alt": "YvEyx1Ka", "previewUrl": "xz9vtKJW", "thumbnailUrl": "RBwKptyc", "type": "video", "url": "B0ULxA2C", "videoSource": "generic"}, {"alt": "WRJPwV6I", "previewUrl": "jT6OT3c1", "thumbnailUrl": "53jjYS5Q", "type": "image", "url": "fYX4SsvP", "videoSource": "vimeo"}], "developer": "NcBOQluu", "forumUrl": "Ak7AF9Xc", "genres": ["Casual", "FreeToPlay", "Adventure"], "localizations": {"LTvMizby": {"announcement": "O4tBQXTZ", "slogan": "tLoq3ZWA"}, "5bWAL7FH": {"announcement": "4mIv1FnF", "slogan": "NO3KcE6P"}, "ymwsZx05": {"announcement": "oD4xlrQ0", "slogan": "0allpPfC"}}, "platformRequirements": {"4TMfYTNV": [{"additionals": "cm3X5Fg2", "directXVersion": "EyB6R7LX", "diskSpace": "Lp2xkMew", "graphics": "GpoHE0kU", "label": "bt40pIGv", "osVersion": "Ug8meBe9", "processor": "jcr7RMZL", "ram": "bsJ0kJCf", "soundCard": "5cZHbnGh"}, {"additionals": "rdcIMtTn", "directXVersion": "BwKxyL0w", "diskSpace": "Nwtitl9B", "graphics": "wv2thqzf", "label": "byfWzAOi", "osVersion": "uZAbpAsx", "processor": "QTtWPiXz", "ram": "JZE5rYtS", "soundCard": "2B46NzFI"}, {"additionals": "gkxRiKzC", "directXVersion": "XHG0WvQu", "diskSpace": "4WqNTLJU", "graphics": "PN9ouVFT", "label": "LFkcguYs", "osVersion": "cpAtwtG8", "processor": "g6gYEqOi", "ram": "h6Bdp7y4", "soundCard": "zsmS04gQ"}], "sM88Tleq": [{"additionals": "QOV7pl0K", "directXVersion": "vTJwSBfF", "diskSpace": "4QmJJxQZ", "graphics": "j6Nou3CV", "label": "W5uFL26j", "osVersion": "meIsFRJl", "processor": "z91NOPz9", "ram": "revNF9Bt", "soundCard": "ONxii33Z"}, {"additionals": "9oWSBnnH", "directXVersion": "qVge2Qqy", "diskSpace": "pExkgxI9", "graphics": "w3XrZzwT", "label": "BY5NifLG", "osVersion": "gUIMMYKp", "processor": "pS81wGuc", "ram": "O3QYnRhc", "soundCard": "cEJWjLFk"}, {"additionals": "gnasw4Oa", "directXVersion": "8puBQNiM", "diskSpace": "c6yoBo1b", "graphics": "ojU3fxcY", "label": "sRKY0X2n", "osVersion": "NL7xkcwS", "processor": "bkCBSaUO", "ram": "YECgKqmE", "soundCard": "k7Ks6c1E"}], "BMdhxl1D": [{"additionals": "CVLXUnaW", "directXVersion": "zE9t3ROc", "diskSpace": "xSNYZ8HA", "graphics": "N8b5Kk0e", "label": "Zs8D0loj", "osVersion": "TNmsfjtb", "processor": "j1MS809c", "ram": "G1WlgkuI", "soundCard": "jOuDK4oW"}, {"additionals": "FcLMtweF", "directXVersion": "wkN6XWqY", "diskSpace": "gj1diZic", "graphics": "QpAk6D3u", "label": "L0P84Ket", "osVersion": "TKxF69Og", "processor": "xpG3L4mq", "ram": "3yWQVRk2", "soundCard": "kJDwmVKe"}, {"additionals": "AHLvcWyl", "directXVersion": "LWPBG0wv", "diskSpace": "jFvEefFs", "graphics": "WPTWyuW9", "label": "C4ka8YZo", "osVersion": "Ueww3IWH", "processor": "vN0v4UYL", "ram": "Dddzo7CI", "soundCard": "nfZopSzF"}]}, "platforms": ["Windows", "IOS", "Windows"], "players": ["Coop", "CrossPlatformMulti", "MMO"], "primaryGenre": "Indie", "publisher": "vFa2adgL", "releaseDate": "1987-11-01T00:00:00Z", "websiteUrl": "jeSF9qVs"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateApp \
    --itemId 'Tg3wAIbB' \
    --namespace $AB_NAMESPACE \
    --storeId 'GJtXee0m' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 124 'UpdateApp' test.out

#- 125 DisableItem
$CLI_EXE \
    --sn platform \
    --op DisableItem \
    --itemId 'PfaHwnSF' \
    --namespace $AB_NAMESPACE \
    --storeId 'VRjhUOwn' \
    > test.out 2>&1
eval_tap $? 125 'DisableItem' test.out

#- 126 GetItemDynamicData
$CLI_EXE \
    --sn platform \
    --op GetItemDynamicData \
    --itemId 'j1ePOLJZ' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 126 'GetItemDynamicData' test.out

#- 127 EnableItem
$CLI_EXE \
    --sn platform \
    --op EnableItem \
    --itemId '95C3JZfq' \
    --namespace $AB_NAMESPACE \
    --storeId 'WYI7ccHi' \
    > test.out 2>&1
eval_tap $? 127 'EnableItem' test.out

#- 128 FeatureItem
$CLI_EXE \
    --sn platform \
    --op FeatureItem \
    --feature 'Vd4Fdpj0' \
    --itemId 'uKTpZcoT' \
    --namespace $AB_NAMESPACE \
    --storeId 'ydOipK5r' \
    > test.out 2>&1
eval_tap $? 128 'FeatureItem' test.out

#- 129 DefeatureItem
$CLI_EXE \
    --sn platform \
    --op DefeatureItem \
    --feature 'XjZXY11M' \
    --itemId 'JS9rvERa' \
    --namespace $AB_NAMESPACE \
    --storeId 'jtxnqDH1' \
    > test.out 2>&1
eval_tap $? 129 'DefeatureItem' test.out

#- 130 GetLocaleItem
$CLI_EXE \
    --sn platform \
    --op GetLocaleItem \
    --itemId 'LaqRHlFS' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --language 'B9Otk6La' \
    --populateBundle 'true' \
    --region 'C2nohJoZ' \
    --storeId '0Q4oB3DR' \
    > test.out 2>&1
eval_tap $? 130 'GetLocaleItem' test.out

#- 131 UpdateItemPurchaseCondition
# body param: body
echo '{"purchaseCondition": {"conditionGroups": [{"operator": "and", "predicates": [{"anyOf": 31, "comparison": "isGreaterThan", "name": "fG9ThFAA", "predicateType": "SeasonPassPredicate", "value": "A3PsyvHy", "values": ["48YBoB5P", "oX6Rib1L", "WQFeA5cb"]}, {"anyOf": 34, "comparison": "excludes", "name": "oAXHfsDF", "predicateType": "SeasonPassPredicate", "value": "ZGS6VEw2", "values": ["ZPs1Nhji", "1a99EhHJ", "2rbYzSsg"]}, {"anyOf": 96, "comparison": "isLessThan", "name": "3AAwuDA1", "predicateType": "EntitlementPredicate", "value": "7jY6E9RI", "values": ["XUNz2hcp", "JHnkKLvL", "7usVX2B4"]}]}, {"operator": "and", "predicates": [{"anyOf": 64, "comparison": "includes", "name": "GNGmETiD", "predicateType": "SeasonPassPredicate", "value": "qcMXjLfb", "values": ["VyFjeKw8", "zQtXgtES", "Szcro3Z7"]}, {"anyOf": 51, "comparison": "isLessThanOrEqual", "name": "sYXpLKJj", "predicateType": "SeasonPassPredicate", "value": "oSSSNHdB", "values": ["X0ae8WqA", "E7P5Zmi1", "BX1ULonk"]}, {"anyOf": 32, "comparison": "is", "name": "263UTagW", "predicateType": "SeasonPassPredicate", "value": "koaD7m5G", "values": ["24oPDH2j", "rSDQAPcS", "vKSoaMCF"]}]}, {"operator": "or", "predicates": [{"anyOf": 94, "comparison": "is", "name": "DHEWpl9v", "predicateType": "SeasonTierPredicate", "value": "s5Ot24HU", "values": ["7dNIz8dx", "J8Ds8Kuk", "KWcknDCO"]}, {"anyOf": 13, "comparison": "isNot", "name": "ujdnEAuA", "predicateType": "EntitlementPredicate", "value": "yGEk8K8M", "values": ["69zdtO7T", "FOiozGh7", "kw4pTCCg"]}, {"anyOf": 17, "comparison": "is", "name": "pu0gwEs2", "predicateType": "SeasonPassPredicate", "value": "mjggMYiO", "values": ["0m6TO2e6", "YbshShBA", "RMwPShKP"]}]}]}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateItemPurchaseCondition \
    --itemId '4KfH0t3S' \
    --namespace $AB_NAMESPACE \
    --storeId 'g7Ydi9um' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 131 'UpdateItemPurchaseCondition' test.out

#- 132 ReturnItem
# body param: body
echo '{"orderNo": "qc9eagDZ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ReturnItem \
    --itemId 'q4sMIqsO' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 132 'ReturnItem' test.out

#- 133 QueryKeyGroups
$CLI_EXE \
    --sn platform \
    --op QueryKeyGroups \
    --namespace $AB_NAMESPACE \
    --limit '37' \
    --name 'kDTenc8K' \
    --offset '72' \
    --tag 'PeWv9MX7' \
    > test.out 2>&1
eval_tap $? 133 'QueryKeyGroups' test.out

#- 134 CreateKeyGroup
# body param: body
echo '{"description": "axBEFpyi", "name": "GAepgqrk", "status": "ACTIVE", "tags": ["4ZNkZpy3", "tmHbbGKJ", "0ywojkOW"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateKeyGroup \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 134 'CreateKeyGroup' test.out

#- 135 GetKeyGroupByBoothName
eval_tap 0 135 'GetKeyGroupByBoothName # SKIP deprecated' test.out

#- 136 GetKeyGroup
$CLI_EXE \
    --sn platform \
    --op GetKeyGroup \
    --keyGroupId 'hdksVhet' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 136 'GetKeyGroup' test.out

#- 137 UpdateKeyGroup
# body param: body
echo '{"description": "F9V60zra", "name": "nSBsmP9D", "status": "ACTIVE", "tags": ["iQ9JMN5P", "76eT8o5v", "Rf2JxOaC"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateKeyGroup \
    --keyGroupId 'X5L1z4kx' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 137 'UpdateKeyGroup' test.out

#- 138 GetKeyGroupDynamic
$CLI_EXE \
    --sn platform \
    --op GetKeyGroupDynamic \
    --keyGroupId 'db8aBo52' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 138 'GetKeyGroupDynamic' test.out

#- 139 ListKeys
$CLI_EXE \
    --sn platform \
    --op ListKeys \
    --keyGroupId 'nwY07yFu' \
    --namespace $AB_NAMESPACE \
    --limit '86' \
    --offset '64' \
    --status 'ACQUIRED' \
    > test.out 2>&1
eval_tap $? 139 'ListKeys' test.out

#- 140 UploadKeys
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UploadKeys \
    --keyGroupId 'vA4cQM3E' \
    --namespace $AB_NAMESPACE \
    --upload file $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 140 'UploadKeys' test.out

#- 141 QueryOrders
$CLI_EXE \
    --sn platform \
    --op QueryOrders \
    --namespace $AB_NAMESPACE \
    --endTime 'fCoxWFOe' \
    --limit '45' \
    --offset '75' \
    --orderNos '["qfTjBnwn", "qAJBx9Ss", "4VbzlsFF"]' \
    --sortBy 'wk0flSW2' \
    --startTime 'zvR9lL0M' \
    --status 'FULFILLED' \
    --withTotal 'false' \
    > test.out 2>&1
eval_tap $? 141 'QueryOrders' test.out

#- 142 GetOrderStatistics
$CLI_EXE \
    --sn platform \
    --op GetOrderStatistics \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 142 'GetOrderStatistics' test.out

#- 143 GetOrder
$CLI_EXE \
    --sn platform \
    --op GetOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'tGaDUwSU' \
    > test.out 2>&1
eval_tap $? 143 'GetOrder' test.out

#- 144 RefundOrder
# body param: body
echo '{"description": "HWHBC03o"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RefundOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'EvsoHKAQ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 144 'RefundOrder' test.out

#- 145 GetPaymentCallbackConfig
$CLI_EXE \
    --sn platform \
    --op GetPaymentCallbackConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 145 'GetPaymentCallbackConfig' test.out

#- 146 UpdatePaymentCallbackConfig
# body param: body
echo '{"dryRun": true, "notifyUrl": "tfr1PN5F", "privateKey": "o1NX23qQ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePaymentCallbackConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 146 'UpdatePaymentCallbackConfig' test.out

#- 147 QueryPaymentNotifications
$CLI_EXE \
    --sn platform \
    --op QueryPaymentNotifications \
    --namespace $AB_NAMESPACE \
    --endDate 'GSSoaznH' \
    --externalId 'FIXqcqTx' \
    --limit '82' \
    --notificationSource 'STRIPE' \
    --notificationType 'FMArGNO3' \
    --offset '7' \
    --paymentOrderNo 'toh9IIpx' \
    --startDate 'FwAAqR0G' \
    --status 'IGNORED' \
    > test.out 2>&1
eval_tap $? 147 'QueryPaymentNotifications' test.out

#- 148 QueryPaymentOrders
$CLI_EXE \
    --sn platform \
    --op QueryPaymentOrders \
    --namespace $AB_NAMESPACE \
    --channel 'EXTERNAL' \
    --extTxId 'ZfBsmvF2' \
    --limit '82' \
    --offset '39' \
    --status 'CHARGEBACK' \
    > test.out 2>&1
eval_tap $? 148 'QueryPaymentOrders' test.out

#- 149 CreatePaymentOrderByDedicated
# body param: body
echo '{"currencyCode": "FmIPEWtW", "currencyNamespace": "KLrypqB3", "customParameters": {"bN5B7sCN": {}, "Tdw5exfT": {}, "ntEiY5Sg": {}}, "description": "xGVJDIou", "extOrderNo": "AJSTQg9f", "extUserId": "PpTvMZKF", "itemType": "OPTIONBOX", "language": "MG", "metadata": {"RbZELEP8": "53jJCaS3", "p1z5kFCA": "NVT5HeFo", "M5KONk5T": "mPcCdVOk"}, "notifyUrl": "RU8afm98", "omitNotification": true, "platform": "1Zv3P5RJ", "price": 45, "recurringPaymentOrderNo": "j1n7xhC0", "region": "f4FkmUz1", "returnUrl": "Pca2YGaY", "sandbox": true, "sku": "imrCoYMA", "subscriptionId": "fNOkjSie", "targetNamespace": "JjzYV7ZN", "targetUserId": "3FcQ0wNN", "title": "DnolL0nh"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreatePaymentOrderByDedicated \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 149 'CreatePaymentOrderByDedicated' test.out

#- 150 ListExtOrderNoByExtTxId
$CLI_EXE \
    --sn platform \
    --op ListExtOrderNoByExtTxId \
    --namespace $AB_NAMESPACE \
    --extTxId 'WUlMhzyg' \
    > test.out 2>&1
eval_tap $? 150 'ListExtOrderNoByExtTxId' test.out

#- 151 GetPaymentOrder
$CLI_EXE \
    --sn platform \
    --op GetPaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'Ojgo8ybC' \
    > test.out 2>&1
eval_tap $? 151 'GetPaymentOrder' test.out

#- 152 ChargePaymentOrder
# body param: body
echo '{"extTxId": "AXmN9z98", "paymentMethod": "Uwr1zEnz", "paymentProvider": "WXPAY"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ChargePaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'huSliVxZ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 152 'ChargePaymentOrder' test.out

#- 153 RefundPaymentOrderByDedicated
# body param: body
echo '{"description": "jr16lElL"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RefundPaymentOrderByDedicated \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo '1VadEy0g' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 153 'RefundPaymentOrderByDedicated' test.out

#- 154 SimulatePaymentOrderNotification
# body param: body
echo '{"amount": 82, "currencyCode": "oXTBUh7s", "notifyType": "REFUND", "paymentProvider": "ALIPAY", "salesTax": 80, "vat": 79}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SimulatePaymentOrderNotification \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo '75Uz3k35' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 154 'SimulatePaymentOrderNotification' test.out

#- 155 GetPaymentOrderChargeStatus
$CLI_EXE \
    --sn platform \
    --op GetPaymentOrderChargeStatus \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo '0Ciwomqt' \
    > test.out 2>&1
eval_tap $? 155 'GetPaymentOrderChargeStatus' test.out

#- 156 GetPlatformEntitlementConfig
$CLI_EXE \
    --sn platform \
    --op GetPlatformEntitlementConfig \
    --namespace $AB_NAMESPACE \
    --platform 'Nintendo' \
    > test.out 2>&1
eval_tap $? 156 'GetPlatformEntitlementConfig' test.out

#- 157 UpdatePlatformEntitlementConfig
# body param: body
echo '{"allowedPlatformOrigins": ["Xbox", "Epic", "Other"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePlatformEntitlementConfig \
    --namespace $AB_NAMESPACE \
    --platform 'Epic' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 157 'UpdatePlatformEntitlementConfig' test.out

#- 158 GetPlatformWalletConfig
$CLI_EXE \
    --sn platform \
    --op GetPlatformWalletConfig \
    --namespace $AB_NAMESPACE \
    --platform 'Epic' \
    > test.out 2>&1
eval_tap $? 158 'GetPlatformWalletConfig' test.out

#- 159 UpdatePlatformWalletConfig
# body param: body
echo '{"allowedBalanceOrigins": ["Nintendo", "Steam", "Playstation"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePlatformWalletConfig \
    --namespace $AB_NAMESPACE \
    --platform 'IOS' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 159 'UpdatePlatformWalletConfig' test.out

#- 160 ResetPlatformWalletConfig
$CLI_EXE \
    --sn platform \
    --op ResetPlatformWalletConfig \
    --namespace $AB_NAMESPACE \
    --platform 'Oculus' \
    > test.out 2>&1
eval_tap $? 160 'ResetPlatformWalletConfig' test.out

#- 161 GetRevocationConfig
$CLI_EXE \
    --sn platform \
    --op GetRevocationConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 161 'GetRevocationConfig' test.out

#- 162 UpdateRevocationConfig
# body param: body
echo '{"entitlement": {"consumable": {"enabled": false, "strategy": "CUSTOM"}, "durable": {"enabled": true, "strategy": "REVOKE_OR_REPORT"}}, "wallet": {"enabled": true, "strategy": "CUSTOM"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateRevocationConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 162 'UpdateRevocationConfig' test.out

#- 163 DeleteRevocationConfig
$CLI_EXE \
    --sn platform \
    --op DeleteRevocationConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 163 'DeleteRevocationConfig' test.out

#- 164 QueryRevocationHistories
$CLI_EXE \
    --sn platform \
    --op QueryRevocationHistories \
    --namespace $AB_NAMESPACE \
    --endTime 'NMpg0lUc' \
    --limit '57' \
    --offset '17' \
    --source 'ORDER' \
    --startTime 'XOlMiBOO' \
    --status 'SUCCESS' \
    --transactionId 'NkwQRFyc' \
    --userId 'RrlDCkJD' \
    > test.out 2>&1
eval_tap $? 164 'QueryRevocationHistories' test.out

#- 165 GetRevocationPluginConfig
$CLI_EXE \
    --sn platform \
    --op GetRevocationPluginConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 165 'GetRevocationPluginConfig' test.out

#- 166 UpdateRevocationPluginConfig
# body param: body
echo '{"appConfig": {"appName": "WOtSy8U4"}, "customConfig": {"connectionType": "INSECURE", "grpcServerAddress": "HGe2A9p1"}, "extendType": "APP"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateRevocationPluginConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 166 'UpdateRevocationPluginConfig' test.out

#- 167 DeleteRevocationPluginConfig
$CLI_EXE \
    --sn platform \
    --op DeleteRevocationPluginConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 167 'DeleteRevocationPluginConfig' test.out

#- 168 UploadRevocationPluginConfigCert
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UploadRevocationPluginConfigCert \
    --namespace $AB_NAMESPACE \
    --upload file $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 168 'UploadRevocationPluginConfigCert' test.out

#- 169 CreateReward
# body param: body
echo '{"description": "lqs5OtfJ", "eventTopic": "fbZDBMSH", "maxAwarded": 50, "maxAwardedPerUser": 23, "namespaceExpression": "QJq5SHnI", "rewardCode": "pMKu7Mhd", "rewardConditions": [{"condition": "MU0XZPTA", "conditionName": "94L93cin", "eventName": "ujci3pfH", "rewardItems": [{"duration": 32, "endDate": "1983-06-12T00:00:00Z", "identityType": "ITEM_ID", "itemId": "E3satQJn", "quantity": 20, "sku": "KhwDeWq4"}, {"duration": 27, "endDate": "1998-08-28T00:00:00Z", "identityType": "ITEM_SKU", "itemId": "x5M73LsU", "quantity": 67, "sku": "p8vNtzEj"}, {"duration": 11, "endDate": "1986-10-11T00:00:00Z", "identityType": "ITEM_SKU", "itemId": "fpgMTdxg", "quantity": 47, "sku": "rgE9Y7MT"}]}, {"condition": "wNnamcuD", "conditionName": "LyoFGdlh", "eventName": "r4lK9hDJ", "rewardItems": [{"duration": 92, "endDate": "1994-11-03T00:00:00Z", "identityType": "ITEM_ID", "itemId": "iA7FU6zB", "quantity": 67, "sku": "Sm8hsV8j"}, {"duration": 88, "endDate": "1976-03-01T00:00:00Z", "identityType": "ITEM_SKU", "itemId": "R75y2IEC", "quantity": 46, "sku": "BbeP1Zu9"}, {"duration": 4, "endDate": "1992-10-15T00:00:00Z", "identityType": "ITEM_SKU", "itemId": "l45LyjuY", "quantity": 63, "sku": "GbbXJYnS"}]}, {"condition": "bUW9rvys", "conditionName": "9HpfTihM", "eventName": "uRlepcrK", "rewardItems": [{"duration": 35, "endDate": "1998-05-07T00:00:00Z", "identityType": "ITEM_ID", "itemId": "3RgjlHYZ", "quantity": 33, "sku": "cd1nnaiG"}, {"duration": 92, "endDate": "1990-01-08T00:00:00Z", "identityType": "ITEM_SKU", "itemId": "tK3isrqu", "quantity": 81, "sku": "snb37li3"}, {"duration": 82, "endDate": "1971-05-01T00:00:00Z", "identityType": "ITEM_ID", "itemId": "ZsDC6wio", "quantity": 85, "sku": "RI7Z4MDV"}]}], "userIdExpression": "1i8qxErM"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateReward \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 169 'CreateReward' test.out

#- 170 QueryRewards
$CLI_EXE \
    --sn platform \
    --op QueryRewards \
    --namespace $AB_NAMESPACE \
    --eventTopic 'sd9j8bQv' \
    --limit '58' \
    --offset '35' \
    --sortBy '["namespace:desc", "rewardCode"]' \
    > test.out 2>&1
eval_tap $? 170 'QueryRewards' test.out

#- 171 ExportRewards
$CLI_EXE \
    --sn platform \
    --op ExportRewards \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 171 'ExportRewards' test.out

#- 172 ImportRewards
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op ImportRewards \
    --namespace $AB_NAMESPACE \
    --replaceExisting 'false' \
    --upload file $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 172 'ImportRewards' test.out

#- 173 GetReward
$CLI_EXE \
    --sn platform \
    --op GetReward \
    --namespace $AB_NAMESPACE \
    --rewardId 'iFNnEJ8L' \
    > test.out 2>&1
eval_tap $? 173 'GetReward' test.out

#- 174 UpdateReward
# body param: body
echo '{"description": "zADE79hW", "eventTopic": "LirimWJL", "maxAwarded": 60, "maxAwardedPerUser": 41, "namespaceExpression": "C7RYetKX", "rewardCode": "Buapiy0Y", "rewardConditions": [{"condition": "WE92LnEq", "conditionName": "DyGbspwG", "eventName": "TpxgkkS2", "rewardItems": [{"duration": 96, "endDate": "1980-03-23T00:00:00Z", "identityType": "ITEM_ID", "itemId": "poLXhQAN", "quantity": 9, "sku": "hV40zni7"}, {"duration": 23, "endDate": "1975-07-22T00:00:00Z", "identityType": "ITEM_SKU", "itemId": "8dC5k1xB", "quantity": 76, "sku": "aZcjUtQz"}, {"duration": 87, "endDate": "1974-09-24T00:00:00Z", "identityType": "ITEM_ID", "itemId": "H3JiiduH", "quantity": 5, "sku": "K0BgEcdr"}]}, {"condition": "MxksW6tD", "conditionName": "c9108MAC", "eventName": "xzZD7hp7", "rewardItems": [{"duration": 53, "endDate": "1973-03-18T00:00:00Z", "identityType": "ITEM_ID", "itemId": "tyyrOUeI", "quantity": 98, "sku": "IKpItYLj"}, {"duration": 62, "endDate": "1978-09-02T00:00:00Z", "identityType": "ITEM_SKU", "itemId": "H1A4WbUL", "quantity": 31, "sku": "3cr6O5Nh"}, {"duration": 23, "endDate": "1976-01-28T00:00:00Z", "identityType": "ITEM_ID", "itemId": "XBqs49A5", "quantity": 57, "sku": "iQ1wTXu3"}]}, {"condition": "CCJuZAMi", "conditionName": "20bHLuDl", "eventName": "izXRIxqC", "rewardItems": [{"duration": 50, "endDate": "1971-12-29T00:00:00Z", "identityType": "ITEM_ID", "itemId": "sSNQFxp1", "quantity": 9, "sku": "hSsvvFAR"}, {"duration": 10, "endDate": "1974-08-25T00:00:00Z", "identityType": "ITEM_SKU", "itemId": "nsG0UcZk", "quantity": 24, "sku": "1b2Vw25v"}, {"duration": 3, "endDate": "1972-01-05T00:00:00Z", "identityType": "ITEM_ID", "itemId": "32E0XUVW", "quantity": 28, "sku": "092kAgbA"}]}], "userIdExpression": "PsNIDgSU"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateReward \
    --namespace $AB_NAMESPACE \
    --rewardId 'OSDnLsEd' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 174 'UpdateReward' test.out

#- 175 DeleteReward
$CLI_EXE \
    --sn platform \
    --op DeleteReward \
    --namespace $AB_NAMESPACE \
    --rewardId '7rYKco53' \
    > test.out 2>&1
eval_tap $? 175 'DeleteReward' test.out

#- 176 CheckEventCondition
# body param: body
echo '{"payload": {"vYePdHZb": {}, "0vev3Qgl": {}, "O87EC1Dx": {}}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CheckEventCondition \
    --namespace $AB_NAMESPACE \
    --rewardId 'pNo4isBL' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 176 'CheckEventCondition' test.out

#- 177 DeleteRewardConditionRecord
# body param: body
echo '{"conditionName": "JRmyPVUl", "userId": "mfokCQWT"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op DeleteRewardConditionRecord \
    --namespace $AB_NAMESPACE \
    --rewardId 'o5renS7N' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 177 'DeleteRewardConditionRecord' test.out

#- 178 QuerySections
$CLI_EXE \
    --sn platform \
    --op QuerySections \
    --namespace $AB_NAMESPACE \
    --end 'vgwGvYDu' \
    --limit '22' \
    --offset '82' \
    --start 'vPXIRhEA' \
    --storeId '6axlcpsW' \
    --viewId 'RR3rjAN9' \
    > test.out 2>&1
eval_tap $? 178 'QuerySections' test.out

#- 179 CreateSection
# body param: body
echo '{"active": false, "displayOrder": 90, "endDate": "1992-02-10T00:00:00Z", "ext": {"3E7W0IVJ": {}, "DV6evHAB": {}, "G5KNCUG9": {}}, "fixedPeriodRotationConfig": {"backfillType": "NONE", "duration": 42, "itemCount": 32, "rule": "SEQUENCE"}, "items": [{"id": "9NKgAxZw", "sku": "ZvEhhiOT"}, {"id": "ZcAu1Bg9", "sku": "KQpkv90F"}, {"id": "cdyxsK5A", "sku": "kaahrD2L"}], "localizations": {"KCo4wQpq": {"description": "7WRAF4I0", "localExt": {"D0SRNW2o": {}, "hNp6U0IF": {}, "gmXHt6Jl": {}}, "longDescription": "BE6ul1Z7", "title": "Lk1b3Wpc"}, "nuVAn5ls": {"description": "V6IlRcLf", "localExt": {"80SERtNw": {}, "xtSj7IIr": {}, "VaLu29kr": {}}, "longDescription": "skInwoXt", "title": "od1e0ibh"}, "VpXViFpQ": {"description": "2fpoAWGR", "localExt": {"nCaqVDVn": {}, "tk8qLBm2": {}, "XGusa8tp": {}}, "longDescription": "OzFmH7Z7", "title": "HveIMEel"}}, "name": "BrlBdazH", "rotationType": "CUSTOM", "startDate": "1993-10-15T00:00:00Z", "viewId": "MEQy4g9t"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateSection \
    --namespace $AB_NAMESPACE \
    --storeId 'chp7BCoJ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 179 'CreateSection' test.out

#- 180 PurgeExpiredSection
$CLI_EXE \
    --sn platform \
    --op PurgeExpiredSection \
    --namespace $AB_NAMESPACE \
    --storeId 'fvXYuOA0' \
    > test.out 2>&1
eval_tap $? 180 'PurgeExpiredSection' test.out

#- 181 GetSection
$CLI_EXE \
    --sn platform \
    --op GetSection \
    --namespace $AB_NAMESPACE \
    --sectionId 'wo8F4XRI' \
    --storeId 'wNARMFLt' \
    > test.out 2>&1
eval_tap $? 181 'GetSection' test.out

#- 182 UpdateSection
# body param: body
echo '{"active": true, "displayOrder": 87, "endDate": "1984-12-11T00:00:00Z", "ext": {"7EikZL5f": {}, "IyIYgoU7": {}, "m6VWGZrp": {}}, "fixedPeriodRotationConfig": {"backfillType": "NONE", "duration": 58, "itemCount": 44, "rule": "SEQUENCE"}, "items": [{"id": "DyzgUO0H", "sku": "pLmBa2Vb"}, {"id": "r9ktqRQ6", "sku": "7MmXTE9f"}, {"id": "JA1J9TSs", "sku": "BSGzCG5h"}], "localizations": {"rZTWzw90": {"description": "YhMta2Ic", "localExt": {"WUq6S7X3": {}, "Ex54m8gd": {}, "8qsNmxCl": {}}, "longDescription": "M4GFkOGK", "title": "ap06QiAM"}, "yvGpsFs3": {"description": "jDcFDxjL", "localExt": {"1eYTDojR": {}, "eG96Naff": {}, "FHqAQvme": {}}, "longDescription": "yJ4OHxc3", "title": "vcdMoIXM"}, "onD9qmsV": {"description": "8id2HAEr", "localExt": {"s4ls4wK0": {}, "gV2jRhJ7": {}, "LPg7pBdX": {}}, "longDescription": "v1k8ix6L", "title": "TGHxjdEc"}}, "name": "HIz5lHGX", "rotationType": "FIXED_PERIOD", "startDate": "1982-04-20T00:00:00Z", "viewId": "GsBf2zPK"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateSection \
    --namespace $AB_NAMESPACE \
    --sectionId '5x5GaSbg' \
    --storeId 'dyM1yBqf' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 182 'UpdateSection' test.out

#- 183 DeleteSection
$CLI_EXE \
    --sn platform \
    --op DeleteSection \
    --namespace $AB_NAMESPACE \
    --sectionId 'Lkch2kRQ' \
    --storeId 'pXcY9L3M' \
    > test.out 2>&1
eval_tap $? 183 'DeleteSection' test.out

#- 184 ListStores
$CLI_EXE \
    --sn platform \
    --op ListStores \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 184 'ListStores' test.out

#- 185 CreateStore
# body param: body
echo '{"defaultLanguage": "FIHM9HHM", "defaultRegion": "TBJdQ9w2", "description": "51gcFflk", "supportedLanguages": ["OWGlnKi6", "XxiCDuy2", "vLMFW8BZ"], "supportedRegions": ["amOpQoaV", "lgaZecRW", "sgg6yVKq"], "title": "G2wUoWM2"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateStore \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 185 'CreateStore' test.out

#- 186 GetCatalogDefinition
$CLI_EXE \
    --sn platform \
    --op GetCatalogDefinition \
    --namespace $AB_NAMESPACE \
    --catalogType 'VIEW' \
    > test.out 2>&1
eval_tap $? 186 'GetCatalogDefinition' test.out

#- 187 DownloadCSVTemplates
$CLI_EXE \
    --sn platform \
    --op DownloadCSVTemplates \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 187 'DownloadCSVTemplates' test.out

#- 188 ExportStoreByCSV
# body param: body
echo '{"catalogType": "SECTION", "fieldsToBeIncluded": ["jYXXHi1l", "ydD64MDv", "6rd7fFc3"], "idsToBeExported": ["saOYQQu2", "j4HJHZxc", "VwrWO0ec"], "storeId": "hJ80qiYe"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ExportStoreByCSV \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 188 'ExportStoreByCSV' test.out

#- 189 ImportStore
eval_tap 0 189 'ImportStore # SKIP deprecated' test.out

#- 190 GetPublishedStore
$CLI_EXE \
    --sn platform \
    --op GetPublishedStore \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 190 'GetPublishedStore' test.out

#- 191 DeletePublishedStore
$CLI_EXE \
    --sn platform \
    --op DeletePublishedStore \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 191 'DeletePublishedStore' test.out

#- 192 GetPublishedStoreBackup
$CLI_EXE \
    --sn platform \
    --op GetPublishedStoreBackup \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 192 'GetPublishedStoreBackup' test.out

#- 193 RollbackPublishedStore
$CLI_EXE \
    --sn platform \
    --op RollbackPublishedStore \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 193 'RollbackPublishedStore' test.out

#- 194 GetStore
$CLI_EXE \
    --sn platform \
    --op GetStore \
    --namespace $AB_NAMESPACE \
    --storeId 'fyxQeyjG' \
    > test.out 2>&1
eval_tap $? 194 'GetStore' test.out

#- 195 UpdateStore
# body param: body
echo '{"defaultLanguage": "a4lzdAlh", "defaultRegion": "849gOnyN", "description": "dJa9kvwI", "supportedLanguages": ["fZOVJiEo", "khL1nzMm", "uFZTtywl"], "supportedRegions": ["cCiRL2bc", "rnWx9MQ8", "mFmhhlfk"], "title": "2eDxnm0G"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateStore \
    --namespace $AB_NAMESPACE \
    --storeId 'DXnnfFNr' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 195 'UpdateStore' test.out

#- 196 DeleteStore
$CLI_EXE \
    --sn platform \
    --op DeleteStore \
    --namespace $AB_NAMESPACE \
    --storeId 'gkcfWA2Y' \
    > test.out 2>&1
eval_tap $? 196 'DeleteStore' test.out

#- 197 QueryChanges
$CLI_EXE \
    --sn platform \
    --op QueryChanges \
    --namespace $AB_NAMESPACE \
    --storeId 'pKeNN0jn' \
    --action 'DELETE' \
    --itemSku 'MF2Y2M9o' \
    --itemType 'EXTENSION' \
    --limit '14' \
    --offset '28' \
    --selected 'false' \
    --sortBy '["createdAt", "updatedAt:asc", "createdAt:desc"]' \
    --status 'UNPUBLISHED' \
    --type 'ITEM' \
    --updatedAtEnd '4NI1oA23' \
    --updatedAtStart '2hxF8sv6' \
    --withTotal 'true' \
    > test.out 2>&1
eval_tap $? 197 'QueryChanges' test.out

#- 198 PublishAll
$CLI_EXE \
    --sn platform \
    --op PublishAll \
    --namespace $AB_NAMESPACE \
    --storeId 'cM3h1usb' \
    > test.out 2>&1
eval_tap $? 198 'PublishAll' test.out

#- 199 PublishSelected
$CLI_EXE \
    --sn platform \
    --op PublishSelected \
    --namespace $AB_NAMESPACE \
    --storeId 'uPQ1CiC5' \
    > test.out 2>&1
eval_tap $? 199 'PublishSelected' test.out

#- 200 SelectAllRecords
$CLI_EXE \
    --sn platform \
    --op SelectAllRecords \
    --namespace $AB_NAMESPACE \
    --storeId 'F0RBJ8fS' \
    > test.out 2>&1
eval_tap $? 200 'SelectAllRecords' test.out

#- 201 SelectAllRecordsByCriteria
$CLI_EXE \
    --sn platform \
    --op SelectAllRecordsByCriteria \
    --namespace $AB_NAMESPACE \
    --storeId '3VRiD0gH' \
    --action 'UPDATE' \
    --itemSku 'dngyyzmY' \
    --itemType 'COINS' \
    --selected 'true' \
    --type 'ITEM' \
    --updatedAtEnd 'qwe7iIJv' \
    --updatedAtStart 'qn8A1xeZ' \
    > test.out 2>&1
eval_tap $? 201 'SelectAllRecordsByCriteria' test.out

#- 202 GetStatistic
$CLI_EXE \
    --sn platform \
    --op GetStatistic \
    --namespace $AB_NAMESPACE \
    --storeId 'xurzR3AF' \
    --action 'UPDATE' \
    --itemSku '9gw2Mtu2' \
    --itemType 'EXTENSION' \
    --type 'CATEGORY' \
    --updatedAtEnd 'W5pAtzbi' \
    --updatedAtStart 'lOJ8BfKX' \
    > test.out 2>&1
eval_tap $? 202 'GetStatistic' test.out

#- 203 UnselectAllRecords
$CLI_EXE \
    --sn platform \
    --op UnselectAllRecords \
    --namespace $AB_NAMESPACE \
    --storeId '1eK1AApW' \
    > test.out 2>&1
eval_tap $? 203 'UnselectAllRecords' test.out

#- 204 SelectRecord
$CLI_EXE \
    --sn platform \
    --op SelectRecord \
    --changeId 'J69rN7hz' \
    --namespace $AB_NAMESPACE \
    --storeId 'dWleyc8F' \
    > test.out 2>&1
eval_tap $? 204 'SelectRecord' test.out

#- 205 UnselectRecord
$CLI_EXE \
    --sn platform \
    --op UnselectRecord \
    --changeId 'VynmFdei' \
    --namespace $AB_NAMESPACE \
    --storeId '5TuXpKbG' \
    > test.out 2>&1
eval_tap $? 205 'UnselectRecord' test.out

#- 206 CloneStore
$CLI_EXE \
    --sn platform \
    --op CloneStore \
    --namespace $AB_NAMESPACE \
    --storeId 'Pdz88tVm' \
    --targetStoreId 'k5ttZKiY' \
    > test.out 2>&1
eval_tap $? 206 'CloneStore' test.out

#- 207 ExportStore
eval_tap 0 207 'ExportStore # SKIP deprecated' test.out

#- 208 QueryImportHistory
$CLI_EXE \
    --sn platform \
    --op QueryImportHistory \
    --namespace $AB_NAMESPACE \
    --storeId 'tPnIJYOH' \
    --end 'I9po3qDV' \
    --limit '8' \
    --offset '15' \
    --sortBy 'Vhw3Zmw1' \
    --start '5Mps5StH' \
    --success 'false' \
    > test.out 2>&1
eval_tap $? 208 'QueryImportHistory' test.out

#- 209 ImportStoreByCSV
# form data upload: category
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
# form data upload: display
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
# form data upload: item
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
# form data upload: section
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op ImportStoreByCSV \
    --namespace $AB_NAMESPACE \
    --storeId 'X1Xh5oHu' \
    --upload category $TEMP_FILE_UPLOAD \
    --upload display $TEMP_FILE_UPLOAD \
    --upload item $TEMP_FILE_UPLOAD \
    --notes 'shXpCz9h' \
    --upload section $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 209 'ImportStoreByCSV' test.out

#- 210 QuerySubscriptions
$CLI_EXE \
    --sn platform \
    --op QuerySubscriptions \
    --namespace $AB_NAMESPACE \
    --chargeStatus 'RECURRING_CHARGING' \
    --itemId 'TeOQ3HD5' \
    --limit '99' \
    --offset '74' \
    --sku 'mSfA30CB' \
    --status 'ACTIVE' \
    --subscribedBy 'USER' \
    --userId 'OjyEdnLI' \
    > test.out 2>&1
eval_tap $? 210 'QuerySubscriptions' test.out

#- 211 RecurringChargeSubscription
$CLI_EXE \
    --sn platform \
    --op RecurringChargeSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'lB5Vo4Oo' \
    > test.out 2>&1
eval_tap $? 211 'RecurringChargeSubscription' test.out

#- 212 GetTicketDynamic
$CLI_EXE \
    --sn platform \
    --op GetTicketDynamic \
    --boothName 'yEqyvVQh' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 212 'GetTicketDynamic' test.out

#- 213 DecreaseTicketSale
# body param: body
echo '{"orderNo": "PeACHnqX"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op DecreaseTicketSale \
    --boothName 'jnwpO5aG' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 213 'DecreaseTicketSale' test.out

#- 214 GetTicketBoothID
$CLI_EXE \
    --sn platform \
    --op GetTicketBoothID \
    --boothName 'hgCgo5e0' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 214 'GetTicketBoothID' test.out

#- 215 IncreaseTicketSale
# body param: body
echo '{"count": 49, "orderNo": "5J3nbLP4"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op IncreaseTicketSale \
    --boothName 'G1qtV9rE' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 215 'IncreaseTicketSale' test.out

#- 216 Commit
# body param: body
echo '{"actions": [{"operations": [{"creditPayload": {"balanceOrigin": "Nintendo", "count": 47, "currencyCode": "xrA2VgHm", "expireAt": "1971-08-31T00:00:00Z"}, "debitPayload": {"count": 92, "currencyCode": "uNNnv2Fo", "walletPlatform": "IOS"}, "fulFillItemPayload": {"count": 77, "entitlementCollectionId": "MRy7eo15", "entitlementOrigin": "GooglePlay", "itemIdentity": "5Wff3BC9", "itemIdentityType": "ITEM_ID"}, "revokeEntitlementPayload": {"count": 98, "entitlementId": "8bMhChnS"}, "type": "FULFILL_ITEM"}, {"creditPayload": {"balanceOrigin": "Other", "count": 63, "currencyCode": "KJ4Fj1Ml", "expireAt": "1986-10-11T00:00:00Z"}, "debitPayload": {"count": 74, "currencyCode": "Otfd7wo7", "walletPlatform": "Playstation"}, "fulFillItemPayload": {"count": 19, "entitlementCollectionId": "aGsuUCwd", "entitlementOrigin": "Twitch", "itemIdentity": "trTyXQyt", "itemIdentityType": "ITEM_SKU"}, "revokeEntitlementPayload": {"count": 7, "entitlementId": "rXHUMOGT"}, "type": "REVOKE_ENTITLEMENT"}, {"creditPayload": {"balanceOrigin": "Other", "count": 63, "currencyCode": "dLBSus6o", "expireAt": "1999-03-30T00:00:00Z"}, "debitPayload": {"count": 19, "currencyCode": "nGhlncZy", "walletPlatform": "Epic"}, "fulFillItemPayload": {"count": 9, "entitlementCollectionId": "nkqlCfXs", "entitlementOrigin": "Nintendo", "itemIdentity": "mMENhJ6y", "itemIdentityType": "ITEM_SKU"}, "revokeEntitlementPayload": {"count": 52, "entitlementId": "Jfd7LhqR"}, "type": "DEBIT_WALLET"}], "userId": "bmsGmH5s"}, {"operations": [{"creditPayload": {"balanceOrigin": "System", "count": 49, "currencyCode": "Dp9xwBew", "expireAt": "1980-02-12T00:00:00Z"}, "debitPayload": {"count": 98, "currencyCode": "JwAmtvah", "walletPlatform": "Nintendo"}, "fulFillItemPayload": {"count": 97, "entitlementCollectionId": "QkYRtPA0", "entitlementOrigin": "Twitch", "itemIdentity": "OwkY7kNr", "itemIdentityType": "ITEM_SKU"}, "revokeEntitlementPayload": {"count": 3, "entitlementId": "9DXrrHJT"}, "type": "REVOKE_ENTITLEMENT"}, {"creditPayload": {"balanceOrigin": "System", "count": 77, "currencyCode": "4ECwKBYj", "expireAt": "1975-04-29T00:00:00Z"}, "debitPayload": {"count": 4, "currencyCode": "VYkCFuLI", "walletPlatform": "GooglePlay"}, "fulFillItemPayload": {"count": 17, "entitlementCollectionId": "gJMXbfzu", "entitlementOrigin": "Oculus", "itemIdentity": "Unoynyur", "itemIdentityType": "ITEM_SKU"}, "revokeEntitlementPayload": {"count": 15, "entitlementId": "AcpisHgn"}, "type": "DEBIT_WALLET"}, {"creditPayload": {"balanceOrigin": "System", "count": 38, "currencyCode": "lzTYPp2c", "expireAt": "1998-02-23T00:00:00Z"}, "debitPayload": {"count": 69, "currencyCode": "m2XXRoQB", "walletPlatform": "Oculus"}, "fulFillItemPayload": {"count": 21, "entitlementCollectionId": "Rm27XUaj", "entitlementOrigin": "Epic", "itemIdentity": "1taHnNSE", "itemIdentityType": "ITEM_SKU"}, "revokeEntitlementPayload": {"count": 95, "entitlementId": "eILWyjHz"}, "type": "DEBIT_WALLET"}], "userId": "kTy4MZdW"}, {"operations": [{"creditPayload": {"balanceOrigin": "GooglePlay", "count": 72, "currencyCode": "S2XKmkCd", "expireAt": "1982-04-04T00:00:00Z"}, "debitPayload": {"count": 57, "currencyCode": "HRUM3rot", "walletPlatform": "Other"}, "fulFillItemPayload": {"count": 40, "entitlementCollectionId": "2zpRtzId", "entitlementOrigin": "Steam", "itemIdentity": "ZYj83gSr", "itemIdentityType": "ITEM_ID"}, "revokeEntitlementPayload": {"count": 15, "entitlementId": "MEwDIVfH"}, "type": "REVOKE_ENTITLEMENT"}, {"creditPayload": {"balanceOrigin": "Twitch", "count": 87, "currencyCode": "FhQdxvqW", "expireAt": "1980-05-17T00:00:00Z"}, "debitPayload": {"count": 11, "currencyCode": "rtfFFi26", "walletPlatform": "Other"}, "fulFillItemPayload": {"count": 29, "entitlementCollectionId": "OITLn6dC", "entitlementOrigin": "GooglePlay", "itemIdentity": "poDSyJNj", "itemIdentityType": "ITEM_ID"}, "revokeEntitlementPayload": {"count": 66, "entitlementId": "T5Qj69zD"}, "type": "CREDIT_WALLET"}, {"creditPayload": {"balanceOrigin": "System", "count": 37, "currencyCode": "nzeL9k5Y", "expireAt": "1977-11-12T00:00:00Z"}, "debitPayload": {"count": 18, "currencyCode": "asvrN9t8", "walletPlatform": "Nintendo"}, "fulFillItemPayload": {"count": 59, "entitlementCollectionId": "u67ZGzu3", "entitlementOrigin": "Nintendo", "itemIdentity": "wTBC5rWp", "itemIdentityType": "ITEM_ID"}, "revokeEntitlementPayload": {"count": 96, "entitlementId": "ddYLV471"}, "type": "REVOKE_ENTITLEMENT"}], "userId": "2RbfUsLE"}], "metadata": {"BG12Dbgn": {}, "wE7Y7qcg": {}, "4PZlKaBA": {}}, "needPreCheck": false, "transactionId": "4PSUXYs2", "type": "UnYCUmK6"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op Commit \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 216 'Commit' test.out

#- 217 GetTradeHistoryByCriteria
$CLI_EXE \
    --sn platform \
    --op GetTradeHistoryByCriteria \
    --namespace $AB_NAMESPACE \
    --limit '34' \
    --offset '0' \
    --status 'FAILED' \
    --type 'AtFVmaGK' \
    --userId 'LVQVXc5l' \
    > test.out 2>&1
eval_tap $? 217 'GetTradeHistoryByCriteria' test.out

#- 218 GetTradeHistoryByTransactionId
$CLI_EXE \
    --sn platform \
    --op GetTradeHistoryByTransactionId \
    --namespace $AB_NAMESPACE \
    --transactionId 'klTLnDw9' \
    > test.out 2>&1
eval_tap $? 218 'GetTradeHistoryByTransactionId' test.out

#- 219 UnlockSteamUserAchievement
# body param: body
echo '{"achievements": [{"id": "JfreE0rM", "value": 62}, {"id": "2bumpTX1", "value": 86}, {"id": "84wPygIs", "value": 41}], "steamUserId": "3aNUvCLT"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UnlockSteamUserAchievement \
    --namespace $AB_NAMESPACE \
    --userId '3yBDjj4L' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 219 'UnlockSteamUserAchievement' test.out

#- 220 GetXblUserAchievements
$CLI_EXE \
    --sn platform \
    --op GetXblUserAchievements \
    --namespace $AB_NAMESPACE \
    --userId 'usHIcYUG' \
    --xboxUserId 'chKtdecH' \
    > test.out 2>&1
eval_tap $? 220 'GetXblUserAchievements' test.out

#- 221 UpdateXblUserAchievement
# body param: body
echo '{"achievements": [{"id": "sjGxYxIH", "percentComplete": 3}, {"id": "3QNLyq44", "percentComplete": 100}, {"id": "UCwq1gUm", "percentComplete": 63}], "serviceConfigId": "MBUaKuXc", "titleId": "pxE05CJO", "xboxUserId": "fyrp57eD"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXblUserAchievement \
    --namespace $AB_NAMESPACE \
    --userId 't7EobIes' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 221 'UpdateXblUserAchievement' test.out

#- 222 AnonymizeCampaign
$CLI_EXE \
    --sn platform \
    --op AnonymizeCampaign \
    --namespace $AB_NAMESPACE \
    --userId 'OKNN2Ei7' \
    > test.out 2>&1
eval_tap $? 222 'AnonymizeCampaign' test.out

#- 223 AnonymizeEntitlement
$CLI_EXE \
    --sn platform \
    --op AnonymizeEntitlement \
    --namespace $AB_NAMESPACE \
    --userId '9ei1vzn8' \
    > test.out 2>&1
eval_tap $? 223 'AnonymizeEntitlement' test.out

#- 224 AnonymizeFulfillment
$CLI_EXE \
    --sn platform \
    --op AnonymizeFulfillment \
    --namespace $AB_NAMESPACE \
    --userId 'V7uwfeKO' \
    > test.out 2>&1
eval_tap $? 224 'AnonymizeFulfillment' test.out

#- 225 AnonymizeIntegration
$CLI_EXE \
    --sn platform \
    --op AnonymizeIntegration \
    --namespace $AB_NAMESPACE \
    --userId '4WaJyljO' \
    > test.out 2>&1
eval_tap $? 225 'AnonymizeIntegration' test.out

#- 226 AnonymizeOrder
$CLI_EXE \
    --sn platform \
    --op AnonymizeOrder \
    --namespace $AB_NAMESPACE \
    --userId '5NjvRtgY' \
    > test.out 2>&1
eval_tap $? 226 'AnonymizeOrder' test.out

#- 227 AnonymizePayment
$CLI_EXE \
    --sn platform \
    --op AnonymizePayment \
    --namespace $AB_NAMESPACE \
    --userId '30rCWnjx' \
    > test.out 2>&1
eval_tap $? 227 'AnonymizePayment' test.out

#- 228 AnonymizeRevocation
$CLI_EXE \
    --sn platform \
    --op AnonymizeRevocation \
    --namespace $AB_NAMESPACE \
    --userId 'epE64L77' \
    > test.out 2>&1
eval_tap $? 228 'AnonymizeRevocation' test.out

#- 229 AnonymizeSubscription
$CLI_EXE \
    --sn platform \
    --op AnonymizeSubscription \
    --namespace $AB_NAMESPACE \
    --userId 'tkr9fjDK' \
    > test.out 2>&1
eval_tap $? 229 'AnonymizeSubscription' test.out

#- 230 AnonymizeWallet
$CLI_EXE \
    --sn platform \
    --op AnonymizeWallet \
    --namespace $AB_NAMESPACE \
    --userId 'qD8gReFM' \
    > test.out 2>&1
eval_tap $? 230 'AnonymizeWallet' test.out

#- 231 GetUserDLCByPlatform
$CLI_EXE \
    --sn platform \
    --op GetUserDLCByPlatform \
    --namespace $AB_NAMESPACE \
    --userId 'qtnGbhKf' \
    --type 'STEAM' \
    > test.out 2>&1
eval_tap $? 231 'GetUserDLCByPlatform' test.out

#- 232 GetUserDLC
$CLI_EXE \
    --sn platform \
    --op GetUserDLC \
    --namespace $AB_NAMESPACE \
    --userId 'fewdey86' \
    --type 'EPICGAMES' \
    > test.out 2>&1
eval_tap $? 232 'GetUserDLC' test.out

#- 233 QueryUserEntitlements
$CLI_EXE \
    --sn platform \
    --op QueryUserEntitlements \
    --namespace $AB_NAMESPACE \
    --userId '4v06fDXX' \
    --activeOnly 'true' \
    --appType 'DEMO' \
    --collectionId 'CunK06Hp' \
    --entitlementClazz 'OPTIONBOX' \
    --entitlementName 'cOgGxK33' \
    --features '["8yntJQLa", "6a7qHmBf", "9WZtGjTt"]' \
    --fuzzyMatchName 'false' \
    --itemId '["JoU65dAX", "3T9I3Qox", "VOsuquVV"]' \
    --limit '37' \
    --offset '35' \
    --origin 'IOS' \
    > test.out 2>&1
eval_tap $? 233 'QueryUserEntitlements' test.out

#- 234 GrantUserEntitlement
# body param: body
echo '[{"collectionId": "iIg6L0ub", "endDate": "1972-07-11T00:00:00Z", "grantedCode": "Rnn6yEeq", "itemId": "PXgDRxqJ", "itemNamespace": "A4YLaCN5", "language": "wbjy", "origin": "Xbox", "quantity": 16, "region": "cfIm70qw", "source": "GIFT", "startDate": "1974-11-05T00:00:00Z", "storeId": "SadLOhlm"}, {"collectionId": "6WxF7tlR", "endDate": "1976-08-19T00:00:00Z", "grantedCode": "bJLzInMP", "itemId": "XIEhg3cz", "itemNamespace": "vsktVyoR", "language": "RF-XRhP", "origin": "Steam", "quantity": 100, "region": "bskkGf7P", "source": "PROMOTION", "startDate": "1995-08-24T00:00:00Z", "storeId": "DgQHjuL8"}, {"collectionId": "x7bQiqQS", "endDate": "1978-03-15T00:00:00Z", "grantedCode": "dR8snUd4", "itemId": "NCqHBnik", "itemNamespace": "PPc1YW7x", "language": "nEL-vqjl", "origin": "Playstation", "quantity": 91, "region": "aHLHeotY", "source": "REWARD", "startDate": "1994-05-10T00:00:00Z", "storeId": "MVR31svl"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op GrantUserEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'NTL8Nu44' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 234 'GrantUserEntitlement' test.out

#- 235 GetUserAppEntitlementByAppId
$CLI_EXE \
    --sn platform \
    --op GetUserAppEntitlementByAppId \
    --namespace $AB_NAMESPACE \
    --userId 'qOZ6qYrn' \
    --activeOnly 'false' \
    --appId 's7YtqEzV' \
    > test.out 2>&1
eval_tap $? 235 'GetUserAppEntitlementByAppId' test.out

#- 236 QueryUserEntitlementsByAppType
$CLI_EXE \
    --sn platform \
    --op QueryUserEntitlementsByAppType \
    --namespace $AB_NAMESPACE \
    --userId 'HOpiO7ut' \
    --activeOnly 'true' \
    --limit '46' \
    --offset '39' \
    --appType 'GAME' \
    > test.out 2>&1
eval_tap $? 236 'QueryUserEntitlementsByAppType' test.out

#- 237 GetUserEntitlementByItemId
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'EvGG22Va' \
    --activeOnly 'true' \
    --entitlementClazz 'OPTIONBOX' \
    --platform 'FdcRIkxM' \
    --itemId 'JYDFiuFD' \
    > test.out 2>&1
eval_tap $? 237 'GetUserEntitlementByItemId' test.out

#- 238 GetUserActiveEntitlementsByItemIds
$CLI_EXE \
    --sn platform \
    --op GetUserActiveEntitlementsByItemIds \
    --namespace $AB_NAMESPACE \
    --userId 'iQIJKQtw' \
    --ids '["M4Bkn8I4", "XtaK0Zkn", "4Rpbd5eU"]' \
    --platform '0bWCPGHf' \
    > test.out 2>&1
eval_tap $? 238 'GetUserActiveEntitlementsByItemIds' test.out

#- 239 GetUserEntitlementBySku
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementBySku \
    --namespace $AB_NAMESPACE \
    --userId 'ZFUNgMuY' \
    --activeOnly 'true' \
    --entitlementClazz 'LOOTBOX' \
    --platform 'QtpBnje2' \
    --sku 'ygaLoRkq' \
    > test.out 2>&1
eval_tap $? 239 'GetUserEntitlementBySku' test.out

#- 240 ExistsAnyUserActiveEntitlement
$CLI_EXE \
    --sn platform \
    --op ExistsAnyUserActiveEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'IBfusXRx' \
    --appIds '["a0d0Dh8x", "xhWLBoVR", "zwLH0wx7"]' \
    --itemIds '["0dH8gh0y", "3LVj7CZq", "TeXXDym0"]' \
    --platform 'vw4mJ1MV' \
    --skus '["D1oFjVm4", "9SFg8bqT", "r8aMdzrQ"]' \
    > test.out 2>&1
eval_tap $? 240 'ExistsAnyUserActiveEntitlement' test.out

#- 241 ExistsAnyUserActiveEntitlementByItemIds
$CLI_EXE \
    --sn platform \
    --op ExistsAnyUserActiveEntitlementByItemIds \
    --namespace $AB_NAMESPACE \
    --userId '8qyhLHFN' \
    --platform 'Lk16wBbO' \
    --itemIds '["hKxSp5pY", "auKTKUbt", "SDLRD2oH"]' \
    > test.out 2>&1
eval_tap $? 241 'ExistsAnyUserActiveEntitlementByItemIds' test.out

#- 242 GetUserAppEntitlementOwnershipByAppId
$CLI_EXE \
    --sn platform \
    --op GetUserAppEntitlementOwnershipByAppId \
    --namespace $AB_NAMESPACE \
    --userId 'cAbJUi48' \
    --appId 'OA74E9vT' \
    > test.out 2>&1
eval_tap $? 242 'GetUserAppEntitlementOwnershipByAppId' test.out

#- 243 GetUserEntitlementOwnershipByItemId
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementOwnershipByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'paySvVLr' \
    --entitlementClazz 'OPTIONBOX' \
    --platform 'g02o5X8V' \
    --itemId 'PxRyBrLu' \
    > test.out 2>&1
eval_tap $? 243 'GetUserEntitlementOwnershipByItemId' test.out

#- 244 GetUserEntitlementOwnershipByItemIds
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementOwnershipByItemIds \
    --namespace $AB_NAMESPACE \
    --userId 'IkqA4Z3o' \
    --ids '["3QXbMBaM", "EP7YsdDu", "M4zl8fe5"]' \
    --platform 'QX5jsmOV' \
    > test.out 2>&1
eval_tap $? 244 'GetUserEntitlementOwnershipByItemIds' test.out

#- 245 GetUserEntitlementOwnershipBySku
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementOwnershipBySku \
    --namespace $AB_NAMESPACE \
    --userId 'c0JfOOL8' \
    --entitlementClazz 'CODE' \
    --platform 'WR15aYWv' \
    --sku 'mmC1zAjm' \
    > test.out 2>&1
eval_tap $? 245 'GetUserEntitlementOwnershipBySku' test.out

#- 246 RevokeAllEntitlements
$CLI_EXE \
    --sn platform \
    --op RevokeAllEntitlements \
    --namespace $AB_NAMESPACE \
    --userId 'OGwXSUd4' \
    > test.out 2>&1
eval_tap $? 246 'RevokeAllEntitlements' test.out

#- 247 RevokeUserEntitlements
$CLI_EXE \
    --sn platform \
    --op RevokeUserEntitlements \
    --namespace $AB_NAMESPACE \
    --userId 'vFi2s6qR' \
    --entitlementIds 'pL0B2lSk' \
    > test.out 2>&1
eval_tap $? 247 'RevokeUserEntitlements' test.out

#- 248 GetUserEntitlement
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlement \
    --entitlementId 'MA1mrOPz' \
    --namespace $AB_NAMESPACE \
    --userId 'JNDiqh7B' \
    > test.out 2>&1
eval_tap $? 248 'GetUserEntitlement' test.out

#- 249 UpdateUserEntitlement
# body param: body
echo '{"collectionId": "x2pKXh4p", "endDate": "1987-12-19T00:00:00Z", "nullFieldList": ["CUSUcDwU", "2Shhxds1", "sPPpANLg"], "origin": "System", "reason": "0iy4QEl4", "startDate": "1974-01-31T00:00:00Z", "status": "SOLD", "useCount": 44}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateUserEntitlement \
    --entitlementId 'BXRXMcos' \
    --namespace $AB_NAMESPACE \
    --userId 'g5Zg72fW' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 249 'UpdateUserEntitlement' test.out

#- 250 ConsumeUserEntitlement
# body param: body
echo '{"options": ["hJxSGFfr", "t3O67fyY", "2DVfGeia"], "platform": "H9wxgtTz", "requestId": "390xsByb", "useCount": 16}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ConsumeUserEntitlement \
    --entitlementId 'cnL5UH8V' \
    --namespace $AB_NAMESPACE \
    --userId 'BZdxwmyj' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 250 'ConsumeUserEntitlement' test.out

#- 251 DisableUserEntitlement
$CLI_EXE \
    --sn platform \
    --op DisableUserEntitlement \
    --entitlementId 'zDtTfTpG' \
    --namespace $AB_NAMESPACE \
    --userId 'TuWS3tr1' \
    > test.out 2>&1
eval_tap $? 251 'DisableUserEntitlement' test.out

#- 252 EnableUserEntitlement
$CLI_EXE \
    --sn platform \
    --op EnableUserEntitlement \
    --entitlementId 'WAXGbp5a' \
    --namespace $AB_NAMESPACE \
    --userId 'Ni3HFZgw' \
    > test.out 2>&1
eval_tap $? 252 'EnableUserEntitlement' test.out

#- 253 GetUserEntitlementHistories
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementHistories \
    --entitlementId 'hiCzuoRt' \
    --namespace $AB_NAMESPACE \
    --userId '74jGjj1q' \
    > test.out 2>&1
eval_tap $? 253 'GetUserEntitlementHistories' test.out

#- 254 RevokeUserEntitlement
$CLI_EXE \
    --sn platform \
    --op RevokeUserEntitlement \
    --entitlementId 'AIKAB8Sp' \
    --namespace $AB_NAMESPACE \
    --userId 'mhgLE9sC' \
    > test.out 2>&1
eval_tap $? 254 'RevokeUserEntitlement' test.out

#- 255 RevokeUserEntitlementByUseCount
# body param: body
echo '{"reason": "lYp8VvQ3", "useCount": 13}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RevokeUserEntitlementByUseCount \
    --entitlementId 'TgllJYmH' \
    --namespace $AB_NAMESPACE \
    --userId 'pI4LVKFO' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 255 'RevokeUserEntitlementByUseCount' test.out

#- 256 PreCheckRevokeUserEntitlementByUseCount
$CLI_EXE \
    --sn platform \
    --op PreCheckRevokeUserEntitlementByUseCount \
    --entitlementId 'KG87UASP' \
    --namespace $AB_NAMESPACE \
    --userId 'sgUiiYWP' \
    --quantity '52' \
    > test.out 2>&1
eval_tap $? 256 'PreCheckRevokeUserEntitlementByUseCount' test.out

#- 257 RevokeUseCount
eval_tap 0 257 'RevokeUseCount # SKIP deprecated' test.out

#- 258 SellUserEntitlement
# body param: body
echo '{"platform": "TGME0ln7", "requestId": "OFZ4rAad", "useCount": 80}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SellUserEntitlement \
    --entitlementId 'Ptw3tYvM' \
    --namespace $AB_NAMESPACE \
    --userId 'NZJJLCEn' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 258 'SellUserEntitlement' test.out

#- 259 FulfillItem
# body param: body
echo '{"duration": 61, "endDate": "1971-03-03T00:00:00Z", "entitlementCollectionId": "Rr6rYG5v", "entitlementOrigin": "GooglePlay", "itemId": "xoB3NeOw", "itemSku": "5GpActMK", "language": "jSY6I7Is", "metadata": {"Hjo1gKse": {}, "EURgk5Nk": {}, "4IFPlBZS": {}}, "order": {"currency": {"currencyCode": "eamwctl7", "currencySymbol": "HJgqOHmv", "currencyType": "REAL", "decimals": 26, "namespace": "RMG2liHJ"}, "ext": {"GDs8wdb4": {}, "UCcmhpmh": {}, "fXF7ikUA": {}}, "free": true}, "orderNo": "HKNlqMq6", "origin": "Epic", "overrideBundleItemQty": {"aI7pZhw0": 86, "llq11XZi": 48, "KqkAvZ3N": 87}, "quantity": 100, "region": "FOmhyK0m", "source": "IAP_CHARGEBACK_REVERSED", "startDate": "1977-07-24T00:00:00Z", "storeId": "8NvNMG6g"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op FulfillItem \
    --namespace $AB_NAMESPACE \
    --userId 'a76SZjqX' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 259 'FulfillItem' test.out

#- 260 RedeemCode
# body param: body
echo '{"code": "3ylkfny8", "language": "jV_081", "region": "RMxGLmz4"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RedeemCode \
    --namespace $AB_NAMESPACE \
    --userId 'agpRUw4D' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 260 'RedeemCode' test.out

#- 261 PreCheckFulfillItem
# body param: body
echo '{"itemId": "SuUtnFUI", "itemSku": "o6xzLALj", "quantity": 39}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PreCheckFulfillItem \
    --namespace $AB_NAMESPACE \
    --userId 'k5m5I2i6' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 261 'PreCheckFulfillItem' test.out

#- 262 FulfillRewards
# body param: body
echo '{"entitlementCollectionId": "rCEemlaW", "entitlementOrigin": "GooglePlay", "metadata": {"uslcLP1P": {}, "ZvysamZU": {}, "1UIETwl4": {}}, "origin": "Oculus", "rewards": [{"currency": {"currencyCode": "JZyji8Ts", "namespace": "iNd4VatA"}, "item": {"itemId": "KAJe4RAf", "itemSku": "8p7biRzN", "itemType": "h49zsbJ1"}, "quantity": 8, "type": "CURRENCY"}, {"currency": {"currencyCode": "sY3vSzVq", "namespace": "G6jxxeok"}, "item": {"itemId": "m0EVs7N2", "itemSku": "HkJKjhJO", "itemType": "XQzkIKm0"}, "quantity": 71, "type": "ITEM"}, {"currency": {"currencyCode": "qGNL7JxE", "namespace": "1lZ1Cavy"}, "item": {"itemId": "Q2ssasv2", "itemSku": "Cz4hlrQl", "itemType": "LkhMZKPO"}, "quantity": 22, "type": "ITEM"}], "source": "ACHIEVEMENT", "transactionId": "7S0OyUKy"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op FulfillRewards \
    --namespace $AB_NAMESPACE \
    --userId 'JzgMiTVc' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 262 'FulfillRewards' test.out

#- 263 QueryUserIAPOrders
$CLI_EXE \
    --sn platform \
    --op QueryUserIAPOrders \
    --namespace $AB_NAMESPACE \
    --userId 'iyYBRphF' \
    --endTime '2gKJr5sp' \
    --limit '62' \
    --offset '74' \
    --productId '513KL1rf' \
    --startTime 's1NWhXbz' \
    --status 'FAILED' \
    --type 'APPLE' \
    > test.out 2>&1
eval_tap $? 263 'QueryUserIAPOrders' test.out

#- 264 QueryAllUserIAPOrders
$CLI_EXE \
    --sn platform \
    --op QueryAllUserIAPOrders \
    --namespace $AB_NAMESPACE \
    --userId 'C4l4DkQt' \
    > test.out 2>&1
eval_tap $? 264 'QueryAllUserIAPOrders' test.out

#- 265 QueryUserIAPConsumeHistory
$CLI_EXE \
    --sn platform \
    --op QueryUserIAPConsumeHistory \
    --namespace $AB_NAMESPACE \
    --userId 'UxeDFFBi' \
    --endTime 'taa3JrXc' \
    --limit '6' \
    --offset '34' \
    --startTime 'rIxNsGuB' \
    --status 'FAIL' \
    --type 'TWITCH' \
    > test.out 2>&1
eval_tap $? 265 'QueryUserIAPConsumeHistory' test.out

#- 266 MockFulfillIAPItem
# body param: body
echo '{"itemIdentityType": "ITEM_SKU", "language": "jam_hN", "productId": "9NRy008s", "region": "pLIZrXfm", "transactionId": "4OpZQFxh", "type": "XBOX"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op MockFulfillIAPItem \
    --namespace $AB_NAMESPACE \
    --userId '62YQ8LLi' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 266 'MockFulfillIAPItem' test.out

#- 267 QueryUserOrders
$CLI_EXE \
    --sn platform \
    --op QueryUserOrders \
    --namespace $AB_NAMESPACE \
    --userId '7Pgx1j69' \
    --itemId 'jT5NeCDu' \
    --limit '95' \
    --offset '51' \
    --status 'FULFILLED' \
    > test.out 2>&1
eval_tap $? 267 'QueryUserOrders' test.out

#- 268 AdminCreateUserOrder
# body param: body
echo '{"currencyCode": "kMDuZBbx", "currencyNamespace": "HYJhj8DQ", "discountedPrice": 25, "entitlementPlatform": "Other", "ext": {"egxl0u9l": {}, "T1RjGK30": {}, "8xEM0e9c": {}}, "itemId": "kuEZP7Et", "language": "bI4xMekd", "options": {"skipPriceValidation": false}, "platform": "Other", "price": 27, "quantity": 82, "region": "NGVxZvaD", "returnUrl": "DZhbnR1b", "sandbox": false, "sectionId": "LMLlJdZZ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op AdminCreateUserOrder \
    --namespace $AB_NAMESPACE \
    --userId 'I399aiYl' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 268 'AdminCreateUserOrder' test.out

#- 269 CountOfPurchasedItem
$CLI_EXE \
    --sn platform \
    --op CountOfPurchasedItem \
    --namespace $AB_NAMESPACE \
    --userId 'Iw6Q15bK' \
    --itemId 'GMIWXl8Q' \
    > test.out 2>&1
eval_tap $? 269 'CountOfPurchasedItem' test.out

#- 270 GetUserOrder
$CLI_EXE \
    --sn platform \
    --op GetUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo '22nraa7V' \
    --userId '5gj9q2Bn' \
    > test.out 2>&1
eval_tap $? 270 'GetUserOrder' test.out

#- 271 UpdateUserOrderStatus
# body param: body
echo '{"status": "REFUNDING", "statusReason": "q9znVGbg"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateUserOrderStatus \
    --namespace $AB_NAMESPACE \
    --orderNo 'ObyDmNGO' \
    --userId 'SzcMOwJO' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 271 'UpdateUserOrderStatus' test.out

#- 272 FulfillUserOrder
$CLI_EXE \
    --sn platform \
    --op FulfillUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'dRBAmyaw' \
    --userId 'R2NbN544' \
    > test.out 2>&1
eval_tap $? 272 'FulfillUserOrder' test.out

#- 273 GetUserOrderGrant
$CLI_EXE \
    --sn platform \
    --op GetUserOrderGrant \
    --namespace $AB_NAMESPACE \
    --orderNo 'L1sCGuvJ' \
    --userId 'Z4WKyInD' \
    > test.out 2>&1
eval_tap $? 273 'GetUserOrderGrant' test.out

#- 274 GetUserOrderHistories
$CLI_EXE \
    --sn platform \
    --op GetUserOrderHistories \
    --namespace $AB_NAMESPACE \
    --orderNo 'aEWYGeGM' \
    --userId 'SkxWqMal' \
    > test.out 2>&1
eval_tap $? 274 'GetUserOrderHistories' test.out

#- 275 ProcessUserOrderNotification
# body param: body
echo '{"additionalData": {"cardSummary": "eAobfb03"}, "authorisedTime": "1991-02-04T00:00:00Z", "chargebackReversedTime": "1984-05-26T00:00:00Z", "chargebackTime": "1988-07-12T00:00:00Z", "chargedTime": "1987-06-16T00:00:00Z", "createdTime": "1999-09-07T00:00:00Z", "currency": {"currencyCode": "o3RUejJV", "currencySymbol": "IdVjwOlL", "currencyType": "VIRTUAL", "decimals": 88, "namespace": "6LaKGRub"}, "customParameters": {"nlmEF3XP": {}, "HDXEX3K2": {}, "qCKgQxGP": {}}, "extOrderNo": "zbllvBv6", "extTxId": "ZSzv5Eps", "extUserId": "ePhnSQ1s", "issuedAt": "1981-11-08T00:00:00Z", "metadata": {"2uNnqgpX": "PnXrta8a", "RxSHQuGw": "zBsPZLwb", "jvCHtEjc": "S3xRug0A"}, "namespace": "BV7JzjOc", "nonceStr": "XE97qxhk", "paymentMethod": "gMs5BVjc", "paymentMethodFee": 84, "paymentOrderNo": "sfvlXGlU", "paymentProvider": "XSOLLA", "paymentProviderFee": 32, "paymentStationUrl": "K1utK2T8", "price": 34, "refundedTime": "1997-03-03T00:00:00Z", "salesTax": 66, "sandbox": false, "sku": "CFSUq6xX", "status": "INIT", "statusReason": "rCQ4iSne", "subscriptionId": "sFAyl8sI", "subtotalPrice": 69, "targetNamespace": "IvLkKdsS", "targetUserId": "beJRdZCf", "tax": 42, "totalPrice": 26, "totalTax": 10, "txEndTime": "1996-06-29T00:00:00Z", "type": "jSCo3yW7", "userId": "72qXXCeN", "vat": 80}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ProcessUserOrderNotification \
    --namespace $AB_NAMESPACE \
    --orderNo 'X1I90z3C' \
    --userId 'sBc2TLYR' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 275 'ProcessUserOrderNotification' test.out

#- 276 DownloadUserOrderReceipt
$CLI_EXE \
    --sn platform \
    --op DownloadUserOrderReceipt \
    --namespace $AB_NAMESPACE \
    --orderNo '3LlxCaMR' \
    --userId 'AEyc46Zh' \
    > test.out 2>&1
eval_tap $? 276 'DownloadUserOrderReceipt' test.out

#- 277 CreateUserPaymentOrder
# body param: body
echo '{"currencyCode": "mD2VRsHh", "currencyNamespace": "5DczNlCK", "customParameters": {"ShThWfqo": {}, "NS781QxS": {}, "ctF64ZSN": {}}, "description": "KTUUXgtQ", "extOrderNo": "krAWVu0A", "extUserId": "zCX3WtYY", "itemType": "CODE", "language": "Mwsd-zXNT-kG", "metadata": {"2u4n7p7n": "X20man8F", "iXXanHIi": "gaQWMNrW", "rSWh4Rut": "xwgSHZFS"}, "notifyUrl": "c8AgAjjH", "omitNotification": false, "platform": "CByFlJg7", "price": 94, "recurringPaymentOrderNo": "dgyBUNtH", "region": "6BHBpvKZ", "returnUrl": "9UuoaPSy", "sandbox": true, "sku": "L2XPljT4", "subscriptionId": "3vy5ieiO", "title": "5yMG3fRS"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateUserPaymentOrder \
    --namespace $AB_NAMESPACE \
    --userId 'L6VbTcWL' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 277 'CreateUserPaymentOrder' test.out

#- 278 RefundUserPaymentOrder
# body param: body
echo '{"description": "fgwDkdFP"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RefundUserPaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'mlAEPqXS' \
    --userId 'BrED3vjI' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 278 'RefundUserPaymentOrder' test.out

#- 279 ApplyUserRedemption
# body param: body
echo '{"code": "CpnM91R4", "orderNo": "neCSF2b2"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ApplyUserRedemption \
    --namespace $AB_NAMESPACE \
    --userId 'yLXv2dUe' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 279 'ApplyUserRedemption' test.out

#- 280 DoRevocation
# body param: body
echo '{"meta": {"KnYmkN7V": {}, "lwetDRqR": {}, "y05bbJuE": {}}, "revokeEntries": [{"currency": {"balanceOrigin": "Epic", "currencyCode": "AIpuTBvM", "namespace": "mwGZB67K"}, "entitlement": {"entitlementId": "ju8DMJTJ"}, "item": {"entitlementOrigin": "Playstation", "itemIdentity": "3osN3lB4", "itemIdentityType": "ITEM_ID", "origin": "Oculus"}, "quantity": 62, "type": "ITEM"}, {"currency": {"balanceOrigin": "Playstation", "currencyCode": "Yg43D35n", "namespace": "bhRAcKlr"}, "entitlement": {"entitlementId": "Tnw0YEnV"}, "item": {"entitlementOrigin": "Twitch", "itemIdentity": "BIKlAsze", "itemIdentityType": "ITEM_SKU", "origin": "Nintendo"}, "quantity": 57, "type": "CURRENCY"}, {"currency": {"balanceOrigin": "Other", "currencyCode": "NyjjaCHZ", "namespace": "D5QA2AKo"}, "entitlement": {"entitlementId": "HQUYHop1"}, "item": {"entitlementOrigin": "Twitch", "itemIdentity": "zfeRZGqC", "itemIdentityType": "ITEM_SKU", "origin": "Twitch"}, "quantity": 85, "type": "ITEM"}], "source": "ORDER", "transactionId": "39g8OXRY"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op DoRevocation \
    --namespace $AB_NAMESPACE \
    --userId 'sYBy7mlW' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 280 'DoRevocation' test.out

#- 281 RegisterXblSessions
# body param: body
echo '{"gameSessionId": "TjraiImm", "payload": {"swy5TFGz": {}, "YLRwgLf4": {}, "kRhikAum": {}}, "scid": "7kqpUbNO", "sessionTemplateName": "Xmri0c6q"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RegisterXblSessions \
    --namespace $AB_NAMESPACE \
    --userId 'fSq6f6Ov' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 281 'RegisterXblSessions' test.out

#- 282 QueryUserSubscriptions
$CLI_EXE \
    --sn platform \
    --op QueryUserSubscriptions \
    --namespace $AB_NAMESPACE \
    --userId '8EYLCy1x' \
    --chargeStatus 'NEVER' \
    --itemId '556ZH60g' \
    --limit '11' \
    --offset '79' \
    --sku 'iKvjBXM0' \
    --status 'EXPIRED' \
    --subscribedBy 'USER' \
    > test.out 2>&1
eval_tap $? 282 'QueryUserSubscriptions' test.out

#- 283 GetUserSubscriptionActivities
$CLI_EXE \
    --sn platform \
    --op GetUserSubscriptionActivities \
    --namespace $AB_NAMESPACE \
    --userId 'RiZ6rxMz' \
    --excludeSystem 'true' \
    --limit '81' \
    --offset '13' \
    --subscriptionId 'jhU6GXF8' \
    > test.out 2>&1
eval_tap $? 283 'GetUserSubscriptionActivities' test.out

#- 284 PlatformSubscribeSubscription
# body param: body
echo '{"grantDays": 37, "itemId": "Re3ZFa7B", "language": "AbLjN0GH", "reason": "sZBG5Mug", "region": "EjMiQDjW", "source": "rBkoqd96"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PlatformSubscribeSubscription \
    --namespace $AB_NAMESPACE \
    --userId 'fTt1Hx8B' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 284 'PlatformSubscribeSubscription' test.out

#- 285 CheckUserSubscriptionSubscribableByItemId
$CLI_EXE \
    --sn platform \
    --op CheckUserSubscriptionSubscribableByItemId \
    --namespace $AB_NAMESPACE \
    --userId '6DjlUkPI' \
    --itemId 't9macC0n' \
    > test.out 2>&1
eval_tap $? 285 'CheckUserSubscriptionSubscribableByItemId' test.out

#- 286 GetUserSubscription
$CLI_EXE \
    --sn platform \
    --op GetUserSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'jnsqppKQ' \
    --userId 'BiFzd17i' \
    > test.out 2>&1
eval_tap $? 286 'GetUserSubscription' test.out

#- 287 DeleteUserSubscription
$CLI_EXE \
    --sn platform \
    --op DeleteUserSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'mZlVXFVs' \
    --userId '3k12bIid' \
    > test.out 2>&1
eval_tap $? 287 'DeleteUserSubscription' test.out

#- 288 CancelSubscription
# body param: body
echo '{"immediate": true, "reason": "WG0HBx6s"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CancelSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'b2Idzx14' \
    --userId 'jPvmDxPU' \
    --force 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 288 'CancelSubscription' test.out

#- 289 GrantDaysToSubscription
# body param: body
echo '{"grantDays": 22, "reason": "GnJ3mbOQ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op GrantDaysToSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'rzXQVz5G' \
    --userId '6H88Qb60' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 289 'GrantDaysToSubscription' test.out

#- 290 GetUserSubscriptionBillingHistories
$CLI_EXE \
    --sn platform \
    --op GetUserSubscriptionBillingHistories \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'jlkFGH8K' \
    --userId 'Eq28i0dj' \
    --excludeFree 'true' \
    --limit '81' \
    --offset '23' \
    > test.out 2>&1
eval_tap $? 290 'GetUserSubscriptionBillingHistories' test.out

#- 291 ProcessUserSubscriptionNotification
# body param: body
echo '{"additionalData": {"cardSummary": "H6dmRGd5"}, "authorisedTime": "1994-05-23T00:00:00Z", "chargebackReversedTime": "1984-01-19T00:00:00Z", "chargebackTime": "1987-08-01T00:00:00Z", "chargedTime": "1986-04-08T00:00:00Z", "createdTime": "1985-05-13T00:00:00Z", "currency": {"currencyCode": "RwWkB3Ra", "currencySymbol": "HP3M5EHH", "currencyType": "VIRTUAL", "decimals": 67, "namespace": "YCDoNeNM"}, "customParameters": {"ZkcOEWLr": {}, "jTxTrCxS": {}, "cZcxoota": {}}, "extOrderNo": "I2KjpjYI", "extTxId": "wbuZjqMm", "extUserId": "wBPvRJhF", "issuedAt": "1982-01-19T00:00:00Z", "metadata": {"slMxLpeQ": "Sg7QwIDm", "n84ohT2S": "FRQq7Uqo", "JxPNzell": "2lAUzNVp"}, "namespace": "WjLYjLIl", "nonceStr": "1dIBd3L9", "paymentMethod": "DEzIRUBR", "paymentMethodFee": 25, "paymentOrderNo": "hhZ2Pcvc", "paymentProvider": "XSOLLA", "paymentProviderFee": 53, "paymentStationUrl": "5Bbbn2pj", "price": 82, "refundedTime": "1978-02-16T00:00:00Z", "salesTax": 14, "sandbox": false, "sku": "UNiTWDJX", "status": "AUTHORISED", "statusReason": "sPy1UNjf", "subscriptionId": "UPAcvDN6", "subtotalPrice": 77, "targetNamespace": "rYheLmdF", "targetUserId": "G2deOfLi", "tax": 73, "totalPrice": 86, "totalTax": 92, "txEndTime": "1988-03-21T00:00:00Z", "type": "JdTWwP3C", "userId": "oDA6Bp60", "vat": 26}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ProcessUserSubscriptionNotification \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'eWUdi2pG' \
    --userId '86Tz2XxF' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 291 'ProcessUserSubscriptionNotification' test.out

#- 292 AcquireUserTicket
# body param: body
echo '{"count": 3, "orderNo": "jwgylyCL"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op AcquireUserTicket \
    --boothName 'AljHHWdI' \
    --namespace $AB_NAMESPACE \
    --userId 'boCEKeAx' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 292 'AcquireUserTicket' test.out

#- 293 QueryUserCurrencyWallets
$CLI_EXE \
    --sn platform \
    --op QueryUserCurrencyWallets \
    --namespace $AB_NAMESPACE \
    --userId 'UrHpr5Fs' \
    > test.out 2>&1
eval_tap $? 293 'QueryUserCurrencyWallets' test.out

#- 294 DebitUserWalletByCurrencyCode
# body param: body
echo '{"allowOverdraft": true, "amount": 64, "balanceOrigin": "Xbox", "balanceSource": "OTHER", "metadata": {"46v3Ks58": {}, "6Vo7CsmC": {}, "ZeH2UKcp": {}}, "reason": "k8gKYqlR"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op DebitUserWalletByCurrencyCode \
    --currencyCode 'TjRWkZ6x' \
    --namespace $AB_NAMESPACE \
    --userId 'iS8fe9dG' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 294 'DebitUserWalletByCurrencyCode' test.out

#- 295 ListUserCurrencyTransactions
$CLI_EXE \
    --sn platform \
    --op ListUserCurrencyTransactions \
    --currencyCode 'MswowL9V' \
    --namespace $AB_NAMESPACE \
    --userId 'g9cXSF1f' \
    --limit '45' \
    --offset '64' \
    > test.out 2>&1
eval_tap $? 295 'ListUserCurrencyTransactions' test.out

#- 296 CheckBalance
# body param: request
echo '{"amount": 8, "debitBalanceSource": "TRADE", "metadata": {"SqEdPrmm": {}, "vdv0sDj1": {}, "vtRUDAsb": {}}, "reason": "qAU3hHyW", "walletPlatform": "Playstation"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CheckBalance \
    --currencyCode 'v46lfFxP' \
    --namespace $AB_NAMESPACE \
    --userId 'UWuAVoh0' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 296 'CheckBalance' test.out

#- 297 CheckWallet
eval_tap 0 297 'CheckWallet # SKIP deprecated' test.out

#- 298 CreditUserWallet
# body param: body
echo '{"amount": 29, "expireAt": "1992-07-13T00:00:00Z", "metadata": {"NO8Ct6HG": {}, "EV2mjqcR": {}, "eRAEjbMF": {}}, "origin": "Twitch", "reason": "b11hHvvg", "source": "REFERRAL_BONUS"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreditUserWallet \
    --currencyCode 'XbwsXkoU' \
    --namespace $AB_NAMESPACE \
    --userId 'TkvsGEyW' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 298 'CreditUserWallet' test.out

#- 299 DebitByWalletPlatform
# body param: request
echo '{"amount": 71, "debitBalanceSource": "DLC_REVOCATION", "metadata": {"mJ0FfGsU": {}, "c40aQcR6": {}, "xf9xkE5b": {}}, "reason": "DkcTUn8i", "walletPlatform": "Oculus"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op DebitByWalletPlatform \
    --currencyCode 'CUBooTcM' \
    --namespace $AB_NAMESPACE \
    --userId 'wJ9ozmoC' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 299 'DebitByWalletPlatform' test.out

#- 300 PayWithUserWallet
# body param: body
echo '{"amount": 66, "metadata": {"yixxCTrF": {}, "gfmjdf0F": {}, "E3HJiPPM": {}}, "walletPlatform": "Playstation"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PayWithUserWallet \
    --currencyCode 'rCrz4yP7' \
    --namespace $AB_NAMESPACE \
    --userId 'r8OazE54' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 300 'PayWithUserWallet' test.out

#- 301 GetUserWallet
eval_tap 0 301 'GetUserWallet # SKIP deprecated' test.out

#- 302 DebitUserWallet
eval_tap 0 302 'DebitUserWallet # SKIP deprecated' test.out

#- 303 DisableUserWallet
eval_tap 0 303 'DisableUserWallet # SKIP deprecated' test.out

#- 304 EnableUserWallet
eval_tap 0 304 'EnableUserWallet # SKIP deprecated' test.out

#- 305 ListUserWalletTransactions
eval_tap 0 305 'ListUserWalletTransactions # SKIP deprecated' test.out

#- 306 ListViews
$CLI_EXE \
    --sn platform \
    --op ListViews \
    --namespace $AB_NAMESPACE \
    --storeId 'vuaovoSJ' \
    > test.out 2>&1
eval_tap $? 306 'ListViews' test.out

#- 307 CreateView
# body param: body
echo '{"displayOrder": 6, "localizations": {"6nGJHYXT": {"description": "U49nRG9W", "localExt": {"p5DSVkSS": {}, "jKOV1GdK": {}, "Y20TyvhU": {}}, "longDescription": "Tgu3b086", "title": "RGyTR3vU"}, "LOUYkFDp": {"description": "Dghh1pAV", "localExt": {"OG09eEd2": {}, "FYiwa4wX": {}, "s7iZbyej": {}}, "longDescription": "5iRxAqLD", "title": "MeKgZv1B"}, "Vs37tThY": {"description": "11ofvjps", "localExt": {"dfnR6Zrv": {}, "nZxfYb4x": {}, "eGQX1rTC": {}}, "longDescription": "T9YfbS7q", "title": "ka1ffVlS"}}, "name": "kHCjyUuP"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateView \
    --namespace $AB_NAMESPACE \
    --storeId 'YC2tpZNo' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 307 'CreateView' test.out

#- 308 GetView
$CLI_EXE \
    --sn platform \
    --op GetView \
    --namespace $AB_NAMESPACE \
    --viewId 'Oc9hLDXl' \
    --storeId 'h0WfFF4w' \
    > test.out 2>&1
eval_tap $? 308 'GetView' test.out

#- 309 UpdateView
# body param: body
echo '{"displayOrder": 26, "localizations": {"Rttn33QN": {"description": "nJxcsw7n", "localExt": {"mGQqplZA": {}, "hhIpvQux": {}, "Y0ofltYT": {}}, "longDescription": "dq64uRy7", "title": "hse0DSzr"}, "utYqOD8H": {"description": "Cu3VlDbp", "localExt": {"uCZc4oHM": {}, "4bmYahZj": {}, "Uin3x1p4": {}}, "longDescription": "3BxJdKkR", "title": "Vm0RwM6X"}, "ZRLHlCqD": {"description": "OXD0vii4", "localExt": {"8BcJr1Cg": {}, "fdIYDr6i": {}, "i6Obf5jn": {}}, "longDescription": "RcfwqyXb", "title": "9Fv5r7J0"}}, "name": "Zmus2TNk"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateView \
    --namespace $AB_NAMESPACE \
    --viewId 'unSHtPrX' \
    --storeId 'mU7cIiLB' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 309 'UpdateView' test.out

#- 310 DeleteView
$CLI_EXE \
    --sn platform \
    --op DeleteView \
    --namespace $AB_NAMESPACE \
    --viewId 'B4TP51x3' \
    --storeId 'XHgqxLgu' \
    > test.out 2>&1
eval_tap $? 310 'DeleteView' test.out

#- 311 QueryWallets
eval_tap 0 311 'QueryWallets # SKIP deprecated' test.out

#- 312 BulkCredit
# body param: body
echo '[{"creditRequest": {"amount": 26, "expireAt": "1993-07-30T00:00:00Z", "metadata": {"ZcKyb9mU": {}, "kDb8jAu5": {}, "MpwPDK9o": {}}, "origin": "Other", "reason": "XDEdoqir", "source": "OTHER"}, "currencyCode": "Z3khgMGs", "userIds": ["FQBTYS7e", "hUsxEc3t", "4qbybpSz"]}, {"creditRequest": {"amount": 63, "expireAt": "1979-10-27T00:00:00Z", "metadata": {"kxloOdu3": {}, "JnM8MiDE": {}, "DuntIIT9": {}}, "origin": "Xbox", "reason": "h23UZ3mN", "source": "REFUND"}, "currencyCode": "sawYyzup", "userIds": ["1wmZ3gKr", "ESXn7y9i", "WoVXhElR"]}, {"creditRequest": {"amount": 53, "expireAt": "1997-10-29T00:00:00Z", "metadata": {"IV4j65JN": {}, "BP1ySWwJ": {}, "HCQYJqDp": {}}, "origin": "Twitch", "reason": "YCQWCA22", "source": "REWARD"}, "currencyCode": "uUcZn2g4", "userIds": ["8Ffdryma", "kny5CmBR", "ZEfnsim7"]}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op BulkCredit \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 312 'BulkCredit' test.out

#- 313 BulkDebit
# body param: body
echo '[{"currencyCode": "6iG2wkMT", "request": {"allowOverdraft": true, "amount": 34, "balanceOrigin": "GooglePlay", "balanceSource": "TRADE", "metadata": {"cjYvValE": {}, "1uuA8LSc": {}, "ltYSEDD2": {}}, "reason": "7LS3QMkt"}, "userIds": ["BOzBTDn9", "0i6wOVQy", "ZLb9O2zy"]}, {"currencyCode": "q14URbYI", "request": {"allowOverdraft": false, "amount": 34, "balanceOrigin": "Xbox", "balanceSource": "TRADE", "metadata": {"uyszmKmc": {}, "z5fcYET9": {}, "LTov9Ncp": {}}, "reason": "oODnCjIH"}, "userIds": ["zbH5G3DN", "NVTnSqZ2", "KQKVV1Uf"]}, {"currencyCode": "rpv57cWw", "request": {"allowOverdraft": false, "amount": 33, "balanceOrigin": "IOS", "balanceSource": "ORDER_REVOCATION", "metadata": {"CPkFbUGw": {}, "9Oz2QNX6": {}, "P3MjbwqL": {}}, "reason": "nBbF8bkU"}, "userIds": ["SIqb8UYw", "173CPiGE", "X8EF6SOr"]}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op BulkDebit \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 313 'BulkDebit' test.out

#- 314 GetWallet
eval_tap 0 314 'GetWallet # SKIP deprecated' test.out

#- 315 SyncOrders
$CLI_EXE \
    --sn platform \
    --op SyncOrders \
    --nextEvaluatedKey '7qwhN6it' \
    --end 'Ok3m1LWn' \
    --start 'NvhI0i9g' \
    > test.out 2>&1
eval_tap $? 315 'SyncOrders' test.out

#- 316 TestAdyenConfig
# body param: body
echo '{"allowedPaymentMethods": ["Xqa7lb14", "wDor03MY", "AA0RzhZP"], "apiKey": "Fmgp6tgl", "authoriseAsCapture": false, "blockedPaymentMethods": ["thA5a1Ps", "hES9Ferx", "3qmytRp8"], "clientKey": "4xwAyfTd", "dropInSettings": "oST92P9C", "liveEndpointUrlPrefix": "uvo51DRH", "merchantAccount": "32uIUKSX", "notificationHmacKey": "kxlN0yxO", "notificationPassword": "MFomzLMO", "notificationUsername": "Zd0oNSXe", "returnUrl": "mXtiRksm", "settings": "cIOjLh39"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestAdyenConfig \
    --sandbox 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 316 'TestAdyenConfig' test.out

#- 317 TestAliPayConfig
# body param: body
echo '{"appId": "K0I5CbcS", "privateKey": "wDRlrGyd", "publicKey": "CYflBIO1", "returnUrl": "ODCugf2y"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestAliPayConfig \
    --sandbox 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 317 'TestAliPayConfig' test.out

#- 318 TestCheckoutConfig
# body param: body
echo '{"publicKey": "4VbQfv4n", "secretKey": "vRbeHWuN"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestCheckoutConfig \
    --sandbox 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 318 'TestCheckoutConfig' test.out

#- 319 DebugMatchedPaymentMerchantConfig
$CLI_EXE \
    --sn platform \
    --op DebugMatchedPaymentMerchantConfig \
    --namespace_ '28Zbr1ax' \
    --region 'V37JCsPH' \
    > test.out 2>&1
eval_tap $? 319 'DebugMatchedPaymentMerchantConfig' test.out

#- 320 TestPayPalConfig
# body param: body
echo '{"clientID": "rJuJkEJ3", "clientSecret": "1ma7BDLA", "returnUrl": "2WPjnkNO", "webHookId": "gyl67Gvb"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestPayPalConfig \
    --sandbox 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 320 'TestPayPalConfig' test.out

#- 321 TestStripeConfig
# body param: body
echo '{"allowedPaymentMethodTypes": ["ztUaj0eo", "cSG5MeGe", "3U5XX7ZA"], "publishableKey": "nrw9L7Y9", "secretKey": "GGbAvHNs", "webhookSecret": "7UeqkIeP"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestStripeConfig \
    --sandbox 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 321 'TestStripeConfig' test.out

#- 322 TestWxPayConfig
# body param: body
echo '{"appId": "ZDC41KSZ", "key": "HNzQqVIF", "mchid": "dG6Bbufv", "returnUrl": "wXodVPPM"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestWxPayConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 322 'TestWxPayConfig' test.out

#- 323 TestXsollaConfig
# body param: body
echo '{"apiKey": "qxWteB7S", "flowCompletionUrl": "eLGTbF9O", "merchantId": 98, "projectId": 22, "projectSecretKey": "afvrRXRc"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestXsollaConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 323 'TestXsollaConfig' test.out

#- 324 GetPaymentMerchantConfig
$CLI_EXE \
    --sn platform \
    --op GetPaymentMerchantConfig \
    --id 'IrCOasHL' \
    > test.out 2>&1
eval_tap $? 324 'GetPaymentMerchantConfig' test.out

#- 325 UpdateAdyenConfig
# body param: body
echo '{"allowedPaymentMethods": ["Nt8ubOQA", "NKLyO2N8", "CVqtxyuA"], "apiKey": "m91fp60w", "authoriseAsCapture": false, "blockedPaymentMethods": ["PiwbNZsn", "VDxgCMvt", "5rOZs4sJ"], "clientKey": "2FqHFFWq", "dropInSettings": "V03YZmbd", "liveEndpointUrlPrefix": "pLaSSO0M", "merchantAccount": "qqT5Wr3f", "notificationHmacKey": "LLiihf8X", "notificationPassword": "lttiKPUN", "notificationUsername": "qfC0PpYp", "returnUrl": "T3H6iwPh", "settings": "lPjjSmsk"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateAdyenConfig \
    --id 'K84SjMua' \
    --sandbox 'false' \
    --validate 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 325 'UpdateAdyenConfig' test.out

#- 326 TestAdyenConfigById
$CLI_EXE \
    --sn platform \
    --op TestAdyenConfigById \
    --id 'crW0nz5E' \
    --sandbox 'true' \
    > test.out 2>&1
eval_tap $? 326 'TestAdyenConfigById' test.out

#- 327 UpdateAliPayConfig
# body param: body
echo '{"appId": "y6zDoAaF", "privateKey": "rQIAsoJF", "publicKey": "D17hRFJj", "returnUrl": "FWuYrxYj"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateAliPayConfig \
    --id 'xx6RYIE2' \
    --sandbox 'true' \
    --validate 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 327 'UpdateAliPayConfig' test.out

#- 328 TestAliPayConfigById
$CLI_EXE \
    --sn platform \
    --op TestAliPayConfigById \
    --id '9mncayUr' \
    --sandbox 'false' \
    > test.out 2>&1
eval_tap $? 328 'TestAliPayConfigById' test.out

#- 329 UpdateCheckoutConfig
# body param: body
echo '{"publicKey": "iEAGAhZH", "secretKey": "ONbF8V0q"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCheckoutConfig \
    --id 'TebWPsqf' \
    --sandbox 'true' \
    --validate 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 329 'UpdateCheckoutConfig' test.out

#- 330 TestCheckoutConfigById
$CLI_EXE \
    --sn platform \
    --op TestCheckoutConfigById \
    --id 'pNZXOifZ' \
    --sandbox 'true' \
    > test.out 2>&1
eval_tap $? 330 'TestCheckoutConfigById' test.out

#- 331 UpdatePayPalConfig
# body param: body
echo '{"clientID": "bolUBBcz", "clientSecret": "ZFyfzQS5", "returnUrl": "9kHdj8UL", "webHookId": "nQTW1PQK"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePayPalConfig \
    --id 'SHU4AqpX' \
    --sandbox 'false' \
    --validate 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 331 'UpdatePayPalConfig' test.out

#- 332 TestPayPalConfigById
$CLI_EXE \
    --sn platform \
    --op TestPayPalConfigById \
    --id 'Fv73Pw6s' \
    --sandbox 'true' \
    > test.out 2>&1
eval_tap $? 332 'TestPayPalConfigById' test.out

#- 333 UpdateStripeConfig
# body param: body
echo '{"allowedPaymentMethodTypes": ["pU0j5DfW", "ZMn9P7zi", "rbSJdcPj"], "publishableKey": "V7KOaSOH", "secretKey": "z8z9ZUMF", "webhookSecret": "peOxC4Tr"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateStripeConfig \
    --id 'p6ZjqNVG' \
    --sandbox 'true' \
    --validate 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 333 'UpdateStripeConfig' test.out

#- 334 TestStripeConfigById
$CLI_EXE \
    --sn platform \
    --op TestStripeConfigById \
    --id 'cDB2vpHx' \
    --sandbox 'false' \
    > test.out 2>&1
eval_tap $? 334 'TestStripeConfigById' test.out

#- 335 UpdateWxPayConfig
# body param: body
echo '{"appId": "KgT8uq1Q", "key": "AoQozB3B", "mchid": "yjDiORyM", "returnUrl": "JDuX19AS"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateWxPayConfig \
    --id 'cjRTnHJ1' \
    --validate 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 335 'UpdateWxPayConfig' test.out

#- 336 UpdateWxPayConfigCert
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UpdateWxPayConfigCert \
    --id 'fdt5hjFb' \
    --upload file $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 336 'UpdateWxPayConfigCert' test.out

#- 337 TestWxPayConfigById
$CLI_EXE \
    --sn platform \
    --op TestWxPayConfigById \
    --id 'ZTRrW9Wi' \
    > test.out 2>&1
eval_tap $? 337 'TestWxPayConfigById' test.out

#- 338 UpdateXsollaConfig
# body param: body
echo '{"apiKey": "CHeQOVuW", "flowCompletionUrl": "4MI02Xp7", "merchantId": 100, "projectId": 77, "projectSecretKey": "GOlCdOiG"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXsollaConfig \
    --id 'wlMl3PXW' \
    --validate 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 338 'UpdateXsollaConfig' test.out

#- 339 TestXsollaConfigById
$CLI_EXE \
    --sn platform \
    --op TestXsollaConfigById \
    --id 'yyiGRAxU' \
    > test.out 2>&1
eval_tap $? 339 'TestXsollaConfigById' test.out

#- 340 UpdateXsollaUIConfig
# body param: body
echo '{"device": "MOBILE", "showCloseButton": false, "size": "LARGE", "theme": "DARK"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXsollaUIConfig \
    --id '9FicWJoZ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 340 'UpdateXsollaUIConfig' test.out

#- 341 QueryPaymentProviderConfig
$CLI_EXE \
    --sn platform \
    --op QueryPaymentProviderConfig \
    --limit '28' \
    --namespace_ '5T0GImnr' \
    --offset '29' \
    --region 'QcEKaVTH' \
    > test.out 2>&1
eval_tap $? 341 'QueryPaymentProviderConfig' test.out

#- 342 CreatePaymentProviderConfig
# body param: body
echo '{"aggregate": "XSOLLA", "namespace": "Nb1RTAIv", "region": "hFZ4QZTt", "sandboxTaxJarApiToken": "3g36PHdQ", "specials": ["PAYPAL", "PAYPAL", "WXPAY"], "taxJarApiToken": "OUpKeC6K", "taxJarEnabled": false, "useGlobalTaxJarApiToken": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreatePaymentProviderConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 342 'CreatePaymentProviderConfig' test.out

#- 343 GetAggregatePaymentProviders
$CLI_EXE \
    --sn platform \
    --op GetAggregatePaymentProviders \
    > test.out 2>&1
eval_tap $? 343 'GetAggregatePaymentProviders' test.out

#- 344 DebugMatchedPaymentProviderConfig
$CLI_EXE \
    --sn platform \
    --op DebugMatchedPaymentProviderConfig \
    --namespace_ 'wVWi9UDh' \
    --region '0z2WAIuU' \
    > test.out 2>&1
eval_tap $? 344 'DebugMatchedPaymentProviderConfig' test.out

#- 345 GetSpecialPaymentProviders
$CLI_EXE \
    --sn platform \
    --op GetSpecialPaymentProviders \
    > test.out 2>&1
eval_tap $? 345 'GetSpecialPaymentProviders' test.out

#- 346 UpdatePaymentProviderConfig
# body param: body
echo '{"aggregate": "XSOLLA", "namespace": "FiJtQuqi", "region": "oGxfZxgU", "sandboxTaxJarApiToken": "iOjnspar", "specials": ["ALIPAY", "WXPAY", "ALIPAY"], "taxJarApiToken": "PLrPChrH", "taxJarEnabled": true, "useGlobalTaxJarApiToken": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePaymentProviderConfig \
    --id 'jMiTsjWo' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 346 'UpdatePaymentProviderConfig' test.out

#- 347 DeletePaymentProviderConfig
$CLI_EXE \
    --sn platform \
    --op DeletePaymentProviderConfig \
    --id '6e1foxpR' \
    > test.out 2>&1
eval_tap $? 347 'DeletePaymentProviderConfig' test.out

#- 348 GetPaymentTaxConfig
$CLI_EXE \
    --sn platform \
    --op GetPaymentTaxConfig \
    > test.out 2>&1
eval_tap $? 348 'GetPaymentTaxConfig' test.out

#- 349 UpdatePaymentTaxConfig
# body param: body
echo '{"sandboxTaxJarApiToken": "J0QhBZdL", "taxJarApiToken": "xKGGc8S9", "taxJarEnabled": true, "taxJarProductCodesMapping": {"drl6lnrb": "KMcwzq6L", "VCNGS7kB": "f4DK3EBX", "maZCDpoG": "vaoh9YWd"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePaymentTaxConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 349 'UpdatePaymentTaxConfig' test.out

#- 350 SyncPaymentOrders
$CLI_EXE \
    --sn platform \
    --op SyncPaymentOrders \
    --nextEvaluatedKey 'A4u3rDVq' \
    --end 'sQlLSbHy' \
    --start 'IPHNiLx1' \
    > test.out 2>&1
eval_tap $? 350 'SyncPaymentOrders' test.out

#- 351 PublicGetRootCategories
$CLI_EXE \
    --sn platform \
    --op PublicGetRootCategories \
    --namespace $AB_NAMESPACE \
    --language 'llj5ger8' \
    --storeId 'byVwCCcn' \
    > test.out 2>&1
eval_tap $? 351 'PublicGetRootCategories' test.out

#- 352 DownloadCategories
$CLI_EXE \
    --sn platform \
    --op DownloadCategories \
    --namespace $AB_NAMESPACE \
    --language 'YvrCeus9' \
    --storeId 'mBQTFF1W' \
    > test.out 2>&1
eval_tap $? 352 'DownloadCategories' test.out

#- 353 PublicGetCategory
$CLI_EXE \
    --sn platform \
    --op PublicGetCategory \
    --categoryPath 'Br4L2d3G' \
    --namespace $AB_NAMESPACE \
    --language 'bVGzDDUA' \
    --storeId '2wszFb71' \
    > test.out 2>&1
eval_tap $? 353 'PublicGetCategory' test.out

#- 354 PublicGetChildCategories
$CLI_EXE \
    --sn platform \
    --op PublicGetChildCategories \
    --categoryPath 'jFY6pCgL' \
    --namespace $AB_NAMESPACE \
    --language 'bUtOxJ8s' \
    --storeId '1Ys8IpHR' \
    > test.out 2>&1
eval_tap $? 354 'PublicGetChildCategories' test.out

#- 355 PublicGetDescendantCategories
$CLI_EXE \
    --sn platform \
    --op PublicGetDescendantCategories \
    --categoryPath 'jXU5zMb4' \
    --namespace $AB_NAMESPACE \
    --language 'AjR9MvUW' \
    --storeId 'z7KNCD6h' \
    > test.out 2>&1
eval_tap $? 355 'PublicGetDescendantCategories' test.out

#- 356 PublicListCurrencies
$CLI_EXE \
    --sn platform \
    --op PublicListCurrencies \
    --namespace $AB_NAMESPACE \
    --currencyType 'REAL' \
    > test.out 2>&1
eval_tap $? 356 'PublicListCurrencies' test.out

#- 357 GeDLCDurableRewardShortMap
$CLI_EXE \
    --sn platform \
    --op GeDLCDurableRewardShortMap \
    --namespace $AB_NAMESPACE \
    --dlcType 'EPICGAMES' \
    > test.out 2>&1
eval_tap $? 357 'GeDLCDurableRewardShortMap' test.out

#- 358 GetIAPItemMapping
$CLI_EXE \
    --sn platform \
    --op GetIAPItemMapping \
    --namespace $AB_NAMESPACE \
    --platform 'STADIA' \
    > test.out 2>&1
eval_tap $? 358 'GetIAPItemMapping' test.out

#- 359 PublicGetItemByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetItemByAppId \
    --namespace $AB_NAMESPACE \
    --language 'QKqwf5v3' \
    --region 'dSfOBsg6' \
    --storeId '0LvNRUCK' \
    --appId 'Q2CYaGDB' \
    > test.out 2>&1
eval_tap $? 359 'PublicGetItemByAppId' test.out

#- 360 PublicQueryItems
$CLI_EXE \
    --sn platform \
    --op PublicQueryItems \
    --namespace $AB_NAMESPACE \
    --appType 'SOFTWARE' \
    --autoCalcEstimatedPrice 'false' \
    --baseAppId '4HduNMsx' \
    --categoryPath 'XPEbujnO' \
    --features 'pBPWrdvd' \
    --includeSubCategoryItem 'false' \
    --itemType 'EXTENSION' \
    --language '5y2DmGtr' \
    --limit '62' \
    --offset '86' \
    --region 'BWDpeemg' \
    --sortBy '["name", "updatedAt:asc", "createdAt"]' \
    --storeId '8dgMc7lL' \
    --tags 'W9gE8ZVj' \
    > test.out 2>&1
eval_tap $? 360 'PublicQueryItems' test.out

#- 361 PublicGetItemBySku
$CLI_EXE \
    --sn platform \
    --op PublicGetItemBySku \
    --namespace $AB_NAMESPACE \
    --autoCalcEstimatedPrice 'true' \
    --language 'o4Toah4c' \
    --region '2p6v7VHX' \
    --storeId '5dmUPdVt' \
    --sku 'Vmer1mhg' \
    > test.out 2>&1
eval_tap $? 361 'PublicGetItemBySku' test.out

#- 362 PublicGetEstimatedPrice
$CLI_EXE \
    --sn platform \
    --op PublicGetEstimatedPrice \
    --namespace $AB_NAMESPACE \
    --region 'Wc4PlKRq' \
    --storeId 'XFThcXjH' \
    --itemIds 'ENILsdVE' \
    > test.out 2>&1
eval_tap $? 362 'PublicGetEstimatedPrice' test.out

#- 363 PublicBulkGetItems
$CLI_EXE \
    --sn platform \
    --op PublicBulkGetItems \
    --namespace $AB_NAMESPACE \
    --autoCalcEstimatedPrice 'true' \
    --language '8WrwtlUI' \
    --region 'pfnDgR5u' \
    --storeId 'zZ30YBRa' \
    --itemIds 'BwZqcH8p' \
    > test.out 2>&1
eval_tap $? 363 'PublicBulkGetItems' test.out

#- 364 PublicValidateItemPurchaseCondition
# body param: body
echo '{"itemIds": ["HzarC9uA", "hpzuHNtZ", "oyQMkio3"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicValidateItemPurchaseCondition \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 364 'PublicValidateItemPurchaseCondition' test.out

#- 365 PublicSearchItems
$CLI_EXE \
    --sn platform \
    --op PublicSearchItems \
    --namespace $AB_NAMESPACE \
    --autoCalcEstimatedPrice 'false' \
    --itemType 'APP' \
    --limit '92' \
    --offset '22' \
    --region 'Awb3NGu4' \
    --storeId '1T9TcnVA' \
    --keyword 'N7UiYNvi' \
    --language 'G7GzVBxq' \
    > test.out 2>&1
eval_tap $? 365 'PublicSearchItems' test.out

#- 366 PublicGetApp
$CLI_EXE \
    --sn platform \
    --op PublicGetApp \
    --itemId 'zy05Cj6V' \
    --namespace $AB_NAMESPACE \
    --language 'ZqqsQpOZ' \
    --region 'C86NpA3q' \
    --storeId 'LLwFcjlK' \
    > test.out 2>&1
eval_tap $? 366 'PublicGetApp' test.out

#- 367 PublicGetItemDynamicData
$CLI_EXE \
    --sn platform \
    --op PublicGetItemDynamicData \
    --itemId 'nl0Mv1un' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 367 'PublicGetItemDynamicData' test.out

#- 368 PublicGetItem
$CLI_EXE \
    --sn platform \
    --op PublicGetItem \
    --itemId 'vnCub7gv' \
    --namespace $AB_NAMESPACE \
    --autoCalcEstimatedPrice 'true' \
    --language 'GJz4OY1v' \
    --populateBundle 'true' \
    --region 'hkK8PPhj' \
    --storeId 's0wcZlbG' \
    > test.out 2>&1
eval_tap $? 368 'PublicGetItem' test.out

#- 369 GetPaymentCustomization
eval_tap 0 369 'GetPaymentCustomization # SKIP deprecated' test.out

#- 370 PublicGetPaymentUrl
# body param: body
echo '{"paymentOrderNo": "wFqfk5ro", "paymentProvider": "WXPAY", "returnUrl": "zCRqTwV3", "ui": "RlvOXnzr", "zipCode": "T7o8a2LE"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicGetPaymentUrl \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 370 'PublicGetPaymentUrl' test.out

#- 371 PublicGetPaymentMethods
$CLI_EXE \
    --sn platform \
    --op PublicGetPaymentMethods \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'kVgVZWCW' \
    > test.out 2>&1
eval_tap $? 371 'PublicGetPaymentMethods' test.out

#- 372 PublicGetUnpaidPaymentOrder
$CLI_EXE \
    --sn platform \
    --op PublicGetUnpaidPaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo '39lxxUen' \
    > test.out 2>&1
eval_tap $? 372 'PublicGetUnpaidPaymentOrder' test.out

#- 373 Pay
# body param: body
echo '{"token": "jlVH2AYs"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op Pay \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'FUWNAbTC' \
    --paymentProvider 'ALIPAY' \
    --zipCode '27QaamkA' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 373 'Pay' test.out

#- 374 PublicCheckPaymentOrderPaidStatus
$CLI_EXE \
    --sn platform \
    --op PublicCheckPaymentOrderPaidStatus \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'Am86kaqX' \
    > test.out 2>&1
eval_tap $? 374 'PublicCheckPaymentOrderPaidStatus' test.out

#- 375 GetPaymentPublicConfig
$CLI_EXE \
    --sn platform \
    --op GetPaymentPublicConfig \
    --namespace $AB_NAMESPACE \
    --sandbox 'false' \
    --paymentProvider 'ADYEN' \
    --region '3vJ3P1rC' \
    > test.out 2>&1
eval_tap $? 375 'GetPaymentPublicConfig' test.out

#- 376 PublicGetQRCode
$CLI_EXE \
    --sn platform \
    --op PublicGetQRCode \
    --namespace $AB_NAMESPACE \
    --code 'J0dUoN8c' \
    > test.out 2>&1
eval_tap $? 376 'PublicGetQRCode' test.out

#- 377 PublicNormalizePaymentReturnUrl
$CLI_EXE \
    --sn platform \
    --op PublicNormalizePaymentReturnUrl \
    --namespace $AB_NAMESPACE \
    --payerID 'L5GdSadA' \
    --foreinginvoice 'r8SkEkeK' \
    --invoiceId 'QDcnnsM9' \
    --payload 'SvoO0FXc' \
    --redirectResult '0IObFQrI' \
    --resultCode 'jvTyx7h2' \
    --sessionId '7qSMpNwo' \
    --status 'XRqVUze4' \
    --token 'xV3pshvP' \
    --type 'cLSXJ2oC' \
    --userId 'ppI1C19V' \
    --orderNo 'h2HFuWp3' \
    --paymentOrderNo '1kdVgoFd' \
    --paymentProvider 'ADYEN' \
    --returnUrl 'x8c4ovNN' \
    > test.out 2>&1
eval_tap $? 377 'PublicNormalizePaymentReturnUrl' test.out

#- 378 GetPaymentTaxValue
$CLI_EXE \
    --sn platform \
    --op GetPaymentTaxValue \
    --namespace $AB_NAMESPACE \
    --zipCode 'J0LWzh9v' \
    --paymentOrderNo 'k5T49hou' \
    --paymentProvider 'WALLET' \
    > test.out 2>&1
eval_tap $? 378 'GetPaymentTaxValue' test.out

#- 379 GetRewardByCode
$CLI_EXE \
    --sn platform \
    --op GetRewardByCode \
    --namespace $AB_NAMESPACE \
    --rewardCode '2Y35mwqw' \
    > test.out 2>&1
eval_tap $? 379 'GetRewardByCode' test.out

#- 380 QueryRewards1
$CLI_EXE \
    --sn platform \
    --op QueryRewards1 \
    --namespace $AB_NAMESPACE \
    --eventTopic 'e3aGygc0' \
    --limit '15' \
    --offset '58' \
    --sortBy '["rewardCode", "namespace:desc"]' \
    > test.out 2>&1
eval_tap $? 380 'QueryRewards1' test.out

#- 381 GetReward1
$CLI_EXE \
    --sn platform \
    --op GetReward1 \
    --namespace $AB_NAMESPACE \
    --rewardId 'aN7kiZww' \
    > test.out 2>&1
eval_tap $? 381 'GetReward1' test.out

#- 382 PublicListStores
$CLI_EXE \
    --sn platform \
    --op PublicListStores \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 382 'PublicListStores' test.out

#- 383 PublicExistsAnyMyActiveEntitlement
$CLI_EXE \
    --sn platform \
    --op PublicExistsAnyMyActiveEntitlement \
    --namespace $AB_NAMESPACE \
    --appIds '["e9jmchtu", "S0ex0Z43", "5pe5QwVk"]' \
    --itemIds '["QeMiHS98", "dMr1Bl9w", "rVb6WtRj"]' \
    --skus '["dP8maU9m", "tNP0g25r", "N0I3R81X"]' \
    > test.out 2>&1
eval_tap $? 383 'PublicExistsAnyMyActiveEntitlement' test.out

#- 384 PublicGetMyAppEntitlementOwnershipByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetMyAppEntitlementOwnershipByAppId \
    --namespace $AB_NAMESPACE \
    --appId 'VowDzxoP' \
    > test.out 2>&1
eval_tap $? 384 'PublicGetMyAppEntitlementOwnershipByAppId' test.out

#- 385 PublicGetMyEntitlementOwnershipByItemId
$CLI_EXE \
    --sn platform \
    --op PublicGetMyEntitlementOwnershipByItemId \
    --namespace $AB_NAMESPACE \
    --entitlementClazz 'SUBSCRIPTION' \
    --itemId 'dUoament' \
    > test.out 2>&1
eval_tap $? 385 'PublicGetMyEntitlementOwnershipByItemId' test.out

#- 386 PublicGetMyEntitlementOwnershipBySku
$CLI_EXE \
    --sn platform \
    --op PublicGetMyEntitlementOwnershipBySku \
    --namespace $AB_NAMESPACE \
    --entitlementClazz 'APP' \
    --sku 'wg18Kt6F' \
    > test.out 2>&1
eval_tap $? 386 'PublicGetMyEntitlementOwnershipBySku' test.out

#- 387 PublicGetEntitlementOwnershipToken
$CLI_EXE \
    --sn platform \
    --op PublicGetEntitlementOwnershipToken \
    --namespace $AB_NAMESPACE \
    --appIds '["P2ft5tR2", "A2jQEUZn", "KLGTlhIt"]' \
    --itemIds '["7vUiqch3", "qC1QSZQE", "OjhRDpih"]' \
    --skus '["4XlDzaDH", "lpeA27Px", "aLb6kNH2"]' \
    > test.out 2>&1
eval_tap $? 387 'PublicGetEntitlementOwnershipToken' test.out

#- 388 SyncTwitchDropsEntitlement
# body param: body
echo '{"gameId": "kiIJo9GA", "language": "xC-pUzk", "region": "ATOpLCxD"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncTwitchDropsEntitlement \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 388 'SyncTwitchDropsEntitlement' test.out

#- 389 PublicGetMyWallet
$CLI_EXE \
    --sn platform \
    --op PublicGetMyWallet \
    --currencyCode 'zmAdNDpZ' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 389 'PublicGetMyWallet' test.out

#- 390 SyncEpicGameDLC
# body param: body
echo '{"epicGamesJwtToken": "GrvVhHwf"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncEpicGameDLC \
    --namespace $AB_NAMESPACE \
    --userId 'rQvbIDjT' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 390 'SyncEpicGameDLC' test.out

#- 391 SyncOculusDLC
$CLI_EXE \
    --sn platform \
    --op SyncOculusDLC \
    --namespace $AB_NAMESPACE \
    --userId 'BEXDB06y' \
    > test.out 2>&1
eval_tap $? 391 'SyncOculusDLC' test.out

#- 392 PublicSyncPsnDlcInventory
# body param: body
echo '{"serviceLabel": 39}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicSyncPsnDlcInventory \
    --namespace $AB_NAMESPACE \
    --userId 'TjIHdlys' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 392 'PublicSyncPsnDlcInventory' test.out

#- 393 PublicSyncPsnDlcInventoryWithMultipleServiceLabels
# body param: body
echo '{"serviceLabels": [48, 61]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicSyncPsnDlcInventoryWithMultipleServiceLabels \
    --namespace $AB_NAMESPACE \
    --userId 'upKdyMG5' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 393 'PublicSyncPsnDlcInventoryWithMultipleServiceLabels' test.out

#- 394 SyncSteamDLC
# body param: body
echo '{"appId": "YnjYzVqJ", "steamId": "T3BkoUqZ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncSteamDLC \
    --namespace $AB_NAMESPACE \
    --userId 'lP36Wt1W' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 394 'SyncSteamDLC' test.out

#- 395 SyncXboxDLC
# body param: body
echo '{"xstsToken": "UCb0jbmZ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncXboxDLC \
    --namespace $AB_NAMESPACE \
    --userId 'pb3ML6aY' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 395 'SyncXboxDLC' test.out

#- 396 PublicQueryUserEntitlements
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserEntitlements \
    --namespace $AB_NAMESPACE \
    --userId 'Op1d6tsW' \
    --appType 'GAME' \
    --entitlementClazz 'MEDIA' \
    --entitlementName 'e2lhHbht' \
    --features '["Qbsi1x8z", "wQELpp7L", "07QUq5Ra"]' \
    --itemId '["O2oH0OgW", "c3g2Wd4U", "rJNhUdqf"]' \
    --limit '73' \
    --offset '83' \
    > test.out 2>&1
eval_tap $? 396 'PublicQueryUserEntitlements' test.out

#- 397 PublicGetUserAppEntitlementByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetUserAppEntitlementByAppId \
    --namespace $AB_NAMESPACE \
    --userId 'l99dOBNB' \
    --appId '8JzHKlj1' \
    > test.out 2>&1
eval_tap $? 397 'PublicGetUserAppEntitlementByAppId' test.out

#- 398 PublicQueryUserEntitlementsByAppType
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserEntitlementsByAppType \
    --namespace $AB_NAMESPACE \
    --userId 'I8AzcoKA' \
    --limit '69' \
    --offset '85' \
    --appType 'DLC' \
    > test.out 2>&1
eval_tap $? 398 'PublicQueryUserEntitlementsByAppType' test.out

#- 399 PublicGetUserEntitlementsByIds
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementsByIds \
    --namespace $AB_NAMESPACE \
    --userId 'tgqumYCJ' \
    --availablePlatformOnly 'false' \
    --ids '["CEwCyC32", "p49zkmw8", "AqZcYWrn"]' \
    > test.out 2>&1
eval_tap $? 399 'PublicGetUserEntitlementsByIds' test.out

#- 400 PublicGetUserEntitlementByItemId
eval_tap 0 400 'PublicGetUserEntitlementByItemId # SKIP deprecated' test.out

#- 401 PublicGetUserEntitlementBySku
eval_tap 0 401 'PublicGetUserEntitlementBySku # SKIP deprecated' test.out

#- 402 PublicExistsAnyUserActiveEntitlement
$CLI_EXE \
    --sn platform \
    --op PublicExistsAnyUserActiveEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'UtiwbfL5' \
    --appIds '["2FOZBPlO", "FKaZNbXm", "stTL5zPn"]' \
    --itemIds '["dtjCYtYv", "3SAhcvOF", "bN6bzwOK"]' \
    --skus '["5rvJRWrq", "0EpUlMLm", "NFMtuap7"]' \
    > test.out 2>&1
eval_tap $? 402 'PublicExistsAnyUserActiveEntitlement' test.out

#- 403 PublicGetUserAppEntitlementOwnershipByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetUserAppEntitlementOwnershipByAppId \
    --namespace $AB_NAMESPACE \
    --userId '821lAQ11' \
    --appId 'CEik65Aq' \
    > test.out 2>&1
eval_tap $? 403 'PublicGetUserAppEntitlementOwnershipByAppId' test.out

#- 404 PublicGetUserEntitlementOwnershipByItemId
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementOwnershipByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'GbVhwMyB' \
    --entitlementClazz 'CODE' \
    --itemId 'KoW9Et8t' \
    > test.out 2>&1
eval_tap $? 404 'PublicGetUserEntitlementOwnershipByItemId' test.out

#- 405 PublicGetUserEntitlementOwnershipByItemIds
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementOwnershipByItemIds \
    --namespace $AB_NAMESPACE \
    --userId 'aRlzgEOU' \
    --ids '["PSwVxdBj", "Om5ssOJt", "vgpaQVxI"]' \
    > test.out 2>&1
eval_tap $? 405 'PublicGetUserEntitlementOwnershipByItemIds' test.out

#- 406 PublicGetUserEntitlementOwnershipBySku
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementOwnershipBySku \
    --namespace $AB_NAMESPACE \
    --userId 'KLYsjCcb' \
    --entitlementClazz 'SUBSCRIPTION' \
    --sku 'aA0k74kk' \
    > test.out 2>&1
eval_tap $? 406 'PublicGetUserEntitlementOwnershipBySku' test.out

#- 407 PublicGetUserEntitlement
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlement \
    --entitlementId 'Na2VkQNs' \
    --namespace $AB_NAMESPACE \
    --userId 'vhK2loZG' \
    > test.out 2>&1
eval_tap $? 407 'PublicGetUserEntitlement' test.out

#- 408 PublicConsumeUserEntitlement
# body param: body
echo '{"options": ["D1UqNrvP", "esF2IV8g", "9NmDlIAN"], "requestId": "MwcN5vio", "useCount": 0}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicConsumeUserEntitlement \
    --entitlementId 'Nblnyqwt' \
    --namespace $AB_NAMESPACE \
    --userId '1sBm8TTJ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 408 'PublicConsumeUserEntitlement' test.out

#- 409 PublicSellUserEntitlement
# body param: body
echo '{"requestId": "kzIDbdmd", "useCount": 98}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicSellUserEntitlement \
    --entitlementId 'oak5Nvea' \
    --namespace $AB_NAMESPACE \
    --userId 'fIfV2yXS' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 409 'PublicSellUserEntitlement' test.out

#- 410 PublicSplitUserEntitlement
# body param: body
echo '{"useCount": 79}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicSplitUserEntitlement \
    --entitlementId 'UhF4vZL8' \
    --namespace $AB_NAMESPACE \
    --userId '3v0y9u8i' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 410 'PublicSplitUserEntitlement' test.out

#- 411 PublicTransferUserEntitlement
# body param: body
echo '{"entitlementId": "HubeSN12", "useCount": 28}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicTransferUserEntitlement \
    --entitlementId '7Oln28kB' \
    --namespace $AB_NAMESPACE \
    --userId '6KqgiCno' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 411 'PublicTransferUserEntitlement' test.out

#- 412 PublicRedeemCode
# body param: body
echo '{"code": "2w1zMQ4g", "language": "Lt_UZTA", "region": "uAldLmnQ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicRedeemCode \
    --namespace $AB_NAMESPACE \
    --userId '99pHHrcy' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 412 'PublicRedeemCode' test.out

#- 413 PublicFulfillAppleIAPItem
# body param: body
echo '{"excludeOldTransactions": false, "language": "jQ", "productId": "H3eJIoXt", "receiptData": "ueY1pvuf", "region": "emb5V4T3", "transactionId": "4THfklKK"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicFulfillAppleIAPItem \
    --namespace $AB_NAMESPACE \
    --userId 'g4TAAiAW' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 413 'PublicFulfillAppleIAPItem' test.out

#- 414 SyncEpicGamesInventory
# body param: body
echo '{"epicGamesJwtToken": "v4vnCMna"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncEpicGamesInventory \
    --namespace $AB_NAMESPACE \
    --userId 'kN4UZLfK' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 414 'SyncEpicGamesInventory' test.out

#- 415 PublicFulfillGoogleIAPItem
# body param: body
echo '{"autoAck": false, "language": "rE_fAOD_GA", "orderId": "WDqjC338", "packageName": "FO2wyIwg", "productId": "tyZEPTR6", "purchaseTime": 35, "purchaseToken": "xbMfJIro", "region": "6HSV44Jg"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicFulfillGoogleIAPItem \
    --namespace $AB_NAMESPACE \
    --userId '99GNHeBX' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 415 'PublicFulfillGoogleIAPItem' test.out

#- 416 SyncOculusConsumableEntitlements
$CLI_EXE \
    --sn platform \
    --op SyncOculusConsumableEntitlements \
    --namespace $AB_NAMESPACE \
    --userId 'QooNsbIP' \
    > test.out 2>&1
eval_tap $? 416 'SyncOculusConsumableEntitlements' test.out

#- 417 PublicReconcilePlayStationStore
# body param: body
echo '{"currencyCode": "QO1JayUd", "price": 0.3030388669764641, "productId": "qG7L7VyV", "serviceLabel": 58}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicReconcilePlayStationStore \
    --namespace $AB_NAMESPACE \
    --userId 'i1cgZQnX' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 417 'PublicReconcilePlayStationStore' test.out

#- 418 PublicReconcilePlayStationStoreWithMultipleServiceLabels
# body param: body
echo '{"currencyCode": "Oj9B4mke", "price": 0.021519688848180007, "productId": "Nhpx153d", "serviceLabels": [65, 26, 13]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicReconcilePlayStationStoreWithMultipleServiceLabels \
    --namespace $AB_NAMESPACE \
    --userId 'SltKKFVJ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 418 'PublicReconcilePlayStationStoreWithMultipleServiceLabels' test.out

#- 419 SyncSteamInventory
# body param: body
echo '{"appId": "GknJpxNr", "currencyCode": "vg2AlRn2", "language": "yK", "price": 0.6681146940730669, "productId": "YgWPQ8nO", "region": "ygM5YMqD", "steamId": "LHy0qlc0"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncSteamInventory \
    --namespace $AB_NAMESPACE \
    --userId 'cXAJzpnf' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 419 'SyncSteamInventory' test.out

#- 420 SyncTwitchDropsEntitlement1
# body param: body
echo '{"gameId": "ObcVGlXc", "language": "APa_utbH-fw", "region": "Xj6L33Mr"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncTwitchDropsEntitlement1 \
    --namespace $AB_NAMESPACE \
    --userId '75XHOlFv' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 420 'SyncTwitchDropsEntitlement1' test.out

#- 421 SyncXboxInventory
# body param: body
echo '{"currencyCode": "kkFH013Y", "price": 0.8437715508672967, "productId": "YCE9pO6y", "xstsToken": "Xhy4hZnV"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncXboxInventory \
    --namespace $AB_NAMESPACE \
    --userId 'sVByz7F7' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 421 'SyncXboxInventory' test.out

#- 422 PublicQueryUserOrders
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserOrders \
    --namespace $AB_NAMESPACE \
    --userId 'tAzMeMBw' \
    --itemId 'v3ZSAAVo' \
    --limit '79' \
    --offset '27' \
    --status 'REFUNDING' \
    > test.out 2>&1
eval_tap $? 422 'PublicQueryUserOrders' test.out

#- 423 PublicCreateUserOrder
# body param: body
echo '{"currencyCode": "3m3lhqrX", "discountedPrice": 87, "ext": {"5lvLjg81": {}, "mJdbIZcX": {}, "KcL1y955": {}}, "itemId": "gOjD77Wv", "language": "FdF-mgHi", "price": 40, "quantity": 82, "region": "nl0h3maj", "returnUrl": "xGtplWLW", "sectionId": "fp4WIzic"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicCreateUserOrder \
    --namespace $AB_NAMESPACE \
    --userId 'IgHy0ZZj' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 423 'PublicCreateUserOrder' test.out

#- 424 PublicGetUserOrder
$CLI_EXE \
    --sn platform \
    --op PublicGetUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'ypWmeVCj' \
    --userId 'bYN8XzRW' \
    > test.out 2>&1
eval_tap $? 424 'PublicGetUserOrder' test.out

#- 425 PublicCancelUserOrder
$CLI_EXE \
    --sn platform \
    --op PublicCancelUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'A97XKPwP' \
    --userId 'jlY2K7kk' \
    > test.out 2>&1
eval_tap $? 425 'PublicCancelUserOrder' test.out

#- 426 PublicGetUserOrderHistories
$CLI_EXE \
    --sn platform \
    --op PublicGetUserOrderHistories \
    --namespace $AB_NAMESPACE \
    --orderNo 'FrT6E6Wb' \
    --userId 'PCMnNhkD' \
    > test.out 2>&1
eval_tap $? 426 'PublicGetUserOrderHistories' test.out

#- 427 PublicDownloadUserOrderReceipt
$CLI_EXE \
    --sn platform \
    --op PublicDownloadUserOrderReceipt \
    --namespace $AB_NAMESPACE \
    --orderNo '5VYDD5DY' \
    --userId 'HLj3slzD' \
    > test.out 2>&1
eval_tap $? 427 'PublicDownloadUserOrderReceipt' test.out

#- 428 PublicGetPaymentAccounts
$CLI_EXE \
    --sn platform \
    --op PublicGetPaymentAccounts \
    --namespace $AB_NAMESPACE \
    --userId 'u2OF3ghL' \
    > test.out 2>&1
eval_tap $? 428 'PublicGetPaymentAccounts' test.out

#- 429 PublicDeletePaymentAccount
$CLI_EXE \
    --sn platform \
    --op PublicDeletePaymentAccount \
    --id 'QhLeQNgS' \
    --namespace $AB_NAMESPACE \
    --type 'card' \
    --userId 'JOos8Pvj' \
    > test.out 2>&1
eval_tap $? 429 'PublicDeletePaymentAccount' test.out

#- 430 PublicListActiveSections
$CLI_EXE \
    --sn platform \
    --op PublicListActiveSections \
    --namespace $AB_NAMESPACE \
    --userId 'TyNPZ5DD' \
    --autoCalcEstimatedPrice 'true' \
    --language 'bTH1vzfX' \
    --region 'jjkZSllc' \
    --storeId 'cwCfTVua' \
    --viewId 'yo3cFuGc' \
    > test.out 2>&1
eval_tap $? 430 'PublicListActiveSections' test.out

#- 431 PublicQueryUserSubscriptions
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserSubscriptions \
    --namespace $AB_NAMESPACE \
    --userId 'ZR0lvIpm' \
    --chargeStatus 'RECURRING_CHARGING' \
    --itemId 'tkGXPYQ9' \
    --limit '88' \
    --offset '92' \
    --sku 'PzjyzpeP' \
    --status 'ACTIVE' \
    --subscribedBy 'PLATFORM' \
    > test.out 2>&1
eval_tap $? 431 'PublicQueryUserSubscriptions' test.out

#- 432 PublicSubscribeSubscription
# body param: body
echo '{"currencyCode": "UiUcbIsj", "itemId": "lfatPm0N", "language": "ePV-454", "region": "zoExmygR", "returnUrl": "OKHIccTW", "source": "ZJeZEAI7"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicSubscribeSubscription \
    --namespace $AB_NAMESPACE \
    --userId 'hlfGgbqc' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 432 'PublicSubscribeSubscription' test.out

#- 433 PublicCheckUserSubscriptionSubscribableByItemId
$CLI_EXE \
    --sn platform \
    --op PublicCheckUserSubscriptionSubscribableByItemId \
    --namespace $AB_NAMESPACE \
    --userId '13ma9gTI' \
    --itemId 'YiL8m7rx' \
    > test.out 2>&1
eval_tap $? 433 'PublicCheckUserSubscriptionSubscribableByItemId' test.out

#- 434 PublicGetUserSubscription
$CLI_EXE \
    --sn platform \
    --op PublicGetUserSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'qaRTWDbS' \
    --userId '4Ij1cgat' \
    > test.out 2>&1
eval_tap $? 434 'PublicGetUserSubscription' test.out

#- 435 PublicChangeSubscriptionBillingAccount
$CLI_EXE \
    --sn platform \
    --op PublicChangeSubscriptionBillingAccount \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'PejZDnIP' \
    --userId '2obflgKM' \
    > test.out 2>&1
eval_tap $? 435 'PublicChangeSubscriptionBillingAccount' test.out

#- 436 PublicCancelSubscription
# body param: body
echo '{"immediate": true, "reason": "B3ogx99E"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicCancelSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'pxXKTJ1x' \
    --userId 'sGGAVy56' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 436 'PublicCancelSubscription' test.out

#- 437 PublicGetUserSubscriptionBillingHistories
$CLI_EXE \
    --sn platform \
    --op PublicGetUserSubscriptionBillingHistories \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'l4KswxlN' \
    --userId 'hnUw9iz0' \
    --excludeFree 'true' \
    --limit '57' \
    --offset '100' \
    > test.out 2>&1
eval_tap $? 437 'PublicGetUserSubscriptionBillingHistories' test.out

#- 438 PublicListViews
$CLI_EXE \
    --sn platform \
    --op PublicListViews \
    --namespace $AB_NAMESPACE \
    --userId 'vQfl40XU' \
    --language 'mxZxJzY7' \
    --storeId 'g5CBbuM6' \
    > test.out 2>&1
eval_tap $? 438 'PublicListViews' test.out

#- 439 PublicGetWallet
$CLI_EXE \
    --sn platform \
    --op PublicGetWallet \
    --currencyCode 'AjfOtnqi' \
    --namespace $AB_NAMESPACE \
    --userId 'C905f0Rw' \
    > test.out 2>&1
eval_tap $? 439 'PublicGetWallet' test.out

#- 440 PublicListUserWalletTransactions
$CLI_EXE \
    --sn platform \
    --op PublicListUserWalletTransactions \
    --currencyCode 'xk7EYilK' \
    --namespace $AB_NAMESPACE \
    --userId 'GufGDPuQ' \
    --limit '65' \
    --offset '25' \
    > test.out 2>&1
eval_tap $? 440 'PublicListUserWalletTransactions' test.out

#- 441 QueryItems1
$CLI_EXE \
    --sn platform \
    --op QueryItems1 \
    --namespace $AB_NAMESPACE \
    --appType 'DLC' \
    --availableDate 'lNCIQf1Q' \
    --baseAppId 'uHffFVHi' \
    --categoryPath 'tLV5f097' \
    --features 'r52hZE1B' \
    --includeSubCategoryItem 'true' \
    --itemName 'uoGH9rB0' \
    --itemStatus 'ACTIVE' \
    --itemType 'MEDIA' \
    --limit '77' \
    --offset '97' \
    --region 'MNcH2I7q' \
    --sectionExclusive 'true' \
    --sortBy '["name:asc", "displayOrder:desc"]' \
    --storeId 'Tpy1ZVan' \
    --tags 'NA2dzgrp' \
    --targetNamespace 'kVwmDFCh' \
    --withTotal 'true' \
    > test.out 2>&1
eval_tap $? 441 'QueryItems1' test.out

#- 442 ImportStore1
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op ImportStore1 \
    --namespace $AB_NAMESPACE \
    --storeId 'rsynxFJE' \
    --strictMode 'false' \
    --upload file $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 442 'ImportStore1' test.out

#- 443 ExportStore1
# body param: body
echo '{"itemIds": ["ySmEfK2d", "lnzHaOp0", "mGZn6Juv"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ExportStore1 \
    --namespace $AB_NAMESPACE \
    --storeId 'FKYdvzdW' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 443 'ExportStore1' test.out

#- 444 FulfillRewardsV2
# body param: body
echo '{"entitlementCollectionId": "sawonnJw", "entitlementOrigin": "Steam", "metadata": {"mq10zHWQ": {}, "GqSrN0Ww": {}, "E1FB0PYN": {}}, "origin": "Nintendo", "rewards": [{"currency": {"currencyCode": "OLlLPV5w", "namespace": "is5WxCNY"}, "item": {"itemId": "56rvjJcy", "itemSku": "Q3up5TrR", "itemType": "ceL5xrZe"}, "quantity": 26, "type": "CURRENCY"}, {"currency": {"currencyCode": "8hHvOY9F", "namespace": "zmxBcw1H"}, "item": {"itemId": "b9c4jXsv", "itemSku": "OKZilT8r", "itemType": "WQZFEtiX"}, "quantity": 75, "type": "ITEM"}, {"currency": {"currencyCode": "1agj0oTH", "namespace": "lmxAVhEI"}, "item": {"itemId": "brAvR8L0", "itemSku": "pDtA16Jw", "itemType": "MeDFFF6M"}, "quantity": 31, "type": "ITEM"}], "source": "IAP", "transactionId": "sAl84cGy"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op FulfillRewardsV2 \
    --namespace $AB_NAMESPACE \
    --userId 'hTgWvZT9' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 444 'FulfillRewardsV2' test.out


# remove artifacts
rm -f "$CLI_TOKEN_FILE"
rm -f "$TEMP_JSON_INPUT"
rm -f "$TEMP_FILE_UPLOAD"

exit $EXIT_CODE