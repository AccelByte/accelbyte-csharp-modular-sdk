#!/usr/bin/env bash

# Copyright (c) 2021 AccelByte Inc. All Rights Reserved.
# This is licensed software from AccelByte Inc, for limitations
# and restrictions contact your company contract manager.

# This code is generated by tool. DO NOT EDIT.

# Meta:
# - random seed: 
# - template file: 

# Instructions:
# - Run the Justice SDK Mock Server first before running this script.

export AB_BASE_URL="http://127.0.0.1:8080"
export AB_CLIENT_ID="admin"
export AB_CLIENT_SECRET="admin"
export AB_NAMESPACE="test"
export AB_APP_NAME="UnitTest"

EXIT_CODE=0

eval_tap() {
  if [ $1 -eq 0 ]; then
    echo "ok $2 - $3"
  else
    EXIT_CODE=1
    echo "not ok $2 - $3"
    sed 's/^/# /g' $4
  fi
  rm -f $4
}

CLI_EXE="AccelByte.Sdk.Sample.Cli"
CLI_TOKEN_FILE="$(dirname "$(which $CLI_EXE)")/token.json"
TEMP_JSON_INPUT="input_json.json"
TEMP_FILE_UPLOAD="file_upload.bin"

echo "TAP version 13"
echo "1..497"

#- 1 Login
$CLI_EXE --op login --lt user --user user --pass user > test.out 2>&1
eval_tap $? 1 'Login' test.out

if [ $EXIT_CODE -ne 0 ]; then
  echo "Bail out! Login failed."
  exit $EXIT_CODE
fi

# echo "foo" > "$CLI_TOKEN_FILE"

#- 2 ListFulfillmentScripts
$CLI_EXE \
    --sn platform \
    --op ListFulfillmentScripts \
    > test.out 2>&1
eval_tap $? 2 'ListFulfillmentScripts' test.out

#- 3 GetFulfillmentScript
$CLI_EXE \
    --sn platform \
    --op GetFulfillmentScript \
    --id 'oozAQiTo' \
    > test.out 2>&1
eval_tap $? 3 'GetFulfillmentScript' test.out

#- 4 CreateFulfillmentScript
# body param: body
echo '{"grantDays": "ET8SjglX"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateFulfillmentScript \
    --id 'TTbGXVUa' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 4 'CreateFulfillmentScript' test.out

#- 5 DeleteFulfillmentScript
$CLI_EXE \
    --sn platform \
    --op DeleteFulfillmentScript \
    --id 'NqXGYat9' \
    > test.out 2>&1
eval_tap $? 5 'DeleteFulfillmentScript' test.out

#- 6 UpdateFulfillmentScript
# body param: body
echo '{"grantDays": "pIrXY3tJ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateFulfillmentScript \
    --id 'YRWPYiKc' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 6 'UpdateFulfillmentScript' test.out

#- 7 ListItemTypeConfigs
$CLI_EXE \
    --sn platform \
    --op ListItemTypeConfigs \
    > test.out 2>&1
eval_tap $? 7 'ListItemTypeConfigs' test.out

#- 8 CreateItemTypeConfig
# body param: body
echo '{"clazz": "W4Y2XOK8", "dryRun": true, "fulfillmentUrl": "dAVr7LeW", "itemType": "LOOTBOX", "purchaseConditionUrl": "x4LfauUR"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateItemTypeConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 8 'CreateItemTypeConfig' test.out

#- 9 SearchItemTypeConfig
$CLI_EXE \
    --sn platform \
    --op SearchItemTypeConfig \
    --clazz 'l9LwwkuB' \
    --itemType 'COINS' \
    > test.out 2>&1
eval_tap $? 9 'SearchItemTypeConfig' test.out

#- 10 GetItemTypeConfig
$CLI_EXE \
    --sn platform \
    --op GetItemTypeConfig \
    --id 'r3f3RxM5' \
    > test.out 2>&1
eval_tap $? 10 'GetItemTypeConfig' test.out

#- 11 UpdateItemTypeConfig
# body param: body
echo '{"clazz": "VtKELyFW", "dryRun": false, "fulfillmentUrl": "T2CFxoEg", "purchaseConditionUrl": "lcFU33Lc"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateItemTypeConfig \
    --id 'CTldK8aa' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 11 'UpdateItemTypeConfig' test.out

#- 12 DeleteItemTypeConfig
$CLI_EXE \
    --sn platform \
    --op DeleteItemTypeConfig \
    --id 'yCyxd1pC' \
    > test.out 2>&1
eval_tap $? 12 'DeleteItemTypeConfig' test.out

#- 13 QueryCampaigns
$CLI_EXE \
    --sn platform \
    --op QueryCampaigns \
    --namespace $AB_NAMESPACE \
    --limit '89' \
    --name 'Mptq4xS9' \
    --offset '27' \
    --tag 'd6BVGtvk' \
    > test.out 2>&1
eval_tap $? 13 'QueryCampaigns' test.out

#- 14 CreateCampaign
# body param: body
echo '{"description": "EVn7EWVW", "discountConfig": {"categories": [{"categoryPath": "pdn3g39p", "includeSubCategories": true}, {"categoryPath": "D4K7vaOW", "includeSubCategories": false}, {"categoryPath": "zEyBKITL", "includeSubCategories": false}], "currencyCode": "EyBVMFbs", "currencyNamespace": "Epjqzx2X", "discountAmount": 23, "discountPercentage": 31, "discountType": "PERCENTAGE", "items": [{"itemId": "0XOXiL0Q", "itemName": "KIr0Vj9V"}, {"itemId": "chx3OAyk", "itemName": "48igTHWW"}, {"itemId": "Rz8MJslf", "itemName": "t1kRF3ro"}], "restrictType": "ITEMS_AND_CATEGORIES", "stackable": true}, "items": [{"extraSubscriptionDays": 36, "itemId": "nFdKDV9E", "itemName": "gfjCmsyY", "quantity": 5}, {"extraSubscriptionDays": 100, "itemId": "plk3xRbL", "itemName": "FCBWXh8z", "quantity": 38}, {"extraSubscriptionDays": 53, "itemId": "5PvbdX2i", "itemName": "mTq4DvKa", "quantity": 13}], "maxRedeemCountPerCampaignPerUser": 67, "maxRedeemCountPerCode": 28, "maxRedeemCountPerCodePerUser": 37, "maxSaleCount": 39, "name": "I1S03u6V", "redeemEnd": "1976-05-26T00:00:00Z", "redeemStart": "1995-09-06T00:00:00Z", "redeemType": "ITEM", "status": "ACTIVE", "tags": ["Ubk8VO56", "WuMgCYEl", "qDngmFNC"], "type": "REDEMPTION"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCampaign \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 14 'CreateCampaign' test.out

#- 15 GetCampaign
$CLI_EXE \
    --sn platform \
    --op GetCampaign \
    --campaignId '6n7GeQV0' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 15 'GetCampaign' test.out

#- 16 UpdateCampaign
# body param: body
echo '{"description": "Fv6ucvhH", "discountConfig": {"categories": [{"categoryPath": "vSqSNTYl", "includeSubCategories": false}, {"categoryPath": "TlGKcaSK", "includeSubCategories": false}, {"categoryPath": "yP0ANE1Y", "includeSubCategories": false}], "currencyCode": "0Gt4gAge", "currencyNamespace": "YGqUKg3t", "discountAmount": 28, "discountPercentage": 79, "discountType": "AMOUNT", "items": [{"itemId": "JovFhNwB", "itemName": "IWotNfgU"}, {"itemId": "6zbYImT8", "itemName": "QQP8eE5U"}, {"itemId": "wLbMDeEr", "itemName": "yJtvljcL"}], "restrictType": "ITEMS_AND_CATEGORIES", "stackable": false}, "items": [{"extraSubscriptionDays": 75, "itemId": "s3buSQ2j", "itemName": "oLrRJnQI", "quantity": 75}, {"extraSubscriptionDays": 57, "itemId": "9EqWmVDP", "itemName": "XcqpCc5s", "quantity": 85}, {"extraSubscriptionDays": 58, "itemId": "E5CerTaL", "itemName": "mSRowcua", "quantity": 20}], "maxRedeemCountPerCampaignPerUser": 88, "maxRedeemCountPerCode": 30, "maxRedeemCountPerCodePerUser": 54, "maxSaleCount": 22, "name": "DCaKGKgT", "redeemEnd": "1978-12-28T00:00:00Z", "redeemStart": "1992-06-01T00:00:00Z", "redeemType": "DISCOUNT", "status": "ACTIVE", "tags": ["h3ogNqma", "aWvXSpyp", "su37KI3h"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCampaign \
    --campaignId 'l8RDqaVC' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 16 'UpdateCampaign' test.out

#- 17 RenameBatch
# body param: body
echo '{"newName": "VNjwIzRD", "oldName": "IH2KQ8jv"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RenameBatch \
    --campaignId '3xxsNClJ' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 17 'RenameBatch' test.out

#- 18 QueryCampaignBatchNames
$CLI_EXE \
    --sn platform \
    --op QueryCampaignBatchNames \
    --campaignId 'eB7NsPwS' \
    --namespace $AB_NAMESPACE \
    --batchName 'K5DaLtSn' \
    --limit '6' \
    > test.out 2>&1
eval_tap $? 18 'QueryCampaignBatchNames' test.out

#- 19 GetCampaignDynamic
$CLI_EXE \
    --sn platform \
    --op GetCampaignDynamic \
    --campaignId '8ec1671e' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 19 'GetCampaignDynamic' test.out

#- 20 GetCatalogConfig
$CLI_EXE \
    --sn platform \
    --op GetCatalogConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 20 'GetCatalogConfig' test.out

#- 21 UpdateCatalogConfig
# body param: body
echo '{"enableInventoryCheck": true, "itemDeletionCheckConfig": ["REWARD", "IAP", "CAMPAIGN"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCatalogConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 21 'UpdateCatalogConfig' test.out

#- 22 GetLootBoxPluginConfig
$CLI_EXE \
    --sn platform \
    --op GetLootBoxPluginConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 22 'GetLootBoxPluginConfig' test.out

#- 23 UpdateLootBoxPluginConfig
# body param: body
echo '{"appConfig": {"appName": "cq5dJvsb"}, "customConfig": {"connectionType": "INSECURE", "grpcServerAddress": "qUc32iBk"}, "extendType": "APP"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateLootBoxPluginConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 23 'UpdateLootBoxPluginConfig' test.out

#- 24 DeleteLootBoxPluginConfig
$CLI_EXE \
    --sn platform \
    --op DeleteLootBoxPluginConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 24 'DeleteLootBoxPluginConfig' test.out

#- 25 UplodLootBoxPluginConfigCert
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UplodLootBoxPluginConfigCert \
    --namespace $AB_NAMESPACE \
    --upload file $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 25 'UplodLootBoxPluginConfigCert' test.out

#- 26 GetLootBoxGrpcInfo
$CLI_EXE \
    --sn platform \
    --op GetLootBoxGrpcInfo \
    --namespace $AB_NAMESPACE \
    --force 'true' \
    > test.out 2>&1
eval_tap $? 26 'GetLootBoxGrpcInfo' test.out

#- 27 GetSectionPluginConfig
$CLI_EXE \
    --sn platform \
    --op GetSectionPluginConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 27 'GetSectionPluginConfig' test.out

#- 28 UpdateSectionPluginConfig
# body param: body
echo '{"appConfig": {"appName": "wTgFLBkc"}, "customConfig": {"connectionType": "TLS", "grpcServerAddress": "CYZ71lhv"}, "extendType": "APP"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateSectionPluginConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 28 'UpdateSectionPluginConfig' test.out

#- 29 DeleteSectionPluginConfig
$CLI_EXE \
    --sn platform \
    --op DeleteSectionPluginConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 29 'DeleteSectionPluginConfig' test.out

#- 30 UploadSectionPluginConfigCert
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UploadSectionPluginConfigCert \
    --namespace $AB_NAMESPACE \
    --upload file $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 30 'UploadSectionPluginConfigCert' test.out

#- 31 GetRootCategories
$CLI_EXE \
    --sn platform \
    --op GetRootCategories \
    --namespace $AB_NAMESPACE \
    --storeId 'jxjzW0Lr' \
    > test.out 2>&1
eval_tap $? 31 'GetRootCategories' test.out

#- 32 CreateCategory
# body param: body
echo '{"categoryPath": "MPbOZ05d", "localizationDisplayNames": {"pw3ysmzy": "okcDwgpP", "sZpOB4ig": "nee0QlxI", "j7CnChka": "3u4sLNNo"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCategory \
    --namespace $AB_NAMESPACE \
    --storeId '9xWvP4I8' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 32 'CreateCategory' test.out

#- 33 ListCategoriesBasic
$CLI_EXE \
    --sn platform \
    --op ListCategoriesBasic \
    --namespace $AB_NAMESPACE \
    --storeId '7KMpM787' \
    > test.out 2>&1
eval_tap $? 33 'ListCategoriesBasic' test.out

#- 34 GetCategory
$CLI_EXE \
    --sn platform \
    --op GetCategory \
    --categoryPath '6wBTQN6T' \
    --namespace $AB_NAMESPACE \
    --storeId '7H2cwAqo' \
    > test.out 2>&1
eval_tap $? 34 'GetCategory' test.out

#- 35 UpdateCategory
# body param: body
echo '{"localizationDisplayNames": {"jPAyYjF6": "hztvsnZw", "4Y0d3pCT": "owpnZjmt", "O0MedcCq": "7gKwD7f1"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCategory \
    --categoryPath 'xSOVvwSj' \
    --namespace $AB_NAMESPACE \
    --storeId 'kScTTzz4' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 35 'UpdateCategory' test.out

#- 36 DeleteCategory
$CLI_EXE \
    --sn platform \
    --op DeleteCategory \
    --categoryPath 'iL7Vv8o9' \
    --namespace $AB_NAMESPACE \
    --storeId 'ImwOedtn' \
    > test.out 2>&1
eval_tap $? 36 'DeleteCategory' test.out

#- 37 GetChildCategories
$CLI_EXE \
    --sn platform \
    --op GetChildCategories \
    --categoryPath 'EW2uLLJY' \
    --namespace $AB_NAMESPACE \
    --storeId 'PpZKolmm' \
    > test.out 2>&1
eval_tap $? 37 'GetChildCategories' test.out

#- 38 GetDescendantCategories
$CLI_EXE \
    --sn platform \
    --op GetDescendantCategories \
    --categoryPath 'y6sJNddx' \
    --namespace $AB_NAMESPACE \
    --storeId 'RDdK1ZFo' \
    > test.out 2>&1
eval_tap $? 38 'GetDescendantCategories' test.out

#- 39 QueryCodes
$CLI_EXE \
    --sn platform \
    --op QueryCodes \
    --campaignId 'KItUrpQG' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --batchName 'duWFFvKW' \
    --batchNo '[7, 32, 7]' \
    --code 'ZBQ2cVH8' \
    --limit '20' \
    --offset '17' \
    --withBatchName 'false' \
    > test.out 2>&1
eval_tap $? 39 'QueryCodes' test.out

#- 40 CreateCodes
# body param: body
echo '{"batchName": "8k67FWRL", "codeValue": "992ObHDQ", "quantity": 96}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCodes \
    --campaignId 'qMNgUOm4' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 40 'CreateCodes' test.out

#- 41 Download
$CLI_EXE \
    --sn platform \
    --op Download \
    --campaignId 'kkHpujmQ' \
    --namespace $AB_NAMESPACE \
    --batchName 'DS2tzaZq' \
    --batchNo '[40, 9, 11]' \
    --withBatchName 'true' \
    > test.out 2>&1
eval_tap $? 41 'Download' test.out

#- 42 BulkDisableCodes
$CLI_EXE \
    --sn platform \
    --op BulkDisableCodes \
    --campaignId 'bLFtm2qv' \
    --namespace $AB_NAMESPACE \
    --batchName 'L9Q690x5' \
    --batchNo '[11, 49, 48]' \
    > test.out 2>&1
eval_tap $? 42 'BulkDisableCodes' test.out

#- 43 BulkEnableCodes
$CLI_EXE \
    --sn platform \
    --op BulkEnableCodes \
    --campaignId 'l6Lr7KLa' \
    --namespace $AB_NAMESPACE \
    --batchName 'QOf6zIj8' \
    --batchNo '[16, 25, 34]' \
    > test.out 2>&1
eval_tap $? 43 'BulkEnableCodes' test.out

#- 44 QueryRedeemHistory
$CLI_EXE \
    --sn platform \
    --op QueryRedeemHistory \
    --campaignId 'iTz1W6sR' \
    --namespace $AB_NAMESPACE \
    --code 'nHCjMu1T' \
    --limit '22' \
    --offset '7' \
    --userId 'IWxu0yCd' \
    > test.out 2>&1
eval_tap $? 44 'QueryRedeemHistory' test.out

#- 45 GetCode
$CLI_EXE \
    --sn platform \
    --op GetCode \
    --code '87KACyZq' \
    --namespace $AB_NAMESPACE \
    --redeemable 'true' \
    --withBatchName 'false' \
    > test.out 2>&1
eval_tap $? 45 'GetCode' test.out

#- 46 DisableCode
$CLI_EXE \
    --sn platform \
    --op DisableCode \
    --code 'Xd5OjLj7' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 46 'DisableCode' test.out

#- 47 EnableCode
$CLI_EXE \
    --sn platform \
    --op EnableCode \
    --code 'J4FKKHYP' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 47 'EnableCode' test.out

#- 48 GetServicePluginConfig
eval_tap 0 48 'GetServicePluginConfig # SKIP deprecated' test.out

#- 49 UpdateServicePluginConfig
eval_tap 0 49 'UpdateServicePluginConfig # SKIP deprecated' test.out

#- 50 DeleteServicePluginConfig
eval_tap 0 50 'DeleteServicePluginConfig # SKIP deprecated' test.out

#- 51 ListCurrencies
$CLI_EXE \
    --sn platform \
    --op ListCurrencies \
    --namespace $AB_NAMESPACE \
    --currencyType 'REAL' \
    > test.out 2>&1
eval_tap $? 51 'ListCurrencies' test.out

#- 52 CreateCurrency
# body param: body
echo '{"currencyCode": "CDkFX5Vw", "currencySymbol": "IKtAXnVB", "currencyType": "REAL", "decimals": 1, "localizationDescriptions": {"ABJfnuuw": "Rx6VmFIH", "zImKyZQf": "Z4krz2PC", "UxVmTgXV": "Buw2Tlsr"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCurrency \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 52 'CreateCurrency' test.out

#- 53 UpdateCurrency
# body param: body
echo '{"localizationDescriptions": {"HghtolwV": "UDZNq1TF", "2AeUhCwA": "EbOyZNsZ", "mfV5CQ8m": "xGjFo22r"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCurrency \
    --currencyCode 'SSdvWGJj' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 53 'UpdateCurrency' test.out

#- 54 DeleteCurrency
$CLI_EXE \
    --sn platform \
    --op DeleteCurrency \
    --currencyCode 'kQUbM23c' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 54 'DeleteCurrency' test.out

#- 55 GetCurrencyConfig
$CLI_EXE \
    --sn platform \
    --op GetCurrencyConfig \
    --currencyCode 'ARh809Wy' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 55 'GetCurrencyConfig' test.out

#- 56 GetCurrencySummary
$CLI_EXE \
    --sn platform \
    --op GetCurrencySummary \
    --currencyCode 'XeAGRanV' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 56 'GetCurrencySummary' test.out

#- 57 GetDLCItemConfig
$CLI_EXE \
    --sn platform \
    --op GetDLCItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 57 'GetDLCItemConfig' test.out

#- 58 UpdateDLCItemConfig
# body param: body
echo '{"data": [{"id": "jNYTL84c", "rewards": [{"currency": {"currencyCode": "c9rTfRpO", "namespace": "HDBpVnkZ"}, "item": {"itemId": "vaLpCOsW", "itemName": "KUihjnoc", "itemSku": "4SEwT3ek", "itemType": "SETCOUH4"}, "quantity": 3, "type": "ITEM"}, {"currency": {"currencyCode": "USsDsETu", "namespace": "MwskcxOb"}, "item": {"itemId": "arcQxJvC", "itemName": "QNSBO4Pn", "itemSku": "fVfDrsUU", "itemType": "gZgoq13B"}, "quantity": 58, "type": "ITEM"}, {"currency": {"currencyCode": "C2xwlkQP", "namespace": "MroKa9dr"}, "item": {"itemId": "j02TNpnd", "itemName": "FQBPZ74M", "itemSku": "lUgGlPo5", "itemType": "Y3JO6tk9"}, "quantity": 23, "type": "CURRENCY"}]}, {"id": "XTACiQWE", "rewards": [{"currency": {"currencyCode": "le8DZr0S", "namespace": "Noxuwkyc"}, "item": {"itemId": "qKfH60Ha", "itemName": "0U3sZHjn", "itemSku": "k8PG0FI3", "itemType": "fgWJxCaW"}, "quantity": 20, "type": "ITEM"}, {"currency": {"currencyCode": "2n9icS6n", "namespace": "cyIdUPrR"}, "item": {"itemId": "sSCcVAGV", "itemName": "SFbOGt6E", "itemSku": "jsfrWtSJ", "itemType": "zkTd23NB"}, "quantity": 47, "type": "ITEM"}, {"currency": {"currencyCode": "Mhj4LCMB", "namespace": "cAOM2Mhc"}, "item": {"itemId": "hmN4jlno", "itemName": "W2jJfziv", "itemSku": "lpVq0MPs", "itemType": "HE6QRlFd"}, "quantity": 77, "type": "ITEM"}]}, {"id": "w6AKQ0TF", "rewards": [{"currency": {"currencyCode": "eig399vl", "namespace": "t5nLCmys"}, "item": {"itemId": "vK0TUX3M", "itemName": "EqLwddsh", "itemSku": "a0KDjf4d", "itemType": "1mPnETYq"}, "quantity": 52, "type": "CURRENCY"}, {"currency": {"currencyCode": "qGCeNNNP", "namespace": "KUGeE2f5"}, "item": {"itemId": "J5CdABMr", "itemName": "FoODyBQk", "itemSku": "bA94dBoJ", "itemType": "IrHxhq52"}, "quantity": 69, "type": "ITEM"}, {"currency": {"currencyCode": "pjfdYWt3", "namespace": "UbOQzArT"}, "item": {"itemId": "WMrHA88A", "itemName": "Fx4eH73h", "itemSku": "4UPZjNcu", "itemType": "oisujbXg"}, "quantity": 78, "type": "ITEM"}]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateDLCItemConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 58 'UpdateDLCItemConfig' test.out

#- 59 DeleteDLCItemConfig
$CLI_EXE \
    --sn platform \
    --op DeleteDLCItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 59 'DeleteDLCItemConfig' test.out

#- 60 GetPlatformDLCConfig
$CLI_EXE \
    --sn platform \
    --op GetPlatformDLCConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 60 'GetPlatformDLCConfig' test.out

#- 61 UpdatePlatformDLCConfig
# body param: body
echo '{"data": [{"platform": "PSN", "platformDlcIdMap": {"Aj3DyygJ": "tiLxFA9D", "7b12mAlP": "f6KaDLPD", "SqgAeb3t": "DMX9cPPk"}}, {"platform": "STEAM", "platformDlcIdMap": {"sqvdmexy": "70vsVKlJ", "RY13ptGs": "6p3KxAXF", "WLJLb9Rb": "KCfNJRNy"}}, {"platform": "XBOX", "platformDlcIdMap": {"TuY6kPn8": "xAiYMse0", "1QeAjsBy": "Sr3HqMbr", "oEXTwsMN": "ADwTGexf"}}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePlatformDLCConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 61 'UpdatePlatformDLCConfig' test.out

#- 62 DeletePlatformDLCConfig
$CLI_EXE \
    --sn platform \
    --op DeletePlatformDLCConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 62 'DeletePlatformDLCConfig' test.out

#- 63 QueryEntitlements1
$CLI_EXE \
    --sn platform \
    --op QueryEntitlements1 \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --appType 'SOFTWARE' \
    --entitlementClazz 'APP' \
    --entitlementName 'trH78lIJ' \
    --itemId '["kF6R39ST", "alsSclyF", "aDRQIkva"]' \
    --limit '42' \
    --offset '5' \
    --origin 'Playstation' \
    --userId 'OINJ79rq' \
    > test.out 2>&1
eval_tap $? 63 'QueryEntitlements1' test.out

#- 64 QueryEntitlements
$CLI_EXE \
    --sn platform \
    --op QueryEntitlements \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --itemIds '["Pam83lnG", "Fu9hXPjR", "D2eK1nft"]' \
    --limit '41' \
    --offset '62' \
    > test.out 2>&1
eval_tap $? 64 'QueryEntitlements' test.out

#- 65 EnableEntitlementOriginFeature
$CLI_EXE \
    --sn platform \
    --op EnableEntitlementOriginFeature \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 65 'EnableEntitlementOriginFeature' test.out

#- 66 GetEntitlementConfigInfo
$CLI_EXE \
    --sn platform \
    --op GetEntitlementConfigInfo \
    --namespace $AB_NAMESPACE \
    --withoutCache 'false' \
    > test.out 2>&1
eval_tap $? 66 'GetEntitlementConfigInfo' test.out

#- 67 GrantEntitlements
# body param: body
echo '{"entitlementGrantList": [{"collectionId": "nTPrg3Ii", "endDate": "1980-07-05T00:00:00Z", "grantedCode": "XJtLSrSq", "itemId": "c38bso3J", "itemNamespace": "wOTFFenV", "language": "wEkr_pCsP", "metadata": {"xCUzwGGl": {}, "PjO3EHaS": {}, "Rid6cHtV": {}}, "origin": "Oculus", "quantity": 30, "region": "c8OBcp5F", "source": "REDEEM_CODE", "startDate": "1998-09-29T00:00:00Z", "storeId": "k750tN0L"}, {"collectionId": "2hF2R8uF", "endDate": "1973-08-14T00:00:00Z", "grantedCode": "ucWJ1vsT", "itemId": "F6dKjn2V", "itemNamespace": "wPXNb4Ho", "language": "Lx-GJBO-Sv", "metadata": {"MlJn90N7": {}, "nIPqUnQn": {}, "blHm5PM4": {}}, "origin": "GooglePlay", "quantity": 31, "region": "KGXPONi5", "source": "PROMOTION", "startDate": "1975-07-20T00:00:00Z", "storeId": "n5gfkctC"}, {"collectionId": "lAwhS1H7", "endDate": "1972-04-11T00:00:00Z", "grantedCode": "eiMno0Me", "itemId": "fVsdJT6Q", "itemNamespace": "tH6YnMfi", "language": "rLbb", "metadata": {"araRo7Ta": {}, "7f54A591": {}, "vSwYEBBI": {}}, "origin": "Steam", "quantity": 50, "region": "7yqrJjn5", "source": "GIFT", "startDate": "1995-02-18T00:00:00Z", "storeId": "2gINQmcC"}], "userIds": ["HKK6QZMa", "zSzkT5pO", "2gc08PcH"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op GrantEntitlements \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 67 'GrantEntitlements' test.out

#- 68 RevokeEntitlements
# body param: body
echo '["ImTF7Rp4", "1ZfDmMdL", "2vC06YWL"]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RevokeEntitlements \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 68 'RevokeEntitlements' test.out

#- 69 GetEntitlement
$CLI_EXE \
    --sn platform \
    --op GetEntitlement \
    --entitlementId '5xnov7P2' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 69 'GetEntitlement' test.out

#- 70 QueryFulfillmentHistories
$CLI_EXE \
    --sn platform \
    --op QueryFulfillmentHistories \
    --namespace $AB_NAMESPACE \
    --limit '44' \
    --offset '49' \
    --status 'FAIL' \
    --userId 'NQMYvVUl' \
    > test.out 2>&1
eval_tap $? 70 'QueryFulfillmentHistories' test.out

#- 71 QueryIAPClawbackHistory
$CLI_EXE \
    --sn platform \
    --op QueryIAPClawbackHistory \
    --namespace $AB_NAMESPACE \
    --endTime 'XlYlCTgd' \
    --eventType 'OTHER' \
    --externalOrderId '7x1uGC3h' \
    --limit '37' \
    --offset '22' \
    --startTime '9IAUGMbb' \
    --status 'IGNORED' \
    --userId 'i8GiGKBP' \
    > test.out 2>&1
eval_tap $? 71 'QueryIAPClawbackHistory' test.out

#- 72 MockPlayStationStreamEvent
# body param: body
echo '{"body": {"account": "4W2u7Tbh", "additionalData": {"entitlement": [{"clientTransaction": [{"amountConsumed": 59, "clientTransactionId": "02ldwx6P"}, {"amountConsumed": 65, "clientTransactionId": "NYsya5bg"}, {"amountConsumed": 76, "clientTransactionId": "HgtaD71b"}], "entitlementId": "edLMrxFp", "usageCount": 52}, {"clientTransaction": [{"amountConsumed": 16, "clientTransactionId": "NTmazFzJ"}, {"amountConsumed": 92, "clientTransactionId": "BFexs4Or"}, {"amountConsumed": 80, "clientTransactionId": "OqR1H08a"}], "entitlementId": "wVEjyqlM", "usageCount": 22}, {"clientTransaction": [{"amountConsumed": 48, "clientTransactionId": "FjA7yP7c"}, {"amountConsumed": 11, "clientTransactionId": "CRiSaR8c"}, {"amountConsumed": 100, "clientTransactionId": "fAveQErG"}], "entitlementId": "uGb4ATj3", "usageCount": 34}], "purpose": "Uxx9Flo5"}, "originalTitleName": "8LDndimy", "paymentProductSKU": "0OHGqByS", "purchaseDate": "xwsjgBmE", "sourceOrderItemId": "RqAnf0Ks", "titleName": "053UfPoU"}, "eventDomain": "qX9I2cJX", "eventSource": "lgRsLfWI", "eventType": "B5qUT5Qu", "eventVersion": 83, "id": "VYBdRw6v", "timestamp": "PEXtu0Mk"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op MockPlayStationStreamEvent \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 72 'MockPlayStationStreamEvent' test.out

#- 73 MockXblClawbackEvent
# body param: body
echo '{"data": {"eventDate": "88Y7KkQ5", "eventState": "A4ugnmUZ", "lineItemId": "xSZ1uawd", "orderId": "G0yhfGhj", "productId": "fORAUStN", "productType": "3MwvMQP4", "purchasedDate": "ChJvI8Hd", "sandboxId": "ZLUNtVW7", "skuId": "1KoPSyvS", "subscriptionData": {"consumedDurationInDays": 17, "dateTime": "nJdBcjTB", "durationInDays": 73, "recurrenceId": "4kirAMF5"}}, "datacontenttype": "BVQeN0xE", "id": "JM8FZckP", "source": "PP2lHJaW", "specVersion": "iTTBoVPt", "subject": "Wg3wbvDQ", "time": "1wYxq7sX", "traceparent": "V1SsFUIt", "type": "o7aDnozf"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op MockXblClawbackEvent \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 73 'MockXblClawbackEvent' test.out

#- 74 GetAppleIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetAppleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 74 'GetAppleIAPConfig' test.out

#- 75 UpdateAppleIAPConfig
# body param: body
echo '{"appAppleId": 15, "bundleId": "4vNLr1zr", "issuerId": "9rKgXIML", "keyId": "sbUD0QJj", "password": "hQE97gvH", "version": "V2"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateAppleIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 75 'UpdateAppleIAPConfig' test.out

#- 76 DeleteAppleIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteAppleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 76 'DeleteAppleIAPConfig' test.out

#- 77 UpdateAppleP8File
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UpdateAppleP8File \
    --namespace $AB_NAMESPACE \
    --upload file $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 77 'UpdateAppleP8File' test.out

#- 78 GetEpicGamesIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetEpicGamesIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 78 'GetEpicGamesIAPConfig' test.out

#- 79 UpdateEpicGamesIAPConfig
# body param: body
echo '{"sandboxId": "zbMptwFq"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateEpicGamesIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 79 'UpdateEpicGamesIAPConfig' test.out

#- 80 DeleteEpicGamesIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteEpicGamesIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 80 'DeleteEpicGamesIAPConfig' test.out

#- 81 GetGoogleIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetGoogleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 81 'GetGoogleIAPConfig' test.out

#- 82 UpdateGoogleIAPConfig
# body param: body
echo '{"applicationName": "ANWvbSbt", "notificationTokenAudience": "ayRkIrTk", "notificationTokenEmail": "TTIF9aGW", "packageName": "iyGakIwb", "serviceAccountId": "HVplry4K"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateGoogleIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 82 'UpdateGoogleIAPConfig' test.out

#- 83 DeleteGoogleIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteGoogleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 83 'DeleteGoogleIAPConfig' test.out

#- 84 UpdateGoogleP12File
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UpdateGoogleP12File \
    --namespace $AB_NAMESPACE \
    --upload file $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 84 'UpdateGoogleP12File' test.out

#- 85 GetIAPItemConfig
$CLI_EXE \
    --sn platform \
    --op GetIAPItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 85 'GetIAPItemConfig' test.out

#- 86 UpdateIAPItemConfig
# body param: body
echo '{"data": [{"itemIdentity": "PFhHfnei", "itemIdentityType": "ITEM_SKU", "platformProductIdMap": {"AvPWmmDA": "OG1mrQaY", "H6skvHT8": "33CuDMkH", "AnbQ7Wyc": "U4OKN1kX"}}, {"itemIdentity": "SmrPHUKU", "itemIdentityType": "ITEM_ID", "platformProductIdMap": {"7RcCzjaJ": "ZmxNAaVv", "lktbmeqs": "Vrpt58Jt", "MFWrwjsT": "4LZkxMT6"}}, {"itemIdentity": "ETC89E3y", "itemIdentityType": "ITEM_SKU", "platformProductIdMap": {"aMgfNwxA": "lvy7U7lw", "eemElqop": "b8tcVbhf", "6jMKAbYC": "ttdVeyRk"}}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateIAPItemConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 86 'UpdateIAPItemConfig' test.out

#- 87 DeleteIAPItemConfig
$CLI_EXE \
    --sn platform \
    --op DeleteIAPItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 87 'DeleteIAPItemConfig' test.out

#- 88 GetOculusIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetOculusIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 88 'GetOculusIAPConfig' test.out

#- 89 UpdateOculusIAPConfig
# body param: body
echo '{"appId": "mWIZ4IBs", "appSecret": "p8oWgk8Y"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateOculusIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 89 'UpdateOculusIAPConfig' test.out

#- 90 DeleteOculusIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteOculusIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 90 'DeleteOculusIAPConfig' test.out

#- 91 GetPlayStationIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetPlayStationIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 91 'GetPlayStationIAPConfig' test.out

#- 92 UpdatePlaystationIAPConfig
# body param: body
echo '{"backOfficeServerClientId": "0l9bKH2M", "backOfficeServerClientSecret": "OxNoBBbi", "enableStreamJob": false, "environment": "vlBkZwD3", "streamName": "GiqydSaC", "streamPartnerName": "R3JDUG4m"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePlaystationIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 92 'UpdatePlaystationIAPConfig' test.out

#- 93 DeletePlaystationIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeletePlaystationIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 93 'DeletePlaystationIAPConfig' test.out

#- 94 ValidateExistedPlaystationIAPConfig
$CLI_EXE \
    --sn platform \
    --op ValidateExistedPlaystationIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 94 'ValidateExistedPlaystationIAPConfig' test.out

#- 95 ValidatePlaystationIAPConfig
# body param: body
echo '{"backOfficeServerClientId": "32GcvoMH", "backOfficeServerClientSecret": "7FxY9TSJ", "enableStreamJob": true, "environment": "j4Vbknuj", "streamName": "AkFlps0t", "streamPartnerName": "J4zYJ2GG"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ValidatePlaystationIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 95 'ValidatePlaystationIAPConfig' test.out

#- 96 GetSteamIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetSteamIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 96 'GetSteamIAPConfig' test.out

#- 97 UpdateSteamIAPConfig
# body param: body
echo '{"appId": "ACowEgLH", "env": "LIVE", "publisherAuthenticationKey": "4nLVpfuR", "syncMode": "INVENTORY"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateSteamIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 97 'UpdateSteamIAPConfig' test.out

#- 98 DeleteSteamIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteSteamIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 98 'DeleteSteamIAPConfig' test.out

#- 99 GetTwitchIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetTwitchIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 99 'GetTwitchIAPConfig' test.out

#- 100 UpdateTwitchIAPConfig
# body param: body
echo '{"clientId": "UYg4w9sG", "clientSecret": "3f0PpmXj", "organizationId": "NrMt4pao"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateTwitchIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 100 'UpdateTwitchIAPConfig' test.out

#- 101 DeleteTwitchIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteTwitchIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 101 'DeleteTwitchIAPConfig' test.out

#- 102 GetXblIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetXblIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 102 'GetXblIAPConfig' test.out

#- 103 UpdateXblIAPConfig
# body param: body
echo '{"enableClawback": false, "entraAppClientId": "7rS130tL", "entraAppClientSecret": "H1VT6hky", "entraTenantId": "XjgyGUuP", "relyingPartyCert": "QWmsVGzH"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXblIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 103 'UpdateXblIAPConfig' test.out

#- 104 DeleteXblAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteXblAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 104 'DeleteXblAPConfig' test.out

#- 105 UpdateXblBPCertFile
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UpdateXblBPCertFile \
    --namespace $AB_NAMESPACE \
    --upload file $TEMP_FILE_UPLOAD \
    --password 'yK5kbw04' \
    > test.out 2>&1
eval_tap $? 105 'UpdateXblBPCertFile' test.out

#- 106 QueryThirdPartyNotifications
$CLI_EXE \
    --sn platform \
    --op QueryThirdPartyNotifications \
    --namespace $AB_NAMESPACE \
    --endDate '7lwvs1XO' \
    --externalId 'w9TUReOp' \
    --limit '79' \
    --offset '86' \
    --source 'EPICGAMES' \
    --startDate 'SwPKDrSj' \
    --status 'IGNORED' \
    --type 'WJ4qCPEB' \
    > test.out 2>&1
eval_tap $? 106 'QueryThirdPartyNotifications' test.out

#- 107 QueryAbnormalTransactions
$CLI_EXE \
    --sn platform \
    --op QueryAbnormalTransactions \
    --namespace $AB_NAMESPACE \
    --limit '49' \
    --offset '8' \
    --orderId '4JRaecVI' \
    --steamId '4WUaI7c7' \
    > test.out 2>&1
eval_tap $? 107 'QueryAbnormalTransactions' test.out

#- 108 AdminGetSteamJobInfo
$CLI_EXE \
    --sn platform \
    --op AdminGetSteamJobInfo \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 108 'AdminGetSteamJobInfo' test.out

#- 109 AdminResetSteamJobTime
# body param: body
echo '{"env": "SANDBOX", "lastTime": "1980-09-10T00:00:00Z"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op AdminResetSteamJobTime \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 109 'AdminResetSteamJobTime' test.out

#- 110 AdminRefundIAPOrder
$CLI_EXE \
    --sn platform \
    --op AdminRefundIAPOrder \
    --iapOrderNo 'UNDk3wBh' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 110 'AdminRefundIAPOrder' test.out

#- 111 QuerySteamReportHistories
$CLI_EXE \
    --sn platform \
    --op QuerySteamReportHistories \
    --namespace $AB_NAMESPACE \
    --limit '88' \
    --offset '40' \
    --orderId 'i6cN5y2m' \
    --processStatus 'PROCESSED' \
    --steamId 'WEA1W22A' \
    > test.out 2>&1
eval_tap $? 111 'QuerySteamReportHistories' test.out

#- 112 QueryThirdPartySubscription
$CLI_EXE \
    --sn platform \
    --op QueryThirdPartySubscription \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --groupId 'Ux9LymLS' \
    --limit '64' \
    --offset '3' \
    --platform 'PLAYSTATION' \
    --productId '1Epuo7Y6' \
    --userId 'uHJsUi88' \
    > test.out 2>&1
eval_tap $? 112 'QueryThirdPartySubscription' test.out

#- 113 GetIAPOrderConsumeDetails
$CLI_EXE \
    --sn platform \
    --op GetIAPOrderConsumeDetails \
    --iapOrderNo 'oOMIfhht' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 113 'GetIAPOrderConsumeDetails' test.out

#- 114 DownloadInvoiceDetails
$CLI_EXE \
    --sn platform \
    --op DownloadInvoiceDetails \
    --namespace $AB_NAMESPACE \
    --endTime 'Wz9ScdbE' \
    --feature '6mI2j0tc' \
    --itemId 'H4B216Cc' \
    --itemType 'LOOTBOX' \
    --startTime '8OFWWVlj' \
    > test.out 2>&1
eval_tap $? 114 'DownloadInvoiceDetails' test.out

#- 115 GenerateInvoiceSummary
$CLI_EXE \
    --sn platform \
    --op GenerateInvoiceSummary \
    --namespace $AB_NAMESPACE \
    --endTime 'V07Dn28Q' \
    --feature '4Vb24fsE' \
    --itemId 'pEUW8wqx' \
    --itemType 'COINS' \
    --startTime 'b5WFSlsu' \
    > test.out 2>&1
eval_tap $? 115 'GenerateInvoiceSummary' test.out

#- 116 SyncInGameItem
# body param: body
echo '{"categoryPath": "SbJPSSY4", "targetItemId": "uq9Rlia2", "targetNamespace": "ycBDfFCG"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncInGameItem \
    --namespace $AB_NAMESPACE \
    --storeId 'hG9OPojK' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 116 'SyncInGameItem' test.out

#- 117 CreateItem
# body param: body
echo '{"appId": "TLm7bmJi", "appType": "SOFTWARE", "baseAppId": "lzf0M6KB", "boothName": "0uBGydad", "categoryPath": "tjZ21YeL", "clazz": "Tm3w1K2D", "displayOrder": 12, "entitlementType": "DURABLE", "ext": {"2M85s7qW": {}, "UEhGWAGt": {}, "8tyXMYf0": {}}, "features": ["9A4h2oG4", "xpYdb2Oh", "3FtREBDQ"], "flexible": true, "images": [{"as": "JeDmInQ6", "caption": "vttq8AG1", "height": 76, "imageUrl": "R0o0dFRu", "smallImageUrl": "L1Q61Biv", "width": 52}, {"as": "luEbUXMZ", "caption": "pmVyx5Nl", "height": 15, "imageUrl": "6su3xLn6", "smallImageUrl": "WchKMJpz", "width": 40}, {"as": "QLXApbTK", "caption": "Nw17RsVO", "height": 84, "imageUrl": "bPw5BlGY", "smallImageUrl": "0HTfQO2M", "width": 3}], "inventoryConfig": {"customAttributes": {"LO7LEzgd": {}, "WS9tke0w": {}, "Jkpimjse": {}}, "serverCustomAttributes": {"evOJoJG7": {}, "gOm4sZq1": {}, "rjt8z4Im": {}}, "slotUsed": 35}, "itemIds": ["cqZh0pyu", "MYzwtA8n", "0QkgrxDo"], "itemQty": {"NGjqx126": 14, "GLDCcH7z": 99, "IjHEj8J0": 93}, "itemType": "SEASON", "listable": true, "localizations": {"ncd4HKOo": {"description": "6va05aG9", "localExt": {"xNTuTTo6": {}, "P66LmWt7": {}, "1yp7cPrP": {}}, "longDescription": "U6OjdE5t", "title": "VArSIfiW"}, "AKmKrlCH": {"description": "WMjFm7RX", "localExt": {"YprK5fjT": {}, "ZCGT3bDj": {}, "NB0d5J2g": {}}, "longDescription": "KkTx6ukw", "title": "SHqFTToj"}, "GvjHU66A": {"description": "FhYj2Sr9", "localExt": {"7LJv152j": {}, "oKOU0h1E": {}, "npCjXS1t": {}}, "longDescription": "R5Cpk436", "title": "jdNhy5FM"}}, "lootBoxConfig": {"rewardCount": 6, "rewards": [{"lootBoxItems": [{"count": 44, "duration": 11, "endDate": "1972-03-18T00:00:00Z", "itemId": "ax9AveVU", "itemSku": "Uh2ZwNKv", "itemType": "8NxwqS90"}, {"count": 41, "duration": 55, "endDate": "1987-12-05T00:00:00Z", "itemId": "RnHc664o", "itemSku": "qKqGJdrM", "itemType": "t6P4ZdaC"}, {"count": 37, "duration": 39, "endDate": "1982-06-06T00:00:00Z", "itemId": "LlNFXN8h", "itemSku": "vwI9YVnd", "itemType": "7ybZjhQR"}], "name": "xXj7rDoz", "odds": 0.33467745747094524, "type": "REWARD_GROUP", "weight": 3}, {"lootBoxItems": [{"count": 85, "duration": 57, "endDate": "1980-03-13T00:00:00Z", "itemId": "XIUGo6DS", "itemSku": "AKkRxQkf", "itemType": "uOS4WBMr"}, {"count": 36, "duration": 26, "endDate": "1986-04-26T00:00:00Z", "itemId": "le38U7SL", "itemSku": "iaI1fwJN", "itemType": "MovjN7GX"}, {"count": 74, "duration": 16, "endDate": "1989-03-16T00:00:00Z", "itemId": "e0wBdIch", "itemSku": "6Oh5jMcl", "itemType": "HrmdDXZr"}], "name": "L0d2Kcx1", "odds": 0.2015288451058338, "type": "PROBABILITY_GROUP", "weight": 26}, {"lootBoxItems": [{"count": 83, "duration": 96, "endDate": "1999-06-11T00:00:00Z", "itemId": "kmLp9tob", "itemSku": "c0o3vG4B", "itemType": "5kilWJIZ"}, {"count": 90, "duration": 28, "endDate": "1979-05-16T00:00:00Z", "itemId": "8y30itPE", "itemSku": "lsWgIbMg", "itemType": "4dX7fvtK"}, {"count": 42, "duration": 39, "endDate": "1977-02-25T00:00:00Z", "itemId": "ACGoQ3Zi", "itemSku": "AVMb34Cu", "itemType": "DkC5QU1W"}], "name": "gWwhgyYq", "odds": 0.5323070619261203, "type": "REWARD", "weight": 28}], "rollFunction": "CUSTOM"}, "maxCount": 53, "maxCountPerUser": 95, "name": "bqmiTcG6", "optionBoxConfig": {"boxItems": [{"count": 62, "duration": 25, "endDate": "1971-11-07T00:00:00Z", "itemId": "NR2cj0Dd", "itemSku": "2bi7dsVN", "itemType": "0UWgQjuu"}, {"count": 62, "duration": 69, "endDate": "1992-05-02T00:00:00Z", "itemId": "Fk1u3l4D", "itemSku": "6OJze1pO", "itemType": "giyQYDn7"}, {"count": 31, "duration": 39, "endDate": "1974-04-07T00:00:00Z", "itemId": "WU3xFfAP", "itemSku": "Z2KwbMGJ", "itemType": "03vEhzUJ"}]}, "purchasable": false, "recurring": {"cycle": "QUARTERLY", "fixedFreeDays": 92, "fixedTrialCycles": 69, "graceDays": 81}, "regionData": {"X5Im4D8O": [{"currencyCode": "Yxg6fqja", "currencyNamespace": "6SLeBIyi", "currencyType": "REAL", "discountAmount": 21, "discountExpireAt": "1977-10-30T00:00:00Z", "discountPercentage": 51, "discountPurchaseAt": "1986-08-22T00:00:00Z", "expireAt": "1979-05-06T00:00:00Z", "price": 44, "purchaseAt": "1974-08-04T00:00:00Z", "trialPrice": 78}, {"currencyCode": "chMuikGo", "currencyNamespace": "wUjVAroH", "currencyType": "REAL", "discountAmount": 88, "discountExpireAt": "1983-01-17T00:00:00Z", "discountPercentage": 4, "discountPurchaseAt": "1991-11-25T00:00:00Z", "expireAt": "1971-08-24T00:00:00Z", "price": 2, "purchaseAt": "1981-01-09T00:00:00Z", "trialPrice": 19}, {"currencyCode": "YHrpjBjs", "currencyNamespace": "dBw5qldY", "currencyType": "REAL", "discountAmount": 86, "discountExpireAt": "1984-04-07T00:00:00Z", "discountPercentage": 18, "discountPurchaseAt": "1975-12-10T00:00:00Z", "expireAt": "1975-04-12T00:00:00Z", "price": 20, "purchaseAt": "1978-03-21T00:00:00Z", "trialPrice": 50}], "EWddDeOy": [{"currencyCode": "O2z2Vmss", "currencyNamespace": "WVNl7d83", "currencyType": "VIRTUAL", "discountAmount": 72, "discountExpireAt": "1986-09-19T00:00:00Z", "discountPercentage": 29, "discountPurchaseAt": "1987-08-20T00:00:00Z", "expireAt": "1991-06-04T00:00:00Z", "price": 5, "purchaseAt": "1996-04-25T00:00:00Z", "trialPrice": 86}, {"currencyCode": "JhPMvGFA", "currencyNamespace": "91bPuO2R", "currencyType": "REAL", "discountAmount": 96, "discountExpireAt": "1980-07-23T00:00:00Z", "discountPercentage": 87, "discountPurchaseAt": "1984-08-17T00:00:00Z", "expireAt": "1980-08-31T00:00:00Z", "price": 35, "purchaseAt": "1992-08-24T00:00:00Z", "trialPrice": 10}, {"currencyCode": "6XSDoXju", "currencyNamespace": "6BBs4M4A", "currencyType": "VIRTUAL", "discountAmount": 30, "discountExpireAt": "1975-03-02T00:00:00Z", "discountPercentage": 47, "discountPurchaseAt": "1999-12-05T00:00:00Z", "expireAt": "1984-06-06T00:00:00Z", "price": 89, "purchaseAt": "1982-04-10T00:00:00Z", "trialPrice": 69}], "JeZN4r66": [{"currencyCode": "uFY5iSRB", "currencyNamespace": "iUMkqQF7", "currencyType": "VIRTUAL", "discountAmount": 28, "discountExpireAt": "1979-03-15T00:00:00Z", "discountPercentage": 9, "discountPurchaseAt": "1978-06-15T00:00:00Z", "expireAt": "1981-10-10T00:00:00Z", "price": 90, "purchaseAt": "1980-03-26T00:00:00Z", "trialPrice": 83}, {"currencyCode": "x8Rq7gLK", "currencyNamespace": "lFZDPgmF", "currencyType": "VIRTUAL", "discountAmount": 0, "discountExpireAt": "1994-02-02T00:00:00Z", "discountPercentage": 15, "discountPurchaseAt": "1984-04-30T00:00:00Z", "expireAt": "1989-03-04T00:00:00Z", "price": 20, "purchaseAt": "1972-07-12T00:00:00Z", "trialPrice": 53}, {"currencyCode": "OiqZLrwi", "currencyNamespace": "pWB1o738", "currencyType": "REAL", "discountAmount": 40, "discountExpireAt": "1987-02-26T00:00:00Z", "discountPercentage": 44, "discountPurchaseAt": "1987-03-25T00:00:00Z", "expireAt": "1990-02-08T00:00:00Z", "price": 10, "purchaseAt": "1985-10-21T00:00:00Z", "trialPrice": 77}]}, "saleConfig": {"currencyCode": "NElVDA7l", "price": 6}, "seasonType": "TIER", "sectionExclusive": false, "sellable": false, "sku": "rfJkgdpx", "stackable": true, "status": "INACTIVE", "tags": ["uh9JlflR", "wYDvpg8i", "h4puE57Y"], "targetCurrencyCode": "4mZuEEej", "targetNamespace": "f6r5rnGW", "thumbnailUrl": "0NGtrpJJ", "useCount": 26}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateItem \
    --namespace $AB_NAMESPACE \
    --storeId 'kJYJBtiF' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 117 'CreateItem' test.out

#- 118 GetItemByAppId
$CLI_EXE \
    --sn platform \
    --op GetItemByAppId \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --storeId 'qWUyvL9I' \
    --appId 'aNJJhqCZ' \
    > test.out 2>&1
eval_tap $? 118 'GetItemByAppId' test.out

#- 119 QueryItems
$CLI_EXE \
    --sn platform \
    --op QueryItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --appType 'DEMO' \
    --availableDate '0uj4qGtI' \
    --baseAppId 'KBAlqb2t' \
    --categoryPath 'wODEYStT' \
    --features 'DiXh9yzH' \
    --includeSubCategoryItem 'false' \
    --itemType 'CODE' \
    --limit '5' \
    --offset '6' \
    --region '297e5Ngr' \
    --sortBy '["displayOrder:asc", "displayOrder:desc", "createdAt"]' \
    --storeId '40ygMYFz' \
    --tags 'O2jwmJ3f' \
    --targetNamespace 'FXYVukhm' \
    > test.out 2>&1
eval_tap $? 119 'QueryItems' test.out

#- 120 ListBasicItemsByFeatures
$CLI_EXE \
    --sn platform \
    --op ListBasicItemsByFeatures \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --features '["BLgCGQCB", "PFlDl7zk", "p8YPxBUE"]' \
    > test.out 2>&1
eval_tap $? 120 'ListBasicItemsByFeatures' test.out

#- 121 GetItems
$CLI_EXE \
    --sn platform \
    --op GetItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --storeId 'PPsMgGig' \
    --itemIds '0EQdooB2' \
    > test.out 2>&1
eval_tap $? 121 'GetItems' test.out

#- 122 GetItemBySku
$CLI_EXE \
    --sn platform \
    --op GetItemBySku \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --storeId 'QiHZS5F2' \
    --sku 'HeY00Qlb' \
    > test.out 2>&1
eval_tap $? 122 'GetItemBySku' test.out

#- 123 GetLocaleItemBySku
$CLI_EXE \
    --sn platform \
    --op GetLocaleItemBySku \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --language 'z6Ia1bVO' \
    --populateBundle 'false' \
    --region 'TE8svdlK' \
    --storeId 'kdkxn9Gm' \
    --sku 'lJ7eEVoo' \
    > test.out 2>&1
eval_tap $? 123 'GetLocaleItemBySku' test.out

#- 124 GetEstimatedPrice
$CLI_EXE \
    --sn platform \
    --op GetEstimatedPrice \
    --namespace $AB_NAMESPACE \
    --platform 'VAwRbjsR' \
    --region 'tvR9jbWn' \
    --storeId 'Hwx4Yh9H' \
    --itemIds '78InENiV' \
    --userId 'qxoxztCB' \
    > test.out 2>&1
eval_tap $? 124 'GetEstimatedPrice' test.out

#- 125 GetItemIdBySku
$CLI_EXE \
    --sn platform \
    --op GetItemIdBySku \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --storeId 'Hq1DO5E2' \
    --sku 'HCHqSIi9' \
    > test.out 2>&1
eval_tap $? 125 'GetItemIdBySku' test.out

#- 126 GetBulkItemIdBySkus
$CLI_EXE \
    --sn platform \
    --op GetBulkItemIdBySkus \
    --namespace $AB_NAMESPACE \
    --sku '["rmHhJFUL", "OJTQAQv2", "CALuVIhA"]' \
    --storeId 'PJluhpqK' \
    > test.out 2>&1
eval_tap $? 126 'GetBulkItemIdBySkus' test.out

#- 127 BulkGetLocaleItems
$CLI_EXE \
    --sn platform \
    --op BulkGetLocaleItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --language '3rbFo0J5' \
    --region 'hBN2R39I' \
    --storeId 'cFQJtp5g' \
    --itemIds 'iG24GEvq' \
    > test.out 2>&1
eval_tap $? 127 'BulkGetLocaleItems' test.out

#- 128 GetAvailablePredicateTypes
$CLI_EXE \
    --sn platform \
    --op GetAvailablePredicateTypes \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 128 'GetAvailablePredicateTypes' test.out

#- 129 ValidateItemPurchaseCondition
# body param: body
echo '{"itemIds": ["H7eoJgTT", "yYZO0rtr", "TlB898XK"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ValidateItemPurchaseCondition \
    --namespace $AB_NAMESPACE \
    --platform 'mHF6c7rY' \
    --userId 'AQkZdcsI' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 129 'ValidateItemPurchaseCondition' test.out

#- 130 BulkUpdateRegionData
# body param: body
echo '{"changes": [{"itemIdentities": ["Zbh4jHuB", "7y7Y9V3T", "p95tuVV2"], "itemIdentityType": "ITEM_SKU", "regionData": {"3pQ7okmE": [{"currencyCode": "yYOgeVVV", "currencyNamespace": "IJzlNdKT", "currencyType": "VIRTUAL", "discountAmount": 38, "discountExpireAt": "1984-03-16T00:00:00Z", "discountPercentage": 64, "discountPurchaseAt": "1991-03-17T00:00:00Z", "discountedPrice": 91, "expireAt": "1984-09-06T00:00:00Z", "price": 82, "purchaseAt": "1993-05-05T00:00:00Z", "trialPrice": 21}, {"currencyCode": "8wMae2sq", "currencyNamespace": "BL7C9pYm", "currencyType": "REAL", "discountAmount": 25, "discountExpireAt": "1986-10-31T00:00:00Z", "discountPercentage": 79, "discountPurchaseAt": "1984-05-10T00:00:00Z", "discountedPrice": 10, "expireAt": "1995-01-06T00:00:00Z", "price": 32, "purchaseAt": "1990-08-17T00:00:00Z", "trialPrice": 26}, {"currencyCode": "r93w4MZL", "currencyNamespace": "5XNotN6f", "currencyType": "VIRTUAL", "discountAmount": 69, "discountExpireAt": "1978-02-25T00:00:00Z", "discountPercentage": 39, "discountPurchaseAt": "1981-08-10T00:00:00Z", "discountedPrice": 89, "expireAt": "1982-03-05T00:00:00Z", "price": 4, "purchaseAt": "1986-02-20T00:00:00Z", "trialPrice": 33}], "5mpZbrtW": [{"currencyCode": "9HctUcxV", "currencyNamespace": "Sn79njuZ", "currencyType": "VIRTUAL", "discountAmount": 84, "discountExpireAt": "1973-09-05T00:00:00Z", "discountPercentage": 15, "discountPurchaseAt": "1994-01-29T00:00:00Z", "discountedPrice": 42, "expireAt": "1987-09-01T00:00:00Z", "price": 42, "purchaseAt": "1995-07-24T00:00:00Z", "trialPrice": 28}, {"currencyCode": "XxFioUDk", "currencyNamespace": "NfSjFfBQ", "currencyType": "VIRTUAL", "discountAmount": 53, "discountExpireAt": "1994-06-22T00:00:00Z", "discountPercentage": 5, "discountPurchaseAt": "1997-04-02T00:00:00Z", "discountedPrice": 65, "expireAt": "1976-04-10T00:00:00Z", "price": 42, "purchaseAt": "1986-02-24T00:00:00Z", "trialPrice": 83}, {"currencyCode": "TberGE3Y", "currencyNamespace": "pQTPElUv", "currencyType": "VIRTUAL", "discountAmount": 90, "discountExpireAt": "1995-12-04T00:00:00Z", "discountPercentage": 21, "discountPurchaseAt": "1981-03-23T00:00:00Z", "discountedPrice": 20, "expireAt": "1986-02-14T00:00:00Z", "price": 20, "purchaseAt": "1998-02-07T00:00:00Z", "trialPrice": 98}], "H3qW3Kby": [{"currencyCode": "EOgohYde", "currencyNamespace": "HaSWN4xc", "currencyType": "REAL", "discountAmount": 46, "discountExpireAt": "1974-01-07T00:00:00Z", "discountPercentage": 67, "discountPurchaseAt": "1975-06-14T00:00:00Z", "discountedPrice": 44, "expireAt": "1986-06-02T00:00:00Z", "price": 34, "purchaseAt": "1991-01-04T00:00:00Z", "trialPrice": 76}, {"currencyCode": "PpT5l0CV", "currencyNamespace": "4WnchHMj", "currencyType": "VIRTUAL", "discountAmount": 71, "discountExpireAt": "1994-03-02T00:00:00Z", "discountPercentage": 77, "discountPurchaseAt": "1995-05-21T00:00:00Z", "discountedPrice": 6, "expireAt": "1984-04-17T00:00:00Z", "price": 11, "purchaseAt": "1999-07-24T00:00:00Z", "trialPrice": 28}, {"currencyCode": "T2qreSbO", "currencyNamespace": "FtzLMRMF", "currencyType": "VIRTUAL", "discountAmount": 14, "discountExpireAt": "1990-02-26T00:00:00Z", "discountPercentage": 71, "discountPurchaseAt": "1985-02-05T00:00:00Z", "discountedPrice": 34, "expireAt": "1996-01-21T00:00:00Z", "price": 91, "purchaseAt": "1972-05-07T00:00:00Z", "trialPrice": 19}]}}, {"itemIdentities": ["2pkEqx8t", "Il3AN8sq", "y14MTdYs"], "itemIdentityType": "ITEM_SKU", "regionData": {"YiX335KJ": [{"currencyCode": "mig017px", "currencyNamespace": "Ox90VT3B", "currencyType": "VIRTUAL", "discountAmount": 20, "discountExpireAt": "1974-05-22T00:00:00Z", "discountPercentage": 24, "discountPurchaseAt": "1975-02-05T00:00:00Z", "discountedPrice": 96, "expireAt": "1991-05-01T00:00:00Z", "price": 15, "purchaseAt": "1985-04-23T00:00:00Z", "trialPrice": 55}, {"currencyCode": "hy5HJ2MK", "currencyNamespace": "NUtJXB9N", "currencyType": "REAL", "discountAmount": 16, "discountExpireAt": "1987-02-06T00:00:00Z", "discountPercentage": 64, "discountPurchaseAt": "1998-06-26T00:00:00Z", "discountedPrice": 32, "expireAt": "1997-10-10T00:00:00Z", "price": 62, "purchaseAt": "1993-03-23T00:00:00Z", "trialPrice": 16}, {"currencyCode": "I0P7DkRm", "currencyNamespace": "bZouKUp8", "currencyType": "REAL", "discountAmount": 23, "discountExpireAt": "1974-09-27T00:00:00Z", "discountPercentage": 3, "discountPurchaseAt": "1994-03-18T00:00:00Z", "discountedPrice": 9, "expireAt": "1981-05-19T00:00:00Z", "price": 13, "purchaseAt": "1979-12-28T00:00:00Z", "trialPrice": 91}], "4bwxklTj": [{"currencyCode": "N7ebiEvD", "currencyNamespace": "Mk03wWzx", "currencyType": "REAL", "discountAmount": 46, "discountExpireAt": "1979-03-10T00:00:00Z", "discountPercentage": 8, "discountPurchaseAt": "1975-11-15T00:00:00Z", "discountedPrice": 27, "expireAt": "1978-05-15T00:00:00Z", "price": 68, "purchaseAt": "1978-09-30T00:00:00Z", "trialPrice": 41}, {"currencyCode": "C9WqgFmc", "currencyNamespace": "1y6nSEsD", "currencyType": "REAL", "discountAmount": 3, "discountExpireAt": "1974-09-23T00:00:00Z", "discountPercentage": 23, "discountPurchaseAt": "1977-03-25T00:00:00Z", "discountedPrice": 87, "expireAt": "1998-12-04T00:00:00Z", "price": 18, "purchaseAt": "1983-08-19T00:00:00Z", "trialPrice": 97}, {"currencyCode": "vFvjjxKx", "currencyNamespace": "sh1fJYiB", "currencyType": "VIRTUAL", "discountAmount": 64, "discountExpireAt": "1996-02-23T00:00:00Z", "discountPercentage": 51, "discountPurchaseAt": "1978-10-17T00:00:00Z", "discountedPrice": 76, "expireAt": "1980-02-05T00:00:00Z", "price": 10, "purchaseAt": "1992-01-11T00:00:00Z", "trialPrice": 54}], "EuvzEAVX": [{"currencyCode": "OcsdceL7", "currencyNamespace": "ydBjcXlt", "currencyType": "REAL", "discountAmount": 35, "discountExpireAt": "1983-12-01T00:00:00Z", "discountPercentage": 10, "discountPurchaseAt": "1995-05-05T00:00:00Z", "discountedPrice": 43, "expireAt": "1994-08-27T00:00:00Z", "price": 77, "purchaseAt": "1993-01-14T00:00:00Z", "trialPrice": 66}, {"currencyCode": "wQV6bOOS", "currencyNamespace": "oshCXBZ6", "currencyType": "REAL", "discountAmount": 67, "discountExpireAt": "1971-03-22T00:00:00Z", "discountPercentage": 22, "discountPurchaseAt": "1996-08-25T00:00:00Z", "discountedPrice": 13, "expireAt": "1971-03-12T00:00:00Z", "price": 39, "purchaseAt": "1996-04-09T00:00:00Z", "trialPrice": 92}, {"currencyCode": "itvlUwH7", "currencyNamespace": "4ZGvrSbV", "currencyType": "REAL", "discountAmount": 60, "discountExpireAt": "1991-05-25T00:00:00Z", "discountPercentage": 94, "discountPurchaseAt": "1982-12-03T00:00:00Z", "discountedPrice": 73, "expireAt": "1987-03-06T00:00:00Z", "price": 52, "purchaseAt": "1994-02-15T00:00:00Z", "trialPrice": 66}]}}, {"itemIdentities": ["oni5uzh9", "Of7MGWgV", "Y5OfogCO"], "itemIdentityType": "ITEM_ID", "regionData": {"endSHqHu": [{"currencyCode": "fkm2vlqg", "currencyNamespace": "SlrlZSuy", "currencyType": "VIRTUAL", "discountAmount": 43, "discountExpireAt": "1989-06-13T00:00:00Z", "discountPercentage": 27, "discountPurchaseAt": "1998-04-24T00:00:00Z", "discountedPrice": 55, "expireAt": "1971-05-13T00:00:00Z", "price": 39, "purchaseAt": "1975-04-01T00:00:00Z", "trialPrice": 34}, {"currencyCode": "vWzZ8ulo", "currencyNamespace": "M41h7oR9", "currencyType": "VIRTUAL", "discountAmount": 10, "discountExpireAt": "1987-08-20T00:00:00Z", "discountPercentage": 52, "discountPurchaseAt": "1994-01-23T00:00:00Z", "discountedPrice": 98, "expireAt": "1994-05-25T00:00:00Z", "price": 52, "purchaseAt": "1995-05-02T00:00:00Z", "trialPrice": 3}, {"currencyCode": "78SfPo5H", "currencyNamespace": "G3nrBpfx", "currencyType": "REAL", "discountAmount": 69, "discountExpireAt": "1991-11-04T00:00:00Z", "discountPercentage": 68, "discountPurchaseAt": "1983-07-30T00:00:00Z", "discountedPrice": 19, "expireAt": "1983-09-19T00:00:00Z", "price": 72, "purchaseAt": "1972-09-17T00:00:00Z", "trialPrice": 18}], "JtqpKiLm": [{"currencyCode": "8yJ2SkbY", "currencyNamespace": "WQcSU3P6", "currencyType": "REAL", "discountAmount": 32, "discountExpireAt": "1991-01-14T00:00:00Z", "discountPercentage": 7, "discountPurchaseAt": "1976-12-05T00:00:00Z", "discountedPrice": 36, "expireAt": "1995-02-13T00:00:00Z", "price": 41, "purchaseAt": "1986-11-03T00:00:00Z", "trialPrice": 61}, {"currencyCode": "OzerQOV9", "currencyNamespace": "IaHAWSeQ", "currencyType": "REAL", "discountAmount": 40, "discountExpireAt": "1994-03-09T00:00:00Z", "discountPercentage": 39, "discountPurchaseAt": "1998-07-11T00:00:00Z", "discountedPrice": 0, "expireAt": "1972-12-01T00:00:00Z", "price": 17, "purchaseAt": "1991-10-09T00:00:00Z", "trialPrice": 74}, {"currencyCode": "KWamVRdn", "currencyNamespace": "wQVp97UA", "currencyType": "VIRTUAL", "discountAmount": 49, "discountExpireAt": "1994-04-07T00:00:00Z", "discountPercentage": 68, "discountPurchaseAt": "1992-06-07T00:00:00Z", "discountedPrice": 15, "expireAt": "1978-01-18T00:00:00Z", "price": 14, "purchaseAt": "1989-03-26T00:00:00Z", "trialPrice": 23}], "1FzudcTB": [{"currencyCode": "J8TBBFhb", "currencyNamespace": "OhcepFga", "currencyType": "REAL", "discountAmount": 49, "discountExpireAt": "1994-10-14T00:00:00Z", "discountPercentage": 24, "discountPurchaseAt": "1984-01-26T00:00:00Z", "discountedPrice": 78, "expireAt": "1999-04-30T00:00:00Z", "price": 26, "purchaseAt": "1993-01-25T00:00:00Z", "trialPrice": 75}, {"currencyCode": "Fh0HJvTz", "currencyNamespace": "bIWYBOfB", "currencyType": "REAL", "discountAmount": 74, "discountExpireAt": "1984-07-29T00:00:00Z", "discountPercentage": 29, "discountPurchaseAt": "1973-01-10T00:00:00Z", "discountedPrice": 96, "expireAt": "1975-03-01T00:00:00Z", "price": 65, "purchaseAt": "1995-01-19T00:00:00Z", "trialPrice": 11}, {"currencyCode": "yTsGto8F", "currencyNamespace": "XIWM1V4D", "currencyType": "REAL", "discountAmount": 51, "discountExpireAt": "1996-11-28T00:00:00Z", "discountPercentage": 80, "discountPurchaseAt": "1981-05-31T00:00:00Z", "discountedPrice": 39, "expireAt": "1994-10-28T00:00:00Z", "price": 63, "purchaseAt": "1978-12-27T00:00:00Z", "trialPrice": 50}]}}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op BulkUpdateRegionData \
    --namespace $AB_NAMESPACE \
    --storeId 'WYiuCjJf' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 130 'BulkUpdateRegionData' test.out

#- 131 SearchItems
$CLI_EXE \
    --sn platform \
    --op SearchItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --itemType 'MEDIA' \
    --limit '8' \
    --offset '83' \
    --sortBy 'WPhUVJLl' \
    --storeId 'yQunIBuj' \
    --keyword 'nm5bnKnc' \
    --language 'h7T4lo9o' \
    > test.out 2>&1
eval_tap $? 131 'SearchItems' test.out

#- 132 QueryUncategorizedItems
$CLI_EXE \
    --sn platform \
    --op QueryUncategorizedItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --limit '65' \
    --offset '24' \
    --sortBy '["createdAt:asc", "createdAt", "name:asc"]' \
    --storeId 'S81kJEvF' \
    > test.out 2>&1
eval_tap $? 132 'QueryUncategorizedItems' test.out

#- 133 GetItem
$CLI_EXE \
    --sn platform \
    --op GetItem \
    --itemId 'rtE9CdNI' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --storeId 'xCJ0eBmc' \
    > test.out 2>&1
eval_tap $? 133 'GetItem' test.out

#- 134 UpdateItem
# body param: body
echo '{"appId": "Lr4oRzwf", "appType": "DEMO", "baseAppId": "XLJxXs7Y", "boothName": "REKhVAJd", "categoryPath": "mqcw28yT", "clazz": "R4aXz4Lv", "displayOrder": 77, "entitlementType": "CONSUMABLE", "ext": {"ZR8Q2U21": {}, "vWiwXULU": {}, "IvsSVm8b": {}}, "features": ["UvU3oh9S", "ANspmNL9", "lWBfi8mV"], "flexible": true, "images": [{"as": "rtBZJDTC", "caption": "3FrH6ZTM", "height": 11, "imageUrl": "ZwH0ENYI", "smallImageUrl": "vmyr6E1i", "width": 56}, {"as": "NZuLEGQS", "caption": "Sbe9TXss", "height": 20, "imageUrl": "MTKONeEm", "smallImageUrl": "XeGO4xR9", "width": 37}, {"as": "Hmj9Wz1N", "caption": "IQQ1iXn6", "height": 13, "imageUrl": "PegCHem8", "smallImageUrl": "8NGwQOC1", "width": 40}], "inventoryConfig": {"customAttributes": {"nA2XpCOB": {}, "edoiowkR": {}, "OobBwWRM": {}}, "serverCustomAttributes": {"UbPL92Ny": {}, "j2BRw9NN": {}, "wvtQP7A7": {}}, "slotUsed": 32}, "itemIds": ["Xb9FWcC4", "I7773ggC", "8wdxd6TR"], "itemQty": {"JbjANETt": 90, "lTIcIn0q": 1, "KU2TEjvd": 33}, "itemType": "LOOTBOX", "listable": false, "localizations": {"DTAmfd7l": {"description": "ae5bfHwF", "localExt": {"jelZ6bMh": {}, "tlL78oss": {}, "h5fSL2y9": {}}, "longDescription": "jE3brlMY", "title": "XI2BVqgO"}, "ykL4auWQ": {"description": "NpCjQCCN", "localExt": {"hVMyUNHx": {}, "zxowAJn8": {}, "kIPmXHH7": {}}, "longDescription": "4OTQewle", "title": "tuVeXFrx"}, "YCIkEOAA": {"description": "zrb6DIwU", "localExt": {"IY4fKreI": {}, "zyUvyINl": {}, "NToCzu0A": {}}, "longDescription": "SpFhiFf9", "title": "CnbqIIzF"}}, "lootBoxConfig": {"rewardCount": 32, "rewards": [{"lootBoxItems": [{"count": 91, "duration": 17, "endDate": "1990-11-12T00:00:00Z", "itemId": "9Yr86s6n", "itemSku": "J1HYxYK3", "itemType": "jx4XSZyJ"}, {"count": 48, "duration": 38, "endDate": "1985-11-15T00:00:00Z", "itemId": "a8UdQji3", "itemSku": "hdxuV8NL", "itemType": "Lisx72YR"}, {"count": 35, "duration": 17, "endDate": "1980-07-14T00:00:00Z", "itemId": "Psh0LWAs", "itemSku": "aAg8a62D", "itemType": "nPBIKVeW"}], "name": "ou0Jyeej", "odds": 0.5640173784988378, "type": "REWARD_GROUP", "weight": 81}, {"lootBoxItems": [{"count": 54, "duration": 42, "endDate": "1980-02-03T00:00:00Z", "itemId": "i9dvpbeC", "itemSku": "w4FNxfDq", "itemType": "MQvhK2Ys"}, {"count": 55, "duration": 12, "endDate": "1998-12-10T00:00:00Z", "itemId": "MqUzRkPE", "itemSku": "3NRkMwWU", "itemType": "ilV7ARkn"}, {"count": 7, "duration": 53, "endDate": "1972-07-25T00:00:00Z", "itemId": "qp6KTkzN", "itemSku": "eO6QWMc3", "itemType": "ICpSlJjS"}], "name": "LVytMqe4", "odds": 0.49651400364375786, "type": "PROBABILITY_GROUP", "weight": 30}, {"lootBoxItems": [{"count": 20, "duration": 18, "endDate": "1992-08-14T00:00:00Z", "itemId": "TGdIR1BU", "itemSku": "7hB5gRwg", "itemType": "08hYuwvC"}, {"count": 52, "duration": 90, "endDate": "1991-04-25T00:00:00Z", "itemId": "C5A14S0D", "itemSku": "qoyVoVzo", "itemType": "8ApA6AXl"}, {"count": 13, "duration": 76, "endDate": "1994-03-28T00:00:00Z", "itemId": "MeVlOjUq", "itemSku": "EZsOiEih", "itemType": "GUuRX7RQ"}], "name": "k8pzEkqZ", "odds": 0.3689086750213897, "type": "REWARD_GROUP", "weight": 96}], "rollFunction": "DEFAULT"}, "maxCount": 80, "maxCountPerUser": 78, "name": "y3r08yCX", "optionBoxConfig": {"boxItems": [{"count": 62, "duration": 36, "endDate": "1982-11-01T00:00:00Z", "itemId": "1DOqIHyf", "itemSku": "7R0OdvHG", "itemType": "FxbfJmVd"}, {"count": 97, "duration": 26, "endDate": "1974-02-02T00:00:00Z", "itemId": "H6qCwSlJ", "itemSku": "y9nyqkil", "itemType": "woXcaB2M"}, {"count": 6, "duration": 43, "endDate": "1990-11-08T00:00:00Z", "itemId": "FfjbwoVb", "itemSku": "oxbNXkEG", "itemType": "DLdT2w0K"}]}, "purchasable": true, "recurring": {"cycle": "WEEKLY", "fixedFreeDays": 3, "fixedTrialCycles": 69, "graceDays": 70}, "regionData": {"hpbCTTVy": [{"currencyCode": "geJSauxZ", "currencyNamespace": "eFhFEiBU", "currencyType": "VIRTUAL", "discountAmount": 1, "discountExpireAt": "1983-03-18T00:00:00Z", "discountPercentage": 64, "discountPurchaseAt": "1975-05-23T00:00:00Z", "expireAt": "1973-02-03T00:00:00Z", "price": 19, "purchaseAt": "1972-04-25T00:00:00Z", "trialPrice": 51}, {"currencyCode": "GO8vGpwk", "currencyNamespace": "eXqKOLOH", "currencyType": "VIRTUAL", "discountAmount": 70, "discountExpireAt": "1972-10-21T00:00:00Z", "discountPercentage": 88, "discountPurchaseAt": "1994-09-27T00:00:00Z", "expireAt": "1980-07-26T00:00:00Z", "price": 99, "purchaseAt": "1997-01-14T00:00:00Z", "trialPrice": 73}, {"currencyCode": "TsDkXKCu", "currencyNamespace": "uZZd46PJ", "currencyType": "VIRTUAL", "discountAmount": 72, "discountExpireAt": "1987-01-30T00:00:00Z", "discountPercentage": 29, "discountPurchaseAt": "1995-02-17T00:00:00Z", "expireAt": "1991-12-10T00:00:00Z", "price": 83, "purchaseAt": "1986-03-17T00:00:00Z", "trialPrice": 25}], "RvGaN8CN": [{"currencyCode": "O6TXGvDW", "currencyNamespace": "JzZzKCmS", "currencyType": "REAL", "discountAmount": 16, "discountExpireAt": "1984-11-06T00:00:00Z", "discountPercentage": 64, "discountPurchaseAt": "1984-02-01T00:00:00Z", "expireAt": "1980-12-05T00:00:00Z", "price": 32, "purchaseAt": "1989-10-16T00:00:00Z", "trialPrice": 82}, {"currencyCode": "Dp5MHamh", "currencyNamespace": "b4LZnci3", "currencyType": "VIRTUAL", "discountAmount": 90, "discountExpireAt": "1981-01-26T00:00:00Z", "discountPercentage": 1, "discountPurchaseAt": "1976-03-18T00:00:00Z", "expireAt": "1973-10-13T00:00:00Z", "price": 12, "purchaseAt": "1980-01-17T00:00:00Z", "trialPrice": 24}, {"currencyCode": "s6r5ZX3b", "currencyNamespace": "g7g5hh1M", "currencyType": "REAL", "discountAmount": 83, "discountExpireAt": "1996-10-30T00:00:00Z", "discountPercentage": 67, "discountPurchaseAt": "1972-02-14T00:00:00Z", "expireAt": "1988-06-07T00:00:00Z", "price": 83, "purchaseAt": "1972-02-16T00:00:00Z", "trialPrice": 37}], "tyLBu42K": [{"currencyCode": "5mAoAhlR", "currencyNamespace": "fQ1SjGoO", "currencyType": "REAL", "discountAmount": 98, "discountExpireAt": "1979-04-02T00:00:00Z", "discountPercentage": 64, "discountPurchaseAt": "1998-08-25T00:00:00Z", "expireAt": "1995-08-24T00:00:00Z", "price": 50, "purchaseAt": "1998-06-04T00:00:00Z", "trialPrice": 40}, {"currencyCode": "W4Pyqdln", "currencyNamespace": "oxxF7kKL", "currencyType": "REAL", "discountAmount": 77, "discountExpireAt": "1974-06-12T00:00:00Z", "discountPercentage": 42, "discountPurchaseAt": "1993-07-14T00:00:00Z", "expireAt": "1986-06-25T00:00:00Z", "price": 12, "purchaseAt": "1989-06-02T00:00:00Z", "trialPrice": 21}, {"currencyCode": "vmPrlN7h", "currencyNamespace": "oHiueSgb", "currencyType": "VIRTUAL", "discountAmount": 56, "discountExpireAt": "1972-03-09T00:00:00Z", "discountPercentage": 80, "discountPurchaseAt": "1993-01-01T00:00:00Z", "expireAt": "1990-03-19T00:00:00Z", "price": 34, "purchaseAt": "1972-10-01T00:00:00Z", "trialPrice": 20}]}, "saleConfig": {"currencyCode": "1t73NOnG", "price": 100}, "seasonType": "TIER", "sectionExclusive": false, "sellable": true, "sku": "46sK9J58", "stackable": true, "status": "ACTIVE", "tags": ["Lg00xyrw", "ivudmpsI", "hha6p8YO"], "targetCurrencyCode": "z9Uqoze6", "targetNamespace": "Lb6Frbvt", "thumbnailUrl": "cqOnCDAY", "useCount": 75}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateItem \
    --itemId 'CNZTQimr' \
    --namespace $AB_NAMESPACE \
    --storeId 'pAF4E3MD' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 134 'UpdateItem' test.out

#- 135 DeleteItem
$CLI_EXE \
    --sn platform \
    --op DeleteItem \
    --itemId 'skPRGaQe' \
    --namespace $AB_NAMESPACE \
    --featuresToCheck '["IAP", "ENTITLEMENT", "IAP"]' \
    --force 'false' \
    --storeId '8rQx9LAw' \
    > test.out 2>&1
eval_tap $? 135 'DeleteItem' test.out

#- 136 AcquireItem
# body param: body
echo '{"count": 22, "orderNo": "nwWp9s09"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op AcquireItem \
    --itemId 'VW5RFwPA' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 136 'AcquireItem' test.out

#- 137 GetApp
$CLI_EXE \
    --sn platform \
    --op GetApp \
    --itemId '5PBOoZvf' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --storeId '7xqnldNU' \
    > test.out 2>&1
eval_tap $? 137 'GetApp' test.out

#- 138 UpdateApp
# body param: body
echo '{"carousel": [{"alt": "7s1GWH23", "previewUrl": "T9B1wR5z", "thumbnailUrl": "dpEaYvUw", "type": "video", "url": "1KG2pnKM", "videoSource": "vimeo"}, {"alt": "cm9aZAfk", "previewUrl": "rDBDT1lM", "thumbnailUrl": "Ohw8GMXA", "type": "video", "url": "jnlLrxt4", "videoSource": "generic"}, {"alt": "xaJXC5z3", "previewUrl": "G6Y2rLc9", "thumbnailUrl": "YDbfPWaz", "type": "image", "url": "nvEpuNON", "videoSource": "generic"}], "developer": "tlA0QP1r", "forumUrl": "QfQhgAqY", "genres": ["Casual", "RPG", "Simulation"], "localizations": {"mBpdLzUF": {"announcement": "2ReTGb1k", "slogan": "ELkao7dA"}, "xqqA5OMv": {"announcement": "kIvzuj2N", "slogan": "8oRx2Kb5"}, "cFIbHO0E": {"announcement": "WhSbI321", "slogan": "KbHoHooV"}}, "platformRequirements": {"aBG2iN4z": [{"additionals": "kU4YCuqG", "directXVersion": "3mkTCRyd", "diskSpace": "J4ZfZNnE", "graphics": "jzYsO3db", "label": "c6i22tsA", "osVersion": "l9yS15yP", "processor": "ifmYHbkj", "ram": "wH2LPnjf", "soundCard": "caWFhFFC"}, {"additionals": "1Iw3YeS7", "directXVersion": "Us5EKsIH", "diskSpace": "VoEDk9SY", "graphics": "p11Fxo0Z", "label": "PmaLRlrM", "osVersion": "S0is93u1", "processor": "2DKAUKcH", "ram": "HfEIWspR", "soundCard": "QYCeft3J"}, {"additionals": "fgxxHWI6", "directXVersion": "OOoIsgYp", "diskSpace": "1smpn6bY", "graphics": "7ebCIXpJ", "label": "HhlBeIsq", "osVersion": "Tw66MziY", "processor": "0VFLSPLt", "ram": "eychkdpL", "soundCard": "QqXgbpph"}], "yfsFaGtd": [{"additionals": "tg8uA004", "directXVersion": "CgJ0DaO3", "diskSpace": "kchLPrWG", "graphics": "cPOuTgQa", "label": "loQ5VQrv", "osVersion": "mALLEeVS", "processor": "O3hLm1UF", "ram": "vzpEwvwD", "soundCard": "Lxk8fheq"}, {"additionals": "uhiDDYI7", "directXVersion": "7pF2sw1T", "diskSpace": "ZnKgUeeU", "graphics": "l0MM7QIA", "label": "ys7JerXA", "osVersion": "Ng1xMibo", "processor": "QdAUmpAN", "ram": "QhEW59Rd", "soundCard": "Awqsko9v"}, {"additionals": "PWMsflgK", "directXVersion": "F6aiWT66", "diskSpace": "NqkfutUR", "graphics": "eojYbD9N", "label": "SEkiJRI0", "osVersion": "Z2M92J2w", "processor": "1ethweQk", "ram": "gbRJVH2v", "soundCard": "gqy8Rs4t"}], "7lfilCaO": [{"additionals": "6gweNLkO", "directXVersion": "Fm7tFoLF", "diskSpace": "F4XhQmWt", "graphics": "PSDjuVKk", "label": "gWWaweKa", "osVersion": "LDbBdvT4", "processor": "GHrNXzUQ", "ram": "FzrmUxxg", "soundCard": "AilVO3wX"}, {"additionals": "UvSQcB1x", "directXVersion": "gtyGzfr5", "diskSpace": "D9ZWGemQ", "graphics": "TxrK52ve", "label": "r7EVU1RX", "osVersion": "sdO57Loy", "processor": "xE1KePmM", "ram": "zeYCfjeu", "soundCard": "3G4ghnmY"}, {"additionals": "pLiZdgTs", "directXVersion": "DDIDXvja", "diskSpace": "D5XxMT43", "graphics": "GgWuGBRY", "label": "GreDumYK", "osVersion": "ei6mI37K", "processor": "kETrCIl9", "ram": "TeQ0WgM3", "soundCard": "c3SKoavV"}]}, "platforms": ["Linux", "Linux", "Android"], "players": ["Multi", "MMO", "CrossPlatformMulti"], "primaryGenre": "Action", "publisher": "00gFOBZN", "releaseDate": "1977-05-11T00:00:00Z", "websiteUrl": "HWjdGX3z"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateApp \
    --itemId 'Eyv5DZBO' \
    --namespace $AB_NAMESPACE \
    --storeId 'XSNhqo81' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 138 'UpdateApp' test.out

#- 139 DisableItem
# body param: body
echo '{"featuresToCheck": ["DLC", "IAP"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op DisableItem \
    --itemId 'kIfSjibf' \
    --namespace $AB_NAMESPACE \
    --storeId 'XJ3e77FL' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 139 'DisableItem' test.out

#- 140 GetItemDynamicData
$CLI_EXE \
    --sn platform \
    --op GetItemDynamicData \
    --itemId 'FlmeDxry' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 140 'GetItemDynamicData' test.out

#- 141 EnableItem
$CLI_EXE \
    --sn platform \
    --op EnableItem \
    --itemId '1sdiBNOy' \
    --namespace $AB_NAMESPACE \
    --storeId 'kVVlbAO7' \
    > test.out 2>&1
eval_tap $? 141 'EnableItem' test.out

#- 142 FeatureItem
$CLI_EXE \
    --sn platform \
    --op FeatureItem \
    --feature 'NS9pGBYW' \
    --itemId 'G0ScuOHu' \
    --namespace $AB_NAMESPACE \
    --storeId '8hdiIJVC' \
    > test.out 2>&1
eval_tap $? 142 'FeatureItem' test.out

#- 143 DefeatureItem
$CLI_EXE \
    --sn platform \
    --op DefeatureItem \
    --feature 'ciWhYPSh' \
    --itemId 'M7Cnonzb' \
    --namespace $AB_NAMESPACE \
    --storeId '8ff96dMe' \
    > test.out 2>&1
eval_tap $? 143 'DefeatureItem' test.out

#- 144 GetLocaleItem
$CLI_EXE \
    --sn platform \
    --op GetLocaleItem \
    --itemId 'HHmiGTn8' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --language '9Oe9NLdn' \
    --populateBundle 'true' \
    --region 'Ts4Zqc4F' \
    --storeId 'uyf9N05c' \
    > test.out 2>&1
eval_tap $? 144 'GetLocaleItem' test.out

#- 145 UpdateItemPurchaseCondition
# body param: body
echo '{"purchaseCondition": {"conditionGroups": [{"operator": "and", "predicates": [{"anyOf": 98, "code": "8eRq4TQI", "comparison": "is", "name": "SrvpzdfU", "predicateType": "EntitlementPredicate", "value": "QX76PTZE", "values": ["hWbq7c1S", "kYhDvDhz", "me8JHU4B"]}, {"anyOf": 50, "code": "f3tLPPz0", "comparison": "isGreaterThan", "name": "HXXqs4gw", "predicateType": "EntitlementPredicate", "value": "RvF7Fjnc", "values": ["24fbw1II", "Ba1nfchf", "ktQXp4AY"]}, {"anyOf": 100, "code": "NwSQlaJA", "comparison": "isLessThan", "name": "u4SmcraL", "predicateType": "SeasonPassPredicate", "value": "UGf4Y7eq", "values": ["Mlh8QJVb", "qexvyni5", "SrXFr2RU"]}]}, {"operator": "and", "predicates": [{"anyOf": 82, "code": "HkbFauLK", "comparison": "isLessThan", "name": "Mzveu94N", "predicateType": "EntitlementPredicate", "value": "xdM9Db1x", "values": ["YXzcK7Lg", "WKEeSwq0", "3jcgd94v"]}, {"anyOf": 100, "code": "B8cLXGve", "comparison": "isGreaterThanOrEqual", "name": "yMyMJyVh", "predicateType": "StatisticCodePredicate", "value": "CNd7Zpxi", "values": ["5gzwbp5X", "z0bwd43C", "GGwepQGN"]}, {"anyOf": 95, "code": "agAGRreK", "comparison": "is", "name": "rxQK2J3w", "predicateType": "SeasonTierPredicate", "value": "g5GHnl8H", "values": ["lpAteeR6", "U5DQ4QZA", "EfIyCVJh"]}]}, {"operator": "or", "predicates": [{"anyOf": 11, "code": "VgtMqiue", "comparison": "isLessThan", "name": "88ZJKfdx", "predicateType": "EntitlementPredicate", "value": "0sltV3EM", "values": ["GL7IjVFP", "GqRZrz0t", "5UJ4X7Pr"]}, {"anyOf": 8, "code": "189KZJzb", "comparison": "isNot", "name": "GqYiyQLW", "predicateType": "EntitlementPredicate", "value": "94Q1SGfQ", "values": ["tyoUZQcV", "yEh9ZK2j", "lhJMM57X"]}, {"anyOf": 19, "code": "0k40uoSC", "comparison": "is", "name": "w2Av9Pw2", "predicateType": "SeasonTierPredicate", "value": "x9XHkaz5", "values": ["9uE4IlaH", "5Uf3zT00", "7bGXZAI1"]}]}]}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateItemPurchaseCondition \
    --itemId '0JtsmmG8' \
    --namespace $AB_NAMESPACE \
    --storeId 'abgh5qk3' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 145 'UpdateItemPurchaseCondition' test.out

#- 146 QueryItemReferences
$CLI_EXE \
    --sn platform \
    --op QueryItemReferences \
    --itemId 'i1UyVTIO' \
    --namespace $AB_NAMESPACE \
    --featuresToCheck '["IAP", "REWARD", "CATALOG"]' \
    --storeId 'kBuGEsLE' \
    > test.out 2>&1
eval_tap $? 146 'QueryItemReferences' test.out

#- 147 ReturnItem
# body param: body
echo '{"orderNo": "9LVtPGrj"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ReturnItem \
    --itemId 'wVdfy7wO' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 147 'ReturnItem' test.out

#- 148 QueryKeyGroups
$CLI_EXE \
    --sn platform \
    --op QueryKeyGroups \
    --namespace $AB_NAMESPACE \
    --limit '79' \
    --name 'fPOWCVFe' \
    --offset '15' \
    --tag 'aCHsjxNk' \
    > test.out 2>&1
eval_tap $? 148 'QueryKeyGroups' test.out

#- 149 CreateKeyGroup
# body param: body
echo '{"description": "PoYOm3te", "name": "N0pR41HQ", "status": "ACTIVE", "tags": ["gSW0uAmJ", "pBHw8pQe", "UaiDJOYx"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateKeyGroup \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 149 'CreateKeyGroup' test.out

#- 150 GetKeyGroupByBoothName
eval_tap 0 150 'GetKeyGroupByBoothName # SKIP deprecated' test.out

#- 151 GetKeyGroup
$CLI_EXE \
    --sn platform \
    --op GetKeyGroup \
    --keyGroupId '6vRr8aT8' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 151 'GetKeyGroup' test.out

#- 152 UpdateKeyGroup
# body param: body
echo '{"description": "SmULUERb", "name": "4uEwbQM3", "status": "INACTIVE", "tags": ["UaW4ewJi", "PIWEsc7s", "XKq2Cila"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateKeyGroup \
    --keyGroupId 'lijxfkri' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 152 'UpdateKeyGroup' test.out

#- 153 GetKeyGroupDynamic
$CLI_EXE \
    --sn platform \
    --op GetKeyGroupDynamic \
    --keyGroupId 'ApAIeTOU' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 153 'GetKeyGroupDynamic' test.out

#- 154 ListKeys
$CLI_EXE \
    --sn platform \
    --op ListKeys \
    --keyGroupId '9inDqq7N' \
    --namespace $AB_NAMESPACE \
    --limit '13' \
    --offset '67' \
    --status 'ACTIVE' \
    > test.out 2>&1
eval_tap $? 154 'ListKeys' test.out

#- 155 UploadKeys
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UploadKeys \
    --keyGroupId 'IUxH2tmr' \
    --namespace $AB_NAMESPACE \
    --upload file $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 155 'UploadKeys' test.out

#- 156 QueryOrders
$CLI_EXE \
    --sn platform \
    --op QueryOrders \
    --namespace $AB_NAMESPACE \
    --endTime 'D18uhjSz' \
    --limit '69' \
    --offset '17' \
    --orderNos '["8Po8XAs6", "vsY7jvT9", "5VHGD9QT"]' \
    --sortBy 'YGHDHcmK' \
    --startTime 'vtwQYLKS' \
    --status 'REFUND_FAILED' \
    --withTotal 'true' \
    > test.out 2>&1
eval_tap $? 156 'QueryOrders' test.out

#- 157 GetOrderStatistics
$CLI_EXE \
    --sn platform \
    --op GetOrderStatistics \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 157 'GetOrderStatistics' test.out

#- 158 GetOrder
$CLI_EXE \
    --sn platform \
    --op GetOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'b8a1XIKe' \
    > test.out 2>&1
eval_tap $? 158 'GetOrder' test.out

#- 159 RefundOrder
# body param: body
echo '{"description": "eSfdG0oA"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RefundOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'q0Qe7UHF' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 159 'RefundOrder' test.out

#- 160 GetPaymentCallbackConfig
eval_tap 0 160 'GetPaymentCallbackConfig # SKIP deprecated' test.out

#- 161 UpdatePaymentCallbackConfig
eval_tap 0 161 'UpdatePaymentCallbackConfig # SKIP deprecated' test.out

#- 162 GetPaymentMerchantConfig
$CLI_EXE \
    --sn platform \
    --op GetPaymentMerchantConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 162 'GetPaymentMerchantConfig' test.out

#- 163 UpdatePaymentDomainWhitelistConfig
# body param: body
echo '{"domains": ["C3aaa9gf", "5DSW1Xjc", "eBnucCaZ"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePaymentDomainWhitelistConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 163 'UpdatePaymentDomainWhitelistConfig' test.out

#- 164 QueryPaymentNotifications
$CLI_EXE \
    --sn platform \
    --op QueryPaymentNotifications \
    --namespace $AB_NAMESPACE \
    --endDate 'QQdE9lgC' \
    --externalId 'gabJetj7' \
    --limit '52' \
    --notificationSource 'NEONPAY' \
    --notificationType 'nQ8F5FHK' \
    --offset '93' \
    --paymentOrderNo 'DVshq6RT' \
    --startDate 'Lss3Lh0W' \
    --status 'ERROR' \
    > test.out 2>&1
eval_tap $? 164 'QueryPaymentNotifications' test.out

#- 165 QueryPaymentOrders
$CLI_EXE \
    --sn platform \
    --op QueryPaymentOrders \
    --namespace $AB_NAMESPACE \
    --channel 'EXTERNAL' \
    --extTxId 'zNHdzw0f' \
    --limit '41' \
    --offset '56' \
    --status 'REFUNDED' \
    > test.out 2>&1
eval_tap $? 165 'QueryPaymentOrders' test.out

#- 166 CreatePaymentOrderByDedicated
# body param: body
echo '{"currencyCode": "D3kncpnK", "currencyNamespace": "eKQVaicb", "customParameters": {"YgjgSOVq": {}, "6Nlxq1HB": {}, "r4DwEqzl": {}}, "description": "STeakwLj", "extOrderNo": "BxJBKjdS", "extUserId": "wYZwyJl6", "itemType": "EXTENSION", "language": "ui-tWVd", "metadata": {"X7yjTpuI": "fxMq3KN9", "oFCzO1Cj": "YQeiOOeX", "ROcs8h3I": "BvShU9t1"}, "notifyUrl": "bpcUqY7C", "omitNotification": true, "platform": "XG1t7NNZ", "price": 26, "recurringPaymentOrderNo": "8GQdXVom", "region": "TP9UGLQX", "returnUrl": "GSGZWdSu", "sandbox": true, "sku": "youwhOSA", "subscriptionId": "DsYSPxUm", "targetNamespace": "DWEg4zCT", "targetUserId": "iIE2fRG3", "title": "yZQxerPc"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreatePaymentOrderByDedicated \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 166 'CreatePaymentOrderByDedicated' test.out

#- 167 ListExtOrderNoByExtTxId
$CLI_EXE \
    --sn platform \
    --op ListExtOrderNoByExtTxId \
    --namespace $AB_NAMESPACE \
    --extTxId 'Ch7J51PQ' \
    > test.out 2>&1
eval_tap $? 167 'ListExtOrderNoByExtTxId' test.out

#- 168 GetPaymentOrder
$CLI_EXE \
    --sn platform \
    --op GetPaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'opNoN8Ew' \
    > test.out 2>&1
eval_tap $? 168 'GetPaymentOrder' test.out

#- 169 ChargePaymentOrder
# body param: body
echo '{"extTxId": "EssqTdoH", "paymentMethod": "M2SzD4bS", "paymentProvider": "WALLET"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ChargePaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'eCRH9ceI' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 169 'ChargePaymentOrder' test.out

#- 170 RefundPaymentOrderByDedicated
# body param: body
echo '{"description": "0NXuHiui"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RefundPaymentOrderByDedicated \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'rRUN3Pff' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 170 'RefundPaymentOrderByDedicated' test.out

#- 171 SimulatePaymentOrderNotification
# body param: body
echo '{"amount": 74, "currencyCode": "GTLhogfc", "notifyType": "CHARGE", "paymentProvider": "WXPAY", "salesTax": 15, "vat": 16}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SimulatePaymentOrderNotification \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'vyYPlGGq' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 171 'SimulatePaymentOrderNotification' test.out

#- 172 GetPaymentOrderChargeStatus
$CLI_EXE \
    --sn platform \
    --op GetPaymentOrderChargeStatus \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'E2z1aW9w' \
    > test.out 2>&1
eval_tap $? 172 'GetPaymentOrderChargeStatus' test.out

#- 173 GetPsnEntitlementOwnership
# body param: body
echo '{"accessToken": "lyzqQtdz", "serviceLabel": 27}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op GetPsnEntitlementOwnership \
    --entitlementLabel 'Uqbw0JVZ' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 173 'GetPsnEntitlementOwnership' test.out

#- 174 GetXboxEntitlementOwnership
# body param: body
echo '{"delegationToken": "K6KHnI9w", "sandboxId": "duBPYR4y"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op GetXboxEntitlementOwnership \
    --namespace $AB_NAMESPACE \
    --productSku 'gNBF6S9N' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 174 'GetXboxEntitlementOwnership' test.out

#- 175 GetPlatformEntitlementConfig
$CLI_EXE \
    --sn platform \
    --op GetPlatformEntitlementConfig \
    --namespace $AB_NAMESPACE \
    --platform 'Xbox' \
    > test.out 2>&1
eval_tap $? 175 'GetPlatformEntitlementConfig' test.out

#- 176 UpdatePlatformEntitlementConfig
# body param: body
echo '{"allowedPlatformOrigins": ["Other", "Steam", "Playstation"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePlatformEntitlementConfig \
    --namespace $AB_NAMESPACE \
    --platform 'GooglePlay' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 176 'UpdatePlatformEntitlementConfig' test.out

#- 177 GetPlatformWalletConfig
$CLI_EXE \
    --sn platform \
    --op GetPlatformWalletConfig \
    --namespace $AB_NAMESPACE \
    --platform 'GooglePlay' \
    > test.out 2>&1
eval_tap $? 177 'GetPlatformWalletConfig' test.out

#- 178 UpdatePlatformWalletConfig
# body param: body
echo '{"allowedBalanceOrigins": ["System", "Other", "Steam"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePlatformWalletConfig \
    --namespace $AB_NAMESPACE \
    --platform 'Epic' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 178 'UpdatePlatformWalletConfig' test.out

#- 179 ResetPlatformWalletConfig
$CLI_EXE \
    --sn platform \
    --op ResetPlatformWalletConfig \
    --namespace $AB_NAMESPACE \
    --platform 'Steam' \
    > test.out 2>&1
eval_tap $? 179 'ResetPlatformWalletConfig' test.out

#- 180 GetRevocationConfig
$CLI_EXE \
    --sn platform \
    --op GetRevocationConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 180 'GetRevocationConfig' test.out

#- 181 UpdateRevocationConfig
# body param: body
echo '{"entitlement": {"consumable": {"enabled": true, "strategy": "REVOKE_OR_REPORT"}, "durable": {"enabled": true, "strategy": "CUSTOM"}}, "wallet": {"enabled": true, "strategy": "ALWAYS_REVOKE"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateRevocationConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 181 'UpdateRevocationConfig' test.out

#- 182 DeleteRevocationConfig
$CLI_EXE \
    --sn platform \
    --op DeleteRevocationConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 182 'DeleteRevocationConfig' test.out

#- 183 QueryRevocationHistories
$CLI_EXE \
    --sn platform \
    --op QueryRevocationHistories \
    --namespace $AB_NAMESPACE \
    --endTime 'eyGY9XfP' \
    --limit '90' \
    --offset '10' \
    --source 'ORDER' \
    --startTime 'vjheGYRP' \
    --status 'FAIL' \
    --transactionId 'HhyCLD8a' \
    --userId '3qBjW1SU' \
    > test.out 2>&1
eval_tap $? 183 'QueryRevocationHistories' test.out

#- 184 GetRevocationPluginConfig
$CLI_EXE \
    --sn platform \
    --op GetRevocationPluginConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 184 'GetRevocationPluginConfig' test.out

#- 185 UpdateRevocationPluginConfig
# body param: body
echo '{"appConfig": {"appName": "g6228Bgf"}, "customConfig": {"connectionType": "INSECURE", "grpcServerAddress": "E6yj4Zbk"}, "extendType": "CUSTOM"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateRevocationPluginConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 185 'UpdateRevocationPluginConfig' test.out

#- 186 DeleteRevocationPluginConfig
$CLI_EXE \
    --sn platform \
    --op DeleteRevocationPluginConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 186 'DeleteRevocationPluginConfig' test.out

#- 187 UploadRevocationPluginConfigCert
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UploadRevocationPluginConfigCert \
    --namespace $AB_NAMESPACE \
    --upload file $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 187 'UploadRevocationPluginConfigCert' test.out

#- 188 CreateReward
# body param: body
echo '{"description": "keOFDuCY", "eventTopic": "zLKuRyhE", "maxAwarded": 8, "maxAwardedPerUser": 22, "namespaceExpression": "ZwGygUT3", "rewardCode": "Yjjlv5yz", "rewardConditions": [{"condition": "yZ4E8Gw5", "conditionName": "VYdxY8ML", "eventName": "08dseEFO", "rewardItems": [{"duration": 45, "endDate": "1987-02-20T00:00:00Z", "identityType": "ITEM_SKU", "itemId": "y2SndwuZ", "quantity": 61, "sku": "pU7noKps"}, {"duration": 68, "endDate": "1989-08-02T00:00:00Z", "identityType": "ITEM_SKU", "itemId": "8vqqftHk", "quantity": 53, "sku": "bSTzItSq"}, {"duration": 8, "endDate": "1999-06-16T00:00:00Z", "identityType": "ITEM_ID", "itemId": "hZB9bwr2", "quantity": 83, "sku": "fiR7kdDo"}]}, {"condition": "8su8bd5u", "conditionName": "Zt1u6Cii", "eventName": "1kFeIY5b", "rewardItems": [{"duration": 64, "endDate": "1974-08-01T00:00:00Z", "identityType": "ITEM_ID", "itemId": "15SNleKG", "quantity": 38, "sku": "ggKJw5Xf"}, {"duration": 20, "endDate": "1979-12-16T00:00:00Z", "identityType": "ITEM_ID", "itemId": "1Rb9EKUe", "quantity": 68, "sku": "Itk4uble"}, {"duration": 90, "endDate": "1990-12-12T00:00:00Z", "identityType": "ITEM_SKU", "itemId": "rEceEJjO", "quantity": 5, "sku": "62dFvluG"}]}, {"condition": "hOQlldK9", "conditionName": "1ejTmCk0", "eventName": "korXOexw", "rewardItems": [{"duration": 5, "endDate": "1980-11-23T00:00:00Z", "identityType": "ITEM_ID", "itemId": "L7yaOBjp", "quantity": 77, "sku": "wrpRDlbk"}, {"duration": 31, "endDate": "1985-04-04T00:00:00Z", "identityType": "ITEM_SKU", "itemId": "ChTDFXAv", "quantity": 4, "sku": "iKSsqz3X"}, {"duration": 3, "endDate": "1997-03-11T00:00:00Z", "identityType": "ITEM_SKU", "itemId": "X4NaCT8y", "quantity": 8, "sku": "9HZi2QjA"}]}], "userIdExpression": "3VmXKqYJ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateReward \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 188 'CreateReward' test.out

#- 189 QueryRewards
$CLI_EXE \
    --sn platform \
    --op QueryRewards \
    --namespace $AB_NAMESPACE \
    --eventTopic '1TQz9HJp' \
    --limit '32' \
    --offset '77' \
    --sortBy '["rewardCode:asc", "namespace:asc", "rewardCode:desc"]' \
    > test.out 2>&1
eval_tap $? 189 'QueryRewards' test.out

#- 190 ExportRewards
$CLI_EXE \
    --sn platform \
    --op ExportRewards \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 190 'ExportRewards' test.out

#- 191 ImportRewards
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op ImportRewards \
    --namespace $AB_NAMESPACE \
    --replaceExisting 'true' \
    --upload file $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 191 'ImportRewards' test.out

#- 192 GetReward
$CLI_EXE \
    --sn platform \
    --op GetReward \
    --namespace $AB_NAMESPACE \
    --rewardId 'VqgM8yLG' \
    > test.out 2>&1
eval_tap $? 192 'GetReward' test.out

#- 193 UpdateReward
# body param: body
echo '{"description": "XuF8OH5h", "eventTopic": "s40yPsHN", "maxAwarded": 47, "maxAwardedPerUser": 68, "namespaceExpression": "acmR47qS", "rewardCode": "oVfG9FQy", "rewardConditions": [{"condition": "LpqwVz8c", "conditionName": "s2V1q5dL", "eventName": "A3EFdG0R", "rewardItems": [{"duration": 17, "endDate": "1974-12-28T00:00:00Z", "identityType": "ITEM_ID", "itemId": "fb4Fg6ug", "quantity": 95, "sku": "WMUGeRvG"}, {"duration": 36, "endDate": "1977-10-21T00:00:00Z", "identityType": "ITEM_ID", "itemId": "2zsp8VvG", "quantity": 50, "sku": "CV3ZJWO7"}, {"duration": 60, "endDate": "1980-05-10T00:00:00Z", "identityType": "ITEM_ID", "itemId": "ChWNvDoU", "quantity": 100, "sku": "6uprUtZw"}]}, {"condition": "89yFBMEB", "conditionName": "QJv3HJAW", "eventName": "1QgeNFfc", "rewardItems": [{"duration": 11, "endDate": "1993-06-11T00:00:00Z", "identityType": "ITEM_SKU", "itemId": "Sfjcp4h1", "quantity": 24, "sku": "WDCvo69i"}, {"duration": 28, "endDate": "1981-07-28T00:00:00Z", "identityType": "ITEM_SKU", "itemId": "nB2ZmWV2", "quantity": 12, "sku": "DfqvrwHa"}, {"duration": 91, "endDate": "1979-12-27T00:00:00Z", "identityType": "ITEM_SKU", "itemId": "E30NDNPw", "quantity": 37, "sku": "aWZ2Vm0A"}]}, {"condition": "N07tZz5k", "conditionName": "4IFVHeiz", "eventName": "6iJnWHhX", "rewardItems": [{"duration": 1, "endDate": "1992-01-22T00:00:00Z", "identityType": "ITEM_ID", "itemId": "TdAbMpp2", "quantity": 91, "sku": "fMLHli6c"}, {"duration": 6, "endDate": "1992-05-13T00:00:00Z", "identityType": "ITEM_SKU", "itemId": "D9FXS9IC", "quantity": 85, "sku": "SjqjvwLz"}, {"duration": 67, "endDate": "1978-07-26T00:00:00Z", "identityType": "ITEM_SKU", "itemId": "271pFQhl", "quantity": 43, "sku": "h6o6a6Y5"}]}], "userIdExpression": "I6PnfHZV"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateReward \
    --namespace $AB_NAMESPACE \
    --rewardId 'RRTw5rrI' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 193 'UpdateReward' test.out

#- 194 DeleteReward
$CLI_EXE \
    --sn platform \
    --op DeleteReward \
    --namespace $AB_NAMESPACE \
    --rewardId 'eEw1SRnY' \
    > test.out 2>&1
eval_tap $? 194 'DeleteReward' test.out

#- 195 CheckEventCondition
# body param: body
echo '{"payload": {"YvwoE90E": {}, "Rks9quLl": {}, "eorjB9LK": {}}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CheckEventCondition \
    --namespace $AB_NAMESPACE \
    --rewardId 'gBEoDF1R' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 195 'CheckEventCondition' test.out

#- 196 DeleteRewardConditionRecord
# body param: body
echo '{"conditionName": "BhkJtker", "userId": "kWm8om5h"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op DeleteRewardConditionRecord \
    --namespace $AB_NAMESPACE \
    --rewardId 'DWnfwuc3' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 196 'DeleteRewardConditionRecord' test.out

#- 197 QuerySections
$CLI_EXE \
    --sn platform \
    --op QuerySections \
    --namespace $AB_NAMESPACE \
    --end 'K8TAYAfF' \
    --limit '8' \
    --offset '8' \
    --start 'vbFgiiFS' \
    --storeId 'IXA4iEee' \
    --viewId 'UolHiXO8' \
    > test.out 2>&1
eval_tap $? 197 'QuerySections' test.out

#- 198 CreateSection
# body param: body
echo '{"active": false, "displayOrder": 45, "endDate": "1983-04-07T00:00:00Z", "ext": {"7d04j5C8": {}, "5M0uQrfA": {}, "gfnTSYMJ": {}}, "fixedPeriodRotationConfig": {"backfillType": "NONE", "duration": 37, "itemCount": 7, "rule": "SEQUENCE"}, "items": [{"id": "IDylA7LU", "sku": "WwXXyTQo"}, {"id": "sjxdsnAi", "sku": "ITZL4v3n"}, {"id": "eUFD71fY", "sku": "lGlynHjo"}], "localizations": {"PyZaEWIh": {"description": "6wwrasSQ", "localExt": {"DXJq7I3z": {}, "vqWaQTXv": {}, "evnbqPSm": {}}, "longDescription": "iKu4onxT", "title": "uzJ7s1lD"}, "DMAuOiNJ": {"description": "Gumlwl3t", "localExt": {"G7tSVDuC": {}, "2HwhIZA3": {}, "AbKjYWAc": {}}, "longDescription": "JpNOuflC", "title": "f9O0gV8L"}, "m0XxINic": {"description": "YTVo8kI5", "localExt": {"e6T1b3yb": {}, "uzW5vXQI": {}, "C2Kcok5x": {}}, "longDescription": "nmdzBxFH", "title": "LKbiOpxe"}}, "name": "VoVaDG7H", "rotationType": "CUSTOM", "startDate": "1981-10-29T00:00:00Z", "viewId": "eTL3HIkZ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateSection \
    --namespace $AB_NAMESPACE \
    --storeId '5AqPNk4V' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 198 'CreateSection' test.out

#- 199 PurgeExpiredSection
$CLI_EXE \
    --sn platform \
    --op PurgeExpiredSection \
    --namespace $AB_NAMESPACE \
    --storeId 'EatLwxvE' \
    > test.out 2>&1
eval_tap $? 199 'PurgeExpiredSection' test.out

#- 200 GetSection
$CLI_EXE \
    --sn platform \
    --op GetSection \
    --namespace $AB_NAMESPACE \
    --sectionId 'bo7LkbrC' \
    --storeId 'YEmgffCj' \
    > test.out 2>&1
eval_tap $? 200 'GetSection' test.out

#- 201 UpdateSection
# body param: body
echo '{"active": false, "displayOrder": 72, "endDate": "1980-08-26T00:00:00Z", "ext": {"MiIU72qq": {}, "sStPiJv0": {}, "hI82RsDG": {}}, "fixedPeriodRotationConfig": {"backfillType": "NONE", "duration": 72, "itemCount": 91, "rule": "SEQUENCE"}, "items": [{"id": "1M3AeAdB", "sku": "cLjhRlp1"}, {"id": "ZTseJKSx", "sku": "AHA5wGO7"}, {"id": "ct7YVXOz", "sku": "7M3jyl51"}], "localizations": {"cNpoxIl2": {"description": "wVbPyXvR", "localExt": {"9Q5J1uwE": {}, "yvkiTw5D": {}, "tWe09p2r": {}}, "longDescription": "HP38PJjs", "title": "GJ9htQbz"}, "VjMm7DBO": {"description": "boaPkuBN", "localExt": {"iSTa8xJq": {}, "VsP3FQrM": {}, "67r5axnm": {}}, "longDescription": "Xs0YWmmd", "title": "VWNQLItj"}, "eWKc3CwL": {"description": "nwqbQFM0", "localExt": {"sNOzqEsD": {}, "TxctqZ4Y": {}, "jOp0qv3B": {}}, "longDescription": "qo9JxU9H", "title": "8tMHsli9"}}, "name": "o51e6c8O", "rotationType": "CUSTOM", "startDate": "1999-06-26T00:00:00Z", "viewId": "rXN5sSKW"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateSection \
    --namespace $AB_NAMESPACE \
    --sectionId 'MYmYbvUa' \
    --storeId 'h9dd5kFD' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 201 'UpdateSection' test.out

#- 202 DeleteSection
$CLI_EXE \
    --sn platform \
    --op DeleteSection \
    --namespace $AB_NAMESPACE \
    --sectionId 'alo3Ulno' \
    --storeId 'Y4qrRpfC' \
    > test.out 2>&1
eval_tap $? 202 'DeleteSection' test.out

#- 203 ListStores
$CLI_EXE \
    --sn platform \
    --op ListStores \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 203 'ListStores' test.out

#- 204 CreateStore
# body param: body
echo '{"defaultLanguage": "cS6mQ1Od", "defaultRegion": "2UUusY2u", "description": "MRwdN0Xh", "supportedLanguages": ["4FDdymh0", "RfAAXcXU", "p3r3jMUT"], "supportedRegions": ["eFnZDgT8", "1AnJWgJT", "rAAveATk"], "title": "DegC9zXL"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateStore \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 204 'CreateStore' test.out

#- 205 GetCatalogDefinition
$CLI_EXE \
    --sn platform \
    --op GetCatalogDefinition \
    --namespace $AB_NAMESPACE \
    --catalogType 'APP' \
    > test.out 2>&1
eval_tap $? 205 'GetCatalogDefinition' test.out

#- 206 DownloadCSVTemplates
$CLI_EXE \
    --sn platform \
    --op DownloadCSVTemplates \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 206 'DownloadCSVTemplates' test.out

#- 207 ExportStoreByCSV
# body param: body
echo '{"catalogType": "VIEW", "fieldsToBeIncluded": ["uejIEFY8", "jRItsX5X", "SOHN4Y7X"], "idsToBeExported": ["FZG4uLsL", "ANqDsBty", "wkTUZWbp"], "storeId": "rO0sdAfi"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ExportStoreByCSV \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 207 'ExportStoreByCSV' test.out

#- 208 ImportStore
eval_tap 0 208 'ImportStore # SKIP deprecated' test.out

#- 209 GetPublishedStore
$CLI_EXE \
    --sn platform \
    --op GetPublishedStore \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 209 'GetPublishedStore' test.out

#- 210 DeletePublishedStore
$CLI_EXE \
    --sn platform \
    --op DeletePublishedStore \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 210 'DeletePublishedStore' test.out

#- 211 GetPublishedStoreBackup
$CLI_EXE \
    --sn platform \
    --op GetPublishedStoreBackup \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 211 'GetPublishedStoreBackup' test.out

#- 212 RollbackPublishedStore
$CLI_EXE \
    --sn platform \
    --op RollbackPublishedStore \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 212 'RollbackPublishedStore' test.out

#- 213 GetStore
$CLI_EXE \
    --sn platform \
    --op GetStore \
    --namespace $AB_NAMESPACE \
    --storeId '8qceolsS' \
    > test.out 2>&1
eval_tap $? 213 'GetStore' test.out

#- 214 UpdateStore
# body param: body
echo '{"defaultLanguage": "endm8SUL", "defaultRegion": "jGoX8uQl", "description": "YiP7olvb", "supportedLanguages": ["IUfnulws", "uupiKkgU", "Q7SxVgjG"], "supportedRegions": ["wnq6YaKJ", "x9EBKGTD", "z25vKOoF"], "title": "EmPD0N7z"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateStore \
    --namespace $AB_NAMESPACE \
    --storeId 'zo89t4Is' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 214 'UpdateStore' test.out

#- 215 DeleteStore
$CLI_EXE \
    --sn platform \
    --op DeleteStore \
    --namespace $AB_NAMESPACE \
    --storeId 'ef2726mp' \
    > test.out 2>&1
eval_tap $? 215 'DeleteStore' test.out

#- 216 QueryChanges
$CLI_EXE \
    --sn platform \
    --op QueryChanges \
    --namespace $AB_NAMESPACE \
    --storeId 'ZAAlHQo6' \
    --action 'DELETE' \
    --itemSku '5W2repjT' \
    --itemType 'SUBSCRIPTION' \
    --limit '85' \
    --offset '64' \
    --selected 'true' \
    --sortBy '["createdAt:asc", "updatedAt:asc", "createdAt"]' \
    --status 'UNPUBLISHED' \
    --type 'ITEM' \
    --updatedAtEnd 'jJnDt3e7' \
    --updatedAtStart 'CneyN7xJ' \
    --withTotal 'true' \
    > test.out 2>&1
eval_tap $? 216 'QueryChanges' test.out

#- 217 PublishAll
$CLI_EXE \
    --sn platform \
    --op PublishAll \
    --namespace $AB_NAMESPACE \
    --storeId 'KOcAtsWX' \
    > test.out 2>&1
eval_tap $? 217 'PublishAll' test.out

#- 218 PublishSelected
$CLI_EXE \
    --sn platform \
    --op PublishSelected \
    --namespace $AB_NAMESPACE \
    --storeId 'fMxE24Wp' \
    > test.out 2>&1
eval_tap $? 218 'PublishSelected' test.out

#- 219 SelectAllRecords
$CLI_EXE \
    --sn platform \
    --op SelectAllRecords \
    --namespace $AB_NAMESPACE \
    --storeId 'HvuU9m9d' \
    > test.out 2>&1
eval_tap $? 219 'SelectAllRecords' test.out

#- 220 SelectAllRecordsByCriteria
$CLI_EXE \
    --sn platform \
    --op SelectAllRecordsByCriteria \
    --namespace $AB_NAMESPACE \
    --storeId 'EggbGwYg' \
    --action 'DELETE' \
    --itemSku '6LOx8PdP' \
    --itemType 'SUBSCRIPTION' \
    --selected 'false' \
    --type 'SECTION' \
    --updatedAtEnd 'Hk1nHPHy' \
    --updatedAtStart 'Pa9rDtU2' \
    > test.out 2>&1
eval_tap $? 220 'SelectAllRecordsByCriteria' test.out

#- 221 GetStatistic
$CLI_EXE \
    --sn platform \
    --op GetStatistic \
    --namespace $AB_NAMESPACE \
    --storeId 'lgtWUfuS' \
    --action 'DELETE' \
    --itemSku 'bhN0SYbm' \
    --itemType 'BUNDLE' \
    --type 'SECTION' \
    --updatedAtEnd 'oEkpMxv5' \
    --updatedAtStart '02qTnaVn' \
    > test.out 2>&1
eval_tap $? 221 'GetStatistic' test.out

#- 222 UnselectAllRecords
$CLI_EXE \
    --sn platform \
    --op UnselectAllRecords \
    --namespace $AB_NAMESPACE \
    --storeId 'RkluBoKP' \
    > test.out 2>&1
eval_tap $? 222 'UnselectAllRecords' test.out

#- 223 SelectRecord
$CLI_EXE \
    --sn platform \
    --op SelectRecord \
    --changeId 'rqcnFjrA' \
    --namespace $AB_NAMESPACE \
    --storeId 'eLwusU7Z' \
    > test.out 2>&1
eval_tap $? 223 'SelectRecord' test.out

#- 224 UnselectRecord
$CLI_EXE \
    --sn platform \
    --op UnselectRecord \
    --changeId 'h9fHK39R' \
    --namespace $AB_NAMESPACE \
    --storeId 'L09Rl231' \
    > test.out 2>&1
eval_tap $? 224 'UnselectRecord' test.out

#- 225 CloneStore
$CLI_EXE \
    --sn platform \
    --op CloneStore \
    --namespace $AB_NAMESPACE \
    --storeId 'QnJpZKai' \
    --targetStoreId 'uZ0j50FT' \
    > test.out 2>&1
eval_tap $? 225 'CloneStore' test.out

#- 226 ExportStore
eval_tap 0 226 'ExportStore # SKIP deprecated' test.out

#- 227 QueryImportHistory
$CLI_EXE \
    --sn platform \
    --op QueryImportHistory \
    --namespace $AB_NAMESPACE \
    --storeId 'zRcPruBH' \
    --end 'gvEkJpHv' \
    --limit '52' \
    --offset '25' \
    --sortBy 'gyWpSrrY' \
    --start 'DWkLiNe8' \
    --success 'false' \
    > test.out 2>&1
eval_tap $? 227 'QueryImportHistory' test.out

#- 228 ImportStoreByCSV
# form data upload: category
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
# form data upload: display
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
# form data upload: item
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
# form data upload: section
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op ImportStoreByCSV \
    --namespace $AB_NAMESPACE \
    --storeId 'qBemtKyS' \
    --upload category $TEMP_FILE_UPLOAD \
    --upload display $TEMP_FILE_UPLOAD \
    --upload item $TEMP_FILE_UPLOAD \
    --notes 's14KvIVf' \
    --upload section $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 228 'ImportStoreByCSV' test.out

#- 229 QuerySubscriptions
$CLI_EXE \
    --sn platform \
    --op QuerySubscriptions \
    --namespace $AB_NAMESPACE \
    --chargeStatus 'SETUP' \
    --itemId 'rGIw23LY' \
    --limit '29' \
    --offset '23' \
    --sku '9nIn5Sts' \
    --status 'INIT' \
    --subscribedBy 'PLATFORM' \
    --userId 'UHO1VqIZ' \
    > test.out 2>&1
eval_tap $? 229 'QuerySubscriptions' test.out

#- 230 RecurringChargeSubscription
$CLI_EXE \
    --sn platform \
    --op RecurringChargeSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'p56ktGkT' \
    > test.out 2>&1
eval_tap $? 230 'RecurringChargeSubscription' test.out

#- 231 GetTicketDynamic
$CLI_EXE \
    --sn platform \
    --op GetTicketDynamic \
    --boothName 'iDBixT2i' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 231 'GetTicketDynamic' test.out

#- 232 DecreaseTicketSale
# body param: body
echo '{"orderNo": "U9JD93LJ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op DecreaseTicketSale \
    --boothName 'b6boHIjm' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 232 'DecreaseTicketSale' test.out

#- 233 GetTicketBoothID
$CLI_EXE \
    --sn platform \
    --op GetTicketBoothID \
    --boothName 'l6JH0vTz' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 233 'GetTicketBoothID' test.out

#- 234 IncreaseTicketSale
# body param: body
echo '{"count": 65, "orderNo": "NK5Rl5Ff"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op IncreaseTicketSale \
    --boothName '74qfUWbE' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 234 'IncreaseTicketSale' test.out

#- 235 Commit
# body param: body
echo '{"actions": [{"operations": [{"creditPayload": {"balanceOrigin": "GooglePlay", "count": 71, "currencyCode": "xq1eGkcb", "expireAt": "1972-07-01T00:00:00Z"}, "debitPayload": {"count": 52, "currencyCode": "xi60cjwp", "walletPlatform": "Other"}, "fulFillItemPayload": {"count": 3, "entitlementCollectionId": "C1nImVdi", "entitlementOrigin": "Nintendo", "itemIdentity": "1ZTXz05P", "itemIdentityType": "ITEM_ID"}, "revokeEntitlementPayload": {"count": 15, "entitlementId": "439rKXVD"}, "type": "FULFILL_ITEM"}, {"creditPayload": {"balanceOrigin": "GooglePlay", "count": 55, "currencyCode": "HZewQyNm", "expireAt": "1982-02-15T00:00:00Z"}, "debitPayload": {"count": 89, "currencyCode": "AYkC3T8v", "walletPlatform": "Other"}, "fulFillItemPayload": {"count": 18, "entitlementCollectionId": "b6xNH22N", "entitlementOrigin": "IOS", "itemIdentity": "yGhVTkHT", "itemIdentityType": "ITEM_ID"}, "revokeEntitlementPayload": {"count": 79, "entitlementId": "MIzsKYSZ"}, "type": "DEBIT_WALLET"}, {"creditPayload": {"balanceOrigin": "Other", "count": 97, "currencyCode": "7nzHlbH6", "expireAt": "1989-12-08T00:00:00Z"}, "debitPayload": {"count": 69, "currencyCode": "1ULE7ywQ", "walletPlatform": "Nintendo"}, "fulFillItemPayload": {"count": 15, "entitlementCollectionId": "oxGKsWbb", "entitlementOrigin": "Steam", "itemIdentity": "UbDqKc7v", "itemIdentityType": "ITEM_SKU"}, "revokeEntitlementPayload": {"count": 46, "entitlementId": "Ghzg71TR"}, "type": "REVOKE_ENTITLEMENT"}], "userId": "WCZiQP4P"}, {"operations": [{"creditPayload": {"balanceOrigin": "System", "count": 30, "currencyCode": "h1M3oIfd", "expireAt": "1992-12-21T00:00:00Z"}, "debitPayload": {"count": 55, "currencyCode": "HJV2RMPl", "walletPlatform": "Steam"}, "fulFillItemPayload": {"count": 34, "entitlementCollectionId": "xXg4gYra", "entitlementOrigin": "Nintendo", "itemIdentity": "JUSnFhNP", "itemIdentityType": "ITEM_SKU"}, "revokeEntitlementPayload": {"count": 70, "entitlementId": "CPGx6zJb"}, "type": "DEBIT_WALLET"}, {"creditPayload": {"balanceOrigin": "Twitch", "count": 94, "currencyCode": "Rbnx205f", "expireAt": "1973-02-06T00:00:00Z"}, "debitPayload": {"count": 40, "currencyCode": "eMgvclZU", "walletPlatform": "Oculus"}, "fulFillItemPayload": {"count": 91, "entitlementCollectionId": "VCI3FUTO", "entitlementOrigin": "Nintendo", "itemIdentity": "lVFvZpvP", "itemIdentityType": "ITEM_SKU"}, "revokeEntitlementPayload": {"count": 29, "entitlementId": "1cK7rekl"}, "type": "DEBIT_WALLET"}, {"creditPayload": {"balanceOrigin": "Playstation", "count": 69, "currencyCode": "nDi4PRaB", "expireAt": "1975-10-12T00:00:00Z"}, "debitPayload": {"count": 100, "currencyCode": "vBowYFwM", "walletPlatform": "Oculus"}, "fulFillItemPayload": {"count": 7, "entitlementCollectionId": "iLD2vytU", "entitlementOrigin": "Epic", "itemIdentity": "NMHnhCdF", "itemIdentityType": "ITEM_ID"}, "revokeEntitlementPayload": {"count": 97, "entitlementId": "Z7QWkTKT"}, "type": "FULFILL_ITEM"}], "userId": "3c4tYKzR"}, {"operations": [{"creditPayload": {"balanceOrigin": "Steam", "count": 7, "currencyCode": "c64navef", "expireAt": "1992-04-20T00:00:00Z"}, "debitPayload": {"count": 85, "currencyCode": "3akpzoQm", "walletPlatform": "IOS"}, "fulFillItemPayload": {"count": 28, "entitlementCollectionId": "LJkDMtyO", "entitlementOrigin": "Steam", "itemIdentity": "YpGdke1j", "itemIdentityType": "ITEM_ID"}, "revokeEntitlementPayload": {"count": 100, "entitlementId": "OwcV1dKU"}, "type": "CREDIT_WALLET"}, {"creditPayload": {"balanceOrigin": "Epic", "count": 69, "currencyCode": "Fl3Uyc8M", "expireAt": "1979-04-26T00:00:00Z"}, "debitPayload": {"count": 77, "currencyCode": "k2XtSblC", "walletPlatform": "Nintendo"}, "fulFillItemPayload": {"count": 96, "entitlementCollectionId": "dKTMiXLf", "entitlementOrigin": "GooglePlay", "itemIdentity": "1J8G1rUM", "itemIdentityType": "ITEM_ID"}, "revokeEntitlementPayload": {"count": 93, "entitlementId": "ebNKv0fI"}, "type": "DEBIT_WALLET"}, {"creditPayload": {"balanceOrigin": "Other", "count": 2, "currencyCode": "dJ5M5hGX", "expireAt": "1972-06-23T00:00:00Z"}, "debitPayload": {"count": 64, "currencyCode": "sSgHXXWd", "walletPlatform": "Steam"}, "fulFillItemPayload": {"count": 94, "entitlementCollectionId": "FZZ7kbYP", "entitlementOrigin": "Xbox", "itemIdentity": "4u5dzlJH", "itemIdentityType": "ITEM_ID"}, "revokeEntitlementPayload": {"count": 2, "entitlementId": "oe8aTGEX"}, "type": "DEBIT_WALLET"}], "userId": "ZxsfWdfL"}], "metadata": {"4DKwm0FU": {}, "PkYTffqI": {}, "bb0sIhgq": {}}, "needPreCheck": true, "transactionId": "mhmMGdvA", "type": "igdPp1uj"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op Commit \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 235 'Commit' test.out

#- 236 GetTradeHistoryByCriteria
$CLI_EXE \
    --sn platform \
    --op GetTradeHistoryByCriteria \
    --namespace $AB_NAMESPACE \
    --limit '84' \
    --offset '83' \
    --status 'INIT' \
    --type 'fbPQWvmy' \
    --userId 'BkV5M3Mm' \
    > test.out 2>&1
eval_tap $? 236 'GetTradeHistoryByCriteria' test.out

#- 237 GetTradeHistoryByTransactionId
$CLI_EXE \
    --sn platform \
    --op GetTradeHistoryByTransactionId \
    --namespace $AB_NAMESPACE \
    --transactionId 'dqGTFP1P' \
    > test.out 2>&1
eval_tap $? 237 'GetTradeHistoryByTransactionId' test.out

#- 238 UnlockSteamUserAchievement
# body param: body
echo '{"achievements": [{"id": "sirAG1K5", "value": 80}, {"id": "QQJrXTwV", "value": 58}, {"id": "XLZXWFir", "value": 73}], "steamUserId": "f5YTAitE"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UnlockSteamUserAchievement \
    --namespace $AB_NAMESPACE \
    --userId 'jtr714jF' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 238 'UnlockSteamUserAchievement' test.out

#- 239 GetXblUserAchievements
$CLI_EXE \
    --sn platform \
    --op GetXblUserAchievements \
    --namespace $AB_NAMESPACE \
    --userId '08sfmAKT' \
    --xboxUserId 'CHxEbEtr' \
    > test.out 2>&1
eval_tap $? 239 'GetXblUserAchievements' test.out

#- 240 UpdateXblUserAchievement
# body param: body
echo '{"achievements": [{"id": "mMbQEpNn", "percentComplete": 29}, {"id": "6r0g04RS", "percentComplete": 14}, {"id": "ziyGZcse", "percentComplete": 83}], "serviceConfigId": "MMuaZqo9", "titleId": "hjc0th9p", "xboxUserId": "bPOcOCa8"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXblUserAchievement \
    --namespace $AB_NAMESPACE \
    --userId 'Itd63Nbg' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 240 'UpdateXblUserAchievement' test.out

#- 241 AnonymizeCampaign
$CLI_EXE \
    --sn platform \
    --op AnonymizeCampaign \
    --namespace $AB_NAMESPACE \
    --userId 'shqF6Pls' \
    > test.out 2>&1
eval_tap $? 241 'AnonymizeCampaign' test.out

#- 242 AnonymizeEntitlement
$CLI_EXE \
    --sn platform \
    --op AnonymizeEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'oEWRGXvU' \
    > test.out 2>&1
eval_tap $? 242 'AnonymizeEntitlement' test.out

#- 243 AnonymizeFulfillment
$CLI_EXE \
    --sn platform \
    --op AnonymizeFulfillment \
    --namespace $AB_NAMESPACE \
    --userId 'ayqurF6t' \
    > test.out 2>&1
eval_tap $? 243 'AnonymizeFulfillment' test.out

#- 244 AnonymizeIntegration
$CLI_EXE \
    --sn platform \
    --op AnonymizeIntegration \
    --namespace $AB_NAMESPACE \
    --userId 'ApJEwIBu' \
    > test.out 2>&1
eval_tap $? 244 'AnonymizeIntegration' test.out

#- 245 AnonymizeOrder
$CLI_EXE \
    --sn platform \
    --op AnonymizeOrder \
    --namespace $AB_NAMESPACE \
    --userId 'Q9lUMCGm' \
    > test.out 2>&1
eval_tap $? 245 'AnonymizeOrder' test.out

#- 246 AnonymizePayment
$CLI_EXE \
    --sn platform \
    --op AnonymizePayment \
    --namespace $AB_NAMESPACE \
    --userId 'DhcTkJuS' \
    > test.out 2>&1
eval_tap $? 246 'AnonymizePayment' test.out

#- 247 AnonymizeRevocation
$CLI_EXE \
    --sn platform \
    --op AnonymizeRevocation \
    --namespace $AB_NAMESPACE \
    --userId 'lZHVwn4H' \
    > test.out 2>&1
eval_tap $? 247 'AnonymizeRevocation' test.out

#- 248 AnonymizeSubscription
$CLI_EXE \
    --sn platform \
    --op AnonymizeSubscription \
    --namespace $AB_NAMESPACE \
    --userId 'UyJ0uvuW' \
    > test.out 2>&1
eval_tap $? 248 'AnonymizeSubscription' test.out

#- 249 AnonymizeWallet
$CLI_EXE \
    --sn platform \
    --op AnonymizeWallet \
    --namespace $AB_NAMESPACE \
    --userId 'Htk7bUyN' \
    > test.out 2>&1
eval_tap $? 249 'AnonymizeWallet' test.out

#- 250 GetUserDLCByPlatform
$CLI_EXE \
    --sn platform \
    --op GetUserDLCByPlatform \
    --namespace $AB_NAMESPACE \
    --userId 'zbqCMYRF' \
    --type 'PSN' \
    > test.out 2>&1
eval_tap $? 250 'GetUserDLCByPlatform' test.out

#- 251 GetUserDLC
$CLI_EXE \
    --sn platform \
    --op GetUserDLC \
    --namespace $AB_NAMESPACE \
    --userId 'mClGPDpd' \
    --includeAllNamespaces 'false' \
    --status 'REVOKE_FAILED' \
    --type 'XBOX' \
    > test.out 2>&1
eval_tap $? 251 'GetUserDLC' test.out

#- 252 QueryUserEntitlements
$CLI_EXE \
    --sn platform \
    --op QueryUserEntitlements \
    --namespace $AB_NAMESPACE \
    --userId 'h0yqKNcp' \
    --activeOnly 'true' \
    --appType 'SOFTWARE' \
    --collectionId 'Fz4WdxxD' \
    --entitlementClazz 'CODE' \
    --entitlementName 'GTyNrkGW' \
    --features '["degkaQWF", "Oz4tQXWe", "h7pfpLLm"]' \
    --fuzzyMatchName 'true' \
    --ignoreActiveDate 'false' \
    --itemId '["qDKD9pHm", "PwzVCfIV", "jcVfQ9mh"]' \
    --limit '54' \
    --offset '43' \
    --origin 'System' \
    > test.out 2>&1
eval_tap $? 252 'QueryUserEntitlements' test.out

#- 253 GrantUserEntitlement
# body param: body
echo '[{"collectionId": "wWsGhHev", "endDate": "1980-03-24T00:00:00Z", "grantedCode": "PjkH5P43", "itemId": "hRYmPxOc", "itemNamespace": "4bfCiHje", "language": "Yh_FqVj_529", "metadata": {"moTlIyPZ": {}, "NZHJStlT": {}, "bezccMzN": {}}, "origin": "IOS", "quantity": 86, "region": "Z2cKqHEG", "source": "ACHIEVEMENT", "startDate": "1981-07-18T00:00:00Z", "storeId": "I2OkZfik"}, {"collectionId": "Wm9f9NiL", "endDate": "1980-05-24T00:00:00Z", "grantedCode": "nYh77yBq", "itemId": "UhzxcxfG", "itemNamespace": "U4jrO3xT", "language": "eh_VZ", "metadata": {"IeqQYfxD": {}, "wBwpvSNy": {}, "pMGHYbYB": {}}, "origin": "Oculus", "quantity": 21, "region": "DpQ3rOmR", "source": "OTHER", "startDate": "1983-11-08T00:00:00Z", "storeId": "kIonrVI4"}, {"collectionId": "vHxadmj5", "endDate": "1992-06-20T00:00:00Z", "grantedCode": "rGE2AZd0", "itemId": "bLuqnWnX", "itemNamespace": "MD6w19fR", "language": "XUu-giXi-bg", "metadata": {"DgxHtfJr": {}, "kf86AwHJ": {}, "czE1PSyy": {}}, "origin": "IOS", "quantity": 52, "region": "CuF20Lc1", "source": "REWARD", "startDate": "1982-01-20T00:00:00Z", "storeId": "hmVc4bVn"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op GrantUserEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'W6DL8m4C' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 253 'GrantUserEntitlement' test.out

#- 254 GetUserAppEntitlementByAppId
$CLI_EXE \
    --sn platform \
    --op GetUserAppEntitlementByAppId \
    --namespace $AB_NAMESPACE \
    --userId 'ZYS7Alx4' \
    --activeOnly 'true' \
    --appId 'YLTRrdJq' \
    > test.out 2>&1
eval_tap $? 254 'GetUserAppEntitlementByAppId' test.out

#- 255 QueryUserEntitlementsByAppType
$CLI_EXE \
    --sn platform \
    --op QueryUserEntitlementsByAppType \
    --namespace $AB_NAMESPACE \
    --userId '8AcfA00E' \
    --activeOnly 'false' \
    --limit '54' \
    --offset '13' \
    --appType 'SOFTWARE' \
    > test.out 2>&1
eval_tap $? 255 'QueryUserEntitlementsByAppType' test.out

#- 256 GetUserEntitlementsByIds
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementsByIds \
    --namespace $AB_NAMESPACE \
    --userId 'uo87V8Sk' \
    --ids '["wIXVrkhu", "kuqXED91", "8dWlVPeM"]' \
    > test.out 2>&1
eval_tap $? 256 'GetUserEntitlementsByIds' test.out

#- 257 GetUserEntitlementByItemId
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'LQ6IB696' \
    --activeOnly 'false' \
    --entitlementClazz 'MEDIA' \
    --platform 'xc3VTLlb' \
    --itemId 'ispuNqMe' \
    > test.out 2>&1
eval_tap $? 257 'GetUserEntitlementByItemId' test.out

#- 258 GetUserActiveEntitlementsByItemIds
$CLI_EXE \
    --sn platform \
    --op GetUserActiveEntitlementsByItemIds \
    --namespace $AB_NAMESPACE \
    --userId '2zO8Me9J' \
    --ids '["BpLyHVJW", "0wBEmKsN", "WLXQ4DrR"]' \
    --platform '5BOv78hk' \
    > test.out 2>&1
eval_tap $? 258 'GetUserActiveEntitlementsByItemIds' test.out

#- 259 GetUserEntitlementBySku
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementBySku \
    --namespace $AB_NAMESPACE \
    --userId 'bs0Pyjc2' \
    --activeOnly 'false' \
    --entitlementClazz 'SUBSCRIPTION' \
    --platform 'Ja0cgHUg' \
    --sku 'WaueQ3SL' \
    > test.out 2>&1
eval_tap $? 259 'GetUserEntitlementBySku' test.out

#- 260 ExistsAnyUserActiveEntitlement
$CLI_EXE \
    --sn platform \
    --op ExistsAnyUserActiveEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'GiwMVAjw' \
    --appIds '["7almMDiS", "pw3iaWIf", "yEjMaqmy"]' \
    --itemIds '["RavOSdaF", "QjtkFGGV", "Njm7Yvt3"]' \
    --platform 'jhgqhA4x' \
    --skus '["lZG1fcuF", "i05aC5al", "p23ZEO1q"]' \
    > test.out 2>&1
eval_tap $? 260 'ExistsAnyUserActiveEntitlement' test.out

#- 261 ExistsAnyUserActiveEntitlementByItemIds
$CLI_EXE \
    --sn platform \
    --op ExistsAnyUserActiveEntitlementByItemIds \
    --namespace $AB_NAMESPACE \
    --userId 'rrqZYumt' \
    --platform 'IObFsNwJ' \
    --itemIds '["EPo2oy8G", "cvvYnsQN", "npfPqimd"]' \
    > test.out 2>&1
eval_tap $? 261 'ExistsAnyUserActiveEntitlementByItemIds' test.out

#- 262 GetUserAppEntitlementOwnershipByAppId
$CLI_EXE \
    --sn platform \
    --op GetUserAppEntitlementOwnershipByAppId \
    --namespace $AB_NAMESPACE \
    --userId 'UpE2hKOZ' \
    --appId 'Yb4NCNZm' \
    > test.out 2>&1
eval_tap $? 262 'GetUserAppEntitlementOwnershipByAppId' test.out

#- 263 GetUserEntitlementOwnershipByItemId
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementOwnershipByItemId \
    --namespace $AB_NAMESPACE \
    --userId '65dDs1Zf' \
    --entitlementClazz 'APP' \
    --platform 'AAs7mRqe' \
    --itemId 'Oz7V9l6r' \
    > test.out 2>&1
eval_tap $? 263 'GetUserEntitlementOwnershipByItemId' test.out

#- 264 GetUserEntitlementOwnershipByItemIds
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementOwnershipByItemIds \
    --namespace $AB_NAMESPACE \
    --userId '48DtwaVc' \
    --ids '["TngQg7rC", "kKDUkXdo", "tT1FuftZ"]' \
    --platform 'mNPA4FrH' \
    > test.out 2>&1
eval_tap $? 264 'GetUserEntitlementOwnershipByItemIds' test.out

#- 265 GetUserEntitlementOwnershipBySku
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementOwnershipBySku \
    --namespace $AB_NAMESPACE \
    --userId 'lYYkCxap' \
    --entitlementClazz 'ENTITLEMENT' \
    --platform 'fkMo1TCX' \
    --sku '1Y5Lk6BE' \
    > test.out 2>&1
eval_tap $? 265 'GetUserEntitlementOwnershipBySku' test.out

#- 266 RevokeAllEntitlements
$CLI_EXE \
    --sn platform \
    --op RevokeAllEntitlements \
    --namespace $AB_NAMESPACE \
    --userId 'luZVmySo' \
    > test.out 2>&1
eval_tap $? 266 'RevokeAllEntitlements' test.out

#- 267 RevokeUserEntitlements
$CLI_EXE \
    --sn platform \
    --op RevokeUserEntitlements \
    --namespace $AB_NAMESPACE \
    --userId 'yPglCyYT' \
    --entitlementIds '1EgvvQkj' \
    > test.out 2>&1
eval_tap $? 267 'RevokeUserEntitlements' test.out

#- 268 GetUserEntitlement
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlement \
    --entitlementId 'Tv2ulSg3' \
    --namespace $AB_NAMESPACE \
    --userId '2NkR9Sfr' \
    > test.out 2>&1
eval_tap $? 268 'GetUserEntitlement' test.out

#- 269 UpdateUserEntitlement
# body param: body
echo '{"collectionId": "06teRmi7", "endDate": "1994-01-16T00:00:00Z", "nullFieldList": ["IiE6bDj8", "D2lH2NB7", "mERcx2ib"], "origin": "Playstation", "reason": "3AVdIHCL", "startDate": "1984-06-12T00:00:00Z", "status": "ACTIVE", "useCount": 95}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateUserEntitlement \
    --entitlementId 'McNWDMAO' \
    --namespace $AB_NAMESPACE \
    --userId '8GBJJHac' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 269 'UpdateUserEntitlement' test.out

#- 270 ConsumeUserEntitlement
# body param: body
echo '{"metadata": {"ByXJcuIs": {}, "GZQ0B752": {}, "Bo7ot12T": {}}, "options": ["e9u4rBMK", "kHjQqvJm", "2E7yZJHn"], "platform": "KYsi4B6q", "requestId": "e01Owr2z", "useCount": 61}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ConsumeUserEntitlement \
    --entitlementId 'b0zuuwyl' \
    --namespace $AB_NAMESPACE \
    --userId '00MLUDHJ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 270 'ConsumeUserEntitlement' test.out

#- 271 DisableUserEntitlement
$CLI_EXE \
    --sn platform \
    --op DisableUserEntitlement \
    --entitlementId 'y7MFgUuX' \
    --namespace $AB_NAMESPACE \
    --userId 'wNhmBMrj' \
    > test.out 2>&1
eval_tap $? 271 'DisableUserEntitlement' test.out

#- 272 EnableUserEntitlement
$CLI_EXE \
    --sn platform \
    --op EnableUserEntitlement \
    --entitlementId 'uDc2uqzC' \
    --namespace $AB_NAMESPACE \
    --userId 'tjkQEKpF' \
    > test.out 2>&1
eval_tap $? 272 'EnableUserEntitlement' test.out

#- 273 GetUserEntitlementHistories
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementHistories \
    --entitlementId '53yRnWRi' \
    --namespace $AB_NAMESPACE \
    --userId '3DgKhApi' \
    > test.out 2>&1
eval_tap $? 273 'GetUserEntitlementHistories' test.out

#- 274 RevokeUserEntitlement
# body param: body
echo '{"metadata": {"uJzDlglk": {}, "BC1SsTVz": {}, "MVASsem8": {}}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RevokeUserEntitlement \
    --entitlementId 'XB4HT26t' \
    --namespace $AB_NAMESPACE \
    --userId 'xucH7nry' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 274 'RevokeUserEntitlement' test.out

#- 275 RevokeUserEntitlementByUseCount
# body param: body
echo '{"reason": "MGvLkwPY", "useCount": 94}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RevokeUserEntitlementByUseCount \
    --entitlementId 'BqpOf3Lb' \
    --namespace $AB_NAMESPACE \
    --userId 'ZZpPTE9k' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 275 'RevokeUserEntitlementByUseCount' test.out

#- 276 PreCheckRevokeUserEntitlementByUseCount
$CLI_EXE \
    --sn platform \
    --op PreCheckRevokeUserEntitlementByUseCount \
    --entitlementId '7rB23qeo' \
    --namespace $AB_NAMESPACE \
    --userId 'i9jOXPmR' \
    --quantity '60' \
    > test.out 2>&1
eval_tap $? 276 'PreCheckRevokeUserEntitlementByUseCount' test.out

#- 277 RevokeUseCount
eval_tap 0 277 'RevokeUseCount # SKIP deprecated' test.out

#- 278 SellUserEntitlement
# body param: body
echo '{"platform": "aMKoYbki", "requestId": "FJ1DCbbP", "useCount": 12}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SellUserEntitlement \
    --entitlementId 'HEQealT8' \
    --namespace $AB_NAMESPACE \
    --userId 'UKWRf40T' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 278 'SellUserEntitlement' test.out

#- 279 FulfillItem
# body param: body
echo '{"duration": 15, "endDate": "1978-09-09T00:00:00Z", "entitlementCollectionId": "LUGV8uwv", "entitlementOrigin": "GooglePlay", "itemId": "HKVPyWyr", "itemSku": "xo7wycZB", "language": "nPR88bCH", "metadata": {"hkp0ZkGU": {}, "lrOLWkZB": {}, "aYnKVw4k": {}}, "order": {"currency": {"currencyCode": "NobiFwbU", "currencySymbol": "TNyh7Rxn", "currencyType": "REAL", "decimals": 82, "namespace": "xNNMdpFi"}, "ext": {"TgWAVC7R": {}, "YqkVJ8to": {}, "FVNQu3j9": {}}, "free": false}, "orderNo": "8Q81hveh", "origin": "Xbox", "overrideBundleItemQty": {"JVNilZqC": 97, "jdm7336n": 64, "qXJ3carN": 1}, "quantity": 8, "region": "C2VaFGdB", "source": "REFERRAL_BONUS", "startDate": "1982-06-13T00:00:00Z", "storeId": "VcP2zivr"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op FulfillItem \
    --namespace $AB_NAMESPACE \
    --userId 'Ec1Ai9cM' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 279 'FulfillItem' test.out

#- 280 RedeemCode
# body param: body
echo '{"code": "0XGXm1km", "language": "zB-PoGZ", "region": "DbGlIJHx"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RedeemCode \
    --namespace $AB_NAMESPACE \
    --userId 'JjnarbxP' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 280 'RedeemCode' test.out

#- 281 PreCheckFulfillItem
# body param: body
echo '{"itemId": "av335WFL", "itemSku": "86yrnCSh", "quantity": 86}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PreCheckFulfillItem \
    --namespace $AB_NAMESPACE \
    --userId 'Dtv84Q4p' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 281 'PreCheckFulfillItem' test.out

#- 282 FulfillRewards
# body param: body
echo '{"entitlementCollectionId": "jZvmW9lv", "entitlementOrigin": "Steam", "metadata": {"Lz9Ve8GV": {}, "uDZ7Au81": {}, "6Jfm1HWl": {}}, "origin": "Playstation", "rewards": [{"currency": {"currencyCode": "oqiuE5bJ", "namespace": "GTIjPOXo"}, "item": {"itemId": "2CJkBgfU", "itemName": "XY8XBOpz", "itemSku": "tj5bM525", "itemType": "U5WkMjsV"}, "quantity": 1, "type": "CURRENCY"}, {"currency": {"currencyCode": "j0MWGUv0", "namespace": "9JFzleKd"}, "item": {"itemId": "ME19tjIM", "itemName": "wW1i3FZs", "itemSku": "9gTu8I8E", "itemType": "ZYThgxQ6"}, "quantity": 88, "type": "ITEM"}, {"currency": {"currencyCode": "n4pSlwI6", "namespace": "2HzH0H2x"}, "item": {"itemId": "XIOMVqTk", "itemName": "QcFT8P0l", "itemSku": "fvg9dc2B", "itemType": "dWZn62ZF"}, "quantity": 7, "type": "CURRENCY"}], "source": "REWARD", "transactionId": "rWsp1doe"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op FulfillRewards \
    --namespace $AB_NAMESPACE \
    --userId 'l7gKZSAH' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 282 'FulfillRewards' test.out

#- 283 QueryUserIAPOrders
$CLI_EXE \
    --sn platform \
    --op QueryUserIAPOrders \
    --namespace $AB_NAMESPACE \
    --userId 'LlZyye6q' \
    --endTime 'cCPtwYWw' \
    --limit '56' \
    --offset '27' \
    --productId 'BwyOl3nk' \
    --startTime 'iUrVnDr7' \
    --status 'REVOKE_FAILED' \
    --type 'XBOX' \
    > test.out 2>&1
eval_tap $? 283 'QueryUserIAPOrders' test.out

#- 284 QueryAllUserIAPOrders
$CLI_EXE \
    --sn platform \
    --op QueryAllUserIAPOrders \
    --namespace $AB_NAMESPACE \
    --userId 'PVvgIzcW' \
    > test.out 2>&1
eval_tap $? 284 'QueryAllUserIAPOrders' test.out

#- 285 QueryUserIAPConsumeHistory
$CLI_EXE \
    --sn platform \
    --op QueryUserIAPConsumeHistory \
    --namespace $AB_NAMESPACE \
    --userId 'qugFGwwI' \
    --endTime '22Y3xdWl' \
    --limit '81' \
    --offset '25' \
    --startTime 'JuOduorK' \
    --status 'PENDING' \
    --type 'TWITCH' \
    > test.out 2>&1
eval_tap $? 285 'QueryUserIAPConsumeHistory' test.out

#- 286 MockFulfillIAPItem
# body param: body
echo '{"itemIdentityType": "ITEM_ID", "language": "Wl", "productId": "erDyWzAq", "region": "ryWilh3f", "transactionId": "5OTVRt5Z", "type": "STEAM"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op MockFulfillIAPItem \
    --namespace $AB_NAMESPACE \
    --userId 'snxFsTfD' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 286 'MockFulfillIAPItem' test.out

#- 287 AdminGetIAPOrderLineItems
$CLI_EXE \
    --sn platform \
    --op AdminGetIAPOrderLineItems \
    --iapOrderNo 'KymhHrxM' \
    --namespace $AB_NAMESPACE \
    --userId 'JpZaxUtg' \
    > test.out 2>&1
eval_tap $? 287 'AdminGetIAPOrderLineItems' test.out

#- 288 AdminSyncSteamAbnormalTransaction
$CLI_EXE \
    --sn platform \
    --op AdminSyncSteamAbnormalTransaction \
    --namespace $AB_NAMESPACE \
    --userId 'jscRP6KY' \
    > test.out 2>&1
eval_tap $? 288 'AdminSyncSteamAbnormalTransaction' test.out

#- 289 AdminSyncSteamIAPByTransaction
# body param: body
echo '{"orderId": "YgxFrIWp"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op AdminSyncSteamIAPByTransaction \
    --namespace $AB_NAMESPACE \
    --userId 'kEgFrnKG' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 289 'AdminSyncSteamIAPByTransaction' test.out

#- 290 QueryUserThirdPartySubscription
$CLI_EXE \
    --sn platform \
    --op QueryUserThirdPartySubscription \
    --namespace $AB_NAMESPACE \
    --userId 'C6Q5TLw6' \
    --activeOnly 'true' \
    --groupId 'XhIuXe1A' \
    --limit '56' \
    --offset '25' \
    --platform 'APPLE' \
    --productId 'WbHoc6D6' \
    > test.out 2>&1
eval_tap $? 290 'QueryUserThirdPartySubscription' test.out

#- 291 GetThirdPartyPlatformSubscriptionOwnershipByGroupId
$CLI_EXE \
    --sn platform \
    --op GetThirdPartyPlatformSubscriptionOwnershipByGroupId \
    --namespace $AB_NAMESPACE \
    --platform 'APPLE' \
    --userId 'AyXbuq8r' \
    --groupId 'd0buXFe7' \
    > test.out 2>&1
eval_tap $? 291 'GetThirdPartyPlatformSubscriptionOwnershipByGroupId' test.out

#- 292 GetThirdPartyPlatformSubscriptionOwnershipByProductId
$CLI_EXE \
    --sn platform \
    --op GetThirdPartyPlatformSubscriptionOwnershipByProductId \
    --namespace $AB_NAMESPACE \
    --platform 'GOOGLE' \
    --userId 'BIRO4LSl' \
    --productId 'jtTwo0UY' \
    > test.out 2>&1
eval_tap $? 292 'GetThirdPartyPlatformSubscriptionOwnershipByProductId' test.out

#- 293 QueryUserThirdPartySubscriptionTransactions
$CLI_EXE \
    --sn platform \
    --op QueryUserThirdPartySubscriptionTransactions \
    --namespace $AB_NAMESPACE \
    --userId 'LEWzNRIY' \
    --activeOnly 'false' \
    --groupId 'flQzywBU' \
    --limit '87' \
    --offset '87' \
    --platform 'PLAYSTATION' \
    --productId 'PoB8r0uR' \
    > test.out 2>&1
eval_tap $? 293 'QueryUserThirdPartySubscriptionTransactions' test.out

#- 294 GetThirdPartySubscriptionDetails
$CLI_EXE \
    --sn platform \
    --op GetThirdPartySubscriptionDetails \
    --id 'x0N3Iw1u' \
    --namespace $AB_NAMESPACE \
    --userId '9O7FIQrH' \
    > test.out 2>&1
eval_tap $? 294 'GetThirdPartySubscriptionDetails' test.out

#- 295 GetSubscriptionHistory
$CLI_EXE \
    --sn platform \
    --op GetSubscriptionHistory \
    --id 'nOADxGN4' \
    --namespace $AB_NAMESPACE \
    --userId 'C9ez8qbc' \
    --limit '95' \
    --offset '59' \
    > test.out 2>&1
eval_tap $? 295 'GetSubscriptionHistory' test.out

#- 296 SyncSubscriptionTransaction
$CLI_EXE \
    --sn platform \
    --op SyncSubscriptionTransaction \
    --id 'CJO1d8Kf' \
    --namespace $AB_NAMESPACE \
    --userId 'CFsmK5cz' \
    > test.out 2>&1
eval_tap $? 296 'SyncSubscriptionTransaction' test.out

#- 297 GetThirdPartyUserSubscriptionDetails
$CLI_EXE \
    --sn platform \
    --op GetThirdPartyUserSubscriptionDetails \
    --id '51apaiaX' \
    --namespace $AB_NAMESPACE \
    --userId 'fk7TPUxc' \
    > test.out 2>&1
eval_tap $? 297 'GetThirdPartyUserSubscriptionDetails' test.out

#- 298 SyncSubscription
$CLI_EXE \
    --sn platform \
    --op SyncSubscription \
    --id 'CNubMYCP' \
    --namespace $AB_NAMESPACE \
    --userId 'YRfIBwnq' \
    > test.out 2>&1
eval_tap $? 298 'SyncSubscription' test.out

#- 299 QueryUserOrders
$CLI_EXE \
    --sn platform \
    --op QueryUserOrders \
    --namespace $AB_NAMESPACE \
    --userId 'L6eig8ua' \
    --discounted 'true' \
    --itemId 'OaTp5Y4s' \
    --limit '56' \
    --offset '100' \
    --status 'CLOSED' \
    > test.out 2>&1
eval_tap $? 299 'QueryUserOrders' test.out

#- 300 AdminCreateUserOrder
# body param: body
echo '{"currencyCode": "jb9tSYfl", "currencyNamespace": "K3wcezOE", "discountCodes": ["KuhUZ0CR", "rLjeCeWv", "i5FfkncH"], "discountedPrice": 10, "entitlementPlatform": "Epic", "ext": {"m9Ajb6B4": {}, "cnYbDNUy": {}, "rAUDDgmd": {}}, "itemId": "S0nlKKGf", "language": "kvzOZITL", "options": {"skipPriceValidation": false}, "platform": "Other", "price": 17, "quantity": 41, "region": "Q2IqlG0n", "returnUrl": "KVh9S68D", "sandbox": false, "sectionId": "QqRlXSQV"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op AdminCreateUserOrder \
    --namespace $AB_NAMESPACE \
    --userId 'dQuH1Wlj' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 300 'AdminCreateUserOrder' test.out

#- 301 CountOfPurchasedItem
$CLI_EXE \
    --sn platform \
    --op CountOfPurchasedItem \
    --namespace $AB_NAMESPACE \
    --userId '3dWMKJ3k' \
    --itemId 'IMAwjK2u' \
    > test.out 2>&1
eval_tap $? 301 'CountOfPurchasedItem' test.out

#- 302 GetUserOrder
$CLI_EXE \
    --sn platform \
    --op GetUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'hZxDU5U1' \
    --userId 'uUwfhHtR' \
    > test.out 2>&1
eval_tap $? 302 'GetUserOrder' test.out

#- 303 UpdateUserOrderStatus
# body param: body
echo '{"status": "REFUND_FAILED", "statusReason": "mshXZd8i"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateUserOrderStatus \
    --namespace $AB_NAMESPACE \
    --orderNo 'mSBTriZC' \
    --userId 'qQ6wfnw3' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 303 'UpdateUserOrderStatus' test.out

#- 304 FulfillUserOrder
$CLI_EXE \
    --sn platform \
    --op FulfillUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'NdphiR0t' \
    --userId 'FpJyA25I' \
    > test.out 2>&1
eval_tap $? 304 'FulfillUserOrder' test.out

#- 305 GetUserOrderGrant
eval_tap 0 305 'GetUserOrderGrant # SKIP deprecated' test.out

#- 306 GetUserOrderHistories
$CLI_EXE \
    --sn platform \
    --op GetUserOrderHistories \
    --namespace $AB_NAMESPACE \
    --orderNo '1DQobdll' \
    --userId 'jdv9mZvo' \
    > test.out 2>&1
eval_tap $? 306 'GetUserOrderHistories' test.out

#- 307 ProcessUserOrderNotification
# body param: body
echo '{"additionalData": {"cardSummary": "tyJ52XQz"}, "authorisedTime": "1990-10-24T00:00:00Z", "chargebackReversedTime": "1997-02-12T00:00:00Z", "chargebackTime": "1971-10-09T00:00:00Z", "chargedTime": "1977-12-08T00:00:00Z", "createdTime": "1991-08-24T00:00:00Z", "currency": {"currencyCode": "C61HoYpy", "currencySymbol": "drTZuCuW", "currencyType": "VIRTUAL", "decimals": 22, "namespace": "5agfNWWl"}, "customParameters": {"uot65ynr": {}, "XqSIioWv": {}, "2ntML8F3": {}}, "extOrderNo": "xvO6TFwp", "extTxId": "Rzs82C9a", "extUserId": "7vKJVC0a", "issuedAt": "1991-08-16T00:00:00Z", "metadata": {"tTdwagm4": "AoqsPKYo", "kZ5Yrtx9": "TRNPxw63", "wRIDmZ6d": "OeN8Pqwy"}, "namespace": "BSWAw66v", "nonceStr": "Oy98SVW1", "paymentData": {"discountAmount": 85, "discountCode": "p7KCq79a", "subtotalPrice": 14, "tax": 8, "totalPrice": 74}, "paymentMethod": "3DBqH43a", "paymentMethodFee": 68, "paymentOrderNo": "av6SqBzr", "paymentProvider": "ALIPAY", "paymentProviderFee": 70, "paymentStationUrl": "ZASUqnjJ", "price": 80, "refundedTime": "1998-03-10T00:00:00Z", "salesTax": 33, "sandbox": false, "sku": "HK0t89Xu", "status": "CHARGEBACK", "statusReason": "WTHFZWdb", "subscriptionId": "rFNlrKYL", "subtotalPrice": 48, "targetNamespace": "4wQKmijr", "targetUserId": "oa7YEzEK", "tax": 35, "totalPrice": 57, "totalTax": 45, "txEndTime": "1978-07-03T00:00:00Z", "type": "7x4E6I3D", "userId": "QozJ2waB", "vat": 74}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ProcessUserOrderNotification \
    --namespace $AB_NAMESPACE \
    --orderNo 'awwJ8VVc' \
    --userId '8ZMq5ePW' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 307 'ProcessUserOrderNotification' test.out

#- 308 DownloadUserOrderReceipt
$CLI_EXE \
    --sn platform \
    --op DownloadUserOrderReceipt \
    --namespace $AB_NAMESPACE \
    --orderNo '9h4mZ8aI' \
    --userId 'Dfj6iJMi' \
    > test.out 2>&1
eval_tap $? 308 'DownloadUserOrderReceipt' test.out

#- 309 CreateUserPaymentOrder
# body param: body
echo '{"currencyCode": "xfgZ0Gml", "currencyNamespace": "Vb8vOw5v", "customParameters": {"gcGSUVf9": {}, "otCX6sgH": {}, "yKvCdNyh": {}}, "description": "pHAVQBdt", "extOrderNo": "wdae61CT", "extUserId": "jQxHagv3", "itemType": "CODE", "language": "Unrq", "metadata": {"tRfuGBdh": "AJTf1FST", "25ufnNOZ": "XdTqpHTK", "jnfUuLOu": "TCTSVsdA"}, "notifyUrl": "Jq1YQj2D", "omitNotification": false, "platform": "JexWyAV0", "price": 7, "recurringPaymentOrderNo": "JsZCBmqr", "region": "ic95niyc", "returnUrl": "yv4GoMQJ", "sandbox": false, "sku": "zxt8IKsm", "subscriptionId": "iPjiqKhH", "title": "EoyAzT3w"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateUserPaymentOrder \
    --namespace $AB_NAMESPACE \
    --userId 'HGKxCf1R' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 309 'CreateUserPaymentOrder' test.out

#- 310 RefundUserPaymentOrder
# body param: body
echo '{"description": "B8x8wIpx"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RefundUserPaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'Ifqavaqu' \
    --userId 'gAnKeXst' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 310 'RefundUserPaymentOrder' test.out

#- 311 GetUserPlatformAccountClosureHistories
$CLI_EXE \
    --sn platform \
    --op GetUserPlatformAccountClosureHistories \
    --namespace $AB_NAMESPACE \
    --userId 'V3bKzhMv' \
    > test.out 2>&1
eval_tap $? 311 'GetUserPlatformAccountClosureHistories' test.out

#- 312 ApplyUserRedemption
# body param: body
echo '{"code": "sto9XVBD", "orderNo": "8nRNu8E1"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ApplyUserRedemption \
    --namespace $AB_NAMESPACE \
    --userId 'ISAmAQfk' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 312 'ApplyUserRedemption' test.out

#- 313 DoRevocation
# body param: body
echo '{"meta": {"vswVEfnj": {}, "kLpKw6CG": {}, "4Em6sd5L": {}}, "reason": "gRTacaOh", "requestId": "Xa6ZeL7r", "revokeEntries": [{"currency": {"balanceOrigin": "Playstation", "currencyCode": "SaVr6lyl", "namespace": "qKszurxm"}, "entitlement": {"entitlementId": "2M03aogj"}, "item": {"entitlementOrigin": "Oculus", "itemIdentity": "Q8dwZKGT", "itemIdentityType": "ITEM_SKU", "origin": "System"}, "quantity": 42, "type": "CURRENCY"}, {"currency": {"balanceOrigin": "GooglePlay", "currencyCode": "GTRWZWAr", "namespace": "gRrkZlF2"}, "entitlement": {"entitlementId": "hrcjGT8s"}, "item": {"entitlementOrigin": "Twitch", "itemIdentity": "ATAAOxNf", "itemIdentityType": "ITEM_ID", "origin": "Xbox"}, "quantity": 5, "type": "ENTITLEMENT"}, {"currency": {"balanceOrigin": "IOS", "currencyCode": "HduGFab3", "namespace": "fATLLXHR"}, "entitlement": {"entitlementId": "YTVsdDOX"}, "item": {"entitlementOrigin": "Other", "itemIdentity": "jr2uEaKT", "itemIdentityType": "ITEM_ID", "origin": "IOS"}, "quantity": 9, "type": "ENTITLEMENT"}], "source": "DLC", "transactionId": "l3kqMPV6"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op DoRevocation \
    --namespace $AB_NAMESPACE \
    --userId 'a6ccD23y' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 313 'DoRevocation' test.out

#- 314 RegisterXblSessions
# body param: body
echo '{"gameSessionId": "e4EgeoZm", "payload": {"BCX40DE4": {}, "5W9sOQJM": {}, "rtWsD84W": {}}, "scid": "UekEfYms", "sessionTemplateName": "6m7XG6Dq"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RegisterXblSessions \
    --namespace $AB_NAMESPACE \
    --userId 'mbQyHE5q' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 314 'RegisterXblSessions' test.out

#- 315 QueryUserSubscriptions
$CLI_EXE \
    --sn platform \
    --op QueryUserSubscriptions \
    --namespace $AB_NAMESPACE \
    --userId 'jMeP8BBi' \
    --chargeStatus 'NEVER' \
    --itemId '1ElMjwEs' \
    --limit '7' \
    --offset '79' \
    --sku 'cN2OjlZN' \
    --status 'ACTIVE' \
    --subscribedBy 'USER' \
    > test.out 2>&1
eval_tap $? 315 'QueryUserSubscriptions' test.out

#- 316 GetUserSubscriptionActivities
$CLI_EXE \
    --sn platform \
    --op GetUserSubscriptionActivities \
    --namespace $AB_NAMESPACE \
    --userId 'eUUkiHFZ' \
    --excludeSystem 'true' \
    --limit '56' \
    --offset '72' \
    --subscriptionId '1AMQqabS' \
    > test.out 2>&1
eval_tap $? 316 'GetUserSubscriptionActivities' test.out

#- 317 PlatformSubscribeSubscription
# body param: body
echo '{"grantDays": 99, "itemId": "CtFZ68lk", "language": "vLVLzmpq", "reason": "X1mHmc47", "region": "85Z4LNfW", "source": "8Rac87IR"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PlatformSubscribeSubscription \
    --namespace $AB_NAMESPACE \
    --userId 'v6r0j21k' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 317 'PlatformSubscribeSubscription' test.out

#- 318 CheckUserSubscriptionSubscribableByItemId
$CLI_EXE \
    --sn platform \
    --op CheckUserSubscriptionSubscribableByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'Uj3F8wDm' \
    --itemId 'd12GOgCe' \
    > test.out 2>&1
eval_tap $? 318 'CheckUserSubscriptionSubscribableByItemId' test.out

#- 319 GetUserSubscription
$CLI_EXE \
    --sn platform \
    --op GetUserSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'z6t9C4Wm' \
    --userId 'PuHXdNIv' \
    > test.out 2>&1
eval_tap $? 319 'GetUserSubscription' test.out

#- 320 DeleteUserSubscription
$CLI_EXE \
    --sn platform \
    --op DeleteUserSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'cIaEXI0H' \
    --userId 'Bpa5h1dL' \
    > test.out 2>&1
eval_tap $? 320 'DeleteUserSubscription' test.out

#- 321 CancelSubscription
# body param: body
echo '{"immediate": true, "reason": "7Yd59yih"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CancelSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId '46mSWX5y' \
    --userId '9vt3byHW' \
    --force 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 321 'CancelSubscription' test.out

#- 322 GrantDaysToSubscription
# body param: body
echo '{"grantDays": 86, "reason": "ZGsdM69H"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op GrantDaysToSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'z2aa4nyO' \
    --userId 'ay6lmExk' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 322 'GrantDaysToSubscription' test.out

#- 323 GetUserSubscriptionBillingHistories
$CLI_EXE \
    --sn platform \
    --op GetUserSubscriptionBillingHistories \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'hTA1a9FU' \
    --userId 'FIbKi4TB' \
    --excludeFree 'true' \
    --limit '66' \
    --offset '68' \
    > test.out 2>&1
eval_tap $? 323 'GetUserSubscriptionBillingHistories' test.out

#- 324 ProcessUserSubscriptionNotification
# body param: body
echo '{"additionalData": {"cardSummary": "iwXYOXOH"}, "authorisedTime": "1999-07-30T00:00:00Z", "chargebackReversedTime": "1989-11-09T00:00:00Z", "chargebackTime": "1986-05-04T00:00:00Z", "chargedTime": "1975-10-28T00:00:00Z", "createdTime": "1986-07-10T00:00:00Z", "currency": {"currencyCode": "w6wZ8wrP", "currencySymbol": "gQG1k71n", "currencyType": "VIRTUAL", "decimals": 32, "namespace": "gNvtWVCn"}, "customParameters": {"FLlF4flD": {}, "Dfc7HVyW": {}, "ApzbejJb": {}}, "extOrderNo": "T2A7e0MN", "extTxId": "a2By2SSw", "extUserId": "7H3jY7ta", "issuedAt": "1979-09-30T00:00:00Z", "metadata": {"hMtUTflH": "xpXnMPD8", "0Fuo68V3": "YdbS6tij", "hn9rdtkV": "ewfnpceG"}, "namespace": "srHHvz87", "nonceStr": "siGJcun1", "paymentData": {"discountAmount": 37, "discountCode": "IKF3Sc8M", "subtotalPrice": 98, "tax": 18, "totalPrice": 43}, "paymentMethod": "07mISH7I", "paymentMethodFee": 62, "paymentOrderNo": "DIYLskkc", "paymentProvider": "CHECKOUT", "paymentProviderFee": 5, "paymentStationUrl": "HdO76CPo", "price": 40, "refundedTime": "1979-03-24T00:00:00Z", "salesTax": 48, "sandbox": false, "sku": "qv0WbQlV", "status": "DELETED", "statusReason": "jt7UMJZR", "subscriptionId": "e0ZgMvks", "subtotalPrice": 83, "targetNamespace": "qzo4Qy6V", "targetUserId": "WQIPoCfY", "tax": 25, "totalPrice": 60, "totalTax": 35, "txEndTime": "1983-10-30T00:00:00Z", "type": "rWa75KoV", "userId": "d7Wyq219", "vat": 13}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ProcessUserSubscriptionNotification \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'JefqGwTj' \
    --userId '4VM8GJWf' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 324 'ProcessUserSubscriptionNotification' test.out

#- 325 AcquireUserTicket
# body param: body
echo '{"count": 40, "orderNo": "PVtl5dvq"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op AcquireUserTicket \
    --boothName 'EyQo3J3w' \
    --namespace $AB_NAMESPACE \
    --userId '6Uj7sno4' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 325 'AcquireUserTicket' test.out

#- 326 QueryUserCurrencyWallets
$CLI_EXE \
    --sn platform \
    --op QueryUserCurrencyWallets \
    --namespace $AB_NAMESPACE \
    --userId 'lshGElwN' \
    > test.out 2>&1
eval_tap $? 326 'QueryUserCurrencyWallets' test.out

#- 327 DebitUserWalletByCurrencyCode
# body param: body
echo '{"allowOverdraft": false, "amount": 38, "balanceOrigin": "Steam", "balanceSource": "OTHER", "metadata": {"WbjZXPO7": {}, "Ypyx9pJU": {}, "2d0aHxVa": {}}, "reason": "yJjbcQiP"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op DebitUserWalletByCurrencyCode \
    --currencyCode 'GLaGROe3' \
    --namespace $AB_NAMESPACE \
    --userId '39ocpDcu' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 327 'DebitUserWalletByCurrencyCode' test.out

#- 328 ListUserCurrencyTransactions
$CLI_EXE \
    --sn platform \
    --op ListUserCurrencyTransactions \
    --currencyCode 'bPi0oGbm' \
    --namespace $AB_NAMESPACE \
    --userId 'FQRIJThb' \
    --limit '21' \
    --offset '92' \
    > test.out 2>&1
eval_tap $? 328 'ListUserCurrencyTransactions' test.out

#- 329 CheckBalance
# body param: request
echo '{"amount": 46, "debitBalanceSource": "IAP_REVOCATION", "metadata": {"J1bQsiLB": {}, "U7OwK2iB": {}, "5BLP1Lhi": {}}, "reason": "enDs2r83", "walletPlatform": "Steam"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CheckBalance \
    --currencyCode 'ZuG15M8s' \
    --namespace $AB_NAMESPACE \
    --userId 'sjlMSTDb' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 329 'CheckBalance' test.out

#- 330 CheckWallet
eval_tap 0 330 'CheckWallet # SKIP deprecated' test.out

#- 331 CreditUserWallet
# body param: body
echo '{"amount": 86, "expireAt": "1982-02-23T00:00:00Z", "metadata": {"ufNXGpqA": {}, "oek71nUs": {}, "xqfs9FlC": {}}, "origin": "Twitch", "reason": "LqyAT5Sv", "source": "REFUND"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreditUserWallet \
    --currencyCode '3fn9edDg' \
    --namespace $AB_NAMESPACE \
    --userId 'ThF33bmk' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 331 'CreditUserWallet' test.out

#- 332 DebitByWalletPlatform
# body param: request
echo '{"amount": 65, "debitBalanceSource": "EXPIRATION", "metadata": {"rfbH0mzG": {}, "ucFcLZlg": {}, "dwKid5Gn": {}}, "reason": "SQvJhDBZ", "walletPlatform": "GooglePlay"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op DebitByWalletPlatform \
    --currencyCode 'G8OEExsA' \
    --namespace $AB_NAMESPACE \
    --userId 'gRWhMvy4' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 332 'DebitByWalletPlatform' test.out

#- 333 PayWithUserWallet
# body param: body
echo '{"amount": 58, "metadata": {"4tSjDM9C": {}, "TDc18CEB": {}, "4CIA0g5A": {}}, "walletPlatform": "IOS"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PayWithUserWallet \
    --currencyCode 'gpZyQAYT' \
    --namespace $AB_NAMESPACE \
    --userId 'N26GlWb7' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 333 'PayWithUserWallet' test.out

#- 334 GetUserWallet
eval_tap 0 334 'GetUserWallet # SKIP deprecated' test.out

#- 335 DebitUserWallet
eval_tap 0 335 'DebitUserWallet # SKIP deprecated' test.out

#- 336 DisableUserWallet
eval_tap 0 336 'DisableUserWallet # SKIP deprecated' test.out

#- 337 EnableUserWallet
eval_tap 0 337 'EnableUserWallet # SKIP deprecated' test.out

#- 338 ListUserWalletTransactions
eval_tap 0 338 'ListUserWalletTransactions # SKIP deprecated' test.out

#- 339 ListViews
$CLI_EXE \
    --sn platform \
    --op ListViews \
    --namespace $AB_NAMESPACE \
    --storeId 'f2a2xv8w' \
    > test.out 2>&1
eval_tap $? 339 'ListViews' test.out

#- 340 CreateView
# body param: body
echo '{"displayOrder": 84, "localizations": {"GR8Y5o8Z": {"description": "L8RjQbea", "localExt": {"Zr01SMQT": {}, "FsNL3lNf": {}, "X27sy2TQ": {}}, "longDescription": "qdJhI5uq", "title": "bMFYrKFw"}, "YPof6AMi": {"description": "gfXhQS0z", "localExt": {"woJrekqb": {}, "vrZf1zYP": {}, "NF4Bskg2": {}}, "longDescription": "qDgEJT1J", "title": "bH7S5PwC"}, "sdkLBsD4": {"description": "GJwaFhNZ", "localExt": {"fl2iBLJV": {}, "aFMxgro2": {}, "hOdfOBlr": {}}, "longDescription": "FlAGwDCA", "title": "V5W382rW"}}, "name": "FdieSuos"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateView \
    --namespace $AB_NAMESPACE \
    --storeId 'iBet54DA' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 340 'CreateView' test.out

#- 341 GetView
$CLI_EXE \
    --sn platform \
    --op GetView \
    --namespace $AB_NAMESPACE \
    --viewId 'qaOA1CrR' \
    --storeId 'RJjyvet9' \
    > test.out 2>&1
eval_tap $? 341 'GetView' test.out

#- 342 UpdateView
# body param: body
echo '{"displayOrder": 48, "localizations": {"g5jSVe1A": {"description": "MaiOSi3X", "localExt": {"X2w0J2iC": {}, "uxu0Bl2e": {}, "eQ3KkUlr": {}}, "longDescription": "lgnGVk9m", "title": "MFszTlaC"}, "Fi3clHOI": {"description": "CD6d3L6W", "localExt": {"qeZi3jnw": {}, "CDjzyFfj": {}, "SH56uZ2n": {}}, "longDescription": "8Hg94ynB", "title": "Edm0tOP1"}, "sGCymrH2": {"description": "PkiTTleV", "localExt": {"U5mQYMJ0": {}, "froYx80u": {}, "kiT0U8ek": {}}, "longDescription": "0JZ622Ap", "title": "aSCC35PP"}}, "name": "7XyGQBtw"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateView \
    --namespace $AB_NAMESPACE \
    --viewId '3JQuZOe8' \
    --storeId 'igwXELpj' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 342 'UpdateView' test.out

#- 343 DeleteView
$CLI_EXE \
    --sn platform \
    --op DeleteView \
    --namespace $AB_NAMESPACE \
    --viewId 'r6pmxTvY' \
    --storeId 'YLCpaRsT' \
    > test.out 2>&1
eval_tap $? 343 'DeleteView' test.out

#- 344 GetWalletConfig
$CLI_EXE \
    --sn platform \
    --op GetWalletConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 344 'GetWalletConfig' test.out

#- 345 UpdateWalletConfig
# body param: body
echo '{"enablePaidForVCExpiration": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateWalletConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 345 'UpdateWalletConfig' test.out

#- 346 QueryWallets
eval_tap 0 346 'QueryWallets # SKIP deprecated' test.out

#- 347 BulkCredit
# body param: body
echo '[{"creditRequest": {"amount": 4, "expireAt": "1990-06-23T00:00:00Z", "metadata": {"Ibdg9PdC": {}, "AzPnbbS8": {}, "BMkVVWmC": {}}, "origin": "Xbox", "reason": "DnczzQMK", "source": "REWARD"}, "currencyCode": "UzxM75c9", "userIds": ["fyAnehKT", "RY50lkib", "zUIVgpJR"]}, {"creditRequest": {"amount": 58, "expireAt": "1978-08-27T00:00:00Z", "metadata": {"qRRmUhka": {}, "Jh2jlGWp": {}, "nMsaolwQ": {}}, "origin": "Epic", "reason": "g3WBNr5v", "source": "IAP"}, "currencyCode": "CqmdUawc", "userIds": ["c3aflJvp", "iY4L3GXc", "bqoYNvg9"]}, {"creditRequest": {"amount": 52, "expireAt": "1973-07-07T00:00:00Z", "metadata": {"IseCw5BT": {}, "VgZeczaM": {}, "kliLuTwL": {}}, "origin": "Nintendo", "reason": "bJlekOUc", "source": "CONSUME_ENTITLEMENT"}, "currencyCode": "CDzc66Lu", "userIds": ["BGDiRIZy", "V5YRHgCa", "XXcgS1Xb"]}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op BulkCredit \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 347 'BulkCredit' test.out

#- 348 BulkDebit
# body param: body
echo '[{"currencyCode": "hsUrgFqv", "request": {"allowOverdraft": false, "amount": 5, "balanceOrigin": "Steam", "balanceSource": "EXPIRATION", "metadata": {"psLydfuE": {}, "49J0BMID": {}, "IF0KgqSy": {}}, "reason": "SPW7RbPM"}, "userIds": ["Ajy4wLR9", "vbdJtJQT", "KZcRpNeE"]}, {"currencyCode": "FNjKamBl", "request": {"allowOverdraft": true, "amount": 53, "balanceOrigin": "GooglePlay", "balanceSource": "EXPIRATION", "metadata": {"hR1kp7Sr": {}, "ORDqjOqe": {}, "YPUQNAJo": {}}, "reason": "9ibSAZ6r"}, "userIds": ["RGwhK25u", "4lZxUkj1", "7b5xBGLC"]}, {"currencyCode": "MawtBXoN", "request": {"allowOverdraft": false, "amount": 41, "balanceOrigin": "GooglePlay", "balanceSource": "EXPIRATION", "metadata": {"7pxLYiYf": {}, "HkrjWZmd": {}, "m2h25hMO": {}}, "reason": "O6GhI538"}, "userIds": ["sJAL3B6o", "VG1CYOmK", "bja8T7qk"]}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op BulkDebit \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 348 'BulkDebit' test.out

#- 349 GetWallet
eval_tap 0 349 'GetWallet # SKIP deprecated' test.out

#- 350 SyncOrders
$CLI_EXE \
    --sn platform \
    --op SyncOrders \
    --nextEvaluatedKey 'Lr4xpXEU' \
    --end 'LARO3r2d' \
    --start 'o7TlFks9' \
    > test.out 2>&1
eval_tap $? 350 'SyncOrders' test.out

#- 351 TestAdyenConfig
# body param: body
echo '{"allowedPaymentMethods": ["jamlWCJH", "yqAnYDfP", "AAqupXO8"], "apiKey": "85NTt9Tu", "authoriseAsCapture": false, "blockedPaymentMethods": ["xgN3kt4E", "5xhifH2r", "gI12ZBy2"], "clientKey": "dLKVUEeM", "dropInSettings": "WFVqAYkY", "liveEndpointUrlPrefix": "M9IqwIzw", "merchantAccount": "4DPQgOoC", "notificationHmacKey": "GK1qtAi0", "notificationPassword": "Twe6LvR0", "notificationUsername": "jGCTkfxK", "returnUrl": "oNQlbSRl", "settings": "wNoNhz22"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestAdyenConfig \
    --sandbox 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 351 'TestAdyenConfig' test.out

#- 352 TestAliPayConfig
# body param: body
echo '{"appId": "Dn85ofBx", "privateKey": "GUw1Kowl", "publicKey": "7YVwdwx0", "returnUrl": "EBbXAKk4"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestAliPayConfig \
    --sandbox 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 352 'TestAliPayConfig' test.out

#- 353 TestCheckoutConfig
# body param: body
echo '{"publicKey": "bG8cvET2", "secretKey": "jezkfMPF"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestCheckoutConfig \
    --sandbox 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 353 'TestCheckoutConfig' test.out

#- 354 DebugMatchedPaymentMerchantConfig
$CLI_EXE \
    --sn platform \
    --op DebugMatchedPaymentMerchantConfig \
    --namespace_ 'gCM9z7tT' \
    --region 'BVwjcklr' \
    > test.out 2>&1
eval_tap $? 354 'DebugMatchedPaymentMerchantConfig' test.out

#- 355 TestNeonPayConfig
# body param: body
echo '{"apiKey": "lWElTPQr", "webhookSecretKey": "EUjIRPY6"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestNeonPayConfig \
    --sandbox 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 355 'TestNeonPayConfig' test.out

#- 356 TestPayPalConfig
# body param: body
echo '{"clientID": "z9XB88qE", "clientSecret": "zoU4FmUD", "returnUrl": "0Ync4pqV", "webHookId": "X4gdRKof"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestPayPalConfig \
    --sandbox 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 356 'TestPayPalConfig' test.out

#- 357 TestStripeConfig
# body param: body
echo '{"allowedPaymentMethodTypes": ["86wx2xCW", "uyppLhZm", "ooxWJxpo"], "publishableKey": "O7vRnbjC", "secretKey": "59AyGhoT", "webhookSecret": "xJM9UUPU"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestStripeConfig \
    --sandbox 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 357 'TestStripeConfig' test.out

#- 358 TestWxPayConfig
# body param: body
echo '{"appId": "Xcp77xVC", "key": "xUEvQDYJ", "mchid": "gMQAjB5u", "returnUrl": "WAQcYj3Z"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestWxPayConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 358 'TestWxPayConfig' test.out

#- 359 TestXsollaConfig
# body param: body
echo '{"apiKey": "5nzhz53d", "flowCompletionUrl": "dh9UnwOt", "merchantId": 56, "projectId": 43, "projectSecretKey": "Y7NqGFRB"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestXsollaConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 359 'TestXsollaConfig' test.out

#- 360 GetPaymentMerchantConfig1
$CLI_EXE \
    --sn platform \
    --op GetPaymentMerchantConfig1 \
    --id 'QTCfpvEd' \
    > test.out 2>&1
eval_tap $? 360 'GetPaymentMerchantConfig1' test.out

#- 361 UpdateAdyenConfig
# body param: body
echo '{"allowedPaymentMethods": ["sC6hQgNW", "MzDf9RGd", "1zYbi7jE"], "apiKey": "M3uNpITm", "authoriseAsCapture": true, "blockedPaymentMethods": ["F17kZajw", "Idp8Dv8o", "WqcuQPm1"], "clientKey": "cXDohf0a", "dropInSettings": "vfRB6Kax", "liveEndpointUrlPrefix": "OPjHjTyG", "merchantAccount": "Uoak6M1t", "notificationHmacKey": "bISniloW", "notificationPassword": "mlVzzRSv", "notificationUsername": "sRSfMw7Y", "returnUrl": "0sMphnAX", "settings": "aSHUP30I"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateAdyenConfig \
    --id 'U1GkuiJf' \
    --sandbox 'false' \
    --validate 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 361 'UpdateAdyenConfig' test.out

#- 362 TestAdyenConfigById
$CLI_EXE \
    --sn platform \
    --op TestAdyenConfigById \
    --id 'CGAooLmU' \
    --sandbox 'true' \
    > test.out 2>&1
eval_tap $? 362 'TestAdyenConfigById' test.out

#- 363 UpdateAliPayConfig
# body param: body
echo '{"appId": "gBBzzOyT", "privateKey": "UaG5nIcH", "publicKey": "6W2kA2Ob", "returnUrl": "0hHdjEx4"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateAliPayConfig \
    --id 'Sz80yBIG' \
    --sandbox 'false' \
    --validate 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 363 'UpdateAliPayConfig' test.out

#- 364 TestAliPayConfigById
$CLI_EXE \
    --sn platform \
    --op TestAliPayConfigById \
    --id 'tcWkqJua' \
    --sandbox 'false' \
    > test.out 2>&1
eval_tap $? 364 'TestAliPayConfigById' test.out

#- 365 UpdateCheckoutConfig
# body param: body
echo '{"publicKey": "nUYe7uLd", "secretKey": "8hCuG87M"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCheckoutConfig \
    --id 'P1BA4yqe' \
    --sandbox 'false' \
    --validate 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 365 'UpdateCheckoutConfig' test.out

#- 366 TestCheckoutConfigById
$CLI_EXE \
    --sn platform \
    --op TestCheckoutConfigById \
    --id 'V87LTiVV' \
    --sandbox 'false' \
    > test.out 2>&1
eval_tap $? 366 'TestCheckoutConfigById' test.out

#- 367 UpdateNeonPayConfig
# body param: body
echo '{"apiKey": "oUosChJQ", "webhookSecretKey": "rzqGZroq"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateNeonPayConfig \
    --id 'Y22NOVvq' \
    --sandbox 'true' \
    --validate 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 367 'UpdateNeonPayConfig' test.out

#- 368 TestNeonPayConfigById
$CLI_EXE \
    --sn platform \
    --op TestNeonPayConfigById \
    --id '8hdRmnHe' \
    --sandbox 'true' \
    > test.out 2>&1
eval_tap $? 368 'TestNeonPayConfigById' test.out

#- 369 UpdatePayPalConfig
# body param: body
echo '{"clientID": "uPIonJS9", "clientSecret": "LqldD9Yn", "returnUrl": "cBYXyR3O", "webHookId": "VuL7MYZQ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePayPalConfig \
    --id 'isRUWVbM' \
    --sandbox 'false' \
    --validate 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 369 'UpdatePayPalConfig' test.out

#- 370 TestPayPalConfigById
$CLI_EXE \
    --sn platform \
    --op TestPayPalConfigById \
    --id 'JvnNheuu' \
    --sandbox 'false' \
    > test.out 2>&1
eval_tap $? 370 'TestPayPalConfigById' test.out

#- 371 UpdateStripeConfig
# body param: body
echo '{"allowedPaymentMethodTypes": ["7iBxB1aq", "KQuKmByb", "DuDqiQjC"], "publishableKey": "3tDymvsj", "secretKey": "LnqenYpF", "webhookSecret": "xqt1c1q7"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateStripeConfig \
    --id 'z5hirqZL' \
    --sandbox 'false' \
    --validate 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 371 'UpdateStripeConfig' test.out

#- 372 TestStripeConfigById
$CLI_EXE \
    --sn platform \
    --op TestStripeConfigById \
    --id 'a3iXe0lH' \
    --sandbox 'false' \
    > test.out 2>&1
eval_tap $? 372 'TestStripeConfigById' test.out

#- 373 UpdateWxPayConfig
# body param: body
echo '{"appId": "sIkiipgl", "key": "1wOYhnf8", "mchid": "okSrvXCj", "returnUrl": "7WqEWYUg"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateWxPayConfig \
    --id 'CkfizErd' \
    --validate 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 373 'UpdateWxPayConfig' test.out

#- 374 UpdateWxPayConfigCert
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UpdateWxPayConfigCert \
    --id 'xaKuLZ5q' \
    --upload file $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 374 'UpdateWxPayConfigCert' test.out

#- 375 TestWxPayConfigById
$CLI_EXE \
    --sn platform \
    --op TestWxPayConfigById \
    --id 'oMuOyITg' \
    > test.out 2>&1
eval_tap $? 375 'TestWxPayConfigById' test.out

#- 376 UpdateXsollaConfig
# body param: body
echo '{"apiKey": "Y1Lx0v1K", "flowCompletionUrl": "xZFftvXE", "merchantId": 23, "projectId": 48, "projectSecretKey": "O2MxzRxW"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXsollaConfig \
    --id 'C6pynOKw' \
    --validate 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 376 'UpdateXsollaConfig' test.out

#- 377 TestXsollaConfigById
$CLI_EXE \
    --sn platform \
    --op TestXsollaConfigById \
    --id 'loeesBKZ' \
    > test.out 2>&1
eval_tap $? 377 'TestXsollaConfigById' test.out

#- 378 UpdateXsollaUIConfig
# body param: body
echo '{"device": "DESKTOP", "showCloseButton": true, "size": "MEDIUM", "theme": "DARK"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXsollaUIConfig \
    --id 'W07EqRON' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 378 'UpdateXsollaUIConfig' test.out

#- 379 QueryPaymentProviderConfig
$CLI_EXE \
    --sn platform \
    --op QueryPaymentProviderConfig \
    --limit '58' \
    --namespace_ 'LvQ6tcyg' \
    --offset '61' \
    --region 'FYTS9MUq' \
    > test.out 2>&1
eval_tap $? 379 'QueryPaymentProviderConfig' test.out

#- 380 CreatePaymentProviderConfig
# body param: body
echo '{"aggregate": "XSOLLA", "namespace": "sb7nnqQ7", "region": "XiAvbCb5", "sandboxTaxJarApiToken": "xYlv7HrS", "specials": ["ADYEN", "ALIPAY", "XSOLLA"], "taxJarApiToken": "VyFqndQO", "taxJarEnabled": true, "useGlobalTaxJarApiToken": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreatePaymentProviderConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 380 'CreatePaymentProviderConfig' test.out

#- 381 GetAggregatePaymentProviders
$CLI_EXE \
    --sn platform \
    --op GetAggregatePaymentProviders \
    > test.out 2>&1
eval_tap $? 381 'GetAggregatePaymentProviders' test.out

#- 382 DebugMatchedPaymentProviderConfig
$CLI_EXE \
    --sn platform \
    --op DebugMatchedPaymentProviderConfig \
    --namespace_ 'toBseBrF' \
    --region 'qRqUXsoA' \
    > test.out 2>&1
eval_tap $? 382 'DebugMatchedPaymentProviderConfig' test.out

#- 383 GetSpecialPaymentProviders
$CLI_EXE \
    --sn platform \
    --op GetSpecialPaymentProviders \
    > test.out 2>&1
eval_tap $? 383 'GetSpecialPaymentProviders' test.out

#- 384 UpdatePaymentProviderConfig
# body param: body
echo '{"aggregate": "ADYEN", "namespace": "i9ieyesT", "region": "4tZjg46W", "sandboxTaxJarApiToken": "3khaJh66", "specials": ["CHECKOUT", "WALLET", "PAYPAL"], "taxJarApiToken": "f89ov6Uv", "taxJarEnabled": false, "useGlobalTaxJarApiToken": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePaymentProviderConfig \
    --id 'fe4PIHHA' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 384 'UpdatePaymentProviderConfig' test.out

#- 385 DeletePaymentProviderConfig
$CLI_EXE \
    --sn platform \
    --op DeletePaymentProviderConfig \
    --id '8iv0tvcc' \
    > test.out 2>&1
eval_tap $? 385 'DeletePaymentProviderConfig' test.out

#- 386 GetPaymentTaxConfig
$CLI_EXE \
    --sn platform \
    --op GetPaymentTaxConfig \
    > test.out 2>&1
eval_tap $? 386 'GetPaymentTaxConfig' test.out

#- 387 UpdatePaymentTaxConfig
# body param: body
echo '{"sandboxTaxJarApiToken": "xdoxo3gg", "taxJarApiToken": "Q05JYU7E", "taxJarEnabled": false, "taxJarProductCodesMapping": {"jCrsIIdn": "1eKAr2jm", "JbNc0Vpo": "y25Yp7T8", "PkvmXV8u": "Sh1fOIvh"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePaymentTaxConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 387 'UpdatePaymentTaxConfig' test.out

#- 388 SyncPaymentOrders
$CLI_EXE \
    --sn platform \
    --op SyncPaymentOrders \
    --nextEvaluatedKey 'ryYV6B9i' \
    --end 'QeJJ1P8Q' \
    --start 'sreDok0Y' \
    > test.out 2>&1
eval_tap $? 388 'SyncPaymentOrders' test.out

#- 389 PublicGetRootCategories
$CLI_EXE \
    --sn platform \
    --op PublicGetRootCategories \
    --namespace $AB_NAMESPACE \
    --language 'XeSGNF8l' \
    --storeId 'Dz5CdKKW' \
    > test.out 2>&1
eval_tap $? 389 'PublicGetRootCategories' test.out

#- 390 DownloadCategories
$CLI_EXE \
    --sn platform \
    --op DownloadCategories \
    --namespace $AB_NAMESPACE \
    --language 'X5ceLrrp' \
    --storeId 'a28aRinP' \
    > test.out 2>&1
eval_tap $? 390 'DownloadCategories' test.out

#- 391 PublicGetCategory
$CLI_EXE \
    --sn platform \
    --op PublicGetCategory \
    --categoryPath '7Elv1u5j' \
    --namespace $AB_NAMESPACE \
    --language 'gCcbFQUP' \
    --storeId '2yXmzhQE' \
    > test.out 2>&1
eval_tap $? 391 'PublicGetCategory' test.out

#- 392 PublicGetChildCategories
$CLI_EXE \
    --sn platform \
    --op PublicGetChildCategories \
    --categoryPath 'gWpmho8t' \
    --namespace $AB_NAMESPACE \
    --language 'Q3ftB85O' \
    --storeId '6LNx2xwk' \
    > test.out 2>&1
eval_tap $? 392 'PublicGetChildCategories' test.out

#- 393 PublicGetDescendantCategories
$CLI_EXE \
    --sn platform \
    --op PublicGetDescendantCategories \
    --categoryPath 'ihLWV3hY' \
    --namespace $AB_NAMESPACE \
    --language 'xv75vBjh' \
    --storeId 'XdpAuxzB' \
    > test.out 2>&1
eval_tap $? 393 'PublicGetDescendantCategories' test.out

#- 394 PublicListCurrencies
$CLI_EXE \
    --sn platform \
    --op PublicListCurrencies \
    --namespace $AB_NAMESPACE \
    --currencyType 'REAL' \
    > test.out 2>&1
eval_tap $? 394 'PublicListCurrencies' test.out

#- 395 GeDLCDurableRewardShortMap
$CLI_EXE \
    --sn platform \
    --op GeDLCDurableRewardShortMap \
    --namespace $AB_NAMESPACE \
    --dlcType 'PSN' \
    > test.out 2>&1
eval_tap $? 395 'GeDLCDurableRewardShortMap' test.out

#- 396 GetAppleConfigVersion
$CLI_EXE \
    --sn platform \
    --op GetAppleConfigVersion \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 396 'GetAppleConfigVersion' test.out

#- 397 GetIAPItemMapping
$CLI_EXE \
    --sn platform \
    --op GetIAPItemMapping \
    --namespace $AB_NAMESPACE \
    --platform 'TWITCH' \
    > test.out 2>&1
eval_tap $? 397 'GetIAPItemMapping' test.out

#- 398 PublicGetItemByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetItemByAppId \
    --namespace $AB_NAMESPACE \
    --language 'eWUEj5AZ' \
    --region '5T1ujftK' \
    --storeId 'pVokjG9m' \
    --appId 'bHuxORoD' \
    > test.out 2>&1
eval_tap $? 398 'PublicGetItemByAppId' test.out

#- 399 PublicQueryItems
$CLI_EXE \
    --sn platform \
    --op PublicQueryItems \
    --namespace $AB_NAMESPACE \
    --appType 'SOFTWARE' \
    --autoCalcEstimatedPrice 'true' \
    --baseAppId 'SHevnrUo' \
    --categoryPath 'qLo3THeS' \
    --features '91XWIpOV' \
    --includeSubCategoryItem 'true' \
    --itemType 'CODE' \
    --language 'x3trdqdB' \
    --limit '49' \
    --offset '46' \
    --region 'qDks2jbN' \
    --sortBy '["createdAt", "displayOrder", "updatedAt:desc"]' \
    --storeId 'YkdIogdl' \
    --tags 'JfHNHGOK' \
    > test.out 2>&1
eval_tap $? 399 'PublicQueryItems' test.out

#- 400 PublicGetItemBySku
$CLI_EXE \
    --sn platform \
    --op PublicGetItemBySku \
    --namespace $AB_NAMESPACE \
    --autoCalcEstimatedPrice 'true' \
    --language 'r3nR4cbV' \
    --region 'Pv1laQgm' \
    --storeId 'VflcRtch' \
    --sku 'Eq1yMI3v' \
    > test.out 2>&1
eval_tap $? 400 'PublicGetItemBySku' test.out

#- 401 PublicGetEstimatedPrice
$CLI_EXE \
    --sn platform \
    --op PublicGetEstimatedPrice \
    --namespace $AB_NAMESPACE \
    --region 'wESQkSaG' \
    --storeId 'u0sVZVX4' \
    --itemIds 'K73qCGUF' \
    > test.out 2>&1
eval_tap $? 401 'PublicGetEstimatedPrice' test.out

#- 402 PublicBulkGetItems
$CLI_EXE \
    --sn platform \
    --op PublicBulkGetItems \
    --namespace $AB_NAMESPACE \
    --autoCalcEstimatedPrice 'false' \
    --language 'JNsJhsJZ' \
    --region 'LPCC478w' \
    --storeId 'E7KDT0Fg' \
    --itemIds 'qI2gp8Mm' \
    > test.out 2>&1
eval_tap $? 402 'PublicBulkGetItems' test.out

#- 403 PublicValidateItemPurchaseCondition
# body param: body
echo '{"itemIds": ["5RZcSx33", "CaUCyFmB", "5mArsCqZ"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicValidateItemPurchaseCondition \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 403 'PublicValidateItemPurchaseCondition' test.out

#- 404 PublicSearchItems
$CLI_EXE \
    --sn platform \
    --op PublicSearchItems \
    --namespace $AB_NAMESPACE \
    --autoCalcEstimatedPrice 'true' \
    --itemType 'INGAMEITEM' \
    --limit '38' \
    --offset '81' \
    --region '67bnPOBu' \
    --storeId '4DcqUyAv' \
    --keyword 'qSaeEzrG' \
    --language 'aBnSpJAI' \
    > test.out 2>&1
eval_tap $? 404 'PublicSearchItems' test.out

#- 405 PublicGetApp
$CLI_EXE \
    --sn platform \
    --op PublicGetApp \
    --itemId 'pOj8l5r3' \
    --namespace $AB_NAMESPACE \
    --language 'pFh4mHHU' \
    --region 'O4wWyLxd' \
    --storeId 'XYUUCvK5' \
    > test.out 2>&1
eval_tap $? 405 'PublicGetApp' test.out

#- 406 PublicGetItemDynamicData
$CLI_EXE \
    --sn platform \
    --op PublicGetItemDynamicData \
    --itemId 'dCtVyi69' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 406 'PublicGetItemDynamicData' test.out

#- 407 PublicGetItem
$CLI_EXE \
    --sn platform \
    --op PublicGetItem \
    --itemId 'f7BJGKun' \
    --namespace $AB_NAMESPACE \
    --autoCalcEstimatedPrice 'false' \
    --language 'xvhLPBdM' \
    --populateBundle 'true' \
    --region 'am1WLrQx' \
    --storeId '0dwLkPPx' \
    > test.out 2>&1
eval_tap $? 407 'PublicGetItem' test.out

#- 408 GetPaymentCustomization
eval_tap 0 408 'GetPaymentCustomization # SKIP deprecated' test.out

#- 409 PublicGetPaymentUrl
# body param: body
echo '{"neonPayConfig": {"cancelUrl": "2EksSOHg", "successUrl": "jtsNFKKw"}, "paymentOrderNo": "KfPHFN5Z", "paymentProvider": "STRIPE", "returnUrl": "8UHM9YDW", "ui": "Bo1gxTQL", "zipCode": "XHgpd6QX"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicGetPaymentUrl \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 409 'PublicGetPaymentUrl' test.out

#- 410 PublicGetPaymentMethods
$CLI_EXE \
    --sn platform \
    --op PublicGetPaymentMethods \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo '053fpD3q' \
    > test.out 2>&1
eval_tap $? 410 'PublicGetPaymentMethods' test.out

#- 411 PublicGetUnpaidPaymentOrder
$CLI_EXE \
    --sn platform \
    --op PublicGetUnpaidPaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'Dbp89QmO' \
    > test.out 2>&1
eval_tap $? 411 'PublicGetUnpaidPaymentOrder' test.out

#- 412 Pay
# body param: body
echo '{"token": "ztozy2LW"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op Pay \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'Ob4V54tF' \
    --paymentProvider 'PAYPAL' \
    --zipCode 'ewGJhYLL' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 412 'Pay' test.out

#- 413 PublicCheckPaymentOrderPaidStatus
$CLI_EXE \
    --sn platform \
    --op PublicCheckPaymentOrderPaidStatus \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'tVTxJe71' \
    > test.out 2>&1
eval_tap $? 413 'PublicCheckPaymentOrderPaidStatus' test.out

#- 414 GetPaymentPublicConfig
$CLI_EXE \
    --sn platform \
    --op GetPaymentPublicConfig \
    --namespace $AB_NAMESPACE \
    --sandbox 'true' \
    --paymentProvider 'PAYPAL' \
    --region 'n5fPVluH' \
    > test.out 2>&1
eval_tap $? 414 'GetPaymentPublicConfig' test.out

#- 415 PublicGetQRCode
$CLI_EXE \
    --sn platform \
    --op PublicGetQRCode \
    --namespace $AB_NAMESPACE \
    --code 'c9bBdJ03' \
    > test.out 2>&1
eval_tap $? 415 'PublicGetQRCode' test.out

#- 416 PublicNormalizePaymentReturnUrl
$CLI_EXE \
    --sn platform \
    --op PublicNormalizePaymentReturnUrl \
    --namespace $AB_NAMESPACE \
    --payerID '7LcQnVBE' \
    --foreinginvoice 'jbc9DfPq' \
    --invoiceId 'SpAo8x0w' \
    --payload 'THYxmQB6' \
    --redirectResult 'dF1vWRo7' \
    --resultCode 'vh33QOm8' \
    --sessionId 'kO40XZOY' \
    --status '1lm44Bko' \
    --token 'lReDSxrG' \
    --type 'FlB2LrbM' \
    --userId 'wpmzxVFn' \
    --orderNo 'yyUWXmX4' \
    --paymentOrderNo '19PEptI6' \
    --paymentProvider 'ADYEN' \
    --returnUrl '6mo7eST2' \
    > test.out 2>&1
eval_tap $? 416 'PublicNormalizePaymentReturnUrl' test.out

#- 417 GetPaymentTaxValue
$CLI_EXE \
    --sn platform \
    --op GetPaymentTaxValue \
    --namespace $AB_NAMESPACE \
    --zipCode 'I0KtaVUr' \
    --paymentOrderNo 'meh6rhKA' \
    --paymentProvider 'STRIPE' \
    > test.out 2>&1
eval_tap $? 417 'GetPaymentTaxValue' test.out

#- 418 GetRewardByCode
$CLI_EXE \
    --sn platform \
    --op GetRewardByCode \
    --namespace $AB_NAMESPACE \
    --rewardCode 'fXTxWgtt' \
    > test.out 2>&1
eval_tap $? 418 'GetRewardByCode' test.out

#- 419 QueryRewards1
$CLI_EXE \
    --sn platform \
    --op QueryRewards1 \
    --namespace $AB_NAMESPACE \
    --eventTopic 'PZ0oGV8N' \
    --limit '57' \
    --offset '90' \
    --sortBy '["rewardCode:asc", "namespace", "rewardCode:desc"]' \
    > test.out 2>&1
eval_tap $? 419 'QueryRewards1' test.out

#- 420 GetReward1
$CLI_EXE \
    --sn platform \
    --op GetReward1 \
    --namespace $AB_NAMESPACE \
    --rewardId 'iG77MumJ' \
    > test.out 2>&1
eval_tap $? 420 'GetReward1' test.out

#- 421 PublicListStores
$CLI_EXE \
    --sn platform \
    --op PublicListStores \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 421 'PublicListStores' test.out

#- 422 PublicExistsAnyMyActiveEntitlement
$CLI_EXE \
    --sn platform \
    --op PublicExistsAnyMyActiveEntitlement \
    --namespace $AB_NAMESPACE \
    --appIds '["Jk930pjy", "KOXALidN", "nzoQj0MS"]' \
    --itemIds '["Z3Vu444T", "pf7WpKXK", "Ws08MqaR"]' \
    --skus '["v82GOP1M", "yts0cEtc", "gG4G7FcP"]' \
    > test.out 2>&1
eval_tap $? 422 'PublicExistsAnyMyActiveEntitlement' test.out

#- 423 PublicGetMyAppEntitlementOwnershipByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetMyAppEntitlementOwnershipByAppId \
    --namespace $AB_NAMESPACE \
    --appId 'GHFe3yaj' \
    > test.out 2>&1
eval_tap $? 423 'PublicGetMyAppEntitlementOwnershipByAppId' test.out

#- 424 PublicGetMyEntitlementOwnershipByItemId
$CLI_EXE \
    --sn platform \
    --op PublicGetMyEntitlementOwnershipByItemId \
    --namespace $AB_NAMESPACE \
    --entitlementClazz 'CODE' \
    --itemId 'YMy3cXKA' \
    > test.out 2>&1
eval_tap $? 424 'PublicGetMyEntitlementOwnershipByItemId' test.out

#- 425 PublicGetMyEntitlementOwnershipBySku
$CLI_EXE \
    --sn platform \
    --op PublicGetMyEntitlementOwnershipBySku \
    --namespace $AB_NAMESPACE \
    --entitlementClazz 'LOOTBOX' \
    --sku 'NShCPxGa' \
    > test.out 2>&1
eval_tap $? 425 'PublicGetMyEntitlementOwnershipBySku' test.out

#- 426 PublicGetEntitlementOwnershipToken
$CLI_EXE \
    --sn platform \
    --op PublicGetEntitlementOwnershipToken \
    --namespace $AB_NAMESPACE \
    --appIds '["maB7dYNm", "0wxvJns2", "ELgymRDP"]' \
    --itemIds '["2vWbkGFD", "hxwHd0Si", "phHPWSjn"]' \
    --skus '["viWHC05V", "6uMM1IiD", "buezizzG"]' \
    > test.out 2>&1
eval_tap $? 426 'PublicGetEntitlementOwnershipToken' test.out

#- 427 SyncTwitchDropsEntitlement
# body param: body
echo '{"gameId": "82WkQWtQ", "language": "wivH-blQs", "region": "ZH0nTXJL"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncTwitchDropsEntitlement \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 427 'SyncTwitchDropsEntitlement' test.out

#- 428 PublicGetMyWallet
$CLI_EXE \
    --sn platform \
    --op PublicGetMyWallet \
    --currencyCode 'zFjxABH9' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 428 'PublicGetMyWallet' test.out

#- 429 SyncEpicGameDLC
# body param: body
echo '{"epicGamesJwtToken": "JC4p9E3e"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncEpicGameDLC \
    --namespace $AB_NAMESPACE \
    --userId 'KYNdSw9X' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 429 'SyncEpicGameDLC' test.out

#- 430 SyncOculusDLC
$CLI_EXE \
    --sn platform \
    --op SyncOculusDLC \
    --namespace $AB_NAMESPACE \
    --userId 'dhi9djrx' \
    > test.out 2>&1
eval_tap $? 430 'SyncOculusDLC' test.out

#- 431 PublicSyncPsnDlcInventory
# body param: body
echo '{"serviceLabel": 14}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicSyncPsnDlcInventory \
    --namespace $AB_NAMESPACE \
    --userId 'QfFvU4UT' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 431 'PublicSyncPsnDlcInventory' test.out

#- 432 PublicSyncPsnDlcInventoryWithMultipleServiceLabels
# body param: body
echo '{"serviceLabels": [16, 1, 38]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicSyncPsnDlcInventoryWithMultipleServiceLabels \
    --namespace $AB_NAMESPACE \
    --userId 'ztcRvOBd' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 432 'PublicSyncPsnDlcInventoryWithMultipleServiceLabels' test.out

#- 433 SyncSteamDLC
# body param: body
echo '{"appId": "nNtuiNwI", "steamId": "Ufo0WvrL"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncSteamDLC \
    --namespace $AB_NAMESPACE \
    --userId 'j9dEe1u3' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 433 'SyncSteamDLC' test.out

#- 434 SyncXboxDLC
# body param: body
echo '{"xstsToken": "OsJDFH3h"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncXboxDLC \
    --namespace $AB_NAMESPACE \
    --userId 'RrsMH4oY' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 434 'SyncXboxDLC' test.out

#- 435 PublicQueryUserEntitlements
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserEntitlements \
    --namespace $AB_NAMESPACE \
    --userId 'tIuftrs2' \
    --appType 'GAME' \
    --entitlementClazz 'OPTIONBOX' \
    --entitlementName '9l5kSbaH' \
    --features '["qOQl4nPM", "eQPTDEvL", "eR9Ktomi"]' \
    --itemId '["3iGSHtce", "5qSnVORk", "KEMPFJTS"]' \
    --limit '55' \
    --offset '40' \
    > test.out 2>&1
eval_tap $? 435 'PublicQueryUserEntitlements' test.out

#- 436 PublicGetUserAppEntitlementByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetUserAppEntitlementByAppId \
    --namespace $AB_NAMESPACE \
    --userId 'DXpTXF1Q' \
    --appId 'YzQsE8hc' \
    > test.out 2>&1
eval_tap $? 436 'PublicGetUserAppEntitlementByAppId' test.out

#- 437 PublicQueryUserEntitlementsByAppType
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserEntitlementsByAppType \
    --namespace $AB_NAMESPACE \
    --userId 'UNcvL7Ek' \
    --limit '9' \
    --offset '95' \
    --appType 'DEMO' \
    > test.out 2>&1
eval_tap $? 437 'PublicQueryUserEntitlementsByAppType' test.out

#- 438 PublicGetUserEntitlementsByIds
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementsByIds \
    --namespace $AB_NAMESPACE \
    --userId 'kl2EQPbL' \
    --availablePlatformOnly 'false' \
    --ids '["TxpfoQfE", "5YS98VhA", "vUoWMXNr"]' \
    > test.out 2>&1
eval_tap $? 438 'PublicGetUserEntitlementsByIds' test.out

#- 439 PublicGetUserEntitlementByItemId
eval_tap 0 439 'PublicGetUserEntitlementByItemId # SKIP deprecated' test.out

#- 440 PublicGetUserEntitlementBySku
eval_tap 0 440 'PublicGetUserEntitlementBySku # SKIP deprecated' test.out

#- 441 PublicUserEntitlementHistory
$CLI_EXE \
    --sn platform \
    --op PublicUserEntitlementHistory \
    --namespace $AB_NAMESPACE \
    --userId 'mbgMcM39' \
    --endDate '5KJ2dJ5S' \
    --entitlementClazz 'CODE' \
    --limit '59' \
    --offset '21' \
    --startDate 'REUaii8z' \
    > test.out 2>&1
eval_tap $? 441 'PublicUserEntitlementHistory' test.out

#- 442 PublicExistsAnyUserActiveEntitlement
$CLI_EXE \
    --sn platform \
    --op PublicExistsAnyUserActiveEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'PTqYJH8h' \
    --appIds '["ARmEDFbi", "Osaw5y0R", "ArTiPPN5"]' \
    --itemIds '["DCnBxhcE", "7hmsoHTC", "H6usbAYZ"]' \
    --skus '["3Y0ClXPO", "PucGmwKo", "UbiYN6Fs"]' \
    > test.out 2>&1
eval_tap $? 442 'PublicExistsAnyUserActiveEntitlement' test.out

#- 443 PublicGetUserAppEntitlementOwnershipByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetUserAppEntitlementOwnershipByAppId \
    --namespace $AB_NAMESPACE \
    --userId 'LLXYtUnz' \
    --appId 'TOeT2zge' \
    > test.out 2>&1
eval_tap $? 443 'PublicGetUserAppEntitlementOwnershipByAppId' test.out

#- 444 PublicGetUserEntitlementOwnershipByItemId
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementOwnershipByItemId \
    --namespace $AB_NAMESPACE \
    --userId '4xX3De0v' \
    --entitlementClazz 'LOOTBOX' \
    --itemId 'hvm10PfV' \
    > test.out 2>&1
eval_tap $? 444 'PublicGetUserEntitlementOwnershipByItemId' test.out

#- 445 PublicGetUserEntitlementOwnershipByItemIds
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementOwnershipByItemIds \
    --namespace $AB_NAMESPACE \
    --userId '28O18uuw' \
    --ids '["h2KED1Li", "PkCEJCZ2", "aGdyPBYb"]' \
    > test.out 2>&1
eval_tap $? 445 'PublicGetUserEntitlementOwnershipByItemIds' test.out

#- 446 PublicGetUserEntitlementOwnershipBySku
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementOwnershipBySku \
    --namespace $AB_NAMESPACE \
    --userId '8xJSWjcQ' \
    --entitlementClazz 'CODE' \
    --sku '3Za7M2DG' \
    > test.out 2>&1
eval_tap $? 446 'PublicGetUserEntitlementOwnershipBySku' test.out

#- 447 PublicGetUserEntitlement
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlement \
    --entitlementId 'RE2RnCLw' \
    --namespace $AB_NAMESPACE \
    --userId 'Xs90qtAf' \
    > test.out 2>&1
eval_tap $? 447 'PublicGetUserEntitlement' test.out

#- 448 PublicConsumeUserEntitlement
# body param: body
echo '{"metadata": {"operationSource": "INVENTORY"}, "options": ["9Eo2aOdT", "Bu4wJJB3", "vf3WbeSs"], "requestId": "g9kpIoaX", "useCount": 85}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicConsumeUserEntitlement \
    --entitlementId 'WvDcpUpT' \
    --namespace $AB_NAMESPACE \
    --userId 'EJ6xL5fN' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 448 'PublicConsumeUserEntitlement' test.out

#- 449 PublicSellUserEntitlement
# body param: body
echo '{"requestId": "YzIqrjxm", "useCount": 78}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicSellUserEntitlement \
    --entitlementId 'KnhjMuws' \
    --namespace $AB_NAMESPACE \
    --userId '94ElyIea' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 449 'PublicSellUserEntitlement' test.out

#- 450 PublicSplitUserEntitlement
# body param: body
echo '{"metadata": {"operationSource": "INVENTORY"}, "useCount": 27}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicSplitUserEntitlement \
    --entitlementId 'qLpQArEz' \
    --namespace $AB_NAMESPACE \
    --userId 'wjIloMoA' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 450 'PublicSplitUserEntitlement' test.out

#- 451 PublicTransferUserEntitlement
# body param: body
echo '{"entitlementId": "hH6HY9qC", "metadata": {"operationSource": "INVENTORY"}, "useCount": 14}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicTransferUserEntitlement \
    --entitlementId 'u2xEcVlV' \
    --namespace $AB_NAMESPACE \
    --userId 'PYJUngEy' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 451 'PublicTransferUserEntitlement' test.out

#- 452 PublicRedeemCode
# body param: body
echo '{"code": "ZNiqfGnj", "language": "PYKF_DofQ", "region": "tRSpbHgM"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicRedeemCode \
    --namespace $AB_NAMESPACE \
    --userId 'xf28jq2M' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 452 'PublicRedeemCode' test.out

#- 453 PublicFulfillAppleIAPItem
# body param: body
echo '{"excludeOldTransactions": false, "language": "LQFz-FQHo_hS", "productId": "Ckx0Sgfa", "receiptData": "7FKvyjki", "region": "wBTFsKZc", "transactionId": "wQyVcXKl"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicFulfillAppleIAPItem \
    --namespace $AB_NAMESPACE \
    --userId 'JjJ08Ilg' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 453 'PublicFulfillAppleIAPItem' test.out

#- 454 SyncEpicGamesInventory
# body param: body
echo '{"epicGamesJwtToken": "rLioo5id"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncEpicGamesInventory \
    --namespace $AB_NAMESPACE \
    --userId '41RWjlox' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 454 'SyncEpicGamesInventory' test.out

#- 455 PublicFulfillGoogleIAPItem
# body param: body
echo '{"autoAck": true, "autoConsume": true, "language": "SpM-PbCb_696", "orderId": "J3TctTw8", "packageName": "OwQFjyJ3", "productId": "NQcNXFjF", "purchaseTime": 62, "purchaseToken": "Jbyy8QjK", "region": "x3IzvHuP", "subscriptionPurchase": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicFulfillGoogleIAPItem \
    --namespace $AB_NAMESPACE \
    --userId 'DuxPFcBo' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 455 'PublicFulfillGoogleIAPItem' test.out

#- 456 SyncOculusConsumableEntitlements
$CLI_EXE \
    --sn platform \
    --op SyncOculusConsumableEntitlements \
    --namespace $AB_NAMESPACE \
    --userId 'tStDMs1p' \
    > test.out 2>&1
eval_tap $? 456 'SyncOculusConsumableEntitlements' test.out

#- 457 PublicReconcilePlayStationStore
# body param: body
echo '{"currencyCode": "CApBAHTN", "price": 0.5073853622245638, "productId": "8fAx9AHC", "serviceLabel": 51}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicReconcilePlayStationStore \
    --namespace $AB_NAMESPACE \
    --userId 'IdDyUoNb' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 457 'PublicReconcilePlayStationStore' test.out

#- 458 PublicReconcilePlayStationStoreWithMultipleServiceLabels
# body param: body
echo '{"currencyCode": "jNEXt0uz", "price": 0.2032626193520859, "productId": "1wSrT8aT", "serviceLabels": [74, 22, 95]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicReconcilePlayStationStoreWithMultipleServiceLabels \
    --namespace $AB_NAMESPACE \
    --userId 'Xpxm6XUa' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 458 'PublicReconcilePlayStationStoreWithMultipleServiceLabels' test.out

#- 459 SyncSteamInventory
# body param: body
echo '{"appId": "SJLBlRgv", "currencyCode": "ku2tbjXj", "language": "LlRd-cKRg", "price": 0.6021632151568446, "productId": "iKKE8hO1", "region": "AbGCPN9Y", "steamId": "MGMjJCpC"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncSteamInventory \
    --namespace $AB_NAMESPACE \
    --userId 'hMZDeL5X' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 459 'SyncSteamInventory' test.out

#- 460 SyncSteamAbnormalTransaction
$CLI_EXE \
    --sn platform \
    --op SyncSteamAbnormalTransaction \
    --namespace $AB_NAMESPACE \
    --userId 'Mqz6JfQC' \
    > test.out 2>&1
eval_tap $? 460 'SyncSteamAbnormalTransaction' test.out

#- 461 SyncSteamIAPByTransaction
# body param: body
echo '{"orderId": "1sXKEqWl"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncSteamIAPByTransaction \
    --namespace $AB_NAMESPACE \
    --userId '1VwUtjfU' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 461 'SyncSteamIAPByTransaction' test.out

#- 462 PublicQueryUserThirdPartySubscription
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserThirdPartySubscription \
    --namespace $AB_NAMESPACE \
    --platform 'OCULUS' \
    --userId '8iwS3Qbl' \
    --activeOnly 'true' \
    --groupId 'iJbfFRvO' \
    --limit '88' \
    --offset '51' \
    --productId 'RfJolA5n' \
    > test.out 2>&1
eval_tap $? 462 'PublicQueryUserThirdPartySubscription' test.out

#- 463 SyncTwitchDropsEntitlement1
# body param: body
echo '{"gameId": "s7NHQP4N", "language": "Xjn-xV", "region": "URJyPmgi"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncTwitchDropsEntitlement1 \
    --namespace $AB_NAMESPACE \
    --userId 'xlrSJga7' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 463 'SyncTwitchDropsEntitlement1' test.out

#- 464 SyncXboxInventory
# body param: body
echo '{"currencyCode": "ymuDrHGx", "price": 0.08286908346519861, "productId": "n9qPSh6o", "xstsToken": "Bm0ks7zT"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncXboxInventory \
    --namespace $AB_NAMESPACE \
    --userId 'mfF70sfH' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 464 'SyncXboxInventory' test.out

#- 465 PublicQueryUserOrders
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserOrders \
    --namespace $AB_NAMESPACE \
    --userId 'a10w1ozT' \
    --discounted 'true' \
    --itemId '9GKPdUFl' \
    --limit '46' \
    --offset '53' \
    --status 'REFUNDING' \
    > test.out 2>&1
eval_tap $? 465 'PublicQueryUserOrders' test.out

#- 466 PublicCreateUserOrder
# body param: body
echo '{"currencyCode": "OGGLFZ0E", "discountCodes": ["nkbuiPuW", "2c9Hh8Wz", "HTQaXJd5"], "discountedPrice": 92, "ext": {"2UPljleJ": {}, "8rDNj9CK": {}, "FZwlFhjr": {}}, "itemId": "63TeK5Na", "language": "ts-HEVK", "price": 66, "quantity": 48, "region": "09RPwZBG", "returnUrl": "sYgqepPz", "sectionId": "6rrjS6Fa"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicCreateUserOrder \
    --namespace $AB_NAMESPACE \
    --userId 'EDUh2wzo' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 466 'PublicCreateUserOrder' test.out

#- 467 PublicPreviewOrderPrice
# body param: body
echo '{"currencyCode": "qEE9iera", "discountCodes": ["IysfzHkh", "ZBgOi4Io", "TolHkx4w"], "discountedPrice": 81, "itemId": "PlhH2hOJ", "price": 80, "quantity": 21}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicPreviewOrderPrice \
    --namespace $AB_NAMESPACE \
    --userId 'NCQkVK5A' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 467 'PublicPreviewOrderPrice' test.out

#- 468 PublicGetUserOrder
$CLI_EXE \
    --sn platform \
    --op PublicGetUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'Ux41MYEm' \
    --userId 'xk7SwAve' \
    > test.out 2>&1
eval_tap $? 468 'PublicGetUserOrder' test.out

#- 469 PublicCancelUserOrder
$CLI_EXE \
    --sn platform \
    --op PublicCancelUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'N4LjGj5t' \
    --userId 'DFdaXsbJ' \
    > test.out 2>&1
eval_tap $? 469 'PublicCancelUserOrder' test.out

#- 470 PublicGetUserOrderHistories
$CLI_EXE \
    --sn platform \
    --op PublicGetUserOrderHistories \
    --namespace $AB_NAMESPACE \
    --orderNo 'lfA6tp20' \
    --userId 'wSox0Uk6' \
    > test.out 2>&1
eval_tap $? 470 'PublicGetUserOrderHistories' test.out

#- 471 PublicDownloadUserOrderReceipt
$CLI_EXE \
    --sn platform \
    --op PublicDownloadUserOrderReceipt \
    --namespace $AB_NAMESPACE \
    --orderNo 'kq54rl8g' \
    --userId 'q9bdYhyr' \
    > test.out 2>&1
eval_tap $? 471 'PublicDownloadUserOrderReceipt' test.out

#- 472 PublicGetPaymentAccounts
$CLI_EXE \
    --sn platform \
    --op PublicGetPaymentAccounts \
    --namespace $AB_NAMESPACE \
    --userId 'vQ7biXW9' \
    > test.out 2>&1
eval_tap $? 472 'PublicGetPaymentAccounts' test.out

#- 473 PublicDeletePaymentAccount
$CLI_EXE \
    --sn platform \
    --op PublicDeletePaymentAccount \
    --id '9WVeIpte' \
    --namespace $AB_NAMESPACE \
    --type 'card' \
    --userId 'LaZ64Oit' \
    > test.out 2>&1
eval_tap $? 473 'PublicDeletePaymentAccount' test.out

#- 474 PublicListActiveSections
$CLI_EXE \
    --sn platform \
    --op PublicListActiveSections \
    --namespace $AB_NAMESPACE \
    --userId 'GCROqRki' \
    --autoCalcEstimatedPrice 'false' \
    --language 'qPXoevMT' \
    --region 'GOTlnxvv' \
    --storeId '4mAMa1pM' \
    --viewId 'goByejtR' \
    > test.out 2>&1
eval_tap $? 474 'PublicListActiveSections' test.out

#- 475 PublicQueryUserSubscriptions
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserSubscriptions \
    --namespace $AB_NAMESPACE \
    --userId '7T8MTbwE' \
    --chargeStatus 'NEVER' \
    --itemId 'oLvzuSzW' \
    --limit '60' \
    --offset '74' \
    --sku 'vlrGDd5Y' \
    --status 'INIT' \
    --subscribedBy 'USER' \
    > test.out 2>&1
eval_tap $? 475 'PublicQueryUserSubscriptions' test.out

#- 476 PublicSubscribeSubscription
# body param: body
echo '{"currencyCode": "gRqgI2w6", "itemId": "egiTdeSv", "language": "KyV-fOHx-216", "region": "NaHb92MH", "returnUrl": "AWeI5x8W", "source": "jkcVT67a"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicSubscribeSubscription \
    --namespace $AB_NAMESPACE \
    --userId '72tDY7de' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 476 'PublicSubscribeSubscription' test.out

#- 477 PublicCheckUserSubscriptionSubscribableByItemId
$CLI_EXE \
    --sn platform \
    --op PublicCheckUserSubscriptionSubscribableByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'Pua9Zd37' \
    --itemId 'YQgtS80M' \
    > test.out 2>&1
eval_tap $? 477 'PublicCheckUserSubscriptionSubscribableByItemId' test.out

#- 478 PublicGetUserSubscription
$CLI_EXE \
    --sn platform \
    --op PublicGetUserSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'UyHgQfpR' \
    --userId 'FXRrWAPI' \
    > test.out 2>&1
eval_tap $? 478 'PublicGetUserSubscription' test.out

#- 479 PublicChangeSubscriptionBillingAccount
$CLI_EXE \
    --sn platform \
    --op PublicChangeSubscriptionBillingAccount \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'VglyEV4A' \
    --userId 'iJM2EA9O' \
    > test.out 2>&1
eval_tap $? 479 'PublicChangeSubscriptionBillingAccount' test.out

#- 480 PublicCancelSubscription
# body param: body
echo '{"immediate": false, "reason": "Q1VfJCg0"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicCancelSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'lycDpIOW' \
    --userId 'Xxh8Vqj0' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 480 'PublicCancelSubscription' test.out

#- 481 PublicGetUserSubscriptionBillingHistories
$CLI_EXE \
    --sn platform \
    --op PublicGetUserSubscriptionBillingHistories \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'qpAOActv' \
    --userId 'piBlIErj' \
    --excludeFree 'false' \
    --limit '68' \
    --offset '97' \
    > test.out 2>&1
eval_tap $? 481 'PublicGetUserSubscriptionBillingHistories' test.out

#- 482 PublicListViews
$CLI_EXE \
    --sn platform \
    --op PublicListViews \
    --namespace $AB_NAMESPACE \
    --userId 'pkMYpM2m' \
    --language 'Ga3FE3C3' \
    --storeId 'wSN4wpRM' \
    > test.out 2>&1
eval_tap $? 482 'PublicListViews' test.out

#- 483 PublicGetWallet
$CLI_EXE \
    --sn platform \
    --op PublicGetWallet \
    --currencyCode '6CLElYGL' \
    --namespace $AB_NAMESPACE \
    --userId 'APGoRr9B' \
    > test.out 2>&1
eval_tap $? 483 'PublicGetWallet' test.out

#- 484 PublicListUserWalletTransactions
$CLI_EXE \
    --sn platform \
    --op PublicListUserWalletTransactions \
    --currencyCode 'BJmKnMH2' \
    --namespace $AB_NAMESPACE \
    --userId '42HXQFdr' \
    --limit '88' \
    --offset '9' \
    > test.out 2>&1
eval_tap $? 484 'PublicListUserWalletTransactions' test.out

#- 485 PublicGetMyDLCContent
$CLI_EXE \
    --sn platform \
    --op PublicGetMyDLCContent \
    --includeAllNamespaces 'true' \
    --type 'EPICGAMES' \
    > test.out 2>&1
eval_tap $? 485 'PublicGetMyDLCContent' test.out

#- 486 QueryFulfillments
$CLI_EXE \
    --sn platform \
    --op QueryFulfillments \
    --namespace $AB_NAMESPACE \
    --endTime 'HuW4KDPv' \
    --limit '76' \
    --offset '45' \
    --startTime 'xknUoeRM' \
    --state 'FULFILL_FAILED' \
    --transactionId 'rKHwEudv' \
    --userId 'wgiVmlut' \
    > test.out 2>&1
eval_tap $? 486 'QueryFulfillments' test.out

#- 487 QueryItemsV2
$CLI_EXE \
    --sn platform \
    --op QueryItemsV2 \
    --namespace $AB_NAMESPACE \
    --appType 'SOFTWARE' \
    --availableDate 'PKyKnXqD' \
    --baseAppId 'NZUpeMa4' \
    --categoryPath 'H4dyuwYu' \
    --features 'c0Tfonlk' \
    --includeSubCategoryItem 'true' \
    --itemName 'GdttYHnl' \
    --itemStatus 'ACTIVE' \
    --itemType '["OPTIONBOX", "EXTENSION", "COINS"]' \
    --limit '24' \
    --offset '15' \
    --region 'OrB050T2' \
    --sectionExclusive 'true' \
    --sortBy '["name", "createdAt", "displayOrder:desc"]' \
    --storeId '90bJenUn' \
    --tags 'y66IYPdz' \
    --targetNamespace 'qrTOXO9k' \
    --withTotal 'false' \
    > test.out 2>&1
eval_tap $? 487 'QueryItemsV2' test.out

#- 488 ImportStore1
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op ImportStore1 \
    --namespace $AB_NAMESPACE \
    --storeId 'pCwv7NPG' \
    --strictMode 'false' \
    --upload file $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 488 'ImportStore1' test.out

#- 489 ExportStore1
# body param: body
echo '{"itemIds": ["0JzOlfJ2", "4DSsar6R", "eWlnwKmL"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ExportStore1 \
    --namespace $AB_NAMESPACE \
    --storeId 'uaYkiiWc' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 489 'ExportStore1' test.out

#- 490 FulfillRewardsV2
# body param: body
echo '{"entitlementCollectionId": "trfiUgLS", "entitlementOrigin": "Twitch", "metadata": {"3q6NS3Bg": {}, "QGD8qY03": {}, "PKGH6VQw": {}}, "origin": "Oculus", "rewards": [{"currency": {"currencyCode": "tGRt27yk", "namespace": "DOiZF20B"}, "item": {"itemId": "reR2I5sy", "itemName": "lx4mCaJJ", "itemSku": "X4zqy0ig", "itemType": "KWKpXSMZ"}, "quantity": 31, "type": "CURRENCY"}, {"currency": {"currencyCode": "MjaZIXnq", "namespace": "3u0MNa3Z"}, "item": {"itemId": "PBRBA5YM", "itemName": "aTuS8D8E", "itemSku": "d3PbegFp", "itemType": "XU1ZDA57"}, "quantity": 36, "type": "CURRENCY"}, {"currency": {"currencyCode": "PkT9oaca", "namespace": "AJkFuZyx"}, "item": {"itemId": "W6RQdebF", "itemName": "0yC1yjRP", "itemSku": "HJ6uMH0W", "itemType": "Bg2E8MMi"}, "quantity": 38, "type": "CURRENCY"}], "source": "REFERRAL_BONUS", "transactionId": "Tc4JPtWm"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op FulfillRewardsV2 \
    --namespace $AB_NAMESPACE \
    --userId 'VcxDB7Qz' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 490 'FulfillRewardsV2' test.out

#- 491 FulfillItems
eval_tap 0 491 'FulfillItems # SKIP deprecated' test.out

#- 492 RetryFulfillItems
eval_tap 0 492 'RetryFulfillItems # SKIP deprecated' test.out

#- 493 RevokeItems
eval_tap 0 493 'RevokeItems # SKIP deprecated' test.out

#- 494 V2PublicFulfillAppleIAPItem
# body param: body
echo '{"transactionId": "eB3DCMyE"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op V2PublicFulfillAppleIAPItem \
    --namespace $AB_NAMESPACE \
    --userId 'Xi8bKGbD' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 494 'V2PublicFulfillAppleIAPItem' test.out

#- 495 FulfillItemsV3
# body param: body
echo '{"items": [{"duration": 47, "endDate": "1990-05-31T00:00:00Z", "entitlementCollectionId": "V6DmJHIM", "entitlementOrigin": "Nintendo", "itemId": "ijQ3CN6t", "itemSku": "LIqsHAEY", "language": "GrCZATv9", "metadata": {"aWF3lwTM": {}, "duhBbaRb": {}, "Gf0nlVz0": {}}, "orderNo": "REVvaHsc", "origin": "Twitch", "quantity": 83, "region": "N1MBnXZu", "source": "GIFT", "startDate": "1992-03-04T00:00:00Z", "storeId": "z3UT0X1V"}, {"duration": 84, "endDate": "1979-12-21T00:00:00Z", "entitlementCollectionId": "Dv9TQ1uw", "entitlementOrigin": "Other", "itemId": "yzuyuGZz", "itemSku": "Csixavco", "language": "TAFZSmGR", "metadata": {"klkwB0d4": {}, "C9TBSwFC": {}, "l39aHZrM": {}}, "orderNo": "6wgzTAlV", "origin": "Other", "quantity": 75, "region": "oHAdibjX", "source": "PURCHASE", "startDate": "1984-11-19T00:00:00Z", "storeId": "Gg7E4l4U"}, {"duration": 51, "endDate": "1975-10-07T00:00:00Z", "entitlementCollectionId": "htyenisx", "entitlementOrigin": "Nintendo", "itemId": "f4oyj82q", "itemSku": "ONJ2ZN8e", "language": "8Gh4mw6U", "metadata": {"xwmbHzcx": {}, "atrefauD": {}, "queChW1i": {}}, "orderNo": "iqNuqUJ1", "origin": "Xbox", "quantity": 52, "region": "IHh33EoJ", "source": "REFERRAL_BONUS", "startDate": "1994-12-16T00:00:00Z", "storeId": "3cYBkyfB"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op FulfillItemsV3 \
    --namespace $AB_NAMESPACE \
    --transactionId 'OSuV7iCm' \
    --userId '04RkBDxg' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 495 'FulfillItemsV3' test.out

#- 496 RetryFulfillItemsV3
$CLI_EXE \
    --sn platform \
    --op RetryFulfillItemsV3 \
    --namespace $AB_NAMESPACE \
    --transactionId '70OQp3vu' \
    --userId 'OTAfnBOG' \
    > test.out 2>&1
eval_tap $? 496 'RetryFulfillItemsV3' test.out

#- 497 RevokeItemsV3
$CLI_EXE \
    --sn platform \
    --op RevokeItemsV3 \
    --namespace $AB_NAMESPACE \
    --transactionId '1oPMpp5j' \
    --userId 'V3bCQ48D' \
    > test.out 2>&1
eval_tap $? 497 'RevokeItemsV3' test.out


# remove artifacts
rm -f "$CLI_TOKEN_FILE"
rm -f "$TEMP_JSON_INPUT"
rm -f "$TEMP_FILE_UPLOAD"

exit $EXIT_CODE