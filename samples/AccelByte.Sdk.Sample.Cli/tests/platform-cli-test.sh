#!/usr/bin/env bash

# Copyright (c) 2021 AccelByte Inc. All Rights Reserved.
# This is licensed software from AccelByte Inc, for limitations
# and restrictions contact your company contract manager.

# This code is generated by tool. DO NOT EDIT.

# Meta:
# - random seed: 
# - template file: 

# Instructions:
# - Run the Justice SDK Mock Server first before running this script.

export AB_BASE_URL="http://127.0.0.1:8080"
export AB_CLIENT_ID="admin"
export AB_CLIENT_SECRET="admin"
export AB_NAMESPACE="test"
export AB_APP_NAME="UnitTest"

EXIT_CODE=0

eval_tap() {
  if [ $1 -eq 0 ]; then
    echo "ok $2 - $3"
  else
    EXIT_CODE=1
    echo "not ok $2 - $3"
    sed 's/^/# /g' $4
  fi
  rm -f $4
}

CLI_EXE="AccelByte.Sdk.Sample.Cli"
CLI_TOKEN_FILE="$(dirname "$(which $CLI_EXE)")/token.json"
TEMP_JSON_INPUT="input_json.json"
TEMP_FILE_UPLOAD="file_upload.bin"

echo "TAP version 13"
echo "1..436"

#- 1 Login
$CLI_EXE --op login --lt user --user user --pass user > test.out 2>&1
eval_tap $? 1 'Login' test.out

if [ $EXIT_CODE -ne 0 ]; then
  echo "Bail out! Login failed."
  exit $EXIT_CODE
fi

# echo "foo" > "$CLI_TOKEN_FILE"

#- 2 ListFulfillmentScripts
$CLI_EXE \
    --sn platform \
    --op ListFulfillmentScripts \
    > test.out 2>&1
eval_tap $? 2 'ListFulfillmentScripts' test.out

#- 3 GetFulfillmentScript
$CLI_EXE \
    --sn platform \
    --op GetFulfillmentScript \
    --id 'MJHdy8qr' \
    > test.out 2>&1
eval_tap $? 3 'GetFulfillmentScript' test.out

#- 4 CreateFulfillmentScript
# body param: body
echo '{"grantDays": "mJFR47bE"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateFulfillmentScript \
    --id 'NHM9CewJ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 4 'CreateFulfillmentScript' test.out

#- 5 DeleteFulfillmentScript
$CLI_EXE \
    --sn platform \
    --op DeleteFulfillmentScript \
    --id 'gmyKuXgJ' \
    > test.out 2>&1
eval_tap $? 5 'DeleteFulfillmentScript' test.out

#- 6 UpdateFulfillmentScript
# body param: body
echo '{"grantDays": "sqNzR3Lz"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateFulfillmentScript \
    --id 'OGivMAt8' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 6 'UpdateFulfillmentScript' test.out

#- 7 ListItemTypeConfigs
$CLI_EXE \
    --sn platform \
    --op ListItemTypeConfigs \
    > test.out 2>&1
eval_tap $? 7 'ListItemTypeConfigs' test.out

#- 8 CreateItemTypeConfig
# body param: body
echo '{"clazz": "dY1WOm3I", "dryRun": true, "fulfillmentUrl": "lAyrcMZd", "itemType": "COINS", "purchaseConditionUrl": "P1dR4hJ4"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateItemTypeConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 8 'CreateItemTypeConfig' test.out

#- 9 SearchItemTypeConfig
$CLI_EXE \
    --sn platform \
    --op SearchItemTypeConfig \
    --clazz 'l0Vi2zcb' \
    --itemType 'LOOTBOX' \
    > test.out 2>&1
eval_tap $? 9 'SearchItemTypeConfig' test.out

#- 10 GetItemTypeConfig
$CLI_EXE \
    --sn platform \
    --op GetItemTypeConfig \
    --id 'jLhxWSPI' \
    > test.out 2>&1
eval_tap $? 10 'GetItemTypeConfig' test.out

#- 11 UpdateItemTypeConfig
# body param: body
echo '{"clazz": "kaf9ZA38", "dryRun": false, "fulfillmentUrl": "70vXPGXP", "purchaseConditionUrl": "CpxiFb4t"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateItemTypeConfig \
    --id '4ejp4tPp' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 11 'UpdateItemTypeConfig' test.out

#- 12 DeleteItemTypeConfig
$CLI_EXE \
    --sn platform \
    --op DeleteItemTypeConfig \
    --id 'HetA4aar' \
    > test.out 2>&1
eval_tap $? 12 'DeleteItemTypeConfig' test.out

#- 13 QueryCampaigns
$CLI_EXE \
    --sn platform \
    --op QueryCampaigns \
    --namespace $AB_NAMESPACE \
    --limit '6' \
    --name 'B5SxaouR' \
    --offset '93' \
    --tag 'YLcnLcX5' \
    > test.out 2>&1
eval_tap $? 13 'QueryCampaigns' test.out

#- 14 CreateCampaign
# body param: body
echo '{"description": "MBjAGytd", "items": [{"extraSubscriptionDays": 44, "itemId": "t7w27038", "itemName": "jBdKuhSf", "quantity": 11}, {"extraSubscriptionDays": 63, "itemId": "2lvk5c1I", "itemName": "Q2qKQkOO", "quantity": 26}, {"extraSubscriptionDays": 67, "itemId": "jw4h8Bta", "itemName": "Zo7uDvgF", "quantity": 11}], "maxRedeemCountPerCampaignPerUser": 56, "maxRedeemCountPerCode": 25, "maxRedeemCountPerCodePerUser": 6, "maxSaleCount": 23, "name": "pQ4imwBo", "redeemEnd": "1973-08-16T00:00:00Z", "redeemStart": "1999-07-12T00:00:00Z", "redeemType": "ITEM", "status": "INACTIVE", "tags": ["PPlI63S3", "eA4tgNM4", "R6xM5NW5"], "type": "REDEMPTION"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCampaign \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 14 'CreateCampaign' test.out

#- 15 GetCampaign
$CLI_EXE \
    --sn platform \
    --op GetCampaign \
    --campaignId 'CApg0Agl' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 15 'GetCampaign' test.out

#- 16 UpdateCampaign
# body param: body
echo '{"description": "OGn2OZVz", "items": [{"extraSubscriptionDays": 78, "itemId": "CO64s68j", "itemName": "qXTE9W1m", "quantity": 56}, {"extraSubscriptionDays": 91, "itemId": "pD2lcMqh", "itemName": "RACcx8aO", "quantity": 72}, {"extraSubscriptionDays": 61, "itemId": "XLsbPYDa", "itemName": "fbH12O0J", "quantity": 47}], "maxRedeemCountPerCampaignPerUser": 27, "maxRedeemCountPerCode": 51, "maxRedeemCountPerCodePerUser": 5, "maxSaleCount": 46, "name": "wH5mrd9I", "redeemEnd": "1971-08-21T00:00:00Z", "redeemStart": "1979-08-12T00:00:00Z", "redeemType": "ITEM", "status": "ACTIVE", "tags": ["NVgpao2l", "qo0FSd4M", "EWBYM7T9"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCampaign \
    --campaignId 'IsJ3rgKQ' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 16 'UpdateCampaign' test.out

#- 17 GetCampaignDynamic
$CLI_EXE \
    --sn platform \
    --op GetCampaignDynamic \
    --campaignId 'fQ2JKrYk' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 17 'GetCampaignDynamic' test.out

#- 18 GetLootBoxPluginConfig
$CLI_EXE \
    --sn platform \
    --op GetLootBoxPluginConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 18 'GetLootBoxPluginConfig' test.out

#- 19 UpdateLootBoxPluginConfig
# body param: body
echo '{"appConfig": {"appName": "ZV9bKDCD"}, "customConfig": {"connectionType": "TLS", "grpcServerAddress": "qGypjeK7"}, "extendType": "CUSTOM"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateLootBoxPluginConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 19 'UpdateLootBoxPluginConfig' test.out

#- 20 DeleteLootBoxPluginConfig
$CLI_EXE \
    --sn platform \
    --op DeleteLootBoxPluginConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 20 'DeleteLootBoxPluginConfig' test.out

#- 21 UplodLootBoxPluginConfigCert
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UplodLootBoxPluginConfigCert \
    --namespace $AB_NAMESPACE \
    --upload $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 21 'UplodLootBoxPluginConfigCert' test.out

#- 22 GetLootBoxGrpcInfo
$CLI_EXE \
    --sn platform \
    --op GetLootBoxGrpcInfo \
    --namespace $AB_NAMESPACE \
    --force 'true' \
    > test.out 2>&1
eval_tap $? 22 'GetLootBoxGrpcInfo' test.out

#- 23 GetSectionPluginConfig
$CLI_EXE \
    --sn platform \
    --op GetSectionPluginConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 23 'GetSectionPluginConfig' test.out

#- 24 UpdateSectionPluginConfig
# body param: body
echo '{"appConfig": {"appName": "GwiR3YU1"}, "customConfig": {"connectionType": "TLS", "grpcServerAddress": "hb7MKjRQ"}, "extendType": "APP"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateSectionPluginConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 24 'UpdateSectionPluginConfig' test.out

#- 25 DeleteSectionPluginConfig
$CLI_EXE \
    --sn platform \
    --op DeleteSectionPluginConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 25 'DeleteSectionPluginConfig' test.out

#- 26 UploadSectionPluginConfigCert
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UploadSectionPluginConfigCert \
    --namespace $AB_NAMESPACE \
    --upload $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 26 'UploadSectionPluginConfigCert' test.out

#- 27 GetRootCategories
$CLI_EXE \
    --sn platform \
    --op GetRootCategories \
    --namespace $AB_NAMESPACE \
    --storeId 'PptmKLox' \
    > test.out 2>&1
eval_tap $? 27 'GetRootCategories' test.out

#- 28 CreateCategory
# body param: body
echo '{"categoryPath": "oA3w86ke", "localizationDisplayNames": {"MVbmjaVk": "bbI9g4Fv", "eMEzQTNy": "ax5Bs1y6", "L1dCYynJ": "3S56icmr"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCategory \
    --namespace $AB_NAMESPACE \
    --storeId 'xyS181Qs' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 28 'CreateCategory' test.out

#- 29 ListCategoriesBasic
$CLI_EXE \
    --sn platform \
    --op ListCategoriesBasic \
    --namespace $AB_NAMESPACE \
    --storeId 'P7jZ0IIx' \
    > test.out 2>&1
eval_tap $? 29 'ListCategoriesBasic' test.out

#- 30 GetCategory
$CLI_EXE \
    --sn platform \
    --op GetCategory \
    --categoryPath 'zPVbzFGp' \
    --namespace $AB_NAMESPACE \
    --storeId 'j19yViuN' \
    > test.out 2>&1
eval_tap $? 30 'GetCategory' test.out

#- 31 UpdateCategory
# body param: body
echo '{"localizationDisplayNames": {"G8HtoaJ5": "NMUi7Soa", "skN6BMQp": "uXsb5WXc", "4N6DQtP3": "mpLlmgpZ"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCategory \
    --categoryPath 'MLqvsePb' \
    --namespace $AB_NAMESPACE \
    --storeId '0kvyGxfi' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 31 'UpdateCategory' test.out

#- 32 DeleteCategory
$CLI_EXE \
    --sn platform \
    --op DeleteCategory \
    --categoryPath '2qSna9en' \
    --namespace $AB_NAMESPACE \
    --storeId 'FZPeVl50' \
    > test.out 2>&1
eval_tap $? 32 'DeleteCategory' test.out

#- 33 GetChildCategories
$CLI_EXE \
    --sn platform \
    --op GetChildCategories \
    --categoryPath 'PN7pCJqy' \
    --namespace $AB_NAMESPACE \
    --storeId '8xvHCg3h' \
    > test.out 2>&1
eval_tap $? 33 'GetChildCategories' test.out

#- 34 GetDescendantCategories
$CLI_EXE \
    --sn platform \
    --op GetDescendantCategories \
    --categoryPath 'SYANb0jy' \
    --namespace $AB_NAMESPACE \
    --storeId 'HU3DFYco' \
    > test.out 2>&1
eval_tap $? 34 'GetDescendantCategories' test.out

#- 35 QueryCodes
$CLI_EXE \
    --sn platform \
    --op QueryCodes \
    --campaignId 'keUiKWjm' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --batchNo '10' \
    --code 'E8V034IL' \
    --limit '87' \
    --offset '46' \
    > test.out 2>&1
eval_tap $? 35 'QueryCodes' test.out

#- 36 CreateCodes
# body param: body
echo '{"quantity": 47}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCodes \
    --campaignId 'XtRxsE8U' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 36 'CreateCodes' test.out

#- 37 Download
$CLI_EXE \
    --sn platform \
    --op Download \
    --campaignId '71tOXauD' \
    --namespace $AB_NAMESPACE \
    --batchNo '37' \
    > test.out 2>&1
eval_tap $? 37 'Download' test.out

#- 38 BulkDisableCodes
$CLI_EXE \
    --sn platform \
    --op BulkDisableCodes \
    --campaignId 'jGlxKY0v' \
    --namespace $AB_NAMESPACE \
    --batchNo '48' \
    > test.out 2>&1
eval_tap $? 38 'BulkDisableCodes' test.out

#- 39 BulkEnableCodes
$CLI_EXE \
    --sn platform \
    --op BulkEnableCodes \
    --campaignId 'bOwWzhFz' \
    --namespace $AB_NAMESPACE \
    --batchNo '71' \
    > test.out 2>&1
eval_tap $? 39 'BulkEnableCodes' test.out

#- 40 QueryRedeemHistory
$CLI_EXE \
    --sn platform \
    --op QueryRedeemHistory \
    --campaignId 'UCq1mhhR' \
    --namespace $AB_NAMESPACE \
    --code 'OeDzocKW' \
    --limit '36' \
    --offset '83' \
    --userId 'eWZUVXTW' \
    > test.out 2>&1
eval_tap $? 40 'QueryRedeemHistory' test.out

#- 41 GetCode
$CLI_EXE \
    --sn platform \
    --op GetCode \
    --code 'gZn2ilGr' \
    --namespace $AB_NAMESPACE \
    --redeemable 'false' \
    > test.out 2>&1
eval_tap $? 41 'GetCode' test.out

#- 42 DisableCode
$CLI_EXE \
    --sn platform \
    --op DisableCode \
    --code 'Dkw4BCwH' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 42 'DisableCode' test.out

#- 43 EnableCode
$CLI_EXE \
    --sn platform \
    --op EnableCode \
    --code 'Y8Bo5D2x' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 43 'EnableCode' test.out

#- 44 GetServicePluginConfig
eval_tap 0 44 'GetServicePluginConfig # SKIP deprecated' test.out

#- 45 UpdateServicePluginConfig
eval_tap 0 45 'UpdateServicePluginConfig # SKIP deprecated' test.out

#- 46 DeleteServicePluginConfig
eval_tap 0 46 'DeleteServicePluginConfig # SKIP deprecated' test.out

#- 47 ListCurrencies
$CLI_EXE \
    --sn platform \
    --op ListCurrencies \
    --namespace $AB_NAMESPACE \
    --currencyType 'VIRTUAL' \
    > test.out 2>&1
eval_tap $? 47 'ListCurrencies' test.out

#- 48 CreateCurrency
# body param: body
echo '{"currencyCode": "johyIEeJ", "currencySymbol": "DDMZpGMO", "currencyType": "REAL", "decimals": 43, "localizationDescriptions": {"u7u9gL2h": "Cqyk3DzP", "UILvUYlN": "B44sxVfl", "nZ6WMwVI": "4qNC12x6"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCurrency \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 48 'CreateCurrency' test.out

#- 49 UpdateCurrency
# body param: body
echo '{"localizationDescriptions": {"OTRl1148": "DIs7AXn3", "k8lBU4jS": "uxlRHX6u", "h9swHi4c": "6FNj9RLq"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCurrency \
    --currencyCode 'JLBlzcLb' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 49 'UpdateCurrency' test.out

#- 50 DeleteCurrency
$CLI_EXE \
    --sn platform \
    --op DeleteCurrency \
    --currencyCode 'SAHErlpX' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 50 'DeleteCurrency' test.out

#- 51 GetCurrencyConfig
$CLI_EXE \
    --sn platform \
    --op GetCurrencyConfig \
    --currencyCode 'NcEvS9rJ' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 51 'GetCurrencyConfig' test.out

#- 52 GetCurrencySummary
$CLI_EXE \
    --sn platform \
    --op GetCurrencySummary \
    --currencyCode '48UO1ypd' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 52 'GetCurrencySummary' test.out

#- 53 GetDLCItemConfig
$CLI_EXE \
    --sn platform \
    --op GetDLCItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 53 'GetDLCItemConfig' test.out

#- 54 UpdateDLCItemConfig
# body param: body
echo '{"data": [{"id": "tKGv4rYl", "rewards": [{"currency": {"currencyCode": "iYoghocO", "namespace": "sqQPkR8H"}, "item": {"itemId": "tgqNlwgG", "itemSku": "AiVtVWaf", "itemType": "NtM1k2uD"}, "quantity": 22, "type": "ITEM"}, {"currency": {"currencyCode": "f8GPSyIH", "namespace": "wVvbnJ5U"}, "item": {"itemId": "AMD4tmCc", "itemSku": "HBBbvr4w", "itemType": "OTYdphaK"}, "quantity": 4, "type": "CURRENCY"}, {"currency": {"currencyCode": "X6Vvchih", "namespace": "JIxhiwBy"}, "item": {"itemId": "71upWler", "itemSku": "ptdHKFB3", "itemType": "ao2pXpqe"}, "quantity": 28, "type": "CURRENCY"}]}, {"id": "9MUWHZ3D", "rewards": [{"currency": {"currencyCode": "OZ5leMiK", "namespace": "RIy6lC4u"}, "item": {"itemId": "ysPkROyj", "itemSku": "er5WJAU1", "itemType": "xjhBfFYo"}, "quantity": 82, "type": "ITEM"}, {"currency": {"currencyCode": "2wLerTEg", "namespace": "0KTzaszu"}, "item": {"itemId": "CQ1wJyN9", "itemSku": "F8uywIo6", "itemType": "ZlKQFJir"}, "quantity": 56, "type": "ITEM"}, {"currency": {"currencyCode": "VkT8gYzl", "namespace": "c9XRfScH"}, "item": {"itemId": "ng0wg1tU", "itemSku": "Ofm7pbru", "itemType": "3McL53u6"}, "quantity": 96, "type": "ITEM"}]}, {"id": "zInT21Oy", "rewards": [{"currency": {"currencyCode": "0DgqdI70", "namespace": "UdcAErJ5"}, "item": {"itemId": "0lii9so1", "itemSku": "xXVo8S83", "itemType": "8BCA4gvc"}, "quantity": 33, "type": "CURRENCY"}, {"currency": {"currencyCode": "LJziw5gT", "namespace": "7Ml0lxoN"}, "item": {"itemId": "ml8YjUaE", "itemSku": "eE3Nq27m", "itemType": "4Zn5vDbm"}, "quantity": 64, "type": "ITEM"}, {"currency": {"currencyCode": "zwR2MXbi", "namespace": "bZvkX31h"}, "item": {"itemId": "5aGk9Gz2", "itemSku": "wgClcx7x", "itemType": "safQ3Pnd"}, "quantity": 73, "type": "CURRENCY"}]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateDLCItemConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 54 'UpdateDLCItemConfig' test.out

#- 55 DeleteDLCItemConfig
$CLI_EXE \
    --sn platform \
    --op DeleteDLCItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 55 'DeleteDLCItemConfig' test.out

#- 56 GetPlatformDLCConfig
$CLI_EXE \
    --sn platform \
    --op GetPlatformDLCConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 56 'GetPlatformDLCConfig' test.out

#- 57 UpdatePlatformDLCConfig
# body param: body
echo '{"data": [{"platform": "XBOX", "platformDlcIdMap": {"viFDJg7D": "fVH4f4Bb", "Ej7hmmYx": "MUzF1n5i", "wB7lJ1Vb": "lqXjrhvX"}}, {"platform": "XBOX", "platformDlcIdMap": {"uQIQuEd4": "4O73eqme", "L2ZbcfDT": "LBGowU3q", "fhoGOyps": "ECWa087D"}}, {"platform": "OCULUS", "platformDlcIdMap": {"bhX1mx68": "6OFFNUhD", "Cjl7yQeF": "0y30m1i5", "kursHHOI": "fP0RmnVT"}}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePlatformDLCConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 57 'UpdatePlatformDLCConfig' test.out

#- 58 DeletePlatformDLCConfig
$CLI_EXE \
    --sn platform \
    --op DeletePlatformDLCConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 58 'DeletePlatformDLCConfig' test.out

#- 59 QueryEntitlements
$CLI_EXE \
    --sn platform \
    --op QueryEntitlements \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --appType 'GAME' \
    --entitlementClazz 'ENTITLEMENT' \
    --entitlementName '4GCwPbu6' \
    --itemId '["tc09AXcR", "1PCkOvCU", "iRdMLWmZ"]' \
    --limit '65' \
    --offset '90' \
    --origin 'Nintendo' \
    --userId '2PQyyWHu' \
    > test.out 2>&1
eval_tap $? 59 'QueryEntitlements' test.out

#- 60 QueryEntitlements1
$CLI_EXE \
    --sn platform \
    --op QueryEntitlements1 \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --itemIds '["ME4UbTVL", "A0ZXwccb", "aN0Dlxs5"]' \
    --limit '0' \
    --offset '96' \
    > test.out 2>&1
eval_tap $? 60 'QueryEntitlements1' test.out

#- 61 EnableEntitlementOriginFeature
$CLI_EXE \
    --sn platform \
    --op EnableEntitlementOriginFeature \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 61 'EnableEntitlementOriginFeature' test.out

#- 62 GetEntitlementConfigInfo
$CLI_EXE \
    --sn platform \
    --op GetEntitlementConfigInfo \
    --namespace $AB_NAMESPACE \
    --withoutCache 'true' \
    > test.out 2>&1
eval_tap $? 62 'GetEntitlementConfigInfo' test.out

#- 63 GrantEntitlements
# body param: body
echo '{"entitlementGrantList": [{"endDate": "1980-12-07T00:00:00Z", "grantedCode": "F1UBxYkO", "itemId": "hE5oaVS3", "itemNamespace": "04SmXnPw", "language": "bqW-wk", "origin": "Epic", "quantity": 18, "region": "EPNpqeXz", "source": "ACHIEVEMENT", "startDate": "1976-06-04T00:00:00Z", "storeId": "cQHhja01"}, {"endDate": "1997-05-22T00:00:00Z", "grantedCode": "Kcb2haZT", "itemId": "U3Vs56DE", "itemNamespace": "36Q5D5fh", "language": "unPA_026", "origin": "Oculus", "quantity": 53, "region": "v9OQABLC", "source": "PROMOTION", "startDate": "1974-05-31T00:00:00Z", "storeId": "v8cF91XM"}, {"endDate": "1994-04-08T00:00:00Z", "grantedCode": "Uk0Fdc7j", "itemId": "9S0K6TNu", "itemNamespace": "M8bBbenI", "language": "UTGz", "origin": "Xbox", "quantity": 11, "region": "OolQTlUR", "source": "OTHER", "startDate": "1973-06-08T00:00:00Z", "storeId": "Be8RKV2I"}], "userIds": ["3EPyfErP", "hhzUCpeg", "nvOPLhst"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op GrantEntitlements \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 63 'GrantEntitlements' test.out

#- 64 RevokeEntitlements
# body param: body
echo '["KtkII3hP", "6h9OnQD5", "dFAPG6f5"]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RevokeEntitlements \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 64 'RevokeEntitlements' test.out

#- 65 GetEntitlement
$CLI_EXE \
    --sn platform \
    --op GetEntitlement \
    --entitlementId '4SzzDLMy' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 65 'GetEntitlement' test.out

#- 66 QueryFulfillmentHistories
$CLI_EXE \
    --sn platform \
    --op QueryFulfillmentHistories \
    --namespace $AB_NAMESPACE \
    --limit '72' \
    --offset '18' \
    --status 'SUCCESS' \
    --userId 'kIkFk7s8' \
    > test.out 2>&1
eval_tap $? 66 'QueryFulfillmentHistories' test.out

#- 67 QueryIAPClawbackHistory
$CLI_EXE \
    --sn platform \
    --op QueryIAPClawbackHistory \
    --namespace $AB_NAMESPACE \
    --endTime 'YsxrareP' \
    --eventType 'REFUND' \
    --externalOrderId 'vHgSkvQ1' \
    --limit '29' \
    --offset '33' \
    --startTime 'JsXaees8' \
    --status 'FAIL' \
    --userId 'gS6foVfA' \
    > test.out 2>&1
eval_tap $? 67 'QueryIAPClawbackHistory' test.out

#- 68 MockPlayStationStreamEvent
# body param: body
echo '{"body": {"account": "ZtlzJLxY", "additionalData": {"entitlement": [{"clientTransaction": [{"amountConsumed": 19, "clientTransactionId": "YWuapgVZ"}, {"amountConsumed": 16, "clientTransactionId": "2TSnpuyH"}, {"amountConsumed": 48, "clientTransactionId": "1V2EsWaO"}], "entitlementId": "JgSS1ENh", "usageCount": 64}, {"clientTransaction": [{"amountConsumed": 22, "clientTransactionId": "rqGh4CoZ"}, {"amountConsumed": 27, "clientTransactionId": "MPi8q7u5"}, {"amountConsumed": 44, "clientTransactionId": "uDXDdrbc"}], "entitlementId": "F2raxMuF", "usageCount": 90}, {"clientTransaction": [{"amountConsumed": 80, "clientTransactionId": "DFwcbw0N"}, {"amountConsumed": 92, "clientTransactionId": "wFgkFel0"}, {"amountConsumed": 28, "clientTransactionId": "1BjqNAe7"}], "entitlementId": "ND1thSxn", "usageCount": 64}], "purpose": "ir1m6f8G"}, "originalTitleName": "c7yVlGxE", "paymentProductSKU": "p24qfAIW", "purchaseDate": "KJhKsxuS", "sourceOrderItemId": "ilk8QP6A", "titleName": "zAMLCI8c"}, "eventDomain": "6ItTtJ1R", "eventSource": "uPXFx3oW", "eventType": "IHTsOEC8", "eventVersion": 58, "id": "uRRcLFfW", "timestamp": "YmcAghG5"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op MockPlayStationStreamEvent \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 68 'MockPlayStationStreamEvent' test.out

#- 69 GetAppleIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetAppleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 69 'GetAppleIAPConfig' test.out

#- 70 UpdateAppleIAPConfig
# body param: body
echo '{"bundleId": "VVikpTHA", "password": "DYdED8Fd"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateAppleIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 70 'UpdateAppleIAPConfig' test.out

#- 71 DeleteAppleIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteAppleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 71 'DeleteAppleIAPConfig' test.out

#- 72 GetEpicGamesIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetEpicGamesIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 72 'GetEpicGamesIAPConfig' test.out

#- 73 UpdateEpicGamesIAPConfig
# body param: body
echo '{"sandboxId": "X9pgRMvn"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateEpicGamesIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 73 'UpdateEpicGamesIAPConfig' test.out

#- 74 DeleteEpicGamesIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteEpicGamesIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 74 'DeleteEpicGamesIAPConfig' test.out

#- 75 GetGoogleIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetGoogleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 75 'GetGoogleIAPConfig' test.out

#- 76 UpdateGoogleIAPConfig
# body param: body
echo '{"applicationName": "ViMfgf3a", "serviceAccountId": "azAVSSvB"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateGoogleIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 76 'UpdateGoogleIAPConfig' test.out

#- 77 DeleteGoogleIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteGoogleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 77 'DeleteGoogleIAPConfig' test.out

#- 78 UpdateGoogleP12File
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UpdateGoogleP12File \
    --namespace $AB_NAMESPACE \
    --upload $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 78 'UpdateGoogleP12File' test.out

#- 79 GetIAPItemConfig
$CLI_EXE \
    --sn platform \
    --op GetIAPItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 79 'GetIAPItemConfig' test.out

#- 80 UpdateIAPItemConfig
# body param: body
echo '{"data": [{"itemIdentity": "xrr95uWT", "itemIdentityType": "ITEM_SKU", "platformProductIdMap": {"SPBeUkCu": "0EKGL0ew", "tzwihol2": "VcVYNI4N", "7T9dHPyZ": "ZGmdJFrc"}}, {"itemIdentity": "ktj6BVsE", "itemIdentityType": "ITEM_ID", "platformProductIdMap": {"EaUwJqLK": "q6zuZDEB", "CjDHIPpf": "WFFzQ5oz", "EmPTrIpp": "x7sDp36u"}}, {"itemIdentity": "PQd7DLxC", "itemIdentityType": "ITEM_SKU", "platformProductIdMap": {"3tZ7KfrN": "dq80vsIn", "KM3rltbf": "ozGYl0mU", "kSq5ZD9S": "91fCVIXs"}}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateIAPItemConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 80 'UpdateIAPItemConfig' test.out

#- 81 DeleteIAPItemConfig
$CLI_EXE \
    --sn platform \
    --op DeleteIAPItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 81 'DeleteIAPItemConfig' test.out

#- 82 GetOculusIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetOculusIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 82 'GetOculusIAPConfig' test.out

#- 83 UpdateOculusIAPConfig
# body param: body
echo '{"appId": "CvcykKd8", "appSecret": "Dfy7IQr8"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateOculusIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 83 'UpdateOculusIAPConfig' test.out

#- 84 DeleteOculusIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteOculusIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 84 'DeleteOculusIAPConfig' test.out

#- 85 GetPlayStationIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetPlayStationIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 85 'GetPlayStationIAPConfig' test.out

#- 86 UpdatePlaystationIAPConfig
# body param: body
echo '{"backOfficeServerClientId": "LZYSmvaW", "backOfficeServerClientSecret": "O2mp2Ij0", "enableStreamJob": false, "environment": "qew7JPyl", "streamName": "HAJhlrDb", "streamPartnerName": "AhggeOUc"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePlaystationIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 86 'UpdatePlaystationIAPConfig' test.out

#- 87 DeletePlaystationIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeletePlaystationIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 87 'DeletePlaystationIAPConfig' test.out

#- 88 ValidateExistedPlaystationIAPConfig
$CLI_EXE \
    --sn platform \
    --op ValidateExistedPlaystationIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 88 'ValidateExistedPlaystationIAPConfig' test.out

#- 89 ValidatePlaystationIAPConfig
# body param: body
echo '{"backOfficeServerClientId": "2bKnCvk4", "backOfficeServerClientSecret": "HidbAfPA", "enableStreamJob": true, "environment": "QNiOpH3A", "streamName": "IjNAIeNj", "streamPartnerName": "jiahvmng"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ValidatePlaystationIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 89 'ValidatePlaystationIAPConfig' test.out

#- 90 GetSteamIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetSteamIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 90 'GetSteamIAPConfig' test.out

#- 91 UpdateSteamIAPConfig
# body param: body
echo '{"appId": "0Nq2f2Qg", "publisherAuthenticationKey": "LjVSMACM"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateSteamIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 91 'UpdateSteamIAPConfig' test.out

#- 92 DeleteSteamIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteSteamIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 92 'DeleteSteamIAPConfig' test.out

#- 93 GetTwitchIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetTwitchIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 93 'GetTwitchIAPConfig' test.out

#- 94 UpdateTwitchIAPConfig
# body param: body
echo '{"clientId": "W5a0gHz5", "clientSecret": "CfZKZ1rT", "organizationId": "hifEQ5FU"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateTwitchIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 94 'UpdateTwitchIAPConfig' test.out

#- 95 DeleteTwitchIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteTwitchIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 95 'DeleteTwitchIAPConfig' test.out

#- 96 GetXblIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetXblIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 96 'GetXblIAPConfig' test.out

#- 97 UpdateXblIAPConfig
# body param: body
echo '{"relyingPartyCert": "e22dgD9A"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXblIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 97 'UpdateXblIAPConfig' test.out

#- 98 DeleteXblAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteXblAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 98 'DeleteXblAPConfig' test.out

#- 99 UpdateXblBPCertFile
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UpdateXblBPCertFile \
    --namespace $AB_NAMESPACE \
    --upload $TEMP_FILE_UPLOAD \
    --password 'lsIYv9KW' \
    > test.out 2>&1
eval_tap $? 99 'UpdateXblBPCertFile' test.out

#- 100 DownloadInvoiceDetails
$CLI_EXE \
    --sn platform \
    --op DownloadInvoiceDetails \
    --namespace $AB_NAMESPACE \
    --feature 'GZcKIpPh' \
    --itemId 'lb6A1JrP' \
    --itemType 'COINS' \
    --endTime 'YRQ22pza' \
    --startTime 'hPiCqcER' \
    > test.out 2>&1
eval_tap $? 100 'DownloadInvoiceDetails' test.out

#- 101 GenerateInvoiceSummary
$CLI_EXE \
    --sn platform \
    --op GenerateInvoiceSummary \
    --namespace $AB_NAMESPACE \
    --feature 'RgbaoQeN' \
    --itemId 'RM3vNTGD' \
    --itemType 'LOOTBOX' \
    --endTime 'FQP32wSW' \
    --startTime 'X6MPvPev' \
    > test.out 2>&1
eval_tap $? 101 'GenerateInvoiceSummary' test.out

#- 102 SyncInGameItem
# body param: body
echo '{"categoryPath": "SRnLYBA4", "targetItemId": "85hSeVOP", "targetNamespace": "UJ2UcOdb"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncInGameItem \
    --namespace $AB_NAMESPACE \
    --storeId '3wTVB2e0' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 102 'SyncInGameItem' test.out

#- 103 CreateItem
# body param: body
echo '{"appId": "YAxHHLO2", "appType": "SOFTWARE", "baseAppId": "uLys7Y3T", "boothName": "AUV8ST7G", "categoryPath": "Vbhc8Hkz", "clazz": "vvlOYVVz", "displayOrder": 3, "entitlementType": "DURABLE", "ext": {"tc2IE6IH": {}, "sd1yRFlH": {}, "XXpPEaA7": {}}, "features": ["doIWc22e", "MP2CDkkd", "QXhog2TC"], "flexible": true, "images": [{"as": "CYH4Tla6", "caption": "J1sMdCfU", "height": 80, "imageUrl": "eDfCL7nO", "smallImageUrl": "iJMfrDUK", "width": 24}, {"as": "tawbl4CQ", "caption": "Khmtbhja", "height": 55, "imageUrl": "zheRMk0o", "smallImageUrl": "g9xUvtdr", "width": 54}, {"as": "KnSYB6Hb", "caption": "FDpOuZ6M", "height": 88, "imageUrl": "cUljfmRD", "smallImageUrl": "9VmLFqmY", "width": 71}], "itemIds": ["ipivJfmw", "HxMLEbj8", "OpU858Kj"], "itemQty": {"cIXunHA9": 52, "cXUb3FFn": 10, "w0EptTBv": 82}, "itemType": "OPTIONBOX", "listable": true, "localizations": {"XvpgM7tR": {"description": "FCvw5B29", "localExt": {"6U3sxAIQ": {}, "0J9bKV6O": {}, "Aicb0DyM": {}}, "longDescription": "6MHwI2pl", "title": "FuWLSht7"}, "Br9WGPGh": {"description": "KSK3EUlD", "localExt": {"YJxtCu5m": {}, "LengUhZN": {}, "XtO8Nlti": {}}, "longDescription": "SIMMv3lv", "title": "Mvcx3fmo"}, "OcVoMh89": {"description": "f4DHypPG", "localExt": {"1Y8HcRog": {}, "ly7yURJP": {}, "H7hPLrRb": {}}, "longDescription": "bzCmoxkY", "title": "eIo8Y8Ry"}}, "lootBoxConfig": {"rewardCount": 78, "rewards": [{"lootBoxItems": [{"count": 21, "duration": 9, "endDate": "1985-05-19T00:00:00Z", "itemId": "ttTBuw1F", "itemSku": "d7mjB8tp", "itemType": "59MaGcD7"}, {"count": 71, "duration": 49, "endDate": "1978-12-10T00:00:00Z", "itemId": "FMlNfWZs", "itemSku": "WW0EtMcw", "itemType": "4Z0uWr9C"}, {"count": 77, "duration": 74, "endDate": "1975-12-11T00:00:00Z", "itemId": "GgTeOu9o", "itemSku": "A4PdgE2s", "itemType": "XRfksIaQ"}], "name": "AsanTQb5", "odds": 0.06315381054639546, "type": "REWARD_GROUP", "weight": 20}, {"lootBoxItems": [{"count": 63, "duration": 76, "endDate": "1999-12-16T00:00:00Z", "itemId": "IsJeRDi9", "itemSku": "ImaNfYaw", "itemType": "NC5Pu7lj"}, {"count": 39, "duration": 25, "endDate": "1975-04-08T00:00:00Z", "itemId": "eITQcz1O", "itemSku": "VBlpHu80", "itemType": "ODqpwX57"}, {"count": 100, "duration": 72, "endDate": "1993-12-13T00:00:00Z", "itemId": "pIZowGu8", "itemSku": "Em2oQIMa", "itemType": "vdhL6Oq1"}], "name": "9fbvXveX", "odds": 0.02280635022825306, "type": "REWARD_GROUP", "weight": 96}, {"lootBoxItems": [{"count": 11, "duration": 50, "endDate": "1979-09-17T00:00:00Z", "itemId": "QV0j5Zpy", "itemSku": "lkydYzIB", "itemType": "DT9QdfYk"}, {"count": 46, "duration": 26, "endDate": "1976-03-16T00:00:00Z", "itemId": "imYx02Q4", "itemSku": "eLVRLNmH", "itemType": "u700cDZp"}, {"count": 25, "duration": 55, "endDate": "1983-09-18T00:00:00Z", "itemId": "gkje2lBf", "itemSku": "4FmmAPQF", "itemType": "ShjTWDPq"}], "name": "Py6E0xzC", "odds": 0.9866094058569207, "type": "REWARD_GROUP", "weight": 9}], "rollFunction": "CUSTOM"}, "maxCount": 14, "maxCountPerUser": 31, "name": "z93lVK0w", "optionBoxConfig": {"boxItems": [{"count": 58, "duration": 33, "endDate": "1971-02-15T00:00:00Z", "itemId": "kVuQWe1y", "itemSku": "44Nm1So9", "itemType": "W11xA4in"}, {"count": 35, "duration": 82, "endDate": "1992-01-12T00:00:00Z", "itemId": "2U823cPg", "itemSku": "XxNzJzdn", "itemType": "TknHHfhQ"}, {"count": 51, "duration": 38, "endDate": "1986-08-10T00:00:00Z", "itemId": "KZdzzyrn", "itemSku": "v5MXpnr3", "itemType": "08YXrZFW"}]}, "purchasable": false, "recurring": {"cycle": "MONTHLY", "fixedFreeDays": 98, "fixedTrialCycles": 37, "graceDays": 63}, "regionData": {"SLaaqV6H": [{"currencyCode": "5Zl72dIH", "currencyNamespace": "0VimDaQ8", "currencyType": "REAL", "discountAmount": 49, "discountExpireAt": "1994-01-02T00:00:00Z", "discountPercentage": 45, "discountPurchaseAt": "1994-11-24T00:00:00Z", "expireAt": "1984-10-28T00:00:00Z", "price": 20, "purchaseAt": "1974-09-28T00:00:00Z", "trialPrice": 37}, {"currencyCode": "I2EiJ6ba", "currencyNamespace": "9c1ICeMi", "currencyType": "VIRTUAL", "discountAmount": 57, "discountExpireAt": "1995-11-08T00:00:00Z", "discountPercentage": 97, "discountPurchaseAt": "1971-03-13T00:00:00Z", "expireAt": "1983-07-10T00:00:00Z", "price": 61, "purchaseAt": "1996-01-27T00:00:00Z", "trialPrice": 59}, {"currencyCode": "AANTWVGn", "currencyNamespace": "d8iO8qI3", "currencyType": "VIRTUAL", "discountAmount": 70, "discountExpireAt": "1995-10-27T00:00:00Z", "discountPercentage": 97, "discountPurchaseAt": "1982-01-26T00:00:00Z", "expireAt": "1978-03-23T00:00:00Z", "price": 19, "purchaseAt": "1976-01-19T00:00:00Z", "trialPrice": 68}], "89QZwyx6": [{"currencyCode": "4qO6RWq5", "currencyNamespace": "A1259Fwl", "currencyType": "VIRTUAL", "discountAmount": 98, "discountExpireAt": "1971-04-08T00:00:00Z", "discountPercentage": 56, "discountPurchaseAt": "1974-08-03T00:00:00Z", "expireAt": "1997-11-08T00:00:00Z", "price": 3, "purchaseAt": "1978-01-12T00:00:00Z", "trialPrice": 91}, {"currencyCode": "37pyUdmb", "currencyNamespace": "whEAgcOk", "currencyType": "REAL", "discountAmount": 63, "discountExpireAt": "1996-07-24T00:00:00Z", "discountPercentage": 54, "discountPurchaseAt": "1998-03-15T00:00:00Z", "expireAt": "1982-12-15T00:00:00Z", "price": 45, "purchaseAt": "1986-07-07T00:00:00Z", "trialPrice": 58}, {"currencyCode": "OMyYhCWy", "currencyNamespace": "sUuCosxo", "currencyType": "VIRTUAL", "discountAmount": 76, "discountExpireAt": "1987-10-20T00:00:00Z", "discountPercentage": 19, "discountPurchaseAt": "1989-04-05T00:00:00Z", "expireAt": "1972-06-10T00:00:00Z", "price": 91, "purchaseAt": "1981-10-23T00:00:00Z", "trialPrice": 19}], "meRz7OTu": [{"currencyCode": "bgrxjEAF", "currencyNamespace": "aWfndP1O", "currencyType": "REAL", "discountAmount": 74, "discountExpireAt": "1994-11-13T00:00:00Z", "discountPercentage": 56, "discountPurchaseAt": "1989-09-15T00:00:00Z", "expireAt": "1992-06-05T00:00:00Z", "price": 32, "purchaseAt": "1989-09-09T00:00:00Z", "trialPrice": 43}, {"currencyCode": "bNiR02lT", "currencyNamespace": "jCY8mcWI", "currencyType": "REAL", "discountAmount": 54, "discountExpireAt": "1975-09-14T00:00:00Z", "discountPercentage": 74, "discountPurchaseAt": "1981-07-03T00:00:00Z", "expireAt": "1985-03-04T00:00:00Z", "price": 50, "purchaseAt": "1990-03-27T00:00:00Z", "trialPrice": 2}, {"currencyCode": "InQOCaf9", "currencyNamespace": "L1hFg4Bu", "currencyType": "REAL", "discountAmount": 95, "discountExpireAt": "1985-05-11T00:00:00Z", "discountPercentage": 84, "discountPurchaseAt": "1993-03-09T00:00:00Z", "expireAt": "1983-05-19T00:00:00Z", "price": 68, "purchaseAt": "1971-06-26T00:00:00Z", "trialPrice": 91}]}, "saleConfig": {"currencyCode": "7jWaZG6r", "price": 16}, "seasonType": "PASS", "sectionExclusive": false, "sellable": true, "sku": "D9ASyYnC", "stackable": false, "status": "INACTIVE", "tags": ["RfQ0tqah", "kNWYQnTI", "BZa3cv1h"], "targetCurrencyCode": "YUwIkAkq", "targetNamespace": "HeMvhQLt", "thumbnailUrl": "GPGjO1IV", "useCount": 92}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateItem \
    --namespace $AB_NAMESPACE \
    --storeId 'AHMDwg1d' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 103 'CreateItem' test.out

#- 104 GetItemByAppId
$CLI_EXE \
    --sn platform \
    --op GetItemByAppId \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --storeId 'unaJw5YF' \
    --appId 'RsCkYibs' \
    > test.out 2>&1
eval_tap $? 104 'GetItemByAppId' test.out

#- 105 QueryItems
$CLI_EXE \
    --sn platform \
    --op QueryItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --appType 'DEMO' \
    --availableDate 'LQOB3Ycf' \
    --baseAppId '9nUX80TF' \
    --categoryPath 'ps3jFAt7' \
    --features 'HMYX6JOG' \
    --includeSubCategoryItem 'false' \
    --itemType 'OPTIONBOX' \
    --limit '36' \
    --offset '4' \
    --region 'OwqTJfBz' \
    --sortBy '["name:asc", "updatedAt", "displayOrder"]' \
    --storeId 'lKmjx9CO' \
    --tags 'kHvuW8IE' \
    --targetNamespace '0wNtEDvm' \
    > test.out 2>&1
eval_tap $? 105 'QueryItems' test.out

#- 106 ListBasicItemsByFeatures
$CLI_EXE \
    --sn platform \
    --op ListBasicItemsByFeatures \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --features '["Nu4Ybs5S", "qkWmsMR7", "4ZjHq38h"]' \
    > test.out 2>&1
eval_tap $? 106 'ListBasicItemsByFeatures' test.out

#- 107 GetItems
$CLI_EXE \
    --sn platform \
    --op GetItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --storeId 'HbSh8fil' \
    --itemIds 'ioS43mp6' \
    > test.out 2>&1
eval_tap $? 107 'GetItems' test.out

#- 108 GetItemBySku
$CLI_EXE \
    --sn platform \
    --op GetItemBySku \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --storeId 'NcHLL6GQ' \
    --sku 'iPp3DhSn' \
    > test.out 2>&1
eval_tap $? 108 'GetItemBySku' test.out

#- 109 GetLocaleItemBySku
$CLI_EXE \
    --sn platform \
    --op GetLocaleItemBySku \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --language '23V7aSUA' \
    --populateBundle 'true' \
    --region 'eUfAB6hu' \
    --storeId 'tLB3iaP6' \
    --sku 'Ba6KHy1c' \
    > test.out 2>&1
eval_tap $? 109 'GetLocaleItemBySku' test.out

#- 110 GetEstimatedPrice
$CLI_EXE \
    --sn platform \
    --op GetEstimatedPrice \
    --namespace $AB_NAMESPACE \
    --region 'ZBWHkiKQ' \
    --storeId '33apvFwV' \
    --itemIds '3EeCr0ql' \
    --userId '2IYVyCcc' \
    > test.out 2>&1
eval_tap $? 110 'GetEstimatedPrice' test.out

#- 111 GetItemIdBySku
$CLI_EXE \
    --sn platform \
    --op GetItemIdBySku \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --storeId 'IR1iQ6Cg' \
    --sku 'Vtj2vA9t' \
    > test.out 2>&1
eval_tap $? 111 'GetItemIdBySku' test.out

#- 112 GetBulkItemIdBySkus
$CLI_EXE \
    --sn platform \
    --op GetBulkItemIdBySkus \
    --namespace $AB_NAMESPACE \
    --sku '["M7jP1mGW", "bol2Acw0", "37xYRWPF"]' \
    --storeId 'PZwxbHqx' \
    > test.out 2>&1
eval_tap $? 112 'GetBulkItemIdBySkus' test.out

#- 113 BulkGetLocaleItems
$CLI_EXE \
    --sn platform \
    --op BulkGetLocaleItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --language 'kfHrJLgl' \
    --region 'oT0AjTrw' \
    --storeId 'rBcW2xkJ' \
    --itemIds '6vZAMbqn' \
    > test.out 2>&1
eval_tap $? 113 'BulkGetLocaleItems' test.out

#- 114 GetAvailablePredicateTypes
$CLI_EXE \
    --sn platform \
    --op GetAvailablePredicateTypes \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 114 'GetAvailablePredicateTypes' test.out

#- 115 ValidateItemPurchaseCondition
# body param: body
echo '{"itemIds": ["oq3XszKx", "UAC0YNCf", "kJhis8JN"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ValidateItemPurchaseCondition \
    --namespace $AB_NAMESPACE \
    --userId 'CG4qR7UX' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 115 'ValidateItemPurchaseCondition' test.out

#- 116 BulkUpdateRegionData
# body param: body
echo '{"changes": [{"itemIdentities": ["l02198BK", "KVhs1fdJ", "cLq0ciDI"], "itemIdentityType": "ITEM_ID", "regionData": {"zVQxtnex": [{"currencyCode": "7bdOzYSD", "currencyNamespace": "vGYo0kJm", "currencyType": "REAL", "discountAmount": 83, "discountExpireAt": "1999-05-03T00:00:00Z", "discountPercentage": 55, "discountPurchaseAt": "1989-12-26T00:00:00Z", "discountedPrice": 29, "expireAt": "1976-05-12T00:00:00Z", "price": 68, "purchaseAt": "1971-07-14T00:00:00Z", "trialPrice": 82}, {"currencyCode": "sgqGjipv", "currencyNamespace": "NH0FRjfP", "currencyType": "REAL", "discountAmount": 30, "discountExpireAt": "1993-05-22T00:00:00Z", "discountPercentage": 42, "discountPurchaseAt": "1989-12-30T00:00:00Z", "discountedPrice": 63, "expireAt": "1994-02-12T00:00:00Z", "price": 47, "purchaseAt": "1971-03-27T00:00:00Z", "trialPrice": 8}, {"currencyCode": "1PRj9zIs", "currencyNamespace": "VBETFyNK", "currencyType": "REAL", "discountAmount": 57, "discountExpireAt": "1973-09-09T00:00:00Z", "discountPercentage": 28, "discountPurchaseAt": "1971-06-14T00:00:00Z", "discountedPrice": 41, "expireAt": "1987-12-22T00:00:00Z", "price": 45, "purchaseAt": "1989-06-22T00:00:00Z", "trialPrice": 22}], "QlSSRJnJ": [{"currencyCode": "nHBMFgAM", "currencyNamespace": "8OCkSfRF", "currencyType": "REAL", "discountAmount": 77, "discountExpireAt": "1978-05-05T00:00:00Z", "discountPercentage": 9, "discountPurchaseAt": "1992-07-12T00:00:00Z", "discountedPrice": 12, "expireAt": "1975-08-28T00:00:00Z", "price": 30, "purchaseAt": "1979-11-20T00:00:00Z", "trialPrice": 14}, {"currencyCode": "d6XTWAG1", "currencyNamespace": "2Fc5RqJZ", "currencyType": "VIRTUAL", "discountAmount": 24, "discountExpireAt": "1982-02-17T00:00:00Z", "discountPercentage": 56, "discountPurchaseAt": "1971-09-04T00:00:00Z", "discountedPrice": 94, "expireAt": "1994-07-25T00:00:00Z", "price": 42, "purchaseAt": "1990-03-27T00:00:00Z", "trialPrice": 86}, {"currencyCode": "3C5OAvu8", "currencyNamespace": "G0ND3plx", "currencyType": "REAL", "discountAmount": 37, "discountExpireAt": "1976-09-10T00:00:00Z", "discountPercentage": 93, "discountPurchaseAt": "1995-04-08T00:00:00Z", "discountedPrice": 85, "expireAt": "1997-02-15T00:00:00Z", "price": 41, "purchaseAt": "1990-07-20T00:00:00Z", "trialPrice": 71}], "JCtPggu1": [{"currencyCode": "MHTD08th", "currencyNamespace": "xSpWImVL", "currencyType": "REAL", "discountAmount": 87, "discountExpireAt": "1972-07-01T00:00:00Z", "discountPercentage": 38, "discountPurchaseAt": "1996-08-11T00:00:00Z", "discountedPrice": 68, "expireAt": "1981-04-17T00:00:00Z", "price": 48, "purchaseAt": "1982-07-13T00:00:00Z", "trialPrice": 2}, {"currencyCode": "eof1SIbe", "currencyNamespace": "cypOnYqe", "currencyType": "VIRTUAL", "discountAmount": 76, "discountExpireAt": "1999-05-09T00:00:00Z", "discountPercentage": 19, "discountPurchaseAt": "1986-01-15T00:00:00Z", "discountedPrice": 55, "expireAt": "1995-07-20T00:00:00Z", "price": 39, "purchaseAt": "1988-09-14T00:00:00Z", "trialPrice": 89}, {"currencyCode": "vYEsihaP", "currencyNamespace": "1UnWgtg6", "currencyType": "REAL", "discountAmount": 37, "discountExpireAt": "1978-03-03T00:00:00Z", "discountPercentage": 32, "discountPurchaseAt": "1983-05-20T00:00:00Z", "discountedPrice": 42, "expireAt": "1982-10-10T00:00:00Z", "price": 78, "purchaseAt": "1997-03-14T00:00:00Z", "trialPrice": 1}]}}, {"itemIdentities": ["RYcLyVtg", "ExVv99Zq", "tNyOyjfj"], "itemIdentityType": "ITEM_ID", "regionData": {"w7vv6Mrt": [{"currencyCode": "g6PlSNcp", "currencyNamespace": "SFnFbkFu", "currencyType": "VIRTUAL", "discountAmount": 40, "discountExpireAt": "1975-09-22T00:00:00Z", "discountPercentage": 67, "discountPurchaseAt": "1991-01-22T00:00:00Z", "discountedPrice": 89, "expireAt": "1975-01-16T00:00:00Z", "price": 96, "purchaseAt": "1983-02-25T00:00:00Z", "trialPrice": 25}, {"currencyCode": "VY1Zo0SO", "currencyNamespace": "eVQnRCX8", "currencyType": "VIRTUAL", "discountAmount": 39, "discountExpireAt": "1986-01-15T00:00:00Z", "discountPercentage": 8, "discountPurchaseAt": "1985-11-01T00:00:00Z", "discountedPrice": 52, "expireAt": "1977-08-25T00:00:00Z", "price": 44, "purchaseAt": "1974-05-15T00:00:00Z", "trialPrice": 45}, {"currencyCode": "nQQ6udbn", "currencyNamespace": "9C3mCS1O", "currencyType": "VIRTUAL", "discountAmount": 88, "discountExpireAt": "1999-01-09T00:00:00Z", "discountPercentage": 8, "discountPurchaseAt": "1982-07-26T00:00:00Z", "discountedPrice": 3, "expireAt": "1980-06-20T00:00:00Z", "price": 64, "purchaseAt": "1998-04-22T00:00:00Z", "trialPrice": 93}], "YuVTLjD3": [{"currencyCode": "jMAmV1Xl", "currencyNamespace": "Fahm4Cyh", "currencyType": "REAL", "discountAmount": 24, "discountExpireAt": "1973-03-03T00:00:00Z", "discountPercentage": 17, "discountPurchaseAt": "1971-07-01T00:00:00Z", "discountedPrice": 77, "expireAt": "1977-01-03T00:00:00Z", "price": 96, "purchaseAt": "1989-12-31T00:00:00Z", "trialPrice": 2}, {"currencyCode": "BeaOmaIT", "currencyNamespace": "4pMPS2rL", "currencyType": "VIRTUAL", "discountAmount": 33, "discountExpireAt": "1987-08-13T00:00:00Z", "discountPercentage": 98, "discountPurchaseAt": "1990-02-23T00:00:00Z", "discountedPrice": 42, "expireAt": "1996-03-23T00:00:00Z", "price": 20, "purchaseAt": "1982-08-05T00:00:00Z", "trialPrice": 88}, {"currencyCode": "XKmHe4Yv", "currencyNamespace": "LYjUneUl", "currencyType": "VIRTUAL", "discountAmount": 3, "discountExpireAt": "1992-11-03T00:00:00Z", "discountPercentage": 93, "discountPurchaseAt": "1988-10-14T00:00:00Z", "discountedPrice": 54, "expireAt": "1972-10-01T00:00:00Z", "price": 5, "purchaseAt": "1972-11-24T00:00:00Z", "trialPrice": 61}], "WqPAaBHv": [{"currencyCode": "5z3KUoBg", "currencyNamespace": "wNmf3zvZ", "currencyType": "VIRTUAL", "discountAmount": 23, "discountExpireAt": "1985-07-21T00:00:00Z", "discountPercentage": 55, "discountPurchaseAt": "1982-06-02T00:00:00Z", "discountedPrice": 18, "expireAt": "1992-12-23T00:00:00Z", "price": 60, "purchaseAt": "1992-11-22T00:00:00Z", "trialPrice": 98}, {"currencyCode": "TvJTr9Qu", "currencyNamespace": "5k374O0H", "currencyType": "VIRTUAL", "discountAmount": 40, "discountExpireAt": "1986-11-07T00:00:00Z", "discountPercentage": 37, "discountPurchaseAt": "1973-03-15T00:00:00Z", "discountedPrice": 58, "expireAt": "1984-08-01T00:00:00Z", "price": 82, "purchaseAt": "1979-10-16T00:00:00Z", "trialPrice": 78}, {"currencyCode": "d4CxFxc7", "currencyNamespace": "HK16aof4", "currencyType": "VIRTUAL", "discountAmount": 50, "discountExpireAt": "1984-11-28T00:00:00Z", "discountPercentage": 82, "discountPurchaseAt": "1989-03-15T00:00:00Z", "discountedPrice": 46, "expireAt": "1988-11-12T00:00:00Z", "price": 94, "purchaseAt": "1981-07-22T00:00:00Z", "trialPrice": 98}]}}, {"itemIdentities": ["xzFPVJXw", "sCJuDzM0", "W7IsZzkg"], "itemIdentityType": "ITEM_SKU", "regionData": {"ppDiU86V": [{"currencyCode": "FpcMCjnh", "currencyNamespace": "cZY9enZ1", "currencyType": "REAL", "discountAmount": 86, "discountExpireAt": "1971-05-12T00:00:00Z", "discountPercentage": 53, "discountPurchaseAt": "1990-08-04T00:00:00Z", "discountedPrice": 4, "expireAt": "1988-10-08T00:00:00Z", "price": 31, "purchaseAt": "1979-12-10T00:00:00Z", "trialPrice": 60}, {"currencyCode": "qRWn1nBg", "currencyNamespace": "V2Mmexzn", "currencyType": "VIRTUAL", "discountAmount": 37, "discountExpireAt": "1982-03-13T00:00:00Z", "discountPercentage": 88, "discountPurchaseAt": "1995-08-17T00:00:00Z", "discountedPrice": 62, "expireAt": "1998-05-30T00:00:00Z", "price": 21, "purchaseAt": "1989-12-06T00:00:00Z", "trialPrice": 2}, {"currencyCode": "pBddbmp1", "currencyNamespace": "NSwhHuvz", "currencyType": "REAL", "discountAmount": 50, "discountExpireAt": "1996-01-17T00:00:00Z", "discountPercentage": 40, "discountPurchaseAt": "1987-12-02T00:00:00Z", "discountedPrice": 16, "expireAt": "1996-07-18T00:00:00Z", "price": 37, "purchaseAt": "1998-11-26T00:00:00Z", "trialPrice": 95}], "ksW29kWO": [{"currencyCode": "7j1MV3Am", "currencyNamespace": "hctbKu8s", "currencyType": "REAL", "discountAmount": 18, "discountExpireAt": "1993-02-08T00:00:00Z", "discountPercentage": 60, "discountPurchaseAt": "1974-10-02T00:00:00Z", "discountedPrice": 58, "expireAt": "1986-11-08T00:00:00Z", "price": 87, "purchaseAt": "1988-03-23T00:00:00Z", "trialPrice": 17}, {"currencyCode": "qkzd97qN", "currencyNamespace": "oBjGxS9x", "currencyType": "VIRTUAL", "discountAmount": 18, "discountExpireAt": "1976-11-01T00:00:00Z", "discountPercentage": 77, "discountPurchaseAt": "1996-10-26T00:00:00Z", "discountedPrice": 73, "expireAt": "1979-04-29T00:00:00Z", "price": 95, "purchaseAt": "1971-01-13T00:00:00Z", "trialPrice": 91}, {"currencyCode": "YIUVlMV7", "currencyNamespace": "YUPk4lMK", "currencyType": "REAL", "discountAmount": 47, "discountExpireAt": "1987-03-04T00:00:00Z", "discountPercentage": 69, "discountPurchaseAt": "1995-08-05T00:00:00Z", "discountedPrice": 59, "expireAt": "1996-02-06T00:00:00Z", "price": 39, "purchaseAt": "1993-05-14T00:00:00Z", "trialPrice": 19}], "nSfCdjBN": [{"currencyCode": "weGpxIcP", "currencyNamespace": "E5xctlNN", "currencyType": "VIRTUAL", "discountAmount": 66, "discountExpireAt": "1971-01-06T00:00:00Z", "discountPercentage": 65, "discountPurchaseAt": "1971-01-26T00:00:00Z", "discountedPrice": 5, "expireAt": "1976-12-22T00:00:00Z", "price": 0, "purchaseAt": "1979-01-14T00:00:00Z", "trialPrice": 93}, {"currencyCode": "xuha7yTo", "currencyNamespace": "kY5WeILg", "currencyType": "VIRTUAL", "discountAmount": 37, "discountExpireAt": "1988-03-02T00:00:00Z", "discountPercentage": 96, "discountPurchaseAt": "1993-04-17T00:00:00Z", "discountedPrice": 63, "expireAt": "1999-04-04T00:00:00Z", "price": 61, "purchaseAt": "1984-12-22T00:00:00Z", "trialPrice": 1}, {"currencyCode": "Z2TowZMU", "currencyNamespace": "JZaOcj7S", "currencyType": "REAL", "discountAmount": 31, "discountExpireAt": "1975-11-22T00:00:00Z", "discountPercentage": 97, "discountPurchaseAt": "1973-02-14T00:00:00Z", "discountedPrice": 80, "expireAt": "1978-09-30T00:00:00Z", "price": 81, "purchaseAt": "1996-10-06T00:00:00Z", "trialPrice": 62}]}}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op BulkUpdateRegionData \
    --namespace $AB_NAMESPACE \
    --storeId 'NlsEeW1E' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 116 'BulkUpdateRegionData' test.out

#- 117 SearchItems
$CLI_EXE \
    --sn platform \
    --op SearchItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --itemType 'MEDIA' \
    --limit '24' \
    --offset '45' \
    --sortBy 'iXPG4RXz' \
    --storeId 'woFHUwT5' \
    --keyword 'mLJhKSfY' \
    --language 'CGutTpXR' \
    > test.out 2>&1
eval_tap $? 117 'SearchItems' test.out

#- 118 QueryUncategorizedItems
$CLI_EXE \
    --sn platform \
    --op QueryUncategorizedItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --limit '76' \
    --offset '60' \
    --sortBy '["name:asc", "displayOrder", "displayOrder:desc"]' \
    --storeId 'YFHB2Btu' \
    > test.out 2>&1
eval_tap $? 118 'QueryUncategorizedItems' test.out

#- 119 GetItem
$CLI_EXE \
    --sn platform \
    --op GetItem \
    --itemId 'ouNKwfxR' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --storeId 'h7Mie7O8' \
    > test.out 2>&1
eval_tap $? 119 'GetItem' test.out

#- 120 UpdateItem
# body param: body
echo '{"appId": "GooZ9L2d", "appType": "DLC", "baseAppId": "7uEDTMEu", "boothName": "ODEj8fQ1", "categoryPath": "8FjWl81D", "clazz": "Qwazd5q5", "displayOrder": 28, "entitlementType": "DURABLE", "ext": {"2WIP2SZv": {}, "uXnSrrw5": {}, "sod7gkrD": {}}, "features": ["KmpL4j0T", "FaHTkW8z", "AobDUPJs"], "flexible": true, "images": [{"as": "sHmzX8RT", "caption": "kmjRwN9k", "height": 68, "imageUrl": "pokSPdna", "smallImageUrl": "jXvt81lN", "width": 42}, {"as": "Tw6hfUTw", "caption": "iQ1qQYaS", "height": 46, "imageUrl": "2WmxDiif", "smallImageUrl": "IVJAVzgc", "width": 38}, {"as": "Zob9VGbs", "caption": "lz0SxvLP", "height": 48, "imageUrl": "qQfjFPVX", "smallImageUrl": "nM4OiYvr", "width": 99}], "itemIds": ["CQhEOKhB", "UMfTAoUy", "jY6IIp3r"], "itemQty": {"tWwTyoKJ": 7, "GRFsy2dp": 55, "BSAQCJVI": 3}, "itemType": "MEDIA", "listable": false, "localizations": {"Qv2IktTx": {"description": "ibgSy0dc", "localExt": {"6sZULNoQ": {}, "qyVXzCvf": {}, "IrEgAEJ3": {}}, "longDescription": "k6ctdB24", "title": "oK2wbwIm"}, "VM13B7Pc": {"description": "odoBnDng", "localExt": {"UpCaiLTG": {}, "64gM0TzV": {}, "1uX9wPyA": {}}, "longDescription": "zngFDYEk", "title": "v4qGKgTs"}, "uyC7gTRd": {"description": "X542Reqc", "localExt": {"sRB8th8e": {}, "sc2XRs8x": {}, "lehSDjVg": {}}, "longDescription": "t6M8Dfep", "title": "pPtTXMlH"}}, "lootBoxConfig": {"rewardCount": 82, "rewards": [{"lootBoxItems": [{"count": 33, "duration": 67, "endDate": "1975-07-08T00:00:00Z", "itemId": "Bj0uOMgl", "itemSku": "s4NrrMA0", "itemType": "7vkkRlNW"}, {"count": 79, "duration": 56, "endDate": "1985-04-30T00:00:00Z", "itemId": "RehL7PQJ", "itemSku": "zBMASHX4", "itemType": "5LmPBX3d"}, {"count": 55, "duration": 5, "endDate": "1981-03-08T00:00:00Z", "itemId": "j3R91CS1", "itemSku": "ROXa0SlI", "itemType": "tNzgCl4s"}], "name": "aF765132", "odds": 0.3055960322130774, "type": "REWARD_GROUP", "weight": 72}, {"lootBoxItems": [{"count": 49, "duration": 51, "endDate": "1975-06-16T00:00:00Z", "itemId": "ckBDfPp3", "itemSku": "aV1uKGFq", "itemType": "tuwHfHwN"}, {"count": 28, "duration": 38, "endDate": "1980-01-14T00:00:00Z", "itemId": "0yD6iLEE", "itemSku": "1KySMS0C", "itemType": "Y1YuhUpn"}, {"count": 86, "duration": 62, "endDate": "1994-12-21T00:00:00Z", "itemId": "Htq5RJuG", "itemSku": "j0w3sUMX", "itemType": "Ft3fWlzt"}], "name": "bQfJ7Zpw", "odds": 0.26762481802200444, "type": "PROBABILITY_GROUP", "weight": 0}, {"lootBoxItems": [{"count": 51, "duration": 42, "endDate": "1998-06-28T00:00:00Z", "itemId": "SxrAdVud", "itemSku": "iwbYWgyc", "itemType": "hU51Xj1Q"}, {"count": 59, "duration": 2, "endDate": "1985-12-26T00:00:00Z", "itemId": "dQwAqy5N", "itemSku": "DmvSpTXI", "itemType": "Q6ssmqZB"}, {"count": 96, "duration": 93, "endDate": "1996-10-07T00:00:00Z", "itemId": "Sk8Izncm", "itemSku": "JfYm4tNb", "itemType": "2MW1pbNZ"}], "name": "MPoR6OsO", "odds": 0.1081315908609235, "type": "REWARD", "weight": 20}], "rollFunction": "DEFAULT"}, "maxCount": 51, "maxCountPerUser": 65, "name": "EdA0ZiUC", "optionBoxConfig": {"boxItems": [{"count": 46, "duration": 87, "endDate": "1993-06-04T00:00:00Z", "itemId": "xaP1AR6S", "itemSku": "8p7UczhX", "itemType": "1q5BOSgw"}, {"count": 18, "duration": 29, "endDate": "1988-04-01T00:00:00Z", "itemId": "i0WMRW0u", "itemSku": "GYxOz6vl", "itemType": "aQp4bIgR"}, {"count": 80, "duration": 82, "endDate": "1972-12-02T00:00:00Z", "itemId": "Zdme9OWG", "itemSku": "XiOMWi2b", "itemType": "NsI6s9p8"}]}, "purchasable": false, "recurring": {"cycle": "YEARLY", "fixedFreeDays": 94, "fixedTrialCycles": 19, "graceDays": 69}, "regionData": {"JaDJJiBb": [{"currencyCode": "C8z88qPN", "currencyNamespace": "0xe7yuv6", "currencyType": "VIRTUAL", "discountAmount": 3, "discountExpireAt": "1990-02-11T00:00:00Z", "discountPercentage": 94, "discountPurchaseAt": "1993-04-24T00:00:00Z", "expireAt": "1986-03-20T00:00:00Z", "price": 32, "purchaseAt": "1980-03-20T00:00:00Z", "trialPrice": 96}, {"currencyCode": "TKCfbCg3", "currencyNamespace": "tbai67M7", "currencyType": "REAL", "discountAmount": 57, "discountExpireAt": "1978-08-27T00:00:00Z", "discountPercentage": 66, "discountPurchaseAt": "1989-04-20T00:00:00Z", "expireAt": "1987-08-21T00:00:00Z", "price": 33, "purchaseAt": "1974-07-29T00:00:00Z", "trialPrice": 19}, {"currencyCode": "JB7Oa8UM", "currencyNamespace": "iFxBV3O8", "currencyType": "VIRTUAL", "discountAmount": 97, "discountExpireAt": "1991-08-21T00:00:00Z", "discountPercentage": 32, "discountPurchaseAt": "1974-04-15T00:00:00Z", "expireAt": "1995-09-03T00:00:00Z", "price": 90, "purchaseAt": "1992-05-10T00:00:00Z", "trialPrice": 21}], "tBpQNhSR": [{"currencyCode": "RctUrIjI", "currencyNamespace": "yRMT2npk", "currencyType": "REAL", "discountAmount": 62, "discountExpireAt": "1981-10-16T00:00:00Z", "discountPercentage": 36, "discountPurchaseAt": "1976-03-18T00:00:00Z", "expireAt": "1984-03-31T00:00:00Z", "price": 47, "purchaseAt": "1993-04-12T00:00:00Z", "trialPrice": 19}, {"currencyCode": "RvjiAVGf", "currencyNamespace": "6l3Mz9d9", "currencyType": "REAL", "discountAmount": 43, "discountExpireAt": "1991-06-15T00:00:00Z", "discountPercentage": 13, "discountPurchaseAt": "1991-02-26T00:00:00Z", "expireAt": "1971-06-26T00:00:00Z", "price": 73, "purchaseAt": "1981-03-07T00:00:00Z", "trialPrice": 46}, {"currencyCode": "hBH9r4sZ", "currencyNamespace": "oBIOKmuL", "currencyType": "REAL", "discountAmount": 23, "discountExpireAt": "1992-11-12T00:00:00Z", "discountPercentage": 78, "discountPurchaseAt": "1990-05-12T00:00:00Z", "expireAt": "1972-03-11T00:00:00Z", "price": 12, "purchaseAt": "1981-02-11T00:00:00Z", "trialPrice": 47}], "WxGQBEsW": [{"currencyCode": "x1AafEYq", "currencyNamespace": "cZvrqxYl", "currencyType": "VIRTUAL", "discountAmount": 92, "discountExpireAt": "1983-10-13T00:00:00Z", "discountPercentage": 89, "discountPurchaseAt": "1979-12-12T00:00:00Z", "expireAt": "1983-08-24T00:00:00Z", "price": 73, "purchaseAt": "1993-07-18T00:00:00Z", "trialPrice": 27}, {"currencyCode": "4TFzj2QS", "currencyNamespace": "o1xBY1Kf", "currencyType": "VIRTUAL", "discountAmount": 30, "discountExpireAt": "1975-07-28T00:00:00Z", "discountPercentage": 21, "discountPurchaseAt": "1982-06-21T00:00:00Z", "expireAt": "1989-03-10T00:00:00Z", "price": 37, "purchaseAt": "1994-09-06T00:00:00Z", "trialPrice": 78}, {"currencyCode": "OLTKJ70H", "currencyNamespace": "bNHpVg3r", "currencyType": "VIRTUAL", "discountAmount": 49, "discountExpireAt": "1981-10-30T00:00:00Z", "discountPercentage": 45, "discountPurchaseAt": "1982-10-30T00:00:00Z", "expireAt": "1988-02-09T00:00:00Z", "price": 83, "purchaseAt": "1988-04-01T00:00:00Z", "trialPrice": 6}]}, "saleConfig": {"currencyCode": "cjtTj2XO", "price": 12}, "seasonType": "PASS", "sectionExclusive": true, "sellable": true, "sku": "aIzL7o3A", "stackable": false, "status": "INACTIVE", "tags": ["OdRFr0O3", "0CtsTKYv", "fJF2oByG"], "targetCurrencyCode": "ZR2QsMUG", "targetNamespace": "HcvahzGS", "thumbnailUrl": "Bb2eSifc", "useCount": 50}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateItem \
    --itemId 'myttLLwr' \
    --namespace $AB_NAMESPACE \
    --storeId 'YwBFrVGB' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 120 'UpdateItem' test.out

#- 121 DeleteItem
$CLI_EXE \
    --sn platform \
    --op DeleteItem \
    --itemId 'VWmDtXxZ' \
    --namespace $AB_NAMESPACE \
    --force 'true' \
    --storeId 'UJa6EL9G' \
    > test.out 2>&1
eval_tap $? 121 'DeleteItem' test.out

#- 122 AcquireItem
# body param: body
echo '{"count": 33, "orderNo": "PQh7zwBT"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op AcquireItem \
    --itemId 'FPdyvlV6' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 122 'AcquireItem' test.out

#- 123 GetApp
$CLI_EXE \
    --sn platform \
    --op GetApp \
    --itemId 'l7TSZka8' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --storeId 'RQfvA1QZ' \
    > test.out 2>&1
eval_tap $? 123 'GetApp' test.out

#- 124 UpdateApp
# body param: body
echo '{"carousel": [{"alt": "OvINHByB", "previewUrl": "cyPZciOp", "thumbnailUrl": "D69DycbM", "type": "image", "url": "A3vCqWN5", "videoSource": "youtube"}, {"alt": "hqArMXIP", "previewUrl": "HO3Y8C1b", "thumbnailUrl": "fNdtDZ5o", "type": "video", "url": "HR6bNW9u", "videoSource": "generic"}, {"alt": "xAkEUnis", "previewUrl": "vIACycST", "thumbnailUrl": "kyvSHhsE", "type": "video", "url": "61XDlnIP", "videoSource": "vimeo"}], "developer": "GLjPq3hH", "forumUrl": "tyB4RdJH", "genres": ["Adventure", "FreeToPlay", "Strategy"], "localizations": {"xTbnqQM1": {"announcement": "qtBPaf7Y", "slogan": "RWPUUdGU"}, "iXznTquK": {"announcement": "ynEc7KkB", "slogan": "bk4l71C7"}, "ELs73UHT": {"announcement": "bXWWsmyl", "slogan": "VaOTODc8"}}, "platformRequirements": {"oBJO7Yd3": [{"additionals": "OwS4h0E1", "directXVersion": "IbDFK5tp", "diskSpace": "uAh1YlMg", "graphics": "K9pLtfqg", "label": "vznZH4JN", "osVersion": "enKPcSSV", "processor": "av2BBTbJ", "ram": "JGK1vXpS", "soundCard": "D9nrEjtF"}, {"additionals": "cDkIhskk", "directXVersion": "DZMyKcQJ", "diskSpace": "nGMdkIFt", "graphics": "HyvyraAe", "label": "byVNc9Wj", "osVersion": "FTNbdSXh", "processor": "kuMTYBng", "ram": "dMFvgTrf", "soundCard": "rVEHD2ae"}, {"additionals": "qRFR6Eot", "directXVersion": "Adz7CpR5", "diskSpace": "zxAfM3y8", "graphics": "IaPWwbtv", "label": "cFlKDEhJ", "osVersion": "Z1lWhYgu", "processor": "Svh8B4R8", "ram": "Pon8xvEd", "soundCard": "SRmfR45r"}], "T8YTfinS": [{"additionals": "1550oIRD", "directXVersion": "tMhCJKKB", "diskSpace": "KLxkfC6l", "graphics": "8DIckKdl", "label": "Yn5m8NyY", "osVersion": "MPh9xe5x", "processor": "rec7vrtz", "ram": "c3t36su7", "soundCard": "Tqj9YZd2"}, {"additionals": "HUgqOpfj", "directXVersion": "k5sTWTgU", "diskSpace": "lUd5EzWC", "graphics": "D9r2cBnk", "label": "WjeQH6Nz", "osVersion": "ct5uR4aG", "processor": "PeUHIWfz", "ram": "mi5ZrZR7", "soundCard": "AYhHJNWt"}, {"additionals": "8TZXd0DB", "directXVersion": "dhvBaJNP", "diskSpace": "GEN1O3nw", "graphics": "eDllBgPx", "label": "q9DVlMhh", "osVersion": "L6lUtMvs", "processor": "Ym27MIal", "ram": "f3gTaqds", "soundCard": "p9Bnvri8"}], "YC4xhikw": [{"additionals": "vuJmhYri", "directXVersion": "lL6npZYv", "diskSpace": "bqMa53r4", "graphics": "ndOC0Sw8", "label": "05lsjiXg", "osVersion": "f4WWnffa", "processor": "rAB5L3SI", "ram": "qYG0gesI", "soundCard": "qCsqRHDf"}, {"additionals": "mcNKRVNl", "directXVersion": "hNvwLs5o", "diskSpace": "tPo8KFE7", "graphics": "9mLuhvag", "label": "sw0Y4KkF", "osVersion": "oL6yC3li", "processor": "r5fsjCZQ", "ram": "OJ5POG4V", "soundCard": "zRHGRd2x"}, {"additionals": "jM3PjodD", "directXVersion": "Biuwpptu", "diskSpace": "tng0ojqB", "graphics": "oXqp0gOP", "label": "BImmC87n", "osVersion": "0ufhMDnj", "processor": "YlGGhQO9", "ram": "A5YrElZw", "soundCard": "7mQccxpc"}]}, "platforms": ["Linux", "MacOS", "MacOS"], "players": ["MMO", "MMO", "Single"], "primaryGenre": "Racing", "publisher": "n3L6AhMZ", "releaseDate": "1985-04-19T00:00:00Z", "websiteUrl": "UMLv5PFX"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateApp \
    --itemId 'wI1VMzUq' \
    --namespace $AB_NAMESPACE \
    --storeId 'H4zsc3nO' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 124 'UpdateApp' test.out

#- 125 DisableItem
$CLI_EXE \
    --sn platform \
    --op DisableItem \
    --itemId 'jiSFHfFY' \
    --namespace $AB_NAMESPACE \
    --storeId 'bQ4gRIhc' \
    > test.out 2>&1
eval_tap $? 125 'DisableItem' test.out

#- 126 GetItemDynamicData
$CLI_EXE \
    --sn platform \
    --op GetItemDynamicData \
    --itemId 'CmGBffrf' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 126 'GetItemDynamicData' test.out

#- 127 EnableItem
$CLI_EXE \
    --sn platform \
    --op EnableItem \
    --itemId 'YNQ4lh8B' \
    --namespace $AB_NAMESPACE \
    --storeId 'edkgrJuR' \
    > test.out 2>&1
eval_tap $? 127 'EnableItem' test.out

#- 128 FeatureItem
$CLI_EXE \
    --sn platform \
    --op FeatureItem \
    --feature '3dWiGsWA' \
    --itemId '5YOKMWLD' \
    --namespace $AB_NAMESPACE \
    --storeId 'FPdD8X0a' \
    > test.out 2>&1
eval_tap $? 128 'FeatureItem' test.out

#- 129 DefeatureItem
$CLI_EXE \
    --sn platform \
    --op DefeatureItem \
    --feature 'pzmVw8WL' \
    --itemId 'E9whvkPz' \
    --namespace $AB_NAMESPACE \
    --storeId '5CX62HpI' \
    > test.out 2>&1
eval_tap $? 129 'DefeatureItem' test.out

#- 130 GetLocaleItem
$CLI_EXE \
    --sn platform \
    --op GetLocaleItem \
    --itemId 'RK1b0pGV' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --language 'tb8cruVO' \
    --populateBundle 'false' \
    --region 'vdnkstge' \
    --storeId 'MgSlZBRI' \
    > test.out 2>&1
eval_tap $? 130 'GetLocaleItem' test.out

#- 131 UpdateItemPurchaseCondition
# body param: body
echo '{"purchaseCondition": {"conditionGroups": [{"operator": "or", "predicates": [{"anyOf": 41, "comparison": "isGreaterThan", "name": "5AbwZ914", "predicateType": "SeasonPassPredicate", "value": "IBF5y3jp", "values": ["Mlz2ZVcM", "OqlVdwgW", "heJnvst4"]}, {"anyOf": 86, "comparison": "includes", "name": "UGHk4HKA", "predicateType": "EntitlementPredicate", "value": "l8qcWDmC", "values": ["3ODLBLU7", "xIB7uUNs", "uKIFXe8M"]}, {"anyOf": 87, "comparison": "isLessThan", "name": "KtnU6mu3", "predicateType": "EntitlementPredicate", "value": "j3qVmeLF", "values": ["12Ou0B9O", "IpJxc1g3", "GvIMueZP"]}]}, {"operator": "and", "predicates": [{"anyOf": 31, "comparison": "isLessThanOrEqual", "name": "4lKuyFUc", "predicateType": "SeasonPassPredicate", "value": "q9pN5H4h", "values": ["TH19AnzZ", "iQxOHQI5", "OQrn5dFf"]}, {"anyOf": 66, "comparison": "isLessThanOrEqual", "name": "GxD01ZhO", "predicateType": "EntitlementPredicate", "value": "b6SUt4Eq", "values": ["ys8XatxW", "NnSrXAAJ", "Spt9XOfP"]}, {"anyOf": 64, "comparison": "excludes", "name": "mE5lqGLc", "predicateType": "SeasonPassPredicate", "value": "UrCyGal5", "values": ["jdkjGcr8", "HffNk788", "iWf5idT4"]}]}, {"operator": "or", "predicates": [{"anyOf": 62, "comparison": "isGreaterThan", "name": "8WleKjSy", "predicateType": "EntitlementPredicate", "value": "5q6sY2KZ", "values": ["UqWeuXI7", "o2726Fad", "Fj5eVM99"]}, {"anyOf": 93, "comparison": "is", "name": "EBQVVKB3", "predicateType": "SeasonTierPredicate", "value": "i5eolh4u", "values": ["w8eNzWhN", "gUX05WS7", "eQ74sSBb"]}, {"anyOf": 12, "comparison": "is", "name": "asfdfNEz", "predicateType": "EntitlementPredicate", "value": "JvTZvjHT", "values": ["ZsCqtrtj", "H8qrgwua", "k8VwvbUl"]}]}]}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateItemPurchaseCondition \
    --itemId 'lglXl21D' \
    --namespace $AB_NAMESPACE \
    --storeId 'ARhsRcnj' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 131 'UpdateItemPurchaseCondition' test.out

#- 132 ReturnItem
# body param: body
echo '{"orderNo": "pGyQQEEh"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ReturnItem \
    --itemId 'tZZT9Z1u' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 132 'ReturnItem' test.out

#- 133 QueryKeyGroups
$CLI_EXE \
    --sn platform \
    --op QueryKeyGroups \
    --namespace $AB_NAMESPACE \
    --limit '37' \
    --name 'swYVTiJ1' \
    --offset '60' \
    --tag 'kMrJ7Jik' \
    > test.out 2>&1
eval_tap $? 133 'QueryKeyGroups' test.out

#- 134 CreateKeyGroup
# body param: body
echo '{"description": "TzX2Hpaz", "name": "vMzZgAQi", "status": "ACTIVE", "tags": ["jQuY5U7t", "SBuUO0fl", "YkeA5P3e"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateKeyGroup \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 134 'CreateKeyGroup' test.out

#- 135 GetKeyGroupByBoothName
eval_tap 0 135 'GetKeyGroupByBoothName # SKIP deprecated' test.out

#- 136 GetKeyGroup
$CLI_EXE \
    --sn platform \
    --op GetKeyGroup \
    --keyGroupId 'vMaNYvzz' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 136 'GetKeyGroup' test.out

#- 137 UpdateKeyGroup
# body param: body
echo '{"description": "bpjlAmWJ", "name": "llGLGfg9", "status": "INACTIVE", "tags": ["ZPBv4Pf7", "OaG8aT4A", "sNlNzMMU"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateKeyGroup \
    --keyGroupId 'aM23MPAO' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 137 'UpdateKeyGroup' test.out

#- 138 GetKeyGroupDynamic
$CLI_EXE \
    --sn platform \
    --op GetKeyGroupDynamic \
    --keyGroupId 'ZxjceP1W' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 138 'GetKeyGroupDynamic' test.out

#- 139 ListKeys
$CLI_EXE \
    --sn platform \
    --op ListKeys \
    --keyGroupId 'ogw2xecD' \
    --namespace $AB_NAMESPACE \
    --limit '88' \
    --offset '84' \
    --status 'ACTIVE' \
    > test.out 2>&1
eval_tap $? 139 'ListKeys' test.out

#- 140 UploadKeys
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UploadKeys \
    --keyGroupId 'NbiRRkYl' \
    --namespace $AB_NAMESPACE \
    --upload $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 140 'UploadKeys' test.out

#- 141 QueryOrders
$CLI_EXE \
    --sn platform \
    --op QueryOrders \
    --namespace $AB_NAMESPACE \
    --endTime 'CH9jVAnq' \
    --limit '44' \
    --offset '44' \
    --orderNos '["gYToQuFY", "ZtCI1Q5p", "rcOLISj9"]' \
    --sortBy '4JuljijE' \
    --startTime 'NsvLL6fW' \
    --status 'CHARGED' \
    --withTotal 'false' \
    > test.out 2>&1
eval_tap $? 141 'QueryOrders' test.out

#- 142 GetOrderStatistics
$CLI_EXE \
    --sn platform \
    --op GetOrderStatistics \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 142 'GetOrderStatistics' test.out

#- 143 GetOrder
$CLI_EXE \
    --sn platform \
    --op GetOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'fVBCoLVX' \
    > test.out 2>&1
eval_tap $? 143 'GetOrder' test.out

#- 144 RefundOrder
# body param: body
echo '{"description": "SqFEiE3Y"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RefundOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'GiXAekiX' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 144 'RefundOrder' test.out

#- 145 GetPaymentCallbackConfig
$CLI_EXE \
    --sn platform \
    --op GetPaymentCallbackConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 145 'GetPaymentCallbackConfig' test.out

#- 146 UpdatePaymentCallbackConfig
# body param: body
echo '{"dryRun": false, "notifyUrl": "vuTA0SlB", "privateKey": "gQGw1tFw"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePaymentCallbackConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 146 'UpdatePaymentCallbackConfig' test.out

#- 147 QueryPaymentNotifications
$CLI_EXE \
    --sn platform \
    --op QueryPaymentNotifications \
    --namespace $AB_NAMESPACE \
    --endDate 'BIcmagiR' \
    --externalId 'LpoLDB6E' \
    --limit '40' \
    --notificationSource 'WALLET' \
    --notificationType 'c03jcHY5' \
    --offset '97' \
    --paymentOrderNo 'D3LhIkGO' \
    --startDate 'mij6MXu8' \
    --status 'IGNORED' \
    > test.out 2>&1
eval_tap $? 147 'QueryPaymentNotifications' test.out

#- 148 QueryPaymentOrders
$CLI_EXE \
    --sn platform \
    --op QueryPaymentOrders \
    --namespace $AB_NAMESPACE \
    --channel 'EXTERNAL' \
    --extTxId 'Yg3fDCw4' \
    --limit '73' \
    --offset '13' \
    --status 'AUTHORISED' \
    > test.out 2>&1
eval_tap $? 148 'QueryPaymentOrders' test.out

#- 149 CreatePaymentOrderByDedicated
# body param: body
echo '{"currencyCode": "IpCwsIAc", "currencyNamespace": "qPQZZh5u", "customParameters": {"G9pTOnq9": {}, "KOQrMH6z": {}, "CBIBRkdN": {}}, "description": "AUBNZbuJ", "extOrderNo": "UtrewWj3", "extUserId": "rhw0By88", "itemType": "OPTIONBOX", "language": "xwCq-CEMx-Iv", "metadata": {"DfvAhLkc": "e0YJloBo", "kXw5o8qS": "IDn2ROVy", "OGOChxWN": "cWCs8PBC"}, "notifyUrl": "cxYhXXRJ", "omitNotification": false, "platform": "HDzU1ywO", "price": 74, "recurringPaymentOrderNo": "0ShyPgfK", "region": "57HcevFF", "returnUrl": "NxYf1Sx8", "sandbox": false, "sku": "Io0JXdbO", "subscriptionId": "cWiTDZPn", "targetNamespace": "4SelhkKo", "targetUserId": "DckzeLVO", "title": "qwl8LY7B"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreatePaymentOrderByDedicated \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 149 'CreatePaymentOrderByDedicated' test.out

#- 150 ListExtOrderNoByExtTxId
$CLI_EXE \
    --sn platform \
    --op ListExtOrderNoByExtTxId \
    --namespace $AB_NAMESPACE \
    --extTxId 'favBBo64' \
    > test.out 2>&1
eval_tap $? 150 'ListExtOrderNoByExtTxId' test.out

#- 151 GetPaymentOrder
$CLI_EXE \
    --sn platform \
    --op GetPaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'JnPF7Usk' \
    > test.out 2>&1
eval_tap $? 151 'GetPaymentOrder' test.out

#- 152 ChargePaymentOrder
# body param: body
echo '{"extTxId": "aGLc00wX", "paymentMethod": "F4YqICxg", "paymentProvider": "WALLET"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ChargePaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'nssBeuHN' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 152 'ChargePaymentOrder' test.out

#- 153 RefundPaymentOrderByDedicated
# body param: body
echo '{"description": "OWatpQR3"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RefundPaymentOrderByDedicated \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'fhhzScTb' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 153 'RefundPaymentOrderByDedicated' test.out

#- 154 SimulatePaymentOrderNotification
# body param: body
echo '{"amount": 57, "currencyCode": "YmZMT8FW", "notifyType": "CHARGE", "paymentProvider": "STRIPE", "salesTax": 40, "vat": 85}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SimulatePaymentOrderNotification \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'ZEoXaqu7' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 154 'SimulatePaymentOrderNotification' test.out

#- 155 GetPaymentOrderChargeStatus
$CLI_EXE \
    --sn platform \
    --op GetPaymentOrderChargeStatus \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'Ki3ItRbm' \
    > test.out 2>&1
eval_tap $? 155 'GetPaymentOrderChargeStatus' test.out

#- 156 GetPlatformEntitlementConfig
$CLI_EXE \
    --sn platform \
    --op GetPlatformEntitlementConfig \
    --namespace $AB_NAMESPACE \
    --platform 'Playstation' \
    > test.out 2>&1
eval_tap $? 156 'GetPlatformEntitlementConfig' test.out

#- 157 UpdatePlatformEntitlementConfig
# body param: body
echo '{"allowedPlatformOrigins": ["Oculus", "Nintendo", "Xbox"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePlatformEntitlementConfig \
    --namespace $AB_NAMESPACE \
    --platform 'Playstation' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 157 'UpdatePlatformEntitlementConfig' test.out

#- 158 GetPlatformWalletConfig
$CLI_EXE \
    --sn platform \
    --op GetPlatformWalletConfig \
    --namespace $AB_NAMESPACE \
    --platform 'GooglePlay' \
    > test.out 2>&1
eval_tap $? 158 'GetPlatformWalletConfig' test.out

#- 159 UpdatePlatformWalletConfig
# body param: body
echo '{"allowedBalanceOrigins": ["GooglePlay", "Xbox", "Playstation"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePlatformWalletConfig \
    --namespace $AB_NAMESPACE \
    --platform 'Other' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 159 'UpdatePlatformWalletConfig' test.out

#- 160 ResetPlatformWalletConfig
$CLI_EXE \
    --sn platform \
    --op ResetPlatformWalletConfig \
    --namespace $AB_NAMESPACE \
    --platform 'IOS' \
    > test.out 2>&1
eval_tap $? 160 'ResetPlatformWalletConfig' test.out

#- 161 GetRevocationConfig
$CLI_EXE \
    --sn platform \
    --op GetRevocationConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 161 'GetRevocationConfig' test.out

#- 162 UpdateRevocationConfig
# body param: body
echo '{"entitlement": {"consumable": {"enabled": false, "strategy": "REVOKE_OR_REPORT"}, "durable": {"enabled": true, "strategy": "REVOKE_OR_REPORT"}}, "wallet": {"enabled": true, "strategy": "REVOKE_OR_REPORT"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateRevocationConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 162 'UpdateRevocationConfig' test.out

#- 163 DeleteRevocationConfig
$CLI_EXE \
    --sn platform \
    --op DeleteRevocationConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 163 'DeleteRevocationConfig' test.out

#- 164 QueryRevocationHistories
$CLI_EXE \
    --sn platform \
    --op QueryRevocationHistories \
    --namespace $AB_NAMESPACE \
    --endTime '6ET6eByj' \
    --limit '80' \
    --offset '48' \
    --source 'IAP' \
    --startTime 'hpKMHsyi' \
    --status 'SUCCESS' \
    --transactionId '1ZI72qyb' \
    --userId 'R1TFbM2W' \
    > test.out 2>&1
eval_tap $? 164 'QueryRevocationHistories' test.out

#- 165 GetRevocationPluginConfig
$CLI_EXE \
    --sn platform \
    --op GetRevocationPluginConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 165 'GetRevocationPluginConfig' test.out

#- 166 UpdateRevocationPluginConfig
# body param: body
echo '{"appConfig": {"appName": "b0X5Hfcl"}, "customConfig": {"connectionType": "TLS", "grpcServerAddress": "Phjmt8O5"}, "extendType": "CUSTOM"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateRevocationPluginConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 166 'UpdateRevocationPluginConfig' test.out

#- 167 DeleteRevocationPluginConfig
$CLI_EXE \
    --sn platform \
    --op DeleteRevocationPluginConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 167 'DeleteRevocationPluginConfig' test.out

#- 168 UploadRevocationPluginConfigCert
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UploadRevocationPluginConfigCert \
    --namespace $AB_NAMESPACE \
    --upload $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 168 'UploadRevocationPluginConfigCert' test.out

#- 169 CreateReward
# body param: body
echo '{"description": "MCzViP5H", "eventTopic": "sdblVtbs", "maxAwarded": 2, "maxAwardedPerUser": 16, "namespaceExpression": "hiaDXJr1", "rewardCode": "jr9KJbbX", "rewardConditions": [{"condition": "DC6W5w4O", "conditionName": "x7tNJSxL", "eventName": "caLhKu1j", "rewardItems": [{"duration": 61, "endDate": "1980-03-13T00:00:00Z", "itemId": "xWXxjJ5d", "quantity": 48}, {"duration": 98, "endDate": "1975-10-23T00:00:00Z", "itemId": "WDX2JIer", "quantity": 27}, {"duration": 93, "endDate": "1982-07-20T00:00:00Z", "itemId": "5FQOy2W9", "quantity": 21}]}, {"condition": "Weq8Yd2v", "conditionName": "pUCcgYSG", "eventName": "7Wtx77zg", "rewardItems": [{"duration": 92, "endDate": "1988-10-28T00:00:00Z", "itemId": "mUDa3fB5", "quantity": 37}, {"duration": 51, "endDate": "1989-08-09T00:00:00Z", "itemId": "GVksVcc5", "quantity": 67}, {"duration": 51, "endDate": "1989-01-28T00:00:00Z", "itemId": "MQaVHkDL", "quantity": 2}]}, {"condition": "b1r1g9tn", "conditionName": "alRIisIx", "eventName": "XH0MO2ad", "rewardItems": [{"duration": 39, "endDate": "1972-09-25T00:00:00Z", "itemId": "MpopZH5Z", "quantity": 0}, {"duration": 18, "endDate": "1998-12-17T00:00:00Z", "itemId": "aKZR8hKH", "quantity": 16}, {"duration": 24, "endDate": "1982-01-02T00:00:00Z", "itemId": "f1SAXqSr", "quantity": 64}]}], "userIdExpression": "36l8fJnh"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateReward \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 169 'CreateReward' test.out

#- 170 QueryRewards
$CLI_EXE \
    --sn platform \
    --op QueryRewards \
    --namespace $AB_NAMESPACE \
    --eventTopic 'hafyIC8g' \
    --limit '7' \
    --offset '88' \
    --sortBy '["rewardCode:asc", "namespace:desc"]' \
    > test.out 2>&1
eval_tap $? 170 'QueryRewards' test.out

#- 171 ExportRewards
$CLI_EXE \
    --sn platform \
    --op ExportRewards \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 171 'ExportRewards' test.out

#- 172 ImportRewards
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op ImportRewards \
    --namespace $AB_NAMESPACE \
    --replaceExisting 'false' \
    --upload $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 172 'ImportRewards' test.out

#- 173 GetReward
$CLI_EXE \
    --sn platform \
    --op GetReward \
    --namespace $AB_NAMESPACE \
    --rewardId 'XeNvNZWQ' \
    > test.out 2>&1
eval_tap $? 173 'GetReward' test.out

#- 174 UpdateReward
# body param: body
echo '{"description": "tZKxRAMN", "eventTopic": "2Qal2lLW", "maxAwarded": 23, "maxAwardedPerUser": 99, "namespaceExpression": "I5uqTT12", "rewardCode": "he2bv8el", "rewardConditions": [{"condition": "FXwUkE30", "conditionName": "6DHacK5n", "eventName": "TT2Woc1h", "rewardItems": [{"duration": 62, "endDate": "1971-02-25T00:00:00Z", "itemId": "Zymdmmj0", "quantity": 46}, {"duration": 29, "endDate": "1976-08-01T00:00:00Z", "itemId": "K2CU0Ue6", "quantity": 68}, {"duration": 19, "endDate": "1971-04-19T00:00:00Z", "itemId": "eUkzxBnJ", "quantity": 99}]}, {"condition": "X6B8iL9J", "conditionName": "xxcT7mw1", "eventName": "lZGdmGKP", "rewardItems": [{"duration": 61, "endDate": "1995-09-04T00:00:00Z", "itemId": "KZqZmf6Q", "quantity": 16}, {"duration": 43, "endDate": "1997-02-28T00:00:00Z", "itemId": "Py7XwijT", "quantity": 10}, {"duration": 99, "endDate": "1999-07-13T00:00:00Z", "itemId": "68nRHYDM", "quantity": 36}]}, {"condition": "n29JABWQ", "conditionName": "FxSYOqfT", "eventName": "0ROqBeCc", "rewardItems": [{"duration": 17, "endDate": "1989-02-13T00:00:00Z", "itemId": "jYP5v2BV", "quantity": 74}, {"duration": 7, "endDate": "1973-03-27T00:00:00Z", "itemId": "ULtMg55T", "quantity": 93}, {"duration": 61, "endDate": "1996-07-22T00:00:00Z", "itemId": "3ddVM49n", "quantity": 29}]}], "userIdExpression": "8j9Xikjy"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateReward \
    --namespace $AB_NAMESPACE \
    --rewardId 'NcvCXymG' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 174 'UpdateReward' test.out

#- 175 DeleteReward
$CLI_EXE \
    --sn platform \
    --op DeleteReward \
    --namespace $AB_NAMESPACE \
    --rewardId '1EiZfX4q' \
    > test.out 2>&1
eval_tap $? 175 'DeleteReward' test.out

#- 176 CheckEventCondition
# body param: body
echo '{"payload": {"WxjHzPbm": {}, "bxGXsdtF": {}, "Rm85aBJc": {}}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CheckEventCondition \
    --namespace $AB_NAMESPACE \
    --rewardId '2BY6VdpH' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 176 'CheckEventCondition' test.out

#- 177 DeleteRewardConditionRecord
# body param: body
echo '{"conditionName": "bLtgKhD9", "userId": "Xz3T8bal"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op DeleteRewardConditionRecord \
    --namespace $AB_NAMESPACE \
    --rewardId 'ThrTVQu1' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 177 'DeleteRewardConditionRecord' test.out

#- 178 QuerySections
$CLI_EXE \
    --sn platform \
    --op QuerySections \
    --namespace $AB_NAMESPACE \
    --end 'JuG6GCHu' \
    --limit '53' \
    --offset '62' \
    --start 'BXGn3Emd' \
    --storeId 'asI9DNIq' \
    --viewId 'vKVDozlI' \
    > test.out 2>&1
eval_tap $? 178 'QuerySections' test.out

#- 179 CreateSection
# body param: body
echo '{"active": false, "displayOrder": 95, "endDate": "1979-02-15T00:00:00Z", "ext": {"0W0ORysV": {}, "u0B2uMps": {}, "7Jk9JRbh": {}}, "fixedPeriodRotationConfig": {"backfillType": "NONE", "duration": 8, "itemCount": 36, "rule": "SEQUENCE"}, "items": [{"id": "6kR4ZQO7", "sku": "xoezrFWb"}, {"id": "Yw0mGHoi", "sku": "iJBrdel7"}, {"id": "cxD61e6P", "sku": "xftmeUA3"}], "localizations": {"lkVMUhbH": {"description": "C3u1eC53", "localExt": {"KFIIsqHS": {}, "gDdICXLa": {}, "SY4jkQQH": {}}, "longDescription": "jvJavXiG", "title": "wpelEag0"}, "unUSbizb": {"description": "F6yrR2ck", "localExt": {"iTVyCzrz": {}, "FkhwdYaI": {}, "tKoJhjka": {}}, "longDescription": "pnhTBehH", "title": "gAmSWyQq"}, "xrv8WQpP": {"description": "e1QXSJZW", "localExt": {"mNx0CGPv": {}, "7QlyxJeg": {}, "N5V9fbQH": {}}, "longDescription": "mlo0IfaU", "title": "XlZFacPh"}}, "name": "flZI2ZOa", "rotationType": "NONE", "startDate": "1986-02-23T00:00:00Z", "viewId": "AX4CMtlD"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateSection \
    --namespace $AB_NAMESPACE \
    --storeId 'r8gS6avr' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 179 'CreateSection' test.out

#- 180 PurgeExpiredSection
$CLI_EXE \
    --sn platform \
    --op PurgeExpiredSection \
    --namespace $AB_NAMESPACE \
    --storeId 'jdnfpO3d' \
    > test.out 2>&1
eval_tap $? 180 'PurgeExpiredSection' test.out

#- 181 GetSection
$CLI_EXE \
    --sn platform \
    --op GetSection \
    --namespace $AB_NAMESPACE \
    --sectionId 'ZiU7X7h4' \
    --storeId '3S09Dgj4' \
    > test.out 2>&1
eval_tap $? 181 'GetSection' test.out

#- 182 UpdateSection
# body param: body
echo '{"active": true, "displayOrder": 45, "endDate": "1972-08-20T00:00:00Z", "ext": {"HbRgyzCN": {}, "mLYFeZ4p": {}, "uidgl0xb": {}}, "fixedPeriodRotationConfig": {"backfillType": "NONE", "duration": 32, "itemCount": 30, "rule": "SEQUENCE"}, "items": [{"id": "rKTfFhCM", "sku": "2EIkqexf"}, {"id": "shAPEK6n", "sku": "x301Grdj"}, {"id": "0KlnTKvR", "sku": "N9zIdOpb"}], "localizations": {"hYWllRzo": {"description": "0ip1Stqd", "localExt": {"YpiFllCM": {}, "sfonJUYg": {}, "9vhIiQCV": {}}, "longDescription": "nXPTSGgv", "title": "TmGzYoQx"}, "AwmmoNfk": {"description": "tZTgpw3u", "localExt": {"goXusZBq": {}, "iHmvLNLx": {}, "cjneGPl2": {}}, "longDescription": "GbD5tXYd", "title": "yv8Awg6L"}, "09PgMvYN": {"description": "IIrLUh46", "localExt": {"LffapYWQ": {}, "7kdOnHBX": {}, "zT8Iqn3X": {}}, "longDescription": "wJJv6E3E", "title": "rUnuBMsb"}}, "name": "5H6rD9oR", "rotationType": "CUSTOM", "startDate": "1979-05-26T00:00:00Z", "viewId": "pSpUVlXT"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateSection \
    --namespace $AB_NAMESPACE \
    --sectionId 'Yw46OcH2' \
    --storeId 'ZPPCOPsR' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 182 'UpdateSection' test.out

#- 183 DeleteSection
$CLI_EXE \
    --sn platform \
    --op DeleteSection \
    --namespace $AB_NAMESPACE \
    --sectionId 'HAvwMuAt' \
    --storeId 'Kf7qkPhf' \
    > test.out 2>&1
eval_tap $? 183 'DeleteSection' test.out

#- 184 ListStores
$CLI_EXE \
    --sn platform \
    --op ListStores \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 184 'ListStores' test.out

#- 185 CreateStore
# body param: body
echo '{"defaultLanguage": "6Lm2MsTz", "defaultRegion": "IGJt1hqj", "description": "M9vAIk5X", "supportedLanguages": ["CN4zlovk", "tcSWJ5MG", "deAzopQl"], "supportedRegions": ["rpJdZ8oe", "oQvgJh1j", "ZkvNBMYB"], "title": "ahlrp3KT"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateStore \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 185 'CreateStore' test.out

#- 186 ImportStore
eval_tap 0 186 'ImportStore # SKIP deprecated' test.out

#- 187 GetPublishedStore
$CLI_EXE \
    --sn platform \
    --op GetPublishedStore \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 187 'GetPublishedStore' test.out

#- 188 DeletePublishedStore
$CLI_EXE \
    --sn platform \
    --op DeletePublishedStore \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 188 'DeletePublishedStore' test.out

#- 189 GetPublishedStoreBackup
$CLI_EXE \
    --sn platform \
    --op GetPublishedStoreBackup \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 189 'GetPublishedStoreBackup' test.out

#- 190 RollbackPublishedStore
$CLI_EXE \
    --sn platform \
    --op RollbackPublishedStore \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 190 'RollbackPublishedStore' test.out

#- 191 GetStore
$CLI_EXE \
    --sn platform \
    --op GetStore \
    --namespace $AB_NAMESPACE \
    --storeId 'WBTrAuoA' \
    > test.out 2>&1
eval_tap $? 191 'GetStore' test.out

#- 192 UpdateStore
# body param: body
echo '{"defaultLanguage": "ufSEwiem", "defaultRegion": "sokKgLRx", "description": "YgaH1Q9E", "supportedLanguages": ["iv1I7TO8", "dcOhmi9f", "fXKwFgkt"], "supportedRegions": ["rCtqYbtd", "3w8rdcbq", "7rWkXwaf"], "title": "u2zVbEUw"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateStore \
    --namespace $AB_NAMESPACE \
    --storeId 'tL92gBFC' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 192 'UpdateStore' test.out

#- 193 DeleteStore
$CLI_EXE \
    --sn platform \
    --op DeleteStore \
    --namespace $AB_NAMESPACE \
    --storeId 'WjchJcgK' \
    > test.out 2>&1
eval_tap $? 193 'DeleteStore' test.out

#- 194 QueryChanges
$CLI_EXE \
    --sn platform \
    --op QueryChanges \
    --namespace $AB_NAMESPACE \
    --storeId 'iszFdXtS' \
    --action 'DELETE' \
    --itemSku 'PQW7VAUS' \
    --itemType 'LOOTBOX' \
    --limit '57' \
    --offset '81' \
    --selected 'true' \
    --sortBy '["updatedAt:asc", "createdAt:asc", "createdAt:desc"]' \
    --status 'PUBLISHED' \
    --type 'CATEGORY' \
    --updatedAtEnd 'kDdxu2i5' \
    --updatedAtStart 'VqK6xrek' \
    --withTotal 'false' \
    > test.out 2>&1
eval_tap $? 194 'QueryChanges' test.out

#- 195 PublishAll
$CLI_EXE \
    --sn platform \
    --op PublishAll \
    --namespace $AB_NAMESPACE \
    --storeId 'JqLNisT8' \
    > test.out 2>&1
eval_tap $? 195 'PublishAll' test.out

#- 196 PublishSelected
$CLI_EXE \
    --sn platform \
    --op PublishSelected \
    --namespace $AB_NAMESPACE \
    --storeId 'uEYUAOW4' \
    > test.out 2>&1
eval_tap $? 196 'PublishSelected' test.out

#- 197 SelectAllRecords
$CLI_EXE \
    --sn platform \
    --op SelectAllRecords \
    --namespace $AB_NAMESPACE \
    --storeId 'Bh9T6FJ0' \
    > test.out 2>&1
eval_tap $? 197 'SelectAllRecords' test.out

#- 198 SelectAllRecordsByCriteria
$CLI_EXE \
    --sn platform \
    --op SelectAllRecordsByCriteria \
    --namespace $AB_NAMESPACE \
    --storeId 'gt8ijH1B' \
    --action 'CREATE' \
    --itemSku 'lRZh5HLm' \
    --itemType 'SUBSCRIPTION' \
    --selected 'false' \
    --type 'STORE' \
    --updatedAtEnd 'DxBtSTNO' \
    --updatedAtStart 'lhH9Z24z' \
    > test.out 2>&1
eval_tap $? 198 'SelectAllRecordsByCriteria' test.out

#- 199 GetStatistic
$CLI_EXE \
    --sn platform \
    --op GetStatistic \
    --namespace $AB_NAMESPACE \
    --storeId '5uRilikb' \
    --action 'UPDATE' \
    --itemSku 'ZneQHZvF' \
    --itemType 'APP' \
    --type 'CATEGORY' \
    --updatedAtEnd 'k5OqiJWB' \
    --updatedAtStart 'SteM6kaZ' \
    > test.out 2>&1
eval_tap $? 199 'GetStatistic' test.out

#- 200 UnselectAllRecords
$CLI_EXE \
    --sn platform \
    --op UnselectAllRecords \
    --namespace $AB_NAMESPACE \
    --storeId 'XJIXqr9j' \
    > test.out 2>&1
eval_tap $? 200 'UnselectAllRecords' test.out

#- 201 SelectRecord
$CLI_EXE \
    --sn platform \
    --op SelectRecord \
    --changeId 'iExtCvrt' \
    --namespace $AB_NAMESPACE \
    --storeId 'zS6jyhpq' \
    > test.out 2>&1
eval_tap $? 201 'SelectRecord' test.out

#- 202 UnselectRecord
$CLI_EXE \
    --sn platform \
    --op UnselectRecord \
    --changeId 'i5io6NJN' \
    --namespace $AB_NAMESPACE \
    --storeId '2aSGNb0V' \
    > test.out 2>&1
eval_tap $? 202 'UnselectRecord' test.out

#- 203 CloneStore
$CLI_EXE \
    --sn platform \
    --op CloneStore \
    --namespace $AB_NAMESPACE \
    --storeId 'IvwZBuIb' \
    --targetStoreId 'LLCBHwRo' \
    > test.out 2>&1
eval_tap $? 203 'CloneStore' test.out

#- 204 ExportStore
eval_tap 0 204 'ExportStore # SKIP deprecated' test.out

#- 205 QuerySubscriptions
$CLI_EXE \
    --sn platform \
    --op QuerySubscriptions \
    --namespace $AB_NAMESPACE \
    --chargeStatus 'NEVER' \
    --itemId 'dwZEZkHF' \
    --limit '94' \
    --offset '26' \
    --sku '5AiRpn2w' \
    --status 'EXPIRED' \
    --subscribedBy 'PLATFORM' \
    --userId 'AGJh1uvS' \
    > test.out 2>&1
eval_tap $? 205 'QuerySubscriptions' test.out

#- 206 RecurringChargeSubscription
$CLI_EXE \
    --sn platform \
    --op RecurringChargeSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'dpzlt7VC' \
    > test.out 2>&1
eval_tap $? 206 'RecurringChargeSubscription' test.out

#- 207 GetTicketDynamic
$CLI_EXE \
    --sn platform \
    --op GetTicketDynamic \
    --boothName 'HpjxNWK2' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 207 'GetTicketDynamic' test.out

#- 208 DecreaseTicketSale
# body param: body
echo '{"orderNo": "7UAhWYS3"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op DecreaseTicketSale \
    --boothName 'aH9EBXme' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 208 'DecreaseTicketSale' test.out

#- 209 GetTicketBoothID
$CLI_EXE \
    --sn platform \
    --op GetTicketBoothID \
    --boothName 'Dq8Xoz8M' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 209 'GetTicketBoothID' test.out

#- 210 IncreaseTicketSale
# body param: body
echo '{"count": 93, "orderNo": "o6hNUIUM"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op IncreaseTicketSale \
    --boothName 'sde2dQ0M' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 210 'IncreaseTicketSale' test.out

#- 211 Commit
# body param: body
echo '{"actions": [{"operations": [{"creditPayload": {"balanceOrigin": "Playstation", "count": 80, "currencyCode": "eaOhi60z", "expireAt": "1972-09-14T00:00:00Z"}, "debitPayload": {"count": 3, "currencyCode": "LRM5WNCE", "walletPlatform": "Other"}, "fulFillItemPayload": {"count": 60, "entitlementOrigin": "Xbox", "itemIdentity": "QbvywAO3", "itemIdentityType": "ITEM_SKU"}, "revokeEntitlementPayload": {"count": 9, "entitlementId": "SG7hSVo2"}, "type": "REVOKE_ENTITLEMENT"}, {"creditPayload": {"balanceOrigin": "System", "count": 54, "currencyCode": "P6WPmML5", "expireAt": "1981-12-07T00:00:00Z"}, "debitPayload": {"count": 44, "currencyCode": "cIb90pmQ", "walletPlatform": "IOS"}, "fulFillItemPayload": {"count": 50, "entitlementOrigin": "Twitch", "itemIdentity": "CPCw7UGS", "itemIdentityType": "ITEM_SKU"}, "revokeEntitlementPayload": {"count": 22, "entitlementId": "WczhtrPk"}, "type": "REVOKE_ENTITLEMENT"}, {"creditPayload": {"balanceOrigin": "Playstation", "count": 7, "currencyCode": "l6CC6SUI", "expireAt": "1991-08-18T00:00:00Z"}, "debitPayload": {"count": 10, "currencyCode": "k6e5o7c7", "walletPlatform": "Xbox"}, "fulFillItemPayload": {"count": 94, "entitlementOrigin": "Steam", "itemIdentity": "94WbiuGn", "itemIdentityType": "ITEM_ID"}, "revokeEntitlementPayload": {"count": 27, "entitlementId": "f3ElGavs"}, "type": "CREDIT_WALLET"}], "userId": "jnAVJuCl"}, {"operations": [{"creditPayload": {"balanceOrigin": "Twitch", "count": 52, "currencyCode": "PkUJJOSR", "expireAt": "1982-09-23T00:00:00Z"}, "debitPayload": {"count": 48, "currencyCode": "onuJ8p3e", "walletPlatform": "Xbox"}, "fulFillItemPayload": {"count": 6, "entitlementOrigin": "Epic", "itemIdentity": "zgdiaorD", "itemIdentityType": "ITEM_ID"}, "revokeEntitlementPayload": {"count": 78, "entitlementId": "yD0YNXLX"}, "type": "CREDIT_WALLET"}, {"creditPayload": {"balanceOrigin": "Playstation", "count": 22, "currencyCode": "I9KNWdS9", "expireAt": "1992-09-09T00:00:00Z"}, "debitPayload": {"count": 18, "currencyCode": "W6XSAjsB", "walletPlatform": "IOS"}, "fulFillItemPayload": {"count": 96, "entitlementOrigin": "GooglePlay", "itemIdentity": "iNxeEauM", "itemIdentityType": "ITEM_SKU"}, "revokeEntitlementPayload": {"count": 73, "entitlementId": "atYNG9Q4"}, "type": "CREDIT_WALLET"}, {"creditPayload": {"balanceOrigin": "Other", "count": 6, "currencyCode": "rwyT1AMc", "expireAt": "1985-04-20T00:00:00Z"}, "debitPayload": {"count": 92, "currencyCode": "N80ZJY0G", "walletPlatform": "IOS"}, "fulFillItemPayload": {"count": 19, "entitlementOrigin": "GooglePlay", "itemIdentity": "ylceD3xW", "itemIdentityType": "ITEM_ID"}, "revokeEntitlementPayload": {"count": 34, "entitlementId": "tDtsF1hR"}, "type": "REVOKE_ENTITLEMENT"}], "userId": "dpUkk4iJ"}, {"operations": [{"creditPayload": {"balanceOrigin": "Steam", "count": 71, "currencyCode": "7e0ouUbM", "expireAt": "1986-02-04T00:00:00Z"}, "debitPayload": {"count": 57, "currencyCode": "FDxi8KR1", "walletPlatform": "Playstation"}, "fulFillItemPayload": {"count": 100, "entitlementOrigin": "Xbox", "itemIdentity": "M6MdEVna", "itemIdentityType": "ITEM_SKU"}, "revokeEntitlementPayload": {"count": 63, "entitlementId": "QZJpJ9Bc"}, "type": "FULFILL_ITEM"}, {"creditPayload": {"balanceOrigin": "System", "count": 35, "currencyCode": "9CVXsq4L", "expireAt": "1977-09-06T00:00:00Z"}, "debitPayload": {"count": 12, "currencyCode": "PpOEM7md", "walletPlatform": "Nintendo"}, "fulFillItemPayload": {"count": 48, "entitlementOrigin": "IOS", "itemIdentity": "v1CtLgQ3", "itemIdentityType": "ITEM_ID"}, "revokeEntitlementPayload": {"count": 0, "entitlementId": "eVScU0Od"}, "type": "CREDIT_WALLET"}, {"creditPayload": {"balanceOrigin": "Twitch", "count": 9, "currencyCode": "6vCFExXE", "expireAt": "1978-05-11T00:00:00Z"}, "debitPayload": {"count": 10, "currencyCode": "8Tzy206v", "walletPlatform": "Steam"}, "fulFillItemPayload": {"count": 12, "entitlementOrigin": "Oculus", "itemIdentity": "AShICYlU", "itemIdentityType": "ITEM_ID"}, "revokeEntitlementPayload": {"count": 45, "entitlementId": "asVRlK9s"}, "type": "CREDIT_WALLET"}], "userId": "mOMoNsbM"}], "metadata": {"OQF0rSz1": {}, "pB34u6t0": {}, "iIPUwsvO": {}}, "needPreCheck": false, "transactionId": "NKNEYnub", "type": "tRK8lq3h"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op Commit \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 211 'Commit' test.out

#- 212 GetTradeHistoryByCriteria
$CLI_EXE \
    --sn platform \
    --op GetTradeHistoryByCriteria \
    --namespace $AB_NAMESPACE \
    --limit '71' \
    --offset '22' \
    --status 'INIT' \
    --type 'YcE3jGAS' \
    --userId 'hWRn1Le6' \
    > test.out 2>&1
eval_tap $? 212 'GetTradeHistoryByCriteria' test.out

#- 213 GetTradeHistoryByTransactionId
$CLI_EXE \
    --sn platform \
    --op GetTradeHistoryByTransactionId \
    --namespace $AB_NAMESPACE \
    --transactionId 'MXDFvTOD' \
    > test.out 2>&1
eval_tap $? 213 'GetTradeHistoryByTransactionId' test.out

#- 214 UnlockSteamUserAchievement
# body param: body
echo '{"achievements": [{"id": "iOEd6v1V", "value": 3}, {"id": "Rd91bEfC", "value": 1}, {"id": "q7SRbkDs", "value": 72}], "steamUserId": "NVfMxM68"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UnlockSteamUserAchievement \
    --namespace $AB_NAMESPACE \
    --userId 'kPSfMErN' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 214 'UnlockSteamUserAchievement' test.out

#- 215 GetXblUserAchievements
$CLI_EXE \
    --sn platform \
    --op GetXblUserAchievements \
    --namespace $AB_NAMESPACE \
    --userId 'EHYYyXxi' \
    --xboxUserId 's7oK6CDx' \
    > test.out 2>&1
eval_tap $? 215 'GetXblUserAchievements' test.out

#- 216 UpdateXblUserAchievement
# body param: body
echo '{"achievements": [{"id": "gkjAAjuv", "percentComplete": 39}, {"id": "Bl28ZfEi", "percentComplete": 55}, {"id": "8N9Y5qFv", "percentComplete": 7}], "serviceConfigId": "2jlEzQee", "titleId": "y3arPQQ6", "xboxUserId": "uY5axhII"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXblUserAchievement \
    --namespace $AB_NAMESPACE \
    --userId '613u6gIH' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 216 'UpdateXblUserAchievement' test.out

#- 217 AnonymizeCampaign
$CLI_EXE \
    --sn platform \
    --op AnonymizeCampaign \
    --namespace $AB_NAMESPACE \
    --userId 'TdqiGOYv' \
    > test.out 2>&1
eval_tap $? 217 'AnonymizeCampaign' test.out

#- 218 AnonymizeEntitlement
$CLI_EXE \
    --sn platform \
    --op AnonymizeEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'Yzl6msCt' \
    > test.out 2>&1
eval_tap $? 218 'AnonymizeEntitlement' test.out

#- 219 AnonymizeFulfillment
$CLI_EXE \
    --sn platform \
    --op AnonymizeFulfillment \
    --namespace $AB_NAMESPACE \
    --userId 'iPByroOv' \
    > test.out 2>&1
eval_tap $? 219 'AnonymizeFulfillment' test.out

#- 220 AnonymizeIntegration
$CLI_EXE \
    --sn platform \
    --op AnonymizeIntegration \
    --namespace $AB_NAMESPACE \
    --userId 'tPlH5bKm' \
    > test.out 2>&1
eval_tap $? 220 'AnonymizeIntegration' test.out

#- 221 AnonymizeOrder
$CLI_EXE \
    --sn platform \
    --op AnonymizeOrder \
    --namespace $AB_NAMESPACE \
    --userId '1NOdmrEr' \
    > test.out 2>&1
eval_tap $? 221 'AnonymizeOrder' test.out

#- 222 AnonymizePayment
$CLI_EXE \
    --sn platform \
    --op AnonymizePayment \
    --namespace $AB_NAMESPACE \
    --userId '3GSwVgLZ' \
    > test.out 2>&1
eval_tap $? 222 'AnonymizePayment' test.out

#- 223 AnonymizeRevocation
$CLI_EXE \
    --sn platform \
    --op AnonymizeRevocation \
    --namespace $AB_NAMESPACE \
    --userId 'AgtpiVlk' \
    > test.out 2>&1
eval_tap $? 223 'AnonymizeRevocation' test.out

#- 224 AnonymizeSubscription
$CLI_EXE \
    --sn platform \
    --op AnonymizeSubscription \
    --namespace $AB_NAMESPACE \
    --userId 'MBl9EVWW' \
    > test.out 2>&1
eval_tap $? 224 'AnonymizeSubscription' test.out

#- 225 AnonymizeWallet
$CLI_EXE \
    --sn platform \
    --op AnonymizeWallet \
    --namespace $AB_NAMESPACE \
    --userId 'GHvT215b' \
    > test.out 2>&1
eval_tap $? 225 'AnonymizeWallet' test.out

#- 226 GetUserDLCByPlatform
$CLI_EXE \
    --sn platform \
    --op GetUserDLCByPlatform \
    --namespace $AB_NAMESPACE \
    --userId 'NLyJ6Jj4' \
    --type 'PSN' \
    > test.out 2>&1
eval_tap $? 226 'GetUserDLCByPlatform' test.out

#- 227 GetUserDLC
$CLI_EXE \
    --sn platform \
    --op GetUserDLC \
    --namespace $AB_NAMESPACE \
    --userId 'Y7w1ENW8' \
    --type 'STEAM' \
    > test.out 2>&1
eval_tap $? 227 'GetUserDLC' test.out

#- 228 QueryUserEntitlements
$CLI_EXE \
    --sn platform \
    --op QueryUserEntitlements \
    --namespace $AB_NAMESPACE \
    --userId 'MZGu88te' \
    --activeOnly 'false' \
    --appType 'GAME' \
    --entitlementClazz 'LOOTBOX' \
    --entitlementName 'o44CsftD' \
    --features '["F4b63W5u", "eLMhtlO2", "Bn255pDj"]' \
    --fuzzyMatchName 'false' \
    --itemId '["z8EkyrIz", "R1uFIVrJ", "Wv0JFhRr"]' \
    --limit '83' \
    --offset '22' \
    --origin 'Xbox' \
    > test.out 2>&1
eval_tap $? 228 'QueryUserEntitlements' test.out

#- 229 GrantUserEntitlement
# body param: body
echo '[{"endDate": "1971-10-23T00:00:00Z", "grantedCode": "y1X9auMs", "itemId": "9ln9ill1", "itemNamespace": "Rgj9y9bQ", "language": "If-014", "origin": "System", "quantity": 12, "region": "5bESfV7o", "source": "ACHIEVEMENT", "startDate": "1987-06-30T00:00:00Z", "storeId": "5VKpVRaG"}, {"endDate": "1988-06-15T00:00:00Z", "grantedCode": "OuaQ7ZVY", "itemId": "EPQmqU2K", "itemNamespace": "tUPR6GPq", "language": "lh_aY", "origin": "System", "quantity": 75, "region": "kvXHT9QW", "source": "PURCHASE", "startDate": "1973-11-26T00:00:00Z", "storeId": "TsIrc0Zc"}, {"endDate": "1988-08-03T00:00:00Z", "grantedCode": "gr8lupno", "itemId": "s67gi7sA", "itemNamespace": "qPDfOQg9", "language": "pfib_459", "origin": "Steam", "quantity": 70, "region": "rSVXjchG", "source": "REDEEM_CODE", "startDate": "1988-04-09T00:00:00Z", "storeId": "w0p3IcSN"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op GrantUserEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'NIT8mdW6' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 229 'GrantUserEntitlement' test.out

#- 230 GetUserAppEntitlementByAppId
$CLI_EXE \
    --sn platform \
    --op GetUserAppEntitlementByAppId \
    --namespace $AB_NAMESPACE \
    --userId '3KFwAQaK' \
    --activeOnly 'true' \
    --appId 'h7GRbyzk' \
    > test.out 2>&1
eval_tap $? 230 'GetUserAppEntitlementByAppId' test.out

#- 231 QueryUserEntitlementsByAppType
$CLI_EXE \
    --sn platform \
    --op QueryUserEntitlementsByAppType \
    --namespace $AB_NAMESPACE \
    --userId 'C6QDljN5' \
    --activeOnly 'false' \
    --limit '47' \
    --offset '65' \
    --appType 'GAME' \
    > test.out 2>&1
eval_tap $? 231 'QueryUserEntitlementsByAppType' test.out

#- 232 GetUserEntitlementByItemId
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'QAQLRlTn' \
    --activeOnly 'false' \
    --entitlementClazz 'LOOTBOX' \
    --platform 'PbOQVuNA' \
    --itemId 'dm6X7ZqQ' \
    > test.out 2>&1
eval_tap $? 232 'GetUserEntitlementByItemId' test.out

#- 233 GetUserActiveEntitlementsByItemIds
$CLI_EXE \
    --sn platform \
    --op GetUserActiveEntitlementsByItemIds \
    --namespace $AB_NAMESPACE \
    --userId 'SdLL1aJS' \
    --ids '["Mv7kPEAB", "3PPKrBiS", "JazZex82"]' \
    --platform '4WNdvIBu' \
    > test.out 2>&1
eval_tap $? 233 'GetUserActiveEntitlementsByItemIds' test.out

#- 234 GetUserEntitlementBySku
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementBySku \
    --namespace $AB_NAMESPACE \
    --userId 'cyR1AL9h' \
    --activeOnly 'false' \
    --entitlementClazz 'LOOTBOX' \
    --platform 'uLSAGWfF' \
    --sku 'e9MplHzk' \
    > test.out 2>&1
eval_tap $? 234 'GetUserEntitlementBySku' test.out

#- 235 ExistsAnyUserActiveEntitlement
$CLI_EXE \
    --sn platform \
    --op ExistsAnyUserActiveEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'D9jqrExT' \
    --appIds '["knjoLTMO", "82Aaroid", "oifnVUrb"]' \
    --itemIds '["OlXuehVi", "kWBsVgj0", "BvsmyMfj"]' \
    --platform 'uVMMPUR3' \
    --skus '["MYGjgkFn", "OWpdiiAl", "AAbKp7cY"]' \
    > test.out 2>&1
eval_tap $? 235 'ExistsAnyUserActiveEntitlement' test.out

#- 236 ExistsAnyUserActiveEntitlementByItemIds
$CLI_EXE \
    --sn platform \
    --op ExistsAnyUserActiveEntitlementByItemIds \
    --namespace $AB_NAMESPACE \
    --userId '4xDXWyvn' \
    --platform 'MzwJxOm1' \
    --itemIds '["vcG18g9m", "r6axRo5I", "nszimv63"]' \
    > test.out 2>&1
eval_tap $? 236 'ExistsAnyUserActiveEntitlementByItemIds' test.out

#- 237 GetUserAppEntitlementOwnershipByAppId
$CLI_EXE \
    --sn platform \
    --op GetUserAppEntitlementOwnershipByAppId \
    --namespace $AB_NAMESPACE \
    --userId 'LhwcBbyq' \
    --appId 'ViKuvl26' \
    > test.out 2>&1
eval_tap $? 237 'GetUserAppEntitlementOwnershipByAppId' test.out

#- 238 GetUserEntitlementOwnershipByItemId
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementOwnershipByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'Rs8W6RLl' \
    --entitlementClazz 'APP' \
    --platform 'qKeIxi9l' \
    --itemId 'hnmwuCIo' \
    > test.out 2>&1
eval_tap $? 238 'GetUserEntitlementOwnershipByItemId' test.out

#- 239 GetUserEntitlementOwnershipByItemIds
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementOwnershipByItemIds \
    --namespace $AB_NAMESPACE \
    --userId 'Fi4407hL' \
    --ids '["TfWfRl0S", "z6hazsFg", "t3wJRWl4"]' \
    --platform 'ESAWSt20' \
    > test.out 2>&1
eval_tap $? 239 'GetUserEntitlementOwnershipByItemIds' test.out

#- 240 GetUserEntitlementOwnershipBySku
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementOwnershipBySku \
    --namespace $AB_NAMESPACE \
    --userId 'HkfXhc1E' \
    --entitlementClazz 'ENTITLEMENT' \
    --platform 'QhfMwA2A' \
    --sku 'jAiK1HJ0' \
    > test.out 2>&1
eval_tap $? 240 'GetUserEntitlementOwnershipBySku' test.out

#- 241 RevokeAllEntitlements
$CLI_EXE \
    --sn platform \
    --op RevokeAllEntitlements \
    --namespace $AB_NAMESPACE \
    --userId 'Kl8Gm263' \
    > test.out 2>&1
eval_tap $? 241 'RevokeAllEntitlements' test.out

#- 242 RevokeUserEntitlements
$CLI_EXE \
    --sn platform \
    --op RevokeUserEntitlements \
    --namespace $AB_NAMESPACE \
    --userId 'fcIg6vsX' \
    --entitlementIds 'AkrsqgM0' \
    > test.out 2>&1
eval_tap $? 242 'RevokeUserEntitlements' test.out

#- 243 GetUserEntitlement
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlement \
    --entitlementId 'BvDY0xQn' \
    --namespace $AB_NAMESPACE \
    --userId 'GhMd0A6r' \
    > test.out 2>&1
eval_tap $? 243 'GetUserEntitlement' test.out

#- 244 UpdateUserEntitlement
# body param: body
echo '{"endDate": "1983-09-04T00:00:00Z", "nullFieldList": ["4lJ3U95c", "pcimQ7QR", "98Ey52WV"], "origin": "Playstation", "reason": "l5NNw1XX", "startDate": "1972-11-26T00:00:00Z", "status": "ACTIVE", "useCount": 62}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateUserEntitlement \
    --entitlementId 'sYEzWGND' \
    --namespace $AB_NAMESPACE \
    --userId 'pYJMjrS5' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 244 'UpdateUserEntitlement' test.out

#- 245 ConsumeUserEntitlement
# body param: body
echo '{"options": ["eclKTWKi", "nK9MGZxZ", "ez5snOj3"], "platform": "nceZMDkK", "requestId": "dzvWwEYQ", "useCount": 11}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ConsumeUserEntitlement \
    --entitlementId 'HSeaAMJt' \
    --namespace $AB_NAMESPACE \
    --userId '9fpaTMnl' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 245 'ConsumeUserEntitlement' test.out

#- 246 DisableUserEntitlement
$CLI_EXE \
    --sn platform \
    --op DisableUserEntitlement \
    --entitlementId 'zhQuRc6m' \
    --namespace $AB_NAMESPACE \
    --userId 'QNDxUyzd' \
    > test.out 2>&1
eval_tap $? 246 'DisableUserEntitlement' test.out

#- 247 EnableUserEntitlement
$CLI_EXE \
    --sn platform \
    --op EnableUserEntitlement \
    --entitlementId 'N1yk6rsG' \
    --namespace $AB_NAMESPACE \
    --userId '5c29nFHy' \
    > test.out 2>&1
eval_tap $? 247 'EnableUserEntitlement' test.out

#- 248 GetUserEntitlementHistories
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementHistories \
    --entitlementId 'TuJLCyoV' \
    --namespace $AB_NAMESPACE \
    --userId 'zhDXuYmA' \
    > test.out 2>&1
eval_tap $? 248 'GetUserEntitlementHistories' test.out

#- 249 RevokeUserEntitlement
$CLI_EXE \
    --sn platform \
    --op RevokeUserEntitlement \
    --entitlementId 'MckJVxXD' \
    --namespace $AB_NAMESPACE \
    --userId 'ia1g5RpJ' \
    > test.out 2>&1
eval_tap $? 249 'RevokeUserEntitlement' test.out

#- 250 RevokeUserEntitlementByUseCount
# body param: body
echo '{"reason": "QOtbrRi7", "useCount": 18}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RevokeUserEntitlementByUseCount \
    --entitlementId 'KGbG0Q4B' \
    --namespace $AB_NAMESPACE \
    --userId 'kJuUnGcU' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 250 'RevokeUserEntitlementByUseCount' test.out

#- 251 PreCheckRevokeUserEntitlementByUseCount
$CLI_EXE \
    --sn platform \
    --op PreCheckRevokeUserEntitlementByUseCount \
    --entitlementId 'cw1PzPVy' \
    --namespace $AB_NAMESPACE \
    --userId 'CMrPB8Np' \
    --quantity '36' \
    > test.out 2>&1
eval_tap $? 251 'PreCheckRevokeUserEntitlementByUseCount' test.out

#- 252 RevokeUseCount
eval_tap 0 252 'RevokeUseCount # SKIP deprecated' test.out

#- 253 SellUserEntitlement
# body param: body
echo '{"platform": "y6JVsDEl", "requestId": "avtgVgtk", "useCount": 52}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SellUserEntitlement \
    --entitlementId 'm3mY3DxE' \
    --namespace $AB_NAMESPACE \
    --userId '5ZsASu0h' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 253 'SellUserEntitlement' test.out

#- 254 FulfillItem
# body param: body
echo '{"duration": 69, "endDate": "1984-08-13T00:00:00Z", "entitlementOrigin": "Epic", "itemId": "kFEqD5KF", "itemSku": "3IFFyaXm", "language": "fVfM4pMW", "metadata": {"lLf8hddt": {}, "iLvpn2Fa": {}, "GgIJENSF": {}}, "order": {"currency": {"currencyCode": "t5U9blYc", "currencySymbol": "h7Rh9sYz", "currencyType": "VIRTUAL", "decimals": 64, "namespace": "LEIkpbiK"}, "ext": {"xS7jWsRn": {}, "UlWXLXbS": {}, "s9bxIyKO": {}}, "free": false}, "orderNo": "scFmfTqd", "origin": "Twitch", "overrideBundleItemQty": {"xwsCH0AU": 77, "idMbcs5H": 39, "kc0nnM9R": 35}, "quantity": 97, "region": "rhzADloR", "source": "PAYMENT", "startDate": "1980-07-13T00:00:00Z", "storeId": "BbAIEGkV"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op FulfillItem \
    --namespace $AB_NAMESPACE \
    --userId 'xWSf51y6' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 254 'FulfillItem' test.out

#- 255 RedeemCode
# body param: body
echo '{"code": "umZAKkrV", "language": "dR_ecJe", "region": "q4DT5MOM"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RedeemCode \
    --namespace $AB_NAMESPACE \
    --userId '45p1X7a0' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 255 'RedeemCode' test.out

#- 256 PreCheckFulfillItem
# body param: body
echo '{"itemId": "S1Ns2pp6", "itemSku": "j0u7det0", "quantity": 49}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PreCheckFulfillItem \
    --namespace $AB_NAMESPACE \
    --userId 'spa40cI8' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 256 'PreCheckFulfillItem' test.out

#- 257 FulfillRewards
# body param: body
echo '{"entitlementOrigin": "Playstation", "metadata": {"N1Sea9GE": {}, "zjaLwZWK": {}, "r5r5DX7i": {}}, "origin": "Epic", "rewards": [{"currency": {"currencyCode": "L6bnapYE", "namespace": "bZYRf66M"}, "item": {"itemId": "hXQz7W3Y", "itemSku": "ILpuDkZm", "itemType": "guaOq9z4"}, "quantity": 19, "type": "CURRENCY"}, {"currency": {"currencyCode": "qGC1OdY8", "namespace": "Vd47o1NA"}, "item": {"itemId": "CG8RTdLV", "itemSku": "K5czeaoY", "itemType": "G9WKa9Lo"}, "quantity": 45, "type": "CURRENCY"}, {"currency": {"currencyCode": "am9OHsDR", "namespace": "mxI0lT1x"}, "item": {"itemId": "dqL1TVMy", "itemSku": "5hulmuZu", "itemType": "bUUWMcLA"}, "quantity": 15, "type": "CURRENCY"}], "source": "REWARD", "transactionId": "iiHrVlwJ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op FulfillRewards \
    --namespace $AB_NAMESPACE \
    --userId 'R2VhrDy7' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 257 'FulfillRewards' test.out

#- 258 QueryUserIAPOrders
$CLI_EXE \
    --sn platform \
    --op QueryUserIAPOrders \
    --namespace $AB_NAMESPACE \
    --userId 'TdnkGco9' \
    --endTime 'wNFsFfwk' \
    --limit '14' \
    --offset '14' \
    --productId 'GujT4TjZ' \
    --startTime '1we2IGUb' \
    --status 'FAILED' \
    --type 'XBOX' \
    > test.out 2>&1
eval_tap $? 258 'QueryUserIAPOrders' test.out

#- 259 QueryAllUserIAPOrders
$CLI_EXE \
    --sn platform \
    --op QueryAllUserIAPOrders \
    --namespace $AB_NAMESPACE \
    --userId 'DWCAJkeV' \
    > test.out 2>&1
eval_tap $? 259 'QueryAllUserIAPOrders' test.out

#- 260 QueryUserIAPConsumeHistory
$CLI_EXE \
    --sn platform \
    --op QueryUserIAPConsumeHistory \
    --namespace $AB_NAMESPACE \
    --userId 'DXTHcwqe' \
    --endTime '6bieXEgH' \
    --limit '56' \
    --offset '11' \
    --startTime 'dFSfoKeA' \
    --status 'PENDING' \
    --type 'PLAYSTATION' \
    > test.out 2>&1
eval_tap $? 260 'QueryUserIAPConsumeHistory' test.out

#- 261 MockFulfillIAPItem
# body param: body
echo '{"itemIdentityType": "ITEM_ID", "language": "PKa-ttFX_Pz", "productId": "W57gwP2f", "region": "lxcA5qsd", "transactionId": "nP3VPqiP", "type": "PLAYSTATION"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op MockFulfillIAPItem \
    --namespace $AB_NAMESPACE \
    --userId '4kiToW2W' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 261 'MockFulfillIAPItem' test.out

#- 262 QueryUserOrders
$CLI_EXE \
    --sn platform \
    --op QueryUserOrders \
    --namespace $AB_NAMESPACE \
    --userId '4wW4md8E' \
    --itemId 'Kp3b5u9U' \
    --limit '12' \
    --offset '49' \
    --status 'CHARGED' \
    > test.out 2>&1
eval_tap $? 262 'QueryUserOrders' test.out

#- 263 AdminCreateUserOrder
# body param: body
echo '{"currencyCode": "nbmHEbVz", "currencyNamespace": "m35hV6qf", "discountedPrice": 28, "ext": {"AboEk6nX": {}, "VVs5IxBK": {}, "BYkiQpnT": {}}, "itemId": "kHDnkRWu", "language": "m3Utye4n", "options": {"skipPriceValidation": false}, "platform": "Playstation", "price": 53, "quantity": 97, "region": "wVWiwIZh", "returnUrl": "CHCE1sG5", "sandbox": true, "sectionId": "h98rQQKZ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op AdminCreateUserOrder \
    --namespace $AB_NAMESPACE \
    --userId 'yqTnJHI1' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 263 'AdminCreateUserOrder' test.out

#- 264 CountOfPurchasedItem
$CLI_EXE \
    --sn platform \
    --op CountOfPurchasedItem \
    --namespace $AB_NAMESPACE \
    --userId '6bYdZxbO' \
    --itemId 'nAAEBhRI' \
    > test.out 2>&1
eval_tap $? 264 'CountOfPurchasedItem' test.out

#- 265 GetUserOrder
$CLI_EXE \
    --sn platform \
    --op GetUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'p3FyJNGY' \
    --userId 'Weq6uClL' \
    > test.out 2>&1
eval_tap $? 265 'GetUserOrder' test.out

#- 266 UpdateUserOrderStatus
# body param: body
echo '{"status": "INIT", "statusReason": "Nm1JnZc9"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateUserOrderStatus \
    --namespace $AB_NAMESPACE \
    --orderNo 'HPluxkek' \
    --userId '5HKiM1Oj' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 266 'UpdateUserOrderStatus' test.out

#- 267 FulfillUserOrder
$CLI_EXE \
    --sn platform \
    --op FulfillUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'vEJb0FPn' \
    --userId 'eQtL6nsr' \
    > test.out 2>&1
eval_tap $? 267 'FulfillUserOrder' test.out

#- 268 GetUserOrderGrant
$CLI_EXE \
    --sn platform \
    --op GetUserOrderGrant \
    --namespace $AB_NAMESPACE \
    --orderNo 'ncyHLIYV' \
    --userId 'uJru5fQS' \
    > test.out 2>&1
eval_tap $? 268 'GetUserOrderGrant' test.out

#- 269 GetUserOrderHistories
$CLI_EXE \
    --sn platform \
    --op GetUserOrderHistories \
    --namespace $AB_NAMESPACE \
    --orderNo 'yVX2ABbn' \
    --userId 'gnGjr1p8' \
    > test.out 2>&1
eval_tap $? 269 'GetUserOrderHistories' test.out

#- 270 ProcessUserOrderNotification
# body param: body
echo '{"additionalData": {"cardSummary": "gWrzgGjm"}, "authorisedTime": "1998-02-07T00:00:00Z", "chargebackReversedTime": "1983-05-03T00:00:00Z", "chargebackTime": "1979-12-30T00:00:00Z", "chargedTime": "1984-08-22T00:00:00Z", "createdTime": "1972-08-19T00:00:00Z", "currency": {"currencyCode": "fMQs6hFc", "currencySymbol": "q3P4NBUK", "currencyType": "REAL", "decimals": 65, "namespace": "CLLOwygM"}, "customParameters": {"tdHxFOsZ": {}, "N4wur950": {}, "DFuuyTII": {}}, "extOrderNo": "cjD9ifm5", "extTxId": "xRJPQB87", "extUserId": "BQrlQ2F6", "issuedAt": "1977-10-27T00:00:00Z", "metadata": {"JQGMAWxx": "buvOAIL2", "KZYukWMq": "OrkLgbw6", "rb5RS9y9": "Unl5xT96"}, "namespace": "KwEnu2Tx", "nonceStr": "LSRr9n6G", "paymentMethod": "fzWlN4mZ", "paymentMethodFee": 54, "paymentOrderNo": "xcf1eJHM", "paymentProvider": "WXPAY", "paymentProviderFee": 61, "paymentStationUrl": "JmCOefUf", "price": 10, "refundedTime": "1974-07-24T00:00:00Z", "salesTax": 30, "sandbox": false, "sku": "wXw5p1hr", "status": "CHARGE_FAILED", "statusReason": "U2OpnsDW", "subscriptionId": "YryexdHv", "subtotalPrice": 19, "targetNamespace": "nu7j8Gt1", "targetUserId": "zRu25886", "tax": 17, "totalPrice": 12, "totalTax": 97, "txEndTime": "1988-07-11T00:00:00Z", "type": "q4lxUj3b", "userId": "tFzNFufo", "vat": 79}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ProcessUserOrderNotification \
    --namespace $AB_NAMESPACE \
    --orderNo 'FmfziobU' \
    --userId 'hqhooCxA' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 270 'ProcessUserOrderNotification' test.out

#- 271 DownloadUserOrderReceipt
$CLI_EXE \
    --sn platform \
    --op DownloadUserOrderReceipt \
    --namespace $AB_NAMESPACE \
    --orderNo '8jMlCKdQ' \
    --userId 'eqIjKtsA' \
    > test.out 2>&1
eval_tap $? 271 'DownloadUserOrderReceipt' test.out

#- 272 CreateUserPaymentOrder
# body param: body
echo '{"currencyCode": "4pgqe3hX", "currencyNamespace": "Fd8dREKA", "customParameters": {"BratDUz3": {}, "cG8SOIBM": {}, "dho9Z6wl": {}}, "description": "AFifagqt", "extOrderNo": "c06cIf3F", "extUserId": "MRPWbuXD", "itemType": "MEDIA", "language": "vXzL-WLRY-145", "metadata": {"gJoKOL7W": "paiuh58j", "HeWe1VHm": "A4hPyjJc", "III6GYtn": "pwYOc3Md"}, "notifyUrl": "kb3GB2uJ", "omitNotification": true, "platform": "i0b608oB", "price": 98, "recurringPaymentOrderNo": "WQN0ZK0w", "region": "xOHZDxpU", "returnUrl": "8wS2Agb1", "sandbox": true, "sku": "yNiOK857", "subscriptionId": "CE2gJxc5", "title": "z1bRsbQr"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateUserPaymentOrder \
    --namespace $AB_NAMESPACE \
    --userId 'VJT0nvuC' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 272 'CreateUserPaymentOrder' test.out

#- 273 RefundUserPaymentOrder
# body param: body
echo '{"description": "zeoyzPZ5"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RefundUserPaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo '1QiVhYXI' \
    --userId 'Idw3rbni' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 273 'RefundUserPaymentOrder' test.out

#- 274 ApplyUserRedemption
# body param: body
echo '{"code": "68XlS0a0", "orderNo": "CoJkX9zd"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ApplyUserRedemption \
    --namespace $AB_NAMESPACE \
    --userId 'iHpBdpla' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 274 'ApplyUserRedemption' test.out

#- 275 DoRevocation
# body param: body
echo '{"meta": {"MbcoL80M": {}, "WiTikAU1": {}, "bNcA0UD8": {}}, "revokeEntries": [{"currency": {"balanceOrigin": "Xbox", "currencyCode": "5BKkq6rm", "namespace": "E3n4c0AG"}, "entitlement": {"entitlementId": "rZjvexq5"}, "item": {"entitlementOrigin": "Nintendo", "itemIdentity": "Kn8e36vt", "itemIdentityType": "ITEM_ID", "origin": "Playstation"}, "quantity": 90, "type": "CURRENCY"}, {"currency": {"balanceOrigin": "IOS", "currencyCode": "JsoKVTTx", "namespace": "ZgVeHDei"}, "entitlement": {"entitlementId": "1eTk4IsI"}, "item": {"entitlementOrigin": "System", "itemIdentity": "M8TXNgyt", "itemIdentityType": "ITEM_ID", "origin": "Epic"}, "quantity": 58, "type": "ENTITLEMENT"}, {"currency": {"balanceOrigin": "Playstation", "currencyCode": "PqKY21AF", "namespace": "GqdfgF57"}, "entitlement": {"entitlementId": "Lm9QKpRq"}, "item": {"entitlementOrigin": "Steam", "itemIdentity": "ZZAZOBu7", "itemIdentityType": "ITEM_SKU", "origin": "Xbox"}, "quantity": 82, "type": "CURRENCY"}], "source": "IAP", "transactionId": "KNbGArfR"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op DoRevocation \
    --namespace $AB_NAMESPACE \
    --userId '8BMufPiN' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 275 'DoRevocation' test.out

#- 276 RegisterXblSessions
# body param: body
echo '{"gameSessionId": "ADsO0Sbs", "payload": {"EUEyzdVA": {}, "KaksgPMR": {}, "V2Hm24SH": {}}, "scid": "kBuelkbb", "sessionTemplateName": "Qh81fqBT"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RegisterXblSessions \
    --namespace $AB_NAMESPACE \
    --userId 'HyQtxMRc' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 276 'RegisterXblSessions' test.out

#- 277 QueryUserSubscriptions
$CLI_EXE \
    --sn platform \
    --op QueryUserSubscriptions \
    --namespace $AB_NAMESPACE \
    --userId 'iOqf9epy' \
    --chargeStatus 'CHARGED' \
    --itemId 'qVx9f7Vd' \
    --limit '70' \
    --offset '74' \
    --sku '9iXr7Ujj' \
    --status 'INIT' \
    --subscribedBy 'PLATFORM' \
    > test.out 2>&1
eval_tap $? 277 'QueryUserSubscriptions' test.out

#- 278 GetUserSubscriptionActivities
$CLI_EXE \
    --sn platform \
    --op GetUserSubscriptionActivities \
    --namespace $AB_NAMESPACE \
    --userId 'xzZ5y3us' \
    --excludeSystem 'true' \
    --limit '30' \
    --offset '20' \
    --subscriptionId 'uUwBYCqx' \
    > test.out 2>&1
eval_tap $? 278 'GetUserSubscriptionActivities' test.out

#- 279 PlatformSubscribeSubscription
# body param: body
echo '{"grantDays": 73, "itemId": "i28P49b7", "language": "FFXms8XF", "reason": "mqDu4mOz", "region": "pFQQJRN0", "source": "iSfZ2VGI"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PlatformSubscribeSubscription \
    --namespace $AB_NAMESPACE \
    --userId 'Xw9cMw2p' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 279 'PlatformSubscribeSubscription' test.out

#- 280 CheckUserSubscriptionSubscribableByItemId
$CLI_EXE \
    --sn platform \
    --op CheckUserSubscriptionSubscribableByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'mjP1AWvJ' \
    --itemId '4zYCdtDT' \
    > test.out 2>&1
eval_tap $? 280 'CheckUserSubscriptionSubscribableByItemId' test.out

#- 281 GetUserSubscription
$CLI_EXE \
    --sn platform \
    --op GetUserSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'o43dehPI' \
    --userId 'w0iHwvuL' \
    > test.out 2>&1
eval_tap $? 281 'GetUserSubscription' test.out

#- 282 DeleteUserSubscription
$CLI_EXE \
    --sn platform \
    --op DeleteUserSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'YLqz8GsP' \
    --userId '4IQGo0K1' \
    > test.out 2>&1
eval_tap $? 282 'DeleteUserSubscription' test.out

#- 283 CancelSubscription
# body param: body
echo '{"immediate": true, "reason": "kaOiPxgw"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CancelSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'qajcHoEr' \
    --userId 'L3hwNfUP' \
    --force 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 283 'CancelSubscription' test.out

#- 284 GrantDaysToSubscription
# body param: body
echo '{"grantDays": 44, "reason": "h7lTuK7H"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op GrantDaysToSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId '0n4Wc6oW' \
    --userId '5Ak9ALhP' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 284 'GrantDaysToSubscription' test.out

#- 285 GetUserSubscriptionBillingHistories
$CLI_EXE \
    --sn platform \
    --op GetUserSubscriptionBillingHistories \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'XTFlVJpE' \
    --userId 'BqRpkbEB' \
    --excludeFree 'false' \
    --limit '93' \
    --offset '1' \
    > test.out 2>&1
eval_tap $? 285 'GetUserSubscriptionBillingHistories' test.out

#- 286 ProcessUserSubscriptionNotification
# body param: body
echo '{"additionalData": {"cardSummary": "W80FEk6B"}, "authorisedTime": "1978-05-21T00:00:00Z", "chargebackReversedTime": "1995-05-01T00:00:00Z", "chargebackTime": "1988-08-31T00:00:00Z", "chargedTime": "1972-06-23T00:00:00Z", "createdTime": "1997-04-21T00:00:00Z", "currency": {"currencyCode": "Z6RRW58i", "currencySymbol": "RzVGIkqu", "currencyType": "VIRTUAL", "decimals": 38, "namespace": "hL3EZWn9"}, "customParameters": {"cAQKzANG": {}, "MddGvkgY": {}, "HBuUYGr0": {}}, "extOrderNo": "8oPXZc5S", "extTxId": "LLxOV87D", "extUserId": "3ezwsAug", "issuedAt": "1972-06-29T00:00:00Z", "metadata": {"uvWdFmO8": "peTQN1yv", "dDASM6nq": "GqYxxqwl", "El4jNdmO": "gNSzLk36"}, "namespace": "EQdrUwAJ", "nonceStr": "P04RF0W3", "paymentMethod": "ao9XXUPo", "paymentMethodFee": 85, "paymentOrderNo": "NbtPfNMe", "paymentProvider": "PAYPAL", "paymentProviderFee": 73, "paymentStationUrl": "y5Ii9KbH", "price": 57, "refundedTime": "1972-12-15T00:00:00Z", "salesTax": 35, "sandbox": false, "sku": "YxXDVqmD", "status": "NOTIFICATION_OF_CHARGEBACK", "statusReason": "rNpqjd5y", "subscriptionId": "gdzvALbg", "subtotalPrice": 1, "targetNamespace": "rlDz5zYN", "targetUserId": "HGsGrWXo", "tax": 19, "totalPrice": 31, "totalTax": 37, "txEndTime": "1996-12-29T00:00:00Z", "type": "qbQe6LYe", "userId": "yOQbQacP", "vat": 34}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ProcessUserSubscriptionNotification \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'N2No7ubQ' \
    --userId 'AgqvWZob' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 286 'ProcessUserSubscriptionNotification' test.out

#- 287 AcquireUserTicket
# body param: body
echo '{"count": 96, "orderNo": "ZZMPNF3r"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op AcquireUserTicket \
    --boothName 'rvxxgXrO' \
    --namespace $AB_NAMESPACE \
    --userId 'aFlQaO0B' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 287 'AcquireUserTicket' test.out

#- 288 QueryUserCurrencyWallets
$CLI_EXE \
    --sn platform \
    --op QueryUserCurrencyWallets \
    --namespace $AB_NAMESPACE \
    --userId 'paoAfcfS' \
    > test.out 2>&1
eval_tap $? 288 'QueryUserCurrencyWallets' test.out

#- 289 DebitUserWalletByCurrencyCode
# body param: body
echo '{"allowOverdraft": false, "amount": 28, "balanceOrigin": "Steam", "balanceSource": "DLC_REVOCATION", "metadata": {"rOJ9QePD": {}, "wsCHru0f": {}, "Uq7xcN1C": {}}, "reason": "0smNhT9e"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op DebitUserWalletByCurrencyCode \
    --currencyCode 'hX4VKnTi' \
    --namespace $AB_NAMESPACE \
    --userId 'C26p1cSp' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 289 'DebitUserWalletByCurrencyCode' test.out

#- 290 ListUserCurrencyTransactions
$CLI_EXE \
    --sn platform \
    --op ListUserCurrencyTransactions \
    --currencyCode 'FS9a6rIq' \
    --namespace $AB_NAMESPACE \
    --userId 'dScOwent' \
    --limit '31' \
    --offset '22' \
    > test.out 2>&1
eval_tap $? 290 'ListUserCurrencyTransactions' test.out

#- 291 CheckBalance
# body param: request
echo '{"amount": 80, "debitBalanceSource": "IAP_REVOCATION", "metadata": {"7gObYaK0": {}, "I5CsDlWJ": {}, "2hdSDlQY": {}}, "reason": "EOOaOEzw", "walletPlatform": "Playstation"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CheckBalance \
    --currencyCode '3xCxqk3r' \
    --namespace $AB_NAMESPACE \
    --userId 'YBqdG2E5' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 291 'CheckBalance' test.out

#- 292 CheckWallet
eval_tap 0 292 'CheckWallet # SKIP deprecated' test.out

#- 293 CreditUserWallet
# body param: body
echo '{"amount": 75, "expireAt": "1990-09-24T00:00:00Z", "metadata": {"TAPv8VGr": {}, "TFCPSNJV": {}, "zAWHQzc0": {}}, "origin": "IOS", "reason": "s08R0AJ6", "source": "REFERRAL_BONUS"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreditUserWallet \
    --currencyCode 'J7xQAjj4' \
    --namespace $AB_NAMESPACE \
    --userId 'M6S3Gar2' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 293 'CreditUserWallet' test.out

#- 294 DebitByWalletPlatform
# body param: request
echo '{"amount": 67, "debitBalanceSource": "PAYMENT", "metadata": {"f4h4jn8I": {}, "qaOhtPvw": {}, "wKdYBNyv": {}}, "reason": "BpOlrkQK", "walletPlatform": "IOS"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op DebitByWalletPlatform \
    --currencyCode 'McJBJMnQ' \
    --namespace $AB_NAMESPACE \
    --userId 'q4A7hKlJ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 294 'DebitByWalletPlatform' test.out

#- 295 PayWithUserWallet
# body param: body
echo '{"amount": 70, "metadata": {"iWAAE9Zb": {}, "prC8szyn": {}, "dfGNEBNR": {}}, "walletPlatform": "Xbox"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PayWithUserWallet \
    --currencyCode 'BO3qshmB' \
    --namespace $AB_NAMESPACE \
    --userId 'EFZvkWlD' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 295 'PayWithUserWallet' test.out

#- 296 GetUserWallet
eval_tap 0 296 'GetUserWallet # SKIP deprecated' test.out

#- 297 DebitUserWallet
eval_tap 0 297 'DebitUserWallet # SKIP deprecated' test.out

#- 298 DisableUserWallet
eval_tap 0 298 'DisableUserWallet # SKIP deprecated' test.out

#- 299 EnableUserWallet
eval_tap 0 299 'EnableUserWallet # SKIP deprecated' test.out

#- 300 ListUserWalletTransactions
eval_tap 0 300 'ListUserWalletTransactions # SKIP deprecated' test.out

#- 301 ListViews
$CLI_EXE \
    --sn platform \
    --op ListViews \
    --namespace $AB_NAMESPACE \
    --storeId 'TBDfxoFC' \
    > test.out 2>&1
eval_tap $? 301 'ListViews' test.out

#- 302 CreateView
# body param: body
echo '{"displayOrder": 89, "localizations": {"YKQIkKSa": {"description": "HGRUoj1N", "localExt": {"yBtLc0dm": {}, "8ni4N4UK": {}, "i0SD4fy4": {}}, "longDescription": "WONmYTfG", "title": "DPJO7JQ2"}, "ZvHjYyeW": {"description": "JOE5CXLx", "localExt": {"n2x3Y4H0": {}, "O5IOXvH1": {}, "3GYjNTUM": {}}, "longDescription": "CzkdSQE5", "title": "k5Qglmd0"}, "HHcFj5NP": {"description": "vw75wFfC", "localExt": {"GnHet2il": {}, "F0n5EPxb": {}, "0fx8u9jO": {}}, "longDescription": "AqoM353S", "title": "aM2hQdtK"}}, "name": "FISyhAcL"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateView \
    --namespace $AB_NAMESPACE \
    --storeId 'zV2oJ5sC' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 302 'CreateView' test.out

#- 303 GetView
$CLI_EXE \
    --sn platform \
    --op GetView \
    --namespace $AB_NAMESPACE \
    --viewId 'uLj4npXm' \
    --storeId 'hIwGvFsr' \
    > test.out 2>&1
eval_tap $? 303 'GetView' test.out

#- 304 UpdateView
# body param: body
echo '{"displayOrder": 71, "localizations": {"OKDkP8os": {"description": "ej0CcdCH", "localExt": {"5kih7UnN": {}, "FxXegCPZ": {}, "TGtyY26b": {}}, "longDescription": "mk03EEY5", "title": "eadpdlza"}, "hDEHoIY9": {"description": "nLWNuS0F", "localExt": {"VZGU9Fwv": {}, "tMTK6nZ9": {}, "Ky199xjI": {}}, "longDescription": "AoOanDwL", "title": "rHFOosZv"}, "cauOKjG4": {"description": "404p5DHp", "localExt": {"pC9gRrJY": {}, "0AX4OIkn": {}, "a1xGboCM": {}}, "longDescription": "q0ZdGAxy", "title": "MelU5vau"}}, "name": "fBGFjA7R"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateView \
    --namespace $AB_NAMESPACE \
    --viewId 'YJbR5NrM' \
    --storeId 'xyGMeRtJ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 304 'UpdateView' test.out

#- 305 DeleteView
$CLI_EXE \
    --sn platform \
    --op DeleteView \
    --namespace $AB_NAMESPACE \
    --viewId 'Pnn4JEpZ' \
    --storeId '3nyPoc8P' \
    > test.out 2>&1
eval_tap $? 305 'DeleteView' test.out

#- 306 QueryWallets
eval_tap 0 306 'QueryWallets # SKIP deprecated' test.out

#- 307 BulkCredit
# body param: body
echo '[{"creditRequest": {"amount": 16, "expireAt": "1986-03-06T00:00:00Z", "metadata": {"IsSNxXmZ": {}, "OOPL0gGK": {}, "lBsITC9k": {}}, "origin": "System", "reason": "hFAaIPbQ", "source": "IAP"}, "currencyCode": "oN69uY3h", "userIds": ["tlsHaUrq", "tOdAlBKb", "ppFUUEDC"]}, {"creditRequest": {"amount": 15, "expireAt": "1976-12-21T00:00:00Z", "metadata": {"LaGcVTP1": {}, "vdiQGHXo": {}, "l0PMOfXQ": {}}, "origin": "Oculus", "reason": "Hzg9ISlV", "source": "REDEEM_CODE"}, "currencyCode": "ygiD4b1P", "userIds": ["GfQxXABb", "fEXCjQlk", "MYKOJLnw"]}, {"creditRequest": {"amount": 91, "expireAt": "1974-04-09T00:00:00Z", "metadata": {"ycJOB4hK": {}, "cXvgx2Zq": {}, "aDA99jal": {}}, "origin": "System", "reason": "OU525IwQ", "source": "REFERRAL_BONUS"}, "currencyCode": "1PnM02Rn", "userIds": ["9ix4yD51", "WMjRBIq1", "jodulSx9"]}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op BulkCredit \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 307 'BulkCredit' test.out

#- 308 BulkDebit
# body param: body
echo '[{"currencyCode": "erocdKxT", "request": {"allowOverdraft": true, "amount": 98, "balanceOrigin": "Oculus", "balanceSource": "PAYMENT", "metadata": {"GF8U5cQ1": {}, "BfErEQgy": {}, "qKEBfeLQ": {}}, "reason": "2V0Q1eyU"}, "userIds": ["2k7lKk4C", "zcqSUexi", "vlssTQDo"]}, {"currencyCode": "TCBUDne6", "request": {"allowOverdraft": true, "amount": 6, "balanceOrigin": "Oculus", "balanceSource": "IAP_REVOCATION", "metadata": {"IoozA4z0": {}, "cRJsq8E1": {}, "aE4C9gIa": {}}, "reason": "SNgEKh9W"}, "userIds": ["Jkhj5WId", "dJWDA7n5", "J9exXN2N"]}, {"currencyCode": "kQh4GvC8", "request": {"allowOverdraft": false, "amount": 81, "balanceOrigin": "Nintendo", "balanceSource": "IAP_REVOCATION", "metadata": {"ZWl4bYE6": {}, "dsCviqTO": {}, "6YCwk5sP": {}}, "reason": "ioCeuVG2"}, "userIds": ["DFhoTYZu", "HVKDwT9j", "8UyYy7rg"]}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op BulkDebit \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 308 'BulkDebit' test.out

#- 309 GetWallet
eval_tap 0 309 'GetWallet # SKIP deprecated' test.out

#- 310 SyncOrders
$CLI_EXE \
    --sn platform \
    --op SyncOrders \
    --nextEvaluatedKey '3gMdckKE' \
    --end '2B8YBjRd' \
    --start 'xTO3SIa6' \
    > test.out 2>&1
eval_tap $? 310 'SyncOrders' test.out

#- 311 TestAdyenConfig
# body param: body
echo '{"allowedPaymentMethods": ["tlandSTC", "q0EJV1Py", "hEQeQyc6"], "apiKey": "YTF69jSU", "authoriseAsCapture": true, "blockedPaymentMethods": ["jTl0saCW", "5sATNIKl", "16Cg92vS"], "clientKey": "VE6taSWa", "dropInSettings": "n4FyUKjn", "liveEndpointUrlPrefix": "kaw9st7q", "merchantAccount": "DabuES8s", "notificationHmacKey": "xg8dLhZM", "notificationPassword": "MsGrVxKc", "notificationUsername": "CxeJCwvB", "returnUrl": "viFz7ze7", "settings": "KtJKsOIk"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestAdyenConfig \
    --sandbox 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 311 'TestAdyenConfig' test.out

#- 312 TestAliPayConfig
# body param: body
echo '{"appId": "oRZ09hsC", "privateKey": "GUdKYI97", "publicKey": "9HOCPdr8", "returnUrl": "F8MU50De"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestAliPayConfig \
    --sandbox 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 312 'TestAliPayConfig' test.out

#- 313 TestCheckoutConfig
# body param: body
echo '{"publicKey": "Syx8bKv1", "secretKey": "Nw2kdisL"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestCheckoutConfig \
    --sandbox 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 313 'TestCheckoutConfig' test.out

#- 314 DebugMatchedPaymentMerchantConfig
$CLI_EXE \
    --sn platform \
    --op DebugMatchedPaymentMerchantConfig \
    --namespace_ 'rPmFu54a' \
    --region 'wsSvUoDR' \
    > test.out 2>&1
eval_tap $? 314 'DebugMatchedPaymentMerchantConfig' test.out

#- 315 TestPayPalConfig
# body param: body
echo '{"clientID": "wmSXphdZ", "clientSecret": "Se4okoXH", "returnUrl": "YhKRF2Ef", "webHookId": "d8ZWrtIP"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestPayPalConfig \
    --sandbox 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 315 'TestPayPalConfig' test.out

#- 316 TestStripeConfig
# body param: body
echo '{"allowedPaymentMethodTypes": ["vQpYsu1b", "oZMS7Gi8", "t31H2zx9"], "publishableKey": "y6qEB9Y3", "secretKey": "GKSy4MZz", "webhookSecret": "JZGbQakd"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestStripeConfig \
    --sandbox 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 316 'TestStripeConfig' test.out

#- 317 TestWxPayConfig
# body param: body
echo '{"appId": "GDnVGiLE", "key": "fxtJWRcs", "mchid": "ERSc0N8L", "returnUrl": "6tr0GmkG"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestWxPayConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 317 'TestWxPayConfig' test.out

#- 318 TestXsollaConfig
# body param: body
echo '{"apiKey": "NayHNu2W", "flowCompletionUrl": "Q8dBJIaD", "merchantId": 18, "projectId": 54, "projectSecretKey": "merRZyk3"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestXsollaConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 318 'TestXsollaConfig' test.out

#- 319 GetPaymentMerchantConfig
$CLI_EXE \
    --sn platform \
    --op GetPaymentMerchantConfig \
    --id 'mliE9Gej' \
    > test.out 2>&1
eval_tap $? 319 'GetPaymentMerchantConfig' test.out

#- 320 UpdateAdyenConfig
# body param: body
echo '{"allowedPaymentMethods": ["o5R2MS7p", "SBYV14Sq", "4UWlcnx8"], "apiKey": "jW2hksDd", "authoriseAsCapture": true, "blockedPaymentMethods": ["ZQHcaE3K", "Xsr42nX9", "4miecfCz"], "clientKey": "fk1XmN9B", "dropInSettings": "nIYvqwNR", "liveEndpointUrlPrefix": "5Rbz5dof", "merchantAccount": "LhbVfDuV", "notificationHmacKey": "9BmURSRZ", "notificationPassword": "Wo4UeuMK", "notificationUsername": "vNW8MXBz", "returnUrl": "4eVN1APi", "settings": "XMdRqfLN"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateAdyenConfig \
    --id 'BmnEHnNk' \
    --sandbox 'false' \
    --validate 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 320 'UpdateAdyenConfig' test.out

#- 321 TestAdyenConfigById
$CLI_EXE \
    --sn platform \
    --op TestAdyenConfigById \
    --id '7ZJ6f2I3' \
    --sandbox 'true' \
    > test.out 2>&1
eval_tap $? 321 'TestAdyenConfigById' test.out

#- 322 UpdateAliPayConfig
# body param: body
echo '{"appId": "Dl6wGDD8", "privateKey": "r6t613Gt", "publicKey": "av6A5k2E", "returnUrl": "mtbmtHj2"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateAliPayConfig \
    --id 'Znfkv0VD' \
    --sandbox 'true' \
    --validate 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 322 'UpdateAliPayConfig' test.out

#- 323 TestAliPayConfigById
$CLI_EXE \
    --sn platform \
    --op TestAliPayConfigById \
    --id '9j3mw5Yc' \
    --sandbox 'false' \
    > test.out 2>&1
eval_tap $? 323 'TestAliPayConfigById' test.out

#- 324 UpdateCheckoutConfig
# body param: body
echo '{"publicKey": "XhptJC1A", "secretKey": "BiT46DMG"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCheckoutConfig \
    --id 'D0fHpEYx' \
    --sandbox 'false' \
    --validate 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 324 'UpdateCheckoutConfig' test.out

#- 325 TestCheckoutConfigById
$CLI_EXE \
    --sn platform \
    --op TestCheckoutConfigById \
    --id 'I6RCl4qV' \
    --sandbox 'true' \
    > test.out 2>&1
eval_tap $? 325 'TestCheckoutConfigById' test.out

#- 326 UpdatePayPalConfig
# body param: body
echo '{"clientID": "l0ERogOo", "clientSecret": "GpY2Lryu", "returnUrl": "tLLHILuU", "webHookId": "qG8tV5EL"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePayPalConfig \
    --id 'IHrVKKgl' \
    --sandbox 'true' \
    --validate 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 326 'UpdatePayPalConfig' test.out

#- 327 TestPayPalConfigById
$CLI_EXE \
    --sn platform \
    --op TestPayPalConfigById \
    --id '91EnDYpN' \
    --sandbox 'false' \
    > test.out 2>&1
eval_tap $? 327 'TestPayPalConfigById' test.out

#- 328 UpdateStripeConfig
# body param: body
echo '{"allowedPaymentMethodTypes": ["9NW4bNk9", "9tFPFhnb", "1K9Oa4QJ"], "publishableKey": "2Jr3xoco", "secretKey": "n5PyPsT5", "webhookSecret": "WWmLkohG"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateStripeConfig \
    --id 'XOz1g4t8' \
    --sandbox 'true' \
    --validate 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 328 'UpdateStripeConfig' test.out

#- 329 TestStripeConfigById
$CLI_EXE \
    --sn platform \
    --op TestStripeConfigById \
    --id '2UiW5uXa' \
    --sandbox 'true' \
    > test.out 2>&1
eval_tap $? 329 'TestStripeConfigById' test.out

#- 330 UpdateWxPayConfig
# body param: body
echo '{"appId": "mkASKleS", "key": "geZyjpvK", "mchid": "Azcv5jYL", "returnUrl": "5JdT38f9"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateWxPayConfig \
    --id 'UzJYy0Yv' \
    --validate 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 330 'UpdateWxPayConfig' test.out

#- 331 UpdateWxPayConfigCert
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UpdateWxPayConfigCert \
    --id 'KrcIL9uR' \
    --upload $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 331 'UpdateWxPayConfigCert' test.out

#- 332 TestWxPayConfigById
$CLI_EXE \
    --sn platform \
    --op TestWxPayConfigById \
    --id 'F9KTmGwE' \
    > test.out 2>&1
eval_tap $? 332 'TestWxPayConfigById' test.out

#- 333 UpdateXsollaConfig
# body param: body
echo '{"apiKey": "v4Z242ap", "flowCompletionUrl": "tsBLHujA", "merchantId": 73, "projectId": 6, "projectSecretKey": "bH5POogc"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXsollaConfig \
    --id 'atVKjzwG' \
    --validate 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 333 'UpdateXsollaConfig' test.out

#- 334 TestXsollaConfigById
$CLI_EXE \
    --sn platform \
    --op TestXsollaConfigById \
    --id 'RWymPq1N' \
    > test.out 2>&1
eval_tap $? 334 'TestXsollaConfigById' test.out

#- 335 UpdateXsollaUIConfig
# body param: body
echo '{"device": "MOBILE", "showCloseButton": true, "size": "SMALL", "theme": "DEFAULT_DARK"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXsollaUIConfig \
    --id 'giK7sT18' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 335 'UpdateXsollaUIConfig' test.out

#- 336 QueryPaymentProviderConfig
$CLI_EXE \
    --sn platform \
    --op QueryPaymentProviderConfig \
    --limit '26' \
    --namespace_ 'e5PGzc9r' \
    --offset '98' \
    --region 'n1EOURAA' \
    > test.out 2>&1
eval_tap $? 336 'QueryPaymentProviderConfig' test.out

#- 337 CreatePaymentProviderConfig
# body param: body
echo '{"aggregate": "ADYEN", "namespace": "1CslSJT3", "region": "OLCP72u6", "sandboxTaxJarApiToken": "Uda8Mmt0", "specials": ["XSOLLA", "XSOLLA", "ADYEN"], "taxJarApiToken": "qAGdLjNU", "taxJarEnabled": true, "useGlobalTaxJarApiToken": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreatePaymentProviderConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 337 'CreatePaymentProviderConfig' test.out

#- 338 GetAggregatePaymentProviders
$CLI_EXE \
    --sn platform \
    --op GetAggregatePaymentProviders \
    > test.out 2>&1
eval_tap $? 338 'GetAggregatePaymentProviders' test.out

#- 339 DebugMatchedPaymentProviderConfig
$CLI_EXE \
    --sn platform \
    --op DebugMatchedPaymentProviderConfig \
    --namespace_ 'Cv94mv81' \
    --region 'ImeWEoJY' \
    > test.out 2>&1
eval_tap $? 339 'DebugMatchedPaymentProviderConfig' test.out

#- 340 GetSpecialPaymentProviders
$CLI_EXE \
    --sn platform \
    --op GetSpecialPaymentProviders \
    > test.out 2>&1
eval_tap $? 340 'GetSpecialPaymentProviders' test.out

#- 341 UpdatePaymentProviderConfig
# body param: body
echo '{"aggregate": "XSOLLA", "namespace": "JWKGXK7K", "region": "eoQWL9LZ", "sandboxTaxJarApiToken": "5kupqP3Y", "specials": ["STRIPE", "XSOLLA", "WXPAY"], "taxJarApiToken": "VmMDg3Pf", "taxJarEnabled": true, "useGlobalTaxJarApiToken": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePaymentProviderConfig \
    --id '7FDWupdq' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 341 'UpdatePaymentProviderConfig' test.out

#- 342 DeletePaymentProviderConfig
$CLI_EXE \
    --sn platform \
    --op DeletePaymentProviderConfig \
    --id 'FBwe6D8V' \
    > test.out 2>&1
eval_tap $? 342 'DeletePaymentProviderConfig' test.out

#- 343 GetPaymentTaxConfig
$CLI_EXE \
    --sn platform \
    --op GetPaymentTaxConfig \
    > test.out 2>&1
eval_tap $? 343 'GetPaymentTaxConfig' test.out

#- 344 UpdatePaymentTaxConfig
# body param: body
echo '{"sandboxTaxJarApiToken": "ibkO6d2I", "taxJarApiToken": "xGjOG4PE", "taxJarEnabled": true, "taxJarProductCodesMapping": {"mX8qtGsL": "IrfTODy6", "K3Qbfier": "CCFLMxaX", "90g4NTse": "G35T7jXs"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePaymentTaxConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 344 'UpdatePaymentTaxConfig' test.out

#- 345 SyncPaymentOrders
$CLI_EXE \
    --sn platform \
    --op SyncPaymentOrders \
    --nextEvaluatedKey '9U1wO6yM' \
    --end 'SomyU8wi' \
    --start 'p3fAySp3' \
    > test.out 2>&1
eval_tap $? 345 'SyncPaymentOrders' test.out

#- 346 PublicGetRootCategories
$CLI_EXE \
    --sn platform \
    --op PublicGetRootCategories \
    --namespace $AB_NAMESPACE \
    --language 'laNzkrm4' \
    --storeId 'cJr4i0ex' \
    > test.out 2>&1
eval_tap $? 346 'PublicGetRootCategories' test.out

#- 347 DownloadCategories
$CLI_EXE \
    --sn platform \
    --op DownloadCategories \
    --namespace $AB_NAMESPACE \
    --language 'LOr9vO1P' \
    --storeId 'gFfgE8In' \
    > test.out 2>&1
eval_tap $? 347 'DownloadCategories' test.out

#- 348 PublicGetCategory
$CLI_EXE \
    --sn platform \
    --op PublicGetCategory \
    --categoryPath 'WNuVOzTX' \
    --namespace $AB_NAMESPACE \
    --language 'y9qs3kTa' \
    --storeId 'iuz7ctJy' \
    > test.out 2>&1
eval_tap $? 348 'PublicGetCategory' test.out

#- 349 PublicGetChildCategories
$CLI_EXE \
    --sn platform \
    --op PublicGetChildCategories \
    --categoryPath 'Y4RWJKox' \
    --namespace $AB_NAMESPACE \
    --language 'o4nV8XQd' \
    --storeId 'xPgUakhr' \
    > test.out 2>&1
eval_tap $? 349 'PublicGetChildCategories' test.out

#- 350 PublicGetDescendantCategories
$CLI_EXE \
    --sn platform \
    --op PublicGetDescendantCategories \
    --categoryPath 'sVa6fMGK' \
    --namespace $AB_NAMESPACE \
    --language 'yYIdy9cz' \
    --storeId 'ZeCSndcW' \
    > test.out 2>&1
eval_tap $? 350 'PublicGetDescendantCategories' test.out

#- 351 PublicListCurrencies
$CLI_EXE \
    --sn platform \
    --op PublicListCurrencies \
    --namespace $AB_NAMESPACE \
    --currencyType 'VIRTUAL' \
    > test.out 2>&1
eval_tap $? 351 'PublicListCurrencies' test.out

#- 352 GeDLCDurableRewardShortMap
$CLI_EXE \
    --sn platform \
    --op GeDLCDurableRewardShortMap \
    --namespace $AB_NAMESPACE \
    --dlcType 'EPICGAMES' \
    > test.out 2>&1
eval_tap $? 352 'GeDLCDurableRewardShortMap' test.out

#- 353 GetIAPItemMapping
$CLI_EXE \
    --sn platform \
    --op GetIAPItemMapping \
    --namespace $AB_NAMESPACE \
    --platform 'STADIA' \
    > test.out 2>&1
eval_tap $? 353 'GetIAPItemMapping' test.out

#- 354 PublicGetItemByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetItemByAppId \
    --namespace $AB_NAMESPACE \
    --language 'dNxPIelG' \
    --region '63GRoF1J' \
    --storeId 'TTxDzwLd' \
    --appId 'mY6Irozw' \
    > test.out 2>&1
eval_tap $? 354 'PublicGetItemByAppId' test.out

#- 355 PublicQueryItems
$CLI_EXE \
    --sn platform \
    --op PublicQueryItems \
    --namespace $AB_NAMESPACE \
    --appType 'DLC' \
    --autoCalcEstimatedPrice 'false' \
    --baseAppId '86zosv79' \
    --categoryPath '0yPDGPRA' \
    --features 'OY99nPSE' \
    --includeSubCategoryItem 'false' \
    --itemType 'EXTENSION' \
    --language 'RL6X8C9l' \
    --limit '53' \
    --offset '50' \
    --region 'w5lQvLqT' \
    --sortBy '["createdAt", "createdAt:desc"]' \
    --storeId 'O6qy8GxA' \
    --tags 'q88ElXpf' \
    > test.out 2>&1
eval_tap $? 355 'PublicQueryItems' test.out

#- 356 PublicGetItemBySku
$CLI_EXE \
    --sn platform \
    --op PublicGetItemBySku \
    --namespace $AB_NAMESPACE \
    --autoCalcEstimatedPrice 'true' \
    --language 'IselltN6' \
    --region 'JpKuxvor' \
    --storeId 'oRUy3ljn' \
    --sku 'vEXAaLSA' \
    > test.out 2>&1
eval_tap $? 356 'PublicGetItemBySku' test.out

#- 357 PublicGetEstimatedPrice
$CLI_EXE \
    --sn platform \
    --op PublicGetEstimatedPrice \
    --namespace $AB_NAMESPACE \
    --region 'uFM6Vv3h' \
    --storeId 'hG59rmO4' \
    --itemIds 'CorxqKpq' \
    > test.out 2>&1
eval_tap $? 357 'PublicGetEstimatedPrice' test.out

#- 358 PublicBulkGetItems
$CLI_EXE \
    --sn platform \
    --op PublicBulkGetItems \
    --namespace $AB_NAMESPACE \
    --autoCalcEstimatedPrice 'false' \
    --language '4fkY1xQq' \
    --region 'NcKrZWI1' \
    --storeId 'iWake27p' \
    --itemIds 'IJEZLV1f' \
    > test.out 2>&1
eval_tap $? 358 'PublicBulkGetItems' test.out

#- 359 PublicValidateItemPurchaseCondition
# body param: body
echo '{"itemIds": ["o8MKPLn4", "TLo6CDWZ", "Tzega6bE"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicValidateItemPurchaseCondition \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 359 'PublicValidateItemPurchaseCondition' test.out

#- 360 PublicSearchItems
$CLI_EXE \
    --sn platform \
    --op PublicSearchItems \
    --namespace $AB_NAMESPACE \
    --autoCalcEstimatedPrice 'false' \
    --itemType 'OPTIONBOX' \
    --limit '69' \
    --offset '1' \
    --region '4nt94UVH' \
    --storeId 'RQlHlUSQ' \
    --keyword 'SKXkucWa' \
    --language 'ToJaOs8i' \
    > test.out 2>&1
eval_tap $? 360 'PublicSearchItems' test.out

#- 361 PublicGetApp
$CLI_EXE \
    --sn platform \
    --op PublicGetApp \
    --itemId 'CAqsnxlM' \
    --namespace $AB_NAMESPACE \
    --language 'AKk2F3cF' \
    --region 'c9iBVI88' \
    --storeId 'Ei9YwbHr' \
    > test.out 2>&1
eval_tap $? 361 'PublicGetApp' test.out

#- 362 PublicGetItemDynamicData
$CLI_EXE \
    --sn platform \
    --op PublicGetItemDynamicData \
    --itemId 'zm7PSG45' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 362 'PublicGetItemDynamicData' test.out

#- 363 PublicGetItem
$CLI_EXE \
    --sn platform \
    --op PublicGetItem \
    --itemId 'mUYV0ngq' \
    --namespace $AB_NAMESPACE \
    --autoCalcEstimatedPrice 'true' \
    --language 'VFRlh6Dc' \
    --populateBundle 'false' \
    --region 'agBy1MH6' \
    --storeId 'Go33j6dw' \
    > test.out 2>&1
eval_tap $? 363 'PublicGetItem' test.out

#- 364 GetPaymentCustomization
eval_tap 0 364 'GetPaymentCustomization # SKIP deprecated' test.out

#- 365 PublicGetPaymentUrl
# body param: body
echo '{"paymentOrderNo": "6rGWEXll", "paymentProvider": "XSOLLA", "returnUrl": "aHwRN0Ca", "ui": "sa3iv4LT", "zipCode": "JJk6nkEk"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicGetPaymentUrl \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 365 'PublicGetPaymentUrl' test.out

#- 366 PublicGetPaymentMethods
$CLI_EXE \
    --sn platform \
    --op PublicGetPaymentMethods \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'kMwmM6r1' \
    > test.out 2>&1
eval_tap $? 366 'PublicGetPaymentMethods' test.out

#- 367 PublicGetUnpaidPaymentOrder
$CLI_EXE \
    --sn platform \
    --op PublicGetUnpaidPaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'EERKnlrn' \
    > test.out 2>&1
eval_tap $? 367 'PublicGetUnpaidPaymentOrder' test.out

#- 368 Pay
# body param: body
echo '{"token": "oHypYATJ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op Pay \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'CaOLCtVW' \
    --paymentProvider 'ADYEN' \
    --zipCode 'DIxfsrlw' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 368 'Pay' test.out

#- 369 PublicCheckPaymentOrderPaidStatus
$CLI_EXE \
    --sn platform \
    --op PublicCheckPaymentOrderPaidStatus \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'mF2HmpcC' \
    > test.out 2>&1
eval_tap $? 369 'PublicCheckPaymentOrderPaidStatus' test.out

#- 370 GetPaymentPublicConfig
$CLI_EXE \
    --sn platform \
    --op GetPaymentPublicConfig \
    --namespace $AB_NAMESPACE \
    --sandbox 'true' \
    --paymentProvider 'WXPAY' \
    --region '2uBHQWfb' \
    > test.out 2>&1
eval_tap $? 370 'GetPaymentPublicConfig' test.out

#- 371 PublicGetQRCode
$CLI_EXE \
    --sn platform \
    --op PublicGetQRCode \
    --namespace $AB_NAMESPACE \
    --code 'XICUJpaJ' \
    > test.out 2>&1
eval_tap $? 371 'PublicGetQRCode' test.out

#- 372 PublicNormalizePaymentReturnUrl
$CLI_EXE \
    --sn platform \
    --op PublicNormalizePaymentReturnUrl \
    --namespace $AB_NAMESPACE \
    --payerID '1JkXNDkv' \
    --foreinginvoice 'ykCRwNKX' \
    --invoiceId 'h4eDk1RG' \
    --payload 'fZUycn9c' \
    --redirectResult 'PNArz1pz' \
    --resultCode 'gWaEhC4z' \
    --sessionId 'jIM78avO' \
    --status '7w2ZteZL' \
    --token 'Z7GTi3e9' \
    --type 'oDoEIGO4' \
    --userId '7WP0zLRu' \
    --orderNo 'M0m0OI24' \
    --paymentOrderNo '6smcCfI0' \
    --paymentProvider 'ALIPAY' \
    --returnUrl 'AoHbgEVr' \
    > test.out 2>&1
eval_tap $? 372 'PublicNormalizePaymentReturnUrl' test.out

#- 373 GetPaymentTaxValue
$CLI_EXE \
    --sn platform \
    --op GetPaymentTaxValue \
    --namespace $AB_NAMESPACE \
    --zipCode 'I4IEVm2t' \
    --paymentOrderNo '46juiSKf' \
    --paymentProvider 'XSOLLA' \
    > test.out 2>&1
eval_tap $? 373 'GetPaymentTaxValue' test.out

#- 374 GetRewardByCode
$CLI_EXE \
    --sn platform \
    --op GetRewardByCode \
    --namespace $AB_NAMESPACE \
    --rewardCode 'Zn9QBCqi' \
    > test.out 2>&1
eval_tap $? 374 'GetRewardByCode' test.out

#- 375 QueryRewards1
$CLI_EXE \
    --sn platform \
    --op QueryRewards1 \
    --namespace $AB_NAMESPACE \
    --eventTopic 'NGJVKxd7' \
    --limit '55' \
    --offset '26' \
    --sortBy '["rewardCode:asc", "rewardCode"]' \
    > test.out 2>&1
eval_tap $? 375 'QueryRewards1' test.out

#- 376 GetReward1
$CLI_EXE \
    --sn platform \
    --op GetReward1 \
    --namespace $AB_NAMESPACE \
    --rewardId 'va3cbi4O' \
    > test.out 2>&1
eval_tap $? 376 'GetReward1' test.out

#- 377 PublicListStores
$CLI_EXE \
    --sn platform \
    --op PublicListStores \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 377 'PublicListStores' test.out

#- 378 PublicExistsAnyMyActiveEntitlement
$CLI_EXE \
    --sn platform \
    --op PublicExistsAnyMyActiveEntitlement \
    --namespace $AB_NAMESPACE \
    --appIds '["ijtRmo8X", "sQbcfF84", "z2qQ1xqf"]' \
    --itemIds '["Ud4xY4nM", "hrw2r6G2", "OhDj0vvy"]' \
    --skus '["WJr5uKuc", "6kBqM3xd", "xfVQJrtJ"]' \
    > test.out 2>&1
eval_tap $? 378 'PublicExistsAnyMyActiveEntitlement' test.out

#- 379 PublicGetMyAppEntitlementOwnershipByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetMyAppEntitlementOwnershipByAppId \
    --namespace $AB_NAMESPACE \
    --appId 'S3ZfN2oB' \
    > test.out 2>&1
eval_tap $? 379 'PublicGetMyAppEntitlementOwnershipByAppId' test.out

#- 380 PublicGetMyEntitlementOwnershipByItemId
$CLI_EXE \
    --sn platform \
    --op PublicGetMyEntitlementOwnershipByItemId \
    --namespace $AB_NAMESPACE \
    --entitlementClazz 'OPTIONBOX' \
    --itemId 'eHNcPaiE' \
    > test.out 2>&1
eval_tap $? 380 'PublicGetMyEntitlementOwnershipByItemId' test.out

#- 381 PublicGetMyEntitlementOwnershipBySku
$CLI_EXE \
    --sn platform \
    --op PublicGetMyEntitlementOwnershipBySku \
    --namespace $AB_NAMESPACE \
    --entitlementClazz 'ENTITLEMENT' \
    --sku 'j3Eloo5m' \
    > test.out 2>&1
eval_tap $? 381 'PublicGetMyEntitlementOwnershipBySku' test.out

#- 382 PublicGetEntitlementOwnershipToken
$CLI_EXE \
    --sn platform \
    --op PublicGetEntitlementOwnershipToken \
    --namespace $AB_NAMESPACE \
    --appIds '["mvs2lUEE", "rji7xojl", "WfkFqpbz"]' \
    --itemIds '["3A5f3jEq", "pCIxmJ7G", "jkEh9eZE"]' \
    --skus '["BiGo3I3p", "Iqviy10i", "VSYuFTDs"]' \
    > test.out 2>&1
eval_tap $? 382 'PublicGetEntitlementOwnershipToken' test.out

#- 383 SyncTwitchDropsEntitlement
# body param: body
echo '{"gameId": "JdXAg3av", "language": "YU_Jxwk", "region": "ALPGnyGB"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncTwitchDropsEntitlement \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 383 'SyncTwitchDropsEntitlement' test.out

#- 384 PublicGetMyWallet
$CLI_EXE \
    --sn platform \
    --op PublicGetMyWallet \
    --currencyCode 'uy1CdWOh' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 384 'PublicGetMyWallet' test.out

#- 385 SyncEpicGameDLC
# body param: body
echo '{"epicGamesJwtToken": "BgRVbmgI"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncEpicGameDLC \
    --namespace $AB_NAMESPACE \
    --userId 'gBUxyss9' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 385 'SyncEpicGameDLC' test.out

#- 386 SyncOculusDLC
$CLI_EXE \
    --sn platform \
    --op SyncOculusDLC \
    --namespace $AB_NAMESPACE \
    --userId 'nSpAkAdl' \
    > test.out 2>&1
eval_tap $? 386 'SyncOculusDLC' test.out

#- 387 PublicSyncPsnDlcInventory
# body param: body
echo '{"serviceLabel": 66}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicSyncPsnDlcInventory \
    --namespace $AB_NAMESPACE \
    --userId 'KnIkwDYv' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 387 'PublicSyncPsnDlcInventory' test.out

#- 388 PublicSyncPsnDlcInventoryWithMultipleServiceLabels
# body param: body
echo '{"serviceLabels": [64, 2, 85]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicSyncPsnDlcInventoryWithMultipleServiceLabels \
    --namespace $AB_NAMESPACE \
    --userId 'bokDBYYX' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 388 'PublicSyncPsnDlcInventoryWithMultipleServiceLabels' test.out

#- 389 SyncSteamDLC
# body param: body
echo '{"appId": "BveEkIep", "steamId": "VDCCGiV4"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncSteamDLC \
    --namespace $AB_NAMESPACE \
    --userId 'kCbmaNGd' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 389 'SyncSteamDLC' test.out

#- 390 SyncXboxDLC
# body param: body
echo '{"xstsToken": "MVTDgk2C"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncXboxDLC \
    --namespace $AB_NAMESPACE \
    --userId 'cu0S3HcF' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 390 'SyncXboxDLC' test.out

#- 391 PublicQueryUserEntitlements
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserEntitlements \
    --namespace $AB_NAMESPACE \
    --userId 'KN8eNSLi' \
    --appType 'GAME' \
    --entitlementClazz 'MEDIA' \
    --entitlementName 'LEZPYAH1' \
    --features '["kQ3oQjIq", "IRUBDgn0", "DKLjCeeu"]' \
    --itemId '["sdo5AfgB", "es7QyTGO", "QkIdRRbB"]' \
    --limit '12' \
    --offset '22' \
    > test.out 2>&1
eval_tap $? 391 'PublicQueryUserEntitlements' test.out

#- 392 PublicGetUserAppEntitlementByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetUserAppEntitlementByAppId \
    --namespace $AB_NAMESPACE \
    --userId 'Xqyv3be2' \
    --appId 'nuq8sIJj' \
    > test.out 2>&1
eval_tap $? 392 'PublicGetUserAppEntitlementByAppId' test.out

#- 393 PublicQueryUserEntitlementsByAppType
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserEntitlementsByAppType \
    --namespace $AB_NAMESPACE \
    --userId 'FEchdOeh' \
    --limit '94' \
    --offset '73' \
    --appType 'DEMO' \
    > test.out 2>&1
eval_tap $? 393 'PublicQueryUserEntitlementsByAppType' test.out

#- 394 PublicGetUserEntitlementByItemId
eval_tap 0 394 'PublicGetUserEntitlementByItemId # SKIP deprecated' test.out

#- 395 PublicGetUserEntitlementBySku
eval_tap 0 395 'PublicGetUserEntitlementBySku # SKIP deprecated' test.out

#- 396 PublicExistsAnyUserActiveEntitlement
$CLI_EXE \
    --sn platform \
    --op PublicExistsAnyUserActiveEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'ZiToTAuz' \
    --appIds '["k3867Mhw", "iPI5YOuc", "TnHNEYvj"]' \
    --itemIds '["ggvdUqr7", "Lh4rGdMI", "N3VYmvI6"]' \
    --skus '["GwtIid2Z", "eLXlJDeg", "GsAV5A2I"]' \
    > test.out 2>&1
eval_tap $? 396 'PublicExistsAnyUserActiveEntitlement' test.out

#- 397 PublicGetUserAppEntitlementOwnershipByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetUserAppEntitlementOwnershipByAppId \
    --namespace $AB_NAMESPACE \
    --userId 'YihSaUg0' \
    --appId 'okHZW2cB' \
    > test.out 2>&1
eval_tap $? 397 'PublicGetUserAppEntitlementOwnershipByAppId' test.out

#- 398 PublicGetUserEntitlementOwnershipByItemId
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementOwnershipByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'h1nRqC7m' \
    --entitlementClazz 'ENTITLEMENT' \
    --itemId 'rRAROA9S' \
    > test.out 2>&1
eval_tap $? 398 'PublicGetUserEntitlementOwnershipByItemId' test.out

#- 399 PublicGetUserEntitlementOwnershipByItemIds
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementOwnershipByItemIds \
    --namespace $AB_NAMESPACE \
    --userId 'wb80IbbP' \
    --ids '["yoW8t8Wo", "rOXJxiR4", "u60LgZmu"]' \
    > test.out 2>&1
eval_tap $? 399 'PublicGetUserEntitlementOwnershipByItemIds' test.out

#- 400 PublicGetUserEntitlementOwnershipBySku
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementOwnershipBySku \
    --namespace $AB_NAMESPACE \
    --userId 'oH1Qrmff' \
    --entitlementClazz 'ENTITLEMENT' \
    --sku 'kqOyp8Cq' \
    > test.out 2>&1
eval_tap $? 400 'PublicGetUserEntitlementOwnershipBySku' test.out

#- 401 PublicGetUserEntitlement
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlement \
    --entitlementId 'R0tpKcrx' \
    --namespace $AB_NAMESPACE \
    --userId 'gH5V1VmX' \
    > test.out 2>&1
eval_tap $? 401 'PublicGetUserEntitlement' test.out

#- 402 PublicConsumeUserEntitlement
# body param: body
echo '{"options": ["ymrQCXsx", "STSgio8A", "K4PvV8Kc"], "requestId": "KUolQK9O", "useCount": 43}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicConsumeUserEntitlement \
    --entitlementId 'PJYbONJ7' \
    --namespace $AB_NAMESPACE \
    --userId 'vWpUL5bB' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 402 'PublicConsumeUserEntitlement' test.out

#- 403 PublicSellUserEntitlement
# body param: body
echo '{"requestId": "AX1NsCvA", "useCount": 43}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicSellUserEntitlement \
    --entitlementId 'OeVpn7A7' \
    --namespace $AB_NAMESPACE \
    --userId '0ZXL4cmR' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 403 'PublicSellUserEntitlement' test.out

#- 404 PublicRedeemCode
# body param: body
echo '{"code": "qWsCRvvR", "language": "LEF", "region": "DYRQeaaZ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicRedeemCode \
    --namespace $AB_NAMESPACE \
    --userId 'WJq2vZPx' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 404 'PublicRedeemCode' test.out

#- 405 PublicFulfillAppleIAPItem
# body param: body
echo '{"excludeOldTransactions": false, "language": "pcHV_NGss", "productId": "F7LjEpic", "receiptData": "kKF0P2SZ", "region": "tS4t1jeQ", "transactionId": "S6lKOru3"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicFulfillAppleIAPItem \
    --namespace $AB_NAMESPACE \
    --userId 'ODFgfPRa' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 405 'PublicFulfillAppleIAPItem' test.out

#- 406 SyncEpicGamesInventory
# body param: body
echo '{"epicGamesJwtToken": "Hk3dHRy7"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncEpicGamesInventory \
    --namespace $AB_NAMESPACE \
    --userId 'uKbkDZXM' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 406 'SyncEpicGamesInventory' test.out

#- 407 PublicFulfillGoogleIAPItem
# body param: body
echo '{"autoAck": true, "language": "csj", "orderId": "iEEvQyu1", "packageName": "cAIa6LxM", "productId": "P477mD01", "purchaseTime": 22, "purchaseToken": "2o0Kxs0P", "region": "Mrt0h3kT"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicFulfillGoogleIAPItem \
    --namespace $AB_NAMESPACE \
    --userId 'gau9CtGp' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 407 'PublicFulfillGoogleIAPItem' test.out

#- 408 SyncOculusConsumableEntitlements
$CLI_EXE \
    --sn platform \
    --op SyncOculusConsumableEntitlements \
    --namespace $AB_NAMESPACE \
    --userId 'YqLrbopE' \
    > test.out 2>&1
eval_tap $? 408 'SyncOculusConsumableEntitlements' test.out

#- 409 PublicReconcilePlayStationStore
# body param: body
echo '{"currencyCode": "r5sGQ5s5", "price": 0.3889636760847863, "productId": "dtyLs8dN", "serviceLabel": 13}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicReconcilePlayStationStore \
    --namespace $AB_NAMESPACE \
    --userId 'PwwXO2Tk' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 409 'PublicReconcilePlayStationStore' test.out

#- 410 PublicReconcilePlayStationStoreWithMultipleServiceLabels
# body param: body
echo '{"currencyCode": "CY9VHaHE", "price": 0.9786034697725549, "productId": "ZJlOx93p", "serviceLabels": [99, 72, 3]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicReconcilePlayStationStoreWithMultipleServiceLabels \
    --namespace $AB_NAMESPACE \
    --userId '4cOUnnIo' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 410 'PublicReconcilePlayStationStoreWithMultipleServiceLabels' test.out

#- 411 SyncSteamInventory
# body param: body
echo '{"appId": "oK1anF3v", "currencyCode": "vEM7dqzw", "language": "cXR-VDPi", "price": 0.09034776012738488, "productId": "9DUvJNX9", "region": "0ISIZVWk", "steamId": "Z4vm5XUG"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncSteamInventory \
    --namespace $AB_NAMESPACE \
    --userId 'XSXzdIjK' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 411 'SyncSteamInventory' test.out

#- 412 SyncTwitchDropsEntitlement1
# body param: body
echo '{"gameId": "AfUHuOsr", "language": "dPcp-wg", "region": "6PiUiwIp"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncTwitchDropsEntitlement1 \
    --namespace $AB_NAMESPACE \
    --userId 'nVG686d3' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 412 'SyncTwitchDropsEntitlement1' test.out

#- 413 SyncXboxInventory
# body param: body
echo '{"currencyCode": "UfRccdHz", "price": 0.1545229010024496, "productId": "qzS9YOAZ", "xstsToken": "dtdFPxgN"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncXboxInventory \
    --namespace $AB_NAMESPACE \
    --userId '6CB6oThD' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 413 'SyncXboxInventory' test.out

#- 414 PublicQueryUserOrders
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserOrders \
    --namespace $AB_NAMESPACE \
    --userId 'xdgw8nI3' \
    --itemId 'F6AeNgU8' \
    --limit '56' \
    --offset '10' \
    --status 'FULFILL_FAILED' \
    > test.out 2>&1
eval_tap $? 414 'PublicQueryUserOrders' test.out

#- 415 PublicCreateUserOrder
# body param: body
echo '{"currencyCode": "7uCmmQrV", "discountedPrice": 85, "ext": {"uAJxyUTZ": {}, "GOFBHBK0": {}, "rWbL657C": {}}, "itemId": "n6nM138M", "language": "IA-Sz", "price": 26, "quantity": 6, "region": "DAki27U6", "returnUrl": "j8DMbvCS", "sectionId": "AL4zSORY"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicCreateUserOrder \
    --namespace $AB_NAMESPACE \
    --userId 'soaBWFBd' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 415 'PublicCreateUserOrder' test.out

#- 416 PublicGetUserOrder
$CLI_EXE \
    --sn platform \
    --op PublicGetUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo '0avjwBtL' \
    --userId 's6tdMdZ0' \
    > test.out 2>&1
eval_tap $? 416 'PublicGetUserOrder' test.out

#- 417 PublicCancelUserOrder
$CLI_EXE \
    --sn platform \
    --op PublicCancelUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'G07lMY4F' \
    --userId 'm9rDvMhe' \
    > test.out 2>&1
eval_tap $? 417 'PublicCancelUserOrder' test.out

#- 418 PublicGetUserOrderHistories
$CLI_EXE \
    --sn platform \
    --op PublicGetUserOrderHistories \
    --namespace $AB_NAMESPACE \
    --orderNo 'PzO20yzr' \
    --userId '1c5IegFP' \
    > test.out 2>&1
eval_tap $? 418 'PublicGetUserOrderHistories' test.out

#- 419 PublicDownloadUserOrderReceipt
$CLI_EXE \
    --sn platform \
    --op PublicDownloadUserOrderReceipt \
    --namespace $AB_NAMESPACE \
    --orderNo 'Mo05jBBC' \
    --userId 'MgJ3kLEb' \
    > test.out 2>&1
eval_tap $? 419 'PublicDownloadUserOrderReceipt' test.out

#- 420 PublicGetPaymentAccounts
$CLI_EXE \
    --sn platform \
    --op PublicGetPaymentAccounts \
    --namespace $AB_NAMESPACE \
    --userId 'rNuPUXJK' \
    > test.out 2>&1
eval_tap $? 420 'PublicGetPaymentAccounts' test.out

#- 421 PublicDeletePaymentAccount
$CLI_EXE \
    --sn platform \
    --op PublicDeletePaymentAccount \
    --id 'B8eUozgJ' \
    --namespace $AB_NAMESPACE \
    --type 'paypal' \
    --userId 'GWguCKfq' \
    > test.out 2>&1
eval_tap $? 421 'PublicDeletePaymentAccount' test.out

#- 422 PublicListActiveSections
$CLI_EXE \
    --sn platform \
    --op PublicListActiveSections \
    --namespace $AB_NAMESPACE \
    --userId 'yEE5XqgD' \
    --autoCalcEstimatedPrice 'false' \
    --language 'xPwHiac4' \
    --region 'EKUCdQo9' \
    --storeId 'Iv5JQnnM' \
    --viewId 'SI5FehTf' \
    > test.out 2>&1
eval_tap $? 422 'PublicListActiveSections' test.out

#- 423 PublicQueryUserSubscriptions
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserSubscriptions \
    --namespace $AB_NAMESPACE \
    --userId '9MRqPWda' \
    --chargeStatus 'CHARGED' \
    --itemId 'koYR12z6' \
    --limit '22' \
    --offset '84' \
    --sku 'XzCbqzwz' \
    --status 'EXPIRED' \
    --subscribedBy 'PLATFORM' \
    > test.out 2>&1
eval_tap $? 423 'PublicQueryUserSubscriptions' test.out

#- 424 PublicSubscribeSubscription
# body param: body
echo '{"currencyCode": "2XbYF4U6", "itemId": "UOXqXJZP", "language": "MER-GHid-hp", "region": "poCbk0IO", "returnUrl": "kaKkIpRC", "source": "Sn7qe036"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicSubscribeSubscription \
    --namespace $AB_NAMESPACE \
    --userId 'VcWXlKMv' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 424 'PublicSubscribeSubscription' test.out

#- 425 PublicCheckUserSubscriptionSubscribableByItemId
$CLI_EXE \
    --sn platform \
    --op PublicCheckUserSubscriptionSubscribableByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'WbpJXSTv' \
    --itemId 'eDNOd1WY' \
    > test.out 2>&1
eval_tap $? 425 'PublicCheckUserSubscriptionSubscribableByItemId' test.out

#- 426 PublicGetUserSubscription
$CLI_EXE \
    --sn platform \
    --op PublicGetUserSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'aSKZqfmc' \
    --userId '1fkExOtt' \
    > test.out 2>&1
eval_tap $? 426 'PublicGetUserSubscription' test.out

#- 427 PublicChangeSubscriptionBillingAccount
$CLI_EXE \
    --sn platform \
    --op PublicChangeSubscriptionBillingAccount \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'v2kJY5pM' \
    --userId '3K7bz5lx' \
    > test.out 2>&1
eval_tap $? 427 'PublicChangeSubscriptionBillingAccount' test.out

#- 428 PublicCancelSubscription
# body param: body
echo '{"immediate": false, "reason": "Y1xEprpZ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicCancelSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'zgpNGXWK' \
    --userId 'kErubpG4' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 428 'PublicCancelSubscription' test.out

#- 429 PublicGetUserSubscriptionBillingHistories
$CLI_EXE \
    --sn platform \
    --op PublicGetUserSubscriptionBillingHistories \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'BjDCpb8v' \
    --userId 'AzYJvgo6' \
    --excludeFree 'false' \
    --limit '95' \
    --offset '34' \
    > test.out 2>&1
eval_tap $? 429 'PublicGetUserSubscriptionBillingHistories' test.out

#- 430 PublicListViews
$CLI_EXE \
    --sn platform \
    --op PublicListViews \
    --namespace $AB_NAMESPACE \
    --userId 'i6qwCUnG' \
    --language 'BKFhG22r' \
    --storeId 'yPDl4R2r' \
    > test.out 2>&1
eval_tap $? 430 'PublicListViews' test.out

#- 431 PublicGetWallet
$CLI_EXE \
    --sn platform \
    --op PublicGetWallet \
    --currencyCode 'Yfd2ZXTA' \
    --namespace $AB_NAMESPACE \
    --userId 'iPohJnH4' \
    > test.out 2>&1
eval_tap $? 431 'PublicGetWallet' test.out

#- 432 PublicListUserWalletTransactions
$CLI_EXE \
    --sn platform \
    --op PublicListUserWalletTransactions \
    --currencyCode 'taXphUMJ' \
    --namespace $AB_NAMESPACE \
    --userId 'vQfkD3Di' \
    --limit '94' \
    --offset '57' \
    > test.out 2>&1
eval_tap $? 432 'PublicListUserWalletTransactions' test.out

#- 433 QueryItems1
$CLI_EXE \
    --sn platform \
    --op QueryItems1 \
    --namespace $AB_NAMESPACE \
    --appType 'SOFTWARE' \
    --availableDate 'fn6y9jvt' \
    --baseAppId 'KStHRbLY' \
    --categoryPath 'qtl0lz93' \
    --features 'rczKdgF4' \
    --includeSubCategoryItem 'true' \
    --itemName 'TurUBh3J' \
    --itemStatus 'ACTIVE' \
    --itemType 'CODE' \
    --limit '78' \
    --offset '8' \
    --region 'aPXcgbtk' \
    --sectionExclusive 'false' \
    --sortBy '["name:asc", "displayOrder", "displayOrder:asc"]' \
    --storeId 'KAMPVZgj' \
    --tags 'yw7XZnnH' \
    --targetNamespace 'fbt6PR19' \
    --withTotal 'false' \
    > test.out 2>&1
eval_tap $? 433 'QueryItems1' test.out

#- 434 ImportStore1
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op ImportStore1 \
    --namespace $AB_NAMESPACE \
    --storeId 'vLPm4bGz' \
    --strictMode 'true' \
    --upload $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 434 'ImportStore1' test.out

#- 435 ExportStore1
# body param: body
echo '{"itemIds": ["SbUwZmy4", "q3mK8zQw", "GHiJhoi8"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ExportStore1 \
    --namespace $AB_NAMESPACE \
    --storeId 'y19ii2LU' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 435 'ExportStore1' test.out

#- 436 FulfillRewardsV2
# body param: body
echo '{"entitlementOrigin": "Epic", "metadata": {"gNjLlLIz": {}, "dhEA2Bmw": {}, "mazrLNmJ": {}}, "origin": "System", "rewards": [{"currency": {"currencyCode": "SSwe9E6y", "namespace": "Y5QRLeKb"}, "item": {"itemId": "iuAK8TKd", "itemSku": "Hdmu3qqi", "itemType": "QX02gE5l"}, "quantity": 6, "type": "ITEM"}, {"currency": {"currencyCode": "hkugyDYK", "namespace": "koODA4ag"}, "item": {"itemId": "dOWv33vp", "itemSku": "OHeLeyCK", "itemType": "cyULUpII"}, "quantity": 56, "type": "CURRENCY"}, {"currency": {"currencyCode": "FBKDOnRR", "namespace": "IzOsEwGV"}, "item": {"itemId": "gsovuJ5M", "itemSku": "A1foYoIT", "itemType": "WT9obV2a"}, "quantity": 85, "type": "CURRENCY"}], "source": "ORDER_REVOCATION", "transactionId": "XivVyo9w"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op FulfillRewardsV2 \
    --namespace $AB_NAMESPACE \
    --userId 'VQlxTyNB' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 436 'FulfillRewardsV2' test.out


# remove artifacts
rm -f "$CLI_TOKEN_FILE"
rm -f "$TEMP_JSON_INPUT"
rm -f "$TEMP_FILE_UPLOAD"

exit $EXIT_CODE