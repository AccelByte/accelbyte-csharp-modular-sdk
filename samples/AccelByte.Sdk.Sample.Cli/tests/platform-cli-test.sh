#!/usr/bin/env bash

# Copyright (c) 2021 AccelByte Inc. All Rights Reserved.
# This is licensed software from AccelByte Inc, for limitations
# and restrictions contact your company contract manager.

# This code is generated by tool. DO NOT EDIT.

# Meta:
# - random seed: 
# - template file: 

# Instructions:
# - Run the Justice SDK Mock Server first before running this script.

export AB_BASE_URL="http://127.0.0.1:8080"
export AB_CLIENT_ID="admin"
export AB_CLIENT_SECRET="admin"
export AB_NAMESPACE="test"
export AB_APP_NAME="UnitTest"

EXIT_CODE=0

eval_tap() {
  if [ $1 -eq 0 ]; then
    echo "ok $2 - $3"
  else
    EXIT_CODE=1
    echo "not ok $2 - $3"
    sed 's/^/# /g' $4
  fi
  rm -f $4
}

CLI_EXE="AccelByte.Sdk.Sample.Cli"
CLI_TOKEN_FILE="$(dirname "$(which $CLI_EXE)")/token.json"
TEMP_JSON_INPUT="input_json.json"
TEMP_FILE_UPLOAD="file_upload.bin"

echo "TAP version 13"
echo "1..507"

#- 1 Login
$CLI_EXE --op login --lt user --user user --pass user > test.out 2>&1
eval_tap $? 1 'Login' test.out

if [ $EXIT_CODE -ne 0 ]; then
  echo "Bail out! Login failed."
  exit $EXIT_CODE
fi

# echo "foo" > "$CLI_TOKEN_FILE"

#- 2 ListFulfillmentScripts
$CLI_EXE \
    --sn platform \
    --op ListFulfillmentScripts \
    > test.out 2>&1
eval_tap $? 2 'ListFulfillmentScripts' test.out

#- 3 GetFulfillmentScript
$CLI_EXE \
    --sn platform \
    --op GetFulfillmentScript \
    --id '98SMiK6D' \
    > test.out 2>&1
eval_tap $? 3 'GetFulfillmentScript' test.out

#- 4 CreateFulfillmentScript
# body param: body
echo '{"grantDays": "NsIVO40u"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateFulfillmentScript \
    --id 'Q84A6l8t' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 4 'CreateFulfillmentScript' test.out

#- 5 DeleteFulfillmentScript
$CLI_EXE \
    --sn platform \
    --op DeleteFulfillmentScript \
    --id 'VhDVrmUF' \
    > test.out 2>&1
eval_tap $? 5 'DeleteFulfillmentScript' test.out

#- 6 UpdateFulfillmentScript
# body param: body
echo '{"grantDays": "GZbYssM1"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateFulfillmentScript \
    --id 'N5kxTGHA' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 6 'UpdateFulfillmentScript' test.out

#- 7 ListItemTypeConfigs
$CLI_EXE \
    --sn platform \
    --op ListItemTypeConfigs \
    > test.out 2>&1
eval_tap $? 7 'ListItemTypeConfigs' test.out

#- 8 CreateItemTypeConfig
# body param: body
echo '{"clazz": "3dbiN76L", "dryRun": true, "fulfillmentUrl": "xhtz3M1e", "itemType": "SEASON", "purchaseConditionUrl": "wBfhc3gk"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateItemTypeConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 8 'CreateItemTypeConfig' test.out

#- 9 SearchItemTypeConfig
$CLI_EXE \
    --sn platform \
    --op SearchItemTypeConfig \
    --clazz 'Kww23Wi3' \
    --itemType 'EXTENSION' \
    > test.out 2>&1
eval_tap $? 9 'SearchItemTypeConfig' test.out

#- 10 GetItemTypeConfig
$CLI_EXE \
    --sn platform \
    --op GetItemTypeConfig \
    --id 'gHbapNEd' \
    > test.out 2>&1
eval_tap $? 10 'GetItemTypeConfig' test.out

#- 11 UpdateItemTypeConfig
# body param: body
echo '{"clazz": "xZyNeptm", "dryRun": true, "fulfillmentUrl": "OqHCS7Tp", "purchaseConditionUrl": "oQ65Brpm"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateItemTypeConfig \
    --id 'VFyX4XEh' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 11 'UpdateItemTypeConfig' test.out

#- 12 DeleteItemTypeConfig
$CLI_EXE \
    --sn platform \
    --op DeleteItemTypeConfig \
    --id 'CiEW4sjN' \
    > test.out 2>&1
eval_tap $? 12 'DeleteItemTypeConfig' test.out

#- 13 QueryCampaigns
$CLI_EXE \
    --sn platform \
    --op QueryCampaigns \
    --namespace $AB_NAMESPACE \
    --limit '77' \
    --name 'lQTIKeI8' \
    --offset '41' \
    --tag 'NK5aZJ0e' \
    > test.out 2>&1
eval_tap $? 13 'QueryCampaigns' test.out

#- 14 CreateCampaign
# body param: body
echo '{"description": "HsHsVzjS", "discountConfig": {"categories": [{"categoryPath": "2XEbIlMz", "includeSubCategories": false}, {"categoryPath": "Uc74XqJE", "includeSubCategories": false}, {"categoryPath": "vc9L5Wff", "includeSubCategories": true}], "currencyCode": "XcG3zK9w", "currencyNamespace": "zWkGINaQ", "discountAmount": 47, "discountPercentage": 19, "discountType": "PERCENTAGE", "items": [{"itemId": "6fokuSLw", "itemName": "YUgboGxK"}, {"itemId": "ioxN9mnn", "itemName": "lW6hAWcD"}, {"itemId": "EHfXKNdm", "itemName": "cLqMO8Aq"}], "restrictType": "NONE", "stackable": false}, "items": [{"extraSubscriptionDays": 25, "itemId": "yPvQle01", "itemName": "Q3Z1xfFK", "quantity": 37}, {"extraSubscriptionDays": 14, "itemId": "8SY8Ql0K", "itemName": "gwGfp1wa", "quantity": 36}, {"extraSubscriptionDays": 14, "itemId": "fVJqWgLX", "itemName": "46kD3NhH", "quantity": 38}], "maxRedeemCountPerCampaignPerUser": 9, "maxRedeemCountPerCode": 74, "maxRedeemCountPerCodePerUser": 40, "maxSaleCount": 73, "name": "mMpCTbhq", "redeemEnd": "1985-05-29T00:00:00Z", "redeemStart": "1982-01-08T00:00:00Z", "redeemType": "ITEM", "status": "ACTIVE", "tags": ["A6nSKwU8", "pGWKzbHx", "VsisrgAG"], "type": "REDEMPTION"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCampaign \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 14 'CreateCampaign' test.out

#- 15 GetCampaign
$CLI_EXE \
    --sn platform \
    --op GetCampaign \
    --campaignId '1u1cY6Qd' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 15 'GetCampaign' test.out

#- 16 UpdateCampaign
# body param: body
echo '{"description": "xTbPGYKc", "discountConfig": {"categories": [{"categoryPath": "aR3iHoYg", "includeSubCategories": true}, {"categoryPath": "Z8W3c6iz", "includeSubCategories": false}, {"categoryPath": "txO2nGnt", "includeSubCategories": false}], "currencyCode": "xBUlJgDm", "currencyNamespace": "LYNqQJ1t", "discountAmount": 81, "discountPercentage": 59, "discountType": "PERCENTAGE", "items": [{"itemId": "frrhE1FV", "itemName": "8vxE8U85"}, {"itemId": "Utf71JFq", "itemName": "iFE1ezt0"}, {"itemId": "dqj7U2ml", "itemName": "lGYaGpYy"}], "restrictType": "NONE", "stackable": false}, "items": [{"extraSubscriptionDays": 3, "itemId": "vos9CxTd", "itemName": "T7IrQQUX", "quantity": 6}, {"extraSubscriptionDays": 84, "itemId": "8bCP7CSY", "itemName": "JmLuz524", "quantity": 6}, {"extraSubscriptionDays": 88, "itemId": "044P02w9", "itemName": "ygmeRi4Z", "quantity": 56}], "maxRedeemCountPerCampaignPerUser": 33, "maxRedeemCountPerCode": 73, "maxRedeemCountPerCodePerUser": 37, "maxSaleCount": 82, "name": "jHmhCsEq", "redeemEnd": "1972-05-13T00:00:00Z", "redeemStart": "1993-09-11T00:00:00Z", "redeemType": "DISCOUNT", "status": "ACTIVE", "tags": ["zIJuDJzq", "Pa0rV8eU", "5deoko4e"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCampaign \
    --campaignId 'W2iMG9E6' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 16 'UpdateCampaign' test.out

#- 17 RenameBatch
# body param: body
echo '{"newName": "lWCi0dAI", "oldName": "G9tMnPJN"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RenameBatch \
    --campaignId '7eTqFxi5' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 17 'RenameBatch' test.out

#- 18 QueryCampaignBatchNames
$CLI_EXE \
    --sn platform \
    --op QueryCampaignBatchNames \
    --campaignId 'IwpvKw2v' \
    --namespace $AB_NAMESPACE \
    --batchName 'xamdFZq3' \
    --limit '21' \
    > test.out 2>&1
eval_tap $? 18 'QueryCampaignBatchNames' test.out

#- 19 GetCampaignDynamic
$CLI_EXE \
    --sn platform \
    --op GetCampaignDynamic \
    --campaignId 'XjYysZJX' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 19 'GetCampaignDynamic' test.out

#- 20 GetCatalogConfig
$CLI_EXE \
    --sn platform \
    --op GetCatalogConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 20 'GetCatalogConfig' test.out

#- 21 UpdateCatalogConfig
# body param: body
echo '{"enableInventoryCheck": false, "itemDeletionCheckConfig": ["ENTITLEMENT", "DLC"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCatalogConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 21 'UpdateCatalogConfig' test.out

#- 22 GetLootBoxPluginConfig
$CLI_EXE \
    --sn platform \
    --op GetLootBoxPluginConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 22 'GetLootBoxPluginConfig' test.out

#- 23 UpdateLootBoxPluginConfig
# body param: body
echo '{"appConfig": {"appName": "kaOOJnNv"}, "customConfig": {"connectionType": "TLS", "grpcServerAddress": "o3mTXFSR"}, "extendType": "APP"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateLootBoxPluginConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 23 'UpdateLootBoxPluginConfig' test.out

#- 24 DeleteLootBoxPluginConfig
$CLI_EXE \
    --sn platform \
    --op DeleteLootBoxPluginConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 24 'DeleteLootBoxPluginConfig' test.out

#- 25 UplodLootBoxPluginConfigCert
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UplodLootBoxPluginConfigCert \
    --namespace $AB_NAMESPACE \
    --upload file $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 25 'UplodLootBoxPluginConfigCert' test.out

#- 26 GetLootBoxGrpcInfo
$CLI_EXE \
    --sn platform \
    --op GetLootBoxGrpcInfo \
    --namespace $AB_NAMESPACE \
    --force 'true' \
    > test.out 2>&1
eval_tap $? 26 'GetLootBoxGrpcInfo' test.out

#- 27 GetSectionPluginConfig
$CLI_EXE \
    --sn platform \
    --op GetSectionPluginConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 27 'GetSectionPluginConfig' test.out

#- 28 UpdateSectionPluginConfig
# body param: body
echo '{"appConfig": {"appName": "S6tPO62J"}, "customConfig": {"connectionType": "INSECURE", "grpcServerAddress": "mPb7sr8b"}, "extendType": "APP"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateSectionPluginConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 28 'UpdateSectionPluginConfig' test.out

#- 29 DeleteSectionPluginConfig
$CLI_EXE \
    --sn platform \
    --op DeleteSectionPluginConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 29 'DeleteSectionPluginConfig' test.out

#- 30 UploadSectionPluginConfigCert
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UploadSectionPluginConfigCert \
    --namespace $AB_NAMESPACE \
    --upload file $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 30 'UploadSectionPluginConfigCert' test.out

#- 31 GetRootCategories
$CLI_EXE \
    --sn platform \
    --op GetRootCategories \
    --namespace $AB_NAMESPACE \
    --storeId 'r7NXB2K6' \
    > test.out 2>&1
eval_tap $? 31 'GetRootCategories' test.out

#- 32 CreateCategory
# body param: body
echo '{"categoryPath": "JcWD7Sxa", "localizationDisplayNames": {"RIQqBmD0": "HzbYIWL8", "Casg9omT": "Xi1dv37Z", "U7hpwgwc": "NDp7cRoB"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCategory \
    --namespace $AB_NAMESPACE \
    --storeId '0w56v9Um' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 32 'CreateCategory' test.out

#- 33 ListCategoriesBasic
$CLI_EXE \
    --sn platform \
    --op ListCategoriesBasic \
    --namespace $AB_NAMESPACE \
    --storeId 'qIfVvkvE' \
    > test.out 2>&1
eval_tap $? 33 'ListCategoriesBasic' test.out

#- 34 GetCategory
$CLI_EXE \
    --sn platform \
    --op GetCategory \
    --categoryPath 'ZH43rg8g' \
    --namespace $AB_NAMESPACE \
    --storeId 'MAhXWzMA' \
    > test.out 2>&1
eval_tap $? 34 'GetCategory' test.out

#- 35 UpdateCategory
# body param: body
echo '{"localizationDisplayNames": {"tFZ1eTnj": "imgGUnHm", "BxEhbhlj": "jGEZ1nFL", "IZbgLxiE": "NzrSVzxX"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCategory \
    --categoryPath 'OeqpmU88' \
    --namespace $AB_NAMESPACE \
    --storeId '6s4eKyrR' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 35 'UpdateCategory' test.out

#- 36 DeleteCategory
$CLI_EXE \
    --sn platform \
    --op DeleteCategory \
    --categoryPath 'cJ4gWxOq' \
    --namespace $AB_NAMESPACE \
    --storeId 'bmlXmfdU' \
    > test.out 2>&1
eval_tap $? 36 'DeleteCategory' test.out

#- 37 GetChildCategories
$CLI_EXE \
    --sn platform \
    --op GetChildCategories \
    --categoryPath 'SVpmM3fc' \
    --namespace $AB_NAMESPACE \
    --storeId 'GJMhdbob' \
    > test.out 2>&1
eval_tap $? 37 'GetChildCategories' test.out

#- 38 GetDescendantCategories
$CLI_EXE \
    --sn platform \
    --op GetDescendantCategories \
    --categoryPath 'VaJmqshO' \
    --namespace $AB_NAMESPACE \
    --storeId 'cDfV6fKn' \
    > test.out 2>&1
eval_tap $? 38 'GetDescendantCategories' test.out

#- 39 QueryCodes
$CLI_EXE \
    --sn platform \
    --op QueryCodes \
    --campaignId 'pZb8Q9KD' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --batchName 'cTaosE6F' \
    --batchNo '[96, 56, 48]' \
    --code 'RhTGVKuE' \
    --limit '25' \
    --offset '6' \
    --withBatchName 'false' \
    > test.out 2>&1
eval_tap $? 39 'QueryCodes' test.out

#- 40 CreateCodes
# body param: body
echo '{"batchName": "L6gUHypc", "codeValue": "QqZJgqWX", "quantity": 96}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCodes \
    --campaignId 'ayy67Vd3' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 40 'CreateCodes' test.out

#- 41 Download
$CLI_EXE \
    --sn platform \
    --op Download \
    --campaignId 'nQYx2Pk4' \
    --namespace $AB_NAMESPACE \
    --batchName 'fFlIoxJz' \
    --batchNo '[53, 2, 11]' \
    --withBatchName 'false' \
    > test.out 2>&1
eval_tap $? 41 'Download' test.out

#- 42 BulkDisableCodes
$CLI_EXE \
    --sn platform \
    --op BulkDisableCodes \
    --campaignId 'JEmCqGPe' \
    --namespace $AB_NAMESPACE \
    --batchName '5IeMuICC' \
    --batchNo '[45, 89, 54]' \
    > test.out 2>&1
eval_tap $? 42 'BulkDisableCodes' test.out

#- 43 BulkEnableCodes
$CLI_EXE \
    --sn platform \
    --op BulkEnableCodes \
    --campaignId 'xl8zrbtI' \
    --namespace $AB_NAMESPACE \
    --batchName 'vKOPpzOg' \
    --batchNo '[34, 46, 20]' \
    > test.out 2>&1
eval_tap $? 43 'BulkEnableCodes' test.out

#- 44 QueryRedeemHistory
$CLI_EXE \
    --sn platform \
    --op QueryRedeemHistory \
    --campaignId 'a5z007wD' \
    --namespace $AB_NAMESPACE \
    --code 'X6YTu5Bu' \
    --limit '41' \
    --offset '71' \
    --userId 'MqtPdAkI' \
    > test.out 2>&1
eval_tap $? 44 'QueryRedeemHistory' test.out

#- 45 GetCode
$CLI_EXE \
    --sn platform \
    --op GetCode \
    --code 'fMcu0vOP' \
    --namespace $AB_NAMESPACE \
    --redeemable 'false' \
    --withBatchName 'false' \
    > test.out 2>&1
eval_tap $? 45 'GetCode' test.out

#- 46 DisableCode
$CLI_EXE \
    --sn platform \
    --op DisableCode \
    --code 'bSUsiySA' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 46 'DisableCode' test.out

#- 47 EnableCode
$CLI_EXE \
    --sn platform \
    --op EnableCode \
    --code 'GnelIjDH' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 47 'EnableCode' test.out

#- 48 GetServicePluginConfig
eval_tap 0 48 'GetServicePluginConfig # SKIP deprecated' test.out

#- 49 UpdateServicePluginConfig
eval_tap 0 49 'UpdateServicePluginConfig # SKIP deprecated' test.out

#- 50 DeleteServicePluginConfig
eval_tap 0 50 'DeleteServicePluginConfig # SKIP deprecated' test.out

#- 51 ListCurrencies
$CLI_EXE \
    --sn platform \
    --op ListCurrencies \
    --namespace $AB_NAMESPACE \
    --currencyType 'VIRTUAL' \
    > test.out 2>&1
eval_tap $? 51 'ListCurrencies' test.out

#- 52 CreateCurrency
# body param: body
echo '{"currencyCode": "P3LQ040r", "currencySymbol": "cjX86SfD", "currencyType": "VIRTUAL", "decimals": 88, "localizationDescriptions": {"LacOqOa9": "6pIkVD5v", "TyTxMyvn": "7K4XQHxJ", "dDR28NE1": "IjeLWK7Q"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCurrency \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 52 'CreateCurrency' test.out

#- 53 UpdateCurrency
# body param: body
echo '{"localizationDescriptions": {"jrVVMcsj": "ucOSGQX9", "cXclJ6vZ": "nufWy2FB", "G9YJ7rCT": "LsJ36dWC"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCurrency \
    --currencyCode 'HME0V3Qe' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 53 'UpdateCurrency' test.out

#- 54 DeleteCurrency
$CLI_EXE \
    --sn platform \
    --op DeleteCurrency \
    --currencyCode '7jdVemHg' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 54 'DeleteCurrency' test.out

#- 55 GetCurrencyConfig
$CLI_EXE \
    --sn platform \
    --op GetCurrencyConfig \
    --currencyCode 'wAm0Gg6d' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 55 'GetCurrencyConfig' test.out

#- 56 GetCurrencySummary
$CLI_EXE \
    --sn platform \
    --op GetCurrencySummary \
    --currencyCode 'gFDhxWph' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 56 'GetCurrencySummary' test.out

#- 57 GetDLCItemConfigHistory
$CLI_EXE \
    --sn platform \
    --op GetDLCItemConfigHistory \
    --namespace $AB_NAMESPACE \
    --dlcId 'kJ0ldloF' \
    > test.out 2>&1
eval_tap $? 57 'GetDLCItemConfigHistory' test.out

#- 58 RestoreDLCItemConfigHistory
$CLI_EXE \
    --sn platform \
    --op RestoreDLCItemConfigHistory \
    --id 'c3Idsueh' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 58 'RestoreDLCItemConfigHistory' test.out

#- 59 GetDLCItemConfig
$CLI_EXE \
    --sn platform \
    --op GetDLCItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 59 'GetDLCItemConfig' test.out

#- 60 UpdateDLCItemConfig
# body param: body
echo '{"data": [{"autoUpdate": false, "enableRevocation": true, "id": "56wQxBTo", "rewards": [{"currency": {"currencyCode": "nZxPnhhY", "namespace": "T4C6bn0A"}, "item": {"itemId": "Ad6dxMYP", "itemName": "GZezwI67", "itemSku": "mdYQbEg3", "itemType": "JrGCoVaJ"}, "quantity": 36, "type": "ITEM"}, {"currency": {"currencyCode": "oBSbPHa1", "namespace": "UF7FMQiG"}, "item": {"itemId": "Zym5WtaR", "itemName": "xZrukcg6", "itemSku": "n3mvqE6B", "itemType": "3ZRAYK9N"}, "quantity": 14, "type": "ITEM"}, {"currency": {"currencyCode": "WkRNa6H0", "namespace": "HFGS6VDo"}, "item": {"itemId": "Wc20dnm5", "itemName": "J22MQ0cy", "itemSku": "esx2HjnN", "itemType": "7ePyTRYr"}, "quantity": 61, "type": "CURRENCY"}], "rvn": 92}, {"autoUpdate": false, "enableRevocation": false, "id": "fAVNlABA", "rewards": [{"currency": {"currencyCode": "uNRLt8QT", "namespace": "GSgJ6ZIe"}, "item": {"itemId": "r55B2Zbt", "itemName": "3czqwKqU", "itemSku": "5aNACOTe", "itemType": "i9hsf5WF"}, "quantity": 55, "type": "ITEM"}, {"currency": {"currencyCode": "MDb8797h", "namespace": "j7uowlM1"}, "item": {"itemId": "kvLMkshf", "itemName": "Z8ALsnGG", "itemSku": "uty9rcuM", "itemType": "K4efivAR"}, "quantity": 63, "type": "CURRENCY"}, {"currency": {"currencyCode": "36xPcsM6", "namespace": "wcfqzemK"}, "item": {"itemId": "ykxJm7HC", "itemName": "BWvCQSMs", "itemSku": "AJIox6e7", "itemType": "nDgemSQV"}, "quantity": 17, "type": "CURRENCY"}], "rvn": 29}, {"autoUpdate": false, "enableRevocation": false, "id": "A7jcFZMt", "rewards": [{"currency": {"currencyCode": "ZtWYJt54", "namespace": "72CrlhB0"}, "item": {"itemId": "NjD7Cvze", "itemName": "nfgjah3X", "itemSku": "BWB8yaUN", "itemType": "CTiyMhv6"}, "quantity": 59, "type": "ITEM"}, {"currency": {"currencyCode": "2nSUbLyM", "namespace": "MpNhqtIJ"}, "item": {"itemId": "eTBsyDNv", "itemName": "LbUMmzTh", "itemSku": "anOaFxPP", "itemType": "CygSNRdl"}, "quantity": 35, "type": "CURRENCY"}, {"currency": {"currencyCode": "ea1k2MBY", "namespace": "voXl44Y3"}, "item": {"itemId": "aYBIr6WF", "itemName": "7Wr1FDkH", "itemSku": "NmPb0mHG", "itemType": "CQhUZYWv"}, "quantity": 87, "type": "CURRENCY"}], "rvn": 36}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateDLCItemConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 60 'UpdateDLCItemConfig' test.out

#- 61 DeleteDLCItemConfig
$CLI_EXE \
    --sn platform \
    --op DeleteDLCItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 61 'DeleteDLCItemConfig' test.out

#- 62 GetPlatformDLCConfig
$CLI_EXE \
    --sn platform \
    --op GetPlatformDLCConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 62 'GetPlatformDLCConfig' test.out

#- 63 UpdatePlatformDLCConfig
# body param: body
echo '{"data": [{"platform": "EPICGAMES", "platformDlcIdMap": {"GK3grlOU": "gKg4CmsI", "JbYsPd3M": "00Vrepau", "LWEQzZsP": "kxDW0k2T"}}, {"platform": "OCULUS", "platformDlcIdMap": {"KxZf2cp8": "nSZcucCF", "oskNSP71": "1ObzuPOD", "4QBVA3d7": "pg2v1fJt"}}, {"platform": "STEAM", "platformDlcIdMap": {"nYAXVti7": "FS0ymGHP", "aQTMhVaH": "ckZuOWmi", "BiiCVyRi": "3xQK3ZF3"}}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePlatformDLCConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 63 'UpdatePlatformDLCConfig' test.out

#- 64 DeletePlatformDLCConfig
$CLI_EXE \
    --sn platform \
    --op DeletePlatformDLCConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 64 'DeletePlatformDLCConfig' test.out

#- 65 QueryEntitlements
$CLI_EXE \
    --sn platform \
    --op QueryEntitlements \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --appType 'SOFTWARE' \
    --entitlementClazz 'ENTITLEMENT' \
    --entitlementName 'HmqVnoTa' \
    --itemId '["bTHLUrD8", "B0dJnjG9", "t654UbwE"]' \
    --limit '14' \
    --offset '5' \
    --origin 'Nintendo' \
    --userId '3kXtx7Cp' \
    > test.out 2>&1
eval_tap $? 65 'QueryEntitlements' test.out

#- 66 QueryEntitlementsByItemIds
$CLI_EXE \
    --sn platform \
    --op QueryEntitlementsByItemIds \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --itemIds '["p55dIUzv", "aEJQAaLp", "fKftZB6B"]' \
    --limit '63' \
    --offset '26' \
    > test.out 2>&1
eval_tap $? 66 'QueryEntitlementsByItemIds' test.out

#- 67 EnableEntitlementOriginFeature
$CLI_EXE \
    --sn platform \
    --op EnableEntitlementOriginFeature \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 67 'EnableEntitlementOriginFeature' test.out

#- 68 GetEntitlementConfigInfo
$CLI_EXE \
    --sn platform \
    --op GetEntitlementConfigInfo \
    --namespace $AB_NAMESPACE \
    --withoutCache 'true' \
    > test.out 2>&1
eval_tap $? 68 'GetEntitlementConfigInfo' test.out

#- 69 GrantEntitlements
# body param: body
echo '{"entitlementGrantList": [{"collectionId": "B1V4pSsw", "endDate": "1981-06-18T00:00:00Z", "grantedCode": "DTqcIvrF", "itemId": "cgLJHe2z", "itemNamespace": "NEtYPmpK", "language": "IR-KtgX-689", "metadata": {"OG0ygDkm": {}, "Q1t13Zj8": {}, "08o7zf6K": {}}, "origin": "Playstation", "quantity": 34, "region": "C7dyEVt9", "source": "ACHIEVEMENT", "startDate": "1981-10-29T00:00:00Z", "storeId": "HqQ5gxdD"}, {"collectionId": "lL1CH1GU", "endDate": "1974-12-13T00:00:00Z", "grantedCode": "8Qzhb3fS", "itemId": "iTUa5T7Q", "itemNamespace": "MgxQMFtN", "language": "lQ_ngAy-Za", "metadata": {"DPLilOJQ": {}, "0DLijFmg": {}, "7WVeIoD4": {}}, "origin": "GooglePlay", "quantity": 78, "region": "eLrutJ13", "source": "REDEEM_CODE", "startDate": "1999-08-03T00:00:00Z", "storeId": "iLbpYDnK"}, {"collectionId": "ueWspR3O", "endDate": "1972-06-10T00:00:00Z", "grantedCode": "7fVWjGZM", "itemId": "GV0XNvL6", "itemNamespace": "f93LgY6V", "language": "QT-oEFd-345", "metadata": {"6JjlOxc9": {}, "mN9zxcGe": {}, "MhR1ON1c": {}}, "origin": "Twitch", "quantity": 20, "region": "E2izA30h", "source": "REFERRAL_BONUS", "startDate": "1986-11-22T00:00:00Z", "storeId": "olGJ0FjN"}], "userIds": ["w1Yyh6eB", "lqdJgkDj", "qNuezwMc"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op GrantEntitlements \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 69 'GrantEntitlements' test.out

#- 70 RevokeEntitlements
# body param: body
echo '["WThi6yKf", "KpdaMmSP", "Bod5xuX3"]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RevokeEntitlements \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 70 'RevokeEntitlements' test.out

#- 71 GetEntitlement
$CLI_EXE \
    --sn platform \
    --op GetEntitlement \
    --entitlementId 'wIhrWDkS' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 71 'GetEntitlement' test.out

#- 72 QueryFulfillmentHistories
$CLI_EXE \
    --sn platform \
    --op QueryFulfillmentHistories \
    --namespace $AB_NAMESPACE \
    --limit '90' \
    --offset '40' \
    --status 'FAIL' \
    --userId 'bG2jma88' \
    > test.out 2>&1
eval_tap $? 72 'QueryFulfillmentHistories' test.out

#- 73 QueryIAPClawbackHistory
$CLI_EXE \
    --sn platform \
    --op QueryIAPClawbackHistory \
    --namespace $AB_NAMESPACE \
    --endTime 'gw3MSFTr' \
    --eventType 'REFUND' \
    --externalOrderId 'k2xegTIt' \
    --limit '12' \
    --offset '76' \
    --startTime 'SBbdaKE3' \
    --status 'SUCCESS' \
    --userId 'iFoEhscP' \
    > test.out 2>&1
eval_tap $? 73 'QueryIAPClawbackHistory' test.out

#- 74 MockPlayStationStreamEvent
# body param: body
echo '{"body": {"account": "ekqHsRqx", "additionalData": {"entitlement": [{"clientTransaction": [{"amountConsumed": 48, "clientTransactionId": "CCwAf67X"}, {"amountConsumed": 14, "clientTransactionId": "wn0C62ep"}, {"amountConsumed": 59, "clientTransactionId": "pgg3Xlv2"}], "entitlementId": "OmKo2Zlg", "usageCount": 92}, {"clientTransaction": [{"amountConsumed": 16, "clientTransactionId": "OIvy3bHK"}, {"amountConsumed": 95, "clientTransactionId": "97gvxO0g"}, {"amountConsumed": 56, "clientTransactionId": "3wirDt3v"}], "entitlementId": "zS6I7ret", "usageCount": 93}, {"clientTransaction": [{"amountConsumed": 3, "clientTransactionId": "bjFiHajy"}, {"amountConsumed": 96, "clientTransactionId": "O05jyYwg"}, {"amountConsumed": 26, "clientTransactionId": "z6RLmTqA"}], "entitlementId": "igAsQAEW", "usageCount": 53}], "purpose": "TsHqaE6K"}, "originalTitleName": "hp7UgIk1", "paymentProductSKU": "djXNJHYN", "purchaseDate": "Cy36rwMC", "sourceOrderItemId": "H0Ea58QS", "titleName": "ckm8N0bV"}, "eventDomain": "YGrKPjmy", "eventSource": "lFjZAVFx", "eventType": "6UQUt16b", "eventVersion": 73, "id": "yyiHrEbU", "timestamp": "PrpU6QkN"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op MockPlayStationStreamEvent \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 74 'MockPlayStationStreamEvent' test.out

#- 75 MockXblClawbackEvent
# body param: body
echo '{"data": {"eventDate": "g5kh9Om1", "eventState": "J8abeWCa", "lineItemId": "AhEVKXiy", "orderId": "QuMt5Udp", "productId": "yfIPRlKy", "productType": "1uiDaVkB", "purchasedDate": "c3Kkxi9Z", "sandboxId": "do8P7E6s", "skuId": "Rk9yTLTS", "subscriptionData": {"consumedDurationInDays": 19, "dateTime": "sFhQZSEj", "durationInDays": 62, "recurrenceId": "1H9HJ9ip"}}, "datacontenttype": "z5Iz1xsZ", "id": "5m4MlDaz", "source": "vQw9D1lk", "specVersion": "xi6CwdOX", "subject": "JLADKUmc", "time": "IQnGulXE", "traceparent": "x7JvQ9uo", "type": "I2vX6fAt"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op MockXblClawbackEvent \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 75 'MockXblClawbackEvent' test.out

#- 76 GetAppleIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetAppleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 76 'GetAppleIAPConfig' test.out

#- 77 UpdateAppleIAPConfig
# body param: body
echo '{"appAppleId": 67, "bundleId": "Jn3FbVMV", "issuerId": "Xx0C54P1", "keyId": "DLnfwZKP", "password": "2830dP0J", "version": "V2"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateAppleIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 77 'UpdateAppleIAPConfig' test.out

#- 78 DeleteAppleIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteAppleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 78 'DeleteAppleIAPConfig' test.out

#- 79 UpdateAppleP8File
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UpdateAppleP8File \
    --namespace $AB_NAMESPACE \
    --upload file $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 79 'UpdateAppleP8File' test.out

#- 80 GetEpicGamesIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetEpicGamesIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 80 'GetEpicGamesIAPConfig' test.out

#- 81 UpdateEpicGamesIAPConfig
# body param: body
echo '{"sandboxId": "PtJ2JXif"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateEpicGamesIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 81 'UpdateEpicGamesIAPConfig' test.out

#- 82 DeleteEpicGamesIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteEpicGamesIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 82 'DeleteEpicGamesIAPConfig' test.out

#- 83 GetGoogleIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetGoogleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 83 'GetGoogleIAPConfig' test.out

#- 84 UpdateGoogleIAPConfig
# body param: body
echo '{"applicationName": "r24hBYGB", "notificationTokenAudience": "gukzht9K", "notificationTokenEmail": "Cr3szWIc", "packageName": "vjLKNVQJ", "serviceAccountId": "P4nPynCs"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateGoogleIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 84 'UpdateGoogleIAPConfig' test.out

#- 85 DeleteGoogleIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteGoogleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 85 'DeleteGoogleIAPConfig' test.out

#- 86 UpdateGoogleP12File
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UpdateGoogleP12File \
    --namespace $AB_NAMESPACE \
    --upload file $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 86 'UpdateGoogleP12File' test.out

#- 87 GetIAPItemConfig
$CLI_EXE \
    --sn platform \
    --op GetIAPItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 87 'GetIAPItemConfig' test.out

#- 88 UpdateIAPItemConfig
# body param: body
echo '{"data": [{"itemIdentity": "gyHyoKnF", "itemIdentityType": "ITEM_SKU", "platformProductIdMap": {"EUC9IqQt": "zNF2tP1Z", "19Ks0ZnF": "1zbmPxr2", "SV8OcsZr": "tAfGFUOg"}}, {"itemIdentity": "611rkNLh", "itemIdentityType": "ITEM_ID", "platformProductIdMap": {"IJo5OT48": "ITZSEXJo", "5rw23Qyb": "51hkXJHe", "JBEhCvG2": "eAqW5qii"}}, {"itemIdentity": "7h2VM0e7", "itemIdentityType": "ITEM_SKU", "platformProductIdMap": {"fbVh5i6O": "ovnp7Uzc", "XxbztH9l": "NsGOn0Ly", "aP36rNs1": "tNlzHl9O"}}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateIAPItemConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 88 'UpdateIAPItemConfig' test.out

#- 89 DeleteIAPItemConfig
$CLI_EXE \
    --sn platform \
    --op DeleteIAPItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 89 'DeleteIAPItemConfig' test.out

#- 90 GetOculusIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetOculusIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 90 'GetOculusIAPConfig' test.out

#- 91 UpdateOculusIAPConfig
# body param: body
echo '{"appId": "QC9aWU1L", "appSecret": "qM1CH0FR", "webhookVerifyToken": "vuWOPog1"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateOculusIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 91 'UpdateOculusIAPConfig' test.out

#- 92 DeleteOculusIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteOculusIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 92 'DeleteOculusIAPConfig' test.out

#- 93 ListOculusSubscriptionGroups
$CLI_EXE \
    --sn platform \
    --op ListOculusSubscriptionGroups \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 93 'ListOculusSubscriptionGroups' test.out

#- 94 CreateOculusSubscriptionGroup
# body param: body
echo '{"sku": "Y6RzcA5x"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateOculusSubscriptionGroup \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 94 'CreateOculusSubscriptionGroup' test.out

#- 95 DeleteOculusSubscriptionGroup
$CLI_EXE \
    --sn platform \
    --op DeleteOculusSubscriptionGroup \
    --namespace $AB_NAMESPACE \
    --sku 'J8YjV8ur' \
    > test.out 2>&1
eval_tap $? 95 'DeleteOculusSubscriptionGroup' test.out

#- 96 ListOculusSubscriptionGroupTier
$CLI_EXE \
    --sn platform \
    --op ListOculusSubscriptionGroupTier \
    --namespace $AB_NAMESPACE \
    --sku 'OQ3Vohnx' \
    > test.out 2>&1
eval_tap $? 96 'ListOculusSubscriptionGroupTier' test.out

#- 97 AddTierIntoMetaQuestSubscriptionGroup
# body param: body
echo '{"groupSku": "anHj4x5k", "sku": "mwB9WnYc"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op AddTierIntoMetaQuestSubscriptionGroup \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 97 'AddTierIntoMetaQuestSubscriptionGroup' test.out

#- 98 DeleteOculusSubscriptionTier
$CLI_EXE \
    --sn platform \
    --op DeleteOculusSubscriptionTier \
    --namespace $AB_NAMESPACE \
    --sku 'OmvSrd7D' \
    > test.out 2>&1
eval_tap $? 98 'DeleteOculusSubscriptionTier' test.out

#- 99 GetPlayStationIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetPlayStationIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 99 'GetPlayStationIAPConfig' test.out

#- 100 UpdatePlaystationIAPConfig
# body param: body
echo '{"backOfficeServerClientId": "3zFSaxAX", "backOfficeServerClientSecret": "tWvKlig1", "enableStreamJob": false, "environment": "KOIUiGnw", "streamName": "AQ3HwMdB", "streamPartnerName": "M4igG1Jn"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePlaystationIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 100 'UpdatePlaystationIAPConfig' test.out

#- 101 DeletePlaystationIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeletePlaystationIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 101 'DeletePlaystationIAPConfig' test.out

#- 102 ValidateExistedPlaystationIAPConfig
$CLI_EXE \
    --sn platform \
    --op ValidateExistedPlaystationIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 102 'ValidateExistedPlaystationIAPConfig' test.out

#- 103 ValidatePlaystationIAPConfig
# body param: body
echo '{"backOfficeServerClientId": "ZqqHvDr9", "backOfficeServerClientSecret": "mtTjKpBh", "enableStreamJob": false, "environment": "sSLac4a9", "streamName": "jfWTZ1i9", "streamPartnerName": "6rMReryD"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ValidatePlaystationIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 103 'ValidatePlaystationIAPConfig' test.out

#- 104 GetSteamIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetSteamIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 104 'GetSteamIAPConfig' test.out

#- 105 UpdateSteamIAPConfig
# body param: body
echo '{"appId": "lPt1fD1w", "env": "SANDBOX", "publisherAuthenticationKey": "jxz72sjn", "syncMode": "TRANSACTION"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateSteamIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 105 'UpdateSteamIAPConfig' test.out

#- 106 DeleteSteamIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteSteamIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 106 'DeleteSteamIAPConfig' test.out

#- 107 GetTwitchIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetTwitchIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 107 'GetTwitchIAPConfig' test.out

#- 108 UpdateTwitchIAPConfig
# body param: body
echo '{"clientId": "bhwzR9Yd", "clientSecret": "s3gWFs5S", "organizationId": "saanHKvp"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateTwitchIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 108 'UpdateTwitchIAPConfig' test.out

#- 109 DeleteTwitchIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteTwitchIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 109 'DeleteTwitchIAPConfig' test.out

#- 110 GetXblIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetXblIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 110 'GetXblIAPConfig' test.out

#- 111 UpdateXblIAPConfig
# body param: body
echo '{"enableClawback": false, "entraAppClientId": "ejkNA10r", "entraAppClientSecret": "D9Lalktk", "entraTenantId": "SqeJK1aU", "relyingPartyCert": "n4uoxerk"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXblIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 111 'UpdateXblIAPConfig' test.out

#- 112 DeleteXblAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteXblAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 112 'DeleteXblAPConfig' test.out

#- 113 UpdateXblBPCertFile
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UpdateXblBPCertFile \
    --namespace $AB_NAMESPACE \
    --upload file $TEMP_FILE_UPLOAD \
    --password 'i3AE3PIg' \
    > test.out 2>&1
eval_tap $? 113 'UpdateXblBPCertFile' test.out

#- 114 QueryThirdPartyNotifications
$CLI_EXE \
    --sn platform \
    --op QueryThirdPartyNotifications \
    --namespace $AB_NAMESPACE \
    --endDate 'Bvx0KS12' \
    --externalId 'CabkZJak' \
    --limit '9' \
    --offset '28' \
    --source 'XBOX' \
    --startDate 'LcUayIgd' \
    --status 'WARN' \
    --type 'X0OaOAtU' \
    > test.out 2>&1
eval_tap $? 114 'QueryThirdPartyNotifications' test.out

#- 115 QueryAbnormalTransactions
$CLI_EXE \
    --sn platform \
    --op QueryAbnormalTransactions \
    --namespace $AB_NAMESPACE \
    --limit '12' \
    --offset '20' \
    --orderId 'gOruIPJH' \
    --steamId '06NOJpXu' \
    > test.out 2>&1
eval_tap $? 115 'QueryAbnormalTransactions' test.out

#- 116 AdminGetSteamJobInfo
$CLI_EXE \
    --sn platform \
    --op AdminGetSteamJobInfo \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 116 'AdminGetSteamJobInfo' test.out

#- 117 AdminResetSteamJobTime
# body param: body
echo '{"env": "SANDBOX", "lastTime": "1998-02-26T00:00:00Z"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op AdminResetSteamJobTime \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 117 'AdminResetSteamJobTime' test.out

#- 118 AdminRefundIAPOrder
$CLI_EXE \
    --sn platform \
    --op AdminRefundIAPOrder \
    --iapOrderNo 'tZrYXkyr' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 118 'AdminRefundIAPOrder' test.out

#- 119 QuerySteamReportHistories
$CLI_EXE \
    --sn platform \
    --op QuerySteamReportHistories \
    --namespace $AB_NAMESPACE \
    --limit '17' \
    --offset '55' \
    --orderId 'tfPtZP4E' \
    --processStatus 'PROCESSED' \
    --steamId 'SaiAhEl2' \
    > test.out 2>&1
eval_tap $? 119 'QuerySteamReportHistories' test.out

#- 120 QueryThirdPartySubscription
$CLI_EXE \
    --sn platform \
    --op QueryThirdPartySubscription \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --groupId 'ciygiVH2' \
    --limit '64' \
    --offset '11' \
    --platform 'EPICGAMES' \
    --productId 'fvwnN7AB' \
    --userId '4LrM0GDp' \
    > test.out 2>&1
eval_tap $? 120 'QueryThirdPartySubscription' test.out

#- 121 GetIAPOrderConsumeDetails
$CLI_EXE \
    --sn platform \
    --op GetIAPOrderConsumeDetails \
    --iapOrderNo 'SKBFqWp4' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 121 'GetIAPOrderConsumeDetails' test.out

#- 122 DownloadInvoiceDetails
$CLI_EXE \
    --sn platform \
    --op DownloadInvoiceDetails \
    --namespace $AB_NAMESPACE \
    --endTime 'Ffrghkhy' \
    --feature 'muuOeyG4' \
    --itemId 'XLlJ5VRF' \
    --itemType 'SEASON' \
    --startTime 'vL3QXqDo' \
    > test.out 2>&1
eval_tap $? 122 'DownloadInvoiceDetails' test.out

#- 123 GenerateInvoiceSummary
$CLI_EXE \
    --sn platform \
    --op GenerateInvoiceSummary \
    --namespace $AB_NAMESPACE \
    --endTime 'xdN5cpVN' \
    --feature 'GWqIgaOd' \
    --itemId 'CAKKepcD' \
    --itemType 'LOOTBOX' \
    --startTime 'VPkJvZwD' \
    > test.out 2>&1
eval_tap $? 123 'GenerateInvoiceSummary' test.out

#- 124 SyncInGameItem
# body param: body
echo '{"categoryPath": "eUo8yyhr", "targetItemId": "nAYXhO4s", "targetNamespace": "iIJVdKwJ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncInGameItem \
    --namespace $AB_NAMESPACE \
    --storeId '5t9ELetL' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 124 'SyncInGameItem' test.out

#- 125 CreateItem
# body param: body
echo '{"appId": "2XAiiFue", "appType": "SOFTWARE", "baseAppId": "eLIquC8W", "boothName": "BqcaMz9v", "categoryPath": "hCHAfhQe", "clazz": "HpGzgdCO", "displayOrder": 74, "entitlementType": "DURABLE", "ext": {"wjRhvDDq": {}, "vfmfitVT": {}, "Dg2OVQXT": {}}, "features": ["yiOI6cqw", "Ct7DR4jA", "Lhpl8jxI"], "flexible": false, "images": [{"as": "1r4tsXO0", "caption": "CKn1Pg9O", "height": 38, "imageUrl": "E873Iti0", "smallImageUrl": "wjAl80ht", "width": 46}, {"as": "2GzrFVP3", "caption": "UQHfvAad", "height": 4, "imageUrl": "DJHyPvNa", "smallImageUrl": "qrQcbv5V", "width": 43}, {"as": "DayrObJn", "caption": "9uHW1zJc", "height": 93, "imageUrl": "8qJ6fKeL", "smallImageUrl": "jYNbiyzD", "width": 75}], "inventoryConfig": {"customAttributes": {"QVimv20H": {}, "c3qPvDi3": {}, "3jaNhsnX": {}}, "serverCustomAttributes": {"kTp8Wi4B": {}, "xNgJjKAF": {}, "wN8tx7FQ": {}}, "slotUsed": 39}, "itemId": "Th5s5YIx", "itemIds": ["TGHvEo92", "VvOIDfWJ", "5Bcm6pOw"], "itemQty": {"3m3oWTNf": 72, "iT0cTLEQ": 22, "2ZqWT7Eg": 87}, "itemType": "LOOTBOX", "listable": true, "localizations": {"Jlpg4l4x": {"description": "pAiLcaoo", "localExt": {"AbOijhYm": {}, "XTy4arfH": {}, "D8a2zdwy": {}}, "longDescription": "Uj4cnNHb", "title": "zOgVQ6zb"}, "xYf1HWaF": {"description": "kEBgGfHC", "localExt": {"iYpIjHiW": {}, "Wb5WOMqX": {}, "T55YIfQX": {}}, "longDescription": "3vS6ws1V", "title": "VgdH2t7f"}, "bWOtZxge": {"description": "8Qswx5Te", "localExt": {"Eo5NzjEq": {}, "WingVgdP": {}, "CaZ8gZjt": {}}, "longDescription": "wt8sTCAq", "title": "U6uWw0gt"}}, "lootBoxConfig": {"rewardCount": 37, "rewards": [{"lootBoxItems": [{"count": 25, "duration": 76, "endDate": "1993-02-08T00:00:00Z", "itemId": "sGpS3EFJ", "itemSku": "k7eqW2rT", "itemType": "NE3Qjx5Y"}, {"count": 75, "duration": 82, "endDate": "1989-11-08T00:00:00Z", "itemId": "gufXeDaA", "itemSku": "JpkLOKii", "itemType": "NqcVgDpK"}, {"count": 92, "duration": 9, "endDate": "1982-04-24T00:00:00Z", "itemId": "UgMTiJt9", "itemSku": "HPShTlAS", "itemType": "jhsqUfNB"}], "name": "CH4lCGz2", "odds": 0.8696547593996151, "type": "REWARD", "weight": 59}, {"lootBoxItems": [{"count": 22, "duration": 39, "endDate": "1982-09-17T00:00:00Z", "itemId": "ZmGWlSYX", "itemSku": "84XHxAhW", "itemType": "hlqyF3y2"}, {"count": 12, "duration": 60, "endDate": "1993-09-02T00:00:00Z", "itemId": "YSFf8bRb", "itemSku": "VsOOLFTT", "itemType": "PjiGAzYu"}, {"count": 80, "duration": 55, "endDate": "1980-02-01T00:00:00Z", "itemId": "77tTIXPT", "itemSku": "p4TMxjoW", "itemType": "B46b7JUb"}], "name": "N0zuyGMo", "odds": 0.9023460815421359, "type": "PROBABILITY_GROUP", "weight": 58}, {"lootBoxItems": [{"count": 42, "duration": 30, "endDate": "1999-09-18T00:00:00Z", "itemId": "ED5ngQnj", "itemSku": "9ktAaBJ1", "itemType": "eXyV2wL5"}, {"count": 78, "duration": 97, "endDate": "1988-09-24T00:00:00Z", "itemId": "ppntoJTf", "itemSku": "43Oxt3KY", "itemType": "NjjeiJth"}, {"count": 50, "duration": 74, "endDate": "1972-01-20T00:00:00Z", "itemId": "qNxaP3UA", "itemSku": "lXtaKFI8", "itemType": "4ssv64s7"}], "name": "GuF3IAht", "odds": 0.05555644938826676, "type": "PROBABILITY_GROUP", "weight": 94}], "rollFunction": "DEFAULT"}, "maxCount": 66, "maxCountPerUser": 23, "name": "Iuh0560z", "optionBoxConfig": {"boxItems": [{"count": 31, "duration": 68, "endDate": "1983-07-05T00:00:00Z", "itemId": "wf65fq1c", "itemSku": "EzNHQGyT", "itemType": "x0XEJfbU"}, {"count": 9, "duration": 45, "endDate": "1986-12-03T00:00:00Z", "itemId": "mfDe6BSQ", "itemSku": "eA4gUAKH", "itemType": "I2WDPvYa"}, {"count": 44, "duration": 42, "endDate": "1990-05-30T00:00:00Z", "itemId": "jhe4VSSl", "itemSku": "t7JrIRYr", "itemType": "HHV2wX9N"}]}, "purchasable": false, "recurring": {"cycle": "MONTHLY", "fixedFreeDays": 33, "fixedTrialCycles": 54, "graceDays": 43}, "regionData": {"qw2PqCe8": [{"currencyCode": "Il3UA4C8", "currencyNamespace": "BC8ARuuF", "currencyType": "VIRTUAL", "discountAmount": 26, "discountExpireAt": "1985-04-21T00:00:00Z", "discountPercentage": 94, "discountPurchaseAt": "1980-08-10T00:00:00Z", "expireAt": "1978-01-24T00:00:00Z", "price": 98, "purchaseAt": "1999-10-02T00:00:00Z", "trialPrice": 1}, {"currencyCode": "SBQfekuo", "currencyNamespace": "bihRJiWz", "currencyType": "REAL", "discountAmount": 14, "discountExpireAt": "1978-10-19T00:00:00Z", "discountPercentage": 19, "discountPurchaseAt": "1971-11-05T00:00:00Z", "expireAt": "1972-09-16T00:00:00Z", "price": 70, "purchaseAt": "1986-07-03T00:00:00Z", "trialPrice": 57}, {"currencyCode": "pq5RzvO9", "currencyNamespace": "Dn7zH6Kb", "currencyType": "VIRTUAL", "discountAmount": 74, "discountExpireAt": "1999-12-12T00:00:00Z", "discountPercentage": 62, "discountPurchaseAt": "1994-09-04T00:00:00Z", "expireAt": "1979-06-28T00:00:00Z", "price": 41, "purchaseAt": "1977-12-14T00:00:00Z", "trialPrice": 9}], "4Drw6y2x": [{"currencyCode": "mfatx9aJ", "currencyNamespace": "fjP6yNX6", "currencyType": "REAL", "discountAmount": 47, "discountExpireAt": "1991-04-26T00:00:00Z", "discountPercentage": 45, "discountPurchaseAt": "1996-11-23T00:00:00Z", "expireAt": "1971-10-26T00:00:00Z", "price": 27, "purchaseAt": "1997-09-22T00:00:00Z", "trialPrice": 51}, {"currencyCode": "8og29tlQ", "currencyNamespace": "KBEcLijZ", "currencyType": "REAL", "discountAmount": 81, "discountExpireAt": "1986-05-19T00:00:00Z", "discountPercentage": 1, "discountPurchaseAt": "1999-11-28T00:00:00Z", "expireAt": "1999-01-26T00:00:00Z", "price": 54, "purchaseAt": "1973-06-02T00:00:00Z", "trialPrice": 23}, {"currencyCode": "C1ve4DFg", "currencyNamespace": "fGeWu8Mc", "currencyType": "VIRTUAL", "discountAmount": 32, "discountExpireAt": "1999-06-09T00:00:00Z", "discountPercentage": 36, "discountPurchaseAt": "1978-08-28T00:00:00Z", "expireAt": "1995-10-13T00:00:00Z", "price": 3, "purchaseAt": "1995-09-11T00:00:00Z", "trialPrice": 81}], "IChbdO9I": [{"currencyCode": "wDOx9705", "currencyNamespace": "H3jGsFju", "currencyType": "REAL", "discountAmount": 12, "discountExpireAt": "1992-03-03T00:00:00Z", "discountPercentage": 59, "discountPurchaseAt": "1987-01-22T00:00:00Z", "expireAt": "1977-02-10T00:00:00Z", "price": 77, "purchaseAt": "1975-10-19T00:00:00Z", "trialPrice": 81}, {"currencyCode": "qVen41jN", "currencyNamespace": "LvWzdSAs", "currencyType": "VIRTUAL", "discountAmount": 75, "discountExpireAt": "1989-11-01T00:00:00Z", "discountPercentage": 44, "discountPurchaseAt": "1984-05-04T00:00:00Z", "expireAt": "1989-09-29T00:00:00Z", "price": 9, "purchaseAt": "1976-10-06T00:00:00Z", "trialPrice": 54}, {"currencyCode": "gzzRs1QB", "currencyNamespace": "EOKxolSI", "currencyType": "REAL", "discountAmount": 57, "discountExpireAt": "1986-03-22T00:00:00Z", "discountPercentage": 12, "discountPurchaseAt": "1998-06-15T00:00:00Z", "expireAt": "1984-06-23T00:00:00Z", "price": 52, "purchaseAt": "1989-01-27T00:00:00Z", "trialPrice": 61}]}, "saleConfig": {"currencyCode": "ovdmnvEp", "price": 79}, "seasonType": "PASS", "sectionExclusive": false, "sellable": false, "sku": "dvWvLRN0", "stackable": true, "status": "INACTIVE", "tags": ["fNxuaAyN", "exTjdJYB", "hLDvuVRG"], "targetCurrencyCode": "EI1RSOuW", "targetNamespace": "mjMMoctR", "thumbnailUrl": "dZh5pnrA", "useCount": 60}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateItem \
    --namespace $AB_NAMESPACE \
    --storeId 'WWOZItRF' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 125 'CreateItem' test.out

#- 126 GetItemByAppId
$CLI_EXE \
    --sn platform \
    --op GetItemByAppId \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --storeId '7O34F6Ds' \
    --appId 'GisAysQT' \
    > test.out 2>&1
eval_tap $? 126 'GetItemByAppId' test.out

#- 127 QueryItems
$CLI_EXE \
    --sn platform \
    --op QueryItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --appType 'GAME' \
    --availableDate 'MtLwU7Ke' \
    --baseAppId 'LayfUh29' \
    --categoryPath 'Tn5IQpaq' \
    --features 'GPlirHDL' \
    --includeSubCategoryItem 'true' \
    --itemType 'COINS' \
    --limit '92' \
    --offset '57' \
    --region 'Md9zbe4E' \
    --sortBy '["displayOrder:desc", "updatedAt:desc"]' \
    --storeId 'JHCOGTHt' \
    --tags 'Wh2IOcSO' \
    --targetNamespace 'Tosm3Lie' \
    > test.out 2>&1
eval_tap $? 127 'QueryItems' test.out

#- 128 ListBasicItemsByFeatures
$CLI_EXE \
    --sn platform \
    --op ListBasicItemsByFeatures \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --features '["FTP5psR9", "Wbcpwme9", "coML91wG"]' \
    > test.out 2>&1
eval_tap $? 128 'ListBasicItemsByFeatures' test.out

#- 129 GetItems
$CLI_EXE \
    --sn platform \
    --op GetItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --storeId 'ZinKhHTT' \
    --itemIds 'gmSMRHQk' \
    > test.out 2>&1
eval_tap $? 129 'GetItems' test.out

#- 130 GetItemBySku
$CLI_EXE \
    --sn platform \
    --op GetItemBySku \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --storeId 'vCXZ0Igg' \
    --sku 'Elh7hyZE' \
    > test.out 2>&1
eval_tap $? 130 'GetItemBySku' test.out

#- 131 GetLocaleItemBySku
$CLI_EXE \
    --sn platform \
    --op GetLocaleItemBySku \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --language '4KOEhqBK' \
    --populateBundle 'true' \
    --region 'QCkqjTEr' \
    --storeId '91MLNpD4' \
    --sku 'au8lxHbS' \
    > test.out 2>&1
eval_tap $? 131 'GetLocaleItemBySku' test.out

#- 132 GetEstimatedPrice
$CLI_EXE \
    --sn platform \
    --op GetEstimatedPrice \
    --namespace $AB_NAMESPACE \
    --platform 'WmJwZMxq' \
    --region 'sjEd3s9B' \
    --storeId 'oyw9BfSc' \
    --itemIds 'D10nRCRH' \
    --userId 'Tnz0dQIE' \
    > test.out 2>&1
eval_tap $? 132 'GetEstimatedPrice' test.out

#- 133 GetItemIdBySku
$CLI_EXE \
    --sn platform \
    --op GetItemIdBySku \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --storeId 'NZ9CrxNf' \
    --sku 'olAMGJdP' \
    > test.out 2>&1
eval_tap $? 133 'GetItemIdBySku' test.out

#- 134 GetBulkItemIdBySkus
$CLI_EXE \
    --sn platform \
    --op GetBulkItemIdBySkus \
    --namespace $AB_NAMESPACE \
    --sku '["cojRH9jJ", "QKP5vFqW", "tslUQviF"]' \
    --storeId 'nNSnmX7j' \
    > test.out 2>&1
eval_tap $? 134 'GetBulkItemIdBySkus' test.out

#- 135 BulkGetLocaleItems
$CLI_EXE \
    --sn platform \
    --op BulkGetLocaleItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --language 'NDrXvz10' \
    --region '7PzzhRsV' \
    --storeId 'LQtOgLoW' \
    --itemIds '8huO7THg' \
    > test.out 2>&1
eval_tap $? 135 'BulkGetLocaleItems' test.out

#- 136 GetAvailablePredicateTypes
$CLI_EXE \
    --sn platform \
    --op GetAvailablePredicateTypes \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 136 'GetAvailablePredicateTypes' test.out

#- 137 ValidateItemPurchaseCondition
# body param: body
echo '{"itemIds": ["Flj46lQC", "8jwJOUbF", "L7wLBDqd"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ValidateItemPurchaseCondition \
    --namespace $AB_NAMESPACE \
    --platform 'mK6JadZt' \
    --userId 'buhPHdaE' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 137 'ValidateItemPurchaseCondition' test.out

#- 138 BulkUpdateRegionData
# body param: body
echo '{"changes": [{"itemIdentities": ["W8xsi05t", "kiNYw0kX", "cKln65mL"], "itemIdentityType": "ITEM_SKU", "regionData": {"F9CqeUND": [{"currencyCode": "EPxokfVf", "currencyNamespace": "UpFJD0Pz", "currencyType": "REAL", "discountAmount": 16, "discountExpireAt": "1999-11-23T00:00:00Z", "discountPercentage": 77, "discountPurchaseAt": "1975-02-15T00:00:00Z", "discountedPrice": 35, "expireAt": "1990-10-01T00:00:00Z", "price": 11, "purchaseAt": "1981-08-23T00:00:00Z", "trialPrice": 77}, {"currencyCode": "BxBadBGi", "currencyNamespace": "jCHwsNNi", "currencyType": "VIRTUAL", "discountAmount": 85, "discountExpireAt": "1997-07-27T00:00:00Z", "discountPercentage": 15, "discountPurchaseAt": "1991-03-21T00:00:00Z", "discountedPrice": 29, "expireAt": "1995-05-15T00:00:00Z", "price": 9, "purchaseAt": "1977-02-03T00:00:00Z", "trialPrice": 2}, {"currencyCode": "fVvALJ1L", "currencyNamespace": "Q7ohwSOk", "currencyType": "VIRTUAL", "discountAmount": 79, "discountExpireAt": "1995-11-14T00:00:00Z", "discountPercentage": 6, "discountPurchaseAt": "1989-03-24T00:00:00Z", "discountedPrice": 51, "expireAt": "1991-08-12T00:00:00Z", "price": 31, "purchaseAt": "1996-08-03T00:00:00Z", "trialPrice": 81}], "BeZZjd58": [{"currencyCode": "vvPG94QF", "currencyNamespace": "wVl6I2mK", "currencyType": "REAL", "discountAmount": 93, "discountExpireAt": "1985-02-12T00:00:00Z", "discountPercentage": 0, "discountPurchaseAt": "1978-05-29T00:00:00Z", "discountedPrice": 5, "expireAt": "1982-03-17T00:00:00Z", "price": 43, "purchaseAt": "1995-12-08T00:00:00Z", "trialPrice": 6}, {"currencyCode": "y24JybAS", "currencyNamespace": "Ly6jUfjS", "currencyType": "REAL", "discountAmount": 61, "discountExpireAt": "1979-05-14T00:00:00Z", "discountPercentage": 38, "discountPurchaseAt": "1997-05-12T00:00:00Z", "discountedPrice": 73, "expireAt": "1981-09-03T00:00:00Z", "price": 4, "purchaseAt": "1975-11-22T00:00:00Z", "trialPrice": 57}, {"currencyCode": "0RqEa621", "currencyNamespace": "oGjCyTiu", "currencyType": "VIRTUAL", "discountAmount": 96, "discountExpireAt": "1971-03-24T00:00:00Z", "discountPercentage": 88, "discountPurchaseAt": "1974-11-12T00:00:00Z", "discountedPrice": 68, "expireAt": "1999-03-01T00:00:00Z", "price": 49, "purchaseAt": "1987-10-29T00:00:00Z", "trialPrice": 10}], "kwnkjTev": [{"currencyCode": "eKWplM3o", "currencyNamespace": "WTGsdSOA", "currencyType": "REAL", "discountAmount": 14, "discountExpireAt": "1979-06-22T00:00:00Z", "discountPercentage": 50, "discountPurchaseAt": "1991-12-19T00:00:00Z", "discountedPrice": 82, "expireAt": "1977-11-20T00:00:00Z", "price": 41, "purchaseAt": "1999-01-31T00:00:00Z", "trialPrice": 31}, {"currencyCode": "hnTKnW2d", "currencyNamespace": "KebN9wwQ", "currencyType": "REAL", "discountAmount": 96, "discountExpireAt": "1975-03-25T00:00:00Z", "discountPercentage": 69, "discountPurchaseAt": "1993-05-08T00:00:00Z", "discountedPrice": 37, "expireAt": "1980-09-11T00:00:00Z", "price": 21, "purchaseAt": "1974-03-25T00:00:00Z", "trialPrice": 84}, {"currencyCode": "jAoXFjGT", "currencyNamespace": "ZSJJYgIQ", "currencyType": "REAL", "discountAmount": 34, "discountExpireAt": "1992-07-12T00:00:00Z", "discountPercentage": 77, "discountPurchaseAt": "1981-05-13T00:00:00Z", "discountedPrice": 56, "expireAt": "1991-09-18T00:00:00Z", "price": 64, "purchaseAt": "1983-10-31T00:00:00Z", "trialPrice": 81}]}}, {"itemIdentities": ["UuX2h10d", "98ImRpBe", "Q451w2BB"], "itemIdentityType": "ITEM_SKU", "regionData": {"JtMzhM10": [{"currencyCode": "zgJTOb3o", "currencyNamespace": "p3h0surs", "currencyType": "VIRTUAL", "discountAmount": 65, "discountExpireAt": "1985-12-18T00:00:00Z", "discountPercentage": 95, "discountPurchaseAt": "1990-09-15T00:00:00Z", "discountedPrice": 53, "expireAt": "1987-07-23T00:00:00Z", "price": 75, "purchaseAt": "1986-08-22T00:00:00Z", "trialPrice": 63}, {"currencyCode": "z8pHWW3h", "currencyNamespace": "h5tZ8pqA", "currencyType": "VIRTUAL", "discountAmount": 74, "discountExpireAt": "1980-08-22T00:00:00Z", "discountPercentage": 11, "discountPurchaseAt": "1983-01-10T00:00:00Z", "discountedPrice": 39, "expireAt": "1971-06-12T00:00:00Z", "price": 12, "purchaseAt": "1982-10-24T00:00:00Z", "trialPrice": 30}, {"currencyCode": "4qirgfCb", "currencyNamespace": "Bp4y8t18", "currencyType": "VIRTUAL", "discountAmount": 5, "discountExpireAt": "1984-01-05T00:00:00Z", "discountPercentage": 94, "discountPurchaseAt": "1976-05-08T00:00:00Z", "discountedPrice": 60, "expireAt": "1994-08-10T00:00:00Z", "price": 50, "purchaseAt": "1996-11-26T00:00:00Z", "trialPrice": 84}], "dyDvGdEd": [{"currencyCode": "aHspWHia", "currencyNamespace": "TKJZoYG9", "currencyType": "REAL", "discountAmount": 79, "discountExpireAt": "1987-12-05T00:00:00Z", "discountPercentage": 15, "discountPurchaseAt": "1986-03-11T00:00:00Z", "discountedPrice": 89, "expireAt": "1984-12-03T00:00:00Z", "price": 72, "purchaseAt": "1972-10-02T00:00:00Z", "trialPrice": 44}, {"currencyCode": "ucMH6nUF", "currencyNamespace": "bSODp9IL", "currencyType": "VIRTUAL", "discountAmount": 95, "discountExpireAt": "1993-02-13T00:00:00Z", "discountPercentage": 80, "discountPurchaseAt": "1972-09-02T00:00:00Z", "discountedPrice": 17, "expireAt": "1992-11-01T00:00:00Z", "price": 92, "purchaseAt": "1993-11-15T00:00:00Z", "trialPrice": 49}, {"currencyCode": "gyIWjibz", "currencyNamespace": "YKOthugL", "currencyType": "REAL", "discountAmount": 68, "discountExpireAt": "1999-08-12T00:00:00Z", "discountPercentage": 95, "discountPurchaseAt": "1981-02-18T00:00:00Z", "discountedPrice": 41, "expireAt": "1978-01-17T00:00:00Z", "price": 58, "purchaseAt": "1995-03-27T00:00:00Z", "trialPrice": 32}], "7ZcH4RmV": [{"currencyCode": "88tnaEKk", "currencyNamespace": "7175UvBJ", "currencyType": "VIRTUAL", "discountAmount": 30, "discountExpireAt": "1979-05-19T00:00:00Z", "discountPercentage": 36, "discountPurchaseAt": "1988-10-15T00:00:00Z", "discountedPrice": 90, "expireAt": "1985-02-24T00:00:00Z", "price": 10, "purchaseAt": "1972-07-01T00:00:00Z", "trialPrice": 9}, {"currencyCode": "fcrW1a6C", "currencyNamespace": "jLMxxlZQ", "currencyType": "VIRTUAL", "discountAmount": 56, "discountExpireAt": "1994-02-09T00:00:00Z", "discountPercentage": 80, "discountPurchaseAt": "1979-08-11T00:00:00Z", "discountedPrice": 71, "expireAt": "1973-10-18T00:00:00Z", "price": 65, "purchaseAt": "1980-02-11T00:00:00Z", "trialPrice": 22}, {"currencyCode": "xTHb1wmR", "currencyNamespace": "sGEpWE2Z", "currencyType": "VIRTUAL", "discountAmount": 39, "discountExpireAt": "1993-02-05T00:00:00Z", "discountPercentage": 52, "discountPurchaseAt": "1978-12-28T00:00:00Z", "discountedPrice": 95, "expireAt": "1995-11-11T00:00:00Z", "price": 43, "purchaseAt": "1988-12-22T00:00:00Z", "trialPrice": 59}]}}, {"itemIdentities": ["1OcD93mR", "i7J9Ol8M", "9oYm00Fr"], "itemIdentityType": "ITEM_SKU", "regionData": {"oue33Lsl": [{"currencyCode": "lo0ee0wX", "currencyNamespace": "zLj94Bhc", "currencyType": "VIRTUAL", "discountAmount": 24, "discountExpireAt": "1974-01-07T00:00:00Z", "discountPercentage": 25, "discountPurchaseAt": "1987-05-10T00:00:00Z", "discountedPrice": 0, "expireAt": "1988-11-07T00:00:00Z", "price": 21, "purchaseAt": "1980-11-27T00:00:00Z", "trialPrice": 4}, {"currencyCode": "5L95pfVr", "currencyNamespace": "1dGrQ6WY", "currencyType": "REAL", "discountAmount": 28, "discountExpireAt": "1985-03-09T00:00:00Z", "discountPercentage": 28, "discountPurchaseAt": "1986-11-08T00:00:00Z", "discountedPrice": 38, "expireAt": "1989-08-03T00:00:00Z", "price": 51, "purchaseAt": "1982-02-19T00:00:00Z", "trialPrice": 61}, {"currencyCode": "rbRnPW9T", "currencyNamespace": "zPLjcQ58", "currencyType": "VIRTUAL", "discountAmount": 100, "discountExpireAt": "1991-10-28T00:00:00Z", "discountPercentage": 18, "discountPurchaseAt": "1990-04-28T00:00:00Z", "discountedPrice": 47, "expireAt": "1982-07-02T00:00:00Z", "price": 94, "purchaseAt": "1972-11-19T00:00:00Z", "trialPrice": 0}], "4XwXALa1": [{"currencyCode": "7n6FxTgf", "currencyNamespace": "CVVxzWjt", "currencyType": "VIRTUAL", "discountAmount": 24, "discountExpireAt": "1997-01-14T00:00:00Z", "discountPercentage": 81, "discountPurchaseAt": "1987-07-27T00:00:00Z", "discountedPrice": 98, "expireAt": "1983-01-27T00:00:00Z", "price": 7, "purchaseAt": "1993-01-16T00:00:00Z", "trialPrice": 49}, {"currencyCode": "7OVUKFDr", "currencyNamespace": "P0tnCAsd", "currencyType": "REAL", "discountAmount": 77, "discountExpireAt": "1988-07-09T00:00:00Z", "discountPercentage": 68, "discountPurchaseAt": "1999-08-21T00:00:00Z", "discountedPrice": 46, "expireAt": "1985-10-04T00:00:00Z", "price": 39, "purchaseAt": "1990-07-19T00:00:00Z", "trialPrice": 30}, {"currencyCode": "N1GLibB0", "currencyNamespace": "i5VdVUjH", "currencyType": "REAL", "discountAmount": 9, "discountExpireAt": "1994-11-28T00:00:00Z", "discountPercentage": 43, "discountPurchaseAt": "1991-01-10T00:00:00Z", "discountedPrice": 53, "expireAt": "1984-06-04T00:00:00Z", "price": 49, "purchaseAt": "1979-10-14T00:00:00Z", "trialPrice": 56}], "FcL4SAwd": [{"currencyCode": "2TKJydfq", "currencyNamespace": "wpf2DHzo", "currencyType": "REAL", "discountAmount": 33, "discountExpireAt": "1980-09-14T00:00:00Z", "discountPercentage": 11, "discountPurchaseAt": "1975-04-18T00:00:00Z", "discountedPrice": 92, "expireAt": "1982-09-03T00:00:00Z", "price": 27, "purchaseAt": "1984-07-19T00:00:00Z", "trialPrice": 94}, {"currencyCode": "hLJzX51J", "currencyNamespace": "saThMqcI", "currencyType": "REAL", "discountAmount": 60, "discountExpireAt": "1991-09-02T00:00:00Z", "discountPercentage": 28, "discountPurchaseAt": "1973-05-26T00:00:00Z", "discountedPrice": 82, "expireAt": "1999-07-10T00:00:00Z", "price": 96, "purchaseAt": "1991-05-12T00:00:00Z", "trialPrice": 15}, {"currencyCode": "zt8S3jQj", "currencyNamespace": "eWnWRZLP", "currencyType": "REAL", "discountAmount": 90, "discountExpireAt": "1984-02-07T00:00:00Z", "discountPercentage": 22, "discountPurchaseAt": "1998-04-27T00:00:00Z", "discountedPrice": 20, "expireAt": "1975-04-18T00:00:00Z", "price": 58, "purchaseAt": "1975-01-23T00:00:00Z", "trialPrice": 43}]}}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op BulkUpdateRegionData \
    --namespace $AB_NAMESPACE \
    --storeId 'ILix6XKp' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 138 'BulkUpdateRegionData' test.out

#- 139 SearchItems
$CLI_EXE \
    --sn platform \
    --op SearchItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --itemType 'MEDIA' \
    --limit '100' \
    --offset '65' \
    --sortBy 'cWvssG91' \
    --storeId 'ImADCi09' \
    --keyword 'ULKN3v7W' \
    --language 'pry9God5' \
    > test.out 2>&1
eval_tap $? 139 'SearchItems' test.out

#- 140 QueryUncategorizedItems
$CLI_EXE \
    --sn platform \
    --op QueryUncategorizedItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --limit '15' \
    --offset '93' \
    --sortBy '["displayOrder", "displayOrder:asc", "updatedAt:asc"]' \
    --storeId 'IvS4YDK5' \
    > test.out 2>&1
eval_tap $? 140 'QueryUncategorizedItems' test.out

#- 141 GetItem
$CLI_EXE \
    --sn platform \
    --op GetItem \
    --itemId 'llrHb0YY' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --storeId '0vHJasol' \
    > test.out 2>&1
eval_tap $? 141 'GetItem' test.out

#- 142 UpdateItem
# body param: body
echo '{"appId": "8n8xz4ck", "appType": "SOFTWARE", "baseAppId": "mc5FEbCa", "boothName": "CAuaqoYR", "categoryPath": "rJJfrzPg", "clazz": "RkM8BJ7T", "displayOrder": 100, "entitlementType": "CONSUMABLE", "ext": {"YjTL2drA": {}, "ZI8pqdvW": {}, "e4Wzp72U": {}}, "features": ["UZLqVxXf", "96M3oVnK", "uGlieSpf"], "flexible": false, "images": [{"as": "pY9emsQ6", "caption": "vlQJl2ul", "height": 50, "imageUrl": "6WFyuLyi", "smallImageUrl": "W5pLdCug", "width": 6}, {"as": "yJ89HdHG", "caption": "V60mGLGT", "height": 66, "imageUrl": "IuPG3Brh", "smallImageUrl": "N1jdVAY2", "width": 99}, {"as": "7lDAlyno", "caption": "UdEtVUmD", "height": 49, "imageUrl": "e54dl5C3", "smallImageUrl": "YwnhzN44", "width": 96}], "inventoryConfig": {"customAttributes": {"Rw2nEcux": {}, "fm2mq9Tv": {}, "oj46eGK1": {}}, "serverCustomAttributes": {"FfxbW61x": {}, "Qzine2xJ": {}, "ypZKODlv": {}}, "slotUsed": 10}, "itemIds": ["CmzCpa9q", "BxFieF6W", "LWsHFDWN"], "itemQty": {"olSKAG32": 9, "Y0KIfYVR": 97, "w3Llbntr": 14}, "itemType": "SUBSCRIPTION", "listable": true, "localizations": {"czEOLzYH": {"description": "eDc3VePr", "localExt": {"IxPedCrS": {}, "mRONbOmL": {}, "CdTybjcs": {}}, "longDescription": "zFpe0xZB", "title": "ljxvp1xI"}, "M3v67d6u": {"description": "LMxB4cHP", "localExt": {"my3B7rIW": {}, "kNFFp4B0": {}, "WquJlvMb": {}}, "longDescription": "lsRaMNTE", "title": "KclyKA63"}, "5fggluhE": {"description": "K82holjG", "localExt": {"XgPAXjMN": {}, "4ta87RLr": {}, "wm1ZaK4x": {}}, "longDescription": "b4pibmnB", "title": "CPhxLega"}}, "lootBoxConfig": {"rewardCount": 22, "rewards": [{"lootBoxItems": [{"count": 69, "duration": 33, "endDate": "1978-02-13T00:00:00Z", "itemId": "BpspISqQ", "itemSku": "GnjcQXq6", "itemType": "3sQ2kQCz"}, {"count": 13, "duration": 92, "endDate": "1981-09-25T00:00:00Z", "itemId": "jPbcipQZ", "itemSku": "ACHqKfPu", "itemType": "mRj75Ita"}, {"count": 89, "duration": 53, "endDate": "1999-01-29T00:00:00Z", "itemId": "fVlKlwTM", "itemSku": "I9LPUkCt", "itemType": "BH4qHdHG"}], "name": "PoDawphN", "odds": 0.20194888068451677, "type": "REWARD", "weight": 27}, {"lootBoxItems": [{"count": 86, "duration": 84, "endDate": "1999-11-12T00:00:00Z", "itemId": "varAtKVQ", "itemSku": "O1siclkp", "itemType": "QWC14xHz"}, {"count": 75, "duration": 81, "endDate": "1973-05-31T00:00:00Z", "itemId": "KB4b3tG0", "itemSku": "hhuJLWgG", "itemType": "544ftbHp"}, {"count": 91, "duration": 69, "endDate": "1990-05-08T00:00:00Z", "itemId": "xfojZAUx", "itemSku": "nYASW9Jn", "itemType": "bxfBOucD"}], "name": "CUMpMML6", "odds": 0.8680538479421974, "type": "PROBABILITY_GROUP", "weight": 26}, {"lootBoxItems": [{"count": 52, "duration": 93, "endDate": "1978-04-16T00:00:00Z", "itemId": "tZN5aWX2", "itemSku": "QbyL3sqg", "itemType": "C7vs6ZG2"}, {"count": 0, "duration": 93, "endDate": "1988-06-07T00:00:00Z", "itemId": "MiW21MBR", "itemSku": "2PgWE9aX", "itemType": "DaXx2z4R"}, {"count": 41, "duration": 74, "endDate": "1978-08-22T00:00:00Z", "itemId": "buHKyPRR", "itemSku": "8Z1ESWLI", "itemType": "uVLEYvNL"}], "name": "Kpv0wjJ3", "odds": 0.8674572843314219, "type": "PROBABILITY_GROUP", "weight": 47}], "rollFunction": "CUSTOM"}, "maxCount": 15, "maxCountPerUser": 98, "name": "wfcJ7yS0", "optionBoxConfig": {"boxItems": [{"count": 75, "duration": 21, "endDate": "1976-12-19T00:00:00Z", "itemId": "78fkCUlE", "itemSku": "D8PvyS5Q", "itemType": "7t7TUZsc"}, {"count": 74, "duration": 73, "endDate": "1988-10-14T00:00:00Z", "itemId": "SP4Pu0VB", "itemSku": "PMw4uA67", "itemType": "6YEPRbxT"}, {"count": 33, "duration": 13, "endDate": "1973-01-23T00:00:00Z", "itemId": "3eOLmxbO", "itemSku": "sG1KeKJV", "itemType": "4trDH9JX"}]}, "purchasable": true, "recurring": {"cycle": "YEARLY", "fixedFreeDays": 37, "fixedTrialCycles": 90, "graceDays": 21}, "regionData": {"2ofSLruZ": [{"currencyCode": "202B44n2", "currencyNamespace": "hSARGVzH", "currencyType": "VIRTUAL", "discountAmount": 44, "discountExpireAt": "1996-10-27T00:00:00Z", "discountPercentage": 43, "discountPurchaseAt": "1994-02-11T00:00:00Z", "expireAt": "1993-04-23T00:00:00Z", "price": 36, "purchaseAt": "1973-03-14T00:00:00Z", "trialPrice": 22}, {"currencyCode": "kc9W3Ivp", "currencyNamespace": "5qPK5R0u", "currencyType": "REAL", "discountAmount": 33, "discountExpireAt": "1990-05-25T00:00:00Z", "discountPercentage": 95, "discountPurchaseAt": "1980-01-14T00:00:00Z", "expireAt": "1997-10-17T00:00:00Z", "price": 94, "purchaseAt": "1992-11-08T00:00:00Z", "trialPrice": 75}, {"currencyCode": "gaQ5mRYb", "currencyNamespace": "ogP29Ush", "currencyType": "REAL", "discountAmount": 5, "discountExpireAt": "1980-06-21T00:00:00Z", "discountPercentage": 71, "discountPurchaseAt": "1996-08-02T00:00:00Z", "expireAt": "1985-05-09T00:00:00Z", "price": 63, "purchaseAt": "1976-04-10T00:00:00Z", "trialPrice": 93}], "ol9Py4Et": [{"currencyCode": "QJB2JuR2", "currencyNamespace": "VpFmG307", "currencyType": "REAL", "discountAmount": 18, "discountExpireAt": "1995-05-20T00:00:00Z", "discountPercentage": 29, "discountPurchaseAt": "1972-05-23T00:00:00Z", "expireAt": "1971-03-31T00:00:00Z", "price": 84, "purchaseAt": "1978-10-16T00:00:00Z", "trialPrice": 52}, {"currencyCode": "n8iDaYEW", "currencyNamespace": "Ko01oWEu", "currencyType": "VIRTUAL", "discountAmount": 72, "discountExpireAt": "1983-03-27T00:00:00Z", "discountPercentage": 82, "discountPurchaseAt": "1992-06-14T00:00:00Z", "expireAt": "1984-06-02T00:00:00Z", "price": 6, "purchaseAt": "1992-03-22T00:00:00Z", "trialPrice": 1}, {"currencyCode": "txWt2BET", "currencyNamespace": "DARwEmXO", "currencyType": "REAL", "discountAmount": 86, "discountExpireAt": "1976-02-10T00:00:00Z", "discountPercentage": 4, "discountPurchaseAt": "1995-02-05T00:00:00Z", "expireAt": "1990-11-30T00:00:00Z", "price": 73, "purchaseAt": "1999-07-18T00:00:00Z", "trialPrice": 77}], "3v0eVcBD": [{"currencyCode": "VPJtPd30", "currencyNamespace": "bFNOOc0S", "currencyType": "REAL", "discountAmount": 5, "discountExpireAt": "1994-05-29T00:00:00Z", "discountPercentage": 72, "discountPurchaseAt": "1979-01-23T00:00:00Z", "expireAt": "1975-01-05T00:00:00Z", "price": 90, "purchaseAt": "1976-05-13T00:00:00Z", "trialPrice": 44}, {"currencyCode": "ZKxBTezD", "currencyNamespace": "k1wZb0Jw", "currencyType": "VIRTUAL", "discountAmount": 87, "discountExpireAt": "1992-04-22T00:00:00Z", "discountPercentage": 70, "discountPurchaseAt": "1990-09-09T00:00:00Z", "expireAt": "1992-05-07T00:00:00Z", "price": 72, "purchaseAt": "1976-04-26T00:00:00Z", "trialPrice": 82}, {"currencyCode": "2BGbRiPa", "currencyNamespace": "xlVjywbp", "currencyType": "VIRTUAL", "discountAmount": 5, "discountExpireAt": "1973-04-19T00:00:00Z", "discountPercentage": 27, "discountPurchaseAt": "1977-12-19T00:00:00Z", "expireAt": "1985-09-08T00:00:00Z", "price": 75, "purchaseAt": "1985-03-27T00:00:00Z", "trialPrice": 57}]}, "saleConfig": {"currencyCode": "LzX816x8", "price": 68}, "seasonType": "PASS", "sectionExclusive": true, "sellable": true, "sku": "O2DZtLFL", "stackable": false, "status": "INACTIVE", "tags": ["HUjvwO95", "930zlFSK", "1bVWQzEo"], "targetCurrencyCode": "JHqOiahL", "targetNamespace": "ykAINb8N", "thumbnailUrl": "5iFj2yxI", "useCount": 36}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateItem \
    --itemId 'sVzGyjmk' \
    --namespace $AB_NAMESPACE \
    --storeId 'A6dQLwWb' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 142 'UpdateItem' test.out

#- 143 DeleteItem
$CLI_EXE \
    --sn platform \
    --op DeleteItem \
    --itemId 'nsIjah60' \
    --namespace $AB_NAMESPACE \
    --featuresToCheck '["REWARD", "CAMPAIGN", "REWARD"]' \
    --force 'true' \
    --storeId 'G4ABxl22' \
    > test.out 2>&1
eval_tap $? 143 'DeleteItem' test.out

#- 144 AcquireItem
# body param: body
echo '{"count": 8, "orderNo": "2gFowvDm"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op AcquireItem \
    --itemId 'WPYgGJcv' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 144 'AcquireItem' test.out

#- 145 GetApp
$CLI_EXE \
    --sn platform \
    --op GetApp \
    --itemId 'bdPZFMj6' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --storeId 'crORPVyd' \
    > test.out 2>&1
eval_tap $? 145 'GetApp' test.out

#- 146 UpdateApp
# body param: body
echo '{"carousel": [{"alt": "JQqIQoWx", "previewUrl": "71FM0R0Q", "thumbnailUrl": "7SLM7d99", "type": "video", "url": "HjMc3JTk", "videoSource": "youtube"}, {"alt": "j6yCnPQf", "previewUrl": "7c3aJ4NE", "thumbnailUrl": "ukpXuZwF", "type": "image", "url": "CsYOnGP6", "videoSource": "generic"}, {"alt": "kFrGnea1", "previewUrl": "HFMYZ4lL", "thumbnailUrl": "TgkjRCHY", "type": "image", "url": "kRnDPeKg", "videoSource": "youtube"}], "developer": "rYroFSpF", "forumUrl": "nEO9kLNs", "genres": ["Action", "Sports", "MassivelyMultiplayer"], "localizations": {"w17GjNzw": {"announcement": "rnAbDynU", "slogan": "y4dEgLC4"}, "UEQGiZsS": {"announcement": "4hXMY3dX", "slogan": "neOkcn6O"}, "dnYFWQiV": {"announcement": "P46bYJwe", "slogan": "jA4lAB93"}}, "platformRequirements": {"dcHTwdFJ": [{"additionals": "cSc7sDas", "directXVersion": "HoXfe7qj", "diskSpace": "k3xfya2N", "graphics": "Qf51AiIY", "label": "znWBcuC9", "osVersion": "z8MJxEUn", "processor": "PLoIvvEg", "ram": "oC2oNeK5", "soundCard": "1S2iUnYB"}, {"additionals": "dvl0cAXB", "directXVersion": "uuRqG8go", "diskSpace": "zA0m5LPE", "graphics": "AkLCiyVn", "label": "2tud0ufO", "osVersion": "l35XZ2nU", "processor": "WAdko3DI", "ram": "m4i7atTC", "soundCard": "oJGyxuXk"}, {"additionals": "Lt9VqqnF", "directXVersion": "AcJ3LEEN", "diskSpace": "WnkxVMhy", "graphics": "w5qolFO3", "label": "KysMlkc2", "osVersion": "nmEsFBZM", "processor": "32NKdUqj", "ram": "Jvyw2NS9", "soundCard": "nFt6wiQJ"}], "O8aAfw7O": [{"additionals": "0rnjploU", "directXVersion": "QPDJm48z", "diskSpace": "M65ItzJP", "graphics": "1ERfK6Pa", "label": "D8CvXFes", "osVersion": "Os9OMCz4", "processor": "38FViZHo", "ram": "w24KGoDC", "soundCard": "RmfTDBbx"}, {"additionals": "7l0YaLeC", "directXVersion": "WqqOtOjX", "diskSpace": "uPgD4m76", "graphics": "8IfogPWx", "label": "sJ6ls16V", "osVersion": "34heILvD", "processor": "N7V7i0vM", "ram": "G4Q6FBBH", "soundCard": "ciFL6kik"}, {"additionals": "zgeu7PhQ", "directXVersion": "w13DDZBG", "diskSpace": "wL5VabU0", "graphics": "dYyAjIZM", "label": "CMT6SWCv", "osVersion": "RJzDddsk", "processor": "jU1JN30N", "ram": "wXPHjPWa", "soundCard": "b5d3VVRC"}], "brLV3fdO": [{"additionals": "OIYj2ORn", "directXVersion": "2S4n7L1J", "diskSpace": "M04wWxiV", "graphics": "rrryAdp8", "label": "QdJhce0y", "osVersion": "fBi84kFL", "processor": "nRl56TJt", "ram": "1slwfsFw", "soundCard": "zl3bb4lR"}, {"additionals": "7ClBqKMH", "directXVersion": "K3GiX36O", "diskSpace": "YZYTgtD2", "graphics": "SiZzUsBi", "label": "Xy3Dsv9B", "osVersion": "qIc0M1QJ", "processor": "1gp9FMpx", "ram": "OMVDmPap", "soundCard": "OU7Yy71w"}, {"additionals": "qpOeqpGe", "directXVersion": "6twgBtQw", "diskSpace": "kHE19lPR", "graphics": "CklQiymp", "label": "oYShfVMq", "osVersion": "h4eylddf", "processor": "CXfB5S5A", "ram": "tErusWlq", "soundCard": "X0GC3RNz"}]}, "platforms": ["Linux", "Windows", "Android"], "players": ["Multi", "MMO", "Coop"], "primaryGenre": "Racing", "publisher": "bLyEDNTY", "releaseDate": "1976-09-08T00:00:00Z", "websiteUrl": "pOkwMpkG"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateApp \
    --itemId 'hNxukIA8' \
    --namespace $AB_NAMESPACE \
    --storeId 'uFpkOHaZ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 146 'UpdateApp' test.out

#- 147 DisableItem
# body param: body
echo '{"featuresToCheck": ["CATALOG", "DLC", "REWARD"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op DisableItem \
    --itemId 'FdxC5rgw' \
    --namespace $AB_NAMESPACE \
    --storeId 'HNCnLbYF' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 147 'DisableItem' test.out

#- 148 GetItemDynamicData
$CLI_EXE \
    --sn platform \
    --op GetItemDynamicData \
    --itemId 'XIzCoMz2' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 148 'GetItemDynamicData' test.out

#- 149 EnableItem
$CLI_EXE \
    --sn platform \
    --op EnableItem \
    --itemId 'QgA3dpqN' \
    --namespace $AB_NAMESPACE \
    --storeId 'oUYynf3g' \
    > test.out 2>&1
eval_tap $? 149 'EnableItem' test.out

#- 150 FeatureItem
$CLI_EXE \
    --sn platform \
    --op FeatureItem \
    --feature 'HpvJonSY' \
    --itemId 'xQtViwPf' \
    --namespace $AB_NAMESPACE \
    --storeId 'tgj60WEy' \
    > test.out 2>&1
eval_tap $? 150 'FeatureItem' test.out

#- 151 DefeatureItem
$CLI_EXE \
    --sn platform \
    --op DefeatureItem \
    --feature 'b3uXg4Xq' \
    --itemId 'xO3zfDqV' \
    --namespace $AB_NAMESPACE \
    --storeId 'aU9fmabo' \
    > test.out 2>&1
eval_tap $? 151 'DefeatureItem' test.out

#- 152 GetLocaleItem
$CLI_EXE \
    --sn platform \
    --op GetLocaleItem \
    --itemId 'diJ0Jadk' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --language 'uE8V0CTX' \
    --populateBundle 'true' \
    --region 'DmEJUH96' \
    --storeId 'lpmA2ghi' \
    > test.out 2>&1
eval_tap $? 152 'GetLocaleItem' test.out

#- 153 UpdateItemPurchaseCondition
# body param: body
echo '{"purchaseCondition": {"conditionGroups": [{"operator": "and", "predicates": [{"anyOf": 65, "code": "jLvcZxCh", "comparison": "includes", "name": "GvER0YFC", "predicateType": "SeasonTierPredicate", "value": "uwOhvqRu", "values": ["WokbzojT", "uqKELn2a", "iWtzvlZ3"]}, {"anyOf": 10, "code": "kli9KskQ", "comparison": "isLessThan", "name": "IA91DT5v", "predicateType": "EntitlementPredicate", "value": "ELznU6Bk", "values": ["6jz5LejV", "wLJvo2yG", "DNhnzO3s"]}, {"anyOf": 57, "code": "INSg7SBQ", "comparison": "isNot", "name": "3OTNFTdj", "predicateType": "SeasonPassPredicate", "value": "IktggspQ", "values": ["OVFIA5yg", "QQCDlHUP", "ysljxkG4"]}]}, {"operator": "and", "predicates": [{"anyOf": 84, "code": "MKQ4vs2u", "comparison": "includes", "name": "2C4J3zOt", "predicateType": "SeasonTierPredicate", "value": "WAhRkrzS", "values": ["KkLXo88R", "T6BAuuqY", "7Fb94ZGy"]}, {"anyOf": 87, "code": "rqZgrWaz", "comparison": "isNot", "name": "PmcxFIb7", "predicateType": "StatisticCodePredicate", "value": "rDk7ZTXT", "values": ["CDCksakQ", "bHKwLXKB", "vASqGXeB"]}, {"anyOf": 39, "code": "p1nCsftE", "comparison": "is", "name": "HlH9vDmh", "predicateType": "SeasonPassPredicate", "value": "HLlkU4e5", "values": ["HUUpOLpx", "hATILEN2", "PTNQWnJ1"]}]}, {"operator": "and", "predicates": [{"anyOf": 68, "code": "xcr8ZiZ8", "comparison": "isLessThanOrEqual", "name": "iBhg8mPN", "predicateType": "StatisticCodePredicate", "value": "GnF1FSiW", "values": ["cd4JKeHB", "OQXC3z1S", "UMkCdXnt"]}, {"anyOf": 77, "code": "1iqAnxjo", "comparison": "is", "name": "VByCuvQh", "predicateType": "StatisticCodePredicate", "value": "3gZpis7h", "values": ["afjbh1XI", "cNrDWd9w", "vrxmUv29"]}, {"anyOf": 88, "code": "ph1y3xsl", "comparison": "excludes", "name": "bBt48IKA", "predicateType": "SeasonPassPredicate", "value": "dVbL6gjz", "values": ["P10gFLqG", "PghCQi3B", "sSXBYGMT"]}]}]}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateItemPurchaseCondition \
    --itemId 'clsKTc0Y' \
    --namespace $AB_NAMESPACE \
    --storeId 'rrKSBOlA' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 153 'UpdateItemPurchaseCondition' test.out

#- 154 QueryItemReferences
$CLI_EXE \
    --sn platform \
    --op QueryItemReferences \
    --itemId 'PdPJCKIh' \
    --namespace $AB_NAMESPACE \
    --featuresToCheck '["DLC", "DLC", "REWARD"]' \
    --storeId 'Yj2BYymY' \
    > test.out 2>&1
eval_tap $? 154 'QueryItemReferences' test.out

#- 155 ReturnItem
# body param: body
echo '{"orderNo": "08gZwhqn"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ReturnItem \
    --itemId 'YhErmGYb' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 155 'ReturnItem' test.out

#- 156 QueryKeyGroups
$CLI_EXE \
    --sn platform \
    --op QueryKeyGroups \
    --namespace $AB_NAMESPACE \
    --limit '57' \
    --name 'WxJ34RQL' \
    --offset '26' \
    --tag 'QWolmCAC' \
    > test.out 2>&1
eval_tap $? 156 'QueryKeyGroups' test.out

#- 157 CreateKeyGroup
# body param: body
echo '{"description": "4Qm2SRNz", "name": "A9T8ostP", "status": "ACTIVE", "tags": ["ZAe5MWm5", "Q7sQ0nJ9", "yLESBQLk"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateKeyGroup \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 157 'CreateKeyGroup' test.out

#- 158 GetKeyGroupByBoothName
eval_tap 0 158 'GetKeyGroupByBoothName # SKIP deprecated' test.out

#- 159 GetKeyGroup
$CLI_EXE \
    --sn platform \
    --op GetKeyGroup \
    --keyGroupId '8mDg0VHx' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 159 'GetKeyGroup' test.out

#- 160 UpdateKeyGroup
# body param: body
echo '{"description": "PuLfB842", "name": "fMDpLPjH", "status": "INACTIVE", "tags": ["ssISPMRa", "v7eJqq2a", "X8WZmZaQ"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateKeyGroup \
    --keyGroupId 'sKTKT0f8' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 160 'UpdateKeyGroup' test.out

#- 161 GetKeyGroupDynamic
$CLI_EXE \
    --sn platform \
    --op GetKeyGroupDynamic \
    --keyGroupId '7JM5HDNw' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 161 'GetKeyGroupDynamic' test.out

#- 162 ListKeys
$CLI_EXE \
    --sn platform \
    --op ListKeys \
    --keyGroupId '4vtbKfIb' \
    --namespace $AB_NAMESPACE \
    --limit '44' \
    --offset '56' \
    --status 'ACQUIRED' \
    > test.out 2>&1
eval_tap $? 162 'ListKeys' test.out

#- 163 UploadKeys
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UploadKeys \
    --keyGroupId 'w1eSraXa' \
    --namespace $AB_NAMESPACE \
    --upload file $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 163 'UploadKeys' test.out

#- 164 QueryOrders
$CLI_EXE \
    --sn platform \
    --op QueryOrders \
    --namespace $AB_NAMESPACE \
    --endTime 'EQn3ACLW' \
    --limit '95' \
    --offset '94' \
    --orderNos '["32loy0YC", "fP3rV467", "Eo4hVPCQ"]' \
    --sortBy 'iDdnzp8R' \
    --startTime '5CwgdBQm' \
    --status 'REFUNDING' \
    --withTotal 'true' \
    > test.out 2>&1
eval_tap $? 164 'QueryOrders' test.out

#- 165 GetOrderStatistics
$CLI_EXE \
    --sn platform \
    --op GetOrderStatistics \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 165 'GetOrderStatistics' test.out

#- 166 GetOrder
$CLI_EXE \
    --sn platform \
    --op GetOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'pHvNAPdV' \
    > test.out 2>&1
eval_tap $? 166 'GetOrder' test.out

#- 167 RefundOrder
# body param: body
echo '{"description": "4H9oiKgZ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RefundOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'nl0I8U1p' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 167 'RefundOrder' test.out

#- 168 GetPaymentCallbackConfig
eval_tap 0 168 'GetPaymentCallbackConfig # SKIP deprecated' test.out

#- 169 UpdatePaymentCallbackConfig
eval_tap 0 169 'UpdatePaymentCallbackConfig # SKIP deprecated' test.out

#- 170 GetPaymentMerchantConfig
$CLI_EXE \
    --sn platform \
    --op GetPaymentMerchantConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 170 'GetPaymentMerchantConfig' test.out

#- 171 UpdatePaymentDomainWhitelistConfig
# body param: body
echo '{"domains": ["xV6LE64v", "rnOxh0GC", "omJt4Azc"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePaymentDomainWhitelistConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 171 'UpdatePaymentDomainWhitelistConfig' test.out

#- 172 QueryPaymentNotifications
$CLI_EXE \
    --sn platform \
    --op QueryPaymentNotifications \
    --namespace $AB_NAMESPACE \
    --endDate '5wBn0pnt' \
    --externalId 'xzLgi6oZ' \
    --limit '82' \
    --notificationSource 'XSOLLA' \
    --notificationType 'nX37liUY' \
    --offset '69' \
    --paymentOrderNo 'uDOhHIdX' \
    --startDate 'YnWJGrVn' \
    --status 'ERROR' \
    > test.out 2>&1
eval_tap $? 172 'QueryPaymentNotifications' test.out

#- 173 QueryPaymentOrders
$CLI_EXE \
    --sn platform \
    --op QueryPaymentOrders \
    --namespace $AB_NAMESPACE \
    --channel 'INTERNAL' \
    --extTxId 't6rr2Cw0' \
    --limit '7' \
    --offset '57' \
    --status 'CHARGED' \
    > test.out 2>&1
eval_tap $? 173 'QueryPaymentOrders' test.out

#- 174 CreatePaymentOrderByDedicated
# body param: body
echo '{"currencyCode": "qDARQ9UV", "currencyNamespace": "3n1XdG23", "customParameters": {"jpz3zxGD": {}, "DrNqnq3z": {}, "XEyV0TZR": {}}, "description": "U6OuktMf", "extOrderNo": "kPNsIhaw", "extUserId": "2jG7U72f", "itemType": "COINS", "language": "UPQk-AkHg", "metadata": {"gefmYAAx": "4LoZ0SPr", "iecc51YE": "sYthV0rK", "RxGrDySl": "V1bxmpo6"}, "notifyUrl": "Km3RSf6l", "omitNotification": true, "platform": "ThWdTP7T", "price": 81, "recurringPaymentOrderNo": "xTvdHBlZ", "region": "lyJVGy0u", "returnUrl": "g7yu7esC", "sandbox": true, "sku": "y9r6qCha", "subscriptionId": "hPtGSUn6", "targetNamespace": "VpnD1lhI", "targetUserId": "McL5xeRS", "title": "lUHnL2ym"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreatePaymentOrderByDedicated \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 174 'CreatePaymentOrderByDedicated' test.out

#- 175 ListExtOrderNoByExtTxId
$CLI_EXE \
    --sn platform \
    --op ListExtOrderNoByExtTxId \
    --namespace $AB_NAMESPACE \
    --extTxId '9etVejoY' \
    > test.out 2>&1
eval_tap $? 175 'ListExtOrderNoByExtTxId' test.out

#- 176 GetPaymentOrder
$CLI_EXE \
    --sn platform \
    --op GetPaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'BkkiJuGW' \
    > test.out 2>&1
eval_tap $? 176 'GetPaymentOrder' test.out

#- 177 ChargePaymentOrder
# body param: body
echo '{"extTxId": "4Tq0vjQa", "paymentMethod": "UjJMTGIb", "paymentProvider": "ADYEN"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ChargePaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'Nmuv0pjy' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 177 'ChargePaymentOrder' test.out

#- 178 RefundPaymentOrderByDedicated
# body param: body
echo '{"description": "qv13h2MB"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RefundPaymentOrderByDedicated \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'qNZhp1bg' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 178 'RefundPaymentOrderByDedicated' test.out

#- 179 SimulatePaymentOrderNotification
# body param: body
echo '{"amount": 44, "currencyCode": "8IVJJGzI", "notifyType": "CHARGE", "paymentProvider": "CHECKOUT", "salesTax": 37, "vat": 67}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SimulatePaymentOrderNotification \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'Sn4FoNOg' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 179 'SimulatePaymentOrderNotification' test.out

#- 180 GetPaymentOrderChargeStatus
$CLI_EXE \
    --sn platform \
    --op GetPaymentOrderChargeStatus \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'Rs8okajI' \
    > test.out 2>&1
eval_tap $? 180 'GetPaymentOrderChargeStatus' test.out

#- 181 GetPsnEntitlementOwnership
# body param: body
echo '{"accessToken": "w2BeAVWZ", "serviceLabel": 66}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op GetPsnEntitlementOwnership \
    --entitlementLabel 'qPGUeDWQ' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 181 'GetPsnEntitlementOwnership' test.out

#- 182 GetXboxEntitlementOwnership
# body param: body
echo '{"delegationToken": "kw4xc2k4", "sandboxId": "Rp4tB0aR"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op GetXboxEntitlementOwnership \
    --namespace $AB_NAMESPACE \
    --productSku 'yO8UUwf1' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 182 'GetXboxEntitlementOwnership' test.out

#- 183 GetPlatformEntitlementConfig
$CLI_EXE \
    --sn platform \
    --op GetPlatformEntitlementConfig \
    --namespace $AB_NAMESPACE \
    --platform 'Xbox' \
    > test.out 2>&1
eval_tap $? 183 'GetPlatformEntitlementConfig' test.out

#- 184 UpdatePlatformEntitlementConfig
# body param: body
echo '{"allowedPlatformOrigins": ["System", "Xbox", "GooglePlay"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePlatformEntitlementConfig \
    --namespace $AB_NAMESPACE \
    --platform 'GooglePlay' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 184 'UpdatePlatformEntitlementConfig' test.out

#- 185 GetPlatformWalletConfig
$CLI_EXE \
    --sn platform \
    --op GetPlatformWalletConfig \
    --namespace $AB_NAMESPACE \
    --platform 'GooglePlay' \
    > test.out 2>&1
eval_tap $? 185 'GetPlatformWalletConfig' test.out

#- 186 UpdatePlatformWalletConfig
# body param: body
echo '{"allowedBalanceOrigins": ["Steam", "Steam", "IOS"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePlatformWalletConfig \
    --namespace $AB_NAMESPACE \
    --platform 'Playstation' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 186 'UpdatePlatformWalletConfig' test.out

#- 187 ResetPlatformWalletConfig
$CLI_EXE \
    --sn platform \
    --op ResetPlatformWalletConfig \
    --namespace $AB_NAMESPACE \
    --platform 'Oculus' \
    > test.out 2>&1
eval_tap $? 187 'ResetPlatformWalletConfig' test.out

#- 188 GetRevocationConfig
$CLI_EXE \
    --sn platform \
    --op GetRevocationConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 188 'GetRevocationConfig' test.out

#- 189 UpdateRevocationConfig
# body param: body
echo '{"entitlement": {"consumable": {"enabled": false, "strategy": "REVOKE_OR_REPORT"}, "durable": {"enabled": false, "strategy": "REVOKE_OR_REPORT"}}, "wallet": {"enabled": true, "strategy": "ALWAYS_REVOKE"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateRevocationConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 189 'UpdateRevocationConfig' test.out

#- 190 DeleteRevocationConfig
$CLI_EXE \
    --sn platform \
    --op DeleteRevocationConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 190 'DeleteRevocationConfig' test.out

#- 191 QueryRevocationHistories
$CLI_EXE \
    --sn platform \
    --op QueryRevocationHistories \
    --namespace $AB_NAMESPACE \
    --endTime '3vVsWCAJ' \
    --limit '91' \
    --offset '18' \
    --source 'DLC' \
    --startTime 'emoC8bbY' \
    --status 'SUCCESS' \
    --transactionId 'jTzwG0Yg' \
    --userId 'VmaAFGBl' \
    > test.out 2>&1
eval_tap $? 191 'QueryRevocationHistories' test.out

#- 192 GetRevocationPluginConfig
$CLI_EXE \
    --sn platform \
    --op GetRevocationPluginConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 192 'GetRevocationPluginConfig' test.out

#- 193 UpdateRevocationPluginConfig
# body param: body
echo '{"appConfig": {"appName": "mnKVXNZW"}, "customConfig": {"connectionType": "TLS", "grpcServerAddress": "ZefMeAR5"}, "extendType": "CUSTOM"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateRevocationPluginConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 193 'UpdateRevocationPluginConfig' test.out

#- 194 DeleteRevocationPluginConfig
$CLI_EXE \
    --sn platform \
    --op DeleteRevocationPluginConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 194 'DeleteRevocationPluginConfig' test.out

#- 195 UploadRevocationPluginConfigCert
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UploadRevocationPluginConfigCert \
    --namespace $AB_NAMESPACE \
    --upload file $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 195 'UploadRevocationPluginConfigCert' test.out

#- 196 CreateReward
# body param: body
echo '{"description": "bO3kpSpx", "eventTopic": "9Qaai8KB", "maxAwarded": 64, "maxAwardedPerUser": 42, "namespaceExpression": "I5Q70CWR", "rewardCode": "M2KcjFDG", "rewardConditions": [{"condition": "bUTCkhiE", "conditionName": "G8EAPDL7", "eventName": "3mBEdJ8d", "rewardItems": [{"duration": 75, "endDate": "1994-02-01T00:00:00Z", "identityType": "ITEM_SKU", "itemId": "eo3Xep6u", "quantity": 18, "sku": "Lha0vxA6"}, {"duration": 33, "endDate": "1987-07-27T00:00:00Z", "identityType": "ITEM_ID", "itemId": "6W5JHPic", "quantity": 50, "sku": "l1Ymvji3"}, {"duration": 45, "endDate": "1996-11-26T00:00:00Z", "identityType": "ITEM_ID", "itemId": "xT4riGOq", "quantity": 35, "sku": "KWLHNNW2"}]}, {"condition": "Fabsgsbq", "conditionName": "OJjKYYmG", "eventName": "DzizOwq7", "rewardItems": [{"duration": 78, "endDate": "1987-12-15T00:00:00Z", "identityType": "ITEM_ID", "itemId": "tgbba8SG", "quantity": 96, "sku": "upq9SWMt"}, {"duration": 88, "endDate": "1996-07-27T00:00:00Z", "identityType": "ITEM_ID", "itemId": "ZGHX2fi7", "quantity": 34, "sku": "uJHSSvoE"}, {"duration": 88, "endDate": "1976-10-29T00:00:00Z", "identityType": "ITEM_ID", "itemId": "mKcMGQzn", "quantity": 84, "sku": "qcxdGsya"}]}, {"condition": "d8mPKtVq", "conditionName": "FJMOFsfp", "eventName": "tEtTWmZR", "rewardItems": [{"duration": 63, "endDate": "1998-01-18T00:00:00Z", "identityType": "ITEM_ID", "itemId": "KJSHmOUz", "quantity": 28, "sku": "KEaTu4ni"}, {"duration": 2, "endDate": "1995-01-15T00:00:00Z", "identityType": "ITEM_SKU", "itemId": "SCervQwo", "quantity": 83, "sku": "cyNBRF3f"}, {"duration": 38, "endDate": "1996-08-10T00:00:00Z", "identityType": "ITEM_ID", "itemId": "H4HUw5rV", "quantity": 65, "sku": "ihCEGCv2"}]}], "userIdExpression": "1JGbbPrn"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateReward \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 196 'CreateReward' test.out

#- 197 QueryRewards
$CLI_EXE \
    --sn platform \
    --op QueryRewards \
    --namespace $AB_NAMESPACE \
    --eventTopic 'MD0VR0KS' \
    --limit '20' \
    --offset '92' \
    --sortBy '["namespace", "rewardCode:asc", "rewardCode"]' \
    > test.out 2>&1
eval_tap $? 197 'QueryRewards' test.out

#- 198 ExportRewards
$CLI_EXE \
    --sn platform \
    --op ExportRewards \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 198 'ExportRewards' test.out

#- 199 ImportRewards
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op ImportRewards \
    --namespace $AB_NAMESPACE \
    --replaceExisting 'true' \
    --upload file $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 199 'ImportRewards' test.out

#- 200 GetReward
$CLI_EXE \
    --sn platform \
    --op GetReward \
    --namespace $AB_NAMESPACE \
    --rewardId 'JveeLvKX' \
    > test.out 2>&1
eval_tap $? 200 'GetReward' test.out

#- 201 UpdateReward
# body param: body
echo '{"description": "3lnt7RHz", "eventTopic": "5E39V5nu", "maxAwarded": 17, "maxAwardedPerUser": 87, "namespaceExpression": "WOSxdIbd", "rewardCode": "NxYlaMZK", "rewardConditions": [{"condition": "jUkAto5U", "conditionName": "L7Ggr5Ro", "eventName": "wSv4ELv6", "rewardItems": [{"duration": 55, "endDate": "1995-06-20T00:00:00Z", "identityType": "ITEM_SKU", "itemId": "qs2k8lWS", "quantity": 44, "sku": "OKzqBcI9"}, {"duration": 19, "endDate": "1983-11-10T00:00:00Z", "identityType": "ITEM_SKU", "itemId": "QulW7kCy", "quantity": 85, "sku": "wAS25moa"}, {"duration": 78, "endDate": "1998-12-22T00:00:00Z", "identityType": "ITEM_SKU", "itemId": "n88mXLoI", "quantity": 59, "sku": "Kz80sg0y"}]}, {"condition": "kqLZQ0d8", "conditionName": "n3eHL0yF", "eventName": "UNIY69bk", "rewardItems": [{"duration": 92, "endDate": "1981-10-28T00:00:00Z", "identityType": "ITEM_SKU", "itemId": "O4g63BXw", "quantity": 66, "sku": "wU6pwy3i"}, {"duration": 79, "endDate": "1974-02-10T00:00:00Z", "identityType": "ITEM_SKU", "itemId": "nA7l7sxT", "quantity": 53, "sku": "1sMQzqoX"}, {"duration": 74, "endDate": "1988-07-14T00:00:00Z", "identityType": "ITEM_ID", "itemId": "BBkbNBbu", "quantity": 89, "sku": "MnEgirH1"}]}, {"condition": "uAHTBfhr", "conditionName": "0FHuDdUu", "eventName": "GqNLw3cJ", "rewardItems": [{"duration": 85, "endDate": "1999-08-28T00:00:00Z", "identityType": "ITEM_ID", "itemId": "iBLPOUgh", "quantity": 69, "sku": "gvOImwfh"}, {"duration": 70, "endDate": "1974-10-08T00:00:00Z", "identityType": "ITEM_ID", "itemId": "4UNVRMx9", "quantity": 64, "sku": "tTIyN7NY"}, {"duration": 36, "endDate": "1997-11-03T00:00:00Z", "identityType": "ITEM_ID", "itemId": "USITwTRH", "quantity": 10, "sku": "3zCpmekx"}]}], "userIdExpression": "Np4N4prg"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateReward \
    --namespace $AB_NAMESPACE \
    --rewardId 'BqJd36Fr' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 201 'UpdateReward' test.out

#- 202 DeleteReward
$CLI_EXE \
    --sn platform \
    --op DeleteReward \
    --namespace $AB_NAMESPACE \
    --rewardId 'xfRq26BC' \
    > test.out 2>&1
eval_tap $? 202 'DeleteReward' test.out

#- 203 CheckEventCondition
# body param: body
echo '{"payload": {"bA1g5PZq": {}, "pQicEwt6": {}, "qsA6E97T": {}}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CheckEventCondition \
    --namespace $AB_NAMESPACE \
    --rewardId 'bgeqcXmE' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 203 'CheckEventCondition' test.out

#- 204 DeleteRewardConditionRecord
# body param: body
echo '{"conditionName": "M8SQb5Sb", "userId": "aLmpj7B0"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op DeleteRewardConditionRecord \
    --namespace $AB_NAMESPACE \
    --rewardId 'as0ovXq1' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 204 'DeleteRewardConditionRecord' test.out

#- 205 QuerySections
$CLI_EXE \
    --sn platform \
    --op QuerySections \
    --namespace $AB_NAMESPACE \
    --end 'Rq4ajGva' \
    --limit '81' \
    --offset '28' \
    --start 'pJOKOHCJ' \
    --storeId 'jcPB03wb' \
    --viewId 'NEmvyM1X' \
    > test.out 2>&1
eval_tap $? 205 'QuerySections' test.out

#- 206 CreateSection
# body param: body
echo '{"active": true, "displayOrder": 49, "endDate": "1991-08-11T00:00:00Z", "ext": {"Bn65ZnpE": {}, "H6ANhwTM": {}, "XoJkZiI8": {}}, "fixedPeriodRotationConfig": {"backfillType": "CUSTOM", "duration": 81, "itemCount": 12, "rule": "LOOP"}, "items": [{"id": "JC6vuuIP", "sku": "qC8I9NLI"}, {"id": "o3ComLOU", "sku": "gKbe3R2c"}, {"id": "0iykCfXp", "sku": "erp3eybh"}], "localizations": {"PNBlbjfJ": {"description": "pRkNhnAV", "localExt": {"U8BBXodz": {}, "R1zX4Kzu": {}, "n6R4HrLy": {}}, "longDescription": "NUaOEnCg", "title": "DJ2ossNs"}, "NIsAhQ5u": {"description": "dBVydepv", "localExt": {"4GUzwJQR": {}, "5rnqsdb0": {}, "Hei6I5Vk": {}}, "longDescription": "nspSyYwA", "title": "6llTQk8O"}, "DjnDpVXx": {"description": "CQbqjVd1", "localExt": {"gYHcHdhI": {}, "93NhsE9k": {}, "SEZxh8Dd": {}}, "longDescription": "yBlaSlHI", "title": "lImNl14U"}}, "name": "ENoILZf3", "rotationType": "NONE", "startDate": "1980-06-04T00:00:00Z", "viewId": "5Rbj2bzv"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateSection \
    --namespace $AB_NAMESPACE \
    --storeId 'nrp5udDU' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 206 'CreateSection' test.out

#- 207 PurgeExpiredSection
$CLI_EXE \
    --sn platform \
    --op PurgeExpiredSection \
    --namespace $AB_NAMESPACE \
    --storeId 'UUyt7VS0' \
    > test.out 2>&1
eval_tap $? 207 'PurgeExpiredSection' test.out

#- 208 GetSection
$CLI_EXE \
    --sn platform \
    --op GetSection \
    --namespace $AB_NAMESPACE \
    --sectionId 'tmlXMJ0w' \
    --storeId 'VGPCDHD6' \
    > test.out 2>&1
eval_tap $? 208 'GetSection' test.out

#- 209 UpdateSection
# body param: body
echo '{"active": false, "displayOrder": 57, "endDate": "1992-10-22T00:00:00Z", "ext": {"czNSaVYy": {}, "wBJLVwTH": {}, "8lHIaCYP": {}}, "fixedPeriodRotationConfig": {"backfillType": "NONE", "duration": 23, "itemCount": 4, "rule": "SEQUENCE"}, "items": [{"id": "o0ZApS6b", "sku": "LQubbDXd"}, {"id": "1cu9ZP8x", "sku": "EtscfEW3"}, {"id": "w5fCdsy5", "sku": "VoHWnwue"}], "localizations": {"HC2yMjIC": {"description": "H6ge7u94", "localExt": {"WxFGY11Q": {}, "IDtky2Wq": {}, "RqeDMLeH": {}}, "longDescription": "A9KVqNrC", "title": "mRjewNP3"}, "FKsIOv4T": {"description": "QXQzdBAj", "localExt": {"NXGPqAtr": {}, "DxTHYQ5M": {}, "WipreLQF": {}}, "longDescription": "pSrjXLik", "title": "ybq1DVjz"}, "NAluJGKc": {"description": "8fkvF4Lz", "localExt": {"3vpRNBn7": {}, "bgICqzrU": {}, "uqbAVfyO": {}}, "longDescription": "gcS902ow", "title": "ZWoTR9re"}}, "name": "Dsprw6MD", "rotationType": "NONE", "startDate": "1975-10-09T00:00:00Z", "viewId": "VA7yG6Dm"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateSection \
    --namespace $AB_NAMESPACE \
    --sectionId 'fDy0bjbs' \
    --storeId 'KrMMFswp' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 209 'UpdateSection' test.out

#- 210 DeleteSection
$CLI_EXE \
    --sn platform \
    --op DeleteSection \
    --namespace $AB_NAMESPACE \
    --sectionId 'of1IZXzR' \
    --storeId 'ZxYoKAF2' \
    > test.out 2>&1
eval_tap $? 210 'DeleteSection' test.out

#- 211 ListStores
$CLI_EXE \
    --sn platform \
    --op ListStores \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 211 'ListStores' test.out

#- 212 CreateStore
# body param: body
echo '{"defaultLanguage": "zZf0hhQI", "defaultRegion": "Q8vZscv2", "description": "9Gu5U12p", "supportedLanguages": ["9iW6hZ0k", "CKum808e", "QFMhA0Vx"], "supportedRegions": ["cX279j9U", "mEQYrs7n", "R5BaK8ZQ"], "title": "NCkKoiHn"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateStore \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 212 'CreateStore' test.out

#- 213 GetCatalogDefinition
$CLI_EXE \
    --sn platform \
    --op GetCatalogDefinition \
    --namespace $AB_NAMESPACE \
    --catalogType 'CATEGORY' \
    > test.out 2>&1
eval_tap $? 213 'GetCatalogDefinition' test.out

#- 214 DownloadCSVTemplates
$CLI_EXE \
    --sn platform \
    --op DownloadCSVTemplates \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 214 'DownloadCSVTemplates' test.out

#- 215 ExportStoreByCSV
# body param: body
echo '{"catalogType": "VIEW", "fieldsToBeIncluded": ["qDFgAOzY", "HQlJDYEi", "2JzXjbJJ"], "idsToBeExported": ["LUHHFeKp", "IyrxK4GO", "Zw3FvjwO"], "storeId": "zeudkyDW"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ExportStoreByCSV \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 215 'ExportStoreByCSV' test.out

#- 216 ImportStore
eval_tap 0 216 'ImportStore # SKIP deprecated' test.out

#- 217 GetPublishedStore
$CLI_EXE \
    --sn platform \
    --op GetPublishedStore \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 217 'GetPublishedStore' test.out

#- 218 DeletePublishedStore
$CLI_EXE \
    --sn platform \
    --op DeletePublishedStore \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 218 'DeletePublishedStore' test.out

#- 219 GetPublishedStoreBackup
$CLI_EXE \
    --sn platform \
    --op GetPublishedStoreBackup \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 219 'GetPublishedStoreBackup' test.out

#- 220 RollbackPublishedStore
$CLI_EXE \
    --sn platform \
    --op RollbackPublishedStore \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 220 'RollbackPublishedStore' test.out

#- 221 GetStore
$CLI_EXE \
    --sn platform \
    --op GetStore \
    --namespace $AB_NAMESPACE \
    --storeId 'p5J5qfhp' \
    > test.out 2>&1
eval_tap $? 221 'GetStore' test.out

#- 222 UpdateStore
# body param: body
echo '{"defaultLanguage": "ohYQpsLT", "defaultRegion": "G47POglJ", "description": "vQIbU2i2", "supportedLanguages": ["khVb34NI", "WZYI8hRx", "3ksUHbKg"], "supportedRegions": ["fGDi85Jx", "N61VQKFJ", "OEWJgQXq"], "title": "h8d20Um9"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateStore \
    --namespace $AB_NAMESPACE \
    --storeId 'jWvfpe3v' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 222 'UpdateStore' test.out

#- 223 DeleteStore
$CLI_EXE \
    --sn platform \
    --op DeleteStore \
    --namespace $AB_NAMESPACE \
    --storeId 'Rn8wR8WR' \
    > test.out 2>&1
eval_tap $? 223 'DeleteStore' test.out

#- 224 QueryChanges
$CLI_EXE \
    --sn platform \
    --op QueryChanges \
    --namespace $AB_NAMESPACE \
    --storeId 'wA3I6Yyq' \
    --action 'UPDATE' \
    --itemSku '4qQWhtpw' \
    --itemType 'EXTENSION' \
    --limit '42' \
    --offset '53' \
    --selected 'false' \
    --sortBy '["createdAt:desc", "createdAt", "updatedAt"]' \
    --status 'UNPUBLISHED' \
    --type 'ITEM' \
    --updatedAtEnd 'juWRNav7' \
    --updatedAtStart 'JT7qXh1m' \
    --withTotal 'false' \
    > test.out 2>&1
eval_tap $? 224 'QueryChanges' test.out

#- 225 PublishAll
$CLI_EXE \
    --sn platform \
    --op PublishAll \
    --namespace $AB_NAMESPACE \
    --storeId 'SKl9Kr9i' \
    > test.out 2>&1
eval_tap $? 225 'PublishAll' test.out

#- 226 PublishSelected
$CLI_EXE \
    --sn platform \
    --op PublishSelected \
    --namespace $AB_NAMESPACE \
    --storeId 'aegS13Te' \
    > test.out 2>&1
eval_tap $? 226 'PublishSelected' test.out

#- 227 SelectAllRecords
$CLI_EXE \
    --sn platform \
    --op SelectAllRecords \
    --namespace $AB_NAMESPACE \
    --storeId 'vHjxWaqh' \
    > test.out 2>&1
eval_tap $? 227 'SelectAllRecords' test.out

#- 228 SelectAllRecordsByCriteria
$CLI_EXE \
    --sn platform \
    --op SelectAllRecordsByCriteria \
    --namespace $AB_NAMESPACE \
    --storeId 'D4GxlXU7' \
    --action 'UPDATE' \
    --itemSku 'iloXdS1i' \
    --itemType 'BUNDLE' \
    --selected 'false' \
    --type 'CATEGORY' \
    --updatedAtEnd 'J0zb0GN1' \
    --updatedAtStart 'JzaNJea4' \
    > test.out 2>&1
eval_tap $? 228 'SelectAllRecordsByCriteria' test.out

#- 229 GetStatistic
$CLI_EXE \
    --sn platform \
    --op GetStatistic \
    --namespace $AB_NAMESPACE \
    --storeId '3EEVe3V2' \
    --action 'UPDATE' \
    --itemSku 'p8yqd9LW' \
    --itemType 'COINS' \
    --type 'STORE' \
    --updatedAtEnd 'zz1zAVmF' \
    --updatedAtStart 'ZPXDNEWH' \
    > test.out 2>&1
eval_tap $? 229 'GetStatistic' test.out

#- 230 UnselectAllRecords
$CLI_EXE \
    --sn platform \
    --op UnselectAllRecords \
    --namespace $AB_NAMESPACE \
    --storeId 'V7m26MF0' \
    > test.out 2>&1
eval_tap $? 230 'UnselectAllRecords' test.out

#- 231 SelectRecord
$CLI_EXE \
    --sn platform \
    --op SelectRecord \
    --changeId '5vmAKNPt' \
    --namespace $AB_NAMESPACE \
    --storeId '6SdhPVc5' \
    > test.out 2>&1
eval_tap $? 231 'SelectRecord' test.out

#- 232 UnselectRecord
$CLI_EXE \
    --sn platform \
    --op UnselectRecord \
    --changeId 'kFqaPbFh' \
    --namespace $AB_NAMESPACE \
    --storeId 'pHRwHtZC' \
    > test.out 2>&1
eval_tap $? 232 'UnselectRecord' test.out

#- 233 CloneStore
$CLI_EXE \
    --sn platform \
    --op CloneStore \
    --namespace $AB_NAMESPACE \
    --storeId 'XBvCMZAY' \
    --targetStoreId 'IMik8Wl1' \
    > test.out 2>&1
eval_tap $? 233 'CloneStore' test.out

#- 234 ExportStore
eval_tap 0 234 'ExportStore # SKIP deprecated' test.out

#- 235 QueryImportHistory
$CLI_EXE \
    --sn platform \
    --op QueryImportHistory \
    --namespace $AB_NAMESPACE \
    --storeId 'NLhkVhRJ' \
    --end 'pBGPzezP' \
    --limit '64' \
    --offset '77' \
    --sortBy '1QRgHLRE' \
    --start 'kb7um7Ml' \
    --success 'false' \
    > test.out 2>&1
eval_tap $? 235 'QueryImportHistory' test.out

#- 236 ImportStoreByCSV
# form data upload: category
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
# form data upload: display
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
# form data upload: item
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
# form data upload: section
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op ImportStoreByCSV \
    --namespace $AB_NAMESPACE \
    --storeId 'l6PkBpOO' \
    --upload category $TEMP_FILE_UPLOAD \
    --upload display $TEMP_FILE_UPLOAD \
    --upload item $TEMP_FILE_UPLOAD \
    --notes 'd6muNAW9' \
    --upload section $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 236 'ImportStoreByCSV' test.out

#- 237 QuerySubscriptions
$CLI_EXE \
    --sn platform \
    --op QuerySubscriptions \
    --namespace $AB_NAMESPACE \
    --chargeStatus 'RECURRING_CHARGING' \
    --itemId 'FlXDQBFj' \
    --limit '37' \
    --offset '93' \
    --sku '69Q6jVtn' \
    --status 'ACTIVE' \
    --subscribedBy 'USER' \
    --userId 'g8likpxQ' \
    > test.out 2>&1
eval_tap $? 237 'QuerySubscriptions' test.out

#- 238 RecurringChargeSubscription
$CLI_EXE \
    --sn platform \
    --op RecurringChargeSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'pwZI0KXT' \
    > test.out 2>&1
eval_tap $? 238 'RecurringChargeSubscription' test.out

#- 239 GetTicketDynamic
$CLI_EXE \
    --sn platform \
    --op GetTicketDynamic \
    --boothName 'T0c0AW4u' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 239 'GetTicketDynamic' test.out

#- 240 DecreaseTicketSale
# body param: body
echo '{"orderNo": "iXlKhn6W"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op DecreaseTicketSale \
    --boothName 'hvXU5pkh' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 240 'DecreaseTicketSale' test.out

#- 241 GetTicketBoothID
$CLI_EXE \
    --sn platform \
    --op GetTicketBoothID \
    --boothName 'WyUEGXRn' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 241 'GetTicketBoothID' test.out

#- 242 IncreaseTicketSale
# body param: body
echo '{"count": 88, "orderNo": "gRXaRpGw"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op IncreaseTicketSale \
    --boothName 'TI4gsOue' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 242 'IncreaseTicketSale' test.out

#- 243 Commit
# body param: body
echo '{"actions": [{"operations": [{"creditPayload": {"balanceOrigin": "IOS", "count": 25, "currencyCode": "hMDItuJU", "expireAt": "1983-03-06T00:00:00Z"}, "debitPayload": {"count": 96, "currencyCode": "FKXQiUJC", "walletPlatform": "Oculus"}, "fulFillItemPayload": {"count": 39, "entitlementCollectionId": "eGK7tl4b", "entitlementOrigin": "Twitch", "itemIdentity": "P4yr05HA", "itemIdentityType": "ITEM_SKU"}, "revokeEntitlementPayload": {"count": 3, "entitlementId": "8Buxsmwk"}, "type": "FULFILL_ITEM"}, {"creditPayload": {"balanceOrigin": "Steam", "count": 66, "currencyCode": "rtBrVU0f", "expireAt": "1990-10-17T00:00:00Z"}, "debitPayload": {"count": 0, "currencyCode": "4lNF2ZXo", "walletPlatform": "Steam"}, "fulFillItemPayload": {"count": 2, "entitlementCollectionId": "5dRAO7V6", "entitlementOrigin": "Oculus", "itemIdentity": "04kHIYfx", "itemIdentityType": "ITEM_SKU"}, "revokeEntitlementPayload": {"count": 26, "entitlementId": "FVHGcNay"}, "type": "FULFILL_ITEM"}, {"creditPayload": {"balanceOrigin": "IOS", "count": 35, "currencyCode": "n6NaR9lF", "expireAt": "1995-10-18T00:00:00Z"}, "debitPayload": {"count": 16, "currencyCode": "bhAWS5dc", "walletPlatform": "GooglePlay"}, "fulFillItemPayload": {"count": 40, "entitlementCollectionId": "RrHGKyvm", "entitlementOrigin": "Twitch", "itemIdentity": "7ZMn8k5R", "itemIdentityType": "ITEM_ID"}, "revokeEntitlementPayload": {"count": 19, "entitlementId": "1WKo438G"}, "type": "DEBIT_WALLET"}], "userId": "bc4cQmnc"}, {"operations": [{"creditPayload": {"balanceOrigin": "Other", "count": 10, "currencyCode": "pYasbsWd", "expireAt": "1984-05-29T00:00:00Z"}, "debitPayload": {"count": 40, "currencyCode": "sr7E3xsU", "walletPlatform": "Steam"}, "fulFillItemPayload": {"count": 14, "entitlementCollectionId": "A1MjnLbv", "entitlementOrigin": "Steam", "itemIdentity": "HXyD82Yq", "itemIdentityType": "ITEM_SKU"}, "revokeEntitlementPayload": {"count": 43, "entitlementId": "xLtxW8Ss"}, "type": "DEBIT_WALLET"}, {"creditPayload": {"balanceOrigin": "IOS", "count": 66, "currencyCode": "m4Vge6KT", "expireAt": "1983-08-03T00:00:00Z"}, "debitPayload": {"count": 53, "currencyCode": "aLezwTEp", "walletPlatform": "Other"}, "fulFillItemPayload": {"count": 97, "entitlementCollectionId": "faM0CjPw", "entitlementOrigin": "Xbox", "itemIdentity": "P6G5QHIF", "itemIdentityType": "ITEM_SKU"}, "revokeEntitlementPayload": {"count": 60, "entitlementId": "nLJBCuG3"}, "type": "REVOKE_ENTITLEMENT"}, {"creditPayload": {"balanceOrigin": "Nintendo", "count": 49, "currencyCode": "ZrcYoEJ9", "expireAt": "1977-01-07T00:00:00Z"}, "debitPayload": {"count": 40, "currencyCode": "h6RAqyDP", "walletPlatform": "Other"}, "fulFillItemPayload": {"count": 36, "entitlementCollectionId": "ie4bA7Uj", "entitlementOrigin": "Playstation", "itemIdentity": "ILWVKSPL", "itemIdentityType": "ITEM_ID"}, "revokeEntitlementPayload": {"count": 72, "entitlementId": "z73bodNM"}, "type": "REVOKE_ENTITLEMENT"}], "userId": "hsbWedqk"}, {"operations": [{"creditPayload": {"balanceOrigin": "Steam", "count": 49, "currencyCode": "X6LLxrFt", "expireAt": "1987-09-12T00:00:00Z"}, "debitPayload": {"count": 92, "currencyCode": "YEDYJCTe", "walletPlatform": "Oculus"}, "fulFillItemPayload": {"count": 84, "entitlementCollectionId": "F6UCWzey", "entitlementOrigin": "Steam", "itemIdentity": "uuMDMN8I", "itemIdentityType": "ITEM_ID"}, "revokeEntitlementPayload": {"count": 81, "entitlementId": "IK5U6ha0"}, "type": "REVOKE_ENTITLEMENT"}, {"creditPayload": {"balanceOrigin": "Twitch", "count": 23, "currencyCode": "WFl6BTmE", "expireAt": "1974-02-19T00:00:00Z"}, "debitPayload": {"count": 75, "currencyCode": "PbHwcL32", "walletPlatform": "Steam"}, "fulFillItemPayload": {"count": 86, "entitlementCollectionId": "mFmc5EB9", "entitlementOrigin": "Playstation", "itemIdentity": "FdFoorne", "itemIdentityType": "ITEM_SKU"}, "revokeEntitlementPayload": {"count": 51, "entitlementId": "LMJT1i4y"}, "type": "FULFILL_ITEM"}, {"creditPayload": {"balanceOrigin": "Nintendo", "count": 35, "currencyCode": "kAVzUWUE", "expireAt": "1999-03-31T00:00:00Z"}, "debitPayload": {"count": 84, "currencyCode": "Qr1lMdgc", "walletPlatform": "Oculus"}, "fulFillItemPayload": {"count": 74, "entitlementCollectionId": "ETZY8K7c", "entitlementOrigin": "Nintendo", "itemIdentity": "VobB5nw3", "itemIdentityType": "ITEM_ID"}, "revokeEntitlementPayload": {"count": 99, "entitlementId": "upv0x8pP"}, "type": "REVOKE_ENTITLEMENT"}], "userId": "SzsF216R"}], "metadata": {"8GpuyjB2": {}, "LPNbGoPe": {}, "RdCv9FIv": {}}, "needPreCheck": true, "transactionId": "SRUKYdG1", "type": "W3pgDCUS"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op Commit \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 243 'Commit' test.out

#- 244 GetTradeHistoryByCriteria
$CLI_EXE \
    --sn platform \
    --op GetTradeHistoryByCriteria \
    --namespace $AB_NAMESPACE \
    --limit '82' \
    --offset '45' \
    --status 'FAILED' \
    --type 'kKB4wAhi' \
    --userId '6HYw0pA5' \
    > test.out 2>&1
eval_tap $? 244 'GetTradeHistoryByCriteria' test.out

#- 245 GetTradeHistoryByTransactionId
$CLI_EXE \
    --sn platform \
    --op GetTradeHistoryByTransactionId \
    --namespace $AB_NAMESPACE \
    --transactionId 'A0dLLiKf' \
    > test.out 2>&1
eval_tap $? 245 'GetTradeHistoryByTransactionId' test.out

#- 246 UnlockSteamUserAchievement
# body param: body
echo '{"achievements": [{"id": "yZsvAUka", "value": 13}, {"id": "qtHZkOva", "value": 61}, {"id": "ho3T8Piu", "value": 49}], "steamUserId": "pO0i0DV1"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UnlockSteamUserAchievement \
    --namespace $AB_NAMESPACE \
    --userId 'TCb4LCBj' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 246 'UnlockSteamUserAchievement' test.out

#- 247 GetXblUserAchievements
$CLI_EXE \
    --sn platform \
    --op GetXblUserAchievements \
    --namespace $AB_NAMESPACE \
    --userId 'cDUGNOO2' \
    --xboxUserId '33bqVwHb' \
    > test.out 2>&1
eval_tap $? 247 'GetXblUserAchievements' test.out

#- 248 UpdateXblUserAchievement
# body param: body
echo '{"achievements": [{"id": "hnkQIv3Y", "percentComplete": 31}, {"id": "Sb9cHshH", "percentComplete": 76}, {"id": "miCs63nu", "percentComplete": 12}], "serviceConfigId": "zn9IcP0a", "titleId": "0fokMWKC", "xboxUserId": "3MfA7btU"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXblUserAchievement \
    --namespace $AB_NAMESPACE \
    --userId '47vWOtBd' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 248 'UpdateXblUserAchievement' test.out

#- 249 AnonymizeCampaign
$CLI_EXE \
    --sn platform \
    --op AnonymizeCampaign \
    --namespace $AB_NAMESPACE \
    --userId 'NgcvLyRj' \
    > test.out 2>&1
eval_tap $? 249 'AnonymizeCampaign' test.out

#- 250 AnonymizeEntitlement
$CLI_EXE \
    --sn platform \
    --op AnonymizeEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'UKKrumBb' \
    > test.out 2>&1
eval_tap $? 250 'AnonymizeEntitlement' test.out

#- 251 AnonymizeFulfillment
$CLI_EXE \
    --sn platform \
    --op AnonymizeFulfillment \
    --namespace $AB_NAMESPACE \
    --userId 'qiUgWaUg' \
    > test.out 2>&1
eval_tap $? 251 'AnonymizeFulfillment' test.out

#- 252 AnonymizeIntegration
$CLI_EXE \
    --sn platform \
    --op AnonymizeIntegration \
    --namespace $AB_NAMESPACE \
    --userId 'Z2T1lwWO' \
    > test.out 2>&1
eval_tap $? 252 'AnonymizeIntegration' test.out

#- 253 AnonymizeOrder
$CLI_EXE \
    --sn platform \
    --op AnonymizeOrder \
    --namespace $AB_NAMESPACE \
    --userId 'L1iDyHBd' \
    > test.out 2>&1
eval_tap $? 253 'AnonymizeOrder' test.out

#- 254 AnonymizePayment
$CLI_EXE \
    --sn platform \
    --op AnonymizePayment \
    --namespace $AB_NAMESPACE \
    --userId 'h89TMPAP' \
    > test.out 2>&1
eval_tap $? 254 'AnonymizePayment' test.out

#- 255 AnonymizeRevocation
$CLI_EXE \
    --sn platform \
    --op AnonymizeRevocation \
    --namespace $AB_NAMESPACE \
    --userId 'LyN6UQYz' \
    > test.out 2>&1
eval_tap $? 255 'AnonymizeRevocation' test.out

#- 256 AnonymizeSubscription
$CLI_EXE \
    --sn platform \
    --op AnonymizeSubscription \
    --namespace $AB_NAMESPACE \
    --userId '3j9LIcjs' \
    > test.out 2>&1
eval_tap $? 256 'AnonymizeSubscription' test.out

#- 257 AnonymizeWallet
$CLI_EXE \
    --sn platform \
    --op AnonymizeWallet \
    --namespace $AB_NAMESPACE \
    --userId 'rplOIomQ' \
    > test.out 2>&1
eval_tap $? 257 'AnonymizeWallet' test.out

#- 258 GetUserDLCByPlatform
$CLI_EXE \
    --sn platform \
    --op GetUserDLCByPlatform \
    --namespace $AB_NAMESPACE \
    --userId '35GIydFh' \
    --type 'EPICGAMES' \
    > test.out 2>&1
eval_tap $? 258 'GetUserDLCByPlatform' test.out

#- 259 GetUserDLC
$CLI_EXE \
    --sn platform \
    --op GetUserDLC \
    --namespace $AB_NAMESPACE \
    --userId 'BLMSg38E' \
    --includeAllNamespaces 'true' \
    --status 'REVOKE_FAILED' \
    --type 'XBOX' \
    > test.out 2>&1
eval_tap $? 259 'GetUserDLC' test.out

#- 260 QueryUserEntitlements
$CLI_EXE \
    --sn platform \
    --op QueryUserEntitlements \
    --namespace $AB_NAMESPACE \
    --userId 'Z34iWK9z' \
    --activeOnly 'true' \
    --appType 'SOFTWARE' \
    --collectionId 'mONfCsiO' \
    --entitlementClazz 'CODE' \
    --entitlementName 'oEo82Rq2' \
    --features '["sclppGhh", "DrIS11ll", "PxVpLg4k"]' \
    --fuzzyMatchName 'false' \
    --ignoreActiveDate 'true' \
    --itemId '["AzOrQ2fT", "AdPUcVDW", "v05HNkB0"]' \
    --limit '54' \
    --offset '22' \
    --origin 'GooglePlay' \
    > test.out 2>&1
eval_tap $? 260 'QueryUserEntitlements' test.out

#- 261 GrantUserEntitlement
# body param: body
echo '[{"collectionId": "ggiK9LmN", "endDate": "1993-07-28T00:00:00Z", "grantedCode": "aHCVxVuo", "itemId": "30xIt8CQ", "itemNamespace": "FQjdrp0f", "language": "IjxO-MWnX", "metadata": {"AMIipm7W": {}, "rk2x88q5": {}, "gH0bKU11": {}}, "origin": "Nintendo", "quantity": 0, "region": "iS98UTUe", "source": "OTHER", "startDate": "1997-06-23T00:00:00Z", "storeId": "jl36kjEJ"}, {"collectionId": "KKkkDTG1", "endDate": "1973-11-25T00:00:00Z", "grantedCode": "8pcXfGce", "itemId": "UGKIY7lR", "itemNamespace": "16kfVzSN", "language": "xCo-hyux", "metadata": {"0DAG2VRl": {}, "SDm1bdit": {}, "8rFWM8tx": {}}, "origin": "Other", "quantity": 43, "region": "UgQjOCEz", "source": "OTHER", "startDate": "1976-07-06T00:00:00Z", "storeId": "u3WXrRxx"}, {"collectionId": "I70LbvDN", "endDate": "1985-10-07T00:00:00Z", "grantedCode": "VVKE8UnV", "itemId": "nQl5Z41z", "itemNamespace": "oLYFEMLu", "language": "tQsr_vilD-sM", "metadata": {"7tHSlCXW": {}, "XWgUT3Kd": {}, "s33SfkxO": {}}, "origin": "Oculus", "quantity": 5, "region": "oNj1njPf", "source": "REWARD", "startDate": "1978-01-01T00:00:00Z", "storeId": "8IZKv6mO"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op GrantUserEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'wWBIEEDO' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 261 'GrantUserEntitlement' test.out

#- 262 GetUserAppEntitlementByAppId
$CLI_EXE \
    --sn platform \
    --op GetUserAppEntitlementByAppId \
    --namespace $AB_NAMESPACE \
    --userId 'PEjm17iT' \
    --activeOnly 'true' \
    --appId 'TGqXLi3W' \
    > test.out 2>&1
eval_tap $? 262 'GetUserAppEntitlementByAppId' test.out

#- 263 QueryUserEntitlementsByAppType
$CLI_EXE \
    --sn platform \
    --op QueryUserEntitlementsByAppType \
    --namespace $AB_NAMESPACE \
    --userId 'sda2x7Xd' \
    --activeOnly 'true' \
    --limit '48' \
    --offset '27' \
    --appType 'DEMO' \
    > test.out 2>&1
eval_tap $? 263 'QueryUserEntitlementsByAppType' test.out

#- 264 GetUserEntitlementsByIds
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementsByIds \
    --namespace $AB_NAMESPACE \
    --userId 'w9XDSqJe' \
    --ids '["6sOOebTK", "GYW5sAiu", "BHRZARC0"]' \
    > test.out 2>&1
eval_tap $? 264 'GetUserEntitlementsByIds' test.out

#- 265 GetUserEntitlementByItemId
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementByItemId \
    --namespace $AB_NAMESPACE \
    --userId '0SB3qhVU' \
    --activeOnly 'true' \
    --entitlementClazz 'ENTITLEMENT' \
    --platform 'hwp1AsVz' \
    --itemId 'dFjh78oM' \
    > test.out 2>&1
eval_tap $? 265 'GetUserEntitlementByItemId' test.out

#- 266 GetUserActiveEntitlementsByItemIds
$CLI_EXE \
    --sn platform \
    --op GetUserActiveEntitlementsByItemIds \
    --namespace $AB_NAMESPACE \
    --userId 'zcTRomhK' \
    --ids '["ZEXssEFl", "VbGMi3PE", "Bh0sdxCV"]' \
    --platform 'ZqwNMVbu' \
    > test.out 2>&1
eval_tap $? 266 'GetUserActiveEntitlementsByItemIds' test.out

#- 267 GetUserEntitlementBySku
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementBySku \
    --namespace $AB_NAMESPACE \
    --userId 'yJ29yDdb' \
    --activeOnly 'false' \
    --entitlementClazz 'APP' \
    --platform '03jUmpY8' \
    --sku 'uSx03AoD' \
    > test.out 2>&1
eval_tap $? 267 'GetUserEntitlementBySku' test.out

#- 268 ExistsAnyUserActiveEntitlement
$CLI_EXE \
    --sn platform \
    --op ExistsAnyUserActiveEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'eJG7vj4Y' \
    --appIds '["V962U4xf", "dXzjmS2G", "nQrDR8Z9"]' \
    --itemIds '["37YuQPFw", "WmgEwHrh", "UkHmkxwr"]' \
    --platform 'TVJlcsUa' \
    --skus '["81GZ38XV", "oh0Uudzn", "LuZTwCOc"]' \
    > test.out 2>&1
eval_tap $? 268 'ExistsAnyUserActiveEntitlement' test.out

#- 269 ExistsAnyUserActiveEntitlementByItemIds
$CLI_EXE \
    --sn platform \
    --op ExistsAnyUserActiveEntitlementByItemIds \
    --namespace $AB_NAMESPACE \
    --userId 'D3et6zS2' \
    --platform '4AvF3gCF' \
    --itemIds '["zVX8mdlV", "YreIKF9V", "blhDb9TP"]' \
    > test.out 2>&1
eval_tap $? 269 'ExistsAnyUserActiveEntitlementByItemIds' test.out

#- 270 GetUserAppEntitlementOwnershipByAppId
$CLI_EXE \
    --sn platform \
    --op GetUserAppEntitlementOwnershipByAppId \
    --namespace $AB_NAMESPACE \
    --userId '9CaeAoqI' \
    --appId '464NHtjK' \
    > test.out 2>&1
eval_tap $? 270 'GetUserAppEntitlementOwnershipByAppId' test.out

#- 271 GetUserEntitlementOwnershipByItemId
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementOwnershipByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'UzO6529d' \
    --entitlementClazz 'CODE' \
    --platform 'jLFZeUyr' \
    --itemId 'm5wbpT8j' \
    > test.out 2>&1
eval_tap $? 271 'GetUserEntitlementOwnershipByItemId' test.out

#- 272 GetUserEntitlementOwnershipByItemIds
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementOwnershipByItemIds \
    --namespace $AB_NAMESPACE \
    --userId 'vpsgXmZk' \
    --ids '["GS9l8ci9", "Im1vidBU", "ADaDNxUr"]' \
    --platform 'eURciQBu' \
    > test.out 2>&1
eval_tap $? 272 'GetUserEntitlementOwnershipByItemIds' test.out

#- 273 GetUserEntitlementOwnershipBySku
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementOwnershipBySku \
    --namespace $AB_NAMESPACE \
    --userId 'YLEGhY4f' \
    --entitlementClazz 'CODE' \
    --platform 'aHuG56Ap' \
    --sku 'vytwiR08' \
    > test.out 2>&1
eval_tap $? 273 'GetUserEntitlementOwnershipBySku' test.out

#- 274 RevokeAllEntitlements
$CLI_EXE \
    --sn platform \
    --op RevokeAllEntitlements \
    --namespace $AB_NAMESPACE \
    --userId 'FchMF5H5' \
    > test.out 2>&1
eval_tap $? 274 'RevokeAllEntitlements' test.out

#- 275 RevokeUserEntitlements
$CLI_EXE \
    --sn platform \
    --op RevokeUserEntitlements \
    --namespace $AB_NAMESPACE \
    --userId '7rmBlsqU' \
    --entitlementIds 'SWsotW9f' \
    > test.out 2>&1
eval_tap $? 275 'RevokeUserEntitlements' test.out

#- 276 GetUserEntitlement
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlement \
    --entitlementId 'ECejoHK3' \
    --namespace $AB_NAMESPACE \
    --userId 'm5Ufq1Ls' \
    > test.out 2>&1
eval_tap $? 276 'GetUserEntitlement' test.out

#- 277 UpdateUserEntitlement
# body param: body
echo '{"collectionId": "vRTgqWPn", "endDate": "1976-05-02T00:00:00Z", "nullFieldList": ["Kh137BJS", "LRrbZYS1", "k7Whtr6h"], "origin": "Oculus", "reason": "mGVGx1VI", "startDate": "1999-08-19T00:00:00Z", "status": "ACTIVE", "useCount": 55}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateUserEntitlement \
    --entitlementId 'r4QMKMLN' \
    --namespace $AB_NAMESPACE \
    --userId 'MFhiCbrg' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 277 'UpdateUserEntitlement' test.out

#- 278 ConsumeUserEntitlement
# body param: body
echo '{"metadata": {"vCTUyWQY": {}, "uWS58CtL": {}, "JHn9Gccr": {}}, "options": ["ad94YXxy", "e4q9umAy", "AOlVo6eK"], "platform": "cvRRp5g5", "requestId": "anVH7fpw", "useCount": 24}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ConsumeUserEntitlement \
    --entitlementId '8VokQHFQ' \
    --namespace $AB_NAMESPACE \
    --userId 'kHjOJHWL' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 278 'ConsumeUserEntitlement' test.out

#- 279 DisableUserEntitlement
$CLI_EXE \
    --sn platform \
    --op DisableUserEntitlement \
    --entitlementId '67cilyrq' \
    --namespace $AB_NAMESPACE \
    --userId 'XLcWIBMa' \
    > test.out 2>&1
eval_tap $? 279 'DisableUserEntitlement' test.out

#- 280 EnableUserEntitlement
$CLI_EXE \
    --sn platform \
    --op EnableUserEntitlement \
    --entitlementId 'IdQmZqjx' \
    --namespace $AB_NAMESPACE \
    --userId 'aWwFrw4z' \
    > test.out 2>&1
eval_tap $? 280 'EnableUserEntitlement' test.out

#- 281 GetUserEntitlementHistories
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementHistories \
    --entitlementId 'jgGplAHA' \
    --namespace $AB_NAMESPACE \
    --userId 'r8ZK0n02' \
    > test.out 2>&1
eval_tap $? 281 'GetUserEntitlementHistories' test.out

#- 282 RevokeUserEntitlement
# body param: body
echo '{"metadata": {"vwQ30mIk": {}, "kNAcdh9p": {}, "srEeYbPu": {}}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RevokeUserEntitlement \
    --entitlementId 'MBiy5XY7' \
    --namespace $AB_NAMESPACE \
    --userId '52MoYXWq' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 282 'RevokeUserEntitlement' test.out

#- 283 RevokeUserEntitlementByUseCount
# body param: body
echo '{"reason": "tcrbYlfP", "useCount": 46}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RevokeUserEntitlementByUseCount \
    --entitlementId '7EPLMbn3' \
    --namespace $AB_NAMESPACE \
    --userId 'f8efBRz6' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 283 'RevokeUserEntitlementByUseCount' test.out

#- 284 PreCheckRevokeUserEntitlementByUseCount
$CLI_EXE \
    --sn platform \
    --op PreCheckRevokeUserEntitlementByUseCount \
    --entitlementId 'FNlAUq6L' \
    --namespace $AB_NAMESPACE \
    --userId '7kwFF4wu' \
    --quantity '85' \
    > test.out 2>&1
eval_tap $? 284 'PreCheckRevokeUserEntitlementByUseCount' test.out

#- 285 RevokeUseCount
eval_tap 0 285 'RevokeUseCount # SKIP deprecated' test.out

#- 286 SellUserEntitlement
# body param: body
echo '{"platform": "dg0BPK2R", "requestId": "8ekUKWwt", "useCount": 26}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SellUserEntitlement \
    --entitlementId 'g0mr3O7Z' \
    --namespace $AB_NAMESPACE \
    --userId 'WWT2ICTw' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 286 'SellUserEntitlement' test.out

#- 287 FulfillItem
# body param: body
echo '{"duration": 2, "endDate": "1987-11-12T00:00:00Z", "entitlementCollectionId": "tE1uT9UD", "entitlementOrigin": "Other", "itemId": "gOqCi9fK", "itemSku": "6S9luapd", "language": "4R5cmtZ2", "metadata": {"pJNmkfnW": {}, "NLUEUsX9": {}, "sMXD1Jqj": {}}, "order": {"currency": {"currencyCode": "itdnnqf7", "currencySymbol": "qincQRtO", "currencyType": "REAL", "decimals": 51, "namespace": "avJe6uSN"}, "ext": {"Qvb1q7Fa": {}, "zahiSgmr": {}, "52BmwmXT": {}}, "free": false}, "orderNo": "xIvL8IxP", "origin": "GooglePlay", "overrideBundleItemQty": {"e0JBS1qm": 72, "m8GJ95Dj": 16, "S53Dfjco": 29}, "quantity": 88, "region": "4XOahO59", "source": "ACHIEVEMENT", "startDate": "1991-03-17T00:00:00Z", "storeId": "Doa7hQKi"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op FulfillItem \
    --namespace $AB_NAMESPACE \
    --userId 'zxn8IQw9' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 287 'FulfillItem' test.out

#- 288 RedeemCode
# body param: body
echo '{"code": "XEQ5KUUE", "language": "ZWgl_vWZd_276", "region": "hMG5kn9D"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RedeemCode \
    --namespace $AB_NAMESPACE \
    --userId 'x84UmpjH' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 288 'RedeemCode' test.out

#- 289 PreCheckFulfillItem
# body param: body
echo '{"itemId": "esdY62P6", "itemSku": "bbv6djC2", "quantity": 63}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PreCheckFulfillItem \
    --namespace $AB_NAMESPACE \
    --userId 'Jhlej3mU' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 289 'PreCheckFulfillItem' test.out

#- 290 FulfillRewards
# body param: body
echo '{"entitlementCollectionId": "IURhN22e", "entitlementOrigin": "Other", "metadata": {"6VoAAHLh": {}, "FrSgBR3R": {}, "wiqn66CJ": {}}, "origin": "Twitch", "rewards": [{"currency": {"currencyCode": "8ImyTiqi", "namespace": "93pecluI"}, "item": {"itemId": "RyFAomHr", "itemName": "sek1OkyI", "itemSku": "OBRzw3Tw", "itemType": "o6jcE5IB"}, "quantity": 46, "type": "CURRENCY"}, {"currency": {"currencyCode": "nUHsrDbH", "namespace": "4gbFHR0H"}, "item": {"itemId": "XgR19fFi", "itemName": "YOfjgVC6", "itemSku": "qelnYAMv", "itemType": "FOuE3ais"}, "quantity": 83, "type": "ITEM"}, {"currency": {"currencyCode": "prCjDor1", "namespace": "tE792LLl"}, "item": {"itemId": "lgbJTDpE", "itemName": "vjavRMRO", "itemSku": "N3Uo86B7", "itemType": "d6U2ExPw"}, "quantity": 26, "type": "ITEM"}], "source": "CONSUME_ENTITLEMENT", "transactionId": "N1oHENJT"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op FulfillRewards \
    --namespace $AB_NAMESPACE \
    --userId 'GX2mEz7o' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 290 'FulfillRewards' test.out

#- 291 QueryUserIAPOrders
$CLI_EXE \
    --sn platform \
    --op QueryUserIAPOrders \
    --namespace $AB_NAMESPACE \
    --userId 'HJTwxkdH' \
    --endTime 'VCBnf2fZ' \
    --limit '84' \
    --offset '50' \
    --productId 'cl1HOJxi' \
    --startTime 'LcHGyqT1' \
    --status 'FAILED' \
    --type 'PLAYSTATION' \
    > test.out 2>&1
eval_tap $? 291 'QueryUserIAPOrders' test.out

#- 292 QueryAllUserIAPOrders
$CLI_EXE \
    --sn platform \
    --op QueryAllUserIAPOrders \
    --namespace $AB_NAMESPACE \
    --userId 'u8LOPzFl' \
    > test.out 2>&1
eval_tap $? 292 'QueryAllUserIAPOrders' test.out

#- 293 QueryUserIAPConsumeHistory
$CLI_EXE \
    --sn platform \
    --op QueryUserIAPConsumeHistory \
    --namespace $AB_NAMESPACE \
    --userId 'w6rAFLfB' \
    --endTime 'jVWEfS9z' \
    --limit '29' \
    --offset '59' \
    --startTime 'BFfRfXK6' \
    --status 'PENDING' \
    --type 'TWITCH' \
    > test.out 2>&1
eval_tap $? 293 'QueryUserIAPConsumeHistory' test.out

#- 294 MockFulfillIAPItem
# body param: body
echo '{"itemIdentityType": "ITEM_SKU", "language": "vb-vUma_iO", "productId": "D1aynZm1", "region": "HzsWXQY7", "transactionId": "za3rJjLk", "type": "OCULUS"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op MockFulfillIAPItem \
    --namespace $AB_NAMESPACE \
    --userId 'aTN76I46' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 294 'MockFulfillIAPItem' test.out

#- 295 AdminSyncOculusSubscriptions
# body param: body
echo '{"skus": ["VuBphOOU", "TeSkTMyM", "XeGpK1EM"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op AdminSyncOculusSubscriptions \
    --namespace $AB_NAMESPACE \
    --userId 'ZXmNVGP6' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 295 'AdminSyncOculusSubscriptions' test.out

#- 296 AdminGetIAPOrderLineItems
$CLI_EXE \
    --sn platform \
    --op AdminGetIAPOrderLineItems \
    --iapOrderNo 'pAKU4OC4' \
    --namespace $AB_NAMESPACE \
    --userId '4MBRoINn' \
    > test.out 2>&1
eval_tap $? 296 'AdminGetIAPOrderLineItems' test.out

#- 297 AdminSyncSteamAbnormalTransaction
$CLI_EXE \
    --sn platform \
    --op AdminSyncSteamAbnormalTransaction \
    --namespace $AB_NAMESPACE \
    --userId 'MPFgnohp' \
    > test.out 2>&1
eval_tap $? 297 'AdminSyncSteamAbnormalTransaction' test.out

#- 298 AdminSyncSteamIAPByTransaction
# body param: body
echo '{"orderId": "Ea5qOSZe"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op AdminSyncSteamIAPByTransaction \
    --namespace $AB_NAMESPACE \
    --userId 'DagHFqqM' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 298 'AdminSyncSteamIAPByTransaction' test.out

#- 299 QueryUserThirdPartySubscription
$CLI_EXE \
    --sn platform \
    --op QueryUserThirdPartySubscription \
    --namespace $AB_NAMESPACE \
    --userId 'gB4oQrhN' \
    --activeOnly 'true' \
    --groupId 'GLvITqJX' \
    --limit '100' \
    --offset '77' \
    --platform 'APPLE' \
    --productId 'NUWyonW6' \
    > test.out 2>&1
eval_tap $? 299 'QueryUserThirdPartySubscription' test.out

#- 300 GetThirdPartyPlatformSubscriptionOwnershipByGroupId
$CLI_EXE \
    --sn platform \
    --op GetThirdPartyPlatformSubscriptionOwnershipByGroupId \
    --namespace $AB_NAMESPACE \
    --platform 'GOOGLE' \
    --userId 'oLlZc31l' \
    --groupId '8w7lgWYm' \
    > test.out 2>&1
eval_tap $? 300 'GetThirdPartyPlatformSubscriptionOwnershipByGroupId' test.out

#- 301 GetThirdPartyPlatformSubscriptionOwnershipByProductId
$CLI_EXE \
    --sn platform \
    --op GetThirdPartyPlatformSubscriptionOwnershipByProductId \
    --namespace $AB_NAMESPACE \
    --platform 'APPLE' \
    --userId 'Kx6upgN0' \
    --productId 'CK7SDLzI' \
    > test.out 2>&1
eval_tap $? 301 'GetThirdPartyPlatformSubscriptionOwnershipByProductId' test.out

#- 302 QueryUserThirdPartySubscriptionTransactions
$CLI_EXE \
    --sn platform \
    --op QueryUserThirdPartySubscriptionTransactions \
    --namespace $AB_NAMESPACE \
    --userId '2Re3ZEdn' \
    --activeOnly 'true' \
    --groupId 'gJooiBJF' \
    --limit '84' \
    --offset '43' \
    --platform 'TWITCH' \
    --productId 'JQZLlmi6' \
    > test.out 2>&1
eval_tap $? 302 'QueryUserThirdPartySubscriptionTransactions' test.out

#- 303 GetThirdPartySubscriptionDetails
$CLI_EXE \
    --sn platform \
    --op GetThirdPartySubscriptionDetails \
    --id 'Ev4LO6cu' \
    --namespace $AB_NAMESPACE \
    --userId '52uHljlQ' \
    > test.out 2>&1
eval_tap $? 303 'GetThirdPartySubscriptionDetails' test.out

#- 304 GetSubscriptionHistory
$CLI_EXE \
    --sn platform \
    --op GetSubscriptionHistory \
    --id 'VxKCvoLj' \
    --namespace $AB_NAMESPACE \
    --userId 'v6827tCe' \
    --limit '74' \
    --offset '36' \
    > test.out 2>&1
eval_tap $? 304 'GetSubscriptionHistory' test.out

#- 305 SyncSubscriptionTransaction
$CLI_EXE \
    --sn platform \
    --op SyncSubscriptionTransaction \
    --id '7DqjnVNZ' \
    --namespace $AB_NAMESPACE \
    --userId 'CPeOwMJQ' \
    > test.out 2>&1
eval_tap $? 305 'SyncSubscriptionTransaction' test.out

#- 306 GetThirdPartyUserSubscriptionDetails
$CLI_EXE \
    --sn platform \
    --op GetThirdPartyUserSubscriptionDetails \
    --id 'c3yq9uHS' \
    --namespace $AB_NAMESPACE \
    --userId 'EtSaRGy9' \
    > test.out 2>&1
eval_tap $? 306 'GetThirdPartyUserSubscriptionDetails' test.out

#- 307 SyncSubscription
$CLI_EXE \
    --sn platform \
    --op SyncSubscription \
    --id 'xCOphAtk' \
    --namespace $AB_NAMESPACE \
    --userId 'O7ionyeW' \
    > test.out 2>&1
eval_tap $? 307 'SyncSubscription' test.out

#- 308 QueryUserOrders
$CLI_EXE \
    --sn platform \
    --op QueryUserOrders \
    --namespace $AB_NAMESPACE \
    --userId 'cbtDMzuE' \
    --discounted 'false' \
    --itemId 'tDBuW7CM' \
    --limit '96' \
    --offset '70' \
    --status 'CHARGED' \
    > test.out 2>&1
eval_tap $? 308 'QueryUserOrders' test.out

#- 309 AdminCreateUserOrder
# body param: body
echo '{"currencyCode": "SqfYukQt", "currencyNamespace": "YhxAb5sO", "discountCodes": ["0FEsLVdA", "34Wj4LVt", "32uP90QK"], "discountedPrice": 86, "entitlementPlatform": "Epic", "ext": {"rBaO9wSX": {}, "5asJT5MT": {}, "1zs7bgBU": {}}, "itemId": "78pRQMe0", "language": "TJjJkZwm", "options": {"skipPriceValidation": false}, "platform": "Steam", "price": 35, "quantity": 33, "region": "TfM9IQfo", "returnUrl": "5SVU3zDf", "sandbox": false, "sectionId": "z63qpXJm"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op AdminCreateUserOrder \
    --namespace $AB_NAMESPACE \
    --userId '7H1xOLrW' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 309 'AdminCreateUserOrder' test.out

#- 310 CountOfPurchasedItem
$CLI_EXE \
    --sn platform \
    --op CountOfPurchasedItem \
    --namespace $AB_NAMESPACE \
    --userId '1RUGekZK' \
    --itemId 'QEkoqqsJ' \
    > test.out 2>&1
eval_tap $? 310 'CountOfPurchasedItem' test.out

#- 311 GetUserOrder
$CLI_EXE \
    --sn platform \
    --op GetUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo '1N8AKfsw' \
    --userId 'i5NMLjE3' \
    > test.out 2>&1
eval_tap $? 311 'GetUserOrder' test.out

#- 312 UpdateUserOrderStatus
# body param: body
echo '{"status": "CLOSED", "statusReason": "ERCsbvpM"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateUserOrderStatus \
    --namespace $AB_NAMESPACE \
    --orderNo 'bAlmRv5U' \
    --userId 'nEHEZ55B' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 312 'UpdateUserOrderStatus' test.out

#- 313 FulfillUserOrder
$CLI_EXE \
    --sn platform \
    --op FulfillUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo '3NkUviNH' \
    --userId 'WnlrW0Uy' \
    > test.out 2>&1
eval_tap $? 313 'FulfillUserOrder' test.out

#- 314 GetUserOrderGrant
eval_tap 0 314 'GetUserOrderGrant # SKIP deprecated' test.out

#- 315 GetUserOrderHistories
$CLI_EXE \
    --sn platform \
    --op GetUserOrderHistories \
    --namespace $AB_NAMESPACE \
    --orderNo 'Wr7dS1nD' \
    --userId '9Rns5Znc' \
    > test.out 2>&1
eval_tap $? 315 'GetUserOrderHistories' test.out

#- 316 ProcessUserOrderNotification
# body param: body
echo '{"additionalData": {"cardSummary": "YbZaU41E"}, "authorisedTime": "1980-01-27T00:00:00Z", "chargebackReversedTime": "1995-07-13T00:00:00Z", "chargebackTime": "1989-04-22T00:00:00Z", "chargedTime": "1999-06-27T00:00:00Z", "createdTime": "1993-08-02T00:00:00Z", "currency": {"currencyCode": "ksOa8Ye4", "currencySymbol": "3UbxE2ec", "currencyType": "VIRTUAL", "decimals": 6, "namespace": "yjF9ezU2"}, "customParameters": {"NrcLxcJR": {}, "wmsvCjwm": {}, "UUu1VY2D": {}}, "extOrderNo": "AEi5Ywzk", "extTxId": "c5rugdJE", "extUserId": "lHcR0ZpM", "issuedAt": "1990-10-28T00:00:00Z", "metadata": {"lWf83A0c": "ujGEv3ja", "sEqwwdeo": "AGYU0fCj", "1z3AVArk": "kzy6gADE"}, "namespace": "RFQX3HsQ", "nonceStr": "DzpNZ7l5", "paymentData": {"discountAmount": 3, "discountCode": "iOeddUAv", "subtotalPrice": 59, "tax": 10, "totalPrice": 82}, "paymentMethod": "lPOMwwVk", "paymentMethodFee": 79, "paymentOrderNo": "nwaFxrSj", "paymentProvider": "XSOLLA", "paymentProviderFee": 34, "paymentStationUrl": "dbpchLcW", "price": 21, "refundedTime": "1996-11-27T00:00:00Z", "salesTax": 35, "sandbox": false, "sku": "T7v1cbKH", "status": "DELETED", "statusReason": "8duGquPP", "subscriptionId": "5awV7Z9k", "subtotalPrice": 84, "targetNamespace": "pKi7ygEp", "targetUserId": "Ym8yZy8t", "tax": 65, "totalPrice": 86, "totalTax": 56, "txEndTime": "1995-12-31T00:00:00Z", "type": "5KPfZc2V", "userId": "3FSSCsZq", "vat": 19}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ProcessUserOrderNotification \
    --namespace $AB_NAMESPACE \
    --orderNo 'JCg256fF' \
    --userId 'UAK7xIgx' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 316 'ProcessUserOrderNotification' test.out

#- 317 DownloadUserOrderReceipt
$CLI_EXE \
    --sn platform \
    --op DownloadUserOrderReceipt \
    --namespace $AB_NAMESPACE \
    --orderNo 'MTaPrnRC' \
    --userId '8g24brll' \
    > test.out 2>&1
eval_tap $? 317 'DownloadUserOrderReceipt' test.out

#- 318 CreateUserPaymentOrder
# body param: body
echo '{"currencyCode": "H7RGFRVE", "currencyNamespace": "mx6CKHbS", "customParameters": {"UMaDgRwF": {}, "GXY5Qkyt": {}, "LMhrRBTu": {}}, "description": "0zhkoZNi", "extOrderNo": "b0Dd5Xlm", "extUserId": "GEiDSc9k", "itemType": "APP", "language": "MY-crnL", "metadata": {"UgG5IxAc": "kHa3MW4Z", "Cz6m10Jb": "BvXzyTlQ", "eqzFigyZ": "Zvx2XZ0F"}, "notifyUrl": "xO8BB9Lx", "omitNotification": true, "platform": "lOOAOyfb", "price": 39, "recurringPaymentOrderNo": "59T9rCWv", "region": "GaTBAtOr", "returnUrl": "MF1OaDzj", "sandbox": false, "sku": "7lo9LLka", "subscriptionId": "K5lDDJ3e", "title": "4c3jzNEs"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateUserPaymentOrder \
    --namespace $AB_NAMESPACE \
    --userId 'XwWzu6hX' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 318 'CreateUserPaymentOrder' test.out

#- 319 RefundUserPaymentOrder
# body param: body
echo '{"description": "kwblvrtE"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RefundUserPaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'kiYDbPzG' \
    --userId 'XUw4gFZ3' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 319 'RefundUserPaymentOrder' test.out

#- 320 GetUserPlatformAccountClosureHistories
$CLI_EXE \
    --sn platform \
    --op GetUserPlatformAccountClosureHistories \
    --namespace $AB_NAMESPACE \
    --userId 'bnaA6Bc9' \
    > test.out 2>&1
eval_tap $? 320 'GetUserPlatformAccountClosureHistories' test.out

#- 321 ApplyUserRedemption
# body param: body
echo '{"code": "73YCqC1N", "orderNo": "6nixa6xy"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ApplyUserRedemption \
    --namespace $AB_NAMESPACE \
    --userId 'nLtYnRDT' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 321 'ApplyUserRedemption' test.out

#- 322 DoRevocation
# body param: body
echo '{"meta": {"jYSnemv2": {}, "0g1LuxxI": {}, "RIEhxJcs": {}}, "reason": "okKvDmTx", "requestId": "MPvtY833", "revokeEntries": [{"currency": {"balanceOrigin": "Oculus", "currencyCode": "pzNTJoTQ", "namespace": "txFNywzd"}, "entitlement": {"entitlementId": "PJqZQdm1"}, "item": {"entitlementOrigin": "IOS", "itemIdentity": "SKJMED55", "itemIdentityType": "ITEM_ID", "origin": "Xbox"}, "quantity": 31, "type": "ITEM"}, {"currency": {"balanceOrigin": "Nintendo", "currencyCode": "VnuNCBCf", "namespace": "hT5uUXZS"}, "entitlement": {"entitlementId": "mxsvPZ0Z"}, "item": {"entitlementOrigin": "IOS", "itemIdentity": "lREI3ckm", "itemIdentityType": "ITEM_SKU", "origin": "IOS"}, "quantity": 93, "type": "ENTITLEMENT"}, {"currency": {"balanceOrigin": "Twitch", "currencyCode": "4dmVnH8w", "namespace": "42lX8tDV"}, "entitlement": {"entitlementId": "ksDASbRx"}, "item": {"entitlementOrigin": "Twitch", "itemIdentity": "kb6tFev4", "itemIdentityType": "ITEM_ID", "origin": "GooglePlay"}, "quantity": 42, "type": "CURRENCY"}], "source": "OTHER", "transactionId": "ft6iliTy"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op DoRevocation \
    --namespace $AB_NAMESPACE \
    --userId 'YB4f3E7k' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 322 'DoRevocation' test.out

#- 323 RegisterXblSessions
# body param: body
echo '{"gameSessionId": "Qcr9hC1t", "payload": {"dLEBc9As": {}, "gve7Q4Sn": {}, "q45jofqS": {}}, "scid": "0C91YqFt", "sessionTemplateName": "LEYiTLZd"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RegisterXblSessions \
    --namespace $AB_NAMESPACE \
    --userId 'yttXUamf' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 323 'RegisterXblSessions' test.out

#- 324 QueryUserSubscriptions
$CLI_EXE \
    --sn platform \
    --op QueryUserSubscriptions \
    --namespace $AB_NAMESPACE \
    --userId 'uoT7I0pF' \
    --chargeStatus 'CHARGED' \
    --itemId 'pciQDeBb' \
    --limit '36' \
    --offset '52' \
    --sku 'fWoAqbOE' \
    --status 'EXPIRED' \
    --subscribedBy 'USER' \
    > test.out 2>&1
eval_tap $? 324 'QueryUserSubscriptions' test.out

#- 325 GetUserSubscriptionActivities
$CLI_EXE \
    --sn platform \
    --op GetUserSubscriptionActivities \
    --namespace $AB_NAMESPACE \
    --userId 'JpaMeXKs' \
    --excludeSystem 'true' \
    --limit '43' \
    --offset '19' \
    --subscriptionId '1oPtp6gb' \
    > test.out 2>&1
eval_tap $? 325 'GetUserSubscriptionActivities' test.out

#- 326 PlatformSubscribeSubscription
# body param: body
echo '{"grantDays": 31, "itemId": "pSmlMHox", "language": "G592RPek", "reason": "OE08KOx9", "region": "LqrjIlU1", "source": "sx0LZ1P0"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PlatformSubscribeSubscription \
    --namespace $AB_NAMESPACE \
    --userId '7n1gVWrX' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 326 'PlatformSubscribeSubscription' test.out

#- 327 CheckUserSubscriptionSubscribableByItemId
$CLI_EXE \
    --sn platform \
    --op CheckUserSubscriptionSubscribableByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'ytyb8HD1' \
    --itemId 'sjvKWnvK' \
    > test.out 2>&1
eval_tap $? 327 'CheckUserSubscriptionSubscribableByItemId' test.out

#- 328 GetUserSubscription
$CLI_EXE \
    --sn platform \
    --op GetUserSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'wDwEz75J' \
    --userId 'TkXKzwEB' \
    > test.out 2>&1
eval_tap $? 328 'GetUserSubscription' test.out

#- 329 DeleteUserSubscription
$CLI_EXE \
    --sn platform \
    --op DeleteUserSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'VHrgPFKD' \
    --userId 'bllbeREE' \
    > test.out 2>&1
eval_tap $? 329 'DeleteUserSubscription' test.out

#- 330 CancelSubscription
# body param: body
echo '{"immediate": false, "reason": "45XWRlP8"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CancelSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'TzndQhx0' \
    --userId '8owP97oV' \
    --force 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 330 'CancelSubscription' test.out

#- 331 GrantDaysToSubscription
# body param: body
echo '{"grantDays": 6, "reason": "XA7m7cXr"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op GrantDaysToSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'UaTlb3Pc' \
    --userId 'NJbIH83e' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 331 'GrantDaysToSubscription' test.out

#- 332 GetUserSubscriptionBillingHistories
$CLI_EXE \
    --sn platform \
    --op GetUserSubscriptionBillingHistories \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'iHLrVGED' \
    --userId 'B9r7iqXJ' \
    --excludeFree 'true' \
    --limit '70' \
    --offset '57' \
    > test.out 2>&1
eval_tap $? 332 'GetUserSubscriptionBillingHistories' test.out

#- 333 ProcessUserSubscriptionNotification
# body param: body
echo '{"additionalData": {"cardSummary": "OcrNJ60V"}, "authorisedTime": "1980-04-11T00:00:00Z", "chargebackReversedTime": "1983-04-04T00:00:00Z", "chargebackTime": "1982-05-20T00:00:00Z", "chargedTime": "1994-01-07T00:00:00Z", "createdTime": "1973-12-03T00:00:00Z", "currency": {"currencyCode": "EN8xvwE3", "currencySymbol": "3mDMeErM", "currencyType": "VIRTUAL", "decimals": 70, "namespace": "w0WNTdX2"}, "customParameters": {"rVX6esN1": {}, "fR4sBKOW": {}, "KLU8qzWV": {}}, "extOrderNo": "rQK9Lq5P", "extTxId": "HyiKuCka", "extUserId": "UzZOKLde", "issuedAt": "1973-11-28T00:00:00Z", "metadata": {"OXlROcPb": "He5XmbnR", "n0RHbPmt": "umZBZ1ya", "T3Mpak9Y": "1Pd8LlfZ"}, "namespace": "G4Y4TBmj", "nonceStr": "ONNtWByG", "paymentData": {"discountAmount": 100, "discountCode": "92enDYqq", "subtotalPrice": 76, "tax": 12, "totalPrice": 78}, "paymentMethod": "qWlwtfeX", "paymentMethodFee": 25, "paymentOrderNo": "BNnYCLjd", "paymentProvider": "ADYEN", "paymentProviderFee": 16, "paymentStationUrl": "FEJTikK7", "price": 76, "refundedTime": "1974-04-30T00:00:00Z", "salesTax": 73, "sandbox": false, "sku": "LZo1hXfD", "status": "DELETED", "statusReason": "jChiDpr3", "subscriptionId": "dcvEVJui", "subtotalPrice": 51, "targetNamespace": "1qaquDcF", "targetUserId": "J0Xigo67", "tax": 29, "totalPrice": 90, "totalTax": 86, "txEndTime": "1991-06-16T00:00:00Z", "type": "HjT8Ujzu", "userId": "xhb7SmXR", "vat": 62}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ProcessUserSubscriptionNotification \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'cQoa5g5B' \
    --userId 'L1fkSCo0' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 333 'ProcessUserSubscriptionNotification' test.out

#- 334 AcquireUserTicket
# body param: body
echo '{"count": 34, "orderNo": "Rslt4Yoe"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op AcquireUserTicket \
    --boothName 'BYQpHeLo' \
    --namespace $AB_NAMESPACE \
    --userId 'NZdahIR0' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 334 'AcquireUserTicket' test.out

#- 335 QueryUserCurrencyWallets
$CLI_EXE \
    --sn platform \
    --op QueryUserCurrencyWallets \
    --namespace $AB_NAMESPACE \
    --userId 'Ot9OpPdS' \
    > test.out 2>&1
eval_tap $? 335 'QueryUserCurrencyWallets' test.out

#- 336 DebitUserWalletByCurrencyCode
# body param: body
echo '{"allowOverdraft": false, "amount": 20, "balanceOrigin": "IOS", "balanceSource": "ORDER_REVOCATION", "metadata": {"ymllGLe8": {}, "WN7Pmvii": {}, "pAhVlDBS": {}}, "reason": "2x3Hason"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op DebitUserWalletByCurrencyCode \
    --currencyCode 'ioCg3Ri0' \
    --namespace $AB_NAMESPACE \
    --userId '79rFJLEx' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 336 'DebitUserWalletByCurrencyCode' test.out

#- 337 ListUserCurrencyTransactions
$CLI_EXE \
    --sn platform \
    --op ListUserCurrencyTransactions \
    --currencyCode 'S6NRjMqB' \
    --namespace $AB_NAMESPACE \
    --userId '78wf7480' \
    --limit '34' \
    --offset '86' \
    > test.out 2>&1
eval_tap $? 337 'ListUserCurrencyTransactions' test.out

#- 338 CheckBalance
# body param: request
echo '{"amount": 26, "debitBalanceSource": "EXPIRATION", "metadata": {"mAxPgDbw": {}, "Mll9l42c": {}, "fexrgUM7": {}}, "reason": "Q0A2wQOJ", "walletPlatform": "Nintendo"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CheckBalance \
    --currencyCode 'LtNpVfOj' \
    --namespace $AB_NAMESPACE \
    --userId 'hV7Cmz8t' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 338 'CheckBalance' test.out

#- 339 CheckWallet
eval_tap 0 339 'CheckWallet # SKIP deprecated' test.out

#- 340 CreditUserWallet
# body param: body
echo '{"amount": 44, "expireAt": "1985-10-19T00:00:00Z", "metadata": {"CjD1VBdW": {}, "SGdAP6hh": {}, "DkRLsy3e": {}}, "origin": "GooglePlay", "reason": "NQgw7niu", "source": "DLC"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreditUserWallet \
    --currencyCode 'V65HcPXc' \
    --namespace $AB_NAMESPACE \
    --userId '5YJBDJmJ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 340 'CreditUserWallet' test.out

#- 341 DebitByWalletPlatform
# body param: request
echo '{"amount": 80, "debitBalanceSource": "PAYMENT", "metadata": {"uxLM4fa0": {}, "KrVufeuS": {}, "VV9sY23z": {}}, "reason": "3C1aqI5t", "walletPlatform": "Xbox"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op DebitByWalletPlatform \
    --currencyCode 'VYJLTB6l' \
    --namespace $AB_NAMESPACE \
    --userId '4bc8R1xY' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 341 'DebitByWalletPlatform' test.out

#- 342 PayWithUserWallet
# body param: body
echo '{"amount": 86, "metadata": {"GAl8P3F1": {}, "bRYKUW8o": {}, "1LqtDkp6": {}}, "walletPlatform": "GooglePlay"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PayWithUserWallet \
    --currencyCode 'UmLlWLJV' \
    --namespace $AB_NAMESPACE \
    --userId 'ssOq3kNh' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 342 'PayWithUserWallet' test.out

#- 343 GetUserWallet
eval_tap 0 343 'GetUserWallet # SKIP deprecated' test.out

#- 344 DebitUserWallet
eval_tap 0 344 'DebitUserWallet # SKIP deprecated' test.out

#- 345 DisableUserWallet
eval_tap 0 345 'DisableUserWallet # SKIP deprecated' test.out

#- 346 EnableUserWallet
eval_tap 0 346 'EnableUserWallet # SKIP deprecated' test.out

#- 347 ListUserWalletTransactions
eval_tap 0 347 'ListUserWalletTransactions # SKIP deprecated' test.out

#- 348 ListViews
$CLI_EXE \
    --sn platform \
    --op ListViews \
    --namespace $AB_NAMESPACE \
    --storeId 'vcPOv5ip' \
    > test.out 2>&1
eval_tap $? 348 'ListViews' test.out

#- 349 CreateView
# body param: body
echo '{"displayOrder": 32, "localizations": {"vvrPKfEJ": {"description": "nKO42lVv", "localExt": {"Y9hhCIzU": {}, "hRQoZ2dj": {}, "gcykwm5U": {}}, "longDescription": "ijMoQZCi", "title": "6BYsrKw5"}, "LY6GHdtD": {"description": "S8uLax3D", "localExt": {"iHANngNh": {}, "bFSkXvgP": {}, "CAiQ7b9y": {}}, "longDescription": "m19MJILP", "title": "xpUAp9uq"}, "N6MzjrWB": {"description": "q2TqjtaT", "localExt": {"6WppFbTW": {}, "YWrOFydA": {}, "8QMQt2cb": {}}, "longDescription": "q7YVmRz1", "title": "M5cBdc7u"}}, "name": "J1oohtUo"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateView \
    --namespace $AB_NAMESPACE \
    --storeId 'ff5Opiva' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 349 'CreateView' test.out

#- 350 GetView
$CLI_EXE \
    --sn platform \
    --op GetView \
    --namespace $AB_NAMESPACE \
    --viewId '7gARYzX7' \
    --storeId 'FTJITBb3' \
    > test.out 2>&1
eval_tap $? 350 'GetView' test.out

#- 351 UpdateView
# body param: body
echo '{"displayOrder": 50, "localizations": {"9R7859pk": {"description": "pjIHXdc7", "localExt": {"EUEGPdQ4": {}, "jTAqzxkW": {}, "2XqbVpIU": {}}, "longDescription": "SKUokDAt", "title": "f9QT69Rd"}, "xhkpUc5X": {"description": "Y4S1N8Ff", "localExt": {"nVeibHYZ": {}, "EcQ4TxMl": {}, "GCtiU4yn": {}}, "longDescription": "VQjOkaFq", "title": "rb0wv63D"}, "teFEpEB9": {"description": "FYn7S21K", "localExt": {"htPDKbQm": {}, "Ero4dFV8": {}, "oUqsfARI": {}}, "longDescription": "bL0tutuC", "title": "wg7OIj1P"}}, "name": "imzC90QD"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateView \
    --namespace $AB_NAMESPACE \
    --viewId '0jTdxcjv' \
    --storeId 'o6DiZ9ov' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 351 'UpdateView' test.out

#- 352 DeleteView
$CLI_EXE \
    --sn platform \
    --op DeleteView \
    --namespace $AB_NAMESPACE \
    --viewId 'yEMAPLgr' \
    --storeId '9o0YO2fF' \
    > test.out 2>&1
eval_tap $? 352 'DeleteView' test.out

#- 353 GetWalletConfig
$CLI_EXE \
    --sn platform \
    --op GetWalletConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 353 'GetWalletConfig' test.out

#- 354 UpdateWalletConfig
# body param: body
echo '{"enablePaidForVCExpiration": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateWalletConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 354 'UpdateWalletConfig' test.out

#- 355 QueryWallets
eval_tap 0 355 'QueryWallets # SKIP deprecated' test.out

#- 356 BulkCredit
# body param: body
echo '[{"creditRequest": {"amount": 78, "expireAt": "1974-04-02T00:00:00Z", "metadata": {"eEUlSsFU": {}, "cvrOzMR8": {}, "n7rgyaNu": {}}, "origin": "System", "reason": "DxaKNWtl", "source": "REWARD"}, "currencyCode": "mpuiyoQr", "userIds": ["P6a5CsKy", "a7vMZiva", "l0CzV7fe"]}, {"creditRequest": {"amount": 6, "expireAt": "1975-09-14T00:00:00Z", "metadata": {"ZDyFyBlK": {}, "W6INtrBi": {}, "kXXeOIXq": {}}, "origin": "Twitch", "reason": "GbepWPs4", "source": "PROMOTION"}, "currencyCode": "q8AE4Mza", "userIds": ["llOyv2GA", "bMY0BpRJ", "Vpp7L4t9"]}, {"creditRequest": {"amount": 22, "expireAt": "1981-09-17T00:00:00Z", "metadata": {"QaNqVQeQ": {}, "j6cDPNcV": {}, "b6nn0nDG": {}}, "origin": "Oculus", "reason": "A00V1ksh", "source": "CONSUME_ENTITLEMENT"}, "currencyCode": "nc6aXlWF", "userIds": ["ok0TA7bD", "Z9ELbpgh", "3FiSmRW7"]}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op BulkCredit \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 356 'BulkCredit' test.out

#- 357 BulkDebit
# body param: body
echo '[{"currencyCode": "oGAtmBlC", "request": {"allowOverdraft": false, "amount": 1, "balanceOrigin": "Epic", "balanceSource": "TRADE", "metadata": {"Cw2XOlJn": {}, "OUsi5lQR": {}, "P6SX44KP": {}}, "reason": "l5PLZ0AP"}, "userIds": ["qbHvZGKg", "81TOAHPN", "3RwlSxrk"]}, {"currencyCode": "9K49MisF", "request": {"allowOverdraft": true, "amount": 19, "balanceOrigin": "Other", "balanceSource": "IAP_REVOCATION", "metadata": {"77UDzZRO": {}, "a9uTKvf1": {}, "hpBpG6pd": {}}, "reason": "xmShQ5EU"}, "userIds": ["h4M5ezpF", "1aHr207p", "huv3oSQS"]}, {"currencyCode": "4tkKEev5", "request": {"allowOverdraft": false, "amount": 44, "balanceOrigin": "Playstation", "balanceSource": "ORDER_REVOCATION", "metadata": {"ZmoghsXt": {}, "5Iv66ISW": {}, "hikSSS7n": {}}, "reason": "ifPxTQr9"}, "userIds": ["zfPQjTJV", "68zlCRlI", "ZJ4pwiRC"]}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op BulkDebit \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 357 'BulkDebit' test.out

#- 358 GetWallet
eval_tap 0 358 'GetWallet # SKIP deprecated' test.out

#- 359 SyncOrders
$CLI_EXE \
    --sn platform \
    --op SyncOrders \
    --nextEvaluatedKey 'nfMuvAfF' \
    --end 'LKqxuDSD' \
    --start 'cIM68h6p' \
    > test.out 2>&1
eval_tap $? 359 'SyncOrders' test.out

#- 360 TestAdyenConfig
# body param: body
echo '{"allowedPaymentMethods": ["5CsCfMls", "F18JMGQ3", "GpSgJWdB"], "apiKey": "aCLZD3BR", "authoriseAsCapture": false, "blockedPaymentMethods": ["LY27WnnU", "06S3ExCD", "idigmpLg"], "clientKey": "D3qNezaU", "dropInSettings": "moKor2xb", "liveEndpointUrlPrefix": "sDrUOxfF", "merchantAccount": "oliabZS7", "notificationHmacKey": "vJXW7RB2", "notificationPassword": "BAy2cIR0", "notificationUsername": "FwXoSoNw", "returnUrl": "rJAjR7dy", "settings": "M13dIctM"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestAdyenConfig \
    --sandbox 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 360 'TestAdyenConfig' test.out

#- 361 TestAliPayConfig
# body param: body
echo '{"appId": "iEQ5UzIG", "privateKey": "FFXhy3Ln", "publicKey": "vSUWCbxi", "returnUrl": "1LV6s0wh"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestAliPayConfig \
    --sandbox 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 361 'TestAliPayConfig' test.out

#- 362 TestCheckoutConfig
# body param: body
echo '{"publicKey": "uSbLiRfC", "secretKey": "racMWMU2"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestCheckoutConfig \
    --sandbox 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 362 'TestCheckoutConfig' test.out

#- 363 DebugMatchedPaymentMerchantConfig
$CLI_EXE \
    --sn platform \
    --op DebugMatchedPaymentMerchantConfig \
    --namespace_ 't0CNIBgR' \
    --region 'p83a1dSm' \
    > test.out 2>&1
eval_tap $? 363 'DebugMatchedPaymentMerchantConfig' test.out

#- 364 TestNeonPayConfig
# body param: body
echo '{"apiKey": "liXCHPVG", "webhookSecretKey": "4jwqnpm9"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestNeonPayConfig \
    --sandbox 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 364 'TestNeonPayConfig' test.out

#- 365 TestPayPalConfig
# body param: body
echo '{"clientID": "pwm19W79", "clientSecret": "DhuMUmpJ", "returnUrl": "bsiQDPB4", "webHookId": "gQPcBfnM"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestPayPalConfig \
    --sandbox 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 365 'TestPayPalConfig' test.out

#- 366 TestStripeConfig
# body param: body
echo '{"allowedPaymentMethodTypes": ["JdALudla", "AQ3ufaEa", "MFcuLTPp"], "publishableKey": "QUUth2Y9", "secretKey": "lVWnFg9K", "webhookSecret": "Hd3Ff34J"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestStripeConfig \
    --sandbox 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 366 'TestStripeConfig' test.out

#- 367 TestWxPayConfig
# body param: body
echo '{"appId": "FucP1OYy", "key": "78EoGajM", "mchid": "mqvDWtts", "returnUrl": "HK2xIp8e"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestWxPayConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 367 'TestWxPayConfig' test.out

#- 368 TestXsollaConfig
# body param: body
echo '{"apiKey": "QJVmj0Bt", "flowCompletionUrl": "J8OGCuVt", "merchantId": 67, "projectId": 59, "projectSecretKey": "0cmuWYaP"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestXsollaConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 368 'TestXsollaConfig' test.out

#- 369 GetPaymentMerchantConfig1
$CLI_EXE \
    --sn platform \
    --op GetPaymentMerchantConfig1 \
    --id 'qOaOzjZ4' \
    > test.out 2>&1
eval_tap $? 369 'GetPaymentMerchantConfig1' test.out

#- 370 UpdateAdyenConfig
# body param: body
echo '{"allowedPaymentMethods": ["2Nxa6SSa", "dRUkI5hT", "sGyFqO7m"], "apiKey": "EfMtsigY", "authoriseAsCapture": false, "blockedPaymentMethods": ["49zbuITl", "nAmuJY1T", "Q58LllWO"], "clientKey": "CmPLeUTD", "dropInSettings": "Q4LRaxrr", "liveEndpointUrlPrefix": "UDREJocC", "merchantAccount": "MWlphnEh", "notificationHmacKey": "aPHDJ26B", "notificationPassword": "oZTQcUsp", "notificationUsername": "3cy5170f", "returnUrl": "Ww5OFaQT", "settings": "hsyLECqm"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateAdyenConfig \
    --id 'fn4XGOVC' \
    --sandbox 'false' \
    --validate 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 370 'UpdateAdyenConfig' test.out

#- 371 TestAdyenConfigById
$CLI_EXE \
    --sn platform \
    --op TestAdyenConfigById \
    --id 'CCCIKG42' \
    --sandbox 'true' \
    > test.out 2>&1
eval_tap $? 371 'TestAdyenConfigById' test.out

#- 372 UpdateAliPayConfig
# body param: body
echo '{"appId": "RrrmpVku", "privateKey": "v65rqqdF", "publicKey": "WIjd6yQ3", "returnUrl": "aWWqaC2b"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateAliPayConfig \
    --id 'r1PZ80ut' \
    --sandbox 'false' \
    --validate 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 372 'UpdateAliPayConfig' test.out

#- 373 TestAliPayConfigById
$CLI_EXE \
    --sn platform \
    --op TestAliPayConfigById \
    --id 'orlBVF0g' \
    --sandbox 'false' \
    > test.out 2>&1
eval_tap $? 373 'TestAliPayConfigById' test.out

#- 374 UpdateCheckoutConfig
# body param: body
echo '{"publicKey": "uQHVBi4c", "secretKey": "hWCcWCxe"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCheckoutConfig \
    --id 'f3GBXqKQ' \
    --sandbox 'false' \
    --validate 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 374 'UpdateCheckoutConfig' test.out

#- 375 TestCheckoutConfigById
$CLI_EXE \
    --sn platform \
    --op TestCheckoutConfigById \
    --id 'mPwpgrSn' \
    --sandbox 'false' \
    > test.out 2>&1
eval_tap $? 375 'TestCheckoutConfigById' test.out

#- 376 UpdateNeonPayConfig
# body param: body
echo '{"apiKey": "xhwpTFaI", "webhookSecretKey": "iLjmBnsV"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateNeonPayConfig \
    --id 'g30AC5uu' \
    --sandbox 'false' \
    --validate 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 376 'UpdateNeonPayConfig' test.out

#- 377 TestNeonPayConfigById
$CLI_EXE \
    --sn platform \
    --op TestNeonPayConfigById \
    --id 'qPP17pjG' \
    --sandbox 'true' \
    > test.out 2>&1
eval_tap $? 377 'TestNeonPayConfigById' test.out

#- 378 UpdatePayPalConfig
# body param: body
echo '{"clientID": "6VX1bo9f", "clientSecret": "PU0bqdGR", "returnUrl": "Xc5PDM7x", "webHookId": "NE6ioXHD"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePayPalConfig \
    --id 'S9OuBs9g' \
    --sandbox 'true' \
    --validate 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 378 'UpdatePayPalConfig' test.out

#- 379 TestPayPalConfigById
$CLI_EXE \
    --sn platform \
    --op TestPayPalConfigById \
    --id 'xv9UYiM0' \
    --sandbox 'true' \
    > test.out 2>&1
eval_tap $? 379 'TestPayPalConfigById' test.out

#- 380 UpdateStripeConfig
# body param: body
echo '{"allowedPaymentMethodTypes": ["tDpwz19j", "Sg8Su78I", "ulaqCBJo"], "publishableKey": "UWGxnJgm", "secretKey": "HLSY8RRs", "webhookSecret": "gDMjL0el"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateStripeConfig \
    --id 'fmZfkbWD' \
    --sandbox 'false' \
    --validate 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 380 'UpdateStripeConfig' test.out

#- 381 TestStripeConfigById
$CLI_EXE \
    --sn platform \
    --op TestStripeConfigById \
    --id 'RDSE6e31' \
    --sandbox 'false' \
    > test.out 2>&1
eval_tap $? 381 'TestStripeConfigById' test.out

#- 382 UpdateWxPayConfig
# body param: body
echo '{"appId": "QWonkXjl", "key": "1QVqrPGv", "mchid": "gPQhhpjz", "returnUrl": "aGCPSigZ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateWxPayConfig \
    --id 'n7h7H99f' \
    --validate 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 382 'UpdateWxPayConfig' test.out

#- 383 UpdateWxPayConfigCert
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UpdateWxPayConfigCert \
    --id '5t17lwJ1' \
    --upload file $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 383 'UpdateWxPayConfigCert' test.out

#- 384 TestWxPayConfigById
$CLI_EXE \
    --sn platform \
    --op TestWxPayConfigById \
    --id 'zQOqCx1F' \
    > test.out 2>&1
eval_tap $? 384 'TestWxPayConfigById' test.out

#- 385 UpdateXsollaConfig
# body param: body
echo '{"apiKey": "lMf2Mpgp", "flowCompletionUrl": "M8HdgdZ5", "merchantId": 78, "projectId": 97, "projectSecretKey": "LRvWyfD7"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXsollaConfig \
    --id 'G47Rn0Ku' \
    --validate 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 385 'UpdateXsollaConfig' test.out

#- 386 TestXsollaConfigById
$CLI_EXE \
    --sn platform \
    --op TestXsollaConfigById \
    --id 'SBnPrUO0' \
    > test.out 2>&1
eval_tap $? 386 'TestXsollaConfigById' test.out

#- 387 UpdateXsollaUIConfig
# body param: body
echo '{"device": "MOBILE", "showCloseButton": true, "size": "LARGE", "theme": "DEFAULT"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXsollaUIConfig \
    --id 'D0VySiX3' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 387 'UpdateXsollaUIConfig' test.out

#- 388 QueryPaymentProviderConfig
$CLI_EXE \
    --sn platform \
    --op QueryPaymentProviderConfig \
    --limit '0' \
    --namespace_ 'AFdrbbuD' \
    --offset '3' \
    --region 'E0OCQFwl' \
    > test.out 2>&1
eval_tap $? 388 'QueryPaymentProviderConfig' test.out

#- 389 CreatePaymentProviderConfig
# body param: body
echo '{"aggregate": "NEONPAY", "namespace": "CL6fTtbT", "region": "PZHECdMA", "sandboxTaxJarApiToken": "Vrph5pQG", "specials": ["WALLET", "ADYEN", "STRIPE"], "taxJarApiToken": "m2YovRVO", "taxJarEnabled": false, "useGlobalTaxJarApiToken": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreatePaymentProviderConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 389 'CreatePaymentProviderConfig' test.out

#- 390 GetAggregatePaymentProviders
$CLI_EXE \
    --sn platform \
    --op GetAggregatePaymentProviders \
    > test.out 2>&1
eval_tap $? 390 'GetAggregatePaymentProviders' test.out

#- 391 DebugMatchedPaymentProviderConfig
$CLI_EXE \
    --sn platform \
    --op DebugMatchedPaymentProviderConfig \
    --namespace_ 'xMPBRLHK' \
    --region '0mJ8r4cY' \
    > test.out 2>&1
eval_tap $? 391 'DebugMatchedPaymentProviderConfig' test.out

#- 392 GetSpecialPaymentProviders
$CLI_EXE \
    --sn platform \
    --op GetSpecialPaymentProviders \
    > test.out 2>&1
eval_tap $? 392 'GetSpecialPaymentProviders' test.out

#- 393 UpdatePaymentProviderConfig
# body param: body
echo '{"aggregate": "CHECKOUT", "namespace": "DStFs6CD", "region": "6cxlIed7", "sandboxTaxJarApiToken": "P04fQHbn", "specials": ["PAYPAL", "WALLET", "ALIPAY"], "taxJarApiToken": "m3x6e29b", "taxJarEnabled": false, "useGlobalTaxJarApiToken": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePaymentProviderConfig \
    --id 'sQJ5YZDb' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 393 'UpdatePaymentProviderConfig' test.out

#- 394 DeletePaymentProviderConfig
$CLI_EXE \
    --sn platform \
    --op DeletePaymentProviderConfig \
    --id 'FyzOalUh' \
    > test.out 2>&1
eval_tap $? 394 'DeletePaymentProviderConfig' test.out

#- 395 GetPaymentTaxConfig
$CLI_EXE \
    --sn platform \
    --op GetPaymentTaxConfig \
    > test.out 2>&1
eval_tap $? 395 'GetPaymentTaxConfig' test.out

#- 396 UpdatePaymentTaxConfig
# body param: body
echo '{"sandboxTaxJarApiToken": "4fu3U07K", "taxJarApiToken": "3h9DV54Q", "taxJarEnabled": true, "taxJarProductCodesMapping": {"Nilyk0wx": "QL3ntWJY", "bJvPBC7K": "L6bObBJT", "0JoL0Lws": "uWRY5N65"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePaymentTaxConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 396 'UpdatePaymentTaxConfig' test.out

#- 397 SyncPaymentOrders
$CLI_EXE \
    --sn platform \
    --op SyncPaymentOrders \
    --nextEvaluatedKey '9fGa0Jq8' \
    --end 'ZWQelLzc' \
    --start 'GZIgKzDf' \
    > test.out 2>&1
eval_tap $? 397 'SyncPaymentOrders' test.out

#- 398 PublicGetRootCategories
$CLI_EXE \
    --sn platform \
    --op PublicGetRootCategories \
    --namespace $AB_NAMESPACE \
    --language 'sEFtEJWx' \
    --storeId 'wejEbHZf' \
    > test.out 2>&1
eval_tap $? 398 'PublicGetRootCategories' test.out

#- 399 DownloadCategories
$CLI_EXE \
    --sn platform \
    --op DownloadCategories \
    --namespace $AB_NAMESPACE \
    --language 'bNpwhq5E' \
    --storeId 'y8gE0Udh' \
    > test.out 2>&1
eval_tap $? 399 'DownloadCategories' test.out

#- 400 PublicGetCategory
$CLI_EXE \
    --sn platform \
    --op PublicGetCategory \
    --categoryPath 'mo21rmem' \
    --namespace $AB_NAMESPACE \
    --language 'pD9bDOe6' \
    --storeId 'p6b4wjZx' \
    > test.out 2>&1
eval_tap $? 400 'PublicGetCategory' test.out

#- 401 PublicGetChildCategories
$CLI_EXE \
    --sn platform \
    --op PublicGetChildCategories \
    --categoryPath 'gNUnCnHF' \
    --namespace $AB_NAMESPACE \
    --language 'Vlfj3QLg' \
    --storeId 'x7BrWocj' \
    > test.out 2>&1
eval_tap $? 401 'PublicGetChildCategories' test.out

#- 402 PublicGetDescendantCategories
$CLI_EXE \
    --sn platform \
    --op PublicGetDescendantCategories \
    --categoryPath 'yWEOrouG' \
    --namespace $AB_NAMESPACE \
    --language 'nxRxPZYy' \
    --storeId 'ZW51SRtz' \
    > test.out 2>&1
eval_tap $? 402 'PublicGetDescendantCategories' test.out

#- 403 PublicListCurrencies
$CLI_EXE \
    --sn platform \
    --op PublicListCurrencies \
    --namespace $AB_NAMESPACE \
    --currencyType 'REAL' \
    > test.out 2>&1
eval_tap $? 403 'PublicListCurrencies' test.out

#- 404 GeDLCDurableRewardShortMap
$CLI_EXE \
    --sn platform \
    --op GeDLCDurableRewardShortMap \
    --namespace $AB_NAMESPACE \
    --dlcType 'EPICGAMES' \
    > test.out 2>&1
eval_tap $? 404 'GeDLCDurableRewardShortMap' test.out

#- 405 GetAppleConfigVersion
$CLI_EXE \
    --sn platform \
    --op GetAppleConfigVersion \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 405 'GetAppleConfigVersion' test.out

#- 406 GetIAPItemMapping
$CLI_EXE \
    --sn platform \
    --op GetIAPItemMapping \
    --namespace $AB_NAMESPACE \
    --platform 'APPLE' \
    > test.out 2>&1
eval_tap $? 406 'GetIAPItemMapping' test.out

#- 407 PublicGetItemByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetItemByAppId \
    --namespace $AB_NAMESPACE \
    --language 'zuTnKIm0' \
    --region 'jKnfafId' \
    --storeId 'R7ALPTMe' \
    --appId '70C6NLAD' \
    > test.out 2>&1
eval_tap $? 407 'PublicGetItemByAppId' test.out

#- 408 PublicQueryItems
$CLI_EXE \
    --sn platform \
    --op PublicQueryItems \
    --namespace $AB_NAMESPACE \
    --appType 'SOFTWARE' \
    --autoCalcEstimatedPrice 'true' \
    --baseAppId 'RZUnbd0s' \
    --categoryPath 'w6EDZ7vY' \
    --features 'peNmYuG2' \
    --includeSubCategoryItem 'true' \
    --itemType 'BUNDLE' \
    --language 'n04oXt2w' \
    --limit '85' \
    --offset '95' \
    --region 'sWOTyjyx' \
    --sortBy '["displayOrder:desc", "updatedAt:desc", "createdAt:desc"]' \
    --storeId '8O4oLVIH' \
    --tags 'DTlJPhgT' \
    > test.out 2>&1
eval_tap $? 408 'PublicQueryItems' test.out

#- 409 PublicGetItemBySku
$CLI_EXE \
    --sn platform \
    --op PublicGetItemBySku \
    --namespace $AB_NAMESPACE \
    --autoCalcEstimatedPrice 'true' \
    --language 'lQcDJJTW' \
    --region 'ET85nr7T' \
    --storeId 'vOLPEs8Y' \
    --sku 'fsFJZPr3' \
    > test.out 2>&1
eval_tap $? 409 'PublicGetItemBySku' test.out

#- 410 PublicGetEstimatedPrice
$CLI_EXE \
    --sn platform \
    --op PublicGetEstimatedPrice \
    --namespace $AB_NAMESPACE \
    --region 'yqGhDhVN' \
    --storeId 'CuyeCLai' \
    --itemIds '4DBFH7c2' \
    > test.out 2>&1
eval_tap $? 410 'PublicGetEstimatedPrice' test.out

#- 411 PublicBulkGetItems
$CLI_EXE \
    --sn platform \
    --op PublicBulkGetItems \
    --namespace $AB_NAMESPACE \
    --autoCalcEstimatedPrice 'false' \
    --language 'MfCcAfi7' \
    --region 'j0YKp5D3' \
    --storeId 'VGkPGg4S' \
    --itemIds 'nIrt0fUj' \
    > test.out 2>&1
eval_tap $? 411 'PublicBulkGetItems' test.out

#- 412 PublicValidateItemPurchaseCondition
# body param: body
echo '{"itemIds": ["5kYlVUxY", "DJZw49bQ", "aZ48laIV"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicValidateItemPurchaseCondition \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 412 'PublicValidateItemPurchaseCondition' test.out

#- 413 PublicSearchItems
$CLI_EXE \
    --sn platform \
    --op PublicSearchItems \
    --namespace $AB_NAMESPACE \
    --autoCalcEstimatedPrice 'true' \
    --itemType 'COINS' \
    --limit '77' \
    --offset '64' \
    --region 'ku16eVdt' \
    --storeId 'aSg4AksB' \
    --keyword 'iAoB7Xtv' \
    --language 'Dc5t5Kwr' \
    > test.out 2>&1
eval_tap $? 413 'PublicSearchItems' test.out

#- 414 PublicGetApp
$CLI_EXE \
    --sn platform \
    --op PublicGetApp \
    --itemId 'OCoJUjVe' \
    --namespace $AB_NAMESPACE \
    --language 'DOqfkndr' \
    --region 'NQ7NNWkS' \
    --storeId 'Jnmvm8tR' \
    > test.out 2>&1
eval_tap $? 414 'PublicGetApp' test.out

#- 415 PublicGetItemDynamicData
$CLI_EXE \
    --sn platform \
    --op PublicGetItemDynamicData \
    --itemId 'erJKylOq' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 415 'PublicGetItemDynamicData' test.out

#- 416 PublicGetItem
$CLI_EXE \
    --sn platform \
    --op PublicGetItem \
    --itemId 'oNND9T87' \
    --namespace $AB_NAMESPACE \
    --autoCalcEstimatedPrice 'true' \
    --language '4YJVaTVB' \
    --populateBundle 'false' \
    --region 'fq8a77Ok' \
    --storeId 'WknOIAR4' \
    > test.out 2>&1
eval_tap $? 416 'PublicGetItem' test.out

#- 417 GetPaymentCustomization
eval_tap 0 417 'GetPaymentCustomization # SKIP deprecated' test.out

#- 418 PublicGetPaymentUrl
# body param: body
echo '{"neonPayConfig": {"cancelUrl": "KZXCpOB5", "successUrl": "xkuGNesG"}, "paymentOrderNo": "dJbc1tUp", "paymentProvider": "WALLET", "returnUrl": "Y4CCu6fC", "ui": "CCkHbY2P", "zipCode": "yxGEa59V"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicGetPaymentUrl \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 418 'PublicGetPaymentUrl' test.out

#- 419 PublicGetPaymentMethods
$CLI_EXE \
    --sn platform \
    --op PublicGetPaymentMethods \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'SQktCDUF' \
    > test.out 2>&1
eval_tap $? 419 'PublicGetPaymentMethods' test.out

#- 420 PublicGetUnpaidPaymentOrder
$CLI_EXE \
    --sn platform \
    --op PublicGetUnpaidPaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'aypf3otW' \
    > test.out 2>&1
eval_tap $? 420 'PublicGetUnpaidPaymentOrder' test.out

#- 421 Pay
# body param: body
echo '{"token": "yl7w6u0i"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op Pay \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'i5oKab8j' \
    --paymentProvider 'WXPAY' \
    --zipCode 'EtqMOEjy' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 421 'Pay' test.out

#- 422 PublicCheckPaymentOrderPaidStatus
$CLI_EXE \
    --sn platform \
    --op PublicCheckPaymentOrderPaidStatus \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'jc3EeUwF' \
    > test.out 2>&1
eval_tap $? 422 'PublicCheckPaymentOrderPaidStatus' test.out

#- 423 GetPaymentPublicConfig
$CLI_EXE \
    --sn platform \
    --op GetPaymentPublicConfig \
    --namespace $AB_NAMESPACE \
    --sandbox 'true' \
    --paymentProvider 'ADYEN' \
    --region 'hVb1n8l5' \
    > test.out 2>&1
eval_tap $? 423 'GetPaymentPublicConfig' test.out

#- 424 PublicGetQRCode
$CLI_EXE \
    --sn platform \
    --op PublicGetQRCode \
    --namespace $AB_NAMESPACE \
    --code 'cUo1NVLm' \
    > test.out 2>&1
eval_tap $? 424 'PublicGetQRCode' test.out

#- 425 PublicNormalizePaymentReturnUrl
$CLI_EXE \
    --sn platform \
    --op PublicNormalizePaymentReturnUrl \
    --namespace $AB_NAMESPACE \
    --payerID '7ojRhXeJ' \
    --foreinginvoice 'N1whMioN' \
    --invoiceId '4ron98Db' \
    --payload '0KvUybjl' \
    --redirectResult 'iQiL0jo3' \
    --resultCode '1JAzAX7q' \
    --sessionId 'EUXqwaPM' \
    --status '1f3DORn1' \
    --token '6FtnYMsw' \
    --type 'CJUjjOzX' \
    --userId 'csJQV2AC' \
    --orderNo 'QXNmcqRc' \
    --paymentOrderNo '2BZzbEpA' \
    --paymentProvider 'XSOLLA' \
    --returnUrl 'XRuWTG9v' \
    > test.out 2>&1
eval_tap $? 425 'PublicNormalizePaymentReturnUrl' test.out

#- 426 GetPaymentTaxValue
$CLI_EXE \
    --sn platform \
    --op GetPaymentTaxValue \
    --namespace $AB_NAMESPACE \
    --zipCode 'n5Et8HSm' \
    --paymentOrderNo 'bO7tfHuP' \
    --paymentProvider 'ADYEN' \
    > test.out 2>&1
eval_tap $? 426 'GetPaymentTaxValue' test.out

#- 427 GetRewardByCode
$CLI_EXE \
    --sn platform \
    --op GetRewardByCode \
    --namespace $AB_NAMESPACE \
    --rewardCode 'GwddPQma' \
    > test.out 2>&1
eval_tap $? 427 'GetRewardByCode' test.out

#- 428 QueryRewards1
$CLI_EXE \
    --sn platform \
    --op QueryRewards1 \
    --namespace $AB_NAMESPACE \
    --eventTopic 'oNhzzOBD' \
    --limit '19' \
    --offset '69' \
    --sortBy '["namespace:asc", "rewardCode"]' \
    > test.out 2>&1
eval_tap $? 428 'QueryRewards1' test.out

#- 429 GetReward1
$CLI_EXE \
    --sn platform \
    --op GetReward1 \
    --namespace $AB_NAMESPACE \
    --rewardId 'W6CNPdNu' \
    > test.out 2>&1
eval_tap $? 429 'GetReward1' test.out

#- 430 PublicListStores
$CLI_EXE \
    --sn platform \
    --op PublicListStores \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 430 'PublicListStores' test.out

#- 431 PublicExistsAnyMyActiveEntitlement
$CLI_EXE \
    --sn platform \
    --op PublicExistsAnyMyActiveEntitlement \
    --namespace $AB_NAMESPACE \
    --appIds '["4wG6iwbC", "vJp4XtU6", "iQ6UJxqa"]' \
    --itemIds '["GvhMNKR2", "9eevoSsG", "VTUV7qKR"]' \
    --skus '["kmW5uM4e", "RlpV6ggO", "InAE4VJr"]' \
    > test.out 2>&1
eval_tap $? 431 'PublicExistsAnyMyActiveEntitlement' test.out

#- 432 PublicGetMyAppEntitlementOwnershipByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetMyAppEntitlementOwnershipByAppId \
    --namespace $AB_NAMESPACE \
    --appId 'bvX4zJ48' \
    > test.out 2>&1
eval_tap $? 432 'PublicGetMyAppEntitlementOwnershipByAppId' test.out

#- 433 PublicGetMyEntitlementOwnershipByItemId
$CLI_EXE \
    --sn platform \
    --op PublicGetMyEntitlementOwnershipByItemId \
    --namespace $AB_NAMESPACE \
    --entitlementClazz 'LOOTBOX' \
    --itemId 'CVJpPcER' \
    > test.out 2>&1
eval_tap $? 433 'PublicGetMyEntitlementOwnershipByItemId' test.out

#- 434 PublicGetMyEntitlementOwnershipBySku
$CLI_EXE \
    --sn platform \
    --op PublicGetMyEntitlementOwnershipBySku \
    --namespace $AB_NAMESPACE \
    --entitlementClazz 'CODE' \
    --sku 'sgfwmyaq' \
    > test.out 2>&1
eval_tap $? 434 'PublicGetMyEntitlementOwnershipBySku' test.out

#- 435 PublicGetEntitlementOwnershipToken
$CLI_EXE \
    --sn platform \
    --op PublicGetEntitlementOwnershipToken \
    --namespace $AB_NAMESPACE \
    --appIds '["eH5S3qxK", "cY5N48qE", "JwberB7M"]' \
    --itemIds '["WScb0Uru", "L8IW8IK2", "5csQZPdP"]' \
    --skus '["oC48LYzf", "viWgk0TL", "A76jpyBc"]' \
    > test.out 2>&1
eval_tap $? 435 'PublicGetEntitlementOwnershipToken' test.out

#- 436 SyncTwitchDropsEntitlement
# body param: body
echo '{"gameId": "8CzT79Xd", "language": "wyr", "region": "Jirksjsp"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncTwitchDropsEntitlement \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 436 'SyncTwitchDropsEntitlement' test.out

#- 437 PublicGetMyWallet
$CLI_EXE \
    --sn platform \
    --op PublicGetMyWallet \
    --currencyCode '9Qkhfh8E' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 437 'PublicGetMyWallet' test.out

#- 438 SyncEpicGameDLC
# body param: body
echo '{"epicGamesJwtToken": "73EhXfbS"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncEpicGameDLC \
    --namespace $AB_NAMESPACE \
    --userId 'Ul2kPmHQ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 438 'SyncEpicGameDLC' test.out

#- 439 SyncOculusDLC
$CLI_EXE \
    --sn platform \
    --op SyncOculusDLC \
    --namespace $AB_NAMESPACE \
    --userId 'Td1B7eaA' \
    > test.out 2>&1
eval_tap $? 439 'SyncOculusDLC' test.out

#- 440 PublicSyncPsnDlcInventory
# body param: body
echo '{"serviceLabel": 38}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicSyncPsnDlcInventory \
    --namespace $AB_NAMESPACE \
    --userId 'iyYEtiCS' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 440 'PublicSyncPsnDlcInventory' test.out

#- 441 PublicSyncPsnDlcInventoryWithMultipleServiceLabels
# body param: body
echo '{"serviceLabels": [98, 77, 22]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicSyncPsnDlcInventoryWithMultipleServiceLabels \
    --namespace $AB_NAMESPACE \
    --userId 'v2xKAv6f' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 441 'PublicSyncPsnDlcInventoryWithMultipleServiceLabels' test.out

#- 442 SyncSteamDLC
# body param: body
echo '{"appId": "oQSPRi4j", "steamId": "tiQhhOUR"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncSteamDLC \
    --namespace $AB_NAMESPACE \
    --userId '0SKTS1tn' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 442 'SyncSteamDLC' test.out

#- 443 SyncXboxDLC
# body param: body
echo '{"xstsToken": "Kerzs315"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncXboxDLC \
    --namespace $AB_NAMESPACE \
    --userId 'PmnmKrZh' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 443 'SyncXboxDLC' test.out

#- 444 PublicQueryUserEntitlements
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserEntitlements \
    --namespace $AB_NAMESPACE \
    --userId 'YexSjfYh' \
    --appType 'DEMO' \
    --entitlementClazz 'SUBSCRIPTION' \
    --entitlementName 'EWD2hteA' \
    --features '["xPzHjas5", "wBOOvikD", "J33GZXFv"]' \
    --itemId '["C4NZNWLo", "2FbRqFHH", "9SRMN6y7"]' \
    --limit '45' \
    --offset '59' \
    > test.out 2>&1
eval_tap $? 444 'PublicQueryUserEntitlements' test.out

#- 445 PublicGetUserAppEntitlementByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetUserAppEntitlementByAppId \
    --namespace $AB_NAMESPACE \
    --userId 'NFKJa8vZ' \
    --appId 'bye67mPN' \
    > test.out 2>&1
eval_tap $? 445 'PublicGetUserAppEntitlementByAppId' test.out

#- 446 PublicQueryUserEntitlementsByAppType
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserEntitlementsByAppType \
    --namespace $AB_NAMESPACE \
    --userId 'IQoC31Il' \
    --limit '62' \
    --offset '7' \
    --appType 'DLC' \
    > test.out 2>&1
eval_tap $? 446 'PublicQueryUserEntitlementsByAppType' test.out

#- 447 PublicGetUserEntitlementsByIds
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementsByIds \
    --namespace $AB_NAMESPACE \
    --userId 'UH8nFmdO' \
    --availablePlatformOnly 'true' \
    --ids '["76XzvXTu", "d8AzTKxd", "4TKDGFrW"]' \
    > test.out 2>&1
eval_tap $? 447 'PublicGetUserEntitlementsByIds' test.out

#- 448 PublicGetUserEntitlementByItemId
eval_tap 0 448 'PublicGetUserEntitlementByItemId # SKIP deprecated' test.out

#- 449 PublicGetUserEntitlementBySku
eval_tap 0 449 'PublicGetUserEntitlementBySku # SKIP deprecated' test.out

#- 450 PublicUserEntitlementHistory
$CLI_EXE \
    --sn platform \
    --op PublicUserEntitlementHistory \
    --namespace $AB_NAMESPACE \
    --userId 'FwGCyv38' \
    --endDate 'SaILALgQ' \
    --entitlementClazz 'LOOTBOX' \
    --limit '88' \
    --offset '53' \
    --startDate 'gDzPeuGJ' \
    > test.out 2>&1
eval_tap $? 450 'PublicUserEntitlementHistory' test.out

#- 451 PublicExistsAnyUserActiveEntitlement
$CLI_EXE \
    --sn platform \
    --op PublicExistsAnyUserActiveEntitlement \
    --namespace $AB_NAMESPACE \
    --userId '6FK1dkh7' \
    --appIds '["TzNgO5hL", "Y5JQURN0", "E6jJFFGt"]' \
    --itemIds '["robQyoRd", "gJhwv1R0", "lHdsDnPO"]' \
    --skus '["DBmoobb7", "uDCuWJoD", "0o7TCOqG"]' \
    > test.out 2>&1
eval_tap $? 451 'PublicExistsAnyUserActiveEntitlement' test.out

#- 452 PublicGetUserAppEntitlementOwnershipByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetUserAppEntitlementOwnershipByAppId \
    --namespace $AB_NAMESPACE \
    --userId 'WD1A0GKZ' \
    --appId 'bd2ttHQr' \
    > test.out 2>&1
eval_tap $? 452 'PublicGetUserAppEntitlementOwnershipByAppId' test.out

#- 453 PublicGetUserEntitlementOwnershipByItemId
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementOwnershipByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'Nysn0Pd4' \
    --entitlementClazz 'ENTITLEMENT' \
    --itemId 'AG5ErUsS' \
    > test.out 2>&1
eval_tap $? 453 'PublicGetUserEntitlementOwnershipByItemId' test.out

#- 454 PublicGetUserEntitlementOwnershipByItemIds
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementOwnershipByItemIds \
    --namespace $AB_NAMESPACE \
    --userId 'K3ASBCwO' \
    --ids '["U7a07gsg", "Zsy6LTAt", "9fOyRoca"]' \
    > test.out 2>&1
eval_tap $? 454 'PublicGetUserEntitlementOwnershipByItemIds' test.out

#- 455 PublicGetUserEntitlementOwnershipBySku
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementOwnershipBySku \
    --namespace $AB_NAMESPACE \
    --userId 'uus5O3mM' \
    --entitlementClazz 'ENTITLEMENT' \
    --sku 'XgiV4NEA' \
    > test.out 2>&1
eval_tap $? 455 'PublicGetUserEntitlementOwnershipBySku' test.out

#- 456 PublicGetUserEntitlement
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlement \
    --entitlementId 'bXwt0wm0' \
    --namespace $AB_NAMESPACE \
    --userId 'tNIahGrB' \
    > test.out 2>&1
eval_tap $? 456 'PublicGetUserEntitlement' test.out

#- 457 PublicConsumeUserEntitlement
# body param: body
echo '{"metadata": {"operationSource": "INVENTORY"}, "options": ["p4FImsxT", "VzIAaIyg", "oCCYQH5i"], "requestId": "9AkwGlxp", "useCount": 62}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicConsumeUserEntitlement \
    --entitlementId 'qL8zxiWU' \
    --namespace $AB_NAMESPACE \
    --userId 'lm1YGFXf' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 457 'PublicConsumeUserEntitlement' test.out

#- 458 PublicSellUserEntitlement
# body param: body
echo '{"requestId": "gI0OxxOq", "useCount": 15}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicSellUserEntitlement \
    --entitlementId 'LX2C57ay' \
    --namespace $AB_NAMESPACE \
    --userId 'qzb0vAU7' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 458 'PublicSellUserEntitlement' test.out

#- 459 PublicSplitUserEntitlement
# body param: body
echo '{"metadata": {"operationSource": "INVENTORY"}, "useCount": 96}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicSplitUserEntitlement \
    --entitlementId 'hL82PPuk' \
    --namespace $AB_NAMESPACE \
    --userId 'XGMxewnl' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 459 'PublicSplitUserEntitlement' test.out

#- 460 PublicTransferUserEntitlement
# body param: body
echo '{"entitlementId": "c5ZShp78", "metadata": {"operationSource": "INVENTORY"}, "useCount": 74}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicTransferUserEntitlement \
    --entitlementId 'Y6s1Xwb9' \
    --namespace $AB_NAMESPACE \
    --userId 'YOB94z8U' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 460 'PublicTransferUserEntitlement' test.out

#- 461 PublicRedeemCode
# body param: body
echo '{"code": "6FFm0nZz", "language": "VzX-LtwE-oH", "region": "CN4C3KZ9"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicRedeemCode \
    --namespace $AB_NAMESPACE \
    --userId 'IB1Ekd8T' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 461 'PublicRedeemCode' test.out

#- 462 PublicFulfillAppleIAPItem
# body param: body
echo '{"excludeOldTransactions": false, "language": "cAJ_pgqd-dP", "productId": "nCw2WBvG", "receiptData": "A8A5ZzR2", "region": "iD7D6RKp", "transactionId": "fqSth2OV"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicFulfillAppleIAPItem \
    --namespace $AB_NAMESPACE \
    --userId '88CTHOE0' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 462 'PublicFulfillAppleIAPItem' test.out

#- 463 SyncEpicGamesInventory
# body param: body
echo '{"epicGamesJwtToken": "Uke5G6lW"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncEpicGamesInventory \
    --namespace $AB_NAMESPACE \
    --userId 'y9zovNmQ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 463 'SyncEpicGamesInventory' test.out

#- 464 PublicFulfillGoogleIAPItem
# body param: body
echo '{"autoAck": false, "autoConsume": true, "language": "RTET_om", "orderId": "mrkIp8CL", "packageName": "MDoWY8IE", "productId": "kIOPE1rv", "purchaseTime": 75, "purchaseToken": "SPSOZfe9", "region": "8moJ54fd", "subscriptionPurchase": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicFulfillGoogleIAPItem \
    --namespace $AB_NAMESPACE \
    --userId 'rYbd3qrU' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 464 'PublicFulfillGoogleIAPItem' test.out

#- 465 SyncOculusSubscriptions
# body param: body
echo '{"skus": ["wpKaoQRD", "mLzKvoBc", "cORBHZgy"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncOculusSubscriptions \
    --namespace $AB_NAMESPACE \
    --userId 'XAb83vLu' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 465 'SyncOculusSubscriptions' test.out

#- 466 SyncOculusConsumableEntitlements
$CLI_EXE \
    --sn platform \
    --op SyncOculusConsumableEntitlements \
    --namespace $AB_NAMESPACE \
    --userId 'iVvcTy3i' \
    > test.out 2>&1
eval_tap $? 466 'SyncOculusConsumableEntitlements' test.out

#- 467 PublicReconcilePlayStationStore
# body param: body
echo '{"currencyCode": "MV954tkL", "price": 0.8575829021307693, "productId": "CXzcaQjc", "serviceLabel": 76}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicReconcilePlayStationStore \
    --namespace $AB_NAMESPACE \
    --userId 'NZOo6XtK' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 467 'PublicReconcilePlayStationStore' test.out

#- 468 PublicReconcilePlayStationStoreWithMultipleServiceLabels
# body param: body
echo '{"currencyCode": "LZOMLSf1", "price": 0.32833563855191783, "productId": "KnkCrcFB", "serviceLabels": [28, 94, 7]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicReconcilePlayStationStoreWithMultipleServiceLabels \
    --namespace $AB_NAMESPACE \
    --userId 'UTlORgRz' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 468 'PublicReconcilePlayStationStoreWithMultipleServiceLabels' test.out

#- 469 SyncSteamInventory
# body param: body
echo '{"appId": "Q0h461E1", "currencyCode": "8vpu7p0k", "language": "fQ-796", "price": 0.8644393660940097, "productId": "bxaDyT2w", "region": "iN2f9jny", "steamId": "nLxdpWX9"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncSteamInventory \
    --namespace $AB_NAMESPACE \
    --userId 'SJFFuVfp' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 469 'SyncSteamInventory' test.out

#- 470 SyncSteamAbnormalTransaction
$CLI_EXE \
    --sn platform \
    --op SyncSteamAbnormalTransaction \
    --namespace $AB_NAMESPACE \
    --userId '6lGGkg5k' \
    > test.out 2>&1
eval_tap $? 470 'SyncSteamAbnormalTransaction' test.out

#- 471 SyncSteamIAPByTransaction
# body param: body
echo '{"orderId": "7cVuZKiM"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncSteamIAPByTransaction \
    --namespace $AB_NAMESPACE \
    --userId 'ciKmdiX3' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 471 'SyncSteamIAPByTransaction' test.out

#- 472 PublicQueryUserThirdPartySubscription
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserThirdPartySubscription \
    --namespace $AB_NAMESPACE \
    --platform 'EPICGAMES' \
    --userId 'C2ehLUGi' \
    --activeOnly 'true' \
    --groupId 'IiSd0ZUB' \
    --limit '7' \
    --offset '39' \
    --productId 'JmaLPlqB' \
    > test.out 2>&1
eval_tap $? 472 'PublicQueryUserThirdPartySubscription' test.out

#- 473 SyncTwitchDropsEntitlement1
# body param: body
echo '{"gameId": "cUQfkxtj", "language": "aYNa_NLZr-311", "region": "cWAkuq4T"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncTwitchDropsEntitlement1 \
    --namespace $AB_NAMESPACE \
    --userId 'f283P4or' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 473 'SyncTwitchDropsEntitlement1' test.out

#- 474 SyncXboxInventory
# body param: body
echo '{"currencyCode": "MlOTd75u", "price": 0.0028034127437698286, "productId": "9NuaItUd", "xstsToken": "yZ4AgWVP"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncXboxInventory \
    --namespace $AB_NAMESPACE \
    --userId 'emaHPVLM' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 474 'SyncXboxInventory' test.out

#- 475 PublicQueryUserOrders
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserOrders \
    --namespace $AB_NAMESPACE \
    --userId '0AfQtRiA' \
    --discounted 'true' \
    --itemId 'XWsrKZFQ' \
    --limit '59' \
    --offset '9' \
    --status 'FULFILL_FAILED' \
    > test.out 2>&1
eval_tap $? 475 'PublicQueryUserOrders' test.out

#- 476 PublicCreateUserOrder
# body param: body
echo '{"currencyCode": "nSfu2m91", "discountCodes": ["VLLThzFV", "3yesH0He", "puYfoxzT"], "discountedPrice": 68, "ext": {"4EEJoIyR": {}, "fq3InWE7": {}, "HnJdv0gH": {}}, "itemId": "ovEw3z78", "language": "goUV_appa-Cc", "price": 37, "quantity": 93, "region": "vB8I1MVz", "returnUrl": "XC6jxAqn", "sectionId": "9EKGObba"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicCreateUserOrder \
    --namespace $AB_NAMESPACE \
    --userId 'IXLXiuYk' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 476 'PublicCreateUserOrder' test.out

#- 477 PublicPreviewOrderPrice
# body param: body
echo '{"currencyCode": "QzvqjJYv", "discountCodes": ["KXcvurMQ", "iF1wGJPE", "I43xsKAX"], "discountedPrice": 21, "itemId": "OvVB6Z04", "price": 97, "quantity": 53}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicPreviewOrderPrice \
    --namespace $AB_NAMESPACE \
    --userId 'CkzhFqQt' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 477 'PublicPreviewOrderPrice' test.out

#- 478 PublicGetUserOrder
$CLI_EXE \
    --sn platform \
    --op PublicGetUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'kfIkcSUm' \
    --userId 'uYjDXMEe' \
    > test.out 2>&1
eval_tap $? 478 'PublicGetUserOrder' test.out

#- 479 PublicCancelUserOrder
$CLI_EXE \
    --sn platform \
    --op PublicCancelUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo '2yZwhx4M' \
    --userId 'I55pdjoN' \
    > test.out 2>&1
eval_tap $? 479 'PublicCancelUserOrder' test.out

#- 480 PublicGetUserOrderHistories
$CLI_EXE \
    --sn platform \
    --op PublicGetUserOrderHistories \
    --namespace $AB_NAMESPACE \
    --orderNo 'YNToTeoN' \
    --userId 'aska4tRF' \
    > test.out 2>&1
eval_tap $? 480 'PublicGetUserOrderHistories' test.out

#- 481 PublicDownloadUserOrderReceipt
$CLI_EXE \
    --sn platform \
    --op PublicDownloadUserOrderReceipt \
    --namespace $AB_NAMESPACE \
    --orderNo 'PARnXvZe' \
    --userId 'zV1OKnnx' \
    > test.out 2>&1
eval_tap $? 481 'PublicDownloadUserOrderReceipt' test.out

#- 482 PublicGetPaymentAccounts
$CLI_EXE \
    --sn platform \
    --op PublicGetPaymentAccounts \
    --namespace $AB_NAMESPACE \
    --userId 'faw2Y2Qf' \
    > test.out 2>&1
eval_tap $? 482 'PublicGetPaymentAccounts' test.out

#- 483 PublicDeletePaymentAccount
$CLI_EXE \
    --sn platform \
    --op PublicDeletePaymentAccount \
    --id 'c4cfDpZo' \
    --namespace $AB_NAMESPACE \
    --type 'card' \
    --userId 'cLjgtGUG' \
    > test.out 2>&1
eval_tap $? 483 'PublicDeletePaymentAccount' test.out

#- 484 PublicListActiveSections
$CLI_EXE \
    --sn platform \
    --op PublicListActiveSections \
    --namespace $AB_NAMESPACE \
    --userId '5BLtbSjt' \
    --autoCalcEstimatedPrice 'false' \
    --language 'nOfqYkdT' \
    --region 'FPHckvJ7' \
    --storeId '4tTakGEY' \
    --viewId 'lCY91nwt' \
    > test.out 2>&1
eval_tap $? 484 'PublicListActiveSections' test.out

#- 485 PublicQueryUserSubscriptions
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserSubscriptions \
    --namespace $AB_NAMESPACE \
    --userId 'lURfxwJI' \
    --chargeStatus 'SETUP' \
    --itemId 'gFQi1a5w' \
    --limit '64' \
    --offset '23' \
    --sku 'etKxdfAF' \
    --status 'CANCELLED' \
    --subscribedBy 'PLATFORM' \
    > test.out 2>&1
eval_tap $? 485 'PublicQueryUserSubscriptions' test.out

#- 486 PublicSubscribeSubscription
# body param: body
echo '{"currencyCode": "mwERPCb2", "itemId": "p0tQmANS", "language": "UsB_fNpj", "region": "Id8cnEu6", "returnUrl": "GJ53kwjv", "source": "MqdV9Pot"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicSubscribeSubscription \
    --namespace $AB_NAMESPACE \
    --userId 'LD1cftoi' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 486 'PublicSubscribeSubscription' test.out

#- 487 PublicCheckUserSubscriptionSubscribableByItemId
$CLI_EXE \
    --sn platform \
    --op PublicCheckUserSubscriptionSubscribableByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'gcuE6dLd' \
    --itemId 'i9M4YL7z' \
    > test.out 2>&1
eval_tap $? 487 'PublicCheckUserSubscriptionSubscribableByItemId' test.out

#- 488 PublicGetUserSubscription
$CLI_EXE \
    --sn platform \
    --op PublicGetUserSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId '40JBnCqL' \
    --userId 'zJYI3UsB' \
    > test.out 2>&1
eval_tap $? 488 'PublicGetUserSubscription' test.out

#- 489 PublicChangeSubscriptionBillingAccount
$CLI_EXE \
    --sn platform \
    --op PublicChangeSubscriptionBillingAccount \
    --namespace $AB_NAMESPACE \
    --subscriptionId '01mmixt9' \
    --userId 'AlHwfhx0' \
    > test.out 2>&1
eval_tap $? 489 'PublicChangeSubscriptionBillingAccount' test.out

#- 490 PublicCancelSubscription
# body param: body
echo '{"immediate": false, "reason": "eFaLI07Y"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicCancelSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'eRnI3kDA' \
    --userId 'WXaYdR0g' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 490 'PublicCancelSubscription' test.out

#- 491 PublicGetUserSubscriptionBillingHistories
$CLI_EXE \
    --sn platform \
    --op PublicGetUserSubscriptionBillingHistories \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'qkPrFU3l' \
    --userId 'Nrv2eNSd' \
    --excludeFree 'true' \
    --limit '53' \
    --offset '21' \
    > test.out 2>&1
eval_tap $? 491 'PublicGetUserSubscriptionBillingHistories' test.out

#- 492 PublicListViews
$CLI_EXE \
    --sn platform \
    --op PublicListViews \
    --namespace $AB_NAMESPACE \
    --userId 'w8QNk2Bm' \
    --language 'bsSaafYK' \
    --storeId 'JNduI7bB' \
    > test.out 2>&1
eval_tap $? 492 'PublicListViews' test.out

#- 493 PublicGetWallet
$CLI_EXE \
    --sn platform \
    --op PublicGetWallet \
    --currencyCode 'b3ZuEID5' \
    --namespace $AB_NAMESPACE \
    --userId 'NwMTcd7h' \
    > test.out 2>&1
eval_tap $? 493 'PublicGetWallet' test.out

#- 494 PublicListUserWalletTransactions
$CLI_EXE \
    --sn platform \
    --op PublicListUserWalletTransactions \
    --currencyCode 'U86rtKoy' \
    --namespace $AB_NAMESPACE \
    --userId 'LIcJn8rA' \
    --limit '99' \
    --offset '61' \
    > test.out 2>&1
eval_tap $? 494 'PublicListUserWalletTransactions' test.out

#- 495 PublicGetMyDLCContent
$CLI_EXE \
    --sn platform \
    --op PublicGetMyDLCContent \
    --includeAllNamespaces 'true' \
    --type 'PSN' \
    > test.out 2>&1
eval_tap $? 495 'PublicGetMyDLCContent' test.out

#- 496 QueryFulfillments
$CLI_EXE \
    --sn platform \
    --op QueryFulfillments \
    --namespace $AB_NAMESPACE \
    --endTime 'FEBSBEAZ' \
    --limit '32' \
    --offset '39' \
    --startTime 'pOrtweKB' \
    --state 'FULFILLED' \
    --transactionId 'O6FwKifL' \
    --userId 'BPMlphiW' \
    > test.out 2>&1
eval_tap $? 496 'QueryFulfillments' test.out

#- 497 QueryItemsV2
$CLI_EXE \
    --sn platform \
    --op QueryItemsV2 \
    --namespace $AB_NAMESPACE \
    --appType 'DLC' \
    --availableDate 'j0GzE1Pi' \
    --baseAppId 'ogDNHT4o' \
    --categoryPath 'leXag6SR' \
    --features 'ldpOOh9J' \
    --includeSubCategoryItem 'true' \
    --itemName 'avvYvRa9' \
    --itemStatus 'ACTIVE' \
    --itemType '["SUBSCRIPTION", "SEASON", "CODE"]' \
    --limit '65' \
    --offset '29' \
    --region 'PVcYP777' \
    --sectionExclusive 'true' \
    --sortBy '["updatedAt:asc", "name:desc", "createdAt"]' \
    --storeId 'EnMm4xnA' \
    --tags 'yHlhpNFg' \
    --targetNamespace '14TRNeV2' \
    --withTotal 'false' \
    > test.out 2>&1
eval_tap $? 497 'QueryItemsV2' test.out

#- 498 ImportStore1
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op ImportStore1 \
    --namespace $AB_NAMESPACE \
    --storeId 'yaKrnMX7' \
    --strictMode 'true' \
    --upload file $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 498 'ImportStore1' test.out

#- 499 ExportStore1
# body param: body
echo '{"itemIds": ["VWsDPZ8c", "1idIenyM", "km9iRkxI"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ExportStore1 \
    --namespace $AB_NAMESPACE \
    --storeId 'YKz4sE4f' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 499 'ExportStore1' test.out

#- 500 FulfillRewardsV2
# body param: body
echo '{"entitlementCollectionId": "Y0v4c1RJ", "entitlementOrigin": "GooglePlay", "metadata": {"V04xSmPu": {}, "wwdbztcA": {}, "kXt2Ii1R": {}}, "origin": "Twitch", "rewards": [{"currency": {"currencyCode": "TKJdAdjn", "namespace": "dlAe18Wr"}, "item": {"itemId": "DMIywzN0", "itemName": "k3rhsrpa", "itemSku": "ReLQLWsJ", "itemType": "BgzqxHd9"}, "quantity": 1, "type": "ITEM"}, {"currency": {"currencyCode": "YZkU4cc2", "namespace": "ehKvMETQ"}, "item": {"itemId": "FuQn1o7s", "itemName": "JgApL9fG", "itemSku": "VeyYJayF", "itemType": "Qn5zXre3"}, "quantity": 26, "type": "ITEM"}, {"currency": {"currencyCode": "s9oAKNUe", "namespace": "Luqjhc1y"}, "item": {"itemId": "uvFSRD2N", "itemName": "9m8blHkt", "itemSku": "Pebcblqj", "itemType": "HV5vAZAb"}, "quantity": 26, "type": "ITEM"}], "source": "SELL_BACK", "transactionId": "oxBedOFM"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op FulfillRewardsV2 \
    --namespace $AB_NAMESPACE \
    --userId 'Ntdo12qr' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 500 'FulfillRewardsV2' test.out

#- 501 FulfillItems
eval_tap 0 501 'FulfillItems # SKIP deprecated' test.out

#- 502 RetryFulfillItems
eval_tap 0 502 'RetryFulfillItems # SKIP deprecated' test.out

#- 503 RevokeItems
eval_tap 0 503 'RevokeItems # SKIP deprecated' test.out

#- 504 V2PublicFulfillAppleIAPItem
# body param: body
echo '{"transactionId": "zqhCMprz"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op V2PublicFulfillAppleIAPItem \
    --namespace $AB_NAMESPACE \
    --userId 'qTf815mf' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 504 'V2PublicFulfillAppleIAPItem' test.out

#- 505 FulfillItemsV3
# body param: body
echo '{"items": [{"duration": 68, "endDate": "1975-06-28T00:00:00Z", "entitlementCollectionId": "tqoNGwmY", "entitlementOrigin": "GooglePlay", "itemId": "bspX444w", "itemSku": "Sh0rTk71", "language": "3XSpTyVJ", "metadata": {"P2Uj2eEN": {}, "ElZdHob9": {}, "lUSqcur2": {}}, "orderNo": "aV3690nn", "origin": "Oculus", "quantity": 83, "region": "cWPkrX1c", "source": "PROMOTION", "startDate": "1983-02-07T00:00:00Z", "storeId": "xHhc5u5N"}, {"duration": 34, "endDate": "1985-09-20T00:00:00Z", "entitlementCollectionId": "KQyNLuMc", "entitlementOrigin": "IOS", "itemId": "e784oJke", "itemSku": "KvF4Bvia", "language": "SCWEozrU", "metadata": {"v2aELSdv": {}, "sCBeblY0": {}, "0tutyBuH": {}}, "orderNo": "JdczQHzU", "origin": "IOS", "quantity": 95, "region": "q5tOoyh2", "source": "OTHER", "startDate": "1975-07-06T00:00:00Z", "storeId": "eolawm84"}, {"duration": 5, "endDate": "1987-01-15T00:00:00Z", "entitlementCollectionId": "jWfCeACW", "entitlementOrigin": "Oculus", "itemId": "zglvmXhc", "itemSku": "VPXjCFne", "language": "KpCq4a5N", "metadata": {"IkoOZV98": {}, "judVYf4o": {}, "lyIgq8Id": {}}, "orderNo": "YdcvxNwx", "origin": "Steam", "quantity": 98, "region": "WiVp6qUt", "source": "PAYMENT", "startDate": "1988-09-11T00:00:00Z", "storeId": "ZlN84mRn"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op FulfillItemsV3 \
    --namespace $AB_NAMESPACE \
    --transactionId 'uACruMsU' \
    --userId '1aZflC8i' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 505 'FulfillItemsV3' test.out

#- 506 RetryFulfillItemsV3
$CLI_EXE \
    --sn platform \
    --op RetryFulfillItemsV3 \
    --namespace $AB_NAMESPACE \
    --transactionId 'Z3TwZVl3' \
    --userId '1u9bPWbJ' \
    > test.out 2>&1
eval_tap $? 506 'RetryFulfillItemsV3' test.out

#- 507 RevokeItemsV3
$CLI_EXE \
    --sn platform \
    --op RevokeItemsV3 \
    --namespace $AB_NAMESPACE \
    --transactionId 'zK4tigku' \
    --userId 'N3xCmz10' \
    > test.out 2>&1
eval_tap $? 507 'RevokeItemsV3' test.out


# remove artifacts
rm -f "$CLI_TOKEN_FILE"
rm -f "$TEMP_JSON_INPUT"
rm -f "$TEMP_FILE_UPLOAD"

exit $EXIT_CODE