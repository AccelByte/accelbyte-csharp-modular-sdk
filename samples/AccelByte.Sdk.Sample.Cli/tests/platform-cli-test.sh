#!/usr/bin/env bash

# Copyright (c) 2021 AccelByte Inc. All Rights Reserved.
# This is licensed software from AccelByte Inc, for limitations
# and restrictions contact your company contract manager.

# This code is generated by tool. DO NOT EDIT.

# Meta:
# - random seed: 
# - template file: 

# Instructions:
# - Run the Justice SDK Mock Server first before running this script.

export AB_BASE_URL="http://127.0.0.1:8080"
export AB_CLIENT_ID="admin"
export AB_CLIENT_SECRET="admin"
export AB_NAMESPACE="test"
export AB_APP_NAME="UnitTest"

EXIT_CODE=0

eval_tap() {
  if [ $1 -eq 0 ]; then
    echo "ok $2 - $3"
  else
    EXIT_CODE=1
    echo "not ok $2 - $3"
    sed 's/^/# /g' $4
  fi
  rm -f $4
}

CLI_EXE="AccelByte.Sdk.Sample.Cli"
CLI_TOKEN_FILE="$(dirname "$(which $CLI_EXE)")/token.json"
TEMP_JSON_INPUT="input_json.json"
TEMP_FILE_UPLOAD="file_upload.bin"

echo "TAP version 13"
echo "1..432"

#- 1 Login
$CLI_EXE --op login --lt user --user user --pass user > test.out 2>&1
eval_tap $? 1 'Login' test.out

if [ $EXIT_CODE -ne 0 ]; then
  echo "Bail out! Login failed."
  exit $EXIT_CODE
fi

# echo "foo" > "$CLI_TOKEN_FILE"

#- 2 ListFulfillmentScripts
$CLI_EXE \
    --sn platform \
    --op ListFulfillmentScripts \
    > test.out 2>&1
eval_tap $? 2 'ListFulfillmentScripts' test.out

#- 3 GetFulfillmentScript
$CLI_EXE \
    --sn platform \
    --op GetFulfillmentScript \
    --id 'cZZvEHJB' \
    > test.out 2>&1
eval_tap $? 3 'GetFulfillmentScript' test.out

#- 4 CreateFulfillmentScript
# body param: body
echo '{"grantDays": "kD8lyHak"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateFulfillmentScript \
    --id 'jMzQToQv' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 4 'CreateFulfillmentScript' test.out

#- 5 DeleteFulfillmentScript
$CLI_EXE \
    --sn platform \
    --op DeleteFulfillmentScript \
    --id '3IOcElaG' \
    > test.out 2>&1
eval_tap $? 5 'DeleteFulfillmentScript' test.out

#- 6 UpdateFulfillmentScript
# body param: body
echo '{"grantDays": "OJATuFAY"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateFulfillmentScript \
    --id 'UyLlczgD' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 6 'UpdateFulfillmentScript' test.out

#- 7 ListItemTypeConfigs
$CLI_EXE \
    --sn platform \
    --op ListItemTypeConfigs \
    > test.out 2>&1
eval_tap $? 7 'ListItemTypeConfigs' test.out

#- 8 CreateItemTypeConfig
# body param: body
echo '{"clazz": "2i8X3gKm", "dryRun": false, "fulfillmentUrl": "YWVnfd3A", "itemType": "OPTIONBOX", "purchaseConditionUrl": "j41X7IsQ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateItemTypeConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 8 'CreateItemTypeConfig' test.out

#- 9 SearchItemTypeConfig
$CLI_EXE \
    --sn platform \
    --op SearchItemTypeConfig \
    --clazz 'KMqkhEaZ' \
    --itemType 'APP' \
    > test.out 2>&1
eval_tap $? 9 'SearchItemTypeConfig' test.out

#- 10 GetItemTypeConfig
$CLI_EXE \
    --sn platform \
    --op GetItemTypeConfig \
    --id 'n7mewM3s' \
    > test.out 2>&1
eval_tap $? 10 'GetItemTypeConfig' test.out

#- 11 UpdateItemTypeConfig
# body param: body
echo '{"clazz": "hS4jgvzd", "dryRun": false, "fulfillmentUrl": "SHlEtq1f", "purchaseConditionUrl": "rUkHrk3A"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateItemTypeConfig \
    --id 'Hv9V6ppl' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 11 'UpdateItemTypeConfig' test.out

#- 12 DeleteItemTypeConfig
$CLI_EXE \
    --sn platform \
    --op DeleteItemTypeConfig \
    --id 'KgJxTqim' \
    > test.out 2>&1
eval_tap $? 12 'DeleteItemTypeConfig' test.out

#- 13 QueryCampaigns
$CLI_EXE \
    --sn platform \
    --op QueryCampaigns \
    --namespace $AB_NAMESPACE \
    --limit '52' \
    --name '5ynTEFY7' \
    --offset '57' \
    --tag 'cx2WDff6' \
    > test.out 2>&1
eval_tap $? 13 'QueryCampaigns' test.out

#- 14 CreateCampaign
# body param: body
echo '{"description": "QRiGYB9z", "items": [{"extraSubscriptionDays": 88, "itemId": "jtLFDY02", "itemName": "n67mENGF", "quantity": 91}, {"extraSubscriptionDays": 84, "itemId": "BK06bxDx", "itemName": "NlEBe7WB", "quantity": 42}, {"extraSubscriptionDays": 98, "itemId": "SkwWxtcw", "itemName": "4JdoGNSt", "quantity": 5}], "maxRedeemCountPerCampaignPerUser": 5, "maxRedeemCountPerCode": 39, "maxRedeemCountPerCodePerUser": 85, "maxSaleCount": 45, "name": "yh7oZ0Tm", "redeemEnd": "1977-06-21T00:00:00Z", "redeemStart": "1972-12-17T00:00:00Z", "redeemType": "ITEM", "status": "ACTIVE", "tags": ["siooK2x8", "JlV3TQ8V", "WcQ7ZNfu"], "type": "REDEMPTION"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCampaign \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 14 'CreateCampaign' test.out

#- 15 GetCampaign
$CLI_EXE \
    --sn platform \
    --op GetCampaign \
    --campaignId 'hdjeENSW' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 15 'GetCampaign' test.out

#- 16 UpdateCampaign
# body param: body
echo '{"description": "jEPe8xwB", "items": [{"extraSubscriptionDays": 90, "itemId": "R5k7CuBE", "itemName": "A5wMpjkL", "quantity": 7}, {"extraSubscriptionDays": 79, "itemId": "Rc8NrVCO", "itemName": "NBMRQleF", "quantity": 53}, {"extraSubscriptionDays": 19, "itemId": "ZJWYkaST", "itemName": "r94Q2HPA", "quantity": 67}], "maxRedeemCountPerCampaignPerUser": 40, "maxRedeemCountPerCode": 20, "maxRedeemCountPerCodePerUser": 48, "maxSaleCount": 20, "name": "y1vF8KXN", "redeemEnd": "1985-12-21T00:00:00Z", "redeemStart": "1977-09-18T00:00:00Z", "redeemType": "ITEM", "status": "INACTIVE", "tags": ["yFwVVjAe", "Bn6tcnhg", "RPu2CU5G"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCampaign \
    --campaignId 'YQkBTd2y' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 16 'UpdateCampaign' test.out

#- 17 GetCampaignDynamic
$CLI_EXE \
    --sn platform \
    --op GetCampaignDynamic \
    --campaignId 'T5fBiHdX' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 17 'GetCampaignDynamic' test.out

#- 18 GetLootBoxPluginConfig
$CLI_EXE \
    --sn platform \
    --op GetLootBoxPluginConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 18 'GetLootBoxPluginConfig' test.out

#- 19 UpdateLootBoxPluginConfig
# body param: body
echo '{"appConfig": {"appName": "1TkTQ3AG"}, "customConfig": {"connectionType": "TLS", "grpcServerAddress": "OA0k0CLl"}, "extendType": "APP"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateLootBoxPluginConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 19 'UpdateLootBoxPluginConfig' test.out

#- 20 DeleteLootBoxPluginConfig
$CLI_EXE \
    --sn platform \
    --op DeleteLootBoxPluginConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 20 'DeleteLootBoxPluginConfig' test.out

#- 21 UplodLootBoxPluginConfigCert
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UplodLootBoxPluginConfigCert \
    --namespace $AB_NAMESPACE \
    --upload $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 21 'UplodLootBoxPluginConfigCert' test.out

#- 22 GetLootBoxGrpcInfo
$CLI_EXE \
    --sn platform \
    --op GetLootBoxGrpcInfo \
    --namespace $AB_NAMESPACE \
    --force 'true' \
    > test.out 2>&1
eval_tap $? 22 'GetLootBoxGrpcInfo' test.out

#- 23 GetSectionPluginConfig
$CLI_EXE \
    --sn platform \
    --op GetSectionPluginConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 23 'GetSectionPluginConfig' test.out

#- 24 UpdateSectionPluginConfig
# body param: body
echo '{"appConfig": {"appName": "HUaucW8w"}, "customConfig": {"connectionType": "TLS", "grpcServerAddress": "7NCq5QeA"}, "extendType": "APP"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateSectionPluginConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 24 'UpdateSectionPluginConfig' test.out

#- 25 DeleteSectionPluginConfig
$CLI_EXE \
    --sn platform \
    --op DeleteSectionPluginConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 25 'DeleteSectionPluginConfig' test.out

#- 26 UploadSectionPluginConfigCert
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UploadSectionPluginConfigCert \
    --namespace $AB_NAMESPACE \
    --upload $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 26 'UploadSectionPluginConfigCert' test.out

#- 27 GetRootCategories
$CLI_EXE \
    --sn platform \
    --op GetRootCategories \
    --namespace $AB_NAMESPACE \
    --storeId 'NKG8i3gU' \
    > test.out 2>&1
eval_tap $? 27 'GetRootCategories' test.out

#- 28 CreateCategory
# body param: body
echo '{"categoryPath": "Odj0cNFQ", "localizationDisplayNames": {"voLOi9Cc": "7q2KQw2x", "qjyqqOZB": "iR639vw0", "Cl92L8Hh": "ERsZYdxM"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCategory \
    --namespace $AB_NAMESPACE \
    --storeId 'itbZFvBU' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 28 'CreateCategory' test.out

#- 29 ListCategoriesBasic
$CLI_EXE \
    --sn platform \
    --op ListCategoriesBasic \
    --namespace $AB_NAMESPACE \
    --storeId 'dv8Cdenr' \
    > test.out 2>&1
eval_tap $? 29 'ListCategoriesBasic' test.out

#- 30 GetCategory
$CLI_EXE \
    --sn platform \
    --op GetCategory \
    --categoryPath '9FR6qpXl' \
    --namespace $AB_NAMESPACE \
    --storeId 'zBhTFFkb' \
    > test.out 2>&1
eval_tap $? 30 'GetCategory' test.out

#- 31 UpdateCategory
# body param: body
echo '{"localizationDisplayNames": {"zAEDTdFG": "EkvaaiEq", "uyUcumz5": "rmIY8qGS", "sbiTVwUy": "hylfTulK"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCategory \
    --categoryPath 'voi1NIW4' \
    --namespace $AB_NAMESPACE \
    --storeId 'B5NGyJUj' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 31 'UpdateCategory' test.out

#- 32 DeleteCategory
$CLI_EXE \
    --sn platform \
    --op DeleteCategory \
    --categoryPath 'NeqUQI7w' \
    --namespace $AB_NAMESPACE \
    --storeId 't9QKZ35r' \
    > test.out 2>&1
eval_tap $? 32 'DeleteCategory' test.out

#- 33 GetChildCategories
$CLI_EXE \
    --sn platform \
    --op GetChildCategories \
    --categoryPath 'fFXtIa9C' \
    --namespace $AB_NAMESPACE \
    --storeId 'IffeB2QR' \
    > test.out 2>&1
eval_tap $? 33 'GetChildCategories' test.out

#- 34 GetDescendantCategories
$CLI_EXE \
    --sn platform \
    --op GetDescendantCategories \
    --categoryPath 'OCdWEkEF' \
    --namespace $AB_NAMESPACE \
    --storeId 'Wg6I77Iu' \
    > test.out 2>&1
eval_tap $? 34 'GetDescendantCategories' test.out

#- 35 QueryCodes
$CLI_EXE \
    --sn platform \
    --op QueryCodes \
    --campaignId '6qCilmcL' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --batchNo '56' \
    --code 'tK7XAnlx' \
    --limit '57' \
    --offset '28' \
    > test.out 2>&1
eval_tap $? 35 'QueryCodes' test.out

#- 36 CreateCodes
# body param: body
echo '{"quantity": 36}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCodes \
    --campaignId 'cB10BIMj' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 36 'CreateCodes' test.out

#- 37 Download
$CLI_EXE \
    --sn platform \
    --op Download \
    --campaignId 'hu60GfVV' \
    --namespace $AB_NAMESPACE \
    --batchNo '32' \
    > test.out 2>&1
eval_tap $? 37 'Download' test.out

#- 38 BulkDisableCodes
$CLI_EXE \
    --sn platform \
    --op BulkDisableCodes \
    --campaignId 'iFOXpcNV' \
    --namespace $AB_NAMESPACE \
    --batchNo '81' \
    > test.out 2>&1
eval_tap $? 38 'BulkDisableCodes' test.out

#- 39 BulkEnableCodes
$CLI_EXE \
    --sn platform \
    --op BulkEnableCodes \
    --campaignId 't5K953uT' \
    --namespace $AB_NAMESPACE \
    --batchNo '57' \
    > test.out 2>&1
eval_tap $? 39 'BulkEnableCodes' test.out

#- 40 QueryRedeemHistory
$CLI_EXE \
    --sn platform \
    --op QueryRedeemHistory \
    --campaignId '6DCVa0LA' \
    --namespace $AB_NAMESPACE \
    --code 's5CqlO9k' \
    --limit '17' \
    --offset '61' \
    --userId 'I1isoPWt' \
    > test.out 2>&1
eval_tap $? 40 'QueryRedeemHistory' test.out

#- 41 GetCode
$CLI_EXE \
    --sn platform \
    --op GetCode \
    --code 'T77AnpPZ' \
    --namespace $AB_NAMESPACE \
    --redeemable 'false' \
    > test.out 2>&1
eval_tap $? 41 'GetCode' test.out

#- 42 DisableCode
$CLI_EXE \
    --sn platform \
    --op DisableCode \
    --code 'ZO7IIYJ6' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 42 'DisableCode' test.out

#- 43 EnableCode
$CLI_EXE \
    --sn platform \
    --op EnableCode \
    --code '2OZCgRTg' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 43 'EnableCode' test.out

#- 44 GetServicePluginConfig
eval_tap 0 44 'GetServicePluginConfig # SKIP deprecated' test.out

#- 45 UpdateServicePluginConfig
eval_tap 0 45 'UpdateServicePluginConfig # SKIP deprecated' test.out

#- 46 DeleteServicePluginConfig
eval_tap 0 46 'DeleteServicePluginConfig # SKIP deprecated' test.out

#- 47 ListCurrencies
$CLI_EXE \
    --sn platform \
    --op ListCurrencies \
    --namespace $AB_NAMESPACE \
    --currencyType 'VIRTUAL' \
    > test.out 2>&1
eval_tap $? 47 'ListCurrencies' test.out

#- 48 CreateCurrency
# body param: body
echo '{"currencyCode": "q4AtRnvP", "currencySymbol": "1PcyabMe", "currencyType": "VIRTUAL", "decimals": 14, "localizationDescriptions": {"riZHFArN": "2Rdtw7r9", "m5GlsRAs": "VqrewaS7", "GQ1Qj9US": "Z2KWyeEf"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCurrency \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 48 'CreateCurrency' test.out

#- 49 UpdateCurrency
# body param: body
echo '{"localizationDescriptions": {"EuXdurxt": "IqUkR3of", "Dzj0LQ1C": "T7KVkfxv", "x1xhptTK": "F6BUIVOp"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCurrency \
    --currencyCode 'CB5Tlq1v' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 49 'UpdateCurrency' test.out

#- 50 DeleteCurrency
$CLI_EXE \
    --sn platform \
    --op DeleteCurrency \
    --currencyCode 'XiFwJkzu' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 50 'DeleteCurrency' test.out

#- 51 GetCurrencyConfig
$CLI_EXE \
    --sn platform \
    --op GetCurrencyConfig \
    --currencyCode '7LAp6H9c' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 51 'GetCurrencyConfig' test.out

#- 52 GetCurrencySummary
$CLI_EXE \
    --sn platform \
    --op GetCurrencySummary \
    --currencyCode 'H17G4I0Y' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 52 'GetCurrencySummary' test.out

#- 53 GetDLCItemConfig
$CLI_EXE \
    --sn platform \
    --op GetDLCItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 53 'GetDLCItemConfig' test.out

#- 54 UpdateDLCItemConfig
# body param: body
echo '{"data": [{"id": "lyYUslVm", "rewards": [{"currency": {"currencyCode": "u4ACsKxp", "namespace": "hErnPMg0"}, "item": {"itemId": "T6Q7z9oL", "itemSku": "ooQKpU2Y", "itemType": "67Ghg9kX"}, "quantity": 21, "type": "CURRENCY"}, {"currency": {"currencyCode": "8CqYdMHF", "namespace": "qViqVEAa"}, "item": {"itemId": "0UcwfxQu", "itemSku": "6s1oHae8", "itemType": "eernsGcJ"}, "quantity": 17, "type": "ITEM"}, {"currency": {"currencyCode": "EJrYfchj", "namespace": "FAc7KqOy"}, "item": {"itemId": "5zJV7bia", "itemSku": "6Uzd1iLy", "itemType": "ycQuCW7S"}, "quantity": 79, "type": "ITEM"}]}, {"id": "CRpYpxdZ", "rewards": [{"currency": {"currencyCode": "kbkM8DTg", "namespace": "3R9YVonK"}, "item": {"itemId": "ykFi0QNt", "itemSku": "USnojh8K", "itemType": "MXDxhdol"}, "quantity": 27, "type": "ITEM"}, {"currency": {"currencyCode": "88zJb6vZ", "namespace": "l8oRTqUy"}, "item": {"itemId": "zdQ1hoIV", "itemSku": "dwCxepcO", "itemType": "SolBcsOb"}, "quantity": 90, "type": "CURRENCY"}, {"currency": {"currencyCode": "0GYSClTk", "namespace": "oQD5a4ha"}, "item": {"itemId": "1rX5Hwgq", "itemSku": "ML4sPfdP", "itemType": "EQdUiegZ"}, "quantity": 51, "type": "CURRENCY"}]}, {"id": "EL7qRJ2P", "rewards": [{"currency": {"currencyCode": "yIeI3lkF", "namespace": "knMYMpZS"}, "item": {"itemId": "Rp32gTB1", "itemSku": "8OOTaNPD", "itemType": "njJ3XZ6P"}, "quantity": 65, "type": "CURRENCY"}, {"currency": {"currencyCode": "xm0PQFU6", "namespace": "4DwCFomq"}, "item": {"itemId": "ahcpjvZp", "itemSku": "QtYl4jAB", "itemType": "Tgrg2dUo"}, "quantity": 90, "type": "CURRENCY"}, {"currency": {"currencyCode": "6TCSm3x2", "namespace": "XgPJoBzl"}, "item": {"itemId": "0GKN7I3U", "itemSku": "IYOcgSp0", "itemType": "MsJxdRdH"}, "quantity": 91, "type": "ITEM"}]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateDLCItemConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 54 'UpdateDLCItemConfig' test.out

#- 55 DeleteDLCItemConfig
$CLI_EXE \
    --sn platform \
    --op DeleteDLCItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 55 'DeleteDLCItemConfig' test.out

#- 56 GetPlatformDLCConfig
$CLI_EXE \
    --sn platform \
    --op GetPlatformDLCConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 56 'GetPlatformDLCConfig' test.out

#- 57 UpdatePlatformDLCConfig
# body param: body
echo '{"data": [{"platform": "EPICGAMES", "platformDlcIdMap": {"313UnUlL": "JGm4gW6U", "k1zUs1TT": "fB00HDKs", "hC3A5kLA": "yQ4duOpl"}}, {"platform": "STEAM", "platformDlcIdMap": {"lRHUoC1H": "GFFRfz0k", "JaS8bxoi": "a24L57F0", "qKfH7cCh": "9OPX8JDM"}}, {"platform": "PSN", "platformDlcIdMap": {"np5KSkE4": "1ICHj023", "BUVO9Fvv": "o9IIEsjh", "XrQdejCg": "rXZTVIBZ"}}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePlatformDLCConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 57 'UpdatePlatformDLCConfig' test.out

#- 58 DeletePlatformDLCConfig
$CLI_EXE \
    --sn platform \
    --op DeletePlatformDLCConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 58 'DeletePlatformDLCConfig' test.out

#- 59 QueryEntitlements
$CLI_EXE \
    --sn platform \
    --op QueryEntitlements \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --appType 'SOFTWARE' \
    --entitlementClazz 'LOOTBOX' \
    --entitlementName 'TkhP144G' \
    --itemId '["nXCe1pSd", "NKi4Jrmb", "ev3EvVly"]' \
    --limit '24' \
    --offset '2' \
    --userId 'knqnuCMr' \
    > test.out 2>&1
eval_tap $? 59 'QueryEntitlements' test.out

#- 60 QueryEntitlements1
$CLI_EXE \
    --sn platform \
    --op QueryEntitlements1 \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --itemIds '["bC2Xv0Ep", "a4qfgErr", "hDdpObAY"]' \
    --limit '22' \
    --offset '63' \
    > test.out 2>&1
eval_tap $? 60 'QueryEntitlements1' test.out

#- 61 GrantEntitlements
# body param: body
echo '{"entitlementGrantList": [{"endDate": "1978-12-15T00:00:00Z", "grantedCode": "0aZ4xEfM", "itemId": "vy6QksTv", "itemNamespace": "xHfp2UsX", "language": "cHJd", "quantity": 98, "region": "KGYhVs6T", "source": "GIFT", "startDate": "1973-10-08T00:00:00Z", "storeId": "Uyod7IuS"}, {"endDate": "1986-07-04T00:00:00Z", "grantedCode": "bHV9t6nc", "itemId": "66JErDAv", "itemNamespace": "lIVlGHUh", "language": "HXW-jp", "quantity": 16, "region": "tpYlWGNg", "source": "REWARD", "startDate": "1974-05-01T00:00:00Z", "storeId": "Gf4Zn4Fy"}, {"endDate": "1998-08-07T00:00:00Z", "grantedCode": "xP8ctBsq", "itemId": "jYACKTF2", "itemNamespace": "qt7AG29b", "language": "bV-BxNV", "quantity": 71, "region": "daEZ9lLk", "source": "REWARD", "startDate": "1998-05-27T00:00:00Z", "storeId": "kf30nHVd"}], "userIds": ["dZCDFMms", "DrTQ3pno", "Pkplf3qT"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op GrantEntitlements \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 61 'GrantEntitlements' test.out

#- 62 RevokeEntitlements
# body param: body
echo '["tIi2Bcvq", "VzlMTjp0", "sg74fm31"]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RevokeEntitlements \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 62 'RevokeEntitlements' test.out

#- 63 GetEntitlement
$CLI_EXE \
    --sn platform \
    --op GetEntitlement \
    --entitlementId 'elNgPXD8' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 63 'GetEntitlement' test.out

#- 64 QueryFulfillmentHistories
$CLI_EXE \
    --sn platform \
    --op QueryFulfillmentHistories \
    --namespace $AB_NAMESPACE \
    --limit '16' \
    --offset '87' \
    --status 'SUCCESS' \
    --userId 'VPpe8hMQ' \
    > test.out 2>&1
eval_tap $? 64 'QueryFulfillmentHistories' test.out

#- 65 QueryIAPClawbackHistory
$CLI_EXE \
    --sn platform \
    --op QueryIAPClawbackHistory \
    --namespace $AB_NAMESPACE \
    --endTime 'EGaJGK8U' \
    --eventType 'CHARGEBACK' \
    --externalOrderId 'iEc0t5Tq' \
    --limit '77' \
    --offset '78' \
    --startTime 'YySrX5dP' \
    --status 'IGNORED' \
    --userId 'yfLiogPB' \
    > test.out 2>&1
eval_tap $? 65 'QueryIAPClawbackHistory' test.out

#- 66 MockPlayStationStreamEvent
# body param: body
echo '{"body": {"account": "JIdAVV1L", "additionalData": {"entitlement": [{"clientTransaction": [{"amountConsumed": 38, "clientTransactionId": "tIn59IWm"}, {"amountConsumed": 16, "clientTransactionId": "GLOF3t1U"}, {"amountConsumed": 66, "clientTransactionId": "4SqtEDFE"}], "entitlementId": "dv7Orl54", "usageCount": 84}, {"clientTransaction": [{"amountConsumed": 56, "clientTransactionId": "6Nwv1X6A"}, {"amountConsumed": 3, "clientTransactionId": "8uuBOPFW"}, {"amountConsumed": 28, "clientTransactionId": "uahlbDoE"}], "entitlementId": "GNdjPT9m", "usageCount": 77}, {"clientTransaction": [{"amountConsumed": 45, "clientTransactionId": "aIn7YpSk"}, {"amountConsumed": 72, "clientTransactionId": "XSCOnNkv"}, {"amountConsumed": 18, "clientTransactionId": "eOb8aQi2"}], "entitlementId": "WWAqAEdl", "usageCount": 69}], "purpose": "LjkvuqkW"}, "originalTitleName": "WRDFJXyj", "paymentProductSKU": "jsakMSJI", "purchaseDate": "MtOmFvOf", "sourceOrderItemId": "OiaDJpm9", "titleName": "6MphebJV"}, "eventDomain": "hke8lCTZ", "eventSource": "M6ERntII", "eventType": "8SHsq0gD", "eventVersion": 30, "id": "nds0wjEY", "timestamp": "XJkFAxEM"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op MockPlayStationStreamEvent \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 66 'MockPlayStationStreamEvent' test.out

#- 67 GetAppleIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetAppleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 67 'GetAppleIAPConfig' test.out

#- 68 UpdateAppleIAPConfig
# body param: body
echo '{"bundleId": "fpGdjJMj", "password": "zVmofVzb"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateAppleIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 68 'UpdateAppleIAPConfig' test.out

#- 69 DeleteAppleIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteAppleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 69 'DeleteAppleIAPConfig' test.out

#- 70 GetEpicGamesIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetEpicGamesIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 70 'GetEpicGamesIAPConfig' test.out

#- 71 UpdateEpicGamesIAPConfig
# body param: body
echo '{"sandboxId": "zbMuLnPY"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateEpicGamesIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 71 'UpdateEpicGamesIAPConfig' test.out

#- 72 DeleteEpicGamesIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteEpicGamesIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 72 'DeleteEpicGamesIAPConfig' test.out

#- 73 GetGoogleIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetGoogleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 73 'GetGoogleIAPConfig' test.out

#- 74 UpdateGoogleIAPConfig
# body param: body
echo '{"applicationName": "xnETNd2K", "serviceAccountId": "mFIrBOjz"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateGoogleIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 74 'UpdateGoogleIAPConfig' test.out

#- 75 DeleteGoogleIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteGoogleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 75 'DeleteGoogleIAPConfig' test.out

#- 76 UpdateGoogleP12File
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UpdateGoogleP12File \
    --namespace $AB_NAMESPACE \
    --upload $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 76 'UpdateGoogleP12File' test.out

#- 77 GetIAPItemConfig
$CLI_EXE \
    --sn platform \
    --op GetIAPItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 77 'GetIAPItemConfig' test.out

#- 78 UpdateIAPItemConfig
# body param: body
echo '{"data": [{"itemIdentity": "j0HPLY3A", "itemIdentityType": "ITEM_SKU", "platformProductIdMap": {"UGPAch2B": "883OjOiv", "pKynY6EN": "7Ad6urXa", "ghS2brkA": "EA4m58zf"}}, {"itemIdentity": "OK1G2tMV", "itemIdentityType": "ITEM_ID", "platformProductIdMap": {"9XR18gM4": "PgMckYAz", "zOeRASpU": "osnyqK3D", "rGWhihkj": "fucGmWiv"}}, {"itemIdentity": "KrqS1Yy9", "itemIdentityType": "ITEM_ID", "platformProductIdMap": {"hOUPGHop": "plsguPR5", "zSIii5CL": "jS133BOV", "4ryElhjv": "9JGOOvOR"}}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateIAPItemConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 78 'UpdateIAPItemConfig' test.out

#- 79 DeleteIAPItemConfig
$CLI_EXE \
    --sn platform \
    --op DeleteIAPItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 79 'DeleteIAPItemConfig' test.out

#- 80 GetOculusIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetOculusIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 80 'GetOculusIAPConfig' test.out

#- 81 UpdateOculusIAPConfig
# body param: body
echo '{"appId": "ReDxnmHl", "appSecret": "f7x41roC"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateOculusIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 81 'UpdateOculusIAPConfig' test.out

#- 82 DeleteOculusIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteOculusIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 82 'DeleteOculusIAPConfig' test.out

#- 83 GetPlayStationIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetPlayStationIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 83 'GetPlayStationIAPConfig' test.out

#- 84 UpdatePlaystationIAPConfig
# body param: body
echo '{"backOfficeServerClientId": "gtSMJbZ5", "backOfficeServerClientSecret": "vJDsw7r8", "enableStreamJob": false, "environment": "oDrN0u9c", "streamName": "ozzChBYs", "streamPartnerName": "gCMedr97"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePlaystationIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 84 'UpdatePlaystationIAPConfig' test.out

#- 85 DeletePlaystationIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeletePlaystationIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 85 'DeletePlaystationIAPConfig' test.out

#- 86 ValidateExistedPlaystationIAPConfig
$CLI_EXE \
    --sn platform \
    --op ValidateExistedPlaystationIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 86 'ValidateExistedPlaystationIAPConfig' test.out

#- 87 ValidatePlaystationIAPConfig
# body param: body
echo '{"backOfficeServerClientId": "ItyvooRz", "backOfficeServerClientSecret": "7py0tK6n", "enableStreamJob": false, "environment": "qWnZjdAF", "streamName": "byYZaphJ", "streamPartnerName": "2JRvOKRp"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ValidatePlaystationIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 87 'ValidatePlaystationIAPConfig' test.out

#- 88 GetSteamIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetSteamIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 88 'GetSteamIAPConfig' test.out

#- 89 UpdateSteamIAPConfig
# body param: body
echo '{"appId": "Gkle4OGd", "publisherAuthenticationKey": "uEOVXlXC"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateSteamIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 89 'UpdateSteamIAPConfig' test.out

#- 90 DeleteSteamIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteSteamIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 90 'DeleteSteamIAPConfig' test.out

#- 91 GetTwitchIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetTwitchIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 91 'GetTwitchIAPConfig' test.out

#- 92 UpdateTwitchIAPConfig
# body param: body
echo '{"clientId": "bSlklQgi", "clientSecret": "L6DjKd7k", "organizationId": "Me7NthLk"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateTwitchIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 92 'UpdateTwitchIAPConfig' test.out

#- 93 DeleteTwitchIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteTwitchIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 93 'DeleteTwitchIAPConfig' test.out

#- 94 GetXblIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetXblIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 94 'GetXblIAPConfig' test.out

#- 95 UpdateXblIAPConfig
# body param: body
echo '{"relyingPartyCert": "xRsJFm9t"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXblIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 95 'UpdateXblIAPConfig' test.out

#- 96 DeleteXblAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteXblAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 96 'DeleteXblAPConfig' test.out

#- 97 UpdateXblBPCertFile
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UpdateXblBPCertFile \
    --namespace $AB_NAMESPACE \
    --upload $TEMP_FILE_UPLOAD \
    --password 'b9odGXGE' \
    > test.out 2>&1
eval_tap $? 97 'UpdateXblBPCertFile' test.out

#- 98 DownloadInvoiceDetails
$CLI_EXE \
    --sn platform \
    --op DownloadInvoiceDetails \
    --namespace $AB_NAMESPACE \
    --feature 'mOLW9n09' \
    --itemId 'spH8Qap8' \
    --itemType 'LOOTBOX' \
    --endTime 'RJRB2NVJ' \
    --startTime '1j2ZWrEs' \
    > test.out 2>&1
eval_tap $? 98 'DownloadInvoiceDetails' test.out

#- 99 GenerateInvoiceSummary
$CLI_EXE \
    --sn platform \
    --op GenerateInvoiceSummary \
    --namespace $AB_NAMESPACE \
    --feature 'ONMLFLsy' \
    --itemId '1J0DeZzp' \
    --itemType 'INGAMEITEM' \
    --endTime 'zby2A4JP' \
    --startTime 'un9RrLAd' \
    > test.out 2>&1
eval_tap $? 99 'GenerateInvoiceSummary' test.out

#- 100 SyncInGameItem
# body param: body
echo '{"categoryPath": "lk5jN8al", "targetItemId": "zogF0Y5i", "targetNamespace": "Ta6Ywyij"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncInGameItem \
    --namespace $AB_NAMESPACE \
    --storeId 'QQnGjd18' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 100 'SyncInGameItem' test.out

#- 101 CreateItem
# body param: body
echo '{"appId": "Wy0ZOXBu", "appType": "DEMO", "baseAppId": "ZGaeQoYP", "boothName": "qIsZnV3C", "categoryPath": "ZUwjOCdl", "clazz": "D12k8EBw", "displayOrder": 16, "entitlementType": "CONSUMABLE", "ext": {"1serfDPg": {}, "GuzsDIdE": {}, "s4U77lK7": {}}, "features": ["BpZGjT6q", "ZpP57ti8", "c1vEyVtF"], "flexible": false, "images": [{"as": "alkjwe9Q", "caption": "j9REJsSo", "height": 76, "imageUrl": "a0OkVFHg", "smallImageUrl": "gLeNyUXJ", "width": 20}, {"as": "xGWTjJ9c", "caption": "hid93O7d", "height": 93, "imageUrl": "JrnzK3Ls", "smallImageUrl": "eOuCSn82", "width": 25}, {"as": "gozIccD3", "caption": "2GWa56bQ", "height": 55, "imageUrl": "yBAxU45z", "smallImageUrl": "hZ95upGH", "width": 82}], "itemIds": ["DpM6eoqm", "p2P4D9Yy", "z7qcXS5C"], "itemQty": {"37j6AUu1": 77, "1w0xOSLC": 1, "9f3Ok6fC": 63}, "itemType": "SUBSCRIPTION", "listable": true, "localizations": {"81UcsO0k": {"description": "SS1csN6A", "localExt": {"xoETsLLQ": {}, "wZzX7qpr": {}, "gjKdFyq2": {}}, "longDescription": "uI2eeuv6", "title": "POPYHtSm"}, "LHk8nO9W": {"description": "jpeJaocM", "localExt": {"wmoMiIgm": {}, "EnJsUjeA": {}, "NfxpjmGT": {}}, "longDescription": "nbJLnIYw", "title": "BeWlnkyG"}, "FFvkAe7r": {"description": "SMcrn4ap", "localExt": {"B5nswO0c": {}, "EbxB0moa": {}, "7TK2fibm": {}}, "longDescription": "Qfh5xt8a", "title": "1LA3ND8G"}}, "lootBoxConfig": {"rewardCount": 90, "rewards": [{"lootBoxItems": [{"count": 29, "duration": 28, "endDate": "1972-10-20T00:00:00Z", "itemId": "hwM2uvcR", "itemSku": "Tv7L5uMy", "itemType": "R3XZZqVD"}, {"count": 98, "duration": 2, "endDate": "1985-01-31T00:00:00Z", "itemId": "F7KkGrLw", "itemSku": "tExRZbWX", "itemType": "sFwpnfl1"}, {"count": 100, "duration": 38, "endDate": "1985-08-24T00:00:00Z", "itemId": "NlY05gYs", "itemSku": "w2KyCvl4", "itemType": "nffSp7Wo"}], "name": "bhLE1dyX", "odds": 0.30350693895109027, "type": "REWARD", "weight": 24}, {"lootBoxItems": [{"count": 1, "duration": 28, "endDate": "1994-07-02T00:00:00Z", "itemId": "EGmCamCN", "itemSku": "A6USw4R5", "itemType": "4EmVOS3O"}, {"count": 12, "duration": 15, "endDate": "1982-05-06T00:00:00Z", "itemId": "xL4YDarx", "itemSku": "zxPXVgEe", "itemType": "Kv8MmAn4"}, {"count": 74, "duration": 46, "endDate": "1983-06-04T00:00:00Z", "itemId": "2QWxK9rw", "itemSku": "YmMioP8O", "itemType": "M5QQPjCr"}], "name": "AXoUxIPq", "odds": 0.24770295958372823, "type": "PROBABILITY_GROUP", "weight": 9}, {"lootBoxItems": [{"count": 91, "duration": 3, "endDate": "1998-01-05T00:00:00Z", "itemId": "HY8sukNx", "itemSku": "55ziCHJW", "itemType": "jMcR8AXF"}, {"count": 5, "duration": 21, "endDate": "1994-12-19T00:00:00Z", "itemId": "RjD1TLmX", "itemSku": "WDtUYIt3", "itemType": "bKKd08Ed"}, {"count": 31, "duration": 13, "endDate": "1998-10-16T00:00:00Z", "itemId": "y6IdiDCp", "itemSku": "DVmQbRlP", "itemType": "lgngeGvo"}], "name": "S9fPDrT0", "odds": 0.514334898136632, "type": "REWARD", "weight": 97}], "rollFunction": "DEFAULT"}, "maxCount": 52, "maxCountPerUser": 8, "name": "s7JZoOgn", "optionBoxConfig": {"boxItems": [{"count": 61, "duration": 27, "endDate": "1987-01-23T00:00:00Z", "itemId": "Ebx4tdrI", "itemSku": "nzIt8vbn", "itemType": "I3uVt9JT"}, {"count": 43, "duration": 88, "endDate": "1971-11-12T00:00:00Z", "itemId": "q9oofhEO", "itemSku": "O1zuv2fw", "itemType": "E4EMr00d"}, {"count": 13, "duration": 21, "endDate": "1974-02-03T00:00:00Z", "itemId": "LHWAjJVu", "itemSku": "LkmeX6HU", "itemType": "8UjE1QYK"}]}, "purchasable": false, "recurring": {"cycle": "YEARLY", "fixedFreeDays": 30, "fixedTrialCycles": 95, "graceDays": 33}, "regionData": {"BZju82Ez": [{"currencyCode": "BkXTMb1z", "currencyNamespace": "s4JIGJ8u", "currencyType": "VIRTUAL", "discountAmount": 29, "discountExpireAt": "1985-07-15T00:00:00Z", "discountPercentage": 26, "discountPurchaseAt": "1977-09-21T00:00:00Z", "expireAt": "1998-02-06T00:00:00Z", "price": 74, "purchaseAt": "1973-01-24T00:00:00Z", "trialPrice": 10}, {"currencyCode": "zvrE5f0i", "currencyNamespace": "2SaoS1y0", "currencyType": "REAL", "discountAmount": 23, "discountExpireAt": "1994-11-26T00:00:00Z", "discountPercentage": 72, "discountPurchaseAt": "1993-03-12T00:00:00Z", "expireAt": "1983-08-11T00:00:00Z", "price": 7, "purchaseAt": "1986-08-31T00:00:00Z", "trialPrice": 16}, {"currencyCode": "mhrsDRYm", "currencyNamespace": "cpDUpRbj", "currencyType": "VIRTUAL", "discountAmount": 82, "discountExpireAt": "1971-06-04T00:00:00Z", "discountPercentage": 96, "discountPurchaseAt": "1973-07-10T00:00:00Z", "expireAt": "1980-05-27T00:00:00Z", "price": 9, "purchaseAt": "1988-01-03T00:00:00Z", "trialPrice": 61}], "bhPk6ocE": [{"currencyCode": "7glHaksW", "currencyNamespace": "6Kdhxi7e", "currencyType": "VIRTUAL", "discountAmount": 21, "discountExpireAt": "1981-02-23T00:00:00Z", "discountPercentage": 96, "discountPurchaseAt": "1974-02-21T00:00:00Z", "expireAt": "1971-12-05T00:00:00Z", "price": 19, "purchaseAt": "1992-07-08T00:00:00Z", "trialPrice": 92}, {"currencyCode": "D06f7Phm", "currencyNamespace": "FxbY3DYo", "currencyType": "VIRTUAL", "discountAmount": 60, "discountExpireAt": "1980-08-12T00:00:00Z", "discountPercentage": 48, "discountPurchaseAt": "1995-05-24T00:00:00Z", "expireAt": "1994-03-05T00:00:00Z", "price": 22, "purchaseAt": "1974-07-04T00:00:00Z", "trialPrice": 79}, {"currencyCode": "Y9WPyLLs", "currencyNamespace": "JKXIBPhG", "currencyType": "VIRTUAL", "discountAmount": 78, "discountExpireAt": "1971-07-07T00:00:00Z", "discountPercentage": 0, "discountPurchaseAt": "1996-07-31T00:00:00Z", "expireAt": "1998-11-05T00:00:00Z", "price": 61, "purchaseAt": "1981-06-19T00:00:00Z", "trialPrice": 4}], "u9GJv2uh": [{"currencyCode": "S28o41E1", "currencyNamespace": "isgINZ7S", "currencyType": "REAL", "discountAmount": 48, "discountExpireAt": "1988-12-09T00:00:00Z", "discountPercentage": 66, "discountPurchaseAt": "1993-06-25T00:00:00Z", "expireAt": "1972-06-16T00:00:00Z", "price": 1, "purchaseAt": "1989-07-20T00:00:00Z", "trialPrice": 71}, {"currencyCode": "9W1Vasj9", "currencyNamespace": "HsXn4RMe", "currencyType": "VIRTUAL", "discountAmount": 44, "discountExpireAt": "1988-04-07T00:00:00Z", "discountPercentage": 15, "discountPurchaseAt": "1988-05-19T00:00:00Z", "expireAt": "1998-09-04T00:00:00Z", "price": 20, "purchaseAt": "1986-02-08T00:00:00Z", "trialPrice": 43}, {"currencyCode": "e2RVlAdj", "currencyNamespace": "vtBa1r5D", "currencyType": "VIRTUAL", "discountAmount": 32, "discountExpireAt": "1980-09-02T00:00:00Z", "discountPercentage": 57, "discountPurchaseAt": "1997-12-30T00:00:00Z", "expireAt": "1998-06-28T00:00:00Z", "price": 60, "purchaseAt": "1980-01-21T00:00:00Z", "trialPrice": 15}]}, "saleConfig": {"currencyCode": "gRYFfsFZ", "price": 90}, "seasonType": "TIER", "sectionExclusive": false, "sellable": true, "sku": "rgmGCtgW", "stackable": true, "status": "INACTIVE", "tags": ["6rIdb3br", "BOsrsyJ7", "ARF1z6g2"], "targetCurrencyCode": "6oVn8Nc1", "targetNamespace": "9KsEzTEo", "thumbnailUrl": "u7DcfSJO", "useCount": 49}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateItem \
    --namespace $AB_NAMESPACE \
    --storeId 'SocDNU3D' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 101 'CreateItem' test.out

#- 102 GetItemByAppId
$CLI_EXE \
    --sn platform \
    --op GetItemByAppId \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --storeId 'vk1hBqDt' \
    --appId 'oYp6KPj4' \
    > test.out 2>&1
eval_tap $? 102 'GetItemByAppId' test.out

#- 103 QueryItems
$CLI_EXE \
    --sn platform \
    --op QueryItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --appType 'SOFTWARE' \
    --availableDate 'NFVdgXzR' \
    --baseAppId 'uFgidpw2' \
    --categoryPath 'UZUSJOE0' \
    --features 'dRmJI5Ld' \
    --includeSubCategoryItem 'false' \
    --itemType 'COINS' \
    --limit '64' \
    --offset '95' \
    --region 'tgzzAL6E' \
    --sortBy '["name", "updatedAt", "createdAt:asc"]' \
    --storeId 'ZD0hli3H' \
    --tags 'fmI4u4PM' \
    --targetNamespace 'eOU07Gno' \
    > test.out 2>&1
eval_tap $? 103 'QueryItems' test.out

#- 104 ListBasicItemsByFeatures
$CLI_EXE \
    --sn platform \
    --op ListBasicItemsByFeatures \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --features '["nxkvQOxf", "M3gIyS5z", "sLH4CFS0"]' \
    > test.out 2>&1
eval_tap $? 104 'ListBasicItemsByFeatures' test.out

#- 105 GetItems
$CLI_EXE \
    --sn platform \
    --op GetItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --storeId 'pelXYvRo' \
    --itemIds 'YZEcMdkf' \
    > test.out 2>&1
eval_tap $? 105 'GetItems' test.out

#- 106 GetItemBySku
$CLI_EXE \
    --sn platform \
    --op GetItemBySku \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --storeId 'QJ6L7odW' \
    --sku 'cDjV8xPy' \
    > test.out 2>&1
eval_tap $? 106 'GetItemBySku' test.out

#- 107 GetLocaleItemBySku
$CLI_EXE \
    --sn platform \
    --op GetLocaleItemBySku \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --language 'VNPbXXi2' \
    --populateBundle 'true' \
    --region 'oRNS2rRh' \
    --storeId 'XoXK5x1m' \
    --sku 'IqE29G6n' \
    > test.out 2>&1
eval_tap $? 107 'GetLocaleItemBySku' test.out

#- 108 GetEstimatedPrice
$CLI_EXE \
    --sn platform \
    --op GetEstimatedPrice \
    --namespace $AB_NAMESPACE \
    --region 'EvL3YjEd' \
    --storeId 'MOlZN1MS' \
    --itemIds 'zfzeePhD' \
    --userId 'GXgysSUU' \
    > test.out 2>&1
eval_tap $? 108 'GetEstimatedPrice' test.out

#- 109 GetItemIdBySku
$CLI_EXE \
    --sn platform \
    --op GetItemIdBySku \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --storeId '4Bvw2pNf' \
    --sku 's0MncMUR' \
    > test.out 2>&1
eval_tap $? 109 'GetItemIdBySku' test.out

#- 110 GetBulkItemIdBySkus
$CLI_EXE \
    --sn platform \
    --op GetBulkItemIdBySkus \
    --namespace $AB_NAMESPACE \
    --sku '["WThdNO70", "xuRT0K4U", "bVNilhRh"]' \
    --storeId '29zWBUUl' \
    > test.out 2>&1
eval_tap $? 110 'GetBulkItemIdBySkus' test.out

#- 111 BulkGetLocaleItems
$CLI_EXE \
    --sn platform \
    --op BulkGetLocaleItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --language 'noz5VcW5' \
    --region '16T7W00B' \
    --storeId 'bXAH9P4P' \
    --itemIds 'YARjzbLt' \
    > test.out 2>&1
eval_tap $? 111 'BulkGetLocaleItems' test.out

#- 112 GetAvailablePredicateTypes
$CLI_EXE \
    --sn platform \
    --op GetAvailablePredicateTypes \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 112 'GetAvailablePredicateTypes' test.out

#- 113 ValidateItemPurchaseCondition
# body param: body
echo '{"itemIds": ["NaxYiDZd", "IpRkCKgU", "kBlL7UiY"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ValidateItemPurchaseCondition \
    --namespace $AB_NAMESPACE \
    --userId 'TXiiAoPd' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 113 'ValidateItemPurchaseCondition' test.out

#- 114 BulkUpdateRegionData
# body param: body
echo '{"changes": [{"itemIdentities": ["Pnd4t9tr", "E8a9z4qr", "lXsc1gtl"], "itemIdentityType": "ITEM_ID", "regionData": {"ZtNCASBF": [{"currencyCode": "DAnnrPT6", "currencyNamespace": "nvIOo0cU", "currencyType": "VIRTUAL", "discountAmount": 96, "discountExpireAt": "1984-04-19T00:00:00Z", "discountPercentage": 95, "discountPurchaseAt": "1983-12-05T00:00:00Z", "discountedPrice": 50, "expireAt": "1990-09-06T00:00:00Z", "price": 74, "purchaseAt": "1985-09-01T00:00:00Z", "trialPrice": 74}, {"currencyCode": "ky967oRS", "currencyNamespace": "ljPsocws", "currencyType": "REAL", "discountAmount": 29, "discountExpireAt": "1973-07-15T00:00:00Z", "discountPercentage": 95, "discountPurchaseAt": "1983-09-29T00:00:00Z", "discountedPrice": 21, "expireAt": "1971-02-27T00:00:00Z", "price": 70, "purchaseAt": "1980-08-13T00:00:00Z", "trialPrice": 84}, {"currencyCode": "VHA9qBT5", "currencyNamespace": "87d2oggA", "currencyType": "VIRTUAL", "discountAmount": 26, "discountExpireAt": "1976-08-03T00:00:00Z", "discountPercentage": 100, "discountPurchaseAt": "1985-12-05T00:00:00Z", "discountedPrice": 50, "expireAt": "1985-01-03T00:00:00Z", "price": 10, "purchaseAt": "1985-10-13T00:00:00Z", "trialPrice": 26}], "NdwS9Cik": [{"currencyCode": "RWbD02qF", "currencyNamespace": "izgHe6Ez", "currencyType": "VIRTUAL", "discountAmount": 56, "discountExpireAt": "1975-10-05T00:00:00Z", "discountPercentage": 5, "discountPurchaseAt": "1981-11-04T00:00:00Z", "discountedPrice": 91, "expireAt": "1986-12-09T00:00:00Z", "price": 80, "purchaseAt": "1990-04-10T00:00:00Z", "trialPrice": 59}, {"currencyCode": "2PwzfuNx", "currencyNamespace": "xG5X3XKX", "currencyType": "REAL", "discountAmount": 37, "discountExpireAt": "1998-05-23T00:00:00Z", "discountPercentage": 36, "discountPurchaseAt": "1971-08-06T00:00:00Z", "discountedPrice": 14, "expireAt": "1993-12-08T00:00:00Z", "price": 44, "purchaseAt": "1980-05-03T00:00:00Z", "trialPrice": 1}, {"currencyCode": "nA8K0Tlm", "currencyNamespace": "QOeUzsfL", "currencyType": "REAL", "discountAmount": 43, "discountExpireAt": "1975-07-29T00:00:00Z", "discountPercentage": 52, "discountPurchaseAt": "1982-08-11T00:00:00Z", "discountedPrice": 72, "expireAt": "1988-07-29T00:00:00Z", "price": 53, "purchaseAt": "1985-11-28T00:00:00Z", "trialPrice": 84}], "F8kGUu4u": [{"currencyCode": "0XjXZ0em", "currencyNamespace": "iMQNKrbz", "currencyType": "VIRTUAL", "discountAmount": 57, "discountExpireAt": "1991-05-06T00:00:00Z", "discountPercentage": 88, "discountPurchaseAt": "1992-01-24T00:00:00Z", "discountedPrice": 22, "expireAt": "1991-08-12T00:00:00Z", "price": 96, "purchaseAt": "1995-10-07T00:00:00Z", "trialPrice": 1}, {"currencyCode": "l6YxZlhX", "currencyNamespace": "fzqvwt6H", "currencyType": "REAL", "discountAmount": 46, "discountExpireAt": "1997-02-05T00:00:00Z", "discountPercentage": 93, "discountPurchaseAt": "1984-12-28T00:00:00Z", "discountedPrice": 6, "expireAt": "1994-12-22T00:00:00Z", "price": 27, "purchaseAt": "1985-05-13T00:00:00Z", "trialPrice": 26}, {"currencyCode": "DxV4B1rj", "currencyNamespace": "5k35zOKM", "currencyType": "VIRTUAL", "discountAmount": 84, "discountExpireAt": "1991-05-12T00:00:00Z", "discountPercentage": 74, "discountPurchaseAt": "1983-08-20T00:00:00Z", "discountedPrice": 69, "expireAt": "1998-08-28T00:00:00Z", "price": 2, "purchaseAt": "1982-06-16T00:00:00Z", "trialPrice": 99}]}}, {"itemIdentities": ["yjqTWyOP", "19C2CQrR", "s490zwut"], "itemIdentityType": "ITEM_ID", "regionData": {"oGeiXjFP": [{"currencyCode": "2zaG3BVr", "currencyNamespace": "kUuG6DzU", "currencyType": "REAL", "discountAmount": 82, "discountExpireAt": "1990-11-21T00:00:00Z", "discountPercentage": 68, "discountPurchaseAt": "1978-01-28T00:00:00Z", "discountedPrice": 67, "expireAt": "1971-10-10T00:00:00Z", "price": 22, "purchaseAt": "1997-03-29T00:00:00Z", "trialPrice": 36}, {"currencyCode": "4FI0EJg4", "currencyNamespace": "MB9KxHr3", "currencyType": "REAL", "discountAmount": 26, "discountExpireAt": "1985-01-14T00:00:00Z", "discountPercentage": 48, "discountPurchaseAt": "1981-08-31T00:00:00Z", "discountedPrice": 52, "expireAt": "1978-05-25T00:00:00Z", "price": 37, "purchaseAt": "1987-02-26T00:00:00Z", "trialPrice": 32}, {"currencyCode": "pjTrKur4", "currencyNamespace": "pkyOtIaa", "currencyType": "VIRTUAL", "discountAmount": 27, "discountExpireAt": "1984-12-02T00:00:00Z", "discountPercentage": 32, "discountPurchaseAt": "1978-08-06T00:00:00Z", "discountedPrice": 49, "expireAt": "1973-08-21T00:00:00Z", "price": 48, "purchaseAt": "1995-12-15T00:00:00Z", "trialPrice": 68}], "8Tx75x7u": [{"currencyCode": "4HXjq1q1", "currencyNamespace": "lt0AE1cG", "currencyType": "REAL", "discountAmount": 62, "discountExpireAt": "1992-07-09T00:00:00Z", "discountPercentage": 52, "discountPurchaseAt": "1978-10-19T00:00:00Z", "discountedPrice": 69, "expireAt": "1993-11-03T00:00:00Z", "price": 2, "purchaseAt": "1980-01-06T00:00:00Z", "trialPrice": 40}, {"currencyCode": "X1BQVZit", "currencyNamespace": "MBQaI2zU", "currencyType": "REAL", "discountAmount": 13, "discountExpireAt": "1998-03-12T00:00:00Z", "discountPercentage": 62, "discountPurchaseAt": "1982-06-04T00:00:00Z", "discountedPrice": 73, "expireAt": "1986-02-24T00:00:00Z", "price": 10, "purchaseAt": "1979-07-05T00:00:00Z", "trialPrice": 25}, {"currencyCode": "4P4p4Hro", "currencyNamespace": "qd14MoAW", "currencyType": "VIRTUAL", "discountAmount": 18, "discountExpireAt": "1996-09-25T00:00:00Z", "discountPercentage": 41, "discountPurchaseAt": "1995-05-30T00:00:00Z", "discountedPrice": 13, "expireAt": "1972-10-26T00:00:00Z", "price": 42, "purchaseAt": "1992-05-13T00:00:00Z", "trialPrice": 62}], "Y4USzxaX": [{"currencyCode": "mnu1VmQg", "currencyNamespace": "hBwBjk5j", "currencyType": "REAL", "discountAmount": 90, "discountExpireAt": "1973-07-15T00:00:00Z", "discountPercentage": 13, "discountPurchaseAt": "1985-10-30T00:00:00Z", "discountedPrice": 86, "expireAt": "1978-09-26T00:00:00Z", "price": 14, "purchaseAt": "1994-11-20T00:00:00Z", "trialPrice": 2}, {"currencyCode": "BMLQ276I", "currencyNamespace": "6Qf9rFHz", "currencyType": "VIRTUAL", "discountAmount": 12, "discountExpireAt": "1986-07-16T00:00:00Z", "discountPercentage": 58, "discountPurchaseAt": "1983-09-14T00:00:00Z", "discountedPrice": 95, "expireAt": "1977-10-24T00:00:00Z", "price": 26, "purchaseAt": "1997-04-16T00:00:00Z", "trialPrice": 44}, {"currencyCode": "4pxMADzH", "currencyNamespace": "wPtAXduC", "currencyType": "REAL", "discountAmount": 31, "discountExpireAt": "1998-09-02T00:00:00Z", "discountPercentage": 37, "discountPurchaseAt": "1980-05-03T00:00:00Z", "discountedPrice": 63, "expireAt": "1979-10-20T00:00:00Z", "price": 11, "purchaseAt": "1979-03-13T00:00:00Z", "trialPrice": 5}]}}, {"itemIdentities": ["dnehv1ID", "XDiU6n3p", "iaU8zWgZ"], "itemIdentityType": "ITEM_ID", "regionData": {"UIXjSNaa": [{"currencyCode": "q2lud544", "currencyNamespace": "N6SJLcdF", "currencyType": "VIRTUAL", "discountAmount": 2, "discountExpireAt": "1982-03-10T00:00:00Z", "discountPercentage": 3, "discountPurchaseAt": "1983-09-18T00:00:00Z", "discountedPrice": 97, "expireAt": "1978-04-12T00:00:00Z", "price": 99, "purchaseAt": "1998-12-14T00:00:00Z", "trialPrice": 7}, {"currencyCode": "nfquz86M", "currencyNamespace": "clPai83O", "currencyType": "VIRTUAL", "discountAmount": 70, "discountExpireAt": "1998-10-17T00:00:00Z", "discountPercentage": 84, "discountPurchaseAt": "1973-07-04T00:00:00Z", "discountedPrice": 69, "expireAt": "1989-05-09T00:00:00Z", "price": 85, "purchaseAt": "1989-07-25T00:00:00Z", "trialPrice": 81}, {"currencyCode": "ygGXghI1", "currencyNamespace": "UVjWaYcL", "currencyType": "REAL", "discountAmount": 63, "discountExpireAt": "1996-11-12T00:00:00Z", "discountPercentage": 6, "discountPurchaseAt": "1986-04-10T00:00:00Z", "discountedPrice": 78, "expireAt": "1995-05-03T00:00:00Z", "price": 46, "purchaseAt": "1972-04-02T00:00:00Z", "trialPrice": 6}], "Mwjer0Go": [{"currencyCode": "AHwmY0lL", "currencyNamespace": "yxONWKmF", "currencyType": "REAL", "discountAmount": 43, "discountExpireAt": "1977-05-27T00:00:00Z", "discountPercentage": 44, "discountPurchaseAt": "1972-09-15T00:00:00Z", "discountedPrice": 23, "expireAt": "1986-08-01T00:00:00Z", "price": 98, "purchaseAt": "1999-01-04T00:00:00Z", "trialPrice": 15}, {"currencyCode": "nvTbOARQ", "currencyNamespace": "2zttgqLH", "currencyType": "VIRTUAL", "discountAmount": 69, "discountExpireAt": "1974-03-27T00:00:00Z", "discountPercentage": 98, "discountPurchaseAt": "1987-10-14T00:00:00Z", "discountedPrice": 48, "expireAt": "1995-12-05T00:00:00Z", "price": 82, "purchaseAt": "1989-11-14T00:00:00Z", "trialPrice": 52}, {"currencyCode": "GUxKIhGU", "currencyNamespace": "hP87Kp43", "currencyType": "REAL", "discountAmount": 46, "discountExpireAt": "1987-02-16T00:00:00Z", "discountPercentage": 17, "discountPurchaseAt": "1988-12-26T00:00:00Z", "discountedPrice": 85, "expireAt": "1992-12-07T00:00:00Z", "price": 14, "purchaseAt": "1990-01-26T00:00:00Z", "trialPrice": 13}], "fkhTnkRE": [{"currencyCode": "rj36hhMK", "currencyNamespace": "k3z1w8tZ", "currencyType": "VIRTUAL", "discountAmount": 31, "discountExpireAt": "1981-05-04T00:00:00Z", "discountPercentage": 61, "discountPurchaseAt": "1980-06-20T00:00:00Z", "discountedPrice": 47, "expireAt": "1989-08-26T00:00:00Z", "price": 89, "purchaseAt": "1975-04-23T00:00:00Z", "trialPrice": 99}, {"currencyCode": "0BfHTf8s", "currencyNamespace": "f8pCWVQW", "currencyType": "REAL", "discountAmount": 54, "discountExpireAt": "1978-03-05T00:00:00Z", "discountPercentage": 100, "discountPurchaseAt": "1980-07-04T00:00:00Z", "discountedPrice": 82, "expireAt": "1992-03-24T00:00:00Z", "price": 8, "purchaseAt": "1984-02-07T00:00:00Z", "trialPrice": 65}, {"currencyCode": "eri9eqEu", "currencyNamespace": "5I2gVycd", "currencyType": "REAL", "discountAmount": 44, "discountExpireAt": "1999-01-31T00:00:00Z", "discountPercentage": 25, "discountPurchaseAt": "1985-02-02T00:00:00Z", "discountedPrice": 35, "expireAt": "1990-05-03T00:00:00Z", "price": 70, "purchaseAt": "1988-08-10T00:00:00Z", "trialPrice": 35}]}}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op BulkUpdateRegionData \
    --namespace $AB_NAMESPACE \
    --storeId 'vg4VaW9m' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 114 'BulkUpdateRegionData' test.out

#- 115 SearchItems
$CLI_EXE \
    --sn platform \
    --op SearchItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --itemType 'APP' \
    --limit '62' \
    --offset '61' \
    --sortBy '7JnCS00U' \
    --storeId 'nTqQNV28' \
    --keyword '8IfpGB60' \
    --language '9YU5F0vn' \
    > test.out 2>&1
eval_tap $? 115 'SearchItems' test.out

#- 116 QueryUncategorizedItems
$CLI_EXE \
    --sn platform \
    --op QueryUncategorizedItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --limit '74' \
    --offset '87' \
    --sortBy '["createdAt", "displayOrder:desc", "createdAt:asc"]' \
    --storeId 'vd7x8BZe' \
    > test.out 2>&1
eval_tap $? 116 'QueryUncategorizedItems' test.out

#- 117 GetItem
$CLI_EXE \
    --sn platform \
    --op GetItem \
    --itemId 'q8444yDG' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --storeId 'YMowv6h7' \
    > test.out 2>&1
eval_tap $? 117 'GetItem' test.out

#- 118 UpdateItem
# body param: body
echo '{"appId": "fmtexv8D", "appType": "SOFTWARE", "baseAppId": "V5ZTpwhx", "boothName": "6bZRCE3R", "categoryPath": "lhqgFYdU", "clazz": "yEY4051Q", "displayOrder": 59, "entitlementType": "CONSUMABLE", "ext": {"R9KfNZ2v": {}, "c3GwnC8A": {}, "0dWW4s81": {}}, "features": ["ostZ0mTc", "ugO4AxgN", "eyvvkB2S"], "flexible": true, "images": [{"as": "C9ZfYXHH", "caption": "nPxlUyXo", "height": 98, "imageUrl": "dwDmsZVj", "smallImageUrl": "foaqvRRp", "width": 51}, {"as": "oNM921E4", "caption": "n6kcLTwB", "height": 32, "imageUrl": "fxZ8ZzUp", "smallImageUrl": "2kwgS87p", "width": 6}, {"as": "Q70iVRIR", "caption": "GwMYkcch", "height": 97, "imageUrl": "0mp7jm6m", "smallImageUrl": "mWidbC6I", "width": 21}], "itemIds": ["TW1uqnNH", "S6ivmW3o", "HWrHReEu"], "itemQty": {"84AoO37a": 48, "XV9Nozkc": 38, "uJcnVSVY": 84}, "itemType": "COINS", "listable": true, "localizations": {"vXUFNfsI": {"description": "8tFUuz3z", "localExt": {"EvMlL5Vs": {}, "bvkWGSMk": {}, "nc9qmDyq": {}}, "longDescription": "NmPO8trg", "title": "vnNrsnGh"}, "tghFHjQU": {"description": "k3vQnCnK", "localExt": {"7ss0bVFb": {}, "nCdstLxj": {}, "qYYkUb7S": {}}, "longDescription": "GpeNUWPP", "title": "eq4auuJL"}, "Xk54PVZV": {"description": "YmMP2qln", "localExt": {"PnKsbOId": {}, "WugWzdNU": {}, "ILcd8bEn": {}}, "longDescription": "p9kyTfdG", "title": "vxbssBvp"}}, "lootBoxConfig": {"rewardCount": 30, "rewards": [{"lootBoxItems": [{"count": 80, "duration": 10, "endDate": "1985-04-16T00:00:00Z", "itemId": "QAo9fBpo", "itemSku": "9POi7mQk", "itemType": "ArLVZJ4T"}, {"count": 82, "duration": 4, "endDate": "1982-01-12T00:00:00Z", "itemId": "MQsJA9xq", "itemSku": "AKedRQji", "itemType": "J2QqN75Y"}, {"count": 25, "duration": 38, "endDate": "1994-12-07T00:00:00Z", "itemId": "1UOygX5u", "itemSku": "2br55Spp", "itemType": "sPvTLQA3"}], "name": "q4ywZ9kB", "odds": 0.1256480542300481, "type": "REWARD_GROUP", "weight": 15}, {"lootBoxItems": [{"count": 41, "duration": 86, "endDate": "1999-11-30T00:00:00Z", "itemId": "xmIPJuOe", "itemSku": "GELTuhlY", "itemType": "WoQsFKHA"}, {"count": 91, "duration": 1, "endDate": "1989-11-12T00:00:00Z", "itemId": "9wNgou2P", "itemSku": "d52uF0y9", "itemType": "hLswf2ja"}, {"count": 73, "duration": 1, "endDate": "1983-09-19T00:00:00Z", "itemId": "GfEWouEZ", "itemSku": "sRZDbgeH", "itemType": "6mXmf8KU"}], "name": "phg6IZLE", "odds": 0.8531295123753239, "type": "REWARD", "weight": 80}, {"lootBoxItems": [{"count": 39, "duration": 95, "endDate": "1980-01-22T00:00:00Z", "itemId": "6M5BQEgA", "itemSku": "nBo7qgzv", "itemType": "2UYrBzNl"}, {"count": 78, "duration": 30, "endDate": "1981-01-10T00:00:00Z", "itemId": "McbkD4g9", "itemSku": "ApZ9wGxE", "itemType": "poHTLX5i"}, {"count": 39, "duration": 20, "endDate": "1976-05-01T00:00:00Z", "itemId": "EBhZIivX", "itemSku": "0lPQx2xi", "itemType": "DVCpmzVf"}], "name": "qDsxltlO", "odds": 0.9630752529660247, "type": "REWARD", "weight": 33}], "rollFunction": "DEFAULT"}, "maxCount": 62, "maxCountPerUser": 97, "name": "Unz147o0", "optionBoxConfig": {"boxItems": [{"count": 100, "duration": 43, "endDate": "1996-01-27T00:00:00Z", "itemId": "bLXHfdPT", "itemSku": "zW4SL8NB", "itemType": "BQ5n1P3E"}, {"count": 97, "duration": 31, "endDate": "1999-11-13T00:00:00Z", "itemId": "HQV9DsoA", "itemSku": "0uvxmeHZ", "itemType": "jvGIexJ2"}, {"count": 74, "duration": 69, "endDate": "1982-03-12T00:00:00Z", "itemId": "5rUg0mjR", "itemSku": "1CPhEmGW", "itemType": "bjraLYRL"}]}, "purchasable": false, "recurring": {"cycle": "MONTHLY", "fixedFreeDays": 86, "fixedTrialCycles": 10, "graceDays": 18}, "regionData": {"05VKnvb4": [{"currencyCode": "KGAaumUo", "currencyNamespace": "7TRndXh5", "currencyType": "REAL", "discountAmount": 91, "discountExpireAt": "1980-02-18T00:00:00Z", "discountPercentage": 41, "discountPurchaseAt": "1991-04-30T00:00:00Z", "expireAt": "1992-10-09T00:00:00Z", "price": 46, "purchaseAt": "1989-10-25T00:00:00Z", "trialPrice": 59}, {"currencyCode": "r8ubfUCK", "currencyNamespace": "BOpZ9T2N", "currencyType": "REAL", "discountAmount": 82, "discountExpireAt": "1980-03-01T00:00:00Z", "discountPercentage": 81, "discountPurchaseAt": "1986-06-08T00:00:00Z", "expireAt": "1972-10-16T00:00:00Z", "price": 37, "purchaseAt": "1977-03-19T00:00:00Z", "trialPrice": 46}, {"currencyCode": "kgL5UROa", "currencyNamespace": "EN6urhEx", "currencyType": "VIRTUAL", "discountAmount": 0, "discountExpireAt": "1983-02-09T00:00:00Z", "discountPercentage": 77, "discountPurchaseAt": "1973-01-29T00:00:00Z", "expireAt": "1988-02-08T00:00:00Z", "price": 49, "purchaseAt": "1986-03-01T00:00:00Z", "trialPrice": 28}], "4aty330f": [{"currencyCode": "ZEbOPKHS", "currencyNamespace": "YYqQR7Nc", "currencyType": "VIRTUAL", "discountAmount": 92, "discountExpireAt": "1991-05-01T00:00:00Z", "discountPercentage": 40, "discountPurchaseAt": "1974-05-12T00:00:00Z", "expireAt": "1980-10-20T00:00:00Z", "price": 45, "purchaseAt": "1971-12-16T00:00:00Z", "trialPrice": 4}, {"currencyCode": "KXeNTiW6", "currencyNamespace": "1nqZgvzT", "currencyType": "VIRTUAL", "discountAmount": 91, "discountExpireAt": "1974-01-08T00:00:00Z", "discountPercentage": 74, "discountPurchaseAt": "1994-10-20T00:00:00Z", "expireAt": "1980-10-29T00:00:00Z", "price": 54, "purchaseAt": "1974-07-31T00:00:00Z", "trialPrice": 25}, {"currencyCode": "e8KSp2FE", "currencyNamespace": "uUbcC4iT", "currencyType": "VIRTUAL", "discountAmount": 30, "discountExpireAt": "1972-11-25T00:00:00Z", "discountPercentage": 8, "discountPurchaseAt": "1977-06-13T00:00:00Z", "expireAt": "1994-06-25T00:00:00Z", "price": 42, "purchaseAt": "1997-08-08T00:00:00Z", "trialPrice": 89}], "g3iPNXVG": [{"currencyCode": "rcUJIaOx", "currencyNamespace": "niiATuUn", "currencyType": "REAL", "discountAmount": 100, "discountExpireAt": "1993-06-15T00:00:00Z", "discountPercentage": 23, "discountPurchaseAt": "1993-01-05T00:00:00Z", "expireAt": "1984-01-31T00:00:00Z", "price": 36, "purchaseAt": "1983-10-10T00:00:00Z", "trialPrice": 97}, {"currencyCode": "7kikDu6T", "currencyNamespace": "4X2nYoTL", "currencyType": "VIRTUAL", "discountAmount": 93, "discountExpireAt": "1991-05-29T00:00:00Z", "discountPercentage": 86, "discountPurchaseAt": "1984-06-26T00:00:00Z", "expireAt": "1992-02-28T00:00:00Z", "price": 9, "purchaseAt": "1993-04-29T00:00:00Z", "trialPrice": 69}, {"currencyCode": "cVf7GhD4", "currencyNamespace": "BEYaTnx7", "currencyType": "REAL", "discountAmount": 41, "discountExpireAt": "1990-04-03T00:00:00Z", "discountPercentage": 74, "discountPurchaseAt": "1985-08-11T00:00:00Z", "expireAt": "1982-05-14T00:00:00Z", "price": 5, "purchaseAt": "1975-09-08T00:00:00Z", "trialPrice": 46}]}, "saleConfig": {"currencyCode": "YyEIOK0A", "price": 71}, "seasonType": "TIER", "sectionExclusive": true, "sellable": false, "sku": "u2UONnUr", "stackable": true, "status": "INACTIVE", "tags": ["9MzqY0Ra", "XOBOwEnm", "ILutTR6T"], "targetCurrencyCode": "3oZfBlXO", "targetNamespace": "KaHWQ1ya", "thumbnailUrl": "N66NzRNG", "useCount": 65}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateItem \
    --itemId 'TMtS2jB4' \
    --namespace $AB_NAMESPACE \
    --storeId 'QNTNvfq5' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 118 'UpdateItem' test.out

#- 119 DeleteItem
$CLI_EXE \
    --sn platform \
    --op DeleteItem \
    --itemId 'RvStMEKu' \
    --namespace $AB_NAMESPACE \
    --force 'true' \
    --storeId 'bGAPwJtA' \
    > test.out 2>&1
eval_tap $? 119 'DeleteItem' test.out

#- 120 AcquireItem
# body param: body
echo '{"count": 4, "orderNo": "M4SP2Ls4"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op AcquireItem \
    --itemId 'f200QFQh' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 120 'AcquireItem' test.out

#- 121 GetApp
$CLI_EXE \
    --sn platform \
    --op GetApp \
    --itemId 'AlOXSI4T' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --storeId 'MVpv2oAF' \
    > test.out 2>&1
eval_tap $? 121 'GetApp' test.out

#- 122 UpdateApp
# body param: body
echo '{"carousel": [{"alt": "UP1KwTmy", "previewUrl": "WmMYAs6B", "thumbnailUrl": "9CUfdasB", "type": "video", "url": "urQZ7TiS", "videoSource": "generic"}, {"alt": "fAq1Enke", "previewUrl": "duDvRnJb", "thumbnailUrl": "YuInrzPX", "type": "image", "url": "DEuw4O8o", "videoSource": "youtube"}, {"alt": "gBhE2s4L", "previewUrl": "zBri993X", "thumbnailUrl": "7epqoOrk", "type": "video", "url": "JrtuEPKn", "videoSource": "youtube"}], "developer": "7JwjZeN1", "forumUrl": "5igJIgBh", "genres": ["Indie", "Action", "Simulation"], "localizations": {"5zHEafCZ": {"announcement": "TfCk0OXl", "slogan": "yl5V2ha6"}, "X0P2kL40": {"announcement": "7oL2h4Sg", "slogan": "pKrTmPam"}, "qftblnWW": {"announcement": "7o4HcSpk", "slogan": "dhJRihRY"}}, "platformRequirements": {"Awy4FNm3": [{"additionals": "39qOSWme", "directXVersion": "ueuZxwMg", "diskSpace": "MWnq31Bh", "graphics": "b5LtZiOb", "label": "U5cG3qmJ", "osVersion": "booZA7yj", "processor": "zx29ARM8", "ram": "eCESoZW6", "soundCard": "Aw6Oemba"}, {"additionals": "V6t9ALkm", "directXVersion": "AO3zmPeq", "diskSpace": "MOn0Srx4", "graphics": "IJrTppvt", "label": "RFHyEfN6", "osVersion": "FXN7dQoK", "processor": "lQb128if", "ram": "GBGCohUB", "soundCard": "JDT0V1hf"}, {"additionals": "yeT3jng5", "directXVersion": "tUAuNrlg", "diskSpace": "lt5jUNnc", "graphics": "EkQBCdUC", "label": "xYfqJGoe", "osVersion": "R32xyvRP", "processor": "Ve5jYleG", "ram": "TitYNOHr", "soundCard": "ZWYIswuy"}], "3jrWAfEk": [{"additionals": "5IRfTlri", "directXVersion": "cXmqq153", "diskSpace": "LsLsJ4h9", "graphics": "uc6Owy0D", "label": "KUmdqnek", "osVersion": "rFtRKvpr", "processor": "7MYzTZF8", "ram": "5y9AaY6t", "soundCard": "eoJzjoL1"}, {"additionals": "9COjACH9", "directXVersion": "fhh7MjpK", "diskSpace": "Vj5RDyCv", "graphics": "mnmwhisX", "label": "ciwPGzzR", "osVersion": "Mkii6G6H", "processor": "UIwcDWxJ", "ram": "GUcBF3lY", "soundCard": "yYOfDJRK"}, {"additionals": "z8i3wNdV", "directXVersion": "PzeFXWL5", "diskSpace": "fSpm2oj6", "graphics": "AqPIVcrG", "label": "9C5qjFU5", "osVersion": "tGuFgmcr", "processor": "pmkyklLa", "ram": "QNLBTW56", "soundCard": "5z6lRkKK"}], "dYUYszic": [{"additionals": "qXTla1SD", "directXVersion": "EVfjEDyj", "diskSpace": "s7EdZxVe", "graphics": "LGJ22mOc", "label": "WRW8ruUL", "osVersion": "JDpyvEIi", "processor": "GXyhus6K", "ram": "nZfa9FjI", "soundCard": "vI1HHwZN"}, {"additionals": "JGZnD9P3", "directXVersion": "AWSu7kKU", "diskSpace": "Q4eVVH1Q", "graphics": "dGQNaDsM", "label": "L3M7tF6P", "osVersion": "ie4WLAah", "processor": "KGgmSgoD", "ram": "BnnQSXS8", "soundCard": "AdySo6bl"}, {"additionals": "hequX82q", "directXVersion": "PzFh9y12", "diskSpace": "0F9J2fva", "graphics": "o3mCoUCX", "label": "sG1xg4nl", "osVersion": "PKUe3ZIt", "processor": "fg4GitsF", "ram": "uVdaixSy", "soundCard": "XTEY8fJx"}]}, "platforms": ["Windows", "Windows", "Android"], "players": ["CrossPlatformMulti", "LocalCoop", "LocalCoop"], "primaryGenre": "Simulation", "publisher": "9DqXAtRT", "releaseDate": "1995-12-22T00:00:00Z", "websiteUrl": "wD0b5C87"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateApp \
    --itemId 'rq90mxC5' \
    --namespace $AB_NAMESPACE \
    --storeId 'Q18aPkKg' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 122 'UpdateApp' test.out

#- 123 DisableItem
$CLI_EXE \
    --sn platform \
    --op DisableItem \
    --itemId 'XFW6hYhB' \
    --namespace $AB_NAMESPACE \
    --storeId 'A2eoPUTC' \
    > test.out 2>&1
eval_tap $? 123 'DisableItem' test.out

#- 124 GetItemDynamicData
$CLI_EXE \
    --sn platform \
    --op GetItemDynamicData \
    --itemId '3PIR6gsc' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 124 'GetItemDynamicData' test.out

#- 125 EnableItem
$CLI_EXE \
    --sn platform \
    --op EnableItem \
    --itemId 'rMnZozuM' \
    --namespace $AB_NAMESPACE \
    --storeId 'xnGh5gh8' \
    > test.out 2>&1
eval_tap $? 125 'EnableItem' test.out

#- 126 FeatureItem
$CLI_EXE \
    --sn platform \
    --op FeatureItem \
    --feature 'JwtA7PaP' \
    --itemId '1MePyejF' \
    --namespace $AB_NAMESPACE \
    --storeId 'KZa5OjM5' \
    > test.out 2>&1
eval_tap $? 126 'FeatureItem' test.out

#- 127 DefeatureItem
$CLI_EXE \
    --sn platform \
    --op DefeatureItem \
    --feature 'LMAXHZUX' \
    --itemId 'xC8dKWME' \
    --namespace $AB_NAMESPACE \
    --storeId 'i8Ri5J9V' \
    > test.out 2>&1
eval_tap $? 127 'DefeatureItem' test.out

#- 128 GetLocaleItem
$CLI_EXE \
    --sn platform \
    --op GetLocaleItem \
    --itemId 'dBWQ3DEG' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --language '69ddp86A' \
    --populateBundle 'true' \
    --region 'MwUJ4z1W' \
    --storeId 'Ve8SOe85' \
    > test.out 2>&1
eval_tap $? 128 'GetLocaleItem' test.out

#- 129 UpdateItemPurchaseCondition
# body param: body
echo '{"purchaseCondition": {"conditionGroups": [{"operator": "or", "predicates": [{"anyOf": 56, "comparison": "isGreaterThanOrEqual", "name": "JU1ijF4w", "predicateType": "EntitlementPredicate", "value": "BzJbkTfU", "values": ["4LvWYw7n", "WTMpkopb", "TUHplRBr"]}, {"anyOf": 68, "comparison": "excludes", "name": "B8QlYxrl", "predicateType": "SeasonPassPredicate", "value": "3oca72ai", "values": ["5px8XuPV", "oGbS3xAm", "cKii6ALL"]}, {"anyOf": 46, "comparison": "includes", "name": "uw375IDn", "predicateType": "EntitlementPredicate", "value": "MkLgViRy", "values": ["AlL7GLqR", "eI3z3cmC", "lPGdeS9Z"]}]}, {"operator": "and", "predicates": [{"anyOf": 78, "comparison": "isNot", "name": "Q4X57jQ4", "predicateType": "EntitlementPredicate", "value": "KQHwKfxz", "values": ["endCSXUm", "eB8Aekyf", "QH8vM8Ly"]}, {"anyOf": 73, "comparison": "is", "name": "ULi8SE5x", "predicateType": "SeasonTierPredicate", "value": "Kl5uH0hS", "values": ["UfLuJn1D", "ohZQgv25", "y5eFDW9K"]}, {"anyOf": 14, "comparison": "isGreaterThan", "name": "w1BRtUqt", "predicateType": "SeasonPassPredicate", "value": "dALXiu3n", "values": ["UEhCBFaW", "56pdzMeN", "ujiDhYm3"]}]}, {"operator": "or", "predicates": [{"anyOf": 76, "comparison": "isLessThanOrEqual", "name": "uOZcMmyv", "predicateType": "SeasonTierPredicate", "value": "K2S6TRAo", "values": ["aeUd9zlu", "V0PfMzfD", "zdM8q0co"]}, {"anyOf": 26, "comparison": "includes", "name": "5IZx0qWm", "predicateType": "SeasonPassPredicate", "value": "xkwUNsd1", "values": ["BFwHSQZ2", "hysRF5px", "XeNvfimJ"]}, {"anyOf": 9, "comparison": "includes", "name": "ugWGsKd8", "predicateType": "EntitlementPredicate", "value": "irjuc8sV", "values": ["kBr0Pd4d", "0CeNavKo", "mF8gvArH"]}]}]}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateItemPurchaseCondition \
    --itemId '7NOWnl6O' \
    --namespace $AB_NAMESPACE \
    --storeId 'vcqxSbIT' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 129 'UpdateItemPurchaseCondition' test.out

#- 130 ReturnItem
# body param: body
echo '{"orderNo": "GjbBIFPR"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ReturnItem \
    --itemId 'F8qtXDQI' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 130 'ReturnItem' test.out

#- 131 QueryKeyGroups
$CLI_EXE \
    --sn platform \
    --op QueryKeyGroups \
    --namespace $AB_NAMESPACE \
    --limit '37' \
    --name 'PLJle1mC' \
    --offset '75' \
    --tag 'yQ8LYKZe' \
    > test.out 2>&1
eval_tap $? 131 'QueryKeyGroups' test.out

#- 132 CreateKeyGroup
# body param: body
echo '{"description": "xV8NOwgh", "name": "dXIi1U9S", "status": "ACTIVE", "tags": ["inak6SZf", "4nU0GJYw", "uyIL7dnW"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateKeyGroup \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 132 'CreateKeyGroup' test.out

#- 133 GetKeyGroupByBoothName
eval_tap 0 133 'GetKeyGroupByBoothName # SKIP deprecated' test.out

#- 134 GetKeyGroup
$CLI_EXE \
    --sn platform \
    --op GetKeyGroup \
    --keyGroupId 'Ve7XbQoe' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 134 'GetKeyGroup' test.out

#- 135 UpdateKeyGroup
# body param: body
echo '{"description": "iZQmCxxF", "name": "zWXZegii", "status": "INACTIVE", "tags": ["0tWku2ab", "W8nINdvb", "OQWcUbB8"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateKeyGroup \
    --keyGroupId '0ywFMaQw' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 135 'UpdateKeyGroup' test.out

#- 136 GetKeyGroupDynamic
$CLI_EXE \
    --sn platform \
    --op GetKeyGroupDynamic \
    --keyGroupId '3yeJxC7P' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 136 'GetKeyGroupDynamic' test.out

#- 137 ListKeys
$CLI_EXE \
    --sn platform \
    --op ListKeys \
    --keyGroupId 'MyeuiSVJ' \
    --namespace $AB_NAMESPACE \
    --limit '3' \
    --offset '66' \
    --status 'ACQUIRED' \
    > test.out 2>&1
eval_tap $? 137 'ListKeys' test.out

#- 138 UploadKeys
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UploadKeys \
    --keyGroupId 'aIvLXoqx' \
    --namespace $AB_NAMESPACE \
    --upload $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 138 'UploadKeys' test.out

#- 139 QueryOrders
$CLI_EXE \
    --sn platform \
    --op QueryOrders \
    --namespace $AB_NAMESPACE \
    --endTime 'jwTshH2S' \
    --limit '29' \
    --offset '59' \
    --orderNos '["8u3wi1oL", "bORb7Yki", "QgyYwxNF"]' \
    --sortBy 'gc2Y95kJ' \
    --startTime 'EvElDr42' \
    --status 'FULFILL_FAILED' \
    --withTotal 'true' \
    > test.out 2>&1
eval_tap $? 139 'QueryOrders' test.out

#- 140 GetOrderStatistics
$CLI_EXE \
    --sn platform \
    --op GetOrderStatistics \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 140 'GetOrderStatistics' test.out

#- 141 GetOrder
$CLI_EXE \
    --sn platform \
    --op GetOrder \
    --namespace $AB_NAMESPACE \
    --orderNo '9mJPocXI' \
    > test.out 2>&1
eval_tap $? 141 'GetOrder' test.out

#- 142 RefundOrder
# body param: body
echo '{"description": "59D9JGDh"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RefundOrder \
    --namespace $AB_NAMESPACE \
    --orderNo '0Arnxeoy' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 142 'RefundOrder' test.out

#- 143 GetPaymentCallbackConfig
$CLI_EXE \
    --sn platform \
    --op GetPaymentCallbackConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 143 'GetPaymentCallbackConfig' test.out

#- 144 UpdatePaymentCallbackConfig
# body param: body
echo '{"dryRun": true, "notifyUrl": "GgOpEA8h", "privateKey": "1F7YqnO4"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePaymentCallbackConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 144 'UpdatePaymentCallbackConfig' test.out

#- 145 QueryPaymentNotifications
$CLI_EXE \
    --sn platform \
    --op QueryPaymentNotifications \
    --namespace $AB_NAMESPACE \
    --endDate 'PB3fK29J' \
    --externalId 'NSwHJWtP' \
    --limit '57' \
    --notificationSource 'WXPAY' \
    --notificationType 'WJyrNKSp' \
    --offset '43' \
    --paymentOrderNo 'ex9RTe2S' \
    --startDate 'KzGZTqVv' \
    --status 'IGNORED' \
    > test.out 2>&1
eval_tap $? 145 'QueryPaymentNotifications' test.out

#- 146 QueryPaymentOrders
$CLI_EXE \
    --sn platform \
    --op QueryPaymentOrders \
    --namespace $AB_NAMESPACE \
    --channel 'INTERNAL' \
    --extTxId '87b4uDHE' \
    --limit '62' \
    --offset '52' \
    --status 'NOTIFICATION_OF_CHARGEBACK' \
    > test.out 2>&1
eval_tap $? 146 'QueryPaymentOrders' test.out

#- 147 CreatePaymentOrderByDedicated
# body param: body
echo '{"currencyCode": "YrKE9zYu", "currencyNamespace": "3HwTykGR", "customParameters": {"3GIOKBlq": {}, "oonwYDZk": {}, "V7zFTlXl": {}}, "description": "fYn9LQdh", "extOrderNo": "WbD9xL8G", "extUserId": "D2HAoeEV", "itemType": "MEDIA", "language": "Ra-HHNy", "metadata": {"7DzNlOZl": "MP4g3h41", "shXBQnfT": "DTHmQ3En", "TnvsTxs6": "s6lhPBpA"}, "notifyUrl": "JDEDXUww", "omitNotification": true, "platform": "h69i3JUF", "price": 26, "recurringPaymentOrderNo": "fvSyK3gX", "region": "AV7gaq0l", "returnUrl": "7oMnQ6E2", "sandbox": false, "sku": "zaWlJa3F", "subscriptionId": "49t70l1P", "targetNamespace": "gF247Uy1", "targetUserId": "jQf1jL1t", "title": "D0LxEOtc"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreatePaymentOrderByDedicated \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 147 'CreatePaymentOrderByDedicated' test.out

#- 148 ListExtOrderNoByExtTxId
$CLI_EXE \
    --sn platform \
    --op ListExtOrderNoByExtTxId \
    --namespace $AB_NAMESPACE \
    --extTxId 'x8v5dZxz' \
    > test.out 2>&1
eval_tap $? 148 'ListExtOrderNoByExtTxId' test.out

#- 149 GetPaymentOrder
$CLI_EXE \
    --sn platform \
    --op GetPaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo '6zWZGBpl' \
    > test.out 2>&1
eval_tap $? 149 'GetPaymentOrder' test.out

#- 150 ChargePaymentOrder
# body param: body
echo '{"extTxId": "kfbDN84g", "paymentMethod": "2tWh6eeF", "paymentProvider": "ADYEN"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ChargePaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'ZMIiNCU2' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 150 'ChargePaymentOrder' test.out

#- 151 RefundPaymentOrderByDedicated
# body param: body
echo '{"description": "ekE3ntCd"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RefundPaymentOrderByDedicated \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo '1sEY9FtE' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 151 'RefundPaymentOrderByDedicated' test.out

#- 152 SimulatePaymentOrderNotification
# body param: body
echo '{"amount": 53, "currencyCode": "fXY03JWY", "notifyType": "REFUND", "paymentProvider": "STRIPE", "salesTax": 16, "vat": 89}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SimulatePaymentOrderNotification \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'c9xo3eRE' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 152 'SimulatePaymentOrderNotification' test.out

#- 153 GetPaymentOrderChargeStatus
$CLI_EXE \
    --sn platform \
    --op GetPaymentOrderChargeStatus \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'GNm2vewF' \
    > test.out 2>&1
eval_tap $? 153 'GetPaymentOrderChargeStatus' test.out

#- 154 GetPlatformWalletConfig
$CLI_EXE \
    --sn platform \
    --op GetPlatformWalletConfig \
    --namespace $AB_NAMESPACE \
    --platform 'Steam' \
    > test.out 2>&1
eval_tap $? 154 'GetPlatformWalletConfig' test.out

#- 155 UpdatePlatformWalletConfig
# body param: body
echo '{"allowedBalanceOrigins": ["Xbox", "Oculus", "Epic"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePlatformWalletConfig \
    --namespace $AB_NAMESPACE \
    --platform 'Xbox' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 155 'UpdatePlatformWalletConfig' test.out

#- 156 ResetPlatformWalletConfig
$CLI_EXE \
    --sn platform \
    --op ResetPlatformWalletConfig \
    --namespace $AB_NAMESPACE \
    --platform 'Epic' \
    > test.out 2>&1
eval_tap $? 156 'ResetPlatformWalletConfig' test.out

#- 157 GetRevocationConfig
$CLI_EXE \
    --sn platform \
    --op GetRevocationConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 157 'GetRevocationConfig' test.out

#- 158 UpdateRevocationConfig
# body param: body
echo '{"entitlement": {"consumable": {"enabled": true, "strategy": "REVOKE_OR_REPORT"}, "durable": {"enabled": false, "strategy": "CUSTOM"}}, "wallet": {"enabled": true, "strategy": "REVOKE_OR_REPORT"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateRevocationConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 158 'UpdateRevocationConfig' test.out

#- 159 DeleteRevocationConfig
$CLI_EXE \
    --sn platform \
    --op DeleteRevocationConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 159 'DeleteRevocationConfig' test.out

#- 160 QueryRevocationHistories
$CLI_EXE \
    --sn platform \
    --op QueryRevocationHistories \
    --namespace $AB_NAMESPACE \
    --endTime 'IVYzYB5M' \
    --limit '23' \
    --offset '28' \
    --source 'IAP' \
    --startTime 'AU1Uj0EO' \
    --status 'FAIL' \
    --transactionId 'nFSyS1aE' \
    --userId 'k4kEVTpl' \
    > test.out 2>&1
eval_tap $? 160 'QueryRevocationHistories' test.out

#- 161 GetRevocationPluginConfig
$CLI_EXE \
    --sn platform \
    --op GetRevocationPluginConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 161 'GetRevocationPluginConfig' test.out

#- 162 UpdateRevocationPluginConfig
# body param: body
echo '{"appConfig": {"appName": "MrP5oS8s"}, "customConfig": {"connectionType": "INSECURE", "grpcServerAddress": "mrn1GFeZ"}, "extendType": "CUSTOM"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateRevocationPluginConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 162 'UpdateRevocationPluginConfig' test.out

#- 163 DeleteRevocationPluginConfig
$CLI_EXE \
    --sn platform \
    --op DeleteRevocationPluginConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 163 'DeleteRevocationPluginConfig' test.out

#- 164 UploadRevocationPluginConfigCert
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UploadRevocationPluginConfigCert \
    --namespace $AB_NAMESPACE \
    --upload $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 164 'UploadRevocationPluginConfigCert' test.out

#- 165 CreateReward
# body param: body
echo '{"description": "YtZBAIWj", "eventTopic": "5BDeZmiq", "maxAwarded": 52, "maxAwardedPerUser": 70, "namespaceExpression": "wBZ7K8jJ", "rewardCode": "fRt6f8BK", "rewardConditions": [{"condition": "R5Lj4qOd", "conditionName": "tgpYBuCB", "eventName": "Ju9yDAyg", "rewardItems": [{"duration": 40, "endDate": "1997-10-19T00:00:00Z", "itemId": "9AHe6Atd", "quantity": 84}, {"duration": 32, "endDate": "1984-04-27T00:00:00Z", "itemId": "eyWqvWtg", "quantity": 87}, {"duration": 34, "endDate": "1984-12-22T00:00:00Z", "itemId": "1zs9IT2r", "quantity": 28}]}, {"condition": "lOa7uZ0x", "conditionName": "FVp7Dywf", "eventName": "TD9RGSCb", "rewardItems": [{"duration": 79, "endDate": "1976-09-11T00:00:00Z", "itemId": "JAHXrF2i", "quantity": 29}, {"duration": 25, "endDate": "1976-08-20T00:00:00Z", "itemId": "4Sc9HQk7", "quantity": 92}, {"duration": 12, "endDate": "1977-01-04T00:00:00Z", "itemId": "WXz6B8pd", "quantity": 68}]}, {"condition": "7ZBUjwFS", "conditionName": "tufruRzx", "eventName": "1ggxtvGv", "rewardItems": [{"duration": 90, "endDate": "1999-02-01T00:00:00Z", "itemId": "iHfnzbMF", "quantity": 50}, {"duration": 87, "endDate": "1995-04-30T00:00:00Z", "itemId": "VNqxPiCW", "quantity": 18}, {"duration": 21, "endDate": "1973-12-03T00:00:00Z", "itemId": "qWdkHVmC", "quantity": 57}]}], "userIdExpression": "rUNqnD2b"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateReward \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 165 'CreateReward' test.out

#- 166 QueryRewards
$CLI_EXE \
    --sn platform \
    --op QueryRewards \
    --namespace $AB_NAMESPACE \
    --eventTopic '6T4suTsj' \
    --limit '86' \
    --offset '43' \
    --sortBy '["rewardCode:asc", "namespace"]' \
    > test.out 2>&1
eval_tap $? 166 'QueryRewards' test.out

#- 167 ExportRewards
$CLI_EXE \
    --sn platform \
    --op ExportRewards \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 167 'ExportRewards' test.out

#- 168 ImportRewards
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op ImportRewards \
    --namespace $AB_NAMESPACE \
    --replaceExisting 'true' \
    --upload $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 168 'ImportRewards' test.out

#- 169 GetReward
$CLI_EXE \
    --sn platform \
    --op GetReward \
    --namespace $AB_NAMESPACE \
    --rewardId 'dJSkmayp' \
    > test.out 2>&1
eval_tap $? 169 'GetReward' test.out

#- 170 UpdateReward
# body param: body
echo '{"description": "gb7u6RhY", "eventTopic": "CJMb08Eg", "maxAwarded": 11, "maxAwardedPerUser": 15, "namespaceExpression": "yo4bswfR", "rewardCode": "ZfKE595V", "rewardConditions": [{"condition": "nMoWsxUF", "conditionName": "oYUmsWnd", "eventName": "IutquhI9", "rewardItems": [{"duration": 15, "endDate": "1992-03-29T00:00:00Z", "itemId": "eWYCF59C", "quantity": 78}, {"duration": 92, "endDate": "1987-03-10T00:00:00Z", "itemId": "OdSDLjxf", "quantity": 5}, {"duration": 75, "endDate": "1993-08-25T00:00:00Z", "itemId": "YbzTRxde", "quantity": 68}]}, {"condition": "7bxgTGAJ", "conditionName": "BduehgUN", "eventName": "3o9mFckR", "rewardItems": [{"duration": 38, "endDate": "1977-06-25T00:00:00Z", "itemId": "N4cwYhdR", "quantity": 84}, {"duration": 97, "endDate": "1982-10-02T00:00:00Z", "itemId": "06rexV6d", "quantity": 57}, {"duration": 83, "endDate": "1989-07-06T00:00:00Z", "itemId": "zVu4pBjL", "quantity": 21}]}, {"condition": "nFzWPyC7", "conditionName": "Nl3zB05t", "eventName": "0OvAdXC2", "rewardItems": [{"duration": 72, "endDate": "1982-11-05T00:00:00Z", "itemId": "m26YUtPS", "quantity": 2}, {"duration": 5, "endDate": "1998-08-24T00:00:00Z", "itemId": "uZyGoTTJ", "quantity": 1}, {"duration": 22, "endDate": "1998-06-10T00:00:00Z", "itemId": "jHqyvKfE", "quantity": 4}]}], "userIdExpression": "P6KBRdje"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateReward \
    --namespace $AB_NAMESPACE \
    --rewardId '5uWJ61Uz' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 170 'UpdateReward' test.out

#- 171 DeleteReward
$CLI_EXE \
    --sn platform \
    --op DeleteReward \
    --namespace $AB_NAMESPACE \
    --rewardId 'seCBmehD' \
    > test.out 2>&1
eval_tap $? 171 'DeleteReward' test.out

#- 172 CheckEventCondition
# body param: body
echo '{"payload": {"tIUFKSms": {}, "8Vb51Nn1": {}, "zpIZxuiJ": {}}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CheckEventCondition \
    --namespace $AB_NAMESPACE \
    --rewardId 'XZqRqHkQ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 172 'CheckEventCondition' test.out

#- 173 DeleteRewardConditionRecord
# body param: body
echo '{"conditionName": "XTBRiT8u", "userId": "jAoH6LVU"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op DeleteRewardConditionRecord \
    --namespace $AB_NAMESPACE \
    --rewardId 'S5Km77bO' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 173 'DeleteRewardConditionRecord' test.out

#- 174 QuerySections
$CLI_EXE \
    --sn platform \
    --op QuerySections \
    --namespace $AB_NAMESPACE \
    --end 'UFfQTUXV' \
    --limit '15' \
    --offset '72' \
    --start 'W5C8PEJZ' \
    --storeId 'cejelMF4' \
    --viewId 'AI9SLVEv' \
    > test.out 2>&1
eval_tap $? 174 'QuerySections' test.out

#- 175 CreateSection
# body param: body
echo '{"active": true, "displayOrder": 81, "endDate": "1974-08-30T00:00:00Z", "ext": {"YYV3BX9I": {}, "O3Di9zaR": {}, "6C5ywA4t": {}}, "fixedPeriodRotationConfig": {"backfillType": "CUSTOM", "duration": 82, "itemCount": 54, "rule": "SEQUENCE"}, "items": [{"id": "hy26ofsM", "sku": "iACrJqCS"}, {"id": "CRvnI9Am", "sku": "w8A6kMgh"}, {"id": "O7pbrFsN", "sku": "a53Qro7y"}], "localizations": {"cb8S7Nz7": {"description": "sNwBtKDO", "localExt": {"zgrT0xSt": {}, "1TQPKkr7": {}, "cyMHTOwg": {}}, "longDescription": "8EPh5ndW", "title": "sZwjedrb"}, "naRlwt9y": {"description": "NfHRSz3X", "localExt": {"TPGlYAv4": {}, "QgBO9UAm": {}, "0MutPa3S": {}}, "longDescription": "3gUGyZVi", "title": "q8jQHH1C"}, "uh95qip2": {"description": "cBYwk3DP", "localExt": {"K8tP6JLu": {}, "AroDDPsk": {}, "CVi4NXWU": {}}, "longDescription": "5NVWDJXh", "title": "am7rFJ2c"}}, "name": "oSo7T1PS", "rotationType": "FIXED_PERIOD", "startDate": "1980-03-08T00:00:00Z", "viewId": "bfAJKMR4"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateSection \
    --namespace $AB_NAMESPACE \
    --storeId '0Q7vTfEx' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 175 'CreateSection' test.out

#- 176 PurgeExpiredSection
$CLI_EXE \
    --sn platform \
    --op PurgeExpiredSection \
    --namespace $AB_NAMESPACE \
    --storeId 'jtABlBYc' \
    > test.out 2>&1
eval_tap $? 176 'PurgeExpiredSection' test.out

#- 177 GetSection
$CLI_EXE \
    --sn platform \
    --op GetSection \
    --namespace $AB_NAMESPACE \
    --sectionId 'PJtXuoBT' \
    --storeId 'ZDFrLyHm' \
    > test.out 2>&1
eval_tap $? 177 'GetSection' test.out

#- 178 UpdateSection
# body param: body
echo '{"active": true, "displayOrder": 59, "endDate": "1993-06-29T00:00:00Z", "ext": {"IhqxSavG": {}, "kwckFIpv": {}, "2b4M6ENd": {}}, "fixedPeriodRotationConfig": {"backfillType": "CUSTOM", "duration": 91, "itemCount": 54, "rule": "SEQUENCE"}, "items": [{"id": "fvmTULDS", "sku": "AMJgKncU"}, {"id": "XV5gZ8Vf", "sku": "nwwaXCRH"}, {"id": "X7gn2zLS", "sku": "haKVy2fN"}], "localizations": {"pyIy6F2i": {"description": "ZQjXGucQ", "localExt": {"AzN0z428": {}, "Vd4KAtpb": {}, "xFlHAdnL": {}}, "longDescription": "s276faa2", "title": "8Q3VjEwx"}, "Pn5PIUL9": {"description": "7XiLjDUL", "localExt": {"O61OFnF3": {}, "SlAV3IAd": {}, "ZWa6cCUl": {}}, "longDescription": "4TMhrwbu", "title": "9bkXOylT"}, "BPrSbwDX": {"description": "c12igu9B", "localExt": {"uNx7y9uW": {}, "8hKHhs6B": {}, "mYuMieC9": {}}, "longDescription": "B0R2L1gJ", "title": "sXHjaLrO"}}, "name": "kyjaqfKf", "rotationType": "NONE", "startDate": "1983-09-29T00:00:00Z", "viewId": "CqAJ6cih"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateSection \
    --namespace $AB_NAMESPACE \
    --sectionId '6XJK0tkq' \
    --storeId 'YK5ad0Wy' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 178 'UpdateSection' test.out

#- 179 DeleteSection
$CLI_EXE \
    --sn platform \
    --op DeleteSection \
    --namespace $AB_NAMESPACE \
    --sectionId 'cE5ra5Fc' \
    --storeId 'UeLQ3Zz8' \
    > test.out 2>&1
eval_tap $? 179 'DeleteSection' test.out

#- 180 ListStores
$CLI_EXE \
    --sn platform \
    --op ListStores \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 180 'ListStores' test.out

#- 181 CreateStore
# body param: body
echo '{"defaultLanguage": "5K72mrrx", "defaultRegion": "EIC7qATb", "description": "l2CM4nMg", "supportedLanguages": ["lPjkecHT", "CED3TIV3", "3FGEb4EM"], "supportedRegions": ["k4QanCtA", "pw9yvWEA", "DhyA7LdB"], "title": "3zeGRXcF"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateStore \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 181 'CreateStore' test.out

#- 182 ImportStore
eval_tap 0 182 'ImportStore # SKIP deprecated' test.out

#- 183 GetPublishedStore
$CLI_EXE \
    --sn platform \
    --op GetPublishedStore \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 183 'GetPublishedStore' test.out

#- 184 DeletePublishedStore
$CLI_EXE \
    --sn platform \
    --op DeletePublishedStore \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 184 'DeletePublishedStore' test.out

#- 185 GetPublishedStoreBackup
$CLI_EXE \
    --sn platform \
    --op GetPublishedStoreBackup \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 185 'GetPublishedStoreBackup' test.out

#- 186 RollbackPublishedStore
$CLI_EXE \
    --sn platform \
    --op RollbackPublishedStore \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 186 'RollbackPublishedStore' test.out

#- 187 GetStore
$CLI_EXE \
    --sn platform \
    --op GetStore \
    --namespace $AB_NAMESPACE \
    --storeId 'ntYRgvKB' \
    > test.out 2>&1
eval_tap $? 187 'GetStore' test.out

#- 188 UpdateStore
# body param: body
echo '{"defaultLanguage": "dPUJdLYp", "defaultRegion": "nglte5ZZ", "description": "dC61N4o0", "supportedLanguages": ["MO5JBx6t", "89J0WR7b", "KQ1tC0Uh"], "supportedRegions": ["ulVBjBQ2", "5IuGTQmf", "ERtbEmC1"], "title": "jGVGrOLu"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateStore \
    --namespace $AB_NAMESPACE \
    --storeId 'ONJkM70s' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 188 'UpdateStore' test.out

#- 189 DeleteStore
$CLI_EXE \
    --sn platform \
    --op DeleteStore \
    --namespace $AB_NAMESPACE \
    --storeId 'p5vTXVVB' \
    > test.out 2>&1
eval_tap $? 189 'DeleteStore' test.out

#- 190 QueryChanges
$CLI_EXE \
    --sn platform \
    --op QueryChanges \
    --namespace $AB_NAMESPACE \
    --storeId 'anVOUEra' \
    --action 'DELETE' \
    --itemSku '7bgFnsTv' \
    --itemType 'CODE' \
    --limit '5' \
    --offset '78' \
    --selected 'true' \
    --sortBy '["createdAt", "updatedAt:desc", "updatedAt:asc"]' \
    --status 'PUBLISHED' \
    --type 'CATEGORY' \
    --updatedAtEnd 'IV8zGfIl' \
    --updatedAtStart '8oWT2fpk' \
    --withTotal 'true' \
    > test.out 2>&1
eval_tap $? 190 'QueryChanges' test.out

#- 191 PublishAll
$CLI_EXE \
    --sn platform \
    --op PublishAll \
    --namespace $AB_NAMESPACE \
    --storeId 'TC7hquXd' \
    > test.out 2>&1
eval_tap $? 191 'PublishAll' test.out

#- 192 PublishSelected
$CLI_EXE \
    --sn platform \
    --op PublishSelected \
    --namespace $AB_NAMESPACE \
    --storeId 'q4kwzbDG' \
    > test.out 2>&1
eval_tap $? 192 'PublishSelected' test.out

#- 193 SelectAllRecords
$CLI_EXE \
    --sn platform \
    --op SelectAllRecords \
    --namespace $AB_NAMESPACE \
    --storeId 'vHghedhq' \
    > test.out 2>&1
eval_tap $? 193 'SelectAllRecords' test.out

#- 194 SelectAllRecordsByCriteria
$CLI_EXE \
    --sn platform \
    --op SelectAllRecordsByCriteria \
    --namespace $AB_NAMESPACE \
    --storeId 'NyIh0ExY' \
    --action 'DELETE' \
    --itemSku 'bUPIxQXl' \
    --itemType 'OPTIONBOX' \
    --selected 'false' \
    --type 'ITEM' \
    --updatedAtEnd 'jfEU3IWs' \
    --updatedAtStart 'r2jdetc6' \
    > test.out 2>&1
eval_tap $? 194 'SelectAllRecordsByCriteria' test.out

#- 195 GetStatistic
$CLI_EXE \
    --sn platform \
    --op GetStatistic \
    --namespace $AB_NAMESPACE \
    --storeId 'sJ4UwHl8' \
    --action 'DELETE' \
    --itemSku 'QfGm08qK' \
    --itemType 'EXTENSION' \
    --type 'SECTION' \
    --updatedAtEnd 'uPFmr6UK' \
    --updatedAtStart 'aZq12l8W' \
    > test.out 2>&1
eval_tap $? 195 'GetStatistic' test.out

#- 196 UnselectAllRecords
$CLI_EXE \
    --sn platform \
    --op UnselectAllRecords \
    --namespace $AB_NAMESPACE \
    --storeId 'MVYvT8q6' \
    > test.out 2>&1
eval_tap $? 196 'UnselectAllRecords' test.out

#- 197 SelectRecord
$CLI_EXE \
    --sn platform \
    --op SelectRecord \
    --changeId 'MGNrsus1' \
    --namespace $AB_NAMESPACE \
    --storeId 'WEUgy5pD' \
    > test.out 2>&1
eval_tap $? 197 'SelectRecord' test.out

#- 198 UnselectRecord
$CLI_EXE \
    --sn platform \
    --op UnselectRecord \
    --changeId 'z3fu0NL0' \
    --namespace $AB_NAMESPACE \
    --storeId 'VuolMvUq' \
    > test.out 2>&1
eval_tap $? 198 'UnselectRecord' test.out

#- 199 CloneStore
$CLI_EXE \
    --sn platform \
    --op CloneStore \
    --namespace $AB_NAMESPACE \
    --storeId 'nYoPQIZi' \
    --targetStoreId 'J2bANK36' \
    > test.out 2>&1
eval_tap $? 199 'CloneStore' test.out

#- 200 ExportStore
eval_tap 0 200 'ExportStore # SKIP deprecated' test.out

#- 201 QuerySubscriptions
$CLI_EXE \
    --sn platform \
    --op QuerySubscriptions \
    --namespace $AB_NAMESPACE \
    --chargeStatus 'CHARGE_FAILED' \
    --itemId 'zl7m8bWo' \
    --limit '69' \
    --offset '57' \
    --sku 'qRLEYYxF' \
    --status 'ACTIVE' \
    --subscribedBy 'PLATFORM' \
    --userId '61CBSfPH' \
    > test.out 2>&1
eval_tap $? 201 'QuerySubscriptions' test.out

#- 202 RecurringChargeSubscription
$CLI_EXE \
    --sn platform \
    --op RecurringChargeSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'I4cFufxc' \
    > test.out 2>&1
eval_tap $? 202 'RecurringChargeSubscription' test.out

#- 203 GetTicketDynamic
$CLI_EXE \
    --sn platform \
    --op GetTicketDynamic \
    --boothName '8Duu1wBG' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 203 'GetTicketDynamic' test.out

#- 204 DecreaseTicketSale
# body param: body
echo '{"orderNo": "vya305eJ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op DecreaseTicketSale \
    --boothName '0hAH3Vpm' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 204 'DecreaseTicketSale' test.out

#- 205 GetTicketBoothID
$CLI_EXE \
    --sn platform \
    --op GetTicketBoothID \
    --boothName 'bDhL9H2Z' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 205 'GetTicketBoothID' test.out

#- 206 IncreaseTicketSale
# body param: body
echo '{"count": 54, "orderNo": "VxiKkVZf"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op IncreaseTicketSale \
    --boothName '3h5NxnPH' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 206 'IncreaseTicketSale' test.out

#- 207 Commit
# body param: body
echo '{"actions": [{"operations": [{"creditPayload": {"balanceOrigin": "Steam", "count": 26, "currencyCode": "B1ZE58Ts", "expireAt": "1974-09-07T00:00:00Z"}, "debitPayload": {"count": 73, "currencyCode": "7qX2z0ht", "walletPlatform": "Nintendo"}, "fulFillItemPayload": {"count": 48, "itemIdentity": "Yeq2aCQG", "itemIdentityType": "ITEM_SKU"}, "revokeEntitlementPayload": {"count": 44, "entitlementId": "Zb1sy9Yj"}, "type": "CREDIT_WALLET"}, {"creditPayload": {"balanceOrigin": "Steam", "count": 8, "currencyCode": "uYS4clJF", "expireAt": "1987-12-20T00:00:00Z"}, "debitPayload": {"count": 47, "currencyCode": "XI8kIhlu", "walletPlatform": "Oculus"}, "fulFillItemPayload": {"count": 42, "itemIdentity": "ImS9aC33", "itemIdentityType": "ITEM_ID"}, "revokeEntitlementPayload": {"count": 7, "entitlementId": "uaL5rsxw"}, "type": "DEBIT_WALLET"}, {"creditPayload": {"balanceOrigin": "GooglePlay", "count": 34, "currencyCode": "yWq07YX2", "expireAt": "1996-07-09T00:00:00Z"}, "debitPayload": {"count": 41, "currencyCode": "fY9D4bLG", "walletPlatform": "Other"}, "fulFillItemPayload": {"count": 59, "itemIdentity": "qQuaFZfA", "itemIdentityType": "ITEM_SKU"}, "revokeEntitlementPayload": {"count": 7, "entitlementId": "8xT0uOxV"}, "type": "FULFILL_ITEM"}], "userId": "zqNRNyjO"}, {"operations": [{"creditPayload": {"balanceOrigin": "GooglePlay", "count": 47, "currencyCode": "fyYq5bVS", "expireAt": "1978-07-16T00:00:00Z"}, "debitPayload": {"count": 99, "currencyCode": "fU7bHu3j", "walletPlatform": "Other"}, "fulFillItemPayload": {"count": 81, "itemIdentity": "zJNFo8Rg", "itemIdentityType": "ITEM_SKU"}, "revokeEntitlementPayload": {"count": 48, "entitlementId": "I9FpnvAi"}, "type": "FULFILL_ITEM"}, {"creditPayload": {"balanceOrigin": "GooglePlay", "count": 37, "currencyCode": "j8JPGTlX", "expireAt": "1993-09-03T00:00:00Z"}, "debitPayload": {"count": 33, "currencyCode": "wgs4n87U", "walletPlatform": "Other"}, "fulFillItemPayload": {"count": 29, "itemIdentity": "8imkZPBC", "itemIdentityType": "ITEM_ID"}, "revokeEntitlementPayload": {"count": 5, "entitlementId": "Y4rU1BVr"}, "type": "FULFILL_ITEM"}, {"creditPayload": {"balanceOrigin": "Nintendo", "count": 19, "currencyCode": "hrvBKK5n", "expireAt": "1979-11-18T00:00:00Z"}, "debitPayload": {"count": 80, "currencyCode": "OTn5VywP", "walletPlatform": "Steam"}, "fulFillItemPayload": {"count": 75, "itemIdentity": "kJNEWU2D", "itemIdentityType": "ITEM_SKU"}, "revokeEntitlementPayload": {"count": 69, "entitlementId": "FR88wpp5"}, "type": "REVOKE_ENTITLEMENT"}], "userId": "oT5zScuG"}, {"operations": [{"creditPayload": {"balanceOrigin": "Other", "count": 80, "currencyCode": "uOyH37er", "expireAt": "1995-06-19T00:00:00Z"}, "debitPayload": {"count": 32, "currencyCode": "ZISt6Yyw", "walletPlatform": "Other"}, "fulFillItemPayload": {"count": 79, "itemIdentity": "VC5poZqS", "itemIdentityType": "ITEM_ID"}, "revokeEntitlementPayload": {"count": 65, "entitlementId": "AFkWTjwa"}, "type": "FULFILL_ITEM"}, {"creditPayload": {"balanceOrigin": "Epic", "count": 35, "currencyCode": "QXMVaCw5", "expireAt": "1981-06-17T00:00:00Z"}, "debitPayload": {"count": 8, "currencyCode": "LqK33sbT", "walletPlatform": "Playstation"}, "fulFillItemPayload": {"count": 4, "itemIdentity": "4Q8jGBFe", "itemIdentityType": "ITEM_SKU"}, "revokeEntitlementPayload": {"count": 75, "entitlementId": "7um5AJwQ"}, "type": "DEBIT_WALLET"}, {"creditPayload": {"balanceOrigin": "Oculus", "count": 30, "currencyCode": "2pohnDDk", "expireAt": "1979-12-14T00:00:00Z"}, "debitPayload": {"count": 45, "currencyCode": "3uAvhLsn", "walletPlatform": "GooglePlay"}, "fulFillItemPayload": {"count": 4, "itemIdentity": "zNXA3sBm", "itemIdentityType": "ITEM_SKU"}, "revokeEntitlementPayload": {"count": 24, "entitlementId": "vlGS8Sjc"}, "type": "REVOKE_ENTITLEMENT"}], "userId": "94n4PYWi"}], "metadata": {"v5K02zUg": {}, "xHeYd9CJ": {}, "I70keQFG": {}}, "needPreCheck": true, "transactionId": "awFIDlRG", "type": "fAaAQQuF"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op Commit \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 207 'Commit' test.out

#- 208 GetTradeHistoryByCriteria
$CLI_EXE \
    --sn platform \
    --op GetTradeHistoryByCriteria \
    --namespace $AB_NAMESPACE \
    --limit '36' \
    --offset '6' \
    --status 'SUCCESS' \
    --type '6XofRXuM' \
    --userId 'haED1mkU' \
    > test.out 2>&1
eval_tap $? 208 'GetTradeHistoryByCriteria' test.out

#- 209 GetTradeHistoryByTransactionId
$CLI_EXE \
    --sn platform \
    --op GetTradeHistoryByTransactionId \
    --namespace $AB_NAMESPACE \
    --transactionId 'UhkJAP3Z' \
    > test.out 2>&1
eval_tap $? 209 'GetTradeHistoryByTransactionId' test.out

#- 210 UnlockSteamUserAchievement
# body param: body
echo '{"achievements": [{"id": "9EcENGe6", "value": 48}, {"id": "Jq4CK1rM", "value": 17}, {"id": "ulOcIEyr", "value": 65}], "steamUserId": "iBUIaOgF"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UnlockSteamUserAchievement \
    --namespace $AB_NAMESPACE \
    --userId 'qSYZ8Pon' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 210 'UnlockSteamUserAchievement' test.out

#- 211 GetXblUserAchievements
$CLI_EXE \
    --sn platform \
    --op GetXblUserAchievements \
    --namespace $AB_NAMESPACE \
    --userId 'CepzElrD' \
    --xboxUserId 'UUYMZS8Z' \
    > test.out 2>&1
eval_tap $? 211 'GetXblUserAchievements' test.out

#- 212 UpdateXblUserAchievement
# body param: body
echo '{"achievements": [{"id": "hz6xT1TC", "percentComplete": 81}, {"id": "LduAvyXx", "percentComplete": 0}, {"id": "Zz7zvMhm", "percentComplete": 85}], "serviceConfigId": "wC3qgR9s", "titleId": "bCTyCCcr", "xboxUserId": "YlRMfC2F"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXblUserAchievement \
    --namespace $AB_NAMESPACE \
    --userId 'kYwG3sqm' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 212 'UpdateXblUserAchievement' test.out

#- 213 AnonymizeCampaign
$CLI_EXE \
    --sn platform \
    --op AnonymizeCampaign \
    --namespace $AB_NAMESPACE \
    --userId 'x14zSobw' \
    > test.out 2>&1
eval_tap $? 213 'AnonymizeCampaign' test.out

#- 214 AnonymizeEntitlement
$CLI_EXE \
    --sn platform \
    --op AnonymizeEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'gXoo16F1' \
    > test.out 2>&1
eval_tap $? 214 'AnonymizeEntitlement' test.out

#- 215 AnonymizeFulfillment
$CLI_EXE \
    --sn platform \
    --op AnonymizeFulfillment \
    --namespace $AB_NAMESPACE \
    --userId 'mDrc9Soa' \
    > test.out 2>&1
eval_tap $? 215 'AnonymizeFulfillment' test.out

#- 216 AnonymizeIntegration
$CLI_EXE \
    --sn platform \
    --op AnonymizeIntegration \
    --namespace $AB_NAMESPACE \
    --userId 'jtYKw6rb' \
    > test.out 2>&1
eval_tap $? 216 'AnonymizeIntegration' test.out

#- 217 AnonymizeOrder
$CLI_EXE \
    --sn platform \
    --op AnonymizeOrder \
    --namespace $AB_NAMESPACE \
    --userId '76Q1Btn5' \
    > test.out 2>&1
eval_tap $? 217 'AnonymizeOrder' test.out

#- 218 AnonymizePayment
$CLI_EXE \
    --sn platform \
    --op AnonymizePayment \
    --namespace $AB_NAMESPACE \
    --userId '0nZhzJIp' \
    > test.out 2>&1
eval_tap $? 218 'AnonymizePayment' test.out

#- 219 AnonymizeRevocation
$CLI_EXE \
    --sn platform \
    --op AnonymizeRevocation \
    --namespace $AB_NAMESPACE \
    --userId 'RqMrMJ9w' \
    > test.out 2>&1
eval_tap $? 219 'AnonymizeRevocation' test.out

#- 220 AnonymizeSubscription
$CLI_EXE \
    --sn platform \
    --op AnonymizeSubscription \
    --namespace $AB_NAMESPACE \
    --userId 'mSpsyMkG' \
    > test.out 2>&1
eval_tap $? 220 'AnonymizeSubscription' test.out

#- 221 AnonymizeWallet
$CLI_EXE \
    --sn platform \
    --op AnonymizeWallet \
    --namespace $AB_NAMESPACE \
    --userId '6GgypRDF' \
    > test.out 2>&1
eval_tap $? 221 'AnonymizeWallet' test.out

#- 222 GetUserDLCByPlatform
$CLI_EXE \
    --sn platform \
    --op GetUserDLCByPlatform \
    --namespace $AB_NAMESPACE \
    --userId 'Bizh6WFN' \
    --type 'EPICGAMES' \
    > test.out 2>&1
eval_tap $? 222 'GetUserDLCByPlatform' test.out

#- 223 GetUserDLC
$CLI_EXE \
    --sn platform \
    --op GetUserDLC \
    --namespace $AB_NAMESPACE \
    --userId 'wpngEJFh' \
    --type 'EPICGAMES' \
    > test.out 2>&1
eval_tap $? 223 'GetUserDLC' test.out

#- 224 QueryUserEntitlements
$CLI_EXE \
    --sn platform \
    --op QueryUserEntitlements \
    --namespace $AB_NAMESPACE \
    --userId '27fWLrOD' \
    --activeOnly 'false' \
    --appType 'DLC' \
    --entitlementClazz 'OPTIONBOX' \
    --entitlementName 'qUBN8zCI' \
    --features '["a9eVRTGj", "Zh39TO15", "JlAmcUPL"]' \
    --itemId '["tNSwg6n8", "fiqSbH4q", "nbZxI9zF"]' \
    --limit '7' \
    --offset '20' \
    > test.out 2>&1
eval_tap $? 224 'QueryUserEntitlements' test.out

#- 225 GrantUserEntitlement
# body param: body
echo '[{"endDate": "1977-11-30T00:00:00Z", "grantedCode": "zDc0Xcdc", "itemId": "GW7iiDJE", "itemNamespace": "LCmtCz0G", "language": "PQm-vE", "quantity": 10, "region": "H6QWL256", "source": "IAP", "startDate": "1990-08-01T00:00:00Z", "storeId": "kb2Ikz43"}, {"endDate": "1984-05-07T00:00:00Z", "grantedCode": "xHvJsbpX", "itemId": "qWDCctIP", "itemNamespace": "sEilCj96", "language": "uz", "quantity": 25, "region": "lp75WBL6", "source": "PROMOTION", "startDate": "1979-01-11T00:00:00Z", "storeId": "El2DPYMl"}, {"endDate": "1987-09-20T00:00:00Z", "grantedCode": "JmHc8AaL", "itemId": "0nYOyqEv", "itemNamespace": "MTYfW0EL", "language": "Rv", "quantity": 4, "region": "196eER5H", "source": "ACHIEVEMENT", "startDate": "1972-04-25T00:00:00Z", "storeId": "Jcq8Ugic"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op GrantUserEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'XD9WOPwj' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 225 'GrantUserEntitlement' test.out

#- 226 GetUserAppEntitlementByAppId
$CLI_EXE \
    --sn platform \
    --op GetUserAppEntitlementByAppId \
    --namespace $AB_NAMESPACE \
    --userId 'SU33WLES' \
    --activeOnly 'false' \
    --appId 'LWwfwW0J' \
    > test.out 2>&1
eval_tap $? 226 'GetUserAppEntitlementByAppId' test.out

#- 227 QueryUserEntitlementsByAppType
$CLI_EXE \
    --sn platform \
    --op QueryUserEntitlementsByAppType \
    --namespace $AB_NAMESPACE \
    --userId 'KC7j6rlR' \
    --activeOnly 'true' \
    --limit '75' \
    --offset '98' \
    --appType 'SOFTWARE' \
    > test.out 2>&1
eval_tap $? 227 'QueryUserEntitlementsByAppType' test.out

#- 228 GetUserEntitlementByItemId
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'awoglJlo' \
    --activeOnly 'true' \
    --entitlementClazz 'OPTIONBOX' \
    --itemId '94Ly5yjL' \
    > test.out 2>&1
eval_tap $? 228 'GetUserEntitlementByItemId' test.out

#- 229 GetUserActiveEntitlementsByItemIds
$CLI_EXE \
    --sn platform \
    --op GetUserActiveEntitlementsByItemIds \
    --namespace $AB_NAMESPACE \
    --userId 'HQVIkzBD' \
    --ids '["5g9cSM66", "ptUPjfuK", "B0Xhy28l"]' \
    > test.out 2>&1
eval_tap $? 229 'GetUserActiveEntitlementsByItemIds' test.out

#- 230 GetUserEntitlementBySku
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementBySku \
    --namespace $AB_NAMESPACE \
    --userId 'ysZ6dMrw' \
    --activeOnly 'true' \
    --entitlementClazz 'MEDIA' \
    --sku 'u6hvKL2D' \
    > test.out 2>&1
eval_tap $? 230 'GetUserEntitlementBySku' test.out

#- 231 ExistsAnyUserActiveEntitlement
$CLI_EXE \
    --sn platform \
    --op ExistsAnyUserActiveEntitlement \
    --namespace $AB_NAMESPACE \
    --userId '3HDFNfTT' \
    --appIds '["V8zB4vr6", "zZE29YU1", "TqQE5nmy"]' \
    --itemIds '["t8nXg8CD", "eZdNfcCf", "ELYIHBet"]' \
    --skus '["pTmh4jsr", "hTq6i1dM", "q9vVVR9i"]' \
    > test.out 2>&1
eval_tap $? 231 'ExistsAnyUserActiveEntitlement' test.out

#- 232 ExistsAnyUserActiveEntitlementByItemIds
$CLI_EXE \
    --sn platform \
    --op ExistsAnyUserActiveEntitlementByItemIds \
    --namespace $AB_NAMESPACE \
    --userId 'kPndsnGV' \
    --itemIds '["lYUQT575", "hfotqSQx", "eoSCcvbH"]' \
    > test.out 2>&1
eval_tap $? 232 'ExistsAnyUserActiveEntitlementByItemIds' test.out

#- 233 GetUserAppEntitlementOwnershipByAppId
$CLI_EXE \
    --sn platform \
    --op GetUserAppEntitlementOwnershipByAppId \
    --namespace $AB_NAMESPACE \
    --userId 'dAXKko9n' \
    --appId 'gfpqE4by' \
    > test.out 2>&1
eval_tap $? 233 'GetUserAppEntitlementOwnershipByAppId' test.out

#- 234 GetUserEntitlementOwnershipByItemId
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementOwnershipByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'uhOYeA6x' \
    --entitlementClazz 'SUBSCRIPTION' \
    --itemId '1A2P6xzD' \
    > test.out 2>&1
eval_tap $? 234 'GetUserEntitlementOwnershipByItemId' test.out

#- 235 GetUserEntitlementOwnershipByItemIds
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementOwnershipByItemIds \
    --namespace $AB_NAMESPACE \
    --userId 'a0nL26yW' \
    --ids '["FAtleqK4", "el6fYXMO", "lx5x4k6g"]' \
    > test.out 2>&1
eval_tap $? 235 'GetUserEntitlementOwnershipByItemIds' test.out

#- 236 GetUserEntitlementOwnershipBySku
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementOwnershipBySku \
    --namespace $AB_NAMESPACE \
    --userId 'BpUKbsTX' \
    --entitlementClazz 'OPTIONBOX' \
    --sku 'Y2GTXuX9' \
    > test.out 2>&1
eval_tap $? 236 'GetUserEntitlementOwnershipBySku' test.out

#- 237 RevokeAllEntitlements
$CLI_EXE \
    --sn platform \
    --op RevokeAllEntitlements \
    --namespace $AB_NAMESPACE \
    --userId 'g9RZU99A' \
    > test.out 2>&1
eval_tap $? 237 'RevokeAllEntitlements' test.out

#- 238 RevokeUserEntitlements
$CLI_EXE \
    --sn platform \
    --op RevokeUserEntitlements \
    --namespace $AB_NAMESPACE \
    --userId 'QYpVdXR0' \
    --entitlementIds 'zlsxRf18' \
    > test.out 2>&1
eval_tap $? 238 'RevokeUserEntitlements' test.out

#- 239 GetUserEntitlement
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlement \
    --entitlementId 'F4cwHVzB' \
    --namespace $AB_NAMESPACE \
    --userId 'vVl0EdWV' \
    > test.out 2>&1
eval_tap $? 239 'GetUserEntitlement' test.out

#- 240 UpdateUserEntitlement
# body param: body
echo '{"endDate": "1999-10-06T00:00:00Z", "nullFieldList": ["MSolUZgu", "Yh6G5ryS", "H0Jghks7"], "startDate": "1984-11-04T00:00:00Z", "status": "INACTIVE", "useCount": 1}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateUserEntitlement \
    --entitlementId 'ORcE9G7l' \
    --namespace $AB_NAMESPACE \
    --userId 'k7WhCrAS' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 240 'UpdateUserEntitlement' test.out

#- 241 ConsumeUserEntitlement
# body param: body
echo '{"options": ["z9BBXCvn", "vIemPpGO", "GkLhmJ6b"], "requestId": "6XY4CYMJ", "useCount": 58}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ConsumeUserEntitlement \
    --entitlementId 'Yp6dNq6m' \
    --namespace $AB_NAMESPACE \
    --userId 'AIWPtfro' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 241 'ConsumeUserEntitlement' test.out

#- 242 DisableUserEntitlement
$CLI_EXE \
    --sn platform \
    --op DisableUserEntitlement \
    --entitlementId '9DnoL7Ig' \
    --namespace $AB_NAMESPACE \
    --userId 'nJ3r1GOH' \
    > test.out 2>&1
eval_tap $? 242 'DisableUserEntitlement' test.out

#- 243 EnableUserEntitlement
$CLI_EXE \
    --sn platform \
    --op EnableUserEntitlement \
    --entitlementId 'idmzQ6c7' \
    --namespace $AB_NAMESPACE \
    --userId 'QZMaLuT3' \
    > test.out 2>&1
eval_tap $? 243 'EnableUserEntitlement' test.out

#- 244 GetUserEntitlementHistories
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementHistories \
    --entitlementId 'YWF8t3ZU' \
    --namespace $AB_NAMESPACE \
    --userId '0pvbnXMw' \
    > test.out 2>&1
eval_tap $? 244 'GetUserEntitlementHistories' test.out

#- 245 RevokeUserEntitlement
$CLI_EXE \
    --sn platform \
    --op RevokeUserEntitlement \
    --entitlementId 'gZnznfVL' \
    --namespace $AB_NAMESPACE \
    --userId 'Q2D42y1E' \
    > test.out 2>&1
eval_tap $? 245 'RevokeUserEntitlement' test.out

#- 246 RevokeUserEntitlementByUseCount
# body param: body
echo '{"reason": "0WySF6X8", "useCount": 81}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RevokeUserEntitlementByUseCount \
    --entitlementId 'bkibpKd1' \
    --namespace $AB_NAMESPACE \
    --userId 'Hd6PSOC6' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 246 'RevokeUserEntitlementByUseCount' test.out

#- 247 PreCheckRevokeUserEntitlementByUseCount
$CLI_EXE \
    --sn platform \
    --op PreCheckRevokeUserEntitlementByUseCount \
    --entitlementId 'AHByWbju' \
    --namespace $AB_NAMESPACE \
    --userId 'pu7mwk7L' \
    --quantity '16' \
    > test.out 2>&1
eval_tap $? 247 'PreCheckRevokeUserEntitlementByUseCount' test.out

#- 248 RevokeUseCount
eval_tap 0 248 'RevokeUseCount # SKIP deprecated' test.out

#- 249 SellUserEntitlement
# body param: body
echo '{"requestId": "9WdpHcOT", "useCount": 50}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SellUserEntitlement \
    --entitlementId 'Vc0UxxD7' \
    --namespace $AB_NAMESPACE \
    --userId 'EsJIOWeC' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 249 'SellUserEntitlement' test.out

#- 250 FulfillItem
# body param: body
echo '{"duration": 91, "endDate": "1984-06-13T00:00:00Z", "itemId": "84UcXxZW", "itemSku": "j07Y4znh", "language": "3JE8IG2t", "metadata": {"1QBvLCuO": {}, "RERvQUAw": {}, "3yM39RzT": {}}, "order": {"currency": {"currencyCode": "j63HidVU", "currencySymbol": "KLwq0YmM", "currencyType": "VIRTUAL", "decimals": 95, "namespace": "QIpfy7hY"}, "ext": {"bskSx3Ev": {}, "TCjuIy1W": {}, "iraJbPqa": {}}, "free": true}, "orderNo": "vAWiUcNb", "origin": "IOS", "overrideBundleItemQty": {"wtt6sO1w": 100, "uClhsFKL": 8, "Q7MDGRqI": 85}, "quantity": 17, "region": "rwV0djK4", "source": "IAP_CHARGEBACK_REVERSED", "startDate": "1995-05-16T00:00:00Z", "storeId": "9XiZ4IV9"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op FulfillItem \
    --namespace $AB_NAMESPACE \
    --userId '3syPqAup' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 250 'FulfillItem' test.out

#- 251 RedeemCode
# body param: body
echo '{"code": "UcelCTeb", "language": "aGSL-BajF-yA", "region": "Gog9eGXs"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RedeemCode \
    --namespace $AB_NAMESPACE \
    --userId 'qytzNpOR' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 251 'RedeemCode' test.out

#- 252 PreCheckFulfillItem
# body param: body
echo '{"itemId": "V9ZkFehX", "itemSku": "XKgd1DjS", "quantity": 59}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PreCheckFulfillItem \
    --namespace $AB_NAMESPACE \
    --userId '5ko00ha4' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 252 'PreCheckFulfillItem' test.out

#- 253 FulfillRewards
# body param: body
echo '{"metadata": {"nfJChuSR": {}, "lsRnH2Eq": {}, "bZmOUUuJ": {}}, "origin": "IOS", "rewards": [{"currency": {"currencyCode": "HSMirYDU", "namespace": "OTvZgVS4"}, "item": {"itemId": "t8xYBtWo", "itemSku": "tcfX4CvQ", "itemType": "v2U3gXZJ"}, "quantity": 12, "type": "CURRENCY"}, {"currency": {"currencyCode": "PwTrj7SF", "namespace": "U7wlFX9s"}, "item": {"itemId": "8ZBDq0Lz", "itemSku": "y6FTvMHe", "itemType": "7ofZ85Ed"}, "quantity": 64, "type": "CURRENCY"}, {"currency": {"currencyCode": "Jm2sLx1b", "namespace": "oaTh40NO"}, "item": {"itemId": "tbny1Qbb", "itemSku": "2CiTWvb8", "itemType": "YSGpomWE"}, "quantity": 36, "type": "ITEM"}], "source": "ORDER_REVOCATION", "transactionId": "1LPPtH0i"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op FulfillRewards \
    --namespace $AB_NAMESPACE \
    --userId '9S4BXipI' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 253 'FulfillRewards' test.out

#- 254 QueryUserIAPOrders
$CLI_EXE \
    --sn platform \
    --op QueryUserIAPOrders \
    --namespace $AB_NAMESPACE \
    --userId '3jqi48lp' \
    --endTime 'kdhyWNA6' \
    --limit '6' \
    --offset '92' \
    --productId '8gw4tFST' \
    --startTime 'hkOmGTc0' \
    --status 'FAILED' \
    --type 'OCULUS' \
    > test.out 2>&1
eval_tap $? 254 'QueryUserIAPOrders' test.out

#- 255 QueryAllUserIAPOrders
$CLI_EXE \
    --sn platform \
    --op QueryAllUserIAPOrders \
    --namespace $AB_NAMESPACE \
    --userId 'Htp9sMDR' \
    > test.out 2>&1
eval_tap $? 255 'QueryAllUserIAPOrders' test.out

#- 256 QueryUserIAPConsumeHistory
$CLI_EXE \
    --sn platform \
    --op QueryUserIAPConsumeHistory \
    --namespace $AB_NAMESPACE \
    --userId 'VdKutInZ' \
    --endTime 'bAjj8nYZ' \
    --limit '34' \
    --offset '38' \
    --startTime 'tVBf7lAh' \
    --status 'PENDING' \
    --type 'XBOX' \
    > test.out 2>&1
eval_tap $? 256 'QueryUserIAPConsumeHistory' test.out

#- 257 MockFulfillIAPItem
# body param: body
echo '{"itemIdentityType": "ITEM_ID", "language": "HjFY-Zr", "productId": "GLLIggfm", "region": "tXRtdrIz", "transactionId": "Ql0BBioz", "type": "OCULUS"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op MockFulfillIAPItem \
    --namespace $AB_NAMESPACE \
    --userId 'UbDmPW8b' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 257 'MockFulfillIAPItem' test.out

#- 258 QueryUserOrders
$CLI_EXE \
    --sn platform \
    --op QueryUserOrders \
    --namespace $AB_NAMESPACE \
    --userId 'TWpo6ep5' \
    --itemId 'x8IiNcZh' \
    --limit '0' \
    --offset '93' \
    --status 'DELETED' \
    > test.out 2>&1
eval_tap $? 258 'QueryUserOrders' test.out

#- 259 AdminCreateUserOrder
# body param: body
echo '{"currencyCode": "T7o0bYIb", "currencyNamespace": "jUXDIbPo", "discountedPrice": 89, "ext": {"Wmk0MWny": {}, "rfidMaB2": {}, "unfSn2jt": {}}, "itemId": "bnwr84eh", "language": "Jz2wmgFW", "options": {"skipPriceValidation": true}, "platform": "GooglePlay", "price": 35, "quantity": 71, "region": "hmlciVX9", "returnUrl": "qWglkrG6", "sandbox": false, "sectionId": "YsRXjHv2"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op AdminCreateUserOrder \
    --namespace $AB_NAMESPACE \
    --userId 'zI3Fdv5W' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 259 'AdminCreateUserOrder' test.out

#- 260 CountOfPurchasedItem
$CLI_EXE \
    --sn platform \
    --op CountOfPurchasedItem \
    --namespace $AB_NAMESPACE \
    --userId 'IFIxNMFu' \
    --itemId 'xduKgbum' \
    > test.out 2>&1
eval_tap $? 260 'CountOfPurchasedItem' test.out

#- 261 GetUserOrder
$CLI_EXE \
    --sn platform \
    --op GetUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'CrPK5iBk' \
    --userId 'bdxuvzib' \
    > test.out 2>&1
eval_tap $? 261 'GetUserOrder' test.out

#- 262 UpdateUserOrderStatus
# body param: body
echo '{"status": "CLOSED", "statusReason": "ewKpEqXA"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateUserOrderStatus \
    --namespace $AB_NAMESPACE \
    --orderNo 'HYyjGHje' \
    --userId 'ZsoC8uVI' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 262 'UpdateUserOrderStatus' test.out

#- 263 FulfillUserOrder
$CLI_EXE \
    --sn platform \
    --op FulfillUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo '26bYgf3F' \
    --userId 'Kn0mp9ta' \
    > test.out 2>&1
eval_tap $? 263 'FulfillUserOrder' test.out

#- 264 GetUserOrderGrant
$CLI_EXE \
    --sn platform \
    --op GetUserOrderGrant \
    --namespace $AB_NAMESPACE \
    --orderNo 'o5Goi51H' \
    --userId '3fEa4P59' \
    > test.out 2>&1
eval_tap $? 264 'GetUserOrderGrant' test.out

#- 265 GetUserOrderHistories
$CLI_EXE \
    --sn platform \
    --op GetUserOrderHistories \
    --namespace $AB_NAMESPACE \
    --orderNo 'hcm9VFJ3' \
    --userId 'xz3VdZas' \
    > test.out 2>&1
eval_tap $? 265 'GetUserOrderHistories' test.out

#- 266 ProcessUserOrderNotification
# body param: body
echo '{"additionalData": {"cardSummary": "61HzXtyP"}, "authorisedTime": "1973-10-31T00:00:00Z", "chargebackReversedTime": "1984-03-17T00:00:00Z", "chargebackTime": "1988-06-17T00:00:00Z", "chargedTime": "1981-08-31T00:00:00Z", "createdTime": "1983-08-04T00:00:00Z", "currency": {"currencyCode": "Lb9QVle4", "currencySymbol": "himvjuTE", "currencyType": "REAL", "decimals": 0, "namespace": "ew6Pfb3r"}, "customParameters": {"eL6btdSc": {}, "O90JGi3J": {}, "k3aFPjvg": {}}, "extOrderNo": "ybEJDcsy", "extTxId": "oKOa7kc2", "extUserId": "7rgj1mV5", "issuedAt": "1990-06-12T00:00:00Z", "metadata": {"pgtLX1z1": "aJSAIXrV", "j7Gl9t10": "aE2nCOvn", "mr9wcIja": "ykXb7NCr"}, "namespace": "JrN1GpNL", "nonceStr": "CP8j8658", "paymentMethod": "MxRLfMre", "paymentMethodFee": 16, "paymentOrderNo": "zu6VNyaq", "paymentProvider": "WALLET", "paymentProviderFee": 17, "paymentStationUrl": "gcaACKzH", "price": 53, "refundedTime": "1988-02-04T00:00:00Z", "salesTax": 73, "sandbox": false, "sku": "0HxlFfY8", "status": "REFUND_FAILED", "statusReason": "uwpfJZeY", "subscriptionId": "sFJfWZve", "subtotalPrice": 53, "targetNamespace": "6Zp7mwet", "targetUserId": "pYpJucGv", "tax": 48, "totalPrice": 83, "totalTax": 87, "txEndTime": "1982-06-23T00:00:00Z", "type": "vDqVvuKZ", "userId": "cJ4stf25", "vat": 3}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ProcessUserOrderNotification \
    --namespace $AB_NAMESPACE \
    --orderNo 'S6XC2F7b' \
    --userId 'Gyu61Jxy' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 266 'ProcessUserOrderNotification' test.out

#- 267 DownloadUserOrderReceipt
$CLI_EXE \
    --sn platform \
    --op DownloadUserOrderReceipt \
    --namespace $AB_NAMESPACE \
    --orderNo 'SJEY62xl' \
    --userId 'Dk1DBHId' \
    > test.out 2>&1
eval_tap $? 267 'DownloadUserOrderReceipt' test.out

#- 268 CreateUserPaymentOrder
# body param: body
echo '{"currencyCode": "43cFXqwe", "currencyNamespace": "7cAaHnb7", "customParameters": {"WN3Ym3uA": {}, "Gh1uz9vI": {}, "m8QP86SZ": {}}, "description": "ijf0WZyb", "extOrderNo": "jAR3NKjn", "extUserId": "bpNHXIor", "itemType": "LOOTBOX", "language": "hp", "metadata": {"LHermmRI": "cCwWglb2", "pgyJGdUu": "OtZpPUEW", "BUp7P34d": "6c0b9clj"}, "notifyUrl": "YTXdbBrM", "omitNotification": true, "platform": "FtP943GU", "price": 78, "recurringPaymentOrderNo": "7WeVALyp", "region": "02doRQ9C", "returnUrl": "sGj3Lwaw", "sandbox": true, "sku": "2jID3CZH", "subscriptionId": "Hhumm9fB", "title": "Y1t49B9c"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateUserPaymentOrder \
    --namespace $AB_NAMESPACE \
    --userId 'KtYFf529' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 268 'CreateUserPaymentOrder' test.out

#- 269 RefundUserPaymentOrder
# body param: body
echo '{"description": "Cq0XnJ9N"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RefundUserPaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'sbEVFHU5' \
    --userId 'wL1errOM' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 269 'RefundUserPaymentOrder' test.out

#- 270 ApplyUserRedemption
# body param: body
echo '{"code": "6fXo9rVa", "orderNo": "kSeDDbKP"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ApplyUserRedemption \
    --namespace $AB_NAMESPACE \
    --userId 'rkhXw6T3' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 270 'ApplyUserRedemption' test.out

#- 271 DoRevocation
# body param: body
echo '{"meta": {"7bJ9kWxI": {}, "4ri6KMcE": {}, "3GMiZDnO": {}}, "revokeEntries": [{"currency": {"balanceOrigin": "Xbox", "currencyCode": "FO3jDC1c", "namespace": "z89ptcsk"}, "entitlement": {"entitlementId": "YX3Hiq7h"}, "item": {"itemIdentity": "TPzlPJ8B", "itemIdentityType": "ITEM_ID", "origin": "Twitch"}, "quantity": 41, "type": "ITEM"}, {"currency": {"balanceOrigin": "Steam", "currencyCode": "xEMe9b8c", "namespace": "qkN5JxnW"}, "entitlement": {"entitlementId": "PGsalacQ"}, "item": {"itemIdentity": "GZPzkC8P", "itemIdentityType": "ITEM_SKU", "origin": "Nintendo"}, "quantity": 60, "type": "ENTITLEMENT"}, {"currency": {"balanceOrigin": "Epic", "currencyCode": "rB5vu3U3", "namespace": "M6HlefGC"}, "entitlement": {"entitlementId": "sQQwoQY7"}, "item": {"itemIdentity": "PtSaAXCT", "itemIdentityType": "ITEM_SKU", "origin": "Steam"}, "quantity": 31, "type": "ITEM"}], "source": "DLC", "transactionId": "gepqpCES"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op DoRevocation \
    --namespace $AB_NAMESPACE \
    --userId 'RJh5KI83' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 271 'DoRevocation' test.out

#- 272 RegisterXblSessions
# body param: body
echo '{"gameSessionId": "0DqK39BN", "payload": {"oXaRl0gj": {}, "QsZjza6L": {}, "6OcB2v6t": {}}, "scid": "cslmymSH", "sessionTemplateName": "NCVuKcWz"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RegisterXblSessions \
    --namespace $AB_NAMESPACE \
    --userId 'IP6diVmf' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 272 'RegisterXblSessions' test.out

#- 273 QueryUserSubscriptions
$CLI_EXE \
    --sn platform \
    --op QueryUserSubscriptions \
    --namespace $AB_NAMESPACE \
    --userId '3m2H4yEj' \
    --chargeStatus 'RECURRING_CHARGING' \
    --itemId 'FFs3JJG8' \
    --limit '79' \
    --offset '85' \
    --sku '1WB36kyG' \
    --status 'INIT' \
    --subscribedBy 'USER' \
    > test.out 2>&1
eval_tap $? 273 'QueryUserSubscriptions' test.out

#- 274 GetUserSubscriptionActivities
$CLI_EXE \
    --sn platform \
    --op GetUserSubscriptionActivities \
    --namespace $AB_NAMESPACE \
    --userId 'TYbVyApV' \
    --excludeSystem 'true' \
    --limit '3' \
    --offset '87' \
    --subscriptionId 'RoIGHCHd' \
    > test.out 2>&1
eval_tap $? 274 'GetUserSubscriptionActivities' test.out

#- 275 PlatformSubscribeSubscription
# body param: body
echo '{"grantDays": 85, "itemId": "wIHqoaUr", "language": "sDiZXTdr", "reason": "Nu4pA6fg", "region": "OZi0SNp8", "source": "i9gc7DWg"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PlatformSubscribeSubscription \
    --namespace $AB_NAMESPACE \
    --userId 'CtgRXQSV' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 275 'PlatformSubscribeSubscription' test.out

#- 276 CheckUserSubscriptionSubscribableByItemId
$CLI_EXE \
    --sn platform \
    --op CheckUserSubscriptionSubscribableByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'iZEmuqPK' \
    --itemId 'AkwxmCtN' \
    > test.out 2>&1
eval_tap $? 276 'CheckUserSubscriptionSubscribableByItemId' test.out

#- 277 GetUserSubscription
$CLI_EXE \
    --sn platform \
    --op GetUserSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId '1mhFjTFQ' \
    --userId 'VYBRIEK6' \
    > test.out 2>&1
eval_tap $? 277 'GetUserSubscription' test.out

#- 278 DeleteUserSubscription
$CLI_EXE \
    --sn platform \
    --op DeleteUserSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'vD7Og3St' \
    --userId 'WlRv9iCU' \
    > test.out 2>&1
eval_tap $? 278 'DeleteUserSubscription' test.out

#- 279 CancelSubscription
# body param: body
echo '{"immediate": true, "reason": "2QVcSSg4"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CancelSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'Yyp0SooI' \
    --userId '8LX5ZAUo' \
    --force 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 279 'CancelSubscription' test.out

#- 280 GrantDaysToSubscription
# body param: body
echo '{"grantDays": 45, "reason": "oa72iVYO"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op GrantDaysToSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'gQEZx5kl' \
    --userId 'ws6oJH1b' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 280 'GrantDaysToSubscription' test.out

#- 281 GetUserSubscriptionBillingHistories
$CLI_EXE \
    --sn platform \
    --op GetUserSubscriptionBillingHistories \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'KPf95nAG' \
    --userId 'fskkEdYx' \
    --excludeFree 'true' \
    --limit '74' \
    --offset '35' \
    > test.out 2>&1
eval_tap $? 281 'GetUserSubscriptionBillingHistories' test.out

#- 282 ProcessUserSubscriptionNotification
# body param: body
echo '{"additionalData": {"cardSummary": "RViqigoP"}, "authorisedTime": "1978-05-07T00:00:00Z", "chargebackReversedTime": "1973-01-16T00:00:00Z", "chargebackTime": "1999-11-12T00:00:00Z", "chargedTime": "1995-02-01T00:00:00Z", "createdTime": "1997-01-14T00:00:00Z", "currency": {"currencyCode": "6sxkJ0RO", "currencySymbol": "DerM7ozD", "currencyType": "VIRTUAL", "decimals": 92, "namespace": "6Gtq9MBP"}, "customParameters": {"1ZUhG5qx": {}, "2rF2UDwh": {}, "wZcW50aM": {}}, "extOrderNo": "Ilnb6eM8", "extTxId": "zMjZ3xmt", "extUserId": "gK9qbQc8", "issuedAt": "1981-04-04T00:00:00Z", "metadata": {"nYebehRe": "2dNBOgoL", "DY8RpCib": "Nj4qS4Ue", "G14X4Dqs": "hSFH1EOj"}, "namespace": "ZFPpRBc7", "nonceStr": "ArUDECYN", "paymentMethod": "QD2IfTnz", "paymentMethodFee": 40, "paymentOrderNo": "wIeW4mro", "paymentProvider": "ADYEN", "paymentProviderFee": 76, "paymentStationUrl": "loeDiT8k", "price": 10, "refundedTime": "1985-02-11T00:00:00Z", "salesTax": 50, "sandbox": false, "sku": "v0c4bN9V", "status": "INIT", "statusReason": "DOQXkdnh", "subscriptionId": "HuIq3Ip4", "subtotalPrice": 63, "targetNamespace": "wtX6qvDR", "targetUserId": "i4npJ2iM", "tax": 42, "totalPrice": 96, "totalTax": 23, "txEndTime": "1981-08-03T00:00:00Z", "type": "gmLH4bKO", "userId": "vZw0toh8", "vat": 69}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ProcessUserSubscriptionNotification \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'kZUSAfLC' \
    --userId 'E3VhGahd' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 282 'ProcessUserSubscriptionNotification' test.out

#- 283 AcquireUserTicket
# body param: body
echo '{"count": 54, "orderNo": "cKThDNLx"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op AcquireUserTicket \
    --boothName 'pOGHuPIa' \
    --namespace $AB_NAMESPACE \
    --userId 'aBUzuBcz' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 283 'AcquireUserTicket' test.out

#- 284 QueryUserCurrencyWallets
$CLI_EXE \
    --sn platform \
    --op QueryUserCurrencyWallets \
    --namespace $AB_NAMESPACE \
    --userId 'KzDuRytx' \
    > test.out 2>&1
eval_tap $? 284 'QueryUserCurrencyWallets' test.out

#- 285 DebitUserWalletByCurrencyCode
# body param: body
echo '{"allowOverdraft": true, "amount": 14, "balanceOrigin": "GooglePlay", "balanceSource": "PAYMENT", "metadata": {"n7qgdBnq": {}, "4dIKXI5J": {}, "pyuwQmix": {}}, "reason": "yTYhqO49"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op DebitUserWalletByCurrencyCode \
    --currencyCode 'e0k9Wu6N' \
    --namespace $AB_NAMESPACE \
    --userId 'G31BPfZ8' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 285 'DebitUserWalletByCurrencyCode' test.out

#- 286 ListUserCurrencyTransactions
$CLI_EXE \
    --sn platform \
    --op ListUserCurrencyTransactions \
    --currencyCode 'mlfYrX03' \
    --namespace $AB_NAMESPACE \
    --userId 'kIDK6Nuu' \
    --limit '33' \
    --offset '78' \
    > test.out 2>&1
eval_tap $? 286 'ListUserCurrencyTransactions' test.out

#- 287 CheckBalance
# body param: request
echo '{"amount": 98, "debitBalanceSource": "EXPIRATION", "metadata": {"YmRcBdUB": {}, "ZiDHRk9V": {}, "XBWqBavL": {}}, "reason": "kybzDUxm", "walletPlatform": "GooglePlay"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CheckBalance \
    --currencyCode 'Ple4HxXo' \
    --namespace $AB_NAMESPACE \
    --userId 'i6Z5eIep' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 287 'CheckBalance' test.out

#- 288 CheckWallet
eval_tap 0 288 'CheckWallet # SKIP deprecated' test.out

#- 289 CreditUserWallet
# body param: body
echo '{"amount": 47, "expireAt": "1988-12-16T00:00:00Z", "metadata": {"pU9UrWsz": {}, "Z9WZ1Ktr": {}, "IIpBOjbM": {}}, "origin": "GooglePlay", "reason": "ssIvv02m", "source": "REFERRAL_BONUS"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreditUserWallet \
    --currencyCode 'BhJVV9G4' \
    --namespace $AB_NAMESPACE \
    --userId 'cyWtX3we' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 289 'CreditUserWallet' test.out

#- 290 DebitByWalletPlatform
# body param: request
echo '{"amount": 21, "debitBalanceSource": "DLC_REVOCATION", "metadata": {"buAhOgwK": {}, "F5o4zy0q": {}, "kSzHlyVx": {}}, "reason": "Yrpwzrkt", "walletPlatform": "Nintendo"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op DebitByWalletPlatform \
    --currencyCode 'gO3gpGNn' \
    --namespace $AB_NAMESPACE \
    --userId 'dkwscRkh' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 290 'DebitByWalletPlatform' test.out

#- 291 PayWithUserWallet
# body param: body
echo '{"amount": 96, "metadata": {"dyP2bcC4": {}, "QVD2PvoH": {}, "xT0gSPON": {}}, "walletPlatform": "Playstation"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PayWithUserWallet \
    --currencyCode '2mPC1uhJ' \
    --namespace $AB_NAMESPACE \
    --userId 'LMwCtJiQ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 291 'PayWithUserWallet' test.out

#- 292 GetUserWallet
eval_tap 0 292 'GetUserWallet # SKIP deprecated' test.out

#- 293 DebitUserWallet
eval_tap 0 293 'DebitUserWallet # SKIP deprecated' test.out

#- 294 DisableUserWallet
eval_tap 0 294 'DisableUserWallet # SKIP deprecated' test.out

#- 295 EnableUserWallet
eval_tap 0 295 'EnableUserWallet # SKIP deprecated' test.out

#- 296 ListUserWalletTransactions
eval_tap 0 296 'ListUserWalletTransactions # SKIP deprecated' test.out

#- 297 ListViews
$CLI_EXE \
    --sn platform \
    --op ListViews \
    --namespace $AB_NAMESPACE \
    --storeId '87Ek6lco' \
    > test.out 2>&1
eval_tap $? 297 'ListViews' test.out

#- 298 CreateView
# body param: body
echo '{"displayOrder": 83, "localizations": {"T5n1eMND": {"description": "OEqvmh9T", "localExt": {"8udNpp3U": {}, "1AjaNTT6": {}, "fCUTgodb": {}}, "longDescription": "ELJgqs5I", "title": "jy4KiZ0j"}, "k5MuWbpL": {"description": "oF3ZdMhw", "localExt": {"N3E2hI9c": {}, "j6tIEiLc": {}, "2n0NBomz": {}}, "longDescription": "Gwkk1E4A", "title": "87FFAiJG"}, "mr2bVevl": {"description": "QgOik7BF", "localExt": {"EGoukDlo": {}, "EwiExAvZ": {}, "1mDH1M2w": {}}, "longDescription": "8MgJ76D2", "title": "fTDZsZ9l"}}, "name": "20kJdWxn"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateView \
    --namespace $AB_NAMESPACE \
    --storeId 'gXAORqfw' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 298 'CreateView' test.out

#- 299 GetView
$CLI_EXE \
    --sn platform \
    --op GetView \
    --namespace $AB_NAMESPACE \
    --viewId 'qef7gUJP' \
    --storeId 'jrxLfCPI' \
    > test.out 2>&1
eval_tap $? 299 'GetView' test.out

#- 300 UpdateView
# body param: body
echo '{"displayOrder": 46, "localizations": {"8o1HPc6S": {"description": "Oyuup6Wn", "localExt": {"BHsXpH70": {}, "CNiiwEju": {}, "vYbnCtgq": {}}, "longDescription": "xMreMrcV", "title": "X9duzWSS"}, "ur5sOOWc": {"description": "EoRzxzlW", "localExt": {"rqQMGWY3": {}, "ep0f6HdV": {}, "CQCpDHFA": {}}, "longDescription": "6aQendpJ", "title": "juIZ59io"}, "iOCQfasB": {"description": "tBIACwEu", "localExt": {"YNwmQSvJ": {}, "vCAb1Zfc": {}, "bavdswvP": {}}, "longDescription": "Qhlt2xqo", "title": "VQpEgDjl"}}, "name": "Cx5rTtxO"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateView \
    --namespace $AB_NAMESPACE \
    --viewId '3Qqn3LW5' \
    --storeId 'bXXmgVVY' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 300 'UpdateView' test.out

#- 301 DeleteView
$CLI_EXE \
    --sn platform \
    --op DeleteView \
    --namespace $AB_NAMESPACE \
    --viewId 'GH5PpliU' \
    --storeId '7G8cksx2' \
    > test.out 2>&1
eval_tap $? 301 'DeleteView' test.out

#- 302 QueryWallets
eval_tap 0 302 'QueryWallets # SKIP deprecated' test.out

#- 303 BulkCredit
# body param: body
echo '[{"creditRequest": {"amount": 30, "expireAt": "1972-11-11T00:00:00Z", "metadata": {"ZO0zvasB": {}, "PUBWQXzh": {}, "Y593FooL": {}}, "origin": "Xbox", "reason": "zIEqLj55", "source": "TRADE"}, "currencyCode": "SNmOHAoi", "userIds": ["7aXaefuG", "rRn88Na1", "qG5zZ7KN"]}, {"creditRequest": {"amount": 62, "expireAt": "1989-06-04T00:00:00Z", "metadata": {"fh2YnWPU": {}, "rETNqa5z": {}, "Tf5G2wNy": {}}, "origin": "Epic", "reason": "RCfCL1uQ", "source": "DLC"}, "currencyCode": "TEwPwsOi", "userIds": ["XaB5W4Bj", "sjvwwxfy", "npWWp31U"]}, {"creditRequest": {"amount": 27, "expireAt": "1989-05-31T00:00:00Z", "metadata": {"6yAqD7hL": {}, "c133I7Oj": {}, "aqPS3I90": {}}, "origin": "Oculus", "reason": "DtVlc4dI", "source": "SELL_BACK"}, "currencyCode": "acrxMzNC", "userIds": ["0b48XVJo", "xMST8n6M", "fWHTkb3x"]}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op BulkCredit \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 303 'BulkCredit' test.out

#- 304 BulkDebit
# body param: body
echo '[{"currencyCode": "PI17ctJP", "request": {"allowOverdraft": false, "amount": 66, "balanceOrigin": "Oculus", "balanceSource": "DLC_REVOCATION", "metadata": {"wYgxFOMD": {}, "LUENFHIV": {}, "yEMo4GL8": {}}, "reason": "PNnV3HaM"}, "userIds": ["8hxj8DtT", "RaN1rgKQ", "seuFEzcx"]}, {"currencyCode": "U8WhBVgJ", "request": {"allowOverdraft": true, "amount": 30, "balanceOrigin": "Oculus", "balanceSource": "DLC_REVOCATION", "metadata": {"ZdZtCZ98": {}, "UaOO2ohe": {}, "ea0gRW65": {}}, "reason": "Sc8qFcz4"}, "userIds": ["JxjV5t6b", "dYI8Sakx", "RU2KXEcS"]}, {"currencyCode": "xokzwmc8", "request": {"allowOverdraft": false, "amount": 19, "balanceOrigin": "Other", "balanceSource": "EXPIRATION", "metadata": {"IFBG0Y8u": {}, "9M6F6NZX": {}, "cvc928rM": {}}, "reason": "CCJiS1sa"}, "userIds": ["mV3t6tNh", "PXczAPDy", "Ht0NUxTP"]}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op BulkDebit \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 304 'BulkDebit' test.out

#- 305 GetWallet
eval_tap 0 305 'GetWallet # SKIP deprecated' test.out

#- 306 SyncOrders
$CLI_EXE \
    --sn platform \
    --op SyncOrders \
    --nextEvaluatedKey 'bvhmfH9b' \
    --end 'BEwtTgum' \
    --start 'ojFqjTS0' \
    > test.out 2>&1
eval_tap $? 306 'SyncOrders' test.out

#- 307 TestAdyenConfig
# body param: body
echo '{"allowedPaymentMethods": ["H4OxaBsK", "f7nr3rPR", "COUTMFSU"], "apiKey": "fzVpwP5T", "authoriseAsCapture": true, "blockedPaymentMethods": ["ssOsFIZ8", "MgVgnaPE", "rRonDkKo"], "clientKey": "TEvqlQv6", "dropInSettings": "5YHIiVlU", "liveEndpointUrlPrefix": "HpiwgVhy", "merchantAccount": "9RJVNnuq", "notificationHmacKey": "qnuwsqke", "notificationPassword": "hISaL3hN", "notificationUsername": "TrBoUEcG", "returnUrl": "3mbhjkKo", "settings": "6lSACGC0"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestAdyenConfig \
    --sandbox 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 307 'TestAdyenConfig' test.out

#- 308 TestAliPayConfig
# body param: body
echo '{"appId": "yIuktbQW", "privateKey": "tPkUFf0E", "publicKey": "AtF3FdmY", "returnUrl": "EXW4cn7r"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestAliPayConfig \
    --sandbox 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 308 'TestAliPayConfig' test.out

#- 309 TestCheckoutConfig
# body param: body
echo '{"publicKey": "KPYEoy8N", "secretKey": "aPTpkFv2"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestCheckoutConfig \
    --sandbox 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 309 'TestCheckoutConfig' test.out

#- 310 DebugMatchedPaymentMerchantConfig
$CLI_EXE \
    --sn platform \
    --op DebugMatchedPaymentMerchantConfig \
    --namespace_ 'Bal6fIHI' \
    --region 'XEFHpfXn' \
    > test.out 2>&1
eval_tap $? 310 'DebugMatchedPaymentMerchantConfig' test.out

#- 311 TestPayPalConfig
# body param: body
echo '{"clientID": "ffSrxRO4", "clientSecret": "A3LW8AdK", "returnUrl": "NTpqU7eN", "webHookId": "AhF8ziji"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestPayPalConfig \
    --sandbox 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 311 'TestPayPalConfig' test.out

#- 312 TestStripeConfig
# body param: body
echo '{"allowedPaymentMethodTypes": ["ehXOxHwg", "0CkGZA6D", "sLD9lLBH"], "publishableKey": "gMgTVlB7", "secretKey": "nRsRQ3Jh", "webhookSecret": "Bv3xkPuN"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestStripeConfig \
    --sandbox 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 312 'TestStripeConfig' test.out

#- 313 TestWxPayConfig
# body param: body
echo '{"appId": "hkfMtHGv", "key": "obwo4ypr", "mchid": "bu1UMVco", "returnUrl": "Hg551RcO"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestWxPayConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 313 'TestWxPayConfig' test.out

#- 314 TestXsollaConfig
# body param: body
echo '{"apiKey": "FigO1fDV", "flowCompletionUrl": "VzaEt1Wq", "merchantId": 18, "projectId": 47, "projectSecretKey": "rxh0WWcY"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestXsollaConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 314 'TestXsollaConfig' test.out

#- 315 GetPaymentMerchantConfig
$CLI_EXE \
    --sn platform \
    --op GetPaymentMerchantConfig \
    --id 'Vtch5XM9' \
    > test.out 2>&1
eval_tap $? 315 'GetPaymentMerchantConfig' test.out

#- 316 UpdateAdyenConfig
# body param: body
echo '{"allowedPaymentMethods": ["ecOVAcQW", "32KnR6zQ", "Ey7KTiXN"], "apiKey": "2Z4TGi1g", "authoriseAsCapture": true, "blockedPaymentMethods": ["EcJvntkR", "dogKZpya", "3K0rpqLz"], "clientKey": "rzvmDzKY", "dropInSettings": "jMepkU3z", "liveEndpointUrlPrefix": "IyXZ1Hm5", "merchantAccount": "Kl7wxwB8", "notificationHmacKey": "u0vpZONf", "notificationPassword": "u6e4faSE", "notificationUsername": "3qyaN7Ht", "returnUrl": "9zm51qZU", "settings": "klm7pD72"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateAdyenConfig \
    --id 'nYEbeIbQ' \
    --sandbox 'true' \
    --validate 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 316 'UpdateAdyenConfig' test.out

#- 317 TestAdyenConfigById
$CLI_EXE \
    --sn platform \
    --op TestAdyenConfigById \
    --id 'shoafceE' \
    --sandbox 'true' \
    > test.out 2>&1
eval_tap $? 317 'TestAdyenConfigById' test.out

#- 318 UpdateAliPayConfig
# body param: body
echo '{"appId": "SvnSy11Z", "privateKey": "kfFR42QD", "publicKey": "wiNbIgW2", "returnUrl": "Ry6DThMp"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateAliPayConfig \
    --id 'jrLYtz3S' \
    --sandbox 'true' \
    --validate 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 318 'UpdateAliPayConfig' test.out

#- 319 TestAliPayConfigById
$CLI_EXE \
    --sn platform \
    --op TestAliPayConfigById \
    --id 'NpD4H5Rr' \
    --sandbox 'true' \
    > test.out 2>&1
eval_tap $? 319 'TestAliPayConfigById' test.out

#- 320 UpdateCheckoutConfig
# body param: body
echo '{"publicKey": "0BXVObOo", "secretKey": "uZ1DUf74"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCheckoutConfig \
    --id 'L7XhlviV' \
    --sandbox 'false' \
    --validate 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 320 'UpdateCheckoutConfig' test.out

#- 321 TestCheckoutConfigById
$CLI_EXE \
    --sn platform \
    --op TestCheckoutConfigById \
    --id 'anIWIxOk' \
    --sandbox 'true' \
    > test.out 2>&1
eval_tap $? 321 'TestCheckoutConfigById' test.out

#- 322 UpdatePayPalConfig
# body param: body
echo '{"clientID": "JFaRnDu9", "clientSecret": "I3Io4b06", "returnUrl": "p3J2BdK4", "webHookId": "4Cn9o5uS"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePayPalConfig \
    --id 'c5Db1XlZ' \
    --sandbox 'true' \
    --validate 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 322 'UpdatePayPalConfig' test.out

#- 323 TestPayPalConfigById
$CLI_EXE \
    --sn platform \
    --op TestPayPalConfigById \
    --id 'jH7xCBG7' \
    --sandbox 'true' \
    > test.out 2>&1
eval_tap $? 323 'TestPayPalConfigById' test.out

#- 324 UpdateStripeConfig
# body param: body
echo '{"allowedPaymentMethodTypes": ["gk6E4BGk", "CdV5cQua", "9F6NaJWN"], "publishableKey": "htuVaEkx", "secretKey": "qrbXwM8U", "webhookSecret": "ndEFxFS1"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateStripeConfig \
    --id 'KwVsy2r6' \
    --sandbox 'false' \
    --validate 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 324 'UpdateStripeConfig' test.out

#- 325 TestStripeConfigById
$CLI_EXE \
    --sn platform \
    --op TestStripeConfigById \
    --id 'tXzwyU4c' \
    --sandbox 'false' \
    > test.out 2>&1
eval_tap $? 325 'TestStripeConfigById' test.out

#- 326 UpdateWxPayConfig
# body param: body
echo '{"appId": "Ybu1m52N", "key": "X4wqlNQY", "mchid": "XtYB2kso", "returnUrl": "jY3x2U3q"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateWxPayConfig \
    --id '4rVgWmRX' \
    --validate 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 326 'UpdateWxPayConfig' test.out

#- 327 UpdateWxPayConfigCert
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UpdateWxPayConfigCert \
    --id 'F4XcVaco' \
    --upload $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 327 'UpdateWxPayConfigCert' test.out

#- 328 TestWxPayConfigById
$CLI_EXE \
    --sn platform \
    --op TestWxPayConfigById \
    --id 'dY7VzmKx' \
    > test.out 2>&1
eval_tap $? 328 'TestWxPayConfigById' test.out

#- 329 UpdateXsollaConfig
# body param: body
echo '{"apiKey": "lOrxE7PY", "flowCompletionUrl": "G2K0Sql3", "merchantId": 8, "projectId": 61, "projectSecretKey": "R2NKLxoo"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXsollaConfig \
    --id 'I9khqaIB' \
    --validate 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 329 'UpdateXsollaConfig' test.out

#- 330 TestXsollaConfigById
$CLI_EXE \
    --sn platform \
    --op TestXsollaConfigById \
    --id 'Ut9a9wGH' \
    > test.out 2>&1
eval_tap $? 330 'TestXsollaConfigById' test.out

#- 331 UpdateXsollaUIConfig
# body param: body
echo '{"device": "DESKTOP", "showCloseButton": false, "size": "SMALL", "theme": "DARK"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXsollaUIConfig \
    --id 'krUZwQv3' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 331 'UpdateXsollaUIConfig' test.out

#- 332 QueryPaymentProviderConfig
$CLI_EXE \
    --sn platform \
    --op QueryPaymentProviderConfig \
    --limit '100' \
    --namespace_ 'Pc8z7vW8' \
    --offset '84' \
    --region 'tqDQWpmX' \
    > test.out 2>&1
eval_tap $? 332 'QueryPaymentProviderConfig' test.out

#- 333 CreatePaymentProviderConfig
# body param: body
echo '{"aggregate": "XSOLLA", "namespace": "O8RqT17Y", "region": "I0Dc6ujO", "sandboxTaxJarApiToken": "Z1Hg1pcm", "specials": ["XSOLLA", "STRIPE", "ADYEN"], "taxJarApiToken": "Xh79tkid", "taxJarEnabled": false, "useGlobalTaxJarApiToken": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreatePaymentProviderConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 333 'CreatePaymentProviderConfig' test.out

#- 334 GetAggregatePaymentProviders
$CLI_EXE \
    --sn platform \
    --op GetAggregatePaymentProviders \
    > test.out 2>&1
eval_tap $? 334 'GetAggregatePaymentProviders' test.out

#- 335 DebugMatchedPaymentProviderConfig
$CLI_EXE \
    --sn platform \
    --op DebugMatchedPaymentProviderConfig \
    --namespace_ '7TjedmNj' \
    --region 'xaLvmzvb' \
    > test.out 2>&1
eval_tap $? 335 'DebugMatchedPaymentProviderConfig' test.out

#- 336 GetSpecialPaymentProviders
$CLI_EXE \
    --sn platform \
    --op GetSpecialPaymentProviders \
    > test.out 2>&1
eval_tap $? 336 'GetSpecialPaymentProviders' test.out

#- 337 UpdatePaymentProviderConfig
# body param: body
echo '{"aggregate": "XSOLLA", "namespace": "Ddqrxx8I", "region": "LKJvohh4", "sandboxTaxJarApiToken": "XiKICRSk", "specials": ["WXPAY", "ALIPAY", "ALIPAY"], "taxJarApiToken": "lYRkAoOG", "taxJarEnabled": false, "useGlobalTaxJarApiToken": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePaymentProviderConfig \
    --id 'kSP1x4Mp' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 337 'UpdatePaymentProviderConfig' test.out

#- 338 DeletePaymentProviderConfig
$CLI_EXE \
    --sn platform \
    --op DeletePaymentProviderConfig \
    --id 'nJRXnRYw' \
    > test.out 2>&1
eval_tap $? 338 'DeletePaymentProviderConfig' test.out

#- 339 GetPaymentTaxConfig
$CLI_EXE \
    --sn platform \
    --op GetPaymentTaxConfig \
    > test.out 2>&1
eval_tap $? 339 'GetPaymentTaxConfig' test.out

#- 340 UpdatePaymentTaxConfig
# body param: body
echo '{"sandboxTaxJarApiToken": "XFXB0wRP", "taxJarApiToken": "zSAKwphx", "taxJarEnabled": false, "taxJarProductCodesMapping": {"XgBXB0NV": "mnWXeFU3", "uwGW0iHA": "WarlMNTl", "3LSOUas3": "afT8Werd"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePaymentTaxConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 340 'UpdatePaymentTaxConfig' test.out

#- 341 SyncPaymentOrders
$CLI_EXE \
    --sn platform \
    --op SyncPaymentOrders \
    --nextEvaluatedKey 'PFUWg9K0' \
    --end 'dY3J27Ur' \
    --start '6ZZUtfxR' \
    > test.out 2>&1
eval_tap $? 341 'SyncPaymentOrders' test.out

#- 342 PublicGetRootCategories
$CLI_EXE \
    --sn platform \
    --op PublicGetRootCategories \
    --namespace $AB_NAMESPACE \
    --language 'kzuXsOap' \
    --storeId 'hNYLhrbi' \
    > test.out 2>&1
eval_tap $? 342 'PublicGetRootCategories' test.out

#- 343 DownloadCategories
$CLI_EXE \
    --sn platform \
    --op DownloadCategories \
    --namespace $AB_NAMESPACE \
    --language 'E0xd6HBO' \
    --storeId 'hDb32GYY' \
    > test.out 2>&1
eval_tap $? 343 'DownloadCategories' test.out

#- 344 PublicGetCategory
$CLI_EXE \
    --sn platform \
    --op PublicGetCategory \
    --categoryPath '0r133All' \
    --namespace $AB_NAMESPACE \
    --language 'NHClxaau' \
    --storeId 'LRrU8A8F' \
    > test.out 2>&1
eval_tap $? 344 'PublicGetCategory' test.out

#- 345 PublicGetChildCategories
$CLI_EXE \
    --sn platform \
    --op PublicGetChildCategories \
    --categoryPath 'O6YDpQRQ' \
    --namespace $AB_NAMESPACE \
    --language 'ZSZJiHIh' \
    --storeId 'XeerMR5v' \
    > test.out 2>&1
eval_tap $? 345 'PublicGetChildCategories' test.out

#- 346 PublicGetDescendantCategories
$CLI_EXE \
    --sn platform \
    --op PublicGetDescendantCategories \
    --categoryPath 'lkYNRmbf' \
    --namespace $AB_NAMESPACE \
    --language '8YFk4xoI' \
    --storeId 'VZLKFon1' \
    > test.out 2>&1
eval_tap $? 346 'PublicGetDescendantCategories' test.out

#- 347 PublicListCurrencies
$CLI_EXE \
    --sn platform \
    --op PublicListCurrencies \
    --namespace $AB_NAMESPACE \
    --currencyType 'VIRTUAL' \
    > test.out 2>&1
eval_tap $? 347 'PublicListCurrencies' test.out

#- 348 GeDLCDurableRewardShortMap
$CLI_EXE \
    --sn platform \
    --op GeDLCDurableRewardShortMap \
    --namespace $AB_NAMESPACE \
    --dlcType 'XBOX' \
    > test.out 2>&1
eval_tap $? 348 'GeDLCDurableRewardShortMap' test.out

#- 349 GetIAPItemMapping
$CLI_EXE \
    --sn platform \
    --op GetIAPItemMapping \
    --namespace $AB_NAMESPACE \
    --platform 'TWITCH' \
    > test.out 2>&1
eval_tap $? 349 'GetIAPItemMapping' test.out

#- 350 PublicGetItemByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetItemByAppId \
    --namespace $AB_NAMESPACE \
    --language 'haZlFycr' \
    --region 'sqG7LHku' \
    --storeId 'fa1xx7ve' \
    --appId 'V1nDWNdw' \
    > test.out 2>&1
eval_tap $? 350 'PublicGetItemByAppId' test.out

#- 351 PublicQueryItems
$CLI_EXE \
    --sn platform \
    --op PublicQueryItems \
    --namespace $AB_NAMESPACE \
    --appType 'SOFTWARE' \
    --autoCalcEstimatedPrice 'true' \
    --baseAppId 'HmdyZG8f' \
    --categoryPath 'p7QzWo6n' \
    --features 'fCcpGalJ' \
    --includeSubCategoryItem 'true' \
    --itemType 'CODE' \
    --language 'WaxucLT4' \
    --limit '72' \
    --offset '82' \
    --region '7J55Jw7j' \
    --sortBy '["createdAt", "name:desc", "updatedAt:asc"]' \
    --storeId 'xwoUPWag' \
    --tags 'p5CxO6Pj' \
    > test.out 2>&1
eval_tap $? 351 'PublicQueryItems' test.out

#- 352 PublicGetItemBySku
$CLI_EXE \
    --sn platform \
    --op PublicGetItemBySku \
    --namespace $AB_NAMESPACE \
    --autoCalcEstimatedPrice 'false' \
    --language '1P07ucfV' \
    --region '9vhs3Hm0' \
    --storeId '2KbWGpjS' \
    --sku 'TXk7sqTI' \
    > test.out 2>&1
eval_tap $? 352 'PublicGetItemBySku' test.out

#- 353 PublicGetEstimatedPrice
$CLI_EXE \
    --sn platform \
    --op PublicGetEstimatedPrice \
    --namespace $AB_NAMESPACE \
    --region 'mu1cVcMk' \
    --storeId 'rxYsg4TT' \
    --itemIds 'TKykE1Uy' \
    > test.out 2>&1
eval_tap $? 353 'PublicGetEstimatedPrice' test.out

#- 354 PublicBulkGetItems
$CLI_EXE \
    --sn platform \
    --op PublicBulkGetItems \
    --namespace $AB_NAMESPACE \
    --autoCalcEstimatedPrice 'false' \
    --language 'I4Qtocat' \
    --region 'BVj8wJvd' \
    --storeId 'R2NO9xym' \
    --itemIds 'kMGNwRZw' \
    > test.out 2>&1
eval_tap $? 354 'PublicBulkGetItems' test.out

#- 355 PublicValidateItemPurchaseCondition
# body param: body
echo '{"itemIds": ["TgEg0kvj", "MJ2bImwb", "qXOByCUB"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicValidateItemPurchaseCondition \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 355 'PublicValidateItemPurchaseCondition' test.out

#- 356 PublicSearchItems
$CLI_EXE \
    --sn platform \
    --op PublicSearchItems \
    --namespace $AB_NAMESPACE \
    --autoCalcEstimatedPrice 'false' \
    --itemType 'INGAMEITEM' \
    --limit '54' \
    --offset '87' \
    --region 'XlqzWImU' \
    --storeId 'sGUiQrgU' \
    --keyword 'CmKrYB57' \
    --language 'wtt7MOrC' \
    > test.out 2>&1
eval_tap $? 356 'PublicSearchItems' test.out

#- 357 PublicGetApp
$CLI_EXE \
    --sn platform \
    --op PublicGetApp \
    --itemId 'g99nLF0z' \
    --namespace $AB_NAMESPACE \
    --language 'atUG1bRQ' \
    --region '88XjAkyL' \
    --storeId 'duSopCbq' \
    > test.out 2>&1
eval_tap $? 357 'PublicGetApp' test.out

#- 358 PublicGetItemDynamicData
$CLI_EXE \
    --sn platform \
    --op PublicGetItemDynamicData \
    --itemId '4kqUil5F' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 358 'PublicGetItemDynamicData' test.out

#- 359 PublicGetItem
$CLI_EXE \
    --sn platform \
    --op PublicGetItem \
    --itemId 'rWJwQyU8' \
    --namespace $AB_NAMESPACE \
    --autoCalcEstimatedPrice 'false' \
    --language 'Pac5Gb2A' \
    --populateBundle 'false' \
    --region 'MUi3dZOU' \
    --storeId 'KDvop4e9' \
    > test.out 2>&1
eval_tap $? 359 'PublicGetItem' test.out

#- 360 GetPaymentCustomization
eval_tap 0 360 'GetPaymentCustomization # SKIP deprecated' test.out

#- 361 PublicGetPaymentUrl
# body param: body
echo '{"paymentOrderNo": "glUYRMaS", "paymentProvider": "ADYEN", "returnUrl": "mXJ61ApD", "ui": "4KJOekuz", "zipCode": "Tdhzhbt4"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicGetPaymentUrl \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 361 'PublicGetPaymentUrl' test.out

#- 362 PublicGetPaymentMethods
$CLI_EXE \
    --sn platform \
    --op PublicGetPaymentMethods \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'RHaRxDMp' \
    > test.out 2>&1
eval_tap $? 362 'PublicGetPaymentMethods' test.out

#- 363 PublicGetUnpaidPaymentOrder
$CLI_EXE \
    --sn platform \
    --op PublicGetUnpaidPaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'NymBpmSp' \
    > test.out 2>&1
eval_tap $? 363 'PublicGetUnpaidPaymentOrder' test.out

#- 364 Pay
# body param: body
echo '{"token": "RV9N7prR"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op Pay \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'ZEnrAMn6' \
    --paymentProvider 'XSOLLA' \
    --zipCode '65sJMacW' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 364 'Pay' test.out

#- 365 PublicCheckPaymentOrderPaidStatus
$CLI_EXE \
    --sn platform \
    --op PublicCheckPaymentOrderPaidStatus \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'G9G1mdEl' \
    > test.out 2>&1
eval_tap $? 365 'PublicCheckPaymentOrderPaidStatus' test.out

#- 366 GetPaymentPublicConfig
$CLI_EXE \
    --sn platform \
    --op GetPaymentPublicConfig \
    --namespace $AB_NAMESPACE \
    --sandbox 'true' \
    --paymentProvider 'WALLET' \
    --region 'Ky8jFr7B' \
    > test.out 2>&1
eval_tap $? 366 'GetPaymentPublicConfig' test.out

#- 367 PublicGetQRCode
$CLI_EXE \
    --sn platform \
    --op PublicGetQRCode \
    --namespace $AB_NAMESPACE \
    --code 'j3r6jBjk' \
    > test.out 2>&1
eval_tap $? 367 'PublicGetQRCode' test.out

#- 368 PublicNormalizePaymentReturnUrl
$CLI_EXE \
    --sn platform \
    --op PublicNormalizePaymentReturnUrl \
    --namespace $AB_NAMESPACE \
    --payerID 'BYNoI8Yg' \
    --foreinginvoice 'xtUU1ms0' \
    --invoiceId 'AvbNlu0q' \
    --payload 'VLnHu3Du' \
    --redirectResult 'ehlrwUmU' \
    --resultCode 'IwkUnWRx' \
    --sessionId 'j9qTRPPU' \
    --status 'pYK3XnCz' \
    --token 'zrhekK7e' \
    --type 'KTobOqSt' \
    --userId 'WlxRrFpI' \
    --orderNo 'Ig7QCZAy' \
    --paymentOrderNo 'wX7Hg0uc' \
    --paymentProvider 'WALLET' \
    --returnUrl '9KYAem3V' \
    > test.out 2>&1
eval_tap $? 368 'PublicNormalizePaymentReturnUrl' test.out

#- 369 GetPaymentTaxValue
$CLI_EXE \
    --sn platform \
    --op GetPaymentTaxValue \
    --namespace $AB_NAMESPACE \
    --zipCode 'L3gKexdo' \
    --paymentOrderNo 'B7ybghDs' \
    --paymentProvider 'WXPAY' \
    > test.out 2>&1
eval_tap $? 369 'GetPaymentTaxValue' test.out

#- 370 GetRewardByCode
$CLI_EXE \
    --sn platform \
    --op GetRewardByCode \
    --namespace $AB_NAMESPACE \
    --rewardCode 'VNpQlQoR' \
    > test.out 2>&1
eval_tap $? 370 'GetRewardByCode' test.out

#- 371 QueryRewards1
$CLI_EXE \
    --sn platform \
    --op QueryRewards1 \
    --namespace $AB_NAMESPACE \
    --eventTopic 'H8TZ9LXJ' \
    --limit '29' \
    --offset '57' \
    --sortBy '["rewardCode", "rewardCode:desc", "namespace"]' \
    > test.out 2>&1
eval_tap $? 371 'QueryRewards1' test.out

#- 372 GetReward1
$CLI_EXE \
    --sn platform \
    --op GetReward1 \
    --namespace $AB_NAMESPACE \
    --rewardId 'R3dqDDC6' \
    > test.out 2>&1
eval_tap $? 372 'GetReward1' test.out

#- 373 PublicListStores
$CLI_EXE \
    --sn platform \
    --op PublicListStores \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 373 'PublicListStores' test.out

#- 374 PublicExistsAnyMyActiveEntitlement
$CLI_EXE \
    --sn platform \
    --op PublicExistsAnyMyActiveEntitlement \
    --namespace $AB_NAMESPACE \
    --appIds '["m4JdLisq", "n4ZDIFp3", "mik1FeTx"]' \
    --itemIds '["4rFwNWyy", "gwPrbJxm", "O53hyPmF"]' \
    --skus '["vf1zeJBb", "niq3dD1d", "Pqm4tDYh"]' \
    > test.out 2>&1
eval_tap $? 374 'PublicExistsAnyMyActiveEntitlement' test.out

#- 375 PublicGetMyAppEntitlementOwnershipByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetMyAppEntitlementOwnershipByAppId \
    --namespace $AB_NAMESPACE \
    --appId 'l7C0BXeD' \
    > test.out 2>&1
eval_tap $? 375 'PublicGetMyAppEntitlementOwnershipByAppId' test.out

#- 376 PublicGetMyEntitlementOwnershipByItemId
$CLI_EXE \
    --sn platform \
    --op PublicGetMyEntitlementOwnershipByItemId \
    --namespace $AB_NAMESPACE \
    --entitlementClazz 'MEDIA' \
    --itemId 'q4oCg3z0' \
    > test.out 2>&1
eval_tap $? 376 'PublicGetMyEntitlementOwnershipByItemId' test.out

#- 377 PublicGetMyEntitlementOwnershipBySku
$CLI_EXE \
    --sn platform \
    --op PublicGetMyEntitlementOwnershipBySku \
    --namespace $AB_NAMESPACE \
    --entitlementClazz 'LOOTBOX' \
    --sku 'Jy2ud01i' \
    > test.out 2>&1
eval_tap $? 377 'PublicGetMyEntitlementOwnershipBySku' test.out

#- 378 PublicGetEntitlementOwnershipToken
$CLI_EXE \
    --sn platform \
    --op PublicGetEntitlementOwnershipToken \
    --namespace $AB_NAMESPACE \
    --appIds '["T9XLeZN6", "s0CKYAjj", "MtGmsPUt"]' \
    --itemIds '["JYHwfSqP", "j0Q0GZpj", "jA6KTpac"]' \
    --skus '["QCmAD8T8", "2unnVL8y", "kjPunEzz"]' \
    > test.out 2>&1
eval_tap $? 378 'PublicGetEntitlementOwnershipToken' test.out

#- 379 SyncTwitchDropsEntitlement
# body param: body
echo '{"gameId": "OGZv9Qzh", "language": "RfY-Wv", "region": "lhF7o81G"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncTwitchDropsEntitlement \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 379 'SyncTwitchDropsEntitlement' test.out

#- 380 PublicGetMyWallet
$CLI_EXE \
    --sn platform \
    --op PublicGetMyWallet \
    --currencyCode 'QQDAo5gz' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 380 'PublicGetMyWallet' test.out

#- 381 SyncEpicGameDLC
# body param: body
echo '{"epicGamesJwtToken": "yDwxvcyZ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncEpicGameDLC \
    --namespace $AB_NAMESPACE \
    --userId 'bcyzSRte' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 381 'SyncEpicGameDLC' test.out

#- 382 SyncOculusDLC
$CLI_EXE \
    --sn platform \
    --op SyncOculusDLC \
    --namespace $AB_NAMESPACE \
    --userId 'PdxNqTI4' \
    > test.out 2>&1
eval_tap $? 382 'SyncOculusDLC' test.out

#- 383 PublicSyncPsnDlcInventory
# body param: body
echo '{"serviceLabel": 58}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicSyncPsnDlcInventory \
    --namespace $AB_NAMESPACE \
    --userId 'PJJ4fEUD' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 383 'PublicSyncPsnDlcInventory' test.out

#- 384 PublicSyncPsnDlcInventoryWithMultipleServiceLabels
# body param: body
echo '{"serviceLabels": [64, 9, 77]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicSyncPsnDlcInventoryWithMultipleServiceLabels \
    --namespace $AB_NAMESPACE \
    --userId 'pNoULs94' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 384 'PublicSyncPsnDlcInventoryWithMultipleServiceLabels' test.out

#- 385 SyncSteamDLC
# body param: body
echo '{"appId": "oD2T44P4", "steamId": "MLWArH8t"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncSteamDLC \
    --namespace $AB_NAMESPACE \
    --userId 'sFFcQ0ZL' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 385 'SyncSteamDLC' test.out

#- 386 SyncXboxDLC
# body param: body
echo '{"xstsToken": "8nQVw61S"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncXboxDLC \
    --namespace $AB_NAMESPACE \
    --userId 'BzLzjEUC' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 386 'SyncXboxDLC' test.out

#- 387 PublicQueryUserEntitlements
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserEntitlements \
    --namespace $AB_NAMESPACE \
    --userId 'V8V0o3ZV' \
    --appType 'SOFTWARE' \
    --entitlementClazz 'OPTIONBOX' \
    --entitlementName 'CklWZydx' \
    --features '["l1UQxXst", "YmQ3ybm9", "T0Mnw4ZZ"]' \
    --itemId '["a6Rtpe0K", "lYrSaJSn", "Djjzr2D4"]' \
    --limit '57' \
    --offset '93' \
    > test.out 2>&1
eval_tap $? 387 'PublicQueryUserEntitlements' test.out

#- 388 PublicGetUserAppEntitlementByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetUserAppEntitlementByAppId \
    --namespace $AB_NAMESPACE \
    --userId 'WSKHfM97' \
    --appId 'DDdbGETK' \
    > test.out 2>&1
eval_tap $? 388 'PublicGetUserAppEntitlementByAppId' test.out

#- 389 PublicQueryUserEntitlementsByAppType
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserEntitlementsByAppType \
    --namespace $AB_NAMESPACE \
    --userId 'xMS1KDkT' \
    --limit '22' \
    --offset '35' \
    --appType 'DEMO' \
    > test.out 2>&1
eval_tap $? 389 'PublicQueryUserEntitlementsByAppType' test.out

#- 390 PublicGetUserEntitlementByItemId
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'cvKOzhW0' \
    --entitlementClazz 'LOOTBOX' \
    --itemId 'YnRGKuFm' \
    > test.out 2>&1
eval_tap $? 390 'PublicGetUserEntitlementByItemId' test.out

#- 391 PublicGetUserEntitlementBySku
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementBySku \
    --namespace $AB_NAMESPACE \
    --userId '6a2m5kDT' \
    --entitlementClazz 'APP' \
    --sku 'O7oAEIQW' \
    > test.out 2>&1
eval_tap $? 391 'PublicGetUserEntitlementBySku' test.out

#- 392 PublicExistsAnyUserActiveEntitlement
$CLI_EXE \
    --sn platform \
    --op PublicExistsAnyUserActiveEntitlement \
    --namespace $AB_NAMESPACE \
    --userId '1F89Sp8G' \
    --appIds '["QfxSwdvG", "vo8CDMFS", "PfUvMlHo"]' \
    --itemIds '["bBUcw7r3", "DLNTwN78", "vxrcTf6S"]' \
    --skus '["Z58My2xj", "dx6szbDl", "2YTL5Qy8"]' \
    > test.out 2>&1
eval_tap $? 392 'PublicExistsAnyUserActiveEntitlement' test.out

#- 393 PublicGetUserAppEntitlementOwnershipByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetUserAppEntitlementOwnershipByAppId \
    --namespace $AB_NAMESPACE \
    --userId 'fwe5uILg' \
    --appId 'jpvQ17eI' \
    > test.out 2>&1
eval_tap $? 393 'PublicGetUserAppEntitlementOwnershipByAppId' test.out

#- 394 PublicGetUserEntitlementOwnershipByItemId
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementOwnershipByItemId \
    --namespace $AB_NAMESPACE \
    --userId '83Y283Q2' \
    --entitlementClazz 'MEDIA' \
    --itemId 'tMNgCCTp' \
    > test.out 2>&1
eval_tap $? 394 'PublicGetUserEntitlementOwnershipByItemId' test.out

#- 395 PublicGetUserEntitlementOwnershipByItemIds
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementOwnershipByItemIds \
    --namespace $AB_NAMESPACE \
    --userId 'B1mr90ZQ' \
    --ids '["RqLRNx3c", "uL2CSsmH", "3pIHjBSa"]' \
    > test.out 2>&1
eval_tap $? 395 'PublicGetUserEntitlementOwnershipByItemIds' test.out

#- 396 PublicGetUserEntitlementOwnershipBySku
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementOwnershipBySku \
    --namespace $AB_NAMESPACE \
    --userId 'MWYiQwRg' \
    --entitlementClazz 'MEDIA' \
    --sku 'dZjxgbkQ' \
    > test.out 2>&1
eval_tap $? 396 'PublicGetUserEntitlementOwnershipBySku' test.out

#- 397 PublicGetUserEntitlement
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlement \
    --entitlementId '7BfbK39P' \
    --namespace $AB_NAMESPACE \
    --userId 'iytl3lGv' \
    > test.out 2>&1
eval_tap $? 397 'PublicGetUserEntitlement' test.out

#- 398 PublicConsumeUserEntitlement
# body param: body
echo '{"options": ["bnQxEHqK", "7cpwpuwJ", "vi9F7j2r"], "requestId": "AYh79S4u", "useCount": 100}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicConsumeUserEntitlement \
    --entitlementId 'xGSWiabF' \
    --namespace $AB_NAMESPACE \
    --userId 'SAiGgSQd' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 398 'PublicConsumeUserEntitlement' test.out

#- 399 PublicSellUserEntitlement
# body param: body
echo '{"requestId": "xCkrvUvW", "useCount": 18}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicSellUserEntitlement \
    --entitlementId 'tsIbwrGu' \
    --namespace $AB_NAMESPACE \
    --userId 'BoHxTQJ9' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 399 'PublicSellUserEntitlement' test.out

#- 400 PublicRedeemCode
# body param: body
echo '{"code": "MF3OODz0", "language": "lA-nfIF", "region": "NX2RXo2D"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicRedeemCode \
    --namespace $AB_NAMESPACE \
    --userId '71n1ELHs' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 400 'PublicRedeemCode' test.out

#- 401 PublicFulfillAppleIAPItem
# body param: body
echo '{"excludeOldTransactions": true, "language": "IQrX_zWgA_Hh", "productId": "bnudxH7k", "receiptData": "riCtyrKV", "region": "hiywaV14", "transactionId": "pY8eLBnU"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicFulfillAppleIAPItem \
    --namespace $AB_NAMESPACE \
    --userId 'IIGpDlJM' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 401 'PublicFulfillAppleIAPItem' test.out

#- 402 SyncEpicGamesInventory
# body param: body
echo '{"epicGamesJwtToken": "TIqkHeLk"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncEpicGamesInventory \
    --namespace $AB_NAMESPACE \
    --userId '0gQYPM08' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 402 'SyncEpicGamesInventory' test.out

#- 403 PublicFulfillGoogleIAPItem
# body param: body
echo '{"autoAck": true, "language": "lk_515", "orderId": "VQdIp4Kk", "packageName": "4FNQfSar", "productId": "zGfORPah", "purchaseTime": 95, "purchaseToken": "AQjbJxa7", "region": "udXBjPHf"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicFulfillGoogleIAPItem \
    --namespace $AB_NAMESPACE \
    --userId 'T6188tsU' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 403 'PublicFulfillGoogleIAPItem' test.out

#- 404 SyncOculusConsumableEntitlements
$CLI_EXE \
    --sn platform \
    --op SyncOculusConsumableEntitlements \
    --namespace $AB_NAMESPACE \
    --userId '9cirmlY5' \
    > test.out 2>&1
eval_tap $? 404 'SyncOculusConsumableEntitlements' test.out

#- 405 PublicReconcilePlayStationStore
# body param: body
echo '{"currencyCode": "jYUJclUz", "price": 0.7844242792171423, "productId": "4fXLMRRS", "serviceLabel": 34}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicReconcilePlayStationStore \
    --namespace $AB_NAMESPACE \
    --userId 'mvkdx3Ut' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 405 'PublicReconcilePlayStationStore' test.out

#- 406 PublicReconcilePlayStationStoreWithMultipleServiceLabels
# body param: body
echo '{"currencyCode": "C26bOgVq", "price": 0.4963124692979901, "productId": "fESvUgPA", "serviceLabels": [48, 35, 86]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicReconcilePlayStationStoreWithMultipleServiceLabels \
    --namespace $AB_NAMESPACE \
    --userId 'wpVAXI0I' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 406 'PublicReconcilePlayStationStoreWithMultipleServiceLabels' test.out

#- 407 SyncSteamInventory
# body param: body
echo '{"appId": "nd76UbJw", "currencyCode": "Lok4bOdI", "language": "kW_QIWX_uO", "price": 0.8479697132932603, "productId": "iun4VmOC", "region": "7eH6LLBo", "steamId": "yjUG61cd"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncSteamInventory \
    --namespace $AB_NAMESPACE \
    --userId 'jrXM5RT5' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 407 'SyncSteamInventory' test.out

#- 408 SyncTwitchDropsEntitlement1
# body param: body
echo '{"gameId": "RYh35mKR", "language": "ArFx_pQAM_sU", "region": "L39hURY9"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncTwitchDropsEntitlement1 \
    --namespace $AB_NAMESPACE \
    --userId 'BwMQTXf2' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 408 'SyncTwitchDropsEntitlement1' test.out

#- 409 SyncXboxInventory
# body param: body
echo '{"currencyCode": "6J4TCPDf", "price": 0.5543663619690545, "productId": "VTUZbEDv", "xstsToken": "fH6XXh2C"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncXboxInventory \
    --namespace $AB_NAMESPACE \
    --userId 'fgXRhlyN' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 409 'SyncXboxInventory' test.out

#- 410 PublicQueryUserOrders
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserOrders \
    --namespace $AB_NAMESPACE \
    --userId 'cQaw12Xz' \
    --itemId '1YiVXNRX' \
    --limit '69' \
    --offset '61' \
    --status 'FULFILL_FAILED' \
    > test.out 2>&1
eval_tap $? 410 'PublicQueryUserOrders' test.out

#- 411 PublicCreateUserOrder
# body param: body
echo '{"currencyCode": "7WotEuZQ", "discountedPrice": 14, "ext": {"86XiydxA": {}, "CnyZuRJp": {}, "ubtj9W5e": {}}, "itemId": "ZnvkXGOg", "language": "Kr-lBwk_Mn", "price": 19, "quantity": 82, "region": "yMxVpA1t", "returnUrl": "3hLUdZJF", "sectionId": "INh6hYmX"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicCreateUserOrder \
    --namespace $AB_NAMESPACE \
    --userId 'QZr4IjCB' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 411 'PublicCreateUserOrder' test.out

#- 412 PublicGetUserOrder
$CLI_EXE \
    --sn platform \
    --op PublicGetUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'o2dw8rNw' \
    --userId 'hdrD4Gyg' \
    > test.out 2>&1
eval_tap $? 412 'PublicGetUserOrder' test.out

#- 413 PublicCancelUserOrder
$CLI_EXE \
    --sn platform \
    --op PublicCancelUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'CdTna4uY' \
    --userId 'u81SdyOr' \
    > test.out 2>&1
eval_tap $? 413 'PublicCancelUserOrder' test.out

#- 414 PublicGetUserOrderHistories
$CLI_EXE \
    --sn platform \
    --op PublicGetUserOrderHistories \
    --namespace $AB_NAMESPACE \
    --orderNo 'RN4JepHw' \
    --userId 'jzI0f3IR' \
    > test.out 2>&1
eval_tap $? 414 'PublicGetUserOrderHistories' test.out

#- 415 PublicDownloadUserOrderReceipt
$CLI_EXE \
    --sn platform \
    --op PublicDownloadUserOrderReceipt \
    --namespace $AB_NAMESPACE \
    --orderNo 'SOjDdibl' \
    --userId 'YzgR85vE' \
    > test.out 2>&1
eval_tap $? 415 'PublicDownloadUserOrderReceipt' test.out

#- 416 PublicGetPaymentAccounts
$CLI_EXE \
    --sn platform \
    --op PublicGetPaymentAccounts \
    --namespace $AB_NAMESPACE \
    --userId 'sJjbbBZz' \
    > test.out 2>&1
eval_tap $? 416 'PublicGetPaymentAccounts' test.out

#- 417 PublicDeletePaymentAccount
$CLI_EXE \
    --sn platform \
    --op PublicDeletePaymentAccount \
    --id 'edHVUbV8' \
    --namespace $AB_NAMESPACE \
    --type 'card' \
    --userId 'kFp57IzC' \
    > test.out 2>&1
eval_tap $? 417 'PublicDeletePaymentAccount' test.out

#- 418 PublicListActiveSections
$CLI_EXE \
    --sn platform \
    --op PublicListActiveSections \
    --namespace $AB_NAMESPACE \
    --userId 'eFU6gT8w' \
    --autoCalcEstimatedPrice 'false' \
    --language 'rtnlq0fk' \
    --region 'RMrpvUBN' \
    --storeId '7KzPiyt9' \
    --viewId 'KAa9dhSs' \
    > test.out 2>&1
eval_tap $? 418 'PublicListActiveSections' test.out

#- 419 PublicQueryUserSubscriptions
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserSubscriptions \
    --namespace $AB_NAMESPACE \
    --userId 'lVvfCjU8' \
    --chargeStatus 'SETUP' \
    --itemId 'OJiUagnY' \
    --limit '83' \
    --offset '4' \
    --sku 'fHxElNJC' \
    --status 'EXPIRED' \
    --subscribedBy 'PLATFORM' \
    > test.out 2>&1
eval_tap $? 419 'PublicQueryUserSubscriptions' test.out

#- 420 PublicSubscribeSubscription
# body param: body
echo '{"currencyCode": "mjlc7wHj", "itemId": "kqbRAmoD", "language": "jQ_789", "region": "JKLqc74i", "returnUrl": "J6s08ZNC", "source": "QOH8NWP0"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicSubscribeSubscription \
    --namespace $AB_NAMESPACE \
    --userId 'wnpPCQoB' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 420 'PublicSubscribeSubscription' test.out

#- 421 PublicCheckUserSubscriptionSubscribableByItemId
$CLI_EXE \
    --sn platform \
    --op PublicCheckUserSubscriptionSubscribableByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'gK3aoTML' \
    --itemId 'lBkWB9MD' \
    > test.out 2>&1
eval_tap $? 421 'PublicCheckUserSubscriptionSubscribableByItemId' test.out

#- 422 PublicGetUserSubscription
$CLI_EXE \
    --sn platform \
    --op PublicGetUserSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'c2Ohr6o7' \
    --userId 'sn7X8ysU' \
    > test.out 2>&1
eval_tap $? 422 'PublicGetUserSubscription' test.out

#- 423 PublicChangeSubscriptionBillingAccount
$CLI_EXE \
    --sn platform \
    --op PublicChangeSubscriptionBillingAccount \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'jS8WX3Bi' \
    --userId 'ZAWfblh6' \
    > test.out 2>&1
eval_tap $? 423 'PublicChangeSubscriptionBillingAccount' test.out

#- 424 PublicCancelSubscription
# body param: body
echo '{"immediate": false, "reason": "NOiYQfzz"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicCancelSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'qX0ARmNy' \
    --userId 'nRl6UTil' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 424 'PublicCancelSubscription' test.out

#- 425 PublicGetUserSubscriptionBillingHistories
$CLI_EXE \
    --sn platform \
    --op PublicGetUserSubscriptionBillingHistories \
    --namespace $AB_NAMESPACE \
    --subscriptionId '7AdBHeCI' \
    --userId 'kLTjCEEk' \
    --excludeFree 'true' \
    --limit '29' \
    --offset '72' \
    > test.out 2>&1
eval_tap $? 425 'PublicGetUserSubscriptionBillingHistories' test.out

#- 426 PublicListViews
$CLI_EXE \
    --sn platform \
    --op PublicListViews \
    --namespace $AB_NAMESPACE \
    --userId 'aKgmXyXj' \
    --language '9kQw8jEt' \
    --storeId 'LWYgx9tR' \
    > test.out 2>&1
eval_tap $? 426 'PublicListViews' test.out

#- 427 PublicGetWallet
$CLI_EXE \
    --sn platform \
    --op PublicGetWallet \
    --currencyCode 'y8T1vsrB' \
    --namespace $AB_NAMESPACE \
    --userId 'pu1pSCTP' \
    > test.out 2>&1
eval_tap $? 427 'PublicGetWallet' test.out

#- 428 PublicListUserWalletTransactions
$CLI_EXE \
    --sn platform \
    --op PublicListUserWalletTransactions \
    --currencyCode 'ct0iHuJP' \
    --namespace $AB_NAMESPACE \
    --userId 'ArcF3tqb' \
    --limit '3' \
    --offset '83' \
    > test.out 2>&1
eval_tap $? 428 'PublicListUserWalletTransactions' test.out

#- 429 QueryItems1
$CLI_EXE \
    --sn platform \
    --op QueryItems1 \
    --namespace $AB_NAMESPACE \
    --appType 'DEMO' \
    --availableDate '0pbTSW3z' \
    --baseAppId 'XLFymFwi' \
    --categoryPath 'X8OiCSR2' \
    --features 'j1nOqqUQ' \
    --includeSubCategoryItem 'false' \
    --itemName 'lZAwAOxT' \
    --itemStatus 'INACTIVE' \
    --itemType 'APP' \
    --limit '21' \
    --offset '8' \
    --region 'qEGu0U6n' \
    --sectionExclusive 'true' \
    --sortBy '["createdAt", "createdAt:desc", "displayOrder:asc"]' \
    --storeId 'MsDMC38u' \
    --tags 'Lth6WM5N' \
    --targetNamespace 'J7fSSQpb' \
    --withTotal 'false' \
    > test.out 2>&1
eval_tap $? 429 'QueryItems1' test.out

#- 430 ImportStore1
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op ImportStore1 \
    --namespace $AB_NAMESPACE \
    --storeId 'uA3qC289' \
    --strictMode 'true' \
    --upload $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 430 'ImportStore1' test.out

#- 431 ExportStore1
# body param: body
echo '{"itemIds": ["yq2xcYhh", "wRUNZMkT", "VRFqetl9"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ExportStore1 \
    --namespace $AB_NAMESPACE \
    --storeId '9fGTloYx' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 431 'ExportStore1' test.out

#- 432 FulfillRewardsV2
# body param: body
echo '{"metadata": {"Ntf9Wfb7": {}, "O1hy0AfT": {}, "mtp1FHWA": {}}, "origin": "Epic", "rewards": [{"currency": {"currencyCode": "h6MV7BGn", "namespace": "nQzpbYQ5"}, "item": {"itemId": "whLVA0mp", "itemSku": "tXQU57nb", "itemType": "Rpl5iGu6"}, "quantity": 33, "type": "CURRENCY"}, {"currency": {"currencyCode": "MxYOYZb6", "namespace": "LxavMysC"}, "item": {"itemId": "nvnxQK1y", "itemSku": "UuKoiQMy", "itemType": "GnRwwvLJ"}, "quantity": 19, "type": "CURRENCY"}, {"currency": {"currencyCode": "BaAZVtKM", "namespace": "WM0mbSx4"}, "item": {"itemId": "dyS7OSJz", "itemSku": "46cZQShj", "itemType": "AeelrAqP"}, "quantity": 5, "type": "CURRENCY"}], "source": "REFERRAL_BONUS", "transactionId": "kosW2tRT"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op FulfillRewardsV2 \
    --namespace $AB_NAMESPACE \
    --userId 'XTN2yPAY' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 432 'FulfillRewardsV2' test.out


# remove artifacts
rm -f "$CLI_TOKEN_FILE"
rm -f "$TEMP_JSON_INPUT"
rm -f "$TEMP_FILE_UPLOAD"

exit $EXIT_CODE