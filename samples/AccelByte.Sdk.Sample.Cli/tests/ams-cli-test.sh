#!/usr/bin/env bash

# Copyright (c) 2021 AccelByte Inc. All Rights Reserved.
# This is licensed software from AccelByte Inc, for limitations
# and restrictions contact your company contract manager.

# This code is generated by tool. DO NOT EDIT.

# Meta:
# - random seed: 
# - template file: 

# Instructions:
# - Run the Justice SDK Mock Server first before running this script.

export AB_BASE_URL="http://127.0.0.1:8080"
export AB_CLIENT_ID="admin"
export AB_CLIENT_SECRET="admin"
export AB_NAMESPACE="test"
export AB_APP_NAME="UnitTest"

EXIT_CODE=0

eval_tap() {
  if [ $1 -eq 0 ]; then
    echo "ok $2 - $3"
  else
    EXIT_CODE=1
    echo "not ok $2 - $3"
    sed 's/^/# /g' $4
  fi
  rm -f $4
}

CLI_EXE="AccelByte.Sdk.Sample.Cli"
CLI_TOKEN_FILE="$(dirname "$(which $CLI_EXE)")/token.json"
TEMP_JSON_INPUT="input_json.json"
TEMP_FILE_UPLOAD="file_upload.bin"

echo "TAP version 13"
echo "1..26"

#- 1 Login
$CLI_EXE --op login --lt user --user user --pass user > test.out 2>&1
eval_tap $? 1 'Login' test.out

if [ $EXIT_CODE -ne 0 ]; then
  echo "Bail out! Login failed."
  exit $EXIT_CODE
fi

# echo "foo" > "$CLI_TOKEN_FILE"

#- 2 AuthCheck
$CLI_EXE \
    --sn ams \
    --op AuthCheck \
    > test.out 2>&1
eval_tap $? 2 'AuthCheck' test.out

#- 3 PortalHealthCheck
$CLI_EXE \
    --sn ams \
    --op PortalHealthCheck \
    > test.out 2>&1
eval_tap $? 3 'PortalHealthCheck' test.out

#- 4 AccountGet
$CLI_EXE \
    --sn ams \
    --op AccountGet \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 4 'AccountGet' test.out

#- 5 AccountCreate
# body param: body
echo '{"name": "qNdPPEJv"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn ams \
    --op AccountCreate \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 5 'AccountCreate' test.out

#- 6 AccountLinkTokenGet
$CLI_EXE \
    --sn ams \
    --op AccountLinkTokenGet \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 6 'AccountLinkTokenGet' test.out

#- 7 AccountLink
# body param: body
echo '{"token": "PhlFaJom"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn ams \
    --op AccountLink \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 7 'AccountLink' test.out

#- 8 FleetList
$CLI_EXE \
    --sn ams \
    --op FleetList \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 8 'FleetList' test.out

#- 9 FleetCreate
# body param: body
echo '{"active": false, "claimKeys": ["Zg3NlYhD", "Ib8F2qul", "8U9BhAQG"], "dsHostConfiguration": {"instanceId": "svm3Kjqv", "instanceType": "DQMHKByR", "serversPerVm": 17}, "imageDeploymentProfile": {"commandLine": "pBIxrptt", "imageId": "qckaN5sq", "portConfigurations": [{"name": "rEdeWvvW", "protocol": "lHGXF8TH"}, {"name": "IOFCj5XL", "protocol": "nZBwlSgN"}, {"name": "z6YnFfmn", "protocol": "jceHXwMy"}], "timeout": {"creation": 12, "drain": 91, "session": 22, "unresponsive": 12}}, "name": "Oeyl3ImN", "regions": [{"bufferSize": 91, "maxServerCount": 6, "minServerCount": 6, "region": "vxpOewIL"}, {"bufferSize": 48, "maxServerCount": 49, "minServerCount": 36, "region": "0DEzL5BL"}, {"bufferSize": 82, "maxServerCount": 13, "minServerCount": 63, "region": "F3JiDxtg"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn ams \
    --op FleetCreate \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 9 'FleetCreate' test.out

#- 10 FleetGet
$CLI_EXE \
    --sn ams \
    --op FleetGet \
    --fleetID 'egvmb2x4' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 10 'FleetGet' test.out

#- 11 FleetUpdate
# body param: body
echo '{"active": true, "claimKeys": ["Wqqx4Znv", "rgWQIB07", "S5LOoUHz"], "dsHostConfiguration": {"instanceId": "I1DJTeeJ", "instanceType": "IEpyrhDV", "serversPerVm": 87}, "imageDeploymentProfile": {"commandLine": "31OJJ5Y9", "imageId": "vQRBv7I9", "portConfigurations": [{"name": "rNlGXFwr", "protocol": "L6V1TRAa"}, {"name": "WnzpWlBC", "protocol": "zPcoQoL9"}, {"name": "FumsAuu0", "protocol": "tHpubrMO"}], "timeout": {"creation": 41, "drain": 6, "session": 27, "unresponsive": 77}}, "name": "psgmV08x", "regions": [{"bufferSize": 83, "maxServerCount": 80, "minServerCount": 81, "region": "NWwgyadU"}, {"bufferSize": 18, "maxServerCount": 0, "minServerCount": 83, "region": "oMp30rhT"}, {"bufferSize": 82, "maxServerCount": 1, "minServerCount": 9, "region": "K3GO3QmI"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn ams \
    --op FleetUpdate \
    --fleetID 'c9p5ajOt' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 11 'FleetUpdate' test.out

#- 12 FleetDelete
$CLI_EXE \
    --sn ams \
    --op FleetDelete \
    --fleetID 'pvhBhMHN' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 12 'FleetDelete' test.out

#- 13 FleetServers
$CLI_EXE \
    --sn ams \
    --op FleetServers \
    --fleetID '0WHL6bzD' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 13 'FleetServers' test.out

#- 14 FleetServerHistory
$CLI_EXE \
    --sn ams \
    --op FleetServerHistory \
    --fleetID '7Xy8lLVT' \
    --namespace $AB_NAMESPACE \
    --count '10' \
    --offset '68' \
    --reason 'rDS3yxCX' \
    --region '9cXGaPMo' \
    --serverId 'JDjtwHgU' \
    --sortDirection 'IEp1h9Ms' \
    --status 'aWwW5h9C' \
    > test.out 2>&1
eval_tap $? 14 'FleetServerHistory' test.out

#- 15 ImageList
$CLI_EXE \
    --sn ams \
    --op ImageList \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 15 'ImageList' test.out

#- 16 ImageGet
$CLI_EXE \
    --sn ams \
    --op ImageGet \
    --imageID 'w5R8VZ5H' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 16 'ImageGet' test.out

#- 17 ImagePatch
# body param: body
echo '{"addedTags": ["k9GJLLni", "08xPPjuu", "8pDut3fw"], "isProtected": false, "name": "UM1bqziD", "removedTags": ["hH9CRTjF", "hjtDEC5b", "dP9Yhh7h"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn ams \
    --op ImagePatch \
    --imageID 'xm0H3Ot8' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 17 'ImagePatch' test.out

#- 18 InfoRegions
$CLI_EXE \
    --sn ams \
    --op InfoRegions \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 18 'InfoRegions' test.out

#- 19 FleetServerInfo
$CLI_EXE \
    --sn ams \
    --op FleetServerInfo \
    --namespace $AB_NAMESPACE \
    --serverID 't49Qpma8' \
    > test.out 2>&1
eval_tap $? 19 'FleetServerInfo' test.out

#- 20 ServerHistory
$CLI_EXE \
    --sn ams \
    --op ServerHistory \
    --namespace $AB_NAMESPACE \
    --serverID 'YRhsSwBU' \
    > test.out 2>&1
eval_tap $? 20 'ServerHistory' test.out

#- 21 InfoSupportedInstances
$CLI_EXE \
    --sn ams \
    --op InfoSupportedInstances \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 21 'InfoSupportedInstances' test.out

#- 22 FleetClaimByID
# body param: body
echo '{"region": "eB2mudf6"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn ams \
    --op FleetClaimByID \
    --fleetID 'ixXmSyAP' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 22 'FleetClaimByID' test.out

#- 23 FleetClaimByKeys
# body param: body
echo '{"claimKeys": ["piCI80jU", "C8mk16zm", "hFkRN8Aw"], "regions": ["fDodwlQB", "3O512nAm", "QZdkFs8J"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn ams \
    --op FleetClaimByKeys \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 23 'FleetClaimByKeys' test.out

#- 24 WatchdogConnect
$CLI_EXE \
    --sn ams \
    --op WatchdogConnect \
    --namespace $AB_NAMESPACE \
    --watchdogID 'vj8IwSJc' \
    > test.out 2>&1
eval_tap $? 24 'WatchdogConnect' test.out

#- 25 Func1
$CLI_EXE \
    --sn ams \
    --op Func1 \
    > test.out 2>&1
eval_tap $? 25 'Func1' test.out

#- 26 BasicHealthCheck
$CLI_EXE \
    --sn ams \
    --op BasicHealthCheck \
    > test.out 2>&1
eval_tap $? 26 'BasicHealthCheck' test.out


# remove artifacts
rm -f "$CLI_TOKEN_FILE"
rm -f "$TEMP_JSON_INPUT"
rm -f "$TEMP_FILE_UPLOAD"

exit $EXIT_CODE