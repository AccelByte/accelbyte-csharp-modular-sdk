#!/usr/bin/env bash

# Copyright (c) 2021 AccelByte Inc. All Rights Reserved.
# This is licensed software from AccelByte Inc, for limitations
# and restrictions contact your company contract manager.

# This code is generated by tool. DO NOT EDIT.

# Meta:
# - random seed: 
# - template file: 

# Instructions:
# - Run the Justice SDK Mock Server first before running this script.

export AB_BASE_URL="http://127.0.0.1:8080"
export AB_CLIENT_ID="admin"
export AB_CLIENT_SECRET="admin"
export AB_NAMESPACE="test"
export AB_APP_NAME="UnitTest"

EXIT_CODE=0

eval_tap() {
  if [ $1 -eq 0 ]; then
    echo "ok $2 - $3"
  else
    EXIT_CODE=1
    echo "not ok $2 - $3"
    sed 's/^/# /g' $4
  fi
  rm -f $4
}

CLI_EXE="AccelByte.Sdk.Sample.Cli"
CLI_TOKEN_FILE="$(dirname "$(which $CLI_EXE)")/token.json"
TEMP_JSON_INPUT="input_json.json"
TEMP_FILE_UPLOAD="file_upload.bin"

echo "TAP version 13"
echo "1..30"

#- 1 Login
$CLI_EXE --op login --lt user --user user --pass user > test.out 2>&1
eval_tap $? 1 'Login' test.out

if [ $EXIT_CODE -ne 0 ]; then
  echo "Bail out! Login failed."
  exit $EXIT_CODE
fi

# echo "foo" > "$CLI_TOKEN_FILE"

#- 2 AuthCheck
$CLI_EXE \
    --sn ams \
    --op AuthCheck \
    > test.out 2>&1
eval_tap $? 2 'AuthCheck' test.out

#- 3 PortalHealthCheck
$CLI_EXE \
    --sn ams \
    --op PortalHealthCheck \
    > test.out 2>&1
eval_tap $? 3 'PortalHealthCheck' test.out

#- 4 AccountGet
$CLI_EXE \
    --sn ams \
    --op AccountGet \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 4 'AccountGet' test.out

#- 5 AccountCreate
# body param: body
echo '{"name": "zDu3H2XS"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn ams \
    --op AccountCreate \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 5 'AccountCreate' test.out

#- 6 AccountLinkTokenGet
$CLI_EXE \
    --sn ams \
    --op AccountLinkTokenGet \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 6 'AccountLinkTokenGet' test.out

#- 7 AccountLink
# body param: body
echo '{"token": "5JquTVvs"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn ams \
    --op AccountLink \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 7 'AccountLink' test.out

#- 8 FleetList
$CLI_EXE \
    --sn ams \
    --op FleetList \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 8 'FleetList' test.out

#- 9 FleetCreate
# body param: body
echo '{"active": true, "claimKeys": ["gM8NBqHd", "wLMC3zkG", "mn6J2Xg2"], "dsHostConfiguration": {"instanceId": "iOjEC1QM", "instanceType": "0MhLdXwF", "serversPerVm": 41}, "imageDeploymentProfile": {"commandLine": "bexlioPf", "imageId": "cvKLFmiE", "portConfigurations": [{"name": "DpgrAGU6", "protocol": "Qb0OLK2p"}, {"name": "nPMMInjS", "protocol": "uG9tMKWs"}, {"name": "eDF9hqnF", "protocol": "LQuhqmM8"}], "timeout": {"creation": 56, "drain": 30, "session": 51, "unresponsive": 91}}, "name": "x7kfgwKT", "regions": [{"bufferSize": 44, "maxServerCount": 26, "minServerCount": 16, "region": "LbPYNSY9"}, {"bufferSize": 36, "maxServerCount": 26, "minServerCount": 70, "region": "k7wfGT5L"}, {"bufferSize": 44, "maxServerCount": 74, "minServerCount": 98, "region": "wjAolVOJ"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn ams \
    --op FleetCreate \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 9 'FleetCreate' test.out

#- 10 FleetGet
$CLI_EXE \
    --sn ams \
    --op FleetGet \
    --fleetID 'm2xAm4hb' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 10 'FleetGet' test.out

#- 11 FleetUpdate
# body param: body
echo '{"active": true, "claimKeys": ["Q4LGviUM", "5uKOdKfz", "yt0xsQQk"], "dsHostConfiguration": {"instanceId": "EeHx1QEH", "instanceType": "Hlpl4D5p", "serversPerVm": 34}, "imageDeploymentProfile": {"commandLine": "v5WKedyg", "imageId": "s8C3wFym", "portConfigurations": [{"name": "fDpqRV3Y", "protocol": "KNUQoUdL"}, {"name": "zO9ctOsC", "protocol": "ikvQBnzL"}, {"name": "InZhGTLy", "protocol": "eIV2e4dZ"}], "timeout": {"creation": 24, "drain": 85, "session": 0, "unresponsive": 26}}, "name": "lL8nWjE8", "regions": [{"bufferSize": 57, "maxServerCount": 69, "minServerCount": 90, "region": "uhm7RGOs"}, {"bufferSize": 58, "maxServerCount": 57, "minServerCount": 72, "region": "Y7CPAPvE"}, {"bufferSize": 89, "maxServerCount": 31, "minServerCount": 52, "region": "Gn5LK2Dc"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn ams \
    --op FleetUpdate \
    --fleetID 'x6PF8ERH' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 11 'FleetUpdate' test.out

#- 12 FleetDelete
$CLI_EXE \
    --sn ams \
    --op FleetDelete \
    --fleetID 'yovHf5az' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 12 'FleetDelete' test.out

#- 13 FleetArtifactSamplingRulesGet
$CLI_EXE \
    --sn ams \
    --op FleetArtifactSamplingRulesGet \
    --fleetID 'W3T9httE' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 13 'FleetArtifactSamplingRulesGet' test.out

#- 14 FleetServers
$CLI_EXE \
    --sn ams \
    --op FleetServers \
    --fleetID 'T5dUrinC' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 14 'FleetServers' test.out

#- 15 FleetServerHistory
$CLI_EXE \
    --sn ams \
    --op FleetServerHistory \
    --fleetID 'sslKlnPv' \
    --namespace $AB_NAMESPACE \
    --count '13' \
    --offset '76' \
    --reason 'LZ0kB7XK' \
    --region 'B7ZKJb42' \
    --serverId 'yo47kt4i' \
    --sortDirection 'sRJZbDKG' \
    --status 'EglocNjA' \
    > test.out 2>&1
eval_tap $? 15 'FleetServerHistory' test.out

#- 16 ImageList
$CLI_EXE \
    --sn ams \
    --op ImageList \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 16 'ImageList' test.out

#- 17 ImageGet
$CLI_EXE \
    --sn ams \
    --op ImageGet \
    --imageID 'Wf9BaXke' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 17 'ImageGet' test.out

#- 18 ImagePatch
# body param: body
echo '{"addedTags": ["2T4vavrF", "19L44alW", "NfTdJz5N"], "isProtected": true, "name": "HiV5erW0", "removedTags": ["s1rp3A2U", "4iYtTl8W", "MBq9ojw2"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn ams \
    --op ImagePatch \
    --imageID 'ESIMPEKo' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 18 'ImagePatch' test.out

#- 19 QoSRegionsUpdate
# body param: body
echo '{"status": "9WJjrmcj"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn ams \
    --op QoSRegionsUpdate \
    --namespace $AB_NAMESPACE \
    --region 'JfgzrzAl' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 19 'QoSRegionsUpdate' test.out

#- 20 InfoRegions
$CLI_EXE \
    --sn ams \
    --op InfoRegions \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 20 'InfoRegions' test.out

#- 21 FleetServerInfo
$CLI_EXE \
    --sn ams \
    --op FleetServerInfo \
    --namespace $AB_NAMESPACE \
    --serverID 'Zxg8TseH' \
    > test.out 2>&1
eval_tap $? 21 'FleetServerInfo' test.out

#- 22 ServerHistory
$CLI_EXE \
    --sn ams \
    --op ServerHistory \
    --namespace $AB_NAMESPACE \
    --serverID 'v3UMEshm' \
    > test.out 2>&1
eval_tap $? 22 'ServerHistory' test.out

#- 23 InfoSupportedInstances
$CLI_EXE \
    --sn ams \
    --op InfoSupportedInstances \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 23 'InfoSupportedInstances' test.out

#- 24 FleetClaimByID
# body param: body
echo '{"region": "6uNgF9rA"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn ams \
    --op FleetClaimByID \
    --fleetID 'aoqlmMUU' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 24 'FleetClaimByID' test.out

#- 25 LocalWatchdogConnect
$CLI_EXE \
    --sn ams \
    --op LocalWatchdogConnect \
    --namespace $AB_NAMESPACE \
    --watchdogID 'XOlBZCoa' \
    > test.out 2>&1
eval_tap $? 25 'LocalWatchdogConnect' test.out

#- 26 QoSRegionsGet
$CLI_EXE \
    --sn ams \
    --op QoSRegionsGet \
    --namespace $AB_NAMESPACE \
    --status 'ti39jqUc' \
    > test.out 2>&1
eval_tap $? 26 'QoSRegionsGet' test.out

#- 27 FleetClaimByKeys
# body param: body
echo '{"claimKeys": ["1JJ5RCvq", "7UvjPyjR", "isTQj02Y"], "regions": ["c72XsPxE", "BUu1HFqv", "CIgVdiRK"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn ams \
    --op FleetClaimByKeys \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 27 'FleetClaimByKeys' test.out

#- 28 WatchdogConnect
$CLI_EXE \
    --sn ams \
    --op WatchdogConnect \
    --namespace $AB_NAMESPACE \
    --watchdogID 'nG7iJLGx' \
    > test.out 2>&1
eval_tap $? 28 'WatchdogConnect' test.out

#- 29 Func1
$CLI_EXE \
    --sn ams \
    --op Func1 \
    > test.out 2>&1
eval_tap $? 29 'Func1' test.out

#- 30 BasicHealthCheck
$CLI_EXE \
    --sn ams \
    --op BasicHealthCheck \
    > test.out 2>&1
eval_tap $? 30 'BasicHealthCheck' test.out


# remove artifacts
rm -f "$CLI_TOKEN_FILE"
rm -f "$TEMP_JSON_INPUT"
rm -f "$TEMP_FILE_UPLOAD"

exit $EXIT_CODE