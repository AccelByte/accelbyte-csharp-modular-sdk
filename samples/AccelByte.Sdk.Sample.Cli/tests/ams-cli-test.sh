#!/usr/bin/env bash

# Copyright (c) 2021 AccelByte Inc. All Rights Reserved.
# This is licensed software from AccelByte Inc, for limitations
# and restrictions contact your company contract manager.

# This code is generated by tool. DO NOT EDIT.

# Meta:
# - random seed: 
# - template file: 

# Instructions:
# - Run the Justice SDK Mock Server first before running this script.

export AB_BASE_URL="http://127.0.0.1:8080"
export AB_CLIENT_ID="admin"
export AB_CLIENT_SECRET="admin"
export AB_NAMESPACE="test"
export AB_APP_NAME="UnitTest"

EXIT_CODE=0

eval_tap() {
  if [ $1 -eq 0 ]; then
    echo "ok $2 - $3"
  else
    EXIT_CODE=1
    echo "not ok $2 - $3"
    sed 's/^/# /g' $4
  fi
  rm -f $4
}

CLI_EXE="AccelByte.Sdk.Sample.Cli"
CLI_TOKEN_FILE="$(dirname "$(which $CLI_EXE)")/token.json"
TEMP_JSON_INPUT="input_json.json"
TEMP_FILE_UPLOAD="file_upload.bin"

echo "TAP version 13"
echo "1..35"

#- 1 Login
$CLI_EXE --op login --lt user --user user --pass user > test.out 2>&1
eval_tap $? 1 'Login' test.out

if [ $EXIT_CODE -ne 0 ]; then
  echo "Bail out! Login failed."
  exit $EXIT_CODE
fi

# echo "foo" > "$CLI_TOKEN_FILE"

#- 2 AuthCheck
$CLI_EXE \
    --sn ams \
    --op AuthCheck \
    > test.out 2>&1
eval_tap $? 2 'AuthCheck' test.out

#- 3 PortalHealthCheck
$CLI_EXE \
    --sn ams \
    --op PortalHealthCheck \
    > test.out 2>&1
eval_tap $? 3 'PortalHealthCheck' test.out

#- 4 AccountGet
$CLI_EXE \
    --sn ams \
    --op AccountGet \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 4 'AccountGet' test.out

#- 5 AccountCreate
# body param: body
echo '{"name": "bjFYgb9b"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn ams \
    --op AccountCreate \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 5 'AccountCreate' test.out

#- 6 AccountLinkTokenGet
$CLI_EXE \
    --sn ams \
    --op AccountLinkTokenGet \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 6 'AccountLinkTokenGet' test.out

#- 7 AccountLink
# body param: body
echo '{"token": "0IpK8lGD"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn ams \
    --op AccountLink \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 7 'AccountLink' test.out

#- 8 ArtifactGet
$CLI_EXE \
    --sn ams \
    --op ArtifactGet \
    --namespace $AB_NAMESPACE \
    --artifactType 'JsExH6wE' \
    --endDate 'i2xAwM2S' \
    --fleetID 'DogCXAIN' \
    --imageID 'idvMLklQ' \
    --maxSize '57' \
    --minSize '98' \
    --region 'mN9Mx5Mv' \
    --startDate 'QWa0NWyj' \
    --status 'KDdtF9cM' \
    > test.out 2>&1
eval_tap $? 8 'ArtifactGet' test.out

#- 9 ArtifactUsageGet
$CLI_EXE \
    --sn ams \
    --op ArtifactUsageGet \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 9 'ArtifactUsageGet' test.out

#- 10 ArtifactDelete
$CLI_EXE \
    --sn ams \
    --op ArtifactDelete \
    --artifactID 'X7sbLnPS' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 10 'ArtifactDelete' test.out

#- 11 ArtifactGetURL
$CLI_EXE \
    --sn ams \
    --op ArtifactGetURL \
    --artifactID 'agbHMnS0' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 11 'ArtifactGetURL' test.out

#- 12 FleetList
$CLI_EXE \
    --sn ams \
    --op FleetList \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 12 'FleetList' test.out

#- 13 FleetCreate
# body param: body
echo '{"active": false, "claimKeys": ["mDsVXmbe", "lMuRgJs1", "hYPeE71y"], "dsHostConfiguration": {"instanceId": "iiBRZz4C", "instanceType": "nydXbXeD", "serversPerVm": 4}, "imageDeploymentProfile": {"commandLine": "mbm9xEsf", "imageId": "MMaumwIk", "portConfigurations": [{"name": "DlpTNrFb", "protocol": "Ws1koDrP"}, {"name": "Z8ZwasST", "protocol": "GWxy9Wt7"}, {"name": "mYiFCqLq", "protocol": "dNpmFe41"}], "timeout": {"creation": 25, "drain": 51, "session": 20, "unresponsive": 12}}, "name": "mjjiER31", "regions": [{"bufferSize": 10, "maxServerCount": 38, "minServerCount": 16, "region": "SfimIKFW"}, {"bufferSize": 18, "maxServerCount": 79, "minServerCount": 16, "region": "dFLognKR"}, {"bufferSize": 53, "maxServerCount": 24, "minServerCount": 5, "region": "lj2udJDh"}], "samplingRules": {"coredumps": {"crashed": {"collect": false, "percentage": 10}, "success": {"collect": true, "percentage": 100}}, "logs": {"crashed": {"collect": true, "percentage": 82}, "success": {"collect": false, "percentage": 72}}}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn ams \
    --op FleetCreate \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 13 'FleetCreate' test.out

#- 14 FleetGet
$CLI_EXE \
    --sn ams \
    --op FleetGet \
    --fleetID '6bGCfpyb' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 14 'FleetGet' test.out

#- 15 FleetUpdate
# body param: body
echo '{"active": true, "claimKeys": ["1la9TjPv", "c05d1Zq0", "02YxTLXx"], "dsHostConfiguration": {"instanceId": "iKabCyBw", "instanceType": "KWPdzMCE", "serversPerVm": 3}, "imageDeploymentProfile": {"commandLine": "VDGr1si9", "imageId": "Kr3a3Yje", "portConfigurations": [{"name": "aIGlYzfz", "protocol": "hQvQk2wF"}, {"name": "U4nCKuGb", "protocol": "faZRPLlV"}, {"name": "c6PMGevU", "protocol": "YnuTrCcS"}], "timeout": {"creation": 32, "drain": 75, "session": 81, "unresponsive": 15}}, "name": "AUUFKd42", "regions": [{"bufferSize": 34, "maxServerCount": 26, "minServerCount": 66, "region": "597YNVdR"}, {"bufferSize": 59, "maxServerCount": 48, "minServerCount": 66, "region": "j6O5tNO7"}, {"bufferSize": 30, "maxServerCount": 46, "minServerCount": 60, "region": "964DdVnZ"}], "samplingRules": {"coredumps": {"crashed": {"collect": false, "percentage": 86}, "success": {"collect": false, "percentage": 89}}, "logs": {"crashed": {"collect": true, "percentage": 11}, "success": {"collect": true, "percentage": 3}}}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn ams \
    --op FleetUpdate \
    --fleetID 'fGHdvkdD' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 15 'FleetUpdate' test.out

#- 16 FleetDelete
$CLI_EXE \
    --sn ams \
    --op FleetDelete \
    --fleetID '3F9RZFbe' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 16 'FleetDelete' test.out

#- 17 FleetArtifactSamplingRulesGet
$CLI_EXE \
    --sn ams \
    --op FleetArtifactSamplingRulesGet \
    --fleetID 'OffhKb3j' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 17 'FleetArtifactSamplingRulesGet' test.out

#- 18 FleetArtifactSamplingRulesSet
# body param: body
echo '{"coredumps": {"crashed": {"collect": true, "percentage": 49}, "success": {"collect": true, "percentage": 51}}, "logs": {"crashed": {"collect": false, "percentage": 47}, "success": {"collect": true, "percentage": 40}}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn ams \
    --op FleetArtifactSamplingRulesSet \
    --fleetID 'cOmRjnUz' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 18 'FleetArtifactSamplingRulesSet' test.out

#- 19 FleetServers
$CLI_EXE \
    --sn ams \
    --op FleetServers \
    --fleetID 'J7WlhIoB' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 19 'FleetServers' test.out

#- 20 FleetServerHistory
$CLI_EXE \
    --sn ams \
    --op FleetServerHistory \
    --fleetID 'WNmG0Sop' \
    --namespace $AB_NAMESPACE \
    --count '91' \
    --offset '40' \
    --reason 'QnLR5NjK' \
    --region 'Eqx64Sfd' \
    --serverId 'NJsJwPNO' \
    --sortDirection 'omR6QmMo' \
    --status '9QYdOtFP' \
    > test.out 2>&1
eval_tap $? 20 'FleetServerHistory' test.out

#- 21 ImageList
$CLI_EXE \
    --sn ams \
    --op ImageList \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 21 'ImageList' test.out

#- 22 ImageGet
$CLI_EXE \
    --sn ams \
    --op ImageGet \
    --imageID 'JCnChLpf' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 22 'ImageGet' test.out

#- 23 ImagePatch
# body param: body
echo '{"addedTags": ["iqi55Tf2", "OPtGi5lV", "jLYcX37K"], "isProtected": true, "name": "TUtXHBSq", "removedTags": ["1PcLPEZJ", "lgzN6uPi", "kUJko1Ci"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn ams \
    --op ImagePatch \
    --imageID 'XZAPjhzV' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 23 'ImagePatch' test.out

#- 24 QoSRegionsGet
$CLI_EXE \
    --sn ams \
    --op QoSRegionsGet \
    --namespace $AB_NAMESPACE \
    --status 'WelzWziY' \
    > test.out 2>&1
eval_tap $? 24 'QoSRegionsGet' test.out

#- 25 QoSRegionsUpdate
# body param: body
echo '{"status": "cinCQcXx"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn ams \
    --op QoSRegionsUpdate \
    --namespace $AB_NAMESPACE \
    --region 'jk0YFfkN' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 25 'QoSRegionsUpdate' test.out

#- 26 InfoRegions
$CLI_EXE \
    --sn ams \
    --op InfoRegions \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 26 'InfoRegions' test.out

#- 27 FleetServerInfo
$CLI_EXE \
    --sn ams \
    --op FleetServerInfo \
    --namespace $AB_NAMESPACE \
    --serverID 'QpiF9GqG' \
    > test.out 2>&1
eval_tap $? 27 'FleetServerInfo' test.out

#- 28 ServerHistory
$CLI_EXE \
    --sn ams \
    --op ServerHistory \
    --namespace $AB_NAMESPACE \
    --serverID 'UHvg6o88' \
    > test.out 2>&1
eval_tap $? 28 'ServerHistory' test.out

#- 29 InfoSupportedInstances
$CLI_EXE \
    --sn ams \
    --op InfoSupportedInstances \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 29 'InfoSupportedInstances' test.out

#- 30 FleetClaimByID
# body param: body
echo '{"region": "Ld3OB73J"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn ams \
    --op FleetClaimByID \
    --fleetID 'SBcLBmaH' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 30 'FleetClaimByID' test.out

#- 31 LocalWatchdogConnect
$CLI_EXE \
    --sn ams \
    --op LocalWatchdogConnect \
    --namespace $AB_NAMESPACE \
    --watchdogID 'ThT2PRqD' \
    > test.out 2>&1
eval_tap $? 31 'LocalWatchdogConnect' test.out

#- 32 FleetClaimByKeys
# body param: body
echo '{"claimKeys": ["5POcqPTH", "yehLNnuv", "nDCVqhPj"], "regions": ["80d9ZFK2", "xkHEgztD", "PclblaC8"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn ams \
    --op FleetClaimByKeys \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 32 'FleetClaimByKeys' test.out

#- 33 WatchdogConnect
$CLI_EXE \
    --sn ams \
    --op WatchdogConnect \
    --namespace $AB_NAMESPACE \
    --watchdogID 'pqAYIzjX' \
    > test.out 2>&1
eval_tap $? 33 'WatchdogConnect' test.out

#- 34 Func1
$CLI_EXE \
    --sn ams \
    --op Func1 \
    > test.out 2>&1
eval_tap $? 34 'Func1' test.out

#- 35 BasicHealthCheck
$CLI_EXE \
    --sn ams \
    --op BasicHealthCheck \
    > test.out 2>&1
eval_tap $? 35 'BasicHealthCheck' test.out


# remove artifacts
rm -f "$CLI_TOKEN_FILE"
rm -f "$TEMP_JSON_INPUT"
rm -f "$TEMP_FILE_UPLOAD"

exit $EXIT_CODE