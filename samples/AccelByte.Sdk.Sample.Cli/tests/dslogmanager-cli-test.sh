#!/usr/bin/env bash

# Copyright (c) 2021 AccelByte Inc. All Rights Reserved.
# This is licensed software from AccelByte Inc, for limitations
# and restrictions contact your company contract manager.

# This code is generated by tool. DO NOT EDIT.

# Meta:
# - random seed: 
# - template file: 

# Instructions:
# - Run the Justice SDK Mock Server first before running this script.

export AB_BASE_URL="http://127.0.0.1:8080"
export AB_CLIENT_ID="admin"
export AB_CLIENT_SECRET="admin"
export AB_NAMESPACE="test"
export AB_APP_NAME="UnitTest"

EXIT_CODE=0

eval_tap() {
  if [ $1 -eq 0 ]; then
    echo "ok $2 - $3"
  else
    EXIT_CODE=1
    echo "not ok $2 - $3"
    sed 's/^/# /g' $4
  fi
  rm -f $4
}

CLI_EXE="AccelByte.Sdk.Sample.Cli"
CLI_TOKEN_FILE="$(dirname "$(which $CLI_EXE)")/token.json"
TEMP_JSON_INPUT="input_json.json"
TEMP_FILE_UPLOAD="file_upload.bin"

echo "TAP version 13"
echo "1..8"

#- 1 Login
$CLI_EXE --op login --lt user --user user --pass user > test.out 2>&1
eval_tap $? 1 'Login' test.out

if [ $EXIT_CODE -ne 0 ]; then
  echo "Bail out! Login failed."
  exit $EXIT_CODE
fi

# echo "foo" > "$CLI_TOKEN_FILE"

#- 2 GetServerLogs
$CLI_EXE \
    --sn dslogmanager \
    --op GetServerLogs \
    --namespace $AB_NAMESPACE \
    --podName 'CFdsCXpZ' \
    --logType 'IG7OitHj' \
    --offset '86' \
    --origin 'eH0pmKUR' \
    > test.out 2>&1
eval_tap $? 2 'GetServerLogs' test.out

#- 3 ListTerminatedServers
$CLI_EXE \
    --sn dslogmanager \
    --op ListTerminatedServers \
    --namespace $AB_NAMESPACE \
    --deployment 'cZHxlFbn' \
    --endDate '6CgTOx9K' \
    --gameMode 'oVpohbt9' \
    --limit '28' \
    --next 'Pk4LFjMq' \
    --partyId 'aImfX38A' \
    --podName 'mfRJiek1' \
    --previous 'ToxaOJ6s' \
    --provider 'Flgb1e0X' \
    --region 'olE1GMND' \
    --sessionId '5vss5Wkp' \
    --source 'fUbw2lI8' \
    --startDate '2bM7m8gI' \
    --status 'v5pvAPge' \
    --userId 'CNu2LsKa' \
    > test.out 2>&1
eval_tap $? 3 'ListTerminatedServers' test.out

#- 4 DownloadServerLogs
$CLI_EXE \
    --sn dslogmanager \
    --op DownloadServerLogs \
    --namespace $AB_NAMESPACE \
    --podName 'rTSRhjW5' \
    > test.out 2>&1
eval_tap $? 4 'DownloadServerLogs' test.out

#- 5 CheckServerLogs
$CLI_EXE \
    --sn dslogmanager \
    --op CheckServerLogs \
    --namespace $AB_NAMESPACE \
    --podName 'fN8nopkC' \
    > test.out 2>&1
eval_tap $? 5 'CheckServerLogs' test.out

#- 6 BatchDownloadServerLogs
# body param: body
echo '{"Downloads": [{"alloc_id": "2Kqn43PC", "namespace": "hca38bcx", "pod_name": "Pevy8Srl"}, {"alloc_id": "4Az4TXEK", "namespace": "j2zQrodx", "pod_name": "ZmvkGROH"}, {"alloc_id": "QheDtaus", "namespace": "SaUMR31c", "pod_name": "pMziYtd6"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn dslogmanager \
    --op BatchDownloadServerLogs \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 6 'BatchDownloadServerLogs' test.out

#- 7 ListAllTerminatedServers
$CLI_EXE \
    --sn dslogmanager \
    --op ListAllTerminatedServers \
    --deployment 'yW4jSNm5' \
    --endDate 'yWqe9gXY' \
    --gameMode '2Py5Ep8U' \
    --limit '73' \
    --namespace_ '47QSqmUW' \
    --next '0TsBP8Pa' \
    --partyId 'da5sTTVv' \
    --podName 'fCTGSCwY' \
    --previous 'fWloEObQ' \
    --provider 'vpMI3Zxg' \
    --region 'm9JsE2V8' \
    --sessionId 'BzZqERAl' \
    --startDate 'fNpjSD5o' \
    --status 'E4yFncg6' \
    --userId 'xVDPw0wb' \
    > test.out 2>&1
eval_tap $? 7 'ListAllTerminatedServers' test.out

#- 8 PublicGetMessages
$CLI_EXE \
    --sn dslogmanager \
    --op PublicGetMessages \
    > test.out 2>&1
eval_tap $? 8 'PublicGetMessages' test.out


# remove artifacts
rm -f "$CLI_TOKEN_FILE"
rm -f "$TEMP_JSON_INPUT"
rm -f "$TEMP_FILE_UPLOAD"

exit $EXIT_CODE