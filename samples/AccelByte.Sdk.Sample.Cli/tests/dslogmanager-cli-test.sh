#!/usr/bin/env bash

# Copyright (c) 2021 AccelByte Inc. All Rights Reserved.
# This is licensed software from AccelByte Inc, for limitations
# and restrictions contact your company contract manager.

# This code is generated by tool. DO NOT EDIT.

# Meta:
# - random seed: 
# - template file: 

# Instructions:
# - Run the Justice SDK Mock Server first before running this script.

export AB_BASE_URL="http://127.0.0.1:8080"
export AB_CLIENT_ID="admin"
export AB_CLIENT_SECRET="admin"
export AB_NAMESPACE="test"
export AB_APP_NAME="UnitTest"

EXIT_CODE=0

eval_tap() {
  if [ $1 -eq 0 ]; then
    echo "ok $2 - $3"
  else
    EXIT_CODE=1
    echo "not ok $2 - $3"
    sed 's/^/# /g' $4
  fi
  rm -f $4
}

CLI_EXE="AccelByte.Sdk.Sample.Cli"
CLI_TOKEN_FILE="$(dirname "$(which $CLI_EXE)")/token.json"
TEMP_JSON_INPUT="input_json.json"
TEMP_FILE_UPLOAD="file_upload.bin"

echo "TAP version 13"
echo "1..9"

#- 1 Login
$CLI_EXE --op login --lt user --user user --pass user > test.out 2>&1
eval_tap $? 1 'Login' test.out

if [ $EXIT_CODE -ne 0 ]; then
  echo "Bail out! Login failed."
  exit $EXIT_CODE
fi

# echo "foo" > "$CLI_TOKEN_FILE"

#- 2 GetServerLogs
$CLI_EXE \
    --sn dslogmanager \
    --op GetServerLogs \
    --namespace $AB_NAMESPACE \
    --podName 'RYWem1ET' \
    --logType 'LgL3y158' \
    --offset '7' \
    --origin 'QhjpRgrP' \
    > test.out 2>&1
eval_tap $? 2 'GetServerLogs' test.out

#- 3 ListTerminatedServers
$CLI_EXE \
    --sn dslogmanager \
    --op ListTerminatedServers \
    --namespace $AB_NAMESPACE \
    --deployment '5M7MENLE' \
    --endDate 'uBTLf0zo' \
    --gameMode 'df55prVP' \
    --limit '73' \
    --next 'B7Znv94U' \
    --partyId '3RIbyDCY' \
    --podName 'mo4xXGmF' \
    --previous 'bvLKfXyw' \
    --provider 'X7TfGbnl' \
    --region '5WwBatyB' \
    --sessionId '7xJ2XNla' \
    --source 'gvqylz6J' \
    --startDate 'oxvnpFOh' \
    --status '2AFerrgN' \
    --userId '8MCK5Ww8' \
    > test.out 2>&1
eval_tap $? 3 'ListTerminatedServers' test.out

#- 4 DownloadServerLogs
$CLI_EXE \
    --sn dslogmanager \
    --op DownloadServerLogs \
    --namespace $AB_NAMESPACE \
    --podName 'qhXpD52N' \
    > test.out 2>&1
eval_tap $? 4 'DownloadServerLogs' test.out

#- 5 CheckServerLogs
$CLI_EXE \
    --sn dslogmanager \
    --op CheckServerLogs \
    --namespace $AB_NAMESPACE \
    --podName 'nFfuVjbI' \
    > test.out 2>&1
eval_tap $? 5 'CheckServerLogs' test.out

#- 6 BatchDownloadServerLogs
# body param: body
echo '{"Downloads": [{"alloc_id": "NVychAty", "namespace": "548Hqpom", "pod_name": "Cmfb1lNZ"}, {"alloc_id": "h6gusVqh", "namespace": "yg8VAtRa", "pod_name": "Q2iH08JQ"}, {"alloc_id": "uDynkNv9", "namespace": "eH4vsVyq", "pod_name": "P9cuWmkB"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn dslogmanager \
    --op BatchDownloadServerLogs \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 6 'BatchDownloadServerLogs' test.out

#- 7 ListMetadataServers
# body param: body
echo '{"pod_names": ["C263M4gu", "M46Ol4Xf", "ankHK9yW"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn dslogmanager \
    --op ListMetadataServers \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 7 'ListMetadataServers' test.out

#- 8 ListAllTerminatedServers
$CLI_EXE \
    --sn dslogmanager \
    --op ListAllTerminatedServers \
    --deployment 'UjdRyau7' \
    --endDate 'mhx9EHmr' \
    --gameMode 'DmVJ8NwE' \
    --limit '65' \
    --namespace_ 'OohRwtnY' \
    --next 'aGKTx3fP' \
    --partyId '0NJxPhAx' \
    --podName 'srkNvvnV' \
    --previous 'J6KTvPIm' \
    --provider 'tbX3PMVs' \
    --region 'uShyo09n' \
    --sessionId 'kOctfTSK' \
    --startDate 'ZlW50wDP' \
    --status '896lnWkY' \
    --userId 'PXgPYkr9' \
    > test.out 2>&1
eval_tap $? 8 'ListAllTerminatedServers' test.out

#- 9 PublicGetMessages
$CLI_EXE \
    --sn dslogmanager \
    --op PublicGetMessages \
    > test.out 2>&1
eval_tap $? 9 'PublicGetMessages' test.out


# remove artifacts
rm -f "$CLI_TOKEN_FILE"
rm -f "$TEMP_JSON_INPUT"
rm -f "$TEMP_FILE_UPLOAD"

exit $EXIT_CODE