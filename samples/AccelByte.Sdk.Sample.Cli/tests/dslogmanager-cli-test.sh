#!/usr/bin/env bash

# Copyright (c) 2021 AccelByte Inc. All Rights Reserved.
# This is licensed software from AccelByte Inc, for limitations
# and restrictions contact your company contract manager.

# This code is generated by tool. DO NOT EDIT.

# Meta:
# - random seed: 
# - template file: 

# Instructions:
# - Run the Justice SDK Mock Server first before running this script.

export AB_BASE_URL="http://127.0.0.1:8080"
export AB_CLIENT_ID="admin"
export AB_CLIENT_SECRET="admin"
export AB_NAMESPACE="test"
export AB_APP_NAME="UnitTest"

EXIT_CODE=0

eval_tap() {
  if [ $1 -eq 0 ]; then
    echo "ok $2 - $3"
  else
    EXIT_CODE=1
    echo "not ok $2 - $3"
    sed 's/^/# /g' $4
  fi
  rm -f $4
}

CLI_EXE="AccelByte.Sdk.Sample.Cli"
CLI_TOKEN_FILE="$(dirname "$(which $CLI_EXE)")/token.json"
TEMP_JSON_INPUT="input_json.json"
TEMP_FILE_UPLOAD="file_upload.bin"

echo "TAP version 13"
echo "1..8"

#- 1 Login
$CLI_EXE --op login --lt user --user user --pass user > test.out 2>&1
eval_tap $? 1 'Login' test.out

if [ $EXIT_CODE -ne 0 ]; then
  echo "Bail out! Login failed."
  exit $EXIT_CODE
fi

# echo "foo" > "$CLI_TOKEN_FILE"

#- 2 GetServerLogs
$CLI_EXE \
    --sn dslogmanager \
    --op GetServerLogs \
    --namespace $AB_NAMESPACE \
    --podName 'q1VAIXQG' \
    --logType 'NnEpJ9LK' \
    --offset '40' \
    --origin '6AkGcmJM' \
    > test.out 2>&1
eval_tap $? 2 'GetServerLogs' test.out

#- 3 ListTerminatedServers
$CLI_EXE \
    --sn dslogmanager \
    --op ListTerminatedServers \
    --namespace $AB_NAMESPACE \
    --deployment '9XVkI1OW' \
    --endDate 'YqZvM3TZ' \
    --gameMode 'CeVL9wBV' \
    --limit '46' \
    --next 'tAa6lYz6' \
    --partyId 'YjAfpUzg' \
    --podName 'FaSR0aXy' \
    --previous 'e88pE3ZN' \
    --provider 'mdRqTkl5' \
    --region 'bWGQY3Wh' \
    --sessionId 'pHuvPTTe' \
    --source 'iybnyZTZ' \
    --startDate 'n6AyrTFd' \
    --status 'wfiru6ke' \
    --userId 'RerIA4Tz' \
    > test.out 2>&1
eval_tap $? 3 'ListTerminatedServers' test.out

#- 4 DownloadServerLogs
$CLI_EXE \
    --sn dslogmanager \
    --op DownloadServerLogs \
    --namespace $AB_NAMESPACE \
    --podName 'FZuhewDl' \
    > test.out 2>&1
eval_tap $? 4 'DownloadServerLogs' test.out

#- 5 CheckServerLogs
$CLI_EXE \
    --sn dslogmanager \
    --op CheckServerLogs \
    --namespace $AB_NAMESPACE \
    --podName 'OylbIu4z' \
    > test.out 2>&1
eval_tap $? 5 'CheckServerLogs' test.out

#- 6 BatchDownloadServerLogs
# body param: body
echo '{"Downloads": [{"alloc_id": "enfGhxUN", "namespace": "YWwTSUqN", "pod_name": "4hMOGc0p"}, {"alloc_id": "4dHWa2IC", "namespace": "oenMQQr8", "pod_name": "5ApKpVtN"}, {"alloc_id": "8rj396eM", "namespace": "nJc37BZt", "pod_name": "pjTq5xmR"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn dslogmanager \
    --op BatchDownloadServerLogs \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 6 'BatchDownloadServerLogs' test.out

#- 7 ListAllTerminatedServers
$CLI_EXE \
    --sn dslogmanager \
    --op ListAllTerminatedServers \
    --deployment 'L5aBAdxv' \
    --endDate '46cjlMN2' \
    --gameMode 'j2lhsUs6' \
    --limit '28' \
    --namespace_ 'szNBXI0K' \
    --next '3sDbt4zX' \
    --partyId 'wNbq5dSj' \
    --podName 'N3NyZh2c' \
    --previous 'TJgkxxy4' \
    --provider 'gmz1rlMr' \
    --region 'XbB411Hk' \
    --sessionId 'nKxTOlF3' \
    --startDate 'ywXQIiTZ' \
    --status 'ZyGX4KkF' \
    --userId 'obYFKEfG' \
    > test.out 2>&1
eval_tap $? 7 'ListAllTerminatedServers' test.out

#- 8 PublicGetMessages
$CLI_EXE \
    --sn dslogmanager \
    --op PublicGetMessages \
    > test.out 2>&1
eval_tap $? 8 'PublicGetMessages' test.out


# remove artifacts
rm -f "$CLI_TOKEN_FILE"
rm -f "$TEMP_JSON_INPUT"
rm -f "$TEMP_FILE_UPLOAD"

exit $EXIT_CODE