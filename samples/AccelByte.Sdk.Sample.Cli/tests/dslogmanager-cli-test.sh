#!/usr/bin/env bash

# Copyright (c) 2021 AccelByte Inc. All Rights Reserved.
# This is licensed software from AccelByte Inc, for limitations
# and restrictions contact your company contract manager.

# This code is generated by tool. DO NOT EDIT.

# Meta:
# - random seed: 
# - template file: 

# Instructions:
# - Run the Justice SDK Mock Server first before running this script.

export AB_BASE_URL="http://127.0.0.1:8080"
export AB_CLIENT_ID="admin"
export AB_CLIENT_SECRET="admin"
export AB_NAMESPACE="test"
export AB_APP_NAME="UnitTest"

EXIT_CODE=0

eval_tap() {
  if [ $1 -eq 0 ]; then
    echo "ok $2 - $3"
  else
    EXIT_CODE=1
    echo "not ok $2 - $3"
    sed 's/^/# /g' $4
  fi
  rm -f $4
}

CLI_EXE="AccelByte.Sdk.Sample.Cli"
CLI_TOKEN_FILE="$(dirname "$(which $CLI_EXE)")/token.json"
TEMP_JSON_INPUT="input_json.json"
TEMP_FILE_UPLOAD="file_upload.bin"

echo "TAP version 13"
echo "1..9"

#- 1 Login
$CLI_EXE --op login --lt user --user user --pass user > test.out 2>&1
eval_tap $? 1 'Login' test.out

if [ $EXIT_CODE -ne 0 ]; then
  echo "Bail out! Login failed."
  exit $EXIT_CODE
fi

# echo "foo" > "$CLI_TOKEN_FILE"

#- 2 GetServerLogs
$CLI_EXE \
    --sn dslogmanager \
    --op GetServerLogs \
    --namespace $AB_NAMESPACE \
    --podName 'ZAkQFFpG' \
    --logType 'S4wsb0Ua' \
    --offset '94' \
    --origin 'euyP6mip' \
    > test.out 2>&1
eval_tap $? 2 'GetServerLogs' test.out

#- 3 ListTerminatedServers
$CLI_EXE \
    --sn dslogmanager \
    --op ListTerminatedServers \
    --namespace $AB_NAMESPACE \
    --deployment 'kVh5bJYn' \
    --endDate 'C9cqHknK' \
    --gameMode '7ftXGR18' \
    --limit '2' \
    --next '3QwymlSq' \
    --partyId 'Xom81k0I' \
    --podName 'nEbjOeeX' \
    --previous 'guksftuR' \
    --provider '2k49OH2z' \
    --region 'cYNp0Nki' \
    --sessionId 'Elm9vZ2y' \
    --source 'TqTszmKA' \
    --startDate 'oS9MXT1J' \
    --status 'cVwKa2Fl' \
    --userId 'YHGPwJyP' \
    > test.out 2>&1
eval_tap $? 3 'ListTerminatedServers' test.out

#- 4 DownloadServerLogs
$CLI_EXE \
    --sn dslogmanager \
    --op DownloadServerLogs \
    --namespace $AB_NAMESPACE \
    --podName 'nn2XfW8Y' \
    > test.out 2>&1
eval_tap $? 4 'DownloadServerLogs' test.out

#- 5 CheckServerLogs
$CLI_EXE \
    --sn dslogmanager \
    --op CheckServerLogs \
    --namespace $AB_NAMESPACE \
    --podName 'RhSwZwcC' \
    > test.out 2>&1
eval_tap $? 5 'CheckServerLogs' test.out

#- 6 BatchDownloadServerLogs
# body param: body
echo '{"Downloads": [{"alloc_id": "Z4NQYJXI", "namespace": "lISxW8K9", "pod_name": "laVlYmxS"}, {"alloc_id": "cE6Zy3Nj", "namespace": "V8Qm2wBb", "pod_name": "VcWut3N8"}, {"alloc_id": "zVX0MVNK", "namespace": "ooDQNpHM", "pod_name": "2nSVXaNO"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn dslogmanager \
    --op BatchDownloadServerLogs \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 6 'BatchDownloadServerLogs' test.out

#- 7 ListMetadataServers
# body param: body
echo '{"pod_names": ["14rvAwS6", "6ylNOsOI", "yvGl6O6N"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn dslogmanager \
    --op ListMetadataServers \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 7 'ListMetadataServers' test.out

#- 8 ListAllTerminatedServers
$CLI_EXE \
    --sn dslogmanager \
    --op ListAllTerminatedServers \
    --deployment '5hCycM5c' \
    --endDate '8KtKkSsM' \
    --gameMode 'NzripjtA' \
    --limit '69' \
    --namespace_ 'XHg2h7kj' \
    --next 'yBQ8McYk' \
    --partyId 'TvP1K7wd' \
    --podName 'kcRHYCFV' \
    --previous 'YAdwfXIG' \
    --provider 'T6ApofDf' \
    --region '2CCvY76o' \
    --sessionId 't3LDXxCp' \
    --startDate 'YoMz8qjR' \
    --status 'BmaqARk0' \
    --userId '4B4OnLfe' \
    > test.out 2>&1
eval_tap $? 8 'ListAllTerminatedServers' test.out

#- 9 PublicGetMessages
$CLI_EXE \
    --sn dslogmanager \
    --op PublicGetMessages \
    > test.out 2>&1
eval_tap $? 9 'PublicGetMessages' test.out


# remove artifacts
rm -f "$CLI_TOKEN_FILE"
rm -f "$TEMP_JSON_INPUT"
rm -f "$TEMP_FILE_UPLOAD"

exit $EXIT_CODE