#!/usr/bin/env bash

# Copyright (c) 2021 AccelByte Inc. All Rights Reserved.
# This is licensed software from AccelByte Inc, for limitations
# and restrictions contact your company contract manager.

# This code is generated by tool. DO NOT EDIT.

# Meta:
# - random seed: 
# - template file: 

# Instructions:
# - Run the Justice SDK Mock Server first before running this script.

export AB_BASE_URL="http://127.0.0.1:8080"
export AB_CLIENT_ID="admin"
export AB_CLIENT_SECRET="admin"
export AB_NAMESPACE="test"
export AB_APP_NAME="UnitTest"

EXIT_CODE=0

eval_tap() {
  if [ $1 -eq 0 ]; then
    echo "ok $2 - $3"
  else
    EXIT_CODE=1
    echo "not ok $2 - $3"
    sed 's/^/# /g' $4
  fi
  rm -f $4
}

CLI_EXE="AccelByte.Sdk.Sample.Cli"
CLI_TOKEN_FILE="$(dirname "$(which $CLI_EXE)")/token.json"
TEMP_JSON_INPUT="input_json.json"
TEMP_FILE_UPLOAD="file_upload.bin"

echo "TAP version 13"
echo "1..8"

#- 1 Login
$CLI_EXE --op login --lt user --user user --pass user > test.out 2>&1
eval_tap $? 1 'Login' test.out

if [ $EXIT_CODE -ne 0 ]; then
  echo "Bail out! Login failed."
  exit $EXIT_CODE
fi

# echo "foo" > "$CLI_TOKEN_FILE"

#- 2 GetServerLogs
$CLI_EXE \
    --sn dslogmanager \
    --op GetServerLogs \
    --namespace $AB_NAMESPACE \
    --podName 'mb3HCaK1' \
    --logType '2zZc2MxD' \
    --offset '35' \
    --origin '8H3drC6d' \
    > test.out 2>&1
eval_tap $? 2 'GetServerLogs' test.out

#- 3 ListTerminatedServers
$CLI_EXE \
    --sn dslogmanager \
    --op ListTerminatedServers \
    --namespace $AB_NAMESPACE \
    --deployment 'VEYHlSJE' \
    --endDate 'ZCoAEkiD' \
    --gameMode 'edwDDWfd' \
    --limit '62' \
    --next 'wriXJoQ7' \
    --partyId 'fpVWTa9o' \
    --podName 'pSMdcaCx' \
    --previous 'KYUgImmh' \
    --provider 'no07hrJa' \
    --region 'XupYfjeT' \
    --sessionId 'HY5nYELR' \
    --source 'ijbznMpO' \
    --startDate 'Bna54zbq' \
    --status '0nTj6Ruu' \
    --userId 'NO6tFBLg' \
    > test.out 2>&1
eval_tap $? 3 'ListTerminatedServers' test.out

#- 4 DownloadServerLogs
$CLI_EXE \
    --sn dslogmanager \
    --op DownloadServerLogs \
    --namespace $AB_NAMESPACE \
    --podName '9NGWKoU9' \
    > test.out 2>&1
eval_tap $? 4 'DownloadServerLogs' test.out

#- 5 CheckServerLogs
$CLI_EXE \
    --sn dslogmanager \
    --op CheckServerLogs \
    --namespace $AB_NAMESPACE \
    --podName 'zGUiqfn0' \
    > test.out 2>&1
eval_tap $? 5 'CheckServerLogs' test.out

#- 6 BatchDownloadServerLogs
# body param: body
echo '{"Downloads": [{"alloc_id": "8BE6HRwY", "namespace": "UDzXg7Ww", "pod_name": "ob6wZkf0"}, {"alloc_id": "8kBKSjJp", "namespace": "QD73S43Y", "pod_name": "Wxu3eZi3"}, {"alloc_id": "sV13LmJJ", "namespace": "Hxwl3WF5", "pod_name": "kbj5VGsZ"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn dslogmanager \
    --op BatchDownloadServerLogs \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 6 'BatchDownloadServerLogs' test.out

#- 7 ListAllTerminatedServers
$CLI_EXE \
    --sn dslogmanager \
    --op ListAllTerminatedServers \
    --deployment 'svzWuOIR' \
    --endDate 'aymlCPXV' \
    --gameMode 'LmAIjRxp' \
    --limit '38' \
    --namespace_ 'NK8VV4R0' \
    --next 'ncly35pr' \
    --partyId 'nDm50Nmi' \
    --podName 'TfbuhSQw' \
    --previous 'uT9gUig0' \
    --provider 'zTn7bw8u' \
    --region 'MDyPi2WL' \
    --sessionId 'HBllm98N' \
    --startDate 'dEQz0xWE' \
    --status '51B5afqM' \
    --userId 'HaaB60i2' \
    > test.out 2>&1
eval_tap $? 7 'ListAllTerminatedServers' test.out

#- 8 PublicGetMessages
$CLI_EXE \
    --sn dslogmanager \
    --op PublicGetMessages \
    > test.out 2>&1
eval_tap $? 8 'PublicGetMessages' test.out


# remove artifacts
rm -f "$CLI_TOKEN_FILE"
rm -f "$TEMP_JSON_INPUT"
rm -f "$TEMP_FILE_UPLOAD"

exit $EXIT_CODE