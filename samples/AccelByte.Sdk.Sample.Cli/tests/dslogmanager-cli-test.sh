#!/usr/bin/env bash

# Copyright (c) 2021 AccelByte Inc. All Rights Reserved.
# This is licensed software from AccelByte Inc, for limitations
# and restrictions contact your company contract manager.

# This code is generated by tool. DO NOT EDIT.

# Meta:
# - random seed: 
# - template file: 

# Instructions:
# - Run the Justice SDK Mock Server first before running this script.

export AB_BASE_URL="http://127.0.0.1:8080"
export AB_CLIENT_ID="admin"
export AB_CLIENT_SECRET="admin"
export AB_NAMESPACE="test"
export AB_APP_NAME="UnitTest"

EXIT_CODE=0

eval_tap() {
  if [ $1 -eq 0 ]; then
    echo "ok $2 - $3"
  else
    EXIT_CODE=1
    echo "not ok $2 - $3"
    sed 's/^/# /g' $4
  fi
  rm -f $4
}

CLI_EXE="AccelByte.Sdk.Sample.Cli"
CLI_TOKEN_FILE="$(dirname "$(which $CLI_EXE)")/token.json"
TEMP_JSON_INPUT="input_json.json"
TEMP_FILE_UPLOAD="file_upload.bin"

echo "TAP version 13"
echo "1..9"

#- 1 Login
$CLI_EXE --op login --lt user --user user --pass user > test.out 2>&1
eval_tap $? 1 'Login' test.out

if [ $EXIT_CODE -ne 0 ]; then
  echo "Bail out! Login failed."
  exit $EXIT_CODE
fi

# echo "foo" > "$CLI_TOKEN_FILE"

#- 2 GetServerLogs
$CLI_EXE \
    --sn dslogmanager \
    --op GetServerLogs \
    --namespace $AB_NAMESPACE \
    --podName 'MdtaYcIB' \
    --logType 'O1X9hEfp' \
    --offset '41' \
    --origin 'RnOlr5tr' \
    > test.out 2>&1
eval_tap $? 2 'GetServerLogs' test.out

#- 3 ListTerminatedServers
$CLI_EXE \
    --sn dslogmanager \
    --op ListTerminatedServers \
    --namespace $AB_NAMESPACE \
    --deployment 'GzMcrQMF' \
    --endDate 'hLwnCIw9' \
    --gameMode 'gL73ul7C' \
    --limit '34' \
    --next '6m0re8Rd' \
    --partyId 'KknNHq8C' \
    --podName 'DoNEWV3C' \
    --previous 'MVBkNPhR' \
    --provider 'cXsG4oap' \
    --region 'Ycu2HEoc' \
    --sessionId '4ihD7aoi' \
    --source 'TbIsQuFx' \
    --startDate 'rTqoDV57' \
    --status 'Wi0q6pTC' \
    --userId 'Hlv104rg' \
    > test.out 2>&1
eval_tap $? 3 'ListTerminatedServers' test.out

#- 4 DownloadServerLogs
$CLI_EXE \
    --sn dslogmanager \
    --op DownloadServerLogs \
    --namespace $AB_NAMESPACE \
    --podName 'UQqwDQ9H' \
    > test.out 2>&1
eval_tap $? 4 'DownloadServerLogs' test.out

#- 5 CheckServerLogs
$CLI_EXE \
    --sn dslogmanager \
    --op CheckServerLogs \
    --namespace $AB_NAMESPACE \
    --podName 'q8KKvvXZ' \
    > test.out 2>&1
eval_tap $? 5 'CheckServerLogs' test.out

#- 6 BatchDownloadServerLogs
# body param: body
echo '{"Downloads": [{"alloc_id": "JmRCTUeg", "namespace": "YnYPN9U0", "pod_name": "h0escilc"}, {"alloc_id": "VCIxzYv9", "namespace": "PQxrQnGL", "pod_name": "L9u56rJy"}, {"alloc_id": "6xdmeO0a", "namespace": "ph3ZaxSE", "pod_name": "zgbZwz4i"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn dslogmanager \
    --op BatchDownloadServerLogs \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 6 'BatchDownloadServerLogs' test.out

#- 7 ListMetadataServers
# body param: body
echo '{"pod_names": ["XAta1UQt", "HNVxYoIT", "wnicc9sL"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn dslogmanager \
    --op ListMetadataServers \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 7 'ListMetadataServers' test.out

#- 8 ListAllTerminatedServers
$CLI_EXE \
    --sn dslogmanager \
    --op ListAllTerminatedServers \
    --deployment 'tDzYGyiS' \
    --endDate 'HZdNa6ZD' \
    --gameMode 'mhBdY0uM' \
    --limit '53' \
    --namespace_ 'xRu4zwkA' \
    --next 'KA8AIsmg' \
    --partyId '5Zmyqyh3' \
    --podName '0MqcOAUp' \
    --previous 'qi8wyZVD' \
    --provider 'bMjtSvSI' \
    --region 'llabagLm' \
    --sessionId 'bprzVP7q' \
    --startDate 'mdrNc4WV' \
    --status 'BADU2W1Y' \
    --userId 'WJGh5ZNC' \
    > test.out 2>&1
eval_tap $? 8 'ListAllTerminatedServers' test.out

#- 9 PublicGetMessages
$CLI_EXE \
    --sn dslogmanager \
    --op PublicGetMessages \
    > test.out 2>&1
eval_tap $? 9 'PublicGetMessages' test.out


# remove artifacts
rm -f "$CLI_TOKEN_FILE"
rm -f "$TEMP_JSON_INPUT"
rm -f "$TEMP_FILE_UPLOAD"

exit $EXIT_CODE