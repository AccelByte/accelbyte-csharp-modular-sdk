#!/usr/bin/env bash

# Copyright (c) 2021 AccelByte Inc. All Rights Reserved.
# This is licensed software from AccelByte Inc, for limitations
# and restrictions contact your company contract manager.

# This code is generated by tool. DO NOT EDIT.

# Meta:
# - random seed: 
# - template file: 

# Instructions:
# - Run the Justice SDK Mock Server first before running this script.

export AB_BASE_URL="http://127.0.0.1:8080"
export AB_CLIENT_ID="admin"
export AB_CLIENT_SECRET="admin"
export AB_NAMESPACE="test"
export AB_APP_NAME="UnitTest"

EXIT_CODE=0

eval_tap() {
  if [ $1 -eq 0 ]; then
    echo "ok $2 - $3"
  else
    EXIT_CODE=1
    echo "not ok $2 - $3"
    sed 's/^/# /g' $4
  fi
  rm -f $4
}

CLI_EXE="AccelByte.Sdk.Sample.Cli"
CLI_TOKEN_FILE="$(dirname "$(which $CLI_EXE)")/token.json"
TEMP_JSON_INPUT="input_json.json"
TEMP_FILE_UPLOAD="file_upload.bin"

echo "TAP version 13"
echo "1..8"

#- 1 Login
$CLI_EXE --op login --lt user --user user --pass user > test.out 2>&1
eval_tap $? 1 'Login' test.out

if [ $EXIT_CODE -ne 0 ]; then
  echo "Bail out! Login failed."
  exit $EXIT_CODE
fi

# echo "foo" > "$CLI_TOKEN_FILE"

#- 2 GetServerLogs
$CLI_EXE \
    --sn dslogmanager \
    --op GetServerLogs \
    --namespace $AB_NAMESPACE \
    --podName 'jI5iMx2Y' \
    --logType 'MKGJC995' \
    --offset '90' \
    --origin '3mPqhXao' \
    > test.out 2>&1
eval_tap $? 2 'GetServerLogs' test.out

#- 3 ListTerminatedServers
$CLI_EXE \
    --sn dslogmanager \
    --op ListTerminatedServers \
    --namespace $AB_NAMESPACE \
    --deployment '5i4gEc6q' \
    --endDate 'Nv9ncDgu' \
    --gameMode 'CE1x5xUH' \
    --limit '90' \
    --next 'Og4Ln9Ge' \
    --partyId '1MRj1Cks' \
    --podName 'IA5iVXf9' \
    --previous 'UOawZsKo' \
    --provider '47X52xIF' \
    --region 'PSENWIe1' \
    --sessionId 'VzoJC3st' \
    --source 'h7ZYt1qn' \
    --startDate 'iY0sjI8H' \
    --status 'qHYXRgJl' \
    --userId 'TTKVKSAd' \
    > test.out 2>&1
eval_tap $? 3 'ListTerminatedServers' test.out

#- 4 DownloadServerLogs
$CLI_EXE \
    --sn dslogmanager \
    --op DownloadServerLogs \
    --namespace $AB_NAMESPACE \
    --podName 'ncjeiQrS' \
    > test.out 2>&1
eval_tap $? 4 'DownloadServerLogs' test.out

#- 5 CheckServerLogs
$CLI_EXE \
    --sn dslogmanager \
    --op CheckServerLogs \
    --namespace $AB_NAMESPACE \
    --podName '2NwvBeRz' \
    > test.out 2>&1
eval_tap $? 5 'CheckServerLogs' test.out

#- 6 BatchDownloadServerLogs
# body param: body
echo '{"Downloads": [{"alloc_id": "YQ3oVNyq", "namespace": "feops8s9", "pod_name": "D5D4nQ0e"}, {"alloc_id": "0qjEvZwF", "namespace": "XhWk4Zr4", "pod_name": "7c2TeuG4"}, {"alloc_id": "IcsUCcIT", "namespace": "BJQ9e2a5", "pod_name": "baKRRwnk"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn dslogmanager \
    --op BatchDownloadServerLogs \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 6 'BatchDownloadServerLogs' test.out

#- 7 ListAllTerminatedServers
$CLI_EXE \
    --sn dslogmanager \
    --op ListAllTerminatedServers \
    --deployment 'NcjeX3n4' \
    --endDate '3RZmmVCw' \
    --gameMode '2icQ15hj' \
    --limit '52' \
    --namespace_ 'ICrOMK84' \
    --next '0a5BwxT9' \
    --partyId 'W9BYCKYj' \
    --podName 'gJbBAcTT' \
    --previous 'OHCdkh6d' \
    --provider 'yTMhPb7e' \
    --region 'gKjEs4v1' \
    --sessionId 'Xoi46sZd' \
    --startDate 'yap1L1Z3' \
    --status 'Wu6DPCct' \
    --userId 'zVX6qx6l' \
    > test.out 2>&1
eval_tap $? 7 'ListAllTerminatedServers' test.out

#- 8 PublicGetMessages
$CLI_EXE \
    --sn dslogmanager \
    --op PublicGetMessages \
    > test.out 2>&1
eval_tap $? 8 'PublicGetMessages' test.out


# remove artifacts
rm -f "$CLI_TOKEN_FILE"
rm -f "$TEMP_JSON_INPUT"
rm -f "$TEMP_FILE_UPLOAD"

exit $EXIT_CODE