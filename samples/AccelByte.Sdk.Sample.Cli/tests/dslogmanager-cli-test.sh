#!/usr/bin/env bash

# Copyright (c) 2021 AccelByte Inc. All Rights Reserved.
# This is licensed software from AccelByte Inc, for limitations
# and restrictions contact your company contract manager.

# This code is generated by tool. DO NOT EDIT.

# Meta:
# - random seed: 
# - template file: 

# Instructions:
# - Run the Justice SDK Mock Server first before running this script.

export AB_BASE_URL="http://127.0.0.1:8080"
export AB_CLIENT_ID="admin"
export AB_CLIENT_SECRET="admin"
export AB_NAMESPACE="test"
export AB_APP_NAME="UnitTest"

EXIT_CODE=0

eval_tap() {
  if [ $1 -eq 0 ]; then
    echo "ok $2 - $3"
  else
    EXIT_CODE=1
    echo "not ok $2 - $3"
    sed 's/^/# /g' $4
  fi
  rm -f $4
}

CLI_EXE="AccelByte.Sdk.Sample.Cli"
CLI_TOKEN_FILE="$(dirname "$(which $CLI_EXE)")/token.json"
TEMP_JSON_INPUT="input_json.json"
TEMP_FILE_UPLOAD="file_upload.bin"

echo "TAP version 13"
echo "1..8"

#- 1 Login
$CLI_EXE --op login --lt user --user user --pass user > test.out 2>&1
eval_tap $? 1 'Login' test.out

if [ $EXIT_CODE -ne 0 ]; then
  echo "Bail out! Login failed."
  exit $EXIT_CODE
fi

# echo "foo" > "$CLI_TOKEN_FILE"

#- 2 GetServerLogs
$CLI_EXE \
    --sn dslogmanager \
    --op GetServerLogs \
    --namespace $AB_NAMESPACE \
    --podName 'OYN2CGo8' \
    --logType '6whu7bRs' \
    --offset '76' \
    --origin 'XzAm6lZQ' \
    > test.out 2>&1
eval_tap $? 2 'GetServerLogs' test.out

#- 3 ListTerminatedServers
$CLI_EXE \
    --sn dslogmanager \
    --op ListTerminatedServers \
    --namespace $AB_NAMESPACE \
    --deployment 'BnIgXEVR' \
    --endDate '7O82Y0is' \
    --gameMode 'VsSL00yd' \
    --limit '69' \
    --next 'GXDydNPx' \
    --partyId '6jKw2oN5' \
    --podName '8JrkX9Gz' \
    --previous 'l3DVaZqd' \
    --provider 'j0uGZpZH' \
    --region 'VD90XDrW' \
    --sessionId 'gVGiDFwF' \
    --source 'fwX89CCp' \
    --startDate '0nT9nAM4' \
    --status 'uhE5Fn43' \
    --userId 'XwD3lHyr' \
    > test.out 2>&1
eval_tap $? 3 'ListTerminatedServers' test.out

#- 4 DownloadServerLogs
$CLI_EXE \
    --sn dslogmanager \
    --op DownloadServerLogs \
    --namespace $AB_NAMESPACE \
    --podName 'qlINOaAq' \
    > test.out 2>&1
eval_tap $? 4 'DownloadServerLogs' test.out

#- 5 CheckServerLogs
$CLI_EXE \
    --sn dslogmanager \
    --op CheckServerLogs \
    --namespace $AB_NAMESPACE \
    --podName 'Daau4Car' \
    > test.out 2>&1
eval_tap $? 5 'CheckServerLogs' test.out

#- 6 BatchDownloadServerLogs
# body param: body
echo '{"Downloads": [{"alloc_id": "3RFdBByo", "namespace": "n8eGJlez", "pod_name": "pC2Bgqix"}, {"alloc_id": "OlvzNgD0", "namespace": "HL9oNZKK", "pod_name": "eQoSdTBG"}, {"alloc_id": "tEHKeZdt", "namespace": "2NbbO9F2", "pod_name": "0AJS7NWH"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn dslogmanager \
    --op BatchDownloadServerLogs \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 6 'BatchDownloadServerLogs' test.out

#- 7 ListAllTerminatedServers
$CLI_EXE \
    --sn dslogmanager \
    --op ListAllTerminatedServers \
    --deployment 'Q9YK6gpC' \
    --endDate 'czFyvytd' \
    --gameMode '7hnOQrds' \
    --limit '33' \
    --namespace_ 'Qfh8ikgI' \
    --next 'RtbVNKna' \
    --partyId 'D0q9DkwT' \
    --podName '9S7NdVqz' \
    --previous 'SEeCdZVi' \
    --provider 'HiaHJirC' \
    --region 'kmDGhVYP' \
    --sessionId '1Op2XNTL' \
    --startDate 'hBJsPudF' \
    --status 'Xbpk6AcK' \
    --userId 'PpcWGJ8O' \
    > test.out 2>&1
eval_tap $? 7 'ListAllTerminatedServers' test.out

#- 8 PublicGetMessages
$CLI_EXE \
    --sn dslogmanager \
    --op PublicGetMessages \
    > test.out 2>&1
eval_tap $? 8 'PublicGetMessages' test.out


# remove artifacts
rm -f "$CLI_TOKEN_FILE"
rm -f "$TEMP_JSON_INPUT"
rm -f "$TEMP_FILE_UPLOAD"

exit $EXIT_CODE