#!/usr/bin/env bash

# Copyright (c) 2021 AccelByte Inc. All Rights Reserved.
# This is licensed software from AccelByte Inc, for limitations
# and restrictions contact your company contract manager.

# This code is generated by tool. DO NOT EDIT.

# Meta:
# - random seed: 
# - template file: 

# Instructions:
# - Run the Justice SDK Mock Server first before running this script.

export AB_BASE_URL="http://127.0.0.1:8080"
export AB_CLIENT_ID="admin"
export AB_CLIENT_SECRET="admin"
export AB_NAMESPACE="test"
export AB_APP_NAME="UnitTest"

EXIT_CODE=0

eval_tap() {
  if [ $1 -eq 0 ]; then
    echo "ok $2 - $3"
  else
    EXIT_CODE=1
    echo "not ok $2 - $3"
    sed 's/^/# /g' $4
  fi
  rm -f $4
}

CLI_EXE="AccelByte.Sdk.Sample.Cli"
CLI_TOKEN_FILE="$(dirname "$(which $CLI_EXE)")/token.json"
TEMP_JSON_INPUT="input_json.json"
TEMP_FILE_UPLOAD="file_upload.bin"

echo "TAP version 13"
echo "1..9"

#- 1 Login
$CLI_EXE --op login --lt user --user user --pass user > test.out 2>&1
eval_tap $? 1 'Login' test.out

if [ $EXIT_CODE -ne 0 ]; then
  echo "Bail out! Login failed."
  exit $EXIT_CODE
fi

# echo "foo" > "$CLI_TOKEN_FILE"

#- 2 GetServerLogs
$CLI_EXE \
    --sn dslogmanager \
    --op GetServerLogs \
    --namespace $AB_NAMESPACE \
    --podName 'vpcHhFM9' \
    --logType 'XuHKz2rd' \
    --offset '69' \
    --origin '5PalDaZh' \
    > test.out 2>&1
eval_tap $? 2 'GetServerLogs' test.out

#- 3 ListTerminatedServers
$CLI_EXE \
    --sn dslogmanager \
    --op ListTerminatedServers \
    --namespace $AB_NAMESPACE \
    --deployment 'usTTx2nU' \
    --endDate 'uarwtL6j' \
    --gameMode 'UYrBX1FT' \
    --limit '45' \
    --next 'MlGOW38d' \
    --partyId 'YW5DHLtq' \
    --podName 'tcF5ZxZq' \
    --previous '3TBL7nAN' \
    --provider 'GJmGOhOF' \
    --region 'iWsZRtal' \
    --sessionId 'upYh5iF8' \
    --source 's7FLER9E' \
    --startDate 'lVO09Czz' \
    --status 'MvLgAsyd' \
    --userId 'nP3XfjD5' \
    > test.out 2>&1
eval_tap $? 3 'ListTerminatedServers' test.out

#- 4 DownloadServerLogs
$CLI_EXE \
    --sn dslogmanager \
    --op DownloadServerLogs \
    --namespace $AB_NAMESPACE \
    --podName 'kbCgRLeQ' \
    > test.out 2>&1
eval_tap $? 4 'DownloadServerLogs' test.out

#- 5 CheckServerLogs
$CLI_EXE \
    --sn dslogmanager \
    --op CheckServerLogs \
    --namespace $AB_NAMESPACE \
    --podName 'TrQsEyQh' \
    > test.out 2>&1
eval_tap $? 5 'CheckServerLogs' test.out

#- 6 BatchDownloadServerLogs
# body param: body
echo '{"Downloads": [{"alloc_id": "pVZ8KA8r", "namespace": "S9VqSQJX", "pod_name": "ro6Tip5l"}, {"alloc_id": "FZEVuJP8", "namespace": "xQGHCqI4", "pod_name": "xyIPCdXX"}, {"alloc_id": "hP5JZJbW", "namespace": "lhKt3U2v", "pod_name": "4G1wOwFw"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn dslogmanager \
    --op BatchDownloadServerLogs \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 6 'BatchDownloadServerLogs' test.out

#- 7 ListMetadataServers
# body param: body
echo '{"pod_names": ["OMOQ7W0Z", "KgrzIUGq", "8DGpDVwz"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn dslogmanager \
    --op ListMetadataServers \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 7 'ListMetadataServers' test.out

#- 8 ListAllTerminatedServers
$CLI_EXE \
    --sn dslogmanager \
    --op ListAllTerminatedServers \
    --deployment 'J8zlUtko' \
    --endDate 'Ib2ODsKd' \
    --gameMode 'jazfxPWD' \
    --limit '69' \
    --namespace_ 'l5vQRmAO' \
    --next 'glxciskS' \
    --partyId 'OnPabnvM' \
    --podName 'ZzSft7MD' \
    --previous 'na46B5PH' \
    --provider 'YfYD1TCd' \
    --region 'nB7Rki4P' \
    --sessionId 'hu9bGmJL' \
    --startDate 'SrYMGiE7' \
    --status 'kw61ELOe' \
    --userId 'bCR5Lkxt' \
    > test.out 2>&1
eval_tap $? 8 'ListAllTerminatedServers' test.out

#- 9 PublicGetMessages
$CLI_EXE \
    --sn dslogmanager \
    --op PublicGetMessages \
    > test.out 2>&1
eval_tap $? 9 'PublicGetMessages' test.out


# remove artifacts
rm -f "$CLI_TOKEN_FILE"
rm -f "$TEMP_JSON_INPUT"
rm -f "$TEMP_FILE_UPLOAD"

exit $EXIT_CODE