#!/usr/bin/env bash

# Copyright (c) 2021 AccelByte Inc. All Rights Reserved.
# This is licensed software from AccelByte Inc, for limitations
# and restrictions contact your company contract manager.

# This code is generated by tool. DO NOT EDIT.

# Meta:
# - random seed: 
# - template file: 

# Instructions:
# - Run the Justice SDK Mock Server first before running this script.

export AB_BASE_URL="http://127.0.0.1:8080"
export AB_CLIENT_ID="admin"
export AB_CLIENT_SECRET="admin"
export AB_NAMESPACE="test"
export AB_APP_NAME="UnitTest"

EXIT_CODE=0

eval_tap() {
  if [ $1 -eq 0 ]; then
    echo "ok $2 - $3"
  else
    EXIT_CODE=1
    echo "not ok $2 - $3"
    sed 's/^/# /g' $4
  fi
  rm -f $4
}

CLI_EXE="AccelByte.Sdk.Sample.Cli"
CLI_TOKEN_FILE="$(dirname "$(which $CLI_EXE)")/token.json"
TEMP_JSON_INPUT="input_json.json"
TEMP_FILE_UPLOAD="file_upload.bin"

echo "TAP version 13"
echo "1..8"

#- 1 Login
$CLI_EXE --op login --lt user --user user --pass user > test.out 2>&1
eval_tap $? 1 'Login' test.out

if [ $EXIT_CODE -ne 0 ]; then
  echo "Bail out! Login failed."
  exit $EXIT_CODE
fi

# echo "foo" > "$CLI_TOKEN_FILE"

#- 2 GetServerLogs
$CLI_EXE \
    --sn dslogmanager \
    --op GetServerLogs \
    --namespace $AB_NAMESPACE \
    --podName 'Y6Q7ElEs' \
    --logType 'P58DYyCn' \
    --offset '53' \
    --origin 'XGna9gf6' \
    > test.out 2>&1
eval_tap $? 2 'GetServerLogs' test.out

#- 3 ListTerminatedServers
$CLI_EXE \
    --sn dslogmanager \
    --op ListTerminatedServers \
    --namespace $AB_NAMESPACE \
    --deployment 'qOAqXOVP' \
    --endDate 'AlHl4WkY' \
    --gameMode 'rZ4d2UMC' \
    --limit '55' \
    --next 'pAEGVVse' \
    --partyId 'BPtqOQFe' \
    --podName 'CZJq48dS' \
    --previous '9BUHDVjT' \
    --provider '9ybjIcPk' \
    --region 'sBkQxOdZ' \
    --sessionId 'RUEs7Rdd' \
    --source 'IPPOxEdM' \
    --startDate 'cYtCinjz' \
    --status 'gCJwte2I' \
    --userId 'RNhyVdE4' \
    > test.out 2>&1
eval_tap $? 3 'ListTerminatedServers' test.out

#- 4 DownloadServerLogs
$CLI_EXE \
    --sn dslogmanager \
    --op DownloadServerLogs \
    --namespace $AB_NAMESPACE \
    --podName 'gF88Gaii' \
    > test.out 2>&1
eval_tap $? 4 'DownloadServerLogs' test.out

#- 5 CheckServerLogs
$CLI_EXE \
    --sn dslogmanager \
    --op CheckServerLogs \
    --namespace $AB_NAMESPACE \
    --podName '9KzVPQYF' \
    > test.out 2>&1
eval_tap $? 5 'CheckServerLogs' test.out

#- 6 BatchDownloadServerLogs
# body param: body
echo '{"Downloads": [{"alloc_id": "xcmtKZPs", "namespace": "UjdHqSq7", "pod_name": "gJjfywOS"}, {"alloc_id": "ws2pUmar", "namespace": "IBQm2PVQ", "pod_name": "dnJNOvlZ"}, {"alloc_id": "VTWea7xc", "namespace": "tU0kiwku", "pod_name": "FsyhKc44"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn dslogmanager \
    --op BatchDownloadServerLogs \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 6 'BatchDownloadServerLogs' test.out

#- 7 ListAllTerminatedServers
$CLI_EXE \
    --sn dslogmanager \
    --op ListAllTerminatedServers \
    --deployment 'wMjsfkzZ' \
    --endDate 'lt9cbNWP' \
    --gameMode 'shpoPbOQ' \
    --limit '81' \
    --namespace_ 'zafJZdYc' \
    --next '4j8Lftyc' \
    --partyId 'hbvvp81o' \
    --podName 'vpbHidPb' \
    --previous 'nc1xyDOG' \
    --provider '9VdLDaSH' \
    --region '95oeIHI0' \
    --sessionId 'lci03UbG' \
    --startDate 'hsCKQL1r' \
    --status '53VXTJyx' \
    --userId 'Ssb1G5RF' \
    > test.out 2>&1
eval_tap $? 7 'ListAllTerminatedServers' test.out

#- 8 PublicGetMessages
$CLI_EXE \
    --sn dslogmanager \
    --op PublicGetMessages \
    > test.out 2>&1
eval_tap $? 8 'PublicGetMessages' test.out


# remove artifacts
rm -f "$CLI_TOKEN_FILE"
rm -f "$TEMP_JSON_INPUT"
rm -f "$TEMP_FILE_UPLOAD"

exit $EXIT_CODE