#!/usr/bin/env bash

# Copyright (c) 2021 AccelByte Inc. All Rights Reserved.
# This is licensed software from AccelByte Inc, for limitations
# and restrictions contact your company contract manager.

# This code is generated by tool. DO NOT EDIT.

# Meta:
# - random seed: 
# - template file: 

# Instructions:
# - Run the Justice SDK Mock Server first before running this script.

export AB_BASE_URL="http://127.0.0.1:8080"
export AB_CLIENT_ID="admin"
export AB_CLIENT_SECRET="admin"
export AB_NAMESPACE="test"
export AB_APP_NAME="UnitTest"

EXIT_CODE=0

eval_tap() {
  if [ $1 -eq 0 ]; then
    echo "ok $2 - $3"
  else
    EXIT_CODE=1
    echo "not ok $2 - $3"
    sed 's/^/# /g' $4
  fi
  rm -f $4
}

CLI_EXE="AccelByte.Sdk.Sample.Cli"
CLI_TOKEN_FILE="$(dirname "$(which $CLI_EXE)")/token.json"
TEMP_JSON_INPUT="input_json.json"
TEMP_FILE_UPLOAD="file_upload.bin"

echo "TAP version 13"
echo "1..5"

#- 1 Login
$CLI_EXE --op login --lt user --user user --pass user > test.out 2>&1
eval_tap $? 1 'Login' test.out

if [ $EXIT_CODE -ne 0 ]; then
  echo "Bail out! Login failed."
  exit $EXIT_CODE
fi

# echo "foo" > "$CLI_TOKEN_FILE"

#- 2 GetEventsGameTelemetryV1AdminNamespacesNamespaceEventsGet
$CLI_EXE \
    --sn gametelemetry \
    --op GetEventsGameTelemetryV1AdminNamespacesNamespaceEventsGet \
    --namespace $AB_NAMESPACE \
    --endTime 'J7LFChqC' \
    --eventId 'ynbHQPfA' \
    --eventName 'pij9iFGu' \
    --eventPayload 'r2r3g8x6' \
    --limit '5' \
    --offset '89' \
    --startTime 'Z9UoGRws' \
    > test.out 2>&1
eval_tap $? 2 'GetEventsGameTelemetryV1AdminNamespacesNamespaceEventsGet' test.out

#- 3 ProtectedSaveEventsGameTelemetryV1ProtectedEventsPost
# body param: body
echo '[{"ClientTimestamp": "1989-05-18T00:00:00Z", "EventId": "yZQCfFDx", "EventName": "IbRW4YLW", "EventNamespace": "4709HlXB", "EventTimestamp": "1973-07-07T00:00:00Z", "Payload": {"PI0L710E": {}, "6SZv7Gt2": {}, "G0dM2DWG": {}}}, {"ClientTimestamp": "1982-04-02T00:00:00Z", "EventId": "8vYjCy4c", "EventName": "Xx0hL1hO", "EventNamespace": "wH40Rs33", "EventTimestamp": "1985-06-06T00:00:00Z", "Payload": {"oaNUzihV": {}, "rDjVpWPr": {}, "Nmd0ftqT": {}}}, {"ClientTimestamp": "1981-04-11T00:00:00Z", "EventId": "susqrcpK", "EventName": "L7Z61Glb", "EventNamespace": "s6ZOcrAm", "EventTimestamp": "1991-05-13T00:00:00Z", "Payload": {"zV9owFRc": {}, "MzO8Vg82": {}, "n2pLV4f5": {}}}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn gametelemetry \
    --op ProtectedSaveEventsGameTelemetryV1ProtectedEventsPost \
    --access_token 'OG0sGLkX' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 3 'ProtectedSaveEventsGameTelemetryV1ProtectedEventsPost' test.out

#- 4 ProtectedGetPlaytimeGameTelemetryV1ProtectedSteamIdsSteamIdPlaytimeGet
$CLI_EXE \
    --sn gametelemetry \
    --op ProtectedGetPlaytimeGameTelemetryV1ProtectedSteamIdsSteamIdPlaytimeGet \
    --steamId 'pHfgCThd' \
    --access_token 'TKVcgnc4' \
    > test.out 2>&1
eval_tap $? 4 'ProtectedGetPlaytimeGameTelemetryV1ProtectedSteamIdsSteamIdPlaytimeGet' test.out

#- 5 ProtectedUpdatePlaytimeGameTelemetryV1ProtectedSteamIdsSteamIdPlaytimePlaytimePut
$CLI_EXE \
    --sn gametelemetry \
    --op ProtectedUpdatePlaytimeGameTelemetryV1ProtectedSteamIdsSteamIdPlaytimePlaytimePut \
    --playtime 'Hquto9ay' \
    --steamId 'PiDtxCJK' \
    --access_token 'ISuJa3Ny' \
    > test.out 2>&1
eval_tap $? 5 'ProtectedUpdatePlaytimeGameTelemetryV1ProtectedSteamIdsSteamIdPlaytimePlaytimePut' test.out


# remove artifacts
rm -f "$CLI_TOKEN_FILE"
rm -f "$TEMP_JSON_INPUT"
rm -f "$TEMP_FILE_UPLOAD"

exit $EXIT_CODE