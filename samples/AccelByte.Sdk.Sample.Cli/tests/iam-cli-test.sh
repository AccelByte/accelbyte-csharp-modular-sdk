#!/usr/bin/env bash

# Copyright (c) 2021 AccelByte Inc. All Rights Reserved.
# This is licensed software from AccelByte Inc, for limitations
# and restrictions contact your company contract manager.

# This code is generated by tool. DO NOT EDIT.

# Meta:
# - random seed: 
# - template file: 

# Instructions:
# - Run the Justice SDK Mock Server first before running this script.

export AB_BASE_URL="http://127.0.0.1:8080"
export AB_CLIENT_ID="admin"
export AB_CLIENT_SECRET="admin"
export AB_NAMESPACE="test"
export AB_APP_NAME="UnitTest"

EXIT_CODE=0

eval_tap() {
  if [ $1 -eq 0 ]; then
    echo "ok $2 - $3"
  else
    EXIT_CODE=1
    echo "not ok $2 - $3"
    sed 's/^/# /g' $4
  fi
  rm -f $4
}

CLI_EXE="AccelByte.Sdk.Sample.Cli"
CLI_TOKEN_FILE="$(dirname "$(which $CLI_EXE)")/token.json"
TEMP_JSON_INPUT="input_json.json"
TEMP_FILE_UPLOAD="file_upload.bin"

echo "TAP version 13"
echo "1..428"

#- 1 Login
$CLI_EXE --op login --lt user --user user --pass user > test.out 2>&1
eval_tap $? 1 'Login' test.out

if [ $EXIT_CODE -ne 0 ]; then
  echo "Bail out! Login failed."
  exit $EXIT_CODE
fi

# echo "foo" > "$CLI_TOKEN_FILE"

#- 2 GetBansType
eval_tap 0 2 'GetBansType # SKIP deprecated' test.out

#- 3 GetListBanReason
eval_tap 0 3 'GetListBanReason # SKIP deprecated' test.out

#- 4 GetClients
eval_tap 0 4 'GetClients # SKIP deprecated' test.out

#- 5 CreateClient
eval_tap 0 5 'CreateClient # SKIP deprecated' test.out

#- 6 GetClient
eval_tap 0 6 'GetClient # SKIP deprecated' test.out

#- 7 UpdateClient
eval_tap 0 7 'UpdateClient # SKIP deprecated' test.out

#- 8 DeleteClient
eval_tap 0 8 'DeleteClient # SKIP deprecated' test.out

#- 9 UpdateClientPermission
eval_tap 0 9 'UpdateClientPermission # SKIP deprecated' test.out

#- 10 AddClientPermission
eval_tap 0 10 'AddClientPermission # SKIP deprecated' test.out

#- 11 DeleteClientPermission
eval_tap 0 11 'DeleteClientPermission # SKIP deprecated' test.out

#- 12 UpdateClientSecret
eval_tap 0 12 'UpdateClientSecret # SKIP deprecated' test.out

#- 13 GetClientsbyNamespace
eval_tap 0 13 'GetClientsbyNamespace # SKIP deprecated' test.out

#- 14 CreateClientByNamespace
eval_tap 0 14 'CreateClientByNamespace # SKIP deprecated' test.out

#- 15 DeleteClientByNamespace
eval_tap 0 15 'DeleteClientByNamespace # SKIP deprecated' test.out

#- 16 CreateUser
eval_tap 0 16 'CreateUser # SKIP deprecated' test.out

#- 17 GetAdminUsersByRoleID
eval_tap 0 17 'GetAdminUsersByRoleID # SKIP deprecated' test.out

#- 18 GetUserByLoginID
eval_tap 0 18 'GetUserByLoginID # SKIP deprecated' test.out

#- 19 GetUserByPlatformUserID
eval_tap 0 19 'GetUserByPlatformUserID # SKIP deprecated' test.out

#- 20 ForgotPassword
eval_tap 0 20 'ForgotPassword # SKIP deprecated' test.out

#- 21 GetUsersByLoginIds
eval_tap 0 21 'GetUsersByLoginIds # SKIP deprecated' test.out

#- 22 ResetPassword
eval_tap 0 22 'ResetPassword # SKIP deprecated' test.out

#- 23 SearchUser
eval_tap 0 23 'SearchUser # SKIP deprecated' test.out

#- 24 GetUserByUserID
eval_tap 0 24 'GetUserByUserID # SKIP deprecated' test.out

#- 25 UpdateUser
eval_tap 0 25 'UpdateUser # SKIP deprecated' test.out

#- 26 DeleteUser
eval_tap 0 26 'DeleteUser # SKIP deprecated' test.out

#- 27 BanUser
eval_tap 0 27 'BanUser # SKIP deprecated' test.out

#- 28 GetUserBanHistory
eval_tap 0 28 'GetUserBanHistory # SKIP deprecated' test.out

#- 29 DisableUserBan
eval_tap 0 29 'DisableUserBan # SKIP deprecated' test.out

#- 30 EnableUserBan
eval_tap 0 30 'EnableUserBan # SKIP deprecated' test.out

#- 31 ListCrossNamespaceAccountLink
eval_tap 0 31 'ListCrossNamespaceAccountLink # SKIP deprecated' test.out

#- 32 DisableUser
eval_tap 0 32 'DisableUser # SKIP deprecated' test.out

#- 33 EnableUser
eval_tap 0 33 'EnableUser # SKIP deprecated' test.out

#- 34 GetUserInformation
eval_tap 0 34 'GetUserInformation # SKIP deprecated' test.out

#- 35 DeleteUserInformation
eval_tap 0 35 'DeleteUserInformation # SKIP deprecated' test.out

#- 36 GetUserLoginHistories
eval_tap 0 36 'GetUserLoginHistories # SKIP deprecated' test.out

#- 37 UpdatePassword
eval_tap 0 37 'UpdatePassword # SKIP deprecated' test.out

#- 38 SaveUserPermission
eval_tap 0 38 'SaveUserPermission # SKIP deprecated' test.out

#- 39 AddUserPermission
eval_tap 0 39 'AddUserPermission # SKIP deprecated' test.out

#- 40 DeleteUserPermission
eval_tap 0 40 'DeleteUserPermission # SKIP deprecated' test.out

#- 41 GetUserPlatformAccounts
eval_tap 0 41 'GetUserPlatformAccounts # SKIP deprecated' test.out

#- 42 GetUserMapping
eval_tap 0 42 'GetUserMapping # SKIP deprecated' test.out

#- 43 GetUserJusticePlatformAccount
eval_tap 0 43 'GetUserJusticePlatformAccount # SKIP deprecated' test.out

#- 44 PlatformLink
eval_tap 0 44 'PlatformLink # SKIP deprecated' test.out

#- 45 PlatformUnlink
eval_tap 0 45 'PlatformUnlink # SKIP deprecated' test.out

#- 46 GetPublisherUser
eval_tap 0 46 'GetPublisherUser # SKIP deprecated' test.out

#- 47 SaveUserRoles
eval_tap 0 47 'SaveUserRoles # SKIP deprecated' test.out

#- 48 AddUserRole
eval_tap 0 48 'AddUserRole # SKIP deprecated' test.out

#- 49 DeleteUserRole
eval_tap 0 49 'DeleteUserRole # SKIP deprecated' test.out

#- 50 UpgradeHeadlessAccount
eval_tap 0 50 'UpgradeHeadlessAccount # SKIP deprecated' test.out

#- 51 UpgradeHeadlessAccountWithVerificationCode
eval_tap 0 51 'UpgradeHeadlessAccountWithVerificationCode # SKIP deprecated' test.out

#- 52 UserVerification
eval_tap 0 52 'UserVerification # SKIP deprecated' test.out

#- 53 SendVerificationCode
eval_tap 0 53 'SendVerificationCode # SKIP deprecated' test.out

#- 54 Authorization
eval_tap 0 54 'Authorization # SKIP deprecated' test.out

#- 55 GetJWKS
eval_tap 0 55 'GetJWKS # SKIP deprecated' test.out

#- 56 PlatformTokenRequestHandler
eval_tap 0 56 'PlatformTokenRequestHandler # SKIP deprecated' test.out

#- 57 RevokeUser
eval_tap 0 57 'RevokeUser # SKIP deprecated' test.out

#- 58 GetRevocationList
eval_tap 0 58 'GetRevocationList # SKIP deprecated' test.out

#- 59 RevokeToken
eval_tap 0 59 'RevokeToken # SKIP deprecated' test.out

#- 60 RevokeAUser
eval_tap 0 60 'RevokeAUser # SKIP deprecated' test.out

#- 61 TokenGrant
eval_tap 0 61 'TokenGrant # SKIP deprecated' test.out

#- 62 VerifyToken
eval_tap 0 62 'VerifyToken # SKIP deprecated' test.out

#- 63 GetRoles
eval_tap 0 63 'GetRoles # SKIP deprecated' test.out

#- 64 CreateRole
eval_tap 0 64 'CreateRole # SKIP deprecated' test.out

#- 65 GetRole
eval_tap 0 65 'GetRole # SKIP deprecated' test.out

#- 66 UpdateRole
eval_tap 0 66 'UpdateRole # SKIP deprecated' test.out

#- 67 DeleteRole
eval_tap 0 67 'DeleteRole # SKIP deprecated' test.out

#- 68 GetRoleAdminStatus
eval_tap 0 68 'GetRoleAdminStatus # SKIP deprecated' test.out

#- 69 SetRoleAsAdmin
eval_tap 0 69 'SetRoleAsAdmin # SKIP deprecated' test.out

#- 70 RemoveRoleAdmin
eval_tap 0 70 'RemoveRoleAdmin # SKIP deprecated' test.out

#- 71 GetRoleManagers
eval_tap 0 71 'GetRoleManagers # SKIP deprecated' test.out

#- 72 AddRoleManagers
eval_tap 0 72 'AddRoleManagers # SKIP deprecated' test.out

#- 73 RemoveRoleManagers
eval_tap 0 73 'RemoveRoleManagers # SKIP deprecated' test.out

#- 74 GetRoleMembers
eval_tap 0 74 'GetRoleMembers # SKIP deprecated' test.out

#- 75 AddRoleMembers
eval_tap 0 75 'AddRoleMembers # SKIP deprecated' test.out

#- 76 RemoveRoleMembers
eval_tap 0 76 'RemoveRoleMembers # SKIP deprecated' test.out

#- 77 UpdateRolePermissions
eval_tap 0 77 'UpdateRolePermissions # SKIP deprecated' test.out

#- 78 AddRolePermission
eval_tap 0 78 'AddRolePermission # SKIP deprecated' test.out

#- 79 DeleteRolePermission
eval_tap 0 79 'DeleteRolePermission # SKIP deprecated' test.out

#- 80 AdminGetAgeRestrictionStatusV2
eval_tap 0 80 'AdminGetAgeRestrictionStatusV2 # SKIP deprecated' test.out

#- 81 AdminUpdateAgeRestrictionConfigV2
eval_tap 0 81 'AdminUpdateAgeRestrictionConfigV2 # SKIP deprecated' test.out

#- 82 GetListCountryAgeRestriction
eval_tap 0 82 'GetListCountryAgeRestriction # SKIP deprecated' test.out

#- 83 UpdateCountryAgeRestriction
eval_tap 0 83 'UpdateCountryAgeRestriction # SKIP deprecated' test.out

#- 84 AdminSearchUsersV2
eval_tap 0 84 'AdminSearchUsersV2 # SKIP deprecated' test.out

#- 85 AdminGetUserByUserIdV2
eval_tap 0 85 'AdminGetUserByUserIdV2 # SKIP deprecated' test.out

#- 86 AdminUpdateUserV2
eval_tap 0 86 'AdminUpdateUserV2 # SKIP deprecated' test.out

#- 87 AdminBanUserV2
eval_tap 0 87 'AdminBanUserV2 # SKIP deprecated' test.out

#- 88 AdminGetUserBanV2
eval_tap 0 88 'AdminGetUserBanV2 # SKIP deprecated' test.out

#- 89 AdminDisableUserV2
eval_tap 0 89 'AdminDisableUserV2 # SKIP deprecated' test.out

#- 90 AdminEnableUserV2
eval_tap 0 90 'AdminEnableUserV2 # SKIP deprecated' test.out

#- 91 AdminResetPasswordV2
eval_tap 0 91 'AdminResetPasswordV2 # SKIP deprecated' test.out

#- 92 AdminDeletePlatformLinkV2
eval_tap 0 92 'AdminDeletePlatformLinkV2 # SKIP deprecated' test.out

#- 93 AdminPutUserRolesV2
eval_tap 0 93 'AdminPutUserRolesV2 # SKIP deprecated' test.out

#- 94 AdminCreateUserRolesV2
eval_tap 0 94 'AdminCreateUserRolesV2 # SKIP deprecated' test.out

#- 95 PublicGetCountryAgeRestriction
eval_tap 0 95 'PublicGetCountryAgeRestriction # SKIP deprecated' test.out

#- 96 PublicCreateUserV2
eval_tap 0 96 'PublicCreateUserV2 # SKIP deprecated' test.out

#- 97 PublicForgotPasswordV2
eval_tap 0 97 'PublicForgotPasswordV2 # SKIP deprecated' test.out

#- 98 PublicResetPasswordV2
eval_tap 0 98 'PublicResetPasswordV2 # SKIP deprecated' test.out

#- 99 PublicGetUserByUserIDV2
eval_tap 0 99 'PublicGetUserByUserIDV2 # SKIP deprecated' test.out

#- 100 PublicUpdateUserV2
eval_tap 0 100 'PublicUpdateUserV2 # SKIP deprecated' test.out

#- 101 PublicGetUserBan
eval_tap 0 101 'PublicGetUserBan # SKIP deprecated' test.out

#- 102 PublicUpdatePasswordV2
eval_tap 0 102 'PublicUpdatePasswordV2 # SKIP deprecated' test.out

#- 103 GetListJusticePlatformAccounts
eval_tap 0 103 'GetListJusticePlatformAccounts # SKIP deprecated' test.out

#- 104 PublicPlatformLinkV2
eval_tap 0 104 'PublicPlatformLinkV2 # SKIP deprecated' test.out

#- 105 PublicDeletePlatformLinkV2
eval_tap 0 105 'PublicDeletePlatformLinkV2 # SKIP deprecated' test.out

#- 106 AdminGetBansTypeV3
$CLI_EXE \
    --sn iam \
    --op AdminGetBansTypeV3 \
    > test.out 2>&1
eval_tap $? 106 'AdminGetBansTypeV3' test.out

#- 107 AdminGetListBanReasonV3
$CLI_EXE \
    --sn iam \
    --op AdminGetListBanReasonV3 \
    > test.out 2>&1
eval_tap $? 107 'AdminGetListBanReasonV3' test.out

#- 108 AdminListClientAvailablePermissions
$CLI_EXE \
    --sn iam \
    --op AdminListClientAvailablePermissions \
    --excludePermissions 'true' \
    > test.out 2>&1
eval_tap $? 108 'AdminListClientAvailablePermissions' test.out

#- 109 AdminUpdateAvailablePermissionsByModule
# body param: body
echo '{"modules": [{"docLink": "LZuGOCGB", "groups": [{"group": "qgNtZDfF", "groupId": "VRXOSp0z", "permissions": [{"allowedActions": [8, 70, 93], "resource": "PnCezgv7"}, {"allowedActions": [21, 96, 4], "resource": "PWgS4vgu"}, {"allowedActions": [26, 25, 7], "resource": "DgKvD4lT"}]}, {"group": "MRkBMaJW", "groupId": "39QyFksw", "permissions": [{"allowedActions": [74, 66, 59], "resource": "b0w5xtBv"}, {"allowedActions": [7, 92, 79], "resource": "1r2jwXYs"}, {"allowedActions": [2, 20, 22], "resource": "cnEGbcvu"}]}, {"group": "ke7JNYpm", "groupId": "zAIuGeVr", "permissions": [{"allowedActions": [54, 69, 51], "resource": "t2bmhTde"}, {"allowedActions": [69, 31, 90], "resource": "pBlXxKX1"}, {"allowedActions": [45, 74, 68], "resource": "NAfWVuO6"}]}], "module": "sBaPLBNF", "moduleId": "FkfVqSCg"}, {"docLink": "1gklHwkM", "groups": [{"group": "qLmPX6NA", "groupId": "8abYDW5f", "permissions": [{"allowedActions": [26, 91, 70], "resource": "FMRR4D1V"}, {"allowedActions": [5, 34, 40], "resource": "4EOCfZAc"}, {"allowedActions": [4, 18, 8], "resource": "bS8paieW"}]}, {"group": "ynIecF4y", "groupId": "8PQIjWXI", "permissions": [{"allowedActions": [34, 68, 99], "resource": "y4HuN3MG"}, {"allowedActions": [30, 6, 22], "resource": "HMtKdGhO"}, {"allowedActions": [29, 68, 85], "resource": "XtlwPz5C"}]}, {"group": "CiHHc9pr", "groupId": "KTDlAHPt", "permissions": [{"allowedActions": [81, 100, 93], "resource": "94p3XeZ6"}, {"allowedActions": [9, 96, 32], "resource": "ZMOj7p0G"}, {"allowedActions": [85, 98, 85], "resource": "ppyY7hjV"}]}], "module": "0Au1wcJw", "moduleId": "2s4Xqkws"}, {"docLink": "kuEhXDPh", "groups": [{"group": "A44UShkD", "groupId": "IClYJYL8", "permissions": [{"allowedActions": [34, 15, 8], "resource": "eYO1StRI"}, {"allowedActions": [100, 70, 55], "resource": "lE9XuRkX"}, {"allowedActions": [78, 3, 85], "resource": "sNyox0rQ"}]}, {"group": "189WSYx4", "groupId": "eLthvxjD", "permissions": [{"allowedActions": [40, 24, 64], "resource": "j0yeyvnz"}, {"allowedActions": [100, 40, 66], "resource": "axA1reAu"}, {"allowedActions": [23, 84, 86], "resource": "AMbW6RQK"}]}, {"group": "0nUKJ6sM", "groupId": "70zMRsWH", "permissions": [{"allowedActions": [89, 80, 31], "resource": "B6U5pro3"}, {"allowedActions": [96, 17, 77], "resource": "SZOyNWnc"}, {"allowedActions": [95, 12, 28], "resource": "6hPcNM8B"}]}], "module": "4PdFospN", "moduleId": "wk9fUBNJ"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateAvailablePermissionsByModule \
    --forceDelete 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 109 'AdminUpdateAvailablePermissionsByModule' test.out

#- 110 AdminDeleteConfigPermissionsByGroup
# body param: body
echo '{"groupId": "luhoLudL", "moduleId": "h538S8A5"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDeleteConfigPermissionsByGroup \
    --forceDelete 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 110 'AdminDeleteConfigPermissionsByGroup' test.out

#- 111 AdminListClientTemplates
$CLI_EXE \
    --sn iam \
    --op AdminListClientTemplates \
    > test.out 2>&1
eval_tap $? 111 'AdminListClientTemplates' test.out

#- 112 AdminGetInputValidations
$CLI_EXE \
    --sn iam \
    --op AdminGetInputValidations \
    > test.out 2>&1
eval_tap $? 112 'AdminGetInputValidations' test.out

#- 113 AdminUpdateInputValidations
# body param: body
echo '[{"field": "e8kwokra", "validation": {"allowAllSpecialCharacters": true, "allowDigit": true, "allowLetter": true, "allowSpace": false, "allowUnicode": false, "avatarConfig": {"allowedPrefixes": ["KnHcurxk", "4sJNIycb", "xCN6HUDx"], "preferRegex": true, "regex": "l4o3ciZT"}, "blockedWord": ["umHp3Q0x", "r34ISvIN", "JkkA7jby"], "description": [{"language": "1qFWUBhI", "message": ["FfKmaPZy", "n3m6p7OX", "NOkrDQIr"]}, {"language": "BtiWrIsK", "message": ["3OPeOkDJ", "3eeI3lH5", "VWZHXFdQ"]}, {"language": "6TMJI0uk", "message": ["0pDiQgoN", "woyry80K", "kQ4iJ66q"]}], "isCustomRegex": false, "letterCase": "HszSR77d", "maxLength": 92, "maxRepeatingAlphaNum": 68, "maxRepeatingSpecialCharacter": 33, "minCharType": 8, "minLength": 32, "profanityFilter": "Arm2cajK", "regex": "l57X1BHw", "specialCharacterLocation": "j5DeGHZa", "specialCharacters": ["seIVBg6v", "Z4YEpEel", "ZSZOOKKJ"]}}, {"field": "XWQZJ6Kw", "validation": {"allowAllSpecialCharacters": true, "allowDigit": false, "allowLetter": false, "allowSpace": false, "allowUnicode": true, "avatarConfig": {"allowedPrefixes": ["wS57MVa7", "yEMuIIxd", "OUQrWWoU"], "preferRegex": true, "regex": "JHXSjVDy"}, "blockedWord": ["MCrtCu87", "5KvR3LE4", "hGbl2TCq"], "description": [{"language": "TYALsNpG", "message": ["oe3TnxK3", "SitMIcoH", "rhC2jqtY"]}, {"language": "l7TFnRYb", "message": ["bT5dsy88", "Qva25C93", "MMfY7uMa"]}, {"language": "sBOKsl43", "message": ["i0Kjgxc5", "BHr8jltw", "c6rxeerQ"]}], "isCustomRegex": false, "letterCase": "0N248Eaj", "maxLength": 4, "maxRepeatingAlphaNum": 36, "maxRepeatingSpecialCharacter": 49, "minCharType": 33, "minLength": 51, "profanityFilter": "grA05m5e", "regex": "sqZ3NVp2", "specialCharacterLocation": "VH1Tx1HN", "specialCharacters": ["i4lOVhbQ", "EfBJMipG", "QnXAMAx3"]}}, {"field": "liH5QEa7", "validation": {"allowAllSpecialCharacters": false, "allowDigit": false, "allowLetter": true, "allowSpace": true, "allowUnicode": false, "avatarConfig": {"allowedPrefixes": ["97DaYGG8", "1frbKQXb", "UeSLfJzh"], "preferRegex": true, "regex": "MQI2SJYF"}, "blockedWord": ["Wm31mXz6", "NujrvNhK", "nBb83Flt"], "description": [{"language": "cY7a8q7J", "message": ["beaBH2GF", "xGJo4RJB", "R8ZcewzA"]}, {"language": "ZLh1MjZJ", "message": ["IwUcnCI0", "NNWYH73l", "772Cht9z"]}, {"language": "iZyvIzRW", "message": ["fIcWjQcs", "0CT9ohum", "rtU6g72E"]}], "isCustomRegex": true, "letterCase": "gRYqcEtD", "maxLength": 69, "maxRepeatingAlphaNum": 98, "maxRepeatingSpecialCharacter": 20, "minCharType": 53, "minLength": 12, "profanityFilter": "RIn1Hlmb", "regex": "lezEZeDU", "specialCharacterLocation": "0CBxZQJz", "specialCharacters": ["zSQfwJtb", "48yB16A7", "oM1HTfnl"]}}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateInputValidations \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 113 'AdminUpdateInputValidations' test.out

#- 114 AdminResetInputValidations
$CLI_EXE \
    --sn iam \
    --op AdminResetInputValidations \
    --field 'vB9xfmIN' \
    > test.out 2>&1
eval_tap $? 114 'AdminResetInputValidations' test.out

#- 115 ListAdminsV3
$CLI_EXE \
    --sn iam \
    --op ListAdminsV3 \
    --namespace $AB_NAMESPACE \
    --after 'YXqHhiWm' \
    --before 'f23O3Pvu' \
    --endDate 'YxfzvIFs' \
    --limit '83' \
    --query 'hAbiGPcW' \
    --roleId 'UcBv6BJg' \
    --startDate 'mErC7Jqy' \
    > test.out 2>&1
eval_tap $? 115 'ListAdminsV3' test.out

#- 116 AdminGetAgeRestrictionStatusV3
$CLI_EXE \
    --sn iam \
    --op AdminGetAgeRestrictionStatusV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 116 'AdminGetAgeRestrictionStatusV3' test.out

#- 117 AdminUpdateAgeRestrictionConfigV3
# body param: body
echo '{"ageRestriction": 57, "enable": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateAgeRestrictionConfigV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 117 'AdminUpdateAgeRestrictionConfigV3' test.out

#- 118 AdminGetListCountryAgeRestrictionV3
$CLI_EXE \
    --sn iam \
    --op AdminGetListCountryAgeRestrictionV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 118 'AdminGetListCountryAgeRestrictionV3' test.out

#- 119 AdminUpdateCountryAgeRestrictionV3
# body param: body
echo '{"ageRestriction": 0}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateCountryAgeRestrictionV3 \
    --countryCode 'R8Lh6iJn' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 119 'AdminUpdateCountryAgeRestrictionV3' test.out

#- 120 AdminGetBannedUsersV3
$CLI_EXE \
    --sn iam \
    --op AdminGetBannedUsersV3 \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --banType 'cegSO0fu' \
    --limit '7' \
    --offset '30' \
    > test.out 2>&1
eval_tap $? 120 'AdminGetBannedUsersV3' test.out

#- 121 AdminBanUserBulkV3
# body param: body
echo '{"ban": "SvoNeHUb", "comment": "eSu2u09n", "endDate": "rTkconuH", "reason": "Qn2LeCVj", "skipNotif": false, "userIds": ["ruc8H3xe", "UkBUttcv", "OU3GfNaZ"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBanUserBulkV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 121 'AdminBanUserBulkV3' test.out

#- 122 AdminUnbanUserBulkV3
# body param: body
echo '{"bans": [{"banId": "5bBrND8c", "userId": "kuOq6NA6"}, {"banId": "AmT1ity1", "userId": "sM5rh8fb"}, {"banId": "5KSIw621", "userId": "HZYPxTwf"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUnbanUserBulkV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 122 'AdminUnbanUserBulkV3' test.out

#- 123 AdminGetBansTypeWithNamespaceV3
$CLI_EXE \
    --sn iam \
    --op AdminGetBansTypeWithNamespaceV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 123 'AdminGetBansTypeWithNamespaceV3' test.out

#- 124 AdminGetClientsByNamespaceV3
$CLI_EXE \
    --sn iam \
    --op AdminGetClientsByNamespaceV3 \
    --namespace $AB_NAMESPACE \
    --clientId 'yAfG1wam' \
    --clientName 'to5zhGyE' \
    --clientType 'pDx24kME' \
    --limit '33' \
    --offset '78' \
    --skipLoginQueue 'true' \
    > test.out 2>&1
eval_tap $? 124 'AdminGetClientsByNamespaceV3' test.out

#- 125 AdminBulkUpdateClientsV3
# body param: body
echo '{"clientIds": ["SRnEilXU", "exhNfv2M", "YzEFfI10"], "clientUpdateRequest": {"audiences": ["dM0d8g6r", "5mrB2tk4", "Qzvuc2Ih"], "baseUri": "DiGSekwN", "clientName": "DDgl04Xy", "clientPermissions": [{"action": 79, "resource": "foXlTYvX", "schedAction": 24, "schedCron": "xgAplAGC", "schedRange": ["DV8p3KIe", "AFEVpwqV", "xwKEeNWV"]}, {"action": 64, "resource": "aTDMbJYT", "schedAction": 19, "schedCron": "LxtUEyCp", "schedRange": ["mVAqHtGa", "GmIGFTB5", "IqKmPH6t"]}, {"action": 69, "resource": "uBQSrUFH", "schedAction": 16, "schedCron": "mDpgs9WX", "schedRange": ["RcgchVux", "buYfzNHr", "Xo5IlJWz"]}], "clientPlatform": "lF39hD0M", "deletable": true, "description": "W7lRFvwq", "modulePermissions": [{"moduleId": "wAhIlVoD", "selectedGroups": [{"groupId": "bjGkkcvU", "selectedActions": [95, 97, 48]}, {"groupId": "MD8owTkz", "selectedActions": [51, 76, 37]}, {"groupId": "rw06mXsp", "selectedActions": [46, 45, 84]}]}, {"moduleId": "AZPTLfzS", "selectedGroups": [{"groupId": "qqGjbZbg", "selectedActions": [26, 38, 55]}, {"groupId": "nzfJjdaE", "selectedActions": [45, 83, 44]}, {"groupId": "XWytLPa9", "selectedActions": [24, 45, 10]}]}, {"moduleId": "a8u9DFGK", "selectedGroups": [{"groupId": "3Zn32Stv", "selectedActions": [34, 37, 34]}, {"groupId": "VC9TIxe9", "selectedActions": [32, 72, 90]}, {"groupId": "eUhld1i8", "selectedActions": [31, 16, 100]}]}], "namespace": "SKxmGSrT", "oauthAccessTokenExpiration": 27, "oauthAccessTokenExpirationTimeUnit": "UqU2xDtV", "oauthRefreshTokenExpiration": 20, "oauthRefreshTokenExpirationTimeUnit": "vuU7wNoi", "redirectUri": "nKfHa7LX", "scopes": ["KhtRspTF", "9vjrjjam", "KZZhljG7"], "skipLoginQueue": true, "twoFactorEnabled": false}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBulkUpdateClientsV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 125 'AdminBulkUpdateClientsV3' test.out

#- 126 AdminCreateClientV3
# body param: body
echo '{"audiences": ["EguvNRGt", "6wkNpxty", "HhzLbWVd"], "baseUri": "B3k8sjRC", "clientId": "8xMdG3GI", "clientName": "rqfesWGU", "clientPermissions": [{"action": 63, "resource": "YTu9sQo5", "schedAction": 56, "schedCron": "H5HVLLgU", "schedRange": ["TEgHGWoF", "sNy3pLzR", "I2fT11tL"]}, {"action": 45, "resource": "b71NGNAO", "schedAction": 14, "schedCron": "0wDh41Yb", "schedRange": ["Mnsg8qpU", "W9igDwQc", "YqPZbhEW"]}, {"action": 49, "resource": "hN8DyLzh", "schedAction": 78, "schedCron": "w6wVaFKr", "schedRange": ["I5jxbBlF", "RrVj9K4J", "1XJY3rS6"]}], "clientPlatform": "iFFlcdg9", "deletable": false, "description": "JkfuMrjF", "modulePermissions": [{"moduleId": "AgEhppot", "selectedGroups": [{"groupId": "uQnuqAek", "selectedActions": [27, 73, 88]}, {"groupId": "vjYaFcod", "selectedActions": [92, 32, 90]}, {"groupId": "MmmOeJ9j", "selectedActions": [11, 25, 34]}]}, {"moduleId": "OQ2eEU10", "selectedGroups": [{"groupId": "V9r5eWN6", "selectedActions": [75, 6, 34]}, {"groupId": "imkZt69U", "selectedActions": [54, 38, 18]}, {"groupId": "Zi0P1iLM", "selectedActions": [46, 13, 75]}]}, {"moduleId": "5wEeuu7B", "selectedGroups": [{"groupId": "3VZ2exMm", "selectedActions": [62, 73, 89]}, {"groupId": "T4wi1MHj", "selectedActions": [41, 71, 8]}, {"groupId": "3xiCvlvm", "selectedActions": [69, 99, 63]}]}], "namespace": "VQGOIfTH", "oauthAccessTokenExpiration": 51, "oauthAccessTokenExpirationTimeUnit": "7yqSIC1Y", "oauthClientType": "zYRf5ZjO", "oauthRefreshTokenExpiration": 86, "oauthRefreshTokenExpirationTimeUnit": "f1wIa2Eu", "parentNamespace": "8zWUWSa7", "redirectUri": "DTmiEPCy", "scopes": ["7u6LsHK2", "gUWlY1j5", "vsh1EsY2"], "secret": "ein6uNEU", "skipLoginQueue": false, "twoFactorEnabled": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminCreateClientV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 126 'AdminCreateClientV3' test.out

#- 127 AdminGetClientsbyNamespacebyIDV3
$CLI_EXE \
    --sn iam \
    --op AdminGetClientsbyNamespacebyIDV3 \
    --clientId 'RgQTvxWB' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 127 'AdminGetClientsbyNamespacebyIDV3' test.out

#- 128 AdminDeleteClientV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteClientV3 \
    --clientId 'WTqXBDJo' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 128 'AdminDeleteClientV3' test.out

#- 129 AdminUpdateClientV3
# body param: body
echo '{"audiences": ["zJ7lMIki", "AiptcmWy", "OKbia2ge"], "baseUri": "IJbd2CM8", "clientName": "DWnzJTNW", "clientPermissions": [{"action": 42, "resource": "oOyxrDUU", "schedAction": 81, "schedCron": "9QSYS5yO", "schedRange": ["XTYVLDvg", "mnudn9xD", "90mIti6i"]}, {"action": 72, "resource": "goJrKd5X", "schedAction": 60, "schedCron": "isp1WFyQ", "schedRange": ["ZYkr8cRV", "CLaYydXA", "7qgujRHp"]}, {"action": 82, "resource": "hqIvPwMd", "schedAction": 50, "schedCron": "bCoU1olO", "schedRange": ["wDkhlUIc", "BZLuFT0s", "3mRi0jH8"]}], "clientPlatform": "f7faRVl0", "deletable": false, "description": "FWqFB5tB", "modulePermissions": [{"moduleId": "50o6YWHT", "selectedGroups": [{"groupId": "ePOdkBYT", "selectedActions": [14, 65, 57]}, {"groupId": "u1ADRRyY", "selectedActions": [4, 21, 29]}, {"groupId": "rMWeMG39", "selectedActions": [80, 45, 27]}]}, {"moduleId": "ggOF5ktX", "selectedGroups": [{"groupId": "TwEXIUOb", "selectedActions": [57, 24, 61]}, {"groupId": "yTEgfmPu", "selectedActions": [64, 54, 24]}, {"groupId": "KpzmrolZ", "selectedActions": [46, 23, 39]}]}, {"moduleId": "D1ngEHTf", "selectedGroups": [{"groupId": "FCFiSdWL", "selectedActions": [58, 34, 18]}, {"groupId": "uMTTfG0f", "selectedActions": [100, 58, 64]}, {"groupId": "aun2EODy", "selectedActions": [2, 20, 92]}]}], "namespace": "3WGjL06T", "oauthAccessTokenExpiration": 100, "oauthAccessTokenExpirationTimeUnit": "DEkXlwsL", "oauthRefreshTokenExpiration": 41, "oauthRefreshTokenExpirationTimeUnit": "x0LkO3FP", "redirectUri": "FO2xzTaG", "scopes": ["LsRLpoTb", "aT2bOxKT", "HSWlak8l"], "skipLoginQueue": true, "twoFactorEnabled": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateClientV3 \
    --clientId 'd2Y8NORL' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 129 'AdminUpdateClientV3' test.out

#- 130 AdminUpdateClientPermissionV3
# body param: body
echo '{"permissions": [{"action": 28, "resource": "tGwPH8me"}, {"action": 62, "resource": "aXoJfU6I"}, {"action": 56, "resource": "9SyPYdTT"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateClientPermissionV3 \
    --clientId 'ROtCyRwe' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 130 'AdminUpdateClientPermissionV3' test.out

#- 131 AdminAddClientPermissionsV3
# body param: body
echo '{"permissions": [{"action": 49, "resource": "0unYrWtx"}, {"action": 33, "resource": "cOtczmZN"}, {"action": 24, "resource": "1b6yRn6I"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddClientPermissionsV3 \
    --clientId 'iTbfst8B' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 131 'AdminAddClientPermissionsV3' test.out

#- 132 AdminDeleteClientPermissionV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteClientPermissionV3 \
    --action '89' \
    --clientId 'sUeqoOzU' \
    --namespace $AB_NAMESPACE \
    --resource 'mv4q5O61' \
    > test.out 2>&1
eval_tap $? 132 'AdminDeleteClientPermissionV3' test.out

#- 133 AdminGetConfigValueV3
$CLI_EXE \
    --sn iam \
    --op AdminGetConfigValueV3 \
    --configKey 'AGiWog8j' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 133 'AdminGetConfigValueV3' test.out

#- 134 AdminGetCountryListV3
$CLI_EXE \
    --sn iam \
    --op AdminGetCountryListV3 \
    --namespace $AB_NAMESPACE \
    --filterBlacklist 'true' \
    > test.out 2>&1
eval_tap $? 134 'AdminGetCountryListV3' test.out

#- 135 AdminGetCountryBlacklistV3
$CLI_EXE \
    --sn iam \
    --op AdminGetCountryBlacklistV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 135 'AdminGetCountryBlacklistV3' test.out

#- 136 AdminAddCountryBlacklistV3
# body param: body
echo '{"blacklist": ["zUBDrrXw", "csuGJyZl", "PzNrx75x"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddCountryBlacklistV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 136 'AdminAddCountryBlacklistV3' test.out

#- 137 AdminGetLoginAllowlistV3
$CLI_EXE \
    --sn iam \
    --op AdminGetLoginAllowlistV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 137 'AdminGetLoginAllowlistV3' test.out

#- 138 AdminUpdateLoginAllowlistV3
# body param: body
echo '{"active": true, "roleIds": ["ucGQCmag", "yFx4oz7Y", "6PJQzvo5"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateLoginAllowlistV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 138 'AdminUpdateLoginAllowlistV3' test.out

#- 139 RetrieveAllThirdPartyLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op RetrieveAllThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 139 'RetrieveAllThirdPartyLoginPlatformCredentialV3' test.out

#- 140 RetrieveAllActiveThirdPartyLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op RetrieveAllActiveThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 140 'RetrieveAllActiveThirdPartyLoginPlatformCredentialV3' test.out

#- 141 RetrieveAllSSOLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op RetrieveAllSSOLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --limit '81' \
    --offset '52' \
    > test.out 2>&1
eval_tap $? 141 'RetrieveAllSSOLoginPlatformCredentialV3' test.out

#- 142 RetrieveThirdPartyLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op RetrieveThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'DgxQ70ak' \
    > test.out 2>&1
eval_tap $? 142 'RetrieveThirdPartyLoginPlatformCredentialV3' test.out

#- 143 AddThirdPartyLoginPlatformCredentialV3
# body param: body
echo '{"ACSURL": "o1OWbLNG", "AWSCognitoRegion": "KTW0BICj", "AWSCognitoUserPool": "rAfT7ZTr", "AllowedClients": ["lUMpfFV1", "KA5Y53Pz", "WPiTVzz8"], "AppId": "tJOe8GGE", "AuthorizationEndpoint": "I4HfmfXk", "ClientId": "IxRSYPHT", "EmptyStrFieldList": ["2xlt5L9Y", "GTpsjedf", "Eot1Edxb"], "EnableServerLicenseValidation": false, "Environment": "sUWwMlFL", "FederationMetadataURL": "MZsftcx0", "GenericOauthFlow": false, "IncludePUID": true, "IsActive": true, "Issuer": "28jh6Je7", "JWKSEndpoint": "XqXKOXQq", "KeyID": "bvCwKAkR", "LogoURL": "RBEliF5v", "NetflixCertificates": {"encryptedPrivateKey": "AzX37DPV", "encryptedPrivateKeyName": "foLlopDJ", "publicCertificate": "Bffy05sQ", "publicCertificateName": "cTqpKvN7", "rootCertificate": "eEhUFQfa", "rootCertificateName": "arYH9ezx"}, "OrganizationId": "ACm2dUOo", "PlatformName": "VziRefG3", "RedirectUri": "fMFM1EIR", "RegisteredDomains": [{"affectedClientIDs": ["PuNX3fSv", "n1FrqzBG", "gTULtMve"], "domain": "wV156Nje", "namespaces": ["oxvkSE3R", "Y4yLjMXN", "krTRn6sB"], "roleId": "5acfgSYv", "ssoCfg": {"googleKey": {"nvnF7Dw4": {}, "UhAKJOeX": {}, "gvLFzMPp": {}}, "groupConfigs": [{"assignNamespaces": ["fzogbL1M", "fftCaBFZ", "571pprBO"], "group": "6CNkpfqw", "roleId": "1nVmSWPk"}, {"assignNamespaces": ["UU1rldfM", "mfRkXDoR", "hhIr1plY"], "group": "s3hoREjc", "roleId": "RNumUbIO"}, {"assignNamespaces": ["SERotigN", "GrYebIt3", "1P4QqHjd"], "group": "fIrdkLDC", "roleId": "vbvODzyz"}]}}, {"affectedClientIDs": ["Ry7ypDIv", "nHetRhfi", "TMPLUydd"], "domain": "ffKhewd5", "namespaces": ["3QNsSBcA", "As7xX7Vn", "w5YKmg24"], "roleId": "zSTNQM7x", "ssoCfg": {"googleKey": {"oSYY57BC": {}, "0w0PWWiU": {}, "FepNhPxh": {}}, "groupConfigs": [{"assignNamespaces": ["KbjhOnrS", "3hpZh3Nj", "xeItribG"], "group": "LEUi6r1p", "roleId": "Or9WtySO"}, {"assignNamespaces": ["9sORVl5I", "LrjWf68P", "qVZnl0lv"], "group": "37KLJgCP", "roleId": "PLra6kZS"}, {"assignNamespaces": ["GriaCjdh", "27J5jOSz", "vqc5HLWo"], "group": "xnPxZpW8", "roleId": "ob4i5GIv"}]}}, {"affectedClientIDs": ["JZAFdhFh", "oc9gsxk8", "g7axdiLi"], "domain": "Aw2lGIvM", "namespaces": ["VMlmgEEW", "N1rN6F1j", "OiR5MHGY"], "roleId": "5wnEBjNX", "ssoCfg": {"googleKey": {"WUzxW8o5": {}, "DiHNZM59": {}, "uFfAuXo0": {}}, "groupConfigs": [{"assignNamespaces": ["kXRsAXZ1", "AXJkG2wq", "MufvncFQ"], "group": "mNIV8xAY", "roleId": "8rLIR3Yo"}, {"assignNamespaces": ["6d1SMX2m", "yH3DkBLS", "G45xuUtz"], "group": "uomhsZZR", "roleId": "ImjlOgdV"}, {"assignNamespaces": ["h9Hl3wUV", "6LRmc9dd", "QB5WgTHJ"], "group": "9o0UPZkG", "roleId": "cFUPgIPA"}]}}], "Secret": "Z9oFj3GJ", "TeamID": "2gsrPPFc", "TokenAuthenticationType": "EoK6GA9k", "TokenClaimsMapping": {"q5cLcrzF": "GvAnJxEe", "raIApmI6": "iaPItsKQ", "oP2Nd0LN": "1FCCipFg"}, "TokenEndpoint": "Nj2vEoqr", "UserInfoEndpoint": "DzyRH9z5", "UserInfoHTTPMethod": "kBIyXsYi", "googleAdminConsoleKey": "lHmoxfoE", "scopes": ["IP7M6Mny", "nQSlejyb", "STuq1YTX"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AddThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --platformId '1IhMjfWm' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 143 'AddThirdPartyLoginPlatformCredentialV3' test.out

#- 144 DeleteThirdPartyLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op DeleteThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'pvjs35sq' \
    > test.out 2>&1
eval_tap $? 144 'DeleteThirdPartyLoginPlatformCredentialV3' test.out

#- 145 UpdateThirdPartyLoginPlatformCredentialV3
# body param: body
echo '{"ACSURL": "VAGd6o3T", "AWSCognitoRegion": "x8eIKyHt", "AWSCognitoUserPool": "1HDSgJA7", "AllowedClients": ["8FJMKsLR", "Aq7e5L39", "tu1INi2x"], "AppId": "UZTuFV9H", "AuthorizationEndpoint": "HTyKdTX7", "ClientId": "ubt1ESUf", "EmptyStrFieldList": ["WWDbvHpV", "nCxEKjMR", "BQwn2g0b"], "EnableServerLicenseValidation": false, "Environment": "aaWbKSc5", "FederationMetadataURL": "Mjrlw9oP", "GenericOauthFlow": false, "IncludePUID": false, "IsActive": true, "Issuer": "HGaX14J1", "JWKSEndpoint": "LwU0agD8", "KeyID": "AZL5so2N", "LogoURL": "bWOjYZqw", "NetflixCertificates": {"encryptedPrivateKey": "LmEWiltx", "encryptedPrivateKeyName": "AgpSHxBu", "publicCertificate": "x4vBdU91", "publicCertificateName": "L0LcMqzf", "rootCertificate": "8iefrBk6", "rootCertificateName": "GxAysc0s"}, "OrganizationId": "U5rTOJu8", "PlatformName": "6hdBqeC5", "RedirectUri": "T5nrXPFc", "RegisteredDomains": [{"affectedClientIDs": ["3wkbyHyq", "4eqTbJLG", "KS7gznGC"], "domain": "oNvm89Bg", "namespaces": ["cu8JzxAR", "vwDgcxGl", "zERm6fhi"], "roleId": "9Zx6lo63", "ssoCfg": {"googleKey": {"irjNn5H8": {}, "CJtJMch1": {}, "N4Jk8azK": {}}, "groupConfigs": [{"assignNamespaces": ["wy9w1mkq", "yXlJcl8Z", "iYUo6zuk"], "group": "bpDnw9wf", "roleId": "W4Faijdg"}, {"assignNamespaces": ["Y4PBstLW", "65mr8MV1", "o32hhVcg"], "group": "jIrKSXM9", "roleId": "ALxvft3i"}, {"assignNamespaces": ["jkTZlOPx", "UNhJmcGV", "CQ21iffa"], "group": "DaUxzS7F", "roleId": "hQXXR1Ug"}]}}, {"affectedClientIDs": ["ONmY2Xnq", "tBKsUJ57", "AbCadnvO"], "domain": "xt7Qp68S", "namespaces": ["w4MgDg6W", "bfi9OTqW", "jfgwvkPE"], "roleId": "JqMNqnwQ", "ssoCfg": {"googleKey": {"TCGPJfPx": {}, "unAODq2k": {}, "tCeKDmiO": {}}, "groupConfigs": [{"assignNamespaces": ["iR9tMSiu", "CRkZzPLw", "UzptrDDc"], "group": "4tQ4gMYI", "roleId": "aAxTVAdP"}, {"assignNamespaces": ["SmDB4Ws1", "hbvfyziH", "t5BAoU5J"], "group": "uX0QNc94", "roleId": "INWL6bQ7"}, {"assignNamespaces": ["K4o3u1C4", "ra52cvHi", "fFn9PwIe"], "group": "608B4vnj", "roleId": "K7FQ7Jd1"}]}}, {"affectedClientIDs": ["5FXiyxv8", "xJ5uNcrV", "CmPZP5Ve"], "domain": "ERHkdJIL", "namespaces": ["UAjZs9YO", "MgmOhJFe", "VrWBBo7e"], "roleId": "DJbVt1WE", "ssoCfg": {"googleKey": {"Y4PlDI1b": {}, "47cAQ1K1": {}, "iCnoCRzF": {}}, "groupConfigs": [{"assignNamespaces": ["DPCjiJAt", "VwdsiihN", "GsYMYVfA"], "group": "g800bDtn", "roleId": "ljz44pPN"}, {"assignNamespaces": ["W3J7azVO", "PcSzzdpb", "WoZwIdRa"], "group": "njEEN4YD", "roleId": "6NZFGQPc"}, {"assignNamespaces": ["61tIoSYh", "FEHheEFj", "uO53a0JW"], "group": "EDcVt7ln", "roleId": "ojzfWrMU"}]}}], "Secret": "iKjbIlPZ", "TeamID": "qkmUy7zs", "TokenAuthenticationType": "oD1tLcO9", "TokenClaimsMapping": {"Nxl282Zi": "RppR3TfH", "ElYX0zda": "sodENQ20", "xyseY28Z": "a2Y2IEST"}, "TokenEndpoint": "DsDfbB6q", "UserInfoEndpoint": "OwtNqd47", "UserInfoHTTPMethod": "h2ADsxJP", "googleAdminConsoleKey": "A1u9LUaS", "scopes": ["jth3vXaq", "J9WdxlA5", "aJLO3VNN"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op UpdateThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'peTNX18G' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 145 'UpdateThirdPartyLoginPlatformCredentialV3' test.out

#- 146 UpdateThirdPartyLoginPlatformDomainV3
# body param: body
echo '{"affectedClientIDs": ["pZDK3Yf3", "vw8HDCED", "CzYZ1Vid"], "assignedNamespaces": ["VrgNRMuu", "UtC1YsqP", "wqVGHhOO"], "domain": "tXyhjtrm", "roleId": "IkLIq8jx", "ssoCfg": {"googleKey": {"sQtkYlnO": {}, "Yy1qIEEp": {}, "UBCDxWEm": {}}, "groupConfigs": [{"assignNamespaces": ["MrlSlSZo", "qQZHT6fG", "1lT9wcRm"], "group": "O1sCs6UI", "roleId": "ZjpEdwcP"}, {"assignNamespaces": ["JNbZsPfT", "d2CmYhdr", "CDNbS16U"], "group": "WI74GyhN", "roleId": "yqcK27nt"}, {"assignNamespaces": ["HL22VN5U", "vCS0KkHy", "iQYEb06V"], "group": "vXIqadUy", "roleId": "ZYcKsBmE"}]}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op UpdateThirdPartyLoginPlatformDomainV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'SdR2RT92' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 146 'UpdateThirdPartyLoginPlatformDomainV3' test.out

#- 147 DeleteThirdPartyLoginPlatformDomainV3
# body param: body
echo '{"domain": "d0XREibd", "ssoGroups": ["UbkBb6TF", "EtVfHCzE", "1PgAwgZW"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op DeleteThirdPartyLoginPlatformDomainV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'PRLXq6wS' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 147 'DeleteThirdPartyLoginPlatformDomainV3' test.out

#- 148 PartialUpdateThirdPartyLoginPlatformDomainV3
# body param: body
echo '{"affectedClientIDs": ["hsHMhvg1", "1yZc6YUE", "P73RoG8r"], "assignedNamespaces": ["reOqTviA", "NgiBENNV", "7Zj9aVhF"], "domain": "cJAdggb6", "roleId": "NeZN5qEZ", "ssoCfg": {"googleKey": {"GXZOcUin": {}, "4PGc3Zch": {}, "uq83ZIyP": {}}, "groupConfigs": [{"assignNamespaces": ["fo19N7Rx", "SYRdlOSa", "6m4MV5P8"], "group": "DcATDxeA", "roleId": "7Z6omrMs"}, {"assignNamespaces": ["T5KbGNss", "Hc1E6TUA", "Ao26oial"], "group": "Wtga5BDt", "roleId": "z4dWHfnJ"}, {"assignNamespaces": ["je3KppAT", "j5PJWXpZ", "DU4kJ6XG"], "group": "j2iEtDVP", "roleId": "simDEN9w"}]}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PartialUpdateThirdPartyLoginPlatformDomainV3 \
    --namespace $AB_NAMESPACE \
    --platformId '1u4Qr0hf' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 148 'PartialUpdateThirdPartyLoginPlatformDomainV3' test.out

#- 149 RetrieveSSOLoginPlatformCredential
$CLI_EXE \
    --sn iam \
    --op RetrieveSSOLoginPlatformCredential \
    --namespace $AB_NAMESPACE \
    --platformId 'QYfHaUEk' \
    > test.out 2>&1
eval_tap $? 149 'RetrieveSSOLoginPlatformCredential' test.out

#- 150 AddSSOLoginPlatformCredential
# body param: body
echo '{"acsUrl": "qOyHrdFh", "apiKey": "TkFe4YKV", "appId": "1qxwdf3B", "federationMetadataUrl": "EgV3UZ9t", "isActive": false, "redirectUri": "4XmQhYJG", "secret": "3xubzwaE", "ssoUrl": "guMGSefi"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AddSSOLoginPlatformCredential \
    --namespace $AB_NAMESPACE \
    --platformId 'wzGIMJRT' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 150 'AddSSOLoginPlatformCredential' test.out

#- 151 DeleteSSOLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op DeleteSSOLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'nQxCRJYe' \
    > test.out 2>&1
eval_tap $? 151 'DeleteSSOLoginPlatformCredentialV3' test.out

#- 152 UpdateSSOPlatformCredential
# body param: body
echo '{"acsUrl": "N7gntVCy", "apiKey": "rHHGLRpv", "appId": "paxOGUJm", "federationMetadataUrl": "6CBqDeWG", "isActive": true, "redirectUri": "Aiq5Mj8q", "secret": "zFliJIBb", "ssoUrl": "HDE3JK3l"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op UpdateSSOPlatformCredential \
    --namespace $AB_NAMESPACE \
    --platformId 's0Y9W0kU' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 152 'UpdateSSOPlatformCredential' test.out

#- 153 AdminListUserIDByPlatformUserIDsV3
# body param: body
echo '{"platformUserIds": ["H45nGP2b", "9Bomxyla", "4g3ngFo5"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminListUserIDByPlatformUserIDsV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'g2f8IcVO' \
    --rawPID 'true' \
    --rawPUID 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 153 'AdminListUserIDByPlatformUserIDsV3' test.out

#- 154 AdminGetUserByPlatformUserIDV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserByPlatformUserIDV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'B8fynoiw' \
    --platformUserId 'gyYsOKLf' \
    > test.out 2>&1
eval_tap $? 154 'AdminGetUserByPlatformUserIDV3' test.out

#- 155 AdminGetProfileUpdateStrategyV3
$CLI_EXE \
    --sn iam \
    --op AdminGetProfileUpdateStrategyV3 \
    --namespace $AB_NAMESPACE \
    --field 'display_name' \
    > test.out 2>&1
eval_tap $? 155 'AdminGetProfileUpdateStrategyV3' test.out

#- 156 AdminUpdateProfileUpdateStrategyV3
# body param: body
echo '{"config": {"minimumAllowedInterval": 59}, "type": "AfYTVoCZ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateProfileUpdateStrategyV3 \
    --namespace $AB_NAMESPACE \
    --field 'username' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 156 'AdminUpdateProfileUpdateStrategyV3' test.out

#- 157 AdminGetRoleOverrideConfigV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleOverrideConfigV3 \
    --namespace $AB_NAMESPACE \
    --identity 'VIEW_ONLY' \
    > test.out 2>&1
eval_tap $? 157 'AdminGetRoleOverrideConfigV3' test.out

#- 158 AdminUpdateRoleOverrideConfigV3
# body param: body
echo '{"additions": [{"actions": [81, 64, 76], "resource": "j6KpKXDn"}, {"actions": [14, 6, 49], "resource": "uckQJBfY"}, {"actions": [97, 7, 78], "resource": "Nb5Z94PV"}], "exclusions": [{"actions": [58, 62, 8], "resource": "Pn6eKSgj"}, {"actions": [11, 37, 56], "resource": "9J98Eb7K"}, {"actions": [9, 63, 83], "resource": "hljHNCMm"}], "overrides": [{"actions": [11, 45, 34], "resource": "RmU9fw2y"}, {"actions": [50, 87, 87], "resource": "mTTrcpRH"}, {"actions": [97, 3, 7], "resource": "23LKCmPQ"}], "replacements": [{"replacement": {"actions": [22, 52, 21], "resource": "Hc1OlXTx"}, "target": "gn8HwG2c"}, {"replacement": {"actions": [7, 65, 27], "resource": "a5k4R8wF"}, "target": "G5hMaaMV"}, {"replacement": {"actions": [90, 11, 5], "resource": "QfHVP5at"}, "target": "YOZe0aRU"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateRoleOverrideConfigV3 \
    --namespace $AB_NAMESPACE \
    --identity 'GAME_ADMIN' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 158 'AdminUpdateRoleOverrideConfigV3' test.out

#- 159 AdminGetRoleSourceV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleSourceV3 \
    --namespace $AB_NAMESPACE \
    --identity 'USER' \
    > test.out 2>&1
eval_tap $? 159 'AdminGetRoleSourceV3' test.out

#- 160 AdminChangeRoleOverrideConfigStatusV3
# body param: body
echo '{"active": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminChangeRoleOverrideConfigStatusV3 \
    --namespace $AB_NAMESPACE \
    --identity 'USER' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 160 'AdminChangeRoleOverrideConfigStatusV3' test.out

#- 161 AdminGetRoleNamespacePermissionV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleNamespacePermissionV3 \
    --namespace $AB_NAMESPACE \
    --roleId '9iJ7WDhj' \
    > test.out 2>&1
eval_tap $? 161 'AdminGetRoleNamespacePermissionV3' test.out

#- 162 GetAdminUsersByRoleIdV3
$CLI_EXE \
    --sn iam \
    --op GetAdminUsersByRoleIdV3 \
    --namespace $AB_NAMESPACE \
    --roleId 'YLK73Pm1' \
    --after '20' \
    --before '48' \
    --limit '2' \
    > test.out 2>&1
eval_tap $? 162 'GetAdminUsersByRoleIdV3' test.out

#- 163 AdminGetUserByEmailAddressV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserByEmailAddressV3 \
    --namespace $AB_NAMESPACE \
    --emailAddress 'pZv2NZnf' \
    > test.out 2>&1
eval_tap $? 163 'AdminGetUserByEmailAddressV3' test.out

#- 164 AdminBulkUpdateUsersV3
# body param: body
echo '{"updateRequest": {"skipLoginQueue": false}, "userIds": ["pbxTRrla", "4xloOQqN", "JNuyuvmx"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBulkUpdateUsersV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 164 'AdminBulkUpdateUsersV3' test.out

#- 165 AdminGetBulkUserBanV3
# body param: body
echo '{"bulkUserId": ["ZmXkFisC", "9rmACIPE", "iQ805eFx"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminGetBulkUserBanV3 \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --banType 'l4tJHHcM' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 165 'AdminGetBulkUserBanV3' test.out

#- 166 AdminListUserIDByUserIDsV3
# body param: body
echo '{"userIds": ["QVwO7piz", "NSYwDmuD", "W7c94U5c"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminListUserIDByUserIDsV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 166 'AdminListUserIDByUserIDsV3' test.out

#- 167 AdminBulkGetUsersPlatform
# body param: body
echo '{"userIds": ["WfACjPWt", "OuLadCr4", "BSG65TCL"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBulkGetUsersPlatform \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 167 'AdminBulkGetUsersPlatform' test.out

#- 168 AdminInviteUserV3
# body param: body
echo '{"emailAddresses": ["ZZcxe2n7", "rKPVOQzh", "YllTvqaP"], "isAdmin": true, "languageTag": "PWBA8U1J", "namespace": "S3zBRKoo", "roles": ["W6hKbdYL", "0i9KtQkS", "aK1YSqY1"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminInviteUserV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 168 'AdminInviteUserV3' test.out

#- 169 AdminQueryThirdPlatformLinkHistoryV3
$CLI_EXE \
    --sn iam \
    --op AdminQueryThirdPlatformLinkHistoryV3 \
    --namespace $AB_NAMESPACE \
    --limit '47' \
    --offset '30' \
    --platformUserId 'xLgWLqgF' \
    --platformId 'P0kpYJYm' \
    > test.out 2>&1
eval_tap $? 169 'AdminQueryThirdPlatformLinkHistoryV3' test.out

#- 170 AdminListUsersV3
$CLI_EXE \
    --sn iam \
    --op AdminListUsersV3 \
    --namespace $AB_NAMESPACE \
    --limit '83' \
    --offset '64' \
    > test.out 2>&1
eval_tap $? 170 'AdminListUsersV3' test.out

#- 171 AdminSearchUserV3
$CLI_EXE \
    --sn iam \
    --op AdminSearchUserV3 \
    --namespace $AB_NAMESPACE \
    --by 'dvEcyxUy' \
    --endDate 'KXM8H7mU' \
    --includeTotal 'true' \
    --limit '64' \
    --offset '9' \
    --platformBy 'uYGyKK8w' \
    --platformId '5GY5zDdB' \
    --query 'IzKcAOcS' \
    --roleIds 'Mqjhdat6' \
    --skipLoginQueue 'true' \
    --startDate 'BbaZSpRP' \
    --testAccount 'true' \
    > test.out 2>&1
eval_tap $? 171 'AdminSearchUserV3' test.out

#- 172 AdminGetBulkUserByEmailAddressV3
# body param: body
echo '{"listEmailAddressRequest": ["jylUdihK", "kItSWMCV", "JGj5iKej"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminGetBulkUserByEmailAddressV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 172 'AdminGetBulkUserByEmailAddressV3' test.out

#- 173 AdminGetUserByUserIdV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserByUserIdV3 \
    --namespace $AB_NAMESPACE \
    --userId 'i36DOQa0' \
    > test.out 2>&1
eval_tap $? 173 'AdminGetUserByUserIdV3' test.out

#- 174 AdminUpdateUserV3
# body param: body
echo '{"avatarUrl": "LFx4lLia", "country": "eLlLxcOv", "dateOfBirth": "zljFSy0W", "displayName": "vXpJXiLl", "languageTag": "EvpVnkZL", "skipLoginQueue": false, "uniqueDisplayName": "ZOrYPsqt", "userName": "M2yhJdik"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserV3 \
    --namespace $AB_NAMESPACE \
    --userId 'aJoM6LJG' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 174 'AdminUpdateUserV3' test.out

#- 175 AdminGetUserBanV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserBanV3 \
    --namespace $AB_NAMESPACE \
    --userId 'zjAmlc6K' \
    --activeOnly 'true' \
    --after 'Vnz6Raxv' \
    --before '5VYtvkxQ' \
    --limit '92' \
    > test.out 2>&1
eval_tap $? 175 'AdminGetUserBanV3' test.out

#- 176 AdminBanUserV3
# body param: body
echo '{"ban": "azEFvMIh", "comment": "Csmf35Sf", "endDate": "ZkMdzrrq", "reason": "lWJXxJ6k", "skipNotif": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBanUserV3 \
    --namespace $AB_NAMESPACE \
    --userId 'VXzmaWq4' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 176 'AdminBanUserV3' test.out

#- 177 AdminGetUserBanSummaryV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserBanSummaryV3 \
    --namespace $AB_NAMESPACE \
    --userId 'lTLYXiT9' \
    > test.out 2>&1
eval_tap $? 177 'AdminGetUserBanSummaryV3' test.out

#- 178 AdminUpdateUserBanV3
# body param: body
echo '{"enabled": true, "skipNotif": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserBanV3 \
    --banId 'RARuP6zl' \
    --namespace $AB_NAMESPACE \
    --userId 'L9q5Ks2v' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 178 'AdminUpdateUserBanV3' test.out

#- 179 AdminSendVerificationCodeV3
# body param: body
echo '{"context": "POGJaeup", "emailAddress": "DrzdBVlY", "languageTag": "Zj2nPvoN", "upgradeToken": "vGsjhoEl"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminSendVerificationCodeV3 \
    --namespace $AB_NAMESPACE \
    --userId 's6lgdMRx' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 179 'AdminSendVerificationCodeV3' test.out

#- 180 AdminVerifyAccountV3
# body param: body
echo '{"Code": "YSu5SFJX", "ContactType": "mEZEpkuH", "LanguageTag": "xKemYzQF", "validateOnly": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminVerifyAccountV3 \
    --namespace $AB_NAMESPACE \
    --userId '11O3enJX' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 180 'AdminVerifyAccountV3' test.out

#- 181 GetUserVerificationCode
$CLI_EXE \
    --sn iam \
    --op GetUserVerificationCode \
    --namespace $AB_NAMESPACE \
    --userId 'NwQCgCt1' \
    > test.out 2>&1
eval_tap $? 181 'GetUserVerificationCode' test.out

#- 182 AdminGetUserDeletionStatusV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserDeletionStatusV3 \
    --namespace $AB_NAMESPACE \
    --userId '0wlsnvsw' \
    > test.out 2>&1
eval_tap $? 182 'AdminGetUserDeletionStatusV3' test.out

#- 183 AdminUpdateUserDeletionStatusV3
# body param: body
echo '{"deletionDate": 86, "enabled": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserDeletionStatusV3 \
    --namespace $AB_NAMESPACE \
    --userId 'PHn4Xx0n' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 183 'AdminUpdateUserDeletionStatusV3' test.out

#- 184 AdminListUserAllPlatformAccountsDistinctV3
$CLI_EXE \
    --sn iam \
    --op AdminListUserAllPlatformAccountsDistinctV3 \
    --namespace $AB_NAMESPACE \
    --userId '003HKPgN' \
    > test.out 2>&1
eval_tap $? 184 'AdminListUserAllPlatformAccountsDistinctV3' test.out

#- 185 AdminUpgradeHeadlessAccountV3
# body param: body
echo '{"code": "5CCMfSMh", "country": "Ix0SIY4S", "dateOfBirth": "zzyRqozc", "displayName": "nQZ5bXiD", "emailAddress": "lqYRsTkx", "password": "xM7S0UeM", "uniqueDisplayName": "ekyQfESd", "validateOnly": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpgradeHeadlessAccountV3 \
    --namespace $AB_NAMESPACE \
    --userId 'eDmapwRn' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 185 'AdminUpgradeHeadlessAccountV3' test.out

#- 186 AdminDeleteUserInformationV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserInformationV3 \
    --namespace $AB_NAMESPACE \
    --userId 'nRoXLijy' \
    > test.out 2>&1
eval_tap $? 186 'AdminDeleteUserInformationV3' test.out

#- 187 AdminGetUserLoginHistoriesV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserLoginHistoriesV3 \
    --namespace $AB_NAMESPACE \
    --userId 'OGEmlKO7' \
    --after '0.9018922100525033' \
    --before '0.7734666324362717' \
    --limit '70' \
    > test.out 2>&1
eval_tap $? 187 'AdminGetUserLoginHistoriesV3' test.out

#- 188 AdminResetPasswordV3
# body param: body
echo '{"languageTag": "jfkBprn8", "mfaToken": "L4qVkkEF", "newPassword": "zbj0QKEj", "oldPassword": "9Fgy6wQo"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminResetPasswordV3 \
    --namespace $AB_NAMESPACE \
    --userId 'N8cQfWUR' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 188 'AdminResetPasswordV3' test.out

#- 189 AdminUpdateUserPermissionV3
# body param: body
echo '{"Permissions": [{"Action": 14, "Resource": "Kc8uTp3K", "SchedAction": 12, "SchedCron": "ySGlkP4a", "SchedRange": ["R7sFh6Vs", "v5UaO8K7", "RJ96uHIR"]}, {"Action": 18, "Resource": "CyePtKya", "SchedAction": 47, "SchedCron": "C4d2jPsZ", "SchedRange": ["h0xywkRm", "GGKa69Qi", "2Yz5ECqB"]}, {"Action": 97, "Resource": "F5IgT3eu", "SchedAction": 27, "SchedCron": "gwUVhpYt", "SchedRange": ["X84Ta4J2", "6TlW5Z8D", "evXycA2d"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserPermissionV3 \
    --namespace $AB_NAMESPACE \
    --userId 'Pcfirpat' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 189 'AdminUpdateUserPermissionV3' test.out

#- 190 AdminAddUserPermissionsV3
# body param: body
echo '{"Permissions": [{"Action": 6, "Resource": "FzDvQM9b", "SchedAction": 97, "SchedCron": "rJYJ9Whi", "SchedRange": ["1tH1RaA0", "b4InNgqA", "ZJ38MKJI"]}, {"Action": 71, "Resource": "ttEeu101", "SchedAction": 83, "SchedCron": "sDNUBRig", "SchedRange": ["Y77FPPsq", "sE49z5mw", "W3BOxlrA"]}, {"Action": 17, "Resource": "hkzQLnOp", "SchedAction": 96, "SchedCron": "fgGza4nD", "SchedRange": ["QTCX7nPr", "e2ZTXxvQ", "Ei9UZ2qv"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddUserPermissionsV3 \
    --namespace $AB_NAMESPACE \
    --userId 'NC4P2zWy' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 190 'AdminAddUserPermissionsV3' test.out

#- 191 AdminDeleteUserPermissionBulkV3
# body param: body
echo '[{"Action": 90, "Resource": "EwDWHiB0"}, {"Action": 89, "Resource": "Iu2H4mLe"}, {"Action": 95, "Resource": "cCbIuK0S"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserPermissionBulkV3 \
    --namespace $AB_NAMESPACE \
    --userId '00oUQxCP' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 191 'AdminDeleteUserPermissionBulkV3' test.out

#- 192 AdminDeleteUserPermissionV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserPermissionV3 \
    --action '35' \
    --namespace $AB_NAMESPACE \
    --resource 'fxNNJ3pB' \
    --userId 'HVrJB1YN' \
    > test.out 2>&1
eval_tap $? 192 'AdminDeleteUserPermissionV3' test.out

#- 193 AdminGetUserPlatformAccountsV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserPlatformAccountsV3 \
    --namespace $AB_NAMESPACE \
    --userId 'pmuMwVzN' \
    --after 'bEOeaerE' \
    --before 'JIyMD98U' \
    --limit '7' \
    --platformId '4A6fBBMZ' \
    --targetNamespace 'tBuGc7Jd' \
    > test.out 2>&1
eval_tap $? 193 'AdminGetUserPlatformAccountsV3' test.out

#- 194 AdminListAllDistinctPlatformAccountsV3
$CLI_EXE \
    --sn iam \
    --op AdminListAllDistinctPlatformAccountsV3 \
    --namespace $AB_NAMESPACE \
    --userId '2MTNwslC' \
    --status 'Ll5UX2Hu' \
    > test.out 2>&1
eval_tap $? 194 'AdminListAllDistinctPlatformAccountsV3' test.out

#- 195 AdminGetListJusticePlatformAccounts
$CLI_EXE \
    --sn iam \
    --op AdminGetListJusticePlatformAccounts \
    --namespace $AB_NAMESPACE \
    --userId 'INjrwmEy' \
    > test.out 2>&1
eval_tap $? 195 'AdminGetListJusticePlatformAccounts' test.out

#- 196 AdminGetUserMapping
$CLI_EXE \
    --sn iam \
    --op AdminGetUserMapping \
    --namespace $AB_NAMESPACE \
    --targetNamespace 'DrB6P8Yq' \
    --userId 'E4pQWDJF' \
    > test.out 2>&1
eval_tap $? 196 'AdminGetUserMapping' test.out

#- 197 AdminCreateJusticeUser
$CLI_EXE \
    --sn iam \
    --op AdminCreateJusticeUser \
    --namespace $AB_NAMESPACE \
    --targetNamespace 'Xf3daPkn' \
    --userId 'g7aKS9zI' \
    > test.out 2>&1
eval_tap $? 197 'AdminCreateJusticeUser' test.out

#- 198 AdminLinkPlatformAccount
# body param: body
echo '{"platformId": "mog7u81x", "platformUserId": "9Q6sA1Us"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminLinkPlatformAccount \
    --namespace $AB_NAMESPACE \
    --userId 'yh2b3sCu' \
    --skipConflict 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 198 'AdminLinkPlatformAccount' test.out

#- 199 AdminGetUserLinkHistoriesV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserLinkHistoriesV3 \
    --namespace $AB_NAMESPACE \
    --userId 'zOp4TEoh' \
    --platformId 'PIpEO79e' \
    > test.out 2>&1
eval_tap $? 199 'AdminGetUserLinkHistoriesV3' test.out

#- 200 AdminPlatformUnlinkV3
eval_tap 0 200 'AdminPlatformUnlinkV3 # SKIP deprecated' test.out

#- 201 AdminPlatformUnlinkAllV3
$CLI_EXE \
    --sn iam \
    --op AdminPlatformUnlinkAllV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'abO1RSxI' \
    --userId 'sJkJwvq7' \
    > test.out 2>&1
eval_tap $? 201 'AdminPlatformUnlinkAllV3' test.out

#- 202 AdminPlatformLinkV3
$CLI_EXE \
    --sn iam \
    --op AdminPlatformLinkV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'cZ3tuoTw' \
    --userId 'q0jrv4cj' \
    --ticket '014Tar7Q' \
    > test.out 2>&1
eval_tap $? 202 'AdminPlatformLinkV3' test.out

#- 203 AdminDeleteUserLinkingHistoryByPlatformIDV3
eval_tap 0 203 'AdminDeleteUserLinkingHistoryByPlatformIDV3 # SKIP deprecated' test.out

#- 204 AdminDeleteUserLinkingRestrictionByPlatformIDV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserLinkingRestrictionByPlatformIDV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'y2EYj9aq' \
    --userId 'eQoH61Jq' \
    > test.out 2>&1
eval_tap $? 204 'AdminDeleteUserLinkingRestrictionByPlatformIDV3' test.out

#- 205 AdminGetThirdPartyPlatformTokenLinkStatusV3
$CLI_EXE \
    --sn iam \
    --op AdminGetThirdPartyPlatformTokenLinkStatusV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'MwnCOwf9' \
    --userId 'oN9Ms1Oz' \
    --platformToken 'EOm0vors' \
    > test.out 2>&1
eval_tap $? 205 'AdminGetThirdPartyPlatformTokenLinkStatusV3' test.out

#- 206 AdminGetUserSinglePlatformAccount
$CLI_EXE \
    --sn iam \
    --op AdminGetUserSinglePlatformAccount \
    --namespace $AB_NAMESPACE \
    --platformId '71Th4Xsg' \
    --userId 'HjP3jQ1Z' \
    --crossNamespace 'false' \
    > test.out 2>&1
eval_tap $? 206 'AdminGetUserSinglePlatformAccount' test.out

#- 207 AdminDeleteUserRolesV3
# body param: body
echo '["hiz2IEnn", "5aGV21iu", "sRGNi8sc"]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserRolesV3 \
    --namespace $AB_NAMESPACE \
    --userId 'jVZJdhmQ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 207 'AdminDeleteUserRolesV3' test.out

#- 208 AdminSaveUserRoleV3
# body param: body
echo '[{"namespace": "2YiQ4Kqm", "roleId": "GeDIXJ2Y"}, {"namespace": "7FSJXTJS", "roleId": "GmOqMdJ8"}, {"namespace": "ICfEmq9h", "roleId": "XW2lDTbt"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminSaveUserRoleV3 \
    --namespace $AB_NAMESPACE \
    --userId 'pqwSxiqk' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 208 'AdminSaveUserRoleV3' test.out

#- 209 AdminAddUserRoleV3
$CLI_EXE \
    --sn iam \
    --op AdminAddUserRoleV3 \
    --namespace $AB_NAMESPACE \
    --roleId 'vOMZL444' \
    --userId 'ciALonA4' \
    > test.out 2>&1
eval_tap $? 209 'AdminAddUserRoleV3' test.out

#- 210 AdminDeleteUserRoleV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserRoleV3 \
    --namespace $AB_NAMESPACE \
    --roleId 'rS7PM3SV' \
    --userId 'QlIuCzti' \
    > test.out 2>&1
eval_tap $? 210 'AdminDeleteUserRoleV3' test.out

#- 211 AdminGetUserStateByUserIdV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserStateByUserIdV3 \
    --namespace $AB_NAMESPACE \
    --userId 'vrw7QcaK' \
    > test.out 2>&1
eval_tap $? 211 'AdminGetUserStateByUserIdV3' test.out

#- 212 AdminUpdateUserStatusV3
# body param: body
echo '{"enabled": true, "reason": "ywvN4h92"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserStatusV3 \
    --namespace $AB_NAMESPACE \
    --userId 'yZQ8WW1w' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 212 'AdminUpdateUserStatusV3' test.out

#- 213 AdminTrustlyUpdateUserIdentity
# body param: body
echo '{"emailAddress": "HpPFHEZC", "password": "8sVlm963"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminTrustlyUpdateUserIdentity \
    --namespace $AB_NAMESPACE \
    --userId 'sWP7IxhL' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 213 'AdminTrustlyUpdateUserIdentity' test.out

#- 214 AdminVerifyUserWithoutVerificationCodeV3
$CLI_EXE \
    --sn iam \
    --op AdminVerifyUserWithoutVerificationCodeV3 \
    --namespace $AB_NAMESPACE \
    --userId '4GUYKoz3' \
    > test.out 2>&1
eval_tap $? 214 'AdminVerifyUserWithoutVerificationCodeV3' test.out

#- 215 AdminUpdateClientSecretV3
# body param: body
echo '{"newSecret": "b6ojhDUh"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateClientSecretV3 \
    --clientId 'KwTZfyQv' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 215 'AdminUpdateClientSecretV3' test.out

#- 216 AdminCheckThirdPartyLoginPlatformAvailabilityV3
$CLI_EXE \
    --sn iam \
    --op AdminCheckThirdPartyLoginPlatformAvailabilityV3 \
    --platformId 'gXPb70iy' \
    > test.out 2>&1
eval_tap $? 216 'AdminCheckThirdPartyLoginPlatformAvailabilityV3' test.out

#- 217 AdminGetRolesV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRolesV3 \
    --after 'JjYg9Lav' \
    --before 'QaiH0IHd' \
    --isWildcard 'true' \
    --limit '3' \
    > test.out 2>&1
eval_tap $? 217 'AdminGetRolesV3' test.out

#- 218 AdminCreateRoleV3
# body param: body
echo '{"adminRole": true, "deletable": false, "isWildcard": false, "managers": [{"displayName": "X1QZ78Cv", "namespace": "k478QRRG", "userId": "VjdbN2GK"}, {"displayName": "pQESHbtF", "namespace": "nRl21aiz", "userId": "QR9KlUlJ"}, {"displayName": "5o5x6enp", "namespace": "ZybGUw23", "userId": "aFcKcBE4"}], "members": [{"displayName": "13n6AYd5", "namespace": "tObbhmyX", "userId": "OL5Nnj9x"}, {"displayName": "ipF7IABL", "namespace": "97BDzzSs", "userId": "MqJgrDUR"}, {"displayName": "pTyY9PsD", "namespace": "1J6IJSTD", "userId": "9qAr2Ac9"}], "permissions": [{"action": 83, "resource": "ozRbOUnx", "schedAction": 15, "schedCron": "73UXaKx4", "schedRange": ["SRAj9C4O", "YKuwnoYb", "YZ2evkEu"]}, {"action": 78, "resource": "sRuyMjm1", "schedAction": 16, "schedCron": "T3AZw6FE", "schedRange": ["q1tSvJ9v", "yWb2ADlU", "7Gb3CjP9"]}, {"action": 54, "resource": "BHkV3Y4g", "schedAction": 83, "schedCron": "jDOlNPlK", "schedRange": ["ARgPMav1", "ap5Lp2zx", "yMWkxfEv"]}], "roleName": "Wd8A8Qaa"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminCreateRoleV3 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 218 'AdminCreateRoleV3' test.out

#- 219 AdminGetRoleV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleV3 \
    --roleId 'dzxlxdvZ' \
    > test.out 2>&1
eval_tap $? 219 'AdminGetRoleV3' test.out

#- 220 AdminDeleteRoleV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteRoleV3 \
    --roleId '77pr7JvT' \
    > test.out 2>&1
eval_tap $? 220 'AdminDeleteRoleV3' test.out

#- 221 AdminUpdateRoleV3
# body param: body
echo '{"deletable": true, "isWildcard": false, "roleName": "RdVmOGvJ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateRoleV3 \
    --roleId 'neyKSWkU' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 221 'AdminUpdateRoleV3' test.out

#- 222 AdminGetRoleAdminStatusV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleAdminStatusV3 \
    --roleId 'ScnURZbN' \
    > test.out 2>&1
eval_tap $? 222 'AdminGetRoleAdminStatusV3' test.out

#- 223 AdminUpdateAdminRoleStatusV3
$CLI_EXE \
    --sn iam \
    --op AdminUpdateAdminRoleStatusV3 \
    --roleId 'o3MM4jZH' \
    > test.out 2>&1
eval_tap $? 223 'AdminUpdateAdminRoleStatusV3' test.out

#- 224 AdminRemoveRoleAdminV3
$CLI_EXE \
    --sn iam \
    --op AdminRemoveRoleAdminV3 \
    --roleId 'turIeTsj' \
    > test.out 2>&1
eval_tap $? 224 'AdminRemoveRoleAdminV3' test.out

#- 225 AdminGetRoleManagersV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleManagersV3 \
    --roleId 'JsQWrIIQ' \
    --after 'HwWm8Zqo' \
    --before 'TVnyOga0' \
    --limit '35' \
    > test.out 2>&1
eval_tap $? 225 'AdminGetRoleManagersV3' test.out

#- 226 AdminAddRoleManagersV3
# body param: body
echo '{"managers": [{"displayName": "aLMCskRD", "namespace": "QQUYLvuD", "userId": "7yJ7cLxH"}, {"displayName": "ntovc8pf", "namespace": "uN2VpNDR", "userId": "EAzzHf3m"}, {"displayName": "hJJ6Z41w", "namespace": "cmYgR5S4", "userId": "XkIotOv0"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddRoleManagersV3 \
    --roleId 'oshdXK4x' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 226 'AdminAddRoleManagersV3' test.out

#- 227 AdminRemoveRoleManagersV3
# body param: body
echo '{"managers": [{"displayName": "BKfVjhO0", "namespace": "RLjFxOnX", "userId": "shqZoesm"}, {"displayName": "3AKXUOef", "namespace": "bGOQg3qD", "userId": "J5Nlt34u"}, {"displayName": "LxIuzqVm", "namespace": "ELTkTkek", "userId": "xybwe2sU"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminRemoveRoleManagersV3 \
    --roleId 'XtbY5eRQ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 227 'AdminRemoveRoleManagersV3' test.out

#- 228 AdminGetRoleMembersV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleMembersV3 \
    --roleId 'tJ9TZFAI' \
    --after 'VVeAVpRm' \
    --before 'YlFwSmlG' \
    --limit '12' \
    > test.out 2>&1
eval_tap $? 228 'AdminGetRoleMembersV3' test.out

#- 229 AdminAddRoleMembersV3
# body param: body
echo '{"members": [{"displayName": "TfUt1ZSe", "namespace": "TIqggTUV", "userId": "9Vxh2APS"}, {"displayName": "3QWj6eff", "namespace": "neqSOYgl", "userId": "25MFyKHQ"}, {"displayName": "g32cL3Rt", "namespace": "zLLNjEaf", "userId": "0mFRugyp"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddRoleMembersV3 \
    --roleId 's52Zem27' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 229 'AdminAddRoleMembersV3' test.out

#- 230 AdminRemoveRoleMembersV3
eval_tap 0 230 'AdminRemoveRoleMembersV3 # SKIP deprecated' test.out

#- 231 AdminUpdateRolePermissionsV3
# body param: body
echo '{"permissions": [{"action": 15, "resource": "aIvM27SE", "schedAction": 78, "schedCron": "9JREU1Zj", "schedRange": ["IfuxyIps", "1L7MsBJd", "Bo1y9yWF"]}, {"action": 7, "resource": "rXfamWrN", "schedAction": 42, "schedCron": "Ie0IBJLP", "schedRange": ["9GXIdRhz", "IVjvWeP5", "RQLfPJ8r"]}, {"action": 89, "resource": "GFk6Etmi", "schedAction": 40, "schedCron": "8FxllU4n", "schedRange": ["DaHjEIBg", "gxZMrxnM", "JPJj6qU6"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateRolePermissionsV3 \
    --roleId 'JEls7UCw' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 231 'AdminUpdateRolePermissionsV3' test.out

#- 232 AdminAddRolePermissionsV3
# body param: body
echo '{"permissions": [{"action": 47, "resource": "Hvy7odGm", "schedAction": 4, "schedCron": "HAISHXWk", "schedRange": ["Y2t512tX", "t3YMEVo7", "RGqWdUHk"]}, {"action": 16, "resource": "zHr7mz3h", "schedAction": 4, "schedCron": "rK3Bms4I", "schedRange": ["Kd1CnRjr", "0BrI1NzO", "YtIHQhYH"]}, {"action": 40, "resource": "crSJ3E3p", "schedAction": 8, "schedCron": "DzkJzXqJ", "schedRange": ["xf6086ak", "r5g1oWPu", "NR2Nadag"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddRolePermissionsV3 \
    --roleId '7tU1NmiR' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 232 'AdminAddRolePermissionsV3' test.out

#- 233 AdminDeleteRolePermissionsV3
# body param: body
echo '["gofEczW9", "1rwl9Hxa", "IO93HfW3"]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDeleteRolePermissionsV3 \
    --roleId '2ZMpeCt8' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 233 'AdminDeleteRolePermissionsV3' test.out

#- 234 AdminDeleteRolePermissionV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteRolePermissionV3 \
    --action '11' \
    --resource '4qCGQold' \
    --roleId 'dtdi2Kms' \
    > test.out 2>&1
eval_tap $? 234 'AdminDeleteRolePermissionV3' test.out

#- 235 AdminGetMyUserV3
$CLI_EXE \
    --sn iam \
    --op AdminGetMyUserV3 \
    > test.out 2>&1
eval_tap $? 235 'AdminGetMyUserV3' test.out

#- 236 UserAuthenticationV3
$CLI_EXE \
    --sn iam \
    --op UserAuthenticationV3 \
    --client_id 'wrxgU4tk' \
    --extend_exp 'true' \
    --redirect_uri 'KB9o3xoA' \
    --password 'Euxzliv0' \
    --request_id 'VKxowhiI' \
    --user_name 'gIfEeWw8' \
    > test.out 2>&1
eval_tap $? 236 'UserAuthenticationV3' test.out

#- 237 AuthenticationWithPlatformLinkV3
$CLI_EXE \
    --sn iam \
    --op AuthenticationWithPlatformLinkV3 \
    --extend_exp 'false' \
    --client_id 'Vjj0jL1y' \
    --linkingToken 'Nl0gEBNr' \
    --password 'JqOIGj0T' \
    --username '5X8zHawy' \
    > test.out 2>&1
eval_tap $? 237 'AuthenticationWithPlatformLinkV3' test.out

#- 238 AuthenticateAndLinkForwardV3
$CLI_EXE \
    --sn iam \
    --op AuthenticateAndLinkForwardV3 \
    --extend_exp 'false' \
    --client_id 'ZURNYKNe' \
    --linkingToken 'S2ZHgUSV' \
    --password 'daQYIBPn' \
    --username 'oP3VNwaP' \
    > test.out 2>&1
eval_tap $? 238 'AuthenticateAndLinkForwardV3' test.out

#- 239 GenerateTokenByNewHeadlessAccountV3
$CLI_EXE \
    --sn iam \
    --op GenerateTokenByNewHeadlessAccountV3 \
    --additionalData 'GoLHYD3r' \
    --extend_exp 'true' \
    --linkingToken 'N2c9Fins' \
    > test.out 2>&1
eval_tap $? 239 'GenerateTokenByNewHeadlessAccountV3' test.out

#- 240 RequestOneTimeLinkingCodeV3
$CLI_EXE \
    --sn iam \
    --op RequestOneTimeLinkingCodeV3 \
    --redirectUri 'lJTdcxWs' \
    --state 'fu72ln71' \
    --platformId '02VJEgce' \
    > test.out 2>&1
eval_tap $? 240 'RequestOneTimeLinkingCodeV3' test.out

#- 241 ValidateOneTimeLinkingCodeV3
$CLI_EXE \
    --sn iam \
    --op ValidateOneTimeLinkingCodeV3 \
    --oneTimeLinkCode 'THyuFHYV' \
    > test.out 2>&1
eval_tap $? 241 'ValidateOneTimeLinkingCodeV3' test.out

#- 242 RequestTokenByOneTimeLinkCodeResponseV3
$CLI_EXE \
    --sn iam \
    --op RequestTokenByOneTimeLinkCodeResponseV3 \
    --additionalData 'Cq2h7RJn' \
    --isTransient 'false' \
    --client_id 'pnYMDZ6n' \
    --oneTimeLinkCode 'TYS6jn3z' \
    > test.out 2>&1
eval_tap $? 242 'RequestTokenByOneTimeLinkCodeResponseV3' test.out

#- 243 GetCountryLocationV3
$CLI_EXE \
    --sn iam \
    --op GetCountryLocationV3 \
    > test.out 2>&1
eval_tap $? 243 'GetCountryLocationV3' test.out

#- 244 Logout
$CLI_EXE \
    --sn iam \
    --op Logout \
    > test.out 2>&1
eval_tap $? 244 'Logout' test.out

#- 245 RequestTokenExchangeCodeV3
$CLI_EXE \
    --sn iam \
    --op RequestTokenExchangeCodeV3 \
    --namespace $AB_NAMESPACE \
    --codeChallenge '214e7Ugq' \
    --codeChallengeMethod 'S256' \
    --client_id 'ZXtVJv7b' \
    > test.out 2>&1
eval_tap $? 245 'RequestTokenExchangeCodeV3' test.out

#- 246 AdminRetrieveUserThirdPartyPlatformTokenV3
$CLI_EXE \
    --sn iam \
    --op AdminRetrieveUserThirdPartyPlatformTokenV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'L4lQ3Ocf' \
    --userId 'bSz41dQZ' \
    --platformUserId 'LCb9qvVP' \
    > test.out 2>&1
eval_tap $? 246 'AdminRetrieveUserThirdPartyPlatformTokenV3' test.out

#- 247 RevokeUserV3
$CLI_EXE \
    --sn iam \
    --op RevokeUserV3 \
    --namespace $AB_NAMESPACE \
    --userId 'V9HyVxA3' \
    --includeGameNamespace 'false' \
    > test.out 2>&1
eval_tap $? 247 'RevokeUserV3' test.out

#- 248 AuthorizeV3
$CLI_EXE \
    --sn iam \
    --op AuthorizeV3 \
    --blockedPlatformId 'VRDBrFka' \
    --codeChallenge 'C6HQ5KIu' \
    --codeChallengeMethod 'S256' \
    --createHeadless 'false' \
    --loginWebBased 'true' \
    --nonce 'zcFCZjfZ' \
    --oneTimeLinkCode 'tJwg6Prn' \
    --redirectUri 'iO9lSiwo' \
    --scope 'po6rMKti' \
    --state 'CX2JeqLO' \
    --targetAuthPage 'Qo3fnsr9' \
    --useRedirectUriAsLoginUrlWhenLocked 'true' \
    --clientId 'wDiHPwAm' \
    --responseType 'code' \
    > test.out 2>&1
eval_tap $? 248 'AuthorizeV3' test.out

#- 249 TokenIntrospectionV3
$CLI_EXE \
    --sn iam \
    --op TokenIntrospectionV3 \
    --token 'wlNLM4JL' \
    > test.out 2>&1
eval_tap $? 249 'TokenIntrospectionV3' test.out

#- 250 GetJWKSV3
$CLI_EXE \
    --sn iam \
    --op GetJWKSV3 \
    > test.out 2>&1
eval_tap $? 250 'GetJWKSV3' test.out

#- 251 SendMFAAuthenticationCode
$CLI_EXE \
    --sn iam \
    --op SendMFAAuthenticationCode \
    --clientId 'pQbp7k2Z' \
    --factor 'AJpUM2ZE' \
    --mfaToken 'CijyYbmM' \
    > test.out 2>&1
eval_tap $? 251 'SendMFAAuthenticationCode' test.out

#- 252 Change2faMethod
$CLI_EXE \
    --sn iam \
    --op Change2faMethod \
    --factor 'ZNNMQdqu' \
    --mfaToken 'vJFXJy4m' \
    > test.out 2>&1
eval_tap $? 252 'Change2faMethod' test.out

#- 253 Verify2faCode
$CLI_EXE \
    --sn iam \
    --op Verify2faCode \
    --code 'Q4Sd8SLa' \
    --factor 'QtRCawti' \
    --mfaToken 'h9q4wGFL' \
    --rememberDevice 'false' \
    > test.out 2>&1
eval_tap $? 253 'Verify2faCode' test.out

#- 254 Verify2faCodeForward
$CLI_EXE \
    --sn iam \
    --op Verify2faCodeForward \
    --defaultFactor '72uGLj3F' \
    --factors '84NzphlY' \
    --rememberDevice 'true' \
    --clientId 'E3JkfR0v' \
    --code 'ke8Hhf94' \
    --factor 'arX7eCqa' \
    --mfaToken 'AvYkKw5Q' \
    > test.out 2>&1
eval_tap $? 254 'Verify2faCodeForward' test.out

#- 255 RetrieveUserThirdPartyPlatformTokenV3
$CLI_EXE \
    --sn iam \
    --op RetrieveUserThirdPartyPlatformTokenV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'X3OGnFGh' \
    --userId 'Q4qWEOTw' \
    > test.out 2>&1
eval_tap $? 255 'RetrieveUserThirdPartyPlatformTokenV3' test.out

#- 256 AuthCodeRequestV3
$CLI_EXE \
    --sn iam \
    --op AuthCodeRequestV3 \
    --platformId 'L88TbtaR' \
    --clientId 'BBUSaYqz' \
    --redirectUri 'JA3JMrqY' \
    --requestId 'w7av7mPe' \
    > test.out 2>&1
eval_tap $? 256 'AuthCodeRequestV3' test.out

#- 257 PlatformTokenGrantV3
$CLI_EXE \
    --sn iam \
    --op PlatformTokenGrantV3 \
    --platformId 'OGYxjn1h' \
    --additionalData 'mP9UqGOi' \
    --client_id 'Fra6MRb4' \
    --createHeadless 'true' \
    --device_id 'l8cFFh3K' \
    --macAddress 'qjrfsdZJ' \
    --platform_token 'DVk0zbng' \
    --serviceLabel '0.8196841839415764' \
    --skipSetCookie 'true' \
    > test.out 2>&1
eval_tap $? 257 'PlatformTokenGrantV3' test.out

#- 258 GetRevocationListV3
$CLI_EXE \
    --sn iam \
    --op GetRevocationListV3 \
    > test.out 2>&1
eval_tap $? 258 'GetRevocationListV3' test.out

#- 259 TokenRevocationV3
$CLI_EXE \
    --sn iam \
    --op TokenRevocationV3 \
    --token 'AhXTZlpR' \
    > test.out 2>&1
eval_tap $? 259 'TokenRevocationV3' test.out

#- 260 SimultaneousLoginV3
$CLI_EXE \
    --sn iam \
    --op SimultaneousLoginV3 \
    --simultaneousPlatform 'IeFKUuNS' \
    --simultaneousTicket '85rPdQF7' \
    --nativePlatform 'steam' \
    --nativePlatformTicket 'XSC3slsG' \
    > test.out 2>&1
eval_tap $? 260 'SimultaneousLoginV3' test.out

#- 261 TokenGrantV3
$CLI_EXE \
    --sn iam \
    --op TokenGrantV3 \
    --additionalData 't8uQJTx3' \
    --client_id '3npPi6fj' \
    --client_secret 'mTMKDQXC' \
    --code 'aydLwbY1' \
    --code_verifier 'eyZlWBkN' \
    --extendNamespace 'Qk85sM7H' \
    --extend_exp 'false' \
    --password 'POy4X6RR' \
    --redirect_uri 'JwM6uphv' \
    --refresh_token 'xQIYnDBR' \
    --username 'vRq5Nj3E' \
    --grant_type 'authorization_code' \
    > test.out 2>&1
eval_tap $? 261 'TokenGrantV3' test.out

#- 262 VerifyTokenV3
$CLI_EXE \
    --sn iam \
    --op VerifyTokenV3 \
    --token 'wyE3hAl8' \
    > test.out 2>&1
eval_tap $? 262 'VerifyTokenV3' test.out

#- 263 PlatformAuthenticationV3
$CLI_EXE \
    --sn iam \
    --op PlatformAuthenticationV3 \
    --platformId 'ZwCL9p30' \
    --code '3FPvAOEv' \
    --error 's1mJRiZS' \
    --openidAssocHandle 'LOfzBVsJ' \
    --openidClaimedId 'AujOMsb8' \
    --openidIdentity '66I5mw66' \
    --openidMode 'mUnnbmcy' \
    --openidNs 'wIkPjD0U' \
    --openidOpEndpoint 'Uqzt6bm5' \
    --openidResponseNonce 'yl8w3YcW' \
    --openidReturnTo 'fNMcIHnR' \
    --openidSig 'p3kkSPM2' \
    --openidSigned 'wVo79StE' \
    --state 'IO8xmhyO' \
    > test.out 2>&1
eval_tap $? 263 'PlatformAuthenticationV3' test.out

#- 264 PlatformTokenRefreshV3
$CLI_EXE \
    --sn iam \
    --op PlatformTokenRefreshV3 \
    --platformId 'jsVpcAB9' \
    --platform_token 'GKosVAOt' \
    > test.out 2>&1
eval_tap $? 264 'PlatformTokenRefreshV3' test.out

#- 265 PublicGetInputValidations
$CLI_EXE \
    --sn iam \
    --op PublicGetInputValidations \
    --defaultOnEmpty 'false' \
    --languageCode '7jvUR0p9' \
    > test.out 2>&1
eval_tap $? 265 'PublicGetInputValidations' test.out

#- 266 PublicGetInputValidationByField
$CLI_EXE \
    --sn iam \
    --op PublicGetInputValidationByField \
    --field 'jthJCqqP' \
    > test.out 2>&1
eval_tap $? 266 'PublicGetInputValidationByField' test.out

#- 267 PublicGetCountryAgeRestrictionV3
$CLI_EXE \
    --sn iam \
    --op PublicGetCountryAgeRestrictionV3 \
    --countryCode 'dk4plnWp' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 267 'PublicGetCountryAgeRestrictionV3' test.out

#- 268 PublicGetConfigValueV3
$CLI_EXE \
    --sn iam \
    --op PublicGetConfigValueV3 \
    --configKey '8FoO40w9' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 268 'PublicGetConfigValueV3' test.out

#- 269 PublicGetCountryListV3
$CLI_EXE \
    --sn iam \
    --op PublicGetCountryListV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 269 'PublicGetCountryListV3' test.out

#- 270 RetrieveAllActiveThirdPartyLoginPlatformCredentialPublicV3
$CLI_EXE \
    --sn iam \
    --op RetrieveAllActiveThirdPartyLoginPlatformCredentialPublicV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 270 'RetrieveAllActiveThirdPartyLoginPlatformCredentialPublicV3' test.out

#- 271 RetrieveActiveOIDCClientsPublicV3
$CLI_EXE \
    --sn iam \
    --op RetrieveActiveOIDCClientsPublicV3 \
    --namespace $AB_NAMESPACE \
    --clientId 'kYo1meUS' \
    > test.out 2>&1
eval_tap $? 271 'RetrieveActiveOIDCClientsPublicV3' test.out

#- 272 PublicListUserIDByPlatformUserIDsV3
eval_tap 0 272 'PublicListUserIDByPlatformUserIDsV3 # SKIP deprecated' test.out

#- 273 PublicGetUserByPlatformUserIDV3
eval_tap 0 273 'PublicGetUserByPlatformUserIDV3 # SKIP deprecated' test.out

#- 274 PublicGetProfileUpdateStrategyV3
$CLI_EXE \
    --sn iam \
    --op PublicGetProfileUpdateStrategyV3 \
    --namespace $AB_NAMESPACE \
    --field 'dob' \
    > test.out 2>&1
eval_tap $? 274 'PublicGetProfileUpdateStrategyV3' test.out

#- 275 PublicGetAsyncStatus
$CLI_EXE \
    --sn iam \
    --op PublicGetAsyncStatus \
    --namespace $AB_NAMESPACE \
    --requestId 'tjLH9FkF' \
    > test.out 2>&1
eval_tap $? 275 'PublicGetAsyncStatus' test.out

#- 276 PublicSearchUserV3
$CLI_EXE \
    --sn iam \
    --op PublicSearchUserV3 \
    --namespace $AB_NAMESPACE \
    --by 'zDjFN9fH' \
    --limit '44' \
    --offset '78' \
    --platformBy 'VJLC9Ysa' \
    --platformId 'wZKzWiEJ' \
    --query 'wjubsUXB' \
    > test.out 2>&1
eval_tap $? 276 'PublicSearchUserV3' test.out

#- 277 PublicCreateUserV3
# body param: body
echo '{"PasswordMD5Sum": "baxUZtTJ", "acceptedPolicies": [{"isAccepted": true, "localizedPolicyVersionId": "ZBJRTHDY", "policyId": "x0N3ODNu", "policyVersionId": "T14e38tY"}, {"isAccepted": true, "localizedPolicyVersionId": "nUBCtILJ", "policyId": "nVsl4zDr", "policyVersionId": "xijVK4PL"}, {"isAccepted": true, "localizedPolicyVersionId": "SG6urF4X", "policyId": "vqGKauAC", "policyVersionId": "c6AFuI13"}], "authType": "uX8Xxt1i", "code": "OnZLfiht", "country": "xsQ9WXvL", "dateOfBirth": "Fp7WlOOq", "displayName": "y7magWzy", "emailAddress": "76opkvqe", "password": "K3o5UmTc", "reachMinimumAge": true, "uniqueDisplayName": "TB9wuHct"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicCreateUserV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 277 'PublicCreateUserV3' test.out

#- 278 CheckUserAvailability
$CLI_EXE \
    --sn iam \
    --op CheckUserAvailability \
    --namespace $AB_NAMESPACE \
    --field 'eYCAjjGb' \
    --query '6wXuna0l' \
    > test.out 2>&1
eval_tap $? 278 'CheckUserAvailability' test.out

#- 279 PublicBulkGetUsers
eval_tap 0 279 'PublicBulkGetUsers # SKIP deprecated' test.out

#- 280 PublicSendRegistrationCode
# body param: body
echo '{"emailAddress": "ghZ7O00b", "languageTag": "vVZEYn2F"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicSendRegistrationCode \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 280 'PublicSendRegistrationCode' test.out

#- 281 PublicVerifyRegistrationCode
# body param: body
echo '{"code": "fi9p1LsU", "emailAddress": "XD7Wc2QE"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicVerifyRegistrationCode \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 281 'PublicVerifyRegistrationCode' test.out

#- 282 PublicForgotPasswordV3
# body param: body
echo '{"emailAddress": "njAjWB3x", "languageTag": "3OxytxaF"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicForgotPasswordV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 282 'PublicForgotPasswordV3' test.out

#- 283 PublicValidateUserInput
# body param: body
echo '{"displayName": "XJnQ7XRg", "password": "ylErnvCJ", "uniqueDisplayName": "WEv8HchJ", "username": "aLMUV1ft"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicValidateUserInput \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 283 'PublicValidateUserInput' test.out

#- 284 GetAdminInvitationV3
$CLI_EXE \
    --sn iam \
    --op GetAdminInvitationV3 \
    --invitationId '6TPFsXuz' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 284 'GetAdminInvitationV3' test.out

#- 285 CreateUserFromInvitationV3
# body param: body
echo '{"PasswordMD5Sum": "VIa5QXYG", "acceptedPolicies": [{"isAccepted": true, "localizedPolicyVersionId": "rZ9cFNYE", "policyId": "lP2WFynZ", "policyVersionId": "uUcSwdzo"}, {"isAccepted": false, "localizedPolicyVersionId": "l8TJ0YFn", "policyId": "RY19eZIr", "policyVersionId": "sE8DFxTA"}, {"isAccepted": false, "localizedPolicyVersionId": "QPuGsBDn", "policyId": "UMzfsigR", "policyVersionId": "MNdYo9Vm"}], "authType": "MJNATKXX", "code": "ArpQ2fl6", "country": "UBLfyDB3", "dateOfBirth": "0BJMQFJ9", "displayName": "ffpDuNhD", "emailAddress": "BUJt9GMo", "password": "dJnxI3Yq", "reachMinimumAge": false, "uniqueDisplayName": "mDd12o4K"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op CreateUserFromInvitationV3 \
    --invitationId '7LF5tP73' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 285 'CreateUserFromInvitationV3' test.out

#- 286 UpdateUserV3
# body param: body
echo '{"avatarUrl": "F5ljOuQE", "country": "THJiK1n0", "dateOfBirth": "mYuzBE2I", "displayName": "Jsly5qt5", "languageTag": "WhHOffTs", "uniqueDisplayName": "70I2fOEJ", "userName": "or8yK4G6"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op UpdateUserV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 286 'UpdateUserV3' test.out

#- 287 PublicPartialUpdateUserV3
# body param: body
echo '{"avatarUrl": "O7iryPop", "country": "Icfft3fs", "dateOfBirth": "Tl4NxKcx", "displayName": "4ydMLT3T", "languageTag": "XkBAwnNY", "uniqueDisplayName": "TJGPHdFo", "userName": "sy6W5xmD"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicPartialUpdateUserV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 287 'PublicPartialUpdateUserV3' test.out

#- 288 PublicSendVerificationCodeV3
# body param: body
echo '{"context": "bjMtgydD", "emailAddress": "3AFhQjCr", "languageTag": "Ccng4lBS", "upgradeToken": "8ohT5QwK"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicSendVerificationCodeV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 288 'PublicSendVerificationCodeV3' test.out

#- 289 PublicUserVerificationV3
# body param: body
echo '{"code": "qRyWXCsN", "contactType": "IEGykkDS", "languageTag": "NIgfMzYH", "validateOnly": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUserVerificationV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 289 'PublicUserVerificationV3' test.out

#- 290 PublicUpgradeHeadlessAccountV3
# body param: body
echo '{"code": "kLiBy3p7", "country": "GPZxQqCk", "dateOfBirth": "4vNvKse5", "displayName": "B73s41dL", "emailAddress": "sl6bOiCo", "password": "0OFnpLjj", "uniqueDisplayName": "be2nEhMD", "validateOnly": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpgradeHeadlessAccountV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 290 'PublicUpgradeHeadlessAccountV3' test.out

#- 291 PublicVerifyHeadlessAccountV3
# body param: body
echo '{"emailAddress": "uQ7n8jxb", "password": "PdHxfzN7"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicVerifyHeadlessAccountV3 \
    --namespace $AB_NAMESPACE \
    --needVerificationCode 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 291 'PublicVerifyHeadlessAccountV3' test.out

#- 292 PublicUpdatePasswordV3
# body param: body
echo '{"languageTag": "4NNPVyAY", "mfaToken": "eDGakesp", "newPassword": "xEsUBZtf", "oldPassword": "Dj9Iwvr6"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpdatePasswordV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 292 'PublicUpdatePasswordV3' test.out

#- 293 PublicCreateJusticeUser
$CLI_EXE \
    --sn iam \
    --op PublicCreateJusticeUser \
    --namespace $AB_NAMESPACE \
    --targetNamespace 'd3ZQI4cz' \
    > test.out 2>&1
eval_tap $? 293 'PublicCreateJusticeUser' test.out

#- 294 PublicPlatformLinkV3
$CLI_EXE \
    --sn iam \
    --op PublicPlatformLinkV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'lkSxmDKV' \
    --redirectUri 'jqNKntWg' \
    --ticket '7JHnCjpa' \
    > test.out 2>&1
eval_tap $? 294 'PublicPlatformLinkV3' test.out

#- 295 PublicPlatformUnlinkV3
eval_tap 0 295 'PublicPlatformUnlinkV3 # SKIP deprecated' test.out

#- 296 PublicPlatformUnlinkAllV3
$CLI_EXE \
    --sn iam \
    --op PublicPlatformUnlinkAllV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'RmKhrzw3' \
    > test.out 2>&1
eval_tap $? 296 'PublicPlatformUnlinkAllV3' test.out

#- 297 PublicForcePlatformLinkV3
$CLI_EXE \
    --sn iam \
    --op PublicForcePlatformLinkV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'UxwpwPWH' \
    --ticket 'teIkfjpp' \
    > test.out 2>&1
eval_tap $? 297 'PublicForcePlatformLinkV3' test.out

#- 298 PublicWebLinkPlatform
$CLI_EXE \
    --sn iam \
    --op PublicWebLinkPlatform \
    --namespace $AB_NAMESPACE \
    --platformId 'uITnnwgU' \
    --clientId 'm5aUAqp5' \
    --redirectUri 'PcpvjnbJ' \
    > test.out 2>&1
eval_tap $? 298 'PublicWebLinkPlatform' test.out

#- 299 PublicWebLinkPlatformEstablish
$CLI_EXE \
    --sn iam \
    --op PublicWebLinkPlatformEstablish \
    --namespace $AB_NAMESPACE \
    --platformId 'aBLFjDfh' \
    --code 'JesOFfhK' \
    --state 'D28P4qHm' \
    > test.out 2>&1
eval_tap $? 299 'PublicWebLinkPlatformEstablish' test.out

#- 300 PublicProcessWebLinkPlatformV3
$CLI_EXE \
    --sn iam \
    --op PublicProcessWebLinkPlatformV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'Fo79j49M' \
    --code 'pqXEe5HK' \
    --state 'yJ8DA9yN' \
    > test.out 2>&1
eval_tap $? 300 'PublicProcessWebLinkPlatformV3' test.out

#- 301 PublicGetUsersPlatformInfosV3
# body param: body
echo '{"platformId": "14mM7BcM", "userIds": ["5nxbO2Fb", "agTqQLgR", "iesjaVx0"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicGetUsersPlatformInfosV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 301 'PublicGetUsersPlatformInfosV3' test.out

#- 302 ResetPasswordV3
# body param: body
echo '{"clientId": "OJQnyPf6", "code": "mr5r9B7P", "emailAddress": "6m8QZsJX", "languageTag": "1KT8lu4Y", "newPassword": "z5b0qLp5"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op ResetPasswordV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 302 'ResetPasswordV3' test.out

#- 303 PublicGetUserByUserIdV3
eval_tap 0 303 'PublicGetUserByUserIdV3 # SKIP deprecated' test.out

#- 304 PublicGetUserBanHistoryV3
$CLI_EXE \
    --sn iam \
    --op PublicGetUserBanHistoryV3 \
    --namespace $AB_NAMESPACE \
    --userId 'CAKT7O9T' \
    --activeOnly 'true' \
    --after 'CB1b7L0l' \
    --before 'P6Vt8Nsh' \
    --limit '81' \
    > test.out 2>&1
eval_tap $? 304 'PublicGetUserBanHistoryV3' test.out

#- 305 PublicListUserAllPlatformAccountsDistinctV3
$CLI_EXE \
    --sn iam \
    --op PublicListUserAllPlatformAccountsDistinctV3 \
    --namespace $AB_NAMESPACE \
    --userId 'PBwdOD2G' \
    > test.out 2>&1
eval_tap $? 305 'PublicListUserAllPlatformAccountsDistinctV3' test.out

#- 306 PublicGetUserInformationV3
$CLI_EXE \
    --sn iam \
    --op PublicGetUserInformationV3 \
    --namespace $AB_NAMESPACE \
    --userId 'x3Xxdvul' \
    > test.out 2>&1
eval_tap $? 306 'PublicGetUserInformationV3' test.out

#- 307 PublicGetUserLoginHistoriesV3
$CLI_EXE \
    --sn iam \
    --op PublicGetUserLoginHistoriesV3 \
    --namespace $AB_NAMESPACE \
    --userId 'Y0yw9QbY' \
    --after '0.2509952167313986' \
    --before '0.6840409249746102' \
    --limit '56' \
    > test.out 2>&1
eval_tap $? 307 'PublicGetUserLoginHistoriesV3' test.out

#- 308 PublicGetUserPlatformAccountsV3
$CLI_EXE \
    --sn iam \
    --op PublicGetUserPlatformAccountsV3 \
    --namespace $AB_NAMESPACE \
    --userId '0ZnudTQ3' \
    --after 'jcVn3laT' \
    --before 'hFoxWLHr' \
    --limit '66' \
    --platformId 'rvCZ3zIX' \
    > test.out 2>&1
eval_tap $? 308 'PublicGetUserPlatformAccountsV3' test.out

#- 309 PublicListJusticePlatformAccountsV3
$CLI_EXE \
    --sn iam \
    --op PublicListJusticePlatformAccountsV3 \
    --namespace $AB_NAMESPACE \
    --userId 'H8aoGf4u' \
    > test.out 2>&1
eval_tap $? 309 'PublicListJusticePlatformAccountsV3' test.out

#- 310 PublicLinkPlatformAccount
# body param: body
echo '{"platformId": "F9zI8GYo", "platformUserId": "z7pqQ6mT"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicLinkPlatformAccount \
    --namespace $AB_NAMESPACE \
    --userId 'YNy5ITkz' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 310 'PublicLinkPlatformAccount' test.out

#- 311 PublicForceLinkPlatformWithProgression
# body param: body
echo '{"chosenNamespaces": ["nTzHwidH", "yIWP4Giw", "3A31TuDp"], "requestId": "dHINVXQE"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicForceLinkPlatformWithProgression \
    --namespace $AB_NAMESPACE \
    --userId 'IvO8KSay' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 311 'PublicForceLinkPlatformWithProgression' test.out

#- 312 PublicGetPublisherUserV3
$CLI_EXE \
    --sn iam \
    --op PublicGetPublisherUserV3 \
    --namespace $AB_NAMESPACE \
    --userId 'l93QarNl' \
    > test.out 2>&1
eval_tap $? 312 'PublicGetPublisherUserV3' test.out

#- 313 PublicValidateUserByUserIDAndPasswordV3
$CLI_EXE \
    --sn iam \
    --op PublicValidateUserByUserIDAndPasswordV3 \
    --namespace $AB_NAMESPACE \
    --userId 'HVkmNok0' \
    --password 'ywai1IX3' \
    > test.out 2>&1
eval_tap $? 313 'PublicValidateUserByUserIDAndPasswordV3' test.out

#- 314 PublicGetRolesV3
$CLI_EXE \
    --sn iam \
    --op PublicGetRolesV3 \
    --after 'fp3ctzaL' \
    --before 'TmjwnxsW' \
    --isWildcard 'false' \
    --limit '56' \
    > test.out 2>&1
eval_tap $? 314 'PublicGetRolesV3' test.out

#- 315 PublicGetRoleV3
$CLI_EXE \
    --sn iam \
    --op PublicGetRoleV3 \
    --roleId 'QV5tzncZ' \
    > test.out 2>&1
eval_tap $? 315 'PublicGetRoleV3' test.out

#- 316 PublicGetMyUserV3
$CLI_EXE \
    --sn iam \
    --op PublicGetMyUserV3 \
    --includeAllPlatforms 'false' \
    > test.out 2>&1
eval_tap $? 316 'PublicGetMyUserV3' test.out

#- 317 PublicSendCodeForwardV3
# body param: body
echo '{"context": "8s3EyoGP", "emailAddress": "0nE2COHn", "languageTag": "OPm544rL", "upgradeToken": "Pl1VL6E1"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicSendCodeForwardV3 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 317 'PublicSendCodeForwardV3' test.out

#- 318 PublicGetLinkHeadlessAccountToMyAccountConflictV3
$CLI_EXE \
    --sn iam \
    --op PublicGetLinkHeadlessAccountToMyAccountConflictV3 \
    --oneTimeLinkCode 'qgVMqSMf' \
    > test.out 2>&1
eval_tap $? 318 'PublicGetLinkHeadlessAccountToMyAccountConflictV3' test.out

#- 319 LinkHeadlessAccountToMyAccountV3
# body param: body
echo '{"chosenNamespaces": ["bJKcoe3W", "SNI9Terk", "LbiO38Nj"], "oneTimeLinkCode": "l8rEgevb"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op LinkHeadlessAccountToMyAccountV3 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 319 'LinkHeadlessAccountToMyAccountV3' test.out

#- 320 PublicGetMyRedirectionAfterLinkV3
$CLI_EXE \
    --sn iam \
    --op PublicGetMyRedirectionAfterLinkV3 \
    --oneTimeLinkCode 'DuIFqIja' \
    > test.out 2>&1
eval_tap $? 320 'PublicGetMyRedirectionAfterLinkV3' test.out

#- 321 PublicGetMyProfileAllowUpdateStatusV3
$CLI_EXE \
    --sn iam \
    --op PublicGetMyProfileAllowUpdateStatusV3 \
    > test.out 2>&1
eval_tap $? 321 'PublicGetMyProfileAllowUpdateStatusV3' test.out

#- 322 PublicSendVerificationLinkV3
# body param: body
echo '{"languageTag": "Fvar4hBa"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicSendVerificationLinkV3 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 322 'PublicSendVerificationLinkV3' test.out

#- 323 PublicGetOpenidUserInfoV3
$CLI_EXE \
    --sn iam \
    --op PublicGetOpenidUserInfoV3 \
    > test.out 2>&1
eval_tap $? 323 'PublicGetOpenidUserInfoV3' test.out

#- 324 PublicVerifyUserByLinkV3
$CLI_EXE \
    --sn iam \
    --op PublicVerifyUserByLinkV3 \
    --code 'Cre3d8K0' \
    > test.out 2>&1
eval_tap $? 324 'PublicVerifyUserByLinkV3' test.out

#- 325 PlatformAuthenticateSAMLV3Handler
$CLI_EXE \
    --sn iam \
    --op PlatformAuthenticateSAMLV3Handler \
    --platformId 'qoqUZYk2' \
    --code 'nX7nAVFF' \
    --error 'CBHCyhW6' \
    --state '5MIDKVjJ' \
    > test.out 2>&1
eval_tap $? 325 'PlatformAuthenticateSAMLV3Handler' test.out

#- 326 LoginSSOClient
$CLI_EXE \
    --sn iam \
    --op LoginSSOClient \
    --platformId 'q4WFCIof' \
    --payload 'gCF74I2N' \
    > test.out 2>&1
eval_tap $? 326 'LoginSSOClient' test.out

#- 327 LogoutSSOClient
$CLI_EXE \
    --sn iam \
    --op LogoutSSOClient \
    --platformId '1URiQhqL' \
    > test.out 2>&1
eval_tap $? 327 'LogoutSSOClient' test.out

#- 328 RequestTargetTokenResponseV3
$CLI_EXE \
    --sn iam \
    --op RequestTargetTokenResponseV3 \
    --additionalData 'vM4dvbkS' \
    --code 'ERZp0stH' \
    > test.out 2>&1
eval_tap $? 328 'RequestTargetTokenResponseV3' test.out

#- 329 UpgradeAndAuthenticateForwardV3
$CLI_EXE \
    --sn iam \
    --op UpgradeAndAuthenticateForwardV3 \
    --client_id 'GGv8JaJL' \
    --upgrade_success_token 'Xa2IT6qr' \
    > test.out 2>&1
eval_tap $? 329 'UpgradeAndAuthenticateForwardV3' test.out

#- 330 AdminListInvitationHistoriesV4
$CLI_EXE \
    --sn iam \
    --op AdminListInvitationHistoriesV4 \
    --limit '4' \
    --namespace_ 'kuvWio13' \
    --offset '16' \
    > test.out 2>&1
eval_tap $? 330 'AdminListInvitationHistoriesV4' test.out

#- 331 AdminGetDevicesByUserV4
$CLI_EXE \
    --sn iam \
    --op AdminGetDevicesByUserV4 \
    --namespace $AB_NAMESPACE \
    --userId 'EpamtvYX' \
    > test.out 2>&1
eval_tap $? 331 'AdminGetDevicesByUserV4' test.out

#- 332 AdminGetBannedDevicesV4
$CLI_EXE \
    --sn iam \
    --op AdminGetBannedDevicesV4 \
    --namespace $AB_NAMESPACE \
    --deviceType '8074fN3m' \
    --endDate 'l1Bgo4fq' \
    --limit '37' \
    --offset '14' \
    --startDate 'ZIbEGzgV' \
    > test.out 2>&1
eval_tap $? 332 'AdminGetBannedDevicesV4' test.out

#- 333 AdminGetUserDeviceBansV4
$CLI_EXE \
    --sn iam \
    --op AdminGetUserDeviceBansV4 \
    --namespace $AB_NAMESPACE \
    --userId 'lq49ZlI6' \
    > test.out 2>&1
eval_tap $? 333 'AdminGetUserDeviceBansV4' test.out

#- 334 AdminBanDeviceV4
# body param: body
echo '{"comment": "vozPqpZ9", "deviceId": "5i6yFHKC", "deviceType": "yn4zJBSE", "enabled": true, "endDate": "foKUIPOw", "ext": {"NBVBIvev": {}, "lBTdMXdP": {}, "yaMW7C0F": {}}, "reason": "SeqSQots"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBanDeviceV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 334 'AdminBanDeviceV4' test.out

#- 335 AdminGetDeviceBanV4
$CLI_EXE \
    --sn iam \
    --op AdminGetDeviceBanV4 \
    --banId 'MG5mSIvA' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 335 'AdminGetDeviceBanV4' test.out

#- 336 AdminUpdateDeviceBanV4
# body param: body
echo '{"enabled": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateDeviceBanV4 \
    --banId 'WrS3HV9H' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 336 'AdminUpdateDeviceBanV4' test.out

#- 337 AdminGenerateReportV4
$CLI_EXE \
    --sn iam \
    --op AdminGenerateReportV4 \
    --namespace $AB_NAMESPACE \
    --endDate 'A2oWdg2T' \
    --startDate 'wVmmZBDK' \
    --deviceType 'ZDBHdRBn' \
    > test.out 2>&1
eval_tap $? 337 'AdminGenerateReportV4' test.out

#- 338 AdminGetDeviceTypesV4
$CLI_EXE \
    --sn iam \
    --op AdminGetDeviceTypesV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 338 'AdminGetDeviceTypesV4' test.out

#- 339 AdminGetDeviceBansV4
$CLI_EXE \
    --sn iam \
    --op AdminGetDeviceBansV4 \
    --deviceId 'UQk5gfxp' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 339 'AdminGetDeviceBansV4' test.out

#- 340 AdminDecryptDeviceV4
eval_tap 0 340 'AdminDecryptDeviceV4 # SKIP deprecated' test.out

#- 341 AdminUnbanDeviceV4
$CLI_EXE \
    --sn iam \
    --op AdminUnbanDeviceV4 \
    --deviceId 'fhb2HMv9' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 341 'AdminUnbanDeviceV4' test.out

#- 342 AdminGetUsersByDeviceV4
$CLI_EXE \
    --sn iam \
    --op AdminGetUsersByDeviceV4 \
    --deviceId 'omAAezgS' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 342 'AdminGetUsersByDeviceV4' test.out

#- 343 AdminGetNamespaceInvitationHistoryV4
$CLI_EXE \
    --sn iam \
    --op AdminGetNamespaceInvitationHistoryV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 343 'AdminGetNamespaceInvitationHistoryV4' test.out

#- 344 AdminGetNamespaceUserInvitationHistoryV4
$CLI_EXE \
    --sn iam \
    --op AdminGetNamespaceUserInvitationHistoryV4 \
    --namespace $AB_NAMESPACE \
    --limit '17' \
    --offset '69' \
    > test.out 2>&1
eval_tap $? 344 'AdminGetNamespaceUserInvitationHistoryV4' test.out

#- 345 AdminCreateTestUsersV4
# body param: body
echo '{"count": 26, "userInfo": {"country": "e049T3Zj"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminCreateTestUsersV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 345 'AdminCreateTestUsersV4' test.out

#- 346 AdminCreateUserV4
# body param: body
echo '{"acceptedPolicies": [{"isAccepted": false, "localizedPolicyVersionId": "aUWgA96n", "policyId": "xMwfjOG3", "policyVersionId": "pa9pByjI"}, {"isAccepted": false, "localizedPolicyVersionId": "LXCZM3zS", "policyId": "aZoGumcH", "policyVersionId": "xyTJQ1a0"}, {"isAccepted": true, "localizedPolicyVersionId": "ADDDVZ4R", "policyId": "Y5E0cfxL", "policyVersionId": "DYNGM6NG"}], "authType": "EMAILPASSWD", "code": "GAQNgXA7", "country": "MB3Xnrak", "dateOfBirth": "3En9TUuP", "displayName": "GdTQr8HL", "emailAddress": "jkIwQsXu", "password": "75cGnDJc", "passwordMD5Sum": "7ckBIncw", "reachMinimumAge": false, "uniqueDisplayName": "0neWRYfZ", "username": "LKc9BENc"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminCreateUserV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 346 'AdminCreateUserV4' test.out

#- 347 AdminBulkUpdateUserAccountTypeV4
# body param: body
echo '{"testAccount": false, "userIds": ["HN0jdNcR", "QtpTSDK0", "ZMdnV3vi"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBulkUpdateUserAccountTypeV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 347 'AdminBulkUpdateUserAccountTypeV4' test.out

#- 348 AdminBulkCheckValidUserIDV4
# body param: body
echo '{"userIds": ["ueT8TdPr", "biBb4BmX", "5hAKBWIk"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBulkCheckValidUserIDV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 348 'AdminBulkCheckValidUserIDV4' test.out

#- 349 AdminUpdateUserV4
# body param: body
echo '{"avatarUrl": "MPrnizJR", "country": "rSQHlXTN", "dateOfBirth": "2dMID9QX", "displayName": "o2EcfCFV", "languageTag": "ozprW6V8", "skipLoginQueue": true, "uniqueDisplayName": "jjCtOQLB", "userName": "8OG7heiq"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserV4 \
    --namespace $AB_NAMESPACE \
    --userId 'fbA2wn9e' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 349 'AdminUpdateUserV4' test.out

#- 350 AdminUpdateUserEmailAddressV4
# body param: body
echo '{"code": "KmnSugwY", "emailAddress": "4080sMHs"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserEmailAddressV4 \
    --namespace $AB_NAMESPACE \
    --userId 'Fq2N3ywZ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 350 'AdminUpdateUserEmailAddressV4' test.out

#- 351 AdminDisableUserMFAV4
# body param: body
echo '{"factor": "OKtdpCqe", "mfaToken": "ackrG31l"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDisableUserMFAV4 \
    --namespace $AB_NAMESPACE \
    --userId 'wl89ZTdm' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 351 'AdminDisableUserMFAV4' test.out

#- 352 AdminGetUserMFAStatusV4
$CLI_EXE \
    --sn iam \
    --op AdminGetUserMFAStatusV4 \
    --namespace $AB_NAMESPACE \
    --userId 'efq4b0SE' \
    > test.out 2>&1
eval_tap $? 352 'AdminGetUserMFAStatusV4' test.out

#- 353 AdminListUserRolesV4
$CLI_EXE \
    --sn iam \
    --op AdminListUserRolesV4 \
    --namespace $AB_NAMESPACE \
    --userId '915kgttv' \
    > test.out 2>&1
eval_tap $? 353 'AdminListUserRolesV4' test.out

#- 354 AdminUpdateUserRoleV4
# body param: body
echo '{"assignedNamespaces": ["pC3atrG0", "8VsIHPLg", "5KIAUCvZ"], "roleId": "GYtSCo73"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserRoleV4 \
    --namespace $AB_NAMESPACE \
    --userId 'b1k35v72' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 354 'AdminUpdateUserRoleV4' test.out

#- 355 AdminAddUserRoleV4
# body param: body
echo '{"assignedNamespaces": ["zz74ZgKj", "8C6HRYJI", "inm4n0D4"], "roleId": "1liJapPU"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddUserRoleV4 \
    --namespace $AB_NAMESPACE \
    --userId 'SaPvRZ2G' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 355 'AdminAddUserRoleV4' test.out

#- 356 AdminRemoveUserRoleV4
# body param: body
echo '{"assignedNamespaces": ["wgK85ABp", "dFGEEix1", "J855pSbI"], "roleId": "1jvLAtNK"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminRemoveUserRoleV4 \
    --namespace $AB_NAMESPACE \
    --userId '973GWAFm' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 356 'AdminRemoveUserRoleV4' test.out

#- 357 AdminGetRolesV4
$CLI_EXE \
    --sn iam \
    --op AdminGetRolesV4 \
    --adminRole 'false' \
    --isWildcard 'true' \
    --limit '66' \
    --offset '86' \
    > test.out 2>&1
eval_tap $? 357 'AdminGetRolesV4' test.out

#- 358 AdminCreateRoleV4
# body param: body
echo '{"adminRole": false, "deletable": true, "isWildcard": true, "roleName": "8jjPim1J"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminCreateRoleV4 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 358 'AdminCreateRoleV4' test.out

#- 359 AdminGetRoleV4
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleV4 \
    --roleId 'o3aZflFJ' \
    > test.out 2>&1
eval_tap $? 359 'AdminGetRoleV4' test.out

#- 360 AdminDeleteRoleV4
$CLI_EXE \
    --sn iam \
    --op AdminDeleteRoleV4 \
    --roleId '8KFrSC5T' \
    > test.out 2>&1
eval_tap $? 360 'AdminDeleteRoleV4' test.out

#- 361 AdminUpdateRoleV4
# body param: body
echo '{"adminRole": false, "deletable": false, "isWildcard": true, "roleName": "7ucVblp5"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateRoleV4 \
    --roleId 'kOCOJS7X' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 361 'AdminUpdateRoleV4' test.out

#- 362 AdminUpdateRolePermissionsV4
# body param: body
echo '{"permissions": [{"action": 5, "resource": "2I3t8pws", "schedAction": 75, "schedCron": "8F4SMI0U", "schedRange": ["isQKjP09", "AKIkC4HR", "SiCzmpOE"]}, {"action": 67, "resource": "561duMNE", "schedAction": 83, "schedCron": "UfmiDvKA", "schedRange": ["lDcjXR9I", "6gTdxw9Z", "UqG0309t"]}, {"action": 70, "resource": "lBMBtDEh", "schedAction": 22, "schedCron": "IOIc2fp9", "schedRange": ["pmQjt2QK", "lcJh9hDz", "l2RJ3gnA"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateRolePermissionsV4 \
    --roleId '194cEyMi' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 362 'AdminUpdateRolePermissionsV4' test.out

#- 363 AdminAddRolePermissionsV4
# body param: body
echo '{"permissions": [{"action": 59, "resource": "FGBKW46M", "schedAction": 79, "schedCron": "rEHXSZ6S", "schedRange": ["1yqcVx8Z", "e6o2eDKZ", "9miGQVrR"]}, {"action": 50, "resource": "ah4oHUp1", "schedAction": 87, "schedCron": "L40h40VC", "schedRange": ["6n7IGhO4", "AfCCkM0x", "oXO38BhF"]}, {"action": 36, "resource": "0wlQg3zO", "schedAction": 64, "schedCron": "TxYsLAxL", "schedRange": ["WbCQkl1n", "BzZb0sFt", "gWrM5wh2"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddRolePermissionsV4 \
    --roleId 'AQVBYkHD' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 363 'AdminAddRolePermissionsV4' test.out

#- 364 AdminDeleteRolePermissionsV4
# body param: body
echo '["mucpUZ6n", "bZWSF6CZ", "AuNsjeXL"]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDeleteRolePermissionsV4 \
    --roleId 'c3ODcznQ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 364 'AdminDeleteRolePermissionsV4' test.out

#- 365 AdminListAssignedUsersV4
$CLI_EXE \
    --sn iam \
    --op AdminListAssignedUsersV4 \
    --roleId 'HMzyqmNc' \
    --after '2Cd7eScq' \
    --before 'gitw9ac2' \
    --limit '47' \
    > test.out 2>&1
eval_tap $? 365 'AdminListAssignedUsersV4' test.out

#- 366 AdminAssignUserToRoleV4
# body param: body
echo '{"assignedNamespaces": ["szLxlLHI", "UCJEb3O1", "yXMUI0rZ"], "namespace": "gzmIN03J", "userId": "lTFcztCr"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAssignUserToRoleV4 \
    --roleId 'bxB6ZRcV' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 366 'AdminAssignUserToRoleV4' test.out

#- 367 AdminRevokeUserFromRoleV4
# body param: body
echo '{"namespace": "HIuTAyUL", "userId": "9zFmKEGt"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminRevokeUserFromRoleV4 \
    --roleId 'lZQc5qc1' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 367 'AdminRevokeUserFromRoleV4' test.out

#- 368 AdminInviteUserNewV4
# body param: body
echo '{"assignedNamespaces": ["IEXcF04x", "r45vWF27", "bkTacNLM"], "emailAddresses": ["5lbqszrQ", "IIi9WU6i", "5xzo6E1K"], "isAdmin": true, "isNewStudio": false, "languageTag": "M8fbQtL4", "namespace": "j4qVdA8n", "roleId": "8O2pzvRd"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminInviteUserNewV4 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 368 'AdminInviteUserNewV4' test.out

#- 369 AdminUpdateMyUserV4
# body param: body
echo '{"avatarUrl": "ziFeBaqb", "country": "GLu45UEw", "dateOfBirth": "OJeUroP9", "displayName": "BdRdEu6G", "languageTag": "CDTerfBZ", "skipLoginQueue": false, "uniqueDisplayName": "JDvw5iV7", "userName": "aYNzo7KW"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateMyUserV4 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 369 'AdminUpdateMyUserV4' test.out

#- 370 AdminDisableMyAuthenticatorV4
# body param: body
echo '{"factor": "SLlSCIw5", "mfaToken": "tjuXQQEP"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDisableMyAuthenticatorV4 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 370 'AdminDisableMyAuthenticatorV4' test.out

#- 371 AdminEnableMyAuthenticatorV4
$CLI_EXE \
    --sn iam \
    --op AdminEnableMyAuthenticatorV4 \
    --code 'ozbMnbkX' \
    > test.out 2>&1
eval_tap $? 371 'AdminEnableMyAuthenticatorV4' test.out

#- 372 AdminGenerateMyAuthenticatorKeyV4
$CLI_EXE \
    --sn iam \
    --op AdminGenerateMyAuthenticatorKeyV4 \
    > test.out 2>&1
eval_tap $? 372 'AdminGenerateMyAuthenticatorKeyV4' test.out

#- 373 AdminGetMyBackupCodesV4
eval_tap 0 373 'AdminGetMyBackupCodesV4 # SKIP deprecated' test.out

#- 374 AdminGenerateMyBackupCodesV4
eval_tap 0 374 'AdminGenerateMyBackupCodesV4 # SKIP deprecated' test.out

#- 375 AdminDisableMyBackupCodesV4
# body param: body
echo '{"factor": "omrEeFYl", "mfaToken": "2uPrZ4gr"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDisableMyBackupCodesV4 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 375 'AdminDisableMyBackupCodesV4' test.out

#- 376 AdminDownloadMyBackupCodesV4
eval_tap 0 376 'AdminDownloadMyBackupCodesV4 # SKIP deprecated' test.out

#- 377 AdminEnableMyBackupCodesV4
eval_tap 0 377 'AdminEnableMyBackupCodesV4 # SKIP deprecated' test.out

#- 378 AdminGetBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op AdminGetBackupCodesV4 \
    --languageTag '06QNlDlZ' \
    > test.out 2>&1
eval_tap $? 378 'AdminGetBackupCodesV4' test.out

#- 379 AdminGenerateBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op AdminGenerateBackupCodesV4 \
    --languageTag 'mRBtJJHV' \
    > test.out 2>&1
eval_tap $? 379 'AdminGenerateBackupCodesV4' test.out

#- 380 AdminEnableBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op AdminEnableBackupCodesV4 \
    --languageTag 'jKAhHcn5' \
    > test.out 2>&1
eval_tap $? 380 'AdminEnableBackupCodesV4' test.out

#- 381 AdminChallengeMyMFAV4
$CLI_EXE \
    --sn iam \
    --op AdminChallengeMyMFAV4 \
    --code 'OGY6oRPB' \
    --factor '04hARBim' \
    > test.out 2>&1
eval_tap $? 381 'AdminChallengeMyMFAV4' test.out

#- 382 AdminSendMyMFAEmailCodeV4
$CLI_EXE \
    --sn iam \
    --op AdminSendMyMFAEmailCodeV4 \
    --action 'l5Y9CgP6' \
    --languageTag 'fl76g3ct' \
    > test.out 2>&1
eval_tap $? 382 'AdminSendMyMFAEmailCodeV4' test.out

#- 383 AdminDisableMyEmailV4
# body param: body
echo '{"factor": "Jj2gmZpg", "mfaToken": "BRcoiXen"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDisableMyEmailV4 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 383 'AdminDisableMyEmailV4' test.out

#- 384 AdminEnableMyEmailV4
$CLI_EXE \
    --sn iam \
    --op AdminEnableMyEmailV4 \
    --code 'FPOAgkV5' \
    > test.out 2>&1
eval_tap $? 384 'AdminEnableMyEmailV4' test.out

#- 385 AdminGetMyEnabledFactorsV4
$CLI_EXE \
    --sn iam \
    --op AdminGetMyEnabledFactorsV4 \
    > test.out 2>&1
eval_tap $? 385 'AdminGetMyEnabledFactorsV4' test.out

#- 386 AdminMakeFactorMyDefaultV4
$CLI_EXE \
    --sn iam \
    --op AdminMakeFactorMyDefaultV4 \
    --factor 'F72zHZoC' \
    > test.out 2>&1
eval_tap $? 386 'AdminMakeFactorMyDefaultV4' test.out

#- 387 AdminGetMyOwnMFAStatusV4
$CLI_EXE \
    --sn iam \
    --op AdminGetMyOwnMFAStatusV4 \
    > test.out 2>&1
eval_tap $? 387 'AdminGetMyOwnMFAStatusV4' test.out

#- 388 AdminGetMyMFAStatusV4
eval_tap 0 388 'AdminGetMyMFAStatusV4 # SKIP deprecated' test.out

#- 389 AdminInviteUserV4
eval_tap 0 389 'AdminInviteUserV4 # SKIP deprecated' test.out

#- 390 AuthenticationWithPlatformLinkV4
$CLI_EXE \
    --sn iam \
    --op AuthenticationWithPlatformLinkV4 \
    --extend_exp 'false' \
    --client_id '7cl2q3Pl' \
    --linkingToken 'Gx8dwP22' \
    --password 'Tg1KQMCJ' \
    --username 'UiCgwgrW' \
    > test.out 2>&1
eval_tap $? 390 'AuthenticationWithPlatformLinkV4' test.out

#- 391 GenerateTokenByNewHeadlessAccountV4
$CLI_EXE \
    --sn iam \
    --op GenerateTokenByNewHeadlessAccountV4 \
    --additionalData 'jKSBDYoJ' \
    --extend_exp 'false' \
    --linkingToken 'gPDyWy3W' \
    > test.out 2>&1
eval_tap $? 391 'GenerateTokenByNewHeadlessAccountV4' test.out

#- 392 Verify2faCodeV4
$CLI_EXE \
    --sn iam \
    --op Verify2faCodeV4 \
    --code 'GMI3bhvw' \
    --factor '5Ehn8ED8' \
    --mfaToken 'KxUb7aZE' \
    --rememberDevice 'false' \
    > test.out 2>&1
eval_tap $? 392 'Verify2faCodeV4' test.out

#- 393 PlatformTokenGrantV4
$CLI_EXE \
    --sn iam \
    --op PlatformTokenGrantV4 \
    --platformId 'aGW8QlyN' \
    --codeChallenge 'k9yZFpxM' \
    --codeChallengeMethod 'plain' \
    --additionalData 'm2fl5rbT' \
    --client_id 'nRW4NnL9' \
    --createHeadless 'false' \
    --device_id 'UVRLPzIT' \
    --macAddress 'hkLhz2j7' \
    --platform_token 'ELS8RFXB' \
    --serviceLabel '0.24084006194573293' \
    --skipSetCookie 'true' \
    > test.out 2>&1
eval_tap $? 393 'PlatformTokenGrantV4' test.out

#- 394 SimultaneousLoginV4
$CLI_EXE \
    --sn iam \
    --op SimultaneousLoginV4 \
    --codeChallenge 'PmbAw3sx' \
    --codeChallengeMethod 'plain' \
    --simultaneousPlatform 'mMcGFvOQ' \
    --simultaneousTicket 'iXl30xtI' \
    --nativePlatform 'epicgames' \
    --nativePlatformTicket '9N2ViRg6' \
    > test.out 2>&1
eval_tap $? 394 'SimultaneousLoginV4' test.out

#- 395 TokenGrantV4
$CLI_EXE \
    --sn iam \
    --op TokenGrantV4 \
    --codeChallenge 'ZEKdHyEn' \
    --codeChallengeMethod 'S256' \
    --additionalData '7FAjOF7C' \
    --client_id 'zrCTDyLk' \
    --client_secret 'jnoreM8x' \
    --code 'pQMIzEAz' \
    --code_verifier 'tJHONOYT' \
    --extendNamespace 'ehgOq3YY' \
    --extend_exp 'true' \
    --login_queue_ticket 'ztX9crxy' \
    --password 'Y8ReJLWQ' \
    --redirect_uri 'a71wRsK9' \
    --refresh_token '18sGjAnf' \
    --username 'PMUYrbUb' \
    --grant_type 'password' \
    > test.out 2>&1
eval_tap $? 395 'TokenGrantV4' test.out

#- 396 RequestTargetTokenResponseV4
$CLI_EXE \
    --sn iam \
    --op RequestTargetTokenResponseV4 \
    --additionalData 'z0rxYmsv' \
    --code 'S4n3Aphg' \
    > test.out 2>&1
eval_tap $? 396 'RequestTargetTokenResponseV4' test.out

#- 397 PublicListUserIDByPlatformUserIDsV4
# body param: body
echo '{"pidType": "IKJsAOIN", "platformUserIds": ["GH5FMKXJ", "sLUxl19I", "DLuKIFED"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicListUserIDByPlatformUserIDsV4 \
    --namespace $AB_NAMESPACE \
    --platformId 'FCt7PgHK' \
    --rawPUID 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 397 'PublicListUserIDByPlatformUserIDsV4' test.out

#- 398 PublicGetUserByPlatformUserIDV4
$CLI_EXE \
    --sn iam \
    --op PublicGetUserByPlatformUserIDV4 \
    --namespace $AB_NAMESPACE \
    --platformId 'yvsd6mOB' \
    --platformUserId 'HjR1W0Y5' \
    > test.out 2>&1
eval_tap $? 398 'PublicGetUserByPlatformUserIDV4' test.out

#- 399 PublicCreateTestUserV4
# body param: body
echo '{"acceptedPolicies": [{"isAccepted": false, "localizedPolicyVersionId": "ogXcZvY2", "policyId": "xyMbKq6D", "policyVersionId": "D2eDxOmH"}, {"isAccepted": true, "localizedPolicyVersionId": "XEKAeUZT", "policyId": "L6ZbVtTX", "policyVersionId": "qbqZKjy1"}, {"isAccepted": false, "localizedPolicyVersionId": "laJwqBxx", "policyId": "4AvtVMYV", "policyVersionId": "pEklarhc"}], "authType": "EMAILPASSWD", "country": "C1e4h8sS", "dateOfBirth": "gKX6Yqbj", "displayName": "501LNDqk", "emailAddress": "dlwYvWzh", "password": "xDDtcZbd", "passwordMD5Sum": "e1ZCGtQR", "uniqueDisplayName": "L2WeHDkD", "username": "ijnhqcnw", "verified": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicCreateTestUserV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 399 'PublicCreateTestUserV4' test.out

#- 400 PublicCreateUserV4
# body param: body
echo '{"acceptedPolicies": [{"isAccepted": true, "localizedPolicyVersionId": "cSie5pdQ", "policyId": "V5leUrAr", "policyVersionId": "U6dIMivE"}, {"isAccepted": false, "localizedPolicyVersionId": "QiteszDk", "policyId": "0fMxnrNk", "policyVersionId": "Wt984sUd"}, {"isAccepted": true, "localizedPolicyVersionId": "ddlYvE3Y", "policyId": "zBMYnKTf", "policyVersionId": "qlcJ9Hux"}], "authType": "EMAILPASSWD", "code": "OeBQqVp6", "country": "sI8saj16", "dateOfBirth": "oUDnYenz", "displayName": "yNm3ZQ4W", "emailAddress": "MrmSQOhi", "password": "fJN08PIV", "passwordMD5Sum": "4oicg3pP", "reachMinimumAge": false, "uniqueDisplayName": "mFaMSUdH", "username": "wmHg1zKx"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicCreateUserV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 400 'PublicCreateUserV4' test.out

#- 401 CreateUserFromInvitationV4
# body param: body
echo '{"acceptedPolicies": [{"isAccepted": false, "localizedPolicyVersionId": "MTVEAjIm", "policyId": "hnePCvNZ", "policyVersionId": "hmRpywsl"}, {"isAccepted": false, "localizedPolicyVersionId": "HBt9lpab", "policyId": "q49Tp28I", "policyVersionId": "mb6k0WQd"}, {"isAccepted": true, "localizedPolicyVersionId": "r3sIpRzX", "policyId": "2H78bT66", "policyVersionId": "FtyoXD5b"}], "authType": "EMAILPASSWD", "code": "KVHfvQiF", "country": "OCheulPJ", "dateOfBirth": "rM50yH98", "displayName": "WzlK8d1q", "emailAddress": "d0s6MyKa", "password": "Bv0bjAtg", "passwordMD5Sum": "DSZ34pR6", "reachMinimumAge": false, "uniqueDisplayName": "iMfiuzRc", "username": "JPC7ME8n"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op CreateUserFromInvitationV4 \
    --invitationId 'nOSQPNQE' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 401 'CreateUserFromInvitationV4' test.out

#- 402 PublicUpdateUserV4
# body param: body
echo '{"avatarUrl": "0uAgzgyG", "country": "8CC40RKw", "dateOfBirth": "ine6eQKR", "displayName": "cSyoMzo7", "languageTag": "2NL2NCEO", "uniqueDisplayName": "wBKMncB6", "userName": "XbBEmm1f"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpdateUserV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 402 'PublicUpdateUserV4' test.out

#- 403 PublicUpdateUserEmailAddressV4
# body param: body
echo '{"code": "Q3PN1dzE", "emailAddress": "TnbwoHRf"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpdateUserEmailAddressV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 403 'PublicUpdateUserEmailAddressV4' test.out

#- 404 PublicUpgradeHeadlessAccountWithVerificationCodeV4
# body param: body
echo '{"code": "7PYzYVBo", "country": "6qQ1k7l4", "dateOfBirth": "WdPMXmjK", "displayName": "CQ0g5je0", "emailAddress": "6vkNbF7M", "password": "jCL34Kbw", "reachMinimumAge": true, "uniqueDisplayName": "kWkNhP3n", "username": "62CYmz5o", "validateOnly": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpgradeHeadlessAccountWithVerificationCodeV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 404 'PublicUpgradeHeadlessAccountWithVerificationCodeV4' test.out

#- 405 PublicUpgradeHeadlessAccountV4
# body param: body
echo '{"dateOfBirth": "rBODIdV4", "displayName": "XxOJZNdL", "emailAddress": "CHWZtqtq", "password": "7qnQXb2o", "uniqueDisplayName": "MdlnISFF", "username": "5TGvQvG4"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpgradeHeadlessAccountV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 405 'PublicUpgradeHeadlessAccountV4' test.out

#- 406 PublicDisableMyAuthenticatorV4
# body param: body
echo '{"factor": "3cOQ22Rn", "mfaToken": "5GLc2wWV"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicDisableMyAuthenticatorV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 406 'PublicDisableMyAuthenticatorV4' test.out

#- 407 PublicEnableMyAuthenticatorV4
$CLI_EXE \
    --sn iam \
    --op PublicEnableMyAuthenticatorV4 \
    --namespace $AB_NAMESPACE \
    --code 'qzLC2SFF' \
    > test.out 2>&1
eval_tap $? 407 'PublicEnableMyAuthenticatorV4' test.out

#- 408 PublicGenerateMyAuthenticatorKeyV4
$CLI_EXE \
    --sn iam \
    --op PublicGenerateMyAuthenticatorKeyV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 408 'PublicGenerateMyAuthenticatorKeyV4' test.out

#- 409 PublicGetMyBackupCodesV4
eval_tap 0 409 'PublicGetMyBackupCodesV4 # SKIP deprecated' test.out

#- 410 PublicGenerateMyBackupCodesV4
eval_tap 0 410 'PublicGenerateMyBackupCodesV4 # SKIP deprecated' test.out

#- 411 PublicDisableMyBackupCodesV4
# body param: body
echo '{"factor": "pK7IJo17", "mfaToken": "xrf0oETk"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicDisableMyBackupCodesV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 411 'PublicDisableMyBackupCodesV4' test.out

#- 412 PublicDownloadMyBackupCodesV4
eval_tap 0 412 'PublicDownloadMyBackupCodesV4 # SKIP deprecated' test.out

#- 413 PublicEnableMyBackupCodesV4
eval_tap 0 413 'PublicEnableMyBackupCodesV4 # SKIP deprecated' test.out

#- 414 PublicGetBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op PublicGetBackupCodesV4 \
    --namespace $AB_NAMESPACE \
    --languageTag 'kRjSEUjt' \
    > test.out 2>&1
eval_tap $? 414 'PublicGetBackupCodesV4' test.out

#- 415 PublicGenerateBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op PublicGenerateBackupCodesV4 \
    --namespace $AB_NAMESPACE \
    --languageTag 'wx9UWejM' \
    > test.out 2>&1
eval_tap $? 415 'PublicGenerateBackupCodesV4' test.out

#- 416 PublicEnableBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op PublicEnableBackupCodesV4 \
    --namespace $AB_NAMESPACE \
    --languageTag 'AoMddSsm' \
    > test.out 2>&1
eval_tap $? 416 'PublicEnableBackupCodesV4' test.out

#- 417 PublicChallengeMyMFAV4
$CLI_EXE \
    --sn iam \
    --op PublicChallengeMyMFAV4 \
    --namespace $AB_NAMESPACE \
    --code 'WJuzKtJ7' \
    --factor 'xhaGBjO9' \
    > test.out 2>&1
eval_tap $? 417 'PublicChallengeMyMFAV4' test.out

#- 418 PublicRemoveTrustedDeviceV4
$CLI_EXE \
    --sn iam \
    --op PublicRemoveTrustedDeviceV4 \
    --namespace $AB_NAMESPACE \
    --device_token 'EKqlCa0K' \
    > test.out 2>&1
eval_tap $? 418 'PublicRemoveTrustedDeviceV4' test.out

#- 419 PublicSendMyMFAEmailCodeV4
$CLI_EXE \
    --sn iam \
    --op PublicSendMyMFAEmailCodeV4 \
    --namespace $AB_NAMESPACE \
    --action 'BramXhgj' \
    --languageTag 'MtITOrGo' \
    > test.out 2>&1
eval_tap $? 419 'PublicSendMyMFAEmailCodeV4' test.out

#- 420 PublicDisableMyEmailV4
# body param: body
echo '{"factor": "r7c9qZFw", "mfaToken": "vlJ0OIds"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicDisableMyEmailV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 420 'PublicDisableMyEmailV4' test.out

#- 421 PublicEnableMyEmailV4
$CLI_EXE \
    --sn iam \
    --op PublicEnableMyEmailV4 \
    --namespace $AB_NAMESPACE \
    --code 'GcGJT0LS' \
    > test.out 2>&1
eval_tap $? 421 'PublicEnableMyEmailV4' test.out

#- 422 PublicGetMyEnabledFactorsV4
$CLI_EXE \
    --sn iam \
    --op PublicGetMyEnabledFactorsV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 422 'PublicGetMyEnabledFactorsV4' test.out

#- 423 PublicMakeFactorMyDefaultV4
$CLI_EXE \
    --sn iam \
    --op PublicMakeFactorMyDefaultV4 \
    --namespace $AB_NAMESPACE \
    --factor 'spIxjGT8' \
    > test.out 2>&1
eval_tap $? 423 'PublicMakeFactorMyDefaultV4' test.out

#- 424 PublicGetMyOwnMFAStatusV4
$CLI_EXE \
    --sn iam \
    --op PublicGetMyOwnMFAStatusV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 424 'PublicGetMyOwnMFAStatusV4' test.out

#- 425 PublicGetMyMFAStatusV4
eval_tap 0 425 'PublicGetMyMFAStatusV4 # SKIP deprecated' test.out

#- 426 PublicGetUserPublicInfoByUserIdV4
$CLI_EXE \
    --sn iam \
    --op PublicGetUserPublicInfoByUserIdV4 \
    --namespace $AB_NAMESPACE \
    --userId '8QadavzX' \
    > test.out 2>&1
eval_tap $? 426 'PublicGetUserPublicInfoByUserIdV4' test.out

#- 427 PublicInviteUserV4
# body param: body
echo '{"additionalData": "2tnAXouf", "emailAddress": "2rPHjtzj", "languageTag": "0HBb8V9b", "namespace": "Eajw3Eg2", "namespaceDisplayName": "RSnXRn8M"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicInviteUserV4 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 427 'PublicInviteUserV4' test.out

#- 428 PublicUpgradeHeadlessWithCodeV4Forward
# body param: body
echo '{"acceptedPolicies": [{"isAccepted": false, "localizedPolicyVersionId": "ofadscXu", "policyId": "zjlEOQag", "policyVersionId": "tRrL5QxO"}, {"isAccepted": false, "localizedPolicyVersionId": "cPReIXLF", "policyId": "R4IQplyZ", "policyVersionId": "kV4DDk6M"}, {"isAccepted": true, "localizedPolicyVersionId": "CMR3K1kK", "policyId": "NYKfZHe0", "policyVersionId": "ORcQcXs4"}], "code": "n1EKpx9e", "country": "djSUuNdr", "dateOfBirth": "MajFr6bk", "displayName": "aAIpfvmK", "emailAddress": "WVHEtBxg", "password": "owNWw36S", "reachMinimumAge": true, "uniqueDisplayName": "2b8GWf6V", "username": "cZYPZjcw", "validateOnly": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpgradeHeadlessWithCodeV4Forward \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 428 'PublicUpgradeHeadlessWithCodeV4Forward' test.out


# remove artifacts
rm -f "$CLI_TOKEN_FILE"
rm -f "$TEMP_JSON_INPUT"
rm -f "$TEMP_FILE_UPLOAD"

exit $EXIT_CODE