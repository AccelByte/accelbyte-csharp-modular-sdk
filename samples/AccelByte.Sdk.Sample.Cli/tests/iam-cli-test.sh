#!/usr/bin/env bash

# Copyright (c) 2021 AccelByte Inc. All Rights Reserved.
# This is licensed software from AccelByte Inc, for limitations
# and restrictions contact your company contract manager.

# This code is generated by tool. DO NOT EDIT.

# Meta:
# - random seed: 
# - template file: 

# Instructions:
# - Run the Justice SDK Mock Server first before running this script.

export AB_BASE_URL="http://127.0.0.1:8080"
export AB_CLIENT_ID="admin"
export AB_CLIENT_SECRET="admin"
export AB_NAMESPACE="test"
export AB_APP_NAME="UnitTest"

EXIT_CODE=0

eval_tap() {
  if [ $1 -eq 0 ]; then
    echo "ok $2 - $3"
  else
    EXIT_CODE=1
    echo "not ok $2 - $3"
    sed 's/^/# /g' $4
  fi
  rm -f $4
}

CLI_EXE="AccelByte.Sdk.Sample.Cli"
CLI_TOKEN_FILE="$(dirname "$(which $CLI_EXE)")/token.json"
TEMP_JSON_INPUT="input_json.json"
TEMP_FILE_UPLOAD="file_upload.bin"

echo "TAP version 13"
echo "1..376"

#- 1 Login
$CLI_EXE --op login --lt user --user user --pass user > test.out 2>&1
eval_tap $? 1 'Login' test.out

if [ $EXIT_CODE -ne 0 ]; then
  echo "Bail out! Login failed."
  exit $EXIT_CODE
fi

# echo "foo" > "$CLI_TOKEN_FILE"

#- 2 GetBansType
eval_tap 0 2 'GetBansType # SKIP deprecated' test.out

#- 3 GetListBanReason
eval_tap 0 3 'GetListBanReason # SKIP deprecated' test.out

#- 4 GetClients
eval_tap 0 4 'GetClients # SKIP deprecated' test.out

#- 5 CreateClient
eval_tap 0 5 'CreateClient # SKIP deprecated' test.out

#- 6 GetClient
eval_tap 0 6 'GetClient # SKIP deprecated' test.out

#- 7 UpdateClient
eval_tap 0 7 'UpdateClient # SKIP deprecated' test.out

#- 8 DeleteClient
eval_tap 0 8 'DeleteClient # SKIP deprecated' test.out

#- 9 UpdateClientPermission
eval_tap 0 9 'UpdateClientPermission # SKIP deprecated' test.out

#- 10 AddClientPermission
eval_tap 0 10 'AddClientPermission # SKIP deprecated' test.out

#- 11 DeleteClientPermission
eval_tap 0 11 'DeleteClientPermission # SKIP deprecated' test.out

#- 12 UpdateClientSecret
eval_tap 0 12 'UpdateClientSecret # SKIP deprecated' test.out

#- 13 GetClientsbyNamespace
eval_tap 0 13 'GetClientsbyNamespace # SKIP deprecated' test.out

#- 14 CreateClientByNamespace
eval_tap 0 14 'CreateClientByNamespace # SKIP deprecated' test.out

#- 15 DeleteClientByNamespace
eval_tap 0 15 'DeleteClientByNamespace # SKIP deprecated' test.out

#- 16 CreateUser
eval_tap 0 16 'CreateUser # SKIP deprecated' test.out

#- 17 GetAdminUsersByRoleID
eval_tap 0 17 'GetAdminUsersByRoleID # SKIP deprecated' test.out

#- 18 GetUserByLoginID
eval_tap 0 18 'GetUserByLoginID # SKIP deprecated' test.out

#- 19 GetUserByPlatformUserID
eval_tap 0 19 'GetUserByPlatformUserID # SKIP deprecated' test.out

#- 20 ForgotPassword
eval_tap 0 20 'ForgotPassword # SKIP deprecated' test.out

#- 21 GetUsersByLoginIds
eval_tap 0 21 'GetUsersByLoginIds # SKIP deprecated' test.out

#- 22 ResetPassword
eval_tap 0 22 'ResetPassword # SKIP deprecated' test.out

#- 23 SearchUser
eval_tap 0 23 'SearchUser # SKIP deprecated' test.out

#- 24 GetUserByUserID
eval_tap 0 24 'GetUserByUserID # SKIP deprecated' test.out

#- 25 UpdateUser
eval_tap 0 25 'UpdateUser # SKIP deprecated' test.out

#- 26 DeleteUser
eval_tap 0 26 'DeleteUser # SKIP deprecated' test.out

#- 27 BanUser
eval_tap 0 27 'BanUser # SKIP deprecated' test.out

#- 28 GetUserBanHistory
eval_tap 0 28 'GetUserBanHistory # SKIP deprecated' test.out

#- 29 DisableUserBan
eval_tap 0 29 'DisableUserBan # SKIP deprecated' test.out

#- 30 EnableUserBan
eval_tap 0 30 'EnableUserBan # SKIP deprecated' test.out

#- 31 ListCrossNamespaceAccountLink
eval_tap 0 31 'ListCrossNamespaceAccountLink # SKIP deprecated' test.out

#- 32 DisableUser
eval_tap 0 32 'DisableUser # SKIP deprecated' test.out

#- 33 EnableUser
eval_tap 0 33 'EnableUser # SKIP deprecated' test.out

#- 34 GetUserInformation
eval_tap 0 34 'GetUserInformation # SKIP deprecated' test.out

#- 35 DeleteUserInformation
eval_tap 0 35 'DeleteUserInformation # SKIP deprecated' test.out

#- 36 GetUserLoginHistories
eval_tap 0 36 'GetUserLoginHistories # SKIP deprecated' test.out

#- 37 UpdatePassword
eval_tap 0 37 'UpdatePassword # SKIP deprecated' test.out

#- 38 SaveUserPermission
eval_tap 0 38 'SaveUserPermission # SKIP deprecated' test.out

#- 39 AddUserPermission
eval_tap 0 39 'AddUserPermission # SKIP deprecated' test.out

#- 40 DeleteUserPermission
eval_tap 0 40 'DeleteUserPermission # SKIP deprecated' test.out

#- 41 GetUserPlatformAccounts
eval_tap 0 41 'GetUserPlatformAccounts # SKIP deprecated' test.out

#- 42 GetUserMapping
eval_tap 0 42 'GetUserMapping # SKIP deprecated' test.out

#- 43 GetUserJusticePlatformAccount
eval_tap 0 43 'GetUserJusticePlatformAccount # SKIP deprecated' test.out

#- 44 PlatformLink
eval_tap 0 44 'PlatformLink # SKIP deprecated' test.out

#- 45 PlatformUnlink
eval_tap 0 45 'PlatformUnlink # SKIP deprecated' test.out

#- 46 GetPublisherUser
eval_tap 0 46 'GetPublisherUser # SKIP deprecated' test.out

#- 47 SaveUserRoles
eval_tap 0 47 'SaveUserRoles # SKIP deprecated' test.out

#- 48 AddUserRole
eval_tap 0 48 'AddUserRole # SKIP deprecated' test.out

#- 49 DeleteUserRole
eval_tap 0 49 'DeleteUserRole # SKIP deprecated' test.out

#- 50 UpgradeHeadlessAccount
eval_tap 0 50 'UpgradeHeadlessAccount # SKIP deprecated' test.out

#- 51 UpgradeHeadlessAccountWithVerificationCode
eval_tap 0 51 'UpgradeHeadlessAccountWithVerificationCode # SKIP deprecated' test.out

#- 52 UserVerification
eval_tap 0 52 'UserVerification # SKIP deprecated' test.out

#- 53 SendVerificationCode
eval_tap 0 53 'SendVerificationCode # SKIP deprecated' test.out

#- 54 Authorization
eval_tap 0 54 'Authorization # SKIP deprecated' test.out

#- 55 GetJWKS
eval_tap 0 55 'GetJWKS # SKIP deprecated' test.out

#- 56 PlatformTokenRequestHandler
eval_tap 0 56 'PlatformTokenRequestHandler # SKIP deprecated' test.out

#- 57 RevokeUser
eval_tap 0 57 'RevokeUser # SKIP deprecated' test.out

#- 58 GetRevocationList
eval_tap 0 58 'GetRevocationList # SKIP deprecated' test.out

#- 59 RevokeToken
eval_tap 0 59 'RevokeToken # SKIP deprecated' test.out

#- 60 RevokeAUser
eval_tap 0 60 'RevokeAUser # SKIP deprecated' test.out

#- 61 TokenGrant
eval_tap 0 61 'TokenGrant # SKIP deprecated' test.out

#- 62 VerifyToken
eval_tap 0 62 'VerifyToken # SKIP deprecated' test.out

#- 63 GetRoles
eval_tap 0 63 'GetRoles # SKIP deprecated' test.out

#- 64 CreateRole
eval_tap 0 64 'CreateRole # SKIP deprecated' test.out

#- 65 GetRole
eval_tap 0 65 'GetRole # SKIP deprecated' test.out

#- 66 UpdateRole
eval_tap 0 66 'UpdateRole # SKIP deprecated' test.out

#- 67 DeleteRole
eval_tap 0 67 'DeleteRole # SKIP deprecated' test.out

#- 68 GetRoleAdminStatus
eval_tap 0 68 'GetRoleAdminStatus # SKIP deprecated' test.out

#- 69 SetRoleAsAdmin
eval_tap 0 69 'SetRoleAsAdmin # SKIP deprecated' test.out

#- 70 RemoveRoleAdmin
eval_tap 0 70 'RemoveRoleAdmin # SKIP deprecated' test.out

#- 71 GetRoleManagers
eval_tap 0 71 'GetRoleManagers # SKIP deprecated' test.out

#- 72 AddRoleManagers
eval_tap 0 72 'AddRoleManagers # SKIP deprecated' test.out

#- 73 RemoveRoleManagers
eval_tap 0 73 'RemoveRoleManagers # SKIP deprecated' test.out

#- 74 GetRoleMembers
eval_tap 0 74 'GetRoleMembers # SKIP deprecated' test.out

#- 75 AddRoleMembers
eval_tap 0 75 'AddRoleMembers # SKIP deprecated' test.out

#- 76 RemoveRoleMembers
eval_tap 0 76 'RemoveRoleMembers # SKIP deprecated' test.out

#- 77 UpdateRolePermissions
eval_tap 0 77 'UpdateRolePermissions # SKIP deprecated' test.out

#- 78 AddRolePermission
eval_tap 0 78 'AddRolePermission # SKIP deprecated' test.out

#- 79 DeleteRolePermission
eval_tap 0 79 'DeleteRolePermission # SKIP deprecated' test.out

#- 80 AdminGetAgeRestrictionStatusV2
eval_tap 0 80 'AdminGetAgeRestrictionStatusV2 # SKIP deprecated' test.out

#- 81 AdminUpdateAgeRestrictionConfigV2
eval_tap 0 81 'AdminUpdateAgeRestrictionConfigV2 # SKIP deprecated' test.out

#- 82 GetListCountryAgeRestriction
eval_tap 0 82 'GetListCountryAgeRestriction # SKIP deprecated' test.out

#- 83 UpdateCountryAgeRestriction
eval_tap 0 83 'UpdateCountryAgeRestriction # SKIP deprecated' test.out

#- 84 AdminSearchUsersV2
eval_tap 0 84 'AdminSearchUsersV2 # SKIP deprecated' test.out

#- 85 AdminGetUserByUserIdV2
eval_tap 0 85 'AdminGetUserByUserIdV2 # SKIP deprecated' test.out

#- 86 AdminUpdateUserV2
eval_tap 0 86 'AdminUpdateUserV2 # SKIP deprecated' test.out

#- 87 AdminBanUserV2
eval_tap 0 87 'AdminBanUserV2 # SKIP deprecated' test.out

#- 88 AdminGetUserBanV2
eval_tap 0 88 'AdminGetUserBanV2 # SKIP deprecated' test.out

#- 89 AdminDisableUserV2
eval_tap 0 89 'AdminDisableUserV2 # SKIP deprecated' test.out

#- 90 AdminEnableUserV2
eval_tap 0 90 'AdminEnableUserV2 # SKIP deprecated' test.out

#- 91 AdminResetPasswordV2
eval_tap 0 91 'AdminResetPasswordV2 # SKIP deprecated' test.out

#- 92 AdminDeletePlatformLinkV2
eval_tap 0 92 'AdminDeletePlatformLinkV2 # SKIP deprecated' test.out

#- 93 AdminPutUserRolesV2
eval_tap 0 93 'AdminPutUserRolesV2 # SKIP deprecated' test.out

#- 94 AdminCreateUserRolesV2
eval_tap 0 94 'AdminCreateUserRolesV2 # SKIP deprecated' test.out

#- 95 PublicGetCountryAgeRestriction
eval_tap 0 95 'PublicGetCountryAgeRestriction # SKIP deprecated' test.out

#- 96 PublicCreateUserV2
eval_tap 0 96 'PublicCreateUserV2 # SKIP deprecated' test.out

#- 97 PublicForgotPasswordV2
eval_tap 0 97 'PublicForgotPasswordV2 # SKIP deprecated' test.out

#- 98 PublicResetPasswordV2
eval_tap 0 98 'PublicResetPasswordV2 # SKIP deprecated' test.out

#- 99 PublicGetUserByUserIDV2
eval_tap 0 99 'PublicGetUserByUserIDV2 # SKIP deprecated' test.out

#- 100 PublicUpdateUserV2
eval_tap 0 100 'PublicUpdateUserV2 # SKIP deprecated' test.out

#- 101 PublicGetUserBan
eval_tap 0 101 'PublicGetUserBan # SKIP deprecated' test.out

#- 102 PublicUpdatePasswordV2
eval_tap 0 102 'PublicUpdatePasswordV2 # SKIP deprecated' test.out

#- 103 GetListJusticePlatformAccounts
eval_tap 0 103 'GetListJusticePlatformAccounts # SKIP deprecated' test.out

#- 104 PublicPlatformLinkV2
eval_tap 0 104 'PublicPlatformLinkV2 # SKIP deprecated' test.out

#- 105 PublicDeletePlatformLinkV2
eval_tap 0 105 'PublicDeletePlatformLinkV2 # SKIP deprecated' test.out

#- 106 AdminGetBansTypeV3
$CLI_EXE \
    --sn iam \
    --op AdminGetBansTypeV3 \
    > test.out 2>&1
eval_tap $? 106 'AdminGetBansTypeV3' test.out

#- 107 AdminGetListBanReasonV3
$CLI_EXE \
    --sn iam \
    --op AdminGetListBanReasonV3 \
    > test.out 2>&1
eval_tap $? 107 'AdminGetListBanReasonV3' test.out

#- 108 AdminGetInputValidations
$CLI_EXE \
    --sn iam \
    --op AdminGetInputValidations \
    > test.out 2>&1
eval_tap $? 108 'AdminGetInputValidations' test.out

#- 109 AdminUpdateInputValidations
# body param: body
echo '[{"field": "DorJqN1t", "validation": {"allowAllSpecialCharacters": true, "allowDigit": false, "allowLetter": true, "allowSpace": false, "allowUnicode": true, "avatarConfig": {"allowedPrefixes": ["z26V8U9l", "NNusaadD", "6bUa73lh"], "preferRegex": false, "regex": "PN67QKeu"}, "blockedWord": ["4vcMqiLD", "W82RsfkF", "3azwGqMQ"], "description": [{"language": "kkfede53", "message": ["2iZkCa40", "DZkESl80", "DSo5JpF9"]}, {"language": "WQf8m7Jo", "message": ["7Nai9KJE", "WvbbvX3K", "emWtMmSo"]}, {"language": "1Qwy7wcG", "message": ["HbD3Cl66", "X36WESYt", "dt51HJlf"]}], "isCustomRegex": false, "letterCase": "EkfdZC2Q", "maxLength": 91, "maxRepeatingAlphaNum": 3, "maxRepeatingSpecialCharacter": 70, "minCharType": 83, "minLength": 36, "regex": "fr1eZBUA", "specialCharacterLocation": "6Gm5Ab1F", "specialCharacters": ["vBAMHuGY", "bG8WxChR", "i4Jte61k"]}}, {"field": "fVW996Dc", "validation": {"allowAllSpecialCharacters": false, "allowDigit": true, "allowLetter": false, "allowSpace": true, "allowUnicode": true, "avatarConfig": {"allowedPrefixes": ["MXU4uiE5", "6msyoQTu", "Mz9e0wSW"], "preferRegex": false, "regex": "oLN3kNPm"}, "blockedWord": ["zNFrMKgF", "JWjELwEa", "xH08rhlU"], "description": [{"language": "mcF2QzVH", "message": ["t8Gj6kSp", "Ndi1RFrY", "4nNGviWW"]}, {"language": "btr6pxXS", "message": ["S5uowPI4", "hZKBPSyb", "1wNt4Y7r"]}, {"language": "RJIMXLmT", "message": ["DnnbN1wJ", "v4UqNVm7", "St4wisF8"]}], "isCustomRegex": false, "letterCase": "8ROFnyTH", "maxLength": 47, "maxRepeatingAlphaNum": 90, "maxRepeatingSpecialCharacter": 97, "minCharType": 57, "minLength": 96, "regex": "aPVEcWrH", "specialCharacterLocation": "lJtePlvB", "specialCharacters": ["e7AQQEcq", "QgxoIszO", "zp6D7ATn"]}}, {"field": "m1OGyJmH", "validation": {"allowAllSpecialCharacters": true, "allowDigit": true, "allowLetter": false, "allowSpace": true, "allowUnicode": false, "avatarConfig": {"allowedPrefixes": ["6J869G46", "bDvfkEiB", "NuWUHW5e"], "preferRegex": true, "regex": "1Oj3mRgv"}, "blockedWord": ["BglOMjf6", "dAsMmjXN", "ju2wvGZd"], "description": [{"language": "Co2iIpwG", "message": ["LykbNiKU", "XOczyNmq", "ewutQLoc"]}, {"language": "scFrdisl", "message": ["HCY5jZvZ", "TEZmaohI", "n01ik8VV"]}, {"language": "PKd4TNfk", "message": ["FUpReo2O", "vztvIpTG", "KtgDA9Ju"]}], "isCustomRegex": false, "letterCase": "gN8Hzzm6", "maxLength": 18, "maxRepeatingAlphaNum": 32, "maxRepeatingSpecialCharacter": 82, "minCharType": 73, "minLength": 35, "regex": "qg4kPIyh", "specialCharacterLocation": "XpsIyvJc", "specialCharacters": ["gaTpGAoP", "7oxk17br", "nBPC7YY0"]}}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateInputValidations \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 109 'AdminUpdateInputValidations' test.out

#- 110 AdminResetInputValidations
$CLI_EXE \
    --sn iam \
    --op AdminResetInputValidations \
    --field 'UVfgNzZ0' \
    > test.out 2>&1
eval_tap $? 110 'AdminResetInputValidations' test.out

#- 111 ListAdminsV3
$CLI_EXE \
    --sn iam \
    --op ListAdminsV3 \
    --namespace $AB_NAMESPACE \
    --after 'draY1dxy' \
    --before 'PSc8WKOQ' \
    --limit '73' \
    > test.out 2>&1
eval_tap $? 111 'ListAdminsV3' test.out

#- 112 AdminGetAgeRestrictionStatusV3
$CLI_EXE \
    --sn iam \
    --op AdminGetAgeRestrictionStatusV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 112 'AdminGetAgeRestrictionStatusV3' test.out

#- 113 AdminUpdateAgeRestrictionConfigV3
# body param: body
echo '{"ageRestriction": 53, "enable": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateAgeRestrictionConfigV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 113 'AdminUpdateAgeRestrictionConfigV3' test.out

#- 114 AdminGetListCountryAgeRestrictionV3
$CLI_EXE \
    --sn iam \
    --op AdminGetListCountryAgeRestrictionV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 114 'AdminGetListCountryAgeRestrictionV3' test.out

#- 115 AdminUpdateCountryAgeRestrictionV3
# body param: body
echo '{"ageRestriction": 1}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateCountryAgeRestrictionV3 \
    --countryCode 'Lz9ciIF1' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 115 'AdminUpdateCountryAgeRestrictionV3' test.out

#- 116 AdminGetBannedUsersV3
$CLI_EXE \
    --sn iam \
    --op AdminGetBannedUsersV3 \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --banType 'COT7u0BK' \
    --limit '32' \
    --offset '100' \
    > test.out 2>&1
eval_tap $? 116 'AdminGetBannedUsersV3' test.out

#- 117 AdminBanUserBulkV3
# body param: body
echo '{"ban": "OZAK6aCR", "comment": "oiZZnt07", "endDate": "TrerYYem", "reason": "iHsfL6kX", "skipNotif": true, "userIds": ["EAzvNBqm", "pb5rFkQH", "C095WniT"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBanUserBulkV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 117 'AdminBanUserBulkV3' test.out

#- 118 AdminUnbanUserBulkV3
# body param: body
echo '{"bans": [{"banId": "gasd8fCV", "userId": "bmq4sy7X"}, {"banId": "hhPjVMtf", "userId": "7Yf6jwZP"}, {"banId": "IkG0YF8s", "userId": "46jC2Lsl"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUnbanUserBulkV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 118 'AdminUnbanUserBulkV3' test.out

#- 119 AdminGetBansTypeWithNamespaceV3
$CLI_EXE \
    --sn iam \
    --op AdminGetBansTypeWithNamespaceV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 119 'AdminGetBansTypeWithNamespaceV3' test.out

#- 120 AdminGetClientsByNamespaceV3
$CLI_EXE \
    --sn iam \
    --op AdminGetClientsByNamespaceV3 \
    --namespace $AB_NAMESPACE \
    --clientId 'i4lH4J4H' \
    --clientName 'MbgWBnHC' \
    --clientType 'vN1zMRsX' \
    --limit '70' \
    --offset '48' \
    > test.out 2>&1
eval_tap $? 120 'AdminGetClientsByNamespaceV3' test.out

#- 121 AdminCreateClientV3
# body param: body
echo '{"audiences": ["SDZOhANY", "D8EEAB1b", "gKjZ6AEY"], "baseUri": "tyFr6Qft", "clientId": "epUdrFzF", "clientName": "RxWfZkMD", "clientPermissions": [{"action": 91, "resource": "9cSyqGQZ", "schedAction": 17, "schedCron": "ohayVzyv", "schedRange": ["hjLWauT7", "CVTkzu6Q", "Da8lydW8"]}, {"action": 66, "resource": "tTrwikWk", "schedAction": 78, "schedCron": "IeEE8Kc9", "schedRange": ["j7hOx7cZ", "yxaYBG6t", "wfLCxNHR"]}, {"action": 45, "resource": "tkRpKKL0", "schedAction": 12, "schedCron": "rass4gMk", "schedRange": ["dmUFvoGz", "MSLQqQq0", "O5J6z1qn"]}], "clientPlatform": "RdywSOft", "deletable": true, "description": "wcfMwkn2", "namespace": "KZstWIgl", "oauthAccessTokenExpiration": 89, "oauthAccessTokenExpirationTimeUnit": "8AQGtNNU", "oauthClientType": "ZAXGXFBe", "oauthRefreshTokenExpiration": 83, "oauthRefreshTokenExpirationTimeUnit": "wgd20NnR", "parentNamespace": "kQt305sA", "redirectUri": "dNkon4O6", "scopes": ["IXchHIiD", "iBUULG6X", "93NN2xij"], "secret": "n4Xw4KBD", "twoFactorEnabled": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminCreateClientV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 121 'AdminCreateClientV3' test.out

#- 122 AdminGetClientsbyNamespacebyIDV3
$CLI_EXE \
    --sn iam \
    --op AdminGetClientsbyNamespacebyIDV3 \
    --clientId 'u9tuYkV6' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 122 'AdminGetClientsbyNamespacebyIDV3' test.out

#- 123 AdminDeleteClientV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteClientV3 \
    --clientId 'xPXu5gwr' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 123 'AdminDeleteClientV3' test.out

#- 124 AdminUpdateClientV3
# body param: body
echo '{"audiences": ["UPaJcyo0", "7PEGt5C3", "5rbRT23Z"], "baseUri": "bDcXxHEN", "clientName": "iF5X6vDi", "clientPermissions": [{"action": 29, "resource": "QqMppGNl", "schedAction": 27, "schedCron": "SMM7waty", "schedRange": ["B9NN9Fp5", "v739on03", "m8cS1c9D"]}, {"action": 63, "resource": "8dfgqN6s", "schedAction": 40, "schedCron": "nBpbSUm3", "schedRange": ["6IcsBR84", "peuDmyPX", "FekC9tib"]}, {"action": 100, "resource": "LY7Rzyxv", "schedAction": 30, "schedCron": "EFUBWnoK", "schedRange": ["Z46EF6cK", "RGuBWaLJ", "xDIWWNLU"]}], "clientPlatform": "MyrX2hMx", "deletable": true, "description": "PZzVg5wF", "namespace": "SNBeavQq", "oauthAccessTokenExpiration": 1, "oauthAccessTokenExpirationTimeUnit": "WnuItJWt", "oauthRefreshTokenExpiration": 33, "oauthRefreshTokenExpirationTimeUnit": "kud3ya9o", "redirectUri": "2f8mif55", "scopes": ["4XNn8txg", "kW7xusor", "KAYw7lbJ"], "twoFactorEnabled": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateClientV3 \
    --clientId 'Xt1q0fa3' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 124 'AdminUpdateClientV3' test.out

#- 125 AdminUpdateClientPermissionV3
# body param: body
echo '{"permissions": [{"action": 28, "resource": "53pPsyGU"}, {"action": 19, "resource": "hdXTUgzm"}, {"action": 92, "resource": "WKZjwpMB"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateClientPermissionV3 \
    --clientId '9JC9ii2Y' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 125 'AdminUpdateClientPermissionV3' test.out

#- 126 AdminAddClientPermissionsV3
# body param: body
echo '{"permissions": [{"action": 76, "resource": "QSo3Xi7u"}, {"action": 39, "resource": "2QiD7iYu"}, {"action": 33, "resource": "vD9VJjbx"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddClientPermissionsV3 \
    --clientId 'QABsDLlo' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 126 'AdminAddClientPermissionsV3' test.out

#- 127 AdminDeleteClientPermissionV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteClientPermissionV3 \
    --action '88' \
    --clientId 'TG6Bxt4w' \
    --namespace $AB_NAMESPACE \
    --resource 'lkVsXhoB' \
    > test.out 2>&1
eval_tap $? 127 'AdminDeleteClientPermissionV3' test.out

#- 128 AdminGetConfigValueV3
$CLI_EXE \
    --sn iam \
    --op AdminGetConfigValueV3 \
    --configKey 'rqquDEfu' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 128 'AdminGetConfigValueV3' test.out

#- 129 AdminGetCountryListV3
$CLI_EXE \
    --sn iam \
    --op AdminGetCountryListV3 \
    --namespace $AB_NAMESPACE \
    --filterBlacklist 'true' \
    > test.out 2>&1
eval_tap $? 129 'AdminGetCountryListV3' test.out

#- 130 AdminGetCountryBlacklistV3
$CLI_EXE \
    --sn iam \
    --op AdminGetCountryBlacklistV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 130 'AdminGetCountryBlacklistV3' test.out

#- 131 AdminAddCountryBlacklistV3
# body param: body
echo '{"blacklist": ["VsrxGrQb", "Zxe8KsL1", "ffxC1KLe"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddCountryBlacklistV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 131 'AdminAddCountryBlacklistV3' test.out

#- 132 RetrieveAllThirdPartyLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op RetrieveAllThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 132 'RetrieveAllThirdPartyLoginPlatformCredentialV3' test.out

#- 133 RetrieveAllActiveThirdPartyLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op RetrieveAllActiveThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 133 'RetrieveAllActiveThirdPartyLoginPlatformCredentialV3' test.out

#- 134 RetrieveAllSSOLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op RetrieveAllSSOLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --limit '51' \
    --offset '84' \
    > test.out 2>&1
eval_tap $? 134 'RetrieveAllSSOLoginPlatformCredentialV3' test.out

#- 135 RetrieveThirdPartyLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op RetrieveThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'LIirGQpM' \
    > test.out 2>&1
eval_tap $? 135 'RetrieveThirdPartyLoginPlatformCredentialV3' test.out

#- 136 AddThirdPartyLoginPlatformCredentialV3
# body param: body
echo '{"ACSURL": "2yAU2A2t", "AWSCognitoRegion": "1lLbP0Qh", "AWSCognitoUserPool": "oGd4wAD2", "AllowedClients": ["fC1FL3sj", "0FD1PLUU", "IFXmwkz2"], "AppId": "W9nkb8Lo", "AuthorizationEndpoint": "ZC566sl4", "ClientId": "plXxbUk4", "Environment": "ai5q5Wy1", "FederationMetadataURL": "4ikYNNfj", "GenericOauthFlow": true, "IsActive": true, "Issuer": "DnGvkuQQ", "JWKSEndpoint": "FJ5LqpCb", "KeyID": "xmYPGlMg", "NetflixCertificates": {"encryptedPrivateKey": "lhaR7U35", "encryptedPrivateKeyName": "c7Sj0OgA", "publicCertificate": "nsCUsw7j", "publicCertificateName": "wXl1dnJe", "rootCertificate": "nuWDukID", "rootCertificateName": "tiTztayG"}, "OrganizationId": "w8hkDnDN", "PlatformName": "6babXLHQ", "RedirectUri": "GVWVXmzv", "RegisteredDomains": [{"affectedClientIDs": ["GdHpvQlT", "zsS7myhx", "NZOciwYq"], "domain": "322XGXj7", "namespaces": ["JTkUsrFJ", "qMvu9nbL", "rKkzloo8"], "roleId": "8LiEtAMQ"}, {"affectedClientIDs": ["MIeXHBMG", "JljYf6y5", "S13SKHTR"], "domain": "fuKb9eUq", "namespaces": ["J26KI6E3", "zjfn5Fak", "Dt1fWzIB"], "roleId": "YFGF6KKe"}, {"affectedClientIDs": ["A9en5mhS", "M2aWgrLe", "IAbNRyjm"], "domain": "t1HKhRCw", "namespaces": ["Qyoj3FyA", "U7vrVI8v", "tLktYTft"], "roleId": "tepdW3tO"}], "Secret": "dYn1FuNJ", "TeamID": "004qoWUz", "TokenAuthenticationType": "4abkayqW", "TokenClaimsMapping": {"EFpLBwQq": "ZZmq7jTk", "ezquXmt0": "UPpU4Ymn", "vZ7J98rj": "ljM8eGs7"}, "TokenEndpoint": "c4lOwPWC", "UserInfoEndpoint": "gQc13HDR", "UserInfoHTTPMethod": "RoCEy3sd", "scopes": ["mDfslSod", "kfo3JLue", "DKKNNZAq"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AddThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'WHfOfDqJ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 136 'AddThirdPartyLoginPlatformCredentialV3' test.out

#- 137 DeleteThirdPartyLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op DeleteThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'Pp9pjTPJ' \
    > test.out 2>&1
eval_tap $? 137 'DeleteThirdPartyLoginPlatformCredentialV3' test.out

#- 138 UpdateThirdPartyLoginPlatformCredentialV3
# body param: body
echo '{"ACSURL": "USAcalcd", "AWSCognitoRegion": "2taLx76U", "AWSCognitoUserPool": "OledhtNT", "AllowedClients": ["Y7Jj0IX3", "nVSSn3b8", "rHBSkiYn"], "AppId": "916c5SlJ", "AuthorizationEndpoint": "F8Z1YVVx", "ClientId": "a9Mu9gqq", "Environment": "yB6jw6TQ", "FederationMetadataURL": "oZOADXQB", "GenericOauthFlow": true, "IsActive": true, "Issuer": "Z8Yvip8U", "JWKSEndpoint": "SoSxAaIm", "KeyID": "GxaIDLoZ", "NetflixCertificates": {"encryptedPrivateKey": "jafssI7S", "encryptedPrivateKeyName": "HliY1Jvi", "publicCertificate": "Qnj1bchU", "publicCertificateName": "1vETo5dO", "rootCertificate": "ezbwKk9f", "rootCertificateName": "joo10pNb"}, "OrganizationId": "HSv80WHf", "PlatformName": "PuFP62zU", "RedirectUri": "kdavvvn2", "RegisteredDomains": [{"affectedClientIDs": ["6RbAhM1y", "hp6GlDwi", "TBd3U2g8"], "domain": "tMlLUs1A", "namespaces": ["CgzOiabk", "DLNPN5V1", "KLYYjkjQ"], "roleId": "H1IKOHOO"}, {"affectedClientIDs": ["cs3oL8fw", "djSoIMbt", "3ckbvFjA"], "domain": "aCPGvbns", "namespaces": ["4GAS1i1G", "xC4E0JX4", "YdqwuCOD"], "roleId": "p5RKyXfx"}, {"affectedClientIDs": ["oONJvMks", "tuzGMdah", "moezEL9F"], "domain": "tN1rysHM", "namespaces": ["x5FyblPz", "1U6E1Oyi", "y3DSB7Mt"], "roleId": "346GQIYO"}], "Secret": "kAR8987P", "TeamID": "V1Igg7tf", "TokenAuthenticationType": "kewmfdrM", "TokenClaimsMapping": {"FrUdBJCj": "icO5TbrW", "tEdSTF3W": "9jgCSLkV", "TbBhLfir": "bx4Hwue3"}, "TokenEndpoint": "RVRKSypw", "UserInfoEndpoint": "OJ7W6rpa", "UserInfoHTTPMethod": "pIK03GBY", "scopes": ["Z1RH3gou", "BZnQybE7", "tNTBDGVw"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op UpdateThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'AmpI54bq' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 138 'UpdateThirdPartyLoginPlatformCredentialV3' test.out

#- 139 UpdateThirdPartyLoginPlatformDomainV3
# body param: body
echo '{"affectedClientIDs": ["Q7cNN9D7", "0bu0xnrl", "aPPnfyqH"], "assignedNamespaces": ["ssCjV5gR", "7Mp8OhLP", "qkdwG7ds"], "domain": "E0dz379F", "roleId": "1Y7RiJi8"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op UpdateThirdPartyLoginPlatformDomainV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'zUODPFLr' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 139 'UpdateThirdPartyLoginPlatformDomainV3' test.out

#- 140 DeleteThirdPartyLoginPlatformDomainV3
# body param: body
echo '{"domain": "hN9U9901"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op DeleteThirdPartyLoginPlatformDomainV3 \
    --namespace $AB_NAMESPACE \
    --platformId '22SsrtKk' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 140 'DeleteThirdPartyLoginPlatformDomainV3' test.out

#- 141 RetrieveSSOLoginPlatformCredential
$CLI_EXE \
    --sn iam \
    --op RetrieveSSOLoginPlatformCredential \
    --namespace $AB_NAMESPACE \
    --platformId 'h3Hb0Y6G' \
    > test.out 2>&1
eval_tap $? 141 'RetrieveSSOLoginPlatformCredential' test.out

#- 142 AddSSOLoginPlatformCredential
# body param: body
echo '{"acsUrl": "oJFrDcC7", "apiKey": "y8LfIRtu", "appId": "cKeYzQHl", "federationMetadataUrl": "toYCEw34", "isActive": true, "redirectUri": "ujWKGKGi", "secret": "KeALqYsw", "ssoUrl": "WgJq61P0"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AddSSOLoginPlatformCredential \
    --namespace $AB_NAMESPACE \
    --platformId 'DtPhDdK4' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 142 'AddSSOLoginPlatformCredential' test.out

#- 143 DeleteSSOLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op DeleteSSOLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'RfNUuJgZ' \
    > test.out 2>&1
eval_tap $? 143 'DeleteSSOLoginPlatformCredentialV3' test.out

#- 144 UpdateSSOPlatformCredential
# body param: body
echo '{"acsUrl": "nISauqdz", "apiKey": "AG2xbtE7", "appId": "b9VRRmZy", "federationMetadataUrl": "sdGpQaUR", "isActive": true, "redirectUri": "wOdOPM33", "secret": "5nygajP7", "ssoUrl": "TLcsEbAN"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op UpdateSSOPlatformCredential \
    --namespace $AB_NAMESPACE \
    --platformId 'eqAvWA2I' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 144 'UpdateSSOPlatformCredential' test.out

#- 145 AdminListUserIDByPlatformUserIDsV3
# body param: body
echo '{"platformUserIds": ["3kPackha", "vgW0N5rU", "g733Dgfw"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminListUserIDByPlatformUserIDsV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'Wjyu8ZDS' \
    --rawPID 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 145 'AdminListUserIDByPlatformUserIDsV3' test.out

#- 146 AdminGetUserByPlatformUserIDV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserByPlatformUserIDV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'D4w0fLFO' \
    --platformUserId 'btKLfMBC' \
    > test.out 2>&1
eval_tap $? 146 'AdminGetUserByPlatformUserIDV3' test.out

#- 147 GetAdminUsersByRoleIdV3
$CLI_EXE \
    --sn iam \
    --op GetAdminUsersByRoleIdV3 \
    --namespace $AB_NAMESPACE \
    --roleId 'zozW4yXO' \
    --after '64' \
    --before '11' \
    --limit '58' \
    > test.out 2>&1
eval_tap $? 147 'GetAdminUsersByRoleIdV3' test.out

#- 148 AdminGetUserByEmailAddressV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserByEmailAddressV3 \
    --namespace $AB_NAMESPACE \
    --emailAddress 'T0ZGLvDm' \
    > test.out 2>&1
eval_tap $? 148 'AdminGetUserByEmailAddressV3' test.out

#- 149 AdminGetBulkUserBanV3
# body param: body
echo '{"bulkUserId": ["xS7OhNYi", "iawIeIVc", "unDcol1l"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminGetBulkUserBanV3 \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --banType '84ck8dac' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 149 'AdminGetBulkUserBanV3' test.out

#- 150 AdminListUserIDByUserIDsV3
# body param: body
echo '{"userIds": ["YbnT8dcS", "YyaKI1Wo", "MSTIBVXb"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminListUserIDByUserIDsV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 150 'AdminListUserIDByUserIDsV3' test.out

#- 151 AdminBulkGetUsersPlatform
# body param: body
echo '{"userIds": ["bzdkyJHl", "3AmiZFsY", "kek7HIg7"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBulkGetUsersPlatform \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 151 'AdminBulkGetUsersPlatform' test.out

#- 152 AdminInviteUserV3
# body param: body
echo '{"emailAddresses": ["IW4CheOv", "Si6YtuXa", "Df9OUCqr"], "isAdmin": false, "namespace": "NIM6qMMT", "roles": ["yeeG87Vd", "3UKZYGH3", "NCtV6kS3"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminInviteUserV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 152 'AdminInviteUserV3' test.out

#- 153 AdminQueryThirdPlatformLinkHistoryV3
$CLI_EXE \
    --sn iam \
    --op AdminQueryThirdPlatformLinkHistoryV3 \
    --namespace $AB_NAMESPACE \
    --limit '42' \
    --offset '6' \
    --platformUserId '1UHlBJKH' \
    --platformId 'q8i1dP3y' \
    > test.out 2>&1
eval_tap $? 153 'AdminQueryThirdPlatformLinkHistoryV3' test.out

#- 154 AdminListUsersV3
$CLI_EXE \
    --sn iam \
    --op AdminListUsersV3 \
    --namespace $AB_NAMESPACE \
    --limit '88' \
    --offset '26' \
    > test.out 2>&1
eval_tap $? 154 'AdminListUsersV3' test.out

#- 155 AdminSearchUserV3
$CLI_EXE \
    --sn iam \
    --op AdminSearchUserV3 \
    --namespace $AB_NAMESPACE \
    --by 'GSnJhVWC' \
    --endDate 'XOHh2wlI' \
    --includeTotal 'true' \
    --limit '10' \
    --offset '33' \
    --platformBy 'd0GIgbpt' \
    --platformId 'lZUWMVIC' \
    --query 'H2lOTf8v' \
    --startDate 'W6lWCdNJ' \
    --testAccount 'true' \
    > test.out 2>&1
eval_tap $? 155 'AdminSearchUserV3' test.out

#- 156 AdminGetBulkUserByEmailAddressV3
# body param: body
echo '{"listEmailAddressRequest": ["6YkDKTxH", "MxbN8qET", "WgmkkBpN"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminGetBulkUserByEmailAddressV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 156 'AdminGetBulkUserByEmailAddressV3' test.out

#- 157 AdminGetUserByUserIdV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserByUserIdV3 \
    --namespace $AB_NAMESPACE \
    --userId 'oRWP6jsJ' \
    > test.out 2>&1
eval_tap $? 157 'AdminGetUserByUserIdV3' test.out

#- 158 AdminUpdateUserV3
# body param: body
echo '{"avatarUrl": "hMPUSeVb", "country": "ryjDzQog", "dateOfBirth": "VSXaG7hC", "displayName": "NkzDp1To", "languageTag": "h9fyV0OV", "uniqueDisplayName": "SGFPrEXn", "userName": "kXclS2la"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserV3 \
    --namespace $AB_NAMESPACE \
    --userId '8UHIIqLL' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 158 'AdminUpdateUserV3' test.out

#- 159 AdminGetUserBanV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserBanV3 \
    --namespace $AB_NAMESPACE \
    --userId 'auJhdp83' \
    --activeOnly 'false' \
    --after '9ZqyThPo' \
    --before 'bwJouYCW' \
    --limit '29' \
    > test.out 2>&1
eval_tap $? 159 'AdminGetUserBanV3' test.out

#- 160 AdminBanUserV3
# body param: body
echo '{"ban": "CWlPbqAV", "comment": "W7x4Cfzm", "endDate": "QkJ5xwZl", "reason": "4T9N2CW4", "skipNotif": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBanUserV3 \
    --namespace $AB_NAMESPACE \
    --userId 'btiFI6A6' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 160 'AdminBanUserV3' test.out

#- 161 AdminUpdateUserBanV3
# body param: body
echo '{"enabled": false, "skipNotif": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserBanV3 \
    --banId 'f9MDSDLQ' \
    --namespace $AB_NAMESPACE \
    --userId 'YdAO1WGl' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 161 'AdminUpdateUserBanV3' test.out

#- 162 AdminSendVerificationCodeV3
# body param: body
echo '{"context": "wwd2lNHs", "emailAddress": "BmLfTNye", "languageTag": "i2O5RrsK"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminSendVerificationCodeV3 \
    --namespace $AB_NAMESPACE \
    --userId 'dCckaXrF' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 162 'AdminSendVerificationCodeV3' test.out

#- 163 AdminVerifyAccountV3
# body param: body
echo '{"Code": "qpSNornr", "ContactType": "TUNlpx2l", "LanguageTag": "kIx3Hcbp", "validateOnly": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminVerifyAccountV3 \
    --namespace $AB_NAMESPACE \
    --userId 'ovJOxJ4V' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 163 'AdminVerifyAccountV3' test.out

#- 164 GetUserVerificationCode
$CLI_EXE \
    --sn iam \
    --op GetUserVerificationCode \
    --namespace $AB_NAMESPACE \
    --userId 'GEM3sVDe' \
    > test.out 2>&1
eval_tap $? 164 'GetUserVerificationCode' test.out

#- 165 AdminGetUserDeletionStatusV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserDeletionStatusV3 \
    --namespace $AB_NAMESPACE \
    --userId 'fS0b6EbD' \
    > test.out 2>&1
eval_tap $? 165 'AdminGetUserDeletionStatusV3' test.out

#- 166 AdminUpdateUserDeletionStatusV3
# body param: body
echo '{"deletionDate": 53, "enabled": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserDeletionStatusV3 \
    --namespace $AB_NAMESPACE \
    --userId '0Jfbpz6T' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 166 'AdminUpdateUserDeletionStatusV3' test.out

#- 167 AdminUpgradeHeadlessAccountV3
# body param: body
echo '{"code": "0EDCPuvx", "country": "2x8FLBu3", "dateOfBirth": "K7mQRj7o", "displayName": "ccV8OoR2", "emailAddress": "9ddlqWcq", "password": "UZoWVSr7", "uniqueDisplayName": "9snzmJvx", "validateOnly": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpgradeHeadlessAccountV3 \
    --namespace $AB_NAMESPACE \
    --userId 'uZ4Tpy4A' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 167 'AdminUpgradeHeadlessAccountV3' test.out

#- 168 AdminDeleteUserInformationV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserInformationV3 \
    --namespace $AB_NAMESPACE \
    --userId 'empcZqJN' \
    > test.out 2>&1
eval_tap $? 168 'AdminDeleteUserInformationV3' test.out

#- 169 AdminGetUserLoginHistoriesV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserLoginHistoriesV3 \
    --namespace $AB_NAMESPACE \
    --userId 'fH5jugSL' \
    --after '0.23939295943572148' \
    --before '0.8802194845540593' \
    --limit '22' \
    > test.out 2>&1
eval_tap $? 169 'AdminGetUserLoginHistoriesV3' test.out

#- 170 AdminResetPasswordV3
# body param: body
echo '{"languageTag": "M3E24TWl", "newPassword": "1624y1s7", "oldPassword": "msLkXXmk"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminResetPasswordV3 \
    --namespace $AB_NAMESPACE \
    --userId 'N0cFoGQj' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 170 'AdminResetPasswordV3' test.out

#- 171 AdminUpdateUserPermissionV3
# body param: body
echo '{"Permissions": [{"Action": 36, "Resource": "UQg02qTZ", "SchedAction": 39, "SchedCron": "RaR9OXfX", "SchedRange": ["1hfnzaK2", "ZRgG78ez", "aWfu13JK"]}, {"Action": 68, "Resource": "ckzVHMjq", "SchedAction": 17, "SchedCron": "ctDSC53u", "SchedRange": ["nOIg6dmZ", "YvJNsXyr", "Ny3IGEpu"]}, {"Action": 60, "Resource": "zND7jNT7", "SchedAction": 50, "SchedCron": "5xJmhOQq", "SchedRange": ["x59Zkjl4", "3034kqdW", "moxBf89j"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserPermissionV3 \
    --namespace $AB_NAMESPACE \
    --userId 'bHy7lT5m' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 171 'AdminUpdateUserPermissionV3' test.out

#- 172 AdminAddUserPermissionsV3
# body param: body
echo '{"Permissions": [{"Action": 24, "Resource": "3rSKdP1y", "SchedAction": 69, "SchedCron": "TCWu9FtR", "SchedRange": ["yCQxIbR7", "TqSKWgwA", "tY3aujc6"]}, {"Action": 35, "Resource": "PnYmPB0K", "SchedAction": 0, "SchedCron": "iRU1eh6u", "SchedRange": ["iumW9X9J", "SperAR4W", "lExyKKYQ"]}, {"Action": 2, "Resource": "CkltljGj", "SchedAction": 76, "SchedCron": "NfNVFf4m", "SchedRange": ["gIUY4lRV", "NotSVO3t", "8iRnxhnG"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddUserPermissionsV3 \
    --namespace $AB_NAMESPACE \
    --userId 'CsxNlli1' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 172 'AdminAddUserPermissionsV3' test.out

#- 173 AdminDeleteUserPermissionBulkV3
# body param: body
echo '[{"Action": 10, "Resource": "1ohtT0E0"}, {"Action": 97, "Resource": "60xcEHbc"}, {"Action": 4, "Resource": "RHpgBMAo"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserPermissionBulkV3 \
    --namespace $AB_NAMESPACE \
    --userId '8dQcc7mj' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 173 'AdminDeleteUserPermissionBulkV3' test.out

#- 174 AdminDeleteUserPermissionV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserPermissionV3 \
    --action '21' \
    --namespace $AB_NAMESPACE \
    --resource 'xS56zZhh' \
    --userId 'JHePCt52' \
    > test.out 2>&1
eval_tap $? 174 'AdminDeleteUserPermissionV3' test.out

#- 175 AdminGetUserPlatformAccountsV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserPlatformAccountsV3 \
    --namespace $AB_NAMESPACE \
    --userId 'EuAPDDTv' \
    --after '0ENHHdUi' \
    --before 'm3jAYT7M' \
    --limit '23' \
    --platformId 'yECbaRAQ' \
    > test.out 2>&1
eval_tap $? 175 'AdminGetUserPlatformAccountsV3' test.out

#- 176 AdminGetListJusticePlatformAccounts
$CLI_EXE \
    --sn iam \
    --op AdminGetListJusticePlatformAccounts \
    --namespace $AB_NAMESPACE \
    --userId 'DhK24Owg' \
    > test.out 2>&1
eval_tap $? 176 'AdminGetListJusticePlatformAccounts' test.out

#- 177 AdminGetUserMapping
$CLI_EXE \
    --sn iam \
    --op AdminGetUserMapping \
    --namespace $AB_NAMESPACE \
    --targetNamespace 'Lmi74xBB' \
    --userId 'HkVMYobb' \
    > test.out 2>&1
eval_tap $? 177 'AdminGetUserMapping' test.out

#- 178 AdminCreateJusticeUser
$CLI_EXE \
    --sn iam \
    --op AdminCreateJusticeUser \
    --namespace $AB_NAMESPACE \
    --targetNamespace 'uf8OW9dY' \
    --userId 'ueLSi2SG' \
    > test.out 2>&1
eval_tap $? 178 'AdminCreateJusticeUser' test.out

#- 179 AdminLinkPlatformAccount
# body param: body
echo '{"platformId": "UlioFgUP", "platformUserId": "qMBRpbxL"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminLinkPlatformAccount \
    --namespace $AB_NAMESPACE \
    --userId 'EsIDrUma' \
    --skipConflict 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 179 'AdminLinkPlatformAccount' test.out

#- 180 AdminPlatformUnlinkV3
# body param: body
echo '{"platformNamespace": "vSoRmghL"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminPlatformUnlinkV3 \
    --namespace $AB_NAMESPACE \
    --platformId '2xVuIoVf' \
    --userId 'IfRhwvOl' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 180 'AdminPlatformUnlinkV3' test.out

#- 181 AdminPlatformLinkV3
$CLI_EXE \
    --sn iam \
    --op AdminPlatformLinkV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'ogEWJJpG' \
    --userId '4Pj40oh3' \
    --ticket 'WUWrc9nf' \
    > test.out 2>&1
eval_tap $? 181 'AdminPlatformLinkV3' test.out

#- 182 AdminDeleteUserLinkingHistoryByPlatformIDV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserLinkingHistoryByPlatformIDV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'IGerq0K2' \
    --userId 'ghl6hqOR' \
    > test.out 2>&1
eval_tap $? 182 'AdminDeleteUserLinkingHistoryByPlatformIDV3' test.out

#- 183 AdminGetThirdPartyPlatformTokenLinkStatusV3
$CLI_EXE \
    --sn iam \
    --op AdminGetThirdPartyPlatformTokenLinkStatusV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'd3OsVFbx' \
    --userId 'FTUCVeNe' \
    --platformToken '0NXIZqXU' \
    > test.out 2>&1
eval_tap $? 183 'AdminGetThirdPartyPlatformTokenLinkStatusV3' test.out

#- 184 AdminGetUserSinglePlatformAccount
$CLI_EXE \
    --sn iam \
    --op AdminGetUserSinglePlatformAccount \
    --namespace $AB_NAMESPACE \
    --platformId 'vl5oBmDP' \
    --userId 'icvO2JAJ' \
    > test.out 2>&1
eval_tap $? 184 'AdminGetUserSinglePlatformAccount' test.out

#- 185 AdminDeleteUserRolesV3
# body param: body
echo '["f3dmwIgX", "C3SpHpVY", "7hQ9IjUa"]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserRolesV3 \
    --namespace $AB_NAMESPACE \
    --userId 'X5wDZ2KI' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 185 'AdminDeleteUserRolesV3' test.out

#- 186 AdminSaveUserRoleV3
# body param: body
echo '[{"namespace": "loHqrz3k", "roleId": "VyEEHf9t"}, {"namespace": "pXQqUCzh", "roleId": "DqYdKIyS"}, {"namespace": "VzZWbIXN", "roleId": "joMEhExp"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminSaveUserRoleV3 \
    --namespace $AB_NAMESPACE \
    --userId 'AbUWUzJZ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 186 'AdminSaveUserRoleV3' test.out

#- 187 AdminAddUserRoleV3
$CLI_EXE \
    --sn iam \
    --op AdminAddUserRoleV3 \
    --namespace $AB_NAMESPACE \
    --roleId 'KcsW09E5' \
    --userId 'Ufk2GE5p' \
    > test.out 2>&1
eval_tap $? 187 'AdminAddUserRoleV3' test.out

#- 188 AdminDeleteUserRoleV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserRoleV3 \
    --namespace $AB_NAMESPACE \
    --roleId 'axFwQoVe' \
    --userId '7pikvUfK' \
    > test.out 2>&1
eval_tap $? 188 'AdminDeleteUserRoleV3' test.out

#- 189 AdminUpdateUserStatusV3
# body param: body
echo '{"enabled": false, "reason": "nCypWqcX"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserStatusV3 \
    --namespace $AB_NAMESPACE \
    --userId 'pFXkS4g8' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 189 'AdminUpdateUserStatusV3' test.out

#- 190 AdminTrustlyUpdateUserIdentity
# body param: body
echo '{"emailAddress": "3WeaUvXu", "password": "U4uAxIzy"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminTrustlyUpdateUserIdentity \
    --namespace $AB_NAMESPACE \
    --userId '7ArvwAIA' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 190 'AdminTrustlyUpdateUserIdentity' test.out

#- 191 AdminVerifyUserWithoutVerificationCodeV3
$CLI_EXE \
    --sn iam \
    --op AdminVerifyUserWithoutVerificationCodeV3 \
    --namespace $AB_NAMESPACE \
    --userId 'uTnH8wFY' \
    > test.out 2>&1
eval_tap $? 191 'AdminVerifyUserWithoutVerificationCodeV3' test.out

#- 192 AdminUpdateClientSecretV3
# body param: body
echo '{"newSecret": "J9zWzyaw"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateClientSecretV3 \
    --clientId 'aw9Vs7e1' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 192 'AdminUpdateClientSecretV3' test.out

#- 193 AdminGetRolesV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRolesV3 \
    --after 'v12VpQQZ' \
    --before 'JjqoxlUv' \
    --isWildcard 'true' \
    --limit '14' \
    > test.out 2>&1
eval_tap $? 193 'AdminGetRolesV3' test.out

#- 194 AdminCreateRoleV3
# body param: body
echo '{"adminRole": true, "deletable": true, "isWildcard": false, "managers": [{"displayName": "8ntDbOys", "namespace": "LBqo56Nm", "userId": "8fw85iKQ"}, {"displayName": "35gCdUbh", "namespace": "BlNr7HeN", "userId": "i0ecImLX"}, {"displayName": "v3NoTHQV", "namespace": "10vDqVK2", "userId": "m0tgK6V7"}], "members": [{"displayName": "b8MCgMyL", "namespace": "ljGSMGvA", "userId": "Mqj0TP7l"}, {"displayName": "uiKAyAEa", "namespace": "kp5IZEU8", "userId": "1MKas2UJ"}, {"displayName": "PTN6oJ4Z", "namespace": "5kIx3HZY", "userId": "iy4kOMNW"}], "permissions": [{"action": 22, "resource": "m3v1njnk", "schedAction": 80, "schedCron": "n2OAdQ9P", "schedRange": ["lg2Bm1Hs", "Wss8gyri", "w4OA8pAa"]}, {"action": 74, "resource": "ej5pqstC", "schedAction": 2, "schedCron": "0LkYcwbq", "schedRange": ["f0d2wmi1", "FErnBeb7", "7JbaMCCV"]}, {"action": 6, "resource": "tJtyxKRh", "schedAction": 88, "schedCron": "7CQA1fg2", "schedRange": ["Y3e43J1f", "RdmuArlX", "xqj3Jaka"]}], "roleName": "9XR7D7wf"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminCreateRoleV3 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 194 'AdminCreateRoleV3' test.out

#- 195 AdminGetRoleV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleV3 \
    --roleId 'zbyxeaaw' \
    > test.out 2>&1
eval_tap $? 195 'AdminGetRoleV3' test.out

#- 196 AdminDeleteRoleV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteRoleV3 \
    --roleId '7iyPePD0' \
    > test.out 2>&1
eval_tap $? 196 'AdminDeleteRoleV3' test.out

#- 197 AdminUpdateRoleV3
# body param: body
echo '{"deletable": false, "isWildcard": false, "roleName": "h0WymZa1"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateRoleV3 \
    --roleId 'pHjl0W7F' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 197 'AdminUpdateRoleV3' test.out

#- 198 AdminGetRoleAdminStatusV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleAdminStatusV3 \
    --roleId 'sP1QLEsT' \
    > test.out 2>&1
eval_tap $? 198 'AdminGetRoleAdminStatusV3' test.out

#- 199 AdminUpdateAdminRoleStatusV3
$CLI_EXE \
    --sn iam \
    --op AdminUpdateAdminRoleStatusV3 \
    --roleId 'KbH7V1Pv' \
    > test.out 2>&1
eval_tap $? 199 'AdminUpdateAdminRoleStatusV3' test.out

#- 200 AdminRemoveRoleAdminV3
$CLI_EXE \
    --sn iam \
    --op AdminRemoveRoleAdminV3 \
    --roleId 'VmpDWdD2' \
    > test.out 2>&1
eval_tap $? 200 'AdminRemoveRoleAdminV3' test.out

#- 201 AdminGetRoleManagersV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleManagersV3 \
    --roleId 'KucDUZsQ' \
    --after 'mIRK6uTz' \
    --before 'Nl6NgLOJ' \
    --limit '64' \
    > test.out 2>&1
eval_tap $? 201 'AdminGetRoleManagersV3' test.out

#- 202 AdminAddRoleManagersV3
# body param: body
echo '{"managers": [{"displayName": "OXgzxlAe", "namespace": "p9eJVVLH", "userId": "2QRS5Yo7"}, {"displayName": "Gov8EOjF", "namespace": "ODfSjPjS", "userId": "cQdoPCnM"}, {"displayName": "U8W4ZPbQ", "namespace": "8PNBsg2Z", "userId": "uQm19qFr"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddRoleManagersV3 \
    --roleId 'RJ1XMvQH' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 202 'AdminAddRoleManagersV3' test.out

#- 203 AdminRemoveRoleManagersV3
# body param: body
echo '{"managers": [{"displayName": "6XQsXFJr", "namespace": "UOLyDrY7", "userId": "BpaDfWul"}, {"displayName": "3ovKSGdt", "namespace": "nKsaRa9g", "userId": "8BGrScU6"}, {"displayName": "bo7ztDhR", "namespace": "vGeIEasn", "userId": "THiMIt67"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminRemoveRoleManagersV3 \
    --roleId 'n03iPWPf' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 203 'AdminRemoveRoleManagersV3' test.out

#- 204 AdminGetRoleMembersV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleMembersV3 \
    --roleId 'hrvWR18a' \
    --after 'ZOzHL2vX' \
    --before 'QfC1UUdN' \
    --limit '63' \
    > test.out 2>&1
eval_tap $? 204 'AdminGetRoleMembersV3' test.out

#- 205 AdminAddRoleMembersV3
# body param: body
echo '{"members": [{"displayName": "pZhwpUzM", "namespace": "hlZbqXiR", "userId": "18kXCNdv"}, {"displayName": "PpAE8s86", "namespace": "aNeNNtfT", "userId": "C92MPBAx"}, {"displayName": "0UMNhBWo", "namespace": "aBtADzUe", "userId": "FdqXveON"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddRoleMembersV3 \
    --roleId 'hxwjT3oj' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 205 'AdminAddRoleMembersV3' test.out

#- 206 AdminRemoveRoleMembersV3
# body param: body
echo '{"members": [{"displayName": "5lJezWcb", "namespace": "sJ3jVYyx", "userId": "gbW8Wcis"}, {"displayName": "y4pmbgGR", "namespace": "SPrncKmU", "userId": "kBvtYPGw"}, {"displayName": "reqLxUgJ", "namespace": "MCJKTyjH", "userId": "HsJmIjXQ"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminRemoveRoleMembersV3 \
    --roleId 'iqfWJ11Z' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 206 'AdminRemoveRoleMembersV3' test.out

#- 207 AdminUpdateRolePermissionsV3
# body param: body
echo '{"permissions": [{"action": 54, "resource": "VTUOxAVy", "schedAction": 74, "schedCron": "vronbuvW", "schedRange": ["nQPmiida", "mBRtsJlj", "JywGNSTP"]}, {"action": 3, "resource": "yvXj27us", "schedAction": 39, "schedCron": "WY32fiXA", "schedRange": ["ZhuhQPgQ", "djfSEKYM", "QCEF60Cv"]}, {"action": 55, "resource": "Emfd3Pn3", "schedAction": 12, "schedCron": "GTXnHb8x", "schedRange": ["DKNHeL92", "9WmhWsKg", "SmMLPQbh"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateRolePermissionsV3 \
    --roleId 'ZORGxFXc' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 207 'AdminUpdateRolePermissionsV3' test.out

#- 208 AdminAddRolePermissionsV3
# body param: body
echo '{"permissions": [{"action": 9, "resource": "73i7cahl", "schedAction": 52, "schedCron": "sKhlVu7L", "schedRange": ["Jbbr0hv0", "Q4jVud7W", "1VsZ6JMB"]}, {"action": 50, "resource": "jx6RopTH", "schedAction": 74, "schedCron": "Shs4Cn8G", "schedRange": ["Jz1GdwUI", "bHLrU2fB", "VbPbirM0"]}, {"action": 74, "resource": "lUTvZA4C", "schedAction": 13, "schedCron": "CG7qizZV", "schedRange": ["m9sOVAUy", "HNZsj6nm", "C58mw8uI"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddRolePermissionsV3 \
    --roleId '60gopXfD' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 208 'AdminAddRolePermissionsV3' test.out

#- 209 AdminDeleteRolePermissionsV3
# body param: body
echo '["UuWFdVl9", "ZqrOMqPs", "1Cx6eJto"]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDeleteRolePermissionsV3 \
    --roleId 'sXI9zSmb' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 209 'AdminDeleteRolePermissionsV3' test.out

#- 210 AdminDeleteRolePermissionV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteRolePermissionV3 \
    --action '48' \
    --resource '7jV533BT' \
    --roleId 'xvJfkFPj' \
    > test.out 2>&1
eval_tap $? 210 'AdminDeleteRolePermissionV3' test.out

#- 211 AdminGetMyUserV3
$CLI_EXE \
    --sn iam \
    --op AdminGetMyUserV3 \
    > test.out 2>&1
eval_tap $? 211 'AdminGetMyUserV3' test.out

#- 212 UserAuthenticationV3
$CLI_EXE \
    --sn iam \
    --op UserAuthenticationV3 \
    --client_id 'ShlCOdPE' \
    --extend_exp 'false' \
    --redirect_uri 'KbHhfdfu' \
    --password 'GA3iVSOZ' \
    --request_id '2VcXbHft' \
    --user_name 'iEQ0T9VQ' \
    > test.out 2>&1
eval_tap $? 212 'UserAuthenticationV3' test.out

#- 213 AuthenticationWithPlatformLinkV3
$CLI_EXE \
    --sn iam \
    --op AuthenticationWithPlatformLinkV3 \
    --extend_exp 'false' \
    --client_id 'pe8OhoST' \
    --linkingToken 'osswENru' \
    --password 'O5MQOd9L' \
    --username 'MeFJWByR' \
    > test.out 2>&1
eval_tap $? 213 'AuthenticationWithPlatformLinkV3' test.out

#- 214 GenerateTokenByNewHeadlessAccountV3
$CLI_EXE \
    --sn iam \
    --op GenerateTokenByNewHeadlessAccountV3 \
    --additionalData 'B9kb6JEK' \
    --extend_exp 'false' \
    --linkingToken 'nm0M0bLV' \
    > test.out 2>&1
eval_tap $? 214 'GenerateTokenByNewHeadlessAccountV3' test.out

#- 215 RequestOneTimeLinkingCodeV3
$CLI_EXE \
    --sn iam \
    --op RequestOneTimeLinkingCodeV3 \
    --platformId 'AtEkaqVz' \
    > test.out 2>&1
eval_tap $? 215 'RequestOneTimeLinkingCodeV3' test.out

#- 216 ValidateOneTimeLinkingCodeV3
$CLI_EXE \
    --sn iam \
    --op ValidateOneTimeLinkingCodeV3 \
    --oneTimeLinkCode '3WL2QJde' \
    > test.out 2>&1
eval_tap $? 216 'ValidateOneTimeLinkingCodeV3' test.out

#- 217 RequestTokenByOneTimeLinkCodeResponseV3
$CLI_EXE \
    --sn iam \
    --op RequestTokenByOneTimeLinkCodeResponseV3 \
    --additionalData 'DOFl6jUt' \
    --isTransient 'true' \
    --client_id 'iINVfgAO' \
    --oneTimeLinkCode 'Bx79rkIh' \
    > test.out 2>&1
eval_tap $? 217 'RequestTokenByOneTimeLinkCodeResponseV3' test.out

#- 218 GetCountryLocationV3
$CLI_EXE \
    --sn iam \
    --op GetCountryLocationV3 \
    > test.out 2>&1
eval_tap $? 218 'GetCountryLocationV3' test.out

#- 219 Logout
$CLI_EXE \
    --sn iam \
    --op Logout \
    > test.out 2>&1
eval_tap $? 219 'Logout' test.out

#- 220 RequestTokenExchangeCodeV3
$CLI_EXE \
    --sn iam \
    --op RequestTokenExchangeCodeV3 \
    --namespace $AB_NAMESPACE \
    --client_id 'hmEeZIJm' \
    > test.out 2>&1
eval_tap $? 220 'RequestTokenExchangeCodeV3' test.out

#- 221 AdminRetrieveUserThirdPartyPlatformTokenV3
$CLI_EXE \
    --sn iam \
    --op AdminRetrieveUserThirdPartyPlatformTokenV3 \
    --namespace $AB_NAMESPACE \
    --platformId '39OjjfL6' \
    --userId 'ghZbxSib' \
    > test.out 2>&1
eval_tap $? 221 'AdminRetrieveUserThirdPartyPlatformTokenV3' test.out

#- 222 RevokeUserV3
$CLI_EXE \
    --sn iam \
    --op RevokeUserV3 \
    --namespace $AB_NAMESPACE \
    --userId 'b9siDpcO' \
    --includeGameNamespace 'false' \
    > test.out 2>&1
eval_tap $? 222 'RevokeUserV3' test.out

#- 223 AuthorizeV3
$CLI_EXE \
    --sn iam \
    --op AuthorizeV3 \
    --codeChallenge 'tJb4lrSU' \
    --codeChallengeMethod 'S256' \
    --createHeadless 'true' \
    --oneTimeLinkCode 'RdvZVy3p' \
    --redirectUri 'ZPXKbwib' \
    --scope 'rERaAja3' \
    --state 'eIWE2FIZ' \
    --targetAuthPage 'maj0J2pF' \
    --useRedirectUriAsLoginUrlWhenLocked 'false' \
    --clientId 'ZWimndk4' \
    --responseType 'code' \
    > test.out 2>&1
eval_tap $? 223 'AuthorizeV3' test.out

#- 224 TokenIntrospectionV3
$CLI_EXE \
    --sn iam \
    --op TokenIntrospectionV3 \
    --token 'DtogBJL2' \
    > test.out 2>&1
eval_tap $? 224 'TokenIntrospectionV3' test.out

#- 225 GetJWKSV3
$CLI_EXE \
    --sn iam \
    --op GetJWKSV3 \
    > test.out 2>&1
eval_tap $? 225 'GetJWKSV3' test.out

#- 226 SendMFAAuthenticationCode
$CLI_EXE \
    --sn iam \
    --op SendMFAAuthenticationCode \
    --clientId 'TM9zNPjq' \
    --factor 'QiVqQs8x' \
    --mfaToken 'CmbI74OB' \
    > test.out 2>&1
eval_tap $? 226 'SendMFAAuthenticationCode' test.out

#- 227 Change2faMethod
$CLI_EXE \
    --sn iam \
    --op Change2faMethod \
    --factor 'y5nxhlsk' \
    --mfaToken 'OvDKgRb8' \
    > test.out 2>&1
eval_tap $? 227 'Change2faMethod' test.out

#- 228 Verify2faCode
$CLI_EXE \
    --sn iam \
    --op Verify2faCode \
    --code 'OYz7Evjd' \
    --factor 'acVHIUg8' \
    --mfaToken 'W5S18dru' \
    --rememberDevice 'false' \
    > test.out 2>&1
eval_tap $? 228 'Verify2faCode' test.out

#- 229 RetrieveUserThirdPartyPlatformTokenV3
$CLI_EXE \
    --sn iam \
    --op RetrieveUserThirdPartyPlatformTokenV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'IOVtRzhn' \
    --userId 'LgKdV7S9' \
    > test.out 2>&1
eval_tap $? 229 'RetrieveUserThirdPartyPlatformTokenV3' test.out

#- 230 AuthCodeRequestV3
$CLI_EXE \
    --sn iam \
    --op AuthCodeRequestV3 \
    --platformId 'Eqws06Pj' \
    --clientId 'P0lerxRj' \
    --redirectUri 'J3GqszGp' \
    --requestId 'xcZNZZFi' \
    > test.out 2>&1
eval_tap $? 230 'AuthCodeRequestV3' test.out

#- 231 PlatformTokenGrantV3
$CLI_EXE \
    --sn iam \
    --op PlatformTokenGrantV3 \
    --platformId 'vz0Rsvc5' \
    --additionalData 'P8nGd474' \
    --client_id 'pSEsnKAZ' \
    --createHeadless 'false' \
    --device_id 'ehkqfT06' \
    --macAddress 'JDOCypXk' \
    --platform_token 'iEPYkYwl' \
    --skipSetCookie 'false' \
    > test.out 2>&1
eval_tap $? 231 'PlatformTokenGrantV3' test.out

#- 232 GetRevocationListV3
$CLI_EXE \
    --sn iam \
    --op GetRevocationListV3 \
    > test.out 2>&1
eval_tap $? 232 'GetRevocationListV3' test.out

#- 233 TokenRevocationV3
$CLI_EXE \
    --sn iam \
    --op TokenRevocationV3 \
    --token 'EhOaQfoF' \
    > test.out 2>&1
eval_tap $? 233 'TokenRevocationV3' test.out

#- 234 SimultaneousLoginV3
$CLI_EXE \
    --sn iam \
    --op SimultaneousLoginV3 \
    --simultaneousPlatform 'pspc' \
    --simultaneousTicket 'ewsJMGSm' \
    --nativePlatform 'steam' \
    --nativePlatformTicket 'ptbW127B' \
    > test.out 2>&1
eval_tap $? 234 'SimultaneousLoginV3' test.out

#- 235 TokenGrantV3
$CLI_EXE \
    --sn iam \
    --op TokenGrantV3 \
    --additionalData '3lgwONrw' \
    --client_id 'eszFxk2K' \
    --code 'qBokdMuT' \
    --code_verifier 'zeNXtT6U' \
    --extendNamespace 'LtTxU0vC' \
    --extend_exp 'true' \
    --password 'UPau7PZt' \
    --redirect_uri 'tfa0hDA6' \
    --refresh_token 'F7sZ9k8x' \
    --username '3gxcyZ2R' \
    --grant_type 'urn:ietf:params:oauth:grant-type:extend_client_credentials' \
    > test.out 2>&1
eval_tap $? 235 'TokenGrantV3' test.out

#- 236 VerifyTokenV3
$CLI_EXE \
    --sn iam \
    --op VerifyTokenV3 \
    --token '4CXXhbxK' \
    > test.out 2>&1
eval_tap $? 236 'VerifyTokenV3' test.out

#- 237 PlatformAuthenticationV3
$CLI_EXE \
    --sn iam \
    --op PlatformAuthenticationV3 \
    --platformId '0SZ2eyK7' \
    --code 'xADgqBMU' \
    --error 'QU3KZQmV' \
    --openidAssocHandle 'sZlTKgWW' \
    --openidClaimedId 'R1sh7JX0' \
    --openidIdentity '8140euEn' \
    --openidMode 'LO1yc3R7' \
    --openidNs 'z1W2mWvj' \
    --openidOpEndpoint 'qpxHHJyB' \
    --openidResponseNonce 'c10hXoIW' \
    --openidReturnTo 'n0UEJFPE' \
    --openidSig 'Q6Th1Mzf' \
    --openidSigned 'QF9twJgG' \
    --state 'JJXyc6mI' \
    > test.out 2>&1
eval_tap $? 237 'PlatformAuthenticationV3' test.out

#- 238 PlatformTokenRefreshV3
$CLI_EXE \
    --sn iam \
    --op PlatformTokenRefreshV3 \
    --platformId 'kdM3KkOl' \
    --platform_token 'PNgDAu3J' \
    > test.out 2>&1
eval_tap $? 238 'PlatformTokenRefreshV3' test.out

#- 239 PublicGetInputValidations
$CLI_EXE \
    --sn iam \
    --op PublicGetInputValidations \
    --defaultOnEmpty 'true' \
    --languageCode 'wma0uKes' \
    > test.out 2>&1
eval_tap $? 239 'PublicGetInputValidations' test.out

#- 240 PublicGetInputValidationByField
$CLI_EXE \
    --sn iam \
    --op PublicGetInputValidationByField \
    --field 'gwL4m080' \
    > test.out 2>&1
eval_tap $? 240 'PublicGetInputValidationByField' test.out

#- 241 PublicGetCountryAgeRestrictionV3
$CLI_EXE \
    --sn iam \
    --op PublicGetCountryAgeRestrictionV3 \
    --countryCode 'bjcGr6uY' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 241 'PublicGetCountryAgeRestrictionV3' test.out

#- 242 PublicGetConfigValueV3
$CLI_EXE \
    --sn iam \
    --op PublicGetConfigValueV3 \
    --configKey 'X89OXJgR' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 242 'PublicGetConfigValueV3' test.out

#- 243 PublicGetCountryListV3
$CLI_EXE \
    --sn iam \
    --op PublicGetCountryListV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 243 'PublicGetCountryListV3' test.out

#- 244 RetrieveAllActiveThirdPartyLoginPlatformCredentialPublicV3
$CLI_EXE \
    --sn iam \
    --op RetrieveAllActiveThirdPartyLoginPlatformCredentialPublicV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 244 'RetrieveAllActiveThirdPartyLoginPlatformCredentialPublicV3' test.out

#- 245 RetrieveActiveOIDCClientsPublicV3
$CLI_EXE \
    --sn iam \
    --op RetrieveActiveOIDCClientsPublicV3 \
    --namespace $AB_NAMESPACE \
    --clientId 'HzRYBd5t' \
    > test.out 2>&1
eval_tap $? 245 'RetrieveActiveOIDCClientsPublicV3' test.out

#- 246 PublicListUserIDByPlatformUserIDsV3
# body param: body
echo '{"platformUserIds": ["nW7DSRIX", "mb9hpQby", "znBHs8LK"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicListUserIDByPlatformUserIDsV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'd1UuJJy1' \
    --rawPID 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 246 'PublicListUserIDByPlatformUserIDsV3' test.out

#- 247 PublicGetUserByPlatformUserIDV3
$CLI_EXE \
    --sn iam \
    --op PublicGetUserByPlatformUserIDV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'jRBemPBc' \
    --platformUserId 'ekxKuuMb' \
    > test.out 2>&1
eval_tap $? 247 'PublicGetUserByPlatformUserIDV3' test.out

#- 248 PublicGetAsyncStatus
$CLI_EXE \
    --sn iam \
    --op PublicGetAsyncStatus \
    --namespace $AB_NAMESPACE \
    --requestId 'So6jrTiw' \
    > test.out 2>&1
eval_tap $? 248 'PublicGetAsyncStatus' test.out

#- 249 PublicSearchUserV3
$CLI_EXE \
    --sn iam \
    --op PublicSearchUserV3 \
    --namespace $AB_NAMESPACE \
    --by 'om1TYUMq' \
    --limit '86' \
    --offset '49' \
    --platformBy 'neiVIA2N' \
    --platformId 'iow98Vjl' \
    --query 'erYEcfjP' \
    > test.out 2>&1
eval_tap $? 249 'PublicSearchUserV3' test.out

#- 250 PublicCreateUserV3
# body param: body
echo '{"PasswordMD5Sum": "Q00YKBkz", "acceptedPolicies": [{"isAccepted": true, "localizedPolicyVersionId": "04eorCt8", "policyId": "a63a7cAE", "policyVersionId": "LDOk6aju"}, {"isAccepted": false, "localizedPolicyVersionId": "OP6FEhua", "policyId": "wdraBiQC", "policyVersionId": "pPmNbwon"}, {"isAccepted": true, "localizedPolicyVersionId": "NM8Ia514", "policyId": "dqD95uQ4", "policyVersionId": "d9QyA54R"}], "authType": "aD6P3WIS", "code": "6qJHMoTq", "country": "x9lXa6yf", "dateOfBirth": "pmbxmwI9", "displayName": "sLrQ92oW", "emailAddress": "Sgt2aNYR", "password": "vXvvHAMf", "reachMinimumAge": false, "uniqueDisplayName": "MUqDTBfX"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicCreateUserV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 250 'PublicCreateUserV3' test.out

#- 251 CheckUserAvailability
$CLI_EXE \
    --sn iam \
    --op CheckUserAvailability \
    --namespace $AB_NAMESPACE \
    --field 'L2aYGfKL' \
    --query 'fBq3aPIF' \
    > test.out 2>&1
eval_tap $? 251 'CheckUserAvailability' test.out

#- 252 PublicBulkGetUsers
# body param: body
echo '{"userIds": ["eyS9eaUk", "FJfOwedf", "FyHjGkhh"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicBulkGetUsers \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 252 'PublicBulkGetUsers' test.out

#- 253 PublicSendRegistrationCode
# body param: body
echo '{"emailAddress": "zYhZb67k", "languageTag": "3mhTkbKe"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicSendRegistrationCode \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 253 'PublicSendRegistrationCode' test.out

#- 254 PublicVerifyRegistrationCode
# body param: body
echo '{"code": "pU7kDmgx", "emailAddress": "UnsPqivV"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicVerifyRegistrationCode \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 254 'PublicVerifyRegistrationCode' test.out

#- 255 PublicForgotPasswordV3
# body param: body
echo '{"emailAddress": "ssXHIImP", "languageTag": "4Kp3EbUk"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicForgotPasswordV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 255 'PublicForgotPasswordV3' test.out

#- 256 GetAdminInvitationV3
$CLI_EXE \
    --sn iam \
    --op GetAdminInvitationV3 \
    --invitationId 'Td9QA9fb' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 256 'GetAdminInvitationV3' test.out

#- 257 CreateUserFromInvitationV3
# body param: body
echo '{"PasswordMD5Sum": "Lgd6Q8Ve", "acceptedPolicies": [{"isAccepted": false, "localizedPolicyVersionId": "UOfBxH7j", "policyId": "tFuisC6N", "policyVersionId": "Uw8Bmpi6"}, {"isAccepted": true, "localizedPolicyVersionId": "n2f2FtNc", "policyId": "SRKEvh5y", "policyVersionId": "NB5TpECA"}, {"isAccepted": false, "localizedPolicyVersionId": "0AxWfz1K", "policyId": "PzaNlECw", "policyVersionId": "KXRrm1qu"}], "authType": "qyB3ZxcW", "code": "yUV5TQIU", "country": "ULhcM8rz", "dateOfBirth": "hZoGBTne", "displayName": "wDN4jxRt", "emailAddress": "06zMokgf", "password": "HBSk3MSK", "reachMinimumAge": true, "uniqueDisplayName": "UQFEP2z8"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op CreateUserFromInvitationV3 \
    --invitationId 'WI84Vc4p' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 257 'CreateUserFromInvitationV3' test.out

#- 258 UpdateUserV3
# body param: body
echo '{"avatarUrl": "JCAQ4oNQ", "country": "Dbw2jWxZ", "dateOfBirth": "VHoFyIhm", "displayName": "U1d437Bb", "languageTag": "UJwMnQZp", "uniqueDisplayName": "HONDQ8X8", "userName": "8HbtKzaU"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op UpdateUserV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 258 'UpdateUserV3' test.out

#- 259 PublicPartialUpdateUserV3
# body param: body
echo '{"avatarUrl": "cpMVgm4K", "country": "NjGnnAXw", "dateOfBirth": "0GYc7sz8", "displayName": "QSVsjq6X", "languageTag": "kGHQpD07", "uniqueDisplayName": "QRQE9Yba", "userName": "WMCoJsO2"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicPartialUpdateUserV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 259 'PublicPartialUpdateUserV3' test.out

#- 260 PublicSendVerificationCodeV3
# body param: body
echo '{"context": "2tkIGbcX", "emailAddress": "ANvGXIt4", "languageTag": "ddZctPrM"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicSendVerificationCodeV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 260 'PublicSendVerificationCodeV3' test.out

#- 261 PublicUserVerificationV3
# body param: body
echo '{"code": "Z2w0e809", "contactType": "t2FFEkHB", "languageTag": "lMgAzJKC", "validateOnly": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUserVerificationV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 261 'PublicUserVerificationV3' test.out

#- 262 PublicUpgradeHeadlessAccountV3
# body param: body
echo '{"code": "vLJvD6oV", "country": "Iklry0UC", "dateOfBirth": "rnOtgHV1", "displayName": "p4azNyGG", "emailAddress": "MBgVfCYa", "password": "EQHUi7zJ", "uniqueDisplayName": "XWXiZawS", "validateOnly": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpgradeHeadlessAccountV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 262 'PublicUpgradeHeadlessAccountV3' test.out

#- 263 PublicVerifyHeadlessAccountV3
# body param: body
echo '{"emailAddress": "yJ9zFrFc", "password": "c4PuVRU4"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicVerifyHeadlessAccountV3 \
    --namespace $AB_NAMESPACE \
    --needVerificationCode 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 263 'PublicVerifyHeadlessAccountV3' test.out

#- 264 PublicUpdatePasswordV3
# body param: body
echo '{"languageTag": "xqqdCuxY", "newPassword": "IlsdxWF2", "oldPassword": "ZKv9340X"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpdatePasswordV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 264 'PublicUpdatePasswordV3' test.out

#- 265 PublicCreateJusticeUser
$CLI_EXE \
    --sn iam \
    --op PublicCreateJusticeUser \
    --namespace $AB_NAMESPACE \
    --targetNamespace '7QISt0qQ' \
    > test.out 2>&1
eval_tap $? 265 'PublicCreateJusticeUser' test.out

#- 266 PublicPlatformLinkV3
$CLI_EXE \
    --sn iam \
    --op PublicPlatformLinkV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'x8y7fDCB' \
    --redirectUri 'XLtAO09r' \
    --ticket 'nyWtpFwY' \
    > test.out 2>&1
eval_tap $? 266 'PublicPlatformLinkV3' test.out

#- 267 PublicPlatformUnlinkV3
# body param: body
echo '{"platformNamespace": "bRO8ngl2"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicPlatformUnlinkV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'oTXApOLN' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 267 'PublicPlatformUnlinkV3' test.out

#- 268 PublicPlatformUnlinkAllV3
$CLI_EXE \
    --sn iam \
    --op PublicPlatformUnlinkAllV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'LdnrRkF3' \
    > test.out 2>&1
eval_tap $? 268 'PublicPlatformUnlinkAllV3' test.out

#- 269 PublicForcePlatformLinkV3
$CLI_EXE \
    --sn iam \
    --op PublicForcePlatformLinkV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'lW908v7p' \
    --ticket 'QCRQy56e' \
    > test.out 2>&1
eval_tap $? 269 'PublicForcePlatformLinkV3' test.out

#- 270 PublicWebLinkPlatform
$CLI_EXE \
    --sn iam \
    --op PublicWebLinkPlatform \
    --namespace $AB_NAMESPACE \
    --platformId 'ZbEP95uH' \
    --clientId 'iv1MjOqe' \
    --redirectUri 'zlu7WUub' \
    > test.out 2>&1
eval_tap $? 270 'PublicWebLinkPlatform' test.out

#- 271 PublicWebLinkPlatformEstablish
$CLI_EXE \
    --sn iam \
    --op PublicWebLinkPlatformEstablish \
    --namespace $AB_NAMESPACE \
    --platformId 'hEfBU7hb' \
    --code 'MvBX3EAc' \
    --state 'WobV0NLz' \
    > test.out 2>&1
eval_tap $? 271 'PublicWebLinkPlatformEstablish' test.out

#- 272 PublicProcessWebLinkPlatformV3
$CLI_EXE \
    --sn iam \
    --op PublicProcessWebLinkPlatformV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'sFBAU80e' \
    --code '0E6vilju' \
    --state 'cXuVU1Uy' \
    > test.out 2>&1
eval_tap $? 272 'PublicProcessWebLinkPlatformV3' test.out

#- 273 PublicGetUsersPlatformInfosV3
# body param: body
echo '{"platformId": "MphZMjJf", "userIds": ["AplJW2kn", "uXf8GG9m", "kxwEVXBY"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicGetUsersPlatformInfosV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 273 'PublicGetUsersPlatformInfosV3' test.out

#- 274 ResetPasswordV3
# body param: body
echo '{"code": "OnWK5zao", "emailAddress": "4qQhOJvj", "newPassword": "4VTW1Nxm"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op ResetPasswordV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 274 'ResetPasswordV3' test.out

#- 275 PublicGetUserByUserIdV3
eval_tap 0 275 'PublicGetUserByUserIdV3 # SKIP deprecated' test.out

#- 276 PublicGetUserBanHistoryV3
$CLI_EXE \
    --sn iam \
    --op PublicGetUserBanHistoryV3 \
    --namespace $AB_NAMESPACE \
    --userId 'ckmKbepa' \
    --activeOnly 'true' \
    --after 'SxDZGCXX' \
    --before 'AMGROVTR' \
    --limit '48' \
    > test.out 2>&1
eval_tap $? 276 'PublicGetUserBanHistoryV3' test.out

#- 277 PublicListUserAllPlatformAccountsDistinctV3
$CLI_EXE \
    --sn iam \
    --op PublicListUserAllPlatformAccountsDistinctV3 \
    --namespace $AB_NAMESPACE \
    --userId 'uinG83dG' \
    > test.out 2>&1
eval_tap $? 277 'PublicListUserAllPlatformAccountsDistinctV3' test.out

#- 278 PublicGetUserInformationV3
$CLI_EXE \
    --sn iam \
    --op PublicGetUserInformationV3 \
    --namespace $AB_NAMESPACE \
    --userId 'DEmfCcYf' \
    > test.out 2>&1
eval_tap $? 278 'PublicGetUserInformationV3' test.out

#- 279 PublicGetUserLoginHistoriesV3
$CLI_EXE \
    --sn iam \
    --op PublicGetUserLoginHistoriesV3 \
    --namespace $AB_NAMESPACE \
    --userId 'glWK3jhn' \
    --after '0.5305802696271582' \
    --before '0.06573473033062904' \
    --limit '27' \
    > test.out 2>&1
eval_tap $? 279 'PublicGetUserLoginHistoriesV3' test.out

#- 280 PublicGetUserPlatformAccountsV3
$CLI_EXE \
    --sn iam \
    --op PublicGetUserPlatformAccountsV3 \
    --namespace $AB_NAMESPACE \
    --userId 'POJOCIqx' \
    --after 'iyBMV8EF' \
    --before '0Wj3LgxA' \
    --limit '98' \
    --platformId '4k6YDhBJ' \
    > test.out 2>&1
eval_tap $? 280 'PublicGetUserPlatformAccountsV3' test.out

#- 281 PublicListJusticePlatformAccountsV3
$CLI_EXE \
    --sn iam \
    --op PublicListJusticePlatformAccountsV3 \
    --namespace $AB_NAMESPACE \
    --userId 'wJQCnCpT' \
    > test.out 2>&1
eval_tap $? 281 'PublicListJusticePlatformAccountsV3' test.out

#- 282 PublicLinkPlatformAccount
# body param: body
echo '{"platformId": "volwwMtS", "platformUserId": "TNLNJ2ON"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicLinkPlatformAccount \
    --namespace $AB_NAMESPACE \
    --userId 'bLZuubVE' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 282 'PublicLinkPlatformAccount' test.out

#- 283 PublicForceLinkPlatformWithProgression
# body param: body
echo '{"chosenNamespaces": ["pnUfdqoH", "oDungSWH", "gSOOe2QP"], "requestId": "VyaBQXTN"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicForceLinkPlatformWithProgression \
    --namespace $AB_NAMESPACE \
    --userId 'lva1FyaC' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 283 'PublicForceLinkPlatformWithProgression' test.out

#- 284 PublicGetPublisherUserV3
$CLI_EXE \
    --sn iam \
    --op PublicGetPublisherUserV3 \
    --namespace $AB_NAMESPACE \
    --userId 'OHgfzDcs' \
    > test.out 2>&1
eval_tap $? 284 'PublicGetPublisherUserV3' test.out

#- 285 PublicValidateUserByUserIDAndPasswordV3
$CLI_EXE \
    --sn iam \
    --op PublicValidateUserByUserIDAndPasswordV3 \
    --namespace $AB_NAMESPACE \
    --userId 'fOPsox6D' \
    --password 'mcjnYhB9' \
    > test.out 2>&1
eval_tap $? 285 'PublicValidateUserByUserIDAndPasswordV3' test.out

#- 286 PublicGetRolesV3
$CLI_EXE \
    --sn iam \
    --op PublicGetRolesV3 \
    --after '6R55bvMG' \
    --before 'unATsii2' \
    --isWildcard 'false' \
    --limit '72' \
    > test.out 2>&1
eval_tap $? 286 'PublicGetRolesV3' test.out

#- 287 PublicGetRoleV3
$CLI_EXE \
    --sn iam \
    --op PublicGetRoleV3 \
    --roleId 'VQTJjV2D' \
    > test.out 2>&1
eval_tap $? 287 'PublicGetRoleV3' test.out

#- 288 PublicGetMyUserV3
$CLI_EXE \
    --sn iam \
    --op PublicGetMyUserV3 \
    --includeAllPlatforms 'false' \
    > test.out 2>&1
eval_tap $? 288 'PublicGetMyUserV3' test.out

#- 289 PublicGetLinkHeadlessAccountToMyAccountConflictV3
$CLI_EXE \
    --sn iam \
    --op PublicGetLinkHeadlessAccountToMyAccountConflictV3 \
    --oneTimeLinkCode '6a4P3nz2' \
    > test.out 2>&1
eval_tap $? 289 'PublicGetLinkHeadlessAccountToMyAccountConflictV3' test.out

#- 290 LinkHeadlessAccountToMyAccountV3
# body param: body
echo '{"chosenNamespaces": ["hFq1Mcmq", "99k6o6ZL", "G8Xgczcw"], "oneTimeLinkCode": "lfrKKiXr"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op LinkHeadlessAccountToMyAccountV3 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 290 'LinkHeadlessAccountToMyAccountV3' test.out

#- 291 PublicSendVerificationLinkV3
# body param: body
echo '{"languageTag": "JllbLjcV"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicSendVerificationLinkV3 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 291 'PublicSendVerificationLinkV3' test.out

#- 292 PublicVerifyUserByLinkV3
$CLI_EXE \
    --sn iam \
    --op PublicVerifyUserByLinkV3 \
    --code 'gw6SMKgR' \
    > test.out 2>&1
eval_tap $? 292 'PublicVerifyUserByLinkV3' test.out

#- 293 PlatformAuthenticateSAMLV3Handler
$CLI_EXE \
    --sn iam \
    --op PlatformAuthenticateSAMLV3Handler \
    --platformId 'LBNsrXo7' \
    --code 'Qw10zep1' \
    --error 'mVqTOYE1' \
    --state 'QcRr6bMN' \
    > test.out 2>&1
eval_tap $? 293 'PlatformAuthenticateSAMLV3Handler' test.out

#- 294 LoginSSOClient
$CLI_EXE \
    --sn iam \
    --op LoginSSOClient \
    --platformId '2gFoTitN' \
    --payload 'TpZ3Lxnh' \
    > test.out 2>&1
eval_tap $? 294 'LoginSSOClient' test.out

#- 295 LogoutSSOClient
$CLI_EXE \
    --sn iam \
    --op LogoutSSOClient \
    --platformId 'ODxj1tDU' \
    > test.out 2>&1
eval_tap $? 295 'LogoutSSOClient' test.out

#- 296 RequestTargetTokenResponseV3
$CLI_EXE \
    --sn iam \
    --op RequestTargetTokenResponseV3 \
    --additionalData '2Ggz1Yi0' \
    --code '4LquzqvN' \
    > test.out 2>&1
eval_tap $? 296 'RequestTargetTokenResponseV3' test.out

#- 297 PlatformTokenRefreshV3Deprecate
eval_tap 0 297 'PlatformTokenRefreshV3Deprecate # SKIP deprecated' test.out

#- 298 AdminGetDevicesByUserV4
$CLI_EXE \
    --sn iam \
    --op AdminGetDevicesByUserV4 \
    --namespace $AB_NAMESPACE \
    --userId '20BZTLgs' \
    > test.out 2>&1
eval_tap $? 298 'AdminGetDevicesByUserV4' test.out

#- 299 AdminGetBannedDevicesV4
$CLI_EXE \
    --sn iam \
    --op AdminGetBannedDevicesV4 \
    --namespace $AB_NAMESPACE \
    --deviceType 't2XlfYan' \
    --endDate 'IhSURM3h' \
    --limit '52' \
    --offset '31' \
    --startDate 't2Fuvh82' \
    > test.out 2>&1
eval_tap $? 299 'AdminGetBannedDevicesV4' test.out

#- 300 AdminGetUserDeviceBansV4
$CLI_EXE \
    --sn iam \
    --op AdminGetUserDeviceBansV4 \
    --namespace $AB_NAMESPACE \
    --userId '2LxKaZrR' \
    > test.out 2>&1
eval_tap $? 300 'AdminGetUserDeviceBansV4' test.out

#- 301 AdminBanDeviceV4
# body param: body
echo '{"comment": "ffHaJqcP", "deviceId": "aE7V6I17", "deviceType": "RiO3S7KT", "enabled": false, "endDate": "NFaovL3h", "ext": {"ZwprHU5L": {}, "PHsJDeVD": {}, "Z4ZigAKK": {}}, "reason": "YT0YJvpf"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBanDeviceV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 301 'AdminBanDeviceV4' test.out

#- 302 AdminGetDeviceBanV4
$CLI_EXE \
    --sn iam \
    --op AdminGetDeviceBanV4 \
    --banId 'wROKz2lY' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 302 'AdminGetDeviceBanV4' test.out

#- 303 AdminUpdateDeviceBanV4
# body param: body
echo '{"enabled": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateDeviceBanV4 \
    --banId 'FWXyy5AP' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 303 'AdminUpdateDeviceBanV4' test.out

#- 304 AdminGenerateReportV4
$CLI_EXE \
    --sn iam \
    --op AdminGenerateReportV4 \
    --namespace $AB_NAMESPACE \
    --endDate 'YCtSmzkg' \
    --startDate 'laSBoWgh' \
    --deviceType 'PLHDfH0s' \
    > test.out 2>&1
eval_tap $? 304 'AdminGenerateReportV4' test.out

#- 305 AdminGetDeviceTypesV4
$CLI_EXE \
    --sn iam \
    --op AdminGetDeviceTypesV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 305 'AdminGetDeviceTypesV4' test.out

#- 306 AdminGetDeviceBansV4
$CLI_EXE \
    --sn iam \
    --op AdminGetDeviceBansV4 \
    --deviceId '1qKwyOJN' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 306 'AdminGetDeviceBansV4' test.out

#- 307 AdminDecryptDeviceV4
$CLI_EXE \
    --sn iam \
    --op AdminDecryptDeviceV4 \
    --deviceId 'qzhXQalG' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 307 'AdminDecryptDeviceV4' test.out

#- 308 AdminUnbanDeviceV4
$CLI_EXE \
    --sn iam \
    --op AdminUnbanDeviceV4 \
    --deviceId '3wfavUet' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 308 'AdminUnbanDeviceV4' test.out

#- 309 AdminGetUsersByDeviceV4
$CLI_EXE \
    --sn iam \
    --op AdminGetUsersByDeviceV4 \
    --deviceId 'P0GhqRpx' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 309 'AdminGetUsersByDeviceV4' test.out

#- 310 AdminCreateTestUsersV4
# body param: body
echo '{"count": 66}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminCreateTestUsersV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 310 'AdminCreateTestUsersV4' test.out

#- 311 AdminCreateUserV4
# body param: body
echo '{"acceptedPolicies": [{"isAccepted": true, "localizedPolicyVersionId": "TylUBcZ9", "policyId": "iXH0gWHy", "policyVersionId": "fo6ow6Si"}, {"isAccepted": false, "localizedPolicyVersionId": "Vt41HwW2", "policyId": "zbs0ZDn8", "policyVersionId": "Ais4zbxC"}, {"isAccepted": false, "localizedPolicyVersionId": "jdMIUOWj", "policyId": "izN7lMNL", "policyVersionId": "yZtd2xi7"}], "authType": "EMAILPASSWD", "code": "avGOXyPw", "country": "T554NEXY", "dateOfBirth": "kIwszQM6", "displayName": "JeVVDn0D", "emailAddress": "60i4EHqA", "password": "BRE2aeZ5", "passwordMD5Sum": "FQ8Fd8zg", "reachMinimumAge": true, "uniqueDisplayName": "3PdLfqnt", "username": "8YADag57"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminCreateUserV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 311 'AdminCreateUserV4' test.out

#- 312 AdminBulkUpdateUserAccountTypeV4
# body param: body
echo '{"testAccount": true, "userIds": ["lbbYUhVb", "RbMmIQfM", "KQDOP3cz"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBulkUpdateUserAccountTypeV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 312 'AdminBulkUpdateUserAccountTypeV4' test.out

#- 313 AdminBulkCheckValidUserIDV4
# body param: body
echo '{"userIds": ["U9APC3wa", "wQdnEzt2", "nzVaPh6I"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBulkCheckValidUserIDV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 313 'AdminBulkCheckValidUserIDV4' test.out

#- 314 AdminUpdateUserV4
# body param: body
echo '{"avatarUrl": "r95ZT1Ps", "country": "reBw0TjL", "dateOfBirth": "dVvsaYeJ", "displayName": "u5KjnIOQ", "languageTag": "TfHZ8NOw", "uniqueDisplayName": "JzTT9lzR", "userName": "YVGJku48"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserV4 \
    --namespace $AB_NAMESPACE \
    --userId '9Euwdvdb' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 314 'AdminUpdateUserV4' test.out

#- 315 AdminUpdateUserEmailAddressV4
# body param: body
echo '{"code": "d7o8HdOS", "emailAddress": "Bc8jCzis"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserEmailAddressV4 \
    --namespace $AB_NAMESPACE \
    --userId 'nHuq7IR9' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 315 'AdminUpdateUserEmailAddressV4' test.out

#- 316 AdminDisableUserMFAV4
$CLI_EXE \
    --sn iam \
    --op AdminDisableUserMFAV4 \
    --namespace $AB_NAMESPACE \
    --userId 'qq9GENPk' \
    > test.out 2>&1
eval_tap $? 316 'AdminDisableUserMFAV4' test.out

#- 317 AdminListUserRolesV4
$CLI_EXE \
    --sn iam \
    --op AdminListUserRolesV4 \
    --namespace $AB_NAMESPACE \
    --userId 'NJoUTKfy' \
    > test.out 2>&1
eval_tap $? 317 'AdminListUserRolesV4' test.out

#- 318 AdminUpdateUserRoleV4
# body param: body
echo '{"assignedNamespaces": ["2vbhLCFG", "FxQFDrqg", "ueZ86Ixl"], "roleId": "k0LYrOmk"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserRoleV4 \
    --namespace $AB_NAMESPACE \
    --userId 'Gpw3igUi' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 318 'AdminUpdateUserRoleV4' test.out

#- 319 AdminAddUserRoleV4
# body param: body
echo '{"assignedNamespaces": ["69u3WBcj", "N6takay4", "rL6ZEMvA"], "roleId": "VzfVyAut"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddUserRoleV4 \
    --namespace $AB_NAMESPACE \
    --userId '13OlggZb' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 319 'AdminAddUserRoleV4' test.out

#- 320 AdminRemoveUserRoleV4
# body param: body
echo '{"assignedNamespaces": ["9RZki6Y1", "VgRC82bN", "KiRHua40"], "roleId": "X1daq2T5"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminRemoveUserRoleV4 \
    --namespace $AB_NAMESPACE \
    --userId 'OEu5n6ry' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 320 'AdminRemoveUserRoleV4' test.out

#- 321 AdminGetRolesV4
$CLI_EXE \
    --sn iam \
    --op AdminGetRolesV4 \
    --adminRole 'true' \
    --isWildcard 'false' \
    --limit '82' \
    --offset '96' \
    > test.out 2>&1
eval_tap $? 321 'AdminGetRolesV4' test.out

#- 322 AdminCreateRoleV4
# body param: body
echo '{"adminRole": false, "deletable": true, "isWildcard": false, "roleName": "U2Vbz6Ip"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminCreateRoleV4 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 322 'AdminCreateRoleV4' test.out

#- 323 AdminGetRoleV4
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleV4 \
    --roleId 'ZGwln5lt' \
    > test.out 2>&1
eval_tap $? 323 'AdminGetRoleV4' test.out

#- 324 AdminDeleteRoleV4
$CLI_EXE \
    --sn iam \
    --op AdminDeleteRoleV4 \
    --roleId 'arXwlM5v' \
    > test.out 2>&1
eval_tap $? 324 'AdminDeleteRoleV4' test.out

#- 325 AdminUpdateRoleV4
# body param: body
echo '{"adminRole": true, "deletable": false, "isWildcard": false, "roleName": "ArOWLHIk"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateRoleV4 \
    --roleId 'LlYvaP5j' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 325 'AdminUpdateRoleV4' test.out

#- 326 AdminUpdateRolePermissionsV4
# body param: body
echo '{"permissions": [{"action": 78, "resource": "F0OR2dS3", "schedAction": 30, "schedCron": "7dfKQ3o3", "schedRange": ["niPcb5zV", "0qvfXalE", "mnlUxmL1"]}, {"action": 11, "resource": "IRFgC9Rx", "schedAction": 11, "schedCron": "HUlGJest", "schedRange": ["0huk7QPd", "AHQ8aVqS", "xIiVQSz4"]}, {"action": 80, "resource": "2qAIsz5R", "schedAction": 13, "schedCron": "WgZY9vgT", "schedRange": ["eJ59XIQq", "DkHMkJTN", "nAVOTubu"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateRolePermissionsV4 \
    --roleId 'bv0iwmtL' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 326 'AdminUpdateRolePermissionsV4' test.out

#- 327 AdminAddRolePermissionsV4
# body param: body
echo '{"permissions": [{"action": 64, "resource": "2nPeGLKc", "schedAction": 91, "schedCron": "SzqdgNsB", "schedRange": ["uREMMbPc", "FmtYksYY", "I6Vyy7yh"]}, {"action": 59, "resource": "z31xmPm5", "schedAction": 61, "schedCron": "b2hFedCP", "schedRange": ["tUNt0JYq", "g7uIGXcv", "ZgutxDhe"]}, {"action": 59, "resource": "oWeADEeq", "schedAction": 27, "schedCron": "qCPaP9Ef", "schedRange": ["Q7Ih6xYf", "pjd5omeG", "MRgLA3fW"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddRolePermissionsV4 \
    --roleId '219xz5mI' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 327 'AdminAddRolePermissionsV4' test.out

#- 328 AdminDeleteRolePermissionsV4
# body param: body
echo '["ipeOmbm2", "fWgpsEZw", "mjBsX82g"]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDeleteRolePermissionsV4 \
    --roleId 'hDLi5ZAe' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 328 'AdminDeleteRolePermissionsV4' test.out

#- 329 AdminListAssignedUsersV4
$CLI_EXE \
    --sn iam \
    --op AdminListAssignedUsersV4 \
    --roleId 'Y7TS5xhJ' \
    --after 'LUUBfO4e' \
    --before '83qzCw4i' \
    --limit '66' \
    > test.out 2>&1
eval_tap $? 329 'AdminListAssignedUsersV4' test.out

#- 330 AdminAssignUserToRoleV4
# body param: body
echo '{"assignedNamespaces": ["TaxB9Rvz", "dWhJkx3E", "TptJeFpX"], "namespace": "SlR5Zsx8", "userId": "rMXzWY5c"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAssignUserToRoleV4 \
    --roleId '9S4bp2xt' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 330 'AdminAssignUserToRoleV4' test.out

#- 331 AdminRevokeUserFromRoleV4
# body param: body
echo '{"namespace": "N83R6S47", "userId": "Bftt3Xq5"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminRevokeUserFromRoleV4 \
    --roleId 's9XH3928' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 331 'AdminRevokeUserFromRoleV4' test.out

#- 332 AdminInviteUserNewV4
# body param: body
echo '{"assignedNamespaces": ["05rbBo5Z", "hexPxk1C", "VUUy9phW"], "emailAddresses": ["a2RU6eQp", "ppzfMA7v", "hhBCKeln"], "isAdmin": false, "isNewStudio": true, "namespace": "V0p5204E", "roleId": "n4miT2nU"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminInviteUserNewV4 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 332 'AdminInviteUserNewV4' test.out

#- 333 AdminUpdateMyUserV4
# body param: body
echo '{"avatarUrl": "T6znsIk4", "country": "ckpkHIIB", "dateOfBirth": "n6cJPKO8", "displayName": "k0lSDPMr", "languageTag": "DBMMPOc6", "uniqueDisplayName": "rztskKNY", "userName": "k0RxGSNP"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateMyUserV4 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 333 'AdminUpdateMyUserV4' test.out

#- 334 AdminDisableMyAuthenticatorV4
$CLI_EXE \
    --sn iam \
    --op AdminDisableMyAuthenticatorV4 \
    > test.out 2>&1
eval_tap $? 334 'AdminDisableMyAuthenticatorV4' test.out

#- 335 AdminEnableMyAuthenticatorV4
$CLI_EXE \
    --sn iam \
    --op AdminEnableMyAuthenticatorV4 \
    --code 'cWkUW6qP' \
    > test.out 2>&1
eval_tap $? 335 'AdminEnableMyAuthenticatorV4' test.out

#- 336 AdminGenerateMyAuthenticatorKeyV4
$CLI_EXE \
    --sn iam \
    --op AdminGenerateMyAuthenticatorKeyV4 \
    > test.out 2>&1
eval_tap $? 336 'AdminGenerateMyAuthenticatorKeyV4' test.out

#- 337 AdminGetMyBackupCodesV4
eval_tap 0 337 'AdminGetMyBackupCodesV4 # SKIP deprecated' test.out

#- 338 AdminGenerateMyBackupCodesV4
eval_tap 0 338 'AdminGenerateMyBackupCodesV4 # SKIP deprecated' test.out

#- 339 AdminDisableMyBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op AdminDisableMyBackupCodesV4 \
    > test.out 2>&1
eval_tap $? 339 'AdminDisableMyBackupCodesV4' test.out

#- 340 AdminDownloadMyBackupCodesV4
eval_tap 0 340 'AdminDownloadMyBackupCodesV4 # SKIP deprecated' test.out

#- 341 AdminEnableMyBackupCodesV4
eval_tap 0 341 'AdminEnableMyBackupCodesV4 # SKIP deprecated' test.out

#- 342 AdminGetBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op AdminGetBackupCodesV4 \
    > test.out 2>&1
eval_tap $? 342 'AdminGetBackupCodesV4' test.out

#- 343 AdminGenerateBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op AdminGenerateBackupCodesV4 \
    > test.out 2>&1
eval_tap $? 343 'AdminGenerateBackupCodesV4' test.out

#- 344 AdminEnableBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op AdminEnableBackupCodesV4 \
    > test.out 2>&1
eval_tap $? 344 'AdminEnableBackupCodesV4' test.out

#- 345 AdminSendMyMFAEmailCodeV4
$CLI_EXE \
    --sn iam \
    --op AdminSendMyMFAEmailCodeV4 \
    > test.out 2>&1
eval_tap $? 345 'AdminSendMyMFAEmailCodeV4' test.out

#- 346 AdminDisableMyEmailV4
$CLI_EXE \
    --sn iam \
    --op AdminDisableMyEmailV4 \
    > test.out 2>&1
eval_tap $? 346 'AdminDisableMyEmailV4' test.out

#- 347 AdminEnableMyEmailV4
$CLI_EXE \
    --sn iam \
    --op AdminEnableMyEmailV4 \
    --code 'NNRhiPrq' \
    > test.out 2>&1
eval_tap $? 347 'AdminEnableMyEmailV4' test.out

#- 348 AdminGetMyEnabledFactorsV4
$CLI_EXE \
    --sn iam \
    --op AdminGetMyEnabledFactorsV4 \
    > test.out 2>&1
eval_tap $? 348 'AdminGetMyEnabledFactorsV4' test.out

#- 349 AdminMakeFactorMyDefaultV4
$CLI_EXE \
    --sn iam \
    --op AdminMakeFactorMyDefaultV4 \
    --factor 'fbhX0tXE' \
    > test.out 2>&1
eval_tap $? 349 'AdminMakeFactorMyDefaultV4' test.out

#- 350 AdminInviteUserV4
eval_tap 0 350 'AdminInviteUserV4 # SKIP deprecated' test.out

#- 351 PublicCreateTestUserV4
# body param: body
echo '{"acceptedPolicies": [{"isAccepted": false, "localizedPolicyVersionId": "HXgXVMfx", "policyId": "aGR9wG7N", "policyVersionId": "AHyBnUNC"}, {"isAccepted": true, "localizedPolicyVersionId": "UF8wxTDQ", "policyId": "9z7xCPVg", "policyVersionId": "quE2tTwU"}, {"isAccepted": false, "localizedPolicyVersionId": "OjapqqAK", "policyId": "pkgxv1zb", "policyVersionId": "in7lob0F"}], "authType": "EMAILPASSWD", "country": "21dwGngh", "dateOfBirth": "QD4CBvrE", "displayName": "UpfbJdHR", "emailAddress": "bSnZa5gh", "password": "rDnwrMuK", "passwordMD5Sum": "AFffuCvm", "uniqueDisplayName": "Pl2aNS59", "username": "Ks1bKF0G", "verified": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicCreateTestUserV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 351 'PublicCreateTestUserV4' test.out

#- 352 PublicCreateUserV4
# body param: body
echo '{"acceptedPolicies": [{"isAccepted": false, "localizedPolicyVersionId": "p7D1ek00", "policyId": "YscdOsn0", "policyVersionId": "0r1pjsHb"}, {"isAccepted": false, "localizedPolicyVersionId": "AD6lARde", "policyId": "ZFCtHM5T", "policyVersionId": "CGSCTbcs"}, {"isAccepted": false, "localizedPolicyVersionId": "jUi28qQG", "policyId": "c5CnX2xR", "policyVersionId": "6LPZMfC8"}], "authType": "EMAILPASSWD", "code": "DNBZDywe", "country": "yEIrkCvY", "dateOfBirth": "glcgSgpi", "displayName": "it6PYiOb", "emailAddress": "P7NDkS8M", "password": "ObH7TR56", "passwordMD5Sum": "gTgqncEW", "reachMinimumAge": true, "uniqueDisplayName": "xHHGW2hH", "username": "zNH2nmyB"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicCreateUserV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 352 'PublicCreateUserV4' test.out

#- 353 CreateUserFromInvitationV4
# body param: body
echo '{"acceptedPolicies": [{"isAccepted": true, "localizedPolicyVersionId": "74BxucrN", "policyId": "ZP8d9Lj5", "policyVersionId": "6bykDloS"}, {"isAccepted": false, "localizedPolicyVersionId": "1lx00cCq", "policyId": "IcYn1YIn", "policyVersionId": "UguAruO2"}, {"isAccepted": false, "localizedPolicyVersionId": "fp5d7NCI", "policyId": "jdASHzen", "policyVersionId": "NAQ3wGjr"}], "authType": "EMAILPASSWD", "code": "KjOsdXHC", "country": "uyFf0znq", "dateOfBirth": "dCEfzV82", "displayName": "fD7QBd9n", "emailAddress": "7O8nPjir", "password": "Amir6XyI", "passwordMD5Sum": "VS8uhIgN", "reachMinimumAge": true, "uniqueDisplayName": "YQH3ACqI", "username": "8ARjjeWa"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op CreateUserFromInvitationV4 \
    --invitationId 'mNsTSGOb' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 353 'CreateUserFromInvitationV4' test.out

#- 354 PublicUpdateUserV4
# body param: body
echo '{"avatarUrl": "1TS86LhX", "country": "CNLpuIGH", "dateOfBirth": "IexQOfGc", "displayName": "9sYJjlAO", "languageTag": "VK4btcm5", "uniqueDisplayName": "LOgEr6Ax", "userName": "jO8Ovcd7"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpdateUserV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 354 'PublicUpdateUserV4' test.out

#- 355 PublicUpdateUserEmailAddressV4
# body param: body
echo '{"code": "JEQVLeJH", "emailAddress": "MxqVqHlQ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpdateUserEmailAddressV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 355 'PublicUpdateUserEmailAddressV4' test.out

#- 356 PublicUpgradeHeadlessAccountWithVerificationCodeV4
# body param: body
echo '{"code": "0xgigr6x", "country": "GE5iFPja", "dateOfBirth": "GXisXgxj", "displayName": "7SpuAOxG", "emailAddress": "9tvBXjee", "password": "ucxmxyzB", "reachMinimumAge": false, "uniqueDisplayName": "LasZv8Km", "username": "Vr2ugdfY", "validateOnly": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpgradeHeadlessAccountWithVerificationCodeV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 356 'PublicUpgradeHeadlessAccountWithVerificationCodeV4' test.out

#- 357 PublicUpgradeHeadlessAccountV4
# body param: body
echo '{"emailAddress": "M2aXJ2es", "password": "CEmy651V", "username": "9zjq58D8"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpgradeHeadlessAccountV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 357 'PublicUpgradeHeadlessAccountV4' test.out

#- 358 PublicDisableMyAuthenticatorV4
$CLI_EXE \
    --sn iam \
    --op PublicDisableMyAuthenticatorV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 358 'PublicDisableMyAuthenticatorV4' test.out

#- 359 PublicEnableMyAuthenticatorV4
$CLI_EXE \
    --sn iam \
    --op PublicEnableMyAuthenticatorV4 \
    --namespace $AB_NAMESPACE \
    --code 'a8QzsQql' \
    > test.out 2>&1
eval_tap $? 359 'PublicEnableMyAuthenticatorV4' test.out

#- 360 PublicGenerateMyAuthenticatorKeyV4
$CLI_EXE \
    --sn iam \
    --op PublicGenerateMyAuthenticatorKeyV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 360 'PublicGenerateMyAuthenticatorKeyV4' test.out

#- 361 PublicGetMyBackupCodesV4
eval_tap 0 361 'PublicGetMyBackupCodesV4 # SKIP deprecated' test.out

#- 362 PublicGenerateMyBackupCodesV4
eval_tap 0 362 'PublicGenerateMyBackupCodesV4 # SKIP deprecated' test.out

#- 363 PublicDisableMyBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op PublicDisableMyBackupCodesV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 363 'PublicDisableMyBackupCodesV4' test.out

#- 364 PublicDownloadMyBackupCodesV4
eval_tap 0 364 'PublicDownloadMyBackupCodesV4 # SKIP deprecated' test.out

#- 365 PublicEnableMyBackupCodesV4
eval_tap 0 365 'PublicEnableMyBackupCodesV4 # SKIP deprecated' test.out

#- 366 PublicGetBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op PublicGetBackupCodesV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 366 'PublicGetBackupCodesV4' test.out

#- 367 PublicGenerateBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op PublicGenerateBackupCodesV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 367 'PublicGenerateBackupCodesV4' test.out

#- 368 PublicEnableBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op PublicEnableBackupCodesV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 368 'PublicEnableBackupCodesV4' test.out

#- 369 PublicRemoveTrustedDeviceV4
$CLI_EXE \
    --sn iam \
    --op PublicRemoveTrustedDeviceV4 \
    --namespace $AB_NAMESPACE \
    --device_token 'o2FdmYSY' \
    > test.out 2>&1
eval_tap $? 369 'PublicRemoveTrustedDeviceV4' test.out

#- 370 PublicSendMyMFAEmailCodeV4
$CLI_EXE \
    --sn iam \
    --op PublicSendMyMFAEmailCodeV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 370 'PublicSendMyMFAEmailCodeV4' test.out

#- 371 PublicDisableMyEmailV4
$CLI_EXE \
    --sn iam \
    --op PublicDisableMyEmailV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 371 'PublicDisableMyEmailV4' test.out

#- 372 PublicEnableMyEmailV4
$CLI_EXE \
    --sn iam \
    --op PublicEnableMyEmailV4 \
    --namespace $AB_NAMESPACE \
    --code 'lBWk4q4Z' \
    > test.out 2>&1
eval_tap $? 372 'PublicEnableMyEmailV4' test.out

#- 373 PublicGetMyEnabledFactorsV4
$CLI_EXE \
    --sn iam \
    --op PublicGetMyEnabledFactorsV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 373 'PublicGetMyEnabledFactorsV4' test.out

#- 374 PublicMakeFactorMyDefaultV4
$CLI_EXE \
    --sn iam \
    --op PublicMakeFactorMyDefaultV4 \
    --namespace $AB_NAMESPACE \
    --factor 'sMl1p1vP' \
    > test.out 2>&1
eval_tap $? 374 'PublicMakeFactorMyDefaultV4' test.out

#- 375 PublicGetUserPublicInfoByUserIdV4
$CLI_EXE \
    --sn iam \
    --op PublicGetUserPublicInfoByUserIdV4 \
    --namespace $AB_NAMESPACE \
    --userId 'f3LEzAWJ' \
    > test.out 2>&1
eval_tap $? 375 'PublicGetUserPublicInfoByUserIdV4' test.out

#- 376 PublicInviteUserV4
# body param: body
echo '{"additionalData": "Qj81sBt1", "emailAddress": "o7dKCPqO", "namespace": "W6p6zQPO", "namespaceDisplayName": "yqnY7e8S"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicInviteUserV4 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 376 'PublicInviteUserV4' test.out


# remove artifacts
rm -f "$CLI_TOKEN_FILE"
rm -f "$TEMP_JSON_INPUT"
rm -f "$TEMP_FILE_UPLOAD"

exit $EXIT_CODE