#!/usr/bin/env bash

# Copyright (c) 2021 AccelByte Inc. All Rights Reserved.
# This is licensed software from AccelByte Inc, for limitations
# and restrictions contact your company contract manager.

# This code is generated by tool. DO NOT EDIT.

# Meta:
# - random seed: 
# - template file: 

# Instructions:
# - Run the Justice SDK Mock Server first before running this script.

export AB_BASE_URL="http://127.0.0.1:8080"
export AB_CLIENT_ID="admin"
export AB_CLIENT_SECRET="admin"
export AB_NAMESPACE="test"
export AB_APP_NAME="UnitTest"

EXIT_CODE=0

eval_tap() {
  if [ $1 -eq 0 ]; then
    echo "ok $2 - $3"
  else
    EXIT_CODE=1
    echo "not ok $2 - $3"
    sed 's/^/# /g' $4
  fi
  rm -f $4
}

CLI_EXE="AccelByte.Sdk.Sample.Cli"
CLI_TOKEN_FILE="$(dirname "$(which $CLI_EXE)")/token.json"
TEMP_JSON_INPUT="input_json.json"
TEMP_FILE_UPLOAD="file_upload.bin"

echo "TAP version 13"
echo "1..435"

#- 1 Login
$CLI_EXE --op login --lt user --user user --pass user > test.out 2>&1
eval_tap $? 1 'Login' test.out

if [ $EXIT_CODE -ne 0 ]; then
  echo "Bail out! Login failed."
  exit $EXIT_CODE
fi

# echo "foo" > "$CLI_TOKEN_FILE"

#- 2 GetBansType
eval_tap 0 2 'GetBansType # SKIP deprecated' test.out

#- 3 GetListBanReason
eval_tap 0 3 'GetListBanReason # SKIP deprecated' test.out

#- 4 GetClients
eval_tap 0 4 'GetClients # SKIP deprecated' test.out

#- 5 CreateClient
eval_tap 0 5 'CreateClient # SKIP deprecated' test.out

#- 6 GetClient
eval_tap 0 6 'GetClient # SKIP deprecated' test.out

#- 7 UpdateClient
eval_tap 0 7 'UpdateClient # SKIP deprecated' test.out

#- 8 DeleteClient
eval_tap 0 8 'DeleteClient # SKIP deprecated' test.out

#- 9 UpdateClientPermission
eval_tap 0 9 'UpdateClientPermission # SKIP deprecated' test.out

#- 10 AddClientPermission
eval_tap 0 10 'AddClientPermission # SKIP deprecated' test.out

#- 11 DeleteClientPermission
eval_tap 0 11 'DeleteClientPermission # SKIP deprecated' test.out

#- 12 UpdateClientSecret
eval_tap 0 12 'UpdateClientSecret # SKIP deprecated' test.out

#- 13 GetClientsbyNamespace
eval_tap 0 13 'GetClientsbyNamespace # SKIP deprecated' test.out

#- 14 CreateClientByNamespace
eval_tap 0 14 'CreateClientByNamespace # SKIP deprecated' test.out

#- 15 DeleteClientByNamespace
eval_tap 0 15 'DeleteClientByNamespace # SKIP deprecated' test.out

#- 16 CreateUser
eval_tap 0 16 'CreateUser # SKIP deprecated' test.out

#- 17 GetAdminUsersByRoleID
eval_tap 0 17 'GetAdminUsersByRoleID # SKIP deprecated' test.out

#- 18 GetUserByLoginID
eval_tap 0 18 'GetUserByLoginID # SKIP deprecated' test.out

#- 19 GetUserByPlatformUserID
eval_tap 0 19 'GetUserByPlatformUserID # SKIP deprecated' test.out

#- 20 ForgotPassword
eval_tap 0 20 'ForgotPassword # SKIP deprecated' test.out

#- 21 GetUsersByLoginIds
eval_tap 0 21 'GetUsersByLoginIds # SKIP deprecated' test.out

#- 22 ResetPassword
eval_tap 0 22 'ResetPassword # SKIP deprecated' test.out

#- 23 SearchUser
eval_tap 0 23 'SearchUser # SKIP deprecated' test.out

#- 24 GetUserByUserID
eval_tap 0 24 'GetUserByUserID # SKIP deprecated' test.out

#- 25 UpdateUser
eval_tap 0 25 'UpdateUser # SKIP deprecated' test.out

#- 26 DeleteUser
eval_tap 0 26 'DeleteUser # SKIP deprecated' test.out

#- 27 BanUser
eval_tap 0 27 'BanUser # SKIP deprecated' test.out

#- 28 GetUserBanHistory
eval_tap 0 28 'GetUserBanHistory # SKIP deprecated' test.out

#- 29 DisableUserBan
eval_tap 0 29 'DisableUserBan # SKIP deprecated' test.out

#- 30 EnableUserBan
eval_tap 0 30 'EnableUserBan # SKIP deprecated' test.out

#- 31 ListCrossNamespaceAccountLink
eval_tap 0 31 'ListCrossNamespaceAccountLink # SKIP deprecated' test.out

#- 32 DisableUser
eval_tap 0 32 'DisableUser # SKIP deprecated' test.out

#- 33 EnableUser
eval_tap 0 33 'EnableUser # SKIP deprecated' test.out

#- 34 GetUserInformation
eval_tap 0 34 'GetUserInformation # SKIP deprecated' test.out

#- 35 DeleteUserInformation
eval_tap 0 35 'DeleteUserInformation # SKIP deprecated' test.out

#- 36 GetUserLoginHistories
eval_tap 0 36 'GetUserLoginHistories # SKIP deprecated' test.out

#- 37 UpdatePassword
eval_tap 0 37 'UpdatePassword # SKIP deprecated' test.out

#- 38 SaveUserPermission
eval_tap 0 38 'SaveUserPermission # SKIP deprecated' test.out

#- 39 AddUserPermission
eval_tap 0 39 'AddUserPermission # SKIP deprecated' test.out

#- 40 DeleteUserPermission
eval_tap 0 40 'DeleteUserPermission # SKIP deprecated' test.out

#- 41 GetUserPlatformAccounts
eval_tap 0 41 'GetUserPlatformAccounts # SKIP deprecated' test.out

#- 42 GetUserMapping
eval_tap 0 42 'GetUserMapping # SKIP deprecated' test.out

#- 43 GetUserJusticePlatformAccount
eval_tap 0 43 'GetUserJusticePlatformAccount # SKIP deprecated' test.out

#- 44 PlatformLink
eval_tap 0 44 'PlatformLink # SKIP deprecated' test.out

#- 45 PlatformUnlink
eval_tap 0 45 'PlatformUnlink # SKIP deprecated' test.out

#- 46 GetPublisherUser
eval_tap 0 46 'GetPublisherUser # SKIP deprecated' test.out

#- 47 SaveUserRoles
eval_tap 0 47 'SaveUserRoles # SKIP deprecated' test.out

#- 48 AddUserRole
eval_tap 0 48 'AddUserRole # SKIP deprecated' test.out

#- 49 DeleteUserRole
eval_tap 0 49 'DeleteUserRole # SKIP deprecated' test.out

#- 50 UpgradeHeadlessAccount
eval_tap 0 50 'UpgradeHeadlessAccount # SKIP deprecated' test.out

#- 51 UpgradeHeadlessAccountWithVerificationCode
eval_tap 0 51 'UpgradeHeadlessAccountWithVerificationCode # SKIP deprecated' test.out

#- 52 UserVerification
eval_tap 0 52 'UserVerification # SKIP deprecated' test.out

#- 53 SendVerificationCode
eval_tap 0 53 'SendVerificationCode # SKIP deprecated' test.out

#- 54 Authorization
eval_tap 0 54 'Authorization # SKIP deprecated' test.out

#- 55 GetJWKS
eval_tap 0 55 'GetJWKS # SKIP deprecated' test.out

#- 56 PlatformTokenRequestHandler
eval_tap 0 56 'PlatformTokenRequestHandler # SKIP deprecated' test.out

#- 57 RevokeUser
eval_tap 0 57 'RevokeUser # SKIP deprecated' test.out

#- 58 GetRevocationList
eval_tap 0 58 'GetRevocationList # SKIP deprecated' test.out

#- 59 RevokeToken
eval_tap 0 59 'RevokeToken # SKIP deprecated' test.out

#- 60 RevokeAUser
eval_tap 0 60 'RevokeAUser # SKIP deprecated' test.out

#- 61 TokenGrant
eval_tap 0 61 'TokenGrant # SKIP deprecated' test.out

#- 62 VerifyToken
eval_tap 0 62 'VerifyToken # SKIP deprecated' test.out

#- 63 GetRoles
eval_tap 0 63 'GetRoles # SKIP deprecated' test.out

#- 64 CreateRole
eval_tap 0 64 'CreateRole # SKIP deprecated' test.out

#- 65 GetRole
eval_tap 0 65 'GetRole # SKIP deprecated' test.out

#- 66 UpdateRole
eval_tap 0 66 'UpdateRole # SKIP deprecated' test.out

#- 67 DeleteRole
eval_tap 0 67 'DeleteRole # SKIP deprecated' test.out

#- 68 GetRoleAdminStatus
eval_tap 0 68 'GetRoleAdminStatus # SKIP deprecated' test.out

#- 69 SetRoleAsAdmin
eval_tap 0 69 'SetRoleAsAdmin # SKIP deprecated' test.out

#- 70 RemoveRoleAdmin
eval_tap 0 70 'RemoveRoleAdmin # SKIP deprecated' test.out

#- 71 GetRoleManagers
eval_tap 0 71 'GetRoleManagers # SKIP deprecated' test.out

#- 72 AddRoleManagers
eval_tap 0 72 'AddRoleManagers # SKIP deprecated' test.out

#- 73 RemoveRoleManagers
eval_tap 0 73 'RemoveRoleManagers # SKIP deprecated' test.out

#- 74 GetRoleMembers
eval_tap 0 74 'GetRoleMembers # SKIP deprecated' test.out

#- 75 AddRoleMembers
eval_tap 0 75 'AddRoleMembers # SKIP deprecated' test.out

#- 76 RemoveRoleMembers
eval_tap 0 76 'RemoveRoleMembers # SKIP deprecated' test.out

#- 77 UpdateRolePermissions
eval_tap 0 77 'UpdateRolePermissions # SKIP deprecated' test.out

#- 78 AddRolePermission
eval_tap 0 78 'AddRolePermission # SKIP deprecated' test.out

#- 79 DeleteRolePermission
eval_tap 0 79 'DeleteRolePermission # SKIP deprecated' test.out

#- 80 AdminGetAgeRestrictionStatusV2
eval_tap 0 80 'AdminGetAgeRestrictionStatusV2 # SKIP deprecated' test.out

#- 81 AdminUpdateAgeRestrictionConfigV2
eval_tap 0 81 'AdminUpdateAgeRestrictionConfigV2 # SKIP deprecated' test.out

#- 82 GetListCountryAgeRestriction
eval_tap 0 82 'GetListCountryAgeRestriction # SKIP deprecated' test.out

#- 83 UpdateCountryAgeRestriction
eval_tap 0 83 'UpdateCountryAgeRestriction # SKIP deprecated' test.out

#- 84 AdminSearchUsersV2
eval_tap 0 84 'AdminSearchUsersV2 # SKIP deprecated' test.out

#- 85 AdminGetUserByUserIdV2
eval_tap 0 85 'AdminGetUserByUserIdV2 # SKIP deprecated' test.out

#- 86 AdminUpdateUserV2
eval_tap 0 86 'AdminUpdateUserV2 # SKIP deprecated' test.out

#- 87 AdminBanUserV2
eval_tap 0 87 'AdminBanUserV2 # SKIP deprecated' test.out

#- 88 AdminGetUserBanV2
eval_tap 0 88 'AdminGetUserBanV2 # SKIP deprecated' test.out

#- 89 AdminDisableUserV2
eval_tap 0 89 'AdminDisableUserV2 # SKIP deprecated' test.out

#- 90 AdminEnableUserV2
eval_tap 0 90 'AdminEnableUserV2 # SKIP deprecated' test.out

#- 91 AdminResetPasswordV2
eval_tap 0 91 'AdminResetPasswordV2 # SKIP deprecated' test.out

#- 92 AdminDeletePlatformLinkV2
eval_tap 0 92 'AdminDeletePlatformLinkV2 # SKIP deprecated' test.out

#- 93 AdminPutUserRolesV2
eval_tap 0 93 'AdminPutUserRolesV2 # SKIP deprecated' test.out

#- 94 AdminCreateUserRolesV2
eval_tap 0 94 'AdminCreateUserRolesV2 # SKIP deprecated' test.out

#- 95 PublicGetCountryAgeRestriction
eval_tap 0 95 'PublicGetCountryAgeRestriction # SKIP deprecated' test.out

#- 96 PublicCreateUserV2
eval_tap 0 96 'PublicCreateUserV2 # SKIP deprecated' test.out

#- 97 PublicForgotPasswordV2
eval_tap 0 97 'PublicForgotPasswordV2 # SKIP deprecated' test.out

#- 98 PublicResetPasswordV2
eval_tap 0 98 'PublicResetPasswordV2 # SKIP deprecated' test.out

#- 99 PublicGetUserByUserIDV2
eval_tap 0 99 'PublicGetUserByUserIDV2 # SKIP deprecated' test.out

#- 100 PublicUpdateUserV2
eval_tap 0 100 'PublicUpdateUserV2 # SKIP deprecated' test.out

#- 101 PublicGetUserBan
eval_tap 0 101 'PublicGetUserBan # SKIP deprecated' test.out

#- 102 PublicUpdatePasswordV2
eval_tap 0 102 'PublicUpdatePasswordV2 # SKIP deprecated' test.out

#- 103 GetListJusticePlatformAccounts
eval_tap 0 103 'GetListJusticePlatformAccounts # SKIP deprecated' test.out

#- 104 PublicPlatformLinkV2
eval_tap 0 104 'PublicPlatformLinkV2 # SKIP deprecated' test.out

#- 105 PublicDeletePlatformLinkV2
eval_tap 0 105 'PublicDeletePlatformLinkV2 # SKIP deprecated' test.out

#- 106 AdminGetBansTypeV3
$CLI_EXE \
    --sn iam \
    --op AdminGetBansTypeV3 \
    > test.out 2>&1
eval_tap $? 106 'AdminGetBansTypeV3' test.out

#- 107 AdminGetListBanReasonV3
$CLI_EXE \
    --sn iam \
    --op AdminGetListBanReasonV3 \
    > test.out 2>&1
eval_tap $? 107 'AdminGetListBanReasonV3' test.out

#- 108 AdminListClientAvailablePermissions
$CLI_EXE \
    --sn iam \
    --op AdminListClientAvailablePermissions \
    --excludePermissions 'false' \
    > test.out 2>&1
eval_tap $? 108 'AdminListClientAvailablePermissions' test.out

#- 109 AdminUpdateAvailablePermissionsByModule
# body param: body
echo '{"modules": [{"docLink": "lYcYqMxH", "groups": [{"group": "eruALURI", "groupId": "KreMpMGo", "permissions": [{"allowedActions": [57, 94, 11], "resource": "7QYn1BmE"}, {"allowedActions": [44, 4, 36], "resource": "hGGKTztF"}, {"allowedActions": [79, 99, 84], "resource": "t4B8mwjh"}]}, {"group": "szfm0EQu", "groupId": "6taXdcSB", "permissions": [{"allowedActions": [23, 97, 41], "resource": "9OA9sV1f"}, {"allowedActions": [14, 90, 88], "resource": "c7sXVYJB"}, {"allowedActions": [63, 89, 92], "resource": "Ge1QhRT3"}]}, {"group": "16o1DjH9", "groupId": "wMW5FnaW", "permissions": [{"allowedActions": [16, 60, 23], "resource": "0Ysp8wco"}, {"allowedActions": [97, 1, 19], "resource": "KKE3iky1"}, {"allowedActions": [21, 8, 57], "resource": "ZOLr5uAv"}]}], "module": "OCSximys", "moduleId": "OChQAE8l"}, {"docLink": "Rs70kfsd", "groups": [{"group": "PFwAzYva", "groupId": "RusUfKmv", "permissions": [{"allowedActions": [8, 65, 71], "resource": "WgCRAH1G"}, {"allowedActions": [58, 19, 22], "resource": "Qeg4Of6q"}, {"allowedActions": [66, 35, 76], "resource": "KTL8ljPC"}]}, {"group": "7lDpl513", "groupId": "ghY6RJRg", "permissions": [{"allowedActions": [80, 56, 14], "resource": "ZLRf5EUt"}, {"allowedActions": [41, 60, 75], "resource": "lzQaG6TB"}, {"allowedActions": [8, 31, 0], "resource": "swLMjy9f"}]}, {"group": "nLhFTgYZ", "groupId": "G5zCgLpd", "permissions": [{"allowedActions": [54, 24, 6], "resource": "tJwwg21o"}, {"allowedActions": [80, 93, 90], "resource": "un2eO1KV"}, {"allowedActions": [20, 4, 43], "resource": "w62QZ6ZJ"}]}], "module": "HA8cgufq", "moduleId": "nzDkrfnu"}, {"docLink": "Gd5wZNcI", "groups": [{"group": "aKHxt47w", "groupId": "zNAuoBwk", "permissions": [{"allowedActions": [85, 59, 40], "resource": "P4clIqdd"}, {"allowedActions": [71, 95, 35], "resource": "dO83NXiT"}, {"allowedActions": [58, 20, 53], "resource": "WKF1NaO6"}]}, {"group": "IsQkp1ie", "groupId": "FkAHCJYx", "permissions": [{"allowedActions": [81, 23, 46], "resource": "xD3G4HOd"}, {"allowedActions": [31, 70, 49], "resource": "XHPsMBRn"}, {"allowedActions": [33, 57, 46], "resource": "bNP59Mqk"}]}, {"group": "v3KOaMsR", "groupId": "sJCmNxE2", "permissions": [{"allowedActions": [59, 9, 46], "resource": "NeiZZZlc"}, {"allowedActions": [9, 86, 9], "resource": "LSeNaLE9"}, {"allowedActions": [62, 34, 30], "resource": "9KwFH1OD"}]}], "module": "7fCqK8Po", "moduleId": "hgnHcFex"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateAvailablePermissionsByModule \
    --forceDelete 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 109 'AdminUpdateAvailablePermissionsByModule' test.out

#- 110 AdminDeleteConfigPermissionsByGroup
# body param: body
echo '{"groupId": "fRiWHJPF", "moduleId": "YsK201WY"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDeleteConfigPermissionsByGroup \
    --forceDelete 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 110 'AdminDeleteConfigPermissionsByGroup' test.out

#- 111 AdminListClientTemplates
$CLI_EXE \
    --sn iam \
    --op AdminListClientTemplates \
    > test.out 2>&1
eval_tap $? 111 'AdminListClientTemplates' test.out

#- 112 AdminGetInputValidations
$CLI_EXE \
    --sn iam \
    --op AdminGetInputValidations \
    > test.out 2>&1
eval_tap $? 112 'AdminGetInputValidations' test.out

#- 113 AdminUpdateInputValidations
# body param: body
echo '[{"field": "EQx95E3C", "validation": {"allowAllSpecialCharacters": true, "allowDigit": true, "allowLetter": false, "allowSpace": true, "allowUnicode": false, "avatarConfig": {"allowedPrefixes": ["hEVjP6rA", "9Hgv4zPZ", "tM6e0bfV"], "preferRegex": false, "regex": "FPNg9z7n"}, "blockedWord": ["p1Yb4Yxp", "VNPLp81O", "9bd4O6HX"], "description": [{"language": "sKezxlxL", "message": ["LQ0ai78r", "Y1mOJnuq", "10R9YM9q"]}, {"language": "2sQ1VAHf", "message": ["McSMCA7O", "DwJw2LLX", "XC9c96sF"]}, {"language": "Tfxq9afV", "message": ["rAFZl4vl", "uk9h07Cy", "LF0J6n5I"]}], "isCustomRegex": true, "letterCase": "PfVJfsOe", "maxLength": 42, "maxRepeatingAlphaNum": 9, "maxRepeatingSpecialCharacter": 92, "minCharType": 49, "minLength": 50, "profanityFilter": "htZyw2ob", "regex": "y1TmAofj", "specialCharacterLocation": "FhNBGNLF", "specialCharacters": ["Fm76ZTAJ", "d8sveAy1", "3iGigcKX"]}}, {"field": "GPq668dS", "validation": {"allowAllSpecialCharacters": false, "allowDigit": true, "allowLetter": false, "allowSpace": false, "allowUnicode": false, "avatarConfig": {"allowedPrefixes": ["yheTys6H", "qLwthMFY", "Nxdi8BF2"], "preferRegex": false, "regex": "nThympja"}, "blockedWord": ["hNv40YaO", "PXkrHtMR", "JIi61ns3"], "description": [{"language": "93nKV7xa", "message": ["3KbZgMWG", "22gnbEYJ", "trsR3bxp"]}, {"language": "a6PA2Lce", "message": ["u8Sj3eOR", "iaJmPqqn", "IyBwt7wQ"]}, {"language": "zjVu5GYF", "message": ["g5cY9lFr", "wG0Cd5G1", "teHwgxyy"]}], "isCustomRegex": false, "letterCase": "8YWa9BGo", "maxLength": 80, "maxRepeatingAlphaNum": 71, "maxRepeatingSpecialCharacter": 39, "minCharType": 15, "minLength": 86, "profanityFilter": "ZfvjjYrQ", "regex": "IlILEjyD", "specialCharacterLocation": "0YLeVS1f", "specialCharacters": ["KS9GzHsQ", "A2x9zVr4", "AerSDSOo"]}}, {"field": "M1SxZ4KE", "validation": {"allowAllSpecialCharacters": true, "allowDigit": false, "allowLetter": false, "allowSpace": true, "allowUnicode": true, "avatarConfig": {"allowedPrefixes": ["MIg8cNH1", "fWKyISFp", "kNjp1R8Y"], "preferRegex": false, "regex": "Of3YVj1C"}, "blockedWord": ["gedsAhUN", "cDVAxGcg", "6rkWaV52"], "description": [{"language": "54el4dEy", "message": ["5VDJ5VPQ", "2TR167mU", "YVHVm4ES"]}, {"language": "lSarP6xZ", "message": ["3lCuGXyo", "J7HuHqmn", "lYBE8hNR"]}, {"language": "NGeifLzU", "message": ["ZWwcumI5", "Mrkljnbe", "fyAheIrg"]}], "isCustomRegex": false, "letterCase": "4hhTFQTx", "maxLength": 72, "maxRepeatingAlphaNum": 19, "maxRepeatingSpecialCharacter": 52, "minCharType": 45, "minLength": 53, "profanityFilter": "Ao5x0vJN", "regex": "oikhVOZs", "specialCharacterLocation": "dm4N4cYW", "specialCharacters": ["uQv0ccNk", "3uWTY7p6", "5Q4xlrQl"]}}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateInputValidations \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 113 'AdminUpdateInputValidations' test.out

#- 114 AdminResetInputValidations
$CLI_EXE \
    --sn iam \
    --op AdminResetInputValidations \
    --field 'cbr0tvoz' \
    > test.out 2>&1
eval_tap $? 114 'AdminResetInputValidations' test.out

#- 115 ListAdminsV3
$CLI_EXE \
    --sn iam \
    --op ListAdminsV3 \
    --namespace $AB_NAMESPACE \
    --after 'jqkG6jCO' \
    --before 'SVYk1PnM' \
    --endDate 's3ZwrByQ' \
    --limit '39' \
    --query '0iqDhqCd' \
    --roleId '1qOd5dgi' \
    --startDate 'KrBN40PY' \
    > test.out 2>&1
eval_tap $? 115 'ListAdminsV3' test.out

#- 116 AdminGetAgeRestrictionStatusV3
$CLI_EXE \
    --sn iam \
    --op AdminGetAgeRestrictionStatusV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 116 'AdminGetAgeRestrictionStatusV3' test.out

#- 117 AdminUpdateAgeRestrictionConfigV3
# body param: body
echo '{"ageRestriction": 92, "enable": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateAgeRestrictionConfigV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 117 'AdminUpdateAgeRestrictionConfigV3' test.out

#- 118 AdminGetListCountryAgeRestrictionV3
$CLI_EXE \
    --sn iam \
    --op AdminGetListCountryAgeRestrictionV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 118 'AdminGetListCountryAgeRestrictionV3' test.out

#- 119 AdminUpdateCountryAgeRestrictionV3
# body param: body
echo '{"ageRestriction": 12}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateCountryAgeRestrictionV3 \
    --countryCode 'PRpZa13B' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 119 'AdminUpdateCountryAgeRestrictionV3' test.out

#- 120 AdminGetBannedUsersV3
$CLI_EXE \
    --sn iam \
    --op AdminGetBannedUsersV3 \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --banType 'klVQun4C' \
    --limit '62' \
    --offset '35' \
    > test.out 2>&1
eval_tap $? 120 'AdminGetBannedUsersV3' test.out

#- 121 AdminBanUserBulkV3
# body param: body
echo '{"ban": "Ad2Rl4Yw", "comment": "6KzaThkh", "endDate": "moZ7RlCf", "reason": "t5BdZikD", "skipNotif": true, "userIds": ["VXUc3Hf6", "YXJdNxHk", "JYrX8FBK"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBanUserBulkV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 121 'AdminBanUserBulkV3' test.out

#- 122 AdminUnbanUserBulkV3
# body param: body
echo '{"bans": [{"banId": "nMnzOJly", "userId": "fakzSHLH"}, {"banId": "P87bFKvN", "userId": "FM37Ptpj"}, {"banId": "8Kcjh1Qb", "userId": "6xbfexbi"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUnbanUserBulkV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 122 'AdminUnbanUserBulkV3' test.out

#- 123 AdminGetBansTypeWithNamespaceV3
$CLI_EXE \
    --sn iam \
    --op AdminGetBansTypeWithNamespaceV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 123 'AdminGetBansTypeWithNamespaceV3' test.out

#- 124 AdminGetClientsByNamespaceV3
$CLI_EXE \
    --sn iam \
    --op AdminGetClientsByNamespaceV3 \
    --namespace $AB_NAMESPACE \
    --clientId 'SurdIaMF' \
    --clientName 'DQ9nXMmS' \
    --clientType 'lEDwSfJU' \
    --limit '73' \
    --offset '85' \
    --skipLoginQueue 'false' \
    > test.out 2>&1
eval_tap $? 124 'AdminGetClientsByNamespaceV3' test.out

#- 125 AdminBulkUpdateClientsV3
# body param: body
echo '{"clientIds": ["7w8RE1AG", "5M8tXVZ0", "1Fyu7YB4"], "clientUpdateRequest": {"audiences": ["wi9paDK8", "VBZPDx6A", "DgH5LlVc"], "baseUri": "C7sKhXvd", "clientName": "dddB2paB", "clientPermissions": [{"action": 44, "resource": "eFNOaIww", "schedAction": 51, "schedCron": "o7Cg7Hj2", "schedRange": ["mrZqNzwJ", "2fIT53oL", "k0ENQANR"]}, {"action": 65, "resource": "Qow0DWta", "schedAction": 20, "schedCron": "u8v2VFl0", "schedRange": ["41GmhFDQ", "YmlhjbR1", "j25d1hwk"]}, {"action": 21, "resource": "lxhevJYQ", "schedAction": 4, "schedCron": "eQYNzGLW", "schedRange": ["y1svFqZS", "bg1LXMDJ", "t0GSQ1zT"]}], "clientPlatform": "BeWieX3Y", "deletable": false, "description": "TQikH9QZ", "modulePermissions": [{"moduleId": "11KeUEei", "selectedGroups": [{"groupId": "ciy8jmEU", "selectedActions": [29, 26, 10]}, {"groupId": "Fv296SJH", "selectedActions": [57, 10, 19]}, {"groupId": "b3iyxILC", "selectedActions": [2, 56, 36]}]}, {"moduleId": "k0qhRRWV", "selectedGroups": [{"groupId": "n7CQuVOY", "selectedActions": [31, 2, 78]}, {"groupId": "LepCKqbM", "selectedActions": [78, 74, 23]}, {"groupId": "MeKeZUFy", "selectedActions": [53, 40, 1]}]}, {"moduleId": "yGfSOV0c", "selectedGroups": [{"groupId": "qcXMKRSy", "selectedActions": [88, 49, 74]}, {"groupId": "ZZyAeYmR", "selectedActions": [17, 9, 48]}, {"groupId": "ULuTBiyF", "selectedActions": [7, 93, 9]}]}], "namespace": "GkwXJOYM", "oauthAccessTokenExpiration": 79, "oauthAccessTokenExpirationTimeUnit": "GMgtBM0f", "oauthRefreshTokenExpiration": 8, "oauthRefreshTokenExpirationTimeUnit": "f0coO3nM", "redirectUri": "xqVo7xSP", "scopes": ["SOJ0bFww", "AOdTHz3v", "v6C0hV8x"], "skipLoginQueue": true, "twoFactorEnabled": true}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBulkUpdateClientsV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 125 'AdminBulkUpdateClientsV3' test.out

#- 126 AdminCreateClientV3
# body param: body
echo '{"audiences": ["twey3T1e", "GZP6awaF", "ekUdEkcw"], "baseUri": "aJ53pLax", "clientId": "SoqyLauD", "clientName": "FTiP20Vl", "clientPermissions": [{"action": 73, "resource": "Xsv0hAdH", "schedAction": 14, "schedCron": "6kjFWGQn", "schedRange": ["bNwSKp6L", "Gnkt44tJ", "xV9iB85F"]}, {"action": 56, "resource": "XVU9XXpx", "schedAction": 46, "schedCron": "fiP6fP7E", "schedRange": ["215vRRHP", "fvDqLKrB", "V5V5SctY"]}, {"action": 95, "resource": "pIuYhwk6", "schedAction": 44, "schedCron": "lNcMS25S", "schedRange": ["llnw2EwX", "X3SBWu9v", "FfKobOWL"]}], "clientPlatform": "KFJKstTo", "deletable": false, "description": "PSX63vsH", "modulePermissions": [{"moduleId": "4m71BNGt", "selectedGroups": [{"groupId": "6f5qQnYi", "selectedActions": [59, 75, 60]}, {"groupId": "547Ic15L", "selectedActions": [7, 61, 89]}, {"groupId": "jn7YLuS5", "selectedActions": [66, 76, 8]}]}, {"moduleId": "W1mLhqqN", "selectedGroups": [{"groupId": "DXONeRtK", "selectedActions": [98, 38, 76]}, {"groupId": "65B52JxA", "selectedActions": [29, 71, 84]}, {"groupId": "nJXEciH6", "selectedActions": [57, 71, 100]}]}, {"moduleId": "ytLTigX7", "selectedGroups": [{"groupId": "tvAOPcyH", "selectedActions": [46, 4, 19]}, {"groupId": "u0JrAefy", "selectedActions": [87, 3, 9]}, {"groupId": "Q2CKmhN8", "selectedActions": [46, 94, 24]}]}], "namespace": "rCtt3wNU", "oauthAccessTokenExpiration": 15, "oauthAccessTokenExpirationTimeUnit": "AFg0NiDf", "oauthClientType": "UBIh3xPr", "oauthRefreshTokenExpiration": 81, "oauthRefreshTokenExpirationTimeUnit": "rRwcz3nk", "parentNamespace": "Rziwfhps", "redirectUri": "JSfuRole", "scopes": ["MmXMjlNv", "J4U8a7K2", "FwkB5YgY"], "secret": "ia42jwCq", "skipLoginQueue": true, "twoFactorEnabled": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminCreateClientV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 126 'AdminCreateClientV3' test.out

#- 127 AdminGetClientsbyNamespacebyIDV3
$CLI_EXE \
    --sn iam \
    --op AdminGetClientsbyNamespacebyIDV3 \
    --clientId 'xmZgZ3Pu' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 127 'AdminGetClientsbyNamespacebyIDV3' test.out

#- 128 AdminDeleteClientV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteClientV3 \
    --clientId '1H5Ukcnh' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 128 'AdminDeleteClientV3' test.out

#- 129 AdminUpdateClientV3
# body param: body
echo '{"audiences": ["8lJ5XIDr", "4Z8OSGSB", "Z1w7yngK"], "baseUri": "c7Getz3m", "clientName": "mhQRTKO1", "clientPermissions": [{"action": 44, "resource": "hIp7v7vz", "schedAction": 27, "schedCron": "TPv47JnX", "schedRange": ["GfxI7wpD", "ndqI70id", "xnuFdjsJ"]}, {"action": 15, "resource": "79WX8GlT", "schedAction": 71, "schedCron": "B2GIg8xu", "schedRange": ["8RAfhLrk", "h0wfzfXE", "8m9udQFO"]}, {"action": 21, "resource": "qH3Ye9kk", "schedAction": 66, "schedCron": "Y9Cv6IJW", "schedRange": ["mBd1efJ6", "ptp25T9r", "RBltQnGn"]}], "clientPlatform": "NvjSdoI5", "deletable": true, "description": "qc4tZCEw", "modulePermissions": [{"moduleId": "SwY8idFA", "selectedGroups": [{"groupId": "VvTTCbOg", "selectedActions": [94, 82, 100]}, {"groupId": "mTIZgokL", "selectedActions": [83, 61, 8]}, {"groupId": "7T7xWGs2", "selectedActions": [4, 27, 90]}]}, {"moduleId": "STCRSPb5", "selectedGroups": [{"groupId": "UCykOmnw", "selectedActions": [69, 54, 73]}, {"groupId": "MHnKr8Jy", "selectedActions": [68, 99, 85]}, {"groupId": "xKBWMND6", "selectedActions": [18, 18, 96]}]}, {"moduleId": "zksKMMBE", "selectedGroups": [{"groupId": "R142rLSy", "selectedActions": [11, 6, 58]}, {"groupId": "nKV2ZsA5", "selectedActions": [0, 29, 65]}, {"groupId": "Jz5MtRSD", "selectedActions": [65, 56, 66]}]}], "namespace": "YYuFsRHY", "oauthAccessTokenExpiration": 16, "oauthAccessTokenExpirationTimeUnit": "1fqCwvk2", "oauthRefreshTokenExpiration": 75, "oauthRefreshTokenExpirationTimeUnit": "RsSxejD9", "redirectUri": "ljctIHIj", "scopes": ["fxr2toHj", "MoCp9wvL", "Qyl8w5E8"], "skipLoginQueue": true, "twoFactorEnabled": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateClientV3 \
    --clientId 'RiMN6aHK' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 129 'AdminUpdateClientV3' test.out

#- 130 AdminUpdateClientPermissionV3
# body param: body
echo '{"permissions": [{"action": 39, "resource": "y1Z6XOA4"}, {"action": 34, "resource": "iqOrgWZn"}, {"action": 5, "resource": "m1wOdImU"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateClientPermissionV3 \
    --clientId 'e7cTONfW' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 130 'AdminUpdateClientPermissionV3' test.out

#- 131 AdminAddClientPermissionsV3
# body param: body
echo '{"permissions": [{"action": 73, "resource": "azgNe9n7"}, {"action": 35, "resource": "mG7lkYpU"}, {"action": 92, "resource": "VjmmORY1"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddClientPermissionsV3 \
    --clientId 'pyXEYjnv' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 131 'AdminAddClientPermissionsV3' test.out

#- 132 AdminDeleteClientPermissionV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteClientPermissionV3 \
    --action '84' \
    --clientId 'bBOoEmvI' \
    --namespace $AB_NAMESPACE \
    --resource '9bntadty' \
    > test.out 2>&1
eval_tap $? 132 'AdminDeleteClientPermissionV3' test.out

#- 133 AdminGetConfigValueV3
$CLI_EXE \
    --sn iam \
    --op AdminGetConfigValueV3 \
    --configKey 'DKIMyDeS' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 133 'AdminGetConfigValueV3' test.out

#- 134 AdminGetCountryListV3
$CLI_EXE \
    --sn iam \
    --op AdminGetCountryListV3 \
    --namespace $AB_NAMESPACE \
    --filterBlacklist 'false' \
    > test.out 2>&1
eval_tap $? 134 'AdminGetCountryListV3' test.out

#- 135 AdminGetCountryBlacklistV3
$CLI_EXE \
    --sn iam \
    --op AdminGetCountryBlacklistV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 135 'AdminGetCountryBlacklistV3' test.out

#- 136 AdminAddCountryBlacklistV3
# body param: body
echo '{"blacklist": ["36zQcyQe", "WgpfeddB", "VMhidb3J"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddCountryBlacklistV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 136 'AdminAddCountryBlacklistV3' test.out

#- 137 AdminGetLoginAllowlistV3
$CLI_EXE \
    --sn iam \
    --op AdminGetLoginAllowlistV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 137 'AdminGetLoginAllowlistV3' test.out

#- 138 AdminUpdateLoginAllowlistV3
# body param: body
echo '{"active": false, "roleIds": ["fkxCTNEO", "J6dFcb8m", "cYBjWeK3"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateLoginAllowlistV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 138 'AdminUpdateLoginAllowlistV3' test.out

#- 139 RetrieveAllThirdPartyLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op RetrieveAllThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 139 'RetrieveAllThirdPartyLoginPlatformCredentialV3' test.out

#- 140 RetrieveAllActiveThirdPartyLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op RetrieveAllActiveThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 140 'RetrieveAllActiveThirdPartyLoginPlatformCredentialV3' test.out

#- 141 RetrieveAllSSOLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op RetrieveAllSSOLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --limit '31' \
    --offset '50' \
    > test.out 2>&1
eval_tap $? 141 'RetrieveAllSSOLoginPlatformCredentialV3' test.out

#- 142 RetrieveThirdPartyLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op RetrieveThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'XxGXP5ww' \
    > test.out 2>&1
eval_tap $? 142 'RetrieveThirdPartyLoginPlatformCredentialV3' test.out

#- 143 AddThirdPartyLoginPlatformCredentialV3
# body param: body
echo '{"ACSURL": "hSvdAY0d", "AWSCognitoRegion": "d3u4Nieg", "AWSCognitoUserPool": "GrE3YOkK", "AllowedClients": ["EjlkaPhC", "knuggDNf", "6zi6WT9Y"], "AppId": "NkEWHHLK", "AuthorizationEndpoint": "FE1FuMbl", "ClientId": "Zs01BEIY", "EmptyStrFieldList": ["rjTgSACz", "PoOi6Ls7", "RJTZMNzg"], "EnableServerLicenseValidation": false, "Environment": "z5BXa3lQ", "FederationMetadataURL": "UbPZd8pN", "GenericOauthFlow": true, "IncludePUID": true, "IsActive": true, "Issuer": "VX7IQTGb", "JWKSEndpoint": "nh5MyRnJ", "KeyID": "6q4ibJr9", "LogoURL": "dxhatH5E", "NetflixCertificates": {"encryptedPrivateKey": "DTJbgJH5", "encryptedPrivateKeyName": "wO1Bo9z9", "publicCertificate": "2y92vbT9", "publicCertificateName": "oMAZWzm3", "rootCertificate": "BIMZYfjb", "rootCertificateName": "sF5WQyoS"}, "OrganizationId": "V1T6oB8q", "PlatformName": "gy0iuEv3", "PrivateKey": "5RH0A7QW", "RedirectUri": "cN9F2jFM", "RegisteredDomains": [{"affectedClientIDs": ["4ZxzVq5X", "Vfy5Tlg7", "SzNvS1hT"], "domain": "YtColQ3s", "namespaces": ["xy8Qmbr4", "6pnzCzKw", "5PzDTqzz"], "roleId": "YgIgxbgz", "ssoCfg": {"googleKey": {"rRSprc1Q": {}, "hh9HfOHY": {}, "h0ZDeznJ": {}}, "groupConfigs": [{"assignNamespaces": ["kvEmWfIE", "SuOojrmG", "M0l0y8yV"], "group": "qolq0wA1", "roleId": "FS8BZiUS"}, {"assignNamespaces": ["ayloPAVY", "2G2IueqK", "HZLYCEHg"], "group": "AgNs3oMZ", "roleId": "8E21Rc0L"}, {"assignNamespaces": ["egN1sNEN", "ATl3oCs6", "TQQCIMdT"], "group": "lWuKV3g6", "roleId": "goiwYlkI"}]}}, {"affectedClientIDs": ["KZcHAXv3", "TkCyobss", "rgeYneny"], "domain": "avnTUDyb", "namespaces": ["3bLSvgDN", "VGCx0vwy", "4xepuyEv"], "roleId": "7XE6Wy5K", "ssoCfg": {"googleKey": {"31mpjHAN": {}, "MsdPW9LN": {}, "AsnXzf2s": {}}, "groupConfigs": [{"assignNamespaces": ["8IReQDgR", "BW8doBtw", "qWGGVtmb"], "group": "Lvy7TBIr", "roleId": "OeSUJ43X"}, {"assignNamespaces": ["MB4nnEJ3", "tuT3B050", "HtVQcs6F"], "group": "THRstNQ9", "roleId": "i7nhiFXR"}, {"assignNamespaces": ["wqiBeqxg", "Muv9joJT", "0WekF5jt"], "group": "D93swbO6", "roleId": "2PKRrYbR"}]}}, {"affectedClientIDs": ["9F1m89dk", "MzhOaZoe", "fAEvw2FV"], "domain": "whM1w9ja", "namespaces": ["YmiTRI14", "k2NEEfAm", "pmbOKUX4"], "roleId": "tbFhWpFm", "ssoCfg": {"googleKey": {"LmRRMQOn": {}, "HbZIQCSV": {}, "B0Uul60t": {}}, "groupConfigs": [{"assignNamespaces": ["1EGQFnlb", "U0QqZg2M", "p7IU3fSG"], "group": "PSBn76Qt", "roleId": "JfuBa7gM"}, {"assignNamespaces": ["kpKZm1OW", "tS3x2ulR", "vsgs7CR2"], "group": "2nnoyMW1", "roleId": "fTrfGFML"}, {"assignNamespaces": ["Mk3X5xcR", "WRF8fH7D", "c7mmI8PG"], "group": "F0xOFVNQ", "roleId": "pTNHWDIT"}]}}], "RelyingParty": "D5lpYIrt", "SandboxId": "oBAVlJ1L", "Secret": "Df7qNdPb", "TeamID": "PRIqLFzy", "TokenAuthenticationType": "EaxoTzvo", "TokenClaimsMapping": {"UYyEQLvU": "IbGGCpwE", "BmcVLmGb": "hLf9s1K0", "oJkq7A6L": "bcmajQLJ"}, "TokenEndpoint": "AgyMRL7f", "UserInfoEndpoint": "XfUG2LeA", "UserInfoHTTPMethod": "FxEzIQQf", "googleAdminConsoleKey": "E0NSWLiI", "scopes": ["bl1aTDHZ", "2VjOKOLu", "XpZ05SB0"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AddThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'oAoNx5oY' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 143 'AddThirdPartyLoginPlatformCredentialV3' test.out

#- 144 DeleteThirdPartyLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op DeleteThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'toX7uNKj' \
    > test.out 2>&1
eval_tap $? 144 'DeleteThirdPartyLoginPlatformCredentialV3' test.out

#- 145 UpdateThirdPartyLoginPlatformCredentialV3
# body param: body
echo '{"ACSURL": "b2bRBEbA", "AWSCognitoRegion": "6zZake3Q", "AWSCognitoUserPool": "RVHa2SyC", "AllowedClients": ["HNMIlpGE", "zMBx3If9", "m7cpwEha"], "AppId": "IbqaCBmU", "AuthorizationEndpoint": "1X8T3wa5", "ClientId": "a9zerRsk", "EmptyStrFieldList": ["zNNC9UpM", "8IEqAzTp", "x72JLaoO"], "EnableServerLicenseValidation": false, "Environment": "tKLL5OK5", "FederationMetadataURL": "arvoGj0Q", "GenericOauthFlow": false, "IncludePUID": true, "IsActive": false, "Issuer": "UC7sGfrh", "JWKSEndpoint": "8JX9zK8a", "KeyID": "dGWWEpq1", "LogoURL": "Enf7E8qw", "NetflixCertificates": {"encryptedPrivateKey": "Ykc47jFe", "encryptedPrivateKeyName": "nZqIvyJg", "publicCertificate": "p9g7SSBh", "publicCertificateName": "15jDOjwZ", "rootCertificate": "8cuu6PY2", "rootCertificateName": "iiVuCVG0"}, "OrganizationId": "XDb352Ch", "PlatformName": "xuofb4x3", "PrivateKey": "lFkqnlx1", "RedirectUri": "TtxILYv2", "RegisteredDomains": [{"affectedClientIDs": ["U4PaMhJa", "gBO5vFTY", "pQjbhz8Z"], "domain": "gAz35hSm", "namespaces": ["2x2QRC5o", "1a0bDoOb", "wv57JFUn"], "roleId": "EpqNqm4O", "ssoCfg": {"googleKey": {"r4O4yeb6": {}, "F4k3Ia4j": {}, "IIc1x05S": {}}, "groupConfigs": [{"assignNamespaces": ["kk6b2KLo", "L1PYYNGx", "pg5ZxFUE"], "group": "LcizXCsO", "roleId": "4h0l0KXs"}, {"assignNamespaces": ["yLiArsKe", "oPN4yiLi", "thkPA5ev"], "group": "tfFFw0OJ", "roleId": "mGETwo3t"}, {"assignNamespaces": ["ru3tARVM", "sbVNsret", "H2tSQay7"], "group": "YcEoVmDW", "roleId": "uGQ0P6gD"}]}}, {"affectedClientIDs": ["sXlhOK69", "9BuU1bHl", "rPICTMDZ"], "domain": "XV32rUMj", "namespaces": ["6BfbpEbh", "gteJSduM", "QYsuGRy7"], "roleId": "5bu3jykb", "ssoCfg": {"googleKey": {"AUWXtcQ8": {}, "PVdwI7Ff": {}, "GPshqHmY": {}}, "groupConfigs": [{"assignNamespaces": ["WITyzEhC", "moll8PXU", "M8uAiEdC"], "group": "5NlKyRAA", "roleId": "icBXQp9p"}, {"assignNamespaces": ["5QKamZlj", "Fa3S1YIz", "RIrxHxs7"], "group": "mg3PpCm3", "roleId": "9GDpDjhH"}, {"assignNamespaces": ["IikipjXU", "gtqK8lUD", "DsFquuUd"], "group": "BCjTqrT3", "roleId": "RmoN99qc"}]}}, {"affectedClientIDs": ["XaJBXU6j", "KFrTkAsK", "EIp9Tm5Z"], "domain": "WnSEA8Be", "namespaces": ["9hipqd6S", "uft8YJvN", "QKkRTV4b"], "roleId": "JcceZHdH", "ssoCfg": {"googleKey": {"HvNOcCqZ": {}, "dVwfOXrP": {}, "F46nWKWu": {}}, "groupConfigs": [{"assignNamespaces": ["qaLD163I", "V5Gbtg0q", "PsPt7Ee9"], "group": "t3TIq1oG", "roleId": "HOnHU83A"}, {"assignNamespaces": ["UIWNhbjM", "3w2Z3plj", "nAHk1hVW"], "group": "9YUYMlNy", "roleId": "iFfiaEfx"}, {"assignNamespaces": ["YX2Ia9yU", "hn863Vyj", "hfP0RKOQ"], "group": "eqlCk8Iw", "roleId": "zhhcUHND"}]}}], "RelyingParty": "xeyhAFYl", "SandboxId": "Hi7213HV", "Secret": "Ww2tUTjP", "TeamID": "0Ys8I9WT", "TokenAuthenticationType": "j7aFI0bn", "TokenClaimsMapping": {"K9ytYK90": "EaRgdc4h", "iloGOlcM": "vOSflxjx", "iCxbtkDq": "bHRnTCpQ"}, "TokenEndpoint": "vVkVTaWn", "UserInfoEndpoint": "GmLm26Ae", "UserInfoHTTPMethod": "NdLVUwLj", "googleAdminConsoleKey": "xoePAvtC", "scopes": ["FNCtbaka", "axjF6i4t", "zJJY1FBf"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op UpdateThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'd7lYnKye' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 145 'UpdateThirdPartyLoginPlatformCredentialV3' test.out

#- 146 UpdateThirdPartyLoginPlatformDomainV3
# body param: body
echo '{"affectedClientIDs": ["2jguMevL", "8qfFWXQo", "IrCro8BA"], "assignedNamespaces": ["z61SrbAs", "PKzDJGaF", "n54JMQc8"], "domain": "64X4VOMY", "roleId": "DXbcPD5Q", "ssoCfg": {"googleKey": {"KTXFH4NS": {}, "nRQj3mOk": {}, "cZQVy79e": {}}, "groupConfigs": [{"assignNamespaces": ["a84zvuOP", "yxv3eYnO", "q7XZDg81"], "group": "loYAzKqI", "roleId": "21PvDolE"}, {"assignNamespaces": ["WVesL6Ia", "Xq5IGCJB", "J8ORvz20"], "group": "0FueQaCP", "roleId": "YiQd22gv"}, {"assignNamespaces": ["1dAkriIb", "4UtIhbRi", "7ji093Uj"], "group": "u9CZwMch", "roleId": "VDbFkLro"}]}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op UpdateThirdPartyLoginPlatformDomainV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'iUfTTzwO' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 146 'UpdateThirdPartyLoginPlatformDomainV3' test.out

#- 147 DeleteThirdPartyLoginPlatformDomainV3
# body param: body
echo '{"domain": "fp1SIGJp", "ssoGroups": ["uPrwM9zG", "QKpAmtg6", "TISrgnZZ"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op DeleteThirdPartyLoginPlatformDomainV3 \
    --namespace $AB_NAMESPACE \
    --platformId '76Pg8iUG' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 147 'DeleteThirdPartyLoginPlatformDomainV3' test.out

#- 148 PartialUpdateThirdPartyLoginPlatformDomainV3
# body param: body
echo '{"affectedClientIDs": ["HNHNaYzv", "R65NE7jZ", "rCskehx6"], "assignedNamespaces": ["VZQe1bKf", "Sb8Mr2rF", "U716rf9E"], "domain": "EtiAfqRd", "roleId": "nrvphYnr", "ssoCfg": {"googleKey": {"snaDsyi5": {}, "hZV5c1f7": {}, "P9PX57zx": {}}, "groupConfigs": [{"assignNamespaces": ["PGaKN1ml", "6xJqpo53", "tTxxEOs1"], "group": "tEWD1I9J", "roleId": "2HE2njss"}, {"assignNamespaces": ["BqnzAXLa", "8JjHlYWN", "RhJsAPHC"], "group": "EyTTmbpI", "roleId": "GsNGQodM"}, {"assignNamespaces": ["fjL5Lnvj", "WVHgVcAf", "Ne8VZRvq"], "group": "tM78K16A", "roleId": "IR3rHfIg"}]}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PartialUpdateThirdPartyLoginPlatformDomainV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'wvZrourv' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 148 'PartialUpdateThirdPartyLoginPlatformDomainV3' test.out

#- 149 RetrieveSSOLoginPlatformCredential
$CLI_EXE \
    --sn iam \
    --op RetrieveSSOLoginPlatformCredential \
    --namespace $AB_NAMESPACE \
    --platformId 'NVjaCEkj' \
    > test.out 2>&1
eval_tap $? 149 'RetrieveSSOLoginPlatformCredential' test.out

#- 150 AddSSOLoginPlatformCredential
# body param: body
echo '{"acsUrl": "rGblVSyl", "apiKey": "kykBad7d", "appId": "pbk3fOq5", "federationMetadataUrl": "yC43M00p", "isActive": false, "redirectUri": "5djSIEYe", "secret": "J2CNNopa", "ssoUrl": "PUIQqr5N"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AddSSOLoginPlatformCredential \
    --namespace $AB_NAMESPACE \
    --platformId '9a7iLt3C' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 150 'AddSSOLoginPlatformCredential' test.out

#- 151 DeleteSSOLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op DeleteSSOLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'Awguy1as' \
    > test.out 2>&1
eval_tap $? 151 'DeleteSSOLoginPlatformCredentialV3' test.out

#- 152 UpdateSSOPlatformCredential
# body param: body
echo '{"acsUrl": "8pO6OcW7", "apiKey": "O23NT1dz", "appId": "bxdsrGV7", "federationMetadataUrl": "rq1rAkJI", "isActive": true, "redirectUri": "pLgqx8rv", "secret": "R9WNuXF3", "ssoUrl": "BAqmYET3"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op UpdateSSOPlatformCredential \
    --namespace $AB_NAMESPACE \
    --platformId 'A1ShuGdD' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 152 'UpdateSSOPlatformCredential' test.out

#- 153 AdminListUserIDByPlatformUserIDsV3
# body param: body
echo '{"platformUserIds": ["TaNeVXSq", "dH7F2pFs", "ZaK1xMfX"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminListUserIDByPlatformUserIDsV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'wfWgJgd3' \
    --rawPID 'false' \
    --rawPUID 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 153 'AdminListUserIDByPlatformUserIDsV3' test.out

#- 154 AdminGetUserByPlatformUserIDV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserByPlatformUserIDV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'jJg7qKNh' \
    --platformUserId '7gfNUn8A' \
    --pidType 'PbIYT1ce' \
    > test.out 2>&1
eval_tap $? 154 'AdminGetUserByPlatformUserIDV3' test.out

#- 155 AdminGetProfileUpdateStrategyV3
$CLI_EXE \
    --sn iam \
    --op AdminGetProfileUpdateStrategyV3 \
    --namespace $AB_NAMESPACE \
    --field 'country' \
    > test.out 2>&1
eval_tap $? 155 'AdminGetProfileUpdateStrategyV3' test.out

#- 156 AdminUpdateProfileUpdateStrategyV3
# body param: body
echo '{"config": {"minimumAllowedInterval": 39}, "type": "wJJjtxVI"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateProfileUpdateStrategyV3 \
    --namespace $AB_NAMESPACE \
    --field 'username' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 156 'AdminUpdateProfileUpdateStrategyV3' test.out

#- 157 AdminGetRoleOverrideConfigV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleOverrideConfigV3 \
    --namespace $AB_NAMESPACE \
    --identity 'VIEW_ONLY' \
    > test.out 2>&1
eval_tap $? 157 'AdminGetRoleOverrideConfigV3' test.out

#- 158 AdminUpdateRoleOverrideConfigV3
# body param: body
echo '{"additions": [{"actions": [17, 98, 15], "resource": "UD6KykEQ"}, {"actions": [20, 44, 92], "resource": "IEmqDwif"}, {"actions": [72, 34, 4], "resource": "UM6QqYnT"}], "exclusions": [{"actions": [30, 71, 23], "resource": "RiRBhVWJ"}, {"actions": [3, 92, 2], "resource": "yub1RMjz"}, {"actions": [65, 55, 33], "resource": "V6itPEhS"}], "overrides": [{"actions": [25, 89, 4], "resource": "0unGRNQv"}, {"actions": [46, 30, 60], "resource": "ybcZvjh6"}, {"actions": [14, 57, 26], "resource": "mAgZt3yI"}], "replacements": [{"replacement": {"actions": [42, 5, 39], "resource": "dOEnb9d0"}, "target": "eupS1ZWt"}, {"replacement": {"actions": [95, 75, 99], "resource": "m5skO5MV"}, "target": "bf7zwLQw"}, {"replacement": {"actions": [1, 75, 43], "resource": "oCPi1vhA"}, "target": "NzWcJOPc"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateRoleOverrideConfigV3 \
    --namespace $AB_NAMESPACE \
    --identity 'GAME_ADMIN' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 158 'AdminUpdateRoleOverrideConfigV3' test.out

#- 159 AdminGetRoleSourceV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleSourceV3 \
    --namespace $AB_NAMESPACE \
    --identity 'USER' \
    > test.out 2>&1
eval_tap $? 159 'AdminGetRoleSourceV3' test.out

#- 160 AdminChangeRoleOverrideConfigStatusV3
# body param: body
echo '{"active": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminChangeRoleOverrideConfigStatusV3 \
    --namespace $AB_NAMESPACE \
    --identity 'VIEW_ONLY' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 160 'AdminChangeRoleOverrideConfigStatusV3' test.out

#- 161 AdminGetRoleNamespacePermissionV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleNamespacePermissionV3 \
    --namespace $AB_NAMESPACE \
    --roleId 'Ttyk0qBA' \
    > test.out 2>&1
eval_tap $? 161 'AdminGetRoleNamespacePermissionV3' test.out

#- 162 GetAdminUsersByRoleIdV3
$CLI_EXE \
    --sn iam \
    --op GetAdminUsersByRoleIdV3 \
    --namespace $AB_NAMESPACE \
    --roleId 'GK07apaF' \
    --after '98' \
    --before '58' \
    --limit '42' \
    > test.out 2>&1
eval_tap $? 162 'GetAdminUsersByRoleIdV3' test.out

#- 163 AdminQueryTagV3
$CLI_EXE \
    --sn iam \
    --op AdminQueryTagV3 \
    --namespace $AB_NAMESPACE \
    --limit '2' \
    --offset '16' \
    --tagName 'MbrCWpir' \
    > test.out 2>&1
eval_tap $? 163 'AdminQueryTagV3' test.out

#- 164 AdminCreateTagV3
# body param: body
echo '{"tagName": "Fn3XSx9q"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminCreateTagV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 164 'AdminCreateTagV3' test.out

#- 165 AdminUpdateTagV3
# body param: body
echo '{"tagName": "RF4drFDK"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateTagV3 \
    --namespace $AB_NAMESPACE \
    --tagId 'F7BYBR7Q' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 165 'AdminUpdateTagV3' test.out

#- 166 AdminDeleteTagV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteTagV3 \
    --namespace $AB_NAMESPACE \
    --tagId 'mNL6cVKC' \
    > test.out 2>&1
eval_tap $? 166 'AdminDeleteTagV3' test.out

#- 167 AdminGetUserByEmailAddressV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserByEmailAddressV3 \
    --namespace $AB_NAMESPACE \
    --emailAddress 'VH0xDdG4' \
    > test.out 2>&1
eval_tap $? 167 'AdminGetUserByEmailAddressV3' test.out

#- 168 AdminBulkUpdateUsersV3
# body param: body
echo '{"updateRequest": {"skipLoginQueue": true}, "userIds": ["8oIe7cqt", "6WIv34mN", "JP1sSDab"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBulkUpdateUsersV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 168 'AdminBulkUpdateUsersV3' test.out

#- 169 AdminGetBulkUserBanV3
# body param: body
echo '{"bulkUserId": ["zmwuqaox", "Hx15PtaG", "ClpoW9tL"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminGetBulkUserBanV3 \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --banType 'CBqgGK3J' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 169 'AdminGetBulkUserBanV3' test.out

#- 170 AdminListUserIDByUserIDsV3
# body param: body
echo '{"findByPublisherNamespace": false, "userIds": ["yJa6GMJo", "5FiVi3WV", "zPHiZSkh"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminListUserIDByUserIDsV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 170 'AdminListUserIDByUserIDsV3' test.out

#- 171 AdminBulkGetUsersPlatform
# body param: body
echo '{"userIds": ["eiyAeFmQ", "JKBfVVHY", "0f2q7JeA"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBulkGetUsersPlatform \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 171 'AdminBulkGetUsersPlatform' test.out

#- 172 AdminCursorGetUserV3
# body param: body
echo '{"cursor": {"cursorTime": "XDWcBS4S", "userId": "aIxwwVSG"}, "fields": ["eLgbBcv2", "PcFPimoJ", "imf6lu2P"], "limit": 73}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminCursorGetUserV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 172 'AdminCursorGetUserV3' test.out

#- 173 AdminInviteUserV3
# body param: body
echo '{"emailAddresses": ["AvrmIZ6D", "Bt982jYa", "hxhpQu0S"], "isAdmin": false, "languageTag": "iK8wH6cA", "namespace": "KVjvBu5X", "roles": ["sSGVvhic", "vwHrCHoE", "Yavixv2o"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminInviteUserV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 173 'AdminInviteUserV3' test.out

#- 174 AdminQueryThirdPlatformLinkHistoryV3
$CLI_EXE \
    --sn iam \
    --op AdminQueryThirdPlatformLinkHistoryV3 \
    --namespace $AB_NAMESPACE \
    --limit '27' \
    --offset '45' \
    --platformUserId 'UGcJvu1l' \
    --platformId 'urLGVPLA' \
    > test.out 2>&1
eval_tap $? 174 'AdminQueryThirdPlatformLinkHistoryV3' test.out

#- 175 AdminListUsersV3
$CLI_EXE \
    --sn iam \
    --op AdminListUsersV3 \
    --namespace $AB_NAMESPACE \
    --limit '54' \
    --offset '47' \
    > test.out 2>&1
eval_tap $? 175 'AdminListUsersV3' test.out

#- 176 AdminSearchUserV3
$CLI_EXE \
    --sn iam \
    --op AdminSearchUserV3 \
    --namespace $AB_NAMESPACE \
    --by 'wy0VeM5P' \
    --endDate 'gyBWLREP' \
    --includeTotal 'false' \
    --limit '16' \
    --offset '68' \
    --platformBy 'MYnYgtDx' \
    --platformId '0PJFcqXu' \
    --query 'VijeDzy0' \
    --roleIds 'TZ7fgLeY' \
    --selectedFields 'dukqULY8' \
    --skipLoginQueue 'false' \
    --startDate 'IzohGwm2' \
    --tagIds 'uAoi54Za' \
    --testAccount 'false' \
    > test.out 2>&1
eval_tap $? 176 'AdminSearchUserV3' test.out

#- 177 AdminGetBulkUserByEmailAddressV3
# body param: body
echo '{"listEmailAddressRequest": ["NhsrgJvA", "0CJ524dn", "yno5CVW1"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminGetBulkUserByEmailAddressV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 177 'AdminGetBulkUserByEmailAddressV3' test.out

#- 178 AdminGetUserByUserIdV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserByUserIdV3 \
    --namespace $AB_NAMESPACE \
    --userId 'DKt0JdHW' \
    > test.out 2>&1
eval_tap $? 178 'AdminGetUserByUserIdV3' test.out

#- 179 AdminUpdateUserV3
# body param: body
echo '{"avatarUrl": "8osTvMWo", "country": "1pkscK59", "dateOfBirth": "GwGsxNkG", "displayName": "cEGNCJfd", "languageTag": "dfZ2NtdF", "skipLoginQueue": false, "tags": ["PssEBeqU", "92NzxI1d", "ta1n2HAO"], "uniqueDisplayName": "ffskBfW9", "userName": "a4Yj0gxF"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserV3 \
    --namespace $AB_NAMESPACE \
    --userId 'DyqRKvWl' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 179 'AdminUpdateUserV3' test.out

#- 180 AdminGetUserBanV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserBanV3 \
    --namespace $AB_NAMESPACE \
    --userId 'QKmZtzje' \
    --activeOnly 'false' \
    --after 'gclWWkRl' \
    --before 'LxR9hasY' \
    --limit '58' \
    > test.out 2>&1
eval_tap $? 180 'AdminGetUserBanV3' test.out

#- 181 AdminBanUserV3
# body param: body
echo '{"ban": "V72eDYr4", "comment": "orNTrBzq", "endDate": "JHaaVcYr", "reason": "YJXCOh3b", "skipNotif": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBanUserV3 \
    --namespace $AB_NAMESPACE \
    --userId 'WMtBVHAA' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 181 'AdminBanUserV3' test.out

#- 182 AdminGetUserBanSummaryV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserBanSummaryV3 \
    --namespace $AB_NAMESPACE \
    --userId 'YyuL79TL' \
    > test.out 2>&1
eval_tap $? 182 'AdminGetUserBanSummaryV3' test.out

#- 183 AdminUpdateUserBanV3
# body param: body
echo '{"enabled": false, "skipNotif": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserBanV3 \
    --banId 'tE9vwhoX' \
    --namespace $AB_NAMESPACE \
    --userId 'DYBGLNJA' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 183 'AdminUpdateUserBanV3' test.out

#- 184 AdminSendVerificationCodeV3
# body param: body
echo '{"context": "UC61CGhR", "emailAddress": "LkElbsT4", "languageTag": "cPeX6AYe", "upgradeToken": "1sTyB6dd"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminSendVerificationCodeV3 \
    --namespace $AB_NAMESPACE \
    --userId 'UE3VUXym' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 184 'AdminSendVerificationCodeV3' test.out

#- 185 AdminVerifyAccountV3
# body param: body
echo '{"Code": "zvRkTDkM", "ContactType": "dfLTiQvp", "LanguageTag": "L1FeV8KT", "validateOnly": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminVerifyAccountV3 \
    --namespace $AB_NAMESPACE \
    --userId '4CYK49YD' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 185 'AdminVerifyAccountV3' test.out

#- 186 GetUserVerificationCode
$CLI_EXE \
    --sn iam \
    --op GetUserVerificationCode \
    --namespace $AB_NAMESPACE \
    --userId 'G7h3n9ny' \
    > test.out 2>&1
eval_tap $? 186 'GetUserVerificationCode' test.out

#- 187 AdminGetUserDeletionStatusV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserDeletionStatusV3 \
    --namespace $AB_NAMESPACE \
    --userId 'zWqa31Ef' \
    > test.out 2>&1
eval_tap $? 187 'AdminGetUserDeletionStatusV3' test.out

#- 188 AdminUpdateUserDeletionStatusV3
# body param: body
echo '{"deletionDate": 4, "enabled": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserDeletionStatusV3 \
    --namespace $AB_NAMESPACE \
    --userId 'NM8Ts0UN' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 188 'AdminUpdateUserDeletionStatusV3' test.out

#- 189 AdminListUserAllPlatformAccountsDistinctV3
$CLI_EXE \
    --sn iam \
    --op AdminListUserAllPlatformAccountsDistinctV3 \
    --namespace $AB_NAMESPACE \
    --userId 'hvRfYcvZ' \
    > test.out 2>&1
eval_tap $? 189 'AdminListUserAllPlatformAccountsDistinctV3' test.out

#- 190 AdminUpgradeHeadlessAccountV3
# body param: body
echo '{"code": "BuW9cIQr", "country": "OZjdct5q", "dateOfBirth": "yurZ837b", "displayName": "af8hzmcH", "emailAddress": "dctqODgP", "password": "lmWWIrsL", "uniqueDisplayName": "DTekZrOl", "validateOnly": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpgradeHeadlessAccountV3 \
    --namespace $AB_NAMESPACE \
    --userId '6weTirvt' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 190 'AdminUpgradeHeadlessAccountV3' test.out

#- 191 AdminDeleteUserInformationV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserInformationV3 \
    --namespace $AB_NAMESPACE \
    --userId 'XFhYrmuM' \
    > test.out 2>&1
eval_tap $? 191 'AdminDeleteUserInformationV3' test.out

#- 192 AdminGetUserLoginHistoriesV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserLoginHistoriesV3 \
    --namespace $AB_NAMESPACE \
    --userId 'tv0ZqJ3k' \
    --after '0.9381846905248503' \
    --before '0.8315718698086008' \
    --limit '35' \
    > test.out 2>&1
eval_tap $? 192 'AdminGetUserLoginHistoriesV3' test.out

#- 193 AdminResetPasswordV3
# body param: body
echo '{"languageTag": "zDaFPb0H", "mfaToken": "4C9CrZka", "newPassword": "AF7cDlER", "oldPassword": "FD3HurY4"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminResetPasswordV3 \
    --namespace $AB_NAMESPACE \
    --userId 'V3gQVqHJ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 193 'AdminResetPasswordV3' test.out

#- 194 AdminUpdateUserPermissionV3
# body param: body
echo '{"Permissions": [{"Action": 17, "Resource": "zF32PaO7", "SchedAction": 72, "SchedCron": "vRKBz21q", "SchedRange": ["1dDdH5hi", "d0C07Hx1", "lq8FDqDX"]}, {"Action": 44, "Resource": "rgcjlTO0", "SchedAction": 82, "SchedCron": "ahY0lpLF", "SchedRange": ["XCdzpMt7", "pxTlpcVf", "NkN1LA81"]}, {"Action": 46, "Resource": "4vsP9iXA", "SchedAction": 75, "SchedCron": "kKBynZWr", "SchedRange": ["R57g9Hy2", "H6QKmSCY", "vS4fkI1c"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserPermissionV3 \
    --namespace $AB_NAMESPACE \
    --userId '4D1NR3L9' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 194 'AdminUpdateUserPermissionV3' test.out

#- 195 AdminAddUserPermissionsV3
# body param: body
echo '{"Permissions": [{"Action": 80, "Resource": "9nBL6HnR", "SchedAction": 7, "SchedCron": "3JOlDzY8", "SchedRange": ["Qq2rxuwl", "D74AM7zq", "aCCjTzu4"]}, {"Action": 66, "Resource": "WgiRlTRo", "SchedAction": 86, "SchedCron": "Xfhq9UBF", "SchedRange": ["u53YqiHE", "vpzTiiQQ", "7aqfRrgi"]}, {"Action": 32, "Resource": "oQXynMKL", "SchedAction": 23, "SchedCron": "K5jOb6Na", "SchedRange": ["sEMhW9vX", "VuQe8WdG", "BDlTTeqx"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddUserPermissionsV3 \
    --namespace $AB_NAMESPACE \
    --userId 'HKVOxwem' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 195 'AdminAddUserPermissionsV3' test.out

#- 196 AdminDeleteUserPermissionBulkV3
# body param: body
echo '[{"Action": 71, "Resource": "x4prWZAH"}, {"Action": 8, "Resource": "0x1E5QPn"}, {"Action": 64, "Resource": "ndzrgkGO"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserPermissionBulkV3 \
    --namespace $AB_NAMESPACE \
    --userId 'lU3CduK0' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 196 'AdminDeleteUserPermissionBulkV3' test.out

#- 197 AdminDeleteUserPermissionV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserPermissionV3 \
    --action '83' \
    --namespace $AB_NAMESPACE \
    --resource 'ig7j4TG4' \
    --userId 'cjJqOYWL' \
    > test.out 2>&1
eval_tap $? 197 'AdminDeleteUserPermissionV3' test.out

#- 198 AdminGetUserPlatformAccountsV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserPlatformAccountsV3 \
    --namespace $AB_NAMESPACE \
    --userId 'Qr33JrIK' \
    --after 'jlLb1Hk4' \
    --before '7TwBTaDc' \
    --limit '30' \
    --platformId 'hH6Mktms' \
    --targetNamespace 'jPJ4GNyZ' \
    > test.out 2>&1
eval_tap $? 198 'AdminGetUserPlatformAccountsV3' test.out

#- 199 AdminListAllDistinctPlatformAccountsV3
$CLI_EXE \
    --sn iam \
    --op AdminListAllDistinctPlatformAccountsV3 \
    --namespace $AB_NAMESPACE \
    --userId 'UNI1nsWX' \
    --status 'uhnfPY37' \
    > test.out 2>&1
eval_tap $? 199 'AdminListAllDistinctPlatformAccountsV3' test.out

#- 200 AdminGetListJusticePlatformAccounts
$CLI_EXE \
    --sn iam \
    --op AdminGetListJusticePlatformAccounts \
    --namespace $AB_NAMESPACE \
    --userId 'vGHSpCr6' \
    > test.out 2>&1
eval_tap $? 200 'AdminGetListJusticePlatformAccounts' test.out

#- 201 AdminGetUserMapping
$CLI_EXE \
    --sn iam \
    --op AdminGetUserMapping \
    --namespace $AB_NAMESPACE \
    --targetNamespace 'YEUNhFdK' \
    --userId 'f9vyIyp9' \
    --createIfNotFound 'false' \
    > test.out 2>&1
eval_tap $? 201 'AdminGetUserMapping' test.out

#- 202 AdminCreateJusticeUser
$CLI_EXE \
    --sn iam \
    --op AdminCreateJusticeUser \
    --namespace $AB_NAMESPACE \
    --targetNamespace 'U42uUqd8' \
    --userId 'g0rbALbF' \
    > test.out 2>&1
eval_tap $? 202 'AdminCreateJusticeUser' test.out

#- 203 AdminLinkPlatformAccount
# body param: body
echo '{"platformId": "m07bnfpF", "platformUserId": "4QcYtxTD"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminLinkPlatformAccount \
    --namespace $AB_NAMESPACE \
    --userId '2We8t5iB' \
    --skipConflict 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 203 'AdminLinkPlatformAccount' test.out

#- 204 AdminGetUserLinkHistoriesV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserLinkHistoriesV3 \
    --namespace $AB_NAMESPACE \
    --userId 'jbKyqaVj' \
    --platformId 'mV1ixT0n' \
    > test.out 2>&1
eval_tap $? 204 'AdminGetUserLinkHistoriesV3' test.out

#- 205 AdminPlatformUnlinkV3
eval_tap 0 205 'AdminPlatformUnlinkV3 # SKIP deprecated' test.out

#- 206 AdminPlatformUnlinkAllV3
$CLI_EXE \
    --sn iam \
    --op AdminPlatformUnlinkAllV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'WTvaTgEE' \
    --userId 'sij40Slv' \
    > test.out 2>&1
eval_tap $? 206 'AdminPlatformUnlinkAllV3' test.out

#- 207 AdminPlatformLinkV3
$CLI_EXE \
    --sn iam \
    --op AdminPlatformLinkV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'XmRRcOuV' \
    --userId 'PzZXRfxK' \
    --ticket 'e6q4lloc' \
    > test.out 2>&1
eval_tap $? 207 'AdminPlatformLinkV3' test.out

#- 208 AdminDeleteUserLinkingHistoryByPlatformIDV3
eval_tap 0 208 'AdminDeleteUserLinkingHistoryByPlatformIDV3 # SKIP deprecated' test.out

#- 209 AdminDeleteUserLinkingRestrictionByPlatformIDV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserLinkingRestrictionByPlatformIDV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'SOgOh89w' \
    --userId 'gcENgNZM' \
    > test.out 2>&1
eval_tap $? 209 'AdminDeleteUserLinkingRestrictionByPlatformIDV3' test.out

#- 210 AdminGetThirdPartyPlatformTokenLinkStatusV3
$CLI_EXE \
    --sn iam \
    --op AdminGetThirdPartyPlatformTokenLinkStatusV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'By3GoHsA' \
    --userId 'b5bjwh5z' \
    --platformToken 'H0sPCXnV' \
    > test.out 2>&1
eval_tap $? 210 'AdminGetThirdPartyPlatformTokenLinkStatusV3' test.out

#- 211 AdminGetUserSinglePlatformAccount
$CLI_EXE \
    --sn iam \
    --op AdminGetUserSinglePlatformAccount \
    --namespace $AB_NAMESPACE \
    --platformId 'QLqrhULV' \
    --userId 'rouuSRBF' \
    --crossNamespace 'false' \
    > test.out 2>&1
eval_tap $? 211 'AdminGetUserSinglePlatformAccount' test.out

#- 212 AdminDeleteUserRolesV3
# body param: body
echo '["zWcvxF2T", "rPkLGzEY", "njh22ZP7"]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserRolesV3 \
    --namespace $AB_NAMESPACE \
    --userId 'qmzJohqR' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 212 'AdminDeleteUserRolesV3' test.out

#- 213 AdminSaveUserRoleV3
# body param: body
echo '[{"namespace": "GPcinbpv", "roleId": "ISOvqJHi"}, {"namespace": "S7ppwecN", "roleId": "gzOwiv0R"}, {"namespace": "sVEHM5yt", "roleId": "hUburiFD"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminSaveUserRoleV3 \
    --namespace $AB_NAMESPACE \
    --userId 'ApJnwfGn' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 213 'AdminSaveUserRoleV3' test.out

#- 214 AdminAddUserRoleV3
$CLI_EXE \
    --sn iam \
    --op AdminAddUserRoleV3 \
    --namespace $AB_NAMESPACE \
    --roleId 'MaRF6SzK' \
    --userId 'VQgzlIlz' \
    > test.out 2>&1
eval_tap $? 214 'AdminAddUserRoleV3' test.out

#- 215 AdminDeleteUserRoleV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserRoleV3 \
    --namespace $AB_NAMESPACE \
    --roleId 'xMeTKp3p' \
    --userId 'mdMs6u7H' \
    > test.out 2>&1
eval_tap $? 215 'AdminDeleteUserRoleV3' test.out

#- 216 AdminGetUserStateByUserIdV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserStateByUserIdV3 \
    --namespace $AB_NAMESPACE \
    --userId 'd4HNYswB' \
    > test.out 2>&1
eval_tap $? 216 'AdminGetUserStateByUserIdV3' test.out

#- 217 AdminUpdateUserStatusV3
# body param: body
echo '{"enabled": false, "reason": "os2IiMh7"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserStatusV3 \
    --namespace $AB_NAMESPACE \
    --userId 'bWjw0U9a' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 217 'AdminUpdateUserStatusV3' test.out

#- 218 AdminTrustlyUpdateUserIdentity
# body param: body
echo '{"emailAddress": "qgmF06l6", "password": "rtKNqFiT"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminTrustlyUpdateUserIdentity \
    --namespace $AB_NAMESPACE \
    --userId 'GOrlPGSX' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 218 'AdminTrustlyUpdateUserIdentity' test.out

#- 219 AdminVerifyUserWithoutVerificationCodeV3
$CLI_EXE \
    --sn iam \
    --op AdminVerifyUserWithoutVerificationCodeV3 \
    --namespace $AB_NAMESPACE \
    --userId 'LJwVGJs5' \
    > test.out 2>&1
eval_tap $? 219 'AdminVerifyUserWithoutVerificationCodeV3' test.out

#- 220 AdminUpdateClientSecretV3
# body param: body
echo '{"newSecret": "EdguweG8"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateClientSecretV3 \
    --clientId 'cOYe1wwJ' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 220 'AdminUpdateClientSecretV3' test.out

#- 221 AdminCheckThirdPartyLoginPlatformAvailabilityV3
$CLI_EXE \
    --sn iam \
    --op AdminCheckThirdPartyLoginPlatformAvailabilityV3 \
    --platformId 'LKwT3V3b' \
    > test.out 2>&1
eval_tap $? 221 'AdminCheckThirdPartyLoginPlatformAvailabilityV3' test.out

#- 222 AdminGetRolesV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRolesV3 \
    --after 'aaPO3ewh' \
    --before 'hFekSiyb' \
    --isWildcard 'false' \
    --limit '44' \
    > test.out 2>&1
eval_tap $? 222 'AdminGetRolesV3' test.out

#- 223 AdminCreateRoleV3
# body param: body
echo '{"adminRole": true, "deletable": false, "isWildcard": false, "managers": [{"displayName": "WuLKVvj2", "namespace": "IwX39zOe", "userId": "nKWeAbwO"}, {"displayName": "bnwDITHV", "namespace": "OgQkvds3", "userId": "q9K2AyuF"}, {"displayName": "YuJ3SxLG", "namespace": "dMoa4vPl", "userId": "mZevdpel"}], "members": [{"displayName": "asz84AhG", "namespace": "5oJYPlZo", "userId": "K2eKLPAc"}, {"displayName": "JSF41s26", "namespace": "2DdYLN3Z", "userId": "cV8uYiwV"}, {"displayName": "dBjvUfdA", "namespace": "gvT7u6ja", "userId": "S8exA5Lv"}], "permissions": [{"action": 47, "resource": "lNSVYxzW", "schedAction": 24, "schedCron": "PFlR4tm8", "schedRange": ["WAYqJo9r", "ZyLS2JJU", "Id7RP2fR"]}, {"action": 71, "resource": "Sdp2K9Bd", "schedAction": 13, "schedCron": "B6Im7iBX", "schedRange": ["tHGE73Hb", "F1dUN3rH", "ZUkySEwg"]}, {"action": 50, "resource": "puyX599B", "schedAction": 47, "schedCron": "qJ7GbIDv", "schedRange": ["soOoNeU7", "v1tp0UmQ", "TrAiNoxO"]}], "roleName": "YDLfbxyD"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminCreateRoleV3 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 223 'AdminCreateRoleV3' test.out

#- 224 AdminGetRoleV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleV3 \
    --roleId 'whLw0MyC' \
    > test.out 2>&1
eval_tap $? 224 'AdminGetRoleV3' test.out

#- 225 AdminDeleteRoleV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteRoleV3 \
    --roleId 'BPq0kWXh' \
    > test.out 2>&1
eval_tap $? 225 'AdminDeleteRoleV3' test.out

#- 226 AdminUpdateRoleV3
# body param: body
echo '{"deletable": true, "isWildcard": true, "roleName": "UsFtUDUt"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateRoleV3 \
    --roleId 'mxRf7AjO' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 226 'AdminUpdateRoleV3' test.out

#- 227 AdminGetRoleAdminStatusV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleAdminStatusV3 \
    --roleId 'vClq06At' \
    > test.out 2>&1
eval_tap $? 227 'AdminGetRoleAdminStatusV3' test.out

#- 228 AdminUpdateAdminRoleStatusV3
$CLI_EXE \
    --sn iam \
    --op AdminUpdateAdminRoleStatusV3 \
    --roleId '9PhKmlMd' \
    > test.out 2>&1
eval_tap $? 228 'AdminUpdateAdminRoleStatusV3' test.out

#- 229 AdminRemoveRoleAdminV3
$CLI_EXE \
    --sn iam \
    --op AdminRemoveRoleAdminV3 \
    --roleId 'bcQfjkUE' \
    > test.out 2>&1
eval_tap $? 229 'AdminRemoveRoleAdminV3' test.out

#- 230 AdminGetRoleManagersV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleManagersV3 \
    --roleId 'x9P3Dmtu' \
    --after 'dUgWjLPi' \
    --before '97m4jp2A' \
    --limit '88' \
    > test.out 2>&1
eval_tap $? 230 'AdminGetRoleManagersV3' test.out

#- 231 AdminAddRoleManagersV3
# body param: body
echo '{"managers": [{"displayName": "6g9PQtdy", "namespace": "YfUzeTXd", "userId": "01SmmPwa"}, {"displayName": "gFtSg4HD", "namespace": "PQv3LJ6T", "userId": "qwzaA1CC"}, {"displayName": "WkhHqsBb", "namespace": "XaPIL1Ei", "userId": "vf6AUmq2"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddRoleManagersV3 \
    --roleId 'nNQTscMM' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 231 'AdminAddRoleManagersV3' test.out

#- 232 AdminRemoveRoleManagersV3
# body param: body
echo '{"managers": [{"displayName": "GuiRlTG8", "namespace": "cFV1M3ur", "userId": "pxpelJc1"}, {"displayName": "N2IDiDOx", "namespace": "DeYCmD7M", "userId": "ZKqhbNyr"}, {"displayName": "w2hvytyM", "namespace": "StlquMuY", "userId": "8GPQQBMp"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminRemoveRoleManagersV3 \
    --roleId 'POHuSORy' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 232 'AdminRemoveRoleManagersV3' test.out

#- 233 AdminGetRoleMembersV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleMembersV3 \
    --roleId 'nt8ifBgd' \
    --after 'zTXfVeA9' \
    --before 'c93rGVE3' \
    --limit '48' \
    > test.out 2>&1
eval_tap $? 233 'AdminGetRoleMembersV3' test.out

#- 234 AdminAddRoleMembersV3
# body param: body
echo '{"members": [{"displayName": "C9V4dKgQ", "namespace": "JR8zOjJh", "userId": "Q8qP4Zp7"}, {"displayName": "s80xYs6p", "namespace": "3JHHcMpC", "userId": "gXwKa37c"}, {"displayName": "pidHzWHA", "namespace": "KKf9fS24", "userId": "kARNiNKN"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddRoleMembersV3 \
    --roleId 'nodrL7dC' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 234 'AdminAddRoleMembersV3' test.out

#- 235 AdminRemoveRoleMembersV3
eval_tap 0 235 'AdminRemoveRoleMembersV3 # SKIP deprecated' test.out

#- 236 AdminUpdateRolePermissionsV3
# body param: body
echo '{"permissions": [{"action": 90, "resource": "xJnUnOjn", "schedAction": 59, "schedCron": "zLV84F06", "schedRange": ["QucvBHy3", "hhewrQQg", "QYAboBig"]}, {"action": 41, "resource": "9OTg2tmh", "schedAction": 98, "schedCron": "CABWWP4v", "schedRange": ["yqUlmRhy", "3Cbb1SyI", "8LWXW75T"]}, {"action": 37, "resource": "13PNibYU", "schedAction": 84, "schedCron": "A19vyXnM", "schedRange": ["ozMygtk9", "vF9BVk8f", "sCv6YJTP"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateRolePermissionsV3 \
    --roleId 'btortYYc' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 236 'AdminUpdateRolePermissionsV3' test.out

#- 237 AdminAddRolePermissionsV3
# body param: body
echo '{"permissions": [{"action": 65, "resource": "X3Z9GJTY", "schedAction": 17, "schedCron": "JymJmJh6", "schedRange": ["CLNqT80l", "TVqiYoHG", "TrVkR9It"]}, {"action": 34, "resource": "HW4BB7J8", "schedAction": 4, "schedCron": "XeHwOSrO", "schedRange": ["GWimdpdM", "hsUmuoxk", "GXUKStJq"]}, {"action": 84, "resource": "zMgIRjm7", "schedAction": 97, "schedCron": "oAQqG7nw", "schedRange": ["Ve2KzB98", "6ZpuRGOZ", "IVnmIGYR"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddRolePermissionsV3 \
    --roleId 'gYQur9iw' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 237 'AdminAddRolePermissionsV3' test.out

#- 238 AdminDeleteRolePermissionsV3
# body param: body
echo '["DpI4bOWh", "OJp8lZcX", "3DXfq8LL"]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDeleteRolePermissionsV3 \
    --roleId 'c7LIBTTw' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 238 'AdminDeleteRolePermissionsV3' test.out

#- 239 AdminDeleteRolePermissionV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteRolePermissionV3 \
    --action '3' \
    --resource '2Fo6RGH3' \
    --roleId 'vBtAQnXj' \
    > test.out 2>&1
eval_tap $? 239 'AdminDeleteRolePermissionV3' test.out

#- 240 AdminGetMyUserV3
$CLI_EXE \
    --sn iam \
    --op AdminGetMyUserV3 \
    > test.out 2>&1
eval_tap $? 240 'AdminGetMyUserV3' test.out

#- 241 UserAuthenticationV3
$CLI_EXE \
    --sn iam \
    --op UserAuthenticationV3 \
    --client_id 'Wd8tfFnm' \
    --extend_exp 'true' \
    --redirect_uri 'W0tikhTe' \
    --password '93zGQEEb' \
    --request_id '8uqmwqIP' \
    --user_name 'bSzw1ycJ' \
    > test.out 2>&1
eval_tap $? 241 'UserAuthenticationV3' test.out

#- 242 AuthenticationWithPlatformLinkV3
$CLI_EXE \
    --sn iam \
    --op AuthenticationWithPlatformLinkV3 \
    --extend_exp 'false' \
    --client_id 'qvL2Wada' \
    --linkingToken 'gztqiUXr' \
    --password 'c3YNl4jX' \
    --username 'cUZKryWY' \
    > test.out 2>&1
eval_tap $? 242 'AuthenticationWithPlatformLinkV3' test.out

#- 243 AuthenticateAndLinkForwardV3
$CLI_EXE \
    --sn iam \
    --op AuthenticateAndLinkForwardV3 \
    --extend_exp 'false' \
    --client_id 'BJCN0bwV' \
    --linkingToken 'Dtz83hPN' \
    --password '3IAwHXM3' \
    --username '82nbNUM6' \
    > test.out 2>&1
eval_tap $? 243 'AuthenticateAndLinkForwardV3' test.out

#- 244 PublicGetSystemConfigV3
$CLI_EXE \
    --sn iam \
    --op PublicGetSystemConfigV3 \
    > test.out 2>&1
eval_tap $? 244 'PublicGetSystemConfigV3' test.out

#- 245 GenerateTokenByNewHeadlessAccountV3
$CLI_EXE \
    --sn iam \
    --op GenerateTokenByNewHeadlessAccountV3 \
    --additionalData 'R9ci1kTD' \
    --extend_exp 'true' \
    --linkingToken 'yJPB0F85' \
    > test.out 2>&1
eval_tap $? 245 'GenerateTokenByNewHeadlessAccountV3' test.out

#- 246 RequestOneTimeLinkingCodeV3
$CLI_EXE \
    --sn iam \
    --op RequestOneTimeLinkingCodeV3 \
    --redirectUri 'vLz19j7g' \
    --state '4TSozZmB' \
    --platformId 'mgpaETOS' \
    > test.out 2>&1
eval_tap $? 246 'RequestOneTimeLinkingCodeV3' test.out

#- 247 ValidateOneTimeLinkingCodeV3
$CLI_EXE \
    --sn iam \
    --op ValidateOneTimeLinkingCodeV3 \
    --oneTimeLinkCode 'UzbUqSE8' \
    > test.out 2>&1
eval_tap $? 247 'ValidateOneTimeLinkingCodeV3' test.out

#- 248 RequestTokenByOneTimeLinkCodeResponseV3
$CLI_EXE \
    --sn iam \
    --op RequestTokenByOneTimeLinkCodeResponseV3 \
    --additionalData 'bYgKA0Ec' \
    --isTransient 'false' \
    --client_id 'jAucS2gK' \
    --oneTimeLinkCode 'T4zQzXOd' \
    > test.out 2>&1
eval_tap $? 248 'RequestTokenByOneTimeLinkCodeResponseV3' test.out

#- 249 GetCountryLocationV3
$CLI_EXE \
    --sn iam \
    --op GetCountryLocationV3 \
    > test.out 2>&1
eval_tap $? 249 'GetCountryLocationV3' test.out

#- 250 Logout
$CLI_EXE \
    --sn iam \
    --op Logout \
    > test.out 2>&1
eval_tap $? 250 'Logout' test.out

#- 251 RequestTokenExchangeCodeV3
$CLI_EXE \
    --sn iam \
    --op RequestTokenExchangeCodeV3 \
    --namespace $AB_NAMESPACE \
    --codeChallenge 'a4zdVfWz' \
    --codeChallengeMethod 'S256' \
    --client_id 'MxpYJAE8' \
    > test.out 2>&1
eval_tap $? 251 'RequestTokenExchangeCodeV3' test.out

#- 252 AdminRetrieveUserThirdPartyPlatformTokenV3
$CLI_EXE \
    --sn iam \
    --op AdminRetrieveUserThirdPartyPlatformTokenV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'N0NM7D5N' \
    --userId '1bX3o7Wc' \
    --platformUserId 'fJHaLJp9' \
    > test.out 2>&1
eval_tap $? 252 'AdminRetrieveUserThirdPartyPlatformTokenV3' test.out

#- 253 RevokeUserV3
$CLI_EXE \
    --sn iam \
    --op RevokeUserV3 \
    --namespace $AB_NAMESPACE \
    --userId 'l14A96dU' \
    --includeGameNamespace 'true' \
    > test.out 2>&1
eval_tap $? 253 'RevokeUserV3' test.out

#- 254 AuthorizeV3
$CLI_EXE \
    --sn iam \
    --op AuthorizeV3 \
    --blockedPlatformId 'QxWLmHS9' \
    --codeChallenge '3UXtRmpW' \
    --codeChallengeMethod 'S256' \
    --createHeadless 'false' \
    --loginWebBased 'true' \
    --nonce 'jblFI3OG' \
    --oneTimeLinkCode 'KBzr7cNC' \
    --redirectUri 'EshifTXu' \
    --scope 'Huur6jqZ' \
    --state '1e5aWfnu' \
    --targetAuthPage 'V85t2hkI' \
    --useRedirectUriAsLoginUrlWhenLocked 'true' \
    --clientId 'GDwOG2ay' \
    --responseType 'code' \
    > test.out 2>&1
eval_tap $? 254 'AuthorizeV3' test.out

#- 255 TokenIntrospectionV3
$CLI_EXE \
    --sn iam \
    --op TokenIntrospectionV3 \
    --token 'ku7KJ6NF' \
    > test.out 2>&1
eval_tap $? 255 'TokenIntrospectionV3' test.out

#- 256 GetJWKSV3
$CLI_EXE \
    --sn iam \
    --op GetJWKSV3 \
    > test.out 2>&1
eval_tap $? 256 'GetJWKSV3' test.out

#- 257 SendMFAAuthenticationCode
$CLI_EXE \
    --sn iam \
    --op SendMFAAuthenticationCode \
    --clientId 'iL9hp9dA' \
    --factor 'iBqdWf7f' \
    --mfaToken 'sWpbSPl3' \
    > test.out 2>&1
eval_tap $? 257 'SendMFAAuthenticationCode' test.out

#- 258 Change2faMethod
$CLI_EXE \
    --sn iam \
    --op Change2faMethod \
    --factor 'I6s2ndWC' \
    --mfaToken '15bKp6EF' \
    > test.out 2>&1
eval_tap $? 258 'Change2faMethod' test.out

#- 259 Verify2faCode
$CLI_EXE \
    --sn iam \
    --op Verify2faCode \
    --code '3bVonAnD' \
    --factor 'bGTElXQP' \
    --mfaToken 'pihjKb1q' \
    --rememberDevice 'true' \
    > test.out 2>&1
eval_tap $? 259 'Verify2faCode' test.out

#- 260 Verify2faCodeForward
$CLI_EXE \
    --sn iam \
    --op Verify2faCodeForward \
    --defaultFactor 'EY4Xy0Ls' \
    --factors 'blITXdFD' \
    --rememberDevice 'false' \
    --clientId 'fpHqqzT0' \
    --code 'W0wguS8G' \
    --factor 'eAjBFiav' \
    --mfaToken 'ylP6YZjs' \
    > test.out 2>&1
eval_tap $? 260 'Verify2faCodeForward' test.out

#- 261 RetrieveUserThirdPartyPlatformTokenV3
$CLI_EXE \
    --sn iam \
    --op RetrieveUserThirdPartyPlatformTokenV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'KdMKDeyC' \
    --userId 'MT3oiK8O' \
    > test.out 2>&1
eval_tap $? 261 'RetrieveUserThirdPartyPlatformTokenV3' test.out

#- 262 AuthCodeRequestV3
$CLI_EXE \
    --sn iam \
    --op AuthCodeRequestV3 \
    --platformId 'xnhzlizz' \
    --clientId '0XIcZtio' \
    --redirectUri 'TKd5CL7I' \
    --requestId 'ZjV66GAw' \
    > test.out 2>&1
eval_tap $? 262 'AuthCodeRequestV3' test.out

#- 263 PlatformTokenGrantV3
$CLI_EXE \
    --sn iam \
    --op PlatformTokenGrantV3 \
    --platformId 'LSAkHXsW' \
    --additionalData 'G9C4FDJ5' \
    --client_id 'IQGFIGPb' \
    --createHeadless 'true' \
    --device_id 'n88OB4d9' \
    --macAddress 'gSJQRUnr' \
    --platform_token 'JaWs8lKK' \
    --serviceLabel '0.7435989973137654' \
    --skipSetCookie 'true' \
    > test.out 2>&1
eval_tap $? 263 'PlatformTokenGrantV3' test.out

#- 264 GetRevocationListV3
$CLI_EXE \
    --sn iam \
    --op GetRevocationListV3 \
    > test.out 2>&1
eval_tap $? 264 'GetRevocationListV3' test.out

#- 265 TokenRevocationV3
$CLI_EXE \
    --sn iam \
    --op TokenRevocationV3 \
    --token 'h13OICqs' \
    > test.out 2>&1
eval_tap $? 265 'TokenRevocationV3' test.out

#- 266 SimultaneousLoginV3
$CLI_EXE \
    --sn iam \
    --op SimultaneousLoginV3 \
    --simultaneousPlatform 'BotNIH19' \
    --simultaneousTicket 'Bk5aVBac' \
    --nativePlatform 'steam' \
    --nativePlatformTicket 'ZC3p5W68' \
    > test.out 2>&1
eval_tap $? 266 'SimultaneousLoginV3' test.out

#- 267 TokenGrantV3
$CLI_EXE \
    --sn iam \
    --op TokenGrantV3 \
    --additionalData '8FxBv0hx' \
    --client_id '7v0zJKug' \
    --client_secret 'q3wYwE2u' \
    --code '1udsTldF' \
    --code_verifier 'QkXRapkc' \
    --extendNamespace 'AcrmwrQP' \
    --extend_exp 'false' \
    --password 'GiMYahnE' \
    --redirect_uri 'Iiwo8Fo2' \
    --refresh_token 'jFy0xV1c' \
    --scope 'k8TDlF9J' \
    --username 'IG2OI4qS' \
    --grant_type 'client_credentials' \
    > test.out 2>&1
eval_tap $? 267 'TokenGrantV3' test.out

#- 268 VerifyTokenV3
$CLI_EXE \
    --sn iam \
    --op VerifyTokenV3 \
    --token '8kV1qt82' \
    > test.out 2>&1
eval_tap $? 268 'VerifyTokenV3' test.out

#- 269 PlatformAuthenticationV3
$CLI_EXE \
    --sn iam \
    --op PlatformAuthenticationV3 \
    --platformId 'Rp7mj1RX' \
    --code 'q5psYdEJ' \
    --error 'w1WzuF8s' \
    --openidAssocHandle 'GzG2jwQa' \
    --openidClaimedId '53rgPstY' \
    --openidIdentity '7AX2i4lk' \
    --openidMode 'LEqaScKp' \
    --openidNs 'qAy5kHXu' \
    --openidOpEndpoint 'V8CSq1Xs' \
    --openidResponseNonce 'BJwvEzWw' \
    --openidReturnTo 'f2PZEi9j' \
    --openidSig 'cuCKXRvj' \
    --openidSigned 'IzsHmzj3' \
    --state 'z7zDtcsb' \
    > test.out 2>&1
eval_tap $? 269 'PlatformAuthenticationV3' test.out

#- 270 PlatformTokenRefreshV3
$CLI_EXE \
    --sn iam \
    --op PlatformTokenRefreshV3 \
    --platformId 'jYSyn2b9' \
    --platform_token 'VNrpGFED' \
    > test.out 2>&1
eval_tap $? 270 'PlatformTokenRefreshV3' test.out

#- 271 PublicGetInputValidations
$CLI_EXE \
    --sn iam \
    --op PublicGetInputValidations \
    --defaultOnEmpty 'true' \
    --languageCode 'nsJeyAqH' \
    > test.out 2>&1
eval_tap $? 271 'PublicGetInputValidations' test.out

#- 272 PublicGetInputValidationByField
$CLI_EXE \
    --sn iam \
    --op PublicGetInputValidationByField \
    --field '47RJ2Kym' \
    > test.out 2>&1
eval_tap $? 272 'PublicGetInputValidationByField' test.out

#- 273 PublicGetCountryAgeRestrictionV3
$CLI_EXE \
    --sn iam \
    --op PublicGetCountryAgeRestrictionV3 \
    --countryCode 'arRoCsRX' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 273 'PublicGetCountryAgeRestrictionV3' test.out

#- 274 PublicGetConfigValueV3
$CLI_EXE \
    --sn iam \
    --op PublicGetConfigValueV3 \
    --configKey 'd9QG59VC' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 274 'PublicGetConfigValueV3' test.out

#- 275 PublicGetCountryListV3
$CLI_EXE \
    --sn iam \
    --op PublicGetCountryListV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 275 'PublicGetCountryListV3' test.out

#- 276 RetrieveAllActiveThirdPartyLoginPlatformCredentialPublicV3
$CLI_EXE \
    --sn iam \
    --op RetrieveAllActiveThirdPartyLoginPlatformCredentialPublicV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 276 'RetrieveAllActiveThirdPartyLoginPlatformCredentialPublicV3' test.out

#- 277 RetrieveActiveOIDCClientsPublicV3
$CLI_EXE \
    --sn iam \
    --op RetrieveActiveOIDCClientsPublicV3 \
    --namespace $AB_NAMESPACE \
    --clientId 'QoKb7lkL' \
    > test.out 2>&1
eval_tap $? 277 'RetrieveActiveOIDCClientsPublicV3' test.out

#- 278 PublicListUserIDByPlatformUserIDsV3
eval_tap 0 278 'PublicListUserIDByPlatformUserIDsV3 # SKIP deprecated' test.out

#- 279 PublicGetUserByPlatformUserIDV3
eval_tap 0 279 'PublicGetUserByPlatformUserIDV3 # SKIP deprecated' test.out

#- 280 PublicGetProfileUpdateStrategyV3
$CLI_EXE \
    --sn iam \
    --op PublicGetProfileUpdateStrategyV3 \
    --namespace $AB_NAMESPACE \
    --field 'country' \
    > test.out 2>&1
eval_tap $? 280 'PublicGetProfileUpdateStrategyV3' test.out

#- 281 PublicGetAsyncStatus
$CLI_EXE \
    --sn iam \
    --op PublicGetAsyncStatus \
    --namespace $AB_NAMESPACE \
    --requestId '4VSm1qVP' \
    > test.out 2>&1
eval_tap $? 281 'PublicGetAsyncStatus' test.out

#- 282 PublicSearchUserV3
$CLI_EXE \
    --sn iam \
    --op PublicSearchUserV3 \
    --namespace $AB_NAMESPACE \
    --by 'k7RSY1tT' \
    --limit '69' \
    --offset '80' \
    --platformBy 'dT1I9vS0' \
    --platformId '6WUWE9ZA' \
    --query 'FEqt94wu' \
    > test.out 2>&1
eval_tap $? 282 'PublicSearchUserV3' test.out

#- 283 PublicCreateUserV3
# body param: body
echo '{"PasswordMD5Sum": "nfgof6Fk", "acceptedPolicies": [{"isAccepted": false, "localizedPolicyVersionId": "KuCsKOAU", "policyId": "u3uzDC9p", "policyVersionId": "jXj0RJtE"}, {"isAccepted": true, "localizedPolicyVersionId": "JWElSrSk", "policyId": "I7G416en", "policyVersionId": "KCkIIee8"}, {"isAccepted": true, "localizedPolicyVersionId": "f7JYwbnX", "policyId": "VKBgNjfE", "policyVersionId": "wQwFNobY"}], "authType": "Ci6rYh3S", "code": "Ysc7dwkj", "country": "otA1gpvS", "dateOfBirth": "ufHG5XVw", "displayName": "uEJ7E3Y8", "emailAddress": "iZ4qeJuM", "password": "RvoHw9Hk", "reachMinimumAge": false, "uniqueDisplayName": "WLrba4UM"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicCreateUserV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 283 'PublicCreateUserV3' test.out

#- 284 CheckUserAvailability
$CLI_EXE \
    --sn iam \
    --op CheckUserAvailability \
    --namespace $AB_NAMESPACE \
    --field 'mTtJOk3R' \
    --query 'L89xIhch' \
    > test.out 2>&1
eval_tap $? 284 'CheckUserAvailability' test.out

#- 285 PublicBulkGetUsers
eval_tap 0 285 'PublicBulkGetUsers # SKIP deprecated' test.out

#- 286 PublicSendRegistrationCode
# body param: body
echo '{"emailAddress": "WSyPmKom", "languageTag": "EIICTKsd"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicSendRegistrationCode \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 286 'PublicSendRegistrationCode' test.out

#- 287 PublicVerifyRegistrationCode
# body param: body
echo '{"code": "DXI9xmOL", "emailAddress": "lHCu0aCx"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicVerifyRegistrationCode \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 287 'PublicVerifyRegistrationCode' test.out

#- 288 PublicForgotPasswordV3
# body param: body
echo '{"emailAddress": "vZ60aIgK", "languageTag": "D4K2LqY8"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicForgotPasswordV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 288 'PublicForgotPasswordV3' test.out

#- 289 PublicValidateUserInput
# body param: body
echo '{"displayName": "lCYW9RrL", "password": "f9XtHC5n", "uniqueDisplayName": "YOuedWzc", "username": "Ohe1XUg5"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicValidateUserInput \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 289 'PublicValidateUserInput' test.out

#- 290 GetAdminInvitationV3
$CLI_EXE \
    --sn iam \
    --op GetAdminInvitationV3 \
    --invitationId '6OnIesLH' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 290 'GetAdminInvitationV3' test.out

#- 291 CreateUserFromInvitationV3
# body param: body
echo '{"PasswordMD5Sum": "fXIYeV4A", "acceptedPolicies": [{"isAccepted": false, "localizedPolicyVersionId": "MK1BzpNz", "policyId": "irQZO0ic", "policyVersionId": "sXwCBrrq"}, {"isAccepted": true, "localizedPolicyVersionId": "ngHEluvu", "policyId": "d3c2LOT0", "policyVersionId": "F35Lu1Y7"}, {"isAccepted": true, "localizedPolicyVersionId": "oXrBiPeq", "policyId": "yFozKSSO", "policyVersionId": "WUJsARNX"}], "authType": "jF6zzyUd", "code": "6ektxIPk", "country": "EG1ffU4F", "dateOfBirth": "yUi7yNUY", "displayName": "S3GtEevA", "emailAddress": "SapyvfVr", "password": "wcUbl6uR", "reachMinimumAge": true, "uniqueDisplayName": "mcPVc62z"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op CreateUserFromInvitationV3 \
    --invitationId 'uuL7D6ji' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 291 'CreateUserFromInvitationV3' test.out

#- 292 UpdateUserV3
# body param: body
echo '{"avatarUrl": "HV1FALkw", "country": "NGZwwJCO", "dateOfBirth": "wsHkp2pn", "displayName": "BPZ2kuX7", "languageTag": "gUsPGyr8", "uniqueDisplayName": "aFGVgxHp", "userName": "QBFX2Y4T"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op UpdateUserV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 292 'UpdateUserV3' test.out

#- 293 PublicPartialUpdateUserV3
# body param: body
echo '{"avatarUrl": "JBcrKSyS", "country": "hBF9YqIh", "dateOfBirth": "WO39Hnhw", "displayName": "y2p4a2K6", "languageTag": "0WfLL8Q4", "uniqueDisplayName": "bLB5GdoR", "userName": "tjzCBnrB"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicPartialUpdateUserV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 293 'PublicPartialUpdateUserV3' test.out

#- 294 PublicSendVerificationCodeV3
# body param: body
echo '{"context": "MlJOdsO9", "emailAddress": "zcpXFAkU", "languageTag": "opvsHX19", "upgradeToken": "KMoKqWPm"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicSendVerificationCodeV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 294 'PublicSendVerificationCodeV3' test.out

#- 295 PublicUserVerificationV3
# body param: body
echo '{"code": "dhtxcShR", "contactType": "yNsTLtcI", "languageTag": "PQKfpQfx", "validateOnly": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUserVerificationV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 295 'PublicUserVerificationV3' test.out

#- 296 PublicUpgradeHeadlessAccountV3
# body param: body
echo '{"code": "U5Ldo8Ke", "country": "sNSCMyP5", "dateOfBirth": "gBZoKjxU", "displayName": "T2Mnc7Ti", "emailAddress": "3w8DK7Jn", "password": "ADzlroHO", "uniqueDisplayName": "WOFkSJTa", "validateOnly": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpgradeHeadlessAccountV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 296 'PublicUpgradeHeadlessAccountV3' test.out

#- 297 PublicVerifyHeadlessAccountV3
# body param: body
echo '{"emailAddress": "YO0Do98g", "password": "UKHtV9zE"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicVerifyHeadlessAccountV3 \
    --namespace $AB_NAMESPACE \
    --needVerificationCode 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 297 'PublicVerifyHeadlessAccountV3' test.out

#- 298 PublicUpdatePasswordV3
# body param: body
echo '{"languageTag": "vQuNjQSr", "mfaToken": "okgfO4Wf", "newPassword": "lzMcVVxJ", "oldPassword": "KjDcgg50"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpdatePasswordV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 298 'PublicUpdatePasswordV3' test.out

#- 299 PublicCreateJusticeUser
$CLI_EXE \
    --sn iam \
    --op PublicCreateJusticeUser \
    --namespace $AB_NAMESPACE \
    --targetNamespace 'QXJGAh3Z' \
    > test.out 2>&1
eval_tap $? 299 'PublicCreateJusticeUser' test.out

#- 300 PublicPlatformLinkV3
$CLI_EXE \
    --sn iam \
    --op PublicPlatformLinkV3 \
    --namespace $AB_NAMESPACE \
    --platformId '1NH2Zzz7' \
    --redirectUri 'grhlBjQ7' \
    --ticket 'mJUYz2gl' \
    > test.out 2>&1
eval_tap $? 300 'PublicPlatformLinkV3' test.out

#- 301 PublicPlatformUnlinkV3
eval_tap 0 301 'PublicPlatformUnlinkV3 # SKIP deprecated' test.out

#- 302 PublicPlatformUnlinkAllV3
$CLI_EXE \
    --sn iam \
    --op PublicPlatformUnlinkAllV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'MXE52MBr' \
    > test.out 2>&1
eval_tap $? 302 'PublicPlatformUnlinkAllV3' test.out

#- 303 PublicForcePlatformLinkV3
$CLI_EXE \
    --sn iam \
    --op PublicForcePlatformLinkV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'xFE7YY4X' \
    --ticket '0Gvn7qxG' \
    > test.out 2>&1
eval_tap $? 303 'PublicForcePlatformLinkV3' test.out

#- 304 PublicWebLinkPlatform
$CLI_EXE \
    --sn iam \
    --op PublicWebLinkPlatform \
    --namespace $AB_NAMESPACE \
    --platformId 'LPV5RTiT' \
    --clientId 'lYmBA4Gn' \
    --redirectUri '5rZWpmKE' \
    > test.out 2>&1
eval_tap $? 304 'PublicWebLinkPlatform' test.out

#- 305 PublicWebLinkPlatformEstablish
$CLI_EXE \
    --sn iam \
    --op PublicWebLinkPlatformEstablish \
    --namespace $AB_NAMESPACE \
    --platformId 'oohKyPMJ' \
    --code 'tYbt1ieR' \
    --state 'oI0KPErV' \
    > test.out 2>&1
eval_tap $? 305 'PublicWebLinkPlatformEstablish' test.out

#- 306 PublicProcessWebLinkPlatformV3
$CLI_EXE \
    --sn iam \
    --op PublicProcessWebLinkPlatformV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'RqKPnUJb' \
    --code 'R09EgT7m' \
    --state 'bdpT2zPz' \
    > test.out 2>&1
eval_tap $? 306 'PublicProcessWebLinkPlatformV3' test.out

#- 307 PublicGetUsersPlatformInfosV3
# body param: body
echo '{"platformId": "HUP7AI7a", "userIds": ["f6U5neO9", "5r30jRrf", "ObMc5KTS"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicGetUsersPlatformInfosV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 307 'PublicGetUsersPlatformInfosV3' test.out

#- 308 ResetPasswordV3
# body param: body
echo '{"clientId": "lpiA033P", "code": "IWROxNx2", "emailAddress": "8NVZH7xs", "languageTag": "iAXfybeU", "newPassword": "xsN7xHx6"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op ResetPasswordV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 308 'ResetPasswordV3' test.out

#- 309 PublicGetUserByUserIdV3
eval_tap 0 309 'PublicGetUserByUserIdV3 # SKIP deprecated' test.out

#- 310 PublicGetUserBanHistoryV3
$CLI_EXE \
    --sn iam \
    --op PublicGetUserBanHistoryV3 \
    --namespace $AB_NAMESPACE \
    --userId 'jfeN9AyQ' \
    --activeOnly 'false' \
    --after '6IIlFx4d' \
    --before '0Qtsb1VJ' \
    --limit '51' \
    > test.out 2>&1
eval_tap $? 310 'PublicGetUserBanHistoryV3' test.out

#- 311 PublicListUserAllPlatformAccountsDistinctV3
$CLI_EXE \
    --sn iam \
    --op PublicListUserAllPlatformAccountsDistinctV3 \
    --namespace $AB_NAMESPACE \
    --userId 'kSRKQtxh' \
    > test.out 2>&1
eval_tap $? 311 'PublicListUserAllPlatformAccountsDistinctV3' test.out

#- 312 PublicGetUserInformationV3
$CLI_EXE \
    --sn iam \
    --op PublicGetUserInformationV3 \
    --namespace $AB_NAMESPACE \
    --userId 'MjIijJbz' \
    > test.out 2>&1
eval_tap $? 312 'PublicGetUserInformationV3' test.out

#- 313 PublicGetUserLoginHistoriesV3
$CLI_EXE \
    --sn iam \
    --op PublicGetUserLoginHistoriesV3 \
    --namespace $AB_NAMESPACE \
    --userId 't8HU7K5H' \
    --after '0.1460370048858255' \
    --before '0.3789366966402432' \
    --limit '48' \
    > test.out 2>&1
eval_tap $? 313 'PublicGetUserLoginHistoriesV3' test.out

#- 314 PublicGetUserPlatformAccountsV3
$CLI_EXE \
    --sn iam \
    --op PublicGetUserPlatformAccountsV3 \
    --namespace $AB_NAMESPACE \
    --userId 'EAkQt1uD' \
    --after '0ptcEE9F' \
    --before 'LeOarvKS' \
    --limit '80' \
    --platformId 'LZfLXQVx' \
    > test.out 2>&1
eval_tap $? 314 'PublicGetUserPlatformAccountsV3' test.out

#- 315 PublicListJusticePlatformAccountsV3
$CLI_EXE \
    --sn iam \
    --op PublicListJusticePlatformAccountsV3 \
    --namespace $AB_NAMESPACE \
    --userId '3myTPZwa' \
    > test.out 2>&1
eval_tap $? 315 'PublicListJusticePlatformAccountsV3' test.out

#- 316 PublicLinkPlatformAccount
# body param: body
echo '{"platformId": "jSUT7Fri", "platformUserId": "No9b7ouN"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicLinkPlatformAccount \
    --namespace $AB_NAMESPACE \
    --userId 'trYWmrtR' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 316 'PublicLinkPlatformAccount' test.out

#- 317 PublicForceLinkPlatformWithProgression
# body param: body
echo '{"chosenNamespaces": ["m8XwBzsK", "LzDwx5AA", "3FO7ZXjK"], "requestId": "EdpgZ1bd"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicForceLinkPlatformWithProgression \
    --namespace $AB_NAMESPACE \
    --userId 'tlYxMRsj' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 317 'PublicForceLinkPlatformWithProgression' test.out

#- 318 PublicGetPublisherUserV3
$CLI_EXE \
    --sn iam \
    --op PublicGetPublisherUserV3 \
    --namespace $AB_NAMESPACE \
    --userId 'Wu9QgMQz' \
    > test.out 2>&1
eval_tap $? 318 'PublicGetPublisherUserV3' test.out

#- 319 PublicValidateUserByUserIDAndPasswordV3
$CLI_EXE \
    --sn iam \
    --op PublicValidateUserByUserIDAndPasswordV3 \
    --namespace $AB_NAMESPACE \
    --userId '7HSjhDjP' \
    --password 'Z549NZKO' \
    > test.out 2>&1
eval_tap $? 319 'PublicValidateUserByUserIDAndPasswordV3' test.out

#- 320 PublicGetRolesV3
$CLI_EXE \
    --sn iam \
    --op PublicGetRolesV3 \
    --after '6tnLoVPI' \
    --before 'JtZaq6CQ' \
    --isWildcard 'false' \
    --limit '92' \
    > test.out 2>&1
eval_tap $? 320 'PublicGetRolesV3' test.out

#- 321 PublicGetRoleV3
$CLI_EXE \
    --sn iam \
    --op PublicGetRoleV3 \
    --roleId 'mHC3dPoA' \
    > test.out 2>&1
eval_tap $? 321 'PublicGetRoleV3' test.out

#- 322 PublicForgotPasswordWithoutNamespaceV3
# body param: body
echo '{"clientId": "ygZH4gxq", "emailAddress": "z0DUn6N5", "languageTag": "zGFpPTGU"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicForgotPasswordWithoutNamespaceV3 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 322 'PublicForgotPasswordWithoutNamespaceV3' test.out

#- 323 PublicGetMyUserV3
$CLI_EXE \
    --sn iam \
    --op PublicGetMyUserV3 \
    --includeAllPlatforms 'true' \
    > test.out 2>&1
eval_tap $? 323 'PublicGetMyUserV3' test.out

#- 324 PublicSendCodeForwardV3
# body param: body
echo '{"context": "I5qAFwXE", "emailAddress": "XZXKU2Rb", "languageTag": "COytSB7p", "upgradeToken": "TZmcKfns"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicSendCodeForwardV3 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 324 'PublicSendCodeForwardV3' test.out

#- 325 PublicGetLinkHeadlessAccountToMyAccountConflictV3
$CLI_EXE \
    --sn iam \
    --op PublicGetLinkHeadlessAccountToMyAccountConflictV3 \
    --oneTimeLinkCode 'fZH6lEWU' \
    > test.out 2>&1
eval_tap $? 325 'PublicGetLinkHeadlessAccountToMyAccountConflictV3' test.out

#- 326 LinkHeadlessAccountToMyAccountV3
# body param: body
echo '{"chosenNamespaces": ["vVaJYvPA", "fAo6GUft", "EQiQsR7I"], "oneTimeLinkCode": "yRSCSetf"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op LinkHeadlessAccountToMyAccountV3 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 326 'LinkHeadlessAccountToMyAccountV3' test.out

#- 327 PublicGetMyRedirectionAfterLinkV3
$CLI_EXE \
    --sn iam \
    --op PublicGetMyRedirectionAfterLinkV3 \
    --oneTimeLinkCode 'RtkOjDRA' \
    > test.out 2>&1
eval_tap $? 327 'PublicGetMyRedirectionAfterLinkV3' test.out

#- 328 PublicGetMyProfileAllowUpdateStatusV3
$CLI_EXE \
    --sn iam \
    --op PublicGetMyProfileAllowUpdateStatusV3 \
    > test.out 2>&1
eval_tap $? 328 'PublicGetMyProfileAllowUpdateStatusV3' test.out

#- 329 PublicSendVerificationLinkV3
# body param: body
echo '{"languageTag": "QgKUQ2zw"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicSendVerificationLinkV3 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 329 'PublicSendVerificationLinkV3' test.out

#- 330 PublicGetOpenidUserInfoV3
$CLI_EXE \
    --sn iam \
    --op PublicGetOpenidUserInfoV3 \
    > test.out 2>&1
eval_tap $? 330 'PublicGetOpenidUserInfoV3' test.out

#- 331 PublicVerifyUserByLinkV3
$CLI_EXE \
    --sn iam \
    --op PublicVerifyUserByLinkV3 \
    --code 'JyeQETR4' \
    > test.out 2>&1
eval_tap $? 331 'PublicVerifyUserByLinkV3' test.out

#- 332 PlatformAuthenticateSAMLV3Handler
$CLI_EXE \
    --sn iam \
    --op PlatformAuthenticateSAMLV3Handler \
    --platformId 'msLhShNU' \
    --code 'QyUjCCi7' \
    --error 'TPMsscgX' \
    --state 'guyPJBYr' \
    > test.out 2>&1
eval_tap $? 332 'PlatformAuthenticateSAMLV3Handler' test.out

#- 333 LoginSSOClient
$CLI_EXE \
    --sn iam \
    --op LoginSSOClient \
    --platformId 'KtxF1uTQ' \
    --payload '7XgNcjWz' \
    > test.out 2>&1
eval_tap $? 333 'LoginSSOClient' test.out

#- 334 LogoutSSOClient
$CLI_EXE \
    --sn iam \
    --op LogoutSSOClient \
    --platformId 'uFyvzdfv' \
    > test.out 2>&1
eval_tap $? 334 'LogoutSSOClient' test.out

#- 335 RequestTargetTokenResponseV3
$CLI_EXE \
    --sn iam \
    --op RequestTargetTokenResponseV3 \
    --additionalData '9WVE8r1e' \
    --code 'U1GKskhi' \
    > test.out 2>&1
eval_tap $? 335 'RequestTargetTokenResponseV3' test.out

#- 336 UpgradeAndAuthenticateForwardV3
$CLI_EXE \
    --sn iam \
    --op UpgradeAndAuthenticateForwardV3 \
    --client_id '89u5ZwE0' \
    --upgrade_success_token 'Q70IxuKk' \
    > test.out 2>&1
eval_tap $? 336 'UpgradeAndAuthenticateForwardV3' test.out

#- 337 AdminListInvitationHistoriesV4
$CLI_EXE \
    --sn iam \
    --op AdminListInvitationHistoriesV4 \
    --limit '65' \
    --namespace_ '4oNXWk4t' \
    --offset '4' \
    > test.out 2>&1
eval_tap $? 337 'AdminListInvitationHistoriesV4' test.out

#- 338 AdminGetDevicesByUserV4
$CLI_EXE \
    --sn iam \
    --op AdminGetDevicesByUserV4 \
    --namespace $AB_NAMESPACE \
    --userId 'EqzXXpoV' \
    > test.out 2>&1
eval_tap $? 338 'AdminGetDevicesByUserV4' test.out

#- 339 AdminGetBannedDevicesV4
$CLI_EXE \
    --sn iam \
    --op AdminGetBannedDevicesV4 \
    --namespace $AB_NAMESPACE \
    --deviceType 'ZZdsmznH' \
    --endDate 'HhcwMCuE' \
    --limit '29' \
    --offset '64' \
    --startDate '3WVmrhh5' \
    > test.out 2>&1
eval_tap $? 339 'AdminGetBannedDevicesV4' test.out

#- 340 AdminGetUserDeviceBansV4
$CLI_EXE \
    --sn iam \
    --op AdminGetUserDeviceBansV4 \
    --namespace $AB_NAMESPACE \
    --userId 'cCE60Cw2' \
    > test.out 2>&1
eval_tap $? 340 'AdminGetUserDeviceBansV4' test.out

#- 341 AdminBanDeviceV4
# body param: body
echo '{"comment": "HhJj8HoR", "deviceId": "928P5hTL", "deviceType": "ZRGtcR5H", "enabled": true, "endDate": "3s5WVwy6", "ext": {"DgthniI6": {}, "ggqrFM2z": {}, "UkImU6jO": {}}, "reason": "yjaqwtjs"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBanDeviceV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 341 'AdminBanDeviceV4' test.out

#- 342 AdminGetDeviceBanV4
$CLI_EXE \
    --sn iam \
    --op AdminGetDeviceBanV4 \
    --banId 'M7i5y7vb' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 342 'AdminGetDeviceBanV4' test.out

#- 343 AdminUpdateDeviceBanV4
# body param: body
echo '{"enabled": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateDeviceBanV4 \
    --banId 'dWiXfX4C' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 343 'AdminUpdateDeviceBanV4' test.out

#- 344 AdminGenerateReportV4
$CLI_EXE \
    --sn iam \
    --op AdminGenerateReportV4 \
    --namespace $AB_NAMESPACE \
    --endDate 'PBQPliP2' \
    --startDate 'QJse9Z33' \
    --deviceType 'PCJKcJju' \
    > test.out 2>&1
eval_tap $? 344 'AdminGenerateReportV4' test.out

#- 345 AdminGetDeviceTypesV4
$CLI_EXE \
    --sn iam \
    --op AdminGetDeviceTypesV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 345 'AdminGetDeviceTypesV4' test.out

#- 346 AdminGetDeviceBansV4
$CLI_EXE \
    --sn iam \
    --op AdminGetDeviceBansV4 \
    --deviceId 'Fy1T4UUM' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 346 'AdminGetDeviceBansV4' test.out

#- 347 AdminDecryptDeviceV4
eval_tap 0 347 'AdminDecryptDeviceV4 # SKIP deprecated' test.out

#- 348 AdminUnbanDeviceV4
$CLI_EXE \
    --sn iam \
    --op AdminUnbanDeviceV4 \
    --deviceId 'EeFqqHK9' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 348 'AdminUnbanDeviceV4' test.out

#- 349 AdminGetUsersByDeviceV4
$CLI_EXE \
    --sn iam \
    --op AdminGetUsersByDeviceV4 \
    --deviceId 'fWTYNz8B' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 349 'AdminGetUsersByDeviceV4' test.out

#- 350 AdminGetNamespaceInvitationHistoryV4
$CLI_EXE \
    --sn iam \
    --op AdminGetNamespaceInvitationHistoryV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 350 'AdminGetNamespaceInvitationHistoryV4' test.out

#- 351 AdminGetNamespaceUserInvitationHistoryV4
$CLI_EXE \
    --sn iam \
    --op AdminGetNamespaceUserInvitationHistoryV4 \
    --namespace $AB_NAMESPACE \
    --limit '25' \
    --offset '75' \
    > test.out 2>&1
eval_tap $? 351 'AdminGetNamespaceUserInvitationHistoryV4' test.out

#- 352 AdminCreateTestUsersV4
# body param: body
echo '{"count": 16, "userInfo": {"country": "N1PpuzVX"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminCreateTestUsersV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 352 'AdminCreateTestUsersV4' test.out

#- 353 AdminCreateUserV4
# body param: body
echo '{"acceptedPolicies": [{"isAccepted": false, "localizedPolicyVersionId": "J0wShFWg", "policyId": "aMPDRXd5", "policyVersionId": "iBUK8cm7"}, {"isAccepted": true, "localizedPolicyVersionId": "FUjohEIl", "policyId": "UhUhNHDT", "policyVersionId": "2c2SvkiF"}, {"isAccepted": true, "localizedPolicyVersionId": "4k6l9y1g", "policyId": "OJPzdyeU", "policyVersionId": "lSYQpjMx"}], "authType": "EMAILPASSWD", "code": "0rwcJt2X", "country": "d9bMDCwQ", "dateOfBirth": "Ubq3J5JC", "displayName": "yaQdIwWC", "emailAddress": "8mbm4PEx", "password": "PvmQrS6v", "passwordMD5Sum": "Oh9A2yd5", "reachMinimumAge": true, "uniqueDisplayName": "xNjqsS0I", "username": "Jncd4ILW"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminCreateUserV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 353 'AdminCreateUserV4' test.out

#- 354 AdminBulkUpdateUserAccountTypeV4
# body param: body
echo '{"testAccount": true, "userIds": ["zQl9hUbd", "mkaU4PW8", "ixCVG05f"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBulkUpdateUserAccountTypeV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 354 'AdminBulkUpdateUserAccountTypeV4' test.out

#- 355 AdminBulkCheckValidUserIDV4
# body param: body
echo '{"userIds": ["pRH9MIyJ", "kujTqCpu", "YRsja6os"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBulkCheckValidUserIDV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 355 'AdminBulkCheckValidUserIDV4' test.out

#- 356 AdminUpdateUserV4
# body param: body
echo '{"avatarUrl": "T44E7EKz", "country": "kGVSL00p", "dateOfBirth": "iO1s6GXE", "displayName": "PWayBFQa", "languageTag": "jVrbS5eL", "skipLoginQueue": false, "tags": ["tHCM1BJv", "v9S0TdfX", "uSWrDjZ4"], "uniqueDisplayName": "LqGMtOYi", "userName": "x8ge4pJN"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserV4 \
    --namespace $AB_NAMESPACE \
    --userId 'lTiBiQ6j' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 356 'AdminUpdateUserV4' test.out

#- 357 AdminUpdateUserEmailAddressV4
# body param: body
echo '{"code": "ueRkOCBB", "emailAddress": "Ulg9P1X1"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserEmailAddressV4 \
    --namespace $AB_NAMESPACE \
    --userId 'bJOT5YbI' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 357 'AdminUpdateUserEmailAddressV4' test.out

#- 358 AdminDisableUserMFAV4
# body param: body
echo '{"factor": "AmqoIJkS", "mfaToken": "brofz5XM"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDisableUserMFAV4 \
    --namespace $AB_NAMESPACE \
    --userId 'ndf40msL' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 358 'AdminDisableUserMFAV4' test.out

#- 359 AdminGetUserMFAStatusV4
$CLI_EXE \
    --sn iam \
    --op AdminGetUserMFAStatusV4 \
    --namespace $AB_NAMESPACE \
    --userId '9fnnLWuo' \
    > test.out 2>&1
eval_tap $? 359 'AdminGetUserMFAStatusV4' test.out

#- 360 AdminListUserRolesV4
$CLI_EXE \
    --sn iam \
    --op AdminListUserRolesV4 \
    --namespace $AB_NAMESPACE \
    --userId 'tWyYTrnX' \
    > test.out 2>&1
eval_tap $? 360 'AdminListUserRolesV4' test.out

#- 361 AdminUpdateUserRoleV4
# body param: body
echo '{"assignedNamespaces": ["nv8P4oQw", "YYy5vmSj", "LIgI8mpF"], "roleId": "AyTenu1S"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserRoleV4 \
    --namespace $AB_NAMESPACE \
    --userId '1oTcQRF2' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 361 'AdminUpdateUserRoleV4' test.out

#- 362 AdminAddUserRoleV4
# body param: body
echo '{"assignedNamespaces": ["lmVMj4H8", "vb9KUae2", "7qZaCscW"], "roleId": "YBDA7TI9"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddUserRoleV4 \
    --namespace $AB_NAMESPACE \
    --userId 'nR4s6xOj' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 362 'AdminAddUserRoleV4' test.out

#- 363 AdminRemoveUserRoleV4
# body param: body
echo '{"assignedNamespaces": ["Ge9M78S0", "8Vm9CJjv", "1TPHjm8m"], "roleId": "Bui8uk7I"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminRemoveUserRoleV4 \
    --namespace $AB_NAMESPACE \
    --userId 'Lyelhime' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 363 'AdminRemoveUserRoleV4' test.out

#- 364 AdminGetRolesV4
$CLI_EXE \
    --sn iam \
    --op AdminGetRolesV4 \
    --adminRole 'true' \
    --isWildcard 'false' \
    --limit '89' \
    --offset '77' \
    > test.out 2>&1
eval_tap $? 364 'AdminGetRolesV4' test.out

#- 365 AdminCreateRoleV4
# body param: body
echo '{"adminRole": false, "deletable": true, "isWildcard": false, "roleName": "ocyY7VuR"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminCreateRoleV4 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 365 'AdminCreateRoleV4' test.out

#- 366 AdminGetRoleV4
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleV4 \
    --roleId 'yXm1yEj5' \
    > test.out 2>&1
eval_tap $? 366 'AdminGetRoleV4' test.out

#- 367 AdminDeleteRoleV4
$CLI_EXE \
    --sn iam \
    --op AdminDeleteRoleV4 \
    --roleId 'cAAogyjV' \
    > test.out 2>&1
eval_tap $? 367 'AdminDeleteRoleV4' test.out

#- 368 AdminUpdateRoleV4
# body param: body
echo '{"adminRole": true, "deletable": true, "isWildcard": false, "roleName": "RIDqWc6d"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateRoleV4 \
    --roleId 'vb2UtfH8' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 368 'AdminUpdateRoleV4' test.out

#- 369 AdminUpdateRolePermissionsV4
# body param: body
echo '{"permissions": [{"action": 94, "resource": "sFuv5G8e", "schedAction": 31, "schedCron": "eryPdXrv", "schedRange": ["UYdIGeDr", "piT7jrDM", "a5jJjraw"]}, {"action": 92, "resource": "BwwH2oZs", "schedAction": 58, "schedCron": "8kF9050e", "schedRange": ["oIoisFDs", "QWKWOU3b", "wm2WEIkp"]}, {"action": 100, "resource": "1XYlneFN", "schedAction": 87, "schedCron": "UByIiDmo", "schedRange": ["IsjavIx9", "UzkfyHpH", "YwuJihBC"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateRolePermissionsV4 \
    --roleId 'y2PnXwrp' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 369 'AdminUpdateRolePermissionsV4' test.out

#- 370 AdminAddRolePermissionsV4
# body param: body
echo '{"permissions": [{"action": 45, "resource": "0Pf9pXjC", "schedAction": 36, "schedCron": "wT2bkcbK", "schedRange": ["3D9jJbiT", "YHuyFULT", "ZJdqARkX"]}, {"action": 28, "resource": "N2FmzvuP", "schedAction": 44, "schedCron": "amsdtRKd", "schedRange": ["RWaPadxm", "7MDLUqWk", "ebURCAYN"]}, {"action": 60, "resource": "jOBNipeZ", "schedAction": 69, "schedCron": "VhOUjOUE", "schedRange": ["NPDoLBml", "kSbKYFC4", "KkQOaH7l"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddRolePermissionsV4 \
    --roleId 'QvT6I4uB' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 370 'AdminAddRolePermissionsV4' test.out

#- 371 AdminDeleteRolePermissionsV4
# body param: body
echo '["XNLSWGcf", "nZvuQ2IJ", "I8yMtdwl"]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDeleteRolePermissionsV4 \
    --roleId '67tWdTTJ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 371 'AdminDeleteRolePermissionsV4' test.out

#- 372 AdminListAssignedUsersV4
$CLI_EXE \
    --sn iam \
    --op AdminListAssignedUsersV4 \
    --roleId '4xHfluCX' \
    --after 'vcopVpW2' \
    --before 'rRmslfSc' \
    --limit '68' \
    > test.out 2>&1
eval_tap $? 372 'AdminListAssignedUsersV4' test.out

#- 373 AdminAssignUserToRoleV4
# body param: body
echo '{"assignedNamespaces": ["IPv7cSlb", "QZL8rw4z", "zXkm1YIG"], "namespace": "brSAqCB1", "userId": "X2KSsD6M"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAssignUserToRoleV4 \
    --roleId 'I3B7fhVk' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 373 'AdminAssignUserToRoleV4' test.out

#- 374 AdminRevokeUserFromRoleV4
# body param: body
echo '{"namespace": "oXY5iWTj", "userId": "KbfmcTq1"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminRevokeUserFromRoleV4 \
    --roleId 'G1GyerZp' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 374 'AdminRevokeUserFromRoleV4' test.out

#- 375 AdminInviteUserNewV4
# body param: body
echo '{"assignedNamespaces": ["2DBc5bdg", "I3jwCYJS", "J5L7FYSU"], "emailAddresses": ["fnqyEyTJ", "7OSPdHKU", "7BOpav1J"], "isAdmin": true, "isNewStudio": true, "languageTag": "vMS9Zjcs", "namespace": "jMMNL4Jk", "roleId": "qzIlMium"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminInviteUserNewV4 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 375 'AdminInviteUserNewV4' test.out

#- 376 AdminUpdateMyUserV4
# body param: body
echo '{"avatarUrl": "Axu5uXo6", "country": "OcOuXhkR", "dateOfBirth": "lFgrOtHp", "displayName": "gogOBri1", "languageTag": "nwzjxP89", "skipLoginQueue": true, "tags": ["1M8TnH5h", "QeWEvkec", "shPPUxzu"], "uniqueDisplayName": "8ZnPZUKa", "userName": "OoML04h5"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateMyUserV4 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 376 'AdminUpdateMyUserV4' test.out

#- 377 AdminDisableMyAuthenticatorV4
# body param: body
echo '{"factor": "UjDYymd3", "mfaToken": "1XrOc1kC"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDisableMyAuthenticatorV4 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 377 'AdminDisableMyAuthenticatorV4' test.out

#- 378 AdminEnableMyAuthenticatorV4
$CLI_EXE \
    --sn iam \
    --op AdminEnableMyAuthenticatorV4 \
    --code 'zAsDjFtF' \
    > test.out 2>&1
eval_tap $? 378 'AdminEnableMyAuthenticatorV4' test.out

#- 379 AdminGenerateMyAuthenticatorKeyV4
$CLI_EXE \
    --sn iam \
    --op AdminGenerateMyAuthenticatorKeyV4 \
    > test.out 2>&1
eval_tap $? 379 'AdminGenerateMyAuthenticatorKeyV4' test.out

#- 380 AdminGetMyBackupCodesV4
eval_tap 0 380 'AdminGetMyBackupCodesV4 # SKIP deprecated' test.out

#- 381 AdminGenerateMyBackupCodesV4
eval_tap 0 381 'AdminGenerateMyBackupCodesV4 # SKIP deprecated' test.out

#- 382 AdminDisableMyBackupCodesV4
# body param: body
echo '{"factor": "QbLtZuxA", "mfaToken": "xI9nbI4f"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDisableMyBackupCodesV4 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 382 'AdminDisableMyBackupCodesV4' test.out

#- 383 AdminDownloadMyBackupCodesV4
eval_tap 0 383 'AdminDownloadMyBackupCodesV4 # SKIP deprecated' test.out

#- 384 AdminEnableMyBackupCodesV4
eval_tap 0 384 'AdminEnableMyBackupCodesV4 # SKIP deprecated' test.out

#- 385 AdminGetBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op AdminGetBackupCodesV4 \
    --languageTag 'PIpv62FE' \
    > test.out 2>&1
eval_tap $? 385 'AdminGetBackupCodesV4' test.out

#- 386 AdminGenerateBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op AdminGenerateBackupCodesV4 \
    --languageTag '6p30RXOk' \
    > test.out 2>&1
eval_tap $? 386 'AdminGenerateBackupCodesV4' test.out

#- 387 AdminEnableBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op AdminEnableBackupCodesV4 \
    --languageTag 'PZ4p8rNZ' \
    > test.out 2>&1
eval_tap $? 387 'AdminEnableBackupCodesV4' test.out

#- 388 AdminChallengeMyMFAV4
$CLI_EXE \
    --sn iam \
    --op AdminChallengeMyMFAV4 \
    --code '2PhNZlnZ' \
    --factor 'n6G58Iw5' \
    > test.out 2>&1
eval_tap $? 388 'AdminChallengeMyMFAV4' test.out

#- 389 AdminSendMyMFAEmailCodeV4
$CLI_EXE \
    --sn iam \
    --op AdminSendMyMFAEmailCodeV4 \
    --action 'pMMJltUq' \
    --languageTag 'ee6VLPPG' \
    > test.out 2>&1
eval_tap $? 389 'AdminSendMyMFAEmailCodeV4' test.out

#- 390 AdminDisableMyEmailV4
# body param: body
echo '{"factor": "vg7MwGGl", "mfaToken": "QvyeEY4E"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDisableMyEmailV4 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 390 'AdminDisableMyEmailV4' test.out

#- 391 AdminEnableMyEmailV4
$CLI_EXE \
    --sn iam \
    --op AdminEnableMyEmailV4 \
    --code '9Hinaj3J' \
    > test.out 2>&1
eval_tap $? 391 'AdminEnableMyEmailV4' test.out

#- 392 AdminGetMyEnabledFactorsV4
$CLI_EXE \
    --sn iam \
    --op AdminGetMyEnabledFactorsV4 \
    > test.out 2>&1
eval_tap $? 392 'AdminGetMyEnabledFactorsV4' test.out

#- 393 AdminMakeFactorMyDefaultV4
$CLI_EXE \
    --sn iam \
    --op AdminMakeFactorMyDefaultV4 \
    --factor 'BzNLZw8b' \
    > test.out 2>&1
eval_tap $? 393 'AdminMakeFactorMyDefaultV4' test.out

#- 394 AdminGetMyOwnMFAStatusV4
$CLI_EXE \
    --sn iam \
    --op AdminGetMyOwnMFAStatusV4 \
    > test.out 2>&1
eval_tap $? 394 'AdminGetMyOwnMFAStatusV4' test.out

#- 395 AdminGetMyMFAStatusV4
eval_tap 0 395 'AdminGetMyMFAStatusV4 # SKIP deprecated' test.out

#- 396 AdminInviteUserV4
eval_tap 0 396 'AdminInviteUserV4 # SKIP deprecated' test.out

#- 397 AuthenticationWithPlatformLinkV4
$CLI_EXE \
    --sn iam \
    --op AuthenticationWithPlatformLinkV4 \
    --extend_exp 'false' \
    --client_id 'bG3UQFmB' \
    --linkingToken 'LGp87Mm9' \
    --password 'SPCZ2a8D' \
    --username 'WzaJ2WPX' \
    > test.out 2>&1
eval_tap $? 397 'AuthenticationWithPlatformLinkV4' test.out

#- 398 GenerateTokenByNewHeadlessAccountV4
$CLI_EXE \
    --sn iam \
    --op GenerateTokenByNewHeadlessAccountV4 \
    --additionalData 'mvoOffK7' \
    --extend_exp 'false' \
    --linkingToken 'NIEISPa0' \
    > test.out 2>&1
eval_tap $? 398 'GenerateTokenByNewHeadlessAccountV4' test.out

#- 399 Verify2faCodeV4
$CLI_EXE \
    --sn iam \
    --op Verify2faCodeV4 \
    --code 'Jm54wuZ8' \
    --factor 'WIgSSbsS' \
    --mfaToken 'IttZ7I71' \
    --rememberDevice 'false' \
    > test.out 2>&1
eval_tap $? 399 'Verify2faCodeV4' test.out

#- 400 PlatformTokenGrantV4
$CLI_EXE \
    --sn iam \
    --op PlatformTokenGrantV4 \
    --platformId 'TJ6aggTH' \
    --codeChallenge 'Y5fhwh2F' \
    --codeChallengeMethod 'plain' \
    --additionalData '9XCTzZ6q' \
    --client_id 'HwiJBYYs' \
    --createHeadless 'false' \
    --device_id 'OvBpQUzL' \
    --macAddress 'ge9AYDBQ' \
    --platform_token 'WgHXcd2A' \
    --serviceLabel '0.6790024099422114' \
    --skipSetCookie 'false' \
    > test.out 2>&1
eval_tap $? 400 'PlatformTokenGrantV4' test.out

#- 401 SimultaneousLoginV4
$CLI_EXE \
    --sn iam \
    --op SimultaneousLoginV4 \
    --codeChallenge 'RI6vVtLD' \
    --codeChallengeMethod 'S256' \
    --simultaneousPlatform 'xnqAbgl7' \
    --simultaneousTicket 'rdBHhaXn' \
    --nativePlatform 'epicgames' \
    --nativePlatformTicket 'mdlARh7m' \
    > test.out 2>&1
eval_tap $? 401 'SimultaneousLoginV4' test.out

#- 402 TokenGrantV4
$CLI_EXE \
    --sn iam \
    --op TokenGrantV4 \
    --codeChallenge 'BKBgci58' \
    --codeChallengeMethod 'S256' \
    --additionalData 'JzJTDzs0' \
    --client_id 'FdzEBAne' \
    --client_secret 'HiV6fdTc' \
    --code 'fiI6r1yg' \
    --code_verifier 'Ids4aDOx' \
    --extendNamespace 'DFZiH1sY' \
    --extend_exp 'true' \
    --login_queue_ticket 'XCTD8jbr' \
    --password 'mcX2Ohma' \
    --redirect_uri 'Z6M5xd8o' \
    --refresh_token '6poWKXtO' \
    --scope 'TCfFV1MU' \
    --username 'rNoZzLNI' \
    --grant_type 'urn:ietf:params:oauth:grant-type:login_queue_ticket' \
    > test.out 2>&1
eval_tap $? 402 'TokenGrantV4' test.out

#- 403 RequestTargetTokenResponseV4
$CLI_EXE \
    --sn iam \
    --op RequestTargetTokenResponseV4 \
    --additionalData '9yy50Wib' \
    --code 'sbPtUhhL' \
    > test.out 2>&1
eval_tap $? 403 'RequestTargetTokenResponseV4' test.out

#- 404 PublicListUserIDByPlatformUserIDsV4
# body param: body
echo '{"pidType": "cUx95O5O", "platformUserIds": ["yKASNJOk", "EqaNo0sf", "UDcyv2PZ"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicListUserIDByPlatformUserIDsV4 \
    --namespace $AB_NAMESPACE \
    --platformId 'WcWjnpYM' \
    --rawPUID 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 404 'PublicListUserIDByPlatformUserIDsV4' test.out

#- 405 PublicGetUserByPlatformUserIDV4
$CLI_EXE \
    --sn iam \
    --op PublicGetUserByPlatformUserIDV4 \
    --namespace $AB_NAMESPACE \
    --platformId 'XFgf406P' \
    --platformUserId 'cMLVWEMt' \
    > test.out 2>&1
eval_tap $? 405 'PublicGetUserByPlatformUserIDV4' test.out

#- 406 PublicCreateTestUserV4
# body param: body
echo '{"acceptedPolicies": [{"isAccepted": true, "localizedPolicyVersionId": "zEQ4yEGl", "policyId": "xno01VM7", "policyVersionId": "8bHLQrma"}, {"isAccepted": true, "localizedPolicyVersionId": "j49lOWNp", "policyId": "idnnAkF1", "policyVersionId": "NJgsMXZr"}, {"isAccepted": false, "localizedPolicyVersionId": "XrbGp4cU", "policyId": "bcrOGG4r", "policyVersionId": "AMwZSJee"}], "authType": "EMAILPASSWD", "country": "kUOGA5ED", "dateOfBirth": "1qUSPG5T", "displayName": "1fmtAXuP", "emailAddress": "Kk6644fv", "password": "6xtGbjmA", "passwordMD5Sum": "bPw9379p", "uniqueDisplayName": "hxwbF5Wu", "username": "40h5UB8o", "verified": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicCreateTestUserV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 406 'PublicCreateTestUserV4' test.out

#- 407 PublicCreateUserV4
# body param: body
echo '{"acceptedPolicies": [{"isAccepted": true, "localizedPolicyVersionId": "uh4a34lT", "policyId": "yXjJtstW", "policyVersionId": "Ery21gjq"}, {"isAccepted": false, "localizedPolicyVersionId": "6zt40TEM", "policyId": "8MVlH0Mm", "policyVersionId": "5p9Ul2p5"}, {"isAccepted": true, "localizedPolicyVersionId": "gE1zrw20", "policyId": "jBB7SPoV", "policyVersionId": "6Qm7jabv"}], "authType": "EMAILPASSWD", "code": "oQDvtC1l", "country": "P7krl2a6", "dateOfBirth": "WyfGG8b8", "displayName": "JJBqHa78", "emailAddress": "KctebcFx", "password": "fIP33HGv", "passwordMD5Sum": "1DiFCVaR", "reachMinimumAge": false, "uniqueDisplayName": "fYuilveS", "username": "zzPQp4WE"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicCreateUserV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 407 'PublicCreateUserV4' test.out

#- 408 CreateUserFromInvitationV4
# body param: body
echo '{"acceptedPolicies": [{"isAccepted": true, "localizedPolicyVersionId": "WFf5yuDf", "policyId": "lMdvYb7c", "policyVersionId": "r40FrA3h"}, {"isAccepted": false, "localizedPolicyVersionId": "OyZvpocH", "policyId": "3bcWnlXB", "policyVersionId": "sgJhy6mC"}, {"isAccepted": true, "localizedPolicyVersionId": "pUVXYtJo", "policyId": "bIXUjAoq", "policyVersionId": "qhlPhH7g"}], "authType": "EMAILPASSWD", "code": "Jocc9Lgz", "country": "Ecs1Beeb", "dateOfBirth": "T8XeI8pr", "displayName": "kc6IijsC", "emailAddress": "3eDJkfSQ", "password": "Rz44Xt28", "passwordMD5Sum": "AuNrQ5Wu", "reachMinimumAge": true, "uniqueDisplayName": "NJgln0YM", "username": "2Utc4m3k"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op CreateUserFromInvitationV4 \
    --invitationId 'NkHwzHOq' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 408 'CreateUserFromInvitationV4' test.out

#- 409 PublicUpdateUserV4
# body param: body
echo '{"avatarUrl": "2u2SXmk5", "country": "krqTduf6", "dateOfBirth": "dOMXMLfN", "displayName": "vLfozrig", "languageTag": "eJm5ZQkZ", "uniqueDisplayName": "7PAQmEUW", "userName": "d9Nk7Vga"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpdateUserV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 409 'PublicUpdateUserV4' test.out

#- 410 PublicUpdateUserEmailAddressV4
# body param: body
echo '{"code": "XZd2vU3D", "emailAddress": "13gnhqQK"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpdateUserEmailAddressV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 410 'PublicUpdateUserEmailAddressV4' test.out

#- 411 PublicUpgradeHeadlessAccountWithVerificationCodeV4
# body param: body
echo '{"code": "CEWRJdpA", "country": "fD4waszD", "dateOfBirth": "bJ52xytl", "displayName": "pUKhD473", "emailAddress": "btbx21kZ", "password": "FDS4ABFa", "reachMinimumAge": false, "uniqueDisplayName": "bC6yuBEg", "username": "0WRygb5p", "validateOnly": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpgradeHeadlessAccountWithVerificationCodeV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 411 'PublicUpgradeHeadlessAccountWithVerificationCodeV4' test.out

#- 412 PublicUpgradeHeadlessAccountV4
# body param: body
echo '{"dateOfBirth": "JTv4q5LC", "displayName": "J3q1PXyt", "emailAddress": "IbIf5TT5", "password": "zJlTTjci", "uniqueDisplayName": "4f43KWvI", "username": "hpFrk7r9"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpgradeHeadlessAccountV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 412 'PublicUpgradeHeadlessAccountV4' test.out

#- 413 PublicDisableMyAuthenticatorV4
# body param: body
echo '{"factor": "xkTlS3Ua", "mfaToken": "Zk2pVojv"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicDisableMyAuthenticatorV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 413 'PublicDisableMyAuthenticatorV4' test.out

#- 414 PublicEnableMyAuthenticatorV4
$CLI_EXE \
    --sn iam \
    --op PublicEnableMyAuthenticatorV4 \
    --namespace $AB_NAMESPACE \
    --code 'l9Lya3bp' \
    > test.out 2>&1
eval_tap $? 414 'PublicEnableMyAuthenticatorV4' test.out

#- 415 PublicGenerateMyAuthenticatorKeyV4
$CLI_EXE \
    --sn iam \
    --op PublicGenerateMyAuthenticatorKeyV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 415 'PublicGenerateMyAuthenticatorKeyV4' test.out

#- 416 PublicGetMyBackupCodesV4
eval_tap 0 416 'PublicGetMyBackupCodesV4 # SKIP deprecated' test.out

#- 417 PublicGenerateMyBackupCodesV4
eval_tap 0 417 'PublicGenerateMyBackupCodesV4 # SKIP deprecated' test.out

#- 418 PublicDisableMyBackupCodesV4
# body param: body
echo '{"factor": "HwXqGiBc", "mfaToken": "t5EWXdnm"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicDisableMyBackupCodesV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 418 'PublicDisableMyBackupCodesV4' test.out

#- 419 PublicDownloadMyBackupCodesV4
eval_tap 0 419 'PublicDownloadMyBackupCodesV4 # SKIP deprecated' test.out

#- 420 PublicEnableMyBackupCodesV4
eval_tap 0 420 'PublicEnableMyBackupCodesV4 # SKIP deprecated' test.out

#- 421 PublicGetBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op PublicGetBackupCodesV4 \
    --namespace $AB_NAMESPACE \
    --languageTag 'DUPGrAiX' \
    > test.out 2>&1
eval_tap $? 421 'PublicGetBackupCodesV4' test.out

#- 422 PublicGenerateBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op PublicGenerateBackupCodesV4 \
    --namespace $AB_NAMESPACE \
    --languageTag 'J7wFWH4V' \
    > test.out 2>&1
eval_tap $? 422 'PublicGenerateBackupCodesV4' test.out

#- 423 PublicEnableBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op PublicEnableBackupCodesV4 \
    --namespace $AB_NAMESPACE \
    --languageTag 'xqNmUh8h' \
    > test.out 2>&1
eval_tap $? 423 'PublicEnableBackupCodesV4' test.out

#- 424 PublicChallengeMyMFAV4
$CLI_EXE \
    --sn iam \
    --op PublicChallengeMyMFAV4 \
    --namespace $AB_NAMESPACE \
    --code 'ej0BaJJ7' \
    --factor 'ztPeEGD0' \
    > test.out 2>&1
eval_tap $? 424 'PublicChallengeMyMFAV4' test.out

#- 425 PublicRemoveTrustedDeviceV4
$CLI_EXE \
    --sn iam \
    --op PublicRemoveTrustedDeviceV4 \
    --namespace $AB_NAMESPACE \
    --device_token 'VS0m7x66' \
    > test.out 2>&1
eval_tap $? 425 'PublicRemoveTrustedDeviceV4' test.out

#- 426 PublicSendMyMFAEmailCodeV4
$CLI_EXE \
    --sn iam \
    --op PublicSendMyMFAEmailCodeV4 \
    --namespace $AB_NAMESPACE \
    --action '7CroQdrr' \
    --languageTag '68z3ahVf' \
    > test.out 2>&1
eval_tap $? 426 'PublicSendMyMFAEmailCodeV4' test.out

#- 427 PublicDisableMyEmailV4
# body param: body
echo '{"factor": "PY9IVmwX", "mfaToken": "B2p98KWr"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicDisableMyEmailV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 427 'PublicDisableMyEmailV4' test.out

#- 428 PublicEnableMyEmailV4
$CLI_EXE \
    --sn iam \
    --op PublicEnableMyEmailV4 \
    --namespace $AB_NAMESPACE \
    --code 'gv7GB9KQ' \
    > test.out 2>&1
eval_tap $? 428 'PublicEnableMyEmailV4' test.out

#- 429 PublicGetMyEnabledFactorsV4
$CLI_EXE \
    --sn iam \
    --op PublicGetMyEnabledFactorsV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 429 'PublicGetMyEnabledFactorsV4' test.out

#- 430 PublicMakeFactorMyDefaultV4
$CLI_EXE \
    --sn iam \
    --op PublicMakeFactorMyDefaultV4 \
    --namespace $AB_NAMESPACE \
    --factor 'FLKH1oAV' \
    > test.out 2>&1
eval_tap $? 430 'PublicMakeFactorMyDefaultV4' test.out

#- 431 PublicGetMyOwnMFAStatusV4
$CLI_EXE \
    --sn iam \
    --op PublicGetMyOwnMFAStatusV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 431 'PublicGetMyOwnMFAStatusV4' test.out

#- 432 PublicGetMyMFAStatusV4
eval_tap 0 432 'PublicGetMyMFAStatusV4 # SKIP deprecated' test.out

#- 433 PublicGetUserPublicInfoByUserIdV4
$CLI_EXE \
    --sn iam \
    --op PublicGetUserPublicInfoByUserIdV4 \
    --namespace $AB_NAMESPACE \
    --userId '4pkbwptr' \
    > test.out 2>&1
eval_tap $? 433 'PublicGetUserPublicInfoByUserIdV4' test.out

#- 434 PublicInviteUserV4
# body param: body
echo '{"additionalData": "opp45iLH", "emailAddress": "5rRTG38v", "languageTag": "ISEvdVky", "namespace": "k1ee4d0s", "namespaceDisplayName": "5bklpJAx"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicInviteUserV4 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 434 'PublicInviteUserV4' test.out

#- 435 PublicUpgradeHeadlessWithCodeV4Forward
# body param: body
echo '{"acceptedPolicies": [{"isAccepted": false, "localizedPolicyVersionId": "ci2W44Hb", "policyId": "PmgQSyAl", "policyVersionId": "hqzx0cXz"}, {"isAccepted": false, "localizedPolicyVersionId": "CL1DBmbv", "policyId": "ewIiwIqk", "policyVersionId": "p3YgrooN"}, {"isAccepted": false, "localizedPolicyVersionId": "myJbDIss", "policyId": "6M3GhNGs", "policyVersionId": "ccAZch6K"}], "code": "nr175EZO", "country": "0GllRL4O", "dateOfBirth": "YNYTIKiZ", "displayName": "5WefLecg", "emailAddress": "l0mGEGA4", "password": "tTjIRRe6", "reachMinimumAge": false, "uniqueDisplayName": "D1m5ey9I", "username": "ztdpXi6K", "validateOnly": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpgradeHeadlessWithCodeV4Forward \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 435 'PublicUpgradeHeadlessWithCodeV4Forward' test.out


# remove artifacts
rm -f "$CLI_TOKEN_FILE"
rm -f "$TEMP_JSON_INPUT"
rm -f "$TEMP_FILE_UPLOAD"

exit $EXIT_CODE