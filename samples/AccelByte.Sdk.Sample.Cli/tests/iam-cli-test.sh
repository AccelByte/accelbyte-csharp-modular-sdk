#!/usr/bin/env bash

# Copyright (c) 2021 AccelByte Inc. All Rights Reserved.
# This is licensed software from AccelByte Inc, for limitations
# and restrictions contact your company contract manager.

# This code is generated by tool. DO NOT EDIT.

# Meta:
# - random seed: 
# - template file: 

# Instructions:
# - Run the Justice SDK Mock Server first before running this script.

export AB_BASE_URL="http://127.0.0.1:8080"
export AB_CLIENT_ID="admin"
export AB_CLIENT_SECRET="admin"
export AB_NAMESPACE="test"
export AB_APP_NAME="UnitTest"

EXIT_CODE=0

eval_tap() {
  if [ $1 -eq 0 ]; then
    echo "ok $2 - $3"
  else
    EXIT_CODE=1
    echo "not ok $2 - $3"
    sed 's/^/# /g' $4
  fi
  rm -f $4
}

CLI_EXE="AccelByte.Sdk.Sample.Cli"
CLI_TOKEN_FILE="$(dirname "$(which $CLI_EXE)")/token.json"
TEMP_JSON_INPUT="input_json.json"
TEMP_FILE_UPLOAD="file_upload.bin"

echo "TAP version 13"
echo "1..394"

#- 1 Login
$CLI_EXE --op login --lt user --user user --pass user > test.out 2>&1
eval_tap $? 1 'Login' test.out

if [ $EXIT_CODE -ne 0 ]; then
  echo "Bail out! Login failed."
  exit $EXIT_CODE
fi

# echo "foo" > "$CLI_TOKEN_FILE"

#- 2 GetBansType
eval_tap 0 2 'GetBansType # SKIP deprecated' test.out

#- 3 GetListBanReason
eval_tap 0 3 'GetListBanReason # SKIP deprecated' test.out

#- 4 GetClients
eval_tap 0 4 'GetClients # SKIP deprecated' test.out

#- 5 CreateClient
eval_tap 0 5 'CreateClient # SKIP deprecated' test.out

#- 6 GetClient
eval_tap 0 6 'GetClient # SKIP deprecated' test.out

#- 7 UpdateClient
eval_tap 0 7 'UpdateClient # SKIP deprecated' test.out

#- 8 DeleteClient
eval_tap 0 8 'DeleteClient # SKIP deprecated' test.out

#- 9 UpdateClientPermission
eval_tap 0 9 'UpdateClientPermission # SKIP deprecated' test.out

#- 10 AddClientPermission
eval_tap 0 10 'AddClientPermission # SKIP deprecated' test.out

#- 11 DeleteClientPermission
eval_tap 0 11 'DeleteClientPermission # SKIP deprecated' test.out

#- 12 UpdateClientSecret
eval_tap 0 12 'UpdateClientSecret # SKIP deprecated' test.out

#- 13 GetClientsbyNamespace
eval_tap 0 13 'GetClientsbyNamespace # SKIP deprecated' test.out

#- 14 CreateClientByNamespace
eval_tap 0 14 'CreateClientByNamespace # SKIP deprecated' test.out

#- 15 DeleteClientByNamespace
eval_tap 0 15 'DeleteClientByNamespace # SKIP deprecated' test.out

#- 16 CreateUser
eval_tap 0 16 'CreateUser # SKIP deprecated' test.out

#- 17 GetAdminUsersByRoleID
eval_tap 0 17 'GetAdminUsersByRoleID # SKIP deprecated' test.out

#- 18 GetUserByLoginID
eval_tap 0 18 'GetUserByLoginID # SKIP deprecated' test.out

#- 19 GetUserByPlatformUserID
eval_tap 0 19 'GetUserByPlatformUserID # SKIP deprecated' test.out

#- 20 ForgotPassword
eval_tap 0 20 'ForgotPassword # SKIP deprecated' test.out

#- 21 GetUsersByLoginIds
eval_tap 0 21 'GetUsersByLoginIds # SKIP deprecated' test.out

#- 22 ResetPassword
eval_tap 0 22 'ResetPassword # SKIP deprecated' test.out

#- 23 SearchUser
eval_tap 0 23 'SearchUser # SKIP deprecated' test.out

#- 24 GetUserByUserID
eval_tap 0 24 'GetUserByUserID # SKIP deprecated' test.out

#- 25 UpdateUser
eval_tap 0 25 'UpdateUser # SKIP deprecated' test.out

#- 26 DeleteUser
eval_tap 0 26 'DeleteUser # SKIP deprecated' test.out

#- 27 BanUser
eval_tap 0 27 'BanUser # SKIP deprecated' test.out

#- 28 GetUserBanHistory
eval_tap 0 28 'GetUserBanHistory # SKIP deprecated' test.out

#- 29 DisableUserBan
eval_tap 0 29 'DisableUserBan # SKIP deprecated' test.out

#- 30 EnableUserBan
eval_tap 0 30 'EnableUserBan # SKIP deprecated' test.out

#- 31 ListCrossNamespaceAccountLink
eval_tap 0 31 'ListCrossNamespaceAccountLink # SKIP deprecated' test.out

#- 32 DisableUser
eval_tap 0 32 'DisableUser # SKIP deprecated' test.out

#- 33 EnableUser
eval_tap 0 33 'EnableUser # SKIP deprecated' test.out

#- 34 GetUserInformation
eval_tap 0 34 'GetUserInformation # SKIP deprecated' test.out

#- 35 DeleteUserInformation
eval_tap 0 35 'DeleteUserInformation # SKIP deprecated' test.out

#- 36 GetUserLoginHistories
eval_tap 0 36 'GetUserLoginHistories # SKIP deprecated' test.out

#- 37 UpdatePassword
eval_tap 0 37 'UpdatePassword # SKIP deprecated' test.out

#- 38 SaveUserPermission
eval_tap 0 38 'SaveUserPermission # SKIP deprecated' test.out

#- 39 AddUserPermission
eval_tap 0 39 'AddUserPermission # SKIP deprecated' test.out

#- 40 DeleteUserPermission
eval_tap 0 40 'DeleteUserPermission # SKIP deprecated' test.out

#- 41 GetUserPlatformAccounts
eval_tap 0 41 'GetUserPlatformAccounts # SKIP deprecated' test.out

#- 42 GetUserMapping
eval_tap 0 42 'GetUserMapping # SKIP deprecated' test.out

#- 43 GetUserJusticePlatformAccount
eval_tap 0 43 'GetUserJusticePlatformAccount # SKIP deprecated' test.out

#- 44 PlatformLink
eval_tap 0 44 'PlatformLink # SKIP deprecated' test.out

#- 45 PlatformUnlink
eval_tap 0 45 'PlatformUnlink # SKIP deprecated' test.out

#- 46 GetPublisherUser
eval_tap 0 46 'GetPublisherUser # SKIP deprecated' test.out

#- 47 SaveUserRoles
eval_tap 0 47 'SaveUserRoles # SKIP deprecated' test.out

#- 48 AddUserRole
eval_tap 0 48 'AddUserRole # SKIP deprecated' test.out

#- 49 DeleteUserRole
eval_tap 0 49 'DeleteUserRole # SKIP deprecated' test.out

#- 50 UpgradeHeadlessAccount
eval_tap 0 50 'UpgradeHeadlessAccount # SKIP deprecated' test.out

#- 51 UpgradeHeadlessAccountWithVerificationCode
eval_tap 0 51 'UpgradeHeadlessAccountWithVerificationCode # SKIP deprecated' test.out

#- 52 UserVerification
eval_tap 0 52 'UserVerification # SKIP deprecated' test.out

#- 53 SendVerificationCode
eval_tap 0 53 'SendVerificationCode # SKIP deprecated' test.out

#- 54 Authorization
eval_tap 0 54 'Authorization # SKIP deprecated' test.out

#- 55 GetJWKS
eval_tap 0 55 'GetJWKS # SKIP deprecated' test.out

#- 56 PlatformTokenRequestHandler
eval_tap 0 56 'PlatformTokenRequestHandler # SKIP deprecated' test.out

#- 57 RevokeUser
eval_tap 0 57 'RevokeUser # SKIP deprecated' test.out

#- 58 GetRevocationList
eval_tap 0 58 'GetRevocationList # SKIP deprecated' test.out

#- 59 RevokeToken
eval_tap 0 59 'RevokeToken # SKIP deprecated' test.out

#- 60 RevokeAUser
eval_tap 0 60 'RevokeAUser # SKIP deprecated' test.out

#- 61 TokenGrant
eval_tap 0 61 'TokenGrant # SKIP deprecated' test.out

#- 62 VerifyToken
eval_tap 0 62 'VerifyToken # SKIP deprecated' test.out

#- 63 GetRoles
eval_tap 0 63 'GetRoles # SKIP deprecated' test.out

#- 64 CreateRole
eval_tap 0 64 'CreateRole # SKIP deprecated' test.out

#- 65 GetRole
eval_tap 0 65 'GetRole # SKIP deprecated' test.out

#- 66 UpdateRole
eval_tap 0 66 'UpdateRole # SKIP deprecated' test.out

#- 67 DeleteRole
eval_tap 0 67 'DeleteRole # SKIP deprecated' test.out

#- 68 GetRoleAdminStatus
eval_tap 0 68 'GetRoleAdminStatus # SKIP deprecated' test.out

#- 69 SetRoleAsAdmin
eval_tap 0 69 'SetRoleAsAdmin # SKIP deprecated' test.out

#- 70 RemoveRoleAdmin
eval_tap 0 70 'RemoveRoleAdmin # SKIP deprecated' test.out

#- 71 GetRoleManagers
eval_tap 0 71 'GetRoleManagers # SKIP deprecated' test.out

#- 72 AddRoleManagers
eval_tap 0 72 'AddRoleManagers # SKIP deprecated' test.out

#- 73 RemoveRoleManagers
eval_tap 0 73 'RemoveRoleManagers # SKIP deprecated' test.out

#- 74 GetRoleMembers
eval_tap 0 74 'GetRoleMembers # SKIP deprecated' test.out

#- 75 AddRoleMembers
eval_tap 0 75 'AddRoleMembers # SKIP deprecated' test.out

#- 76 RemoveRoleMembers
eval_tap 0 76 'RemoveRoleMembers # SKIP deprecated' test.out

#- 77 UpdateRolePermissions
eval_tap 0 77 'UpdateRolePermissions # SKIP deprecated' test.out

#- 78 AddRolePermission
eval_tap 0 78 'AddRolePermission # SKIP deprecated' test.out

#- 79 DeleteRolePermission
eval_tap 0 79 'DeleteRolePermission # SKIP deprecated' test.out

#- 80 AdminGetAgeRestrictionStatusV2
eval_tap 0 80 'AdminGetAgeRestrictionStatusV2 # SKIP deprecated' test.out

#- 81 AdminUpdateAgeRestrictionConfigV2
eval_tap 0 81 'AdminUpdateAgeRestrictionConfigV2 # SKIP deprecated' test.out

#- 82 GetListCountryAgeRestriction
eval_tap 0 82 'GetListCountryAgeRestriction # SKIP deprecated' test.out

#- 83 UpdateCountryAgeRestriction
eval_tap 0 83 'UpdateCountryAgeRestriction # SKIP deprecated' test.out

#- 84 AdminSearchUsersV2
eval_tap 0 84 'AdminSearchUsersV2 # SKIP deprecated' test.out

#- 85 AdminGetUserByUserIdV2
eval_tap 0 85 'AdminGetUserByUserIdV2 # SKIP deprecated' test.out

#- 86 AdminUpdateUserV2
eval_tap 0 86 'AdminUpdateUserV2 # SKIP deprecated' test.out

#- 87 AdminBanUserV2
eval_tap 0 87 'AdminBanUserV2 # SKIP deprecated' test.out

#- 88 AdminGetUserBanV2
eval_tap 0 88 'AdminGetUserBanV2 # SKIP deprecated' test.out

#- 89 AdminDisableUserV2
eval_tap 0 89 'AdminDisableUserV2 # SKIP deprecated' test.out

#- 90 AdminEnableUserV2
eval_tap 0 90 'AdminEnableUserV2 # SKIP deprecated' test.out

#- 91 AdminResetPasswordV2
eval_tap 0 91 'AdminResetPasswordV2 # SKIP deprecated' test.out

#- 92 AdminDeletePlatformLinkV2
eval_tap 0 92 'AdminDeletePlatformLinkV2 # SKIP deprecated' test.out

#- 93 AdminPutUserRolesV2
eval_tap 0 93 'AdminPutUserRolesV2 # SKIP deprecated' test.out

#- 94 AdminCreateUserRolesV2
eval_tap 0 94 'AdminCreateUserRolesV2 # SKIP deprecated' test.out

#- 95 PublicGetCountryAgeRestriction
eval_tap 0 95 'PublicGetCountryAgeRestriction # SKIP deprecated' test.out

#- 96 PublicCreateUserV2
eval_tap 0 96 'PublicCreateUserV2 # SKIP deprecated' test.out

#- 97 PublicForgotPasswordV2
eval_tap 0 97 'PublicForgotPasswordV2 # SKIP deprecated' test.out

#- 98 PublicResetPasswordV2
eval_tap 0 98 'PublicResetPasswordV2 # SKIP deprecated' test.out

#- 99 PublicGetUserByUserIDV2
eval_tap 0 99 'PublicGetUserByUserIDV2 # SKIP deprecated' test.out

#- 100 PublicUpdateUserV2
eval_tap 0 100 'PublicUpdateUserV2 # SKIP deprecated' test.out

#- 101 PublicGetUserBan
eval_tap 0 101 'PublicGetUserBan # SKIP deprecated' test.out

#- 102 PublicUpdatePasswordV2
eval_tap 0 102 'PublicUpdatePasswordV2 # SKIP deprecated' test.out

#- 103 GetListJusticePlatformAccounts
eval_tap 0 103 'GetListJusticePlatformAccounts # SKIP deprecated' test.out

#- 104 PublicPlatformLinkV2
eval_tap 0 104 'PublicPlatformLinkV2 # SKIP deprecated' test.out

#- 105 PublicDeletePlatformLinkV2
eval_tap 0 105 'PublicDeletePlatformLinkV2 # SKIP deprecated' test.out

#- 106 AdminGetBansTypeV3
$CLI_EXE \
    --sn iam \
    --op AdminGetBansTypeV3 \
    > test.out 2>&1
eval_tap $? 106 'AdminGetBansTypeV3' test.out

#- 107 AdminGetListBanReasonV3
$CLI_EXE \
    --sn iam \
    --op AdminGetListBanReasonV3 \
    > test.out 2>&1
eval_tap $? 107 'AdminGetListBanReasonV3' test.out

#- 108 AdminListClientAvailablePermissions
$CLI_EXE \
    --sn iam \
    --op AdminListClientAvailablePermissions \
    --excludePermissions 'false' \
    > test.out 2>&1
eval_tap $? 108 'AdminListClientAvailablePermissions' test.out

#- 109 AdminUpdateAvailablePermissionsByModule
# body param: body
echo '{"modules": [{"docLink": "A2FYC4vH", "groups": [{"group": "FdolrLo8", "groupId": "zl7FkZuK", "permissions": [{"allowedActions": [88, 70, 48], "resource": "xR3QaMgT"}, {"allowedActions": [28, 37, 32], "resource": "1NU4QgEd"}, {"allowedActions": [32, 30, 71], "resource": "8140vlhT"}]}, {"group": "SokfilXJ", "groupId": "8mutXaX8", "permissions": [{"allowedActions": [62, 32, 81], "resource": "rsFbLvRo"}, {"allowedActions": [23, 9, 84], "resource": "TzWOvUgi"}, {"allowedActions": [0, 82, 18], "resource": "uMu1hIrK"}]}, {"group": "IxvMVY2A", "groupId": "1YrQ3qTy", "permissions": [{"allowedActions": [81, 28, 87], "resource": "jeqbtqUW"}, {"allowedActions": [24, 68, 56], "resource": "vymoPBtx"}, {"allowedActions": [69, 48, 13], "resource": "GQTV6V61"}]}], "module": "mNg7u5yB", "moduleId": "RT83VUNd"}, {"docLink": "7szb9eYn", "groups": [{"group": "XULbSbbO", "groupId": "AjgUybcr", "permissions": [{"allowedActions": [81, 75, 66], "resource": "LSCSneHH"}, {"allowedActions": [27, 53, 99], "resource": "15MHqqz0"}, {"allowedActions": [6, 95, 39], "resource": "lZqDe2lO"}]}, {"group": "qBJoB0dX", "groupId": "rVhNZtvK", "permissions": [{"allowedActions": [95, 71, 75], "resource": "N9iQ1N6b"}, {"allowedActions": [42, 93, 93], "resource": "xVoX3FnT"}, {"allowedActions": [96, 41, 19], "resource": "q5ZG4IZ3"}]}, {"group": "hV69uP6i", "groupId": "Ku3xefd2", "permissions": [{"allowedActions": [87, 27, 34], "resource": "maT03I5H"}, {"allowedActions": [16, 74, 98], "resource": "d6i1a1OT"}, {"allowedActions": [2, 90, 80], "resource": "7xhmTJs0"}]}], "module": "Dmg6fPTu", "moduleId": "tmbCyXR6"}, {"docLink": "qaO7swBP", "groups": [{"group": "Lo4WEOix", "groupId": "zLUuupSb", "permissions": [{"allowedActions": [2, 34, 50], "resource": "XU165QA8"}, {"allowedActions": [41, 22, 77], "resource": "4ZcuIcik"}, {"allowedActions": [100, 52, 35], "resource": "pXFqbiE5"}]}, {"group": "hVnnH7kp", "groupId": "L9TMxtVx", "permissions": [{"allowedActions": [7, 47, 49], "resource": "x08OHX5x"}, {"allowedActions": [87, 51, 10], "resource": "qVdGeJl3"}, {"allowedActions": [72, 54, 78], "resource": "CcGUxRv6"}]}, {"group": "1zb65HKB", "groupId": "AVPac1o4", "permissions": [{"allowedActions": [51, 28, 84], "resource": "r1B8fZuO"}, {"allowedActions": [36, 49, 82], "resource": "YY55KFl4"}, {"allowedActions": [17, 57, 27], "resource": "0OGMx8VL"}]}], "module": "I7bh7LRm", "moduleId": "Vz5JL6TS"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateAvailablePermissionsByModule \
    --forceDelete 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 109 'AdminUpdateAvailablePermissionsByModule' test.out

#- 110 AdminDeleteConfigPermissionsByGroup
# body param: body
echo '{"groupId": "Gko5MK9V", "moduleId": "4j5Vakk1"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDeleteConfigPermissionsByGroup \
    --forceDelete 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 110 'AdminDeleteConfigPermissionsByGroup' test.out

#- 111 AdminListClientTemplates
$CLI_EXE \
    --sn iam \
    --op AdminListClientTemplates \
    > test.out 2>&1
eval_tap $? 111 'AdminListClientTemplates' test.out

#- 112 AdminGetInputValidations
$CLI_EXE \
    --sn iam \
    --op AdminGetInputValidations \
    > test.out 2>&1
eval_tap $? 112 'AdminGetInputValidations' test.out

#- 113 AdminUpdateInputValidations
# body param: body
echo '[{"field": "P5yOKD9I", "validation": {"allowAllSpecialCharacters": true, "allowDigit": true, "allowLetter": true, "allowSpace": true, "allowUnicode": true, "avatarConfig": {"allowedPrefixes": ["3laP6s10", "kGrkxURe", "SPCUecjo"], "preferRegex": true, "regex": "v3r7hrq3"}, "blockedWord": ["m0Imuznl", "EjtbD3lw", "p2YeAZBW"], "description": [{"language": "PAP4i4bN", "message": ["I14S9WOK", "ruOmErqT", "7vtgl4G5"]}, {"language": "rddfZHRH", "message": ["OCWAMU8V", "wkXLsyD4", "q6F3LMa9"]}, {"language": "C1rxbCqR", "message": ["Hw2DlPWt", "lOyqaX17", "fBJ2VmXo"]}], "isCustomRegex": true, "letterCase": "KE4riLMe", "maxLength": 26, "maxRepeatingAlphaNum": 94, "maxRepeatingSpecialCharacter": 31, "minCharType": 33, "minLength": 81, "regex": "D0jKHBG3", "specialCharacterLocation": "S2EIZygb", "specialCharacters": ["MtKYhEmE", "oWNJBcbJ", "EZyA5h2s"]}}, {"field": "f2b74YXi", "validation": {"allowAllSpecialCharacters": true, "allowDigit": false, "allowLetter": false, "allowSpace": false, "allowUnicode": true, "avatarConfig": {"allowedPrefixes": ["zDZh4Ce6", "dXg6xooE", "E9mENg0K"], "preferRegex": false, "regex": "RNrCnifr"}, "blockedWord": ["lVmAeSM9", "7Nhs4neP", "IFth15DO"], "description": [{"language": "3VzQHqXY", "message": ["s957UZNt", "UCEB1pX4", "GWcWml2J"]}, {"language": "141W9aI7", "message": ["gaUCmrDg", "Dz6eo6Ed", "Cw996wa8"]}, {"language": "DxTPbBCD", "message": ["oTUrs7hZ", "sD707Vo6", "3zfCHTce"]}], "isCustomRegex": false, "letterCase": "LfMvbkkC", "maxLength": 1, "maxRepeatingAlphaNum": 58, "maxRepeatingSpecialCharacter": 24, "minCharType": 5, "minLength": 24, "regex": "YohYBkbb", "specialCharacterLocation": "ysTNjku0", "specialCharacters": ["lhvsSfu2", "OiDoKCsk", "rSvFIU6a"]}}, {"field": "cQnUi0Xo", "validation": {"allowAllSpecialCharacters": false, "allowDigit": true, "allowLetter": false, "allowSpace": false, "allowUnicode": false, "avatarConfig": {"allowedPrefixes": ["qlAzqIJy", "BpVPlRRC", "YD9TuyTA"], "preferRegex": false, "regex": "ZGo0k6z8"}, "blockedWord": ["miwSG6om", "sjA0f8YN", "gtyeppgO"], "description": [{"language": "PrgRSLr0", "message": ["pEdyZoio", "YIuvgPQ9", "0vBuqqSq"]}, {"language": "KBolWl1R", "message": ["ps4SVrPN", "m9JEUAzR", "I55MFHxQ"]}, {"language": "h6om07MG", "message": ["MHtRlUJi", "n03rNOEy", "e993MXvC"]}], "isCustomRegex": false, "letterCase": "klEvbQzb", "maxLength": 54, "maxRepeatingAlphaNum": 39, "maxRepeatingSpecialCharacter": 29, "minCharType": 23, "minLength": 75, "regex": "H3Ddv1qi", "specialCharacterLocation": "qJH2BcwV", "specialCharacters": ["xrrEdr7S", "YG12D1qR", "ESaSnC1j"]}}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateInputValidations \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 113 'AdminUpdateInputValidations' test.out

#- 114 AdminResetInputValidations
$CLI_EXE \
    --sn iam \
    --op AdminResetInputValidations \
    --field 'rTNPSNDJ' \
    > test.out 2>&1
eval_tap $? 114 'AdminResetInputValidations' test.out

#- 115 ListAdminsV3
$CLI_EXE \
    --sn iam \
    --op ListAdminsV3 \
    --namespace $AB_NAMESPACE \
    --after 'DIyUk02m' \
    --before 'UshEKiIw' \
    --endDate 'W7TCPG16' \
    --limit '25' \
    --query 'dn4M1jmn' \
    --roleId 'jzrvRxOP' \
    --startDate 'C5TkDoJ5' \
    > test.out 2>&1
eval_tap $? 115 'ListAdminsV3' test.out

#- 116 AdminGetAgeRestrictionStatusV3
$CLI_EXE \
    --sn iam \
    --op AdminGetAgeRestrictionStatusV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 116 'AdminGetAgeRestrictionStatusV3' test.out

#- 117 AdminUpdateAgeRestrictionConfigV3
# body param: body
echo '{"ageRestriction": 9, "enable": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateAgeRestrictionConfigV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 117 'AdminUpdateAgeRestrictionConfigV3' test.out

#- 118 AdminGetListCountryAgeRestrictionV3
$CLI_EXE \
    --sn iam \
    --op AdminGetListCountryAgeRestrictionV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 118 'AdminGetListCountryAgeRestrictionV3' test.out

#- 119 AdminUpdateCountryAgeRestrictionV3
# body param: body
echo '{"ageRestriction": 21}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateCountryAgeRestrictionV3 \
    --countryCode 'gJoeoTv9' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 119 'AdminUpdateCountryAgeRestrictionV3' test.out

#- 120 AdminGetBannedUsersV3
$CLI_EXE \
    --sn iam \
    --op AdminGetBannedUsersV3 \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --banType 'ttG5bFKR' \
    --limit '19' \
    --offset '9' \
    > test.out 2>&1
eval_tap $? 120 'AdminGetBannedUsersV3' test.out

#- 121 AdminBanUserBulkV3
# body param: body
echo '{"ban": "XCDJdxgk", "comment": "W3d7acxU", "endDate": "fHZvYsOn", "reason": "QjaUgcKc", "skipNotif": true, "userIds": ["CvQBZhMI", "oXmtS6Jd", "T5VKgOfh"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBanUserBulkV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 121 'AdminBanUserBulkV3' test.out

#- 122 AdminUnbanUserBulkV3
# body param: body
echo '{"bans": [{"banId": "xxecC9x7", "userId": "9AfVDmcU"}, {"banId": "MND0KPo6", "userId": "YALgyZmP"}, {"banId": "TsoXu2Ji", "userId": "hwh2KGad"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUnbanUserBulkV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 122 'AdminUnbanUserBulkV3' test.out

#- 123 AdminGetBansTypeWithNamespaceV3
$CLI_EXE \
    --sn iam \
    --op AdminGetBansTypeWithNamespaceV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 123 'AdminGetBansTypeWithNamespaceV3' test.out

#- 124 AdminGetClientsByNamespaceV3
$CLI_EXE \
    --sn iam \
    --op AdminGetClientsByNamespaceV3 \
    --namespace $AB_NAMESPACE \
    --clientId 'tZTQQwOm' \
    --clientName 'K6AjF1Rg' \
    --clientType 'ft9CW8J6' \
    --limit '75' \
    --offset '50' \
    --skipLoginQueue 'true' \
    > test.out 2>&1
eval_tap $? 124 'AdminGetClientsByNamespaceV3' test.out

#- 125 AdminBulkUpdateClientsV3
# body param: body
echo '{"clientIds": ["WnnF9feI", "aE30Y1cS", "OFhWPDZ5"], "clientUpdateRequest": {"audiences": ["UL5VQ07K", "fGFE2Txy", "WR3OxrkJ"], "baseUri": "OApoVfku", "clientName": "FUqr6pku", "clientPermissions": [{"action": 71, "resource": "gIiB1vOm", "schedAction": 49, "schedCron": "ZlPNEpOM", "schedRange": ["u8FCJN27", "LIvglfpM", "1913edKo"]}, {"action": 86, "resource": "HZWi9MjV", "schedAction": 41, "schedCron": "crCInt8c", "schedRange": ["QoPnLkAw", "DpccGTJs", "f7tmC6vr"]}, {"action": 66, "resource": "BBOe1JR9", "schedAction": 61, "schedCron": "wZCJa69n", "schedRange": ["8d0h8mlG", "bp2nAUtt", "K2MZKZdy"]}], "clientPlatform": "XvPM0fSu", "deletable": false, "description": "PkxDEQ5A", "modulePermissions": [{"moduleId": "iMGQ4R5N", "selectedGroups": [{"groupId": "Bn50bNPi", "selectedActions": [33, 5, 19]}, {"groupId": "JrNsPdHs", "selectedActions": [29, 4, 25]}, {"groupId": "rvM90WSc", "selectedActions": [8, 87, 67]}]}, {"moduleId": "oQvisTIE", "selectedGroups": [{"groupId": "7y3Ndc5p", "selectedActions": [96, 62, 52]}, {"groupId": "doYRF3eA", "selectedActions": [11, 21, 28]}, {"groupId": "t4TTM7Up", "selectedActions": [17, 80, 55]}]}, {"moduleId": "ECtAATu6", "selectedGroups": [{"groupId": "MrAz7H6W", "selectedActions": [38, 86, 38]}, {"groupId": "dl3QOI6C", "selectedActions": [46, 6, 60]}, {"groupId": "FSgfAcsP", "selectedActions": [28, 43, 93]}]}], "namespace": "EFwXsNzS", "oauthAccessTokenExpiration": 63, "oauthAccessTokenExpirationTimeUnit": "she4FSfl", "oauthRefreshTokenExpiration": 2, "oauthRefreshTokenExpirationTimeUnit": "rx6B0ARu", "redirectUri": "YxgChy2H", "scopes": ["qwOlQXna", "MqHvClRg", "0U7fDKCj"], "skipLoginQueue": true, "twoFactorEnabled": true}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBulkUpdateClientsV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 125 'AdminBulkUpdateClientsV3' test.out

#- 126 AdminCreateClientV3
# body param: body
echo '{"audiences": ["h9PUmgQ9", "SV3x2iVG", "BTgShKMi"], "baseUri": "FSydVTfc", "clientId": "YuVQ4PMC", "clientName": "il7bTEwc", "clientPermissions": [{"action": 58, "resource": "T03b0N5m", "schedAction": 50, "schedCron": "cYxXKk1g", "schedRange": ["5vVEkP3k", "pEQHhP5C", "zuPInDeC"]}, {"action": 95, "resource": "5JAOD354", "schedAction": 31, "schedCron": "W3SGSj5c", "schedRange": ["ajDFESVB", "xkd8zM9J", "f4UGbncq"]}, {"action": 56, "resource": "vHhp1sTU", "schedAction": 3, "schedCron": "1WTYLwhO", "schedRange": ["5tsCV2qs", "Jt55H50P", "C5Ife0rn"]}], "clientPlatform": "0oKLFFQU", "deletable": false, "description": "iKnad3kA", "modulePermissions": [{"moduleId": "prnIamlw", "selectedGroups": [{"groupId": "xooo5Emb", "selectedActions": [69, 81, 91]}, {"groupId": "CusuMhMJ", "selectedActions": [93, 31, 90]}, {"groupId": "dCa1EWvH", "selectedActions": [41, 11, 62]}]}, {"moduleId": "LJcRo4TI", "selectedGroups": [{"groupId": "KS0op8zb", "selectedActions": [33, 62, 69]}, {"groupId": "VhPVJvJt", "selectedActions": [42, 75, 55]}, {"groupId": "l9yO8tcO", "selectedActions": [63, 90, 37]}]}, {"moduleId": "BLAZwJB7", "selectedGroups": [{"groupId": "i5T7IeEK", "selectedActions": [73, 68, 15]}, {"groupId": "PJzqJK7e", "selectedActions": [100, 42, 96]}, {"groupId": "nWd2x95d", "selectedActions": [75, 93, 97]}]}], "namespace": "wzodeTUm", "oauthAccessTokenExpiration": 8, "oauthAccessTokenExpirationTimeUnit": "VbGsnyx3", "oauthClientType": "OHhunWAK", "oauthRefreshTokenExpiration": 1, "oauthRefreshTokenExpirationTimeUnit": "2UVlLppc", "parentNamespace": "nbzawfFt", "redirectUri": "p6gwn9sV", "scopes": ["JppAnbmY", "b126TP9F", "iL3MmTV0"], "secret": "BqRMUhh3", "skipLoginQueue": false, "twoFactorEnabled": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminCreateClientV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 126 'AdminCreateClientV3' test.out

#- 127 AdminGetClientsbyNamespacebyIDV3
$CLI_EXE \
    --sn iam \
    --op AdminGetClientsbyNamespacebyIDV3 \
    --clientId 'ECovVD9P' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 127 'AdminGetClientsbyNamespacebyIDV3' test.out

#- 128 AdminDeleteClientV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteClientV3 \
    --clientId 'eVf1Aj3B' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 128 'AdminDeleteClientV3' test.out

#- 129 AdminUpdateClientV3
# body param: body
echo '{"audiences": ["bcSSqdaQ", "1sk8Xr0X", "KXMuNQau"], "baseUri": "GgxPWt17", "clientName": "DGEHYcZ7", "clientPermissions": [{"action": 16, "resource": "JQC0IvFr", "schedAction": 44, "schedCron": "mudleY1r", "schedRange": ["nU0J98W2", "XexXrUct", "0kIl5X8G"]}, {"action": 59, "resource": "opa9SYjs", "schedAction": 58, "schedCron": "Ln6YWHqm", "schedRange": ["SoC5guga", "37npMoMI", "blAD5Xgl"]}, {"action": 14, "resource": "g4tHrsDT", "schedAction": 76, "schedCron": "is1NP7aQ", "schedRange": ["cfJEXwQi", "nONCQMvd", "MJm6lFeb"]}], "clientPlatform": "iBG7k83R", "deletable": true, "description": "ZayrXBwU", "modulePermissions": [{"moduleId": "KSv3BgbZ", "selectedGroups": [{"groupId": "Z4F21K5m", "selectedActions": [19, 22, 69]}, {"groupId": "nkDrlV2u", "selectedActions": [71, 93, 3]}, {"groupId": "VDD6JX6p", "selectedActions": [98, 5, 45]}]}, {"moduleId": "LRjVwi8A", "selectedGroups": [{"groupId": "AVnJLwfx", "selectedActions": [34, 69, 32]}, {"groupId": "AZc8JXrn", "selectedActions": [79, 77, 99]}, {"groupId": "9N9KABlz", "selectedActions": [27, 44, 48]}]}, {"moduleId": "BP211YiT", "selectedGroups": [{"groupId": "uM8lXlq1", "selectedActions": [72, 13, 64]}, {"groupId": "jD8GxDhw", "selectedActions": [82, 57, 99]}, {"groupId": "eB2zb36s", "selectedActions": [99, 20, 17]}]}], "namespace": "gxvkGnY2", "oauthAccessTokenExpiration": 26, "oauthAccessTokenExpirationTimeUnit": "bAntOP3P", "oauthRefreshTokenExpiration": 85, "oauthRefreshTokenExpirationTimeUnit": "Rc5n27P8", "redirectUri": "i4yk1QNg", "scopes": ["1ihnP8jd", "rKVB4GTv", "oYQZ7aM4"], "skipLoginQueue": false, "twoFactorEnabled": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateClientV3 \
    --clientId '8gncNE2z' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 129 'AdminUpdateClientV3' test.out

#- 130 AdminUpdateClientPermissionV3
# body param: body
echo '{"permissions": [{"action": 100, "resource": "nIosQBiu"}, {"action": 100, "resource": "WTSvqalD"}, {"action": 63, "resource": "1lOENNu4"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateClientPermissionV3 \
    --clientId 'AZkyh0BR' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 130 'AdminUpdateClientPermissionV3' test.out

#- 131 AdminAddClientPermissionsV3
# body param: body
echo '{"permissions": [{"action": 74, "resource": "tvjngHIk"}, {"action": 87, "resource": "tV8vrmBO"}, {"action": 19, "resource": "UjH7jrIb"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddClientPermissionsV3 \
    --clientId 'emmeGMlB' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 131 'AdminAddClientPermissionsV3' test.out

#- 132 AdminDeleteClientPermissionV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteClientPermissionV3 \
    --action '63' \
    --clientId 'E1mxSSRb' \
    --namespace $AB_NAMESPACE \
    --resource 'ULTBx99l' \
    > test.out 2>&1
eval_tap $? 132 'AdminDeleteClientPermissionV3' test.out

#- 133 AdminGetConfigValueV3
$CLI_EXE \
    --sn iam \
    --op AdminGetConfigValueV3 \
    --configKey 'fuu4vZhY' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 133 'AdminGetConfigValueV3' test.out

#- 134 AdminGetCountryListV3
$CLI_EXE \
    --sn iam \
    --op AdminGetCountryListV3 \
    --namespace $AB_NAMESPACE \
    --filterBlacklist 'false' \
    > test.out 2>&1
eval_tap $? 134 'AdminGetCountryListV3' test.out

#- 135 AdminGetCountryBlacklistV3
$CLI_EXE \
    --sn iam \
    --op AdminGetCountryBlacklistV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 135 'AdminGetCountryBlacklistV3' test.out

#- 136 AdminAddCountryBlacklistV3
# body param: body
echo '{"blacklist": ["diiv8Dsf", "bMTFhWN3", "T5mtponb"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddCountryBlacklistV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 136 'AdminAddCountryBlacklistV3' test.out

#- 137 RetrieveAllThirdPartyLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op RetrieveAllThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 137 'RetrieveAllThirdPartyLoginPlatformCredentialV3' test.out

#- 138 RetrieveAllActiveThirdPartyLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op RetrieveAllActiveThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 138 'RetrieveAllActiveThirdPartyLoginPlatformCredentialV3' test.out

#- 139 RetrieveAllSSOLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op RetrieveAllSSOLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --limit '84' \
    --offset '64' \
    > test.out 2>&1
eval_tap $? 139 'RetrieveAllSSOLoginPlatformCredentialV3' test.out

#- 140 RetrieveThirdPartyLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op RetrieveThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --platformId '5AHuPC0H' \
    > test.out 2>&1
eval_tap $? 140 'RetrieveThirdPartyLoginPlatformCredentialV3' test.out

#- 141 AddThirdPartyLoginPlatformCredentialV3
# body param: body
echo '{"ACSURL": "2aMv89fs", "AWSCognitoRegion": "iv8Iq1m5", "AWSCognitoUserPool": "WU5iiV5w", "AllowedClients": ["OYqTmSDt", "YBYjMGhA", "4m5dEpEp"], "AppId": "Cp2yKnlw", "AuthorizationEndpoint": "P4aZgwMV", "ClientId": "wRSMCQvj", "Environment": "a8vgxa7D", "FederationMetadataURL": "QZhldt5O", "GenericOauthFlow": false, "IsActive": false, "Issuer": "rV0b3rR6", "JWKSEndpoint": "hqVeCLn0", "KeyID": "UfLawIy3", "NetflixCertificates": {"encryptedPrivateKey": "yAQ21YEZ", "encryptedPrivateKeyName": "8K3JwC3N", "publicCertificate": "NWtPm4KA", "publicCertificateName": "r6VvJQXf", "rootCertificate": "lP1OYFMc", "rootCertificateName": "h8SZo8qq"}, "OrganizationId": "LFqp4gDI", "PlatformName": "jqqVLctJ", "RedirectUri": "HmUuDI43", "RegisteredDomains": [{"affectedClientIDs": ["W52IIDMv", "L1FpgAhL", "EVJM6vLD"], "domain": "v6ezCLzU", "namespaces": ["gLrADLq1", "JaZIidwY", "zTmDyt5s"], "roleId": "dPC9Hj6D"}, {"affectedClientIDs": ["4HbQsIBg", "lQaovjJu", "tfgeQrd6"], "domain": "3kemWqW1", "namespaces": ["qOaq7THi", "w8e3nJjQ", "XTE4qStC"], "roleId": "Q3wb05W3"}, {"affectedClientIDs": ["2q7P4Nwq", "qRppk55C", "MkHgdUSK"], "domain": "l1bxBjrx", "namespaces": ["zHiRnlis", "3vvSpNnC", "GfMSfeTF"], "roleId": "jPMUX1aO"}], "Secret": "kTPTJWcB", "TeamID": "gXO0Vf7g", "TokenAuthenticationType": "Arf0on45", "TokenClaimsMapping": {"UG6YEc1l": "DVW27bOK", "tlO34bj3": "tQB5Sk0h", "RyFOkEpn": "xYSnsrt3"}, "TokenEndpoint": "YKAyG58f", "UserInfoEndpoint": "oLYs8Y9P", "UserInfoHTTPMethod": "Taf3YLe9", "scopes": ["tWklzU5M", "pEp240bi", "jEjQiY7h"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AddThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'ONtLV9m1' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 141 'AddThirdPartyLoginPlatformCredentialV3' test.out

#- 142 DeleteThirdPartyLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op DeleteThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'V9seWDY1' \
    > test.out 2>&1
eval_tap $? 142 'DeleteThirdPartyLoginPlatformCredentialV3' test.out

#- 143 UpdateThirdPartyLoginPlatformCredentialV3
# body param: body
echo '{"ACSURL": "t9qIYNeu", "AWSCognitoRegion": "6u8e2O4X", "AWSCognitoUserPool": "9QyBFZL4", "AllowedClients": ["oxk20i94", "ejxN9UO7", "be2s6xbZ"], "AppId": "4cURhmY3", "AuthorizationEndpoint": "L8CGk5wJ", "ClientId": "x6F8QJWU", "Environment": "1GNGujJQ", "FederationMetadataURL": "t66s7vLE", "GenericOauthFlow": true, "IsActive": true, "Issuer": "eyV2HYxg", "JWKSEndpoint": "7I60pxf3", "KeyID": "PLSqy6iX", "NetflixCertificates": {"encryptedPrivateKey": "gVFdIy2W", "encryptedPrivateKeyName": "RLNTK9ho", "publicCertificate": "NAzULugF", "publicCertificateName": "qpGxODoo", "rootCertificate": "cDneVOr4", "rootCertificateName": "zbI3Hty7"}, "OrganizationId": "ng1V9CAP", "PlatformName": "cPQMGSun", "RedirectUri": "hWS95l9e", "RegisteredDomains": [{"affectedClientIDs": ["zI7Wxvqb", "0KIBbN4s", "E6FKjzya"], "domain": "1W6d9Hlt", "namespaces": ["dZTsPQR5", "YNIVUGK9", "Pnp7a4c7"], "roleId": "YEdzkcCR"}, {"affectedClientIDs": ["NPNbXHCF", "MueoBp8d", "e9V8eOkA"], "domain": "yNMbX4Lo", "namespaces": ["XODXyh4h", "vN4S3Hnr", "dr6qErMF"], "roleId": "HoJj7KNh"}, {"affectedClientIDs": ["uTpf0eQd", "3VITJ8LD", "TYhePhEq"], "domain": "Xgvtn2pE", "namespaces": ["ZSC7dzR9", "JykIapgO", "CaK7sSlT"], "roleId": "k9SYTbLk"}], "Secret": "8Rpp0mLH", "TeamID": "7KfOA3sL", "TokenAuthenticationType": "hWlzWoMS", "TokenClaimsMapping": {"RD5BvJg0": "xFtGCWL4", "LaSpWbeT": "yJG05mQ2", "KnrN9bqs": "URfpZgFG"}, "TokenEndpoint": "8J2Y3kzE", "UserInfoEndpoint": "Im1t81FI", "UserInfoHTTPMethod": "dTvKokhJ", "scopes": ["TyYmT8zy", "5qtkvzFU", "4jUJZ4KM"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op UpdateThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'm6bXscLt' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 143 'UpdateThirdPartyLoginPlatformCredentialV3' test.out

#- 144 UpdateThirdPartyLoginPlatformDomainV3
# body param: body
echo '{"affectedClientIDs": ["DbRtKnSM", "tKvbfSdv", "bqpwadSP"], "assignedNamespaces": ["k3YaCIEi", "6nuzRLE1", "vdCWcIMW"], "domain": "zVT6yzvu", "roleId": "EOeCImLK"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op UpdateThirdPartyLoginPlatformDomainV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'gg142NcB' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 144 'UpdateThirdPartyLoginPlatformDomainV3' test.out

#- 145 DeleteThirdPartyLoginPlatformDomainV3
# body param: body
echo '{"domain": "wjPGStY7"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op DeleteThirdPartyLoginPlatformDomainV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'khvsQc1w' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 145 'DeleteThirdPartyLoginPlatformDomainV3' test.out

#- 146 RetrieveSSOLoginPlatformCredential
$CLI_EXE \
    --sn iam \
    --op RetrieveSSOLoginPlatformCredential \
    --namespace $AB_NAMESPACE \
    --platformId '1DiFjTlG' \
    > test.out 2>&1
eval_tap $? 146 'RetrieveSSOLoginPlatformCredential' test.out

#- 147 AddSSOLoginPlatformCredential
# body param: body
echo '{"acsUrl": "TmQjm37c", "apiKey": "0cqS8t9a", "appId": "YAFb9K6H", "federationMetadataUrl": "rwnqvV5B", "isActive": true, "redirectUri": "XdnQPaAz", "secret": "xWuhL1wr", "ssoUrl": "xmt9NItz"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AddSSOLoginPlatformCredential \
    --namespace $AB_NAMESPACE \
    --platformId 'BW18RLeY' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 147 'AddSSOLoginPlatformCredential' test.out

#- 148 DeleteSSOLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op DeleteSSOLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'zCDMWpM2' \
    > test.out 2>&1
eval_tap $? 148 'DeleteSSOLoginPlatformCredentialV3' test.out

#- 149 UpdateSSOPlatformCredential
# body param: body
echo '{"acsUrl": "KgrD1HG5", "apiKey": "WCori4qt", "appId": "gkXKzmvv", "federationMetadataUrl": "TZ2wRIWw", "isActive": true, "redirectUri": "ykMIcwRl", "secret": "7sWdutVW", "ssoUrl": "teEF5Vo1"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op UpdateSSOPlatformCredential \
    --namespace $AB_NAMESPACE \
    --platformId 'nniz5E6S' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 149 'UpdateSSOPlatformCredential' test.out

#- 150 AdminListUserIDByPlatformUserIDsV3
# body param: body
echo '{"platformUserIds": ["qkqK0GTQ", "5Iicqhk1", "AL3idVgS"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminListUserIDByPlatformUserIDsV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'F28PEOu6' \
    --rawPID 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 150 'AdminListUserIDByPlatformUserIDsV3' test.out

#- 151 AdminGetUserByPlatformUserIDV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserByPlatformUserIDV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'C9bMNsM5' \
    --platformUserId '8rk7Pgvs' \
    > test.out 2>&1
eval_tap $? 151 'AdminGetUserByPlatformUserIDV3' test.out

#- 152 GetAdminUsersByRoleIdV3
$CLI_EXE \
    --sn iam \
    --op GetAdminUsersByRoleIdV3 \
    --namespace $AB_NAMESPACE \
    --roleId 'jIoBEm7x' \
    --after '88' \
    --before '40' \
    --limit '12' \
    > test.out 2>&1
eval_tap $? 152 'GetAdminUsersByRoleIdV3' test.out

#- 153 AdminGetUserByEmailAddressV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserByEmailAddressV3 \
    --namespace $AB_NAMESPACE \
    --emailAddress 'WiuvrDlF' \
    > test.out 2>&1
eval_tap $? 153 'AdminGetUserByEmailAddressV3' test.out

#- 154 AdminBulkUpdateUsersV3
# body param: body
echo '{"updateRequest": {"skipLoginQueue": true}, "userIds": ["BhJVCCda", "d4qpooPu", "6sSMVNS6"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBulkUpdateUsersV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 154 'AdminBulkUpdateUsersV3' test.out

#- 155 AdminGetBulkUserBanV3
# body param: body
echo '{"bulkUserId": ["UCdD4Pcp", "jUSxzYjh", "ohxVqhDh"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminGetBulkUserBanV3 \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --banType 'Gqu0kQbm' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 155 'AdminGetBulkUserBanV3' test.out

#- 156 AdminListUserIDByUserIDsV3
# body param: body
echo '{"userIds": ["nLyxrLnV", "mdvD7xem", "H6AjY4Jy"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminListUserIDByUserIDsV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 156 'AdminListUserIDByUserIDsV3' test.out

#- 157 AdminBulkGetUsersPlatform
# body param: body
echo '{"userIds": ["F3uMQRDO", "Tce0rkdc", "kxhhhbNf"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBulkGetUsersPlatform \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 157 'AdminBulkGetUsersPlatform' test.out

#- 158 AdminInviteUserV3
# body param: body
echo '{"emailAddresses": ["QsqfSyId", "7BbHJOTw", "2A2cwUwV"], "isAdmin": false, "namespace": "BOC8K0Rv", "roles": ["MuyVKyLJ", "7mO59hGi", "wfNdQsmZ"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminInviteUserV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 158 'AdminInviteUserV3' test.out

#- 159 AdminQueryThirdPlatformLinkHistoryV3
$CLI_EXE \
    --sn iam \
    --op AdminQueryThirdPlatformLinkHistoryV3 \
    --namespace $AB_NAMESPACE \
    --limit '74' \
    --offset '58' \
    --platformUserId 'GzR5PROx' \
    --platformId 'ThnL1mfi' \
    > test.out 2>&1
eval_tap $? 159 'AdminQueryThirdPlatformLinkHistoryV3' test.out

#- 160 AdminListUsersV3
$CLI_EXE \
    --sn iam \
    --op AdminListUsersV3 \
    --namespace $AB_NAMESPACE \
    --limit '23' \
    --offset '80' \
    > test.out 2>&1
eval_tap $? 160 'AdminListUsersV3' test.out

#- 161 AdminSearchUserV3
$CLI_EXE \
    --sn iam \
    --op AdminSearchUserV3 \
    --namespace $AB_NAMESPACE \
    --by '7TAYxz5u' \
    --endDate '5Y8e5sQI' \
    --includeTotal 'false' \
    --limit '87' \
    --offset '0' \
    --platformBy '8KaR3FfX' \
    --platformId 'caxoqDUa' \
    --query 'ICecHE2D' \
    --roleIds 'ylbuRmwZ' \
    --skipLoginQueue 'false' \
    --startDate 'LYxWTdvs' \
    --testAccount 'false' \
    > test.out 2>&1
eval_tap $? 161 'AdminSearchUserV3' test.out

#- 162 AdminGetBulkUserByEmailAddressV3
# body param: body
echo '{"listEmailAddressRequest": ["6oMfhhqa", "7mwqNAZ9", "BYiptr8T"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminGetBulkUserByEmailAddressV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 162 'AdminGetBulkUserByEmailAddressV3' test.out

#- 163 AdminGetUserByUserIdV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserByUserIdV3 \
    --namespace $AB_NAMESPACE \
    --userId 'LHvH6jgR' \
    > test.out 2>&1
eval_tap $? 163 'AdminGetUserByUserIdV3' test.out

#- 164 AdminUpdateUserV3
# body param: body
echo '{"avatarUrl": "wijqhsHP", "country": "XIOP8z4q", "dateOfBirth": "yZtYApnV", "displayName": "2NeoyIqZ", "languageTag": "jkG83Kg9", "skipLoginQueue": true, "uniqueDisplayName": "OVy0iBm7", "userName": "3lG0jVbm"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserV3 \
    --namespace $AB_NAMESPACE \
    --userId 'MwwuE4DD' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 164 'AdminUpdateUserV3' test.out

#- 165 AdminGetUserBanV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserBanV3 \
    --namespace $AB_NAMESPACE \
    --userId 'gIVFAr27' \
    --activeOnly 'true' \
    --after '4QkFYR7X' \
    --before 'Ch5VUb6d' \
    --limit '45' \
    > test.out 2>&1
eval_tap $? 165 'AdminGetUserBanV3' test.out

#- 166 AdminBanUserV3
# body param: body
echo '{"ban": "cW2TlWAh", "comment": "iTsGWm7g", "endDate": "i99CAn07", "reason": "cqnh0jDg", "skipNotif": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBanUserV3 \
    --namespace $AB_NAMESPACE \
    --userId 'DjERVSa9' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 166 'AdminBanUserV3' test.out

#- 167 AdminUpdateUserBanV3
# body param: body
echo '{"enabled": true, "skipNotif": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserBanV3 \
    --banId '7gBJmxzy' \
    --namespace $AB_NAMESPACE \
    --userId 'JSM9j5iu' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 167 'AdminUpdateUserBanV3' test.out

#- 168 AdminSendVerificationCodeV3
# body param: body
echo '{"context": "b3Voq0eP", "emailAddress": "WeSYPFmZ", "languageTag": "52DyFyPY"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminSendVerificationCodeV3 \
    --namespace $AB_NAMESPACE \
    --userId 'omZGfFZj' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 168 'AdminSendVerificationCodeV3' test.out

#- 169 AdminVerifyAccountV3
# body param: body
echo '{"Code": "asrbst10", "ContactType": "nXqx8fsm", "LanguageTag": "GUTNV3aU", "validateOnly": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminVerifyAccountV3 \
    --namespace $AB_NAMESPACE \
    --userId 'Kt1m8ZUc' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 169 'AdminVerifyAccountV3' test.out

#- 170 GetUserVerificationCode
$CLI_EXE \
    --sn iam \
    --op GetUserVerificationCode \
    --namespace $AB_NAMESPACE \
    --userId 'msAyNruv' \
    > test.out 2>&1
eval_tap $? 170 'GetUserVerificationCode' test.out

#- 171 AdminGetUserDeletionStatusV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserDeletionStatusV3 \
    --namespace $AB_NAMESPACE \
    --userId 'TBLMPoAV' \
    > test.out 2>&1
eval_tap $? 171 'AdminGetUserDeletionStatusV3' test.out

#- 172 AdminUpdateUserDeletionStatusV3
# body param: body
echo '{"deletionDate": 38, "enabled": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserDeletionStatusV3 \
    --namespace $AB_NAMESPACE \
    --userId 'p6rsClqX' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 172 'AdminUpdateUserDeletionStatusV3' test.out

#- 173 AdminListUserAllPlatformAccountsDistinctV3
$CLI_EXE \
    --sn iam \
    --op AdminListUserAllPlatformAccountsDistinctV3 \
    --namespace $AB_NAMESPACE \
    --userId 'k1F2Gq8i' \
    > test.out 2>&1
eval_tap $? 173 'AdminListUserAllPlatformAccountsDistinctV3' test.out

#- 174 AdminUpgradeHeadlessAccountV3
# body param: body
echo '{"code": "Su0zKdwg", "country": "w5QBnnNy", "dateOfBirth": "HZukNcxs", "displayName": "3TmMdm5P", "emailAddress": "4vk1cKZe", "password": "ftomXSr6", "uniqueDisplayName": "brP8u0f4", "validateOnly": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpgradeHeadlessAccountV3 \
    --namespace $AB_NAMESPACE \
    --userId 'x1JrNsqJ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 174 'AdminUpgradeHeadlessAccountV3' test.out

#- 175 AdminDeleteUserInformationV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserInformationV3 \
    --namespace $AB_NAMESPACE \
    --userId 'OKkXXRKG' \
    > test.out 2>&1
eval_tap $? 175 'AdminDeleteUserInformationV3' test.out

#- 176 AdminGetUserLoginHistoriesV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserLoginHistoriesV3 \
    --namespace $AB_NAMESPACE \
    --userId 'QnSFfjjx' \
    --after '0.12075766653063391' \
    --before '0.3925370016695847' \
    --limit '23' \
    > test.out 2>&1
eval_tap $? 176 'AdminGetUserLoginHistoriesV3' test.out

#- 177 AdminResetPasswordV3
# body param: body
echo '{"languageTag": "iiP9NRJb", "newPassword": "KUxgoin5", "oldPassword": "FDSfBtHE"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminResetPasswordV3 \
    --namespace $AB_NAMESPACE \
    --userId 'I8peZR0l' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 177 'AdminResetPasswordV3' test.out

#- 178 AdminUpdateUserPermissionV3
# body param: body
echo '{"Permissions": [{"Action": 18, "Resource": "yDU7uXDy", "SchedAction": 14, "SchedCron": "jBGOWxIT", "SchedRange": ["YOtmnwIB", "NhrmMvY9", "3z7iE7xZ"]}, {"Action": 46, "Resource": "WwvnIjTM", "SchedAction": 92, "SchedCron": "NclINLk2", "SchedRange": ["cx4uaeaS", "e4T8NB3B", "6iR75Oe2"]}, {"Action": 41, "Resource": "D0TBnRYL", "SchedAction": 85, "SchedCron": "PWvN7Kf5", "SchedRange": ["bKCBZ1yi", "qu6Vpeam", "bKyXXSAz"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserPermissionV3 \
    --namespace $AB_NAMESPACE \
    --userId 'FZU0VHjC' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 178 'AdminUpdateUserPermissionV3' test.out

#- 179 AdminAddUserPermissionsV3
# body param: body
echo '{"Permissions": [{"Action": 57, "Resource": "powiQWoP", "SchedAction": 73, "SchedCron": "IqOaDOGM", "SchedRange": ["ZHJrMp1H", "aMzIkI2g", "ajQQhVZf"]}, {"Action": 30, "Resource": "qy2xXiD0", "SchedAction": 24, "SchedCron": "HwfoD7lH", "SchedRange": ["NdjHlNxF", "0tMqqU12", "I0KgvaAP"]}, {"Action": 43, "Resource": "zHGbV0bc", "SchedAction": 57, "SchedCron": "FBq9yQyU", "SchedRange": ["3mEuCQZM", "P3Pce28G", "fV6IfNu1"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddUserPermissionsV3 \
    --namespace $AB_NAMESPACE \
    --userId 'QGYnCMX2' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 179 'AdminAddUserPermissionsV3' test.out

#- 180 AdminDeleteUserPermissionBulkV3
# body param: body
echo '[{"Action": 57, "Resource": "jyuj7ZnB"}, {"Action": 60, "Resource": "SqHUTmp4"}, {"Action": 96, "Resource": "O0vBaUQT"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserPermissionBulkV3 \
    --namespace $AB_NAMESPACE \
    --userId '1Cr0Tqcu' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 180 'AdminDeleteUserPermissionBulkV3' test.out

#- 181 AdminDeleteUserPermissionV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserPermissionV3 \
    --action '22' \
    --namespace $AB_NAMESPACE \
    --resource 'vImjAPhY' \
    --userId 'WtcpMOGQ' \
    > test.out 2>&1
eval_tap $? 181 'AdminDeleteUserPermissionV3' test.out

#- 182 AdminGetUserPlatformAccountsV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserPlatformAccountsV3 \
    --namespace $AB_NAMESPACE \
    --userId '0PElw1gN' \
    --after 'jMqDgQSH' \
    --before 'LjkzAqn3' \
    --limit '65' \
    --platformId 'EA78Q6U6' \
    > test.out 2>&1
eval_tap $? 182 'AdminGetUserPlatformAccountsV3' test.out

#- 183 AdminGetListJusticePlatformAccounts
$CLI_EXE \
    --sn iam \
    --op AdminGetListJusticePlatformAccounts \
    --namespace $AB_NAMESPACE \
    --userId 'uh8EQO5E' \
    > test.out 2>&1
eval_tap $? 183 'AdminGetListJusticePlatformAccounts' test.out

#- 184 AdminGetUserMapping
$CLI_EXE \
    --sn iam \
    --op AdminGetUserMapping \
    --namespace $AB_NAMESPACE \
    --targetNamespace 'CvzsRVHn' \
    --userId 'SJgeV1Kp' \
    > test.out 2>&1
eval_tap $? 184 'AdminGetUserMapping' test.out

#- 185 AdminCreateJusticeUser
$CLI_EXE \
    --sn iam \
    --op AdminCreateJusticeUser \
    --namespace $AB_NAMESPACE \
    --targetNamespace 'zGZ0NpCl' \
    --userId 'seVtLbbW' \
    > test.out 2>&1
eval_tap $? 185 'AdminCreateJusticeUser' test.out

#- 186 AdminLinkPlatformAccount
# body param: body
echo '{"platformId": "DaOHSsza", "platformUserId": "cLoxYLCh"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminLinkPlatformAccount \
    --namespace $AB_NAMESPACE \
    --userId 'AX4SvOkQ' \
    --skipConflict 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 186 'AdminLinkPlatformAccount' test.out

#- 187 AdminPlatformUnlinkV3
# body param: body
echo '{"platformNamespace": "0IteZfmg"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminPlatformUnlinkV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'J5qINicN' \
    --userId 'JCZ0fpvJ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 187 'AdminPlatformUnlinkV3' test.out

#- 188 AdminPlatformUnlinkAllV3
$CLI_EXE \
    --sn iam \
    --op AdminPlatformUnlinkAllV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'tRxJPExD' \
    --userId '9kZK5DEc' \
    > test.out 2>&1
eval_tap $? 188 'AdminPlatformUnlinkAllV3' test.out

#- 189 AdminPlatformLinkV3
$CLI_EXE \
    --sn iam \
    --op AdminPlatformLinkV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'hZ0P7Y18' \
    --userId 'UVXgO73V' \
    --ticket '7CXqgEQK' \
    > test.out 2>&1
eval_tap $? 189 'AdminPlatformLinkV3' test.out

#- 190 AdminDeleteUserLinkingHistoryByPlatformIDV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserLinkingHistoryByPlatformIDV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'uzYRmGdm' \
    --userId 'HMa61ZzW' \
    > test.out 2>&1
eval_tap $? 190 'AdminDeleteUserLinkingHistoryByPlatformIDV3' test.out

#- 191 AdminGetThirdPartyPlatformTokenLinkStatusV3
$CLI_EXE \
    --sn iam \
    --op AdminGetThirdPartyPlatformTokenLinkStatusV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'JPXtgUHt' \
    --userId 'SHGFwdXh' \
    --platformToken 'esj74PmJ' \
    > test.out 2>&1
eval_tap $? 191 'AdminGetThirdPartyPlatformTokenLinkStatusV3' test.out

#- 192 AdminGetUserSinglePlatformAccount
$CLI_EXE \
    --sn iam \
    --op AdminGetUserSinglePlatformAccount \
    --namespace $AB_NAMESPACE \
    --platformId '0BolsGIy' \
    --userId 'rJKkTYjS' \
    > test.out 2>&1
eval_tap $? 192 'AdminGetUserSinglePlatformAccount' test.out

#- 193 AdminDeleteUserRolesV3
# body param: body
echo '["qky1MvpS", "CG8vstS3", "elzMTfU6"]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserRolesV3 \
    --namespace $AB_NAMESPACE \
    --userId 'M3MoyIdN' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 193 'AdminDeleteUserRolesV3' test.out

#- 194 AdminSaveUserRoleV3
# body param: body
echo '[{"namespace": "1JWj1s8o", "roleId": "LXW6M0qd"}, {"namespace": "CVFq5ExG", "roleId": "ZlSpbZW6"}, {"namespace": "pxEAYPVM", "roleId": "gdi6a2tj"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminSaveUserRoleV3 \
    --namespace $AB_NAMESPACE \
    --userId 'qChNMEFF' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 194 'AdminSaveUserRoleV3' test.out

#- 195 AdminAddUserRoleV3
$CLI_EXE \
    --sn iam \
    --op AdminAddUserRoleV3 \
    --namespace $AB_NAMESPACE \
    --roleId '9BIax6Zb' \
    --userId '4sHkNSWG' \
    > test.out 2>&1
eval_tap $? 195 'AdminAddUserRoleV3' test.out

#- 196 AdminDeleteUserRoleV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserRoleV3 \
    --namespace $AB_NAMESPACE \
    --roleId 'Ue4X9QPx' \
    --userId 'UGEWX28r' \
    > test.out 2>&1
eval_tap $? 196 'AdminDeleteUserRoleV3' test.out

#- 197 AdminUpdateUserStatusV3
# body param: body
echo '{"enabled": true, "reason": "7EAGGwH9"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserStatusV3 \
    --namespace $AB_NAMESPACE \
    --userId 'PObMRHkC' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 197 'AdminUpdateUserStatusV3' test.out

#- 198 AdminTrustlyUpdateUserIdentity
# body param: body
echo '{"emailAddress": "spmZ8jIs", "password": "F2q9gW9u"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminTrustlyUpdateUserIdentity \
    --namespace $AB_NAMESPACE \
    --userId 'TvLFltdg' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 198 'AdminTrustlyUpdateUserIdentity' test.out

#- 199 AdminVerifyUserWithoutVerificationCodeV3
$CLI_EXE \
    --sn iam \
    --op AdminVerifyUserWithoutVerificationCodeV3 \
    --namespace $AB_NAMESPACE \
    --userId '5VoN64Ri' \
    > test.out 2>&1
eval_tap $? 199 'AdminVerifyUserWithoutVerificationCodeV3' test.out

#- 200 AdminUpdateClientSecretV3
# body param: body
echo '{"newSecret": "ekhENYK9"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateClientSecretV3 \
    --clientId 'UhJLGeGA' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 200 'AdminUpdateClientSecretV3' test.out

#- 201 AdminCheckThirdPartyLoginPlatformAvailabilityV3
$CLI_EXE \
    --sn iam \
    --op AdminCheckThirdPartyLoginPlatformAvailabilityV3 \
    --platformId 'gGII6Nj4' \
    > test.out 2>&1
eval_tap $? 201 'AdminCheckThirdPartyLoginPlatformAvailabilityV3' test.out

#- 202 AdminGetRolesV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRolesV3 \
    --after 'RnFyxg33' \
    --before 'DV8ozLvJ' \
    --isWildcard 'true' \
    --limit '92' \
    > test.out 2>&1
eval_tap $? 202 'AdminGetRolesV3' test.out

#- 203 AdminCreateRoleV3
# body param: body
echo '{"adminRole": false, "deletable": true, "isWildcard": true, "managers": [{"displayName": "hGbJBDYc", "namespace": "B3umY3nL", "userId": "lqkffIWx"}, {"displayName": "tTMBooiO", "namespace": "3U7RqW3S", "userId": "5HP47iRq"}, {"displayName": "A8fel6sY", "namespace": "hXE9DquL", "userId": "hbFnfhGM"}], "members": [{"displayName": "OEsy2JnN", "namespace": "CW78O6UZ", "userId": "6ieQlj2V"}, {"displayName": "P0QbHMvL", "namespace": "4UCgWAmn", "userId": "hwrysaAx"}, {"displayName": "yMj7DV8d", "namespace": "8oGWmBvK", "userId": "cqTaZBwe"}], "permissions": [{"action": 56, "resource": "EloM7ApM", "schedAction": 99, "schedCron": "UMb77YU9", "schedRange": ["DvEQTvAs", "6YOBmiuG", "a2h5Umrp"]}, {"action": 78, "resource": "DZUtE1rM", "schedAction": 43, "schedCron": "yVJzAy7R", "schedRange": ["ThVItvj2", "9PCAyOv0", "adHZKDBX"]}, {"action": 78, "resource": "PJCtBkKx", "schedAction": 88, "schedCron": "kBgbQ2wp", "schedRange": ["dyJmMsj7", "XoV33UGY", "53iM7DFY"]}], "roleName": "6LfVUoXr"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminCreateRoleV3 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 203 'AdminCreateRoleV3' test.out

#- 204 AdminGetRoleV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleV3 \
    --roleId 'tYHJ4ixC' \
    > test.out 2>&1
eval_tap $? 204 'AdminGetRoleV3' test.out

#- 205 AdminDeleteRoleV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteRoleV3 \
    --roleId 'Yikh78RX' \
    > test.out 2>&1
eval_tap $? 205 'AdminDeleteRoleV3' test.out

#- 206 AdminUpdateRoleV3
# body param: body
echo '{"deletable": true, "isWildcard": true, "roleName": "8UklwcAy"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateRoleV3 \
    --roleId 'ibLhDiT8' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 206 'AdminUpdateRoleV3' test.out

#- 207 AdminGetRoleAdminStatusV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleAdminStatusV3 \
    --roleId 'YppVV0Z6' \
    > test.out 2>&1
eval_tap $? 207 'AdminGetRoleAdminStatusV3' test.out

#- 208 AdminUpdateAdminRoleStatusV3
$CLI_EXE \
    --sn iam \
    --op AdminUpdateAdminRoleStatusV3 \
    --roleId 'rPxtvXZT' \
    > test.out 2>&1
eval_tap $? 208 'AdminUpdateAdminRoleStatusV3' test.out

#- 209 AdminRemoveRoleAdminV3
$CLI_EXE \
    --sn iam \
    --op AdminRemoveRoleAdminV3 \
    --roleId 'Ghb0QEsW' \
    > test.out 2>&1
eval_tap $? 209 'AdminRemoveRoleAdminV3' test.out

#- 210 AdminGetRoleManagersV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleManagersV3 \
    --roleId 'q0knf7FV' \
    --after '3sW46a8B' \
    --before 'PAUsVQU1' \
    --limit '34' \
    > test.out 2>&1
eval_tap $? 210 'AdminGetRoleManagersV3' test.out

#- 211 AdminAddRoleManagersV3
# body param: body
echo '{"managers": [{"displayName": "uXoMIhC8", "namespace": "DN5LRIUZ", "userId": "EQBG4N0d"}, {"displayName": "i815MT5z", "namespace": "fk2ytTo6", "userId": "n6BaqB3u"}, {"displayName": "zXXyQOam", "namespace": "TPhRP8it", "userId": "9dQes1o4"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddRoleManagersV3 \
    --roleId 'beq9i9cT' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 211 'AdminAddRoleManagersV3' test.out

#- 212 AdminRemoveRoleManagersV3
# body param: body
echo '{"managers": [{"displayName": "IuoJFqMD", "namespace": "IVyQT1Fr", "userId": "gr2On5Q7"}, {"displayName": "gyOcMQB2", "namespace": "b5K7TOtz", "userId": "bmjJtlRD"}, {"displayName": "Im8iJCr6", "namespace": "8OGGEjk2", "userId": "TPu7nX6B"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminRemoveRoleManagersV3 \
    --roleId 'n49485r8' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 212 'AdminRemoveRoleManagersV3' test.out

#- 213 AdminGetRoleMembersV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleMembersV3 \
    --roleId '2wpM83qo' \
    --after 'tLuolJFv' \
    --before 'M8qRw4by' \
    --limit '99' \
    > test.out 2>&1
eval_tap $? 213 'AdminGetRoleMembersV3' test.out

#- 214 AdminAddRoleMembersV3
# body param: body
echo '{"members": [{"displayName": "vGhhl5o9", "namespace": "Ty5J5iqV", "userId": "nrRrdmE0"}, {"displayName": "XsdOOkBs", "namespace": "ZqkRQi4W", "userId": "xPN5jHYk"}, {"displayName": "lxMxxIbV", "namespace": "0t5NUyCn", "userId": "iulnHIYo"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddRoleMembersV3 \
    --roleId 'ESU9ZQme' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 214 'AdminAddRoleMembersV3' test.out

#- 215 AdminRemoveRoleMembersV3
# body param: body
echo '{"members": [{"displayName": "aMQyuAdv", "namespace": "olhUWoKO", "userId": "PdMiKXpF"}, {"displayName": "Lpz12ycl", "namespace": "bvdq9nVq", "userId": "jkQmpOjD"}, {"displayName": "LkGA11gi", "namespace": "wrHFcJOv", "userId": "O6i4WEYe"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminRemoveRoleMembersV3 \
    --roleId 'x6qt5VAW' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 215 'AdminRemoveRoleMembersV3' test.out

#- 216 AdminUpdateRolePermissionsV3
# body param: body
echo '{"permissions": [{"action": 26, "resource": "9bJrX7Bk", "schedAction": 1, "schedCron": "iFYe7g1C", "schedRange": ["eMPTlnGC", "xH02M9Gr", "3vMZodUq"]}, {"action": 45, "resource": "VMWV7E2E", "schedAction": 97, "schedCron": "eTaeGiPw", "schedRange": ["jZ3o866c", "rkzO47rb", "JaQwFYAI"]}, {"action": 65, "resource": "TtXmnSlN", "schedAction": 32, "schedCron": "JcBt2iPm", "schedRange": ["gf7Twduz", "KpBwsK5g", "CDJBhl8d"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateRolePermissionsV3 \
    --roleId 'zgFXSbtv' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 216 'AdminUpdateRolePermissionsV3' test.out

#- 217 AdminAddRolePermissionsV3
# body param: body
echo '{"permissions": [{"action": 73, "resource": "AZipKT5T", "schedAction": 55, "schedCron": "C50hb9q8", "schedRange": ["HZGYKA9q", "9G1Qgw4y", "Y6ldwfpI"]}, {"action": 56, "resource": "szdrvCJe", "schedAction": 86, "schedCron": "gAlGA3pb", "schedRange": ["DoSFvxNT", "Ps6WGJoZ", "hzvAI3bf"]}, {"action": 5, "resource": "qjilChdA", "schedAction": 34, "schedCron": "5qsuuhB7", "schedRange": ["ZQ5JfQJS", "am2unUuf", "PM0ldueR"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddRolePermissionsV3 \
    --roleId 'Wipf1Zoz' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 217 'AdminAddRolePermissionsV3' test.out

#- 218 AdminDeleteRolePermissionsV3
# body param: body
echo '["35fY7aWp", "IUFHu2Du", "O26VrGTx"]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDeleteRolePermissionsV3 \
    --roleId 'K0RcAsU8' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 218 'AdminDeleteRolePermissionsV3' test.out

#- 219 AdminDeleteRolePermissionV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteRolePermissionV3 \
    --action '86' \
    --resource '3erGXZt1' \
    --roleId 'poFMNMBi' \
    > test.out 2>&1
eval_tap $? 219 'AdminDeleteRolePermissionV3' test.out

#- 220 AdminGetMyUserV3
$CLI_EXE \
    --sn iam \
    --op AdminGetMyUserV3 \
    > test.out 2>&1
eval_tap $? 220 'AdminGetMyUserV3' test.out

#- 221 UserAuthenticationV3
$CLI_EXE \
    --sn iam \
    --op UserAuthenticationV3 \
    --client_id 'XwtTZDRW' \
    --extend_exp 'true' \
    --redirect_uri 'vfvRhoyC' \
    --password 'XmnHPClG' \
    --request_id 'nr9O8QTG' \
    --user_name 'NK5qxL01' \
    > test.out 2>&1
eval_tap $? 221 'UserAuthenticationV3' test.out

#- 222 AuthenticationWithPlatformLinkV3
$CLI_EXE \
    --sn iam \
    --op AuthenticationWithPlatformLinkV3 \
    --extend_exp 'true' \
    --client_id '166154Q5' \
    --linkingToken 't2Va1ClD' \
    --password 'xTcG5Nrl' \
    --username 'mfNEBbiZ' \
    > test.out 2>&1
eval_tap $? 222 'AuthenticationWithPlatformLinkV3' test.out

#- 223 GenerateTokenByNewHeadlessAccountV3
$CLI_EXE \
    --sn iam \
    --op GenerateTokenByNewHeadlessAccountV3 \
    --additionalData 'QItirGax' \
    --extend_exp 'false' \
    --linkingToken '74dDWSe5' \
    > test.out 2>&1
eval_tap $? 223 'GenerateTokenByNewHeadlessAccountV3' test.out

#- 224 RequestOneTimeLinkingCodeV3
$CLI_EXE \
    --sn iam \
    --op RequestOneTimeLinkingCodeV3 \
    --platformId '13FGLOhE' \
    > test.out 2>&1
eval_tap $? 224 'RequestOneTimeLinkingCodeV3' test.out

#- 225 ValidateOneTimeLinkingCodeV3
$CLI_EXE \
    --sn iam \
    --op ValidateOneTimeLinkingCodeV3 \
    --oneTimeLinkCode 'FgtX4uoN' \
    > test.out 2>&1
eval_tap $? 225 'ValidateOneTimeLinkingCodeV3' test.out

#- 226 RequestTokenByOneTimeLinkCodeResponseV3
$CLI_EXE \
    --sn iam \
    --op RequestTokenByOneTimeLinkCodeResponseV3 \
    --additionalData 'oonxf5gm' \
    --isTransient 'true' \
    --client_id 'ekqQEQjW' \
    --oneTimeLinkCode 'bso4fn63' \
    > test.out 2>&1
eval_tap $? 226 'RequestTokenByOneTimeLinkCodeResponseV3' test.out

#- 227 GetCountryLocationV3
$CLI_EXE \
    --sn iam \
    --op GetCountryLocationV3 \
    > test.out 2>&1
eval_tap $? 227 'GetCountryLocationV3' test.out

#- 228 Logout
$CLI_EXE \
    --sn iam \
    --op Logout \
    > test.out 2>&1
eval_tap $? 228 'Logout' test.out

#- 229 RequestTokenExchangeCodeV3
$CLI_EXE \
    --sn iam \
    --op RequestTokenExchangeCodeV3 \
    --namespace $AB_NAMESPACE \
    --codeChallenge 'WanIfwRC' \
    --codeChallengeMethod 'S256' \
    --client_id '5VTmQXp7' \
    > test.out 2>&1
eval_tap $? 229 'RequestTokenExchangeCodeV3' test.out

#- 230 AdminRetrieveUserThirdPartyPlatformTokenV3
$CLI_EXE \
    --sn iam \
    --op AdminRetrieveUserThirdPartyPlatformTokenV3 \
    --namespace $AB_NAMESPACE \
    --platformId '0FbcIBu9' \
    --userId 'lcYEWrxH' \
    > test.out 2>&1
eval_tap $? 230 'AdminRetrieveUserThirdPartyPlatformTokenV3' test.out

#- 231 RevokeUserV3
$CLI_EXE \
    --sn iam \
    --op RevokeUserV3 \
    --namespace $AB_NAMESPACE \
    --userId 'dHBm7bPP' \
    --includeGameNamespace 'false' \
    > test.out 2>&1
eval_tap $? 231 'RevokeUserV3' test.out

#- 232 AuthorizeV3
$CLI_EXE \
    --sn iam \
    --op AuthorizeV3 \
    --codeChallenge 'j28mkYZx' \
    --codeChallengeMethod 'S256' \
    --createHeadless 'true' \
    --oneTimeLinkCode 'dVuVoJEZ' \
    --redirectUri 'xbX5Pa3g' \
    --scope 'K2nwFEuO' \
    --state '7hm16VTW' \
    --targetAuthPage 'GLrKJ3TC' \
    --useRedirectUriAsLoginUrlWhenLocked 'false' \
    --clientId 'pPogktZq' \
    --responseType 'code' \
    > test.out 2>&1
eval_tap $? 232 'AuthorizeV3' test.out

#- 233 TokenIntrospectionV3
$CLI_EXE \
    --sn iam \
    --op TokenIntrospectionV3 \
    --token '9F4nL15t' \
    > test.out 2>&1
eval_tap $? 233 'TokenIntrospectionV3' test.out

#- 234 GetJWKSV3
$CLI_EXE \
    --sn iam \
    --op GetJWKSV3 \
    > test.out 2>&1
eval_tap $? 234 'GetJWKSV3' test.out

#- 235 SendMFAAuthenticationCode
$CLI_EXE \
    --sn iam \
    --op SendMFAAuthenticationCode \
    --clientId 'idXS9JaX' \
    --factor 'BbMYvJ7f' \
    --mfaToken 'PAeMkiKO' \
    > test.out 2>&1
eval_tap $? 235 'SendMFAAuthenticationCode' test.out

#- 236 Change2faMethod
$CLI_EXE \
    --sn iam \
    --op Change2faMethod \
    --factor 'rrcbbTFs' \
    --mfaToken 'EUCTp3P7' \
    > test.out 2>&1
eval_tap $? 236 'Change2faMethod' test.out

#- 237 Verify2faCode
$CLI_EXE \
    --sn iam \
    --op Verify2faCode \
    --code 'sKaQ0P95' \
    --factor 'A3NxcJUQ' \
    --mfaToken 's18lX9Et' \
    --rememberDevice 'false' \
    > test.out 2>&1
eval_tap $? 237 'Verify2faCode' test.out

#- 238 RetrieveUserThirdPartyPlatformTokenV3
$CLI_EXE \
    --sn iam \
    --op RetrieveUserThirdPartyPlatformTokenV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'D9eaWlZG' \
    --userId 'n4B3wwoy' \
    > test.out 2>&1
eval_tap $? 238 'RetrieveUserThirdPartyPlatformTokenV3' test.out

#- 239 AuthCodeRequestV3
$CLI_EXE \
    --sn iam \
    --op AuthCodeRequestV3 \
    --platformId 'upRIghhE' \
    --clientId 'eN8BKksA' \
    --redirectUri 'j9SYBHcb' \
    --requestId 'f3La3u1l' \
    > test.out 2>&1
eval_tap $? 239 'AuthCodeRequestV3' test.out

#- 240 PlatformTokenGrantV3
$CLI_EXE \
    --sn iam \
    --op PlatformTokenGrantV3 \
    --platformId 'i32plT9L' \
    --additionalData 'bVCjj2yV' \
    --client_id 'fRskxSKf' \
    --createHeadless 'true' \
    --device_id 'E5ujeBTx' \
    --macAddress 'El4bgEA7' \
    --platform_token 'oOqBv6zs' \
    --skipSetCookie 'true' \
    > test.out 2>&1
eval_tap $? 240 'PlatformTokenGrantV3' test.out

#- 241 GetRevocationListV3
$CLI_EXE \
    --sn iam \
    --op GetRevocationListV3 \
    > test.out 2>&1
eval_tap $? 241 'GetRevocationListV3' test.out

#- 242 TokenRevocationV3
$CLI_EXE \
    --sn iam \
    --op TokenRevocationV3 \
    --token 'k3KIKXrI' \
    > test.out 2>&1
eval_tap $? 242 'TokenRevocationV3' test.out

#- 243 SimultaneousLoginV3
$CLI_EXE \
    --sn iam \
    --op SimultaneousLoginV3 \
    --simultaneousPlatform 'vS3KSA7i' \
    --simultaneousTicket 'NZy5hBct' \
    --nativePlatform 'epicgames' \
    --nativePlatformTicket 'MCm1PZTH' \
    > test.out 2>&1
eval_tap $? 243 'SimultaneousLoginV3' test.out

#- 244 TokenGrantV3
$CLI_EXE \
    --sn iam \
    --op TokenGrantV3 \
    --additionalData 'WL0usZPF' \
    --client_id 'PoTj8kOo' \
    --code 'MV7sZRLE' \
    --code_verifier 'Pc1x3z2z' \
    --extendNamespace 'mdAhYOqQ' \
    --extend_exp 'false' \
    --password 'rYPKjOo0' \
    --redirect_uri 'jRnRP9en' \
    --refresh_token 'Qvsybv1K' \
    --username 'dkcbq9aJ' \
    --grant_type 'password' \
    > test.out 2>&1
eval_tap $? 244 'TokenGrantV3' test.out

#- 245 VerifyTokenV3
$CLI_EXE \
    --sn iam \
    --op VerifyTokenV3 \
    --token '0bxiocEy' \
    > test.out 2>&1
eval_tap $? 245 'VerifyTokenV3' test.out

#- 246 PlatformAuthenticationV3
$CLI_EXE \
    --sn iam \
    --op PlatformAuthenticationV3 \
    --platformId 'S1miDXOn' \
    --code 'KjkUpTP5' \
    --error 'InRSP1Ar' \
    --openidAssocHandle '8ZKX7zxQ' \
    --openidClaimedId 'nXM8SPzr' \
    --openidIdentity 'EeqRzd6Z' \
    --openidMode 'slEcQmSL' \
    --openidNs 'Uz1BN9C2' \
    --openidOpEndpoint 'LAoik4xM' \
    --openidResponseNonce 'GowkCm8E' \
    --openidReturnTo '3rnsVdnU' \
    --openidSig 'lAmFCdMH' \
    --openidSigned '1PlDIzVi' \
    --state '6g8v0wzk' \
    > test.out 2>&1
eval_tap $? 246 'PlatformAuthenticationV3' test.out

#- 247 PlatformTokenRefreshV3
$CLI_EXE \
    --sn iam \
    --op PlatformTokenRefreshV3 \
    --platformId 'ssspFwB1' \
    --platform_token 'MTy90b0A' \
    > test.out 2>&1
eval_tap $? 247 'PlatformTokenRefreshV3' test.out

#- 248 PublicGetInputValidations
$CLI_EXE \
    --sn iam \
    --op PublicGetInputValidations \
    --defaultOnEmpty 'true' \
    --languageCode '1j02m0Yf' \
    > test.out 2>&1
eval_tap $? 248 'PublicGetInputValidations' test.out

#- 249 PublicGetInputValidationByField
$CLI_EXE \
    --sn iam \
    --op PublicGetInputValidationByField \
    --field 'U9YLWuZO' \
    > test.out 2>&1
eval_tap $? 249 'PublicGetInputValidationByField' test.out

#- 250 PublicGetCountryAgeRestrictionV3
$CLI_EXE \
    --sn iam \
    --op PublicGetCountryAgeRestrictionV3 \
    --countryCode 'MfOADAga' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 250 'PublicGetCountryAgeRestrictionV3' test.out

#- 251 PublicGetConfigValueV3
$CLI_EXE \
    --sn iam \
    --op PublicGetConfigValueV3 \
    --configKey 'o1lXEx66' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 251 'PublicGetConfigValueV3' test.out

#- 252 PublicGetCountryListV3
$CLI_EXE \
    --sn iam \
    --op PublicGetCountryListV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 252 'PublicGetCountryListV3' test.out

#- 253 RetrieveAllActiveThirdPartyLoginPlatformCredentialPublicV3
$CLI_EXE \
    --sn iam \
    --op RetrieveAllActiveThirdPartyLoginPlatformCredentialPublicV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 253 'RetrieveAllActiveThirdPartyLoginPlatformCredentialPublicV3' test.out

#- 254 RetrieveActiveOIDCClientsPublicV3
$CLI_EXE \
    --sn iam \
    --op RetrieveActiveOIDCClientsPublicV3 \
    --namespace $AB_NAMESPACE \
    --clientId 'qvssykYB' \
    > test.out 2>&1
eval_tap $? 254 'RetrieveActiveOIDCClientsPublicV3' test.out

#- 255 PublicListUserIDByPlatformUserIDsV3
# body param: body
echo '{"platformUserIds": ["ZNY8FUNu", "ub1176aE", "PmWPZRGF"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicListUserIDByPlatformUserIDsV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'CYGKvHa3' \
    --rawPID 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 255 'PublicListUserIDByPlatformUserIDsV3' test.out

#- 256 PublicGetUserByPlatformUserIDV3
$CLI_EXE \
    --sn iam \
    --op PublicGetUserByPlatformUserIDV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'utcxR8Tw' \
    --platformUserId 'k9DEN5XM' \
    > test.out 2>&1
eval_tap $? 256 'PublicGetUserByPlatformUserIDV3' test.out

#- 257 PublicGetAsyncStatus
$CLI_EXE \
    --sn iam \
    --op PublicGetAsyncStatus \
    --namespace $AB_NAMESPACE \
    --requestId 'ZrlsgH0H' \
    > test.out 2>&1
eval_tap $? 257 'PublicGetAsyncStatus' test.out

#- 258 PublicSearchUserV3
$CLI_EXE \
    --sn iam \
    --op PublicSearchUserV3 \
    --namespace $AB_NAMESPACE \
    --by 'Yje0CFaM' \
    --limit '52' \
    --offset '91' \
    --platformBy 'vtE1ktWV' \
    --platformId 'zoR3EYOt' \
    --query 'XDC5gXmj' \
    > test.out 2>&1
eval_tap $? 258 'PublicSearchUserV3' test.out

#- 259 PublicCreateUserV3
# body param: body
echo '{"PasswordMD5Sum": "E75YpeDs", "acceptedPolicies": [{"isAccepted": false, "localizedPolicyVersionId": "pMZHeuhe", "policyId": "aJgecIwP", "policyVersionId": "WWTCxhLh"}, {"isAccepted": true, "localizedPolicyVersionId": "O2oH7FSn", "policyId": "6hDjeVHe", "policyVersionId": "JbfXmOEI"}, {"isAccepted": true, "localizedPolicyVersionId": "9UgwQCSL", "policyId": "da1Sxohr", "policyVersionId": "XJ7xMpcP"}], "authType": "RKW61mg8", "code": "IjX2WIWV", "country": "Kk4cyvLx", "dateOfBirth": "Uk3542eG", "displayName": "btfmahAA", "emailAddress": "3etGUJ7W", "password": "8y6CdOHr", "reachMinimumAge": false, "uniqueDisplayName": "EMUjsSfz"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicCreateUserV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 259 'PublicCreateUserV3' test.out

#- 260 CheckUserAvailability
$CLI_EXE \
    --sn iam \
    --op CheckUserAvailability \
    --namespace $AB_NAMESPACE \
    --field 'x3xW6TNE' \
    --query '5lV0qzH7' \
    > test.out 2>&1
eval_tap $? 260 'CheckUserAvailability' test.out

#- 261 PublicBulkGetUsers
# body param: body
echo '{"userIds": ["qOU4K80s", "PUg3t7tG", "8XnxGjGX"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicBulkGetUsers \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 261 'PublicBulkGetUsers' test.out

#- 262 PublicSendRegistrationCode
# body param: body
echo '{"emailAddress": "k1MoTdxp", "languageTag": "2DnLjvdr"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicSendRegistrationCode \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 262 'PublicSendRegistrationCode' test.out

#- 263 PublicVerifyRegistrationCode
# body param: body
echo '{"code": "q3lXanx3", "emailAddress": "fuxbFNwO"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicVerifyRegistrationCode \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 263 'PublicVerifyRegistrationCode' test.out

#- 264 PublicForgotPasswordV3
# body param: body
echo '{"emailAddress": "5yZE6UGR", "languageTag": "jBLjfzDS"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicForgotPasswordV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 264 'PublicForgotPasswordV3' test.out

#- 265 GetAdminInvitationV3
$CLI_EXE \
    --sn iam \
    --op GetAdminInvitationV3 \
    --invitationId '3usrAI2O' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 265 'GetAdminInvitationV3' test.out

#- 266 CreateUserFromInvitationV3
# body param: body
echo '{"PasswordMD5Sum": "inHf9Wum", "acceptedPolicies": [{"isAccepted": true, "localizedPolicyVersionId": "Tp46UVzp", "policyId": "i0E3o91h", "policyVersionId": "ibKoxq9q"}, {"isAccepted": true, "localizedPolicyVersionId": "3dNyNabP", "policyId": "I38qzh3u", "policyVersionId": "kWuSUxqT"}, {"isAccepted": false, "localizedPolicyVersionId": "DfvouO08", "policyId": "WUSWjz7L", "policyVersionId": "ENPhd4NZ"}], "authType": "SJ5O3fMh", "code": "i647MDhL", "country": "kDdZ3Xiq", "dateOfBirth": "y9HB0c8d", "displayName": "gbPJCi9Y", "emailAddress": "6CfzL8un", "password": "53669zx6", "reachMinimumAge": true, "uniqueDisplayName": "SjaHRWIn"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op CreateUserFromInvitationV3 \
    --invitationId 'HZ1fZBoq' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 266 'CreateUserFromInvitationV3' test.out

#- 267 UpdateUserV3
# body param: body
echo '{"avatarUrl": "bprYGhM3", "country": "DNSfY8gm", "dateOfBirth": "gXWKyQSu", "displayName": "G8Xl2ZEO", "languageTag": "5FdWPBIy", "uniqueDisplayName": "Ka5qjWL1", "userName": "0xLSgImX"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op UpdateUserV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 267 'UpdateUserV3' test.out

#- 268 PublicPartialUpdateUserV3
# body param: body
echo '{"avatarUrl": "vuJWrbLj", "country": "75L5XOJV", "dateOfBirth": "gySriENG", "displayName": "EQgAHtM7", "languageTag": "BWSuFUvh", "uniqueDisplayName": "lv5vXOIq", "userName": "T2zV26eD"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicPartialUpdateUserV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 268 'PublicPartialUpdateUserV3' test.out

#- 269 PublicSendVerificationCodeV3
# body param: body
echo '{"context": "zHhNYjYV", "emailAddress": "zFDzJspd", "languageTag": "w7kI1BGd"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicSendVerificationCodeV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 269 'PublicSendVerificationCodeV3' test.out

#- 270 PublicUserVerificationV3
# body param: body
echo '{"code": "1ikCJJly", "contactType": "D4snDc3Q", "languageTag": "JjZfTs8T", "validateOnly": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUserVerificationV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 270 'PublicUserVerificationV3' test.out

#- 271 PublicUpgradeHeadlessAccountV3
# body param: body
echo '{"code": "uS3x88rn", "country": "fV4tMjF2", "dateOfBirth": "q6TBZuFY", "displayName": "vzEToT7x", "emailAddress": "bmJWUo29", "password": "LAVu70Uh", "uniqueDisplayName": "UHvsOSJK", "validateOnly": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpgradeHeadlessAccountV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 271 'PublicUpgradeHeadlessAccountV3' test.out

#- 272 PublicVerifyHeadlessAccountV3
# body param: body
echo '{"emailAddress": "hYXa0g8o", "password": "3BtHHzf7"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicVerifyHeadlessAccountV3 \
    --namespace $AB_NAMESPACE \
    --needVerificationCode 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 272 'PublicVerifyHeadlessAccountV3' test.out

#- 273 PublicUpdatePasswordV3
# body param: body
echo '{"languageTag": "RJE6hkKf", "newPassword": "LiuiUXYn", "oldPassword": "9veT6Dl7"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpdatePasswordV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 273 'PublicUpdatePasswordV3' test.out

#- 274 PublicCreateJusticeUser
$CLI_EXE \
    --sn iam \
    --op PublicCreateJusticeUser \
    --namespace $AB_NAMESPACE \
    --targetNamespace 'z8xJL3OB' \
    > test.out 2>&1
eval_tap $? 274 'PublicCreateJusticeUser' test.out

#- 275 PublicPlatformLinkV3
$CLI_EXE \
    --sn iam \
    --op PublicPlatformLinkV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'dFSgonKi' \
    --redirectUri 'KAXkSM0q' \
    --ticket 'Zf1BpmUg' \
    > test.out 2>&1
eval_tap $? 275 'PublicPlatformLinkV3' test.out

#- 276 PublicPlatformUnlinkV3
# body param: body
echo '{"platformNamespace": "uXSUblPz"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicPlatformUnlinkV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'nDi9dA8A' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 276 'PublicPlatformUnlinkV3' test.out

#- 277 PublicPlatformUnlinkAllV3
$CLI_EXE \
    --sn iam \
    --op PublicPlatformUnlinkAllV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'voJjjWqb' \
    > test.out 2>&1
eval_tap $? 277 'PublicPlatformUnlinkAllV3' test.out

#- 278 PublicForcePlatformLinkV3
$CLI_EXE \
    --sn iam \
    --op PublicForcePlatformLinkV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'highJePU' \
    --ticket 'dZzB3TVq' \
    > test.out 2>&1
eval_tap $? 278 'PublicForcePlatformLinkV3' test.out

#- 279 PublicWebLinkPlatform
$CLI_EXE \
    --sn iam \
    --op PublicWebLinkPlatform \
    --namespace $AB_NAMESPACE \
    --platformId 'Z56wrYpU' \
    --clientId 'YXQaj0Wh' \
    --redirectUri 'Yq16jw6I' \
    > test.out 2>&1
eval_tap $? 279 'PublicWebLinkPlatform' test.out

#- 280 PublicWebLinkPlatformEstablish
$CLI_EXE \
    --sn iam \
    --op PublicWebLinkPlatformEstablish \
    --namespace $AB_NAMESPACE \
    --platformId 'RwimSaMz' \
    --code 'puP3VyXJ' \
    --state '8g7vWewt' \
    > test.out 2>&1
eval_tap $? 280 'PublicWebLinkPlatformEstablish' test.out

#- 281 PublicProcessWebLinkPlatformV3
$CLI_EXE \
    --sn iam \
    --op PublicProcessWebLinkPlatformV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'EBhzLHiB' \
    --code 'poYcJbq4' \
    --state 'WxP54NZk' \
    > test.out 2>&1
eval_tap $? 281 'PublicProcessWebLinkPlatformV3' test.out

#- 282 PublicGetUsersPlatformInfosV3
# body param: body
echo '{"platformId": "oLrNvvAK", "userIds": ["DiG8GIq1", "svVOV4QV", "jF5hebh2"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicGetUsersPlatformInfosV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 282 'PublicGetUsersPlatformInfosV3' test.out

#- 283 ResetPasswordV3
# body param: body
echo '{"code": "wwzsdo0a", "emailAddress": "j4mJclXE", "newPassword": "JVWjNYTJ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op ResetPasswordV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 283 'ResetPasswordV3' test.out

#- 284 PublicGetUserByUserIdV3
eval_tap 0 284 'PublicGetUserByUserIdV3 # SKIP deprecated' test.out

#- 285 PublicGetUserBanHistoryV3
$CLI_EXE \
    --sn iam \
    --op PublicGetUserBanHistoryV3 \
    --namespace $AB_NAMESPACE \
    --userId 'zDQyg7mG' \
    --activeOnly 'true' \
    --after '8OmZYlMn' \
    --before 'OA05diKR' \
    --limit '24' \
    > test.out 2>&1
eval_tap $? 285 'PublicGetUserBanHistoryV3' test.out

#- 286 PublicListUserAllPlatformAccountsDistinctV3
$CLI_EXE \
    --sn iam \
    --op PublicListUserAllPlatformAccountsDistinctV3 \
    --namespace $AB_NAMESPACE \
    --userId 'imvp0kvv' \
    > test.out 2>&1
eval_tap $? 286 'PublicListUserAllPlatformAccountsDistinctV3' test.out

#- 287 PublicGetUserInformationV3
$CLI_EXE \
    --sn iam \
    --op PublicGetUserInformationV3 \
    --namespace $AB_NAMESPACE \
    --userId 'cHI8swDy' \
    > test.out 2>&1
eval_tap $? 287 'PublicGetUserInformationV3' test.out

#- 288 PublicGetUserLoginHistoriesV3
$CLI_EXE \
    --sn iam \
    --op PublicGetUserLoginHistoriesV3 \
    --namespace $AB_NAMESPACE \
    --userId 'zPBywiyI' \
    --after '0.030914940019424852' \
    --before '0.1572317692261681' \
    --limit '49' \
    > test.out 2>&1
eval_tap $? 288 'PublicGetUserLoginHistoriesV3' test.out

#- 289 PublicGetUserPlatformAccountsV3
$CLI_EXE \
    --sn iam \
    --op PublicGetUserPlatformAccountsV3 \
    --namespace $AB_NAMESPACE \
    --userId '0oRhXsl9' \
    --after 'rLqsE4W2' \
    --before 'DAypqDam' \
    --limit '14' \
    --platformId 'yOf90F66' \
    > test.out 2>&1
eval_tap $? 289 'PublicGetUserPlatformAccountsV3' test.out

#- 290 PublicListJusticePlatformAccountsV3
$CLI_EXE \
    --sn iam \
    --op PublicListJusticePlatformAccountsV3 \
    --namespace $AB_NAMESPACE \
    --userId 'TJ3R8p68' \
    > test.out 2>&1
eval_tap $? 290 'PublicListJusticePlatformAccountsV3' test.out

#- 291 PublicLinkPlatformAccount
# body param: body
echo '{"platformId": "vQaC0Ej9", "platformUserId": "LiHO4RVH"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicLinkPlatformAccount \
    --namespace $AB_NAMESPACE \
    --userId 'OZtoAPx6' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 291 'PublicLinkPlatformAccount' test.out

#- 292 PublicForceLinkPlatformWithProgression
# body param: body
echo '{"chosenNamespaces": ["FJ0rabh8", "sB2scILh", "SKP3E6rc"], "requestId": "E5bisktw"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicForceLinkPlatformWithProgression \
    --namespace $AB_NAMESPACE \
    --userId 'bpjs6ZjZ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 292 'PublicForceLinkPlatformWithProgression' test.out

#- 293 PublicGetPublisherUserV3
$CLI_EXE \
    --sn iam \
    --op PublicGetPublisherUserV3 \
    --namespace $AB_NAMESPACE \
    --userId 'YvS2MafN' \
    > test.out 2>&1
eval_tap $? 293 'PublicGetPublisherUserV3' test.out

#- 294 PublicValidateUserByUserIDAndPasswordV3
$CLI_EXE \
    --sn iam \
    --op PublicValidateUserByUserIDAndPasswordV3 \
    --namespace $AB_NAMESPACE \
    --userId 'EFzIUwu7' \
    --password 'WXaWo6CH' \
    > test.out 2>&1
eval_tap $? 294 'PublicValidateUserByUserIDAndPasswordV3' test.out

#- 295 PublicGetRolesV3
$CLI_EXE \
    --sn iam \
    --op PublicGetRolesV3 \
    --after 'naPnQoh3' \
    --before 'wanO0dsM' \
    --isWildcard 'false' \
    --limit '55' \
    > test.out 2>&1
eval_tap $? 295 'PublicGetRolesV3' test.out

#- 296 PublicGetRoleV3
$CLI_EXE \
    --sn iam \
    --op PublicGetRoleV3 \
    --roleId '0aKDBPQR' \
    > test.out 2>&1
eval_tap $? 296 'PublicGetRoleV3' test.out

#- 297 PublicGetMyUserV3
$CLI_EXE \
    --sn iam \
    --op PublicGetMyUserV3 \
    --includeAllPlatforms 'true' \
    > test.out 2>&1
eval_tap $? 297 'PublicGetMyUserV3' test.out

#- 298 PublicGetLinkHeadlessAccountToMyAccountConflictV3
$CLI_EXE \
    --sn iam \
    --op PublicGetLinkHeadlessAccountToMyAccountConflictV3 \
    --oneTimeLinkCode 'aRKHFZx1' \
    > test.out 2>&1
eval_tap $? 298 'PublicGetLinkHeadlessAccountToMyAccountConflictV3' test.out

#- 299 LinkHeadlessAccountToMyAccountV3
# body param: body
echo '{"chosenNamespaces": ["1w8OxOHb", "D3sQf20s", "v9x1mStg"], "oneTimeLinkCode": "GNjE6BHq"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op LinkHeadlessAccountToMyAccountV3 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 299 'LinkHeadlessAccountToMyAccountV3' test.out

#- 300 PublicSendVerificationLinkV3
# body param: body
echo '{"languageTag": "xzQfd5dt"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicSendVerificationLinkV3 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 300 'PublicSendVerificationLinkV3' test.out

#- 301 PublicVerifyUserByLinkV3
$CLI_EXE \
    --sn iam \
    --op PublicVerifyUserByLinkV3 \
    --code 'JRP7VeQF' \
    > test.out 2>&1
eval_tap $? 301 'PublicVerifyUserByLinkV3' test.out

#- 302 PlatformAuthenticateSAMLV3Handler
$CLI_EXE \
    --sn iam \
    --op PlatformAuthenticateSAMLV3Handler \
    --platformId '6I2KjTLe' \
    --code '8u2b5i9R' \
    --error 'KtsdZ0AL' \
    --state 'LaJOsx5y' \
    > test.out 2>&1
eval_tap $? 302 'PlatformAuthenticateSAMLV3Handler' test.out

#- 303 LoginSSOClient
$CLI_EXE \
    --sn iam \
    --op LoginSSOClient \
    --platformId 'rLHT5hOr' \
    --payload 'dZuTwNVY' \
    > test.out 2>&1
eval_tap $? 303 'LoginSSOClient' test.out

#- 304 LogoutSSOClient
$CLI_EXE \
    --sn iam \
    --op LogoutSSOClient \
    --platformId 'KnKQ2Lyg' \
    > test.out 2>&1
eval_tap $? 304 'LogoutSSOClient' test.out

#- 305 RequestTargetTokenResponseV3
$CLI_EXE \
    --sn iam \
    --op RequestTargetTokenResponseV3 \
    --additionalData 'yIU1Orof' \
    --code 'YGHmQuq3' \
    > test.out 2>&1
eval_tap $? 305 'RequestTargetTokenResponseV3' test.out

#- 306 AdminListInvitationHistoriesV4
$CLI_EXE \
    --sn iam \
    --op AdminListInvitationHistoriesV4 \
    --limit '26' \
    --namespace_ '99ASd0VZ' \
    --offset '97' \
    > test.out 2>&1
eval_tap $? 306 'AdminListInvitationHistoriesV4' test.out

#- 307 AdminGetDevicesByUserV4
$CLI_EXE \
    --sn iam \
    --op AdminGetDevicesByUserV4 \
    --namespace $AB_NAMESPACE \
    --userId 'nbJe708p' \
    > test.out 2>&1
eval_tap $? 307 'AdminGetDevicesByUserV4' test.out

#- 308 AdminGetBannedDevicesV4
$CLI_EXE \
    --sn iam \
    --op AdminGetBannedDevicesV4 \
    --namespace $AB_NAMESPACE \
    --deviceType 'R4toWtTL' \
    --endDate 'k9dzeR2y' \
    --limit '98' \
    --offset '27' \
    --startDate 'CJVohzwq' \
    > test.out 2>&1
eval_tap $? 308 'AdminGetBannedDevicesV4' test.out

#- 309 AdminGetUserDeviceBansV4
$CLI_EXE \
    --sn iam \
    --op AdminGetUserDeviceBansV4 \
    --namespace $AB_NAMESPACE \
    --userId '4bqlIMyM' \
    > test.out 2>&1
eval_tap $? 309 'AdminGetUserDeviceBansV4' test.out

#- 310 AdminBanDeviceV4
# body param: body
echo '{"comment": "mlIZP8gf", "deviceId": "AypqS7QS", "deviceType": "duFbrBP6", "enabled": true, "endDate": "hVsyD8NY", "ext": {"juIFp3kP": {}, "T42Yb4XR": {}, "kOVajn1d": {}}, "reason": "ZFky77vq"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBanDeviceV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 310 'AdminBanDeviceV4' test.out

#- 311 AdminGetDeviceBanV4
$CLI_EXE \
    --sn iam \
    --op AdminGetDeviceBanV4 \
    --banId '4jnjY27I' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 311 'AdminGetDeviceBanV4' test.out

#- 312 AdminUpdateDeviceBanV4
# body param: body
echo '{"enabled": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateDeviceBanV4 \
    --banId 'xTC8x3WH' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 312 'AdminUpdateDeviceBanV4' test.out

#- 313 AdminGenerateReportV4
$CLI_EXE \
    --sn iam \
    --op AdminGenerateReportV4 \
    --namespace $AB_NAMESPACE \
    --endDate 'koKgcVD9' \
    --startDate 'DbUiXqK9' \
    --deviceType 'TUQoUYZq' \
    > test.out 2>&1
eval_tap $? 313 'AdminGenerateReportV4' test.out

#- 314 AdminGetDeviceTypesV4
$CLI_EXE \
    --sn iam \
    --op AdminGetDeviceTypesV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 314 'AdminGetDeviceTypesV4' test.out

#- 315 AdminGetDeviceBansV4
$CLI_EXE \
    --sn iam \
    --op AdminGetDeviceBansV4 \
    --deviceId 'kyIjqu2M' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 315 'AdminGetDeviceBansV4' test.out

#- 316 AdminDecryptDeviceV4
$CLI_EXE \
    --sn iam \
    --op AdminDecryptDeviceV4 \
    --deviceId 'FFHCXeUw' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 316 'AdminDecryptDeviceV4' test.out

#- 317 AdminUnbanDeviceV4
$CLI_EXE \
    --sn iam \
    --op AdminUnbanDeviceV4 \
    --deviceId '5JEpxQUf' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 317 'AdminUnbanDeviceV4' test.out

#- 318 AdminGetUsersByDeviceV4
$CLI_EXE \
    --sn iam \
    --op AdminGetUsersByDeviceV4 \
    --deviceId 'wEudiEHF' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 318 'AdminGetUsersByDeviceV4' test.out

#- 319 AdminGetNamespaceInvitationHistoryV4
$CLI_EXE \
    --sn iam \
    --op AdminGetNamespaceInvitationHistoryV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 319 'AdminGetNamespaceInvitationHistoryV4' test.out

#- 320 AdminGetNamespaceUserInvitationHistoryV4
$CLI_EXE \
    --sn iam \
    --op AdminGetNamespaceUserInvitationHistoryV4 \
    --namespace $AB_NAMESPACE \
    --limit '87' \
    --offset '4' \
    > test.out 2>&1
eval_tap $? 320 'AdminGetNamespaceUserInvitationHistoryV4' test.out

#- 321 AdminCreateTestUsersV4
# body param: body
echo '{"count": 17}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminCreateTestUsersV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 321 'AdminCreateTestUsersV4' test.out

#- 322 AdminCreateUserV4
# body param: body
echo '{"acceptedPolicies": [{"isAccepted": true, "localizedPolicyVersionId": "kgis9DHy", "policyId": "QPrZ1jPv", "policyVersionId": "hXNBRQjN"}, {"isAccepted": false, "localizedPolicyVersionId": "lFNVuQkg", "policyId": "NUjuZEOj", "policyVersionId": "2UNsnDec"}, {"isAccepted": true, "localizedPolicyVersionId": "n7OtuteX", "policyId": "iKFd6KS9", "policyVersionId": "95AaNwJm"}], "authType": "EMAILPASSWD", "code": "I84yydVr", "country": "2ueXZBEC", "dateOfBirth": "5UCV44MQ", "displayName": "s3r6v3Vx", "emailAddress": "xxpEHAPU", "password": "XQ4H6q4X", "passwordMD5Sum": "r9OlLfxd", "reachMinimumAge": true, "uniqueDisplayName": "AJn02NaM", "username": "LplGlVHB"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminCreateUserV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 322 'AdminCreateUserV4' test.out

#- 323 AdminBulkUpdateUserAccountTypeV4
# body param: body
echo '{"testAccount": true, "userIds": ["euCVnFKj", "T5TIcW5G", "lK2ZAEcA"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBulkUpdateUserAccountTypeV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 323 'AdminBulkUpdateUserAccountTypeV4' test.out

#- 324 AdminBulkCheckValidUserIDV4
# body param: body
echo '{"userIds": ["NfDiviTR", "HthrIWIj", "J4cr817K"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBulkCheckValidUserIDV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 324 'AdminBulkCheckValidUserIDV4' test.out

#- 325 AdminUpdateUserV4
# body param: body
echo '{"avatarUrl": "97enWxbF", "country": "jczQaZvb", "dateOfBirth": "IETygaNq", "displayName": "GAGQSLiq", "languageTag": "EK1hfvqR", "skipLoginQueue": true, "uniqueDisplayName": "WUTQO4w7", "userName": "9M5OhfSb"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserV4 \
    --namespace $AB_NAMESPACE \
    --userId 'AjlsB2bv' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 325 'AdminUpdateUserV4' test.out

#- 326 AdminUpdateUserEmailAddressV4
# body param: body
echo '{"code": "yeaVqXgT", "emailAddress": "Ww5y9SJR"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserEmailAddressV4 \
    --namespace $AB_NAMESPACE \
    --userId 'TyyuGnEQ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 326 'AdminUpdateUserEmailAddressV4' test.out

#- 327 AdminDisableUserMFAV4
$CLI_EXE \
    --sn iam \
    --op AdminDisableUserMFAV4 \
    --namespace $AB_NAMESPACE \
    --userId 'R7NAfk8q' \
    > test.out 2>&1
eval_tap $? 327 'AdminDisableUserMFAV4' test.out

#- 328 AdminListUserRolesV4
$CLI_EXE \
    --sn iam \
    --op AdminListUserRolesV4 \
    --namespace $AB_NAMESPACE \
    --userId '2TBMaie2' \
    > test.out 2>&1
eval_tap $? 328 'AdminListUserRolesV4' test.out

#- 329 AdminUpdateUserRoleV4
# body param: body
echo '{"assignedNamespaces": ["iSiHfat5", "9JGBOQqy", "mWROagqU"], "roleId": "l5zmVkWi"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserRoleV4 \
    --namespace $AB_NAMESPACE \
    --userId 's5GdPUWc' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 329 'AdminUpdateUserRoleV4' test.out

#- 330 AdminAddUserRoleV4
# body param: body
echo '{"assignedNamespaces": ["w2bNFdH7", "cvMuwlOX", "jTk6p6fJ"], "roleId": "0WO4tlFO"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddUserRoleV4 \
    --namespace $AB_NAMESPACE \
    --userId 'GdOkVybj' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 330 'AdminAddUserRoleV4' test.out

#- 331 AdminRemoveUserRoleV4
# body param: body
echo '{"assignedNamespaces": ["RM4a19Og", "92A7rbkn", "bituqL6D"], "roleId": "rgxWD1n1"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminRemoveUserRoleV4 \
    --namespace $AB_NAMESPACE \
    --userId 'a3SMbufY' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 331 'AdminRemoveUserRoleV4' test.out

#- 332 AdminGetRolesV4
$CLI_EXE \
    --sn iam \
    --op AdminGetRolesV4 \
    --adminRole 'false' \
    --isWildcard 'false' \
    --limit '97' \
    --offset '55' \
    > test.out 2>&1
eval_tap $? 332 'AdminGetRolesV4' test.out

#- 333 AdminCreateRoleV4
# body param: body
echo '{"adminRole": true, "deletable": true, "isWildcard": false, "roleName": "mDFuR6xT"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminCreateRoleV4 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 333 'AdminCreateRoleV4' test.out

#- 334 AdminGetRoleV4
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleV4 \
    --roleId 'u6jADryd' \
    > test.out 2>&1
eval_tap $? 334 'AdminGetRoleV4' test.out

#- 335 AdminDeleteRoleV4
$CLI_EXE \
    --sn iam \
    --op AdminDeleteRoleV4 \
    --roleId 'hE1AmxHM' \
    > test.out 2>&1
eval_tap $? 335 'AdminDeleteRoleV4' test.out

#- 336 AdminUpdateRoleV4
# body param: body
echo '{"adminRole": true, "deletable": true, "isWildcard": false, "roleName": "OloJo4j4"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateRoleV4 \
    --roleId 'GL1OoiNE' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 336 'AdminUpdateRoleV4' test.out

#- 337 AdminUpdateRolePermissionsV4
# body param: body
echo '{"permissions": [{"action": 22, "resource": "j7gFR4EG", "schedAction": 52, "schedCron": "ZSca3YHL", "schedRange": ["jnyfvITd", "pDJicbiQ", "i4D53FxU"]}, {"action": 57, "resource": "MCZmTkSt", "schedAction": 79, "schedCron": "uMWuhF8z", "schedRange": ["K7VyZfVi", "8z96xHJH", "JiDGX9Qp"]}, {"action": 28, "resource": "MfUJMKQJ", "schedAction": 84, "schedCron": "MSPZApjr", "schedRange": ["RcYbL9hU", "YGA1iLu6", "ty0M7uu6"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateRolePermissionsV4 \
    --roleId 'EEgtKQ2d' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 337 'AdminUpdateRolePermissionsV4' test.out

#- 338 AdminAddRolePermissionsV4
# body param: body
echo '{"permissions": [{"action": 88, "resource": "CAGLWZGK", "schedAction": 79, "schedCron": "pDfks80N", "schedRange": ["Mm1ohskH", "Q0swjCeG", "9EAaRdST"]}, {"action": 37, "resource": "ROfvdbam", "schedAction": 32, "schedCron": "RbTKU1y6", "schedRange": ["psLwM5XY", "kUFcoT0o", "pKRoEXLn"]}, {"action": 74, "resource": "oLA0Lgk0", "schedAction": 26, "schedCron": "fMtxMMWF", "schedRange": ["bOXFcHCl", "mlyncOGf", "RSaIn0bs"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddRolePermissionsV4 \
    --roleId 'KDSxnkpt' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 338 'AdminAddRolePermissionsV4' test.out

#- 339 AdminDeleteRolePermissionsV4
# body param: body
echo '["QRGXXI29", "IRqHHLEK", "0sKdcVOY"]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDeleteRolePermissionsV4 \
    --roleId 'M1eJBUB8' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 339 'AdminDeleteRolePermissionsV4' test.out

#- 340 AdminListAssignedUsersV4
$CLI_EXE \
    --sn iam \
    --op AdminListAssignedUsersV4 \
    --roleId '1fmNoaVC' \
    --after '6z1gCQSW' \
    --before 'RzaZYPsi' \
    --limit '64' \
    > test.out 2>&1
eval_tap $? 340 'AdminListAssignedUsersV4' test.out

#- 341 AdminAssignUserToRoleV4
# body param: body
echo '{"assignedNamespaces": ["ec0CWP4O", "2wPaAu67", "RsApTDUx"], "namespace": "qMsBdSql", "userId": "owVhhMbA"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAssignUserToRoleV4 \
    --roleId 'wc4J3UT7' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 341 'AdminAssignUserToRoleV4' test.out

#- 342 AdminRevokeUserFromRoleV4
# body param: body
echo '{"namespace": "Zo3sD0xN", "userId": "43VsFmAR"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminRevokeUserFromRoleV4 \
    --roleId 'BHoM09d5' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 342 'AdminRevokeUserFromRoleV4' test.out

#- 343 AdminInviteUserNewV4
# body param: body
echo '{"assignedNamespaces": ["ZstGIGuh", "psrQMaxr", "NhmggwGu"], "emailAddresses": ["ox8PULoZ", "jmMq3FBw", "awVKbenZ"], "isAdmin": false, "isNewStudio": true, "namespace": "ld6l0HmZ", "roleId": "iK5w2EAV"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminInviteUserNewV4 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 343 'AdminInviteUserNewV4' test.out

#- 344 AdminUpdateMyUserV4
# body param: body
echo '{"avatarUrl": "roahxTZH", "country": "6O1cndrp", "dateOfBirth": "pbgMcHmW", "displayName": "nElIVKhN", "languageTag": "wLEBcZfd", "skipLoginQueue": false, "uniqueDisplayName": "mTrTpt7a", "userName": "4cXqKqek"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateMyUserV4 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 344 'AdminUpdateMyUserV4' test.out

#- 345 AdminDisableMyAuthenticatorV4
$CLI_EXE \
    --sn iam \
    --op AdminDisableMyAuthenticatorV4 \
    > test.out 2>&1
eval_tap $? 345 'AdminDisableMyAuthenticatorV4' test.out

#- 346 AdminEnableMyAuthenticatorV4
$CLI_EXE \
    --sn iam \
    --op AdminEnableMyAuthenticatorV4 \
    --code 'DJo2zx04' \
    > test.out 2>&1
eval_tap $? 346 'AdminEnableMyAuthenticatorV4' test.out

#- 347 AdminGenerateMyAuthenticatorKeyV4
$CLI_EXE \
    --sn iam \
    --op AdminGenerateMyAuthenticatorKeyV4 \
    > test.out 2>&1
eval_tap $? 347 'AdminGenerateMyAuthenticatorKeyV4' test.out

#- 348 AdminGetMyBackupCodesV4
eval_tap 0 348 'AdminGetMyBackupCodesV4 # SKIP deprecated' test.out

#- 349 AdminGenerateMyBackupCodesV4
eval_tap 0 349 'AdminGenerateMyBackupCodesV4 # SKIP deprecated' test.out

#- 350 AdminDisableMyBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op AdminDisableMyBackupCodesV4 \
    > test.out 2>&1
eval_tap $? 350 'AdminDisableMyBackupCodesV4' test.out

#- 351 AdminDownloadMyBackupCodesV4
eval_tap 0 351 'AdminDownloadMyBackupCodesV4 # SKIP deprecated' test.out

#- 352 AdminEnableMyBackupCodesV4
eval_tap 0 352 'AdminEnableMyBackupCodesV4 # SKIP deprecated' test.out

#- 353 AdminGetBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op AdminGetBackupCodesV4 \
    > test.out 2>&1
eval_tap $? 353 'AdminGetBackupCodesV4' test.out

#- 354 AdminGenerateBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op AdminGenerateBackupCodesV4 \
    > test.out 2>&1
eval_tap $? 354 'AdminGenerateBackupCodesV4' test.out

#- 355 AdminEnableBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op AdminEnableBackupCodesV4 \
    > test.out 2>&1
eval_tap $? 355 'AdminEnableBackupCodesV4' test.out

#- 356 AdminSendMyMFAEmailCodeV4
$CLI_EXE \
    --sn iam \
    --op AdminSendMyMFAEmailCodeV4 \
    > test.out 2>&1
eval_tap $? 356 'AdminSendMyMFAEmailCodeV4' test.out

#- 357 AdminDisableMyEmailV4
$CLI_EXE \
    --sn iam \
    --op AdminDisableMyEmailV4 \
    > test.out 2>&1
eval_tap $? 357 'AdminDisableMyEmailV4' test.out

#- 358 AdminEnableMyEmailV4
$CLI_EXE \
    --sn iam \
    --op AdminEnableMyEmailV4 \
    --code 'qAGW40G4' \
    > test.out 2>&1
eval_tap $? 358 'AdminEnableMyEmailV4' test.out

#- 359 AdminGetMyEnabledFactorsV4
$CLI_EXE \
    --sn iam \
    --op AdminGetMyEnabledFactorsV4 \
    > test.out 2>&1
eval_tap $? 359 'AdminGetMyEnabledFactorsV4' test.out

#- 360 AdminMakeFactorMyDefaultV4
$CLI_EXE \
    --sn iam \
    --op AdminMakeFactorMyDefaultV4 \
    --factor '5OJWpL7l' \
    > test.out 2>&1
eval_tap $? 360 'AdminMakeFactorMyDefaultV4' test.out

#- 361 AdminInviteUserV4
eval_tap 0 361 'AdminInviteUserV4 # SKIP deprecated' test.out

#- 362 AuthenticationWithPlatformLinkV4
$CLI_EXE \
    --sn iam \
    --op AuthenticationWithPlatformLinkV4 \
    --extend_exp 'false' \
    --client_id '1TvlV8O2' \
    --linkingToken 'CkUS73h9' \
    --password 'M6uoqIBI' \
    --username 'k1zGZAzC' \
    > test.out 2>&1
eval_tap $? 362 'AuthenticationWithPlatformLinkV4' test.out

#- 363 GenerateTokenByNewHeadlessAccountV4
$CLI_EXE \
    --sn iam \
    --op GenerateTokenByNewHeadlessAccountV4 \
    --additionalData 'M2p0DdXA' \
    --extend_exp 'false' \
    --linkingToken 'Dzi6MPJg' \
    > test.out 2>&1
eval_tap $? 363 'GenerateTokenByNewHeadlessAccountV4' test.out

#- 364 Verify2faCodeV4
$CLI_EXE \
    --sn iam \
    --op Verify2faCodeV4 \
    --code 'hUCDswzg' \
    --factor 'Lex202zj' \
    --mfaToken 'wZxPrKfV' \
    --rememberDevice 'true' \
    > test.out 2>&1
eval_tap $? 364 'Verify2faCodeV4' test.out

#- 365 PlatformTokenGrantV4
$CLI_EXE \
    --sn iam \
    --op PlatformTokenGrantV4 \
    --platformId '6LxKnhow' \
    --codeChallenge 'GMo13jaN' \
    --codeChallengeMethod 'S256' \
    --additionalData 'GK6CIEQK' \
    --client_id '5CV1gHOG' \
    --createHeadless 'false' \
    --device_id 'jhooaM7h' \
    --macAddress 'AtPPgII6' \
    --platform_token 'a0j6ExF6' \
    --skipSetCookie 'false' \
    > test.out 2>&1
eval_tap $? 365 'PlatformTokenGrantV4' test.out

#- 366 SimultaneousLoginV4
$CLI_EXE \
    --sn iam \
    --op SimultaneousLoginV4 \
    --codeChallenge 'i1PGIdgp' \
    --codeChallengeMethod 'plain' \
    --simultaneousPlatform 'nGeyVF39' \
    --simultaneousTicket '6faV6dPf' \
    --nativePlatform 'steam' \
    --nativePlatformTicket 'sVXihSCy' \
    > test.out 2>&1
eval_tap $? 366 'SimultaneousLoginV4' test.out

#- 367 TokenGrantV4
$CLI_EXE \
    --sn iam \
    --op TokenGrantV4 \
    --codeChallenge 'X4bBxXsA' \
    --codeChallengeMethod 'plain' \
    --additionalData 'lWPDfJiB' \
    --client_id 'PWE0yhUp' \
    --code 'eLHIGynd' \
    --code_verifier 'bL73IB3y' \
    --extendNamespace 'CoxGWnYM' \
    --extend_exp 'true' \
    --login_queue_ticket 'Y0ZYb3DG' \
    --password 'i5GYm02j' \
    --redirect_uri '6ZH7h5yS' \
    --refresh_token 'eGGXwG1F' \
    --username '0PZjJkhz' \
    --grant_type 'refresh_token' \
    > test.out 2>&1
eval_tap $? 367 'TokenGrantV4' test.out

#- 368 RequestTargetTokenResponseV4
$CLI_EXE \
    --sn iam \
    --op RequestTargetTokenResponseV4 \
    --additionalData 'iJrv1dsO' \
    --code 'WiaiIx3A' \
    > test.out 2>&1
eval_tap $? 368 'RequestTargetTokenResponseV4' test.out

#- 369 PublicCreateTestUserV4
# body param: body
echo '{"acceptedPolicies": [{"isAccepted": true, "localizedPolicyVersionId": "JZqHfsq1", "policyId": "ux54BV16", "policyVersionId": "IfprkX60"}, {"isAccepted": true, "localizedPolicyVersionId": "iA7jQIFL", "policyId": "tqYVw8NA", "policyVersionId": "kvbMUYZx"}, {"isAccepted": true, "localizedPolicyVersionId": "nJwBfkGT", "policyId": "syO73SXF", "policyVersionId": "XR2HhNC1"}], "authType": "EMAILPASSWD", "country": "El49sTJU", "dateOfBirth": "AQnFaFXf", "displayName": "zxV2Pm2X", "emailAddress": "8IwfaVzQ", "password": "SAcQBQ5i", "passwordMD5Sum": "KlwzBYQO", "uniqueDisplayName": "h7et4zVM", "username": "DW7cahBV", "verified": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicCreateTestUserV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 369 'PublicCreateTestUserV4' test.out

#- 370 PublicCreateUserV4
# body param: body
echo '{"acceptedPolicies": [{"isAccepted": false, "localizedPolicyVersionId": "zdOhIxCm", "policyId": "8oLIbHnT", "policyVersionId": "304MC0pb"}, {"isAccepted": false, "localizedPolicyVersionId": "v776denT", "policyId": "wD61h2oa", "policyVersionId": "Bwnf36sG"}, {"isAccepted": true, "localizedPolicyVersionId": "Z7t8wcAl", "policyId": "jHoJBE1Z", "policyVersionId": "0tTUEuPN"}], "authType": "EMAILPASSWD", "code": "5P25Job7", "country": "8Ieh8Mbj", "dateOfBirth": "kaCdXJ3A", "displayName": "CE4kJcER", "emailAddress": "C4tUaC5s", "password": "X6o4AmgF", "passwordMD5Sum": "18eUN15b", "reachMinimumAge": true, "uniqueDisplayName": "EY1FriJd", "username": "ky3Ueppo"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicCreateUserV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 370 'PublicCreateUserV4' test.out

#- 371 CreateUserFromInvitationV4
# body param: body
echo '{"acceptedPolicies": [{"isAccepted": false, "localizedPolicyVersionId": "hlvIxRjp", "policyId": "UmvLTbYg", "policyVersionId": "DO94Vuv8"}, {"isAccepted": true, "localizedPolicyVersionId": "ZJTpU2YR", "policyId": "A39vY8yF", "policyVersionId": "8KgfkFPH"}, {"isAccepted": false, "localizedPolicyVersionId": "xrpsQh8T", "policyId": "XZ1QxbJi", "policyVersionId": "yhprt8Tb"}], "authType": "EMAILPASSWD", "code": "qCYTt5so", "country": "Oi004BSg", "dateOfBirth": "RT8eQ7k3", "displayName": "S5Hbkzye", "emailAddress": "g2whmMv2", "password": "fSnQ6HfU", "passwordMD5Sum": "9iBnt0ub", "reachMinimumAge": false, "uniqueDisplayName": "rUDYVP0Y", "username": "XsbxVQr6"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op CreateUserFromInvitationV4 \
    --invitationId 'AuOY6Jfd' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 371 'CreateUserFromInvitationV4' test.out

#- 372 PublicUpdateUserV4
# body param: body
echo '{"avatarUrl": "wb8JZs9y", "country": "xgeIoX73", "dateOfBirth": "PTymrE6M", "displayName": "F0dbBYvb", "languageTag": "Io3Nj6XX", "uniqueDisplayName": "M64xmSyO", "userName": "UvmFFpDR"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpdateUserV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 372 'PublicUpdateUserV4' test.out

#- 373 PublicUpdateUserEmailAddressV4
# body param: body
echo '{"code": "PzXbGHWD", "emailAddress": "S49g2C1S"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpdateUserEmailAddressV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 373 'PublicUpdateUserEmailAddressV4' test.out

#- 374 PublicUpgradeHeadlessAccountWithVerificationCodeV4
# body param: body
echo '{"code": "Ly0Wj76Y", "country": "RIQbHGFb", "dateOfBirth": "46RnZtV0", "displayName": "NTF13szy", "emailAddress": "nzTD0iGe", "password": "EeRhdTBj", "reachMinimumAge": false, "uniqueDisplayName": "7jcixouP", "username": "WmXnRZGZ", "validateOnly": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpgradeHeadlessAccountWithVerificationCodeV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 374 'PublicUpgradeHeadlessAccountWithVerificationCodeV4' test.out

#- 375 PublicUpgradeHeadlessAccountV4
# body param: body
echo '{"emailAddress": "slcgsix8", "password": "qC0F039s", "username": "LQ1Eqa3O"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpgradeHeadlessAccountV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 375 'PublicUpgradeHeadlessAccountV4' test.out

#- 376 PublicDisableMyAuthenticatorV4
$CLI_EXE \
    --sn iam \
    --op PublicDisableMyAuthenticatorV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 376 'PublicDisableMyAuthenticatorV4' test.out

#- 377 PublicEnableMyAuthenticatorV4
$CLI_EXE \
    --sn iam \
    --op PublicEnableMyAuthenticatorV4 \
    --namespace $AB_NAMESPACE \
    --code 'OvdsGflh' \
    > test.out 2>&1
eval_tap $? 377 'PublicEnableMyAuthenticatorV4' test.out

#- 378 PublicGenerateMyAuthenticatorKeyV4
$CLI_EXE \
    --sn iam \
    --op PublicGenerateMyAuthenticatorKeyV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 378 'PublicGenerateMyAuthenticatorKeyV4' test.out

#- 379 PublicGetMyBackupCodesV4
eval_tap 0 379 'PublicGetMyBackupCodesV4 # SKIP deprecated' test.out

#- 380 PublicGenerateMyBackupCodesV4
eval_tap 0 380 'PublicGenerateMyBackupCodesV4 # SKIP deprecated' test.out

#- 381 PublicDisableMyBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op PublicDisableMyBackupCodesV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 381 'PublicDisableMyBackupCodesV4' test.out

#- 382 PublicDownloadMyBackupCodesV4
eval_tap 0 382 'PublicDownloadMyBackupCodesV4 # SKIP deprecated' test.out

#- 383 PublicEnableMyBackupCodesV4
eval_tap 0 383 'PublicEnableMyBackupCodesV4 # SKIP deprecated' test.out

#- 384 PublicGetBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op PublicGetBackupCodesV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 384 'PublicGetBackupCodesV4' test.out

#- 385 PublicGenerateBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op PublicGenerateBackupCodesV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 385 'PublicGenerateBackupCodesV4' test.out

#- 386 PublicEnableBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op PublicEnableBackupCodesV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 386 'PublicEnableBackupCodesV4' test.out

#- 387 PublicRemoveTrustedDeviceV4
$CLI_EXE \
    --sn iam \
    --op PublicRemoveTrustedDeviceV4 \
    --namespace $AB_NAMESPACE \
    --device_token '2ARFskq8' \
    > test.out 2>&1
eval_tap $? 387 'PublicRemoveTrustedDeviceV4' test.out

#- 388 PublicSendMyMFAEmailCodeV4
$CLI_EXE \
    --sn iam \
    --op PublicSendMyMFAEmailCodeV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 388 'PublicSendMyMFAEmailCodeV4' test.out

#- 389 PublicDisableMyEmailV4
$CLI_EXE \
    --sn iam \
    --op PublicDisableMyEmailV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 389 'PublicDisableMyEmailV4' test.out

#- 390 PublicEnableMyEmailV4
$CLI_EXE \
    --sn iam \
    --op PublicEnableMyEmailV4 \
    --namespace $AB_NAMESPACE \
    --code 'R5AFE9b8' \
    > test.out 2>&1
eval_tap $? 390 'PublicEnableMyEmailV4' test.out

#- 391 PublicGetMyEnabledFactorsV4
$CLI_EXE \
    --sn iam \
    --op PublicGetMyEnabledFactorsV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 391 'PublicGetMyEnabledFactorsV4' test.out

#- 392 PublicMakeFactorMyDefaultV4
$CLI_EXE \
    --sn iam \
    --op PublicMakeFactorMyDefaultV4 \
    --namespace $AB_NAMESPACE \
    --factor 'CIYyTwMg' \
    > test.out 2>&1
eval_tap $? 392 'PublicMakeFactorMyDefaultV4' test.out

#- 393 PublicGetUserPublicInfoByUserIdV4
$CLI_EXE \
    --sn iam \
    --op PublicGetUserPublicInfoByUserIdV4 \
    --namespace $AB_NAMESPACE \
    --userId 'iwxBy7zj' \
    > test.out 2>&1
eval_tap $? 393 'PublicGetUserPublicInfoByUserIdV4' test.out

#- 394 PublicInviteUserV4
# body param: body
echo '{"additionalData": "lS2ThTIu", "emailAddress": "kJ7xV96Y", "namespace": "C8cNU0nS", "namespaceDisplayName": "S2cbikwf"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicInviteUserV4 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 394 'PublicInviteUserV4' test.out


# remove artifacts
rm -f "$CLI_TOKEN_FILE"
rm -f "$TEMP_JSON_INPUT"
rm -f "$TEMP_FILE_UPLOAD"

exit $EXIT_CODE