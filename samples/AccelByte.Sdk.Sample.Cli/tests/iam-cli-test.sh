#!/usr/bin/env bash

# Copyright (c) 2021 AccelByte Inc. All Rights Reserved.
# This is licensed software from AccelByte Inc, for limitations
# and restrictions contact your company contract manager.

# This code is generated by tool. DO NOT EDIT.

# Meta:
# - random seed: 
# - template file: 

# Instructions:
# - Run the Justice SDK Mock Server first before running this script.

export AB_BASE_URL="http://127.0.0.1:8080"
export AB_CLIENT_ID="admin"
export AB_CLIENT_SECRET="admin"
export AB_NAMESPACE="test"
export AB_APP_NAME="UnitTest"

EXIT_CODE=0

eval_tap() {
  if [ $1 -eq 0 ]; then
    echo "ok $2 - $3"
  else
    EXIT_CODE=1
    echo "not ok $2 - $3"
    sed 's/^/# /g' $4
  fi
  rm -f $4
}

CLI_EXE="AccelByte.Sdk.Sample.Cli"
CLI_TOKEN_FILE="$(dirname "$(which $CLI_EXE)")/token.json"
TEMP_JSON_INPUT="input_json.json"
TEMP_FILE_UPLOAD="file_upload.bin"

echo "TAP version 13"
echo "1..401"

#- 1 Login
$CLI_EXE --op login --lt user --user user --pass user > test.out 2>&1
eval_tap $? 1 'Login' test.out

if [ $EXIT_CODE -ne 0 ]; then
  echo "Bail out! Login failed."
  exit $EXIT_CODE
fi

# echo "foo" > "$CLI_TOKEN_FILE"

#- 2 GetBansType
eval_tap 0 2 'GetBansType # SKIP deprecated' test.out

#- 3 GetListBanReason
eval_tap 0 3 'GetListBanReason # SKIP deprecated' test.out

#- 4 GetClients
eval_tap 0 4 'GetClients # SKIP deprecated' test.out

#- 5 CreateClient
eval_tap 0 5 'CreateClient # SKIP deprecated' test.out

#- 6 GetClient
eval_tap 0 6 'GetClient # SKIP deprecated' test.out

#- 7 UpdateClient
eval_tap 0 7 'UpdateClient # SKIP deprecated' test.out

#- 8 DeleteClient
eval_tap 0 8 'DeleteClient # SKIP deprecated' test.out

#- 9 UpdateClientPermission
eval_tap 0 9 'UpdateClientPermission # SKIP deprecated' test.out

#- 10 AddClientPermission
eval_tap 0 10 'AddClientPermission # SKIP deprecated' test.out

#- 11 DeleteClientPermission
eval_tap 0 11 'DeleteClientPermission # SKIP deprecated' test.out

#- 12 UpdateClientSecret
eval_tap 0 12 'UpdateClientSecret # SKIP deprecated' test.out

#- 13 GetClientsbyNamespace
eval_tap 0 13 'GetClientsbyNamespace # SKIP deprecated' test.out

#- 14 CreateClientByNamespace
eval_tap 0 14 'CreateClientByNamespace # SKIP deprecated' test.out

#- 15 DeleteClientByNamespace
eval_tap 0 15 'DeleteClientByNamespace # SKIP deprecated' test.out

#- 16 CreateUser
eval_tap 0 16 'CreateUser # SKIP deprecated' test.out

#- 17 GetAdminUsersByRoleID
eval_tap 0 17 'GetAdminUsersByRoleID # SKIP deprecated' test.out

#- 18 GetUserByLoginID
eval_tap 0 18 'GetUserByLoginID # SKIP deprecated' test.out

#- 19 GetUserByPlatformUserID
eval_tap 0 19 'GetUserByPlatformUserID # SKIP deprecated' test.out

#- 20 ForgotPassword
eval_tap 0 20 'ForgotPassword # SKIP deprecated' test.out

#- 21 GetUsersByLoginIds
eval_tap 0 21 'GetUsersByLoginIds # SKIP deprecated' test.out

#- 22 ResetPassword
eval_tap 0 22 'ResetPassword # SKIP deprecated' test.out

#- 23 SearchUser
eval_tap 0 23 'SearchUser # SKIP deprecated' test.out

#- 24 GetUserByUserID
eval_tap 0 24 'GetUserByUserID # SKIP deprecated' test.out

#- 25 UpdateUser
eval_tap 0 25 'UpdateUser # SKIP deprecated' test.out

#- 26 DeleteUser
eval_tap 0 26 'DeleteUser # SKIP deprecated' test.out

#- 27 BanUser
eval_tap 0 27 'BanUser # SKIP deprecated' test.out

#- 28 GetUserBanHistory
eval_tap 0 28 'GetUserBanHistory # SKIP deprecated' test.out

#- 29 DisableUserBan
eval_tap 0 29 'DisableUserBan # SKIP deprecated' test.out

#- 30 EnableUserBan
eval_tap 0 30 'EnableUserBan # SKIP deprecated' test.out

#- 31 ListCrossNamespaceAccountLink
eval_tap 0 31 'ListCrossNamespaceAccountLink # SKIP deprecated' test.out

#- 32 DisableUser
eval_tap 0 32 'DisableUser # SKIP deprecated' test.out

#- 33 EnableUser
eval_tap 0 33 'EnableUser # SKIP deprecated' test.out

#- 34 GetUserInformation
eval_tap 0 34 'GetUserInformation # SKIP deprecated' test.out

#- 35 DeleteUserInformation
eval_tap 0 35 'DeleteUserInformation # SKIP deprecated' test.out

#- 36 GetUserLoginHistories
eval_tap 0 36 'GetUserLoginHistories # SKIP deprecated' test.out

#- 37 UpdatePassword
eval_tap 0 37 'UpdatePassword # SKIP deprecated' test.out

#- 38 SaveUserPermission
eval_tap 0 38 'SaveUserPermission # SKIP deprecated' test.out

#- 39 AddUserPermission
eval_tap 0 39 'AddUserPermission # SKIP deprecated' test.out

#- 40 DeleteUserPermission
eval_tap 0 40 'DeleteUserPermission # SKIP deprecated' test.out

#- 41 GetUserPlatformAccounts
eval_tap 0 41 'GetUserPlatformAccounts # SKIP deprecated' test.out

#- 42 GetUserMapping
eval_tap 0 42 'GetUserMapping # SKIP deprecated' test.out

#- 43 GetUserJusticePlatformAccount
eval_tap 0 43 'GetUserJusticePlatformAccount # SKIP deprecated' test.out

#- 44 PlatformLink
eval_tap 0 44 'PlatformLink # SKIP deprecated' test.out

#- 45 PlatformUnlink
eval_tap 0 45 'PlatformUnlink # SKIP deprecated' test.out

#- 46 GetPublisherUser
eval_tap 0 46 'GetPublisherUser # SKIP deprecated' test.out

#- 47 SaveUserRoles
eval_tap 0 47 'SaveUserRoles # SKIP deprecated' test.out

#- 48 AddUserRole
eval_tap 0 48 'AddUserRole # SKIP deprecated' test.out

#- 49 DeleteUserRole
eval_tap 0 49 'DeleteUserRole # SKIP deprecated' test.out

#- 50 UpgradeHeadlessAccount
eval_tap 0 50 'UpgradeHeadlessAccount # SKIP deprecated' test.out

#- 51 UpgradeHeadlessAccountWithVerificationCode
eval_tap 0 51 'UpgradeHeadlessAccountWithVerificationCode # SKIP deprecated' test.out

#- 52 UserVerification
eval_tap 0 52 'UserVerification # SKIP deprecated' test.out

#- 53 SendVerificationCode
eval_tap 0 53 'SendVerificationCode # SKIP deprecated' test.out

#- 54 Authorization
eval_tap 0 54 'Authorization # SKIP deprecated' test.out

#- 55 GetJWKS
eval_tap 0 55 'GetJWKS # SKIP deprecated' test.out

#- 56 PlatformTokenRequestHandler
eval_tap 0 56 'PlatformTokenRequestHandler # SKIP deprecated' test.out

#- 57 RevokeUser
eval_tap 0 57 'RevokeUser # SKIP deprecated' test.out

#- 58 GetRevocationList
eval_tap 0 58 'GetRevocationList # SKIP deprecated' test.out

#- 59 RevokeToken
eval_tap 0 59 'RevokeToken # SKIP deprecated' test.out

#- 60 RevokeAUser
eval_tap 0 60 'RevokeAUser # SKIP deprecated' test.out

#- 61 TokenGrant
eval_tap 0 61 'TokenGrant # SKIP deprecated' test.out

#- 62 VerifyToken
eval_tap 0 62 'VerifyToken # SKIP deprecated' test.out

#- 63 GetRoles
eval_tap 0 63 'GetRoles # SKIP deprecated' test.out

#- 64 CreateRole
eval_tap 0 64 'CreateRole # SKIP deprecated' test.out

#- 65 GetRole
eval_tap 0 65 'GetRole # SKIP deprecated' test.out

#- 66 UpdateRole
eval_tap 0 66 'UpdateRole # SKIP deprecated' test.out

#- 67 DeleteRole
eval_tap 0 67 'DeleteRole # SKIP deprecated' test.out

#- 68 GetRoleAdminStatus
eval_tap 0 68 'GetRoleAdminStatus # SKIP deprecated' test.out

#- 69 SetRoleAsAdmin
eval_tap 0 69 'SetRoleAsAdmin # SKIP deprecated' test.out

#- 70 RemoveRoleAdmin
eval_tap 0 70 'RemoveRoleAdmin # SKIP deprecated' test.out

#- 71 GetRoleManagers
eval_tap 0 71 'GetRoleManagers # SKIP deprecated' test.out

#- 72 AddRoleManagers
eval_tap 0 72 'AddRoleManagers # SKIP deprecated' test.out

#- 73 RemoveRoleManagers
eval_tap 0 73 'RemoveRoleManagers # SKIP deprecated' test.out

#- 74 GetRoleMembers
eval_tap 0 74 'GetRoleMembers # SKIP deprecated' test.out

#- 75 AddRoleMembers
eval_tap 0 75 'AddRoleMembers # SKIP deprecated' test.out

#- 76 RemoveRoleMembers
eval_tap 0 76 'RemoveRoleMembers # SKIP deprecated' test.out

#- 77 UpdateRolePermissions
eval_tap 0 77 'UpdateRolePermissions # SKIP deprecated' test.out

#- 78 AddRolePermission
eval_tap 0 78 'AddRolePermission # SKIP deprecated' test.out

#- 79 DeleteRolePermission
eval_tap 0 79 'DeleteRolePermission # SKIP deprecated' test.out

#- 80 AdminGetAgeRestrictionStatusV2
eval_tap 0 80 'AdminGetAgeRestrictionStatusV2 # SKIP deprecated' test.out

#- 81 AdminUpdateAgeRestrictionConfigV2
eval_tap 0 81 'AdminUpdateAgeRestrictionConfigV2 # SKIP deprecated' test.out

#- 82 GetListCountryAgeRestriction
eval_tap 0 82 'GetListCountryAgeRestriction # SKIP deprecated' test.out

#- 83 UpdateCountryAgeRestriction
eval_tap 0 83 'UpdateCountryAgeRestriction # SKIP deprecated' test.out

#- 84 AdminSearchUsersV2
eval_tap 0 84 'AdminSearchUsersV2 # SKIP deprecated' test.out

#- 85 AdminGetUserByUserIdV2
eval_tap 0 85 'AdminGetUserByUserIdV2 # SKIP deprecated' test.out

#- 86 AdminUpdateUserV2
eval_tap 0 86 'AdminUpdateUserV2 # SKIP deprecated' test.out

#- 87 AdminBanUserV2
eval_tap 0 87 'AdminBanUserV2 # SKIP deprecated' test.out

#- 88 AdminGetUserBanV2
eval_tap 0 88 'AdminGetUserBanV2 # SKIP deprecated' test.out

#- 89 AdminDisableUserV2
eval_tap 0 89 'AdminDisableUserV2 # SKIP deprecated' test.out

#- 90 AdminEnableUserV2
eval_tap 0 90 'AdminEnableUserV2 # SKIP deprecated' test.out

#- 91 AdminResetPasswordV2
eval_tap 0 91 'AdminResetPasswordV2 # SKIP deprecated' test.out

#- 92 AdminDeletePlatformLinkV2
eval_tap 0 92 'AdminDeletePlatformLinkV2 # SKIP deprecated' test.out

#- 93 AdminPutUserRolesV2
eval_tap 0 93 'AdminPutUserRolesV2 # SKIP deprecated' test.out

#- 94 AdminCreateUserRolesV2
eval_tap 0 94 'AdminCreateUserRolesV2 # SKIP deprecated' test.out

#- 95 PublicGetCountryAgeRestriction
eval_tap 0 95 'PublicGetCountryAgeRestriction # SKIP deprecated' test.out

#- 96 PublicCreateUserV2
eval_tap 0 96 'PublicCreateUserV2 # SKIP deprecated' test.out

#- 97 PublicForgotPasswordV2
eval_tap 0 97 'PublicForgotPasswordV2 # SKIP deprecated' test.out

#- 98 PublicResetPasswordV2
eval_tap 0 98 'PublicResetPasswordV2 # SKIP deprecated' test.out

#- 99 PublicGetUserByUserIDV2
eval_tap 0 99 'PublicGetUserByUserIDV2 # SKIP deprecated' test.out

#- 100 PublicUpdateUserV2
eval_tap 0 100 'PublicUpdateUserV2 # SKIP deprecated' test.out

#- 101 PublicGetUserBan
eval_tap 0 101 'PublicGetUserBan # SKIP deprecated' test.out

#- 102 PublicUpdatePasswordV2
eval_tap 0 102 'PublicUpdatePasswordV2 # SKIP deprecated' test.out

#- 103 GetListJusticePlatformAccounts
eval_tap 0 103 'GetListJusticePlatformAccounts # SKIP deprecated' test.out

#- 104 PublicPlatformLinkV2
eval_tap 0 104 'PublicPlatformLinkV2 # SKIP deprecated' test.out

#- 105 PublicDeletePlatformLinkV2
eval_tap 0 105 'PublicDeletePlatformLinkV2 # SKIP deprecated' test.out

#- 106 AdminGetBansTypeV3
$CLI_EXE \
    --sn iam \
    --op AdminGetBansTypeV3 \
    > test.out 2>&1
eval_tap $? 106 'AdminGetBansTypeV3' test.out

#- 107 AdminGetListBanReasonV3
$CLI_EXE \
    --sn iam \
    --op AdminGetListBanReasonV3 \
    > test.out 2>&1
eval_tap $? 107 'AdminGetListBanReasonV3' test.out

#- 108 AdminListClientAvailablePermissions
$CLI_EXE \
    --sn iam \
    --op AdminListClientAvailablePermissions \
    --excludePermissions 'false' \
    > test.out 2>&1
eval_tap $? 108 'AdminListClientAvailablePermissions' test.out

#- 109 AdminUpdateAvailablePermissionsByModule
# body param: body
echo '{"modules": [{"docLink": "2du6TNcJ", "groups": [{"group": "IUybX7Sn", "groupId": "FGQvboQk", "permissions": [{"allowedActions": [79, 83, 84], "resource": "a7LnbCDC"}, {"allowedActions": [90, 72, 0], "resource": "73XR9Xet"}, {"allowedActions": [89, 10, 70], "resource": "Qvv5EUwP"}]}, {"group": "zBbTAW6S", "groupId": "vtEdPMFG", "permissions": [{"allowedActions": [63, 81, 66], "resource": "xzZhZiPJ"}, {"allowedActions": [47, 77, 79], "resource": "D2AtSGPA"}, {"allowedActions": [28, 81, 79], "resource": "OE5tRViz"}]}, {"group": "K3PVVPbp", "groupId": "LDv3zyGT", "permissions": [{"allowedActions": [64, 61, 72], "resource": "6U5rFJpH"}, {"allowedActions": [12, 26, 30], "resource": "5GNDv3oA"}, {"allowedActions": [18, 19, 84], "resource": "kUJfFPH5"}]}], "module": "vJzMGGE4", "moduleId": "ZiokEmOE"}, {"docLink": "Qc6Y08nI", "groups": [{"group": "deBMEWBS", "groupId": "8lxgfJ0J", "permissions": [{"allowedActions": [60, 64, 33], "resource": "CY2uIwx5"}, {"allowedActions": [53, 39, 59], "resource": "z1w5z5Tf"}, {"allowedActions": [20, 6, 96], "resource": "iaUV7iIK"}]}, {"group": "NxUGzIME", "groupId": "dNHv7ygK", "permissions": [{"allowedActions": [28, 2, 98], "resource": "BnpZFSBP"}, {"allowedActions": [61, 32, 13], "resource": "j2ws6E12"}, {"allowedActions": [6, 60, 22], "resource": "WsvoFGDG"}]}, {"group": "tT5er8LO", "groupId": "lj2LleH4", "permissions": [{"allowedActions": [7, 28, 9], "resource": "vgrAm73W"}, {"allowedActions": [38, 74, 17], "resource": "6igKD60X"}, {"allowedActions": [9, 95, 65], "resource": "33goq1cF"}]}], "module": "gakwg7K3", "moduleId": "ofg7cv7P"}, {"docLink": "ErfcpSV3", "groups": [{"group": "8iAxhMLf", "groupId": "njnGVKBe", "permissions": [{"allowedActions": [0, 19, 8], "resource": "PT3KftDd"}, {"allowedActions": [76, 55, 75], "resource": "uEHrfQ3z"}, {"allowedActions": [31, 26, 14], "resource": "okXb26cT"}]}, {"group": "ei9otFfz", "groupId": "yULijRHc", "permissions": [{"allowedActions": [7, 49, 36], "resource": "kws0ypRn"}, {"allowedActions": [56, 51, 97], "resource": "CjtBzfd1"}, {"allowedActions": [92, 78, 19], "resource": "F2XZIfMo"}]}, {"group": "jdFFDqpl", "groupId": "IZR7SS2L", "permissions": [{"allowedActions": [7, 54, 41], "resource": "ytM82DFG"}, {"allowedActions": [11, 50, 74], "resource": "WUKMovtJ"}, {"allowedActions": [14, 38, 64], "resource": "5qyIkzT7"}]}], "module": "Q8AYduFF", "moduleId": "yjjBzN0C"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateAvailablePermissionsByModule \
    --forceDelete 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 109 'AdminUpdateAvailablePermissionsByModule' test.out

#- 110 AdminDeleteConfigPermissionsByGroup
# body param: body
echo '{"groupId": "0WDKE0Q2", "moduleId": "ManEZHQM"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDeleteConfigPermissionsByGroup \
    --forceDelete 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 110 'AdminDeleteConfigPermissionsByGroup' test.out

#- 111 AdminListClientTemplates
$CLI_EXE \
    --sn iam \
    --op AdminListClientTemplates \
    > test.out 2>&1
eval_tap $? 111 'AdminListClientTemplates' test.out

#- 112 AdminGetInputValidations
$CLI_EXE \
    --sn iam \
    --op AdminGetInputValidations \
    > test.out 2>&1
eval_tap $? 112 'AdminGetInputValidations' test.out

#- 113 AdminUpdateInputValidations
# body param: body
echo '[{"field": "Qfev5JWe", "validation": {"allowAllSpecialCharacters": true, "allowDigit": true, "allowLetter": false, "allowSpace": true, "allowUnicode": true, "avatarConfig": {"allowedPrefixes": ["GprokE5S", "FzC0izlS", "i8edCwVE"], "preferRegex": true, "regex": "UFgpUVy4"}, "blockedWord": ["vtyQURsk", "NeRQlJJf", "IFntZsR2"], "description": [{"language": "zB3eG8Na", "message": ["Hj5b92Ws", "3ZuTocLy", "JIOmVEXz"]}, {"language": "GcoUo3zx", "message": ["JwXBIEwe", "7baI2DDe", "OxhVusRz"]}, {"language": "fC1Eey0M", "message": ["Qw4SZGMd", "H2mMO46p", "4ck1v99k"]}], "isCustomRegex": true, "letterCase": "A5qxg5Q2", "maxLength": 20, "maxRepeatingAlphaNum": 18, "maxRepeatingSpecialCharacter": 31, "minCharType": 63, "minLength": 20, "profanityFilter": "0JMnfDuj", "regex": "LoZ252gK", "specialCharacterLocation": "vdysOfdl", "specialCharacters": ["rFTBLrd9", "mNJhxmtK", "gd3sw0u7"]}}, {"field": "ibsLGmkH", "validation": {"allowAllSpecialCharacters": true, "allowDigit": true, "allowLetter": false, "allowSpace": true, "allowUnicode": false, "avatarConfig": {"allowedPrefixes": ["zUeDngGT", "4ErC7cuk", "AjcCVxZ8"], "preferRegex": true, "regex": "kO5ucMd5"}, "blockedWord": ["iffgZNEr", "VPgp5uRu", "MhPAAghQ"], "description": [{"language": "qH7ACYNw", "message": ["BFsAlG7w", "QYEqpETD", "PW9NtP28"]}, {"language": "MUgPnd1M", "message": ["Q4hdpJQ6", "z4fkLICs", "xic9Q8NC"]}, {"language": "urXndKU8", "message": ["6uX8tkGx", "E0kOHC9R", "y0ufGXJQ"]}], "isCustomRegex": true, "letterCase": "RZ6dK9Lr", "maxLength": 45, "maxRepeatingAlphaNum": 2, "maxRepeatingSpecialCharacter": 3, "minCharType": 4, "minLength": 87, "profanityFilter": "8MGFqsqx", "regex": "kJudvvrE", "specialCharacterLocation": "6mqWgun1", "specialCharacters": ["OlmrhlQu", "7WevmWsF", "S0riyepR"]}}, {"field": "SE9FqfjO", "validation": {"allowAllSpecialCharacters": false, "allowDigit": true, "allowLetter": true, "allowSpace": false, "allowUnicode": false, "avatarConfig": {"allowedPrefixes": ["YVXHom8c", "0mb1Mn70", "A4vIINL6"], "preferRegex": false, "regex": "UCZKyxht"}, "blockedWord": ["UIHMN67E", "nJAaqLOa", "cyCf99TZ"], "description": [{"language": "9Prd41cz", "message": ["kzWGndlS", "ngpTwtML", "OcO7Ds3B"]}, {"language": "K24iNWEV", "message": ["OQ9nYzau", "5ueMA11T", "bq7gRpWl"]}, {"language": "rXMtTknl", "message": ["d46ZHv6F", "r4MbS4eS", "auAr6pse"]}], "isCustomRegex": true, "letterCase": "BYOdU6S5", "maxLength": 41, "maxRepeatingAlphaNum": 35, "maxRepeatingSpecialCharacter": 51, "minCharType": 13, "minLength": 71, "profanityFilter": "VXjNGWXL", "regex": "Nvt8iUsP", "specialCharacterLocation": "wwjYyvvE", "specialCharacters": ["bvyRTb55", "pbFovkHT", "t4bGcVQQ"]}}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateInputValidations \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 113 'AdminUpdateInputValidations' test.out

#- 114 AdminResetInputValidations
$CLI_EXE \
    --sn iam \
    --op AdminResetInputValidations \
    --field 'tQyRBr0d' \
    > test.out 2>&1
eval_tap $? 114 'AdminResetInputValidations' test.out

#- 115 ListAdminsV3
$CLI_EXE \
    --sn iam \
    --op ListAdminsV3 \
    --namespace $AB_NAMESPACE \
    --after 'uRbUtCxb' \
    --before '7XwZxdJE' \
    --endDate 'uw3krJwP' \
    --limit '16' \
    --query 'ghcSCjCE' \
    --roleId 'bfeDkQRF' \
    --startDate 'nt692487' \
    > test.out 2>&1
eval_tap $? 115 'ListAdminsV3' test.out

#- 116 AdminGetAgeRestrictionStatusV3
$CLI_EXE \
    --sn iam \
    --op AdminGetAgeRestrictionStatusV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 116 'AdminGetAgeRestrictionStatusV3' test.out

#- 117 AdminUpdateAgeRestrictionConfigV3
# body param: body
echo '{"ageRestriction": 93, "enable": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateAgeRestrictionConfigV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 117 'AdminUpdateAgeRestrictionConfigV3' test.out

#- 118 AdminGetListCountryAgeRestrictionV3
$CLI_EXE \
    --sn iam \
    --op AdminGetListCountryAgeRestrictionV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 118 'AdminGetListCountryAgeRestrictionV3' test.out

#- 119 AdminUpdateCountryAgeRestrictionV3
# body param: body
echo '{"ageRestriction": 89}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateCountryAgeRestrictionV3 \
    --countryCode 'hR89JngC' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 119 'AdminUpdateCountryAgeRestrictionV3' test.out

#- 120 AdminGetBannedUsersV3
$CLI_EXE \
    --sn iam \
    --op AdminGetBannedUsersV3 \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --banType '5sZmwCDT' \
    --limit '75' \
    --offset '27' \
    > test.out 2>&1
eval_tap $? 120 'AdminGetBannedUsersV3' test.out

#- 121 AdminBanUserBulkV3
# body param: body
echo '{"ban": "YxDrHWpy", "comment": "gegKKHpN", "endDate": "lYEjNT9B", "reason": "W1RRRv5F", "skipNotif": false, "userIds": ["oHM1Mc5b", "m3tn6O79", "bccHGpgF"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBanUserBulkV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 121 'AdminBanUserBulkV3' test.out

#- 122 AdminUnbanUserBulkV3
# body param: body
echo '{"bans": [{"banId": "wd2OWaMh", "userId": "iMhNJp9P"}, {"banId": "e60nR8Go", "userId": "nWvkoIDR"}, {"banId": "RpJ5j59P", "userId": "wmRQzdGh"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUnbanUserBulkV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 122 'AdminUnbanUserBulkV3' test.out

#- 123 AdminGetBansTypeWithNamespaceV3
$CLI_EXE \
    --sn iam \
    --op AdminGetBansTypeWithNamespaceV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 123 'AdminGetBansTypeWithNamespaceV3' test.out

#- 124 AdminGetClientsByNamespaceV3
$CLI_EXE \
    --sn iam \
    --op AdminGetClientsByNamespaceV3 \
    --namespace $AB_NAMESPACE \
    --clientId 'Decx99Pj' \
    --clientName 'jetgPEQO' \
    --clientType '8rblVd6Y' \
    --limit '90' \
    --offset '67' \
    --skipLoginQueue 'true' \
    > test.out 2>&1
eval_tap $? 124 'AdminGetClientsByNamespaceV3' test.out

#- 125 AdminBulkUpdateClientsV3
# body param: body
echo '{"clientIds": ["LuR4l59t", "OwNMpKcL", "CwAFJHvQ"], "clientUpdateRequest": {"audiences": ["saDJWGJv", "5ZiounIE", "BMnknu6L"], "baseUri": "t4uFrzZi", "clientName": "pxXdxd1W", "clientPermissions": [{"action": 51, "resource": "fkiYwKSI", "schedAction": 53, "schedCron": "lSZfgls9", "schedRange": ["pr5eCBFj", "yKWY0Q91", "FI1M2gNo"]}, {"action": 40, "resource": "T6DyQcI7", "schedAction": 39, "schedCron": "A1FgRhdF", "schedRange": ["2BKn87Hf", "SuGyQMOC", "pgqspWUq"]}, {"action": 26, "resource": "L4yYquuI", "schedAction": 19, "schedCron": "J8RngXlM", "schedRange": ["rEQF1Lfp", "FiywhdkA", "YuSwki2F"]}], "clientPlatform": "YvRiJAQi", "deletable": true, "description": "l4L83ll8", "modulePermissions": [{"moduleId": "VsfD0Md1", "selectedGroups": [{"groupId": "217szWO5", "selectedActions": [76, 48, 32]}, {"groupId": "NSKpK6UD", "selectedActions": [96, 49, 24]}, {"groupId": "sYvUMP89", "selectedActions": [22, 9, 4]}]}, {"moduleId": "wJa0miND", "selectedGroups": [{"groupId": "OBxFOmaY", "selectedActions": [5, 52, 70]}, {"groupId": "ZY2q0biu", "selectedActions": [94, 61, 56]}, {"groupId": "W0J3XSCv", "selectedActions": [40, 60, 16]}]}, {"moduleId": "h8qdUI9D", "selectedGroups": [{"groupId": "JXYVM4IS", "selectedActions": [36, 16, 24]}, {"groupId": "Hnjn74T5", "selectedActions": [46, 50, 4]}, {"groupId": "cagUwmS8", "selectedActions": [16, 37, 66]}]}], "namespace": "PWz3cUAl", "oauthAccessTokenExpiration": 68, "oauthAccessTokenExpirationTimeUnit": "et4TrLn0", "oauthRefreshTokenExpiration": 81, "oauthRefreshTokenExpirationTimeUnit": "OB2WdAzP", "redirectUri": "fp6vhvvi", "scopes": ["c70THeNd", "V6TNfYHg", "LLnCL24U"], "skipLoginQueue": false, "twoFactorEnabled": true}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBulkUpdateClientsV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 125 'AdminBulkUpdateClientsV3' test.out

#- 126 AdminCreateClientV3
# body param: body
echo '{"audiences": ["OnXUzCWj", "a81KGht6", "DIPn31aV"], "baseUri": "YJBxv769", "clientId": "M2SkuHyl", "clientName": "ZLpDWRyb", "clientPermissions": [{"action": 3, "resource": "ZEPgCc2T", "schedAction": 88, "schedCron": "5w3KXQdH", "schedRange": ["2gKIf4tN", "xSJkHLbR", "JqrCBgyf"]}, {"action": 55, "resource": "sZX2GiB8", "schedAction": 65, "schedCron": "s0t19h4m", "schedRange": ["2O5tm0nk", "xcjFUjLP", "IOAoNFSb"]}, {"action": 82, "resource": "y4QZEID6", "schedAction": 13, "schedCron": "zSiS4hcB", "schedRange": ["5iD5GFOj", "oAK1NUXr", "vVR6rIDu"]}], "clientPlatform": "CjpsqxMJ", "deletable": true, "description": "MMEvSudh", "modulePermissions": [{"moduleId": "letskvk0", "selectedGroups": [{"groupId": "s4DmV5OS", "selectedActions": [85, 95, 89]}, {"groupId": "eOOU9Qoh", "selectedActions": [20, 90, 94]}, {"groupId": "TyoxBpl1", "selectedActions": [66, 58, 50]}]}, {"moduleId": "NKbKjJhm", "selectedGroups": [{"groupId": "D1hARX4o", "selectedActions": [91, 88, 14]}, {"groupId": "bGcKmY0E", "selectedActions": [16, 94, 52]}, {"groupId": "KtB91T9Z", "selectedActions": [23, 87, 5]}]}, {"moduleId": "Zjtov7sZ", "selectedGroups": [{"groupId": "Msj1lbI8", "selectedActions": [80, 40, 22]}, {"groupId": "o1ynoII9", "selectedActions": [59, 87, 92]}, {"groupId": "lZIPuFRA", "selectedActions": [75, 65, 39]}]}], "namespace": "ce3SbqUt", "oauthAccessTokenExpiration": 78, "oauthAccessTokenExpirationTimeUnit": "nGSxooUi", "oauthClientType": "rwMUJvRN", "oauthRefreshTokenExpiration": 23, "oauthRefreshTokenExpirationTimeUnit": "nhbIUxbS", "parentNamespace": "5jB8TNWv", "redirectUri": "UMzSiWzB", "scopes": ["l1yEG9LT", "gAr9ydps", "0KePMdDF"], "secret": "mM7FoMLL", "skipLoginQueue": false, "twoFactorEnabled": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminCreateClientV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 126 'AdminCreateClientV3' test.out

#- 127 AdminGetClientsbyNamespacebyIDV3
$CLI_EXE \
    --sn iam \
    --op AdminGetClientsbyNamespacebyIDV3 \
    --clientId '6FhmASEl' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 127 'AdminGetClientsbyNamespacebyIDV3' test.out

#- 128 AdminDeleteClientV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteClientV3 \
    --clientId 'LJhCigLO' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 128 'AdminDeleteClientV3' test.out

#- 129 AdminUpdateClientV3
# body param: body
echo '{"audiences": ["V2h9omHt", "BIX4PhPW", "OGddEGCe"], "baseUri": "kAZrzFrG", "clientName": "w8CRZis3", "clientPermissions": [{"action": 9, "resource": "GL5COGU7", "schedAction": 61, "schedCron": "1ZGMiCEl", "schedRange": ["XlC8ZwNU", "nj46DVFr", "VTWZZMS0"]}, {"action": 38, "resource": "QOMtGSzr", "schedAction": 45, "schedCron": "BltgnMmQ", "schedRange": ["9tnmMF5t", "xtu28W5p", "15WUXTWp"]}, {"action": 37, "resource": "kGhUaf7k", "schedAction": 14, "schedCron": "s2U91niO", "schedRange": ["lwB0VxN6", "nY2Df4FH", "QutchaBh"]}], "clientPlatform": "bdtagiIh", "deletable": true, "description": "mTwSO6fs", "modulePermissions": [{"moduleId": "4XGXfLIC", "selectedGroups": [{"groupId": "au5y8GdP", "selectedActions": [93, 97, 47]}, {"groupId": "NWzJ6FLi", "selectedActions": [26, 74, 26]}, {"groupId": "bk527I0h", "selectedActions": [18, 88, 89]}]}, {"moduleId": "idT2WC1U", "selectedGroups": [{"groupId": "u1EuU4I4", "selectedActions": [68, 95, 19]}, {"groupId": "AmSq5wae", "selectedActions": [0, 52, 5]}, {"groupId": "tS3CPdly", "selectedActions": [5, 1, 5]}]}, {"moduleId": "4GTGrT29", "selectedGroups": [{"groupId": "WrepTJ01", "selectedActions": [7, 72, 89]}, {"groupId": "EQBDAi32", "selectedActions": [58, 54, 58]}, {"groupId": "N15WYHKf", "selectedActions": [61, 27, 86]}]}], "namespace": "IefX3cDg", "oauthAccessTokenExpiration": 74, "oauthAccessTokenExpirationTimeUnit": "JWhXfr7s", "oauthRefreshTokenExpiration": 79, "oauthRefreshTokenExpirationTimeUnit": "gQPLPVJE", "redirectUri": "PzdSGxpU", "scopes": ["LhZWwi9P", "2Oo92sxI", "I45Bw7yp"], "skipLoginQueue": true, "twoFactorEnabled": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateClientV3 \
    --clientId 'RTBozdM5' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 129 'AdminUpdateClientV3' test.out

#- 130 AdminUpdateClientPermissionV3
# body param: body
echo '{"permissions": [{"action": 28, "resource": "Km0lHpJ1"}, {"action": 13, "resource": "8UriX6HZ"}, {"action": 5, "resource": "4Bkwr6y7"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateClientPermissionV3 \
    --clientId 'OQQSqGg3' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 130 'AdminUpdateClientPermissionV3' test.out

#- 131 AdminAddClientPermissionsV3
# body param: body
echo '{"permissions": [{"action": 54, "resource": "hFMiGaFE"}, {"action": 8, "resource": "qpJkgAxX"}, {"action": 26, "resource": "ZIDI4NId"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddClientPermissionsV3 \
    --clientId 'k311LpGb' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 131 'AdminAddClientPermissionsV3' test.out

#- 132 AdminDeleteClientPermissionV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteClientPermissionV3 \
    --action '32' \
    --clientId '4wQUQ2Kg' \
    --namespace $AB_NAMESPACE \
    --resource 'Xz9uPbGx' \
    > test.out 2>&1
eval_tap $? 132 'AdminDeleteClientPermissionV3' test.out

#- 133 AdminGetConfigValueV3
$CLI_EXE \
    --sn iam \
    --op AdminGetConfigValueV3 \
    --configKey 'uIjMjZpI' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 133 'AdminGetConfigValueV3' test.out

#- 134 AdminGetCountryListV3
$CLI_EXE \
    --sn iam \
    --op AdminGetCountryListV3 \
    --namespace $AB_NAMESPACE \
    --filterBlacklist 'true' \
    > test.out 2>&1
eval_tap $? 134 'AdminGetCountryListV3' test.out

#- 135 AdminGetCountryBlacklistV3
$CLI_EXE \
    --sn iam \
    --op AdminGetCountryBlacklistV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 135 'AdminGetCountryBlacklistV3' test.out

#- 136 AdminAddCountryBlacklistV3
# body param: body
echo '{"blacklist": ["QffQy9oP", "1MMlwfy3", "VdHlwKbx"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddCountryBlacklistV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 136 'AdminAddCountryBlacklistV3' test.out

#- 137 RetrieveAllThirdPartyLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op RetrieveAllThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 137 'RetrieveAllThirdPartyLoginPlatformCredentialV3' test.out

#- 138 RetrieveAllActiveThirdPartyLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op RetrieveAllActiveThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 138 'RetrieveAllActiveThirdPartyLoginPlatformCredentialV3' test.out

#- 139 RetrieveAllSSOLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op RetrieveAllSSOLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --limit '19' \
    --offset '24' \
    > test.out 2>&1
eval_tap $? 139 'RetrieveAllSSOLoginPlatformCredentialV3' test.out

#- 140 RetrieveThirdPartyLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op RetrieveThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'lCcU2Qwi' \
    > test.out 2>&1
eval_tap $? 140 'RetrieveThirdPartyLoginPlatformCredentialV3' test.out

#- 141 AddThirdPartyLoginPlatformCredentialV3
# body param: body
echo '{"ACSURL": "LMiGQiaH", "AWSCognitoRegion": "EzRGNjRy", "AWSCognitoUserPool": "QowvZhBh", "AllowedClients": ["w4iEwB0O", "d2oyDF1N", "TLZhCB5z"], "AppId": "Ti2hGWUo", "AuthorizationEndpoint": "2TuG4vId", "ClientId": "XWjWwtBN", "EmptyStrFieldList": ["TV4CeWwZ", "Hqs6rYbJ", "ILijoLEh"], "Environment": "NO9k78ZD", "FederationMetadataURL": "Hwf4FzfG", "GenericOauthFlow": true, "IsActive": true, "Issuer": "LkS2sKQG", "JWKSEndpoint": "xJ6wkoWV", "KeyID": "QNOqFGnI", "LogoURL": "MQfxIQTD", "NetflixCertificates": {"encryptedPrivateKey": "IksIA3Zj", "encryptedPrivateKeyName": "zbjIamUn", "publicCertificate": "NB3AZ9kY", "publicCertificateName": "HKfsMorT", "rootCertificate": "tVctkej1", "rootCertificateName": "RCoRBAR7"}, "OrganizationId": "pJisYL38", "PlatformName": "j7H5HwXc", "RedirectUri": "a57KzbSt", "RegisteredDomains": [{"affectedClientIDs": ["1zhPrrWu", "rpAW2aml", "nfsN8oEd"], "domain": "Ldf1TPa4", "namespaces": ["co5VSNZi", "7pr6q173", "CWV5UUzj"], "roleId": "1aQ3wwPY"}, {"affectedClientIDs": ["pKMv73Q8", "MsjmEoH5", "wlG6HzPP"], "domain": "V0rXpvjH", "namespaces": ["K4j58qUp", "RhVQSq63", "DoYgPJvq"], "roleId": "63RsYXDz"}, {"affectedClientIDs": ["Qt7cNXpO", "wkeUSlTC", "qbHFe5i8"], "domain": "H7rMEKlC", "namespaces": ["BqRePdcS", "fw0v1RFP", "biPLDvyY"], "roleId": "eiml2lmM"}], "Secret": "f4SGKF33", "TeamID": "9jUjZaP9", "TokenAuthenticationType": "epdkYwP1", "TokenClaimsMapping": {"KmBkd4Tn": "dVu50arn", "gtum01rT": "NqHth9kD", "3ytdL9Co": "vMmFpfAd"}, "TokenEndpoint": "pVPvuN5o", "UserInfoEndpoint": "nwWuidWi", "UserInfoHTTPMethod": "5v7Y3OB3", "scopes": ["SAK7jetC", "ZWtIdSYl", "xEhyoAoT"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AddThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'BW0suyeQ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 141 'AddThirdPartyLoginPlatformCredentialV3' test.out

#- 142 DeleteThirdPartyLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op DeleteThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'YByCWX9m' \
    > test.out 2>&1
eval_tap $? 142 'DeleteThirdPartyLoginPlatformCredentialV3' test.out

#- 143 UpdateThirdPartyLoginPlatformCredentialV3
# body param: body
echo '{"ACSURL": "23XQcjag", "AWSCognitoRegion": "FHaRXiYW", "AWSCognitoUserPool": "dNWhmuBR", "AllowedClients": ["3RGUWuri", "6D3lOcbL", "eQ4T75nr"], "AppId": "0nJfil3y", "AuthorizationEndpoint": "9ENhcjmu", "ClientId": "pxd97Pqg", "EmptyStrFieldList": ["HK3bf6K3", "lu0KpBMx", "xhz9IP2N"], "Environment": "76YNVllU", "FederationMetadataURL": "G5YMh4Ve", "GenericOauthFlow": false, "IsActive": false, "Issuer": "aBAbktkw", "JWKSEndpoint": "gfcjyJwn", "KeyID": "hC0ltcL5", "LogoURL": "1tX08WV0", "NetflixCertificates": {"encryptedPrivateKey": "4qrS4ggn", "encryptedPrivateKeyName": "rVyvvwuB", "publicCertificate": "ZEQaeGUW", "publicCertificateName": "ljRviubc", "rootCertificate": "sCvT8SKw", "rootCertificateName": "aLxaOh7m"}, "OrganizationId": "I6215IwW", "PlatformName": "VTGPFUlZ", "RedirectUri": "f2NGNrvi", "RegisteredDomains": [{"affectedClientIDs": ["PLwGrCuw", "j5Oj9u4g", "PBQWhphw"], "domain": "b98bm4eQ", "namespaces": ["Lo5HIo5L", "2taxfHh9", "5RMOdA2D"], "roleId": "ZLitMhfS"}, {"affectedClientIDs": ["k2bsE25l", "DHMmdCWH", "5HaCYnuX"], "domain": "7CBbKPUH", "namespaces": ["ReJByDii", "dTyoogcP", "yasEAIkx"], "roleId": "3Crh74MH"}, {"affectedClientIDs": ["vtmInkKl", "AlETXJ49", "a8RbO8lo"], "domain": "QoWSQgjL", "namespaces": ["m9dsEbpo", "l9X7Kfaf", "H3fQkjIA"], "roleId": "IbOAIdEG"}], "Secret": "iRaBfQDv", "TeamID": "rcUVzXcZ", "TokenAuthenticationType": "q0Rym78D", "TokenClaimsMapping": {"RXuvxTT5": "ipIepUvy", "kOeSJUWV": "iAiDC9iQ", "1dYRbYHa": "6JtI3gJN"}, "TokenEndpoint": "9e0Vv0hw", "UserInfoEndpoint": "ftnxLRXb", "UserInfoHTTPMethod": "e3d4uxWA", "scopes": ["pUhmRXLU", "GM6sw4QS", "8RtQNt2N"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op UpdateThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'R152RMse' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 143 'UpdateThirdPartyLoginPlatformCredentialV3' test.out

#- 144 UpdateThirdPartyLoginPlatformDomainV3
# body param: body
echo '{"affectedClientIDs": ["KThY6tZy", "GjgjrtCd", "tkuxH77Y"], "assignedNamespaces": ["8ju3nFqU", "bTfKdXAf", "9yJZBouE"], "domain": "vwKK26dw", "roleId": "rlXTcHOe"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op UpdateThirdPartyLoginPlatformDomainV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'kHqslSqy' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 144 'UpdateThirdPartyLoginPlatformDomainV3' test.out

#- 145 DeleteThirdPartyLoginPlatformDomainV3
# body param: body
echo '{"domain": "b4eIcoz9"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op DeleteThirdPartyLoginPlatformDomainV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'iehVucWz' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 145 'DeleteThirdPartyLoginPlatformDomainV3' test.out

#- 146 RetrieveSSOLoginPlatformCredential
$CLI_EXE \
    --sn iam \
    --op RetrieveSSOLoginPlatformCredential \
    --namespace $AB_NAMESPACE \
    --platformId 'qNfPjNn7' \
    > test.out 2>&1
eval_tap $? 146 'RetrieveSSOLoginPlatformCredential' test.out

#- 147 AddSSOLoginPlatformCredential
# body param: body
echo '{"acsUrl": "hGogGJvg", "apiKey": "vrBFCXJd", "appId": "vy4dkeVm", "federationMetadataUrl": "AotNxOtb", "isActive": false, "redirectUri": "x9gzubaM", "secret": "xbzQpen3", "ssoUrl": "ifO7vXJX"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AddSSOLoginPlatformCredential \
    --namespace $AB_NAMESPACE \
    --platformId 'zaNiJLbO' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 147 'AddSSOLoginPlatformCredential' test.out

#- 148 DeleteSSOLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op DeleteSSOLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'kA5J8yvM' \
    > test.out 2>&1
eval_tap $? 148 'DeleteSSOLoginPlatformCredentialV3' test.out

#- 149 UpdateSSOPlatformCredential
# body param: body
echo '{"acsUrl": "xli4CGEs", "apiKey": "KEyuRWOD", "appId": "1lMiEzSh", "federationMetadataUrl": "K37YVGXR", "isActive": false, "redirectUri": "oHO3mtnY", "secret": "8CldhWOJ", "ssoUrl": "zYGwBsJt"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op UpdateSSOPlatformCredential \
    --namespace $AB_NAMESPACE \
    --platformId 'CyeYraUl' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 149 'UpdateSSOPlatformCredential' test.out

#- 150 AdminListUserIDByPlatformUserIDsV3
# body param: body
echo '{"platformUserIds": ["8brlMa0o", "jwAAOczP", "BiBaJhBp"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminListUserIDByPlatformUserIDsV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'TRmlnfvV' \
    --rawPID 'false' \
    --rawPUID 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 150 'AdminListUserIDByPlatformUserIDsV3' test.out

#- 151 AdminGetUserByPlatformUserIDV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserByPlatformUserIDV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'CxRAaWeG' \
    --platformUserId 'fkwXFPA6' \
    > test.out 2>&1
eval_tap $? 151 'AdminGetUserByPlatformUserIDV3' test.out

#- 152 GetAdminUsersByRoleIdV3
$CLI_EXE \
    --sn iam \
    --op GetAdminUsersByRoleIdV3 \
    --namespace $AB_NAMESPACE \
    --roleId 'YgFw2Fh9' \
    --after '90' \
    --before '83' \
    --limit '13' \
    > test.out 2>&1
eval_tap $? 152 'GetAdminUsersByRoleIdV3' test.out

#- 153 AdminGetUserByEmailAddressV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserByEmailAddressV3 \
    --namespace $AB_NAMESPACE \
    --emailAddress 'JKcLJ3oh' \
    > test.out 2>&1
eval_tap $? 153 'AdminGetUserByEmailAddressV3' test.out

#- 154 AdminBulkUpdateUsersV3
# body param: body
echo '{"updateRequest": {"skipLoginQueue": false}, "userIds": ["XK1kBVtw", "IuRUsr3X", "sEsQAgSU"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBulkUpdateUsersV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 154 'AdminBulkUpdateUsersV3' test.out

#- 155 AdminGetBulkUserBanV3
# body param: body
echo '{"bulkUserId": ["y9iOF6Cm", "lItZaFgk", "R9180a5K"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminGetBulkUserBanV3 \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --banType '6WRbNe37' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 155 'AdminGetBulkUserBanV3' test.out

#- 156 AdminListUserIDByUserIDsV3
# body param: body
echo '{"userIds": ["g7WK5AmZ", "zf52Q6F4", "OhgzlPXq"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminListUserIDByUserIDsV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 156 'AdminListUserIDByUserIDsV3' test.out

#- 157 AdminBulkGetUsersPlatform
# body param: body
echo '{"userIds": ["bl9sGnRr", "Koc4MSND", "QpskJM1p"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBulkGetUsersPlatform \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 157 'AdminBulkGetUsersPlatform' test.out

#- 158 AdminInviteUserV3
# body param: body
echo '{"emailAddresses": ["2O1GIvFs", "aKAPHEia", "1Olu7Qk8"], "isAdmin": false, "languageTag": "s7Ud2Bn4", "namespace": "3dUvlqZG", "roles": ["SEg33gGC", "lB5GprT1", "OAFNokws"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminInviteUserV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 158 'AdminInviteUserV3' test.out

#- 159 AdminQueryThirdPlatformLinkHistoryV3
$CLI_EXE \
    --sn iam \
    --op AdminQueryThirdPlatformLinkHistoryV3 \
    --namespace $AB_NAMESPACE \
    --limit '49' \
    --offset '92' \
    --platformUserId 'hmFWF0dk' \
    --platformId 'Vm8xHp6g' \
    > test.out 2>&1
eval_tap $? 159 'AdminQueryThirdPlatformLinkHistoryV3' test.out

#- 160 AdminListUsersV3
$CLI_EXE \
    --sn iam \
    --op AdminListUsersV3 \
    --namespace $AB_NAMESPACE \
    --limit '33' \
    --offset '52' \
    > test.out 2>&1
eval_tap $? 160 'AdminListUsersV3' test.out

#- 161 AdminSearchUserV3
$CLI_EXE \
    --sn iam \
    --op AdminSearchUserV3 \
    --namespace $AB_NAMESPACE \
    --by 'rCYVmE3s' \
    --endDate 'hsqeHeVD' \
    --includeTotal 'false' \
    --limit '41' \
    --offset '85' \
    --platformBy 'pFscpWh8' \
    --platformId 'lktPajzY' \
    --query 'STzSdfah' \
    --roleIds 'D74y7SFR' \
    --skipLoginQueue 'false' \
    --startDate 'JT3wc7Tf' \
    --testAccount 'true' \
    > test.out 2>&1
eval_tap $? 161 'AdminSearchUserV3' test.out

#- 162 AdminGetBulkUserByEmailAddressV3
# body param: body
echo '{"listEmailAddressRequest": ["hkbUmghw", "Z1vYh7Vp", "JOefBoJi"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminGetBulkUserByEmailAddressV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 162 'AdminGetBulkUserByEmailAddressV3' test.out

#- 163 AdminGetUserByUserIdV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserByUserIdV3 \
    --namespace $AB_NAMESPACE \
    --userId '27qUHOFs' \
    > test.out 2>&1
eval_tap $? 163 'AdminGetUserByUserIdV3' test.out

#- 164 AdminUpdateUserV3
# body param: body
echo '{"avatarUrl": "OFzMkQha", "country": "HqYP8qKP", "dateOfBirth": "C8mLh7nr", "displayName": "nC9UShf1", "languageTag": "U0M4hNav", "skipLoginQueue": false, "uniqueDisplayName": "WF37yWeV", "userName": "MdykaZh3"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserV3 \
    --namespace $AB_NAMESPACE \
    --userId 'aab66CYj' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 164 'AdminUpdateUserV3' test.out

#- 165 AdminGetUserBanV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserBanV3 \
    --namespace $AB_NAMESPACE \
    --userId 'MQT86d4o' \
    --activeOnly 'true' \
    --after '3ZIlfVC0' \
    --before 'icqW8FsJ' \
    --limit '9' \
    > test.out 2>&1
eval_tap $? 165 'AdminGetUserBanV3' test.out

#- 166 AdminBanUserV3
# body param: body
echo '{"ban": "W5Z3dr6L", "comment": "5aUmnagk", "endDate": "2HZ0FKqz", "reason": "mboMRlwz", "skipNotif": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBanUserV3 \
    --namespace $AB_NAMESPACE \
    --userId '4feGsuQU' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 166 'AdminBanUserV3' test.out

#- 167 AdminGetUserBanSummaryV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserBanSummaryV3 \
    --namespace $AB_NAMESPACE \
    --userId 'r3Okzike' \
    > test.out 2>&1
eval_tap $? 167 'AdminGetUserBanSummaryV3' test.out

#- 168 AdminUpdateUserBanV3
# body param: body
echo '{"enabled": false, "skipNotif": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserBanV3 \
    --banId 'OzoxIHmK' \
    --namespace $AB_NAMESPACE \
    --userId 'buisScQJ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 168 'AdminUpdateUserBanV3' test.out

#- 169 AdminSendVerificationCodeV3
# body param: body
echo '{"context": "mkPQXutZ", "emailAddress": "T0itoRgl", "languageTag": "7hrVrtLm"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminSendVerificationCodeV3 \
    --namespace $AB_NAMESPACE \
    --userId 'W8DGIIlv' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 169 'AdminSendVerificationCodeV3' test.out

#- 170 AdminVerifyAccountV3
# body param: body
echo '{"Code": "wANd5s0A", "ContactType": "pqQpDGX2", "LanguageTag": "ftq7oUzD", "validateOnly": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminVerifyAccountV3 \
    --namespace $AB_NAMESPACE \
    --userId '4D69mXey' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 170 'AdminVerifyAccountV3' test.out

#- 171 GetUserVerificationCode
$CLI_EXE \
    --sn iam \
    --op GetUserVerificationCode \
    --namespace $AB_NAMESPACE \
    --userId 'aQKJHHaz' \
    > test.out 2>&1
eval_tap $? 171 'GetUserVerificationCode' test.out

#- 172 AdminGetUserDeletionStatusV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserDeletionStatusV3 \
    --namespace $AB_NAMESPACE \
    --userId 'qhHHum0J' \
    > test.out 2>&1
eval_tap $? 172 'AdminGetUserDeletionStatusV3' test.out

#- 173 AdminUpdateUserDeletionStatusV3
# body param: body
echo '{"deletionDate": 61, "enabled": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserDeletionStatusV3 \
    --namespace $AB_NAMESPACE \
    --userId '4endS1t9' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 173 'AdminUpdateUserDeletionStatusV3' test.out

#- 174 AdminListUserAllPlatformAccountsDistinctV3
$CLI_EXE \
    --sn iam \
    --op AdminListUserAllPlatformAccountsDistinctV3 \
    --namespace $AB_NAMESPACE \
    --userId 'nCgKTUnf' \
    > test.out 2>&1
eval_tap $? 174 'AdminListUserAllPlatformAccountsDistinctV3' test.out

#- 175 AdminUpgradeHeadlessAccountV3
# body param: body
echo '{"code": "VZUT2hGw", "country": "QcSbco1l", "dateOfBirth": "IWUgtz9Z", "displayName": "cB60nm4p", "emailAddress": "RLEsVjA8", "password": "6fYmyr8m", "uniqueDisplayName": "ijAL3zUh", "validateOnly": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpgradeHeadlessAccountV3 \
    --namespace $AB_NAMESPACE \
    --userId 'GhRdo1vt' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 175 'AdminUpgradeHeadlessAccountV3' test.out

#- 176 AdminDeleteUserInformationV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserInformationV3 \
    --namespace $AB_NAMESPACE \
    --userId 'AGSzUq3R' \
    > test.out 2>&1
eval_tap $? 176 'AdminDeleteUserInformationV3' test.out

#- 177 AdminGetUserLoginHistoriesV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserLoginHistoriesV3 \
    --namespace $AB_NAMESPACE \
    --userId 'cDeXyA2k' \
    --after '0.9549999362474815' \
    --before '0.944917464706232' \
    --limit '10' \
    > test.out 2>&1
eval_tap $? 177 'AdminGetUserLoginHistoriesV3' test.out

#- 178 AdminResetPasswordV3
# body param: body
echo '{"languageTag": "YYYSlkFS", "mfaToken": "EYB9CeWd", "newPassword": "qtlpOkA8", "oldPassword": "0xCkiBkB"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminResetPasswordV3 \
    --namespace $AB_NAMESPACE \
    --userId 'OZLY3z3B' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 178 'AdminResetPasswordV3' test.out

#- 179 AdminUpdateUserPermissionV3
# body param: body
echo '{"Permissions": [{"Action": 51, "Resource": "l9ugyiYq", "SchedAction": 66, "SchedCron": "rbd2nUZQ", "SchedRange": ["RA3reicx", "IXuwFw9N", "kuij0HJn"]}, {"Action": 98, "Resource": "eMrJYeVs", "SchedAction": 17, "SchedCron": "agYcGJNB", "SchedRange": ["yYJKPaVU", "LoqqdMnL", "h8AP8VIs"]}, {"Action": 82, "Resource": "E1k3hJhh", "SchedAction": 62, "SchedCron": "FzbROLwU", "SchedRange": ["6PR9vXlJ", "F4SDdamQ", "wFv9SykU"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserPermissionV3 \
    --namespace $AB_NAMESPACE \
    --userId 'DCY3wrCh' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 179 'AdminUpdateUserPermissionV3' test.out

#- 180 AdminAddUserPermissionsV3
# body param: body
echo '{"Permissions": [{"Action": 6, "Resource": "4S6nkKaU", "SchedAction": 17, "SchedCron": "jDrFiFtZ", "SchedRange": ["DlYYUS6B", "xM103gwl", "LOzZV5FG"]}, {"Action": 44, "Resource": "nXmcANof", "SchedAction": 61, "SchedCron": "0Zg6T8Xf", "SchedRange": ["7wyZB3yv", "Ofl7sA5I", "q94ArmtE"]}, {"Action": 15, "Resource": "Iy7tDUvU", "SchedAction": 37, "SchedCron": "vwvq0i2u", "SchedRange": ["nHGj2Qq8", "oLJjjdWh", "BagJ9dIH"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddUserPermissionsV3 \
    --namespace $AB_NAMESPACE \
    --userId 'hPZOZfAA' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 180 'AdminAddUserPermissionsV3' test.out

#- 181 AdminDeleteUserPermissionBulkV3
# body param: body
echo '[{"Action": 32, "Resource": "Qd6Olzr5"}, {"Action": 5, "Resource": "tglS0qSG"}, {"Action": 55, "Resource": "ZUjGHFqd"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserPermissionBulkV3 \
    --namespace $AB_NAMESPACE \
    --userId '3IckO0Jm' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 181 'AdminDeleteUserPermissionBulkV3' test.out

#- 182 AdminDeleteUserPermissionV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserPermissionV3 \
    --action '95' \
    --namespace $AB_NAMESPACE \
    --resource 'xEjohLra' \
    --userId 'jtTlYziV' \
    > test.out 2>&1
eval_tap $? 182 'AdminDeleteUserPermissionV3' test.out

#- 183 AdminGetUserPlatformAccountsV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserPlatformAccountsV3 \
    --namespace $AB_NAMESPACE \
    --userId '88TA6aWa' \
    --after '5Y5Dyixu' \
    --before 'F1mQqkyN' \
    --limit '63' \
    --platformId '4GUcSq9j' \
    --targetNamespace 'C8Bqbxhu' \
    > test.out 2>&1
eval_tap $? 183 'AdminGetUserPlatformAccountsV3' test.out

#- 184 AdminGetListJusticePlatformAccounts
$CLI_EXE \
    --sn iam \
    --op AdminGetListJusticePlatformAccounts \
    --namespace $AB_NAMESPACE \
    --userId 'NMRuPbGu' \
    > test.out 2>&1
eval_tap $? 184 'AdminGetListJusticePlatformAccounts' test.out

#- 185 AdminGetUserMapping
$CLI_EXE \
    --sn iam \
    --op AdminGetUserMapping \
    --namespace $AB_NAMESPACE \
    --targetNamespace 'VpqyIOuo' \
    --userId 'v7fpjSRP' \
    > test.out 2>&1
eval_tap $? 185 'AdminGetUserMapping' test.out

#- 186 AdminCreateJusticeUser
$CLI_EXE \
    --sn iam \
    --op AdminCreateJusticeUser \
    --namespace $AB_NAMESPACE \
    --targetNamespace '0cCy4pjV' \
    --userId '8U0G45Ht' \
    > test.out 2>&1
eval_tap $? 186 'AdminCreateJusticeUser' test.out

#- 187 AdminLinkPlatformAccount
# body param: body
echo '{"platformId": "kEJ9ZTxn", "platformUserId": "ghRIfSsI"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminLinkPlatformAccount \
    --namespace $AB_NAMESPACE \
    --userId '9AbC2Rc2' \
    --skipConflict 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 187 'AdminLinkPlatformAccount' test.out

#- 188 AdminPlatformUnlinkV3
# body param: body
echo '{"platformNamespace": "eBCfzKFs"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminPlatformUnlinkV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'l4n3BmZF' \
    --userId '28SQEfz8' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 188 'AdminPlatformUnlinkV3' test.out

#- 189 AdminPlatformUnlinkAllV3
$CLI_EXE \
    --sn iam \
    --op AdminPlatformUnlinkAllV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'grZzFZPr' \
    --userId 'fOViT0Xm' \
    > test.out 2>&1
eval_tap $? 189 'AdminPlatformUnlinkAllV3' test.out

#- 190 AdminPlatformLinkV3
$CLI_EXE \
    --sn iam \
    --op AdminPlatformLinkV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'RFY45YYA' \
    --userId 'aD8U74l9' \
    --ticket 'pflz9Kdp' \
    > test.out 2>&1
eval_tap $? 190 'AdminPlatformLinkV3' test.out

#- 191 AdminDeleteUserLinkingHistoryByPlatformIDV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserLinkingHistoryByPlatformIDV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'KIj2MDDJ' \
    --userId '3tCzlTPB' \
    > test.out 2>&1
eval_tap $? 191 'AdminDeleteUserLinkingHistoryByPlatformIDV3' test.out

#- 192 AdminGetThirdPartyPlatformTokenLinkStatusV3
$CLI_EXE \
    --sn iam \
    --op AdminGetThirdPartyPlatformTokenLinkStatusV3 \
    --namespace $AB_NAMESPACE \
    --platformId '2CXwgdEj' \
    --userId 'UyjGgrpJ' \
    --platformToken 'COb15p5p' \
    > test.out 2>&1
eval_tap $? 192 'AdminGetThirdPartyPlatformTokenLinkStatusV3' test.out

#- 193 AdminGetUserSinglePlatformAccount
$CLI_EXE \
    --sn iam \
    --op AdminGetUserSinglePlatformAccount \
    --namespace $AB_NAMESPACE \
    --platformId 'MgyvQSUM' \
    --userId 'hHWQPATN' \
    > test.out 2>&1
eval_tap $? 193 'AdminGetUserSinglePlatformAccount' test.out

#- 194 AdminDeleteUserRolesV3
# body param: body
echo '["qQy4WiST", "qKGfc4LA", "L4QLn68H"]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserRolesV3 \
    --namespace $AB_NAMESPACE \
    --userId 'DfclUM3o' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 194 'AdminDeleteUserRolesV3' test.out

#- 195 AdminSaveUserRoleV3
# body param: body
echo '[{"namespace": "98tAPzki", "roleId": "U6ainzSZ"}, {"namespace": "TcUEoSp5", "roleId": "FxhgR9Kc"}, {"namespace": "R0ZkOg4n", "roleId": "PwFDsv5q"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminSaveUserRoleV3 \
    --namespace $AB_NAMESPACE \
    --userId 'F62P6h78' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 195 'AdminSaveUserRoleV3' test.out

#- 196 AdminAddUserRoleV3
$CLI_EXE \
    --sn iam \
    --op AdminAddUserRoleV3 \
    --namespace $AB_NAMESPACE \
    --roleId 'maRYsCWy' \
    --userId 'pYOWW10l' \
    > test.out 2>&1
eval_tap $? 196 'AdminAddUserRoleV3' test.out

#- 197 AdminDeleteUserRoleV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserRoleV3 \
    --namespace $AB_NAMESPACE \
    --roleId 'LfDoDLM7' \
    --userId 'vomBf6tE' \
    > test.out 2>&1
eval_tap $? 197 'AdminDeleteUserRoleV3' test.out

#- 198 AdminUpdateUserStatusV3
# body param: body
echo '{"enabled": false, "reason": "agGPKmy9"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserStatusV3 \
    --namespace $AB_NAMESPACE \
    --userId 'eVDGm6oE' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 198 'AdminUpdateUserStatusV3' test.out

#- 199 AdminTrustlyUpdateUserIdentity
# body param: body
echo '{"emailAddress": "ySqpLJWQ", "password": "FCFTQ0VR"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminTrustlyUpdateUserIdentity \
    --namespace $AB_NAMESPACE \
    --userId 'Ys1QrOvK' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 199 'AdminTrustlyUpdateUserIdentity' test.out

#- 200 AdminVerifyUserWithoutVerificationCodeV3
$CLI_EXE \
    --sn iam \
    --op AdminVerifyUserWithoutVerificationCodeV3 \
    --namespace $AB_NAMESPACE \
    --userId 'FqlLW4HS' \
    > test.out 2>&1
eval_tap $? 200 'AdminVerifyUserWithoutVerificationCodeV3' test.out

#- 201 AdminUpdateClientSecretV3
# body param: body
echo '{"newSecret": "5fxbVf8B"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateClientSecretV3 \
    --clientId 'g2ItUZaw' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 201 'AdminUpdateClientSecretV3' test.out

#- 202 AdminCheckThirdPartyLoginPlatformAvailabilityV3
$CLI_EXE \
    --sn iam \
    --op AdminCheckThirdPartyLoginPlatformAvailabilityV3 \
    --platformId '7TiiJhad' \
    > test.out 2>&1
eval_tap $? 202 'AdminCheckThirdPartyLoginPlatformAvailabilityV3' test.out

#- 203 AdminGetRolesV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRolesV3 \
    --after 'ioneBsqe' \
    --before 'riIaiVFN' \
    --isWildcard 'true' \
    --limit '36' \
    > test.out 2>&1
eval_tap $? 203 'AdminGetRolesV3' test.out

#- 204 AdminCreateRoleV3
# body param: body
echo '{"adminRole": true, "deletable": true, "isWildcard": true, "managers": [{"displayName": "ZNk1DsgT", "namespace": "JDFlpwJO", "userId": "WnMcsz0X"}, {"displayName": "iRwxJgr6", "namespace": "2Glngwsj", "userId": "UzWYI4v6"}, {"displayName": "RSsTPQ5b", "namespace": "XtMqeKT0", "userId": "4h2t00hK"}], "members": [{"displayName": "2pYqVBxk", "namespace": "uE5ut3oj", "userId": "q95iuD0K"}, {"displayName": "S8exKv1s", "namespace": "Q1id63Wx", "userId": "W5HdDdox"}, {"displayName": "QrfxtoFm", "namespace": "ib2NNUbK", "userId": "8Onntbiu"}], "permissions": [{"action": 5, "resource": "BgXO3inX", "schedAction": 93, "schedCron": "x6USkKE3", "schedRange": ["GcAlsjOx", "bYbOHWRh", "HvLK7b5A"]}, {"action": 99, "resource": "D1hHAJm9", "schedAction": 87, "schedCron": "aA0qGG4Z", "schedRange": ["aZ0pWwn8", "7RhG51jd", "mQ9vKrCL"]}, {"action": 97, "resource": "fFs4kp4i", "schedAction": 77, "schedCron": "s1IpumC2", "schedRange": ["h8bu15te", "ZyVRpy17", "m7ixkKJ2"]}], "roleName": "WsR87sRy"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminCreateRoleV3 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 204 'AdminCreateRoleV3' test.out

#- 205 AdminGetRoleV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleV3 \
    --roleId '2im3h4t5' \
    > test.out 2>&1
eval_tap $? 205 'AdminGetRoleV3' test.out

#- 206 AdminDeleteRoleV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteRoleV3 \
    --roleId 'c4TPwlkd' \
    > test.out 2>&1
eval_tap $? 206 'AdminDeleteRoleV3' test.out

#- 207 AdminUpdateRoleV3
# body param: body
echo '{"deletable": false, "isWildcard": true, "roleName": "4n95wdnV"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateRoleV3 \
    --roleId 'O1M4kW5g' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 207 'AdminUpdateRoleV3' test.out

#- 208 AdminGetRoleAdminStatusV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleAdminStatusV3 \
    --roleId 'ZCy7B5mx' \
    > test.out 2>&1
eval_tap $? 208 'AdminGetRoleAdminStatusV3' test.out

#- 209 AdminUpdateAdminRoleStatusV3
$CLI_EXE \
    --sn iam \
    --op AdminUpdateAdminRoleStatusV3 \
    --roleId 'v0wk2wOP' \
    > test.out 2>&1
eval_tap $? 209 'AdminUpdateAdminRoleStatusV3' test.out

#- 210 AdminRemoveRoleAdminV3
$CLI_EXE \
    --sn iam \
    --op AdminRemoveRoleAdminV3 \
    --roleId 'sfTVW8C6' \
    > test.out 2>&1
eval_tap $? 210 'AdminRemoveRoleAdminV3' test.out

#- 211 AdminGetRoleManagersV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleManagersV3 \
    --roleId 'fLEAybkY' \
    --after 'KXgD8vou' \
    --before 'U8Tsyp95' \
    --limit '19' \
    > test.out 2>&1
eval_tap $? 211 'AdminGetRoleManagersV3' test.out

#- 212 AdminAddRoleManagersV3
# body param: body
echo '{"managers": [{"displayName": "7QQ6DE1C", "namespace": "zADt0kSl", "userId": "X2llaW5m"}, {"displayName": "z2NodCo6", "namespace": "6UaRPVD1", "userId": "byZNzhqK"}, {"displayName": "bB4BiCwt", "namespace": "8SrAaDFs", "userId": "R7Aq6GpI"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddRoleManagersV3 \
    --roleId 'PQNorkDj' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 212 'AdminAddRoleManagersV3' test.out

#- 213 AdminRemoveRoleManagersV3
# body param: body
echo '{"managers": [{"displayName": "0dyEmBkz", "namespace": "yCtqv5XO", "userId": "0NHQUZmX"}, {"displayName": "ipeheHJo", "namespace": "w2N5vL67", "userId": "u9qoBYSq"}, {"displayName": "BnYkNhFF", "namespace": "zNxI0e27", "userId": "7OxkYk4H"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminRemoveRoleManagersV3 \
    --roleId 's8sBsbOl' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 213 'AdminRemoveRoleManagersV3' test.out

#- 214 AdminGetRoleMembersV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleMembersV3 \
    --roleId 'vwilafNp' \
    --after '29MNgSaq' \
    --before '5ERSQNaz' \
    --limit '34' \
    > test.out 2>&1
eval_tap $? 214 'AdminGetRoleMembersV3' test.out

#- 215 AdminAddRoleMembersV3
# body param: body
echo '{"members": [{"displayName": "21OAkiMC", "namespace": "ZPaC4WTc", "userId": "VIHfinJB"}, {"displayName": "hNXPhUY9", "namespace": "Q9apa5PK", "userId": "UZSHO4dZ"}, {"displayName": "LmqUXvxF", "namespace": "VrfrzzWg", "userId": "syhhKZYu"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddRoleMembersV3 \
    --roleId 'GEbbPiWR' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 215 'AdminAddRoleMembersV3' test.out

#- 216 AdminRemoveRoleMembersV3
# body param: body
echo '{"members": [{"displayName": "cFeiWA2I", "namespace": "K5fBG9Ze", "userId": "4NDUQ7cD"}, {"displayName": "kfmgnQXc", "namespace": "Zncvi3tU", "userId": "osIepvXu"}, {"displayName": "txBkz5ve", "namespace": "TLlkYRek", "userId": "vDDnR3Z1"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminRemoveRoleMembersV3 \
    --roleId 'ORntpREO' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 216 'AdminRemoveRoleMembersV3' test.out

#- 217 AdminUpdateRolePermissionsV3
# body param: body
echo '{"permissions": [{"action": 59, "resource": "NdUr9EZD", "schedAction": 53, "schedCron": "dBlOhvYo", "schedRange": ["zJqklFbx", "r2Ni2aHG", "aSniENhL"]}, {"action": 55, "resource": "o2JP7pbK", "schedAction": 6, "schedCron": "zFiUNPjJ", "schedRange": ["iEeJfyVJ", "JPWvTlte", "7FvNhQJO"]}, {"action": 77, "resource": "puXB1rn9", "schedAction": 13, "schedCron": "rIfhBRds", "schedRange": ["CeH2Lk3v", "sLK0Z4hR", "gh8sbhzy"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateRolePermissionsV3 \
    --roleId 'BQCX7izD' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 217 'AdminUpdateRolePermissionsV3' test.out

#- 218 AdminAddRolePermissionsV3
# body param: body
echo '{"permissions": [{"action": 58, "resource": "1KofDl1e", "schedAction": 77, "schedCron": "Uy0UZnZP", "schedRange": ["sbh3bQxG", "YHScneQt", "6YTiGTRM"]}, {"action": 32, "resource": "J6BRhlMm", "schedAction": 65, "schedCron": "J74jOFbc", "schedRange": ["tmysHaKp", "Q17jWPtt", "NZOXAWwy"]}, {"action": 9, "resource": "j3Fu2Vtl", "schedAction": 93, "schedCron": "8cSrEEbS", "schedRange": ["d3hOy4fK", "OqwZIjOf", "ik7F946F"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddRolePermissionsV3 \
    --roleId 'Rtvu7ecI' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 218 'AdminAddRolePermissionsV3' test.out

#- 219 AdminDeleteRolePermissionsV3
# body param: body
echo '["gXpF3Inv", "o6HMKsCd", "inbnV684"]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDeleteRolePermissionsV3 \
    --roleId 'JbP5gxnd' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 219 'AdminDeleteRolePermissionsV3' test.out

#- 220 AdminDeleteRolePermissionV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteRolePermissionV3 \
    --action '93' \
    --resource 'JcreJzXw' \
    --roleId 'oxAZ9yNs' \
    > test.out 2>&1
eval_tap $? 220 'AdminDeleteRolePermissionV3' test.out

#- 221 AdminGetMyUserV3
$CLI_EXE \
    --sn iam \
    --op AdminGetMyUserV3 \
    > test.out 2>&1
eval_tap $? 221 'AdminGetMyUserV3' test.out

#- 222 UserAuthenticationV3
$CLI_EXE \
    --sn iam \
    --op UserAuthenticationV3 \
    --client_id 'VGvtQK04' \
    --extend_exp 'false' \
    --redirect_uri '71KKSwO1' \
    --password 'D4RQOPyf' \
    --request_id 'N7gnAuW5' \
    --user_name 'CI5RkF9f' \
    > test.out 2>&1
eval_tap $? 222 'UserAuthenticationV3' test.out

#- 223 AuthenticationWithPlatformLinkV3
$CLI_EXE \
    --sn iam \
    --op AuthenticationWithPlatformLinkV3 \
    --extend_exp 'true' \
    --client_id 'ncSkg9bC' \
    --linkingToken 'BGcq5L4A' \
    --password 'ItHlztC6' \
    --username 'zwuJPSZq' \
    > test.out 2>&1
eval_tap $? 223 'AuthenticationWithPlatformLinkV3' test.out

#- 224 GenerateTokenByNewHeadlessAccountV3
$CLI_EXE \
    --sn iam \
    --op GenerateTokenByNewHeadlessAccountV3 \
    --additionalData 'L9rlEykb' \
    --extend_exp 'true' \
    --linkingToken 'jP5h7IBd' \
    > test.out 2>&1
eval_tap $? 224 'GenerateTokenByNewHeadlessAccountV3' test.out

#- 225 RequestOneTimeLinkingCodeV3
$CLI_EXE \
    --sn iam \
    --op RequestOneTimeLinkingCodeV3 \
    --platformId '68IIlk8k' \
    > test.out 2>&1
eval_tap $? 225 'RequestOneTimeLinkingCodeV3' test.out

#- 226 ValidateOneTimeLinkingCodeV3
$CLI_EXE \
    --sn iam \
    --op ValidateOneTimeLinkingCodeV3 \
    --oneTimeLinkCode 'A74HJpOV' \
    > test.out 2>&1
eval_tap $? 226 'ValidateOneTimeLinkingCodeV3' test.out

#- 227 RequestTokenByOneTimeLinkCodeResponseV3
$CLI_EXE \
    --sn iam \
    --op RequestTokenByOneTimeLinkCodeResponseV3 \
    --additionalData 'dQM4pIcn' \
    --isTransient 'false' \
    --client_id '0Wq65lhp' \
    --oneTimeLinkCode 'y35NQmeq' \
    > test.out 2>&1
eval_tap $? 227 'RequestTokenByOneTimeLinkCodeResponseV3' test.out

#- 228 GetCountryLocationV3
$CLI_EXE \
    --sn iam \
    --op GetCountryLocationV3 \
    > test.out 2>&1
eval_tap $? 228 'GetCountryLocationV3' test.out

#- 229 Logout
$CLI_EXE \
    --sn iam \
    --op Logout \
    > test.out 2>&1
eval_tap $? 229 'Logout' test.out

#- 230 RequestTokenExchangeCodeV3
$CLI_EXE \
    --sn iam \
    --op RequestTokenExchangeCodeV3 \
    --namespace $AB_NAMESPACE \
    --codeChallenge '9xZ3DcW6' \
    --codeChallengeMethod 'plain' \
    --client_id 'VVJxZl7L' \
    > test.out 2>&1
eval_tap $? 230 'RequestTokenExchangeCodeV3' test.out

#- 231 AdminRetrieveUserThirdPartyPlatformTokenV3
$CLI_EXE \
    --sn iam \
    --op AdminRetrieveUserThirdPartyPlatformTokenV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'T2k0EoTJ' \
    --userId 'XhAknKm1' \
    --platformUserId 'WqfbJDA7' \
    > test.out 2>&1
eval_tap $? 231 'AdminRetrieveUserThirdPartyPlatformTokenV3' test.out

#- 232 RevokeUserV3
$CLI_EXE \
    --sn iam \
    --op RevokeUserV3 \
    --namespace $AB_NAMESPACE \
    --userId 'ZXyNuz9I' \
    --includeGameNamespace 'false' \
    > test.out 2>&1
eval_tap $? 232 'RevokeUserV3' test.out

#- 233 AuthorizeV3
$CLI_EXE \
    --sn iam \
    --op AuthorizeV3 \
    --codeChallenge 'PP7PnZX6' \
    --codeChallengeMethod 'S256' \
    --createHeadless 'false' \
    --oneTimeLinkCode 'kBgv1c8c' \
    --redirectUri 'rkkhgYdx' \
    --scope 'k79LGgb2' \
    --state 'vKCT45jn' \
    --targetAuthPage '9UqK0C63' \
    --useRedirectUriAsLoginUrlWhenLocked 'false' \
    --clientId 'KjGAkDHz' \
    --responseType 'code' \
    > test.out 2>&1
eval_tap $? 233 'AuthorizeV3' test.out

#- 234 TokenIntrospectionV3
$CLI_EXE \
    --sn iam \
    --op TokenIntrospectionV3 \
    --token 'g4IcNwk8' \
    > test.out 2>&1
eval_tap $? 234 'TokenIntrospectionV3' test.out

#- 235 GetJWKSV3
$CLI_EXE \
    --sn iam \
    --op GetJWKSV3 \
    > test.out 2>&1
eval_tap $? 235 'GetJWKSV3' test.out

#- 236 SendMFAAuthenticationCode
$CLI_EXE \
    --sn iam \
    --op SendMFAAuthenticationCode \
    --clientId 'sgR5sGcD' \
    --factor 'BBT00CB2' \
    --mfaToken 'O47N0yAl' \
    > test.out 2>&1
eval_tap $? 236 'SendMFAAuthenticationCode' test.out

#- 237 Change2faMethod
$CLI_EXE \
    --sn iam \
    --op Change2faMethod \
    --factor 'diP8dxhD' \
    --mfaToken 'RTiFbkiB' \
    > test.out 2>&1
eval_tap $? 237 'Change2faMethod' test.out

#- 238 Verify2faCode
$CLI_EXE \
    --sn iam \
    --op Verify2faCode \
    --code 'SCfIFCQh' \
    --factor 'DB2sczKD' \
    --mfaToken 'obwYUB0D' \
    --rememberDevice 'false' \
    > test.out 2>&1
eval_tap $? 238 'Verify2faCode' test.out

#- 239 RetrieveUserThirdPartyPlatformTokenV3
$CLI_EXE \
    --sn iam \
    --op RetrieveUserThirdPartyPlatformTokenV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'zoLr6VCw' \
    --userId 'h0C4TcBc' \
    > test.out 2>&1
eval_tap $? 239 'RetrieveUserThirdPartyPlatformTokenV3' test.out

#- 240 AuthCodeRequestV3
$CLI_EXE \
    --sn iam \
    --op AuthCodeRequestV3 \
    --platformId 'jN9j6xFD' \
    --clientId 'zGXmjhba' \
    --redirectUri '7joRav0Q' \
    --requestId 'IpD10VA3' \
    > test.out 2>&1
eval_tap $? 240 'AuthCodeRequestV3' test.out

#- 241 PlatformTokenGrantV3
$CLI_EXE \
    --sn iam \
    --op PlatformTokenGrantV3 \
    --platformId 'ank8EcW3' \
    --additionalData 'L6XQnUT3' \
    --client_id 'JjbIoeg2' \
    --createHeadless 'false' \
    --device_id 'vaxwLBkE' \
    --macAddress 'eF2Pw0D9' \
    --platform_token 'rbjn6eyQ' \
    --serviceLabel '0.6792011129360154' \
    --skipSetCookie 'true' \
    > test.out 2>&1
eval_tap $? 241 'PlatformTokenGrantV3' test.out

#- 242 GetRevocationListV3
$CLI_EXE \
    --sn iam \
    --op GetRevocationListV3 \
    > test.out 2>&1
eval_tap $? 242 'GetRevocationListV3' test.out

#- 243 TokenRevocationV3
$CLI_EXE \
    --sn iam \
    --op TokenRevocationV3 \
    --token 'MlIOkdPh' \
    > test.out 2>&1
eval_tap $? 243 'TokenRevocationV3' test.out

#- 244 SimultaneousLoginV3
$CLI_EXE \
    --sn iam \
    --op SimultaneousLoginV3 \
    --simultaneousPlatform 'wqqjcKsD' \
    --simultaneousTicket '1P4IPpHO' \
    --nativePlatform 'steam' \
    --nativePlatformTicket 'BGopYIqL' \
    > test.out 2>&1
eval_tap $? 244 'SimultaneousLoginV3' test.out

#- 245 TokenGrantV3
$CLI_EXE \
    --sn iam \
    --op TokenGrantV3 \
    --additionalData 'p03jsjmP' \
    --client_id 'csE9EIpc' \
    --client_secret 'ny7WAyMX' \
    --code 'SuEEJ0BH' \
    --code_verifier 'zKNQPOs3' \
    --extendNamespace '0mxx8Va7' \
    --extend_exp 'true' \
    --password 'PxqvzeEc' \
    --redirect_uri 'LaM6LXMC' \
    --refresh_token '4XbG6Uq7' \
    --username 'E84pASkY' \
    --grant_type 'urn:ietf:params:oauth:grant-type:extend_client_credentials' \
    > test.out 2>&1
eval_tap $? 245 'TokenGrantV3' test.out

#- 246 VerifyTokenV3
$CLI_EXE \
    --sn iam \
    --op VerifyTokenV3 \
    --token 'wjpaSM5x' \
    > test.out 2>&1
eval_tap $? 246 'VerifyTokenV3' test.out

#- 247 PlatformAuthenticationV3
$CLI_EXE \
    --sn iam \
    --op PlatformAuthenticationV3 \
    --platformId 'ozryD475' \
    --code 'ZXnA0N42' \
    --error 'VT5wYIbJ' \
    --openidAssocHandle 'HFPYdsRA' \
    --openidClaimedId 'yUDTVyAt' \
    --openidIdentity 'zrwfKXeO' \
    --openidMode 'OGDuXED3' \
    --openidNs 'wkoWP5Nh' \
    --openidOpEndpoint 'Hdpl6q3E' \
    --openidResponseNonce 'mbzy3fkM' \
    --openidReturnTo 'UyhPUIF5' \
    --openidSig 'Yo52EgIe' \
    --openidSigned 'UitvDkqM' \
    --state 'OItbyJTA' \
    > test.out 2>&1
eval_tap $? 247 'PlatformAuthenticationV3' test.out

#- 248 PlatformTokenRefreshV3
$CLI_EXE \
    --sn iam \
    --op PlatformTokenRefreshV3 \
    --platformId 'LEkRQab7' \
    --platform_token '90b7Hlkh' \
    > test.out 2>&1
eval_tap $? 248 'PlatformTokenRefreshV3' test.out

#- 249 PublicGetInputValidations
$CLI_EXE \
    --sn iam \
    --op PublicGetInputValidations \
    --defaultOnEmpty 'false' \
    --languageCode 'fHF0OwkH' \
    > test.out 2>&1
eval_tap $? 249 'PublicGetInputValidations' test.out

#- 250 PublicGetInputValidationByField
$CLI_EXE \
    --sn iam \
    --op PublicGetInputValidationByField \
    --field 'lsDatmoI' \
    > test.out 2>&1
eval_tap $? 250 'PublicGetInputValidationByField' test.out

#- 251 PublicGetCountryAgeRestrictionV3
$CLI_EXE \
    --sn iam \
    --op PublicGetCountryAgeRestrictionV3 \
    --countryCode 'dpJoynka' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 251 'PublicGetCountryAgeRestrictionV3' test.out

#- 252 PublicGetConfigValueV3
$CLI_EXE \
    --sn iam \
    --op PublicGetConfigValueV3 \
    --configKey 'kodmNAej' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 252 'PublicGetConfigValueV3' test.out

#- 253 PublicGetCountryListV3
$CLI_EXE \
    --sn iam \
    --op PublicGetCountryListV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 253 'PublicGetCountryListV3' test.out

#- 254 RetrieveAllActiveThirdPartyLoginPlatformCredentialPublicV3
$CLI_EXE \
    --sn iam \
    --op RetrieveAllActiveThirdPartyLoginPlatformCredentialPublicV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 254 'RetrieveAllActiveThirdPartyLoginPlatformCredentialPublicV3' test.out

#- 255 RetrieveActiveOIDCClientsPublicV3
$CLI_EXE \
    --sn iam \
    --op RetrieveActiveOIDCClientsPublicV3 \
    --namespace $AB_NAMESPACE \
    --clientId 'e4eAfJzg' \
    > test.out 2>&1
eval_tap $? 255 'RetrieveActiveOIDCClientsPublicV3' test.out

#- 256 PublicListUserIDByPlatformUserIDsV3
eval_tap 0 256 'PublicListUserIDByPlatformUserIDsV3 # SKIP deprecated' test.out

#- 257 PublicGetUserByPlatformUserIDV3
$CLI_EXE \
    --sn iam \
    --op PublicGetUserByPlatformUserIDV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'ibGsTfm9' \
    --platformUserId '8ixNPOfv' \
    > test.out 2>&1
eval_tap $? 257 'PublicGetUserByPlatformUserIDV3' test.out

#- 258 PublicGetAsyncStatus
$CLI_EXE \
    --sn iam \
    --op PublicGetAsyncStatus \
    --namespace $AB_NAMESPACE \
    --requestId 'laGeVjnQ' \
    > test.out 2>&1
eval_tap $? 258 'PublicGetAsyncStatus' test.out

#- 259 PublicSearchUserV3
$CLI_EXE \
    --sn iam \
    --op PublicSearchUserV3 \
    --namespace $AB_NAMESPACE \
    --by 'D4EkaEhB' \
    --limit '59' \
    --offset '63' \
    --platformBy '5fWheD6S' \
    --platformId 'Iqql0yeE' \
    --query 'itQD09bJ' \
    > test.out 2>&1
eval_tap $? 259 'PublicSearchUserV3' test.out

#- 260 PublicCreateUserV3
# body param: body
echo '{"PasswordMD5Sum": "nZCmOVJi", "acceptedPolicies": [{"isAccepted": false, "localizedPolicyVersionId": "WgtEqlKn", "policyId": "2LXJ9nEF", "policyVersionId": "degfOjU8"}, {"isAccepted": false, "localizedPolicyVersionId": "nYEPAfSu", "policyId": "xqt14RoH", "policyVersionId": "d2jvW8iN"}, {"isAccepted": true, "localizedPolicyVersionId": "jzkvAAkG", "policyId": "1UzzpyGE", "policyVersionId": "Rv1hfeHl"}], "authType": "lfCbQ0ot", "code": "HCWN2T5j", "country": "ymHmjtCp", "dateOfBirth": "PRKb6c1i", "displayName": "EDio7syP", "emailAddress": "t8U4PdPy", "password": "5Zl9asWv", "reachMinimumAge": false, "uniqueDisplayName": "SDVx5hYu"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicCreateUserV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 260 'PublicCreateUserV3' test.out

#- 261 CheckUserAvailability
$CLI_EXE \
    --sn iam \
    --op CheckUserAvailability \
    --namespace $AB_NAMESPACE \
    --field '5FDQVnOF' \
    --query 'zKGUulwi' \
    > test.out 2>&1
eval_tap $? 261 'CheckUserAvailability' test.out

#- 262 PublicBulkGetUsers
# body param: body
echo '{"userIds": ["nYU6VaTY", "mV2p8fc9", "M9Y4XOoO"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicBulkGetUsers \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 262 'PublicBulkGetUsers' test.out

#- 263 PublicSendRegistrationCode
# body param: body
echo '{"emailAddress": "1WpK5Ihv", "languageTag": "VWedxAqh"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicSendRegistrationCode \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 263 'PublicSendRegistrationCode' test.out

#- 264 PublicVerifyRegistrationCode
# body param: body
echo '{"code": "V2PpTvGi", "emailAddress": "mEe59JIV"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicVerifyRegistrationCode \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 264 'PublicVerifyRegistrationCode' test.out

#- 265 PublicForgotPasswordV3
# body param: body
echo '{"emailAddress": "5ovgSUy4", "languageTag": "fywaHUeW"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicForgotPasswordV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 265 'PublicForgotPasswordV3' test.out

#- 266 PublicValidateUserInput
# body param: body
echo '{"displayName": "5v7SpqxL", "uniqueDisplayName": "GqqT0zW6", "username": "mqVj0FnW"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicValidateUserInput \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 266 'PublicValidateUserInput' test.out

#- 267 GetAdminInvitationV3
$CLI_EXE \
    --sn iam \
    --op GetAdminInvitationV3 \
    --invitationId 'UHH2HTiJ' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 267 'GetAdminInvitationV3' test.out

#- 268 CreateUserFromInvitationV3
# body param: body
echo '{"PasswordMD5Sum": "OqebPCa8", "acceptedPolicies": [{"isAccepted": false, "localizedPolicyVersionId": "BxBvfVgi", "policyId": "7K6J8LRx", "policyVersionId": "5hgHgwx9"}, {"isAccepted": false, "localizedPolicyVersionId": "ymZpHiwg", "policyId": "05OfyxoG", "policyVersionId": "QXtwnhez"}, {"isAccepted": true, "localizedPolicyVersionId": "BMHEpSbX", "policyId": "GWv3h3Zp", "policyVersionId": "gpND2oIm"}], "authType": "67ehdXV6", "code": "feRCxDOp", "country": "55feQVvF", "dateOfBirth": "yyJYmpnM", "displayName": "sJFaD0SQ", "emailAddress": "GeTZnQbU", "password": "eIoM2jyF", "reachMinimumAge": false, "uniqueDisplayName": "HGZNZ8wZ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op CreateUserFromInvitationV3 \
    --invitationId 'X2m2tzAZ' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 268 'CreateUserFromInvitationV3' test.out

#- 269 UpdateUserV3
# body param: body
echo '{"avatarUrl": "ord7X7q3", "country": "wWOC6ZHq", "dateOfBirth": "ksfyUlbw", "displayName": "F444NwUf", "languageTag": "AWVJRTCn", "uniqueDisplayName": "QFhL14V2", "userName": "gvITvhbJ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op UpdateUserV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 269 'UpdateUserV3' test.out

#- 270 PublicPartialUpdateUserV3
# body param: body
echo '{"avatarUrl": "plMXQNot", "country": "P8QcVP9Z", "dateOfBirth": "ZS2ckDSP", "displayName": "he8NgF6f", "languageTag": "GAKNd2Ra", "uniqueDisplayName": "LYHAKU9s", "userName": "CvDm2M7s"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicPartialUpdateUserV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 270 'PublicPartialUpdateUserV3' test.out

#- 271 PublicSendVerificationCodeV3
# body param: body
echo '{"context": "oyNtVTZN", "emailAddress": "6SXK8HiS", "languageTag": "Pzf8VRuX"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicSendVerificationCodeV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 271 'PublicSendVerificationCodeV3' test.out

#- 272 PublicUserVerificationV3
# body param: body
echo '{"code": "5izxjNRy", "contactType": "kJiuixu9", "languageTag": "YOuhBtJ0", "validateOnly": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUserVerificationV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 272 'PublicUserVerificationV3' test.out

#- 273 PublicUpgradeHeadlessAccountV3
# body param: body
echo '{"code": "zGkBQNx7", "country": "y9tnouGm", "dateOfBirth": "TSYjyP4a", "displayName": "wowYGdZ0", "emailAddress": "VbSbfY5l", "password": "mmDJ8YNC", "uniqueDisplayName": "3HJMMv5W", "validateOnly": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpgradeHeadlessAccountV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 273 'PublicUpgradeHeadlessAccountV3' test.out

#- 274 PublicVerifyHeadlessAccountV3
# body param: body
echo '{"emailAddress": "y4iT7PgO", "password": "WADilLci"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicVerifyHeadlessAccountV3 \
    --namespace $AB_NAMESPACE \
    --needVerificationCode 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 274 'PublicVerifyHeadlessAccountV3' test.out

#- 275 PublicUpdatePasswordV3
# body param: body
echo '{"languageTag": "oJFMLzRq", "mfaToken": "RbrrWZi4", "newPassword": "tybpqxeE", "oldPassword": "ZmCE25b1"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpdatePasswordV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 275 'PublicUpdatePasswordV3' test.out

#- 276 PublicCreateJusticeUser
$CLI_EXE \
    --sn iam \
    --op PublicCreateJusticeUser \
    --namespace $AB_NAMESPACE \
    --targetNamespace 'MXMZWa3E' \
    > test.out 2>&1
eval_tap $? 276 'PublicCreateJusticeUser' test.out

#- 277 PublicPlatformLinkV3
$CLI_EXE \
    --sn iam \
    --op PublicPlatformLinkV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'KppEUBCI' \
    --redirectUri 'I2mlrEkU' \
    --ticket '3rrZD5Rh' \
    > test.out 2>&1
eval_tap $? 277 'PublicPlatformLinkV3' test.out

#- 278 PublicPlatformUnlinkV3
# body param: body
echo '{"platformNamespace": "y2GXiRbg"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicPlatformUnlinkV3 \
    --namespace $AB_NAMESPACE \
    --platformId '91o9rrQv' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 278 'PublicPlatformUnlinkV3' test.out

#- 279 PublicPlatformUnlinkAllV3
$CLI_EXE \
    --sn iam \
    --op PublicPlatformUnlinkAllV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'WKRI8Zfm' \
    > test.out 2>&1
eval_tap $? 279 'PublicPlatformUnlinkAllV3' test.out

#- 280 PublicForcePlatformLinkV3
$CLI_EXE \
    --sn iam \
    --op PublicForcePlatformLinkV3 \
    --namespace $AB_NAMESPACE \
    --platformId '6w2whtjv' \
    --ticket 'svrOk4o0' \
    > test.out 2>&1
eval_tap $? 280 'PublicForcePlatformLinkV3' test.out

#- 281 PublicWebLinkPlatform
$CLI_EXE \
    --sn iam \
    --op PublicWebLinkPlatform \
    --namespace $AB_NAMESPACE \
    --platformId 'kBd5iG8Z' \
    --clientId 'bvfiptDL' \
    --redirectUri 'GV5uNsUD' \
    > test.out 2>&1
eval_tap $? 281 'PublicWebLinkPlatform' test.out

#- 282 PublicWebLinkPlatformEstablish
$CLI_EXE \
    --sn iam \
    --op PublicWebLinkPlatformEstablish \
    --namespace $AB_NAMESPACE \
    --platformId '2aXXSWnv' \
    --code 'J1FdkVzV' \
    --state 'r44LjXPP' \
    > test.out 2>&1
eval_tap $? 282 'PublicWebLinkPlatformEstablish' test.out

#- 283 PublicProcessWebLinkPlatformV3
$CLI_EXE \
    --sn iam \
    --op PublicProcessWebLinkPlatformV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'NI28NQ8u' \
    --code '5qazhXxO' \
    --state 'FPU1N0vl' \
    > test.out 2>&1
eval_tap $? 283 'PublicProcessWebLinkPlatformV3' test.out

#- 284 PublicGetUsersPlatformInfosV3
# body param: body
echo '{"platformId": "mKrR5RkM", "userIds": ["VYVOrgbz", "VsvgF4en", "3ZQYoQM9"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicGetUsersPlatformInfosV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 284 'PublicGetUsersPlatformInfosV3' test.out

#- 285 ResetPasswordV3
# body param: body
echo '{"code": "mnietnUU", "emailAddress": "SWq5XrnJ", "newPassword": "2CAUoFTZ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op ResetPasswordV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 285 'ResetPasswordV3' test.out

#- 286 PublicGetUserByUserIdV3
eval_tap 0 286 'PublicGetUserByUserIdV3 # SKIP deprecated' test.out

#- 287 PublicGetUserBanHistoryV3
$CLI_EXE \
    --sn iam \
    --op PublicGetUserBanHistoryV3 \
    --namespace $AB_NAMESPACE \
    --userId '8HAtGM3J' \
    --activeOnly 'false' \
    --after 'cvPSTCJh' \
    --before 'arbikOGo' \
    --limit '48' \
    > test.out 2>&1
eval_tap $? 287 'PublicGetUserBanHistoryV3' test.out

#- 288 PublicListUserAllPlatformAccountsDistinctV3
$CLI_EXE \
    --sn iam \
    --op PublicListUserAllPlatformAccountsDistinctV3 \
    --namespace $AB_NAMESPACE \
    --userId 'nSv1Ls3m' \
    > test.out 2>&1
eval_tap $? 288 'PublicListUserAllPlatformAccountsDistinctV3' test.out

#- 289 PublicGetUserInformationV3
$CLI_EXE \
    --sn iam \
    --op PublicGetUserInformationV3 \
    --namespace $AB_NAMESPACE \
    --userId 'bPjAiNnN' \
    > test.out 2>&1
eval_tap $? 289 'PublicGetUserInformationV3' test.out

#- 290 PublicGetUserLoginHistoriesV3
$CLI_EXE \
    --sn iam \
    --op PublicGetUserLoginHistoriesV3 \
    --namespace $AB_NAMESPACE \
    --userId 'Zde5OzK2' \
    --after '0.003273125127770893' \
    --before '0.36285928127979317' \
    --limit '60' \
    > test.out 2>&1
eval_tap $? 290 'PublicGetUserLoginHistoriesV3' test.out

#- 291 PublicGetUserPlatformAccountsV3
$CLI_EXE \
    --sn iam \
    --op PublicGetUserPlatformAccountsV3 \
    --namespace $AB_NAMESPACE \
    --userId 'IwK6WIOD' \
    --after 'iZVhrvr8' \
    --before 'HQe2guy2' \
    --limit '59' \
    --platformId 'KEw9RDeP' \
    > test.out 2>&1
eval_tap $? 291 'PublicGetUserPlatformAccountsV3' test.out

#- 292 PublicListJusticePlatformAccountsV3
$CLI_EXE \
    --sn iam \
    --op PublicListJusticePlatformAccountsV3 \
    --namespace $AB_NAMESPACE \
    --userId 'ZZdEshg9' \
    > test.out 2>&1
eval_tap $? 292 'PublicListJusticePlatformAccountsV3' test.out

#- 293 PublicLinkPlatformAccount
# body param: body
echo '{"platformId": "gygZ60K4", "platformUserId": "UzfMQTdL"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicLinkPlatformAccount \
    --namespace $AB_NAMESPACE \
    --userId 'nkVrReNj' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 293 'PublicLinkPlatformAccount' test.out

#- 294 PublicForceLinkPlatformWithProgression
# body param: body
echo '{"chosenNamespaces": ["a2qlXOiQ", "GwSQgEwp", "ARQwopvS"], "requestId": "pQIKWfRv"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicForceLinkPlatformWithProgression \
    --namespace $AB_NAMESPACE \
    --userId 'C8l596Zd' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 294 'PublicForceLinkPlatformWithProgression' test.out

#- 295 PublicGetPublisherUserV3
$CLI_EXE \
    --sn iam \
    --op PublicGetPublisherUserV3 \
    --namespace $AB_NAMESPACE \
    --userId 'XmFa3r1M' \
    > test.out 2>&1
eval_tap $? 295 'PublicGetPublisherUserV3' test.out

#- 296 PublicValidateUserByUserIDAndPasswordV3
$CLI_EXE \
    --sn iam \
    --op PublicValidateUserByUserIDAndPasswordV3 \
    --namespace $AB_NAMESPACE \
    --userId 'Vaginegl' \
    --password 'zSXW5nDG' \
    > test.out 2>&1
eval_tap $? 296 'PublicValidateUserByUserIDAndPasswordV3' test.out

#- 297 PublicGetRolesV3
$CLI_EXE \
    --sn iam \
    --op PublicGetRolesV3 \
    --after 'ccnXVpdw' \
    --before 'M8cYTLQ3' \
    --isWildcard 'true' \
    --limit '41' \
    > test.out 2>&1
eval_tap $? 297 'PublicGetRolesV3' test.out

#- 298 PublicGetRoleV3
$CLI_EXE \
    --sn iam \
    --op PublicGetRoleV3 \
    --roleId 'DiS1cnBy' \
    > test.out 2>&1
eval_tap $? 298 'PublicGetRoleV3' test.out

#- 299 PublicGetMyUserV3
$CLI_EXE \
    --sn iam \
    --op PublicGetMyUserV3 \
    --includeAllPlatforms 'true' \
    > test.out 2>&1
eval_tap $? 299 'PublicGetMyUserV3' test.out

#- 300 PublicGetLinkHeadlessAccountToMyAccountConflictV3
$CLI_EXE \
    --sn iam \
    --op PublicGetLinkHeadlessAccountToMyAccountConflictV3 \
    --oneTimeLinkCode '6fuGl93R' \
    > test.out 2>&1
eval_tap $? 300 'PublicGetLinkHeadlessAccountToMyAccountConflictV3' test.out

#- 301 LinkHeadlessAccountToMyAccountV3
# body param: body
echo '{"chosenNamespaces": ["ZIEwi1M1", "dTtMuq2p", "vp4P1v6D"], "oneTimeLinkCode": "i8pyWMPb"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op LinkHeadlessAccountToMyAccountV3 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 301 'LinkHeadlessAccountToMyAccountV3' test.out

#- 302 PublicSendVerificationLinkV3
# body param: body
echo '{"languageTag": "r144MNLe"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicSendVerificationLinkV3 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 302 'PublicSendVerificationLinkV3' test.out

#- 303 PublicVerifyUserByLinkV3
$CLI_EXE \
    --sn iam \
    --op PublicVerifyUserByLinkV3 \
    --code 'Jc3OFhuP' \
    > test.out 2>&1
eval_tap $? 303 'PublicVerifyUserByLinkV3' test.out

#- 304 PlatformAuthenticateSAMLV3Handler
$CLI_EXE \
    --sn iam \
    --op PlatformAuthenticateSAMLV3Handler \
    --platformId 'UDSuPzi7' \
    --code '63UZmROV' \
    --error 'd2zdUrPe' \
    --state 'iBIs2NMi' \
    > test.out 2>&1
eval_tap $? 304 'PlatformAuthenticateSAMLV3Handler' test.out

#- 305 LoginSSOClient
$CLI_EXE \
    --sn iam \
    --op LoginSSOClient \
    --platformId '7kMUYhUk' \
    --payload 'jk6Ug6P5' \
    > test.out 2>&1
eval_tap $? 305 'LoginSSOClient' test.out

#- 306 LogoutSSOClient
$CLI_EXE \
    --sn iam \
    --op LogoutSSOClient \
    --platformId 'BC6RYUH8' \
    > test.out 2>&1
eval_tap $? 306 'LogoutSSOClient' test.out

#- 307 RequestTargetTokenResponseV3
$CLI_EXE \
    --sn iam \
    --op RequestTargetTokenResponseV3 \
    --additionalData 'ZloC8y9H' \
    --code 'owde5tLs' \
    > test.out 2>&1
eval_tap $? 307 'RequestTargetTokenResponseV3' test.out

#- 308 AdminListInvitationHistoriesV4
$CLI_EXE \
    --sn iam \
    --op AdminListInvitationHistoriesV4 \
    --limit '19' \
    --namespace_ 'tyXIDp4p' \
    --offset '86' \
    > test.out 2>&1
eval_tap $? 308 'AdminListInvitationHistoriesV4' test.out

#- 309 AdminGetDevicesByUserV4
$CLI_EXE \
    --sn iam \
    --op AdminGetDevicesByUserV4 \
    --namespace $AB_NAMESPACE \
    --userId 'wroVQLIA' \
    > test.out 2>&1
eval_tap $? 309 'AdminGetDevicesByUserV4' test.out

#- 310 AdminGetBannedDevicesV4
$CLI_EXE \
    --sn iam \
    --op AdminGetBannedDevicesV4 \
    --namespace $AB_NAMESPACE \
    --deviceType '4WjAMBST' \
    --endDate 'SYoMGZsC' \
    --limit '40' \
    --offset '48' \
    --startDate 'zexPBX3B' \
    > test.out 2>&1
eval_tap $? 310 'AdminGetBannedDevicesV4' test.out

#- 311 AdminGetUserDeviceBansV4
$CLI_EXE \
    --sn iam \
    --op AdminGetUserDeviceBansV4 \
    --namespace $AB_NAMESPACE \
    --userId 'EOd1RNFd' \
    > test.out 2>&1
eval_tap $? 311 'AdminGetUserDeviceBansV4' test.out

#- 312 AdminBanDeviceV4
# body param: body
echo '{"comment": "cK7ukuDo", "deviceId": "Ci1N3x4o", "deviceType": "rs5NYGKk", "enabled": true, "endDate": "Bvd9UiaO", "ext": {"Bds2xPqn": {}, "OrB9fMgi": {}, "GGsxm26L": {}}, "reason": "pEFa2gdb"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBanDeviceV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 312 'AdminBanDeviceV4' test.out

#- 313 AdminGetDeviceBanV4
$CLI_EXE \
    --sn iam \
    --op AdminGetDeviceBanV4 \
    --banId 'xHzOZlYF' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 313 'AdminGetDeviceBanV4' test.out

#- 314 AdminUpdateDeviceBanV4
# body param: body
echo '{"enabled": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateDeviceBanV4 \
    --banId 'TWaNaUsF' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 314 'AdminUpdateDeviceBanV4' test.out

#- 315 AdminGenerateReportV4
$CLI_EXE \
    --sn iam \
    --op AdminGenerateReportV4 \
    --namespace $AB_NAMESPACE \
    --endDate 'gQq9zMJ9' \
    --startDate 'H0WaHrFk' \
    --deviceType 'zKAfDNW3' \
    > test.out 2>&1
eval_tap $? 315 'AdminGenerateReportV4' test.out

#- 316 AdminGetDeviceTypesV4
$CLI_EXE \
    --sn iam \
    --op AdminGetDeviceTypesV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 316 'AdminGetDeviceTypesV4' test.out

#- 317 AdminGetDeviceBansV4
$CLI_EXE \
    --sn iam \
    --op AdminGetDeviceBansV4 \
    --deviceId 'ADTZtZaS' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 317 'AdminGetDeviceBansV4' test.out

#- 318 AdminDecryptDeviceV4
$CLI_EXE \
    --sn iam \
    --op AdminDecryptDeviceV4 \
    --deviceId 'w1HCHHC2' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 318 'AdminDecryptDeviceV4' test.out

#- 319 AdminUnbanDeviceV4
$CLI_EXE \
    --sn iam \
    --op AdminUnbanDeviceV4 \
    --deviceId 'PiY8pykN' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 319 'AdminUnbanDeviceV4' test.out

#- 320 AdminGetUsersByDeviceV4
$CLI_EXE \
    --sn iam \
    --op AdminGetUsersByDeviceV4 \
    --deviceId '2YFH4GdE' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 320 'AdminGetUsersByDeviceV4' test.out

#- 321 AdminGetNamespaceInvitationHistoryV4
$CLI_EXE \
    --sn iam \
    --op AdminGetNamespaceInvitationHistoryV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 321 'AdminGetNamespaceInvitationHistoryV4' test.out

#- 322 AdminGetNamespaceUserInvitationHistoryV4
$CLI_EXE \
    --sn iam \
    --op AdminGetNamespaceUserInvitationHistoryV4 \
    --namespace $AB_NAMESPACE \
    --limit '35' \
    --offset '77' \
    > test.out 2>&1
eval_tap $? 322 'AdminGetNamespaceUserInvitationHistoryV4' test.out

#- 323 AdminCreateTestUsersV4
# body param: body
echo '{"count": 32}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminCreateTestUsersV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 323 'AdminCreateTestUsersV4' test.out

#- 324 AdminCreateUserV4
# body param: body
echo '{"acceptedPolicies": [{"isAccepted": true, "localizedPolicyVersionId": "EcUZt26D", "policyId": "NKUwzEnR", "policyVersionId": "SONxlYrr"}, {"isAccepted": true, "localizedPolicyVersionId": "0I69et1w", "policyId": "0Aaxy0uU", "policyVersionId": "SebkIGba"}, {"isAccepted": false, "localizedPolicyVersionId": "qihIv0fe", "policyId": "YwA5kpFF", "policyVersionId": "Q6zYUDFE"}], "authType": "EMAILPASSWD", "code": "RessCpzO", "country": "pjibaMVj", "dateOfBirth": "h79bQXVY", "displayName": "gZSeCJiC", "emailAddress": "rXrHP7yN", "password": "wKjtuzDV", "passwordMD5Sum": "ywUw6zww", "reachMinimumAge": true, "uniqueDisplayName": "9QWDRSAp", "username": "1kUyGCSP"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminCreateUserV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 324 'AdminCreateUserV4' test.out

#- 325 AdminBulkUpdateUserAccountTypeV4
# body param: body
echo '{"testAccount": true, "userIds": ["4tK3GuiQ", "W8UUALZ4", "LNIz3rF6"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBulkUpdateUserAccountTypeV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 325 'AdminBulkUpdateUserAccountTypeV4' test.out

#- 326 AdminBulkCheckValidUserIDV4
# body param: body
echo '{"userIds": ["i4tFGX6T", "2PphwUBY", "Od5BYOAQ"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBulkCheckValidUserIDV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 326 'AdminBulkCheckValidUserIDV4' test.out

#- 327 AdminUpdateUserV4
# body param: body
echo '{"avatarUrl": "2EHowskJ", "country": "KzcVkDDv", "dateOfBirth": "7WkKvx0K", "displayName": "XsP0yFhA", "languageTag": "N1vI9Dl7", "skipLoginQueue": false, "uniqueDisplayName": "thtsV6xM", "userName": "8I6GNahE"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserV4 \
    --namespace $AB_NAMESPACE \
    --userId '2j12rY8N' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 327 'AdminUpdateUserV4' test.out

#- 328 AdminUpdateUserEmailAddressV4
# body param: body
echo '{"code": "0ZOKYCu2", "emailAddress": "EKuhHZ9C"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserEmailAddressV4 \
    --namespace $AB_NAMESPACE \
    --userId 'VqVHDsd5' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 328 'AdminUpdateUserEmailAddressV4' test.out

#- 329 AdminDisableUserMFAV4
$CLI_EXE \
    --sn iam \
    --op AdminDisableUserMFAV4 \
    --namespace $AB_NAMESPACE \
    --userId '0yo3eFvX' \
    > test.out 2>&1
eval_tap $? 329 'AdminDisableUserMFAV4' test.out

#- 330 AdminListUserRolesV4
$CLI_EXE \
    --sn iam \
    --op AdminListUserRolesV4 \
    --namespace $AB_NAMESPACE \
    --userId 'VCprD6OI' \
    > test.out 2>&1
eval_tap $? 330 'AdminListUserRolesV4' test.out

#- 331 AdminUpdateUserRoleV4
# body param: body
echo '{"assignedNamespaces": ["oa3jRtuy", "WJf4pfrt", "P0YHRjz5"], "roleId": "DrNlA2WN"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserRoleV4 \
    --namespace $AB_NAMESPACE \
    --userId 'C2NG2I3c' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 331 'AdminUpdateUserRoleV4' test.out

#- 332 AdminAddUserRoleV4
# body param: body
echo '{"assignedNamespaces": ["rxCsCRYA", "Nd132Jwu", "q65H3yDR"], "roleId": "yhwor9I4"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddUserRoleV4 \
    --namespace $AB_NAMESPACE \
    --userId '1EI9uerX' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 332 'AdminAddUserRoleV4' test.out

#- 333 AdminRemoveUserRoleV4
# body param: body
echo '{"assignedNamespaces": ["UTd2VSjd", "hvmcyiGg", "2ncMu2zx"], "roleId": "KcfwHDOp"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminRemoveUserRoleV4 \
    --namespace $AB_NAMESPACE \
    --userId 'hTqSjCOz' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 333 'AdminRemoveUserRoleV4' test.out

#- 334 AdminGetRolesV4
$CLI_EXE \
    --sn iam \
    --op AdminGetRolesV4 \
    --adminRole 'false' \
    --isWildcard 'false' \
    --limit '33' \
    --offset '63' \
    > test.out 2>&1
eval_tap $? 334 'AdminGetRolesV4' test.out

#- 335 AdminCreateRoleV4
# body param: body
echo '{"adminRole": true, "deletable": true, "isWildcard": true, "roleName": "ws4rdGkl"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminCreateRoleV4 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 335 'AdminCreateRoleV4' test.out

#- 336 AdminGetRoleV4
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleV4 \
    --roleId 'bSWJTxoN' \
    > test.out 2>&1
eval_tap $? 336 'AdminGetRoleV4' test.out

#- 337 AdminDeleteRoleV4
$CLI_EXE \
    --sn iam \
    --op AdminDeleteRoleV4 \
    --roleId 'E2rQNaa2' \
    > test.out 2>&1
eval_tap $? 337 'AdminDeleteRoleV4' test.out

#- 338 AdminUpdateRoleV4
# body param: body
echo '{"adminRole": false, "deletable": false, "isWildcard": false, "roleName": "ts7yoGnF"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateRoleV4 \
    --roleId 'M7TNClb7' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 338 'AdminUpdateRoleV4' test.out

#- 339 AdminUpdateRolePermissionsV4
# body param: body
echo '{"permissions": [{"action": 0, "resource": "m5yhPgjL", "schedAction": 73, "schedCron": "buytCA4d", "schedRange": ["vXpFeKeM", "Htb3kJJR", "Me5G3mzj"]}, {"action": 59, "resource": "wnJBRNAh", "schedAction": 38, "schedCron": "OC9ULhjO", "schedRange": ["vQScCw7o", "btdopcqZ", "dZNNwjcv"]}, {"action": 90, "resource": "BplzwNnm", "schedAction": 95, "schedCron": "D1GCCqrQ", "schedRange": ["Fib82Aaj", "yaMh7Koq", "KeeUZWUx"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateRolePermissionsV4 \
    --roleId '0VsvOkSP' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 339 'AdminUpdateRolePermissionsV4' test.out

#- 340 AdminAddRolePermissionsV4
# body param: body
echo '{"permissions": [{"action": 53, "resource": "TwggC4LC", "schedAction": 4, "schedCron": "Dxfb5Yxg", "schedRange": ["WjIBv7j1", "zytTpDYi", "v8ZfW1Dr"]}, {"action": 51, "resource": "lcrXZTxS", "schedAction": 86, "schedCron": "m2u4n2fM", "schedRange": ["prpELTty", "WnWV8PIW", "xM8YUJGS"]}, {"action": 76, "resource": "Upqqjz76", "schedAction": 78, "schedCron": "nt6spRg4", "schedRange": ["9jw1J07z", "bhUYiKIF", "RTJtBRgG"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddRolePermissionsV4 \
    --roleId 'vogYNHPE' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 340 'AdminAddRolePermissionsV4' test.out

#- 341 AdminDeleteRolePermissionsV4
# body param: body
echo '["dbiJRE1Y", "dbbfZpEQ", "du9AjZ9X"]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDeleteRolePermissionsV4 \
    --roleId 'DblrzK7m' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 341 'AdminDeleteRolePermissionsV4' test.out

#- 342 AdminListAssignedUsersV4
$CLI_EXE \
    --sn iam \
    --op AdminListAssignedUsersV4 \
    --roleId 'TtKyqBvG' \
    --after 'iXsXZgzy' \
    --before 'b5iMmkBy' \
    --limit '46' \
    > test.out 2>&1
eval_tap $? 342 'AdminListAssignedUsersV4' test.out

#- 343 AdminAssignUserToRoleV4
# body param: body
echo '{"assignedNamespaces": ["ZB4Jo98g", "TvoAH5Zi", "MYOUQVjZ"], "namespace": "DqXu0YXe", "userId": "86AZFrAt"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAssignUserToRoleV4 \
    --roleId 'y8LG7nts' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 343 'AdminAssignUserToRoleV4' test.out

#- 344 AdminRevokeUserFromRoleV4
# body param: body
echo '{"namespace": "tyublicD", "userId": "Qgv5kLbs"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminRevokeUserFromRoleV4 \
    --roleId 'MNovi2OI' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 344 'AdminRevokeUserFromRoleV4' test.out

#- 345 AdminInviteUserNewV4
# body param: body
echo '{"assignedNamespaces": ["CHsSu68w", "AjF1LZIU", "4pTk1pWA"], "emailAddresses": ["4ZcfzXJD", "gSLaS3eC", "axh5PC2I"], "isAdmin": false, "isNewStudio": false, "languageTag": "t8Lrwokz", "namespace": "YbwZSzDU", "roleId": "UMAUsUZu"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminInviteUserNewV4 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 345 'AdminInviteUserNewV4' test.out

#- 346 AdminUpdateMyUserV4
# body param: body
echo '{"avatarUrl": "UoEclj0a", "country": "PgIuNYm3", "dateOfBirth": "sC3WEmRf", "displayName": "yRw6PBXQ", "languageTag": "Qfs5VfBr", "skipLoginQueue": true, "uniqueDisplayName": "SuUuw8dr", "userName": "p2oRUWym"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateMyUserV4 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 346 'AdminUpdateMyUserV4' test.out

#- 347 AdminDisableMyAuthenticatorV4
# body param: body
echo '{"mfaToken": "zlLTg6Gd"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDisableMyAuthenticatorV4 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 347 'AdminDisableMyAuthenticatorV4' test.out

#- 348 AdminEnableMyAuthenticatorV4
$CLI_EXE \
    --sn iam \
    --op AdminEnableMyAuthenticatorV4 \
    --code 'P3iqA4UG' \
    > test.out 2>&1
eval_tap $? 348 'AdminEnableMyAuthenticatorV4' test.out

#- 349 AdminGenerateMyAuthenticatorKeyV4
$CLI_EXE \
    --sn iam \
    --op AdminGenerateMyAuthenticatorKeyV4 \
    > test.out 2>&1
eval_tap $? 349 'AdminGenerateMyAuthenticatorKeyV4' test.out

#- 350 AdminGetMyBackupCodesV4
eval_tap 0 350 'AdminGetMyBackupCodesV4 # SKIP deprecated' test.out

#- 351 AdminGenerateMyBackupCodesV4
eval_tap 0 351 'AdminGenerateMyBackupCodesV4 # SKIP deprecated' test.out

#- 352 AdminDisableMyBackupCodesV4
# body param: body
echo '{"mfaToken": "tjrM3fmS"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDisableMyBackupCodesV4 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 352 'AdminDisableMyBackupCodesV4' test.out

#- 353 AdminDownloadMyBackupCodesV4
eval_tap 0 353 'AdminDownloadMyBackupCodesV4 # SKIP deprecated' test.out

#- 354 AdminEnableMyBackupCodesV4
eval_tap 0 354 'AdminEnableMyBackupCodesV4 # SKIP deprecated' test.out

#- 355 AdminGetBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op AdminGetBackupCodesV4 \
    --languageTag 'TkwJRsZC' \
    > test.out 2>&1
eval_tap $? 355 'AdminGetBackupCodesV4' test.out

#- 356 AdminGenerateBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op AdminGenerateBackupCodesV4 \
    --languageTag '719lehVD' \
    > test.out 2>&1
eval_tap $? 356 'AdminGenerateBackupCodesV4' test.out

#- 357 AdminEnableBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op AdminEnableBackupCodesV4 \
    --languageTag 'iW3d66nC' \
    > test.out 2>&1
eval_tap $? 357 'AdminEnableBackupCodesV4' test.out

#- 358 AdminChallengeMyMFAV4
$CLI_EXE \
    --sn iam \
    --op AdminChallengeMyMFAV4 \
    --code 'BS6hqv2W' \
    --factor 'FJUHecwZ' \
    > test.out 2>&1
eval_tap $? 358 'AdminChallengeMyMFAV4' test.out

#- 359 AdminSendMyMFAEmailCodeV4
$CLI_EXE \
    --sn iam \
    --op AdminSendMyMFAEmailCodeV4 \
    --action 'fZFYESnD' \
    > test.out 2>&1
eval_tap $? 359 'AdminSendMyMFAEmailCodeV4' test.out

#- 360 AdminDisableMyEmailV4
# body param: body
echo '{"mfaToken": "hkN4qIfG"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDisableMyEmailV4 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 360 'AdminDisableMyEmailV4' test.out

#- 361 AdminEnableMyEmailV4
$CLI_EXE \
    --sn iam \
    --op AdminEnableMyEmailV4 \
    --code 'jTaAxBEV' \
    > test.out 2>&1
eval_tap $? 361 'AdminEnableMyEmailV4' test.out

#- 362 AdminGetMyEnabledFactorsV4
$CLI_EXE \
    --sn iam \
    --op AdminGetMyEnabledFactorsV4 \
    > test.out 2>&1
eval_tap $? 362 'AdminGetMyEnabledFactorsV4' test.out

#- 363 AdminMakeFactorMyDefaultV4
$CLI_EXE \
    --sn iam \
    --op AdminMakeFactorMyDefaultV4 \
    --factor '6EAVz0u6' \
    > test.out 2>&1
eval_tap $? 363 'AdminMakeFactorMyDefaultV4' test.out

#- 364 AdminGetMyMFAStatusV4
$CLI_EXE \
    --sn iam \
    --op AdminGetMyMFAStatusV4 \
    > test.out 2>&1
eval_tap $? 364 'AdminGetMyMFAStatusV4' test.out

#- 365 AdminInviteUserV4
eval_tap 0 365 'AdminInviteUserV4 # SKIP deprecated' test.out

#- 366 AuthenticationWithPlatformLinkV4
$CLI_EXE \
    --sn iam \
    --op AuthenticationWithPlatformLinkV4 \
    --extend_exp 'false' \
    --client_id 'mgk6eLZJ' \
    --linkingToken 'YQaxHBHL' \
    --password '8nRTNn2g' \
    --username 'hIyo6lzV' \
    > test.out 2>&1
eval_tap $? 366 'AuthenticationWithPlatformLinkV4' test.out

#- 367 GenerateTokenByNewHeadlessAccountV4
$CLI_EXE \
    --sn iam \
    --op GenerateTokenByNewHeadlessAccountV4 \
    --additionalData '825IzZnX' \
    --extend_exp 'false' \
    --linkingToken 'tx0lmLZU' \
    > test.out 2>&1
eval_tap $? 367 'GenerateTokenByNewHeadlessAccountV4' test.out

#- 368 Verify2faCodeV4
$CLI_EXE \
    --sn iam \
    --op Verify2faCodeV4 \
    --code 'debSX5fh' \
    --factor 'wmieoE3g' \
    --mfaToken 'yFNQRMEA' \
    --rememberDevice 'true' \
    > test.out 2>&1
eval_tap $? 368 'Verify2faCodeV4' test.out

#- 369 PlatformTokenGrantV4
$CLI_EXE \
    --sn iam \
    --op PlatformTokenGrantV4 \
    --platformId 'HeYZVf8M' \
    --codeChallenge 'bNk4PMfk' \
    --codeChallengeMethod 'S256' \
    --additionalData 'hoC1b0V5' \
    --client_id 'ZLUzeibD' \
    --createHeadless 'false' \
    --device_id '3v236Fry' \
    --macAddress '2wArWSJB' \
    --platform_token 'MI9EZS1K' \
    --serviceLabel '0.7696772046403485' \
    --skipSetCookie 'false' \
    > test.out 2>&1
eval_tap $? 369 'PlatformTokenGrantV4' test.out

#- 370 SimultaneousLoginV4
$CLI_EXE \
    --sn iam \
    --op SimultaneousLoginV4 \
    --codeChallenge 'gvSgVhKg' \
    --codeChallengeMethod 'plain' \
    --simultaneousPlatform 'F5OmwlZT' \
    --simultaneousTicket 'fi5zOica' \
    --nativePlatform 'epicgames' \
    --nativePlatformTicket 'w8fLFLxW' \
    > test.out 2>&1
eval_tap $? 370 'SimultaneousLoginV4' test.out

#- 371 TokenGrantV4
$CLI_EXE \
    --sn iam \
    --op TokenGrantV4 \
    --codeChallenge 'S5OCdVKd' \
    --codeChallengeMethod 'plain' \
    --additionalData 'xCv8dZro' \
    --client_id 'f1bV5Mb0' \
    --client_secret 'CUmv9Ue2' \
    --code 'yDIuMWPn' \
    --code_verifier 'BVED6huf' \
    --extendNamespace 'LrQD2UbC' \
    --extend_exp 'true' \
    --login_queue_ticket 'JyNnN8u8' \
    --password '0IY7nMUy' \
    --redirect_uri 'YrVw2pkC' \
    --refresh_token 'Z0rDXTFI' \
    --username 'bw47Uws3' \
    --grant_type 'client_credentials' \
    > test.out 2>&1
eval_tap $? 371 'TokenGrantV4' test.out

#- 372 RequestTargetTokenResponseV4
$CLI_EXE \
    --sn iam \
    --op RequestTargetTokenResponseV4 \
    --additionalData 'KQr3GBvh' \
    --code '6QBoDXwA' \
    > test.out 2>&1
eval_tap $? 372 'RequestTargetTokenResponseV4' test.out

#- 373 PublicListUserIDByPlatformUserIDsV4
# body param: body
echo '{"platformUserIds": ["p4amyUwJ", "Gy6qWovi", "n1uWNMRI"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicListUserIDByPlatformUserIDsV4 \
    --namespace $AB_NAMESPACE \
    --platformId 'vNSp0Fu1' \
    --rawPUID 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 373 'PublicListUserIDByPlatformUserIDsV4' test.out

#- 374 PublicCreateTestUserV4
# body param: body
echo '{"acceptedPolicies": [{"isAccepted": true, "localizedPolicyVersionId": "ltPExHHg", "policyId": "RwHdtqCZ", "policyVersionId": "GF6tQ32A"}, {"isAccepted": false, "localizedPolicyVersionId": "vppHMUlH", "policyId": "Zz0xGraU", "policyVersionId": "1Ipqguan"}, {"isAccepted": false, "localizedPolicyVersionId": "ZTCSK2Yj", "policyId": "O0v2x3Fl", "policyVersionId": "k4ZYC8DG"}], "authType": "EMAILPASSWD", "country": "rytOlW2o", "dateOfBirth": "8VOHGNIl", "displayName": "IZtjntac", "emailAddress": "YGcTuHIP", "password": "pNjM2Fui", "passwordMD5Sum": "FESTMxg8", "uniqueDisplayName": "LL87Ucwm", "username": "DfjtQ8ME", "verified": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicCreateTestUserV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 374 'PublicCreateTestUserV4' test.out

#- 375 PublicCreateUserV4
# body param: body
echo '{"acceptedPolicies": [{"isAccepted": true, "localizedPolicyVersionId": "L2QOgTsb", "policyId": "nl4VAPBu", "policyVersionId": "HtQ6kSSy"}, {"isAccepted": true, "localizedPolicyVersionId": "IEhLS5o8", "policyId": "4qrKPM9l", "policyVersionId": "QnAbogHj"}, {"isAccepted": false, "localizedPolicyVersionId": "yh9SEYVv", "policyId": "3PzN6FsW", "policyVersionId": "HkkMkM78"}], "authType": "EMAILPASSWD", "code": "DHZhpUkT", "country": "AsDFMOFq", "dateOfBirth": "0tU2eePT", "displayName": "vpV3Bz2a", "emailAddress": "gNo6caj9", "password": "c54Zl0UH", "passwordMD5Sum": "Y0a8Pw7m", "reachMinimumAge": false, "uniqueDisplayName": "ia4pkpwC", "username": "XeVFhauQ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicCreateUserV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 375 'PublicCreateUserV4' test.out

#- 376 CreateUserFromInvitationV4
# body param: body
echo '{"acceptedPolicies": [{"isAccepted": false, "localizedPolicyVersionId": "5bDBfVqw", "policyId": "sPWVMZLz", "policyVersionId": "2JJYs4Lb"}, {"isAccepted": true, "localizedPolicyVersionId": "3PfsH4zq", "policyId": "ujOwVSWT", "policyVersionId": "edN1CuXw"}, {"isAccepted": true, "localizedPolicyVersionId": "au37dfs4", "policyId": "kYp7wVQi", "policyVersionId": "E8F2b9n9"}], "authType": "EMAILPASSWD", "code": "KDN2Vkmw", "country": "mevgVO0F", "dateOfBirth": "jq1BXip6", "displayName": "5EOMwMMm", "emailAddress": "86fnv3Ro", "password": "bZKQPh8y", "passwordMD5Sum": "CGS3Ux1f", "reachMinimumAge": false, "uniqueDisplayName": "aT4hgCW3", "username": "EuG7RXdF"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op CreateUserFromInvitationV4 \
    --invitationId 'O2AVNyw7' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 376 'CreateUserFromInvitationV4' test.out

#- 377 PublicUpdateUserV4
# body param: body
echo '{"avatarUrl": "fdS7OHbN", "country": "a9voI0qI", "dateOfBirth": "LWgl1kf5", "displayName": "EYILT0SL", "languageTag": "FmdWbmNa", "uniqueDisplayName": "bG1bgQRV", "userName": "VqeQKnF7"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpdateUserV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 377 'PublicUpdateUserV4' test.out

#- 378 PublicUpdateUserEmailAddressV4
# body param: body
echo '{"code": "2MIl7gVN", "emailAddress": "nms5f0si"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpdateUserEmailAddressV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 378 'PublicUpdateUserEmailAddressV4' test.out

#- 379 PublicUpgradeHeadlessAccountWithVerificationCodeV4
# body param: body
echo '{"code": "xhF1nTEH", "country": "YoSDhYFm", "dateOfBirth": "ldE9zRJ5", "displayName": "VztchaqT", "emailAddress": "lQnxSXMG", "password": "6CO1rha6", "reachMinimumAge": false, "uniqueDisplayName": "GjYksOA1", "username": "Itk4D9uj", "validateOnly": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpgradeHeadlessAccountWithVerificationCodeV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 379 'PublicUpgradeHeadlessAccountWithVerificationCodeV4' test.out

#- 380 PublicUpgradeHeadlessAccountV4
# body param: body
echo '{"emailAddress": "uW0lOMeI", "password": "qkAqwkjS", "username": "C8GZQG5a"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpgradeHeadlessAccountV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 380 'PublicUpgradeHeadlessAccountV4' test.out

#- 381 PublicDisableMyAuthenticatorV4
# body param: body
echo '{"mfaToken": "sAi3dvgJ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicDisableMyAuthenticatorV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 381 'PublicDisableMyAuthenticatorV4' test.out

#- 382 PublicEnableMyAuthenticatorV4
$CLI_EXE \
    --sn iam \
    --op PublicEnableMyAuthenticatorV4 \
    --namespace $AB_NAMESPACE \
    --code 'wjH9llQa' \
    > test.out 2>&1
eval_tap $? 382 'PublicEnableMyAuthenticatorV4' test.out

#- 383 PublicGenerateMyAuthenticatorKeyV4
$CLI_EXE \
    --sn iam \
    --op PublicGenerateMyAuthenticatorKeyV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 383 'PublicGenerateMyAuthenticatorKeyV4' test.out

#- 384 PublicGetMyBackupCodesV4
eval_tap 0 384 'PublicGetMyBackupCodesV4 # SKIP deprecated' test.out

#- 385 PublicGenerateMyBackupCodesV4
eval_tap 0 385 'PublicGenerateMyBackupCodesV4 # SKIP deprecated' test.out

#- 386 PublicDisableMyBackupCodesV4
# body param: body
echo '{"mfaToken": "FkT9cSFR"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicDisableMyBackupCodesV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 386 'PublicDisableMyBackupCodesV4' test.out

#- 387 PublicDownloadMyBackupCodesV4
eval_tap 0 387 'PublicDownloadMyBackupCodesV4 # SKIP deprecated' test.out

#- 388 PublicEnableMyBackupCodesV4
eval_tap 0 388 'PublicEnableMyBackupCodesV4 # SKIP deprecated' test.out

#- 389 PublicGetBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op PublicGetBackupCodesV4 \
    --namespace $AB_NAMESPACE \
    --languageTag 'MjjIXYct' \
    > test.out 2>&1
eval_tap $? 389 'PublicGetBackupCodesV4' test.out

#- 390 PublicGenerateBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op PublicGenerateBackupCodesV4 \
    --namespace $AB_NAMESPACE \
    --languageTag '1e9IbY6x' \
    > test.out 2>&1
eval_tap $? 390 'PublicGenerateBackupCodesV4' test.out

#- 391 PublicEnableBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op PublicEnableBackupCodesV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 391 'PublicEnableBackupCodesV4' test.out

#- 392 PublicChallengeMyMFAV4
$CLI_EXE \
    --sn iam \
    --op PublicChallengeMyMFAV4 \
    --namespace $AB_NAMESPACE \
    --code 'S4zTCCjM' \
    --factor 'ew8UE6n8' \
    > test.out 2>&1
eval_tap $? 392 'PublicChallengeMyMFAV4' test.out

#- 393 PublicRemoveTrustedDeviceV4
$CLI_EXE \
    --sn iam \
    --op PublicRemoveTrustedDeviceV4 \
    --namespace $AB_NAMESPACE \
    --device_token 'SkC5pPB5' \
    > test.out 2>&1
eval_tap $? 393 'PublicRemoveTrustedDeviceV4' test.out

#- 394 PublicSendMyMFAEmailCodeV4
$CLI_EXE \
    --sn iam \
    --op PublicSendMyMFAEmailCodeV4 \
    --namespace $AB_NAMESPACE \
    --action '06ULvUhz' \
    > test.out 2>&1
eval_tap $? 394 'PublicSendMyMFAEmailCodeV4' test.out

#- 395 PublicDisableMyEmailV4
# body param: body
echo '{"mfaToken": "2daj31z1"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicDisableMyEmailV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 395 'PublicDisableMyEmailV4' test.out

#- 396 PublicEnableMyEmailV4
$CLI_EXE \
    --sn iam \
    --op PublicEnableMyEmailV4 \
    --namespace $AB_NAMESPACE \
    --code 'R4jdaITe' \
    > test.out 2>&1
eval_tap $? 396 'PublicEnableMyEmailV4' test.out

#- 397 PublicGetMyEnabledFactorsV4
$CLI_EXE \
    --sn iam \
    --op PublicGetMyEnabledFactorsV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 397 'PublicGetMyEnabledFactorsV4' test.out

#- 398 PublicMakeFactorMyDefaultV4
$CLI_EXE \
    --sn iam \
    --op PublicMakeFactorMyDefaultV4 \
    --namespace $AB_NAMESPACE \
    --factor 'CwVuc7tw' \
    > test.out 2>&1
eval_tap $? 398 'PublicMakeFactorMyDefaultV4' test.out

#- 399 PublicGetMyMFAStatusV4
$CLI_EXE \
    --sn iam \
    --op PublicGetMyMFAStatusV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 399 'PublicGetMyMFAStatusV4' test.out

#- 400 PublicGetUserPublicInfoByUserIdV4
$CLI_EXE \
    --sn iam \
    --op PublicGetUserPublicInfoByUserIdV4 \
    --namespace $AB_NAMESPACE \
    --userId 'vgUCzrd3' \
    > test.out 2>&1
eval_tap $? 400 'PublicGetUserPublicInfoByUserIdV4' test.out

#- 401 PublicInviteUserV4
# body param: body
echo '{"additionalData": "GHe5fuND", "emailAddress": "4ac1VEkI", "languageTag": "1OZTdnrI", "namespace": "41KFwi0Z", "namespaceDisplayName": "ruFsMDI6"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicInviteUserV4 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 401 'PublicInviteUserV4' test.out


# remove artifacts
rm -f "$CLI_TOKEN_FILE"
rm -f "$TEMP_JSON_INPUT"
rm -f "$TEMP_FILE_UPLOAD"

exit $EXIT_CODE