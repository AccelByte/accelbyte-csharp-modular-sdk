#!/usr/bin/env bash

# Copyright (c) 2021 AccelByte Inc. All Rights Reserved.
# This is licensed software from AccelByte Inc, for limitations
# and restrictions contact your company contract manager.

# This code is generated by tool. DO NOT EDIT.

# Meta:
# - random seed: 
# - template file: 

# Instructions:
# - Run the Justice SDK Mock Server first before running this script.

export AB_BASE_URL="http://127.0.0.1:8080"
export AB_CLIENT_ID="admin"
export AB_CLIENT_SECRET="admin"
export AB_NAMESPACE="test"
export AB_APP_NAME="UnitTest"

EXIT_CODE=0

eval_tap() {
  if [ $1 -eq 0 ]; then
    echo "ok $2 - $3"
  else
    EXIT_CODE=1
    echo "not ok $2 - $3"
    sed 's/^/# /g' $4
  fi
  rm -f $4
}

CLI_EXE="AccelByte.Sdk.Sample.Cli"
CLI_TOKEN_FILE="$(dirname "$(which $CLI_EXE)")/token.json"
TEMP_JSON_INPUT="input_json.json"
TEMP_FILE_UPLOAD="file_upload.bin"

echo "TAP version 13"
echo "1..425"

#- 1 Login
$CLI_EXE --op login --lt user --user user --pass user > test.out 2>&1
eval_tap $? 1 'Login' test.out

if [ $EXIT_CODE -ne 0 ]; then
  echo "Bail out! Login failed."
  exit $EXIT_CODE
fi

# echo "foo" > "$CLI_TOKEN_FILE"

#- 2 GetBansType
eval_tap 0 2 'GetBansType # SKIP deprecated' test.out

#- 3 GetListBanReason
eval_tap 0 3 'GetListBanReason # SKIP deprecated' test.out

#- 4 GetClients
eval_tap 0 4 'GetClients # SKIP deprecated' test.out

#- 5 CreateClient
eval_tap 0 5 'CreateClient # SKIP deprecated' test.out

#- 6 GetClient
eval_tap 0 6 'GetClient # SKIP deprecated' test.out

#- 7 UpdateClient
eval_tap 0 7 'UpdateClient # SKIP deprecated' test.out

#- 8 DeleteClient
eval_tap 0 8 'DeleteClient # SKIP deprecated' test.out

#- 9 UpdateClientPermission
eval_tap 0 9 'UpdateClientPermission # SKIP deprecated' test.out

#- 10 AddClientPermission
eval_tap 0 10 'AddClientPermission # SKIP deprecated' test.out

#- 11 DeleteClientPermission
eval_tap 0 11 'DeleteClientPermission # SKIP deprecated' test.out

#- 12 UpdateClientSecret
eval_tap 0 12 'UpdateClientSecret # SKIP deprecated' test.out

#- 13 GetClientsbyNamespace
eval_tap 0 13 'GetClientsbyNamespace # SKIP deprecated' test.out

#- 14 CreateClientByNamespace
eval_tap 0 14 'CreateClientByNamespace # SKIP deprecated' test.out

#- 15 DeleteClientByNamespace
eval_tap 0 15 'DeleteClientByNamespace # SKIP deprecated' test.out

#- 16 CreateUser
eval_tap 0 16 'CreateUser # SKIP deprecated' test.out

#- 17 GetAdminUsersByRoleID
eval_tap 0 17 'GetAdminUsersByRoleID # SKIP deprecated' test.out

#- 18 GetUserByLoginID
eval_tap 0 18 'GetUserByLoginID # SKIP deprecated' test.out

#- 19 GetUserByPlatformUserID
eval_tap 0 19 'GetUserByPlatformUserID # SKIP deprecated' test.out

#- 20 ForgotPassword
eval_tap 0 20 'ForgotPassword # SKIP deprecated' test.out

#- 21 GetUsersByLoginIds
eval_tap 0 21 'GetUsersByLoginIds # SKIP deprecated' test.out

#- 22 ResetPassword
eval_tap 0 22 'ResetPassword # SKIP deprecated' test.out

#- 23 SearchUser
eval_tap 0 23 'SearchUser # SKIP deprecated' test.out

#- 24 GetUserByUserID
eval_tap 0 24 'GetUserByUserID # SKIP deprecated' test.out

#- 25 UpdateUser
eval_tap 0 25 'UpdateUser # SKIP deprecated' test.out

#- 26 DeleteUser
eval_tap 0 26 'DeleteUser # SKIP deprecated' test.out

#- 27 BanUser
eval_tap 0 27 'BanUser # SKIP deprecated' test.out

#- 28 GetUserBanHistory
eval_tap 0 28 'GetUserBanHistory # SKIP deprecated' test.out

#- 29 DisableUserBan
eval_tap 0 29 'DisableUserBan # SKIP deprecated' test.out

#- 30 EnableUserBan
eval_tap 0 30 'EnableUserBan # SKIP deprecated' test.out

#- 31 ListCrossNamespaceAccountLink
eval_tap 0 31 'ListCrossNamespaceAccountLink # SKIP deprecated' test.out

#- 32 DisableUser
eval_tap 0 32 'DisableUser # SKIP deprecated' test.out

#- 33 EnableUser
eval_tap 0 33 'EnableUser # SKIP deprecated' test.out

#- 34 GetUserInformation
eval_tap 0 34 'GetUserInformation # SKIP deprecated' test.out

#- 35 DeleteUserInformation
eval_tap 0 35 'DeleteUserInformation # SKIP deprecated' test.out

#- 36 GetUserLoginHistories
eval_tap 0 36 'GetUserLoginHistories # SKIP deprecated' test.out

#- 37 UpdatePassword
eval_tap 0 37 'UpdatePassword # SKIP deprecated' test.out

#- 38 SaveUserPermission
eval_tap 0 38 'SaveUserPermission # SKIP deprecated' test.out

#- 39 AddUserPermission
eval_tap 0 39 'AddUserPermission # SKIP deprecated' test.out

#- 40 DeleteUserPermission
eval_tap 0 40 'DeleteUserPermission # SKIP deprecated' test.out

#- 41 GetUserPlatformAccounts
eval_tap 0 41 'GetUserPlatformAccounts # SKIP deprecated' test.out

#- 42 GetUserMapping
eval_tap 0 42 'GetUserMapping # SKIP deprecated' test.out

#- 43 GetUserJusticePlatformAccount
eval_tap 0 43 'GetUserJusticePlatformAccount # SKIP deprecated' test.out

#- 44 PlatformLink
eval_tap 0 44 'PlatformLink # SKIP deprecated' test.out

#- 45 PlatformUnlink
eval_tap 0 45 'PlatformUnlink # SKIP deprecated' test.out

#- 46 GetPublisherUser
eval_tap 0 46 'GetPublisherUser # SKIP deprecated' test.out

#- 47 SaveUserRoles
eval_tap 0 47 'SaveUserRoles # SKIP deprecated' test.out

#- 48 AddUserRole
eval_tap 0 48 'AddUserRole # SKIP deprecated' test.out

#- 49 DeleteUserRole
eval_tap 0 49 'DeleteUserRole # SKIP deprecated' test.out

#- 50 UpgradeHeadlessAccount
eval_tap 0 50 'UpgradeHeadlessAccount # SKIP deprecated' test.out

#- 51 UpgradeHeadlessAccountWithVerificationCode
eval_tap 0 51 'UpgradeHeadlessAccountWithVerificationCode # SKIP deprecated' test.out

#- 52 UserVerification
eval_tap 0 52 'UserVerification # SKIP deprecated' test.out

#- 53 SendVerificationCode
eval_tap 0 53 'SendVerificationCode # SKIP deprecated' test.out

#- 54 Authorization
eval_tap 0 54 'Authorization # SKIP deprecated' test.out

#- 55 GetJWKS
eval_tap 0 55 'GetJWKS # SKIP deprecated' test.out

#- 56 PlatformTokenRequestHandler
eval_tap 0 56 'PlatformTokenRequestHandler # SKIP deprecated' test.out

#- 57 RevokeUser
eval_tap 0 57 'RevokeUser # SKIP deprecated' test.out

#- 58 GetRevocationList
eval_tap 0 58 'GetRevocationList # SKIP deprecated' test.out

#- 59 RevokeToken
eval_tap 0 59 'RevokeToken # SKIP deprecated' test.out

#- 60 RevokeAUser
eval_tap 0 60 'RevokeAUser # SKIP deprecated' test.out

#- 61 TokenGrant
eval_tap 0 61 'TokenGrant # SKIP deprecated' test.out

#- 62 VerifyToken
eval_tap 0 62 'VerifyToken # SKIP deprecated' test.out

#- 63 GetRoles
eval_tap 0 63 'GetRoles # SKIP deprecated' test.out

#- 64 CreateRole
eval_tap 0 64 'CreateRole # SKIP deprecated' test.out

#- 65 GetRole
eval_tap 0 65 'GetRole # SKIP deprecated' test.out

#- 66 UpdateRole
eval_tap 0 66 'UpdateRole # SKIP deprecated' test.out

#- 67 DeleteRole
eval_tap 0 67 'DeleteRole # SKIP deprecated' test.out

#- 68 GetRoleAdminStatus
eval_tap 0 68 'GetRoleAdminStatus # SKIP deprecated' test.out

#- 69 SetRoleAsAdmin
eval_tap 0 69 'SetRoleAsAdmin # SKIP deprecated' test.out

#- 70 RemoveRoleAdmin
eval_tap 0 70 'RemoveRoleAdmin # SKIP deprecated' test.out

#- 71 GetRoleManagers
eval_tap 0 71 'GetRoleManagers # SKIP deprecated' test.out

#- 72 AddRoleManagers
eval_tap 0 72 'AddRoleManagers # SKIP deprecated' test.out

#- 73 RemoveRoleManagers
eval_tap 0 73 'RemoveRoleManagers # SKIP deprecated' test.out

#- 74 GetRoleMembers
eval_tap 0 74 'GetRoleMembers # SKIP deprecated' test.out

#- 75 AddRoleMembers
eval_tap 0 75 'AddRoleMembers # SKIP deprecated' test.out

#- 76 RemoveRoleMembers
eval_tap 0 76 'RemoveRoleMembers # SKIP deprecated' test.out

#- 77 UpdateRolePermissions
eval_tap 0 77 'UpdateRolePermissions # SKIP deprecated' test.out

#- 78 AddRolePermission
eval_tap 0 78 'AddRolePermission # SKIP deprecated' test.out

#- 79 DeleteRolePermission
eval_tap 0 79 'DeleteRolePermission # SKIP deprecated' test.out

#- 80 AdminGetAgeRestrictionStatusV2
eval_tap 0 80 'AdminGetAgeRestrictionStatusV2 # SKIP deprecated' test.out

#- 81 AdminUpdateAgeRestrictionConfigV2
eval_tap 0 81 'AdminUpdateAgeRestrictionConfigV2 # SKIP deprecated' test.out

#- 82 GetListCountryAgeRestriction
eval_tap 0 82 'GetListCountryAgeRestriction # SKIP deprecated' test.out

#- 83 UpdateCountryAgeRestriction
eval_tap 0 83 'UpdateCountryAgeRestriction # SKIP deprecated' test.out

#- 84 AdminSearchUsersV2
eval_tap 0 84 'AdminSearchUsersV2 # SKIP deprecated' test.out

#- 85 AdminGetUserByUserIdV2
eval_tap 0 85 'AdminGetUserByUserIdV2 # SKIP deprecated' test.out

#- 86 AdminUpdateUserV2
eval_tap 0 86 'AdminUpdateUserV2 # SKIP deprecated' test.out

#- 87 AdminBanUserV2
eval_tap 0 87 'AdminBanUserV2 # SKIP deprecated' test.out

#- 88 AdminGetUserBanV2
eval_tap 0 88 'AdminGetUserBanV2 # SKIP deprecated' test.out

#- 89 AdminDisableUserV2
eval_tap 0 89 'AdminDisableUserV2 # SKIP deprecated' test.out

#- 90 AdminEnableUserV2
eval_tap 0 90 'AdminEnableUserV2 # SKIP deprecated' test.out

#- 91 AdminResetPasswordV2
eval_tap 0 91 'AdminResetPasswordV2 # SKIP deprecated' test.out

#- 92 AdminDeletePlatformLinkV2
eval_tap 0 92 'AdminDeletePlatformLinkV2 # SKIP deprecated' test.out

#- 93 AdminPutUserRolesV2
eval_tap 0 93 'AdminPutUserRolesV2 # SKIP deprecated' test.out

#- 94 AdminCreateUserRolesV2
eval_tap 0 94 'AdminCreateUserRolesV2 # SKIP deprecated' test.out

#- 95 PublicGetCountryAgeRestriction
eval_tap 0 95 'PublicGetCountryAgeRestriction # SKIP deprecated' test.out

#- 96 PublicCreateUserV2
eval_tap 0 96 'PublicCreateUserV2 # SKIP deprecated' test.out

#- 97 PublicForgotPasswordV2
eval_tap 0 97 'PublicForgotPasswordV2 # SKIP deprecated' test.out

#- 98 PublicResetPasswordV2
eval_tap 0 98 'PublicResetPasswordV2 # SKIP deprecated' test.out

#- 99 PublicGetUserByUserIDV2
eval_tap 0 99 'PublicGetUserByUserIDV2 # SKIP deprecated' test.out

#- 100 PublicUpdateUserV2
eval_tap 0 100 'PublicUpdateUserV2 # SKIP deprecated' test.out

#- 101 PublicGetUserBan
eval_tap 0 101 'PublicGetUserBan # SKIP deprecated' test.out

#- 102 PublicUpdatePasswordV2
eval_tap 0 102 'PublicUpdatePasswordV2 # SKIP deprecated' test.out

#- 103 GetListJusticePlatformAccounts
eval_tap 0 103 'GetListJusticePlatformAccounts # SKIP deprecated' test.out

#- 104 PublicPlatformLinkV2
eval_tap 0 104 'PublicPlatformLinkV2 # SKIP deprecated' test.out

#- 105 PublicDeletePlatformLinkV2
eval_tap 0 105 'PublicDeletePlatformLinkV2 # SKIP deprecated' test.out

#- 106 AdminGetBansTypeV3
$CLI_EXE \
    --sn iam \
    --op AdminGetBansTypeV3 \
    > test.out 2>&1
eval_tap $? 106 'AdminGetBansTypeV3' test.out

#- 107 AdminGetListBanReasonV3
$CLI_EXE \
    --sn iam \
    --op AdminGetListBanReasonV3 \
    > test.out 2>&1
eval_tap $? 107 'AdminGetListBanReasonV3' test.out

#- 108 AdminListClientAvailablePermissions
$CLI_EXE \
    --sn iam \
    --op AdminListClientAvailablePermissions \
    --excludePermissions 'false' \
    > test.out 2>&1
eval_tap $? 108 'AdminListClientAvailablePermissions' test.out

#- 109 AdminUpdateAvailablePermissionsByModule
# body param: body
echo '{"modules": [{"docLink": "cRlPLOiS", "groups": [{"group": "M3VGgQgM", "groupId": "g2by4YxD", "permissions": [{"allowedActions": [55, 74, 50], "resource": "0XqRqott"}, {"allowedActions": [68, 94, 38], "resource": "x9rULw5e"}, {"allowedActions": [41, 1, 83], "resource": "3vm5rEHE"}]}, {"group": "J8vgNLBF", "groupId": "8ciolc79", "permissions": [{"allowedActions": [19, 14, 10], "resource": "tYA35PSx"}, {"allowedActions": [96, 70, 5], "resource": "mSB5MJFN"}, {"allowedActions": [26, 52, 78], "resource": "BQcDIcu0"}]}, {"group": "doAPsekl", "groupId": "pyKtwG2l", "permissions": [{"allowedActions": [22, 15, 88], "resource": "LlxxEWbU"}, {"allowedActions": [9, 63, 35], "resource": "bOuJm4Qa"}, {"allowedActions": [86, 76, 68], "resource": "g7b8bIv1"}]}], "module": "WyGd7xTy", "moduleId": "w4JUibWf"}, {"docLink": "eTXxcshw", "groups": [{"group": "t0g0dRhP", "groupId": "QOwDb7tI", "permissions": [{"allowedActions": [58, 74, 57], "resource": "qT4KEThv"}, {"allowedActions": [75, 42, 12], "resource": "gYhi2NTx"}, {"allowedActions": [88, 69, 47], "resource": "eeW2Z6co"}]}, {"group": "z4YWlS4D", "groupId": "cArBBKDb", "permissions": [{"allowedActions": [15, 22, 65], "resource": "f6d4leCb"}, {"allowedActions": [20, 29, 50], "resource": "hj6UIrf8"}, {"allowedActions": [84, 12, 67], "resource": "OE4lM76f"}]}, {"group": "MF9PsGAN", "groupId": "8DkCflnJ", "permissions": [{"allowedActions": [6, 87, 92], "resource": "YAvy5zrG"}, {"allowedActions": [27, 17, 2], "resource": "8pP8iUuv"}, {"allowedActions": [14, 99, 48], "resource": "7U5clTkx"}]}], "module": "RPfcWz43", "moduleId": "wOejkWhR"}, {"docLink": "feoXSTsH", "groups": [{"group": "GwbdoLrK", "groupId": "2RH1uM4L", "permissions": [{"allowedActions": [5, 40, 26], "resource": "bNYkJ0f3"}, {"allowedActions": [31, 0, 89], "resource": "3yHfIE6d"}, {"allowedActions": [10, 83, 7], "resource": "7eo9msL4"}]}, {"group": "lomGeFPx", "groupId": "FiZc93YQ", "permissions": [{"allowedActions": [54, 97, 91], "resource": "3aHjrcE0"}, {"allowedActions": [38, 38, 67], "resource": "J4KIOTFf"}, {"allowedActions": [1, 25, 99], "resource": "60FoQqO9"}]}, {"group": "GQcV0rcy", "groupId": "wOi3jvRE", "permissions": [{"allowedActions": [42, 44, 12], "resource": "qovoCoKQ"}, {"allowedActions": [76, 85, 39], "resource": "36TOSq34"}, {"allowedActions": [40, 46, 55], "resource": "qZguSMs1"}]}], "module": "nSCPlaXK", "moduleId": "2WAlCNhh"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateAvailablePermissionsByModule \
    --forceDelete 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 109 'AdminUpdateAvailablePermissionsByModule' test.out

#- 110 AdminDeleteConfigPermissionsByGroup
# body param: body
echo '{"groupId": "C2uov50y", "moduleId": "tBs43J79"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDeleteConfigPermissionsByGroup \
    --forceDelete 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 110 'AdminDeleteConfigPermissionsByGroup' test.out

#- 111 AdminListClientTemplates
$CLI_EXE \
    --sn iam \
    --op AdminListClientTemplates \
    > test.out 2>&1
eval_tap $? 111 'AdminListClientTemplates' test.out

#- 112 AdminGetInputValidations
$CLI_EXE \
    --sn iam \
    --op AdminGetInputValidations \
    > test.out 2>&1
eval_tap $? 112 'AdminGetInputValidations' test.out

#- 113 AdminUpdateInputValidations
# body param: body
echo '[{"field": "oLlfaIG0", "validation": {"allowAllSpecialCharacters": false, "allowDigit": true, "allowLetter": true, "allowSpace": true, "allowUnicode": false, "avatarConfig": {"allowedPrefixes": ["ph3LU3lb", "nYnDPnku", "Xy2oOleQ"], "preferRegex": false, "regex": "ySVdXv6J"}, "blockedWord": ["5ebJJgmA", "7o6ciADB", "kI01vguV"], "description": [{"language": "fu8q0QpX", "message": ["aRok1cvd", "J0xqcBvS", "JTrE2hHj"]}, {"language": "84ElQGAD", "message": ["rfCfilqN", "baYN1ZC0", "UUzFIULk"]}, {"language": "h4UeBvQV", "message": ["YuZ3ArQz", "ZohpEbRS", "j99QZrGO"]}], "isCustomRegex": true, "letterCase": "CRHxYGDT", "maxLength": 78, "maxRepeatingAlphaNum": 18, "maxRepeatingSpecialCharacter": 15, "minCharType": 55, "minLength": 78, "profanityFilter": "LtuWOuuL", "regex": "cul6Cqtp", "specialCharacterLocation": "JXH43fmT", "specialCharacters": ["jcwRoj1S", "1r8ykK3f", "kP9HejXg"]}}, {"field": "PehiisWb", "validation": {"allowAllSpecialCharacters": false, "allowDigit": true, "allowLetter": false, "allowSpace": false, "allowUnicode": false, "avatarConfig": {"allowedPrefixes": ["lxCC91qZ", "398i3On1", "DW3LkcS4"], "preferRegex": true, "regex": "8S6lWdAZ"}, "blockedWord": ["J65H1kNU", "Nnj48q2c", "lBheMFz8"], "description": [{"language": "RWE48yr4", "message": ["khEdnwrj", "UyPa0pnQ", "ZNVsJ0g1"]}, {"language": "YYmq4SPL", "message": ["dsLk1OmA", "h2Qh61qR", "HZSJ7zuR"]}, {"language": "IQkp8sDq", "message": ["GhAafPL7", "4MbUeL3f", "mkfLkSnB"]}], "isCustomRegex": false, "letterCase": "eewPfmUz", "maxLength": 64, "maxRepeatingAlphaNum": 65, "maxRepeatingSpecialCharacter": 40, "minCharType": 24, "minLength": 78, "profanityFilter": "yELXua5e", "regex": "5nknwCb5", "specialCharacterLocation": "AHh6GBSY", "specialCharacters": ["BaDoLZoe", "Ula0emRi", "z7ZZqDUy"]}}, {"field": "o0jzGN5F", "validation": {"allowAllSpecialCharacters": false, "allowDigit": false, "allowLetter": false, "allowSpace": false, "allowUnicode": false, "avatarConfig": {"allowedPrefixes": ["K5No9Y95", "8EKVgNPc", "Dl1tKbko"], "preferRegex": false, "regex": "umvHfZSw"}, "blockedWord": ["tF2tjwRJ", "iLSCJntJ", "ZrYmJagz"], "description": [{"language": "RLiHcrr2", "message": ["jksvwnlA", "urpR9CaH", "TqdaijWf"]}, {"language": "r7gCNK0p", "message": ["z6hCOKw4", "QbbfWkKf", "1la63y6s"]}, {"language": "oE5osC2Y", "message": ["4Tz0efeb", "Xis23RSI", "9A8EIRCB"]}], "isCustomRegex": true, "letterCase": "C6Tlvgzi", "maxLength": 15, "maxRepeatingAlphaNum": 1, "maxRepeatingSpecialCharacter": 33, "minCharType": 26, "minLength": 33, "profanityFilter": "0VEPg4h5", "regex": "TPG4WVeh", "specialCharacterLocation": "NMWWGkwe", "specialCharacters": ["tz8bTRrq", "Bad3WeDZ", "PSBhChmp"]}}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateInputValidations \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 113 'AdminUpdateInputValidations' test.out

#- 114 AdminResetInputValidations
$CLI_EXE \
    --sn iam \
    --op AdminResetInputValidations \
    --field '8fjcF9FT' \
    > test.out 2>&1
eval_tap $? 114 'AdminResetInputValidations' test.out

#- 115 ListAdminsV3
$CLI_EXE \
    --sn iam \
    --op ListAdminsV3 \
    --namespace $AB_NAMESPACE \
    --after 'ppiNitbv' \
    --before 'lyC78yfr' \
    --endDate 'qO3QDgS0' \
    --limit '34' \
    --query 'bUwHiLF2' \
    --roleId 'qRgxapwr' \
    --startDate 'PMwgptBa' \
    > test.out 2>&1
eval_tap $? 115 'ListAdminsV3' test.out

#- 116 AdminGetAgeRestrictionStatusV3
$CLI_EXE \
    --sn iam \
    --op AdminGetAgeRestrictionStatusV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 116 'AdminGetAgeRestrictionStatusV3' test.out

#- 117 AdminUpdateAgeRestrictionConfigV3
# body param: body
echo '{"ageRestriction": 14, "enable": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateAgeRestrictionConfigV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 117 'AdminUpdateAgeRestrictionConfigV3' test.out

#- 118 AdminGetListCountryAgeRestrictionV3
$CLI_EXE \
    --sn iam \
    --op AdminGetListCountryAgeRestrictionV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 118 'AdminGetListCountryAgeRestrictionV3' test.out

#- 119 AdminUpdateCountryAgeRestrictionV3
# body param: body
echo '{"ageRestriction": 72}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateCountryAgeRestrictionV3 \
    --countryCode 'OVtBEN3H' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 119 'AdminUpdateCountryAgeRestrictionV3' test.out

#- 120 AdminGetBannedUsersV3
$CLI_EXE \
    --sn iam \
    --op AdminGetBannedUsersV3 \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --banType '0zhtul0j' \
    --limit '22' \
    --offset '13' \
    > test.out 2>&1
eval_tap $? 120 'AdminGetBannedUsersV3' test.out

#- 121 AdminBanUserBulkV3
# body param: body
echo '{"ban": "oTB1vY9T", "comment": "YXSzlMHR", "endDate": "0QnrJJev", "reason": "TZp5L5Cn", "skipNotif": true, "userIds": ["rlbI5p4m", "iH7s3TpV", "srartmnU"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBanUserBulkV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 121 'AdminBanUserBulkV3' test.out

#- 122 AdminUnbanUserBulkV3
# body param: body
echo '{"bans": [{"banId": "wqXZn0gw", "userId": "tR7hsXos"}, {"banId": "EPIkKwV7", "userId": "ePiyh1Kc"}, {"banId": "qfovSvW0", "userId": "oMuFWKjD"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUnbanUserBulkV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 122 'AdminUnbanUserBulkV3' test.out

#- 123 AdminGetBansTypeWithNamespaceV3
$CLI_EXE \
    --sn iam \
    --op AdminGetBansTypeWithNamespaceV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 123 'AdminGetBansTypeWithNamespaceV3' test.out

#- 124 AdminGetClientsByNamespaceV3
$CLI_EXE \
    --sn iam \
    --op AdminGetClientsByNamespaceV3 \
    --namespace $AB_NAMESPACE \
    --clientId '1g1ff4VG' \
    --clientName 'MYHMuRRN' \
    --clientType '5zeo8WP4' \
    --limit '42' \
    --offset '17' \
    --skipLoginQueue 'false' \
    > test.out 2>&1
eval_tap $? 124 'AdminGetClientsByNamespaceV3' test.out

#- 125 AdminBulkUpdateClientsV3
# body param: body
echo '{"clientIds": ["ccqJGacn", "gaqCra4c", "1gp5JJ7Q"], "clientUpdateRequest": {"audiences": ["SzbFvhJ0", "DgrqmAlK", "5mUapdRK"], "baseUri": "M14FAWkL", "clientName": "tNKedN2e", "clientPermissions": [{"action": 6, "resource": "X3gRECPE", "schedAction": 40, "schedCron": "zUVSsXc6", "schedRange": ["AFhVBBeg", "tYylgQuc", "m33W1x4o"]}, {"action": 8, "resource": "w8HA0WkS", "schedAction": 26, "schedCron": "HT2hLg4f", "schedRange": ["ASGvMglz", "WfDGojyl", "Ef4TY3ia"]}, {"action": 58, "resource": "2V6KJlf8", "schedAction": 83, "schedCron": "jpqDXrmF", "schedRange": ["qzqvA86b", "rhDrxTsZ", "dsLIPHKc"]}], "clientPlatform": "5MIzwrvi", "deletable": true, "description": "4MwhNqyA", "modulePermissions": [{"moduleId": "r0jzd03f", "selectedGroups": [{"groupId": "3YG11zEu", "selectedActions": [4, 81, 85]}, {"groupId": "i64JTNqQ", "selectedActions": [78, 35, 2]}, {"groupId": "TZ2PxdIL", "selectedActions": [31, 78, 72]}]}, {"moduleId": "mDqKJfJL", "selectedGroups": [{"groupId": "Fn33ox08", "selectedActions": [39, 36, 78]}, {"groupId": "SpbAcXI3", "selectedActions": [34, 83, 0]}, {"groupId": "59UD0xSZ", "selectedActions": [7, 86, 40]}]}, {"moduleId": "WXwAOJ9G", "selectedGroups": [{"groupId": "DgALXj6O", "selectedActions": [45, 33, 1]}, {"groupId": "vwB0sXTt", "selectedActions": [57, 50, 25]}, {"groupId": "V2PCY37N", "selectedActions": [51, 28, 77]}]}], "namespace": "GZLSFF5z", "oauthAccessTokenExpiration": 50, "oauthAccessTokenExpirationTimeUnit": "XNiETZz1", "oauthRefreshTokenExpiration": 8, "oauthRefreshTokenExpirationTimeUnit": "ZXeMJ7sV", "redirectUri": "6R2jgLx5", "scopes": ["QR7aa9rG", "4aCWtukV", "3emPWrnr"], "skipLoginQueue": false, "twoFactorEnabled": true}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBulkUpdateClientsV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 125 'AdminBulkUpdateClientsV3' test.out

#- 126 AdminCreateClientV3
# body param: body
echo '{"audiences": ["Begxm19q", "xAIXqT8m", "P4ee6gIM"], "baseUri": "JiBSOCq9", "clientId": "y4wFOUl1", "clientName": "lN5v9c0d", "clientPermissions": [{"action": 81, "resource": "lLQaCvVW", "schedAction": 77, "schedCron": "b74l3M4f", "schedRange": ["Pyrfj3nJ", "gUZ26CL5", "QsOW54c0"]}, {"action": 90, "resource": "fXqevOy3", "schedAction": 44, "schedCron": "OweQlUO2", "schedRange": ["Y54eYmz5", "JJtSuLb6", "ur7Ibv6M"]}, {"action": 97, "resource": "QCYJL7su", "schedAction": 2, "schedCron": "VL6gpvV9", "schedRange": ["lXLSp0dT", "iX9gDu16", "PKbmPzC9"]}], "clientPlatform": "Swg6DGQR", "deletable": false, "description": "HQQ0BK1L", "modulePermissions": [{"moduleId": "buhvJAMR", "selectedGroups": [{"groupId": "GsBkGCXP", "selectedActions": [24, 26, 82]}, {"groupId": "4Z2gEKQV", "selectedActions": [99, 98, 59]}, {"groupId": "2WenMJQM", "selectedActions": [36, 8, 23]}]}, {"moduleId": "2EPZZahv", "selectedGroups": [{"groupId": "aRJzVVjB", "selectedActions": [61, 87, 21]}, {"groupId": "nMyC56hN", "selectedActions": [67, 90, 43]}, {"groupId": "enu9LKMy", "selectedActions": [20, 37, 41]}]}, {"moduleId": "DTH3ea9O", "selectedGroups": [{"groupId": "Eqozagrv", "selectedActions": [3, 62, 90]}, {"groupId": "YfLi5Mvx", "selectedActions": [19, 56, 52]}, {"groupId": "FhbAOv7M", "selectedActions": [87, 91, 47]}]}], "namespace": "obuVwftd", "oauthAccessTokenExpiration": 13, "oauthAccessTokenExpirationTimeUnit": "nJpjZA7S", "oauthClientType": "aMBbeDZs", "oauthRefreshTokenExpiration": 2, "oauthRefreshTokenExpirationTimeUnit": "nYNJcpum", "parentNamespace": "zsjjpBEz", "redirectUri": "ut1F86Q3", "scopes": ["elwSRVv0", "Exchq53N", "o8ff0VPo"], "secret": "z3QEoeNp", "skipLoginQueue": false, "twoFactorEnabled": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminCreateClientV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 126 'AdminCreateClientV3' test.out

#- 127 AdminGetClientsbyNamespacebyIDV3
$CLI_EXE \
    --sn iam \
    --op AdminGetClientsbyNamespacebyIDV3 \
    --clientId '4lh49OF3' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 127 'AdminGetClientsbyNamespacebyIDV3' test.out

#- 128 AdminDeleteClientV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteClientV3 \
    --clientId 'S6swAF3T' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 128 'AdminDeleteClientV3' test.out

#- 129 AdminUpdateClientV3
# body param: body
echo '{"audiences": ["tuBVNEYK", "Qars0KiW", "fSyeXomy"], "baseUri": "zyWMhrTM", "clientName": "EMoS1SgT", "clientPermissions": [{"action": 53, "resource": "O9TngwA3", "schedAction": 80, "schedCron": "rjdXwDn4", "schedRange": ["wMNKnA6g", "Cv6sAnn2", "aBnL1oyO"]}, {"action": 7, "resource": "n0dkHlgI", "schedAction": 96, "schedCron": "kQwZg1uP", "schedRange": ["vyhMUkiy", "u56WZH2D", "bGU72JYL"]}, {"action": 70, "resource": "wNhPGuUH", "schedAction": 23, "schedCron": "COpHrtfo", "schedRange": ["cwt7GQqB", "7ekhbY9d", "J9k0U9ye"]}], "clientPlatform": "qn9sqKkT", "deletable": false, "description": "XuNN3S4P", "modulePermissions": [{"moduleId": "JBiKbXnF", "selectedGroups": [{"groupId": "KwvKghfy", "selectedActions": [1, 72, 42]}, {"groupId": "RaSMbz2Q", "selectedActions": [52, 32, 59]}, {"groupId": "rwXFvsOd", "selectedActions": [81, 68, 97]}]}, {"moduleId": "PVB70lua", "selectedGroups": [{"groupId": "hFbLeMlp", "selectedActions": [62, 49, 31]}, {"groupId": "4SyZ9KqW", "selectedActions": [20, 2, 71]}, {"groupId": "zNCkPXI7", "selectedActions": [20, 41, 69]}]}, {"moduleId": "mlt4GtI7", "selectedGroups": [{"groupId": "jykkh3Dk", "selectedActions": [93, 55, 73]}, {"groupId": "HezNqSBR", "selectedActions": [25, 61, 35]}, {"groupId": "fQUH9R5u", "selectedActions": [40, 3, 38]}]}], "namespace": "BgRhbeZI", "oauthAccessTokenExpiration": 88, "oauthAccessTokenExpirationTimeUnit": "FW3zpvao", "oauthRefreshTokenExpiration": 96, "oauthRefreshTokenExpirationTimeUnit": "tvGV5yZd", "redirectUri": "d7TpqFeR", "scopes": ["bX5Aavjp", "5A8wphix", "ltNYtWLY"], "skipLoginQueue": true, "twoFactorEnabled": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateClientV3 \
    --clientId 'fvMrQUZK' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 129 'AdminUpdateClientV3' test.out

#- 130 AdminUpdateClientPermissionV3
# body param: body
echo '{"permissions": [{"action": 38, "resource": "gyXdSJma"}, {"action": 77, "resource": "Q922o1XV"}, {"action": 34, "resource": "AB9saN4m"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateClientPermissionV3 \
    --clientId 'rdW7sCjQ' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 130 'AdminUpdateClientPermissionV3' test.out

#- 131 AdminAddClientPermissionsV3
# body param: body
echo '{"permissions": [{"action": 39, "resource": "Xb6gv2l9"}, {"action": 82, "resource": "4fTG2pRg"}, {"action": 86, "resource": "IdHGC0cN"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddClientPermissionsV3 \
    --clientId 'cPHE93cE' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 131 'AdminAddClientPermissionsV3' test.out

#- 132 AdminDeleteClientPermissionV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteClientPermissionV3 \
    --action '10' \
    --clientId 'eZZsn05w' \
    --namespace $AB_NAMESPACE \
    --resource 'XMWcCvJg' \
    > test.out 2>&1
eval_tap $? 132 'AdminDeleteClientPermissionV3' test.out

#- 133 AdminGetConfigValueV3
$CLI_EXE \
    --sn iam \
    --op AdminGetConfigValueV3 \
    --configKey 'RQMnzHwl' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 133 'AdminGetConfigValueV3' test.out

#- 134 AdminGetCountryListV3
$CLI_EXE \
    --sn iam \
    --op AdminGetCountryListV3 \
    --namespace $AB_NAMESPACE \
    --filterBlacklist 'true' \
    > test.out 2>&1
eval_tap $? 134 'AdminGetCountryListV3' test.out

#- 135 AdminGetCountryBlacklistV3
$CLI_EXE \
    --sn iam \
    --op AdminGetCountryBlacklistV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 135 'AdminGetCountryBlacklistV3' test.out

#- 136 AdminAddCountryBlacklistV3
# body param: body
echo '{"blacklist": ["jV5OMDp4", "nt66y6lp", "BkBz8Z2a"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddCountryBlacklistV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 136 'AdminAddCountryBlacklistV3' test.out

#- 137 AdminGetLoginAllowlistV3
$CLI_EXE \
    --sn iam \
    --op AdminGetLoginAllowlistV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 137 'AdminGetLoginAllowlistV3' test.out

#- 138 AdminUpdateLoginAllowlistV3
# body param: body
echo '{"active": true, "roleIds": ["eRNMypPX", "zfIqltyW", "tsuHh7cu"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateLoginAllowlistV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 138 'AdminUpdateLoginAllowlistV3' test.out

#- 139 RetrieveAllThirdPartyLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op RetrieveAllThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 139 'RetrieveAllThirdPartyLoginPlatformCredentialV3' test.out

#- 140 RetrieveAllActiveThirdPartyLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op RetrieveAllActiveThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 140 'RetrieveAllActiveThirdPartyLoginPlatformCredentialV3' test.out

#- 141 RetrieveAllSSOLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op RetrieveAllSSOLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --limit '5' \
    --offset '100' \
    > test.out 2>&1
eval_tap $? 141 'RetrieveAllSSOLoginPlatformCredentialV3' test.out

#- 142 RetrieveThirdPartyLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op RetrieveThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --platformId 't1JUi95D' \
    > test.out 2>&1
eval_tap $? 142 'RetrieveThirdPartyLoginPlatformCredentialV3' test.out

#- 143 AddThirdPartyLoginPlatformCredentialV3
# body param: body
echo '{"ACSURL": "XHGCee1p", "AWSCognitoRegion": "Yy8zkZ4a", "AWSCognitoUserPool": "2yDZUukx", "AllowedClients": ["f5NzIFhv", "vVA5TUA2", "pDGuviYx"], "AppId": "z9FJmDoU", "AuthorizationEndpoint": "LrQJnPqb", "ClientId": "IVJ89EwQ", "EmptyStrFieldList": ["o1aRTCzB", "tOhivdLq", "Z4XcKvLB"], "EnableServerLicenseValidation": true, "Environment": "eNPNxAd3", "FederationMetadataURL": "7QChIxDT", "GenericOauthFlow": false, "IncludePUID": false, "IsActive": true, "Issuer": "7YWErLIV", "JWKSEndpoint": "LY0WCM9q", "KeyID": "RI5Xb2a8", "LogoURL": "iO3RYRVR", "NetflixCertificates": {"encryptedPrivateKey": "Wl3cC5Hj", "encryptedPrivateKeyName": "EtZXqDic", "publicCertificate": "UU6trDWK", "publicCertificateName": "51MMI3ts", "rootCertificate": "ZQAxwExT", "rootCertificateName": "pR5HCPCB"}, "OrganizationId": "wAgsaWbI", "PlatformName": "ggbDeJZW", "RedirectUri": "GmleR5fw", "RegisteredDomains": [{"affectedClientIDs": ["a7WclD6k", "Bu6ywaaz", "aYoeZyRQ"], "domain": "gSgyLu8O", "namespaces": ["1loYUDxc", "sssQ2Fz6", "OCVvDigj"], "roleId": "oyW2pju5"}, {"affectedClientIDs": ["FoudEU2f", "FcwoVIiC", "ALPVNaTD"], "domain": "qSpu6AXY", "namespaces": ["9Wjqixia", "KdWN8qKF", "kLbZGc9r"], "roleId": "NuW8A43d"}, {"affectedClientIDs": ["BZvEZtbx", "0j2jfYz9", "A5m8EcPC"], "domain": "yARin8sh", "namespaces": ["gP4jJ4p3", "1VN2TRbQ", "NsrrbbIi"], "roleId": "Ed9m7ZkY"}], "Secret": "hiOqGc3r", "TeamID": "AbqdoYtL", "TokenAuthenticationType": "k9oQHnRm", "TokenClaimsMapping": {"4N9USAk0": "TSDlWdNK", "Ao53bUP7": "MRdKkmzZ", "AbPkhMMo": "VE2P0rcJ"}, "TokenEndpoint": "7qauaicw", "UserInfoEndpoint": "qo1XI9hk", "UserInfoHTTPMethod": "inK0cbPv", "scopes": ["NAlozMDE", "JYkG9PHD", "uyYpyeJP"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AddThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'R2iAjR2A' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 143 'AddThirdPartyLoginPlatformCredentialV3' test.out

#- 144 DeleteThirdPartyLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op DeleteThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'yaBCWxP3' \
    > test.out 2>&1
eval_tap $? 144 'DeleteThirdPartyLoginPlatformCredentialV3' test.out

#- 145 UpdateThirdPartyLoginPlatformCredentialV3
# body param: body
echo '{"ACSURL": "W4zZNeK3", "AWSCognitoRegion": "7y4uSiNS", "AWSCognitoUserPool": "oaZOSGQq", "AllowedClients": ["frGneIYU", "lO5lWzby", "Uaix1FWY"], "AppId": "zGDmB2DG", "AuthorizationEndpoint": "ZoOm7LAF", "ClientId": "CN4lxcas", "EmptyStrFieldList": ["YWYSCetL", "Bh5FpSuJ", "hgML84lj"], "EnableServerLicenseValidation": false, "Environment": "4tuhpQgr", "FederationMetadataURL": "1MqbskNg", "GenericOauthFlow": false, "IncludePUID": false, "IsActive": false, "Issuer": "EcoKjSgF", "JWKSEndpoint": "IAiPh6fJ", "KeyID": "PSaCDJRl", "LogoURL": "18xBGDPC", "NetflixCertificates": {"encryptedPrivateKey": "A23YFiob", "encryptedPrivateKeyName": "FfHkcNZs", "publicCertificate": "bfxs1qvv", "publicCertificateName": "yNiirDod", "rootCertificate": "Q0vTJDoc", "rootCertificateName": "TGe7ZsCJ"}, "OrganizationId": "WrcEkKRN", "PlatformName": "ukNud7oV", "RedirectUri": "mH4t69sz", "RegisteredDomains": [{"affectedClientIDs": ["Ls9avYsL", "8K92GJUD", "3G9wq1DO"], "domain": "uyqiPRHQ", "namespaces": ["CillclpG", "isqzdZGO", "vHt7ArPk"], "roleId": "S7HhnUA2"}, {"affectedClientIDs": ["J7SHv04o", "RKKPi1TL", "Prfbf8gb"], "domain": "LLLjo23P", "namespaces": ["sjHKpL58", "LY1n9ZvJ", "yqXeIyah"], "roleId": "oeXachjZ"}, {"affectedClientIDs": ["6CeYEAc8", "N2CfKUGx", "d8y6MNpZ"], "domain": "I5v9Jq8H", "namespaces": ["QbfEjBzp", "PLH2HjEG", "OA5cv6p5"], "roleId": "39PrczQK"}], "Secret": "hrGYaiBf", "TeamID": "9NOF7LYT", "TokenAuthenticationType": "aqOCFHpL", "TokenClaimsMapping": {"TiIXdxEi": "vHe7Um1Y", "EGcj1Lj4": "XOuUdiN7", "jfwJqNlw": "Ep906MYh"}, "TokenEndpoint": "tM1E96Ck", "UserInfoEndpoint": "Ql0n49ij", "UserInfoHTTPMethod": "PwV0lYqx", "scopes": ["ixvBJDBo", "5jjBuNai", "3tj8QzUL"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op UpdateThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --platformId '5rJyveyq' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 145 'UpdateThirdPartyLoginPlatformCredentialV3' test.out

#- 146 UpdateThirdPartyLoginPlatformDomainV3
# body param: body
echo '{"affectedClientIDs": ["UXVDvIyw", "ElyKBqCA", "YjoBboHF"], "assignedNamespaces": ["NW9QNh8V", "YUoAUDj6", "1ORw9BaE"], "domain": "R4PZu0hC", "roleId": "peK2Pm8O"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op UpdateThirdPartyLoginPlatformDomainV3 \
    --namespace $AB_NAMESPACE \
    --platformId '1WXbYJkD' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 146 'UpdateThirdPartyLoginPlatformDomainV3' test.out

#- 147 DeleteThirdPartyLoginPlatformDomainV3
# body param: body
echo '{"domain": "aA4xjOfk"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op DeleteThirdPartyLoginPlatformDomainV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'In5qD5ba' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 147 'DeleteThirdPartyLoginPlatformDomainV3' test.out

#- 148 RetrieveSSOLoginPlatformCredential
$CLI_EXE \
    --sn iam \
    --op RetrieveSSOLoginPlatformCredential \
    --namespace $AB_NAMESPACE \
    --platformId 'wy3TJmto' \
    > test.out 2>&1
eval_tap $? 148 'RetrieveSSOLoginPlatformCredential' test.out

#- 149 AddSSOLoginPlatformCredential
# body param: body
echo '{"acsUrl": "g5lp4EoO", "apiKey": "3f6eOaZA", "appId": "j9erHPt5", "federationMetadataUrl": "yZmjbRoT", "isActive": false, "redirectUri": "mXNjvufr", "secret": "U5WEwDog", "ssoUrl": "nqBr08lV"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AddSSOLoginPlatformCredential \
    --namespace $AB_NAMESPACE \
    --platformId 'xm7Dxeev' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 149 'AddSSOLoginPlatformCredential' test.out

#- 150 DeleteSSOLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op DeleteSSOLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'DCoqgh3r' \
    > test.out 2>&1
eval_tap $? 150 'DeleteSSOLoginPlatformCredentialV3' test.out

#- 151 UpdateSSOPlatformCredential
# body param: body
echo '{"acsUrl": "qQ3wrOKB", "apiKey": "dk7brZLW", "appId": "o3TjRjDe", "federationMetadataUrl": "a2nRzbtr", "isActive": true, "redirectUri": "h0VYVaqm", "secret": "M99Phkjy", "ssoUrl": "gnJDfK7J"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op UpdateSSOPlatformCredential \
    --namespace $AB_NAMESPACE \
    --platformId 'DcsofyMM' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 151 'UpdateSSOPlatformCredential' test.out

#- 152 AdminListUserIDByPlatformUserIDsV3
# body param: body
echo '{"platformUserIds": ["LDgNob3w", "75BRJliu", "HEV939YR"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminListUserIDByPlatformUserIDsV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'SYx9XzUb' \
    --rawPID 'false' \
    --rawPUID 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 152 'AdminListUserIDByPlatformUserIDsV3' test.out

#- 153 AdminGetUserByPlatformUserIDV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserByPlatformUserIDV3 \
    --namespace $AB_NAMESPACE \
    --platformId '0GpTtTVf' \
    --platformUserId 'IlvuCKjq' \
    > test.out 2>&1
eval_tap $? 153 'AdminGetUserByPlatformUserIDV3' test.out

#- 154 AdminGetProfileUpdateStrategyV3
$CLI_EXE \
    --sn iam \
    --op AdminGetProfileUpdateStrategyV3 \
    --namespace $AB_NAMESPACE \
    --field 'display_name' \
    > test.out 2>&1
eval_tap $? 154 'AdminGetProfileUpdateStrategyV3' test.out

#- 155 AdminUpdateProfileUpdateStrategyV3
# body param: body
echo '{"config": {"minimumAllowedInterval": 47}, "type": "LWeepez9"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateProfileUpdateStrategyV3 \
    --namespace $AB_NAMESPACE \
    --field 'dob' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 155 'AdminUpdateProfileUpdateStrategyV3' test.out

#- 156 AdminGetRoleOverrideConfigV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleOverrideConfigV3 \
    --namespace $AB_NAMESPACE \
    --identity 'VIEW_ONLY' \
    > test.out 2>&1
eval_tap $? 156 'AdminGetRoleOverrideConfigV3' test.out

#- 157 AdminUpdateRoleOverrideConfigV3
# body param: body
echo '{"additions": [{"actions": [38, 95, 87], "resource": "6b7kzNHW"}, {"actions": [99, 39, 88], "resource": "kwB0O2wu"}, {"actions": [39, 61, 64], "resource": "6W2puOMG"}], "exclusions": [{"actions": [44, 56, 60], "resource": "0f8W5a9Z"}, {"actions": [41, 21, 10], "resource": "cNblbrGp"}, {"actions": [47, 19, 97], "resource": "JkCXAqoY"}], "overrides": [{"actions": [83, 81, 23], "resource": "uWWgAk02"}, {"actions": [90, 71, 25], "resource": "Kw9Hmlno"}, {"actions": [74, 2, 77], "resource": "ySqEHwNs"}], "replacements": [{"replacement": {"actions": [1, 50, 67], "resource": "oUMephwl"}, "target": "egL0M9jE"}, {"replacement": {"actions": [32, 54, 98], "resource": "F808TptT"}, "target": "3o3rFqjx"}, {"replacement": {"actions": [40, 36, 59], "resource": "TKYh7B6C"}, "target": "Rb9WTsvx"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateRoleOverrideConfigV3 \
    --namespace $AB_NAMESPACE \
    --identity 'USER' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 157 'AdminUpdateRoleOverrideConfigV3' test.out

#- 158 AdminGetRoleSourceV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleSourceV3 \
    --namespace $AB_NAMESPACE \
    --identity 'VIEW_ONLY' \
    > test.out 2>&1
eval_tap $? 158 'AdminGetRoleSourceV3' test.out

#- 159 AdminChangeRoleOverrideConfigStatusV3
# body param: body
echo '{"active": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminChangeRoleOverrideConfigStatusV3 \
    --namespace $AB_NAMESPACE \
    --identity 'VIEW_ONLY' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 159 'AdminChangeRoleOverrideConfigStatusV3' test.out

#- 160 AdminGetRoleNamespacePermissionV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleNamespacePermissionV3 \
    --namespace $AB_NAMESPACE \
    --roleId 'Zq6ELsLO' \
    > test.out 2>&1
eval_tap $? 160 'AdminGetRoleNamespacePermissionV3' test.out

#- 161 GetAdminUsersByRoleIdV3
$CLI_EXE \
    --sn iam \
    --op GetAdminUsersByRoleIdV3 \
    --namespace $AB_NAMESPACE \
    --roleId '9U5gn0Zb' \
    --after '22' \
    --before '88' \
    --limit '10' \
    > test.out 2>&1
eval_tap $? 161 'GetAdminUsersByRoleIdV3' test.out

#- 162 AdminGetUserByEmailAddressV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserByEmailAddressV3 \
    --namespace $AB_NAMESPACE \
    --emailAddress '5YgVuIFB' \
    > test.out 2>&1
eval_tap $? 162 'AdminGetUserByEmailAddressV3' test.out

#- 163 AdminBulkUpdateUsersV3
# body param: body
echo '{"updateRequest": {"skipLoginQueue": false}, "userIds": ["NBD0sO5L", "n2oKzGYG", "YroQlLPB"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBulkUpdateUsersV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 163 'AdminBulkUpdateUsersV3' test.out

#- 164 AdminGetBulkUserBanV3
# body param: body
echo '{"bulkUserId": ["3Iej0A6X", "N1IPEyKX", "kPIYOb9K"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminGetBulkUserBanV3 \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --banType 'x4hmtbXR' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 164 'AdminGetBulkUserBanV3' test.out

#- 165 AdminListUserIDByUserIDsV3
# body param: body
echo '{"userIds": ["bbgA6sGO", "Tphckan2", "JoffWjLE"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminListUserIDByUserIDsV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 165 'AdminListUserIDByUserIDsV3' test.out

#- 166 AdminBulkGetUsersPlatform
# body param: body
echo '{"userIds": ["1hYDgnyv", "aZzgWnA5", "nsVD91iW"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBulkGetUsersPlatform \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 166 'AdminBulkGetUsersPlatform' test.out

#- 167 AdminInviteUserV3
# body param: body
echo '{"emailAddresses": ["k2j1EiZ7", "S0CvyYE6", "4ZiWkBRu"], "isAdmin": false, "languageTag": "rlKBkfkw", "namespace": "wVyDdCZB", "roles": ["TbOmBMj1", "pyVtgu9j", "bkSzJCIo"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminInviteUserV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 167 'AdminInviteUserV3' test.out

#- 168 AdminQueryThirdPlatformLinkHistoryV3
$CLI_EXE \
    --sn iam \
    --op AdminQueryThirdPlatformLinkHistoryV3 \
    --namespace $AB_NAMESPACE \
    --limit '25' \
    --offset '82' \
    --platformUserId 'mgTdwmbp' \
    --platformId 'SWHqvEbs' \
    > test.out 2>&1
eval_tap $? 168 'AdminQueryThirdPlatformLinkHistoryV3' test.out

#- 169 AdminListUsersV3
$CLI_EXE \
    --sn iam \
    --op AdminListUsersV3 \
    --namespace $AB_NAMESPACE \
    --limit '89' \
    --offset '23' \
    > test.out 2>&1
eval_tap $? 169 'AdminListUsersV3' test.out

#- 170 AdminSearchUserV3
$CLI_EXE \
    --sn iam \
    --op AdminSearchUserV3 \
    --namespace $AB_NAMESPACE \
    --by 'qelmA9jt' \
    --endDate 'Yb5yW1cb' \
    --includeTotal 'true' \
    --limit '20' \
    --offset '96' \
    --platformBy 'iClS9A1P' \
    --platformId 'k79JgFQS' \
    --query 'uqfidsMP' \
    --roleIds 'T9lGIJiW' \
    --skipLoginQueue 'true' \
    --startDate 'pduu8RJL' \
    --testAccount 'true' \
    > test.out 2>&1
eval_tap $? 170 'AdminSearchUserV3' test.out

#- 171 AdminGetBulkUserByEmailAddressV3
# body param: body
echo '{"listEmailAddressRequest": ["49OxwvTr", "tslFf9LG", "cpGNbTcs"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminGetBulkUserByEmailAddressV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 171 'AdminGetBulkUserByEmailAddressV3' test.out

#- 172 AdminGetUserByUserIdV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserByUserIdV3 \
    --namespace $AB_NAMESPACE \
    --userId '71a9VubQ' \
    > test.out 2>&1
eval_tap $? 172 'AdminGetUserByUserIdV3' test.out

#- 173 AdminUpdateUserV3
# body param: body
echo '{"avatarUrl": "vg4v8emS", "country": "ZXAHXEXw", "dateOfBirth": "kp4L4CVk", "displayName": "ZJ3TdkKf", "languageTag": "FWRa5CNE", "skipLoginQueue": true, "uniqueDisplayName": "1Izx2VP1", "userName": "wJcwiycs"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserV3 \
    --namespace $AB_NAMESPACE \
    --userId 'fu18XXj3' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 173 'AdminUpdateUserV3' test.out

#- 174 AdminGetUserBanV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserBanV3 \
    --namespace $AB_NAMESPACE \
    --userId 'a9GHEuYi' \
    --activeOnly 'false' \
    --after 'BSMf3JTV' \
    --before 'sL6MkeKd' \
    --limit '52' \
    > test.out 2>&1
eval_tap $? 174 'AdminGetUserBanV3' test.out

#- 175 AdminBanUserV3
# body param: body
echo '{"ban": "bQCimFxO", "comment": "bWvg3r5d", "endDate": "EQAhUa34", "reason": "hz5FKiou", "skipNotif": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBanUserV3 \
    --namespace $AB_NAMESPACE \
    --userId 'EiGA7Aa7' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 175 'AdminBanUserV3' test.out

#- 176 AdminGetUserBanSummaryV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserBanSummaryV3 \
    --namespace $AB_NAMESPACE \
    --userId 'yhJxDy3Q' \
    > test.out 2>&1
eval_tap $? 176 'AdminGetUserBanSummaryV3' test.out

#- 177 AdminUpdateUserBanV3
# body param: body
echo '{"enabled": false, "skipNotif": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserBanV3 \
    --banId 'pFb38zAR' \
    --namespace $AB_NAMESPACE \
    --userId 'myPY66G6' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 177 'AdminUpdateUserBanV3' test.out

#- 178 AdminSendVerificationCodeV3
# body param: body
echo '{"context": "B3Un1XYu", "emailAddress": "f1VAdHPm", "languageTag": "6ULFALIH", "upgradeToken": "MIZSbVzw"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminSendVerificationCodeV3 \
    --namespace $AB_NAMESPACE \
    --userId 'E3hC1TGr' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 178 'AdminSendVerificationCodeV3' test.out

#- 179 AdminVerifyAccountV3
# body param: body
echo '{"Code": "CaY4vAVp", "ContactType": "70vll8Se", "LanguageTag": "MXwvXQ7q", "validateOnly": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminVerifyAccountV3 \
    --namespace $AB_NAMESPACE \
    --userId 'Ml3qwqkp' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 179 'AdminVerifyAccountV3' test.out

#- 180 GetUserVerificationCode
$CLI_EXE \
    --sn iam \
    --op GetUserVerificationCode \
    --namespace $AB_NAMESPACE \
    --userId 'SBRxMP2w' \
    > test.out 2>&1
eval_tap $? 180 'GetUserVerificationCode' test.out

#- 181 AdminGetUserDeletionStatusV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserDeletionStatusV3 \
    --namespace $AB_NAMESPACE \
    --userId 'YbpRaDtj' \
    > test.out 2>&1
eval_tap $? 181 'AdminGetUserDeletionStatusV3' test.out

#- 182 AdminUpdateUserDeletionStatusV3
# body param: body
echo '{"deletionDate": 87, "enabled": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserDeletionStatusV3 \
    --namespace $AB_NAMESPACE \
    --userId 'oT4fg2vw' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 182 'AdminUpdateUserDeletionStatusV3' test.out

#- 183 AdminListUserAllPlatformAccountsDistinctV3
$CLI_EXE \
    --sn iam \
    --op AdminListUserAllPlatformAccountsDistinctV3 \
    --namespace $AB_NAMESPACE \
    --userId 'PXEMK2Ny' \
    > test.out 2>&1
eval_tap $? 183 'AdminListUserAllPlatformAccountsDistinctV3' test.out

#- 184 AdminUpgradeHeadlessAccountV3
# body param: body
echo '{"code": "xYPuQo0r", "country": "JiSTu7i3", "dateOfBirth": "JZKem2Ox", "displayName": "BpzgnNnm", "emailAddress": "WhsJ5a6t", "password": "JUuu4F7A", "uniqueDisplayName": "2rFxNxhS", "validateOnly": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpgradeHeadlessAccountV3 \
    --namespace $AB_NAMESPACE \
    --userId 'UJyXsSxh' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 184 'AdminUpgradeHeadlessAccountV3' test.out

#- 185 AdminDeleteUserInformationV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserInformationV3 \
    --namespace $AB_NAMESPACE \
    --userId 'PKGYZN4v' \
    > test.out 2>&1
eval_tap $? 185 'AdminDeleteUserInformationV3' test.out

#- 186 AdminGetUserLoginHistoriesV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserLoginHistoriesV3 \
    --namespace $AB_NAMESPACE \
    --userId 'jclBUStf' \
    --after '0.3227009137651937' \
    --before '0.7977560544774603' \
    --limit '6' \
    > test.out 2>&1
eval_tap $? 186 'AdminGetUserLoginHistoriesV3' test.out

#- 187 AdminResetPasswordV3
# body param: body
echo '{"languageTag": "3I6h70Ng", "mfaToken": "lOJxupfd", "newPassword": "r9r5XCr7", "oldPassword": "cz0u8LtE"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminResetPasswordV3 \
    --namespace $AB_NAMESPACE \
    --userId 'Uc9SFhcV' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 187 'AdminResetPasswordV3' test.out

#- 188 AdminUpdateUserPermissionV3
# body param: body
echo '{"Permissions": [{"Action": 66, "Resource": "MMPWn3Nh", "SchedAction": 2, "SchedCron": "2MFUmCyq", "SchedRange": ["Px9dTgT1", "PCgVgtDw", "G5O12C58"]}, {"Action": 5, "Resource": "v01BFdMq", "SchedAction": 47, "SchedCron": "l0HIOjrd", "SchedRange": ["LU95rMre", "4Bofyn6E", "MDGZ7IQ8"]}, {"Action": 88, "Resource": "UlNTw6iY", "SchedAction": 7, "SchedCron": "2a44Bq32", "SchedRange": ["3mB4Rmcq", "H7sRQ3Ef", "3RvN5Vi9"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserPermissionV3 \
    --namespace $AB_NAMESPACE \
    --userId 'RrdLnoRG' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 188 'AdminUpdateUserPermissionV3' test.out

#- 189 AdminAddUserPermissionsV3
# body param: body
echo '{"Permissions": [{"Action": 6, "Resource": "jpdZ2DAs", "SchedAction": 70, "SchedCron": "wgH5Qm4v", "SchedRange": ["kXfIA8x5", "RqOG531y", "VmSY4J8G"]}, {"Action": 100, "Resource": "cEyR0UnU", "SchedAction": 47, "SchedCron": "XOrl29wV", "SchedRange": ["Gd3igip3", "LlneBNqi", "hba2ADxe"]}, {"Action": 90, "Resource": "vpv2xWUx", "SchedAction": 54, "SchedCron": "LYxM1fx0", "SchedRange": ["ZBIPluwr", "fUpCY7fh", "yFIv7Tqb"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddUserPermissionsV3 \
    --namespace $AB_NAMESPACE \
    --userId 'N3VZbc6x' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 189 'AdminAddUserPermissionsV3' test.out

#- 190 AdminDeleteUserPermissionBulkV3
# body param: body
echo '[{"Action": 37, "Resource": "QJZMFNrt"}, {"Action": 64, "Resource": "xflcGA2W"}, {"Action": 80, "Resource": "4UL6PA1Q"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserPermissionBulkV3 \
    --namespace $AB_NAMESPACE \
    --userId '0w5NpjSM' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 190 'AdminDeleteUserPermissionBulkV3' test.out

#- 191 AdminDeleteUserPermissionV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserPermissionV3 \
    --action '49' \
    --namespace $AB_NAMESPACE \
    --resource '6mLLVtBb' \
    --userId 'XAIRg0Wo' \
    > test.out 2>&1
eval_tap $? 191 'AdminDeleteUserPermissionV3' test.out

#- 192 AdminGetUserPlatformAccountsV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserPlatformAccountsV3 \
    --namespace $AB_NAMESPACE \
    --userId '0Y5ClSo0' \
    --after 'xCjxuYaw' \
    --before 'iBOUYLdJ' \
    --limit '50' \
    --platformId 'xayvnXkz' \
    --targetNamespace 'jEjcCuVR' \
    > test.out 2>&1
eval_tap $? 192 'AdminGetUserPlatformAccountsV3' test.out

#- 193 AdminListAllDistinctPlatformAccountsV3
$CLI_EXE \
    --sn iam \
    --op AdminListAllDistinctPlatformAccountsV3 \
    --namespace $AB_NAMESPACE \
    --userId '18gO76SO' \
    --status 'Ocb0afiZ' \
    > test.out 2>&1
eval_tap $? 193 'AdminListAllDistinctPlatformAccountsV3' test.out

#- 194 AdminGetListJusticePlatformAccounts
$CLI_EXE \
    --sn iam \
    --op AdminGetListJusticePlatformAccounts \
    --namespace $AB_NAMESPACE \
    --userId 'kCYaxAk2' \
    > test.out 2>&1
eval_tap $? 194 'AdminGetListJusticePlatformAccounts' test.out

#- 195 AdminGetUserMapping
$CLI_EXE \
    --sn iam \
    --op AdminGetUserMapping \
    --namespace $AB_NAMESPACE \
    --targetNamespace 'pWjntAzy' \
    --userId 'ic6sbWnm' \
    > test.out 2>&1
eval_tap $? 195 'AdminGetUserMapping' test.out

#- 196 AdminCreateJusticeUser
$CLI_EXE \
    --sn iam \
    --op AdminCreateJusticeUser \
    --namespace $AB_NAMESPACE \
    --targetNamespace 'dTNj3l2q' \
    --userId 'TCCbmoh5' \
    > test.out 2>&1
eval_tap $? 196 'AdminCreateJusticeUser' test.out

#- 197 AdminLinkPlatformAccount
# body param: body
echo '{"platformId": "2rJHnYNY", "platformUserId": "GlIeiMtU"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminLinkPlatformAccount \
    --namespace $AB_NAMESPACE \
    --userId 'ybHlQ4cb' \
    --skipConflict 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 197 'AdminLinkPlatformAccount' test.out

#- 198 AdminGetUserLinkHistoriesV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserLinkHistoriesV3 \
    --namespace $AB_NAMESPACE \
    --userId 'npVwJ9IY' \
    --platformId 'pyLJyctA' \
    > test.out 2>&1
eval_tap $? 198 'AdminGetUserLinkHistoriesV3' test.out

#- 199 AdminPlatformUnlinkV3
eval_tap 0 199 'AdminPlatformUnlinkV3 # SKIP deprecated' test.out

#- 200 AdminPlatformUnlinkAllV3
$CLI_EXE \
    --sn iam \
    --op AdminPlatformUnlinkAllV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'q5h7aAft' \
    --userId 'nuR46CXP' \
    > test.out 2>&1
eval_tap $? 200 'AdminPlatformUnlinkAllV3' test.out

#- 201 AdminPlatformLinkV3
$CLI_EXE \
    --sn iam \
    --op AdminPlatformLinkV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'aoNBcBPy' \
    --userId 'VdoMf1HP' \
    --ticket 'inKMPXzn' \
    > test.out 2>&1
eval_tap $? 201 'AdminPlatformLinkV3' test.out

#- 202 AdminDeleteUserLinkingHistoryByPlatformIDV3
eval_tap 0 202 'AdminDeleteUserLinkingHistoryByPlatformIDV3 # SKIP deprecated' test.out

#- 203 AdminDeleteUserLinkingRestrictionByPlatformIDV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserLinkingRestrictionByPlatformIDV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'MW7DSjI8' \
    --userId 'Fi0RaT8e' \
    > test.out 2>&1
eval_tap $? 203 'AdminDeleteUserLinkingRestrictionByPlatformIDV3' test.out

#- 204 AdminGetThirdPartyPlatformTokenLinkStatusV3
$CLI_EXE \
    --sn iam \
    --op AdminGetThirdPartyPlatformTokenLinkStatusV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'sIFl8A44' \
    --userId 'IkGvN1dz' \
    --platformToken 'LalRr0ux' \
    > test.out 2>&1
eval_tap $? 204 'AdminGetThirdPartyPlatformTokenLinkStatusV3' test.out

#- 205 AdminGetUserSinglePlatformAccount
$CLI_EXE \
    --sn iam \
    --op AdminGetUserSinglePlatformAccount \
    --namespace $AB_NAMESPACE \
    --platformId 'epItIkz5' \
    --userId '8BEy4HRW' \
    --crossNamespace 'false' \
    > test.out 2>&1
eval_tap $? 205 'AdminGetUserSinglePlatformAccount' test.out

#- 206 AdminDeleteUserRolesV3
# body param: body
echo '["oYACuBYa", "5b653KWV", "aYEnBh66"]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserRolesV3 \
    --namespace $AB_NAMESPACE \
    --userId 'nENrhRFE' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 206 'AdminDeleteUserRolesV3' test.out

#- 207 AdminSaveUserRoleV3
# body param: body
echo '[{"namespace": "jdrYYD3c", "roleId": "oY1Itak4"}, {"namespace": "19qFGgwO", "roleId": "C07PNF1W"}, {"namespace": "kV7geCAl", "roleId": "LQvz8Ngf"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminSaveUserRoleV3 \
    --namespace $AB_NAMESPACE \
    --userId 'zfMNNkwK' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 207 'AdminSaveUserRoleV3' test.out

#- 208 AdminAddUserRoleV3
$CLI_EXE \
    --sn iam \
    --op AdminAddUserRoleV3 \
    --namespace $AB_NAMESPACE \
    --roleId 'V22fugNg' \
    --userId 'AGkYUdI2' \
    > test.out 2>&1
eval_tap $? 208 'AdminAddUserRoleV3' test.out

#- 209 AdminDeleteUserRoleV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserRoleV3 \
    --namespace $AB_NAMESPACE \
    --roleId 'tAq0jGKd' \
    --userId 'B949ow9e' \
    > test.out 2>&1
eval_tap $? 209 'AdminDeleteUserRoleV3' test.out

#- 210 AdminUpdateUserStatusV3
# body param: body
echo '{"enabled": false, "reason": "vZVqaecJ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserStatusV3 \
    --namespace $AB_NAMESPACE \
    --userId '3awgSvMy' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 210 'AdminUpdateUserStatusV3' test.out

#- 211 AdminTrustlyUpdateUserIdentity
# body param: body
echo '{"emailAddress": "MFqQgj04", "password": "Zm6sRUCB"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminTrustlyUpdateUserIdentity \
    --namespace $AB_NAMESPACE \
    --userId '7ldz3TpO' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 211 'AdminTrustlyUpdateUserIdentity' test.out

#- 212 AdminVerifyUserWithoutVerificationCodeV3
$CLI_EXE \
    --sn iam \
    --op AdminVerifyUserWithoutVerificationCodeV3 \
    --namespace $AB_NAMESPACE \
    --userId 'ifx96M3D' \
    > test.out 2>&1
eval_tap $? 212 'AdminVerifyUserWithoutVerificationCodeV3' test.out

#- 213 AdminUpdateClientSecretV3
# body param: body
echo '{"newSecret": "FsJN2pPM"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateClientSecretV3 \
    --clientId 'Nxf6Mh3U' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 213 'AdminUpdateClientSecretV3' test.out

#- 214 AdminCheckThirdPartyLoginPlatformAvailabilityV3
$CLI_EXE \
    --sn iam \
    --op AdminCheckThirdPartyLoginPlatformAvailabilityV3 \
    --platformId '9megeoeX' \
    > test.out 2>&1
eval_tap $? 214 'AdminCheckThirdPartyLoginPlatformAvailabilityV3' test.out

#- 215 AdminGetRolesV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRolesV3 \
    --after 'F0ef8x1T' \
    --before 'GVDgiQv5' \
    --isWildcard 'true' \
    --limit '72' \
    > test.out 2>&1
eval_tap $? 215 'AdminGetRolesV3' test.out

#- 216 AdminCreateRoleV3
# body param: body
echo '{"adminRole": false, "deletable": true, "isWildcard": true, "managers": [{"displayName": "cfQBo1tF", "namespace": "WvoQOzyH", "userId": "25j1Xtkj"}, {"displayName": "Aqitt7ZF", "namespace": "UeqDHUN1", "userId": "LoWfEOI1"}, {"displayName": "1AQASPQ6", "namespace": "kFSP1Bzu", "userId": "1HW7MNcw"}], "members": [{"displayName": "pHyLanTA", "namespace": "EzhBNimb", "userId": "8tO0SZqb"}, {"displayName": "69Oxkrqz", "namespace": "lnPfPYdh", "userId": "hoE06SbG"}, {"displayName": "gNxSHq1S", "namespace": "yOFYw7Wa", "userId": "UTBrGXuD"}], "permissions": [{"action": 27, "resource": "6pQBcclf", "schedAction": 28, "schedCron": "7QKp8vZu", "schedRange": ["5O9mPPEd", "iZEUOWsH", "oI3r5dEW"]}, {"action": 67, "resource": "g7ag4Wrq", "schedAction": 44, "schedCron": "Wv7CPyYr", "schedRange": ["7yNTqBRq", "1SMllnXQ", "Vk1EG2GR"]}, {"action": 49, "resource": "M4dOKHH9", "schedAction": 74, "schedCron": "rvUk7fXN", "schedRange": ["rQD6N3Dg", "Euz3A15g", "EuA6AA8s"]}], "roleName": "E5h51Jgp"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminCreateRoleV3 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 216 'AdminCreateRoleV3' test.out

#- 217 AdminGetRoleV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleV3 \
    --roleId '7NWxxWJk' \
    > test.out 2>&1
eval_tap $? 217 'AdminGetRoleV3' test.out

#- 218 AdminDeleteRoleV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteRoleV3 \
    --roleId 'AY52g9Cw' \
    > test.out 2>&1
eval_tap $? 218 'AdminDeleteRoleV3' test.out

#- 219 AdminUpdateRoleV3
# body param: body
echo '{"deletable": true, "isWildcard": true, "roleName": "y1BGa5gR"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateRoleV3 \
    --roleId 'WEe0o7sc' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 219 'AdminUpdateRoleV3' test.out

#- 220 AdminGetRoleAdminStatusV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleAdminStatusV3 \
    --roleId '6hjSyJxL' \
    > test.out 2>&1
eval_tap $? 220 'AdminGetRoleAdminStatusV3' test.out

#- 221 AdminUpdateAdminRoleStatusV3
$CLI_EXE \
    --sn iam \
    --op AdminUpdateAdminRoleStatusV3 \
    --roleId 'NrHtnjEg' \
    > test.out 2>&1
eval_tap $? 221 'AdminUpdateAdminRoleStatusV3' test.out

#- 222 AdminRemoveRoleAdminV3
$CLI_EXE \
    --sn iam \
    --op AdminRemoveRoleAdminV3 \
    --roleId 'xwTuHDDK' \
    > test.out 2>&1
eval_tap $? 222 'AdminRemoveRoleAdminV3' test.out

#- 223 AdminGetRoleManagersV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleManagersV3 \
    --roleId 'JPa5WFO5' \
    --after 'y0RdGpzz' \
    --before 'qAjGDJm8' \
    --limit '21' \
    > test.out 2>&1
eval_tap $? 223 'AdminGetRoleManagersV3' test.out

#- 224 AdminAddRoleManagersV3
# body param: body
echo '{"managers": [{"displayName": "rH8vj1Ui", "namespace": "VrfGIMBp", "userId": "byU1ttBo"}, {"displayName": "YPJfNInK", "namespace": "q6K7Hcdw", "userId": "AKnTkYwH"}, {"displayName": "f9r6wkJv", "namespace": "jwUWHjdz", "userId": "FnYUKHLN"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddRoleManagersV3 \
    --roleId '2lmJOQXw' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 224 'AdminAddRoleManagersV3' test.out

#- 225 AdminRemoveRoleManagersV3
# body param: body
echo '{"managers": [{"displayName": "SBFBeThy", "namespace": "LiYpXieN", "userId": "mF6Hph4r"}, {"displayName": "YhOoOD1H", "namespace": "VglqRGB6", "userId": "rymTN03F"}, {"displayName": "yayNtgtB", "namespace": "XWIHOUWr", "userId": "MMn3bkFt"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminRemoveRoleManagersV3 \
    --roleId 'Qlyw0nsv' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 225 'AdminRemoveRoleManagersV3' test.out

#- 226 AdminGetRoleMembersV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleMembersV3 \
    --roleId 'd3WSg1qg' \
    --after 'Y0Va39F7' \
    --before 's7JWBguT' \
    --limit '29' \
    > test.out 2>&1
eval_tap $? 226 'AdminGetRoleMembersV3' test.out

#- 227 AdminAddRoleMembersV3
# body param: body
echo '{"members": [{"displayName": "prLFNxIe", "namespace": "gaeieyLy", "userId": "s6r9PKqK"}, {"displayName": "FSqu5RXb", "namespace": "PeT1W36P", "userId": "rMgrgcaG"}, {"displayName": "MkULuiUU", "namespace": "Yb5RA90p", "userId": "1hZEsLQP"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddRoleMembersV3 \
    --roleId '47hqV78l' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 227 'AdminAddRoleMembersV3' test.out

#- 228 AdminRemoveRoleMembersV3
eval_tap 0 228 'AdminRemoveRoleMembersV3 # SKIP deprecated' test.out

#- 229 AdminUpdateRolePermissionsV3
# body param: body
echo '{"permissions": [{"action": 78, "resource": "dyUHK7Mo", "schedAction": 61, "schedCron": "LLdJWSTc", "schedRange": ["p5qWd3at", "jXufeStA", "W2jWaINT"]}, {"action": 76, "resource": "41EtjnkH", "schedAction": 3, "schedCron": "gKYcWniY", "schedRange": ["kG4jqUk3", "oXYRoVxe", "4HaAADYX"]}, {"action": 89, "resource": "N4OhYR6w", "schedAction": 51, "schedCron": "x0AuBQmL", "schedRange": ["IFhXe5I0", "4BKEuNmm", "pm9XNivw"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateRolePermissionsV3 \
    --roleId 'Ibrvl79U' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 229 'AdminUpdateRolePermissionsV3' test.out

#- 230 AdminAddRolePermissionsV3
# body param: body
echo '{"permissions": [{"action": 2, "resource": "XapDW4m4", "schedAction": 9, "schedCron": "fQfQxy0t", "schedRange": ["HQ5EbBof", "Ipx6fJY4", "AbTZcTvD"]}, {"action": 42, "resource": "EQOsWeAA", "schedAction": 72, "schedCron": "Y5hfqb3T", "schedRange": ["FQs9SkBU", "b0KocfPI", "1Omk1nES"]}, {"action": 70, "resource": "JbVN0ODF", "schedAction": 98, "schedCron": "LQwJ0KRT", "schedRange": ["CyUSWUe8", "dzuo0FMo", "EVFwqcdn"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddRolePermissionsV3 \
    --roleId 'jMhKEPsX' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 230 'AdminAddRolePermissionsV3' test.out

#- 231 AdminDeleteRolePermissionsV3
# body param: body
echo '["mR7VuqdI", "p3bZiNhH", "caZLFBEZ"]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDeleteRolePermissionsV3 \
    --roleId 'Dto9cBoV' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 231 'AdminDeleteRolePermissionsV3' test.out

#- 232 AdminDeleteRolePermissionV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteRolePermissionV3 \
    --action '19' \
    --resource 'WekpcDaN' \
    --roleId 'UuKPOIAD' \
    > test.out 2>&1
eval_tap $? 232 'AdminDeleteRolePermissionV3' test.out

#- 233 AdminGetMyUserV3
$CLI_EXE \
    --sn iam \
    --op AdminGetMyUserV3 \
    > test.out 2>&1
eval_tap $? 233 'AdminGetMyUserV3' test.out

#- 234 UserAuthenticationV3
$CLI_EXE \
    --sn iam \
    --op UserAuthenticationV3 \
    --client_id 'MeMosfnm' \
    --extend_exp 'true' \
    --redirect_uri 'kZXzRn0Q' \
    --password '2wovZdlQ' \
    --request_id 'OpLllQBL' \
    --user_name 'KRm9jGXD' \
    > test.out 2>&1
eval_tap $? 234 'UserAuthenticationV3' test.out

#- 235 AuthenticationWithPlatformLinkV3
$CLI_EXE \
    --sn iam \
    --op AuthenticationWithPlatformLinkV3 \
    --extend_exp 'false' \
    --client_id 'xnaiXpdp' \
    --linkingToken 'TswoZ2YC' \
    --password 'VqpzvEi5' \
    --username 'DbTrvD1E' \
    > test.out 2>&1
eval_tap $? 235 'AuthenticationWithPlatformLinkV3' test.out

#- 236 AuthenticateAndLinkForwardV3
$CLI_EXE \
    --sn iam \
    --op AuthenticateAndLinkForwardV3 \
    --extend_exp 'true' \
    --client_id 'BfcKep7j' \
    --linkingToken 'vUizVFIy' \
    --password 'G0HFjUF8' \
    --username 'RdAu4OqK' \
    > test.out 2>&1
eval_tap $? 236 'AuthenticateAndLinkForwardV3' test.out

#- 237 GenerateTokenByNewHeadlessAccountV3
$CLI_EXE \
    --sn iam \
    --op GenerateTokenByNewHeadlessAccountV3 \
    --additionalData '3V9l5Z7v' \
    --extend_exp 'true' \
    --linkingToken '6HtS7M93' \
    > test.out 2>&1
eval_tap $? 237 'GenerateTokenByNewHeadlessAccountV3' test.out

#- 238 RequestOneTimeLinkingCodeV3
$CLI_EXE \
    --sn iam \
    --op RequestOneTimeLinkingCodeV3 \
    --redirectUri 'hgVmr1Ft' \
    --state 'RVBob49t' \
    --platformId '9s6i7ME7' \
    > test.out 2>&1
eval_tap $? 238 'RequestOneTimeLinkingCodeV3' test.out

#- 239 ValidateOneTimeLinkingCodeV3
$CLI_EXE \
    --sn iam \
    --op ValidateOneTimeLinkingCodeV3 \
    --oneTimeLinkCode 'v3SwwBXf' \
    > test.out 2>&1
eval_tap $? 239 'ValidateOneTimeLinkingCodeV3' test.out

#- 240 RequestTokenByOneTimeLinkCodeResponseV3
$CLI_EXE \
    --sn iam \
    --op RequestTokenByOneTimeLinkCodeResponseV3 \
    --additionalData '504Nfd5E' \
    --isTransient 'false' \
    --client_id 'UE2DoKvL' \
    --oneTimeLinkCode 'OnNl57is' \
    > test.out 2>&1
eval_tap $? 240 'RequestTokenByOneTimeLinkCodeResponseV3' test.out

#- 241 GetCountryLocationV3
$CLI_EXE \
    --sn iam \
    --op GetCountryLocationV3 \
    > test.out 2>&1
eval_tap $? 241 'GetCountryLocationV3' test.out

#- 242 Logout
$CLI_EXE \
    --sn iam \
    --op Logout \
    > test.out 2>&1
eval_tap $? 242 'Logout' test.out

#- 243 RequestTokenExchangeCodeV3
$CLI_EXE \
    --sn iam \
    --op RequestTokenExchangeCodeV3 \
    --namespace $AB_NAMESPACE \
    --codeChallenge '1rVPrAK2' \
    --codeChallengeMethod 'plain' \
    --client_id '1pBs7MAq' \
    > test.out 2>&1
eval_tap $? 243 'RequestTokenExchangeCodeV3' test.out

#- 244 AdminRetrieveUserThirdPartyPlatformTokenV3
$CLI_EXE \
    --sn iam \
    --op AdminRetrieveUserThirdPartyPlatformTokenV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'NnIWXxza' \
    --userId 'SipYnQh8' \
    --platformUserId 'qAkhvY36' \
    > test.out 2>&1
eval_tap $? 244 'AdminRetrieveUserThirdPartyPlatformTokenV3' test.out

#- 245 RevokeUserV3
$CLI_EXE \
    --sn iam \
    --op RevokeUserV3 \
    --namespace $AB_NAMESPACE \
    --userId 'tac2rl0T' \
    --includeGameNamespace 'true' \
    > test.out 2>&1
eval_tap $? 245 'RevokeUserV3' test.out

#- 246 AuthorizeV3
$CLI_EXE \
    --sn iam \
    --op AuthorizeV3 \
    --blockedPlatformId 'SUHpdwjH' \
    --codeChallenge 'T6ko85yS' \
    --codeChallengeMethod 'plain' \
    --createHeadless 'false' \
    --loginWebBased 'false' \
    --nonce '8vPBEac6' \
    --oneTimeLinkCode 'jW5KWJ0K' \
    --redirectUri 'OW0RtMTt' \
    --scope 'xcJEPTqp' \
    --state 'wdf5hiXJ' \
    --targetAuthPage 'Bkmq19Xq' \
    --useRedirectUriAsLoginUrlWhenLocked 'true' \
    --clientId 'JJgxPjbe' \
    --responseType 'code' \
    > test.out 2>&1
eval_tap $? 246 'AuthorizeV3' test.out

#- 247 TokenIntrospectionV3
$CLI_EXE \
    --sn iam \
    --op TokenIntrospectionV3 \
    --token 'vkOUL7fE' \
    > test.out 2>&1
eval_tap $? 247 'TokenIntrospectionV3' test.out

#- 248 GetJWKSV3
$CLI_EXE \
    --sn iam \
    --op GetJWKSV3 \
    > test.out 2>&1
eval_tap $? 248 'GetJWKSV3' test.out

#- 249 SendMFAAuthenticationCode
$CLI_EXE \
    --sn iam \
    --op SendMFAAuthenticationCode \
    --clientId 'DOAmFze9' \
    --factor '2FlPTcJp' \
    --mfaToken 'qzv6m79y' \
    > test.out 2>&1
eval_tap $? 249 'SendMFAAuthenticationCode' test.out

#- 250 Change2faMethod
$CLI_EXE \
    --sn iam \
    --op Change2faMethod \
    --factor 'F4nf4fYI' \
    --mfaToken 'q8y7sQgd' \
    > test.out 2>&1
eval_tap $? 250 'Change2faMethod' test.out

#- 251 Verify2faCode
$CLI_EXE \
    --sn iam \
    --op Verify2faCode \
    --code 'ypjfl3me' \
    --factor 'MRDLJTbF' \
    --mfaToken 'H6GuQF02' \
    --rememberDevice 'false' \
    > test.out 2>&1
eval_tap $? 251 'Verify2faCode' test.out

#- 252 Verify2faCodeForward
$CLI_EXE \
    --sn iam \
    --op Verify2faCodeForward \
    --defaultFactor 'SQelgRHF' \
    --factors 'bWyzzi3b' \
    --rememberDevice 'false' \
    --clientId 'X3Bnl3Co' \
    --code 'UQTonbae' \
    --factor 'rjSi9qwr' \
    --mfaToken 't37xh3sB' \
    > test.out 2>&1
eval_tap $? 252 'Verify2faCodeForward' test.out

#- 253 RetrieveUserThirdPartyPlatformTokenV3
$CLI_EXE \
    --sn iam \
    --op RetrieveUserThirdPartyPlatformTokenV3 \
    --namespace $AB_NAMESPACE \
    --platformId '0RJfCk87' \
    --userId 'kZTt9hkc' \
    > test.out 2>&1
eval_tap $? 253 'RetrieveUserThirdPartyPlatformTokenV3' test.out

#- 254 AuthCodeRequestV3
$CLI_EXE \
    --sn iam \
    --op AuthCodeRequestV3 \
    --platformId '6CznPX7x' \
    --clientId 'lsjGRfr6' \
    --redirectUri 'KDrLwC8q' \
    --requestId 'jt0y7oi1' \
    > test.out 2>&1
eval_tap $? 254 'AuthCodeRequestV3' test.out

#- 255 PlatformTokenGrantV3
$CLI_EXE \
    --sn iam \
    --op PlatformTokenGrantV3 \
    --platformId 'OU9wBDlA' \
    --additionalData 'ojTtR16V' \
    --client_id '5KOFAcBm' \
    --createHeadless 'false' \
    --device_id '4d19jVa9' \
    --macAddress 'K7qpiEa1' \
    --platform_token '8tRCFl1w' \
    --serviceLabel '0.5615119909246523' \
    --skipSetCookie 'true' \
    > test.out 2>&1
eval_tap $? 255 'PlatformTokenGrantV3' test.out

#- 256 GetRevocationListV3
$CLI_EXE \
    --sn iam \
    --op GetRevocationListV3 \
    > test.out 2>&1
eval_tap $? 256 'GetRevocationListV3' test.out

#- 257 TokenRevocationV3
$CLI_EXE \
    --sn iam \
    --op TokenRevocationV3 \
    --token 'XQrYcQh8' \
    > test.out 2>&1
eval_tap $? 257 'TokenRevocationV3' test.out

#- 258 SimultaneousLoginV3
$CLI_EXE \
    --sn iam \
    --op SimultaneousLoginV3 \
    --simultaneousPlatform 'e6XeUHHu' \
    --simultaneousTicket '3ANaUDvT' \
    --nativePlatform 'steam' \
    --nativePlatformTicket '9nIed7mE' \
    > test.out 2>&1
eval_tap $? 258 'SimultaneousLoginV3' test.out

#- 259 TokenGrantV3
$CLI_EXE \
    --sn iam \
    --op TokenGrantV3 \
    --additionalData 'Oq4tVVo0' \
    --client_id 'eQRNbQRy' \
    --client_secret '9rQS0Kzu' \
    --code 'kOoV2aVn' \
    --code_verifier 'rArHQBVC' \
    --extendNamespace 'ZZkRFrym' \
    --extend_exp 'false' \
    --password 'lrckT0Ks' \
    --redirect_uri 'YcjcuJWT' \
    --refresh_token 'UXdZELmG' \
    --username 'ZOwJbXIU' \
    --grant_type 'authorization_code' \
    > test.out 2>&1
eval_tap $? 259 'TokenGrantV3' test.out

#- 260 VerifyTokenV3
$CLI_EXE \
    --sn iam \
    --op VerifyTokenV3 \
    --token 'xtD624vJ' \
    > test.out 2>&1
eval_tap $? 260 'VerifyTokenV3' test.out

#- 261 PlatformAuthenticationV3
$CLI_EXE \
    --sn iam \
    --op PlatformAuthenticationV3 \
    --platformId 'isgQIZUE' \
    --code '4CzYMvkX' \
    --error 'UA9Os6WD' \
    --openidAssocHandle 'YztL5iOu' \
    --openidClaimedId 'AMJtBE97' \
    --openidIdentity 'Ckgntyih' \
    --openidMode '06EvkjfY' \
    --openidNs 'TJeUJ8L4' \
    --openidOpEndpoint 'CwuOgfIB' \
    --openidResponseNonce 'NWQBNF5l' \
    --openidReturnTo 'QNQubhs4' \
    --openidSig 'Fb1htJa7' \
    --openidSigned 'XXJAfTuQ' \
    --state 'yMO5NDLE' \
    > test.out 2>&1
eval_tap $? 261 'PlatformAuthenticationV3' test.out

#- 262 PlatformTokenRefreshV3
$CLI_EXE \
    --sn iam \
    --op PlatformTokenRefreshV3 \
    --platformId 'VtC6BJcE' \
    --platform_token 'rCllAEq5' \
    > test.out 2>&1
eval_tap $? 262 'PlatformTokenRefreshV3' test.out

#- 263 PublicGetInputValidations
$CLI_EXE \
    --sn iam \
    --op PublicGetInputValidations \
    --defaultOnEmpty 'false' \
    --languageCode '1p4vJ8mK' \
    > test.out 2>&1
eval_tap $? 263 'PublicGetInputValidations' test.out

#- 264 PublicGetInputValidationByField
$CLI_EXE \
    --sn iam \
    --op PublicGetInputValidationByField \
    --field '8idAEJpU' \
    > test.out 2>&1
eval_tap $? 264 'PublicGetInputValidationByField' test.out

#- 265 PublicGetCountryAgeRestrictionV3
$CLI_EXE \
    --sn iam \
    --op PublicGetCountryAgeRestrictionV3 \
    --countryCode 'd6c6S2jS' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 265 'PublicGetCountryAgeRestrictionV3' test.out

#- 266 PublicGetConfigValueV3
$CLI_EXE \
    --sn iam \
    --op PublicGetConfigValueV3 \
    --configKey 'uELLJUBA' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 266 'PublicGetConfigValueV3' test.out

#- 267 PublicGetCountryListV3
$CLI_EXE \
    --sn iam \
    --op PublicGetCountryListV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 267 'PublicGetCountryListV3' test.out

#- 268 RetrieveAllActiveThirdPartyLoginPlatformCredentialPublicV3
$CLI_EXE \
    --sn iam \
    --op RetrieveAllActiveThirdPartyLoginPlatformCredentialPublicV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 268 'RetrieveAllActiveThirdPartyLoginPlatformCredentialPublicV3' test.out

#- 269 RetrieveActiveOIDCClientsPublicV3
$CLI_EXE \
    --sn iam \
    --op RetrieveActiveOIDCClientsPublicV3 \
    --namespace $AB_NAMESPACE \
    --clientId 'ecUcTw47' \
    > test.out 2>&1
eval_tap $? 269 'RetrieveActiveOIDCClientsPublicV3' test.out

#- 270 PublicListUserIDByPlatformUserIDsV3
eval_tap 0 270 'PublicListUserIDByPlatformUserIDsV3 # SKIP deprecated' test.out

#- 271 PublicGetUserByPlatformUserIDV3
$CLI_EXE \
    --sn iam \
    --op PublicGetUserByPlatformUserIDV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'k8JuRpFq' \
    --platformUserId 'mpRmpLoL' \
    > test.out 2>&1
eval_tap $? 271 'PublicGetUserByPlatformUserIDV3' test.out

#- 272 PublicGetProfileUpdateStrategyV3
$CLI_EXE \
    --sn iam \
    --op PublicGetProfileUpdateStrategyV3 \
    --namespace $AB_NAMESPACE \
    --field 'country' \
    > test.out 2>&1
eval_tap $? 272 'PublicGetProfileUpdateStrategyV3' test.out

#- 273 PublicGetAsyncStatus
$CLI_EXE \
    --sn iam \
    --op PublicGetAsyncStatus \
    --namespace $AB_NAMESPACE \
    --requestId 'zSKtRdFX' \
    > test.out 2>&1
eval_tap $? 273 'PublicGetAsyncStatus' test.out

#- 274 PublicSearchUserV3
$CLI_EXE \
    --sn iam \
    --op PublicSearchUserV3 \
    --namespace $AB_NAMESPACE \
    --by 'SbaVp4Wz' \
    --limit '3' \
    --offset '56' \
    --platformBy 'z0utSsIe' \
    --platformId 'MUnNy3Hd' \
    --query 'IMFCuGiX' \
    > test.out 2>&1
eval_tap $? 274 'PublicSearchUserV3' test.out

#- 275 PublicCreateUserV3
# body param: body
echo '{"PasswordMD5Sum": "QYym2FKk", "acceptedPolicies": [{"isAccepted": false, "localizedPolicyVersionId": "gpbnLfWQ", "policyId": "WWHfeyPM", "policyVersionId": "TwMck9x2"}, {"isAccepted": false, "localizedPolicyVersionId": "ECzIqlMD", "policyId": "CgZ1f6AE", "policyVersionId": "47omaL7C"}, {"isAccepted": true, "localizedPolicyVersionId": "fyeaJPun", "policyId": "h4Hot43H", "policyVersionId": "J5aLqmkt"}], "authType": "EbFmXVzW", "code": "riKciPR4", "country": "MiNVzw9r", "dateOfBirth": "da9qxoqV", "displayName": "qV3B3SNZ", "emailAddress": "HqKee93Q", "password": "PmSBRUgq", "reachMinimumAge": false, "uniqueDisplayName": "vcR5qyjw"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicCreateUserV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 275 'PublicCreateUserV3' test.out

#- 276 CheckUserAvailability
$CLI_EXE \
    --sn iam \
    --op CheckUserAvailability \
    --namespace $AB_NAMESPACE \
    --field 'saR7OBeI' \
    --query 'joJf7INf' \
    > test.out 2>&1
eval_tap $? 276 'CheckUserAvailability' test.out

#- 277 PublicBulkGetUsers
# body param: body
echo '{"userIds": ["qXw9KjA6", "u5IwJ4Dz", "ZZkfftrs"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicBulkGetUsers \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 277 'PublicBulkGetUsers' test.out

#- 278 PublicSendRegistrationCode
# body param: body
echo '{"emailAddress": "wEzXzndm", "languageTag": "eWB3syWt"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicSendRegistrationCode \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 278 'PublicSendRegistrationCode' test.out

#- 279 PublicVerifyRegistrationCode
# body param: body
echo '{"code": "IFV2M99K", "emailAddress": "na115l70"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicVerifyRegistrationCode \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 279 'PublicVerifyRegistrationCode' test.out

#- 280 PublicForgotPasswordV3
# body param: body
echo '{"emailAddress": "sbw3Vwj2", "languageTag": "U10w0OxI"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicForgotPasswordV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 280 'PublicForgotPasswordV3' test.out

#- 281 PublicValidateUserInput
# body param: body
echo '{"displayName": "qWFP8w9v", "password": "2KBPySuu", "uniqueDisplayName": "MaSSL5yp", "username": "2oDoghls"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicValidateUserInput \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 281 'PublicValidateUserInput' test.out

#- 282 GetAdminInvitationV3
$CLI_EXE \
    --sn iam \
    --op GetAdminInvitationV3 \
    --invitationId 'iaRVZrs9' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 282 'GetAdminInvitationV3' test.out

#- 283 CreateUserFromInvitationV3
# body param: body
echo '{"PasswordMD5Sum": "awxZjtwG", "acceptedPolicies": [{"isAccepted": true, "localizedPolicyVersionId": "SdeaF6HQ", "policyId": "ymYJjz9x", "policyVersionId": "S7YSYVZ4"}, {"isAccepted": false, "localizedPolicyVersionId": "vIkRvHnd", "policyId": "3PSZMlOo", "policyVersionId": "wwCEczDA"}, {"isAccepted": false, "localizedPolicyVersionId": "ot7rp32z", "policyId": "vdCn3HMS", "policyVersionId": "MnHtnwbP"}], "authType": "l9SapFsM", "code": "6BSIPWd9", "country": "7Ff2O59E", "dateOfBirth": "gTYrEJCF", "displayName": "2bW2JiSM", "emailAddress": "yhBjtQsh", "password": "qahuJAFK", "reachMinimumAge": false, "uniqueDisplayName": "4MV0YGLp"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op CreateUserFromInvitationV3 \
    --invitationId 'pD9z1SF2' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 283 'CreateUserFromInvitationV3' test.out

#- 284 UpdateUserV3
# body param: body
echo '{"avatarUrl": "dm0nyuHY", "country": "I3MLYGrP", "dateOfBirth": "ChAaBDnq", "displayName": "fC5b4a44", "languageTag": "RSTjN4ON", "uniqueDisplayName": "nevngwKn", "userName": "seZOWBP1"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op UpdateUserV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 284 'UpdateUserV3' test.out

#- 285 PublicPartialUpdateUserV3
# body param: body
echo '{"avatarUrl": "Rg8xZWkt", "country": "vopgSWlQ", "dateOfBirth": "CNQJuCXe", "displayName": "BXXUTJfr", "languageTag": "3yIMrZ2a", "uniqueDisplayName": "RaVtRPxM", "userName": "cPm9ANkN"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicPartialUpdateUserV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 285 'PublicPartialUpdateUserV3' test.out

#- 286 PublicSendVerificationCodeV3
# body param: body
echo '{"context": "VaetWvJf", "emailAddress": "9bIvJdN3", "languageTag": "VXaAT3H6", "upgradeToken": "lw2wm2Z3"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicSendVerificationCodeV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 286 'PublicSendVerificationCodeV3' test.out

#- 287 PublicUserVerificationV3
# body param: body
echo '{"code": "gG5AuDEx", "contactType": "lapQm5h1", "languageTag": "zwnkaxGk", "validateOnly": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUserVerificationV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 287 'PublicUserVerificationV3' test.out

#- 288 PublicUpgradeHeadlessAccountV3
# body param: body
echo '{"code": "UOKOkmxS", "country": "QK078a3c", "dateOfBirth": "26SDZo5A", "displayName": "1zLO0EZx", "emailAddress": "WeE0D0yM", "password": "9o5pkrVK", "uniqueDisplayName": "JUAGmAzK", "validateOnly": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpgradeHeadlessAccountV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 288 'PublicUpgradeHeadlessAccountV3' test.out

#- 289 PublicVerifyHeadlessAccountV3
# body param: body
echo '{"emailAddress": "YZJAeRrK", "password": "uczQfixD"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicVerifyHeadlessAccountV3 \
    --namespace $AB_NAMESPACE \
    --needVerificationCode 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 289 'PublicVerifyHeadlessAccountV3' test.out

#- 290 PublicUpdatePasswordV3
# body param: body
echo '{"languageTag": "E7VS4Qzx", "mfaToken": "uKMVaZYX", "newPassword": "c4DoZjgl", "oldPassword": "pp829o0f"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpdatePasswordV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 290 'PublicUpdatePasswordV3' test.out

#- 291 PublicCreateJusticeUser
$CLI_EXE \
    --sn iam \
    --op PublicCreateJusticeUser \
    --namespace $AB_NAMESPACE \
    --targetNamespace 'lM9jgMxH' \
    > test.out 2>&1
eval_tap $? 291 'PublicCreateJusticeUser' test.out

#- 292 PublicPlatformLinkV3
$CLI_EXE \
    --sn iam \
    --op PublicPlatformLinkV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'uwTHZ9zf' \
    --redirectUri 'G73QLEot' \
    --ticket 'VTdiwuXZ' \
    > test.out 2>&1
eval_tap $? 292 'PublicPlatformLinkV3' test.out

#- 293 PublicPlatformUnlinkV3
eval_tap 0 293 'PublicPlatformUnlinkV3 # SKIP deprecated' test.out

#- 294 PublicPlatformUnlinkAllV3
$CLI_EXE \
    --sn iam \
    --op PublicPlatformUnlinkAllV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'G92Re47w' \
    > test.out 2>&1
eval_tap $? 294 'PublicPlatformUnlinkAllV3' test.out

#- 295 PublicForcePlatformLinkV3
$CLI_EXE \
    --sn iam \
    --op PublicForcePlatformLinkV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'NOydIN9t' \
    --ticket 'SFvnc2Vc' \
    > test.out 2>&1
eval_tap $? 295 'PublicForcePlatformLinkV3' test.out

#- 296 PublicWebLinkPlatform
$CLI_EXE \
    --sn iam \
    --op PublicWebLinkPlatform \
    --namespace $AB_NAMESPACE \
    --platformId '5n04gdeb' \
    --clientId 'ng3drBE5' \
    --redirectUri 'sv9VXGXo' \
    > test.out 2>&1
eval_tap $? 296 'PublicWebLinkPlatform' test.out

#- 297 PublicWebLinkPlatformEstablish
$CLI_EXE \
    --sn iam \
    --op PublicWebLinkPlatformEstablish \
    --namespace $AB_NAMESPACE \
    --platformId '3feHbOq1' \
    --code 'hsiNX7np' \
    --state 'E1WnPp4j' \
    > test.out 2>&1
eval_tap $? 297 'PublicWebLinkPlatformEstablish' test.out

#- 298 PublicProcessWebLinkPlatformV3
$CLI_EXE \
    --sn iam \
    --op PublicProcessWebLinkPlatformV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'O6uGrBtA' \
    --code 'dll2X2rx' \
    --state 'xP2qbEHZ' \
    > test.out 2>&1
eval_tap $? 298 'PublicProcessWebLinkPlatformV3' test.out

#- 299 PublicGetUsersPlatformInfosV3
# body param: body
echo '{"platformId": "l0hwzz8x", "userIds": ["bJfAtzgW", "Kjs9fk63", "vl2ejFnB"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicGetUsersPlatformInfosV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 299 'PublicGetUsersPlatformInfosV3' test.out

#- 300 ResetPasswordV3
# body param: body
echo '{"clientId": "ddRLIseE", "code": "mWEjEVPk", "emailAddress": "o0hCY7xD", "languageTag": "iDzvHEWd", "newPassword": "ulCNGgmo"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op ResetPasswordV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 300 'ResetPasswordV3' test.out

#- 301 PublicGetUserByUserIdV3
eval_tap 0 301 'PublicGetUserByUserIdV3 # SKIP deprecated' test.out

#- 302 PublicGetUserBanHistoryV3
$CLI_EXE \
    --sn iam \
    --op PublicGetUserBanHistoryV3 \
    --namespace $AB_NAMESPACE \
    --userId 'Eu8Wpjjr' \
    --activeOnly 'false' \
    --after 'FF3CO04W' \
    --before 'VzdE7oiC' \
    --limit '43' \
    > test.out 2>&1
eval_tap $? 302 'PublicGetUserBanHistoryV3' test.out

#- 303 PublicListUserAllPlatformAccountsDistinctV3
$CLI_EXE \
    --sn iam \
    --op PublicListUserAllPlatformAccountsDistinctV3 \
    --namespace $AB_NAMESPACE \
    --userId 'apSQmi5b' \
    > test.out 2>&1
eval_tap $? 303 'PublicListUserAllPlatformAccountsDistinctV3' test.out

#- 304 PublicGetUserInformationV3
$CLI_EXE \
    --sn iam \
    --op PublicGetUserInformationV3 \
    --namespace $AB_NAMESPACE \
    --userId 'meCKrdhL' \
    > test.out 2>&1
eval_tap $? 304 'PublicGetUserInformationV3' test.out

#- 305 PublicGetUserLoginHistoriesV3
$CLI_EXE \
    --sn iam \
    --op PublicGetUserLoginHistoriesV3 \
    --namespace $AB_NAMESPACE \
    --userId 'dKOPON8a' \
    --after '0.6528122923739189' \
    --before '0.05667739726900489' \
    --limit '67' \
    > test.out 2>&1
eval_tap $? 305 'PublicGetUserLoginHistoriesV3' test.out

#- 306 PublicGetUserPlatformAccountsV3
$CLI_EXE \
    --sn iam \
    --op PublicGetUserPlatformAccountsV3 \
    --namespace $AB_NAMESPACE \
    --userId 'KynAMIVh' \
    --after '87sjbZm9' \
    --before 'RiSNBPCI' \
    --limit '7' \
    --platformId 'gecfJoYf' \
    > test.out 2>&1
eval_tap $? 306 'PublicGetUserPlatformAccountsV3' test.out

#- 307 PublicListJusticePlatformAccountsV3
$CLI_EXE \
    --sn iam \
    --op PublicListJusticePlatformAccountsV3 \
    --namespace $AB_NAMESPACE \
    --userId 'yJq4HOlB' \
    > test.out 2>&1
eval_tap $? 307 'PublicListJusticePlatformAccountsV3' test.out

#- 308 PublicLinkPlatformAccount
# body param: body
echo '{"platformId": "WzzkGcXA", "platformUserId": "zh0QkYRA"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicLinkPlatformAccount \
    --namespace $AB_NAMESPACE \
    --userId 'hft5AB0A' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 308 'PublicLinkPlatformAccount' test.out

#- 309 PublicForceLinkPlatformWithProgression
# body param: body
echo '{"chosenNamespaces": ["DzuNYVyH", "oDoJSypd", "dD2EmGQr"], "requestId": "6AvUGQ9q"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicForceLinkPlatformWithProgression \
    --namespace $AB_NAMESPACE \
    --userId 'xnwLlBmy' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 309 'PublicForceLinkPlatformWithProgression' test.out

#- 310 PublicGetPublisherUserV3
$CLI_EXE \
    --sn iam \
    --op PublicGetPublisherUserV3 \
    --namespace $AB_NAMESPACE \
    --userId 'VkphLA2a' \
    > test.out 2>&1
eval_tap $? 310 'PublicGetPublisherUserV3' test.out

#- 311 PublicValidateUserByUserIDAndPasswordV3
$CLI_EXE \
    --sn iam \
    --op PublicValidateUserByUserIDAndPasswordV3 \
    --namespace $AB_NAMESPACE \
    --userId 'A1Zdkse3' \
    --password 'qhU510NQ' \
    > test.out 2>&1
eval_tap $? 311 'PublicValidateUserByUserIDAndPasswordV3' test.out

#- 312 PublicGetRolesV3
$CLI_EXE \
    --sn iam \
    --op PublicGetRolesV3 \
    --after 'stQfGCaX' \
    --before 'OeMn1Vuz' \
    --isWildcard 'false' \
    --limit '37' \
    > test.out 2>&1
eval_tap $? 312 'PublicGetRolesV3' test.out

#- 313 PublicGetRoleV3
$CLI_EXE \
    --sn iam \
    --op PublicGetRoleV3 \
    --roleId 'TN4hurNb' \
    > test.out 2>&1
eval_tap $? 313 'PublicGetRoleV3' test.out

#- 314 PublicGetMyUserV3
$CLI_EXE \
    --sn iam \
    --op PublicGetMyUserV3 \
    --includeAllPlatforms 'true' \
    > test.out 2>&1
eval_tap $? 314 'PublicGetMyUserV3' test.out

#- 315 PublicSendCodeForwardV3
# body param: body
echo '{"context": "p1fSM0PX", "emailAddress": "c85fuegW", "languageTag": "vHo4I2o0", "upgradeToken": "9kh7RHZi"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicSendCodeForwardV3 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 315 'PublicSendCodeForwardV3' test.out

#- 316 PublicGetLinkHeadlessAccountToMyAccountConflictV3
$CLI_EXE \
    --sn iam \
    --op PublicGetLinkHeadlessAccountToMyAccountConflictV3 \
    --oneTimeLinkCode 'NnjqIRnH' \
    > test.out 2>&1
eval_tap $? 316 'PublicGetLinkHeadlessAccountToMyAccountConflictV3' test.out

#- 317 LinkHeadlessAccountToMyAccountV3
# body param: body
echo '{"chosenNamespaces": ["xQpabYRq", "5YXAOofF", "Symhf92R"], "oneTimeLinkCode": "YO76Exeu"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op LinkHeadlessAccountToMyAccountV3 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 317 'LinkHeadlessAccountToMyAccountV3' test.out

#- 318 PublicGetMyRedirectionAfterLinkV3
$CLI_EXE \
    --sn iam \
    --op PublicGetMyRedirectionAfterLinkV3 \
    --oneTimeLinkCode 'Z8t4lAEJ' \
    > test.out 2>&1
eval_tap $? 318 'PublicGetMyRedirectionAfterLinkV3' test.out

#- 319 PublicGetMyProfileAllowUpdateStatusV3
$CLI_EXE \
    --sn iam \
    --op PublicGetMyProfileAllowUpdateStatusV3 \
    > test.out 2>&1
eval_tap $? 319 'PublicGetMyProfileAllowUpdateStatusV3' test.out

#- 320 PublicSendVerificationLinkV3
# body param: body
echo '{"languageTag": "6uNL5tHa"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicSendVerificationLinkV3 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 320 'PublicSendVerificationLinkV3' test.out

#- 321 PublicGetOpenidUserInfoV3
$CLI_EXE \
    --sn iam \
    --op PublicGetOpenidUserInfoV3 \
    > test.out 2>&1
eval_tap $? 321 'PublicGetOpenidUserInfoV3' test.out

#- 322 PublicVerifyUserByLinkV3
$CLI_EXE \
    --sn iam \
    --op PublicVerifyUserByLinkV3 \
    --code '9OJEsZoF' \
    > test.out 2>&1
eval_tap $? 322 'PublicVerifyUserByLinkV3' test.out

#- 323 PlatformAuthenticateSAMLV3Handler
$CLI_EXE \
    --sn iam \
    --op PlatformAuthenticateSAMLV3Handler \
    --platformId 'jHhOnHJo' \
    --code 'kq3mpLcc' \
    --error 'CtuFntWV' \
    --state 'D7dQX9gP' \
    > test.out 2>&1
eval_tap $? 323 'PlatformAuthenticateSAMLV3Handler' test.out

#- 324 LoginSSOClient
$CLI_EXE \
    --sn iam \
    --op LoginSSOClient \
    --platformId '2QSvMAP0' \
    --payload 'jYiPLYPY' \
    > test.out 2>&1
eval_tap $? 324 'LoginSSOClient' test.out

#- 325 LogoutSSOClient
$CLI_EXE \
    --sn iam \
    --op LogoutSSOClient \
    --platformId 't1cn2KkT' \
    > test.out 2>&1
eval_tap $? 325 'LogoutSSOClient' test.out

#- 326 RequestTargetTokenResponseV3
$CLI_EXE \
    --sn iam \
    --op RequestTargetTokenResponseV3 \
    --additionalData 'N6zUb19f' \
    --code '0azXNbGu' \
    > test.out 2>&1
eval_tap $? 326 'RequestTargetTokenResponseV3' test.out

#- 327 UpgradeAndAuthenticateForwardV3
$CLI_EXE \
    --sn iam \
    --op UpgradeAndAuthenticateForwardV3 \
    --client_id 'T7pBlJfD' \
    --upgrade_success_token 'ykW7mwum' \
    > test.out 2>&1
eval_tap $? 327 'UpgradeAndAuthenticateForwardV3' test.out

#- 328 AdminListInvitationHistoriesV4
$CLI_EXE \
    --sn iam \
    --op AdminListInvitationHistoriesV4 \
    --limit '1' \
    --namespace_ 'NLiPPeAs' \
    --offset '9' \
    > test.out 2>&1
eval_tap $? 328 'AdminListInvitationHistoriesV4' test.out

#- 329 AdminGetDevicesByUserV4
$CLI_EXE \
    --sn iam \
    --op AdminGetDevicesByUserV4 \
    --namespace $AB_NAMESPACE \
    --userId '4zSnLZIy' \
    > test.out 2>&1
eval_tap $? 329 'AdminGetDevicesByUserV4' test.out

#- 330 AdminGetBannedDevicesV4
$CLI_EXE \
    --sn iam \
    --op AdminGetBannedDevicesV4 \
    --namespace $AB_NAMESPACE \
    --deviceType 'LvsnkJQd' \
    --endDate '35Dk7YWg' \
    --limit '74' \
    --offset '48' \
    --startDate 'NE7eskAX' \
    > test.out 2>&1
eval_tap $? 330 'AdminGetBannedDevicesV4' test.out

#- 331 AdminGetUserDeviceBansV4
$CLI_EXE \
    --sn iam \
    --op AdminGetUserDeviceBansV4 \
    --namespace $AB_NAMESPACE \
    --userId 'WsoqmX0U' \
    > test.out 2>&1
eval_tap $? 331 'AdminGetUserDeviceBansV4' test.out

#- 332 AdminBanDeviceV4
# body param: body
echo '{"comment": "FupJSiMR", "deviceId": "zad32RDN", "deviceType": "WqjrY28f", "enabled": false, "endDate": "nZQTZbMj", "ext": {"H1Aszcn9": {}, "pHw6BzEk": {}, "sSN49ytX": {}}, "reason": "OJ2zWhtT"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBanDeviceV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 332 'AdminBanDeviceV4' test.out

#- 333 AdminGetDeviceBanV4
$CLI_EXE \
    --sn iam \
    --op AdminGetDeviceBanV4 \
    --banId 'm3Q5z5NZ' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 333 'AdminGetDeviceBanV4' test.out

#- 334 AdminUpdateDeviceBanV4
# body param: body
echo '{"enabled": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateDeviceBanV4 \
    --banId '7TjkKLnL' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 334 'AdminUpdateDeviceBanV4' test.out

#- 335 AdminGenerateReportV4
$CLI_EXE \
    --sn iam \
    --op AdminGenerateReportV4 \
    --namespace $AB_NAMESPACE \
    --endDate 'GymGjPQo' \
    --startDate 'dkGZgpaX' \
    --deviceType 'EPuOiiN3' \
    > test.out 2>&1
eval_tap $? 335 'AdminGenerateReportV4' test.out

#- 336 AdminGetDeviceTypesV4
$CLI_EXE \
    --sn iam \
    --op AdminGetDeviceTypesV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 336 'AdminGetDeviceTypesV4' test.out

#- 337 AdminGetDeviceBansV4
$CLI_EXE \
    --sn iam \
    --op AdminGetDeviceBansV4 \
    --deviceId 'd7vSMhEi' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 337 'AdminGetDeviceBansV4' test.out

#- 338 AdminDecryptDeviceV4
eval_tap 0 338 'AdminDecryptDeviceV4 # SKIP deprecated' test.out

#- 339 AdminUnbanDeviceV4
$CLI_EXE \
    --sn iam \
    --op AdminUnbanDeviceV4 \
    --deviceId '3iSM467C' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 339 'AdminUnbanDeviceV4' test.out

#- 340 AdminGetUsersByDeviceV4
$CLI_EXE \
    --sn iam \
    --op AdminGetUsersByDeviceV4 \
    --deviceId 'Xz1KrEov' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 340 'AdminGetUsersByDeviceV4' test.out

#- 341 AdminGetNamespaceInvitationHistoryV4
$CLI_EXE \
    --sn iam \
    --op AdminGetNamespaceInvitationHistoryV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 341 'AdminGetNamespaceInvitationHistoryV4' test.out

#- 342 AdminGetNamespaceUserInvitationHistoryV4
$CLI_EXE \
    --sn iam \
    --op AdminGetNamespaceUserInvitationHistoryV4 \
    --namespace $AB_NAMESPACE \
    --limit '76' \
    --offset '51' \
    > test.out 2>&1
eval_tap $? 342 'AdminGetNamespaceUserInvitationHistoryV4' test.out

#- 343 AdminCreateTestUsersV4
# body param: body
echo '{"count": 66, "userInfo": {"country": "FLLHVRXp"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminCreateTestUsersV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 343 'AdminCreateTestUsersV4' test.out

#- 344 AdminCreateUserV4
# body param: body
echo '{"acceptedPolicies": [{"isAccepted": false, "localizedPolicyVersionId": "X3KkfYyu", "policyId": "TSWZoVbc", "policyVersionId": "MpwB37V7"}, {"isAccepted": false, "localizedPolicyVersionId": "ZuBal2Jf", "policyId": "K5QLOsXo", "policyVersionId": "SpGP5dgm"}, {"isAccepted": true, "localizedPolicyVersionId": "eXNSHvVZ", "policyId": "qMOa1vUW", "policyVersionId": "KW7fCy0s"}], "authType": "EMAILPASSWD", "code": "ILa3Gjcp", "country": "ZxW3o7Dn", "dateOfBirth": "MTkcwhLb", "displayName": "Up07gsJo", "emailAddress": "yCmHj2hp", "password": "drnsTlUm", "passwordMD5Sum": "PTJHWMQQ", "reachMinimumAge": false, "uniqueDisplayName": "jq1ASj3G", "username": "umMW44jb"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminCreateUserV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 344 'AdminCreateUserV4' test.out

#- 345 AdminBulkUpdateUserAccountTypeV4
# body param: body
echo '{"testAccount": true, "userIds": ["1VKvLykV", "wb0h6xmy", "SWGBK4tX"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBulkUpdateUserAccountTypeV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 345 'AdminBulkUpdateUserAccountTypeV4' test.out

#- 346 AdminBulkCheckValidUserIDV4
# body param: body
echo '{"userIds": ["H7LK1M0P", "L5rH1qHr", "1DkTrEm9"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBulkCheckValidUserIDV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 346 'AdminBulkCheckValidUserIDV4' test.out

#- 347 AdminUpdateUserV4
# body param: body
echo '{"avatarUrl": "gp5vebiL", "country": "bYElpjRa", "dateOfBirth": "FWS91LOF", "displayName": "0bWY0ika", "languageTag": "4PXV6nOj", "skipLoginQueue": true, "uniqueDisplayName": "HBpDYwEt", "userName": "cZAT6gtz"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserV4 \
    --namespace $AB_NAMESPACE \
    --userId 'gaSdwGfO' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 347 'AdminUpdateUserV4' test.out

#- 348 AdminUpdateUserEmailAddressV4
# body param: body
echo '{"code": "XIdNXrDG", "emailAddress": "QOfBRVmi"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserEmailAddressV4 \
    --namespace $AB_NAMESPACE \
    --userId 'XLy9onsa' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 348 'AdminUpdateUserEmailAddressV4' test.out

#- 349 AdminDisableUserMFAV4
# body param: body
echo '{"factor": "MQh9DCOt", "mfaToken": "FzADJRDD"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDisableUserMFAV4 \
    --namespace $AB_NAMESPACE \
    --userId 'sTbRqcfv' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 349 'AdminDisableUserMFAV4' test.out

#- 350 AdminGetUserMFAStatusV4
$CLI_EXE \
    --sn iam \
    --op AdminGetUserMFAStatusV4 \
    --namespace $AB_NAMESPACE \
    --userId 'nU3bOu29' \
    > test.out 2>&1
eval_tap $? 350 'AdminGetUserMFAStatusV4' test.out

#- 351 AdminListUserRolesV4
$CLI_EXE \
    --sn iam \
    --op AdminListUserRolesV4 \
    --namespace $AB_NAMESPACE \
    --userId '0BVODZvQ' \
    > test.out 2>&1
eval_tap $? 351 'AdminListUserRolesV4' test.out

#- 352 AdminUpdateUserRoleV4
# body param: body
echo '{"assignedNamespaces": ["ldM2KS1I", "BLk8ta9H", "QnQqdTi9"], "roleId": "DNjsVx5E"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserRoleV4 \
    --namespace $AB_NAMESPACE \
    --userId 'IYVOvBrw' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 352 'AdminUpdateUserRoleV4' test.out

#- 353 AdminAddUserRoleV4
# body param: body
echo '{"assignedNamespaces": ["8TXKr6t6", "KPC1bdzB", "2qyMuQBv"], "roleId": "QkxscVXy"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddUserRoleV4 \
    --namespace $AB_NAMESPACE \
    --userId 'nmPahyk3' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 353 'AdminAddUserRoleV4' test.out

#- 354 AdminRemoveUserRoleV4
# body param: body
echo '{"assignedNamespaces": ["E7qDEYtM", "nnWc4dKO", "4iXBiMtY"], "roleId": "j4DlEDeD"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminRemoveUserRoleV4 \
    --namespace $AB_NAMESPACE \
    --userId 'uqgNaDD5' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 354 'AdminRemoveUserRoleV4' test.out

#- 355 AdminGetRolesV4
$CLI_EXE \
    --sn iam \
    --op AdminGetRolesV4 \
    --adminRole 'false' \
    --isWildcard 'true' \
    --limit '48' \
    --offset '42' \
    > test.out 2>&1
eval_tap $? 355 'AdminGetRolesV4' test.out

#- 356 AdminCreateRoleV4
# body param: body
echo '{"adminRole": false, "deletable": false, "isWildcard": true, "roleName": "2VkA4o7V"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminCreateRoleV4 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 356 'AdminCreateRoleV4' test.out

#- 357 AdminGetRoleV4
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleV4 \
    --roleId '5yjmo7pw' \
    > test.out 2>&1
eval_tap $? 357 'AdminGetRoleV4' test.out

#- 358 AdminDeleteRoleV4
$CLI_EXE \
    --sn iam \
    --op AdminDeleteRoleV4 \
    --roleId 'DPlTaTSZ' \
    > test.out 2>&1
eval_tap $? 358 'AdminDeleteRoleV4' test.out

#- 359 AdminUpdateRoleV4
# body param: body
echo '{"adminRole": false, "deletable": false, "isWildcard": true, "roleName": "aGpsm4nh"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateRoleV4 \
    --roleId 'sObUL0j2' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 359 'AdminUpdateRoleV4' test.out

#- 360 AdminUpdateRolePermissionsV4
# body param: body
echo '{"permissions": [{"action": 74, "resource": "FM8BOHJa", "schedAction": 57, "schedCron": "rkZ8bPW1", "schedRange": ["pmAGlh1M", "7vO5rzMY", "cCBAVEsD"]}, {"action": 28, "resource": "ExVEfr7j", "schedAction": 60, "schedCron": "tlmMWHiI", "schedRange": ["tfKMRTPq", "4GpSch7L", "ThDas4Ep"]}, {"action": 87, "resource": "Y4tcMfzV", "schedAction": 60, "schedCron": "RfblZVxk", "schedRange": ["t5jgF2Xe", "mld24lLa", "ux1N4THU"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateRolePermissionsV4 \
    --roleId 'mkgBrf07' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 360 'AdminUpdateRolePermissionsV4' test.out

#- 361 AdminAddRolePermissionsV4
# body param: body
echo '{"permissions": [{"action": 6, "resource": "XbJPwxYY", "schedAction": 100, "schedCron": "yTUEEEtS", "schedRange": ["0HEr06TA", "xPaFZ81O", "vEzX3F0i"]}, {"action": 97, "resource": "Hcm4y4d9", "schedAction": 73, "schedCron": "wmphaDxi", "schedRange": ["01yPND3c", "GXsYQsnK", "RE8jcwPJ"]}, {"action": 61, "resource": "BsaP2Dy0", "schedAction": 26, "schedCron": "NS0TYsBr", "schedRange": ["YjgIAxjD", "zbDUi4Bv", "MyxdpArH"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddRolePermissionsV4 \
    --roleId 'I5NqN6wo' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 361 'AdminAddRolePermissionsV4' test.out

#- 362 AdminDeleteRolePermissionsV4
# body param: body
echo '["068uYtBh", "TjozNvyD", "SJqQELTE"]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDeleteRolePermissionsV4 \
    --roleId 'tkikOVmm' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 362 'AdminDeleteRolePermissionsV4' test.out

#- 363 AdminListAssignedUsersV4
$CLI_EXE \
    --sn iam \
    --op AdminListAssignedUsersV4 \
    --roleId 'oFP5QXG5' \
    --after 'ZZbrIHZf' \
    --before 'xOAXQI3F' \
    --limit '66' \
    > test.out 2>&1
eval_tap $? 363 'AdminListAssignedUsersV4' test.out

#- 364 AdminAssignUserToRoleV4
# body param: body
echo '{"assignedNamespaces": ["EnhFFtte", "cEvZgUJf", "y4J9Bgjv"], "namespace": "jFJ1nAei", "userId": "YGJZWpTg"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAssignUserToRoleV4 \
    --roleId 'mXXgPOOr' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 364 'AdminAssignUserToRoleV4' test.out

#- 365 AdminRevokeUserFromRoleV4
# body param: body
echo '{"namespace": "pCbLMrui", "userId": "XcpRUhBw"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminRevokeUserFromRoleV4 \
    --roleId '6BotfkVO' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 365 'AdminRevokeUserFromRoleV4' test.out

#- 366 AdminInviteUserNewV4
# body param: body
echo '{"assignedNamespaces": ["l5brWquw", "ZcbbT3Fa", "Fv5CYhsS"], "emailAddresses": ["3eH2wbyF", "i4x5P0q8", "aNmLprl2"], "isAdmin": true, "isNewStudio": false, "languageTag": "yn3DcSx2", "namespace": "0FshYp6v", "roleId": "GTX8A4kC"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminInviteUserNewV4 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 366 'AdminInviteUserNewV4' test.out

#- 367 AdminUpdateMyUserV4
# body param: body
echo '{"avatarUrl": "c3nbsKeX", "country": "DjemM7a3", "dateOfBirth": "RcyxU4pc", "displayName": "Iqd1kSZs", "languageTag": "yhuJKwc4", "skipLoginQueue": true, "uniqueDisplayName": "BWgk3oMB", "userName": "gtIjIzJD"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateMyUserV4 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 367 'AdminUpdateMyUserV4' test.out

#- 368 AdminDisableMyAuthenticatorV4
# body param: body
echo '{"factor": "sGg65ioU", "mfaToken": "N3EX0D4B"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDisableMyAuthenticatorV4 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 368 'AdminDisableMyAuthenticatorV4' test.out

#- 369 AdminEnableMyAuthenticatorV4
$CLI_EXE \
    --sn iam \
    --op AdminEnableMyAuthenticatorV4 \
    --code '3FHOQnih' \
    > test.out 2>&1
eval_tap $? 369 'AdminEnableMyAuthenticatorV4' test.out

#- 370 AdminGenerateMyAuthenticatorKeyV4
$CLI_EXE \
    --sn iam \
    --op AdminGenerateMyAuthenticatorKeyV4 \
    > test.out 2>&1
eval_tap $? 370 'AdminGenerateMyAuthenticatorKeyV4' test.out

#- 371 AdminGetMyBackupCodesV4
eval_tap 0 371 'AdminGetMyBackupCodesV4 # SKIP deprecated' test.out

#- 372 AdminGenerateMyBackupCodesV4
eval_tap 0 372 'AdminGenerateMyBackupCodesV4 # SKIP deprecated' test.out

#- 373 AdminDisableMyBackupCodesV4
# body param: body
echo '{"factor": "H3Wf3Sb8", "mfaToken": "WatgvG1i"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDisableMyBackupCodesV4 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 373 'AdminDisableMyBackupCodesV4' test.out

#- 374 AdminDownloadMyBackupCodesV4
eval_tap 0 374 'AdminDownloadMyBackupCodesV4 # SKIP deprecated' test.out

#- 375 AdminEnableMyBackupCodesV4
eval_tap 0 375 'AdminEnableMyBackupCodesV4 # SKIP deprecated' test.out

#- 376 AdminGetBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op AdminGetBackupCodesV4 \
    --languageTag 'nVN8iuKq' \
    > test.out 2>&1
eval_tap $? 376 'AdminGetBackupCodesV4' test.out

#- 377 AdminGenerateBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op AdminGenerateBackupCodesV4 \
    --languageTag '3jL0m5kH' \
    > test.out 2>&1
eval_tap $? 377 'AdminGenerateBackupCodesV4' test.out

#- 378 AdminEnableBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op AdminEnableBackupCodesV4 \
    --languageTag '8fkaACMn' \
    > test.out 2>&1
eval_tap $? 378 'AdminEnableBackupCodesV4' test.out

#- 379 AdminChallengeMyMFAV4
$CLI_EXE \
    --sn iam \
    --op AdminChallengeMyMFAV4 \
    --code 'UABlIlqB' \
    --factor 'jOl1guAv' \
    > test.out 2>&1
eval_tap $? 379 'AdminChallengeMyMFAV4' test.out

#- 380 AdminSendMyMFAEmailCodeV4
$CLI_EXE \
    --sn iam \
    --op AdminSendMyMFAEmailCodeV4 \
    --action 'nW9Veumb' \
    --languageTag '0SgzbgMm' \
    > test.out 2>&1
eval_tap $? 380 'AdminSendMyMFAEmailCodeV4' test.out

#- 381 AdminDisableMyEmailV4
# body param: body
echo '{"factor": "AELTnQCA", "mfaToken": "CPSVBIKg"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDisableMyEmailV4 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 381 'AdminDisableMyEmailV4' test.out

#- 382 AdminEnableMyEmailV4
$CLI_EXE \
    --sn iam \
    --op AdminEnableMyEmailV4 \
    --code 'xIarX5C8' \
    > test.out 2>&1
eval_tap $? 382 'AdminEnableMyEmailV4' test.out

#- 383 AdminGetMyEnabledFactorsV4
$CLI_EXE \
    --sn iam \
    --op AdminGetMyEnabledFactorsV4 \
    > test.out 2>&1
eval_tap $? 383 'AdminGetMyEnabledFactorsV4' test.out

#- 384 AdminMakeFactorMyDefaultV4
$CLI_EXE \
    --sn iam \
    --op AdminMakeFactorMyDefaultV4 \
    --factor '1SI3abIM' \
    > test.out 2>&1
eval_tap $? 384 'AdminMakeFactorMyDefaultV4' test.out

#- 385 AdminGetMyOwnMFAStatusV4
$CLI_EXE \
    --sn iam \
    --op AdminGetMyOwnMFAStatusV4 \
    > test.out 2>&1
eval_tap $? 385 'AdminGetMyOwnMFAStatusV4' test.out

#- 386 AdminGetMyMFAStatusV4
eval_tap 0 386 'AdminGetMyMFAStatusV4 # SKIP deprecated' test.out

#- 387 AdminInviteUserV4
eval_tap 0 387 'AdminInviteUserV4 # SKIP deprecated' test.out

#- 388 AuthenticationWithPlatformLinkV4
$CLI_EXE \
    --sn iam \
    --op AuthenticationWithPlatformLinkV4 \
    --extend_exp 'false' \
    --client_id 'hx0CN7xs' \
    --linkingToken 'zqA3ovrl' \
    --password '3Nau2UyU' \
    --username 'yagjbOsU' \
    > test.out 2>&1
eval_tap $? 388 'AuthenticationWithPlatformLinkV4' test.out

#- 389 GenerateTokenByNewHeadlessAccountV4
$CLI_EXE \
    --sn iam \
    --op GenerateTokenByNewHeadlessAccountV4 \
    --additionalData 'SsTSNcmD' \
    --extend_exp 'false' \
    --linkingToken 'vekBDeu1' \
    > test.out 2>&1
eval_tap $? 389 'GenerateTokenByNewHeadlessAccountV4' test.out

#- 390 Verify2faCodeV4
$CLI_EXE \
    --sn iam \
    --op Verify2faCodeV4 \
    --code 'TBDGDHSW' \
    --factor 'xnBmwLv4' \
    --mfaToken 'E15EA44S' \
    --rememberDevice 'true' \
    > test.out 2>&1
eval_tap $? 390 'Verify2faCodeV4' test.out

#- 391 PlatformTokenGrantV4
$CLI_EXE \
    --sn iam \
    --op PlatformTokenGrantV4 \
    --platformId 'E9f4XUMo' \
    --codeChallenge 'wDrc7eIA' \
    --codeChallengeMethod 'S256' \
    --additionalData 'gREL0BG7' \
    --client_id 'v3r7fPpT' \
    --createHeadless 'false' \
    --device_id 'JUAuQ3L0' \
    --macAddress 'q1ooZAoj' \
    --platform_token 'BRbfHCQB' \
    --serviceLabel '0.8018880133128725' \
    --skipSetCookie 'true' \
    > test.out 2>&1
eval_tap $? 391 'PlatformTokenGrantV4' test.out

#- 392 SimultaneousLoginV4
$CLI_EXE \
    --sn iam \
    --op SimultaneousLoginV4 \
    --codeChallenge 'FSaJshun' \
    --codeChallengeMethod 'plain' \
    --simultaneousPlatform 'C54l8GAI' \
    --simultaneousTicket 'XQ8Hr6IP' \
    --nativePlatform 'epicgames' \
    --nativePlatformTicket 'bqNZHFfl' \
    > test.out 2>&1
eval_tap $? 392 'SimultaneousLoginV4' test.out

#- 393 TokenGrantV4
$CLI_EXE \
    --sn iam \
    --op TokenGrantV4 \
    --codeChallenge 'i1OkjFX1' \
    --codeChallengeMethod 'plain' \
    --additionalData '63qoq876' \
    --client_id '9qJnkZNy' \
    --client_secret 'JS9s2Er7' \
    --code 'CEBRT6gN' \
    --code_verifier '5PQ21jWt' \
    --extendNamespace 'WAq6J2XJ' \
    --extend_exp 'false' \
    --login_queue_ticket '9FXdtNXk' \
    --password 'C2zuz3HX' \
    --redirect_uri 'NovY98Od' \
    --refresh_token 'vLif9xUL' \
    --username 'coF1AbH0' \
    --grant_type 'urn:ietf:params:oauth:grant-type:login_queue_ticket' \
    > test.out 2>&1
eval_tap $? 393 'TokenGrantV4' test.out

#- 394 RequestTargetTokenResponseV4
$CLI_EXE \
    --sn iam \
    --op RequestTargetTokenResponseV4 \
    --additionalData 'D8DPPHKr' \
    --code 'EWF3Q1qc' \
    > test.out 2>&1
eval_tap $? 394 'RequestTargetTokenResponseV4' test.out

#- 395 PublicListUserIDByPlatformUserIDsV4
# body param: body
echo '{"pidType": "cPc7rAZO", "platformUserIds": ["Dd6rTzPY", "6NPG7VOp", "JfWZGGvY"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicListUserIDByPlatformUserIDsV4 \
    --namespace $AB_NAMESPACE \
    --platformId '5Tf5LbFQ' \
    --rawPUID 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 395 'PublicListUserIDByPlatformUserIDsV4' test.out

#- 396 PublicCreateTestUserV4
# body param: body
echo '{"acceptedPolicies": [{"isAccepted": true, "localizedPolicyVersionId": "WFIq39J6", "policyId": "gBjav9sJ", "policyVersionId": "9ome1Gor"}, {"isAccepted": true, "localizedPolicyVersionId": "awtDCAr1", "policyId": "l2gJBlYZ", "policyVersionId": "iPnZgazj"}, {"isAccepted": true, "localizedPolicyVersionId": "2m5c2VD0", "policyId": "9CnDk0ZE", "policyVersionId": "6UIuBPs3"}], "authType": "EMAILPASSWD", "country": "1RvU1tkD", "dateOfBirth": "xazTr5sp", "displayName": "i2sGurTa", "emailAddress": "IGVfahDI", "password": "dQQtX0av", "passwordMD5Sum": "fDDbCgDl", "uniqueDisplayName": "CPh7JLYw", "username": "dMA4ARRJ", "verified": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicCreateTestUserV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 396 'PublicCreateTestUserV4' test.out

#- 397 PublicCreateUserV4
# body param: body
echo '{"acceptedPolicies": [{"isAccepted": true, "localizedPolicyVersionId": "I7pyqAAl", "policyId": "yq69LXUe", "policyVersionId": "lkpuh57v"}, {"isAccepted": false, "localizedPolicyVersionId": "0OjPkWDv", "policyId": "1J9PRdNi", "policyVersionId": "nFfMv43c"}, {"isAccepted": false, "localizedPolicyVersionId": "hQmmPr8s", "policyId": "oIWtHDix", "policyVersionId": "HtWumKeC"}], "authType": "EMAILPASSWD", "code": "h4dQwlyC", "country": "DzXh5aZc", "dateOfBirth": "j4369jkP", "displayName": "ariNv468", "emailAddress": "15MrjiBM", "password": "0ffdSlEh", "passwordMD5Sum": "FBBo6qMS", "reachMinimumAge": true, "uniqueDisplayName": "ITieRf2Y", "username": "XKSoRUAm"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicCreateUserV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 397 'PublicCreateUserV4' test.out

#- 398 CreateUserFromInvitationV4
# body param: body
echo '{"acceptedPolicies": [{"isAccepted": true, "localizedPolicyVersionId": "wrF1m4Tt", "policyId": "3Pd8Cnho", "policyVersionId": "PZROGH7y"}, {"isAccepted": false, "localizedPolicyVersionId": "Q6SB9md0", "policyId": "uiOxVKuw", "policyVersionId": "Ue1nbIN2"}, {"isAccepted": false, "localizedPolicyVersionId": "yf1F3Gqa", "policyId": "0z6KCUc8", "policyVersionId": "Xt7PXHMx"}], "authType": "EMAILPASSWD", "code": "4zSPkaOP", "country": "3h2uCUCW", "dateOfBirth": "vl7OBTJA", "displayName": "nRzCm1u0", "emailAddress": "oJQ2d4Ag", "password": "vjWLLhTn", "passwordMD5Sum": "RPiMV84E", "reachMinimumAge": true, "uniqueDisplayName": "u2zz5DF0", "username": "wpL8EtxI"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op CreateUserFromInvitationV4 \
    --invitationId 'fsG2eaAM' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 398 'CreateUserFromInvitationV4' test.out

#- 399 PublicUpdateUserV4
# body param: body
echo '{"avatarUrl": "5eVInpah", "country": "ZEMWQcr4", "dateOfBirth": "RGkdiAYu", "displayName": "moIu9xXA", "languageTag": "OaQWFUBD", "uniqueDisplayName": "5XakXJXl", "userName": "fEKI7RoK"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpdateUserV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 399 'PublicUpdateUserV4' test.out

#- 400 PublicUpdateUserEmailAddressV4
# body param: body
echo '{"code": "Z9Zd0mtj", "emailAddress": "DMUyfFlj"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpdateUserEmailAddressV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 400 'PublicUpdateUserEmailAddressV4' test.out

#- 401 PublicUpgradeHeadlessAccountWithVerificationCodeV4
# body param: body
echo '{"code": "cGBFQexI", "country": "zlLPwWZ8", "dateOfBirth": "362EqJMH", "displayName": "avxU6Xbm", "emailAddress": "cWg1b6dL", "password": "3uT9dCWl", "reachMinimumAge": false, "uniqueDisplayName": "aeV6nm5i", "username": "fxHW25bE", "validateOnly": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpgradeHeadlessAccountWithVerificationCodeV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 401 'PublicUpgradeHeadlessAccountWithVerificationCodeV4' test.out

#- 402 PublicUpgradeHeadlessAccountV4
# body param: body
echo '{"dateOfBirth": "8cTAWW2v", "displayName": "V176o3hx", "emailAddress": "Q2Hhrva7", "password": "Xktx0cMv", "uniqueDisplayName": "8N5jSX0c", "username": "0cmtuuvJ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpgradeHeadlessAccountV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 402 'PublicUpgradeHeadlessAccountV4' test.out

#- 403 PublicDisableMyAuthenticatorV4
# body param: body
echo '{"factor": "Z1vGLTjv", "mfaToken": "ABANodF1"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicDisableMyAuthenticatorV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 403 'PublicDisableMyAuthenticatorV4' test.out

#- 404 PublicEnableMyAuthenticatorV4
$CLI_EXE \
    --sn iam \
    --op PublicEnableMyAuthenticatorV4 \
    --namespace $AB_NAMESPACE \
    --code 'wWZOrJqt' \
    > test.out 2>&1
eval_tap $? 404 'PublicEnableMyAuthenticatorV4' test.out

#- 405 PublicGenerateMyAuthenticatorKeyV4
$CLI_EXE \
    --sn iam \
    --op PublicGenerateMyAuthenticatorKeyV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 405 'PublicGenerateMyAuthenticatorKeyV4' test.out

#- 406 PublicGetMyBackupCodesV4
eval_tap 0 406 'PublicGetMyBackupCodesV4 # SKIP deprecated' test.out

#- 407 PublicGenerateMyBackupCodesV4
eval_tap 0 407 'PublicGenerateMyBackupCodesV4 # SKIP deprecated' test.out

#- 408 PublicDisableMyBackupCodesV4
# body param: body
echo '{"factor": "cr4rrOBz", "mfaToken": "QQS1WkZB"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicDisableMyBackupCodesV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 408 'PublicDisableMyBackupCodesV4' test.out

#- 409 PublicDownloadMyBackupCodesV4
eval_tap 0 409 'PublicDownloadMyBackupCodesV4 # SKIP deprecated' test.out

#- 410 PublicEnableMyBackupCodesV4
eval_tap 0 410 'PublicEnableMyBackupCodesV4 # SKIP deprecated' test.out

#- 411 PublicGetBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op PublicGetBackupCodesV4 \
    --namespace $AB_NAMESPACE \
    --languageTag 'y0rKonSi' \
    > test.out 2>&1
eval_tap $? 411 'PublicGetBackupCodesV4' test.out

#- 412 PublicGenerateBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op PublicGenerateBackupCodesV4 \
    --namespace $AB_NAMESPACE \
    --languageTag 'QDwyv8NY' \
    > test.out 2>&1
eval_tap $? 412 'PublicGenerateBackupCodesV4' test.out

#- 413 PublicEnableBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op PublicEnableBackupCodesV4 \
    --namespace $AB_NAMESPACE \
    --languageTag 'vmKUE99C' \
    > test.out 2>&1
eval_tap $? 413 'PublicEnableBackupCodesV4' test.out

#- 414 PublicChallengeMyMFAV4
$CLI_EXE \
    --sn iam \
    --op PublicChallengeMyMFAV4 \
    --namespace $AB_NAMESPACE \
    --code 'fUmVvfk3' \
    --factor 'gXywjkFT' \
    > test.out 2>&1
eval_tap $? 414 'PublicChallengeMyMFAV4' test.out

#- 415 PublicRemoveTrustedDeviceV4
$CLI_EXE \
    --sn iam \
    --op PublicRemoveTrustedDeviceV4 \
    --namespace $AB_NAMESPACE \
    --device_token 'BokaavzG' \
    > test.out 2>&1
eval_tap $? 415 'PublicRemoveTrustedDeviceV4' test.out

#- 416 PublicSendMyMFAEmailCodeV4
$CLI_EXE \
    --sn iam \
    --op PublicSendMyMFAEmailCodeV4 \
    --namespace $AB_NAMESPACE \
    --action '8o502AGP' \
    --languageTag 'Gv1dsu2W' \
    > test.out 2>&1
eval_tap $? 416 'PublicSendMyMFAEmailCodeV4' test.out

#- 417 PublicDisableMyEmailV4
# body param: body
echo '{"factor": "1Ve6LALE", "mfaToken": "tJnXt50z"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicDisableMyEmailV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 417 'PublicDisableMyEmailV4' test.out

#- 418 PublicEnableMyEmailV4
$CLI_EXE \
    --sn iam \
    --op PublicEnableMyEmailV4 \
    --namespace $AB_NAMESPACE \
    --code 'VRWtiYfH' \
    > test.out 2>&1
eval_tap $? 418 'PublicEnableMyEmailV4' test.out

#- 419 PublicGetMyEnabledFactorsV4
$CLI_EXE \
    --sn iam \
    --op PublicGetMyEnabledFactorsV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 419 'PublicGetMyEnabledFactorsV4' test.out

#- 420 PublicMakeFactorMyDefaultV4
$CLI_EXE \
    --sn iam \
    --op PublicMakeFactorMyDefaultV4 \
    --namespace $AB_NAMESPACE \
    --factor 'Qn5H5ap5' \
    > test.out 2>&1
eval_tap $? 420 'PublicMakeFactorMyDefaultV4' test.out

#- 421 PublicGetMyOwnMFAStatusV4
$CLI_EXE \
    --sn iam \
    --op PublicGetMyOwnMFAStatusV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 421 'PublicGetMyOwnMFAStatusV4' test.out

#- 422 PublicGetMyMFAStatusV4
eval_tap 0 422 'PublicGetMyMFAStatusV4 # SKIP deprecated' test.out

#- 423 PublicGetUserPublicInfoByUserIdV4
$CLI_EXE \
    --sn iam \
    --op PublicGetUserPublicInfoByUserIdV4 \
    --namespace $AB_NAMESPACE \
    --userId 'O2KgfQ9B' \
    > test.out 2>&1
eval_tap $? 423 'PublicGetUserPublicInfoByUserIdV4' test.out

#- 424 PublicInviteUserV4
# body param: body
echo '{"additionalData": "hJwxBT1I", "emailAddress": "Q7lRgRO8", "languageTag": "ZY1r8O1Y", "namespace": "uhfVGXA6", "namespaceDisplayName": "4Ppl6YJT"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicInviteUserV4 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 424 'PublicInviteUserV4' test.out

#- 425 PublicUpgradeHeadlessWithCodeV4Forward
# body param: body
echo '{"code": "hiBas2YY", "country": "DGYYKbeg", "dateOfBirth": "XvN31Q9r", "displayName": "nQqU9ffx", "emailAddress": "NhDdDzn4", "password": "0ewMo60L", "reachMinimumAge": true, "uniqueDisplayName": "PqtTUEVh", "username": "N2sNr4rH", "validateOnly": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpgradeHeadlessWithCodeV4Forward \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 425 'PublicUpgradeHeadlessWithCodeV4Forward' test.out


# remove artifacts
rm -f "$CLI_TOKEN_FILE"
rm -f "$TEMP_JSON_INPUT"
rm -f "$TEMP_FILE_UPLOAD"

exit $EXIT_CODE