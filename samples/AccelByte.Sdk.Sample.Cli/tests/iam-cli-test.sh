#!/usr/bin/env bash

# Copyright (c) 2021 AccelByte Inc. All Rights Reserved.
# This is licensed software from AccelByte Inc, for limitations
# and restrictions contact your company contract manager.

# This code is generated by tool. DO NOT EDIT.

# Meta:
# - random seed: 
# - template file: 

# Instructions:
# - Run the Justice SDK Mock Server first before running this script.

export AB_BASE_URL="http://127.0.0.1:8080"
export AB_CLIENT_ID="admin"
export AB_CLIENT_SECRET="admin"
export AB_NAMESPACE="test"
export AB_APP_NAME="UnitTest"

EXIT_CODE=0

eval_tap() {
  if [ $1 -eq 0 ]; then
    echo "ok $2 - $3"
  else
    EXIT_CODE=1
    echo "not ok $2 - $3"
    sed 's/^/# /g' $4
  fi
  rm -f $4
}

CLI_EXE="AccelByte.Sdk.Sample.Cli"
CLI_TOKEN_FILE="$(dirname "$(which $CLI_EXE)")/token.json"
TEMP_JSON_INPUT="input_json.json"
TEMP_FILE_UPLOAD="file_upload.bin"

echo "TAP version 13"
echo "1..363"

#- 1 Login
$CLI_EXE --op login --lt user --user user --pass user > test.out 2>&1
eval_tap $? 1 'Login' test.out

if [ $EXIT_CODE -ne 0 ]; then
  echo "Bail out! Login failed."
  exit $EXIT_CODE
fi

# echo "foo" > "$CLI_TOKEN_FILE"

#- 2 GetBansType
eval_tap 0 2 'GetBansType # SKIP deprecated' test.out

#- 3 GetListBanReason
eval_tap 0 3 'GetListBanReason # SKIP deprecated' test.out

#- 4 GetClients
eval_tap 0 4 'GetClients # SKIP deprecated' test.out

#- 5 CreateClient
eval_tap 0 5 'CreateClient # SKIP deprecated' test.out

#- 6 GetClient
eval_tap 0 6 'GetClient # SKIP deprecated' test.out

#- 7 UpdateClient
eval_tap 0 7 'UpdateClient # SKIP deprecated' test.out

#- 8 DeleteClient
eval_tap 0 8 'DeleteClient # SKIP deprecated' test.out

#- 9 UpdateClientPermission
eval_tap 0 9 'UpdateClientPermission # SKIP deprecated' test.out

#- 10 AddClientPermission
eval_tap 0 10 'AddClientPermission # SKIP deprecated' test.out

#- 11 DeleteClientPermission
eval_tap 0 11 'DeleteClientPermission # SKIP deprecated' test.out

#- 12 UpdateClientSecret
eval_tap 0 12 'UpdateClientSecret # SKIP deprecated' test.out

#- 13 GetClientsbyNamespace
eval_tap 0 13 'GetClientsbyNamespace # SKIP deprecated' test.out

#- 14 CreateClientByNamespace
eval_tap 0 14 'CreateClientByNamespace # SKIP deprecated' test.out

#- 15 DeleteClientByNamespace
eval_tap 0 15 'DeleteClientByNamespace # SKIP deprecated' test.out

#- 16 CreateUser
eval_tap 0 16 'CreateUser # SKIP deprecated' test.out

#- 17 GetAdminUsersByRoleID
eval_tap 0 17 'GetAdminUsersByRoleID # SKIP deprecated' test.out

#- 18 GetUserByLoginID
eval_tap 0 18 'GetUserByLoginID # SKIP deprecated' test.out

#- 19 GetUserByPlatformUserID
eval_tap 0 19 'GetUserByPlatformUserID # SKIP deprecated' test.out

#- 20 ForgotPassword
eval_tap 0 20 'ForgotPassword # SKIP deprecated' test.out

#- 21 GetUsersByLoginIds
eval_tap 0 21 'GetUsersByLoginIds # SKIP deprecated' test.out

#- 22 ResetPassword
eval_tap 0 22 'ResetPassword # SKIP deprecated' test.out

#- 23 SearchUser
eval_tap 0 23 'SearchUser # SKIP deprecated' test.out

#- 24 GetUserByUserID
eval_tap 0 24 'GetUserByUserID # SKIP deprecated' test.out

#- 25 UpdateUser
eval_tap 0 25 'UpdateUser # SKIP deprecated' test.out

#- 26 DeleteUser
eval_tap 0 26 'DeleteUser # SKIP deprecated' test.out

#- 27 BanUser
eval_tap 0 27 'BanUser # SKIP deprecated' test.out

#- 28 GetUserBanHistory
eval_tap 0 28 'GetUserBanHistory # SKIP deprecated' test.out

#- 29 DisableUserBan
eval_tap 0 29 'DisableUserBan # SKIP deprecated' test.out

#- 30 EnableUserBan
eval_tap 0 30 'EnableUserBan # SKIP deprecated' test.out

#- 31 ListCrossNamespaceAccountLink
eval_tap 0 31 'ListCrossNamespaceAccountLink # SKIP deprecated' test.out

#- 32 DisableUser
eval_tap 0 32 'DisableUser # SKIP deprecated' test.out

#- 33 EnableUser
eval_tap 0 33 'EnableUser # SKIP deprecated' test.out

#- 34 GetUserInformation
eval_tap 0 34 'GetUserInformation # SKIP deprecated' test.out

#- 35 DeleteUserInformation
eval_tap 0 35 'DeleteUserInformation # SKIP deprecated' test.out

#- 36 GetUserLoginHistories
eval_tap 0 36 'GetUserLoginHistories # SKIP deprecated' test.out

#- 37 UpdatePassword
eval_tap 0 37 'UpdatePassword # SKIP deprecated' test.out

#- 38 SaveUserPermission
eval_tap 0 38 'SaveUserPermission # SKIP deprecated' test.out

#- 39 AddUserPermission
eval_tap 0 39 'AddUserPermission # SKIP deprecated' test.out

#- 40 DeleteUserPermission
eval_tap 0 40 'DeleteUserPermission # SKIP deprecated' test.out

#- 41 GetUserPlatformAccounts
eval_tap 0 41 'GetUserPlatformAccounts # SKIP deprecated' test.out

#- 42 GetUserMapping
eval_tap 0 42 'GetUserMapping # SKIP deprecated' test.out

#- 43 GetUserJusticePlatformAccount
eval_tap 0 43 'GetUserJusticePlatformAccount # SKIP deprecated' test.out

#- 44 PlatformLink
eval_tap 0 44 'PlatformLink # SKIP deprecated' test.out

#- 45 PlatformUnlink
eval_tap 0 45 'PlatformUnlink # SKIP deprecated' test.out

#- 46 GetPublisherUser
eval_tap 0 46 'GetPublisherUser # SKIP deprecated' test.out

#- 47 SaveUserRoles
eval_tap 0 47 'SaveUserRoles # SKIP deprecated' test.out

#- 48 AddUserRole
eval_tap 0 48 'AddUserRole # SKIP deprecated' test.out

#- 49 DeleteUserRole
eval_tap 0 49 'DeleteUserRole # SKIP deprecated' test.out

#- 50 UpgradeHeadlessAccount
eval_tap 0 50 'UpgradeHeadlessAccount # SKIP deprecated' test.out

#- 51 UpgradeHeadlessAccountWithVerificationCode
eval_tap 0 51 'UpgradeHeadlessAccountWithVerificationCode # SKIP deprecated' test.out

#- 52 UserVerification
eval_tap 0 52 'UserVerification # SKIP deprecated' test.out

#- 53 SendVerificationCode
eval_tap 0 53 'SendVerificationCode # SKIP deprecated' test.out

#- 54 Authorization
eval_tap 0 54 'Authorization # SKIP deprecated' test.out

#- 55 GetJWKS
eval_tap 0 55 'GetJWKS # SKIP deprecated' test.out

#- 56 PlatformTokenRequestHandler
eval_tap 0 56 'PlatformTokenRequestHandler # SKIP deprecated' test.out

#- 57 RevokeUser
eval_tap 0 57 'RevokeUser # SKIP deprecated' test.out

#- 58 GetRevocationList
eval_tap 0 58 'GetRevocationList # SKIP deprecated' test.out

#- 59 RevokeToken
eval_tap 0 59 'RevokeToken # SKIP deprecated' test.out

#- 60 RevokeAUser
eval_tap 0 60 'RevokeAUser # SKIP deprecated' test.out

#- 61 TokenGrant
eval_tap 0 61 'TokenGrant # SKIP deprecated' test.out

#- 62 VerifyToken
eval_tap 0 62 'VerifyToken # SKIP deprecated' test.out

#- 63 GetRoles
eval_tap 0 63 'GetRoles # SKIP deprecated' test.out

#- 64 CreateRole
eval_tap 0 64 'CreateRole # SKIP deprecated' test.out

#- 65 GetRole
eval_tap 0 65 'GetRole # SKIP deprecated' test.out

#- 66 UpdateRole
eval_tap 0 66 'UpdateRole # SKIP deprecated' test.out

#- 67 DeleteRole
eval_tap 0 67 'DeleteRole # SKIP deprecated' test.out

#- 68 GetRoleAdminStatus
eval_tap 0 68 'GetRoleAdminStatus # SKIP deprecated' test.out

#- 69 SetRoleAsAdmin
eval_tap 0 69 'SetRoleAsAdmin # SKIP deprecated' test.out

#- 70 RemoveRoleAdmin
eval_tap 0 70 'RemoveRoleAdmin # SKIP deprecated' test.out

#- 71 GetRoleManagers
eval_tap 0 71 'GetRoleManagers # SKIP deprecated' test.out

#- 72 AddRoleManagers
eval_tap 0 72 'AddRoleManagers # SKIP deprecated' test.out

#- 73 RemoveRoleManagers
eval_tap 0 73 'RemoveRoleManagers # SKIP deprecated' test.out

#- 74 GetRoleMembers
eval_tap 0 74 'GetRoleMembers # SKIP deprecated' test.out

#- 75 AddRoleMembers
eval_tap 0 75 'AddRoleMembers # SKIP deprecated' test.out

#- 76 RemoveRoleMembers
eval_tap 0 76 'RemoveRoleMembers # SKIP deprecated' test.out

#- 77 UpdateRolePermissions
eval_tap 0 77 'UpdateRolePermissions # SKIP deprecated' test.out

#- 78 AddRolePermission
eval_tap 0 78 'AddRolePermission # SKIP deprecated' test.out

#- 79 DeleteRolePermission
eval_tap 0 79 'DeleteRolePermission # SKIP deprecated' test.out

#- 80 AdminGetAgeRestrictionStatusV2
eval_tap 0 80 'AdminGetAgeRestrictionStatusV2 # SKIP deprecated' test.out

#- 81 AdminUpdateAgeRestrictionConfigV2
eval_tap 0 81 'AdminUpdateAgeRestrictionConfigV2 # SKIP deprecated' test.out

#- 82 GetListCountryAgeRestriction
eval_tap 0 82 'GetListCountryAgeRestriction # SKIP deprecated' test.out

#- 83 UpdateCountryAgeRestriction
eval_tap 0 83 'UpdateCountryAgeRestriction # SKIP deprecated' test.out

#- 84 AdminSearchUsersV2
eval_tap 0 84 'AdminSearchUsersV2 # SKIP deprecated' test.out

#- 85 AdminGetUserByUserIdV2
eval_tap 0 85 'AdminGetUserByUserIdV2 # SKIP deprecated' test.out

#- 86 AdminUpdateUserV2
eval_tap 0 86 'AdminUpdateUserV2 # SKIP deprecated' test.out

#- 87 AdminBanUserV2
eval_tap 0 87 'AdminBanUserV2 # SKIP deprecated' test.out

#- 88 AdminGetUserBanV2
eval_tap 0 88 'AdminGetUserBanV2 # SKIP deprecated' test.out

#- 89 AdminDisableUserV2
eval_tap 0 89 'AdminDisableUserV2 # SKIP deprecated' test.out

#- 90 AdminEnableUserV2
eval_tap 0 90 'AdminEnableUserV2 # SKIP deprecated' test.out

#- 91 AdminResetPasswordV2
eval_tap 0 91 'AdminResetPasswordV2 # SKIP deprecated' test.out

#- 92 AdminDeletePlatformLinkV2
eval_tap 0 92 'AdminDeletePlatformLinkV2 # SKIP deprecated' test.out

#- 93 AdminPutUserRolesV2
eval_tap 0 93 'AdminPutUserRolesV2 # SKIP deprecated' test.out

#- 94 AdminCreateUserRolesV2
eval_tap 0 94 'AdminCreateUserRolesV2 # SKIP deprecated' test.out

#- 95 PublicGetCountryAgeRestriction
eval_tap 0 95 'PublicGetCountryAgeRestriction # SKIP deprecated' test.out

#- 96 PublicCreateUserV2
eval_tap 0 96 'PublicCreateUserV2 # SKIP deprecated' test.out

#- 97 PublicForgotPasswordV2
eval_tap 0 97 'PublicForgotPasswordV2 # SKIP deprecated' test.out

#- 98 PublicResetPasswordV2
eval_tap 0 98 'PublicResetPasswordV2 # SKIP deprecated' test.out

#- 99 PublicGetUserByUserIDV2
eval_tap 0 99 'PublicGetUserByUserIDV2 # SKIP deprecated' test.out

#- 100 PublicUpdateUserV2
eval_tap 0 100 'PublicUpdateUserV2 # SKIP deprecated' test.out

#- 101 PublicGetUserBan
eval_tap 0 101 'PublicGetUserBan # SKIP deprecated' test.out

#- 102 PublicUpdatePasswordV2
eval_tap 0 102 'PublicUpdatePasswordV2 # SKIP deprecated' test.out

#- 103 GetListJusticePlatformAccounts
eval_tap 0 103 'GetListJusticePlatformAccounts # SKIP deprecated' test.out

#- 104 PublicPlatformLinkV2
eval_tap 0 104 'PublicPlatformLinkV2 # SKIP deprecated' test.out

#- 105 PublicDeletePlatformLinkV2
eval_tap 0 105 'PublicDeletePlatformLinkV2 # SKIP deprecated' test.out

#- 106 AdminGetBansTypeV3
$CLI_EXE \
    --sn iam \
    --op AdminGetBansTypeV3 \
    > test.out 2>&1
eval_tap $? 106 'AdminGetBansTypeV3' test.out

#- 107 AdminGetListBanReasonV3
$CLI_EXE \
    --sn iam \
    --op AdminGetListBanReasonV3 \
    > test.out 2>&1
eval_tap $? 107 'AdminGetListBanReasonV3' test.out

#- 108 AdminGetInputValidations
$CLI_EXE \
    --sn iam \
    --op AdminGetInputValidations \
    > test.out 2>&1
eval_tap $? 108 'AdminGetInputValidations' test.out

#- 109 AdminUpdateInputValidations
# body param: body
echo '[{"field": "KBkE9o1B", "validation": {"allowAllSpecialCharacters": true, "allowDigit": true, "allowLetter": false, "allowSpace": true, "allowUnicode": true, "avatarConfig": {"allowedPrefixes": ["DaliePxy", "B4WX4DwU", "b5eRir8S"], "preferRegex": false, "regex": "vMWAVZ30"}, "blockedWord": ["w7RiOEoa", "CSOD9agc", "2mVLZ0SM"], "description": [{"language": "p3w7aOki", "message": ["Pe6cRtvA", "gYzs97yX", "9s5caJia"]}, {"language": "M43qHrfV", "message": ["5fSeTNjL", "xuXWW2kW", "8kUkmJf2"]}, {"language": "ysmUtCqg", "message": ["z2uGZmTW", "ZrzSMJZl", "Hd8CPaVR"]}], "isCustomRegex": true, "letterCase": "StYwUbni", "maxLength": 11, "maxRepeatingAlphaNum": 23, "maxRepeatingSpecialCharacter": 10, "minCharType": 35, "minLength": 42, "regex": "9GBkh9II", "specialCharacterLocation": "zuaF9C4k", "specialCharacters": ["QlDVJTmR", "yhsR0Ayn", "uYzz5eko"]}}, {"field": "cRUin4rg", "validation": {"allowAllSpecialCharacters": true, "allowDigit": true, "allowLetter": true, "allowSpace": false, "allowUnicode": false, "avatarConfig": {"allowedPrefixes": ["l1B738rk", "4DwO3zqg", "foLrGUK5"], "preferRegex": true, "regex": "uzEEcU8G"}, "blockedWord": ["JUfI2lac", "dMGjxY5l", "6fwhXZgO"], "description": [{"language": "upitqdQk", "message": ["pCzhB5KS", "BE31TIhJ", "UK5T3iDm"]}, {"language": "biSJqMxa", "message": ["YTDzAx01", "nKsQgB9L", "5SOR0xCv"]}, {"language": "ZyK3MajD", "message": ["vft2fvaN", "MKb9CkBO", "H0lGxTwX"]}], "isCustomRegex": true, "letterCase": "K33Oh4PQ", "maxLength": 76, "maxRepeatingAlphaNum": 30, "maxRepeatingSpecialCharacter": 98, "minCharType": 28, "minLength": 63, "regex": "HTndslb2", "specialCharacterLocation": "rkYJeWSU", "specialCharacters": ["yPaB6YFi", "VARzHw2B", "u5OW0raw"]}}, {"field": "I9CcenYS", "validation": {"allowAllSpecialCharacters": true, "allowDigit": true, "allowLetter": true, "allowSpace": false, "allowUnicode": false, "avatarConfig": {"allowedPrefixes": ["btG9qDTl", "RogGqnAU", "xSHVruHF"], "preferRegex": true, "regex": "TQARjbYN"}, "blockedWord": ["plKxbwKy", "Lbzobcuq", "8vaLVrlD"], "description": [{"language": "hoJE85Ga", "message": ["pHHOn2iI", "YZAtdGF8", "6NFyJfFv"]}, {"language": "E93fDaMF", "message": ["mDckHCij", "R8hR1h51", "Le5PJc3s"]}, {"language": "AjQ5zawU", "message": ["OOUNTVDy", "ZzX55eCw", "qYSV1z9J"]}], "isCustomRegex": false, "letterCase": "9zBAP8Y1", "maxLength": 19, "maxRepeatingAlphaNum": 76, "maxRepeatingSpecialCharacter": 14, "minCharType": 90, "minLength": 59, "regex": "CHoijlJ3", "specialCharacterLocation": "3JPd7yjJ", "specialCharacters": ["9rAkgBrw", "vhjGMvUc", "B0n2zN8V"]}}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateInputValidations \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 109 'AdminUpdateInputValidations' test.out

#- 110 AdminResetInputValidations
$CLI_EXE \
    --sn iam \
    --op AdminResetInputValidations \
    --field 'cPBVe2zP' \
    > test.out 2>&1
eval_tap $? 110 'AdminResetInputValidations' test.out

#- 111 ListAdminsV3
$CLI_EXE \
    --sn iam \
    --op ListAdminsV3 \
    --namespace $AB_NAMESPACE \
    --after 'XdsAYWhq' \
    --before 'oiSN2U6K' \
    --limit '47' \
    > test.out 2>&1
eval_tap $? 111 'ListAdminsV3' test.out

#- 112 AdminGetAgeRestrictionStatusV3
$CLI_EXE \
    --sn iam \
    --op AdminGetAgeRestrictionStatusV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 112 'AdminGetAgeRestrictionStatusV3' test.out

#- 113 AdminUpdateAgeRestrictionConfigV3
# body param: body
echo '{"ageRestriction": 68, "enable": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateAgeRestrictionConfigV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 113 'AdminUpdateAgeRestrictionConfigV3' test.out

#- 114 AdminGetListCountryAgeRestrictionV3
$CLI_EXE \
    --sn iam \
    --op AdminGetListCountryAgeRestrictionV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 114 'AdminGetListCountryAgeRestrictionV3' test.out

#- 115 AdminUpdateCountryAgeRestrictionV3
# body param: body
echo '{"ageRestriction": 0}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateCountryAgeRestrictionV3 \
    --countryCode '1PWPDyMl' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 115 'AdminUpdateCountryAgeRestrictionV3' test.out

#- 116 AdminGetBannedUsersV3
$CLI_EXE \
    --sn iam \
    --op AdminGetBannedUsersV3 \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --banType 'wtUDAO97' \
    --limit '7' \
    --offset '55' \
    > test.out 2>&1
eval_tap $? 116 'AdminGetBannedUsersV3' test.out

#- 117 AdminBanUserBulkV3
# body param: body
echo '{"ban": "BCMBRNwF", "comment": "Vv3wNWYS", "endDate": "xw1nlbP8", "reason": "g20yab5N", "skipNotif": false, "userIds": ["rj1TKXds", "XcTl9Wkx", "WlW5qbJi"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBanUserBulkV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 117 'AdminBanUserBulkV3' test.out

#- 118 AdminUnbanUserBulkV3
# body param: body
echo '{"bans": [{"banId": "ltc8q3N8", "userId": "EifSEswt"}, {"banId": "Ags8lFCT", "userId": "pTpWPrjq"}, {"banId": "seg2GuMu", "userId": "GFXRjUNL"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUnbanUserBulkV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 118 'AdminUnbanUserBulkV3' test.out

#- 119 AdminGetBansTypeWithNamespaceV3
$CLI_EXE \
    --sn iam \
    --op AdminGetBansTypeWithNamespaceV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 119 'AdminGetBansTypeWithNamespaceV3' test.out

#- 120 AdminGetClientsByNamespaceV3
$CLI_EXE \
    --sn iam \
    --op AdminGetClientsByNamespaceV3 \
    --namespace $AB_NAMESPACE \
    --clientId 'J2a2vXsB' \
    --clientName 'NZUqAVtl' \
    --clientType 'iecZpfdI' \
    --limit '95' \
    --offset '22' \
    > test.out 2>&1
eval_tap $? 120 'AdminGetClientsByNamespaceV3' test.out

#- 121 AdminCreateClientV3
# body param: body
echo '{"audiences": ["GvswdabZ", "yO9kQuSv", "DsCwCZYN"], "baseUri": "86kKXxcd", "clientId": "Yj2Soivy", "clientName": "wzRGSCoY", "clientPermissions": [{"action": 81, "resource": "wXPaKMhV", "schedAction": 68, "schedCron": "PO7oOY0K", "schedRange": ["LRJvNfTJ", "XvAsNSy3", "1wX2EPe9"]}, {"action": 90, "resource": "FWdzigM0", "schedAction": 27, "schedCron": "ExlmQeW4", "schedRange": ["uYMkNWrV", "xhauLHqr", "JmEJRLst"]}, {"action": 93, "resource": "ppWCEDxj", "schedAction": 58, "schedCron": "juFWGqC2", "schedRange": ["mFKUBCdn", "EnFmb0qA", "L7ZPnTJb"]}], "clientPlatform": "9Oqm599L", "deletable": false, "description": "h6FoEICh", "namespace": "GVgUlmgP", "oauthAccessTokenExpiration": 7, "oauthAccessTokenExpirationTimeUnit": "vUIJZePa", "oauthClientType": "gEcnzqnG", "oauthRefreshTokenExpiration": 74, "oauthRefreshTokenExpirationTimeUnit": "qDJkyBX2", "parentNamespace": "RENAvvMa", "redirectUri": "j0cUnou9", "scopes": ["hG68RPze", "v6xM8T6y", "PY2C2XL5"], "secret": "tMqM8H1q", "twoFactorEnabled": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminCreateClientV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 121 'AdminCreateClientV3' test.out

#- 122 AdminGetClientsbyNamespacebyIDV3
$CLI_EXE \
    --sn iam \
    --op AdminGetClientsbyNamespacebyIDV3 \
    --clientId 'RzWwckJ5' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 122 'AdminGetClientsbyNamespacebyIDV3' test.out

#- 123 AdminDeleteClientV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteClientV3 \
    --clientId 'OEhYeZ5Y' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 123 'AdminDeleteClientV3' test.out

#- 124 AdminUpdateClientV3
# body param: body
echo '{"audiences": ["gYT5cJSb", "aWHfVFM3", "hj2sCxCF"], "baseUri": "Vjmsp29j", "clientName": "IQGvORXo", "clientPermissions": [{"action": 74, "resource": "9gVS0BRI", "schedAction": 44, "schedCron": "zuZPNjIV", "schedRange": ["WyfPLxb4", "QMYdsUAJ", "UCidVBd4"]}, {"action": 80, "resource": "2PBES5co", "schedAction": 61, "schedCron": "5NZad0q8", "schedRange": ["5YnHhRZp", "ABg6fbCg", "Uwd5LTGZ"]}, {"action": 60, "resource": "hXaWv0I5", "schedAction": 52, "schedCron": "ArBR3lNi", "schedRange": ["d8MVSRti", "j13qJEYM", "XpvR0FO8"]}], "clientPlatform": "OcRNo5b2", "deletable": true, "description": "TUzHzzra", "namespace": "bmwn3F2F", "oauthAccessTokenExpiration": 26, "oauthAccessTokenExpirationTimeUnit": "GN5fsWHs", "oauthRefreshTokenExpiration": 55, "oauthRefreshTokenExpirationTimeUnit": "qaT8FbWa", "redirectUri": "kz68vNuH", "scopes": ["wqNrFDJi", "zXXa3n5a", "DP0vXbMN"], "twoFactorEnabled": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateClientV3 \
    --clientId 'A1mEOvhp' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 124 'AdminUpdateClientV3' test.out

#- 125 AdminUpdateClientPermissionV3
# body param: body
echo '{"permissions": [{"action": 25, "resource": "I9jLDZIc"}, {"action": 91, "resource": "pn5M0lr8"}, {"action": 95, "resource": "nWTb9nO5"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateClientPermissionV3 \
    --clientId 'TpAJB12t' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 125 'AdminUpdateClientPermissionV3' test.out

#- 126 AdminAddClientPermissionsV3
# body param: body
echo '{"permissions": [{"action": 51, "resource": "c2igqivw"}, {"action": 21, "resource": "93qPWVBc"}, {"action": 0, "resource": "K7Mkh7s1"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddClientPermissionsV3 \
    --clientId '43WmnoSq' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 126 'AdminAddClientPermissionsV3' test.out

#- 127 AdminDeleteClientPermissionV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteClientPermissionV3 \
    --action '74' \
    --clientId 'ITAUuGqD' \
    --namespace $AB_NAMESPACE \
    --resource 'BwAIVWsJ' \
    > test.out 2>&1
eval_tap $? 127 'AdminDeleteClientPermissionV3' test.out

#- 128 AdminGetCountryListV3
$CLI_EXE \
    --sn iam \
    --op AdminGetCountryListV3 \
    --namespace $AB_NAMESPACE \
    --filterBlacklist 'false' \
    > test.out 2>&1
eval_tap $? 128 'AdminGetCountryListV3' test.out

#- 129 AdminGetCountryBlacklistV3
$CLI_EXE \
    --sn iam \
    --op AdminGetCountryBlacklistV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 129 'AdminGetCountryBlacklistV3' test.out

#- 130 AdminAddCountryBlacklistV3
# body param: body
echo '{"blacklist": ["BM5ZEICN", "zNnU6jG8", "wgtSgonH"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddCountryBlacklistV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 130 'AdminAddCountryBlacklistV3' test.out

#- 131 RetrieveAllThirdPartyLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op RetrieveAllThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 131 'RetrieveAllThirdPartyLoginPlatformCredentialV3' test.out

#- 132 RetrieveAllActiveThirdPartyLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op RetrieveAllActiveThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 132 'RetrieveAllActiveThirdPartyLoginPlatformCredentialV3' test.out

#- 133 RetrieveAllSSOLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op RetrieveAllSSOLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --limit '70' \
    --offset '24' \
    > test.out 2>&1
eval_tap $? 133 'RetrieveAllSSOLoginPlatformCredentialV3' test.out

#- 134 RetrieveThirdPartyLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op RetrieveThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'PFlRn7r1' \
    > test.out 2>&1
eval_tap $? 134 'RetrieveThirdPartyLoginPlatformCredentialV3' test.out

#- 135 AddThirdPartyLoginPlatformCredentialV3
# body param: body
echo '{"ACSURL": "laG0EvqF", "AWSCognitoRegion": "lgnNyNH3", "AWSCognitoUserPool": "CIk5JMXJ", "AllowedClients": ["tzeqvj6f", "Lj9vNomW", "irneiStJ"], "AppId": "35VNI4mq", "AuthorizationEndpoint": "Fispvj2U", "ClientId": "YRYu8Ylm", "Environment": "Xs06Ahiv", "FederationMetadataURL": "TYnQvpPE", "GenericOauthFlow": true, "IsActive": false, "Issuer": "fWhZ5MFY", "JWKSEndpoint": "oBVfqEJi", "KeyID": "Mh4GfFGO", "NetflixCertificates": {"encryptedPrivateKey": "aFm9GZNK", "encryptedPrivateKeyName": "ZrkUOKi7", "publicCertificate": "YSYVKiwx", "publicCertificateName": "FR06COi6", "rootCertificate": "oRufhDXB", "rootCertificateName": "OHMKCO2h"}, "OrganizationId": "BZdQo11Y", "PlatformName": "QLmFve8H", "RedirectUri": "Pm5CNJvw", "RegisteredDomains": [{"affectedClientIDs": ["FV8SvQTD", "UaoPopR3", "W5WEmyHv"], "domain": "4FlAx0zn", "namespaces": ["rGMML5VU", "dfa4YuIK", "slja9ob7"], "roleId": "gXbdh9pX"}, {"affectedClientIDs": ["4qXbSZHv", "1sIJ0qSe", "iKM82Lf2"], "domain": "iAngGbfa", "namespaces": ["oEC7mCkk", "BpKXx8kE", "6A6Qb4dh"], "roleId": "BtoshpKw"}, {"affectedClientIDs": ["BiUBNWJa", "QLVDG0Xd", "C13enaWK"], "domain": "58Lql1In", "namespaces": ["PO5KpWHv", "xd2J6V59", "FV4qUF9x"], "roleId": "2lQ9TXVu"}], "Secret": "iXr04gZd", "TeamID": "d5v9pChL", "TokenAuthenticationType": "JzDpccNG", "TokenClaimsMapping": {"Q6768kWq": "UlSGspWy", "yKtjWYKL": "LBEIrmjk", "EzxIVOxb": "NfcHyX1A"}, "TokenEndpoint": "UnY1AqTs", "UserInfoEndpoint": "kaODPA6i", "UserInfoHTTPMethod": "wNIKKrpu", "scopes": ["IGl0zZez", "kxUVnd8C", "Xl9BGpSi"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AddThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'SUnRWwp3' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 135 'AddThirdPartyLoginPlatformCredentialV3' test.out

#- 136 DeleteThirdPartyLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op DeleteThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'yC0Hs6dV' \
    > test.out 2>&1
eval_tap $? 136 'DeleteThirdPartyLoginPlatformCredentialV3' test.out

#- 137 UpdateThirdPartyLoginPlatformCredentialV3
# body param: body
echo '{"ACSURL": "idWWndH6", "AWSCognitoRegion": "RFVfMdOX", "AWSCognitoUserPool": "z7WErfpB", "AllowedClients": ["x49Jkhrh", "hVShpoz6", "Kzr6rFWG"], "AppId": "JT30n5br", "AuthorizationEndpoint": "1abuRJFi", "ClientId": "XcxsDzEz", "Environment": "66y5ZJKP", "FederationMetadataURL": "1HSSKUUr", "GenericOauthFlow": true, "IsActive": true, "Issuer": "ezDvcHNQ", "JWKSEndpoint": "DV6XRAAF", "KeyID": "lqnA95o7", "NetflixCertificates": {"encryptedPrivateKey": "uR4yjwsL", "encryptedPrivateKeyName": "pLbFlDfb", "publicCertificate": "heuEOv7j", "publicCertificateName": "MHzXeQcy", "rootCertificate": "Tjs6QEnx", "rootCertificateName": "rMACzIT5"}, "OrganizationId": "SBwnog4V", "PlatformName": "FC8lxI0J", "RedirectUri": "Tiq9Mgs4", "RegisteredDomains": [{"affectedClientIDs": ["MRiZBe16", "Ntoyk9Ka", "YjJtNSKc"], "domain": "9GkjJyE0", "namespaces": ["OcKQjdyG", "pJqmZGsg", "I701E5Mh"], "roleId": "GqvzB4yb"}, {"affectedClientIDs": ["T7IkNupI", "lPZjsdin", "QqMBZJ2N"], "domain": "hfa3V0Sj", "namespaces": ["Ap3OhWS9", "s9oYFuUl", "abogeD4b"], "roleId": "1Gzr6GIY"}, {"affectedClientIDs": ["0W7Bhtsn", "jTVRukhE", "CW7xgNjw"], "domain": "Inxf4y75", "namespaces": ["rbj4FidI", "NmIYrSB9", "8JfpeTDK"], "roleId": "gGHCURlR"}], "Secret": "FM5J4wuw", "TeamID": "k5Wiblbu", "TokenAuthenticationType": "adfPGkI2", "TokenClaimsMapping": {"1BurPuD5": "V0F6ZRiY", "6dHQeVQm": "00a1Xo3L", "trzY10N2": "qgi9N4Pf"}, "TokenEndpoint": "wqAIQgb7", "UserInfoEndpoint": "GkguG41r", "UserInfoHTTPMethod": "FIYuj3pY", "scopes": ["8CZ8mXuW", "LdDHfy6l", "YIbLSmaB"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op UpdateThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'ko0fOUOB' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 137 'UpdateThirdPartyLoginPlatformCredentialV3' test.out

#- 138 UpdateThirdPartyLoginPlatformDomainV3
# body param: body
echo '{"affectedClientIDs": ["XeA16ciP", "ygnchZnH", "605oQC9D"], "assignedNamespaces": ["3MI3PLY7", "QV8mpRZ2", "CZABIUxo"], "domain": "IdanX78Y", "roleId": "LlZ5xSme"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op UpdateThirdPartyLoginPlatformDomainV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'yX45Uhq4' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 138 'UpdateThirdPartyLoginPlatformDomainV3' test.out

#- 139 DeleteThirdPartyLoginPlatformDomainV3
# body param: body
echo '{"domain": "1OF8DPKR"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op DeleteThirdPartyLoginPlatformDomainV3 \
    --namespace $AB_NAMESPACE \
    --platformId '2AjoKDJw' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 139 'DeleteThirdPartyLoginPlatformDomainV3' test.out

#- 140 RetrieveSSOLoginPlatformCredential
$CLI_EXE \
    --sn iam \
    --op RetrieveSSOLoginPlatformCredential \
    --namespace $AB_NAMESPACE \
    --platformId '5NZbziFx' \
    > test.out 2>&1
eval_tap $? 140 'RetrieveSSOLoginPlatformCredential' test.out

#- 141 AddSSOLoginPlatformCredential
# body param: body
echo '{"acsUrl": "2MihpnUH", "apiKey": "fIE92Koc", "appId": "UaObQPv8", "federationMetadataUrl": "9RgMvtIS", "isActive": false, "redirectUri": "GcLMw2Al", "secret": "Wlb9OXzv", "ssoUrl": "dZbS4Du8"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AddSSOLoginPlatformCredential \
    --namespace $AB_NAMESPACE \
    --platformId 'mYfzCBSy' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 141 'AddSSOLoginPlatformCredential' test.out

#- 142 DeleteSSOLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op DeleteSSOLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'PipYknVi' \
    > test.out 2>&1
eval_tap $? 142 'DeleteSSOLoginPlatformCredentialV3' test.out

#- 143 UpdateSSOPlatformCredential
# body param: body
echo '{"acsUrl": "Mv8FCG2N", "apiKey": "fBKy0Sdq", "appId": "vgke08Mo", "federationMetadataUrl": "Vc3ufzLH", "isActive": false, "redirectUri": "GuANZ2oO", "secret": "DFx0qYSC", "ssoUrl": "wwHoGgze"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op UpdateSSOPlatformCredential \
    --namespace $AB_NAMESPACE \
    --platformId 'VmOCPr61' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 143 'UpdateSSOPlatformCredential' test.out

#- 144 AdminListUserIDByPlatformUserIDsV3
# body param: body
echo '{"platformUserIds": ["1wfBaktG", "6yC3a3k3", "mqPIvMBR"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminListUserIDByPlatformUserIDsV3 \
    --namespace $AB_NAMESPACE \
    --platformId '4woTPjB9' \
    --rawPID 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 144 'AdminListUserIDByPlatformUserIDsV3' test.out

#- 145 AdminGetUserByPlatformUserIDV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserByPlatformUserIDV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'l6HYQ5v2' \
    --platformUserId 't82wKL3y' \
    > test.out 2>&1
eval_tap $? 145 'AdminGetUserByPlatformUserIDV3' test.out

#- 146 GetAdminUsersByRoleIdV3
$CLI_EXE \
    --sn iam \
    --op GetAdminUsersByRoleIdV3 \
    --namespace $AB_NAMESPACE \
    --roleId 'xcy3rw2e' \
    --after '32' \
    --before '71' \
    --limit '99' \
    > test.out 2>&1
eval_tap $? 146 'GetAdminUsersByRoleIdV3' test.out

#- 147 AdminGetUserByEmailAddressV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserByEmailAddressV3 \
    --namespace $AB_NAMESPACE \
    --emailAddress '51GhcdPG' \
    > test.out 2>&1
eval_tap $? 147 'AdminGetUserByEmailAddressV3' test.out

#- 148 AdminGetBulkUserBanV3
# body param: body
echo '{"bulkUserId": ["zPfXW1xf", "vekBi8Jv", "5yWYuo43"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminGetBulkUserBanV3 \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --banType 'mxtVnZgr' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 148 'AdminGetBulkUserBanV3' test.out

#- 149 AdminListUserIDByUserIDsV3
# body param: body
echo '{"userIds": ["PNmvj6GJ", "GZ6QNjB5", "L2nFY9C2"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminListUserIDByUserIDsV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 149 'AdminListUserIDByUserIDsV3' test.out

#- 150 AdminBulkGetUsersPlatform
# body param: body
echo '{"userIds": ["TjWx5O34", "p4Q1256v", "VFBwPqme"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBulkGetUsersPlatform \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 150 'AdminBulkGetUsersPlatform' test.out

#- 151 AdminInviteUserV3
# body param: body
echo '{"emailAddresses": ["3u0nksVd", "zisJs3oK", "0cC9Y5DH"], "isAdmin": true, "namespace": "cRegAi56", "roles": ["PNbFpADF", "M6owB2a5", "HVYNStGJ"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminInviteUserV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 151 'AdminInviteUserV3' test.out

#- 152 AdminQueryThirdPlatformLinkHistoryV3
$CLI_EXE \
    --sn iam \
    --op AdminQueryThirdPlatformLinkHistoryV3 \
    --namespace $AB_NAMESPACE \
    --limit '24' \
    --offset '71' \
    --platformUserId 'momU4fop' \
    --platformId 'KIx4tIfW' \
    > test.out 2>&1
eval_tap $? 152 'AdminQueryThirdPlatformLinkHistoryV3' test.out

#- 153 AdminListUsersV3
$CLI_EXE \
    --sn iam \
    --op AdminListUsersV3 \
    --namespace $AB_NAMESPACE \
    --limit '56' \
    --offset '100' \
    > test.out 2>&1
eval_tap $? 153 'AdminListUsersV3' test.out

#- 154 AdminSearchUserV3
$CLI_EXE \
    --sn iam \
    --op AdminSearchUserV3 \
    --namespace $AB_NAMESPACE \
    --by 'U3fAsFDi' \
    --endDate 'yYstZNih' \
    --limit '65' \
    --offset '77' \
    --platformBy 'oN1CgWUY' \
    --platformId 'Y7y4vZyH' \
    --query 'ZZzmbfVN' \
    --startDate 'DpsHNz6f' \
    > test.out 2>&1
eval_tap $? 154 'AdminSearchUserV3' test.out

#- 155 AdminGetBulkUserByEmailAddressV3
# body param: body
echo '{"listEmailAddressRequest": ["9DHaOeFn", "N3ZOAG1c", "dO3CXBrG"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminGetBulkUserByEmailAddressV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 155 'AdminGetBulkUserByEmailAddressV3' test.out

#- 156 AdminGetUserByUserIdV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserByUserIdV3 \
    --namespace $AB_NAMESPACE \
    --userId 'ghRAwobC' \
    > test.out 2>&1
eval_tap $? 156 'AdminGetUserByUserIdV3' test.out

#- 157 AdminUpdateUserV3
# body param: body
echo '{"avatarUrl": "oWygfNhI", "country": "Z4rGLxAs", "dateOfBirth": "KLTn6CRz", "displayName": "WkHqVNu5", "languageTag": "HfHe9T7l", "userName": "dWki5DCt"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserV3 \
    --namespace $AB_NAMESPACE \
    --userId 'oWVmP8W3' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 157 'AdminUpdateUserV3' test.out

#- 158 AdminGetUserBanV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserBanV3 \
    --namespace $AB_NAMESPACE \
    --userId 'Qaidyp0W' \
    --activeOnly 'false' \
    --after 'syuSonuy' \
    --before 'niYTv1tj' \
    --limit '22' \
    > test.out 2>&1
eval_tap $? 158 'AdminGetUserBanV3' test.out

#- 159 AdminBanUserV3
# body param: body
echo '{"ban": "KrGrDtUe", "comment": "0OI4xnuK", "endDate": "3TE8tdRa", "reason": "WZ5lVYRb", "skipNotif": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBanUserV3 \
    --namespace $AB_NAMESPACE \
    --userId 'GZ7Q9jEr' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 159 'AdminBanUserV3' test.out

#- 160 AdminUpdateUserBanV3
# body param: body
echo '{"enabled": true, "skipNotif": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserBanV3 \
    --banId 'YFPHlV23' \
    --namespace $AB_NAMESPACE \
    --userId 'XOosqkf5' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 160 'AdminUpdateUserBanV3' test.out

#- 161 AdminSendVerificationCodeV3
# body param: body
echo '{"context": "uyBWxAaS", "emailAddress": "WnmQch43", "languageTag": "Q2aHQTHU"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminSendVerificationCodeV3 \
    --namespace $AB_NAMESPACE \
    --userId 'UlwBNk7j' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 161 'AdminSendVerificationCodeV3' test.out

#- 162 AdminVerifyAccountV3
# body param: body
echo '{"Code": "4ENVZQq7", "ContactType": "MkTdNibi", "LanguageTag": "jNx9FiYQ", "validateOnly": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminVerifyAccountV3 \
    --namespace $AB_NAMESPACE \
    --userId 'rEqbkAzV' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 162 'AdminVerifyAccountV3' test.out

#- 163 GetUserVerificationCode
$CLI_EXE \
    --sn iam \
    --op GetUserVerificationCode \
    --namespace $AB_NAMESPACE \
    --userId 'N1xa0LqX' \
    > test.out 2>&1
eval_tap $? 163 'GetUserVerificationCode' test.out

#- 164 AdminGetUserDeletionStatusV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserDeletionStatusV3 \
    --namespace $AB_NAMESPACE \
    --userId 'xO1xRjrI' \
    > test.out 2>&1
eval_tap $? 164 'AdminGetUserDeletionStatusV3' test.out

#- 165 AdminUpdateUserDeletionStatusV3
# body param: body
echo '{"deletionDate": 93, "enabled": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserDeletionStatusV3 \
    --namespace $AB_NAMESPACE \
    --userId '9DNgLV4J' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 165 'AdminUpdateUserDeletionStatusV3' test.out

#- 166 AdminUpgradeHeadlessAccountV3
# body param: body
echo '{"code": "6s4P5fY5", "country": "X3aexK4H", "dateOfBirth": "ZlYy4lLu", "displayName": "LWfVgEi4", "emailAddress": "HEF1VaDA", "password": "UTkXeDH2", "validateOnly": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpgradeHeadlessAccountV3 \
    --namespace $AB_NAMESPACE \
    --userId 'Fff7gKb8' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 166 'AdminUpgradeHeadlessAccountV3' test.out

#- 167 AdminDeleteUserInformationV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserInformationV3 \
    --namespace $AB_NAMESPACE \
    --userId 'BR2mdS5t' \
    > test.out 2>&1
eval_tap $? 167 'AdminDeleteUserInformationV3' test.out

#- 168 AdminGetUserLoginHistoriesV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserLoginHistoriesV3 \
    --namespace $AB_NAMESPACE \
    --userId 'hl3BN78a' \
    --after '0.8624630254600909' \
    --before '0.6511823306469144' \
    --limit '65' \
    > test.out 2>&1
eval_tap $? 168 'AdminGetUserLoginHistoriesV3' test.out

#- 169 AdminResetPasswordV3
# body param: body
echo '{"languageTag": "DMKkIQ5z", "newPassword": "zEEPkBSz", "oldPassword": "DfX4fPKs"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminResetPasswordV3 \
    --namespace $AB_NAMESPACE \
    --userId 'pWXilK28' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 169 'AdminResetPasswordV3' test.out

#- 170 AdminUpdateUserPermissionV3
# body param: body
echo '{"Permissions": [{"Action": 96, "Resource": "pSjJqJGW", "SchedAction": 13, "SchedCron": "ZbWFqklN", "SchedRange": ["JEHRX9hg", "vR7ZJrQH", "BsZa0YAM"]}, {"Action": 38, "Resource": "CoFG7a0t", "SchedAction": 20, "SchedCron": "qJs8hsXY", "SchedRange": ["sTzylkeK", "yHEO4EVV", "qibDtanr"]}, {"Action": 92, "Resource": "TsoHshK0", "SchedAction": 35, "SchedCron": "l4P6d5nq", "SchedRange": ["oiNk5Rr4", "dqjLo19C", "T8gBBsoh"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserPermissionV3 \
    --namespace $AB_NAMESPACE \
    --userId 'MR9jVBbz' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 170 'AdminUpdateUserPermissionV3' test.out

#- 171 AdminAddUserPermissionsV3
# body param: body
echo '{"Permissions": [{"Action": 91, "Resource": "TiH0yuAi", "SchedAction": 88, "SchedCron": "8n04sVpB", "SchedRange": ["Soor1RVi", "sjYtMqlU", "tIrVXzmX"]}, {"Action": 97, "Resource": "XBpsKgpQ", "SchedAction": 49, "SchedCron": "OorK779H", "SchedRange": ["wMeVoSXt", "PJtcpNvi", "vkRk9zSn"]}, {"Action": 43, "Resource": "PinCcXqO", "SchedAction": 77, "SchedCron": "RCcdMTyL", "SchedRange": ["YaDBYtD9", "tAEogklJ", "sanIzZQf"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddUserPermissionsV3 \
    --namespace $AB_NAMESPACE \
    --userId 'tW8FSj9U' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 171 'AdminAddUserPermissionsV3' test.out

#- 172 AdminDeleteUserPermissionBulkV3
# body param: body
echo '[{"Action": 41, "Resource": "R1qAMXdl"}, {"Action": 18, "Resource": "zOPRZENP"}, {"Action": 19, "Resource": "f4IFZy57"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserPermissionBulkV3 \
    --namespace $AB_NAMESPACE \
    --userId 'oVCJyzHq' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 172 'AdminDeleteUserPermissionBulkV3' test.out

#- 173 AdminDeleteUserPermissionV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserPermissionV3 \
    --action '18' \
    --namespace $AB_NAMESPACE \
    --resource 'ycXEDRjg' \
    --userId 'HVe8TXTo' \
    > test.out 2>&1
eval_tap $? 173 'AdminDeleteUserPermissionV3' test.out

#- 174 AdminGetUserPlatformAccountsV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserPlatformAccountsV3 \
    --namespace $AB_NAMESPACE \
    --userId '6yuoNlKD' \
    --after 'ibKNWr3M' \
    --before 'lShV6qoI' \
    --limit '94' \
    --platformId 'uiHCajka' \
    > test.out 2>&1
eval_tap $? 174 'AdminGetUserPlatformAccountsV3' test.out

#- 175 AdminGetListJusticePlatformAccounts
$CLI_EXE \
    --sn iam \
    --op AdminGetListJusticePlatformAccounts \
    --namespace $AB_NAMESPACE \
    --userId 'dpdXOINm' \
    > test.out 2>&1
eval_tap $? 175 'AdminGetListJusticePlatformAccounts' test.out

#- 176 AdminGetUserMapping
$CLI_EXE \
    --sn iam \
    --op AdminGetUserMapping \
    --namespace $AB_NAMESPACE \
    --targetNamespace '1GOLg8hp' \
    --userId 'peabaANG' \
    > test.out 2>&1
eval_tap $? 176 'AdminGetUserMapping' test.out

#- 177 AdminCreateJusticeUser
$CLI_EXE \
    --sn iam \
    --op AdminCreateJusticeUser \
    --namespace $AB_NAMESPACE \
    --targetNamespace 'H4E05bey' \
    --userId '6z7APf67' \
    > test.out 2>&1
eval_tap $? 177 'AdminCreateJusticeUser' test.out

#- 178 AdminLinkPlatformAccount
# body param: body
echo '{"platformId": "uuCfzBkA", "platformUserId": "w1cNZ3Ws"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminLinkPlatformAccount \
    --namespace $AB_NAMESPACE \
    --userId 'E4Q8kOuM' \
    --skipConflict 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 178 'AdminLinkPlatformAccount' test.out

#- 179 AdminPlatformUnlinkV3
# body param: body
echo '{"platformNamespace": "tlriCcMN"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminPlatformUnlinkV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'AYHmG4Q2' \
    --userId '6PpJYNEt' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 179 'AdminPlatformUnlinkV3' test.out

#- 180 AdminPlatformLinkV3
$CLI_EXE \
    --sn iam \
    --op AdminPlatformLinkV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'jausyTYG' \
    --userId 'ZRczforc' \
    --ticket 'Viu9KWA0' \
    > test.out 2>&1
eval_tap $? 180 'AdminPlatformLinkV3' test.out

#- 181 AdminGetThirdPartyPlatformTokenLinkStatusV3
$CLI_EXE \
    --sn iam \
    --op AdminGetThirdPartyPlatformTokenLinkStatusV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'GF76XpQf' \
    --userId 'C6TIYPvD' \
    --platformToken 'Ri5OS3uZ' \
    > test.out 2>&1
eval_tap $? 181 'AdminGetThirdPartyPlatformTokenLinkStatusV3' test.out

#- 182 AdminGetUserSinglePlatformAccount
$CLI_EXE \
    --sn iam \
    --op AdminGetUserSinglePlatformAccount \
    --namespace $AB_NAMESPACE \
    --platformId 'T7RlLw1W' \
    --userId 'W1N3QvCG' \
    > test.out 2>&1
eval_tap $? 182 'AdminGetUserSinglePlatformAccount' test.out

#- 183 AdminDeleteUserRolesV3
# body param: body
echo '["93jMXxtL", "EoXFHKjp", "CJm7UN7e"]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserRolesV3 \
    --namespace $AB_NAMESPACE \
    --userId 'oUm7zctb' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 183 'AdminDeleteUserRolesV3' test.out

#- 184 AdminSaveUserRoleV3
# body param: body
echo '[{"namespace": "PySEI9eT", "roleId": "jOqizZXu"}, {"namespace": "K2aL4BSQ", "roleId": "fN1MYUZY"}, {"namespace": "Btvhyedc", "roleId": "ogJQoNbI"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminSaveUserRoleV3 \
    --namespace $AB_NAMESPACE \
    --userId 'zAnpSXj1' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 184 'AdminSaveUserRoleV3' test.out

#- 185 AdminAddUserRoleV3
$CLI_EXE \
    --sn iam \
    --op AdminAddUserRoleV3 \
    --namespace $AB_NAMESPACE \
    --roleId 'Odg4VxAk' \
    --userId 'iP5f2H8T' \
    > test.out 2>&1
eval_tap $? 185 'AdminAddUserRoleV3' test.out

#- 186 AdminDeleteUserRoleV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserRoleV3 \
    --namespace $AB_NAMESPACE \
    --roleId 'FrA2lpiF' \
    --userId 'fARRdlDh' \
    > test.out 2>&1
eval_tap $? 186 'AdminDeleteUserRoleV3' test.out

#- 187 AdminUpdateUserStatusV3
# body param: body
echo '{"enabled": false, "reason": "D76l1jkZ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserStatusV3 \
    --namespace $AB_NAMESPACE \
    --userId 'iuDWuMHl' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 187 'AdminUpdateUserStatusV3' test.out

#- 188 AdminTrustlyUpdateUserIdentity
# body param: body
echo '{"emailAddress": "bCTYXmjc", "password": "Qb65Xfpf"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminTrustlyUpdateUserIdentity \
    --namespace $AB_NAMESPACE \
    --userId '24ZaNy2y' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 188 'AdminTrustlyUpdateUserIdentity' test.out

#- 189 AdminVerifyUserWithoutVerificationCodeV3
$CLI_EXE \
    --sn iam \
    --op AdminVerifyUserWithoutVerificationCodeV3 \
    --namespace $AB_NAMESPACE \
    --userId 'IO6eyYxT' \
    > test.out 2>&1
eval_tap $? 189 'AdminVerifyUserWithoutVerificationCodeV3' test.out

#- 190 AdminUpdateClientSecretV3
# body param: body
echo '{"newSecret": "SociUR2S"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateClientSecretV3 \
    --clientId '0pRe8btM' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 190 'AdminUpdateClientSecretV3' test.out

#- 191 AdminGetRolesV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRolesV3 \
    --after '4XmXtyRt' \
    --before 'z85QRKw8' \
    --isWildcard 'true' \
    --limit '94' \
    > test.out 2>&1
eval_tap $? 191 'AdminGetRolesV3' test.out

#- 192 AdminCreateRoleV3
# body param: body
echo '{"adminRole": false, "deletable": true, "isWildcard": true, "managers": [{"displayName": "KBr2A8Wj", "namespace": "TlijXiS8", "userId": "q3QOcZD5"}, {"displayName": "xNNt0xdZ", "namespace": "YAaHx8vE", "userId": "DI58Zopa"}, {"displayName": "W0FLNfL5", "namespace": "s2NYUXSb", "userId": "tue9SpEB"}], "members": [{"displayName": "6ajrU2KW", "namespace": "HhW7H6Cn", "userId": "VoJwZiPi"}, {"displayName": "jyLLrfvh", "namespace": "9IzA5ezs", "userId": "6umJMetw"}, {"displayName": "X87YgPen", "namespace": "GdLQpcpW", "userId": "fSbREu3d"}], "permissions": [{"action": 31, "resource": "oWpDyKdo", "schedAction": 89, "schedCron": "yo5esY5G", "schedRange": ["CUOyZbrQ", "ZXvPsDuF", "FNyig0q7"]}, {"action": 19, "resource": "WVEwZGoy", "schedAction": 67, "schedCron": "6xMQFYxb", "schedRange": ["KGeLSKhd", "BrlvY1s0", "iL6L8UUw"]}, {"action": 87, "resource": "cq8MeCtS", "schedAction": 16, "schedCron": "KzjI8NE0", "schedRange": ["mtWFH3o6", "OKFBubbA", "EzhBm4uI"]}], "roleName": "w6GYmGXA"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminCreateRoleV3 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 192 'AdminCreateRoleV3' test.out

#- 193 AdminGetRoleV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleV3 \
    --roleId 'TvgcvDJz' \
    > test.out 2>&1
eval_tap $? 193 'AdminGetRoleV3' test.out

#- 194 AdminDeleteRoleV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteRoleV3 \
    --roleId '7J4pXmlS' \
    > test.out 2>&1
eval_tap $? 194 'AdminDeleteRoleV3' test.out

#- 195 AdminUpdateRoleV3
# body param: body
echo '{"deletable": true, "isWildcard": true, "roleName": "O2ubUu4u"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateRoleV3 \
    --roleId 'Qsyz4TaH' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 195 'AdminUpdateRoleV3' test.out

#- 196 AdminGetRoleAdminStatusV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleAdminStatusV3 \
    --roleId 'xliiQO9j' \
    > test.out 2>&1
eval_tap $? 196 'AdminGetRoleAdminStatusV3' test.out

#- 197 AdminUpdateAdminRoleStatusV3
$CLI_EXE \
    --sn iam \
    --op AdminUpdateAdminRoleStatusV3 \
    --roleId 'xH6bAIUL' \
    > test.out 2>&1
eval_tap $? 197 'AdminUpdateAdminRoleStatusV3' test.out

#- 198 AdminRemoveRoleAdminV3
$CLI_EXE \
    --sn iam \
    --op AdminRemoveRoleAdminV3 \
    --roleId 'uP0aeidi' \
    > test.out 2>&1
eval_tap $? 198 'AdminRemoveRoleAdminV3' test.out

#- 199 AdminGetRoleManagersV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleManagersV3 \
    --roleId 'aN55GEBf' \
    --after 'fyAurHz6' \
    --before 'snSsmF8K' \
    --limit '69' \
    > test.out 2>&1
eval_tap $? 199 'AdminGetRoleManagersV3' test.out

#- 200 AdminAddRoleManagersV3
# body param: body
echo '{"managers": [{"displayName": "UhHcHg5i", "namespace": "0VMnyOqH", "userId": "fuEaNmYf"}, {"displayName": "x7YqjI23", "namespace": "shtRw7U3", "userId": "QWgHZele"}, {"displayName": "aeqJnYA8", "namespace": "6xBQjrsh", "userId": "xvBjDbXz"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddRoleManagersV3 \
    --roleId 'PkfxOtDI' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 200 'AdminAddRoleManagersV3' test.out

#- 201 AdminRemoveRoleManagersV3
# body param: body
echo '{"managers": [{"displayName": "aa0Wic1O", "namespace": "f887Fub6", "userId": "c8uzu88W"}, {"displayName": "t8rMYOQs", "namespace": "TsdlqcZ9", "userId": "e4yz4V6O"}, {"displayName": "x3d2vhGw", "namespace": "orRj6R1w", "userId": "FBYkSCfj"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminRemoveRoleManagersV3 \
    --roleId 'KKzLKUhF' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 201 'AdminRemoveRoleManagersV3' test.out

#- 202 AdminGetRoleMembersV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleMembersV3 \
    --roleId '8qWWHG2O' \
    --after 't9zxXRAu' \
    --before 'ItqD4Jju' \
    --limit '88' \
    > test.out 2>&1
eval_tap $? 202 'AdminGetRoleMembersV3' test.out

#- 203 AdminAddRoleMembersV3
# body param: body
echo '{"members": [{"displayName": "X3aYYzGB", "namespace": "t0qhQO8w", "userId": "DlNIiPWw"}, {"displayName": "JwQn60bC", "namespace": "sdBkryiz", "userId": "MIhPzk0n"}, {"displayName": "MmGHW3WU", "namespace": "V6xHlET9", "userId": "cGy5tgAo"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddRoleMembersV3 \
    --roleId 'OWrk1Xr1' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 203 'AdminAddRoleMembersV3' test.out

#- 204 AdminRemoveRoleMembersV3
# body param: body
echo '{"members": [{"displayName": "fLgQA08A", "namespace": "PNPBPufb", "userId": "K2UBWvUz"}, {"displayName": "RnQYZYGR", "namespace": "zKYgaCDe", "userId": "m1nGoZbo"}, {"displayName": "soFXm8dA", "namespace": "ADzWoczx", "userId": "15OsfMKg"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminRemoveRoleMembersV3 \
    --roleId 'nT4feAaD' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 204 'AdminRemoveRoleMembersV3' test.out

#- 205 AdminUpdateRolePermissionsV3
# body param: body
echo '{"permissions": [{"action": 92, "resource": "FSNddTEh", "schedAction": 60, "schedCron": "HS2Krytj", "schedRange": ["UZ7WmDAa", "OZpRdfXq", "IshbCgDd"]}, {"action": 7, "resource": "6sNkw3g3", "schedAction": 64, "schedCron": "VfpUKO9C", "schedRange": ["RC4iX0AP", "fRQFDTUg", "a8UHavgr"]}, {"action": 31, "resource": "ppbWB5Q1", "schedAction": 25, "schedCron": "1e2Qqv0H", "schedRange": ["XdhftIK8", "Mp96ePqm", "Cw6Wc7Ka"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateRolePermissionsV3 \
    --roleId '45ofEHpd' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 205 'AdminUpdateRolePermissionsV3' test.out

#- 206 AdminAddRolePermissionsV3
# body param: body
echo '{"permissions": [{"action": 76, "resource": "S22XG0Le", "schedAction": 11, "schedCron": "ykfTLH8U", "schedRange": ["WBwoR6T3", "eSyShbZC", "6s8HSEJJ"]}, {"action": 43, "resource": "wDAuePAv", "schedAction": 87, "schedCron": "fX6N7TTw", "schedRange": ["mgIoLm75", "A6ufDBHs", "HPQT3ApH"]}, {"action": 20, "resource": "t6V0Gt6p", "schedAction": 1, "schedCron": "hLjaDb3g", "schedRange": ["A0xzR9Xa", "I4uxYNyo", "KgCPhYlA"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddRolePermissionsV3 \
    --roleId 'p02y7hGF' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 206 'AdminAddRolePermissionsV3' test.out

#- 207 AdminDeleteRolePermissionsV3
# body param: body
echo '["prccpNxC", "hXxPqfX4", "b5rFeNRX"]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDeleteRolePermissionsV3 \
    --roleId 'ZCXB4A4C' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 207 'AdminDeleteRolePermissionsV3' test.out

#- 208 AdminDeleteRolePermissionV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteRolePermissionV3 \
    --action '56' \
    --resource 'ZZcULvEd' \
    --roleId 'wh8gaSM5' \
    > test.out 2>&1
eval_tap $? 208 'AdminDeleteRolePermissionV3' test.out

#- 209 AdminGetMyUserV3
$CLI_EXE \
    --sn iam \
    --op AdminGetMyUserV3 \
    > test.out 2>&1
eval_tap $? 209 'AdminGetMyUserV3' test.out

#- 210 UserAuthenticationV3
$CLI_EXE \
    --sn iam \
    --op UserAuthenticationV3 \
    --client_id 'z21vfIKa' \
    --extend_exp 'true' \
    --redirect_uri 'Zhz8hARn' \
    --password '4uf01hBw' \
    --request_id 'woeZliqi' \
    --user_name 'bGFSNrzC' \
    > test.out 2>&1
eval_tap $? 210 'UserAuthenticationV3' test.out

#- 211 AuthenticationWithPlatformLinkV3
$CLI_EXE \
    --sn iam \
    --op AuthenticationWithPlatformLinkV3 \
    --extend_exp 'true' \
    --client_id 'pJNBOkGq' \
    --linkingToken 'APxGGDMd' \
    --password 'dGHtqezJ' \
    --username 'YbMPuQRv' \
    > test.out 2>&1
eval_tap $? 211 'AuthenticationWithPlatformLinkV3' test.out

#- 212 GenerateTokenByNewHeadlessAccountV3
$CLI_EXE \
    --sn iam \
    --op GenerateTokenByNewHeadlessAccountV3 \
    --additionalData 'CoS8u2yb' \
    --extend_exp 'true' \
    --linkingToken 'NmwbDxfp' \
    > test.out 2>&1
eval_tap $? 212 'GenerateTokenByNewHeadlessAccountV3' test.out

#- 213 RequestOneTimeLinkingCodeV3
$CLI_EXE \
    --sn iam \
    --op RequestOneTimeLinkingCodeV3 \
    --platformId 'GfKi7Nwf' \
    > test.out 2>&1
eval_tap $? 213 'RequestOneTimeLinkingCodeV3' test.out

#- 214 ValidateOneTimeLinkingCodeV3
$CLI_EXE \
    --sn iam \
    --op ValidateOneTimeLinkingCodeV3 \
    --oneTimeLinkCode 'erI8wAnh' \
    > test.out 2>&1
eval_tap $? 214 'ValidateOneTimeLinkingCodeV3' test.out

#- 215 RequestTokenByOneTimeLinkCodeResponseV3
$CLI_EXE \
    --sn iam \
    --op RequestTokenByOneTimeLinkCodeResponseV3 \
    --additionalData 'dYfDXlqp' \
    --isTransient 'false' \
    --client_id 'KJWqJVGL' \
    --oneTimeLinkCode '5JOeRr8V' \
    > test.out 2>&1
eval_tap $? 215 'RequestTokenByOneTimeLinkCodeResponseV3' test.out

#- 216 GetCountryLocationV3
$CLI_EXE \
    --sn iam \
    --op GetCountryLocationV3 \
    > test.out 2>&1
eval_tap $? 216 'GetCountryLocationV3' test.out

#- 217 Logout
$CLI_EXE \
    --sn iam \
    --op Logout \
    > test.out 2>&1
eval_tap $? 217 'Logout' test.out

#- 218 RequestTokenExchangeCodeV3
$CLI_EXE \
    --sn iam \
    --op RequestTokenExchangeCodeV3 \
    --namespace $AB_NAMESPACE \
    --client_id 'ymyEIANJ' \
    > test.out 2>&1
eval_tap $? 218 'RequestTokenExchangeCodeV3' test.out

#- 219 AdminRetrieveUserThirdPartyPlatformTokenV3
$CLI_EXE \
    --sn iam \
    --op AdminRetrieveUserThirdPartyPlatformTokenV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'eJQgIqQQ' \
    --userId 'UXYC41o0' \
    > test.out 2>&1
eval_tap $? 219 'AdminRetrieveUserThirdPartyPlatformTokenV3' test.out

#- 220 RevokeUserV3
$CLI_EXE \
    --sn iam \
    --op RevokeUserV3 \
    --namespace $AB_NAMESPACE \
    --userId 'hGxoK3lt' \
    --includeGameNamespace 'true' \
    > test.out 2>&1
eval_tap $? 220 'RevokeUserV3' test.out

#- 221 AuthorizeV3
$CLI_EXE \
    --sn iam \
    --op AuthorizeV3 \
    --codeChallenge '6knfI2lV' \
    --codeChallengeMethod 'S256' \
    --createHeadless 'true' \
    --oneTimeLinkCode 'AnB55u0W' \
    --redirectUri '9YDU4xdw' \
    --scope 'PsVYl6Q8' \
    --state 'qvMW8fqO' \
    --targetAuthPage 'HkRwS214' \
    --useRedirectUriAsLoginUrlWhenLocked 'true' \
    --clientId '3mWtpQUM' \
    --responseType 'code' \
    > test.out 2>&1
eval_tap $? 221 'AuthorizeV3' test.out

#- 222 TokenIntrospectionV3
$CLI_EXE \
    --sn iam \
    --op TokenIntrospectionV3 \
    --token '2lnFmErH' \
    > test.out 2>&1
eval_tap $? 222 'TokenIntrospectionV3' test.out

#- 223 GetJWKSV3
$CLI_EXE \
    --sn iam \
    --op GetJWKSV3 \
    > test.out 2>&1
eval_tap $? 223 'GetJWKSV3' test.out

#- 224 SendMFAAuthenticationCode
$CLI_EXE \
    --sn iam \
    --op SendMFAAuthenticationCode \
    --clientId 't5iJjaWG' \
    --factor 'zyb7ViP8' \
    --mfaToken 'ri0DHrd7' \
    > test.out 2>&1
eval_tap $? 224 'SendMFAAuthenticationCode' test.out

#- 225 Change2faMethod
$CLI_EXE \
    --sn iam \
    --op Change2faMethod \
    --factor 'yOJsDL4y' \
    --mfaToken 'DRbddJIt' \
    > test.out 2>&1
eval_tap $? 225 'Change2faMethod' test.out

#- 226 Verify2faCode
$CLI_EXE \
    --sn iam \
    --op Verify2faCode \
    --code 'q6HuR8Rs' \
    --factor 'qIe1oI1W' \
    --mfaToken 'F9FPoL1j' \
    --rememberDevice 'true' \
    > test.out 2>&1
eval_tap $? 226 'Verify2faCode' test.out

#- 227 RetrieveUserThirdPartyPlatformTokenV3
$CLI_EXE \
    --sn iam \
    --op RetrieveUserThirdPartyPlatformTokenV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'gTVIh246' \
    --userId 'f10x7zAi' \
    > test.out 2>&1
eval_tap $? 227 'RetrieveUserThirdPartyPlatformTokenV3' test.out

#- 228 AuthCodeRequestV3
$CLI_EXE \
    --sn iam \
    --op AuthCodeRequestV3 \
    --platformId 'NXomVsCr' \
    --clientId '1MKbwk9V' \
    --redirectUri 'Tu9AC65Y' \
    --requestId 'IYCHJU4h' \
    > test.out 2>&1
eval_tap $? 228 'AuthCodeRequestV3' test.out

#- 229 PlatformTokenGrantV3
$CLI_EXE \
    --sn iam \
    --op PlatformTokenGrantV3 \
    --platformId 'dCLBQifJ' \
    --additionalData 'rjLxh21H' \
    --client_id '1dbLXFhN' \
    --createHeadless 'true' \
    --device_id 'mGmWwi6P' \
    --macAddress 'gTyV8GGc' \
    --platform_token 'MWbKE42i' \
    --skipSetCookie 'false' \
    > test.out 2>&1
eval_tap $? 229 'PlatformTokenGrantV3' test.out

#- 230 GetRevocationListV3
$CLI_EXE \
    --sn iam \
    --op GetRevocationListV3 \
    > test.out 2>&1
eval_tap $? 230 'GetRevocationListV3' test.out

#- 231 TokenRevocationV3
$CLI_EXE \
    --sn iam \
    --op TokenRevocationV3 \
    --token 'A7BhXUgQ' \
    > test.out 2>&1
eval_tap $? 231 'TokenRevocationV3' test.out

#- 232 TokenGrantV3
$CLI_EXE \
    --sn iam \
    --op TokenGrantV3 \
    --additionalData 'qBL2NVzU' \
    --client_id 'ooBBKCgb' \
    --code 'l6tcoau6' \
    --code_verifier '2dtS5NjE' \
    --extend_exp 'true' \
    --password 'Y97eR3uh' \
    --redirect_uri 'jlYf6meY' \
    --refresh_token 'OPSZEkTe' \
    --username 'GEhu2EMB' \
    --grant_type 'authorization_code' \
    > test.out 2>&1
eval_tap $? 232 'TokenGrantV3' test.out

#- 233 VerifyTokenV3
$CLI_EXE \
    --sn iam \
    --op VerifyTokenV3 \
    --token 'VeiC4mAe' \
    > test.out 2>&1
eval_tap $? 233 'VerifyTokenV3' test.out

#- 234 PlatformAuthenticationV3
$CLI_EXE \
    --sn iam \
    --op PlatformAuthenticationV3 \
    --platformId 'etYJOnKC' \
    --code 'uxqqqqQl' \
    --error 'cE8fuQU3' \
    --openidAssocHandle 'gEp7HHAe' \
    --openidClaimedId 'Ny03qP4n' \
    --openidIdentity '1OXrO5lo' \
    --openidMode 'tntytbZv' \
    --openidNs 'uhAxE9Mo' \
    --openidOpEndpoint 'a3BFu0hw' \
    --openidResponseNonce 'tTOr5zzU' \
    --openidReturnTo 'yh6xFj1J' \
    --openidSig 't3zobyUe' \
    --openidSigned 'nGxdpIHP' \
    --state 'roJzAkQ4' \
    > test.out 2>&1
eval_tap $? 234 'PlatformAuthenticationV3' test.out

#- 235 PlatformTokenRefreshV3
$CLI_EXE \
    --sn iam \
    --op PlatformTokenRefreshV3 \
    --platformId 'SnJhVN4c' \
    --platform_token '1Vi5YCEs' \
    > test.out 2>&1
eval_tap $? 235 'PlatformTokenRefreshV3' test.out

#- 236 PublicGetInputValidations
$CLI_EXE \
    --sn iam \
    --op PublicGetInputValidations \
    --defaultOnEmpty 'false' \
    --languageCode 'qNEt56PM' \
    > test.out 2>&1
eval_tap $? 236 'PublicGetInputValidations' test.out

#- 237 PublicGetInputValidationByField
$CLI_EXE \
    --sn iam \
    --op PublicGetInputValidationByField \
    --field 'aPftm4C1' \
    > test.out 2>&1
eval_tap $? 237 'PublicGetInputValidationByField' test.out

#- 238 PublicGetCountryAgeRestrictionV3
$CLI_EXE \
    --sn iam \
    --op PublicGetCountryAgeRestrictionV3 \
    --countryCode 'UuNOCrpN' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 238 'PublicGetCountryAgeRestrictionV3' test.out

#- 239 PublicGetCountryListV3
$CLI_EXE \
    --sn iam \
    --op PublicGetCountryListV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 239 'PublicGetCountryListV3' test.out

#- 240 RetrieveAllActiveThirdPartyLoginPlatformCredentialPublicV3
$CLI_EXE \
    --sn iam \
    --op RetrieveAllActiveThirdPartyLoginPlatformCredentialPublicV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 240 'RetrieveAllActiveThirdPartyLoginPlatformCredentialPublicV3' test.out

#- 241 RetrieveActiveOIDCClientsPublicV3
$CLI_EXE \
    --sn iam \
    --op RetrieveActiveOIDCClientsPublicV3 \
    --namespace $AB_NAMESPACE \
    --clientId 'a9FmwqxB' \
    > test.out 2>&1
eval_tap $? 241 'RetrieveActiveOIDCClientsPublicV3' test.out

#- 242 PublicListUserIDByPlatformUserIDsV3
# body param: body
echo '{"platformUserIds": ["0n6omQkV", "5g65p5Zp", "EGnrOGQ0"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicListUserIDByPlatformUserIDsV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'QHMUccWW' \
    --rawPID 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 242 'PublicListUserIDByPlatformUserIDsV3' test.out

#- 243 PublicGetUserByPlatformUserIDV3
$CLI_EXE \
    --sn iam \
    --op PublicGetUserByPlatformUserIDV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'r0GVkalE' \
    --platformUserId '2Pq6fHL6' \
    > test.out 2>&1
eval_tap $? 243 'PublicGetUserByPlatformUserIDV3' test.out

#- 244 PublicGetAsyncStatus
$CLI_EXE \
    --sn iam \
    --op PublicGetAsyncStatus \
    --namespace $AB_NAMESPACE \
    --requestId 'gNHsdxzS' \
    > test.out 2>&1
eval_tap $? 244 'PublicGetAsyncStatus' test.out

#- 245 PublicSearchUserV3
$CLI_EXE \
    --sn iam \
    --op PublicSearchUserV3 \
    --namespace $AB_NAMESPACE \
    --by 'gaUt4ZUy' \
    --limit '79' \
    --offset '64' \
    --query 'wcEKZ5ne' \
    > test.out 2>&1
eval_tap $? 245 'PublicSearchUserV3' test.out

#- 246 PublicCreateUserV3
# body param: body
echo '{"PasswordMD5Sum": "PWlIYxwO", "acceptedPolicies": [{"isAccepted": true, "localizedPolicyVersionId": "960V9ZDX", "policyId": "sPqPpaRH", "policyVersionId": "z6TLFn8x"}, {"isAccepted": true, "localizedPolicyVersionId": "XI9GwChJ", "policyId": "pJYdC6zn", "policyVersionId": "imEfSLND"}, {"isAccepted": false, "localizedPolicyVersionId": "jB7t5WLY", "policyId": "6ODs8ax6", "policyVersionId": "i9KvuHfs"}], "authType": "1ODbJNnU", "code": "ZxW6nbIs", "country": "BVuqoUJg", "dateOfBirth": "eETs7Tlx", "displayName": "Udyu1OAY", "emailAddress": "YMFvuReC", "password": "c8AKyhN3", "reachMinimumAge": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicCreateUserV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 246 'PublicCreateUserV3' test.out

#- 247 CheckUserAvailability
$CLI_EXE \
    --sn iam \
    --op CheckUserAvailability \
    --namespace $AB_NAMESPACE \
    --field 'jmDrOsBQ' \
    --query 'BYR7VPj1' \
    > test.out 2>&1
eval_tap $? 247 'CheckUserAvailability' test.out

#- 248 PublicBulkGetUsers
# body param: body
echo '{"userIds": ["FADQxEzu", "RjtSnS6j", "UnxBZAwe"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicBulkGetUsers \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 248 'PublicBulkGetUsers' test.out

#- 249 PublicSendRegistrationCode
# body param: body
echo '{"emailAddress": "HZmJ8Q1J", "languageTag": "ucIimddT"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicSendRegistrationCode \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 249 'PublicSendRegistrationCode' test.out

#- 250 PublicVerifyRegistrationCode
# body param: body
echo '{"code": "u8AW3c5Q", "emailAddress": "QLFLkCqh"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicVerifyRegistrationCode \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 250 'PublicVerifyRegistrationCode' test.out

#- 251 PublicForgotPasswordV3
# body param: body
echo '{"emailAddress": "2KrMfLqg", "languageTag": "kLyoyRw2"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicForgotPasswordV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 251 'PublicForgotPasswordV3' test.out

#- 252 GetAdminInvitationV3
$CLI_EXE \
    --sn iam \
    --op GetAdminInvitationV3 \
    --invitationId 'sGavDGbJ' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 252 'GetAdminInvitationV3' test.out

#- 253 CreateUserFromInvitationV3
# body param: body
echo '{"acceptedPolicies": [{"isAccepted": false, "localizedPolicyVersionId": "sluRU8ul", "policyId": "cp1rBdYs", "policyVersionId": "42EW3R3Z"}, {"isAccepted": true, "localizedPolicyVersionId": "SXc414RV", "policyId": "WMqz4SxO", "policyVersionId": "CnCAPEqS"}, {"isAccepted": false, "localizedPolicyVersionId": "5mIeifoS", "policyId": "wRmKwlPr", "policyVersionId": "RPyo98vG"}], "authType": "EMAILPASSWD", "country": "p1uJvGNh", "dateOfBirth": "a2S8VHLO", "displayName": "LqHMojtr", "password": "uDjw03mc", "reachMinimumAge": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op CreateUserFromInvitationV3 \
    --invitationId 'q7CVMid9' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 253 'CreateUserFromInvitationV3' test.out

#- 254 UpdateUserV3
# body param: body
echo '{"avatarUrl": "00vGGYNJ", "country": "q7gqk0Kb", "dateOfBirth": "WOLayomE", "displayName": "LhI6eHaD", "languageTag": "7iBC2o1k", "userName": "yEj4nDrp"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op UpdateUserV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 254 'UpdateUserV3' test.out

#- 255 PublicPartialUpdateUserV3
# body param: body
echo '{"avatarUrl": "2KoOMq93", "country": "VSoTW8dL", "dateOfBirth": "tgDQXHGe", "displayName": "tuHH4B0o", "languageTag": "GAKebVTM", "userName": "0cy9Rxze"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicPartialUpdateUserV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 255 'PublicPartialUpdateUserV3' test.out

#- 256 PublicSendVerificationCodeV3
# body param: body
echo '{"context": "G1NCpAXT", "emailAddress": "01TCVljQ", "languageTag": "Ofni0Mp9"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicSendVerificationCodeV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 256 'PublicSendVerificationCodeV3' test.out

#- 257 PublicUserVerificationV3
# body param: body
echo '{"code": "oNq2IFnh", "contactType": "tnC6QeGN", "languageTag": "A2TC1StO", "validateOnly": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUserVerificationV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 257 'PublicUserVerificationV3' test.out

#- 258 PublicUpgradeHeadlessAccountV3
# body param: body
echo '{"code": "3f6iRM0B", "country": "2qzSnRwS", "dateOfBirth": "NabwJVDu", "displayName": "OVpCtFrm", "emailAddress": "zaBPsOrw", "password": "aWh86f5N", "validateOnly": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpgradeHeadlessAccountV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 258 'PublicUpgradeHeadlessAccountV3' test.out

#- 259 PublicVerifyHeadlessAccountV3
# body param: body
echo '{"emailAddress": "a2riPCXO", "password": "8nrk6blF"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicVerifyHeadlessAccountV3 \
    --namespace $AB_NAMESPACE \
    --needVerificationCode 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 259 'PublicVerifyHeadlessAccountV3' test.out

#- 260 PublicUpdatePasswordV3
# body param: body
echo '{"languageTag": "tE3aCLUe", "newPassword": "kUY8yXUZ", "oldPassword": "x9WSoEDz"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpdatePasswordV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 260 'PublicUpdatePasswordV3' test.out

#- 261 PublicCreateJusticeUser
$CLI_EXE \
    --sn iam \
    --op PublicCreateJusticeUser \
    --namespace $AB_NAMESPACE \
    --targetNamespace 'uff3Cua0' \
    > test.out 2>&1
eval_tap $? 261 'PublicCreateJusticeUser' test.out

#- 262 PublicPlatformLinkV3
$CLI_EXE \
    --sn iam \
    --op PublicPlatformLinkV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'eB4cEsWO' \
    --redirectUri 'VAtmfieE' \
    --ticket 'NwlpdbjX' \
    > test.out 2>&1
eval_tap $? 262 'PublicPlatformLinkV3' test.out

#- 263 PublicPlatformUnlinkV3
# body param: body
echo '{"platformNamespace": "lSZ9s5Pe"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicPlatformUnlinkV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'PcwxepXN' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 263 'PublicPlatformUnlinkV3' test.out

#- 264 PublicPlatformUnlinkAllV3
$CLI_EXE \
    --sn iam \
    --op PublicPlatformUnlinkAllV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'zO6Bgff7' \
    > test.out 2>&1
eval_tap $? 264 'PublicPlatformUnlinkAllV3' test.out

#- 265 PublicForcePlatformLinkV3
$CLI_EXE \
    --sn iam \
    --op PublicForcePlatformLinkV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'bUC0tvBt' \
    --ticket 'JPkwHVWN' \
    > test.out 2>&1
eval_tap $? 265 'PublicForcePlatformLinkV3' test.out

#- 266 PublicWebLinkPlatform
$CLI_EXE \
    --sn iam \
    --op PublicWebLinkPlatform \
    --namespace $AB_NAMESPACE \
    --platformId '1Fkxs5v3' \
    --clientId 'FGes477k' \
    --redirectUri 'RcipHIXm' \
    > test.out 2>&1
eval_tap $? 266 'PublicWebLinkPlatform' test.out

#- 267 PublicWebLinkPlatformEstablish
$CLI_EXE \
    --sn iam \
    --op PublicWebLinkPlatformEstablish \
    --namespace $AB_NAMESPACE \
    --platformId 'MvsPJnoU' \
    --code 'vPmIrumH' \
    --state '5UpSnXs4' \
    > test.out 2>&1
eval_tap $? 267 'PublicWebLinkPlatformEstablish' test.out

#- 268 PublicProcessWebLinkPlatformV3
$CLI_EXE \
    --sn iam \
    --op PublicProcessWebLinkPlatformV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'ImD0vvne' \
    --code '9VatRRLt' \
    --state '8Vg3trwX' \
    > test.out 2>&1
eval_tap $? 268 'PublicProcessWebLinkPlatformV3' test.out

#- 269 ResetPasswordV3
# body param: body
echo '{"code": "J4osDcP9", "emailAddress": "0uSlFEMx", "newPassword": "sLfu4LzU"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op ResetPasswordV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 269 'ResetPasswordV3' test.out

#- 270 PublicGetUserByUserIdV3
eval_tap 0 270 'PublicGetUserByUserIdV3 # SKIP deprecated' test.out

#- 271 PublicGetUserBanHistoryV3
$CLI_EXE \
    --sn iam \
    --op PublicGetUserBanHistoryV3 \
    --namespace $AB_NAMESPACE \
    --userId 'SzXVzJgY' \
    --activeOnly 'false' \
    --after 'uzWnIrnm' \
    --before 'GriaBHVp' \
    --limit '78' \
    > test.out 2>&1
eval_tap $? 271 'PublicGetUserBanHistoryV3' test.out

#- 272 PublicListUserAllPlatformAccountsDistinctV3
$CLI_EXE \
    --sn iam \
    --op PublicListUserAllPlatformAccountsDistinctV3 \
    --namespace $AB_NAMESPACE \
    --userId 'mrh0mUzS' \
    > test.out 2>&1
eval_tap $? 272 'PublicListUserAllPlatformAccountsDistinctV3' test.out

#- 273 PublicGetUserInformationV3
$CLI_EXE \
    --sn iam \
    --op PublicGetUserInformationV3 \
    --namespace $AB_NAMESPACE \
    --userId '65xBwVIE' \
    > test.out 2>&1
eval_tap $? 273 'PublicGetUserInformationV3' test.out

#- 274 PublicGetUserLoginHistoriesV3
$CLI_EXE \
    --sn iam \
    --op PublicGetUserLoginHistoriesV3 \
    --namespace $AB_NAMESPACE \
    --userId 'Zk1VeXp0' \
    --after '0.09730801588568128' \
    --before '0.3520716365223454' \
    --limit '45' \
    > test.out 2>&1
eval_tap $? 274 'PublicGetUserLoginHistoriesV3' test.out

#- 275 PublicGetUserPlatformAccountsV3
$CLI_EXE \
    --sn iam \
    --op PublicGetUserPlatformAccountsV3 \
    --namespace $AB_NAMESPACE \
    --userId 'JRcBj6vo' \
    --after 'kRtXWYeM' \
    --before 'u4BhUahd' \
    --limit '79' \
    --platformId 'YGPyoJbR' \
    > test.out 2>&1
eval_tap $? 275 'PublicGetUserPlatformAccountsV3' test.out

#- 276 PublicListJusticePlatformAccountsV3
$CLI_EXE \
    --sn iam \
    --op PublicListJusticePlatformAccountsV3 \
    --namespace $AB_NAMESPACE \
    --userId '9ULlLLKY' \
    > test.out 2>&1
eval_tap $? 276 'PublicListJusticePlatformAccountsV3' test.out

#- 277 PublicLinkPlatformAccount
# body param: body
echo '{"platformId": "hEdLQKeB", "platformUserId": "h8eEBDYs"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicLinkPlatformAccount \
    --namespace $AB_NAMESPACE \
    --userId 'NS0KGbZV' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 277 'PublicLinkPlatformAccount' test.out

#- 278 PublicForceLinkPlatformWithProgression
# body param: body
echo '{"chosenNamespaces": ["Sy9pPXvY", "XbXFk5fe", "RLx1emCg"], "requestId": "9fASBfqV"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicForceLinkPlatformWithProgression \
    --namespace $AB_NAMESPACE \
    --userId 'thLtrhFg' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 278 'PublicForceLinkPlatformWithProgression' test.out

#- 279 PublicGetPublisherUserV3
$CLI_EXE \
    --sn iam \
    --op PublicGetPublisherUserV3 \
    --namespace $AB_NAMESPACE \
    --userId 'sX03iXBy' \
    > test.out 2>&1
eval_tap $? 279 'PublicGetPublisherUserV3' test.out

#- 280 PublicValidateUserByUserIDAndPasswordV3
$CLI_EXE \
    --sn iam \
    --op PublicValidateUserByUserIDAndPasswordV3 \
    --namespace $AB_NAMESPACE \
    --userId 'l68uuqEW' \
    --password '31XVTlnW' \
    > test.out 2>&1
eval_tap $? 280 'PublicValidateUserByUserIDAndPasswordV3' test.out

#- 281 PublicGetRolesV3
$CLI_EXE \
    --sn iam \
    --op PublicGetRolesV3 \
    --after 'Bv7lMYVG' \
    --before 'jgouLEPH' \
    --isWildcard 'false' \
    --limit '65' \
    > test.out 2>&1
eval_tap $? 281 'PublicGetRolesV3' test.out

#- 282 PublicGetRoleV3
$CLI_EXE \
    --sn iam \
    --op PublicGetRoleV3 \
    --roleId 'ThGG3O5T' \
    > test.out 2>&1
eval_tap $? 282 'PublicGetRoleV3' test.out

#- 283 PublicGetMyUserV3
$CLI_EXE \
    --sn iam \
    --op PublicGetMyUserV3 \
    > test.out 2>&1
eval_tap $? 283 'PublicGetMyUserV3' test.out

#- 284 PublicGetLinkHeadlessAccountToMyAccountConflictV3
$CLI_EXE \
    --sn iam \
    --op PublicGetLinkHeadlessAccountToMyAccountConflictV3 \
    --oneTimeLinkCode 'DbwrffiU' \
    > test.out 2>&1
eval_tap $? 284 'PublicGetLinkHeadlessAccountToMyAccountConflictV3' test.out

#- 285 LinkHeadlessAccountToMyAccountV3
# body param: body
echo '{"chosenNamespaces": ["CtqLqFR7", "KPhhJMjw", "QsvHheCI"], "oneTimeLinkCode": "xhaMAkng"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op LinkHeadlessAccountToMyAccountV3 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 285 'LinkHeadlessAccountToMyAccountV3' test.out

#- 286 PublicSendVerificationLinkV3
# body param: body
echo '{"languageTag": "sBr1MvQc"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicSendVerificationLinkV3 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 286 'PublicSendVerificationLinkV3' test.out

#- 287 PublicVerifyUserByLinkV3
$CLI_EXE \
    --sn iam \
    --op PublicVerifyUserByLinkV3 \
    --code '7I5IuVUw' \
    > test.out 2>&1
eval_tap $? 287 'PublicVerifyUserByLinkV3' test.out

#- 288 PlatformAuthenticateSAMLV3Handler
$CLI_EXE \
    --sn iam \
    --op PlatformAuthenticateSAMLV3Handler \
    --platformId 'lh6vvDSZ' \
    --code 'jLVMTxSV' \
    --error 'MKSa2bno' \
    --state 'A9VgO3OX' \
    > test.out 2>&1
eval_tap $? 288 'PlatformAuthenticateSAMLV3Handler' test.out

#- 289 LoginSSOClient
$CLI_EXE \
    --sn iam \
    --op LoginSSOClient \
    --platformId 's7Fzf3gf' \
    --payload 'Pj2TqF0N' \
    > test.out 2>&1
eval_tap $? 289 'LoginSSOClient' test.out

#- 290 LogoutSSOClient
$CLI_EXE \
    --sn iam \
    --op LogoutSSOClient \
    --platformId 'eHAVLw9L' \
    > test.out 2>&1
eval_tap $? 290 'LogoutSSOClient' test.out

#- 291 RequestTargetTokenResponseV3
$CLI_EXE \
    --sn iam \
    --op RequestTargetTokenResponseV3 \
    --additionalData 'LLJFQM6r' \
    --code '55E8lHma' \
    > test.out 2>&1
eval_tap $? 291 'RequestTargetTokenResponseV3' test.out

#- 292 PlatformTokenRefreshV3Deprecate
eval_tap 0 292 'PlatformTokenRefreshV3Deprecate # SKIP deprecated' test.out

#- 293 AdminGetDevicesByUserV4
$CLI_EXE \
    --sn iam \
    --op AdminGetDevicesByUserV4 \
    --namespace $AB_NAMESPACE \
    --userId 'NgGdWoen' \
    > test.out 2>&1
eval_tap $? 293 'AdminGetDevicesByUserV4' test.out

#- 294 AdminGetBannedDevicesV4
$CLI_EXE \
    --sn iam \
    --op AdminGetBannedDevicesV4 \
    --namespace $AB_NAMESPACE \
    --deviceType 'bwVMUgti' \
    --endDate 'GQrxHEYo' \
    --limit '8' \
    --offset '79' \
    --startDate 'vBfyqW4I' \
    > test.out 2>&1
eval_tap $? 294 'AdminGetBannedDevicesV4' test.out

#- 295 AdminGetUserDeviceBansV4
$CLI_EXE \
    --sn iam \
    --op AdminGetUserDeviceBansV4 \
    --namespace $AB_NAMESPACE \
    --userId '48ezExoE' \
    > test.out 2>&1
eval_tap $? 295 'AdminGetUserDeviceBansV4' test.out

#- 296 AdminBanDeviceV4
# body param: body
echo '{"comment": "8zclmwBa", "deviceId": "cqsmRYOR", "deviceType": "Lgrv0gNf", "enabled": true, "endDate": "fRuqdaMO", "ext": {"NxkoWTWP": {}, "uvbxAROV": {}, "2rN6oJij": {}}, "reason": "kCFeGwis"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBanDeviceV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 296 'AdminBanDeviceV4' test.out

#- 297 AdminGetDeviceBanV4
$CLI_EXE \
    --sn iam \
    --op AdminGetDeviceBanV4 \
    --banId 'lZkB7xXt' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 297 'AdminGetDeviceBanV4' test.out

#- 298 AdminUpdateDeviceBanV4
# body param: body
echo '{"enabled": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateDeviceBanV4 \
    --banId 'baPC0XAE' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 298 'AdminUpdateDeviceBanV4' test.out

#- 299 AdminGenerateReportV4
$CLI_EXE \
    --sn iam \
    --op AdminGenerateReportV4 \
    --namespace $AB_NAMESPACE \
    --endDate 'X6RbKhVw' \
    --startDate 'mglKiLCg' \
    --deviceType 'BXw4jmaV' \
    > test.out 2>&1
eval_tap $? 299 'AdminGenerateReportV4' test.out

#- 300 AdminGetDeviceTypesV4
$CLI_EXE \
    --sn iam \
    --op AdminGetDeviceTypesV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 300 'AdminGetDeviceTypesV4' test.out

#- 301 AdminGetDeviceBansV4
$CLI_EXE \
    --sn iam \
    --op AdminGetDeviceBansV4 \
    --deviceId 'kKUnh3ma' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 301 'AdminGetDeviceBansV4' test.out

#- 302 AdminDecryptDeviceV4
$CLI_EXE \
    --sn iam \
    --op AdminDecryptDeviceV4 \
    --deviceId 'zogrHfts' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 302 'AdminDecryptDeviceV4' test.out

#- 303 AdminUnbanDeviceV4
$CLI_EXE \
    --sn iam \
    --op AdminUnbanDeviceV4 \
    --deviceId 'mc9pbNjI' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 303 'AdminUnbanDeviceV4' test.out

#- 304 AdminGetUsersByDeviceV4
$CLI_EXE \
    --sn iam \
    --op AdminGetUsersByDeviceV4 \
    --deviceId 'BBFlOBzC' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 304 'AdminGetUsersByDeviceV4' test.out

#- 305 AdminCreateTestUsersV4
# body param: body
echo '{"count": 28}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminCreateTestUsersV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 305 'AdminCreateTestUsersV4' test.out

#- 306 AdminBulkCheckValidUserIDV4
# body param: body
echo '{"userIds": ["hu7LgdRI", "XohlvzNo", "g36QSQoT"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBulkCheckValidUserIDV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 306 'AdminBulkCheckValidUserIDV4' test.out

#- 307 AdminUpdateUserV4
# body param: body
echo '{"avatarUrl": "Wk3BalYJ", "country": "mjcxYjFw", "dateOfBirth": "f2VlkM8N", "displayName": "htnh62wZ", "languageTag": "Zsfo4ZIf", "userName": "EyNT47gd"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserV4 \
    --namespace $AB_NAMESPACE \
    --userId 'zdPL3jqD' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 307 'AdminUpdateUserV4' test.out

#- 308 AdminUpdateUserEmailAddressV4
# body param: body
echo '{"code": "BCpiTpRb", "emailAddress": "aXrAfYpJ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserEmailAddressV4 \
    --namespace $AB_NAMESPACE \
    --userId '8zpACaCT' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 308 'AdminUpdateUserEmailAddressV4' test.out

#- 309 AdminDisableUserMFAV4
$CLI_EXE \
    --sn iam \
    --op AdminDisableUserMFAV4 \
    --namespace $AB_NAMESPACE \
    --userId 'QPjAu1Oi' \
    > test.out 2>&1
eval_tap $? 309 'AdminDisableUserMFAV4' test.out

#- 310 AdminListUserRolesV4
$CLI_EXE \
    --sn iam \
    --op AdminListUserRolesV4 \
    --namespace $AB_NAMESPACE \
    --userId 'WNVuJowm' \
    > test.out 2>&1
eval_tap $? 310 'AdminListUserRolesV4' test.out

#- 311 AdminUpdateUserRoleV4
# body param: body
echo '{"assignedNamespaces": ["I5WGU9Z5", "e5P773Si", "NwXDLOCd"], "roleId": "dmUUVVw7"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserRoleV4 \
    --namespace $AB_NAMESPACE \
    --userId '6tDf9vZt' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 311 'AdminUpdateUserRoleV4' test.out

#- 312 AdminAddUserRoleV4
# body param: body
echo '{"assignedNamespaces": ["RTTGOIsg", "89ShOiYo", "Vjx60XAF"], "roleId": "O4uikJPw"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddUserRoleV4 \
    --namespace $AB_NAMESPACE \
    --userId 'CiwvTYjk' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 312 'AdminAddUserRoleV4' test.out

#- 313 AdminRemoveUserRoleV4
# body param: body
echo '{"assignedNamespaces": ["MLoBYuMp", "C6uZWYCj", "lmqGBG05"], "roleId": "ff6yMN4U"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminRemoveUserRoleV4 \
    --namespace $AB_NAMESPACE \
    --userId 'oxecuUxQ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 313 'AdminRemoveUserRoleV4' test.out

#- 314 AdminGetRolesV4
$CLI_EXE \
    --sn iam \
    --op AdminGetRolesV4 \
    --adminRole 'true' \
    --isWildcard 'true' \
    --limit '39' \
    --offset '42' \
    > test.out 2>&1
eval_tap $? 314 'AdminGetRolesV4' test.out

#- 315 AdminCreateRoleV4
# body param: body
echo '{"adminRole": false, "deletable": true, "isWildcard": true, "roleName": "UTq8Sif3"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminCreateRoleV4 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 315 'AdminCreateRoleV4' test.out

#- 316 AdminGetRoleV4
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleV4 \
    --roleId 'G1J8zQPD' \
    > test.out 2>&1
eval_tap $? 316 'AdminGetRoleV4' test.out

#- 317 AdminDeleteRoleV4
$CLI_EXE \
    --sn iam \
    --op AdminDeleteRoleV4 \
    --roleId 'x3cwh2rw' \
    > test.out 2>&1
eval_tap $? 317 'AdminDeleteRoleV4' test.out

#- 318 AdminUpdateRoleV4
# body param: body
echo '{"adminRole": true, "deletable": true, "isWildcard": true, "roleName": "gzkd3vvX"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateRoleV4 \
    --roleId 'hVJTyH3v' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 318 'AdminUpdateRoleV4' test.out

#- 319 AdminUpdateRolePermissionsV4
# body param: body
echo '{"permissions": [{"action": 16, "resource": "3SalQK8F", "schedAction": 68, "schedCron": "h68AAhN3", "schedRange": ["n51tnli6", "17FZ2Gt8", "XkEThxSQ"]}, {"action": 86, "resource": "xQiYdKHS", "schedAction": 64, "schedCron": "KLWpwwok", "schedRange": ["sZe8Jd0Y", "LxmjMZ8D", "GQWPFiUq"]}, {"action": 76, "resource": "hxZsnz35", "schedAction": 28, "schedCron": "tAbUbXFM", "schedRange": ["l8GXTvP4", "5fvIU3HV", "kJchskl0"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateRolePermissionsV4 \
    --roleId '61OhEPa9' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 319 'AdminUpdateRolePermissionsV4' test.out

#- 320 AdminAddRolePermissionsV4
# body param: body
echo '{"permissions": [{"action": 79, "resource": "HlkKXPz5", "schedAction": 87, "schedCron": "iB6OGV8D", "schedRange": ["CHk8aSkr", "4l6viSsJ", "beFv6stJ"]}, {"action": 95, "resource": "hVXe1XhK", "schedAction": 91, "schedCron": "CIoFTl4k", "schedRange": ["AUXAizAD", "YnIpg4BS", "lwW4W6l7"]}, {"action": 91, "resource": "cR8KfEOF", "schedAction": 28, "schedCron": "oJ47o20E", "schedRange": ["MGuVSGXH", "n2DQPCFC", "hGvv9m57"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddRolePermissionsV4 \
    --roleId 'Ts34LKFD' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 320 'AdminAddRolePermissionsV4' test.out

#- 321 AdminDeleteRolePermissionsV4
# body param: body
echo '["I0FnX0w0", "rKnEiFef", "oUxdt3Nf"]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDeleteRolePermissionsV4 \
    --roleId 'gkwgjXGR' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 321 'AdminDeleteRolePermissionsV4' test.out

#- 322 AdminListAssignedUsersV4
$CLI_EXE \
    --sn iam \
    --op AdminListAssignedUsersV4 \
    --roleId 'DelnCIL6' \
    --after 'ZA6V3Spv' \
    --before 'hWxGas8e' \
    --limit '19' \
    > test.out 2>&1
eval_tap $? 322 'AdminListAssignedUsersV4' test.out

#- 323 AdminAssignUserToRoleV4
# body param: body
echo '{"assignedNamespaces": ["qkSnMohZ", "2E4FhfWA", "mU6cOmET"], "namespace": "nOm5q05d", "userId": "iUER7pMX"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAssignUserToRoleV4 \
    --roleId '0C88Ecez' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 323 'AdminAssignUserToRoleV4' test.out

#- 324 AdminRevokeUserFromRoleV4
# body param: body
echo '{"namespace": "b38wsz5u", "userId": "TuiFSPra"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminRevokeUserFromRoleV4 \
    --roleId 'WiJ7DFMc' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 324 'AdminRevokeUserFromRoleV4' test.out

#- 325 AdminInviteUserNewV4
# body param: body
echo '{"assignedNamespaces": ["0GM3zX4A", "dWwCy3Rm", "PhqJW3fj"], "emailAddresses": ["3mLwjAjs", "JIhYJfur", "bGkokypu"], "isAdmin": false, "namespace": "ztCY2BiY", "roleId": "SPfyYcNT"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminInviteUserNewV4 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 325 'AdminInviteUserNewV4' test.out

#- 326 AdminUpdateMyUserV4
# body param: body
echo '{"avatarUrl": "gw24a4Pa", "country": "kcAmf84b", "dateOfBirth": "VXhXGOYF", "displayName": "3zEQm0u6", "languageTag": "NdhdxDJ1", "userName": "h0bxrtGS"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateMyUserV4 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 326 'AdminUpdateMyUserV4' test.out

#- 327 AdminDisableMyAuthenticatorV4
$CLI_EXE \
    --sn iam \
    --op AdminDisableMyAuthenticatorV4 \
    > test.out 2>&1
eval_tap $? 327 'AdminDisableMyAuthenticatorV4' test.out

#- 328 AdminEnableMyAuthenticatorV4
$CLI_EXE \
    --sn iam \
    --op AdminEnableMyAuthenticatorV4 \
    --code 'bCnajHl0' \
    > test.out 2>&1
eval_tap $? 328 'AdminEnableMyAuthenticatorV4' test.out

#- 329 AdminGenerateMyAuthenticatorKeyV4
$CLI_EXE \
    --sn iam \
    --op AdminGenerateMyAuthenticatorKeyV4 \
    > test.out 2>&1
eval_tap $? 329 'AdminGenerateMyAuthenticatorKeyV4' test.out

#- 330 AdminGetMyBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op AdminGetMyBackupCodesV4 \
    > test.out 2>&1
eval_tap $? 330 'AdminGetMyBackupCodesV4' test.out

#- 331 AdminGenerateMyBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op AdminGenerateMyBackupCodesV4 \
    > test.out 2>&1
eval_tap $? 331 'AdminGenerateMyBackupCodesV4' test.out

#- 332 AdminDisableMyBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op AdminDisableMyBackupCodesV4 \
    > test.out 2>&1
eval_tap $? 332 'AdminDisableMyBackupCodesV4' test.out

#- 333 AdminDownloadMyBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op AdminDownloadMyBackupCodesV4 \
    > test.out 2>&1
eval_tap $? 333 'AdminDownloadMyBackupCodesV4' test.out

#- 334 AdminEnableMyBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op AdminEnableMyBackupCodesV4 \
    > test.out 2>&1
eval_tap $? 334 'AdminEnableMyBackupCodesV4' test.out

#- 335 AdminSendMyMFAEmailCodeV4
$CLI_EXE \
    --sn iam \
    --op AdminSendMyMFAEmailCodeV4 \
    > test.out 2>&1
eval_tap $? 335 'AdminSendMyMFAEmailCodeV4' test.out

#- 336 AdminDisableMyEmailV4
$CLI_EXE \
    --sn iam \
    --op AdminDisableMyEmailV4 \
    > test.out 2>&1
eval_tap $? 336 'AdminDisableMyEmailV4' test.out

#- 337 AdminEnableMyEmailV4
$CLI_EXE \
    --sn iam \
    --op AdminEnableMyEmailV4 \
    --code 'z8BLj7zi' \
    > test.out 2>&1
eval_tap $? 337 'AdminEnableMyEmailV4' test.out

#- 338 AdminGetMyEnabledFactorsV4
$CLI_EXE \
    --sn iam \
    --op AdminGetMyEnabledFactorsV4 \
    > test.out 2>&1
eval_tap $? 338 'AdminGetMyEnabledFactorsV4' test.out

#- 339 AdminMakeFactorMyDefaultV4
$CLI_EXE \
    --sn iam \
    --op AdminMakeFactorMyDefaultV4 \
    --factor 'iguajSSh' \
    > test.out 2>&1
eval_tap $? 339 'AdminMakeFactorMyDefaultV4' test.out

#- 340 AdminInviteUserV4
eval_tap 0 340 'AdminInviteUserV4 # SKIP deprecated' test.out

#- 341 PublicCreateTestUserV4
# body param: body
echo '{"acceptedPolicies": [{"isAccepted": false, "localizedPolicyVersionId": "bc0giD4R", "policyId": "CXuuiWvS", "policyVersionId": "5RnhehdX"}, {"isAccepted": true, "localizedPolicyVersionId": "8XK96xoz", "policyId": "pqHVj7Ik", "policyVersionId": "JJszFSg4"}, {"isAccepted": true, "localizedPolicyVersionId": "GbWyBN41", "policyId": "p03E8jmC", "policyVersionId": "Gy11TC88"}], "authType": "EMAILPASSWD", "country": "pKGVUwgm", "dateOfBirth": "6WeXC9nZ", "displayName": "zCVHOOKF", "emailAddress": "aEPhyRfh", "password": "yeVGGF5M", "passwordMD5Sum": "D2KHunyS", "username": "xAfWmMiV", "verified": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicCreateTestUserV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 341 'PublicCreateTestUserV4' test.out

#- 342 PublicCreateUserV4
# body param: body
echo '{"acceptedPolicies": [{"isAccepted": false, "localizedPolicyVersionId": "uA4MInqy", "policyId": "4AvDcbDQ", "policyVersionId": "hmkOLAVl"}, {"isAccepted": false, "localizedPolicyVersionId": "xTzDGRbV", "policyId": "CKnnYg5R", "policyVersionId": "8qZy4JEN"}, {"isAccepted": true, "localizedPolicyVersionId": "DoFFe5s0", "policyId": "l0gquUip", "policyVersionId": "LmUoa7Uf"}], "authType": "EMAILPASSWD", "code": "J5xHKne6", "country": "XfIf7pwG", "dateOfBirth": "R7on9rCy", "displayName": "VTxKSu7T", "emailAddress": "ZTDfNCdL", "password": "kn4YYUT3", "passwordMD5Sum": "2imL2GMo", "reachMinimumAge": true, "username": "j3V7IPOd"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicCreateUserV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 342 'PublicCreateUserV4' test.out

#- 343 CreateUserFromInvitationV4
# body param: body
echo '{"acceptedPolicies": [{"isAccepted": true, "localizedPolicyVersionId": "3C3a2fMS", "policyId": "Kt7va0vQ", "policyVersionId": "iTkbuuss"}, {"isAccepted": true, "localizedPolicyVersionId": "s8Dsq6Og", "policyId": "3VkXIjyd", "policyVersionId": "KPckIQmg"}, {"isAccepted": false, "localizedPolicyVersionId": "GLupVE5g", "policyId": "LXKQmoxE", "policyVersionId": "XQr3Uihz"}], "authType": "EMAILPASSWD", "country": "M78qEQuf", "dateOfBirth": "odWcNigH", "displayName": "9SEQ3Mhl", "password": "PqiOdyzP", "reachMinimumAge": false, "username": "YOr2cwwY"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op CreateUserFromInvitationV4 \
    --invitationId 'IkqQ2zm2' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 343 'CreateUserFromInvitationV4' test.out

#- 344 PublicUpdateUserV4
# body param: body
echo '{"avatarUrl": "JDyXizh3", "country": "r5vhXNAC", "dateOfBirth": "FIG3JDsY", "displayName": "PrgEogag", "languageTag": "3LfDqYe4", "userName": "XwOWXTrH"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpdateUserV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 344 'PublicUpdateUserV4' test.out

#- 345 PublicUpdateUserEmailAddressV4
# body param: body
echo '{"code": "p6GwHjp9", "emailAddress": "YOb4sBrL"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpdateUserEmailAddressV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 345 'PublicUpdateUserEmailAddressV4' test.out

#- 346 PublicUpgradeHeadlessAccountWithVerificationCodeV4
# body param: body
echo '{"code": "v8dTjLYw", "country": "gtuKhQR9", "dateOfBirth": "4J9kz1gA", "displayName": "FOyM1nHY", "emailAddress": "NHL07XH8", "password": "ARi6R8l5", "reachMinimumAge": true, "username": "zzgMtxSN", "validateOnly": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpgradeHeadlessAccountWithVerificationCodeV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 346 'PublicUpgradeHeadlessAccountWithVerificationCodeV4' test.out

#- 347 PublicUpgradeHeadlessAccountV4
# body param: body
echo '{"emailAddress": "XFy3OsmH", "password": "OkiQEMxY", "username": "z1a6h8ni"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpgradeHeadlessAccountV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 347 'PublicUpgradeHeadlessAccountV4' test.out

#- 348 PublicDisableMyAuthenticatorV4
$CLI_EXE \
    --sn iam \
    --op PublicDisableMyAuthenticatorV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 348 'PublicDisableMyAuthenticatorV4' test.out

#- 349 PublicEnableMyAuthenticatorV4
$CLI_EXE \
    --sn iam \
    --op PublicEnableMyAuthenticatorV4 \
    --namespace $AB_NAMESPACE \
    --code 'k7w1ySHe' \
    > test.out 2>&1
eval_tap $? 349 'PublicEnableMyAuthenticatorV4' test.out

#- 350 PublicGenerateMyAuthenticatorKeyV4
$CLI_EXE \
    --sn iam \
    --op PublicGenerateMyAuthenticatorKeyV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 350 'PublicGenerateMyAuthenticatorKeyV4' test.out

#- 351 PublicGetMyBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op PublicGetMyBackupCodesV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 351 'PublicGetMyBackupCodesV4' test.out

#- 352 PublicGenerateMyBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op PublicGenerateMyBackupCodesV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 352 'PublicGenerateMyBackupCodesV4' test.out

#- 353 PublicDisableMyBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op PublicDisableMyBackupCodesV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 353 'PublicDisableMyBackupCodesV4' test.out

#- 354 PublicDownloadMyBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op PublicDownloadMyBackupCodesV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 354 'PublicDownloadMyBackupCodesV4' test.out

#- 355 PublicEnableMyBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op PublicEnableMyBackupCodesV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 355 'PublicEnableMyBackupCodesV4' test.out

#- 356 PublicRemoveTrustedDeviceV4
$CLI_EXE \
    --sn iam \
    --op PublicRemoveTrustedDeviceV4 \
    --namespace $AB_NAMESPACE \
    --device_token 'QATotsP0' \
    > test.out 2>&1
eval_tap $? 356 'PublicRemoveTrustedDeviceV4' test.out

#- 357 PublicSendMyMFAEmailCodeV4
$CLI_EXE \
    --sn iam \
    --op PublicSendMyMFAEmailCodeV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 357 'PublicSendMyMFAEmailCodeV4' test.out

#- 358 PublicDisableMyEmailV4
$CLI_EXE \
    --sn iam \
    --op PublicDisableMyEmailV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 358 'PublicDisableMyEmailV4' test.out

#- 359 PublicEnableMyEmailV4
$CLI_EXE \
    --sn iam \
    --op PublicEnableMyEmailV4 \
    --namespace $AB_NAMESPACE \
    --code 'HyXQOWxv' \
    > test.out 2>&1
eval_tap $? 359 'PublicEnableMyEmailV4' test.out

#- 360 PublicGetMyEnabledFactorsV4
$CLI_EXE \
    --sn iam \
    --op PublicGetMyEnabledFactorsV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 360 'PublicGetMyEnabledFactorsV4' test.out

#- 361 PublicMakeFactorMyDefaultV4
$CLI_EXE \
    --sn iam \
    --op PublicMakeFactorMyDefaultV4 \
    --namespace $AB_NAMESPACE \
    --factor '6n6fhCRl' \
    > test.out 2>&1
eval_tap $? 361 'PublicMakeFactorMyDefaultV4' test.out

#- 362 PublicGetUserPublicInfoByUserIdV4
$CLI_EXE \
    --sn iam \
    --op PublicGetUserPublicInfoByUserIdV4 \
    --namespace $AB_NAMESPACE \
    --userId 'QfdzXvjF' \
    > test.out 2>&1
eval_tap $? 362 'PublicGetUserPublicInfoByUserIdV4' test.out

#- 363 PublicInviteUserV4
# body param: body
echo '{"additionalData": "jdrSXd8b", "emailAddress": "uFMatooh", "namespace": "2mfKa5Pp", "namespaceDisplayName": "46xWchxp"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicInviteUserV4 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 363 'PublicInviteUserV4' test.out


# remove artifacts
rm -f "$CLI_TOKEN_FILE"
rm -f "$TEMP_JSON_INPUT"
rm -f "$TEMP_FILE_UPLOAD"

exit $EXIT_CODE