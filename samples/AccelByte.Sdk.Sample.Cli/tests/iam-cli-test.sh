#!/usr/bin/env bash

# Copyright (c) 2021 AccelByte Inc. All Rights Reserved.
# This is licensed software from AccelByte Inc, for limitations
# and restrictions contact your company contract manager.

# This code is generated by tool. DO NOT EDIT.

# Meta:
# - random seed: 
# - template file: 

# Instructions:
# - Run the Justice SDK Mock Server first before running this script.

export AB_BASE_URL="http://127.0.0.1:8080"
export AB_CLIENT_ID="admin"
export AB_CLIENT_SECRET="admin"
export AB_NAMESPACE="test"
export AB_APP_NAME="UnitTest"

EXIT_CODE=0

eval_tap() {
  if [ $1 -eq 0 ]; then
    echo "ok $2 - $3"
  else
    EXIT_CODE=1
    echo "not ok $2 - $3"
    sed 's/^/# /g' $4
  fi
  rm -f $4
}

CLI_EXE="AccelByte.Sdk.Sample.Cli"
CLI_TOKEN_FILE="$(dirname "$(which $CLI_EXE)")/token.json"
TEMP_JSON_INPUT="input_json.json"
TEMP_FILE_UPLOAD="file_upload.bin"

echo "TAP version 13"
echo "1..411"

#- 1 Login
$CLI_EXE --op login --lt user --user user --pass user > test.out 2>&1
eval_tap $? 1 'Login' test.out

if [ $EXIT_CODE -ne 0 ]; then
  echo "Bail out! Login failed."
  exit $EXIT_CODE
fi

# echo "foo" > "$CLI_TOKEN_FILE"

#- 2 GetBansType
eval_tap 0 2 'GetBansType # SKIP deprecated' test.out

#- 3 GetListBanReason
eval_tap 0 3 'GetListBanReason # SKIP deprecated' test.out

#- 4 GetClients
eval_tap 0 4 'GetClients # SKIP deprecated' test.out

#- 5 CreateClient
eval_tap 0 5 'CreateClient # SKIP deprecated' test.out

#- 6 GetClient
eval_tap 0 6 'GetClient # SKIP deprecated' test.out

#- 7 UpdateClient
eval_tap 0 7 'UpdateClient # SKIP deprecated' test.out

#- 8 DeleteClient
eval_tap 0 8 'DeleteClient # SKIP deprecated' test.out

#- 9 UpdateClientPermission
eval_tap 0 9 'UpdateClientPermission # SKIP deprecated' test.out

#- 10 AddClientPermission
eval_tap 0 10 'AddClientPermission # SKIP deprecated' test.out

#- 11 DeleteClientPermission
eval_tap 0 11 'DeleteClientPermission # SKIP deprecated' test.out

#- 12 UpdateClientSecret
eval_tap 0 12 'UpdateClientSecret # SKIP deprecated' test.out

#- 13 GetClientsbyNamespace
eval_tap 0 13 'GetClientsbyNamespace # SKIP deprecated' test.out

#- 14 CreateClientByNamespace
eval_tap 0 14 'CreateClientByNamespace # SKIP deprecated' test.out

#- 15 DeleteClientByNamespace
eval_tap 0 15 'DeleteClientByNamespace # SKIP deprecated' test.out

#- 16 CreateUser
eval_tap 0 16 'CreateUser # SKIP deprecated' test.out

#- 17 GetAdminUsersByRoleID
eval_tap 0 17 'GetAdminUsersByRoleID # SKIP deprecated' test.out

#- 18 GetUserByLoginID
eval_tap 0 18 'GetUserByLoginID # SKIP deprecated' test.out

#- 19 GetUserByPlatformUserID
eval_tap 0 19 'GetUserByPlatformUserID # SKIP deprecated' test.out

#- 20 ForgotPassword
eval_tap 0 20 'ForgotPassword # SKIP deprecated' test.out

#- 21 GetUsersByLoginIds
eval_tap 0 21 'GetUsersByLoginIds # SKIP deprecated' test.out

#- 22 ResetPassword
eval_tap 0 22 'ResetPassword # SKIP deprecated' test.out

#- 23 SearchUser
eval_tap 0 23 'SearchUser # SKIP deprecated' test.out

#- 24 GetUserByUserID
eval_tap 0 24 'GetUserByUserID # SKIP deprecated' test.out

#- 25 UpdateUser
eval_tap 0 25 'UpdateUser # SKIP deprecated' test.out

#- 26 DeleteUser
eval_tap 0 26 'DeleteUser # SKIP deprecated' test.out

#- 27 BanUser
eval_tap 0 27 'BanUser # SKIP deprecated' test.out

#- 28 GetUserBanHistory
eval_tap 0 28 'GetUserBanHistory # SKIP deprecated' test.out

#- 29 DisableUserBan
eval_tap 0 29 'DisableUserBan # SKIP deprecated' test.out

#- 30 EnableUserBan
eval_tap 0 30 'EnableUserBan # SKIP deprecated' test.out

#- 31 ListCrossNamespaceAccountLink
eval_tap 0 31 'ListCrossNamespaceAccountLink # SKIP deprecated' test.out

#- 32 DisableUser
eval_tap 0 32 'DisableUser # SKIP deprecated' test.out

#- 33 EnableUser
eval_tap 0 33 'EnableUser # SKIP deprecated' test.out

#- 34 GetUserInformation
eval_tap 0 34 'GetUserInformation # SKIP deprecated' test.out

#- 35 DeleteUserInformation
eval_tap 0 35 'DeleteUserInformation # SKIP deprecated' test.out

#- 36 GetUserLoginHistories
eval_tap 0 36 'GetUserLoginHistories # SKIP deprecated' test.out

#- 37 UpdatePassword
eval_tap 0 37 'UpdatePassword # SKIP deprecated' test.out

#- 38 SaveUserPermission
eval_tap 0 38 'SaveUserPermission # SKIP deprecated' test.out

#- 39 AddUserPermission
eval_tap 0 39 'AddUserPermission # SKIP deprecated' test.out

#- 40 DeleteUserPermission
eval_tap 0 40 'DeleteUserPermission # SKIP deprecated' test.out

#- 41 GetUserPlatformAccounts
eval_tap 0 41 'GetUserPlatformAccounts # SKIP deprecated' test.out

#- 42 GetUserMapping
eval_tap 0 42 'GetUserMapping # SKIP deprecated' test.out

#- 43 GetUserJusticePlatformAccount
eval_tap 0 43 'GetUserJusticePlatformAccount # SKIP deprecated' test.out

#- 44 PlatformLink
eval_tap 0 44 'PlatformLink # SKIP deprecated' test.out

#- 45 PlatformUnlink
eval_tap 0 45 'PlatformUnlink # SKIP deprecated' test.out

#- 46 GetPublisherUser
eval_tap 0 46 'GetPublisherUser # SKIP deprecated' test.out

#- 47 SaveUserRoles
eval_tap 0 47 'SaveUserRoles # SKIP deprecated' test.out

#- 48 AddUserRole
eval_tap 0 48 'AddUserRole # SKIP deprecated' test.out

#- 49 DeleteUserRole
eval_tap 0 49 'DeleteUserRole # SKIP deprecated' test.out

#- 50 UpgradeHeadlessAccount
eval_tap 0 50 'UpgradeHeadlessAccount # SKIP deprecated' test.out

#- 51 UpgradeHeadlessAccountWithVerificationCode
eval_tap 0 51 'UpgradeHeadlessAccountWithVerificationCode # SKIP deprecated' test.out

#- 52 UserVerification
eval_tap 0 52 'UserVerification # SKIP deprecated' test.out

#- 53 SendVerificationCode
eval_tap 0 53 'SendVerificationCode # SKIP deprecated' test.out

#- 54 Authorization
eval_tap 0 54 'Authorization # SKIP deprecated' test.out

#- 55 GetJWKS
eval_tap 0 55 'GetJWKS # SKIP deprecated' test.out

#- 56 PlatformTokenRequestHandler
eval_tap 0 56 'PlatformTokenRequestHandler # SKIP deprecated' test.out

#- 57 RevokeUser
eval_tap 0 57 'RevokeUser # SKIP deprecated' test.out

#- 58 GetRevocationList
eval_tap 0 58 'GetRevocationList # SKIP deprecated' test.out

#- 59 RevokeToken
eval_tap 0 59 'RevokeToken # SKIP deprecated' test.out

#- 60 RevokeAUser
eval_tap 0 60 'RevokeAUser # SKIP deprecated' test.out

#- 61 TokenGrant
eval_tap 0 61 'TokenGrant # SKIP deprecated' test.out

#- 62 VerifyToken
eval_tap 0 62 'VerifyToken # SKIP deprecated' test.out

#- 63 GetRoles
eval_tap 0 63 'GetRoles # SKIP deprecated' test.out

#- 64 CreateRole
eval_tap 0 64 'CreateRole # SKIP deprecated' test.out

#- 65 GetRole
eval_tap 0 65 'GetRole # SKIP deprecated' test.out

#- 66 UpdateRole
eval_tap 0 66 'UpdateRole # SKIP deprecated' test.out

#- 67 DeleteRole
eval_tap 0 67 'DeleteRole # SKIP deprecated' test.out

#- 68 GetRoleAdminStatus
eval_tap 0 68 'GetRoleAdminStatus # SKIP deprecated' test.out

#- 69 SetRoleAsAdmin
eval_tap 0 69 'SetRoleAsAdmin # SKIP deprecated' test.out

#- 70 RemoveRoleAdmin
eval_tap 0 70 'RemoveRoleAdmin # SKIP deprecated' test.out

#- 71 GetRoleManagers
eval_tap 0 71 'GetRoleManagers # SKIP deprecated' test.out

#- 72 AddRoleManagers
eval_tap 0 72 'AddRoleManagers # SKIP deprecated' test.out

#- 73 RemoveRoleManagers
eval_tap 0 73 'RemoveRoleManagers # SKIP deprecated' test.out

#- 74 GetRoleMembers
eval_tap 0 74 'GetRoleMembers # SKIP deprecated' test.out

#- 75 AddRoleMembers
eval_tap 0 75 'AddRoleMembers # SKIP deprecated' test.out

#- 76 RemoveRoleMembers
eval_tap 0 76 'RemoveRoleMembers # SKIP deprecated' test.out

#- 77 UpdateRolePermissions
eval_tap 0 77 'UpdateRolePermissions # SKIP deprecated' test.out

#- 78 AddRolePermission
eval_tap 0 78 'AddRolePermission # SKIP deprecated' test.out

#- 79 DeleteRolePermission
eval_tap 0 79 'DeleteRolePermission # SKIP deprecated' test.out

#- 80 AdminGetAgeRestrictionStatusV2
eval_tap 0 80 'AdminGetAgeRestrictionStatusV2 # SKIP deprecated' test.out

#- 81 AdminUpdateAgeRestrictionConfigV2
eval_tap 0 81 'AdminUpdateAgeRestrictionConfigV2 # SKIP deprecated' test.out

#- 82 GetListCountryAgeRestriction
eval_tap 0 82 'GetListCountryAgeRestriction # SKIP deprecated' test.out

#- 83 UpdateCountryAgeRestriction
eval_tap 0 83 'UpdateCountryAgeRestriction # SKIP deprecated' test.out

#- 84 AdminSearchUsersV2
eval_tap 0 84 'AdminSearchUsersV2 # SKIP deprecated' test.out

#- 85 AdminGetUserByUserIdV2
eval_tap 0 85 'AdminGetUserByUserIdV2 # SKIP deprecated' test.out

#- 86 AdminUpdateUserV2
eval_tap 0 86 'AdminUpdateUserV2 # SKIP deprecated' test.out

#- 87 AdminBanUserV2
eval_tap 0 87 'AdminBanUserV2 # SKIP deprecated' test.out

#- 88 AdminGetUserBanV2
eval_tap 0 88 'AdminGetUserBanV2 # SKIP deprecated' test.out

#- 89 AdminDisableUserV2
eval_tap 0 89 'AdminDisableUserV2 # SKIP deprecated' test.out

#- 90 AdminEnableUserV2
eval_tap 0 90 'AdminEnableUserV2 # SKIP deprecated' test.out

#- 91 AdminResetPasswordV2
eval_tap 0 91 'AdminResetPasswordV2 # SKIP deprecated' test.out

#- 92 AdminDeletePlatformLinkV2
eval_tap 0 92 'AdminDeletePlatformLinkV2 # SKIP deprecated' test.out

#- 93 AdminPutUserRolesV2
eval_tap 0 93 'AdminPutUserRolesV2 # SKIP deprecated' test.out

#- 94 AdminCreateUserRolesV2
eval_tap 0 94 'AdminCreateUserRolesV2 # SKIP deprecated' test.out

#- 95 PublicGetCountryAgeRestriction
eval_tap 0 95 'PublicGetCountryAgeRestriction # SKIP deprecated' test.out

#- 96 PublicCreateUserV2
eval_tap 0 96 'PublicCreateUserV2 # SKIP deprecated' test.out

#- 97 PublicForgotPasswordV2
eval_tap 0 97 'PublicForgotPasswordV2 # SKIP deprecated' test.out

#- 98 PublicResetPasswordV2
eval_tap 0 98 'PublicResetPasswordV2 # SKIP deprecated' test.out

#- 99 PublicGetUserByUserIDV2
eval_tap 0 99 'PublicGetUserByUserIDV2 # SKIP deprecated' test.out

#- 100 PublicUpdateUserV2
eval_tap 0 100 'PublicUpdateUserV2 # SKIP deprecated' test.out

#- 101 PublicGetUserBan
eval_tap 0 101 'PublicGetUserBan # SKIP deprecated' test.out

#- 102 PublicUpdatePasswordV2
eval_tap 0 102 'PublicUpdatePasswordV2 # SKIP deprecated' test.out

#- 103 GetListJusticePlatformAccounts
eval_tap 0 103 'GetListJusticePlatformAccounts # SKIP deprecated' test.out

#- 104 PublicPlatformLinkV2
eval_tap 0 104 'PublicPlatformLinkV2 # SKIP deprecated' test.out

#- 105 PublicDeletePlatformLinkV2
eval_tap 0 105 'PublicDeletePlatformLinkV2 # SKIP deprecated' test.out

#- 106 AdminGetBansTypeV3
$CLI_EXE \
    --sn iam \
    --op AdminGetBansTypeV3 \
    > test.out 2>&1
eval_tap $? 106 'AdminGetBansTypeV3' test.out

#- 107 AdminGetListBanReasonV3
$CLI_EXE \
    --sn iam \
    --op AdminGetListBanReasonV3 \
    > test.out 2>&1
eval_tap $? 107 'AdminGetListBanReasonV3' test.out

#- 108 AdminListClientAvailablePermissions
$CLI_EXE \
    --sn iam \
    --op AdminListClientAvailablePermissions \
    --excludePermissions 'true' \
    > test.out 2>&1
eval_tap $? 108 'AdminListClientAvailablePermissions' test.out

#- 109 AdminUpdateAvailablePermissionsByModule
# body param: body
echo '{"modules": [{"docLink": "UBjOmb23", "groups": [{"group": "GYlQ2Gyl", "groupId": "xPAGLaUT", "permissions": [{"allowedActions": [23, 45, 27], "resource": "17aCMgIk"}, {"allowedActions": [62, 58, 33], "resource": "b8T1V2FX"}, {"allowedActions": [91, 13, 54], "resource": "cJhhriOq"}]}, {"group": "t691FAag", "groupId": "Mcvn81H4", "permissions": [{"allowedActions": [8, 13, 70], "resource": "cCCJLIyc"}, {"allowedActions": [35, 32, 37], "resource": "q5gzAtYp"}, {"allowedActions": [89, 7, 53], "resource": "0MxXBPKQ"}]}, {"group": "8BUNzLKp", "groupId": "rzALJlss", "permissions": [{"allowedActions": [52, 20, 14], "resource": "cWGpeX7R"}, {"allowedActions": [60, 10, 1], "resource": "fqMbomS3"}, {"allowedActions": [40, 54, 45], "resource": "lZZ7fqwx"}]}], "module": "537lDDAp", "moduleId": "potVrmTX"}, {"docLink": "ypo4oJWc", "groups": [{"group": "34usSX4A", "groupId": "CNmAKp2g", "permissions": [{"allowedActions": [77, 30, 12], "resource": "9tNZDmDX"}, {"allowedActions": [90, 50, 57], "resource": "bJcS9Xw2"}, {"allowedActions": [5, 66, 94], "resource": "VZi0ujdF"}]}, {"group": "MvFFrUAz", "groupId": "ubX9yu9O", "permissions": [{"allowedActions": [2, 96, 60], "resource": "Noseh37g"}, {"allowedActions": [4, 13, 94], "resource": "HgkK8n8l"}, {"allowedActions": [78, 62, 56], "resource": "9KCGtxes"}]}, {"group": "Wg9xI0dp", "groupId": "emnoJRkv", "permissions": [{"allowedActions": [64, 51, 25], "resource": "siCu4HZq"}, {"allowedActions": [73, 13, 81], "resource": "CTtZwjhK"}, {"allowedActions": [5, 25, 65], "resource": "0YO3VI0h"}]}], "module": "MKv3WJ3g", "moduleId": "PnzrDGQ1"}, {"docLink": "Xg5RZNS9", "groups": [{"group": "sCaLmG5d", "groupId": "OXOt98HB", "permissions": [{"allowedActions": [18, 32, 68], "resource": "1BNOadQK"}, {"allowedActions": [35, 49, 72], "resource": "MROitVDh"}, {"allowedActions": [41, 91, 22], "resource": "2FXAWiXF"}]}, {"group": "CihFyIGX", "groupId": "O80oG5Xd", "permissions": [{"allowedActions": [100, 80, 31], "resource": "WOUmfVNG"}, {"allowedActions": [77, 42, 44], "resource": "InGgPBtV"}, {"allowedActions": [33, 26, 73], "resource": "gLSFFTnI"}]}, {"group": "NiYOD7jx", "groupId": "F9W8aTfE", "permissions": [{"allowedActions": [73, 54, 78], "resource": "NbmRHre9"}, {"allowedActions": [22, 55, 49], "resource": "UU5IT32R"}, {"allowedActions": [54, 30, 96], "resource": "fjZbuUfP"}]}], "module": "j26otTMp", "moduleId": "Thk0blTL"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateAvailablePermissionsByModule \
    --forceDelete 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 109 'AdminUpdateAvailablePermissionsByModule' test.out

#- 110 AdminDeleteConfigPermissionsByGroup
# body param: body
echo '{"groupId": "vzyOmbjp", "moduleId": "SVF2DD06"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDeleteConfigPermissionsByGroup \
    --forceDelete 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 110 'AdminDeleteConfigPermissionsByGroup' test.out

#- 111 AdminListClientTemplates
$CLI_EXE \
    --sn iam \
    --op AdminListClientTemplates \
    > test.out 2>&1
eval_tap $? 111 'AdminListClientTemplates' test.out

#- 112 AdminGetInputValidations
$CLI_EXE \
    --sn iam \
    --op AdminGetInputValidations \
    > test.out 2>&1
eval_tap $? 112 'AdminGetInputValidations' test.out

#- 113 AdminUpdateInputValidations
# body param: body
echo '[{"field": "0OZpU2my", "validation": {"allowAllSpecialCharacters": false, "allowDigit": false, "allowLetter": true, "allowSpace": false, "allowUnicode": true, "avatarConfig": {"allowedPrefixes": ["lQS88bSf", "r7XEyLQU", "VPm9PuU9"], "preferRegex": true, "regex": "7WWYpcaF"}, "blockedWord": ["sBG6aGtt", "JwaFtbRi", "M1FJJYyZ"], "description": [{"language": "wBuRkT7k", "message": ["caMMEADU", "kOZF8PKq", "DZO4ueQE"]}, {"language": "ha6fucfd", "message": ["PAP5oOVA", "KE2kphAr", "p1Tce0c5"]}, {"language": "LG84FLzR", "message": ["rjDnrc0B", "FrBAVnf4", "7whdBScZ"]}], "isCustomRegex": false, "letterCase": "rGN7zb11", "maxLength": 73, "maxRepeatingAlphaNum": 95, "maxRepeatingSpecialCharacter": 43, "minCharType": 30, "minLength": 48, "profanityFilter": "NSItVIp2", "regex": "Ps2tPvJq", "specialCharacterLocation": "Me9u4d1F", "specialCharacters": ["UrDJ23vu", "KGH7q2S9", "CaZs9ZyG"]}}, {"field": "2T45qnkA", "validation": {"allowAllSpecialCharacters": true, "allowDigit": true, "allowLetter": true, "allowSpace": false, "allowUnicode": false, "avatarConfig": {"allowedPrefixes": ["pF1pdfpl", "3EVRvctd", "ADhMvoJr"], "preferRegex": true, "regex": "PjKZjA7D"}, "blockedWord": ["k7RaD9YW", "iXevZqwp", "6TGCbFEw"], "description": [{"language": "thoV9WMP", "message": ["CXEve9hz", "5Le2Akak", "iQNukSIb"]}, {"language": "dIA3MDRa", "message": ["UpMQjUB2", "FnYz7k4V", "fLp8t5UT"]}, {"language": "KJJiYJ6N", "message": ["gWT0VvAP", "6MV1n3yA", "ixTyHAim"]}], "isCustomRegex": false, "letterCase": "odqOEuyV", "maxLength": 10, "maxRepeatingAlphaNum": 96, "maxRepeatingSpecialCharacter": 35, "minCharType": 10, "minLength": 66, "profanityFilter": "r9RBqzkF", "regex": "RQ8gDarZ", "specialCharacterLocation": "Kbp3cX8j", "specialCharacters": ["1z8TPQF7", "6YbVdHd9", "L7itKae7"]}}, {"field": "u4aZahgy", "validation": {"allowAllSpecialCharacters": true, "allowDigit": true, "allowLetter": false, "allowSpace": true, "allowUnicode": false, "avatarConfig": {"allowedPrefixes": ["XkNeRiuv", "HAhaPbLa", "i63xLh6B"], "preferRegex": true, "regex": "4ZmzA69o"}, "blockedWord": ["0iY7p9mU", "MDjuF2Xh", "ObCafePD"], "description": [{"language": "u8PFdgFD", "message": ["V7QwLcAp", "qvSJMcJK", "NzZEkM6h"]}, {"language": "03B189FQ", "message": ["slVyX5vl", "Ie9PiV9E", "2ic6xKOk"]}, {"language": "qKZQJI1T", "message": ["SnCSwSYa", "qfg0gIzJ", "HxFy2UpO"]}], "isCustomRegex": false, "letterCase": "mGxU3TWC", "maxLength": 5, "maxRepeatingAlphaNum": 58, "maxRepeatingSpecialCharacter": 36, "minCharType": 49, "minLength": 0, "profanityFilter": "W0CA0A74", "regex": "6QYIpT45", "specialCharacterLocation": "wFjrKE0d", "specialCharacters": ["pQxKqrw0", "7KxkDYBn", "SfTnsLjW"]}}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateInputValidations \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 113 'AdminUpdateInputValidations' test.out

#- 114 AdminResetInputValidations
$CLI_EXE \
    --sn iam \
    --op AdminResetInputValidations \
    --field 'jKCuE5fy' \
    > test.out 2>&1
eval_tap $? 114 'AdminResetInputValidations' test.out

#- 115 ListAdminsV3
$CLI_EXE \
    --sn iam \
    --op ListAdminsV3 \
    --namespace $AB_NAMESPACE \
    --after 'D2PiWKP6' \
    --before 'Oc2CWIzY' \
    --endDate 'ICOgo7xB' \
    --limit '21' \
    --query 'wF5S4FzY' \
    --roleId 'juIhhLFa' \
    --startDate 'xJfr8MCY' \
    > test.out 2>&1
eval_tap $? 115 'ListAdminsV3' test.out

#- 116 AdminGetAgeRestrictionStatusV3
$CLI_EXE \
    --sn iam \
    --op AdminGetAgeRestrictionStatusV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 116 'AdminGetAgeRestrictionStatusV3' test.out

#- 117 AdminUpdateAgeRestrictionConfigV3
# body param: body
echo '{"ageRestriction": 38, "enable": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateAgeRestrictionConfigV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 117 'AdminUpdateAgeRestrictionConfigV3' test.out

#- 118 AdminGetListCountryAgeRestrictionV3
$CLI_EXE \
    --sn iam \
    --op AdminGetListCountryAgeRestrictionV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 118 'AdminGetListCountryAgeRestrictionV3' test.out

#- 119 AdminUpdateCountryAgeRestrictionV3
# body param: body
echo '{"ageRestriction": 0}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateCountryAgeRestrictionV3 \
    --countryCode 'LnMGofyE' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 119 'AdminUpdateCountryAgeRestrictionV3' test.out

#- 120 AdminGetBannedUsersV3
$CLI_EXE \
    --sn iam \
    --op AdminGetBannedUsersV3 \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --banType 'xSVNAPeJ' \
    --limit '52' \
    --offset '20' \
    > test.out 2>&1
eval_tap $? 120 'AdminGetBannedUsersV3' test.out

#- 121 AdminBanUserBulkV3
# body param: body
echo '{"ban": "mCJje0H0", "comment": "E5JEJmMx", "endDate": "ipvN7vCf", "reason": "0YnNWqhE", "skipNotif": true, "userIds": ["jRAh3N18", "s1FgaUVe", "UyXCGpEO"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBanUserBulkV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 121 'AdminBanUserBulkV3' test.out

#- 122 AdminUnbanUserBulkV3
# body param: body
echo '{"bans": [{"banId": "d75NiSPh", "userId": "pQPnyYgm"}, {"banId": "yn7CqIh6", "userId": "mk6k828S"}, {"banId": "pht89Iqo", "userId": "wFL88TWV"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUnbanUserBulkV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 122 'AdminUnbanUserBulkV3' test.out

#- 123 AdminGetBansTypeWithNamespaceV3
$CLI_EXE \
    --sn iam \
    --op AdminGetBansTypeWithNamespaceV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 123 'AdminGetBansTypeWithNamespaceV3' test.out

#- 124 AdminGetClientsByNamespaceV3
$CLI_EXE \
    --sn iam \
    --op AdminGetClientsByNamespaceV3 \
    --namespace $AB_NAMESPACE \
    --clientId '49g4HqQR' \
    --clientName 'vWegIqng' \
    --clientType 'bqT7eHmG' \
    --limit '13' \
    --offset '4' \
    --skipLoginQueue 'true' \
    > test.out 2>&1
eval_tap $? 124 'AdminGetClientsByNamespaceV3' test.out

#- 125 AdminBulkUpdateClientsV3
# body param: body
echo '{"clientIds": ["GWUhksFN", "y1JDjJFq", "ha5gRkBX"], "clientUpdateRequest": {"audiences": ["IqnXvRKP", "tdW6vhIB", "q1XiW5KD"], "baseUri": "k5Mfjcom", "clientName": "Plw1UfW7", "clientPermissions": [{"action": 36, "resource": "t8NwtZZu", "schedAction": 6, "schedCron": "nt3uTQMp", "schedRange": ["HvCr5ZDr", "8sjAVMHJ", "3lCvO5qc"]}, {"action": 73, "resource": "USdLmHDx", "schedAction": 99, "schedCron": "zpInwglX", "schedRange": ["Sry24zxz", "uDfZMCpA", "DHDjuYO3"]}, {"action": 66, "resource": "15HHvf6C", "schedAction": 67, "schedCron": "UIs8V9Gb", "schedRange": ["Qovx8X9E", "WkauCYEx", "lcA96WvN"]}], "clientPlatform": "YeOH54bw", "deletable": false, "description": "zzcggDHn", "modulePermissions": [{"moduleId": "Y4Yg5oNf", "selectedGroups": [{"groupId": "0oFtw3NH", "selectedActions": [82, 35, 33]}, {"groupId": "Ya7v5QUH", "selectedActions": [65, 78, 82]}, {"groupId": "AnfgkWIK", "selectedActions": [46, 0, 0]}]}, {"moduleId": "rroLQpY9", "selectedGroups": [{"groupId": "VTIWuEwL", "selectedActions": [56, 86, 25]}, {"groupId": "JJyWOrrd", "selectedActions": [9, 76, 14]}, {"groupId": "tLgYIDBV", "selectedActions": [72, 73, 68]}]}, {"moduleId": "XMaGdNOF", "selectedGroups": [{"groupId": "INP6BrmT", "selectedActions": [61, 10, 30]}, {"groupId": "YtwSIhaP", "selectedActions": [25, 21, 69]}, {"groupId": "i0YXzQ4Y", "selectedActions": [100, 91, 83]}]}], "namespace": "otPhjPJV", "oauthAccessTokenExpiration": 64, "oauthAccessTokenExpirationTimeUnit": "frrfjD0y", "oauthRefreshTokenExpiration": 15, "oauthRefreshTokenExpirationTimeUnit": "uCSYTWIk", "redirectUri": "qatTxLte", "scopes": ["OGz1XmpA", "tULuShNS", "dHPBU4jV"], "skipLoginQueue": false, "twoFactorEnabled": false}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBulkUpdateClientsV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 125 'AdminBulkUpdateClientsV3' test.out

#- 126 AdminCreateClientV3
# body param: body
echo '{"audiences": ["TlVQdquZ", "zZkR5sOW", "BM0vSOCw"], "baseUri": "pjeCNRGB", "clientId": "KwNCoTCR", "clientName": "UJz4GuTT", "clientPermissions": [{"action": 80, "resource": "bXpNUh7q", "schedAction": 9, "schedCron": "IAWvAxO9", "schedRange": ["VoJJnwvx", "nouMjiJk", "adm6aVoK"]}, {"action": 78, "resource": "L3gH63Tg", "schedAction": 63, "schedCron": "tMQOLOYm", "schedRange": ["TpzySK29", "mNGefLJ1", "dYjXNuzu"]}, {"action": 10, "resource": "yskJDsz6", "schedAction": 20, "schedCron": "oMLdHGc0", "schedRange": ["skKQy5T0", "Mvd3nd19", "2r2Zxpux"]}], "clientPlatform": "jQKW4DKy", "deletable": true, "description": "8Pm7tzxS", "modulePermissions": [{"moduleId": "SNTz6HA7", "selectedGroups": [{"groupId": "Zrk254a6", "selectedActions": [69, 23, 43]}, {"groupId": "KLy4jluE", "selectedActions": [94, 58, 32]}, {"groupId": "Yo7bahlJ", "selectedActions": [0, 51, 66]}]}, {"moduleId": "IHba1KPf", "selectedGroups": [{"groupId": "lZeqJrVY", "selectedActions": [62, 37, 67]}, {"groupId": "qnGDpy5H", "selectedActions": [83, 35, 60]}, {"groupId": "shS7fSXq", "selectedActions": [61, 32, 21]}]}, {"moduleId": "vNuIbHZ4", "selectedGroups": [{"groupId": "Ic7vMlHt", "selectedActions": [96, 23, 81]}, {"groupId": "ZENWhbk1", "selectedActions": [73, 35, 38]}, {"groupId": "zycMFvwY", "selectedActions": [3, 63, 5]}]}], "namespace": "3C1QiOYe", "oauthAccessTokenExpiration": 69, "oauthAccessTokenExpirationTimeUnit": "8yeRvkjW", "oauthClientType": "Z5bdbRT3", "oauthRefreshTokenExpiration": 70, "oauthRefreshTokenExpirationTimeUnit": "ybdDDT5V", "parentNamespace": "j3hZ1Ai8", "redirectUri": "pCr5xWb1", "scopes": ["D4u0DyIr", "UZUVgEpH", "el6taZ1k"], "secret": "a7x4UdaW", "skipLoginQueue": true, "twoFactorEnabled": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminCreateClientV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 126 'AdminCreateClientV3' test.out

#- 127 AdminGetClientsbyNamespacebyIDV3
$CLI_EXE \
    --sn iam \
    --op AdminGetClientsbyNamespacebyIDV3 \
    --clientId 'mEFz6KVu' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 127 'AdminGetClientsbyNamespacebyIDV3' test.out

#- 128 AdminDeleteClientV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteClientV3 \
    --clientId 'LRbZ2U7c' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 128 'AdminDeleteClientV3' test.out

#- 129 AdminUpdateClientV3
# body param: body
echo '{"audiences": ["7XoJ4qsF", "aKTjoRAv", "imYsLNQu"], "baseUri": "bqdeOqEh", "clientName": "YME45tZ0", "clientPermissions": [{"action": 27, "resource": "LaV9vK52", "schedAction": 25, "schedCron": "HJbaLKyb", "schedRange": ["jPy0wJAt", "D9VLVeeA", "2Ew04o2n"]}, {"action": 89, "resource": "nnmuyVZO", "schedAction": 95, "schedCron": "spWGuzis", "schedRange": ["M31eEqCv", "nIvtIl8Q", "OgaZyshD"]}, {"action": 64, "resource": "wgzYxn8L", "schedAction": 37, "schedCron": "2cR2X0mf", "schedRange": ["RmqPMKej", "0PFiNuba", "6NKZDOge"]}], "clientPlatform": "snj6ZdWh", "deletable": true, "description": "WtA3Mtrn", "modulePermissions": [{"moduleId": "MXMChzkP", "selectedGroups": [{"groupId": "3FTkB4t8", "selectedActions": [7, 60, 16]}, {"groupId": "9JqXZ8Yy", "selectedActions": [64, 19, 75]}, {"groupId": "XWRdKkYt", "selectedActions": [74, 78, 41]}]}, {"moduleId": "a1ickAWU", "selectedGroups": [{"groupId": "C7kjhhhr", "selectedActions": [68, 61, 37]}, {"groupId": "3nLcVmUm", "selectedActions": [91, 46, 89]}, {"groupId": "hmDXURkc", "selectedActions": [44, 32, 46]}]}, {"moduleId": "39UqyJqg", "selectedGroups": [{"groupId": "3NIwKcn4", "selectedActions": [77, 97, 32]}, {"groupId": "vjqsTAPa", "selectedActions": [15, 78, 55]}, {"groupId": "0GfZ1O1o", "selectedActions": [41, 57, 99]}]}], "namespace": "ttfnw1DH", "oauthAccessTokenExpiration": 71, "oauthAccessTokenExpirationTimeUnit": "3NxsZ0Ug", "oauthRefreshTokenExpiration": 77, "oauthRefreshTokenExpirationTimeUnit": "nq5jRVkH", "redirectUri": "HQhdUgsj", "scopes": ["AAObkkNm", "dtd0PEF1", "m2wgzOhf"], "skipLoginQueue": true, "twoFactorEnabled": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateClientV3 \
    --clientId 'aWPPYoh8' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 129 'AdminUpdateClientV3' test.out

#- 130 AdminUpdateClientPermissionV3
# body param: body
echo '{"permissions": [{"action": 97, "resource": "v24oKyPU"}, {"action": 9, "resource": "6VgykdAl"}, {"action": 7, "resource": "xyOE2lm0"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateClientPermissionV3 \
    --clientId 'PxKxTF11' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 130 'AdminUpdateClientPermissionV3' test.out

#- 131 AdminAddClientPermissionsV3
# body param: body
echo '{"permissions": [{"action": 45, "resource": "5EvDd2xi"}, {"action": 92, "resource": "ViaH95FE"}, {"action": 81, "resource": "9iQkKZju"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddClientPermissionsV3 \
    --clientId 'Qy5xH76f' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 131 'AdminAddClientPermissionsV3' test.out

#- 132 AdminDeleteClientPermissionV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteClientPermissionV3 \
    --action '35' \
    --clientId 'Ew0Vqz4g' \
    --namespace $AB_NAMESPACE \
    --resource 'NyUKrNXH' \
    > test.out 2>&1
eval_tap $? 132 'AdminDeleteClientPermissionV3' test.out

#- 133 AdminGetConfigValueV3
$CLI_EXE \
    --sn iam \
    --op AdminGetConfigValueV3 \
    --configKey 'QEJ9Zri3' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 133 'AdminGetConfigValueV3' test.out

#- 134 AdminGetCountryListV3
$CLI_EXE \
    --sn iam \
    --op AdminGetCountryListV3 \
    --namespace $AB_NAMESPACE \
    --filterBlacklist 'false' \
    > test.out 2>&1
eval_tap $? 134 'AdminGetCountryListV3' test.out

#- 135 AdminGetCountryBlacklistV3
$CLI_EXE \
    --sn iam \
    --op AdminGetCountryBlacklistV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 135 'AdminGetCountryBlacklistV3' test.out

#- 136 AdminAddCountryBlacklistV3
# body param: body
echo '{"blacklist": ["oGyN9G7w", "7keckCgr", "VjXvGVnM"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddCountryBlacklistV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 136 'AdminAddCountryBlacklistV3' test.out

#- 137 RetrieveAllThirdPartyLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op RetrieveAllThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 137 'RetrieveAllThirdPartyLoginPlatformCredentialV3' test.out

#- 138 RetrieveAllActiveThirdPartyLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op RetrieveAllActiveThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 138 'RetrieveAllActiveThirdPartyLoginPlatformCredentialV3' test.out

#- 139 RetrieveAllSSOLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op RetrieveAllSSOLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --limit '73' \
    --offset '72' \
    > test.out 2>&1
eval_tap $? 139 'RetrieveAllSSOLoginPlatformCredentialV3' test.out

#- 140 RetrieveThirdPartyLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op RetrieveThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --platformId '7F5wwE0B' \
    > test.out 2>&1
eval_tap $? 140 'RetrieveThirdPartyLoginPlatformCredentialV3' test.out

#- 141 AddThirdPartyLoginPlatformCredentialV3
# body param: body
echo '{"ACSURL": "FSf9IE0M", "AWSCognitoRegion": "6wyYmcL8", "AWSCognitoUserPool": "aZiHNTb5", "AllowedClients": ["bJffWLAS", "ZqsXqFyI", "p1ZinbFh"], "AppId": "bT6MHGuP", "AuthorizationEndpoint": "bXX44LTd", "ClientId": "WtO4lSca", "EmptyStrFieldList": ["1VXhVH4c", "K5c0k9bE", "YjCHHcHM"], "EnableServerLicenseValidation": false, "Environment": "HHj9IJJm", "FederationMetadataURL": "OonkamMO", "GenericOauthFlow": false, "IncludePUID": true, "IsActive": false, "Issuer": "YRR1Gwuf", "JWKSEndpoint": "zwZJK1pv", "KeyID": "GCnbJQOk", "LogoURL": "lsFOqBV5", "NetflixCertificates": {"encryptedPrivateKey": "u045wjF1", "encryptedPrivateKeyName": "QbrYGrTr", "publicCertificate": "iyqtl9xr", "publicCertificateName": "pkCoI1Tl", "rootCertificate": "IwNuZFeZ", "rootCertificateName": "dpot1y1U"}, "OrganizationId": "n6GDo5QX", "PlatformName": "4aKu9mII", "RedirectUri": "xfklthU1", "RegisteredDomains": [{"affectedClientIDs": ["tEiq96Ev", "dHlY8rMU", "5bAKQdrl"], "domain": "SYKmh2Mp", "namespaces": ["tZHmNkdF", "EN5frUBe", "N5sBY3cq"], "roleId": "oVEv6OJ6"}, {"affectedClientIDs": ["G8bQ8iVo", "TOqhThjj", "pJZYIY2I"], "domain": "fqiW9QxL", "namespaces": ["HoURHLHI", "MGkXUIKM", "reLx2LEE"], "roleId": "B6OpRbwC"}, {"affectedClientIDs": ["4vm8uRBt", "f2SYJ17n", "UUh0abas"], "domain": "RzMmWzHl", "namespaces": ["YmnO3HBH", "trSlwWpw", "Q3e5Hcw0"], "roleId": "hfvlQ6fF"}], "Secret": "YGGnkyen", "TeamID": "oDVUN4ei", "TokenAuthenticationType": "tev4iPMo", "TokenClaimsMapping": {"Cv58m2yo": "bl4NLepD", "VrstxXw3": "27FOEOCr", "Donr5bjt": "KwOs5m4a"}, "TokenEndpoint": "CaJ7V8U5", "UserInfoEndpoint": "wQYVETf6", "UserInfoHTTPMethod": "iXVH4PDf", "scopes": ["EIxJCUZo", "EXKX30lx", "3nzfyM7H"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AddThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'cS2QcTLO' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 141 'AddThirdPartyLoginPlatformCredentialV3' test.out

#- 142 DeleteThirdPartyLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op DeleteThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'g6s2vkB7' \
    > test.out 2>&1
eval_tap $? 142 'DeleteThirdPartyLoginPlatformCredentialV3' test.out

#- 143 UpdateThirdPartyLoginPlatformCredentialV3
# body param: body
echo '{"ACSURL": "yX3gvxkA", "AWSCognitoRegion": "589b3Imx", "AWSCognitoUserPool": "Eq24OV7i", "AllowedClients": ["qr9TvaJM", "ROOLyqCh", "jsEh6ml7"], "AppId": "zvAV57GE", "AuthorizationEndpoint": "WO7o5zlJ", "ClientId": "69UTnxIZ", "EmptyStrFieldList": ["DdgO7QNb", "qvJVzrwe", "sy8LMGq7"], "EnableServerLicenseValidation": false, "Environment": "wOD8qoIy", "FederationMetadataURL": "deiPyC5e", "GenericOauthFlow": false, "IncludePUID": false, "IsActive": true, "Issuer": "8I6eLIuf", "JWKSEndpoint": "cHZhcUBm", "KeyID": "TMiduZq9", "LogoURL": "GQtJM6pD", "NetflixCertificates": {"encryptedPrivateKey": "hvB9DFcC", "encryptedPrivateKeyName": "QZFyoo2A", "publicCertificate": "TlXfOoZ9", "publicCertificateName": "7Tvwa6Hs", "rootCertificate": "BtLN7ezX", "rootCertificateName": "qjyq77jM"}, "OrganizationId": "IGquDIcD", "PlatformName": "yMCJG6vS", "RedirectUri": "IaIpWrcN", "RegisteredDomains": [{"affectedClientIDs": ["PDP2CKQ4", "gfXpWa6T", "1aoVMZVI"], "domain": "dMcepYbG", "namespaces": ["8H7RAgl7", "CoTiW677", "5TbUJPbT"], "roleId": "ckj6ODTO"}, {"affectedClientIDs": ["i2r5mUO5", "KWVe2ugN", "SDMKNjIM"], "domain": "yKbhWHdp", "namespaces": ["8NiEicKt", "LmtKbzex", "rRGFM60w"], "roleId": "cTJ7jCv7"}, {"affectedClientIDs": ["CwHxhPad", "CG2JUf3h", "UDHsp27v"], "domain": "0AyiYWKr", "namespaces": ["xnb6422i", "F6DmdZj3", "B3IqwCKB"], "roleId": "AIXnOwzw"}], "Secret": "tJVcINW8", "TeamID": "iRYB2UpV", "TokenAuthenticationType": "Bx7G0xxl", "TokenClaimsMapping": {"brGQUNSn": "IGzAmcDP", "ozeuIuSE": "KSTEZfZi", "okZyJOJN": "Ht0dhXYE"}, "TokenEndpoint": "BjziXPcu", "UserInfoEndpoint": "U4Zr2rUK", "UserInfoHTTPMethod": "PHx2WqiY", "scopes": ["zbOeYXNQ", "tnk04HXp", "0kyJc6Gg"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op UpdateThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'FuRwDnym' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 143 'UpdateThirdPartyLoginPlatformCredentialV3' test.out

#- 144 UpdateThirdPartyLoginPlatformDomainV3
# body param: body
echo '{"affectedClientIDs": ["VuRtlJFK", "T9M7AHz5", "m2VybWoP"], "assignedNamespaces": ["8NtJe7WT", "sWYLuR8R", "m7q7cI3T"], "domain": "sJcqyTeq", "roleId": "VW4MlgMQ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op UpdateThirdPartyLoginPlatformDomainV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'DvmZxozF' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 144 'UpdateThirdPartyLoginPlatformDomainV3' test.out

#- 145 DeleteThirdPartyLoginPlatformDomainV3
# body param: body
echo '{"domain": "K32qwAwW"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op DeleteThirdPartyLoginPlatformDomainV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'RklR4Hdd' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 145 'DeleteThirdPartyLoginPlatformDomainV3' test.out

#- 146 RetrieveSSOLoginPlatformCredential
$CLI_EXE \
    --sn iam \
    --op RetrieveSSOLoginPlatformCredential \
    --namespace $AB_NAMESPACE \
    --platformId 'XDasgUfT' \
    > test.out 2>&1
eval_tap $? 146 'RetrieveSSOLoginPlatformCredential' test.out

#- 147 AddSSOLoginPlatformCredential
# body param: body
echo '{"acsUrl": "IVisdkgQ", "apiKey": "hWKECEwx", "appId": "hp2RKby8", "federationMetadataUrl": "3AgVJ3jd", "isActive": false, "redirectUri": "0cplKDHw", "secret": "QGDIJADP", "ssoUrl": "QnuyWoRv"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AddSSOLoginPlatformCredential \
    --namespace $AB_NAMESPACE \
    --platformId '7fTU2vcQ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 147 'AddSSOLoginPlatformCredential' test.out

#- 148 DeleteSSOLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op DeleteSSOLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'fQg0pmwz' \
    > test.out 2>&1
eval_tap $? 148 'DeleteSSOLoginPlatformCredentialV3' test.out

#- 149 UpdateSSOPlatformCredential
# body param: body
echo '{"acsUrl": "BzrBZ7Ks", "apiKey": "cLYLGJWS", "appId": "ynxaB9Pd", "federationMetadataUrl": "9xbMjvyZ", "isActive": true, "redirectUri": "GVIF7uKQ", "secret": "DqXXQNLJ", "ssoUrl": "2doVA3uk"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op UpdateSSOPlatformCredential \
    --namespace $AB_NAMESPACE \
    --platformId 'u3Gg6ld9' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 149 'UpdateSSOPlatformCredential' test.out

#- 150 AdminListUserIDByPlatformUserIDsV3
# body param: body
echo '{"platformUserIds": ["0gHotUx9", "Abc2dXQe", "3GyAgJ27"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminListUserIDByPlatformUserIDsV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'ZsxM6hXS' \
    --rawPID 'false' \
    --rawPUID 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 150 'AdminListUserIDByPlatformUserIDsV3' test.out

#- 151 AdminGetUserByPlatformUserIDV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserByPlatformUserIDV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'vT3UQWfE' \
    --platformUserId 'SwP75S5g' \
    > test.out 2>&1
eval_tap $? 151 'AdminGetUserByPlatformUserIDV3' test.out

#- 152 AdminGetRoleOverrideConfigV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleOverrideConfigV3 \
    --namespace $AB_NAMESPACE \
    --identity 'VIEW_ONLY' \
    > test.out 2>&1
eval_tap $? 152 'AdminGetRoleOverrideConfigV3' test.out

#- 153 AdminUpdateRoleOverrideConfigV3
# body param: body
echo '{"additions": [{"actions": [9, 31, 67], "resource": "TI7Z6eYT"}, {"actions": [41, 98, 82], "resource": "t2m9Q2s9"}, {"actions": [62, 62, 85], "resource": "WWUWtMLV"}], "exclusions": [{"actions": [62, 76, 7], "resource": "DKpDMIwR"}, {"actions": [38, 51, 16], "resource": "M6IXwNLT"}, {"actions": [79, 52, 89], "resource": "P8bBC2hF"}], "overrides": [{"actions": [53, 40, 17], "resource": "A6wb6Q8w"}, {"actions": [53, 23, 71], "resource": "RGHCR1nT"}, {"actions": [66, 56, 56], "resource": "RJilKkjv"}], "replacements": [{"replacement": {"actions": [43, 55, 7], "resource": "SRixPlHC"}, "target": "I7chbYIC"}, {"replacement": {"actions": [80, 22, 25], "resource": "XSdr0I46"}, "target": "qZvjlyKh"}, {"replacement": {"actions": [71, 89, 72], "resource": "h9c9b1y8"}, "target": "HuaCJa0w"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateRoleOverrideConfigV3 \
    --namespace $AB_NAMESPACE \
    --identity 'GAME_ADMIN' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 153 'AdminUpdateRoleOverrideConfigV3' test.out

#- 154 AdminGetRoleSourceV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleSourceV3 \
    --namespace $AB_NAMESPACE \
    --identity 'GAME_ADMIN' \
    > test.out 2>&1
eval_tap $? 154 'AdminGetRoleSourceV3' test.out

#- 155 AdminChangeRoleOverrideConfigStatusV3
# body param: body
echo '{"active": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminChangeRoleOverrideConfigStatusV3 \
    --namespace $AB_NAMESPACE \
    --identity 'VIEW_ONLY' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 155 'AdminChangeRoleOverrideConfigStatusV3' test.out

#- 156 AdminGetRoleNamespacePermissionV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleNamespacePermissionV3 \
    --namespace $AB_NAMESPACE \
    --roleId 'FyCg7dUZ' \
    > test.out 2>&1
eval_tap $? 156 'AdminGetRoleNamespacePermissionV3' test.out

#- 157 GetAdminUsersByRoleIdV3
$CLI_EXE \
    --sn iam \
    --op GetAdminUsersByRoleIdV3 \
    --namespace $AB_NAMESPACE \
    --roleId 'BPa0J7w7' \
    --after '100' \
    --before '51' \
    --limit '42' \
    > test.out 2>&1
eval_tap $? 157 'GetAdminUsersByRoleIdV3' test.out

#- 158 AdminGetUserByEmailAddressV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserByEmailAddressV3 \
    --namespace $AB_NAMESPACE \
    --emailAddress 'wcerFHQ5' \
    > test.out 2>&1
eval_tap $? 158 'AdminGetUserByEmailAddressV3' test.out

#- 159 AdminBulkUpdateUsersV3
# body param: body
echo '{"updateRequest": {"skipLoginQueue": false}, "userIds": ["lTSICJls", "SLYGD8Dt", "i4kCFltP"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBulkUpdateUsersV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 159 'AdminBulkUpdateUsersV3' test.out

#- 160 AdminGetBulkUserBanV3
# body param: body
echo '{"bulkUserId": ["lriTGSeg", "wfYoqwfC", "VfEgTkLF"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminGetBulkUserBanV3 \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --banType 'XJKbfADT' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 160 'AdminGetBulkUserBanV3' test.out

#- 161 AdminListUserIDByUserIDsV3
# body param: body
echo '{"userIds": ["3hmJfWYB", "wo4QxpHv", "sGZPJehM"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminListUserIDByUserIDsV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 161 'AdminListUserIDByUserIDsV3' test.out

#- 162 AdminBulkGetUsersPlatform
# body param: body
echo '{"userIds": ["80lh4iiA", "rBFSNCGm", "G22Y9n4W"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBulkGetUsersPlatform \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 162 'AdminBulkGetUsersPlatform' test.out

#- 163 AdminInviteUserV3
# body param: body
echo '{"emailAddresses": ["QD07WfQP", "CYmbbeaR", "ZlvMDEgx"], "isAdmin": false, "languageTag": "KWxS6jVI", "namespace": "bxcZO4hE", "roles": ["kYrC6ppX", "cHaxl89Y", "wLtgaxXs"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminInviteUserV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 163 'AdminInviteUserV3' test.out

#- 164 AdminQueryThirdPlatformLinkHistoryV3
$CLI_EXE \
    --sn iam \
    --op AdminQueryThirdPlatformLinkHistoryV3 \
    --namespace $AB_NAMESPACE \
    --limit '67' \
    --offset '53' \
    --platformUserId '7IG1N4Cn' \
    --platformId 'DJzMBR6T' \
    > test.out 2>&1
eval_tap $? 164 'AdminQueryThirdPlatformLinkHistoryV3' test.out

#- 165 AdminListUsersV3
$CLI_EXE \
    --sn iam \
    --op AdminListUsersV3 \
    --namespace $AB_NAMESPACE \
    --limit '49' \
    --offset '87' \
    > test.out 2>&1
eval_tap $? 165 'AdminListUsersV3' test.out

#- 166 AdminSearchUserV3
$CLI_EXE \
    --sn iam \
    --op AdminSearchUserV3 \
    --namespace $AB_NAMESPACE \
    --by '1IO5UFlN' \
    --endDate 'MIYu2G27' \
    --includeTotal 'false' \
    --limit '47' \
    --offset '22' \
    --platformBy 'xLOIawsc' \
    --platformId 'EIZdPPVf' \
    --query 'PwLMdRRp' \
    --roleIds 'fralCdnl' \
    --skipLoginQueue 'false' \
    --startDate 'EIi73txt' \
    --testAccount 'false' \
    > test.out 2>&1
eval_tap $? 166 'AdminSearchUserV3' test.out

#- 167 AdminGetBulkUserByEmailAddressV3
# body param: body
echo '{"listEmailAddressRequest": ["1cUtADNU", "RyLL7Lbp", "ekvuXzKl"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminGetBulkUserByEmailAddressV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 167 'AdminGetBulkUserByEmailAddressV3' test.out

#- 168 AdminGetUserByUserIdV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserByUserIdV3 \
    --namespace $AB_NAMESPACE \
    --userId 'LxGVhbJt' \
    > test.out 2>&1
eval_tap $? 168 'AdminGetUserByUserIdV3' test.out

#- 169 AdminUpdateUserV3
# body param: body
echo '{"avatarUrl": "C7SosFEz", "country": "MRglmuiK", "dateOfBirth": "HjmJiW4k", "displayName": "cWNLKcEp", "languageTag": "CCYa46qp", "skipLoginQueue": false, "uniqueDisplayName": "T7Jb0PIU", "userName": "A8FCEckM"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserV3 \
    --namespace $AB_NAMESPACE \
    --userId 'ASBpxZJG' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 169 'AdminUpdateUserV3' test.out

#- 170 AdminGetUserBanV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserBanV3 \
    --namespace $AB_NAMESPACE \
    --userId 'HIRlLfPY' \
    --activeOnly 'true' \
    --after 'byheea3W' \
    --before 'buk3r5Yh' \
    --limit '78' \
    > test.out 2>&1
eval_tap $? 170 'AdminGetUserBanV3' test.out

#- 171 AdminBanUserV3
# body param: body
echo '{"ban": "iQKWzDkM", "comment": "vCI9k15e", "endDate": "Laq6xBos", "reason": "bbl9iNOR", "skipNotif": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBanUserV3 \
    --namespace $AB_NAMESPACE \
    --userId 'ycP5B5Io' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 171 'AdminBanUserV3' test.out

#- 172 AdminGetUserBanSummaryV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserBanSummaryV3 \
    --namespace $AB_NAMESPACE \
    --userId '07mgryww' \
    > test.out 2>&1
eval_tap $? 172 'AdminGetUserBanSummaryV3' test.out

#- 173 AdminUpdateUserBanV3
# body param: body
echo '{"enabled": true, "skipNotif": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserBanV3 \
    --banId 'L34RhN7x' \
    --namespace $AB_NAMESPACE \
    --userId 'jZUSEIQb' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 173 'AdminUpdateUserBanV3' test.out

#- 174 AdminSendVerificationCodeV3
# body param: body
echo '{"context": "Z5YHQDbE", "emailAddress": "XEymzNUe", "languageTag": "rOoxugSh"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminSendVerificationCodeV3 \
    --namespace $AB_NAMESPACE \
    --userId 'zeha51wp' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 174 'AdminSendVerificationCodeV3' test.out

#- 175 AdminVerifyAccountV3
# body param: body
echo '{"Code": "o91t48Md", "ContactType": "JiBrgk0y", "LanguageTag": "YI4zVwwQ", "validateOnly": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminVerifyAccountV3 \
    --namespace $AB_NAMESPACE \
    --userId 'clbrTiIH' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 175 'AdminVerifyAccountV3' test.out

#- 176 GetUserVerificationCode
$CLI_EXE \
    --sn iam \
    --op GetUserVerificationCode \
    --namespace $AB_NAMESPACE \
    --userId 'pYjk9WIT' \
    > test.out 2>&1
eval_tap $? 176 'GetUserVerificationCode' test.out

#- 177 AdminGetUserDeletionStatusV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserDeletionStatusV3 \
    --namespace $AB_NAMESPACE \
    --userId 'GKHqGIS5' \
    > test.out 2>&1
eval_tap $? 177 'AdminGetUserDeletionStatusV3' test.out

#- 178 AdminUpdateUserDeletionStatusV3
# body param: body
echo '{"deletionDate": 33, "enabled": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserDeletionStatusV3 \
    --namespace $AB_NAMESPACE \
    --userId 'fNSvAG7U' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 178 'AdminUpdateUserDeletionStatusV3' test.out

#- 179 AdminListUserAllPlatformAccountsDistinctV3
$CLI_EXE \
    --sn iam \
    --op AdminListUserAllPlatformAccountsDistinctV3 \
    --namespace $AB_NAMESPACE \
    --userId 'LMMG4mJy' \
    > test.out 2>&1
eval_tap $? 179 'AdminListUserAllPlatformAccountsDistinctV3' test.out

#- 180 AdminUpgradeHeadlessAccountV3
# body param: body
echo '{"code": "kymV84cj", "country": "UPTbTmhM", "dateOfBirth": "aGNi6WNt", "displayName": "ZqFYb3OL", "emailAddress": "USvh6qKi", "password": "NJ5zHvlf", "uniqueDisplayName": "p3uo6s0C", "validateOnly": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpgradeHeadlessAccountV3 \
    --namespace $AB_NAMESPACE \
    --userId '4T2SLSZp' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 180 'AdminUpgradeHeadlessAccountV3' test.out

#- 181 AdminDeleteUserInformationV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserInformationV3 \
    --namespace $AB_NAMESPACE \
    --userId 'TISmE9MP' \
    > test.out 2>&1
eval_tap $? 181 'AdminDeleteUserInformationV3' test.out

#- 182 AdminGetUserLoginHistoriesV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserLoginHistoriesV3 \
    --namespace $AB_NAMESPACE \
    --userId 'tOOzJowS' \
    --after '0.33173802999432445' \
    --before '0.28351043590995006' \
    --limit '72' \
    > test.out 2>&1
eval_tap $? 182 'AdminGetUserLoginHistoriesV3' test.out

#- 183 AdminResetPasswordV3
# body param: body
echo '{"languageTag": "5uIsMCVt", "mfaToken": "yaulfzNt", "newPassword": "yOuBgm70", "oldPassword": "qd8GEmxL"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminResetPasswordV3 \
    --namespace $AB_NAMESPACE \
    --userId 'JEudEb0W' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 183 'AdminResetPasswordV3' test.out

#- 184 AdminUpdateUserPermissionV3
# body param: body
echo '{"Permissions": [{"Action": 6, "Resource": "exh7QnAA", "SchedAction": 3, "SchedCron": "fnk2Rf6v", "SchedRange": ["NzRhdmC0", "ZRhoU4um", "UluHpaPQ"]}, {"Action": 38, "Resource": "1wqi758G", "SchedAction": 96, "SchedCron": "d68Ma5Ry", "SchedRange": ["eXxTfXY4", "e1J6tNdG", "UhrPeF7V"]}, {"Action": 77, "Resource": "5KnqE5pC", "SchedAction": 28, "SchedCron": "jIk1dP3T", "SchedRange": ["3XhyEUmU", "KXaRSKgd", "cVGY6lY8"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserPermissionV3 \
    --namespace $AB_NAMESPACE \
    --userId 'QRzVTUyY' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 184 'AdminUpdateUserPermissionV3' test.out

#- 185 AdminAddUserPermissionsV3
# body param: body
echo '{"Permissions": [{"Action": 41, "Resource": "LJq7rRYQ", "SchedAction": 67, "SchedCron": "PhY8dhSJ", "SchedRange": ["m9g5I1JX", "jmtnhi8e", "HUptNhO9"]}, {"Action": 80, "Resource": "WpGXYF01", "SchedAction": 70, "SchedCron": "KjTsi229", "SchedRange": ["PIO2K2kQ", "Edw6YocE", "J3jBsRMP"]}, {"Action": 26, "Resource": "0D0GHxW5", "SchedAction": 53, "SchedCron": "VCuFtONh", "SchedRange": ["aQImClDJ", "I9YqVNvO", "RdwWVjnf"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddUserPermissionsV3 \
    --namespace $AB_NAMESPACE \
    --userId '0x5ImYCV' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 185 'AdminAddUserPermissionsV3' test.out

#- 186 AdminDeleteUserPermissionBulkV3
# body param: body
echo '[{"Action": 37, "Resource": "vijmpAZQ"}, {"Action": 53, "Resource": "vYfrYlsk"}, {"Action": 7, "Resource": "muhacW9y"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserPermissionBulkV3 \
    --namespace $AB_NAMESPACE \
    --userId 'd94dcxNA' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 186 'AdminDeleteUserPermissionBulkV3' test.out

#- 187 AdminDeleteUserPermissionV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserPermissionV3 \
    --action '27' \
    --namespace $AB_NAMESPACE \
    --resource 'NaiRf1om' \
    --userId 'fbTDEauR' \
    > test.out 2>&1
eval_tap $? 187 'AdminDeleteUserPermissionV3' test.out

#- 188 AdminGetUserPlatformAccountsV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserPlatformAccountsV3 \
    --namespace $AB_NAMESPACE \
    --userId 'fyBhOKKH' \
    --after '8VcCJb6e' \
    --before 'mI96JOi2' \
    --limit '95' \
    --platformId 'qMCadLZi' \
    --targetNamespace 'qZeITqhi' \
    > test.out 2>&1
eval_tap $? 188 'AdminGetUserPlatformAccountsV3' test.out

#- 189 AdminListAllDistinctPlatformAccountsV3
$CLI_EXE \
    --sn iam \
    --op AdminListAllDistinctPlatformAccountsV3 \
    --namespace $AB_NAMESPACE \
    --userId '2mzIbpGr' \
    --status 'gWgds6Zn' \
    > test.out 2>&1
eval_tap $? 189 'AdminListAllDistinctPlatformAccountsV3' test.out

#- 190 AdminGetListJusticePlatformAccounts
$CLI_EXE \
    --sn iam \
    --op AdminGetListJusticePlatformAccounts \
    --namespace $AB_NAMESPACE \
    --userId 'Lrctx8PO' \
    > test.out 2>&1
eval_tap $? 190 'AdminGetListJusticePlatformAccounts' test.out

#- 191 AdminGetUserMapping
$CLI_EXE \
    --sn iam \
    --op AdminGetUserMapping \
    --namespace $AB_NAMESPACE \
    --targetNamespace 'AGEG5jXl' \
    --userId 'h9iSnsAM' \
    > test.out 2>&1
eval_tap $? 191 'AdminGetUserMapping' test.out

#- 192 AdminCreateJusticeUser
$CLI_EXE \
    --sn iam \
    --op AdminCreateJusticeUser \
    --namespace $AB_NAMESPACE \
    --targetNamespace 'Ch6ucOLT' \
    --userId '0SBLP9mW' \
    > test.out 2>&1
eval_tap $? 192 'AdminCreateJusticeUser' test.out

#- 193 AdminLinkPlatformAccount
# body param: body
echo '{"platformId": "j9dmHavt", "platformUserId": "L6LExewp"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminLinkPlatformAccount \
    --namespace $AB_NAMESPACE \
    --userId 'qAJ3kgoB' \
    --skipConflict 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 193 'AdminLinkPlatformAccount' test.out

#- 194 AdminGetUserLinkHistoriesV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserLinkHistoriesV3 \
    --namespace $AB_NAMESPACE \
    --userId 'j9kE4g6d' \
    --platformId 'cYnxMhex' \
    > test.out 2>&1
eval_tap $? 194 'AdminGetUserLinkHistoriesV3' test.out

#- 195 AdminPlatformUnlinkV3
eval_tap 0 195 'AdminPlatformUnlinkV3 # SKIP deprecated' test.out

#- 196 AdminPlatformUnlinkAllV3
$CLI_EXE \
    --sn iam \
    --op AdminPlatformUnlinkAllV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'nZUoHWvY' \
    --userId 'v7bJOJUi' \
    > test.out 2>&1
eval_tap $? 196 'AdminPlatformUnlinkAllV3' test.out

#- 197 AdminPlatformLinkV3
$CLI_EXE \
    --sn iam \
    --op AdminPlatformLinkV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'jC4VEjs5' \
    --userId 'etaFg8g3' \
    --ticket 'DohqimKW' \
    > test.out 2>&1
eval_tap $? 197 'AdminPlatformLinkV3' test.out

#- 198 AdminDeleteUserLinkingHistoryByPlatformIDV3
eval_tap 0 198 'AdminDeleteUserLinkingHistoryByPlatformIDV3 # SKIP deprecated' test.out

#- 199 AdminDeleteUserLinkingRestrictionByPlatformIDV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserLinkingRestrictionByPlatformIDV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'U99vddYM' \
    --userId 'EM3BGZsL' \
    > test.out 2>&1
eval_tap $? 199 'AdminDeleteUserLinkingRestrictionByPlatformIDV3' test.out

#- 200 AdminGetThirdPartyPlatformTokenLinkStatusV3
$CLI_EXE \
    --sn iam \
    --op AdminGetThirdPartyPlatformTokenLinkStatusV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'eAKRhdUi' \
    --userId 'CWqp6umq' \
    --platformToken 'jnDGS64Y' \
    > test.out 2>&1
eval_tap $? 200 'AdminGetThirdPartyPlatformTokenLinkStatusV3' test.out

#- 201 AdminGetUserSinglePlatformAccount
$CLI_EXE \
    --sn iam \
    --op AdminGetUserSinglePlatformAccount \
    --namespace $AB_NAMESPACE \
    --platformId '2S6Zpv7r' \
    --userId 'foQMJTkJ' \
    --crossNamespace 'true' \
    > test.out 2>&1
eval_tap $? 201 'AdminGetUserSinglePlatformAccount' test.out

#- 202 AdminDeleteUserRolesV3
# body param: body
echo '["KJaWVY6w", "s2dKJyTg", "6tV0fmrP"]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserRolesV3 \
    --namespace $AB_NAMESPACE \
    --userId 'hhWkNMe8' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 202 'AdminDeleteUserRolesV3' test.out

#- 203 AdminSaveUserRoleV3
# body param: body
echo '[{"namespace": "DVgBa8E7", "roleId": "vGk0sI3X"}, {"namespace": "Sd9GSGMs", "roleId": "XP80sXnZ"}, {"namespace": "1dzyBjbb", "roleId": "RgEhzlXa"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminSaveUserRoleV3 \
    --namespace $AB_NAMESPACE \
    --userId 'jgqFyBZi' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 203 'AdminSaveUserRoleV3' test.out

#- 204 AdminAddUserRoleV3
$CLI_EXE \
    --sn iam \
    --op AdminAddUserRoleV3 \
    --namespace $AB_NAMESPACE \
    --roleId 'XZa3Atvc' \
    --userId 'qfGuyjgT' \
    > test.out 2>&1
eval_tap $? 204 'AdminAddUserRoleV3' test.out

#- 205 AdminDeleteUserRoleV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserRoleV3 \
    --namespace $AB_NAMESPACE \
    --roleId 'Hvt7Essb' \
    --userId '99IwLhep' \
    > test.out 2>&1
eval_tap $? 205 'AdminDeleteUserRoleV3' test.out

#- 206 AdminUpdateUserStatusV3
# body param: body
echo '{"enabled": true, "reason": "9hDt7E4a"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserStatusV3 \
    --namespace $AB_NAMESPACE \
    --userId '0jOaefYs' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 206 'AdminUpdateUserStatusV3' test.out

#- 207 AdminTrustlyUpdateUserIdentity
# body param: body
echo '{"emailAddress": "eb5GGKNo", "password": "k2D2sdxy"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminTrustlyUpdateUserIdentity \
    --namespace $AB_NAMESPACE \
    --userId 'mab9KJbu' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 207 'AdminTrustlyUpdateUserIdentity' test.out

#- 208 AdminVerifyUserWithoutVerificationCodeV3
$CLI_EXE \
    --sn iam \
    --op AdminVerifyUserWithoutVerificationCodeV3 \
    --namespace $AB_NAMESPACE \
    --userId 'cardTHHl' \
    > test.out 2>&1
eval_tap $? 208 'AdminVerifyUserWithoutVerificationCodeV3' test.out

#- 209 AdminUpdateClientSecretV3
# body param: body
echo '{"newSecret": "xMH6hqVZ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateClientSecretV3 \
    --clientId 'Y0QtbaQr' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 209 'AdminUpdateClientSecretV3' test.out

#- 210 AdminCheckThirdPartyLoginPlatformAvailabilityV3
$CLI_EXE \
    --sn iam \
    --op AdminCheckThirdPartyLoginPlatformAvailabilityV3 \
    --platformId 'Hr12EfqO' \
    > test.out 2>&1
eval_tap $? 210 'AdminCheckThirdPartyLoginPlatformAvailabilityV3' test.out

#- 211 AdminGetRolesV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRolesV3 \
    --after 'djP6GaPf' \
    --before 'Kww2NKSz' \
    --isWildcard 'true' \
    --limit '41' \
    > test.out 2>&1
eval_tap $? 211 'AdminGetRolesV3' test.out

#- 212 AdminCreateRoleV3
# body param: body
echo '{"adminRole": true, "deletable": false, "isWildcard": false, "managers": [{"displayName": "x0EMW9gB", "namespace": "r1CT5Due", "userId": "pnujUe6W"}, {"displayName": "ul5vVHyT", "namespace": "jKTCTRnf", "userId": "mBcVSrhc"}, {"displayName": "NWJTfei9", "namespace": "RCXLZgR5", "userId": "epecOCVY"}], "members": [{"displayName": "EzTLQVAb", "namespace": "PmB3CFPc", "userId": "KukH82th"}, {"displayName": "evVzLn0K", "namespace": "WoLJ4yfx", "userId": "Tuy1P75d"}, {"displayName": "WGi80VEL", "namespace": "CiHJpGyZ", "userId": "OcjspZjI"}], "permissions": [{"action": 26, "resource": "rtusUEGL", "schedAction": 6, "schedCron": "3apYe7pJ", "schedRange": ["YPZ82Bo3", "HWIW9W5F", "Wdgy9AiN"]}, {"action": 52, "resource": "WalEXrHi", "schedAction": 25, "schedCron": "HDwi9zbS", "schedRange": ["9w1Tm6QJ", "dczwU3nH", "zcUNdmC6"]}, {"action": 51, "resource": "cgDPJpeh", "schedAction": 41, "schedCron": "y1LW9gcJ", "schedRange": ["DKgQAJ6R", "T8rwBlot", "vmczyFca"]}], "roleName": "AEMoykuw"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminCreateRoleV3 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 212 'AdminCreateRoleV3' test.out

#- 213 AdminGetRoleV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleV3 \
    --roleId 'enzfnoVg' \
    > test.out 2>&1
eval_tap $? 213 'AdminGetRoleV3' test.out

#- 214 AdminDeleteRoleV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteRoleV3 \
    --roleId 'w1pfiMGC' \
    > test.out 2>&1
eval_tap $? 214 'AdminDeleteRoleV3' test.out

#- 215 AdminUpdateRoleV3
# body param: body
echo '{"deletable": true, "isWildcard": true, "roleName": "abbX1u65"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateRoleV3 \
    --roleId 'yccquVBw' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 215 'AdminUpdateRoleV3' test.out

#- 216 AdminGetRoleAdminStatusV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleAdminStatusV3 \
    --roleId 'hMKCwyBv' \
    > test.out 2>&1
eval_tap $? 216 'AdminGetRoleAdminStatusV3' test.out

#- 217 AdminUpdateAdminRoleStatusV3
$CLI_EXE \
    --sn iam \
    --op AdminUpdateAdminRoleStatusV3 \
    --roleId 'LAXQIaaU' \
    > test.out 2>&1
eval_tap $? 217 'AdminUpdateAdminRoleStatusV3' test.out

#- 218 AdminRemoveRoleAdminV3
$CLI_EXE \
    --sn iam \
    --op AdminRemoveRoleAdminV3 \
    --roleId 'L4h0JYLL' \
    > test.out 2>&1
eval_tap $? 218 'AdminRemoveRoleAdminV3' test.out

#- 219 AdminGetRoleManagersV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleManagersV3 \
    --roleId 'gnzjoE2i' \
    --after 'XjFHu4tL' \
    --before '4WhVZAAP' \
    --limit '89' \
    > test.out 2>&1
eval_tap $? 219 'AdminGetRoleManagersV3' test.out

#- 220 AdminAddRoleManagersV3
# body param: body
echo '{"managers": [{"displayName": "hsF0T5kA", "namespace": "8NdYdTiK", "userId": "S6JerqGN"}, {"displayName": "gLCuut6e", "namespace": "bu0GVAaT", "userId": "14YPyzky"}, {"displayName": "qhJxePBf", "namespace": "VGXtAC6F", "userId": "PAJqEdSh"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddRoleManagersV3 \
    --roleId 'QjG48D5M' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 220 'AdminAddRoleManagersV3' test.out

#- 221 AdminRemoveRoleManagersV3
# body param: body
echo '{"managers": [{"displayName": "1dI8rMc8", "namespace": "kKyRS6ta", "userId": "8VBltcrf"}, {"displayName": "YAtuPMOv", "namespace": "QV3fzgjH", "userId": "LODSg92h"}, {"displayName": "UiOewtS8", "namespace": "4hCKMbaD", "userId": "KbCMSOsQ"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminRemoveRoleManagersV3 \
    --roleId 'uCBOcH5X' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 221 'AdminRemoveRoleManagersV3' test.out

#- 222 AdminGetRoleMembersV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleMembersV3 \
    --roleId 'M2wXEjeh' \
    --after 'wN3Pg4XB' \
    --before 'HRCIh3oO' \
    --limit '20' \
    > test.out 2>&1
eval_tap $? 222 'AdminGetRoleMembersV3' test.out

#- 223 AdminAddRoleMembersV3
# body param: body
echo '{"members": [{"displayName": "uYiQiRvP", "namespace": "NGmElzLT", "userId": "LfzWSgsn"}, {"displayName": "UT7hV3nN", "namespace": "BtGD1YNK", "userId": "1TPcO3RK"}, {"displayName": "ST21O5z7", "namespace": "WazWWPmR", "userId": "2LQrSMe8"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddRoleMembersV3 \
    --roleId '5TyVDSLr' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 223 'AdminAddRoleMembersV3' test.out

#- 224 AdminRemoveRoleMembersV3
eval_tap 0 224 'AdminRemoveRoleMembersV3 # SKIP deprecated' test.out

#- 225 AdminUpdateRolePermissionsV3
# body param: body
echo '{"permissions": [{"action": 24, "resource": "2Id75WpF", "schedAction": 96, "schedCron": "CFzuuaRx", "schedRange": ["DUW71f2j", "h4OA40QT", "81ORHnIZ"]}, {"action": 66, "resource": "tW0EoTDp", "schedAction": 15, "schedCron": "dqDDOYVC", "schedRange": ["ZGOSjxdp", "fxM9iJx0", "s65Xx566"]}, {"action": 44, "resource": "4xmop41N", "schedAction": 70, "schedCron": "MDvnFxpx", "schedRange": ["t0C1Levy", "iQy1z1Uf", "PMocX7JU"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateRolePermissionsV3 \
    --roleId 'XlYsDOeN' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 225 'AdminUpdateRolePermissionsV3' test.out

#- 226 AdminAddRolePermissionsV3
# body param: body
echo '{"permissions": [{"action": 3, "resource": "ukevT8bl", "schedAction": 98, "schedCron": "5YsU8gCD", "schedRange": ["XfxjDepx", "RzKWDP1c", "QVSpPE0a"]}, {"action": 98, "resource": "6RVIyaOt", "schedAction": 47, "schedCron": "AzNF29WH", "schedRange": ["P0Xgbs84", "jFAOehtB", "4pU1pPwI"]}, {"action": 74, "resource": "9yzTsJzD", "schedAction": 16, "schedCron": "6Ds9I8FV", "schedRange": ["NTGgqgJi", "0A9EWCrk", "fy48UswN"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddRolePermissionsV3 \
    --roleId 'O63I0QhM' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 226 'AdminAddRolePermissionsV3' test.out

#- 227 AdminDeleteRolePermissionsV3
# body param: body
echo '["quf7ZvPj", "LADCKYJ6", "IeTZn1yj"]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDeleteRolePermissionsV3 \
    --roleId 'dljCgALU' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 227 'AdminDeleteRolePermissionsV3' test.out

#- 228 AdminDeleteRolePermissionV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteRolePermissionV3 \
    --action '94' \
    --resource 'Hih9qcMz' \
    --roleId 'ELaq4slM' \
    > test.out 2>&1
eval_tap $? 228 'AdminDeleteRolePermissionV3' test.out

#- 229 AdminGetMyUserV3
$CLI_EXE \
    --sn iam \
    --op AdminGetMyUserV3 \
    > test.out 2>&1
eval_tap $? 229 'AdminGetMyUserV3' test.out

#- 230 UserAuthenticationV3
$CLI_EXE \
    --sn iam \
    --op UserAuthenticationV3 \
    --client_id 'xleNP1Yu' \
    --extend_exp 'true' \
    --redirect_uri 'cymUm7LC' \
    --password '0tQIxp1n' \
    --request_id 'p7HbZDRL' \
    --user_name 'b1owcR5s' \
    > test.out 2>&1
eval_tap $? 230 'UserAuthenticationV3' test.out

#- 231 AuthenticationWithPlatformLinkV3
$CLI_EXE \
    --sn iam \
    --op AuthenticationWithPlatformLinkV3 \
    --extend_exp 'false' \
    --client_id '2kwc6trU' \
    --linkingToken 'mvYqlvNL' \
    --password '3cM7hQUY' \
    --username 'gG2jdlyx' \
    > test.out 2>&1
eval_tap $? 231 'AuthenticationWithPlatformLinkV3' test.out

#- 232 GenerateTokenByNewHeadlessAccountV3
$CLI_EXE \
    --sn iam \
    --op GenerateTokenByNewHeadlessAccountV3 \
    --additionalData 'YN5oHllw' \
    --extend_exp 'false' \
    --linkingToken 'vAWq1rmZ' \
    > test.out 2>&1
eval_tap $? 232 'GenerateTokenByNewHeadlessAccountV3' test.out

#- 233 RequestOneTimeLinkingCodeV3
$CLI_EXE \
    --sn iam \
    --op RequestOneTimeLinkingCodeV3 \
    --platformId 'mfw6SB2I' \
    > test.out 2>&1
eval_tap $? 233 'RequestOneTimeLinkingCodeV3' test.out

#- 234 ValidateOneTimeLinkingCodeV3
$CLI_EXE \
    --sn iam \
    --op ValidateOneTimeLinkingCodeV3 \
    --oneTimeLinkCode 'qAQeJntm' \
    > test.out 2>&1
eval_tap $? 234 'ValidateOneTimeLinkingCodeV3' test.out

#- 235 RequestTokenByOneTimeLinkCodeResponseV3
$CLI_EXE \
    --sn iam \
    --op RequestTokenByOneTimeLinkCodeResponseV3 \
    --additionalData '2iX3tASb' \
    --isTransient 'true' \
    --client_id 'BzpkpOv9' \
    --oneTimeLinkCode 'b2ukEMiZ' \
    > test.out 2>&1
eval_tap $? 235 'RequestTokenByOneTimeLinkCodeResponseV3' test.out

#- 236 GetCountryLocationV3
$CLI_EXE \
    --sn iam \
    --op GetCountryLocationV3 \
    > test.out 2>&1
eval_tap $? 236 'GetCountryLocationV3' test.out

#- 237 Logout
$CLI_EXE \
    --sn iam \
    --op Logout \
    > test.out 2>&1
eval_tap $? 237 'Logout' test.out

#- 238 RequestTokenExchangeCodeV3
$CLI_EXE \
    --sn iam \
    --op RequestTokenExchangeCodeV3 \
    --namespace $AB_NAMESPACE \
    --codeChallenge 'oQEMW1YQ' \
    --codeChallengeMethod 'plain' \
    --client_id 'HBP8c6UY' \
    > test.out 2>&1
eval_tap $? 238 'RequestTokenExchangeCodeV3' test.out

#- 239 AdminRetrieveUserThirdPartyPlatformTokenV3
$CLI_EXE \
    --sn iam \
    --op AdminRetrieveUserThirdPartyPlatformTokenV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'thZenJRP' \
    --userId 'neiAUEHT' \
    --platformUserId '5ZM64f9w' \
    > test.out 2>&1
eval_tap $? 239 'AdminRetrieveUserThirdPartyPlatformTokenV3' test.out

#- 240 RevokeUserV3
$CLI_EXE \
    --sn iam \
    --op RevokeUserV3 \
    --namespace $AB_NAMESPACE \
    --userId '8BjDZZda' \
    --includeGameNamespace 'true' \
    > test.out 2>&1
eval_tap $? 240 'RevokeUserV3' test.out

#- 241 AuthorizeV3
$CLI_EXE \
    --sn iam \
    --op AuthorizeV3 \
    --codeChallenge 'VlPQMVxs' \
    --codeChallengeMethod 'S256' \
    --createHeadless 'false' \
    --oneTimeLinkCode '6jzLGbZN' \
    --redirectUri 'R14WOvK4' \
    --scope 'tRqdpxKK' \
    --state 'PXc9H68K' \
    --targetAuthPage 'twGebRel' \
    --useRedirectUriAsLoginUrlWhenLocked 'true' \
    --clientId 'D07wVUEe' \
    --responseType 'code' \
    > test.out 2>&1
eval_tap $? 241 'AuthorizeV3' test.out

#- 242 TokenIntrospectionV3
$CLI_EXE \
    --sn iam \
    --op TokenIntrospectionV3 \
    --token 'p98Ys46C' \
    > test.out 2>&1
eval_tap $? 242 'TokenIntrospectionV3' test.out

#- 243 GetJWKSV3
$CLI_EXE \
    --sn iam \
    --op GetJWKSV3 \
    > test.out 2>&1
eval_tap $? 243 'GetJWKSV3' test.out

#- 244 SendMFAAuthenticationCode
$CLI_EXE \
    --sn iam \
    --op SendMFAAuthenticationCode \
    --clientId 'oKCvN5xz' \
    --factor '1EWvCRG6' \
    --mfaToken 'pnoIZe3a' \
    > test.out 2>&1
eval_tap $? 244 'SendMFAAuthenticationCode' test.out

#- 245 Change2faMethod
$CLI_EXE \
    --sn iam \
    --op Change2faMethod \
    --factor 'upp7VsEt' \
    --mfaToken '7OkXeqTQ' \
    > test.out 2>&1
eval_tap $? 245 'Change2faMethod' test.out

#- 246 Verify2faCode
$CLI_EXE \
    --sn iam \
    --op Verify2faCode \
    --code 'AZdpe2zQ' \
    --factor '7GfFNxbM' \
    --mfaToken 'dCQ4kGrg' \
    --rememberDevice 'false' \
    > test.out 2>&1
eval_tap $? 246 'Verify2faCode' test.out

#- 247 RetrieveUserThirdPartyPlatformTokenV3
$CLI_EXE \
    --sn iam \
    --op RetrieveUserThirdPartyPlatformTokenV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'IRXqcjPM' \
    --userId 'uX70u73m' \
    > test.out 2>&1
eval_tap $? 247 'RetrieveUserThirdPartyPlatformTokenV3' test.out

#- 248 AuthCodeRequestV3
$CLI_EXE \
    --sn iam \
    --op AuthCodeRequestV3 \
    --platformId 'bHzOfIAE' \
    --clientId 'Bk76v00b' \
    --redirectUri 'SF8ODhl1' \
    --requestId 'juHqpAta' \
    > test.out 2>&1
eval_tap $? 248 'AuthCodeRequestV3' test.out

#- 249 PlatformTokenGrantV3
$CLI_EXE \
    --sn iam \
    --op PlatformTokenGrantV3 \
    --platformId '5FPLYE2w' \
    --additionalData '6YYy9zem' \
    --client_id '83zEoWPf' \
    --createHeadless 'false' \
    --device_id 'LE6pj25K' \
    --macAddress 'tfNrNmVF' \
    --platform_token 'nGtQmgym' \
    --serviceLabel '0.7571314813860012' \
    --skipSetCookie 'true' \
    > test.out 2>&1
eval_tap $? 249 'PlatformTokenGrantV3' test.out

#- 250 GetRevocationListV3
$CLI_EXE \
    --sn iam \
    --op GetRevocationListV3 \
    > test.out 2>&1
eval_tap $? 250 'GetRevocationListV3' test.out

#- 251 TokenRevocationV3
$CLI_EXE \
    --sn iam \
    --op TokenRevocationV3 \
    --token 'KztzP1AO' \
    > test.out 2>&1
eval_tap $? 251 'TokenRevocationV3' test.out

#- 252 SimultaneousLoginV3
$CLI_EXE \
    --sn iam \
    --op SimultaneousLoginV3 \
    --simultaneousPlatform '3KWijOHx' \
    --simultaneousTicket 'uFoe5hry' \
    --nativePlatform 'steam' \
    --nativePlatformTicket 'zi5AScXC' \
    > test.out 2>&1
eval_tap $? 252 'SimultaneousLoginV3' test.out

#- 253 TokenGrantV3
$CLI_EXE \
    --sn iam \
    --op TokenGrantV3 \
    --additionalData 'CTSuRo5P' \
    --client_id 'I8Mr1Gl8' \
    --client_secret 'B9FbxZYu' \
    --code 'Wdwh9VW3' \
    --code_verifier 'MUYMzYKL' \
    --extendNamespace 'WQAlC1rl' \
    --extend_exp 'false' \
    --password '1x3sLOE4' \
    --redirect_uri 'ZAzqOQgO' \
    --refresh_token 'ylxU2cB2' \
    --username '7ht0Hhvf' \
    --grant_type 'client_credentials' \
    > test.out 2>&1
eval_tap $? 253 'TokenGrantV3' test.out

#- 254 VerifyTokenV3
$CLI_EXE \
    --sn iam \
    --op VerifyTokenV3 \
    --token 'WHW6ehTm' \
    > test.out 2>&1
eval_tap $? 254 'VerifyTokenV3' test.out

#- 255 PlatformAuthenticationV3
$CLI_EXE \
    --sn iam \
    --op PlatformAuthenticationV3 \
    --platformId 'V6vthm68' \
    --code '0I6Cey0Q' \
    --error 'IkuJ02LC' \
    --openidAssocHandle 'Qlm9ACWl' \
    --openidClaimedId 'vORKFEI8' \
    --openidIdentity '0vPHHagi' \
    --openidMode 'yWiS4AIG' \
    --openidNs '1wb66cQ4' \
    --openidOpEndpoint 'XuoV0LQ3' \
    --openidResponseNonce 'pDS8PLii' \
    --openidReturnTo 'X5baHHWc' \
    --openidSig 'OtPVYBSw' \
    --openidSigned 'jAR6tlys' \
    --state 'GApQwCjY' \
    > test.out 2>&1
eval_tap $? 255 'PlatformAuthenticationV3' test.out

#- 256 PlatformTokenRefreshV3
$CLI_EXE \
    --sn iam \
    --op PlatformTokenRefreshV3 \
    --platformId 'd5dYWPHn' \
    --platform_token 'tK9n4jWQ' \
    > test.out 2>&1
eval_tap $? 256 'PlatformTokenRefreshV3' test.out

#- 257 PublicGetInputValidations
$CLI_EXE \
    --sn iam \
    --op PublicGetInputValidations \
    --defaultOnEmpty 'false' \
    --languageCode 'Jgx1l7LW' \
    > test.out 2>&1
eval_tap $? 257 'PublicGetInputValidations' test.out

#- 258 PublicGetInputValidationByField
$CLI_EXE \
    --sn iam \
    --op PublicGetInputValidationByField \
    --field 'lNP9Rdhf' \
    > test.out 2>&1
eval_tap $? 258 'PublicGetInputValidationByField' test.out

#- 259 PublicGetCountryAgeRestrictionV3
$CLI_EXE \
    --sn iam \
    --op PublicGetCountryAgeRestrictionV3 \
    --countryCode 'CBj08rpH' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 259 'PublicGetCountryAgeRestrictionV3' test.out

#- 260 PublicGetConfigValueV3
$CLI_EXE \
    --sn iam \
    --op PublicGetConfigValueV3 \
    --configKey 'OcdhrWng' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 260 'PublicGetConfigValueV3' test.out

#- 261 PublicGetCountryListV3
$CLI_EXE \
    --sn iam \
    --op PublicGetCountryListV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 261 'PublicGetCountryListV3' test.out

#- 262 RetrieveAllActiveThirdPartyLoginPlatformCredentialPublicV3
$CLI_EXE \
    --sn iam \
    --op RetrieveAllActiveThirdPartyLoginPlatformCredentialPublicV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 262 'RetrieveAllActiveThirdPartyLoginPlatformCredentialPublicV3' test.out

#- 263 RetrieveActiveOIDCClientsPublicV3
$CLI_EXE \
    --sn iam \
    --op RetrieveActiveOIDCClientsPublicV3 \
    --namespace $AB_NAMESPACE \
    --clientId 'ciHolNdU' \
    > test.out 2>&1
eval_tap $? 263 'RetrieveActiveOIDCClientsPublicV3' test.out

#- 264 PublicListUserIDByPlatformUserIDsV3
eval_tap 0 264 'PublicListUserIDByPlatformUserIDsV3 # SKIP deprecated' test.out

#- 265 PublicGetUserByPlatformUserIDV3
$CLI_EXE \
    --sn iam \
    --op PublicGetUserByPlatformUserIDV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'c44wo0qJ' \
    --platformUserId 'a31fQX8i' \
    > test.out 2>&1
eval_tap $? 265 'PublicGetUserByPlatformUserIDV3' test.out

#- 266 PublicGetAsyncStatus
$CLI_EXE \
    --sn iam \
    --op PublicGetAsyncStatus \
    --namespace $AB_NAMESPACE \
    --requestId 'gYd5zres' \
    > test.out 2>&1
eval_tap $? 266 'PublicGetAsyncStatus' test.out

#- 267 PublicSearchUserV3
$CLI_EXE \
    --sn iam \
    --op PublicSearchUserV3 \
    --namespace $AB_NAMESPACE \
    --by 'JqOBxs69' \
    --limit '4' \
    --offset '49' \
    --platformBy 'fysIsuQT' \
    --platformId 'W8VE8NKD' \
    --query '4dwgETN9' \
    > test.out 2>&1
eval_tap $? 267 'PublicSearchUserV3' test.out

#- 268 PublicCreateUserV3
# body param: body
echo '{"PasswordMD5Sum": "h0AtNPqe", "acceptedPolicies": [{"isAccepted": true, "localizedPolicyVersionId": "9qwXJoEy", "policyId": "pwku4ZlW", "policyVersionId": "c15JXH18"}, {"isAccepted": true, "localizedPolicyVersionId": "GNkR2PTO", "policyId": "28engf5w", "policyVersionId": "AzKtIaNk"}, {"isAccepted": true, "localizedPolicyVersionId": "PBYmaEzh", "policyId": "E8AnEBoT", "policyVersionId": "lSHkOI5W"}], "authType": "r7cnKDAk", "code": "9QJfKLNl", "country": "Gs9DzzCs", "dateOfBirth": "uK82ab2j", "displayName": "35Q9yDjg", "emailAddress": "WwLZGcnK", "password": "fSV34klv", "reachMinimumAge": true, "uniqueDisplayName": "FxmVRX4y"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicCreateUserV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 268 'PublicCreateUserV3' test.out

#- 269 CheckUserAvailability
$CLI_EXE \
    --sn iam \
    --op CheckUserAvailability \
    --namespace $AB_NAMESPACE \
    --field 'kSoShVJ0' \
    --query '7WDW6zkM' \
    > test.out 2>&1
eval_tap $? 269 'CheckUserAvailability' test.out

#- 270 PublicBulkGetUsers
# body param: body
echo '{"userIds": ["xsiia6VY", "IVCxeICO", "nvtIAaJ5"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicBulkGetUsers \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 270 'PublicBulkGetUsers' test.out

#- 271 PublicSendRegistrationCode
# body param: body
echo '{"emailAddress": "O7b2WvIg", "languageTag": "lurJsAOn"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicSendRegistrationCode \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 271 'PublicSendRegistrationCode' test.out

#- 272 PublicVerifyRegistrationCode
# body param: body
echo '{"code": "6FoQVKZw", "emailAddress": "La2tEYNU"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicVerifyRegistrationCode \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 272 'PublicVerifyRegistrationCode' test.out

#- 273 PublicForgotPasswordV3
# body param: body
echo '{"emailAddress": "VZixVO4G", "languageTag": "t42zqiCT"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicForgotPasswordV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 273 'PublicForgotPasswordV3' test.out

#- 274 PublicValidateUserInput
# body param: body
echo '{"displayName": "Sud6Lppe", "password": "UOp4jqCQ", "uniqueDisplayName": "RRdFRvkC", "username": "96LIC4hJ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicValidateUserInput \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 274 'PublicValidateUserInput' test.out

#- 275 GetAdminInvitationV3
$CLI_EXE \
    --sn iam \
    --op GetAdminInvitationV3 \
    --invitationId 'xZMET0Bx' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 275 'GetAdminInvitationV3' test.out

#- 276 CreateUserFromInvitationV3
# body param: body
echo '{"PasswordMD5Sum": "dOj1ZIEy", "acceptedPolicies": [{"isAccepted": true, "localizedPolicyVersionId": "Tu2q7Xv2", "policyId": "SvWcnmCp", "policyVersionId": "Y1zKtDw6"}, {"isAccepted": true, "localizedPolicyVersionId": "j73Qfqy2", "policyId": "LQ1qBonD", "policyVersionId": "inQpJq7a"}, {"isAccepted": false, "localizedPolicyVersionId": "1OuOcuwS", "policyId": "8GK7gq6P", "policyVersionId": "DMg3d7Cp"}], "authType": "vQWpp685", "code": "NiWFaDNX", "country": "JiEe1ye7", "dateOfBirth": "8oTIXfHh", "displayName": "y3ThaQ9L", "emailAddress": "RyPBum0m", "password": "qaaViF6J", "reachMinimumAge": false, "uniqueDisplayName": "OQNoYACV"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op CreateUserFromInvitationV3 \
    --invitationId 'YcYvudLa' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 276 'CreateUserFromInvitationV3' test.out

#- 277 UpdateUserV3
# body param: body
echo '{"avatarUrl": "rHfYdBji", "country": "d7ZqqPvT", "dateOfBirth": "JraVfE6f", "displayName": "jkNlwbfB", "languageTag": "qLtGDpyS", "uniqueDisplayName": "FeCFxLJI", "userName": "SmSf6ZsW"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op UpdateUserV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 277 'UpdateUserV3' test.out

#- 278 PublicPartialUpdateUserV3
# body param: body
echo '{"avatarUrl": "7a6cCeA1", "country": "oS2bmZpk", "dateOfBirth": "Q1aT4VjQ", "displayName": "x34dNXzu", "languageTag": "dp0EXzbH", "uniqueDisplayName": "nWMZ5v0l", "userName": "jxkrYdOb"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicPartialUpdateUserV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 278 'PublicPartialUpdateUserV3' test.out

#- 279 PublicSendVerificationCodeV3
# body param: body
echo '{"context": "qGssR02C", "emailAddress": "Os7E4yj2", "languageTag": "Qqexkb77"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicSendVerificationCodeV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 279 'PublicSendVerificationCodeV3' test.out

#- 280 PublicUserVerificationV3
# body param: body
echo '{"code": "qrpm3t8h", "contactType": "I9QBiCLo", "languageTag": "Oyr5S7YZ", "validateOnly": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUserVerificationV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 280 'PublicUserVerificationV3' test.out

#- 281 PublicUpgradeHeadlessAccountV3
# body param: body
echo '{"code": "3iRJcwrA", "country": "bn1BLPdL", "dateOfBirth": "w8Z5gyFE", "displayName": "qWdlnixX", "emailAddress": "nZeSfXZw", "password": "lwrtzp0S", "uniqueDisplayName": "XyKPx5R0", "validateOnly": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpgradeHeadlessAccountV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 281 'PublicUpgradeHeadlessAccountV3' test.out

#- 282 PublicVerifyHeadlessAccountV3
# body param: body
echo '{"emailAddress": "YGIFjKN1", "password": "Lrs89Dec"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicVerifyHeadlessAccountV3 \
    --namespace $AB_NAMESPACE \
    --needVerificationCode 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 282 'PublicVerifyHeadlessAccountV3' test.out

#- 283 PublicUpdatePasswordV3
# body param: body
echo '{"languageTag": "G2581F7S", "mfaToken": "yim63xvP", "newPassword": "gr9dl83l", "oldPassword": "yPPukk1Q"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpdatePasswordV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 283 'PublicUpdatePasswordV3' test.out

#- 284 PublicCreateJusticeUser
$CLI_EXE \
    --sn iam \
    --op PublicCreateJusticeUser \
    --namespace $AB_NAMESPACE \
    --targetNamespace 'wKbFZGEv' \
    > test.out 2>&1
eval_tap $? 284 'PublicCreateJusticeUser' test.out

#- 285 PublicPlatformLinkV3
$CLI_EXE \
    --sn iam \
    --op PublicPlatformLinkV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'lKgI3Fdz' \
    --redirectUri '2oOsxwDv' \
    --ticket 'hzLMUbD6' \
    > test.out 2>&1
eval_tap $? 285 'PublicPlatformLinkV3' test.out

#- 286 PublicPlatformUnlinkV3
eval_tap 0 286 'PublicPlatformUnlinkV3 # SKIP deprecated' test.out

#- 287 PublicPlatformUnlinkAllV3
$CLI_EXE \
    --sn iam \
    --op PublicPlatformUnlinkAllV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'pnho7xBi' \
    > test.out 2>&1
eval_tap $? 287 'PublicPlatformUnlinkAllV3' test.out

#- 288 PublicForcePlatformLinkV3
$CLI_EXE \
    --sn iam \
    --op PublicForcePlatformLinkV3 \
    --namespace $AB_NAMESPACE \
    --platformId '4fwRokwJ' \
    --ticket '9YEEXrNl' \
    > test.out 2>&1
eval_tap $? 288 'PublicForcePlatformLinkV3' test.out

#- 289 PublicWebLinkPlatform
$CLI_EXE \
    --sn iam \
    --op PublicWebLinkPlatform \
    --namespace $AB_NAMESPACE \
    --platformId '4U8zKBui' \
    --clientId 'XMUMe1KY' \
    --redirectUri 'Q8QqgDa8' \
    > test.out 2>&1
eval_tap $? 289 'PublicWebLinkPlatform' test.out

#- 290 PublicWebLinkPlatformEstablish
$CLI_EXE \
    --sn iam \
    --op PublicWebLinkPlatformEstablish \
    --namespace $AB_NAMESPACE \
    --platformId 'svrGdTSe' \
    --code 'ORFjim1M' \
    --state 'KIccrcBS' \
    > test.out 2>&1
eval_tap $? 290 'PublicWebLinkPlatformEstablish' test.out

#- 291 PublicProcessWebLinkPlatformV3
$CLI_EXE \
    --sn iam \
    --op PublicProcessWebLinkPlatformV3 \
    --namespace $AB_NAMESPACE \
    --platformId '92wlQgdX' \
    --code 'lkUnaAcY' \
    --state 'BgYERMFK' \
    > test.out 2>&1
eval_tap $? 291 'PublicProcessWebLinkPlatformV3' test.out

#- 292 PublicGetUsersPlatformInfosV3
# body param: body
echo '{"platformId": "ayg5oqvA", "userIds": ["DeVvOYi2", "CTaYJDDk", "bvCj0Ney"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicGetUsersPlatformInfosV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 292 'PublicGetUsersPlatformInfosV3' test.out

#- 293 ResetPasswordV3
# body param: body
echo '{"clientId": "lO4q4DQz", "code": "qofYAvDF", "emailAddress": "qHRzuE7G", "languageTag": "yW2f99pf", "newPassword": "mtheOZ70"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op ResetPasswordV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 293 'ResetPasswordV3' test.out

#- 294 PublicGetUserByUserIdV3
eval_tap 0 294 'PublicGetUserByUserIdV3 # SKIP deprecated' test.out

#- 295 PublicGetUserBanHistoryV3
$CLI_EXE \
    --sn iam \
    --op PublicGetUserBanHistoryV3 \
    --namespace $AB_NAMESPACE \
    --userId '8rzsKOq6' \
    --activeOnly 'false' \
    --after 'j4FhAn3J' \
    --before 'pHnSvEkJ' \
    --limit '46' \
    > test.out 2>&1
eval_tap $? 295 'PublicGetUserBanHistoryV3' test.out

#- 296 PublicListUserAllPlatformAccountsDistinctV3
$CLI_EXE \
    --sn iam \
    --op PublicListUserAllPlatformAccountsDistinctV3 \
    --namespace $AB_NAMESPACE \
    --userId 'pXZgwR6M' \
    > test.out 2>&1
eval_tap $? 296 'PublicListUserAllPlatformAccountsDistinctV3' test.out

#- 297 PublicGetUserInformationV3
$CLI_EXE \
    --sn iam \
    --op PublicGetUserInformationV3 \
    --namespace $AB_NAMESPACE \
    --userId 'JJvTnDdc' \
    > test.out 2>&1
eval_tap $? 297 'PublicGetUserInformationV3' test.out

#- 298 PublicGetUserLoginHistoriesV3
$CLI_EXE \
    --sn iam \
    --op PublicGetUserLoginHistoriesV3 \
    --namespace $AB_NAMESPACE \
    --userId 'PAKBuH4S' \
    --after '0.159937546171398' \
    --before '0.104201117840933' \
    --limit '53' \
    > test.out 2>&1
eval_tap $? 298 'PublicGetUserLoginHistoriesV3' test.out

#- 299 PublicGetUserPlatformAccountsV3
$CLI_EXE \
    --sn iam \
    --op PublicGetUserPlatformAccountsV3 \
    --namespace $AB_NAMESPACE \
    --userId 'mPa7zsq5' \
    --after 'zdZYaGVh' \
    --before '2rA6zHxX' \
    --limit '43' \
    --platformId '1fJ4mgdu' \
    > test.out 2>&1
eval_tap $? 299 'PublicGetUserPlatformAccountsV3' test.out

#- 300 PublicListJusticePlatformAccountsV3
$CLI_EXE \
    --sn iam \
    --op PublicListJusticePlatformAccountsV3 \
    --namespace $AB_NAMESPACE \
    --userId 'UlRuCQDU' \
    > test.out 2>&1
eval_tap $? 300 'PublicListJusticePlatformAccountsV3' test.out

#- 301 PublicLinkPlatformAccount
# body param: body
echo '{"platformId": "cav9w8Hj", "platformUserId": "KvnmSqe1"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicLinkPlatformAccount \
    --namespace $AB_NAMESPACE \
    --userId 'rhXmGMiO' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 301 'PublicLinkPlatformAccount' test.out

#- 302 PublicForceLinkPlatformWithProgression
# body param: body
echo '{"chosenNamespaces": ["Ox35gESk", "T9hRwflu", "qbnWtAj4"], "requestId": "P8rKPhAG"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicForceLinkPlatformWithProgression \
    --namespace $AB_NAMESPACE \
    --userId 'NlPlCOLS' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 302 'PublicForceLinkPlatformWithProgression' test.out

#- 303 PublicGetPublisherUserV3
$CLI_EXE \
    --sn iam \
    --op PublicGetPublisherUserV3 \
    --namespace $AB_NAMESPACE \
    --userId 'BrVdFA6V' \
    > test.out 2>&1
eval_tap $? 303 'PublicGetPublisherUserV3' test.out

#- 304 PublicValidateUserByUserIDAndPasswordV3
$CLI_EXE \
    --sn iam \
    --op PublicValidateUserByUserIDAndPasswordV3 \
    --namespace $AB_NAMESPACE \
    --userId 'DgTpXTV9' \
    --password '5sbaKRG5' \
    > test.out 2>&1
eval_tap $? 304 'PublicValidateUserByUserIDAndPasswordV3' test.out

#- 305 PublicGetRolesV3
$CLI_EXE \
    --sn iam \
    --op PublicGetRolesV3 \
    --after 'ulHXW7GW' \
    --before 'ZxESLZIO' \
    --isWildcard 'true' \
    --limit '60' \
    > test.out 2>&1
eval_tap $? 305 'PublicGetRolesV3' test.out

#- 306 PublicGetRoleV3
$CLI_EXE \
    --sn iam \
    --op PublicGetRoleV3 \
    --roleId 'Bn4xYew9' \
    > test.out 2>&1
eval_tap $? 306 'PublicGetRoleV3' test.out

#- 307 PublicGetMyUserV3
$CLI_EXE \
    --sn iam \
    --op PublicGetMyUserV3 \
    --includeAllPlatforms 'true' \
    > test.out 2>&1
eval_tap $? 307 'PublicGetMyUserV3' test.out

#- 308 PublicGetLinkHeadlessAccountToMyAccountConflictV3
$CLI_EXE \
    --sn iam \
    --op PublicGetLinkHeadlessAccountToMyAccountConflictV3 \
    --oneTimeLinkCode 'QTG3Yxx9' \
    > test.out 2>&1
eval_tap $? 308 'PublicGetLinkHeadlessAccountToMyAccountConflictV3' test.out

#- 309 LinkHeadlessAccountToMyAccountV3
# body param: body
echo '{"chosenNamespaces": ["uMuT7Foc", "diGcothp", "g8Rxjy6A"], "oneTimeLinkCode": "ItaMBdBt"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op LinkHeadlessAccountToMyAccountV3 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 309 'LinkHeadlessAccountToMyAccountV3' test.out

#- 310 PublicSendVerificationLinkV3
# body param: body
echo '{"languageTag": "4dF3ksqN"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicSendVerificationLinkV3 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 310 'PublicSendVerificationLinkV3' test.out

#- 311 PublicVerifyUserByLinkV3
$CLI_EXE \
    --sn iam \
    --op PublicVerifyUserByLinkV3 \
    --code 'Jk27BX51' \
    > test.out 2>&1
eval_tap $? 311 'PublicVerifyUserByLinkV3' test.out

#- 312 PlatformAuthenticateSAMLV3Handler
$CLI_EXE \
    --sn iam \
    --op PlatformAuthenticateSAMLV3Handler \
    --platformId 'muKzhzQW' \
    --code 'RMNNVgBe' \
    --error 'n4GmEndh' \
    --state 'DrsxN6zI' \
    > test.out 2>&1
eval_tap $? 312 'PlatformAuthenticateSAMLV3Handler' test.out

#- 313 LoginSSOClient
$CLI_EXE \
    --sn iam \
    --op LoginSSOClient \
    --platformId '1gkLbC0d' \
    --payload 'jTI6tkpk' \
    > test.out 2>&1
eval_tap $? 313 'LoginSSOClient' test.out

#- 314 LogoutSSOClient
$CLI_EXE \
    --sn iam \
    --op LogoutSSOClient \
    --platformId 'rluMP8mD' \
    > test.out 2>&1
eval_tap $? 314 'LogoutSSOClient' test.out

#- 315 RequestTargetTokenResponseV3
$CLI_EXE \
    --sn iam \
    --op RequestTargetTokenResponseV3 \
    --additionalData 'Vz6Ctsfw' \
    --code 'bMNL4fPC' \
    > test.out 2>&1
eval_tap $? 315 'RequestTargetTokenResponseV3' test.out

#- 316 AdminListInvitationHistoriesV4
$CLI_EXE \
    --sn iam \
    --op AdminListInvitationHistoriesV4 \
    --limit '27' \
    --namespace_ 'SL4tLCLv' \
    --offset '8' \
    > test.out 2>&1
eval_tap $? 316 'AdminListInvitationHistoriesV4' test.out

#- 317 AdminGetDevicesByUserV4
$CLI_EXE \
    --sn iam \
    --op AdminGetDevicesByUserV4 \
    --namespace $AB_NAMESPACE \
    --userId 'Id7ahZ0F' \
    > test.out 2>&1
eval_tap $? 317 'AdminGetDevicesByUserV4' test.out

#- 318 AdminGetBannedDevicesV4
$CLI_EXE \
    --sn iam \
    --op AdminGetBannedDevicesV4 \
    --namespace $AB_NAMESPACE \
    --deviceType 'j0vIuJOB' \
    --endDate 'eIsGVLah' \
    --limit '27' \
    --offset '40' \
    --startDate 'G1KGijKu' \
    > test.out 2>&1
eval_tap $? 318 'AdminGetBannedDevicesV4' test.out

#- 319 AdminGetUserDeviceBansV4
$CLI_EXE \
    --sn iam \
    --op AdminGetUserDeviceBansV4 \
    --namespace $AB_NAMESPACE \
    --userId 'CES5l3lZ' \
    > test.out 2>&1
eval_tap $? 319 'AdminGetUserDeviceBansV4' test.out

#- 320 AdminBanDeviceV4
# body param: body
echo '{"comment": "Nv87aoL5", "deviceId": "7CFMoqrs", "deviceType": "v6f615KB", "enabled": false, "endDate": "OjS0pVAq", "ext": {"7dc1C6je": {}, "fE57jw3u": {}, "AJ0d9hT8": {}}, "reason": "DnynS48p"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBanDeviceV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 320 'AdminBanDeviceV4' test.out

#- 321 AdminGetDeviceBanV4
$CLI_EXE \
    --sn iam \
    --op AdminGetDeviceBanV4 \
    --banId 'EXYUap31' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 321 'AdminGetDeviceBanV4' test.out

#- 322 AdminUpdateDeviceBanV4
# body param: body
echo '{"enabled": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateDeviceBanV4 \
    --banId 'RVrAGveQ' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 322 'AdminUpdateDeviceBanV4' test.out

#- 323 AdminGenerateReportV4
$CLI_EXE \
    --sn iam \
    --op AdminGenerateReportV4 \
    --namespace $AB_NAMESPACE \
    --endDate '4zNxc0j8' \
    --startDate 'xl1ijIez' \
    --deviceType 'HxhCoDnU' \
    > test.out 2>&1
eval_tap $? 323 'AdminGenerateReportV4' test.out

#- 324 AdminGetDeviceTypesV4
$CLI_EXE \
    --sn iam \
    --op AdminGetDeviceTypesV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 324 'AdminGetDeviceTypesV4' test.out

#- 325 AdminGetDeviceBansV4
$CLI_EXE \
    --sn iam \
    --op AdminGetDeviceBansV4 \
    --deviceId 'eL5xzyjL' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 325 'AdminGetDeviceBansV4' test.out

#- 326 AdminDecryptDeviceV4
$CLI_EXE \
    --sn iam \
    --op AdminDecryptDeviceV4 \
    --deviceId 'mmyWIDKb' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 326 'AdminDecryptDeviceV4' test.out

#- 327 AdminUnbanDeviceV4
$CLI_EXE \
    --sn iam \
    --op AdminUnbanDeviceV4 \
    --deviceId 'r9fgqewS' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 327 'AdminUnbanDeviceV4' test.out

#- 328 AdminGetUsersByDeviceV4
$CLI_EXE \
    --sn iam \
    --op AdminGetUsersByDeviceV4 \
    --deviceId 'Qam3ZrV4' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 328 'AdminGetUsersByDeviceV4' test.out

#- 329 AdminGetNamespaceInvitationHistoryV4
$CLI_EXE \
    --sn iam \
    --op AdminGetNamespaceInvitationHistoryV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 329 'AdminGetNamespaceInvitationHistoryV4' test.out

#- 330 AdminGetNamespaceUserInvitationHistoryV4
$CLI_EXE \
    --sn iam \
    --op AdminGetNamespaceUserInvitationHistoryV4 \
    --namespace $AB_NAMESPACE \
    --limit '5' \
    --offset '15' \
    > test.out 2>&1
eval_tap $? 330 'AdminGetNamespaceUserInvitationHistoryV4' test.out

#- 331 AdminCreateTestUsersV4
# body param: body
echo '{"count": 21}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminCreateTestUsersV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 331 'AdminCreateTestUsersV4' test.out

#- 332 AdminCreateUserV4
# body param: body
echo '{"acceptedPolicies": [{"isAccepted": true, "localizedPolicyVersionId": "XCnL93UX", "policyId": "gawghpMO", "policyVersionId": "dH6OWwgS"}, {"isAccepted": false, "localizedPolicyVersionId": "GVclRxy5", "policyId": "6Tg0XPn0", "policyVersionId": "ft8VLYZu"}, {"isAccepted": false, "localizedPolicyVersionId": "SSR2zjb5", "policyId": "ZcXoogW8", "policyVersionId": "Y6ciBBXf"}], "authType": "EMAILPASSWD", "code": "tsGcy8Rc", "country": "G43k8qVo", "dateOfBirth": "jBcUWQcs", "displayName": "ZoXHcBI7", "emailAddress": "iOpQ9wuu", "password": "pUGkL3nX", "passwordMD5Sum": "8ChxeeCx", "reachMinimumAge": true, "uniqueDisplayName": "Sh1jOvp4", "username": "f5TWCzli"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminCreateUserV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 332 'AdminCreateUserV4' test.out

#- 333 AdminBulkUpdateUserAccountTypeV4
# body param: body
echo '{"testAccount": false, "userIds": ["tPhIWQmu", "2rKX8ttG", "DGtcVv1E"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBulkUpdateUserAccountTypeV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 333 'AdminBulkUpdateUserAccountTypeV4' test.out

#- 334 AdminBulkCheckValidUserIDV4
# body param: body
echo '{"userIds": ["zBgUYhu5", "0WIeBOLp", "27IESzGe"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBulkCheckValidUserIDV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 334 'AdminBulkCheckValidUserIDV4' test.out

#- 335 AdminUpdateUserV4
# body param: body
echo '{"avatarUrl": "AP2PMDXn", "country": "UTrl9f9x", "dateOfBirth": "oupqIHOK", "displayName": "YHfVKjBc", "languageTag": "jhB3yOnc", "skipLoginQueue": true, "uniqueDisplayName": "xR7ckgdF", "userName": "zfkWy03b"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserV4 \
    --namespace $AB_NAMESPACE \
    --userId 'GEQx0u1r' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 335 'AdminUpdateUserV4' test.out

#- 336 AdminUpdateUserEmailAddressV4
# body param: body
echo '{"code": "RWkjgl9M", "emailAddress": "PfqvWIap"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserEmailAddressV4 \
    --namespace $AB_NAMESPACE \
    --userId 'q7MfzEji' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 336 'AdminUpdateUserEmailAddressV4' test.out

#- 337 AdminDisableUserMFAV4
$CLI_EXE \
    --sn iam \
    --op AdminDisableUserMFAV4 \
    --namespace $AB_NAMESPACE \
    --userId 'c9rumkFY' \
    > test.out 2>&1
eval_tap $? 337 'AdminDisableUserMFAV4' test.out

#- 338 AdminListUserRolesV4
$CLI_EXE \
    --sn iam \
    --op AdminListUserRolesV4 \
    --namespace $AB_NAMESPACE \
    --userId 'bfoKqBJv' \
    > test.out 2>&1
eval_tap $? 338 'AdminListUserRolesV4' test.out

#- 339 AdminUpdateUserRoleV4
# body param: body
echo '{"assignedNamespaces": ["BL8XeFDp", "a2Uue7YH", "e5k28fVV"], "roleId": "y2cb4kh0"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserRoleV4 \
    --namespace $AB_NAMESPACE \
    --userId 'YwDzi5aE' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 339 'AdminUpdateUserRoleV4' test.out

#- 340 AdminAddUserRoleV4
# body param: body
echo '{"assignedNamespaces": ["iJwKCR5f", "GYWSMM72", "efzMrlA9"], "roleId": "Z7uzYMDH"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddUserRoleV4 \
    --namespace $AB_NAMESPACE \
    --userId 'olSN0PY8' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 340 'AdminAddUserRoleV4' test.out

#- 341 AdminRemoveUserRoleV4
# body param: body
echo '{"assignedNamespaces": ["fl6fsbk9", "d0ATWqhS", "TzYLlWCf"], "roleId": "XdsKUK9X"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminRemoveUserRoleV4 \
    --namespace $AB_NAMESPACE \
    --userId '0NUhyUfx' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 341 'AdminRemoveUserRoleV4' test.out

#- 342 AdminGetRolesV4
$CLI_EXE \
    --sn iam \
    --op AdminGetRolesV4 \
    --adminRole 'false' \
    --isWildcard 'false' \
    --limit '23' \
    --offset '46' \
    > test.out 2>&1
eval_tap $? 342 'AdminGetRolesV4' test.out

#- 343 AdminCreateRoleV4
# body param: body
echo '{"adminRole": false, "deletable": true, "isWildcard": false, "roleName": "mcGU2gVM"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminCreateRoleV4 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 343 'AdminCreateRoleV4' test.out

#- 344 AdminGetRoleV4
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleV4 \
    --roleId 'M5OGGkBt' \
    > test.out 2>&1
eval_tap $? 344 'AdminGetRoleV4' test.out

#- 345 AdminDeleteRoleV4
$CLI_EXE \
    --sn iam \
    --op AdminDeleteRoleV4 \
    --roleId 'c10K1wDJ' \
    > test.out 2>&1
eval_tap $? 345 'AdminDeleteRoleV4' test.out

#- 346 AdminUpdateRoleV4
# body param: body
echo '{"adminRole": false, "deletable": true, "isWildcard": false, "roleName": "ojkdIpan"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateRoleV4 \
    --roleId 'G3XFd6Jr' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 346 'AdminUpdateRoleV4' test.out

#- 347 AdminUpdateRolePermissionsV4
# body param: body
echo '{"permissions": [{"action": 92, "resource": "vYQUGDKv", "schedAction": 100, "schedCron": "svxIHeM7", "schedRange": ["6d5OKQpz", "AyBkSPnp", "6FIG50yd"]}, {"action": 48, "resource": "DbRRhBp1", "schedAction": 17, "schedCron": "FX4Uytgq", "schedRange": ["fPG2WdSI", "YSqOHqZG", "4TEUjVVh"]}, {"action": 28, "resource": "Xp5KoZSn", "schedAction": 58, "schedCron": "RlPvvkuF", "schedRange": ["bAeBtssa", "EiJzk2ey", "QE9SoHgh"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateRolePermissionsV4 \
    --roleId 'hjSrfFvQ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 347 'AdminUpdateRolePermissionsV4' test.out

#- 348 AdminAddRolePermissionsV4
# body param: body
echo '{"permissions": [{"action": 3, "resource": "xq8UNiCO", "schedAction": 6, "schedCron": "DzQmFmGJ", "schedRange": ["AsDRgFWg", "YU1XuTle", "Tk7srRSN"]}, {"action": 100, "resource": "R4BrumNb", "schedAction": 94, "schedCron": "GDUCMa9i", "schedRange": ["AcXEmIZ4", "Na92jkO4", "eqpaGJcg"]}, {"action": 1, "resource": "7wkWaCmV", "schedAction": 29, "schedCron": "2mr2snRJ", "schedRange": ["MrmvczJF", "k8MNBrIF", "iI5d3gVc"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddRolePermissionsV4 \
    --roleId 'pLabWlEW' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 348 'AdminAddRolePermissionsV4' test.out

#- 349 AdminDeleteRolePermissionsV4
# body param: body
echo '["xJCQ7GtD", "11rnFrw4", "BrJjUusH"]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDeleteRolePermissionsV4 \
    --roleId '1xfIn1aV' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 349 'AdminDeleteRolePermissionsV4' test.out

#- 350 AdminListAssignedUsersV4
$CLI_EXE \
    --sn iam \
    --op AdminListAssignedUsersV4 \
    --roleId 'MSGjHm22' \
    --after 'sJNLo9Of' \
    --before 'vX6THPNf' \
    --limit '73' \
    > test.out 2>&1
eval_tap $? 350 'AdminListAssignedUsersV4' test.out

#- 351 AdminAssignUserToRoleV4
# body param: body
echo '{"assignedNamespaces": ["abMHwS5C", "yq2sVx72", "Z1SU5QJ7"], "namespace": "rciqXzXb", "userId": "DH5opJn4"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAssignUserToRoleV4 \
    --roleId 'bowKWllT' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 351 'AdminAssignUserToRoleV4' test.out

#- 352 AdminRevokeUserFromRoleV4
# body param: body
echo '{"namespace": "fHaCgNl3", "userId": "gHhz5mvb"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminRevokeUserFromRoleV4 \
    --roleId 'Z1V15BPo' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 352 'AdminRevokeUserFromRoleV4' test.out

#- 353 AdminInviteUserNewV4
# body param: body
echo '{"assignedNamespaces": ["znlNr4nF", "h9uWcM92", "joOfBjok"], "emailAddresses": ["JTLOBo19", "du2Tdcvo", "YVM9BPgP"], "isAdmin": true, "isNewStudio": true, "languageTag": "huiKFc3P", "namespace": "bCkSfiJN", "roleId": "mncNVhXH"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminInviteUserNewV4 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 353 'AdminInviteUserNewV4' test.out

#- 354 AdminUpdateMyUserV4
# body param: body
echo '{"avatarUrl": "7Wu0MvmS", "country": "tig1ifA3", "dateOfBirth": "p9ge6Zjx", "displayName": "2VxbIdJ3", "languageTag": "jrZaj125", "skipLoginQueue": true, "uniqueDisplayName": "yO8kHHjh", "userName": "lXTyuCpe"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateMyUserV4 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 354 'AdminUpdateMyUserV4' test.out

#- 355 AdminDisableMyAuthenticatorV4
# body param: body
echo '{"mfaToken": "MeZdmnSH"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDisableMyAuthenticatorV4 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 355 'AdminDisableMyAuthenticatorV4' test.out

#- 356 AdminEnableMyAuthenticatorV4
$CLI_EXE \
    --sn iam \
    --op AdminEnableMyAuthenticatorV4 \
    --code '7xRelWVP' \
    > test.out 2>&1
eval_tap $? 356 'AdminEnableMyAuthenticatorV4' test.out

#- 357 AdminGenerateMyAuthenticatorKeyV4
$CLI_EXE \
    --sn iam \
    --op AdminGenerateMyAuthenticatorKeyV4 \
    > test.out 2>&1
eval_tap $? 357 'AdminGenerateMyAuthenticatorKeyV4' test.out

#- 358 AdminGetMyBackupCodesV4
eval_tap 0 358 'AdminGetMyBackupCodesV4 # SKIP deprecated' test.out

#- 359 AdminGenerateMyBackupCodesV4
eval_tap 0 359 'AdminGenerateMyBackupCodesV4 # SKIP deprecated' test.out

#- 360 AdminDisableMyBackupCodesV4
# body param: body
echo '{"mfaToken": "nqRz5iel"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDisableMyBackupCodesV4 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 360 'AdminDisableMyBackupCodesV4' test.out

#- 361 AdminDownloadMyBackupCodesV4
eval_tap 0 361 'AdminDownloadMyBackupCodesV4 # SKIP deprecated' test.out

#- 362 AdminEnableMyBackupCodesV4
eval_tap 0 362 'AdminEnableMyBackupCodesV4 # SKIP deprecated' test.out

#- 363 AdminGetBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op AdminGetBackupCodesV4 \
    --languageTag 'CGZxGrlO' \
    > test.out 2>&1
eval_tap $? 363 'AdminGetBackupCodesV4' test.out

#- 364 AdminGenerateBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op AdminGenerateBackupCodesV4 \
    --languageTag 'ZWKMfSdo' \
    > test.out 2>&1
eval_tap $? 364 'AdminGenerateBackupCodesV4' test.out

#- 365 AdminEnableBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op AdminEnableBackupCodesV4 \
    --languageTag 'XOzj3KvP' \
    > test.out 2>&1
eval_tap $? 365 'AdminEnableBackupCodesV4' test.out

#- 366 AdminChallengeMyMFAV4
$CLI_EXE \
    --sn iam \
    --op AdminChallengeMyMFAV4 \
    --code 'BziGZfBc' \
    --factor 'oZznMCY8' \
    > test.out 2>&1
eval_tap $? 366 'AdminChallengeMyMFAV4' test.out

#- 367 AdminSendMyMFAEmailCodeV4
$CLI_EXE \
    --sn iam \
    --op AdminSendMyMFAEmailCodeV4 \
    --action 'gXvC0Ioa' \
    --languageTag 'Lx4lUP20' \
    > test.out 2>&1
eval_tap $? 367 'AdminSendMyMFAEmailCodeV4' test.out

#- 368 AdminDisableMyEmailV4
# body param: body
echo '{"mfaToken": "aiTKc4la"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDisableMyEmailV4 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 368 'AdminDisableMyEmailV4' test.out

#- 369 AdminEnableMyEmailV4
$CLI_EXE \
    --sn iam \
    --op AdminEnableMyEmailV4 \
    --code '2bYTjgoM' \
    > test.out 2>&1
eval_tap $? 369 'AdminEnableMyEmailV4' test.out

#- 370 AdminGetMyEnabledFactorsV4
$CLI_EXE \
    --sn iam \
    --op AdminGetMyEnabledFactorsV4 \
    > test.out 2>&1
eval_tap $? 370 'AdminGetMyEnabledFactorsV4' test.out

#- 371 AdminMakeFactorMyDefaultV4
$CLI_EXE \
    --sn iam \
    --op AdminMakeFactorMyDefaultV4 \
    --factor 'fxDLtXso' \
    > test.out 2>&1
eval_tap $? 371 'AdminMakeFactorMyDefaultV4' test.out

#- 372 AdminGetMyOwnMFAStatusV4
$CLI_EXE \
    --sn iam \
    --op AdminGetMyOwnMFAStatusV4 \
    > test.out 2>&1
eval_tap $? 372 'AdminGetMyOwnMFAStatusV4' test.out

#- 373 AdminGetMyMFAStatusV4
eval_tap 0 373 'AdminGetMyMFAStatusV4 # SKIP deprecated' test.out

#- 374 AdminInviteUserV4
eval_tap 0 374 'AdminInviteUserV4 # SKIP deprecated' test.out

#- 375 AuthenticationWithPlatformLinkV4
$CLI_EXE \
    --sn iam \
    --op AuthenticationWithPlatformLinkV4 \
    --extend_exp 'true' \
    --client_id 'JVWWBveT' \
    --linkingToken 'V2rbAxym' \
    --password 'YlSYptux' \
    --username 'zyrxZX5E' \
    > test.out 2>&1
eval_tap $? 375 'AuthenticationWithPlatformLinkV4' test.out

#- 376 GenerateTokenByNewHeadlessAccountV4
$CLI_EXE \
    --sn iam \
    --op GenerateTokenByNewHeadlessAccountV4 \
    --additionalData '3T3LCPSC' \
    --extend_exp 'false' \
    --linkingToken '7srArhoC' \
    > test.out 2>&1
eval_tap $? 376 'GenerateTokenByNewHeadlessAccountV4' test.out

#- 377 Verify2faCodeV4
$CLI_EXE \
    --sn iam \
    --op Verify2faCodeV4 \
    --code 'rAfTuVka' \
    --factor 'OWd7PMqn' \
    --mfaToken 'kQNYc1M9' \
    --rememberDevice 'false' \
    > test.out 2>&1
eval_tap $? 377 'Verify2faCodeV4' test.out

#- 378 PlatformTokenGrantV4
$CLI_EXE \
    --sn iam \
    --op PlatformTokenGrantV4 \
    --platformId 'GRLugelH' \
    --codeChallenge 'BQJtoW6L' \
    --codeChallengeMethod 'plain' \
    --additionalData '7AklgdHo' \
    --client_id 'mNmxf3AE' \
    --createHeadless 'true' \
    --device_id 'UaxsseAz' \
    --macAddress 'gpM563ou' \
    --platform_token '49etmHWy' \
    --serviceLabel '0.6894227854709469' \
    --skipSetCookie 'true' \
    > test.out 2>&1
eval_tap $? 378 'PlatformTokenGrantV4' test.out

#- 379 SimultaneousLoginV4
$CLI_EXE \
    --sn iam \
    --op SimultaneousLoginV4 \
    --codeChallenge 'JnvcaBfY' \
    --codeChallengeMethod 'plain' \
    --simultaneousPlatform 'KbjFYwir' \
    --simultaneousTicket 'd8aYLjZk' \
    --nativePlatform 'steam' \
    --nativePlatformTicket 'w9NYjhBI' \
    > test.out 2>&1
eval_tap $? 379 'SimultaneousLoginV4' test.out

#- 380 TokenGrantV4
$CLI_EXE \
    --sn iam \
    --op TokenGrantV4 \
    --codeChallenge 'a4zmcBZN' \
    --codeChallengeMethod 'S256' \
    --additionalData 'Xgm86SIu' \
    --client_id 'Kr0pEhm9' \
    --client_secret 'cmmhn4xE' \
    --code 'VZPujL7B' \
    --code_verifier 'EVXz8z1F' \
    --extendNamespace '4vKlYrjG' \
    --extend_exp 'true' \
    --login_queue_ticket '1LUUZTI0' \
    --password 'ocVUUiy5' \
    --redirect_uri '5v8n3eaJ' \
    --refresh_token 'IQ2oBTDZ' \
    --username 'QbKd7mQY' \
    --grant_type 'urn:ietf:params:oauth:grant-type:extend_client_credentials' \
    > test.out 2>&1
eval_tap $? 380 'TokenGrantV4' test.out

#- 381 RequestTargetTokenResponseV4
$CLI_EXE \
    --sn iam \
    --op RequestTargetTokenResponseV4 \
    --additionalData 'JH0twrMC' \
    --code 'fxtI5zMW' \
    > test.out 2>&1
eval_tap $? 381 'RequestTargetTokenResponseV4' test.out

#- 382 PublicListUserIDByPlatformUserIDsV4
# body param: body
echo '{"platformUserIds": ["BZYO96Bf", "bHYw4CQE", "bV2nI44x"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicListUserIDByPlatformUserIDsV4 \
    --namespace $AB_NAMESPACE \
    --platformId 'oMsAaTpi' \
    --rawPUID 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 382 'PublicListUserIDByPlatformUserIDsV4' test.out

#- 383 PublicCreateTestUserV4
# body param: body
echo '{"acceptedPolicies": [{"isAccepted": false, "localizedPolicyVersionId": "w5oLlTxV", "policyId": "vJmh9xjp", "policyVersionId": "GIisofpn"}, {"isAccepted": true, "localizedPolicyVersionId": "L2KGmdaR", "policyId": "nLilPm79", "policyVersionId": "DE6Sgxgf"}, {"isAccepted": false, "localizedPolicyVersionId": "BTzghYOI", "policyId": "aEz7366B", "policyVersionId": "uocd7WHz"}], "authType": "EMAILPASSWD", "country": "CYCUdK9W", "dateOfBirth": "MAnYrEGX", "displayName": "IcUrUoKF", "emailAddress": "7sSxu2p2", "password": "bz9CJYCQ", "passwordMD5Sum": "MfyXW3IW", "uniqueDisplayName": "Fr83alM4", "username": "pqdTBNjt", "verified": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicCreateTestUserV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 383 'PublicCreateTestUserV4' test.out

#- 384 PublicCreateUserV4
# body param: body
echo '{"acceptedPolicies": [{"isAccepted": true, "localizedPolicyVersionId": "V3vxLcuL", "policyId": "1ux7XH0l", "policyVersionId": "JoLZx9eM"}, {"isAccepted": false, "localizedPolicyVersionId": "l4yItsyf", "policyId": "jz5kpR8l", "policyVersionId": "yaJw3ct0"}, {"isAccepted": false, "localizedPolicyVersionId": "2akskC6Q", "policyId": "SqwrKTPC", "policyVersionId": "fR6vwkeS"}], "authType": "EMAILPASSWD", "code": "ifryFYQy", "country": "7jkXcB46", "dateOfBirth": "V1tahuKB", "displayName": "vNOdmYuH", "emailAddress": "lQO7W6R2", "password": "B60ZtLYa", "passwordMD5Sum": "nA9OHT7k", "reachMinimumAge": true, "uniqueDisplayName": "45PTNpZk", "username": "ohwPbMU7"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicCreateUserV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 384 'PublicCreateUserV4' test.out

#- 385 CreateUserFromInvitationV4
# body param: body
echo '{"acceptedPolicies": [{"isAccepted": true, "localizedPolicyVersionId": "0SAwdYJr", "policyId": "XYJ7tBDK", "policyVersionId": "jT7J4EJD"}, {"isAccepted": true, "localizedPolicyVersionId": "0kNRnV9w", "policyId": "lHgqvzf0", "policyVersionId": "Cxi4EGNI"}, {"isAccepted": false, "localizedPolicyVersionId": "iL3GzheP", "policyId": "bxe88JCA", "policyVersionId": "g4CL6vno"}], "authType": "EMAILPASSWD", "code": "Z4etUVxM", "country": "kT9OTvG1", "dateOfBirth": "6GEC1E1Z", "displayName": "OEE254hy", "emailAddress": "zPUQDijp", "password": "c2kb3MML", "passwordMD5Sum": "Th3XU8bK", "reachMinimumAge": false, "uniqueDisplayName": "ZYrpbZgA", "username": "ndIpgtho"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op CreateUserFromInvitationV4 \
    --invitationId 'GiSSuXkY' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 385 'CreateUserFromInvitationV4' test.out

#- 386 PublicUpdateUserV4
# body param: body
echo '{"avatarUrl": "KSzcMmRD", "country": "cDpdeN0O", "dateOfBirth": "L51nuIAK", "displayName": "COP9K5sw", "languageTag": "maFGRiAl", "uniqueDisplayName": "Yx4srPvw", "userName": "5NvTqTjk"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpdateUserV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 386 'PublicUpdateUserV4' test.out

#- 387 PublicUpdateUserEmailAddressV4
# body param: body
echo '{"code": "5Ie3D5BN", "emailAddress": "4ijdzwnZ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpdateUserEmailAddressV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 387 'PublicUpdateUserEmailAddressV4' test.out

#- 388 PublicUpgradeHeadlessAccountWithVerificationCodeV4
# body param: body
echo '{"code": "UVMXiUtZ", "country": "PmuLzqLX", "dateOfBirth": "r4zzmXpR", "displayName": "8zy8ZkFY", "emailAddress": "byGVHYNh", "password": "sBvq7mjD", "reachMinimumAge": false, "uniqueDisplayName": "hpdvIktT", "username": "kGIWWSMS", "validateOnly": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpgradeHeadlessAccountWithVerificationCodeV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 388 'PublicUpgradeHeadlessAccountWithVerificationCodeV4' test.out

#- 389 PublicUpgradeHeadlessAccountV4
# body param: body
echo '{"emailAddress": "puWROmKo", "password": "hR0vNrvp", "username": "4SO7s02a"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpgradeHeadlessAccountV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 389 'PublicUpgradeHeadlessAccountV4' test.out

#- 390 PublicDisableMyAuthenticatorV4
# body param: body
echo '{"mfaToken": "CX5w52Bc"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicDisableMyAuthenticatorV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 390 'PublicDisableMyAuthenticatorV4' test.out

#- 391 PublicEnableMyAuthenticatorV4
$CLI_EXE \
    --sn iam \
    --op PublicEnableMyAuthenticatorV4 \
    --namespace $AB_NAMESPACE \
    --code 'AUyTg8rl' \
    > test.out 2>&1
eval_tap $? 391 'PublicEnableMyAuthenticatorV4' test.out

#- 392 PublicGenerateMyAuthenticatorKeyV4
$CLI_EXE \
    --sn iam \
    --op PublicGenerateMyAuthenticatorKeyV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 392 'PublicGenerateMyAuthenticatorKeyV4' test.out

#- 393 PublicGetMyBackupCodesV4
eval_tap 0 393 'PublicGetMyBackupCodesV4 # SKIP deprecated' test.out

#- 394 PublicGenerateMyBackupCodesV4
eval_tap 0 394 'PublicGenerateMyBackupCodesV4 # SKIP deprecated' test.out

#- 395 PublicDisableMyBackupCodesV4
# body param: body
echo '{"mfaToken": "fRA6T5ks"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicDisableMyBackupCodesV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 395 'PublicDisableMyBackupCodesV4' test.out

#- 396 PublicDownloadMyBackupCodesV4
eval_tap 0 396 'PublicDownloadMyBackupCodesV4 # SKIP deprecated' test.out

#- 397 PublicEnableMyBackupCodesV4
eval_tap 0 397 'PublicEnableMyBackupCodesV4 # SKIP deprecated' test.out

#- 398 PublicGetBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op PublicGetBackupCodesV4 \
    --namespace $AB_NAMESPACE \
    --languageTag 'MzWeOcVM' \
    > test.out 2>&1
eval_tap $? 398 'PublicGetBackupCodesV4' test.out

#- 399 PublicGenerateBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op PublicGenerateBackupCodesV4 \
    --namespace $AB_NAMESPACE \
    --languageTag 'DphfbqQf' \
    > test.out 2>&1
eval_tap $? 399 'PublicGenerateBackupCodesV4' test.out

#- 400 PublicEnableBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op PublicEnableBackupCodesV4 \
    --namespace $AB_NAMESPACE \
    --languageTag '9JxmEHDQ' \
    > test.out 2>&1
eval_tap $? 400 'PublicEnableBackupCodesV4' test.out

#- 401 PublicChallengeMyMFAV4
$CLI_EXE \
    --sn iam \
    --op PublicChallengeMyMFAV4 \
    --namespace $AB_NAMESPACE \
    --code 'MvEL4Od0' \
    --factor 'yG5JNYVs' \
    > test.out 2>&1
eval_tap $? 401 'PublicChallengeMyMFAV4' test.out

#- 402 PublicRemoveTrustedDeviceV4
$CLI_EXE \
    --sn iam \
    --op PublicRemoveTrustedDeviceV4 \
    --namespace $AB_NAMESPACE \
    --device_token 'QHznaCPT' \
    > test.out 2>&1
eval_tap $? 402 'PublicRemoveTrustedDeviceV4' test.out

#- 403 PublicSendMyMFAEmailCodeV4
$CLI_EXE \
    --sn iam \
    --op PublicSendMyMFAEmailCodeV4 \
    --namespace $AB_NAMESPACE \
    --action 'k3bXJDeo' \
    --languageTag 'l4aSGdKm' \
    > test.out 2>&1
eval_tap $? 403 'PublicSendMyMFAEmailCodeV4' test.out

#- 404 PublicDisableMyEmailV4
# body param: body
echo '{"mfaToken": "20TlojZJ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicDisableMyEmailV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 404 'PublicDisableMyEmailV4' test.out

#- 405 PublicEnableMyEmailV4
$CLI_EXE \
    --sn iam \
    --op PublicEnableMyEmailV4 \
    --namespace $AB_NAMESPACE \
    --code 'kOwdUh8j' \
    > test.out 2>&1
eval_tap $? 405 'PublicEnableMyEmailV4' test.out

#- 406 PublicGetMyEnabledFactorsV4
$CLI_EXE \
    --sn iam \
    --op PublicGetMyEnabledFactorsV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 406 'PublicGetMyEnabledFactorsV4' test.out

#- 407 PublicMakeFactorMyDefaultV4
$CLI_EXE \
    --sn iam \
    --op PublicMakeFactorMyDefaultV4 \
    --namespace $AB_NAMESPACE \
    --factor 'ZJDFSJl7' \
    > test.out 2>&1
eval_tap $? 407 'PublicMakeFactorMyDefaultV4' test.out

#- 408 PublicGetMyOwnMFAStatusV4
$CLI_EXE \
    --sn iam \
    --op PublicGetMyOwnMFAStatusV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 408 'PublicGetMyOwnMFAStatusV4' test.out

#- 409 PublicGetMyMFAStatusV4
eval_tap 0 409 'PublicGetMyMFAStatusV4 # SKIP deprecated' test.out

#- 410 PublicGetUserPublicInfoByUserIdV4
$CLI_EXE \
    --sn iam \
    --op PublicGetUserPublicInfoByUserIdV4 \
    --namespace $AB_NAMESPACE \
    --userId '2SG12ri7' \
    > test.out 2>&1
eval_tap $? 410 'PublicGetUserPublicInfoByUserIdV4' test.out

#- 411 PublicInviteUserV4
# body param: body
echo '{"additionalData": "ROWn5Bl1", "emailAddress": "Zxdcj02W", "languageTag": "7a3Dm7rr", "namespace": "vjQVpOtu", "namespaceDisplayName": "GNJ0kWzo"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicInviteUserV4 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 411 'PublicInviteUserV4' test.out


# remove artifacts
rm -f "$CLI_TOKEN_FILE"
rm -f "$TEMP_JSON_INPUT"
rm -f "$TEMP_FILE_UPLOAD"

exit $EXIT_CODE