#!/usr/bin/env bash

# Copyright (c) 2021 AccelByte Inc. All Rights Reserved.
# This is licensed software from AccelByte Inc, for limitations
# and restrictions contact your company contract manager.

# This code is generated by tool. DO NOT EDIT.

# Meta:
# - random seed: 
# - template file: 

# Instructions:
# - Run the Justice SDK Mock Server first before running this script.

export AB_BASE_URL="http://127.0.0.1:8080"
export AB_CLIENT_ID="admin"
export AB_CLIENT_SECRET="admin"
export AB_NAMESPACE="test"
export AB_APP_NAME="UnitTest"

EXIT_CODE=0

eval_tap() {
  if [ $1 -eq 0 ]; then
    echo "ok $2 - $3"
  else
    EXIT_CODE=1
    echo "not ok $2 - $3"
    sed 's/^/# /g' $4
  fi
  rm -f $4
}

CLI_EXE="AccelByte.Sdk.Sample.Cli"
CLI_TOKEN_FILE="$(dirname "$(which $CLI_EXE)")/token.json"
TEMP_JSON_INPUT="input_json.json"
TEMP_FILE_UPLOAD="file_upload.bin"

echo "TAP version 13"
echo "1..389"

#- 1 Login
$CLI_EXE --op login --lt user --user user --pass user > test.out 2>&1
eval_tap $? 1 'Login' test.out

if [ $EXIT_CODE -ne 0 ]; then
  echo "Bail out! Login failed."
  exit $EXIT_CODE
fi

# echo "foo" > "$CLI_TOKEN_FILE"

#- 2 GetBansType
eval_tap 0 2 'GetBansType # SKIP deprecated' test.out

#- 3 GetListBanReason
eval_tap 0 3 'GetListBanReason # SKIP deprecated' test.out

#- 4 GetClients
eval_tap 0 4 'GetClients # SKIP deprecated' test.out

#- 5 CreateClient
eval_tap 0 5 'CreateClient # SKIP deprecated' test.out

#- 6 GetClient
eval_tap 0 6 'GetClient # SKIP deprecated' test.out

#- 7 UpdateClient
eval_tap 0 7 'UpdateClient # SKIP deprecated' test.out

#- 8 DeleteClient
eval_tap 0 8 'DeleteClient # SKIP deprecated' test.out

#- 9 UpdateClientPermission
eval_tap 0 9 'UpdateClientPermission # SKIP deprecated' test.out

#- 10 AddClientPermission
eval_tap 0 10 'AddClientPermission # SKIP deprecated' test.out

#- 11 DeleteClientPermission
eval_tap 0 11 'DeleteClientPermission # SKIP deprecated' test.out

#- 12 UpdateClientSecret
eval_tap 0 12 'UpdateClientSecret # SKIP deprecated' test.out

#- 13 GetClientsbyNamespace
eval_tap 0 13 'GetClientsbyNamespace # SKIP deprecated' test.out

#- 14 CreateClientByNamespace
eval_tap 0 14 'CreateClientByNamespace # SKIP deprecated' test.out

#- 15 DeleteClientByNamespace
eval_tap 0 15 'DeleteClientByNamespace # SKIP deprecated' test.out

#- 16 CreateUser
eval_tap 0 16 'CreateUser # SKIP deprecated' test.out

#- 17 GetAdminUsersByRoleID
eval_tap 0 17 'GetAdminUsersByRoleID # SKIP deprecated' test.out

#- 18 GetUserByLoginID
eval_tap 0 18 'GetUserByLoginID # SKIP deprecated' test.out

#- 19 GetUserByPlatformUserID
eval_tap 0 19 'GetUserByPlatformUserID # SKIP deprecated' test.out

#- 20 ForgotPassword
eval_tap 0 20 'ForgotPassword # SKIP deprecated' test.out

#- 21 GetUsersByLoginIds
eval_tap 0 21 'GetUsersByLoginIds # SKIP deprecated' test.out

#- 22 ResetPassword
eval_tap 0 22 'ResetPassword # SKIP deprecated' test.out

#- 23 SearchUser
eval_tap 0 23 'SearchUser # SKIP deprecated' test.out

#- 24 GetUserByUserID
eval_tap 0 24 'GetUserByUserID # SKIP deprecated' test.out

#- 25 UpdateUser
eval_tap 0 25 'UpdateUser # SKIP deprecated' test.out

#- 26 DeleteUser
eval_tap 0 26 'DeleteUser # SKIP deprecated' test.out

#- 27 BanUser
eval_tap 0 27 'BanUser # SKIP deprecated' test.out

#- 28 GetUserBanHistory
eval_tap 0 28 'GetUserBanHistory # SKIP deprecated' test.out

#- 29 DisableUserBan
eval_tap 0 29 'DisableUserBan # SKIP deprecated' test.out

#- 30 EnableUserBan
eval_tap 0 30 'EnableUserBan # SKIP deprecated' test.out

#- 31 ListCrossNamespaceAccountLink
eval_tap 0 31 'ListCrossNamespaceAccountLink # SKIP deprecated' test.out

#- 32 DisableUser
eval_tap 0 32 'DisableUser # SKIP deprecated' test.out

#- 33 EnableUser
eval_tap 0 33 'EnableUser # SKIP deprecated' test.out

#- 34 GetUserInformation
eval_tap 0 34 'GetUserInformation # SKIP deprecated' test.out

#- 35 DeleteUserInformation
eval_tap 0 35 'DeleteUserInformation # SKIP deprecated' test.out

#- 36 GetUserLoginHistories
eval_tap 0 36 'GetUserLoginHistories # SKIP deprecated' test.out

#- 37 UpdatePassword
eval_tap 0 37 'UpdatePassword # SKIP deprecated' test.out

#- 38 SaveUserPermission
eval_tap 0 38 'SaveUserPermission # SKIP deprecated' test.out

#- 39 AddUserPermission
eval_tap 0 39 'AddUserPermission # SKIP deprecated' test.out

#- 40 DeleteUserPermission
eval_tap 0 40 'DeleteUserPermission # SKIP deprecated' test.out

#- 41 GetUserPlatformAccounts
eval_tap 0 41 'GetUserPlatformAccounts # SKIP deprecated' test.out

#- 42 GetUserMapping
eval_tap 0 42 'GetUserMapping # SKIP deprecated' test.out

#- 43 GetUserJusticePlatformAccount
eval_tap 0 43 'GetUserJusticePlatformAccount # SKIP deprecated' test.out

#- 44 PlatformLink
eval_tap 0 44 'PlatformLink # SKIP deprecated' test.out

#- 45 PlatformUnlink
eval_tap 0 45 'PlatformUnlink # SKIP deprecated' test.out

#- 46 GetPublisherUser
eval_tap 0 46 'GetPublisherUser # SKIP deprecated' test.out

#- 47 SaveUserRoles
eval_tap 0 47 'SaveUserRoles # SKIP deprecated' test.out

#- 48 AddUserRole
eval_tap 0 48 'AddUserRole # SKIP deprecated' test.out

#- 49 DeleteUserRole
eval_tap 0 49 'DeleteUserRole # SKIP deprecated' test.out

#- 50 UpgradeHeadlessAccount
eval_tap 0 50 'UpgradeHeadlessAccount # SKIP deprecated' test.out

#- 51 UpgradeHeadlessAccountWithVerificationCode
eval_tap 0 51 'UpgradeHeadlessAccountWithVerificationCode # SKIP deprecated' test.out

#- 52 UserVerification
eval_tap 0 52 'UserVerification # SKIP deprecated' test.out

#- 53 SendVerificationCode
eval_tap 0 53 'SendVerificationCode # SKIP deprecated' test.out

#- 54 Authorization
eval_tap 0 54 'Authorization # SKIP deprecated' test.out

#- 55 GetJWKS
eval_tap 0 55 'GetJWKS # SKIP deprecated' test.out

#- 56 PlatformTokenRequestHandler
eval_tap 0 56 'PlatformTokenRequestHandler # SKIP deprecated' test.out

#- 57 RevokeUser
eval_tap 0 57 'RevokeUser # SKIP deprecated' test.out

#- 58 GetRevocationList
eval_tap 0 58 'GetRevocationList # SKIP deprecated' test.out

#- 59 RevokeToken
eval_tap 0 59 'RevokeToken # SKIP deprecated' test.out

#- 60 RevokeAUser
eval_tap 0 60 'RevokeAUser # SKIP deprecated' test.out

#- 61 TokenGrant
eval_tap 0 61 'TokenGrant # SKIP deprecated' test.out

#- 62 VerifyToken
eval_tap 0 62 'VerifyToken # SKIP deprecated' test.out

#- 63 GetRoles
eval_tap 0 63 'GetRoles # SKIP deprecated' test.out

#- 64 CreateRole
eval_tap 0 64 'CreateRole # SKIP deprecated' test.out

#- 65 GetRole
eval_tap 0 65 'GetRole # SKIP deprecated' test.out

#- 66 UpdateRole
eval_tap 0 66 'UpdateRole # SKIP deprecated' test.out

#- 67 DeleteRole
eval_tap 0 67 'DeleteRole # SKIP deprecated' test.out

#- 68 GetRoleAdminStatus
eval_tap 0 68 'GetRoleAdminStatus # SKIP deprecated' test.out

#- 69 SetRoleAsAdmin
eval_tap 0 69 'SetRoleAsAdmin # SKIP deprecated' test.out

#- 70 RemoveRoleAdmin
eval_tap 0 70 'RemoveRoleAdmin # SKIP deprecated' test.out

#- 71 GetRoleManagers
eval_tap 0 71 'GetRoleManagers # SKIP deprecated' test.out

#- 72 AddRoleManagers
eval_tap 0 72 'AddRoleManagers # SKIP deprecated' test.out

#- 73 RemoveRoleManagers
eval_tap 0 73 'RemoveRoleManagers # SKIP deprecated' test.out

#- 74 GetRoleMembers
eval_tap 0 74 'GetRoleMembers # SKIP deprecated' test.out

#- 75 AddRoleMembers
eval_tap 0 75 'AddRoleMembers # SKIP deprecated' test.out

#- 76 RemoveRoleMembers
eval_tap 0 76 'RemoveRoleMembers # SKIP deprecated' test.out

#- 77 UpdateRolePermissions
eval_tap 0 77 'UpdateRolePermissions # SKIP deprecated' test.out

#- 78 AddRolePermission
eval_tap 0 78 'AddRolePermission # SKIP deprecated' test.out

#- 79 DeleteRolePermission
eval_tap 0 79 'DeleteRolePermission # SKIP deprecated' test.out

#- 80 AdminGetAgeRestrictionStatusV2
eval_tap 0 80 'AdminGetAgeRestrictionStatusV2 # SKIP deprecated' test.out

#- 81 AdminUpdateAgeRestrictionConfigV2
eval_tap 0 81 'AdminUpdateAgeRestrictionConfigV2 # SKIP deprecated' test.out

#- 82 GetListCountryAgeRestriction
eval_tap 0 82 'GetListCountryAgeRestriction # SKIP deprecated' test.out

#- 83 UpdateCountryAgeRestriction
eval_tap 0 83 'UpdateCountryAgeRestriction # SKIP deprecated' test.out

#- 84 AdminSearchUsersV2
eval_tap 0 84 'AdminSearchUsersV2 # SKIP deprecated' test.out

#- 85 AdminGetUserByUserIdV2
eval_tap 0 85 'AdminGetUserByUserIdV2 # SKIP deprecated' test.out

#- 86 AdminUpdateUserV2
eval_tap 0 86 'AdminUpdateUserV2 # SKIP deprecated' test.out

#- 87 AdminBanUserV2
eval_tap 0 87 'AdminBanUserV2 # SKIP deprecated' test.out

#- 88 AdminGetUserBanV2
eval_tap 0 88 'AdminGetUserBanV2 # SKIP deprecated' test.out

#- 89 AdminDisableUserV2
eval_tap 0 89 'AdminDisableUserV2 # SKIP deprecated' test.out

#- 90 AdminEnableUserV2
eval_tap 0 90 'AdminEnableUserV2 # SKIP deprecated' test.out

#- 91 AdminResetPasswordV2
eval_tap 0 91 'AdminResetPasswordV2 # SKIP deprecated' test.out

#- 92 AdminDeletePlatformLinkV2
eval_tap 0 92 'AdminDeletePlatformLinkV2 # SKIP deprecated' test.out

#- 93 AdminPutUserRolesV2
eval_tap 0 93 'AdminPutUserRolesV2 # SKIP deprecated' test.out

#- 94 AdminCreateUserRolesV2
eval_tap 0 94 'AdminCreateUserRolesV2 # SKIP deprecated' test.out

#- 95 PublicGetCountryAgeRestriction
eval_tap 0 95 'PublicGetCountryAgeRestriction # SKIP deprecated' test.out

#- 96 PublicCreateUserV2
eval_tap 0 96 'PublicCreateUserV2 # SKIP deprecated' test.out

#- 97 PublicForgotPasswordV2
eval_tap 0 97 'PublicForgotPasswordV2 # SKIP deprecated' test.out

#- 98 PublicResetPasswordV2
eval_tap 0 98 'PublicResetPasswordV2 # SKIP deprecated' test.out

#- 99 PublicGetUserByUserIDV2
eval_tap 0 99 'PublicGetUserByUserIDV2 # SKIP deprecated' test.out

#- 100 PublicUpdateUserV2
eval_tap 0 100 'PublicUpdateUserV2 # SKIP deprecated' test.out

#- 101 PublicGetUserBan
eval_tap 0 101 'PublicGetUserBan # SKIP deprecated' test.out

#- 102 PublicUpdatePasswordV2
eval_tap 0 102 'PublicUpdatePasswordV2 # SKIP deprecated' test.out

#- 103 GetListJusticePlatformAccounts
eval_tap 0 103 'GetListJusticePlatformAccounts # SKIP deprecated' test.out

#- 104 PublicPlatformLinkV2
eval_tap 0 104 'PublicPlatformLinkV2 # SKIP deprecated' test.out

#- 105 PublicDeletePlatformLinkV2
eval_tap 0 105 'PublicDeletePlatformLinkV2 # SKIP deprecated' test.out

#- 106 AdminGetBansTypeV3
$CLI_EXE \
    --sn iam \
    --op AdminGetBansTypeV3 \
    > test.out 2>&1
eval_tap $? 106 'AdminGetBansTypeV3' test.out

#- 107 AdminGetListBanReasonV3
$CLI_EXE \
    --sn iam \
    --op AdminGetListBanReasonV3 \
    > test.out 2>&1
eval_tap $? 107 'AdminGetListBanReasonV3' test.out

#- 108 AdminListClientAvailablePermissions
$CLI_EXE \
    --sn iam \
    --op AdminListClientAvailablePermissions \
    --excludePermissions 'true' \
    > test.out 2>&1
eval_tap $? 108 'AdminListClientAvailablePermissions' test.out

#- 109 AdminUpdateAvailablePermissionsByModule
# body param: body
echo '{"modules": [{"docLink": "oXvPFVc0", "groups": [{"group": "EBfBiA2V", "groupId": "1EwrM9wa", "permissions": [{"allowedActions": [25, 36, 28], "resource": "CVYQywRx"}, {"allowedActions": [100, 29, 60], "resource": "n5vMqMne"}, {"allowedActions": [73, 61, 16], "resource": "BpzNpJtx"}]}, {"group": "ONWE3r6H", "groupId": "7DwiPr5R", "permissions": [{"allowedActions": [37, 25, 95], "resource": "aYQP9CmU"}, {"allowedActions": [55, 51, 55], "resource": "sifHiRzX"}, {"allowedActions": [7, 35, 5], "resource": "A6hccZ4I"}]}, {"group": "zaiVVcqz", "groupId": "SygXRv69", "permissions": [{"allowedActions": [45, 14, 31], "resource": "lgo0mw0S"}, {"allowedActions": [48, 53, 36], "resource": "xNTa7BpA"}, {"allowedActions": [38, 48, 100], "resource": "tx7Hexr4"}]}], "module": "z69nwUjl", "moduleId": "kzg2dmRQ"}, {"docLink": "NA9MVYVC", "groups": [{"group": "5qNujOnc", "groupId": "6IWto9wI", "permissions": [{"allowedActions": [100, 26, 60], "resource": "Vc7c42zm"}, {"allowedActions": [24, 31, 59], "resource": "zbC0eFSo"}, {"allowedActions": [54, 33, 48], "resource": "d0qrO6jg"}]}, {"group": "wARrhIx4", "groupId": "kKCzLfvY", "permissions": [{"allowedActions": [19, 86, 70], "resource": "TX7fuh9P"}, {"allowedActions": [74, 67, 56], "resource": "oaavC3m7"}, {"allowedActions": [4, 1, 82], "resource": "QMNxlXk4"}]}, {"group": "zsMF8mLD", "groupId": "mUK3nMl9", "permissions": [{"allowedActions": [71, 58, 31], "resource": "82R2X16i"}, {"allowedActions": [13, 71, 94], "resource": "cy0PjKYb"}, {"allowedActions": [85, 53, 32], "resource": "6qf9YO8d"}]}], "module": "ucYLpoFp", "moduleId": "0ML12f4E"}, {"docLink": "e00TCiey", "groups": [{"group": "3GzY91E3", "groupId": "xjHpfUGd", "permissions": [{"allowedActions": [55, 21, 3], "resource": "0Kqt11O2"}, {"allowedActions": [98, 92, 21], "resource": "Yo5HPi3M"}, {"allowedActions": [65, 13, 71], "resource": "yCNIGEbr"}]}, {"group": "9HZ4RbBv", "groupId": "n66onWu1", "permissions": [{"allowedActions": [50, 70, 70], "resource": "BPMMT5qr"}, {"allowedActions": [100, 57, 18], "resource": "q66oNB5M"}, {"allowedActions": [61, 13, 72], "resource": "bAGjlKIh"}]}, {"group": "N5xpMHuW", "groupId": "WaYH52rF", "permissions": [{"allowedActions": [36, 40, 25], "resource": "QgANnC8y"}, {"allowedActions": [30, 11, 47], "resource": "hGfGnp2i"}, {"allowedActions": [65, 68, 98], "resource": "069ur4xp"}]}], "module": "WEZLEIcS", "moduleId": "zXqHHWCf"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateAvailablePermissionsByModule \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 109 'AdminUpdateAvailablePermissionsByModule' test.out

#- 110 AdminDeleteConfigPermissionsByGroup
# body param: body
echo '{"groupId": "xPLKOw0A", "moduleId": "Qgd1nyza"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDeleteConfigPermissionsByGroup \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 110 'AdminDeleteConfigPermissionsByGroup' test.out

#- 111 AdminListClientTemplates
$CLI_EXE \
    --sn iam \
    --op AdminListClientTemplates \
    > test.out 2>&1
eval_tap $? 111 'AdminListClientTemplates' test.out

#- 112 AdminGetInputValidations
$CLI_EXE \
    --sn iam \
    --op AdminGetInputValidations \
    > test.out 2>&1
eval_tap $? 112 'AdminGetInputValidations' test.out

#- 113 AdminUpdateInputValidations
# body param: body
echo '[{"field": "piLNJj15", "validation": {"allowAllSpecialCharacters": false, "allowDigit": true, "allowLetter": true, "allowSpace": false, "allowUnicode": true, "avatarConfig": {"allowedPrefixes": ["hWKboLgD", "rBWSOh0H", "bmyHIM4h"], "preferRegex": true, "regex": "TiGod9Rv"}, "blockedWord": ["kBHvo4Oz", "6T16dtzq", "K6DXheVn"], "description": [{"language": "MyCPIehj", "message": ["a51icq1W", "KWtDXakn", "eP97vVBB"]}, {"language": "zY43Cfkh", "message": ["k5yzvDXS", "jIeyjqet", "I1ibWVUb"]}, {"language": "NJEdxCWz", "message": ["bn08pLuO", "Yxwh1wUV", "uEVXqXhU"]}], "isCustomRegex": false, "letterCase": "EvHUggjT", "maxLength": 43, "maxRepeatingAlphaNum": 52, "maxRepeatingSpecialCharacter": 16, "minCharType": 26, "minLength": 26, "regex": "OwXOGP2Z", "specialCharacterLocation": "BPJfGm0N", "specialCharacters": ["tL4MaIeN", "Qsvxd3AF", "4HOESDus"]}}, {"field": "hrFCDkGG", "validation": {"allowAllSpecialCharacters": true, "allowDigit": true, "allowLetter": true, "allowSpace": false, "allowUnicode": true, "avatarConfig": {"allowedPrefixes": ["AXvTvOmX", "AZE8l7wP", "s514OXG9"], "preferRegex": false, "regex": "4XhXMbaR"}, "blockedWord": ["Out2EBOf", "NJCIKkOM", "iGLs1CFL"], "description": [{"language": "Dzyh8mAm", "message": ["SqIM3M3f", "4irjIcny", "omr2hVHo"]}, {"language": "wIxA33cl", "message": ["IzCPguvv", "3xYPwXlK", "GwJ8Hq3e"]}, {"language": "VDEMPwF6", "message": ["BXUp57W6", "i6J0k0VV", "5jTNumxZ"]}], "isCustomRegex": true, "letterCase": "94ciG3Ax", "maxLength": 1, "maxRepeatingAlphaNum": 26, "maxRepeatingSpecialCharacter": 92, "minCharType": 30, "minLength": 64, "regex": "vc1RMos1", "specialCharacterLocation": "Xj063DiW", "specialCharacters": ["64nKXF8i", "Ty6IPMrA", "fsps72RT"]}}, {"field": "OF4jBbP0", "validation": {"allowAllSpecialCharacters": true, "allowDigit": false, "allowLetter": true, "allowSpace": false, "allowUnicode": false, "avatarConfig": {"allowedPrefixes": ["l764Juwc", "J1CMHdiu", "p3ZJK4Xz"], "preferRegex": true, "regex": "Z6GZ2nxW"}, "blockedWord": ["biyr3czF", "zLO7IhrJ", "1PyaCxDg"], "description": [{"language": "UNZu4gR5", "message": ["DcTMAdeZ", "IxqeOFGt", "YpWLkgVn"]}, {"language": "PSpNk2EQ", "message": ["x4r29XjJ", "gzoyNIQW", "LyumUAAN"]}, {"language": "eOqXS5UI", "message": ["F53qYkNQ", "RCcDuaOW", "JPgJekQ3"]}], "isCustomRegex": true, "letterCase": "fZnTigKD", "maxLength": 54, "maxRepeatingAlphaNum": 70, "maxRepeatingSpecialCharacter": 50, "minCharType": 72, "minLength": 93, "regex": "9vA9eYyF", "specialCharacterLocation": "R27Ws6g4", "specialCharacters": ["QGwyBXx0", "R0YDwMa4", "FXLGE1xh"]}}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateInputValidations \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 113 'AdminUpdateInputValidations' test.out

#- 114 AdminResetInputValidations
$CLI_EXE \
    --sn iam \
    --op AdminResetInputValidations \
    --field 'fkZ4tDdx' \
    > test.out 2>&1
eval_tap $? 114 'AdminResetInputValidations' test.out

#- 115 ListAdminsV3
$CLI_EXE \
    --sn iam \
    --op ListAdminsV3 \
    --namespace $AB_NAMESPACE \
    --after 'Kw7T8dXA' \
    --before '7oU6TWKU' \
    --endDate 'HgxvmuMw' \
    --limit '2' \
    --query 'ckKnamst' \
    --roleId 'thOFYbAj' \
    --startDate 'ed96lqI4' \
    > test.out 2>&1
eval_tap $? 115 'ListAdminsV3' test.out

#- 116 AdminGetAgeRestrictionStatusV3
$CLI_EXE \
    --sn iam \
    --op AdminGetAgeRestrictionStatusV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 116 'AdminGetAgeRestrictionStatusV3' test.out

#- 117 AdminUpdateAgeRestrictionConfigV3
# body param: body
echo '{"ageRestriction": 14, "enable": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateAgeRestrictionConfigV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 117 'AdminUpdateAgeRestrictionConfigV3' test.out

#- 118 AdminGetListCountryAgeRestrictionV3
$CLI_EXE \
    --sn iam \
    --op AdminGetListCountryAgeRestrictionV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 118 'AdminGetListCountryAgeRestrictionV3' test.out

#- 119 AdminUpdateCountryAgeRestrictionV3
# body param: body
echo '{"ageRestriction": 14}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateCountryAgeRestrictionV3 \
    --countryCode 'Ue8CxfMl' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 119 'AdminUpdateCountryAgeRestrictionV3' test.out

#- 120 AdminGetBannedUsersV3
$CLI_EXE \
    --sn iam \
    --op AdminGetBannedUsersV3 \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --banType 'FVqooQfV' \
    --limit '36' \
    --offset '93' \
    > test.out 2>&1
eval_tap $? 120 'AdminGetBannedUsersV3' test.out

#- 121 AdminBanUserBulkV3
# body param: body
echo '{"ban": "1hwLP3Wu", "comment": "9dHBIfWT", "endDate": "Ad5fWWJ8", "reason": "8xCiwTXf", "skipNotif": true, "userIds": ["DvRzT0bM", "rXtISAkg", "HsIvTzRM"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBanUserBulkV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 121 'AdminBanUserBulkV3' test.out

#- 122 AdminUnbanUserBulkV3
# body param: body
echo '{"bans": [{"banId": "RUCYWJz2", "userId": "AlnTfS0q"}, {"banId": "J6xhHr0c", "userId": "pmuHG5V6"}, {"banId": "gV0VPXCH", "userId": "hHO2rT22"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUnbanUserBulkV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 122 'AdminUnbanUserBulkV3' test.out

#- 123 AdminGetBansTypeWithNamespaceV3
$CLI_EXE \
    --sn iam \
    --op AdminGetBansTypeWithNamespaceV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 123 'AdminGetBansTypeWithNamespaceV3' test.out

#- 124 AdminGetClientsByNamespaceV3
$CLI_EXE \
    --sn iam \
    --op AdminGetClientsByNamespaceV3 \
    --namespace $AB_NAMESPACE \
    --clientId 'X1BDb8cg' \
    --clientName 'tYuQrvDR' \
    --clientType 'yfMDA9vV' \
    --limit '61' \
    --offset '64' \
    --skipLoginQueue 'false' \
    > test.out 2>&1
eval_tap $? 124 'AdminGetClientsByNamespaceV3' test.out

#- 125 AdminCreateClientV3
# body param: body
echo '{"audiences": ["lQ6j6DBc", "geNT7U6d", "btUW53ht"], "baseUri": "sKlM3Yb0", "clientId": "LQJoI1Gt", "clientName": "6kXk0Wt1", "clientPermissions": [{"action": 42, "resource": "4A6GgQoT", "schedAction": 45, "schedCron": "hfvyNt6F", "schedRange": ["SW8xuQ9g", "DcCeqcnk", "VJ5WUHtJ"]}, {"action": 52, "resource": "pApApx4w", "schedAction": 1, "schedCron": "Xbd6HAkp", "schedRange": ["6KUULUzh", "uzM5cDgV", "lIL6MCTs"]}, {"action": 99, "resource": "Xyovk4xC", "schedAction": 26, "schedCron": "OihXJj6J", "schedRange": ["1DfeXmHD", "DaJTnOJl", "aCQmtrXH"]}], "clientPlatform": "emmnNFX1", "deletable": true, "description": "NhQkwjMM", "modulePermissions": [{"moduleId": "Vw8Bp48T", "selectedGroups": [{"groupId": "vxKnaFk8", "selectedActions": [27, 54, 15]}, {"groupId": "aFERLZuT", "selectedActions": [41, 51, 90]}, {"groupId": "X9KQ8CPC", "selectedActions": [99, 23, 6]}]}, {"moduleId": "RvSvxUWB", "selectedGroups": [{"groupId": "9GPuDf0U", "selectedActions": [25, 65, 54]}, {"groupId": "wHZ19thn", "selectedActions": [51, 99, 22]}, {"groupId": "lv7qTmlX", "selectedActions": [88, 88, 15]}]}, {"moduleId": "7T2O56on", "selectedGroups": [{"groupId": "gO8r7mLR", "selectedActions": [4, 12, 0]}, {"groupId": "btUQp7eB", "selectedActions": [67, 42, 31]}, {"groupId": "b6nxytIu", "selectedActions": [100, 53, 43]}]}], "namespace": "47dLQAyV", "oauthAccessTokenExpiration": 84, "oauthAccessTokenExpirationTimeUnit": "h95qcVP8", "oauthClientType": "4tJ34N6M", "oauthRefreshTokenExpiration": 63, "oauthRefreshTokenExpirationTimeUnit": "ZEXgjbcX", "parentNamespace": "41t7F2Bo", "redirectUri": "2OuhtCjI", "scopes": ["8AAC7hb2", "BTTiTaiP", "rFtTLxLG"], "secret": "qAElv6l4", "skipLoginQueue": false, "twoFactorEnabled": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminCreateClientV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 125 'AdminCreateClientV3' test.out

#- 126 AdminGetClientsbyNamespacebyIDV3
$CLI_EXE \
    --sn iam \
    --op AdminGetClientsbyNamespacebyIDV3 \
    --clientId 'zYSkjss8' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 126 'AdminGetClientsbyNamespacebyIDV3' test.out

#- 127 AdminDeleteClientV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteClientV3 \
    --clientId '7psqBtlj' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 127 'AdminDeleteClientV3' test.out

#- 128 AdminUpdateClientV3
# body param: body
echo '{"audiences": ["Y14my6wQ", "krFWeE9J", "zatSp2FG"], "baseUri": "mfSqsmle", "clientName": "ZdxGYGC2", "clientPermissions": [{"action": 67, "resource": "awgw67cf", "schedAction": 92, "schedCron": "RO2Y4bJL", "schedRange": ["3jINXypZ", "Uda99zIZ", "PCmlPbek"]}, {"action": 57, "resource": "5piVC8Qd", "schedAction": 39, "schedCron": "xbB4t3KS", "schedRange": ["KaG58Npp", "yo0Rw5r7", "bC9TE0L6"]}, {"action": 51, "resource": "PUEF2evz", "schedAction": 78, "schedCron": "pQ4Ku8dC", "schedRange": ["BeSUJNeW", "X6dnfUH5", "sPVIqGVd"]}], "clientPlatform": "Yu6EWmyy", "deletable": true, "description": "pwHENhZD", "modulePermissions": [{"moduleId": "Cs6mUXZp", "selectedGroups": [{"groupId": "gONlc951", "selectedActions": [3, 89, 96]}, {"groupId": "21ER264j", "selectedActions": [25, 62, 77]}, {"groupId": "JlOEOJH8", "selectedActions": [78, 1, 94]}]}, {"moduleId": "NRmVQy2n", "selectedGroups": [{"groupId": "0wuRT57u", "selectedActions": [58, 34, 34]}, {"groupId": "sk0hMJWp", "selectedActions": [78, 62, 79]}, {"groupId": "6fRacP2H", "selectedActions": [92, 13, 43]}]}, {"moduleId": "oGRwIJ8H", "selectedGroups": [{"groupId": "V99x7l6t", "selectedActions": [94, 19, 18]}, {"groupId": "rAcJ8Arf", "selectedActions": [98, 67, 16]}, {"groupId": "etkHPmsr", "selectedActions": [31, 63, 10]}]}], "namespace": "kIA6Ue1d", "oauthAccessTokenExpiration": 24, "oauthAccessTokenExpirationTimeUnit": "4EH46ZtY", "oauthRefreshTokenExpiration": 16, "oauthRefreshTokenExpirationTimeUnit": "yrOIzxdO", "redirectUri": "gHkpXYVP", "scopes": ["R3AMkdas", "XEIrcjIq", "cx9SHbDG"], "skipLoginQueue": true, "twoFactorEnabled": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateClientV3 \
    --clientId 'DO4vjYnb' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 128 'AdminUpdateClientV3' test.out

#- 129 AdminUpdateClientPermissionV3
# body param: body
echo '{"permissions": [{"action": 86, "resource": "nAWbVpCc"}, {"action": 4, "resource": "2lpkW23M"}, {"action": 76, "resource": "LYFimjZt"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateClientPermissionV3 \
    --clientId 'BcadH0zX' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 129 'AdminUpdateClientPermissionV3' test.out

#- 130 AdminAddClientPermissionsV3
# body param: body
echo '{"permissions": [{"action": 93, "resource": "vu3h7GdD"}, {"action": 60, "resource": "0AICiBxN"}, {"action": 2, "resource": "OB6gUlP0"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddClientPermissionsV3 \
    --clientId 'ErLbrC3i' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 130 'AdminAddClientPermissionsV3' test.out

#- 131 AdminDeleteClientPermissionV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteClientPermissionV3 \
    --action '92' \
    --clientId 'wBjOSiNn' \
    --namespace $AB_NAMESPACE \
    --resource 'UGnwZsCt' \
    > test.out 2>&1
eval_tap $? 131 'AdminDeleteClientPermissionV3' test.out

#- 132 AdminGetConfigValueV3
$CLI_EXE \
    --sn iam \
    --op AdminGetConfigValueV3 \
    --configKey 'flPaRwBU' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 132 'AdminGetConfigValueV3' test.out

#- 133 AdminGetCountryListV3
$CLI_EXE \
    --sn iam \
    --op AdminGetCountryListV3 \
    --namespace $AB_NAMESPACE \
    --filterBlacklist 'false' \
    > test.out 2>&1
eval_tap $? 133 'AdminGetCountryListV3' test.out

#- 134 AdminGetCountryBlacklistV3
$CLI_EXE \
    --sn iam \
    --op AdminGetCountryBlacklistV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 134 'AdminGetCountryBlacklistV3' test.out

#- 135 AdminAddCountryBlacklistV3
# body param: body
echo '{"blacklist": ["2RyKJqO2", "OE4590V7", "9YedMvhH"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddCountryBlacklistV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 135 'AdminAddCountryBlacklistV3' test.out

#- 136 RetrieveAllThirdPartyLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op RetrieveAllThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 136 'RetrieveAllThirdPartyLoginPlatformCredentialV3' test.out

#- 137 RetrieveAllActiveThirdPartyLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op RetrieveAllActiveThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 137 'RetrieveAllActiveThirdPartyLoginPlatformCredentialV3' test.out

#- 138 RetrieveAllSSOLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op RetrieveAllSSOLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --limit '70' \
    --offset '15' \
    > test.out 2>&1
eval_tap $? 138 'RetrieveAllSSOLoginPlatformCredentialV3' test.out

#- 139 RetrieveThirdPartyLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op RetrieveThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'v76qnZGq' \
    > test.out 2>&1
eval_tap $? 139 'RetrieveThirdPartyLoginPlatformCredentialV3' test.out

#- 140 AddThirdPartyLoginPlatformCredentialV3
# body param: body
echo '{"ACSURL": "EPuzQAEs", "AWSCognitoRegion": "rZDgzjjJ", "AWSCognitoUserPool": "jjI3J81n", "AllowedClients": ["rGvgXrKA", "AcJkC39D", "WCIdWIhj"], "AppId": "9kBltspx", "AuthorizationEndpoint": "k1EIRZGn", "ClientId": "wWZSm4Px", "Environment": "yCLfHZUP", "FederationMetadataURL": "NeWRavct", "GenericOauthFlow": true, "IsActive": true, "Issuer": "Udt0DsP5", "JWKSEndpoint": "unyIsPTI", "KeyID": "RpYF20PP", "NetflixCertificates": {"encryptedPrivateKey": "43hBvqrm", "encryptedPrivateKeyName": "4PlV5QIa", "publicCertificate": "dWKrsmDK", "publicCertificateName": "6FLbZLFc", "rootCertificate": "TmulTfp8", "rootCertificateName": "hNailpq8"}, "OrganizationId": "QSQOyTjX", "PlatformName": "6rb9crJw", "RedirectUri": "QUBbrLuu", "RegisteredDomains": [{"affectedClientIDs": ["QYq31x36", "AfgNk7t7", "RhaLIFaD"], "domain": "wcSLADKH", "namespaces": ["evAudiYD", "vBEqDJCG", "hqfNh14s"], "roleId": "3PSLg0Q1"}, {"affectedClientIDs": ["RzJhGAHL", "3MQCYWMe", "DIXqbb9s"], "domain": "zJ4gwSVJ", "namespaces": ["Dx7E9dY1", "ifb6k7pq", "wDm1Dr94"], "roleId": "t2dReN8l"}, {"affectedClientIDs": ["aDOH5WAJ", "vybFxYAL", "LwdEYub1"], "domain": "hs6fs0Ws", "namespaces": ["ldhbgJ0H", "xareKQ98", "ZHm4twRc"], "roleId": "vPQQxoMq"}], "Secret": "2nPHEdGq", "TeamID": "50QvfydO", "TokenAuthenticationType": "3Bozf6d2", "TokenClaimsMapping": {"VT0P0hIa": "MH8cIHBt", "Uc7mX6xO": "mld14vUj", "J3Nha9Ss": "2AOLTy4m"}, "TokenEndpoint": "u109BFAg", "UserInfoEndpoint": "21zO4egl", "UserInfoHTTPMethod": "jLxfF7Y9", "scopes": ["0I1FHc1G", "tZtpJXzg", "IislckCi"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AddThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'eqZUj66w' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 140 'AddThirdPartyLoginPlatformCredentialV3' test.out

#- 141 DeleteThirdPartyLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op DeleteThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --platformId '27g1LNOg' \
    > test.out 2>&1
eval_tap $? 141 'DeleteThirdPartyLoginPlatformCredentialV3' test.out

#- 142 UpdateThirdPartyLoginPlatformCredentialV3
# body param: body
echo '{"ACSURL": "DNN8JFB9", "AWSCognitoRegion": "I2uVGkIE", "AWSCognitoUserPool": "Mw6ozyeg", "AllowedClients": ["ELf08isK", "SfLKzRG8", "ePOJTHJA"], "AppId": "csCx73V1", "AuthorizationEndpoint": "UIfzgm0y", "ClientId": "8NzrJfHc", "Environment": "77OsfZ2W", "FederationMetadataURL": "gem7oezl", "GenericOauthFlow": true, "IsActive": true, "Issuer": "PN0EMMsK", "JWKSEndpoint": "ARmoXkUd", "KeyID": "eZEAnOKe", "NetflixCertificates": {"encryptedPrivateKey": "FEa4kphw", "encryptedPrivateKeyName": "pJ1mzBK4", "publicCertificate": "phH5kWLE", "publicCertificateName": "vh9crOVb", "rootCertificate": "cmLelRCx", "rootCertificateName": "sLpGuNyv"}, "OrganizationId": "qQI1RVqG", "PlatformName": "vaaotOXX", "RedirectUri": "AhLeGCid", "RegisteredDomains": [{"affectedClientIDs": ["pWdbEVuP", "SVwRAMLj", "Va8HQPtZ"], "domain": "co5QVzKN", "namespaces": ["TmyYyPeu", "mM3XyGKr", "pHZrfB4s"], "roleId": "UayxuZL4"}, {"affectedClientIDs": ["2kj1XVyx", "KnMvqfH3", "8HNYEXd1"], "domain": "53RW9kRD", "namespaces": ["elxlaQO9", "iJjE94DQ", "pVfvt3Do"], "roleId": "tKlQG82s"}, {"affectedClientIDs": ["ScgW0WCg", "1cPZkAXV", "aq69Nbx3"], "domain": "U31aMqi9", "namespaces": ["A0AdU8i3", "bdiRUBlG", "qnm3FduY"], "roleId": "erO688hv"}], "Secret": "3P1R8DAq", "TeamID": "RwiMd7YZ", "TokenAuthenticationType": "nmApiVG8", "TokenClaimsMapping": {"WBBT4GxK": "GirbYb72", "4XXnGftx": "FJ8qlUan", "cZ3hWjx4": "9bKMlP5F"}, "TokenEndpoint": "NJAQNGSp", "UserInfoEndpoint": "ryuE01vg", "UserInfoHTTPMethod": "hBDPZ2JV", "scopes": ["H9Ocf2d5", "AmCYKWjp", "oGRMAf44"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op UpdateThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'yVQLjDKo' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 142 'UpdateThirdPartyLoginPlatformCredentialV3' test.out

#- 143 UpdateThirdPartyLoginPlatformDomainV3
# body param: body
echo '{"affectedClientIDs": ["DKo8W7wS", "pMgTmXN4", "CYuDCVIw"], "assignedNamespaces": ["LI2Y57nX", "aHCiFdgg", "3HYT9dSO"], "domain": "NlxeW7iS", "roleId": "wSFY4B5i"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op UpdateThirdPartyLoginPlatformDomainV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'E9qxdGvz' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 143 'UpdateThirdPartyLoginPlatformDomainV3' test.out

#- 144 DeleteThirdPartyLoginPlatformDomainV3
# body param: body
echo '{"domain": "pwS2P6Nn"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op DeleteThirdPartyLoginPlatformDomainV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'ZTY1IHKn' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 144 'DeleteThirdPartyLoginPlatformDomainV3' test.out

#- 145 RetrieveSSOLoginPlatformCredential
$CLI_EXE \
    --sn iam \
    --op RetrieveSSOLoginPlatformCredential \
    --namespace $AB_NAMESPACE \
    --platformId 'cNKJ6KeD' \
    > test.out 2>&1
eval_tap $? 145 'RetrieveSSOLoginPlatformCredential' test.out

#- 146 AddSSOLoginPlatformCredential
# body param: body
echo '{"acsUrl": "mTb10thl", "apiKey": "7NkYELVx", "appId": "csERpqYB", "federationMetadataUrl": "nLZSg8GB", "isActive": true, "redirectUri": "pCfpIiOQ", "secret": "jPyiRwcm", "ssoUrl": "fTBT4BZa"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AddSSOLoginPlatformCredential \
    --namespace $AB_NAMESPACE \
    --platformId 'rotNRfpx' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 146 'AddSSOLoginPlatformCredential' test.out

#- 147 DeleteSSOLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op DeleteSSOLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'aaTxpXua' \
    > test.out 2>&1
eval_tap $? 147 'DeleteSSOLoginPlatformCredentialV3' test.out

#- 148 UpdateSSOPlatformCredential
# body param: body
echo '{"acsUrl": "IYUB59V9", "apiKey": "G5lUg9Wz", "appId": "zHezd89Q", "federationMetadataUrl": "NCOJ78pq", "isActive": true, "redirectUri": "8pK9xIsj", "secret": "TSOp4FxA", "ssoUrl": "3IM7Eg8a"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op UpdateSSOPlatformCredential \
    --namespace $AB_NAMESPACE \
    --platformId 'ylg9QnEK' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 148 'UpdateSSOPlatformCredential' test.out

#- 149 AdminListUserIDByPlatformUserIDsV3
# body param: body
echo '{"platformUserIds": ["mxbdTntf", "tJVzOZet", "f81gzuk6"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminListUserIDByPlatformUserIDsV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'gqOSzDm1' \
    --rawPID 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 149 'AdminListUserIDByPlatformUserIDsV3' test.out

#- 150 AdminGetUserByPlatformUserIDV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserByPlatformUserIDV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'nUajAnom' \
    --platformUserId 'E5tPCNhv' \
    > test.out 2>&1
eval_tap $? 150 'AdminGetUserByPlatformUserIDV3' test.out

#- 151 GetAdminUsersByRoleIdV3
$CLI_EXE \
    --sn iam \
    --op GetAdminUsersByRoleIdV3 \
    --namespace $AB_NAMESPACE \
    --roleId 'ZO2miIOk' \
    --after '54' \
    --before '7' \
    --limit '59' \
    > test.out 2>&1
eval_tap $? 151 'GetAdminUsersByRoleIdV3' test.out

#- 152 AdminGetUserByEmailAddressV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserByEmailAddressV3 \
    --namespace $AB_NAMESPACE \
    --emailAddress 'PyKfb65t' \
    > test.out 2>&1
eval_tap $? 152 'AdminGetUserByEmailAddressV3' test.out

#- 153 AdminGetBulkUserBanV3
# body param: body
echo '{"bulkUserId": ["72JfSb5V", "fPwUarrx", "gB2Z9m54"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminGetBulkUserBanV3 \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --banType 'pZsxl3Wn' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 153 'AdminGetBulkUserBanV3' test.out

#- 154 AdminListUserIDByUserIDsV3
# body param: body
echo '{"userIds": ["KvglblnE", "Iqjb3Kyn", "ZSVthEP0"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminListUserIDByUserIDsV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 154 'AdminListUserIDByUserIDsV3' test.out

#- 155 AdminBulkGetUsersPlatform
# body param: body
echo '{"userIds": ["4nIrpzzd", "13OduY3b", "FTQCv5XA"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBulkGetUsersPlatform \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 155 'AdminBulkGetUsersPlatform' test.out

#- 156 AdminInviteUserV3
# body param: body
echo '{"emailAddresses": ["02UqcfkD", "vYWQbeJo", "GtNH89lR"], "isAdmin": true, "namespace": "XGndQMsR", "roles": ["uJoFMASg", "EWDI4YjH", "WknE2Ce7"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminInviteUserV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 156 'AdminInviteUserV3' test.out

#- 157 AdminQueryThirdPlatformLinkHistoryV3
$CLI_EXE \
    --sn iam \
    --op AdminQueryThirdPlatformLinkHistoryV3 \
    --namespace $AB_NAMESPACE \
    --limit '9' \
    --offset '61' \
    --platformUserId 'QDROU9jS' \
    --platformId 'FszoXpwh' \
    > test.out 2>&1
eval_tap $? 157 'AdminQueryThirdPlatformLinkHistoryV3' test.out

#- 158 AdminListUsersV3
$CLI_EXE \
    --sn iam \
    --op AdminListUsersV3 \
    --namespace $AB_NAMESPACE \
    --limit '79' \
    --offset '38' \
    > test.out 2>&1
eval_tap $? 158 'AdminListUsersV3' test.out

#- 159 AdminSearchUserV3
$CLI_EXE \
    --sn iam \
    --op AdminSearchUserV3 \
    --namespace $AB_NAMESPACE \
    --by 'lFDXvdsp' \
    --endDate 'xSPeGk4W' \
    --includeTotal 'true' \
    --limit '79' \
    --offset '20' \
    --platformBy 'EM0Q6ekK' \
    --platformId 'FvA9H19c' \
    --query 'mLDEWyV2' \
    --skipLoginQueue 'false' \
    --startDate 'RPOYCYPS' \
    --testAccount 'true' \
    > test.out 2>&1
eval_tap $? 159 'AdminSearchUserV3' test.out

#- 160 AdminGetBulkUserByEmailAddressV3
# body param: body
echo '{"listEmailAddressRequest": ["GjR89ES9", "y2BBoXFM", "bHImHUfd"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminGetBulkUserByEmailAddressV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 160 'AdminGetBulkUserByEmailAddressV3' test.out

#- 161 AdminGetUserByUserIdV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserByUserIdV3 \
    --namespace $AB_NAMESPACE \
    --userId 'pCMNLCIJ' \
    > test.out 2>&1
eval_tap $? 161 'AdminGetUserByUserIdV3' test.out

#- 162 AdminUpdateUserV3
# body param: body
echo '{"avatarUrl": "v4xvaXOy", "country": "IkH0Tb7s", "dateOfBirth": "2c9uB2nK", "displayName": "tH4C8GN2", "languageTag": "dRFhbwpW", "skipLoginQueue": true, "uniqueDisplayName": "eeRvshHd", "userName": "O7I4E7gc"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserV3 \
    --namespace $AB_NAMESPACE \
    --userId 'NcWdKhVt' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 162 'AdminUpdateUserV3' test.out

#- 163 AdminGetUserBanV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserBanV3 \
    --namespace $AB_NAMESPACE \
    --userId 'MkJsz2W3' \
    --activeOnly 'true' \
    --after 'Pbf5zCAp' \
    --before 'hLvdHNVH' \
    --limit '67' \
    > test.out 2>&1
eval_tap $? 163 'AdminGetUserBanV3' test.out

#- 164 AdminBanUserV3
# body param: body
echo '{"ban": "pSVIcXEF", "comment": "XInWdBz6", "endDate": "li3ub1DV", "reason": "EehS28QJ", "skipNotif": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBanUserV3 \
    --namespace $AB_NAMESPACE \
    --userId 'oBsOCSXA' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 164 'AdminBanUserV3' test.out

#- 165 AdminUpdateUserBanV3
# body param: body
echo '{"enabled": false, "skipNotif": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserBanV3 \
    --banId '2EAtU6ZI' \
    --namespace $AB_NAMESPACE \
    --userId 'pi9ORdA3' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 165 'AdminUpdateUserBanV3' test.out

#- 166 AdminSendVerificationCodeV3
# body param: body
echo '{"context": "elMnUWA6", "emailAddress": "bV5xsVMn", "languageTag": "iApk9yzG"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminSendVerificationCodeV3 \
    --namespace $AB_NAMESPACE \
    --userId '5WMWQUkG' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 166 'AdminSendVerificationCodeV3' test.out

#- 167 AdminVerifyAccountV3
# body param: body
echo '{"Code": "cOWObNVC", "ContactType": "SfCgUMHe", "LanguageTag": "ZQPT7CEj", "validateOnly": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminVerifyAccountV3 \
    --namespace $AB_NAMESPACE \
    --userId 'TCsQngmX' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 167 'AdminVerifyAccountV3' test.out

#- 168 GetUserVerificationCode
$CLI_EXE \
    --sn iam \
    --op GetUserVerificationCode \
    --namespace $AB_NAMESPACE \
    --userId 'OEhNM5xJ' \
    > test.out 2>&1
eval_tap $? 168 'GetUserVerificationCode' test.out

#- 169 AdminGetUserDeletionStatusV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserDeletionStatusV3 \
    --namespace $AB_NAMESPACE \
    --userId 'D9vQSXcV' \
    > test.out 2>&1
eval_tap $? 169 'AdminGetUserDeletionStatusV3' test.out

#- 170 AdminUpdateUserDeletionStatusV3
# body param: body
echo '{"deletionDate": 44, "enabled": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserDeletionStatusV3 \
    --namespace $AB_NAMESPACE \
    --userId '5EdsA4ZF' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 170 'AdminUpdateUserDeletionStatusV3' test.out

#- 171 AdminUpgradeHeadlessAccountV3
# body param: body
echo '{"code": "3Z4pxxUD", "country": "oZerhP6X", "dateOfBirth": "tn33Ftas", "displayName": "mVjZ7Odd", "emailAddress": "6LjddncE", "password": "ulJuO8I7", "uniqueDisplayName": "U7OiBx08", "validateOnly": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpgradeHeadlessAccountV3 \
    --namespace $AB_NAMESPACE \
    --userId 'a2NWVlEI' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 171 'AdminUpgradeHeadlessAccountV3' test.out

#- 172 AdminDeleteUserInformationV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserInformationV3 \
    --namespace $AB_NAMESPACE \
    --userId 'Tt6kaET6' \
    > test.out 2>&1
eval_tap $? 172 'AdminDeleteUserInformationV3' test.out

#- 173 AdminGetUserLoginHistoriesV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserLoginHistoriesV3 \
    --namespace $AB_NAMESPACE \
    --userId 'N06LiTRC' \
    --after '0.5699523434320364' \
    --before '0.20128577559448224' \
    --limit '66' \
    > test.out 2>&1
eval_tap $? 173 'AdminGetUserLoginHistoriesV3' test.out

#- 174 AdminResetPasswordV3
# body param: body
echo '{"languageTag": "kNP6i7rN", "newPassword": "BqvPUdEx", "oldPassword": "54qTlKCm"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminResetPasswordV3 \
    --namespace $AB_NAMESPACE \
    --userId 'DLRhjV5o' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 174 'AdminResetPasswordV3' test.out

#- 175 AdminUpdateUserPermissionV3
# body param: body
echo '{"Permissions": [{"Action": 55, "Resource": "J7EHrscD", "SchedAction": 50, "SchedCron": "JNYwOmPE", "SchedRange": ["YXE0xbhv", "sjClSC0J", "TybBulu0"]}, {"Action": 15, "Resource": "NiAPaIPt", "SchedAction": 74, "SchedCron": "P1TYxN8O", "SchedRange": ["FtiWJ3Fh", "c2cJXVoV", "EIFRZ6cb"]}, {"Action": 16, "Resource": "Gt2TvHa8", "SchedAction": 29, "SchedCron": "YQY3a63L", "SchedRange": ["X7aG8pGt", "ROjh3Ikx", "vTlx8tIa"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserPermissionV3 \
    --namespace $AB_NAMESPACE \
    --userId 'qiThrS92' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 175 'AdminUpdateUserPermissionV3' test.out

#- 176 AdminAddUserPermissionsV3
# body param: body
echo '{"Permissions": [{"Action": 55, "Resource": "EsGfVcOX", "SchedAction": 91, "SchedCron": "MjmOTefR", "SchedRange": ["bQ1nzDLw", "xgjwG9WW", "vtkKjCgu"]}, {"Action": 98, "Resource": "FX1Ea3Qp", "SchedAction": 45, "SchedCron": "io7UzbrZ", "SchedRange": ["IXr1Sizg", "S2GWPusJ", "kdU4HwX1"]}, {"Action": 3, "Resource": "JBWOs3DF", "SchedAction": 24, "SchedCron": "kWEbPPpH", "SchedRange": ["zT2yYkwp", "ps9nL4wt", "1UEo1TnH"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddUserPermissionsV3 \
    --namespace $AB_NAMESPACE \
    --userId 'yA4sQqnc' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 176 'AdminAddUserPermissionsV3' test.out

#- 177 AdminDeleteUserPermissionBulkV3
# body param: body
echo '[{"Action": 52, "Resource": "GGN6FciG"}, {"Action": 50, "Resource": "EmTHS8ya"}, {"Action": 70, "Resource": "uuUyb7Ow"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserPermissionBulkV3 \
    --namespace $AB_NAMESPACE \
    --userId 'rVEV9cRL' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 177 'AdminDeleteUserPermissionBulkV3' test.out

#- 178 AdminDeleteUserPermissionV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserPermissionV3 \
    --action '77' \
    --namespace $AB_NAMESPACE \
    --resource 'BpLAZihG' \
    --userId 'l4d9U63p' \
    > test.out 2>&1
eval_tap $? 178 'AdminDeleteUserPermissionV3' test.out

#- 179 AdminGetUserPlatformAccountsV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserPlatformAccountsV3 \
    --namespace $AB_NAMESPACE \
    --userId 'zaeqVWIv' \
    --after 'WHWdEtjo' \
    --before 'Nl54bMKi' \
    --limit '56' \
    --platformId 'KcvktMD5' \
    > test.out 2>&1
eval_tap $? 179 'AdminGetUserPlatformAccountsV3' test.out

#- 180 AdminGetListJusticePlatformAccounts
$CLI_EXE \
    --sn iam \
    --op AdminGetListJusticePlatformAccounts \
    --namespace $AB_NAMESPACE \
    --userId 'eAkSE2wn' \
    > test.out 2>&1
eval_tap $? 180 'AdminGetListJusticePlatformAccounts' test.out

#- 181 AdminGetUserMapping
$CLI_EXE \
    --sn iam \
    --op AdminGetUserMapping \
    --namespace $AB_NAMESPACE \
    --targetNamespace 'ihiy5UEW' \
    --userId 'NXlv2vra' \
    > test.out 2>&1
eval_tap $? 181 'AdminGetUserMapping' test.out

#- 182 AdminCreateJusticeUser
$CLI_EXE \
    --sn iam \
    --op AdminCreateJusticeUser \
    --namespace $AB_NAMESPACE \
    --targetNamespace 'G7Ed1e2K' \
    --userId 'JDvVPG07' \
    > test.out 2>&1
eval_tap $? 182 'AdminCreateJusticeUser' test.out

#- 183 AdminLinkPlatformAccount
# body param: body
echo '{"platformId": "RJKfgmeG", "platformUserId": "dOCf6Xdm"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminLinkPlatformAccount \
    --namespace $AB_NAMESPACE \
    --userId 'O81pUXDT' \
    --skipConflict 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 183 'AdminLinkPlatformAccount' test.out

#- 184 AdminPlatformUnlinkV3
# body param: body
echo '{"platformNamespace": "RYMzTh42"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminPlatformUnlinkV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'rSEH3kTY' \
    --userId 'EDxu0r5e' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 184 'AdminPlatformUnlinkV3' test.out

#- 185 AdminPlatformLinkV3
$CLI_EXE \
    --sn iam \
    --op AdminPlatformLinkV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'gtHG0Vuf' \
    --userId '1E5V4T4Z' \
    --ticket 'sSHVZdKU' \
    > test.out 2>&1
eval_tap $? 185 'AdminPlatformLinkV3' test.out

#- 186 AdminDeleteUserLinkingHistoryByPlatformIDV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserLinkingHistoryByPlatformIDV3 \
    --namespace $AB_NAMESPACE \
    --platformId '8juzVOII' \
    --userId 'vT91n2YZ' \
    > test.out 2>&1
eval_tap $? 186 'AdminDeleteUserLinkingHistoryByPlatformIDV3' test.out

#- 187 AdminGetThirdPartyPlatformTokenLinkStatusV3
$CLI_EXE \
    --sn iam \
    --op AdminGetThirdPartyPlatformTokenLinkStatusV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'D6bEv8Gn' \
    --userId 'paxqSa2V' \
    --platformToken 'UUCmpF3R' \
    > test.out 2>&1
eval_tap $? 187 'AdminGetThirdPartyPlatformTokenLinkStatusV3' test.out

#- 188 AdminGetUserSinglePlatformAccount
$CLI_EXE \
    --sn iam \
    --op AdminGetUserSinglePlatformAccount \
    --namespace $AB_NAMESPACE \
    --platformId 'x953zaFg' \
    --userId 'CrS9wkxH' \
    > test.out 2>&1
eval_tap $? 188 'AdminGetUserSinglePlatformAccount' test.out

#- 189 AdminDeleteUserRolesV3
# body param: body
echo '["hVnQ4xko", "3VIGCJJN", "tgGVqJWG"]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserRolesV3 \
    --namespace $AB_NAMESPACE \
    --userId 'pWplWlzd' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 189 'AdminDeleteUserRolesV3' test.out

#- 190 AdminSaveUserRoleV3
# body param: body
echo '[{"namespace": "mSQpRnPV", "roleId": "L6US9PkJ"}, {"namespace": "SvkUlhp0", "roleId": "8KpHIbMU"}, {"namespace": "rQTqRu1e", "roleId": "Wye8Fgl7"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminSaveUserRoleV3 \
    --namespace $AB_NAMESPACE \
    --userId 'MPfdvV55' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 190 'AdminSaveUserRoleV3' test.out

#- 191 AdminAddUserRoleV3
$CLI_EXE \
    --sn iam \
    --op AdminAddUserRoleV3 \
    --namespace $AB_NAMESPACE \
    --roleId 'aKAGTUx5' \
    --userId 'Wx9JmkEU' \
    > test.out 2>&1
eval_tap $? 191 'AdminAddUserRoleV3' test.out

#- 192 AdminDeleteUserRoleV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserRoleV3 \
    --namespace $AB_NAMESPACE \
    --roleId 'VbtqlaUC' \
    --userId 'X9DOgGFZ' \
    > test.out 2>&1
eval_tap $? 192 'AdminDeleteUserRoleV3' test.out

#- 193 AdminUpdateUserStatusV3
# body param: body
echo '{"enabled": false, "reason": "0mTC7yGP"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserStatusV3 \
    --namespace $AB_NAMESPACE \
    --userId 'gwHMNjwo' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 193 'AdminUpdateUserStatusV3' test.out

#- 194 AdminTrustlyUpdateUserIdentity
# body param: body
echo '{"emailAddress": "zG4Uge8v", "password": "JoWJR9qh"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminTrustlyUpdateUserIdentity \
    --namespace $AB_NAMESPACE \
    --userId 'vFM6yFLv' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 194 'AdminTrustlyUpdateUserIdentity' test.out

#- 195 AdminVerifyUserWithoutVerificationCodeV3
$CLI_EXE \
    --sn iam \
    --op AdminVerifyUserWithoutVerificationCodeV3 \
    --namespace $AB_NAMESPACE \
    --userId 'PpEhAezD' \
    > test.out 2>&1
eval_tap $? 195 'AdminVerifyUserWithoutVerificationCodeV3' test.out

#- 196 AdminUpdateClientSecretV3
# body param: body
echo '{"newSecret": "vTpkhmKe"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateClientSecretV3 \
    --clientId 'XwUhm03x' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 196 'AdminUpdateClientSecretV3' test.out

#- 197 AdminGetRolesV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRolesV3 \
    --after 'rFRckc9E' \
    --before 'QeN7raaf' \
    --isWildcard 'true' \
    --limit '66' \
    > test.out 2>&1
eval_tap $? 197 'AdminGetRolesV3' test.out

#- 198 AdminCreateRoleV3
# body param: body
echo '{"adminRole": false, "deletable": false, "isWildcard": false, "managers": [{"displayName": "yMH8f0Te", "namespace": "Et0dWV0X", "userId": "durz1P0F"}, {"displayName": "lKHnTdn1", "namespace": "Zhv4FPjk", "userId": "I5fDnbuA"}, {"displayName": "7msMpaUu", "namespace": "0WuIu9s5", "userId": "FAwPM7O3"}], "members": [{"displayName": "H1hvQK3A", "namespace": "yOfbZDvh", "userId": "lv4VBzKe"}, {"displayName": "TZ4lnfK4", "namespace": "7VECeV8d", "userId": "QwoYjjb4"}, {"displayName": "DD9EyuR6", "namespace": "q4gZr9Iq", "userId": "eUqPOYeu"}], "permissions": [{"action": 80, "resource": "idpkM3nN", "schedAction": 6, "schedCron": "8eGWrpIb", "schedRange": ["dXtYGd3A", "ElU4XBoi", "oDl0lLy9"]}, {"action": 21, "resource": "baTfMiwH", "schedAction": 39, "schedCron": "dVu3lKbM", "schedRange": ["RftlY76c", "uP7TWI7t", "v9VL603k"]}, {"action": 54, "resource": "PMcYcfik", "schedAction": 66, "schedCron": "Ug0ef4Lp", "schedRange": ["AjIpcjM2", "J2rHdbYH", "sV3sEOic"]}], "roleName": "HKEoh1Co"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminCreateRoleV3 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 198 'AdminCreateRoleV3' test.out

#- 199 AdminGetRoleV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleV3 \
    --roleId 'OL0nqMfC' \
    > test.out 2>&1
eval_tap $? 199 'AdminGetRoleV3' test.out

#- 200 AdminDeleteRoleV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteRoleV3 \
    --roleId '0Le5ulce' \
    > test.out 2>&1
eval_tap $? 200 'AdminDeleteRoleV3' test.out

#- 201 AdminUpdateRoleV3
# body param: body
echo '{"deletable": false, "isWildcard": false, "roleName": "28CUk7qu"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateRoleV3 \
    --roleId 'fRQ36KEs' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 201 'AdminUpdateRoleV3' test.out

#- 202 AdminGetRoleAdminStatusV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleAdminStatusV3 \
    --roleId 'KmUmX8UK' \
    > test.out 2>&1
eval_tap $? 202 'AdminGetRoleAdminStatusV3' test.out

#- 203 AdminUpdateAdminRoleStatusV3
$CLI_EXE \
    --sn iam \
    --op AdminUpdateAdminRoleStatusV3 \
    --roleId 'Bkmi07WN' \
    > test.out 2>&1
eval_tap $? 203 'AdminUpdateAdminRoleStatusV3' test.out

#- 204 AdminRemoveRoleAdminV3
$CLI_EXE \
    --sn iam \
    --op AdminRemoveRoleAdminV3 \
    --roleId 'fc9mrmcm' \
    > test.out 2>&1
eval_tap $? 204 'AdminRemoveRoleAdminV3' test.out

#- 205 AdminGetRoleManagersV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleManagersV3 \
    --roleId 'TZWuSDnC' \
    --after '1CyLXQUU' \
    --before 'jKkVQCm0' \
    --limit '8' \
    > test.out 2>&1
eval_tap $? 205 'AdminGetRoleManagersV3' test.out

#- 206 AdminAddRoleManagersV3
# body param: body
echo '{"managers": [{"displayName": "YZeuM6He", "namespace": "rSdoopKj", "userId": "xdobNb7H"}, {"displayName": "pclonaHz", "namespace": "yQJ8ROEe", "userId": "SYGpWg1i"}, {"displayName": "IZhiN0yl", "namespace": "9aLSMmmC", "userId": "Vv2JVfWr"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddRoleManagersV3 \
    --roleId 'Ep4c2dbI' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 206 'AdminAddRoleManagersV3' test.out

#- 207 AdminRemoveRoleManagersV3
# body param: body
echo '{"managers": [{"displayName": "J0JoqYhE", "namespace": "3kNJla2j", "userId": "GTDxEJoI"}, {"displayName": "jmkBY7x4", "namespace": "g9Ufkpnf", "userId": "pjURFFHw"}, {"displayName": "s4FxCGJE", "namespace": "4dNk57wd", "userId": "jHlp7c5k"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminRemoveRoleManagersV3 \
    --roleId '71vlThRH' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 207 'AdminRemoveRoleManagersV3' test.out

#- 208 AdminGetRoleMembersV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleMembersV3 \
    --roleId 'hE4q8PVT' \
    --after 'vyUSh2Ue' \
    --before 'hbIrRSdM' \
    --limit '9' \
    > test.out 2>&1
eval_tap $? 208 'AdminGetRoleMembersV3' test.out

#- 209 AdminAddRoleMembersV3
# body param: body
echo '{"members": [{"displayName": "cntNseKO", "namespace": "CyqMF5CQ", "userId": "q9i4MxHR"}, {"displayName": "R4AMRx3w", "namespace": "oBb1P5F4", "userId": "dO6NlOON"}, {"displayName": "jWrWG0J4", "namespace": "pnZDXtHS", "userId": "l6puFPvZ"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddRoleMembersV3 \
    --roleId 'h0Rmf0Cq' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 209 'AdminAddRoleMembersV3' test.out

#- 210 AdminRemoveRoleMembersV3
# body param: body
echo '{"members": [{"displayName": "0eBFjwUg", "namespace": "sjwSqSDL", "userId": "4RDCOezl"}, {"displayName": "39z2eI9F", "namespace": "QJut3rOV", "userId": "TYqEAnE9"}, {"displayName": "v1s0Eqok", "namespace": "eat38cXX", "userId": "Xx3AtRYr"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminRemoveRoleMembersV3 \
    --roleId 'YNxTxbGD' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 210 'AdminRemoveRoleMembersV3' test.out

#- 211 AdminUpdateRolePermissionsV3
# body param: body
echo '{"permissions": [{"action": 88, "resource": "J6fZqYLU", "schedAction": 9, "schedCron": "xwkeLTQp", "schedRange": ["5q13M16C", "J8ekCAXL", "h8xFjIhT"]}, {"action": 28, "resource": "kt7Ch3O9", "schedAction": 19, "schedCron": "hpLtrBJa", "schedRange": ["38bQapXz", "Xgu3nz2m", "quIKUqDH"]}, {"action": 82, "resource": "8S74DWuG", "schedAction": 44, "schedCron": "DVBdSDq9", "schedRange": ["EpPhIrPa", "XgVgo6U4", "iJNARw71"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateRolePermissionsV3 \
    --roleId '0N6CY4uo' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 211 'AdminUpdateRolePermissionsV3' test.out

#- 212 AdminAddRolePermissionsV3
# body param: body
echo '{"permissions": [{"action": 70, "resource": "4TKzQWKR", "schedAction": 91, "schedCron": "x6eSlzat", "schedRange": ["HL1kXEbt", "40uJBkIm", "vOlczKYP"]}, {"action": 62, "resource": "tAsJNylu", "schedAction": 96, "schedCron": "yoMYQOBg", "schedRange": ["bSVY9SDu", "UyzRsKgS", "lAapZKnW"]}, {"action": 85, "resource": "krcvV53F", "schedAction": 90, "schedCron": "odx3FBow", "schedRange": ["eGZpsPJY", "MYVq0YA3", "p20q9Pou"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddRolePermissionsV3 \
    --roleId 'BTkfRCnV' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 212 'AdminAddRolePermissionsV3' test.out

#- 213 AdminDeleteRolePermissionsV3
# body param: body
echo '["NoKDlA0e", "NL3XxN2B", "P7L3Nc4r"]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDeleteRolePermissionsV3 \
    --roleId 'Q2EvtGot' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 213 'AdminDeleteRolePermissionsV3' test.out

#- 214 AdminDeleteRolePermissionV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteRolePermissionV3 \
    --action '89' \
    --resource 'CzayAWw4' \
    --roleId 'qBqQzLBS' \
    > test.out 2>&1
eval_tap $? 214 'AdminDeleteRolePermissionV3' test.out

#- 215 AdminGetMyUserV3
$CLI_EXE \
    --sn iam \
    --op AdminGetMyUserV3 \
    > test.out 2>&1
eval_tap $? 215 'AdminGetMyUserV3' test.out

#- 216 UserAuthenticationV3
$CLI_EXE \
    --sn iam \
    --op UserAuthenticationV3 \
    --client_id 'bbr4KpaE' \
    --extend_exp 'true' \
    --redirect_uri 'cCH7UWFG' \
    --password 'gzR9ZJOx' \
    --request_id 'JOLuxk11' \
    --user_name 'Irj3hFPc' \
    > test.out 2>&1
eval_tap $? 216 'UserAuthenticationV3' test.out

#- 217 AuthenticationWithPlatformLinkV3
$CLI_EXE \
    --sn iam \
    --op AuthenticationWithPlatformLinkV3 \
    --extend_exp 'false' \
    --client_id 'jBgS7Cqc' \
    --linkingToken 'nRPH17CR' \
    --password 'lIVdmGXh' \
    --username 'IKFkW0TL' \
    > test.out 2>&1
eval_tap $? 217 'AuthenticationWithPlatformLinkV3' test.out

#- 218 GenerateTokenByNewHeadlessAccountV3
$CLI_EXE \
    --sn iam \
    --op GenerateTokenByNewHeadlessAccountV3 \
    --additionalData 'VTrB8wFJ' \
    --extend_exp 'false' \
    --linkingToken 'vuLa7MFK' \
    > test.out 2>&1
eval_tap $? 218 'GenerateTokenByNewHeadlessAccountV3' test.out

#- 219 RequestOneTimeLinkingCodeV3
$CLI_EXE \
    --sn iam \
    --op RequestOneTimeLinkingCodeV3 \
    --platformId 'db0cqtDK' \
    > test.out 2>&1
eval_tap $? 219 'RequestOneTimeLinkingCodeV3' test.out

#- 220 ValidateOneTimeLinkingCodeV3
$CLI_EXE \
    --sn iam \
    --op ValidateOneTimeLinkingCodeV3 \
    --oneTimeLinkCode 'BKweA0PB' \
    > test.out 2>&1
eval_tap $? 220 'ValidateOneTimeLinkingCodeV3' test.out

#- 221 RequestTokenByOneTimeLinkCodeResponseV3
$CLI_EXE \
    --sn iam \
    --op RequestTokenByOneTimeLinkCodeResponseV3 \
    --additionalData '81nYZNiT' \
    --isTransient 'false' \
    --client_id 'K5fYTtiX' \
    --oneTimeLinkCode 'UfK6UQrb' \
    > test.out 2>&1
eval_tap $? 221 'RequestTokenByOneTimeLinkCodeResponseV3' test.out

#- 222 GetCountryLocationV3
$CLI_EXE \
    --sn iam \
    --op GetCountryLocationV3 \
    > test.out 2>&1
eval_tap $? 222 'GetCountryLocationV3' test.out

#- 223 Logout
$CLI_EXE \
    --sn iam \
    --op Logout \
    > test.out 2>&1
eval_tap $? 223 'Logout' test.out

#- 224 RequestTokenExchangeCodeV3
$CLI_EXE \
    --sn iam \
    --op RequestTokenExchangeCodeV3 \
    --namespace $AB_NAMESPACE \
    --codeChallenge 'kuiuUnvT' \
    --codeChallengeMethod 'S256' \
    --client_id 'wR0JbXSv' \
    > test.out 2>&1
eval_tap $? 224 'RequestTokenExchangeCodeV3' test.out

#- 225 AdminRetrieveUserThirdPartyPlatformTokenV3
$CLI_EXE \
    --sn iam \
    --op AdminRetrieveUserThirdPartyPlatformTokenV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'FufvYDfh' \
    --userId 'nqcJBV9C' \
    > test.out 2>&1
eval_tap $? 225 'AdminRetrieveUserThirdPartyPlatformTokenV3' test.out

#- 226 RevokeUserV3
$CLI_EXE \
    --sn iam \
    --op RevokeUserV3 \
    --namespace $AB_NAMESPACE \
    --userId 'MTS5GuEP' \
    --includeGameNamespace 'false' \
    > test.out 2>&1
eval_tap $? 226 'RevokeUserV3' test.out

#- 227 AuthorizeV3
$CLI_EXE \
    --sn iam \
    --op AuthorizeV3 \
    --codeChallenge 'zFcHMWu9' \
    --codeChallengeMethod 'S256' \
    --createHeadless 'true' \
    --oneTimeLinkCode 'h2YqA10i' \
    --redirectUri 'lqkecyNo' \
    --scope 'KSnH4KJF' \
    --state 'n5idLx9u' \
    --targetAuthPage 'SKE9ounL' \
    --useRedirectUriAsLoginUrlWhenLocked 'true' \
    --clientId 'Jl7TyMU2' \
    --responseType 'code' \
    > test.out 2>&1
eval_tap $? 227 'AuthorizeV3' test.out

#- 228 TokenIntrospectionV3
$CLI_EXE \
    --sn iam \
    --op TokenIntrospectionV3 \
    --token '48hE383x' \
    > test.out 2>&1
eval_tap $? 228 'TokenIntrospectionV3' test.out

#- 229 GetJWKSV3
$CLI_EXE \
    --sn iam \
    --op GetJWKSV3 \
    > test.out 2>&1
eval_tap $? 229 'GetJWKSV3' test.out

#- 230 SendMFAAuthenticationCode
$CLI_EXE \
    --sn iam \
    --op SendMFAAuthenticationCode \
    --clientId 'FkFzSWgc' \
    --factor 'CuD2yTZB' \
    --mfaToken 'w488iOq7' \
    > test.out 2>&1
eval_tap $? 230 'SendMFAAuthenticationCode' test.out

#- 231 Change2faMethod
$CLI_EXE \
    --sn iam \
    --op Change2faMethod \
    --factor '37w6RwRv' \
    --mfaToken '2CTTEd0g' \
    > test.out 2>&1
eval_tap $? 231 'Change2faMethod' test.out

#- 232 Verify2faCode
$CLI_EXE \
    --sn iam \
    --op Verify2faCode \
    --code '6y3pN7gR' \
    --factor 'IrHNNOIC' \
    --mfaToken 'q8OPI30d' \
    --rememberDevice 'false' \
    > test.out 2>&1
eval_tap $? 232 'Verify2faCode' test.out

#- 233 RetrieveUserThirdPartyPlatformTokenV3
$CLI_EXE \
    --sn iam \
    --op RetrieveUserThirdPartyPlatformTokenV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'ku5OvFj5' \
    --userId '33kJ6ncr' \
    > test.out 2>&1
eval_tap $? 233 'RetrieveUserThirdPartyPlatformTokenV3' test.out

#- 234 AuthCodeRequestV3
$CLI_EXE \
    --sn iam \
    --op AuthCodeRequestV3 \
    --platformId 'hjtVpaBT' \
    --clientId 'IMRaU4ii' \
    --redirectUri 'CdmnZqVi' \
    --requestId 'NPBTojJx' \
    > test.out 2>&1
eval_tap $? 234 'AuthCodeRequestV3' test.out

#- 235 PlatformTokenGrantV3
$CLI_EXE \
    --sn iam \
    --op PlatformTokenGrantV3 \
    --platformId 'l82Szzlu' \
    --additionalData '1d4KEd5k' \
    --client_id 'PPzp6Wyn' \
    --createHeadless 'false' \
    --device_id 'WoKsNNps' \
    --macAddress 'zFmVhZiB' \
    --platform_token 'AsMLes0x' \
    --skipSetCookie 'true' \
    > test.out 2>&1
eval_tap $? 235 'PlatformTokenGrantV3' test.out

#- 236 GetRevocationListV3
$CLI_EXE \
    --sn iam \
    --op GetRevocationListV3 \
    > test.out 2>&1
eval_tap $? 236 'GetRevocationListV3' test.out

#- 237 TokenRevocationV3
$CLI_EXE \
    --sn iam \
    --op TokenRevocationV3 \
    --token 'XeTvpX6C' \
    > test.out 2>&1
eval_tap $? 237 'TokenRevocationV3' test.out

#- 238 SimultaneousLoginV3
$CLI_EXE \
    --sn iam \
    --op SimultaneousLoginV3 \
    --simultaneousPlatform 'pspc' \
    --simultaneousTicket '80ukqUFU' \
    --nativePlatform 'steam' \
    --nativePlatformTicket 'DWiDLO9d' \
    > test.out 2>&1
eval_tap $? 238 'SimultaneousLoginV3' test.out

#- 239 TokenGrantV3
$CLI_EXE \
    --sn iam \
    --op TokenGrantV3 \
    --additionalData 'trq7Y6Ri' \
    --client_id 'lReVf1pm' \
    --code 'X7wk1Y0n' \
    --code_verifier 'uD7I4q6P' \
    --extendNamespace 'qAeqn12p' \
    --extend_exp 'true' \
    --password 'Am2gmC01' \
    --redirect_uri 'lYoVaLYI' \
    --refresh_token '2EtFuM0S' \
    --username 'hFChRPaY' \
    --grant_type 'authorization_code' \
    > test.out 2>&1
eval_tap $? 239 'TokenGrantV3' test.out

#- 240 VerifyTokenV3
$CLI_EXE \
    --sn iam \
    --op VerifyTokenV3 \
    --token '0q7aKLUQ' \
    > test.out 2>&1
eval_tap $? 240 'VerifyTokenV3' test.out

#- 241 PlatformAuthenticationV3
$CLI_EXE \
    --sn iam \
    --op PlatformAuthenticationV3 \
    --platformId 'HbY9mxkQ' \
    --code 'b6kVjfvj' \
    --error 'nCvceh2X' \
    --openidAssocHandle 'PInUkQYJ' \
    --openidClaimedId '3nJEzw8s' \
    --openidIdentity '73CwcmDN' \
    --openidMode 'ET3aP3WI' \
    --openidNs 'cYXis0PZ' \
    --openidOpEndpoint 'JGqB6Ofk' \
    --openidResponseNonce 'ZONKKj4N' \
    --openidReturnTo '4oCdKlBr' \
    --openidSig '8lrIKoiP' \
    --openidSigned 'tMdXxmyu' \
    --state 'NauBj8LW' \
    > test.out 2>&1
eval_tap $? 241 'PlatformAuthenticationV3' test.out

#- 242 PlatformTokenRefreshV3
$CLI_EXE \
    --sn iam \
    --op PlatformTokenRefreshV3 \
    --platformId '4mKO1cGd' \
    --platform_token 'zwMjJCfb' \
    > test.out 2>&1
eval_tap $? 242 'PlatformTokenRefreshV3' test.out

#- 243 PublicGetInputValidations
$CLI_EXE \
    --sn iam \
    --op PublicGetInputValidations \
    --defaultOnEmpty 'true' \
    --languageCode 'VH49cynd' \
    > test.out 2>&1
eval_tap $? 243 'PublicGetInputValidations' test.out

#- 244 PublicGetInputValidationByField
$CLI_EXE \
    --sn iam \
    --op PublicGetInputValidationByField \
    --field 'UubSsfCo' \
    > test.out 2>&1
eval_tap $? 244 'PublicGetInputValidationByField' test.out

#- 245 PublicGetCountryAgeRestrictionV3
$CLI_EXE \
    --sn iam \
    --op PublicGetCountryAgeRestrictionV3 \
    --countryCode 'aJ8VXqmW' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 245 'PublicGetCountryAgeRestrictionV3' test.out

#- 246 PublicGetConfigValueV3
$CLI_EXE \
    --sn iam \
    --op PublicGetConfigValueV3 \
    --configKey 'YHUGo53T' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 246 'PublicGetConfigValueV3' test.out

#- 247 PublicGetCountryListV3
$CLI_EXE \
    --sn iam \
    --op PublicGetCountryListV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 247 'PublicGetCountryListV3' test.out

#- 248 RetrieveAllActiveThirdPartyLoginPlatformCredentialPublicV3
$CLI_EXE \
    --sn iam \
    --op RetrieveAllActiveThirdPartyLoginPlatformCredentialPublicV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 248 'RetrieveAllActiveThirdPartyLoginPlatformCredentialPublicV3' test.out

#- 249 RetrieveActiveOIDCClientsPublicV3
$CLI_EXE \
    --sn iam \
    --op RetrieveActiveOIDCClientsPublicV3 \
    --namespace $AB_NAMESPACE \
    --clientId 'IZlvtzK0' \
    > test.out 2>&1
eval_tap $? 249 'RetrieveActiveOIDCClientsPublicV3' test.out

#- 250 PublicListUserIDByPlatformUserIDsV3
# body param: body
echo '{"platformUserIds": ["PrYcEpZQ", "zIRIvFkc", "hR7Pefnc"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicListUserIDByPlatformUserIDsV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'VGVKs6qE' \
    --rawPID 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 250 'PublicListUserIDByPlatformUserIDsV3' test.out

#- 251 PublicGetUserByPlatformUserIDV3
$CLI_EXE \
    --sn iam \
    --op PublicGetUserByPlatformUserIDV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'zmxQHrWo' \
    --platformUserId 'ZH25SwTj' \
    > test.out 2>&1
eval_tap $? 251 'PublicGetUserByPlatformUserIDV3' test.out

#- 252 PublicGetAsyncStatus
$CLI_EXE \
    --sn iam \
    --op PublicGetAsyncStatus \
    --namespace $AB_NAMESPACE \
    --requestId 'rI1M8git' \
    > test.out 2>&1
eval_tap $? 252 'PublicGetAsyncStatus' test.out

#- 253 PublicSearchUserV3
$CLI_EXE \
    --sn iam \
    --op PublicSearchUserV3 \
    --namespace $AB_NAMESPACE \
    --by '4n8GY8tq' \
    --limit '24' \
    --offset '5' \
    --platformBy 'Jnzr7eko' \
    --platformId '0Nc89IHT' \
    --query 'B60Rb0Ro' \
    > test.out 2>&1
eval_tap $? 253 'PublicSearchUserV3' test.out

#- 254 PublicCreateUserV3
# body param: body
echo '{"PasswordMD5Sum": "6zXgl88m", "acceptedPolicies": [{"isAccepted": false, "localizedPolicyVersionId": "3LRdbkwj", "policyId": "mNKXnJmm", "policyVersionId": "snWN34HK"}, {"isAccepted": true, "localizedPolicyVersionId": "4RjW9ZwX", "policyId": "zEfqIbRn", "policyVersionId": "TzBvRxld"}, {"isAccepted": true, "localizedPolicyVersionId": "65D1pcw9", "policyId": "qRfNhyxZ", "policyVersionId": "6yl4fATf"}], "authType": "6YPb12IA", "code": "Sciy9HEq", "country": "J2uqj7Tu", "dateOfBirth": "hhtlaNpk", "displayName": "9axTxR2W", "emailAddress": "BZtzo5jm", "password": "Z07Ib7Hm", "reachMinimumAge": true, "uniqueDisplayName": "QwZNwooy"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicCreateUserV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 254 'PublicCreateUserV3' test.out

#- 255 CheckUserAvailability
$CLI_EXE \
    --sn iam \
    --op CheckUserAvailability \
    --namespace $AB_NAMESPACE \
    --field 'mYOtSDgW' \
    --query '32bR1nwc' \
    > test.out 2>&1
eval_tap $? 255 'CheckUserAvailability' test.out

#- 256 PublicBulkGetUsers
# body param: body
echo '{"userIds": ["Zajxe10W", "darlZzGf", "zY8CUR6J"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicBulkGetUsers \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 256 'PublicBulkGetUsers' test.out

#- 257 PublicSendRegistrationCode
# body param: body
echo '{"emailAddress": "Fary8mcq", "languageTag": "PNeoUUUZ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicSendRegistrationCode \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 257 'PublicSendRegistrationCode' test.out

#- 258 PublicVerifyRegistrationCode
# body param: body
echo '{"code": "Y9ciKcal", "emailAddress": "ozaabquj"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicVerifyRegistrationCode \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 258 'PublicVerifyRegistrationCode' test.out

#- 259 PublicForgotPasswordV3
# body param: body
echo '{"emailAddress": "lRZbxvww", "languageTag": "AJ2N5XU0"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicForgotPasswordV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 259 'PublicForgotPasswordV3' test.out

#- 260 GetAdminInvitationV3
$CLI_EXE \
    --sn iam \
    --op GetAdminInvitationV3 \
    --invitationId 'QLc1CdDL' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 260 'GetAdminInvitationV3' test.out

#- 261 CreateUserFromInvitationV3
# body param: body
echo '{"PasswordMD5Sum": "m1wVyDOM", "acceptedPolicies": [{"isAccepted": false, "localizedPolicyVersionId": "Xiop0Nsf", "policyId": "gTTmLI6D", "policyVersionId": "0plw3mZf"}, {"isAccepted": false, "localizedPolicyVersionId": "J2DYUUUt", "policyId": "2SpKdvxl", "policyVersionId": "mHac29YM"}, {"isAccepted": false, "localizedPolicyVersionId": "tjMN2Aos", "policyId": "nd13NAID", "policyVersionId": "wWOCDNiY"}], "authType": "GYx29dwK", "code": "xPlNGflV", "country": "rbd1uNbJ", "dateOfBirth": "9zHPjvKb", "displayName": "WrboClzM", "emailAddress": "zECowEJe", "password": "IKfNoJZh", "reachMinimumAge": false, "uniqueDisplayName": "KiC2oYmR"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op CreateUserFromInvitationV3 \
    --invitationId '15kHGGuU' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 261 'CreateUserFromInvitationV3' test.out

#- 262 UpdateUserV3
# body param: body
echo '{"avatarUrl": "0zwMryFT", "country": "6piCTiI0", "dateOfBirth": "E3znVGot", "displayName": "CGq3xpiR", "languageTag": "BuqxNyJO", "uniqueDisplayName": "oH0iVLmF", "userName": "8z4Vvzob"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op UpdateUserV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 262 'UpdateUserV3' test.out

#- 263 PublicPartialUpdateUserV3
# body param: body
echo '{"avatarUrl": "6W3WJjQP", "country": "EeL4Zq4w", "dateOfBirth": "9LU3rwXR", "displayName": "IGckjMIE", "languageTag": "MzgK6ib7", "uniqueDisplayName": "p84UGd00", "userName": "6SoF2Il1"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicPartialUpdateUserV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 263 'PublicPartialUpdateUserV3' test.out

#- 264 PublicSendVerificationCodeV3
# body param: body
echo '{"context": "NZ7bLeKr", "emailAddress": "R6GlXbaD", "languageTag": "8KwhsQE3"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicSendVerificationCodeV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 264 'PublicSendVerificationCodeV3' test.out

#- 265 PublicUserVerificationV3
# body param: body
echo '{"code": "reiCLX9f", "contactType": "HEFAcuAQ", "languageTag": "d6su4xp1", "validateOnly": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUserVerificationV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 265 'PublicUserVerificationV3' test.out

#- 266 PublicUpgradeHeadlessAccountV3
# body param: body
echo '{"code": "nt0ierhr", "country": "oOiBZ5ho", "dateOfBirth": "BSveI6wB", "displayName": "6cx89gRw", "emailAddress": "XAZWlAvp", "password": "tRgvrydJ", "uniqueDisplayName": "BoeAkRYy", "validateOnly": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpgradeHeadlessAccountV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 266 'PublicUpgradeHeadlessAccountV3' test.out

#- 267 PublicVerifyHeadlessAccountV3
# body param: body
echo '{"emailAddress": "G7tDquqL", "password": "mE5FcIHF"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicVerifyHeadlessAccountV3 \
    --namespace $AB_NAMESPACE \
    --needVerificationCode 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 267 'PublicVerifyHeadlessAccountV3' test.out

#- 268 PublicUpdatePasswordV3
# body param: body
echo '{"languageTag": "NcKSmAuG", "newPassword": "J8fXFhmB", "oldPassword": "g3MpywMN"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpdatePasswordV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 268 'PublicUpdatePasswordV3' test.out

#- 269 PublicCreateJusticeUser
$CLI_EXE \
    --sn iam \
    --op PublicCreateJusticeUser \
    --namespace $AB_NAMESPACE \
    --targetNamespace 'ycebDezb' \
    > test.out 2>&1
eval_tap $? 269 'PublicCreateJusticeUser' test.out

#- 270 PublicPlatformLinkV3
$CLI_EXE \
    --sn iam \
    --op PublicPlatformLinkV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'HBDVz9Vs' \
    --redirectUri 'GJm8Yeml' \
    --ticket 'YuB8P5aq' \
    > test.out 2>&1
eval_tap $? 270 'PublicPlatformLinkV3' test.out

#- 271 PublicPlatformUnlinkV3
# body param: body
echo '{"platformNamespace": "qwvz37VC"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicPlatformUnlinkV3 \
    --namespace $AB_NAMESPACE \
    --platformId 't5AGQscC' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 271 'PublicPlatformUnlinkV3' test.out

#- 272 PublicPlatformUnlinkAllV3
$CLI_EXE \
    --sn iam \
    --op PublicPlatformUnlinkAllV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'I9OuIjUy' \
    > test.out 2>&1
eval_tap $? 272 'PublicPlatformUnlinkAllV3' test.out

#- 273 PublicForcePlatformLinkV3
$CLI_EXE \
    --sn iam \
    --op PublicForcePlatformLinkV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'ZDgLiVMH' \
    --ticket 'syl4IpPC' \
    > test.out 2>&1
eval_tap $? 273 'PublicForcePlatformLinkV3' test.out

#- 274 PublicWebLinkPlatform
$CLI_EXE \
    --sn iam \
    --op PublicWebLinkPlatform \
    --namespace $AB_NAMESPACE \
    --platformId 'zXfdiZqK' \
    --clientId 'xFsCn0Rf' \
    --redirectUri 'q8E3yxFL' \
    > test.out 2>&1
eval_tap $? 274 'PublicWebLinkPlatform' test.out

#- 275 PublicWebLinkPlatformEstablish
$CLI_EXE \
    --sn iam \
    --op PublicWebLinkPlatformEstablish \
    --namespace $AB_NAMESPACE \
    --platformId 'eZZ5J4Xf' \
    --code 'YT2yxjCE' \
    --state 'hD4jP1B1' \
    > test.out 2>&1
eval_tap $? 275 'PublicWebLinkPlatformEstablish' test.out

#- 276 PublicProcessWebLinkPlatformV3
$CLI_EXE \
    --sn iam \
    --op PublicProcessWebLinkPlatformV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'WQ2f0Lmi' \
    --code 'b6SiXyjF' \
    --state 'IFJxS8D5' \
    > test.out 2>&1
eval_tap $? 276 'PublicProcessWebLinkPlatformV3' test.out

#- 277 PublicGetUsersPlatformInfosV3
# body param: body
echo '{"platformId": "wOUmSx80", "userIds": ["Hsk4TaWZ", "qnXy3irY", "0Qaz7t20"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicGetUsersPlatformInfosV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 277 'PublicGetUsersPlatformInfosV3' test.out

#- 278 ResetPasswordV3
# body param: body
echo '{"code": "GiH0J4kg", "emailAddress": "RHV60bhm", "newPassword": "48CU7UER"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op ResetPasswordV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 278 'ResetPasswordV3' test.out

#- 279 PublicGetUserByUserIdV3
eval_tap 0 279 'PublicGetUserByUserIdV3 # SKIP deprecated' test.out

#- 280 PublicGetUserBanHistoryV3
$CLI_EXE \
    --sn iam \
    --op PublicGetUserBanHistoryV3 \
    --namespace $AB_NAMESPACE \
    --userId '0M8DbZpN' \
    --activeOnly 'true' \
    --after 'omjz7oAl' \
    --before 'UIYKRhrR' \
    --limit '3' \
    > test.out 2>&1
eval_tap $? 280 'PublicGetUserBanHistoryV3' test.out

#- 281 PublicListUserAllPlatformAccountsDistinctV3
$CLI_EXE \
    --sn iam \
    --op PublicListUserAllPlatformAccountsDistinctV3 \
    --namespace $AB_NAMESPACE \
    --userId '0dET1OQy' \
    > test.out 2>&1
eval_tap $? 281 'PublicListUserAllPlatformAccountsDistinctV3' test.out

#- 282 PublicGetUserInformationV3
$CLI_EXE \
    --sn iam \
    --op PublicGetUserInformationV3 \
    --namespace $AB_NAMESPACE \
    --userId 'fw3al5JB' \
    > test.out 2>&1
eval_tap $? 282 'PublicGetUserInformationV3' test.out

#- 283 PublicGetUserLoginHistoriesV3
$CLI_EXE \
    --sn iam \
    --op PublicGetUserLoginHistoriesV3 \
    --namespace $AB_NAMESPACE \
    --userId 'ilLijBHo' \
    --after '0.9009680860836562' \
    --before '0.7174596107903047' \
    --limit '92' \
    > test.out 2>&1
eval_tap $? 283 'PublicGetUserLoginHistoriesV3' test.out

#- 284 PublicGetUserPlatformAccountsV3
$CLI_EXE \
    --sn iam \
    --op PublicGetUserPlatformAccountsV3 \
    --namespace $AB_NAMESPACE \
    --userId 'Ji2vDJ8D' \
    --after 'Jp6FBHbc' \
    --before 'TqcaffAn' \
    --limit '33' \
    --platformId 'dtROsA9F' \
    > test.out 2>&1
eval_tap $? 284 'PublicGetUserPlatformAccountsV3' test.out

#- 285 PublicListJusticePlatformAccountsV3
$CLI_EXE \
    --sn iam \
    --op PublicListJusticePlatformAccountsV3 \
    --namespace $AB_NAMESPACE \
    --userId 'Vhz5jFfF' \
    > test.out 2>&1
eval_tap $? 285 'PublicListJusticePlatformAccountsV3' test.out

#- 286 PublicLinkPlatformAccount
# body param: body
echo '{"platformId": "lbCkEooV", "platformUserId": "O3TRXGPx"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicLinkPlatformAccount \
    --namespace $AB_NAMESPACE \
    --userId 'cCuYFv2S' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 286 'PublicLinkPlatformAccount' test.out

#- 287 PublicForceLinkPlatformWithProgression
# body param: body
echo '{"chosenNamespaces": ["cmoU6ZFA", "UKDe1Iqv", "OcxscvNf"], "requestId": "7jM6DxpN"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicForceLinkPlatformWithProgression \
    --namespace $AB_NAMESPACE \
    --userId 'rO1nd2YY' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 287 'PublicForceLinkPlatformWithProgression' test.out

#- 288 PublicGetPublisherUserV3
$CLI_EXE \
    --sn iam \
    --op PublicGetPublisherUserV3 \
    --namespace $AB_NAMESPACE \
    --userId 'CY0hsx5x' \
    > test.out 2>&1
eval_tap $? 288 'PublicGetPublisherUserV3' test.out

#- 289 PublicValidateUserByUserIDAndPasswordV3
$CLI_EXE \
    --sn iam \
    --op PublicValidateUserByUserIDAndPasswordV3 \
    --namespace $AB_NAMESPACE \
    --userId 'YaEBmX77' \
    --password 'qbLucgUS' \
    > test.out 2>&1
eval_tap $? 289 'PublicValidateUserByUserIDAndPasswordV3' test.out

#- 290 PublicGetRolesV3
$CLI_EXE \
    --sn iam \
    --op PublicGetRolesV3 \
    --after 'LZ0MHtUa' \
    --before 'Nbi7ZHb9' \
    --isWildcard 'false' \
    --limit '2' \
    > test.out 2>&1
eval_tap $? 290 'PublicGetRolesV3' test.out

#- 291 PublicGetRoleV3
$CLI_EXE \
    --sn iam \
    --op PublicGetRoleV3 \
    --roleId 'nCXNyAse' \
    > test.out 2>&1
eval_tap $? 291 'PublicGetRoleV3' test.out

#- 292 PublicGetMyUserV3
$CLI_EXE \
    --sn iam \
    --op PublicGetMyUserV3 \
    --includeAllPlatforms 'false' \
    > test.out 2>&1
eval_tap $? 292 'PublicGetMyUserV3' test.out

#- 293 PublicGetLinkHeadlessAccountToMyAccountConflictV3
$CLI_EXE \
    --sn iam \
    --op PublicGetLinkHeadlessAccountToMyAccountConflictV3 \
    --oneTimeLinkCode 'aJSMtaIg' \
    > test.out 2>&1
eval_tap $? 293 'PublicGetLinkHeadlessAccountToMyAccountConflictV3' test.out

#- 294 LinkHeadlessAccountToMyAccountV3
# body param: body
echo '{"chosenNamespaces": ["xXdi1v8I", "G9TprxC9", "MjacwsOu"], "oneTimeLinkCode": "P4VOjSvg"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op LinkHeadlessAccountToMyAccountV3 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 294 'LinkHeadlessAccountToMyAccountV3' test.out

#- 295 PublicSendVerificationLinkV3
# body param: body
echo '{"languageTag": "7NLdZj97"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicSendVerificationLinkV3 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 295 'PublicSendVerificationLinkV3' test.out

#- 296 PublicVerifyUserByLinkV3
$CLI_EXE \
    --sn iam \
    --op PublicVerifyUserByLinkV3 \
    --code 'F297viKg' \
    > test.out 2>&1
eval_tap $? 296 'PublicVerifyUserByLinkV3' test.out

#- 297 PlatformAuthenticateSAMLV3Handler
$CLI_EXE \
    --sn iam \
    --op PlatformAuthenticateSAMLV3Handler \
    --platformId 'Mz8ic22m' \
    --code 'NKrFT8W9' \
    --error 'DrVoncEh' \
    --state 'ZTovAacL' \
    > test.out 2>&1
eval_tap $? 297 'PlatformAuthenticateSAMLV3Handler' test.out

#- 298 LoginSSOClient
$CLI_EXE \
    --sn iam \
    --op LoginSSOClient \
    --platformId 'koM9Pjlh' \
    --payload 'RdGuCFpA' \
    > test.out 2>&1
eval_tap $? 298 'LoginSSOClient' test.out

#- 299 LogoutSSOClient
$CLI_EXE \
    --sn iam \
    --op LogoutSSOClient \
    --platformId 'YjLBFC1b' \
    > test.out 2>&1
eval_tap $? 299 'LogoutSSOClient' test.out

#- 300 RequestTargetTokenResponseV3
$CLI_EXE \
    --sn iam \
    --op RequestTargetTokenResponseV3 \
    --additionalData 'YQ1LALZz' \
    --code 'kdMcF7Fq' \
    > test.out 2>&1
eval_tap $? 300 'RequestTargetTokenResponseV3' test.out

#- 301 AdminListInvitationHistoriesV4
$CLI_EXE \
    --sn iam \
    --op AdminListInvitationHistoriesV4 \
    --limit '18' \
    --namespace_ 'gmz8kNtN' \
    --offset '73' \
    > test.out 2>&1
eval_tap $? 301 'AdminListInvitationHistoriesV4' test.out

#- 302 AdminGetDevicesByUserV4
$CLI_EXE \
    --sn iam \
    --op AdminGetDevicesByUserV4 \
    --namespace $AB_NAMESPACE \
    --userId 'SNcEt3QH' \
    > test.out 2>&1
eval_tap $? 302 'AdminGetDevicesByUserV4' test.out

#- 303 AdminGetBannedDevicesV4
$CLI_EXE \
    --sn iam \
    --op AdminGetBannedDevicesV4 \
    --namespace $AB_NAMESPACE \
    --deviceType 'FMj7uevK' \
    --endDate 'pPRz3Gqp' \
    --limit '65' \
    --offset '85' \
    --startDate 'P1SPVG7S' \
    > test.out 2>&1
eval_tap $? 303 'AdminGetBannedDevicesV4' test.out

#- 304 AdminGetUserDeviceBansV4
$CLI_EXE \
    --sn iam \
    --op AdminGetUserDeviceBansV4 \
    --namespace $AB_NAMESPACE \
    --userId '4gMDG8cb' \
    > test.out 2>&1
eval_tap $? 304 'AdminGetUserDeviceBansV4' test.out

#- 305 AdminBanDeviceV4
# body param: body
echo '{"comment": "YnTItL5E", "deviceId": "QhYFiAMw", "deviceType": "bOOV04lQ", "enabled": true, "endDate": "mHYHKVz2", "ext": {"Gq9YQNmG": {}, "To2DQhKG": {}, "9bVqogQt": {}}, "reason": "gRZsyDwv"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBanDeviceV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 305 'AdminBanDeviceV4' test.out

#- 306 AdminGetDeviceBanV4
$CLI_EXE \
    --sn iam \
    --op AdminGetDeviceBanV4 \
    --banId 'dxxmEpbc' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 306 'AdminGetDeviceBanV4' test.out

#- 307 AdminUpdateDeviceBanV4
# body param: body
echo '{"enabled": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateDeviceBanV4 \
    --banId 'fuAPDFEx' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 307 'AdminUpdateDeviceBanV4' test.out

#- 308 AdminGenerateReportV4
$CLI_EXE \
    --sn iam \
    --op AdminGenerateReportV4 \
    --namespace $AB_NAMESPACE \
    --endDate 'WqNEUkug' \
    --startDate 'yNB8USU2' \
    --deviceType 'F1OIqIXV' \
    > test.out 2>&1
eval_tap $? 308 'AdminGenerateReportV4' test.out

#- 309 AdminGetDeviceTypesV4
$CLI_EXE \
    --sn iam \
    --op AdminGetDeviceTypesV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 309 'AdminGetDeviceTypesV4' test.out

#- 310 AdminGetDeviceBansV4
$CLI_EXE \
    --sn iam \
    --op AdminGetDeviceBansV4 \
    --deviceId 'bh2miG3Q' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 310 'AdminGetDeviceBansV4' test.out

#- 311 AdminDecryptDeviceV4
$CLI_EXE \
    --sn iam \
    --op AdminDecryptDeviceV4 \
    --deviceId 'wN475iSi' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 311 'AdminDecryptDeviceV4' test.out

#- 312 AdminUnbanDeviceV4
$CLI_EXE \
    --sn iam \
    --op AdminUnbanDeviceV4 \
    --deviceId 'yKZR0upO' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 312 'AdminUnbanDeviceV4' test.out

#- 313 AdminGetUsersByDeviceV4
$CLI_EXE \
    --sn iam \
    --op AdminGetUsersByDeviceV4 \
    --deviceId 'he3mQrCs' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 313 'AdminGetUsersByDeviceV4' test.out

#- 314 AdminGetNamespaceInvitationHistoryV4
$CLI_EXE \
    --sn iam \
    --op AdminGetNamespaceInvitationHistoryV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 314 'AdminGetNamespaceInvitationHistoryV4' test.out

#- 315 AdminGetNamespaceUserInvitationHistoryV4
$CLI_EXE \
    --sn iam \
    --op AdminGetNamespaceUserInvitationHistoryV4 \
    --namespace $AB_NAMESPACE \
    --limit '23' \
    --offset '18' \
    > test.out 2>&1
eval_tap $? 315 'AdminGetNamespaceUserInvitationHistoryV4' test.out

#- 316 AdminCreateTestUsersV4
# body param: body
echo '{"count": 29}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminCreateTestUsersV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 316 'AdminCreateTestUsersV4' test.out

#- 317 AdminCreateUserV4
# body param: body
echo '{"acceptedPolicies": [{"isAccepted": true, "localizedPolicyVersionId": "WG4dB3Je", "policyId": "UmnpXBlg", "policyVersionId": "MD7nXnPb"}, {"isAccepted": true, "localizedPolicyVersionId": "tPkEK06V", "policyId": "VlRLAuUZ", "policyVersionId": "25cO6j5F"}, {"isAccepted": true, "localizedPolicyVersionId": "FT4jwmjd", "policyId": "VnweJB9w", "policyVersionId": "hxTdiJ3l"}], "authType": "EMAILPASSWD", "code": "QdMpg5tn", "country": "ZHRsGeDS", "dateOfBirth": "c1Dr8y3o", "displayName": "8hJXXTTR", "emailAddress": "kmJdbiGN", "password": "JKVQwuo2", "passwordMD5Sum": "d7LIb8JM", "reachMinimumAge": false, "uniqueDisplayName": "vCqJmwy5", "username": "SvmC2ky5"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminCreateUserV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 317 'AdminCreateUserV4' test.out

#- 318 AdminBulkUpdateUserAccountTypeV4
# body param: body
echo '{"testAccount": false, "userIds": ["fZ74KNcF", "AGpquRTo", "z2W69I1K"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBulkUpdateUserAccountTypeV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 318 'AdminBulkUpdateUserAccountTypeV4' test.out

#- 319 AdminBulkCheckValidUserIDV4
# body param: body
echo '{"userIds": ["dwbybBEd", "OABEYdWd", "FqCVEKTK"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBulkCheckValidUserIDV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 319 'AdminBulkCheckValidUserIDV4' test.out

#- 320 AdminUpdateUserV4
# body param: body
echo '{"avatarUrl": "cipzMy4a", "country": "c9gnpZGA", "dateOfBirth": "QsDP1jIM", "displayName": "slFsaUXD", "languageTag": "ac7oVUmQ", "skipLoginQueue": false, "uniqueDisplayName": "ZTkGlWNi", "userName": "vjD1ww7R"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserV4 \
    --namespace $AB_NAMESPACE \
    --userId '3amCWpel' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 320 'AdminUpdateUserV4' test.out

#- 321 AdminUpdateUserEmailAddressV4
# body param: body
echo '{"code": "8OpVPY8l", "emailAddress": "OErfnxQ5"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserEmailAddressV4 \
    --namespace $AB_NAMESPACE \
    --userId 'W9dEFwBi' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 321 'AdminUpdateUserEmailAddressV4' test.out

#- 322 AdminDisableUserMFAV4
$CLI_EXE \
    --sn iam \
    --op AdminDisableUserMFAV4 \
    --namespace $AB_NAMESPACE \
    --userId '8SwfWF1a' \
    > test.out 2>&1
eval_tap $? 322 'AdminDisableUserMFAV4' test.out

#- 323 AdminListUserRolesV4
$CLI_EXE \
    --sn iam \
    --op AdminListUserRolesV4 \
    --namespace $AB_NAMESPACE \
    --userId 'XM1QKYCD' \
    > test.out 2>&1
eval_tap $? 323 'AdminListUserRolesV4' test.out

#- 324 AdminUpdateUserRoleV4
# body param: body
echo '{"assignedNamespaces": ["ZrrLoV2e", "skbYXsv0", "YUEHMese"], "roleId": "Qwlz5Gt7"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserRoleV4 \
    --namespace $AB_NAMESPACE \
    --userId '9eIlBtjC' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 324 'AdminUpdateUserRoleV4' test.out

#- 325 AdminAddUserRoleV4
# body param: body
echo '{"assignedNamespaces": ["6AmkAvvZ", "6bCmqHix", "WvS1dDmj"], "roleId": "iJTxWN28"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddUserRoleV4 \
    --namespace $AB_NAMESPACE \
    --userId 'XKPDciZ1' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 325 'AdminAddUserRoleV4' test.out

#- 326 AdminRemoveUserRoleV4
# body param: body
echo '{"assignedNamespaces": ["3VJilh36", "eJUyiKfQ", "aeAqOgjV"], "roleId": "U5EwrgCD"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminRemoveUserRoleV4 \
    --namespace $AB_NAMESPACE \
    --userId 'YgfEl4OX' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 326 'AdminRemoveUserRoleV4' test.out

#- 327 AdminGetRolesV4
$CLI_EXE \
    --sn iam \
    --op AdminGetRolesV4 \
    --adminRole 'true' \
    --isWildcard 'true' \
    --limit '12' \
    --offset '31' \
    > test.out 2>&1
eval_tap $? 327 'AdminGetRolesV4' test.out

#- 328 AdminCreateRoleV4
# body param: body
echo '{"adminRole": true, "deletable": false, "isWildcard": false, "roleName": "nxrEUwht"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminCreateRoleV4 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 328 'AdminCreateRoleV4' test.out

#- 329 AdminGetRoleV4
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleV4 \
    --roleId '54ylCWDE' \
    > test.out 2>&1
eval_tap $? 329 'AdminGetRoleV4' test.out

#- 330 AdminDeleteRoleV4
$CLI_EXE \
    --sn iam \
    --op AdminDeleteRoleV4 \
    --roleId 'hZA1AMHA' \
    > test.out 2>&1
eval_tap $? 330 'AdminDeleteRoleV4' test.out

#- 331 AdminUpdateRoleV4
# body param: body
echo '{"adminRole": true, "deletable": true, "isWildcard": true, "roleName": "4hhoCsC2"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateRoleV4 \
    --roleId 'gGh0r3q6' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 331 'AdminUpdateRoleV4' test.out

#- 332 AdminUpdateRolePermissionsV4
# body param: body
echo '{"permissions": [{"action": 1, "resource": "ooZhYOUB", "schedAction": 18, "schedCron": "KEm7aJPT", "schedRange": ["vvm2DGRG", "WRxVRo1n", "ZlZd0KMu"]}, {"action": 61, "resource": "XIno5Z2w", "schedAction": 25, "schedCron": "0QWCJQjT", "schedRange": ["7zTeQ3yf", "lTdOn3ys", "Q3bjGTRk"]}, {"action": 6, "resource": "yT1ULfiH", "schedAction": 19, "schedCron": "OznxL5Y0", "schedRange": ["WchI8y4h", "tUWKhkU5", "CZ2PcFzJ"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateRolePermissionsV4 \
    --roleId 'yhl09LZn' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 332 'AdminUpdateRolePermissionsV4' test.out

#- 333 AdminAddRolePermissionsV4
# body param: body
echo '{"permissions": [{"action": 67, "resource": "sIzei8JA", "schedAction": 82, "schedCron": "Bzqw3A4G", "schedRange": ["q6vikjZt", "0FuU0V2x", "LjE9NQmp"]}, {"action": 27, "resource": "ECIUPCnK", "schedAction": 6, "schedCron": "TdRzvXFS", "schedRange": ["Gh126sGK", "sElTA7mm", "WwY7HuEw"]}, {"action": 72, "resource": "7X2cCNwm", "schedAction": 62, "schedCron": "XWke83To", "schedRange": ["gIXWYqaV", "DTUXGKLv", "1N2k1A2Q"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddRolePermissionsV4 \
    --roleId 'n5cky8VO' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 333 'AdminAddRolePermissionsV4' test.out

#- 334 AdminDeleteRolePermissionsV4
# body param: body
echo '["CFmPXO0c", "1xGi8Rtq", "uBfBGexk"]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDeleteRolePermissionsV4 \
    --roleId 'XvpxlmVS' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 334 'AdminDeleteRolePermissionsV4' test.out

#- 335 AdminListAssignedUsersV4
$CLI_EXE \
    --sn iam \
    --op AdminListAssignedUsersV4 \
    --roleId 'X8TS4iTU' \
    --after 'pog9WdRx' \
    --before 'TzjZe3tO' \
    --limit '79' \
    > test.out 2>&1
eval_tap $? 335 'AdminListAssignedUsersV4' test.out

#- 336 AdminAssignUserToRoleV4
# body param: body
echo '{"assignedNamespaces": ["1Bq9Lg76", "Yz3YZrVm", "UInZUacy"], "namespace": "mtG2adi0", "userId": "n9S2Luko"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAssignUserToRoleV4 \
    --roleId 'EC4TRX8s' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 336 'AdminAssignUserToRoleV4' test.out

#- 337 AdminRevokeUserFromRoleV4
# body param: body
echo '{"namespace": "MpDu0cbL", "userId": "nQX0YY4s"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminRevokeUserFromRoleV4 \
    --roleId 'LLCj5ISP' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 337 'AdminRevokeUserFromRoleV4' test.out

#- 338 AdminInviteUserNewV4
# body param: body
echo '{"assignedNamespaces": ["7Jvfa6lc", "96Ahz1i1", "UcrD6qHf"], "emailAddresses": ["mNhn3cFw", "VYuHU2vs", "keetgqDC"], "isAdmin": false, "isNewStudio": false, "namespace": "Ump0OH9D", "roleId": "wg4CitjA"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminInviteUserNewV4 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 338 'AdminInviteUserNewV4' test.out

#- 339 AdminUpdateMyUserV4
# body param: body
echo '{"avatarUrl": "h30td0eO", "country": "btgBCg2D", "dateOfBirth": "PghcwkDk", "displayName": "GKbaHgYu", "languageTag": "K9FXx4vP", "skipLoginQueue": true, "uniqueDisplayName": "osFLLhSm", "userName": "h2BIeUlf"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateMyUserV4 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 339 'AdminUpdateMyUserV4' test.out

#- 340 AdminDisableMyAuthenticatorV4
$CLI_EXE \
    --sn iam \
    --op AdminDisableMyAuthenticatorV4 \
    > test.out 2>&1
eval_tap $? 340 'AdminDisableMyAuthenticatorV4' test.out

#- 341 AdminEnableMyAuthenticatorV4
$CLI_EXE \
    --sn iam \
    --op AdminEnableMyAuthenticatorV4 \
    --code 'UPxTO5e2' \
    > test.out 2>&1
eval_tap $? 341 'AdminEnableMyAuthenticatorV4' test.out

#- 342 AdminGenerateMyAuthenticatorKeyV4
$CLI_EXE \
    --sn iam \
    --op AdminGenerateMyAuthenticatorKeyV4 \
    > test.out 2>&1
eval_tap $? 342 'AdminGenerateMyAuthenticatorKeyV4' test.out

#- 343 AdminGetMyBackupCodesV4
eval_tap 0 343 'AdminGetMyBackupCodesV4 # SKIP deprecated' test.out

#- 344 AdminGenerateMyBackupCodesV4
eval_tap 0 344 'AdminGenerateMyBackupCodesV4 # SKIP deprecated' test.out

#- 345 AdminDisableMyBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op AdminDisableMyBackupCodesV4 \
    > test.out 2>&1
eval_tap $? 345 'AdminDisableMyBackupCodesV4' test.out

#- 346 AdminDownloadMyBackupCodesV4
eval_tap 0 346 'AdminDownloadMyBackupCodesV4 # SKIP deprecated' test.out

#- 347 AdminEnableMyBackupCodesV4
eval_tap 0 347 'AdminEnableMyBackupCodesV4 # SKIP deprecated' test.out

#- 348 AdminGetBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op AdminGetBackupCodesV4 \
    > test.out 2>&1
eval_tap $? 348 'AdminGetBackupCodesV4' test.out

#- 349 AdminGenerateBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op AdminGenerateBackupCodesV4 \
    > test.out 2>&1
eval_tap $? 349 'AdminGenerateBackupCodesV4' test.out

#- 350 AdminEnableBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op AdminEnableBackupCodesV4 \
    > test.out 2>&1
eval_tap $? 350 'AdminEnableBackupCodesV4' test.out

#- 351 AdminSendMyMFAEmailCodeV4
$CLI_EXE \
    --sn iam \
    --op AdminSendMyMFAEmailCodeV4 \
    > test.out 2>&1
eval_tap $? 351 'AdminSendMyMFAEmailCodeV4' test.out

#- 352 AdminDisableMyEmailV4
$CLI_EXE \
    --sn iam \
    --op AdminDisableMyEmailV4 \
    > test.out 2>&1
eval_tap $? 352 'AdminDisableMyEmailV4' test.out

#- 353 AdminEnableMyEmailV4
$CLI_EXE \
    --sn iam \
    --op AdminEnableMyEmailV4 \
    --code 'HbCbAdeR' \
    > test.out 2>&1
eval_tap $? 353 'AdminEnableMyEmailV4' test.out

#- 354 AdminGetMyEnabledFactorsV4
$CLI_EXE \
    --sn iam \
    --op AdminGetMyEnabledFactorsV4 \
    > test.out 2>&1
eval_tap $? 354 'AdminGetMyEnabledFactorsV4' test.out

#- 355 AdminMakeFactorMyDefaultV4
$CLI_EXE \
    --sn iam \
    --op AdminMakeFactorMyDefaultV4 \
    --factor 'uXyyt0HJ' \
    > test.out 2>&1
eval_tap $? 355 'AdminMakeFactorMyDefaultV4' test.out

#- 356 AdminInviteUserV4
eval_tap 0 356 'AdminInviteUserV4 # SKIP deprecated' test.out

#- 357 AuthenticationWithPlatformLinkV4
$CLI_EXE \
    --sn iam \
    --op AuthenticationWithPlatformLinkV4 \
    --extend_exp 'true' \
    --client_id 'Mp4hP9lV' \
    --linkingToken '42CE0bJt' \
    --password 'CkhIwWwy' \
    --username 'B3g4Wjse' \
    > test.out 2>&1
eval_tap $? 357 'AuthenticationWithPlatformLinkV4' test.out

#- 358 GenerateTokenByNewHeadlessAccountV4
$CLI_EXE \
    --sn iam \
    --op GenerateTokenByNewHeadlessAccountV4 \
    --additionalData 'IxEu1haV' \
    --extend_exp 'false' \
    --linkingToken 'JUbvykBk' \
    > test.out 2>&1
eval_tap $? 358 'GenerateTokenByNewHeadlessAccountV4' test.out

#- 359 Verify2faCodeV4
$CLI_EXE \
    --sn iam \
    --op Verify2faCodeV4 \
    --code 'WVSi6oBX' \
    --factor '6XqDLen8' \
    --mfaToken 'd5BXj8YJ' \
    --rememberDevice 'true' \
    > test.out 2>&1
eval_tap $? 359 'Verify2faCodeV4' test.out

#- 360 PlatformTokenGrantV4
$CLI_EXE \
    --sn iam \
    --op PlatformTokenGrantV4 \
    --platformId 'j7NWAAPh' \
    --codeChallenge 'PURPYByy' \
    --codeChallengeMethod 'S256' \
    --additionalData 'ptknm2lX' \
    --client_id 'IhVmhoUl' \
    --createHeadless 'true' \
    --device_id 'o3zVrMXo' \
    --macAddress 'ThFWNB0u' \
    --platform_token 'rH5LjkeD' \
    --skipSetCookie 'false' \
    > test.out 2>&1
eval_tap $? 360 'PlatformTokenGrantV4' test.out

#- 361 SimultaneousLoginV4
$CLI_EXE \
    --sn iam \
    --op SimultaneousLoginV4 \
    --codeChallenge 'dTQdzC5B' \
    --codeChallengeMethod 'S256' \
    --simultaneousPlatform 'pspc' \
    --simultaneousTicket '9KGF8L4u' \
    --nativePlatform 'epicgames' \
    --nativePlatformTicket '6cZehdlK' \
    > test.out 2>&1
eval_tap $? 361 'SimultaneousLoginV4' test.out

#- 362 TokenGrantV4
$CLI_EXE \
    --sn iam \
    --op TokenGrantV4 \
    --codeChallenge 'A7p6LroD' \
    --codeChallengeMethod 'plain' \
    --additionalData 'w7wpYVXb' \
    --client_id 'dJiN1KiL' \
    --code 'SJPzhh1h' \
    --code_verifier 'RgJeFlZc' \
    --extendNamespace '8QPjdGxN' \
    --extend_exp 'false' \
    --login_queue_ticket 'cqHQr38g' \
    --password 'JMT3Iq39' \
    --redirect_uri '6OeHcS4u' \
    --refresh_token 'BdEVdsQ1' \
    --username 'kGdtWoAU' \
    --grant_type 'password' \
    > test.out 2>&1
eval_tap $? 362 'TokenGrantV4' test.out

#- 363 RequestTargetTokenResponseV4
$CLI_EXE \
    --sn iam \
    --op RequestTargetTokenResponseV4 \
    --additionalData 'UkEdsT8Q' \
    --code 'NMa1JxqF' \
    > test.out 2>&1
eval_tap $? 363 'RequestTargetTokenResponseV4' test.out

#- 364 PublicCreateTestUserV4
# body param: body
echo '{"acceptedPolicies": [{"isAccepted": false, "localizedPolicyVersionId": "zFdQYrOv", "policyId": "7KZNL4wp", "policyVersionId": "9el2yfXS"}, {"isAccepted": true, "localizedPolicyVersionId": "H6mYbye6", "policyId": "AW7but51", "policyVersionId": "LcdraVAN"}, {"isAccepted": false, "localizedPolicyVersionId": "M9VqNDyQ", "policyId": "rRT4vNwn", "policyVersionId": "WjiHIigd"}], "authType": "EMAILPASSWD", "country": "EKra4Oht", "dateOfBirth": "8VdVpc2y", "displayName": "C9CZT9V7", "emailAddress": "p23H9npU", "password": "5wQXwVbB", "passwordMD5Sum": "dgz6H6jF", "uniqueDisplayName": "YPdXakqp", "username": "Qv2lJDIG", "verified": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicCreateTestUserV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 364 'PublicCreateTestUserV4' test.out

#- 365 PublicCreateUserV4
# body param: body
echo '{"acceptedPolicies": [{"isAccepted": true, "localizedPolicyVersionId": "hDpqCdyz", "policyId": "HD6I9FkJ", "policyVersionId": "wBUSk9Jh"}, {"isAccepted": true, "localizedPolicyVersionId": "AZmgQl29", "policyId": "ZqfnGjlH", "policyVersionId": "qZOQB6K3"}, {"isAccepted": true, "localizedPolicyVersionId": "0LFA50rR", "policyId": "YOKKQ59P", "policyVersionId": "aU6jdZkX"}], "authType": "EMAILPASSWD", "code": "jZKyaSOe", "country": "W1RbX2JI", "dateOfBirth": "YuZp8os6", "displayName": "8MyXwCOP", "emailAddress": "szKsPsqK", "password": "TnjKeUDd", "passwordMD5Sum": "wS8SN8MO", "reachMinimumAge": false, "uniqueDisplayName": "NH0Gvqvg", "username": "lrBa2Rkl"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicCreateUserV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 365 'PublicCreateUserV4' test.out

#- 366 CreateUserFromInvitationV4
# body param: body
echo '{"acceptedPolicies": [{"isAccepted": false, "localizedPolicyVersionId": "PIlNpPOQ", "policyId": "LFWBrZj4", "policyVersionId": "jh1hgkYU"}, {"isAccepted": false, "localizedPolicyVersionId": "Letm1PCw", "policyId": "KlBQuGz3", "policyVersionId": "jkYLHpYI"}, {"isAccepted": false, "localizedPolicyVersionId": "Vs1icVDz", "policyId": "eNJAgiRq", "policyVersionId": "BqSJkoCl"}], "authType": "EMAILPASSWD", "code": "TKK17KPo", "country": "iKpiozgv", "dateOfBirth": "cumuQiXx", "displayName": "jMk0aDO9", "emailAddress": "ojTRwDBa", "password": "stzKbtCs", "passwordMD5Sum": "nFpfQdgt", "reachMinimumAge": false, "uniqueDisplayName": "mzW7DxbO", "username": "wDoDE6sc"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op CreateUserFromInvitationV4 \
    --invitationId 'rVq3PjHf' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 366 'CreateUserFromInvitationV4' test.out

#- 367 PublicUpdateUserV4
# body param: body
echo '{"avatarUrl": "ipFScgD0", "country": "SGxmRYJM", "dateOfBirth": "piKUY1yl", "displayName": "2oNnjEjV", "languageTag": "weDVU59V", "uniqueDisplayName": "77rAXmFK", "userName": "CiORZOgG"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpdateUserV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 367 'PublicUpdateUserV4' test.out

#- 368 PublicUpdateUserEmailAddressV4
# body param: body
echo '{"code": "fzkEAiiv", "emailAddress": "54pi9nGU"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpdateUserEmailAddressV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 368 'PublicUpdateUserEmailAddressV4' test.out

#- 369 PublicUpgradeHeadlessAccountWithVerificationCodeV4
# body param: body
echo '{"code": "Yt7fGXVO", "country": "Xd2cepls", "dateOfBirth": "gjP8ffvQ", "displayName": "y6qL3xtu", "emailAddress": "LLJMRSMS", "password": "W50v6OVP", "reachMinimumAge": true, "uniqueDisplayName": "7IfxLXpY", "username": "3EdW385j", "validateOnly": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpgradeHeadlessAccountWithVerificationCodeV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 369 'PublicUpgradeHeadlessAccountWithVerificationCodeV4' test.out

#- 370 PublicUpgradeHeadlessAccountV4
# body param: body
echo '{"emailAddress": "bpDra8yt", "password": "sAGR4snC", "username": "nmUbuXes"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpgradeHeadlessAccountV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 370 'PublicUpgradeHeadlessAccountV4' test.out

#- 371 PublicDisableMyAuthenticatorV4
$CLI_EXE \
    --sn iam \
    --op PublicDisableMyAuthenticatorV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 371 'PublicDisableMyAuthenticatorV4' test.out

#- 372 PublicEnableMyAuthenticatorV4
$CLI_EXE \
    --sn iam \
    --op PublicEnableMyAuthenticatorV4 \
    --namespace $AB_NAMESPACE \
    --code '6Q8fsOSc' \
    > test.out 2>&1
eval_tap $? 372 'PublicEnableMyAuthenticatorV4' test.out

#- 373 PublicGenerateMyAuthenticatorKeyV4
$CLI_EXE \
    --sn iam \
    --op PublicGenerateMyAuthenticatorKeyV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 373 'PublicGenerateMyAuthenticatorKeyV4' test.out

#- 374 PublicGetMyBackupCodesV4
eval_tap 0 374 'PublicGetMyBackupCodesV4 # SKIP deprecated' test.out

#- 375 PublicGenerateMyBackupCodesV4
eval_tap 0 375 'PublicGenerateMyBackupCodesV4 # SKIP deprecated' test.out

#- 376 PublicDisableMyBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op PublicDisableMyBackupCodesV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 376 'PublicDisableMyBackupCodesV4' test.out

#- 377 PublicDownloadMyBackupCodesV4
eval_tap 0 377 'PublicDownloadMyBackupCodesV4 # SKIP deprecated' test.out

#- 378 PublicEnableMyBackupCodesV4
eval_tap 0 378 'PublicEnableMyBackupCodesV4 # SKIP deprecated' test.out

#- 379 PublicGetBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op PublicGetBackupCodesV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 379 'PublicGetBackupCodesV4' test.out

#- 380 PublicGenerateBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op PublicGenerateBackupCodesV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 380 'PublicGenerateBackupCodesV4' test.out

#- 381 PublicEnableBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op PublicEnableBackupCodesV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 381 'PublicEnableBackupCodesV4' test.out

#- 382 PublicRemoveTrustedDeviceV4
$CLI_EXE \
    --sn iam \
    --op PublicRemoveTrustedDeviceV4 \
    --namespace $AB_NAMESPACE \
    --device_token '1EfIvhTw' \
    > test.out 2>&1
eval_tap $? 382 'PublicRemoveTrustedDeviceV4' test.out

#- 383 PublicSendMyMFAEmailCodeV4
$CLI_EXE \
    --sn iam \
    --op PublicSendMyMFAEmailCodeV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 383 'PublicSendMyMFAEmailCodeV4' test.out

#- 384 PublicDisableMyEmailV4
$CLI_EXE \
    --sn iam \
    --op PublicDisableMyEmailV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 384 'PublicDisableMyEmailV4' test.out

#- 385 PublicEnableMyEmailV4
$CLI_EXE \
    --sn iam \
    --op PublicEnableMyEmailV4 \
    --namespace $AB_NAMESPACE \
    --code 'NYkjXsxi' \
    > test.out 2>&1
eval_tap $? 385 'PublicEnableMyEmailV4' test.out

#- 386 PublicGetMyEnabledFactorsV4
$CLI_EXE \
    --sn iam \
    --op PublicGetMyEnabledFactorsV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 386 'PublicGetMyEnabledFactorsV4' test.out

#- 387 PublicMakeFactorMyDefaultV4
$CLI_EXE \
    --sn iam \
    --op PublicMakeFactorMyDefaultV4 \
    --namespace $AB_NAMESPACE \
    --factor 'HHESj9G8' \
    > test.out 2>&1
eval_tap $? 387 'PublicMakeFactorMyDefaultV4' test.out

#- 388 PublicGetUserPublicInfoByUserIdV4
$CLI_EXE \
    --sn iam \
    --op PublicGetUserPublicInfoByUserIdV4 \
    --namespace $AB_NAMESPACE \
    --userId 'jjvF28HW' \
    > test.out 2>&1
eval_tap $? 388 'PublicGetUserPublicInfoByUserIdV4' test.out

#- 389 PublicInviteUserV4
# body param: body
echo '{"additionalData": "qhnCut50", "emailAddress": "mTdiA9G0", "namespace": "SgF6RvkA", "namespaceDisplayName": "BetJxDKb"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicInviteUserV4 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 389 'PublicInviteUserV4' test.out


# remove artifacts
rm -f "$CLI_TOKEN_FILE"
rm -f "$TEMP_JSON_INPUT"
rm -f "$TEMP_FILE_UPLOAD"

exit $EXIT_CODE