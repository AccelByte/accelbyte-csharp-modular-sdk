#!/usr/bin/env bash

# Copyright (c) 2021 AccelByte Inc. All Rights Reserved.
# This is licensed software from AccelByte Inc, for limitations
# and restrictions contact your company contract manager.

# This code is generated by tool. DO NOT EDIT.

# Meta:
# - random seed: 
# - template file: 

# Instructions:
# - Run the Justice SDK Mock Server first before running this script.

export AB_BASE_URL="http://127.0.0.1:8080"
export AB_CLIENT_ID="admin"
export AB_CLIENT_SECRET="admin"
export AB_NAMESPACE="test"
export AB_APP_NAME="UnitTest"

EXIT_CODE=0

eval_tap() {
  if [ $1 -eq 0 ]; then
    echo "ok $2 - $3"
  else
    EXIT_CODE=1
    echo "not ok $2 - $3"
    sed 's/^/# /g' $4
  fi
  rm -f $4
}

CLI_EXE="AccelByte.Sdk.Sample.Cli"
CLI_TOKEN_FILE="$(dirname "$(which $CLI_EXE)")/token.json"
TEMP_JSON_INPUT="input_json.json"
TEMP_FILE_UPLOAD="file_upload.bin"

echo "TAP version 13"
echo "1..355"

#- 1 Login
$CLI_EXE --op login --lt user --user user --pass user > test.out 2>&1
eval_tap $? 1 'Login' test.out

if [ $EXIT_CODE -ne 0 ]; then
  echo "Bail out! Login failed."
  exit $EXIT_CODE
fi

# echo "foo" > "$CLI_TOKEN_FILE"

#- 2 GetBansType
eval_tap 0 2 'GetBansType # SKIP deprecated' test.out

#- 3 GetListBanReason
eval_tap 0 3 'GetListBanReason # SKIP deprecated' test.out

#- 4 GetClients
eval_tap 0 4 'GetClients # SKIP deprecated' test.out

#- 5 CreateClient
eval_tap 0 5 'CreateClient # SKIP deprecated' test.out

#- 6 GetClient
eval_tap 0 6 'GetClient # SKIP deprecated' test.out

#- 7 UpdateClient
eval_tap 0 7 'UpdateClient # SKIP deprecated' test.out

#- 8 DeleteClient
eval_tap 0 8 'DeleteClient # SKIP deprecated' test.out

#- 9 UpdateClientPermission
eval_tap 0 9 'UpdateClientPermission # SKIP deprecated' test.out

#- 10 AddClientPermission
eval_tap 0 10 'AddClientPermission # SKIP deprecated' test.out

#- 11 DeleteClientPermission
eval_tap 0 11 'DeleteClientPermission # SKIP deprecated' test.out

#- 12 UpdateClientSecret
eval_tap 0 12 'UpdateClientSecret # SKIP deprecated' test.out

#- 13 GetClientsbyNamespace
eval_tap 0 13 'GetClientsbyNamespace # SKIP deprecated' test.out

#- 14 CreateClientByNamespace
eval_tap 0 14 'CreateClientByNamespace # SKIP deprecated' test.out

#- 15 DeleteClientByNamespace
eval_tap 0 15 'DeleteClientByNamespace # SKIP deprecated' test.out

#- 16 CreateUser
eval_tap 0 16 'CreateUser # SKIP deprecated' test.out

#- 17 GetAdminUsersByRoleID
eval_tap 0 17 'GetAdminUsersByRoleID # SKIP deprecated' test.out

#- 18 GetUserByLoginID
eval_tap 0 18 'GetUserByLoginID # SKIP deprecated' test.out

#- 19 GetUserByPlatformUserID
eval_tap 0 19 'GetUserByPlatformUserID # SKIP deprecated' test.out

#- 20 ForgotPassword
eval_tap 0 20 'ForgotPassword # SKIP deprecated' test.out

#- 21 GetUsersByLoginIds
eval_tap 0 21 'GetUsersByLoginIds # SKIP deprecated' test.out

#- 22 ResetPassword
eval_tap 0 22 'ResetPassword # SKIP deprecated' test.out

#- 23 SearchUser
eval_tap 0 23 'SearchUser # SKIP deprecated' test.out

#- 24 GetUserByUserID
eval_tap 0 24 'GetUserByUserID # SKIP deprecated' test.out

#- 25 UpdateUser
eval_tap 0 25 'UpdateUser # SKIP deprecated' test.out

#- 26 DeleteUser
eval_tap 0 26 'DeleteUser # SKIP deprecated' test.out

#- 27 BanUser
eval_tap 0 27 'BanUser # SKIP deprecated' test.out

#- 28 GetUserBanHistory
eval_tap 0 28 'GetUserBanHistory # SKIP deprecated' test.out

#- 29 DisableUserBan
eval_tap 0 29 'DisableUserBan # SKIP deprecated' test.out

#- 30 EnableUserBan
eval_tap 0 30 'EnableUserBan # SKIP deprecated' test.out

#- 31 ListCrossNamespaceAccountLink
eval_tap 0 31 'ListCrossNamespaceAccountLink # SKIP deprecated' test.out

#- 32 DisableUser
eval_tap 0 32 'DisableUser # SKIP deprecated' test.out

#- 33 EnableUser
eval_tap 0 33 'EnableUser # SKIP deprecated' test.out

#- 34 GetUserInformation
eval_tap 0 34 'GetUserInformation # SKIP deprecated' test.out

#- 35 DeleteUserInformation
eval_tap 0 35 'DeleteUserInformation # SKIP deprecated' test.out

#- 36 GetUserLoginHistories
eval_tap 0 36 'GetUserLoginHistories # SKIP deprecated' test.out

#- 37 UpdatePassword
eval_tap 0 37 'UpdatePassword # SKIP deprecated' test.out

#- 38 SaveUserPermission
eval_tap 0 38 'SaveUserPermission # SKIP deprecated' test.out

#- 39 AddUserPermission
eval_tap 0 39 'AddUserPermission # SKIP deprecated' test.out

#- 40 DeleteUserPermission
eval_tap 0 40 'DeleteUserPermission # SKIP deprecated' test.out

#- 41 GetUserPlatformAccounts
eval_tap 0 41 'GetUserPlatformAccounts # SKIP deprecated' test.out

#- 42 GetUserMapping
eval_tap 0 42 'GetUserMapping # SKIP deprecated' test.out

#- 43 GetUserJusticePlatformAccount
eval_tap 0 43 'GetUserJusticePlatformAccount # SKIP deprecated' test.out

#- 44 PlatformLink
eval_tap 0 44 'PlatformLink # SKIP deprecated' test.out

#- 45 PlatformUnlink
eval_tap 0 45 'PlatformUnlink # SKIP deprecated' test.out

#- 46 GetPublisherUser
eval_tap 0 46 'GetPublisherUser # SKIP deprecated' test.out

#- 47 SaveUserRoles
eval_tap 0 47 'SaveUserRoles # SKIP deprecated' test.out

#- 48 AddUserRole
eval_tap 0 48 'AddUserRole # SKIP deprecated' test.out

#- 49 DeleteUserRole
eval_tap 0 49 'DeleteUserRole # SKIP deprecated' test.out

#- 50 UpgradeHeadlessAccount
eval_tap 0 50 'UpgradeHeadlessAccount # SKIP deprecated' test.out

#- 51 UpgradeHeadlessAccountWithVerificationCode
eval_tap 0 51 'UpgradeHeadlessAccountWithVerificationCode # SKIP deprecated' test.out

#- 52 UserVerification
eval_tap 0 52 'UserVerification # SKIP deprecated' test.out

#- 53 SendVerificationCode
eval_tap 0 53 'SendVerificationCode # SKIP deprecated' test.out

#- 54 Authorization
eval_tap 0 54 'Authorization # SKIP deprecated' test.out

#- 55 GetJWKS
eval_tap 0 55 'GetJWKS # SKIP deprecated' test.out

#- 56 PlatformTokenRequestHandler
eval_tap 0 56 'PlatformTokenRequestHandler # SKIP deprecated' test.out

#- 57 RevokeUser
eval_tap 0 57 'RevokeUser # SKIP deprecated' test.out

#- 58 GetRevocationList
eval_tap 0 58 'GetRevocationList # SKIP deprecated' test.out

#- 59 RevokeToken
eval_tap 0 59 'RevokeToken # SKIP deprecated' test.out

#- 60 RevokeAUser
eval_tap 0 60 'RevokeAUser # SKIP deprecated' test.out

#- 61 TokenGrant
eval_tap 0 61 'TokenGrant # SKIP deprecated' test.out

#- 62 VerifyToken
eval_tap 0 62 'VerifyToken # SKIP deprecated' test.out

#- 63 GetRoles
eval_tap 0 63 'GetRoles # SKIP deprecated' test.out

#- 64 CreateRole
eval_tap 0 64 'CreateRole # SKIP deprecated' test.out

#- 65 GetRole
eval_tap 0 65 'GetRole # SKIP deprecated' test.out

#- 66 UpdateRole
eval_tap 0 66 'UpdateRole # SKIP deprecated' test.out

#- 67 DeleteRole
eval_tap 0 67 'DeleteRole # SKIP deprecated' test.out

#- 68 GetRoleAdminStatus
eval_tap 0 68 'GetRoleAdminStatus # SKIP deprecated' test.out

#- 69 SetRoleAsAdmin
eval_tap 0 69 'SetRoleAsAdmin # SKIP deprecated' test.out

#- 70 RemoveRoleAdmin
eval_tap 0 70 'RemoveRoleAdmin # SKIP deprecated' test.out

#- 71 GetRoleManagers
eval_tap 0 71 'GetRoleManagers # SKIP deprecated' test.out

#- 72 AddRoleManagers
eval_tap 0 72 'AddRoleManagers # SKIP deprecated' test.out

#- 73 RemoveRoleManagers
eval_tap 0 73 'RemoveRoleManagers # SKIP deprecated' test.out

#- 74 GetRoleMembers
eval_tap 0 74 'GetRoleMembers # SKIP deprecated' test.out

#- 75 AddRoleMembers
eval_tap 0 75 'AddRoleMembers # SKIP deprecated' test.out

#- 76 RemoveRoleMembers
eval_tap 0 76 'RemoveRoleMembers # SKIP deprecated' test.out

#- 77 UpdateRolePermissions
eval_tap 0 77 'UpdateRolePermissions # SKIP deprecated' test.out

#- 78 AddRolePermission
eval_tap 0 78 'AddRolePermission # SKIP deprecated' test.out

#- 79 DeleteRolePermission
eval_tap 0 79 'DeleteRolePermission # SKIP deprecated' test.out

#- 80 AdminGetAgeRestrictionStatusV2
eval_tap 0 80 'AdminGetAgeRestrictionStatusV2 # SKIP deprecated' test.out

#- 81 AdminUpdateAgeRestrictionConfigV2
eval_tap 0 81 'AdminUpdateAgeRestrictionConfigV2 # SKIP deprecated' test.out

#- 82 GetListCountryAgeRestriction
eval_tap 0 82 'GetListCountryAgeRestriction # SKIP deprecated' test.out

#- 83 UpdateCountryAgeRestriction
eval_tap 0 83 'UpdateCountryAgeRestriction # SKIP deprecated' test.out

#- 84 AdminSearchUsersV2
eval_tap 0 84 'AdminSearchUsersV2 # SKIP deprecated' test.out

#- 85 AdminGetUserByUserIdV2
eval_tap 0 85 'AdminGetUserByUserIdV2 # SKIP deprecated' test.out

#- 86 AdminUpdateUserV2
eval_tap 0 86 'AdminUpdateUserV2 # SKIP deprecated' test.out

#- 87 AdminBanUserV2
eval_tap 0 87 'AdminBanUserV2 # SKIP deprecated' test.out

#- 88 AdminGetUserBanV2
eval_tap 0 88 'AdminGetUserBanV2 # SKIP deprecated' test.out

#- 89 AdminDisableUserV2
eval_tap 0 89 'AdminDisableUserV2 # SKIP deprecated' test.out

#- 90 AdminEnableUserV2
eval_tap 0 90 'AdminEnableUserV2 # SKIP deprecated' test.out

#- 91 AdminResetPasswordV2
eval_tap 0 91 'AdminResetPasswordV2 # SKIP deprecated' test.out

#- 92 AdminDeletePlatformLinkV2
eval_tap 0 92 'AdminDeletePlatformLinkV2 # SKIP deprecated' test.out

#- 93 AdminPutUserRolesV2
eval_tap 0 93 'AdminPutUserRolesV2 # SKIP deprecated' test.out

#- 94 AdminCreateUserRolesV2
eval_tap 0 94 'AdminCreateUserRolesV2 # SKIP deprecated' test.out

#- 95 PublicGetCountryAgeRestriction
eval_tap 0 95 'PublicGetCountryAgeRestriction # SKIP deprecated' test.out

#- 96 PublicCreateUserV2
eval_tap 0 96 'PublicCreateUserV2 # SKIP deprecated' test.out

#- 97 PublicForgotPasswordV2
eval_tap 0 97 'PublicForgotPasswordV2 # SKIP deprecated' test.out

#- 98 PublicResetPasswordV2
eval_tap 0 98 'PublicResetPasswordV2 # SKIP deprecated' test.out

#- 99 PublicGetUserByUserIDV2
eval_tap 0 99 'PublicGetUserByUserIDV2 # SKIP deprecated' test.out

#- 100 PublicUpdateUserV2
eval_tap 0 100 'PublicUpdateUserV2 # SKIP deprecated' test.out

#- 101 PublicGetUserBan
eval_tap 0 101 'PublicGetUserBan # SKIP deprecated' test.out

#- 102 PublicUpdatePasswordV2
eval_tap 0 102 'PublicUpdatePasswordV2 # SKIP deprecated' test.out

#- 103 GetListJusticePlatformAccounts
eval_tap 0 103 'GetListJusticePlatformAccounts # SKIP deprecated' test.out

#- 104 PublicPlatformLinkV2
eval_tap 0 104 'PublicPlatformLinkV2 # SKIP deprecated' test.out

#- 105 PublicDeletePlatformLinkV2
eval_tap 0 105 'PublicDeletePlatformLinkV2 # SKIP deprecated' test.out

#- 106 AdminGetBansTypeV3
$CLI_EXE \
    --sn iam \
    --op AdminGetBansTypeV3 \
    > test.out 2>&1
eval_tap $? 106 'AdminGetBansTypeV3' test.out

#- 107 AdminGetListBanReasonV3
$CLI_EXE \
    --sn iam \
    --op AdminGetListBanReasonV3 \
    > test.out 2>&1
eval_tap $? 107 'AdminGetListBanReasonV3' test.out

#- 108 AdminGetInputValidations
$CLI_EXE \
    --sn iam \
    --op AdminGetInputValidations \
    > test.out 2>&1
eval_tap $? 108 'AdminGetInputValidations' test.out

#- 109 AdminUpdateInputValidations
# body param: body
echo '[{"field": "NN0prz2B", "validation": {"allowAllSpecialCharacters": true, "allowDigit": false, "allowLetter": true, "allowSpace": true, "allowUnicode": true, "avatarConfig": {"allowedPrefixes": ["AGFYeZMw", "ZOAxvdCa", "WLJtCZeU"], "preferRegex": false, "regex": "wNiTUMJJ"}, "blockedWord": ["1i68rWrO", "FO9tOuM2", "bYe1t63r"], "description": [{"language": "Oeucr6xY", "message": ["RFBnBJMl", "8YdeAdTP", "SCtJ191b"]}, {"language": "fYxBSS0q", "message": ["jtdIT9cJ", "AsQKskub", "q2350AOv"]}, {"language": "qn0olYNz", "message": ["WLMFMKAh", "AsDvx0Te", "LDuyGatl"]}], "isCustomRegex": false, "letterCase": "t5n3aG0C", "maxLength": 37, "maxRepeatingAlphaNum": 24, "maxRepeatingSpecialCharacter": 28, "minCharType": 61, "minLength": 43, "regex": "lUbOvLGE", "specialCharacterLocation": "hfjsYZO9", "specialCharacters": ["GtGaCzeV", "CP8krH2t", "HH0pKvuz"]}}, {"field": "DNxqQEHY", "validation": {"allowAllSpecialCharacters": true, "allowDigit": true, "allowLetter": false, "allowSpace": false, "allowUnicode": false, "avatarConfig": {"allowedPrefixes": ["4rxad0lu", "fQkCxsLa", "ZfrEOnSk"], "preferRegex": false, "regex": "NT6jceph"}, "blockedWord": ["HLqnf6s6", "F040S58F", "SFAf303W"], "description": [{"language": "8E0iGEDR", "message": ["wq5OLzwn", "P2sv2JzM", "KhLzmm7V"]}, {"language": "lebC1IWp", "message": ["1MEGy11F", "MWu1J91U", "DZFPm5OS"]}, {"language": "SSKcVj6E", "message": ["nZJ9IQUF", "McCwLOCu", "kAv46hEZ"]}], "isCustomRegex": false, "letterCase": "HjdhFsCX", "maxLength": 65, "maxRepeatingAlphaNum": 20, "maxRepeatingSpecialCharacter": 20, "minCharType": 39, "minLength": 56, "regex": "vqfC6o6Q", "specialCharacterLocation": "cxxxF08C", "specialCharacters": ["xy9vW4z5", "rnsYSeAw", "0y95tCYh"]}}, {"field": "2DLAFEHS", "validation": {"allowAllSpecialCharacters": false, "allowDigit": true, "allowLetter": false, "allowSpace": true, "allowUnicode": false, "avatarConfig": {"allowedPrefixes": ["SzcQ52OU", "QJDOeMSW", "t7IgDaM8"], "preferRegex": false, "regex": "iJQAEUNI"}, "blockedWord": ["M9tujc01", "Tkr8DgAu", "8Xrqouz3"], "description": [{"language": "YohHy2Ft", "message": ["KKmYkoYQ", "WPkUlB31", "KHHg0BAn"]}, {"language": "9nGYL1Hy", "message": ["DokUkm5g", "R7ArHehB", "IC59ppb8"]}, {"language": "ri0p3Y3E", "message": ["dc8CANZK", "aUxQc597", "Vjv627oQ"]}], "isCustomRegex": true, "letterCase": "6z1Vb27A", "maxLength": 48, "maxRepeatingAlphaNum": 68, "maxRepeatingSpecialCharacter": 1, "minCharType": 92, "minLength": 97, "regex": "9bRwqUD7", "specialCharacterLocation": "c0zftRd0", "specialCharacters": ["D0NS1FgV", "iG2OAvWl", "iuT7pJ2z"]}}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateInputValidations \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 109 'AdminUpdateInputValidations' test.out

#- 110 AdminResetInputValidations
$CLI_EXE \
    --sn iam \
    --op AdminResetInputValidations \
    --field 'ofEI39pW' \
    > test.out 2>&1
eval_tap $? 110 'AdminResetInputValidations' test.out

#- 111 ListAdminsV3
$CLI_EXE \
    --sn iam \
    --op ListAdminsV3 \
    --namespace $AB_NAMESPACE \
    --after 'Jf4xgC0L' \
    --before 'ePj2LCTX' \
    --limit '35' \
    > test.out 2>&1
eval_tap $? 111 'ListAdminsV3' test.out

#- 112 AdminGetAgeRestrictionStatusV3
$CLI_EXE \
    --sn iam \
    --op AdminGetAgeRestrictionStatusV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 112 'AdminGetAgeRestrictionStatusV3' test.out

#- 113 AdminUpdateAgeRestrictionConfigV3
# body param: body
echo '{"ageRestriction": 54, "enable": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateAgeRestrictionConfigV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 113 'AdminUpdateAgeRestrictionConfigV3' test.out

#- 114 AdminGetListCountryAgeRestrictionV3
$CLI_EXE \
    --sn iam \
    --op AdminGetListCountryAgeRestrictionV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 114 'AdminGetListCountryAgeRestrictionV3' test.out

#- 115 AdminUpdateCountryAgeRestrictionV3
# body param: body
echo '{"ageRestriction": 69}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateCountryAgeRestrictionV3 \
    --countryCode 'rNBQinlp' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 115 'AdminUpdateCountryAgeRestrictionV3' test.out

#- 116 AdminGetBannedUsersV3
$CLI_EXE \
    --sn iam \
    --op AdminGetBannedUsersV3 \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --banType 'YgpdVmZ6' \
    --limit '29' \
    --offset '76' \
    > test.out 2>&1
eval_tap $? 116 'AdminGetBannedUsersV3' test.out

#- 117 AdminBanUserBulkV3
# body param: body
echo '{"ban": "9TFpE7NQ", "comment": "UQebY3MF", "endDate": "9oDLWuXF", "reason": "Y51cEiwa", "skipNotif": false, "userIds": ["YxPYJEyT", "Z3tG2j3t", "ZFKgBmwh"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBanUserBulkV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 117 'AdminBanUserBulkV3' test.out

#- 118 AdminUnbanUserBulkV3
# body param: body
echo '{"bans": [{"banId": "YZeTzwfj", "userId": "YDz6GX7Q"}, {"banId": "wotv2z9i", "userId": "daHKskgd"}, {"banId": "dbiuhLPU", "userId": "7a812UCk"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUnbanUserBulkV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 118 'AdminUnbanUserBulkV3' test.out

#- 119 AdminGetBansTypeWithNamespaceV3
$CLI_EXE \
    --sn iam \
    --op AdminGetBansTypeWithNamespaceV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 119 'AdminGetBansTypeWithNamespaceV3' test.out

#- 120 AdminGetClientsByNamespaceV3
$CLI_EXE \
    --sn iam \
    --op AdminGetClientsByNamespaceV3 \
    --namespace $AB_NAMESPACE \
    --clientId 'OLQqutEa' \
    --clientName 'F22oPpUv' \
    --clientType 'LGmnEuyC' \
    --limit '35' \
    --offset '85' \
    > test.out 2>&1
eval_tap $? 120 'AdminGetClientsByNamespaceV3' test.out

#- 121 AdminCreateClientV3
# body param: body
echo '{"audiences": ["5SUQosJh", "CAlB8P9P", "45bw2yUO"], "baseUri": "ZoxmoyfT", "clientId": "Ylz52ceR", "clientName": "LrbtcRFP", "clientPermissions": [{"action": 86, "resource": "irnlqkJ4", "schedAction": 33, "schedCron": "fi3jdL6H", "schedRange": ["zzta53Ad", "PI8DO6y4", "I6X5pQD3"]}, {"action": 45, "resource": "wOfMdb6T", "schedAction": 83, "schedCron": "NKkDjVtL", "schedRange": ["aqMKXDYK", "zLJd61my", "E7qKQ3j6"]}, {"action": 63, "resource": "cR0qiAOd", "schedAction": 52, "schedCron": "BTCPmd8S", "schedRange": ["PNkvbkjP", "DBZBkzkw", "bamYTuvC"]}], "clientPlatform": "QSKefYka", "deletable": true, "description": "avqnxGFQ", "namespace": "RDOLgVYE", "oauthAccessTokenExpiration": 70, "oauthAccessTokenExpirationTimeUnit": "95NCx1Mz", "oauthClientType": "PavrYqTi", "oauthRefreshTokenExpiration": 73, "oauthRefreshTokenExpirationTimeUnit": "Es5wj7j0", "parentNamespace": "TFKm2t8e", "redirectUri": "uy8Qo44p", "scopes": ["wGV8twAw", "37yDzGww", "T9pRUl8V"], "secret": "bQzLHMzU", "twoFactorEnabled": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminCreateClientV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 121 'AdminCreateClientV3' test.out

#- 122 AdminGetClientsbyNamespacebyIDV3
$CLI_EXE \
    --sn iam \
    --op AdminGetClientsbyNamespacebyIDV3 \
    --clientId '5rrWNE0w' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 122 'AdminGetClientsbyNamespacebyIDV3' test.out

#- 123 AdminDeleteClientV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteClientV3 \
    --clientId 'S2sGWduG' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 123 'AdminDeleteClientV3' test.out

#- 124 AdminUpdateClientV3
# body param: body
echo '{"audiences": ["THnSWKR7", "EQHHSwhw", "9DMqlU1k"], "baseUri": "MT0kDSU8", "clientName": "TnIIQIK3", "clientPermissions": [{"action": 59, "resource": "Yy6ceo4G", "schedAction": 36, "schedCron": "7dqc85Xg", "schedRange": ["kEJJ3aTs", "2B6fTipw", "qoN9FUiq"]}, {"action": 94, "resource": "pWQTo1rC", "schedAction": 95, "schedCron": "xY5ELudu", "schedRange": ["fCAq0st5", "CTus9XMM", "bD53font"]}, {"action": 13, "resource": "jzRK3nB0", "schedAction": 31, "schedCron": "Vp6yLHI7", "schedRange": ["I9EjtQzd", "Iy7jWnpE", "j4aTlcN2"]}], "clientPlatform": "PpALWfvx", "deletable": false, "description": "HU7rGyNs", "namespace": "BQiezpgk", "oauthAccessTokenExpiration": 76, "oauthAccessTokenExpirationTimeUnit": "4jlYQCsR", "oauthRefreshTokenExpiration": 19, "oauthRefreshTokenExpirationTimeUnit": "RpqsnnJV", "redirectUri": "iBxPOsiZ", "scopes": ["kR3XYVFv", "I3OPDhvS", "tg3wogw8"], "twoFactorEnabled": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateClientV3 \
    --clientId 'yl2HH1LO' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 124 'AdminUpdateClientV3' test.out

#- 125 AdminUpdateClientPermissionV3
# body param: body
echo '{"permissions": [{"action": 0, "resource": "Tg7roGnD"}, {"action": 19, "resource": "XcwglyOP"}, {"action": 95, "resource": "Rdcpob12"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateClientPermissionV3 \
    --clientId '8MXYu6g5' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 125 'AdminUpdateClientPermissionV3' test.out

#- 126 AdminAddClientPermissionsV3
# body param: body
echo '{"permissions": [{"action": 45, "resource": "1W9EbAOM"}, {"action": 82, "resource": "fAMcesMB"}, {"action": 16, "resource": "kcNZe8My"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddClientPermissionsV3 \
    --clientId 'tpqBhIZA' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 126 'AdminAddClientPermissionsV3' test.out

#- 127 AdminDeleteClientPermissionV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteClientPermissionV3 \
    --action '67' \
    --clientId 'ET4IRsGF' \
    --namespace $AB_NAMESPACE \
    --resource 'MGTL6Z1N' \
    > test.out 2>&1
eval_tap $? 127 'AdminDeleteClientPermissionV3' test.out

#- 128 RetrieveAllThirdPartyLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op RetrieveAllThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 128 'RetrieveAllThirdPartyLoginPlatformCredentialV3' test.out

#- 129 RetrieveAllActiveThirdPartyLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op RetrieveAllActiveThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 129 'RetrieveAllActiveThirdPartyLoginPlatformCredentialV3' test.out

#- 130 RetrieveAllSSOLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op RetrieveAllSSOLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --limit '57' \
    --offset '87' \
    > test.out 2>&1
eval_tap $? 130 'RetrieveAllSSOLoginPlatformCredentialV3' test.out

#- 131 RetrieveThirdPartyLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op RetrieveThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'heorw6s7' \
    > test.out 2>&1
eval_tap $? 131 'RetrieveThirdPartyLoginPlatformCredentialV3' test.out

#- 132 AddThirdPartyLoginPlatformCredentialV3
# body param: body
echo '{"ACSURL": "f9dLD7ma", "AWSCognitoRegion": "9fNVWZKB", "AWSCognitoUserPool": "klDyF1tJ", "AllowedClients": ["O3Kx12li", "IVZMhWbD", "IvbVbFAE"], "AppId": "Iq4ms9Mc", "AuthorizationEndpoint": "Dcc52Vvy", "ClientId": "KDp5sJ3Q", "Environment": "VmyZuEQi", "FederationMetadataURL": "ERm4DLOe", "GenericOauthFlow": true, "IsActive": false, "Issuer": "Tzzzbi6c", "JWKSEndpoint": "xZiMDxQZ", "KeyID": "iYvSKOr7", "NetflixCertificates": {"encryptedPrivateKey": "jDgifxAO", "encryptedPrivateKeyName": "ZWDJTPDf", "publicCertificate": "IgXvCVVU", "publicCertificateName": "qa4NP6RC", "rootCertificate": "XtfwGiep", "rootCertificateName": "Zu3eTJns"}, "OrganizationId": "kpuVOX71", "PlatformName": "kSqQW645", "RedirectUri": "YbyhfyW3", "RegisteredDomains": [{"affectedClientIDs": ["tyV4vYAF", "An6Xhf9Q", "NieTsf3q"], "domain": "NDVuzoG4", "namespaces": ["81gqjvn3", "sbNORUnY", "IYdMPcF8"], "roleId": "lQE6nhlG"}, {"affectedClientIDs": ["cpNje2Ww", "xeaspaYe", "dPEJLgVd"], "domain": "OUTHbano", "namespaces": ["UVZuHoAt", "MBAfCn93", "0ZsJrNQs"], "roleId": "CL2saCoq"}, {"affectedClientIDs": ["uXhMU1Y8", "Sw1OQnCg", "FpCgGN8r"], "domain": "suzo8k1t", "namespaces": ["0yrBjiEm", "0WF6r6YE", "ShspKvDC"], "roleId": "oOHfLOji"}], "Secret": "1QEHT2Hk", "TeamID": "e3QSbEBE", "TokenAuthenticationType": "F2tcHdsn", "TokenClaimsMapping": {"3Y7CTbyJ": "ZkL4SD4C", "idBhTj0r": "Zsj7yRXq", "cFEIHt7M": "GvDwpxKB"}, "TokenEndpoint": "EjjG4nNs", "UserInfoEndpoint": "Qf1sXlTZ", "UserInfoHTTPMethod": "9RPS1YQv", "scopes": ["z1V6fDQh", "biVkxwfR", "2sXz7Sa3"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AddThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'xujV95Aj' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 132 'AddThirdPartyLoginPlatformCredentialV3' test.out

#- 133 DeleteThirdPartyLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op DeleteThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'VafPZqyM' \
    > test.out 2>&1
eval_tap $? 133 'DeleteThirdPartyLoginPlatformCredentialV3' test.out

#- 134 UpdateThirdPartyLoginPlatformCredentialV3
# body param: body
echo '{"ACSURL": "asT1gFBR", "AWSCognitoRegion": "ZSQy3Je7", "AWSCognitoUserPool": "mbZPzQz7", "AllowedClients": ["NTavE7rB", "0wsEuCcv", "fMRpT8u7"], "AppId": "OXYz6sfV", "AuthorizationEndpoint": "xgHa291G", "ClientId": "5tBp9tce", "Environment": "GlvPMIOD", "FederationMetadataURL": "aoWbYa6g", "GenericOauthFlow": false, "IsActive": true, "Issuer": "tfF7MZ9q", "JWKSEndpoint": "uGo5Val9", "KeyID": "dwL48XsI", "NetflixCertificates": {"encryptedPrivateKey": "PZErwvXk", "encryptedPrivateKeyName": "2jti69nv", "publicCertificate": "Qa0MBQMj", "publicCertificateName": "AMFQ3LPM", "rootCertificate": "pIkAx5Ji", "rootCertificateName": "iPiUgdoa"}, "OrganizationId": "dYUzHD0i", "PlatformName": "Ypq7uLSI", "RedirectUri": "fwhMzbYv", "RegisteredDomains": [{"affectedClientIDs": ["rvwxRhPa", "D8J9M6Fj", "DhNwjZgz"], "domain": "iUjzYCx7", "namespaces": ["NnqoVkUI", "qt5O9DI2", "TxLOofsW"], "roleId": "gWI5KHFk"}, {"affectedClientIDs": ["1UrD6JUK", "nxKK9f0m", "IN2uwlDe"], "domain": "K8UIO051", "namespaces": ["4vt7jXFq", "wEO8f2Wa", "O6wF7slh"], "roleId": "Dk4jqWOG"}, {"affectedClientIDs": ["jhGDphBC", "ePngqpZn", "a3tB8GmY"], "domain": "rkmCx8Uj", "namespaces": ["Fz5St0cs", "0yEd856r", "I7LgOAwC"], "roleId": "5qTPoxjX"}], "Secret": "vvWgvwex", "TeamID": "WJ0khSJN", "TokenAuthenticationType": "DaYC2De2", "TokenClaimsMapping": {"p9ITP1S1": "DeEd3jKd", "XO7AfpPO": "wATMriVM", "JkRFNMPL": "WHWSnDJ4"}, "TokenEndpoint": "pmB4eYjr", "UserInfoEndpoint": "KKvLaC4d", "UserInfoHTTPMethod": "Xhp5VjOV", "scopes": ["ZH76bW5x", "bs2DSjcB", "WyiCSDzq"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op UpdateThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'meaajtGr' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 134 'UpdateThirdPartyLoginPlatformCredentialV3' test.out

#- 135 UpdateThirdPartyLoginPlatformDomainV3
# body param: body
echo '{"affectedClientIDs": ["cRyrFc52", "SCDK01xX", "g7Ggqtfq"], "assignedNamespaces": ["wHE9OUAu", "JFu43cib", "TiljMbIW"], "domain": "3aNzpkxK", "roleId": "xzxR7NtK"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op UpdateThirdPartyLoginPlatformDomainV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'LGUoyEWu' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 135 'UpdateThirdPartyLoginPlatformDomainV3' test.out

#- 136 DeleteThirdPartyLoginPlatformDomainV3
# body param: body
echo '{"domain": "ptr9yadw"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op DeleteThirdPartyLoginPlatformDomainV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'yicQJEB9' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 136 'DeleteThirdPartyLoginPlatformDomainV3' test.out

#- 137 RetrieveSSOLoginPlatformCredential
$CLI_EXE \
    --sn iam \
    --op RetrieveSSOLoginPlatformCredential \
    --namespace $AB_NAMESPACE \
    --platformId 'CKByIp6h' \
    > test.out 2>&1
eval_tap $? 137 'RetrieveSSOLoginPlatformCredential' test.out

#- 138 AddSSOLoginPlatformCredential
# body param: body
echo '{"acsUrl": "bfhWjF2J", "apiKey": "e79Qpl7o", "appId": "fklGsFq2", "federationMetadataUrl": "LpIeXdtn", "isActive": true, "redirectUri": "FKLD5tGZ", "secret": "fA7iYykL", "ssoUrl": "i4MzTsTi"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AddSSOLoginPlatformCredential \
    --namespace $AB_NAMESPACE \
    --platformId 'Byr7DVph' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 138 'AddSSOLoginPlatformCredential' test.out

#- 139 DeleteSSOLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op DeleteSSOLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'um9KJU8d' \
    > test.out 2>&1
eval_tap $? 139 'DeleteSSOLoginPlatformCredentialV3' test.out

#- 140 UpdateSSOPlatformCredential
# body param: body
echo '{"acsUrl": "VFdY8Fm0", "apiKey": "wqmSXWh1", "appId": "pme9EEt5", "federationMetadataUrl": "TFHGdTSb", "isActive": false, "redirectUri": "0mJqFOk8", "secret": "DJAPl1im", "ssoUrl": "HHZLySaV"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op UpdateSSOPlatformCredential \
    --namespace $AB_NAMESPACE \
    --platformId 'hHTGG88o' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 140 'UpdateSSOPlatformCredential' test.out

#- 141 AdminGetUserByPlatformUserIDV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserByPlatformUserIDV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'fh5evJBI' \
    --platformUserId 'Gfjn5TPR' \
    > test.out 2>&1
eval_tap $? 141 'AdminGetUserByPlatformUserIDV3' test.out

#- 142 GetAdminUsersByRoleIdV3
$CLI_EXE \
    --sn iam \
    --op GetAdminUsersByRoleIdV3 \
    --namespace $AB_NAMESPACE \
    --roleId 'BhYEcWe2' \
    --after '64' \
    --before '49' \
    --limit '5' \
    > test.out 2>&1
eval_tap $? 142 'GetAdminUsersByRoleIdV3' test.out

#- 143 AdminGetUserByEmailAddressV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserByEmailAddressV3 \
    --namespace $AB_NAMESPACE \
    --emailAddress '8LYbZTmc' \
    > test.out 2>&1
eval_tap $? 143 'AdminGetUserByEmailAddressV3' test.out

#- 144 AdminGetBulkUserBanV3
# body param: body
echo '{"bulkUserId": ["tI42H3dp", "CBLG9wIt", "Gv8iRDdD"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminGetBulkUserBanV3 \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --banType 'qQrSWBQA' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 144 'AdminGetBulkUserBanV3' test.out

#- 145 AdminListUserIDByUserIDsV3
# body param: body
echo '{"userIds": ["FuVUcbc4", "ozo8s80E", "NxmfpL9c"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminListUserIDByUserIDsV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 145 'AdminListUserIDByUserIDsV3' test.out

#- 146 AdminInviteUserV3
# body param: body
echo '{"emailAddresses": ["Qp4Ha7AA", "TdDiUQ5B", "pMIdJMFB"], "isAdmin": true, "namespace": "KSk8ImQa", "roles": ["GPDcK4r5", "YtzxOIEz", "EDyHi9VF"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminInviteUserV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 146 'AdminInviteUserV3' test.out

#- 147 AdminQueryThirdPlatformLinkHistoryV3
$CLI_EXE \
    --sn iam \
    --op AdminQueryThirdPlatformLinkHistoryV3 \
    --namespace $AB_NAMESPACE \
    --limit '73' \
    --offset '14' \
    --platformUserId '697dllVE' \
    --platformId 'Yga8lsCI' \
    > test.out 2>&1
eval_tap $? 147 'AdminQueryThirdPlatformLinkHistoryV3' test.out

#- 148 AdminListUsersV3
$CLI_EXE \
    --sn iam \
    --op AdminListUsersV3 \
    --namespace $AB_NAMESPACE \
    --limit '39' \
    --offset '100' \
    > test.out 2>&1
eval_tap $? 148 'AdminListUsersV3' test.out

#- 149 AdminSearchUserV3
$CLI_EXE \
    --sn iam \
    --op AdminSearchUserV3 \
    --namespace $AB_NAMESPACE \
    --by 'WLzZE53o' \
    --endDate '9hqQZJPV' \
    --limit '93' \
    --offset '87' \
    --platformBy 'oGY6eJVx' \
    --platformId 'Mv01SKxZ' \
    --query 'F9wjgPHi' \
    --startDate 'Z6wMBzO8' \
    > test.out 2>&1
eval_tap $? 149 'AdminSearchUserV3' test.out

#- 150 AdminGetBulkUserByEmailAddressV3
# body param: body
echo '{"listEmailAddressRequest": ["O4N7FBqa", "swazLGvD", "jNYiJ9mR"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminGetBulkUserByEmailAddressV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 150 'AdminGetBulkUserByEmailAddressV3' test.out

#- 151 AdminGetUserByUserIdV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserByUserIdV3 \
    --namespace $AB_NAMESPACE \
    --userId 'tzS4MQyi' \
    > test.out 2>&1
eval_tap $? 151 'AdminGetUserByUserIdV3' test.out

#- 152 AdminUpdateUserV3
# body param: body
echo '{"avatarUrl": "GesserdJ", "country": "h9XAKWgj", "dateOfBirth": "ftzFwlpx", "displayName": "09oRT81T", "languageTag": "j8URy74q", "userName": "n5Zz3KQI"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserV3 \
    --namespace $AB_NAMESPACE \
    --userId 'kmMQMXXZ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 152 'AdminUpdateUserV3' test.out

#- 153 AdminGetUserBanV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserBanV3 \
    --namespace $AB_NAMESPACE \
    --userId '0bpr0IE5' \
    --activeOnly 'false' \
    --after 'J6baRDIG' \
    --before 'c07XNZ0s' \
    --limit '75' \
    > test.out 2>&1
eval_tap $? 153 'AdminGetUserBanV3' test.out

#- 154 AdminBanUserV3
# body param: body
echo '{"ban": "n4fQxhIh", "comment": "XcceRsrs", "endDate": "OzXG3FVf", "reason": "JcwWgJ4V", "skipNotif": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBanUserV3 \
    --namespace $AB_NAMESPACE \
    --userId 'lFnmjIkO' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 154 'AdminBanUserV3' test.out

#- 155 AdminUpdateUserBanV3
# body param: body
echo '{"enabled": true, "skipNotif": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserBanV3 \
    --banId 'zjzZRHeD' \
    --namespace $AB_NAMESPACE \
    --userId 'gl08P7o0' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 155 'AdminUpdateUserBanV3' test.out

#- 156 AdminSendVerificationCodeV3
# body param: body
echo '{"context": "hC1UuHah", "emailAddress": "IgQUVVTh", "languageTag": "7PsSoCzd"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminSendVerificationCodeV3 \
    --namespace $AB_NAMESPACE \
    --userId '1CsDPJqA' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 156 'AdminSendVerificationCodeV3' test.out

#- 157 AdminVerifyAccountV3
# body param: body
echo '{"Code": "LD7UkX0H", "ContactType": "1uDtgeRR", "LanguageTag": "sab0tdQK", "validateOnly": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminVerifyAccountV3 \
    --namespace $AB_NAMESPACE \
    --userId '84fscDTg' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 157 'AdminVerifyAccountV3' test.out

#- 158 GetUserVerificationCode
$CLI_EXE \
    --sn iam \
    --op GetUserVerificationCode \
    --namespace $AB_NAMESPACE \
    --userId 't09VbtyT' \
    > test.out 2>&1
eval_tap $? 158 'GetUserVerificationCode' test.out

#- 159 AdminGetUserDeletionStatusV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserDeletionStatusV3 \
    --namespace $AB_NAMESPACE \
    --userId 'rm4xjYRV' \
    > test.out 2>&1
eval_tap $? 159 'AdminGetUserDeletionStatusV3' test.out

#- 160 AdminUpdateUserDeletionStatusV3
# body param: body
echo '{"deletionDate": 45, "enabled": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserDeletionStatusV3 \
    --namespace $AB_NAMESPACE \
    --userId '3loZ2k1N' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 160 'AdminUpdateUserDeletionStatusV3' test.out

#- 161 AdminUpgradeHeadlessAccountV3
# body param: body
echo '{"code": "v5XwhVHP", "country": "uc1iioZ9", "dateOfBirth": "33UXYCOi", "displayName": "f6THFpDh", "emailAddress": "CIHUvzUA", "password": "VbemV75s", "validateOnly": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpgradeHeadlessAccountV3 \
    --namespace $AB_NAMESPACE \
    --userId '23lJTPUu' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 161 'AdminUpgradeHeadlessAccountV3' test.out

#- 162 AdminDeleteUserInformationV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserInformationV3 \
    --namespace $AB_NAMESPACE \
    --userId 'J9FuZ4Io' \
    > test.out 2>&1
eval_tap $? 162 'AdminDeleteUserInformationV3' test.out

#- 163 AdminGetUserLoginHistoriesV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserLoginHistoriesV3 \
    --namespace $AB_NAMESPACE \
    --userId 'KNw8zIjb' \
    --after '0.3052270452344147' \
    --before '0.7758162683994659' \
    --limit '15' \
    > test.out 2>&1
eval_tap $? 163 'AdminGetUserLoginHistoriesV3' test.out

#- 164 AdminResetPasswordV3
# body param: body
echo '{"languageTag": "dwiPY3PO", "newPassword": "aAuZAlkw", "oldPassword": "r9W1cpBC"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminResetPasswordV3 \
    --namespace $AB_NAMESPACE \
    --userId 'ZtKg3d1u' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 164 'AdminResetPasswordV3' test.out

#- 165 AdminUpdateUserPermissionV3
# body param: body
echo '{"Permissions": [{"Action": 49, "Resource": "8rVomuJj", "SchedAction": 63, "SchedCron": "PQVthMDy", "SchedRange": ["7kMY7EBA", "A2SEhVCJ", "IMThi0aD"]}, {"Action": 64, "Resource": "ic7QC9XY", "SchedAction": 33, "SchedCron": "WavL4oC8", "SchedRange": ["zWZOijhV", "WugVuWul", "sCboVROm"]}, {"Action": 74, "Resource": "sAUKnUWF", "SchedAction": 24, "SchedCron": "WjUagNKM", "SchedRange": ["Py0j2nYi", "JXY0XsBL", "3MyuD0FF"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserPermissionV3 \
    --namespace $AB_NAMESPACE \
    --userId '8YIvkvJB' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 165 'AdminUpdateUserPermissionV3' test.out

#- 166 AdminAddUserPermissionsV3
# body param: body
echo '{"Permissions": [{"Action": 35, "Resource": "PN4y8ncp", "SchedAction": 39, "SchedCron": "4Uts2Xt6", "SchedRange": ["qP5IVfQy", "kc3aYFhM", "SpLIu4vH"]}, {"Action": 16, "Resource": "9ktTMhdH", "SchedAction": 7, "SchedCron": "lRY0HhNq", "SchedRange": ["ou1nUGVH", "r7XnEhGe", "rXsNanH5"]}, {"Action": 15, "Resource": "85X25PKG", "SchedAction": 14, "SchedCron": "V2geAEhe", "SchedRange": ["jnoxoG0A", "YzsrQdhg", "ysAWYann"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddUserPermissionsV3 \
    --namespace $AB_NAMESPACE \
    --userId 'X1pTSmPU' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 166 'AdminAddUserPermissionsV3' test.out

#- 167 AdminDeleteUserPermissionBulkV3
# body param: body
echo '[{"Action": 90, "Resource": "lM2MscDu"}, {"Action": 19, "Resource": "PmEoFgeQ"}, {"Action": 79, "Resource": "1z1w6yiI"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserPermissionBulkV3 \
    --namespace $AB_NAMESPACE \
    --userId 'ddDJcgjl' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 167 'AdminDeleteUserPermissionBulkV3' test.out

#- 168 AdminDeleteUserPermissionV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserPermissionV3 \
    --action '58' \
    --namespace $AB_NAMESPACE \
    --resource 'YfyQinyP' \
    --userId 'CdB7jGRh' \
    > test.out 2>&1
eval_tap $? 168 'AdminDeleteUserPermissionV3' test.out

#- 169 AdminGetUserPlatformAccountsV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserPlatformAccountsV3 \
    --namespace $AB_NAMESPACE \
    --userId 'YWyXZNJx' \
    --after 'LVJtAYB9' \
    --before 'yWp5Clq3' \
    --limit '87' \
    > test.out 2>&1
eval_tap $? 169 'AdminGetUserPlatformAccountsV3' test.out

#- 170 AdminGetListJusticePlatformAccounts
$CLI_EXE \
    --sn iam \
    --op AdminGetListJusticePlatformAccounts \
    --namespace $AB_NAMESPACE \
    --userId 'AswaFkPV' \
    > test.out 2>&1
eval_tap $? 170 'AdminGetListJusticePlatformAccounts' test.out

#- 171 AdminGetUserMapping
$CLI_EXE \
    --sn iam \
    --op AdminGetUserMapping \
    --namespace $AB_NAMESPACE \
    --targetNamespace 'ZzIlsd7l' \
    --userId '8z5rKqse' \
    > test.out 2>&1
eval_tap $? 171 'AdminGetUserMapping' test.out

#- 172 AdminCreateJusticeUser
$CLI_EXE \
    --sn iam \
    --op AdminCreateJusticeUser \
    --namespace $AB_NAMESPACE \
    --targetNamespace 'QRe1Xl0d' \
    --userId 'xiRtxnc1' \
    > test.out 2>&1
eval_tap $? 172 'AdminCreateJusticeUser' test.out

#- 173 AdminLinkPlatformAccount
# body param: body
echo '{"platformId": "yEfP2DQb", "platformUserId": "TxLiW6hS"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminLinkPlatformAccount \
    --namespace $AB_NAMESPACE \
    --userId 'Pzb1g4np' \
    --skipConflict 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 173 'AdminLinkPlatformAccount' test.out

#- 174 AdminPlatformUnlinkV3
# body param: body
echo '{"platformNamespace": "7uz71Czo"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminPlatformUnlinkV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'JfTRWikf' \
    --userId 'UnQRRcTt' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 174 'AdminPlatformUnlinkV3' test.out

#- 175 AdminPlatformLinkV3
$CLI_EXE \
    --sn iam \
    --op AdminPlatformLinkV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'X4yLEVLu' \
    --userId 'XhkBg7WM' \
    --ticket 'OMZ1iFoI' \
    > test.out 2>&1
eval_tap $? 175 'AdminPlatformLinkV3' test.out

#- 176 AdminGetThirdPartyPlatformTokenLinkStatusV3
$CLI_EXE \
    --sn iam \
    --op AdminGetThirdPartyPlatformTokenLinkStatusV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'FrW7ureV' \
    --userId 'oVwfb5xi' \
    --platformToken 'iEfiOLUm' \
    > test.out 2>&1
eval_tap $? 176 'AdminGetThirdPartyPlatformTokenLinkStatusV3' test.out

#- 177 AdminGetUserSinglePlatformAccount
$CLI_EXE \
    --sn iam \
    --op AdminGetUserSinglePlatformAccount \
    --namespace $AB_NAMESPACE \
    --platformId 'W9nxI0us' \
    --userId 'BBzhgPZZ' \
    > test.out 2>&1
eval_tap $? 177 'AdminGetUserSinglePlatformAccount' test.out

#- 178 AdminDeleteUserRolesV3
# body param: body
echo '["pX0v03h3", "WVopfFQ2", "hk6HPBg5"]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserRolesV3 \
    --namespace $AB_NAMESPACE \
    --userId '6ZM3ZeRA' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 178 'AdminDeleteUserRolesV3' test.out

#- 179 AdminSaveUserRoleV3
# body param: body
echo '[{"namespace": "Ttp8degF", "roleId": "hMQGHy2T"}, {"namespace": "bu0gN2Kx", "roleId": "0vlUc5BF"}, {"namespace": "jsY5nPyr", "roleId": "LZfPGf60"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminSaveUserRoleV3 \
    --namespace $AB_NAMESPACE \
    --userId 'vd9BwfOW' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 179 'AdminSaveUserRoleV3' test.out

#- 180 AdminAddUserRoleV3
$CLI_EXE \
    --sn iam \
    --op AdminAddUserRoleV3 \
    --namespace $AB_NAMESPACE \
    --roleId 'coR8pcAr' \
    --userId 'gGiuSoQm' \
    > test.out 2>&1
eval_tap $? 180 'AdminAddUserRoleV3' test.out

#- 181 AdminDeleteUserRoleV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserRoleV3 \
    --namespace $AB_NAMESPACE \
    --roleId 'lLO9Mq0b' \
    --userId 'idDeTjt0' \
    > test.out 2>&1
eval_tap $? 181 'AdminDeleteUserRoleV3' test.out

#- 182 AdminUpdateUserStatusV3
# body param: body
echo '{"enabled": true, "reason": "AeofJN17"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserStatusV3 \
    --namespace $AB_NAMESPACE \
    --userId 'wppaXviW' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 182 'AdminUpdateUserStatusV3' test.out

#- 183 AdminVerifyUserWithoutVerificationCodeV3
$CLI_EXE \
    --sn iam \
    --op AdminVerifyUserWithoutVerificationCodeV3 \
    --namespace $AB_NAMESPACE \
    --userId 'GDPxQHKg' \
    > test.out 2>&1
eval_tap $? 183 'AdminVerifyUserWithoutVerificationCodeV3' test.out

#- 184 AdminUpdateClientSecretV3
# body param: body
echo '{"newSecret": "9ksnsccw"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateClientSecretV3 \
    --clientId 'tzpramnN' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 184 'AdminUpdateClientSecretV3' test.out

#- 185 AdminGetRolesV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRolesV3 \
    --after 'Ri131oM6' \
    --before 'aI0HaUuS' \
    --isWildcard 'true' \
    --limit '49' \
    > test.out 2>&1
eval_tap $? 185 'AdminGetRolesV3' test.out

#- 186 AdminCreateRoleV3
# body param: body
echo '{"adminRole": true, "deletable": true, "isWildcard": true, "managers": [{"displayName": "NNVNox6u", "namespace": "q5aV1FWB", "userId": "IdOf2nwh"}, {"displayName": "Wqmo6NTt", "namespace": "C8EF0m4W", "userId": "2YXSCGaS"}, {"displayName": "bRN9duwW", "namespace": "mE3J8RJF", "userId": "Ntd7R8BR"}], "members": [{"displayName": "gg4gFf8m", "namespace": "N7ISU9nT", "userId": "C2WTOkr2"}, {"displayName": "yVzQYWfy", "namespace": "CjN9Yu2A", "userId": "lBEmz07m"}, {"displayName": "5pPKvP9O", "namespace": "T9RAXCSD", "userId": "APr2pZnf"}], "permissions": [{"action": 2, "resource": "SGApHCf7", "schedAction": 35, "schedCron": "srythEx0", "schedRange": ["KJCoFD8X", "JMGLe5rP", "MYoB7eXL"]}, {"action": 96, "resource": "AYEoiple", "schedAction": 45, "schedCron": "FD3C2Bmj", "schedRange": ["h4qtmQwU", "JXGJZlYH", "v59rEpo4"]}, {"action": 70, "resource": "s68sKi6W", "schedAction": 72, "schedCron": "GutblMTl", "schedRange": ["IV8VunS4", "nAp3xZwy", "bzaPz9hE"]}], "roleName": "KwPgZfOM"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminCreateRoleV3 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 186 'AdminCreateRoleV3' test.out

#- 187 AdminGetRoleV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleV3 \
    --roleId '0oVhWTWK' \
    > test.out 2>&1
eval_tap $? 187 'AdminGetRoleV3' test.out

#- 188 AdminDeleteRoleV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteRoleV3 \
    --roleId 'Rsb8IRcj' \
    > test.out 2>&1
eval_tap $? 188 'AdminDeleteRoleV3' test.out

#- 189 AdminUpdateRoleV3
# body param: body
echo '{"deletable": false, "isWildcard": false, "roleName": "OlqXwAKv"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateRoleV3 \
    --roleId '34YQsPAW' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 189 'AdminUpdateRoleV3' test.out

#- 190 AdminGetRoleAdminStatusV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleAdminStatusV3 \
    --roleId 'dnbH3rNg' \
    > test.out 2>&1
eval_tap $? 190 'AdminGetRoleAdminStatusV3' test.out

#- 191 AdminUpdateAdminRoleStatusV3
$CLI_EXE \
    --sn iam \
    --op AdminUpdateAdminRoleStatusV3 \
    --roleId 'HNW8q9qG' \
    > test.out 2>&1
eval_tap $? 191 'AdminUpdateAdminRoleStatusV3' test.out

#- 192 AdminRemoveRoleAdminV3
$CLI_EXE \
    --sn iam \
    --op AdminRemoveRoleAdminV3 \
    --roleId 'vReuDYpT' \
    > test.out 2>&1
eval_tap $? 192 'AdminRemoveRoleAdminV3' test.out

#- 193 AdminGetRoleManagersV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleManagersV3 \
    --roleId 'xmceskow' \
    --after '7xawl9zM' \
    --before 'Pq9RtAR0' \
    --limit '44' \
    > test.out 2>&1
eval_tap $? 193 'AdminGetRoleManagersV3' test.out

#- 194 AdminAddRoleManagersV3
# body param: body
echo '{"managers": [{"displayName": "oBJc4rhX", "namespace": "ZDpscBIS", "userId": "n06YwRMY"}, {"displayName": "gQeTPYBl", "namespace": "YFiP1zT6", "userId": "hArLNHnP"}, {"displayName": "4sAjKMLN", "namespace": "QQ2urqXy", "userId": "CXPktpef"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddRoleManagersV3 \
    --roleId 'klMvQ9xe' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 194 'AdminAddRoleManagersV3' test.out

#- 195 AdminRemoveRoleManagersV3
# body param: body
echo '{"managers": [{"displayName": "No15tyPS", "namespace": "Lwn90XIX", "userId": "vtPl5Yks"}, {"displayName": "tW1msKml", "namespace": "EroHpwKy", "userId": "kSw86jNz"}, {"displayName": "uyH4AaqQ", "namespace": "cPu6H4yq", "userId": "1ldEgyzj"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminRemoveRoleManagersV3 \
    --roleId 'xGLn7CxC' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 195 'AdminRemoveRoleManagersV3' test.out

#- 196 AdminGetRoleMembersV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleMembersV3 \
    --roleId 'QXz1nlpS' \
    --after 'OQVUkz6c' \
    --before 'JswZuLRz' \
    --limit '49' \
    > test.out 2>&1
eval_tap $? 196 'AdminGetRoleMembersV3' test.out

#- 197 AdminAddRoleMembersV3
# body param: body
echo '{"members": [{"displayName": "VH72ThGT", "namespace": "3jn9t849", "userId": "qPct4NXB"}, {"displayName": "q4puaTP5", "namespace": "v51IAmpb", "userId": "UC1Yz91E"}, {"displayName": "LL2VbR5K", "namespace": "0Dnm6jJd", "userId": "BPiTGkC9"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddRoleMembersV3 \
    --roleId 'TqLLyedf' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 197 'AdminAddRoleMembersV3' test.out

#- 198 AdminRemoveRoleMembersV3
# body param: body
echo '{"members": [{"displayName": "PNMM4uB7", "namespace": "5WrEVPlf", "userId": "qNmPULTA"}, {"displayName": "jy5okFNS", "namespace": "FiqULuwk", "userId": "0YevoyKP"}, {"displayName": "XHsuus40", "namespace": "QImu0EdA", "userId": "dQ1Kogi9"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminRemoveRoleMembersV3 \
    --roleId 'BPIyBrH7' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 198 'AdminRemoveRoleMembersV3' test.out

#- 199 AdminUpdateRolePermissionsV3
# body param: body
echo '{"permissions": [{"action": 60, "resource": "pfFp3m4s", "schedAction": 31, "schedCron": "POh2RGCK", "schedRange": ["Hf2TwwtA", "hrJNXoQX", "yAaksiGr"]}, {"action": 10, "resource": "54ghP1ad", "schedAction": 42, "schedCron": "Jt7cZmD3", "schedRange": ["x0yHvQ9n", "MLrUIPD7", "p7h4ZfhQ"]}, {"action": 71, "resource": "UQVaM1Xj", "schedAction": 16, "schedCron": "QdT1cj7S", "schedRange": ["oqtUa4Tb", "KNPDVnfZ", "Dft4DbvX"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateRolePermissionsV3 \
    --roleId 'vsQuvcrY' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 199 'AdminUpdateRolePermissionsV3' test.out

#- 200 AdminAddRolePermissionsV3
# body param: body
echo '{"permissions": [{"action": 61, "resource": "yXIVLWxm", "schedAction": 31, "schedCron": "1oikmM86", "schedRange": ["mPseViEt", "2hDTSuDe", "4JqmFcQS"]}, {"action": 61, "resource": "qkdif8Vk", "schedAction": 44, "schedCron": "xm706wkj", "schedRange": ["OtdfaJpn", "Q4w2euO5", "EmT0wnCU"]}, {"action": 9, "resource": "WnnCQzAY", "schedAction": 43, "schedCron": "U0Sp18MZ", "schedRange": ["okSkhsrv", "H7IdDQQs", "0I04EpZN"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddRolePermissionsV3 \
    --roleId 'TcZxEG7V' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 200 'AdminAddRolePermissionsV3' test.out

#- 201 AdminDeleteRolePermissionsV3
# body param: body
echo '["jITd5J4i", "LmbxO9P0", "3TnhSsGQ"]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDeleteRolePermissionsV3 \
    --roleId 'bjh2t0NH' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 201 'AdminDeleteRolePermissionsV3' test.out

#- 202 AdminDeleteRolePermissionV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteRolePermissionV3 \
    --action '88' \
    --resource 'KVhMkn74' \
    --roleId 'B3XVQ3LE' \
    > test.out 2>&1
eval_tap $? 202 'AdminDeleteRolePermissionV3' test.out

#- 203 AdminGetMyUserV3
$CLI_EXE \
    --sn iam \
    --op AdminGetMyUserV3 \
    > test.out 2>&1
eval_tap $? 203 'AdminGetMyUserV3' test.out

#- 204 UserAuthenticationV3
$CLI_EXE \
    --sn iam \
    --op UserAuthenticationV3 \
    --client_id 'A4UnKWUw' \
    --extend_exp 'true' \
    --redirect_uri 'CncZGEVx' \
    --password 'S3MJGynu' \
    --request_id 'YGQ4zxSu' \
    --user_name 'IAsqNwUT' \
    > test.out 2>&1
eval_tap $? 204 'UserAuthenticationV3' test.out

#- 205 AuthenticationWithPlatformLinkV3
$CLI_EXE \
    --sn iam \
    --op AuthenticationWithPlatformLinkV3 \
    --extend_exp 'false' \
    --client_id '9ySD0PyR' \
    --linkingToken '8RQGDIxK' \
    --password 'ogYH2epJ' \
    --username 'Mepu0Ozz' \
    > test.out 2>&1
eval_tap $? 205 'AuthenticationWithPlatformLinkV3' test.out

#- 206 GenerateTokenByNewHeadlessAccountV3
$CLI_EXE \
    --sn iam \
    --op GenerateTokenByNewHeadlessAccountV3 \
    --additionalData 'OfbfvaWI' \
    --extend_exp 'true' \
    --linkingToken 'zy923P25' \
    > test.out 2>&1
eval_tap $? 206 'GenerateTokenByNewHeadlessAccountV3' test.out

#- 207 RequestOneTimeLinkingCodeV3
$CLI_EXE \
    --sn iam \
    --op RequestOneTimeLinkingCodeV3 \
    --platformId 'FdJs7vGJ' \
    > test.out 2>&1
eval_tap $? 207 'RequestOneTimeLinkingCodeV3' test.out

#- 208 ValidateOneTimeLinkingCodeV3
$CLI_EXE \
    --sn iam \
    --op ValidateOneTimeLinkingCodeV3 \
    --oneTimeLinkCode 'QIAwt517' \
    > test.out 2>&1
eval_tap $? 208 'ValidateOneTimeLinkingCodeV3' test.out

#- 209 RequestTokenByOneTimeLinkCodeResponseV3
$CLI_EXE \
    --sn iam \
    --op RequestTokenByOneTimeLinkCodeResponseV3 \
    --additionalData 'i5RDbhOV' \
    --isTransient 'true' \
    --client_id 'KWZhsug2' \
    --oneTimeLinkCode 'mAbGUkVb' \
    > test.out 2>&1
eval_tap $? 209 'RequestTokenByOneTimeLinkCodeResponseV3' test.out

#- 210 GetCountryLocationV3
$CLI_EXE \
    --sn iam \
    --op GetCountryLocationV3 \
    > test.out 2>&1
eval_tap $? 210 'GetCountryLocationV3' test.out

#- 211 Logout
$CLI_EXE \
    --sn iam \
    --op Logout \
    > test.out 2>&1
eval_tap $? 211 'Logout' test.out

#- 212 RequestGameTokenCodeResponseV3
$CLI_EXE \
    --sn iam \
    --op RequestGameTokenCodeResponseV3 \
    --namespace $AB_NAMESPACE \
    --client_id 'plgx2wgB' \
    > test.out 2>&1
eval_tap $? 212 'RequestGameTokenCodeResponseV3' test.out

#- 213 AdminRetrieveUserThirdPartyPlatformTokenV3
$CLI_EXE \
    --sn iam \
    --op AdminRetrieveUserThirdPartyPlatformTokenV3 \
    --namespace $AB_NAMESPACE \
    --platformId '3ZTcvKdK' \
    --userId 'U945RwOs' \
    > test.out 2>&1
eval_tap $? 213 'AdminRetrieveUserThirdPartyPlatformTokenV3' test.out

#- 214 RevokeUserV3
$CLI_EXE \
    --sn iam \
    --op RevokeUserV3 \
    --namespace $AB_NAMESPACE \
    --userId '3ppDRTzk' \
    --includeGameNamespace 'true' \
    > test.out 2>&1
eval_tap $? 214 'RevokeUserV3' test.out

#- 215 AuthorizeV3
$CLI_EXE \
    --sn iam \
    --op AuthorizeV3 \
    --codeChallenge 'hBY40EOF' \
    --codeChallengeMethod 'S256' \
    --createHeadless 'true' \
    --oneTimeLinkCode 'nHIbpx1r' \
    --redirectUri 'EONOOZpQ' \
    --scope 'j9yXXW0y' \
    --state 'j0xk2Lwj' \
    --targetAuthPage 'xeIBHdsF' \
    --useRedirectUriAsLoginUrlWhenLocked 'false' \
    --clientId 'cExxPEpW' \
    --responseType 'code' \
    > test.out 2>&1
eval_tap $? 215 'AuthorizeV3' test.out

#- 216 TokenIntrospectionV3
$CLI_EXE \
    --sn iam \
    --op TokenIntrospectionV3 \
    --token 'SCS6zqJm' \
    > test.out 2>&1
eval_tap $? 216 'TokenIntrospectionV3' test.out

#- 217 GetJWKSV3
$CLI_EXE \
    --sn iam \
    --op GetJWKSV3 \
    > test.out 2>&1
eval_tap $? 217 'GetJWKSV3' test.out

#- 218 SendMFAAuthenticationCode
$CLI_EXE \
    --sn iam \
    --op SendMFAAuthenticationCode \
    --clientId 'ZARLsYKy' \
    --factor '3dQTe70H' \
    --mfaToken 'VewJBl2F' \
    > test.out 2>&1
eval_tap $? 218 'SendMFAAuthenticationCode' test.out

#- 219 Change2faMethod
$CLI_EXE \
    --sn iam \
    --op Change2faMethod \
    --factor 'Qn3AO6q4' \
    --mfaToken '6TOwBb6c' \
    > test.out 2>&1
eval_tap $? 219 'Change2faMethod' test.out

#- 220 Verify2faCode
$CLI_EXE \
    --sn iam \
    --op Verify2faCode \
    --code 'n4DQr4Z7' \
    --factor 'DviwCN7u' \
    --mfaToken 'kfGUBo0D' \
    --rememberDevice 'true' \
    > test.out 2>&1
eval_tap $? 220 'Verify2faCode' test.out

#- 221 RetrieveUserThirdPartyPlatformTokenV3
$CLI_EXE \
    --sn iam \
    --op RetrieveUserThirdPartyPlatformTokenV3 \
    --namespace $AB_NAMESPACE \
    --platformId '3KGzmGop' \
    --userId 'SYbUICBh' \
    > test.out 2>&1
eval_tap $? 221 'RetrieveUserThirdPartyPlatformTokenV3' test.out

#- 222 AuthCodeRequestV3
$CLI_EXE \
    --sn iam \
    --op AuthCodeRequestV3 \
    --platformId '4VJXW4va' \
    --clientId 'YFrWTI1Y' \
    --redirectUri 'jqAH0GAf' \
    --requestId 'doJ57AnO' \
    > test.out 2>&1
eval_tap $? 222 'AuthCodeRequestV3' test.out

#- 223 PlatformTokenGrantV3
$CLI_EXE \
    --sn iam \
    --op PlatformTokenGrantV3 \
    --platformId 'GEefJokS' \
    --additionalData 'MlDpoxbk' \
    --client_id 'Yg56H0fi' \
    --createHeadless 'true' \
    --device_id 'FXAKbYHd' \
    --macAddress 'YcRTWQSM' \
    --platform_token 'wyoEFdK5' \
    --skipSetCookie 'true' \
    > test.out 2>&1
eval_tap $? 223 'PlatformTokenGrantV3' test.out

#- 224 GetRevocationListV3
$CLI_EXE \
    --sn iam \
    --op GetRevocationListV3 \
    > test.out 2>&1
eval_tap $? 224 'GetRevocationListV3' test.out

#- 225 TokenRevocationV3
$CLI_EXE \
    --sn iam \
    --op TokenRevocationV3 \
    --token 'J8891hKO' \
    > test.out 2>&1
eval_tap $? 225 'TokenRevocationV3' test.out

#- 226 TokenGrantV3
$CLI_EXE \
    --sn iam \
    --op TokenGrantV3 \
    --additionalData 'WwoFpiUY' \
    --client_id 'VKYp9EBt' \
    --code 'WZo6rf5m' \
    --code_verifier '2NApa4Wb' \
    --extend_exp 'false' \
    --password 'T8NlX4pc' \
    --redirect_uri 'dQykJcK4' \
    --refresh_token '5W7IMP67' \
    --username 'YJcrOwm3' \
    --grant_type 'authorization_code' \
    > test.out 2>&1
eval_tap $? 226 'TokenGrantV3' test.out

#- 227 VerifyTokenV3
$CLI_EXE \
    --sn iam \
    --op VerifyTokenV3 \
    --token 'ezrN29Lj' \
    > test.out 2>&1
eval_tap $? 227 'VerifyTokenV3' test.out

#- 228 PlatformAuthenticationV3
$CLI_EXE \
    --sn iam \
    --op PlatformAuthenticationV3 \
    --platformId 'bhmkn3XU' \
    --code 'wTVbfrap' \
    --error '8DHxmEsR' \
    --openidAssocHandle 'I92A8hrK' \
    --openidClaimedId 'qe6tnJP9' \
    --openidIdentity '3XLlJ1WP' \
    --openidMode 'SpZ80Ygv' \
    --openidNs 'yhJnEhtp' \
    --openidOpEndpoint 'e0Pk8bRM' \
    --openidResponseNonce 'HAfqvP3L' \
    --openidReturnTo 'jQgIPGcv' \
    --openidSig '9psTsPOC' \
    --openidSigned 'Vv512jiC' \
    --state 'TYHMICwE' \
    > test.out 2>&1
eval_tap $? 228 'PlatformAuthenticationV3' test.out

#- 229 PublicGetInputValidations
$CLI_EXE \
    --sn iam \
    --op PublicGetInputValidations \
    --defaultOnEmpty 'false' \
    --languageCode 'FUxLDmhS' \
    > test.out 2>&1
eval_tap $? 229 'PublicGetInputValidations' test.out

#- 230 PublicGetInputValidationByField
$CLI_EXE \
    --sn iam \
    --op PublicGetInputValidationByField \
    --field 'zL9seua7' \
    > test.out 2>&1
eval_tap $? 230 'PublicGetInputValidationByField' test.out

#- 231 PublicGetCountryAgeRestrictionV3
$CLI_EXE \
    --sn iam \
    --op PublicGetCountryAgeRestrictionV3 \
    --countryCode 'zTOsg3WU' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 231 'PublicGetCountryAgeRestrictionV3' test.out

#- 232 RetrieveAllActiveThirdPartyLoginPlatformCredentialPublicV3
$CLI_EXE \
    --sn iam \
    --op RetrieveAllActiveThirdPartyLoginPlatformCredentialPublicV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 232 'RetrieveAllActiveThirdPartyLoginPlatformCredentialPublicV3' test.out

#- 233 RetrieveActiveOIDCClientsPublicV3
$CLI_EXE \
    --sn iam \
    --op RetrieveActiveOIDCClientsPublicV3 \
    --namespace $AB_NAMESPACE \
    --clientId 'VN5tglgI' \
    > test.out 2>&1
eval_tap $? 233 'RetrieveActiveOIDCClientsPublicV3' test.out

#- 234 PublicListUserIDByPlatformUserIDsV3
# body param: body
echo '{"platformUserIds": ["elTLw1qe", "Wws0R67n", "zX3redoI"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicListUserIDByPlatformUserIDsV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'ycIzf1RC' \
    --rawPUID 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 234 'PublicListUserIDByPlatformUserIDsV3' test.out

#- 235 PublicGetUserByPlatformUserIDV3
$CLI_EXE \
    --sn iam \
    --op PublicGetUserByPlatformUserIDV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'tlpXaLaL' \
    --platformUserId 'Liu8mi1g' \
    > test.out 2>&1
eval_tap $? 235 'PublicGetUserByPlatformUserIDV3' test.out

#- 236 PublicGetAsyncStatus
$CLI_EXE \
    --sn iam \
    --op PublicGetAsyncStatus \
    --namespace $AB_NAMESPACE \
    --requestId 'PJVOPMoq' \
    > test.out 2>&1
eval_tap $? 236 'PublicGetAsyncStatus' test.out

#- 237 PublicSearchUserV3
$CLI_EXE \
    --sn iam \
    --op PublicSearchUserV3 \
    --namespace $AB_NAMESPACE \
    --by 'SHhIAWOg' \
    --limit '43' \
    --offset '84' \
    --query 'WtCsKh6w' \
    > test.out 2>&1
eval_tap $? 237 'PublicSearchUserV3' test.out

#- 238 PublicCreateUserV3
# body param: body
echo '{"PasswordMD5Sum": "hyMLyYvn", "acceptedPolicies": [{"isAccepted": false, "localizedPolicyVersionId": "mc2f6kRI", "policyId": "D1H1n0EC", "policyVersionId": "BQ2B4I9l"}, {"isAccepted": false, "localizedPolicyVersionId": "F7JqnAXd", "policyId": "280fhFTt", "policyVersionId": "xwsXUCbj"}, {"isAccepted": true, "localizedPolicyVersionId": "Ze8la6K8", "policyId": "YOM7jGUm", "policyVersionId": "9ShKE4TC"}], "authType": "hHzzI6Cz", "code": "CHPe869i", "country": "VCQINhmd", "dateOfBirth": "YAjgZ3Bd", "displayName": "XZ7ES0Jj", "emailAddress": "NV6nSkLC", "password": "1M14wCk6", "reachMinimumAge": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicCreateUserV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 238 'PublicCreateUserV3' test.out

#- 239 CheckUserAvailability
$CLI_EXE \
    --sn iam \
    --op CheckUserAvailability \
    --namespace $AB_NAMESPACE \
    --field 'zd3D6CeS' \
    --query '3eoGXOz8' \
    > test.out 2>&1
eval_tap $? 239 'CheckUserAvailability' test.out

#- 240 PublicBulkGetUsers
# body param: body
echo '{"userIds": ["Cjbc6b2P", "OY09EF3Z", "XW5KIftI"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicBulkGetUsers \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 240 'PublicBulkGetUsers' test.out

#- 241 PublicSendRegistrationCode
# body param: body
echo '{"emailAddress": "nZ9hyAvx", "languageTag": "YPECquu7"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicSendRegistrationCode \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 241 'PublicSendRegistrationCode' test.out

#- 242 PublicVerifyRegistrationCode
# body param: body
echo '{"code": "UawK4S0g", "emailAddress": "urFDjcgl"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicVerifyRegistrationCode \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 242 'PublicVerifyRegistrationCode' test.out

#- 243 PublicForgotPasswordV3
# body param: body
echo '{"emailAddress": "jL9dQ4kE", "languageTag": "o7PUbO5U"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicForgotPasswordV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 243 'PublicForgotPasswordV3' test.out

#- 244 GetAdminInvitationV3
$CLI_EXE \
    --sn iam \
    --op GetAdminInvitationV3 \
    --invitationId '44noYqky' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 244 'GetAdminInvitationV3' test.out

#- 245 CreateUserFromInvitationV3
# body param: body
echo '{"acceptedPolicies": [{"isAccepted": false, "localizedPolicyVersionId": "8yNjlJ09", "policyId": "QPMiYXBo", "policyVersionId": "mqjjMz9F"}, {"isAccepted": false, "localizedPolicyVersionId": "1CTBwOU1", "policyId": "BotGO3bO", "policyVersionId": "SAUcKIrq"}, {"isAccepted": false, "localizedPolicyVersionId": "peuzWWNF", "policyId": "eHTULVcX", "policyVersionId": "RDnUYWKj"}], "authType": "EMAILPASSWD", "country": "qNRiWovm", "dateOfBirth": "iFkS3lUk", "displayName": "imT1Zwih", "password": "oXAGGbix", "reachMinimumAge": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op CreateUserFromInvitationV3 \
    --invitationId 'E0uZJWYo' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 245 'CreateUserFromInvitationV3' test.out

#- 246 UpdateUserV3
# body param: body
echo '{"avatarUrl": "mDpo9DlD", "country": "YedgolNj", "dateOfBirth": "OQGv4syB", "displayName": "hVzqShn3", "languageTag": "kjiHsGZq", "userName": "PWwzXCCZ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op UpdateUserV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 246 'UpdateUserV3' test.out

#- 247 PublicPartialUpdateUserV3
# body param: body
echo '{"avatarUrl": "e6TFQq6P", "country": "K7H1Jmj7", "dateOfBirth": "uVLXXOq9", "displayName": "JRjnszty", "languageTag": "jD7tCEGU", "userName": "yP4C0JTK"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicPartialUpdateUserV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 247 'PublicPartialUpdateUserV3' test.out

#- 248 PublicSendVerificationCodeV3
# body param: body
echo '{"context": "m8YZ8TP5", "emailAddress": "PoFVppQk", "languageTag": "0hiFql5M"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicSendVerificationCodeV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 248 'PublicSendVerificationCodeV3' test.out

#- 249 PublicUserVerificationV3
# body param: body
echo '{"code": "KgAXizeq", "contactType": "Kda3kL3i", "languageTag": "Pqb9TiFN", "validateOnly": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUserVerificationV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 249 'PublicUserVerificationV3' test.out

#- 250 PublicUpgradeHeadlessAccountV3
# body param: body
echo '{"code": "IHjA5fjq", "country": "hTgXuXFc", "dateOfBirth": "30Dx3Fw9", "displayName": "q4mQyKCm", "emailAddress": "Lin8AZLP", "password": "2TNKI8OC", "validateOnly": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpgradeHeadlessAccountV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 250 'PublicUpgradeHeadlessAccountV3' test.out

#- 251 PublicVerifyHeadlessAccountV3
# body param: body
echo '{"emailAddress": "C3K0lHiL", "password": "30aomxA5"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicVerifyHeadlessAccountV3 \
    --namespace $AB_NAMESPACE \
    --needVerificationCode 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 251 'PublicVerifyHeadlessAccountV3' test.out

#- 252 PublicUpdatePasswordV3
# body param: body
echo '{"languageTag": "gIY8NE94", "newPassword": "514KUnwY", "oldPassword": "kpmrLesD"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpdatePasswordV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 252 'PublicUpdatePasswordV3' test.out

#- 253 PublicCreateJusticeUser
$CLI_EXE \
    --sn iam \
    --op PublicCreateJusticeUser \
    --namespace $AB_NAMESPACE \
    --targetNamespace 'VshonGct' \
    > test.out 2>&1
eval_tap $? 253 'PublicCreateJusticeUser' test.out

#- 254 PublicPlatformLinkV3
$CLI_EXE \
    --sn iam \
    --op PublicPlatformLinkV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'BFxY5l3Y' \
    --redirectUri 'PwQT1UQI' \
    --ticket '8XP03l7s' \
    > test.out 2>&1
eval_tap $? 254 'PublicPlatformLinkV3' test.out

#- 255 PublicPlatformUnlinkV3
# body param: body
echo '{"platformNamespace": "FlikGIAu"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicPlatformUnlinkV3 \
    --namespace $AB_NAMESPACE \
    --platformId '8KWlZ6bf' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 255 'PublicPlatformUnlinkV3' test.out

#- 256 PublicPlatformUnlinkAllV3
$CLI_EXE \
    --sn iam \
    --op PublicPlatformUnlinkAllV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'RjwfvPay' \
    > test.out 2>&1
eval_tap $? 256 'PublicPlatformUnlinkAllV3' test.out

#- 257 PublicForcePlatformLinkV3
$CLI_EXE \
    --sn iam \
    --op PublicForcePlatformLinkV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'rQQJ54b0' \
    --ticket 'ACd8hW39' \
    > test.out 2>&1
eval_tap $? 257 'PublicForcePlatformLinkV3' test.out

#- 258 PublicWebLinkPlatform
$CLI_EXE \
    --sn iam \
    --op PublicWebLinkPlatform \
    --namespace $AB_NAMESPACE \
    --platformId 'wcGZSyJt' \
    --clientId 'fq8YFIDS' \
    --redirectUri '7wn3s8rv' \
    > test.out 2>&1
eval_tap $? 258 'PublicWebLinkPlatform' test.out

#- 259 PublicWebLinkPlatformEstablish
$CLI_EXE \
    --sn iam \
    --op PublicWebLinkPlatformEstablish \
    --namespace $AB_NAMESPACE \
    --platformId 'HnypYNWt' \
    --code 'rx0R7iPP' \
    --state 'wK6qVDNN' \
    > test.out 2>&1
eval_tap $? 259 'PublicWebLinkPlatformEstablish' test.out

#- 260 PublicProcessWebLinkPlatformV3
$CLI_EXE \
    --sn iam \
    --op PublicProcessWebLinkPlatformV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'd7e3jHbf' \
    --code 'mMMkxEIO' \
    --state '7v40OSTT' \
    > test.out 2>&1
eval_tap $? 260 'PublicProcessWebLinkPlatformV3' test.out

#- 261 ResetPasswordV3
# body param: body
echo '{"code": "ts0DLRzk", "emailAddress": "AXKFOGI6", "newPassword": "nVYmyLVt"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op ResetPasswordV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 261 'ResetPasswordV3' test.out

#- 262 PublicGetUserByUserIdV3
eval_tap 0 262 'PublicGetUserByUserIdV3 # SKIP deprecated' test.out

#- 263 PublicGetUserBanHistoryV3
$CLI_EXE \
    --sn iam \
    --op PublicGetUserBanHistoryV3 \
    --namespace $AB_NAMESPACE \
    --userId 'EJqQZhbR' \
    --activeOnly 'false' \
    --after 'rwRge1Rg' \
    --before 'seLPXvmE' \
    --limit '40' \
    > test.out 2>&1
eval_tap $? 263 'PublicGetUserBanHistoryV3' test.out

#- 264 PublicListUserAllPlatformAccountsDistinctV3
$CLI_EXE \
    --sn iam \
    --op PublicListUserAllPlatformAccountsDistinctV3 \
    --namespace $AB_NAMESPACE \
    --userId 'xmn9Trxg' \
    > test.out 2>&1
eval_tap $? 264 'PublicListUserAllPlatformAccountsDistinctV3' test.out

#- 265 PublicGetUserInformationV3
$CLI_EXE \
    --sn iam \
    --op PublicGetUserInformationV3 \
    --namespace $AB_NAMESPACE \
    --userId 'SSv5hEBm' \
    > test.out 2>&1
eval_tap $? 265 'PublicGetUserInformationV3' test.out

#- 266 PublicGetUserLoginHistoriesV3
$CLI_EXE \
    --sn iam \
    --op PublicGetUserLoginHistoriesV3 \
    --namespace $AB_NAMESPACE \
    --userId 'WadPtBFq' \
    --after '0.8091190694815269' \
    --before '0.9710752968881134' \
    --limit '28' \
    > test.out 2>&1
eval_tap $? 266 'PublicGetUserLoginHistoriesV3' test.out

#- 267 PublicGetUserPlatformAccountsV3
$CLI_EXE \
    --sn iam \
    --op PublicGetUserPlatformAccountsV3 \
    --namespace $AB_NAMESPACE \
    --userId 'oD8NXzfy' \
    --after 'k7zlSZrn' \
    --before 'tB4EIrjQ' \
    --limit '43' \
    > test.out 2>&1
eval_tap $? 267 'PublicGetUserPlatformAccountsV3' test.out

#- 268 PublicListJusticePlatformAccountsV3
$CLI_EXE \
    --sn iam \
    --op PublicListJusticePlatformAccountsV3 \
    --namespace $AB_NAMESPACE \
    --userId '71OVkE8I' \
    > test.out 2>&1
eval_tap $? 268 'PublicListJusticePlatformAccountsV3' test.out

#- 269 PublicLinkPlatformAccount
# body param: body
echo '{"platformId": "9VqxS4Nz", "platformUserId": "KEixITCi"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicLinkPlatformAccount \
    --namespace $AB_NAMESPACE \
    --userId '8W3Mdl9X' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 269 'PublicLinkPlatformAccount' test.out

#- 270 PublicForceLinkPlatformWithProgression
# body param: body
echo '{"chosenNamespaces": ["BHLexd9R", "RO19czJB", "tFEfeDEv"], "requestId": "dPGwUjwM"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicForceLinkPlatformWithProgression \
    --namespace $AB_NAMESPACE \
    --userId '8wPAJmcb' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 270 'PublicForceLinkPlatformWithProgression' test.out

#- 271 PublicGetPublisherUserV3
$CLI_EXE \
    --sn iam \
    --op PublicGetPublisherUserV3 \
    --namespace $AB_NAMESPACE \
    --userId 'zYP37hKx' \
    > test.out 2>&1
eval_tap $? 271 'PublicGetPublisherUserV3' test.out

#- 272 PublicValidateUserByUserIDAndPasswordV3
$CLI_EXE \
    --sn iam \
    --op PublicValidateUserByUserIDAndPasswordV3 \
    --namespace $AB_NAMESPACE \
    --userId '7fbOQcHy' \
    --password 'bWbN86eC' \
    > test.out 2>&1
eval_tap $? 272 'PublicValidateUserByUserIDAndPasswordV3' test.out

#- 273 PublicGetRolesV3
$CLI_EXE \
    --sn iam \
    --op PublicGetRolesV3 \
    --after '3g2DAfJF' \
    --before 'Z7sGxpJl' \
    --isWildcard 'false' \
    --limit '35' \
    > test.out 2>&1
eval_tap $? 273 'PublicGetRolesV3' test.out

#- 274 PublicGetRoleV3
$CLI_EXE \
    --sn iam \
    --op PublicGetRoleV3 \
    --roleId 'ipLj7aSR' \
    > test.out 2>&1
eval_tap $? 274 'PublicGetRoleV3' test.out

#- 275 PublicGetMyUserV3
$CLI_EXE \
    --sn iam \
    --op PublicGetMyUserV3 \
    > test.out 2>&1
eval_tap $? 275 'PublicGetMyUserV3' test.out

#- 276 PublicGetLinkHeadlessAccountToMyAccountConflictV3
$CLI_EXE \
    --sn iam \
    --op PublicGetLinkHeadlessAccountToMyAccountConflictV3 \
    --oneTimeLinkCode 'T7m5Qxp1' \
    > test.out 2>&1
eval_tap $? 276 'PublicGetLinkHeadlessAccountToMyAccountConflictV3' test.out

#- 277 LinkHeadlessAccountToMyAccountV3
# body param: body
echo '{"chosenNamespaces": ["ywl9utO7", "R9LmIHwV", "tzC5CWBg"], "oneTimeLinkCode": "CqrW5uSd"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op LinkHeadlessAccountToMyAccountV3 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 277 'LinkHeadlessAccountToMyAccountV3' test.out

#- 278 PublicSendVerificationLinkV3
# body param: body
echo '{"languageTag": "QQZ0iFtj"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicSendVerificationLinkV3 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 278 'PublicSendVerificationLinkV3' test.out

#- 279 PublicVerifyUserByLinkV3
$CLI_EXE \
    --sn iam \
    --op PublicVerifyUserByLinkV3 \
    --code 'fV1x4eSO' \
    > test.out 2>&1
eval_tap $? 279 'PublicVerifyUserByLinkV3' test.out

#- 280 PlatformAuthenticateSAMLV3Handler
$CLI_EXE \
    --sn iam \
    --op PlatformAuthenticateSAMLV3Handler \
    --platformId 'bowVYL7I' \
    --code 'LdpBjutv' \
    --error 'L3kSZjmA' \
    --state 'gPJaqetd' \
    > test.out 2>&1
eval_tap $? 280 'PlatformAuthenticateSAMLV3Handler' test.out

#- 281 LoginSSOClient
$CLI_EXE \
    --sn iam \
    --op LoginSSOClient \
    --platformId 'j3x2Y4Cp' \
    --payload 'SYnoNJi1' \
    > test.out 2>&1
eval_tap $? 281 'LoginSSOClient' test.out

#- 282 LogoutSSOClient
$CLI_EXE \
    --sn iam \
    --op LogoutSSOClient \
    --platformId 'PzTJ2YoY' \
    > test.out 2>&1
eval_tap $? 282 'LogoutSSOClient' test.out

#- 283 RequestGameTokenResponseV3
$CLI_EXE \
    --sn iam \
    --op RequestGameTokenResponseV3 \
    --additionalData 'sduWBQkI' \
    --code 'B93ou8Aa' \
    > test.out 2>&1
eval_tap $? 283 'RequestGameTokenResponseV3' test.out

#- 284 PlatformTokenRefreshV3
$CLI_EXE \
    --sn iam \
    --op PlatformTokenRefreshV3 \
    --platformId 'oRaarFBJ' \
    --platform_token 'IKzwX3GU' \
    > test.out 2>&1
eval_tap $? 284 'PlatformTokenRefreshV3' test.out

#- 285 AdminGetDevicesByUserV4
$CLI_EXE \
    --sn iam \
    --op AdminGetDevicesByUserV4 \
    --namespace $AB_NAMESPACE \
    --userId '5as2B47S' \
    > test.out 2>&1
eval_tap $? 285 'AdminGetDevicesByUserV4' test.out

#- 286 AdminGetBannedDevicesV4
$CLI_EXE \
    --sn iam \
    --op AdminGetBannedDevicesV4 \
    --namespace $AB_NAMESPACE \
    --deviceType 'nTYTQaml' \
    --endDate 'OdBe8wv1' \
    --limit '45' \
    --offset '8' \
    --startDate 'XMLaN5jW' \
    > test.out 2>&1
eval_tap $? 286 'AdminGetBannedDevicesV4' test.out

#- 287 AdminGetUserDeviceBansV4
$CLI_EXE \
    --sn iam \
    --op AdminGetUserDeviceBansV4 \
    --namespace $AB_NAMESPACE \
    --userId 'nINfenGw' \
    > test.out 2>&1
eval_tap $? 287 'AdminGetUserDeviceBansV4' test.out

#- 288 AdminBanDeviceV4
# body param: body
echo '{"comment": "BwfDQJia", "deviceId": "zGCohjsO", "deviceType": "Clv6nW5H", "enabled": true, "endDate": "ljxTV0Bz", "ext": {"0XQtAc5B": {}, "Lyx1dksq": {}, "9G5xFzKD": {}}, "reason": "O1GPCdpF"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBanDeviceV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 288 'AdminBanDeviceV4' test.out

#- 289 AdminGetDeviceBanV4
$CLI_EXE \
    --sn iam \
    --op AdminGetDeviceBanV4 \
    --banId '2bkm5x86' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 289 'AdminGetDeviceBanV4' test.out

#- 290 AdminUpdateDeviceBanV4
# body param: body
echo '{"enabled": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateDeviceBanV4 \
    --banId 'IUDRJLi9' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 290 'AdminUpdateDeviceBanV4' test.out

#- 291 AdminGenerateReportV4
$CLI_EXE \
    --sn iam \
    --op AdminGenerateReportV4 \
    --namespace $AB_NAMESPACE \
    --endDate 'FFf2Srhs' \
    --startDate 'nJkmqoD2' \
    --deviceType '1MVg5QLu' \
    > test.out 2>&1
eval_tap $? 291 'AdminGenerateReportV4' test.out

#- 292 AdminGetDeviceTypesV4
$CLI_EXE \
    --sn iam \
    --op AdminGetDeviceTypesV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 292 'AdminGetDeviceTypesV4' test.out

#- 293 AdminGetDeviceBansV4
$CLI_EXE \
    --sn iam \
    --op AdminGetDeviceBansV4 \
    --deviceId 'wISgQvVg' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 293 'AdminGetDeviceBansV4' test.out

#- 294 AdminDecryptDeviceV4
$CLI_EXE \
    --sn iam \
    --op AdminDecryptDeviceV4 \
    --deviceId '5AXlbF7R' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 294 'AdminDecryptDeviceV4' test.out

#- 295 AdminUnbanDeviceV4
$CLI_EXE \
    --sn iam \
    --op AdminUnbanDeviceV4 \
    --deviceId 'YRYrGNW3' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 295 'AdminUnbanDeviceV4' test.out

#- 296 AdminGetUsersByDeviceV4
$CLI_EXE \
    --sn iam \
    --op AdminGetUsersByDeviceV4 \
    --deviceId 'WFtYKJwC' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 296 'AdminGetUsersByDeviceV4' test.out

#- 297 AdminCreateTestUsersV4
# body param: body
echo '{"count": 90}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminCreateTestUsersV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 297 'AdminCreateTestUsersV4' test.out

#- 298 AdminBulkCheckValidUserIDV4
# body param: body
echo '{"userIds": ["jkZLchmv", "zruTXpQI", "QHNqv319"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBulkCheckValidUserIDV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 298 'AdminBulkCheckValidUserIDV4' test.out

#- 299 AdminUpdateUserV4
# body param: body
echo '{"avatarUrl": "W2E49TKA", "country": "Fqt0E5cp", "dateOfBirth": "tCGUHoUR", "displayName": "87dENKt7", "languageTag": "vhmZ2eTN", "userName": "btGiZ4uN"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserV4 \
    --namespace $AB_NAMESPACE \
    --userId 'KGVSee3A' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 299 'AdminUpdateUserV4' test.out

#- 300 AdminUpdateUserEmailAddressV4
# body param: body
echo '{"code": "pBVQ1U6v", "emailAddress": "BCbwQe5Z"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserEmailAddressV4 \
    --namespace $AB_NAMESPACE \
    --userId 'hEjOS5Uw' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 300 'AdminUpdateUserEmailAddressV4' test.out

#- 301 AdminDisableUserMFAV4
$CLI_EXE \
    --sn iam \
    --op AdminDisableUserMFAV4 \
    --namespace $AB_NAMESPACE \
    --userId '7md8UMKb' \
    > test.out 2>&1
eval_tap $? 301 'AdminDisableUserMFAV4' test.out

#- 302 AdminListUserRolesV4
$CLI_EXE \
    --sn iam \
    --op AdminListUserRolesV4 \
    --namespace $AB_NAMESPACE \
    --userId 'YmUC8LR9' \
    > test.out 2>&1
eval_tap $? 302 'AdminListUserRolesV4' test.out

#- 303 AdminUpdateUserRoleV4
# body param: body
echo '{"assignedNamespaces": ["1eTKKp2W", "MKSNLiA6", "4qb8gKVY"], "roleId": "gOQezht5"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserRoleV4 \
    --namespace $AB_NAMESPACE \
    --userId 'gyHPfdwT' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 303 'AdminUpdateUserRoleV4' test.out

#- 304 AdminAddUserRoleV4
# body param: body
echo '{"assignedNamespaces": ["qYdwvMg1", "DoNo8ksj", "raHpVGI4"], "roleId": "NfhajmWr"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddUserRoleV4 \
    --namespace $AB_NAMESPACE \
    --userId 'VqEo7dtc' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 304 'AdminAddUserRoleV4' test.out

#- 305 AdminRemoveUserRoleV4
# body param: body
echo '{"assignedNamespaces": ["2gFTsCaG", "mgn4MGev", "q3OkI3A8"], "roleId": "VegLmKyl"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminRemoveUserRoleV4 \
    --namespace $AB_NAMESPACE \
    --userId 'mzPqTYZZ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 305 'AdminRemoveUserRoleV4' test.out

#- 306 AdminGetRolesV4
$CLI_EXE \
    --sn iam \
    --op AdminGetRolesV4 \
    --adminRole 'true' \
    --isWildcard 'true' \
    --limit '94' \
    --offset '100' \
    > test.out 2>&1
eval_tap $? 306 'AdminGetRolesV4' test.out

#- 307 AdminCreateRoleV4
# body param: body
echo '{"adminRole": true, "deletable": true, "isWildcard": true, "roleName": "qSj0NmrN"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminCreateRoleV4 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 307 'AdminCreateRoleV4' test.out

#- 308 AdminGetRoleV4
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleV4 \
    --roleId 'mZJJPRFR' \
    > test.out 2>&1
eval_tap $? 308 'AdminGetRoleV4' test.out

#- 309 AdminDeleteRoleV4
$CLI_EXE \
    --sn iam \
    --op AdminDeleteRoleV4 \
    --roleId 'uiKHv9W7' \
    > test.out 2>&1
eval_tap $? 309 'AdminDeleteRoleV4' test.out

#- 310 AdminUpdateRoleV4
# body param: body
echo '{"adminRole": false, "deletable": false, "isWildcard": true, "roleName": "PIXeOeKn"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateRoleV4 \
    --roleId 'aJM67vk7' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 310 'AdminUpdateRoleV4' test.out

#- 311 AdminUpdateRolePermissionsV4
# body param: body
echo '{"permissions": [{"action": 94, "resource": "TcQbSXjX", "schedAction": 75, "schedCron": "FvzRZCIr", "schedRange": ["WPCOkdj5", "W0Xfa10c", "3Nc0eHTx"]}, {"action": 1, "resource": "hFucrCyM", "schedAction": 77, "schedCron": "UkzNYlYl", "schedRange": ["Vhk9xS8M", "KVQf5CpT", "RbC3aE4f"]}, {"action": 16, "resource": "Subdxnm8", "schedAction": 88, "schedCron": "UkguB67K", "schedRange": ["9RAwc8El", "PXfL6sey", "QNR7HJ7u"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateRolePermissionsV4 \
    --roleId 'nl32Fd5C' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 311 'AdminUpdateRolePermissionsV4' test.out

#- 312 AdminAddRolePermissionsV4
# body param: body
echo '{"permissions": [{"action": 44, "resource": "aBmsJuhr", "schedAction": 85, "schedCron": "1nEms5L0", "schedRange": ["acrP6iqQ", "1fN01vnl", "Eu1vJ2S4"]}, {"action": 65, "resource": "T5Wwts5E", "schedAction": 16, "schedCron": "Who2VoMm", "schedRange": ["iaYHD4b4", "Zb27TojB", "oWgf2Ooh"]}, {"action": 17, "resource": "GudHyEju", "schedAction": 70, "schedCron": "CxZ657ZX", "schedRange": ["dYg8fXHz", "wqMYhT84", "IDKDsFbw"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddRolePermissionsV4 \
    --roleId 'jXHtHcNG' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 312 'AdminAddRolePermissionsV4' test.out

#- 313 AdminDeleteRolePermissionsV4
# body param: body
echo '["vl2jTWy5", "HdevZoa8", "bkiA6H5v"]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDeleteRolePermissionsV4 \
    --roleId 'QO7G2YKd' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 313 'AdminDeleteRolePermissionsV4' test.out

#- 314 AdminListAssignedUsersV4
$CLI_EXE \
    --sn iam \
    --op AdminListAssignedUsersV4 \
    --roleId 'uQyV6VD8' \
    --after 'QVtMErCn' \
    --before 'Ii1OpEJC' \
    --limit '90' \
    > test.out 2>&1
eval_tap $? 314 'AdminListAssignedUsersV4' test.out

#- 315 AdminAssignUserToRoleV4
# body param: body
echo '{"assignedNamespaces": ["h67tsBPx", "8AvHWXSm", "9Vahrfiu"], "namespace": "cGof2ai1", "userId": "DBWrz6hm"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAssignUserToRoleV4 \
    --roleId 'f12bPsjH' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 315 'AdminAssignUserToRoleV4' test.out

#- 316 AdminRevokeUserFromRoleV4
# body param: body
echo '{"namespace": "xzotuMje", "userId": "I0uhLYX7"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminRevokeUserFromRoleV4 \
    --roleId 'V9KyvsFR' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 316 'AdminRevokeUserFromRoleV4' test.out

#- 317 AdminInviteUserNewV4
# body param: body
echo '{"assignedNamespaces": ["NOYAJwbC", "ba6PYJnI", "cVVdsHmm"], "emailAddresses": ["Cp0u45He", "RwpYdV2H", "QcM15BQs"], "isAdmin": true, "namespace": "T6gLQYAA", "roleId": "vHMFcKkH"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminInviteUserNewV4 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 317 'AdminInviteUserNewV4' test.out

#- 318 AdminUpdateMyUserV4
# body param: body
echo '{"avatarUrl": "27ybUYmJ", "country": "q2SfdSLn", "dateOfBirth": "v8obaANp", "displayName": "FBKGwL1x", "languageTag": "uTN3Tqgc", "userName": "HbiN33te"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateMyUserV4 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 318 'AdminUpdateMyUserV4' test.out

#- 319 AdminDisableMyAuthenticatorV4
$CLI_EXE \
    --sn iam \
    --op AdminDisableMyAuthenticatorV4 \
    > test.out 2>&1
eval_tap $? 319 'AdminDisableMyAuthenticatorV4' test.out

#- 320 AdminEnableMyAuthenticatorV4
$CLI_EXE \
    --sn iam \
    --op AdminEnableMyAuthenticatorV4 \
    --code 'FmQZWbYC' \
    > test.out 2>&1
eval_tap $? 320 'AdminEnableMyAuthenticatorV4' test.out

#- 321 AdminGenerateMyAuthenticatorKeyV4
$CLI_EXE \
    --sn iam \
    --op AdminGenerateMyAuthenticatorKeyV4 \
    > test.out 2>&1
eval_tap $? 321 'AdminGenerateMyAuthenticatorKeyV4' test.out

#- 322 AdminGetMyBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op AdminGetMyBackupCodesV4 \
    > test.out 2>&1
eval_tap $? 322 'AdminGetMyBackupCodesV4' test.out

#- 323 AdminGenerateMyBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op AdminGenerateMyBackupCodesV4 \
    > test.out 2>&1
eval_tap $? 323 'AdminGenerateMyBackupCodesV4' test.out

#- 324 AdminDisableMyBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op AdminDisableMyBackupCodesV4 \
    > test.out 2>&1
eval_tap $? 324 'AdminDisableMyBackupCodesV4' test.out

#- 325 AdminDownloadMyBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op AdminDownloadMyBackupCodesV4 \
    > test.out 2>&1
eval_tap $? 325 'AdminDownloadMyBackupCodesV4' test.out

#- 326 AdminEnableMyBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op AdminEnableMyBackupCodesV4 \
    > test.out 2>&1
eval_tap $? 326 'AdminEnableMyBackupCodesV4' test.out

#- 327 AdminSendMyMFAEmailCodeV4
$CLI_EXE \
    --sn iam \
    --op AdminSendMyMFAEmailCodeV4 \
    > test.out 2>&1
eval_tap $? 327 'AdminSendMyMFAEmailCodeV4' test.out

#- 328 AdminDisableMyEmailV4
$CLI_EXE \
    --sn iam \
    --op AdminDisableMyEmailV4 \
    > test.out 2>&1
eval_tap $? 328 'AdminDisableMyEmailV4' test.out

#- 329 AdminEnableMyEmailV4
$CLI_EXE \
    --sn iam \
    --op AdminEnableMyEmailV4 \
    --code 'QtvnBfgd' \
    > test.out 2>&1
eval_tap $? 329 'AdminEnableMyEmailV4' test.out

#- 330 AdminGetMyEnabledFactorsV4
$CLI_EXE \
    --sn iam \
    --op AdminGetMyEnabledFactorsV4 \
    > test.out 2>&1
eval_tap $? 330 'AdminGetMyEnabledFactorsV4' test.out

#- 331 AdminMakeFactorMyDefaultV4
$CLI_EXE \
    --sn iam \
    --op AdminMakeFactorMyDefaultV4 \
    --factor '5pgnlzGg' \
    > test.out 2>&1
eval_tap $? 331 'AdminMakeFactorMyDefaultV4' test.out

#- 332 AdminInviteUserV4
eval_tap 0 332 'AdminInviteUserV4 # SKIP deprecated' test.out

#- 333 PublicCreateTestUserV4
# body param: body
echo '{"acceptedPolicies": [{"isAccepted": false, "localizedPolicyVersionId": "TdJwWie9", "policyId": "MtlJcb8q", "policyVersionId": "L8UBsp1G"}, {"isAccepted": false, "localizedPolicyVersionId": "YNZWkpTz", "policyId": "3zFlfzBz", "policyVersionId": "5KKlno9w"}, {"isAccepted": false, "localizedPolicyVersionId": "8duRYaOr", "policyId": "nZYpvMYu", "policyVersionId": "AfTAsYsd"}], "authType": "EMAILPASSWD", "country": "MmLVWzkF", "dateOfBirth": "SAqSzKVa", "displayName": "hvSmremf", "emailAddress": "GrTp79pg", "password": "U7gYeBV8", "passwordMD5Sum": "cLtqaoTX", "username": "lRYhstxg", "verified": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicCreateTestUserV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 333 'PublicCreateTestUserV4' test.out

#- 334 PublicCreateUserV4
# body param: body
echo '{"acceptedPolicies": [{"isAccepted": false, "localizedPolicyVersionId": "1bPeNBvB", "policyId": "GyjrQIUJ", "policyVersionId": "I2LY9VpJ"}, {"isAccepted": true, "localizedPolicyVersionId": "ERnAnEC8", "policyId": "owpEH8pn", "policyVersionId": "Nq1C0Vom"}, {"isAccepted": false, "localizedPolicyVersionId": "F4wLUix5", "policyId": "T7wYhWps", "policyVersionId": "ap6ivxUo"}], "authType": "EMAILPASSWD", "code": "AY0EL5rX", "country": "hqRCxcis", "dateOfBirth": "9h3WNtj9", "displayName": "HvLDDJn8", "emailAddress": "FL2aUTGz", "password": "NaVuSS9y", "passwordMD5Sum": "gdj5Nu6g", "reachMinimumAge": false, "username": "8L23U00q"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicCreateUserV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 334 'PublicCreateUserV4' test.out

#- 335 CreateUserFromInvitationV4
# body param: body
echo '{"acceptedPolicies": [{"isAccepted": false, "localizedPolicyVersionId": "wPDoZ5Hz", "policyId": "MQ1fsNy3", "policyVersionId": "arFkDPJs"}, {"isAccepted": false, "localizedPolicyVersionId": "espHihfH", "policyId": "6xmmgfL4", "policyVersionId": "uxLP1Xq8"}, {"isAccepted": false, "localizedPolicyVersionId": "r8DuL0W9", "policyId": "R9r6qnTM", "policyVersionId": "kJebUoej"}], "authType": "EMAILPASSWD", "country": "t5puS8QB", "dateOfBirth": "USsGSinC", "displayName": "DGyxXjVS", "password": "G48Oe6If", "reachMinimumAge": false, "username": "qxnlkiSU"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op CreateUserFromInvitationV4 \
    --invitationId 'h9jRGsAv' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 335 'CreateUserFromInvitationV4' test.out

#- 336 PublicUpdateUserV4
# body param: body
echo '{"avatarUrl": "ZiSUN5xs", "country": "Gmp8GMzs", "dateOfBirth": "1sFZWBMm", "displayName": "JM6JBj1E", "languageTag": "WLF04dmJ", "userName": "SUpiqOOD"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpdateUserV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 336 'PublicUpdateUserV4' test.out

#- 337 PublicUpdateUserEmailAddressV4
# body param: body
echo '{"code": "Kf4zpcD0", "emailAddress": "vY2n3itn"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpdateUserEmailAddressV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 337 'PublicUpdateUserEmailAddressV4' test.out

#- 338 PublicUpgradeHeadlessAccountWithVerificationCodeV4
# body param: body
echo '{"code": "AAOhJqg7", "country": "Uy8wRHI3", "dateOfBirth": "YEtpWyk2", "displayName": "1I5TezQ6", "emailAddress": "eDhy9ovh", "password": "g8hhUdot", "reachMinimumAge": false, "username": "GmXCLOx3", "validateOnly": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpgradeHeadlessAccountWithVerificationCodeV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 338 'PublicUpgradeHeadlessAccountWithVerificationCodeV4' test.out

#- 339 PublicUpgradeHeadlessAccountV4
# body param: body
echo '{"emailAddress": "kIOh22m9", "password": "COxsmPAt", "username": "m66T4lJL"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpgradeHeadlessAccountV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 339 'PublicUpgradeHeadlessAccountV4' test.out

#- 340 PublicDisableMyAuthenticatorV4
$CLI_EXE \
    --sn iam \
    --op PublicDisableMyAuthenticatorV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 340 'PublicDisableMyAuthenticatorV4' test.out

#- 341 PublicEnableMyAuthenticatorV4
$CLI_EXE \
    --sn iam \
    --op PublicEnableMyAuthenticatorV4 \
    --namespace $AB_NAMESPACE \
    --code '6Vo6qx7F' \
    > test.out 2>&1
eval_tap $? 341 'PublicEnableMyAuthenticatorV4' test.out

#- 342 PublicGenerateMyAuthenticatorKeyV4
$CLI_EXE \
    --sn iam \
    --op PublicGenerateMyAuthenticatorKeyV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 342 'PublicGenerateMyAuthenticatorKeyV4' test.out

#- 343 PublicGetMyBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op PublicGetMyBackupCodesV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 343 'PublicGetMyBackupCodesV4' test.out

#- 344 PublicGenerateMyBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op PublicGenerateMyBackupCodesV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 344 'PublicGenerateMyBackupCodesV4' test.out

#- 345 PublicDisableMyBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op PublicDisableMyBackupCodesV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 345 'PublicDisableMyBackupCodesV4' test.out

#- 346 PublicDownloadMyBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op PublicDownloadMyBackupCodesV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 346 'PublicDownloadMyBackupCodesV4' test.out

#- 347 PublicEnableMyBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op PublicEnableMyBackupCodesV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 347 'PublicEnableMyBackupCodesV4' test.out

#- 348 PublicRemoveTrustedDeviceV4
$CLI_EXE \
    --sn iam \
    --op PublicRemoveTrustedDeviceV4 \
    --namespace $AB_NAMESPACE \
    --device_token 'hC2s01h4' \
    > test.out 2>&1
eval_tap $? 348 'PublicRemoveTrustedDeviceV4' test.out

#- 349 PublicSendMyMFAEmailCodeV4
$CLI_EXE \
    --sn iam \
    --op PublicSendMyMFAEmailCodeV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 349 'PublicSendMyMFAEmailCodeV4' test.out

#- 350 PublicDisableMyEmailV4
$CLI_EXE \
    --sn iam \
    --op PublicDisableMyEmailV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 350 'PublicDisableMyEmailV4' test.out

#- 351 PublicEnableMyEmailV4
$CLI_EXE \
    --sn iam \
    --op PublicEnableMyEmailV4 \
    --namespace $AB_NAMESPACE \
    --code 'swEeTlgF' \
    > test.out 2>&1
eval_tap $? 351 'PublicEnableMyEmailV4' test.out

#- 352 PublicGetMyEnabledFactorsV4
$CLI_EXE \
    --sn iam \
    --op PublicGetMyEnabledFactorsV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 352 'PublicGetMyEnabledFactorsV4' test.out

#- 353 PublicMakeFactorMyDefaultV4
$CLI_EXE \
    --sn iam \
    --op PublicMakeFactorMyDefaultV4 \
    --namespace $AB_NAMESPACE \
    --factor '0cDsiLTi' \
    > test.out 2>&1
eval_tap $? 353 'PublicMakeFactorMyDefaultV4' test.out

#- 354 PublicGetUserPublicInfoByUserIdV4
$CLI_EXE \
    --sn iam \
    --op PublicGetUserPublicInfoByUserIdV4 \
    --namespace $AB_NAMESPACE \
    --userId 'O3XLzZVS' \
    > test.out 2>&1
eval_tap $? 354 'PublicGetUserPublicInfoByUserIdV4' test.out

#- 355 PublicInviteUserV4
# body param: body
echo '{"emailAddress": "30x6kB0Q", "namespace": "Oe9xOoYY", "namespaceDisplayName": "FX5WN3RX"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicInviteUserV4 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 355 'PublicInviteUserV4' test.out


# remove artifacts
rm -f "$CLI_TOKEN_FILE"
rm -f "$TEMP_JSON_INPUT"
rm -f "$TEMP_FILE_UPLOAD"

exit $EXIT_CODE