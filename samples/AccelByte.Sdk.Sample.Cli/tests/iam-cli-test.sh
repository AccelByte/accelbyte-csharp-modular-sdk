#!/usr/bin/env bash

# Copyright (c) 2021 AccelByte Inc. All Rights Reserved.
# This is licensed software from AccelByte Inc, for limitations
# and restrictions contact your company contract manager.

# This code is generated by tool. DO NOT EDIT.

# Meta:
# - random seed: 
# - template file: 

# Instructions:
# - Run the Justice SDK Mock Server first before running this script.

export AB_BASE_URL="http://127.0.0.1:8080"
export AB_CLIENT_ID="admin"
export AB_CLIENT_SECRET="admin"
export AB_NAMESPACE="test"
export AB_APP_NAME="UnitTest"

EXIT_CODE=0

eval_tap() {
  if [ $1 -eq 0 ]; then
    echo "ok $2 - $3"
  else
    EXIT_CODE=1
    echo "not ok $2 - $3"
    sed 's/^/# /g' $4
  fi
  rm -f $4
}

CLI_EXE="AccelByte.Sdk.Sample.Cli"
CLI_TOKEN_FILE="$(dirname "$(which $CLI_EXE)")/token.json"
TEMP_JSON_INPUT="input_json.json"
TEMP_FILE_UPLOAD="file_upload.bin"

echo "TAP version 13"
echo "1..432"

#- 1 Login
$CLI_EXE --op login --lt user --user user --pass user > test.out 2>&1
eval_tap $? 1 'Login' test.out

if [ $EXIT_CODE -ne 0 ]; then
  echo "Bail out! Login failed."
  exit $EXIT_CODE
fi

# echo "foo" > "$CLI_TOKEN_FILE"

#- 2 GetBansType
eval_tap 0 2 'GetBansType # SKIP deprecated' test.out

#- 3 GetListBanReason
eval_tap 0 3 'GetListBanReason # SKIP deprecated' test.out

#- 4 GetClients
eval_tap 0 4 'GetClients # SKIP deprecated' test.out

#- 5 CreateClient
eval_tap 0 5 'CreateClient # SKIP deprecated' test.out

#- 6 GetClient
eval_tap 0 6 'GetClient # SKIP deprecated' test.out

#- 7 UpdateClient
eval_tap 0 7 'UpdateClient # SKIP deprecated' test.out

#- 8 DeleteClient
eval_tap 0 8 'DeleteClient # SKIP deprecated' test.out

#- 9 UpdateClientPermission
eval_tap 0 9 'UpdateClientPermission # SKIP deprecated' test.out

#- 10 AddClientPermission
eval_tap 0 10 'AddClientPermission # SKIP deprecated' test.out

#- 11 DeleteClientPermission
eval_tap 0 11 'DeleteClientPermission # SKIP deprecated' test.out

#- 12 UpdateClientSecret
eval_tap 0 12 'UpdateClientSecret # SKIP deprecated' test.out

#- 13 GetClientsbyNamespace
eval_tap 0 13 'GetClientsbyNamespace # SKIP deprecated' test.out

#- 14 CreateClientByNamespace
eval_tap 0 14 'CreateClientByNamespace # SKIP deprecated' test.out

#- 15 DeleteClientByNamespace
eval_tap 0 15 'DeleteClientByNamespace # SKIP deprecated' test.out

#- 16 CreateUser
eval_tap 0 16 'CreateUser # SKIP deprecated' test.out

#- 17 GetAdminUsersByRoleID
eval_tap 0 17 'GetAdminUsersByRoleID # SKIP deprecated' test.out

#- 18 GetUserByLoginID
eval_tap 0 18 'GetUserByLoginID # SKIP deprecated' test.out

#- 19 GetUserByPlatformUserID
eval_tap 0 19 'GetUserByPlatformUserID # SKIP deprecated' test.out

#- 20 ForgotPassword
eval_tap 0 20 'ForgotPassword # SKIP deprecated' test.out

#- 21 GetUsersByLoginIds
eval_tap 0 21 'GetUsersByLoginIds # SKIP deprecated' test.out

#- 22 ResetPassword
eval_tap 0 22 'ResetPassword # SKIP deprecated' test.out

#- 23 SearchUser
eval_tap 0 23 'SearchUser # SKIP deprecated' test.out

#- 24 GetUserByUserID
eval_tap 0 24 'GetUserByUserID # SKIP deprecated' test.out

#- 25 UpdateUser
eval_tap 0 25 'UpdateUser # SKIP deprecated' test.out

#- 26 DeleteUser
eval_tap 0 26 'DeleteUser # SKIP deprecated' test.out

#- 27 BanUser
eval_tap 0 27 'BanUser # SKIP deprecated' test.out

#- 28 GetUserBanHistory
eval_tap 0 28 'GetUserBanHistory # SKIP deprecated' test.out

#- 29 DisableUserBan
eval_tap 0 29 'DisableUserBan # SKIP deprecated' test.out

#- 30 EnableUserBan
eval_tap 0 30 'EnableUserBan # SKIP deprecated' test.out

#- 31 ListCrossNamespaceAccountLink
eval_tap 0 31 'ListCrossNamespaceAccountLink # SKIP deprecated' test.out

#- 32 DisableUser
eval_tap 0 32 'DisableUser # SKIP deprecated' test.out

#- 33 EnableUser
eval_tap 0 33 'EnableUser # SKIP deprecated' test.out

#- 34 GetUserInformation
eval_tap 0 34 'GetUserInformation # SKIP deprecated' test.out

#- 35 DeleteUserInformation
eval_tap 0 35 'DeleteUserInformation # SKIP deprecated' test.out

#- 36 GetUserLoginHistories
eval_tap 0 36 'GetUserLoginHistories # SKIP deprecated' test.out

#- 37 UpdatePassword
eval_tap 0 37 'UpdatePassword # SKIP deprecated' test.out

#- 38 SaveUserPermission
eval_tap 0 38 'SaveUserPermission # SKIP deprecated' test.out

#- 39 AddUserPermission
eval_tap 0 39 'AddUserPermission # SKIP deprecated' test.out

#- 40 DeleteUserPermission
eval_tap 0 40 'DeleteUserPermission # SKIP deprecated' test.out

#- 41 GetUserPlatformAccounts
eval_tap 0 41 'GetUserPlatformAccounts # SKIP deprecated' test.out

#- 42 GetUserMapping
eval_tap 0 42 'GetUserMapping # SKIP deprecated' test.out

#- 43 GetUserJusticePlatformAccount
eval_tap 0 43 'GetUserJusticePlatformAccount # SKIP deprecated' test.out

#- 44 PlatformLink
eval_tap 0 44 'PlatformLink # SKIP deprecated' test.out

#- 45 PlatformUnlink
eval_tap 0 45 'PlatformUnlink # SKIP deprecated' test.out

#- 46 GetPublisherUser
eval_tap 0 46 'GetPublisherUser # SKIP deprecated' test.out

#- 47 SaveUserRoles
eval_tap 0 47 'SaveUserRoles # SKIP deprecated' test.out

#- 48 AddUserRole
eval_tap 0 48 'AddUserRole # SKIP deprecated' test.out

#- 49 DeleteUserRole
eval_tap 0 49 'DeleteUserRole # SKIP deprecated' test.out

#- 50 UpgradeHeadlessAccount
eval_tap 0 50 'UpgradeHeadlessAccount # SKIP deprecated' test.out

#- 51 UpgradeHeadlessAccountWithVerificationCode
eval_tap 0 51 'UpgradeHeadlessAccountWithVerificationCode # SKIP deprecated' test.out

#- 52 UserVerification
eval_tap 0 52 'UserVerification # SKIP deprecated' test.out

#- 53 SendVerificationCode
eval_tap 0 53 'SendVerificationCode # SKIP deprecated' test.out

#- 54 Authorization
eval_tap 0 54 'Authorization # SKIP deprecated' test.out

#- 55 GetJWKS
eval_tap 0 55 'GetJWKS # SKIP deprecated' test.out

#- 56 PlatformTokenRequestHandler
eval_tap 0 56 'PlatformTokenRequestHandler # SKIP deprecated' test.out

#- 57 RevokeUser
eval_tap 0 57 'RevokeUser # SKIP deprecated' test.out

#- 58 GetRevocationList
eval_tap 0 58 'GetRevocationList # SKIP deprecated' test.out

#- 59 RevokeToken
eval_tap 0 59 'RevokeToken # SKIP deprecated' test.out

#- 60 RevokeAUser
eval_tap 0 60 'RevokeAUser # SKIP deprecated' test.out

#- 61 TokenGrant
eval_tap 0 61 'TokenGrant # SKIP deprecated' test.out

#- 62 VerifyToken
eval_tap 0 62 'VerifyToken # SKIP deprecated' test.out

#- 63 GetRoles
eval_tap 0 63 'GetRoles # SKIP deprecated' test.out

#- 64 CreateRole
eval_tap 0 64 'CreateRole # SKIP deprecated' test.out

#- 65 GetRole
eval_tap 0 65 'GetRole # SKIP deprecated' test.out

#- 66 UpdateRole
eval_tap 0 66 'UpdateRole # SKIP deprecated' test.out

#- 67 DeleteRole
eval_tap 0 67 'DeleteRole # SKIP deprecated' test.out

#- 68 GetRoleAdminStatus
eval_tap 0 68 'GetRoleAdminStatus # SKIP deprecated' test.out

#- 69 SetRoleAsAdmin
eval_tap 0 69 'SetRoleAsAdmin # SKIP deprecated' test.out

#- 70 RemoveRoleAdmin
eval_tap 0 70 'RemoveRoleAdmin # SKIP deprecated' test.out

#- 71 GetRoleManagers
eval_tap 0 71 'GetRoleManagers # SKIP deprecated' test.out

#- 72 AddRoleManagers
eval_tap 0 72 'AddRoleManagers # SKIP deprecated' test.out

#- 73 RemoveRoleManagers
eval_tap 0 73 'RemoveRoleManagers # SKIP deprecated' test.out

#- 74 GetRoleMembers
eval_tap 0 74 'GetRoleMembers # SKIP deprecated' test.out

#- 75 AddRoleMembers
eval_tap 0 75 'AddRoleMembers # SKIP deprecated' test.out

#- 76 RemoveRoleMembers
eval_tap 0 76 'RemoveRoleMembers # SKIP deprecated' test.out

#- 77 UpdateRolePermissions
eval_tap 0 77 'UpdateRolePermissions # SKIP deprecated' test.out

#- 78 AddRolePermission
eval_tap 0 78 'AddRolePermission # SKIP deprecated' test.out

#- 79 DeleteRolePermission
eval_tap 0 79 'DeleteRolePermission # SKIP deprecated' test.out

#- 80 AdminGetAgeRestrictionStatusV2
eval_tap 0 80 'AdminGetAgeRestrictionStatusV2 # SKIP deprecated' test.out

#- 81 AdminUpdateAgeRestrictionConfigV2
eval_tap 0 81 'AdminUpdateAgeRestrictionConfigV2 # SKIP deprecated' test.out

#- 82 GetListCountryAgeRestriction
eval_tap 0 82 'GetListCountryAgeRestriction # SKIP deprecated' test.out

#- 83 UpdateCountryAgeRestriction
eval_tap 0 83 'UpdateCountryAgeRestriction # SKIP deprecated' test.out

#- 84 AdminSearchUsersV2
eval_tap 0 84 'AdminSearchUsersV2 # SKIP deprecated' test.out

#- 85 AdminGetUserByUserIdV2
eval_tap 0 85 'AdminGetUserByUserIdV2 # SKIP deprecated' test.out

#- 86 AdminUpdateUserV2
eval_tap 0 86 'AdminUpdateUserV2 # SKIP deprecated' test.out

#- 87 AdminBanUserV2
eval_tap 0 87 'AdminBanUserV2 # SKIP deprecated' test.out

#- 88 AdminGetUserBanV2
eval_tap 0 88 'AdminGetUserBanV2 # SKIP deprecated' test.out

#- 89 AdminDisableUserV2
eval_tap 0 89 'AdminDisableUserV2 # SKIP deprecated' test.out

#- 90 AdminEnableUserV2
eval_tap 0 90 'AdminEnableUserV2 # SKIP deprecated' test.out

#- 91 AdminResetPasswordV2
eval_tap 0 91 'AdminResetPasswordV2 # SKIP deprecated' test.out

#- 92 AdminDeletePlatformLinkV2
eval_tap 0 92 'AdminDeletePlatformLinkV2 # SKIP deprecated' test.out

#- 93 AdminPutUserRolesV2
eval_tap 0 93 'AdminPutUserRolesV2 # SKIP deprecated' test.out

#- 94 AdminCreateUserRolesV2
eval_tap 0 94 'AdminCreateUserRolesV2 # SKIP deprecated' test.out

#- 95 PublicGetCountryAgeRestriction
eval_tap 0 95 'PublicGetCountryAgeRestriction # SKIP deprecated' test.out

#- 96 PublicCreateUserV2
eval_tap 0 96 'PublicCreateUserV2 # SKIP deprecated' test.out

#- 97 PublicForgotPasswordV2
eval_tap 0 97 'PublicForgotPasswordV2 # SKIP deprecated' test.out

#- 98 PublicResetPasswordV2
eval_tap 0 98 'PublicResetPasswordV2 # SKIP deprecated' test.out

#- 99 PublicGetUserByUserIDV2
eval_tap 0 99 'PublicGetUserByUserIDV2 # SKIP deprecated' test.out

#- 100 PublicUpdateUserV2
eval_tap 0 100 'PublicUpdateUserV2 # SKIP deprecated' test.out

#- 101 PublicGetUserBan
eval_tap 0 101 'PublicGetUserBan # SKIP deprecated' test.out

#- 102 PublicUpdatePasswordV2
eval_tap 0 102 'PublicUpdatePasswordV2 # SKIP deprecated' test.out

#- 103 GetListJusticePlatformAccounts
eval_tap 0 103 'GetListJusticePlatformAccounts # SKIP deprecated' test.out

#- 104 PublicPlatformLinkV2
eval_tap 0 104 'PublicPlatformLinkV2 # SKIP deprecated' test.out

#- 105 PublicDeletePlatformLinkV2
eval_tap 0 105 'PublicDeletePlatformLinkV2 # SKIP deprecated' test.out

#- 106 AdminGetBansTypeV3
$CLI_EXE \
    --sn iam \
    --op AdminGetBansTypeV3 \
    > test.out 2>&1
eval_tap $? 106 'AdminGetBansTypeV3' test.out

#- 107 AdminGetListBanReasonV3
$CLI_EXE \
    --sn iam \
    --op AdminGetListBanReasonV3 \
    > test.out 2>&1
eval_tap $? 107 'AdminGetListBanReasonV3' test.out

#- 108 AdminListClientAvailablePermissions
$CLI_EXE \
    --sn iam \
    --op AdminListClientAvailablePermissions \
    --excludePermissions 'false' \
    > test.out 2>&1
eval_tap $? 108 'AdminListClientAvailablePermissions' test.out

#- 109 AdminUpdateAvailablePermissionsByModule
# body param: body
echo '{"modules": [{"docLink": "9wgbZALT", "groups": [{"group": "BgAo6EyS", "groupId": "ngro4STv", "permissions": [{"allowedActions": [21, 66, 27], "resource": "xbg350mz"}, {"allowedActions": [10, 32, 81], "resource": "j9T0j20W"}, {"allowedActions": [79, 97, 78], "resource": "Re60IwlZ"}]}, {"group": "SDJkHkBL", "groupId": "eSENdIQd", "permissions": [{"allowedActions": [41, 28, 15], "resource": "bBn4qmzo"}, {"allowedActions": [84, 35, 37], "resource": "989nreCz"}, {"allowedActions": [71, 6, 44], "resource": "GgEnudQq"}]}, {"group": "t2ZCmOVT", "groupId": "hU8EwLXa", "permissions": [{"allowedActions": [16, 68, 66], "resource": "eI8ziCtm"}, {"allowedActions": [71, 17, 91], "resource": "tsaQfo0Z"}, {"allowedActions": [18, 31, 83], "resource": "jB4Md9IX"}]}], "module": "RKbJG3WE", "moduleId": "EGSL9YWR"}, {"docLink": "BOe7PH5g", "groups": [{"group": "0163u4iR", "groupId": "iJtA8PXC", "permissions": [{"allowedActions": [74, 67, 48], "resource": "IG0T9nEn"}, {"allowedActions": [10, 11, 42], "resource": "yJazso6E"}, {"allowedActions": [60, 20, 14], "resource": "i9cnVACU"}]}, {"group": "3tuh9xFe", "groupId": "2104YG67", "permissions": [{"allowedActions": [43, 32, 96], "resource": "urZ2YXiY"}, {"allowedActions": [90, 82, 72], "resource": "FfoIaSdM"}, {"allowedActions": [55, 53, 78], "resource": "qZdTHBPS"}]}, {"group": "xW3Ph2Wt", "groupId": "qlOzC36z", "permissions": [{"allowedActions": [96, 77, 98], "resource": "a0PZnhUQ"}, {"allowedActions": [73, 25, 43], "resource": "LBlN6a7d"}, {"allowedActions": [73, 58, 40], "resource": "bBQ5RXWv"}]}], "module": "gs0Kpkku", "moduleId": "o3x5mhku"}, {"docLink": "LHfmJPIp", "groups": [{"group": "4yE8waSv", "groupId": "36ohey8R", "permissions": [{"allowedActions": [98, 52, 66], "resource": "cNtZommH"}, {"allowedActions": [49, 20, 11], "resource": "YZRdHj4I"}, {"allowedActions": [4, 30, 38], "resource": "iBFxsj5w"}]}, {"group": "VTMPrx6N", "groupId": "uqwtBshu", "permissions": [{"allowedActions": [80, 57, 1], "resource": "tcYzbbnS"}, {"allowedActions": [30, 49, 97], "resource": "3blP7tUQ"}, {"allowedActions": [47, 56, 15], "resource": "yFtxDTgP"}]}, {"group": "sQUDuTq7", "groupId": "EUYa249F", "permissions": [{"allowedActions": [37, 79, 47], "resource": "bSP9VWh8"}, {"allowedActions": [16, 18, 23], "resource": "Uf4KX2tb"}, {"allowedActions": [63, 29, 52], "resource": "cUB7DgCH"}]}], "module": "0vih6ABn", "moduleId": "TJFC2TtU"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateAvailablePermissionsByModule \
    --forceDelete 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 109 'AdminUpdateAvailablePermissionsByModule' test.out

#- 110 AdminDeleteConfigPermissionsByGroup
# body param: body
echo '{"groupId": "PisjwHwx", "moduleId": "AMyOtXHQ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDeleteConfigPermissionsByGroup \
    --forceDelete 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 110 'AdminDeleteConfigPermissionsByGroup' test.out

#- 111 AdminListClientTemplates
$CLI_EXE \
    --sn iam \
    --op AdminListClientTemplates \
    > test.out 2>&1
eval_tap $? 111 'AdminListClientTemplates' test.out

#- 112 AdminGetInputValidations
$CLI_EXE \
    --sn iam \
    --op AdminGetInputValidations \
    > test.out 2>&1
eval_tap $? 112 'AdminGetInputValidations' test.out

#- 113 AdminUpdateInputValidations
# body param: body
echo '[{"field": "u7rjKDP7", "validation": {"allowAllSpecialCharacters": true, "allowDigit": true, "allowLetter": false, "allowSpace": false, "allowUnicode": false, "avatarConfig": {"allowedPrefixes": ["w2IHt3zo", "EfI7PenH", "VGNEpJpv"], "preferRegex": false, "regex": "J69qpYBT"}, "blockedWord": ["t2sYl4Va", "mofOnG8m", "x4F0tcYv"], "description": [{"language": "pWTSrQD6", "message": ["M1Dtjj7o", "QOCc9SkB", "t92pdmeX"]}, {"language": "rkVeuO6o", "message": ["ZWN9Pel7", "AwLT9e9M", "9APlzIuP"]}, {"language": "mzXuZNkC", "message": ["EDbysyZD", "fVtFJSy3", "99f2iO8n"]}], "isCustomRegex": true, "letterCase": "Xx7ugpux", "maxLength": 28, "maxRepeatingAlphaNum": 72, "maxRepeatingSpecialCharacter": 80, "minCharType": 42, "minLength": 26, "profanityFilter": "lV1D5gVC", "regex": "CYGvklJ8", "specialCharacterLocation": "rkzGkhhu", "specialCharacters": ["VfrjnvV8", "faiGrCJL", "0yC1O2mW"]}}, {"field": "SjdlTVaB", "validation": {"allowAllSpecialCharacters": false, "allowDigit": false, "allowLetter": true, "allowSpace": true, "allowUnicode": false, "avatarConfig": {"allowedPrefixes": ["A8JW6zy1", "JqX2zW4W", "qoK7WRjJ"], "preferRegex": true, "regex": "L9nzbw5i"}, "blockedWord": ["2xnxfw4R", "ysWKfoj9", "i5dVGVKS"], "description": [{"language": "gXCMVmt8", "message": ["OvAvwmf7", "yBl1WXuQ", "iy7C1OAt"]}, {"language": "Na5zqQ6d", "message": ["bIkvFzt5", "4gEK4ZS6", "bKUycdJ5"]}, {"language": "jOlPQWVZ", "message": ["SDZTS8Pa", "KnHNFdbO", "SHHj9zha"]}], "isCustomRegex": false, "letterCase": "dAb93P5S", "maxLength": 45, "maxRepeatingAlphaNum": 16, "maxRepeatingSpecialCharacter": 62, "minCharType": 32, "minLength": 73, "profanityFilter": "xmSr6QTJ", "regex": "dd9I7rrB", "specialCharacterLocation": "8wBOQ0uy", "specialCharacters": ["wPCzdns8", "pZUIQ8Qo", "Ec4fcVrE"]}}, {"field": "rlz7gCwJ", "validation": {"allowAllSpecialCharacters": false, "allowDigit": false, "allowLetter": false, "allowSpace": true, "allowUnicode": true, "avatarConfig": {"allowedPrefixes": ["k368mkRF", "gCHu9QR9", "iTuX9QGP"], "preferRegex": false, "regex": "kY2bkedk"}, "blockedWord": ["gx1NhXQI", "3Ux4HUgx", "cWQcB7tY"], "description": [{"language": "Elb2LHnh", "message": ["ww3dcYWj", "6YOaSbfc", "aLhgT8Jy"]}, {"language": "FDNtQFnH", "message": ["uzBVgTrm", "uIIVymgF", "lF3l1wI1"]}, {"language": "aOayiJVW", "message": ["IaAbGYYs", "s4LORVnb", "tBHTTiSr"]}], "isCustomRegex": true, "letterCase": "WewoTrgh", "maxLength": 20, "maxRepeatingAlphaNum": 90, "maxRepeatingSpecialCharacter": 97, "minCharType": 67, "minLength": 39, "profanityFilter": "WYTjRqZ5", "regex": "GRFR1vMn", "specialCharacterLocation": "js6fpSka", "specialCharacters": ["x5iAPPAh", "J1Smb1f1", "uG6Woikn"]}}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateInputValidations \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 113 'AdminUpdateInputValidations' test.out

#- 114 AdminResetInputValidations
$CLI_EXE \
    --sn iam \
    --op AdminResetInputValidations \
    --field 'Rr6LF5va' \
    > test.out 2>&1
eval_tap $? 114 'AdminResetInputValidations' test.out

#- 115 ListAdminsV3
$CLI_EXE \
    --sn iam \
    --op ListAdminsV3 \
    --namespace $AB_NAMESPACE \
    --after 'Os7kDEVL' \
    --before 'VumgUuuy' \
    --endDate '44msGyrb' \
    --limit '20' \
    --query '15vPYLbW' \
    --roleId 'kTTYrhQk' \
    --startDate 'ZU37lmPu' \
    > test.out 2>&1
eval_tap $? 115 'ListAdminsV3' test.out

#- 116 AdminGetAgeRestrictionStatusV3
$CLI_EXE \
    --sn iam \
    --op AdminGetAgeRestrictionStatusV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 116 'AdminGetAgeRestrictionStatusV3' test.out

#- 117 AdminUpdateAgeRestrictionConfigV3
# body param: body
echo '{"ageRestriction": 71, "enable": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateAgeRestrictionConfigV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 117 'AdminUpdateAgeRestrictionConfigV3' test.out

#- 118 AdminGetListCountryAgeRestrictionV3
$CLI_EXE \
    --sn iam \
    --op AdminGetListCountryAgeRestrictionV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 118 'AdminGetListCountryAgeRestrictionV3' test.out

#- 119 AdminUpdateCountryAgeRestrictionV3
# body param: body
echo '{"ageRestriction": 13}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateCountryAgeRestrictionV3 \
    --countryCode 'Te597kFH' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 119 'AdminUpdateCountryAgeRestrictionV3' test.out

#- 120 AdminGetBannedUsersV3
$CLI_EXE \
    --sn iam \
    --op AdminGetBannedUsersV3 \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --banType 'uTrTm79f' \
    --limit '57' \
    --offset '98' \
    > test.out 2>&1
eval_tap $? 120 'AdminGetBannedUsersV3' test.out

#- 121 AdminBanUserBulkV3
# body param: body
echo '{"ban": "3XD3baM2", "comment": "jeBdJt8z", "endDate": "sFSYLYCC", "reason": "7268hkB5", "skipNotif": false, "userIds": ["i8hVWqqm", "73RLoYkr", "3X4MjiOs"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBanUserBulkV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 121 'AdminBanUserBulkV3' test.out

#- 122 AdminUnbanUserBulkV3
# body param: body
echo '{"bans": [{"banId": "7TsXIdWD", "userId": "9d3edJAf"}, {"banId": "16FbEPmG", "userId": "bg51nmwF"}, {"banId": "6DAhJ5EC", "userId": "JN6ETIeD"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUnbanUserBulkV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 122 'AdminUnbanUserBulkV3' test.out

#- 123 AdminGetBansTypeWithNamespaceV3
$CLI_EXE \
    --sn iam \
    --op AdminGetBansTypeWithNamespaceV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 123 'AdminGetBansTypeWithNamespaceV3' test.out

#- 124 AdminGetClientsByNamespaceV3
$CLI_EXE \
    --sn iam \
    --op AdminGetClientsByNamespaceV3 \
    --namespace $AB_NAMESPACE \
    --clientId '7q0sQNYi' \
    --clientName 'bIaqbfsu' \
    --clientType 'bt22rrsw' \
    --limit '97' \
    --offset '41' \
    --skipLoginQueue 'true' \
    > test.out 2>&1
eval_tap $? 124 'AdminGetClientsByNamespaceV3' test.out

#- 125 AdminBulkUpdateClientsV3
# body param: body
echo '{"clientIds": ["LnnGOQ1g", "6Qtiemsg", "89dy7T1M"], "clientUpdateRequest": {"audiences": ["C34qfyPJ", "W0oXNhnm", "hLqo46CJ"], "baseUri": "EAexVwff", "clientName": "lYntowAF", "clientPermissions": [{"action": 100, "resource": "XCJYARW6", "schedAction": 92, "schedCron": "mj0AlPAE", "schedRange": ["8EBLz88X", "gBQJMHTR", "Y3npyQWU"]}, {"action": 45, "resource": "2fcSrXtr", "schedAction": 97, "schedCron": "JSw34lEt", "schedRange": ["7Ubq6VjN", "5ZVRsapc", "wZrtbmTm"]}, {"action": 33, "resource": "m6kj5FtM", "schedAction": 49, "schedCron": "uGJwzWlI", "schedRange": ["giogvKzm", "WGfFLGVn", "MpBHxR2b"]}], "clientPlatform": "vL8QQBfO", "deletable": true, "description": "lC6lQZnH", "modulePermissions": [{"moduleId": "p0j46Wt0", "selectedGroups": [{"groupId": "ayku1lj3", "selectedActions": [22, 34, 69]}, {"groupId": "Zux0mFz8", "selectedActions": [9, 79, 30]}, {"groupId": "tIxzqPk9", "selectedActions": [71, 94, 50]}]}, {"moduleId": "Zq4TPbOm", "selectedGroups": [{"groupId": "QSoitUT8", "selectedActions": [12, 4, 100]}, {"groupId": "1G9FlO6G", "selectedActions": [74, 1, 93]}, {"groupId": "IkGx7gv7", "selectedActions": [18, 61, 73]}]}, {"moduleId": "bAZ4XkCN", "selectedGroups": [{"groupId": "mrovlVSO", "selectedActions": [72, 74, 94]}, {"groupId": "IQbvmRmx", "selectedActions": [92, 82, 15]}, {"groupId": "aB4GnJZG", "selectedActions": [67, 64, 39]}]}], "namespace": "Ou7ldGZh", "oauthAccessTokenExpiration": 21, "oauthAccessTokenExpirationTimeUnit": "SbDZzdoe", "oauthRefreshTokenExpiration": 87, "oauthRefreshTokenExpirationTimeUnit": "MTG75sOY", "redirectUri": "BV4Vfc4b", "scopes": ["zjFFck1D", "YjDQj4IZ", "BvGM4JJ0"], "skipLoginQueue": false, "twoFactorEnabled": true}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBulkUpdateClientsV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 125 'AdminBulkUpdateClientsV3' test.out

#- 126 AdminCreateClientV3
# body param: body
echo '{"audiences": ["W9qsx58B", "fPk235fc", "wjcFNEk0"], "baseUri": "J4O4dahs", "clientId": "q2pThyoQ", "clientName": "C3o6g6PZ", "clientPermissions": [{"action": 98, "resource": "RlFtVBoB", "schedAction": 80, "schedCron": "wRdYwjAM", "schedRange": ["JwrID8oN", "LTqKdWtG", "pS7Y0hWm"]}, {"action": 12, "resource": "DzgTxQB6", "schedAction": 69, "schedCron": "jErgFdzX", "schedRange": ["PCuKk9Y3", "bZkAla2S", "hEVuNzCD"]}, {"action": 61, "resource": "W7F5zalW", "schedAction": 61, "schedCron": "QqT7FmUi", "schedRange": ["MNYFsSCm", "6N5uhdK7", "KdqiTIDl"]}], "clientPlatform": "w0Qhieko", "deletable": true, "description": "2KoAnVSw", "modulePermissions": [{"moduleId": "nUCHcgjO", "selectedGroups": [{"groupId": "2S586TEh", "selectedActions": [77, 6, 92]}, {"groupId": "IuQ5iSj5", "selectedActions": [64, 27, 62]}, {"groupId": "jsta3hBv", "selectedActions": [30, 98, 13]}]}, {"moduleId": "WDUk63Br", "selectedGroups": [{"groupId": "HgHXAQF7", "selectedActions": [91, 6, 89]}, {"groupId": "ITBUX6IU", "selectedActions": [65, 57, 15]}, {"groupId": "Jr8Y13oh", "selectedActions": [19, 8, 92]}]}, {"moduleId": "euIC0UTq", "selectedGroups": [{"groupId": "cM4OKUqd", "selectedActions": [91, 99, 69]}, {"groupId": "vNsxCWCb", "selectedActions": [55, 95, 33]}, {"groupId": "9YCmk1ju", "selectedActions": [23, 84, 10]}]}], "namespace": "828VhHxg", "oauthAccessTokenExpiration": 95, "oauthAccessTokenExpirationTimeUnit": "eeIYfJDz", "oauthClientType": "a1WOM88F", "oauthRefreshTokenExpiration": 70, "oauthRefreshTokenExpirationTimeUnit": "FFpLk3ao", "parentNamespace": "Pv2TdxZa", "redirectUri": "SIYl2Scd", "scopes": ["lqNAFg2t", "jTum35iX", "lVNhhhZu"], "secret": "PUjvp7YX", "skipLoginQueue": true, "twoFactorEnabled": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminCreateClientV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 126 'AdminCreateClientV3' test.out

#- 127 AdminGetClientsbyNamespacebyIDV3
$CLI_EXE \
    --sn iam \
    --op AdminGetClientsbyNamespacebyIDV3 \
    --clientId 'j4LLxZyy' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 127 'AdminGetClientsbyNamespacebyIDV3' test.out

#- 128 AdminDeleteClientV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteClientV3 \
    --clientId 'HJofeclN' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 128 'AdminDeleteClientV3' test.out

#- 129 AdminUpdateClientV3
# body param: body
echo '{"audiences": ["PQOT5Vdx", "2taZLyAt", "n1afKHb7"], "baseUri": "3A202vvX", "clientName": "CZJHp4d0", "clientPermissions": [{"action": 23, "resource": "kVxdM71K", "schedAction": 93, "schedCron": "ilYkSV4f", "schedRange": ["x2xfQreM", "b2Ntfgz9", "tA8tJFUU"]}, {"action": 27, "resource": "TJT9WBWF", "schedAction": 13, "schedCron": "VvBht6tF", "schedRange": ["QfHAsWXG", "AZ48Lzc3", "9nDyzIkE"]}, {"action": 25, "resource": "wBejq7nM", "schedAction": 38, "schedCron": "mp91VEH3", "schedRange": ["ZCsU0g8d", "3mXM7UDz", "qIPiWzB8"]}], "clientPlatform": "O7VcXxOf", "deletable": false, "description": "4oNyP1E4", "modulePermissions": [{"moduleId": "CbjDGXjJ", "selectedGroups": [{"groupId": "Sv1DFrtB", "selectedActions": [29, 55, 88]}, {"groupId": "wlSjbrvN", "selectedActions": [70, 75, 18]}, {"groupId": "quLHzv7B", "selectedActions": [46, 87, 26]}]}, {"moduleId": "7oMCejUy", "selectedGroups": [{"groupId": "qyKCDq2j", "selectedActions": [24, 76, 74]}, {"groupId": "9bOeUyQF", "selectedActions": [39, 46, 92]}, {"groupId": "l17fBcf8", "selectedActions": [83, 36, 13]}]}, {"moduleId": "vv2DkPmb", "selectedGroups": [{"groupId": "GjI6XzfL", "selectedActions": [36, 7, 30]}, {"groupId": "znbVI2fN", "selectedActions": [10, 94, 45]}, {"groupId": "QKBRCCn7", "selectedActions": [81, 21, 95]}]}], "namespace": "2t9jvVKe", "oauthAccessTokenExpiration": 46, "oauthAccessTokenExpirationTimeUnit": "oUera6Yy", "oauthRefreshTokenExpiration": 49, "oauthRefreshTokenExpirationTimeUnit": "Jng9QNFE", "redirectUri": "LwmcF5Mu", "scopes": ["VYyyiCFd", "zoHL7DXW", "kVN7e2Rz"], "skipLoginQueue": false, "twoFactorEnabled": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateClientV3 \
    --clientId 'sMNI1u7d' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 129 'AdminUpdateClientV3' test.out

#- 130 AdminUpdateClientPermissionV3
# body param: body
echo '{"permissions": [{"action": 74, "resource": "AA8QPrZ4"}, {"action": 25, "resource": "N1dJKWBZ"}, {"action": 98, "resource": "fkFJ1DKB"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateClientPermissionV3 \
    --clientId 'LKVZkVxc' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 130 'AdminUpdateClientPermissionV3' test.out

#- 131 AdminAddClientPermissionsV3
# body param: body
echo '{"permissions": [{"action": 60, "resource": "oQUsCEKC"}, {"action": 80, "resource": "ZoCXNGeU"}, {"action": 47, "resource": "PTuDyAx5"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddClientPermissionsV3 \
    --clientId 'Uij1d9f8' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 131 'AdminAddClientPermissionsV3' test.out

#- 132 AdminDeleteClientPermissionV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteClientPermissionV3 \
    --action '12' \
    --clientId 'Jp0mwNCF' \
    --namespace $AB_NAMESPACE \
    --resource '8ePJHQ42' \
    > test.out 2>&1
eval_tap $? 132 'AdminDeleteClientPermissionV3' test.out

#- 133 AdminGetConfigValueV3
$CLI_EXE \
    --sn iam \
    --op AdminGetConfigValueV3 \
    --configKey '4bjdjocw' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 133 'AdminGetConfigValueV3' test.out

#- 134 AdminGetCountryListV3
$CLI_EXE \
    --sn iam \
    --op AdminGetCountryListV3 \
    --namespace $AB_NAMESPACE \
    --filterBlacklist 'true' \
    > test.out 2>&1
eval_tap $? 134 'AdminGetCountryListV3' test.out

#- 135 AdminGetCountryBlacklistV3
$CLI_EXE \
    --sn iam \
    --op AdminGetCountryBlacklistV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 135 'AdminGetCountryBlacklistV3' test.out

#- 136 AdminAddCountryBlacklistV3
# body param: body
echo '{"blacklist": ["wLutItWT", "fMxM23bl", "uuqXvShg"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddCountryBlacklistV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 136 'AdminAddCountryBlacklistV3' test.out

#- 137 AdminGetLoginAllowlistV3
$CLI_EXE \
    --sn iam \
    --op AdminGetLoginAllowlistV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 137 'AdminGetLoginAllowlistV3' test.out

#- 138 AdminUpdateLoginAllowlistV3
# body param: body
echo '{"active": true, "roleIds": ["ZpIujvXk", "GUYw8L8G", "akC7jBPo"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateLoginAllowlistV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 138 'AdminUpdateLoginAllowlistV3' test.out

#- 139 RetrieveAllThirdPartyLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op RetrieveAllThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 139 'RetrieveAllThirdPartyLoginPlatformCredentialV3' test.out

#- 140 RetrieveAllActiveThirdPartyLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op RetrieveAllActiveThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 140 'RetrieveAllActiveThirdPartyLoginPlatformCredentialV3' test.out

#- 141 RetrieveAllSSOLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op RetrieveAllSSOLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --limit '84' \
    --offset '70' \
    > test.out 2>&1
eval_tap $? 141 'RetrieveAllSSOLoginPlatformCredentialV3' test.out

#- 142 RetrieveThirdPartyLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op RetrieveThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'fTerX0xv' \
    > test.out 2>&1
eval_tap $? 142 'RetrieveThirdPartyLoginPlatformCredentialV3' test.out

#- 143 AddThirdPartyLoginPlatformCredentialV3
# body param: body
echo '{"ACSURL": "9hK5ExSs", "AWSCognitoRegion": "u2Tk9TKO", "AWSCognitoUserPool": "2057hiVK", "AllowedClients": ["Qsr96gBj", "Pwj2VgbB", "cJ0YZ8ST"], "AppId": "tDdR8UiO", "AuthorizationEndpoint": "8Z1DWGPU", "ClientId": "3jglpxh7", "EmptyStrFieldList": ["LLPgaEjK", "Kkz6kpZT", "bmhmKuR1"], "EnableServerLicenseValidation": true, "Environment": "ZSeqvmKX", "FederationMetadataURL": "P7ASV9Bc", "GenericOauthFlow": false, "IncludePUID": false, "IsActive": true, "Issuer": "WOuErbi7", "JWKSEndpoint": "g2cnnAdO", "KeyID": "XlgO2ZxI", "LogoURL": "0eGGZz8T", "NetflixCertificates": {"encryptedPrivateKey": "pYPdf9YU", "encryptedPrivateKeyName": "inNkJTko", "publicCertificate": "98SHPJaZ", "publicCertificateName": "VCPhnobv", "rootCertificate": "StNPTdQ3", "rootCertificateName": "suB4WHJn"}, "OrganizationId": "AdT1YWzi", "PlatformName": "oO9XqHT8", "RedirectUri": "tkUoDKno", "RegisteredDomains": [{"affectedClientIDs": ["OHxfaYoL", "ocdqqeef", "iJeCutvJ"], "domain": "z5O3mylu", "namespaces": ["5FsUwTTc", "TYKdUN3S", "SvTAB6lV"], "roleId": "92tT3m2K", "ssoCfg": {"googleKey": {"VCm4o5ec": {}, "Buox3IBa": {}, "T7mwyuGI": {}}, "groupConfigs": [{"assignNamespaces": ["8e0cc8Pj", "OFkruGOD", "9QGD0br0"], "group": "1LyYGRiF", "roleId": "1EIGU0kM"}, {"assignNamespaces": ["765gznNY", "imkAcce2", "qlV205Go"], "group": "F8BQizG3", "roleId": "Scwv4HBj"}, {"assignNamespaces": ["wLiAblIk", "i4hYUtDB", "PN0fHNQK"], "group": "QSQT931l", "roleId": "clRP3lCm"}]}}, {"affectedClientIDs": ["z7W0LNp8", "MgRkdDih", "6QXzt75Z"], "domain": "2ffYNPvJ", "namespaces": ["K3V4WN0R", "fN042WeV", "FK8UfJ2U"], "roleId": "oLRSJpbZ", "ssoCfg": {"googleKey": {"FS9gp0bJ": {}, "kPWt1iuM": {}, "CrrZYEO9": {}}, "groupConfigs": [{"assignNamespaces": ["SxYZPzyI", "e5wHfoT8", "RwvnB9gn"], "group": "QrGxLZnx", "roleId": "BpyJoRBa"}, {"assignNamespaces": ["uOq1IozE", "pujtIxXW", "qTWwcX8b"], "group": "1a8FByHv", "roleId": "DjE50bUN"}, {"assignNamespaces": ["lOVy5EfM", "ruNvs8Og", "t3N5tOnW"], "group": "KPG0z42X", "roleId": "eLHf7ATK"}]}}, {"affectedClientIDs": ["Y0kDlnAK", "TFFkPKXT", "j9DxyHRu"], "domain": "LuWglwLj", "namespaces": ["P5CTZTPI", "gkfs9N70", "Q3M2QLR1"], "roleId": "VXdZuyhx", "ssoCfg": {"googleKey": {"vjMW0vIT": {}, "fbXAlv5O": {}, "MeUFN4ID": {}}, "groupConfigs": [{"assignNamespaces": ["K3cCIiiR", "SdRcz4iQ", "VFtvheOe"], "group": "LrFwpYJo", "roleId": "HlXEVwBU"}, {"assignNamespaces": ["w0AhD2MP", "L5PIo1OC", "RhmGBaR3"], "group": "xQt2FiSo", "roleId": "eW2j27vu"}, {"assignNamespaces": ["ZOFjsmBj", "cHYO0u2Y", "840Ku4j4"], "group": "s6vy6C9U", "roleId": "wQMVK8Co"}]}}], "Secret": "Sa0nERwz", "TeamID": "ev0bgSvb", "TokenAuthenticationType": "NNx968SB", "TokenClaimsMapping": {"nP8Kh6gK": "DYtyGkv6", "HShKvIYm": "Z4rnQ97M", "gFIT7yJB": "vY3wxEDj"}, "TokenEndpoint": "9lkMSkZf", "UserInfoEndpoint": "WJBqLv7R", "UserInfoHTTPMethod": "Ql1w4Yyr", "googleAdminConsoleKey": "yRW31XbJ", "scopes": ["b6G5Hiha", "NeKNtcDn", "YHat51pW"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AddThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'zJP78xPP' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 143 'AddThirdPartyLoginPlatformCredentialV3' test.out

#- 144 DeleteThirdPartyLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op DeleteThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'mwph7ydt' \
    > test.out 2>&1
eval_tap $? 144 'DeleteThirdPartyLoginPlatformCredentialV3' test.out

#- 145 UpdateThirdPartyLoginPlatformCredentialV3
# body param: body
echo '{"ACSURL": "lhmL4KP7", "AWSCognitoRegion": "6rRAhHoQ", "AWSCognitoUserPool": "3SUqm7OQ", "AllowedClients": ["lzDPWTlB", "JAVv1lGL", "sc3wcwUD"], "AppId": "VmAyTbZx", "AuthorizationEndpoint": "uGsl9aqD", "ClientId": "XkHfJq35", "EmptyStrFieldList": ["XGjcJpLz", "33PqIsqF", "p63GB9Fx"], "EnableServerLicenseValidation": true, "Environment": "EEzZq8qK", "FederationMetadataURL": "JhjHz653", "GenericOauthFlow": true, "IncludePUID": false, "IsActive": false, "Issuer": "vtp5NioO", "JWKSEndpoint": "i6LZvSEs", "KeyID": "RxHstmGZ", "LogoURL": "B0mphLQ0", "NetflixCertificates": {"encryptedPrivateKey": "mzrSGABy", "encryptedPrivateKeyName": "KjEAZeYW", "publicCertificate": "ef9iXw0z", "publicCertificateName": "mZHSlbRk", "rootCertificate": "f6azHCVJ", "rootCertificateName": "z7eoueFf"}, "OrganizationId": "MGPWezzu", "PlatformName": "4RKDLvGM", "RedirectUri": "5JPRR69a", "RegisteredDomains": [{"affectedClientIDs": ["Wg1kklw1", "p9tODOYb", "1WSrNu3a"], "domain": "eKtFP8v4", "namespaces": ["Y6MyC03n", "yxryhjGO", "4qDCQMG7"], "roleId": "l5k6H7hM", "ssoCfg": {"googleKey": {"uF1MhF2A": {}, "GabGNa9q": {}, "c3XPoWkG": {}}, "groupConfigs": [{"assignNamespaces": ["OGcdlyMp", "9jVZGzY0", "gOGSPvg1"], "group": "yNE3InCy", "roleId": "PFLQbxqT"}, {"assignNamespaces": ["hXJI77ZA", "UpL2EobA", "SIlFstRs"], "group": "pQPyuw3Z", "roleId": "llnPEG6e"}, {"assignNamespaces": ["Y8IwGWx3", "sHkDnsjJ", "IPzW9E4R"], "group": "VqQQrvHn", "roleId": "4loBYwfi"}]}}, {"affectedClientIDs": ["lOhygsOt", "URc3jt1X", "z0ORuIyv"], "domain": "2cmWeroy", "namespaces": ["7S7yXRkW", "DOubu4pd", "tqD8Av0P"], "roleId": "IzvKTPfE", "ssoCfg": {"googleKey": {"ozUdrWsb": {}, "vZhcj8U9": {}, "NfEIHF1s": {}}, "groupConfigs": [{"assignNamespaces": ["T2h9eGnl", "WxFXzEme", "jbKtzLg1"], "group": "s4yTg4wt", "roleId": "cWUyVyHw"}, {"assignNamespaces": ["iEMqAlZ2", "NnyHvQwB", "5axkavwL"], "group": "VErcFhPn", "roleId": "fEW8vXne"}, {"assignNamespaces": ["J4gC4rTk", "8Haje4zB", "HoHDFcnm"], "group": "O8TYNJOt", "roleId": "6AGvRFgh"}]}}, {"affectedClientIDs": ["fywyVEVW", "BsI3V37Q", "MU4uRDhS"], "domain": "nD5PB3VO", "namespaces": ["ZKyIEtmX", "ZnJiDvfJ", "3ocDEb4u"], "roleId": "TDEjL0Uc", "ssoCfg": {"googleKey": {"KYrC8iUe": {}, "GuF70Xld": {}, "oIEVB0vu": {}}, "groupConfigs": [{"assignNamespaces": ["TLsxtSS8", "IPCs2Cn3", "vLzLURyG"], "group": "q6uxLbf3", "roleId": "bqQsyQtE"}, {"assignNamespaces": ["C2BLOFD3", "zIesHaZE", "HCCFPfvK"], "group": "mgOexdFn", "roleId": "kKA7wqtT"}, {"assignNamespaces": ["Ai3JTt8v", "T6iY9Xho", "xsUIcwTD"], "group": "ZyDVFtn8", "roleId": "JJUvGhB0"}]}}], "Secret": "LPn6w1n1", "TeamID": "64okYkj3", "TokenAuthenticationType": "sUA5iFCm", "TokenClaimsMapping": {"6c2wGDcd": "CYQB7x9K", "To030cEK": "FIBml8ev", "P4sfePOU": "sHcTQL5c"}, "TokenEndpoint": "sIc7eFvD", "UserInfoEndpoint": "LwbszJs3", "UserInfoHTTPMethod": "pwcjK9Wb", "googleAdminConsoleKey": "wBoPq1GA", "scopes": ["jlGrUNNH", "YZnH4nHF", "RR4k8cuP"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op UpdateThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'ClnlzZP2' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 145 'UpdateThirdPartyLoginPlatformCredentialV3' test.out

#- 146 UpdateThirdPartyLoginPlatformDomainV3
# body param: body
echo '{"affectedClientIDs": ["0AgCDX80", "lbbjXzbS", "puJDaFg6"], "assignedNamespaces": ["k5r39eEH", "bY7jX0fe", "UeeG59e1"], "domain": "lZ0gSxr2", "roleId": "lmNKEKbO", "ssoCfg": {"googleKey": {"oy9MxzbA": {}, "sOiCGbCg": {}, "20bRbzqb": {}}, "groupConfigs": [{"assignNamespaces": ["3KFCSIkl", "YPKsdnG0", "nMI1ogGv"], "group": "bTZa7OYZ", "roleId": "WbZIXjxZ"}, {"assignNamespaces": ["8JSVn6A9", "QMJTlWbL", "NouR6HC8"], "group": "d5PPptcy", "roleId": "z0ML2kk6"}, {"assignNamespaces": ["z025ZcuR", "T52ClHok", "9jgFP2yo"], "group": "aH5odlff", "roleId": "0qe6Z5VQ"}]}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op UpdateThirdPartyLoginPlatformDomainV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'pj8LJhqI' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 146 'UpdateThirdPartyLoginPlatformDomainV3' test.out

#- 147 DeleteThirdPartyLoginPlatformDomainV3
# body param: body
echo '{"domain": "VpNKmsnF", "ssoGroups": ["yDma65X3", "IVH3xgo9", "g8eGNEpt"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op DeleteThirdPartyLoginPlatformDomainV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'pX2SmMJH' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 147 'DeleteThirdPartyLoginPlatformDomainV3' test.out

#- 148 PartialUpdateThirdPartyLoginPlatformDomainV3
# body param: body
echo '{"affectedClientIDs": ["L2X9EmKm", "z6hk4fsn", "zikr51wU"], "assignedNamespaces": ["6O1UuY2w", "GlW6jFeJ", "n9nr0pEX"], "domain": "NANjR8E2", "roleId": "XVtRdNk2", "ssoCfg": {"googleKey": {"mjhMDrSz": {}, "j1w4AL71": {}, "48swRX84": {}}, "groupConfigs": [{"assignNamespaces": ["BGhVzfXu", "4b2K6lKO", "GqqBJaeE"], "group": "acLAF2q8", "roleId": "TB7Ri1py"}, {"assignNamespaces": ["1L1DYq1i", "dJ0TwK2g", "TKU2oyS6"], "group": "PwrTsylj", "roleId": "DZOOCRQp"}, {"assignNamespaces": ["fMgcYRHI", "JKz4zQKZ", "owdPjDqJ"], "group": "z1Z0WvQQ", "roleId": "zxE4heah"}]}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PartialUpdateThirdPartyLoginPlatformDomainV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'N2nPATyj' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 148 'PartialUpdateThirdPartyLoginPlatformDomainV3' test.out

#- 149 RetrieveSSOLoginPlatformCredential
$CLI_EXE \
    --sn iam \
    --op RetrieveSSOLoginPlatformCredential \
    --namespace $AB_NAMESPACE \
    --platformId '5AFy1tKU' \
    > test.out 2>&1
eval_tap $? 149 'RetrieveSSOLoginPlatformCredential' test.out

#- 150 AddSSOLoginPlatformCredential
# body param: body
echo '{"acsUrl": "2cPwYWNY", "apiKey": "wA08PHsZ", "appId": "QLqzD8ww", "federationMetadataUrl": "dxjTADLY", "isActive": true, "redirectUri": "Q2yLMMaR", "secret": "vues8cCr", "ssoUrl": "BzpJpljY"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AddSSOLoginPlatformCredential \
    --namespace $AB_NAMESPACE \
    --platformId 'T2AdBHxx' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 150 'AddSSOLoginPlatformCredential' test.out

#- 151 DeleteSSOLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op DeleteSSOLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'dJu89H3k' \
    > test.out 2>&1
eval_tap $? 151 'DeleteSSOLoginPlatformCredentialV3' test.out

#- 152 UpdateSSOPlatformCredential
# body param: body
echo '{"acsUrl": "OMLxRx4k", "apiKey": "TYgatYCj", "appId": "50hcEYrv", "federationMetadataUrl": "ZIhcHWWf", "isActive": false, "redirectUri": "e32VpeYm", "secret": "dyo5yMpc", "ssoUrl": "lGmWbMRL"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op UpdateSSOPlatformCredential \
    --namespace $AB_NAMESPACE \
    --platformId '2MbA8EPk' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 152 'UpdateSSOPlatformCredential' test.out

#- 153 AdminListUserIDByPlatformUserIDsV3
# body param: body
echo '{"platformUserIds": ["PIxyLUD4", "BnDsYXue", "GM6a4KvY"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminListUserIDByPlatformUserIDsV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'S9trMrhD' \
    --rawPID 'false' \
    --rawPUID 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 153 'AdminListUserIDByPlatformUserIDsV3' test.out

#- 154 AdminGetUserByPlatformUserIDV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserByPlatformUserIDV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'zazgAj6i' \
    --platformUserId 'CBYr5Uhj' \
    > test.out 2>&1
eval_tap $? 154 'AdminGetUserByPlatformUserIDV3' test.out

#- 155 AdminGetProfileUpdateStrategyV3
$CLI_EXE \
    --sn iam \
    --op AdminGetProfileUpdateStrategyV3 \
    --namespace $AB_NAMESPACE \
    --field 'country' \
    > test.out 2>&1
eval_tap $? 155 'AdminGetProfileUpdateStrategyV3' test.out

#- 156 AdminUpdateProfileUpdateStrategyV3
# body param: body
echo '{"config": {"minimumAllowedInterval": 75}, "type": "QsYuhVo9"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateProfileUpdateStrategyV3 \
    --namespace $AB_NAMESPACE \
    --field 'display_name' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 156 'AdminUpdateProfileUpdateStrategyV3' test.out

#- 157 AdminGetRoleOverrideConfigV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleOverrideConfigV3 \
    --namespace $AB_NAMESPACE \
    --identity 'USER' \
    > test.out 2>&1
eval_tap $? 157 'AdminGetRoleOverrideConfigV3' test.out

#- 158 AdminUpdateRoleOverrideConfigV3
# body param: body
echo '{"additions": [{"actions": [76, 100, 29], "resource": "GAGpSn5a"}, {"actions": [31, 71, 80], "resource": "zCNFndyW"}, {"actions": [27, 52, 100], "resource": "PK31mxDs"}], "exclusions": [{"actions": [57, 26, 67], "resource": "wWO4qade"}, {"actions": [11, 20, 80], "resource": "lqniRVhJ"}, {"actions": [63, 73, 22], "resource": "CvReEtU0"}], "overrides": [{"actions": [67, 87, 53], "resource": "8N1PLgiQ"}, {"actions": [87, 74, 85], "resource": "J1eX6XQU"}, {"actions": [49, 33, 80], "resource": "J2MfjsWn"}], "replacements": [{"replacement": {"actions": [72, 75, 13], "resource": "IPw27GHN"}, "target": "y8p1JzOZ"}, {"replacement": {"actions": [19, 5, 59], "resource": "Nj5wbwvX"}, "target": "gaShoiHo"}, {"replacement": {"actions": [94, 74, 22], "resource": "6AHhq0Mi"}, "target": "PSjlp9MX"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateRoleOverrideConfigV3 \
    --namespace $AB_NAMESPACE \
    --identity 'GAME_ADMIN' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 158 'AdminUpdateRoleOverrideConfigV3' test.out

#- 159 AdminGetRoleSourceV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleSourceV3 \
    --namespace $AB_NAMESPACE \
    --identity 'USER' \
    > test.out 2>&1
eval_tap $? 159 'AdminGetRoleSourceV3' test.out

#- 160 AdminChangeRoleOverrideConfigStatusV3
# body param: body
echo '{"active": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminChangeRoleOverrideConfigStatusV3 \
    --namespace $AB_NAMESPACE \
    --identity 'USER' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 160 'AdminChangeRoleOverrideConfigStatusV3' test.out

#- 161 AdminGetRoleNamespacePermissionV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleNamespacePermissionV3 \
    --namespace $AB_NAMESPACE \
    --roleId 'gUoEVx9R' \
    > test.out 2>&1
eval_tap $? 161 'AdminGetRoleNamespacePermissionV3' test.out

#- 162 GetAdminUsersByRoleIdV3
$CLI_EXE \
    --sn iam \
    --op GetAdminUsersByRoleIdV3 \
    --namespace $AB_NAMESPACE \
    --roleId 'EZGfwvh0' \
    --after '15' \
    --before '56' \
    --limit '66' \
    > test.out 2>&1
eval_tap $? 162 'GetAdminUsersByRoleIdV3' test.out

#- 163 AdminQueryTagV3
$CLI_EXE \
    --sn iam \
    --op AdminQueryTagV3 \
    --namespace $AB_NAMESPACE \
    --limit '68' \
    --offset '48' \
    --tagName 'yqLVVbBC' \
    > test.out 2>&1
eval_tap $? 163 'AdminQueryTagV3' test.out

#- 164 AdminCreateTagV3
# body param: body
echo '{"tagName": "Xurk2Tah"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminCreateTagV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 164 'AdminCreateTagV3' test.out

#- 165 AdminUpdateTagV3
# body param: body
echo '{"tagName": "VOV4QCjs"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateTagV3 \
    --namespace $AB_NAMESPACE \
    --tagId '8wmiscj5' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 165 'AdminUpdateTagV3' test.out

#- 166 AdminDeleteTagV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteTagV3 \
    --namespace $AB_NAMESPACE \
    --tagId 'YP7h12yH' \
    > test.out 2>&1
eval_tap $? 166 'AdminDeleteTagV3' test.out

#- 167 AdminGetUserByEmailAddressV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserByEmailAddressV3 \
    --namespace $AB_NAMESPACE \
    --emailAddress 'JCDwxLtQ' \
    > test.out 2>&1
eval_tap $? 167 'AdminGetUserByEmailAddressV3' test.out

#- 168 AdminBulkUpdateUsersV3
# body param: body
echo '{"updateRequest": {"skipLoginQueue": true}, "userIds": ["MJXJ4hCm", "OOaq33tw", "a91g21z5"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBulkUpdateUsersV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 168 'AdminBulkUpdateUsersV3' test.out

#- 169 AdminGetBulkUserBanV3
# body param: body
echo '{"bulkUserId": ["MCFvmVyR", "yBNqGgZV", "upGYGQZ4"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminGetBulkUserBanV3 \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --banType 'jTZJ7hsq' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 169 'AdminGetBulkUserBanV3' test.out

#- 170 AdminListUserIDByUserIDsV3
# body param: body
echo '{"userIds": ["aOoAx8dR", "DxitYp5S", "SsUFip8H"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminListUserIDByUserIDsV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 170 'AdminListUserIDByUserIDsV3' test.out

#- 171 AdminBulkGetUsersPlatform
# body param: body
echo '{"userIds": ["LOJ3k1GH", "pRbgRA5t", "T9iWchxX"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBulkGetUsersPlatform \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 171 'AdminBulkGetUsersPlatform' test.out

#- 172 AdminInviteUserV3
# body param: body
echo '{"emailAddresses": ["J6tHjaYg", "GT3pu0U6", "IkkoMZsY"], "isAdmin": true, "languageTag": "xPO9bDQ7", "namespace": "DkCRCfAn", "roles": ["xaJ6j3bY", "F6ewP3VT", "hZ5drjdg"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminInviteUserV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 172 'AdminInviteUserV3' test.out

#- 173 AdminQueryThirdPlatformLinkHistoryV3
$CLI_EXE \
    --sn iam \
    --op AdminQueryThirdPlatformLinkHistoryV3 \
    --namespace $AB_NAMESPACE \
    --limit '32' \
    --offset '55' \
    --platformUserId 'DH2EqUBy' \
    --platformId '1C2QbptC' \
    > test.out 2>&1
eval_tap $? 173 'AdminQueryThirdPlatformLinkHistoryV3' test.out

#- 174 AdminListUsersV3
$CLI_EXE \
    --sn iam \
    --op AdminListUsersV3 \
    --namespace $AB_NAMESPACE \
    --limit '32' \
    --offset '34' \
    > test.out 2>&1
eval_tap $? 174 'AdminListUsersV3' test.out

#- 175 AdminSearchUserV3
$CLI_EXE \
    --sn iam \
    --op AdminSearchUserV3 \
    --namespace $AB_NAMESPACE \
    --by '8ypLWOwF' \
    --endDate '5WFZERmM' \
    --includeTotal 'false' \
    --limit '33' \
    --offset '65' \
    --platformBy 'XnYeuUR2' \
    --platformId 'cdzTYAOD' \
    --query 'E3qoPacZ' \
    --roleIds 'BvqPEZ0A' \
    --skipLoginQueue 'false' \
    --startDate 'hfSGWlUV' \
    --testAccount 'false' \
    > test.out 2>&1
eval_tap $? 175 'AdminSearchUserV3' test.out

#- 176 AdminGetBulkUserByEmailAddressV3
# body param: body
echo '{"listEmailAddressRequest": ["hEVytq7N", "ebogGStr", "5YiNNwaq"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminGetBulkUserByEmailAddressV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 176 'AdminGetBulkUserByEmailAddressV3' test.out

#- 177 AdminGetUserByUserIdV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserByUserIdV3 \
    --namespace $AB_NAMESPACE \
    --userId 'qWVOJcZ1' \
    > test.out 2>&1
eval_tap $? 177 'AdminGetUserByUserIdV3' test.out

#- 178 AdminUpdateUserV3
# body param: body
echo '{"avatarUrl": "lotNkXzD", "country": "33FrGZsW", "dateOfBirth": "GPvYrlk2", "displayName": "3PtmaQp2", "languageTag": "lzcpJdSg", "skipLoginQueue": true, "tags": ["b3gh2pCR", "AnEPD5DO", "5qnrD5Xg"], "uniqueDisplayName": "MW0srJXB", "userName": "4PeQ8Kk9"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserV3 \
    --namespace $AB_NAMESPACE \
    --userId '8vuSf951' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 178 'AdminUpdateUserV3' test.out

#- 179 AdminGetUserBanV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserBanV3 \
    --namespace $AB_NAMESPACE \
    --userId 'EEFhGlKI' \
    --activeOnly 'false' \
    --after '4wrHbzRu' \
    --before 'mVkDxaBE' \
    --limit '10' \
    > test.out 2>&1
eval_tap $? 179 'AdminGetUserBanV3' test.out

#- 180 AdminBanUserV3
# body param: body
echo '{"ban": "No4PimKn", "comment": "7oj2ePFa", "endDate": "STTPoypl", "reason": "zZikbi8n", "skipNotif": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBanUserV3 \
    --namespace $AB_NAMESPACE \
    --userId 'KbCiRQJH' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 180 'AdminBanUserV3' test.out

#- 181 AdminGetUserBanSummaryV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserBanSummaryV3 \
    --namespace $AB_NAMESPACE \
    --userId 'Jg9GRfoW' \
    > test.out 2>&1
eval_tap $? 181 'AdminGetUserBanSummaryV3' test.out

#- 182 AdminUpdateUserBanV3
# body param: body
echo '{"enabled": true, "skipNotif": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserBanV3 \
    --banId '2ehJZ7iO' \
    --namespace $AB_NAMESPACE \
    --userId 'QPfGRO4e' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 182 'AdminUpdateUserBanV3' test.out

#- 183 AdminSendVerificationCodeV3
# body param: body
echo '{"context": "WcyhfGJG", "emailAddress": "nsit5grg", "languageTag": "j94PXCnV", "upgradeToken": "idpISj95"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminSendVerificationCodeV3 \
    --namespace $AB_NAMESPACE \
    --userId 'uZ3tpFwu' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 183 'AdminSendVerificationCodeV3' test.out

#- 184 AdminVerifyAccountV3
# body param: body
echo '{"Code": "RixYsI2q", "ContactType": "mC5M6H2H", "LanguageTag": "LVaHLFAf", "validateOnly": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminVerifyAccountV3 \
    --namespace $AB_NAMESPACE \
    --userId 'R68btH8K' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 184 'AdminVerifyAccountV3' test.out

#- 185 GetUserVerificationCode
$CLI_EXE \
    --sn iam \
    --op GetUserVerificationCode \
    --namespace $AB_NAMESPACE \
    --userId '4HukuSXd' \
    > test.out 2>&1
eval_tap $? 185 'GetUserVerificationCode' test.out

#- 186 AdminGetUserDeletionStatusV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserDeletionStatusV3 \
    --namespace $AB_NAMESPACE \
    --userId 'AozS9PPe' \
    > test.out 2>&1
eval_tap $? 186 'AdminGetUserDeletionStatusV3' test.out

#- 187 AdminUpdateUserDeletionStatusV3
# body param: body
echo '{"deletionDate": 21, "enabled": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserDeletionStatusV3 \
    --namespace $AB_NAMESPACE \
    --userId 'qp5UlNI5' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 187 'AdminUpdateUserDeletionStatusV3' test.out

#- 188 AdminListUserAllPlatformAccountsDistinctV3
$CLI_EXE \
    --sn iam \
    --op AdminListUserAllPlatformAccountsDistinctV3 \
    --namespace $AB_NAMESPACE \
    --userId 'ThpCwncw' \
    > test.out 2>&1
eval_tap $? 188 'AdminListUserAllPlatformAccountsDistinctV3' test.out

#- 189 AdminUpgradeHeadlessAccountV3
# body param: body
echo '{"code": "z0k1xlth", "country": "CRvxx8Ta", "dateOfBirth": "2ok9QHli", "displayName": "kul96HM0", "emailAddress": "Dl9RzwOT", "password": "w7FGWC0a", "uniqueDisplayName": "h4UgNXBQ", "validateOnly": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpgradeHeadlessAccountV3 \
    --namespace $AB_NAMESPACE \
    --userId 'ycDeJJe0' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 189 'AdminUpgradeHeadlessAccountV3' test.out

#- 190 AdminDeleteUserInformationV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserInformationV3 \
    --namespace $AB_NAMESPACE \
    --userId '3basrBsA' \
    > test.out 2>&1
eval_tap $? 190 'AdminDeleteUserInformationV3' test.out

#- 191 AdminGetUserLoginHistoriesV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserLoginHistoriesV3 \
    --namespace $AB_NAMESPACE \
    --userId 'PhEPBDD7' \
    --after '0.7129558924668631' \
    --before '0.9342696568157841' \
    --limit '69' \
    > test.out 2>&1
eval_tap $? 191 'AdminGetUserLoginHistoriesV3' test.out

#- 192 AdminResetPasswordV3
# body param: body
echo '{"languageTag": "fi8vJDN7", "mfaToken": "hP6CrLpG", "newPassword": "oB6fJ45C", "oldPassword": "E3aChPQ2"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminResetPasswordV3 \
    --namespace $AB_NAMESPACE \
    --userId '0PrPUXKr' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 192 'AdminResetPasswordV3' test.out

#- 193 AdminUpdateUserPermissionV3
# body param: body
echo '{"Permissions": [{"Action": 2, "Resource": "rqpFdUxc", "SchedAction": 86, "SchedCron": "n6lrOdGv", "SchedRange": ["Hpjpx8Tb", "Vbedz2ES", "nQUoycbL"]}, {"Action": 55, "Resource": "aDDLo1fe", "SchedAction": 71, "SchedCron": "mqHDkgc1", "SchedRange": ["bg51OiRZ", "SlXCt5Vx", "faPo0HqM"]}, {"Action": 78, "Resource": "8kaTCeFN", "SchedAction": 70, "SchedCron": "tPCkfvj8", "SchedRange": ["KInXjBtF", "plt4SubV", "BxsryMW2"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserPermissionV3 \
    --namespace $AB_NAMESPACE \
    --userId 'BVTwQzEo' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 193 'AdminUpdateUserPermissionV3' test.out

#- 194 AdminAddUserPermissionsV3
# body param: body
echo '{"Permissions": [{"Action": 54, "Resource": "Y2hwQ2Ky", "SchedAction": 7, "SchedCron": "0oL9MXj2", "SchedRange": ["ELgxK6mj", "rD9xsorE", "YgN93oHP"]}, {"Action": 97, "Resource": "w8Bb1XIV", "SchedAction": 61, "SchedCron": "bzfyHusn", "SchedRange": ["B04l8DS9", "QKfop4kw", "l2bJHMTs"]}, {"Action": 28, "Resource": "e5eOC2mT", "SchedAction": 73, "SchedCron": "oFuZwmv6", "SchedRange": ["bnn04qcz", "AJT13GmL", "fKWcPEyZ"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddUserPermissionsV3 \
    --namespace $AB_NAMESPACE \
    --userId 'JVdCOMfE' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 194 'AdminAddUserPermissionsV3' test.out

#- 195 AdminDeleteUserPermissionBulkV3
# body param: body
echo '[{"Action": 1, "Resource": "mWMkvjoY"}, {"Action": 79, "Resource": "8W46nwAo"}, {"Action": 23, "Resource": "l4CFW75b"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserPermissionBulkV3 \
    --namespace $AB_NAMESPACE \
    --userId 'T6TYZt0m' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 195 'AdminDeleteUserPermissionBulkV3' test.out

#- 196 AdminDeleteUserPermissionV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserPermissionV3 \
    --action '74' \
    --namespace $AB_NAMESPACE \
    --resource '5xHnGr1O' \
    --userId 'ak6kgjdH' \
    > test.out 2>&1
eval_tap $? 196 'AdminDeleteUserPermissionV3' test.out

#- 197 AdminGetUserPlatformAccountsV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserPlatformAccountsV3 \
    --namespace $AB_NAMESPACE \
    --userId 'bN1xymYT' \
    --after 'r0BJ2q4k' \
    --before 'NElu9hhF' \
    --limit '95' \
    --platformId '4gIjIzVN' \
    --targetNamespace 'SLP7fi5e' \
    > test.out 2>&1
eval_tap $? 197 'AdminGetUserPlatformAccountsV3' test.out

#- 198 AdminListAllDistinctPlatformAccountsV3
$CLI_EXE \
    --sn iam \
    --op AdminListAllDistinctPlatformAccountsV3 \
    --namespace $AB_NAMESPACE \
    --userId 'jiHdULGY' \
    --status 'f8hYtAK5' \
    > test.out 2>&1
eval_tap $? 198 'AdminListAllDistinctPlatformAccountsV3' test.out

#- 199 AdminGetListJusticePlatformAccounts
$CLI_EXE \
    --sn iam \
    --op AdminGetListJusticePlatformAccounts \
    --namespace $AB_NAMESPACE \
    --userId 'wIQOypGm' \
    > test.out 2>&1
eval_tap $? 199 'AdminGetListJusticePlatformAccounts' test.out

#- 200 AdminGetUserMapping
$CLI_EXE \
    --sn iam \
    --op AdminGetUserMapping \
    --namespace $AB_NAMESPACE \
    --targetNamespace 'APajGWt8' \
    --userId 'ospFQkFY' \
    > test.out 2>&1
eval_tap $? 200 'AdminGetUserMapping' test.out

#- 201 AdminCreateJusticeUser
$CLI_EXE \
    --sn iam \
    --op AdminCreateJusticeUser \
    --namespace $AB_NAMESPACE \
    --targetNamespace '9aXgQhKN' \
    --userId '1OS9H6z0' \
    > test.out 2>&1
eval_tap $? 201 'AdminCreateJusticeUser' test.out

#- 202 AdminLinkPlatformAccount
# body param: body
echo '{"platformId": "H06SuV8U", "platformUserId": "Qd2qncOH"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminLinkPlatformAccount \
    --namespace $AB_NAMESPACE \
    --userId '4vagpeRo' \
    --skipConflict 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 202 'AdminLinkPlatformAccount' test.out

#- 203 AdminGetUserLinkHistoriesV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserLinkHistoriesV3 \
    --namespace $AB_NAMESPACE \
    --userId 'DGFb82lg' \
    --platformId 'nmgE1YMW' \
    > test.out 2>&1
eval_tap $? 203 'AdminGetUserLinkHistoriesV3' test.out

#- 204 AdminPlatformUnlinkV3
eval_tap 0 204 'AdminPlatformUnlinkV3 # SKIP deprecated' test.out

#- 205 AdminPlatformUnlinkAllV3
$CLI_EXE \
    --sn iam \
    --op AdminPlatformUnlinkAllV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'ydo7x4qO' \
    --userId 'PzhjPJIF' \
    > test.out 2>&1
eval_tap $? 205 'AdminPlatformUnlinkAllV3' test.out

#- 206 AdminPlatformLinkV3
$CLI_EXE \
    --sn iam \
    --op AdminPlatformLinkV3 \
    --namespace $AB_NAMESPACE \
    --platformId '2j8Nv8eD' \
    --userId 'x1lfYZzk' \
    --ticket 'iKldZEgs' \
    > test.out 2>&1
eval_tap $? 206 'AdminPlatformLinkV3' test.out

#- 207 AdminDeleteUserLinkingHistoryByPlatformIDV3
eval_tap 0 207 'AdminDeleteUserLinkingHistoryByPlatformIDV3 # SKIP deprecated' test.out

#- 208 AdminDeleteUserLinkingRestrictionByPlatformIDV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserLinkingRestrictionByPlatformIDV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'Ajsi8lCy' \
    --userId 'cLXP5IFi' \
    > test.out 2>&1
eval_tap $? 208 'AdminDeleteUserLinkingRestrictionByPlatformIDV3' test.out

#- 209 AdminGetThirdPartyPlatformTokenLinkStatusV3
$CLI_EXE \
    --sn iam \
    --op AdminGetThirdPartyPlatformTokenLinkStatusV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'G9cCbSee' \
    --userId 'YPAcOyR7' \
    --platformToken 'VDYHnYyI' \
    > test.out 2>&1
eval_tap $? 209 'AdminGetThirdPartyPlatformTokenLinkStatusV3' test.out

#- 210 AdminGetUserSinglePlatformAccount
$CLI_EXE \
    --sn iam \
    --op AdminGetUserSinglePlatformAccount \
    --namespace $AB_NAMESPACE \
    --platformId '4tXiBVJF' \
    --userId '4nLPqTBB' \
    --crossNamespace 'false' \
    > test.out 2>&1
eval_tap $? 210 'AdminGetUserSinglePlatformAccount' test.out

#- 211 AdminDeleteUserRolesV3
# body param: body
echo '["to0i7yXJ", "jOnfvB7q", "wI4Sk8VD"]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserRolesV3 \
    --namespace $AB_NAMESPACE \
    --userId 'Lf8m2ziq' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 211 'AdminDeleteUserRolesV3' test.out

#- 212 AdminSaveUserRoleV3
# body param: body
echo '[{"namespace": "M1q961oB", "roleId": "cVmM6Wrq"}, {"namespace": "28VBPb21", "roleId": "TX6KLF54"}, {"namespace": "Vy5Kmrmu", "roleId": "FiCN3FZ2"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminSaveUserRoleV3 \
    --namespace $AB_NAMESPACE \
    --userId 'osOk5LWy' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 212 'AdminSaveUserRoleV3' test.out

#- 213 AdminAddUserRoleV3
$CLI_EXE \
    --sn iam \
    --op AdminAddUserRoleV3 \
    --namespace $AB_NAMESPACE \
    --roleId 'LEdJraom' \
    --userId 'Dnna4KA8' \
    > test.out 2>&1
eval_tap $? 213 'AdminAddUserRoleV3' test.out

#- 214 AdminDeleteUserRoleV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserRoleV3 \
    --namespace $AB_NAMESPACE \
    --roleId 'ySN9mTrt' \
    --userId 'uxlHqYlS' \
    > test.out 2>&1
eval_tap $? 214 'AdminDeleteUserRoleV3' test.out

#- 215 AdminGetUserStateByUserIdV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserStateByUserIdV3 \
    --namespace $AB_NAMESPACE \
    --userId 'ISFtYdOV' \
    > test.out 2>&1
eval_tap $? 215 'AdminGetUserStateByUserIdV3' test.out

#- 216 AdminUpdateUserStatusV3
# body param: body
echo '{"enabled": false, "reason": "vbA2arL8"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserStatusV3 \
    --namespace $AB_NAMESPACE \
    --userId 'hmMtUB1y' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 216 'AdminUpdateUserStatusV3' test.out

#- 217 AdminTrustlyUpdateUserIdentity
# body param: body
echo '{"emailAddress": "LEKia4MF", "password": "O1EHEEiq"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminTrustlyUpdateUserIdentity \
    --namespace $AB_NAMESPACE \
    --userId 'FfTeEESa' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 217 'AdminTrustlyUpdateUserIdentity' test.out

#- 218 AdminVerifyUserWithoutVerificationCodeV3
$CLI_EXE \
    --sn iam \
    --op AdminVerifyUserWithoutVerificationCodeV3 \
    --namespace $AB_NAMESPACE \
    --userId 'DF8lh3zz' \
    > test.out 2>&1
eval_tap $? 218 'AdminVerifyUserWithoutVerificationCodeV3' test.out

#- 219 AdminUpdateClientSecretV3
# body param: body
echo '{"newSecret": "6U2vAWP8"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateClientSecretV3 \
    --clientId 'YQnrbsEZ' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 219 'AdminUpdateClientSecretV3' test.out

#- 220 AdminCheckThirdPartyLoginPlatformAvailabilityV3
$CLI_EXE \
    --sn iam \
    --op AdminCheckThirdPartyLoginPlatformAvailabilityV3 \
    --platformId 'AqJIsteq' \
    > test.out 2>&1
eval_tap $? 220 'AdminCheckThirdPartyLoginPlatformAvailabilityV3' test.out

#- 221 AdminGetRolesV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRolesV3 \
    --after 'zHEdXjJL' \
    --before 'k6QwFdRQ' \
    --isWildcard 'false' \
    --limit '50' \
    > test.out 2>&1
eval_tap $? 221 'AdminGetRolesV3' test.out

#- 222 AdminCreateRoleV3
# body param: body
echo '{"adminRole": true, "deletable": false, "isWildcard": true, "managers": [{"displayName": "pN69nrD5", "namespace": "O6FMpcF3", "userId": "27CX2I45"}, {"displayName": "ranLLWXd", "namespace": "O9y1dK4J", "userId": "VrHQOdDO"}, {"displayName": "kdvAoYJa", "namespace": "o9XNBwZV", "userId": "bUMQC0ik"}], "members": [{"displayName": "iEDQcWTa", "namespace": "KaeIhFJt", "userId": "kgSeAEtO"}, {"displayName": "yac4H7Je", "namespace": "MCKMWXCW", "userId": "V1ASj5vH"}, {"displayName": "8eEi39Df", "namespace": "7514Rcas", "userId": "DiGun2pT"}], "permissions": [{"action": 86, "resource": "XlVMvD7L", "schedAction": 72, "schedCron": "QP2gO4yW", "schedRange": ["Zulangux", "dsKlhYSL", "6DfPy2cQ"]}, {"action": 89, "resource": "C9P63fnK", "schedAction": 5, "schedCron": "LJKkaGLn", "schedRange": ["stx2mjRX", "1LU5yaqW", "yvevp3m2"]}, {"action": 54, "resource": "u1StLach", "schedAction": 67, "schedCron": "UFksV3Kl", "schedRange": ["S3QBnZel", "wSe6gjwS", "6MaRTgBU"]}], "roleName": "zFbjoimv"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminCreateRoleV3 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 222 'AdminCreateRoleV3' test.out

#- 223 AdminGetRoleV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleV3 \
    --roleId 'Mx5Ulg5Y' \
    > test.out 2>&1
eval_tap $? 223 'AdminGetRoleV3' test.out

#- 224 AdminDeleteRoleV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteRoleV3 \
    --roleId 'YfWws5AN' \
    > test.out 2>&1
eval_tap $? 224 'AdminDeleteRoleV3' test.out

#- 225 AdminUpdateRoleV3
# body param: body
echo '{"deletable": false, "isWildcard": false, "roleName": "bB8DVHMw"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateRoleV3 \
    --roleId 'JPRhNRRp' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 225 'AdminUpdateRoleV3' test.out

#- 226 AdminGetRoleAdminStatusV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleAdminStatusV3 \
    --roleId 'OIzAmLfd' \
    > test.out 2>&1
eval_tap $? 226 'AdminGetRoleAdminStatusV3' test.out

#- 227 AdminUpdateAdminRoleStatusV3
$CLI_EXE \
    --sn iam \
    --op AdminUpdateAdminRoleStatusV3 \
    --roleId 'm0xU5Oit' \
    > test.out 2>&1
eval_tap $? 227 'AdminUpdateAdminRoleStatusV3' test.out

#- 228 AdminRemoveRoleAdminV3
$CLI_EXE \
    --sn iam \
    --op AdminRemoveRoleAdminV3 \
    --roleId 'AqeOoSBt' \
    > test.out 2>&1
eval_tap $? 228 'AdminRemoveRoleAdminV3' test.out

#- 229 AdminGetRoleManagersV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleManagersV3 \
    --roleId 'RMraGdc8' \
    --after 'nWsooQFN' \
    --before 'MWy8gAGk' \
    --limit '20' \
    > test.out 2>&1
eval_tap $? 229 'AdminGetRoleManagersV3' test.out

#- 230 AdminAddRoleManagersV3
# body param: body
echo '{"managers": [{"displayName": "ME7tKUQm", "namespace": "51jF35hH", "userId": "F63W2qfp"}, {"displayName": "h1WNqwpp", "namespace": "cRMyxz33", "userId": "qMM0xLdD"}, {"displayName": "djO0wbgb", "namespace": "revSzokO", "userId": "VpGk7Zqb"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddRoleManagersV3 \
    --roleId 'orB8XJQR' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 230 'AdminAddRoleManagersV3' test.out

#- 231 AdminRemoveRoleManagersV3
# body param: body
echo '{"managers": [{"displayName": "qVX4H7hv", "namespace": "uHaN9ZEG", "userId": "HC7TbzsZ"}, {"displayName": "wr7aSvLr", "namespace": "feU6QDp2", "userId": "mXBgKuvJ"}, {"displayName": "k8nxi4c4", "namespace": "0WT0U3sY", "userId": "s1joF57b"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminRemoveRoleManagersV3 \
    --roleId 'fCmoXCQX' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 231 'AdminRemoveRoleManagersV3' test.out

#- 232 AdminGetRoleMembersV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleMembersV3 \
    --roleId 'rQOYDs7j' \
    --after 'A0BraMP5' \
    --before 'PIPuWCbI' \
    --limit '1' \
    > test.out 2>&1
eval_tap $? 232 'AdminGetRoleMembersV3' test.out

#- 233 AdminAddRoleMembersV3
# body param: body
echo '{"members": [{"displayName": "7t8TIbLB", "namespace": "jT5Vn6TS", "userId": "19hrMexx"}, {"displayName": "Zgq29McK", "namespace": "oA3o8NET", "userId": "YrUEpGGI"}, {"displayName": "72fUnT1P", "namespace": "o5xeWjfB", "userId": "NzqPlS5P"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddRoleMembersV3 \
    --roleId 'X1r8mayU' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 233 'AdminAddRoleMembersV3' test.out

#- 234 AdminRemoveRoleMembersV3
eval_tap 0 234 'AdminRemoveRoleMembersV3 # SKIP deprecated' test.out

#- 235 AdminUpdateRolePermissionsV3
# body param: body
echo '{"permissions": [{"action": 61, "resource": "UF0zrD1p", "schedAction": 86, "schedCron": "F5CBhwop", "schedRange": ["my0vwodH", "66HCCrVG", "gE9XEusK"]}, {"action": 70, "resource": "ksqTXNdV", "schedAction": 54, "schedCron": "2VjRzab5", "schedRange": ["giXjmDEZ", "qcCdwXlM", "ciEhgrvx"]}, {"action": 1, "resource": "bRi0Ec2x", "schedAction": 14, "schedCron": "EVyF8G48", "schedRange": ["Zf7Ffze3", "3bYbYzPQ", "xQVPGdnP"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateRolePermissionsV3 \
    --roleId 'a2vXKSON' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 235 'AdminUpdateRolePermissionsV3' test.out

#- 236 AdminAddRolePermissionsV3
# body param: body
echo '{"permissions": [{"action": 55, "resource": "hY63o5k7", "schedAction": 1, "schedCron": "DPaotW0E", "schedRange": ["sI5Ky7OO", "fie1c3Sv", "jBjKHyjF"]}, {"action": 64, "resource": "y84rzSnP", "schedAction": 29, "schedCron": "M4tmxxsY", "schedRange": ["ieOTrsU9", "FK800KeA", "Zw3oKGVO"]}, {"action": 68, "resource": "4DFWhEe8", "schedAction": 67, "schedCron": "770g8rxV", "schedRange": ["3OQ1SY5M", "2sdunYyT", "aEeiINVK"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddRolePermissionsV3 \
    --roleId 'srTlo66X' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 236 'AdminAddRolePermissionsV3' test.out

#- 237 AdminDeleteRolePermissionsV3
# body param: body
echo '["PuZzOf8r", "fI0dV2XE", "89uCwMjx"]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDeleteRolePermissionsV3 \
    --roleId 'XmEgpk3M' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 237 'AdminDeleteRolePermissionsV3' test.out

#- 238 AdminDeleteRolePermissionV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteRolePermissionV3 \
    --action '60' \
    --resource 'zwUoFac8' \
    --roleId 'PiFd6VaQ' \
    > test.out 2>&1
eval_tap $? 238 'AdminDeleteRolePermissionV3' test.out

#- 239 AdminGetMyUserV3
$CLI_EXE \
    --sn iam \
    --op AdminGetMyUserV3 \
    > test.out 2>&1
eval_tap $? 239 'AdminGetMyUserV3' test.out

#- 240 UserAuthenticationV3
$CLI_EXE \
    --sn iam \
    --op UserAuthenticationV3 \
    --client_id 'oYUJkeE8' \
    --extend_exp 'false' \
    --redirect_uri 'dCoTH56i' \
    --password 'JCtnmvcd' \
    --request_id 'PB880Y98' \
    --user_name 'reCaVKj8' \
    > test.out 2>&1
eval_tap $? 240 'UserAuthenticationV3' test.out

#- 241 AuthenticationWithPlatformLinkV3
$CLI_EXE \
    --sn iam \
    --op AuthenticationWithPlatformLinkV3 \
    --extend_exp 'false' \
    --client_id 'KWeFDjFQ' \
    --linkingToken 'eIMdQBk0' \
    --password 'FcKGGkct' \
    --username 'nXbfq3Ls' \
    > test.out 2>&1
eval_tap $? 241 'AuthenticationWithPlatformLinkV3' test.out

#- 242 AuthenticateAndLinkForwardV3
$CLI_EXE \
    --sn iam \
    --op AuthenticateAndLinkForwardV3 \
    --extend_exp 'true' \
    --client_id 'swtb7QSA' \
    --linkingToken 'oz5RDIbv' \
    --password 'nx2Nrnol' \
    --username 'loxPTBGj' \
    > test.out 2>&1
eval_tap $? 242 'AuthenticateAndLinkForwardV3' test.out

#- 243 GenerateTokenByNewHeadlessAccountV3
$CLI_EXE \
    --sn iam \
    --op GenerateTokenByNewHeadlessAccountV3 \
    --additionalData 'Ih7rp5bG' \
    --extend_exp 'true' \
    --linkingToken 'fCgmtzvz' \
    > test.out 2>&1
eval_tap $? 243 'GenerateTokenByNewHeadlessAccountV3' test.out

#- 244 RequestOneTimeLinkingCodeV3
$CLI_EXE \
    --sn iam \
    --op RequestOneTimeLinkingCodeV3 \
    --redirectUri 'B6p6qPbP' \
    --state '1a71td15' \
    --platformId 'MR6P0YWk' \
    > test.out 2>&1
eval_tap $? 244 'RequestOneTimeLinkingCodeV3' test.out

#- 245 ValidateOneTimeLinkingCodeV3
$CLI_EXE \
    --sn iam \
    --op ValidateOneTimeLinkingCodeV3 \
    --oneTimeLinkCode 'gKqrsMOh' \
    > test.out 2>&1
eval_tap $? 245 'ValidateOneTimeLinkingCodeV3' test.out

#- 246 RequestTokenByOneTimeLinkCodeResponseV3
$CLI_EXE \
    --sn iam \
    --op RequestTokenByOneTimeLinkCodeResponseV3 \
    --additionalData 'n4jAw2nW' \
    --isTransient 'false' \
    --client_id 'bY56hFhe' \
    --oneTimeLinkCode 'pxicbWUO' \
    > test.out 2>&1
eval_tap $? 246 'RequestTokenByOneTimeLinkCodeResponseV3' test.out

#- 247 GetCountryLocationV3
$CLI_EXE \
    --sn iam \
    --op GetCountryLocationV3 \
    > test.out 2>&1
eval_tap $? 247 'GetCountryLocationV3' test.out

#- 248 Logout
$CLI_EXE \
    --sn iam \
    --op Logout \
    > test.out 2>&1
eval_tap $? 248 'Logout' test.out

#- 249 RequestTokenExchangeCodeV3
$CLI_EXE \
    --sn iam \
    --op RequestTokenExchangeCodeV3 \
    --namespace $AB_NAMESPACE \
    --codeChallenge 'KAqP7PS2' \
    --codeChallengeMethod 'S256' \
    --client_id 'QBTD5UaX' \
    > test.out 2>&1
eval_tap $? 249 'RequestTokenExchangeCodeV3' test.out

#- 250 AdminRetrieveUserThirdPartyPlatformTokenV3
$CLI_EXE \
    --sn iam \
    --op AdminRetrieveUserThirdPartyPlatformTokenV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'aXO1nkyg' \
    --userId 'JKelZRwc' \
    --platformUserId '9cUNJgR6' \
    > test.out 2>&1
eval_tap $? 250 'AdminRetrieveUserThirdPartyPlatformTokenV3' test.out

#- 251 RevokeUserV3
$CLI_EXE \
    --sn iam \
    --op RevokeUserV3 \
    --namespace $AB_NAMESPACE \
    --userId 'cASbFSIU' \
    --includeGameNamespace 'false' \
    > test.out 2>&1
eval_tap $? 251 'RevokeUserV3' test.out

#- 252 AuthorizeV3
$CLI_EXE \
    --sn iam \
    --op AuthorizeV3 \
    --blockedPlatformId 'iMpLcPdB' \
    --codeChallenge 'G8l4aOXL' \
    --codeChallengeMethod 'plain' \
    --createHeadless 'true' \
    --loginWebBased 'false' \
    --nonce 'lUZY8FP3' \
    --oneTimeLinkCode 'FV54iq9Z' \
    --redirectUri 'qLDaQZEV' \
    --scope 'dSVmoRw1' \
    --state 'lGYmgswY' \
    --targetAuthPage 'bwCJ6vUU' \
    --useRedirectUriAsLoginUrlWhenLocked 'false' \
    --clientId 'AH7iMgl8' \
    --responseType 'code' \
    > test.out 2>&1
eval_tap $? 252 'AuthorizeV3' test.out

#- 253 TokenIntrospectionV3
$CLI_EXE \
    --sn iam \
    --op TokenIntrospectionV3 \
    --token 'HQkBT8Cq' \
    > test.out 2>&1
eval_tap $? 253 'TokenIntrospectionV3' test.out

#- 254 GetJWKSV3
$CLI_EXE \
    --sn iam \
    --op GetJWKSV3 \
    > test.out 2>&1
eval_tap $? 254 'GetJWKSV3' test.out

#- 255 SendMFAAuthenticationCode
$CLI_EXE \
    --sn iam \
    --op SendMFAAuthenticationCode \
    --clientId 'tScPQInd' \
    --factor 'ocUFAG0K' \
    --mfaToken 'SAusmfce' \
    > test.out 2>&1
eval_tap $? 255 'SendMFAAuthenticationCode' test.out

#- 256 Change2faMethod
$CLI_EXE \
    --sn iam \
    --op Change2faMethod \
    --factor 'HxSLQvM4' \
    --mfaToken 'hOqdflqr' \
    > test.out 2>&1
eval_tap $? 256 'Change2faMethod' test.out

#- 257 Verify2faCode
$CLI_EXE \
    --sn iam \
    --op Verify2faCode \
    --code 'rfyMe740' \
    --factor 'r5MyOVNB' \
    --mfaToken 'y3xWiepE' \
    --rememberDevice 'false' \
    > test.out 2>&1
eval_tap $? 257 'Verify2faCode' test.out

#- 258 Verify2faCodeForward
$CLI_EXE \
    --sn iam \
    --op Verify2faCodeForward \
    --defaultFactor 'SNLlgsWC' \
    --factors '5hEHBhJH' \
    --rememberDevice 'false' \
    --clientId 'kHbPWjPn' \
    --code 'qEEe1G2C' \
    --factor 'ymQ9jlCb' \
    --mfaToken 'IQDmyV6a' \
    > test.out 2>&1
eval_tap $? 258 'Verify2faCodeForward' test.out

#- 259 RetrieveUserThirdPartyPlatformTokenV3
$CLI_EXE \
    --sn iam \
    --op RetrieveUserThirdPartyPlatformTokenV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'F0yb57FG' \
    --userId '0Dl61v7C' \
    > test.out 2>&1
eval_tap $? 259 'RetrieveUserThirdPartyPlatformTokenV3' test.out

#- 260 AuthCodeRequestV3
$CLI_EXE \
    --sn iam \
    --op AuthCodeRequestV3 \
    --platformId 'zrOqeZyW' \
    --clientId 'IC2CbjV6' \
    --redirectUri 'yTg5Unyl' \
    --requestId 'dxS6ILtN' \
    > test.out 2>&1
eval_tap $? 260 'AuthCodeRequestV3' test.out

#- 261 PlatformTokenGrantV3
$CLI_EXE \
    --sn iam \
    --op PlatformTokenGrantV3 \
    --platformId 'Oy711QcY' \
    --additionalData '9mRZJGyl' \
    --client_id 'ekTJirRi' \
    --createHeadless 'true' \
    --device_id 'XPZYAAeB' \
    --macAddress 'mcXMK2Qf' \
    --platform_token 'mxxeytgS' \
    --serviceLabel '0.3739618266154998' \
    --skipSetCookie 'true' \
    > test.out 2>&1
eval_tap $? 261 'PlatformTokenGrantV3' test.out

#- 262 GetRevocationListV3
$CLI_EXE \
    --sn iam \
    --op GetRevocationListV3 \
    > test.out 2>&1
eval_tap $? 262 'GetRevocationListV3' test.out

#- 263 TokenRevocationV3
$CLI_EXE \
    --sn iam \
    --op TokenRevocationV3 \
    --token 'SvDv5skV' \
    > test.out 2>&1
eval_tap $? 263 'TokenRevocationV3' test.out

#- 264 SimultaneousLoginV3
$CLI_EXE \
    --sn iam \
    --op SimultaneousLoginV3 \
    --simultaneousPlatform 'MVn3pT9v' \
    --simultaneousTicket 'zCJweFNU' \
    --nativePlatform 'steam' \
    --nativePlatformTicket 'jK79t09V' \
    > test.out 2>&1
eval_tap $? 264 'SimultaneousLoginV3' test.out

#- 265 TokenGrantV3
$CLI_EXE \
    --sn iam \
    --op TokenGrantV3 \
    --additionalData 'rMVdfbNN' \
    --client_id '6l2xeTqj' \
    --client_secret 'd5UKxEx9' \
    --code 'PLW2Efoy' \
    --code_verifier 'GXLksoco' \
    --extendNamespace 'ULtgHw5g' \
    --extend_exp 'true' \
    --password '2ZptiWar' \
    --redirect_uri 'QxdjxHm3' \
    --refresh_token '6tRDoBRW' \
    --scope 'hBSubLSa' \
    --username 'aidPjLG8' \
    --grant_type 'refresh_token' \
    > test.out 2>&1
eval_tap $? 265 'TokenGrantV3' test.out

#- 266 VerifyTokenV3
$CLI_EXE \
    --sn iam \
    --op VerifyTokenV3 \
    --token 'KT3RgfCB' \
    > test.out 2>&1
eval_tap $? 266 'VerifyTokenV3' test.out

#- 267 PlatformAuthenticationV3
$CLI_EXE \
    --sn iam \
    --op PlatformAuthenticationV3 \
    --platformId 'egUEZdTH' \
    --code '8CViAvXR' \
    --error 'qoYqgO94' \
    --openidAssocHandle 'ryt1UlJk' \
    --openidClaimedId 'XTAYlkXv' \
    --openidIdentity 'tDoljed9' \
    --openidMode 'I6PXpSMW' \
    --openidNs 't5Xm0mLA' \
    --openidOpEndpoint 'BDxaxptx' \
    --openidResponseNonce 'yhuGSkGb' \
    --openidReturnTo 'bu8dDy6T' \
    --openidSig 'aDZIuS6L' \
    --openidSigned 'Zbcf0lhl' \
    --state 'DEvEBvgn' \
    > test.out 2>&1
eval_tap $? 267 'PlatformAuthenticationV3' test.out

#- 268 PlatformTokenRefreshV3
$CLI_EXE \
    --sn iam \
    --op PlatformTokenRefreshV3 \
    --platformId 'css4hNcF' \
    --platform_token 'AHq4HANx' \
    > test.out 2>&1
eval_tap $? 268 'PlatformTokenRefreshV3' test.out

#- 269 PublicGetInputValidations
$CLI_EXE \
    --sn iam \
    --op PublicGetInputValidations \
    --defaultOnEmpty 'false' \
    --languageCode 'Lkx3YkHi' \
    > test.out 2>&1
eval_tap $? 269 'PublicGetInputValidations' test.out

#- 270 PublicGetInputValidationByField
$CLI_EXE \
    --sn iam \
    --op PublicGetInputValidationByField \
    --field 'gKPE5r9W' \
    > test.out 2>&1
eval_tap $? 270 'PublicGetInputValidationByField' test.out

#- 271 PublicGetCountryAgeRestrictionV3
$CLI_EXE \
    --sn iam \
    --op PublicGetCountryAgeRestrictionV3 \
    --countryCode '5UlMP7gJ' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 271 'PublicGetCountryAgeRestrictionV3' test.out

#- 272 PublicGetConfigValueV3
$CLI_EXE \
    --sn iam \
    --op PublicGetConfigValueV3 \
    --configKey '1I40v5HB' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 272 'PublicGetConfigValueV3' test.out

#- 273 PublicGetCountryListV3
$CLI_EXE \
    --sn iam \
    --op PublicGetCountryListV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 273 'PublicGetCountryListV3' test.out

#- 274 RetrieveAllActiveThirdPartyLoginPlatformCredentialPublicV3
$CLI_EXE \
    --sn iam \
    --op RetrieveAllActiveThirdPartyLoginPlatformCredentialPublicV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 274 'RetrieveAllActiveThirdPartyLoginPlatformCredentialPublicV3' test.out

#- 275 RetrieveActiveOIDCClientsPublicV3
$CLI_EXE \
    --sn iam \
    --op RetrieveActiveOIDCClientsPublicV3 \
    --namespace $AB_NAMESPACE \
    --clientId 'aVegIcGt' \
    > test.out 2>&1
eval_tap $? 275 'RetrieveActiveOIDCClientsPublicV3' test.out

#- 276 PublicListUserIDByPlatformUserIDsV3
eval_tap 0 276 'PublicListUserIDByPlatformUserIDsV3 # SKIP deprecated' test.out

#- 277 PublicGetUserByPlatformUserIDV3
eval_tap 0 277 'PublicGetUserByPlatformUserIDV3 # SKIP deprecated' test.out

#- 278 PublicGetProfileUpdateStrategyV3
$CLI_EXE \
    --sn iam \
    --op PublicGetProfileUpdateStrategyV3 \
    --namespace $AB_NAMESPACE \
    --field 'country' \
    > test.out 2>&1
eval_tap $? 278 'PublicGetProfileUpdateStrategyV3' test.out

#- 279 PublicGetAsyncStatus
$CLI_EXE \
    --sn iam \
    --op PublicGetAsyncStatus \
    --namespace $AB_NAMESPACE \
    --requestId 'eLInv5YC' \
    > test.out 2>&1
eval_tap $? 279 'PublicGetAsyncStatus' test.out

#- 280 PublicSearchUserV3
$CLI_EXE \
    --sn iam \
    --op PublicSearchUserV3 \
    --namespace $AB_NAMESPACE \
    --by 'YsWUaAfT' \
    --limit '45' \
    --offset '16' \
    --platformBy 'fyW7SePw' \
    --platformId 'KssObeev' \
    --query 'VDSeuct6' \
    > test.out 2>&1
eval_tap $? 280 'PublicSearchUserV3' test.out

#- 281 PublicCreateUserV3
# body param: body
echo '{"PasswordMD5Sum": "Th3RvLuH", "acceptedPolicies": [{"isAccepted": false, "localizedPolicyVersionId": "9mqsuGi1", "policyId": "4SnaE8Jb", "policyVersionId": "3i5FxGaP"}, {"isAccepted": true, "localizedPolicyVersionId": "wyP6nw3W", "policyId": "EfiyGjLT", "policyVersionId": "kMpt8fmh"}, {"isAccepted": false, "localizedPolicyVersionId": "vLFTgAgu", "policyId": "4tOlIFhs", "policyVersionId": "WzzEw1U3"}], "authType": "GYD33yv4", "code": "7ElV9LCq", "country": "uvosIzA9", "dateOfBirth": "OMUMdWck", "displayName": "7MBq7hYl", "emailAddress": "gDXtvyy2", "password": "e7bV6ZLA", "reachMinimumAge": false, "uniqueDisplayName": "uR5ZgETe"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicCreateUserV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 281 'PublicCreateUserV3' test.out

#- 282 CheckUserAvailability
$CLI_EXE \
    --sn iam \
    --op CheckUserAvailability \
    --namespace $AB_NAMESPACE \
    --field 'UXh5bLT5' \
    --query 'AOHFb2Mf' \
    > test.out 2>&1
eval_tap $? 282 'CheckUserAvailability' test.out

#- 283 PublicBulkGetUsers
eval_tap 0 283 'PublicBulkGetUsers # SKIP deprecated' test.out

#- 284 PublicSendRegistrationCode
# body param: body
echo '{"emailAddress": "E906rMwp", "languageTag": "wCh2Bk1O"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicSendRegistrationCode \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 284 'PublicSendRegistrationCode' test.out

#- 285 PublicVerifyRegistrationCode
# body param: body
echo '{"code": "DxhzP4Ej", "emailAddress": "sRxpdGQ0"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicVerifyRegistrationCode \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 285 'PublicVerifyRegistrationCode' test.out

#- 286 PublicForgotPasswordV3
# body param: body
echo '{"emailAddress": "wXQPtoaA", "languageTag": "jkybqhWx"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicForgotPasswordV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 286 'PublicForgotPasswordV3' test.out

#- 287 PublicValidateUserInput
# body param: body
echo '{"displayName": "PPzrs3DE", "password": "VatMK1oj", "uniqueDisplayName": "KIaAfes5", "username": "a6eDwxRU"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicValidateUserInput \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 287 'PublicValidateUserInput' test.out

#- 288 GetAdminInvitationV3
$CLI_EXE \
    --sn iam \
    --op GetAdminInvitationV3 \
    --invitationId 'kIhhpMgo' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 288 'GetAdminInvitationV3' test.out

#- 289 CreateUserFromInvitationV3
# body param: body
echo '{"PasswordMD5Sum": "hEWZIPx3", "acceptedPolicies": [{"isAccepted": false, "localizedPolicyVersionId": "24jAYATI", "policyId": "Oqvkt4y1", "policyVersionId": "gx2XWRrp"}, {"isAccepted": false, "localizedPolicyVersionId": "lnZJGcHw", "policyId": "758ujLLG", "policyVersionId": "uMHbaq5l"}, {"isAccepted": true, "localizedPolicyVersionId": "9p59FlPu", "policyId": "rmRB8rZ1", "policyVersionId": "tl8hgTLu"}], "authType": "H5WRrQyI", "code": "rcOPD7L5", "country": "hXiRe2Mh", "dateOfBirth": "t8O3MsL4", "displayName": "tFTCIKST", "emailAddress": "HXvCbOvq", "password": "NblMtiEx", "reachMinimumAge": false, "uniqueDisplayName": "oxJopNJg"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op CreateUserFromInvitationV3 \
    --invitationId 'mF5dM8Ls' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 289 'CreateUserFromInvitationV3' test.out

#- 290 UpdateUserV3
# body param: body
echo '{"avatarUrl": "ukhIt9QU", "country": "HPq3hK2c", "dateOfBirth": "hCxzcWFa", "displayName": "T6pQzlIb", "languageTag": "vtbp9xaA", "uniqueDisplayName": "HOHABEZS", "userName": "CxcFgJUR"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op UpdateUserV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 290 'UpdateUserV3' test.out

#- 291 PublicPartialUpdateUserV3
# body param: body
echo '{"avatarUrl": "pSuB0dHx", "country": "uq4L0B37", "dateOfBirth": "E3tZ8RhF", "displayName": "MuYHpNy2", "languageTag": "h61wB1mm", "uniqueDisplayName": "mTX3q08b", "userName": "J6wZ8PLR"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicPartialUpdateUserV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 291 'PublicPartialUpdateUserV3' test.out

#- 292 PublicSendVerificationCodeV3
# body param: body
echo '{"context": "37j15DHf", "emailAddress": "fC0oziUZ", "languageTag": "j0SBDWrP", "upgradeToken": "WGHRqT2k"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicSendVerificationCodeV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 292 'PublicSendVerificationCodeV3' test.out

#- 293 PublicUserVerificationV3
# body param: body
echo '{"code": "YjITkAYd", "contactType": "HOMLmNgY", "languageTag": "bOmQxTvV", "validateOnly": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUserVerificationV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 293 'PublicUserVerificationV3' test.out

#- 294 PublicUpgradeHeadlessAccountV3
# body param: body
echo '{"code": "I3unecPn", "country": "KajE5WON", "dateOfBirth": "TqX98K62", "displayName": "tRoxJwW2", "emailAddress": "r8exlkV2", "password": "C6xKZm4u", "uniqueDisplayName": "LR6obuZH", "validateOnly": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpgradeHeadlessAccountV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 294 'PublicUpgradeHeadlessAccountV3' test.out

#- 295 PublicVerifyHeadlessAccountV3
# body param: body
echo '{"emailAddress": "6sKd7Rxw", "password": "yg5JZ2if"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicVerifyHeadlessAccountV3 \
    --namespace $AB_NAMESPACE \
    --needVerificationCode 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 295 'PublicVerifyHeadlessAccountV3' test.out

#- 296 PublicUpdatePasswordV3
# body param: body
echo '{"languageTag": "8vRScllL", "mfaToken": "rWVek8LZ", "newPassword": "o01uzbQK", "oldPassword": "NRzS1PhY"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpdatePasswordV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 296 'PublicUpdatePasswordV3' test.out

#- 297 PublicCreateJusticeUser
$CLI_EXE \
    --sn iam \
    --op PublicCreateJusticeUser \
    --namespace $AB_NAMESPACE \
    --targetNamespace 'ZRGH4fMp' \
    > test.out 2>&1
eval_tap $? 297 'PublicCreateJusticeUser' test.out

#- 298 PublicPlatformLinkV3
$CLI_EXE \
    --sn iam \
    --op PublicPlatformLinkV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'Z7hginW3' \
    --redirectUri 'o40md5Vl' \
    --ticket '8p6QKO10' \
    > test.out 2>&1
eval_tap $? 298 'PublicPlatformLinkV3' test.out

#- 299 PublicPlatformUnlinkV3
eval_tap 0 299 'PublicPlatformUnlinkV3 # SKIP deprecated' test.out

#- 300 PublicPlatformUnlinkAllV3
$CLI_EXE \
    --sn iam \
    --op PublicPlatformUnlinkAllV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'eeTsuSdS' \
    > test.out 2>&1
eval_tap $? 300 'PublicPlatformUnlinkAllV3' test.out

#- 301 PublicForcePlatformLinkV3
$CLI_EXE \
    --sn iam \
    --op PublicForcePlatformLinkV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'Rbdr37Ft' \
    --ticket '8yyTjOGV' \
    > test.out 2>&1
eval_tap $? 301 'PublicForcePlatformLinkV3' test.out

#- 302 PublicWebLinkPlatform
$CLI_EXE \
    --sn iam \
    --op PublicWebLinkPlatform \
    --namespace $AB_NAMESPACE \
    --platformId 'pmMER2IY' \
    --clientId 'jhKholqt' \
    --redirectUri 'kMcmbixI' \
    > test.out 2>&1
eval_tap $? 302 'PublicWebLinkPlatform' test.out

#- 303 PublicWebLinkPlatformEstablish
$CLI_EXE \
    --sn iam \
    --op PublicWebLinkPlatformEstablish \
    --namespace $AB_NAMESPACE \
    --platformId 'ITmJkNXP' \
    --code 'EyzVlEwU' \
    --state 'rfrC3GVB' \
    > test.out 2>&1
eval_tap $? 303 'PublicWebLinkPlatformEstablish' test.out

#- 304 PublicProcessWebLinkPlatformV3
$CLI_EXE \
    --sn iam \
    --op PublicProcessWebLinkPlatformV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'iQEQyEwC' \
    --code 'qYdDKn2V' \
    --state 'ZTS5Lr3G' \
    > test.out 2>&1
eval_tap $? 304 'PublicProcessWebLinkPlatformV3' test.out

#- 305 PublicGetUsersPlatformInfosV3
# body param: body
echo '{"platformId": "5XPPgDaN", "userIds": ["4FpRVO6x", "CEW0Urnh", "MQdDFCbN"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicGetUsersPlatformInfosV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 305 'PublicGetUsersPlatformInfosV3' test.out

#- 306 ResetPasswordV3
# body param: body
echo '{"clientId": "xMb5jLJP", "code": "I10vokKo", "emailAddress": "4ck982qh", "languageTag": "W8WGB1oB", "newPassword": "VqYVat4b"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op ResetPasswordV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 306 'ResetPasswordV3' test.out

#- 307 PublicGetUserByUserIdV3
eval_tap 0 307 'PublicGetUserByUserIdV3 # SKIP deprecated' test.out

#- 308 PublicGetUserBanHistoryV3
$CLI_EXE \
    --sn iam \
    --op PublicGetUserBanHistoryV3 \
    --namespace $AB_NAMESPACE \
    --userId 't7QQ8lmK' \
    --activeOnly 'true' \
    --after 'KyeICoDo' \
    --before '8DoQPoaE' \
    --limit '35' \
    > test.out 2>&1
eval_tap $? 308 'PublicGetUserBanHistoryV3' test.out

#- 309 PublicListUserAllPlatformAccountsDistinctV3
$CLI_EXE \
    --sn iam \
    --op PublicListUserAllPlatformAccountsDistinctV3 \
    --namespace $AB_NAMESPACE \
    --userId 'jfe2DzRo' \
    > test.out 2>&1
eval_tap $? 309 'PublicListUserAllPlatformAccountsDistinctV3' test.out

#- 310 PublicGetUserInformationV3
$CLI_EXE \
    --sn iam \
    --op PublicGetUserInformationV3 \
    --namespace $AB_NAMESPACE \
    --userId 'xsLWwINo' \
    > test.out 2>&1
eval_tap $? 310 'PublicGetUserInformationV3' test.out

#- 311 PublicGetUserLoginHistoriesV3
$CLI_EXE \
    --sn iam \
    --op PublicGetUserLoginHistoriesV3 \
    --namespace $AB_NAMESPACE \
    --userId 'TTGbuN4a' \
    --after '0.600864042614968' \
    --before '0.40347991736400035' \
    --limit '8' \
    > test.out 2>&1
eval_tap $? 311 'PublicGetUserLoginHistoriesV3' test.out

#- 312 PublicGetUserPlatformAccountsV3
$CLI_EXE \
    --sn iam \
    --op PublicGetUserPlatformAccountsV3 \
    --namespace $AB_NAMESPACE \
    --userId 'B00qqJQJ' \
    --after 'uyCulZEc' \
    --before '2fOP96Lx' \
    --limit '78' \
    --platformId 'O52bjqUG' \
    > test.out 2>&1
eval_tap $? 312 'PublicGetUserPlatformAccountsV3' test.out

#- 313 PublicListJusticePlatformAccountsV3
$CLI_EXE \
    --sn iam \
    --op PublicListJusticePlatformAccountsV3 \
    --namespace $AB_NAMESPACE \
    --userId 'n8SxQ2wk' \
    > test.out 2>&1
eval_tap $? 313 'PublicListJusticePlatformAccountsV3' test.out

#- 314 PublicLinkPlatformAccount
# body param: body
echo '{"platformId": "dljw7ecJ", "platformUserId": "X7nn7zRv"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicLinkPlatformAccount \
    --namespace $AB_NAMESPACE \
    --userId '2PxFbSxU' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 314 'PublicLinkPlatformAccount' test.out

#- 315 PublicForceLinkPlatformWithProgression
# body param: body
echo '{"chosenNamespaces": ["mh57FFVD", "fBmd7VtF", "j63xx33w"], "requestId": "wKgMfgXD"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicForceLinkPlatformWithProgression \
    --namespace $AB_NAMESPACE \
    --userId 'YRCdh9HF' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 315 'PublicForceLinkPlatformWithProgression' test.out

#- 316 PublicGetPublisherUserV3
$CLI_EXE \
    --sn iam \
    --op PublicGetPublisherUserV3 \
    --namespace $AB_NAMESPACE \
    --userId 'ytByHNgl' \
    > test.out 2>&1
eval_tap $? 316 'PublicGetPublisherUserV3' test.out

#- 317 PublicValidateUserByUserIDAndPasswordV3
$CLI_EXE \
    --sn iam \
    --op PublicValidateUserByUserIDAndPasswordV3 \
    --namespace $AB_NAMESPACE \
    --userId 'h25uRSTd' \
    --password 'ycenfP3g' \
    > test.out 2>&1
eval_tap $? 317 'PublicValidateUserByUserIDAndPasswordV3' test.out

#- 318 PublicGetRolesV3
$CLI_EXE \
    --sn iam \
    --op PublicGetRolesV3 \
    --after 'xK1dlunG' \
    --before 'Paln9vxW' \
    --isWildcard 'true' \
    --limit '22' \
    > test.out 2>&1
eval_tap $? 318 'PublicGetRolesV3' test.out

#- 319 PublicGetRoleV3
$CLI_EXE \
    --sn iam \
    --op PublicGetRoleV3 \
    --roleId 'hUndKj4D' \
    > test.out 2>&1
eval_tap $? 319 'PublicGetRoleV3' test.out

#- 320 PublicGetMyUserV3
$CLI_EXE \
    --sn iam \
    --op PublicGetMyUserV3 \
    --includeAllPlatforms 'false' \
    > test.out 2>&1
eval_tap $? 320 'PublicGetMyUserV3' test.out

#- 321 PublicSendCodeForwardV3
# body param: body
echo '{"context": "KgDs9dKv", "emailAddress": "s2janwiP", "languageTag": "wsB0Jofq", "upgradeToken": "cOVb8kAJ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicSendCodeForwardV3 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 321 'PublicSendCodeForwardV3' test.out

#- 322 PublicGetLinkHeadlessAccountToMyAccountConflictV3
$CLI_EXE \
    --sn iam \
    --op PublicGetLinkHeadlessAccountToMyAccountConflictV3 \
    --oneTimeLinkCode 'kGWx6NJN' \
    > test.out 2>&1
eval_tap $? 322 'PublicGetLinkHeadlessAccountToMyAccountConflictV3' test.out

#- 323 LinkHeadlessAccountToMyAccountV3
# body param: body
echo '{"chosenNamespaces": ["zST250At", "qfCdEynv", "pvXUrwhs"], "oneTimeLinkCode": "EmPyHeDT"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op LinkHeadlessAccountToMyAccountV3 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 323 'LinkHeadlessAccountToMyAccountV3' test.out

#- 324 PublicGetMyRedirectionAfterLinkV3
$CLI_EXE \
    --sn iam \
    --op PublicGetMyRedirectionAfterLinkV3 \
    --oneTimeLinkCode 'u9rVmslh' \
    > test.out 2>&1
eval_tap $? 324 'PublicGetMyRedirectionAfterLinkV3' test.out

#- 325 PublicGetMyProfileAllowUpdateStatusV3
$CLI_EXE \
    --sn iam \
    --op PublicGetMyProfileAllowUpdateStatusV3 \
    > test.out 2>&1
eval_tap $? 325 'PublicGetMyProfileAllowUpdateStatusV3' test.out

#- 326 PublicSendVerificationLinkV3
# body param: body
echo '{"languageTag": "df1bbc2x"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicSendVerificationLinkV3 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 326 'PublicSendVerificationLinkV3' test.out

#- 327 PublicGetOpenidUserInfoV3
$CLI_EXE \
    --sn iam \
    --op PublicGetOpenidUserInfoV3 \
    > test.out 2>&1
eval_tap $? 327 'PublicGetOpenidUserInfoV3' test.out

#- 328 PublicVerifyUserByLinkV3
$CLI_EXE \
    --sn iam \
    --op PublicVerifyUserByLinkV3 \
    --code 'TvXyzQ3t' \
    > test.out 2>&1
eval_tap $? 328 'PublicVerifyUserByLinkV3' test.out

#- 329 PlatformAuthenticateSAMLV3Handler
$CLI_EXE \
    --sn iam \
    --op PlatformAuthenticateSAMLV3Handler \
    --platformId 'Aud1youE' \
    --code 'xfht3daA' \
    --error 'ge9IHFYy' \
    --state 'P7zy4JEZ' \
    > test.out 2>&1
eval_tap $? 329 'PlatformAuthenticateSAMLV3Handler' test.out

#- 330 LoginSSOClient
$CLI_EXE \
    --sn iam \
    --op LoginSSOClient \
    --platformId 'ROWLSHxr' \
    --payload 'fHtRgx5W' \
    > test.out 2>&1
eval_tap $? 330 'LoginSSOClient' test.out

#- 331 LogoutSSOClient
$CLI_EXE \
    --sn iam \
    --op LogoutSSOClient \
    --platformId 'c9izA54J' \
    > test.out 2>&1
eval_tap $? 331 'LogoutSSOClient' test.out

#- 332 RequestTargetTokenResponseV3
$CLI_EXE \
    --sn iam \
    --op RequestTargetTokenResponseV3 \
    --additionalData 'wWLY8oQQ' \
    --code 'cb0iSoKm' \
    > test.out 2>&1
eval_tap $? 332 'RequestTargetTokenResponseV3' test.out

#- 333 UpgradeAndAuthenticateForwardV3
$CLI_EXE \
    --sn iam \
    --op UpgradeAndAuthenticateForwardV3 \
    --client_id 'csR6Ji8C' \
    --upgrade_success_token 'PbDAV3vY' \
    > test.out 2>&1
eval_tap $? 333 'UpgradeAndAuthenticateForwardV3' test.out

#- 334 AdminListInvitationHistoriesV4
$CLI_EXE \
    --sn iam \
    --op AdminListInvitationHistoriesV4 \
    --limit '57' \
    --namespace_ 'Qckx42mW' \
    --offset '26' \
    > test.out 2>&1
eval_tap $? 334 'AdminListInvitationHistoriesV4' test.out

#- 335 AdminGetDevicesByUserV4
$CLI_EXE \
    --sn iam \
    --op AdminGetDevicesByUserV4 \
    --namespace $AB_NAMESPACE \
    --userId 'gz4NxGm5' \
    > test.out 2>&1
eval_tap $? 335 'AdminGetDevicesByUserV4' test.out

#- 336 AdminGetBannedDevicesV4
$CLI_EXE \
    --sn iam \
    --op AdminGetBannedDevicesV4 \
    --namespace $AB_NAMESPACE \
    --deviceType 'etf8blK5' \
    --endDate 'mEXv6Sth' \
    --limit '89' \
    --offset '44' \
    --startDate 'KtUQpc4n' \
    > test.out 2>&1
eval_tap $? 336 'AdminGetBannedDevicesV4' test.out

#- 337 AdminGetUserDeviceBansV4
$CLI_EXE \
    --sn iam \
    --op AdminGetUserDeviceBansV4 \
    --namespace $AB_NAMESPACE \
    --userId 'qxlseQtO' \
    > test.out 2>&1
eval_tap $? 337 'AdminGetUserDeviceBansV4' test.out

#- 338 AdminBanDeviceV4
# body param: body
echo '{"comment": "HRwDI9JT", "deviceId": "0neQI8d7", "deviceType": "zEp5L4eU", "enabled": false, "endDate": "Tpm5MwRa", "ext": {"4SwiaXNY": {}, "H8HpIAKV": {}, "38WFpAYY": {}}, "reason": "UpJDxbLl"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBanDeviceV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 338 'AdminBanDeviceV4' test.out

#- 339 AdminGetDeviceBanV4
$CLI_EXE \
    --sn iam \
    --op AdminGetDeviceBanV4 \
    --banId 'FXCYUd2J' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 339 'AdminGetDeviceBanV4' test.out

#- 340 AdminUpdateDeviceBanV4
# body param: body
echo '{"enabled": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateDeviceBanV4 \
    --banId 'WuZMGhja' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 340 'AdminUpdateDeviceBanV4' test.out

#- 341 AdminGenerateReportV4
$CLI_EXE \
    --sn iam \
    --op AdminGenerateReportV4 \
    --namespace $AB_NAMESPACE \
    --endDate 'D3YCdZeP' \
    --startDate 'HH7EoVDG' \
    --deviceType 'bseQg4nh' \
    > test.out 2>&1
eval_tap $? 341 'AdminGenerateReportV4' test.out

#- 342 AdminGetDeviceTypesV4
$CLI_EXE \
    --sn iam \
    --op AdminGetDeviceTypesV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 342 'AdminGetDeviceTypesV4' test.out

#- 343 AdminGetDeviceBansV4
$CLI_EXE \
    --sn iam \
    --op AdminGetDeviceBansV4 \
    --deviceId 'iehc1DVD' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 343 'AdminGetDeviceBansV4' test.out

#- 344 AdminDecryptDeviceV4
eval_tap 0 344 'AdminDecryptDeviceV4 # SKIP deprecated' test.out

#- 345 AdminUnbanDeviceV4
$CLI_EXE \
    --sn iam \
    --op AdminUnbanDeviceV4 \
    --deviceId 'x7apZOoU' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 345 'AdminUnbanDeviceV4' test.out

#- 346 AdminGetUsersByDeviceV4
$CLI_EXE \
    --sn iam \
    --op AdminGetUsersByDeviceV4 \
    --deviceId 'Bejukk8B' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 346 'AdminGetUsersByDeviceV4' test.out

#- 347 AdminGetNamespaceInvitationHistoryV4
$CLI_EXE \
    --sn iam \
    --op AdminGetNamespaceInvitationHistoryV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 347 'AdminGetNamespaceInvitationHistoryV4' test.out

#- 348 AdminGetNamespaceUserInvitationHistoryV4
$CLI_EXE \
    --sn iam \
    --op AdminGetNamespaceUserInvitationHistoryV4 \
    --namespace $AB_NAMESPACE \
    --limit '48' \
    --offset '22' \
    > test.out 2>&1
eval_tap $? 348 'AdminGetNamespaceUserInvitationHistoryV4' test.out

#- 349 AdminCreateTestUsersV4
# body param: body
echo '{"count": 58, "userInfo": {"country": "eecZJ8E5"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminCreateTestUsersV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 349 'AdminCreateTestUsersV4' test.out

#- 350 AdminCreateUserV4
# body param: body
echo '{"acceptedPolicies": [{"isAccepted": false, "localizedPolicyVersionId": "x1JOVfYs", "policyId": "rqZPlzme", "policyVersionId": "TAXhC355"}, {"isAccepted": true, "localizedPolicyVersionId": "5bTr8IkG", "policyId": "RAkSrKNN", "policyVersionId": "j74Qs6z3"}, {"isAccepted": false, "localizedPolicyVersionId": "Ul1SAKRs", "policyId": "poyJ8rU2", "policyVersionId": "BocAWyCt"}], "authType": "EMAILPASSWD", "code": "6yuOSPBL", "country": "2W7F9va6", "dateOfBirth": "EyCQ2nDj", "displayName": "j7Rm6Q1V", "emailAddress": "pJ0v6CYo", "password": "ZLGeoanO", "passwordMD5Sum": "pS6y0nWC", "reachMinimumAge": false, "uniqueDisplayName": "ThqMZQ07", "username": "eS4MESfN"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminCreateUserV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 350 'AdminCreateUserV4' test.out

#- 351 AdminBulkUpdateUserAccountTypeV4
# body param: body
echo '{"testAccount": true, "userIds": ["lt9l4F8U", "PK0HDAvN", "fnDQ0cNv"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBulkUpdateUserAccountTypeV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 351 'AdminBulkUpdateUserAccountTypeV4' test.out

#- 352 AdminBulkCheckValidUserIDV4
# body param: body
echo '{"userIds": ["tYYndcPw", "WEhBpBH6", "bc7mZ4H7"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBulkCheckValidUserIDV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 352 'AdminBulkCheckValidUserIDV4' test.out

#- 353 AdminUpdateUserV4
# body param: body
echo '{"avatarUrl": "9xXhumEn", "country": "FtTq3U9P", "dateOfBirth": "AT8Pa081", "displayName": "NozIYWF7", "languageTag": "3CXSSjvD", "skipLoginQueue": true, "tags": ["3AZrHw1S", "5IfYoEaN", "iLSht6Ra"], "uniqueDisplayName": "WCANlcEV", "userName": "gemnQ9On"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserV4 \
    --namespace $AB_NAMESPACE \
    --userId 'xTsMdjiF' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 353 'AdminUpdateUserV4' test.out

#- 354 AdminUpdateUserEmailAddressV4
# body param: body
echo '{"code": "nK8GAXaR", "emailAddress": "IDegi92T"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserEmailAddressV4 \
    --namespace $AB_NAMESPACE \
    --userId 'OCU0NQTE' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 354 'AdminUpdateUserEmailAddressV4' test.out

#- 355 AdminDisableUserMFAV4
# body param: body
echo '{"factor": "hA4RwM6C", "mfaToken": "tk5PVg7D"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDisableUserMFAV4 \
    --namespace $AB_NAMESPACE \
    --userId 'CwtqDJ3T' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 355 'AdminDisableUserMFAV4' test.out

#- 356 AdminGetUserMFAStatusV4
$CLI_EXE \
    --sn iam \
    --op AdminGetUserMFAStatusV4 \
    --namespace $AB_NAMESPACE \
    --userId '50vckGVv' \
    > test.out 2>&1
eval_tap $? 356 'AdminGetUserMFAStatusV4' test.out

#- 357 AdminListUserRolesV4
$CLI_EXE \
    --sn iam \
    --op AdminListUserRolesV4 \
    --namespace $AB_NAMESPACE \
    --userId 'ybRUSC3s' \
    > test.out 2>&1
eval_tap $? 357 'AdminListUserRolesV4' test.out

#- 358 AdminUpdateUserRoleV4
# body param: body
echo '{"assignedNamespaces": ["ShuNzSYk", "V25hyJYs", "2tXCWsZz"], "roleId": "jZaLorIz"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserRoleV4 \
    --namespace $AB_NAMESPACE \
    --userId 'ecOntDVR' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 358 'AdminUpdateUserRoleV4' test.out

#- 359 AdminAddUserRoleV4
# body param: body
echo '{"assignedNamespaces": ["thgwN7kz", "KJ0XE1FH", "2NU0ZXux"], "roleId": "okQDr7Aa"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddUserRoleV4 \
    --namespace $AB_NAMESPACE \
    --userId 'tgFenKK5' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 359 'AdminAddUserRoleV4' test.out

#- 360 AdminRemoveUserRoleV4
# body param: body
echo '{"assignedNamespaces": ["gdikbtqD", "zGtkRHCQ", "5ItCCHd1"], "roleId": "437JaWCN"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminRemoveUserRoleV4 \
    --namespace $AB_NAMESPACE \
    --userId 'oW8oYYav' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 360 'AdminRemoveUserRoleV4' test.out

#- 361 AdminGetRolesV4
$CLI_EXE \
    --sn iam \
    --op AdminGetRolesV4 \
    --adminRole 'true' \
    --isWildcard 'false' \
    --limit '87' \
    --offset '88' \
    > test.out 2>&1
eval_tap $? 361 'AdminGetRolesV4' test.out

#- 362 AdminCreateRoleV4
# body param: body
echo '{"adminRole": false, "deletable": true, "isWildcard": false, "roleName": "kB4G0lwR"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminCreateRoleV4 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 362 'AdminCreateRoleV4' test.out

#- 363 AdminGetRoleV4
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleV4 \
    --roleId 'wVNpcGRW' \
    > test.out 2>&1
eval_tap $? 363 'AdminGetRoleV4' test.out

#- 364 AdminDeleteRoleV4
$CLI_EXE \
    --sn iam \
    --op AdminDeleteRoleV4 \
    --roleId '0l0kLZai' \
    > test.out 2>&1
eval_tap $? 364 'AdminDeleteRoleV4' test.out

#- 365 AdminUpdateRoleV4
# body param: body
echo '{"adminRole": false, "deletable": false, "isWildcard": false, "roleName": "Xe6v9iv7"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateRoleV4 \
    --roleId 'uAOraSyv' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 365 'AdminUpdateRoleV4' test.out

#- 366 AdminUpdateRolePermissionsV4
# body param: body
echo '{"permissions": [{"action": 0, "resource": "VJ1Fjefq", "schedAction": 3, "schedCron": "oLTUDlqT", "schedRange": ["9p3ncrLF", "srIXOWBu", "4Lh7TV6Z"]}, {"action": 25, "resource": "pk5aDe0r", "schedAction": 52, "schedCron": "ioKfKeSL", "schedRange": ["7UugYzBQ", "Y0tZajld", "lvxLP0Xh"]}, {"action": 18, "resource": "JYwViNN7", "schedAction": 72, "schedCron": "X44yPexs", "schedRange": ["Z9iHxWzD", "1gGyAGsn", "e4ZjR4US"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateRolePermissionsV4 \
    --roleId 'cowueK9H' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 366 'AdminUpdateRolePermissionsV4' test.out

#- 367 AdminAddRolePermissionsV4
# body param: body
echo '{"permissions": [{"action": 61, "resource": "ghWsIRpA", "schedAction": 41, "schedCron": "icR33vay", "schedRange": ["d6C5hJzu", "SbubyCct", "2W9Qzq8l"]}, {"action": 9, "resource": "a32dlJe1", "schedAction": 92, "schedCron": "wAywTrU4", "schedRange": ["cByqgEEz", "MEJ8dXbZ", "8RUFizM2"]}, {"action": 85, "resource": "Dk6OtEqp", "schedAction": 17, "schedCron": "ab5D5ASI", "schedRange": ["uq1W7VAi", "1ZGNraiW", "o5mvwriI"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddRolePermissionsV4 \
    --roleId 'WhN8FIgX' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 367 'AdminAddRolePermissionsV4' test.out

#- 368 AdminDeleteRolePermissionsV4
# body param: body
echo '["8xkBOnT8", "leUfzkbS", "bzerxegH"]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDeleteRolePermissionsV4 \
    --roleId 'aOyFO4ez' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 368 'AdminDeleteRolePermissionsV4' test.out

#- 369 AdminListAssignedUsersV4
$CLI_EXE \
    --sn iam \
    --op AdminListAssignedUsersV4 \
    --roleId 'Lvh45iKz' \
    --after 'hfOTWAFO' \
    --before '9NwkZEIs' \
    --limit '6' \
    > test.out 2>&1
eval_tap $? 369 'AdminListAssignedUsersV4' test.out

#- 370 AdminAssignUserToRoleV4
# body param: body
echo '{"assignedNamespaces": ["hJ2z0K09", "wccPmWx1", "PJGzBM9b"], "namespace": "FP9SlQ44", "userId": "MiAjrsJr"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAssignUserToRoleV4 \
    --roleId 'zxQ9O7sr' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 370 'AdminAssignUserToRoleV4' test.out

#- 371 AdminRevokeUserFromRoleV4
# body param: body
echo '{"namespace": "7Z7GJYVH", "userId": "gHKTHFZx"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminRevokeUserFromRoleV4 \
    --roleId 'cbM7Zk0i' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 371 'AdminRevokeUserFromRoleV4' test.out

#- 372 AdminInviteUserNewV4
# body param: body
echo '{"assignedNamespaces": ["D0omQnAQ", "7yC38Yyk", "3C6zWKay"], "emailAddresses": ["FhPZQmfm", "sB90ncQw", "1NCN3IhG"], "isAdmin": true, "isNewStudio": true, "languageTag": "8WDJMckc", "namespace": "bxAXRcdm", "roleId": "EkbA32FS"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminInviteUserNewV4 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 372 'AdminInviteUserNewV4' test.out

#- 373 AdminUpdateMyUserV4
# body param: body
echo '{"avatarUrl": "1XjtW4sF", "country": "bF3y28Ja", "dateOfBirth": "ZCdWBBlg", "displayName": "DJ1Uihd8", "languageTag": "OfkH2hZV", "skipLoginQueue": false, "tags": ["Sv2jdS98", "SjQ7lTF5", "mGjQAYz2"], "uniqueDisplayName": "Cj8BeoE7", "userName": "TnkgFMyC"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateMyUserV4 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 373 'AdminUpdateMyUserV4' test.out

#- 374 AdminDisableMyAuthenticatorV4
# body param: body
echo '{"factor": "t7BVeV9I", "mfaToken": "Q0t2PA42"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDisableMyAuthenticatorV4 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 374 'AdminDisableMyAuthenticatorV4' test.out

#- 375 AdminEnableMyAuthenticatorV4
$CLI_EXE \
    --sn iam \
    --op AdminEnableMyAuthenticatorV4 \
    --code 'XtQJ7V1G' \
    > test.out 2>&1
eval_tap $? 375 'AdminEnableMyAuthenticatorV4' test.out

#- 376 AdminGenerateMyAuthenticatorKeyV4
$CLI_EXE \
    --sn iam \
    --op AdminGenerateMyAuthenticatorKeyV4 \
    > test.out 2>&1
eval_tap $? 376 'AdminGenerateMyAuthenticatorKeyV4' test.out

#- 377 AdminGetMyBackupCodesV4
eval_tap 0 377 'AdminGetMyBackupCodesV4 # SKIP deprecated' test.out

#- 378 AdminGenerateMyBackupCodesV4
eval_tap 0 378 'AdminGenerateMyBackupCodesV4 # SKIP deprecated' test.out

#- 379 AdminDisableMyBackupCodesV4
# body param: body
echo '{"factor": "ebiB22dz", "mfaToken": "XWo8UthT"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDisableMyBackupCodesV4 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 379 'AdminDisableMyBackupCodesV4' test.out

#- 380 AdminDownloadMyBackupCodesV4
eval_tap 0 380 'AdminDownloadMyBackupCodesV4 # SKIP deprecated' test.out

#- 381 AdminEnableMyBackupCodesV4
eval_tap 0 381 'AdminEnableMyBackupCodesV4 # SKIP deprecated' test.out

#- 382 AdminGetBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op AdminGetBackupCodesV4 \
    --languageTag 'hHsagDNT' \
    > test.out 2>&1
eval_tap $? 382 'AdminGetBackupCodesV4' test.out

#- 383 AdminGenerateBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op AdminGenerateBackupCodesV4 \
    --languageTag 'ZQLv7sDH' \
    > test.out 2>&1
eval_tap $? 383 'AdminGenerateBackupCodesV4' test.out

#- 384 AdminEnableBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op AdminEnableBackupCodesV4 \
    --languageTag 'YRqP5zyq' \
    > test.out 2>&1
eval_tap $? 384 'AdminEnableBackupCodesV4' test.out

#- 385 AdminChallengeMyMFAV4
$CLI_EXE \
    --sn iam \
    --op AdminChallengeMyMFAV4 \
    --code 'Vphum38v' \
    --factor 'RMNbYLTL' \
    > test.out 2>&1
eval_tap $? 385 'AdminChallengeMyMFAV4' test.out

#- 386 AdminSendMyMFAEmailCodeV4
$CLI_EXE \
    --sn iam \
    --op AdminSendMyMFAEmailCodeV4 \
    --action 'TdDJgZQr' \
    --languageTag 'ckAMoRnU' \
    > test.out 2>&1
eval_tap $? 386 'AdminSendMyMFAEmailCodeV4' test.out

#- 387 AdminDisableMyEmailV4
# body param: body
echo '{"factor": "uJZjQZfo", "mfaToken": "Pz11D8ps"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDisableMyEmailV4 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 387 'AdminDisableMyEmailV4' test.out

#- 388 AdminEnableMyEmailV4
$CLI_EXE \
    --sn iam \
    --op AdminEnableMyEmailV4 \
    --code 'uizDDLlo' \
    > test.out 2>&1
eval_tap $? 388 'AdminEnableMyEmailV4' test.out

#- 389 AdminGetMyEnabledFactorsV4
$CLI_EXE \
    --sn iam \
    --op AdminGetMyEnabledFactorsV4 \
    > test.out 2>&1
eval_tap $? 389 'AdminGetMyEnabledFactorsV4' test.out

#- 390 AdminMakeFactorMyDefaultV4
$CLI_EXE \
    --sn iam \
    --op AdminMakeFactorMyDefaultV4 \
    --factor 'gMyekFAE' \
    > test.out 2>&1
eval_tap $? 390 'AdminMakeFactorMyDefaultV4' test.out

#- 391 AdminGetMyOwnMFAStatusV4
$CLI_EXE \
    --sn iam \
    --op AdminGetMyOwnMFAStatusV4 \
    > test.out 2>&1
eval_tap $? 391 'AdminGetMyOwnMFAStatusV4' test.out

#- 392 AdminGetMyMFAStatusV4
eval_tap 0 392 'AdminGetMyMFAStatusV4 # SKIP deprecated' test.out

#- 393 AdminInviteUserV4
eval_tap 0 393 'AdminInviteUserV4 # SKIP deprecated' test.out

#- 394 AuthenticationWithPlatformLinkV4
$CLI_EXE \
    --sn iam \
    --op AuthenticationWithPlatformLinkV4 \
    --extend_exp 'false' \
    --client_id 'bKYNt5CT' \
    --linkingToken 'voCocadP' \
    --password 'hVYjIiWm' \
    --username 'VRllfeAM' \
    > test.out 2>&1
eval_tap $? 394 'AuthenticationWithPlatformLinkV4' test.out

#- 395 GenerateTokenByNewHeadlessAccountV4
$CLI_EXE \
    --sn iam \
    --op GenerateTokenByNewHeadlessAccountV4 \
    --additionalData 'PpATLRlB' \
    --extend_exp 'false' \
    --linkingToken 'WVkYO9v9' \
    > test.out 2>&1
eval_tap $? 395 'GenerateTokenByNewHeadlessAccountV4' test.out

#- 396 Verify2faCodeV4
$CLI_EXE \
    --sn iam \
    --op Verify2faCodeV4 \
    --code 'br8g7ybQ' \
    --factor 'iHanRgo0' \
    --mfaToken 'UUWLYd1G' \
    --rememberDevice 'true' \
    > test.out 2>&1
eval_tap $? 396 'Verify2faCodeV4' test.out

#- 397 PlatformTokenGrantV4
$CLI_EXE \
    --sn iam \
    --op PlatformTokenGrantV4 \
    --platformId 'AlirdDAF' \
    --codeChallenge 'xSDiRL6V' \
    --codeChallengeMethod 'S256' \
    --additionalData 'PiVoVnPz' \
    --client_id 'oQUHUZvl' \
    --createHeadless 'false' \
    --device_id 'icGPYlhE' \
    --macAddress 'P9nPo6mz' \
    --platform_token 'yuGVcHrq' \
    --serviceLabel '0.47578527474669985' \
    --skipSetCookie 'true' \
    > test.out 2>&1
eval_tap $? 397 'PlatformTokenGrantV4' test.out

#- 398 SimultaneousLoginV4
$CLI_EXE \
    --sn iam \
    --op SimultaneousLoginV4 \
    --codeChallenge 'jdbpZZCX' \
    --codeChallengeMethod 'S256' \
    --simultaneousPlatform 'PDztwVp3' \
    --simultaneousTicket 'mFCEFOtm' \
    --nativePlatform 'epicgames' \
    --nativePlatformTicket 'vXV2xceU' \
    > test.out 2>&1
eval_tap $? 398 'SimultaneousLoginV4' test.out

#- 399 TokenGrantV4
$CLI_EXE \
    --sn iam \
    --op TokenGrantV4 \
    --codeChallenge '5RDNaK1P' \
    --codeChallengeMethod 'S256' \
    --additionalData 'cRUUH6Ph' \
    --client_id '3JMmAlIC' \
    --client_secret 'zT5PoPhw' \
    --code 'JpIc1znr' \
    --code_verifier 'rUqVpB0m' \
    --extendNamespace 'Oz5XKsMM' \
    --extend_exp 'true' \
    --login_queue_ticket 'D31teVKN' \
    --password 'qDf8uqyx' \
    --redirect_uri 'JbPjaDbS' \
    --refresh_token 'mluyWVgc' \
    --scope 'he84Z9Ov' \
    --username '7O9ZSPME' \
    --grant_type 'refresh_token' \
    > test.out 2>&1
eval_tap $? 399 'TokenGrantV4' test.out

#- 400 RequestTargetTokenResponseV4
$CLI_EXE \
    --sn iam \
    --op RequestTargetTokenResponseV4 \
    --additionalData '3hn5Ugvt' \
    --code '8yWjrlcP' \
    > test.out 2>&1
eval_tap $? 400 'RequestTargetTokenResponseV4' test.out

#- 401 PublicListUserIDByPlatformUserIDsV4
# body param: body
echo '{"pidType": "x6hgvwDb", "platformUserIds": ["Tucb2Geh", "dWvu94d6", "Lz8XeR9p"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicListUserIDByPlatformUserIDsV4 \
    --namespace $AB_NAMESPACE \
    --platformId 'Cc6sjDFv' \
    --rawPUID 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 401 'PublicListUserIDByPlatformUserIDsV4' test.out

#- 402 PublicGetUserByPlatformUserIDV4
$CLI_EXE \
    --sn iam \
    --op PublicGetUserByPlatformUserIDV4 \
    --namespace $AB_NAMESPACE \
    --platformId '7Peg3Uqj' \
    --platformUserId '7jT9SLK8' \
    > test.out 2>&1
eval_tap $? 402 'PublicGetUserByPlatformUserIDV4' test.out

#- 403 PublicCreateTestUserV4
# body param: body
echo '{"acceptedPolicies": [{"isAccepted": true, "localizedPolicyVersionId": "36nJVeTk", "policyId": "evi59HXO", "policyVersionId": "JuLerSCg"}, {"isAccepted": false, "localizedPolicyVersionId": "pcDlR5dg", "policyId": "iQNOwlW2", "policyVersionId": "0o5VCXYo"}, {"isAccepted": true, "localizedPolicyVersionId": "i8LFyWyY", "policyId": "1TySqaCg", "policyVersionId": "0m2vvD9q"}], "authType": "EMAILPASSWD", "country": "019cOKqn", "dateOfBirth": "xRvWzg3o", "displayName": "f9m4oI0n", "emailAddress": "8SeSPrX4", "password": "ThFepEm3", "passwordMD5Sum": "jWaNVmIj", "uniqueDisplayName": "uDTtoF9K", "username": "skvd9aDF", "verified": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicCreateTestUserV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 403 'PublicCreateTestUserV4' test.out

#- 404 PublicCreateUserV4
# body param: body
echo '{"acceptedPolicies": [{"isAccepted": false, "localizedPolicyVersionId": "DYDWDBoc", "policyId": "gX0nseK7", "policyVersionId": "OBz7gk2K"}, {"isAccepted": false, "localizedPolicyVersionId": "qdZB7jx2", "policyId": "txja2L5r", "policyVersionId": "d7s5OnBs"}, {"isAccepted": true, "localizedPolicyVersionId": "odE7yDQf", "policyId": "3x5UqGzM", "policyVersionId": "FCvbs8ra"}], "authType": "EMAILPASSWD", "code": "jMd0GVEL", "country": "KiKKhp1T", "dateOfBirth": "Cw4RX7OP", "displayName": "WdzwZsEb", "emailAddress": "MTxuhNHk", "password": "pxxD1Rfx", "passwordMD5Sum": "tQubUOPb", "reachMinimumAge": true, "uniqueDisplayName": "dWVcGCCx", "username": "rrX3b2zF"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicCreateUserV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 404 'PublicCreateUserV4' test.out

#- 405 CreateUserFromInvitationV4
# body param: body
echo '{"acceptedPolicies": [{"isAccepted": false, "localizedPolicyVersionId": "5jBTr3zc", "policyId": "k1fA88WB", "policyVersionId": "2qsfnFLl"}, {"isAccepted": true, "localizedPolicyVersionId": "9PipsTid", "policyId": "4VifAm0n", "policyVersionId": "n64xG8vN"}, {"isAccepted": false, "localizedPolicyVersionId": "fdhmPf8Z", "policyId": "9g2cnp3e", "policyVersionId": "61I6xyZl"}], "authType": "EMAILPASSWD", "code": "zaBUGqqf", "country": "p382HvDd", "dateOfBirth": "6VkICwHl", "displayName": "AGeWBNbk", "emailAddress": "siwwWDk2", "password": "T9cdHSWD", "passwordMD5Sum": "XOMFhOug", "reachMinimumAge": false, "uniqueDisplayName": "CxT8FovQ", "username": "qWzweJfs"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op CreateUserFromInvitationV4 \
    --invitationId 'k8FaIMks' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 405 'CreateUserFromInvitationV4' test.out

#- 406 PublicUpdateUserV4
# body param: body
echo '{"avatarUrl": "bvoERIaM", "country": "IuTDqkAy", "dateOfBirth": "u4qVF4me", "displayName": "EddqsAOM", "languageTag": "dAMfNtjg", "uniqueDisplayName": "wYA4HzSe", "userName": "VbyNJYRb"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpdateUserV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 406 'PublicUpdateUserV4' test.out

#- 407 PublicUpdateUserEmailAddressV4
# body param: body
echo '{"code": "ATHI3gLp", "emailAddress": "Cam6ELyC"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpdateUserEmailAddressV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 407 'PublicUpdateUserEmailAddressV4' test.out

#- 408 PublicUpgradeHeadlessAccountWithVerificationCodeV4
# body param: body
echo '{"code": "2PQ9b5SE", "country": "xzyE66eH", "dateOfBirth": "qTmDm0P8", "displayName": "B7rNiooI", "emailAddress": "IVXD8VSV", "password": "NkMEJ2ae", "reachMinimumAge": true, "uniqueDisplayName": "UxJb9VLy", "username": "rd3hJ5PV", "validateOnly": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpgradeHeadlessAccountWithVerificationCodeV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 408 'PublicUpgradeHeadlessAccountWithVerificationCodeV4' test.out

#- 409 PublicUpgradeHeadlessAccountV4
# body param: body
echo '{"dateOfBirth": "2n9HuaJL", "displayName": "elyouw6J", "emailAddress": "IMu5Dz9V", "password": "gn84gVyA", "uniqueDisplayName": "Lx0KRb5O", "username": "4yXQEKPZ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpgradeHeadlessAccountV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 409 'PublicUpgradeHeadlessAccountV4' test.out

#- 410 PublicDisableMyAuthenticatorV4
# body param: body
echo '{"factor": "J1dBNTxY", "mfaToken": "2ZJLfLO4"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicDisableMyAuthenticatorV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 410 'PublicDisableMyAuthenticatorV4' test.out

#- 411 PublicEnableMyAuthenticatorV4
$CLI_EXE \
    --sn iam \
    --op PublicEnableMyAuthenticatorV4 \
    --namespace $AB_NAMESPACE \
    --code 'ma79pEfR' \
    > test.out 2>&1
eval_tap $? 411 'PublicEnableMyAuthenticatorV4' test.out

#- 412 PublicGenerateMyAuthenticatorKeyV4
$CLI_EXE \
    --sn iam \
    --op PublicGenerateMyAuthenticatorKeyV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 412 'PublicGenerateMyAuthenticatorKeyV4' test.out

#- 413 PublicGetMyBackupCodesV4
eval_tap 0 413 'PublicGetMyBackupCodesV4 # SKIP deprecated' test.out

#- 414 PublicGenerateMyBackupCodesV4
eval_tap 0 414 'PublicGenerateMyBackupCodesV4 # SKIP deprecated' test.out

#- 415 PublicDisableMyBackupCodesV4
# body param: body
echo '{"factor": "AviCV5UM", "mfaToken": "JF9Aee42"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicDisableMyBackupCodesV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 415 'PublicDisableMyBackupCodesV4' test.out

#- 416 PublicDownloadMyBackupCodesV4
eval_tap 0 416 'PublicDownloadMyBackupCodesV4 # SKIP deprecated' test.out

#- 417 PublicEnableMyBackupCodesV4
eval_tap 0 417 'PublicEnableMyBackupCodesV4 # SKIP deprecated' test.out

#- 418 PublicGetBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op PublicGetBackupCodesV4 \
    --namespace $AB_NAMESPACE \
    --languageTag 'VeDGwp5h' \
    > test.out 2>&1
eval_tap $? 418 'PublicGetBackupCodesV4' test.out

#- 419 PublicGenerateBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op PublicGenerateBackupCodesV4 \
    --namespace $AB_NAMESPACE \
    --languageTag 'xrPiPTci' \
    > test.out 2>&1
eval_tap $? 419 'PublicGenerateBackupCodesV4' test.out

#- 420 PublicEnableBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op PublicEnableBackupCodesV4 \
    --namespace $AB_NAMESPACE \
    --languageTag '3fhvtmLS' \
    > test.out 2>&1
eval_tap $? 420 'PublicEnableBackupCodesV4' test.out

#- 421 PublicChallengeMyMFAV4
$CLI_EXE \
    --sn iam \
    --op PublicChallengeMyMFAV4 \
    --namespace $AB_NAMESPACE \
    --code 'kSpunEmA' \
    --factor 'VHJ3MVXr' \
    > test.out 2>&1
eval_tap $? 421 'PublicChallengeMyMFAV4' test.out

#- 422 PublicRemoveTrustedDeviceV4
$CLI_EXE \
    --sn iam \
    --op PublicRemoveTrustedDeviceV4 \
    --namespace $AB_NAMESPACE \
    --device_token 'LCQSBFfb' \
    > test.out 2>&1
eval_tap $? 422 'PublicRemoveTrustedDeviceV4' test.out

#- 423 PublicSendMyMFAEmailCodeV4
$CLI_EXE \
    --sn iam \
    --op PublicSendMyMFAEmailCodeV4 \
    --namespace $AB_NAMESPACE \
    --action '4zyLBzxW' \
    --languageTag 'IrkfaAW8' \
    > test.out 2>&1
eval_tap $? 423 'PublicSendMyMFAEmailCodeV4' test.out

#- 424 PublicDisableMyEmailV4
# body param: body
echo '{"factor": "9vTQgTiJ", "mfaToken": "mbUr3rT1"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicDisableMyEmailV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 424 'PublicDisableMyEmailV4' test.out

#- 425 PublicEnableMyEmailV4
$CLI_EXE \
    --sn iam \
    --op PublicEnableMyEmailV4 \
    --namespace $AB_NAMESPACE \
    --code 'NS2Oztr5' \
    > test.out 2>&1
eval_tap $? 425 'PublicEnableMyEmailV4' test.out

#- 426 PublicGetMyEnabledFactorsV4
$CLI_EXE \
    --sn iam \
    --op PublicGetMyEnabledFactorsV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 426 'PublicGetMyEnabledFactorsV4' test.out

#- 427 PublicMakeFactorMyDefaultV4
$CLI_EXE \
    --sn iam \
    --op PublicMakeFactorMyDefaultV4 \
    --namespace $AB_NAMESPACE \
    --factor 'mdS9Fy4x' \
    > test.out 2>&1
eval_tap $? 427 'PublicMakeFactorMyDefaultV4' test.out

#- 428 PublicGetMyOwnMFAStatusV4
$CLI_EXE \
    --sn iam \
    --op PublicGetMyOwnMFAStatusV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 428 'PublicGetMyOwnMFAStatusV4' test.out

#- 429 PublicGetMyMFAStatusV4
eval_tap 0 429 'PublicGetMyMFAStatusV4 # SKIP deprecated' test.out

#- 430 PublicGetUserPublicInfoByUserIdV4
$CLI_EXE \
    --sn iam \
    --op PublicGetUserPublicInfoByUserIdV4 \
    --namespace $AB_NAMESPACE \
    --userId 'uIqRBgCD' \
    > test.out 2>&1
eval_tap $? 430 'PublicGetUserPublicInfoByUserIdV4' test.out

#- 431 PublicInviteUserV4
# body param: body
echo '{"additionalData": "gMfhc8a5", "emailAddress": "pRKwoHDO", "languageTag": "MramZrzY", "namespace": "vDTxk1GY", "namespaceDisplayName": "EQwsv79F"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicInviteUserV4 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 431 'PublicInviteUserV4' test.out

#- 432 PublicUpgradeHeadlessWithCodeV4Forward
# body param: body
echo '{"acceptedPolicies": [{"isAccepted": false, "localizedPolicyVersionId": "Ypr0RJ2t", "policyId": "cybPJsfF", "policyVersionId": "p9l7zbtL"}, {"isAccepted": true, "localizedPolicyVersionId": "G4NJgyW4", "policyId": "dzapRjie", "policyVersionId": "L2eINd6u"}, {"isAccepted": true, "localizedPolicyVersionId": "5h3MAG7L", "policyId": "iGCYMIVP", "policyVersionId": "t9NfbLoZ"}], "code": "oBvF6vsx", "country": "mQzt6smo", "dateOfBirth": "8v6r9vK5", "displayName": "3ivkCDJS", "emailAddress": "kgRKed7N", "password": "XeZLPvyz", "reachMinimumAge": false, "uniqueDisplayName": "U9WikdNp", "username": "2AZYN78b", "validateOnly": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpgradeHeadlessWithCodeV4Forward \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 432 'PublicUpgradeHeadlessWithCodeV4Forward' test.out


# remove artifacts
rm -f "$CLI_TOKEN_FILE"
rm -f "$TEMP_JSON_INPUT"
rm -f "$TEMP_FILE_UPLOAD"

exit $EXIT_CODE