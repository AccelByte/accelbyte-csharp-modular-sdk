#!/usr/bin/env bash

# Copyright (c) 2021 AccelByte Inc. All Rights Reserved.
# This is licensed software from AccelByte Inc, for limitations
# and restrictions contact your company contract manager.

# This code is generated by tool. DO NOT EDIT.

# Meta:
# - random seed: 
# - template file: 

# Instructions:
# - Run the Justice SDK Mock Server first before running this script.

export AB_BASE_URL="http://127.0.0.1:8080"
export AB_CLIENT_ID="admin"
export AB_CLIENT_SECRET="admin"
export AB_NAMESPACE="test"
export AB_APP_NAME="UnitTest"

EXIT_CODE=0

eval_tap() {
  if [ $1 -eq 0 ]; then
    echo "ok $2 - $3"
  else
    EXIT_CODE=1
    echo "not ok $2 - $3"
    sed 's/^/# /g' $4
  fi
  rm -f $4
}

CLI_EXE="AccelByte.Sdk.Sample.Cli"
CLI_TOKEN_FILE="$(dirname "$(which $CLI_EXE)")/token.json"
TEMP_JSON_INPUT="input_json.json"
TEMP_FILE_UPLOAD="file_upload.bin"

echo "TAP version 13"
echo "1..435"

#- 1 Login
$CLI_EXE --op login --lt user --user user --pass user > test.out 2>&1
eval_tap $? 1 'Login' test.out

if [ $EXIT_CODE -ne 0 ]; then
  echo "Bail out! Login failed."
  exit $EXIT_CODE
fi

# echo "foo" > "$CLI_TOKEN_FILE"

#- 2 GetBansType
eval_tap 0 2 'GetBansType # SKIP deprecated' test.out

#- 3 GetListBanReason
eval_tap 0 3 'GetListBanReason # SKIP deprecated' test.out

#- 4 GetClients
eval_tap 0 4 'GetClients # SKIP deprecated' test.out

#- 5 CreateClient
eval_tap 0 5 'CreateClient # SKIP deprecated' test.out

#- 6 GetClient
eval_tap 0 6 'GetClient # SKIP deprecated' test.out

#- 7 UpdateClient
eval_tap 0 7 'UpdateClient # SKIP deprecated' test.out

#- 8 DeleteClient
eval_tap 0 8 'DeleteClient # SKIP deprecated' test.out

#- 9 UpdateClientPermission
eval_tap 0 9 'UpdateClientPermission # SKIP deprecated' test.out

#- 10 AddClientPermission
eval_tap 0 10 'AddClientPermission # SKIP deprecated' test.out

#- 11 DeleteClientPermission
eval_tap 0 11 'DeleteClientPermission # SKIP deprecated' test.out

#- 12 UpdateClientSecret
eval_tap 0 12 'UpdateClientSecret # SKIP deprecated' test.out

#- 13 GetClientsbyNamespace
eval_tap 0 13 'GetClientsbyNamespace # SKIP deprecated' test.out

#- 14 CreateClientByNamespace
eval_tap 0 14 'CreateClientByNamespace # SKIP deprecated' test.out

#- 15 DeleteClientByNamespace
eval_tap 0 15 'DeleteClientByNamespace # SKIP deprecated' test.out

#- 16 CreateUser
eval_tap 0 16 'CreateUser # SKIP deprecated' test.out

#- 17 GetAdminUsersByRoleID
eval_tap 0 17 'GetAdminUsersByRoleID # SKIP deprecated' test.out

#- 18 GetUserByLoginID
eval_tap 0 18 'GetUserByLoginID # SKIP deprecated' test.out

#- 19 GetUserByPlatformUserID
eval_tap 0 19 'GetUserByPlatformUserID # SKIP deprecated' test.out

#- 20 ForgotPassword
eval_tap 0 20 'ForgotPassword # SKIP deprecated' test.out

#- 21 GetUsersByLoginIds
eval_tap 0 21 'GetUsersByLoginIds # SKIP deprecated' test.out

#- 22 ResetPassword
eval_tap 0 22 'ResetPassword # SKIP deprecated' test.out

#- 23 SearchUser
eval_tap 0 23 'SearchUser # SKIP deprecated' test.out

#- 24 GetUserByUserID
eval_tap 0 24 'GetUserByUserID # SKIP deprecated' test.out

#- 25 UpdateUser
eval_tap 0 25 'UpdateUser # SKIP deprecated' test.out

#- 26 DeleteUser
eval_tap 0 26 'DeleteUser # SKIP deprecated' test.out

#- 27 BanUser
eval_tap 0 27 'BanUser # SKIP deprecated' test.out

#- 28 GetUserBanHistory
eval_tap 0 28 'GetUserBanHistory # SKIP deprecated' test.out

#- 29 DisableUserBan
eval_tap 0 29 'DisableUserBan # SKIP deprecated' test.out

#- 30 EnableUserBan
eval_tap 0 30 'EnableUserBan # SKIP deprecated' test.out

#- 31 ListCrossNamespaceAccountLink
eval_tap 0 31 'ListCrossNamespaceAccountLink # SKIP deprecated' test.out

#- 32 DisableUser
eval_tap 0 32 'DisableUser # SKIP deprecated' test.out

#- 33 EnableUser
eval_tap 0 33 'EnableUser # SKIP deprecated' test.out

#- 34 GetUserInformation
eval_tap 0 34 'GetUserInformation # SKIP deprecated' test.out

#- 35 DeleteUserInformation
eval_tap 0 35 'DeleteUserInformation # SKIP deprecated' test.out

#- 36 GetUserLoginHistories
eval_tap 0 36 'GetUserLoginHistories # SKIP deprecated' test.out

#- 37 UpdatePassword
eval_tap 0 37 'UpdatePassword # SKIP deprecated' test.out

#- 38 SaveUserPermission
eval_tap 0 38 'SaveUserPermission # SKIP deprecated' test.out

#- 39 AddUserPermission
eval_tap 0 39 'AddUserPermission # SKIP deprecated' test.out

#- 40 DeleteUserPermission
eval_tap 0 40 'DeleteUserPermission # SKIP deprecated' test.out

#- 41 GetUserPlatformAccounts
eval_tap 0 41 'GetUserPlatformAccounts # SKIP deprecated' test.out

#- 42 GetUserMapping
eval_tap 0 42 'GetUserMapping # SKIP deprecated' test.out

#- 43 GetUserJusticePlatformAccount
eval_tap 0 43 'GetUserJusticePlatformAccount # SKIP deprecated' test.out

#- 44 PlatformLink
eval_tap 0 44 'PlatformLink # SKIP deprecated' test.out

#- 45 PlatformUnlink
eval_tap 0 45 'PlatformUnlink # SKIP deprecated' test.out

#- 46 GetPublisherUser
eval_tap 0 46 'GetPublisherUser # SKIP deprecated' test.out

#- 47 SaveUserRoles
eval_tap 0 47 'SaveUserRoles # SKIP deprecated' test.out

#- 48 AddUserRole
eval_tap 0 48 'AddUserRole # SKIP deprecated' test.out

#- 49 DeleteUserRole
eval_tap 0 49 'DeleteUserRole # SKIP deprecated' test.out

#- 50 UpgradeHeadlessAccount
eval_tap 0 50 'UpgradeHeadlessAccount # SKIP deprecated' test.out

#- 51 UpgradeHeadlessAccountWithVerificationCode
eval_tap 0 51 'UpgradeHeadlessAccountWithVerificationCode # SKIP deprecated' test.out

#- 52 UserVerification
eval_tap 0 52 'UserVerification # SKIP deprecated' test.out

#- 53 SendVerificationCode
eval_tap 0 53 'SendVerificationCode # SKIP deprecated' test.out

#- 54 Authorization
eval_tap 0 54 'Authorization # SKIP deprecated' test.out

#- 55 GetJWKS
eval_tap 0 55 'GetJWKS # SKIP deprecated' test.out

#- 56 PlatformTokenRequestHandler
eval_tap 0 56 'PlatformTokenRequestHandler # SKIP deprecated' test.out

#- 57 RevokeUser
eval_tap 0 57 'RevokeUser # SKIP deprecated' test.out

#- 58 GetRevocationList
eval_tap 0 58 'GetRevocationList # SKIP deprecated' test.out

#- 59 RevokeToken
eval_tap 0 59 'RevokeToken # SKIP deprecated' test.out

#- 60 RevokeAUser
eval_tap 0 60 'RevokeAUser # SKIP deprecated' test.out

#- 61 TokenGrant
eval_tap 0 61 'TokenGrant # SKIP deprecated' test.out

#- 62 VerifyToken
eval_tap 0 62 'VerifyToken # SKIP deprecated' test.out

#- 63 GetRoles
eval_tap 0 63 'GetRoles # SKIP deprecated' test.out

#- 64 CreateRole
eval_tap 0 64 'CreateRole # SKIP deprecated' test.out

#- 65 GetRole
eval_tap 0 65 'GetRole # SKIP deprecated' test.out

#- 66 UpdateRole
eval_tap 0 66 'UpdateRole # SKIP deprecated' test.out

#- 67 DeleteRole
eval_tap 0 67 'DeleteRole # SKIP deprecated' test.out

#- 68 GetRoleAdminStatus
eval_tap 0 68 'GetRoleAdminStatus # SKIP deprecated' test.out

#- 69 SetRoleAsAdmin
eval_tap 0 69 'SetRoleAsAdmin # SKIP deprecated' test.out

#- 70 RemoveRoleAdmin
eval_tap 0 70 'RemoveRoleAdmin # SKIP deprecated' test.out

#- 71 GetRoleManagers
eval_tap 0 71 'GetRoleManagers # SKIP deprecated' test.out

#- 72 AddRoleManagers
eval_tap 0 72 'AddRoleManagers # SKIP deprecated' test.out

#- 73 RemoveRoleManagers
eval_tap 0 73 'RemoveRoleManagers # SKIP deprecated' test.out

#- 74 GetRoleMembers
eval_tap 0 74 'GetRoleMembers # SKIP deprecated' test.out

#- 75 AddRoleMembers
eval_tap 0 75 'AddRoleMembers # SKIP deprecated' test.out

#- 76 RemoveRoleMembers
eval_tap 0 76 'RemoveRoleMembers # SKIP deprecated' test.out

#- 77 UpdateRolePermissions
eval_tap 0 77 'UpdateRolePermissions # SKIP deprecated' test.out

#- 78 AddRolePermission
eval_tap 0 78 'AddRolePermission # SKIP deprecated' test.out

#- 79 DeleteRolePermission
eval_tap 0 79 'DeleteRolePermission # SKIP deprecated' test.out

#- 80 AdminGetAgeRestrictionStatusV2
eval_tap 0 80 'AdminGetAgeRestrictionStatusV2 # SKIP deprecated' test.out

#- 81 AdminUpdateAgeRestrictionConfigV2
eval_tap 0 81 'AdminUpdateAgeRestrictionConfigV2 # SKIP deprecated' test.out

#- 82 GetListCountryAgeRestriction
eval_tap 0 82 'GetListCountryAgeRestriction # SKIP deprecated' test.out

#- 83 UpdateCountryAgeRestriction
eval_tap 0 83 'UpdateCountryAgeRestriction # SKIP deprecated' test.out

#- 84 AdminSearchUsersV2
eval_tap 0 84 'AdminSearchUsersV2 # SKIP deprecated' test.out

#- 85 AdminGetUserByUserIdV2
eval_tap 0 85 'AdminGetUserByUserIdV2 # SKIP deprecated' test.out

#- 86 AdminUpdateUserV2
eval_tap 0 86 'AdminUpdateUserV2 # SKIP deprecated' test.out

#- 87 AdminBanUserV2
eval_tap 0 87 'AdminBanUserV2 # SKIP deprecated' test.out

#- 88 AdminGetUserBanV2
eval_tap 0 88 'AdminGetUserBanV2 # SKIP deprecated' test.out

#- 89 AdminDisableUserV2
eval_tap 0 89 'AdminDisableUserV2 # SKIP deprecated' test.out

#- 90 AdminEnableUserV2
eval_tap 0 90 'AdminEnableUserV2 # SKIP deprecated' test.out

#- 91 AdminResetPasswordV2
eval_tap 0 91 'AdminResetPasswordV2 # SKIP deprecated' test.out

#- 92 AdminDeletePlatformLinkV2
eval_tap 0 92 'AdminDeletePlatformLinkV2 # SKIP deprecated' test.out

#- 93 AdminPutUserRolesV2
eval_tap 0 93 'AdminPutUserRolesV2 # SKIP deprecated' test.out

#- 94 AdminCreateUserRolesV2
eval_tap 0 94 'AdminCreateUserRolesV2 # SKIP deprecated' test.out

#- 95 PublicGetCountryAgeRestriction
eval_tap 0 95 'PublicGetCountryAgeRestriction # SKIP deprecated' test.out

#- 96 PublicCreateUserV2
eval_tap 0 96 'PublicCreateUserV2 # SKIP deprecated' test.out

#- 97 PublicForgotPasswordV2
eval_tap 0 97 'PublicForgotPasswordV2 # SKIP deprecated' test.out

#- 98 PublicResetPasswordV2
eval_tap 0 98 'PublicResetPasswordV2 # SKIP deprecated' test.out

#- 99 PublicGetUserByUserIDV2
eval_tap 0 99 'PublicGetUserByUserIDV2 # SKIP deprecated' test.out

#- 100 PublicUpdateUserV2
eval_tap 0 100 'PublicUpdateUserV2 # SKIP deprecated' test.out

#- 101 PublicGetUserBan
eval_tap 0 101 'PublicGetUserBan # SKIP deprecated' test.out

#- 102 PublicUpdatePasswordV2
eval_tap 0 102 'PublicUpdatePasswordV2 # SKIP deprecated' test.out

#- 103 GetListJusticePlatformAccounts
eval_tap 0 103 'GetListJusticePlatformAccounts # SKIP deprecated' test.out

#- 104 PublicPlatformLinkV2
eval_tap 0 104 'PublicPlatformLinkV2 # SKIP deprecated' test.out

#- 105 PublicDeletePlatformLinkV2
eval_tap 0 105 'PublicDeletePlatformLinkV2 # SKIP deprecated' test.out

#- 106 AdminGetBansTypeV3
$CLI_EXE \
    --sn iam \
    --op AdminGetBansTypeV3 \
    > test.out 2>&1
eval_tap $? 106 'AdminGetBansTypeV3' test.out

#- 107 AdminGetListBanReasonV3
$CLI_EXE \
    --sn iam \
    --op AdminGetListBanReasonV3 \
    > test.out 2>&1
eval_tap $? 107 'AdminGetListBanReasonV3' test.out

#- 108 AdminListClientAvailablePermissions
$CLI_EXE \
    --sn iam \
    --op AdminListClientAvailablePermissions \
    --excludePermissions 'true' \
    > test.out 2>&1
eval_tap $? 108 'AdminListClientAvailablePermissions' test.out

#- 109 AdminUpdateAvailablePermissionsByModule
# body param: body
echo '{"modules": [{"docLink": "N9WSphOw", "groups": [{"group": "SF8zFNJ4", "groupId": "qTXXRd9B", "permissions": [{"allowedActions": [4, 7, 68], "resource": "eFRzSmRY"}, {"allowedActions": [85, 0, 16], "resource": "WKUaiZNo"}, {"allowedActions": [77, 92, 43], "resource": "8WCL9kOh"}]}, {"group": "eTm5aGKc", "groupId": "umKhv7Ex", "permissions": [{"allowedActions": [4, 84, 53], "resource": "MOlgBuV5"}, {"allowedActions": [42, 11, 81], "resource": "B03lF5bp"}, {"allowedActions": [86, 57, 36], "resource": "86s5Ml8G"}]}, {"group": "yyxfKqOw", "groupId": "3GOm5GF4", "permissions": [{"allowedActions": [10, 100, 38], "resource": "C3ew3bvG"}, {"allowedActions": [64, 24, 44], "resource": "KnOxEnmq"}, {"allowedActions": [40, 100, 27], "resource": "fNFtTIt6"}]}], "module": "CcfYUk93", "moduleId": "RDJXE3Zu"}, {"docLink": "q4uAH506", "groups": [{"group": "msuBs4OB", "groupId": "UJlJvex6", "permissions": [{"allowedActions": [56, 88, 73], "resource": "cup1VZEl"}, {"allowedActions": [69, 3, 9], "resource": "Rvh0Zdhz"}, {"allowedActions": [42, 94, 38], "resource": "d3rR6st3"}]}, {"group": "gb4yy9gm", "groupId": "A43H5XnA", "permissions": [{"allowedActions": [38, 48, 10], "resource": "1McwmEXJ"}, {"allowedActions": [19, 38, 83], "resource": "WGqVb5Lx"}, {"allowedActions": [16, 91, 98], "resource": "zUaPEsTR"}]}, {"group": "1RHqKZeV", "groupId": "DpSr2CTk", "permissions": [{"allowedActions": [6, 57, 0], "resource": "IvITx3Jm"}, {"allowedActions": [43, 97, 76], "resource": "4FjIIAoo"}, {"allowedActions": [44, 21, 51], "resource": "86MnDK4X"}]}], "module": "fbSZTmIt", "moduleId": "yWtXm19o"}, {"docLink": "L19SweWe", "groups": [{"group": "ikFXkz4p", "groupId": "sweHlUtk", "permissions": [{"allowedActions": [94, 88, 52], "resource": "534W5VWJ"}, {"allowedActions": [30, 24, 57], "resource": "LempdzKX"}, {"allowedActions": [13, 13, 42], "resource": "zCXQHCfe"}]}, {"group": "MMAdeu6d", "groupId": "wCLXjb1X", "permissions": [{"allowedActions": [20, 1, 50], "resource": "1tcTLYAn"}, {"allowedActions": [52, 28, 7], "resource": "olnGw2Wy"}, {"allowedActions": [25, 35, 92], "resource": "peihyzFN"}]}, {"group": "Jpji2JzN", "groupId": "hgfy0lRU", "permissions": [{"allowedActions": [82, 77, 0], "resource": "IirGwD7e"}, {"allowedActions": [87, 10, 65], "resource": "rF0udihb"}, {"allowedActions": [74, 81, 15], "resource": "o6XnQm8W"}]}], "module": "wTBfUvpz", "moduleId": "boNn6b4j"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateAvailablePermissionsByModule \
    --forceDelete 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 109 'AdminUpdateAvailablePermissionsByModule' test.out

#- 110 AdminDeleteConfigPermissionsByGroup
# body param: body
echo '{"groupId": "LlvcwnJT", "moduleId": "FzHReiBT"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDeleteConfigPermissionsByGroup \
    --forceDelete 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 110 'AdminDeleteConfigPermissionsByGroup' test.out

#- 111 AdminListClientTemplates
$CLI_EXE \
    --sn iam \
    --op AdminListClientTemplates \
    > test.out 2>&1
eval_tap $? 111 'AdminListClientTemplates' test.out

#- 112 AdminGetInputValidations
$CLI_EXE \
    --sn iam \
    --op AdminGetInputValidations \
    > test.out 2>&1
eval_tap $? 112 'AdminGetInputValidations' test.out

#- 113 AdminUpdateInputValidations
# body param: body
echo '[{"field": "BinRAEgv", "validation": {"allowAllSpecialCharacters": false, "allowDigit": true, "allowLetter": false, "allowSpace": false, "allowUnicode": true, "avatarConfig": {"allowedPrefixes": ["TPrDnFHG", "g7XiZ1xS", "2WQmCoYI"], "preferRegex": true, "regex": "aJvikQnN"}, "blockedWord": ["Mz20FDvX", "jcI9Po6n", "b9wBtSXV"], "description": [{"language": "XTbVkD48", "message": ["9g89GrDU", "5XlFqpXL", "1q8FCBOI"]}, {"language": "zwypzc06", "message": ["LGCuxyvE", "zMZ8gnDt", "B6YJ3jR4"]}, {"language": "mjT7bSDI", "message": ["ne9v30lD", "FZn4VYU5", "S1z3LZmg"]}], "isCustomRegex": true, "letterCase": "OD9aVlBo", "maxLength": 58, "maxRepeatingAlphaNum": 0, "maxRepeatingSpecialCharacter": 97, "minCharType": 30, "minLength": 18, "profanityFilter": "ZMZZGEAq", "regex": "qdUYEncP", "specialCharacterLocation": "wpt6uhyp", "specialCharacters": ["YEVMtdvE", "kwjl7jux", "I65D8KT4"]}}, {"field": "AXsZgfUF", "validation": {"allowAllSpecialCharacters": true, "allowDigit": false, "allowLetter": false, "allowSpace": true, "allowUnicode": true, "avatarConfig": {"allowedPrefixes": ["i3QLOBsM", "Md7y0AhX", "hXQFfmnB"], "preferRegex": false, "regex": "CpWR3J0M"}, "blockedWord": ["rxOIjtZu", "M0lnSL3o", "IuodRXbV"], "description": [{"language": "aZ2P88k0", "message": ["5KoepNZO", "QZr8AXPP", "8yj8d3Mi"]}, {"language": "rU5c9vso", "message": ["MWmH4AwM", "LjZBq9Rt", "2A7gbtPM"]}, {"language": "XvSviCGe", "message": ["qvVNDssN", "HhCVVwVD", "6vEcJttX"]}], "isCustomRegex": false, "letterCase": "birWKuXD", "maxLength": 11, "maxRepeatingAlphaNum": 84, "maxRepeatingSpecialCharacter": 43, "minCharType": 42, "minLength": 91, "profanityFilter": "g2ghbgMu", "regex": "6ZgRTBwj", "specialCharacterLocation": "MBfbTVqw", "specialCharacters": ["CAAJOHWC", "NdMuN6Y5", "1Wy9YaLR"]}}, {"field": "JhfqV1ME", "validation": {"allowAllSpecialCharacters": false, "allowDigit": false, "allowLetter": true, "allowSpace": false, "allowUnicode": true, "avatarConfig": {"allowedPrefixes": ["4CVLxrUF", "d1hNHGEF", "tgPDyfHv"], "preferRegex": false, "regex": "Mcny2XC3"}, "blockedWord": ["mtlzGGqY", "1UQyn1e7", "y6P88GI6"], "description": [{"language": "wrGE2s8E", "message": ["quhs8vIk", "Z0h0wdzQ", "UO39sFSr"]}, {"language": "lfELHPCQ", "message": ["Roz9zKhF", "xPYYXRcR", "QQwT1EAP"]}, {"language": "pzWdp4va", "message": ["A6wXoDYR", "I2g8HBCp", "EHb1UYFg"]}], "isCustomRegex": false, "letterCase": "1BbxuQLz", "maxLength": 60, "maxRepeatingAlphaNum": 76, "maxRepeatingSpecialCharacter": 44, "minCharType": 77, "minLength": 99, "profanityFilter": "fOEX1fgl", "regex": "Yt3B5MC0", "specialCharacterLocation": "Pr6lirvf", "specialCharacters": ["sCL1CyPC", "lRsh2nFm", "DuXBqMkG"]}}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateInputValidations \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 113 'AdminUpdateInputValidations' test.out

#- 114 AdminResetInputValidations
$CLI_EXE \
    --sn iam \
    --op AdminResetInputValidations \
    --field 'yEbPUZvs' \
    > test.out 2>&1
eval_tap $? 114 'AdminResetInputValidations' test.out

#- 115 ListAdminsV3
$CLI_EXE \
    --sn iam \
    --op ListAdminsV3 \
    --namespace $AB_NAMESPACE \
    --after '3CmpxVMo' \
    --before 'ZFbpJAe0' \
    --endDate 'J8VDOumB' \
    --limit '74' \
    --query 'dgbwNASI' \
    --roleId 'jsmGGenB' \
    --startDate 'dTfWoI3l' \
    > test.out 2>&1
eval_tap $? 115 'ListAdminsV3' test.out

#- 116 AdminGetAgeRestrictionStatusV3
$CLI_EXE \
    --sn iam \
    --op AdminGetAgeRestrictionStatusV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 116 'AdminGetAgeRestrictionStatusV3' test.out

#- 117 AdminUpdateAgeRestrictionConfigV3
# body param: body
echo '{"ageRestriction": 45, "enable": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateAgeRestrictionConfigV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 117 'AdminUpdateAgeRestrictionConfigV3' test.out

#- 118 AdminGetListCountryAgeRestrictionV3
$CLI_EXE \
    --sn iam \
    --op AdminGetListCountryAgeRestrictionV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 118 'AdminGetListCountryAgeRestrictionV3' test.out

#- 119 AdminUpdateCountryAgeRestrictionV3
# body param: body
echo '{"ageRestriction": 61}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateCountryAgeRestrictionV3 \
    --countryCode 'Jp4XI1z9' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 119 'AdminUpdateCountryAgeRestrictionV3' test.out

#- 120 AdminGetBannedUsersV3
$CLI_EXE \
    --sn iam \
    --op AdminGetBannedUsersV3 \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --banType '884FvTQs' \
    --limit '95' \
    --offset '9' \
    > test.out 2>&1
eval_tap $? 120 'AdminGetBannedUsersV3' test.out

#- 121 AdminBanUserBulkV3
# body param: body
echo '{"ban": "78TTuRTl", "comment": "Aedx8Zza", "endDate": "rAOdEwYh", "reason": "lROWSGsO", "skipNotif": false, "userIds": ["7xnPOkIu", "ECL3jFRi", "zBXHKJzH"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBanUserBulkV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 121 'AdminBanUserBulkV3' test.out

#- 122 AdminUnbanUserBulkV3
# body param: body
echo '{"bans": [{"banId": "LAPMs1yp", "userId": "lhSzcSFd"}, {"banId": "XZ8NH1Jq", "userId": "zc1E9T4R"}, {"banId": "oauBE6m2", "userId": "abt95WRA"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUnbanUserBulkV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 122 'AdminUnbanUserBulkV3' test.out

#- 123 AdminGetBansTypeWithNamespaceV3
$CLI_EXE \
    --sn iam \
    --op AdminGetBansTypeWithNamespaceV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 123 'AdminGetBansTypeWithNamespaceV3' test.out

#- 124 AdminGetClientsByNamespaceV3
$CLI_EXE \
    --sn iam \
    --op AdminGetClientsByNamespaceV3 \
    --namespace $AB_NAMESPACE \
    --clientId 'BIj0wDuI' \
    --clientName 'kH66DaKr' \
    --clientType 'wIYlarkv' \
    --limit '80' \
    --offset '55' \
    --skipLoginQueue 'false' \
    > test.out 2>&1
eval_tap $? 124 'AdminGetClientsByNamespaceV3' test.out

#- 125 AdminBulkUpdateClientsV3
# body param: body
echo '{"clientIds": ["RGZNWc3H", "gRZzEmVO", "zu1kBwEN"], "clientUpdateRequest": {"audiences": ["ulfWcrpB", "h9FJiWdp", "RHHQ458c"], "baseUri": "c32r2rl6", "clientName": "mtn6VOqH", "clientPermissions": [{"action": 53, "resource": "U16Vhi2s", "schedAction": 48, "schedCron": "BSqgsm0v", "schedRange": ["AYnHf7ST", "jXtLVxHo", "45QgtPXH"]}, {"action": 68, "resource": "nmvE86ad", "schedAction": 58, "schedCron": "aanYQJDI", "schedRange": ["FB3e1xZ4", "7DcX9jso", "5hBEbEfB"]}, {"action": 59, "resource": "6eLILX3Z", "schedAction": 57, "schedCron": "6T0Y0Vbp", "schedRange": ["ZKZaNRgZ", "OnINUqAR", "Hp1Vbs8D"]}], "clientPlatform": "hYHrE5DV", "deletable": true, "description": "orRcz5MA", "modulePermissions": [{"moduleId": "lmITiYvk", "selectedGroups": [{"groupId": "nJLXm5qT", "selectedActions": [41, 36, 33]}, {"groupId": "bYb2o5jz", "selectedActions": [1, 38, 61]}, {"groupId": "8XtUtdqk", "selectedActions": [81, 54, 29]}]}, {"moduleId": "ESKXU3TC", "selectedGroups": [{"groupId": "9OHCIW7c", "selectedActions": [68, 40, 78]}, {"groupId": "nbi8JkPo", "selectedActions": [87, 4, 76]}, {"groupId": "YIvWL5uN", "selectedActions": [8, 35, 96]}]}, {"moduleId": "XYROZFvf", "selectedGroups": [{"groupId": "GdmycQ8x", "selectedActions": [71, 33, 81]}, {"groupId": "xRzQXWD1", "selectedActions": [83, 47, 59]}, {"groupId": "UTqzwLQ2", "selectedActions": [61, 84, 1]}]}], "namespace": "elHOOerm", "oauthAccessTokenExpiration": 10, "oauthAccessTokenExpirationTimeUnit": "jkFxFFrs", "oauthRefreshTokenExpiration": 42, "oauthRefreshTokenExpirationTimeUnit": "rk2NfmBp", "redirectUri": "tgu8VbBD", "scopes": ["172iR9wQ", "stiUhqOX", "vgECpIT8"], "skipLoginQueue": false, "twoFactorEnabled": false}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBulkUpdateClientsV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 125 'AdminBulkUpdateClientsV3' test.out

#- 126 AdminCreateClientV3
# body param: body
echo '{"audiences": ["0z7ybF2a", "0ZvG2Ywt", "MDOxIMwR"], "baseUri": "ggvWQR5A", "clientId": "ldPpz3oF", "clientName": "2Rcxn0uj", "clientPermissions": [{"action": 12, "resource": "9pg9KjdM", "schedAction": 32, "schedCron": "gSl6fQTI", "schedRange": ["Gg4n0HHS", "LqfSZPcr", "I9QCSNjC"]}, {"action": 48, "resource": "7XcQ2VQD", "schedAction": 39, "schedCron": "d9eMlr5c", "schedRange": ["v3oCtVqH", "UVnM59SZ", "hTvPGpdZ"]}, {"action": 94, "resource": "zlEzCPj7", "schedAction": 74, "schedCron": "YzGSHh5f", "schedRange": ["E6UCUakP", "50qo2Wul", "lb3wBk4H"]}], "clientPlatform": "8r1aqeAU", "deletable": true, "description": "KflSViKa", "modulePermissions": [{"moduleId": "WqjgyepR", "selectedGroups": [{"groupId": "6g4srWve", "selectedActions": [92, 90, 34]}, {"groupId": "5pySRHFc", "selectedActions": [85, 25, 9]}, {"groupId": "PWJmGPT0", "selectedActions": [34, 5, 96]}]}, {"moduleId": "M2Yv4yYK", "selectedGroups": [{"groupId": "PCrPtjGH", "selectedActions": [52, 63, 97]}, {"groupId": "I1zRqZZg", "selectedActions": [44, 99, 49]}, {"groupId": "BOSr0r40", "selectedActions": [42, 77, 58]}]}, {"moduleId": "KbUzodOM", "selectedGroups": [{"groupId": "tbetrQIr", "selectedActions": [14, 64, 54]}, {"groupId": "KNtehVkv", "selectedActions": [21, 10, 74]}, {"groupId": "wilN4Tqx", "selectedActions": [77, 42, 55]}]}], "namespace": "TQlkI3u5", "oauthAccessTokenExpiration": 16, "oauthAccessTokenExpirationTimeUnit": "iyK6uvpZ", "oauthClientType": "bMTvZvxR", "oauthRefreshTokenExpiration": 23, "oauthRefreshTokenExpirationTimeUnit": "jlraG9As", "parentNamespace": "oWBKEJWV", "redirectUri": "aAX55FiI", "scopes": ["z4OukmMc", "PThtr2kV", "MIueRO7s"], "secret": "bSl8yp6h", "skipLoginQueue": false, "twoFactorEnabled": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminCreateClientV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 126 'AdminCreateClientV3' test.out

#- 127 AdminGetClientsbyNamespacebyIDV3
$CLI_EXE \
    --sn iam \
    --op AdminGetClientsbyNamespacebyIDV3 \
    --clientId '8AJjsjBO' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 127 'AdminGetClientsbyNamespacebyIDV3' test.out

#- 128 AdminDeleteClientV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteClientV3 \
    --clientId 'GNbZ1BXw' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 128 'AdminDeleteClientV3' test.out

#- 129 AdminUpdateClientV3
# body param: body
echo '{"audiences": ["6DSpUbXK", "WwQFyZYo", "DUPVAZXF"], "baseUri": "2itu78ZM", "clientName": "vjQ9Ytv8", "clientPermissions": [{"action": 12, "resource": "iDD0RGwR", "schedAction": 86, "schedCron": "2GY9Mz3R", "schedRange": ["2HHa5o8K", "5fIiskAI", "SWZ5imHi"]}, {"action": 28, "resource": "MXmG0yJd", "schedAction": 29, "schedCron": "BPVQFOds", "schedRange": ["pKKlvIDP", "IbUTUlap", "kaESV9xK"]}, {"action": 90, "resource": "kFNqGf99", "schedAction": 53, "schedCron": "zcV8bM3L", "schedRange": ["D4n8kGx2", "inzOC2L5", "BJG0Agke"]}], "clientPlatform": "gVlzAZoC", "deletable": false, "description": "DMO3dSQQ", "modulePermissions": [{"moduleId": "nLnxDmGs", "selectedGroups": [{"groupId": "o2aGDvmj", "selectedActions": [80, 16, 10]}, {"groupId": "QcJLWV51", "selectedActions": [26, 78, 92]}, {"groupId": "R5GlawAY", "selectedActions": [71, 28, 100]}]}, {"moduleId": "XKaMPbPR", "selectedGroups": [{"groupId": "2EV5Vm51", "selectedActions": [74, 23, 54]}, {"groupId": "uzK2E2JE", "selectedActions": [39, 85, 4]}, {"groupId": "596OIrk0", "selectedActions": [78, 78, 71]}]}, {"moduleId": "j5h2tQ14", "selectedGroups": [{"groupId": "wUYsQzlG", "selectedActions": [80, 86, 24]}, {"groupId": "0oS3lV7p", "selectedActions": [56, 36, 83]}, {"groupId": "qHN3ekoX", "selectedActions": [27, 25, 100]}]}], "namespace": "DM8hlYhz", "oauthAccessTokenExpiration": 44, "oauthAccessTokenExpirationTimeUnit": "GO83anUs", "oauthRefreshTokenExpiration": 74, "oauthRefreshTokenExpirationTimeUnit": "8kLa9qIB", "redirectUri": "VFsSo7f7", "scopes": ["bB80Wlmj", "VvKfH0zI", "j844pNli"], "skipLoginQueue": false, "twoFactorEnabled": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateClientV3 \
    --clientId 'dfgxOK1A' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 129 'AdminUpdateClientV3' test.out

#- 130 AdminUpdateClientPermissionV3
# body param: body
echo '{"permissions": [{"action": 93, "resource": "2HmPx1Lk"}, {"action": 11, "resource": "CtXHNZwf"}, {"action": 34, "resource": "zmXHXqe1"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateClientPermissionV3 \
    --clientId '1mcX1NvJ' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 130 'AdminUpdateClientPermissionV3' test.out

#- 131 AdminAddClientPermissionsV3
# body param: body
echo '{"permissions": [{"action": 60, "resource": "5UwM2PW8"}, {"action": 15, "resource": "vetDWTK1"}, {"action": 93, "resource": "TSDYKc07"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddClientPermissionsV3 \
    --clientId 'RIQDgtXL' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 131 'AdminAddClientPermissionsV3' test.out

#- 132 AdminDeleteClientPermissionV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteClientPermissionV3 \
    --action '29' \
    --clientId 'G9GLDLAx' \
    --namespace $AB_NAMESPACE \
    --resource 'ffh7RbKL' \
    > test.out 2>&1
eval_tap $? 132 'AdminDeleteClientPermissionV3' test.out

#- 133 AdminGetConfigValueV3
$CLI_EXE \
    --sn iam \
    --op AdminGetConfigValueV3 \
    --configKey '1obYNmCQ' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 133 'AdminGetConfigValueV3' test.out

#- 134 AdminGetCountryListV3
$CLI_EXE \
    --sn iam \
    --op AdminGetCountryListV3 \
    --namespace $AB_NAMESPACE \
    --filterBlacklist 'true' \
    > test.out 2>&1
eval_tap $? 134 'AdminGetCountryListV3' test.out

#- 135 AdminGetCountryBlacklistV3
$CLI_EXE \
    --sn iam \
    --op AdminGetCountryBlacklistV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 135 'AdminGetCountryBlacklistV3' test.out

#- 136 AdminAddCountryBlacklistV3
# body param: body
echo '{"blacklist": ["CetYLvMb", "BkOb1N96", "uwFIDlVj"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddCountryBlacklistV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 136 'AdminAddCountryBlacklistV3' test.out

#- 137 AdminGetLoginAllowlistV3
$CLI_EXE \
    --sn iam \
    --op AdminGetLoginAllowlistV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 137 'AdminGetLoginAllowlistV3' test.out

#- 138 AdminUpdateLoginAllowlistV3
# body param: body
echo '{"active": true, "roleIds": ["VmLxgaXW", "rjZ7lgSW", "0sGamSYF"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateLoginAllowlistV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 138 'AdminUpdateLoginAllowlistV3' test.out

#- 139 RetrieveAllThirdPartyLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op RetrieveAllThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 139 'RetrieveAllThirdPartyLoginPlatformCredentialV3' test.out

#- 140 RetrieveAllActiveThirdPartyLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op RetrieveAllActiveThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 140 'RetrieveAllActiveThirdPartyLoginPlatformCredentialV3' test.out

#- 141 RetrieveAllSSOLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op RetrieveAllSSOLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --limit '21' \
    --offset '63' \
    > test.out 2>&1
eval_tap $? 141 'RetrieveAllSSOLoginPlatformCredentialV3' test.out

#- 142 RetrieveThirdPartyLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op RetrieveThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'XgmvGcnh' \
    > test.out 2>&1
eval_tap $? 142 'RetrieveThirdPartyLoginPlatformCredentialV3' test.out

#- 143 AddThirdPartyLoginPlatformCredentialV3
# body param: body
echo '{"ACSURL": "6m3TcpdV", "AWSCognitoRegion": "Z8bgZDk0", "AWSCognitoUserPool": "FiqKvgAl", "AllowedClients": ["bxlaG2QI", "QJi9IBCI", "XTgCN0eY"], "AppId": "Je8dscw3", "AuthorizationEndpoint": "8KM7L5QC", "ClientId": "s8xf60Pg", "EmptyStrFieldList": ["pqiMwgMm", "tumUXv5Y", "x8TjV6b2"], "EnableServerLicenseValidation": false, "Environment": "ae5xwFif", "FederationMetadataURL": "ZpEZA2oy", "GenericOauthFlow": false, "IncludePUID": true, "IsActive": true, "Issuer": "bzYvYAuf", "JWKSEndpoint": "6QA2JDJc", "KeyID": "rJFQLMwf", "LogoURL": "wGWgWX04", "NetflixCertificates": {"encryptedPrivateKey": "PkW4i5DB", "encryptedPrivateKeyName": "UNkj5buO", "publicCertificate": "h6KLDBg6", "publicCertificateName": "h7KAKE1x", "rootCertificate": "ALzBgm8b", "rootCertificateName": "j8Aynain"}, "OrganizationId": "Y99NJbud", "PlatformName": "LMPiDWnH", "PrivateKey": "0ex9aZTG", "RedirectUri": "IeAHxN3D", "RegisteredDomains": [{"affectedClientIDs": ["iXO4GQNO", "RW8DOsxm", "wACp0rTv"], "domain": "DzTpAlrt", "namespaces": ["GirG6Uu0", "Ekls5NN3", "nLBAbU6g"], "roleId": "zmMeC9pY", "ssoCfg": {"googleKey": {"GVufyYXn": {}, "AmNa0glc": {}, "AcekKDRh": {}}, "groupConfigs": [{"assignNamespaces": ["lFMsXjOi", "SnweoTAR", "CKRCwMOy"], "group": "sZDz5NSE", "roleId": "fRIkpA45"}, {"assignNamespaces": ["B5Dcx5bg", "NaAdQm5v", "4yZRLTFK"], "group": "8fu5TZgq", "roleId": "KjtAm8X4"}, {"assignNamespaces": ["hKhOWsTA", "Mcj5Cg5L", "TF8sTX2R"], "group": "8gLMDP9N", "roleId": "hI2NcZn5"}]}}, {"affectedClientIDs": ["8EMKVOGD", "nFZq85LW", "CIDrnLBm"], "domain": "77HVhM0n", "namespaces": ["hqwFRApr", "P8qfbRfo", "lG1zVq2J"], "roleId": "4r1bsmXC", "ssoCfg": {"googleKey": {"K76zZRZm": {}, "CAAeMKMr": {}, "qpYa05fl": {}}, "groupConfigs": [{"assignNamespaces": ["OnoPYLd0", "FreoSSii", "CRV8swPG"], "group": "CUzwXmdp", "roleId": "AgMEtTFD"}, {"assignNamespaces": ["Qz5amdJB", "IUPQHP2L", "k54D3rJI"], "group": "f6veyGMN", "roleId": "fgl49FG0"}, {"assignNamespaces": ["6KesucrB", "mcKFnW3q", "A5Pv2Sdp"], "group": "aMmo6Oun", "roleId": "14zJrfmi"}]}}, {"affectedClientIDs": ["H7RtIdtK", "yZhyNach", "fwwAvHtx"], "domain": "rPqgtTtb", "namespaces": ["OlNglhRr", "TP9DTXfL", "7nMdYfsK"], "roleId": "s4ybi6Vb", "ssoCfg": {"googleKey": {"WhoEt5qF": {}, "GE1VgaUA": {}, "0SRUsD9f": {}}, "groupConfigs": [{"assignNamespaces": ["e6quJ9Dx", "cB9uMbhM", "VKj5BJAV"], "group": "cxnAICO5", "roleId": "wr0B3OM4"}, {"assignNamespaces": ["EDIRSA8A", "fd5gk8dS", "J1ZSBgaH"], "group": "lybqx1TU", "roleId": "6ibh9xl8"}, {"assignNamespaces": ["lFpgeVcG", "QFmL9SCr", "tfZMORu5"], "group": "yQ6iPi8s", "roleId": "0QHckpOx"}]}}], "RelyingParty": "2R4PmvQI", "SandboxId": "FIIsNfhu", "Secret": "PQCxamRU", "TeamID": "hxWn85Dz", "TokenAuthenticationType": "kyVfuebx", "TokenClaimsMapping": {"TKGIpdFe": "LdDUs3CW", "N4CPO6v0": "bES5HhCu", "ISLX5itf": "qURhNd86"}, "TokenEndpoint": "KbeflAOo", "UserInfoEndpoint": "nbJe4l9c", "UserInfoHTTPMethod": "NOlAqTwF", "googleAdminConsoleKey": "gKVpDAPv", "scopes": ["VzMpkfu7", "JjPi0oaD", "ifvAAAr4"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AddThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'rqNOEhQQ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 143 'AddThirdPartyLoginPlatformCredentialV3' test.out

#- 144 DeleteThirdPartyLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op DeleteThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'maOfR2vL' \
    > test.out 2>&1
eval_tap $? 144 'DeleteThirdPartyLoginPlatformCredentialV3' test.out

#- 145 UpdateThirdPartyLoginPlatformCredentialV3
# body param: body
echo '{"ACSURL": "wUIcWEY5", "AWSCognitoRegion": "raYDlbKA", "AWSCognitoUserPool": "yH7eWBVt", "AllowedClients": ["sYRqn30O", "b99koMUW", "dpQeVC4U"], "AppId": "IgZ3MRy7", "AuthorizationEndpoint": "5uHX2vf7", "ClientId": "Pnohb3Uv", "EmptyStrFieldList": ["707Ih11z", "QFTmGT3g", "Fv5734Jv"], "EnableServerLicenseValidation": true, "Environment": "gzZRRD0y", "FederationMetadataURL": "2bPu89B3", "GenericOauthFlow": false, "IncludePUID": false, "IsActive": false, "Issuer": "MEFMojgp", "JWKSEndpoint": "mjcPepgM", "KeyID": "6kkScezw", "LogoURL": "rN37SYpu", "NetflixCertificates": {"encryptedPrivateKey": "IqqB2qNQ", "encryptedPrivateKeyName": "D8ESMl2f", "publicCertificate": "trSHm90l", "publicCertificateName": "wlpZAqnF", "rootCertificate": "1xrUuawv", "rootCertificateName": "VPtXD1hu"}, "OrganizationId": "puPYsap5", "PlatformName": "wc5HNU5z", "PrivateKey": "5scDT7FQ", "RedirectUri": "l30bbWfP", "RegisteredDomains": [{"affectedClientIDs": ["PhUHJANA", "wDH4lhu5", "mVQs1uhF"], "domain": "XtsOFQpx", "namespaces": ["LPACa9V2", "GMNTb96u", "B8bvUfnW"], "roleId": "vsvq6tS4", "ssoCfg": {"googleKey": {"JnmyeZqR": {}, "rTQWN8tW": {}, "umRwWjfH": {}}, "groupConfigs": [{"assignNamespaces": ["fK4YxK1W", "dGsXylGq", "TgiLRCR6"], "group": "QrFBq1DB", "roleId": "lhOpMDbE"}, {"assignNamespaces": ["Pz5kTzLh", "iJR1twHM", "NwdLqbbx"], "group": "76On0v0e", "roleId": "rGZET3n9"}, {"assignNamespaces": ["flU8gjcL", "DTcsETd4", "yyQ5rPoj"], "group": "XVnh371V", "roleId": "jrYFJCiX"}]}}, {"affectedClientIDs": ["6Leu8Yn0", "HU840YNv", "8DGuP1Pc"], "domain": "YpK33IML", "namespaces": ["CQY9F7jg", "h4XIz12U", "LGy8OOkK"], "roleId": "Bgoc1TxC", "ssoCfg": {"googleKey": {"5uK1afdg": {}, "6fCq99nI": {}, "yAZP8b1c": {}}, "groupConfigs": [{"assignNamespaces": ["Na09jYBC", "KS1fmANK", "UYUg8Rb5"], "group": "ag2mr3ZP", "roleId": "1bgYzQ0L"}, {"assignNamespaces": ["dWrcohrP", "5Uo6GURS", "VhCZq3ix"], "group": "jfufzXqG", "roleId": "vzi02mKt"}, {"assignNamespaces": ["W6lhEVxF", "z7siBHdV", "IFqWBIUO"], "group": "A0w5w0P9", "roleId": "hY0lKUUw"}]}}, {"affectedClientIDs": ["WZtuCZu0", "UGAhZR80", "bo44JLXR"], "domain": "gQPqQ0Sv", "namespaces": ["UtMOSAjI", "RmFOHtVU", "UYF4MgtB"], "roleId": "tutgp72k", "ssoCfg": {"googleKey": {"5ZzS057B": {}, "gwdXN1G3": {}, "saOwAxK6": {}}, "groupConfigs": [{"assignNamespaces": ["0OAVhLbm", "vl4oTGsc", "tq2cIYh3"], "group": "41no03zZ", "roleId": "IYS9oQnS"}, {"assignNamespaces": ["ZM2nnq4Q", "Run23jU0", "C6BLWjA0"], "group": "rx3e1mfZ", "roleId": "yLbystEr"}, {"assignNamespaces": ["S5mZeqDZ", "ZBgP7UvZ", "Yd1J246i"], "group": "0iRR4tKD", "roleId": "G3ScTYjP"}]}}], "RelyingParty": "5CaCmLG5", "SandboxId": "D0FtU5sy", "Secret": "3wBkR0qN", "TeamID": "gYFuZM9F", "TokenAuthenticationType": "BF20f8Yb", "TokenClaimsMapping": {"gUbZPuZx": "tewm9oIN", "ebhpZjeT": "NfcIKEY0", "Q28lv5uS": "P1t61IXE"}, "TokenEndpoint": "ZVLAZhRk", "UserInfoEndpoint": "uYnYu02D", "UserInfoHTTPMethod": "uFCJ6SCe", "googleAdminConsoleKey": "2Y2PkTKz", "scopes": ["UMuQQegK", "xThins0A", "1BPssTXQ"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op UpdateThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'bLOvnHIp' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 145 'UpdateThirdPartyLoginPlatformCredentialV3' test.out

#- 146 UpdateThirdPartyLoginPlatformDomainV3
# body param: body
echo '{"affectedClientIDs": ["GTDIWsEG", "Le9YCijz", "WCHAIEsz"], "assignedNamespaces": ["fARZoz1k", "rNMPOhKd", "vgzE0MZw"], "domain": "7EhQye73", "roleId": "3FXiLoWE", "ssoCfg": {"googleKey": {"1w1P91Qk": {}, "pKXzuaOQ": {}, "wFCr4Wpo": {}}, "groupConfigs": [{"assignNamespaces": ["qnxTv5h6", "mWs9b5iw", "b6KbLeWr"], "group": "DBUKtExR", "roleId": "u4DtVOX4"}, {"assignNamespaces": ["FmeRjtN9", "Ks1J6T8F", "mqvdMX5Z"], "group": "qWnynbAB", "roleId": "QXXy8uhY"}, {"assignNamespaces": ["YWHjCyH7", "b4rcTGoO", "AejMC2Jn"], "group": "uXyNtbFd", "roleId": "ydCMxcUE"}]}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op UpdateThirdPartyLoginPlatformDomainV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'dHTQjlel' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 146 'UpdateThirdPartyLoginPlatformDomainV3' test.out

#- 147 DeleteThirdPartyLoginPlatformDomainV3
# body param: body
echo '{"domain": "pGb75TRZ", "ssoGroups": ["7LQrscTu", "gi4cR2Pw", "ZaoGnpZZ"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op DeleteThirdPartyLoginPlatformDomainV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'Uu9KiIi2' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 147 'DeleteThirdPartyLoginPlatformDomainV3' test.out

#- 148 PartialUpdateThirdPartyLoginPlatformDomainV3
# body param: body
echo '{"affectedClientIDs": ["W4vxCSsV", "xdiON3Hu", "racyqOA8"], "assignedNamespaces": ["wZ4Bmq7X", "CuBzafGy", "Z2ysWVoe"], "domain": "LvPJECI3", "roleId": "8rgQt7rz", "ssoCfg": {"googleKey": {"Y7uLZ9f9": {}, "LxDLBVln": {}, "49Ye5rot": {}}, "groupConfigs": [{"assignNamespaces": ["zmFZt2Ob", "RVWO9zo2", "cBoDAcMC"], "group": "yj1siw7X", "roleId": "vglLeRTp"}, {"assignNamespaces": ["GDYvXBfr", "KZd02C1f", "txtjUfW6"], "group": "fLJJfh6l", "roleId": "jzx7I1AA"}, {"assignNamespaces": ["IRFS9h8r", "E4rROuCa", "uiBDwyc2"], "group": "p0qtIfgj", "roleId": "BABdQJqS"}]}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PartialUpdateThirdPartyLoginPlatformDomainV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'wZaIZXLg' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 148 'PartialUpdateThirdPartyLoginPlatformDomainV3' test.out

#- 149 RetrieveSSOLoginPlatformCredential
$CLI_EXE \
    --sn iam \
    --op RetrieveSSOLoginPlatformCredential \
    --namespace $AB_NAMESPACE \
    --platformId 'eroRc5X1' \
    > test.out 2>&1
eval_tap $? 149 'RetrieveSSOLoginPlatformCredential' test.out

#- 150 AddSSOLoginPlatformCredential
# body param: body
echo '{"acsUrl": "GIeWT95x", "apiKey": "vQgugGKU", "appId": "h7GA28Bs", "federationMetadataUrl": "YzOT8Y8J", "isActive": true, "redirectUri": "JG70f6Vb", "secret": "thEu0Wrx", "ssoUrl": "HOqGcKYj"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AddSSOLoginPlatformCredential \
    --namespace $AB_NAMESPACE \
    --platformId 'DnSjutXg' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 150 'AddSSOLoginPlatformCredential' test.out

#- 151 DeleteSSOLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op DeleteSSOLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'fHE0guZw' \
    > test.out 2>&1
eval_tap $? 151 'DeleteSSOLoginPlatformCredentialV3' test.out

#- 152 UpdateSSOPlatformCredential
# body param: body
echo '{"acsUrl": "16KrqxBJ", "apiKey": "iUM1d99b", "appId": "mm2Dpisc", "federationMetadataUrl": "PadrrAQy", "isActive": false, "redirectUri": "9KBmU60V", "secret": "AJextZ6B", "ssoUrl": "PjnKQ6m0"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op UpdateSSOPlatformCredential \
    --namespace $AB_NAMESPACE \
    --platformId 'f3Yp6iDs' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 152 'UpdateSSOPlatformCredential' test.out

#- 153 AdminListUserIDByPlatformUserIDsV3
# body param: body
echo '{"platformUserIds": ["dLh70eFb", "awEq5jUo", "ylkqCGo0"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminListUserIDByPlatformUserIDsV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'sGeygmqp' \
    --rawPID 'false' \
    --rawPUID 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 153 'AdminListUserIDByPlatformUserIDsV3' test.out

#- 154 AdminGetUserByPlatformUserIDV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserByPlatformUserIDV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'Cw14mDx5' \
    --platformUserId 'nIHdvZsN' \
    --pidType 'lUtWBA6t' \
    > test.out 2>&1
eval_tap $? 154 'AdminGetUserByPlatformUserIDV3' test.out

#- 155 AdminGetProfileUpdateStrategyV3
$CLI_EXE \
    --sn iam \
    --op AdminGetProfileUpdateStrategyV3 \
    --namespace $AB_NAMESPACE \
    --field 'username' \
    > test.out 2>&1
eval_tap $? 155 'AdminGetProfileUpdateStrategyV3' test.out

#- 156 AdminUpdateProfileUpdateStrategyV3
# body param: body
echo '{"config": {"minimumAllowedInterval": 74}, "type": "07MLvz2Z"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateProfileUpdateStrategyV3 \
    --namespace $AB_NAMESPACE \
    --field 'dob' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 156 'AdminUpdateProfileUpdateStrategyV3' test.out

#- 157 AdminGetRoleOverrideConfigV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleOverrideConfigV3 \
    --namespace $AB_NAMESPACE \
    --identity 'VIEW_ONLY' \
    > test.out 2>&1
eval_tap $? 157 'AdminGetRoleOverrideConfigV3' test.out

#- 158 AdminUpdateRoleOverrideConfigV3
# body param: body
echo '{"additions": [{"actions": [49, 83, 41], "resource": "QMtnclVH"}, {"actions": [6, 10, 72], "resource": "JVPPTly6"}, {"actions": [42, 94, 33], "resource": "1KEZe2hb"}], "exclusions": [{"actions": [40, 26, 94], "resource": "ulY1jHG7"}, {"actions": [3, 6, 84], "resource": "QpqlqxJt"}, {"actions": [20, 98, 37], "resource": "3xPMiNX2"}], "overrides": [{"actions": [86, 24, 11], "resource": "2DuwTMRG"}, {"actions": [13, 83, 41], "resource": "1h90JXUy"}, {"actions": [56, 79, 63], "resource": "97JVoRH7"}], "replacements": [{"replacement": {"actions": [42, 28, 5], "resource": "gTOZlNP6"}, "target": "X6Ra9XN0"}, {"replacement": {"actions": [81, 41, 5], "resource": "bQubPvxM"}, "target": "PZuH7GDQ"}, {"replacement": {"actions": [93, 36, 34], "resource": "Rwmdx1g2"}, "target": "Lwcl55jF"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateRoleOverrideConfigV3 \
    --namespace $AB_NAMESPACE \
    --identity 'USER' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 158 'AdminUpdateRoleOverrideConfigV3' test.out

#- 159 AdminGetRoleSourceV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleSourceV3 \
    --namespace $AB_NAMESPACE \
    --identity 'GAME_ADMIN' \
    > test.out 2>&1
eval_tap $? 159 'AdminGetRoleSourceV3' test.out

#- 160 AdminChangeRoleOverrideConfigStatusV3
# body param: body
echo '{"active": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminChangeRoleOverrideConfigStatusV3 \
    --namespace $AB_NAMESPACE \
    --identity 'USER' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 160 'AdminChangeRoleOverrideConfigStatusV3' test.out

#- 161 AdminGetRoleNamespacePermissionV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleNamespacePermissionV3 \
    --namespace $AB_NAMESPACE \
    --roleId 'kqf0RO9r' \
    > test.out 2>&1
eval_tap $? 161 'AdminGetRoleNamespacePermissionV3' test.out

#- 162 GetAdminUsersByRoleIdV3
$CLI_EXE \
    --sn iam \
    --op GetAdminUsersByRoleIdV3 \
    --namespace $AB_NAMESPACE \
    --roleId 'OyzhU9Fp' \
    --after '41' \
    --before '20' \
    --limit '93' \
    > test.out 2>&1
eval_tap $? 162 'GetAdminUsersByRoleIdV3' test.out

#- 163 AdminQueryTagV3
$CLI_EXE \
    --sn iam \
    --op AdminQueryTagV3 \
    --namespace $AB_NAMESPACE \
    --limit '29' \
    --offset '25' \
    --tagName 'FYubLPrJ' \
    > test.out 2>&1
eval_tap $? 163 'AdminQueryTagV3' test.out

#- 164 AdminCreateTagV3
# body param: body
echo '{"tagName": "RhnciXO3"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminCreateTagV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 164 'AdminCreateTagV3' test.out

#- 165 AdminUpdateTagV3
# body param: body
echo '{"tagName": "ZqstufF5"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateTagV3 \
    --namespace $AB_NAMESPACE \
    --tagId 'JCRvCmur' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 165 'AdminUpdateTagV3' test.out

#- 166 AdminDeleteTagV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteTagV3 \
    --namespace $AB_NAMESPACE \
    --tagId 'zDWoxjGi' \
    > test.out 2>&1
eval_tap $? 166 'AdminDeleteTagV3' test.out

#- 167 AdminGetUserByEmailAddressV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserByEmailAddressV3 \
    --namespace $AB_NAMESPACE \
    --emailAddress 'rMlnAdnc' \
    > test.out 2>&1
eval_tap $? 167 'AdminGetUserByEmailAddressV3' test.out

#- 168 AdminBulkUpdateUsersV3
# body param: body
echo '{"updateRequest": {"skipLoginQueue": true}, "userIds": ["1UeNI4HY", "FoVHy4r1", "6HNbjtnp"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBulkUpdateUsersV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 168 'AdminBulkUpdateUsersV3' test.out

#- 169 AdminGetBulkUserBanV3
# body param: body
echo '{"bulkUserId": ["QijDOqSe", "HzCfvI5O", "vV80Ew0H"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminGetBulkUserBanV3 \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --banType 'Lb3yR0aN' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 169 'AdminGetBulkUserBanV3' test.out

#- 170 AdminListUserIDByUserIDsV3
# body param: body
echo '{"findByPublisherNamespace": true, "userIds": ["Y2vGkuC1", "9g1Xk8dJ", "Mqy16Tfv"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminListUserIDByUserIDsV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 170 'AdminListUserIDByUserIDsV3' test.out

#- 171 AdminBulkGetUsersPlatform
# body param: body
echo '{"userIds": ["YI06BrnU", "fhDFeNkS", "oNQZjI1b"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBulkGetUsersPlatform \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 171 'AdminBulkGetUsersPlatform' test.out

#- 172 AdminCursorGetUserV3
# body param: body
echo '{"cursor": {"cursorTime": "rVWmgsPw", "userId": "tk5P8mx8"}, "fields": ["XvFHPikn", "tB4Th48o", "hHTn8OIp"], "limit": 17}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminCursorGetUserV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 172 'AdminCursorGetUserV3' test.out

#- 173 AdminInviteUserV3
# body param: body
echo '{"emailAddresses": ["cSYsk8HW", "rVOba8MM", "2KX83H4r"], "isAdmin": false, "languageTag": "Ym4GHK97", "namespace": "v5QPojB8", "roles": ["Rf4hi6xY", "WxGHKCN5", "Ck1IvvU7"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminInviteUserV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 173 'AdminInviteUserV3' test.out

#- 174 AdminQueryThirdPlatformLinkHistoryV3
$CLI_EXE \
    --sn iam \
    --op AdminQueryThirdPlatformLinkHistoryV3 \
    --namespace $AB_NAMESPACE \
    --limit '33' \
    --offset '40' \
    --platformUserId 'UVo0KCTi' \
    --platformId 'm1GgA20W' \
    > test.out 2>&1
eval_tap $? 174 'AdminQueryThirdPlatformLinkHistoryV3' test.out

#- 175 AdminListUsersV3
$CLI_EXE \
    --sn iam \
    --op AdminListUsersV3 \
    --namespace $AB_NAMESPACE \
    --limit '37' \
    --offset '90' \
    > test.out 2>&1
eval_tap $? 175 'AdminListUsersV3' test.out

#- 176 AdminSearchUserV3
$CLI_EXE \
    --sn iam \
    --op AdminSearchUserV3 \
    --namespace $AB_NAMESPACE \
    --by 'yI3hXJLl' \
    --endDate 'kHlbb4UN' \
    --includeTotal 'true' \
    --limit '80' \
    --offset '6' \
    --platformBy 'n13pEDlr' \
    --platformId 'm3oJeSIN' \
    --query 'etRpjuAd' \
    --roleIds 'nT5N0cp0' \
    --selectedFields 'vXyhl5pR' \
    --skipLoginQueue 'true' \
    --startDate 'bnVxKULm' \
    --tagIds 'yZ8QQNoI' \
    --testAccount 'true' \
    > test.out 2>&1
eval_tap $? 176 'AdminSearchUserV3' test.out

#- 177 AdminGetBulkUserByEmailAddressV3
# body param: body
echo '{"listEmailAddressRequest": ["I3D51tM8", "B5fErHKQ", "2Amn2KW7"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminGetBulkUserByEmailAddressV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 177 'AdminGetBulkUserByEmailAddressV3' test.out

#- 178 AdminGetUserByUserIdV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserByUserIdV3 \
    --namespace $AB_NAMESPACE \
    --userId 'P3ZhIlgu' \
    > test.out 2>&1
eval_tap $? 178 'AdminGetUserByUserIdV3' test.out

#- 179 AdminUpdateUserV3
# body param: body
echo '{"avatarUrl": "zF6ThVzI", "country": "WiFgCmsD", "dateOfBirth": "5JSCgk74", "displayName": "creV8xcM", "languageTag": "7k4J34zR", "skipLoginQueue": false, "tags": ["NOeY84LY", "xzuu0VBt", "hpt4GXJg"], "uniqueDisplayName": "Vs2IB2Qp", "userName": "W8hripCf"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserV3 \
    --namespace $AB_NAMESPACE \
    --userId 'bXhyRqFF' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 179 'AdminUpdateUserV3' test.out

#- 180 AdminGetUserBanV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserBanV3 \
    --namespace $AB_NAMESPACE \
    --userId '4TULAysJ' \
    --activeOnly 'false' \
    --after 'pEHyOrqD' \
    --before 'QtVEFZst' \
    --limit '1' \
    > test.out 2>&1
eval_tap $? 180 'AdminGetUserBanV3' test.out

#- 181 AdminBanUserV3
# body param: body
echo '{"ban": "f5jteENK", "comment": "1Moty3LP", "endDate": "T5H6Zzqf", "reason": "inKXiHPH", "skipNotif": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBanUserV3 \
    --namespace $AB_NAMESPACE \
    --userId 'BetOcU18' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 181 'AdminBanUserV3' test.out

#- 182 AdminGetUserBanSummaryV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserBanSummaryV3 \
    --namespace $AB_NAMESPACE \
    --userId 'HLlEin47' \
    > test.out 2>&1
eval_tap $? 182 'AdminGetUserBanSummaryV3' test.out

#- 183 AdminUpdateUserBanV3
# body param: body
echo '{"enabled": false, "skipNotif": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserBanV3 \
    --banId 'cN4komXW' \
    --namespace $AB_NAMESPACE \
    --userId 'bTjd0ijF' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 183 'AdminUpdateUserBanV3' test.out

#- 184 AdminSendVerificationCodeV3
# body param: body
echo '{"context": "0rQw5GKt", "emailAddress": "7xlxfWUr", "languageTag": "LRdDv9jt", "upgradeToken": "vZ4Rr2dV"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminSendVerificationCodeV3 \
    --namespace $AB_NAMESPACE \
    --userId 'p0Eco3Fg' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 184 'AdminSendVerificationCodeV3' test.out

#- 185 AdminVerifyAccountV3
# body param: body
echo '{"Code": "I6g3eJtZ", "ContactType": "vJpVX5OH", "LanguageTag": "D8vz4eT7", "validateOnly": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminVerifyAccountV3 \
    --namespace $AB_NAMESPACE \
    --userId 'VjyaJJel' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 185 'AdminVerifyAccountV3' test.out

#- 186 GetUserVerificationCode
$CLI_EXE \
    --sn iam \
    --op GetUserVerificationCode \
    --namespace $AB_NAMESPACE \
    --userId 'pis5MDdL' \
    > test.out 2>&1
eval_tap $? 186 'GetUserVerificationCode' test.out

#- 187 AdminGetUserDeletionStatusV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserDeletionStatusV3 \
    --namespace $AB_NAMESPACE \
    --userId 'NHueAybe' \
    > test.out 2>&1
eval_tap $? 187 'AdminGetUserDeletionStatusV3' test.out

#- 188 AdminUpdateUserDeletionStatusV3
# body param: body
echo '{"deletionDate": 48, "enabled": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserDeletionStatusV3 \
    --namespace $AB_NAMESPACE \
    --userId 'mgEMmxMU' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 188 'AdminUpdateUserDeletionStatusV3' test.out

#- 189 AdminListUserAllPlatformAccountsDistinctV3
$CLI_EXE \
    --sn iam \
    --op AdminListUserAllPlatformAccountsDistinctV3 \
    --namespace $AB_NAMESPACE \
    --userId 'uNnxRuyN' \
    > test.out 2>&1
eval_tap $? 189 'AdminListUserAllPlatformAccountsDistinctV3' test.out

#- 190 AdminUpgradeHeadlessAccountV3
# body param: body
echo '{"code": "YFtDLY2W", "country": "8FZt0nrE", "dateOfBirth": "A5e74U8h", "displayName": "E7UIBk8N", "emailAddress": "QRsWW7r5", "password": "OT2Eecob", "uniqueDisplayName": "DMutPQMY", "validateOnly": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpgradeHeadlessAccountV3 \
    --namespace $AB_NAMESPACE \
    --userId 'oHw5n7xK' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 190 'AdminUpgradeHeadlessAccountV3' test.out

#- 191 AdminDeleteUserInformationV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserInformationV3 \
    --namespace $AB_NAMESPACE \
    --userId 'IpYqWWQW' \
    > test.out 2>&1
eval_tap $? 191 'AdminDeleteUserInformationV3' test.out

#- 192 AdminGetUserLoginHistoriesV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserLoginHistoriesV3 \
    --namespace $AB_NAMESPACE \
    --userId 'o0rP7JLS' \
    --after '0.138045271146906' \
    --before '0.6372773764166757' \
    --limit '86' \
    > test.out 2>&1
eval_tap $? 192 'AdminGetUserLoginHistoriesV3' test.out

#- 193 AdminResetPasswordV3
# body param: body
echo '{"languageTag": "llwIr3dh", "mfaToken": "MA3KDLJC", "newPassword": "46mFLwTC", "oldPassword": "apaBElu8"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminResetPasswordV3 \
    --namespace $AB_NAMESPACE \
    --userId '8d0FkGUM' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 193 'AdminResetPasswordV3' test.out

#- 194 AdminUpdateUserPermissionV3
# body param: body
echo '{"Permissions": [{"Action": 85, "Resource": "toE9bKZM", "SchedAction": 91, "SchedCron": "nSjazkhg", "SchedRange": ["A034BcYr", "BDQWBExi", "rVOfeLzu"]}, {"Action": 98, "Resource": "molIH8HR", "SchedAction": 48, "SchedCron": "spb5jDd1", "SchedRange": ["LpGE60QW", "dDW3fDU6", "FvxrxHqa"]}, {"Action": 73, "Resource": "w7BXp70M", "SchedAction": 0, "SchedCron": "DpZMi4Da", "SchedRange": ["fFtD6QS1", "0z7mk8rG", "tVPo5LSk"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserPermissionV3 \
    --namespace $AB_NAMESPACE \
    --userId 'Vx9z4zUd' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 194 'AdminUpdateUserPermissionV3' test.out

#- 195 AdminAddUserPermissionsV3
# body param: body
echo '{"Permissions": [{"Action": 33, "Resource": "qfv3GDt1", "SchedAction": 43, "SchedCron": "kYf8lmaB", "SchedRange": ["Kxq3Vs8a", "fUF9JaCe", "MzgZyj0W"]}, {"Action": 61, "Resource": "FF4zSUAO", "SchedAction": 42, "SchedCron": "1owth6K4", "SchedRange": ["pujFruOH", "NeNgXvIm", "RnbcH8gO"]}, {"Action": 64, "Resource": "4BFGRRMo", "SchedAction": 90, "SchedCron": "mEuPsZnU", "SchedRange": ["bx3Z6q9A", "0JqnuW37", "dIbmRMnw"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddUserPermissionsV3 \
    --namespace $AB_NAMESPACE \
    --userId 'dwvdhNGV' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 195 'AdminAddUserPermissionsV3' test.out

#- 196 AdminDeleteUserPermissionBulkV3
# body param: body
echo '[{"Action": 19, "Resource": "YL9JIRDc"}, {"Action": 80, "Resource": "78U66X7P"}, {"Action": 38, "Resource": "2IDW3JcF"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserPermissionBulkV3 \
    --namespace $AB_NAMESPACE \
    --userId 'tMtl1Tgr' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 196 'AdminDeleteUserPermissionBulkV3' test.out

#- 197 AdminDeleteUserPermissionV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserPermissionV3 \
    --action '52' \
    --namespace $AB_NAMESPACE \
    --resource 'TcNBTmSC' \
    --userId 'pbvtr77M' \
    > test.out 2>&1
eval_tap $? 197 'AdminDeleteUserPermissionV3' test.out

#- 198 AdminGetUserPlatformAccountsV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserPlatformAccountsV3 \
    --namespace $AB_NAMESPACE \
    --userId '2NdneOZC' \
    --after 'cYc7yYoX' \
    --before 'MzLvJvMP' \
    --limit '42' \
    --platformId 'c8xmYOuI' \
    --targetNamespace 'bwpw9aEh' \
    > test.out 2>&1
eval_tap $? 198 'AdminGetUserPlatformAccountsV3' test.out

#- 199 AdminListAllDistinctPlatformAccountsV3
$CLI_EXE \
    --sn iam \
    --op AdminListAllDistinctPlatformAccountsV3 \
    --namespace $AB_NAMESPACE \
    --userId 'DZKOVvAl' \
    --status 'IXxtHMiv' \
    > test.out 2>&1
eval_tap $? 199 'AdminListAllDistinctPlatformAccountsV3' test.out

#- 200 AdminGetListJusticePlatformAccounts
$CLI_EXE \
    --sn iam \
    --op AdminGetListJusticePlatformAccounts \
    --namespace $AB_NAMESPACE \
    --userId 'wBxh1jut' \
    > test.out 2>&1
eval_tap $? 200 'AdminGetListJusticePlatformAccounts' test.out

#- 201 AdminGetUserMapping
$CLI_EXE \
    --sn iam \
    --op AdminGetUserMapping \
    --namespace $AB_NAMESPACE \
    --targetNamespace 'uZowb7ff' \
    --userId 'Uoc0rLSN' \
    --createIfNotFound 'false' \
    > test.out 2>&1
eval_tap $? 201 'AdminGetUserMapping' test.out

#- 202 AdminCreateJusticeUser
$CLI_EXE \
    --sn iam \
    --op AdminCreateJusticeUser \
    --namespace $AB_NAMESPACE \
    --targetNamespace 'n2023aZt' \
    --userId '8jcWJ2Le' \
    > test.out 2>&1
eval_tap $? 202 'AdminCreateJusticeUser' test.out

#- 203 AdminLinkPlatformAccount
# body param: body
echo '{"platformId": "LnPFIrYh", "platformUserId": "EK2LyLmT"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminLinkPlatformAccount \
    --namespace $AB_NAMESPACE \
    --userId '11ovB1c7' \
    --skipConflict 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 203 'AdminLinkPlatformAccount' test.out

#- 204 AdminGetUserLinkHistoriesV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserLinkHistoriesV3 \
    --namespace $AB_NAMESPACE \
    --userId 'xkCM23oU' \
    --platformId 'EAo0IQbH' \
    > test.out 2>&1
eval_tap $? 204 'AdminGetUserLinkHistoriesV3' test.out

#- 205 AdminPlatformUnlinkV3
eval_tap 0 205 'AdminPlatformUnlinkV3 # SKIP deprecated' test.out

#- 206 AdminPlatformUnlinkAllV3
$CLI_EXE \
    --sn iam \
    --op AdminPlatformUnlinkAllV3 \
    --namespace $AB_NAMESPACE \
    --platformId '3IRqrmJt' \
    --userId 'fJb00DDB' \
    > test.out 2>&1
eval_tap $? 206 'AdminPlatformUnlinkAllV3' test.out

#- 207 AdminPlatformLinkV3
$CLI_EXE \
    --sn iam \
    --op AdminPlatformLinkV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'e8jAYyu1' \
    --userId '825bcHpA' \
    --ticket 'gwg6KmUk' \
    > test.out 2>&1
eval_tap $? 207 'AdminPlatformLinkV3' test.out

#- 208 AdminDeleteUserLinkingHistoryByPlatformIDV3
eval_tap 0 208 'AdminDeleteUserLinkingHistoryByPlatformIDV3 # SKIP deprecated' test.out

#- 209 AdminDeleteUserLinkingRestrictionByPlatformIDV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserLinkingRestrictionByPlatformIDV3 \
    --namespace $AB_NAMESPACE \
    --platformId '9sr5KGmn' \
    --userId '9UZEzbRm' \
    > test.out 2>&1
eval_tap $? 209 'AdminDeleteUserLinkingRestrictionByPlatformIDV3' test.out

#- 210 AdminGetThirdPartyPlatformTokenLinkStatusV3
$CLI_EXE \
    --sn iam \
    --op AdminGetThirdPartyPlatformTokenLinkStatusV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'jJfuZyoJ' \
    --userId 'G1ptUQlc' \
    --platformToken 'UBx0PHuI' \
    > test.out 2>&1
eval_tap $? 210 'AdminGetThirdPartyPlatformTokenLinkStatusV3' test.out

#- 211 AdminGetUserSinglePlatformAccount
$CLI_EXE \
    --sn iam \
    --op AdminGetUserSinglePlatformAccount \
    --namespace $AB_NAMESPACE \
    --platformId 'VFOPjgC2' \
    --userId '4JUzUJrw' \
    --crossNamespace 'false' \
    > test.out 2>&1
eval_tap $? 211 'AdminGetUserSinglePlatformAccount' test.out

#- 212 AdminDeleteUserRolesV3
# body param: body
echo '["ijWqDmRU", "DF31hBBR", "38OHrTsT"]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserRolesV3 \
    --namespace $AB_NAMESPACE \
    --userId '8UPlFfDJ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 212 'AdminDeleteUserRolesV3' test.out

#- 213 AdminSaveUserRoleV3
# body param: body
echo '[{"namespace": "66iktk90", "roleId": "ITe3NIfG"}, {"namespace": "EjtIpMc0", "roleId": "6y99CtNG"}, {"namespace": "736g3q13", "roleId": "N4y1kgHJ"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminSaveUserRoleV3 \
    --namespace $AB_NAMESPACE \
    --userId 'hgnHgdD5' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 213 'AdminSaveUserRoleV3' test.out

#- 214 AdminAddUserRoleV3
$CLI_EXE \
    --sn iam \
    --op AdminAddUserRoleV3 \
    --namespace $AB_NAMESPACE \
    --roleId 'ZADwkdk2' \
    --userId '6PsZJKcN' \
    > test.out 2>&1
eval_tap $? 214 'AdminAddUserRoleV3' test.out

#- 215 AdminDeleteUserRoleV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserRoleV3 \
    --namespace $AB_NAMESPACE \
    --roleId 'rdoIYKrK' \
    --userId 'wGKuwXO4' \
    > test.out 2>&1
eval_tap $? 215 'AdminDeleteUserRoleV3' test.out

#- 216 AdminGetUserStateByUserIdV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserStateByUserIdV3 \
    --namespace $AB_NAMESPACE \
    --userId 'xfnPj9l5' \
    > test.out 2>&1
eval_tap $? 216 'AdminGetUserStateByUserIdV3' test.out

#- 217 AdminUpdateUserStatusV3
# body param: body
echo '{"enabled": false, "reason": "PD9IWggH"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserStatusV3 \
    --namespace $AB_NAMESPACE \
    --userId '0T5hv52f' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 217 'AdminUpdateUserStatusV3' test.out

#- 218 AdminTrustlyUpdateUserIdentity
# body param: body
echo '{"emailAddress": "8fUepPcI", "password": "jwxuVEOf"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminTrustlyUpdateUserIdentity \
    --namespace $AB_NAMESPACE \
    --userId '9qRJLzRp' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 218 'AdminTrustlyUpdateUserIdentity' test.out

#- 219 AdminVerifyUserWithoutVerificationCodeV3
$CLI_EXE \
    --sn iam \
    --op AdminVerifyUserWithoutVerificationCodeV3 \
    --namespace $AB_NAMESPACE \
    --userId 'UOtfaHQU' \
    > test.out 2>&1
eval_tap $? 219 'AdminVerifyUserWithoutVerificationCodeV3' test.out

#- 220 AdminUpdateClientSecretV3
# body param: body
echo '{"newSecret": "XHxaVXJs"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateClientSecretV3 \
    --clientId 'L4vR2BGz' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 220 'AdminUpdateClientSecretV3' test.out

#- 221 AdminCheckThirdPartyLoginPlatformAvailabilityV3
$CLI_EXE \
    --sn iam \
    --op AdminCheckThirdPartyLoginPlatformAvailabilityV3 \
    --platformId '1TmCbYiA' \
    > test.out 2>&1
eval_tap $? 221 'AdminCheckThirdPartyLoginPlatformAvailabilityV3' test.out

#- 222 AdminGetRolesV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRolesV3 \
    --after 'madgL9h2' \
    --before 'kwQl89NL' \
    --isWildcard 'true' \
    --limit '90' \
    > test.out 2>&1
eval_tap $? 222 'AdminGetRolesV3' test.out

#- 223 AdminCreateRoleV3
# body param: body
echo '{"adminRole": true, "deletable": false, "isWildcard": true, "managers": [{"displayName": "8QxeHyJ5", "namespace": "f2Bdtx8V", "userId": "ctfOen3x"}, {"displayName": "WxKCjNRe", "namespace": "hB33St05", "userId": "3zVf8a8A"}, {"displayName": "AmFPUqyi", "namespace": "1IBKwymC", "userId": "Ea1LzdyU"}], "members": [{"displayName": "ByBtOqwd", "namespace": "YIccFQcQ", "userId": "wFDKHKk0"}, {"displayName": "hbjksFgQ", "namespace": "ZyZUOnNi", "userId": "DbkZS7hI"}, {"displayName": "6H6aLt4g", "namespace": "f03bNBPG", "userId": "njDAg3qv"}], "permissions": [{"action": 18, "resource": "r14EzIQD", "schedAction": 82, "schedCron": "svjrX3KM", "schedRange": ["smLe7bAo", "fFCzF873", "K477NiMg"]}, {"action": 17, "resource": "7pKZMxf4", "schedAction": 57, "schedCron": "wsN5pnHP", "schedRange": ["W3J8gCtL", "MXWum2Gd", "yI2vo2Wq"]}, {"action": 22, "resource": "xX7Bsngu", "schedAction": 3, "schedCron": "KjMaALNl", "schedRange": ["JM0MpBvr", "HgDOb4K0", "hRMXBSsA"]}], "roleName": "5cVMGZ4e"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminCreateRoleV3 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 223 'AdminCreateRoleV3' test.out

#- 224 AdminGetRoleV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleV3 \
    --roleId 'dyL02DE5' \
    > test.out 2>&1
eval_tap $? 224 'AdminGetRoleV3' test.out

#- 225 AdminDeleteRoleV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteRoleV3 \
    --roleId 'tsKUAtzP' \
    > test.out 2>&1
eval_tap $? 225 'AdminDeleteRoleV3' test.out

#- 226 AdminUpdateRoleV3
# body param: body
echo '{"deletable": false, "isWildcard": false, "roleName": "h2GuFxbR"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateRoleV3 \
    --roleId 'HO5ftUqX' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 226 'AdminUpdateRoleV3' test.out

#- 227 AdminGetRoleAdminStatusV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleAdminStatusV3 \
    --roleId 'Rjz3YigK' \
    > test.out 2>&1
eval_tap $? 227 'AdminGetRoleAdminStatusV3' test.out

#- 228 AdminUpdateAdminRoleStatusV3
$CLI_EXE \
    --sn iam \
    --op AdminUpdateAdminRoleStatusV3 \
    --roleId 'iP2fVZFy' \
    > test.out 2>&1
eval_tap $? 228 'AdminUpdateAdminRoleStatusV3' test.out

#- 229 AdminRemoveRoleAdminV3
$CLI_EXE \
    --sn iam \
    --op AdminRemoveRoleAdminV3 \
    --roleId 'x57hjRLt' \
    > test.out 2>&1
eval_tap $? 229 'AdminRemoveRoleAdminV3' test.out

#- 230 AdminGetRoleManagersV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleManagersV3 \
    --roleId 'yp0HFjLG' \
    --after 'OuIoFiKY' \
    --before 'JvhM7X72' \
    --limit '34' \
    > test.out 2>&1
eval_tap $? 230 'AdminGetRoleManagersV3' test.out

#- 231 AdminAddRoleManagersV3
# body param: body
echo '{"managers": [{"displayName": "nkbO7OrX", "namespace": "OOdgT2Uw", "userId": "4E35DtMq"}, {"displayName": "WWsHMAMW", "namespace": "4H40GU5G", "userId": "Cu4wHIBl"}, {"displayName": "GDnzj9bP", "namespace": "PhFvD1h8", "userId": "ug1mMYpF"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddRoleManagersV3 \
    --roleId 'RALBsjPG' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 231 'AdminAddRoleManagersV3' test.out

#- 232 AdminRemoveRoleManagersV3
# body param: body
echo '{"managers": [{"displayName": "DnVUSq5I", "namespace": "ymHdIZtv", "userId": "AP8ZNfQ1"}, {"displayName": "RXc9Yv0v", "namespace": "1zFPusn8", "userId": "g53BGtiM"}, {"displayName": "dJ0LzdTC", "namespace": "LrzjROMR", "userId": "OJj33Avu"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminRemoveRoleManagersV3 \
    --roleId 'HVrlx5sR' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 232 'AdminRemoveRoleManagersV3' test.out

#- 233 AdminGetRoleMembersV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleMembersV3 \
    --roleId 'ir35BJTs' \
    --after 'fczU8Tdl' \
    --before 'A4pYbRIb' \
    --limit '51' \
    > test.out 2>&1
eval_tap $? 233 'AdminGetRoleMembersV3' test.out

#- 234 AdminAddRoleMembersV3
# body param: body
echo '{"members": [{"displayName": "MedFaxgW", "namespace": "PCj0BQwR", "userId": "IhfzU6NI"}, {"displayName": "mTk9NuWa", "namespace": "xJjqlJ8m", "userId": "1gvOmy4C"}, {"displayName": "jogVtfeY", "namespace": "aqRb7IRK", "userId": "QkykGPDv"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddRoleMembersV3 \
    --roleId 'Wusyp7n7' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 234 'AdminAddRoleMembersV3' test.out

#- 235 AdminRemoveRoleMembersV3
eval_tap 0 235 'AdminRemoveRoleMembersV3 # SKIP deprecated' test.out

#- 236 AdminUpdateRolePermissionsV3
# body param: body
echo '{"permissions": [{"action": 41, "resource": "NBCXBzE3", "schedAction": 65, "schedCron": "QIz8wzHF", "schedRange": ["8KSrBK04", "lhchudKC", "PvHieu8b"]}, {"action": 4, "resource": "6eyv9tJu", "schedAction": 28, "schedCron": "s3XwvXlG", "schedRange": ["TCKlfTZK", "5yERCjaB", "7gsX6qDz"]}, {"action": 80, "resource": "qlpaWdIR", "schedAction": 35, "schedCron": "gGHZloRG", "schedRange": ["9cYf5gDS", "B7ykmp4i", "buG2D5g9"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateRolePermissionsV3 \
    --roleId 'y5NEhrby' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 236 'AdminUpdateRolePermissionsV3' test.out

#- 237 AdminAddRolePermissionsV3
# body param: body
echo '{"permissions": [{"action": 13, "resource": "W4BIweYc", "schedAction": 70, "schedCron": "LqHtKEZv", "schedRange": ["fXmxT17p", "F7nSEJLF", "k3z9ZAIL"]}, {"action": 8, "resource": "BygHhUro", "schedAction": 61, "schedCron": "IrThwIX0", "schedRange": ["oA2VIfP3", "d53s1Zhm", "g77xgHyc"]}, {"action": 95, "resource": "3jJjyZeA", "schedAction": 98, "schedCron": "soY0IJ2T", "schedRange": ["W30OcNWL", "DH4aEcIF", "7iOpENet"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddRolePermissionsV3 \
    --roleId 'oHxrYM4z' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 237 'AdminAddRolePermissionsV3' test.out

#- 238 AdminDeleteRolePermissionsV3
# body param: body
echo '["7kLVp6kY", "ONHcWRUQ", "ahM6h13x"]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDeleteRolePermissionsV3 \
    --roleId 'wWLijq63' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 238 'AdminDeleteRolePermissionsV3' test.out

#- 239 AdminDeleteRolePermissionV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteRolePermissionV3 \
    --action '62' \
    --resource 'xfk4Y1GV' \
    --roleId '4IoC3l1Q' \
    > test.out 2>&1
eval_tap $? 239 'AdminDeleteRolePermissionV3' test.out

#- 240 AdminGetMyUserV3
$CLI_EXE \
    --sn iam \
    --op AdminGetMyUserV3 \
    > test.out 2>&1
eval_tap $? 240 'AdminGetMyUserV3' test.out

#- 241 UserAuthenticationV3
$CLI_EXE \
    --sn iam \
    --op UserAuthenticationV3 \
    --client_id 'ZAo4V75t' \
    --extend_exp 'true' \
    --redirect_uri 'hmBcCY9V' \
    --password 'EarDi0it' \
    --request_id '41PLALHm' \
    --user_name 'v37fkpUt' \
    > test.out 2>&1
eval_tap $? 241 'UserAuthenticationV3' test.out

#- 242 AuthenticationWithPlatformLinkV3
$CLI_EXE \
    --sn iam \
    --op AuthenticationWithPlatformLinkV3 \
    --extend_exp 'true' \
    --client_id 'grkTqkNg' \
    --linkingToken 'QonQL1Vs' \
    --password 'VnjPUwMW' \
    --username '35rObxK6' \
    > test.out 2>&1
eval_tap $? 242 'AuthenticationWithPlatformLinkV3' test.out

#- 243 AuthenticateAndLinkForwardV3
$CLI_EXE \
    --sn iam \
    --op AuthenticateAndLinkForwardV3 \
    --extend_exp 'false' \
    --client_id 'rYHKp8mp' \
    --linkingToken 'P577Ouif' \
    --password 'nYs2KUQn' \
    --username 'myK3DR4V' \
    > test.out 2>&1
eval_tap $? 243 'AuthenticateAndLinkForwardV3' test.out

#- 244 PublicGetSystemConfigV3
$CLI_EXE \
    --sn iam \
    --op PublicGetSystemConfigV3 \
    > test.out 2>&1
eval_tap $? 244 'PublicGetSystemConfigV3' test.out

#- 245 GenerateTokenByNewHeadlessAccountV3
$CLI_EXE \
    --sn iam \
    --op GenerateTokenByNewHeadlessAccountV3 \
    --additionalData 'QevWijbu' \
    --extend_exp 'true' \
    --linkingToken 'CwC4UjsO' \
    > test.out 2>&1
eval_tap $? 245 'GenerateTokenByNewHeadlessAccountV3' test.out

#- 246 RequestOneTimeLinkingCodeV3
$CLI_EXE \
    --sn iam \
    --op RequestOneTimeLinkingCodeV3 \
    --redirectUri 'Wizf5yAf' \
    --state 'YIsfbSw0' \
    --platformId 'DYG2ledC' \
    > test.out 2>&1
eval_tap $? 246 'RequestOneTimeLinkingCodeV3' test.out

#- 247 ValidateOneTimeLinkingCodeV3
$CLI_EXE \
    --sn iam \
    --op ValidateOneTimeLinkingCodeV3 \
    --oneTimeLinkCode 'vXcTAYsK' \
    > test.out 2>&1
eval_tap $? 247 'ValidateOneTimeLinkingCodeV3' test.out

#- 248 RequestTokenByOneTimeLinkCodeResponseV3
$CLI_EXE \
    --sn iam \
    --op RequestTokenByOneTimeLinkCodeResponseV3 \
    --additionalData 'XDUnnES9' \
    --isTransient 'true' \
    --client_id 'XjQBZGds' \
    --oneTimeLinkCode 'bXH9PIwg' \
    > test.out 2>&1
eval_tap $? 248 'RequestTokenByOneTimeLinkCodeResponseV3' test.out

#- 249 GetCountryLocationV3
$CLI_EXE \
    --sn iam \
    --op GetCountryLocationV3 \
    > test.out 2>&1
eval_tap $? 249 'GetCountryLocationV3' test.out

#- 250 Logout
$CLI_EXE \
    --sn iam \
    --op Logout \
    > test.out 2>&1
eval_tap $? 250 'Logout' test.out

#- 251 RequestTokenExchangeCodeV3
$CLI_EXE \
    --sn iam \
    --op RequestTokenExchangeCodeV3 \
    --namespace $AB_NAMESPACE \
    --codeChallenge 'W1xX56jm' \
    --codeChallengeMethod 'plain' \
    --client_id 'lgRacNNx' \
    > test.out 2>&1
eval_tap $? 251 'RequestTokenExchangeCodeV3' test.out

#- 252 AdminRetrieveUserThirdPartyPlatformTokenV3
$CLI_EXE \
    --sn iam \
    --op AdminRetrieveUserThirdPartyPlatformTokenV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'aS9X1RUI' \
    --userId '9E9cRPCX' \
    --platformUserId 'KEgvgMcf' \
    > test.out 2>&1
eval_tap $? 252 'AdminRetrieveUserThirdPartyPlatformTokenV3' test.out

#- 253 RevokeUserV3
$CLI_EXE \
    --sn iam \
    --op RevokeUserV3 \
    --namespace $AB_NAMESPACE \
    --userId 'XjjylUlg' \
    --includeGameNamespace 'true' \
    > test.out 2>&1
eval_tap $? 253 'RevokeUserV3' test.out

#- 254 AuthorizeV3
$CLI_EXE \
    --sn iam \
    --op AuthorizeV3 \
    --blockedPlatformId '2CXeySEp' \
    --codeChallenge 'gdakTW4Y' \
    --codeChallengeMethod 'S256' \
    --createHeadless 'false' \
    --loginWebBased 'false' \
    --nonce 'DUkc7O8v' \
    --oneTimeLinkCode 'Z7f7WfU1' \
    --redirectUri 'RyEEIa5l' \
    --scope 'REKy7oqz' \
    --state 'g4ywDKuD' \
    --targetAuthPage 'DO1QZAsG' \
    --useRedirectUriAsLoginUrlWhenLocked 'true' \
    --clientId 'w89RrYid' \
    --responseType 'code' \
    > test.out 2>&1
eval_tap $? 254 'AuthorizeV3' test.out

#- 255 TokenIntrospectionV3
$CLI_EXE \
    --sn iam \
    --op TokenIntrospectionV3 \
    --token 'Hozy0zSr' \
    > test.out 2>&1
eval_tap $? 255 'TokenIntrospectionV3' test.out

#- 256 GetJWKSV3
$CLI_EXE \
    --sn iam \
    --op GetJWKSV3 \
    > test.out 2>&1
eval_tap $? 256 'GetJWKSV3' test.out

#- 257 SendMFAAuthenticationCode
$CLI_EXE \
    --sn iam \
    --op SendMFAAuthenticationCode \
    --clientId '9NdJWDHi' \
    --factor 'eoKqVars' \
    --mfaToken 'g0OMSxEU' \
    > test.out 2>&1
eval_tap $? 257 'SendMFAAuthenticationCode' test.out

#- 258 Change2faMethod
$CLI_EXE \
    --sn iam \
    --op Change2faMethod \
    --factor 'Agu9giHs' \
    --mfaToken 'qyUIXfsz' \
    > test.out 2>&1
eval_tap $? 258 'Change2faMethod' test.out

#- 259 Verify2faCode
$CLI_EXE \
    --sn iam \
    --op Verify2faCode \
    --code 'UBZt9bsX' \
    --factor 'fuTqt212' \
    --mfaToken 'fIqzNxDQ' \
    --rememberDevice 'false' \
    > test.out 2>&1
eval_tap $? 259 'Verify2faCode' test.out

#- 260 Verify2faCodeForward
$CLI_EXE \
    --sn iam \
    --op Verify2faCodeForward \
    --defaultFactor 'l4rTFLqT' \
    --factors 'ATzZGpMC' \
    --rememberDevice 'false' \
    --clientId 'rfMCh8bp' \
    --code 'xavYVvRD' \
    --factor 'UrOkZ2ke' \
    --mfaToken 'UPtzekK7' \
    > test.out 2>&1
eval_tap $? 260 'Verify2faCodeForward' test.out

#- 261 RetrieveUserThirdPartyPlatformTokenV3
$CLI_EXE \
    --sn iam \
    --op RetrieveUserThirdPartyPlatformTokenV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'GJljSPKC' \
    --userId 'qzaeLsNY' \
    > test.out 2>&1
eval_tap $? 261 'RetrieveUserThirdPartyPlatformTokenV3' test.out

#- 262 AuthCodeRequestV3
$CLI_EXE \
    --sn iam \
    --op AuthCodeRequestV3 \
    --platformId 'MFbv9A3Y' \
    --clientId 'b31Uhqft' \
    --redirectUri 'GwCcsmBN' \
    --requestId '1WB9JQbo' \
    > test.out 2>&1
eval_tap $? 262 'AuthCodeRequestV3' test.out

#- 263 PlatformTokenGrantV3
$CLI_EXE \
    --sn iam \
    --op PlatformTokenGrantV3 \
    --platformId 'UschEtc1' \
    --additionalData 'Tprd9PuT' \
    --client_id 'AjrGfuUu' \
    --createHeadless 'true' \
    --device_id 'oPnLrqF3' \
    --macAddress 'ooRvOHpp' \
    --platform_token '14e0NoSx' \
    --serviceLabel '0.18005993158228817' \
    --skipSetCookie 'true' \
    > test.out 2>&1
eval_tap $? 263 'PlatformTokenGrantV3' test.out

#- 264 GetRevocationListV3
$CLI_EXE \
    --sn iam \
    --op GetRevocationListV3 \
    > test.out 2>&1
eval_tap $? 264 'GetRevocationListV3' test.out

#- 265 TokenRevocationV3
$CLI_EXE \
    --sn iam \
    --op TokenRevocationV3 \
    --token 'C4kM5mUg' \
    > test.out 2>&1
eval_tap $? 265 'TokenRevocationV3' test.out

#- 266 SimultaneousLoginV3
$CLI_EXE \
    --sn iam \
    --op SimultaneousLoginV3 \
    --simultaneousPlatform 'Wm5WBgtF' \
    --simultaneousTicket 'A6zG6ilQ' \
    --nativePlatform 'epicgames' \
    --nativePlatformTicket 'oGdLX73O' \
    > test.out 2>&1
eval_tap $? 266 'SimultaneousLoginV3' test.out

#- 267 TokenGrantV3
$CLI_EXE \
    --sn iam \
    --op TokenGrantV3 \
    --additionalData '6BQ56dGp' \
    --client_id 'rCrTw9X5' \
    --client_secret 'yARy8BWC' \
    --code 'qLlHhuiT' \
    --code_verifier 'OQ1hq2kc' \
    --extendNamespace 'h31NhkRw' \
    --extend_exp 'false' \
    --password 'YVLaORnM' \
    --redirect_uri 'kUjGwNHu' \
    --refresh_token 'PvjCOVC9' \
    --scope 'TDWhelIm' \
    --username 'RxuHXYaR' \
    --grant_type 'urn:ietf:params:oauth:grant-type:extend_client_credentials' \
    > test.out 2>&1
eval_tap $? 267 'TokenGrantV3' test.out

#- 268 VerifyTokenV3
$CLI_EXE \
    --sn iam \
    --op VerifyTokenV3 \
    --token 'spTvFdSV' \
    > test.out 2>&1
eval_tap $? 268 'VerifyTokenV3' test.out

#- 269 PlatformAuthenticationV3
$CLI_EXE \
    --sn iam \
    --op PlatformAuthenticationV3 \
    --platformId 'cUuqL6XP' \
    --code 'nQjCgeVk' \
    --error 'ymjO2AHx' \
    --openidAssocHandle 'lY3r893F' \
    --openidClaimedId 'RSc4YfhK' \
    --openidIdentity 'f8gd67Cw' \
    --openidMode 'IaA0EBh2' \
    --openidNs 'xzrG4mgx' \
    --openidOpEndpoint 'IcSYno50' \
    --openidResponseNonce 'VVx1gSqP' \
    --openidReturnTo 'FKgCl4nB' \
    --openidSig 'hgVFi92N' \
    --openidSigned 'okfJR7lu' \
    --state 'NiX2VbuP' \
    > test.out 2>&1
eval_tap $? 269 'PlatformAuthenticationV3' test.out

#- 270 PlatformTokenRefreshV3
$CLI_EXE \
    --sn iam \
    --op PlatformTokenRefreshV3 \
    --platformId '1viDaWMj' \
    --platform_token 'c1gBKHiE' \
    > test.out 2>&1
eval_tap $? 270 'PlatformTokenRefreshV3' test.out

#- 271 PublicGetInputValidations
$CLI_EXE \
    --sn iam \
    --op PublicGetInputValidations \
    --defaultOnEmpty 'true' \
    --languageCode '1h8Xz0TU' \
    > test.out 2>&1
eval_tap $? 271 'PublicGetInputValidations' test.out

#- 272 PublicGetInputValidationByField
$CLI_EXE \
    --sn iam \
    --op PublicGetInputValidationByField \
    --field 'srPgvT1t' \
    > test.out 2>&1
eval_tap $? 272 'PublicGetInputValidationByField' test.out

#- 273 PublicGetCountryAgeRestrictionV3
$CLI_EXE \
    --sn iam \
    --op PublicGetCountryAgeRestrictionV3 \
    --countryCode 'U25og75t' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 273 'PublicGetCountryAgeRestrictionV3' test.out

#- 274 PublicGetConfigValueV3
$CLI_EXE \
    --sn iam \
    --op PublicGetConfigValueV3 \
    --configKey 'fwcJFdBi' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 274 'PublicGetConfigValueV3' test.out

#- 275 PublicGetCountryListV3
$CLI_EXE \
    --sn iam \
    --op PublicGetCountryListV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 275 'PublicGetCountryListV3' test.out

#- 276 RetrieveAllActiveThirdPartyLoginPlatformCredentialPublicV3
$CLI_EXE \
    --sn iam \
    --op RetrieveAllActiveThirdPartyLoginPlatformCredentialPublicV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 276 'RetrieveAllActiveThirdPartyLoginPlatformCredentialPublicV3' test.out

#- 277 RetrieveActiveOIDCClientsPublicV3
$CLI_EXE \
    --sn iam \
    --op RetrieveActiveOIDCClientsPublicV3 \
    --namespace $AB_NAMESPACE \
    --clientId 'Oe7uT6Hp' \
    > test.out 2>&1
eval_tap $? 277 'RetrieveActiveOIDCClientsPublicV3' test.out

#- 278 PublicListUserIDByPlatformUserIDsV3
eval_tap 0 278 'PublicListUserIDByPlatformUserIDsV3 # SKIP deprecated' test.out

#- 279 PublicGetUserByPlatformUserIDV3
eval_tap 0 279 'PublicGetUserByPlatformUserIDV3 # SKIP deprecated' test.out

#- 280 PublicGetProfileUpdateStrategyV3
$CLI_EXE \
    --sn iam \
    --op PublicGetProfileUpdateStrategyV3 \
    --namespace $AB_NAMESPACE \
    --field 'username' \
    > test.out 2>&1
eval_tap $? 280 'PublicGetProfileUpdateStrategyV3' test.out

#- 281 PublicGetAsyncStatus
$CLI_EXE \
    --sn iam \
    --op PublicGetAsyncStatus \
    --namespace $AB_NAMESPACE \
    --requestId 'IxP8TRdQ' \
    > test.out 2>&1
eval_tap $? 281 'PublicGetAsyncStatus' test.out

#- 282 PublicSearchUserV3
$CLI_EXE \
    --sn iam \
    --op PublicSearchUserV3 \
    --namespace $AB_NAMESPACE \
    --by '83wSimpX' \
    --limit '42' \
    --offset '73' \
    --platformBy 'rxP9eSMA' \
    --platformId 'DGG4OIrP' \
    --query 'EW81e3eg' \
    > test.out 2>&1
eval_tap $? 282 'PublicSearchUserV3' test.out

#- 283 PublicCreateUserV3
# body param: body
echo '{"PasswordMD5Sum": "eM16m62S", "acceptedPolicies": [{"isAccepted": true, "localizedPolicyVersionId": "KdNIyEyy", "policyId": "WtkvsWzd", "policyVersionId": "KmrMSo5C"}, {"isAccepted": false, "localizedPolicyVersionId": "JkXXTeQ5", "policyId": "B0QARIhi", "policyVersionId": "KS8axnIh"}, {"isAccepted": false, "localizedPolicyVersionId": "LDUzMG7C", "policyId": "7MWNPEqV", "policyVersionId": "X9HWALu8"}], "authType": "vhlx6r8w", "code": "aP8eXbwQ", "country": "pubWFQGd", "dateOfBirth": "I2gEq0ao", "displayName": "sg9zAFSk", "emailAddress": "V7d63GJU", "password": "GYAl7R3V", "reachMinimumAge": false, "uniqueDisplayName": "8ca6Fjhw"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicCreateUserV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 283 'PublicCreateUserV3' test.out

#- 284 CheckUserAvailability
$CLI_EXE \
    --sn iam \
    --op CheckUserAvailability \
    --namespace $AB_NAMESPACE \
    --field 'GcOBIZRA' \
    --query 'xNyJk72B' \
    > test.out 2>&1
eval_tap $? 284 'CheckUserAvailability' test.out

#- 285 PublicBulkGetUsers
eval_tap 0 285 'PublicBulkGetUsers # SKIP deprecated' test.out

#- 286 PublicSendRegistrationCode
# body param: body
echo '{"emailAddress": "TemQWSBF", "languageTag": "ZW44UMHF"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicSendRegistrationCode \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 286 'PublicSendRegistrationCode' test.out

#- 287 PublicVerifyRegistrationCode
# body param: body
echo '{"code": "tWVICUFN", "emailAddress": "H0Nhydbp"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicVerifyRegistrationCode \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 287 'PublicVerifyRegistrationCode' test.out

#- 288 PublicForgotPasswordV3
# body param: body
echo '{"emailAddress": "rvjhvZ7h", "languageTag": "SQzbl0MY"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicForgotPasswordV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 288 'PublicForgotPasswordV3' test.out

#- 289 PublicValidateUserInput
# body param: body
echo '{"displayName": "fFDOpCq7", "password": "jyMhZtxK", "uniqueDisplayName": "EbdRO8jT", "username": "yVuB61Yl"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicValidateUserInput \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 289 'PublicValidateUserInput' test.out

#- 290 GetAdminInvitationV3
$CLI_EXE \
    --sn iam \
    --op GetAdminInvitationV3 \
    --invitationId 'JLBbv4M2' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 290 'GetAdminInvitationV3' test.out

#- 291 CreateUserFromInvitationV3
# body param: body
echo '{"PasswordMD5Sum": "978yjIca", "acceptedPolicies": [{"isAccepted": true, "localizedPolicyVersionId": "uXZE9ylh", "policyId": "LtfI1zi5", "policyVersionId": "YDzfdSnR"}, {"isAccepted": true, "localizedPolicyVersionId": "shdXJJ0q", "policyId": "BMS6E5eZ", "policyVersionId": "nvtS5TPb"}, {"isAccepted": true, "localizedPolicyVersionId": "pXGlduDJ", "policyId": "iSuiamou", "policyVersionId": "VrG4bJQT"}], "authType": "jdK3HJr1", "code": "18Mwu4DT", "country": "ng8JujZp", "dateOfBirth": "DMqUUYqB", "displayName": "8ySIJrnG", "emailAddress": "TuCsHS4J", "password": "62o4uGUx", "reachMinimumAge": false, "uniqueDisplayName": "I3Kq0zd4"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op CreateUserFromInvitationV3 \
    --invitationId 'AEr3tR4T' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 291 'CreateUserFromInvitationV3' test.out

#- 292 UpdateUserV3
# body param: body
echo '{"avatarUrl": "AwrScfcu", "country": "qsKpoOpD", "dateOfBirth": "ekr8VH8y", "displayName": "ynBO6JxA", "languageTag": "FMFtsXiv", "uniqueDisplayName": "DTznKAr6", "userName": "SXBZQQBq"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op UpdateUserV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 292 'UpdateUserV3' test.out

#- 293 PublicPartialUpdateUserV3
# body param: body
echo '{"avatarUrl": "T3bMC5Ya", "country": "7RxIPeFK", "dateOfBirth": "02hMOO1j", "displayName": "1vIDZUpE", "languageTag": "WZUi5rJB", "uniqueDisplayName": "1TAtRUZ0", "userName": "gcqOGvK5"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicPartialUpdateUserV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 293 'PublicPartialUpdateUserV3' test.out

#- 294 PublicSendVerificationCodeV3
# body param: body
echo '{"context": "CXg9cZzB", "emailAddress": "JYsUfAqb", "languageTag": "aeMoCwej", "upgradeToken": "K8T9TSDf"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicSendVerificationCodeV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 294 'PublicSendVerificationCodeV3' test.out

#- 295 PublicUserVerificationV3
# body param: body
echo '{"code": "8GLq1aqP", "contactType": "BmD4SXlD", "languageTag": "4605J50o", "validateOnly": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUserVerificationV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 295 'PublicUserVerificationV3' test.out

#- 296 PublicUpgradeHeadlessAccountV3
# body param: body
echo '{"code": "B6pDuNO1", "country": "IonfwRLx", "dateOfBirth": "ZsmgAXXO", "displayName": "gC2ahc0t", "emailAddress": "0GXTxpzu", "password": "hvF3UvEj", "uniqueDisplayName": "EPNHvtbH", "validateOnly": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpgradeHeadlessAccountV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 296 'PublicUpgradeHeadlessAccountV3' test.out

#- 297 PublicVerifyHeadlessAccountV3
# body param: body
echo '{"emailAddress": "uaz0N1lD", "password": "5v0M5pwc"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicVerifyHeadlessAccountV3 \
    --namespace $AB_NAMESPACE \
    --needVerificationCode 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 297 'PublicVerifyHeadlessAccountV3' test.out

#- 298 PublicUpdatePasswordV3
# body param: body
echo '{"languageTag": "cC8bVlao", "mfaToken": "Jhn94XHl", "newPassword": "S9sz1yTb", "oldPassword": "DAz6K9HU"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpdatePasswordV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 298 'PublicUpdatePasswordV3' test.out

#- 299 PublicCreateJusticeUser
$CLI_EXE \
    --sn iam \
    --op PublicCreateJusticeUser \
    --namespace $AB_NAMESPACE \
    --targetNamespace '8JDl1iY2' \
    > test.out 2>&1
eval_tap $? 299 'PublicCreateJusticeUser' test.out

#- 300 PublicPlatformLinkV3
$CLI_EXE \
    --sn iam \
    --op PublicPlatformLinkV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'MFAIzt19' \
    --redirectUri 'Ir0kkng2' \
    --ticket 'd0XAIpvc' \
    > test.out 2>&1
eval_tap $? 300 'PublicPlatformLinkV3' test.out

#- 301 PublicPlatformUnlinkV3
eval_tap 0 301 'PublicPlatformUnlinkV3 # SKIP deprecated' test.out

#- 302 PublicPlatformUnlinkAllV3
$CLI_EXE \
    --sn iam \
    --op PublicPlatformUnlinkAllV3 \
    --namespace $AB_NAMESPACE \
    --platformId '3KfjC6k6' \
    > test.out 2>&1
eval_tap $? 302 'PublicPlatformUnlinkAllV3' test.out

#- 303 PublicForcePlatformLinkV3
$CLI_EXE \
    --sn iam \
    --op PublicForcePlatformLinkV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'L3bNdsMC' \
    --ticket 'sZuHgsiQ' \
    > test.out 2>&1
eval_tap $? 303 'PublicForcePlatformLinkV3' test.out

#- 304 PublicWebLinkPlatform
$CLI_EXE \
    --sn iam \
    --op PublicWebLinkPlatform \
    --namespace $AB_NAMESPACE \
    --platformId 'HEqxjXjz' \
    --clientId 'sOIPeUTk' \
    --redirectUri 'VIJu3o18' \
    > test.out 2>&1
eval_tap $? 304 'PublicWebLinkPlatform' test.out

#- 305 PublicWebLinkPlatformEstablish
$CLI_EXE \
    --sn iam \
    --op PublicWebLinkPlatformEstablish \
    --namespace $AB_NAMESPACE \
    --platformId 'odMe0ZYn' \
    --code 'lG9lBJvX' \
    --state '8bd8j38h' \
    > test.out 2>&1
eval_tap $? 305 'PublicWebLinkPlatformEstablish' test.out

#- 306 PublicProcessWebLinkPlatformV3
$CLI_EXE \
    --sn iam \
    --op PublicProcessWebLinkPlatformV3 \
    --namespace $AB_NAMESPACE \
    --platformId '2iHcK8zI' \
    --code 'go2ObOQN' \
    --state 'kCkcES0B' \
    > test.out 2>&1
eval_tap $? 306 'PublicProcessWebLinkPlatformV3' test.out

#- 307 PublicGetUsersPlatformInfosV3
# body param: body
echo '{"platformId": "lgHmGD3Y", "userIds": ["dv6kWM5F", "xGOvB8zJ", "h9p1J73B"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicGetUsersPlatformInfosV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 307 'PublicGetUsersPlatformInfosV3' test.out

#- 308 ResetPasswordV3
# body param: body
echo '{"clientId": "LWmCbLWQ", "code": "C45Hhfra", "emailAddress": "9yQsuBji", "languageTag": "1CCyCplN", "newPassword": "ytwfkzsC"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op ResetPasswordV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 308 'ResetPasswordV3' test.out

#- 309 PublicGetUserByUserIdV3
eval_tap 0 309 'PublicGetUserByUserIdV3 # SKIP deprecated' test.out

#- 310 PublicGetUserBanHistoryV3
$CLI_EXE \
    --sn iam \
    --op PublicGetUserBanHistoryV3 \
    --namespace $AB_NAMESPACE \
    --userId 'gjWCv77w' \
    --activeOnly 'true' \
    --after 'Errfyzbn' \
    --before '2oBuRJ3g' \
    --limit '10' \
    > test.out 2>&1
eval_tap $? 310 'PublicGetUserBanHistoryV3' test.out

#- 311 PublicListUserAllPlatformAccountsDistinctV3
$CLI_EXE \
    --sn iam \
    --op PublicListUserAllPlatformAccountsDistinctV3 \
    --namespace $AB_NAMESPACE \
    --userId '9lDb5FG5' \
    > test.out 2>&1
eval_tap $? 311 'PublicListUserAllPlatformAccountsDistinctV3' test.out

#- 312 PublicGetUserInformationV3
$CLI_EXE \
    --sn iam \
    --op PublicGetUserInformationV3 \
    --namespace $AB_NAMESPACE \
    --userId 'P86zTCvI' \
    > test.out 2>&1
eval_tap $? 312 'PublicGetUserInformationV3' test.out

#- 313 PublicGetUserLoginHistoriesV3
$CLI_EXE \
    --sn iam \
    --op PublicGetUserLoginHistoriesV3 \
    --namespace $AB_NAMESPACE \
    --userId '0mUR612N' \
    --after '0.33953305449785176' \
    --before '0.9926163576425462' \
    --limit '53' \
    > test.out 2>&1
eval_tap $? 313 'PublicGetUserLoginHistoriesV3' test.out

#- 314 PublicGetUserPlatformAccountsV3
$CLI_EXE \
    --sn iam \
    --op PublicGetUserPlatformAccountsV3 \
    --namespace $AB_NAMESPACE \
    --userId 'ketpU4aC' \
    --after 'gULkAuBj' \
    --before 'NEBWITzq' \
    --limit '7' \
    --platformId 'IpVOi7BC' \
    > test.out 2>&1
eval_tap $? 314 'PublicGetUserPlatformAccountsV3' test.out

#- 315 PublicListJusticePlatformAccountsV3
$CLI_EXE \
    --sn iam \
    --op PublicListJusticePlatformAccountsV3 \
    --namespace $AB_NAMESPACE \
    --userId 'fC4VQQdo' \
    > test.out 2>&1
eval_tap $? 315 'PublicListJusticePlatformAccountsV3' test.out

#- 316 PublicLinkPlatformAccount
# body param: body
echo '{"platformId": "5FuSar02", "platformUserId": "bTMn9aYg"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicLinkPlatformAccount \
    --namespace $AB_NAMESPACE \
    --userId 'crPhiG26' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 316 'PublicLinkPlatformAccount' test.out

#- 317 PublicForceLinkPlatformWithProgression
# body param: body
echo '{"chosenNamespaces": ["aYVNUbEa", "xN7Up1GW", "uvGsM7re"], "requestId": "zYuvVLyX"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicForceLinkPlatformWithProgression \
    --namespace $AB_NAMESPACE \
    --userId 'H9gjSb5r' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 317 'PublicForceLinkPlatformWithProgression' test.out

#- 318 PublicGetPublisherUserV3
$CLI_EXE \
    --sn iam \
    --op PublicGetPublisherUserV3 \
    --namespace $AB_NAMESPACE \
    --userId '9nr3FPTt' \
    > test.out 2>&1
eval_tap $? 318 'PublicGetPublisherUserV3' test.out

#- 319 PublicValidateUserByUserIDAndPasswordV3
$CLI_EXE \
    --sn iam \
    --op PublicValidateUserByUserIDAndPasswordV3 \
    --namespace $AB_NAMESPACE \
    --userId 'Xx4DmhJC' \
    --password 'uVMyfZjE' \
    > test.out 2>&1
eval_tap $? 319 'PublicValidateUserByUserIDAndPasswordV3' test.out

#- 320 PublicGetRolesV3
$CLI_EXE \
    --sn iam \
    --op PublicGetRolesV3 \
    --after '4A90Vs5j' \
    --before 'oXERch95' \
    --isWildcard 'false' \
    --limit '77' \
    > test.out 2>&1
eval_tap $? 320 'PublicGetRolesV3' test.out

#- 321 PublicGetRoleV3
$CLI_EXE \
    --sn iam \
    --op PublicGetRoleV3 \
    --roleId '338xThI5' \
    > test.out 2>&1
eval_tap $? 321 'PublicGetRoleV3' test.out

#- 322 PublicForgotPasswordWithoutNamespaceV3
# body param: body
echo '{"clientId": "P7ia0Y52", "emailAddress": "iRegsfQX", "languageTag": "AvwIG12x"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicForgotPasswordWithoutNamespaceV3 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 322 'PublicForgotPasswordWithoutNamespaceV3' test.out

#- 323 PublicGetMyUserV3
$CLI_EXE \
    --sn iam \
    --op PublicGetMyUserV3 \
    --includeAllPlatforms 'true' \
    > test.out 2>&1
eval_tap $? 323 'PublicGetMyUserV3' test.out

#- 324 PublicSendCodeForwardV3
# body param: body
echo '{"context": "SsEN8sVs", "emailAddress": "DD4gQjwz", "languageTag": "tYFp4HgE", "upgradeToken": "yBsFbz2u"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicSendCodeForwardV3 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 324 'PublicSendCodeForwardV3' test.out

#- 325 PublicGetLinkHeadlessAccountToMyAccountConflictV3
$CLI_EXE \
    --sn iam \
    --op PublicGetLinkHeadlessAccountToMyAccountConflictV3 \
    --oneTimeLinkCode 'DpNHiW12' \
    > test.out 2>&1
eval_tap $? 325 'PublicGetLinkHeadlessAccountToMyAccountConflictV3' test.out

#- 326 LinkHeadlessAccountToMyAccountV3
# body param: body
echo '{"chosenNamespaces": ["xy8lRNOT", "DCJpAgnw", "moYb2Ix4"], "oneTimeLinkCode": "KttQXg0J"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op LinkHeadlessAccountToMyAccountV3 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 326 'LinkHeadlessAccountToMyAccountV3' test.out

#- 327 PublicGetMyRedirectionAfterLinkV3
$CLI_EXE \
    --sn iam \
    --op PublicGetMyRedirectionAfterLinkV3 \
    --oneTimeLinkCode 'zDgZOYsv' \
    > test.out 2>&1
eval_tap $? 327 'PublicGetMyRedirectionAfterLinkV3' test.out

#- 328 PublicGetMyProfileAllowUpdateStatusV3
$CLI_EXE \
    --sn iam \
    --op PublicGetMyProfileAllowUpdateStatusV3 \
    > test.out 2>&1
eval_tap $? 328 'PublicGetMyProfileAllowUpdateStatusV3' test.out

#- 329 PublicSendVerificationLinkV3
# body param: body
echo '{"languageTag": "8qgYxtYa"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicSendVerificationLinkV3 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 329 'PublicSendVerificationLinkV3' test.out

#- 330 PublicGetOpenidUserInfoV3
$CLI_EXE \
    --sn iam \
    --op PublicGetOpenidUserInfoV3 \
    > test.out 2>&1
eval_tap $? 330 'PublicGetOpenidUserInfoV3' test.out

#- 331 PublicVerifyUserByLinkV3
$CLI_EXE \
    --sn iam \
    --op PublicVerifyUserByLinkV3 \
    --code 'yPNo9UB1' \
    > test.out 2>&1
eval_tap $? 331 'PublicVerifyUserByLinkV3' test.out

#- 332 PlatformAuthenticateSAMLV3Handler
$CLI_EXE \
    --sn iam \
    --op PlatformAuthenticateSAMLV3Handler \
    --platformId 'RM3OYn6t' \
    --code 'lhO1CWdO' \
    --error 'oQxFa7Ul' \
    --state 'X3dQGxaw' \
    > test.out 2>&1
eval_tap $? 332 'PlatformAuthenticateSAMLV3Handler' test.out

#- 333 LoginSSOClient
$CLI_EXE \
    --sn iam \
    --op LoginSSOClient \
    --platformId 'UcKjlGlr' \
    --payload 'kV0odTki' \
    > test.out 2>&1
eval_tap $? 333 'LoginSSOClient' test.out

#- 334 LogoutSSOClient
$CLI_EXE \
    --sn iam \
    --op LogoutSSOClient \
    --platformId 'n1Uy0fLw' \
    > test.out 2>&1
eval_tap $? 334 'LogoutSSOClient' test.out

#- 335 RequestTargetTokenResponseV3
$CLI_EXE \
    --sn iam \
    --op RequestTargetTokenResponseV3 \
    --additionalData 'IoaCbsMn' \
    --code 'TD3RtlTa' \
    > test.out 2>&1
eval_tap $? 335 'RequestTargetTokenResponseV3' test.out

#- 336 UpgradeAndAuthenticateForwardV3
$CLI_EXE \
    --sn iam \
    --op UpgradeAndAuthenticateForwardV3 \
    --client_id 'VEe0nrku' \
    --upgrade_success_token 'Qicct7UY' \
    > test.out 2>&1
eval_tap $? 336 'UpgradeAndAuthenticateForwardV3' test.out

#- 337 AdminListInvitationHistoriesV4
$CLI_EXE \
    --sn iam \
    --op AdminListInvitationHistoriesV4 \
    --limit '26' \
    --namespace_ 'xl5ufmDh' \
    --offset '54' \
    > test.out 2>&1
eval_tap $? 337 'AdminListInvitationHistoriesV4' test.out

#- 338 AdminGetDevicesByUserV4
$CLI_EXE \
    --sn iam \
    --op AdminGetDevicesByUserV4 \
    --namespace $AB_NAMESPACE \
    --userId 'Sxl8Z7c8' \
    > test.out 2>&1
eval_tap $? 338 'AdminGetDevicesByUserV4' test.out

#- 339 AdminGetBannedDevicesV4
$CLI_EXE \
    --sn iam \
    --op AdminGetBannedDevicesV4 \
    --namespace $AB_NAMESPACE \
    --deviceType 'kEuH55TR' \
    --endDate 'FiJe7tiZ' \
    --limit '51' \
    --offset '78' \
    --startDate 'L9Hxyen8' \
    > test.out 2>&1
eval_tap $? 339 'AdminGetBannedDevicesV4' test.out

#- 340 AdminGetUserDeviceBansV4
$CLI_EXE \
    --sn iam \
    --op AdminGetUserDeviceBansV4 \
    --namespace $AB_NAMESPACE \
    --userId 'LyHtHWQM' \
    > test.out 2>&1
eval_tap $? 340 'AdminGetUserDeviceBansV4' test.out

#- 341 AdminBanDeviceV4
# body param: body
echo '{"comment": "8lDl2bQn", "deviceId": "JKpfYTUb", "deviceType": "hKhtRhMZ", "enabled": true, "endDate": "s2aY2muD", "ext": {"RQfHNLcF": {}, "6yRQ8KUj": {}, "tTFzYFVp": {}}, "reason": "o6JVNzPT"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBanDeviceV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 341 'AdminBanDeviceV4' test.out

#- 342 AdminGetDeviceBanV4
$CLI_EXE \
    --sn iam \
    --op AdminGetDeviceBanV4 \
    --banId 'xbyQleHx' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 342 'AdminGetDeviceBanV4' test.out

#- 343 AdminUpdateDeviceBanV4
# body param: body
echo '{"enabled": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateDeviceBanV4 \
    --banId 'jJM7WDRJ' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 343 'AdminUpdateDeviceBanV4' test.out

#- 344 AdminGenerateReportV4
$CLI_EXE \
    --sn iam \
    --op AdminGenerateReportV4 \
    --namespace $AB_NAMESPACE \
    --endDate 'MsoViFKI' \
    --startDate '0nnbCudl' \
    --deviceType 'TApop8bq' \
    > test.out 2>&1
eval_tap $? 344 'AdminGenerateReportV4' test.out

#- 345 AdminGetDeviceTypesV4
$CLI_EXE \
    --sn iam \
    --op AdminGetDeviceTypesV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 345 'AdminGetDeviceTypesV4' test.out

#- 346 AdminGetDeviceBansV4
$CLI_EXE \
    --sn iam \
    --op AdminGetDeviceBansV4 \
    --deviceId 'UIrg33t4' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 346 'AdminGetDeviceBansV4' test.out

#- 347 AdminDecryptDeviceV4
eval_tap 0 347 'AdminDecryptDeviceV4 # SKIP deprecated' test.out

#- 348 AdminUnbanDeviceV4
$CLI_EXE \
    --sn iam \
    --op AdminUnbanDeviceV4 \
    --deviceId 'hTvD9A6w' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 348 'AdminUnbanDeviceV4' test.out

#- 349 AdminGetUsersByDeviceV4
$CLI_EXE \
    --sn iam \
    --op AdminGetUsersByDeviceV4 \
    --deviceId '5tNBA3lu' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 349 'AdminGetUsersByDeviceV4' test.out

#- 350 AdminGetNamespaceInvitationHistoryV4
$CLI_EXE \
    --sn iam \
    --op AdminGetNamespaceInvitationHistoryV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 350 'AdminGetNamespaceInvitationHistoryV4' test.out

#- 351 AdminGetNamespaceUserInvitationHistoryV4
$CLI_EXE \
    --sn iam \
    --op AdminGetNamespaceUserInvitationHistoryV4 \
    --namespace $AB_NAMESPACE \
    --limit '44' \
    --offset '55' \
    > test.out 2>&1
eval_tap $? 351 'AdminGetNamespaceUserInvitationHistoryV4' test.out

#- 352 AdminCreateTestUsersV4
# body param: body
echo '{"acceptedPolicies": [{"isAccepted": false, "localizedPolicyVersionId": "byaQLNhX", "policyId": "WxTUJ5jM", "policyVersionId": "ix5tX0Ts"}, {"isAccepted": false, "localizedPolicyVersionId": "pxalcmYS", "policyId": "XG3docyE", "policyVersionId": "yOzJEzet"}, {"isAccepted": true, "localizedPolicyVersionId": "GQ8VUyNJ", "policyId": "991EXFLv", "policyVersionId": "0UR0g3fZ"}], "count": 7, "userInfo": {"country": "rdD5ARzO"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminCreateTestUsersV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 352 'AdminCreateTestUsersV4' test.out

#- 353 AdminCreateUserV4
# body param: body
echo '{"acceptedPolicies": [{"isAccepted": false, "localizedPolicyVersionId": "npWYMPRO", "policyId": "dHUCyT4V", "policyVersionId": "eCZ2gr7D"}, {"isAccepted": false, "localizedPolicyVersionId": "eNu8y5Vu", "policyId": "0bkhXDut", "policyVersionId": "SLhEC8OF"}, {"isAccepted": true, "localizedPolicyVersionId": "OUA86IXs", "policyId": "S1lEz5ul", "policyVersionId": "Gj0tgsMm"}], "authType": "EMAILPASSWD", "code": "Nbqwx5vb", "country": "5rLM5wBY", "dateOfBirth": "pKxLXo0k", "displayName": "Rj2IQ6Qr", "emailAddress": "4bPjAYus", "password": "hCO1brBP", "passwordMD5Sum": "FG8J5w83", "reachMinimumAge": true, "uniqueDisplayName": "CqEHPGej", "username": "UCpMMiu6"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminCreateUserV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 353 'AdminCreateUserV4' test.out

#- 354 AdminBulkUpdateUserAccountTypeV4
# body param: body
echo '{"testAccount": false, "userIds": ["YdhAOnW1", "zSDdelhW", "tm5e5xiQ"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBulkUpdateUserAccountTypeV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 354 'AdminBulkUpdateUserAccountTypeV4' test.out

#- 355 AdminBulkCheckValidUserIDV4
# body param: body
echo '{"userIds": ["1kkUEndR", "ZT8ig2JJ", "WdtC9IOE"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBulkCheckValidUserIDV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 355 'AdminBulkCheckValidUserIDV4' test.out

#- 356 AdminUpdateUserV4
# body param: body
echo '{"avatarUrl": "zUD399np", "country": "CPPoPNms", "dateOfBirth": "Ote5UmkO", "displayName": "Jqh9qlsj", "languageTag": "o2EaJ4lm", "skipLoginQueue": true, "tags": ["Z784u50y", "lUjOvIrI", "xz6wroys"], "uniqueDisplayName": "gnwAJyNw", "userName": "O0sw0GEK"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserV4 \
    --namespace $AB_NAMESPACE \
    --userId 'cje4UlBv' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 356 'AdminUpdateUserV4' test.out

#- 357 AdminUpdateUserEmailAddressV4
# body param: body
echo '{"code": "Q8kqv7qZ", "emailAddress": "FLYQo8Af"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserEmailAddressV4 \
    --namespace $AB_NAMESPACE \
    --userId 'v30sz8bz' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 357 'AdminUpdateUserEmailAddressV4' test.out

#- 358 AdminDisableUserMFAV4
# body param: body
echo '{"factor": "nsK2rCCY", "mfaToken": "zqiQHShd"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDisableUserMFAV4 \
    --namespace $AB_NAMESPACE \
    --userId 'WM4r0VMf' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 358 'AdminDisableUserMFAV4' test.out

#- 359 AdminGetUserMFAStatusV4
$CLI_EXE \
    --sn iam \
    --op AdminGetUserMFAStatusV4 \
    --namespace $AB_NAMESPACE \
    --userId 'uMyWvaa3' \
    > test.out 2>&1
eval_tap $? 359 'AdminGetUserMFAStatusV4' test.out

#- 360 AdminListUserRolesV4
$CLI_EXE \
    --sn iam \
    --op AdminListUserRolesV4 \
    --namespace $AB_NAMESPACE \
    --userId 'NsiLTjCg' \
    > test.out 2>&1
eval_tap $? 360 'AdminListUserRolesV4' test.out

#- 361 AdminUpdateUserRoleV4
# body param: body
echo '{"assignedNamespaces": ["piSMDXKR", "QZTIgihT", "00l4exOo"], "roleId": "R1KTW9Su"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserRoleV4 \
    --namespace $AB_NAMESPACE \
    --userId 'fZst5B86' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 361 'AdminUpdateUserRoleV4' test.out

#- 362 AdminAddUserRoleV4
# body param: body
echo '{"assignedNamespaces": ["POSmhvGX", "3635oaER", "aqn2vchT"], "roleId": "uw2qHJVQ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddUserRoleV4 \
    --namespace $AB_NAMESPACE \
    --userId 'M69DDdNx' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 362 'AdminAddUserRoleV4' test.out

#- 363 AdminRemoveUserRoleV4
# body param: body
echo '{"assignedNamespaces": ["bD3LVh1N", "8u6P3iZ1", "IYUQAow3"], "roleId": "Wod1dFGn"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminRemoveUserRoleV4 \
    --namespace $AB_NAMESPACE \
    --userId 'uBnbGbVS' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 363 'AdminRemoveUserRoleV4' test.out

#- 364 AdminGetRolesV4
$CLI_EXE \
    --sn iam \
    --op AdminGetRolesV4 \
    --adminRole 'true' \
    --isWildcard 'true' \
    --limit '87' \
    --offset '75' \
    > test.out 2>&1
eval_tap $? 364 'AdminGetRolesV4' test.out

#- 365 AdminCreateRoleV4
# body param: body
echo '{"adminRole": false, "deletable": false, "isWildcard": false, "roleName": "n0vOcz6T"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminCreateRoleV4 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 365 'AdminCreateRoleV4' test.out

#- 366 AdminGetRoleV4
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleV4 \
    --roleId 'bSfWp3NL' \
    > test.out 2>&1
eval_tap $? 366 'AdminGetRoleV4' test.out

#- 367 AdminDeleteRoleV4
$CLI_EXE \
    --sn iam \
    --op AdminDeleteRoleV4 \
    --roleId 'dVPoHMqq' \
    > test.out 2>&1
eval_tap $? 367 'AdminDeleteRoleV4' test.out

#- 368 AdminUpdateRoleV4
# body param: body
echo '{"adminRole": true, "deletable": true, "isWildcard": true, "roleName": "tbifQ0wp"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateRoleV4 \
    --roleId 'pMXlgVk2' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 368 'AdminUpdateRoleV4' test.out

#- 369 AdminUpdateRolePermissionsV4
# body param: body
echo '{"permissions": [{"action": 38, "resource": "fwZS5J5x", "schedAction": 63, "schedCron": "4fRJXmFL", "schedRange": ["hU5oPvYP", "ZMwQCJXq", "qTi5rcF3"]}, {"action": 54, "resource": "afnlqjJM", "schedAction": 52, "schedCron": "nyPRVzVN", "schedRange": ["bMI3Zb0g", "vNynjQga", "W8WXgVQt"]}, {"action": 99, "resource": "AyGSIKbX", "schedAction": 77, "schedCron": "SyXOzJk8", "schedRange": ["BLD001As", "yyAU3Ssa", "eI1Sbpv5"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateRolePermissionsV4 \
    --roleId 'wRVTElmz' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 369 'AdminUpdateRolePermissionsV4' test.out

#- 370 AdminAddRolePermissionsV4
# body param: body
echo '{"permissions": [{"action": 79, "resource": "Q4LVT4Eq", "schedAction": 0, "schedCron": "LCNVxhJR", "schedRange": ["Uy4oO2hO", "WQBR1cMF", "vaXsetSv"]}, {"action": 98, "resource": "S2sa0qx1", "schedAction": 100, "schedCron": "1NbATXUS", "schedRange": ["wzMXdKGq", "59AGPpvz", "5zWSJ9EI"]}, {"action": 55, "resource": "lZJJxOqj", "schedAction": 43, "schedCron": "40056JgX", "schedRange": ["fTzcHeko", "AZxxrFux", "jlRvpUle"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddRolePermissionsV4 \
    --roleId 'byE07JdO' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 370 'AdminAddRolePermissionsV4' test.out

#- 371 AdminDeleteRolePermissionsV4
# body param: body
echo '["X1ZhiSOn", "qZNiMFNs", "7A2b3MZv"]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDeleteRolePermissionsV4 \
    --roleId 'ollYCDxM' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 371 'AdminDeleteRolePermissionsV4' test.out

#- 372 AdminListAssignedUsersV4
$CLI_EXE \
    --sn iam \
    --op AdminListAssignedUsersV4 \
    --roleId 'wF39PFel' \
    --after 'o0ylVXqe' \
    --before 'trtcoCht' \
    --limit '80' \
    > test.out 2>&1
eval_tap $? 372 'AdminListAssignedUsersV4' test.out

#- 373 AdminAssignUserToRoleV4
# body param: body
echo '{"assignedNamespaces": ["sZ5WAphH", "t5mXb9lP", "NQcjob4M"], "namespace": "dKCHM3AO", "userId": "3lXtmJ1I"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAssignUserToRoleV4 \
    --roleId 'qoMFfVuA' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 373 'AdminAssignUserToRoleV4' test.out

#- 374 AdminRevokeUserFromRoleV4
# body param: body
echo '{"namespace": "oclhK3Po", "userId": "eYnHw7iO"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminRevokeUserFromRoleV4 \
    --roleId 'DBgINPyt' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 374 'AdminRevokeUserFromRoleV4' test.out

#- 375 AdminInviteUserNewV4
# body param: body
echo '{"assignedNamespaces": ["CHKgmt4H", "atsEPAvQ", "zEEQSOPW"], "emailAddresses": ["0iE8NCe1", "0bqaaPFh", "BhC0g8YG"], "isAdmin": true, "isNewStudio": true, "languageTag": "WO8Le5ra", "namespace": "m3eANWng", "roleId": "XhrVvtSI"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminInviteUserNewV4 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 375 'AdminInviteUserNewV4' test.out

#- 376 AdminUpdateMyUserV4
# body param: body
echo '{"avatarUrl": "fEfNdrDq", "country": "6h62YKY4", "dateOfBirth": "f2e6sKsW", "displayName": "UbwW4MAZ", "languageTag": "szw0RPCN", "skipLoginQueue": true, "tags": ["Q367FEXQ", "BibvNmXx", "MAHxdiO8"], "uniqueDisplayName": "4nhv4m22", "userName": "nm0RrKxs"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateMyUserV4 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 376 'AdminUpdateMyUserV4' test.out

#- 377 AdminDisableMyAuthenticatorV4
# body param: body
echo '{"factor": "vZXQT0rJ", "mfaToken": "1DAVMViv"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDisableMyAuthenticatorV4 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 377 'AdminDisableMyAuthenticatorV4' test.out

#- 378 AdminEnableMyAuthenticatorV4
$CLI_EXE \
    --sn iam \
    --op AdminEnableMyAuthenticatorV4 \
    --code 'pk5FOS6y' \
    > test.out 2>&1
eval_tap $? 378 'AdminEnableMyAuthenticatorV4' test.out

#- 379 AdminGenerateMyAuthenticatorKeyV4
$CLI_EXE \
    --sn iam \
    --op AdminGenerateMyAuthenticatorKeyV4 \
    > test.out 2>&1
eval_tap $? 379 'AdminGenerateMyAuthenticatorKeyV4' test.out

#- 380 AdminGetMyBackupCodesV4
eval_tap 0 380 'AdminGetMyBackupCodesV4 # SKIP deprecated' test.out

#- 381 AdminGenerateMyBackupCodesV4
eval_tap 0 381 'AdminGenerateMyBackupCodesV4 # SKIP deprecated' test.out

#- 382 AdminDisableMyBackupCodesV4
# body param: body
echo '{"factor": "loLkzToH", "mfaToken": "j1SCrmtQ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDisableMyBackupCodesV4 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 382 'AdminDisableMyBackupCodesV4' test.out

#- 383 AdminDownloadMyBackupCodesV4
eval_tap 0 383 'AdminDownloadMyBackupCodesV4 # SKIP deprecated' test.out

#- 384 AdminEnableMyBackupCodesV4
eval_tap 0 384 'AdminEnableMyBackupCodesV4 # SKIP deprecated' test.out

#- 385 AdminGetBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op AdminGetBackupCodesV4 \
    --languageTag 'eTNtMbMn' \
    > test.out 2>&1
eval_tap $? 385 'AdminGetBackupCodesV4' test.out

#- 386 AdminGenerateBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op AdminGenerateBackupCodesV4 \
    --languageTag '0GuTbuOU' \
    > test.out 2>&1
eval_tap $? 386 'AdminGenerateBackupCodesV4' test.out

#- 387 AdminEnableBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op AdminEnableBackupCodesV4 \
    --languageTag 'URUsIphN' \
    > test.out 2>&1
eval_tap $? 387 'AdminEnableBackupCodesV4' test.out

#- 388 AdminChallengeMyMFAV4
$CLI_EXE \
    --sn iam \
    --op AdminChallengeMyMFAV4 \
    --code 'hpPdaiCi' \
    --factor 'WNf7m7tu' \
    > test.out 2>&1
eval_tap $? 388 'AdminChallengeMyMFAV4' test.out

#- 389 AdminSendMyMFAEmailCodeV4
$CLI_EXE \
    --sn iam \
    --op AdminSendMyMFAEmailCodeV4 \
    --action 'AyOe9vCs' \
    --languageTag 'sV7gFhok' \
    > test.out 2>&1
eval_tap $? 389 'AdminSendMyMFAEmailCodeV4' test.out

#- 390 AdminDisableMyEmailV4
# body param: body
echo '{"factor": "KNaPXvp0", "mfaToken": "5FflnO1F"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDisableMyEmailV4 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 390 'AdminDisableMyEmailV4' test.out

#- 391 AdminEnableMyEmailV4
$CLI_EXE \
    --sn iam \
    --op AdminEnableMyEmailV4 \
    --code 'IjA36CWz' \
    > test.out 2>&1
eval_tap $? 391 'AdminEnableMyEmailV4' test.out

#- 392 AdminGetMyEnabledFactorsV4
$CLI_EXE \
    --sn iam \
    --op AdminGetMyEnabledFactorsV4 \
    > test.out 2>&1
eval_tap $? 392 'AdminGetMyEnabledFactorsV4' test.out

#- 393 AdminMakeFactorMyDefaultV4
$CLI_EXE \
    --sn iam \
    --op AdminMakeFactorMyDefaultV4 \
    --factor 'Bpc2asP2' \
    > test.out 2>&1
eval_tap $? 393 'AdminMakeFactorMyDefaultV4' test.out

#- 394 AdminGetMyOwnMFAStatusV4
$CLI_EXE \
    --sn iam \
    --op AdminGetMyOwnMFAStatusV4 \
    > test.out 2>&1
eval_tap $? 394 'AdminGetMyOwnMFAStatusV4' test.out

#- 395 AdminGetMyMFAStatusV4
eval_tap 0 395 'AdminGetMyMFAStatusV4 # SKIP deprecated' test.out

#- 396 AdminInviteUserV4
eval_tap 0 396 'AdminInviteUserV4 # SKIP deprecated' test.out

#- 397 AuthenticationWithPlatformLinkV4
$CLI_EXE \
    --sn iam \
    --op AuthenticationWithPlatformLinkV4 \
    --extend_exp 'true' \
    --client_id 'JGhGjUdB' \
    --linkingToken 'D12br4tV' \
    --password 'TrefrMPl' \
    --username 'ONCCD3XN' \
    > test.out 2>&1
eval_tap $? 397 'AuthenticationWithPlatformLinkV4' test.out

#- 398 GenerateTokenByNewHeadlessAccountV4
$CLI_EXE \
    --sn iam \
    --op GenerateTokenByNewHeadlessAccountV4 \
    --additionalData 'MfuDm8kc' \
    --extend_exp 'false' \
    --linkingToken 'KkJSenVH' \
    > test.out 2>&1
eval_tap $? 398 'GenerateTokenByNewHeadlessAccountV4' test.out

#- 399 Verify2faCodeV4
$CLI_EXE \
    --sn iam \
    --op Verify2faCodeV4 \
    --code 'SMP5nG4k' \
    --factor 'XUzOc6HF' \
    --mfaToken '8LcoyNDd' \
    --rememberDevice 'true' \
    > test.out 2>&1
eval_tap $? 399 'Verify2faCodeV4' test.out

#- 400 PlatformTokenGrantV4
$CLI_EXE \
    --sn iam \
    --op PlatformTokenGrantV4 \
    --platformId 'aArExJqx' \
    --codeChallenge 'ApQ78zVm' \
    --codeChallengeMethod 'S256' \
    --additionalData 'ZgyMOvt3' \
    --client_id 'Zo7VjVs9' \
    --createHeadless 'true' \
    --device_id 'klmPTQjb' \
    --macAddress 'aMxyzhkr' \
    --platform_token 'dNuPilN9' \
    --serviceLabel '0.5382211523656899' \
    --skipSetCookie 'true' \
    > test.out 2>&1
eval_tap $? 400 'PlatformTokenGrantV4' test.out

#- 401 SimultaneousLoginV4
$CLI_EXE \
    --sn iam \
    --op SimultaneousLoginV4 \
    --codeChallenge 'GH0QubqS' \
    --codeChallengeMethod 'S256' \
    --simultaneousPlatform 'PxSV8KE3' \
    --simultaneousTicket '44S5mTG1' \
    --nativePlatform 'epicgames' \
    --nativePlatformTicket 'qrsEmCMv' \
    > test.out 2>&1
eval_tap $? 401 'SimultaneousLoginV4' test.out

#- 402 TokenGrantV4
$CLI_EXE \
    --sn iam \
    --op TokenGrantV4 \
    --codeChallenge 'IejkLmBQ' \
    --codeChallengeMethod 'plain' \
    --additionalData 'LyyxtO03' \
    --client_id 'tUAZsPGf' \
    --client_secret 'nS8itkC2' \
    --code 'pJjQUrPG' \
    --code_verifier 'ODnyZgGU' \
    --extendNamespace 'YktNsW8n' \
    --extend_exp 'false' \
    --login_queue_ticket 'xSBvXOTw' \
    --password 'Cx05mXJj' \
    --redirect_uri 'Zzmi4t43' \
    --refresh_token 'WTcAjaJ4' \
    --scope 'sT2XKfL0' \
    --username 'SE85DXZU' \
    --grant_type 'password' \
    > test.out 2>&1
eval_tap $? 402 'TokenGrantV4' test.out

#- 403 RequestTargetTokenResponseV4
$CLI_EXE \
    --sn iam \
    --op RequestTargetTokenResponseV4 \
    --additionalData 'Cd4sH78i' \
    --code '9nl1AcdC' \
    > test.out 2>&1
eval_tap $? 403 'RequestTargetTokenResponseV4' test.out

#- 404 PublicListUserIDByPlatformUserIDsV4
# body param: body
echo '{"pidType": "3n2FBTD3", "platformUserIds": ["5b85UMWj", "SsOniaof", "fSw396RZ"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicListUserIDByPlatformUserIDsV4 \
    --namespace $AB_NAMESPACE \
    --platformId '3IWsOG8w' \
    --rawPUID 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 404 'PublicListUserIDByPlatformUserIDsV4' test.out

#- 405 PublicGetUserByPlatformUserIDV4
$CLI_EXE \
    --sn iam \
    --op PublicGetUserByPlatformUserIDV4 \
    --namespace $AB_NAMESPACE \
    --platformId '9Q6nZbsp' \
    --platformUserId 'irHfbaE5' \
    > test.out 2>&1
eval_tap $? 405 'PublicGetUserByPlatformUserIDV4' test.out

#- 406 PublicCreateTestUserV4
# body param: body
echo '{"acceptedPolicies": [{"isAccepted": false, "localizedPolicyVersionId": "cGDEuMbt", "policyId": "z7dybbLf", "policyVersionId": "3IbgA17t"}, {"isAccepted": true, "localizedPolicyVersionId": "bspZLu5k", "policyId": "914Y4Nsl", "policyVersionId": "03kUK5Zv"}, {"isAccepted": false, "localizedPolicyVersionId": "FoTK3YyJ", "policyId": "KUOaqKti", "policyVersionId": "Cn52ZOAV"}], "authType": "EMAILPASSWD", "country": "yg8qqkJ6", "dateOfBirth": "6tCF8f7k", "displayName": "2XpaJslQ", "emailAddress": "Xob5RNBP", "password": "ZlxpgbYr", "passwordMD5Sum": "i9Ml0EQG", "uniqueDisplayName": "32w3YB3m", "username": "uRvq94sn", "verified": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicCreateTestUserV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 406 'PublicCreateTestUserV4' test.out

#- 407 PublicCreateUserV4
# body param: body
echo '{"acceptedPolicies": [{"isAccepted": true, "localizedPolicyVersionId": "bYX1DlSI", "policyId": "KJQXWcqx", "policyVersionId": "pOmGDarg"}, {"isAccepted": true, "localizedPolicyVersionId": "aN9mmHS3", "policyId": "b0hHfqKn", "policyVersionId": "iFLjQ2tH"}, {"isAccepted": true, "localizedPolicyVersionId": "lUorWnN8", "policyId": "BSVMcCFH", "policyVersionId": "jF8JKoNv"}], "authType": "EMAILPASSWD", "code": "irnCsQ83", "country": "08tTeilS", "dateOfBirth": "wkxguIDH", "displayName": "5s1Pt0rB", "emailAddress": "jZJIckQG", "password": "37mqtpK4", "passwordMD5Sum": "4eZOBLix", "reachMinimumAge": true, "uniqueDisplayName": "YHfhiF1a", "username": "vCifd1DH"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicCreateUserV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 407 'PublicCreateUserV4' test.out

#- 408 CreateUserFromInvitationV4
# body param: body
echo '{"acceptedPolicies": [{"isAccepted": true, "localizedPolicyVersionId": "N3QoD7cs", "policyId": "gvQS30HU", "policyVersionId": "87yX0O4O"}, {"isAccepted": false, "localizedPolicyVersionId": "muEFrmwd", "policyId": "2LbYiFYo", "policyVersionId": "fr4njIeX"}, {"isAccepted": false, "localizedPolicyVersionId": "eLFnETXW", "policyId": "wVdEqsbC", "policyVersionId": "O0lSs5Wp"}], "authType": "EMAILPASSWD", "code": "TmRy7LjA", "country": "FjJjZeBA", "dateOfBirth": "pFA4pw9W", "displayName": "teMtts5s", "emailAddress": "D0mzOwHH", "password": "4QBC8yNH", "passwordMD5Sum": "Yfk88tIe", "reachMinimumAge": true, "uniqueDisplayName": "JWmyL216", "username": "triLntk8"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op CreateUserFromInvitationV4 \
    --invitationId '5h6YudIp' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 408 'CreateUserFromInvitationV4' test.out

#- 409 PublicUpdateUserV4
# body param: body
echo '{"avatarUrl": "QOjHCI3v", "country": "P29IRDzZ", "dateOfBirth": "Ea4P0kwt", "displayName": "vDekWq6H", "languageTag": "legg6cmA", "uniqueDisplayName": "XXQy4161", "userName": "5fqmWkdQ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpdateUserV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 409 'PublicUpdateUserV4' test.out

#- 410 PublicUpdateUserEmailAddressV4
# body param: body
echo '{"code": "YYCu1dpS", "emailAddress": "3lRx4b9n"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpdateUserEmailAddressV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 410 'PublicUpdateUserEmailAddressV4' test.out

#- 411 PublicUpgradeHeadlessAccountWithVerificationCodeV4
# body param: body
echo '{"code": "zkcbmSlm", "country": "6WzxqYEe", "dateOfBirth": "MRqIpDoY", "displayName": "HFMTQ834", "emailAddress": "ozmrRwLi", "password": "tzelneCW", "reachMinimumAge": true, "uniqueDisplayName": "bnQPOFhY", "username": "S43Wnrrk", "validateOnly": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpgradeHeadlessAccountWithVerificationCodeV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 411 'PublicUpgradeHeadlessAccountWithVerificationCodeV4' test.out

#- 412 PublicUpgradeHeadlessAccountV4
# body param: body
echo '{"dateOfBirth": "E3bPZgP2", "displayName": "UVro4Xz2", "emailAddress": "wgi5xpAB", "password": "jODVaOvH", "uniqueDisplayName": "KFoMXRkS", "username": "At2Zpf6Y"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpgradeHeadlessAccountV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 412 'PublicUpgradeHeadlessAccountV4' test.out

#- 413 PublicDisableMyAuthenticatorV4
# body param: body
echo '{"factor": "umg4d2uA", "mfaToken": "mEQSzGQL"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicDisableMyAuthenticatorV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 413 'PublicDisableMyAuthenticatorV4' test.out

#- 414 PublicEnableMyAuthenticatorV4
$CLI_EXE \
    --sn iam \
    --op PublicEnableMyAuthenticatorV4 \
    --namespace $AB_NAMESPACE \
    --code 'xuUERjwm' \
    > test.out 2>&1
eval_tap $? 414 'PublicEnableMyAuthenticatorV4' test.out

#- 415 PublicGenerateMyAuthenticatorKeyV4
$CLI_EXE \
    --sn iam \
    --op PublicGenerateMyAuthenticatorKeyV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 415 'PublicGenerateMyAuthenticatorKeyV4' test.out

#- 416 PublicGetMyBackupCodesV4
eval_tap 0 416 'PublicGetMyBackupCodesV4 # SKIP deprecated' test.out

#- 417 PublicGenerateMyBackupCodesV4
eval_tap 0 417 'PublicGenerateMyBackupCodesV4 # SKIP deprecated' test.out

#- 418 PublicDisableMyBackupCodesV4
# body param: body
echo '{"factor": "V2hrslCb", "mfaToken": "XBfQgOVu"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicDisableMyBackupCodesV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 418 'PublicDisableMyBackupCodesV4' test.out

#- 419 PublicDownloadMyBackupCodesV4
eval_tap 0 419 'PublicDownloadMyBackupCodesV4 # SKIP deprecated' test.out

#- 420 PublicEnableMyBackupCodesV4
eval_tap 0 420 'PublicEnableMyBackupCodesV4 # SKIP deprecated' test.out

#- 421 PublicGetBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op PublicGetBackupCodesV4 \
    --namespace $AB_NAMESPACE \
    --languageTag 'FeA0w9Dr' \
    > test.out 2>&1
eval_tap $? 421 'PublicGetBackupCodesV4' test.out

#- 422 PublicGenerateBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op PublicGenerateBackupCodesV4 \
    --namespace $AB_NAMESPACE \
    --languageTag 'eOzE57kD' \
    > test.out 2>&1
eval_tap $? 422 'PublicGenerateBackupCodesV4' test.out

#- 423 PublicEnableBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op PublicEnableBackupCodesV4 \
    --namespace $AB_NAMESPACE \
    --languageTag 'z8HVSTX0' \
    > test.out 2>&1
eval_tap $? 423 'PublicEnableBackupCodesV4' test.out

#- 424 PublicChallengeMyMFAV4
$CLI_EXE \
    --sn iam \
    --op PublicChallengeMyMFAV4 \
    --namespace $AB_NAMESPACE \
    --code 'EvZSMuXK' \
    --factor 'JsAYYzhx' \
    > test.out 2>&1
eval_tap $? 424 'PublicChallengeMyMFAV4' test.out

#- 425 PublicRemoveTrustedDeviceV4
$CLI_EXE \
    --sn iam \
    --op PublicRemoveTrustedDeviceV4 \
    --namespace $AB_NAMESPACE \
    --device_token 'RBtnnuQg' \
    > test.out 2>&1
eval_tap $? 425 'PublicRemoveTrustedDeviceV4' test.out

#- 426 PublicSendMyMFAEmailCodeV4
$CLI_EXE \
    --sn iam \
    --op PublicSendMyMFAEmailCodeV4 \
    --namespace $AB_NAMESPACE \
    --action 'mNlHF19W' \
    --languageTag 'M126BeX8' \
    > test.out 2>&1
eval_tap $? 426 'PublicSendMyMFAEmailCodeV4' test.out

#- 427 PublicDisableMyEmailV4
# body param: body
echo '{"factor": "yPR5yTuu", "mfaToken": "PXm2xHMa"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicDisableMyEmailV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 427 'PublicDisableMyEmailV4' test.out

#- 428 PublicEnableMyEmailV4
$CLI_EXE \
    --sn iam \
    --op PublicEnableMyEmailV4 \
    --namespace $AB_NAMESPACE \
    --code 'cVtmxQLL' \
    > test.out 2>&1
eval_tap $? 428 'PublicEnableMyEmailV4' test.out

#- 429 PublicGetMyEnabledFactorsV4
$CLI_EXE \
    --sn iam \
    --op PublicGetMyEnabledFactorsV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 429 'PublicGetMyEnabledFactorsV4' test.out

#- 430 PublicMakeFactorMyDefaultV4
$CLI_EXE \
    --sn iam \
    --op PublicMakeFactorMyDefaultV4 \
    --namespace $AB_NAMESPACE \
    --factor 'x5PjwBnx' \
    > test.out 2>&1
eval_tap $? 430 'PublicMakeFactorMyDefaultV4' test.out

#- 431 PublicGetMyOwnMFAStatusV4
$CLI_EXE \
    --sn iam \
    --op PublicGetMyOwnMFAStatusV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 431 'PublicGetMyOwnMFAStatusV4' test.out

#- 432 PublicGetMyMFAStatusV4
eval_tap 0 432 'PublicGetMyMFAStatusV4 # SKIP deprecated' test.out

#- 433 PublicGetUserPublicInfoByUserIdV4
$CLI_EXE \
    --sn iam \
    --op PublicGetUserPublicInfoByUserIdV4 \
    --namespace $AB_NAMESPACE \
    --userId 'gQq9W8Wv' \
    > test.out 2>&1
eval_tap $? 433 'PublicGetUserPublicInfoByUserIdV4' test.out

#- 434 PublicInviteUserV4
# body param: body
echo '{"additionalData": "u19inEBK", "emailAddress": "jGjK2ctS", "languageTag": "ZD7luDQp", "namespace": "cc9d9GYB", "namespaceDisplayName": "tiHvse20"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicInviteUserV4 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 434 'PublicInviteUserV4' test.out

#- 435 PublicUpgradeHeadlessWithCodeV4Forward
# body param: body
echo '{"acceptedPolicies": [{"isAccepted": true, "localizedPolicyVersionId": "21bl9XZ6", "policyId": "diHowAIp", "policyVersionId": "LZn5EVwt"}, {"isAccepted": false, "localizedPolicyVersionId": "RSjeXspH", "policyId": "hly4Ui5j", "policyVersionId": "ZVQFTiNG"}, {"isAccepted": false, "localizedPolicyVersionId": "1uvfohZx", "policyId": "ks894xha", "policyVersionId": "THFoG86L"}], "code": "nJEcFZPK", "country": "zquB4S7I", "dateOfBirth": "R7jgUv9v", "displayName": "AmPv2Eze", "emailAddress": "QZTLEdrs", "password": "6nNRvi7d", "reachMinimumAge": true, "uniqueDisplayName": "lLrL0aQk", "username": "zuGwhwDR", "validateOnly": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpgradeHeadlessWithCodeV4Forward \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 435 'PublicUpgradeHeadlessWithCodeV4Forward' test.out


# remove artifacts
rm -f "$CLI_TOKEN_FILE"
rm -f "$TEMP_JSON_INPUT"
rm -f "$TEMP_FILE_UPLOAD"

exit $EXIT_CODE