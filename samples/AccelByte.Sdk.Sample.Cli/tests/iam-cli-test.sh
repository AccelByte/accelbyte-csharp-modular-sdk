#!/usr/bin/env bash

# Copyright (c) 2021 AccelByte Inc. All Rights Reserved.
# This is licensed software from AccelByte Inc, for limitations
# and restrictions contact your company contract manager.

# This code is generated by tool. DO NOT EDIT.

# Meta:
# - random seed: 
# - template file: 

# Instructions:
# - Run the Justice SDK Mock Server first before running this script.

export AB_BASE_URL="http://127.0.0.1:8080"
export AB_CLIENT_ID="admin"
export AB_CLIENT_SECRET="admin"
export AB_NAMESPACE="test"
export AB_APP_NAME="UnitTest"

EXIT_CODE=0

eval_tap() {
  if [ $1 -eq 0 ]; then
    echo "ok $2 - $3"
  else
    EXIT_CODE=1
    echo "not ok $2 - $3"
    sed 's/^/# /g' $4
  fi
  rm -f $4
}

CLI_EXE="AccelByte.Sdk.Sample.Cli"
CLI_TOKEN_FILE="$(dirname "$(which $CLI_EXE)")/token.json"
TEMP_JSON_INPUT="input_json.json"
TEMP_FILE_UPLOAD="file_upload.bin"

echo "TAP version 13"
echo "1..394"

#- 1 Login
$CLI_EXE --op login --lt user --user user --pass user > test.out 2>&1
eval_tap $? 1 'Login' test.out

if [ $EXIT_CODE -ne 0 ]; then
  echo "Bail out! Login failed."
  exit $EXIT_CODE
fi

# echo "foo" > "$CLI_TOKEN_FILE"

#- 2 GetBansType
eval_tap 0 2 'GetBansType # SKIP deprecated' test.out

#- 3 GetListBanReason
eval_tap 0 3 'GetListBanReason # SKIP deprecated' test.out

#- 4 GetClients
eval_tap 0 4 'GetClients # SKIP deprecated' test.out

#- 5 CreateClient
eval_tap 0 5 'CreateClient # SKIP deprecated' test.out

#- 6 GetClient
eval_tap 0 6 'GetClient # SKIP deprecated' test.out

#- 7 UpdateClient
eval_tap 0 7 'UpdateClient # SKIP deprecated' test.out

#- 8 DeleteClient
eval_tap 0 8 'DeleteClient # SKIP deprecated' test.out

#- 9 UpdateClientPermission
eval_tap 0 9 'UpdateClientPermission # SKIP deprecated' test.out

#- 10 AddClientPermission
eval_tap 0 10 'AddClientPermission # SKIP deprecated' test.out

#- 11 DeleteClientPermission
eval_tap 0 11 'DeleteClientPermission # SKIP deprecated' test.out

#- 12 UpdateClientSecret
eval_tap 0 12 'UpdateClientSecret # SKIP deprecated' test.out

#- 13 GetClientsbyNamespace
eval_tap 0 13 'GetClientsbyNamespace # SKIP deprecated' test.out

#- 14 CreateClientByNamespace
eval_tap 0 14 'CreateClientByNamespace # SKIP deprecated' test.out

#- 15 DeleteClientByNamespace
eval_tap 0 15 'DeleteClientByNamespace # SKIP deprecated' test.out

#- 16 CreateUser
eval_tap 0 16 'CreateUser # SKIP deprecated' test.out

#- 17 GetAdminUsersByRoleID
eval_tap 0 17 'GetAdminUsersByRoleID # SKIP deprecated' test.out

#- 18 GetUserByLoginID
eval_tap 0 18 'GetUserByLoginID # SKIP deprecated' test.out

#- 19 GetUserByPlatformUserID
eval_tap 0 19 'GetUserByPlatformUserID # SKIP deprecated' test.out

#- 20 ForgotPassword
eval_tap 0 20 'ForgotPassword # SKIP deprecated' test.out

#- 21 GetUsersByLoginIds
eval_tap 0 21 'GetUsersByLoginIds # SKIP deprecated' test.out

#- 22 ResetPassword
eval_tap 0 22 'ResetPassword # SKIP deprecated' test.out

#- 23 SearchUser
eval_tap 0 23 'SearchUser # SKIP deprecated' test.out

#- 24 GetUserByUserID
eval_tap 0 24 'GetUserByUserID # SKIP deprecated' test.out

#- 25 UpdateUser
eval_tap 0 25 'UpdateUser # SKIP deprecated' test.out

#- 26 DeleteUser
eval_tap 0 26 'DeleteUser # SKIP deprecated' test.out

#- 27 BanUser
eval_tap 0 27 'BanUser # SKIP deprecated' test.out

#- 28 GetUserBanHistory
eval_tap 0 28 'GetUserBanHistory # SKIP deprecated' test.out

#- 29 DisableUserBan
eval_tap 0 29 'DisableUserBan # SKIP deprecated' test.out

#- 30 EnableUserBan
eval_tap 0 30 'EnableUserBan # SKIP deprecated' test.out

#- 31 ListCrossNamespaceAccountLink
eval_tap 0 31 'ListCrossNamespaceAccountLink # SKIP deprecated' test.out

#- 32 DisableUser
eval_tap 0 32 'DisableUser # SKIP deprecated' test.out

#- 33 EnableUser
eval_tap 0 33 'EnableUser # SKIP deprecated' test.out

#- 34 GetUserInformation
eval_tap 0 34 'GetUserInformation # SKIP deprecated' test.out

#- 35 DeleteUserInformation
eval_tap 0 35 'DeleteUserInformation # SKIP deprecated' test.out

#- 36 GetUserLoginHistories
eval_tap 0 36 'GetUserLoginHistories # SKIP deprecated' test.out

#- 37 UpdatePassword
eval_tap 0 37 'UpdatePassword # SKIP deprecated' test.out

#- 38 SaveUserPermission
eval_tap 0 38 'SaveUserPermission # SKIP deprecated' test.out

#- 39 AddUserPermission
eval_tap 0 39 'AddUserPermission # SKIP deprecated' test.out

#- 40 DeleteUserPermission
eval_tap 0 40 'DeleteUserPermission # SKIP deprecated' test.out

#- 41 GetUserPlatformAccounts
eval_tap 0 41 'GetUserPlatformAccounts # SKIP deprecated' test.out

#- 42 GetUserMapping
eval_tap 0 42 'GetUserMapping # SKIP deprecated' test.out

#- 43 GetUserJusticePlatformAccount
eval_tap 0 43 'GetUserJusticePlatformAccount # SKIP deprecated' test.out

#- 44 PlatformLink
eval_tap 0 44 'PlatformLink # SKIP deprecated' test.out

#- 45 PlatformUnlink
eval_tap 0 45 'PlatformUnlink # SKIP deprecated' test.out

#- 46 GetPublisherUser
eval_tap 0 46 'GetPublisherUser # SKIP deprecated' test.out

#- 47 SaveUserRoles
eval_tap 0 47 'SaveUserRoles # SKIP deprecated' test.out

#- 48 AddUserRole
eval_tap 0 48 'AddUserRole # SKIP deprecated' test.out

#- 49 DeleteUserRole
eval_tap 0 49 'DeleteUserRole # SKIP deprecated' test.out

#- 50 UpgradeHeadlessAccount
eval_tap 0 50 'UpgradeHeadlessAccount # SKIP deprecated' test.out

#- 51 UpgradeHeadlessAccountWithVerificationCode
eval_tap 0 51 'UpgradeHeadlessAccountWithVerificationCode # SKIP deprecated' test.out

#- 52 UserVerification
eval_tap 0 52 'UserVerification # SKIP deprecated' test.out

#- 53 SendVerificationCode
eval_tap 0 53 'SendVerificationCode # SKIP deprecated' test.out

#- 54 Authorization
eval_tap 0 54 'Authorization # SKIP deprecated' test.out

#- 55 GetJWKS
eval_tap 0 55 'GetJWKS # SKIP deprecated' test.out

#- 56 PlatformTokenRequestHandler
eval_tap 0 56 'PlatformTokenRequestHandler # SKIP deprecated' test.out

#- 57 RevokeUser
eval_tap 0 57 'RevokeUser # SKIP deprecated' test.out

#- 58 GetRevocationList
eval_tap 0 58 'GetRevocationList # SKIP deprecated' test.out

#- 59 RevokeToken
eval_tap 0 59 'RevokeToken # SKIP deprecated' test.out

#- 60 RevokeAUser
eval_tap 0 60 'RevokeAUser # SKIP deprecated' test.out

#- 61 TokenGrant
eval_tap 0 61 'TokenGrant # SKIP deprecated' test.out

#- 62 VerifyToken
eval_tap 0 62 'VerifyToken # SKIP deprecated' test.out

#- 63 GetRoles
eval_tap 0 63 'GetRoles # SKIP deprecated' test.out

#- 64 CreateRole
eval_tap 0 64 'CreateRole # SKIP deprecated' test.out

#- 65 GetRole
eval_tap 0 65 'GetRole # SKIP deprecated' test.out

#- 66 UpdateRole
eval_tap 0 66 'UpdateRole # SKIP deprecated' test.out

#- 67 DeleteRole
eval_tap 0 67 'DeleteRole # SKIP deprecated' test.out

#- 68 GetRoleAdminStatus
eval_tap 0 68 'GetRoleAdminStatus # SKIP deprecated' test.out

#- 69 SetRoleAsAdmin
eval_tap 0 69 'SetRoleAsAdmin # SKIP deprecated' test.out

#- 70 RemoveRoleAdmin
eval_tap 0 70 'RemoveRoleAdmin # SKIP deprecated' test.out

#- 71 GetRoleManagers
eval_tap 0 71 'GetRoleManagers # SKIP deprecated' test.out

#- 72 AddRoleManagers
eval_tap 0 72 'AddRoleManagers # SKIP deprecated' test.out

#- 73 RemoveRoleManagers
eval_tap 0 73 'RemoveRoleManagers # SKIP deprecated' test.out

#- 74 GetRoleMembers
eval_tap 0 74 'GetRoleMembers # SKIP deprecated' test.out

#- 75 AddRoleMembers
eval_tap 0 75 'AddRoleMembers # SKIP deprecated' test.out

#- 76 RemoveRoleMembers
eval_tap 0 76 'RemoveRoleMembers # SKIP deprecated' test.out

#- 77 UpdateRolePermissions
eval_tap 0 77 'UpdateRolePermissions # SKIP deprecated' test.out

#- 78 AddRolePermission
eval_tap 0 78 'AddRolePermission # SKIP deprecated' test.out

#- 79 DeleteRolePermission
eval_tap 0 79 'DeleteRolePermission # SKIP deprecated' test.out

#- 80 AdminGetAgeRestrictionStatusV2
eval_tap 0 80 'AdminGetAgeRestrictionStatusV2 # SKIP deprecated' test.out

#- 81 AdminUpdateAgeRestrictionConfigV2
eval_tap 0 81 'AdminUpdateAgeRestrictionConfigV2 # SKIP deprecated' test.out

#- 82 GetListCountryAgeRestriction
eval_tap 0 82 'GetListCountryAgeRestriction # SKIP deprecated' test.out

#- 83 UpdateCountryAgeRestriction
eval_tap 0 83 'UpdateCountryAgeRestriction # SKIP deprecated' test.out

#- 84 AdminSearchUsersV2
eval_tap 0 84 'AdminSearchUsersV2 # SKIP deprecated' test.out

#- 85 AdminGetUserByUserIdV2
eval_tap 0 85 'AdminGetUserByUserIdV2 # SKIP deprecated' test.out

#- 86 AdminUpdateUserV2
eval_tap 0 86 'AdminUpdateUserV2 # SKIP deprecated' test.out

#- 87 AdminBanUserV2
eval_tap 0 87 'AdminBanUserV2 # SKIP deprecated' test.out

#- 88 AdminGetUserBanV2
eval_tap 0 88 'AdminGetUserBanV2 # SKIP deprecated' test.out

#- 89 AdminDisableUserV2
eval_tap 0 89 'AdminDisableUserV2 # SKIP deprecated' test.out

#- 90 AdminEnableUserV2
eval_tap 0 90 'AdminEnableUserV2 # SKIP deprecated' test.out

#- 91 AdminResetPasswordV2
eval_tap 0 91 'AdminResetPasswordV2 # SKIP deprecated' test.out

#- 92 AdminDeletePlatformLinkV2
eval_tap 0 92 'AdminDeletePlatformLinkV2 # SKIP deprecated' test.out

#- 93 AdminPutUserRolesV2
eval_tap 0 93 'AdminPutUserRolesV2 # SKIP deprecated' test.out

#- 94 AdminCreateUserRolesV2
eval_tap 0 94 'AdminCreateUserRolesV2 # SKIP deprecated' test.out

#- 95 PublicGetCountryAgeRestriction
eval_tap 0 95 'PublicGetCountryAgeRestriction # SKIP deprecated' test.out

#- 96 PublicCreateUserV2
eval_tap 0 96 'PublicCreateUserV2 # SKIP deprecated' test.out

#- 97 PublicForgotPasswordV2
eval_tap 0 97 'PublicForgotPasswordV2 # SKIP deprecated' test.out

#- 98 PublicResetPasswordV2
eval_tap 0 98 'PublicResetPasswordV2 # SKIP deprecated' test.out

#- 99 PublicGetUserByUserIDV2
eval_tap 0 99 'PublicGetUserByUserIDV2 # SKIP deprecated' test.out

#- 100 PublicUpdateUserV2
eval_tap 0 100 'PublicUpdateUserV2 # SKIP deprecated' test.out

#- 101 PublicGetUserBan
eval_tap 0 101 'PublicGetUserBan # SKIP deprecated' test.out

#- 102 PublicUpdatePasswordV2
eval_tap 0 102 'PublicUpdatePasswordV2 # SKIP deprecated' test.out

#- 103 GetListJusticePlatformAccounts
eval_tap 0 103 'GetListJusticePlatformAccounts # SKIP deprecated' test.out

#- 104 PublicPlatformLinkV2
eval_tap 0 104 'PublicPlatformLinkV2 # SKIP deprecated' test.out

#- 105 PublicDeletePlatformLinkV2
eval_tap 0 105 'PublicDeletePlatformLinkV2 # SKIP deprecated' test.out

#- 106 AdminGetBansTypeV3
$CLI_EXE \
    --sn iam \
    --op AdminGetBansTypeV3 \
    > test.out 2>&1
eval_tap $? 106 'AdminGetBansTypeV3' test.out

#- 107 AdminGetListBanReasonV3
$CLI_EXE \
    --sn iam \
    --op AdminGetListBanReasonV3 \
    > test.out 2>&1
eval_tap $? 107 'AdminGetListBanReasonV3' test.out

#- 108 AdminListClientAvailablePermissions
$CLI_EXE \
    --sn iam \
    --op AdminListClientAvailablePermissions \
    --excludePermissions 'true' \
    > test.out 2>&1
eval_tap $? 108 'AdminListClientAvailablePermissions' test.out

#- 109 AdminUpdateAvailablePermissionsByModule
# body param: body
echo '{"modules": [{"docLink": "U4u7hGjO", "groups": [{"group": "IiPftfBB", "groupId": "h9P9YtDW", "permissions": [{"allowedActions": [85, 57, 45], "resource": "5vu47WN8"}, {"allowedActions": [74, 78, 73], "resource": "YSvfh5bd"}, {"allowedActions": [6, 99, 2], "resource": "uyH0NmHJ"}]}, {"group": "X5zJT6Za", "groupId": "TLy1maJ6", "permissions": [{"allowedActions": [63, 58, 13], "resource": "P4QSBD3o"}, {"allowedActions": [55, 85, 30], "resource": "ptEGHElP"}, {"allowedActions": [4, 94, 63], "resource": "koM0evAV"}]}, {"group": "9pdyDWMn", "groupId": "Gtqrjxvr", "permissions": [{"allowedActions": [72, 45, 50], "resource": "u39yapd8"}, {"allowedActions": [73, 53, 90], "resource": "Q9QOwKKS"}, {"allowedActions": [61, 12, 80], "resource": "N0GOQ4kG"}]}], "module": "BYLxJghZ", "moduleId": "SAsuS9Hl"}, {"docLink": "8EJP0Jxt", "groups": [{"group": "RKLhF5Mb", "groupId": "ODBvJyBS", "permissions": [{"allowedActions": [24, 72, 19], "resource": "vrmZwO5l"}, {"allowedActions": [30, 55, 1], "resource": "sBKM5yTR"}, {"allowedActions": [6, 58, 96], "resource": "JKru7a8y"}]}, {"group": "fDwss7j7", "groupId": "lUHbKBlO", "permissions": [{"allowedActions": [1, 100, 34], "resource": "Q5SfGctI"}, {"allowedActions": [38, 47, 62], "resource": "SRQwV34s"}, {"allowedActions": [84, 1, 73], "resource": "U38dOfVy"}]}, {"group": "O3Dzwxdv", "groupId": "7fXvhc75", "permissions": [{"allowedActions": [48, 39, 36], "resource": "gworOxUs"}, {"allowedActions": [69, 77, 8], "resource": "gVdNmai9"}, {"allowedActions": [76, 20, 56], "resource": "DyYIExgF"}]}], "module": "eHxhelR1", "moduleId": "TIjxSfUj"}, {"docLink": "BcVHtm3x", "groups": [{"group": "9cQKWjxH", "groupId": "KiEcAQXI", "permissions": [{"allowedActions": [41, 94, 83], "resource": "TyliBXUz"}, {"allowedActions": [48, 87, 9], "resource": "IpOFHpu7"}, {"allowedActions": [64, 74, 65], "resource": "P4w63vct"}]}, {"group": "tEdnygZv", "groupId": "Cw1n3LPv", "permissions": [{"allowedActions": [15, 67, 95], "resource": "0KQA3mXj"}, {"allowedActions": [49, 13, 39], "resource": "OqIdNatZ"}, {"allowedActions": [54, 20, 24], "resource": "HvnuP1dX"}]}, {"group": "hxmUyfjd", "groupId": "PuYtRvoQ", "permissions": [{"allowedActions": [53, 13, 38], "resource": "m3nUyzFF"}, {"allowedActions": [79, 79, 81], "resource": "KWT5JX1e"}, {"allowedActions": [54, 46, 94], "resource": "U2MzH3K2"}]}], "module": "KmpERN4B", "moduleId": "HSS0GpPb"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateAvailablePermissionsByModule \
    --forceDelete 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 109 'AdminUpdateAvailablePermissionsByModule' test.out

#- 110 AdminDeleteConfigPermissionsByGroup
# body param: body
echo '{"groupId": "d0ymicmW", "moduleId": "LyT0UtEH"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDeleteConfigPermissionsByGroup \
    --forceDelete 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 110 'AdminDeleteConfigPermissionsByGroup' test.out

#- 111 AdminListClientTemplates
$CLI_EXE \
    --sn iam \
    --op AdminListClientTemplates \
    > test.out 2>&1
eval_tap $? 111 'AdminListClientTemplates' test.out

#- 112 AdminGetInputValidations
$CLI_EXE \
    --sn iam \
    --op AdminGetInputValidations \
    > test.out 2>&1
eval_tap $? 112 'AdminGetInputValidations' test.out

#- 113 AdminUpdateInputValidations
# body param: body
echo '[{"field": "2GeNDfRk", "validation": {"allowAllSpecialCharacters": true, "allowDigit": true, "allowLetter": false, "allowSpace": false, "allowUnicode": true, "avatarConfig": {"allowedPrefixes": ["w0kxzMbz", "8oFOGjpY", "4hmTLEiC"], "preferRegex": true, "regex": "PxBiZEp5"}, "blockedWord": ["w1UiQvAo", "dbBhIQo5", "lHPVFBMJ"], "description": [{"language": "lNGqTRUT", "message": ["RVqkJrGS", "hA96ueZZ", "brbwJagy"]}, {"language": "5azUhjo5", "message": ["e1uzf5qx", "VFDmoFkT", "dttGkqfa"]}, {"language": "hiX3POcV", "message": ["a6IGczrX", "ty5dZhb7", "AR0lLQAl"]}], "isCustomRegex": true, "letterCase": "xd389SE3", "maxLength": 8, "maxRepeatingAlphaNum": 17, "maxRepeatingSpecialCharacter": 1, "minCharType": 11, "minLength": 21, "regex": "shRcPQBu", "specialCharacterLocation": "9VLbmU5h", "specialCharacters": ["p7FvodnC", "lm0Duowz", "ApIJCpxP"]}}, {"field": "nNbwIPhM", "validation": {"allowAllSpecialCharacters": true, "allowDigit": true, "allowLetter": false, "allowSpace": true, "allowUnicode": true, "avatarConfig": {"allowedPrefixes": ["H8Bbh567", "b2Hd63Rb", "6O8V0y7e"], "preferRegex": false, "regex": "1LBp7mfl"}, "blockedWord": ["DlEnGv4C", "ON9w07BS", "oAHKZ1cQ"], "description": [{"language": "uWOH64iN", "message": ["MzHtceMC", "HpBaHpCq", "VoIAK1f9"]}, {"language": "ueiOY2Mo", "message": ["jmFLAfw5", "OgafXoSh", "cxygnhtO"]}, {"language": "dHJp5czc", "message": ["cbabhb8S", "5tqSOWcW", "duCczJsy"]}], "isCustomRegex": false, "letterCase": "KQ5HZVtA", "maxLength": 42, "maxRepeatingAlphaNum": 29, "maxRepeatingSpecialCharacter": 48, "minCharType": 27, "minLength": 96, "regex": "67BGwFnw", "specialCharacterLocation": "CqRHblUu", "specialCharacters": ["Nzb8jobX", "QODQsvFs", "Ch6zqCFd"]}}, {"field": "b91HMnzE", "validation": {"allowAllSpecialCharacters": false, "allowDigit": false, "allowLetter": false, "allowSpace": true, "allowUnicode": false, "avatarConfig": {"allowedPrefixes": ["pTRCz3gB", "mgC0T8G5", "Kyqq43HL"], "preferRegex": false, "regex": "Hqz91QOg"}, "blockedWord": ["j0eB5j1J", "wupSHGBO", "yrzQWMlC"], "description": [{"language": "gRGNAZzJ", "message": ["czmfLD8X", "oGWLnX4N", "4feRVaAO"]}, {"language": "hdyNWYKc", "message": ["3BPvJz4D", "gSGNy0I7", "VyxfHoFG"]}, {"language": "U2XCalfT", "message": ["sfbSKCHA", "CnNq1U0h", "q7idiw5H"]}], "isCustomRegex": false, "letterCase": "JXdi8C9i", "maxLength": 94, "maxRepeatingAlphaNum": 84, "maxRepeatingSpecialCharacter": 36, "minCharType": 15, "minLength": 63, "regex": "NflEfZhr", "specialCharacterLocation": "ie7g06Px", "specialCharacters": ["gOxBDEj9", "6hZRVAan", "64UaOY3i"]}}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateInputValidations \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 113 'AdminUpdateInputValidations' test.out

#- 114 AdminResetInputValidations
$CLI_EXE \
    --sn iam \
    --op AdminResetInputValidations \
    --field 'dRZxjxQJ' \
    > test.out 2>&1
eval_tap $? 114 'AdminResetInputValidations' test.out

#- 115 ListAdminsV3
$CLI_EXE \
    --sn iam \
    --op ListAdminsV3 \
    --namespace $AB_NAMESPACE \
    --after 'ccll8VeA' \
    --before 'dVCPii3z' \
    --endDate 'awoA7NMF' \
    --limit '85' \
    --query '3ysvMtqU' \
    --roleId 'enMgWsbo' \
    --startDate 'moE6FnVD' \
    > test.out 2>&1
eval_tap $? 115 'ListAdminsV3' test.out

#- 116 AdminGetAgeRestrictionStatusV3
$CLI_EXE \
    --sn iam \
    --op AdminGetAgeRestrictionStatusV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 116 'AdminGetAgeRestrictionStatusV3' test.out

#- 117 AdminUpdateAgeRestrictionConfigV3
# body param: body
echo '{"ageRestriction": 86, "enable": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateAgeRestrictionConfigV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 117 'AdminUpdateAgeRestrictionConfigV3' test.out

#- 118 AdminGetListCountryAgeRestrictionV3
$CLI_EXE \
    --sn iam \
    --op AdminGetListCountryAgeRestrictionV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 118 'AdminGetListCountryAgeRestrictionV3' test.out

#- 119 AdminUpdateCountryAgeRestrictionV3
# body param: body
echo '{"ageRestriction": 70}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateCountryAgeRestrictionV3 \
    --countryCode 'Tlr1dq2C' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 119 'AdminUpdateCountryAgeRestrictionV3' test.out

#- 120 AdminGetBannedUsersV3
$CLI_EXE \
    --sn iam \
    --op AdminGetBannedUsersV3 \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --banType '8AK2mxKi' \
    --limit '91' \
    --offset '49' \
    > test.out 2>&1
eval_tap $? 120 'AdminGetBannedUsersV3' test.out

#- 121 AdminBanUserBulkV3
# body param: body
echo '{"ban": "mTvnDG3x", "comment": "CKGS3bSX", "endDate": "pSdoSa6i", "reason": "IsNefQqC", "skipNotif": false, "userIds": ["ZgAelsgl", "UW7yaifD", "IQdd9kMK"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBanUserBulkV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 121 'AdminBanUserBulkV3' test.out

#- 122 AdminUnbanUserBulkV3
# body param: body
echo '{"bans": [{"banId": "YtJ2OF0K", "userId": "MdF3FR7v"}, {"banId": "7CFKDcmS", "userId": "xwZv1d0e"}, {"banId": "vIFk68ri", "userId": "qgx2Kkj4"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUnbanUserBulkV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 122 'AdminUnbanUserBulkV3' test.out

#- 123 AdminGetBansTypeWithNamespaceV3
$CLI_EXE \
    --sn iam \
    --op AdminGetBansTypeWithNamespaceV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 123 'AdminGetBansTypeWithNamespaceV3' test.out

#- 124 AdminGetClientsByNamespaceV3
$CLI_EXE \
    --sn iam \
    --op AdminGetClientsByNamespaceV3 \
    --namespace $AB_NAMESPACE \
    --clientId 'tnAcxRh8' \
    --clientName 'SInXVfWs' \
    --clientType 'n1Fz8Jlt' \
    --limit '81' \
    --offset '86' \
    --skipLoginQueue 'true' \
    > test.out 2>&1
eval_tap $? 124 'AdminGetClientsByNamespaceV3' test.out

#- 125 AdminBulkUpdateClientsV3
# body param: body
echo '{"clientIds": ["o4QLkcbX", "IVxcVUlZ", "6VsebTDB"], "clientUpdateRequest": {"audiences": ["eb9SbaZa", "DLzAmOqK", "LjayJjxM"], "baseUri": "MsOqH4px", "clientName": "rIBMRU7A", "clientPermissions": [{"action": 95, "resource": "ZvWtHZzy", "schedAction": 1, "schedCron": "p2RdSNY4", "schedRange": ["ynIjiDxw", "zu6HsSt9", "vuuIWGCL"]}, {"action": 80, "resource": "ZuzlDucD", "schedAction": 6, "schedCron": "n51vnIKV", "schedRange": ["JceHRcWP", "ieluZblK", "D7iyOQf0"]}, {"action": 62, "resource": "uUfB0MKt", "schedAction": 53, "schedCron": "TazdHW7y", "schedRange": ["yT4n1dAv", "1gACth6X", "RhSgH9z0"]}], "clientPlatform": "poamYN3T", "deletable": true, "description": "KXpwdDmC", "modulePermissions": [{"moduleId": "xjPHukzc", "selectedGroups": [{"groupId": "wQI9IcXZ", "selectedActions": [73, 22, 41]}, {"groupId": "ZdQ0XAQC", "selectedActions": [5, 58, 48]}, {"groupId": "NkTIC2AG", "selectedActions": [59, 23, 53]}]}, {"moduleId": "LSXpavon", "selectedGroups": [{"groupId": "fzGg4Rw8", "selectedActions": [8, 42, 15]}, {"groupId": "3WdUlJmt", "selectedActions": [84, 12, 32]}, {"groupId": "rrmRs5cq", "selectedActions": [23, 26, 35]}]}, {"moduleId": "FrmzErES", "selectedGroups": [{"groupId": "kCky73Cz", "selectedActions": [24, 77, 30]}, {"groupId": "52jXc8lS", "selectedActions": [29, 73, 88]}, {"groupId": "H5zY6GrC", "selectedActions": [99, 91, 54]}]}], "namespace": "P7UUPy8y", "oauthAccessTokenExpiration": 81, "oauthAccessTokenExpirationTimeUnit": "C5Mx5nu1", "oauthRefreshTokenExpiration": 66, "oauthRefreshTokenExpirationTimeUnit": "E3ESn9Tn", "redirectUri": "9bHQVxoT", "scopes": ["HK3N7p2I", "LQafsmEW", "OKvZSo8G"], "skipLoginQueue": true, "twoFactorEnabled": true}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBulkUpdateClientsV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 125 'AdminBulkUpdateClientsV3' test.out

#- 126 AdminCreateClientV3
# body param: body
echo '{"audiences": ["HM7ktMgu", "8pscFWhW", "JDjtEdYO"], "baseUri": "rzIxp5d7", "clientId": "b6FzRXFC", "clientName": "ddtsgYNw", "clientPermissions": [{"action": 16, "resource": "mBBL5SCQ", "schedAction": 0, "schedCron": "F5t0WP2h", "schedRange": ["2ExbjfPq", "1boxAVWE", "RlqUknOu"]}, {"action": 81, "resource": "m8BvO2bb", "schedAction": 23, "schedCron": "4ee74KEX", "schedRange": ["80q8pPKP", "iTfB7d1Z", "3KxZwuql"]}, {"action": 39, "resource": "sfREQqza", "schedAction": 52, "schedCron": "iiagmzn6", "schedRange": ["CCG1yOLO", "7vtvMsEk", "Ad5VC7fy"]}], "clientPlatform": "RzRwXBhU", "deletable": false, "description": "YkevRTbc", "modulePermissions": [{"moduleId": "2a0aDGJM", "selectedGroups": [{"groupId": "1ZQRmIfk", "selectedActions": [76, 97, 84]}, {"groupId": "Yj7yQuWy", "selectedActions": [74, 8, 93]}, {"groupId": "v2EpHzl0", "selectedActions": [68, 100, 5]}]}, {"moduleId": "AJ5HbTdl", "selectedGroups": [{"groupId": "na3XrzDy", "selectedActions": [7, 16, 85]}, {"groupId": "hRmWaOTS", "selectedActions": [74, 31, 55]}, {"groupId": "oAvmZrUm", "selectedActions": [87, 72, 42]}]}, {"moduleId": "2Mpa3hpu", "selectedGroups": [{"groupId": "CzQrb4EQ", "selectedActions": [10, 0, 34]}, {"groupId": "2mpN79wp", "selectedActions": [53, 50, 52]}, {"groupId": "HKtqsmky", "selectedActions": [56, 17, 82]}]}], "namespace": "WICtIOxj", "oauthAccessTokenExpiration": 11, "oauthAccessTokenExpirationTimeUnit": "6ZoIqDA1", "oauthClientType": "EJW4JHv6", "oauthRefreshTokenExpiration": 15, "oauthRefreshTokenExpirationTimeUnit": "n09F8UJb", "parentNamespace": "GQSxxeoN", "redirectUri": "A1D5I0V1", "scopes": ["M92H5MNU", "PCzo4spb", "3gbtk65L"], "secret": "rauiVlAM", "skipLoginQueue": true, "twoFactorEnabled": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminCreateClientV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 126 'AdminCreateClientV3' test.out

#- 127 AdminGetClientsbyNamespacebyIDV3
$CLI_EXE \
    --sn iam \
    --op AdminGetClientsbyNamespacebyIDV3 \
    --clientId '2qgLetLa' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 127 'AdminGetClientsbyNamespacebyIDV3' test.out

#- 128 AdminDeleteClientV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteClientV3 \
    --clientId 'sTaAKAOc' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 128 'AdminDeleteClientV3' test.out

#- 129 AdminUpdateClientV3
# body param: body
echo '{"audiences": ["4OW1zIpl", "FxCggc4H", "uROhfXsp"], "baseUri": "7q7RDJLz", "clientName": "dtzGpzBA", "clientPermissions": [{"action": 65, "resource": "SGI3dNuJ", "schedAction": 68, "schedCron": "wBdHqf5x", "schedRange": ["8BRJQXo7", "5t2xLtPr", "PkEFOLHh"]}, {"action": 53, "resource": "wFkNtEs5", "schedAction": 83, "schedCron": "9Wy0svAx", "schedRange": ["69rj2956", "7lTXJmG8", "6Rcwl9va"]}, {"action": 95, "resource": "NEeY6QXS", "schedAction": 92, "schedCron": "e8nQ49JV", "schedRange": ["mmXrd6mH", "Wuuy6mxG", "HaBkfQie"]}], "clientPlatform": "bbsNFsrY", "deletable": false, "description": "d2jCcDFS", "modulePermissions": [{"moduleId": "Iz7lcKnk", "selectedGroups": [{"groupId": "xcvu49Vi", "selectedActions": [18, 78, 92]}, {"groupId": "GFK50XF2", "selectedActions": [41, 12, 34]}, {"groupId": "uxehgwZH", "selectedActions": [89, 14, 65]}]}, {"moduleId": "5I8plbJv", "selectedGroups": [{"groupId": "7vUzHtGf", "selectedActions": [40, 72, 8]}, {"groupId": "EC3P8upJ", "selectedActions": [86, 73, 23]}, {"groupId": "Tip1oQiG", "selectedActions": [56, 21, 75]}]}, {"moduleId": "qzy9hb04", "selectedGroups": [{"groupId": "t4wszEac", "selectedActions": [96, 50, 77]}, {"groupId": "ROwhuKGV", "selectedActions": [75, 30, 100]}, {"groupId": "csUJEBqM", "selectedActions": [22, 41, 97]}]}], "namespace": "jt34Rn7S", "oauthAccessTokenExpiration": 85, "oauthAccessTokenExpirationTimeUnit": "bYW2Il6s", "oauthRefreshTokenExpiration": 59, "oauthRefreshTokenExpirationTimeUnit": "56L0FPAw", "redirectUri": "HpUNq5Ey", "scopes": ["mRdbkNrj", "y3JybjI0", "3EXNC8SU"], "skipLoginQueue": false, "twoFactorEnabled": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateClientV3 \
    --clientId 'IoohMPSc' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 129 'AdminUpdateClientV3' test.out

#- 130 AdminUpdateClientPermissionV3
# body param: body
echo '{"permissions": [{"action": 5, "resource": "3ztbb4mP"}, {"action": 1, "resource": "z1pAapAM"}, {"action": 6, "resource": "poaPeN96"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateClientPermissionV3 \
    --clientId 'vSpXX6RX' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 130 'AdminUpdateClientPermissionV3' test.out

#- 131 AdminAddClientPermissionsV3
# body param: body
echo '{"permissions": [{"action": 88, "resource": "QWqzAvP5"}, {"action": 5, "resource": "1HQhWUDx"}, {"action": 34, "resource": "ZKnW9fZr"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddClientPermissionsV3 \
    --clientId 'ib5687eM' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 131 'AdminAddClientPermissionsV3' test.out

#- 132 AdminDeleteClientPermissionV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteClientPermissionV3 \
    --action '64' \
    --clientId 'H6nJHBC7' \
    --namespace $AB_NAMESPACE \
    --resource '2SarIUtC' \
    > test.out 2>&1
eval_tap $? 132 'AdminDeleteClientPermissionV3' test.out

#- 133 AdminGetConfigValueV3
$CLI_EXE \
    --sn iam \
    --op AdminGetConfigValueV3 \
    --configKey 'EaZDaX1f' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 133 'AdminGetConfigValueV3' test.out

#- 134 AdminGetCountryListV3
$CLI_EXE \
    --sn iam \
    --op AdminGetCountryListV3 \
    --namespace $AB_NAMESPACE \
    --filterBlacklist 'false' \
    > test.out 2>&1
eval_tap $? 134 'AdminGetCountryListV3' test.out

#- 135 AdminGetCountryBlacklistV3
$CLI_EXE \
    --sn iam \
    --op AdminGetCountryBlacklistV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 135 'AdminGetCountryBlacklistV3' test.out

#- 136 AdminAddCountryBlacklistV3
# body param: body
echo '{"blacklist": ["hUoY8Ig7", "AMH3Ltzk", "eSUIgXgX"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddCountryBlacklistV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 136 'AdminAddCountryBlacklistV3' test.out

#- 137 RetrieveAllThirdPartyLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op RetrieveAllThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 137 'RetrieveAllThirdPartyLoginPlatformCredentialV3' test.out

#- 138 RetrieveAllActiveThirdPartyLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op RetrieveAllActiveThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 138 'RetrieveAllActiveThirdPartyLoginPlatformCredentialV3' test.out

#- 139 RetrieveAllSSOLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op RetrieveAllSSOLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --limit '36' \
    --offset '57' \
    > test.out 2>&1
eval_tap $? 139 'RetrieveAllSSOLoginPlatformCredentialV3' test.out

#- 140 RetrieveThirdPartyLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op RetrieveThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'I0hu2icz' \
    > test.out 2>&1
eval_tap $? 140 'RetrieveThirdPartyLoginPlatformCredentialV3' test.out

#- 141 AddThirdPartyLoginPlatformCredentialV3
# body param: body
echo '{"ACSURL": "ELrWGpHg", "AWSCognitoRegion": "w6J2L2ih", "AWSCognitoUserPool": "cDApfe3j", "AllowedClients": ["LodIyLFj", "hHSnnDYZ", "3OfTGMWP"], "AppId": "caabBHDy", "AuthorizationEndpoint": "epZE2Oyc", "ClientId": "4muR8Elf", "Environment": "UiHU5qkO", "FederationMetadataURL": "CWMZ3Cci", "GenericOauthFlow": false, "IsActive": true, "Issuer": "caLqPb1t", "JWKSEndpoint": "dPI9JNhm", "KeyID": "LM8sZEpN", "NetflixCertificates": {"encryptedPrivateKey": "bchOAE88", "encryptedPrivateKeyName": "N2zJ6wxV", "publicCertificate": "cBfcvlnr", "publicCertificateName": "wiVOT10k", "rootCertificate": "0K66Vuj4", "rootCertificateName": "9DFUyeZu"}, "OrganizationId": "1pVQOxSI", "PlatformName": "AL1qfhhG", "RedirectUri": "u7P4LJ9B", "RegisteredDomains": [{"affectedClientIDs": ["x0S8eabM", "iCEXAitZ", "LZenvZK3"], "domain": "1RfnxUvI", "namespaces": ["lvKbobTa", "cPevRliA", "mGIt07ri"], "roleId": "tNFjIi1J"}, {"affectedClientIDs": ["u7aELELG", "tKwsg0XZ", "XLfwupX5"], "domain": "9RuUAjh0", "namespaces": ["UxAehA1U", "gfWXSWSb", "7GnlGCII"], "roleId": "FoKNjFXE"}, {"affectedClientIDs": ["eenn9t70", "5ngX8ckT", "uBdkono6"], "domain": "nituNlQT", "namespaces": ["sOrSzkRo", "2jIWTnAB", "tycbaeLm"], "roleId": "dPUXoyPZ"}], "Secret": "lkr5ewmO", "TeamID": "fLa9ueRV", "TokenAuthenticationType": "ghXkweDt", "TokenClaimsMapping": {"9jUYPEVL": "vMt4dVkb", "HOJmIG2b": "SWFGJDg1", "8nBMxvR8": "nnVKyMK8"}, "TokenEndpoint": "YtERHq8w", "UserInfoEndpoint": "HcR7XVrB", "UserInfoHTTPMethod": "UAPoWLPE", "scopes": ["5V6QFyXH", "eqquMTYC", "IIammwAh"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AddThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --platformId '8FjzAfup' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 141 'AddThirdPartyLoginPlatformCredentialV3' test.out

#- 142 DeleteThirdPartyLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op DeleteThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --platformId '3dktcbjg' \
    > test.out 2>&1
eval_tap $? 142 'DeleteThirdPartyLoginPlatformCredentialV3' test.out

#- 143 UpdateThirdPartyLoginPlatformCredentialV3
# body param: body
echo '{"ACSURL": "D3q7UDRR", "AWSCognitoRegion": "SUatNI87", "AWSCognitoUserPool": "ZWTJNhJG", "AllowedClients": ["dfMPbicN", "Dyi8rPIL", "rYKSadba"], "AppId": "lZQPEVeR", "AuthorizationEndpoint": "pJGE54Gn", "ClientId": "VVXA4xzx", "Environment": "6M2HJO2W", "FederationMetadataURL": "c8jOatV3", "GenericOauthFlow": true, "IsActive": false, "Issuer": "hHduDj4l", "JWKSEndpoint": "fzbFGJzS", "KeyID": "c61h3S2F", "NetflixCertificates": {"encryptedPrivateKey": "jsyw2jyn", "encryptedPrivateKeyName": "Ri9zW5Uc", "publicCertificate": "TWnqvJmY", "publicCertificateName": "cwcJ2JvL", "rootCertificate": "nTF53dPs", "rootCertificateName": "gSXHbSLo"}, "OrganizationId": "dmXUbv7H", "PlatformName": "WYfdiEgm", "RedirectUri": "tC6xyeuz", "RegisteredDomains": [{"affectedClientIDs": ["vxZo4uwf", "XqzsHsdp", "Su2g6jzx"], "domain": "X8QUZgnI", "namespaces": ["MRBlrjud", "74Kkhyps", "xVjlgUTp"], "roleId": "AvUSt3d5"}, {"affectedClientIDs": ["OMnjKbqN", "C27q0Euw", "J3vcbrVf"], "domain": "ddvctwRi", "namespaces": ["YQGGl3ZF", "DalhcEet", "t2n2nowN"], "roleId": "3aDVvz8h"}, {"affectedClientIDs": ["CTvnVKl3", "iZogWmhF", "5NGtaAIs"], "domain": "gi3033Hj", "namespaces": ["3T0pMv8N", "MCaEkQBc", "wKItwIGa"], "roleId": "t7g9eCGE"}], "Secret": "g7G3qrHe", "TeamID": "0CXdTOna", "TokenAuthenticationType": "R7fNPlBu", "TokenClaimsMapping": {"5ZnyN94m": "acPto5W3", "7laauAST": "UKzONin1", "DEaUYiUK": "ItGrp2EB"}, "TokenEndpoint": "Pqk4ra4E", "UserInfoEndpoint": "wMO88VtE", "UserInfoHTTPMethod": "QMYAEYeP", "scopes": ["YDpsUu9C", "5SsT91SW", "xloEiI5w"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op UpdateThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'ET314wxD' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 143 'UpdateThirdPartyLoginPlatformCredentialV3' test.out

#- 144 UpdateThirdPartyLoginPlatformDomainV3
# body param: body
echo '{"affectedClientIDs": ["zjFWBTdh", "6oCiZJQu", "MdibQ1JB"], "assignedNamespaces": ["zVP8t9vs", "qVgUh668", "21lBzdoU"], "domain": "BLs1L2ob", "roleId": "ub8r47Iz"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op UpdateThirdPartyLoginPlatformDomainV3 \
    --namespace $AB_NAMESPACE \
    --platformId '7Pr2uV90' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 144 'UpdateThirdPartyLoginPlatformDomainV3' test.out

#- 145 DeleteThirdPartyLoginPlatformDomainV3
# body param: body
echo '{"domain": "rVGvxKrE"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op DeleteThirdPartyLoginPlatformDomainV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'fro6PBCh' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 145 'DeleteThirdPartyLoginPlatformDomainV3' test.out

#- 146 RetrieveSSOLoginPlatformCredential
$CLI_EXE \
    --sn iam \
    --op RetrieveSSOLoginPlatformCredential \
    --namespace $AB_NAMESPACE \
    --platformId '0jHxH3w6' \
    > test.out 2>&1
eval_tap $? 146 'RetrieveSSOLoginPlatformCredential' test.out

#- 147 AddSSOLoginPlatformCredential
# body param: body
echo '{"acsUrl": "wwSbHYhp", "apiKey": "3x2gPqe9", "appId": "REusW5Fj", "federationMetadataUrl": "NYNXUmVj", "isActive": true, "redirectUri": "HwGSVKmZ", "secret": "tV8zkiyp", "ssoUrl": "FVqUydUS"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AddSSOLoginPlatformCredential \
    --namespace $AB_NAMESPACE \
    --platformId 'eAqKyAQK' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 147 'AddSSOLoginPlatformCredential' test.out

#- 148 DeleteSSOLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op DeleteSSOLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'PtuJioSu' \
    > test.out 2>&1
eval_tap $? 148 'DeleteSSOLoginPlatformCredentialV3' test.out

#- 149 UpdateSSOPlatformCredential
# body param: body
echo '{"acsUrl": "HWHmPoQz", "apiKey": "fjJZW21N", "appId": "107oGMgG", "federationMetadataUrl": "huyHBOdb", "isActive": true, "redirectUri": "IFOAeJD5", "secret": "M5QTImnP", "ssoUrl": "H231ScyU"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op UpdateSSOPlatformCredential \
    --namespace $AB_NAMESPACE \
    --platformId 'dELj9oOc' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 149 'UpdateSSOPlatformCredential' test.out

#- 150 AdminListUserIDByPlatformUserIDsV3
# body param: body
echo '{"platformUserIds": ["GiCmBEDo", "mndFFuMd", "qGR2u6Y0"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminListUserIDByPlatformUserIDsV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'bGaexjKi' \
    --rawPID 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 150 'AdminListUserIDByPlatformUserIDsV3' test.out

#- 151 AdminGetUserByPlatformUserIDV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserByPlatformUserIDV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'b9seJo4l' \
    --platformUserId 'lGU8Dr0G' \
    > test.out 2>&1
eval_tap $? 151 'AdminGetUserByPlatformUserIDV3' test.out

#- 152 GetAdminUsersByRoleIdV3
$CLI_EXE \
    --sn iam \
    --op GetAdminUsersByRoleIdV3 \
    --namespace $AB_NAMESPACE \
    --roleId 'y1w9xyZu' \
    --after '14' \
    --before '95' \
    --limit '16' \
    > test.out 2>&1
eval_tap $? 152 'GetAdminUsersByRoleIdV3' test.out

#- 153 AdminGetUserByEmailAddressV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserByEmailAddressV3 \
    --namespace $AB_NAMESPACE \
    --emailAddress 'lDrS5wWv' \
    > test.out 2>&1
eval_tap $? 153 'AdminGetUserByEmailAddressV3' test.out

#- 154 AdminBulkUpdateUsersV3
# body param: body
echo '{"updateRequest": {"skipLoginQueue": true}, "userIds": ["EOrr64uJ", "4bhdeeM5", "6xSmPX7S"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBulkUpdateUsersV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 154 'AdminBulkUpdateUsersV3' test.out

#- 155 AdminGetBulkUserBanV3
# body param: body
echo '{"bulkUserId": ["Yyt6fVLb", "KhTcRnmN", "ChuBRvMs"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminGetBulkUserBanV3 \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --banType 'DZbJM6Tz' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 155 'AdminGetBulkUserBanV3' test.out

#- 156 AdminListUserIDByUserIDsV3
# body param: body
echo '{"userIds": ["oo3Gce8o", "zPKLz35Q", "jFIAqRA1"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminListUserIDByUserIDsV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 156 'AdminListUserIDByUserIDsV3' test.out

#- 157 AdminBulkGetUsersPlatform
# body param: body
echo '{"userIds": ["fhNbf5ZZ", "ZkMbZSIF", "LhcLsibg"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBulkGetUsersPlatform \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 157 'AdminBulkGetUsersPlatform' test.out

#- 158 AdminInviteUserV3
# body param: body
echo '{"emailAddresses": ["JqfZyhcX", "YO0gqCjK", "gnhmIjzv"], "isAdmin": false, "namespace": "sJvpikph", "roles": ["U7b72HNf", "3apX6gGh", "dNkkm7Xq"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminInviteUserV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 158 'AdminInviteUserV3' test.out

#- 159 AdminQueryThirdPlatformLinkHistoryV3
$CLI_EXE \
    --sn iam \
    --op AdminQueryThirdPlatformLinkHistoryV3 \
    --namespace $AB_NAMESPACE \
    --limit '22' \
    --offset '52' \
    --platformUserId 'zthwoXOC' \
    --platformId '7bnOmr2n' \
    > test.out 2>&1
eval_tap $? 159 'AdminQueryThirdPlatformLinkHistoryV3' test.out

#- 160 AdminListUsersV3
$CLI_EXE \
    --sn iam \
    --op AdminListUsersV3 \
    --namespace $AB_NAMESPACE \
    --limit '1' \
    --offset '16' \
    > test.out 2>&1
eval_tap $? 160 'AdminListUsersV3' test.out

#- 161 AdminSearchUserV3
$CLI_EXE \
    --sn iam \
    --op AdminSearchUserV3 \
    --namespace $AB_NAMESPACE \
    --by 'CDn5ODI7' \
    --endDate 'j7xVANys' \
    --includeTotal 'true' \
    --limit '25' \
    --offset '71' \
    --platformBy 'yZwlDj95' \
    --platformId 'zBz6suEp' \
    --query 'qmxeMWxf' \
    --roleIds '65ZLKaH0' \
    --skipLoginQueue 'false' \
    --startDate 'ExfFxStA' \
    --testAccount 'false' \
    > test.out 2>&1
eval_tap $? 161 'AdminSearchUserV3' test.out

#- 162 AdminGetBulkUserByEmailAddressV3
# body param: body
echo '{"listEmailAddressRequest": ["Qx1Z2OHY", "Nlrwlbk2", "sm9wZGCd"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminGetBulkUserByEmailAddressV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 162 'AdminGetBulkUserByEmailAddressV3' test.out

#- 163 AdminGetUserByUserIdV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserByUserIdV3 \
    --namespace $AB_NAMESPACE \
    --userId '3hkBpGja' \
    > test.out 2>&1
eval_tap $? 163 'AdminGetUserByUserIdV3' test.out

#- 164 AdminUpdateUserV3
# body param: body
echo '{"avatarUrl": "nqdp2EoE", "country": "JD7AQCjS", "dateOfBirth": "o00X7JlU", "displayName": "34rvrOHa", "languageTag": "gNZYYWk8", "skipLoginQueue": true, "uniqueDisplayName": "aQhyIqYM", "userName": "SBPWFRpr"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserV3 \
    --namespace $AB_NAMESPACE \
    --userId 'r1JgYApQ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 164 'AdminUpdateUserV3' test.out

#- 165 AdminGetUserBanV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserBanV3 \
    --namespace $AB_NAMESPACE \
    --userId 'gjn7Pyrj' \
    --activeOnly 'false' \
    --after 'ZeBpF4Ri' \
    --before 'zP6WinqA' \
    --limit '5' \
    > test.out 2>&1
eval_tap $? 165 'AdminGetUserBanV3' test.out

#- 166 AdminBanUserV3
# body param: body
echo '{"ban": "5cWKUy73", "comment": "3EQXcQQO", "endDate": "1RPYTQFp", "reason": "aFz1Iouq", "skipNotif": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBanUserV3 \
    --namespace $AB_NAMESPACE \
    --userId 'swGO4fvn' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 166 'AdminBanUserV3' test.out

#- 167 AdminUpdateUserBanV3
# body param: body
echo '{"enabled": true, "skipNotif": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserBanV3 \
    --banId '9Kn9MvPy' \
    --namespace $AB_NAMESPACE \
    --userId '0dlqxnrH' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 167 'AdminUpdateUserBanV3' test.out

#- 168 AdminSendVerificationCodeV3
# body param: body
echo '{"context": "Z6Yg5bws", "emailAddress": "13UQDGCH", "languageTag": "BPVlr1Uq"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminSendVerificationCodeV3 \
    --namespace $AB_NAMESPACE \
    --userId 'P3qKgCIp' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 168 'AdminSendVerificationCodeV3' test.out

#- 169 AdminVerifyAccountV3
# body param: body
echo '{"Code": "KPc3fCkF", "ContactType": "EcfksZdW", "LanguageTag": "DnNVPsfN", "validateOnly": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminVerifyAccountV3 \
    --namespace $AB_NAMESPACE \
    --userId 'mbBzBcMr' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 169 'AdminVerifyAccountV3' test.out

#- 170 GetUserVerificationCode
$CLI_EXE \
    --sn iam \
    --op GetUserVerificationCode \
    --namespace $AB_NAMESPACE \
    --userId 'MxxIOB5C' \
    > test.out 2>&1
eval_tap $? 170 'GetUserVerificationCode' test.out

#- 171 AdminGetUserDeletionStatusV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserDeletionStatusV3 \
    --namespace $AB_NAMESPACE \
    --userId 'lTAy5lnp' \
    > test.out 2>&1
eval_tap $? 171 'AdminGetUserDeletionStatusV3' test.out

#- 172 AdminUpdateUserDeletionStatusV3
# body param: body
echo '{"deletionDate": 46, "enabled": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserDeletionStatusV3 \
    --namespace $AB_NAMESPACE \
    --userId 'D8fVji25' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 172 'AdminUpdateUserDeletionStatusV3' test.out

#- 173 AdminListUserAllPlatformAccountsDistinctV3
$CLI_EXE \
    --sn iam \
    --op AdminListUserAllPlatformAccountsDistinctV3 \
    --namespace $AB_NAMESPACE \
    --userId 'vb9n1qcX' \
    > test.out 2>&1
eval_tap $? 173 'AdminListUserAllPlatformAccountsDistinctV3' test.out

#- 174 AdminUpgradeHeadlessAccountV3
# body param: body
echo '{"code": "mTer7dMy", "country": "dapQfqbM", "dateOfBirth": "EDiUddw3", "displayName": "ExzyiGX6", "emailAddress": "JU1k3Ly8", "password": "VfqDAgM3", "uniqueDisplayName": "xbJJfRZ6", "validateOnly": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpgradeHeadlessAccountV3 \
    --namespace $AB_NAMESPACE \
    --userId '2B1rfBaF' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 174 'AdminUpgradeHeadlessAccountV3' test.out

#- 175 AdminDeleteUserInformationV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserInformationV3 \
    --namespace $AB_NAMESPACE \
    --userId 'njAqD82N' \
    > test.out 2>&1
eval_tap $? 175 'AdminDeleteUserInformationV3' test.out

#- 176 AdminGetUserLoginHistoriesV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserLoginHistoriesV3 \
    --namespace $AB_NAMESPACE \
    --userId 'Xw73woU5' \
    --after '0.8496604862267748' \
    --before '0.6416115154520025' \
    --limit '87' \
    > test.out 2>&1
eval_tap $? 176 'AdminGetUserLoginHistoriesV3' test.out

#- 177 AdminResetPasswordV3
# body param: body
echo '{"languageTag": "oVoDBEje", "newPassword": "ACOUDUWE", "oldPassword": "Y0zWr0Vt"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminResetPasswordV3 \
    --namespace $AB_NAMESPACE \
    --userId '6sE7c7ez' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 177 'AdminResetPasswordV3' test.out

#- 178 AdminUpdateUserPermissionV3
# body param: body
echo '{"Permissions": [{"Action": 81, "Resource": "EwGtTlWK", "SchedAction": 9, "SchedCron": "DEz4gecx", "SchedRange": ["NJ6P5sxV", "A9c3SPrn", "ncxzD9bB"]}, {"Action": 92, "Resource": "qRvymnlB", "SchedAction": 18, "SchedCron": "X56AMOWx", "SchedRange": ["ysmyC3ou", "nw7BLZ3J", "cVYHfNb2"]}, {"Action": 87, "Resource": "yqQXwCI5", "SchedAction": 48, "SchedCron": "cs81Z06T", "SchedRange": ["J7Yax4y8", "i9av2E1k", "J4xIADUl"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserPermissionV3 \
    --namespace $AB_NAMESPACE \
    --userId 'txdUpGVm' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 178 'AdminUpdateUserPermissionV3' test.out

#- 179 AdminAddUserPermissionsV3
# body param: body
echo '{"Permissions": [{"Action": 68, "Resource": "8UZlZ8PZ", "SchedAction": 15, "SchedCron": "aMMJHcJW", "SchedRange": ["gHxxDRem", "lr3TwNm1", "Y1ivBzyk"]}, {"Action": 86, "Resource": "A9P87Vsl", "SchedAction": 80, "SchedCron": "xLHdbGm5", "SchedRange": ["DTBunyNm", "tgSi1zp5", "dsS9hsEP"]}, {"Action": 80, "Resource": "CYyQmJab", "SchedAction": 47, "SchedCron": "ieS1lh7U", "SchedRange": ["kKUZlphZ", "T7rULNGa", "DFcoxN3y"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddUserPermissionsV3 \
    --namespace $AB_NAMESPACE \
    --userId 'fLe8X7AH' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 179 'AdminAddUserPermissionsV3' test.out

#- 180 AdminDeleteUserPermissionBulkV3
# body param: body
echo '[{"Action": 7, "Resource": "oXVJ8caA"}, {"Action": 85, "Resource": "n0lv61vO"}, {"Action": 80, "Resource": "SzI21WLY"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserPermissionBulkV3 \
    --namespace $AB_NAMESPACE \
    --userId 'KAIe6Q2f' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 180 'AdminDeleteUserPermissionBulkV3' test.out

#- 181 AdminDeleteUserPermissionV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserPermissionV3 \
    --action '60' \
    --namespace $AB_NAMESPACE \
    --resource 'rgJszDsa' \
    --userId 'xRcBrPqi' \
    > test.out 2>&1
eval_tap $? 181 'AdminDeleteUserPermissionV3' test.out

#- 182 AdminGetUserPlatformAccountsV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserPlatformAccountsV3 \
    --namespace $AB_NAMESPACE \
    --userId 'jyPMYm8F' \
    --after 'RK9fiiVt' \
    --before 'xxKfcKqC' \
    --limit '98' \
    --platformId 'xIJkW33f' \
    > test.out 2>&1
eval_tap $? 182 'AdminGetUserPlatformAccountsV3' test.out

#- 183 AdminGetListJusticePlatformAccounts
$CLI_EXE \
    --sn iam \
    --op AdminGetListJusticePlatformAccounts \
    --namespace $AB_NAMESPACE \
    --userId 'ITOCq5jq' \
    > test.out 2>&1
eval_tap $? 183 'AdminGetListJusticePlatformAccounts' test.out

#- 184 AdminGetUserMapping
$CLI_EXE \
    --sn iam \
    --op AdminGetUserMapping \
    --namespace $AB_NAMESPACE \
    --targetNamespace '68uJYZrG' \
    --userId 'Km2QUmqG' \
    > test.out 2>&1
eval_tap $? 184 'AdminGetUserMapping' test.out

#- 185 AdminCreateJusticeUser
$CLI_EXE \
    --sn iam \
    --op AdminCreateJusticeUser \
    --namespace $AB_NAMESPACE \
    --targetNamespace 'TCqBbTU0' \
    --userId 'q7m5KA4b' \
    > test.out 2>&1
eval_tap $? 185 'AdminCreateJusticeUser' test.out

#- 186 AdminLinkPlatformAccount
# body param: body
echo '{"platformId": "jE0AqWOf", "platformUserId": "IfmKbt4X"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminLinkPlatformAccount \
    --namespace $AB_NAMESPACE \
    --userId '5rKoSSto' \
    --skipConflict 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 186 'AdminLinkPlatformAccount' test.out

#- 187 AdminPlatformUnlinkV3
# body param: body
echo '{"platformNamespace": "vhjGMmaa"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminPlatformUnlinkV3 \
    --namespace $AB_NAMESPACE \
    --platformId '6Zq2HNs7' \
    --userId 'EdSrYP2C' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 187 'AdminPlatformUnlinkV3' test.out

#- 188 AdminPlatformUnlinkAllV3
$CLI_EXE \
    --sn iam \
    --op AdminPlatformUnlinkAllV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'AfddINxx' \
    --userId 'bDUYG1MP' \
    > test.out 2>&1
eval_tap $? 188 'AdminPlatformUnlinkAllV3' test.out

#- 189 AdminPlatformLinkV3
$CLI_EXE \
    --sn iam \
    --op AdminPlatformLinkV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'S8mzB1De' \
    --userId 'flF6afSF' \
    --ticket '7WKtCNCS' \
    > test.out 2>&1
eval_tap $? 189 'AdminPlatformLinkV3' test.out

#- 190 AdminDeleteUserLinkingHistoryByPlatformIDV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserLinkingHistoryByPlatformIDV3 \
    --namespace $AB_NAMESPACE \
    --platformId '1mDXmmbQ' \
    --userId 'BYCGriyw' \
    > test.out 2>&1
eval_tap $? 190 'AdminDeleteUserLinkingHistoryByPlatformIDV3' test.out

#- 191 AdminGetThirdPartyPlatformTokenLinkStatusV3
$CLI_EXE \
    --sn iam \
    --op AdminGetThirdPartyPlatformTokenLinkStatusV3 \
    --namespace $AB_NAMESPACE \
    --platformId '8PZYHyp9' \
    --userId 'ekVsks2E' \
    --platformToken 'e80bx8tF' \
    > test.out 2>&1
eval_tap $? 191 'AdminGetThirdPartyPlatformTokenLinkStatusV3' test.out

#- 192 AdminGetUserSinglePlatformAccount
$CLI_EXE \
    --sn iam \
    --op AdminGetUserSinglePlatformAccount \
    --namespace $AB_NAMESPACE \
    --platformId '44MuwoeC' \
    --userId 'xOGsTz1P' \
    > test.out 2>&1
eval_tap $? 192 'AdminGetUserSinglePlatformAccount' test.out

#- 193 AdminDeleteUserRolesV3
# body param: body
echo '["rl2MtMXO", "DCa4r01Z", "rwSUd893"]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserRolesV3 \
    --namespace $AB_NAMESPACE \
    --userId 'B89pxDBX' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 193 'AdminDeleteUserRolesV3' test.out

#- 194 AdminSaveUserRoleV3
# body param: body
echo '[{"namespace": "aR6R3KUv", "roleId": "vk8eF73d"}, {"namespace": "xgfwmOA6", "roleId": "Pg7wOu26"}, {"namespace": "a1rOFfUE", "roleId": "lFs8XVsn"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminSaveUserRoleV3 \
    --namespace $AB_NAMESPACE \
    --userId 'KnCsyb0Z' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 194 'AdminSaveUserRoleV3' test.out

#- 195 AdminAddUserRoleV3
$CLI_EXE \
    --sn iam \
    --op AdminAddUserRoleV3 \
    --namespace $AB_NAMESPACE \
    --roleId '5YS6iRCR' \
    --userId 'GUlQr8R9' \
    > test.out 2>&1
eval_tap $? 195 'AdminAddUserRoleV3' test.out

#- 196 AdminDeleteUserRoleV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserRoleV3 \
    --namespace $AB_NAMESPACE \
    --roleId 'TXv853Bt' \
    --userId '2tuvRqho' \
    > test.out 2>&1
eval_tap $? 196 'AdminDeleteUserRoleV3' test.out

#- 197 AdminUpdateUserStatusV3
# body param: body
echo '{"enabled": false, "reason": "jT3qOoG3"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserStatusV3 \
    --namespace $AB_NAMESPACE \
    --userId 'rOnxF1ul' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 197 'AdminUpdateUserStatusV3' test.out

#- 198 AdminTrustlyUpdateUserIdentity
# body param: body
echo '{"emailAddress": "b1yIF7G4", "password": "b6CTMMAi"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminTrustlyUpdateUserIdentity \
    --namespace $AB_NAMESPACE \
    --userId 'Ta5H7Npu' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 198 'AdminTrustlyUpdateUserIdentity' test.out

#- 199 AdminVerifyUserWithoutVerificationCodeV3
$CLI_EXE \
    --sn iam \
    --op AdminVerifyUserWithoutVerificationCodeV3 \
    --namespace $AB_NAMESPACE \
    --userId 'SfUHrGVQ' \
    > test.out 2>&1
eval_tap $? 199 'AdminVerifyUserWithoutVerificationCodeV3' test.out

#- 200 AdminUpdateClientSecretV3
# body param: body
echo '{"newSecret": "jRNDDJjI"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateClientSecretV3 \
    --clientId 'cAjzMnrc' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 200 'AdminUpdateClientSecretV3' test.out

#- 201 AdminCheckThirdPartyLoginPlatformAvailabilityV3
$CLI_EXE \
    --sn iam \
    --op AdminCheckThirdPartyLoginPlatformAvailabilityV3 \
    --platformId 'EyEMhHhk' \
    > test.out 2>&1
eval_tap $? 201 'AdminCheckThirdPartyLoginPlatformAvailabilityV3' test.out

#- 202 AdminGetRolesV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRolesV3 \
    --after '5vXTIaQI' \
    --before 'JeIPo0Qw' \
    --isWildcard 'true' \
    --limit '97' \
    > test.out 2>&1
eval_tap $? 202 'AdminGetRolesV3' test.out

#- 203 AdminCreateRoleV3
# body param: body
echo '{"adminRole": true, "deletable": true, "isWildcard": true, "managers": [{"displayName": "fkxek7cc", "namespace": "pc60HMHh", "userId": "eFTmdJ7o"}, {"displayName": "GVy6tiak", "namespace": "Hq19Juc6", "userId": "PDkvYOdS"}, {"displayName": "GSc4O6tE", "namespace": "mLIayGPy", "userId": "E3IF6qbd"}], "members": [{"displayName": "j6TvTcZA", "namespace": "CSwXqZYV", "userId": "hqtH4qyI"}, {"displayName": "yml1jdNj", "namespace": "ITFfqV9l", "userId": "1JEbMm8M"}, {"displayName": "urZKXnGa", "namespace": "o4uBARMh", "userId": "dgvmGkHt"}], "permissions": [{"action": 67, "resource": "41YvizyY", "schedAction": 76, "schedCron": "NqYuoaf0", "schedRange": ["NbhTMzvZ", "tqJIMPrs", "dxBaQp5S"]}, {"action": 33, "resource": "7ALwNg6C", "schedAction": 63, "schedCron": "90NQSNhC", "schedRange": ["h4BnGGCi", "HM1D2s2t", "nZAqQvfb"]}, {"action": 55, "resource": "NJntyHu4", "schedAction": 11, "schedCron": "PzWIumfd", "schedRange": ["kb6388O6", "qJWnTikO", "cwERgnYL"]}], "roleName": "TMPpNnCs"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminCreateRoleV3 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 203 'AdminCreateRoleV3' test.out

#- 204 AdminGetRoleV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleV3 \
    --roleId '4E2BuUoA' \
    > test.out 2>&1
eval_tap $? 204 'AdminGetRoleV3' test.out

#- 205 AdminDeleteRoleV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteRoleV3 \
    --roleId 'fx3RnD9z' \
    > test.out 2>&1
eval_tap $? 205 'AdminDeleteRoleV3' test.out

#- 206 AdminUpdateRoleV3
# body param: body
echo '{"deletable": true, "isWildcard": false, "roleName": "bdRizU7i"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateRoleV3 \
    --roleId 'wgZDfs8e' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 206 'AdminUpdateRoleV3' test.out

#- 207 AdminGetRoleAdminStatusV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleAdminStatusV3 \
    --roleId 'jsBzNEra' \
    > test.out 2>&1
eval_tap $? 207 'AdminGetRoleAdminStatusV3' test.out

#- 208 AdminUpdateAdminRoleStatusV3
$CLI_EXE \
    --sn iam \
    --op AdminUpdateAdminRoleStatusV3 \
    --roleId 'GwJi1yyP' \
    > test.out 2>&1
eval_tap $? 208 'AdminUpdateAdminRoleStatusV3' test.out

#- 209 AdminRemoveRoleAdminV3
$CLI_EXE \
    --sn iam \
    --op AdminRemoveRoleAdminV3 \
    --roleId 'qPrpXvfg' \
    > test.out 2>&1
eval_tap $? 209 'AdminRemoveRoleAdminV3' test.out

#- 210 AdminGetRoleManagersV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleManagersV3 \
    --roleId 'RNVGz5mL' \
    --after 'W5oHVExI' \
    --before 'NSqtAaLA' \
    --limit '60' \
    > test.out 2>&1
eval_tap $? 210 'AdminGetRoleManagersV3' test.out

#- 211 AdminAddRoleManagersV3
# body param: body
echo '{"managers": [{"displayName": "jEa33ip1", "namespace": "Qxw6g84i", "userId": "Xt5u7GEs"}, {"displayName": "MAJnnn7d", "namespace": "QWlhObms", "userId": "8NdxIhgv"}, {"displayName": "vfhv4CsO", "namespace": "aIGQi1oF", "userId": "2lqsh0fm"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddRoleManagersV3 \
    --roleId 'Ui5njMtB' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 211 'AdminAddRoleManagersV3' test.out

#- 212 AdminRemoveRoleManagersV3
# body param: body
echo '{"managers": [{"displayName": "rb0QMCOq", "namespace": "Qtq5ClbS", "userId": "UYwEGXFY"}, {"displayName": "9kk26uUo", "namespace": "MUY2WbHD", "userId": "UMpPWGIR"}, {"displayName": "qeFjEJM6", "namespace": "lso2rDMQ", "userId": "In1ExX41"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminRemoveRoleManagersV3 \
    --roleId 'lJIuCEvd' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 212 'AdminRemoveRoleManagersV3' test.out

#- 213 AdminGetRoleMembersV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleMembersV3 \
    --roleId 'dSHpSpfE' \
    --after '5ZTkPHhk' \
    --before 'BcbKVBXT' \
    --limit '69' \
    > test.out 2>&1
eval_tap $? 213 'AdminGetRoleMembersV3' test.out

#- 214 AdminAddRoleMembersV3
# body param: body
echo '{"members": [{"displayName": "o8MTy3lr", "namespace": "Ie9spM1K", "userId": "mzgOsvuV"}, {"displayName": "1XgQ7S75", "namespace": "UGAfxMHI", "userId": "Ud2MTARA"}, {"displayName": "9msqT2e8", "namespace": "7tHURhdf", "userId": "3Y7A1eKn"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddRoleMembersV3 \
    --roleId '3GbR868H' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 214 'AdminAddRoleMembersV3' test.out

#- 215 AdminRemoveRoleMembersV3
# body param: body
echo '{"members": [{"displayName": "8i1hle7x", "namespace": "WaibcBui", "userId": "90cR6QjH"}, {"displayName": "djPpV37R", "namespace": "8h9i0OXl", "userId": "mf2qGdpj"}, {"displayName": "KxHijTaf", "namespace": "nYalOY3r", "userId": "FBy7ZFNX"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminRemoveRoleMembersV3 \
    --roleId 'z9nMdceh' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 215 'AdminRemoveRoleMembersV3' test.out

#- 216 AdminUpdateRolePermissionsV3
# body param: body
echo '{"permissions": [{"action": 40, "resource": "zW1XJJao", "schedAction": 39, "schedCron": "TQjzUjB7", "schedRange": ["AJFCqi5t", "l9GwvEtm", "zrTUrL0U"]}, {"action": 49, "resource": "cto5deW2", "schedAction": 62, "schedCron": "NygOAvQU", "schedRange": ["F501nP9x", "LMQQrYUY", "tMH3km1z"]}, {"action": 88, "resource": "UARb9Wym", "schedAction": 59, "schedCron": "C5gH8HB9", "schedRange": ["xbTWZT3E", "cC7b1Gdg", "BYlHrqZQ"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateRolePermissionsV3 \
    --roleId 'lCfhIDgN' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 216 'AdminUpdateRolePermissionsV3' test.out

#- 217 AdminAddRolePermissionsV3
# body param: body
echo '{"permissions": [{"action": 65, "resource": "ELe84LOH", "schedAction": 85, "schedCron": "079W86hV", "schedRange": ["rrPagTXQ", "Kt8y5P4j", "iKH2gruT"]}, {"action": 50, "resource": "g7gg6UG0", "schedAction": 28, "schedCron": "UUy61qVt", "schedRange": ["Fal0FIYA", "ozIei5IN", "KhOsau6i"]}, {"action": 64, "resource": "JOa1X9wB", "schedAction": 81, "schedCron": "LXiF0xTV", "schedRange": ["AXyKC01H", "QKI9xTWS", "Ojqybae1"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddRolePermissionsV3 \
    --roleId '7HLMmmex' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 217 'AdminAddRolePermissionsV3' test.out

#- 218 AdminDeleteRolePermissionsV3
# body param: body
echo '["jwHMCeom", "g7PqYflZ", "amm5kTah"]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDeleteRolePermissionsV3 \
    --roleId 'C6o3gBV0' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 218 'AdminDeleteRolePermissionsV3' test.out

#- 219 AdminDeleteRolePermissionV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteRolePermissionV3 \
    --action '46' \
    --resource 'QH1uDKGb' \
    --roleId 'ZJau0djL' \
    > test.out 2>&1
eval_tap $? 219 'AdminDeleteRolePermissionV3' test.out

#- 220 AdminGetMyUserV3
$CLI_EXE \
    --sn iam \
    --op AdminGetMyUserV3 \
    > test.out 2>&1
eval_tap $? 220 'AdminGetMyUserV3' test.out

#- 221 UserAuthenticationV3
$CLI_EXE \
    --sn iam \
    --op UserAuthenticationV3 \
    --client_id 'wUnSB1q5' \
    --extend_exp 'false' \
    --redirect_uri 'zww45MSG' \
    --password 'trnq6QWQ' \
    --request_id 'WUBPhovR' \
    --user_name 'AX3dgttz' \
    > test.out 2>&1
eval_tap $? 221 'UserAuthenticationV3' test.out

#- 222 AuthenticationWithPlatformLinkV3
$CLI_EXE \
    --sn iam \
    --op AuthenticationWithPlatformLinkV3 \
    --extend_exp 'false' \
    --client_id 'CAr6KCb8' \
    --linkingToken 'JrQxYewT' \
    --password 'W33Kl7SX' \
    --username 'cBq0Kan0' \
    > test.out 2>&1
eval_tap $? 222 'AuthenticationWithPlatformLinkV3' test.out

#- 223 GenerateTokenByNewHeadlessAccountV3
$CLI_EXE \
    --sn iam \
    --op GenerateTokenByNewHeadlessAccountV3 \
    --additionalData 'zToLmYRW' \
    --extend_exp 'false' \
    --linkingToken 'APwVTiTp' \
    > test.out 2>&1
eval_tap $? 223 'GenerateTokenByNewHeadlessAccountV3' test.out

#- 224 RequestOneTimeLinkingCodeV3
$CLI_EXE \
    --sn iam \
    --op RequestOneTimeLinkingCodeV3 \
    --platformId 'F6Qck70e' \
    > test.out 2>&1
eval_tap $? 224 'RequestOneTimeLinkingCodeV3' test.out

#- 225 ValidateOneTimeLinkingCodeV3
$CLI_EXE \
    --sn iam \
    --op ValidateOneTimeLinkingCodeV3 \
    --oneTimeLinkCode 'R1GmdDSr' \
    > test.out 2>&1
eval_tap $? 225 'ValidateOneTimeLinkingCodeV3' test.out

#- 226 RequestTokenByOneTimeLinkCodeResponseV3
$CLI_EXE \
    --sn iam \
    --op RequestTokenByOneTimeLinkCodeResponseV3 \
    --additionalData 'qCb9rL2D' \
    --isTransient 'true' \
    --client_id 'Pl0qZDAX' \
    --oneTimeLinkCode 'R1BbXnuh' \
    > test.out 2>&1
eval_tap $? 226 'RequestTokenByOneTimeLinkCodeResponseV3' test.out

#- 227 GetCountryLocationV3
$CLI_EXE \
    --sn iam \
    --op GetCountryLocationV3 \
    > test.out 2>&1
eval_tap $? 227 'GetCountryLocationV3' test.out

#- 228 Logout
$CLI_EXE \
    --sn iam \
    --op Logout \
    > test.out 2>&1
eval_tap $? 228 'Logout' test.out

#- 229 RequestTokenExchangeCodeV3
$CLI_EXE \
    --sn iam \
    --op RequestTokenExchangeCodeV3 \
    --namespace $AB_NAMESPACE \
    --codeChallenge 'hYmtQIvL' \
    --codeChallengeMethod 'plain' \
    --client_id 'Dd1e6xAi' \
    > test.out 2>&1
eval_tap $? 229 'RequestTokenExchangeCodeV3' test.out

#- 230 AdminRetrieveUserThirdPartyPlatformTokenV3
$CLI_EXE \
    --sn iam \
    --op AdminRetrieveUserThirdPartyPlatformTokenV3 \
    --namespace $AB_NAMESPACE \
    --platformId '0TfE650h' \
    --userId 'EDKpy6Fz' \
    --platformUserId 'RU4cFw4H' \
    > test.out 2>&1
eval_tap $? 230 'AdminRetrieveUserThirdPartyPlatformTokenV3' test.out

#- 231 RevokeUserV3
$CLI_EXE \
    --sn iam \
    --op RevokeUserV3 \
    --namespace $AB_NAMESPACE \
    --userId '1SLjigQm' \
    --includeGameNamespace 'true' \
    > test.out 2>&1
eval_tap $? 231 'RevokeUserV3' test.out

#- 232 AuthorizeV3
$CLI_EXE \
    --sn iam \
    --op AuthorizeV3 \
    --codeChallenge '5J4ezdk7' \
    --codeChallengeMethod 'plain' \
    --createHeadless 'false' \
    --oneTimeLinkCode 'kHUCXBDJ' \
    --redirectUri 'dhMcXcti' \
    --scope 'I8DCPK7S' \
    --state 'eSsAQv8E' \
    --targetAuthPage 'AWeu3QBb' \
    --useRedirectUriAsLoginUrlWhenLocked 'true' \
    --clientId '8PCmV4Ob' \
    --responseType 'code' \
    > test.out 2>&1
eval_tap $? 232 'AuthorizeV3' test.out

#- 233 TokenIntrospectionV3
$CLI_EXE \
    --sn iam \
    --op TokenIntrospectionV3 \
    --token '82lMIe0q' \
    > test.out 2>&1
eval_tap $? 233 'TokenIntrospectionV3' test.out

#- 234 GetJWKSV3
$CLI_EXE \
    --sn iam \
    --op GetJWKSV3 \
    > test.out 2>&1
eval_tap $? 234 'GetJWKSV3' test.out

#- 235 SendMFAAuthenticationCode
$CLI_EXE \
    --sn iam \
    --op SendMFAAuthenticationCode \
    --clientId 'dduWXLCq' \
    --factor 'aGbGBJjq' \
    --mfaToken 'Z69BJ1El' \
    > test.out 2>&1
eval_tap $? 235 'SendMFAAuthenticationCode' test.out

#- 236 Change2faMethod
$CLI_EXE \
    --sn iam \
    --op Change2faMethod \
    --factor 'R3S7Fya8' \
    --mfaToken 'QftDK1Wf' \
    > test.out 2>&1
eval_tap $? 236 'Change2faMethod' test.out

#- 237 Verify2faCode
$CLI_EXE \
    --sn iam \
    --op Verify2faCode \
    --code 'snTzwvO1' \
    --factor 'wXxxaU4A' \
    --mfaToken 'EBDztmiY' \
    --rememberDevice 'true' \
    > test.out 2>&1
eval_tap $? 237 'Verify2faCode' test.out

#- 238 RetrieveUserThirdPartyPlatformTokenV3
$CLI_EXE \
    --sn iam \
    --op RetrieveUserThirdPartyPlatformTokenV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'nutGmTEO' \
    --userId 'wlMLOJsM' \
    > test.out 2>&1
eval_tap $? 238 'RetrieveUserThirdPartyPlatformTokenV3' test.out

#- 239 AuthCodeRequestV3
$CLI_EXE \
    --sn iam \
    --op AuthCodeRequestV3 \
    --platformId '65I3bAx8' \
    --clientId 'LmiQ1Ybj' \
    --redirectUri '7ESLSDa1' \
    --requestId 'KcxZdbva' \
    > test.out 2>&1
eval_tap $? 239 'AuthCodeRequestV3' test.out

#- 240 PlatformTokenGrantV3
$CLI_EXE \
    --sn iam \
    --op PlatformTokenGrantV3 \
    --platformId 'lDLhSfl3' \
    --additionalData 'gGk0CEvA' \
    --client_id 'xDph5byG' \
    --createHeadless 'true' \
    --device_id '625iDsK9' \
    --macAddress 'tJqZCd78' \
    --platform_token 'u0vtwUX5' \
    --skipSetCookie 'true' \
    > test.out 2>&1
eval_tap $? 240 'PlatformTokenGrantV3' test.out

#- 241 GetRevocationListV3
$CLI_EXE \
    --sn iam \
    --op GetRevocationListV3 \
    > test.out 2>&1
eval_tap $? 241 'GetRevocationListV3' test.out

#- 242 TokenRevocationV3
$CLI_EXE \
    --sn iam \
    --op TokenRevocationV3 \
    --token 'wlbFe9xu' \
    > test.out 2>&1
eval_tap $? 242 'TokenRevocationV3' test.out

#- 243 SimultaneousLoginV3
$CLI_EXE \
    --sn iam \
    --op SimultaneousLoginV3 \
    --simultaneousPlatform 'cHYGTUge' \
    --simultaneousTicket 'TbjKW9Ux' \
    --nativePlatform 'steam' \
    --nativePlatformTicket 'DN90OiTt' \
    > test.out 2>&1
eval_tap $? 243 'SimultaneousLoginV3' test.out

#- 244 TokenGrantV3
$CLI_EXE \
    --sn iam \
    --op TokenGrantV3 \
    --additionalData 'u00TsEbh' \
    --client_id 'UPjLPR00' \
    --code 'y5xbzW3T' \
    --code_verifier 'Xcc7Vxlw' \
    --extendNamespace 'qO3qohR6' \
    --extend_exp 'false' \
    --password 'dccXh8Tb' \
    --redirect_uri 'X1WpI6Wm' \
    --refresh_token '7xEAAudr' \
    --username 'P4NUe0Pa' \
    --grant_type 'client_credentials' \
    > test.out 2>&1
eval_tap $? 244 'TokenGrantV3' test.out

#- 245 VerifyTokenV3
$CLI_EXE \
    --sn iam \
    --op VerifyTokenV3 \
    --token 'v41tEP1s' \
    > test.out 2>&1
eval_tap $? 245 'VerifyTokenV3' test.out

#- 246 PlatformAuthenticationV3
$CLI_EXE \
    --sn iam \
    --op PlatformAuthenticationV3 \
    --platformId 'AZLwPtUa' \
    --code 'Wy5NpiLv' \
    --error '4uW7QOSj' \
    --openidAssocHandle 'v0R1tDUR' \
    --openidClaimedId 'eZgMJUdh' \
    --openidIdentity 'EkazuPYT' \
    --openidMode '3coRxnxB' \
    --openidNs 'uZvGfmil' \
    --openidOpEndpoint 'nBBkeGZg' \
    --openidResponseNonce 'sSgFVki7' \
    --openidReturnTo 'JAGNr1Zd' \
    --openidSig 'ffJ6lY1X' \
    --openidSigned '0So4dGWL' \
    --state 'lRdXQ0tM' \
    > test.out 2>&1
eval_tap $? 246 'PlatformAuthenticationV3' test.out

#- 247 PlatformTokenRefreshV3
$CLI_EXE \
    --sn iam \
    --op PlatformTokenRefreshV3 \
    --platformId '7ZAlZlnY' \
    --platform_token 'lrRhnG3k' \
    > test.out 2>&1
eval_tap $? 247 'PlatformTokenRefreshV3' test.out

#- 248 PublicGetInputValidations
$CLI_EXE \
    --sn iam \
    --op PublicGetInputValidations \
    --defaultOnEmpty 'false' \
    --languageCode 'ufZ1fY9a' \
    > test.out 2>&1
eval_tap $? 248 'PublicGetInputValidations' test.out

#- 249 PublicGetInputValidationByField
$CLI_EXE \
    --sn iam \
    --op PublicGetInputValidationByField \
    --field 'p29Sdyzq' \
    > test.out 2>&1
eval_tap $? 249 'PublicGetInputValidationByField' test.out

#- 250 PublicGetCountryAgeRestrictionV3
$CLI_EXE \
    --sn iam \
    --op PublicGetCountryAgeRestrictionV3 \
    --countryCode 'Yqws6odL' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 250 'PublicGetCountryAgeRestrictionV3' test.out

#- 251 PublicGetConfigValueV3
$CLI_EXE \
    --sn iam \
    --op PublicGetConfigValueV3 \
    --configKey 'APkiQ3KE' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 251 'PublicGetConfigValueV3' test.out

#- 252 PublicGetCountryListV3
$CLI_EXE \
    --sn iam \
    --op PublicGetCountryListV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 252 'PublicGetCountryListV3' test.out

#- 253 RetrieveAllActiveThirdPartyLoginPlatformCredentialPublicV3
$CLI_EXE \
    --sn iam \
    --op RetrieveAllActiveThirdPartyLoginPlatformCredentialPublicV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 253 'RetrieveAllActiveThirdPartyLoginPlatformCredentialPublicV3' test.out

#- 254 RetrieveActiveOIDCClientsPublicV3
$CLI_EXE \
    --sn iam \
    --op RetrieveActiveOIDCClientsPublicV3 \
    --namespace $AB_NAMESPACE \
    --clientId 'vXizPvhm' \
    > test.out 2>&1
eval_tap $? 254 'RetrieveActiveOIDCClientsPublicV3' test.out

#- 255 PublicListUserIDByPlatformUserIDsV3
# body param: body
echo '{"platformUserIds": ["neJo5Uvs", "3V5UFJEv", "F4c97efw"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicListUserIDByPlatformUserIDsV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'VXGx5NSk' \
    --rawPID 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 255 'PublicListUserIDByPlatformUserIDsV3' test.out

#- 256 PublicGetUserByPlatformUserIDV3
$CLI_EXE \
    --sn iam \
    --op PublicGetUserByPlatformUserIDV3 \
    --namespace $AB_NAMESPACE \
    --platformId '5TwvTize' \
    --platformUserId '0F78LsFZ' \
    > test.out 2>&1
eval_tap $? 256 'PublicGetUserByPlatformUserIDV3' test.out

#- 257 PublicGetAsyncStatus
$CLI_EXE \
    --sn iam \
    --op PublicGetAsyncStatus \
    --namespace $AB_NAMESPACE \
    --requestId 'nZAM2iUY' \
    > test.out 2>&1
eval_tap $? 257 'PublicGetAsyncStatus' test.out

#- 258 PublicSearchUserV3
$CLI_EXE \
    --sn iam \
    --op PublicSearchUserV3 \
    --namespace $AB_NAMESPACE \
    --by '0q0XPYvq' \
    --limit '31' \
    --offset '86' \
    --platformBy 'gLA788yX' \
    --platformId '6QUptl6S' \
    --query 'xl9gAhms' \
    > test.out 2>&1
eval_tap $? 258 'PublicSearchUserV3' test.out

#- 259 PublicCreateUserV3
# body param: body
echo '{"PasswordMD5Sum": "QExyoTt4", "acceptedPolicies": [{"isAccepted": false, "localizedPolicyVersionId": "PrTRWVUH", "policyId": "iqR1adb4", "policyVersionId": "VvbNUJ2a"}, {"isAccepted": true, "localizedPolicyVersionId": "hy8rqmzR", "policyId": "DEoQ39x2", "policyVersionId": "eFxF9juE"}, {"isAccepted": false, "localizedPolicyVersionId": "lOWq47gW", "policyId": "MkCCcTHD", "policyVersionId": "RNBk21UZ"}], "authType": "Ygnwvwv5", "code": "YFWw5A60", "country": "Wx8tAaDL", "dateOfBirth": "Dc5B4riM", "displayName": "agbQNFIC", "emailAddress": "AYfpohyu", "password": "s4eXjRZF", "reachMinimumAge": true, "uniqueDisplayName": "5hX9yP16"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicCreateUserV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 259 'PublicCreateUserV3' test.out

#- 260 CheckUserAvailability
$CLI_EXE \
    --sn iam \
    --op CheckUserAvailability \
    --namespace $AB_NAMESPACE \
    --field 'BOtkiyox' \
    --query 'QNsGp7qs' \
    > test.out 2>&1
eval_tap $? 260 'CheckUserAvailability' test.out

#- 261 PublicBulkGetUsers
# body param: body
echo '{"userIds": ["BSLzlyv2", "gu7woYou", "ixgiRZYY"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicBulkGetUsers \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 261 'PublicBulkGetUsers' test.out

#- 262 PublicSendRegistrationCode
# body param: body
echo '{"emailAddress": "34iZqTDJ", "languageTag": "QoRDFz2c"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicSendRegistrationCode \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 262 'PublicSendRegistrationCode' test.out

#- 263 PublicVerifyRegistrationCode
# body param: body
echo '{"code": "HU2wWLX2", "emailAddress": "i0PohH5v"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicVerifyRegistrationCode \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 263 'PublicVerifyRegistrationCode' test.out

#- 264 PublicForgotPasswordV3
# body param: body
echo '{"emailAddress": "e8j4GMPy", "languageTag": "ZFmIsGdu"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicForgotPasswordV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 264 'PublicForgotPasswordV3' test.out

#- 265 GetAdminInvitationV3
$CLI_EXE \
    --sn iam \
    --op GetAdminInvitationV3 \
    --invitationId '5qFXhbPx' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 265 'GetAdminInvitationV3' test.out

#- 266 CreateUserFromInvitationV3
# body param: body
echo '{"PasswordMD5Sum": "kDJnodzQ", "acceptedPolicies": [{"isAccepted": true, "localizedPolicyVersionId": "Pl212b4m", "policyId": "MRg0n2Xl", "policyVersionId": "9ZdOvejA"}, {"isAccepted": false, "localizedPolicyVersionId": "EbLXh4FK", "policyId": "ZCZrxyQW", "policyVersionId": "AIaZkONM"}, {"isAccepted": false, "localizedPolicyVersionId": "TaBgyPVJ", "policyId": "I27jDTJj", "policyVersionId": "7p3id48n"}], "authType": "aTTEBqWL", "code": "YwVk9PFH", "country": "Jo4YzgBH", "dateOfBirth": "tWuIoUyP", "displayName": "pm1Qxuh7", "emailAddress": "vY0u6QNa", "password": "47MUy67o", "reachMinimumAge": true, "uniqueDisplayName": "VV4RBk1L"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op CreateUserFromInvitationV3 \
    --invitationId 'MJ9MidXQ' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 266 'CreateUserFromInvitationV3' test.out

#- 267 UpdateUserV3
# body param: body
echo '{"avatarUrl": "FGiqBJLO", "country": "nmNIV6eN", "dateOfBirth": "UtQ4AQN9", "displayName": "wIoXtNfY", "languageTag": "QKeBsxNJ", "uniqueDisplayName": "slLDCrcv", "userName": "Tqx6mgfm"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op UpdateUserV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 267 'UpdateUserV3' test.out

#- 268 PublicPartialUpdateUserV3
# body param: body
echo '{"avatarUrl": "CZK8YRG7", "country": "SnkeOZhh", "dateOfBirth": "dy2Hersm", "displayName": "6QVMOH2S", "languageTag": "UIsrjCIp", "uniqueDisplayName": "j7Pmoibw", "userName": "1jwqt6m7"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicPartialUpdateUserV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 268 'PublicPartialUpdateUserV3' test.out

#- 269 PublicSendVerificationCodeV3
# body param: body
echo '{"context": "JZRTvTw3", "emailAddress": "IXGdYm4g", "languageTag": "u5dBDFTk"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicSendVerificationCodeV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 269 'PublicSendVerificationCodeV3' test.out

#- 270 PublicUserVerificationV3
# body param: body
echo '{"code": "zwO1DMIK", "contactType": "7ouyAhtf", "languageTag": "uxLeFbYm", "validateOnly": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUserVerificationV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 270 'PublicUserVerificationV3' test.out

#- 271 PublicUpgradeHeadlessAccountV3
# body param: body
echo '{"code": "M1hlk8iF", "country": "yciocsxs", "dateOfBirth": "3WIMlAHv", "displayName": "9TPOOJxU", "emailAddress": "0g70drWk", "password": "Fdkt5TAr", "uniqueDisplayName": "CkWSavJM", "validateOnly": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpgradeHeadlessAccountV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 271 'PublicUpgradeHeadlessAccountV3' test.out

#- 272 PublicVerifyHeadlessAccountV3
# body param: body
echo '{"emailAddress": "7tkSfP0t", "password": "T0XiUE4I"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicVerifyHeadlessAccountV3 \
    --namespace $AB_NAMESPACE \
    --needVerificationCode 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 272 'PublicVerifyHeadlessAccountV3' test.out

#- 273 PublicUpdatePasswordV3
# body param: body
echo '{"languageTag": "KArg9jAY", "newPassword": "nYps1zj7", "oldPassword": "IIvHTdIY"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpdatePasswordV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 273 'PublicUpdatePasswordV3' test.out

#- 274 PublicCreateJusticeUser
$CLI_EXE \
    --sn iam \
    --op PublicCreateJusticeUser \
    --namespace $AB_NAMESPACE \
    --targetNamespace 'hxf19Wu9' \
    > test.out 2>&1
eval_tap $? 274 'PublicCreateJusticeUser' test.out

#- 275 PublicPlatformLinkV3
$CLI_EXE \
    --sn iam \
    --op PublicPlatformLinkV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'KtyvrOVQ' \
    --redirectUri 'YIv51s7g' \
    --ticket 'rRnLaxKr' \
    > test.out 2>&1
eval_tap $? 275 'PublicPlatformLinkV3' test.out

#- 276 PublicPlatformUnlinkV3
# body param: body
echo '{"platformNamespace": "1gPnAEnI"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicPlatformUnlinkV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'xo8cuH5B' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 276 'PublicPlatformUnlinkV3' test.out

#- 277 PublicPlatformUnlinkAllV3
$CLI_EXE \
    --sn iam \
    --op PublicPlatformUnlinkAllV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'g62mtBPp' \
    > test.out 2>&1
eval_tap $? 277 'PublicPlatformUnlinkAllV3' test.out

#- 278 PublicForcePlatformLinkV3
$CLI_EXE \
    --sn iam \
    --op PublicForcePlatformLinkV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'iHDmAHBf' \
    --ticket 'f2JdYM9p' \
    > test.out 2>&1
eval_tap $? 278 'PublicForcePlatformLinkV3' test.out

#- 279 PublicWebLinkPlatform
$CLI_EXE \
    --sn iam \
    --op PublicWebLinkPlatform \
    --namespace $AB_NAMESPACE \
    --platformId 'xr3eTgeq' \
    --clientId '2PvbmYBW' \
    --redirectUri 'yPwwgAk7' \
    > test.out 2>&1
eval_tap $? 279 'PublicWebLinkPlatform' test.out

#- 280 PublicWebLinkPlatformEstablish
$CLI_EXE \
    --sn iam \
    --op PublicWebLinkPlatformEstablish \
    --namespace $AB_NAMESPACE \
    --platformId 'aNvrVKhN' \
    --code 'h5Fwkx4h' \
    --state '7QCR5vtm' \
    > test.out 2>&1
eval_tap $? 280 'PublicWebLinkPlatformEstablish' test.out

#- 281 PublicProcessWebLinkPlatformV3
$CLI_EXE \
    --sn iam \
    --op PublicProcessWebLinkPlatformV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'DuBmu9WJ' \
    --code 'VjpqaY6Z' \
    --state 'pBELsPnp' \
    > test.out 2>&1
eval_tap $? 281 'PublicProcessWebLinkPlatformV3' test.out

#- 282 PublicGetUsersPlatformInfosV3
# body param: body
echo '{"platformId": "qGuxGj2b", "userIds": ["a1rFCjOz", "IMTfNI8I", "y3NNm4c5"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicGetUsersPlatformInfosV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 282 'PublicGetUsersPlatformInfosV3' test.out

#- 283 ResetPasswordV3
# body param: body
echo '{"code": "rjDIptWd", "emailAddress": "rdTAMHB0", "newPassword": "TelAvcfk"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op ResetPasswordV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 283 'ResetPasswordV3' test.out

#- 284 PublicGetUserByUserIdV3
eval_tap 0 284 'PublicGetUserByUserIdV3 # SKIP deprecated' test.out

#- 285 PublicGetUserBanHistoryV3
$CLI_EXE \
    --sn iam \
    --op PublicGetUserBanHistoryV3 \
    --namespace $AB_NAMESPACE \
    --userId 'tNa18vdP' \
    --activeOnly 'true' \
    --after '3WSBPj88' \
    --before 'wZNre1wJ' \
    --limit '17' \
    > test.out 2>&1
eval_tap $? 285 'PublicGetUserBanHistoryV3' test.out

#- 286 PublicListUserAllPlatformAccountsDistinctV3
$CLI_EXE \
    --sn iam \
    --op PublicListUserAllPlatformAccountsDistinctV3 \
    --namespace $AB_NAMESPACE \
    --userId 'raInwnc1' \
    > test.out 2>&1
eval_tap $? 286 'PublicListUserAllPlatformAccountsDistinctV3' test.out

#- 287 PublicGetUserInformationV3
$CLI_EXE \
    --sn iam \
    --op PublicGetUserInformationV3 \
    --namespace $AB_NAMESPACE \
    --userId 'GcPBH2v2' \
    > test.out 2>&1
eval_tap $? 287 'PublicGetUserInformationV3' test.out

#- 288 PublicGetUserLoginHistoriesV3
$CLI_EXE \
    --sn iam \
    --op PublicGetUserLoginHistoriesV3 \
    --namespace $AB_NAMESPACE \
    --userId 'TJ3y7vIS' \
    --after '0.48358702791699426' \
    --before '0.13462667711884058' \
    --limit '37' \
    > test.out 2>&1
eval_tap $? 288 'PublicGetUserLoginHistoriesV3' test.out

#- 289 PublicGetUserPlatformAccountsV3
$CLI_EXE \
    --sn iam \
    --op PublicGetUserPlatformAccountsV3 \
    --namespace $AB_NAMESPACE \
    --userId 'eOkaQP3q' \
    --after 'nflir8Jf' \
    --before '3nEQsg5h' \
    --limit '78' \
    --platformId 'ogudHIne' \
    > test.out 2>&1
eval_tap $? 289 'PublicGetUserPlatformAccountsV3' test.out

#- 290 PublicListJusticePlatformAccountsV3
$CLI_EXE \
    --sn iam \
    --op PublicListJusticePlatformAccountsV3 \
    --namespace $AB_NAMESPACE \
    --userId 'QZCiDraM' \
    > test.out 2>&1
eval_tap $? 290 'PublicListJusticePlatformAccountsV3' test.out

#- 291 PublicLinkPlatformAccount
# body param: body
echo '{"platformId": "DBFS1Xj4", "platformUserId": "y11Zml9O"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicLinkPlatformAccount \
    --namespace $AB_NAMESPACE \
    --userId 'uKVdZUfC' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 291 'PublicLinkPlatformAccount' test.out

#- 292 PublicForceLinkPlatformWithProgression
# body param: body
echo '{"chosenNamespaces": ["SZM9u0Ph", "fjfr13dD", "rjFG59xs"], "requestId": "CGwWgS0e"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicForceLinkPlatformWithProgression \
    --namespace $AB_NAMESPACE \
    --userId 'oLVn9zSq' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 292 'PublicForceLinkPlatformWithProgression' test.out

#- 293 PublicGetPublisherUserV3
$CLI_EXE \
    --sn iam \
    --op PublicGetPublisherUserV3 \
    --namespace $AB_NAMESPACE \
    --userId '93DCSu1l' \
    > test.out 2>&1
eval_tap $? 293 'PublicGetPublisherUserV3' test.out

#- 294 PublicValidateUserByUserIDAndPasswordV3
$CLI_EXE \
    --sn iam \
    --op PublicValidateUserByUserIDAndPasswordV3 \
    --namespace $AB_NAMESPACE \
    --userId 'MHaJqyOl' \
    --password '2dosfDex' \
    > test.out 2>&1
eval_tap $? 294 'PublicValidateUserByUserIDAndPasswordV3' test.out

#- 295 PublicGetRolesV3
$CLI_EXE \
    --sn iam \
    --op PublicGetRolesV3 \
    --after 'zlvOzyF0' \
    --before 'bH2BFUEO' \
    --isWildcard 'true' \
    --limit '44' \
    > test.out 2>&1
eval_tap $? 295 'PublicGetRolesV3' test.out

#- 296 PublicGetRoleV3
$CLI_EXE \
    --sn iam \
    --op PublicGetRoleV3 \
    --roleId 'YKOUDnNR' \
    > test.out 2>&1
eval_tap $? 296 'PublicGetRoleV3' test.out

#- 297 PublicGetMyUserV3
$CLI_EXE \
    --sn iam \
    --op PublicGetMyUserV3 \
    --includeAllPlatforms 'true' \
    > test.out 2>&1
eval_tap $? 297 'PublicGetMyUserV3' test.out

#- 298 PublicGetLinkHeadlessAccountToMyAccountConflictV3
$CLI_EXE \
    --sn iam \
    --op PublicGetLinkHeadlessAccountToMyAccountConflictV3 \
    --oneTimeLinkCode 'AsatbS68' \
    > test.out 2>&1
eval_tap $? 298 'PublicGetLinkHeadlessAccountToMyAccountConflictV3' test.out

#- 299 LinkHeadlessAccountToMyAccountV3
# body param: body
echo '{"chosenNamespaces": ["Y5RfsLfp", "eq3eLLZL", "i3ssE4YM"], "oneTimeLinkCode": "Hkj3pLMQ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op LinkHeadlessAccountToMyAccountV3 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 299 'LinkHeadlessAccountToMyAccountV3' test.out

#- 300 PublicSendVerificationLinkV3
# body param: body
echo '{"languageTag": "9rOTbDIJ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicSendVerificationLinkV3 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 300 'PublicSendVerificationLinkV3' test.out

#- 301 PublicVerifyUserByLinkV3
$CLI_EXE \
    --sn iam \
    --op PublicVerifyUserByLinkV3 \
    --code 'MqNQG4An' \
    > test.out 2>&1
eval_tap $? 301 'PublicVerifyUserByLinkV3' test.out

#- 302 PlatformAuthenticateSAMLV3Handler
$CLI_EXE \
    --sn iam \
    --op PlatformAuthenticateSAMLV3Handler \
    --platformId 'pLhECRCl' \
    --code 'uQHwBuf8' \
    --error '6qgCZnAW' \
    --state 'R6lxgD0o' \
    > test.out 2>&1
eval_tap $? 302 'PlatformAuthenticateSAMLV3Handler' test.out

#- 303 LoginSSOClient
$CLI_EXE \
    --sn iam \
    --op LoginSSOClient \
    --platformId 'ZgbQzBWk' \
    --payload 'VsXFMNeW' \
    > test.out 2>&1
eval_tap $? 303 'LoginSSOClient' test.out

#- 304 LogoutSSOClient
$CLI_EXE \
    --sn iam \
    --op LogoutSSOClient \
    --platformId 'hNvnnfQo' \
    > test.out 2>&1
eval_tap $? 304 'LogoutSSOClient' test.out

#- 305 RequestTargetTokenResponseV3
$CLI_EXE \
    --sn iam \
    --op RequestTargetTokenResponseV3 \
    --additionalData 'yVGAthaV' \
    --code 'QW3cb9Bi' \
    > test.out 2>&1
eval_tap $? 305 'RequestTargetTokenResponseV3' test.out

#- 306 AdminListInvitationHistoriesV4
$CLI_EXE \
    --sn iam \
    --op AdminListInvitationHistoriesV4 \
    --limit '23' \
    --namespace_ 'gCXJFfTp' \
    --offset '35' \
    > test.out 2>&1
eval_tap $? 306 'AdminListInvitationHistoriesV4' test.out

#- 307 AdminGetDevicesByUserV4
$CLI_EXE \
    --sn iam \
    --op AdminGetDevicesByUserV4 \
    --namespace $AB_NAMESPACE \
    --userId 'WJv1gZs7' \
    > test.out 2>&1
eval_tap $? 307 'AdminGetDevicesByUserV4' test.out

#- 308 AdminGetBannedDevicesV4
$CLI_EXE \
    --sn iam \
    --op AdminGetBannedDevicesV4 \
    --namespace $AB_NAMESPACE \
    --deviceType 'hL7WNnPk' \
    --endDate 'b6sRl6GM' \
    --limit '98' \
    --offset '11' \
    --startDate 'idWNapHW' \
    > test.out 2>&1
eval_tap $? 308 'AdminGetBannedDevicesV4' test.out

#- 309 AdminGetUserDeviceBansV4
$CLI_EXE \
    --sn iam \
    --op AdminGetUserDeviceBansV4 \
    --namespace $AB_NAMESPACE \
    --userId 'p69vz1l9' \
    > test.out 2>&1
eval_tap $? 309 'AdminGetUserDeviceBansV4' test.out

#- 310 AdminBanDeviceV4
# body param: body
echo '{"comment": "WXUyzsTJ", "deviceId": "I3faRfLd", "deviceType": "G0Oo9axC", "enabled": false, "endDate": "QzYIk4FQ", "ext": {"V8aBnPuK": {}, "0JRLT47d": {}, "EitWJA1H": {}}, "reason": "vf8FZd1N"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBanDeviceV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 310 'AdminBanDeviceV4' test.out

#- 311 AdminGetDeviceBanV4
$CLI_EXE \
    --sn iam \
    --op AdminGetDeviceBanV4 \
    --banId 'QeMH22EA' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 311 'AdminGetDeviceBanV4' test.out

#- 312 AdminUpdateDeviceBanV4
# body param: body
echo '{"enabled": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateDeviceBanV4 \
    --banId 'qoDlSrIx' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 312 'AdminUpdateDeviceBanV4' test.out

#- 313 AdminGenerateReportV4
$CLI_EXE \
    --sn iam \
    --op AdminGenerateReportV4 \
    --namespace $AB_NAMESPACE \
    --endDate 'Y2keM68P' \
    --startDate 'A1nCZ7fX' \
    --deviceType 'EOaGQsb6' \
    > test.out 2>&1
eval_tap $? 313 'AdminGenerateReportV4' test.out

#- 314 AdminGetDeviceTypesV4
$CLI_EXE \
    --sn iam \
    --op AdminGetDeviceTypesV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 314 'AdminGetDeviceTypesV4' test.out

#- 315 AdminGetDeviceBansV4
$CLI_EXE \
    --sn iam \
    --op AdminGetDeviceBansV4 \
    --deviceId 'oPeZyDDn' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 315 'AdminGetDeviceBansV4' test.out

#- 316 AdminDecryptDeviceV4
$CLI_EXE \
    --sn iam \
    --op AdminDecryptDeviceV4 \
    --deviceId '0mq2aqDT' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 316 'AdminDecryptDeviceV4' test.out

#- 317 AdminUnbanDeviceV4
$CLI_EXE \
    --sn iam \
    --op AdminUnbanDeviceV4 \
    --deviceId 'bc4lIq79' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 317 'AdminUnbanDeviceV4' test.out

#- 318 AdminGetUsersByDeviceV4
$CLI_EXE \
    --sn iam \
    --op AdminGetUsersByDeviceV4 \
    --deviceId 'YIbpdQsJ' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 318 'AdminGetUsersByDeviceV4' test.out

#- 319 AdminGetNamespaceInvitationHistoryV4
$CLI_EXE \
    --sn iam \
    --op AdminGetNamespaceInvitationHistoryV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 319 'AdminGetNamespaceInvitationHistoryV4' test.out

#- 320 AdminGetNamespaceUserInvitationHistoryV4
$CLI_EXE \
    --sn iam \
    --op AdminGetNamespaceUserInvitationHistoryV4 \
    --namespace $AB_NAMESPACE \
    --limit '3' \
    --offset '75' \
    > test.out 2>&1
eval_tap $? 320 'AdminGetNamespaceUserInvitationHistoryV4' test.out

#- 321 AdminCreateTestUsersV4
# body param: body
echo '{"count": 30}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminCreateTestUsersV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 321 'AdminCreateTestUsersV4' test.out

#- 322 AdminCreateUserV4
# body param: body
echo '{"acceptedPolicies": [{"isAccepted": true, "localizedPolicyVersionId": "1Odglwz1", "policyId": "Y46QyCok", "policyVersionId": "Qzz8XUH8"}, {"isAccepted": false, "localizedPolicyVersionId": "w5jKZxbG", "policyId": "J793Lzqi", "policyVersionId": "sBjJi3FH"}, {"isAccepted": false, "localizedPolicyVersionId": "tOCRVj4r", "policyId": "45ScXDHE", "policyVersionId": "DtdpNOhQ"}], "authType": "EMAILPASSWD", "code": "hTxgLx32", "country": "kNLTq0dy", "dateOfBirth": "obb75Jsw", "displayName": "EBoNWpfs", "emailAddress": "QqGwkQEk", "password": "RjpIhsGP", "passwordMD5Sum": "DcVtTcwk", "reachMinimumAge": false, "uniqueDisplayName": "BHL2QXz5", "username": "PzItEFnq"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminCreateUserV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 322 'AdminCreateUserV4' test.out

#- 323 AdminBulkUpdateUserAccountTypeV4
# body param: body
echo '{"testAccount": true, "userIds": ["g10AAKbU", "KAhZc0ap", "9Rs6zPd2"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBulkUpdateUserAccountTypeV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 323 'AdminBulkUpdateUserAccountTypeV4' test.out

#- 324 AdminBulkCheckValidUserIDV4
# body param: body
echo '{"userIds": ["HireBSo4", "roNVsKCI", "3C8oWgpE"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBulkCheckValidUserIDV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 324 'AdminBulkCheckValidUserIDV4' test.out

#- 325 AdminUpdateUserV4
# body param: body
echo '{"avatarUrl": "HAefdhqO", "country": "b4gL6E1o", "dateOfBirth": "wnnCLuzg", "displayName": "zOLWJkjC", "languageTag": "BRRojBpd", "skipLoginQueue": false, "uniqueDisplayName": "37n6n8x1", "userName": "WisVJZBm"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserV4 \
    --namespace $AB_NAMESPACE \
    --userId 'bnyK3MjX' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 325 'AdminUpdateUserV4' test.out

#- 326 AdminUpdateUserEmailAddressV4
# body param: body
echo '{"code": "s7jn9oEq", "emailAddress": "jqUPt2Uz"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserEmailAddressV4 \
    --namespace $AB_NAMESPACE \
    --userId '436yyd7d' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 326 'AdminUpdateUserEmailAddressV4' test.out

#- 327 AdminDisableUserMFAV4
$CLI_EXE \
    --sn iam \
    --op AdminDisableUserMFAV4 \
    --namespace $AB_NAMESPACE \
    --userId 'KMcDc19I' \
    > test.out 2>&1
eval_tap $? 327 'AdminDisableUserMFAV4' test.out

#- 328 AdminListUserRolesV4
$CLI_EXE \
    --sn iam \
    --op AdminListUserRolesV4 \
    --namespace $AB_NAMESPACE \
    --userId 'Pk6JAiov' \
    > test.out 2>&1
eval_tap $? 328 'AdminListUserRolesV4' test.out

#- 329 AdminUpdateUserRoleV4
# body param: body
echo '{"assignedNamespaces": ["1yQ1d4mW", "UaejF3oO", "Mk8EuyNY"], "roleId": "jblh43Ru"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserRoleV4 \
    --namespace $AB_NAMESPACE \
    --userId 'UkaTVlx1' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 329 'AdminUpdateUserRoleV4' test.out

#- 330 AdminAddUserRoleV4
# body param: body
echo '{"assignedNamespaces": ["Uz5oaqhv", "JjSovnVY", "ri65VEYH"], "roleId": "g7w2FUb3"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddUserRoleV4 \
    --namespace $AB_NAMESPACE \
    --userId 'Drn19hH1' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 330 'AdminAddUserRoleV4' test.out

#- 331 AdminRemoveUserRoleV4
# body param: body
echo '{"assignedNamespaces": ["IGITOgU6", "HKsEO0bJ", "9x5pKLJ8"], "roleId": "6zYvU7Dy"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminRemoveUserRoleV4 \
    --namespace $AB_NAMESPACE \
    --userId 'WHB4dOYQ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 331 'AdminRemoveUserRoleV4' test.out

#- 332 AdminGetRolesV4
$CLI_EXE \
    --sn iam \
    --op AdminGetRolesV4 \
    --adminRole 'false' \
    --isWildcard 'true' \
    --limit '45' \
    --offset '77' \
    > test.out 2>&1
eval_tap $? 332 'AdminGetRolesV4' test.out

#- 333 AdminCreateRoleV4
# body param: body
echo '{"adminRole": true, "deletable": false, "isWildcard": true, "roleName": "xL6YxAnL"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminCreateRoleV4 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 333 'AdminCreateRoleV4' test.out

#- 334 AdminGetRoleV4
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleV4 \
    --roleId 'ubkiMKBi' \
    > test.out 2>&1
eval_tap $? 334 'AdminGetRoleV4' test.out

#- 335 AdminDeleteRoleV4
$CLI_EXE \
    --sn iam \
    --op AdminDeleteRoleV4 \
    --roleId 'UxoBgUzz' \
    > test.out 2>&1
eval_tap $? 335 'AdminDeleteRoleV4' test.out

#- 336 AdminUpdateRoleV4
# body param: body
echo '{"adminRole": true, "deletable": true, "isWildcard": true, "roleName": "0XreKlky"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateRoleV4 \
    --roleId 'ZeQkUe52' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 336 'AdminUpdateRoleV4' test.out

#- 337 AdminUpdateRolePermissionsV4
# body param: body
echo '{"permissions": [{"action": 14, "resource": "awyYTqh3", "schedAction": 18, "schedCron": "qFvJWgN8", "schedRange": ["JpfJP1wl", "KwMUdFWt", "JrQEE9Wd"]}, {"action": 76, "resource": "JmLlmKqk", "schedAction": 53, "schedCron": "Crl4Fk2c", "schedRange": ["2A25GTp3", "iYkDGRwg", "k5ONjiNZ"]}, {"action": 24, "resource": "hQOWiU8f", "schedAction": 63, "schedCron": "l2HqfAAY", "schedRange": ["8MfoZspY", "uP1DMavE", "iBax1rs5"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateRolePermissionsV4 \
    --roleId 'TP0T0AWe' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 337 'AdminUpdateRolePermissionsV4' test.out

#- 338 AdminAddRolePermissionsV4
# body param: body
echo '{"permissions": [{"action": 84, "resource": "NbjXuGUp", "schedAction": 47, "schedCron": "oZ1PyaBo", "schedRange": ["DjIoyAjq", "3Pc2of7l", "01OZ5S6y"]}, {"action": 35, "resource": "SsFVlQIa", "schedAction": 74, "schedCron": "faENslGm", "schedRange": ["iO3j1bCk", "Cus0D5Lu", "vu1lkriX"]}, {"action": 97, "resource": "Yz7jahe1", "schedAction": 14, "schedCron": "ET82j6Xl", "schedRange": ["3F9bTyZL", "vcggtaIm", "r0SQt2DT"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddRolePermissionsV4 \
    --roleId 'fN8dojTs' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 338 'AdminAddRolePermissionsV4' test.out

#- 339 AdminDeleteRolePermissionsV4
# body param: body
echo '["zxQMHp8v", "5vSyUwm2", "CFCkp2Xv"]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDeleteRolePermissionsV4 \
    --roleId 't34SlGku' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 339 'AdminDeleteRolePermissionsV4' test.out

#- 340 AdminListAssignedUsersV4
$CLI_EXE \
    --sn iam \
    --op AdminListAssignedUsersV4 \
    --roleId 'Jy1M6587' \
    --after '7O94Crtr' \
    --before 'j0IIplY4' \
    --limit '24' \
    > test.out 2>&1
eval_tap $? 340 'AdminListAssignedUsersV4' test.out

#- 341 AdminAssignUserToRoleV4
# body param: body
echo '{"assignedNamespaces": ["aXvqow6J", "IRe5mpRq", "L8eBbZJT"], "namespace": "zGopFFnK", "userId": "f1TSy8rs"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAssignUserToRoleV4 \
    --roleId 'TuPiglPG' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 341 'AdminAssignUserToRoleV4' test.out

#- 342 AdminRevokeUserFromRoleV4
# body param: body
echo '{"namespace": "nce3bwbQ", "userId": "5tcpsJGB"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminRevokeUserFromRoleV4 \
    --roleId 'grrf2RAx' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 342 'AdminRevokeUserFromRoleV4' test.out

#- 343 AdminInviteUserNewV4
# body param: body
echo '{"assignedNamespaces": ["GZDhIslt", "zoHIjnmR", "qQVNjbL6"], "emailAddresses": ["J6753XdV", "sqf4Kwmv", "lJoOvuWx"], "isAdmin": true, "isNewStudio": false, "namespace": "MdaBMWCS", "roleId": "FkjkddvT"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminInviteUserNewV4 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 343 'AdminInviteUserNewV4' test.out

#- 344 AdminUpdateMyUserV4
# body param: body
echo '{"avatarUrl": "8F4CP4BV", "country": "4yD3WpIi", "dateOfBirth": "vJ1xDR9c", "displayName": "RhAz3Vxt", "languageTag": "sfj9PzBT", "skipLoginQueue": false, "uniqueDisplayName": "8Q7XdaGR", "userName": "qh8vxmGf"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateMyUserV4 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 344 'AdminUpdateMyUserV4' test.out

#- 345 AdminDisableMyAuthenticatorV4
$CLI_EXE \
    --sn iam \
    --op AdminDisableMyAuthenticatorV4 \
    > test.out 2>&1
eval_tap $? 345 'AdminDisableMyAuthenticatorV4' test.out

#- 346 AdminEnableMyAuthenticatorV4
$CLI_EXE \
    --sn iam \
    --op AdminEnableMyAuthenticatorV4 \
    --code '0qSZm1UN' \
    > test.out 2>&1
eval_tap $? 346 'AdminEnableMyAuthenticatorV4' test.out

#- 347 AdminGenerateMyAuthenticatorKeyV4
$CLI_EXE \
    --sn iam \
    --op AdminGenerateMyAuthenticatorKeyV4 \
    > test.out 2>&1
eval_tap $? 347 'AdminGenerateMyAuthenticatorKeyV4' test.out

#- 348 AdminGetMyBackupCodesV4
eval_tap 0 348 'AdminGetMyBackupCodesV4 # SKIP deprecated' test.out

#- 349 AdminGenerateMyBackupCodesV4
eval_tap 0 349 'AdminGenerateMyBackupCodesV4 # SKIP deprecated' test.out

#- 350 AdminDisableMyBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op AdminDisableMyBackupCodesV4 \
    > test.out 2>&1
eval_tap $? 350 'AdminDisableMyBackupCodesV4' test.out

#- 351 AdminDownloadMyBackupCodesV4
eval_tap 0 351 'AdminDownloadMyBackupCodesV4 # SKIP deprecated' test.out

#- 352 AdminEnableMyBackupCodesV4
eval_tap 0 352 'AdminEnableMyBackupCodesV4 # SKIP deprecated' test.out

#- 353 AdminGetBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op AdminGetBackupCodesV4 \
    > test.out 2>&1
eval_tap $? 353 'AdminGetBackupCodesV4' test.out

#- 354 AdminGenerateBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op AdminGenerateBackupCodesV4 \
    > test.out 2>&1
eval_tap $? 354 'AdminGenerateBackupCodesV4' test.out

#- 355 AdminEnableBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op AdminEnableBackupCodesV4 \
    > test.out 2>&1
eval_tap $? 355 'AdminEnableBackupCodesV4' test.out

#- 356 AdminSendMyMFAEmailCodeV4
$CLI_EXE \
    --sn iam \
    --op AdminSendMyMFAEmailCodeV4 \
    > test.out 2>&1
eval_tap $? 356 'AdminSendMyMFAEmailCodeV4' test.out

#- 357 AdminDisableMyEmailV4
$CLI_EXE \
    --sn iam \
    --op AdminDisableMyEmailV4 \
    > test.out 2>&1
eval_tap $? 357 'AdminDisableMyEmailV4' test.out

#- 358 AdminEnableMyEmailV4
$CLI_EXE \
    --sn iam \
    --op AdminEnableMyEmailV4 \
    --code 'QgkD8bIR' \
    > test.out 2>&1
eval_tap $? 358 'AdminEnableMyEmailV4' test.out

#- 359 AdminGetMyEnabledFactorsV4
$CLI_EXE \
    --sn iam \
    --op AdminGetMyEnabledFactorsV4 \
    > test.out 2>&1
eval_tap $? 359 'AdminGetMyEnabledFactorsV4' test.out

#- 360 AdminMakeFactorMyDefaultV4
$CLI_EXE \
    --sn iam \
    --op AdminMakeFactorMyDefaultV4 \
    --factor 'upZFDl7b' \
    > test.out 2>&1
eval_tap $? 360 'AdminMakeFactorMyDefaultV4' test.out

#- 361 AdminInviteUserV4
eval_tap 0 361 'AdminInviteUserV4 # SKIP deprecated' test.out

#- 362 AuthenticationWithPlatformLinkV4
$CLI_EXE \
    --sn iam \
    --op AuthenticationWithPlatformLinkV4 \
    --extend_exp 'true' \
    --client_id '3B2NM2iz' \
    --linkingToken 'joc9x5fG' \
    --password '3qlenJmJ' \
    --username '7KWN4c2b' \
    > test.out 2>&1
eval_tap $? 362 'AuthenticationWithPlatformLinkV4' test.out

#- 363 GenerateTokenByNewHeadlessAccountV4
$CLI_EXE \
    --sn iam \
    --op GenerateTokenByNewHeadlessAccountV4 \
    --additionalData 'PYekRzeu' \
    --extend_exp 'false' \
    --linkingToken 'QmsEHolA' \
    > test.out 2>&1
eval_tap $? 363 'GenerateTokenByNewHeadlessAccountV4' test.out

#- 364 Verify2faCodeV4
$CLI_EXE \
    --sn iam \
    --op Verify2faCodeV4 \
    --code 'AhObyqO6' \
    --factor 'IljMaZv5' \
    --mfaToken '5Y547xAQ' \
    --rememberDevice 'true' \
    > test.out 2>&1
eval_tap $? 364 'Verify2faCodeV4' test.out

#- 365 PlatformTokenGrantV4
$CLI_EXE \
    --sn iam \
    --op PlatformTokenGrantV4 \
    --platformId 'rGeI6Yst' \
    --codeChallenge 'DuMkLjdr' \
    --codeChallengeMethod 'plain' \
    --additionalData 'mPrFFY1p' \
    --client_id 'PreqlPh1' \
    --createHeadless 'false' \
    --device_id '16AMit2W' \
    --macAddress 'wXk63f7C' \
    --platform_token 'dF7htMDs' \
    --skipSetCookie 'false' \
    > test.out 2>&1
eval_tap $? 365 'PlatformTokenGrantV4' test.out

#- 366 SimultaneousLoginV4
$CLI_EXE \
    --sn iam \
    --op SimultaneousLoginV4 \
    --codeChallenge 'AUq4mT5c' \
    --codeChallengeMethod 'plain' \
    --simultaneousPlatform '8QAU7sQ8' \
    --simultaneousTicket 'wnB6gqUp' \
    --nativePlatform 'steam' \
    --nativePlatformTicket 'zJUy3MuB' \
    > test.out 2>&1
eval_tap $? 366 'SimultaneousLoginV4' test.out

#- 367 TokenGrantV4
$CLI_EXE \
    --sn iam \
    --op TokenGrantV4 \
    --codeChallenge 'i6h1eald' \
    --codeChallengeMethod 'plain' \
    --additionalData '5c3oWR8k' \
    --client_id '49K1fiN7' \
    --code 'k3MUaTZk' \
    --code_verifier 'bunXF5Dt' \
    --extendNamespace 'slIu4Sqa' \
    --extend_exp 'false' \
    --login_queue_ticket 'Ko8RNC6a' \
    --password 'paIeSAFV' \
    --redirect_uri 'u9Z2o2dB' \
    --refresh_token 'piAylqMJ' \
    --username '4oykbshe' \
    --grant_type 'authorization_code' \
    > test.out 2>&1
eval_tap $? 367 'TokenGrantV4' test.out

#- 368 RequestTargetTokenResponseV4
$CLI_EXE \
    --sn iam \
    --op RequestTargetTokenResponseV4 \
    --additionalData 'KcFvPEAQ' \
    --code 'nokiGl9t' \
    > test.out 2>&1
eval_tap $? 368 'RequestTargetTokenResponseV4' test.out

#- 369 PublicCreateTestUserV4
# body param: body
echo '{"acceptedPolicies": [{"isAccepted": false, "localizedPolicyVersionId": "XNqJLwjd", "policyId": "ZG2m6L5W", "policyVersionId": "xocdw4Np"}, {"isAccepted": true, "localizedPolicyVersionId": "93vu308u", "policyId": "UUUWNKyh", "policyVersionId": "fATEdoYE"}, {"isAccepted": true, "localizedPolicyVersionId": "PYjOESv6", "policyId": "Suk5843C", "policyVersionId": "6vMWYQIH"}], "authType": "EMAILPASSWD", "country": "D5KymI33", "dateOfBirth": "Aul0nuye", "displayName": "IxeDmAeG", "emailAddress": "H8v5XJJU", "password": "NxejFD0T", "passwordMD5Sum": "yoF2PRun", "uniqueDisplayName": "mL2C7kWc", "username": "5YxInPFJ", "verified": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicCreateTestUserV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 369 'PublicCreateTestUserV4' test.out

#- 370 PublicCreateUserV4
# body param: body
echo '{"acceptedPolicies": [{"isAccepted": true, "localizedPolicyVersionId": "7uSzpeNh", "policyId": "XLeLVaD4", "policyVersionId": "rD5bNxEN"}, {"isAccepted": false, "localizedPolicyVersionId": "4gLJv4cr", "policyId": "4jDi7lOY", "policyVersionId": "L7IBAZ3z"}, {"isAccepted": false, "localizedPolicyVersionId": "x8PJIsB5", "policyId": "ddL7Wdfn", "policyVersionId": "Za7VHnaj"}], "authType": "EMAILPASSWD", "code": "I8N3xYaA", "country": "85O8KLUc", "dateOfBirth": "1fDqvsNF", "displayName": "PwShKcxM", "emailAddress": "I29qxDSQ", "password": "LvvPj0FR", "passwordMD5Sum": "CQnPeQZ6", "reachMinimumAge": true, "uniqueDisplayName": "liJ32RrF", "username": "rfONFG5W"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicCreateUserV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 370 'PublicCreateUserV4' test.out

#- 371 CreateUserFromInvitationV4
# body param: body
echo '{"acceptedPolicies": [{"isAccepted": true, "localizedPolicyVersionId": "GbnnNHgW", "policyId": "WGDHMniK", "policyVersionId": "bdTO7sqN"}, {"isAccepted": true, "localizedPolicyVersionId": "GAXUCXq4", "policyId": "iHlWbdfM", "policyVersionId": "JydxSz5N"}, {"isAccepted": false, "localizedPolicyVersionId": "FK9ugbqa", "policyId": "Jmgethxp", "policyVersionId": "ALxcNww3"}], "authType": "EMAILPASSWD", "code": "nvL1bZqT", "country": "yqSxNzQp", "dateOfBirth": "zuBPTj2L", "displayName": "GyqBDK2f", "emailAddress": "Upf8AECn", "password": "R4c15Z6v", "passwordMD5Sum": "bauyIcut", "reachMinimumAge": false, "uniqueDisplayName": "MtxA5XSD", "username": "XCluTGW0"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op CreateUserFromInvitationV4 \
    --invitationId 'Uy3GqecH' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 371 'CreateUserFromInvitationV4' test.out

#- 372 PublicUpdateUserV4
# body param: body
echo '{"avatarUrl": "b2VWPFlZ", "country": "BQSl4e10", "dateOfBirth": "SeOtGeKF", "displayName": "a3YaIWBs", "languageTag": "qFB7cEJt", "uniqueDisplayName": "w0yl5YBq", "userName": "jJsVDmXY"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpdateUserV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 372 'PublicUpdateUserV4' test.out

#- 373 PublicUpdateUserEmailAddressV4
# body param: body
echo '{"code": "TluXO1TZ", "emailAddress": "uRwBw1sh"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpdateUserEmailAddressV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 373 'PublicUpdateUserEmailAddressV4' test.out

#- 374 PublicUpgradeHeadlessAccountWithVerificationCodeV4
# body param: body
echo '{"code": "2qxI7mqj", "country": "FCvTLB0d", "dateOfBirth": "9V30ztFn", "displayName": "cMJ7X0PZ", "emailAddress": "EN0sfUL5", "password": "yosMyDod", "reachMinimumAge": false, "uniqueDisplayName": "x6xkEtae", "username": "9XNElDUR", "validateOnly": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpgradeHeadlessAccountWithVerificationCodeV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 374 'PublicUpgradeHeadlessAccountWithVerificationCodeV4' test.out

#- 375 PublicUpgradeHeadlessAccountV4
# body param: body
echo '{"emailAddress": "3YbltCOy", "password": "QrPrIINv", "username": "HB6nevbU"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpgradeHeadlessAccountV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 375 'PublicUpgradeHeadlessAccountV4' test.out

#- 376 PublicDisableMyAuthenticatorV4
$CLI_EXE \
    --sn iam \
    --op PublicDisableMyAuthenticatorV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 376 'PublicDisableMyAuthenticatorV4' test.out

#- 377 PublicEnableMyAuthenticatorV4
$CLI_EXE \
    --sn iam \
    --op PublicEnableMyAuthenticatorV4 \
    --namespace $AB_NAMESPACE \
    --code 'mc9SHJy4' \
    > test.out 2>&1
eval_tap $? 377 'PublicEnableMyAuthenticatorV4' test.out

#- 378 PublicGenerateMyAuthenticatorKeyV4
$CLI_EXE \
    --sn iam \
    --op PublicGenerateMyAuthenticatorKeyV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 378 'PublicGenerateMyAuthenticatorKeyV4' test.out

#- 379 PublicGetMyBackupCodesV4
eval_tap 0 379 'PublicGetMyBackupCodesV4 # SKIP deprecated' test.out

#- 380 PublicGenerateMyBackupCodesV4
eval_tap 0 380 'PublicGenerateMyBackupCodesV4 # SKIP deprecated' test.out

#- 381 PublicDisableMyBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op PublicDisableMyBackupCodesV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 381 'PublicDisableMyBackupCodesV4' test.out

#- 382 PublicDownloadMyBackupCodesV4
eval_tap 0 382 'PublicDownloadMyBackupCodesV4 # SKIP deprecated' test.out

#- 383 PublicEnableMyBackupCodesV4
eval_tap 0 383 'PublicEnableMyBackupCodesV4 # SKIP deprecated' test.out

#- 384 PublicGetBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op PublicGetBackupCodesV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 384 'PublicGetBackupCodesV4' test.out

#- 385 PublicGenerateBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op PublicGenerateBackupCodesV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 385 'PublicGenerateBackupCodesV4' test.out

#- 386 PublicEnableBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op PublicEnableBackupCodesV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 386 'PublicEnableBackupCodesV4' test.out

#- 387 PublicRemoveTrustedDeviceV4
$CLI_EXE \
    --sn iam \
    --op PublicRemoveTrustedDeviceV4 \
    --namespace $AB_NAMESPACE \
    --device_token 'nUODhtZL' \
    > test.out 2>&1
eval_tap $? 387 'PublicRemoveTrustedDeviceV4' test.out

#- 388 PublicSendMyMFAEmailCodeV4
$CLI_EXE \
    --sn iam \
    --op PublicSendMyMFAEmailCodeV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 388 'PublicSendMyMFAEmailCodeV4' test.out

#- 389 PublicDisableMyEmailV4
$CLI_EXE \
    --sn iam \
    --op PublicDisableMyEmailV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 389 'PublicDisableMyEmailV4' test.out

#- 390 PublicEnableMyEmailV4
$CLI_EXE \
    --sn iam \
    --op PublicEnableMyEmailV4 \
    --namespace $AB_NAMESPACE \
    --code 'P1zEvN0n' \
    > test.out 2>&1
eval_tap $? 390 'PublicEnableMyEmailV4' test.out

#- 391 PublicGetMyEnabledFactorsV4
$CLI_EXE \
    --sn iam \
    --op PublicGetMyEnabledFactorsV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 391 'PublicGetMyEnabledFactorsV4' test.out

#- 392 PublicMakeFactorMyDefaultV4
$CLI_EXE \
    --sn iam \
    --op PublicMakeFactorMyDefaultV4 \
    --namespace $AB_NAMESPACE \
    --factor 'wZDD7cEa' \
    > test.out 2>&1
eval_tap $? 392 'PublicMakeFactorMyDefaultV4' test.out

#- 393 PublicGetUserPublicInfoByUserIdV4
$CLI_EXE \
    --sn iam \
    --op PublicGetUserPublicInfoByUserIdV4 \
    --namespace $AB_NAMESPACE \
    --userId 'F3slGFUC' \
    > test.out 2>&1
eval_tap $? 393 'PublicGetUserPublicInfoByUserIdV4' test.out

#- 394 PublicInviteUserV4
# body param: body
echo '{"additionalData": "lYh0Nbpg", "emailAddress": "lTPCEl2N", "namespace": "9dpeF5zS", "namespaceDisplayName": "hgW6LaUd"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicInviteUserV4 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 394 'PublicInviteUserV4' test.out


# remove artifacts
rm -f "$CLI_TOKEN_FILE"
rm -f "$TEMP_JSON_INPUT"
rm -f "$TEMP_FILE_UPLOAD"

exit $EXIT_CODE