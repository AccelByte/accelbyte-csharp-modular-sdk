#!/usr/bin/env bash

# Copyright (c) 2021 AccelByte Inc. All Rights Reserved.
# This is licensed software from AccelByte Inc, for limitations
# and restrictions contact your company contract manager.

# This code is generated by tool. DO NOT EDIT.

# Meta:
# - random seed: 
# - template file: 

# Instructions:
# - Run the Justice SDK Mock Server first before running this script.

export AB_BASE_URL="http://127.0.0.1:8080"
export AB_CLIENT_ID="admin"
export AB_CLIENT_SECRET="admin"
export AB_NAMESPACE="test"
export AB_APP_NAME="UnitTest"

EXIT_CODE=0

eval_tap() {
  if [ $1 -eq 0 ]; then
    echo "ok $2 - $3"
  else
    EXIT_CODE=1
    echo "not ok $2 - $3"
    sed 's/^/# /g' $4
  fi
  rm -f $4
}

CLI_EXE="AccelByte.Sdk.Sample.Cli"
CLI_TOKEN_FILE="$(dirname "$(which $CLI_EXE)")/token.json"
TEMP_JSON_INPUT="input_json.json"
TEMP_FILE_UPLOAD="file_upload.bin"

echo "TAP version 13"
echo "1..435"

#- 1 Login
$CLI_EXE --op login --lt user --user user --pass user > test.out 2>&1
eval_tap $? 1 'Login' test.out

if [ $EXIT_CODE -ne 0 ]; then
  echo "Bail out! Login failed."
  exit $EXIT_CODE
fi

# echo "foo" > "$CLI_TOKEN_FILE"

#- 2 GetBansType
eval_tap 0 2 'GetBansType # SKIP deprecated' test.out

#- 3 GetListBanReason
eval_tap 0 3 'GetListBanReason # SKIP deprecated' test.out

#- 4 GetClients
eval_tap 0 4 'GetClients # SKIP deprecated' test.out

#- 5 CreateClient
eval_tap 0 5 'CreateClient # SKIP deprecated' test.out

#- 6 GetClient
eval_tap 0 6 'GetClient # SKIP deprecated' test.out

#- 7 UpdateClient
eval_tap 0 7 'UpdateClient # SKIP deprecated' test.out

#- 8 DeleteClient
eval_tap 0 8 'DeleteClient # SKIP deprecated' test.out

#- 9 UpdateClientPermission
eval_tap 0 9 'UpdateClientPermission # SKIP deprecated' test.out

#- 10 AddClientPermission
eval_tap 0 10 'AddClientPermission # SKIP deprecated' test.out

#- 11 DeleteClientPermission
eval_tap 0 11 'DeleteClientPermission # SKIP deprecated' test.out

#- 12 UpdateClientSecret
eval_tap 0 12 'UpdateClientSecret # SKIP deprecated' test.out

#- 13 GetClientsbyNamespace
eval_tap 0 13 'GetClientsbyNamespace # SKIP deprecated' test.out

#- 14 CreateClientByNamespace
eval_tap 0 14 'CreateClientByNamespace # SKIP deprecated' test.out

#- 15 DeleteClientByNamespace
eval_tap 0 15 'DeleteClientByNamespace # SKIP deprecated' test.out

#- 16 CreateUser
eval_tap 0 16 'CreateUser # SKIP deprecated' test.out

#- 17 GetAdminUsersByRoleID
eval_tap 0 17 'GetAdminUsersByRoleID # SKIP deprecated' test.out

#- 18 GetUserByLoginID
eval_tap 0 18 'GetUserByLoginID # SKIP deprecated' test.out

#- 19 GetUserByPlatformUserID
eval_tap 0 19 'GetUserByPlatformUserID # SKIP deprecated' test.out

#- 20 ForgotPassword
eval_tap 0 20 'ForgotPassword # SKIP deprecated' test.out

#- 21 GetUsersByLoginIds
eval_tap 0 21 'GetUsersByLoginIds # SKIP deprecated' test.out

#- 22 ResetPassword
eval_tap 0 22 'ResetPassword # SKIP deprecated' test.out

#- 23 SearchUser
eval_tap 0 23 'SearchUser # SKIP deprecated' test.out

#- 24 GetUserByUserID
eval_tap 0 24 'GetUserByUserID # SKIP deprecated' test.out

#- 25 UpdateUser
eval_tap 0 25 'UpdateUser # SKIP deprecated' test.out

#- 26 DeleteUser
eval_tap 0 26 'DeleteUser # SKIP deprecated' test.out

#- 27 BanUser
eval_tap 0 27 'BanUser # SKIP deprecated' test.out

#- 28 GetUserBanHistory
eval_tap 0 28 'GetUserBanHistory # SKIP deprecated' test.out

#- 29 DisableUserBan
eval_tap 0 29 'DisableUserBan # SKIP deprecated' test.out

#- 30 EnableUserBan
eval_tap 0 30 'EnableUserBan # SKIP deprecated' test.out

#- 31 ListCrossNamespaceAccountLink
eval_tap 0 31 'ListCrossNamespaceAccountLink # SKIP deprecated' test.out

#- 32 DisableUser
eval_tap 0 32 'DisableUser # SKIP deprecated' test.out

#- 33 EnableUser
eval_tap 0 33 'EnableUser # SKIP deprecated' test.out

#- 34 GetUserInformation
eval_tap 0 34 'GetUserInformation # SKIP deprecated' test.out

#- 35 DeleteUserInformation
eval_tap 0 35 'DeleteUserInformation # SKIP deprecated' test.out

#- 36 GetUserLoginHistories
eval_tap 0 36 'GetUserLoginHistories # SKIP deprecated' test.out

#- 37 UpdatePassword
eval_tap 0 37 'UpdatePassword # SKIP deprecated' test.out

#- 38 SaveUserPermission
eval_tap 0 38 'SaveUserPermission # SKIP deprecated' test.out

#- 39 AddUserPermission
eval_tap 0 39 'AddUserPermission # SKIP deprecated' test.out

#- 40 DeleteUserPermission
eval_tap 0 40 'DeleteUserPermission # SKIP deprecated' test.out

#- 41 GetUserPlatformAccounts
eval_tap 0 41 'GetUserPlatformAccounts # SKIP deprecated' test.out

#- 42 GetUserMapping
eval_tap 0 42 'GetUserMapping # SKIP deprecated' test.out

#- 43 GetUserJusticePlatformAccount
eval_tap 0 43 'GetUserJusticePlatformAccount # SKIP deprecated' test.out

#- 44 PlatformLink
eval_tap 0 44 'PlatformLink # SKIP deprecated' test.out

#- 45 PlatformUnlink
eval_tap 0 45 'PlatformUnlink # SKIP deprecated' test.out

#- 46 GetPublisherUser
eval_tap 0 46 'GetPublisherUser # SKIP deprecated' test.out

#- 47 SaveUserRoles
eval_tap 0 47 'SaveUserRoles # SKIP deprecated' test.out

#- 48 AddUserRole
eval_tap 0 48 'AddUserRole # SKIP deprecated' test.out

#- 49 DeleteUserRole
eval_tap 0 49 'DeleteUserRole # SKIP deprecated' test.out

#- 50 UpgradeHeadlessAccount
eval_tap 0 50 'UpgradeHeadlessAccount # SKIP deprecated' test.out

#- 51 UpgradeHeadlessAccountWithVerificationCode
eval_tap 0 51 'UpgradeHeadlessAccountWithVerificationCode # SKIP deprecated' test.out

#- 52 UserVerification
eval_tap 0 52 'UserVerification # SKIP deprecated' test.out

#- 53 SendVerificationCode
eval_tap 0 53 'SendVerificationCode # SKIP deprecated' test.out

#- 54 Authorization
eval_tap 0 54 'Authorization # SKIP deprecated' test.out

#- 55 GetJWKS
eval_tap 0 55 'GetJWKS # SKIP deprecated' test.out

#- 56 PlatformTokenRequestHandler
eval_tap 0 56 'PlatformTokenRequestHandler # SKIP deprecated' test.out

#- 57 RevokeUser
eval_tap 0 57 'RevokeUser # SKIP deprecated' test.out

#- 58 GetRevocationList
eval_tap 0 58 'GetRevocationList # SKIP deprecated' test.out

#- 59 RevokeToken
eval_tap 0 59 'RevokeToken # SKIP deprecated' test.out

#- 60 RevokeAUser
eval_tap 0 60 'RevokeAUser # SKIP deprecated' test.out

#- 61 TokenGrant
eval_tap 0 61 'TokenGrant # SKIP deprecated' test.out

#- 62 VerifyToken
eval_tap 0 62 'VerifyToken # SKIP deprecated' test.out

#- 63 GetRoles
eval_tap 0 63 'GetRoles # SKIP deprecated' test.out

#- 64 CreateRole
eval_tap 0 64 'CreateRole # SKIP deprecated' test.out

#- 65 GetRole
eval_tap 0 65 'GetRole # SKIP deprecated' test.out

#- 66 UpdateRole
eval_tap 0 66 'UpdateRole # SKIP deprecated' test.out

#- 67 DeleteRole
eval_tap 0 67 'DeleteRole # SKIP deprecated' test.out

#- 68 GetRoleAdminStatus
eval_tap 0 68 'GetRoleAdminStatus # SKIP deprecated' test.out

#- 69 SetRoleAsAdmin
eval_tap 0 69 'SetRoleAsAdmin # SKIP deprecated' test.out

#- 70 RemoveRoleAdmin
eval_tap 0 70 'RemoveRoleAdmin # SKIP deprecated' test.out

#- 71 GetRoleManagers
eval_tap 0 71 'GetRoleManagers # SKIP deprecated' test.out

#- 72 AddRoleManagers
eval_tap 0 72 'AddRoleManagers # SKIP deprecated' test.out

#- 73 RemoveRoleManagers
eval_tap 0 73 'RemoveRoleManagers # SKIP deprecated' test.out

#- 74 GetRoleMembers
eval_tap 0 74 'GetRoleMembers # SKIP deprecated' test.out

#- 75 AddRoleMembers
eval_tap 0 75 'AddRoleMembers # SKIP deprecated' test.out

#- 76 RemoveRoleMembers
eval_tap 0 76 'RemoveRoleMembers # SKIP deprecated' test.out

#- 77 UpdateRolePermissions
eval_tap 0 77 'UpdateRolePermissions # SKIP deprecated' test.out

#- 78 AddRolePermission
eval_tap 0 78 'AddRolePermission # SKIP deprecated' test.out

#- 79 DeleteRolePermission
eval_tap 0 79 'DeleteRolePermission # SKIP deprecated' test.out

#- 80 AdminGetAgeRestrictionStatusV2
eval_tap 0 80 'AdminGetAgeRestrictionStatusV2 # SKIP deprecated' test.out

#- 81 AdminUpdateAgeRestrictionConfigV2
eval_tap 0 81 'AdminUpdateAgeRestrictionConfigV2 # SKIP deprecated' test.out

#- 82 GetListCountryAgeRestriction
eval_tap 0 82 'GetListCountryAgeRestriction # SKIP deprecated' test.out

#- 83 UpdateCountryAgeRestriction
eval_tap 0 83 'UpdateCountryAgeRestriction # SKIP deprecated' test.out

#- 84 AdminSearchUsersV2
eval_tap 0 84 'AdminSearchUsersV2 # SKIP deprecated' test.out

#- 85 AdminGetUserByUserIdV2
eval_tap 0 85 'AdminGetUserByUserIdV2 # SKIP deprecated' test.out

#- 86 AdminUpdateUserV2
eval_tap 0 86 'AdminUpdateUserV2 # SKIP deprecated' test.out

#- 87 AdminBanUserV2
eval_tap 0 87 'AdminBanUserV2 # SKIP deprecated' test.out

#- 88 AdminGetUserBanV2
eval_tap 0 88 'AdminGetUserBanV2 # SKIP deprecated' test.out

#- 89 AdminDisableUserV2
eval_tap 0 89 'AdminDisableUserV2 # SKIP deprecated' test.out

#- 90 AdminEnableUserV2
eval_tap 0 90 'AdminEnableUserV2 # SKIP deprecated' test.out

#- 91 AdminResetPasswordV2
eval_tap 0 91 'AdminResetPasswordV2 # SKIP deprecated' test.out

#- 92 AdminDeletePlatformLinkV2
eval_tap 0 92 'AdminDeletePlatformLinkV2 # SKIP deprecated' test.out

#- 93 AdminPutUserRolesV2
eval_tap 0 93 'AdminPutUserRolesV2 # SKIP deprecated' test.out

#- 94 AdminCreateUserRolesV2
eval_tap 0 94 'AdminCreateUserRolesV2 # SKIP deprecated' test.out

#- 95 PublicGetCountryAgeRestriction
eval_tap 0 95 'PublicGetCountryAgeRestriction # SKIP deprecated' test.out

#- 96 PublicCreateUserV2
eval_tap 0 96 'PublicCreateUserV2 # SKIP deprecated' test.out

#- 97 PublicForgotPasswordV2
eval_tap 0 97 'PublicForgotPasswordV2 # SKIP deprecated' test.out

#- 98 PublicResetPasswordV2
eval_tap 0 98 'PublicResetPasswordV2 # SKIP deprecated' test.out

#- 99 PublicGetUserByUserIDV2
eval_tap 0 99 'PublicGetUserByUserIDV2 # SKIP deprecated' test.out

#- 100 PublicUpdateUserV2
eval_tap 0 100 'PublicUpdateUserV2 # SKIP deprecated' test.out

#- 101 PublicGetUserBan
eval_tap 0 101 'PublicGetUserBan # SKIP deprecated' test.out

#- 102 PublicUpdatePasswordV2
eval_tap 0 102 'PublicUpdatePasswordV2 # SKIP deprecated' test.out

#- 103 GetListJusticePlatformAccounts
eval_tap 0 103 'GetListJusticePlatformAccounts # SKIP deprecated' test.out

#- 104 PublicPlatformLinkV2
eval_tap 0 104 'PublicPlatformLinkV2 # SKIP deprecated' test.out

#- 105 PublicDeletePlatformLinkV2
eval_tap 0 105 'PublicDeletePlatformLinkV2 # SKIP deprecated' test.out

#- 106 AdminGetBansTypeV3
$CLI_EXE \
    --sn iam \
    --op AdminGetBansTypeV3 \
    > test.out 2>&1
eval_tap $? 106 'AdminGetBansTypeV3' test.out

#- 107 AdminGetListBanReasonV3
$CLI_EXE \
    --sn iam \
    --op AdminGetListBanReasonV3 \
    > test.out 2>&1
eval_tap $? 107 'AdminGetListBanReasonV3' test.out

#- 108 AdminListClientAvailablePermissions
$CLI_EXE \
    --sn iam \
    --op AdminListClientAvailablePermissions \
    --excludePermissions 'true' \
    > test.out 2>&1
eval_tap $? 108 'AdminListClientAvailablePermissions' test.out

#- 109 AdminUpdateAvailablePermissionsByModule
# body param: body
echo '{"modules": [{"docLink": "V0aFbg9I", "groups": [{"group": "wvoqekXW", "groupId": "scTxezp2", "permissions": [{"allowedActions": [46, 91, 21], "resource": "hQ0ZCyra"}, {"allowedActions": [96, 58, 57], "resource": "vNL60WcL"}, {"allowedActions": [40, 21, 10], "resource": "bUnilb6v"}]}, {"group": "Q5TE7207", "groupId": "Vd0o9YZD", "permissions": [{"allowedActions": [39, 86, 76], "resource": "uNhoSwyH"}, {"allowedActions": [41, 94, 39], "resource": "5qWOWmoz"}, {"allowedActions": [75, 75, 2], "resource": "b7UUhawH"}]}, {"group": "RtDQSOTo", "groupId": "LBBAzxT7", "permissions": [{"allowedActions": [23, 50, 37], "resource": "gYfXB1Cu"}, {"allowedActions": [45, 32, 68], "resource": "Ix91HMZT"}, {"allowedActions": [64, 55, 49], "resource": "fWqEjsHO"}]}], "module": "2dn48Jf7", "moduleId": "UgcP5wci"}, {"docLink": "4mTS9U15", "groups": [{"group": "6Sn4x4gX", "groupId": "seyFhsrC", "permissions": [{"allowedActions": [12, 1, 47], "resource": "BFrGsaDa"}, {"allowedActions": [16, 0, 57], "resource": "SCuLewbM"}, {"allowedActions": [81, 43, 30], "resource": "whplM73G"}]}, {"group": "9dX7WwZA", "groupId": "K0COFiWY", "permissions": [{"allowedActions": [76, 8, 92], "resource": "BigwitRU"}, {"allowedActions": [8, 11, 55], "resource": "aqrcUGDO"}, {"allowedActions": [60, 72, 43], "resource": "uvwGZSZ6"}]}, {"group": "pYbbGj1S", "groupId": "DcK0jzQf", "permissions": [{"allowedActions": [80, 85, 6], "resource": "oFuSaJ8O"}, {"allowedActions": [35, 66, 47], "resource": "AssBMGk7"}, {"allowedActions": [72, 68, 93], "resource": "cC75Cd3q"}]}], "module": "fcgncdZe", "moduleId": "4tExFzkv"}, {"docLink": "FF80q14S", "groups": [{"group": "3iJb8TFP", "groupId": "LNuk1W9G", "permissions": [{"allowedActions": [90, 33, 80], "resource": "STlQvepK"}, {"allowedActions": [60, 20, 78], "resource": "aUnsvbuS"}, {"allowedActions": [91, 88, 16], "resource": "O0RB2gDB"}]}, {"group": "MqhFd8Oy", "groupId": "FvdP6fWq", "permissions": [{"allowedActions": [41, 39, 11], "resource": "yInwIqWV"}, {"allowedActions": [86, 93, 18], "resource": "VvXxMTjp"}, {"allowedActions": [10, 17, 3], "resource": "a4OYLjcS"}]}, {"group": "eSF4WsAU", "groupId": "XTHnhCL6", "permissions": [{"allowedActions": [67, 38, 49], "resource": "C8aApLoz"}, {"allowedActions": [70, 33, 13], "resource": "RPUBwJCn"}, {"allowedActions": [4, 21, 96], "resource": "vWGMoSxO"}]}], "module": "D4kCDWD6", "moduleId": "fuRFX0sQ"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateAvailablePermissionsByModule \
    --forceDelete 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 109 'AdminUpdateAvailablePermissionsByModule' test.out

#- 110 AdminDeleteConfigPermissionsByGroup
# body param: body
echo '{"groupId": "sT9FKa54", "moduleId": "ph1eXOQ3"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDeleteConfigPermissionsByGroup \
    --forceDelete 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 110 'AdminDeleteConfigPermissionsByGroup' test.out

#- 111 AdminListClientTemplates
$CLI_EXE \
    --sn iam \
    --op AdminListClientTemplates \
    > test.out 2>&1
eval_tap $? 111 'AdminListClientTemplates' test.out

#- 112 AdminGetInputValidations
$CLI_EXE \
    --sn iam \
    --op AdminGetInputValidations \
    > test.out 2>&1
eval_tap $? 112 'AdminGetInputValidations' test.out

#- 113 AdminUpdateInputValidations
# body param: body
echo '[{"field": "a3rP7bmI", "validation": {"allowAllSpecialCharacters": true, "allowDigit": true, "allowLetter": true, "allowSpace": false, "allowUnicode": true, "avatarConfig": {"allowedPrefixes": ["P2zfPFXs", "tCiy3SN8", "TsZpa4hU"], "preferRegex": false, "regex": "tskz8pQ4"}, "blockedWord": ["pRIUtikB", "a5BEtpOU", "xAwHHPMn"], "description": [{"language": "wDZ6mcEi", "message": ["14HQwank", "qvNQxWZT", "qOlose72"]}, {"language": "pa41M742", "message": ["fUCCfV7E", "ICyq5MzK", "lBIY5i8D"]}, {"language": "J3xaxgs8", "message": ["nhzzChGJ", "BV5qBbry", "aLhcnkZB"]}], "isCustomRegex": false, "letterCase": "uvO55EwA", "maxLength": 69, "maxRepeatingAlphaNum": 9, "maxRepeatingSpecialCharacter": 52, "minCharType": 17, "minLength": 53, "profanityFilter": "fMLzuADz", "regex": "HkxQMW86", "specialCharacterLocation": "Wi7DItu3", "specialCharacters": ["A7ZfT9Ps", "SMFauSeZ", "duRVt0UH"]}}, {"field": "L0O3KJy1", "validation": {"allowAllSpecialCharacters": true, "allowDigit": true, "allowLetter": false, "allowSpace": false, "allowUnicode": false, "avatarConfig": {"allowedPrefixes": ["zDaZtQah", "UnZXc2Sp", "p5ohxAai"], "preferRegex": true, "regex": "zOs46j0y"}, "blockedWord": ["faT1DfQp", "lqOHgSlR", "fzxj4vRG"], "description": [{"language": "M7evHqr0", "message": ["qGFLFCjK", "FbEuz6sE", "bFVlJ2H3"]}, {"language": "3mBhVkSh", "message": ["duQpUVWJ", "6JaDFwMS", "lZdMFL2t"]}, {"language": "mCBVpOyl", "message": ["mjFpO6Q9", "ggFDmHKI", "AAI1FPHq"]}], "isCustomRegex": true, "letterCase": "LgphL5zd", "maxLength": 43, "maxRepeatingAlphaNum": 94, "maxRepeatingSpecialCharacter": 83, "minCharType": 80, "minLength": 76, "profanityFilter": "7D71fta1", "regex": "oUXCipxc", "specialCharacterLocation": "w1xfkSSw", "specialCharacters": ["hLbYWH0f", "fEeEsKty", "3WfOZeZa"]}}, {"field": "JPBenRz6", "validation": {"allowAllSpecialCharacters": true, "allowDigit": false, "allowLetter": false, "allowSpace": false, "allowUnicode": true, "avatarConfig": {"allowedPrefixes": ["HhD3u2nc", "WgHVyH2t", "k5sSlO7Y"], "preferRegex": false, "regex": "nSpISRSK"}, "blockedWord": ["kRKhsm8S", "EacYNWq9", "4WmE5S4Q"], "description": [{"language": "h652YBdC", "message": ["ziJx8Zuh", "bOUgIvn5", "P5fe5GCl"]}, {"language": "NMedi7Le", "message": ["IVgpwupK", "HIuwnxCo", "yU51lsgn"]}, {"language": "lqBmj3S3", "message": ["zu6DqxmR", "E5dmAy4i", "UCIBNREz"]}], "isCustomRegex": false, "letterCase": "kwbLWTO1", "maxLength": 88, "maxRepeatingAlphaNum": 83, "maxRepeatingSpecialCharacter": 35, "minCharType": 99, "minLength": 6, "profanityFilter": "tLqAxDCT", "regex": "J1unzgBz", "specialCharacterLocation": "knQfJSI2", "specialCharacters": ["WpuLRREc", "yYW8wrNz", "QaJEgurB"]}}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateInputValidations \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 113 'AdminUpdateInputValidations' test.out

#- 114 AdminResetInputValidations
$CLI_EXE \
    --sn iam \
    --op AdminResetInputValidations \
    --field 'zfFpnJ7j' \
    > test.out 2>&1
eval_tap $? 114 'AdminResetInputValidations' test.out

#- 115 ListAdminsV3
$CLI_EXE \
    --sn iam \
    --op ListAdminsV3 \
    --namespace $AB_NAMESPACE \
    --after '43oCs7Tp' \
    --before 'WuXFzj3j' \
    --endDate 'dzGiG3hy' \
    --limit '4' \
    --query 'pZ1iClj6' \
    --roleId 'W3Je9LB1' \
    --startDate 'KHwmc8Da' \
    > test.out 2>&1
eval_tap $? 115 'ListAdminsV3' test.out

#- 116 AdminGetAgeRestrictionStatusV3
$CLI_EXE \
    --sn iam \
    --op AdminGetAgeRestrictionStatusV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 116 'AdminGetAgeRestrictionStatusV3' test.out

#- 117 AdminUpdateAgeRestrictionConfigV3
# body param: body
echo '{"ageRestriction": 97, "enable": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateAgeRestrictionConfigV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 117 'AdminUpdateAgeRestrictionConfigV3' test.out

#- 118 AdminGetListCountryAgeRestrictionV3
$CLI_EXE \
    --sn iam \
    --op AdminGetListCountryAgeRestrictionV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 118 'AdminGetListCountryAgeRestrictionV3' test.out

#- 119 AdminUpdateCountryAgeRestrictionV3
# body param: body
echo '{"ageRestriction": 39}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateCountryAgeRestrictionV3 \
    --countryCode 'YLFWwdKe' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 119 'AdminUpdateCountryAgeRestrictionV3' test.out

#- 120 AdminGetBannedUsersV3
$CLI_EXE \
    --sn iam \
    --op AdminGetBannedUsersV3 \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --banType 'j4A1RWaY' \
    --limit '96' \
    --offset '56' \
    > test.out 2>&1
eval_tap $? 120 'AdminGetBannedUsersV3' test.out

#- 121 AdminBanUserBulkV3
# body param: body
echo '{"ban": "hOcK69SV", "comment": "QZlTXvQn", "endDate": "wMkHYcTS", "reason": "7uPiTk54", "skipNotif": true, "userIds": ["dfi6dXJh", "kxCG6UOv", "1WYxKGth"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBanUserBulkV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 121 'AdminBanUserBulkV3' test.out

#- 122 AdminUnbanUserBulkV3
# body param: body
echo '{"bans": [{"banId": "ahDBpoyq", "userId": "CRz8nEQQ"}, {"banId": "H8KEbL4J", "userId": "oYyQVAiR"}, {"banId": "PqEEmUvw", "userId": "ttXDfdsq"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUnbanUserBulkV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 122 'AdminUnbanUserBulkV3' test.out

#- 123 AdminGetBansTypeWithNamespaceV3
$CLI_EXE \
    --sn iam \
    --op AdminGetBansTypeWithNamespaceV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 123 'AdminGetBansTypeWithNamespaceV3' test.out

#- 124 AdminGetClientsByNamespaceV3
$CLI_EXE \
    --sn iam \
    --op AdminGetClientsByNamespaceV3 \
    --namespace $AB_NAMESPACE \
    --clientId 'sWz6oktK' \
    --clientName 'GVjk4yPn' \
    --clientType 'Xmdr79Km' \
    --limit '28' \
    --offset '79' \
    --skipLoginQueue 'true' \
    > test.out 2>&1
eval_tap $? 124 'AdminGetClientsByNamespaceV3' test.out

#- 125 AdminBulkUpdateClientsV3
# body param: body
echo '{"clientIds": ["CA7zLxB7", "haxX4B2J", "ULUaaFJZ"], "clientUpdateRequest": {"audiences": ["gfg56dw0", "TRflSLcY", "D3kpT66v"], "baseUri": "rPPcJ1XC", "clientName": "S4d2BkTW", "clientPermissions": [{"action": 16, "resource": "2naLQiDN", "schedAction": 46, "schedCron": "b5fDm7ik", "schedRange": ["L8ifudYr", "1TSfJIjH", "9fNpAU1m"]}, {"action": 48, "resource": "dFdxlyQz", "schedAction": 32, "schedCron": "0P99maTe", "schedRange": ["wOzK7eZ3", "f14CxFO8", "erBYrx0K"]}, {"action": 71, "resource": "WdExYz8f", "schedAction": 49, "schedCron": "lntPclwl", "schedRange": ["hAY0UWdp", "wFJsoOSs", "Gnwn1mIs"]}], "clientPlatform": "YERBqVoe", "deletable": false, "description": "6FkJ9Ul0", "modulePermissions": [{"moduleId": "0YNAeIzT", "selectedGroups": [{"groupId": "7EGxiyx8", "selectedActions": [6, 82, 68]}, {"groupId": "0CLFDsqE", "selectedActions": [8, 34, 27]}, {"groupId": "DxVtrNL6", "selectedActions": [53, 27, 31]}]}, {"moduleId": "7LFMu276", "selectedGroups": [{"groupId": "ZxGbfzBg", "selectedActions": [89, 90, 96]}, {"groupId": "CgsvTbZ1", "selectedActions": [6, 82, 53]}, {"groupId": "P7dyTO2R", "selectedActions": [56, 58, 97]}]}, {"moduleId": "YLtCQNY0", "selectedGroups": [{"groupId": "n1VyyJoK", "selectedActions": [90, 33, 0]}, {"groupId": "IOHBDcYk", "selectedActions": [25, 37, 51]}, {"groupId": "QpGtrD4L", "selectedActions": [30, 7, 68]}]}], "namespace": "eUl52s07", "oauthAccessTokenExpiration": 48, "oauthAccessTokenExpirationTimeUnit": "nkzPzs1b", "oauthRefreshTokenExpiration": 13, "oauthRefreshTokenExpirationTimeUnit": "b54kBQ7D", "redirectUri": "4Nme1U3D", "scopes": ["BDF715hM", "e3eFTZAF", "pt3iWHBb"], "skipLoginQueue": false, "twoFactorEnabled": false}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBulkUpdateClientsV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 125 'AdminBulkUpdateClientsV3' test.out

#- 126 AdminCreateClientV3
# body param: body
echo '{"audiences": ["Yly2RJ95", "CAQ3AT9Z", "RBEtUM9k"], "baseUri": "1EiMXKeN", "clientId": "HkqU0Vuz", "clientName": "i9dBCAo0", "clientPermissions": [{"action": 97, "resource": "3QiUCQBR", "schedAction": 46, "schedCron": "0yERJiJq", "schedRange": ["09GAi0Oq", "WdjcnnVa", "FejjjWLg"]}, {"action": 62, "resource": "85HEYCex", "schedAction": 63, "schedCron": "2hGo4J7L", "schedRange": ["rBL3gb7l", "kjG0weSu", "pYli8Xec"]}, {"action": 3, "resource": "VuvrvVeE", "schedAction": 57, "schedCron": "TkV8hNHL", "schedRange": ["y3bWKkEQ", "ZXzrb4Ad", "QjYmeRsN"]}], "clientPlatform": "x5apYObR", "deletable": true, "description": "mUN1ADNK", "modulePermissions": [{"moduleId": "Ewyu5mTz", "selectedGroups": [{"groupId": "o0NNl3eF", "selectedActions": [84, 59, 91]}, {"groupId": "mctaQtm6", "selectedActions": [31, 7, 96]}, {"groupId": "R7uyCeRU", "selectedActions": [57, 67, 99]}]}, {"moduleId": "5Whnmx5p", "selectedGroups": [{"groupId": "F5bbFDmp", "selectedActions": [9, 91, 91]}, {"groupId": "L5z8jNA1", "selectedActions": [20, 35, 33]}, {"groupId": "Su44vJN9", "selectedActions": [8, 99, 99]}]}, {"moduleId": "frdPrWOX", "selectedGroups": [{"groupId": "21KiSc3h", "selectedActions": [24, 87, 12]}, {"groupId": "llY3zSMW", "selectedActions": [99, 39, 55]}, {"groupId": "hD3HVqqb", "selectedActions": [11, 81, 69]}]}], "namespace": "OtodrtDc", "oauthAccessTokenExpiration": 52, "oauthAccessTokenExpirationTimeUnit": "IBsQ1Cur", "oauthClientType": "2tAYf5J4", "oauthRefreshTokenExpiration": 45, "oauthRefreshTokenExpirationTimeUnit": "6tg2H4OV", "parentNamespace": "3tedZIVb", "redirectUri": "sTPbx1Yk", "scopes": ["YTYazXsm", "UPwbipOK", "YaP97Nr7"], "secret": "aBOnMpj8", "skipLoginQueue": false, "twoFactorEnabled": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminCreateClientV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 126 'AdminCreateClientV3' test.out

#- 127 AdminGetClientsbyNamespacebyIDV3
$CLI_EXE \
    --sn iam \
    --op AdminGetClientsbyNamespacebyIDV3 \
    --clientId 'CBI95W78' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 127 'AdminGetClientsbyNamespacebyIDV3' test.out

#- 128 AdminDeleteClientV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteClientV3 \
    --clientId 'WhIdJOdb' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 128 'AdminDeleteClientV3' test.out

#- 129 AdminUpdateClientV3
# body param: body
echo '{"audiences": ["YIIGuqWI", "YROzDQTw", "Ka8uue0H"], "baseUri": "mR9es3T3", "clientName": "JdaNH9R8", "clientPermissions": [{"action": 89, "resource": "qxhsaMEM", "schedAction": 11, "schedCron": "Jboe1YF1", "schedRange": ["ahP2Kcz1", "utSt8L57", "JdeuBiwT"]}, {"action": 6, "resource": "lBNrU48n", "schedAction": 83, "schedCron": "USbHQDeC", "schedRange": ["sS68MYhH", "n2fYbHdp", "VDd5B22W"]}, {"action": 25, "resource": "LfS6k9X8", "schedAction": 33, "schedCron": "CUzokRJO", "schedRange": ["X2WysZpB", "TUJTqAt5", "mZejpcrH"]}], "clientPlatform": "Cv3YR5y7", "deletable": false, "description": "T59eMAi0", "modulePermissions": [{"moduleId": "gGu1Ze2g", "selectedGroups": [{"groupId": "7eWYxKUl", "selectedActions": [59, 92, 82]}, {"groupId": "wzAWumgu", "selectedActions": [52, 94, 0]}, {"groupId": "6Msu9nqz", "selectedActions": [5, 31, 10]}]}, {"moduleId": "a0ew14mL", "selectedGroups": [{"groupId": "ChcnwmSA", "selectedActions": [61, 60, 41]}, {"groupId": "DuxjI0X7", "selectedActions": [16, 45, 64]}, {"groupId": "wajXB9VD", "selectedActions": [7, 12, 53]}]}, {"moduleId": "ePCmQ6VP", "selectedGroups": [{"groupId": "8JyWdRj1", "selectedActions": [68, 1, 92]}, {"groupId": "teBmkkBk", "selectedActions": [3, 31, 76]}, {"groupId": "wrZ20wL1", "selectedActions": [17, 44, 40]}]}], "namespace": "5YG0btQP", "oauthAccessTokenExpiration": 48, "oauthAccessTokenExpirationTimeUnit": "yPG8QTdo", "oauthRefreshTokenExpiration": 76, "oauthRefreshTokenExpirationTimeUnit": "Zy2ubshf", "redirectUri": "VHuAQRms", "scopes": ["p5DcaOO8", "ant9RwxC", "v5q4UDwk"], "skipLoginQueue": false, "twoFactorEnabled": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateClientV3 \
    --clientId 'JgCfvaru' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 129 'AdminUpdateClientV3' test.out

#- 130 AdminUpdateClientPermissionV3
# body param: body
echo '{"permissions": [{"action": 93, "resource": "LvqsyBEH"}, {"action": 27, "resource": "sqrLUsGm"}, {"action": 85, "resource": "kvzNyhWc"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateClientPermissionV3 \
    --clientId 'it3CghbR' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 130 'AdminUpdateClientPermissionV3' test.out

#- 131 AdminAddClientPermissionsV3
# body param: body
echo '{"permissions": [{"action": 26, "resource": "T1Bwb5XH"}, {"action": 50, "resource": "Z5myyQN3"}, {"action": 67, "resource": "EgK2rJFR"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddClientPermissionsV3 \
    --clientId 'HJXNoaBL' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 131 'AdminAddClientPermissionsV3' test.out

#- 132 AdminDeleteClientPermissionV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteClientPermissionV3 \
    --action '1' \
    --clientId '1divuUa4' \
    --namespace $AB_NAMESPACE \
    --resource 'bv84LTWy' \
    > test.out 2>&1
eval_tap $? 132 'AdminDeleteClientPermissionV3' test.out

#- 133 AdminGetConfigValueV3
$CLI_EXE \
    --sn iam \
    --op AdminGetConfigValueV3 \
    --configKey 'npPSMEkr' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 133 'AdminGetConfigValueV3' test.out

#- 134 AdminGetCountryListV3
$CLI_EXE \
    --sn iam \
    --op AdminGetCountryListV3 \
    --namespace $AB_NAMESPACE \
    --filterBlacklist 'false' \
    > test.out 2>&1
eval_tap $? 134 'AdminGetCountryListV3' test.out

#- 135 AdminGetCountryBlacklistV3
$CLI_EXE \
    --sn iam \
    --op AdminGetCountryBlacklistV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 135 'AdminGetCountryBlacklistV3' test.out

#- 136 AdminAddCountryBlacklistV3
# body param: body
echo '{"blacklist": ["VOQG8q7S", "aa5pK6C6", "TM1LjXXF"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddCountryBlacklistV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 136 'AdminAddCountryBlacklistV3' test.out

#- 137 AdminGetLoginAllowlistV3
$CLI_EXE \
    --sn iam \
    --op AdminGetLoginAllowlistV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 137 'AdminGetLoginAllowlistV3' test.out

#- 138 AdminUpdateLoginAllowlistV3
# body param: body
echo '{"active": false, "roleIds": ["9vtPI67F", "FHvF7ew7", "yJTfJ2Xa"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateLoginAllowlistV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 138 'AdminUpdateLoginAllowlistV3' test.out

#- 139 RetrieveAllThirdPartyLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op RetrieveAllThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 139 'RetrieveAllThirdPartyLoginPlatformCredentialV3' test.out

#- 140 RetrieveAllActiveThirdPartyLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op RetrieveAllActiveThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 140 'RetrieveAllActiveThirdPartyLoginPlatformCredentialV3' test.out

#- 141 RetrieveAllSSOLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op RetrieveAllSSOLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --limit '25' \
    --offset '46' \
    > test.out 2>&1
eval_tap $? 141 'RetrieveAllSSOLoginPlatformCredentialV3' test.out

#- 142 RetrieveThirdPartyLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op RetrieveThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --platformId '7AYse5p1' \
    > test.out 2>&1
eval_tap $? 142 'RetrieveThirdPartyLoginPlatformCredentialV3' test.out

#- 143 AddThirdPartyLoginPlatformCredentialV3
# body param: body
echo '{"ACSURL": "tY7kBU3Z", "AWSCognitoRegion": "tamuFTMv", "AWSCognitoUserPool": "CvbjopXh", "AllowedClients": ["rS55w5Z2", "iXpZArHN", "JPGo77dd"], "AppId": "7bKVOgy8", "AuthorizationEndpoint": "ie9Nxna2", "ClientId": "K3pUpVNu", "EmptyStrFieldList": ["ckwu2kFy", "6PGQSIOL", "sMr4JYn7"], "EnableServerLicenseValidation": false, "Environment": "zwaLbZX0", "FederationMetadataURL": "20hoNP3l", "GenericOauthFlow": true, "IncludePUID": true, "IsActive": false, "Issuer": "5RgqzSZQ", "JWKSEndpoint": "sXd5JRHb", "KeyID": "HU57v3CA", "LogoURL": "nQnA9D9N", "NetflixCertificates": {"encryptedPrivateKey": "XSE2tSDR", "encryptedPrivateKeyName": "lsQA0D3A", "publicCertificate": "ZzzpvFzc", "publicCertificateName": "0xQRFQ63", "rootCertificate": "LwT9u5Y2", "rootCertificateName": "xYRs0yV9"}, "OrganizationId": "9oCPPHMi", "PlatformName": "3BOVbS76", "RedirectUri": "Mi0wu8mF", "RegisteredDomains": [{"affectedClientIDs": ["Iiz1af6n", "23RT9Gck", "DuhliEKS"], "domain": "CbZ0Edhn", "namespaces": ["9v0gvlBh", "sYOhR6JX", "cW9FYghl"], "roleId": "24XfowtB", "ssoCfg": {"googleKey": {"UU3SkYU1": {}, "oKZUGse4": {}, "hx6pqisy": {}}, "groupConfigs": [{"assignNamespaces": ["GCjGf1OS", "5nwJwKV3", "pAEHKCeR"], "group": "ZI0JkRCn", "roleId": "TpuhtJg1"}, {"assignNamespaces": ["Kw1j6Pk4", "gzu6jUCs", "SOPh2xy5"], "group": "2ANfJxKB", "roleId": "f8SHDj5Z"}, {"assignNamespaces": ["1qjXPOk3", "9DEUsQ8O", "ieIrcriB"], "group": "3QxdSaCH", "roleId": "6MLRSaKa"}]}}, {"affectedClientIDs": ["E1DWOGea", "onCOqWRb", "34NRNiTs"], "domain": "4W3W4e27", "namespaces": ["Y2aFfY3X", "vzTk18NI", "KjhrYNui"], "roleId": "RBwEkWCs", "ssoCfg": {"googleKey": {"LoQ47b22": {}, "Fa1Oqhg2": {}, "kqlpfhv8": {}}, "groupConfigs": [{"assignNamespaces": ["Wa3nZGTJ", "VQflgOwT", "hELr8Q2h"], "group": "LFstf0rz", "roleId": "w2CKeP7g"}, {"assignNamespaces": ["Kys76puv", "eSxDVc7H", "rP7IXIzr"], "group": "pdGv9p80", "roleId": "HziYd2SB"}, {"assignNamespaces": ["6iuGbojl", "uKbRiRON", "moNyG6Yu"], "group": "O3AO1LBV", "roleId": "mASVWHip"}]}}, {"affectedClientIDs": ["GI6bJhmp", "ohQddStP", "fKQm5CYe"], "domain": "7dcrabls", "namespaces": ["yTycq2qc", "N8Tyh0MB", "VXdPhDD3"], "roleId": "XBJ1efkd", "ssoCfg": {"googleKey": {"ExmSFII4": {}, "02QOcpWh": {}, "6rQTy4oT": {}}, "groupConfigs": [{"assignNamespaces": ["iDD3Ohsm", "d9G02wQz", "Q9GQ37qr"], "group": "P2lIeW94", "roleId": "DYgdMy9y"}, {"assignNamespaces": ["j3vBqfkX", "wiawD7sz", "I3EIs78Y"], "group": "ouPEZYkW", "roleId": "3vy51664"}, {"assignNamespaces": ["UatmQY2b", "823GEBnI", "Od8hU0zT"], "group": "zc7fuThs", "roleId": "QACpIfOc"}]}}], "Secret": "sDZDHIIn", "TeamID": "Vml35Hu1", "TokenAuthenticationType": "VbSz5ipT", "TokenClaimsMapping": {"Bsgrqfrw": "g2yIz359", "WY5gGtmX": "JN4culyT", "EUe0Dcnx": "MpSm8yYM"}, "TokenEndpoint": "ur1h8nxa", "UserInfoEndpoint": "PbLKpZPu", "UserInfoHTTPMethod": "SH1EPcKC", "googleAdminConsoleKey": "tzWWKFdU", "scopes": ["cgjPz5tR", "QvJQdI9B", "56lEhm4m"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AddThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'VAtduZ8a' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 143 'AddThirdPartyLoginPlatformCredentialV3' test.out

#- 144 DeleteThirdPartyLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op DeleteThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'OkzCwwuq' \
    > test.out 2>&1
eval_tap $? 144 'DeleteThirdPartyLoginPlatformCredentialV3' test.out

#- 145 UpdateThirdPartyLoginPlatformCredentialV3
# body param: body
echo '{"ACSURL": "scS735zY", "AWSCognitoRegion": "GICqGlh8", "AWSCognitoUserPool": "JRrKXf6o", "AllowedClients": ["UIL7cujS", "asCs2SyA", "4wSpDkxE"], "AppId": "1htMlF7H", "AuthorizationEndpoint": "CD2UKrV8", "ClientId": "7SIhUJgK", "EmptyStrFieldList": ["QXRBUNtl", "pxayFpwn", "FCH3MeFo"], "EnableServerLicenseValidation": true, "Environment": "AryNtPWH", "FederationMetadataURL": "bawZrsVp", "GenericOauthFlow": true, "IncludePUID": false, "IsActive": false, "Issuer": "etND8SkR", "JWKSEndpoint": "rnD5luAQ", "KeyID": "M6NvRjla", "LogoURL": "lk8bwNpw", "NetflixCertificates": {"encryptedPrivateKey": "d7YCveZH", "encryptedPrivateKeyName": "cEUrNUE1", "publicCertificate": "pg3YiPzJ", "publicCertificateName": "ShiZqyJK", "rootCertificate": "gRspOSSL", "rootCertificateName": "rRBFCTjL"}, "OrganizationId": "aJBfzU1r", "PlatformName": "WheAzOTi", "RedirectUri": "CT91rihd", "RegisteredDomains": [{"affectedClientIDs": ["97seaP84", "owVhP1i4", "cDY62bRR"], "domain": "i0TqWyV5", "namespaces": ["B2SGkegK", "hOvj2a3Z", "6zzgKPub"], "roleId": "LouJswDT", "ssoCfg": {"googleKey": {"2e7tZ7D8": {}, "VSvBY1zT": {}, "2w4CBM5C": {}}, "groupConfigs": [{"assignNamespaces": ["xed3RdOB", "DwCSMJ4v", "ZV29Qu6I"], "group": "AdSnyhQ3", "roleId": "VyRPNweH"}, {"assignNamespaces": ["SSZtAh4G", "ELm11II2", "HKf17LH0"], "group": "LmPO7LRx", "roleId": "MI7GST7E"}, {"assignNamespaces": ["qg8T5plD", "ckDjpCGx", "Mg0IFsH0"], "group": "RdSMF15c", "roleId": "4BrFcF7P"}]}}, {"affectedClientIDs": ["yUMDbKyV", "mpNDvttQ", "mDek3ZCN"], "domain": "oy266pPT", "namespaces": ["YUt4QoW9", "jhVweZcj", "WcCFcqzm"], "roleId": "7wWGysoK", "ssoCfg": {"googleKey": {"qY2ORbZo": {}, "6RCfNJLQ": {}, "rUqY3ZNf": {}}, "groupConfigs": [{"assignNamespaces": ["B7Rf9beU", "prhPpuUx", "dRVVnrz1"], "group": "UC1Qp6Pv", "roleId": "UKPbdrka"}, {"assignNamespaces": ["mwIqPamT", "uFQiG8pb", "1OB5Rqge"], "group": "n00ZfYch", "roleId": "PZXu3Qyf"}, {"assignNamespaces": ["wA70z3kP", "4vM9YDnY", "OeoFsbL7"], "group": "74bOIUt8", "roleId": "Z0PGSa0i"}]}}, {"affectedClientIDs": ["2lF9Pw1l", "OSELUZMr", "RjIOX59D"], "domain": "8oc7c1Ss", "namespaces": ["gHz8Eye9", "e05N5jWI", "iqxPHKEn"], "roleId": "iRj94JO1", "ssoCfg": {"googleKey": {"eR37cwpO": {}, "xxhrnywq": {}, "vJyfy9QL": {}}, "groupConfigs": [{"assignNamespaces": ["24V4nXcQ", "L6X9yKJP", "3EGPNfim"], "group": "yCuo5Nu4", "roleId": "eLhLxiVv"}, {"assignNamespaces": ["1l22m6RQ", "ber07REu", "9vrKRMUj"], "group": "Ha3FcW5e", "roleId": "gh2bWYGs"}, {"assignNamespaces": ["Ov00JJxs", "fiFAxa7K", "6e6hQlKz"], "group": "JyiCiVHS", "roleId": "TYDxQXIZ"}]}}], "Secret": "NsWgZbU6", "TeamID": "pPPy0hiH", "TokenAuthenticationType": "y7KZnlrW", "TokenClaimsMapping": {"4J0icSET": "KTfmZMnh", "vC56ThZM": "6GdJl0mQ", "Bz1W2Lfz": "QQ6J5ZAv"}, "TokenEndpoint": "qioVj39S", "UserInfoEndpoint": "wx83qXni", "UserInfoHTTPMethod": "S93fazyN", "googleAdminConsoleKey": "oXEVknRF", "scopes": ["PF4OM8WZ", "U5k90wuH", "LccsEdo6"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op UpdateThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'qmBm1Olh' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 145 'UpdateThirdPartyLoginPlatformCredentialV3' test.out

#- 146 UpdateThirdPartyLoginPlatformDomainV3
# body param: body
echo '{"affectedClientIDs": ["LAdPj5px", "5fMBO1TC", "Q2riQrZZ"], "assignedNamespaces": ["D8MeH93c", "xKooceM4", "fHHeoQY6"], "domain": "y0kiMUFw", "roleId": "zwcfH5Xf", "ssoCfg": {"googleKey": {"KryFcYUK": {}, "iRzpxrly": {}, "xNNTpuef": {}}, "groupConfigs": [{"assignNamespaces": ["Bdk11j3j", "CYgLdQ72", "59wckwAH"], "group": "627ZNfQG", "roleId": "i4iYzhuZ"}, {"assignNamespaces": ["Th6iEisS", "zOBKDI86", "nvuAzTxO"], "group": "3H3G2cIl", "roleId": "Iwroyw2L"}, {"assignNamespaces": ["bW36mcw6", "Y8GYRnj2", "2OS8XmQU"], "group": "29OgR65B", "roleId": "fN9KuR2x"}]}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op UpdateThirdPartyLoginPlatformDomainV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'YPqBlVSf' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 146 'UpdateThirdPartyLoginPlatformDomainV3' test.out

#- 147 DeleteThirdPartyLoginPlatformDomainV3
# body param: body
echo '{"domain": "M9TKs0Rc", "ssoGroups": ["IQt0Q6LU", "FJs1mcW8", "CNbU7KWv"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op DeleteThirdPartyLoginPlatformDomainV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'IGwe3vXM' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 147 'DeleteThirdPartyLoginPlatformDomainV3' test.out

#- 148 PartialUpdateThirdPartyLoginPlatformDomainV3
# body param: body
echo '{"affectedClientIDs": ["rtdBZnVx", "U47K9Int", "hPvzDHLj"], "assignedNamespaces": ["Mk9yYIMo", "Buxl9emJ", "BnKwHe6h"], "domain": "UZr4V5dd", "roleId": "8aiyYSTY", "ssoCfg": {"googleKey": {"UbbjhXXp": {}, "YTjsB4X6": {}, "L6y8sizO": {}}, "groupConfigs": [{"assignNamespaces": ["7XowjsmV", "154eCaEU", "ycKckCnx"], "group": "LKVRRWFo", "roleId": "oDluMjYh"}, {"assignNamespaces": ["Q64jlo9z", "E3gYNq07", "qdmT9Y1L"], "group": "G5mmxlsd", "roleId": "PN3NFDh3"}, {"assignNamespaces": ["ipf09hKM", "iWbwiYDx", "9Iht6lHG"], "group": "5UMrsYEH", "roleId": "jLNocjDw"}]}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PartialUpdateThirdPartyLoginPlatformDomainV3 \
    --namespace $AB_NAMESPACE \
    --platformId '6ibZFsiR' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 148 'PartialUpdateThirdPartyLoginPlatformDomainV3' test.out

#- 149 RetrieveSSOLoginPlatformCredential
$CLI_EXE \
    --sn iam \
    --op RetrieveSSOLoginPlatformCredential \
    --namespace $AB_NAMESPACE \
    --platformId 'Ra6zkV5Z' \
    > test.out 2>&1
eval_tap $? 149 'RetrieveSSOLoginPlatformCredential' test.out

#- 150 AddSSOLoginPlatformCredential
# body param: body
echo '{"acsUrl": "gfkh3xAg", "apiKey": "BtJ3yPQ6", "appId": "KwAXDjz1", "federationMetadataUrl": "iMpiZmFK", "isActive": false, "redirectUri": "CIZcOhLx", "secret": "mQEpawgK", "ssoUrl": "QOsxamZd"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AddSSOLoginPlatformCredential \
    --namespace $AB_NAMESPACE \
    --platformId 'W61fibSD' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 150 'AddSSOLoginPlatformCredential' test.out

#- 151 DeleteSSOLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op DeleteSSOLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'JLmcDj4W' \
    > test.out 2>&1
eval_tap $? 151 'DeleteSSOLoginPlatformCredentialV3' test.out

#- 152 UpdateSSOPlatformCredential
# body param: body
echo '{"acsUrl": "sdtPzZto", "apiKey": "XNXSk6A4", "appId": "ORgoGnGn", "federationMetadataUrl": "zfB4r53E", "isActive": false, "redirectUri": "Pg9wOGLu", "secret": "Zqy5E5Bi", "ssoUrl": "AnVMdzgU"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op UpdateSSOPlatformCredential \
    --namespace $AB_NAMESPACE \
    --platformId 'Ccnc3KLp' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 152 'UpdateSSOPlatformCredential' test.out

#- 153 AdminListUserIDByPlatformUserIDsV3
# body param: body
echo '{"platformUserIds": ["RaUCKvFQ", "rkAjBZwW", "UmFDsovT"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminListUserIDByPlatformUserIDsV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'qa30roy8' \
    --rawPID 'false' \
    --rawPUID 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 153 'AdminListUserIDByPlatformUserIDsV3' test.out

#- 154 AdminGetUserByPlatformUserIDV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserByPlatformUserIDV3 \
    --namespace $AB_NAMESPACE \
    --platformId '3wKUErk8' \
    --platformUserId 'QRYDOTbe' \
    --pidType 'a7UpBpLU' \
    > test.out 2>&1
eval_tap $? 154 'AdminGetUserByPlatformUserIDV3' test.out

#- 155 AdminGetProfileUpdateStrategyV3
$CLI_EXE \
    --sn iam \
    --op AdminGetProfileUpdateStrategyV3 \
    --namespace $AB_NAMESPACE \
    --field 'country' \
    > test.out 2>&1
eval_tap $? 155 'AdminGetProfileUpdateStrategyV3' test.out

#- 156 AdminUpdateProfileUpdateStrategyV3
# body param: body
echo '{"config": {"minimumAllowedInterval": 90}, "type": "BEpNeHiL"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateProfileUpdateStrategyV3 \
    --namespace $AB_NAMESPACE \
    --field 'username' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 156 'AdminUpdateProfileUpdateStrategyV3' test.out

#- 157 AdminGetRoleOverrideConfigV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleOverrideConfigV3 \
    --namespace $AB_NAMESPACE \
    --identity 'VIEW_ONLY' \
    > test.out 2>&1
eval_tap $? 157 'AdminGetRoleOverrideConfigV3' test.out

#- 158 AdminUpdateRoleOverrideConfigV3
# body param: body
echo '{"additions": [{"actions": [21, 11, 35], "resource": "T88lHdz3"}, {"actions": [80, 54, 51], "resource": "HM7A6I9s"}, {"actions": [88, 80, 9], "resource": "BAaJfiHJ"}], "exclusions": [{"actions": [33, 16, 5], "resource": "N3DyALX5"}, {"actions": [26, 85, 63], "resource": "jNMxbxQX"}, {"actions": [72, 10, 12], "resource": "EWWv7bre"}], "overrides": [{"actions": [57, 94, 18], "resource": "xy6a7cZN"}, {"actions": [3, 2, 96], "resource": "3JGte3eV"}, {"actions": [49, 60, 58], "resource": "qnaSKW5Q"}], "replacements": [{"replacement": {"actions": [58, 56, 30], "resource": "Bn52ZHwj"}, "target": "F6fIF2Nq"}, {"replacement": {"actions": [84, 93, 0], "resource": "wvBuXpef"}, "target": "OrjMfkG2"}, {"replacement": {"actions": [79, 45, 64], "resource": "KXzxUuie"}, "target": "Akt2UYOy"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateRoleOverrideConfigV3 \
    --namespace $AB_NAMESPACE \
    --identity 'GAME_ADMIN' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 158 'AdminUpdateRoleOverrideConfigV3' test.out

#- 159 AdminGetRoleSourceV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleSourceV3 \
    --namespace $AB_NAMESPACE \
    --identity 'GAME_ADMIN' \
    > test.out 2>&1
eval_tap $? 159 'AdminGetRoleSourceV3' test.out

#- 160 AdminChangeRoleOverrideConfigStatusV3
# body param: body
echo '{"active": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminChangeRoleOverrideConfigStatusV3 \
    --namespace $AB_NAMESPACE \
    --identity 'USER' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 160 'AdminChangeRoleOverrideConfigStatusV3' test.out

#- 161 AdminGetRoleNamespacePermissionV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleNamespacePermissionV3 \
    --namespace $AB_NAMESPACE \
    --roleId '24u8GRyL' \
    > test.out 2>&1
eval_tap $? 161 'AdminGetRoleNamespacePermissionV3' test.out

#- 162 GetAdminUsersByRoleIdV3
$CLI_EXE \
    --sn iam \
    --op GetAdminUsersByRoleIdV3 \
    --namespace $AB_NAMESPACE \
    --roleId '2RjlL14R' \
    --after '70' \
    --before '25' \
    --limit '25' \
    > test.out 2>&1
eval_tap $? 162 'GetAdminUsersByRoleIdV3' test.out

#- 163 AdminQueryTagV3
$CLI_EXE \
    --sn iam \
    --op AdminQueryTagV3 \
    --namespace $AB_NAMESPACE \
    --limit '13' \
    --offset '64' \
    --tagName 'GiGT7Dlc' \
    > test.out 2>&1
eval_tap $? 163 'AdminQueryTagV3' test.out

#- 164 AdminCreateTagV3
# body param: body
echo '{"tagName": "8WyfwNN7"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminCreateTagV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 164 'AdminCreateTagV3' test.out

#- 165 AdminUpdateTagV3
# body param: body
echo '{"tagName": "gSLwXU1e"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateTagV3 \
    --namespace $AB_NAMESPACE \
    --tagId 'pIDCMTH7' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 165 'AdminUpdateTagV3' test.out

#- 166 AdminDeleteTagV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteTagV3 \
    --namespace $AB_NAMESPACE \
    --tagId 'Rofw29ha' \
    > test.out 2>&1
eval_tap $? 166 'AdminDeleteTagV3' test.out

#- 167 AdminGetUserByEmailAddressV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserByEmailAddressV3 \
    --namespace $AB_NAMESPACE \
    --emailAddress '8lVXSM0P' \
    > test.out 2>&1
eval_tap $? 167 'AdminGetUserByEmailAddressV3' test.out

#- 168 AdminBulkUpdateUsersV3
# body param: body
echo '{"updateRequest": {"skipLoginQueue": true}, "userIds": ["6H2HMmk9", "nWXkh1DW", "x96lw2Wn"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBulkUpdateUsersV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 168 'AdminBulkUpdateUsersV3' test.out

#- 169 AdminGetBulkUserBanV3
# body param: body
echo '{"bulkUserId": ["kmh4aLxK", "1OGzX3pP", "DA90ntIf"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminGetBulkUserBanV3 \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --banType '5top2bbE' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 169 'AdminGetBulkUserBanV3' test.out

#- 170 AdminListUserIDByUserIDsV3
# body param: body
echo '{"findByPublisherNamespace": true, "userIds": ["7uqxUDeN", "yI89w2cQ", "s53abAKx"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminListUserIDByUserIDsV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 170 'AdminListUserIDByUserIDsV3' test.out

#- 171 AdminBulkGetUsersPlatform
# body param: body
echo '{"userIds": ["HX2qfG76", "jZAsVZ1D", "3Y2Nv28W"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBulkGetUsersPlatform \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 171 'AdminBulkGetUsersPlatform' test.out

#- 172 AdminCursorGetUserV3
# body param: body
echo '{"cursor": {"cursorTime": "SuD39F3F", "userId": "hZ8JsUvG"}, "fields": ["KlgdbC8A", "pjgn3IFM", "sbHnkmAO"], "limit": 44}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminCursorGetUserV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 172 'AdminCursorGetUserV3' test.out

#- 173 AdminInviteUserV3
# body param: body
echo '{"emailAddresses": ["KodRl7Z6", "mZEVliKJ", "UFTKToox"], "isAdmin": true, "languageTag": "5dO6ujnm", "namespace": "KrwVUJwV", "roles": ["6DlKHXBg", "tnJkClym", "SzndcET8"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminInviteUserV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 173 'AdminInviteUserV3' test.out

#- 174 AdminQueryThirdPlatformLinkHistoryV3
$CLI_EXE \
    --sn iam \
    --op AdminQueryThirdPlatformLinkHistoryV3 \
    --namespace $AB_NAMESPACE \
    --limit '2' \
    --offset '0' \
    --platformUserId 'Bfcp7qj7' \
    --platformId '4QgV9j23' \
    > test.out 2>&1
eval_tap $? 174 'AdminQueryThirdPlatformLinkHistoryV3' test.out

#- 175 AdminListUsersV3
$CLI_EXE \
    --sn iam \
    --op AdminListUsersV3 \
    --namespace $AB_NAMESPACE \
    --limit '53' \
    --offset '23' \
    > test.out 2>&1
eval_tap $? 175 'AdminListUsersV3' test.out

#- 176 AdminSearchUserV3
$CLI_EXE \
    --sn iam \
    --op AdminSearchUserV3 \
    --namespace $AB_NAMESPACE \
    --by 'azF2hLdc' \
    --endDate 'ZWQK4xWt' \
    --includeTotal 'true' \
    --limit '26' \
    --offset '23' \
    --platformBy 'PKf6yEej' \
    --platformId 'mTWaSGpC' \
    --query 'wdWkhcGB' \
    --roleIds 'xcNno4Ej' \
    --skipLoginQueue 'false' \
    --startDate 'gGylKQQ2' \
    --tagIds 'GZoCY3gL' \
    --testAccount 'false' \
    > test.out 2>&1
eval_tap $? 176 'AdminSearchUserV3' test.out

#- 177 AdminGetBulkUserByEmailAddressV3
# body param: body
echo '{"listEmailAddressRequest": ["8ImfkyRN", "7aHQ0oZK", "VOBLrAn8"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminGetBulkUserByEmailAddressV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 177 'AdminGetBulkUserByEmailAddressV3' test.out

#- 178 AdminGetUserByUserIdV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserByUserIdV3 \
    --namespace $AB_NAMESPACE \
    --userId '8ghLQjlS' \
    > test.out 2>&1
eval_tap $? 178 'AdminGetUserByUserIdV3' test.out

#- 179 AdminUpdateUserV3
# body param: body
echo '{"avatarUrl": "3dZUiIFG", "country": "QAk7rbwd", "dateOfBirth": "esOfcNxv", "displayName": "Smn7nEvl", "languageTag": "yKY1VfOe", "skipLoginQueue": false, "tags": ["o7XBqVAJ", "jtDp3XDG", "RCm9z1ad"], "uniqueDisplayName": "itLnzKVU", "userName": "GZvBlw00"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserV3 \
    --namespace $AB_NAMESPACE \
    --userId '5uRwc0li' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 179 'AdminUpdateUserV3' test.out

#- 180 AdminGetUserBanV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserBanV3 \
    --namespace $AB_NAMESPACE \
    --userId 'tUpkqeOI' \
    --activeOnly 'false' \
    --after 'Wep5cPid' \
    --before 'skjMZ5pu' \
    --limit '51' \
    > test.out 2>&1
eval_tap $? 180 'AdminGetUserBanV3' test.out

#- 181 AdminBanUserV3
# body param: body
echo '{"ban": "FFKwojKN", "comment": "2uWgqDVg", "endDate": "wuJ4LVgx", "reason": "QjcePT2r", "skipNotif": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBanUserV3 \
    --namespace $AB_NAMESPACE \
    --userId 'IRyHCene' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 181 'AdminBanUserV3' test.out

#- 182 AdminGetUserBanSummaryV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserBanSummaryV3 \
    --namespace $AB_NAMESPACE \
    --userId 'LcAo4iw6' \
    > test.out 2>&1
eval_tap $? 182 'AdminGetUserBanSummaryV3' test.out

#- 183 AdminUpdateUserBanV3
# body param: body
echo '{"enabled": true, "skipNotif": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserBanV3 \
    --banId 'MbF0LaWG' \
    --namespace $AB_NAMESPACE \
    --userId '6XreIZyX' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 183 'AdminUpdateUserBanV3' test.out

#- 184 AdminSendVerificationCodeV3
# body param: body
echo '{"context": "IJjHPLpe", "emailAddress": "PHUJ6ZGf", "languageTag": "VOVpvIqy", "upgradeToken": "BsWieucB"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminSendVerificationCodeV3 \
    --namespace $AB_NAMESPACE \
    --userId '8WSxbqAv' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 184 'AdminSendVerificationCodeV3' test.out

#- 185 AdminVerifyAccountV3
# body param: body
echo '{"Code": "woajeyfA", "ContactType": "c1EOuuCS", "LanguageTag": "YwSkgFXM", "validateOnly": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminVerifyAccountV3 \
    --namespace $AB_NAMESPACE \
    --userId 'd2VKmxcc' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 185 'AdminVerifyAccountV3' test.out

#- 186 GetUserVerificationCode
$CLI_EXE \
    --sn iam \
    --op GetUserVerificationCode \
    --namespace $AB_NAMESPACE \
    --userId 'kT0ZO6rT' \
    > test.out 2>&1
eval_tap $? 186 'GetUserVerificationCode' test.out

#- 187 AdminGetUserDeletionStatusV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserDeletionStatusV3 \
    --namespace $AB_NAMESPACE \
    --userId 'CS71oxJg' \
    > test.out 2>&1
eval_tap $? 187 'AdminGetUserDeletionStatusV3' test.out

#- 188 AdminUpdateUserDeletionStatusV3
# body param: body
echo '{"deletionDate": 67, "enabled": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserDeletionStatusV3 \
    --namespace $AB_NAMESPACE \
    --userId 'UXjQVUIz' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 188 'AdminUpdateUserDeletionStatusV3' test.out

#- 189 AdminListUserAllPlatformAccountsDistinctV3
$CLI_EXE \
    --sn iam \
    --op AdminListUserAllPlatformAccountsDistinctV3 \
    --namespace $AB_NAMESPACE \
    --userId '8TAwd1tb' \
    > test.out 2>&1
eval_tap $? 189 'AdminListUserAllPlatformAccountsDistinctV3' test.out

#- 190 AdminUpgradeHeadlessAccountV3
# body param: body
echo '{"code": "aiFyc1WZ", "country": "2eUOaFMG", "dateOfBirth": "Xdz2ffA6", "displayName": "a76jTTAT", "emailAddress": "Rbyu53uZ", "password": "jfaEZEaU", "uniqueDisplayName": "uuLbBDvy", "validateOnly": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpgradeHeadlessAccountV3 \
    --namespace $AB_NAMESPACE \
    --userId 'n7OXQxOv' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 190 'AdminUpgradeHeadlessAccountV3' test.out

#- 191 AdminDeleteUserInformationV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserInformationV3 \
    --namespace $AB_NAMESPACE \
    --userId 'gw3wc9Pm' \
    > test.out 2>&1
eval_tap $? 191 'AdminDeleteUserInformationV3' test.out

#- 192 AdminGetUserLoginHistoriesV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserLoginHistoriesV3 \
    --namespace $AB_NAMESPACE \
    --userId 'uJ8wGYkx' \
    --after '0.3988455676171332' \
    --before '0.5777395426446464' \
    --limit '40' \
    > test.out 2>&1
eval_tap $? 192 'AdminGetUserLoginHistoriesV3' test.out

#- 193 AdminResetPasswordV3
# body param: body
echo '{"languageTag": "BgsbNEr7", "mfaToken": "jsc8YNlF", "newPassword": "QLXug5Ur", "oldPassword": "Jl5MOf3r"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminResetPasswordV3 \
    --namespace $AB_NAMESPACE \
    --userId '0wmayHgG' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 193 'AdminResetPasswordV3' test.out

#- 194 AdminUpdateUserPermissionV3
# body param: body
echo '{"Permissions": [{"Action": 90, "Resource": "ty7lCCr3", "SchedAction": 44, "SchedCron": "4DqjcIhu", "SchedRange": ["YeQ3ojMV", "EsaRp97o", "OjCkLRx3"]}, {"Action": 87, "Resource": "jlzR6bnR", "SchedAction": 54, "SchedCron": "wu036ehk", "SchedRange": ["QH6BrjRm", "55lakc9w", "UmckfBJ6"]}, {"Action": 11, "Resource": "JQWDq8dg", "SchedAction": 59, "SchedCron": "2GzC3Ew0", "SchedRange": ["4liOulQy", "6OOpc4rj", "KkdQiW8F"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserPermissionV3 \
    --namespace $AB_NAMESPACE \
    --userId 'aj07n3tp' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 194 'AdminUpdateUserPermissionV3' test.out

#- 195 AdminAddUserPermissionsV3
# body param: body
echo '{"Permissions": [{"Action": 97, "Resource": "IqHUqE0w", "SchedAction": 5, "SchedCron": "AvWRHuat", "SchedRange": ["GXPq5aYq", "etv2SZRH", "hgAYJTAl"]}, {"Action": 40, "Resource": "QoD2XZPW", "SchedAction": 89, "SchedCron": "Wf08jxUZ", "SchedRange": ["HHX9hn3P", "UbL7GPhl", "PiTORahe"]}, {"Action": 62, "Resource": "y2NdDSis", "SchedAction": 86, "SchedCron": "9PBSTtxY", "SchedRange": ["Mb8nEqUf", "PD65FlA7", "kVRdMaOK"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddUserPermissionsV3 \
    --namespace $AB_NAMESPACE \
    --userId 'PipkKce2' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 195 'AdminAddUserPermissionsV3' test.out

#- 196 AdminDeleteUserPermissionBulkV3
# body param: body
echo '[{"Action": 56, "Resource": "PE3z2Ck9"}, {"Action": 73, "Resource": "KpQvrsKE"}, {"Action": 50, "Resource": "uq08gRFO"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserPermissionBulkV3 \
    --namespace $AB_NAMESPACE \
    --userId 'hFyvJLhP' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 196 'AdminDeleteUserPermissionBulkV3' test.out

#- 197 AdminDeleteUserPermissionV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserPermissionV3 \
    --action '95' \
    --namespace $AB_NAMESPACE \
    --resource '4BlpjSnu' \
    --userId 'K4Z57q00' \
    > test.out 2>&1
eval_tap $? 197 'AdminDeleteUserPermissionV3' test.out

#- 198 AdminGetUserPlatformAccountsV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserPlatformAccountsV3 \
    --namespace $AB_NAMESPACE \
    --userId 'wo6lB27u' \
    --after 'SGmNgdwr' \
    --before 'cwJYQfcD' \
    --limit '11' \
    --platformId 'r33vNZla' \
    --targetNamespace 'Qqum9qgN' \
    > test.out 2>&1
eval_tap $? 198 'AdminGetUserPlatformAccountsV3' test.out

#- 199 AdminListAllDistinctPlatformAccountsV3
$CLI_EXE \
    --sn iam \
    --op AdminListAllDistinctPlatformAccountsV3 \
    --namespace $AB_NAMESPACE \
    --userId 'vpKtFwiL' \
    --status 'pRnpo2mu' \
    > test.out 2>&1
eval_tap $? 199 'AdminListAllDistinctPlatformAccountsV3' test.out

#- 200 AdminGetListJusticePlatformAccounts
$CLI_EXE \
    --sn iam \
    --op AdminGetListJusticePlatformAccounts \
    --namespace $AB_NAMESPACE \
    --userId 'E2nKbnOr' \
    > test.out 2>&1
eval_tap $? 200 'AdminGetListJusticePlatformAccounts' test.out

#- 201 AdminGetUserMapping
$CLI_EXE \
    --sn iam \
    --op AdminGetUserMapping \
    --namespace $AB_NAMESPACE \
    --targetNamespace 'ItAwUnrz' \
    --userId 'MbK81syA' \
    > test.out 2>&1
eval_tap $? 201 'AdminGetUserMapping' test.out

#- 202 AdminCreateJusticeUser
$CLI_EXE \
    --sn iam \
    --op AdminCreateJusticeUser \
    --namespace $AB_NAMESPACE \
    --targetNamespace 'zj1Afzdp' \
    --userId '7MFLeBKC' \
    > test.out 2>&1
eval_tap $? 202 'AdminCreateJusticeUser' test.out

#- 203 AdminLinkPlatformAccount
# body param: body
echo '{"platformId": "ijPPX3PZ", "platformUserId": "iglRKupS"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminLinkPlatformAccount \
    --namespace $AB_NAMESPACE \
    --userId 'Gnprq9Lg' \
    --skipConflict 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 203 'AdminLinkPlatformAccount' test.out

#- 204 AdminGetUserLinkHistoriesV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserLinkHistoriesV3 \
    --namespace $AB_NAMESPACE \
    --userId 'u2QEZrbs' \
    --platformId 'pm2DjgXl' \
    > test.out 2>&1
eval_tap $? 204 'AdminGetUserLinkHistoriesV3' test.out

#- 205 AdminPlatformUnlinkV3
eval_tap 0 205 'AdminPlatformUnlinkV3 # SKIP deprecated' test.out

#- 206 AdminPlatformUnlinkAllV3
$CLI_EXE \
    --sn iam \
    --op AdminPlatformUnlinkAllV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'jvMMyubj' \
    --userId 'petkhAcU' \
    > test.out 2>&1
eval_tap $? 206 'AdminPlatformUnlinkAllV3' test.out

#- 207 AdminPlatformLinkV3
$CLI_EXE \
    --sn iam \
    --op AdminPlatformLinkV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'DDgNB3Jc' \
    --userId 'zm57JrdN' \
    --ticket 'xXRpYSxJ' \
    > test.out 2>&1
eval_tap $? 207 'AdminPlatformLinkV3' test.out

#- 208 AdminDeleteUserLinkingHistoryByPlatformIDV3
eval_tap 0 208 'AdminDeleteUserLinkingHistoryByPlatformIDV3 # SKIP deprecated' test.out

#- 209 AdminDeleteUserLinkingRestrictionByPlatformIDV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserLinkingRestrictionByPlatformIDV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'IZvyVAg8' \
    --userId 'BBSTDfDA' \
    > test.out 2>&1
eval_tap $? 209 'AdminDeleteUserLinkingRestrictionByPlatformIDV3' test.out

#- 210 AdminGetThirdPartyPlatformTokenLinkStatusV3
$CLI_EXE \
    --sn iam \
    --op AdminGetThirdPartyPlatformTokenLinkStatusV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'je5PeO76' \
    --userId 'ELAeGtEa' \
    --platformToken 'DjozkTu2' \
    > test.out 2>&1
eval_tap $? 210 'AdminGetThirdPartyPlatformTokenLinkStatusV3' test.out

#- 211 AdminGetUserSinglePlatformAccount
$CLI_EXE \
    --sn iam \
    --op AdminGetUserSinglePlatformAccount \
    --namespace $AB_NAMESPACE \
    --platformId '3DUMPRN9' \
    --userId 'a3mcilSi' \
    --crossNamespace 'true' \
    > test.out 2>&1
eval_tap $? 211 'AdminGetUserSinglePlatformAccount' test.out

#- 212 AdminDeleteUserRolesV3
# body param: body
echo '["P5hJ9aY0", "4cF9Xp28", "KCxLNCPT"]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserRolesV3 \
    --namespace $AB_NAMESPACE \
    --userId 'JRxEuNXl' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 212 'AdminDeleteUserRolesV3' test.out

#- 213 AdminSaveUserRoleV3
# body param: body
echo '[{"namespace": "K7HUORV2", "roleId": "VVtTwgnx"}, {"namespace": "h6FhblX8", "roleId": "T6O6yuxu"}, {"namespace": "daQVBWvD", "roleId": "QC26iafJ"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminSaveUserRoleV3 \
    --namespace $AB_NAMESPACE \
    --userId 'I0sH9IMM' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 213 'AdminSaveUserRoleV3' test.out

#- 214 AdminAddUserRoleV3
$CLI_EXE \
    --sn iam \
    --op AdminAddUserRoleV3 \
    --namespace $AB_NAMESPACE \
    --roleId '63QStUwR' \
    --userId '1mXEyvFE' \
    > test.out 2>&1
eval_tap $? 214 'AdminAddUserRoleV3' test.out

#- 215 AdminDeleteUserRoleV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserRoleV3 \
    --namespace $AB_NAMESPACE \
    --roleId '3vzcY7DR' \
    --userId 'qfftzjOz' \
    > test.out 2>&1
eval_tap $? 215 'AdminDeleteUserRoleV3' test.out

#- 216 AdminGetUserStateByUserIdV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserStateByUserIdV3 \
    --namespace $AB_NAMESPACE \
    --userId 'UrFqslcc' \
    > test.out 2>&1
eval_tap $? 216 'AdminGetUserStateByUserIdV3' test.out

#- 217 AdminUpdateUserStatusV3
# body param: body
echo '{"enabled": false, "reason": "SB74Azla"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserStatusV3 \
    --namespace $AB_NAMESPACE \
    --userId 'DAvBh4SK' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 217 'AdminUpdateUserStatusV3' test.out

#- 218 AdminTrustlyUpdateUserIdentity
# body param: body
echo '{"emailAddress": "SfbVw3lA", "password": "URdod45h"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminTrustlyUpdateUserIdentity \
    --namespace $AB_NAMESPACE \
    --userId 'NlNr1kmr' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 218 'AdminTrustlyUpdateUserIdentity' test.out

#- 219 AdminVerifyUserWithoutVerificationCodeV3
$CLI_EXE \
    --sn iam \
    --op AdminVerifyUserWithoutVerificationCodeV3 \
    --namespace $AB_NAMESPACE \
    --userId 'KeeNxMzA' \
    > test.out 2>&1
eval_tap $? 219 'AdminVerifyUserWithoutVerificationCodeV3' test.out

#- 220 AdminUpdateClientSecretV3
# body param: body
echo '{"newSecret": "mEePh0Ke"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateClientSecretV3 \
    --clientId 'PFzepJja' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 220 'AdminUpdateClientSecretV3' test.out

#- 221 AdminCheckThirdPartyLoginPlatformAvailabilityV3
$CLI_EXE \
    --sn iam \
    --op AdminCheckThirdPartyLoginPlatformAvailabilityV3 \
    --platformId 'x5s5Fael' \
    > test.out 2>&1
eval_tap $? 221 'AdminCheckThirdPartyLoginPlatformAvailabilityV3' test.out

#- 222 AdminGetRolesV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRolesV3 \
    --after '6LizUNf0' \
    --before 'RF89Vrr7' \
    --isWildcard 'true' \
    --limit '26' \
    > test.out 2>&1
eval_tap $? 222 'AdminGetRolesV3' test.out

#- 223 AdminCreateRoleV3
# body param: body
echo '{"adminRole": true, "deletable": true, "isWildcard": true, "managers": [{"displayName": "44XqFZcp", "namespace": "v7xIPXag", "userId": "mYWQUy73"}, {"displayName": "Uqy5VgXo", "namespace": "y8AOrCWs", "userId": "aB0obZsp"}, {"displayName": "6PoDDdsp", "namespace": "2KruHAgL", "userId": "99Tq2Rhd"}], "members": [{"displayName": "lgknAHaz", "namespace": "xDh2uMDA", "userId": "js8P0cSm"}, {"displayName": "nqR1FKFW", "namespace": "5wYKC46C", "userId": "ZU77xPua"}, {"displayName": "Vt9Z9nJa", "namespace": "EyPfQpET", "userId": "EQzTHJSc"}], "permissions": [{"action": 18, "resource": "QrRHhpoB", "schedAction": 36, "schedCron": "V8ITzcZI", "schedRange": ["cbhM5dsE", "ruCUYhqA", "zftqYeyx"]}, {"action": 12, "resource": "CDYdZG5k", "schedAction": 3, "schedCron": "RjD8AY71", "schedRange": ["2DkfEC3C", "TgT58G72", "bt1cT0yd"]}, {"action": 31, "resource": "ugXhbNC6", "schedAction": 33, "schedCron": "m1rNbVtW", "schedRange": ["xop4shXK", "OTTyfruO", "0dbYmDMg"]}], "roleName": "sgKsR1Kp"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminCreateRoleV3 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 223 'AdminCreateRoleV3' test.out

#- 224 AdminGetRoleV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleV3 \
    --roleId 'IuUnApVr' \
    > test.out 2>&1
eval_tap $? 224 'AdminGetRoleV3' test.out

#- 225 AdminDeleteRoleV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteRoleV3 \
    --roleId 'J6ntkzNP' \
    > test.out 2>&1
eval_tap $? 225 'AdminDeleteRoleV3' test.out

#- 226 AdminUpdateRoleV3
# body param: body
echo '{"deletable": true, "isWildcard": true, "roleName": "8AD8KMsO"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateRoleV3 \
    --roleId '5q6BXrpc' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 226 'AdminUpdateRoleV3' test.out

#- 227 AdminGetRoleAdminStatusV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleAdminStatusV3 \
    --roleId '2M0fOxVE' \
    > test.out 2>&1
eval_tap $? 227 'AdminGetRoleAdminStatusV3' test.out

#- 228 AdminUpdateAdminRoleStatusV3
$CLI_EXE \
    --sn iam \
    --op AdminUpdateAdminRoleStatusV3 \
    --roleId '3iFHxCip' \
    > test.out 2>&1
eval_tap $? 228 'AdminUpdateAdminRoleStatusV3' test.out

#- 229 AdminRemoveRoleAdminV3
$CLI_EXE \
    --sn iam \
    --op AdminRemoveRoleAdminV3 \
    --roleId 'LhgcsxGH' \
    > test.out 2>&1
eval_tap $? 229 'AdminRemoveRoleAdminV3' test.out

#- 230 AdminGetRoleManagersV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleManagersV3 \
    --roleId 'CSFECWYR' \
    --after 'ecmT2gbB' \
    --before '04giwOwT' \
    --limit '98' \
    > test.out 2>&1
eval_tap $? 230 'AdminGetRoleManagersV3' test.out

#- 231 AdminAddRoleManagersV3
# body param: body
echo '{"managers": [{"displayName": "5zrwRCve", "namespace": "6tbduHY2", "userId": "wWj9lKyO"}, {"displayName": "4ZH6nuEX", "namespace": "bhDsRiCc", "userId": "ywBjsjlt"}, {"displayName": "Kh5zrLDw", "namespace": "niwKLjKF", "userId": "rb6thHMA"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddRoleManagersV3 \
    --roleId 'Mmd0PQWe' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 231 'AdminAddRoleManagersV3' test.out

#- 232 AdminRemoveRoleManagersV3
# body param: body
echo '{"managers": [{"displayName": "NkxfTxDd", "namespace": "vTL4xoV6", "userId": "HrpZcIa8"}, {"displayName": "UASHsqUb", "namespace": "ww4TpN32", "userId": "7tgUn0n5"}, {"displayName": "MvvjF31J", "namespace": "id8U38Ia", "userId": "mvdffR8O"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminRemoveRoleManagersV3 \
    --roleId 'NNsmImGy' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 232 'AdminRemoveRoleManagersV3' test.out

#- 233 AdminGetRoleMembersV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleMembersV3 \
    --roleId 'hAr6609R' \
    --after 'jYH2VT6b' \
    --before 'rApt5Qb4' \
    --limit '15' \
    > test.out 2>&1
eval_tap $? 233 'AdminGetRoleMembersV3' test.out

#- 234 AdminAddRoleMembersV3
# body param: body
echo '{"members": [{"displayName": "0OKMHsMA", "namespace": "vDWScvHc", "userId": "8jlgo5DT"}, {"displayName": "rKmbgmLk", "namespace": "2jOw1BQh", "userId": "RflNUNkq"}, {"displayName": "ZMBT9qxC", "namespace": "RsV9PYOK", "userId": "3qrH6ber"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddRoleMembersV3 \
    --roleId 'E40Z6nlA' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 234 'AdminAddRoleMembersV3' test.out

#- 235 AdminRemoveRoleMembersV3
eval_tap 0 235 'AdminRemoveRoleMembersV3 # SKIP deprecated' test.out

#- 236 AdminUpdateRolePermissionsV3
# body param: body
echo '{"permissions": [{"action": 44, "resource": "TcobPOoh", "schedAction": 29, "schedCron": "VwPEli2C", "schedRange": ["pLweCGeL", "5IlGTGQc", "DlfdSvRu"]}, {"action": 31, "resource": "Uy6Gs1SW", "schedAction": 93, "schedCron": "hXEKAw89", "schedRange": ["6c2TRdX2", "TIfrU5Ta", "xQJSoF9z"]}, {"action": 45, "resource": "l54u0guE", "schedAction": 37, "schedCron": "DncxdKAj", "schedRange": ["MzR8QNOR", "xv7eCquG", "znwUw0pc"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateRolePermissionsV3 \
    --roleId '6VV06Pbi' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 236 'AdminUpdateRolePermissionsV3' test.out

#- 237 AdminAddRolePermissionsV3
# body param: body
echo '{"permissions": [{"action": 41, "resource": "bZVc7jhs", "schedAction": 32, "schedCron": "hXghzHjA", "schedRange": ["8OGaWqYv", "EdpfK4AB", "X3s2NU81"]}, {"action": 48, "resource": "3Fndemvq", "schedAction": 66, "schedCron": "dIXuPuDs", "schedRange": ["uGb11KeV", "JWrgVy8v", "VVFqtsGL"]}, {"action": 38, "resource": "aejAfbwt", "schedAction": 93, "schedCron": "2pUDmg1t", "schedRange": ["hUYu0jSQ", "o146W17N", "E8nn0pCl"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddRolePermissionsV3 \
    --roleId '4OB898bV' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 237 'AdminAddRolePermissionsV3' test.out

#- 238 AdminDeleteRolePermissionsV3
# body param: body
echo '["zsREy43X", "YihchhzN", "FRE34Ya5"]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDeleteRolePermissionsV3 \
    --roleId 'erS8bUeB' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 238 'AdminDeleteRolePermissionsV3' test.out

#- 239 AdminDeleteRolePermissionV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteRolePermissionV3 \
    --action '88' \
    --resource '5jgVsyNF' \
    --roleId 'P5R8iYiz' \
    > test.out 2>&1
eval_tap $? 239 'AdminDeleteRolePermissionV3' test.out

#- 240 AdminGetMyUserV3
$CLI_EXE \
    --sn iam \
    --op AdminGetMyUserV3 \
    > test.out 2>&1
eval_tap $? 240 'AdminGetMyUserV3' test.out

#- 241 UserAuthenticationV3
$CLI_EXE \
    --sn iam \
    --op UserAuthenticationV3 \
    --client_id 'x8jG1ydU' \
    --extend_exp 'false' \
    --redirect_uri 'E9nNdS06' \
    --password 'YZfYZq48' \
    --request_id 'leFcEW3h' \
    --user_name '5KSY0xC0' \
    > test.out 2>&1
eval_tap $? 241 'UserAuthenticationV3' test.out

#- 242 AuthenticationWithPlatformLinkV3
$CLI_EXE \
    --sn iam \
    --op AuthenticationWithPlatformLinkV3 \
    --extend_exp 'true' \
    --client_id 'soJru0nS' \
    --linkingToken '9NvO2ASh' \
    --password 'NafPBpQz' \
    --username 'jgZ1RbOZ' \
    > test.out 2>&1
eval_tap $? 242 'AuthenticationWithPlatformLinkV3' test.out

#- 243 AuthenticateAndLinkForwardV3
$CLI_EXE \
    --sn iam \
    --op AuthenticateAndLinkForwardV3 \
    --extend_exp 'false' \
    --client_id 'ZSquLnXG' \
    --linkingToken 'g3ouOe72' \
    --password 'OfNZiEVu' \
    --username 'QZicFqyN' \
    > test.out 2>&1
eval_tap $? 243 'AuthenticateAndLinkForwardV3' test.out

#- 244 PublicGetSystemConfigV3
$CLI_EXE \
    --sn iam \
    --op PublicGetSystemConfigV3 \
    > test.out 2>&1
eval_tap $? 244 'PublicGetSystemConfigV3' test.out

#- 245 GenerateTokenByNewHeadlessAccountV3
$CLI_EXE \
    --sn iam \
    --op GenerateTokenByNewHeadlessAccountV3 \
    --additionalData 'EDxP4rAO' \
    --extend_exp 'true' \
    --linkingToken 'BMT3gc0b' \
    > test.out 2>&1
eval_tap $? 245 'GenerateTokenByNewHeadlessAccountV3' test.out

#- 246 RequestOneTimeLinkingCodeV3
$CLI_EXE \
    --sn iam \
    --op RequestOneTimeLinkingCodeV3 \
    --redirectUri 'k6dotTbA' \
    --state 'zn6hvgs4' \
    --platformId 'xL1ypqV6' \
    > test.out 2>&1
eval_tap $? 246 'RequestOneTimeLinkingCodeV3' test.out

#- 247 ValidateOneTimeLinkingCodeV3
$CLI_EXE \
    --sn iam \
    --op ValidateOneTimeLinkingCodeV3 \
    --oneTimeLinkCode 'R3yyrJEr' \
    > test.out 2>&1
eval_tap $? 247 'ValidateOneTimeLinkingCodeV3' test.out

#- 248 RequestTokenByOneTimeLinkCodeResponseV3
$CLI_EXE \
    --sn iam \
    --op RequestTokenByOneTimeLinkCodeResponseV3 \
    --additionalData 'C9AFHrVc' \
    --isTransient 'true' \
    --client_id 'TWrSaRa0' \
    --oneTimeLinkCode '948fkgKU' \
    > test.out 2>&1
eval_tap $? 248 'RequestTokenByOneTimeLinkCodeResponseV3' test.out

#- 249 GetCountryLocationV3
$CLI_EXE \
    --sn iam \
    --op GetCountryLocationV3 \
    > test.out 2>&1
eval_tap $? 249 'GetCountryLocationV3' test.out

#- 250 Logout
$CLI_EXE \
    --sn iam \
    --op Logout \
    > test.out 2>&1
eval_tap $? 250 'Logout' test.out

#- 251 RequestTokenExchangeCodeV3
$CLI_EXE \
    --sn iam \
    --op RequestTokenExchangeCodeV3 \
    --namespace $AB_NAMESPACE \
    --codeChallenge 'nx3p301i' \
    --codeChallengeMethod 'S256' \
    --client_id '6s9lreru' \
    > test.out 2>&1
eval_tap $? 251 'RequestTokenExchangeCodeV3' test.out

#- 252 AdminRetrieveUserThirdPartyPlatformTokenV3
$CLI_EXE \
    --sn iam \
    --op AdminRetrieveUserThirdPartyPlatformTokenV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'OLKok7Q1' \
    --userId 'A3I0QYY5' \
    --platformUserId 'oPgyLIz2' \
    > test.out 2>&1
eval_tap $? 252 'AdminRetrieveUserThirdPartyPlatformTokenV3' test.out

#- 253 RevokeUserV3
$CLI_EXE \
    --sn iam \
    --op RevokeUserV3 \
    --namespace $AB_NAMESPACE \
    --userId 'ZUFCHsbK' \
    --includeGameNamespace 'false' \
    > test.out 2>&1
eval_tap $? 253 'RevokeUserV3' test.out

#- 254 AuthorizeV3
$CLI_EXE \
    --sn iam \
    --op AuthorizeV3 \
    --blockedPlatformId 'IQz33W0q' \
    --codeChallenge 'K05cu6X4' \
    --codeChallengeMethod 'plain' \
    --createHeadless 'false' \
    --loginWebBased 'true' \
    --nonce 'raRPrNC5' \
    --oneTimeLinkCode '1gafmvFS' \
    --redirectUri 'mUPKbmCD' \
    --scope 'dnGZa3uZ' \
    --state 'Y1Jwcocf' \
    --targetAuthPage 'DpUfS1cf' \
    --useRedirectUriAsLoginUrlWhenLocked 'true' \
    --clientId 'bCwQITwF' \
    --responseType 'code' \
    > test.out 2>&1
eval_tap $? 254 'AuthorizeV3' test.out

#- 255 TokenIntrospectionV3
$CLI_EXE \
    --sn iam \
    --op TokenIntrospectionV3 \
    --token '7uYPFGp3' \
    > test.out 2>&1
eval_tap $? 255 'TokenIntrospectionV3' test.out

#- 256 GetJWKSV3
$CLI_EXE \
    --sn iam \
    --op GetJWKSV3 \
    > test.out 2>&1
eval_tap $? 256 'GetJWKSV3' test.out

#- 257 SendMFAAuthenticationCode
$CLI_EXE \
    --sn iam \
    --op SendMFAAuthenticationCode \
    --clientId 'PTyM5yDm' \
    --factor 'uw14u1xh' \
    --mfaToken 'tbOS5jo1' \
    > test.out 2>&1
eval_tap $? 257 'SendMFAAuthenticationCode' test.out

#- 258 Change2faMethod
$CLI_EXE \
    --sn iam \
    --op Change2faMethod \
    --factor 'Dy8SHeda' \
    --mfaToken 'FwpgSTeq' \
    > test.out 2>&1
eval_tap $? 258 'Change2faMethod' test.out

#- 259 Verify2faCode
$CLI_EXE \
    --sn iam \
    --op Verify2faCode \
    --code 'nioQoGaF' \
    --factor 'fHxcG0rq' \
    --mfaToken 'Gt1S0k2p' \
    --rememberDevice 'true' \
    > test.out 2>&1
eval_tap $? 259 'Verify2faCode' test.out

#- 260 Verify2faCodeForward
$CLI_EXE \
    --sn iam \
    --op Verify2faCodeForward \
    --defaultFactor 'e71qQkIv' \
    --factors 'Jw3gWcdI' \
    --rememberDevice 'true' \
    --clientId 'DOt7Knzq' \
    --code 'EgotLRE3' \
    --factor 'Q0vgHjOZ' \
    --mfaToken 'uKfyC8ia' \
    > test.out 2>&1
eval_tap $? 260 'Verify2faCodeForward' test.out

#- 261 RetrieveUserThirdPartyPlatformTokenV3
$CLI_EXE \
    --sn iam \
    --op RetrieveUserThirdPartyPlatformTokenV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'UaIDcIKM' \
    --userId 'RGIZIF9W' \
    > test.out 2>&1
eval_tap $? 261 'RetrieveUserThirdPartyPlatformTokenV3' test.out

#- 262 AuthCodeRequestV3
$CLI_EXE \
    --sn iam \
    --op AuthCodeRequestV3 \
    --platformId 'J1Erclc9' \
    --clientId 'hioDMl2l' \
    --redirectUri 'iR5Mxz9N' \
    --requestId '5YfFBDYA' \
    > test.out 2>&1
eval_tap $? 262 'AuthCodeRequestV3' test.out

#- 263 PlatformTokenGrantV3
$CLI_EXE \
    --sn iam \
    --op PlatformTokenGrantV3 \
    --platformId 'LdR8Pe0l' \
    --additionalData 'jBpihpaz' \
    --client_id 'p2hcUHTD' \
    --createHeadless 'false' \
    --device_id '7XeiTCJN' \
    --macAddress 'umqqb5FH' \
    --platform_token 'C0XbQN8B' \
    --serviceLabel '0.6554248000306603' \
    --skipSetCookie 'false' \
    > test.out 2>&1
eval_tap $? 263 'PlatformTokenGrantV3' test.out

#- 264 GetRevocationListV3
$CLI_EXE \
    --sn iam \
    --op GetRevocationListV3 \
    > test.out 2>&1
eval_tap $? 264 'GetRevocationListV3' test.out

#- 265 TokenRevocationV3
$CLI_EXE \
    --sn iam \
    --op TokenRevocationV3 \
    --token '4i8A5Wkc' \
    > test.out 2>&1
eval_tap $? 265 'TokenRevocationV3' test.out

#- 266 SimultaneousLoginV3
$CLI_EXE \
    --sn iam \
    --op SimultaneousLoginV3 \
    --simultaneousPlatform 'MWQWwz8V' \
    --simultaneousTicket '9eJZPCNi' \
    --nativePlatform 'steam' \
    --nativePlatformTicket 'PhXtdFHR' \
    > test.out 2>&1
eval_tap $? 266 'SimultaneousLoginV3' test.out

#- 267 TokenGrantV3
$CLI_EXE \
    --sn iam \
    --op TokenGrantV3 \
    --additionalData 'gIHc5zZp' \
    --client_id 'nlEWuE48' \
    --client_secret 'L05XHnmI' \
    --code '33mR1eTT' \
    --code_verifier 'uuFtl9Ge' \
    --extendNamespace 'o0EQ9bxY' \
    --extend_exp 'false' \
    --password '63J1SjRB' \
    --redirect_uri '9IMj14Ng' \
    --refresh_token 'vMF4ZnZv' \
    --scope '9IyZNYTk' \
    --username 'JINYDuO0' \
    --grant_type 'password' \
    > test.out 2>&1
eval_tap $? 267 'TokenGrantV3' test.out

#- 268 VerifyTokenV3
$CLI_EXE \
    --sn iam \
    --op VerifyTokenV3 \
    --token 'F2TFuVpU' \
    > test.out 2>&1
eval_tap $? 268 'VerifyTokenV3' test.out

#- 269 PlatformAuthenticationV3
$CLI_EXE \
    --sn iam \
    --op PlatformAuthenticationV3 \
    --platformId 'sU8Q6aYO' \
    --code 'oJ7R98hc' \
    --error 'v64xyDgP' \
    --openidAssocHandle 'w7JJKQuU' \
    --openidClaimedId 'Zj0jhr0t' \
    --openidIdentity 'bVuhOujE' \
    --openidMode '5uXsYpYd' \
    --openidNs 'qgIaVI2i' \
    --openidOpEndpoint 'J71MPQav' \
    --openidResponseNonce 'GfJTIIGj' \
    --openidReturnTo 'wdFfPfAV' \
    --openidSig 'lV4N6VFG' \
    --openidSigned '4tbW8J7b' \
    --state 'DWgbRDB3' \
    > test.out 2>&1
eval_tap $? 269 'PlatformAuthenticationV3' test.out

#- 270 PlatformTokenRefreshV3
$CLI_EXE \
    --sn iam \
    --op PlatformTokenRefreshV3 \
    --platformId 'PfZFtlB4' \
    --platform_token '7bIPAm6E' \
    > test.out 2>&1
eval_tap $? 270 'PlatformTokenRefreshV3' test.out

#- 271 PublicGetInputValidations
$CLI_EXE \
    --sn iam \
    --op PublicGetInputValidations \
    --defaultOnEmpty 'false' \
    --languageCode 'a9upTTRJ' \
    > test.out 2>&1
eval_tap $? 271 'PublicGetInputValidations' test.out

#- 272 PublicGetInputValidationByField
$CLI_EXE \
    --sn iam \
    --op PublicGetInputValidationByField \
    --field 'SVFxf0EY' \
    > test.out 2>&1
eval_tap $? 272 'PublicGetInputValidationByField' test.out

#- 273 PublicGetCountryAgeRestrictionV3
$CLI_EXE \
    --sn iam \
    --op PublicGetCountryAgeRestrictionV3 \
    --countryCode 'Kznf5QJq' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 273 'PublicGetCountryAgeRestrictionV3' test.out

#- 274 PublicGetConfigValueV3
$CLI_EXE \
    --sn iam \
    --op PublicGetConfigValueV3 \
    --configKey 'CLbqVIzX' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 274 'PublicGetConfigValueV3' test.out

#- 275 PublicGetCountryListV3
$CLI_EXE \
    --sn iam \
    --op PublicGetCountryListV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 275 'PublicGetCountryListV3' test.out

#- 276 RetrieveAllActiveThirdPartyLoginPlatformCredentialPublicV3
$CLI_EXE \
    --sn iam \
    --op RetrieveAllActiveThirdPartyLoginPlatformCredentialPublicV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 276 'RetrieveAllActiveThirdPartyLoginPlatformCredentialPublicV3' test.out

#- 277 RetrieveActiveOIDCClientsPublicV3
$CLI_EXE \
    --sn iam \
    --op RetrieveActiveOIDCClientsPublicV3 \
    --namespace $AB_NAMESPACE \
    --clientId 'i7WwhUd2' \
    > test.out 2>&1
eval_tap $? 277 'RetrieveActiveOIDCClientsPublicV3' test.out

#- 278 PublicListUserIDByPlatformUserIDsV3
eval_tap 0 278 'PublicListUserIDByPlatformUserIDsV3 # SKIP deprecated' test.out

#- 279 PublicGetUserByPlatformUserIDV3
eval_tap 0 279 'PublicGetUserByPlatformUserIDV3 # SKIP deprecated' test.out

#- 280 PublicGetProfileUpdateStrategyV3
$CLI_EXE \
    --sn iam \
    --op PublicGetProfileUpdateStrategyV3 \
    --namespace $AB_NAMESPACE \
    --field 'display_name' \
    > test.out 2>&1
eval_tap $? 280 'PublicGetProfileUpdateStrategyV3' test.out

#- 281 PublicGetAsyncStatus
$CLI_EXE \
    --sn iam \
    --op PublicGetAsyncStatus \
    --namespace $AB_NAMESPACE \
    --requestId 'OPx5E4E6' \
    > test.out 2>&1
eval_tap $? 281 'PublicGetAsyncStatus' test.out

#- 282 PublicSearchUserV3
$CLI_EXE \
    --sn iam \
    --op PublicSearchUserV3 \
    --namespace $AB_NAMESPACE \
    --by 'lFkHkBIB' \
    --limit '41' \
    --offset '31' \
    --platformBy 'VPJ2udHO' \
    --platformId '0b7Y35o3' \
    --query 'X3oyastF' \
    > test.out 2>&1
eval_tap $? 282 'PublicSearchUserV3' test.out

#- 283 PublicCreateUserV3
# body param: body
echo '{"PasswordMD5Sum": "6XqWIqms", "acceptedPolicies": [{"isAccepted": true, "localizedPolicyVersionId": "ykRbGqYl", "policyId": "UbZOPaaG", "policyVersionId": "VKiqTozE"}, {"isAccepted": true, "localizedPolicyVersionId": "fWHgx9G2", "policyId": "gYMPCiiU", "policyVersionId": "YIKyPMmk"}, {"isAccepted": false, "localizedPolicyVersionId": "6YXpTc6b", "policyId": "pFOnXMd0", "policyVersionId": "OVhx1eCT"}], "authType": "Lm47XpOC", "code": "YeHPb57P", "country": "m8vS2y5T", "dateOfBirth": "a4I1kJvs", "displayName": "o4kNkvMA", "emailAddress": "fJotNFDb", "password": "XLGblUKM", "reachMinimumAge": true, "uniqueDisplayName": "MTcz9hT1"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicCreateUserV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 283 'PublicCreateUserV3' test.out

#- 284 CheckUserAvailability
$CLI_EXE \
    --sn iam \
    --op CheckUserAvailability \
    --namespace $AB_NAMESPACE \
    --field 'txH7ng5f' \
    --query 'jeyYq6C8' \
    > test.out 2>&1
eval_tap $? 284 'CheckUserAvailability' test.out

#- 285 PublicBulkGetUsers
eval_tap 0 285 'PublicBulkGetUsers # SKIP deprecated' test.out

#- 286 PublicSendRegistrationCode
# body param: body
echo '{"emailAddress": "Z3WcarOj", "languageTag": "GVjOQ1MV"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicSendRegistrationCode \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 286 'PublicSendRegistrationCode' test.out

#- 287 PublicVerifyRegistrationCode
# body param: body
echo '{"code": "svZDnR7E", "emailAddress": "xbJL7Ljw"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicVerifyRegistrationCode \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 287 'PublicVerifyRegistrationCode' test.out

#- 288 PublicForgotPasswordV3
# body param: body
echo '{"emailAddress": "0mWRQd3P", "languageTag": "fggKeSqp"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicForgotPasswordV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 288 'PublicForgotPasswordV3' test.out

#- 289 PublicValidateUserInput
# body param: body
echo '{"displayName": "dLrJdIzu", "password": "9ySrlXRH", "uniqueDisplayName": "6Tr2loes", "username": "C1okKIoU"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicValidateUserInput \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 289 'PublicValidateUserInput' test.out

#- 290 GetAdminInvitationV3
$CLI_EXE \
    --sn iam \
    --op GetAdminInvitationV3 \
    --invitationId 'jp72tqvQ' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 290 'GetAdminInvitationV3' test.out

#- 291 CreateUserFromInvitationV3
# body param: body
echo '{"PasswordMD5Sum": "ufMmrzCo", "acceptedPolicies": [{"isAccepted": true, "localizedPolicyVersionId": "NbZCillv", "policyId": "8Lkd28Y7", "policyVersionId": "D7XG1vcG"}, {"isAccepted": false, "localizedPolicyVersionId": "rq6fmM42", "policyId": "p2jEoSe1", "policyVersionId": "UewGfAeF"}, {"isAccepted": false, "localizedPolicyVersionId": "3Q2ixf9o", "policyId": "BOvGdbqh", "policyVersionId": "VPRo0W3U"}], "authType": "Ow6cTmwE", "code": "eAm0ZLKA", "country": "vzTUjsU9", "dateOfBirth": "dbq3x4B6", "displayName": "wp4DcXhf", "emailAddress": "B50b4sHZ", "password": "ybmDVyHO", "reachMinimumAge": true, "uniqueDisplayName": "I5wLo9Rg"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op CreateUserFromInvitationV3 \
    --invitationId 'pKRrUE9L' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 291 'CreateUserFromInvitationV3' test.out

#- 292 UpdateUserV3
# body param: body
echo '{"avatarUrl": "JupqQqR2", "country": "8NLdLA32", "dateOfBirth": "a4nXiied", "displayName": "h6vzbd8g", "languageTag": "XG343ZWd", "uniqueDisplayName": "QtTRSlT6", "userName": "dp4VstP3"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op UpdateUserV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 292 'UpdateUserV3' test.out

#- 293 PublicPartialUpdateUserV3
# body param: body
echo '{"avatarUrl": "xZ4zYbtE", "country": "PypeUaXz", "dateOfBirth": "6pQWn6YK", "displayName": "NtgUC62K", "languageTag": "lmukOnbq", "uniqueDisplayName": "9J9IyNG3", "userName": "mLOWSH8O"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicPartialUpdateUserV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 293 'PublicPartialUpdateUserV3' test.out

#- 294 PublicSendVerificationCodeV3
# body param: body
echo '{"context": "KdLmeFvl", "emailAddress": "V7bEFuyQ", "languageTag": "M5a6EWvY", "upgradeToken": "DmundLjw"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicSendVerificationCodeV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 294 'PublicSendVerificationCodeV3' test.out

#- 295 PublicUserVerificationV3
# body param: body
echo '{"code": "4MFFGAdJ", "contactType": "5Fjm0npv", "languageTag": "RbjoEH5E", "validateOnly": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUserVerificationV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 295 'PublicUserVerificationV3' test.out

#- 296 PublicUpgradeHeadlessAccountV3
# body param: body
echo '{"code": "9RlfArJP", "country": "M0avbVL3", "dateOfBirth": "9edqmdzL", "displayName": "TVsxWo9A", "emailAddress": "ts14gM91", "password": "fe2J5XIA", "uniqueDisplayName": "BarADp1J", "validateOnly": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpgradeHeadlessAccountV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 296 'PublicUpgradeHeadlessAccountV3' test.out

#- 297 PublicVerifyHeadlessAccountV3
# body param: body
echo '{"emailAddress": "r1lPD5cf", "password": "3urAueEN"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicVerifyHeadlessAccountV3 \
    --namespace $AB_NAMESPACE \
    --needVerificationCode 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 297 'PublicVerifyHeadlessAccountV3' test.out

#- 298 PublicUpdatePasswordV3
# body param: body
echo '{"languageTag": "gDPxJmbh", "mfaToken": "OcAZwHxi", "newPassword": "HdxUQNra", "oldPassword": "QZlIPY3L"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpdatePasswordV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 298 'PublicUpdatePasswordV3' test.out

#- 299 PublicCreateJusticeUser
$CLI_EXE \
    --sn iam \
    --op PublicCreateJusticeUser \
    --namespace $AB_NAMESPACE \
    --targetNamespace 'Uou78fFp' \
    > test.out 2>&1
eval_tap $? 299 'PublicCreateJusticeUser' test.out

#- 300 PublicPlatformLinkV3
$CLI_EXE \
    --sn iam \
    --op PublicPlatformLinkV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'htNKFg6w' \
    --redirectUri 'CsiBVVHt' \
    --ticket 'uxod9QEY' \
    > test.out 2>&1
eval_tap $? 300 'PublicPlatformLinkV3' test.out

#- 301 PublicPlatformUnlinkV3
eval_tap 0 301 'PublicPlatformUnlinkV3 # SKIP deprecated' test.out

#- 302 PublicPlatformUnlinkAllV3
$CLI_EXE \
    --sn iam \
    --op PublicPlatformUnlinkAllV3 \
    --namespace $AB_NAMESPACE \
    --platformId '1HDKI54S' \
    > test.out 2>&1
eval_tap $? 302 'PublicPlatformUnlinkAllV3' test.out

#- 303 PublicForcePlatformLinkV3
$CLI_EXE \
    --sn iam \
    --op PublicForcePlatformLinkV3 \
    --namespace $AB_NAMESPACE \
    --platformId '5aozUAmf' \
    --ticket '7iYmM5Ww' \
    > test.out 2>&1
eval_tap $? 303 'PublicForcePlatformLinkV3' test.out

#- 304 PublicWebLinkPlatform
$CLI_EXE \
    --sn iam \
    --op PublicWebLinkPlatform \
    --namespace $AB_NAMESPACE \
    --platformId 'TqRQE97E' \
    --clientId 'WRDQvltj' \
    --redirectUri 'nGCmd9gT' \
    > test.out 2>&1
eval_tap $? 304 'PublicWebLinkPlatform' test.out

#- 305 PublicWebLinkPlatformEstablish
$CLI_EXE \
    --sn iam \
    --op PublicWebLinkPlatformEstablish \
    --namespace $AB_NAMESPACE \
    --platformId 'F65cewpX' \
    --code '7sASixER' \
    --state 'NPs3RCWY' \
    > test.out 2>&1
eval_tap $? 305 'PublicWebLinkPlatformEstablish' test.out

#- 306 PublicProcessWebLinkPlatformV3
$CLI_EXE \
    --sn iam \
    --op PublicProcessWebLinkPlatformV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'uDs7vGrz' \
    --code '5jfSYdvl' \
    --state 'sF60REqg' \
    > test.out 2>&1
eval_tap $? 306 'PublicProcessWebLinkPlatformV3' test.out

#- 307 PublicGetUsersPlatformInfosV3
# body param: body
echo '{"platformId": "k8M4Am4i", "userIds": ["9LlUSKoL", "myWlbcBP", "lLQveyPu"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicGetUsersPlatformInfosV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 307 'PublicGetUsersPlatformInfosV3' test.out

#- 308 ResetPasswordV3
# body param: body
echo '{"clientId": "SdRcLxcY", "code": "5rGGmnDz", "emailAddress": "d3l46Z2p", "languageTag": "his1I5aH", "newPassword": "UQY2CH5E"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op ResetPasswordV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 308 'ResetPasswordV3' test.out

#- 309 PublicGetUserByUserIdV3
eval_tap 0 309 'PublicGetUserByUserIdV3 # SKIP deprecated' test.out

#- 310 PublicGetUserBanHistoryV3
$CLI_EXE \
    --sn iam \
    --op PublicGetUserBanHistoryV3 \
    --namespace $AB_NAMESPACE \
    --userId 'NBRIBW2l' \
    --activeOnly 'false' \
    --after '3mPPrSo9' \
    --before 'rlJ0OnHV' \
    --limit '19' \
    > test.out 2>&1
eval_tap $? 310 'PublicGetUserBanHistoryV3' test.out

#- 311 PublicListUserAllPlatformAccountsDistinctV3
$CLI_EXE \
    --sn iam \
    --op PublicListUserAllPlatformAccountsDistinctV3 \
    --namespace $AB_NAMESPACE \
    --userId 's7Gaobyw' \
    > test.out 2>&1
eval_tap $? 311 'PublicListUserAllPlatformAccountsDistinctV3' test.out

#- 312 PublicGetUserInformationV3
$CLI_EXE \
    --sn iam \
    --op PublicGetUserInformationV3 \
    --namespace $AB_NAMESPACE \
    --userId '7ctOyfBh' \
    > test.out 2>&1
eval_tap $? 312 'PublicGetUserInformationV3' test.out

#- 313 PublicGetUserLoginHistoriesV3
$CLI_EXE \
    --sn iam \
    --op PublicGetUserLoginHistoriesV3 \
    --namespace $AB_NAMESPACE \
    --userId 'HkcN1eSf' \
    --after '0.6922270082508947' \
    --before '0.7455110632168833' \
    --limit '17' \
    > test.out 2>&1
eval_tap $? 313 'PublicGetUserLoginHistoriesV3' test.out

#- 314 PublicGetUserPlatformAccountsV3
$CLI_EXE \
    --sn iam \
    --op PublicGetUserPlatformAccountsV3 \
    --namespace $AB_NAMESPACE \
    --userId 'IEc4e3M1' \
    --after 'wFJaYKRM' \
    --before 'zNeQhO3v' \
    --limit '6' \
    --platformId 'hN2a3UGe' \
    > test.out 2>&1
eval_tap $? 314 'PublicGetUserPlatformAccountsV3' test.out

#- 315 PublicListJusticePlatformAccountsV3
$CLI_EXE \
    --sn iam \
    --op PublicListJusticePlatformAccountsV3 \
    --namespace $AB_NAMESPACE \
    --userId 'E2D24cnr' \
    > test.out 2>&1
eval_tap $? 315 'PublicListJusticePlatformAccountsV3' test.out

#- 316 PublicLinkPlatformAccount
# body param: body
echo '{"platformId": "fVsAJ7gA", "platformUserId": "VNANGUoH"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicLinkPlatformAccount \
    --namespace $AB_NAMESPACE \
    --userId 'TRhf7oFu' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 316 'PublicLinkPlatformAccount' test.out

#- 317 PublicForceLinkPlatformWithProgression
# body param: body
echo '{"chosenNamespaces": ["amDVq3EI", "Q5c3XbAw", "4nX9f5O3"], "requestId": "99R0tTn0"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicForceLinkPlatformWithProgression \
    --namespace $AB_NAMESPACE \
    --userId 'XEZBQH2Z' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 317 'PublicForceLinkPlatformWithProgression' test.out

#- 318 PublicGetPublisherUserV3
$CLI_EXE \
    --sn iam \
    --op PublicGetPublisherUserV3 \
    --namespace $AB_NAMESPACE \
    --userId 'kVdqQbCu' \
    > test.out 2>&1
eval_tap $? 318 'PublicGetPublisherUserV3' test.out

#- 319 PublicValidateUserByUserIDAndPasswordV3
$CLI_EXE \
    --sn iam \
    --op PublicValidateUserByUserIDAndPasswordV3 \
    --namespace $AB_NAMESPACE \
    --userId 'CW1JcC9o' \
    --password 'lLJH8NpQ' \
    > test.out 2>&1
eval_tap $? 319 'PublicValidateUserByUserIDAndPasswordV3' test.out

#- 320 PublicGetRolesV3
$CLI_EXE \
    --sn iam \
    --op PublicGetRolesV3 \
    --after 'wFoZ1Dtw' \
    --before 'Ocoh8mC4' \
    --isWildcard 'false' \
    --limit '62' \
    > test.out 2>&1
eval_tap $? 320 'PublicGetRolesV3' test.out

#- 321 PublicGetRoleV3
$CLI_EXE \
    --sn iam \
    --op PublicGetRoleV3 \
    --roleId 'Rmlj1ntU' \
    > test.out 2>&1
eval_tap $? 321 'PublicGetRoleV3' test.out

#- 322 PublicForgotPasswordWithoutNamespaceV3
# body param: body
echo '{"clientId": "WxPZOFAe", "emailAddress": "2NLR5hgj", "languageTag": "4OXeOPTS"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicForgotPasswordWithoutNamespaceV3 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 322 'PublicForgotPasswordWithoutNamespaceV3' test.out

#- 323 PublicGetMyUserV3
$CLI_EXE \
    --sn iam \
    --op PublicGetMyUserV3 \
    --includeAllPlatforms 'false' \
    > test.out 2>&1
eval_tap $? 323 'PublicGetMyUserV3' test.out

#- 324 PublicSendCodeForwardV3
# body param: body
echo '{"context": "IEjupZET", "emailAddress": "0n23Riwi", "languageTag": "y73By2hr", "upgradeToken": "4UbPvanG"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicSendCodeForwardV3 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 324 'PublicSendCodeForwardV3' test.out

#- 325 PublicGetLinkHeadlessAccountToMyAccountConflictV3
$CLI_EXE \
    --sn iam \
    --op PublicGetLinkHeadlessAccountToMyAccountConflictV3 \
    --oneTimeLinkCode 'fhl8OVWV' \
    > test.out 2>&1
eval_tap $? 325 'PublicGetLinkHeadlessAccountToMyAccountConflictV3' test.out

#- 326 LinkHeadlessAccountToMyAccountV3
# body param: body
echo '{"chosenNamespaces": ["VMGPRBrv", "MG0DSKbs", "ya8Zyv6s"], "oneTimeLinkCode": "Wmyl6emW"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op LinkHeadlessAccountToMyAccountV3 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 326 'LinkHeadlessAccountToMyAccountV3' test.out

#- 327 PublicGetMyRedirectionAfterLinkV3
$CLI_EXE \
    --sn iam \
    --op PublicGetMyRedirectionAfterLinkV3 \
    --oneTimeLinkCode 'TROACIdW' \
    > test.out 2>&1
eval_tap $? 327 'PublicGetMyRedirectionAfterLinkV3' test.out

#- 328 PublicGetMyProfileAllowUpdateStatusV3
$CLI_EXE \
    --sn iam \
    --op PublicGetMyProfileAllowUpdateStatusV3 \
    > test.out 2>&1
eval_tap $? 328 'PublicGetMyProfileAllowUpdateStatusV3' test.out

#- 329 PublicSendVerificationLinkV3
# body param: body
echo '{"languageTag": "6lKaxBpr"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicSendVerificationLinkV3 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 329 'PublicSendVerificationLinkV3' test.out

#- 330 PublicGetOpenidUserInfoV3
$CLI_EXE \
    --sn iam \
    --op PublicGetOpenidUserInfoV3 \
    > test.out 2>&1
eval_tap $? 330 'PublicGetOpenidUserInfoV3' test.out

#- 331 PublicVerifyUserByLinkV3
$CLI_EXE \
    --sn iam \
    --op PublicVerifyUserByLinkV3 \
    --code 'QjwZ6tFy' \
    > test.out 2>&1
eval_tap $? 331 'PublicVerifyUserByLinkV3' test.out

#- 332 PlatformAuthenticateSAMLV3Handler
$CLI_EXE \
    --sn iam \
    --op PlatformAuthenticateSAMLV3Handler \
    --platformId 'aZYs8j0A' \
    --code 'I2r1MAqY' \
    --error 'ZxH4udVm' \
    --state 'CiFbD8La' \
    > test.out 2>&1
eval_tap $? 332 'PlatformAuthenticateSAMLV3Handler' test.out

#- 333 LoginSSOClient
$CLI_EXE \
    --sn iam \
    --op LoginSSOClient \
    --platformId 'PiHiXJVA' \
    --payload 'NDisL77G' \
    > test.out 2>&1
eval_tap $? 333 'LoginSSOClient' test.out

#- 334 LogoutSSOClient
$CLI_EXE \
    --sn iam \
    --op LogoutSSOClient \
    --platformId 'vkPCeJWH' \
    > test.out 2>&1
eval_tap $? 334 'LogoutSSOClient' test.out

#- 335 RequestTargetTokenResponseV3
$CLI_EXE \
    --sn iam \
    --op RequestTargetTokenResponseV3 \
    --additionalData 'jlNA412n' \
    --code 'OdzEwoKO' \
    > test.out 2>&1
eval_tap $? 335 'RequestTargetTokenResponseV3' test.out

#- 336 UpgradeAndAuthenticateForwardV3
$CLI_EXE \
    --sn iam \
    --op UpgradeAndAuthenticateForwardV3 \
    --client_id 'no3TnVTo' \
    --upgrade_success_token 'sOae5ukH' \
    > test.out 2>&1
eval_tap $? 336 'UpgradeAndAuthenticateForwardV3' test.out

#- 337 AdminListInvitationHistoriesV4
$CLI_EXE \
    --sn iam \
    --op AdminListInvitationHistoriesV4 \
    --limit '76' \
    --namespace_ 'vgnn6xYr' \
    --offset '1' \
    > test.out 2>&1
eval_tap $? 337 'AdminListInvitationHistoriesV4' test.out

#- 338 AdminGetDevicesByUserV4
$CLI_EXE \
    --sn iam \
    --op AdminGetDevicesByUserV4 \
    --namespace $AB_NAMESPACE \
    --userId 't0nTTO1V' \
    > test.out 2>&1
eval_tap $? 338 'AdminGetDevicesByUserV4' test.out

#- 339 AdminGetBannedDevicesV4
$CLI_EXE \
    --sn iam \
    --op AdminGetBannedDevicesV4 \
    --namespace $AB_NAMESPACE \
    --deviceType 'CR4hZCuJ' \
    --endDate 'nYbarpjt' \
    --limit '58' \
    --offset '74' \
    --startDate 'bh9hqeKd' \
    > test.out 2>&1
eval_tap $? 339 'AdminGetBannedDevicesV4' test.out

#- 340 AdminGetUserDeviceBansV4
$CLI_EXE \
    --sn iam \
    --op AdminGetUserDeviceBansV4 \
    --namespace $AB_NAMESPACE \
    --userId 'QK5iRpOg' \
    > test.out 2>&1
eval_tap $? 340 'AdminGetUserDeviceBansV4' test.out

#- 341 AdminBanDeviceV4
# body param: body
echo '{"comment": "NUtClXfu", "deviceId": "xGJ6PITk", "deviceType": "nmPKUrwG", "enabled": true, "endDate": "VqgpERlS", "ext": {"g12M9txU": {}, "UsbbDOPK": {}, "CSbYZOsj": {}}, "reason": "5DjNVFTR"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBanDeviceV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 341 'AdminBanDeviceV4' test.out

#- 342 AdminGetDeviceBanV4
$CLI_EXE \
    --sn iam \
    --op AdminGetDeviceBanV4 \
    --banId 'lWJdA6U8' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 342 'AdminGetDeviceBanV4' test.out

#- 343 AdminUpdateDeviceBanV4
# body param: body
echo '{"enabled": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateDeviceBanV4 \
    --banId '7IXvY21w' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 343 'AdminUpdateDeviceBanV4' test.out

#- 344 AdminGenerateReportV4
$CLI_EXE \
    --sn iam \
    --op AdminGenerateReportV4 \
    --namespace $AB_NAMESPACE \
    --endDate '5eYbuESR' \
    --startDate 'Qttc0DOe' \
    --deviceType 'LBslKyuF' \
    > test.out 2>&1
eval_tap $? 344 'AdminGenerateReportV4' test.out

#- 345 AdminGetDeviceTypesV4
$CLI_EXE \
    --sn iam \
    --op AdminGetDeviceTypesV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 345 'AdminGetDeviceTypesV4' test.out

#- 346 AdminGetDeviceBansV4
$CLI_EXE \
    --sn iam \
    --op AdminGetDeviceBansV4 \
    --deviceId 'APmOMM9u' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 346 'AdminGetDeviceBansV4' test.out

#- 347 AdminDecryptDeviceV4
eval_tap 0 347 'AdminDecryptDeviceV4 # SKIP deprecated' test.out

#- 348 AdminUnbanDeviceV4
$CLI_EXE \
    --sn iam \
    --op AdminUnbanDeviceV4 \
    --deviceId 'xyvV61Ka' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 348 'AdminUnbanDeviceV4' test.out

#- 349 AdminGetUsersByDeviceV4
$CLI_EXE \
    --sn iam \
    --op AdminGetUsersByDeviceV4 \
    --deviceId 'eco7FBcC' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 349 'AdminGetUsersByDeviceV4' test.out

#- 350 AdminGetNamespaceInvitationHistoryV4
$CLI_EXE \
    --sn iam \
    --op AdminGetNamespaceInvitationHistoryV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 350 'AdminGetNamespaceInvitationHistoryV4' test.out

#- 351 AdminGetNamespaceUserInvitationHistoryV4
$CLI_EXE \
    --sn iam \
    --op AdminGetNamespaceUserInvitationHistoryV4 \
    --namespace $AB_NAMESPACE \
    --limit '37' \
    --offset '31' \
    > test.out 2>&1
eval_tap $? 351 'AdminGetNamespaceUserInvitationHistoryV4' test.out

#- 352 AdminCreateTestUsersV4
# body param: body
echo '{"count": 78, "userInfo": {"country": "Cb3pppf3"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminCreateTestUsersV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 352 'AdminCreateTestUsersV4' test.out

#- 353 AdminCreateUserV4
# body param: body
echo '{"acceptedPolicies": [{"isAccepted": true, "localizedPolicyVersionId": "jN47BFxc", "policyId": "HntwoVXc", "policyVersionId": "lsDdT4UT"}, {"isAccepted": false, "localizedPolicyVersionId": "4l8WiZ4u", "policyId": "lyimaSP9", "policyVersionId": "nfhBYPQw"}, {"isAccepted": false, "localizedPolicyVersionId": "WPqwE5rx", "policyId": "vZ0OkRJ5", "policyVersionId": "yuVGSvqi"}], "authType": "EMAILPASSWD", "code": "3C8s35fv", "country": "FmikfMSS", "dateOfBirth": "H0Xth8Ev", "displayName": "vCGvaaIr", "emailAddress": "lBLgNEVF", "password": "z2yOSzgQ", "passwordMD5Sum": "rDuoe2BB", "reachMinimumAge": true, "uniqueDisplayName": "uMgfgY9l", "username": "wQFO1mBK"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminCreateUserV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 353 'AdminCreateUserV4' test.out

#- 354 AdminBulkUpdateUserAccountTypeV4
# body param: body
echo '{"testAccount": false, "userIds": ["WhR1gVVC", "ahS4Ro0g", "cMxGwlzy"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBulkUpdateUserAccountTypeV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 354 'AdminBulkUpdateUserAccountTypeV4' test.out

#- 355 AdminBulkCheckValidUserIDV4
# body param: body
echo '{"userIds": ["a4LEn28i", "RAt4TVPM", "XPeu58Gt"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBulkCheckValidUserIDV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 355 'AdminBulkCheckValidUserIDV4' test.out

#- 356 AdminUpdateUserV4
# body param: body
echo '{"avatarUrl": "Djiioph7", "country": "TbFQVVzC", "dateOfBirth": "PsbKlK8O", "displayName": "DdjduwzE", "languageTag": "LOTVnWt4", "skipLoginQueue": false, "tags": ["JH1k7peO", "2591CmtH", "HFj8neQC"], "uniqueDisplayName": "2jiA22jB", "userName": "lwUmzQDh"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserV4 \
    --namespace $AB_NAMESPACE \
    --userId 'O66uBIHq' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 356 'AdminUpdateUserV4' test.out

#- 357 AdminUpdateUserEmailAddressV4
# body param: body
echo '{"code": "7bsjckl2", "emailAddress": "xOxbwBG8"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserEmailAddressV4 \
    --namespace $AB_NAMESPACE \
    --userId 'FLZg4zDy' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 357 'AdminUpdateUserEmailAddressV4' test.out

#- 358 AdminDisableUserMFAV4
# body param: body
echo '{"factor": "944ZdcwG", "mfaToken": "ffsPWbGB"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDisableUserMFAV4 \
    --namespace $AB_NAMESPACE \
    --userId 'WwIOBv6R' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 358 'AdminDisableUserMFAV4' test.out

#- 359 AdminGetUserMFAStatusV4
$CLI_EXE \
    --sn iam \
    --op AdminGetUserMFAStatusV4 \
    --namespace $AB_NAMESPACE \
    --userId 'jcvoKOyW' \
    > test.out 2>&1
eval_tap $? 359 'AdminGetUserMFAStatusV4' test.out

#- 360 AdminListUserRolesV4
$CLI_EXE \
    --sn iam \
    --op AdminListUserRolesV4 \
    --namespace $AB_NAMESPACE \
    --userId 'wnEVg3Qk' \
    > test.out 2>&1
eval_tap $? 360 'AdminListUserRolesV4' test.out

#- 361 AdminUpdateUserRoleV4
# body param: body
echo '{"assignedNamespaces": ["9DQUrTO4", "9jLaTT5p", "qYulqWFf"], "roleId": "eq9IXsWM"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserRoleV4 \
    --namespace $AB_NAMESPACE \
    --userId 'jhoJmEkl' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 361 'AdminUpdateUserRoleV4' test.out

#- 362 AdminAddUserRoleV4
# body param: body
echo '{"assignedNamespaces": ["c6gzRX70", "D6ScTiI2", "x8j9dPzw"], "roleId": "vF9rSrmg"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddUserRoleV4 \
    --namespace $AB_NAMESPACE \
    --userId 'VWWYmUvg' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 362 'AdminAddUserRoleV4' test.out

#- 363 AdminRemoveUserRoleV4
# body param: body
echo '{"assignedNamespaces": ["v9v2AIPh", "doaC1iXd", "bBosOvP9"], "roleId": "rODnrgLT"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminRemoveUserRoleV4 \
    --namespace $AB_NAMESPACE \
    --userId 'rXdIOlul' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 363 'AdminRemoveUserRoleV4' test.out

#- 364 AdminGetRolesV4
$CLI_EXE \
    --sn iam \
    --op AdminGetRolesV4 \
    --adminRole 'false' \
    --isWildcard 'false' \
    --limit '73' \
    --offset '37' \
    > test.out 2>&1
eval_tap $? 364 'AdminGetRolesV4' test.out

#- 365 AdminCreateRoleV4
# body param: body
echo '{"adminRole": true, "deletable": true, "isWildcard": false, "roleName": "PTnUxfDg"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminCreateRoleV4 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 365 'AdminCreateRoleV4' test.out

#- 366 AdminGetRoleV4
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleV4 \
    --roleId '84ckbSdA' \
    > test.out 2>&1
eval_tap $? 366 'AdminGetRoleV4' test.out

#- 367 AdminDeleteRoleV4
$CLI_EXE \
    --sn iam \
    --op AdminDeleteRoleV4 \
    --roleId 'cu8W1I33' \
    > test.out 2>&1
eval_tap $? 367 'AdminDeleteRoleV4' test.out

#- 368 AdminUpdateRoleV4
# body param: body
echo '{"adminRole": true, "deletable": true, "isWildcard": false, "roleName": "ITWN6NAa"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateRoleV4 \
    --roleId 'Fvw7PYIU' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 368 'AdminUpdateRoleV4' test.out

#- 369 AdminUpdateRolePermissionsV4
# body param: body
echo '{"permissions": [{"action": 36, "resource": "AoabwWHs", "schedAction": 96, "schedCron": "7ZSoprQ6", "schedRange": ["Ssj2K7oD", "1Ltakz9T", "CeYGZyIV"]}, {"action": 88, "resource": "zHsqowKq", "schedAction": 14, "schedCron": "2ozh5fg3", "schedRange": ["e5gCzV8o", "rjeN1mj0", "0BL5HQDS"]}, {"action": 17, "resource": "x4GnxbSt", "schedAction": 5, "schedCron": "1lnai4QV", "schedRange": ["zNVTcZmM", "q5Lp2pj8", "KMQgGZ4g"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateRolePermissionsV4 \
    --roleId 'TrUoA5Ni' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 369 'AdminUpdateRolePermissionsV4' test.out

#- 370 AdminAddRolePermissionsV4
# body param: body
echo '{"permissions": [{"action": 100, "resource": "SaItCIE8", "schedAction": 11, "schedCron": "nbeaXWvk", "schedRange": ["RZca8XGJ", "xWWCMnvc", "HKtqVbnB"]}, {"action": 23, "resource": "bFESPaPP", "schedAction": 52, "schedCron": "EJMAF7Yk", "schedRange": ["AJAjfqVm", "xrE77vaZ", "OVWsV3Ec"]}, {"action": 99, "resource": "ChlJHRKd", "schedAction": 15, "schedCron": "0EcsMPYZ", "schedRange": ["vq2Gtvbk", "fvn8VUoh", "UBUIc9Ql"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddRolePermissionsV4 \
    --roleId 'j2TmkBKv' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 370 'AdminAddRolePermissionsV4' test.out

#- 371 AdminDeleteRolePermissionsV4
# body param: body
echo '["PNoQztLx", "KgfC4tKA", "N1yU14eL"]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDeleteRolePermissionsV4 \
    --roleId '1OovEIRN' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 371 'AdminDeleteRolePermissionsV4' test.out

#- 372 AdminListAssignedUsersV4
$CLI_EXE \
    --sn iam \
    --op AdminListAssignedUsersV4 \
    --roleId 'pu8NObmN' \
    --after 'gkO4KSSn' \
    --before '2qnHaopX' \
    --limit '86' \
    > test.out 2>&1
eval_tap $? 372 'AdminListAssignedUsersV4' test.out

#- 373 AdminAssignUserToRoleV4
# body param: body
echo '{"assignedNamespaces": ["wfHr9ANv", "uYizFAq8", "GOPqHIn1"], "namespace": "QpBwRp1e", "userId": "2leQE8f4"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAssignUserToRoleV4 \
    --roleId 'l7LtGX6M' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 373 'AdminAssignUserToRoleV4' test.out

#- 374 AdminRevokeUserFromRoleV4
# body param: body
echo '{"namespace": "bBMF6srM", "userId": "25hW49CV"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminRevokeUserFromRoleV4 \
    --roleId 'BE5eLWk0' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 374 'AdminRevokeUserFromRoleV4' test.out

#- 375 AdminInviteUserNewV4
# body param: body
echo '{"assignedNamespaces": ["YbAfMJ7e", "9ItRNSX7", "BEpg4mkB"], "emailAddresses": ["Wf0gY3gM", "4Cc7cUSV", "ThDB3Hx1"], "isAdmin": true, "isNewStudio": true, "languageTag": "ERNVGx0g", "namespace": "Tm44SfLk", "roleId": "kY1hgNW3"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminInviteUserNewV4 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 375 'AdminInviteUserNewV4' test.out

#- 376 AdminUpdateMyUserV4
# body param: body
echo '{"avatarUrl": "XdcPxSV5", "country": "GHOj1nRj", "dateOfBirth": "7hKroRgg", "displayName": "Tu2aNeQd", "languageTag": "UcK8EnXu", "skipLoginQueue": false, "tags": ["2mZvBYu2", "dt6g8DpS", "m39JTHxS"], "uniqueDisplayName": "snhY4w2S", "userName": "hRwM8kHZ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateMyUserV4 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 376 'AdminUpdateMyUserV4' test.out

#- 377 AdminDisableMyAuthenticatorV4
# body param: body
echo '{"factor": "wBbNd3wH", "mfaToken": "TNeS1pWi"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDisableMyAuthenticatorV4 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 377 'AdminDisableMyAuthenticatorV4' test.out

#- 378 AdminEnableMyAuthenticatorV4
$CLI_EXE \
    --sn iam \
    --op AdminEnableMyAuthenticatorV4 \
    --code 'kTDdrCdb' \
    > test.out 2>&1
eval_tap $? 378 'AdminEnableMyAuthenticatorV4' test.out

#- 379 AdminGenerateMyAuthenticatorKeyV4
$CLI_EXE \
    --sn iam \
    --op AdminGenerateMyAuthenticatorKeyV4 \
    > test.out 2>&1
eval_tap $? 379 'AdminGenerateMyAuthenticatorKeyV4' test.out

#- 380 AdminGetMyBackupCodesV4
eval_tap 0 380 'AdminGetMyBackupCodesV4 # SKIP deprecated' test.out

#- 381 AdminGenerateMyBackupCodesV4
eval_tap 0 381 'AdminGenerateMyBackupCodesV4 # SKIP deprecated' test.out

#- 382 AdminDisableMyBackupCodesV4
# body param: body
echo '{"factor": "ZuAOZTqa", "mfaToken": "VnxZhm24"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDisableMyBackupCodesV4 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 382 'AdminDisableMyBackupCodesV4' test.out

#- 383 AdminDownloadMyBackupCodesV4
eval_tap 0 383 'AdminDownloadMyBackupCodesV4 # SKIP deprecated' test.out

#- 384 AdminEnableMyBackupCodesV4
eval_tap 0 384 'AdminEnableMyBackupCodesV4 # SKIP deprecated' test.out

#- 385 AdminGetBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op AdminGetBackupCodesV4 \
    --languageTag 'UnehXSH7' \
    > test.out 2>&1
eval_tap $? 385 'AdminGetBackupCodesV4' test.out

#- 386 AdminGenerateBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op AdminGenerateBackupCodesV4 \
    --languageTag 'UFkDKLiD' \
    > test.out 2>&1
eval_tap $? 386 'AdminGenerateBackupCodesV4' test.out

#- 387 AdminEnableBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op AdminEnableBackupCodesV4 \
    --languageTag 'EV7XLaOt' \
    > test.out 2>&1
eval_tap $? 387 'AdminEnableBackupCodesV4' test.out

#- 388 AdminChallengeMyMFAV4
$CLI_EXE \
    --sn iam \
    --op AdminChallengeMyMFAV4 \
    --code 'b8zxenTi' \
    --factor 'NK9H1v6f' \
    > test.out 2>&1
eval_tap $? 388 'AdminChallengeMyMFAV4' test.out

#- 389 AdminSendMyMFAEmailCodeV4
$CLI_EXE \
    --sn iam \
    --op AdminSendMyMFAEmailCodeV4 \
    --action 'UUKZS1T4' \
    --languageTag 'Gf3NKdws' \
    > test.out 2>&1
eval_tap $? 389 'AdminSendMyMFAEmailCodeV4' test.out

#- 390 AdminDisableMyEmailV4
# body param: body
echo '{"factor": "YpshGlWE", "mfaToken": "cl1hdqew"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDisableMyEmailV4 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 390 'AdminDisableMyEmailV4' test.out

#- 391 AdminEnableMyEmailV4
$CLI_EXE \
    --sn iam \
    --op AdminEnableMyEmailV4 \
    --code 'Y4rw8fw5' \
    > test.out 2>&1
eval_tap $? 391 'AdminEnableMyEmailV4' test.out

#- 392 AdminGetMyEnabledFactorsV4
$CLI_EXE \
    --sn iam \
    --op AdminGetMyEnabledFactorsV4 \
    > test.out 2>&1
eval_tap $? 392 'AdminGetMyEnabledFactorsV4' test.out

#- 393 AdminMakeFactorMyDefaultV4
$CLI_EXE \
    --sn iam \
    --op AdminMakeFactorMyDefaultV4 \
    --factor 'evFBEjRA' \
    > test.out 2>&1
eval_tap $? 393 'AdminMakeFactorMyDefaultV4' test.out

#- 394 AdminGetMyOwnMFAStatusV4
$CLI_EXE \
    --sn iam \
    --op AdminGetMyOwnMFAStatusV4 \
    > test.out 2>&1
eval_tap $? 394 'AdminGetMyOwnMFAStatusV4' test.out

#- 395 AdminGetMyMFAStatusV4
eval_tap 0 395 'AdminGetMyMFAStatusV4 # SKIP deprecated' test.out

#- 396 AdminInviteUserV4
eval_tap 0 396 'AdminInviteUserV4 # SKIP deprecated' test.out

#- 397 AuthenticationWithPlatformLinkV4
$CLI_EXE \
    --sn iam \
    --op AuthenticationWithPlatformLinkV4 \
    --extend_exp 'true' \
    --client_id 'mPIjs9Am' \
    --linkingToken 'aduPmThb' \
    --password 'n8WKuZPU' \
    --username '34OiAA71' \
    > test.out 2>&1
eval_tap $? 397 'AuthenticationWithPlatformLinkV4' test.out

#- 398 GenerateTokenByNewHeadlessAccountV4
$CLI_EXE \
    --sn iam \
    --op GenerateTokenByNewHeadlessAccountV4 \
    --additionalData 'tVpeBcTe' \
    --extend_exp 'false' \
    --linkingToken 'zpczCimn' \
    > test.out 2>&1
eval_tap $? 398 'GenerateTokenByNewHeadlessAccountV4' test.out

#- 399 Verify2faCodeV4
$CLI_EXE \
    --sn iam \
    --op Verify2faCodeV4 \
    --code 'Gew2BZKu' \
    --factor 'v74JEKzy' \
    --mfaToken 'p8zaka7B' \
    --rememberDevice 'true' \
    > test.out 2>&1
eval_tap $? 399 'Verify2faCodeV4' test.out

#- 400 PlatformTokenGrantV4
$CLI_EXE \
    --sn iam \
    --op PlatformTokenGrantV4 \
    --platformId '8Pn3vtyY' \
    --codeChallenge 'fE8ztUya' \
    --codeChallengeMethod 'plain' \
    --additionalData 'YYr7bk9j' \
    --client_id 'WfweIQdB' \
    --createHeadless 'false' \
    --device_id 'unIlLSzu' \
    --macAddress 'ZArhseBf' \
    --platform_token 'lP90fXcP' \
    --serviceLabel '0.5010560043973348' \
    --skipSetCookie 'true' \
    > test.out 2>&1
eval_tap $? 400 'PlatformTokenGrantV4' test.out

#- 401 SimultaneousLoginV4
$CLI_EXE \
    --sn iam \
    --op SimultaneousLoginV4 \
    --codeChallenge 'vcSMHOb5' \
    --codeChallengeMethod 'plain' \
    --simultaneousPlatform '4ndmhpkO' \
    --simultaneousTicket 'QfbBxhWy' \
    --nativePlatform 'steam' \
    --nativePlatformTicket 'vMoHpM1C' \
    > test.out 2>&1
eval_tap $? 401 'SimultaneousLoginV4' test.out

#- 402 TokenGrantV4
$CLI_EXE \
    --sn iam \
    --op TokenGrantV4 \
    --codeChallenge 'qKSJwluc' \
    --codeChallengeMethod 'S256' \
    --additionalData 'pHqKfnmo' \
    --client_id '37gmOsC6' \
    --client_secret '0k7uuGDu' \
    --code 'RspPO8gJ' \
    --code_verifier 'o2gUoqnr' \
    --extendNamespace 'DcADl9IK' \
    --extend_exp 'true' \
    --login_queue_ticket 'Jh0IUi7w' \
    --password 'q99y5yAB' \
    --redirect_uri 'CwVJFss0' \
    --refresh_token 'gufZPjEI' \
    --scope 'R2my83AL' \
    --username 'NjswbNkS' \
    --grant_type 'urn:ietf:params:oauth:grant-type:login_queue_ticket' \
    > test.out 2>&1
eval_tap $? 402 'TokenGrantV4' test.out

#- 403 RequestTargetTokenResponseV4
$CLI_EXE \
    --sn iam \
    --op RequestTargetTokenResponseV4 \
    --additionalData 'KJIoFeON' \
    --code 'gI3Q8UBl' \
    > test.out 2>&1
eval_tap $? 403 'RequestTargetTokenResponseV4' test.out

#- 404 PublicListUserIDByPlatformUserIDsV4
# body param: body
echo '{"pidType": "s65XjMoa", "platformUserIds": ["Usrq1Y48", "7aebsXg1", "LDfJiLM9"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicListUserIDByPlatformUserIDsV4 \
    --namespace $AB_NAMESPACE \
    --platformId 'VJTnMQRg' \
    --rawPUID 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 404 'PublicListUserIDByPlatformUserIDsV4' test.out

#- 405 PublicGetUserByPlatformUserIDV4
$CLI_EXE \
    --sn iam \
    --op PublicGetUserByPlatformUserIDV4 \
    --namespace $AB_NAMESPACE \
    --platformId 'MaeiLhlA' \
    --platformUserId 'B1ikAYd7' \
    > test.out 2>&1
eval_tap $? 405 'PublicGetUserByPlatformUserIDV4' test.out

#- 406 PublicCreateTestUserV4
# body param: body
echo '{"acceptedPolicies": [{"isAccepted": true, "localizedPolicyVersionId": "uUjhFEri", "policyId": "RR1ja9gm", "policyVersionId": "OWSTArNG"}, {"isAccepted": true, "localizedPolicyVersionId": "1kGYlIyV", "policyId": "JEbM2o6a", "policyVersionId": "Y43KHR33"}, {"isAccepted": false, "localizedPolicyVersionId": "BJjRuqhz", "policyId": "p2l6BmL7", "policyVersionId": "DDgZxCgk"}], "authType": "EMAILPASSWD", "country": "Tw8W9Ie4", "dateOfBirth": "EkLfdagM", "displayName": "wY0J8iTC", "emailAddress": "e4FBLxg8", "password": "dBi2dWIe", "passwordMD5Sum": "Egqc2K28", "uniqueDisplayName": "acknA7G9", "username": "V4DJoci4", "verified": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicCreateTestUserV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 406 'PublicCreateTestUserV4' test.out

#- 407 PublicCreateUserV4
# body param: body
echo '{"acceptedPolicies": [{"isAccepted": true, "localizedPolicyVersionId": "ejvoOoTf", "policyId": "OPoxeOkr", "policyVersionId": "eDxtZqzp"}, {"isAccepted": true, "localizedPolicyVersionId": "oFP0QGci", "policyId": "8hIwT6sp", "policyVersionId": "BvEABR5e"}, {"isAccepted": true, "localizedPolicyVersionId": "vcUvGcxM", "policyId": "3I1bWHSF", "policyVersionId": "f3zI7Rkv"}], "authType": "EMAILPASSWD", "code": "Vkxy9CcR", "country": "WHQWAmIk", "dateOfBirth": "rdx1lIlF", "displayName": "dnAz6tMK", "emailAddress": "hLcK0xxz", "password": "L4yO4DSl", "passwordMD5Sum": "WOBaCuAg", "reachMinimumAge": true, "uniqueDisplayName": "h2q36DCG", "username": "a1s4Oava"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicCreateUserV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 407 'PublicCreateUserV4' test.out

#- 408 CreateUserFromInvitationV4
# body param: body
echo '{"acceptedPolicies": [{"isAccepted": false, "localizedPolicyVersionId": "wVA6UeLp", "policyId": "NfL0qOi4", "policyVersionId": "QoZ59Exe"}, {"isAccepted": true, "localizedPolicyVersionId": "5jYa0wAB", "policyId": "KSmumNfj", "policyVersionId": "8ERu6pUL"}, {"isAccepted": true, "localizedPolicyVersionId": "7lRKTcWj", "policyId": "92MaoJg2", "policyVersionId": "7OyfdAwo"}], "authType": "EMAILPASSWD", "code": "vVRQRGqA", "country": "HEYgfIuX", "dateOfBirth": "eFl2i4Jz", "displayName": "mCvFfOMO", "emailAddress": "HZHDqlu1", "password": "dou3Wt19", "passwordMD5Sum": "YAl1fvqR", "reachMinimumAge": false, "uniqueDisplayName": "ub2UsDJg", "username": "ihYjdFGg"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op CreateUserFromInvitationV4 \
    --invitationId 'oEZ6U29i' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 408 'CreateUserFromInvitationV4' test.out

#- 409 PublicUpdateUserV4
# body param: body
echo '{"avatarUrl": "V2tbL5Fx", "country": "ns5cR7vZ", "dateOfBirth": "Phg688mY", "displayName": "7xm7sq60", "languageTag": "jD1cciI1", "uniqueDisplayName": "KXF8A5nP", "userName": "t2Pvheh2"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpdateUserV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 409 'PublicUpdateUserV4' test.out

#- 410 PublicUpdateUserEmailAddressV4
# body param: body
echo '{"code": "0UlF402A", "emailAddress": "EGJnLdqb"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpdateUserEmailAddressV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 410 'PublicUpdateUserEmailAddressV4' test.out

#- 411 PublicUpgradeHeadlessAccountWithVerificationCodeV4
# body param: body
echo '{"code": "NPxawLUa", "country": "vJ8mk9YW", "dateOfBirth": "nYrrSONg", "displayName": "uhN43B1U", "emailAddress": "WyisRj6X", "password": "dPoY2WCv", "reachMinimumAge": false, "uniqueDisplayName": "WhXQkxgd", "username": "hldoFfEd", "validateOnly": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpgradeHeadlessAccountWithVerificationCodeV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 411 'PublicUpgradeHeadlessAccountWithVerificationCodeV4' test.out

#- 412 PublicUpgradeHeadlessAccountV4
# body param: body
echo '{"dateOfBirth": "ICX2Ce1F", "displayName": "tgRx8Fhj", "emailAddress": "GiwheKno", "password": "Y9CZ76C8", "uniqueDisplayName": "m7WaTxSy", "username": "c5gA2h0H"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpgradeHeadlessAccountV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 412 'PublicUpgradeHeadlessAccountV4' test.out

#- 413 PublicDisableMyAuthenticatorV4
# body param: body
echo '{"factor": "v1fMFKG3", "mfaToken": "6eiYu7r6"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicDisableMyAuthenticatorV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 413 'PublicDisableMyAuthenticatorV4' test.out

#- 414 PublicEnableMyAuthenticatorV4
$CLI_EXE \
    --sn iam \
    --op PublicEnableMyAuthenticatorV4 \
    --namespace $AB_NAMESPACE \
    --code 'Jnd3A6A5' \
    > test.out 2>&1
eval_tap $? 414 'PublicEnableMyAuthenticatorV4' test.out

#- 415 PublicGenerateMyAuthenticatorKeyV4
$CLI_EXE \
    --sn iam \
    --op PublicGenerateMyAuthenticatorKeyV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 415 'PublicGenerateMyAuthenticatorKeyV4' test.out

#- 416 PublicGetMyBackupCodesV4
eval_tap 0 416 'PublicGetMyBackupCodesV4 # SKIP deprecated' test.out

#- 417 PublicGenerateMyBackupCodesV4
eval_tap 0 417 'PublicGenerateMyBackupCodesV4 # SKIP deprecated' test.out

#- 418 PublicDisableMyBackupCodesV4
# body param: body
echo '{"factor": "qmwi6wW0", "mfaToken": "D6SBP8fa"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicDisableMyBackupCodesV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 418 'PublicDisableMyBackupCodesV4' test.out

#- 419 PublicDownloadMyBackupCodesV4
eval_tap 0 419 'PublicDownloadMyBackupCodesV4 # SKIP deprecated' test.out

#- 420 PublicEnableMyBackupCodesV4
eval_tap 0 420 'PublicEnableMyBackupCodesV4 # SKIP deprecated' test.out

#- 421 PublicGetBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op PublicGetBackupCodesV4 \
    --namespace $AB_NAMESPACE \
    --languageTag 'GYXeaDkI' \
    > test.out 2>&1
eval_tap $? 421 'PublicGetBackupCodesV4' test.out

#- 422 PublicGenerateBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op PublicGenerateBackupCodesV4 \
    --namespace $AB_NAMESPACE \
    --languageTag '2dsE9n2K' \
    > test.out 2>&1
eval_tap $? 422 'PublicGenerateBackupCodesV4' test.out

#- 423 PublicEnableBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op PublicEnableBackupCodesV4 \
    --namespace $AB_NAMESPACE \
    --languageTag 'cYj0CRER' \
    > test.out 2>&1
eval_tap $? 423 'PublicEnableBackupCodesV4' test.out

#- 424 PublicChallengeMyMFAV4
$CLI_EXE \
    --sn iam \
    --op PublicChallengeMyMFAV4 \
    --namespace $AB_NAMESPACE \
    --code '8lPSQb7U' \
    --factor 'FAX9t8KU' \
    > test.out 2>&1
eval_tap $? 424 'PublicChallengeMyMFAV4' test.out

#- 425 PublicRemoveTrustedDeviceV4
$CLI_EXE \
    --sn iam \
    --op PublicRemoveTrustedDeviceV4 \
    --namespace $AB_NAMESPACE \
    --device_token 'W7OvHOpv' \
    > test.out 2>&1
eval_tap $? 425 'PublicRemoveTrustedDeviceV4' test.out

#- 426 PublicSendMyMFAEmailCodeV4
$CLI_EXE \
    --sn iam \
    --op PublicSendMyMFAEmailCodeV4 \
    --namespace $AB_NAMESPACE \
    --action 'D3UaRSVE' \
    --languageTag '2YsYvTNv' \
    > test.out 2>&1
eval_tap $? 426 'PublicSendMyMFAEmailCodeV4' test.out

#- 427 PublicDisableMyEmailV4
# body param: body
echo '{"factor": "JWW36Vju", "mfaToken": "xLlXhKAG"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicDisableMyEmailV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 427 'PublicDisableMyEmailV4' test.out

#- 428 PublicEnableMyEmailV4
$CLI_EXE \
    --sn iam \
    --op PublicEnableMyEmailV4 \
    --namespace $AB_NAMESPACE \
    --code '5DLBX1lb' \
    > test.out 2>&1
eval_tap $? 428 'PublicEnableMyEmailV4' test.out

#- 429 PublicGetMyEnabledFactorsV4
$CLI_EXE \
    --sn iam \
    --op PublicGetMyEnabledFactorsV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 429 'PublicGetMyEnabledFactorsV4' test.out

#- 430 PublicMakeFactorMyDefaultV4
$CLI_EXE \
    --sn iam \
    --op PublicMakeFactorMyDefaultV4 \
    --namespace $AB_NAMESPACE \
    --factor 'HTh6yhdM' \
    > test.out 2>&1
eval_tap $? 430 'PublicMakeFactorMyDefaultV4' test.out

#- 431 PublicGetMyOwnMFAStatusV4
$CLI_EXE \
    --sn iam \
    --op PublicGetMyOwnMFAStatusV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 431 'PublicGetMyOwnMFAStatusV4' test.out

#- 432 PublicGetMyMFAStatusV4
eval_tap 0 432 'PublicGetMyMFAStatusV4 # SKIP deprecated' test.out

#- 433 PublicGetUserPublicInfoByUserIdV4
$CLI_EXE \
    --sn iam \
    --op PublicGetUserPublicInfoByUserIdV4 \
    --namespace $AB_NAMESPACE \
    --userId 'OcdfjflV' \
    > test.out 2>&1
eval_tap $? 433 'PublicGetUserPublicInfoByUserIdV4' test.out

#- 434 PublicInviteUserV4
# body param: body
echo '{"additionalData": "d1Dtj3e8", "emailAddress": "KHFmrj9w", "languageTag": "SzQMZ72g", "namespace": "d8FMydlt", "namespaceDisplayName": "iBTvwk4s"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicInviteUserV4 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 434 'PublicInviteUserV4' test.out

#- 435 PublicUpgradeHeadlessWithCodeV4Forward
# body param: body
echo '{"acceptedPolicies": [{"isAccepted": false, "localizedPolicyVersionId": "o5swGaok", "policyId": "XiTFjv2C", "policyVersionId": "xQDGPbYH"}, {"isAccepted": true, "localizedPolicyVersionId": "AxsithMb", "policyId": "tj6Dp11y", "policyVersionId": "bWeB5lEC"}, {"isAccepted": true, "localizedPolicyVersionId": "0dGT33Ia", "policyId": "NlwjiXrH", "policyVersionId": "UkTbFg5y"}], "code": "OejgiiGv", "country": "mVpH0hfZ", "dateOfBirth": "OD6zx5of", "displayName": "sVnGWzTe", "emailAddress": "q7rXp8zj", "password": "XHgw1dR7", "reachMinimumAge": true, "uniqueDisplayName": "zhUjSr2w", "username": "6S72hSGM", "validateOnly": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpgradeHeadlessWithCodeV4Forward \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 435 'PublicUpgradeHeadlessWithCodeV4Forward' test.out


# remove artifacts
rm -f "$CLI_TOKEN_FILE"
rm -f "$TEMP_JSON_INPUT"
rm -f "$TEMP_FILE_UPLOAD"

exit $EXIT_CODE