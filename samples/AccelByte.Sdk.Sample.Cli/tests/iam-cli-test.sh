#!/usr/bin/env bash

# Copyright (c) 2021 AccelByte Inc. All Rights Reserved.
# This is licensed software from AccelByte Inc, for limitations
# and restrictions contact your company contract manager.

# This code is generated by tool. DO NOT EDIT.

# Meta:
# - random seed: 
# - template file: 

# Instructions:
# - Run the Justice SDK Mock Server first before running this script.

export AB_BASE_URL="http://127.0.0.1:8080"
export AB_CLIENT_ID="admin"
export AB_CLIENT_SECRET="admin"
export AB_NAMESPACE="test"
export AB_APP_NAME="UnitTest"

EXIT_CODE=0

eval_tap() {
  if [ $1 -eq 0 ]; then
    echo "ok $2 - $3"
  else
    EXIT_CODE=1
    echo "not ok $2 - $3"
    sed 's/^/# /g' $4
  fi
  rm -f $4
}

CLI_EXE="AccelByte.Sdk.Sample.Cli"
CLI_TOKEN_FILE="$(dirname "$(which $CLI_EXE)")/token.json"
TEMP_JSON_INPUT="input_json.json"
TEMP_FILE_UPLOAD="file_upload.bin"

echo "TAP version 13"
echo "1..394"

#- 1 Login
$CLI_EXE --op login --lt user --user user --pass user > test.out 2>&1
eval_tap $? 1 'Login' test.out

if [ $EXIT_CODE -ne 0 ]; then
  echo "Bail out! Login failed."
  exit $EXIT_CODE
fi

# echo "foo" > "$CLI_TOKEN_FILE"

#- 2 GetBansType
eval_tap 0 2 'GetBansType # SKIP deprecated' test.out

#- 3 GetListBanReason
eval_tap 0 3 'GetListBanReason # SKIP deprecated' test.out

#- 4 GetClients
eval_tap 0 4 'GetClients # SKIP deprecated' test.out

#- 5 CreateClient
eval_tap 0 5 'CreateClient # SKIP deprecated' test.out

#- 6 GetClient
eval_tap 0 6 'GetClient # SKIP deprecated' test.out

#- 7 UpdateClient
eval_tap 0 7 'UpdateClient # SKIP deprecated' test.out

#- 8 DeleteClient
eval_tap 0 8 'DeleteClient # SKIP deprecated' test.out

#- 9 UpdateClientPermission
eval_tap 0 9 'UpdateClientPermission # SKIP deprecated' test.out

#- 10 AddClientPermission
eval_tap 0 10 'AddClientPermission # SKIP deprecated' test.out

#- 11 DeleteClientPermission
eval_tap 0 11 'DeleteClientPermission # SKIP deprecated' test.out

#- 12 UpdateClientSecret
eval_tap 0 12 'UpdateClientSecret # SKIP deprecated' test.out

#- 13 GetClientsbyNamespace
eval_tap 0 13 'GetClientsbyNamespace # SKIP deprecated' test.out

#- 14 CreateClientByNamespace
eval_tap 0 14 'CreateClientByNamespace # SKIP deprecated' test.out

#- 15 DeleteClientByNamespace
eval_tap 0 15 'DeleteClientByNamespace # SKIP deprecated' test.out

#- 16 CreateUser
eval_tap 0 16 'CreateUser # SKIP deprecated' test.out

#- 17 GetAdminUsersByRoleID
eval_tap 0 17 'GetAdminUsersByRoleID # SKIP deprecated' test.out

#- 18 GetUserByLoginID
eval_tap 0 18 'GetUserByLoginID # SKIP deprecated' test.out

#- 19 GetUserByPlatformUserID
eval_tap 0 19 'GetUserByPlatformUserID # SKIP deprecated' test.out

#- 20 ForgotPassword
eval_tap 0 20 'ForgotPassword # SKIP deprecated' test.out

#- 21 GetUsersByLoginIds
eval_tap 0 21 'GetUsersByLoginIds # SKIP deprecated' test.out

#- 22 ResetPassword
eval_tap 0 22 'ResetPassword # SKIP deprecated' test.out

#- 23 SearchUser
eval_tap 0 23 'SearchUser # SKIP deprecated' test.out

#- 24 GetUserByUserID
eval_tap 0 24 'GetUserByUserID # SKIP deprecated' test.out

#- 25 UpdateUser
eval_tap 0 25 'UpdateUser # SKIP deprecated' test.out

#- 26 DeleteUser
eval_tap 0 26 'DeleteUser # SKIP deprecated' test.out

#- 27 BanUser
eval_tap 0 27 'BanUser # SKIP deprecated' test.out

#- 28 GetUserBanHistory
eval_tap 0 28 'GetUserBanHistory # SKIP deprecated' test.out

#- 29 DisableUserBan
eval_tap 0 29 'DisableUserBan # SKIP deprecated' test.out

#- 30 EnableUserBan
eval_tap 0 30 'EnableUserBan # SKIP deprecated' test.out

#- 31 ListCrossNamespaceAccountLink
eval_tap 0 31 'ListCrossNamespaceAccountLink # SKIP deprecated' test.out

#- 32 DisableUser
eval_tap 0 32 'DisableUser # SKIP deprecated' test.out

#- 33 EnableUser
eval_tap 0 33 'EnableUser # SKIP deprecated' test.out

#- 34 GetUserInformation
eval_tap 0 34 'GetUserInformation # SKIP deprecated' test.out

#- 35 DeleteUserInformation
eval_tap 0 35 'DeleteUserInformation # SKIP deprecated' test.out

#- 36 GetUserLoginHistories
eval_tap 0 36 'GetUserLoginHistories # SKIP deprecated' test.out

#- 37 UpdatePassword
eval_tap 0 37 'UpdatePassword # SKIP deprecated' test.out

#- 38 SaveUserPermission
eval_tap 0 38 'SaveUserPermission # SKIP deprecated' test.out

#- 39 AddUserPermission
eval_tap 0 39 'AddUserPermission # SKIP deprecated' test.out

#- 40 DeleteUserPermission
eval_tap 0 40 'DeleteUserPermission # SKIP deprecated' test.out

#- 41 GetUserPlatformAccounts
eval_tap 0 41 'GetUserPlatformAccounts # SKIP deprecated' test.out

#- 42 GetUserMapping
eval_tap 0 42 'GetUserMapping # SKIP deprecated' test.out

#- 43 GetUserJusticePlatformAccount
eval_tap 0 43 'GetUserJusticePlatformAccount # SKIP deprecated' test.out

#- 44 PlatformLink
eval_tap 0 44 'PlatformLink # SKIP deprecated' test.out

#- 45 PlatformUnlink
eval_tap 0 45 'PlatformUnlink # SKIP deprecated' test.out

#- 46 GetPublisherUser
eval_tap 0 46 'GetPublisherUser # SKIP deprecated' test.out

#- 47 SaveUserRoles
eval_tap 0 47 'SaveUserRoles # SKIP deprecated' test.out

#- 48 AddUserRole
eval_tap 0 48 'AddUserRole # SKIP deprecated' test.out

#- 49 DeleteUserRole
eval_tap 0 49 'DeleteUserRole # SKIP deprecated' test.out

#- 50 UpgradeHeadlessAccount
eval_tap 0 50 'UpgradeHeadlessAccount # SKIP deprecated' test.out

#- 51 UpgradeHeadlessAccountWithVerificationCode
eval_tap 0 51 'UpgradeHeadlessAccountWithVerificationCode # SKIP deprecated' test.out

#- 52 UserVerification
eval_tap 0 52 'UserVerification # SKIP deprecated' test.out

#- 53 SendVerificationCode
eval_tap 0 53 'SendVerificationCode # SKIP deprecated' test.out

#- 54 Authorization
eval_tap 0 54 'Authorization # SKIP deprecated' test.out

#- 55 GetJWKS
eval_tap 0 55 'GetJWKS # SKIP deprecated' test.out

#- 56 PlatformTokenRequestHandler
eval_tap 0 56 'PlatformTokenRequestHandler # SKIP deprecated' test.out

#- 57 RevokeUser
eval_tap 0 57 'RevokeUser # SKIP deprecated' test.out

#- 58 GetRevocationList
eval_tap 0 58 'GetRevocationList # SKIP deprecated' test.out

#- 59 RevokeToken
eval_tap 0 59 'RevokeToken # SKIP deprecated' test.out

#- 60 RevokeAUser
eval_tap 0 60 'RevokeAUser # SKIP deprecated' test.out

#- 61 TokenGrant
eval_tap 0 61 'TokenGrant # SKIP deprecated' test.out

#- 62 VerifyToken
eval_tap 0 62 'VerifyToken # SKIP deprecated' test.out

#- 63 GetRoles
eval_tap 0 63 'GetRoles # SKIP deprecated' test.out

#- 64 CreateRole
eval_tap 0 64 'CreateRole # SKIP deprecated' test.out

#- 65 GetRole
eval_tap 0 65 'GetRole # SKIP deprecated' test.out

#- 66 UpdateRole
eval_tap 0 66 'UpdateRole # SKIP deprecated' test.out

#- 67 DeleteRole
eval_tap 0 67 'DeleteRole # SKIP deprecated' test.out

#- 68 GetRoleAdminStatus
eval_tap 0 68 'GetRoleAdminStatus # SKIP deprecated' test.out

#- 69 SetRoleAsAdmin
eval_tap 0 69 'SetRoleAsAdmin # SKIP deprecated' test.out

#- 70 RemoveRoleAdmin
eval_tap 0 70 'RemoveRoleAdmin # SKIP deprecated' test.out

#- 71 GetRoleManagers
eval_tap 0 71 'GetRoleManagers # SKIP deprecated' test.out

#- 72 AddRoleManagers
eval_tap 0 72 'AddRoleManagers # SKIP deprecated' test.out

#- 73 RemoveRoleManagers
eval_tap 0 73 'RemoveRoleManagers # SKIP deprecated' test.out

#- 74 GetRoleMembers
eval_tap 0 74 'GetRoleMembers # SKIP deprecated' test.out

#- 75 AddRoleMembers
eval_tap 0 75 'AddRoleMembers # SKIP deprecated' test.out

#- 76 RemoveRoleMembers
eval_tap 0 76 'RemoveRoleMembers # SKIP deprecated' test.out

#- 77 UpdateRolePermissions
eval_tap 0 77 'UpdateRolePermissions # SKIP deprecated' test.out

#- 78 AddRolePermission
eval_tap 0 78 'AddRolePermission # SKIP deprecated' test.out

#- 79 DeleteRolePermission
eval_tap 0 79 'DeleteRolePermission # SKIP deprecated' test.out

#- 80 AdminGetAgeRestrictionStatusV2
eval_tap 0 80 'AdminGetAgeRestrictionStatusV2 # SKIP deprecated' test.out

#- 81 AdminUpdateAgeRestrictionConfigV2
eval_tap 0 81 'AdminUpdateAgeRestrictionConfigV2 # SKIP deprecated' test.out

#- 82 GetListCountryAgeRestriction
eval_tap 0 82 'GetListCountryAgeRestriction # SKIP deprecated' test.out

#- 83 UpdateCountryAgeRestriction
eval_tap 0 83 'UpdateCountryAgeRestriction # SKIP deprecated' test.out

#- 84 AdminSearchUsersV2
eval_tap 0 84 'AdminSearchUsersV2 # SKIP deprecated' test.out

#- 85 AdminGetUserByUserIdV2
eval_tap 0 85 'AdminGetUserByUserIdV2 # SKIP deprecated' test.out

#- 86 AdminUpdateUserV2
eval_tap 0 86 'AdminUpdateUserV2 # SKIP deprecated' test.out

#- 87 AdminBanUserV2
eval_tap 0 87 'AdminBanUserV2 # SKIP deprecated' test.out

#- 88 AdminGetUserBanV2
eval_tap 0 88 'AdminGetUserBanV2 # SKIP deprecated' test.out

#- 89 AdminDisableUserV2
eval_tap 0 89 'AdminDisableUserV2 # SKIP deprecated' test.out

#- 90 AdminEnableUserV2
eval_tap 0 90 'AdminEnableUserV2 # SKIP deprecated' test.out

#- 91 AdminResetPasswordV2
eval_tap 0 91 'AdminResetPasswordV2 # SKIP deprecated' test.out

#- 92 AdminDeletePlatformLinkV2
eval_tap 0 92 'AdminDeletePlatformLinkV2 # SKIP deprecated' test.out

#- 93 AdminPutUserRolesV2
eval_tap 0 93 'AdminPutUserRolesV2 # SKIP deprecated' test.out

#- 94 AdminCreateUserRolesV2
eval_tap 0 94 'AdminCreateUserRolesV2 # SKIP deprecated' test.out

#- 95 PublicGetCountryAgeRestriction
eval_tap 0 95 'PublicGetCountryAgeRestriction # SKIP deprecated' test.out

#- 96 PublicCreateUserV2
eval_tap 0 96 'PublicCreateUserV2 # SKIP deprecated' test.out

#- 97 PublicForgotPasswordV2
eval_tap 0 97 'PublicForgotPasswordV2 # SKIP deprecated' test.out

#- 98 PublicResetPasswordV2
eval_tap 0 98 'PublicResetPasswordV2 # SKIP deprecated' test.out

#- 99 PublicGetUserByUserIDV2
eval_tap 0 99 'PublicGetUserByUserIDV2 # SKIP deprecated' test.out

#- 100 PublicUpdateUserV2
eval_tap 0 100 'PublicUpdateUserV2 # SKIP deprecated' test.out

#- 101 PublicGetUserBan
eval_tap 0 101 'PublicGetUserBan # SKIP deprecated' test.out

#- 102 PublicUpdatePasswordV2
eval_tap 0 102 'PublicUpdatePasswordV2 # SKIP deprecated' test.out

#- 103 GetListJusticePlatformAccounts
eval_tap 0 103 'GetListJusticePlatformAccounts # SKIP deprecated' test.out

#- 104 PublicPlatformLinkV2
eval_tap 0 104 'PublicPlatformLinkV2 # SKIP deprecated' test.out

#- 105 PublicDeletePlatformLinkV2
eval_tap 0 105 'PublicDeletePlatformLinkV2 # SKIP deprecated' test.out

#- 106 AdminGetBansTypeV3
$CLI_EXE \
    --sn iam \
    --op AdminGetBansTypeV3 \
    > test.out 2>&1
eval_tap $? 106 'AdminGetBansTypeV3' test.out

#- 107 AdminGetListBanReasonV3
$CLI_EXE \
    --sn iam \
    --op AdminGetListBanReasonV3 \
    > test.out 2>&1
eval_tap $? 107 'AdminGetListBanReasonV3' test.out

#- 108 AdminListClientAvailablePermissions
$CLI_EXE \
    --sn iam \
    --op AdminListClientAvailablePermissions \
    --excludePermissions 'true' \
    > test.out 2>&1
eval_tap $? 108 'AdminListClientAvailablePermissions' test.out

#- 109 AdminUpdateAvailablePermissionsByModule
# body param: body
echo '{"modules": [{"docLink": "whdy5i0o", "groups": [{"group": "fWZyfJg9", "groupId": "d3lXSG5Y", "permissions": [{"allowedActions": [37, 51, 19], "resource": "HhoGyKkY"}, {"allowedActions": [61, 79, 68], "resource": "nvnZZtHJ"}, {"allowedActions": [93, 37, 32], "resource": "fgvtE2Qb"}]}, {"group": "IJpdAOLp", "groupId": "YHnQpPUt", "permissions": [{"allowedActions": [36, 37, 99], "resource": "S3Hf2jld"}, {"allowedActions": [80, 87, 36], "resource": "66MxMIUw"}, {"allowedActions": [5, 31, 41], "resource": "XSN4OnnS"}]}, {"group": "Sn6BhO7R", "groupId": "10Mhgltt", "permissions": [{"allowedActions": [0, 71, 27], "resource": "frUJgnvq"}, {"allowedActions": [7, 99, 27], "resource": "R8v5gwQe"}, {"allowedActions": [16, 67, 18], "resource": "ynameEUo"}]}], "module": "k7FlPRdv", "moduleId": "cV6oJTnt"}, {"docLink": "PjyMewa3", "groups": [{"group": "As9Z9o0z", "groupId": "tSC3kvwh", "permissions": [{"allowedActions": [76, 24, 88], "resource": "UfgKWjo0"}, {"allowedActions": [35, 3, 19], "resource": "9Plw4maM"}, {"allowedActions": [24, 100, 20], "resource": "iYQqvVhq"}]}, {"group": "NddKBK3c", "groupId": "KKqvYegM", "permissions": [{"allowedActions": [50, 62, 31], "resource": "xPQ5jTw4"}, {"allowedActions": [59, 100, 87], "resource": "lxSgcaUE"}, {"allowedActions": [51, 68, 50], "resource": "lapQdbzT"}]}, {"group": "jsemOGvc", "groupId": "VHHHoBuC", "permissions": [{"allowedActions": [22, 40, 7], "resource": "8AOmXCxh"}, {"allowedActions": [6, 69, 66], "resource": "bJGwyzip"}, {"allowedActions": [95, 98, 38], "resource": "VKlnBj38"}]}], "module": "IOGQah3L", "moduleId": "kpXXIlzN"}, {"docLink": "hzJuFilJ", "groups": [{"group": "BmDUOuMz", "groupId": "vhkGOFuk", "permissions": [{"allowedActions": [32, 94, 87], "resource": "I2dVDwuy"}, {"allowedActions": [25, 99, 33], "resource": "7Nj1W61b"}, {"allowedActions": [52, 91, 83], "resource": "wWrpMvHz"}]}, {"group": "HRR40axE", "groupId": "sHlKHe4o", "permissions": [{"allowedActions": [43, 34, 58], "resource": "CLFFOLjs"}, {"allowedActions": [97, 94, 2], "resource": "vAnZgsd2"}, {"allowedActions": [16, 8, 19], "resource": "5DO8hx0Q"}]}, {"group": "BCiqpsQD", "groupId": "UrhnYVxQ", "permissions": [{"allowedActions": [100, 36, 57], "resource": "1cOsBWkU"}, {"allowedActions": [7, 53, 31], "resource": "FzQq8l06"}, {"allowedActions": [31, 61, 88], "resource": "FnKFO4jK"}]}], "module": "ihIKbYrM", "moduleId": "jG7Aw3GJ"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateAvailablePermissionsByModule \
    --forceDelete 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 109 'AdminUpdateAvailablePermissionsByModule' test.out

#- 110 AdminDeleteConfigPermissionsByGroup
# body param: body
echo '{"groupId": "pPzu6MIs", "moduleId": "ZBdaSwfO"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDeleteConfigPermissionsByGroup \
    --forceDelete 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 110 'AdminDeleteConfigPermissionsByGroup' test.out

#- 111 AdminListClientTemplates
$CLI_EXE \
    --sn iam \
    --op AdminListClientTemplates \
    > test.out 2>&1
eval_tap $? 111 'AdminListClientTemplates' test.out

#- 112 AdminGetInputValidations
$CLI_EXE \
    --sn iam \
    --op AdminGetInputValidations \
    > test.out 2>&1
eval_tap $? 112 'AdminGetInputValidations' test.out

#- 113 AdminUpdateInputValidations
# body param: body
echo '[{"field": "E5i6PrKg", "validation": {"allowAllSpecialCharacters": true, "allowDigit": false, "allowLetter": true, "allowSpace": false, "allowUnicode": true, "avatarConfig": {"allowedPrefixes": ["XooEXSvT", "HE7gwIlf", "XukNV66n"], "preferRegex": true, "regex": "sDrY4p9A"}, "blockedWord": ["UjI5Ftpp", "YXiFwZ1q", "YffGBlTk"], "description": [{"language": "3GVuXOLb", "message": ["Mc9jhWyL", "19XO2acj", "Itzp6ItI"]}, {"language": "2rkgdgNA", "message": ["0Fe48i64", "Mc15ZYqI", "CUErzZ4Q"]}, {"language": "8KeaVuwX", "message": ["bbWdyws7", "UuPsqZAF", "Pi9JZ5KF"]}], "isCustomRegex": true, "letterCase": "UuhKYnaR", "maxLength": 24, "maxRepeatingAlphaNum": 94, "maxRepeatingSpecialCharacter": 96, "minCharType": 3, "minLength": 97, "regex": "f3WKTH4Y", "specialCharacterLocation": "8iHxwcJX", "specialCharacters": ["NkTpbxhU", "7SuAJDtq", "BlRz82Sq"]}}, {"field": "V70svPXQ", "validation": {"allowAllSpecialCharacters": true, "allowDigit": true, "allowLetter": false, "allowSpace": true, "allowUnicode": true, "avatarConfig": {"allowedPrefixes": ["WlKM3GfD", "X1h0zicG", "d8M0Bln3"], "preferRegex": false, "regex": "NUq6Ag1j"}, "blockedWord": ["yGQyUbaq", "GApVRAu6", "MHpZRoMX"], "description": [{"language": "C3bziehQ", "message": ["QZTsZAtT", "alztEebY", "o8ex0Wkf"]}, {"language": "NxQWEr1z", "message": ["Ga1hJf4U", "k4c9JmnT", "AUhwQVy8"]}, {"language": "6nlXgEuS", "message": ["1lxMRXds", "f80bnmG8", "diRU577e"]}], "isCustomRegex": false, "letterCase": "B5H1smIE", "maxLength": 83, "maxRepeatingAlphaNum": 74, "maxRepeatingSpecialCharacter": 44, "minCharType": 12, "minLength": 71, "regex": "HuMtnPji", "specialCharacterLocation": "eoP7Byzw", "specialCharacters": ["o5nrHuoR", "c7BSMS8j", "wlqiSjdR"]}}, {"field": "eCetJa2K", "validation": {"allowAllSpecialCharacters": true, "allowDigit": true, "allowLetter": false, "allowSpace": false, "allowUnicode": false, "avatarConfig": {"allowedPrefixes": ["veGeLgij", "CVxxUagq", "exDfzNdH"], "preferRegex": false, "regex": "a8zZVieX"}, "blockedWord": ["c4ALk1kP", "PilHZlb1", "GDkF3X97"], "description": [{"language": "aE9zpMt6", "message": ["InZnqMSk", "rPyAm2cP", "vIlPAzw7"]}, {"language": "PPxO6b3v", "message": ["iO4AlPQT", "PmHY9KJp", "OOlQg5yz"]}, {"language": "CehMvCrP", "message": ["EDaC6duW", "xeCIxje1", "2J0fc49B"]}], "isCustomRegex": true, "letterCase": "T8dX7ShO", "maxLength": 18, "maxRepeatingAlphaNum": 77, "maxRepeatingSpecialCharacter": 7, "minCharType": 36, "minLength": 36, "regex": "t2BacfzD", "specialCharacterLocation": "l6szNSZF", "specialCharacters": ["njhyuvmf", "dMoiQeE6", "loaLKmns"]}}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateInputValidations \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 113 'AdminUpdateInputValidations' test.out

#- 114 AdminResetInputValidations
$CLI_EXE \
    --sn iam \
    --op AdminResetInputValidations \
    --field 'YGWboa7J' \
    > test.out 2>&1
eval_tap $? 114 'AdminResetInputValidations' test.out

#- 115 ListAdminsV3
$CLI_EXE \
    --sn iam \
    --op ListAdminsV3 \
    --namespace $AB_NAMESPACE \
    --after 'G1Hxlqoi' \
    --before 's8VkMIHZ' \
    --endDate 'gKjUw6t9' \
    --limit '43' \
    --query 'wq8QJUbX' \
    --roleId 'RdrBVpDh' \
    --startDate 'm1bRvHzq' \
    > test.out 2>&1
eval_tap $? 115 'ListAdminsV3' test.out

#- 116 AdminGetAgeRestrictionStatusV3
$CLI_EXE \
    --sn iam \
    --op AdminGetAgeRestrictionStatusV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 116 'AdminGetAgeRestrictionStatusV3' test.out

#- 117 AdminUpdateAgeRestrictionConfigV3
# body param: body
echo '{"ageRestriction": 66, "enable": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateAgeRestrictionConfigV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 117 'AdminUpdateAgeRestrictionConfigV3' test.out

#- 118 AdminGetListCountryAgeRestrictionV3
$CLI_EXE \
    --sn iam \
    --op AdminGetListCountryAgeRestrictionV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 118 'AdminGetListCountryAgeRestrictionV3' test.out

#- 119 AdminUpdateCountryAgeRestrictionV3
# body param: body
echo '{"ageRestriction": 99}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateCountryAgeRestrictionV3 \
    --countryCode 'k4fqc203' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 119 'AdminUpdateCountryAgeRestrictionV3' test.out

#- 120 AdminGetBannedUsersV3
$CLI_EXE \
    --sn iam \
    --op AdminGetBannedUsersV3 \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --banType '3W0WGGap' \
    --limit '5' \
    --offset '33' \
    > test.out 2>&1
eval_tap $? 120 'AdminGetBannedUsersV3' test.out

#- 121 AdminBanUserBulkV3
# body param: body
echo '{"ban": "ICP9TJya", "comment": "IJBOZjCQ", "endDate": "zM2chMXM", "reason": "cNt0nyz6", "skipNotif": false, "userIds": ["O70rFFjN", "sSLipUX6", "pUnfm9WY"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBanUserBulkV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 121 'AdminBanUserBulkV3' test.out

#- 122 AdminUnbanUserBulkV3
# body param: body
echo '{"bans": [{"banId": "6t2X15hv", "userId": "dBKahhGV"}, {"banId": "Fr4fhaTv", "userId": "GtFFmZw4"}, {"banId": "PBMGHQTA", "userId": "ZndzznAN"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUnbanUserBulkV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 122 'AdminUnbanUserBulkV3' test.out

#- 123 AdminGetBansTypeWithNamespaceV3
$CLI_EXE \
    --sn iam \
    --op AdminGetBansTypeWithNamespaceV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 123 'AdminGetBansTypeWithNamespaceV3' test.out

#- 124 AdminGetClientsByNamespaceV3
$CLI_EXE \
    --sn iam \
    --op AdminGetClientsByNamespaceV3 \
    --namespace $AB_NAMESPACE \
    --clientId '2Gz3A7i5' \
    --clientName 'oavKVLEr' \
    --clientType 'xtUVX4CT' \
    --limit '93' \
    --offset '39' \
    --skipLoginQueue 'true' \
    > test.out 2>&1
eval_tap $? 124 'AdminGetClientsByNamespaceV3' test.out

#- 125 AdminBulkUpdateClientsV3
# body param: body
echo '{"clientIds": ["ID9MlKBc", "EQ36yWI2", "LrAsfwxH"], "clientUpdateRequest": {"audiences": ["M9T7b4CX", "bjvdvH7J", "DMjehIcn"], "baseUri": "Ox70CaTP", "clientName": "9OZ0mOaM", "clientPermissions": [{"action": 46, "resource": "B921Xg4S", "schedAction": 76, "schedCron": "UWWAZWNV", "schedRange": ["5OhxYxzO", "vfeNzIoq", "x9cOu9YM"]}, {"action": 14, "resource": "G3BHArVn", "schedAction": 90, "schedCron": "rDyvIlUn", "schedRange": ["CNfdQZFP", "M9H8JQ2t", "sIX3ssrH"]}, {"action": 47, "resource": "DIME3Lhm", "schedAction": 78, "schedCron": "mSdYb7XM", "schedRange": ["MVAu1PO9", "dyK4anqK", "cqlaLJzo"]}], "clientPlatform": "4NtZjCzS", "deletable": true, "description": "ILLRbdyF", "modulePermissions": [{"moduleId": "xBjcGGjZ", "selectedGroups": [{"groupId": "S2cO3A3H", "selectedActions": [97, 100, 9]}, {"groupId": "SnGFCqFF", "selectedActions": [95, 54, 67]}, {"groupId": "3ghJI31v", "selectedActions": [95, 76, 2]}]}, {"moduleId": "Lw3QqzUE", "selectedGroups": [{"groupId": "eN32f7Co", "selectedActions": [88, 36, 37]}, {"groupId": "VP54k3cB", "selectedActions": [43, 63, 45]}, {"groupId": "MeyQxGVp", "selectedActions": [55, 4, 51]}]}, {"moduleId": "jouarTWs", "selectedGroups": [{"groupId": "n8bd9HSw", "selectedActions": [68, 9, 87]}, {"groupId": "P4zPTABz", "selectedActions": [13, 100, 14]}, {"groupId": "Ep6LvMTc", "selectedActions": [61, 63, 44]}]}], "namespace": "jmxkrAmF", "oauthAccessTokenExpiration": 84, "oauthAccessTokenExpirationTimeUnit": "Kdlt6dgV", "oauthRefreshTokenExpiration": 43, "oauthRefreshTokenExpirationTimeUnit": "2OwdpXPS", "redirectUri": "ycAUem1B", "scopes": ["bo96t0JS", "QilBb81z", "gfbfceex"], "skipLoginQueue": true, "twoFactorEnabled": true}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBulkUpdateClientsV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 125 'AdminBulkUpdateClientsV3' test.out

#- 126 AdminCreateClientV3
# body param: body
echo '{"audiences": ["IaEAN5W1", "7X1xGBgg", "sozUVO0y"], "baseUri": "RXL7QdGm", "clientId": "jptEFI7H", "clientName": "BjW5L1un", "clientPermissions": [{"action": 63, "resource": "pvnzxnQw", "schedAction": 51, "schedCron": "r3y4ifGX", "schedRange": ["zydSR77j", "xH0qfiTs", "5tvgdBPZ"]}, {"action": 54, "resource": "TN0vvFVu", "schedAction": 53, "schedCron": "ZnA0ACp7", "schedRange": ["NYeLBGpT", "G0k2ndx8", "RAWuZGfq"]}, {"action": 85, "resource": "xY3xldRd", "schedAction": 15, "schedCron": "rHQPU7D2", "schedRange": ["qOLKEHnp", "cJu4RsgJ", "RSwKIoRT"]}], "clientPlatform": "42sDUx6Q", "deletable": true, "description": "QmZeljLT", "modulePermissions": [{"moduleId": "GWeB1hzI", "selectedGroups": [{"groupId": "u5wLAw67", "selectedActions": [92, 55, 36]}, {"groupId": "nrZZznlv", "selectedActions": [81, 4, 86]}, {"groupId": "ot62PPj4", "selectedActions": [4, 70, 23]}]}, {"moduleId": "ZHGXMGxM", "selectedGroups": [{"groupId": "7ZvbF23b", "selectedActions": [88, 79, 13]}, {"groupId": "5F23kaUJ", "selectedActions": [56, 45, 24]}, {"groupId": "PKNJzyTN", "selectedActions": [90, 13, 26]}]}, {"moduleId": "eRgV3a0G", "selectedGroups": [{"groupId": "HSoefxU9", "selectedActions": [33, 16, 16]}, {"groupId": "vJsZDmcP", "selectedActions": [68, 22, 84]}, {"groupId": "okDfauve", "selectedActions": [60, 94, 34]}]}], "namespace": "qEuVi8Ay", "oauthAccessTokenExpiration": 35, "oauthAccessTokenExpirationTimeUnit": "L8ywnskx", "oauthClientType": "HGCO3W8e", "oauthRefreshTokenExpiration": 44, "oauthRefreshTokenExpirationTimeUnit": "bkOK3Ghc", "parentNamespace": "K3Z9MA6T", "redirectUri": "v6QAlBqm", "scopes": ["b7zwRIq1", "kGLLT3ov", "2vlGGQzZ"], "secret": "oWpn1hK1", "skipLoginQueue": true, "twoFactorEnabled": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminCreateClientV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 126 'AdminCreateClientV3' test.out

#- 127 AdminGetClientsbyNamespacebyIDV3
$CLI_EXE \
    --sn iam \
    --op AdminGetClientsbyNamespacebyIDV3 \
    --clientId 'uSyyBTni' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 127 'AdminGetClientsbyNamespacebyIDV3' test.out

#- 128 AdminDeleteClientV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteClientV3 \
    --clientId 'hpvjdJRM' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 128 'AdminDeleteClientV3' test.out

#- 129 AdminUpdateClientV3
# body param: body
echo '{"audiences": ["izBvS3Wk", "GFkIYwTs", "cKmd2zVT"], "baseUri": "vFethavp", "clientName": "gYsMSI9o", "clientPermissions": [{"action": 97, "resource": "LrmRFdYy", "schedAction": 84, "schedCron": "nnL0PhHJ", "schedRange": ["LYbuZFy2", "HZsL9Gxr", "yiiMjN6D"]}, {"action": 59, "resource": "MC8pcLzi", "schedAction": 29, "schedCron": "BduFcBbK", "schedRange": ["6FBXcnca", "agbQ9OmB", "u9B6iQp1"]}, {"action": 28, "resource": "RQel6pZf", "schedAction": 68, "schedCron": "gu4uLIWu", "schedRange": ["7T9G4WMQ", "W9gTxl7l", "Xt1PL7va"]}], "clientPlatform": "phEca8cY", "deletable": true, "description": "0yEIN46c", "modulePermissions": [{"moduleId": "NmEIuobE", "selectedGroups": [{"groupId": "g61Jz7Hf", "selectedActions": [39, 15, 84]}, {"groupId": "BNwN2ojd", "selectedActions": [54, 35, 81]}, {"groupId": "1w5QesOv", "selectedActions": [5, 52, 8]}]}, {"moduleId": "zCSmr1Kw", "selectedGroups": [{"groupId": "SJEdtkPC", "selectedActions": [11, 63, 15]}, {"groupId": "JcW0zZaB", "selectedActions": [27, 57, 95]}, {"groupId": "SlgV4CXU", "selectedActions": [6, 1, 48]}]}, {"moduleId": "2t2YL2Fr", "selectedGroups": [{"groupId": "6im3huUn", "selectedActions": [60, 75, 80]}, {"groupId": "VVkcSxr0", "selectedActions": [60, 21, 87]}, {"groupId": "TrFn0mxS", "selectedActions": [51, 82, 81]}]}], "namespace": "fRLCAAh1", "oauthAccessTokenExpiration": 17, "oauthAccessTokenExpirationTimeUnit": "60eyBraT", "oauthRefreshTokenExpiration": 85, "oauthRefreshTokenExpirationTimeUnit": "h976psb1", "redirectUri": "hh86FROo", "scopes": ["vsWReX0T", "ZZHRFu6e", "HU8OX7rm"], "skipLoginQueue": true, "twoFactorEnabled": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateClientV3 \
    --clientId 'KgbPkAYy' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 129 'AdminUpdateClientV3' test.out

#- 130 AdminUpdateClientPermissionV3
# body param: body
echo '{"permissions": [{"action": 40, "resource": "IA0EVGFG"}, {"action": 52, "resource": "dt99MH6D"}, {"action": 35, "resource": "pmEyUz9O"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateClientPermissionV3 \
    --clientId 'w9vzHxGK' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 130 'AdminUpdateClientPermissionV3' test.out

#- 131 AdminAddClientPermissionsV3
# body param: body
echo '{"permissions": [{"action": 79, "resource": "TV3QF3NG"}, {"action": 56, "resource": "gqE1Hdd0"}, {"action": 34, "resource": "yT6ZaKTa"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddClientPermissionsV3 \
    --clientId 'AkDdloDs' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 131 'AdminAddClientPermissionsV3' test.out

#- 132 AdminDeleteClientPermissionV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteClientPermissionV3 \
    --action '69' \
    --clientId 'XrCCXnrd' \
    --namespace $AB_NAMESPACE \
    --resource 'S8vdYwnv' \
    > test.out 2>&1
eval_tap $? 132 'AdminDeleteClientPermissionV3' test.out

#- 133 AdminGetConfigValueV3
$CLI_EXE \
    --sn iam \
    --op AdminGetConfigValueV3 \
    --configKey 'VW1lKQ0q' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 133 'AdminGetConfigValueV3' test.out

#- 134 AdminGetCountryListV3
$CLI_EXE \
    --sn iam \
    --op AdminGetCountryListV3 \
    --namespace $AB_NAMESPACE \
    --filterBlacklist 'false' \
    > test.out 2>&1
eval_tap $? 134 'AdminGetCountryListV3' test.out

#- 135 AdminGetCountryBlacklistV3
$CLI_EXE \
    --sn iam \
    --op AdminGetCountryBlacklistV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 135 'AdminGetCountryBlacklistV3' test.out

#- 136 AdminAddCountryBlacklistV3
# body param: body
echo '{"blacklist": ["vwWw2dtr", "MJdnf73l", "qKGqw0Uz"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddCountryBlacklistV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 136 'AdminAddCountryBlacklistV3' test.out

#- 137 RetrieveAllThirdPartyLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op RetrieveAllThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 137 'RetrieveAllThirdPartyLoginPlatformCredentialV3' test.out

#- 138 RetrieveAllActiveThirdPartyLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op RetrieveAllActiveThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 138 'RetrieveAllActiveThirdPartyLoginPlatformCredentialV3' test.out

#- 139 RetrieveAllSSOLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op RetrieveAllSSOLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --limit '14' \
    --offset '98' \
    > test.out 2>&1
eval_tap $? 139 'RetrieveAllSSOLoginPlatformCredentialV3' test.out

#- 140 RetrieveThirdPartyLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op RetrieveThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --platformId '99MGNWjL' \
    > test.out 2>&1
eval_tap $? 140 'RetrieveThirdPartyLoginPlatformCredentialV3' test.out

#- 141 AddThirdPartyLoginPlatformCredentialV3
# body param: body
echo '{"ACSURL": "a4uKaOik", "AWSCognitoRegion": "tKXoF3Vk", "AWSCognitoUserPool": "KvzRhuul", "AllowedClients": ["HQ4P0PCR", "ZRkdBBtj", "mWE42iN6"], "AppId": "AnkDPuuo", "AuthorizationEndpoint": "ACxmj68F", "ClientId": "cF6QmoXD", "Environment": "dL4OcnXN", "FederationMetadataURL": "Ad61KN9h", "GenericOauthFlow": true, "IsActive": true, "Issuer": "VjY9PJ9B", "JWKSEndpoint": "kCObR8xs", "KeyID": "jhVguOuP", "NetflixCertificates": {"encryptedPrivateKey": "iFusXW8s", "encryptedPrivateKeyName": "jM3euTN6", "publicCertificate": "c8RwS7Nj", "publicCertificateName": "GNxswDb3", "rootCertificate": "NvHWWcz0", "rootCertificateName": "9e7vKmQb"}, "OrganizationId": "QDee4JUf", "PlatformName": "7NqdLWC8", "RedirectUri": "k4LSlECo", "RegisteredDomains": [{"affectedClientIDs": ["6u8DcoKy", "S77M7OZv", "oQVL4eEk"], "domain": "Mt4VADKa", "namespaces": ["Phcjc3LU", "kUGZt5w8", "8ThfuttC"], "roleId": "mlrJgaaQ"}, {"affectedClientIDs": ["irzBxQZj", "FXttyIlL", "QUBw2faF"], "domain": "vvZ7zFmZ", "namespaces": ["KXOmvC4D", "Q6rnPpJm", "2D5pTnud"], "roleId": "KYcVWilw"}, {"affectedClientIDs": ["Va1iH5VF", "X60KTwc6", "LckOcCBy"], "domain": "MBRloWD1", "namespaces": ["8swYOi3p", "pme5WUIW", "9WNK5bhv"], "roleId": "F7YVTMUu"}], "Secret": "HBrgWNIY", "TeamID": "URd3BmuL", "TokenAuthenticationType": "GuRfRypz", "TokenClaimsMapping": {"TJbOctsV": "2fJga1yl", "C57qHatC": "qB2UrVvR", "Pna8lLvh": "UBb4eyS5"}, "TokenEndpoint": "6u8UnepU", "UserInfoEndpoint": "K4rPQTaP", "UserInfoHTTPMethod": "ZL1Vxfnb", "scopes": ["8zn4mJtq", "YHihn8IL", "gajuEDue"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AddThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'XRUNCtS9' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 141 'AddThirdPartyLoginPlatformCredentialV3' test.out

#- 142 DeleteThirdPartyLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op DeleteThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'tfNn4GhA' \
    > test.out 2>&1
eval_tap $? 142 'DeleteThirdPartyLoginPlatformCredentialV3' test.out

#- 143 UpdateThirdPartyLoginPlatformCredentialV3
# body param: body
echo '{"ACSURL": "CzHK3ffh", "AWSCognitoRegion": "vjQQgIlW", "AWSCognitoUserPool": "UDqLgEy9", "AllowedClients": ["sEFTMXaU", "iFAxCQpB", "93CTxikJ"], "AppId": "BKsHQxQp", "AuthorizationEndpoint": "BJSQt4Ho", "ClientId": "32FpLOtQ", "Environment": "GxlFGWT0", "FederationMetadataURL": "R0MQ4kdU", "GenericOauthFlow": true, "IsActive": true, "Issuer": "b8x7qIiJ", "JWKSEndpoint": "KZtdA6zG", "KeyID": "41R4gps3", "NetflixCertificates": {"encryptedPrivateKey": "SM9Z0swR", "encryptedPrivateKeyName": "Xtxe5KoF", "publicCertificate": "jIyegnZX", "publicCertificateName": "nREUUnJz", "rootCertificate": "qVxIeUjA", "rootCertificateName": "JxgPq2e4"}, "OrganizationId": "hvWCE1s6", "PlatformName": "rjrI6EXS", "RedirectUri": "O5t3OG2h", "RegisteredDomains": [{"affectedClientIDs": ["xnYUONtI", "qcPDNK0U", "pAWS9s3J"], "domain": "VNmMeptw", "namespaces": ["ByFTKEGn", "5GBnxdgc", "mvVi7c8A"], "roleId": "BvTaGfCP"}, {"affectedClientIDs": ["pXsCXOYT", "udacQQdI", "nmrUWBAp"], "domain": "fDgcCZ7i", "namespaces": ["IqHmXNTn", "MrlHcP5i", "iuOQzD15"], "roleId": "ZFuDT6Bw"}, {"affectedClientIDs": ["7HDybkSr", "bIqdB842", "AHYvZtJI"], "domain": "8ICeSQmX", "namespaces": ["SEWSEMKR", "7xkuT3Z3", "VsqybSCv"], "roleId": "3Zc1BrLl"}], "Secret": "jlb7FLlM", "TeamID": "VA1Yhr0d", "TokenAuthenticationType": "9dKqIX5y", "TokenClaimsMapping": {"rSzFxVXT": "nOgeULaJ", "AsIGmJOZ": "ouC9URCx", "FM7IZffO": "vgpisFBj"}, "TokenEndpoint": "xrPwGfnh", "UserInfoEndpoint": "oufEAG7w", "UserInfoHTTPMethod": "Qq0wcStZ", "scopes": ["lb61IHf9", "8rjoZ7uq", "TviYjsZ6"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op UpdateThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'Jf5Hr3hV' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 143 'UpdateThirdPartyLoginPlatformCredentialV3' test.out

#- 144 UpdateThirdPartyLoginPlatformDomainV3
# body param: body
echo '{"affectedClientIDs": ["3hbxZWpM", "N5SPbzvC", "26udamEk"], "assignedNamespaces": ["dxBTjpTx", "Vjb4ICwD", "KCEjFPBV"], "domain": "J8YQB8DQ", "roleId": "0OrlGBxo"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op UpdateThirdPartyLoginPlatformDomainV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'ixGvg3cu' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 144 'UpdateThirdPartyLoginPlatformDomainV3' test.out

#- 145 DeleteThirdPartyLoginPlatformDomainV3
# body param: body
echo '{"domain": "FMdlae1r"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op DeleteThirdPartyLoginPlatformDomainV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'AEJdWfJQ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 145 'DeleteThirdPartyLoginPlatformDomainV3' test.out

#- 146 RetrieveSSOLoginPlatformCredential
$CLI_EXE \
    --sn iam \
    --op RetrieveSSOLoginPlatformCredential \
    --namespace $AB_NAMESPACE \
    --platformId 'oJ84B3EI' \
    > test.out 2>&1
eval_tap $? 146 'RetrieveSSOLoginPlatformCredential' test.out

#- 147 AddSSOLoginPlatformCredential
# body param: body
echo '{"acsUrl": "nQ6enMOn", "apiKey": "wl06Q5lg", "appId": "m7l80GId", "federationMetadataUrl": "hvsRM0bj", "isActive": true, "redirectUri": "lEYVLNOX", "secret": "CCt70Wqc", "ssoUrl": "gmP2jciZ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AddSSOLoginPlatformCredential \
    --namespace $AB_NAMESPACE \
    --platformId 'HIOXgckn' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 147 'AddSSOLoginPlatformCredential' test.out

#- 148 DeleteSSOLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op DeleteSSOLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --platformId '3uVzlTGd' \
    > test.out 2>&1
eval_tap $? 148 'DeleteSSOLoginPlatformCredentialV3' test.out

#- 149 UpdateSSOPlatformCredential
# body param: body
echo '{"acsUrl": "tP2ykYW0", "apiKey": "MMdABrOD", "appId": "zGOg808Q", "federationMetadataUrl": "GD4S7IOd", "isActive": false, "redirectUri": "sKGqrSj0", "secret": "UwVVdP4H", "ssoUrl": "utwx9Tt7"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op UpdateSSOPlatformCredential \
    --namespace $AB_NAMESPACE \
    --platformId 'tNwTkF0C' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 149 'UpdateSSOPlatformCredential' test.out

#- 150 AdminListUserIDByPlatformUserIDsV3
# body param: body
echo '{"platformUserIds": ["cxuO97Qc", "bbKEnokY", "tF3nlUHv"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminListUserIDByPlatformUserIDsV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'NeovemqM' \
    --rawPID 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 150 'AdminListUserIDByPlatformUserIDsV3' test.out

#- 151 AdminGetUserByPlatformUserIDV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserByPlatformUserIDV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'dBZOeWLr' \
    --platformUserId 'QmafUi7c' \
    > test.out 2>&1
eval_tap $? 151 'AdminGetUserByPlatformUserIDV3' test.out

#- 152 GetAdminUsersByRoleIdV3
$CLI_EXE \
    --sn iam \
    --op GetAdminUsersByRoleIdV3 \
    --namespace $AB_NAMESPACE \
    --roleId 'bV7EV5lh' \
    --after '50' \
    --before '33' \
    --limit '25' \
    > test.out 2>&1
eval_tap $? 152 'GetAdminUsersByRoleIdV3' test.out

#- 153 AdminGetUserByEmailAddressV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserByEmailAddressV3 \
    --namespace $AB_NAMESPACE \
    --emailAddress 'nuIaU6eI' \
    > test.out 2>&1
eval_tap $? 153 'AdminGetUserByEmailAddressV3' test.out

#- 154 AdminBulkUpdateUsersV3
# body param: body
echo '{"updateRequest": {"skipLoginQueue": true}, "userIds": ["6qcHjXeu", "PibV1bYR", "BevlOXdd"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBulkUpdateUsersV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 154 'AdminBulkUpdateUsersV3' test.out

#- 155 AdminGetBulkUserBanV3
# body param: body
echo '{"bulkUserId": ["jXj30UQk", "gTEx0M2y", "iVIrdZ83"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminGetBulkUserBanV3 \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --banType 'iFlDNtoJ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 155 'AdminGetBulkUserBanV3' test.out

#- 156 AdminListUserIDByUserIDsV3
# body param: body
echo '{"userIds": ["rlbraK8P", "wjhAix5I", "XloTVdAk"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminListUserIDByUserIDsV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 156 'AdminListUserIDByUserIDsV3' test.out

#- 157 AdminBulkGetUsersPlatform
# body param: body
echo '{"userIds": ["PEUwXDmM", "t6WRTJHY", "q4c2Zimv"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBulkGetUsersPlatform \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 157 'AdminBulkGetUsersPlatform' test.out

#- 158 AdminInviteUserV3
# body param: body
echo '{"emailAddresses": ["7v9BcjyF", "zTPz8CPg", "9zWMWTlb"], "isAdmin": false, "namespace": "Pv1OKaay", "roles": ["yaPUsoul", "l782OAVF", "pbjpUs8L"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminInviteUserV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 158 'AdminInviteUserV3' test.out

#- 159 AdminQueryThirdPlatformLinkHistoryV3
$CLI_EXE \
    --sn iam \
    --op AdminQueryThirdPlatformLinkHistoryV3 \
    --namespace $AB_NAMESPACE \
    --limit '81' \
    --offset '0' \
    --platformUserId 'yyHk7XRg' \
    --platformId 'rGPEDrko' \
    > test.out 2>&1
eval_tap $? 159 'AdminQueryThirdPlatformLinkHistoryV3' test.out

#- 160 AdminListUsersV3
$CLI_EXE \
    --sn iam \
    --op AdminListUsersV3 \
    --namespace $AB_NAMESPACE \
    --limit '79' \
    --offset '95' \
    > test.out 2>&1
eval_tap $? 160 'AdminListUsersV3' test.out

#- 161 AdminSearchUserV3
$CLI_EXE \
    --sn iam \
    --op AdminSearchUserV3 \
    --namespace $AB_NAMESPACE \
    --by 'X1JusSfB' \
    --endDate '8K2IBhCf' \
    --includeTotal 'true' \
    --limit '22' \
    --offset '50' \
    --platformBy '5W3qeRev' \
    --platformId 'o1pAbgu6' \
    --query 'OgQcyP9e' \
    --roleIds 'eQpWZoUY' \
    --skipLoginQueue 'true' \
    --startDate 'LLuYX8ip' \
    --testAccount 'false' \
    > test.out 2>&1
eval_tap $? 161 'AdminSearchUserV3' test.out

#- 162 AdminGetBulkUserByEmailAddressV3
# body param: body
echo '{"listEmailAddressRequest": ["8IiLhoye", "PdOs1Lq1", "i1oCKoJX"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminGetBulkUserByEmailAddressV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 162 'AdminGetBulkUserByEmailAddressV3' test.out

#- 163 AdminGetUserByUserIdV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserByUserIdV3 \
    --namespace $AB_NAMESPACE \
    --userId '1MbeFrba' \
    > test.out 2>&1
eval_tap $? 163 'AdminGetUserByUserIdV3' test.out

#- 164 AdminUpdateUserV3
# body param: body
echo '{"avatarUrl": "nOo5RvWU", "country": "1rq1tZ38", "dateOfBirth": "Yl74I5l0", "displayName": "1VgAkOaS", "languageTag": "zYp8HwoR", "skipLoginQueue": false, "uniqueDisplayName": "m3pGDRGT", "userName": "x2riSlHO"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserV3 \
    --namespace $AB_NAMESPACE \
    --userId 'zC36fipC' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 164 'AdminUpdateUserV3' test.out

#- 165 AdminGetUserBanV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserBanV3 \
    --namespace $AB_NAMESPACE \
    --userId 'maS14cei' \
    --activeOnly 'false' \
    --after 'PnQGoF2c' \
    --before '4fYNbH1R' \
    --limit '73' \
    > test.out 2>&1
eval_tap $? 165 'AdminGetUserBanV3' test.out

#- 166 AdminBanUserV3
# body param: body
echo '{"ban": "uYFBHPiA", "comment": "fFsX3HyP", "endDate": "NpZwpp0J", "reason": "yOL3JH7b", "skipNotif": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBanUserV3 \
    --namespace $AB_NAMESPACE \
    --userId 'R7G6lnfE' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 166 'AdminBanUserV3' test.out

#- 167 AdminUpdateUserBanV3
# body param: body
echo '{"enabled": false, "skipNotif": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserBanV3 \
    --banId 'kX99WRmI' \
    --namespace $AB_NAMESPACE \
    --userId 'HgXTey7D' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 167 'AdminUpdateUserBanV3' test.out

#- 168 AdminSendVerificationCodeV3
# body param: body
echo '{"context": "Tdq18pvO", "emailAddress": "13f8mvEu", "languageTag": "5S4rhRLD"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminSendVerificationCodeV3 \
    --namespace $AB_NAMESPACE \
    --userId '7lbYDjOt' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 168 'AdminSendVerificationCodeV3' test.out

#- 169 AdminVerifyAccountV3
# body param: body
echo '{"Code": "Zuk7cvVa", "ContactType": "J1h1bxod", "LanguageTag": "Xri6riDc", "validateOnly": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminVerifyAccountV3 \
    --namespace $AB_NAMESPACE \
    --userId 'N5WEDyeM' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 169 'AdminVerifyAccountV3' test.out

#- 170 GetUserVerificationCode
$CLI_EXE \
    --sn iam \
    --op GetUserVerificationCode \
    --namespace $AB_NAMESPACE \
    --userId '1onCopFl' \
    > test.out 2>&1
eval_tap $? 170 'GetUserVerificationCode' test.out

#- 171 AdminGetUserDeletionStatusV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserDeletionStatusV3 \
    --namespace $AB_NAMESPACE \
    --userId 'nZq4YjKF' \
    > test.out 2>&1
eval_tap $? 171 'AdminGetUserDeletionStatusV3' test.out

#- 172 AdminUpdateUserDeletionStatusV3
# body param: body
echo '{"deletionDate": 86, "enabled": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserDeletionStatusV3 \
    --namespace $AB_NAMESPACE \
    --userId 'Pr9JW3ym' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 172 'AdminUpdateUserDeletionStatusV3' test.out

#- 173 AdminListUserAllPlatformAccountsDistinctV3
$CLI_EXE \
    --sn iam \
    --op AdminListUserAllPlatformAccountsDistinctV3 \
    --namespace $AB_NAMESPACE \
    --userId 'Z9VemLrg' \
    > test.out 2>&1
eval_tap $? 173 'AdminListUserAllPlatformAccountsDistinctV3' test.out

#- 174 AdminUpgradeHeadlessAccountV3
# body param: body
echo '{"code": "exzatb0L", "country": "Sru3UnOy", "dateOfBirth": "LCRdlZf4", "displayName": "7EdYQqHI", "emailAddress": "r4NSOxtg", "password": "5ePK1PdQ", "uniqueDisplayName": "rMcq3mvv", "validateOnly": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpgradeHeadlessAccountV3 \
    --namespace $AB_NAMESPACE \
    --userId 'uh1fJ4we' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 174 'AdminUpgradeHeadlessAccountV3' test.out

#- 175 AdminDeleteUserInformationV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserInformationV3 \
    --namespace $AB_NAMESPACE \
    --userId 'cbIvCS0u' \
    > test.out 2>&1
eval_tap $? 175 'AdminDeleteUserInformationV3' test.out

#- 176 AdminGetUserLoginHistoriesV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserLoginHistoriesV3 \
    --namespace $AB_NAMESPACE \
    --userId 'eblFJBqT' \
    --after '0.16816579867807402' \
    --before '0.26747481431252673' \
    --limit '22' \
    > test.out 2>&1
eval_tap $? 176 'AdminGetUserLoginHistoriesV3' test.out

#- 177 AdminResetPasswordV3
# body param: body
echo '{"languageTag": "614dEq9C", "newPassword": "tO01PwX2", "oldPassword": "PMRGYj4i"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminResetPasswordV3 \
    --namespace $AB_NAMESPACE \
    --userId 'nUwvUciV' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 177 'AdminResetPasswordV3' test.out

#- 178 AdminUpdateUserPermissionV3
# body param: body
echo '{"Permissions": [{"Action": 62, "Resource": "Jx1l1kiZ", "SchedAction": 37, "SchedCron": "dTYRNxks", "SchedRange": ["GEwk7rtG", "0kD896J4", "gdtPCk5w"]}, {"Action": 43, "Resource": "mrtyvHxd", "SchedAction": 84, "SchedCron": "haO0ktg9", "SchedRange": ["BZqsMkIX", "9LGvam2V", "NztWDiaj"]}, {"Action": 9, "Resource": "PmVoKhXz", "SchedAction": 10, "SchedCron": "USjvuFGG", "SchedRange": ["Xlgp4AZk", "8spECYQx", "Ok4dkk5e"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserPermissionV3 \
    --namespace $AB_NAMESPACE \
    --userId 'OmTJ4ej4' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 178 'AdminUpdateUserPermissionV3' test.out

#- 179 AdminAddUserPermissionsV3
# body param: body
echo '{"Permissions": [{"Action": 95, "Resource": "SvH3JtyX", "SchedAction": 94, "SchedCron": "W9HwvT5W", "SchedRange": ["SPBDFQZW", "CfVd2t6K", "zX73E1UR"]}, {"Action": 82, "Resource": "n0ErFsUD", "SchedAction": 49, "SchedCron": "DKrYV7Ct", "SchedRange": ["Ixxyx5N0", "OMTY2CMP", "GrlvLdti"]}, {"Action": 54, "Resource": "MNOpJOtu", "SchedAction": 72, "SchedCron": "desGL0TE", "SchedRange": ["HJ0EfTOE", "NHugQPVD", "fL2DIGsZ"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddUserPermissionsV3 \
    --namespace $AB_NAMESPACE \
    --userId 'y8Qxnmy3' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 179 'AdminAddUserPermissionsV3' test.out

#- 180 AdminDeleteUserPermissionBulkV3
# body param: body
echo '[{"Action": 66, "Resource": "cgnPH9IF"}, {"Action": 39, "Resource": "7r4bWrmW"}, {"Action": 89, "Resource": "JPrnuoef"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserPermissionBulkV3 \
    --namespace $AB_NAMESPACE \
    --userId 'cZTWE6SW' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 180 'AdminDeleteUserPermissionBulkV3' test.out

#- 181 AdminDeleteUserPermissionV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserPermissionV3 \
    --action '49' \
    --namespace $AB_NAMESPACE \
    --resource '1hY5hJnj' \
    --userId 'epp4YX3b' \
    > test.out 2>&1
eval_tap $? 181 'AdminDeleteUserPermissionV3' test.out

#- 182 AdminGetUserPlatformAccountsV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserPlatformAccountsV3 \
    --namespace $AB_NAMESPACE \
    --userId 'pptRAvSB' \
    --after 'wUibyn7p' \
    --before 'ZslqmvHm' \
    --limit '93' \
    --platformId 'Dmcu6nOY' \
    > test.out 2>&1
eval_tap $? 182 'AdminGetUserPlatformAccountsV3' test.out

#- 183 AdminGetListJusticePlatformAccounts
$CLI_EXE \
    --sn iam \
    --op AdminGetListJusticePlatformAccounts \
    --namespace $AB_NAMESPACE \
    --userId 'GyPlqPgs' \
    > test.out 2>&1
eval_tap $? 183 'AdminGetListJusticePlatformAccounts' test.out

#- 184 AdminGetUserMapping
$CLI_EXE \
    --sn iam \
    --op AdminGetUserMapping \
    --namespace $AB_NAMESPACE \
    --targetNamespace 'u9caOSwA' \
    --userId '3f4a1r0J' \
    > test.out 2>&1
eval_tap $? 184 'AdminGetUserMapping' test.out

#- 185 AdminCreateJusticeUser
$CLI_EXE \
    --sn iam \
    --op AdminCreateJusticeUser \
    --namespace $AB_NAMESPACE \
    --targetNamespace 'jPX3alJe' \
    --userId '3nze1ox1' \
    > test.out 2>&1
eval_tap $? 185 'AdminCreateJusticeUser' test.out

#- 186 AdminLinkPlatformAccount
# body param: body
echo '{"platformId": "b2QKZzAY", "platformUserId": "ZJAeHHVr"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminLinkPlatformAccount \
    --namespace $AB_NAMESPACE \
    --userId 'jNNbaBfl' \
    --skipConflict 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 186 'AdminLinkPlatformAccount' test.out

#- 187 AdminPlatformUnlinkV3
# body param: body
echo '{"platformNamespace": "YQMCcnJv"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminPlatformUnlinkV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'i2oYMvnz' \
    --userId 'ndVsXcb9' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 187 'AdminPlatformUnlinkV3' test.out

#- 188 AdminPlatformUnlinkAllV3
$CLI_EXE \
    --sn iam \
    --op AdminPlatformUnlinkAllV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'D62fNF2z' \
    --userId 'dioaShUK' \
    > test.out 2>&1
eval_tap $? 188 'AdminPlatformUnlinkAllV3' test.out

#- 189 AdminPlatformLinkV3
$CLI_EXE \
    --sn iam \
    --op AdminPlatformLinkV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'CkA97wrx' \
    --userId 'sXWRDhc9' \
    --ticket 'fpO1qMcc' \
    > test.out 2>&1
eval_tap $? 189 'AdminPlatformLinkV3' test.out

#- 190 AdminDeleteUserLinkingHistoryByPlatformIDV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserLinkingHistoryByPlatformIDV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'n01FFWgD' \
    --userId 'az0qVqws' \
    > test.out 2>&1
eval_tap $? 190 'AdminDeleteUserLinkingHistoryByPlatformIDV3' test.out

#- 191 AdminGetThirdPartyPlatformTokenLinkStatusV3
$CLI_EXE \
    --sn iam \
    --op AdminGetThirdPartyPlatformTokenLinkStatusV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'X6CxnDJg' \
    --userId 'QPvgahtI' \
    --platformToken 'IkGZJutV' \
    > test.out 2>&1
eval_tap $? 191 'AdminGetThirdPartyPlatformTokenLinkStatusV3' test.out

#- 192 AdminGetUserSinglePlatformAccount
$CLI_EXE \
    --sn iam \
    --op AdminGetUserSinglePlatformAccount \
    --namespace $AB_NAMESPACE \
    --platformId 'ChQa2Lk5' \
    --userId 'wG0wwzax' \
    > test.out 2>&1
eval_tap $? 192 'AdminGetUserSinglePlatformAccount' test.out

#- 193 AdminDeleteUserRolesV3
# body param: body
echo '["zoaeIhka", "Ucrxbl5M", "lRVtWja8"]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserRolesV3 \
    --namespace $AB_NAMESPACE \
    --userId 'TOwzjQU9' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 193 'AdminDeleteUserRolesV3' test.out

#- 194 AdminSaveUserRoleV3
# body param: body
echo '[{"namespace": "caRBrysF", "roleId": "tsGsjBzn"}, {"namespace": "bHiEb7Wy", "roleId": "cmvEy1Ip"}, {"namespace": "DuRVlRqY", "roleId": "V1uOht9c"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminSaveUserRoleV3 \
    --namespace $AB_NAMESPACE \
    --userId 'dc6M1Vzz' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 194 'AdminSaveUserRoleV3' test.out

#- 195 AdminAddUserRoleV3
$CLI_EXE \
    --sn iam \
    --op AdminAddUserRoleV3 \
    --namespace $AB_NAMESPACE \
    --roleId 'KX8MmffX' \
    --userId 'chQG50Ls' \
    > test.out 2>&1
eval_tap $? 195 'AdminAddUserRoleV3' test.out

#- 196 AdminDeleteUserRoleV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserRoleV3 \
    --namespace $AB_NAMESPACE \
    --roleId 'eoUey9X6' \
    --userId '8jRj0B5g' \
    > test.out 2>&1
eval_tap $? 196 'AdminDeleteUserRoleV3' test.out

#- 197 AdminUpdateUserStatusV3
# body param: body
echo '{"enabled": false, "reason": "rDiGf4sC"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserStatusV3 \
    --namespace $AB_NAMESPACE \
    --userId 'fFeRfmfi' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 197 'AdminUpdateUserStatusV3' test.out

#- 198 AdminTrustlyUpdateUserIdentity
# body param: body
echo '{"emailAddress": "1gYeXfSQ", "password": "kdgSwob8"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminTrustlyUpdateUserIdentity \
    --namespace $AB_NAMESPACE \
    --userId 'YQ2jndgt' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 198 'AdminTrustlyUpdateUserIdentity' test.out

#- 199 AdminVerifyUserWithoutVerificationCodeV3
$CLI_EXE \
    --sn iam \
    --op AdminVerifyUserWithoutVerificationCodeV3 \
    --namespace $AB_NAMESPACE \
    --userId 'jhrUSYYP' \
    > test.out 2>&1
eval_tap $? 199 'AdminVerifyUserWithoutVerificationCodeV3' test.out

#- 200 AdminUpdateClientSecretV3
# body param: body
echo '{"newSecret": "MfoWNYBD"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateClientSecretV3 \
    --clientId 'xgWnpfp8' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 200 'AdminUpdateClientSecretV3' test.out

#- 201 AdminCheckThirdPartyLoginPlatformAvailabilityV3
$CLI_EXE \
    --sn iam \
    --op AdminCheckThirdPartyLoginPlatformAvailabilityV3 \
    --platformId 'qlL8byzd' \
    > test.out 2>&1
eval_tap $? 201 'AdminCheckThirdPartyLoginPlatformAvailabilityV3' test.out

#- 202 AdminGetRolesV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRolesV3 \
    --after 'wxcHHsk2' \
    --before 'vWkYxI6j' \
    --isWildcard 'true' \
    --limit '76' \
    > test.out 2>&1
eval_tap $? 202 'AdminGetRolesV3' test.out

#- 203 AdminCreateRoleV3
# body param: body
echo '{"adminRole": false, "deletable": true, "isWildcard": false, "managers": [{"displayName": "IeJu9d2m", "namespace": "AzeyDmsL", "userId": "aiEMaoYA"}, {"displayName": "v3b88dE1", "namespace": "IacDARtg", "userId": "PZ1ZCdEn"}, {"displayName": "MJbtKwag", "namespace": "358sP8Uj", "userId": "83PbU77D"}], "members": [{"displayName": "WW4rX0VM", "namespace": "0GLbSQek", "userId": "NwrA43FZ"}, {"displayName": "0A9WrnCk", "namespace": "isditFFS", "userId": "TAt7SKFA"}, {"displayName": "b3m0cM3H", "namespace": "8kfCtyAB", "userId": "toZv5kwp"}], "permissions": [{"action": 96, "resource": "g2D1ggoA", "schedAction": 29, "schedCron": "oh9eCLwZ", "schedRange": ["ANqi2kBF", "fwI1KXYn", "Lcaq2dth"]}, {"action": 94, "resource": "PC0MO3EP", "schedAction": 85, "schedCron": "Tht73WNL", "schedRange": ["WJvecg57", "i2jTC9Ty", "mfHNM6hA"]}, {"action": 4, "resource": "Enqz32eK", "schedAction": 28, "schedCron": "tPCtpLQq", "schedRange": ["9Ng8bCdo", "ipKE30Lm", "6zt71E70"]}], "roleName": "ruY9OSnG"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminCreateRoleV3 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 203 'AdminCreateRoleV3' test.out

#- 204 AdminGetRoleV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleV3 \
    --roleId 'BqOCOp6s' \
    > test.out 2>&1
eval_tap $? 204 'AdminGetRoleV3' test.out

#- 205 AdminDeleteRoleV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteRoleV3 \
    --roleId 'sP60xHcv' \
    > test.out 2>&1
eval_tap $? 205 'AdminDeleteRoleV3' test.out

#- 206 AdminUpdateRoleV3
# body param: body
echo '{"deletable": false, "isWildcard": false, "roleName": "OLlzeGAR"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateRoleV3 \
    --roleId 'ABPnZcvr' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 206 'AdminUpdateRoleV3' test.out

#- 207 AdminGetRoleAdminStatusV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleAdminStatusV3 \
    --roleId 'Xuw4G2zD' \
    > test.out 2>&1
eval_tap $? 207 'AdminGetRoleAdminStatusV3' test.out

#- 208 AdminUpdateAdminRoleStatusV3
$CLI_EXE \
    --sn iam \
    --op AdminUpdateAdminRoleStatusV3 \
    --roleId 'cIaqjVGI' \
    > test.out 2>&1
eval_tap $? 208 'AdminUpdateAdminRoleStatusV3' test.out

#- 209 AdminRemoveRoleAdminV3
$CLI_EXE \
    --sn iam \
    --op AdminRemoveRoleAdminV3 \
    --roleId 'd7zlg5NU' \
    > test.out 2>&1
eval_tap $? 209 'AdminRemoveRoleAdminV3' test.out

#- 210 AdminGetRoleManagersV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleManagersV3 \
    --roleId '5BIFe3YM' \
    --after '1MvP8C5s' \
    --before 'YQOpZaza' \
    --limit '10' \
    > test.out 2>&1
eval_tap $? 210 'AdminGetRoleManagersV3' test.out

#- 211 AdminAddRoleManagersV3
# body param: body
echo '{"managers": [{"displayName": "u8l84QFQ", "namespace": "ikJpSSW5", "userId": "1gAN5GX5"}, {"displayName": "Huya3h0K", "namespace": "9WfHd0x8", "userId": "CUY6rioD"}, {"displayName": "m4mBPxP6", "namespace": "rlZ0ImBc", "userId": "XW5qHLIL"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddRoleManagersV3 \
    --roleId 'yKE6dTw0' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 211 'AdminAddRoleManagersV3' test.out

#- 212 AdminRemoveRoleManagersV3
# body param: body
echo '{"managers": [{"displayName": "TjBJmQCY", "namespace": "V42KEHH1", "userId": "c2aqCi8X"}, {"displayName": "qf57NelT", "namespace": "0wnpF1Il", "userId": "YmWsHeD9"}, {"displayName": "s6kJe3xN", "namespace": "vV518JaN", "userId": "iRrQV7oE"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminRemoveRoleManagersV3 \
    --roleId 'MPnyPS61' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 212 'AdminRemoveRoleManagersV3' test.out

#- 213 AdminGetRoleMembersV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleMembersV3 \
    --roleId 'mmdF4OJO' \
    --after 'hHZQffMG' \
    --before '2TuQ4sEw' \
    --limit '76' \
    > test.out 2>&1
eval_tap $? 213 'AdminGetRoleMembersV3' test.out

#- 214 AdminAddRoleMembersV3
# body param: body
echo '{"members": [{"displayName": "yqI1tt7D", "namespace": "fuv8uP6X", "userId": "shsb29h2"}, {"displayName": "ITh8iGSr", "namespace": "q7KAoDdD", "userId": "utvj2rkd"}, {"displayName": "SDQ8wqBv", "namespace": "1H7V7PSc", "userId": "r3ZUA3Vi"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddRoleMembersV3 \
    --roleId 'YZN75RLj' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 214 'AdminAddRoleMembersV3' test.out

#- 215 AdminRemoveRoleMembersV3
# body param: body
echo '{"members": [{"displayName": "oBvkV1AT", "namespace": "k8FAdpDp", "userId": "vOfdRfBV"}, {"displayName": "YuxX7KYH", "namespace": "bCz25BWj", "userId": "5ooJJFLo"}, {"displayName": "1btdeB0o", "namespace": "jLcFiRWZ", "userId": "Y7AlCacJ"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminRemoveRoleMembersV3 \
    --roleId 'MDSjCAve' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 215 'AdminRemoveRoleMembersV3' test.out

#- 216 AdminUpdateRolePermissionsV3
# body param: body
echo '{"permissions": [{"action": 91, "resource": "JATzImCq", "schedAction": 100, "schedCron": "5taszGmP", "schedRange": ["pGNkQm1F", "lBnr2hvu", "tlLU39eP"]}, {"action": 29, "resource": "4s53UCbj", "schedAction": 81, "schedCron": "p9vm02lb", "schedRange": ["dZW4xa4f", "beSgbN1c", "axDivxd8"]}, {"action": 47, "resource": "kmqAMs9B", "schedAction": 29, "schedCron": "V3Qsrj9F", "schedRange": ["d6gduQ2o", "WL0Fw30a", "JybCihYX"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateRolePermissionsV3 \
    --roleId 'uDPY8zO5' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 216 'AdminUpdateRolePermissionsV3' test.out

#- 217 AdminAddRolePermissionsV3
# body param: body
echo '{"permissions": [{"action": 7, "resource": "rzRjWnqe", "schedAction": 5, "schedCron": "bJPnYGLZ", "schedRange": ["H7Io5X1A", "RYyouej1", "xLWdQ5Kv"]}, {"action": 64, "resource": "hwees0RX", "schedAction": 75, "schedCron": "L4J4QXEx", "schedRange": ["WWG90x4X", "LK4OK48c", "nN5HWPMC"]}, {"action": 53, "resource": "BRVaJOIx", "schedAction": 85, "schedCron": "vPeOpUKX", "schedRange": ["p7RX4PSC", "fW5V3OMT", "kktWDqgG"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddRolePermissionsV3 \
    --roleId 'GkRYoF58' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 217 'AdminAddRolePermissionsV3' test.out

#- 218 AdminDeleteRolePermissionsV3
# body param: body
echo '["duI0PlKx", "BmKWfJAX", "BG9Xo2Zt"]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDeleteRolePermissionsV3 \
    --roleId 'T6uKHbcQ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 218 'AdminDeleteRolePermissionsV3' test.out

#- 219 AdminDeleteRolePermissionV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteRolePermissionV3 \
    --action '22' \
    --resource 'BbOMSiAL' \
    --roleId 'OSnkGVgD' \
    > test.out 2>&1
eval_tap $? 219 'AdminDeleteRolePermissionV3' test.out

#- 220 AdminGetMyUserV3
$CLI_EXE \
    --sn iam \
    --op AdminGetMyUserV3 \
    > test.out 2>&1
eval_tap $? 220 'AdminGetMyUserV3' test.out

#- 221 UserAuthenticationV3
$CLI_EXE \
    --sn iam \
    --op UserAuthenticationV3 \
    --client_id '7Lsg6lhb' \
    --extend_exp 'true' \
    --redirect_uri 'zBnHarjP' \
    --password 'lGAfTaai' \
    --request_id 'B5L36MLq' \
    --user_name 'VABOX6NG' \
    > test.out 2>&1
eval_tap $? 221 'UserAuthenticationV3' test.out

#- 222 AuthenticationWithPlatformLinkV3
$CLI_EXE \
    --sn iam \
    --op AuthenticationWithPlatformLinkV3 \
    --extend_exp 'true' \
    --client_id 'E9P4cRic' \
    --linkingToken 'OQc8RNQj' \
    --password 'ABJl4BMG' \
    --username 'W6QJAszd' \
    > test.out 2>&1
eval_tap $? 222 'AuthenticationWithPlatformLinkV3' test.out

#- 223 GenerateTokenByNewHeadlessAccountV3
$CLI_EXE \
    --sn iam \
    --op GenerateTokenByNewHeadlessAccountV3 \
    --additionalData '9AbPEc1E' \
    --extend_exp 'false' \
    --linkingToken 'a2LcTYgH' \
    > test.out 2>&1
eval_tap $? 223 'GenerateTokenByNewHeadlessAccountV3' test.out

#- 224 RequestOneTimeLinkingCodeV3
$CLI_EXE \
    --sn iam \
    --op RequestOneTimeLinkingCodeV3 \
    --platformId 'EwjIlzgb' \
    > test.out 2>&1
eval_tap $? 224 'RequestOneTimeLinkingCodeV3' test.out

#- 225 ValidateOneTimeLinkingCodeV3
$CLI_EXE \
    --sn iam \
    --op ValidateOneTimeLinkingCodeV3 \
    --oneTimeLinkCode '2OrOjPBi' \
    > test.out 2>&1
eval_tap $? 225 'ValidateOneTimeLinkingCodeV3' test.out

#- 226 RequestTokenByOneTimeLinkCodeResponseV3
$CLI_EXE \
    --sn iam \
    --op RequestTokenByOneTimeLinkCodeResponseV3 \
    --additionalData '6Xppwnfu' \
    --isTransient 'true' \
    --client_id '0k87TTfS' \
    --oneTimeLinkCode 'UmYYri9A' \
    > test.out 2>&1
eval_tap $? 226 'RequestTokenByOneTimeLinkCodeResponseV3' test.out

#- 227 GetCountryLocationV3
$CLI_EXE \
    --sn iam \
    --op GetCountryLocationV3 \
    > test.out 2>&1
eval_tap $? 227 'GetCountryLocationV3' test.out

#- 228 Logout
$CLI_EXE \
    --sn iam \
    --op Logout \
    > test.out 2>&1
eval_tap $? 228 'Logout' test.out

#- 229 RequestTokenExchangeCodeV3
$CLI_EXE \
    --sn iam \
    --op RequestTokenExchangeCodeV3 \
    --namespace $AB_NAMESPACE \
    --codeChallenge 'f38gUxVX' \
    --codeChallengeMethod 'plain' \
    --client_id 'eR3w4z26' \
    > test.out 2>&1
eval_tap $? 229 'RequestTokenExchangeCodeV3' test.out

#- 230 AdminRetrieveUserThirdPartyPlatformTokenV3
$CLI_EXE \
    --sn iam \
    --op AdminRetrieveUserThirdPartyPlatformTokenV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'Nj3lTpoL' \
    --userId '1EeBq2ob' \
    > test.out 2>&1
eval_tap $? 230 'AdminRetrieveUserThirdPartyPlatformTokenV3' test.out

#- 231 RevokeUserV3
$CLI_EXE \
    --sn iam \
    --op RevokeUserV3 \
    --namespace $AB_NAMESPACE \
    --userId 'vcgIGK2C' \
    --includeGameNamespace 'false' \
    > test.out 2>&1
eval_tap $? 231 'RevokeUserV3' test.out

#- 232 AuthorizeV3
$CLI_EXE \
    --sn iam \
    --op AuthorizeV3 \
    --codeChallenge '8jrxLCxj' \
    --codeChallengeMethod 'S256' \
    --createHeadless 'false' \
    --oneTimeLinkCode 'tDj5JVUD' \
    --redirectUri '0CkQllMP' \
    --scope '4KxCBuNt' \
    --state 'TiY9VzZL' \
    --targetAuthPage '0ly7kObG' \
    --useRedirectUriAsLoginUrlWhenLocked 'false' \
    --clientId 't3pHtkUL' \
    --responseType 'code' \
    > test.out 2>&1
eval_tap $? 232 'AuthorizeV3' test.out

#- 233 TokenIntrospectionV3
$CLI_EXE \
    --sn iam \
    --op TokenIntrospectionV3 \
    --token 'JXiaB5jS' \
    > test.out 2>&1
eval_tap $? 233 'TokenIntrospectionV3' test.out

#- 234 GetJWKSV3
$CLI_EXE \
    --sn iam \
    --op GetJWKSV3 \
    > test.out 2>&1
eval_tap $? 234 'GetJWKSV3' test.out

#- 235 SendMFAAuthenticationCode
$CLI_EXE \
    --sn iam \
    --op SendMFAAuthenticationCode \
    --clientId 'XpXvQr6p' \
    --factor 'qqLgwlvH' \
    --mfaToken 'ITgSi39X' \
    > test.out 2>&1
eval_tap $? 235 'SendMFAAuthenticationCode' test.out

#- 236 Change2faMethod
$CLI_EXE \
    --sn iam \
    --op Change2faMethod \
    --factor 'R7VnHdV7' \
    --mfaToken '33WCE3tq' \
    > test.out 2>&1
eval_tap $? 236 'Change2faMethod' test.out

#- 237 Verify2faCode
$CLI_EXE \
    --sn iam \
    --op Verify2faCode \
    --code 'bvjup1u0' \
    --factor 'sIGH1ojK' \
    --mfaToken 'L3hos1KS' \
    --rememberDevice 'true' \
    > test.out 2>&1
eval_tap $? 237 'Verify2faCode' test.out

#- 238 RetrieveUserThirdPartyPlatformTokenV3
$CLI_EXE \
    --sn iam \
    --op RetrieveUserThirdPartyPlatformTokenV3 \
    --namespace $AB_NAMESPACE \
    --platformId '8sQeELWp' \
    --userId 'GTP73JRO' \
    > test.out 2>&1
eval_tap $? 238 'RetrieveUserThirdPartyPlatformTokenV3' test.out

#- 239 AuthCodeRequestV3
$CLI_EXE \
    --sn iam \
    --op AuthCodeRequestV3 \
    --platformId 'PrUvird2' \
    --clientId 'giIzP120' \
    --redirectUri 'WCM5IkHa' \
    --requestId '7pIEJGL7' \
    > test.out 2>&1
eval_tap $? 239 'AuthCodeRequestV3' test.out

#- 240 PlatformTokenGrantV3
$CLI_EXE \
    --sn iam \
    --op PlatformTokenGrantV3 \
    --platformId '84SsGrRv' \
    --additionalData 'Uuk4Vu8r' \
    --client_id 'fWvXWJaC' \
    --createHeadless 'false' \
    --device_id 'VlZeDZqg' \
    --macAddress 'OxT7fR6f' \
    --platform_token 'Im3pen3d' \
    --skipSetCookie 'false' \
    > test.out 2>&1
eval_tap $? 240 'PlatformTokenGrantV3' test.out

#- 241 GetRevocationListV3
$CLI_EXE \
    --sn iam \
    --op GetRevocationListV3 \
    > test.out 2>&1
eval_tap $? 241 'GetRevocationListV3' test.out

#- 242 TokenRevocationV3
$CLI_EXE \
    --sn iam \
    --op TokenRevocationV3 \
    --token 'n7L75l01' \
    > test.out 2>&1
eval_tap $? 242 'TokenRevocationV3' test.out

#- 243 SimultaneousLoginV3
$CLI_EXE \
    --sn iam \
    --op SimultaneousLoginV3 \
    --simultaneousPlatform 'IEL9FP3k' \
    --simultaneousTicket 'zETTw5QA' \
    --nativePlatform 'epicgames' \
    --nativePlatformTicket 'Dz2tTJk0' \
    > test.out 2>&1
eval_tap $? 243 'SimultaneousLoginV3' test.out

#- 244 TokenGrantV3
$CLI_EXE \
    --sn iam \
    --op TokenGrantV3 \
    --additionalData 'J3ReF4Ni' \
    --client_id 'SDZ86puu' \
    --code 'YbkcDlK3' \
    --code_verifier 'nmxq1A3A' \
    --extendNamespace 'VQovhYjX' \
    --extend_exp 'false' \
    --password 'A02Fw9W2' \
    --redirect_uri 'tXFAFE7B' \
    --refresh_token 'ZaaWynBk' \
    --username 'vF4ZN451' \
    --grant_type 'password' \
    > test.out 2>&1
eval_tap $? 244 'TokenGrantV3' test.out

#- 245 VerifyTokenV3
$CLI_EXE \
    --sn iam \
    --op VerifyTokenV3 \
    --token '0oIWTBuO' \
    > test.out 2>&1
eval_tap $? 245 'VerifyTokenV3' test.out

#- 246 PlatformAuthenticationV3
$CLI_EXE \
    --sn iam \
    --op PlatformAuthenticationV3 \
    --platformId 'dHZIfEbY' \
    --code 'rTDMxEDN' \
    --error 'oT6P428a' \
    --openidAssocHandle 'DL8qGjIn' \
    --openidClaimedId 'rhYYsdsY' \
    --openidIdentity 'AnWgaVH0' \
    --openidMode 'hNyd0unU' \
    --openidNs 'QR7I1QVg' \
    --openidOpEndpoint 'CutR1wHR' \
    --openidResponseNonce 'mMfpeZ9K' \
    --openidReturnTo 'tZbxmrpv' \
    --openidSig 'cdYAuK0e' \
    --openidSigned 'UoxKes6Z' \
    --state 'Q9YMGboA' \
    > test.out 2>&1
eval_tap $? 246 'PlatformAuthenticationV3' test.out

#- 247 PlatformTokenRefreshV3
$CLI_EXE \
    --sn iam \
    --op PlatformTokenRefreshV3 \
    --platformId 'coF4XuA4' \
    --platform_token 'Pgnsr3Mu' \
    > test.out 2>&1
eval_tap $? 247 'PlatformTokenRefreshV3' test.out

#- 248 PublicGetInputValidations
$CLI_EXE \
    --sn iam \
    --op PublicGetInputValidations \
    --defaultOnEmpty 'false' \
    --languageCode 'BYisbwLH' \
    > test.out 2>&1
eval_tap $? 248 'PublicGetInputValidations' test.out

#- 249 PublicGetInputValidationByField
$CLI_EXE \
    --sn iam \
    --op PublicGetInputValidationByField \
    --field 'A62HdVCg' \
    > test.out 2>&1
eval_tap $? 249 'PublicGetInputValidationByField' test.out

#- 250 PublicGetCountryAgeRestrictionV3
$CLI_EXE \
    --sn iam \
    --op PublicGetCountryAgeRestrictionV3 \
    --countryCode 'dvmVjwle' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 250 'PublicGetCountryAgeRestrictionV3' test.out

#- 251 PublicGetConfigValueV3
$CLI_EXE \
    --sn iam \
    --op PublicGetConfigValueV3 \
    --configKey 'QflW2Wlp' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 251 'PublicGetConfigValueV3' test.out

#- 252 PublicGetCountryListV3
$CLI_EXE \
    --sn iam \
    --op PublicGetCountryListV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 252 'PublicGetCountryListV3' test.out

#- 253 RetrieveAllActiveThirdPartyLoginPlatformCredentialPublicV3
$CLI_EXE \
    --sn iam \
    --op RetrieveAllActiveThirdPartyLoginPlatformCredentialPublicV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 253 'RetrieveAllActiveThirdPartyLoginPlatformCredentialPublicV3' test.out

#- 254 RetrieveActiveOIDCClientsPublicV3
$CLI_EXE \
    --sn iam \
    --op RetrieveActiveOIDCClientsPublicV3 \
    --namespace $AB_NAMESPACE \
    --clientId 'XsGEgHHC' \
    > test.out 2>&1
eval_tap $? 254 'RetrieveActiveOIDCClientsPublicV3' test.out

#- 255 PublicListUserIDByPlatformUserIDsV3
# body param: body
echo '{"platformUserIds": ["BYz1dEkg", "PBzhjS09", "Gt2ZiOqS"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicListUserIDByPlatformUserIDsV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'TiNeTsyY' \
    --rawPID 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 255 'PublicListUserIDByPlatformUserIDsV3' test.out

#- 256 PublicGetUserByPlatformUserIDV3
$CLI_EXE \
    --sn iam \
    --op PublicGetUserByPlatformUserIDV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'NiH29b2s' \
    --platformUserId 'aNi26vKU' \
    > test.out 2>&1
eval_tap $? 256 'PublicGetUserByPlatformUserIDV3' test.out

#- 257 PublicGetAsyncStatus
$CLI_EXE \
    --sn iam \
    --op PublicGetAsyncStatus \
    --namespace $AB_NAMESPACE \
    --requestId '1DtANu2S' \
    > test.out 2>&1
eval_tap $? 257 'PublicGetAsyncStatus' test.out

#- 258 PublicSearchUserV3
$CLI_EXE \
    --sn iam \
    --op PublicSearchUserV3 \
    --namespace $AB_NAMESPACE \
    --by 'GnFeMmrv' \
    --limit '49' \
    --offset '77' \
    --platformBy 'qzqHXIy9' \
    --platformId 'onTZpoYc' \
    --query 'MXvQp8pf' \
    > test.out 2>&1
eval_tap $? 258 'PublicSearchUserV3' test.out

#- 259 PublicCreateUserV3
# body param: body
echo '{"PasswordMD5Sum": "F2dyIr1K", "acceptedPolicies": [{"isAccepted": true, "localizedPolicyVersionId": "ZotWFTgs", "policyId": "MNAFTb6F", "policyVersionId": "X7ywhABp"}, {"isAccepted": false, "localizedPolicyVersionId": "HJXBJBYJ", "policyId": "C8skg3dT", "policyVersionId": "vO19hRjt"}, {"isAccepted": false, "localizedPolicyVersionId": "E9wF0PBL", "policyId": "rmTq4RRf", "policyVersionId": "OribHwba"}], "authType": "J8UY1ndD", "code": "FfWjvY6m", "country": "x81Rb8PC", "dateOfBirth": "lx2dhnlD", "displayName": "qqil8VWc", "emailAddress": "I9i7yjYl", "password": "jO8rKPHG", "reachMinimumAge": false, "uniqueDisplayName": "BfXK2p52"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicCreateUserV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 259 'PublicCreateUserV3' test.out

#- 260 CheckUserAvailability
$CLI_EXE \
    --sn iam \
    --op CheckUserAvailability \
    --namespace $AB_NAMESPACE \
    --field 'KOmMUCoG' \
    --query 'atM3fmda' \
    > test.out 2>&1
eval_tap $? 260 'CheckUserAvailability' test.out

#- 261 PublicBulkGetUsers
# body param: body
echo '{"userIds": ["9co2C4TV", "ekUQXBbt", "0A7lyOQt"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicBulkGetUsers \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 261 'PublicBulkGetUsers' test.out

#- 262 PublicSendRegistrationCode
# body param: body
echo '{"emailAddress": "oYo1k4CV", "languageTag": "gu1oCjR9"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicSendRegistrationCode \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 262 'PublicSendRegistrationCode' test.out

#- 263 PublicVerifyRegistrationCode
# body param: body
echo '{"code": "D4fyzt3g", "emailAddress": "Afjb5m1y"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicVerifyRegistrationCode \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 263 'PublicVerifyRegistrationCode' test.out

#- 264 PublicForgotPasswordV3
# body param: body
echo '{"emailAddress": "OveEKtS3", "languageTag": "R4tXt7AO"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicForgotPasswordV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 264 'PublicForgotPasswordV3' test.out

#- 265 GetAdminInvitationV3
$CLI_EXE \
    --sn iam \
    --op GetAdminInvitationV3 \
    --invitationId 'JbeRzI69' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 265 'GetAdminInvitationV3' test.out

#- 266 CreateUserFromInvitationV3
# body param: body
echo '{"PasswordMD5Sum": "xSUfpxka", "acceptedPolicies": [{"isAccepted": false, "localizedPolicyVersionId": "w5qpGWuw", "policyId": "mzpBIvom", "policyVersionId": "duJVtvmm"}, {"isAccepted": true, "localizedPolicyVersionId": "cZ9u92GC", "policyId": "5FGE0obs", "policyVersionId": "jj9RCFVU"}, {"isAccepted": false, "localizedPolicyVersionId": "ECYY691F", "policyId": "NraENj3H", "policyVersionId": "04r2RuGw"}], "authType": "eNIVzNmX", "code": "DuNbv937", "country": "fjvyk07o", "dateOfBirth": "aUUnT3gx", "displayName": "4wB5SShf", "emailAddress": "p2yCcHhk", "password": "ohr4O7vP", "reachMinimumAge": false, "uniqueDisplayName": "k3wGISds"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op CreateUserFromInvitationV3 \
    --invitationId 'uYpsI1wZ' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 266 'CreateUserFromInvitationV3' test.out

#- 267 UpdateUserV3
# body param: body
echo '{"avatarUrl": "bTtOBiGL", "country": "tjuQIWYF", "dateOfBirth": "c5rX5S1I", "displayName": "mJD3pE3n", "languageTag": "gjMY9dqO", "uniqueDisplayName": "6UenhKln", "userName": "ajilPeRe"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op UpdateUserV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 267 'UpdateUserV3' test.out

#- 268 PublicPartialUpdateUserV3
# body param: body
echo '{"avatarUrl": "Mo9Vatsi", "country": "GCfy37p8", "dateOfBirth": "PfnG7PLX", "displayName": "YmsJWxbo", "languageTag": "kG7v7Fiq", "uniqueDisplayName": "XZTlV9cF", "userName": "ftr7m9Ma"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicPartialUpdateUserV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 268 'PublicPartialUpdateUserV3' test.out

#- 269 PublicSendVerificationCodeV3
# body param: body
echo '{"context": "j4m0KQcb", "emailAddress": "VzeFFwj1", "languageTag": "pLM8Ea3v"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicSendVerificationCodeV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 269 'PublicSendVerificationCodeV3' test.out

#- 270 PublicUserVerificationV3
# body param: body
echo '{"code": "7p3IzyZv", "contactType": "1G1OMDuT", "languageTag": "AwOWMaLC", "validateOnly": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUserVerificationV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 270 'PublicUserVerificationV3' test.out

#- 271 PublicUpgradeHeadlessAccountV3
# body param: body
echo '{"code": "OBrZtcyi", "country": "1ByJZA7z", "dateOfBirth": "t8bE6dCg", "displayName": "epga9C7k", "emailAddress": "bEguegQO", "password": "o1OScTKM", "uniqueDisplayName": "VDWiGnLh", "validateOnly": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpgradeHeadlessAccountV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 271 'PublicUpgradeHeadlessAccountV3' test.out

#- 272 PublicVerifyHeadlessAccountV3
# body param: body
echo '{"emailAddress": "ofzZy4Vi", "password": "XrajvKga"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicVerifyHeadlessAccountV3 \
    --namespace $AB_NAMESPACE \
    --needVerificationCode 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 272 'PublicVerifyHeadlessAccountV3' test.out

#- 273 PublicUpdatePasswordV3
# body param: body
echo '{"languageTag": "nUA0lp6y", "newPassword": "Vr8clcic", "oldPassword": "xCvauerx"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpdatePasswordV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 273 'PublicUpdatePasswordV3' test.out

#- 274 PublicCreateJusticeUser
$CLI_EXE \
    --sn iam \
    --op PublicCreateJusticeUser \
    --namespace $AB_NAMESPACE \
    --targetNamespace 'O3Q4nkH9' \
    > test.out 2>&1
eval_tap $? 274 'PublicCreateJusticeUser' test.out

#- 275 PublicPlatformLinkV3
$CLI_EXE \
    --sn iam \
    --op PublicPlatformLinkV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'piHoMZu9' \
    --redirectUri 'tornDjjy' \
    --ticket 'eJJ1lfgR' \
    > test.out 2>&1
eval_tap $? 275 'PublicPlatformLinkV3' test.out

#- 276 PublicPlatformUnlinkV3
# body param: body
echo '{"platformNamespace": "ccLrWOKT"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicPlatformUnlinkV3 \
    --namespace $AB_NAMESPACE \
    --platformId '9gXDA0EF' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 276 'PublicPlatformUnlinkV3' test.out

#- 277 PublicPlatformUnlinkAllV3
$CLI_EXE \
    --sn iam \
    --op PublicPlatformUnlinkAllV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'nZmm9Swg' \
    > test.out 2>&1
eval_tap $? 277 'PublicPlatformUnlinkAllV3' test.out

#- 278 PublicForcePlatformLinkV3
$CLI_EXE \
    --sn iam \
    --op PublicForcePlatformLinkV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'QKdemWqJ' \
    --ticket 'H61yzvOV' \
    > test.out 2>&1
eval_tap $? 278 'PublicForcePlatformLinkV3' test.out

#- 279 PublicWebLinkPlatform
$CLI_EXE \
    --sn iam \
    --op PublicWebLinkPlatform \
    --namespace $AB_NAMESPACE \
    --platformId '3bhv976C' \
    --clientId 'fUqcE4pX' \
    --redirectUri '3XYWngvF' \
    > test.out 2>&1
eval_tap $? 279 'PublicWebLinkPlatform' test.out

#- 280 PublicWebLinkPlatformEstablish
$CLI_EXE \
    --sn iam \
    --op PublicWebLinkPlatformEstablish \
    --namespace $AB_NAMESPACE \
    --platformId '0pXN4kpx' \
    --code 'e72HBqSk' \
    --state 'BIMzTvjp' \
    > test.out 2>&1
eval_tap $? 280 'PublicWebLinkPlatformEstablish' test.out

#- 281 PublicProcessWebLinkPlatformV3
$CLI_EXE \
    --sn iam \
    --op PublicProcessWebLinkPlatformV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'CLxyn4lp' \
    --code 'HRZDpBDM' \
    --state 'yOKtVNEI' \
    > test.out 2>&1
eval_tap $? 281 'PublicProcessWebLinkPlatformV3' test.out

#- 282 PublicGetUsersPlatformInfosV3
# body param: body
echo '{"platformId": "TqslY9zv", "userIds": ["QCf2oK0R", "eXbA1DPc", "nKDPLXhE"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicGetUsersPlatformInfosV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 282 'PublicGetUsersPlatformInfosV3' test.out

#- 283 ResetPasswordV3
# body param: body
echo '{"code": "Vivwal3Q", "emailAddress": "26kM1zLq", "newPassword": "l6YrCZRr"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op ResetPasswordV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 283 'ResetPasswordV3' test.out

#- 284 PublicGetUserByUserIdV3
eval_tap 0 284 'PublicGetUserByUserIdV3 # SKIP deprecated' test.out

#- 285 PublicGetUserBanHistoryV3
$CLI_EXE \
    --sn iam \
    --op PublicGetUserBanHistoryV3 \
    --namespace $AB_NAMESPACE \
    --userId 'M53PKJgf' \
    --activeOnly 'true' \
    --after 'P7Q1tHZU' \
    --before 'kwXrTCJ5' \
    --limit '13' \
    > test.out 2>&1
eval_tap $? 285 'PublicGetUserBanHistoryV3' test.out

#- 286 PublicListUserAllPlatformAccountsDistinctV3
$CLI_EXE \
    --sn iam \
    --op PublicListUserAllPlatformAccountsDistinctV3 \
    --namespace $AB_NAMESPACE \
    --userId '9EjiidYJ' \
    > test.out 2>&1
eval_tap $? 286 'PublicListUserAllPlatformAccountsDistinctV3' test.out

#- 287 PublicGetUserInformationV3
$CLI_EXE \
    --sn iam \
    --op PublicGetUserInformationV3 \
    --namespace $AB_NAMESPACE \
    --userId 'uX8Fzvd5' \
    > test.out 2>&1
eval_tap $? 287 'PublicGetUserInformationV3' test.out

#- 288 PublicGetUserLoginHistoriesV3
$CLI_EXE \
    --sn iam \
    --op PublicGetUserLoginHistoriesV3 \
    --namespace $AB_NAMESPACE \
    --userId '5cpN6jZy' \
    --after '0.01972314788535623' \
    --before '0.6329038984736791' \
    --limit '52' \
    > test.out 2>&1
eval_tap $? 288 'PublicGetUserLoginHistoriesV3' test.out

#- 289 PublicGetUserPlatformAccountsV3
$CLI_EXE \
    --sn iam \
    --op PublicGetUserPlatformAccountsV3 \
    --namespace $AB_NAMESPACE \
    --userId 'vBEU2M6a' \
    --after 'msgjDgQR' \
    --before 'qVV7QK7e' \
    --limit '45' \
    --platformId 'BmQzx7K3' \
    > test.out 2>&1
eval_tap $? 289 'PublicGetUserPlatformAccountsV3' test.out

#- 290 PublicListJusticePlatformAccountsV3
$CLI_EXE \
    --sn iam \
    --op PublicListJusticePlatformAccountsV3 \
    --namespace $AB_NAMESPACE \
    --userId 'whCTRRAR' \
    > test.out 2>&1
eval_tap $? 290 'PublicListJusticePlatformAccountsV3' test.out

#- 291 PublicLinkPlatformAccount
# body param: body
echo '{"platformId": "WpTIn7xb", "platformUserId": "C6JOFrdj"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicLinkPlatformAccount \
    --namespace $AB_NAMESPACE \
    --userId 'P3JxNuZv' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 291 'PublicLinkPlatformAccount' test.out

#- 292 PublicForceLinkPlatformWithProgression
# body param: body
echo '{"chosenNamespaces": ["kcsrpkkw", "l5WdEq3J", "Id6e8cmz"], "requestId": "B4pismr1"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicForceLinkPlatformWithProgression \
    --namespace $AB_NAMESPACE \
    --userId '7RCtsrwR' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 292 'PublicForceLinkPlatformWithProgression' test.out

#- 293 PublicGetPublisherUserV3
$CLI_EXE \
    --sn iam \
    --op PublicGetPublisherUserV3 \
    --namespace $AB_NAMESPACE \
    --userId 'cMSa6cTL' \
    > test.out 2>&1
eval_tap $? 293 'PublicGetPublisherUserV3' test.out

#- 294 PublicValidateUserByUserIDAndPasswordV3
$CLI_EXE \
    --sn iam \
    --op PublicValidateUserByUserIDAndPasswordV3 \
    --namespace $AB_NAMESPACE \
    --userId 'buj8Jx6b' \
    --password 'UJqeHjda' \
    > test.out 2>&1
eval_tap $? 294 'PublicValidateUserByUserIDAndPasswordV3' test.out

#- 295 PublicGetRolesV3
$CLI_EXE \
    --sn iam \
    --op PublicGetRolesV3 \
    --after 'teFI2Hnx' \
    --before 'cuUTdjjG' \
    --isWildcard 'false' \
    --limit '69' \
    > test.out 2>&1
eval_tap $? 295 'PublicGetRolesV3' test.out

#- 296 PublicGetRoleV3
$CLI_EXE \
    --sn iam \
    --op PublicGetRoleV3 \
    --roleId 'iyyNdOC7' \
    > test.out 2>&1
eval_tap $? 296 'PublicGetRoleV3' test.out

#- 297 PublicGetMyUserV3
$CLI_EXE \
    --sn iam \
    --op PublicGetMyUserV3 \
    --includeAllPlatforms 'false' \
    > test.out 2>&1
eval_tap $? 297 'PublicGetMyUserV3' test.out

#- 298 PublicGetLinkHeadlessAccountToMyAccountConflictV3
$CLI_EXE \
    --sn iam \
    --op PublicGetLinkHeadlessAccountToMyAccountConflictV3 \
    --oneTimeLinkCode 'awTXsBJm' \
    > test.out 2>&1
eval_tap $? 298 'PublicGetLinkHeadlessAccountToMyAccountConflictV3' test.out

#- 299 LinkHeadlessAccountToMyAccountV3
# body param: body
echo '{"chosenNamespaces": ["MJxeXEhZ", "forBErTj", "OSezA0Qd"], "oneTimeLinkCode": "PFxkPQAZ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op LinkHeadlessAccountToMyAccountV3 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 299 'LinkHeadlessAccountToMyAccountV3' test.out

#- 300 PublicSendVerificationLinkV3
# body param: body
echo '{"languageTag": "X08TX4GH"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicSendVerificationLinkV3 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 300 'PublicSendVerificationLinkV3' test.out

#- 301 PublicVerifyUserByLinkV3
$CLI_EXE \
    --sn iam \
    --op PublicVerifyUserByLinkV3 \
    --code 'PnrFlrvG' \
    > test.out 2>&1
eval_tap $? 301 'PublicVerifyUserByLinkV3' test.out

#- 302 PlatformAuthenticateSAMLV3Handler
$CLI_EXE \
    --sn iam \
    --op PlatformAuthenticateSAMLV3Handler \
    --platformId 'C5upN8si' \
    --code 'MSEAiv8T' \
    --error 'MyJZyaLM' \
    --state 'CDvZZD13' \
    > test.out 2>&1
eval_tap $? 302 'PlatformAuthenticateSAMLV3Handler' test.out

#- 303 LoginSSOClient
$CLI_EXE \
    --sn iam \
    --op LoginSSOClient \
    --platformId 'k9BXSiOi' \
    --payload 'vPa8ykcA' \
    > test.out 2>&1
eval_tap $? 303 'LoginSSOClient' test.out

#- 304 LogoutSSOClient
$CLI_EXE \
    --sn iam \
    --op LogoutSSOClient \
    --platformId 'LTIbe16q' \
    > test.out 2>&1
eval_tap $? 304 'LogoutSSOClient' test.out

#- 305 RequestTargetTokenResponseV3
$CLI_EXE \
    --sn iam \
    --op RequestTargetTokenResponseV3 \
    --additionalData '7lB2brXC' \
    --code 'V98VdC82' \
    > test.out 2>&1
eval_tap $? 305 'RequestTargetTokenResponseV3' test.out

#- 306 AdminListInvitationHistoriesV4
$CLI_EXE \
    --sn iam \
    --op AdminListInvitationHistoriesV4 \
    --limit '58' \
    --namespace_ 'hwEoQUHp' \
    --offset '53' \
    > test.out 2>&1
eval_tap $? 306 'AdminListInvitationHistoriesV4' test.out

#- 307 AdminGetDevicesByUserV4
$CLI_EXE \
    --sn iam \
    --op AdminGetDevicesByUserV4 \
    --namespace $AB_NAMESPACE \
    --userId '7sg8xoat' \
    > test.out 2>&1
eval_tap $? 307 'AdminGetDevicesByUserV4' test.out

#- 308 AdminGetBannedDevicesV4
$CLI_EXE \
    --sn iam \
    --op AdminGetBannedDevicesV4 \
    --namespace $AB_NAMESPACE \
    --deviceType 'Pec0qey6' \
    --endDate 'noM0IT2o' \
    --limit '83' \
    --offset '69' \
    --startDate 'ZDVdvX1r' \
    > test.out 2>&1
eval_tap $? 308 'AdminGetBannedDevicesV4' test.out

#- 309 AdminGetUserDeviceBansV4
$CLI_EXE \
    --sn iam \
    --op AdminGetUserDeviceBansV4 \
    --namespace $AB_NAMESPACE \
    --userId 'wubXs2CD' \
    > test.out 2>&1
eval_tap $? 309 'AdminGetUserDeviceBansV4' test.out

#- 310 AdminBanDeviceV4
# body param: body
echo '{"comment": "oXIxrmYt", "deviceId": "5QoIGQDL", "deviceType": "FJfE8CAe", "enabled": true, "endDate": "hE2PIxRf", "ext": {"hjmyDraU": {}, "xhup06fP": {}, "7zlhgee2": {}}, "reason": "LVjnLXFH"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBanDeviceV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 310 'AdminBanDeviceV4' test.out

#- 311 AdminGetDeviceBanV4
$CLI_EXE \
    --sn iam \
    --op AdminGetDeviceBanV4 \
    --banId 'dEbT0I0V' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 311 'AdminGetDeviceBanV4' test.out

#- 312 AdminUpdateDeviceBanV4
# body param: body
echo '{"enabled": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateDeviceBanV4 \
    --banId 'hnO7jcTM' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 312 'AdminUpdateDeviceBanV4' test.out

#- 313 AdminGenerateReportV4
$CLI_EXE \
    --sn iam \
    --op AdminGenerateReportV4 \
    --namespace $AB_NAMESPACE \
    --endDate 'DbjD4iG6' \
    --startDate 'JE25U003' \
    --deviceType 'RlB4BgPt' \
    > test.out 2>&1
eval_tap $? 313 'AdminGenerateReportV4' test.out

#- 314 AdminGetDeviceTypesV4
$CLI_EXE \
    --sn iam \
    --op AdminGetDeviceTypesV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 314 'AdminGetDeviceTypesV4' test.out

#- 315 AdminGetDeviceBansV4
$CLI_EXE \
    --sn iam \
    --op AdminGetDeviceBansV4 \
    --deviceId 'yqE3kx46' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 315 'AdminGetDeviceBansV4' test.out

#- 316 AdminDecryptDeviceV4
$CLI_EXE \
    --sn iam \
    --op AdminDecryptDeviceV4 \
    --deviceId '1JU0KdMs' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 316 'AdminDecryptDeviceV4' test.out

#- 317 AdminUnbanDeviceV4
$CLI_EXE \
    --sn iam \
    --op AdminUnbanDeviceV4 \
    --deviceId 'KJiY1WnB' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 317 'AdminUnbanDeviceV4' test.out

#- 318 AdminGetUsersByDeviceV4
$CLI_EXE \
    --sn iam \
    --op AdminGetUsersByDeviceV4 \
    --deviceId 'nUQXpB8h' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 318 'AdminGetUsersByDeviceV4' test.out

#- 319 AdminGetNamespaceInvitationHistoryV4
$CLI_EXE \
    --sn iam \
    --op AdminGetNamespaceInvitationHistoryV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 319 'AdminGetNamespaceInvitationHistoryV4' test.out

#- 320 AdminGetNamespaceUserInvitationHistoryV4
$CLI_EXE \
    --sn iam \
    --op AdminGetNamespaceUserInvitationHistoryV4 \
    --namespace $AB_NAMESPACE \
    --limit '90' \
    --offset '21' \
    > test.out 2>&1
eval_tap $? 320 'AdminGetNamespaceUserInvitationHistoryV4' test.out

#- 321 AdminCreateTestUsersV4
# body param: body
echo '{"count": 12}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminCreateTestUsersV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 321 'AdminCreateTestUsersV4' test.out

#- 322 AdminCreateUserV4
# body param: body
echo '{"acceptedPolicies": [{"isAccepted": true, "localizedPolicyVersionId": "7tPXQXVz", "policyId": "wh0XP8yh", "policyVersionId": "gJa3DLna"}, {"isAccepted": false, "localizedPolicyVersionId": "EyKBosic", "policyId": "lmJOo8uE", "policyVersionId": "l7wkhBit"}, {"isAccepted": true, "localizedPolicyVersionId": "nTYkFzWL", "policyId": "y7p22GEO", "policyVersionId": "co49fHW8"}], "authType": "EMAILPASSWD", "code": "q8JgBeos", "country": "HloGOWAm", "dateOfBirth": "ljJF7XQ9", "displayName": "Lt2rUlVC", "emailAddress": "P2yLX2vo", "password": "2hjcjJuX", "passwordMD5Sum": "Se1C1rer", "reachMinimumAge": true, "uniqueDisplayName": "cqYlXfBj", "username": "RCW930KY"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminCreateUserV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 322 'AdminCreateUserV4' test.out

#- 323 AdminBulkUpdateUserAccountTypeV4
# body param: body
echo '{"testAccount": true, "userIds": ["7PaS2Dlv", "EzQfzeVd", "jG5Jzyxw"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBulkUpdateUserAccountTypeV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 323 'AdminBulkUpdateUserAccountTypeV4' test.out

#- 324 AdminBulkCheckValidUserIDV4
# body param: body
echo '{"userIds": ["opojfLXQ", "JW3nwvEW", "1n8u1nuw"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBulkCheckValidUserIDV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 324 'AdminBulkCheckValidUserIDV4' test.out

#- 325 AdminUpdateUserV4
# body param: body
echo '{"avatarUrl": "B8qstNGN", "country": "j2bdJFuC", "dateOfBirth": "vKfrsnmp", "displayName": "CXSlgOxQ", "languageTag": "bUguirzR", "skipLoginQueue": false, "uniqueDisplayName": "7LdBy6uv", "userName": "7x90A4VH"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserV4 \
    --namespace $AB_NAMESPACE \
    --userId 'nUrnCgmZ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 325 'AdminUpdateUserV4' test.out

#- 326 AdminUpdateUserEmailAddressV4
# body param: body
echo '{"code": "wLScU7jP", "emailAddress": "L80r5Gpy"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserEmailAddressV4 \
    --namespace $AB_NAMESPACE \
    --userId 'uC3PKn1G' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 326 'AdminUpdateUserEmailAddressV4' test.out

#- 327 AdminDisableUserMFAV4
$CLI_EXE \
    --sn iam \
    --op AdminDisableUserMFAV4 \
    --namespace $AB_NAMESPACE \
    --userId 'o0ofOgr7' \
    > test.out 2>&1
eval_tap $? 327 'AdminDisableUserMFAV4' test.out

#- 328 AdminListUserRolesV4
$CLI_EXE \
    --sn iam \
    --op AdminListUserRolesV4 \
    --namespace $AB_NAMESPACE \
    --userId '91tA02xz' \
    > test.out 2>&1
eval_tap $? 328 'AdminListUserRolesV4' test.out

#- 329 AdminUpdateUserRoleV4
# body param: body
echo '{"assignedNamespaces": ["scvEO3T5", "PQSUsrdT", "xGUCUMDe"], "roleId": "DNSQr6Lf"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserRoleV4 \
    --namespace $AB_NAMESPACE \
    --userId '2Rak3oqZ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 329 'AdminUpdateUserRoleV4' test.out

#- 330 AdminAddUserRoleV4
# body param: body
echo '{"assignedNamespaces": ["CHK8yAel", "wZ70YLj5", "efcHSIGT"], "roleId": "Tdbi83ok"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddUserRoleV4 \
    --namespace $AB_NAMESPACE \
    --userId '2em4aM7v' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 330 'AdminAddUserRoleV4' test.out

#- 331 AdminRemoveUserRoleV4
# body param: body
echo '{"assignedNamespaces": ["3YFlwTgW", "lmISfGgw", "3UupriRd"], "roleId": "KPNK8gIY"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminRemoveUserRoleV4 \
    --namespace $AB_NAMESPACE \
    --userId 'AnNnDntN' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 331 'AdminRemoveUserRoleV4' test.out

#- 332 AdminGetRolesV4
$CLI_EXE \
    --sn iam \
    --op AdminGetRolesV4 \
    --adminRole 'true' \
    --isWildcard 'false' \
    --limit '98' \
    --offset '47' \
    > test.out 2>&1
eval_tap $? 332 'AdminGetRolesV4' test.out

#- 333 AdminCreateRoleV4
# body param: body
echo '{"adminRole": false, "deletable": true, "isWildcard": true, "roleName": "9uzgDXq0"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminCreateRoleV4 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 333 'AdminCreateRoleV4' test.out

#- 334 AdminGetRoleV4
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleV4 \
    --roleId 'VsKwnjLS' \
    > test.out 2>&1
eval_tap $? 334 'AdminGetRoleV4' test.out

#- 335 AdminDeleteRoleV4
$CLI_EXE \
    --sn iam \
    --op AdminDeleteRoleV4 \
    --roleId 'Rh4pjPmG' \
    > test.out 2>&1
eval_tap $? 335 'AdminDeleteRoleV4' test.out

#- 336 AdminUpdateRoleV4
# body param: body
echo '{"adminRole": false, "deletable": true, "isWildcard": false, "roleName": "VfczLM6H"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateRoleV4 \
    --roleId '1dnh3Tzu' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 336 'AdminUpdateRoleV4' test.out

#- 337 AdminUpdateRolePermissionsV4
# body param: body
echo '{"permissions": [{"action": 8, "resource": "BPG1dYSi", "schedAction": 95, "schedCron": "QwL1zC3x", "schedRange": ["xqITsAZM", "JtrFoD8P", "O1DbImke"]}, {"action": 29, "resource": "N8f2lksz", "schedAction": 92, "schedCron": "7osIfG7o", "schedRange": ["lxe9D4pc", "iHb0ZyCn", "EEUSxsRE"]}, {"action": 12, "resource": "Qc14iVoI", "schedAction": 70, "schedCron": "nOBDIkjs", "schedRange": ["QOJ8YiYL", "5vWiBnsC", "DahLUwB9"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateRolePermissionsV4 \
    --roleId 'HX6JenAD' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 337 'AdminUpdateRolePermissionsV4' test.out

#- 338 AdminAddRolePermissionsV4
# body param: body
echo '{"permissions": [{"action": 31, "resource": "wXkAXCZ8", "schedAction": 55, "schedCron": "EMFYirPm", "schedRange": ["LeXmd1Q7", "PJFT7y3k", "T8WbpJqs"]}, {"action": 75, "resource": "DUHpt8kB", "schedAction": 9, "schedCron": "tYNGMyms", "schedRange": ["0DLCMDDU", "TotwLzt3", "dj8FBHtJ"]}, {"action": 26, "resource": "lfAYme77", "schedAction": 66, "schedCron": "7CqzqzFo", "schedRange": ["v7QCdnVf", "905Grlg9", "ygNN5tLx"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddRolePermissionsV4 \
    --roleId 'Qqx49BWf' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 338 'AdminAddRolePermissionsV4' test.out

#- 339 AdminDeleteRolePermissionsV4
# body param: body
echo '["xZgmkTDe", "PBkVVNhy", "ZWeTTqK2"]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDeleteRolePermissionsV4 \
    --roleId 'f9qCQSMr' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 339 'AdminDeleteRolePermissionsV4' test.out

#- 340 AdminListAssignedUsersV4
$CLI_EXE \
    --sn iam \
    --op AdminListAssignedUsersV4 \
    --roleId 'VcX0QlIV' \
    --after '3tBLIS0z' \
    --before 'kW9ztC7t' \
    --limit '18' \
    > test.out 2>&1
eval_tap $? 340 'AdminListAssignedUsersV4' test.out

#- 341 AdminAssignUserToRoleV4
# body param: body
echo '{"assignedNamespaces": ["Bfneq9oq", "IueAHTHq", "DyMifY6l"], "namespace": "fy73Z2RG", "userId": "zDtMUBkr"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAssignUserToRoleV4 \
    --roleId 'ZD1IXCAv' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 341 'AdminAssignUserToRoleV4' test.out

#- 342 AdminRevokeUserFromRoleV4
# body param: body
echo '{"namespace": "eQXeCqsS", "userId": "bkX3px2G"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminRevokeUserFromRoleV4 \
    --roleId 'NPxaZVBR' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 342 'AdminRevokeUserFromRoleV4' test.out

#- 343 AdminInviteUserNewV4
# body param: body
echo '{"assignedNamespaces": ["VouvqqY8", "N22cdvUS", "keyL2tYe"], "emailAddresses": ["AX4cIHYp", "GJDNLyKO", "4B93Vj94"], "isAdmin": true, "isNewStudio": true, "namespace": "o4rjeayo", "roleId": "B22H3HU5"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminInviteUserNewV4 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 343 'AdminInviteUserNewV4' test.out

#- 344 AdminUpdateMyUserV4
# body param: body
echo '{"avatarUrl": "dFAMjILe", "country": "cOC6g6lX", "dateOfBirth": "xKGuhs5i", "displayName": "kDlpMgpt", "languageTag": "2vOrzmWs", "skipLoginQueue": false, "uniqueDisplayName": "0lIjEXvt", "userName": "Kvx8Qml7"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateMyUserV4 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 344 'AdminUpdateMyUserV4' test.out

#- 345 AdminDisableMyAuthenticatorV4
$CLI_EXE \
    --sn iam \
    --op AdminDisableMyAuthenticatorV4 \
    > test.out 2>&1
eval_tap $? 345 'AdminDisableMyAuthenticatorV4' test.out

#- 346 AdminEnableMyAuthenticatorV4
$CLI_EXE \
    --sn iam \
    --op AdminEnableMyAuthenticatorV4 \
    --code 'hVQMGmrs' \
    > test.out 2>&1
eval_tap $? 346 'AdminEnableMyAuthenticatorV4' test.out

#- 347 AdminGenerateMyAuthenticatorKeyV4
$CLI_EXE \
    --sn iam \
    --op AdminGenerateMyAuthenticatorKeyV4 \
    > test.out 2>&1
eval_tap $? 347 'AdminGenerateMyAuthenticatorKeyV4' test.out

#- 348 AdminGetMyBackupCodesV4
eval_tap 0 348 'AdminGetMyBackupCodesV4 # SKIP deprecated' test.out

#- 349 AdminGenerateMyBackupCodesV4
eval_tap 0 349 'AdminGenerateMyBackupCodesV4 # SKIP deprecated' test.out

#- 350 AdminDisableMyBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op AdminDisableMyBackupCodesV4 \
    > test.out 2>&1
eval_tap $? 350 'AdminDisableMyBackupCodesV4' test.out

#- 351 AdminDownloadMyBackupCodesV4
eval_tap 0 351 'AdminDownloadMyBackupCodesV4 # SKIP deprecated' test.out

#- 352 AdminEnableMyBackupCodesV4
eval_tap 0 352 'AdminEnableMyBackupCodesV4 # SKIP deprecated' test.out

#- 353 AdminGetBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op AdminGetBackupCodesV4 \
    > test.out 2>&1
eval_tap $? 353 'AdminGetBackupCodesV4' test.out

#- 354 AdminGenerateBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op AdminGenerateBackupCodesV4 \
    > test.out 2>&1
eval_tap $? 354 'AdminGenerateBackupCodesV4' test.out

#- 355 AdminEnableBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op AdminEnableBackupCodesV4 \
    > test.out 2>&1
eval_tap $? 355 'AdminEnableBackupCodesV4' test.out

#- 356 AdminSendMyMFAEmailCodeV4
$CLI_EXE \
    --sn iam \
    --op AdminSendMyMFAEmailCodeV4 \
    > test.out 2>&1
eval_tap $? 356 'AdminSendMyMFAEmailCodeV4' test.out

#- 357 AdminDisableMyEmailV4
$CLI_EXE \
    --sn iam \
    --op AdminDisableMyEmailV4 \
    > test.out 2>&1
eval_tap $? 357 'AdminDisableMyEmailV4' test.out

#- 358 AdminEnableMyEmailV4
$CLI_EXE \
    --sn iam \
    --op AdminEnableMyEmailV4 \
    --code '4Hr5u9zW' \
    > test.out 2>&1
eval_tap $? 358 'AdminEnableMyEmailV4' test.out

#- 359 AdminGetMyEnabledFactorsV4
$CLI_EXE \
    --sn iam \
    --op AdminGetMyEnabledFactorsV4 \
    > test.out 2>&1
eval_tap $? 359 'AdminGetMyEnabledFactorsV4' test.out

#- 360 AdminMakeFactorMyDefaultV4
$CLI_EXE \
    --sn iam \
    --op AdminMakeFactorMyDefaultV4 \
    --factor 'phYRFoqH' \
    > test.out 2>&1
eval_tap $? 360 'AdminMakeFactorMyDefaultV4' test.out

#- 361 AdminInviteUserV4
eval_tap 0 361 'AdminInviteUserV4 # SKIP deprecated' test.out

#- 362 AuthenticationWithPlatformLinkV4
$CLI_EXE \
    --sn iam \
    --op AuthenticationWithPlatformLinkV4 \
    --extend_exp 'false' \
    --client_id '2IEEM63H' \
    --linkingToken 'BMmcD2Nv' \
    --password '5b9YIRkb' \
    --username '18Gx8RSM' \
    > test.out 2>&1
eval_tap $? 362 'AuthenticationWithPlatformLinkV4' test.out

#- 363 GenerateTokenByNewHeadlessAccountV4
$CLI_EXE \
    --sn iam \
    --op GenerateTokenByNewHeadlessAccountV4 \
    --additionalData 'saBQJN0B' \
    --extend_exp 'false' \
    --linkingToken 'ryRpCPnx' \
    > test.out 2>&1
eval_tap $? 363 'GenerateTokenByNewHeadlessAccountV4' test.out

#- 364 Verify2faCodeV4
$CLI_EXE \
    --sn iam \
    --op Verify2faCodeV4 \
    --code 'c4LM1RWX' \
    --factor 'v1LiTxUd' \
    --mfaToken 'OA98gHVk' \
    --rememberDevice 'true' \
    > test.out 2>&1
eval_tap $? 364 'Verify2faCodeV4' test.out

#- 365 PlatformTokenGrantV4
$CLI_EXE \
    --sn iam \
    --op PlatformTokenGrantV4 \
    --platformId 'oeu2TE2C' \
    --codeChallenge 'CDGVPEf1' \
    --codeChallengeMethod 'S256' \
    --additionalData '1YUKL15S' \
    --client_id 'kV4R2prd' \
    --createHeadless 'true' \
    --device_id 'n6gjf9r0' \
    --macAddress 'j3pvGUAg' \
    --platform_token 'saQmhidl' \
    --skipSetCookie 'false' \
    > test.out 2>&1
eval_tap $? 365 'PlatformTokenGrantV4' test.out

#- 366 SimultaneousLoginV4
$CLI_EXE \
    --sn iam \
    --op SimultaneousLoginV4 \
    --codeChallenge '4Ls6qIzM' \
    --codeChallengeMethod 'S256' \
    --simultaneousPlatform '7Okaoy0M' \
    --simultaneousTicket '8qOCjn5v' \
    --nativePlatform 'steam' \
    --nativePlatformTicket 'Qu53C5Zj' \
    > test.out 2>&1
eval_tap $? 366 'SimultaneousLoginV4' test.out

#- 367 TokenGrantV4
$CLI_EXE \
    --sn iam \
    --op TokenGrantV4 \
    --codeChallenge 'UzT4HpkV' \
    --codeChallengeMethod 'plain' \
    --additionalData 'isylu1t5' \
    --client_id 'OEX6rZE6' \
    --code '5WEMbOqZ' \
    --code_verifier 'AEkAeERB' \
    --extendNamespace 'TjfFnjtM' \
    --extend_exp 'true' \
    --login_queue_ticket 'LdWzvcOP' \
    --password 'sYtOC07u' \
    --redirect_uri 'whi024jF' \
    --refresh_token 'jYEs0kRj' \
    --username '3t64FHET' \
    --grant_type 'urn:ietf:params:oauth:grant-type:extend_client_credentials' \
    > test.out 2>&1
eval_tap $? 367 'TokenGrantV4' test.out

#- 368 RequestTargetTokenResponseV4
$CLI_EXE \
    --sn iam \
    --op RequestTargetTokenResponseV4 \
    --additionalData 'RFoapc72' \
    --code 'JnmRhnj0' \
    > test.out 2>&1
eval_tap $? 368 'RequestTargetTokenResponseV4' test.out

#- 369 PublicCreateTestUserV4
# body param: body
echo '{"acceptedPolicies": [{"isAccepted": true, "localizedPolicyVersionId": "ZAQG5J4a", "policyId": "LtY7IFI5", "policyVersionId": "YCk8KiCk"}, {"isAccepted": true, "localizedPolicyVersionId": "tQSIVClO", "policyId": "5K9R9Ynq", "policyVersionId": "AFS2sbpM"}, {"isAccepted": false, "localizedPolicyVersionId": "8ypOi0Kj", "policyId": "NB9OLlOs", "policyVersionId": "FFnjCVa1"}], "authType": "EMAILPASSWD", "country": "kOszWBdT", "dateOfBirth": "27tlSM4W", "displayName": "JlhdxcOc", "emailAddress": "mrgVKZBb", "password": "0hjbqgYa", "passwordMD5Sum": "UoGm3uee", "uniqueDisplayName": "78ne4o0N", "username": "Ou45fTPV", "verified": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicCreateTestUserV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 369 'PublicCreateTestUserV4' test.out

#- 370 PublicCreateUserV4
# body param: body
echo '{"acceptedPolicies": [{"isAccepted": false, "localizedPolicyVersionId": "M2Fb5X3k", "policyId": "78Y3JcPl", "policyVersionId": "oX2QJKVo"}, {"isAccepted": true, "localizedPolicyVersionId": "5Dh46Olk", "policyId": "PNEU3EKa", "policyVersionId": "cGvrXXGC"}, {"isAccepted": true, "localizedPolicyVersionId": "eYQpbTSi", "policyId": "c0iXRTms", "policyVersionId": "2aGZWCpk"}], "authType": "EMAILPASSWD", "code": "ti0j57OJ", "country": "xjn1NNnj", "dateOfBirth": "cH638LVr", "displayName": "HFYbrZeW", "emailAddress": "1KCLweHO", "password": "3wsMNNMG", "passwordMD5Sum": "ZoL9M374", "reachMinimumAge": true, "uniqueDisplayName": "nDlpilD0", "username": "PT885GNQ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicCreateUserV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 370 'PublicCreateUserV4' test.out

#- 371 CreateUserFromInvitationV4
# body param: body
echo '{"acceptedPolicies": [{"isAccepted": true, "localizedPolicyVersionId": "2XdIgvRC", "policyId": "jtX8qtXZ", "policyVersionId": "FqLrq0iO"}, {"isAccepted": false, "localizedPolicyVersionId": "UllsqxSS", "policyId": "UQ34xmrf", "policyVersionId": "0L4gQRlf"}, {"isAccepted": true, "localizedPolicyVersionId": "erKULQe3", "policyId": "0T4GqWOn", "policyVersionId": "KZh1H7Dn"}], "authType": "EMAILPASSWD", "code": "e0DMCq6O", "country": "7yaN4Azx", "dateOfBirth": "7Pyo4K07", "displayName": "BJn6rbXI", "emailAddress": "EQtt44zU", "password": "iKQsheCb", "passwordMD5Sum": "7zINah1C", "reachMinimumAge": false, "uniqueDisplayName": "NomCbK8z", "username": "qaVHcRjw"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op CreateUserFromInvitationV4 \
    --invitationId 'PWr2gxLW' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 371 'CreateUserFromInvitationV4' test.out

#- 372 PublicUpdateUserV4
# body param: body
echo '{"avatarUrl": "jGqVFQHf", "country": "IHRk9Bpj", "dateOfBirth": "njkeBNka", "displayName": "lGG6mvCg", "languageTag": "kaTLzkwW", "uniqueDisplayName": "eV3c9kPL", "userName": "9QKobQt1"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpdateUserV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 372 'PublicUpdateUserV4' test.out

#- 373 PublicUpdateUserEmailAddressV4
# body param: body
echo '{"code": "HG23BX2R", "emailAddress": "XHbDyOqz"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpdateUserEmailAddressV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 373 'PublicUpdateUserEmailAddressV4' test.out

#- 374 PublicUpgradeHeadlessAccountWithVerificationCodeV4
# body param: body
echo '{"code": "fgxdHNy8", "country": "XScXbud8", "dateOfBirth": "7TntDLc5", "displayName": "kF0ZoWxM", "emailAddress": "NgGY2Yub", "password": "fM9eYzlq", "reachMinimumAge": false, "uniqueDisplayName": "eqAfZe4u", "username": "rOnBfauD", "validateOnly": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpgradeHeadlessAccountWithVerificationCodeV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 374 'PublicUpgradeHeadlessAccountWithVerificationCodeV4' test.out

#- 375 PublicUpgradeHeadlessAccountV4
# body param: body
echo '{"emailAddress": "wMt26ewx", "password": "Ae2M84F8", "username": "CSTjBb3P"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpgradeHeadlessAccountV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 375 'PublicUpgradeHeadlessAccountV4' test.out

#- 376 PublicDisableMyAuthenticatorV4
$CLI_EXE \
    --sn iam \
    --op PublicDisableMyAuthenticatorV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 376 'PublicDisableMyAuthenticatorV4' test.out

#- 377 PublicEnableMyAuthenticatorV4
$CLI_EXE \
    --sn iam \
    --op PublicEnableMyAuthenticatorV4 \
    --namespace $AB_NAMESPACE \
    --code 'UWrVNgm0' \
    > test.out 2>&1
eval_tap $? 377 'PublicEnableMyAuthenticatorV4' test.out

#- 378 PublicGenerateMyAuthenticatorKeyV4
$CLI_EXE \
    --sn iam \
    --op PublicGenerateMyAuthenticatorKeyV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 378 'PublicGenerateMyAuthenticatorKeyV4' test.out

#- 379 PublicGetMyBackupCodesV4
eval_tap 0 379 'PublicGetMyBackupCodesV4 # SKIP deprecated' test.out

#- 380 PublicGenerateMyBackupCodesV4
eval_tap 0 380 'PublicGenerateMyBackupCodesV4 # SKIP deprecated' test.out

#- 381 PublicDisableMyBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op PublicDisableMyBackupCodesV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 381 'PublicDisableMyBackupCodesV4' test.out

#- 382 PublicDownloadMyBackupCodesV4
eval_tap 0 382 'PublicDownloadMyBackupCodesV4 # SKIP deprecated' test.out

#- 383 PublicEnableMyBackupCodesV4
eval_tap 0 383 'PublicEnableMyBackupCodesV4 # SKIP deprecated' test.out

#- 384 PublicGetBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op PublicGetBackupCodesV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 384 'PublicGetBackupCodesV4' test.out

#- 385 PublicGenerateBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op PublicGenerateBackupCodesV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 385 'PublicGenerateBackupCodesV4' test.out

#- 386 PublicEnableBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op PublicEnableBackupCodesV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 386 'PublicEnableBackupCodesV4' test.out

#- 387 PublicRemoveTrustedDeviceV4
$CLI_EXE \
    --sn iam \
    --op PublicRemoveTrustedDeviceV4 \
    --namespace $AB_NAMESPACE \
    --device_token 'COSgA1nl' \
    > test.out 2>&1
eval_tap $? 387 'PublicRemoveTrustedDeviceV4' test.out

#- 388 PublicSendMyMFAEmailCodeV4
$CLI_EXE \
    --sn iam \
    --op PublicSendMyMFAEmailCodeV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 388 'PublicSendMyMFAEmailCodeV4' test.out

#- 389 PublicDisableMyEmailV4
$CLI_EXE \
    --sn iam \
    --op PublicDisableMyEmailV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 389 'PublicDisableMyEmailV4' test.out

#- 390 PublicEnableMyEmailV4
$CLI_EXE \
    --sn iam \
    --op PublicEnableMyEmailV4 \
    --namespace $AB_NAMESPACE \
    --code 'eDVhiKMq' \
    > test.out 2>&1
eval_tap $? 390 'PublicEnableMyEmailV4' test.out

#- 391 PublicGetMyEnabledFactorsV4
$CLI_EXE \
    --sn iam \
    --op PublicGetMyEnabledFactorsV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 391 'PublicGetMyEnabledFactorsV4' test.out

#- 392 PublicMakeFactorMyDefaultV4
$CLI_EXE \
    --sn iam \
    --op PublicMakeFactorMyDefaultV4 \
    --namespace $AB_NAMESPACE \
    --factor 'hPbuRGcj' \
    > test.out 2>&1
eval_tap $? 392 'PublicMakeFactorMyDefaultV4' test.out

#- 393 PublicGetUserPublicInfoByUserIdV4
$CLI_EXE \
    --sn iam \
    --op PublicGetUserPublicInfoByUserIdV4 \
    --namespace $AB_NAMESPACE \
    --userId 'QkYPpzf0' \
    > test.out 2>&1
eval_tap $? 393 'PublicGetUserPublicInfoByUserIdV4' test.out

#- 394 PublicInviteUserV4
# body param: body
echo '{"additionalData": "dO9rugRh", "emailAddress": "2MG5ggVU", "namespace": "j8cQ90JD", "namespaceDisplayName": "uxSNx43T"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicInviteUserV4 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 394 'PublicInviteUserV4' test.out


# remove artifacts
rm -f "$CLI_TOKEN_FILE"
rm -f "$TEMP_JSON_INPUT"
rm -f "$TEMP_FILE_UPLOAD"

exit $EXIT_CODE