#!/usr/bin/env bash

# Copyright (c) 2021 AccelByte Inc. All Rights Reserved.
# This is licensed software from AccelByte Inc, for limitations
# and restrictions contact your company contract manager.

# This code is generated by tool. DO NOT EDIT.

# Meta:
# - random seed: 
# - template file: 

# Instructions:
# - Run the Justice SDK Mock Server first before running this script.

export AB_BASE_URL="http://127.0.0.1:8080"
export AB_CLIENT_ID="admin"
export AB_CLIENT_SECRET="admin"
export AB_NAMESPACE="test"
export AB_APP_NAME="UnitTest"

EXIT_CODE=0

eval_tap() {
  if [ $1 -eq 0 ]; then
    echo "ok $2 - $3"
  else
    EXIT_CODE=1
    echo "not ok $2 - $3"
    sed 's/^/# /g' $4
  fi
  rm -f $4
}

CLI_EXE="AccelByte.Sdk.Sample.Cli"
CLI_TOKEN_FILE="$(dirname "$(which $CLI_EXE)")/token.json"
TEMP_JSON_INPUT="input_json.json"
TEMP_FILE_UPLOAD="file_upload.bin"

echo "TAP version 13"
echo "1..435"

#- 1 Login
$CLI_EXE --op login --lt user --user user --pass user > test.out 2>&1
eval_tap $? 1 'Login' test.out

if [ $EXIT_CODE -ne 0 ]; then
  echo "Bail out! Login failed."
  exit $EXIT_CODE
fi

# echo "foo" > "$CLI_TOKEN_FILE"

#- 2 GetBansType
eval_tap 0 2 'GetBansType # SKIP deprecated' test.out

#- 3 GetListBanReason
eval_tap 0 3 'GetListBanReason # SKIP deprecated' test.out

#- 4 GetClients
eval_tap 0 4 'GetClients # SKIP deprecated' test.out

#- 5 CreateClient
eval_tap 0 5 'CreateClient # SKIP deprecated' test.out

#- 6 GetClient
eval_tap 0 6 'GetClient # SKIP deprecated' test.out

#- 7 UpdateClient
eval_tap 0 7 'UpdateClient # SKIP deprecated' test.out

#- 8 DeleteClient
eval_tap 0 8 'DeleteClient # SKIP deprecated' test.out

#- 9 UpdateClientPermission
eval_tap 0 9 'UpdateClientPermission # SKIP deprecated' test.out

#- 10 AddClientPermission
eval_tap 0 10 'AddClientPermission # SKIP deprecated' test.out

#- 11 DeleteClientPermission
eval_tap 0 11 'DeleteClientPermission # SKIP deprecated' test.out

#- 12 UpdateClientSecret
eval_tap 0 12 'UpdateClientSecret # SKIP deprecated' test.out

#- 13 GetClientsbyNamespace
eval_tap 0 13 'GetClientsbyNamespace # SKIP deprecated' test.out

#- 14 CreateClientByNamespace
eval_tap 0 14 'CreateClientByNamespace # SKIP deprecated' test.out

#- 15 DeleteClientByNamespace
eval_tap 0 15 'DeleteClientByNamespace # SKIP deprecated' test.out

#- 16 CreateUser
eval_tap 0 16 'CreateUser # SKIP deprecated' test.out

#- 17 GetAdminUsersByRoleID
eval_tap 0 17 'GetAdminUsersByRoleID # SKIP deprecated' test.out

#- 18 GetUserByLoginID
eval_tap 0 18 'GetUserByLoginID # SKIP deprecated' test.out

#- 19 GetUserByPlatformUserID
eval_tap 0 19 'GetUserByPlatformUserID # SKIP deprecated' test.out

#- 20 ForgotPassword
eval_tap 0 20 'ForgotPassword # SKIP deprecated' test.out

#- 21 GetUsersByLoginIds
eval_tap 0 21 'GetUsersByLoginIds # SKIP deprecated' test.out

#- 22 ResetPassword
eval_tap 0 22 'ResetPassword # SKIP deprecated' test.out

#- 23 SearchUser
eval_tap 0 23 'SearchUser # SKIP deprecated' test.out

#- 24 GetUserByUserID
eval_tap 0 24 'GetUserByUserID # SKIP deprecated' test.out

#- 25 UpdateUser
eval_tap 0 25 'UpdateUser # SKIP deprecated' test.out

#- 26 DeleteUser
eval_tap 0 26 'DeleteUser # SKIP deprecated' test.out

#- 27 BanUser
eval_tap 0 27 'BanUser # SKIP deprecated' test.out

#- 28 GetUserBanHistory
eval_tap 0 28 'GetUserBanHistory # SKIP deprecated' test.out

#- 29 DisableUserBan
eval_tap 0 29 'DisableUserBan # SKIP deprecated' test.out

#- 30 EnableUserBan
eval_tap 0 30 'EnableUserBan # SKIP deprecated' test.out

#- 31 ListCrossNamespaceAccountLink
eval_tap 0 31 'ListCrossNamespaceAccountLink # SKIP deprecated' test.out

#- 32 DisableUser
eval_tap 0 32 'DisableUser # SKIP deprecated' test.out

#- 33 EnableUser
eval_tap 0 33 'EnableUser # SKIP deprecated' test.out

#- 34 GetUserInformation
eval_tap 0 34 'GetUserInformation # SKIP deprecated' test.out

#- 35 DeleteUserInformation
eval_tap 0 35 'DeleteUserInformation # SKIP deprecated' test.out

#- 36 GetUserLoginHistories
eval_tap 0 36 'GetUserLoginHistories # SKIP deprecated' test.out

#- 37 UpdatePassword
eval_tap 0 37 'UpdatePassword # SKIP deprecated' test.out

#- 38 SaveUserPermission
eval_tap 0 38 'SaveUserPermission # SKIP deprecated' test.out

#- 39 AddUserPermission
eval_tap 0 39 'AddUserPermission # SKIP deprecated' test.out

#- 40 DeleteUserPermission
eval_tap 0 40 'DeleteUserPermission # SKIP deprecated' test.out

#- 41 GetUserPlatformAccounts
eval_tap 0 41 'GetUserPlatformAccounts # SKIP deprecated' test.out

#- 42 GetUserMapping
eval_tap 0 42 'GetUserMapping # SKIP deprecated' test.out

#- 43 GetUserJusticePlatformAccount
eval_tap 0 43 'GetUserJusticePlatformAccount # SKIP deprecated' test.out

#- 44 PlatformLink
eval_tap 0 44 'PlatformLink # SKIP deprecated' test.out

#- 45 PlatformUnlink
eval_tap 0 45 'PlatformUnlink # SKIP deprecated' test.out

#- 46 GetPublisherUser
eval_tap 0 46 'GetPublisherUser # SKIP deprecated' test.out

#- 47 SaveUserRoles
eval_tap 0 47 'SaveUserRoles # SKIP deprecated' test.out

#- 48 AddUserRole
eval_tap 0 48 'AddUserRole # SKIP deprecated' test.out

#- 49 DeleteUserRole
eval_tap 0 49 'DeleteUserRole # SKIP deprecated' test.out

#- 50 UpgradeHeadlessAccount
eval_tap 0 50 'UpgradeHeadlessAccount # SKIP deprecated' test.out

#- 51 UpgradeHeadlessAccountWithVerificationCode
eval_tap 0 51 'UpgradeHeadlessAccountWithVerificationCode # SKIP deprecated' test.out

#- 52 UserVerification
eval_tap 0 52 'UserVerification # SKIP deprecated' test.out

#- 53 SendVerificationCode
eval_tap 0 53 'SendVerificationCode # SKIP deprecated' test.out

#- 54 Authorization
eval_tap 0 54 'Authorization # SKIP deprecated' test.out

#- 55 GetJWKS
eval_tap 0 55 'GetJWKS # SKIP deprecated' test.out

#- 56 PlatformTokenRequestHandler
eval_tap 0 56 'PlatformTokenRequestHandler # SKIP deprecated' test.out

#- 57 RevokeUser
eval_tap 0 57 'RevokeUser # SKIP deprecated' test.out

#- 58 GetRevocationList
eval_tap 0 58 'GetRevocationList # SKIP deprecated' test.out

#- 59 RevokeToken
eval_tap 0 59 'RevokeToken # SKIP deprecated' test.out

#- 60 RevokeAUser
eval_tap 0 60 'RevokeAUser # SKIP deprecated' test.out

#- 61 TokenGrant
eval_tap 0 61 'TokenGrant # SKIP deprecated' test.out

#- 62 VerifyToken
eval_tap 0 62 'VerifyToken # SKIP deprecated' test.out

#- 63 GetRoles
eval_tap 0 63 'GetRoles # SKIP deprecated' test.out

#- 64 CreateRole
eval_tap 0 64 'CreateRole # SKIP deprecated' test.out

#- 65 GetRole
eval_tap 0 65 'GetRole # SKIP deprecated' test.out

#- 66 UpdateRole
eval_tap 0 66 'UpdateRole # SKIP deprecated' test.out

#- 67 DeleteRole
eval_tap 0 67 'DeleteRole # SKIP deprecated' test.out

#- 68 GetRoleAdminStatus
eval_tap 0 68 'GetRoleAdminStatus # SKIP deprecated' test.out

#- 69 SetRoleAsAdmin
eval_tap 0 69 'SetRoleAsAdmin # SKIP deprecated' test.out

#- 70 RemoveRoleAdmin
eval_tap 0 70 'RemoveRoleAdmin # SKIP deprecated' test.out

#- 71 GetRoleManagers
eval_tap 0 71 'GetRoleManagers # SKIP deprecated' test.out

#- 72 AddRoleManagers
eval_tap 0 72 'AddRoleManagers # SKIP deprecated' test.out

#- 73 RemoveRoleManagers
eval_tap 0 73 'RemoveRoleManagers # SKIP deprecated' test.out

#- 74 GetRoleMembers
eval_tap 0 74 'GetRoleMembers # SKIP deprecated' test.out

#- 75 AddRoleMembers
eval_tap 0 75 'AddRoleMembers # SKIP deprecated' test.out

#- 76 RemoveRoleMembers
eval_tap 0 76 'RemoveRoleMembers # SKIP deprecated' test.out

#- 77 UpdateRolePermissions
eval_tap 0 77 'UpdateRolePermissions # SKIP deprecated' test.out

#- 78 AddRolePermission
eval_tap 0 78 'AddRolePermission # SKIP deprecated' test.out

#- 79 DeleteRolePermission
eval_tap 0 79 'DeleteRolePermission # SKIP deprecated' test.out

#- 80 AdminGetAgeRestrictionStatusV2
eval_tap 0 80 'AdminGetAgeRestrictionStatusV2 # SKIP deprecated' test.out

#- 81 AdminUpdateAgeRestrictionConfigV2
eval_tap 0 81 'AdminUpdateAgeRestrictionConfigV2 # SKIP deprecated' test.out

#- 82 GetListCountryAgeRestriction
eval_tap 0 82 'GetListCountryAgeRestriction # SKIP deprecated' test.out

#- 83 UpdateCountryAgeRestriction
eval_tap 0 83 'UpdateCountryAgeRestriction # SKIP deprecated' test.out

#- 84 AdminSearchUsersV2
eval_tap 0 84 'AdminSearchUsersV2 # SKIP deprecated' test.out

#- 85 AdminGetUserByUserIdV2
eval_tap 0 85 'AdminGetUserByUserIdV2 # SKIP deprecated' test.out

#- 86 AdminUpdateUserV2
eval_tap 0 86 'AdminUpdateUserV2 # SKIP deprecated' test.out

#- 87 AdminBanUserV2
eval_tap 0 87 'AdminBanUserV2 # SKIP deprecated' test.out

#- 88 AdminGetUserBanV2
eval_tap 0 88 'AdminGetUserBanV2 # SKIP deprecated' test.out

#- 89 AdminDisableUserV2
eval_tap 0 89 'AdminDisableUserV2 # SKIP deprecated' test.out

#- 90 AdminEnableUserV2
eval_tap 0 90 'AdminEnableUserV2 # SKIP deprecated' test.out

#- 91 AdminResetPasswordV2
eval_tap 0 91 'AdminResetPasswordV2 # SKIP deprecated' test.out

#- 92 AdminDeletePlatformLinkV2
eval_tap 0 92 'AdminDeletePlatformLinkV2 # SKIP deprecated' test.out

#- 93 AdminPutUserRolesV2
eval_tap 0 93 'AdminPutUserRolesV2 # SKIP deprecated' test.out

#- 94 AdminCreateUserRolesV2
eval_tap 0 94 'AdminCreateUserRolesV2 # SKIP deprecated' test.out

#- 95 PublicGetCountryAgeRestriction
eval_tap 0 95 'PublicGetCountryAgeRestriction # SKIP deprecated' test.out

#- 96 PublicCreateUserV2
eval_tap 0 96 'PublicCreateUserV2 # SKIP deprecated' test.out

#- 97 PublicForgotPasswordV2
eval_tap 0 97 'PublicForgotPasswordV2 # SKIP deprecated' test.out

#- 98 PublicResetPasswordV2
eval_tap 0 98 'PublicResetPasswordV2 # SKIP deprecated' test.out

#- 99 PublicGetUserByUserIDV2
eval_tap 0 99 'PublicGetUserByUserIDV2 # SKIP deprecated' test.out

#- 100 PublicUpdateUserV2
eval_tap 0 100 'PublicUpdateUserV2 # SKIP deprecated' test.out

#- 101 PublicGetUserBan
eval_tap 0 101 'PublicGetUserBan # SKIP deprecated' test.out

#- 102 PublicUpdatePasswordV2
eval_tap 0 102 'PublicUpdatePasswordV2 # SKIP deprecated' test.out

#- 103 GetListJusticePlatformAccounts
eval_tap 0 103 'GetListJusticePlatformAccounts # SKIP deprecated' test.out

#- 104 PublicPlatformLinkV2
eval_tap 0 104 'PublicPlatformLinkV2 # SKIP deprecated' test.out

#- 105 PublicDeletePlatformLinkV2
eval_tap 0 105 'PublicDeletePlatformLinkV2 # SKIP deprecated' test.out

#- 106 AdminGetBansTypeV3
$CLI_EXE \
    --sn iam \
    --op AdminGetBansTypeV3 \
    > test.out 2>&1
eval_tap $? 106 'AdminGetBansTypeV3' test.out

#- 107 AdminGetListBanReasonV3
$CLI_EXE \
    --sn iam \
    --op AdminGetListBanReasonV3 \
    > test.out 2>&1
eval_tap $? 107 'AdminGetListBanReasonV3' test.out

#- 108 AdminListClientAvailablePermissions
$CLI_EXE \
    --sn iam \
    --op AdminListClientAvailablePermissions \
    --excludePermissions 'true' \
    > test.out 2>&1
eval_tap $? 108 'AdminListClientAvailablePermissions' test.out

#- 109 AdminUpdateAvailablePermissionsByModule
# body param: body
echo '{"modules": [{"docLink": "smrROwJO", "groups": [{"group": "LUrmWtAN", "groupId": "WD0iwlXP", "permissions": [{"allowedActions": [93, 1, 55], "resource": "6DSMD9fT"}, {"allowedActions": [72, 40, 53], "resource": "vQbh04MP"}, {"allowedActions": [28, 72, 50], "resource": "XalGTyI3"}]}, {"group": "jbUYDIBU", "groupId": "4QbCqSD3", "permissions": [{"allowedActions": [64, 25, 41], "resource": "5XJxcfSf"}, {"allowedActions": [70, 61, 1], "resource": "0zYPjRz3"}, {"allowedActions": [37, 17, 44], "resource": "1lxOxRpB"}]}, {"group": "RaIzLGQ3", "groupId": "x3ucd8yn", "permissions": [{"allowedActions": [86, 15, 84], "resource": "2VLghZg8"}, {"allowedActions": [81, 30, 74], "resource": "LD4600rP"}, {"allowedActions": [56, 29, 3], "resource": "XhZe4RxS"}]}], "module": "PkonFjCU", "moduleId": "N7L5CQuc"}, {"docLink": "LNGNPMz7", "groups": [{"group": "Zwkp0SfI", "groupId": "dENgGijB", "permissions": [{"allowedActions": [75, 94, 69], "resource": "TrhmPFqk"}, {"allowedActions": [98, 43, 13], "resource": "CCGUgtvh"}, {"allowedActions": [95, 48, 15], "resource": "w176AHZP"}]}, {"group": "WnDIPHtT", "groupId": "a4jvphqh", "permissions": [{"allowedActions": [84, 58, 43], "resource": "zkEKt7D1"}, {"allowedActions": [13, 56, 98], "resource": "Ga9kIdrq"}, {"allowedActions": [14, 72, 77], "resource": "aoojYWDp"}]}, {"group": "nviMQkJT", "groupId": "VFj1DIUO", "permissions": [{"allowedActions": [32, 67, 37], "resource": "3MtS8XDM"}, {"allowedActions": [54, 43, 0], "resource": "lTqiKbEl"}, {"allowedActions": [39, 65, 2], "resource": "o5NKuL1k"}]}], "module": "06tIrCHJ", "moduleId": "zNN2WmKi"}, {"docLink": "NVOqcbtO", "groups": [{"group": "Q2mKwUGo", "groupId": "58TuyMkx", "permissions": [{"allowedActions": [46, 35, 45], "resource": "6YM4jFsq"}, {"allowedActions": [36, 51, 88], "resource": "vklMEU4H"}, {"allowedActions": [82, 65, 24], "resource": "aTPFB29a"}]}, {"group": "B9oRL9p5", "groupId": "jmeX8m0K", "permissions": [{"allowedActions": [21, 19, 84], "resource": "SxNmYjR1"}, {"allowedActions": [78, 88, 61], "resource": "ogDH5yJX"}, {"allowedActions": [4, 76, 74], "resource": "Io8N07dy"}]}, {"group": "DmsNj6K5", "groupId": "omD3rVNb", "permissions": [{"allowedActions": [58, 36, 91], "resource": "qXiDFsvb"}, {"allowedActions": [47, 59, 34], "resource": "jPTVDBEO"}, {"allowedActions": [59, 9, 57], "resource": "dmWVQviw"}]}], "module": "nYKBGM7J", "moduleId": "5NoMjORK"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateAvailablePermissionsByModule \
    --forceDelete 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 109 'AdminUpdateAvailablePermissionsByModule' test.out

#- 110 AdminDeleteConfigPermissionsByGroup
# body param: body
echo '{"groupId": "LKY5SsvB", "moduleId": "FZtGCC5q"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDeleteConfigPermissionsByGroup \
    --forceDelete 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 110 'AdminDeleteConfigPermissionsByGroup' test.out

#- 111 AdminListClientTemplates
$CLI_EXE \
    --sn iam \
    --op AdminListClientTemplates \
    > test.out 2>&1
eval_tap $? 111 'AdminListClientTemplates' test.out

#- 112 AdminGetInputValidations
$CLI_EXE \
    --sn iam \
    --op AdminGetInputValidations \
    > test.out 2>&1
eval_tap $? 112 'AdminGetInputValidations' test.out

#- 113 AdminUpdateInputValidations
# body param: body
echo '[{"field": "vUZcPeQ9", "validation": {"allowAllSpecialCharacters": false, "allowDigit": true, "allowLetter": true, "allowSpace": false, "allowUnicode": true, "avatarConfig": {"allowedPrefixes": ["GkQvn2P6", "373O9rB6", "GEDQxWLi"], "preferRegex": false, "regex": "Af7LfKxq"}, "blockedWord": ["RqkSdVHh", "noxeiFZ8", "EfG5bBXM"], "description": [{"language": "HkiQTzSG", "message": ["f7KlhpZu", "lmnBkyKK", "lKhvip4W"]}, {"language": "toBynALo", "message": ["AImjg31y", "iTraVDcG", "N8cH4zla"]}, {"language": "yjDEyTQS", "message": ["BVzjMOSN", "VaTezf3Y", "vRirX9AI"]}], "isCustomRegex": false, "letterCase": "P5zYG31F", "maxLength": 99, "maxRepeatingAlphaNum": 96, "maxRepeatingSpecialCharacter": 0, "minCharType": 51, "minLength": 5, "profanityFilter": "tN4PDTz5", "regex": "otDRRGdx", "specialCharacterLocation": "64S7H4QW", "specialCharacters": ["75J7RAVs", "oIm3b7lI", "jbNpJCOM"]}}, {"field": "ycKoYhCG", "validation": {"allowAllSpecialCharacters": false, "allowDigit": false, "allowLetter": true, "allowSpace": true, "allowUnicode": false, "avatarConfig": {"allowedPrefixes": ["jWhiZq7a", "MCru7RYW", "5U5ImALf"], "preferRegex": false, "regex": "C0oIzwoA"}, "blockedWord": ["sCNuoP9G", "wgw8k2rf", "VykuFADQ"], "description": [{"language": "otvnpz1A", "message": ["Vkp2nSai", "m7W7WM8m", "ribbD2r9"]}, {"language": "wxFtx6sm", "message": ["JDD3zJfM", "DcIxZB5m", "m9cvLDms"]}, {"language": "auwk7XtS", "message": ["ro7F4zUk", "J7IC8P4J", "nB3410qn"]}], "isCustomRegex": true, "letterCase": "jaa94xdf", "maxLength": 20, "maxRepeatingAlphaNum": 81, "maxRepeatingSpecialCharacter": 12, "minCharType": 26, "minLength": 54, "profanityFilter": "osrAp6Nt", "regex": "QxtNHWkg", "specialCharacterLocation": "ORCygShb", "specialCharacters": ["JcXuHgTr", "KhGGGfb4", "8ERVSCjc"]}}, {"field": "h0V8qh3W", "validation": {"allowAllSpecialCharacters": false, "allowDigit": false, "allowLetter": true, "allowSpace": true, "allowUnicode": true, "avatarConfig": {"allowedPrefixes": ["XYMozYuy", "JeeoZtij", "Owf0usYT"], "preferRegex": true, "regex": "E7ux9DBH"}, "blockedWord": ["O2kDhLWI", "xQzV8QjT", "rOhs73BX"], "description": [{"language": "31UTGijO", "message": ["IqDeAsHb", "xnDpC6Fn", "OJMpaXAS"]}, {"language": "jYD0XCFt", "message": ["HfPQpov6", "ZC491Da5", "WIL8KeDO"]}, {"language": "IvLvYhGt", "message": ["tzIxhr8k", "L1Qvwjxn", "OJAyqpQ1"]}], "isCustomRegex": true, "letterCase": "o0eo04DB", "maxLength": 3, "maxRepeatingAlphaNum": 18, "maxRepeatingSpecialCharacter": 93, "minCharType": 82, "minLength": 14, "profanityFilter": "L28EPXJN", "regex": "N5cNSdFr", "specialCharacterLocation": "YL0wkndT", "specialCharacters": ["qZBBwJmk", "WFwfXK56", "J1YVEnnU"]}}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateInputValidations \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 113 'AdminUpdateInputValidations' test.out

#- 114 AdminResetInputValidations
$CLI_EXE \
    --sn iam \
    --op AdminResetInputValidations \
    --field '5PlNVu5M' \
    > test.out 2>&1
eval_tap $? 114 'AdminResetInputValidations' test.out

#- 115 ListAdminsV3
$CLI_EXE \
    --sn iam \
    --op ListAdminsV3 \
    --namespace $AB_NAMESPACE \
    --after '5zIuN6T6' \
    --before 'fdo2xjIl' \
    --endDate 'uTiFYhRh' \
    --limit '13' \
    --query '3f23du4b' \
    --roleId 'IbiMl8hf' \
    --startDate '495G5Nl6' \
    > test.out 2>&1
eval_tap $? 115 'ListAdminsV3' test.out

#- 116 AdminGetAgeRestrictionStatusV3
$CLI_EXE \
    --sn iam \
    --op AdminGetAgeRestrictionStatusV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 116 'AdminGetAgeRestrictionStatusV3' test.out

#- 117 AdminUpdateAgeRestrictionConfigV3
# body param: body
echo '{"ageRestriction": 67, "enable": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateAgeRestrictionConfigV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 117 'AdminUpdateAgeRestrictionConfigV3' test.out

#- 118 AdminGetListCountryAgeRestrictionV3
$CLI_EXE \
    --sn iam \
    --op AdminGetListCountryAgeRestrictionV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 118 'AdminGetListCountryAgeRestrictionV3' test.out

#- 119 AdminUpdateCountryAgeRestrictionV3
# body param: body
echo '{"ageRestriction": 24}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateCountryAgeRestrictionV3 \
    --countryCode 'SIwIEPEX' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 119 'AdminUpdateCountryAgeRestrictionV3' test.out

#- 120 AdminGetBannedUsersV3
$CLI_EXE \
    --sn iam \
    --op AdminGetBannedUsersV3 \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --banType '4YpnIjhQ' \
    --limit '75' \
    --offset '94' \
    > test.out 2>&1
eval_tap $? 120 'AdminGetBannedUsersV3' test.out

#- 121 AdminBanUserBulkV3
# body param: body
echo '{"ban": "P9wra2Bx", "comment": "fHIKPK29", "endDate": "yWwKznqY", "reason": "zJy3QKsG", "skipNotif": false, "userIds": ["IHQccbUB", "f7jy3kmB", "AsfalaRa"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBanUserBulkV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 121 'AdminBanUserBulkV3' test.out

#- 122 AdminUnbanUserBulkV3
# body param: body
echo '{"bans": [{"banId": "SjAPNoxE", "userId": "1OPVRruq"}, {"banId": "imvbyNNL", "userId": "B67kkghk"}, {"banId": "A0wru96L", "userId": "grreyvO5"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUnbanUserBulkV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 122 'AdminUnbanUserBulkV3' test.out

#- 123 AdminGetBansTypeWithNamespaceV3
$CLI_EXE \
    --sn iam \
    --op AdminGetBansTypeWithNamespaceV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 123 'AdminGetBansTypeWithNamespaceV3' test.out

#- 124 AdminGetClientsByNamespaceV3
$CLI_EXE \
    --sn iam \
    --op AdminGetClientsByNamespaceV3 \
    --namespace $AB_NAMESPACE \
    --clientId 'tyVCHBdu' \
    --clientName 'oooquYiN' \
    --clientType 'EdMSJPxK' \
    --limit '82' \
    --offset '30' \
    --skipLoginQueue 'true' \
    > test.out 2>&1
eval_tap $? 124 'AdminGetClientsByNamespaceV3' test.out

#- 125 AdminBulkUpdateClientsV3
# body param: body
echo '{"clientIds": ["6Vb3kHLl", "YlEaZglA", "g7Ugh3o8"], "clientUpdateRequest": {"audiences": ["wELNt8rx", "ezTLbIDp", "KdtBl0lJ"], "baseUri": "NpK9Mfmv", "clientName": "dmD92ViD", "clientPermissions": [{"action": 60, "resource": "y4SfXjJ7", "schedAction": 40, "schedCron": "M5nLkt9L", "schedRange": ["HAmpt7Ea", "L5OSVj8h", "kFrqx6Ae"]}, {"action": 90, "resource": "B3asV3Jg", "schedAction": 56, "schedCron": "knDS97zi", "schedRange": ["rfFWkl1j", "eptMwLgt", "PLPnFYJz"]}, {"action": 57, "resource": "5bklOzzt", "schedAction": 89, "schedCron": "gWHCLiCD", "schedRange": ["ePIrlgw1", "nEs7SWve", "sye1uaeL"]}], "clientPlatform": "jr2e0xdO", "deletable": false, "description": "2iLOpbhy", "modulePermissions": [{"moduleId": "J6JVOSYx", "selectedGroups": [{"groupId": "trmdKlKQ", "selectedActions": [48, 96, 75]}, {"groupId": "ZZL27D0B", "selectedActions": [82, 60, 41]}, {"groupId": "kT5JrahV", "selectedActions": [2, 65, 99]}]}, {"moduleId": "atx8Jnlq", "selectedGroups": [{"groupId": "EdIdtnOS", "selectedActions": [9, 39, 95]}, {"groupId": "9l0PyCyZ", "selectedActions": [79, 79, 34]}, {"groupId": "g4zgSKeo", "selectedActions": [7, 21, 65]}]}, {"moduleId": "9Jk7i0bh", "selectedGroups": [{"groupId": "zHt2V4OV", "selectedActions": [23, 2, 88]}, {"groupId": "hqhV8mOx", "selectedActions": [77, 51, 20]}, {"groupId": "TJS2ZVXA", "selectedActions": [44, 5, 29]}]}], "namespace": "0m9sWKaW", "oauthAccessTokenExpiration": 94, "oauthAccessTokenExpirationTimeUnit": "2rxssxxt", "oauthRefreshTokenExpiration": 60, "oauthRefreshTokenExpirationTimeUnit": "mbNOURMk", "redirectUri": "U5LMAfuL", "scopes": ["JMcc31co", "ItgR5TAQ", "cBTPxayX"], "skipLoginQueue": false, "twoFactorEnabled": true}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBulkUpdateClientsV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 125 'AdminBulkUpdateClientsV3' test.out

#- 126 AdminCreateClientV3
# body param: body
echo '{"audiences": ["oPa3ja1m", "rMm7jrK0", "AxpSrzes"], "baseUri": "tG8mUige", "clientId": "nRnnDg9q", "clientName": "4Kg3sh4X", "clientPermissions": [{"action": 97, "resource": "bk9N3kwe", "schedAction": 99, "schedCron": "LIVNIUM7", "schedRange": ["fkxShqmb", "M73LM6YV", "4p4X3U0t"]}, {"action": 17, "resource": "vjOMmJ4w", "schedAction": 68, "schedCron": "Ctme9x4F", "schedRange": ["LG2wJeV9", "rTTG9qg5", "4mHY8m2F"]}, {"action": 31, "resource": "vRKlUhm8", "schedAction": 27, "schedCron": "OfHUejl9", "schedRange": ["mxvOzJSx", "XoonwvM3", "4RUonej4"]}], "clientPlatform": "gHCzT6nB", "deletable": true, "description": "yTtS0kSo", "modulePermissions": [{"moduleId": "eo08QvJn", "selectedGroups": [{"groupId": "7IBiRVFN", "selectedActions": [66, 69, 8]}, {"groupId": "ziR5HXoT", "selectedActions": [53, 94, 54]}, {"groupId": "jQoXGv8a", "selectedActions": [7, 0, 98]}]}, {"moduleId": "kZ2cgM88", "selectedGroups": [{"groupId": "Fc64YriB", "selectedActions": [31, 74, 66]}, {"groupId": "In15NmZq", "selectedActions": [70, 34, 48]}, {"groupId": "O99wq1v9", "selectedActions": [28, 10, 10]}]}, {"moduleId": "ouFF02qs", "selectedGroups": [{"groupId": "YhtlDRTE", "selectedActions": [87, 9, 61]}, {"groupId": "1ftr3MBH", "selectedActions": [25, 48, 8]}, {"groupId": "pCabJleq", "selectedActions": [42, 30, 18]}]}], "namespace": "AXJ7K6gI", "oauthAccessTokenExpiration": 49, "oauthAccessTokenExpirationTimeUnit": "SUJcS0Nv", "oauthClientType": "puwQKCJJ", "oauthRefreshTokenExpiration": 97, "oauthRefreshTokenExpirationTimeUnit": "jLN9IMlO", "parentNamespace": "1m0GwpUk", "redirectUri": "AqvoVGRD", "scopes": ["HjNm3Vzm", "7xLaH20Y", "CMmPyvPO"], "secret": "bi6qJ8N0", "skipLoginQueue": true, "twoFactorEnabled": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminCreateClientV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 126 'AdminCreateClientV3' test.out

#- 127 AdminGetClientsbyNamespacebyIDV3
$CLI_EXE \
    --sn iam \
    --op AdminGetClientsbyNamespacebyIDV3 \
    --clientId 'YrxEZr4c' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 127 'AdminGetClientsbyNamespacebyIDV3' test.out

#- 128 AdminDeleteClientV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteClientV3 \
    --clientId '4G6mRsW2' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 128 'AdminDeleteClientV3' test.out

#- 129 AdminUpdateClientV3
# body param: body
echo '{"audiences": ["YUYVMGK8", "n8tKJxhJ", "lOyDVn4x"], "baseUri": "BoZRNO1M", "clientName": "3vXo0OhJ", "clientPermissions": [{"action": 38, "resource": "DamayjME", "schedAction": 37, "schedCron": "msyiFBcM", "schedRange": ["Zs02f1cG", "10Gd68fF", "Xa9bdnzl"]}, {"action": 62, "resource": "LSGfH27z", "schedAction": 50, "schedCron": "9T3NOZsu", "schedRange": ["VSEkcgYJ", "mgAPL3mo", "TtbbLa4P"]}, {"action": 61, "resource": "iFrpSNGh", "schedAction": 99, "schedCron": "t4d7xxZK", "schedRange": ["i7YQxrgS", "P3hSIlpe", "QanvgC4p"]}], "clientPlatform": "M0gXFVM5", "deletable": false, "description": "tMLDjVeG", "modulePermissions": [{"moduleId": "VDHBfrBJ", "selectedGroups": [{"groupId": "uu4uqwuR", "selectedActions": [9, 20, 100]}, {"groupId": "GdJMGu4O", "selectedActions": [66, 100, 67]}, {"groupId": "phTSBHOi", "selectedActions": [73, 73, 43]}]}, {"moduleId": "IzsDvSv1", "selectedGroups": [{"groupId": "NvroTAMu", "selectedActions": [92, 83, 71]}, {"groupId": "vmbcokg5", "selectedActions": [20, 56, 89]}, {"groupId": "LY5cn1xT", "selectedActions": [55, 74, 68]}]}, {"moduleId": "YuBM7Bw2", "selectedGroups": [{"groupId": "IMZqr75W", "selectedActions": [49, 19, 64]}, {"groupId": "CYSnKiAO", "selectedActions": [25, 23, 13]}, {"groupId": "ogV5FzrE", "selectedActions": [9, 52, 60]}]}], "namespace": "M9XmgxY9", "oauthAccessTokenExpiration": 85, "oauthAccessTokenExpirationTimeUnit": "HPQwQudJ", "oauthRefreshTokenExpiration": 41, "oauthRefreshTokenExpirationTimeUnit": "XVP18KzD", "redirectUri": "2AY6j4WV", "scopes": ["4buFliH2", "lZldmdXf", "yjPYSgvk"], "skipLoginQueue": true, "twoFactorEnabled": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateClientV3 \
    --clientId 'Exmn7RYu' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 129 'AdminUpdateClientV3' test.out

#- 130 AdminUpdateClientPermissionV3
# body param: body
echo '{"permissions": [{"action": 57, "resource": "ygLVrauH"}, {"action": 57, "resource": "ispFb2KR"}, {"action": 80, "resource": "gFbxixMP"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateClientPermissionV3 \
    --clientId 'KZ5nKHPS' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 130 'AdminUpdateClientPermissionV3' test.out

#- 131 AdminAddClientPermissionsV3
# body param: body
echo '{"permissions": [{"action": 90, "resource": "wmHBms1R"}, {"action": 30, "resource": "BYNKWRUQ"}, {"action": 4, "resource": "FiXFsxdo"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddClientPermissionsV3 \
    --clientId '7eWD7m8U' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 131 'AdminAddClientPermissionsV3' test.out

#- 132 AdminDeleteClientPermissionV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteClientPermissionV3 \
    --action '45' \
    --clientId 'N1eDpVCu' \
    --namespace $AB_NAMESPACE \
    --resource 'H9m21HTm' \
    > test.out 2>&1
eval_tap $? 132 'AdminDeleteClientPermissionV3' test.out

#- 133 AdminGetConfigValueV3
$CLI_EXE \
    --sn iam \
    --op AdminGetConfigValueV3 \
    --configKey 'lDQgUJgr' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 133 'AdminGetConfigValueV3' test.out

#- 134 AdminGetCountryListV3
$CLI_EXE \
    --sn iam \
    --op AdminGetCountryListV3 \
    --namespace $AB_NAMESPACE \
    --filterBlacklist 'false' \
    > test.out 2>&1
eval_tap $? 134 'AdminGetCountryListV3' test.out

#- 135 AdminGetCountryBlacklistV3
$CLI_EXE \
    --sn iam \
    --op AdminGetCountryBlacklistV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 135 'AdminGetCountryBlacklistV3' test.out

#- 136 AdminAddCountryBlacklistV3
# body param: body
echo '{"blacklist": ["FgSFJanN", "dNNHtJdk", "0e1D1oil"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddCountryBlacklistV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 136 'AdminAddCountryBlacklistV3' test.out

#- 137 AdminGetLoginAllowlistV3
$CLI_EXE \
    --sn iam \
    --op AdminGetLoginAllowlistV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 137 'AdminGetLoginAllowlistV3' test.out

#- 138 AdminUpdateLoginAllowlistV3
# body param: body
echo '{"active": false, "roleIds": ["IRBBWYbk", "rq4BaSkN", "5G0v5vvZ"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateLoginAllowlistV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 138 'AdminUpdateLoginAllowlistV3' test.out

#- 139 RetrieveAllThirdPartyLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op RetrieveAllThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 139 'RetrieveAllThirdPartyLoginPlatformCredentialV3' test.out

#- 140 RetrieveAllActiveThirdPartyLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op RetrieveAllActiveThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 140 'RetrieveAllActiveThirdPartyLoginPlatformCredentialV3' test.out

#- 141 RetrieveAllSSOLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op RetrieveAllSSOLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --limit '29' \
    --offset '59' \
    > test.out 2>&1
eval_tap $? 141 'RetrieveAllSSOLoginPlatformCredentialV3' test.out

#- 142 RetrieveThirdPartyLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op RetrieveThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --platformId '4A0xxa2A' \
    > test.out 2>&1
eval_tap $? 142 'RetrieveThirdPartyLoginPlatformCredentialV3' test.out

#- 143 AddThirdPartyLoginPlatformCredentialV3
# body param: body
echo '{"ACSURL": "c6AtuNUy", "AWSCognitoRegion": "UlInFH5a", "AWSCognitoUserPool": "0NauJGwJ", "AllowedClients": ["YOsxCT9C", "6XtXiKjh", "kABXiE7C"], "AppId": "Za4jsR7r", "AuthorizationEndpoint": "dYZNZcEb", "ClientId": "pBNpZjw8", "EmptyStrFieldList": ["A06NDB7D", "CvJdGFnL", "tn0UVNrL"], "EnableServerLicenseValidation": true, "Environment": "OOrvw0Rt", "FederationMetadataURL": "w6PNy1AE", "GenericOauthFlow": true, "IncludePUID": false, "IsActive": true, "Issuer": "wkLY7wE6", "JWKSEndpoint": "iEokxKjy", "KeyID": "TdNROMEp", "LogoURL": "4TgNiuZd", "NetflixCertificates": {"encryptedPrivateKey": "3a4hKkwf", "encryptedPrivateKeyName": "zfLOlQHQ", "publicCertificate": "Ld64KbWw", "publicCertificateName": "5MknQOnj", "rootCertificate": "jBVQMszj", "rootCertificateName": "cW7Bhspk"}, "OrganizationId": "njcr2N38", "PlatformName": "GPKeTKrA", "PrivateKey": "NsYjNy5K", "RedirectUri": "togIPY1h", "RegisteredDomains": [{"affectedClientIDs": ["101QuyVQ", "DEy6l1qP", "pRIUVDvG"], "domain": "3Ia438vf", "namespaces": ["yutmw5jO", "h419Vs3M", "P30SLU51"], "roleId": "apCHL5AP", "ssoCfg": {"googleKey": {"pudwXkmy": {}, "hwoYJkZz": {}, "6E5votP3": {}}, "groupConfigs": [{"assignNamespaces": ["4F3Ju7iS", "DnFtqBYJ", "1DWYkBDP"], "group": "5Sc5HbyN", "roleId": "p87JOJIM"}, {"assignNamespaces": ["1FjIzoGe", "RqtfLmGi", "Rhx4kQM9"], "group": "lUs0Or8r", "roleId": "Xxr2RmDF"}, {"assignNamespaces": ["UWondbg5", "L5Y4CvTo", "gC6Xzc0n"], "group": "XZ8XZszc", "roleId": "w05meuYr"}]}}, {"affectedClientIDs": ["9Y2o5r4W", "KSzLjVS0", "aaaodIfN"], "domain": "sUGkDJMk", "namespaces": ["ippdGMRO", "xkpStkcE", "3Uao56Be"], "roleId": "ouhcjraa", "ssoCfg": {"googleKey": {"13o8iCqN": {}, "E6FIYHv6": {}, "rTMAo7fV": {}}, "groupConfigs": [{"assignNamespaces": ["XJzT5wZu", "yF8saVeQ", "9qp0girQ"], "group": "be8HLw9m", "roleId": "DI89s194"}, {"assignNamespaces": ["9Lpwxrl3", "t7fIZqSn", "HUgrrRsa"], "group": "IPyKFNqf", "roleId": "Uv4OLNEx"}, {"assignNamespaces": ["kXEk6OUX", "BFt0rxZs", "4z7P7tqB"], "group": "DW0OsdUf", "roleId": "307BD9LT"}]}}, {"affectedClientIDs": ["to7oeTsG", "qih8vH3n", "IUm2GZjE"], "domain": "Eh351AUF", "namespaces": ["7g3kWr46", "jkCWnF29", "j9WI5gya"], "roleId": "S7pui4V6", "ssoCfg": {"googleKey": {"HWPnOG7f": {}, "RH2byLaS": {}, "KQed22LT": {}}, "groupConfigs": [{"assignNamespaces": ["bFtXMgDU", "QsO8vULn", "9ei3F1lE"], "group": "AwSWKH3z", "roleId": "Msu444iH"}, {"assignNamespaces": ["eJFWFMXF", "r7FJbk5E", "hPqngYwH"], "group": "rBF6c3iu", "roleId": "ZNpZUETC"}, {"assignNamespaces": ["OxsppmFT", "Dl3o5SZW", "IWpX6y9G"], "group": "kzcxe2l1", "roleId": "WJAkQZqw"}]}}], "RelyingParty": "vUXD0tQf", "SandboxId": "H7yMgYdq", "Secret": "FoGxlGVp", "TeamID": "9aMsnh1h", "TokenAuthenticationType": "AH2rCByj", "TokenClaimsMapping": {"oQjU2W26": "aQF52Tjv", "AcujxN74": "aPuCdYKf", "48KVYWQG": "NM70hiP1"}, "TokenEndpoint": "bHPwu4q8", "UserInfoEndpoint": "05KXWxFj", "UserInfoHTTPMethod": "BoMexUYm", "googleAdminConsoleKey": "Ag5M7zCE", "scopes": ["fOoaUH9x", "z6sOnSeU", "kJ9cM1Ap"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AddThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'Hny562yq' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 143 'AddThirdPartyLoginPlatformCredentialV3' test.out

#- 144 DeleteThirdPartyLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op DeleteThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'WdjMOLFu' \
    > test.out 2>&1
eval_tap $? 144 'DeleteThirdPartyLoginPlatformCredentialV3' test.out

#- 145 UpdateThirdPartyLoginPlatformCredentialV3
# body param: body
echo '{"ACSURL": "hVcHCaLm", "AWSCognitoRegion": "qeZbpVZ2", "AWSCognitoUserPool": "QE385uZZ", "AllowedClients": ["s7fdcsvF", "KN0NPyOB", "NcTtFQfw"], "AppId": "LIUplycU", "AuthorizationEndpoint": "vE9Niayz", "ClientId": "M6G3Rjj4", "EmptyStrFieldList": ["AB6OTm5i", "HqjU6ql4", "PbnxgUCO"], "EnableServerLicenseValidation": true, "Environment": "9ab6JbKk", "FederationMetadataURL": "f6EpEdR7", "GenericOauthFlow": false, "IncludePUID": true, "IsActive": false, "Issuer": "pEO7Ythw", "JWKSEndpoint": "VZcE62In", "KeyID": "NVqcJtIS", "LogoURL": "2LSndap8", "NetflixCertificates": {"encryptedPrivateKey": "Pryp6SGb", "encryptedPrivateKeyName": "l9BMx9W4", "publicCertificate": "9RXTeK9O", "publicCertificateName": "Y590VUml", "rootCertificate": "1QIvd91Y", "rootCertificateName": "dOTOjCwE"}, "OrganizationId": "cJ4poWTU", "PlatformName": "eFJ8zzYw", "PrivateKey": "wpZHBy7r", "RedirectUri": "uKDaqAHp", "RegisteredDomains": [{"affectedClientIDs": ["3fBct0R1", "jQyWXpzs", "YhNg1NJN"], "domain": "7kdrxaeT", "namespaces": ["o7dwukuS", "QIKwAl65", "v0uUcNg8"], "roleId": "jQnNvYoZ", "ssoCfg": {"googleKey": {"zCjdJNQk": {}, "Epbll8Lv": {}, "oneeCmPm": {}}, "groupConfigs": [{"assignNamespaces": ["TOZV1ig9", "t0rThvf4", "rOukvX6D"], "group": "mAq2rX5g", "roleId": "QYhf7YTi"}, {"assignNamespaces": ["PTAIkxRF", "hsmsBHEg", "FtIAM5OH"], "group": "07LNzFJx", "roleId": "iVU8wZtl"}, {"assignNamespaces": ["RriKl5k4", "AyGb2v91", "oAdZwtap"], "group": "P8f5MqXM", "roleId": "6iUdvqRy"}]}}, {"affectedClientIDs": ["bWS4hu7E", "atHezYGt", "XZtoEUhm"], "domain": "aShHMbkc", "namespaces": ["e5I34WHQ", "i7hyovXO", "nusUyV18"], "roleId": "WOJcCFnS", "ssoCfg": {"googleKey": {"dvQhwyTZ": {}, "n2s8VyWn": {}, "5PdRGhIN": {}}, "groupConfigs": [{"assignNamespaces": ["67DbkR5V", "E4ul4FtK", "gwwloekd"], "group": "NQgLkOlj", "roleId": "51w8RYiS"}, {"assignNamespaces": ["DRaDdiDy", "2LoOEAYS", "tOAc4aid"], "group": "wMVK1sZ0", "roleId": "t3lPXvIv"}, {"assignNamespaces": ["9WYVPwjT", "5U9dfkDE", "CLIRaOy3"], "group": "UqnoW7Qj", "roleId": "Q4Jz4NHi"}]}}, {"affectedClientIDs": ["EhMqphqN", "hPmkvXNM", "DLlFqQm3"], "domain": "4jDziLBn", "namespaces": ["AOWM8cvc", "qFaF9Hwd", "1R5dueFX"], "roleId": "iX25IT2V", "ssoCfg": {"googleKey": {"lXY4lTp2": {}, "h2gMkogZ": {}, "zDXxvtKD": {}}, "groupConfigs": [{"assignNamespaces": ["6S2lyvCH", "narisbzt", "XZFfzkNO"], "group": "fftiGih7", "roleId": "cUwN8JOp"}, {"assignNamespaces": ["hb8wBENu", "5rrdYOWF", "FwaOilN8"], "group": "Yb3CStsa", "roleId": "IH1Vkxtx"}, {"assignNamespaces": ["jfHEGhVV", "riQEsm0R", "QWzKn8K9"], "group": "dPUvbMj5", "roleId": "SA0cL1nx"}]}}], "RelyingParty": "56UC4L4K", "SandboxId": "3L2ZiwRY", "Secret": "tBGMXBix", "TeamID": "ZePnpCoV", "TokenAuthenticationType": "LQWaZqAC", "TokenClaimsMapping": {"2gdf8Lk5": "OYd199qK", "wzP3bpoT": "QcnBb78G", "FXojy3zz": "IoCH7DZr"}, "TokenEndpoint": "GDsUv82f", "UserInfoEndpoint": "p7BxUPBR", "UserInfoHTTPMethod": "I8v4E89T", "googleAdminConsoleKey": "sx9W5HFG", "scopes": ["bZhjWfC1", "2hH4dNdY", "zGVYma7j"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op UpdateThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'F5EhhcEu' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 145 'UpdateThirdPartyLoginPlatformCredentialV3' test.out

#- 146 UpdateThirdPartyLoginPlatformDomainV3
# body param: body
echo '{"affectedClientIDs": ["bDFVt4nH", "iJFiLOrH", "VsbFgRuT"], "assignedNamespaces": ["wmzJDLEK", "0U4HwsSX", "cERaHHJ9"], "domain": "GCRMdUum", "roleId": "o8zX8GDS", "ssoCfg": {"googleKey": {"tbpQZF8b": {}, "JJ5vsjpR": {}, "IemAaPC6": {}}, "groupConfigs": [{"assignNamespaces": ["HQuQl2pd", "7oMHVfi5", "kUk93CWB"], "group": "tfwsvT5e", "roleId": "hdrs4DXG"}, {"assignNamespaces": ["hYVheuf2", "zZw09Kss", "6XyLyjCa"], "group": "5cHTICJ2", "roleId": "Yb1c1PYr"}, {"assignNamespaces": ["KFk91Mh5", "MoQHhzN3", "ThP5gQRa"], "group": "h7trTKKf", "roleId": "pm0VnXdz"}]}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op UpdateThirdPartyLoginPlatformDomainV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'g0apewm5' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 146 'UpdateThirdPartyLoginPlatformDomainV3' test.out

#- 147 DeleteThirdPartyLoginPlatformDomainV3
# body param: body
echo '{"domain": "hoUbDdvA", "ssoGroups": ["VB6LP11V", "bMYl51Rd", "4VNLw9Pl"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op DeleteThirdPartyLoginPlatformDomainV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'QGvOGxSl' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 147 'DeleteThirdPartyLoginPlatformDomainV3' test.out

#- 148 PartialUpdateThirdPartyLoginPlatformDomainV3
# body param: body
echo '{"affectedClientIDs": ["hkQfF124", "zI6KQCAA", "CXyY0jEK"], "assignedNamespaces": ["4ku0Z9f9", "1tInzjMH", "CJqlq0u8"], "domain": "RuI2eDHK", "roleId": "bXyJ7Tra", "ssoCfg": {"googleKey": {"01ddIrw6": {}, "gaHFE6nZ": {}, "EdG4vcmJ": {}}, "groupConfigs": [{"assignNamespaces": ["0GrNqkT0", "oqwsPi8j", "Ez11KIv3"], "group": "4wT9yw6w", "roleId": "6sKVif7B"}, {"assignNamespaces": ["2RSbgihW", "INJkE8F8", "ornTFp9a"], "group": "lC51FOBI", "roleId": "Tr32PWJu"}, {"assignNamespaces": ["yd9AVkz5", "3fUu7i2K", "E52cimhu"], "group": "AkY9qIvG", "roleId": "C81dqDVz"}]}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PartialUpdateThirdPartyLoginPlatformDomainV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'leE7Ve4Z' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 148 'PartialUpdateThirdPartyLoginPlatformDomainV3' test.out

#- 149 RetrieveSSOLoginPlatformCredential
$CLI_EXE \
    --sn iam \
    --op RetrieveSSOLoginPlatformCredential \
    --namespace $AB_NAMESPACE \
    --platformId 'javp0Dle' \
    > test.out 2>&1
eval_tap $? 149 'RetrieveSSOLoginPlatformCredential' test.out

#- 150 AddSSOLoginPlatformCredential
# body param: body
echo '{"acsUrl": "Xua2Xzmr", "apiKey": "zLoxAtGJ", "appId": "HJdGtzph", "federationMetadataUrl": "CNGJHqRA", "isActive": false, "redirectUri": "hAFYy1MX", "secret": "ICOd5KWS", "ssoUrl": "Qhyux1lM"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AddSSOLoginPlatformCredential \
    --namespace $AB_NAMESPACE \
    --platformId 'Yvdc5ptY' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 150 'AddSSOLoginPlatformCredential' test.out

#- 151 DeleteSSOLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op DeleteSSOLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'ENnUZK72' \
    > test.out 2>&1
eval_tap $? 151 'DeleteSSOLoginPlatformCredentialV3' test.out

#- 152 UpdateSSOPlatformCredential
# body param: body
echo '{"acsUrl": "41Ea95Ss", "apiKey": "OHqjh0fA", "appId": "dGIoThnQ", "federationMetadataUrl": "lFbzfgDi", "isActive": false, "redirectUri": "NU9l3DnU", "secret": "mm3loQeD", "ssoUrl": "M6knUeM3"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op UpdateSSOPlatformCredential \
    --namespace $AB_NAMESPACE \
    --platformId 'LjAbzYtV' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 152 'UpdateSSOPlatformCredential' test.out

#- 153 AdminListUserIDByPlatformUserIDsV3
# body param: body
echo '{"platformUserIds": ["mJzGUWGI", "atHgwmyI", "MsE9x4bK"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminListUserIDByPlatformUserIDsV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'IC0IQFOw' \
    --rawPID 'true' \
    --rawPUID 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 153 'AdminListUserIDByPlatformUserIDsV3' test.out

#- 154 AdminGetUserByPlatformUserIDV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserByPlatformUserIDV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'Kywzk5r0' \
    --platformUserId 'PQFl5Ku2' \
    --pidType 'xxArBGEu' \
    > test.out 2>&1
eval_tap $? 154 'AdminGetUserByPlatformUserIDV3' test.out

#- 155 AdminGetProfileUpdateStrategyV3
$CLI_EXE \
    --sn iam \
    --op AdminGetProfileUpdateStrategyV3 \
    --namespace $AB_NAMESPACE \
    --field 'dob' \
    > test.out 2>&1
eval_tap $? 155 'AdminGetProfileUpdateStrategyV3' test.out

#- 156 AdminUpdateProfileUpdateStrategyV3
# body param: body
echo '{"config": {"minimumAllowedInterval": 85}, "type": "p7BX4X5u"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateProfileUpdateStrategyV3 \
    --namespace $AB_NAMESPACE \
    --field 'username' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 156 'AdminUpdateProfileUpdateStrategyV3' test.out

#- 157 AdminGetRoleOverrideConfigV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleOverrideConfigV3 \
    --namespace $AB_NAMESPACE \
    --identity 'GAME_ADMIN' \
    > test.out 2>&1
eval_tap $? 157 'AdminGetRoleOverrideConfigV3' test.out

#- 158 AdminUpdateRoleOverrideConfigV3
# body param: body
echo '{"additions": [{"actions": [1, 2, 73], "resource": "7t4vWVU1"}, {"actions": [16, 83, 43], "resource": "0FyEmPE5"}, {"actions": [75, 48, 56], "resource": "YgmhJv9r"}], "exclusions": [{"actions": [36, 55, 25], "resource": "pQ5xt6xf"}, {"actions": [30, 62, 97], "resource": "lWrQmh2m"}, {"actions": [83, 93, 53], "resource": "gybqxMV9"}], "overrides": [{"actions": [84, 25, 80], "resource": "SI2wzZCc"}, {"actions": [13, 31, 94], "resource": "ELHd4ylq"}, {"actions": [92, 89, 68], "resource": "Pq9AnE93"}], "replacements": [{"replacement": {"actions": [45, 57, 15], "resource": "HaM3wa2A"}, "target": "3ZV32cEb"}, {"replacement": {"actions": [88, 22, 93], "resource": "lHGL5NCQ"}, "target": "1uZ9lKKh"}, {"replacement": {"actions": [34, 6, 80], "resource": "LUregZBa"}, "target": "2yzJVMQG"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateRoleOverrideConfigV3 \
    --namespace $AB_NAMESPACE \
    --identity 'USER' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 158 'AdminUpdateRoleOverrideConfigV3' test.out

#- 159 AdminGetRoleSourceV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleSourceV3 \
    --namespace $AB_NAMESPACE \
    --identity 'GAME_ADMIN' \
    > test.out 2>&1
eval_tap $? 159 'AdminGetRoleSourceV3' test.out

#- 160 AdminChangeRoleOverrideConfigStatusV3
# body param: body
echo '{"active": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminChangeRoleOverrideConfigStatusV3 \
    --namespace $AB_NAMESPACE \
    --identity 'VIEW_ONLY' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 160 'AdminChangeRoleOverrideConfigStatusV3' test.out

#- 161 AdminGetRoleNamespacePermissionV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleNamespacePermissionV3 \
    --namespace $AB_NAMESPACE \
    --roleId 'tHBSBuj8' \
    > test.out 2>&1
eval_tap $? 161 'AdminGetRoleNamespacePermissionV3' test.out

#- 162 GetAdminUsersByRoleIdV3
$CLI_EXE \
    --sn iam \
    --op GetAdminUsersByRoleIdV3 \
    --namespace $AB_NAMESPACE \
    --roleId '9WSNpqUe' \
    --after '12' \
    --before '33' \
    --limit '12' \
    > test.out 2>&1
eval_tap $? 162 'GetAdminUsersByRoleIdV3' test.out

#- 163 AdminQueryTagV3
$CLI_EXE \
    --sn iam \
    --op AdminQueryTagV3 \
    --namespace $AB_NAMESPACE \
    --limit '33' \
    --offset '93' \
    --tagName '1xCILi0q' \
    > test.out 2>&1
eval_tap $? 163 'AdminQueryTagV3' test.out

#- 164 AdminCreateTagV3
# body param: body
echo '{"tagName": "M7d2ISno"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminCreateTagV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 164 'AdminCreateTagV3' test.out

#- 165 AdminUpdateTagV3
# body param: body
echo '{"tagName": "MWGumXn3"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateTagV3 \
    --namespace $AB_NAMESPACE \
    --tagId 'N952f81D' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 165 'AdminUpdateTagV3' test.out

#- 166 AdminDeleteTagV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteTagV3 \
    --namespace $AB_NAMESPACE \
    --tagId 'nbM0oE5w' \
    > test.out 2>&1
eval_tap $? 166 'AdminDeleteTagV3' test.out

#- 167 AdminGetUserByEmailAddressV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserByEmailAddressV3 \
    --namespace $AB_NAMESPACE \
    --emailAddress 'QmEtPxmG' \
    > test.out 2>&1
eval_tap $? 167 'AdminGetUserByEmailAddressV3' test.out

#- 168 AdminBulkUpdateUsersV3
# body param: body
echo '{"updateRequest": {"skipLoginQueue": true}, "userIds": ["Pc9Z8iVJ", "iaGkZdSV", "WdcBBjOC"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBulkUpdateUsersV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 168 'AdminBulkUpdateUsersV3' test.out

#- 169 AdminGetBulkUserBanV3
# body param: body
echo '{"bulkUserId": ["hcxzftnq", "MbznxI5r", "MJDPwZUB"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminGetBulkUserBanV3 \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --banType 'zK6miroq' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 169 'AdminGetBulkUserBanV3' test.out

#- 170 AdminListUserIDByUserIDsV3
# body param: body
echo '{"findByPublisherNamespace": true, "userIds": ["5FEmzZyw", "TC4Bih4R", "R6a4XIUd"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminListUserIDByUserIDsV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 170 'AdminListUserIDByUserIDsV3' test.out

#- 171 AdminBulkGetUsersPlatform
# body param: body
echo '{"userIds": ["BF8CNDCk", "fSne53jX", "ntHGcNUA"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBulkGetUsersPlatform \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 171 'AdminBulkGetUsersPlatform' test.out

#- 172 AdminCursorGetUserV3
# body param: body
echo '{"cursor": {"cursorTime": "axj82BAK", "userId": "ETgnP9bB"}, "fields": ["w5OCvqph", "HYCtT8R6", "SeT7EOlX"], "limit": 29}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminCursorGetUserV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 172 'AdminCursorGetUserV3' test.out

#- 173 AdminInviteUserV3
# body param: body
echo '{"emailAddresses": ["SbcX6CCn", "kAknZrXL", "Cq4c0HQP"], "isAdmin": false, "languageTag": "DJFU2W4I", "namespace": "fswFgOwb", "roles": ["51ZOvowY", "pLgsWPFW", "GApDUSaU"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminInviteUserV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 173 'AdminInviteUserV3' test.out

#- 174 AdminQueryThirdPlatformLinkHistoryV3
$CLI_EXE \
    --sn iam \
    --op AdminQueryThirdPlatformLinkHistoryV3 \
    --namespace $AB_NAMESPACE \
    --limit '58' \
    --offset '45' \
    --platformUserId '48Z2AaqA' \
    --platformId 'Q1u4iUBn' \
    > test.out 2>&1
eval_tap $? 174 'AdminQueryThirdPlatformLinkHistoryV3' test.out

#- 175 AdminListUsersV3
$CLI_EXE \
    --sn iam \
    --op AdminListUsersV3 \
    --namespace $AB_NAMESPACE \
    --limit '85' \
    --offset '77' \
    > test.out 2>&1
eval_tap $? 175 'AdminListUsersV3' test.out

#- 176 AdminSearchUserV3
$CLI_EXE \
    --sn iam \
    --op AdminSearchUserV3 \
    --namespace $AB_NAMESPACE \
    --by 'yOOFZM55' \
    --endDate '3CWacsXu' \
    --includeTotal 'false' \
    --limit '8' \
    --offset '65' \
    --platformBy 'FPUArsc1' \
    --platformId 'gVI6oF5b' \
    --query 'uwPch417' \
    --roleIds 'cmf6ybc1' \
    --selectedFields 'NiBTZGUZ' \
    --skipLoginQueue 'false' \
    --startDate 'efabQ9DD' \
    --tagIds 'kK3yFhEe' \
    --testAccount 'true' \
    > test.out 2>&1
eval_tap $? 176 'AdminSearchUserV3' test.out

#- 177 AdminGetBulkUserByEmailAddressV3
# body param: body
echo '{"listEmailAddressRequest": ["fNHW9fA5", "DSMENm8F", "NxknjG4I"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminGetBulkUserByEmailAddressV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 177 'AdminGetBulkUserByEmailAddressV3' test.out

#- 178 AdminGetUserByUserIdV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserByUserIdV3 \
    --namespace $AB_NAMESPACE \
    --userId 'XILr8AuP' \
    > test.out 2>&1
eval_tap $? 178 'AdminGetUserByUserIdV3' test.out

#- 179 AdminUpdateUserV3
# body param: body
echo '{"avatarUrl": "w41n900c", "country": "mubNdAeI", "dateOfBirth": "f71bsyUI", "displayName": "ZyfHu9oZ", "languageTag": "4jqbhSoh", "skipLoginQueue": false, "tags": ["O96sLIDS", "IqQbF66x", "T2uAdGdw"], "uniqueDisplayName": "uyM8LPgO", "userName": "dSok6zDR"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserV3 \
    --namespace $AB_NAMESPACE \
    --userId 'ACRGDOX6' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 179 'AdminUpdateUserV3' test.out

#- 180 AdminGetUserBanV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserBanV3 \
    --namespace $AB_NAMESPACE \
    --userId 'I6YAVr2o' \
    --activeOnly 'true' \
    --after 'oJdzQCuP' \
    --before 'w8oLaZZe' \
    --limit '94' \
    > test.out 2>&1
eval_tap $? 180 'AdminGetUserBanV3' test.out

#- 181 AdminBanUserV3
# body param: body
echo '{"ban": "LSCcrndB", "comment": "ZJW7oLZb", "endDate": "FyTskB9p", "reason": "Y1zE65hv", "skipNotif": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBanUserV3 \
    --namespace $AB_NAMESPACE \
    --userId 'DdJtLQgV' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 181 'AdminBanUserV3' test.out

#- 182 AdminGetUserBanSummaryV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserBanSummaryV3 \
    --namespace $AB_NAMESPACE \
    --userId 'BkhV0xef' \
    > test.out 2>&1
eval_tap $? 182 'AdminGetUserBanSummaryV3' test.out

#- 183 AdminUpdateUserBanV3
# body param: body
echo '{"enabled": true, "skipNotif": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserBanV3 \
    --banId 'JU30hHwi' \
    --namespace $AB_NAMESPACE \
    --userId 'rjQzfmvb' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 183 'AdminUpdateUserBanV3' test.out

#- 184 AdminSendVerificationCodeV3
# body param: body
echo '{"context": "xynpkR2r", "emailAddress": "iu29eaDL", "languageTag": "EHJ9bEd2", "upgradeToken": "fW8d8dwV"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminSendVerificationCodeV3 \
    --namespace $AB_NAMESPACE \
    --userId '8Lvnj4BE' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 184 'AdminSendVerificationCodeV3' test.out

#- 185 AdminVerifyAccountV3
# body param: body
echo '{"Code": "O82HOuYw", "ContactType": "93fvHe5M", "LanguageTag": "tGtUv6og", "validateOnly": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminVerifyAccountV3 \
    --namespace $AB_NAMESPACE \
    --userId 'cR1vyfeP' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 185 'AdminVerifyAccountV3' test.out

#- 186 GetUserVerificationCode
$CLI_EXE \
    --sn iam \
    --op GetUserVerificationCode \
    --namespace $AB_NAMESPACE \
    --userId '7OLCy8zM' \
    > test.out 2>&1
eval_tap $? 186 'GetUserVerificationCode' test.out

#- 187 AdminGetUserDeletionStatusV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserDeletionStatusV3 \
    --namespace $AB_NAMESPACE \
    --userId 'purOrDv1' \
    > test.out 2>&1
eval_tap $? 187 'AdminGetUserDeletionStatusV3' test.out

#- 188 AdminUpdateUserDeletionStatusV3
# body param: body
echo '{"deletionDate": 2, "enabled": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserDeletionStatusV3 \
    --namespace $AB_NAMESPACE \
    --userId 'ufIWb4dE' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 188 'AdminUpdateUserDeletionStatusV3' test.out

#- 189 AdminListUserAllPlatformAccountsDistinctV3
$CLI_EXE \
    --sn iam \
    --op AdminListUserAllPlatformAccountsDistinctV3 \
    --namespace $AB_NAMESPACE \
    --userId 'RcED0MX1' \
    > test.out 2>&1
eval_tap $? 189 'AdminListUserAllPlatformAccountsDistinctV3' test.out

#- 190 AdminUpgradeHeadlessAccountV3
# body param: body
echo '{"code": "rjsOJtDX", "country": "q52KjRdc", "dateOfBirth": "E8ovdRpv", "displayName": "FuLUqrXy", "emailAddress": "zMr7i3UO", "password": "LMl9vMyr", "uniqueDisplayName": "Ys3LESiQ", "validateOnly": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpgradeHeadlessAccountV3 \
    --namespace $AB_NAMESPACE \
    --userId 'Dhi77JPc' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 190 'AdminUpgradeHeadlessAccountV3' test.out

#- 191 AdminDeleteUserInformationV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserInformationV3 \
    --namespace $AB_NAMESPACE \
    --userId 'uoCQOmnW' \
    > test.out 2>&1
eval_tap $? 191 'AdminDeleteUserInformationV3' test.out

#- 192 AdminGetUserLoginHistoriesV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserLoginHistoriesV3 \
    --namespace $AB_NAMESPACE \
    --userId 'MKS57cYQ' \
    --after '0.8153169438568554' \
    --before '0.688136338688737' \
    --limit '0' \
    > test.out 2>&1
eval_tap $? 192 'AdminGetUserLoginHistoriesV3' test.out

#- 193 AdminResetPasswordV3
# body param: body
echo '{"languageTag": "MAcVeDAo", "mfaToken": "7pANTdLO", "newPassword": "Ct5pizGR", "oldPassword": "ZVYwt074"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminResetPasswordV3 \
    --namespace $AB_NAMESPACE \
    --userId 'R2d8jpaa' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 193 'AdminResetPasswordV3' test.out

#- 194 AdminUpdateUserPermissionV3
# body param: body
echo '{"Permissions": [{"Action": 27, "Resource": "OAOOD60c", "SchedAction": 53, "SchedCron": "4qgx8eN4", "SchedRange": ["t9NpRgJh", "x7ba3b8G", "wYQYi1s4"]}, {"Action": 73, "Resource": "LhnWDRBQ", "SchedAction": 84, "SchedCron": "h6mvJaeo", "SchedRange": ["5CKxtxna", "GwxIXC4c", "NkdTjQxa"]}, {"Action": 67, "Resource": "vUVLFEMY", "SchedAction": 27, "SchedCron": "Tj42zfRt", "SchedRange": ["fDo3MTw8", "OM0NgkMu", "MMbr1kbF"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserPermissionV3 \
    --namespace $AB_NAMESPACE \
    --userId 'AsJNyLM5' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 194 'AdminUpdateUserPermissionV3' test.out

#- 195 AdminAddUserPermissionsV3
# body param: body
echo '{"Permissions": [{"Action": 88, "Resource": "Aqaxvp6Y", "SchedAction": 1, "SchedCron": "aQLoO1f3", "SchedRange": ["fcPVUcFK", "61WDVOnU", "Yc0AYPcj"]}, {"Action": 13, "Resource": "VP5ak2sb", "SchedAction": 65, "SchedCron": "6bYyJv8G", "SchedRange": ["Mx7jS2KW", "p4yKBtdX", "Pssagipz"]}, {"Action": 33, "Resource": "IL2VlkVB", "SchedAction": 41, "SchedCron": "hFgn0UeU", "SchedRange": ["hu4vRa3M", "3vas46np", "g4qtpMW1"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddUserPermissionsV3 \
    --namespace $AB_NAMESPACE \
    --userId 'vDwneJjB' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 195 'AdminAddUserPermissionsV3' test.out

#- 196 AdminDeleteUserPermissionBulkV3
# body param: body
echo '[{"Action": 95, "Resource": "j6Mpkekh"}, {"Action": 76, "Resource": "uiBkecBZ"}, {"Action": 86, "Resource": "w4UdZi3X"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserPermissionBulkV3 \
    --namespace $AB_NAMESPACE \
    --userId 'WDJKB07C' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 196 'AdminDeleteUserPermissionBulkV3' test.out

#- 197 AdminDeleteUserPermissionV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserPermissionV3 \
    --action '18' \
    --namespace $AB_NAMESPACE \
    --resource 'INPIXejM' \
    --userId '9J0QW5P4' \
    > test.out 2>&1
eval_tap $? 197 'AdminDeleteUserPermissionV3' test.out

#- 198 AdminGetUserPlatformAccountsV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserPlatformAccountsV3 \
    --namespace $AB_NAMESPACE \
    --userId 'LwtsltjD' \
    --after 'vXpG9v0y' \
    --before 'GyRDpuy9' \
    --limit '51' \
    --platformId 'VoJ1T2iY' \
    --targetNamespace 'l7yWZgGi' \
    > test.out 2>&1
eval_tap $? 198 'AdminGetUserPlatformAccountsV3' test.out

#- 199 AdminListAllDistinctPlatformAccountsV3
$CLI_EXE \
    --sn iam \
    --op AdminListAllDistinctPlatformAccountsV3 \
    --namespace $AB_NAMESPACE \
    --userId 'zY9XuoVG' \
    --status 'fwRTa1NE' \
    > test.out 2>&1
eval_tap $? 199 'AdminListAllDistinctPlatformAccountsV3' test.out

#- 200 AdminGetListJusticePlatformAccounts
$CLI_EXE \
    --sn iam \
    --op AdminGetListJusticePlatformAccounts \
    --namespace $AB_NAMESPACE \
    --userId 'Bd6WmhvS' \
    > test.out 2>&1
eval_tap $? 200 'AdminGetListJusticePlatformAccounts' test.out

#- 201 AdminGetUserMapping
$CLI_EXE \
    --sn iam \
    --op AdminGetUserMapping \
    --namespace $AB_NAMESPACE \
    --targetNamespace '1L4rllEl' \
    --userId 'Hk76Vt6h' \
    --createIfNotFound 'false' \
    > test.out 2>&1
eval_tap $? 201 'AdminGetUserMapping' test.out

#- 202 AdminCreateJusticeUser
$CLI_EXE \
    --sn iam \
    --op AdminCreateJusticeUser \
    --namespace $AB_NAMESPACE \
    --targetNamespace '7oSc160s' \
    --userId 'GPXv3mC7' \
    > test.out 2>&1
eval_tap $? 202 'AdminCreateJusticeUser' test.out

#- 203 AdminLinkPlatformAccount
# body param: body
echo '{"platformId": "mxRPsW95", "platformUserId": "O69g1mpb"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminLinkPlatformAccount \
    --namespace $AB_NAMESPACE \
    --userId '3m6AgtbW' \
    --skipConflict 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 203 'AdminLinkPlatformAccount' test.out

#- 204 AdminGetUserLinkHistoriesV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserLinkHistoriesV3 \
    --namespace $AB_NAMESPACE \
    --userId '2Db2uuFY' \
    --platformId 'UaE7C9Hg' \
    > test.out 2>&1
eval_tap $? 204 'AdminGetUserLinkHistoriesV3' test.out

#- 205 AdminPlatformUnlinkV3
eval_tap 0 205 'AdminPlatformUnlinkV3 # SKIP deprecated' test.out

#- 206 AdminPlatformUnlinkAllV3
$CLI_EXE \
    --sn iam \
    --op AdminPlatformUnlinkAllV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'a8G6me98' \
    --userId 'UzuWI6G4' \
    > test.out 2>&1
eval_tap $? 206 'AdminPlatformUnlinkAllV3' test.out

#- 207 AdminPlatformLinkV3
$CLI_EXE \
    --sn iam \
    --op AdminPlatformLinkV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'DaPJXMHu' \
    --userId 'r8hxc3vk' \
    --ticket '3wEVWxIp' \
    > test.out 2>&1
eval_tap $? 207 'AdminPlatformLinkV3' test.out

#- 208 AdminDeleteUserLinkingHistoryByPlatformIDV3
eval_tap 0 208 'AdminDeleteUserLinkingHistoryByPlatformIDV3 # SKIP deprecated' test.out

#- 209 AdminDeleteUserLinkingRestrictionByPlatformIDV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserLinkingRestrictionByPlatformIDV3 \
    --namespace $AB_NAMESPACE \
    --platformId '6RcczkyN' \
    --userId 'CNpANbMw' \
    > test.out 2>&1
eval_tap $? 209 'AdminDeleteUserLinkingRestrictionByPlatformIDV3' test.out

#- 210 AdminGetThirdPartyPlatformTokenLinkStatusV3
$CLI_EXE \
    --sn iam \
    --op AdminGetThirdPartyPlatformTokenLinkStatusV3 \
    --namespace $AB_NAMESPACE \
    --platformId '9AsoiMBQ' \
    --userId 'EoZndIMd' \
    --platformToken '04UsF2T7' \
    > test.out 2>&1
eval_tap $? 210 'AdminGetThirdPartyPlatformTokenLinkStatusV3' test.out

#- 211 AdminGetUserSinglePlatformAccount
$CLI_EXE \
    --sn iam \
    --op AdminGetUserSinglePlatformAccount \
    --namespace $AB_NAMESPACE \
    --platformId 'oLgTWRdP' \
    --userId 'DkpEZVle' \
    --crossNamespace 'true' \
    > test.out 2>&1
eval_tap $? 211 'AdminGetUserSinglePlatformAccount' test.out

#- 212 AdminDeleteUserRolesV3
# body param: body
echo '["jWQtdWeO", "wOxPcn8M", "hAxzEHZf"]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserRolesV3 \
    --namespace $AB_NAMESPACE \
    --userId '1ySvD21b' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 212 'AdminDeleteUserRolesV3' test.out

#- 213 AdminSaveUserRoleV3
# body param: body
echo '[{"namespace": "aTf425i6", "roleId": "aBKHkSaW"}, {"namespace": "ek4VSkI2", "roleId": "g0QPip7h"}, {"namespace": "7D0LZgs2", "roleId": "kMvpfrwM"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminSaveUserRoleV3 \
    --namespace $AB_NAMESPACE \
    --userId 'A7M8Xw4e' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 213 'AdminSaveUserRoleV3' test.out

#- 214 AdminAddUserRoleV3
$CLI_EXE \
    --sn iam \
    --op AdminAddUserRoleV3 \
    --namespace $AB_NAMESPACE \
    --roleId '5tJDlYzO' \
    --userId 'nU09PYx0' \
    > test.out 2>&1
eval_tap $? 214 'AdminAddUserRoleV3' test.out

#- 215 AdminDeleteUserRoleV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserRoleV3 \
    --namespace $AB_NAMESPACE \
    --roleId '3s14nGim' \
    --userId 'zJOQQF3z' \
    > test.out 2>&1
eval_tap $? 215 'AdminDeleteUserRoleV3' test.out

#- 216 AdminGetUserStateByUserIdV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserStateByUserIdV3 \
    --namespace $AB_NAMESPACE \
    --userId 'wdaQ5NeM' \
    > test.out 2>&1
eval_tap $? 216 'AdminGetUserStateByUserIdV3' test.out

#- 217 AdminUpdateUserStatusV3
# body param: body
echo '{"enabled": true, "reason": "pMVvfQz7"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserStatusV3 \
    --namespace $AB_NAMESPACE \
    --userId 'v4AvcJgb' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 217 'AdminUpdateUserStatusV3' test.out

#- 218 AdminTrustlyUpdateUserIdentity
# body param: body
echo '{"emailAddress": "QGAoRBLp", "password": "iXGkbzEU"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminTrustlyUpdateUserIdentity \
    --namespace $AB_NAMESPACE \
    --userId 'OoTeffJ5' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 218 'AdminTrustlyUpdateUserIdentity' test.out

#- 219 AdminVerifyUserWithoutVerificationCodeV3
$CLI_EXE \
    --sn iam \
    --op AdminVerifyUserWithoutVerificationCodeV3 \
    --namespace $AB_NAMESPACE \
    --userId 'Y0nhJGDI' \
    > test.out 2>&1
eval_tap $? 219 'AdminVerifyUserWithoutVerificationCodeV3' test.out

#- 220 AdminUpdateClientSecretV3
# body param: body
echo '{"newSecret": "D8DLxbuN"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateClientSecretV3 \
    --clientId 'TT1oNJMt' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 220 'AdminUpdateClientSecretV3' test.out

#- 221 AdminCheckThirdPartyLoginPlatformAvailabilityV3
$CLI_EXE \
    --sn iam \
    --op AdminCheckThirdPartyLoginPlatformAvailabilityV3 \
    --platformId 'hkaEkHL8' \
    > test.out 2>&1
eval_tap $? 221 'AdminCheckThirdPartyLoginPlatformAvailabilityV3' test.out

#- 222 AdminGetRolesV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRolesV3 \
    --after 'zT679bmV' \
    --before 'aoXKf4Ds' \
    --isWildcard 'false' \
    --limit '94' \
    > test.out 2>&1
eval_tap $? 222 'AdminGetRolesV3' test.out

#- 223 AdminCreateRoleV3
# body param: body
echo '{"adminRole": false, "deletable": false, "isWildcard": true, "managers": [{"displayName": "h3f8EcUt", "namespace": "BDfpU6GY", "userId": "ocAHFggi"}, {"displayName": "WlGK1EB4", "namespace": "o5A0Vyt7", "userId": "ASRA6859"}, {"displayName": "R0AVErdR", "namespace": "qBVW4xm5", "userId": "roZGnmuL"}], "members": [{"displayName": "t3RUlUET", "namespace": "SrCy35NJ", "userId": "j1ooA1MN"}, {"displayName": "rPrSNzZ6", "namespace": "fnpdex2s", "userId": "saQTzFCp"}, {"displayName": "BOBntfXX", "namespace": "P78FAZ84", "userId": "J36bIMTb"}], "permissions": [{"action": 4, "resource": "cf4AvsMl", "schedAction": 93, "schedCron": "e8tgnWIX", "schedRange": ["7lG3pDXr", "wVfnfRaq", "v3aiYPyi"]}, {"action": 85, "resource": "DPz3K067", "schedAction": 41, "schedCron": "4nfoXmQR", "schedRange": ["Y17Wpwuh", "k1sCCXQf", "sP1powe7"]}, {"action": 97, "resource": "HuNzFeyR", "schedAction": 15, "schedCron": "FKoTrZsK", "schedRange": ["yIaXqKEj", "QSFenWOv", "gqMNZOv1"]}], "roleName": "kXOeshea"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminCreateRoleV3 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 223 'AdminCreateRoleV3' test.out

#- 224 AdminGetRoleV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleV3 \
    --roleId 'jjfqqBh7' \
    > test.out 2>&1
eval_tap $? 224 'AdminGetRoleV3' test.out

#- 225 AdminDeleteRoleV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteRoleV3 \
    --roleId 'HXFwQNm2' \
    > test.out 2>&1
eval_tap $? 225 'AdminDeleteRoleV3' test.out

#- 226 AdminUpdateRoleV3
# body param: body
echo '{"deletable": true, "isWildcard": false, "roleName": "W0TaaG4r"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateRoleV3 \
    --roleId 'J7bJM4Sg' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 226 'AdminUpdateRoleV3' test.out

#- 227 AdminGetRoleAdminStatusV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleAdminStatusV3 \
    --roleId 'siwAt6TR' \
    > test.out 2>&1
eval_tap $? 227 'AdminGetRoleAdminStatusV3' test.out

#- 228 AdminUpdateAdminRoleStatusV3
$CLI_EXE \
    --sn iam \
    --op AdminUpdateAdminRoleStatusV3 \
    --roleId 'KTCbmsiz' \
    > test.out 2>&1
eval_tap $? 228 'AdminUpdateAdminRoleStatusV3' test.out

#- 229 AdminRemoveRoleAdminV3
$CLI_EXE \
    --sn iam \
    --op AdminRemoveRoleAdminV3 \
    --roleId 'QcGEGGTb' \
    > test.out 2>&1
eval_tap $? 229 'AdminRemoveRoleAdminV3' test.out

#- 230 AdminGetRoleManagersV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleManagersV3 \
    --roleId '9BZ9Evps' \
    --after 'iKPuKXlQ' \
    --before 'hIZJDzUG' \
    --limit '86' \
    > test.out 2>&1
eval_tap $? 230 'AdminGetRoleManagersV3' test.out

#- 231 AdminAddRoleManagersV3
# body param: body
echo '{"managers": [{"displayName": "SUJ9whQh", "namespace": "IEEH9QoP", "userId": "oeyP5Oy5"}, {"displayName": "1AxaaLD6", "namespace": "DsMxHupp", "userId": "mQSNnsSb"}, {"displayName": "pirnYvU6", "namespace": "2ZvURHD8", "userId": "ILnqik9E"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddRoleManagersV3 \
    --roleId '4w8wNedP' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 231 'AdminAddRoleManagersV3' test.out

#- 232 AdminRemoveRoleManagersV3
# body param: body
echo '{"managers": [{"displayName": "2CvULLmC", "namespace": "B2nC3BEm", "userId": "iIPPhPDJ"}, {"displayName": "f9H0W31t", "namespace": "QIPUCRYW", "userId": "fbQDuURT"}, {"displayName": "RsEBtFMs", "namespace": "dsJRiIxx", "userId": "Xe4d7ExR"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminRemoveRoleManagersV3 \
    --roleId '3pdD5I0j' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 232 'AdminRemoveRoleManagersV3' test.out

#- 233 AdminGetRoleMembersV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleMembersV3 \
    --roleId 'jEjLR9MM' \
    --after 'zMQjf1Ny' \
    --before 'u0VdUu2L' \
    --limit '8' \
    > test.out 2>&1
eval_tap $? 233 'AdminGetRoleMembersV3' test.out

#- 234 AdminAddRoleMembersV3
# body param: body
echo '{"members": [{"displayName": "eRCYtXCm", "namespace": "NEz0VOc0", "userId": "asIRR9Tu"}, {"displayName": "xN2b6LMr", "namespace": "6uxF37EX", "userId": "AGCMUGxH"}, {"displayName": "TzgV50aN", "namespace": "vCj6ue0B", "userId": "rYShggJY"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddRoleMembersV3 \
    --roleId 'HMRTtaq1' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 234 'AdminAddRoleMembersV3' test.out

#- 235 AdminRemoveRoleMembersV3
eval_tap 0 235 'AdminRemoveRoleMembersV3 # SKIP deprecated' test.out

#- 236 AdminUpdateRolePermissionsV3
# body param: body
echo '{"permissions": [{"action": 86, "resource": "HViSoN4u", "schedAction": 14, "schedCron": "07E18WeI", "schedRange": ["o8DfvJDb", "Yfk842xF", "Em8uR6n5"]}, {"action": 86, "resource": "jedYymri", "schedAction": 16, "schedCron": "OiozCcjU", "schedRange": ["S9lEAve6", "ZOXDv7DL", "c2pZf0th"]}, {"action": 14, "resource": "KHC3koE0", "schedAction": 68, "schedCron": "xMpIgDw8", "schedRange": ["ylJ4pPBT", "kG0VI3wu", "FRUxtTAW"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateRolePermissionsV3 \
    --roleId '9rrYcicP' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 236 'AdminUpdateRolePermissionsV3' test.out

#- 237 AdminAddRolePermissionsV3
# body param: body
echo '{"permissions": [{"action": 18, "resource": "yFdn7v1N", "schedAction": 74, "schedCron": "RuIewale", "schedRange": ["Sh2scM6J", "8BveiWTp", "ypUOHpxM"]}, {"action": 36, "resource": "oZx9kSAn", "schedAction": 69, "schedCron": "rJbQLf5T", "schedRange": ["J15XAxlB", "tYnxwJP1", "FGg3acq4"]}, {"action": 31, "resource": "mr63LDdb", "schedAction": 51, "schedCron": "zvzHtBD7", "schedRange": ["UsefqcDE", "R3RvKwA5", "Cbrtv4NB"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddRolePermissionsV3 \
    --roleId 'ZYxmPO0O' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 237 'AdminAddRolePermissionsV3' test.out

#- 238 AdminDeleteRolePermissionsV3
# body param: body
echo '["WHtOdneW", "5tnBnLzn", "houyn6Hc"]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDeleteRolePermissionsV3 \
    --roleId 'DkBfSBmy' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 238 'AdminDeleteRolePermissionsV3' test.out

#- 239 AdminDeleteRolePermissionV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteRolePermissionV3 \
    --action '43' \
    --resource 'et6J2hCj' \
    --roleId 'zrbyqZmX' \
    > test.out 2>&1
eval_tap $? 239 'AdminDeleteRolePermissionV3' test.out

#- 240 AdminGetMyUserV3
$CLI_EXE \
    --sn iam \
    --op AdminGetMyUserV3 \
    > test.out 2>&1
eval_tap $? 240 'AdminGetMyUserV3' test.out

#- 241 UserAuthenticationV3
$CLI_EXE \
    --sn iam \
    --op UserAuthenticationV3 \
    --client_id 'fXa4Bq8a' \
    --extend_exp 'true' \
    --redirect_uri 'vsSC1qWB' \
    --password 'uYDMKqp6' \
    --request_id 'uP8UDOsB' \
    --user_name 'sVvMTrfP' \
    > test.out 2>&1
eval_tap $? 241 'UserAuthenticationV3' test.out

#- 242 AuthenticationWithPlatformLinkV3
$CLI_EXE \
    --sn iam \
    --op AuthenticationWithPlatformLinkV3 \
    --extend_exp 'false' \
    --client_id 'rVa1hv81' \
    --linkingToken 'gcTJpISP' \
    --password 'rtANRBvh' \
    --username 'umIy7Wp3' \
    > test.out 2>&1
eval_tap $? 242 'AuthenticationWithPlatformLinkV3' test.out

#- 243 AuthenticateAndLinkForwardV3
$CLI_EXE \
    --sn iam \
    --op AuthenticateAndLinkForwardV3 \
    --extend_exp 'true' \
    --client_id 'lLclI8A3' \
    --linkingToken '5ZV6FeLv' \
    --password '6IWoQpnB' \
    --username '3zGAFWb5' \
    > test.out 2>&1
eval_tap $? 243 'AuthenticateAndLinkForwardV3' test.out

#- 244 PublicGetSystemConfigV3
$CLI_EXE \
    --sn iam \
    --op PublicGetSystemConfigV3 \
    > test.out 2>&1
eval_tap $? 244 'PublicGetSystemConfigV3' test.out

#- 245 GenerateTokenByNewHeadlessAccountV3
$CLI_EXE \
    --sn iam \
    --op GenerateTokenByNewHeadlessAccountV3 \
    --additionalData 'HSKKyjtx' \
    --extend_exp 'false' \
    --linkingToken 'ewdnlVug' \
    > test.out 2>&1
eval_tap $? 245 'GenerateTokenByNewHeadlessAccountV3' test.out

#- 246 RequestOneTimeLinkingCodeV3
$CLI_EXE \
    --sn iam \
    --op RequestOneTimeLinkingCodeV3 \
    --redirectUri 'jeoIawzl' \
    --state 'ECcRXb8d' \
    --platformId 'RuzZXZ6S' \
    > test.out 2>&1
eval_tap $? 246 'RequestOneTimeLinkingCodeV3' test.out

#- 247 ValidateOneTimeLinkingCodeV3
$CLI_EXE \
    --sn iam \
    --op ValidateOneTimeLinkingCodeV3 \
    --oneTimeLinkCode 'S885grtS' \
    > test.out 2>&1
eval_tap $? 247 'ValidateOneTimeLinkingCodeV3' test.out

#- 248 RequestTokenByOneTimeLinkCodeResponseV3
$CLI_EXE \
    --sn iam \
    --op RequestTokenByOneTimeLinkCodeResponseV3 \
    --additionalData 'TzuZfV2T' \
    --isTransient 'true' \
    --client_id 'DvgVBHns' \
    --oneTimeLinkCode 'n9b5RqvX' \
    > test.out 2>&1
eval_tap $? 248 'RequestTokenByOneTimeLinkCodeResponseV3' test.out

#- 249 GetCountryLocationV3
$CLI_EXE \
    --sn iam \
    --op GetCountryLocationV3 \
    > test.out 2>&1
eval_tap $? 249 'GetCountryLocationV3' test.out

#- 250 Logout
$CLI_EXE \
    --sn iam \
    --op Logout \
    > test.out 2>&1
eval_tap $? 250 'Logout' test.out

#- 251 RequestTokenExchangeCodeV3
$CLI_EXE \
    --sn iam \
    --op RequestTokenExchangeCodeV3 \
    --namespace $AB_NAMESPACE \
    --codeChallenge 'jiZ4Xd9E' \
    --codeChallengeMethod 'plain' \
    --client_id 'oPcUlyFN' \
    > test.out 2>&1
eval_tap $? 251 'RequestTokenExchangeCodeV3' test.out

#- 252 AdminRetrieveUserThirdPartyPlatformTokenV3
$CLI_EXE \
    --sn iam \
    --op AdminRetrieveUserThirdPartyPlatformTokenV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'Y0hqPEVP' \
    --userId 'cs8SzUvz' \
    --platformUserId 'hFjnsbKZ' \
    > test.out 2>&1
eval_tap $? 252 'AdminRetrieveUserThirdPartyPlatformTokenV3' test.out

#- 253 RevokeUserV3
$CLI_EXE \
    --sn iam \
    --op RevokeUserV3 \
    --namespace $AB_NAMESPACE \
    --userId 'h428qIPK' \
    --includeGameNamespace 'false' \
    > test.out 2>&1
eval_tap $? 253 'RevokeUserV3' test.out

#- 254 AuthorizeV3
$CLI_EXE \
    --sn iam \
    --op AuthorizeV3 \
    --blockedPlatformId '02pO4XmM' \
    --codeChallenge 'ImFzdv7f' \
    --codeChallengeMethod 'plain' \
    --createHeadless 'false' \
    --loginWebBased 'false' \
    --nonce 'hn39wDqs' \
    --oneTimeLinkCode 'w6N7k7Lh' \
    --redirectUri 'kP3txDFI' \
    --scope 'mBZ4nAi1' \
    --state 'kP1MVtPP' \
    --targetAuthPage 'iENPMm0W' \
    --useRedirectUriAsLoginUrlWhenLocked 'false' \
    --clientId 'TTVxYrMX' \
    --responseType 'code' \
    > test.out 2>&1
eval_tap $? 254 'AuthorizeV3' test.out

#- 255 TokenIntrospectionV3
$CLI_EXE \
    --sn iam \
    --op TokenIntrospectionV3 \
    --token 'NFlKFElE' \
    > test.out 2>&1
eval_tap $? 255 'TokenIntrospectionV3' test.out

#- 256 GetJWKSV3
$CLI_EXE \
    --sn iam \
    --op GetJWKSV3 \
    > test.out 2>&1
eval_tap $? 256 'GetJWKSV3' test.out

#- 257 SendMFAAuthenticationCode
$CLI_EXE \
    --sn iam \
    --op SendMFAAuthenticationCode \
    --clientId 'TOSEaRFi' \
    --factor 'vTGM7Ksh' \
    --mfaToken 'StEjq9qc' \
    > test.out 2>&1
eval_tap $? 257 'SendMFAAuthenticationCode' test.out

#- 258 Change2faMethod
$CLI_EXE \
    --sn iam \
    --op Change2faMethod \
    --factor 'H7oLFrwB' \
    --mfaToken '72dnNa3W' \
    > test.out 2>&1
eval_tap $? 258 'Change2faMethod' test.out

#- 259 Verify2faCode
$CLI_EXE \
    --sn iam \
    --op Verify2faCode \
    --code 'SGBCa4bG' \
    --factor 'm1vu7BFW' \
    --mfaToken 't0z3wZEO' \
    --rememberDevice 'true' \
    > test.out 2>&1
eval_tap $? 259 'Verify2faCode' test.out

#- 260 Verify2faCodeForward
$CLI_EXE \
    --sn iam \
    --op Verify2faCodeForward \
    --defaultFactor 'UeUgiEHI' \
    --factors '0LyCexdU' \
    --rememberDevice 'true' \
    --clientId 'hT1DMTax' \
    --code 'R4m4e7b4' \
    --factor 'yM01FfoJ' \
    --mfaToken 'zUDC05aM' \
    > test.out 2>&1
eval_tap $? 260 'Verify2faCodeForward' test.out

#- 261 RetrieveUserThirdPartyPlatformTokenV3
$CLI_EXE \
    --sn iam \
    --op RetrieveUserThirdPartyPlatformTokenV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'k6TEdWPT' \
    --userId 'noauEPmu' \
    > test.out 2>&1
eval_tap $? 261 'RetrieveUserThirdPartyPlatformTokenV3' test.out

#- 262 AuthCodeRequestV3
$CLI_EXE \
    --sn iam \
    --op AuthCodeRequestV3 \
    --platformId 'zNDoTUsP' \
    --clientId 'qA56SaFf' \
    --redirectUri 'Yz7Rv6pD' \
    --requestId '8ZJayL7S' \
    > test.out 2>&1
eval_tap $? 262 'AuthCodeRequestV3' test.out

#- 263 PlatformTokenGrantV3
$CLI_EXE \
    --sn iam \
    --op PlatformTokenGrantV3 \
    --platformId 'fljmYkkZ' \
    --additionalData 'wvPS4qiz' \
    --client_id 'Ojl1kLDV' \
    --createHeadless 'false' \
    --device_id '2rxeOGed' \
    --macAddress 'XgDFzl79' \
    --platform_token 'n5Ck8Mtp' \
    --serviceLabel '0.9243406991477987' \
    --skipSetCookie 'true' \
    > test.out 2>&1
eval_tap $? 263 'PlatformTokenGrantV3' test.out

#- 264 GetRevocationListV3
$CLI_EXE \
    --sn iam \
    --op GetRevocationListV3 \
    > test.out 2>&1
eval_tap $? 264 'GetRevocationListV3' test.out

#- 265 TokenRevocationV3
$CLI_EXE \
    --sn iam \
    --op TokenRevocationV3 \
    --token 'w36O6WEZ' \
    > test.out 2>&1
eval_tap $? 265 'TokenRevocationV3' test.out

#- 266 SimultaneousLoginV3
$CLI_EXE \
    --sn iam \
    --op SimultaneousLoginV3 \
    --simultaneousPlatform 'LMLHiBtG' \
    --simultaneousTicket 'Jp05O5jV' \
    --nativePlatform 'steam' \
    --nativePlatformTicket 'Nkv17Aya' \
    > test.out 2>&1
eval_tap $? 266 'SimultaneousLoginV3' test.out

#- 267 TokenGrantV3
$CLI_EXE \
    --sn iam \
    --op TokenGrantV3 \
    --additionalData 'vRFIIljv' \
    --client_id 'b0I1X2xS' \
    --client_secret 'lAShKBSU' \
    --code '8rAOFpBf' \
    --code_verifier 'Mwg9vx33' \
    --extendNamespace '5iXTQUcK' \
    --extend_exp 'true' \
    --password 'qOvynFZ9' \
    --redirect_uri 'ycjtWQkw' \
    --refresh_token 'SIeiIoI2' \
    --scope 'PensQ7nm' \
    --username 'mwlH1LtN' \
    --grant_type 'authorization_code' \
    > test.out 2>&1
eval_tap $? 267 'TokenGrantV3' test.out

#- 268 VerifyTokenV3
$CLI_EXE \
    --sn iam \
    --op VerifyTokenV3 \
    --token 'zF7HdudQ' \
    > test.out 2>&1
eval_tap $? 268 'VerifyTokenV3' test.out

#- 269 PlatformAuthenticationV3
$CLI_EXE \
    --sn iam \
    --op PlatformAuthenticationV3 \
    --platformId '4TCjg2lJ' \
    --code '2zD58reF' \
    --error 'yMAynM0F' \
    --openidAssocHandle '1sA63v3W' \
    --openidClaimedId 'VkjtqDQl' \
    --openidIdentity 'OUvCg8b4' \
    --openidMode 'otZK49h5' \
    --openidNs 'TaVbsU4c' \
    --openidOpEndpoint '9LGSOVLu' \
    --openidResponseNonce 'Kmv6eJGx' \
    --openidReturnTo 'dQqMw3AB' \
    --openidSig 'EsJ78LWn' \
    --openidSigned 'QzOnyGfo' \
    --state 'lg63SUIf' \
    > test.out 2>&1
eval_tap $? 269 'PlatformAuthenticationV3' test.out

#- 270 PlatformTokenRefreshV3
$CLI_EXE \
    --sn iam \
    --op PlatformTokenRefreshV3 \
    --platformId 'v1WAshVu' \
    --platform_token '8VTtUpPV' \
    > test.out 2>&1
eval_tap $? 270 'PlatformTokenRefreshV3' test.out

#- 271 PublicGetInputValidations
$CLI_EXE \
    --sn iam \
    --op PublicGetInputValidations \
    --defaultOnEmpty 'true' \
    --languageCode 'ClEJgbMt' \
    > test.out 2>&1
eval_tap $? 271 'PublicGetInputValidations' test.out

#- 272 PublicGetInputValidationByField
$CLI_EXE \
    --sn iam \
    --op PublicGetInputValidationByField \
    --field 'baDL9F1Y' \
    > test.out 2>&1
eval_tap $? 272 'PublicGetInputValidationByField' test.out

#- 273 PublicGetCountryAgeRestrictionV3
$CLI_EXE \
    --sn iam \
    --op PublicGetCountryAgeRestrictionV3 \
    --countryCode 'g0DayGl0' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 273 'PublicGetCountryAgeRestrictionV3' test.out

#- 274 PublicGetConfigValueV3
$CLI_EXE \
    --sn iam \
    --op PublicGetConfigValueV3 \
    --configKey 'JYildUJF' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 274 'PublicGetConfigValueV3' test.out

#- 275 PublicGetCountryListV3
$CLI_EXE \
    --sn iam \
    --op PublicGetCountryListV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 275 'PublicGetCountryListV3' test.out

#- 276 RetrieveAllActiveThirdPartyLoginPlatformCredentialPublicV3
$CLI_EXE \
    --sn iam \
    --op RetrieveAllActiveThirdPartyLoginPlatformCredentialPublicV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 276 'RetrieveAllActiveThirdPartyLoginPlatformCredentialPublicV3' test.out

#- 277 RetrieveActiveOIDCClientsPublicV3
$CLI_EXE \
    --sn iam \
    --op RetrieveActiveOIDCClientsPublicV3 \
    --namespace $AB_NAMESPACE \
    --clientId 'oWhJDQVA' \
    > test.out 2>&1
eval_tap $? 277 'RetrieveActiveOIDCClientsPublicV3' test.out

#- 278 PublicListUserIDByPlatformUserIDsV3
eval_tap 0 278 'PublicListUserIDByPlatformUserIDsV3 # SKIP deprecated' test.out

#- 279 PublicGetUserByPlatformUserIDV3
eval_tap 0 279 'PublicGetUserByPlatformUserIDV3 # SKIP deprecated' test.out

#- 280 PublicGetProfileUpdateStrategyV3
$CLI_EXE \
    --sn iam \
    --op PublicGetProfileUpdateStrategyV3 \
    --namespace $AB_NAMESPACE \
    --field 'username' \
    > test.out 2>&1
eval_tap $? 280 'PublicGetProfileUpdateStrategyV3' test.out

#- 281 PublicGetAsyncStatus
$CLI_EXE \
    --sn iam \
    --op PublicGetAsyncStatus \
    --namespace $AB_NAMESPACE \
    --requestId 'n8tNyKTr' \
    > test.out 2>&1
eval_tap $? 281 'PublicGetAsyncStatus' test.out

#- 282 PublicSearchUserV3
$CLI_EXE \
    --sn iam \
    --op PublicSearchUserV3 \
    --namespace $AB_NAMESPACE \
    --by 'lUQjqdLi' \
    --limit '67' \
    --offset '19' \
    --platformBy 'gxFrVm7i' \
    --platformId 'FCUVZT5H' \
    --query 'k9SA2va7' \
    > test.out 2>&1
eval_tap $? 282 'PublicSearchUserV3' test.out

#- 283 PublicCreateUserV3
# body param: body
echo '{"PasswordMD5Sum": "P6l6RIvO", "acceptedPolicies": [{"isAccepted": false, "localizedPolicyVersionId": "DmUBEtup", "policyId": "dnNloohQ", "policyVersionId": "QRumw7c0"}, {"isAccepted": true, "localizedPolicyVersionId": "tTOUnMLQ", "policyId": "sjM8TEPq", "policyVersionId": "ZGG1k1xf"}, {"isAccepted": true, "localizedPolicyVersionId": "DuLMoHQr", "policyId": "SM3HMMRb", "policyVersionId": "TnRWv1Ho"}], "authType": "TZWkvPfE", "code": "odYTnXii", "country": "F91q96Zs", "dateOfBirth": "zIsflWAG", "displayName": "gjWTHaxq", "emailAddress": "fb3hofK6", "password": "fDmaDbz8", "reachMinimumAge": false, "uniqueDisplayName": "gFZWwTml"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicCreateUserV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 283 'PublicCreateUserV3' test.out

#- 284 CheckUserAvailability
$CLI_EXE \
    --sn iam \
    --op CheckUserAvailability \
    --namespace $AB_NAMESPACE \
    --field 'vNmOxJrt' \
    --query 'OmWZEIBm' \
    > test.out 2>&1
eval_tap $? 284 'CheckUserAvailability' test.out

#- 285 PublicBulkGetUsers
eval_tap 0 285 'PublicBulkGetUsers # SKIP deprecated' test.out

#- 286 PublicSendRegistrationCode
# body param: body
echo '{"emailAddress": "t0vkqRIc", "languageTag": "lHxVpomv"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicSendRegistrationCode \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 286 'PublicSendRegistrationCode' test.out

#- 287 PublicVerifyRegistrationCode
# body param: body
echo '{"code": "CqwB0RYF", "emailAddress": "W3K7R5MJ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicVerifyRegistrationCode \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 287 'PublicVerifyRegistrationCode' test.out

#- 288 PublicForgotPasswordV3
# body param: body
echo '{"emailAddress": "EIE0VNwM", "languageTag": "U4QlwMPW"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicForgotPasswordV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 288 'PublicForgotPasswordV3' test.out

#- 289 PublicValidateUserInput
# body param: body
echo '{"displayName": "vBRfD7Cv", "password": "wHGwo4n7", "uniqueDisplayName": "8B4nBM5j", "username": "SzKxOf1c"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicValidateUserInput \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 289 'PublicValidateUserInput' test.out

#- 290 GetAdminInvitationV3
$CLI_EXE \
    --sn iam \
    --op GetAdminInvitationV3 \
    --invitationId 'I2HJJhom' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 290 'GetAdminInvitationV3' test.out

#- 291 CreateUserFromInvitationV3
# body param: body
echo '{"PasswordMD5Sum": "ZSav8l2m", "acceptedPolicies": [{"isAccepted": false, "localizedPolicyVersionId": "ul7z1ouR", "policyId": "wu2v5K51", "policyVersionId": "FiH4IJDA"}, {"isAccepted": false, "localizedPolicyVersionId": "fZpqzozU", "policyId": "AH2soOvK", "policyVersionId": "WyugKtYT"}, {"isAccepted": true, "localizedPolicyVersionId": "otkYfmv1", "policyId": "soyRsYk6", "policyVersionId": "kyylGWCy"}], "authType": "NWhziwir", "code": "9V2mpxjM", "country": "GyZtXVlk", "dateOfBirth": "77MAU1ya", "displayName": "YXWRWyQF", "emailAddress": "CCAqx78z", "password": "b37i1cfB", "reachMinimumAge": true, "uniqueDisplayName": "yLokBoBj"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op CreateUserFromInvitationV3 \
    --invitationId 'strUvnIH' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 291 'CreateUserFromInvitationV3' test.out

#- 292 UpdateUserV3
# body param: body
echo '{"avatarUrl": "SzuQBMss", "country": "14rZ2YRn", "dateOfBirth": "aORcWzy5", "displayName": "IpkrkMpx", "languageTag": "LHQluJ6R", "uniqueDisplayName": "jLfKxoSn", "userName": "gWdooR9Z"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op UpdateUserV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 292 'UpdateUserV3' test.out

#- 293 PublicPartialUpdateUserV3
# body param: body
echo '{"avatarUrl": "SNGLM5JP", "country": "JlUBkdia", "dateOfBirth": "Yr021x3v", "displayName": "BQVGdJfV", "languageTag": "mlFthLZE", "uniqueDisplayName": "DkfeCo25", "userName": "MdElSATq"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicPartialUpdateUserV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 293 'PublicPartialUpdateUserV3' test.out

#- 294 PublicSendVerificationCodeV3
# body param: body
echo '{"context": "LG5atoxQ", "emailAddress": "UJrGCCvM", "languageTag": "Xedwfh1u", "upgradeToken": "DndfgL3O"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicSendVerificationCodeV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 294 'PublicSendVerificationCodeV3' test.out

#- 295 PublicUserVerificationV3
# body param: body
echo '{"code": "u4821fLa", "contactType": "Ebd937kc", "languageTag": "o6fWkR0c", "validateOnly": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUserVerificationV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 295 'PublicUserVerificationV3' test.out

#- 296 PublicUpgradeHeadlessAccountV3
# body param: body
echo '{"code": "EPMQOIZa", "country": "19BTuSYw", "dateOfBirth": "wPm1NYVV", "displayName": "fmpW7msT", "emailAddress": "ekP129KM", "password": "1V2ekUMs", "uniqueDisplayName": "k46LY0Pf", "validateOnly": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpgradeHeadlessAccountV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 296 'PublicUpgradeHeadlessAccountV3' test.out

#- 297 PublicVerifyHeadlessAccountV3
# body param: body
echo '{"emailAddress": "xROV3KZz", "password": "Cx9MjPWx"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicVerifyHeadlessAccountV3 \
    --namespace $AB_NAMESPACE \
    --needVerificationCode 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 297 'PublicVerifyHeadlessAccountV3' test.out

#- 298 PublicUpdatePasswordV3
# body param: body
echo '{"languageTag": "SHsrOd2B", "mfaToken": "0v9R3lYV", "newPassword": "0mLedpJo", "oldPassword": "gnkgellN"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpdatePasswordV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 298 'PublicUpdatePasswordV3' test.out

#- 299 PublicCreateJusticeUser
$CLI_EXE \
    --sn iam \
    --op PublicCreateJusticeUser \
    --namespace $AB_NAMESPACE \
    --targetNamespace '0EX4wdrA' \
    > test.out 2>&1
eval_tap $? 299 'PublicCreateJusticeUser' test.out

#- 300 PublicPlatformLinkV3
$CLI_EXE \
    --sn iam \
    --op PublicPlatformLinkV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'JvSQMyPF' \
    --redirectUri 'QjRcbj7H' \
    --ticket '44iuWTKu' \
    > test.out 2>&1
eval_tap $? 300 'PublicPlatformLinkV3' test.out

#- 301 PublicPlatformUnlinkV3
eval_tap 0 301 'PublicPlatformUnlinkV3 # SKIP deprecated' test.out

#- 302 PublicPlatformUnlinkAllV3
$CLI_EXE \
    --sn iam \
    --op PublicPlatformUnlinkAllV3 \
    --namespace $AB_NAMESPACE \
    --platformId '3btnIJEY' \
    > test.out 2>&1
eval_tap $? 302 'PublicPlatformUnlinkAllV3' test.out

#- 303 PublicForcePlatformLinkV3
$CLI_EXE \
    --sn iam \
    --op PublicForcePlatformLinkV3 \
    --namespace $AB_NAMESPACE \
    --platformId '253ptACy' \
    --ticket 'puSIaw1g' \
    > test.out 2>&1
eval_tap $? 303 'PublicForcePlatformLinkV3' test.out

#- 304 PublicWebLinkPlatform
$CLI_EXE \
    --sn iam \
    --op PublicWebLinkPlatform \
    --namespace $AB_NAMESPACE \
    --platformId 'UowcvaQD' \
    --clientId '1GeJl4T1' \
    --redirectUri 'LDezGsEN' \
    > test.out 2>&1
eval_tap $? 304 'PublicWebLinkPlatform' test.out

#- 305 PublicWebLinkPlatformEstablish
$CLI_EXE \
    --sn iam \
    --op PublicWebLinkPlatformEstablish \
    --namespace $AB_NAMESPACE \
    --platformId 'EDtjtEqU' \
    --code 'nJxc5xPm' \
    --state 'uUKrk6vo' \
    > test.out 2>&1
eval_tap $? 305 'PublicWebLinkPlatformEstablish' test.out

#- 306 PublicProcessWebLinkPlatformV3
$CLI_EXE \
    --sn iam \
    --op PublicProcessWebLinkPlatformV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'AEfJeaHK' \
    --code 'j49mQIMh' \
    --state 'aExGoU9J' \
    > test.out 2>&1
eval_tap $? 306 'PublicProcessWebLinkPlatformV3' test.out

#- 307 PublicGetUsersPlatformInfosV3
# body param: body
echo '{"platformId": "7lT1sRqZ", "userIds": ["Uxw3E0bO", "MoU3rAbA", "4g8KsDOv"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicGetUsersPlatformInfosV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 307 'PublicGetUsersPlatformInfosV3' test.out

#- 308 ResetPasswordV3
# body param: body
echo '{"clientId": "X21oRRlY", "code": "IqK7DzAr", "emailAddress": "Q8nY5zxS", "languageTag": "vPhCxkLy", "newPassword": "Bw02QdoE"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op ResetPasswordV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 308 'ResetPasswordV3' test.out

#- 309 PublicGetUserByUserIdV3
eval_tap 0 309 'PublicGetUserByUserIdV3 # SKIP deprecated' test.out

#- 310 PublicGetUserBanHistoryV3
$CLI_EXE \
    --sn iam \
    --op PublicGetUserBanHistoryV3 \
    --namespace $AB_NAMESPACE \
    --userId 'pHH5PAhZ' \
    --activeOnly 'false' \
    --after 'UNLjlSgK' \
    --before '9i5jVJLS' \
    --limit '73' \
    > test.out 2>&1
eval_tap $? 310 'PublicGetUserBanHistoryV3' test.out

#- 311 PublicListUserAllPlatformAccountsDistinctV3
$CLI_EXE \
    --sn iam \
    --op PublicListUserAllPlatformAccountsDistinctV3 \
    --namespace $AB_NAMESPACE \
    --userId 'lhwION3o' \
    > test.out 2>&1
eval_tap $? 311 'PublicListUserAllPlatformAccountsDistinctV3' test.out

#- 312 PublicGetUserInformationV3
$CLI_EXE \
    --sn iam \
    --op PublicGetUserInformationV3 \
    --namespace $AB_NAMESPACE \
    --userId 'Hb6Z7fWt' \
    > test.out 2>&1
eval_tap $? 312 'PublicGetUserInformationV3' test.out

#- 313 PublicGetUserLoginHistoriesV3
$CLI_EXE \
    --sn iam \
    --op PublicGetUserLoginHistoriesV3 \
    --namespace $AB_NAMESPACE \
    --userId 'exQDPyMd' \
    --after '0.47326403424095365' \
    --before '0.2631981743964573' \
    --limit '97' \
    > test.out 2>&1
eval_tap $? 313 'PublicGetUserLoginHistoriesV3' test.out

#- 314 PublicGetUserPlatformAccountsV3
$CLI_EXE \
    --sn iam \
    --op PublicGetUserPlatformAccountsV3 \
    --namespace $AB_NAMESPACE \
    --userId 'iBh1C1oo' \
    --after 'D6d8IHrM' \
    --before 'DiGosHKP' \
    --limit '5' \
    --platformId 'sbJOtuJ2' \
    > test.out 2>&1
eval_tap $? 314 'PublicGetUserPlatformAccountsV3' test.out

#- 315 PublicListJusticePlatformAccountsV3
$CLI_EXE \
    --sn iam \
    --op PublicListJusticePlatformAccountsV3 \
    --namespace $AB_NAMESPACE \
    --userId 'wk9F3sjo' \
    > test.out 2>&1
eval_tap $? 315 'PublicListJusticePlatformAccountsV3' test.out

#- 316 PublicLinkPlatformAccount
# body param: body
echo '{"platformId": "r9duI3fk", "platformUserId": "kayYANNu"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicLinkPlatformAccount \
    --namespace $AB_NAMESPACE \
    --userId 'ZnaNc577' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 316 'PublicLinkPlatformAccount' test.out

#- 317 PublicForceLinkPlatformWithProgression
# body param: body
echo '{"chosenNamespaces": ["Wapw6YSL", "ZvxKqTRm", "fgItsbBG"], "requestId": "VEotFtaB"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicForceLinkPlatformWithProgression \
    --namespace $AB_NAMESPACE \
    --userId 'owBVrU60' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 317 'PublicForceLinkPlatformWithProgression' test.out

#- 318 PublicGetPublisherUserV3
$CLI_EXE \
    --sn iam \
    --op PublicGetPublisherUserV3 \
    --namespace $AB_NAMESPACE \
    --userId '0CK1itDC' \
    > test.out 2>&1
eval_tap $? 318 'PublicGetPublisherUserV3' test.out

#- 319 PublicValidateUserByUserIDAndPasswordV3
$CLI_EXE \
    --sn iam \
    --op PublicValidateUserByUserIDAndPasswordV3 \
    --namespace $AB_NAMESPACE \
    --userId '11ZLc8Qd' \
    --password 'jokVXC2S' \
    > test.out 2>&1
eval_tap $? 319 'PublicValidateUserByUserIDAndPasswordV3' test.out

#- 320 PublicGetRolesV3
$CLI_EXE \
    --sn iam \
    --op PublicGetRolesV3 \
    --after 'XY6PdaR0' \
    --before 'SGhyAXT0' \
    --isWildcard 'false' \
    --limit '91' \
    > test.out 2>&1
eval_tap $? 320 'PublicGetRolesV3' test.out

#- 321 PublicGetRoleV3
$CLI_EXE \
    --sn iam \
    --op PublicGetRoleV3 \
    --roleId 'QgqmbqZn' \
    > test.out 2>&1
eval_tap $? 321 'PublicGetRoleV3' test.out

#- 322 PublicForgotPasswordWithoutNamespaceV3
# body param: body
echo '{"clientId": "YRjkPDfP", "emailAddress": "fTgcUpjm", "languageTag": "6oXgiaqd"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicForgotPasswordWithoutNamespaceV3 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 322 'PublicForgotPasswordWithoutNamespaceV3' test.out

#- 323 PublicGetMyUserV3
$CLI_EXE \
    --sn iam \
    --op PublicGetMyUserV3 \
    --includeAllPlatforms 'true' \
    > test.out 2>&1
eval_tap $? 323 'PublicGetMyUserV3' test.out

#- 324 PublicSendCodeForwardV3
# body param: body
echo '{"context": "1ixRNdTL", "emailAddress": "DHTLQsmy", "languageTag": "P2rWK7Gl", "upgradeToken": "lL1vmWcA"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicSendCodeForwardV3 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 324 'PublicSendCodeForwardV3' test.out

#- 325 PublicGetLinkHeadlessAccountToMyAccountConflictV3
$CLI_EXE \
    --sn iam \
    --op PublicGetLinkHeadlessAccountToMyAccountConflictV3 \
    --oneTimeLinkCode 'CSxaAoPM' \
    > test.out 2>&1
eval_tap $? 325 'PublicGetLinkHeadlessAccountToMyAccountConflictV3' test.out

#- 326 LinkHeadlessAccountToMyAccountV3
# body param: body
echo '{"chosenNamespaces": ["fFIngzPR", "tGBhqrTw", "DvQGZSzc"], "oneTimeLinkCode": "0oEsX6jS"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op LinkHeadlessAccountToMyAccountV3 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 326 'LinkHeadlessAccountToMyAccountV3' test.out

#- 327 PublicGetMyRedirectionAfterLinkV3
$CLI_EXE \
    --sn iam \
    --op PublicGetMyRedirectionAfterLinkV3 \
    --oneTimeLinkCode 'j82Qh9xd' \
    > test.out 2>&1
eval_tap $? 327 'PublicGetMyRedirectionAfterLinkV3' test.out

#- 328 PublicGetMyProfileAllowUpdateStatusV3
$CLI_EXE \
    --sn iam \
    --op PublicGetMyProfileAllowUpdateStatusV3 \
    > test.out 2>&1
eval_tap $? 328 'PublicGetMyProfileAllowUpdateStatusV3' test.out

#- 329 PublicSendVerificationLinkV3
# body param: body
echo '{"languageTag": "8MijV5kR"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicSendVerificationLinkV3 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 329 'PublicSendVerificationLinkV3' test.out

#- 330 PublicGetOpenidUserInfoV3
$CLI_EXE \
    --sn iam \
    --op PublicGetOpenidUserInfoV3 \
    > test.out 2>&1
eval_tap $? 330 'PublicGetOpenidUserInfoV3' test.out

#- 331 PublicVerifyUserByLinkV3
$CLI_EXE \
    --sn iam \
    --op PublicVerifyUserByLinkV3 \
    --code 'MN7FrZ9L' \
    > test.out 2>&1
eval_tap $? 331 'PublicVerifyUserByLinkV3' test.out

#- 332 PlatformAuthenticateSAMLV3Handler
$CLI_EXE \
    --sn iam \
    --op PlatformAuthenticateSAMLV3Handler \
    --platformId 'JdR0C7tP' \
    --code 'FuzmDEy2' \
    --error 'YQclb259' \
    --state '2II2aoDM' \
    > test.out 2>&1
eval_tap $? 332 'PlatformAuthenticateSAMLV3Handler' test.out

#- 333 LoginSSOClient
$CLI_EXE \
    --sn iam \
    --op LoginSSOClient \
    --platformId 'mLlF8uvA' \
    --payload 'N6xyRoDm' \
    > test.out 2>&1
eval_tap $? 333 'LoginSSOClient' test.out

#- 334 LogoutSSOClient
$CLI_EXE \
    --sn iam \
    --op LogoutSSOClient \
    --platformId 'esDGuloT' \
    > test.out 2>&1
eval_tap $? 334 'LogoutSSOClient' test.out

#- 335 RequestTargetTokenResponseV3
$CLI_EXE \
    --sn iam \
    --op RequestTargetTokenResponseV3 \
    --additionalData 'rXxsfhvC' \
    --code 'ZZf6H5FL' \
    > test.out 2>&1
eval_tap $? 335 'RequestTargetTokenResponseV3' test.out

#- 336 UpgradeAndAuthenticateForwardV3
$CLI_EXE \
    --sn iam \
    --op UpgradeAndAuthenticateForwardV3 \
    --client_id 'b983RAKM' \
    --upgrade_success_token 'zyRCyGZj' \
    > test.out 2>&1
eval_tap $? 336 'UpgradeAndAuthenticateForwardV3' test.out

#- 337 AdminListInvitationHistoriesV4
$CLI_EXE \
    --sn iam \
    --op AdminListInvitationHistoriesV4 \
    --limit '80' \
    --namespace_ 'eVrXIi3x' \
    --offset '25' \
    > test.out 2>&1
eval_tap $? 337 'AdminListInvitationHistoriesV4' test.out

#- 338 AdminGetDevicesByUserV4
$CLI_EXE \
    --sn iam \
    --op AdminGetDevicesByUserV4 \
    --namespace $AB_NAMESPACE \
    --userId 'JywrNxCR' \
    > test.out 2>&1
eval_tap $? 338 'AdminGetDevicesByUserV4' test.out

#- 339 AdminGetBannedDevicesV4
$CLI_EXE \
    --sn iam \
    --op AdminGetBannedDevicesV4 \
    --namespace $AB_NAMESPACE \
    --deviceType 'bsurEo74' \
    --endDate '2T8xOFIm' \
    --limit '11' \
    --offset '76' \
    --startDate 'ADFxejbQ' \
    > test.out 2>&1
eval_tap $? 339 'AdminGetBannedDevicesV4' test.out

#- 340 AdminGetUserDeviceBansV4
$CLI_EXE \
    --sn iam \
    --op AdminGetUserDeviceBansV4 \
    --namespace $AB_NAMESPACE \
    --userId '4VzyXELY' \
    > test.out 2>&1
eval_tap $? 340 'AdminGetUserDeviceBansV4' test.out

#- 341 AdminBanDeviceV4
# body param: body
echo '{"comment": "SG1Z1tUO", "deviceId": "JEl9cJkU", "deviceType": "g3OjZChl", "enabled": false, "endDate": "POGVzS2P", "ext": {"urcJvh8k": {}, "5VvLY1v7": {}, "cy60LVNd": {}}, "reason": "QDHG1Suu"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBanDeviceV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 341 'AdminBanDeviceV4' test.out

#- 342 AdminGetDeviceBanV4
$CLI_EXE \
    --sn iam \
    --op AdminGetDeviceBanV4 \
    --banId 'tdy4aZk6' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 342 'AdminGetDeviceBanV4' test.out

#- 343 AdminUpdateDeviceBanV4
# body param: body
echo '{"enabled": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateDeviceBanV4 \
    --banId 'TH6YNg5Z' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 343 'AdminUpdateDeviceBanV4' test.out

#- 344 AdminGenerateReportV4
$CLI_EXE \
    --sn iam \
    --op AdminGenerateReportV4 \
    --namespace $AB_NAMESPACE \
    --endDate 'PFoCtBVB' \
    --startDate '0nO4wEa2' \
    --deviceType 'QDAA7Wa6' \
    > test.out 2>&1
eval_tap $? 344 'AdminGenerateReportV4' test.out

#- 345 AdminGetDeviceTypesV4
$CLI_EXE \
    --sn iam \
    --op AdminGetDeviceTypesV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 345 'AdminGetDeviceTypesV4' test.out

#- 346 AdminGetDeviceBansV4
$CLI_EXE \
    --sn iam \
    --op AdminGetDeviceBansV4 \
    --deviceId 'bKTryXQx' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 346 'AdminGetDeviceBansV4' test.out

#- 347 AdminDecryptDeviceV4
eval_tap 0 347 'AdminDecryptDeviceV4 # SKIP deprecated' test.out

#- 348 AdminUnbanDeviceV4
$CLI_EXE \
    --sn iam \
    --op AdminUnbanDeviceV4 \
    --deviceId 'iny8dvNs' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 348 'AdminUnbanDeviceV4' test.out

#- 349 AdminGetUsersByDeviceV4
$CLI_EXE \
    --sn iam \
    --op AdminGetUsersByDeviceV4 \
    --deviceId 'Bvbg0tcT' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 349 'AdminGetUsersByDeviceV4' test.out

#- 350 AdminGetNamespaceInvitationHistoryV4
$CLI_EXE \
    --sn iam \
    --op AdminGetNamespaceInvitationHistoryV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 350 'AdminGetNamespaceInvitationHistoryV4' test.out

#- 351 AdminGetNamespaceUserInvitationHistoryV4
$CLI_EXE \
    --sn iam \
    --op AdminGetNamespaceUserInvitationHistoryV4 \
    --namespace $AB_NAMESPACE \
    --limit '7' \
    --offset '79' \
    > test.out 2>&1
eval_tap $? 351 'AdminGetNamespaceUserInvitationHistoryV4' test.out

#- 352 AdminCreateTestUsersV4
# body param: body
echo '{"acceptedPolicies": [{"isAccepted": false, "localizedPolicyVersionId": "UNZYrc92", "policyId": "8NuJ0vOr", "policyVersionId": "AhcC3CQv"}, {"isAccepted": false, "localizedPolicyVersionId": "w1pVllnM", "policyId": "fPFnrvBX", "policyVersionId": "LM1nw6jk"}, {"isAccepted": true, "localizedPolicyVersionId": "sq4zCp6a", "policyId": "WnttciKl", "policyVersionId": "WZAELbjJ"}], "count": 95, "userInfo": {"country": "jUWBIrc3"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminCreateTestUsersV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 352 'AdminCreateTestUsersV4' test.out

#- 353 AdminCreateUserV4
# body param: body
echo '{"acceptedPolicies": [{"isAccepted": true, "localizedPolicyVersionId": "6chy5M7m", "policyId": "OiXRTCvJ", "policyVersionId": "UEOTr8xu"}, {"isAccepted": true, "localizedPolicyVersionId": "a7FqKXEV", "policyId": "DCcRExjg", "policyVersionId": "TfVquFif"}, {"isAccepted": true, "localizedPolicyVersionId": "mvxVOaiB", "policyId": "GM2pIEiA", "policyVersionId": "EevPXkDv"}], "authType": "EMAILPASSWD", "code": "y516sKDy", "country": "EZACP6R2", "dateOfBirth": "vnCc220r", "displayName": "oMmPzvAX", "emailAddress": "fp2rL6od", "password": "d46sItYL", "passwordMD5Sum": "QoOf4FMB", "reachMinimumAge": true, "uniqueDisplayName": "M3AgEHKB", "username": "zG58rhQU"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminCreateUserV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 353 'AdminCreateUserV4' test.out

#- 354 AdminBulkUpdateUserAccountTypeV4
# body param: body
echo '{"testAccount": false, "userIds": ["BPipACzl", "5rLjv3Af", "tTj5wTR9"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBulkUpdateUserAccountTypeV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 354 'AdminBulkUpdateUserAccountTypeV4' test.out

#- 355 AdminBulkCheckValidUserIDV4
# body param: body
echo '{"userIds": ["nUTA4OXZ", "HpS1Q4H9", "USQplOpn"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBulkCheckValidUserIDV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 355 'AdminBulkCheckValidUserIDV4' test.out

#- 356 AdminUpdateUserV4
# body param: body
echo '{"avatarUrl": "AKuWsZoz", "country": "WaCsNTVm", "dateOfBirth": "SKJRahb0", "displayName": "fPC1m9ts", "languageTag": "n01SIvq4", "skipLoginQueue": true, "tags": ["xOiaJs22", "V1K8azN5", "PQl5Ywen"], "uniqueDisplayName": "Sj70sFNG", "userName": "ehtFb00O"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserV4 \
    --namespace $AB_NAMESPACE \
    --userId 'hlr0kVUD' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 356 'AdminUpdateUserV4' test.out

#- 357 AdminUpdateUserEmailAddressV4
# body param: body
echo '{"code": "4zdmC9U6", "emailAddress": "grJ7j2Rf"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserEmailAddressV4 \
    --namespace $AB_NAMESPACE \
    --userId 'I6cTTa09' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 357 'AdminUpdateUserEmailAddressV4' test.out

#- 358 AdminDisableUserMFAV4
# body param: body
echo '{"factor": "3Pwi0fYH", "mfaToken": "h7vUHKoY"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDisableUserMFAV4 \
    --namespace $AB_NAMESPACE \
    --userId 'EZM7gIpP' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 358 'AdminDisableUserMFAV4' test.out

#- 359 AdminGetUserMFAStatusV4
$CLI_EXE \
    --sn iam \
    --op AdminGetUserMFAStatusV4 \
    --namespace $AB_NAMESPACE \
    --userId '9oOCM1y6' \
    > test.out 2>&1
eval_tap $? 359 'AdminGetUserMFAStatusV4' test.out

#- 360 AdminListUserRolesV4
$CLI_EXE \
    --sn iam \
    --op AdminListUserRolesV4 \
    --namespace $AB_NAMESPACE \
    --userId 'yuaA9KbH' \
    > test.out 2>&1
eval_tap $? 360 'AdminListUserRolesV4' test.out

#- 361 AdminUpdateUserRoleV4
# body param: body
echo '{"assignedNamespaces": ["WjOs9GTG", "7voxY4NZ", "borZ6fGG"], "roleId": "3CXN2MmW"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserRoleV4 \
    --namespace $AB_NAMESPACE \
    --userId 'JHD1nfSj' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 361 'AdminUpdateUserRoleV4' test.out

#- 362 AdminAddUserRoleV4
# body param: body
echo '{"assignedNamespaces": ["6j8W9y6A", "1VjCTDIf", "HAPfEK9s"], "roleId": "XnuiZ8EK"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddUserRoleV4 \
    --namespace $AB_NAMESPACE \
    --userId 'f1e0vD7i' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 362 'AdminAddUserRoleV4' test.out

#- 363 AdminRemoveUserRoleV4
# body param: body
echo '{"assignedNamespaces": ["Qa1Y150A", "hab2TPuh", "kry3Xdbu"], "roleId": "eBUCZvXo"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminRemoveUserRoleV4 \
    --namespace $AB_NAMESPACE \
    --userId '3Fl7aBB8' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 363 'AdminRemoveUserRoleV4' test.out

#- 364 AdminGetRolesV4
$CLI_EXE \
    --sn iam \
    --op AdminGetRolesV4 \
    --adminRole 'true' \
    --isWildcard 'false' \
    --limit '50' \
    --offset '80' \
    > test.out 2>&1
eval_tap $? 364 'AdminGetRolesV4' test.out

#- 365 AdminCreateRoleV4
# body param: body
echo '{"adminRole": true, "deletable": true, "isWildcard": false, "roleName": "OMRVFDXZ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminCreateRoleV4 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 365 'AdminCreateRoleV4' test.out

#- 366 AdminGetRoleV4
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleV4 \
    --roleId 'WsWWLgQ5' \
    > test.out 2>&1
eval_tap $? 366 'AdminGetRoleV4' test.out

#- 367 AdminDeleteRoleV4
$CLI_EXE \
    --sn iam \
    --op AdminDeleteRoleV4 \
    --roleId 'jSk8YKPk' \
    > test.out 2>&1
eval_tap $? 367 'AdminDeleteRoleV4' test.out

#- 368 AdminUpdateRoleV4
# body param: body
echo '{"adminRole": true, "deletable": false, "isWildcard": true, "roleName": "aQay4w0z"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateRoleV4 \
    --roleId 'GLAI676G' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 368 'AdminUpdateRoleV4' test.out

#- 369 AdminUpdateRolePermissionsV4
# body param: body
echo '{"permissions": [{"action": 35, "resource": "iAFenGfw", "schedAction": 14, "schedCron": "oCmXuG3L", "schedRange": ["ODNFTmF0", "JoiNwqtB", "h77paky8"]}, {"action": 54, "resource": "vPDV041G", "schedAction": 86, "schedCron": "WLwo9z3s", "schedRange": ["pURRgIvK", "aZmD0Cp7", "93gSrmCv"]}, {"action": 37, "resource": "WKTSyzgN", "schedAction": 70, "schedCron": "VeG6CTXy", "schedRange": ["r1VhK9n1", "P7MgtOrv", "qdZvJEIX"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateRolePermissionsV4 \
    --roleId '2WPYPYsi' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 369 'AdminUpdateRolePermissionsV4' test.out

#- 370 AdminAddRolePermissionsV4
# body param: body
echo '{"permissions": [{"action": 79, "resource": "ls1Lmct4", "schedAction": 56, "schedCron": "emteid2D", "schedRange": ["7LSnPWAM", "JyadrIxe", "mMKgz1xu"]}, {"action": 12, "resource": "abyHx86r", "schedAction": 53, "schedCron": "5NwN6uBb", "schedRange": ["yFqPhrLo", "5cVOu6Oc", "DaYzU4TN"]}, {"action": 37, "resource": "xzSHKv2s", "schedAction": 26, "schedCron": "7qBlrVtZ", "schedRange": ["tQuXGtk6", "BenQHZh8", "Dddk0s1c"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddRolePermissionsV4 \
    --roleId 'RdIJyTFk' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 370 'AdminAddRolePermissionsV4' test.out

#- 371 AdminDeleteRolePermissionsV4
# body param: body
echo '["cZhdn86I", "pQNPxcyb", "cpJixqFE"]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDeleteRolePermissionsV4 \
    --roleId 'Qoy2LpjV' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 371 'AdminDeleteRolePermissionsV4' test.out

#- 372 AdminListAssignedUsersV4
$CLI_EXE \
    --sn iam \
    --op AdminListAssignedUsersV4 \
    --roleId 'LVIHYl3V' \
    --after '4nbNZAKZ' \
    --before 'yOixoOY8' \
    --limit '62' \
    > test.out 2>&1
eval_tap $? 372 'AdminListAssignedUsersV4' test.out

#- 373 AdminAssignUserToRoleV4
# body param: body
echo '{"assignedNamespaces": ["wkxVuThI", "1eDSofAD", "MpSoh6dA"], "namespace": "HvT88zrK", "userId": "uIKUX5TM"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAssignUserToRoleV4 \
    --roleId 'UI7NH1c2' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 373 'AdminAssignUserToRoleV4' test.out

#- 374 AdminRevokeUserFromRoleV4
# body param: body
echo '{"namespace": "GM7ySP7a", "userId": "8nwX4P7S"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminRevokeUserFromRoleV4 \
    --roleId 'L9EDbJf3' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 374 'AdminRevokeUserFromRoleV4' test.out

#- 375 AdminInviteUserNewV4
# body param: body
echo '{"assignedNamespaces": ["NtBMILhS", "84rH1YCS", "JC9I6H5T"], "emailAddresses": ["xFS9Y6ww", "wSzZC9Uv", "yFhgyyRM"], "isAdmin": true, "isNewStudio": true, "languageTag": "i0CqFM4p", "namespace": "V5vTTQNI", "roleId": "XzmarVcV"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminInviteUserNewV4 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 375 'AdminInviteUserNewV4' test.out

#- 376 AdminUpdateMyUserV4
# body param: body
echo '{"avatarUrl": "6egy2oqo", "country": "EQAdN2eB", "dateOfBirth": "yKEozNKp", "displayName": "PKxXBkew", "languageTag": "kQwTxPkY", "skipLoginQueue": true, "tags": ["4JZbQpI6", "jKvwVpsX", "Xavzgi8m"], "uniqueDisplayName": "dGDgPxvX", "userName": "2HHCYSSB"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateMyUserV4 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 376 'AdminUpdateMyUserV4' test.out

#- 377 AdminDisableMyAuthenticatorV4
# body param: body
echo '{"factor": "RRPMTUZ0", "mfaToken": "pgX147oC"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDisableMyAuthenticatorV4 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 377 'AdminDisableMyAuthenticatorV4' test.out

#- 378 AdminEnableMyAuthenticatorV4
$CLI_EXE \
    --sn iam \
    --op AdminEnableMyAuthenticatorV4 \
    --code 'Fb22LkQu' \
    > test.out 2>&1
eval_tap $? 378 'AdminEnableMyAuthenticatorV4' test.out

#- 379 AdminGenerateMyAuthenticatorKeyV4
$CLI_EXE \
    --sn iam \
    --op AdminGenerateMyAuthenticatorKeyV4 \
    > test.out 2>&1
eval_tap $? 379 'AdminGenerateMyAuthenticatorKeyV4' test.out

#- 380 AdminGetMyBackupCodesV4
eval_tap 0 380 'AdminGetMyBackupCodesV4 # SKIP deprecated' test.out

#- 381 AdminGenerateMyBackupCodesV4
eval_tap 0 381 'AdminGenerateMyBackupCodesV4 # SKIP deprecated' test.out

#- 382 AdminDisableMyBackupCodesV4
# body param: body
echo '{"factor": "mjggjlMg", "mfaToken": "RrrQGUDa"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDisableMyBackupCodesV4 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 382 'AdminDisableMyBackupCodesV4' test.out

#- 383 AdminDownloadMyBackupCodesV4
eval_tap 0 383 'AdminDownloadMyBackupCodesV4 # SKIP deprecated' test.out

#- 384 AdminEnableMyBackupCodesV4
eval_tap 0 384 'AdminEnableMyBackupCodesV4 # SKIP deprecated' test.out

#- 385 AdminGetBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op AdminGetBackupCodesV4 \
    --languageTag 'FmQZEcOl' \
    > test.out 2>&1
eval_tap $? 385 'AdminGetBackupCodesV4' test.out

#- 386 AdminGenerateBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op AdminGenerateBackupCodesV4 \
    --languageTag 'sUp0ERrY' \
    > test.out 2>&1
eval_tap $? 386 'AdminGenerateBackupCodesV4' test.out

#- 387 AdminEnableBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op AdminEnableBackupCodesV4 \
    --languageTag '7J1tx0JB' \
    > test.out 2>&1
eval_tap $? 387 'AdminEnableBackupCodesV4' test.out

#- 388 AdminChallengeMyMFAV4
$CLI_EXE \
    --sn iam \
    --op AdminChallengeMyMFAV4 \
    --code 'fI7imDC7' \
    --factor '1wA7TQxH' \
    > test.out 2>&1
eval_tap $? 388 'AdminChallengeMyMFAV4' test.out

#- 389 AdminSendMyMFAEmailCodeV4
$CLI_EXE \
    --sn iam \
    --op AdminSendMyMFAEmailCodeV4 \
    --action 'hT9IFxrP' \
    --languageTag 'fDGKroq8' \
    > test.out 2>&1
eval_tap $? 389 'AdminSendMyMFAEmailCodeV4' test.out

#- 390 AdminDisableMyEmailV4
# body param: body
echo '{"factor": "RsMo5qZE", "mfaToken": "DSmbg3Lo"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDisableMyEmailV4 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 390 'AdminDisableMyEmailV4' test.out

#- 391 AdminEnableMyEmailV4
$CLI_EXE \
    --sn iam \
    --op AdminEnableMyEmailV4 \
    --code 'K2bXGOjx' \
    > test.out 2>&1
eval_tap $? 391 'AdminEnableMyEmailV4' test.out

#- 392 AdminGetMyEnabledFactorsV4
$CLI_EXE \
    --sn iam \
    --op AdminGetMyEnabledFactorsV4 \
    > test.out 2>&1
eval_tap $? 392 'AdminGetMyEnabledFactorsV4' test.out

#- 393 AdminMakeFactorMyDefaultV4
$CLI_EXE \
    --sn iam \
    --op AdminMakeFactorMyDefaultV4 \
    --factor 'PNQ6PwfF' \
    > test.out 2>&1
eval_tap $? 393 'AdminMakeFactorMyDefaultV4' test.out

#- 394 AdminGetMyOwnMFAStatusV4
$CLI_EXE \
    --sn iam \
    --op AdminGetMyOwnMFAStatusV4 \
    > test.out 2>&1
eval_tap $? 394 'AdminGetMyOwnMFAStatusV4' test.out

#- 395 AdminGetMyMFAStatusV4
eval_tap 0 395 'AdminGetMyMFAStatusV4 # SKIP deprecated' test.out

#- 396 AdminInviteUserV4
eval_tap 0 396 'AdminInviteUserV4 # SKIP deprecated' test.out

#- 397 AuthenticationWithPlatformLinkV4
$CLI_EXE \
    --sn iam \
    --op AuthenticationWithPlatformLinkV4 \
    --extend_exp 'false' \
    --client_id 'IK1Kj5Rg' \
    --linkingToken 'rosrLYr9' \
    --password 'S1pQ5C6f' \
    --username 'AGuTIG9Z' \
    > test.out 2>&1
eval_tap $? 397 'AuthenticationWithPlatformLinkV4' test.out

#- 398 GenerateTokenByNewHeadlessAccountV4
$CLI_EXE \
    --sn iam \
    --op GenerateTokenByNewHeadlessAccountV4 \
    --additionalData '6l9pCzER' \
    --extend_exp 'true' \
    --linkingToken 'h7SQmCPf' \
    > test.out 2>&1
eval_tap $? 398 'GenerateTokenByNewHeadlessAccountV4' test.out

#- 399 Verify2faCodeV4
$CLI_EXE \
    --sn iam \
    --op Verify2faCodeV4 \
    --code 'kVRwcqFD' \
    --factor 'A3d4yBIA' \
    --mfaToken 'giae0qzA' \
    --rememberDevice 'true' \
    > test.out 2>&1
eval_tap $? 399 'Verify2faCodeV4' test.out

#- 400 PlatformTokenGrantV4
$CLI_EXE \
    --sn iam \
    --op PlatformTokenGrantV4 \
    --platformId 'eaaWbPhc' \
    --codeChallenge 'KOFUEtKG' \
    --codeChallengeMethod 'S256' \
    --additionalData 'cEkmzKhH' \
    --client_id '7b3OjOBC' \
    --createHeadless 'true' \
    --device_id 'XnfMm2L5' \
    --macAddress 'kFibN2Ya' \
    --platform_token 'yhwO5qOr' \
    --serviceLabel '0.16138568179281576' \
    --skipSetCookie 'false' \
    > test.out 2>&1
eval_tap $? 400 'PlatformTokenGrantV4' test.out

#- 401 SimultaneousLoginV4
$CLI_EXE \
    --sn iam \
    --op SimultaneousLoginV4 \
    --codeChallenge 'FXmmhLJV' \
    --codeChallengeMethod 'plain' \
    --simultaneousPlatform 'kIodjost' \
    --simultaneousTicket 'XbMMlMl5' \
    --nativePlatform 'epicgames' \
    --nativePlatformTicket 'fuQsKHwH' \
    > test.out 2>&1
eval_tap $? 401 'SimultaneousLoginV4' test.out

#- 402 TokenGrantV4
$CLI_EXE \
    --sn iam \
    --op TokenGrantV4 \
    --codeChallenge 'MbRUO9xg' \
    --codeChallengeMethod 'plain' \
    --additionalData 'EwauwxsC' \
    --client_id 'kSmSJYSK' \
    --client_secret 'BaXJklte' \
    --code 'odPAruAl' \
    --code_verifier 'PiMNgmuy' \
    --extendNamespace 'd2ANmUTl' \
    --extend_exp 'true' \
    --login_queue_ticket 'aDLwnwHg' \
    --password 'wLgtmz2x' \
    --redirect_uri 'wNFfBGHt' \
    --refresh_token 'SbxqARFf' \
    --scope '37oqFkSO' \
    --username 't3nzbOFT' \
    --grant_type 'password' \
    > test.out 2>&1
eval_tap $? 402 'TokenGrantV4' test.out

#- 403 RequestTargetTokenResponseV4
$CLI_EXE \
    --sn iam \
    --op RequestTargetTokenResponseV4 \
    --additionalData 'K5fXv0Hk' \
    --code 'OgI75Ppp' \
    > test.out 2>&1
eval_tap $? 403 'RequestTargetTokenResponseV4' test.out

#- 404 PublicListUserIDByPlatformUserIDsV4
# body param: body
echo '{"pidType": "coM0Wb5y", "platformUserIds": ["GnwxOVPN", "XeycnfkS", "YVcXaFrs"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicListUserIDByPlatformUserIDsV4 \
    --namespace $AB_NAMESPACE \
    --platformId 'Ksvvk7RS' \
    --rawPUID 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 404 'PublicListUserIDByPlatformUserIDsV4' test.out

#- 405 PublicGetUserByPlatformUserIDV4
$CLI_EXE \
    --sn iam \
    --op PublicGetUserByPlatformUserIDV4 \
    --namespace $AB_NAMESPACE \
    --platformId 'AlnxjPhd' \
    --platformUserId 'WmY0b9sC' \
    > test.out 2>&1
eval_tap $? 405 'PublicGetUserByPlatformUserIDV4' test.out

#- 406 PublicCreateTestUserV4
# body param: body
echo '{"acceptedPolicies": [{"isAccepted": false, "localizedPolicyVersionId": "LoFTBRQU", "policyId": "GgrCCB3u", "policyVersionId": "S8d2BekT"}, {"isAccepted": false, "localizedPolicyVersionId": "MgTspWzw", "policyId": "VEXfewxf", "policyVersionId": "lta9W2y0"}, {"isAccepted": true, "localizedPolicyVersionId": "izJzQHyU", "policyId": "7o6wyXTK", "policyVersionId": "zxzmf6FV"}], "authType": "EMAILPASSWD", "country": "IaSswdPe", "dateOfBirth": "gHOqy42x", "displayName": "6JeCHFpa", "emailAddress": "Y9fFtHSv", "password": "ZC2NTcmX", "passwordMD5Sum": "0Jd3TjYB", "uniqueDisplayName": "oGF4XrSk", "username": "cJQz6TeP", "verified": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicCreateTestUserV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 406 'PublicCreateTestUserV4' test.out

#- 407 PublicCreateUserV4
# body param: body
echo '{"acceptedPolicies": [{"isAccepted": true, "localizedPolicyVersionId": "7pszIhOG", "policyId": "mJtQ64fL", "policyVersionId": "UfyLBAug"}, {"isAccepted": false, "localizedPolicyVersionId": "b6UhzLDC", "policyId": "qLcKKzVE", "policyVersionId": "afXh984e"}, {"isAccepted": false, "localizedPolicyVersionId": "4z4Uplxt", "policyId": "lH444ngR", "policyVersionId": "L7RaSycE"}], "authType": "EMAILPASSWD", "code": "3mnkwSIW", "country": "1thhvNxy", "dateOfBirth": "mb83OlFg", "displayName": "YUP39Pj2", "emailAddress": "IST7pgIV", "password": "hdWPcleW", "passwordMD5Sum": "eVCCkG1e", "reachMinimumAge": true, "uniqueDisplayName": "IaaauUu5", "username": "n0qunQ5C"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicCreateUserV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 407 'PublicCreateUserV4' test.out

#- 408 CreateUserFromInvitationV4
# body param: body
echo '{"acceptedPolicies": [{"isAccepted": true, "localizedPolicyVersionId": "XZeiKyuE", "policyId": "76mubj4A", "policyVersionId": "tGz7nweq"}, {"isAccepted": true, "localizedPolicyVersionId": "FDlKk0nK", "policyId": "xbQ9dmUi", "policyVersionId": "4O8DvQ0N"}, {"isAccepted": false, "localizedPolicyVersionId": "zMeDv2Ac", "policyId": "IaJZa3u3", "policyVersionId": "41tThgVm"}], "authType": "EMAILPASSWD", "code": "V52BtDh3", "country": "HvY2dbLl", "dateOfBirth": "65qk2FWS", "displayName": "82QHeSRe", "emailAddress": "jbjRriuH", "password": "24e2gMr1", "passwordMD5Sum": "wyHAoGa2", "reachMinimumAge": true, "uniqueDisplayName": "LeVQPodJ", "username": "9WcZHkIw"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op CreateUserFromInvitationV4 \
    --invitationId 'ISF0E07D' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 408 'CreateUserFromInvitationV4' test.out

#- 409 PublicUpdateUserV4
# body param: body
echo '{"avatarUrl": "GbnbUfcD", "country": "loqwHekh", "dateOfBirth": "PnvbQidQ", "displayName": "AI95qOJj", "languageTag": "8XErBXDm", "uniqueDisplayName": "XpnxPJs1", "userName": "2szf3GJB"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpdateUserV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 409 'PublicUpdateUserV4' test.out

#- 410 PublicUpdateUserEmailAddressV4
# body param: body
echo '{"code": "hqXSWQzs", "emailAddress": "1kKKKgDC"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpdateUserEmailAddressV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 410 'PublicUpdateUserEmailAddressV4' test.out

#- 411 PublicUpgradeHeadlessAccountWithVerificationCodeV4
# body param: body
echo '{"code": "CZfTskCO", "country": "ishjfyRP", "dateOfBirth": "zVQC4fya", "displayName": "rV31oqYt", "emailAddress": "trj41lpu", "password": "gxc13ml0", "reachMinimumAge": true, "uniqueDisplayName": "eYk6bhaS", "username": "IYGwPPzC", "validateOnly": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpgradeHeadlessAccountWithVerificationCodeV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 411 'PublicUpgradeHeadlessAccountWithVerificationCodeV4' test.out

#- 412 PublicUpgradeHeadlessAccountV4
# body param: body
echo '{"dateOfBirth": "MDMu6D0Q", "displayName": "QGbXbOIu", "emailAddress": "weI3q6RG", "password": "PAiSz1im", "uniqueDisplayName": "lEnD7xSz", "username": "862AOlSd"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpgradeHeadlessAccountV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 412 'PublicUpgradeHeadlessAccountV4' test.out

#- 413 PublicDisableMyAuthenticatorV4
# body param: body
echo '{"factor": "iXapgxdl", "mfaToken": "QRjY5R6m"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicDisableMyAuthenticatorV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 413 'PublicDisableMyAuthenticatorV4' test.out

#- 414 PublicEnableMyAuthenticatorV4
$CLI_EXE \
    --sn iam \
    --op PublicEnableMyAuthenticatorV4 \
    --namespace $AB_NAMESPACE \
    --code 'IYGUoFq1' \
    > test.out 2>&1
eval_tap $? 414 'PublicEnableMyAuthenticatorV4' test.out

#- 415 PublicGenerateMyAuthenticatorKeyV4
$CLI_EXE \
    --sn iam \
    --op PublicGenerateMyAuthenticatorKeyV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 415 'PublicGenerateMyAuthenticatorKeyV4' test.out

#- 416 PublicGetMyBackupCodesV4
eval_tap 0 416 'PublicGetMyBackupCodesV4 # SKIP deprecated' test.out

#- 417 PublicGenerateMyBackupCodesV4
eval_tap 0 417 'PublicGenerateMyBackupCodesV4 # SKIP deprecated' test.out

#- 418 PublicDisableMyBackupCodesV4
# body param: body
echo '{"factor": "fYpRj3rX", "mfaToken": "jaeyHDhF"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicDisableMyBackupCodesV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 418 'PublicDisableMyBackupCodesV4' test.out

#- 419 PublicDownloadMyBackupCodesV4
eval_tap 0 419 'PublicDownloadMyBackupCodesV4 # SKIP deprecated' test.out

#- 420 PublicEnableMyBackupCodesV4
eval_tap 0 420 'PublicEnableMyBackupCodesV4 # SKIP deprecated' test.out

#- 421 PublicGetBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op PublicGetBackupCodesV4 \
    --namespace $AB_NAMESPACE \
    --languageTag '40GcECz8' \
    > test.out 2>&1
eval_tap $? 421 'PublicGetBackupCodesV4' test.out

#- 422 PublicGenerateBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op PublicGenerateBackupCodesV4 \
    --namespace $AB_NAMESPACE \
    --languageTag 'ePX4p7gv' \
    > test.out 2>&1
eval_tap $? 422 'PublicGenerateBackupCodesV4' test.out

#- 423 PublicEnableBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op PublicEnableBackupCodesV4 \
    --namespace $AB_NAMESPACE \
    --languageTag 'ZW3TONQk' \
    > test.out 2>&1
eval_tap $? 423 'PublicEnableBackupCodesV4' test.out

#- 424 PublicChallengeMyMFAV4
$CLI_EXE \
    --sn iam \
    --op PublicChallengeMyMFAV4 \
    --namespace $AB_NAMESPACE \
    --code '7tfHgl5V' \
    --factor '5qUOUS76' \
    > test.out 2>&1
eval_tap $? 424 'PublicChallengeMyMFAV4' test.out

#- 425 PublicRemoveTrustedDeviceV4
$CLI_EXE \
    --sn iam \
    --op PublicRemoveTrustedDeviceV4 \
    --namespace $AB_NAMESPACE \
    --device_token 'qvD19ejd' \
    > test.out 2>&1
eval_tap $? 425 'PublicRemoveTrustedDeviceV4' test.out

#- 426 PublicSendMyMFAEmailCodeV4
$CLI_EXE \
    --sn iam \
    --op PublicSendMyMFAEmailCodeV4 \
    --namespace $AB_NAMESPACE \
    --action 'Tw7BbHhC' \
    --languageTag 'IFZm6DJk' \
    > test.out 2>&1
eval_tap $? 426 'PublicSendMyMFAEmailCodeV4' test.out

#- 427 PublicDisableMyEmailV4
# body param: body
echo '{"factor": "V59faXGl", "mfaToken": "CIte5eW8"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicDisableMyEmailV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 427 'PublicDisableMyEmailV4' test.out

#- 428 PublicEnableMyEmailV4
$CLI_EXE \
    --sn iam \
    --op PublicEnableMyEmailV4 \
    --namespace $AB_NAMESPACE \
    --code 'GoUAmzuH' \
    > test.out 2>&1
eval_tap $? 428 'PublicEnableMyEmailV4' test.out

#- 429 PublicGetMyEnabledFactorsV4
$CLI_EXE \
    --sn iam \
    --op PublicGetMyEnabledFactorsV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 429 'PublicGetMyEnabledFactorsV4' test.out

#- 430 PublicMakeFactorMyDefaultV4
$CLI_EXE \
    --sn iam \
    --op PublicMakeFactorMyDefaultV4 \
    --namespace $AB_NAMESPACE \
    --factor 'jOb8PWYB' \
    > test.out 2>&1
eval_tap $? 430 'PublicMakeFactorMyDefaultV4' test.out

#- 431 PublicGetMyOwnMFAStatusV4
$CLI_EXE \
    --sn iam \
    --op PublicGetMyOwnMFAStatusV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 431 'PublicGetMyOwnMFAStatusV4' test.out

#- 432 PublicGetMyMFAStatusV4
eval_tap 0 432 'PublicGetMyMFAStatusV4 # SKIP deprecated' test.out

#- 433 PublicGetUserPublicInfoByUserIdV4
$CLI_EXE \
    --sn iam \
    --op PublicGetUserPublicInfoByUserIdV4 \
    --namespace $AB_NAMESPACE \
    --userId 'mhCnu9vC' \
    > test.out 2>&1
eval_tap $? 433 'PublicGetUserPublicInfoByUserIdV4' test.out

#- 434 PublicInviteUserV4
# body param: body
echo '{"additionalData": "5zb0da0L", "emailAddress": "V7uGueRx", "languageTag": "xdytmxoV", "namespace": "5vMdaLlf", "namespaceDisplayName": "nGzY68Tt"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicInviteUserV4 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 434 'PublicInviteUserV4' test.out

#- 435 PublicUpgradeHeadlessWithCodeV4Forward
# body param: body
echo '{"acceptedPolicies": [{"isAccepted": false, "localizedPolicyVersionId": "N88U16Af", "policyId": "lueH1aYz", "policyVersionId": "dNlygmBV"}, {"isAccepted": true, "localizedPolicyVersionId": "QlOezfun", "policyId": "ZizXx9FR", "policyVersionId": "81sZ3KpG"}, {"isAccepted": true, "localizedPolicyVersionId": "eAwjG3C9", "policyId": "NfO9shO1", "policyVersionId": "xpm7nLTW"}], "code": "fzwC3WoB", "country": "t2P86toF", "dateOfBirth": "YCSJidR1", "displayName": "bcbcgBjm", "emailAddress": "DVf94tos", "password": "ohE6WNHq", "reachMinimumAge": false, "uniqueDisplayName": "KP70oDME", "username": "F3VJ0ynL", "validateOnly": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpgradeHeadlessWithCodeV4Forward \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 435 'PublicUpgradeHeadlessWithCodeV4Forward' test.out


# remove artifacts
rm -f "$CLI_TOKEN_FILE"
rm -f "$TEMP_JSON_INPUT"
rm -f "$TEMP_FILE_UPLOAD"

exit $EXIT_CODE