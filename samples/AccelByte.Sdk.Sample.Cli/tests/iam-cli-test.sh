#!/usr/bin/env bash

# Copyright (c) 2021 AccelByte Inc. All Rights Reserved.
# This is licensed software from AccelByte Inc, for limitations
# and restrictions contact your company contract manager.

# This code is generated by tool. DO NOT EDIT.

# Meta:
# - random seed: 
# - template file: 

# Instructions:
# - Run the Justice SDK Mock Server first before running this script.

export AB_BASE_URL="http://127.0.0.1:8080"
export AB_CLIENT_ID="admin"
export AB_CLIENT_SECRET="admin"
export AB_NAMESPACE="test"
export AB_APP_NAME="UnitTest"

EXIT_CODE=0

eval_tap() {
  if [ $1 -eq 0 ]; then
    echo "ok $2 - $3"
  else
    EXIT_CODE=1
    echo "not ok $2 - $3"
    sed 's/^/# /g' $4
  fi
  rm -f $4
}

CLI_EXE="AccelByte.Sdk.Sample.Cli"
CLI_TOKEN_FILE="$(dirname "$(which $CLI_EXE)")/token.json"
TEMP_JSON_INPUT="input_json.json"
TEMP_FILE_UPLOAD="file_upload.bin"

echo "TAP version 13"
echo "1..435"

#- 1 Login
$CLI_EXE --op login --lt user --user user --pass user > test.out 2>&1
eval_tap $? 1 'Login' test.out

if [ $EXIT_CODE -ne 0 ]; then
  echo "Bail out! Login failed."
  exit $EXIT_CODE
fi

# echo "foo" > "$CLI_TOKEN_FILE"

#- 2 GetBansType
eval_tap 0 2 'GetBansType # SKIP deprecated' test.out

#- 3 GetListBanReason
eval_tap 0 3 'GetListBanReason # SKIP deprecated' test.out

#- 4 GetClients
eval_tap 0 4 'GetClients # SKIP deprecated' test.out

#- 5 CreateClient
eval_tap 0 5 'CreateClient # SKIP deprecated' test.out

#- 6 GetClient
eval_tap 0 6 'GetClient # SKIP deprecated' test.out

#- 7 UpdateClient
eval_tap 0 7 'UpdateClient # SKIP deprecated' test.out

#- 8 DeleteClient
eval_tap 0 8 'DeleteClient # SKIP deprecated' test.out

#- 9 UpdateClientPermission
eval_tap 0 9 'UpdateClientPermission # SKIP deprecated' test.out

#- 10 AddClientPermission
eval_tap 0 10 'AddClientPermission # SKIP deprecated' test.out

#- 11 DeleteClientPermission
eval_tap 0 11 'DeleteClientPermission # SKIP deprecated' test.out

#- 12 UpdateClientSecret
eval_tap 0 12 'UpdateClientSecret # SKIP deprecated' test.out

#- 13 GetClientsbyNamespace
eval_tap 0 13 'GetClientsbyNamespace # SKIP deprecated' test.out

#- 14 CreateClientByNamespace
eval_tap 0 14 'CreateClientByNamespace # SKIP deprecated' test.out

#- 15 DeleteClientByNamespace
eval_tap 0 15 'DeleteClientByNamespace # SKIP deprecated' test.out

#- 16 CreateUser
eval_tap 0 16 'CreateUser # SKIP deprecated' test.out

#- 17 GetAdminUsersByRoleID
eval_tap 0 17 'GetAdminUsersByRoleID # SKIP deprecated' test.out

#- 18 GetUserByLoginID
eval_tap 0 18 'GetUserByLoginID # SKIP deprecated' test.out

#- 19 GetUserByPlatformUserID
eval_tap 0 19 'GetUserByPlatformUserID # SKIP deprecated' test.out

#- 20 ForgotPassword
eval_tap 0 20 'ForgotPassword # SKIP deprecated' test.out

#- 21 GetUsersByLoginIds
eval_tap 0 21 'GetUsersByLoginIds # SKIP deprecated' test.out

#- 22 ResetPassword
eval_tap 0 22 'ResetPassword # SKIP deprecated' test.out

#- 23 SearchUser
eval_tap 0 23 'SearchUser # SKIP deprecated' test.out

#- 24 GetUserByUserID
eval_tap 0 24 'GetUserByUserID # SKIP deprecated' test.out

#- 25 UpdateUser
eval_tap 0 25 'UpdateUser # SKIP deprecated' test.out

#- 26 DeleteUser
eval_tap 0 26 'DeleteUser # SKIP deprecated' test.out

#- 27 BanUser
eval_tap 0 27 'BanUser # SKIP deprecated' test.out

#- 28 GetUserBanHistory
eval_tap 0 28 'GetUserBanHistory # SKIP deprecated' test.out

#- 29 DisableUserBan
eval_tap 0 29 'DisableUserBan # SKIP deprecated' test.out

#- 30 EnableUserBan
eval_tap 0 30 'EnableUserBan # SKIP deprecated' test.out

#- 31 ListCrossNamespaceAccountLink
eval_tap 0 31 'ListCrossNamespaceAccountLink # SKIP deprecated' test.out

#- 32 DisableUser
eval_tap 0 32 'DisableUser # SKIP deprecated' test.out

#- 33 EnableUser
eval_tap 0 33 'EnableUser # SKIP deprecated' test.out

#- 34 GetUserInformation
eval_tap 0 34 'GetUserInformation # SKIP deprecated' test.out

#- 35 DeleteUserInformation
eval_tap 0 35 'DeleteUserInformation # SKIP deprecated' test.out

#- 36 GetUserLoginHistories
eval_tap 0 36 'GetUserLoginHistories # SKIP deprecated' test.out

#- 37 UpdatePassword
eval_tap 0 37 'UpdatePassword # SKIP deprecated' test.out

#- 38 SaveUserPermission
eval_tap 0 38 'SaveUserPermission # SKIP deprecated' test.out

#- 39 AddUserPermission
eval_tap 0 39 'AddUserPermission # SKIP deprecated' test.out

#- 40 DeleteUserPermission
eval_tap 0 40 'DeleteUserPermission # SKIP deprecated' test.out

#- 41 GetUserPlatformAccounts
eval_tap 0 41 'GetUserPlatformAccounts # SKIP deprecated' test.out

#- 42 GetUserMapping
eval_tap 0 42 'GetUserMapping # SKIP deprecated' test.out

#- 43 GetUserJusticePlatformAccount
eval_tap 0 43 'GetUserJusticePlatformAccount # SKIP deprecated' test.out

#- 44 PlatformLink
eval_tap 0 44 'PlatformLink # SKIP deprecated' test.out

#- 45 PlatformUnlink
eval_tap 0 45 'PlatformUnlink # SKIP deprecated' test.out

#- 46 GetPublisherUser
eval_tap 0 46 'GetPublisherUser # SKIP deprecated' test.out

#- 47 SaveUserRoles
eval_tap 0 47 'SaveUserRoles # SKIP deprecated' test.out

#- 48 AddUserRole
eval_tap 0 48 'AddUserRole # SKIP deprecated' test.out

#- 49 DeleteUserRole
eval_tap 0 49 'DeleteUserRole # SKIP deprecated' test.out

#- 50 UpgradeHeadlessAccount
eval_tap 0 50 'UpgradeHeadlessAccount # SKIP deprecated' test.out

#- 51 UpgradeHeadlessAccountWithVerificationCode
eval_tap 0 51 'UpgradeHeadlessAccountWithVerificationCode # SKIP deprecated' test.out

#- 52 UserVerification
eval_tap 0 52 'UserVerification # SKIP deprecated' test.out

#- 53 SendVerificationCode
eval_tap 0 53 'SendVerificationCode # SKIP deprecated' test.out

#- 54 Authorization
eval_tap 0 54 'Authorization # SKIP deprecated' test.out

#- 55 GetJWKS
eval_tap 0 55 'GetJWKS # SKIP deprecated' test.out

#- 56 PlatformTokenRequestHandler
eval_tap 0 56 'PlatformTokenRequestHandler # SKIP deprecated' test.out

#- 57 RevokeUser
eval_tap 0 57 'RevokeUser # SKIP deprecated' test.out

#- 58 GetRevocationList
eval_tap 0 58 'GetRevocationList # SKIP deprecated' test.out

#- 59 RevokeToken
eval_tap 0 59 'RevokeToken # SKIP deprecated' test.out

#- 60 RevokeAUser
eval_tap 0 60 'RevokeAUser # SKIP deprecated' test.out

#- 61 TokenGrant
eval_tap 0 61 'TokenGrant # SKIP deprecated' test.out

#- 62 VerifyToken
eval_tap 0 62 'VerifyToken # SKIP deprecated' test.out

#- 63 GetRoles
eval_tap 0 63 'GetRoles # SKIP deprecated' test.out

#- 64 CreateRole
eval_tap 0 64 'CreateRole # SKIP deprecated' test.out

#- 65 GetRole
eval_tap 0 65 'GetRole # SKIP deprecated' test.out

#- 66 UpdateRole
eval_tap 0 66 'UpdateRole # SKIP deprecated' test.out

#- 67 DeleteRole
eval_tap 0 67 'DeleteRole # SKIP deprecated' test.out

#- 68 GetRoleAdminStatus
eval_tap 0 68 'GetRoleAdminStatus # SKIP deprecated' test.out

#- 69 SetRoleAsAdmin
eval_tap 0 69 'SetRoleAsAdmin # SKIP deprecated' test.out

#- 70 RemoveRoleAdmin
eval_tap 0 70 'RemoveRoleAdmin # SKIP deprecated' test.out

#- 71 GetRoleManagers
eval_tap 0 71 'GetRoleManagers # SKIP deprecated' test.out

#- 72 AddRoleManagers
eval_tap 0 72 'AddRoleManagers # SKIP deprecated' test.out

#- 73 RemoveRoleManagers
eval_tap 0 73 'RemoveRoleManagers # SKIP deprecated' test.out

#- 74 GetRoleMembers
eval_tap 0 74 'GetRoleMembers # SKIP deprecated' test.out

#- 75 AddRoleMembers
eval_tap 0 75 'AddRoleMembers # SKIP deprecated' test.out

#- 76 RemoveRoleMembers
eval_tap 0 76 'RemoveRoleMembers # SKIP deprecated' test.out

#- 77 UpdateRolePermissions
eval_tap 0 77 'UpdateRolePermissions # SKIP deprecated' test.out

#- 78 AddRolePermission
eval_tap 0 78 'AddRolePermission # SKIP deprecated' test.out

#- 79 DeleteRolePermission
eval_tap 0 79 'DeleteRolePermission # SKIP deprecated' test.out

#- 80 AdminGetAgeRestrictionStatusV2
eval_tap 0 80 'AdminGetAgeRestrictionStatusV2 # SKIP deprecated' test.out

#- 81 AdminUpdateAgeRestrictionConfigV2
eval_tap 0 81 'AdminUpdateAgeRestrictionConfigV2 # SKIP deprecated' test.out

#- 82 GetListCountryAgeRestriction
eval_tap 0 82 'GetListCountryAgeRestriction # SKIP deprecated' test.out

#- 83 UpdateCountryAgeRestriction
eval_tap 0 83 'UpdateCountryAgeRestriction # SKIP deprecated' test.out

#- 84 AdminSearchUsersV2
eval_tap 0 84 'AdminSearchUsersV2 # SKIP deprecated' test.out

#- 85 AdminGetUserByUserIdV2
eval_tap 0 85 'AdminGetUserByUserIdV2 # SKIP deprecated' test.out

#- 86 AdminUpdateUserV2
eval_tap 0 86 'AdminUpdateUserV2 # SKIP deprecated' test.out

#- 87 AdminBanUserV2
eval_tap 0 87 'AdminBanUserV2 # SKIP deprecated' test.out

#- 88 AdminGetUserBanV2
eval_tap 0 88 'AdminGetUserBanV2 # SKIP deprecated' test.out

#- 89 AdminDisableUserV2
eval_tap 0 89 'AdminDisableUserV2 # SKIP deprecated' test.out

#- 90 AdminEnableUserV2
eval_tap 0 90 'AdminEnableUserV2 # SKIP deprecated' test.out

#- 91 AdminResetPasswordV2
eval_tap 0 91 'AdminResetPasswordV2 # SKIP deprecated' test.out

#- 92 AdminDeletePlatformLinkV2
eval_tap 0 92 'AdminDeletePlatformLinkV2 # SKIP deprecated' test.out

#- 93 AdminPutUserRolesV2
eval_tap 0 93 'AdminPutUserRolesV2 # SKIP deprecated' test.out

#- 94 AdminCreateUserRolesV2
eval_tap 0 94 'AdminCreateUserRolesV2 # SKIP deprecated' test.out

#- 95 PublicGetCountryAgeRestriction
eval_tap 0 95 'PublicGetCountryAgeRestriction # SKIP deprecated' test.out

#- 96 PublicCreateUserV2
eval_tap 0 96 'PublicCreateUserV2 # SKIP deprecated' test.out

#- 97 PublicForgotPasswordV2
eval_tap 0 97 'PublicForgotPasswordV2 # SKIP deprecated' test.out

#- 98 PublicResetPasswordV2
eval_tap 0 98 'PublicResetPasswordV2 # SKIP deprecated' test.out

#- 99 PublicGetUserByUserIDV2
eval_tap 0 99 'PublicGetUserByUserIDV2 # SKIP deprecated' test.out

#- 100 PublicUpdateUserV2
eval_tap 0 100 'PublicUpdateUserV2 # SKIP deprecated' test.out

#- 101 PublicGetUserBan
eval_tap 0 101 'PublicGetUserBan # SKIP deprecated' test.out

#- 102 PublicUpdatePasswordV2
eval_tap 0 102 'PublicUpdatePasswordV2 # SKIP deprecated' test.out

#- 103 GetListJusticePlatformAccounts
eval_tap 0 103 'GetListJusticePlatformAccounts # SKIP deprecated' test.out

#- 104 PublicPlatformLinkV2
eval_tap 0 104 'PublicPlatformLinkV2 # SKIP deprecated' test.out

#- 105 PublicDeletePlatformLinkV2
eval_tap 0 105 'PublicDeletePlatformLinkV2 # SKIP deprecated' test.out

#- 106 AdminGetBansTypeV3
$CLI_EXE \
    --sn iam \
    --op AdminGetBansTypeV3 \
    > test.out 2>&1
eval_tap $? 106 'AdminGetBansTypeV3' test.out

#- 107 AdminGetListBanReasonV3
$CLI_EXE \
    --sn iam \
    --op AdminGetListBanReasonV3 \
    > test.out 2>&1
eval_tap $? 107 'AdminGetListBanReasonV3' test.out

#- 108 AdminListClientAvailablePermissions
$CLI_EXE \
    --sn iam \
    --op AdminListClientAvailablePermissions \
    --excludePermissions 'true' \
    > test.out 2>&1
eval_tap $? 108 'AdminListClientAvailablePermissions' test.out

#- 109 AdminUpdateAvailablePermissionsByModule
# body param: body
echo '{"modules": [{"docLink": "i5our7ht", "groups": [{"group": "LNrdAQqd", "groupId": "vLtdluEf", "permissions": [{"allowedActions": [64, 18, 99], "resource": "hy9wxWOE"}, {"allowedActions": [83, 45, 88], "resource": "9A98xvLi"}, {"allowedActions": [17, 74, 25], "resource": "EMB6oIGa"}]}, {"group": "Oa0e1ck5", "groupId": "bC0oGcrv", "permissions": [{"allowedActions": [90, 8, 27], "resource": "oBVEvpuH"}, {"allowedActions": [44, 32, 43], "resource": "lV8pNeDm"}, {"allowedActions": [91, 66, 67], "resource": "nUatD2QS"}]}, {"group": "4RONIGnS", "groupId": "lLXN3eGy", "permissions": [{"allowedActions": [93, 51, 48], "resource": "YHyy4SiG"}, {"allowedActions": [35, 53, 0], "resource": "wF9uY1xx"}, {"allowedActions": [77, 88, 68], "resource": "8jzo5iIC"}]}], "module": "u5t1FtHj", "moduleId": "zZcQug2n"}, {"docLink": "iNsv36vq", "groups": [{"group": "eUAcjzLG", "groupId": "BRtvbZ4Y", "permissions": [{"allowedActions": [95, 32, 66], "resource": "sRJHQeVH"}, {"allowedActions": [63, 27, 14], "resource": "SutWAxB9"}, {"allowedActions": [3, 66, 37], "resource": "7oD0sKWS"}]}, {"group": "P2cNsPfF", "groupId": "Q1SVvKJH", "permissions": [{"allowedActions": [36, 71, 49], "resource": "3IuZAQyG"}, {"allowedActions": [67, 60, 18], "resource": "8Rt8BDTQ"}, {"allowedActions": [73, 77, 56], "resource": "iQUBl4GR"}]}, {"group": "iWxbNKH1", "groupId": "6RbEBnX4", "permissions": [{"allowedActions": [67, 28, 72], "resource": "Pu0ToGXE"}, {"allowedActions": [75, 31, 88], "resource": "WEtOJM2F"}, {"allowedActions": [87, 58, 19], "resource": "UzAwHnt9"}]}], "module": "cNJ5AyL7", "moduleId": "KkxkRQhU"}, {"docLink": "0t2TXlbm", "groups": [{"group": "g83uJrnI", "groupId": "xsf3UFD8", "permissions": [{"allowedActions": [91, 30, 61], "resource": "qSv4YzyN"}, {"allowedActions": [88, 59, 23], "resource": "WU2ag6p3"}, {"allowedActions": [12, 37, 90], "resource": "pHGAQP1W"}]}, {"group": "i4GjxoaK", "groupId": "neGJ1hsc", "permissions": [{"allowedActions": [96, 67, 20], "resource": "SIOmwFmK"}, {"allowedActions": [43, 19, 27], "resource": "9wOyXcEV"}, {"allowedActions": [80, 64, 7], "resource": "c8wcfxmh"}]}, {"group": "PhQ5IACg", "groupId": "XsDvx7Id", "permissions": [{"allowedActions": [47, 30, 65], "resource": "Z9OCocqr"}, {"allowedActions": [69, 17, 32], "resource": "Xv0Zrb8N"}, {"allowedActions": [3, 97, 96], "resource": "Du5ebh8r"}]}], "module": "LLZcYUNL", "moduleId": "QZKD2sBD"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateAvailablePermissionsByModule \
    --forceDelete 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 109 'AdminUpdateAvailablePermissionsByModule' test.out

#- 110 AdminDeleteConfigPermissionsByGroup
# body param: body
echo '{"groupId": "XzzyQuxm", "moduleId": "rdyubpDk"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDeleteConfigPermissionsByGroup \
    --forceDelete 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 110 'AdminDeleteConfigPermissionsByGroup' test.out

#- 111 AdminListClientTemplates
$CLI_EXE \
    --sn iam \
    --op AdminListClientTemplates \
    > test.out 2>&1
eval_tap $? 111 'AdminListClientTemplates' test.out

#- 112 AdminGetInputValidations
$CLI_EXE \
    --sn iam \
    --op AdminGetInputValidations \
    > test.out 2>&1
eval_tap $? 112 'AdminGetInputValidations' test.out

#- 113 AdminUpdateInputValidations
# body param: body
echo '[{"field": "2mM0do5d", "validation": {"allowAllSpecialCharacters": true, "allowDigit": true, "allowLetter": true, "allowSpace": false, "allowUnicode": true, "avatarConfig": {"allowedPrefixes": ["Qf7D4jPu", "h6iuRTRA", "rzy68pRK"], "preferRegex": false, "regex": "FGNQ92ym"}, "blockedWord": ["JTd2cl3T", "SP6ZAW8S", "FAr8mdSC"], "description": [{"language": "wPbgaqMm", "message": ["sIWQSBTT", "MnhQaQx2", "SligPPxX"]}, {"language": "ux1I1FQf", "message": ["F76LRK0M", "RekMyZkB", "iEZoZ16s"]}, {"language": "L0rEfM62", "message": ["gsHhufgo", "qHhAgMbr", "dCYnfBTw"]}], "isCustomRegex": true, "letterCase": "ffEKqYtg", "maxLength": 72, "maxRepeatingAlphaNum": 97, "maxRepeatingSpecialCharacter": 60, "minCharType": 39, "minLength": 27, "profanityFilter": "xW9szuY6", "regex": "mXfynmqk", "specialCharacterLocation": "0sFR4p9o", "specialCharacters": ["lU7E35vF", "VNGTLl8b", "R3u8QHKl"]}}, {"field": "jGXqW15S", "validation": {"allowAllSpecialCharacters": false, "allowDigit": false, "allowLetter": false, "allowSpace": false, "allowUnicode": true, "avatarConfig": {"allowedPrefixes": ["9vuqCrkp", "rlijRXby", "3mEL7JsG"], "preferRegex": true, "regex": "q7n4rVBV"}, "blockedWord": ["mLxNhpTH", "Ubebwn5J", "o3KQrTVC"], "description": [{"language": "jt9JeX4E", "message": ["OlEaTGvo", "o3NaEwMv", "BrJFoIvj"]}, {"language": "E0OW5NBw", "message": ["wGRHomLV", "FnK3QB3F", "O14gDtgq"]}, {"language": "thp8gsEW", "message": ["wA9mZDMT", "vkEF2tPM", "1SceV9sU"]}], "isCustomRegex": true, "letterCase": "pTwbmoAv", "maxLength": 4, "maxRepeatingAlphaNum": 55, "maxRepeatingSpecialCharacter": 31, "minCharType": 83, "minLength": 44, "profanityFilter": "WITqO7AR", "regex": "iLsgd5h1", "specialCharacterLocation": "tuYtrwgJ", "specialCharacters": ["lZN6Ijna", "UGsB5MdP", "kr7NcBM5"]}}, {"field": "DFFODTl3", "validation": {"allowAllSpecialCharacters": false, "allowDigit": true, "allowLetter": false, "allowSpace": false, "allowUnicode": true, "avatarConfig": {"allowedPrefixes": ["RKb86cPF", "6G7ik4Ha", "WplYDkRQ"], "preferRegex": true, "regex": "zRtWTief"}, "blockedWord": ["Aavx4ML2", "BsD4L8lD", "axRhQPnK"], "description": [{"language": "Z1iq6BUy", "message": ["Iu8w2nIs", "IU09EWkn", "EZT4euKO"]}, {"language": "zVlraPnY", "message": ["Eyzxb3Ii", "yWYyzLUH", "aWDQVK36"]}, {"language": "qH8gMgKv", "message": ["Zx3QSvvM", "XMmVyyfN", "AJDW4rCa"]}], "isCustomRegex": false, "letterCase": "YLFF7dcn", "maxLength": 17, "maxRepeatingAlphaNum": 85, "maxRepeatingSpecialCharacter": 13, "minCharType": 18, "minLength": 66, "profanityFilter": "P9dKyeD1", "regex": "BhsQnmqf", "specialCharacterLocation": "ly4699NF", "specialCharacters": ["UkdpbI4B", "TkfhYrEM", "Nuhb5vnA"]}}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateInputValidations \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 113 'AdminUpdateInputValidations' test.out

#- 114 AdminResetInputValidations
$CLI_EXE \
    --sn iam \
    --op AdminResetInputValidations \
    --field 'DlfQc4Rz' \
    > test.out 2>&1
eval_tap $? 114 'AdminResetInputValidations' test.out

#- 115 ListAdminsV3
$CLI_EXE \
    --sn iam \
    --op ListAdminsV3 \
    --namespace $AB_NAMESPACE \
    --after '9T0Yl6og' \
    --before 'ItBaXZxG' \
    --endDate 'HIPTBVz8' \
    --limit '57' \
    --query 'C5mGqYit' \
    --roleId 'doxScYfz' \
    --startDate 'CE6SzIVy' \
    > test.out 2>&1
eval_tap $? 115 'ListAdminsV3' test.out

#- 116 AdminGetAgeRestrictionStatusV3
$CLI_EXE \
    --sn iam \
    --op AdminGetAgeRestrictionStatusV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 116 'AdminGetAgeRestrictionStatusV3' test.out

#- 117 AdminUpdateAgeRestrictionConfigV3
# body param: body
echo '{"ageRestriction": 43, "enable": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateAgeRestrictionConfigV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 117 'AdminUpdateAgeRestrictionConfigV3' test.out

#- 118 AdminGetListCountryAgeRestrictionV3
$CLI_EXE \
    --sn iam \
    --op AdminGetListCountryAgeRestrictionV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 118 'AdminGetListCountryAgeRestrictionV3' test.out

#- 119 AdminUpdateCountryAgeRestrictionV3
# body param: body
echo '{"ageRestriction": 53}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateCountryAgeRestrictionV3 \
    --countryCode 't8oqADPR' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 119 'AdminUpdateCountryAgeRestrictionV3' test.out

#- 120 AdminGetBannedUsersV3
$CLI_EXE \
    --sn iam \
    --op AdminGetBannedUsersV3 \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --banType 'PSghhROI' \
    --limit '73' \
    --offset '3' \
    > test.out 2>&1
eval_tap $? 120 'AdminGetBannedUsersV3' test.out

#- 121 AdminBanUserBulkV3
# body param: body
echo '{"ban": "vVZHwyhu", "comment": "EYPgMTAv", "endDate": "zwHRVjPW", "reason": "A1UPBPpR", "skipNotif": true, "userIds": ["8PbAvEwY", "kVhPmHJu", "52U8aA1W"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBanUserBulkV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 121 'AdminBanUserBulkV3' test.out

#- 122 AdminUnbanUserBulkV3
# body param: body
echo '{"bans": [{"banId": "V62Yowrh", "userId": "Jkbtos9H"}, {"banId": "PH2Df37l", "userId": "7yX29wfg"}, {"banId": "XOLpCXMQ", "userId": "TCJLwXL0"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUnbanUserBulkV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 122 'AdminUnbanUserBulkV3' test.out

#- 123 AdminGetBansTypeWithNamespaceV3
$CLI_EXE \
    --sn iam \
    --op AdminGetBansTypeWithNamespaceV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 123 'AdminGetBansTypeWithNamespaceV3' test.out

#- 124 AdminGetClientsByNamespaceV3
$CLI_EXE \
    --sn iam \
    --op AdminGetClientsByNamespaceV3 \
    --namespace $AB_NAMESPACE \
    --clientId '9GigTO4V' \
    --clientName '6GAxol24' \
    --clientType 'S3dG6thG' \
    --limit '91' \
    --offset '25' \
    --skipLoginQueue 'true' \
    > test.out 2>&1
eval_tap $? 124 'AdminGetClientsByNamespaceV3' test.out

#- 125 AdminBulkUpdateClientsV3
# body param: body
echo '{"clientIds": ["SJ3eZmrC", "mi0Cor80", "bXxjqOCS"], "clientUpdateRequest": {"audiences": ["kuGCxzY4", "jg0n1DK6", "uv2k8rQP"], "baseUri": "eZbyFjms", "clientName": "oMVoBnx5", "clientPermissions": [{"action": 28, "resource": "WmmdGZSh", "schedAction": 92, "schedCron": "BZCOBgah", "schedRange": ["bxkjEpUy", "xniGYQPN", "jKybZjT9"]}, {"action": 97, "resource": "E3XmbITv", "schedAction": 81, "schedCron": "kRdNGDiJ", "schedRange": ["ZHjmUl5p", "aoi0w93U", "Jre0p5hs"]}, {"action": 1, "resource": "hXFpViF7", "schedAction": 57, "schedCron": "TGewixNA", "schedRange": ["Kt7fdAR4", "XH9BQIXe", "7cItobYb"]}], "clientPlatform": "r54UzZcA", "deletable": false, "description": "v7pG74F9", "modulePermissions": [{"moduleId": "bAe2om93", "selectedGroups": [{"groupId": "VDwDlqKh", "selectedActions": [50, 82, 46]}, {"groupId": "8aksLZSK", "selectedActions": [9, 22, 2]}, {"groupId": "hj927QWi", "selectedActions": [70, 24, 30]}]}, {"moduleId": "DKYUkGGf", "selectedGroups": [{"groupId": "pVq5tkWK", "selectedActions": [47, 9, 98]}, {"groupId": "EQHpbswK", "selectedActions": [18, 90, 35]}, {"groupId": "7qZAftGL", "selectedActions": [67, 75, 56]}]}, {"moduleId": "F3zs8oF7", "selectedGroups": [{"groupId": "1V6ohwwO", "selectedActions": [1, 74, 83]}, {"groupId": "NWSfLWtK", "selectedActions": [95, 1, 50]}, {"groupId": "TOk6yX5h", "selectedActions": [82, 52, 76]}]}], "namespace": "7bA5flYR", "oauthAccessTokenExpiration": 45, "oauthAccessTokenExpirationTimeUnit": "HMquYTas", "oauthRefreshTokenExpiration": 44, "oauthRefreshTokenExpirationTimeUnit": "oDivfrZM", "redirectUri": "6MqElfYU", "scopes": ["u4OTVMV8", "gKzhWU6x", "3VWb2em2"], "skipLoginQueue": false, "twoFactorEnabled": false}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBulkUpdateClientsV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 125 'AdminBulkUpdateClientsV3' test.out

#- 126 AdminCreateClientV3
# body param: body
echo '{"audiences": ["0UgxlnkD", "hEbkWekN", "FcpUNWQV"], "baseUri": "UXgKevbR", "clientId": "Wnc1ea9o", "clientName": "90k2CJdW", "clientPermissions": [{"action": 5, "resource": "xEwAmaF6", "schedAction": 38, "schedCron": "vpEzHGU0", "schedRange": ["XIPT3bpm", "WgmjE7ZR", "DnhyE9zw"]}, {"action": 73, "resource": "tHxSEDJy", "schedAction": 77, "schedCron": "AuDRIMaJ", "schedRange": ["LXJuRRAX", "A0sbOGsY", "qDDkRh9N"]}, {"action": 82, "resource": "J5yk4RzS", "schedAction": 3, "schedCron": "uB1fIZLd", "schedRange": ["SUa37JoX", "mtaexJ7v", "mL1V9OsL"]}], "clientPlatform": "ioieaAs8", "deletable": true, "description": "limKLrOt", "modulePermissions": [{"moduleId": "7kJHEJB8", "selectedGroups": [{"groupId": "9ewfyCsJ", "selectedActions": [79, 75, 36]}, {"groupId": "czGbXfvb", "selectedActions": [7, 46, 89]}, {"groupId": "9MRLzb4W", "selectedActions": [55, 80, 6]}]}, {"moduleId": "8kx9QEe1", "selectedGroups": [{"groupId": "G8qGAnhS", "selectedActions": [79, 90, 54]}, {"groupId": "o4b1K7y0", "selectedActions": [3, 68, 41]}, {"groupId": "N6c1jAC8", "selectedActions": [95, 79, 47]}]}, {"moduleId": "xPXTCptJ", "selectedGroups": [{"groupId": "FfUnDABm", "selectedActions": [36, 69, 7]}, {"groupId": "UhYAEYpo", "selectedActions": [14, 43, 23]}, {"groupId": "au7BYR5s", "selectedActions": [10, 50, 16]}]}], "namespace": "FVeBe79J", "oauthAccessTokenExpiration": 92, "oauthAccessTokenExpirationTimeUnit": "sGnnbDxg", "oauthClientType": "5NmPHNRP", "oauthRefreshTokenExpiration": 72, "oauthRefreshTokenExpirationTimeUnit": "obZBuzd8", "parentNamespace": "DYGBeV4T", "redirectUri": "Txve7PrB", "scopes": ["VND2SCsS", "k8iJ14rx", "Ww9dQSxk"], "secret": "y4s6JuEN", "skipLoginQueue": false, "twoFactorEnabled": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminCreateClientV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 126 'AdminCreateClientV3' test.out

#- 127 AdminGetClientsbyNamespacebyIDV3
$CLI_EXE \
    --sn iam \
    --op AdminGetClientsbyNamespacebyIDV3 \
    --clientId '7TKtPKNi' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 127 'AdminGetClientsbyNamespacebyIDV3' test.out

#- 128 AdminDeleteClientV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteClientV3 \
    --clientId 'PIFMCjy0' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 128 'AdminDeleteClientV3' test.out

#- 129 AdminUpdateClientV3
# body param: body
echo '{"audiences": ["YKBdfa9F", "QYPrMwkx", "ch40Qcyf"], "baseUri": "tDnKCq0b", "clientName": "n9kGO2fj", "clientPermissions": [{"action": 35, "resource": "DS7FDv7x", "schedAction": 30, "schedCron": "v46dMlo2", "schedRange": ["TORBHaMz", "GCsYeJHH", "dMlig7tA"]}, {"action": 30, "resource": "WUcqPD88", "schedAction": 16, "schedCron": "zg2dGOvV", "schedRange": ["jO72UYin", "eYxftygl", "h2umVhPV"]}, {"action": 76, "resource": "JosgzXmQ", "schedAction": 80, "schedCron": "klLE6A9r", "schedRange": ["qmmnwaiG", "RKYjaZKK", "9hyljOPa"]}], "clientPlatform": "zkM2TkAq", "deletable": false, "description": "QBsV86em", "modulePermissions": [{"moduleId": "BohjWqOT", "selectedGroups": [{"groupId": "eU46PvPM", "selectedActions": [81, 71, 51]}, {"groupId": "NAuVP1iB", "selectedActions": [63, 16, 37]}, {"groupId": "8aKNxaaj", "selectedActions": [16, 32, 68]}]}, {"moduleId": "oR4Lw8Bi", "selectedGroups": [{"groupId": "xDc7WVq1", "selectedActions": [33, 24, 72]}, {"groupId": "U0FTKqwt", "selectedActions": [50, 10, 33]}, {"groupId": "Yn5OkJuz", "selectedActions": [10, 90, 21]}]}, {"moduleId": "xlPZPzJU", "selectedGroups": [{"groupId": "D5mgJGJg", "selectedActions": [57, 85, 90]}, {"groupId": "GO1sZIyr", "selectedActions": [34, 43, 55]}, {"groupId": "sqCJ8Rbz", "selectedActions": [62, 16, 42]}]}], "namespace": "eU1uOxHB", "oauthAccessTokenExpiration": 58, "oauthAccessTokenExpirationTimeUnit": "TNtdrGla", "oauthRefreshTokenExpiration": 84, "oauthRefreshTokenExpirationTimeUnit": "RP09pTPC", "redirectUri": "pUCOuKUr", "scopes": ["Ud8wvKeS", "esF5vLyl", "6A2UhCQV"], "skipLoginQueue": true, "twoFactorEnabled": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateClientV3 \
    --clientId 'vggtCpDR' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 129 'AdminUpdateClientV3' test.out

#- 130 AdminUpdateClientPermissionV3
# body param: body
echo '{"permissions": [{"action": 17, "resource": "r7KJY3zF"}, {"action": 97, "resource": "px2Aldd3"}, {"action": 60, "resource": "B7NPfyn7"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateClientPermissionV3 \
    --clientId 'JSPvAutw' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 130 'AdminUpdateClientPermissionV3' test.out

#- 131 AdminAddClientPermissionsV3
# body param: body
echo '{"permissions": [{"action": 73, "resource": "85oIIsFj"}, {"action": 83, "resource": "HgVjpH3V"}, {"action": 26, "resource": "P9VswiHK"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddClientPermissionsV3 \
    --clientId 'dGjep0K9' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 131 'AdminAddClientPermissionsV3' test.out

#- 132 AdminDeleteClientPermissionV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteClientPermissionV3 \
    --action '76' \
    --clientId 'AluTMHAy' \
    --namespace $AB_NAMESPACE \
    --resource 'H6YM7E6n' \
    > test.out 2>&1
eval_tap $? 132 'AdminDeleteClientPermissionV3' test.out

#- 133 AdminGetConfigValueV3
$CLI_EXE \
    --sn iam \
    --op AdminGetConfigValueV3 \
    --configKey '8fWsGTls' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 133 'AdminGetConfigValueV3' test.out

#- 134 AdminGetCountryListV3
$CLI_EXE \
    --sn iam \
    --op AdminGetCountryListV3 \
    --namespace $AB_NAMESPACE \
    --filterBlacklist 'true' \
    > test.out 2>&1
eval_tap $? 134 'AdminGetCountryListV3' test.out

#- 135 AdminGetCountryBlacklistV3
$CLI_EXE \
    --sn iam \
    --op AdminGetCountryBlacklistV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 135 'AdminGetCountryBlacklistV3' test.out

#- 136 AdminAddCountryBlacklistV3
# body param: body
echo '{"blacklist": ["KljuiSs0", "7IPZ2fBM", "DKe22zhQ"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddCountryBlacklistV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 136 'AdminAddCountryBlacklistV3' test.out

#- 137 AdminGetLoginAllowlistV3
$CLI_EXE \
    --sn iam \
    --op AdminGetLoginAllowlistV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 137 'AdminGetLoginAllowlistV3' test.out

#- 138 AdminUpdateLoginAllowlistV3
# body param: body
echo '{"active": true, "roleIds": ["pHuZCcuP", "ETt7A1Dy", "hs0MTMFb"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateLoginAllowlistV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 138 'AdminUpdateLoginAllowlistV3' test.out

#- 139 RetrieveAllThirdPartyLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op RetrieveAllThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 139 'RetrieveAllThirdPartyLoginPlatformCredentialV3' test.out

#- 140 RetrieveAllActiveThirdPartyLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op RetrieveAllActiveThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 140 'RetrieveAllActiveThirdPartyLoginPlatformCredentialV3' test.out

#- 141 RetrieveAllSSOLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op RetrieveAllSSOLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --limit '53' \
    --offset '4' \
    > test.out 2>&1
eval_tap $? 141 'RetrieveAllSSOLoginPlatformCredentialV3' test.out

#- 142 RetrieveThirdPartyLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op RetrieveThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'CgOTOfoy' \
    > test.out 2>&1
eval_tap $? 142 'RetrieveThirdPartyLoginPlatformCredentialV3' test.out

#- 143 AddThirdPartyLoginPlatformCredentialV3
# body param: body
echo '{"ACSURL": "t6l8m66t", "AWSCognitoRegion": "iV6WCDYO", "AWSCognitoUserPool": "x754l2hf", "AllowedClients": ["7jVQej14", "bNtSxsty", "HjV9gzai"], "AppId": "sKZzeeU1", "AuthorizationEndpoint": "d99OkOXL", "ClientId": "7d41rcf0", "EmptyStrFieldList": ["vf5yBnKM", "Udmt2LqG", "C0qaH6t1"], "EnableServerLicenseValidation": false, "Environment": "FBPISAaj", "FederationMetadataURL": "m7VYBkkE", "GenericOauthFlow": true, "IncludePUID": true, "IsActive": true, "Issuer": "RO8sIvzC", "JWKSEndpoint": "gVwd0jv0", "KeyID": "CjkNT6p3", "LogoURL": "5WMFZhCW", "NetflixCertificates": {"encryptedPrivateKey": "Czo3eerW", "encryptedPrivateKeyName": "4mIJRZ1D", "publicCertificate": "j55kUlWr", "publicCertificateName": "puDYMkZA", "rootCertificate": "lRdw6h6X", "rootCertificateName": "VMZTzb3J"}, "OrganizationId": "ND1GZoZv", "PlatformName": "B3KGLr2H", "PrivateKey": "fU7J5Moq", "RedirectUri": "g7covDMh", "RegisteredDomains": [{"affectedClientIDs": ["L2CsCEnC", "LKVUbHBO", "wLXkPAiO"], "domain": "FQLbGR99", "namespaces": ["VKgWgfR4", "8Ma3Mpqa", "Io6WfPRY"], "roleId": "SuzZz0Mc", "ssoCfg": {"googleKey": {"yR2i7YPf": {}, "7yD8nsUO": {}, "NxbRLITO": {}}, "groupConfigs": [{"assignNamespaces": ["JbQd7vCh", "tdIs0Y6I", "mKyNXQl6"], "group": "cY04YYAf", "roleId": "i3CjqtWL"}, {"assignNamespaces": ["NfGLgD54", "FKD5YJ2c", "EtfcUxrE"], "group": "nESuo2vl", "roleId": "n8TRdc9e"}, {"assignNamespaces": ["9Rp6BB3h", "k3h36TIT", "1GYjJsye"], "group": "f0kbzhIP", "roleId": "IFsRyMlu"}]}}, {"affectedClientIDs": ["98V3Qqry", "83AVaEYN", "Ijixy8gV"], "domain": "BP5nCfu1", "namespaces": ["MZFhnSeY", "Z7V7mr8Q", "LuIdPc8Z"], "roleId": "6sUmr0ph", "ssoCfg": {"googleKey": {"Qy6HqrZW": {}, "tTt84Bk6": {}, "5q3j5Lcl": {}}, "groupConfigs": [{"assignNamespaces": ["lbuGyLKk", "lBgNIVNf", "hwIjT5k4"], "group": "Z2RD53lt", "roleId": "23Y9DRYh"}, {"assignNamespaces": ["ly7AMW3F", "aYzrtiZ9", "9uOUg671"], "group": "FboOZugD", "roleId": "rWb13uZw"}, {"assignNamespaces": ["cOSfs69H", "jca6LxED", "AknJkGdc"], "group": "m777TdG4", "roleId": "W7YcKSO7"}]}}, {"affectedClientIDs": ["HSOluQ6M", "c4KfzMEH", "062XzDwv"], "domain": "zhhGsuyb", "namespaces": ["Fmt1gBHG", "VlyRCEAI", "3NlQjaoQ"], "roleId": "wqaVX0kl", "ssoCfg": {"googleKey": {"khSULsTl": {}, "6I0ApUVV": {}, "STMG81MF": {}}, "groupConfigs": [{"assignNamespaces": ["FtbTSA8k", "8QdNCeBb", "2Rzcrc6b"], "group": "wBWTcIRp", "roleId": "xIFZfrKO"}, {"assignNamespaces": ["RC68enUm", "r73QBzTH", "KTnSWJpf"], "group": "M0WF6h2H", "roleId": "WI8j30G8"}, {"assignNamespaces": ["ntD44LBs", "ZDZKf3I0", "YOlLSWfi"], "group": "StSYeOe8", "roleId": "XifjvqJT"}]}}], "RelyingParty": "JaTka2aO", "SandboxId": "CJVyGhAZ", "Secret": "nedJjcc0", "TeamID": "b6geIKKc", "TokenAuthenticationType": "PbzhGSj8", "TokenClaimsMapping": {"lDCOB17K": "jAPETIhP", "jjGGZKcM": "JA2FKA4Z", "b3pZLgro": "g34hZixc"}, "TokenEndpoint": "flAgwnzf", "UserInfoEndpoint": "vbDhUC7I", "UserInfoHTTPMethod": "Ms6TmvYS", "googleAdminConsoleKey": "w5Yni37M", "scopes": ["fdzuy2bv", "pjzuR28A", "t7X0fUE0"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AddThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'EabTkEpV' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 143 'AddThirdPartyLoginPlatformCredentialV3' test.out

#- 144 DeleteThirdPartyLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op DeleteThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'bAeLeBbv' \
    > test.out 2>&1
eval_tap $? 144 'DeleteThirdPartyLoginPlatformCredentialV3' test.out

#- 145 UpdateThirdPartyLoginPlatformCredentialV3
# body param: body
echo '{"ACSURL": "OrJP62Z5", "AWSCognitoRegion": "7ZbUx81u", "AWSCognitoUserPool": "pN5bE84Y", "AllowedClients": ["Uy6fculy", "Mvr365Kk", "go6PaIgE"], "AppId": "5L4rag49", "AuthorizationEndpoint": "UMAu0wsq", "ClientId": "QuOzvflY", "EmptyStrFieldList": ["P9QW0uP0", "87F6DtkX", "0p56k0Gd"], "EnableServerLicenseValidation": false, "Environment": "T66yz9ET", "FederationMetadataURL": "KHPhstwZ", "GenericOauthFlow": true, "IncludePUID": true, "IsActive": false, "Issuer": "U9pZJ3gx", "JWKSEndpoint": "Oo7UakOr", "KeyID": "K34FVpBg", "LogoURL": "48dqcxMn", "NetflixCertificates": {"encryptedPrivateKey": "bTwhTwdX", "encryptedPrivateKeyName": "9AK7ZqAd", "publicCertificate": "BX286IGD", "publicCertificateName": "F4OB5MtD", "rootCertificate": "0RKDTzvl", "rootCertificateName": "wtfd3k0o"}, "OrganizationId": "9nrbYRFo", "PlatformName": "kcnyZnIC", "PrivateKey": "WqDbu3jJ", "RedirectUri": "av70Wt6D", "RegisteredDomains": [{"affectedClientIDs": ["NXsDSiMd", "RdJg2CMm", "NKRXOLxc"], "domain": "NBHBWRj7", "namespaces": ["37ZvGwk4", "ivegjiUb", "9xLgaOwO"], "roleId": "en4Gp4Fh", "ssoCfg": {"googleKey": {"RyBhFE2I": {}, "DWPuxTMO": {}, "s4nP4f35": {}}, "groupConfigs": [{"assignNamespaces": ["gBoLJXuI", "dvIPhGDT", "uBlOXnal"], "group": "bTYlo3xw", "roleId": "tV8DWIt3"}, {"assignNamespaces": ["E5DusehT", "eJ0C1KLr", "GAvdCygS"], "group": "CaG7jkPU", "roleId": "X1m1T27S"}, {"assignNamespaces": ["gGddPnDz", "HbmgksCc", "nO4yDPeM"], "group": "T5GKKptG", "roleId": "lOHVt4B4"}]}}, {"affectedClientIDs": ["VMkDXWdG", "1ZBSQUuu", "pVf40Rra"], "domain": "VvjLetqu", "namespaces": ["e2eViEin", "IiUtemkb", "e18ikIik"], "roleId": "axLOg1QK", "ssoCfg": {"googleKey": {"Tn7PwqV6": {}, "TBaLQEPs": {}, "aCpdUXOA": {}}, "groupConfigs": [{"assignNamespaces": ["NgyI0NHJ", "5CgAOsar", "aHH9MOfJ"], "group": "z3YXjyx5", "roleId": "LgbWpa0Y"}, {"assignNamespaces": ["EPgnhHhS", "n0okPxi3", "uHh7DHMk"], "group": "FXiVNM2O", "roleId": "8Gsdzlif"}, {"assignNamespaces": ["VUslC5KR", "oeOkyzox", "GHdSeesm"], "group": "vvd3oUIL", "roleId": "umoXO9Qu"}]}}, {"affectedClientIDs": ["RMs6Q48u", "DhqWKBQH", "QEAw7BH6"], "domain": "gANLY1qY", "namespaces": ["r769vNZS", "1rG75eAQ", "ZlXQzT0c"], "roleId": "zx7AziIC", "ssoCfg": {"googleKey": {"ym8HHg1o": {}, "KpyBydC8": {}, "p7i6gsXB": {}}, "groupConfigs": [{"assignNamespaces": ["iiYViTG0", "YTX9gzGO", "ZH3gEgu5"], "group": "JoL4oDN7", "roleId": "gA9xSd6P"}, {"assignNamespaces": ["xtYhN28W", "AHDybXfI", "8VZfUmaG"], "group": "OKz60PuG", "roleId": "INnaoA23"}, {"assignNamespaces": ["wNbpOslH", "itQn2PvU", "LXceQ32y"], "group": "XOUdA3fH", "roleId": "t3nVDSct"}]}}], "RelyingParty": "O0wPpq49", "SandboxId": "T5rHNjxR", "Secret": "2m7Vo5l7", "TeamID": "adLnsqOV", "TokenAuthenticationType": "HWmX2e1O", "TokenClaimsMapping": {"kjcHHvGk": "hnYc67GA", "uzV3Buov": "UA5YnwvQ", "Kjg720aE": "qRQfkaA1"}, "TokenEndpoint": "Jg21L8Pn", "UserInfoEndpoint": "sWmztvga", "UserInfoHTTPMethod": "4WPUUXrL", "googleAdminConsoleKey": "jmKhmZ7D", "scopes": ["aF5OojlK", "PigLuLtT", "P9BzMh5j"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op UpdateThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'wZnxPa7X' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 145 'UpdateThirdPartyLoginPlatformCredentialV3' test.out

#- 146 UpdateThirdPartyLoginPlatformDomainV3
# body param: body
echo '{"affectedClientIDs": ["IRI37GV2", "Xn1gGtht", "KNyWUqfU"], "assignedNamespaces": ["P4nKnY4s", "1atUBFGk", "cDJTlJwT"], "domain": "Mklrngs9", "roleId": "8He0QKKo", "ssoCfg": {"googleKey": {"x7tmivPx": {}, "7Nbs6KMd": {}, "6T6ElNl9": {}}, "groupConfigs": [{"assignNamespaces": ["QIY79ohh", "BW5HK3xo", "w0Zg93gN"], "group": "fqrpbegd", "roleId": "8QXRJLx3"}, {"assignNamespaces": ["rEIfEpNI", "FC152cp5", "AemJspRn"], "group": "Qg9jVwDO", "roleId": "V6cunEdM"}, {"assignNamespaces": ["GdFYuygP", "gtEUaMX3", "BK5QZCSk"], "group": "qXwJZN18", "roleId": "WtLtNtMS"}]}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op UpdateThirdPartyLoginPlatformDomainV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'mRa526uv' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 146 'UpdateThirdPartyLoginPlatformDomainV3' test.out

#- 147 DeleteThirdPartyLoginPlatformDomainV3
# body param: body
echo '{"domain": "zhM67JDv", "ssoGroups": ["cKDJCNAO", "NYHAORF8", "z9ktkR0G"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op DeleteThirdPartyLoginPlatformDomainV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'SdX3C652' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 147 'DeleteThirdPartyLoginPlatformDomainV3' test.out

#- 148 PartialUpdateThirdPartyLoginPlatformDomainV3
# body param: body
echo '{"affectedClientIDs": ["Wmoewwha", "xzr5DeE3", "d1vlQ4Vp"], "assignedNamespaces": ["UvbkPHJI", "NeH1U4mr", "SgwUywTg"], "domain": "XshitsIw", "roleId": "LzQdXw5E", "ssoCfg": {"googleKey": {"4uJiHoon": {}, "buTo9Bxz": {}, "YcyxGnzD": {}}, "groupConfigs": [{"assignNamespaces": ["EMGCd3Z7", "I2vXQfhT", "if7nYO8w"], "group": "GhT2OG28", "roleId": "yyzZq4k9"}, {"assignNamespaces": ["INOwN4Ax", "cALHd1e1", "HYvGmWEp"], "group": "Ru1I4Xc9", "roleId": "38vgUK4C"}, {"assignNamespaces": ["mEsrbCT9", "W6vmUvif", "Gj2zaRE0"], "group": "68WsbecE", "roleId": "RRueVmuA"}]}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PartialUpdateThirdPartyLoginPlatformDomainV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'FZJothmT' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 148 'PartialUpdateThirdPartyLoginPlatformDomainV3' test.out

#- 149 RetrieveSSOLoginPlatformCredential
$CLI_EXE \
    --sn iam \
    --op RetrieveSSOLoginPlatformCredential \
    --namespace $AB_NAMESPACE \
    --platformId 'ywPLlSbQ' \
    > test.out 2>&1
eval_tap $? 149 'RetrieveSSOLoginPlatformCredential' test.out

#- 150 AddSSOLoginPlatformCredential
# body param: body
echo '{"acsUrl": "3eVDJTem", "apiKey": "HOUOgkgu", "appId": "iQnKLUHK", "federationMetadataUrl": "lDFOR5xw", "isActive": false, "redirectUri": "GeXRMI7r", "secret": "NjOX4J6f", "ssoUrl": "9JCzT93M"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AddSSOLoginPlatformCredential \
    --namespace $AB_NAMESPACE \
    --platformId 'NtJ1WLq6' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 150 'AddSSOLoginPlatformCredential' test.out

#- 151 DeleteSSOLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op DeleteSSOLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'tn8spxiF' \
    > test.out 2>&1
eval_tap $? 151 'DeleteSSOLoginPlatformCredentialV3' test.out

#- 152 UpdateSSOPlatformCredential
# body param: body
echo '{"acsUrl": "QbAJFeSG", "apiKey": "YiVIXxkJ", "appId": "BsQC4eF5", "federationMetadataUrl": "VglhlzYv", "isActive": false, "redirectUri": "ONdZNN23", "secret": "2nvUnrfI", "ssoUrl": "3DO0qICf"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op UpdateSSOPlatformCredential \
    --namespace $AB_NAMESPACE \
    --platformId '3HvTYsnm' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 152 'UpdateSSOPlatformCredential' test.out

#- 153 AdminListUserIDByPlatformUserIDsV3
# body param: body
echo '{"platformUserIds": ["GazrFOFk", "MuQO5a3n", "3juV47sC"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminListUserIDByPlatformUserIDsV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'j269QzI7' \
    --rawPID 'false' \
    --rawPUID 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 153 'AdminListUserIDByPlatformUserIDsV3' test.out

#- 154 AdminGetUserByPlatformUserIDV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserByPlatformUserIDV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'W7SIi4zO' \
    --platformUserId '6OUBCQT3' \
    --pidType 'lQJQHtCm' \
    > test.out 2>&1
eval_tap $? 154 'AdminGetUserByPlatformUserIDV3' test.out

#- 155 AdminGetProfileUpdateStrategyV3
$CLI_EXE \
    --sn iam \
    --op AdminGetProfileUpdateStrategyV3 \
    --namespace $AB_NAMESPACE \
    --field 'username' \
    > test.out 2>&1
eval_tap $? 155 'AdminGetProfileUpdateStrategyV3' test.out

#- 156 AdminUpdateProfileUpdateStrategyV3
# body param: body
echo '{"config": {"minimumAllowedInterval": 16}, "type": "yFDuKiW7"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateProfileUpdateStrategyV3 \
    --namespace $AB_NAMESPACE \
    --field 'dob' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 156 'AdminUpdateProfileUpdateStrategyV3' test.out

#- 157 AdminGetRoleOverrideConfigV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleOverrideConfigV3 \
    --namespace $AB_NAMESPACE \
    --identity 'USER' \
    > test.out 2>&1
eval_tap $? 157 'AdminGetRoleOverrideConfigV3' test.out

#- 158 AdminUpdateRoleOverrideConfigV3
# body param: body
echo '{"additions": [{"actions": [6, 49, 23], "resource": "VDXVY8Pd"}, {"actions": [38, 63, 52], "resource": "NlObuTxH"}, {"actions": [61, 21, 80], "resource": "Gvgnh7VO"}], "exclusions": [{"actions": [18, 65, 36], "resource": "aimGXK04"}, {"actions": [10, 21, 3], "resource": "Vl9KYbDf"}, {"actions": [78, 15, 90], "resource": "fESm3RiO"}], "overrides": [{"actions": [39, 84, 41], "resource": "M1rxQVYl"}, {"actions": [4, 19, 96], "resource": "nMVW5bVs"}, {"actions": [9, 90, 22], "resource": "khvYLvOi"}], "replacements": [{"replacement": {"actions": [58, 7, 30], "resource": "tLeNQ4y0"}, "target": "q665IuJj"}, {"replacement": {"actions": [13, 42, 17], "resource": "Ozi7lfEh"}, "target": "U7a3pIY8"}, {"replacement": {"actions": [69, 41, 1], "resource": "r90ngqW1"}, "target": "A2UyEoAb"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateRoleOverrideConfigV3 \
    --namespace $AB_NAMESPACE \
    --identity 'VIEW_ONLY' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 158 'AdminUpdateRoleOverrideConfigV3' test.out

#- 159 AdminGetRoleSourceV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleSourceV3 \
    --namespace $AB_NAMESPACE \
    --identity 'GAME_ADMIN' \
    > test.out 2>&1
eval_tap $? 159 'AdminGetRoleSourceV3' test.out

#- 160 AdminChangeRoleOverrideConfigStatusV3
# body param: body
echo '{"active": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminChangeRoleOverrideConfigStatusV3 \
    --namespace $AB_NAMESPACE \
    --identity 'GAME_ADMIN' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 160 'AdminChangeRoleOverrideConfigStatusV3' test.out

#- 161 AdminGetRoleNamespacePermissionV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleNamespacePermissionV3 \
    --namespace $AB_NAMESPACE \
    --roleId 'asHDDQg4' \
    > test.out 2>&1
eval_tap $? 161 'AdminGetRoleNamespacePermissionV3' test.out

#- 162 GetAdminUsersByRoleIdV3
$CLI_EXE \
    --sn iam \
    --op GetAdminUsersByRoleIdV3 \
    --namespace $AB_NAMESPACE \
    --roleId 'Gq1ZJZHj' \
    --after '95' \
    --before '24' \
    --limit '51' \
    > test.out 2>&1
eval_tap $? 162 'GetAdminUsersByRoleIdV3' test.out

#- 163 AdminQueryTagV3
$CLI_EXE \
    --sn iam \
    --op AdminQueryTagV3 \
    --namespace $AB_NAMESPACE \
    --limit '64' \
    --offset '38' \
    --tagName 'NO1tuKSV' \
    > test.out 2>&1
eval_tap $? 163 'AdminQueryTagV3' test.out

#- 164 AdminCreateTagV3
# body param: body
echo '{"tagName": "GZXbhOe8"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminCreateTagV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 164 'AdminCreateTagV3' test.out

#- 165 AdminUpdateTagV3
# body param: body
echo '{"tagName": "JVQBO4iy"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateTagV3 \
    --namespace $AB_NAMESPACE \
    --tagId 'Nn9YhOC0' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 165 'AdminUpdateTagV3' test.out

#- 166 AdminDeleteTagV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteTagV3 \
    --namespace $AB_NAMESPACE \
    --tagId '52asYd00' \
    > test.out 2>&1
eval_tap $? 166 'AdminDeleteTagV3' test.out

#- 167 AdminGetUserByEmailAddressV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserByEmailAddressV3 \
    --namespace $AB_NAMESPACE \
    --emailAddress 'eZQto0QM' \
    > test.out 2>&1
eval_tap $? 167 'AdminGetUserByEmailAddressV3' test.out

#- 168 AdminBulkUpdateUsersV3
# body param: body
echo '{"updateRequest": {"skipLoginQueue": true}, "userIds": ["AcQZaKYX", "w83AAWzl", "OiXsIMrY"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBulkUpdateUsersV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 168 'AdminBulkUpdateUsersV3' test.out

#- 169 AdminGetBulkUserBanV3
# body param: body
echo '{"bulkUserId": ["gvfAVEjb", "uVImu38L", "PlWyWF7x"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminGetBulkUserBanV3 \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --banType 'HO7N7TXS' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 169 'AdminGetBulkUserBanV3' test.out

#- 170 AdminListUserIDByUserIDsV3
# body param: body
echo '{"findByPublisherNamespace": true, "userIds": ["SM81dBKa", "WsL6RRAv", "OP8Uv419"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminListUserIDByUserIDsV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 170 'AdminListUserIDByUserIDsV3' test.out

#- 171 AdminBulkGetUsersPlatform
# body param: body
echo '{"userIds": ["6uvhmQU4", "hmAHABUs", "CcrMQ7Y4"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBulkGetUsersPlatform \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 171 'AdminBulkGetUsersPlatform' test.out

#- 172 AdminCursorGetUserV3
# body param: body
echo '{"cursor": {"cursorTime": "gO8Nx1cC", "userId": "JgoCcEq7"}, "fields": ["BPM4Q7Xn", "5JlF89g2", "VgqOmmy8"], "limit": 26}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminCursorGetUserV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 172 'AdminCursorGetUserV3' test.out

#- 173 AdminInviteUserV3
# body param: body
echo '{"emailAddresses": ["5pJ7lb2J", "8oS63dDQ", "1Qmwgq5R"], "isAdmin": true, "languageTag": "fIcPBYwM", "namespace": "TTVItNes", "roles": ["BK1ioPMS", "LW1P7zvG", "tqPvQVOJ"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminInviteUserV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 173 'AdminInviteUserV3' test.out

#- 174 AdminQueryThirdPlatformLinkHistoryV3
$CLI_EXE \
    --sn iam \
    --op AdminQueryThirdPlatformLinkHistoryV3 \
    --namespace $AB_NAMESPACE \
    --limit '14' \
    --offset '29' \
    --platformUserId 'j4tVycQ0' \
    --platformId 'bxemwPLm' \
    > test.out 2>&1
eval_tap $? 174 'AdminQueryThirdPlatformLinkHistoryV3' test.out

#- 175 AdminListUsersV3
$CLI_EXE \
    --sn iam \
    --op AdminListUsersV3 \
    --namespace $AB_NAMESPACE \
    --limit '77' \
    --offset '68' \
    > test.out 2>&1
eval_tap $? 175 'AdminListUsersV3' test.out

#- 176 AdminSearchUserV3
$CLI_EXE \
    --sn iam \
    --op AdminSearchUserV3 \
    --namespace $AB_NAMESPACE \
    --by 'UfO7BdE7' \
    --endDate 'aITV75gL' \
    --includeTotal 'false' \
    --limit '61' \
    --offset '87' \
    --platformBy 'z1Hp0E5i' \
    --platformId 'j4T9KjUg' \
    --query '3MYmk4BE' \
    --roleIds 'fja5XWjY' \
    --selectedFields '7O0xFs1I' \
    --skipLoginQueue 'false' \
    --startDate 'Htsuqcsl' \
    --tagIds 'OM1jHLUC' \
    --testAccount 'false' \
    > test.out 2>&1
eval_tap $? 176 'AdminSearchUserV3' test.out

#- 177 AdminGetBulkUserByEmailAddressV3
# body param: body
echo '{"listEmailAddressRequest": ["obEIUhCU", "ZdonjjAc", "eRiuRNt4"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminGetBulkUserByEmailAddressV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 177 'AdminGetBulkUserByEmailAddressV3' test.out

#- 178 AdminGetUserByUserIdV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserByUserIdV3 \
    --namespace $AB_NAMESPACE \
    --userId 'LX2mgacV' \
    > test.out 2>&1
eval_tap $? 178 'AdminGetUserByUserIdV3' test.out

#- 179 AdminUpdateUserV3
# body param: body
echo '{"avatarUrl": "VAsFUE2z", "country": "3LXSZg7K", "dateOfBirth": "KpQpyXic", "displayName": "QkLXrVRM", "languageTag": "9Kctt2eG", "skipLoginQueue": true, "tags": ["FdAUyBkE", "UaaxXou1", "VFWEAnsu"], "uniqueDisplayName": "fDLdEKIF", "userName": "T8oK8s1O"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserV3 \
    --namespace $AB_NAMESPACE \
    --userId 'lJ3SgBp6' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 179 'AdminUpdateUserV3' test.out

#- 180 AdminGetUserBanV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserBanV3 \
    --namespace $AB_NAMESPACE \
    --userId 'oZyAmqSz' \
    --activeOnly 'true' \
    --after '5DlGfWoq' \
    --before 'vkSyXqbs' \
    --limit '3' \
    > test.out 2>&1
eval_tap $? 180 'AdminGetUserBanV3' test.out

#- 181 AdminBanUserV3
# body param: body
echo '{"ban": "LOYy5Pc1", "comment": "vztwfNup", "endDate": "pU1ytE3D", "reason": "AdyDbu83", "skipNotif": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBanUserV3 \
    --namespace $AB_NAMESPACE \
    --userId 'BgPTXZmC' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 181 'AdminBanUserV3' test.out

#- 182 AdminGetUserBanSummaryV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserBanSummaryV3 \
    --namespace $AB_NAMESPACE \
    --userId 'LXaswlIL' \
    > test.out 2>&1
eval_tap $? 182 'AdminGetUserBanSummaryV3' test.out

#- 183 AdminUpdateUserBanV3
# body param: body
echo '{"enabled": true, "skipNotif": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserBanV3 \
    --banId 'TnxYtDvk' \
    --namespace $AB_NAMESPACE \
    --userId 'bm1JMVcl' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 183 'AdminUpdateUserBanV3' test.out

#- 184 AdminSendVerificationCodeV3
# body param: body
echo '{"context": "fiMGzEhn", "emailAddress": "SmEFADi8", "languageTag": "Fe71gxYr", "upgradeToken": "yai2Hdj8"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminSendVerificationCodeV3 \
    --namespace $AB_NAMESPACE \
    --userId 'hBwTY50z' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 184 'AdminSendVerificationCodeV3' test.out

#- 185 AdminVerifyAccountV3
# body param: body
echo '{"Code": "bliuXUaa", "ContactType": "91ysvFhs", "LanguageTag": "3Kt3uhdo", "validateOnly": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminVerifyAccountV3 \
    --namespace $AB_NAMESPACE \
    --userId 'ugtiUytS' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 185 'AdminVerifyAccountV3' test.out

#- 186 GetUserVerificationCode
$CLI_EXE \
    --sn iam \
    --op GetUserVerificationCode \
    --namespace $AB_NAMESPACE \
    --userId 'v1fPjBFo' \
    > test.out 2>&1
eval_tap $? 186 'GetUserVerificationCode' test.out

#- 187 AdminGetUserDeletionStatusV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserDeletionStatusV3 \
    --namespace $AB_NAMESPACE \
    --userId 'At4h8w13' \
    > test.out 2>&1
eval_tap $? 187 'AdminGetUserDeletionStatusV3' test.out

#- 188 AdminUpdateUserDeletionStatusV3
# body param: body
echo '{"deletionDate": 92, "enabled": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserDeletionStatusV3 \
    --namespace $AB_NAMESPACE \
    --userId 'J1KxAnKt' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 188 'AdminUpdateUserDeletionStatusV3' test.out

#- 189 AdminListUserAllPlatformAccountsDistinctV3
$CLI_EXE \
    --sn iam \
    --op AdminListUserAllPlatformAccountsDistinctV3 \
    --namespace $AB_NAMESPACE \
    --userId '1mLER0GA' \
    > test.out 2>&1
eval_tap $? 189 'AdminListUserAllPlatformAccountsDistinctV3' test.out

#- 190 AdminUpgradeHeadlessAccountV3
# body param: body
echo '{"code": "RQdoor6Y", "country": "d29aGYcW", "dateOfBirth": "IXn6qrmT", "displayName": "yTZ0IGWP", "emailAddress": "j12MH8UP", "password": "37qGNnqb", "uniqueDisplayName": "4fx6WypR", "validateOnly": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpgradeHeadlessAccountV3 \
    --namespace $AB_NAMESPACE \
    --userId 'UaAyHjLR' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 190 'AdminUpgradeHeadlessAccountV3' test.out

#- 191 AdminDeleteUserInformationV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserInformationV3 \
    --namespace $AB_NAMESPACE \
    --userId 'wg8dJjXJ' \
    > test.out 2>&1
eval_tap $? 191 'AdminDeleteUserInformationV3' test.out

#- 192 AdminGetUserLoginHistoriesV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserLoginHistoriesV3 \
    --namespace $AB_NAMESPACE \
    --userId '5Yw0U2z7' \
    --after '0.18016122508386778' \
    --before '0.35504665706600136' \
    --limit '70' \
    > test.out 2>&1
eval_tap $? 192 'AdminGetUserLoginHistoriesV3' test.out

#- 193 AdminResetPasswordV3
# body param: body
echo '{"languageTag": "YB4N02y8", "mfaToken": "6L5UDsom", "newPassword": "ecWN1Wsa", "oldPassword": "mvSRFOjw"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminResetPasswordV3 \
    --namespace $AB_NAMESPACE \
    --userId 'IagWM7n5' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 193 'AdminResetPasswordV3' test.out

#- 194 AdminUpdateUserPermissionV3
# body param: body
echo '{"Permissions": [{"Action": 2, "Resource": "UpGtOHHi", "SchedAction": 59, "SchedCron": "73Z5cgFv", "SchedRange": ["LBAjdJJD", "KkKQgKTd", "2VvzHlNX"]}, {"Action": 72, "Resource": "wLrYtNzs", "SchedAction": 75, "SchedCron": "er31qBNe", "SchedRange": ["DU0WP5kz", "ogv8hTlG", "6EYkagYf"]}, {"Action": 93, "Resource": "2oI7Y6XV", "SchedAction": 31, "SchedCron": "YTA6bbq8", "SchedRange": ["KVbXcaI8", "MWwB8V5r", "eLjLpNnD"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserPermissionV3 \
    --namespace $AB_NAMESPACE \
    --userId 'Sym3z9tO' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 194 'AdminUpdateUserPermissionV3' test.out

#- 195 AdminAddUserPermissionsV3
# body param: body
echo '{"Permissions": [{"Action": 98, "Resource": "kxsZuA8Q", "SchedAction": 9, "SchedCron": "bgMTOqNG", "SchedRange": ["8hP8yw6O", "5LtStXqD", "7ggp1csw"]}, {"Action": 61, "Resource": "X9gdea0l", "SchedAction": 12, "SchedCron": "UJFPBpld", "SchedRange": ["ajLqrOTU", "8KtiJ35A", "c5InQ2W2"]}, {"Action": 55, "Resource": "E7TVb4Kb", "SchedAction": 39, "SchedCron": "QW5Q8rq0", "SchedRange": ["KvrFjJMp", "qaR9Pblr", "0MGJixhp"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddUserPermissionsV3 \
    --namespace $AB_NAMESPACE \
    --userId 'TM4KGNoN' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 195 'AdminAddUserPermissionsV3' test.out

#- 196 AdminDeleteUserPermissionBulkV3
# body param: body
echo '[{"Action": 73, "Resource": "28HuhRig"}, {"Action": 34, "Resource": "4HXD9dqE"}, {"Action": 37, "Resource": "ivQQREvC"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserPermissionBulkV3 \
    --namespace $AB_NAMESPACE \
    --userId 'PHQuTZtB' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 196 'AdminDeleteUserPermissionBulkV3' test.out

#- 197 AdminDeleteUserPermissionV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserPermissionV3 \
    --action '68' \
    --namespace $AB_NAMESPACE \
    --resource 'dksxUBlj' \
    --userId 'n98h7HCq' \
    > test.out 2>&1
eval_tap $? 197 'AdminDeleteUserPermissionV3' test.out

#- 198 AdminGetUserPlatformAccountsV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserPlatformAccountsV3 \
    --namespace $AB_NAMESPACE \
    --userId 'GNNTdRXI' \
    --after 'OpecPuSR' \
    --before 'OQcUu4zw' \
    --limit '69' \
    --platformId 'jHArgCO3' \
    --targetNamespace 'eccqoBP0' \
    > test.out 2>&1
eval_tap $? 198 'AdminGetUserPlatformAccountsV3' test.out

#- 199 AdminListAllDistinctPlatformAccountsV3
$CLI_EXE \
    --sn iam \
    --op AdminListAllDistinctPlatformAccountsV3 \
    --namespace $AB_NAMESPACE \
    --userId 'k9OA3t3g' \
    --status 'IElpyPVN' \
    > test.out 2>&1
eval_tap $? 199 'AdminListAllDistinctPlatformAccountsV3' test.out

#- 200 AdminGetListJusticePlatformAccounts
$CLI_EXE \
    --sn iam \
    --op AdminGetListJusticePlatformAccounts \
    --namespace $AB_NAMESPACE \
    --userId 'VdfddeBH' \
    > test.out 2>&1
eval_tap $? 200 'AdminGetListJusticePlatformAccounts' test.out

#- 201 AdminGetUserMapping
$CLI_EXE \
    --sn iam \
    --op AdminGetUserMapping \
    --namespace $AB_NAMESPACE \
    --targetNamespace 'z3DLBGSZ' \
    --userId 'K4QGaNCT' \
    --createIfNotFound 'true' \
    > test.out 2>&1
eval_tap $? 201 'AdminGetUserMapping' test.out

#- 202 AdminCreateJusticeUser
$CLI_EXE \
    --sn iam \
    --op AdminCreateJusticeUser \
    --namespace $AB_NAMESPACE \
    --targetNamespace 'BPdIRGBf' \
    --userId 'AZB5wOcq' \
    > test.out 2>&1
eval_tap $? 202 'AdminCreateJusticeUser' test.out

#- 203 AdminLinkPlatformAccount
# body param: body
echo '{"platformId": "iwl0UR5I", "platformUserId": "iaEbLXYj"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminLinkPlatformAccount \
    --namespace $AB_NAMESPACE \
    --userId 'XmyRTkSE' \
    --skipConflict 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 203 'AdminLinkPlatformAccount' test.out

#- 204 AdminGetUserLinkHistoriesV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserLinkHistoriesV3 \
    --namespace $AB_NAMESPACE \
    --userId 'S9MNW04b' \
    --platformId '7wxG1vew' \
    > test.out 2>&1
eval_tap $? 204 'AdminGetUserLinkHistoriesV3' test.out

#- 205 AdminPlatformUnlinkV3
eval_tap 0 205 'AdminPlatformUnlinkV3 # SKIP deprecated' test.out

#- 206 AdminPlatformUnlinkAllV3
$CLI_EXE \
    --sn iam \
    --op AdminPlatformUnlinkAllV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'Iks8YabR' \
    --userId '3RYQVRPq' \
    > test.out 2>&1
eval_tap $? 206 'AdminPlatformUnlinkAllV3' test.out

#- 207 AdminPlatformLinkV3
$CLI_EXE \
    --sn iam \
    --op AdminPlatformLinkV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'plJ3vW6Z' \
    --userId 'RE95oIbD' \
    --ticket 'K3WZF9mS' \
    > test.out 2>&1
eval_tap $? 207 'AdminPlatformLinkV3' test.out

#- 208 AdminDeleteUserLinkingHistoryByPlatformIDV3
eval_tap 0 208 'AdminDeleteUserLinkingHistoryByPlatformIDV3 # SKIP deprecated' test.out

#- 209 AdminDeleteUserLinkingRestrictionByPlatformIDV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserLinkingRestrictionByPlatformIDV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'zlcx8wZ0' \
    --userId '6efBQgNq' \
    > test.out 2>&1
eval_tap $? 209 'AdminDeleteUserLinkingRestrictionByPlatformIDV3' test.out

#- 210 AdminGetThirdPartyPlatformTokenLinkStatusV3
$CLI_EXE \
    --sn iam \
    --op AdminGetThirdPartyPlatformTokenLinkStatusV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'crUsnDJt' \
    --userId 'c7IZlfyK' \
    --platformToken 'f17FNGxC' \
    > test.out 2>&1
eval_tap $? 210 'AdminGetThirdPartyPlatformTokenLinkStatusV3' test.out

#- 211 AdminGetUserSinglePlatformAccount
$CLI_EXE \
    --sn iam \
    --op AdminGetUserSinglePlatformAccount \
    --namespace $AB_NAMESPACE \
    --platformId '9jKD92CL' \
    --userId 'QcdpKxTg' \
    --crossNamespace 'true' \
    > test.out 2>&1
eval_tap $? 211 'AdminGetUserSinglePlatformAccount' test.out

#- 212 AdminDeleteUserRolesV3
# body param: body
echo '["EJDYDbhZ", "kCLrH2xr", "lJnMNlw9"]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserRolesV3 \
    --namespace $AB_NAMESPACE \
    --userId 'Fb3Cz1Vw' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 212 'AdminDeleteUserRolesV3' test.out

#- 213 AdminSaveUserRoleV3
# body param: body
echo '[{"namespace": "rx4uu12S", "roleId": "o7TCgrTe"}, {"namespace": "iC11yWiV", "roleId": "eVaERvVV"}, {"namespace": "mekORQj6", "roleId": "EOVubBpL"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminSaveUserRoleV3 \
    --namespace $AB_NAMESPACE \
    --userId 'mSCgRPUG' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 213 'AdminSaveUserRoleV3' test.out

#- 214 AdminAddUserRoleV3
$CLI_EXE \
    --sn iam \
    --op AdminAddUserRoleV3 \
    --namespace $AB_NAMESPACE \
    --roleId 'oYTTl3ko' \
    --userId 'LhgnYDQ6' \
    > test.out 2>&1
eval_tap $? 214 'AdminAddUserRoleV3' test.out

#- 215 AdminDeleteUserRoleV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserRoleV3 \
    --namespace $AB_NAMESPACE \
    --roleId 'eETGRJLT' \
    --userId 'NxKnfJKw' \
    > test.out 2>&1
eval_tap $? 215 'AdminDeleteUserRoleV3' test.out

#- 216 AdminGetUserStateByUserIdV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserStateByUserIdV3 \
    --namespace $AB_NAMESPACE \
    --userId 'hEDqCN6E' \
    > test.out 2>&1
eval_tap $? 216 'AdminGetUserStateByUserIdV3' test.out

#- 217 AdminUpdateUserStatusV3
# body param: body
echo '{"enabled": false, "reason": "elqmOvAl"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserStatusV3 \
    --namespace $AB_NAMESPACE \
    --userId 'BzpF1dgl' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 217 'AdminUpdateUserStatusV3' test.out

#- 218 AdminTrustlyUpdateUserIdentity
# body param: body
echo '{"emailAddress": "GY4cohh8", "password": "ybdjrRdF"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminTrustlyUpdateUserIdentity \
    --namespace $AB_NAMESPACE \
    --userId 'FZG7SGJ5' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 218 'AdminTrustlyUpdateUserIdentity' test.out

#- 219 AdminVerifyUserWithoutVerificationCodeV3
$CLI_EXE \
    --sn iam \
    --op AdminVerifyUserWithoutVerificationCodeV3 \
    --namespace $AB_NAMESPACE \
    --userId '2AMiHNcK' \
    > test.out 2>&1
eval_tap $? 219 'AdminVerifyUserWithoutVerificationCodeV3' test.out

#- 220 AdminUpdateClientSecretV3
# body param: body
echo '{"newSecret": "Z4R52iQm"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateClientSecretV3 \
    --clientId 'QZN5UV5H' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 220 'AdminUpdateClientSecretV3' test.out

#- 221 AdminCheckThirdPartyLoginPlatformAvailabilityV3
$CLI_EXE \
    --sn iam \
    --op AdminCheckThirdPartyLoginPlatformAvailabilityV3 \
    --platformId '608mJ4Dj' \
    > test.out 2>&1
eval_tap $? 221 'AdminCheckThirdPartyLoginPlatformAvailabilityV3' test.out

#- 222 AdminGetRolesV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRolesV3 \
    --after 'mUkYuSqJ' \
    --before '4PZUGhA9' \
    --isWildcard 'true' \
    --limit '66' \
    > test.out 2>&1
eval_tap $? 222 'AdminGetRolesV3' test.out

#- 223 AdminCreateRoleV3
# body param: body
echo '{"adminRole": false, "deletable": true, "isWildcard": true, "managers": [{"displayName": "MdgwI2f7", "namespace": "VhKfSlOV", "userId": "lAfh7GNl"}, {"displayName": "zc58rVeO", "namespace": "Dj58i3Hz", "userId": "T6fwYPhI"}, {"displayName": "AXUneEnn", "namespace": "3eMozk3y", "userId": "2kOGN6wO"}], "members": [{"displayName": "k4BMVL4M", "namespace": "lDjeFxRy", "userId": "tmxjFww7"}, {"displayName": "Y9N0G1fS", "namespace": "4SngPCe9", "userId": "buzeyI0Z"}, {"displayName": "bFYOUgwI", "namespace": "HWPHWZSd", "userId": "esbb1Ntv"}], "permissions": [{"action": 23, "resource": "3EvlDHyo", "schedAction": 94, "schedCron": "saS0yeUZ", "schedRange": ["gpklP0X6", "LmId9w9N", "YIMVxPEL"]}, {"action": 3, "resource": "rbMJY0wG", "schedAction": 23, "schedCron": "y9GUYSWT", "schedRange": ["e41OC0lx", "YL8tceIL", "M7E556Y6"]}, {"action": 54, "resource": "9NKTJ5ab", "schedAction": 28, "schedCron": "hdSniKa5", "schedRange": ["dmTLSkHx", "sJQdDh9t", "yER8lkI7"]}], "roleName": "1AWPIgc5"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminCreateRoleV3 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 223 'AdminCreateRoleV3' test.out

#- 224 AdminGetRoleV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleV3 \
    --roleId 'XrCkkUh9' \
    > test.out 2>&1
eval_tap $? 224 'AdminGetRoleV3' test.out

#- 225 AdminDeleteRoleV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteRoleV3 \
    --roleId 'qcmVbm51' \
    > test.out 2>&1
eval_tap $? 225 'AdminDeleteRoleV3' test.out

#- 226 AdminUpdateRoleV3
# body param: body
echo '{"deletable": false, "isWildcard": false, "roleName": "iJBAjBjw"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateRoleV3 \
    --roleId 'fq84X03j' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 226 'AdminUpdateRoleV3' test.out

#- 227 AdminGetRoleAdminStatusV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleAdminStatusV3 \
    --roleId 'Y4B1bzgJ' \
    > test.out 2>&1
eval_tap $? 227 'AdminGetRoleAdminStatusV3' test.out

#- 228 AdminUpdateAdminRoleStatusV3
$CLI_EXE \
    --sn iam \
    --op AdminUpdateAdminRoleStatusV3 \
    --roleId 'DhZvrLfL' \
    > test.out 2>&1
eval_tap $? 228 'AdminUpdateAdminRoleStatusV3' test.out

#- 229 AdminRemoveRoleAdminV3
$CLI_EXE \
    --sn iam \
    --op AdminRemoveRoleAdminV3 \
    --roleId 'wZWc2vk2' \
    > test.out 2>&1
eval_tap $? 229 'AdminRemoveRoleAdminV3' test.out

#- 230 AdminGetRoleManagersV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleManagersV3 \
    --roleId 'e6BvMWPk' \
    --after 'iILL0uub' \
    --before 'vCgFBtgw' \
    --limit '79' \
    > test.out 2>&1
eval_tap $? 230 'AdminGetRoleManagersV3' test.out

#- 231 AdminAddRoleManagersV3
# body param: body
echo '{"managers": [{"displayName": "ufVdgFCq", "namespace": "XZp0t9MI", "userId": "98FkKB15"}, {"displayName": "uexK8EX0", "namespace": "E3f2EIUH", "userId": "RhWtpJVh"}, {"displayName": "QjOsCzKy", "namespace": "6sOxKPzV", "userId": "oEuNfYYP"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddRoleManagersV3 \
    --roleId 'JhxSqnIu' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 231 'AdminAddRoleManagersV3' test.out

#- 232 AdminRemoveRoleManagersV3
# body param: body
echo '{"managers": [{"displayName": "SDXjJrSJ", "namespace": "sXvsSH4b", "userId": "QvXH16H5"}, {"displayName": "mSddDjG6", "namespace": "TLWtara8", "userId": "0W4zML91"}, {"displayName": "jLfSSQJj", "namespace": "5PM5sZkO", "userId": "58ocpTl5"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminRemoveRoleManagersV3 \
    --roleId '3qMEqTN6' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 232 'AdminRemoveRoleManagersV3' test.out

#- 233 AdminGetRoleMembersV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleMembersV3 \
    --roleId '2ibeFrUg' \
    --after 'LxuzBYfG' \
    --before 'p3PFP72K' \
    --limit '54' \
    > test.out 2>&1
eval_tap $? 233 'AdminGetRoleMembersV3' test.out

#- 234 AdminAddRoleMembersV3
# body param: body
echo '{"members": [{"displayName": "mP20NuCw", "namespace": "v2ATslTc", "userId": "S4IcM0BZ"}, {"displayName": "fvra4rSG", "namespace": "lMQueiZu", "userId": "mnW9OfhF"}, {"displayName": "N0AwWrIQ", "namespace": "1VwENbAA", "userId": "c25xXm9h"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddRoleMembersV3 \
    --roleId 'JtkwTZwV' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 234 'AdminAddRoleMembersV3' test.out

#- 235 AdminRemoveRoleMembersV3
eval_tap 0 235 'AdminRemoveRoleMembersV3 # SKIP deprecated' test.out

#- 236 AdminUpdateRolePermissionsV3
# body param: body
echo '{"permissions": [{"action": 76, "resource": "oIoAeFos", "schedAction": 36, "schedCron": "lHxZg5ct", "schedRange": ["HMQae51P", "zpRB5oIk", "gZdCief7"]}, {"action": 90, "resource": "4VY7XV6f", "schedAction": 61, "schedCron": "CeWFTeBh", "schedRange": ["dfSzg0VY", "QxDtVvmY", "vOl7VKoI"]}, {"action": 21, "resource": "8mvJV9Ux", "schedAction": 68, "schedCron": "yatM5I34", "schedRange": ["Sz6MqwbX", "yii0h0qD", "ZQSTlOL1"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateRolePermissionsV3 \
    --roleId 'ZPdcEhxo' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 236 'AdminUpdateRolePermissionsV3' test.out

#- 237 AdminAddRolePermissionsV3
# body param: body
echo '{"permissions": [{"action": 35, "resource": "auel07Ff", "schedAction": 14, "schedCron": "GeP6WfA0", "schedRange": ["Cy7SGTVL", "kHmpPNZ7", "66iK1F3G"]}, {"action": 79, "resource": "xEH1Akfn", "schedAction": 66, "schedCron": "CM3wbHEz", "schedRange": ["zgXEOklP", "nmUKgR21", "bVfYAh1p"]}, {"action": 44, "resource": "njsq3st3", "schedAction": 22, "schedCron": "zsetxAyu", "schedRange": ["CGXro2d7", "v9gHNogU", "H6wAmZh2"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddRolePermissionsV3 \
    --roleId 'rESsfdlY' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 237 'AdminAddRolePermissionsV3' test.out

#- 238 AdminDeleteRolePermissionsV3
# body param: body
echo '["cnjCW4o6", "VOwrRojZ", "LMgTBoiP"]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDeleteRolePermissionsV3 \
    --roleId '2NA14YhB' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 238 'AdminDeleteRolePermissionsV3' test.out

#- 239 AdminDeleteRolePermissionV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteRolePermissionV3 \
    --action '40' \
    --resource '9cI0sdcz' \
    --roleId 'dbIX6DNA' \
    > test.out 2>&1
eval_tap $? 239 'AdminDeleteRolePermissionV3' test.out

#- 240 AdminGetMyUserV3
$CLI_EXE \
    --sn iam \
    --op AdminGetMyUserV3 \
    > test.out 2>&1
eval_tap $? 240 'AdminGetMyUserV3' test.out

#- 241 UserAuthenticationV3
$CLI_EXE \
    --sn iam \
    --op UserAuthenticationV3 \
    --client_id '6zardCTl' \
    --extend_exp 'false' \
    --redirect_uri 'PEmsUbM8' \
    --password 'AOURXxTP' \
    --request_id 'brH1LWTm' \
    --user_name 'KAHXgL4f' \
    > test.out 2>&1
eval_tap $? 241 'UserAuthenticationV3' test.out

#- 242 AuthenticationWithPlatformLinkV3
$CLI_EXE \
    --sn iam \
    --op AuthenticationWithPlatformLinkV3 \
    --extend_exp 'true' \
    --client_id 'aQrD0gH8' \
    --linkingToken 'KTeleAhj' \
    --password 'F26RrvOb' \
    --username 'F8r4nCQY' \
    > test.out 2>&1
eval_tap $? 242 'AuthenticationWithPlatformLinkV3' test.out

#- 243 AuthenticateAndLinkForwardV3
$CLI_EXE \
    --sn iam \
    --op AuthenticateAndLinkForwardV3 \
    --extend_exp 'false' \
    --client_id 'KbyDp4DN' \
    --linkingToken 'iPGNYXsi' \
    --password 'uIukMQta' \
    --username 'gjniyXJi' \
    > test.out 2>&1
eval_tap $? 243 'AuthenticateAndLinkForwardV3' test.out

#- 244 PublicGetSystemConfigV3
$CLI_EXE \
    --sn iam \
    --op PublicGetSystemConfigV3 \
    > test.out 2>&1
eval_tap $? 244 'PublicGetSystemConfigV3' test.out

#- 245 GenerateTokenByNewHeadlessAccountV3
$CLI_EXE \
    --sn iam \
    --op GenerateTokenByNewHeadlessAccountV3 \
    --additionalData 'VGJvw6LC' \
    --extend_exp 'false' \
    --linkingToken 'J7khZF8h' \
    > test.out 2>&1
eval_tap $? 245 'GenerateTokenByNewHeadlessAccountV3' test.out

#- 246 RequestOneTimeLinkingCodeV3
$CLI_EXE \
    --sn iam \
    --op RequestOneTimeLinkingCodeV3 \
    --redirectUri 'KFOyc0Og' \
    --state 'WFTLz0p7' \
    --platformId 'YhLDoRPN' \
    > test.out 2>&1
eval_tap $? 246 'RequestOneTimeLinkingCodeV3' test.out

#- 247 ValidateOneTimeLinkingCodeV3
$CLI_EXE \
    --sn iam \
    --op ValidateOneTimeLinkingCodeV3 \
    --oneTimeLinkCode 'lX4aELfu' \
    > test.out 2>&1
eval_tap $? 247 'ValidateOneTimeLinkingCodeV3' test.out

#- 248 RequestTokenByOneTimeLinkCodeResponseV3
$CLI_EXE \
    --sn iam \
    --op RequestTokenByOneTimeLinkCodeResponseV3 \
    --additionalData 'Ln7cjrq0' \
    --isTransient 'false' \
    --client_id 'FZIo61qK' \
    --oneTimeLinkCode 'YAkmPCLH' \
    > test.out 2>&1
eval_tap $? 248 'RequestTokenByOneTimeLinkCodeResponseV3' test.out

#- 249 GetCountryLocationV3
$CLI_EXE \
    --sn iam \
    --op GetCountryLocationV3 \
    > test.out 2>&1
eval_tap $? 249 'GetCountryLocationV3' test.out

#- 250 Logout
$CLI_EXE \
    --sn iam \
    --op Logout \
    > test.out 2>&1
eval_tap $? 250 'Logout' test.out

#- 251 RequestTokenExchangeCodeV3
$CLI_EXE \
    --sn iam \
    --op RequestTokenExchangeCodeV3 \
    --namespace $AB_NAMESPACE \
    --codeChallenge 'txBSUSRk' \
    --codeChallengeMethod 'S256' \
    --client_id 'JIUX4YNN' \
    > test.out 2>&1
eval_tap $? 251 'RequestTokenExchangeCodeV3' test.out

#- 252 AdminRetrieveUserThirdPartyPlatformTokenV3
$CLI_EXE \
    --sn iam \
    --op AdminRetrieveUserThirdPartyPlatformTokenV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'kPB04SHH' \
    --userId 'oElnjaFv' \
    --platformUserId 'WyyPn5Hi' \
    > test.out 2>&1
eval_tap $? 252 'AdminRetrieveUserThirdPartyPlatformTokenV3' test.out

#- 253 RevokeUserV3
$CLI_EXE \
    --sn iam \
    --op RevokeUserV3 \
    --namespace $AB_NAMESPACE \
    --userId '1cOly3hK' \
    --includeGameNamespace 'true' \
    > test.out 2>&1
eval_tap $? 253 'RevokeUserV3' test.out

#- 254 AuthorizeV3
$CLI_EXE \
    --sn iam \
    --op AuthorizeV3 \
    --blockedPlatformId 'gYDCQ2Gb' \
    --codeChallenge 'MwQIMi0u' \
    --codeChallengeMethod 'plain' \
    --createHeadless 'true' \
    --loginWebBased 'false' \
    --nonce 'xkVagyWV' \
    --oneTimeLinkCode 'p2n9OyBb' \
    --redirectUri 'TBNFH7KY' \
    --scope 'Z3fSXsZM' \
    --state 'muDYgD6p' \
    --targetAuthPage 'EaKreYVi' \
    --useRedirectUriAsLoginUrlWhenLocked 'true' \
    --clientId 'FfbYIGmf' \
    --responseType 'code' \
    > test.out 2>&1
eval_tap $? 254 'AuthorizeV3' test.out

#- 255 TokenIntrospectionV3
$CLI_EXE \
    --sn iam \
    --op TokenIntrospectionV3 \
    --token '9RdTEqCK' \
    > test.out 2>&1
eval_tap $? 255 'TokenIntrospectionV3' test.out

#- 256 GetJWKSV3
$CLI_EXE \
    --sn iam \
    --op GetJWKSV3 \
    > test.out 2>&1
eval_tap $? 256 'GetJWKSV3' test.out

#- 257 SendMFAAuthenticationCode
$CLI_EXE \
    --sn iam \
    --op SendMFAAuthenticationCode \
    --clientId 'tV8upCcp' \
    --factor '8iSkYrNc' \
    --mfaToken 'X0FFge6y' \
    > test.out 2>&1
eval_tap $? 257 'SendMFAAuthenticationCode' test.out

#- 258 Change2faMethod
$CLI_EXE \
    --sn iam \
    --op Change2faMethod \
    --factor 'Ftdi8crf' \
    --mfaToken 'zJr3suix' \
    > test.out 2>&1
eval_tap $? 258 'Change2faMethod' test.out

#- 259 Verify2faCode
$CLI_EXE \
    --sn iam \
    --op Verify2faCode \
    --code 'luylfvqb' \
    --factor 'EIwYFmSW' \
    --mfaToken 'lCCkxn9f' \
    --rememberDevice 'false' \
    > test.out 2>&1
eval_tap $? 259 'Verify2faCode' test.out

#- 260 Verify2faCodeForward
$CLI_EXE \
    --sn iam \
    --op Verify2faCodeForward \
    --defaultFactor 'W0rd8okw' \
    --factors 'quX66ZAW' \
    --rememberDevice 'true' \
    --clientId '4panosvy' \
    --code 'QCBvVxOR' \
    --factor 'x1BkFIK9' \
    --mfaToken 'XW7YSPUo' \
    > test.out 2>&1
eval_tap $? 260 'Verify2faCodeForward' test.out

#- 261 RetrieveUserThirdPartyPlatformTokenV3
$CLI_EXE \
    --sn iam \
    --op RetrieveUserThirdPartyPlatformTokenV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'O64rdeBH' \
    --userId 'myN0uVvq' \
    > test.out 2>&1
eval_tap $? 261 'RetrieveUserThirdPartyPlatformTokenV3' test.out

#- 262 AuthCodeRequestV3
$CLI_EXE \
    --sn iam \
    --op AuthCodeRequestV3 \
    --platformId 'gnYidQbI' \
    --clientId 'QVamCzS9' \
    --redirectUri '1F53GIuN' \
    --requestId 'cgJi0Ill' \
    > test.out 2>&1
eval_tap $? 262 'AuthCodeRequestV3' test.out

#- 263 PlatformTokenGrantV3
$CLI_EXE \
    --sn iam \
    --op PlatformTokenGrantV3 \
    --platformId 'LrVkcNG2' \
    --additionalData 'hvjQNFoY' \
    --client_id 'Hrc1GLua' \
    --createHeadless 'false' \
    --device_id 'ocwJ3OL1' \
    --macAddress 'upqluHL6' \
    --platform_token '7jjJruEJ' \
    --serviceLabel '0.8471359079209867' \
    --skipSetCookie 'true' \
    > test.out 2>&1
eval_tap $? 263 'PlatformTokenGrantV3' test.out

#- 264 GetRevocationListV3
$CLI_EXE \
    --sn iam \
    --op GetRevocationListV3 \
    > test.out 2>&1
eval_tap $? 264 'GetRevocationListV3' test.out

#- 265 TokenRevocationV3
$CLI_EXE \
    --sn iam \
    --op TokenRevocationV3 \
    --token '1YaerBqF' \
    > test.out 2>&1
eval_tap $? 265 'TokenRevocationV3' test.out

#- 266 SimultaneousLoginV3
$CLI_EXE \
    --sn iam \
    --op SimultaneousLoginV3 \
    --simultaneousPlatform 'IBBXtTTV' \
    --simultaneousTicket '4WR4rb0Y' \
    --nativePlatform 'epicgames' \
    --nativePlatformTicket 'MWYl0DY9' \
    > test.out 2>&1
eval_tap $? 266 'SimultaneousLoginV3' test.out

#- 267 TokenGrantV3
$CLI_EXE \
    --sn iam \
    --op TokenGrantV3 \
    --additionalData 'tNxHnRem' \
    --client_id 'EHhZOd50' \
    --client_secret 'ACi9dCpW' \
    --code 'GldDnTCm' \
    --code_verifier '0aakxtUA' \
    --extendNamespace '6KsD57hm' \
    --extend_exp 'false' \
    --password 'u66HxXpP' \
    --redirect_uri 'TMTxnK6x' \
    --refresh_token 'FKowX7L9' \
    --scope '3n5JbwBU' \
    --username 'QHBBnlIv' \
    --grant_type 'refresh_token' \
    > test.out 2>&1
eval_tap $? 267 'TokenGrantV3' test.out

#- 268 VerifyTokenV3
$CLI_EXE \
    --sn iam \
    --op VerifyTokenV3 \
    --token 'NQuVY7zB' \
    > test.out 2>&1
eval_tap $? 268 'VerifyTokenV3' test.out

#- 269 PlatformAuthenticationV3
$CLI_EXE \
    --sn iam \
    --op PlatformAuthenticationV3 \
    --platformId 'DVlKK14q' \
    --code 'rIjdsuaN' \
    --error 'XsRLB3au' \
    --openidAssocHandle 'spAqZ8k6' \
    --openidClaimedId 'KrgFRs9k' \
    --openidIdentity 'nnZo0cgF' \
    --openidMode 'bjGAFw52' \
    --openidNs 'NCDcrdg3' \
    --openidOpEndpoint 'Zrnypj6v' \
    --openidResponseNonce 'J5EKI4gW' \
    --openidReturnTo 'HZ6HTrTH' \
    --openidSig 'GLEcOGdC' \
    --openidSigned '8yar7eOb' \
    --state 'MgJTdId9' \
    > test.out 2>&1
eval_tap $? 269 'PlatformAuthenticationV3' test.out

#- 270 PlatformTokenRefreshV3
$CLI_EXE \
    --sn iam \
    --op PlatformTokenRefreshV3 \
    --platformId 'kcSgPwFX' \
    --platform_token 'EKXVr9Ys' \
    > test.out 2>&1
eval_tap $? 270 'PlatformTokenRefreshV3' test.out

#- 271 PublicGetInputValidations
$CLI_EXE \
    --sn iam \
    --op PublicGetInputValidations \
    --defaultOnEmpty 'false' \
    --languageCode '5BnVFmTC' \
    > test.out 2>&1
eval_tap $? 271 'PublicGetInputValidations' test.out

#- 272 PublicGetInputValidationByField
$CLI_EXE \
    --sn iam \
    --op PublicGetInputValidationByField \
    --field 'jvx3BU7p' \
    > test.out 2>&1
eval_tap $? 272 'PublicGetInputValidationByField' test.out

#- 273 PublicGetCountryAgeRestrictionV3
$CLI_EXE \
    --sn iam \
    --op PublicGetCountryAgeRestrictionV3 \
    --countryCode 'qI359Lbx' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 273 'PublicGetCountryAgeRestrictionV3' test.out

#- 274 PublicGetConfigValueV3
$CLI_EXE \
    --sn iam \
    --op PublicGetConfigValueV3 \
    --configKey '5yIKiTok' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 274 'PublicGetConfigValueV3' test.out

#- 275 PublicGetCountryListV3
$CLI_EXE \
    --sn iam \
    --op PublicGetCountryListV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 275 'PublicGetCountryListV3' test.out

#- 276 RetrieveAllActiveThirdPartyLoginPlatformCredentialPublicV3
$CLI_EXE \
    --sn iam \
    --op RetrieveAllActiveThirdPartyLoginPlatformCredentialPublicV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 276 'RetrieveAllActiveThirdPartyLoginPlatformCredentialPublicV3' test.out

#- 277 RetrieveActiveOIDCClientsPublicV3
$CLI_EXE \
    --sn iam \
    --op RetrieveActiveOIDCClientsPublicV3 \
    --namespace $AB_NAMESPACE \
    --clientId '2JR7slmW' \
    > test.out 2>&1
eval_tap $? 277 'RetrieveActiveOIDCClientsPublicV3' test.out

#- 278 PublicListUserIDByPlatformUserIDsV3
eval_tap 0 278 'PublicListUserIDByPlatformUserIDsV3 # SKIP deprecated' test.out

#- 279 PublicGetUserByPlatformUserIDV3
eval_tap 0 279 'PublicGetUserByPlatformUserIDV3 # SKIP deprecated' test.out

#- 280 PublicGetProfileUpdateStrategyV3
$CLI_EXE \
    --sn iam \
    --op PublicGetProfileUpdateStrategyV3 \
    --namespace $AB_NAMESPACE \
    --field 'dob' \
    > test.out 2>&1
eval_tap $? 280 'PublicGetProfileUpdateStrategyV3' test.out

#- 281 PublicGetAsyncStatus
$CLI_EXE \
    --sn iam \
    --op PublicGetAsyncStatus \
    --namespace $AB_NAMESPACE \
    --requestId 'sL23fehZ' \
    > test.out 2>&1
eval_tap $? 281 'PublicGetAsyncStatus' test.out

#- 282 PublicSearchUserV3
$CLI_EXE \
    --sn iam \
    --op PublicSearchUserV3 \
    --namespace $AB_NAMESPACE \
    --by 'Yq5DXXE2' \
    --limit '63' \
    --offset '41' \
    --platformBy '91Lsteme' \
    --platformId 'tdM5USRu' \
    --query 'SSC8YrLt' \
    > test.out 2>&1
eval_tap $? 282 'PublicSearchUserV3' test.out

#- 283 PublicCreateUserV3
# body param: body
echo '{"PasswordMD5Sum": "AZSXBMBF", "acceptedPolicies": [{"isAccepted": false, "localizedPolicyVersionId": "rHbu96U3", "policyId": "BrPvemai", "policyVersionId": "YDDaQnAY"}, {"isAccepted": false, "localizedPolicyVersionId": "169o4Zih", "policyId": "uqFzqgzN", "policyVersionId": "moAvfgyt"}, {"isAccepted": false, "localizedPolicyVersionId": "rc04LGRU", "policyId": "wOBtN5Cw", "policyVersionId": "h7ItaVrA"}], "authType": "rMh2dAbQ", "code": "dPaX8Mlb", "country": "MPYxabTF", "dateOfBirth": "sG0cFnt6", "displayName": "CPrMYlgj", "emailAddress": "H9kQipQN", "password": "N2c7sme9", "reachMinimumAge": false, "uniqueDisplayName": "qgxdcQXU"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicCreateUserV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 283 'PublicCreateUserV3' test.out

#- 284 CheckUserAvailability
$CLI_EXE \
    --sn iam \
    --op CheckUserAvailability \
    --namespace $AB_NAMESPACE \
    --field '3m71VnWT' \
    --query 'Z6mWWsSE' \
    > test.out 2>&1
eval_tap $? 284 'CheckUserAvailability' test.out

#- 285 PublicBulkGetUsers
eval_tap 0 285 'PublicBulkGetUsers # SKIP deprecated' test.out

#- 286 PublicSendRegistrationCode
# body param: body
echo '{"emailAddress": "3lcilZcM", "languageTag": "CrdHY4uj"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicSendRegistrationCode \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 286 'PublicSendRegistrationCode' test.out

#- 287 PublicVerifyRegistrationCode
# body param: body
echo '{"code": "6iOLIaN3", "emailAddress": "MId7WrTt"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicVerifyRegistrationCode \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 287 'PublicVerifyRegistrationCode' test.out

#- 288 PublicForgotPasswordV3
# body param: body
echo '{"emailAddress": "RDeNKXsb", "languageTag": "2y6U3Te0"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicForgotPasswordV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 288 'PublicForgotPasswordV3' test.out

#- 289 PublicValidateUserInput
# body param: body
echo '{"displayName": "xuHxCz43", "password": "Ra8TCG7w", "uniqueDisplayName": "ijSEGu4C", "username": "yEwL3ioO"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicValidateUserInput \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 289 'PublicValidateUserInput' test.out

#- 290 GetAdminInvitationV3
$CLI_EXE \
    --sn iam \
    --op GetAdminInvitationV3 \
    --invitationId 'lSrz94bv' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 290 'GetAdminInvitationV3' test.out

#- 291 CreateUserFromInvitationV3
# body param: body
echo '{"PasswordMD5Sum": "yMyXq6X2", "acceptedPolicies": [{"isAccepted": true, "localizedPolicyVersionId": "nISgKgVe", "policyId": "ay1BSnxq", "policyVersionId": "t6OxRRmt"}, {"isAccepted": true, "localizedPolicyVersionId": "abCm8taJ", "policyId": "ouhhnPTH", "policyVersionId": "Yl32w5y6"}, {"isAccepted": true, "localizedPolicyVersionId": "8yirAglf", "policyId": "Qih5lUrQ", "policyVersionId": "xDVCefIP"}], "authType": "I1RszDQB", "code": "88oaaP7M", "country": "mbUmO8Uz", "dateOfBirth": "tWpjFi6d", "displayName": "COBTeRxc", "emailAddress": "84llzUVX", "password": "BVUEqx9q", "reachMinimumAge": false, "uniqueDisplayName": "JaTaMbSM"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op CreateUserFromInvitationV3 \
    --invitationId 'cKKmvxuT' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 291 'CreateUserFromInvitationV3' test.out

#- 292 UpdateUserV3
# body param: body
echo '{"avatarUrl": "ZN2wHstZ", "country": "olYYFly4", "dateOfBirth": "5WFdCMxN", "displayName": "SR81UplU", "languageTag": "UeI2qOlu", "uniqueDisplayName": "o6UqIPmS", "userName": "tltzhGVv"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op UpdateUserV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 292 'UpdateUserV3' test.out

#- 293 PublicPartialUpdateUserV3
# body param: body
echo '{"avatarUrl": "T6T0WtQg", "country": "o9hnXR58", "dateOfBirth": "UgBIL4JX", "displayName": "lc9j5wlr", "languageTag": "OIKGJB54", "uniqueDisplayName": "6y5CL3NH", "userName": "XoS62QQC"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicPartialUpdateUserV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 293 'PublicPartialUpdateUserV3' test.out

#- 294 PublicSendVerificationCodeV3
# body param: body
echo '{"context": "ZqYRKgMY", "emailAddress": "Zv8k1HPP", "languageTag": "TzyK4TXR", "upgradeToken": "xfZOlkgL"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicSendVerificationCodeV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 294 'PublicSendVerificationCodeV3' test.out

#- 295 PublicUserVerificationV3
# body param: body
echo '{"code": "fCLyk8DG", "contactType": "WkFbU07o", "languageTag": "Kdx94AD9", "validateOnly": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUserVerificationV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 295 'PublicUserVerificationV3' test.out

#- 296 PublicUpgradeHeadlessAccountV3
# body param: body
echo '{"code": "WwWSImDP", "country": "kllGFzy1", "dateOfBirth": "EFS9GxBx", "displayName": "HHGHtx3l", "emailAddress": "TI9Ez20Q", "password": "nJSwLrWD", "uniqueDisplayName": "Cam0R7jp", "validateOnly": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpgradeHeadlessAccountV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 296 'PublicUpgradeHeadlessAccountV3' test.out

#- 297 PublicVerifyHeadlessAccountV3
# body param: body
echo '{"emailAddress": "OPmAAoxm", "password": "S0rZCSda"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicVerifyHeadlessAccountV3 \
    --namespace $AB_NAMESPACE \
    --needVerificationCode 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 297 'PublicVerifyHeadlessAccountV3' test.out

#- 298 PublicUpdatePasswordV3
# body param: body
echo '{"languageTag": "PSTWCNEF", "mfaToken": "Ts0caCt5", "newPassword": "tDRRGa0A", "oldPassword": "jA5KefWm"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpdatePasswordV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 298 'PublicUpdatePasswordV3' test.out

#- 299 PublicCreateJusticeUser
$CLI_EXE \
    --sn iam \
    --op PublicCreateJusticeUser \
    --namespace $AB_NAMESPACE \
    --targetNamespace 'KvWBfqg2' \
    > test.out 2>&1
eval_tap $? 299 'PublicCreateJusticeUser' test.out

#- 300 PublicPlatformLinkV3
$CLI_EXE \
    --sn iam \
    --op PublicPlatformLinkV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'dNMFH2YU' \
    --redirectUri 'EdIIScjJ' \
    --ticket 'EuOJl9g8' \
    > test.out 2>&1
eval_tap $? 300 'PublicPlatformLinkV3' test.out

#- 301 PublicPlatformUnlinkV3
eval_tap 0 301 'PublicPlatformUnlinkV3 # SKIP deprecated' test.out

#- 302 PublicPlatformUnlinkAllV3
$CLI_EXE \
    --sn iam \
    --op PublicPlatformUnlinkAllV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'qRz8vjXp' \
    > test.out 2>&1
eval_tap $? 302 'PublicPlatformUnlinkAllV3' test.out

#- 303 PublicForcePlatformLinkV3
$CLI_EXE \
    --sn iam \
    --op PublicForcePlatformLinkV3 \
    --namespace $AB_NAMESPACE \
    --platformId '5cJzKdlk' \
    --ticket 'quzyg76G' \
    > test.out 2>&1
eval_tap $? 303 'PublicForcePlatformLinkV3' test.out

#- 304 PublicWebLinkPlatform
$CLI_EXE \
    --sn iam \
    --op PublicWebLinkPlatform \
    --namespace $AB_NAMESPACE \
    --platformId 'eyD2vi6g' \
    --clientId 'uPiWx9dR' \
    --redirectUri 'kTqYbP5b' \
    > test.out 2>&1
eval_tap $? 304 'PublicWebLinkPlatform' test.out

#- 305 PublicWebLinkPlatformEstablish
$CLI_EXE \
    --sn iam \
    --op PublicWebLinkPlatformEstablish \
    --namespace $AB_NAMESPACE \
    --platformId '46HHV1W1' \
    --code 'kUJm7OZb' \
    --state '1AKgkESV' \
    > test.out 2>&1
eval_tap $? 305 'PublicWebLinkPlatformEstablish' test.out

#- 306 PublicProcessWebLinkPlatformV3
$CLI_EXE \
    --sn iam \
    --op PublicProcessWebLinkPlatformV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'qtEauhS0' \
    --code 'gpNTMy2B' \
    --state '73WULIIQ' \
    > test.out 2>&1
eval_tap $? 306 'PublicProcessWebLinkPlatformV3' test.out

#- 307 PublicGetUsersPlatformInfosV3
# body param: body
echo '{"platformId": "Wv52C0Ri", "userIds": ["cjLtgaR0", "kYEWHDtU", "GsWjePUM"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicGetUsersPlatformInfosV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 307 'PublicGetUsersPlatformInfosV3' test.out

#- 308 ResetPasswordV3
# body param: body
echo '{"clientId": "uRIbkerq", "code": "xdFb7JKl", "emailAddress": "0wALUBFS", "languageTag": "f3roNfYD", "newPassword": "xk3TzrN1"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op ResetPasswordV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 308 'ResetPasswordV3' test.out

#- 309 PublicGetUserByUserIdV3
eval_tap 0 309 'PublicGetUserByUserIdV3 # SKIP deprecated' test.out

#- 310 PublicGetUserBanHistoryV3
$CLI_EXE \
    --sn iam \
    --op PublicGetUserBanHistoryV3 \
    --namespace $AB_NAMESPACE \
    --userId 'bjUVCqoJ' \
    --activeOnly 'false' \
    --after 'He1vsKSp' \
    --before 'fjI7tTWI' \
    --limit '67' \
    > test.out 2>&1
eval_tap $? 310 'PublicGetUserBanHistoryV3' test.out

#- 311 PublicListUserAllPlatformAccountsDistinctV3
$CLI_EXE \
    --sn iam \
    --op PublicListUserAllPlatformAccountsDistinctV3 \
    --namespace $AB_NAMESPACE \
    --userId 'uvt7wi2x' \
    > test.out 2>&1
eval_tap $? 311 'PublicListUserAllPlatformAccountsDistinctV3' test.out

#- 312 PublicGetUserInformationV3
$CLI_EXE \
    --sn iam \
    --op PublicGetUserInformationV3 \
    --namespace $AB_NAMESPACE \
    --userId 'G5KG98Zz' \
    > test.out 2>&1
eval_tap $? 312 'PublicGetUserInformationV3' test.out

#- 313 PublicGetUserLoginHistoriesV3
$CLI_EXE \
    --sn iam \
    --op PublicGetUserLoginHistoriesV3 \
    --namespace $AB_NAMESPACE \
    --userId 'plkms8xm' \
    --after '0.3539239825356886' \
    --before '0.12452267929564642' \
    --limit '3' \
    > test.out 2>&1
eval_tap $? 313 'PublicGetUserLoginHistoriesV3' test.out

#- 314 PublicGetUserPlatformAccountsV3
$CLI_EXE \
    --sn iam \
    --op PublicGetUserPlatformAccountsV3 \
    --namespace $AB_NAMESPACE \
    --userId 'Fj8cZbHA' \
    --after 'PvJKAvs8' \
    --before 'Oa5m4Vvt' \
    --limit '12' \
    --platformId 'z4D6XTzZ' \
    > test.out 2>&1
eval_tap $? 314 'PublicGetUserPlatformAccountsV3' test.out

#- 315 PublicListJusticePlatformAccountsV3
$CLI_EXE \
    --sn iam \
    --op PublicListJusticePlatformAccountsV3 \
    --namespace $AB_NAMESPACE \
    --userId 'scI5Clkk' \
    > test.out 2>&1
eval_tap $? 315 'PublicListJusticePlatformAccountsV3' test.out

#- 316 PublicLinkPlatformAccount
# body param: body
echo '{"platformId": "KSiclahJ", "platformUserId": "vaPsXw4f"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicLinkPlatformAccount \
    --namespace $AB_NAMESPACE \
    --userId 'czhFvCFr' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 316 'PublicLinkPlatformAccount' test.out

#- 317 PublicForceLinkPlatformWithProgression
# body param: body
echo '{"chosenNamespaces": ["lKQuINgJ", "nBFAyljR", "mYvQkeCY"], "requestId": "7MDwXCoE"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicForceLinkPlatformWithProgression \
    --namespace $AB_NAMESPACE \
    --userId 'zd8M75DN' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 317 'PublicForceLinkPlatformWithProgression' test.out

#- 318 PublicGetPublisherUserV3
$CLI_EXE \
    --sn iam \
    --op PublicGetPublisherUserV3 \
    --namespace $AB_NAMESPACE \
    --userId 'xRyoBe87' \
    > test.out 2>&1
eval_tap $? 318 'PublicGetPublisherUserV3' test.out

#- 319 PublicValidateUserByUserIDAndPasswordV3
$CLI_EXE \
    --sn iam \
    --op PublicValidateUserByUserIDAndPasswordV3 \
    --namespace $AB_NAMESPACE \
    --userId 'lFCBlVUa' \
    --password 'BCBuOTZ3' \
    > test.out 2>&1
eval_tap $? 319 'PublicValidateUserByUserIDAndPasswordV3' test.out

#- 320 PublicGetRolesV3
$CLI_EXE \
    --sn iam \
    --op PublicGetRolesV3 \
    --after 'GT0hPdpp' \
    --before 'VZmrOV4u' \
    --isWildcard 'true' \
    --limit '99' \
    > test.out 2>&1
eval_tap $? 320 'PublicGetRolesV3' test.out

#- 321 PublicGetRoleV3
$CLI_EXE \
    --sn iam \
    --op PublicGetRoleV3 \
    --roleId '3uf6DTvp' \
    > test.out 2>&1
eval_tap $? 321 'PublicGetRoleV3' test.out

#- 322 PublicForgotPasswordWithoutNamespaceV3
# body param: body
echo '{"clientId": "T9tCgsQA", "emailAddress": "sK3cjJNH", "languageTag": "ODVLFzGh"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicForgotPasswordWithoutNamespaceV3 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 322 'PublicForgotPasswordWithoutNamespaceV3' test.out

#- 323 PublicGetMyUserV3
$CLI_EXE \
    --sn iam \
    --op PublicGetMyUserV3 \
    --includeAllPlatforms 'false' \
    > test.out 2>&1
eval_tap $? 323 'PublicGetMyUserV3' test.out

#- 324 PublicSendCodeForwardV3
# body param: body
echo '{"context": "BcyQ7uEw", "emailAddress": "64uKtiqy", "languageTag": "qIco7cR1", "upgradeToken": "yBFfZn3i"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicSendCodeForwardV3 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 324 'PublicSendCodeForwardV3' test.out

#- 325 PublicGetLinkHeadlessAccountToMyAccountConflictV3
$CLI_EXE \
    --sn iam \
    --op PublicGetLinkHeadlessAccountToMyAccountConflictV3 \
    --oneTimeLinkCode 'c7pkLE55' \
    > test.out 2>&1
eval_tap $? 325 'PublicGetLinkHeadlessAccountToMyAccountConflictV3' test.out

#- 326 LinkHeadlessAccountToMyAccountV3
# body param: body
echo '{"chosenNamespaces": ["Al9Bj1lT", "zYQSygCG", "RDNB8heb"], "oneTimeLinkCode": "eUtOi9xA"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op LinkHeadlessAccountToMyAccountV3 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 326 'LinkHeadlessAccountToMyAccountV3' test.out

#- 327 PublicGetMyRedirectionAfterLinkV3
$CLI_EXE \
    --sn iam \
    --op PublicGetMyRedirectionAfterLinkV3 \
    --oneTimeLinkCode 'wZSxB0k2' \
    > test.out 2>&1
eval_tap $? 327 'PublicGetMyRedirectionAfterLinkV3' test.out

#- 328 PublicGetMyProfileAllowUpdateStatusV3
$CLI_EXE \
    --sn iam \
    --op PublicGetMyProfileAllowUpdateStatusV3 \
    > test.out 2>&1
eval_tap $? 328 'PublicGetMyProfileAllowUpdateStatusV3' test.out

#- 329 PublicSendVerificationLinkV3
# body param: body
echo '{"languageTag": "505vpeos"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicSendVerificationLinkV3 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 329 'PublicSendVerificationLinkV3' test.out

#- 330 PublicGetOpenidUserInfoV3
$CLI_EXE \
    --sn iam \
    --op PublicGetOpenidUserInfoV3 \
    > test.out 2>&1
eval_tap $? 330 'PublicGetOpenidUserInfoV3' test.out

#- 331 PublicVerifyUserByLinkV3
$CLI_EXE \
    --sn iam \
    --op PublicVerifyUserByLinkV3 \
    --code 'wEWPgn1k' \
    > test.out 2>&1
eval_tap $? 331 'PublicVerifyUserByLinkV3' test.out

#- 332 PlatformAuthenticateSAMLV3Handler
$CLI_EXE \
    --sn iam \
    --op PlatformAuthenticateSAMLV3Handler \
    --platformId 'KCs0NpwK' \
    --code 'nIyJY8bt' \
    --error 'X8rrjge7' \
    --state 'MgQ3nvEl' \
    > test.out 2>&1
eval_tap $? 332 'PlatformAuthenticateSAMLV3Handler' test.out

#- 333 LoginSSOClient
$CLI_EXE \
    --sn iam \
    --op LoginSSOClient \
    --platformId 'OcWJwPfn' \
    --payload 'h7Gp0mfD' \
    > test.out 2>&1
eval_tap $? 333 'LoginSSOClient' test.out

#- 334 LogoutSSOClient
$CLI_EXE \
    --sn iam \
    --op LogoutSSOClient \
    --platformId '88Cztlhx' \
    > test.out 2>&1
eval_tap $? 334 'LogoutSSOClient' test.out

#- 335 RequestTargetTokenResponseV3
$CLI_EXE \
    --sn iam \
    --op RequestTargetTokenResponseV3 \
    --additionalData 'XxgYhJ1z' \
    --code 'WWZODcEu' \
    > test.out 2>&1
eval_tap $? 335 'RequestTargetTokenResponseV3' test.out

#- 336 UpgradeAndAuthenticateForwardV3
$CLI_EXE \
    --sn iam \
    --op UpgradeAndAuthenticateForwardV3 \
    --client_id 'T0IaMOBq' \
    --upgrade_success_token 'nXmIJjSs' \
    > test.out 2>&1
eval_tap $? 336 'UpgradeAndAuthenticateForwardV3' test.out

#- 337 AdminListInvitationHistoriesV4
$CLI_EXE \
    --sn iam \
    --op AdminListInvitationHistoriesV4 \
    --limit '66' \
    --namespace_ 'tU2lA342' \
    --offset '94' \
    > test.out 2>&1
eval_tap $? 337 'AdminListInvitationHistoriesV4' test.out

#- 338 AdminGetDevicesByUserV4
$CLI_EXE \
    --sn iam \
    --op AdminGetDevicesByUserV4 \
    --namespace $AB_NAMESPACE \
    --userId 'Vwm5RgBM' \
    > test.out 2>&1
eval_tap $? 338 'AdminGetDevicesByUserV4' test.out

#- 339 AdminGetBannedDevicesV4
$CLI_EXE \
    --sn iam \
    --op AdminGetBannedDevicesV4 \
    --namespace $AB_NAMESPACE \
    --deviceType 'Bj5jvNT9' \
    --endDate 'jmOfp54D' \
    --limit '31' \
    --offset '67' \
    --startDate 'aaVyDKnS' \
    > test.out 2>&1
eval_tap $? 339 'AdminGetBannedDevicesV4' test.out

#- 340 AdminGetUserDeviceBansV4
$CLI_EXE \
    --sn iam \
    --op AdminGetUserDeviceBansV4 \
    --namespace $AB_NAMESPACE \
    --userId '5bJLocwG' \
    > test.out 2>&1
eval_tap $? 340 'AdminGetUserDeviceBansV4' test.out

#- 341 AdminBanDeviceV4
# body param: body
echo '{"comment": "VVhWJiu6", "deviceId": "3GerZXKE", "deviceType": "yOJcJT7H", "enabled": true, "endDate": "qASz0nPX", "ext": {"ercbBkIy": {}, "0ga09wUi": {}, "Wf3qWDDz": {}}, "reason": "LUs9S3CH"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBanDeviceV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 341 'AdminBanDeviceV4' test.out

#- 342 AdminGetDeviceBanV4
$CLI_EXE \
    --sn iam \
    --op AdminGetDeviceBanV4 \
    --banId 'IoiNNstr' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 342 'AdminGetDeviceBanV4' test.out

#- 343 AdminUpdateDeviceBanV4
# body param: body
echo '{"enabled": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateDeviceBanV4 \
    --banId 'FtRDjRl1' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 343 'AdminUpdateDeviceBanV4' test.out

#- 344 AdminGenerateReportV4
$CLI_EXE \
    --sn iam \
    --op AdminGenerateReportV4 \
    --namespace $AB_NAMESPACE \
    --endDate 'qn0kE2ow' \
    --startDate 'FTXJh0h4' \
    --deviceType 'CyeqQCcI' \
    > test.out 2>&1
eval_tap $? 344 'AdminGenerateReportV4' test.out

#- 345 AdminGetDeviceTypesV4
$CLI_EXE \
    --sn iam \
    --op AdminGetDeviceTypesV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 345 'AdminGetDeviceTypesV4' test.out

#- 346 AdminGetDeviceBansV4
$CLI_EXE \
    --sn iam \
    --op AdminGetDeviceBansV4 \
    --deviceId '90qDprff' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 346 'AdminGetDeviceBansV4' test.out

#- 347 AdminDecryptDeviceV4
eval_tap 0 347 'AdminDecryptDeviceV4 # SKIP deprecated' test.out

#- 348 AdminUnbanDeviceV4
$CLI_EXE \
    --sn iam \
    --op AdminUnbanDeviceV4 \
    --deviceId 'nkfPRnLV' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 348 'AdminUnbanDeviceV4' test.out

#- 349 AdminGetUsersByDeviceV4
$CLI_EXE \
    --sn iam \
    --op AdminGetUsersByDeviceV4 \
    --deviceId 'mtRllhxM' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 349 'AdminGetUsersByDeviceV4' test.out

#- 350 AdminGetNamespaceInvitationHistoryV4
$CLI_EXE \
    --sn iam \
    --op AdminGetNamespaceInvitationHistoryV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 350 'AdminGetNamespaceInvitationHistoryV4' test.out

#- 351 AdminGetNamespaceUserInvitationHistoryV4
$CLI_EXE \
    --sn iam \
    --op AdminGetNamespaceUserInvitationHistoryV4 \
    --namespace $AB_NAMESPACE \
    --limit '32' \
    --offset '81' \
    > test.out 2>&1
eval_tap $? 351 'AdminGetNamespaceUserInvitationHistoryV4' test.out

#- 352 AdminCreateTestUsersV4
# body param: body
echo '{"count": 93, "userInfo": {"country": "Hf8q1Kk1"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminCreateTestUsersV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 352 'AdminCreateTestUsersV4' test.out

#- 353 AdminCreateUserV4
# body param: body
echo '{"acceptedPolicies": [{"isAccepted": true, "localizedPolicyVersionId": "4OhMrs9F", "policyId": "xrOtgH3A", "policyVersionId": "k2cammHv"}, {"isAccepted": false, "localizedPolicyVersionId": "s2F80P9f", "policyId": "x1WoyJNz", "policyVersionId": "Vt0XvgEk"}, {"isAccepted": false, "localizedPolicyVersionId": "JwgTu5y8", "policyId": "OjcV3fy7", "policyVersionId": "3SeKD4ee"}], "authType": "EMAILPASSWD", "code": "XNlM9gEf", "country": "jHavJmH1", "dateOfBirth": "zvs0uLPq", "displayName": "0Q9t2OC5", "emailAddress": "JhYN1mlZ", "password": "GHrO1TS0", "passwordMD5Sum": "WM2khQl6", "reachMinimumAge": true, "uniqueDisplayName": "xqSG0QIL", "username": "tDCx9ukj"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminCreateUserV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 353 'AdminCreateUserV4' test.out

#- 354 AdminBulkUpdateUserAccountTypeV4
# body param: body
echo '{"testAccount": true, "userIds": ["upbvdWiO", "Nct7bsFa", "otU7LYTb"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBulkUpdateUserAccountTypeV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 354 'AdminBulkUpdateUserAccountTypeV4' test.out

#- 355 AdminBulkCheckValidUserIDV4
# body param: body
echo '{"userIds": ["l8WkUyPZ", "DsNButPk", "QhQ7oGPQ"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBulkCheckValidUserIDV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 355 'AdminBulkCheckValidUserIDV4' test.out

#- 356 AdminUpdateUserV4
# body param: body
echo '{"avatarUrl": "8Ghz36W7", "country": "Gs4tfzli", "dateOfBirth": "A0dz14gh", "displayName": "MvP5WKiL", "languageTag": "2dryJfDH", "skipLoginQueue": false, "tags": ["PFf8Buul", "vdswMeKd", "NQX0xKGV"], "uniqueDisplayName": "H784n8h7", "userName": "H4eATFxP"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserV4 \
    --namespace $AB_NAMESPACE \
    --userId 'ArOJgxQ6' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 356 'AdminUpdateUserV4' test.out

#- 357 AdminUpdateUserEmailAddressV4
# body param: body
echo '{"code": "GictxEjM", "emailAddress": "kQxPzYfw"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserEmailAddressV4 \
    --namespace $AB_NAMESPACE \
    --userId 'Tb5Pj6ye' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 357 'AdminUpdateUserEmailAddressV4' test.out

#- 358 AdminDisableUserMFAV4
# body param: body
echo '{"factor": "CyQtfv1v", "mfaToken": "CCrBqysU"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDisableUserMFAV4 \
    --namespace $AB_NAMESPACE \
    --userId 'eDvWr1yA' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 358 'AdminDisableUserMFAV4' test.out

#- 359 AdminGetUserMFAStatusV4
$CLI_EXE \
    --sn iam \
    --op AdminGetUserMFAStatusV4 \
    --namespace $AB_NAMESPACE \
    --userId 'XqHCWATP' \
    > test.out 2>&1
eval_tap $? 359 'AdminGetUserMFAStatusV4' test.out

#- 360 AdminListUserRolesV4
$CLI_EXE \
    --sn iam \
    --op AdminListUserRolesV4 \
    --namespace $AB_NAMESPACE \
    --userId 'gzJ2thNG' \
    > test.out 2>&1
eval_tap $? 360 'AdminListUserRolesV4' test.out

#- 361 AdminUpdateUserRoleV4
# body param: body
echo '{"assignedNamespaces": ["Q9NQteqd", "P8SHqlKo", "4tlyZHSX"], "roleId": "MH6VFeUG"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserRoleV4 \
    --namespace $AB_NAMESPACE \
    --userId '2QuIohVT' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 361 'AdminUpdateUserRoleV4' test.out

#- 362 AdminAddUserRoleV4
# body param: body
echo '{"assignedNamespaces": ["dJ6ZqgOe", "ZfpZKngV", "OFEdf8jY"], "roleId": "4fm7S39W"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddUserRoleV4 \
    --namespace $AB_NAMESPACE \
    --userId 'xG42h3eY' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 362 'AdminAddUserRoleV4' test.out

#- 363 AdminRemoveUserRoleV4
# body param: body
echo '{"assignedNamespaces": ["zoXd0Uro", "SMtBTciL", "7ewzKyRc"], "roleId": "QZ4eBYel"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminRemoveUserRoleV4 \
    --namespace $AB_NAMESPACE \
    --userId 'BRSrEDkx' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 363 'AdminRemoveUserRoleV4' test.out

#- 364 AdminGetRolesV4
$CLI_EXE \
    --sn iam \
    --op AdminGetRolesV4 \
    --adminRole 'true' \
    --isWildcard 'true' \
    --limit '58' \
    --offset '39' \
    > test.out 2>&1
eval_tap $? 364 'AdminGetRolesV4' test.out

#- 365 AdminCreateRoleV4
# body param: body
echo '{"adminRole": false, "deletable": true, "isWildcard": true, "roleName": "Oj667s9y"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminCreateRoleV4 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 365 'AdminCreateRoleV4' test.out

#- 366 AdminGetRoleV4
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleV4 \
    --roleId 'djZMyrwq' \
    > test.out 2>&1
eval_tap $? 366 'AdminGetRoleV4' test.out

#- 367 AdminDeleteRoleV4
$CLI_EXE \
    --sn iam \
    --op AdminDeleteRoleV4 \
    --roleId 'BCtWL7ew' \
    > test.out 2>&1
eval_tap $? 367 'AdminDeleteRoleV4' test.out

#- 368 AdminUpdateRoleV4
# body param: body
echo '{"adminRole": false, "deletable": false, "isWildcard": false, "roleName": "2B3hCKfD"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateRoleV4 \
    --roleId '7Y9amReX' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 368 'AdminUpdateRoleV4' test.out

#- 369 AdminUpdateRolePermissionsV4
# body param: body
echo '{"permissions": [{"action": 25, "resource": "E54XDFMK", "schedAction": 22, "schedCron": "pK55RX6m", "schedRange": ["mom4JAt3", "8YxsgDqL", "abYhHZ7T"]}, {"action": 69, "resource": "M94mfHZF", "schedAction": 99, "schedCron": "lFTlDlde", "schedRange": ["f146EuO7", "FhUikY5C", "AnxIXMsJ"]}, {"action": 62, "resource": "8IKTVfKA", "schedAction": 5, "schedCron": "Gqksu2yw", "schedRange": ["wbCbKUlE", "0HXRFC2U", "6ok2Chbo"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateRolePermissionsV4 \
    --roleId 'AsoGp2Qs' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 369 'AdminUpdateRolePermissionsV4' test.out

#- 370 AdminAddRolePermissionsV4
# body param: body
echo '{"permissions": [{"action": 89, "resource": "8y3HSp66", "schedAction": 10, "schedCron": "7RiJ6HoR", "schedRange": ["85MaoVZE", "qEzy3nfC", "nEtS2uXv"]}, {"action": 93, "resource": "mHOK7gHn", "schedAction": 78, "schedCron": "MU7IBpIw", "schedRange": ["BJYvv2nL", "Z3VQAfYP", "p2OqzmFJ"]}, {"action": 13, "resource": "ncwwlhWD", "schedAction": 29, "schedCron": "jqV0YnKu", "schedRange": ["rfZXY1JJ", "TjjqrDfc", "MUIeiotw"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddRolePermissionsV4 \
    --roleId 'XuNTas2n' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 370 'AdminAddRolePermissionsV4' test.out

#- 371 AdminDeleteRolePermissionsV4
# body param: body
echo '["gwSaURnN", "j6zOQ3Ni", "lhdSgTgR"]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDeleteRolePermissionsV4 \
    --roleId 'F6ssiucb' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 371 'AdminDeleteRolePermissionsV4' test.out

#- 372 AdminListAssignedUsersV4
$CLI_EXE \
    --sn iam \
    --op AdminListAssignedUsersV4 \
    --roleId 'gMG05aK5' \
    --after 'hrxnJ3wS' \
    --before 'oeWuAX2C' \
    --limit '77' \
    > test.out 2>&1
eval_tap $? 372 'AdminListAssignedUsersV4' test.out

#- 373 AdminAssignUserToRoleV4
# body param: body
echo '{"assignedNamespaces": ["JpiLafOk", "Thb74NTv", "9QADq0Jb"], "namespace": "yNJwtCpI", "userId": "cTdgFZc9"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAssignUserToRoleV4 \
    --roleId '7Abep7X7' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 373 'AdminAssignUserToRoleV4' test.out

#- 374 AdminRevokeUserFromRoleV4
# body param: body
echo '{"namespace": "3WV1reVc", "userId": "1CIKFBUJ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminRevokeUserFromRoleV4 \
    --roleId 'dMAB2zp2' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 374 'AdminRevokeUserFromRoleV4' test.out

#- 375 AdminInviteUserNewV4
# body param: body
echo '{"assignedNamespaces": ["mVBh9BJX", "zzBAMvZd", "ZyapjOri"], "emailAddresses": ["g1CUzNz4", "J1RrB0yu", "7J7YUbI3"], "isAdmin": true, "isNewStudio": false, "languageTag": "GTo6NwB9", "namespace": "vUjQPVAG", "roleId": "iBMhYFBx"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminInviteUserNewV4 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 375 'AdminInviteUserNewV4' test.out

#- 376 AdminUpdateMyUserV4
# body param: body
echo '{"avatarUrl": "jr4u5SdZ", "country": "U2TPNYF5", "dateOfBirth": "aUOKdocu", "displayName": "FVWA6lDT", "languageTag": "yndv4xn1", "skipLoginQueue": true, "tags": ["6gSP2LdI", "UKxLxNtp", "BIpCkhNF"], "uniqueDisplayName": "dEdQgRCQ", "userName": "0jvMLwQ0"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateMyUserV4 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 376 'AdminUpdateMyUserV4' test.out

#- 377 AdminDisableMyAuthenticatorV4
# body param: body
echo '{"factor": "fSxX2Ko4", "mfaToken": "REhbwjhy"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDisableMyAuthenticatorV4 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 377 'AdminDisableMyAuthenticatorV4' test.out

#- 378 AdminEnableMyAuthenticatorV4
$CLI_EXE \
    --sn iam \
    --op AdminEnableMyAuthenticatorV4 \
    --code 'YBWMOjFX' \
    > test.out 2>&1
eval_tap $? 378 'AdminEnableMyAuthenticatorV4' test.out

#- 379 AdminGenerateMyAuthenticatorKeyV4
$CLI_EXE \
    --sn iam \
    --op AdminGenerateMyAuthenticatorKeyV4 \
    > test.out 2>&1
eval_tap $? 379 'AdminGenerateMyAuthenticatorKeyV4' test.out

#- 380 AdminGetMyBackupCodesV4
eval_tap 0 380 'AdminGetMyBackupCodesV4 # SKIP deprecated' test.out

#- 381 AdminGenerateMyBackupCodesV4
eval_tap 0 381 'AdminGenerateMyBackupCodesV4 # SKIP deprecated' test.out

#- 382 AdminDisableMyBackupCodesV4
# body param: body
echo '{"factor": "Wixo4xSe", "mfaToken": "SH1VUnPt"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDisableMyBackupCodesV4 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 382 'AdminDisableMyBackupCodesV4' test.out

#- 383 AdminDownloadMyBackupCodesV4
eval_tap 0 383 'AdminDownloadMyBackupCodesV4 # SKIP deprecated' test.out

#- 384 AdminEnableMyBackupCodesV4
eval_tap 0 384 'AdminEnableMyBackupCodesV4 # SKIP deprecated' test.out

#- 385 AdminGetBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op AdminGetBackupCodesV4 \
    --languageTag 'eMZ3BS3p' \
    > test.out 2>&1
eval_tap $? 385 'AdminGetBackupCodesV4' test.out

#- 386 AdminGenerateBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op AdminGenerateBackupCodesV4 \
    --languageTag 'G3H9eKol' \
    > test.out 2>&1
eval_tap $? 386 'AdminGenerateBackupCodesV4' test.out

#- 387 AdminEnableBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op AdminEnableBackupCodesV4 \
    --languageTag 'fimYuHl3' \
    > test.out 2>&1
eval_tap $? 387 'AdminEnableBackupCodesV4' test.out

#- 388 AdminChallengeMyMFAV4
$CLI_EXE \
    --sn iam \
    --op AdminChallengeMyMFAV4 \
    --code 'TjKTqKZ5' \
    --factor 'gzJxk1OF' \
    > test.out 2>&1
eval_tap $? 388 'AdminChallengeMyMFAV4' test.out

#- 389 AdminSendMyMFAEmailCodeV4
$CLI_EXE \
    --sn iam \
    --op AdminSendMyMFAEmailCodeV4 \
    --action 'H5YIjp66' \
    --languageTag 's1wtzmeo' \
    > test.out 2>&1
eval_tap $? 389 'AdminSendMyMFAEmailCodeV4' test.out

#- 390 AdminDisableMyEmailV4
# body param: body
echo '{"factor": "JLNsAqav", "mfaToken": "hdsNyjrb"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDisableMyEmailV4 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 390 'AdminDisableMyEmailV4' test.out

#- 391 AdminEnableMyEmailV4
$CLI_EXE \
    --sn iam \
    --op AdminEnableMyEmailV4 \
    --code 'wChptTgs' \
    > test.out 2>&1
eval_tap $? 391 'AdminEnableMyEmailV4' test.out

#- 392 AdminGetMyEnabledFactorsV4
$CLI_EXE \
    --sn iam \
    --op AdminGetMyEnabledFactorsV4 \
    > test.out 2>&1
eval_tap $? 392 'AdminGetMyEnabledFactorsV4' test.out

#- 393 AdminMakeFactorMyDefaultV4
$CLI_EXE \
    --sn iam \
    --op AdminMakeFactorMyDefaultV4 \
    --factor 'KtlteoZo' \
    > test.out 2>&1
eval_tap $? 393 'AdminMakeFactorMyDefaultV4' test.out

#- 394 AdminGetMyOwnMFAStatusV4
$CLI_EXE \
    --sn iam \
    --op AdminGetMyOwnMFAStatusV4 \
    > test.out 2>&1
eval_tap $? 394 'AdminGetMyOwnMFAStatusV4' test.out

#- 395 AdminGetMyMFAStatusV4
eval_tap 0 395 'AdminGetMyMFAStatusV4 # SKIP deprecated' test.out

#- 396 AdminInviteUserV4
eval_tap 0 396 'AdminInviteUserV4 # SKIP deprecated' test.out

#- 397 AuthenticationWithPlatformLinkV4
$CLI_EXE \
    --sn iam \
    --op AuthenticationWithPlatformLinkV4 \
    --extend_exp 'true' \
    --client_id 'Kiugiw6k' \
    --linkingToken 'pUruDPAv' \
    --password 'KGj1mt7x' \
    --username 'zDWtzLP9' \
    > test.out 2>&1
eval_tap $? 397 'AuthenticationWithPlatformLinkV4' test.out

#- 398 GenerateTokenByNewHeadlessAccountV4
$CLI_EXE \
    --sn iam \
    --op GenerateTokenByNewHeadlessAccountV4 \
    --additionalData 'wIrvRPUf' \
    --extend_exp 'true' \
    --linkingToken 'FBAjqYPP' \
    > test.out 2>&1
eval_tap $? 398 'GenerateTokenByNewHeadlessAccountV4' test.out

#- 399 Verify2faCodeV4
$CLI_EXE \
    --sn iam \
    --op Verify2faCodeV4 \
    --code 'wiAQNThx' \
    --factor '99oP5S4z' \
    --mfaToken '10T0Lyj4' \
    --rememberDevice 'true' \
    > test.out 2>&1
eval_tap $? 399 'Verify2faCodeV4' test.out

#- 400 PlatformTokenGrantV4
$CLI_EXE \
    --sn iam \
    --op PlatformTokenGrantV4 \
    --platformId 'XDKUVRua' \
    --codeChallenge '5nD2Ex0Y' \
    --codeChallengeMethod 'S256' \
    --additionalData 'NXhsL83W' \
    --client_id 'wOr27N53' \
    --createHeadless 'false' \
    --device_id 'KfS0tkXS' \
    --macAddress 'ZYpJPLHZ' \
    --platform_token 'VWHvSSZc' \
    --serviceLabel '0.2819146935856358' \
    --skipSetCookie 'true' \
    > test.out 2>&1
eval_tap $? 400 'PlatformTokenGrantV4' test.out

#- 401 SimultaneousLoginV4
$CLI_EXE \
    --sn iam \
    --op SimultaneousLoginV4 \
    --codeChallenge 'iNIERjzi' \
    --codeChallengeMethod 'S256' \
    --simultaneousPlatform '2hvOuojQ' \
    --simultaneousTicket '23MDcNel' \
    --nativePlatform 'epicgames' \
    --nativePlatformTicket 'ytWE9cv0' \
    > test.out 2>&1
eval_tap $? 401 'SimultaneousLoginV4' test.out

#- 402 TokenGrantV4
$CLI_EXE \
    --sn iam \
    --op TokenGrantV4 \
    --codeChallenge 'ajG9C0sv' \
    --codeChallengeMethod 'S256' \
    --additionalData 'lhsopBTs' \
    --client_id 'IHzdeWu7' \
    --client_secret 'rDQEkaS8' \
    --code 'G9yNq0Wf' \
    --code_verifier 'sHwHb6jv' \
    --extendNamespace 'DjoqaYxE' \
    --extend_exp 'false' \
    --login_queue_ticket 'Jv5O6tcN' \
    --password 'AyHWbBtW' \
    --redirect_uri 'SvGpPyzP' \
    --refresh_token 'n2BfIFnW' \
    --scope 'lPXzT0oZ' \
    --username '2a1iee03' \
    --grant_type 'refresh_token' \
    > test.out 2>&1
eval_tap $? 402 'TokenGrantV4' test.out

#- 403 RequestTargetTokenResponseV4
$CLI_EXE \
    --sn iam \
    --op RequestTargetTokenResponseV4 \
    --additionalData 'vqGQSr3E' \
    --code 'MGjCYS6Z' \
    > test.out 2>&1
eval_tap $? 403 'RequestTargetTokenResponseV4' test.out

#- 404 PublicListUserIDByPlatformUserIDsV4
# body param: body
echo '{"pidType": "uNZ18dMo", "platformUserIds": ["ZOlZkgEQ", "jBx4udDd", "Vb7muLHQ"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicListUserIDByPlatformUserIDsV4 \
    --namespace $AB_NAMESPACE \
    --platformId 'Mg5LBox3' \
    --rawPUID 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 404 'PublicListUserIDByPlatformUserIDsV4' test.out

#- 405 PublicGetUserByPlatformUserIDV4
$CLI_EXE \
    --sn iam \
    --op PublicGetUserByPlatformUserIDV4 \
    --namespace $AB_NAMESPACE \
    --platformId '4CU5sVJv' \
    --platformUserId 'y03hjMry' \
    > test.out 2>&1
eval_tap $? 405 'PublicGetUserByPlatformUserIDV4' test.out

#- 406 PublicCreateTestUserV4
# body param: body
echo '{"acceptedPolicies": [{"isAccepted": false, "localizedPolicyVersionId": "EBPH5qn4", "policyId": "kJFxB6SU", "policyVersionId": "bcTh2fjE"}, {"isAccepted": true, "localizedPolicyVersionId": "BCpSEYth", "policyId": "QLzzVkwe", "policyVersionId": "XjExGKf4"}, {"isAccepted": true, "localizedPolicyVersionId": "E0ylkeNV", "policyId": "NhIcf0rC", "policyVersionId": "Cx4gUfWj"}], "authType": "EMAILPASSWD", "country": "VxL1ALlz", "dateOfBirth": "ZyOsgjnR", "displayName": "QUB8ClbS", "emailAddress": "FQoh6Bli", "password": "OTO0ENMN", "passwordMD5Sum": "2yWXFfe3", "uniqueDisplayName": "9J40sYHZ", "username": "vXcVnPx4", "verified": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicCreateTestUserV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 406 'PublicCreateTestUserV4' test.out

#- 407 PublicCreateUserV4
# body param: body
echo '{"acceptedPolicies": [{"isAccepted": true, "localizedPolicyVersionId": "85Is8dKP", "policyId": "L0ph1onr", "policyVersionId": "bLi8tcsN"}, {"isAccepted": false, "localizedPolicyVersionId": "zjEhWdag", "policyId": "8ilwOsJH", "policyVersionId": "iaSXIpJJ"}, {"isAccepted": true, "localizedPolicyVersionId": "385jmNfo", "policyId": "uuFxpth8", "policyVersionId": "Vwesg4FC"}], "authType": "EMAILPASSWD", "code": "iaVv8qNX", "country": "BgDUowws", "dateOfBirth": "vlt342g2", "displayName": "hZuQHVJW", "emailAddress": "G0ZUNUhf", "password": "Sjk97Py2", "passwordMD5Sum": "LhSc4rxh", "reachMinimumAge": false, "uniqueDisplayName": "7BqzeLlI", "username": "ZuN9Zx4L"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicCreateUserV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 407 'PublicCreateUserV4' test.out

#- 408 CreateUserFromInvitationV4
# body param: body
echo '{"acceptedPolicies": [{"isAccepted": true, "localizedPolicyVersionId": "QtoSJHQQ", "policyId": "WpxGWhh3", "policyVersionId": "yS588MOK"}, {"isAccepted": false, "localizedPolicyVersionId": "fvbBBfAy", "policyId": "Da2keCYH", "policyVersionId": "VmMJWwFu"}, {"isAccepted": true, "localizedPolicyVersionId": "KA216nN9", "policyId": "sqGJoZXA", "policyVersionId": "hDeAOB5j"}], "authType": "EMAILPASSWD", "code": "x3ha2GvV", "country": "Yea2ucfu", "dateOfBirth": "h7JWsgXi", "displayName": "uScceMyG", "emailAddress": "25twwEeG", "password": "nQgHpV5e", "passwordMD5Sum": "eK4EslKn", "reachMinimumAge": false, "uniqueDisplayName": "VTN2K7Wp", "username": "xhlnQvKB"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op CreateUserFromInvitationV4 \
    --invitationId 'IkHjThMa' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 408 'CreateUserFromInvitationV4' test.out

#- 409 PublicUpdateUserV4
# body param: body
echo '{"avatarUrl": "boiL0tJh", "country": "zFdDDY2r", "dateOfBirth": "HmoktXPI", "displayName": "VRbkk5pZ", "languageTag": "NV19BUoP", "uniqueDisplayName": "NbeJYnvr", "userName": "LRvOgrQb"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpdateUserV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 409 'PublicUpdateUserV4' test.out

#- 410 PublicUpdateUserEmailAddressV4
# body param: body
echo '{"code": "cEaFKXHv", "emailAddress": "J9URHhC7"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpdateUserEmailAddressV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 410 'PublicUpdateUserEmailAddressV4' test.out

#- 411 PublicUpgradeHeadlessAccountWithVerificationCodeV4
# body param: body
echo '{"code": "FMMdNLeD", "country": "Z6q5kMmY", "dateOfBirth": "Nqe5qfWz", "displayName": "GMu98syV", "emailAddress": "8UMM9TqZ", "password": "Jpo6sKsG", "reachMinimumAge": true, "uniqueDisplayName": "HDjE37tA", "username": "CiLC3DTu", "validateOnly": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpgradeHeadlessAccountWithVerificationCodeV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 411 'PublicUpgradeHeadlessAccountWithVerificationCodeV4' test.out

#- 412 PublicUpgradeHeadlessAccountV4
# body param: body
echo '{"dateOfBirth": "fhqrysMr", "displayName": "swTM8EcZ", "emailAddress": "LtEN5Bln", "password": "fAja9e5N", "uniqueDisplayName": "CATxUu0S", "username": "dvA5tlH2"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpgradeHeadlessAccountV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 412 'PublicUpgradeHeadlessAccountV4' test.out

#- 413 PublicDisableMyAuthenticatorV4
# body param: body
echo '{"factor": "c33yuG92", "mfaToken": "BpRpiXuk"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicDisableMyAuthenticatorV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 413 'PublicDisableMyAuthenticatorV4' test.out

#- 414 PublicEnableMyAuthenticatorV4
$CLI_EXE \
    --sn iam \
    --op PublicEnableMyAuthenticatorV4 \
    --namespace $AB_NAMESPACE \
    --code 'gJdQm9nU' \
    > test.out 2>&1
eval_tap $? 414 'PublicEnableMyAuthenticatorV4' test.out

#- 415 PublicGenerateMyAuthenticatorKeyV4
$CLI_EXE \
    --sn iam \
    --op PublicGenerateMyAuthenticatorKeyV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 415 'PublicGenerateMyAuthenticatorKeyV4' test.out

#- 416 PublicGetMyBackupCodesV4
eval_tap 0 416 'PublicGetMyBackupCodesV4 # SKIP deprecated' test.out

#- 417 PublicGenerateMyBackupCodesV4
eval_tap 0 417 'PublicGenerateMyBackupCodesV4 # SKIP deprecated' test.out

#- 418 PublicDisableMyBackupCodesV4
# body param: body
echo '{"factor": "YZEOYSTw", "mfaToken": "jwfcKcnO"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicDisableMyBackupCodesV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 418 'PublicDisableMyBackupCodesV4' test.out

#- 419 PublicDownloadMyBackupCodesV4
eval_tap 0 419 'PublicDownloadMyBackupCodesV4 # SKIP deprecated' test.out

#- 420 PublicEnableMyBackupCodesV4
eval_tap 0 420 'PublicEnableMyBackupCodesV4 # SKIP deprecated' test.out

#- 421 PublicGetBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op PublicGetBackupCodesV4 \
    --namespace $AB_NAMESPACE \
    --languageTag 'r5pgRAtt' \
    > test.out 2>&1
eval_tap $? 421 'PublicGetBackupCodesV4' test.out

#- 422 PublicGenerateBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op PublicGenerateBackupCodesV4 \
    --namespace $AB_NAMESPACE \
    --languageTag 'WCMbufW7' \
    > test.out 2>&1
eval_tap $? 422 'PublicGenerateBackupCodesV4' test.out

#- 423 PublicEnableBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op PublicEnableBackupCodesV4 \
    --namespace $AB_NAMESPACE \
    --languageTag 'gZ5SiE20' \
    > test.out 2>&1
eval_tap $? 423 'PublicEnableBackupCodesV4' test.out

#- 424 PublicChallengeMyMFAV4
$CLI_EXE \
    --sn iam \
    --op PublicChallengeMyMFAV4 \
    --namespace $AB_NAMESPACE \
    --code 'c98Y9UwR' \
    --factor 'dYV5avf4' \
    > test.out 2>&1
eval_tap $? 424 'PublicChallengeMyMFAV4' test.out

#- 425 PublicRemoveTrustedDeviceV4
$CLI_EXE \
    --sn iam \
    --op PublicRemoveTrustedDeviceV4 \
    --namespace $AB_NAMESPACE \
    --device_token 'ByQZDR6a' \
    > test.out 2>&1
eval_tap $? 425 'PublicRemoveTrustedDeviceV4' test.out

#- 426 PublicSendMyMFAEmailCodeV4
$CLI_EXE \
    --sn iam \
    --op PublicSendMyMFAEmailCodeV4 \
    --namespace $AB_NAMESPACE \
    --action 'txLnKMj8' \
    --languageTag '9rp3uNTz' \
    > test.out 2>&1
eval_tap $? 426 'PublicSendMyMFAEmailCodeV4' test.out

#- 427 PublicDisableMyEmailV4
# body param: body
echo '{"factor": "iWcI3khU", "mfaToken": "JIGie8yQ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicDisableMyEmailV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 427 'PublicDisableMyEmailV4' test.out

#- 428 PublicEnableMyEmailV4
$CLI_EXE \
    --sn iam \
    --op PublicEnableMyEmailV4 \
    --namespace $AB_NAMESPACE \
    --code '2rA5t2hs' \
    > test.out 2>&1
eval_tap $? 428 'PublicEnableMyEmailV4' test.out

#- 429 PublicGetMyEnabledFactorsV4
$CLI_EXE \
    --sn iam \
    --op PublicGetMyEnabledFactorsV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 429 'PublicGetMyEnabledFactorsV4' test.out

#- 430 PublicMakeFactorMyDefaultV4
$CLI_EXE \
    --sn iam \
    --op PublicMakeFactorMyDefaultV4 \
    --namespace $AB_NAMESPACE \
    --factor 'M4EUrQIR' \
    > test.out 2>&1
eval_tap $? 430 'PublicMakeFactorMyDefaultV4' test.out

#- 431 PublicGetMyOwnMFAStatusV4
$CLI_EXE \
    --sn iam \
    --op PublicGetMyOwnMFAStatusV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 431 'PublicGetMyOwnMFAStatusV4' test.out

#- 432 PublicGetMyMFAStatusV4
eval_tap 0 432 'PublicGetMyMFAStatusV4 # SKIP deprecated' test.out

#- 433 PublicGetUserPublicInfoByUserIdV4
$CLI_EXE \
    --sn iam \
    --op PublicGetUserPublicInfoByUserIdV4 \
    --namespace $AB_NAMESPACE \
    --userId 'XRLz60TX' \
    > test.out 2>&1
eval_tap $? 433 'PublicGetUserPublicInfoByUserIdV4' test.out

#- 434 PublicInviteUserV4
# body param: body
echo '{"additionalData": "DgzBNIpE", "emailAddress": "4EJxYeFW", "languageTag": "omrugJHl", "namespace": "et9IQrq2", "namespaceDisplayName": "2c2It0Tt"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicInviteUserV4 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 434 'PublicInviteUserV4' test.out

#- 435 PublicUpgradeHeadlessWithCodeV4Forward
# body param: body
echo '{"acceptedPolicies": [{"isAccepted": false, "localizedPolicyVersionId": "hndk6zaq", "policyId": "SIzhvtHo", "policyVersionId": "hnaSTM0U"}, {"isAccepted": true, "localizedPolicyVersionId": "SVzddzWX", "policyId": "J3bBdlDX", "policyVersionId": "vsQlXDgj"}, {"isAccepted": false, "localizedPolicyVersionId": "ejEXoTCo", "policyId": "jQ5NPYjB", "policyVersionId": "9xBSM9M7"}], "code": "vElzm1HP", "country": "9z1ODXdU", "dateOfBirth": "mv9Qsd82", "displayName": "fjD3MEGL", "emailAddress": "JXJJWrQs", "password": "z7iALZFz", "reachMinimumAge": false, "uniqueDisplayName": "n6MHeTEo", "username": "7OhaVMNX", "validateOnly": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpgradeHeadlessWithCodeV4Forward \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 435 'PublicUpgradeHeadlessWithCodeV4Forward' test.out


# remove artifacts
rm -f "$CLI_TOKEN_FILE"
rm -f "$TEMP_JSON_INPUT"
rm -f "$TEMP_FILE_UPLOAD"

exit $EXIT_CODE