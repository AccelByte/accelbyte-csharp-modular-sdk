#!/usr/bin/env bash

# Copyright (c) 2021 AccelByte Inc. All Rights Reserved.
# This is licensed software from AccelByte Inc, for limitations
# and restrictions contact your company contract manager.

# This code is generated by tool. DO NOT EDIT.

# Meta:
# - random seed: 
# - template file: 

# Instructions:
# - Run the Justice SDK Mock Server first before running this script.

export AB_BASE_URL="http://127.0.0.1:8080"
export AB_CLIENT_ID="admin"
export AB_CLIENT_SECRET="admin"
export AB_NAMESPACE="test"
export AB_APP_NAME="UnitTest"

EXIT_CODE=0

eval_tap() {
  if [ $1 -eq 0 ]; then
    echo "ok $2 - $3"
  else
    EXIT_CODE=1
    echo "not ok $2 - $3"
    sed 's/^/# /g' $4
  fi
  rm -f $4
}

CLI_EXE="AccelByte.Sdk.Sample.Cli"
CLI_TOKEN_FILE="$(dirname "$(which $CLI_EXE)")/token.json"
TEMP_JSON_INPUT="input_json.json"
TEMP_FILE_UPLOAD="file_upload.bin"

echo "TAP version 13"
echo "1..435"

#- 1 Login
$CLI_EXE --op login --lt user --user user --pass user > test.out 2>&1
eval_tap $? 1 'Login' test.out

if [ $EXIT_CODE -ne 0 ]; then
  echo "Bail out! Login failed."
  exit $EXIT_CODE
fi

# echo "foo" > "$CLI_TOKEN_FILE"

#- 2 GetBansType
eval_tap 0 2 'GetBansType # SKIP deprecated' test.out

#- 3 GetListBanReason
eval_tap 0 3 'GetListBanReason # SKIP deprecated' test.out

#- 4 GetClients
eval_tap 0 4 'GetClients # SKIP deprecated' test.out

#- 5 CreateClient
eval_tap 0 5 'CreateClient # SKIP deprecated' test.out

#- 6 GetClient
eval_tap 0 6 'GetClient # SKIP deprecated' test.out

#- 7 UpdateClient
eval_tap 0 7 'UpdateClient # SKIP deprecated' test.out

#- 8 DeleteClient
eval_tap 0 8 'DeleteClient # SKIP deprecated' test.out

#- 9 UpdateClientPermission
eval_tap 0 9 'UpdateClientPermission # SKIP deprecated' test.out

#- 10 AddClientPermission
eval_tap 0 10 'AddClientPermission # SKIP deprecated' test.out

#- 11 DeleteClientPermission
eval_tap 0 11 'DeleteClientPermission # SKIP deprecated' test.out

#- 12 UpdateClientSecret
eval_tap 0 12 'UpdateClientSecret # SKIP deprecated' test.out

#- 13 GetClientsbyNamespace
eval_tap 0 13 'GetClientsbyNamespace # SKIP deprecated' test.out

#- 14 CreateClientByNamespace
eval_tap 0 14 'CreateClientByNamespace # SKIP deprecated' test.out

#- 15 DeleteClientByNamespace
eval_tap 0 15 'DeleteClientByNamespace # SKIP deprecated' test.out

#- 16 CreateUser
eval_tap 0 16 'CreateUser # SKIP deprecated' test.out

#- 17 GetAdminUsersByRoleID
eval_tap 0 17 'GetAdminUsersByRoleID # SKIP deprecated' test.out

#- 18 GetUserByLoginID
eval_tap 0 18 'GetUserByLoginID # SKIP deprecated' test.out

#- 19 GetUserByPlatformUserID
eval_tap 0 19 'GetUserByPlatformUserID # SKIP deprecated' test.out

#- 20 ForgotPassword
eval_tap 0 20 'ForgotPassword # SKIP deprecated' test.out

#- 21 GetUsersByLoginIds
eval_tap 0 21 'GetUsersByLoginIds # SKIP deprecated' test.out

#- 22 ResetPassword
eval_tap 0 22 'ResetPassword # SKIP deprecated' test.out

#- 23 SearchUser
eval_tap 0 23 'SearchUser # SKIP deprecated' test.out

#- 24 GetUserByUserID
eval_tap 0 24 'GetUserByUserID # SKIP deprecated' test.out

#- 25 UpdateUser
eval_tap 0 25 'UpdateUser # SKIP deprecated' test.out

#- 26 DeleteUser
eval_tap 0 26 'DeleteUser # SKIP deprecated' test.out

#- 27 BanUser
eval_tap 0 27 'BanUser # SKIP deprecated' test.out

#- 28 GetUserBanHistory
eval_tap 0 28 'GetUserBanHistory # SKIP deprecated' test.out

#- 29 DisableUserBan
eval_tap 0 29 'DisableUserBan # SKIP deprecated' test.out

#- 30 EnableUserBan
eval_tap 0 30 'EnableUserBan # SKIP deprecated' test.out

#- 31 ListCrossNamespaceAccountLink
eval_tap 0 31 'ListCrossNamespaceAccountLink # SKIP deprecated' test.out

#- 32 DisableUser
eval_tap 0 32 'DisableUser # SKIP deprecated' test.out

#- 33 EnableUser
eval_tap 0 33 'EnableUser # SKIP deprecated' test.out

#- 34 GetUserInformation
eval_tap 0 34 'GetUserInformation # SKIP deprecated' test.out

#- 35 DeleteUserInformation
eval_tap 0 35 'DeleteUserInformation # SKIP deprecated' test.out

#- 36 GetUserLoginHistories
eval_tap 0 36 'GetUserLoginHistories # SKIP deprecated' test.out

#- 37 UpdatePassword
eval_tap 0 37 'UpdatePassword # SKIP deprecated' test.out

#- 38 SaveUserPermission
eval_tap 0 38 'SaveUserPermission # SKIP deprecated' test.out

#- 39 AddUserPermission
eval_tap 0 39 'AddUserPermission # SKIP deprecated' test.out

#- 40 DeleteUserPermission
eval_tap 0 40 'DeleteUserPermission # SKIP deprecated' test.out

#- 41 GetUserPlatformAccounts
eval_tap 0 41 'GetUserPlatformAccounts # SKIP deprecated' test.out

#- 42 GetUserMapping
eval_tap 0 42 'GetUserMapping # SKIP deprecated' test.out

#- 43 GetUserJusticePlatformAccount
eval_tap 0 43 'GetUserJusticePlatformAccount # SKIP deprecated' test.out

#- 44 PlatformLink
eval_tap 0 44 'PlatformLink # SKIP deprecated' test.out

#- 45 PlatformUnlink
eval_tap 0 45 'PlatformUnlink # SKIP deprecated' test.out

#- 46 GetPublisherUser
eval_tap 0 46 'GetPublisherUser # SKIP deprecated' test.out

#- 47 SaveUserRoles
eval_tap 0 47 'SaveUserRoles # SKIP deprecated' test.out

#- 48 AddUserRole
eval_tap 0 48 'AddUserRole # SKIP deprecated' test.out

#- 49 DeleteUserRole
eval_tap 0 49 'DeleteUserRole # SKIP deprecated' test.out

#- 50 UpgradeHeadlessAccount
eval_tap 0 50 'UpgradeHeadlessAccount # SKIP deprecated' test.out

#- 51 UpgradeHeadlessAccountWithVerificationCode
eval_tap 0 51 'UpgradeHeadlessAccountWithVerificationCode # SKIP deprecated' test.out

#- 52 UserVerification
eval_tap 0 52 'UserVerification # SKIP deprecated' test.out

#- 53 SendVerificationCode
eval_tap 0 53 'SendVerificationCode # SKIP deprecated' test.out

#- 54 Authorization
eval_tap 0 54 'Authorization # SKIP deprecated' test.out

#- 55 GetJWKS
eval_tap 0 55 'GetJWKS # SKIP deprecated' test.out

#- 56 PlatformTokenRequestHandler
eval_tap 0 56 'PlatformTokenRequestHandler # SKIP deprecated' test.out

#- 57 RevokeUser
eval_tap 0 57 'RevokeUser # SKIP deprecated' test.out

#- 58 GetRevocationList
eval_tap 0 58 'GetRevocationList # SKIP deprecated' test.out

#- 59 RevokeToken
eval_tap 0 59 'RevokeToken # SKIP deprecated' test.out

#- 60 RevokeAUser
eval_tap 0 60 'RevokeAUser # SKIP deprecated' test.out

#- 61 TokenGrant
eval_tap 0 61 'TokenGrant # SKIP deprecated' test.out

#- 62 VerifyToken
eval_tap 0 62 'VerifyToken # SKIP deprecated' test.out

#- 63 GetRoles
eval_tap 0 63 'GetRoles # SKIP deprecated' test.out

#- 64 CreateRole
eval_tap 0 64 'CreateRole # SKIP deprecated' test.out

#- 65 GetRole
eval_tap 0 65 'GetRole # SKIP deprecated' test.out

#- 66 UpdateRole
eval_tap 0 66 'UpdateRole # SKIP deprecated' test.out

#- 67 DeleteRole
eval_tap 0 67 'DeleteRole # SKIP deprecated' test.out

#- 68 GetRoleAdminStatus
eval_tap 0 68 'GetRoleAdminStatus # SKIP deprecated' test.out

#- 69 SetRoleAsAdmin
eval_tap 0 69 'SetRoleAsAdmin # SKIP deprecated' test.out

#- 70 RemoveRoleAdmin
eval_tap 0 70 'RemoveRoleAdmin # SKIP deprecated' test.out

#- 71 GetRoleManagers
eval_tap 0 71 'GetRoleManagers # SKIP deprecated' test.out

#- 72 AddRoleManagers
eval_tap 0 72 'AddRoleManagers # SKIP deprecated' test.out

#- 73 RemoveRoleManagers
eval_tap 0 73 'RemoveRoleManagers # SKIP deprecated' test.out

#- 74 GetRoleMembers
eval_tap 0 74 'GetRoleMembers # SKIP deprecated' test.out

#- 75 AddRoleMembers
eval_tap 0 75 'AddRoleMembers # SKIP deprecated' test.out

#- 76 RemoveRoleMembers
eval_tap 0 76 'RemoveRoleMembers # SKIP deprecated' test.out

#- 77 UpdateRolePermissions
eval_tap 0 77 'UpdateRolePermissions # SKIP deprecated' test.out

#- 78 AddRolePermission
eval_tap 0 78 'AddRolePermission # SKIP deprecated' test.out

#- 79 DeleteRolePermission
eval_tap 0 79 'DeleteRolePermission # SKIP deprecated' test.out

#- 80 AdminGetAgeRestrictionStatusV2
eval_tap 0 80 'AdminGetAgeRestrictionStatusV2 # SKIP deprecated' test.out

#- 81 AdminUpdateAgeRestrictionConfigV2
eval_tap 0 81 'AdminUpdateAgeRestrictionConfigV2 # SKIP deprecated' test.out

#- 82 GetListCountryAgeRestriction
eval_tap 0 82 'GetListCountryAgeRestriction # SKIP deprecated' test.out

#- 83 UpdateCountryAgeRestriction
eval_tap 0 83 'UpdateCountryAgeRestriction # SKIP deprecated' test.out

#- 84 AdminSearchUsersV2
eval_tap 0 84 'AdminSearchUsersV2 # SKIP deprecated' test.out

#- 85 AdminGetUserByUserIdV2
eval_tap 0 85 'AdminGetUserByUserIdV2 # SKIP deprecated' test.out

#- 86 AdminUpdateUserV2
eval_tap 0 86 'AdminUpdateUserV2 # SKIP deprecated' test.out

#- 87 AdminBanUserV2
eval_tap 0 87 'AdminBanUserV2 # SKIP deprecated' test.out

#- 88 AdminGetUserBanV2
eval_tap 0 88 'AdminGetUserBanV2 # SKIP deprecated' test.out

#- 89 AdminDisableUserV2
eval_tap 0 89 'AdminDisableUserV2 # SKIP deprecated' test.out

#- 90 AdminEnableUserV2
eval_tap 0 90 'AdminEnableUserV2 # SKIP deprecated' test.out

#- 91 AdminResetPasswordV2
eval_tap 0 91 'AdminResetPasswordV2 # SKIP deprecated' test.out

#- 92 AdminDeletePlatformLinkV2
eval_tap 0 92 'AdminDeletePlatformLinkV2 # SKIP deprecated' test.out

#- 93 AdminPutUserRolesV2
eval_tap 0 93 'AdminPutUserRolesV2 # SKIP deprecated' test.out

#- 94 AdminCreateUserRolesV2
eval_tap 0 94 'AdminCreateUserRolesV2 # SKIP deprecated' test.out

#- 95 PublicGetCountryAgeRestriction
eval_tap 0 95 'PublicGetCountryAgeRestriction # SKIP deprecated' test.out

#- 96 PublicCreateUserV2
eval_tap 0 96 'PublicCreateUserV2 # SKIP deprecated' test.out

#- 97 PublicForgotPasswordV2
eval_tap 0 97 'PublicForgotPasswordV2 # SKIP deprecated' test.out

#- 98 PublicResetPasswordV2
eval_tap 0 98 'PublicResetPasswordV2 # SKIP deprecated' test.out

#- 99 PublicGetUserByUserIDV2
eval_tap 0 99 'PublicGetUserByUserIDV2 # SKIP deprecated' test.out

#- 100 PublicUpdateUserV2
eval_tap 0 100 'PublicUpdateUserV2 # SKIP deprecated' test.out

#- 101 PublicGetUserBan
eval_tap 0 101 'PublicGetUserBan # SKIP deprecated' test.out

#- 102 PublicUpdatePasswordV2
eval_tap 0 102 'PublicUpdatePasswordV2 # SKIP deprecated' test.out

#- 103 GetListJusticePlatformAccounts
eval_tap 0 103 'GetListJusticePlatformAccounts # SKIP deprecated' test.out

#- 104 PublicPlatformLinkV2
eval_tap 0 104 'PublicPlatformLinkV2 # SKIP deprecated' test.out

#- 105 PublicDeletePlatformLinkV2
eval_tap 0 105 'PublicDeletePlatformLinkV2 # SKIP deprecated' test.out

#- 106 AdminGetBansTypeV3
$CLI_EXE \
    --sn iam \
    --op AdminGetBansTypeV3 \
    > test.out 2>&1
eval_tap $? 106 'AdminGetBansTypeV3' test.out

#- 107 AdminGetListBanReasonV3
$CLI_EXE \
    --sn iam \
    --op AdminGetListBanReasonV3 \
    > test.out 2>&1
eval_tap $? 107 'AdminGetListBanReasonV3' test.out

#- 108 AdminListClientAvailablePermissions
$CLI_EXE \
    --sn iam \
    --op AdminListClientAvailablePermissions \
    --excludePermissions 'true' \
    > test.out 2>&1
eval_tap $? 108 'AdminListClientAvailablePermissions' test.out

#- 109 AdminUpdateAvailablePermissionsByModule
# body param: body
echo '{"modules": [{"docLink": "BkppLaDg", "groups": [{"group": "UsvOSs3S", "groupId": "XXnePZ4L", "permissions": [{"allowedActions": [29, 38, 72], "resource": "bpYF6Xe7"}, {"allowedActions": [76, 54, 28], "resource": "yX6kCH7X"}, {"allowedActions": [70, 85, 42], "resource": "FeuCtlTo"}]}, {"group": "8H2C7NT5", "groupId": "SCBch5Zz", "permissions": [{"allowedActions": [65, 42, 6], "resource": "R33CZxDN"}, {"allowedActions": [91, 84, 19], "resource": "STK79YsU"}, {"allowedActions": [36, 72, 12], "resource": "GMqV2YXp"}]}, {"group": "OL5HanWb", "groupId": "fitybfSp", "permissions": [{"allowedActions": [25, 70, 87], "resource": "P28VX2jm"}, {"allowedActions": [73, 97, 75], "resource": "q9hdCFxR"}, {"allowedActions": [32, 30, 46], "resource": "Oi2JUhwE"}]}], "module": "k8foLcHi", "moduleId": "Wq4gKSLs"}, {"docLink": "KlrgI5Kc", "groups": [{"group": "X9ZxzcvI", "groupId": "sPuU9UAj", "permissions": [{"allowedActions": [61, 41, 80], "resource": "gFfP9AzS"}, {"allowedActions": [33, 31, 46], "resource": "P9OuVpT5"}, {"allowedActions": [59, 24, 43], "resource": "mTIOP5Ny"}]}, {"group": "ywsAmlWP", "groupId": "NlJTUM2f", "permissions": [{"allowedActions": [65, 51, 46], "resource": "nbVtalP2"}, {"allowedActions": [6, 76, 92], "resource": "h5fUGAMS"}, {"allowedActions": [42, 18, 83], "resource": "r7vLh2L4"}]}, {"group": "ppAWTI6u", "groupId": "GiJy9chr", "permissions": [{"allowedActions": [12, 50, 83], "resource": "j5o23sNb"}, {"allowedActions": [63, 92, 70], "resource": "8fUSY1Kx"}, {"allowedActions": [80, 8, 84], "resource": "xowsLBZl"}]}], "module": "8rSlQqns", "moduleId": "4OL4gfVf"}, {"docLink": "grWXIJsH", "groups": [{"group": "cWfGzjNX", "groupId": "2APt8Lby", "permissions": [{"allowedActions": [1, 86, 17], "resource": "jpcBvjqy"}, {"allowedActions": [28, 63, 39], "resource": "FprM5zrL"}, {"allowedActions": [26, 54, 14], "resource": "LLwdpq9D"}]}, {"group": "x7RRokiC", "groupId": "nXVRUzTT", "permissions": [{"allowedActions": [82, 57, 89], "resource": "7kvZXwZT"}, {"allowedActions": [87, 54, 47], "resource": "FmDcuZn4"}, {"allowedActions": [21, 22, 6], "resource": "WPBGkRuT"}]}, {"group": "gZ7RwjRk", "groupId": "mb2R7CZu", "permissions": [{"allowedActions": [78, 92, 37], "resource": "XSpqUIKa"}, {"allowedActions": [5, 51, 3], "resource": "d2Z6rhsL"}, {"allowedActions": [94, 78, 86], "resource": "lusqF22I"}]}], "module": "QNeHZlIT", "moduleId": "ZMLZUSdE"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateAvailablePermissionsByModule \
    --forceDelete 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 109 'AdminUpdateAvailablePermissionsByModule' test.out

#- 110 AdminDeleteConfigPermissionsByGroup
# body param: body
echo '{"groupId": "RdEZxOm5", "moduleId": "c7Uo8rsL"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDeleteConfigPermissionsByGroup \
    --forceDelete 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 110 'AdminDeleteConfigPermissionsByGroup' test.out

#- 111 AdminListClientTemplates
$CLI_EXE \
    --sn iam \
    --op AdminListClientTemplates \
    > test.out 2>&1
eval_tap $? 111 'AdminListClientTemplates' test.out

#- 112 AdminGetInputValidations
$CLI_EXE \
    --sn iam \
    --op AdminGetInputValidations \
    > test.out 2>&1
eval_tap $? 112 'AdminGetInputValidations' test.out

#- 113 AdminUpdateInputValidations
# body param: body
echo '[{"field": "vd8vzQOz", "validation": {"allowAllSpecialCharacters": true, "allowDigit": true, "allowLetter": true, "allowSpace": false, "allowUnicode": true, "avatarConfig": {"allowedPrefixes": ["DXWW0SA0", "3d0qsHvn", "4H1KejeD"], "preferRegex": true, "regex": "i5Ajumqf"}, "blockedWord": ["7UOxCNqa", "bDZR20Z1", "a82EquHG"], "description": [{"language": "KvhzOHJl", "message": ["7eB6acF9", "7raB6PGK", "NVbW480k"]}, {"language": "mBo2d4IO", "message": ["wBG9Bswf", "HbicnO10", "jLId9F9a"]}, {"language": "tbEZrkV8", "message": ["phTxqZMd", "KbyaNcBV", "bWOYXFuy"]}], "isCustomRegex": false, "letterCase": "3aK8gdwl", "maxLength": 45, "maxRepeatingAlphaNum": 54, "maxRepeatingSpecialCharacter": 84, "minCharType": 88, "minLength": 44, "profanityFilter": "CHF2UWkq", "regex": "QaQsWmgj", "specialCharacterLocation": "nmFZ2fPi", "specialCharacters": ["j8xuj4dW", "V09rvosE", "3ZFERqgW"]}}, {"field": "xm6gDlyq", "validation": {"allowAllSpecialCharacters": true, "allowDigit": false, "allowLetter": false, "allowSpace": false, "allowUnicode": true, "avatarConfig": {"allowedPrefixes": ["PoGVTVCk", "7ILzxXj2", "j04HQa5Z"], "preferRegex": true, "regex": "HYRpl6b9"}, "blockedWord": ["88JV324g", "0ySD2OQl", "y3kyP3aF"], "description": [{"language": "Vw29Glvn", "message": ["FDwr0us6", "jXQw0Un5", "xo5wa3k8"]}, {"language": "4nczFlCd", "message": ["gGJbaSei", "CTrTZO6w", "hCDmweJI"]}, {"language": "OR0pBfGl", "message": ["P3sLm2wx", "j2IFeCqQ", "HVMWNS5P"]}], "isCustomRegex": false, "letterCase": "dkth4qa0", "maxLength": 49, "maxRepeatingAlphaNum": 9, "maxRepeatingSpecialCharacter": 89, "minCharType": 76, "minLength": 99, "profanityFilter": "Nt7yeNXC", "regex": "FDonhUxe", "specialCharacterLocation": "MFCCbdV1", "specialCharacters": ["pD8JEuGP", "gEupWkxs", "f2Zztgyi"]}}, {"field": "0X8MZIyN", "validation": {"allowAllSpecialCharacters": false, "allowDigit": true, "allowLetter": true, "allowSpace": false, "allowUnicode": true, "avatarConfig": {"allowedPrefixes": ["37XkrSSM", "iHDX2q25", "hakJ3FVD"], "preferRegex": false, "regex": "YITHMqfH"}, "blockedWord": ["oxll5dPi", "XHO1wpmj", "HnVRMej6"], "description": [{"language": "t3x61LlU", "message": ["v2eG0mmA", "b45emaQb", "wM3xRExA"]}, {"language": "ZNtx5UWk", "message": ["TMy1uEF9", "mQAXS4fe", "xZLCEjrQ"]}, {"language": "UgNSLwz1", "message": ["qo3ytrRM", "zUNX93xP", "FJuQ1wwv"]}], "isCustomRegex": true, "letterCase": "0mgi59uX", "maxLength": 84, "maxRepeatingAlphaNum": 6, "maxRepeatingSpecialCharacter": 13, "minCharType": 92, "minLength": 58, "profanityFilter": "H85Z4KoO", "regex": "CFocFQON", "specialCharacterLocation": "JXUHXyK6", "specialCharacters": ["Fb3j0dlj", "fLOmvoqG", "2VCcZLVR"]}}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateInputValidations \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 113 'AdminUpdateInputValidations' test.out

#- 114 AdminResetInputValidations
$CLI_EXE \
    --sn iam \
    --op AdminResetInputValidations \
    --field 'dnr6Us3a' \
    > test.out 2>&1
eval_tap $? 114 'AdminResetInputValidations' test.out

#- 115 ListAdminsV3
$CLI_EXE \
    --sn iam \
    --op ListAdminsV3 \
    --namespace $AB_NAMESPACE \
    --after 'MEizVXSN' \
    --before 'fCZJY0lX' \
    --endDate 'PAREXg6g' \
    --limit '13' \
    --query 'qPdcSNvh' \
    --roleId '88YnRdSG' \
    --startDate 'pqvntA0J' \
    > test.out 2>&1
eval_tap $? 115 'ListAdminsV3' test.out

#- 116 AdminGetAgeRestrictionStatusV3
$CLI_EXE \
    --sn iam \
    --op AdminGetAgeRestrictionStatusV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 116 'AdminGetAgeRestrictionStatusV3' test.out

#- 117 AdminUpdateAgeRestrictionConfigV3
# body param: body
echo '{"ageRestriction": 23, "enable": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateAgeRestrictionConfigV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 117 'AdminUpdateAgeRestrictionConfigV3' test.out

#- 118 AdminGetListCountryAgeRestrictionV3
$CLI_EXE \
    --sn iam \
    --op AdminGetListCountryAgeRestrictionV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 118 'AdminGetListCountryAgeRestrictionV3' test.out

#- 119 AdminUpdateCountryAgeRestrictionV3
# body param: body
echo '{"ageRestriction": 21}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateCountryAgeRestrictionV3 \
    --countryCode 'HSlxBP6A' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 119 'AdminUpdateCountryAgeRestrictionV3' test.out

#- 120 AdminGetBannedUsersV3
$CLI_EXE \
    --sn iam \
    --op AdminGetBannedUsersV3 \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --banType 'p76X4Mg5' \
    --limit '96' \
    --offset '16' \
    > test.out 2>&1
eval_tap $? 120 'AdminGetBannedUsersV3' test.out

#- 121 AdminBanUserBulkV3
# body param: body
echo '{"ban": "1aJy22lj", "comment": "G4l446YW", "endDate": "Tja3AW24", "reason": "vL6lPLEq", "skipNotif": false, "userIds": ["WtxUHXhF", "AcVj17vU", "ZPrKcFYf"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBanUserBulkV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 121 'AdminBanUserBulkV3' test.out

#- 122 AdminUnbanUserBulkV3
# body param: body
echo '{"bans": [{"banId": "mrwww54d", "userId": "HdjvCr4U"}, {"banId": "qbIaVRsn", "userId": "B1KwK13h"}, {"banId": "YLK2gTFP", "userId": "aOLvBSh3"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUnbanUserBulkV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 122 'AdminUnbanUserBulkV3' test.out

#- 123 AdminGetBansTypeWithNamespaceV3
$CLI_EXE \
    --sn iam \
    --op AdminGetBansTypeWithNamespaceV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 123 'AdminGetBansTypeWithNamespaceV3' test.out

#- 124 AdminGetClientsByNamespaceV3
$CLI_EXE \
    --sn iam \
    --op AdminGetClientsByNamespaceV3 \
    --namespace $AB_NAMESPACE \
    --clientId 'gckNcU6j' \
    --clientName 'v4ZAyNwo' \
    --clientType '4EGqCPEd' \
    --limit '54' \
    --offset '76' \
    --skipLoginQueue 'true' \
    > test.out 2>&1
eval_tap $? 124 'AdminGetClientsByNamespaceV3' test.out

#- 125 AdminBulkUpdateClientsV3
# body param: body
echo '{"clientIds": ["UTekwFRc", "OiUV56DD", "lD1ddmgU"], "clientUpdateRequest": {"audiences": ["2sPab8vp", "ULIrrrYS", "HR1EjJZw"], "baseUri": "XGgSO322", "clientName": "vewmlFyU", "clientPermissions": [{"action": 38, "resource": "kfWLpOJY", "schedAction": 79, "schedCron": "fiaoYBpH", "schedRange": ["LRh0Y9gC", "SIfsD03j", "jr7hp7nq"]}, {"action": 33, "resource": "mJkEKS3V", "schedAction": 96, "schedCron": "ZLRkP8jd", "schedRange": ["ul6hnj6m", "7dwezSn4", "6MkVA60f"]}, {"action": 16, "resource": "U43c1FJ2", "schedAction": 42, "schedCron": "ZPo7LXjI", "schedRange": ["3H0XY6nW", "TdduT48b", "1DzZw9OH"]}], "clientPlatform": "yhZs6HaF", "deletable": false, "description": "NhWtdLgq", "modulePermissions": [{"moduleId": "ckGyC33s", "selectedGroups": [{"groupId": "hiH2rQY5", "selectedActions": [70, 43, 37]}, {"groupId": "w7YtYajn", "selectedActions": [13, 0, 37]}, {"groupId": "LKsafIpr", "selectedActions": [95, 34, 8]}]}, {"moduleId": "kcb24Ilm", "selectedGroups": [{"groupId": "9Guv0y2X", "selectedActions": [54, 33, 71]}, {"groupId": "4EnBRJgd", "selectedActions": [44, 98, 57]}, {"groupId": "CG8gwupt", "selectedActions": [27, 8, 40]}]}, {"moduleId": "7qHgO8r3", "selectedGroups": [{"groupId": "mRiPZ12n", "selectedActions": [42, 43, 60]}, {"groupId": "grLBRc89", "selectedActions": [71, 37, 37]}, {"groupId": "k6W3x5uj", "selectedActions": [8, 3, 87]}]}], "namespace": "QCACXREo", "oauthAccessTokenExpiration": 62, "oauthAccessTokenExpirationTimeUnit": "YzUY09XN", "oauthRefreshTokenExpiration": 78, "oauthRefreshTokenExpirationTimeUnit": "qpJEpGfT", "redirectUri": "qCjEGbNa", "scopes": ["uLluBvIZ", "iRij0p6U", "wA1keZNz"], "skipLoginQueue": true, "twoFactorEnabled": false}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBulkUpdateClientsV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 125 'AdminBulkUpdateClientsV3' test.out

#- 126 AdminCreateClientV3
# body param: body
echo '{"audiences": ["V70psi8Q", "j4fPFlZE", "V0VH49J8"], "baseUri": "IpwRWLkc", "clientId": "sIxmVBQO", "clientName": "HOX6RErI", "clientPermissions": [{"action": 16, "resource": "XrkqCjZj", "schedAction": 59, "schedCron": "VhutTUND", "schedRange": ["BLSfGknT", "DLDHCNC5", "61ITnSZA"]}, {"action": 66, "resource": "6uhxGz62", "schedAction": 31, "schedCron": "5QQNPC3T", "schedRange": ["KOzHvrv8", "gM1kl3KH", "ZYVyxM1m"]}, {"action": 96, "resource": "HQDPeb1F", "schedAction": 89, "schedCron": "VZfpV8XB", "schedRange": ["5mx6phLB", "eiShk7jx", "rLuz3fPK"]}], "clientPlatform": "tM75lUzu", "deletable": false, "description": "9Zij4GiV", "modulePermissions": [{"moduleId": "XaZy1u0h", "selectedGroups": [{"groupId": "PtPCQaMY", "selectedActions": [17, 8, 34]}, {"groupId": "s8H21MZn", "selectedActions": [20, 86, 89]}, {"groupId": "O7rl2JW4", "selectedActions": [93, 88, 4]}]}, {"moduleId": "0L5ynSDg", "selectedGroups": [{"groupId": "tfjHy8S1", "selectedActions": [14, 100, 27]}, {"groupId": "9qLYv7fa", "selectedActions": [98, 2, 47]}, {"groupId": "usglULAq", "selectedActions": [21, 11, 35]}]}, {"moduleId": "Nvma9uFn", "selectedGroups": [{"groupId": "4UEOBi9T", "selectedActions": [16, 35, 53]}, {"groupId": "Vb7pHoqg", "selectedActions": [47, 0, 68]}, {"groupId": "FIRWhJjV", "selectedActions": [88, 68, 80]}]}], "namespace": "CZG0xwWG", "oauthAccessTokenExpiration": 76, "oauthAccessTokenExpirationTimeUnit": "VP7Snjqg", "oauthClientType": "AnqSf09X", "oauthRefreshTokenExpiration": 46, "oauthRefreshTokenExpirationTimeUnit": "0ZmFQBoE", "parentNamespace": "KGnxz7zN", "redirectUri": "hbmdx8om", "scopes": ["zZilzrML", "XQlQuTkf", "XyyyCf2W"], "secret": "SQ7IZaKE", "skipLoginQueue": false, "twoFactorEnabled": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminCreateClientV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 126 'AdminCreateClientV3' test.out

#- 127 AdminGetClientsbyNamespacebyIDV3
$CLI_EXE \
    --sn iam \
    --op AdminGetClientsbyNamespacebyIDV3 \
    --clientId 'B8WUxrT7' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 127 'AdminGetClientsbyNamespacebyIDV3' test.out

#- 128 AdminDeleteClientV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteClientV3 \
    --clientId 'i929y5KT' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 128 'AdminDeleteClientV3' test.out

#- 129 AdminUpdateClientV3
# body param: body
echo '{"audiences": ["QgtbzfIF", "kg5Sw038", "gBXXrMts"], "baseUri": "tJNlmRfp", "clientName": "0mHBUTiW", "clientPermissions": [{"action": 49, "resource": "HLS3HFcx", "schedAction": 62, "schedCron": "4dXEopqg", "schedRange": ["RpBlz4hv", "rWBEAbsP", "14IL9QXx"]}, {"action": 53, "resource": "R8kQFGVO", "schedAction": 61, "schedCron": "RQUHkJfd", "schedRange": ["O8MmC7KV", "3d6DIZjE", "6ZjJxnXb"]}, {"action": 72, "resource": "HRXlBtJJ", "schedAction": 69, "schedCron": "3WEtHKUg", "schedRange": ["oCa20bAY", "h6eY4ujk", "zfvei97l"]}], "clientPlatform": "b7Z0JSip", "deletable": false, "description": "Q9VySpI3", "modulePermissions": [{"moduleId": "leIdjcBv", "selectedGroups": [{"groupId": "YHGzoyXN", "selectedActions": [59, 46, 24]}, {"groupId": "yPCTVejV", "selectedActions": [45, 34, 42]}, {"groupId": "5iGsfb7T", "selectedActions": [63, 77, 61]}]}, {"moduleId": "W5pqjq22", "selectedGroups": [{"groupId": "iGXNoC1l", "selectedActions": [80, 1, 80]}, {"groupId": "kqh3H6hh", "selectedActions": [51, 3, 47]}, {"groupId": "iQMZgyHQ", "selectedActions": [24, 33, 47]}]}, {"moduleId": "MP8495Ri", "selectedGroups": [{"groupId": "jwEl6IEo", "selectedActions": [43, 44, 54]}, {"groupId": "7LmHXqC5", "selectedActions": [29, 67, 34]}, {"groupId": "N5uezwiG", "selectedActions": [81, 12, 15]}]}], "namespace": "D2LCP9qW", "oauthAccessTokenExpiration": 10, "oauthAccessTokenExpirationTimeUnit": "obSLUMse", "oauthRefreshTokenExpiration": 50, "oauthRefreshTokenExpirationTimeUnit": "IHZGPDOy", "redirectUri": "xKdaHX8J", "scopes": ["tD4MfKzd", "dmck21jZ", "eGKBG6Kk"], "skipLoginQueue": true, "twoFactorEnabled": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateClientV3 \
    --clientId 'eu5cbAnZ' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 129 'AdminUpdateClientV3' test.out

#- 130 AdminUpdateClientPermissionV3
# body param: body
echo '{"permissions": [{"action": 68, "resource": "U5RhxbQT"}, {"action": 85, "resource": "dvrBhDMS"}, {"action": 36, "resource": "hjChxcbx"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateClientPermissionV3 \
    --clientId 'wGREwgAO' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 130 'AdminUpdateClientPermissionV3' test.out

#- 131 AdminAddClientPermissionsV3
# body param: body
echo '{"permissions": [{"action": 95, "resource": "UsWgcPkg"}, {"action": 52, "resource": "qHMhGqfK"}, {"action": 40, "resource": "m2q1WlLG"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddClientPermissionsV3 \
    --clientId '8BDkTg2h' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 131 'AdminAddClientPermissionsV3' test.out

#- 132 AdminDeleteClientPermissionV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteClientPermissionV3 \
    --action '74' \
    --clientId '7JoukBFu' \
    --namespace $AB_NAMESPACE \
    --resource 'lsQXC9TC' \
    > test.out 2>&1
eval_tap $? 132 'AdminDeleteClientPermissionV3' test.out

#- 133 AdminGetConfigValueV3
$CLI_EXE \
    --sn iam \
    --op AdminGetConfigValueV3 \
    --configKey 'larWWk2j' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 133 'AdminGetConfigValueV3' test.out

#- 134 AdminGetCountryListV3
$CLI_EXE \
    --sn iam \
    --op AdminGetCountryListV3 \
    --namespace $AB_NAMESPACE \
    --filterBlacklist 'true' \
    > test.out 2>&1
eval_tap $? 134 'AdminGetCountryListV3' test.out

#- 135 AdminGetCountryBlacklistV3
$CLI_EXE \
    --sn iam \
    --op AdminGetCountryBlacklistV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 135 'AdminGetCountryBlacklistV3' test.out

#- 136 AdminAddCountryBlacklistV3
# body param: body
echo '{"blacklist": ["blOBCNx1", "8ZtqZ2nm", "dls7A2tr"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddCountryBlacklistV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 136 'AdminAddCountryBlacklistV3' test.out

#- 137 AdminGetLoginAllowlistV3
$CLI_EXE \
    --sn iam \
    --op AdminGetLoginAllowlistV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 137 'AdminGetLoginAllowlistV3' test.out

#- 138 AdminUpdateLoginAllowlistV3
# body param: body
echo '{"active": true, "roleIds": ["pU3vDSoz", "yJKseAoW", "ybBYIi49"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateLoginAllowlistV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 138 'AdminUpdateLoginAllowlistV3' test.out

#- 139 RetrieveAllThirdPartyLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op RetrieveAllThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 139 'RetrieveAllThirdPartyLoginPlatformCredentialV3' test.out

#- 140 RetrieveAllActiveThirdPartyLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op RetrieveAllActiveThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 140 'RetrieveAllActiveThirdPartyLoginPlatformCredentialV3' test.out

#- 141 RetrieveAllSSOLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op RetrieveAllSSOLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --limit '75' \
    --offset '20' \
    > test.out 2>&1
eval_tap $? 141 'RetrieveAllSSOLoginPlatformCredentialV3' test.out

#- 142 RetrieveThirdPartyLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op RetrieveThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'Dhv3FCZl' \
    > test.out 2>&1
eval_tap $? 142 'RetrieveThirdPartyLoginPlatformCredentialV3' test.out

#- 143 AddThirdPartyLoginPlatformCredentialV3
# body param: body
echo '{"ACSURL": "rE1k5iRd", "AWSCognitoRegion": "QTWO6p8p", "AWSCognitoUserPool": "8xLWBRib", "AllowedClients": ["5YrcSXts", "tPdLXjXD", "WaocnpHc"], "AppId": "30Mz4fEk", "AuthorizationEndpoint": "Ps9QuFBm", "ClientId": "N9tnwike", "EmptyStrFieldList": ["AZGAZuH1", "7UArc5Ax", "kxVx7IZo"], "EnableServerLicenseValidation": true, "Environment": "gqXF2n43", "FederationMetadataURL": "LaniMTAL", "GenericOauthFlow": false, "IncludePUID": false, "IsActive": false, "Issuer": "yCFWijtU", "JWKSEndpoint": "P5AVAk07", "KeyID": "xp2fVE0q", "LogoURL": "KUTLTaks", "NetflixCertificates": {"encryptedPrivateKey": "UwqISjWx", "encryptedPrivateKeyName": "oYHqYqNT", "publicCertificate": "8ajQSlkg", "publicCertificateName": "H3ByOVVS", "rootCertificate": "QOiOvLEp", "rootCertificateName": "llYmLOVA"}, "OrganizationId": "j8Ty2s9L", "PlatformName": "NTjUIgP7", "RedirectUri": "N9EkPZd5", "RegisteredDomains": [{"affectedClientIDs": ["6jJ7ICts", "H3ap96KT", "fhKqa9UP"], "domain": "5tfYsCKs", "namespaces": ["JdVsFpsr", "46CWoJSY", "U8Zg5quk"], "roleId": "SJQNzKP5", "ssoCfg": {"googleKey": {"1Ff779Rb": {}, "ejj89Dlw": {}, "XA6dxNyK": {}}, "groupConfigs": [{"assignNamespaces": ["GjAT1w7r", "GXQHKKaT", "VtogJIRd"], "group": "z51iPiZL", "roleId": "puLs8ZKx"}, {"assignNamespaces": ["G5ZGYerU", "UJPrflR3", "mJDqBQb8"], "group": "cJg3IOOF", "roleId": "gZpCbS6Z"}, {"assignNamespaces": ["tzVDZ9R1", "gVJhM0nH", "nXutRp6Y"], "group": "7vEvbLQp", "roleId": "Lt1ovxbY"}]}}, {"affectedClientIDs": ["AWXxq18P", "oKPUJ2Gp", "7u5WKAAR"], "domain": "wC9Sp4wO", "namespaces": ["gv0YCfnN", "8wlLaAhH", "A5Hfscar"], "roleId": "kvIuOTAK", "ssoCfg": {"googleKey": {"v3P67K8T": {}, "jSVqcTgF": {}, "XwaOqy9k": {}}, "groupConfigs": [{"assignNamespaces": ["SZdjWjng", "B4b6e6lL", "1tIqzkVV"], "group": "WortzbMg", "roleId": "at1xsDUX"}, {"assignNamespaces": ["LK4tUuDM", "xDvYmTxQ", "NzEwiSlW"], "group": "PNUNUpqH", "roleId": "iF9UVhjI"}, {"assignNamespaces": ["LhNKpSG0", "sOfZWpgg", "XSC3Zk0S"], "group": "lPj7tiDz", "roleId": "5cTG2AE4"}]}}, {"affectedClientIDs": ["AKfCICd3", "g1peXhkK", "UODFUhCx"], "domain": "y92ikjTY", "namespaces": ["edxxRE4a", "CGalmE9A", "KCH8rCTA"], "roleId": "aHBmPOIt", "ssoCfg": {"googleKey": {"kuImbhc9": {}, "W4Ta3XKO": {}, "so2CumBJ": {}}, "groupConfigs": [{"assignNamespaces": ["gn73AnJ2", "CVgM8syj", "zkXsxLVS"], "group": "FzDGcJRl", "roleId": "GVpsmnyv"}, {"assignNamespaces": ["52h2MwbB", "aG49zQlT", "CMFGcjwn"], "group": "XFEYh0il", "roleId": "oBYgdfAE"}, {"assignNamespaces": ["gRZB6Whj", "ROIwk3CP", "rb5qphTz"], "group": "7uwisAFY", "roleId": "Xpjkn003"}]}}], "Secret": "qLcxAhVn", "TeamID": "9QH0iTwb", "TokenAuthenticationType": "X8sPLq4S", "TokenClaimsMapping": {"KkIiX8wY": "tniC3Mo7", "pIGtL0BF": "dCTJ1Vlz", "vrCKybef": "uKrhJ0cX"}, "TokenEndpoint": "rGs60Qp2", "UserInfoEndpoint": "uNGrPNeo", "UserInfoHTTPMethod": "NdBkO146", "googleAdminConsoleKey": "Vy6mGGU0", "scopes": ["ac4XeWgw", "s19psFnm", "LtoY68h8"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AddThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'knFRNub1' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 143 'AddThirdPartyLoginPlatformCredentialV3' test.out

#- 144 DeleteThirdPartyLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op DeleteThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'MqSb8gNc' \
    > test.out 2>&1
eval_tap $? 144 'DeleteThirdPartyLoginPlatformCredentialV3' test.out

#- 145 UpdateThirdPartyLoginPlatformCredentialV3
# body param: body
echo '{"ACSURL": "bo8KEmj2", "AWSCognitoRegion": "Tr61Bg7Y", "AWSCognitoUserPool": "lth37zJ2", "AllowedClients": ["wAjgbFWT", "n43HLCey", "UL7wu7Wz"], "AppId": "teCNhu9a", "AuthorizationEndpoint": "ybUIkekF", "ClientId": "VUoxfjdr", "EmptyStrFieldList": ["ZAxh0Wvu", "a1cpTX4h", "cYhN44Ks"], "EnableServerLicenseValidation": false, "Environment": "cR3jSFoz", "FederationMetadataURL": "JLvWIcU5", "GenericOauthFlow": false, "IncludePUID": false, "IsActive": true, "Issuer": "UUnnX37d", "JWKSEndpoint": "yp2vG1ku", "KeyID": "uWiZGIBp", "LogoURL": "KCcsSga5", "NetflixCertificates": {"encryptedPrivateKey": "zV1Rc9D1", "encryptedPrivateKeyName": "mK77fp3d", "publicCertificate": "iVTCltrP", "publicCertificateName": "fBxDYcgb", "rootCertificate": "eYPoW5da", "rootCertificateName": "Jwbb4AAf"}, "OrganizationId": "5eefWMcU", "PlatformName": "2opkfOFw", "RedirectUri": "WE2qRpmj", "RegisteredDomains": [{"affectedClientIDs": ["HAcFRe9S", "S9YnpD6E", "4qNpLXsm"], "domain": "uOnNPwpu", "namespaces": ["MW1uRaSN", "rFilTB5S", "MgkyRbpw"], "roleId": "DQqBHDSF", "ssoCfg": {"googleKey": {"nISdAxCe": {}, "4XxfoX2Z": {}, "FIOkDGNA": {}}, "groupConfigs": [{"assignNamespaces": ["iFGEMNlV", "55THTJgI", "ZDzrpw62"], "group": "gafp1ViT", "roleId": "oYCH3tk4"}, {"assignNamespaces": ["7V1W2d6V", "UarSJZlG", "aljOeanS"], "group": "j0xgD9lu", "roleId": "chsaxU5e"}, {"assignNamespaces": ["DjHj4ovn", "Zma3DZfF", "RZcetO3n"], "group": "NTkUq7fb", "roleId": "HEZIUyRb"}]}}, {"affectedClientIDs": ["x1OYUy6I", "ZryVgTBm", "IABtkLy4"], "domain": "ulL25o5I", "namespaces": ["2K6kl2YS", "c7tiOYky", "Tatn4jzT"], "roleId": "ZqeQVdla", "ssoCfg": {"googleKey": {"mIRcWsxn": {}, "oqy6ffPh": {}, "YY1plfJZ": {}}, "groupConfigs": [{"assignNamespaces": ["Yv3rwkkS", "0jd0uMlc", "ckdoa2PY"], "group": "y90upR8B", "roleId": "ASG14UuL"}, {"assignNamespaces": ["Di8aCUA1", "yELJgsFH", "b9MTAQfW"], "group": "Xg74ad5l", "roleId": "FVHUxz9O"}, {"assignNamespaces": ["6q7JWVJQ", "Vzeyg1sN", "awlHPLhW"], "group": "wLIVJY7K", "roleId": "i8xQoi6q"}]}}, {"affectedClientIDs": ["eB2GEXpO", "WzyKPYM0", "RfQZaqNO"], "domain": "ao29yn0R", "namespaces": ["bJ7QbUOx", "2OUJwnFG", "A9Xh6Nsx"], "roleId": "f5ofCu9q", "ssoCfg": {"googleKey": {"Jzdh7X75": {}, "6tfiXed7": {}, "urIvEa7Q": {}}, "groupConfigs": [{"assignNamespaces": ["twJSfypw", "0MPCMSBB", "Tn1ruEf9"], "group": "x7IiAb5M", "roleId": "5bm2BnIe"}, {"assignNamespaces": ["5GTFKWg5", "CDUVfECc", "LQx82Og5"], "group": "IeYBh4Gg", "roleId": "Gg2btc4m"}, {"assignNamespaces": ["jn8tTi1A", "8RvvGDF0", "YmJEAzZJ"], "group": "YjFZGbsz", "roleId": "yRt5GZYE"}]}}], "Secret": "41wZ5zZZ", "TeamID": "fnPVXyej", "TokenAuthenticationType": "s60dO550", "TokenClaimsMapping": {"EjWGXzSx": "9otiTuaX", "uAuNrJMf": "w3i1EqkS", "NvlaqRly": "FKNdMeii"}, "TokenEndpoint": "AIwDMAu1", "UserInfoEndpoint": "B1uBKquB", "UserInfoHTTPMethod": "jSHytyka", "googleAdminConsoleKey": "vMwVmaki", "scopes": ["Gsx901Ar", "qVI1XisF", "t8KXvfoI"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op UpdateThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'Tg34o1ev' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 145 'UpdateThirdPartyLoginPlatformCredentialV3' test.out

#- 146 UpdateThirdPartyLoginPlatformDomainV3
# body param: body
echo '{"affectedClientIDs": ["2PfGehcq", "0xbdiWLJ", "oGvO1U6G"], "assignedNamespaces": ["OR4mXqIi", "bue8VwGz", "8ENcPEKe"], "domain": "5pzni72x", "roleId": "t1hrmaYM", "ssoCfg": {"googleKey": {"ur1oKJQ3": {}, "yFVlNIqe": {}, "k1Uak0k9": {}}, "groupConfigs": [{"assignNamespaces": ["Hfsvv6iG", "Jrezygvq", "etfLhwdd"], "group": "2cslqOeB", "roleId": "8Zxsr0WF"}, {"assignNamespaces": ["zA5Jv8cE", "KUKPj91I", "paMi16aJ"], "group": "rwrakK8N", "roleId": "dVDAHAvo"}, {"assignNamespaces": ["ZetvgoZc", "WhoclgdL", "yfqVrh0o"], "group": "SZWUSMHJ", "roleId": "EK0jqSK4"}]}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op UpdateThirdPartyLoginPlatformDomainV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'aFDFHNV1' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 146 'UpdateThirdPartyLoginPlatformDomainV3' test.out

#- 147 DeleteThirdPartyLoginPlatformDomainV3
# body param: body
echo '{"domain": "qj4rTYtk", "ssoGroups": ["EuOBDThZ", "6SLOdnYk", "eUxJ7M5o"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op DeleteThirdPartyLoginPlatformDomainV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'SInxzq0z' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 147 'DeleteThirdPartyLoginPlatformDomainV3' test.out

#- 148 PartialUpdateThirdPartyLoginPlatformDomainV3
# body param: body
echo '{"affectedClientIDs": ["j24tBSt0", "TJBjXWbF", "4073pQ0Q"], "assignedNamespaces": ["AOOewVa1", "jFBmLPFx", "oiueizlO"], "domain": "ao0cKDy7", "roleId": "Rptdp2Gb", "ssoCfg": {"googleKey": {"xkWzWvTd": {}, "u3TwuUbE": {}, "GmxfSl7a": {}}, "groupConfigs": [{"assignNamespaces": ["f5YReHpx", "BI6tN9Ri", "zdfgpeA8"], "group": "fSC80uw2", "roleId": "0NjnySGJ"}, {"assignNamespaces": ["5uc7MiBX", "Fhkp0iSz", "IdDj7GOi"], "group": "JsC9g575", "roleId": "ydL9oy3y"}, {"assignNamespaces": ["OjATDViw", "F3WgarOA", "cHuktjl9"], "group": "JyGw2H7L", "roleId": "51WP3n5M"}]}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PartialUpdateThirdPartyLoginPlatformDomainV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'yz9zsyHE' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 148 'PartialUpdateThirdPartyLoginPlatformDomainV3' test.out

#- 149 RetrieveSSOLoginPlatformCredential
$CLI_EXE \
    --sn iam \
    --op RetrieveSSOLoginPlatformCredential \
    --namespace $AB_NAMESPACE \
    --platformId 'z1UWI4Nd' \
    > test.out 2>&1
eval_tap $? 149 'RetrieveSSOLoginPlatformCredential' test.out

#- 150 AddSSOLoginPlatformCredential
# body param: body
echo '{"acsUrl": "U07whgv6", "apiKey": "cqSnOv40", "appId": "q9Fcu8kw", "federationMetadataUrl": "umueEhQf", "isActive": false, "redirectUri": "Pfrxgieh", "secret": "gz2QlpeX", "ssoUrl": "QC0B1iTh"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AddSSOLoginPlatformCredential \
    --namespace $AB_NAMESPACE \
    --platformId '5zrgPSqb' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 150 'AddSSOLoginPlatformCredential' test.out

#- 151 DeleteSSOLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op DeleteSSOLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'R7AGNrvP' \
    > test.out 2>&1
eval_tap $? 151 'DeleteSSOLoginPlatformCredentialV3' test.out

#- 152 UpdateSSOPlatformCredential
# body param: body
echo '{"acsUrl": "i0gqU0dd", "apiKey": "1jfUzGDQ", "appId": "iSwehKda", "federationMetadataUrl": "uU4Df2ng", "isActive": true, "redirectUri": "cb0bNyu7", "secret": "J6egMIfO", "ssoUrl": "VXdcsMhc"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op UpdateSSOPlatformCredential \
    --namespace $AB_NAMESPACE \
    --platformId '094Xy91m' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 152 'UpdateSSOPlatformCredential' test.out

#- 153 AdminListUserIDByPlatformUserIDsV3
# body param: body
echo '{"platformUserIds": ["mitqytgt", "ANxEYSVN", "IrpwAuNx"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminListUserIDByPlatformUserIDsV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'Z3kJoX70' \
    --rawPID 'false' \
    --rawPUID 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 153 'AdminListUserIDByPlatformUserIDsV3' test.out

#- 154 AdminGetUserByPlatformUserIDV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserByPlatformUserIDV3 \
    --namespace $AB_NAMESPACE \
    --platformId '9IlfW0Zi' \
    --platformUserId 'KugzbagP' \
    --pidType 'VkJSkanM' \
    > test.out 2>&1
eval_tap $? 154 'AdminGetUserByPlatformUserIDV3' test.out

#- 155 AdminGetProfileUpdateStrategyV3
$CLI_EXE \
    --sn iam \
    --op AdminGetProfileUpdateStrategyV3 \
    --namespace $AB_NAMESPACE \
    --field 'dob' \
    > test.out 2>&1
eval_tap $? 155 'AdminGetProfileUpdateStrategyV3' test.out

#- 156 AdminUpdateProfileUpdateStrategyV3
# body param: body
echo '{"config": {"minimumAllowedInterval": 99}, "type": "DO04E7l3"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateProfileUpdateStrategyV3 \
    --namespace $AB_NAMESPACE \
    --field 'display_name' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 156 'AdminUpdateProfileUpdateStrategyV3' test.out

#- 157 AdminGetRoleOverrideConfigV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleOverrideConfigV3 \
    --namespace $AB_NAMESPACE \
    --identity 'GAME_ADMIN' \
    > test.out 2>&1
eval_tap $? 157 'AdminGetRoleOverrideConfigV3' test.out

#- 158 AdminUpdateRoleOverrideConfigV3
# body param: body
echo '{"additions": [{"actions": [69, 75, 78], "resource": "DXG1XTQV"}, {"actions": [14, 50, 59], "resource": "dJtZkxuT"}, {"actions": [10, 39, 27], "resource": "ppUEF81U"}], "exclusions": [{"actions": [70, 32, 100], "resource": "obkp20p8"}, {"actions": [62, 21, 91], "resource": "Tiaozmom"}, {"actions": [69, 59, 88], "resource": "mqZppYvv"}], "overrides": [{"actions": [41, 73, 4], "resource": "4TuSookO"}, {"actions": [55, 27, 38], "resource": "0dOEFs7k"}, {"actions": [15, 86, 29], "resource": "103XDhUB"}], "replacements": [{"replacement": {"actions": [43, 52, 15], "resource": "QEAKauP8"}, "target": "gfJBHD1G"}, {"replacement": {"actions": [6, 58, 10], "resource": "pPD5mzSI"}, "target": "BwCByyQK"}, {"replacement": {"actions": [72, 84, 72], "resource": "XtVmAJbF"}, "target": "1LQjlY6O"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateRoleOverrideConfigV3 \
    --namespace $AB_NAMESPACE \
    --identity 'VIEW_ONLY' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 158 'AdminUpdateRoleOverrideConfigV3' test.out

#- 159 AdminGetRoleSourceV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleSourceV3 \
    --namespace $AB_NAMESPACE \
    --identity 'USER' \
    > test.out 2>&1
eval_tap $? 159 'AdminGetRoleSourceV3' test.out

#- 160 AdminChangeRoleOverrideConfigStatusV3
# body param: body
echo '{"active": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminChangeRoleOverrideConfigStatusV3 \
    --namespace $AB_NAMESPACE \
    --identity 'GAME_ADMIN' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 160 'AdminChangeRoleOverrideConfigStatusV3' test.out

#- 161 AdminGetRoleNamespacePermissionV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleNamespacePermissionV3 \
    --namespace $AB_NAMESPACE \
    --roleId 'FBRQ6jXS' \
    > test.out 2>&1
eval_tap $? 161 'AdminGetRoleNamespacePermissionV3' test.out

#- 162 GetAdminUsersByRoleIdV3
$CLI_EXE \
    --sn iam \
    --op GetAdminUsersByRoleIdV3 \
    --namespace $AB_NAMESPACE \
    --roleId 'qPDZM0dE' \
    --after '85' \
    --before '27' \
    --limit '43' \
    > test.out 2>&1
eval_tap $? 162 'GetAdminUsersByRoleIdV3' test.out

#- 163 AdminQueryTagV3
$CLI_EXE \
    --sn iam \
    --op AdminQueryTagV3 \
    --namespace $AB_NAMESPACE \
    --limit '35' \
    --offset '21' \
    --tagName 'cdrRgMKs' \
    > test.out 2>&1
eval_tap $? 163 'AdminQueryTagV3' test.out

#- 164 AdminCreateTagV3
# body param: body
echo '{"tagName": "QcNLA47s"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminCreateTagV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 164 'AdminCreateTagV3' test.out

#- 165 AdminUpdateTagV3
# body param: body
echo '{"tagName": "fsgJkDZs"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateTagV3 \
    --namespace $AB_NAMESPACE \
    --tagId 'CO6m1E1l' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 165 'AdminUpdateTagV3' test.out

#- 166 AdminDeleteTagV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteTagV3 \
    --namespace $AB_NAMESPACE \
    --tagId 'BJ8mA21N' \
    > test.out 2>&1
eval_tap $? 166 'AdminDeleteTagV3' test.out

#- 167 AdminGetUserByEmailAddressV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserByEmailAddressV3 \
    --namespace $AB_NAMESPACE \
    --emailAddress 'Jd0JhBYE' \
    > test.out 2>&1
eval_tap $? 167 'AdminGetUserByEmailAddressV3' test.out

#- 168 AdminBulkUpdateUsersV3
# body param: body
echo '{"updateRequest": {"skipLoginQueue": false}, "userIds": ["K9OPEQ2h", "FIUzZqlU", "ijvEebrU"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBulkUpdateUsersV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 168 'AdminBulkUpdateUsersV3' test.out

#- 169 AdminGetBulkUserBanV3
# body param: body
echo '{"bulkUserId": ["DjF1RISG", "NpDTZdYp", "PnMh4E0N"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminGetBulkUserBanV3 \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --banType 'INxjB8Mo' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 169 'AdminGetBulkUserBanV3' test.out

#- 170 AdminListUserIDByUserIDsV3
# body param: body
echo '{"findByPublisherNamespace": false, "userIds": ["kr58e93N", "ObLgaKvr", "ETSkDUWw"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminListUserIDByUserIDsV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 170 'AdminListUserIDByUserIDsV3' test.out

#- 171 AdminBulkGetUsersPlatform
# body param: body
echo '{"userIds": ["ErxGRFQL", "LT6h7hwu", "jU84V3kj"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBulkGetUsersPlatform \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 171 'AdminBulkGetUsersPlatform' test.out

#- 172 AdminCursorGetUserV3
# body param: body
echo '{"cursor": {"cursorTime": "AbsqUITi", "userId": "DQxXaQUz"}, "fields": ["TNYt7N4o", "hOXDxjAS", "1IwF7sjG"], "limit": 29}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminCursorGetUserV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 172 'AdminCursorGetUserV3' test.out

#- 173 AdminInviteUserV3
# body param: body
echo '{"emailAddresses": ["leGbWqRe", "ZRQoGttq", "lOr15Kb1"], "isAdmin": true, "languageTag": "kEHw9CgX", "namespace": "CNBsHLd7", "roles": ["Sn35mAPU", "93nOfiVU", "Ja9D6SYJ"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminInviteUserV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 173 'AdminInviteUserV3' test.out

#- 174 AdminQueryThirdPlatformLinkHistoryV3
$CLI_EXE \
    --sn iam \
    --op AdminQueryThirdPlatformLinkHistoryV3 \
    --namespace $AB_NAMESPACE \
    --limit '73' \
    --offset '93' \
    --platformUserId 'O73H4cwP' \
    --platformId 'tj9RmEcu' \
    > test.out 2>&1
eval_tap $? 174 'AdminQueryThirdPlatformLinkHistoryV3' test.out

#- 175 AdminListUsersV3
$CLI_EXE \
    --sn iam \
    --op AdminListUsersV3 \
    --namespace $AB_NAMESPACE \
    --limit '41' \
    --offset '29' \
    > test.out 2>&1
eval_tap $? 175 'AdminListUsersV3' test.out

#- 176 AdminSearchUserV3
$CLI_EXE \
    --sn iam \
    --op AdminSearchUserV3 \
    --namespace $AB_NAMESPACE \
    --by '1N7tKh7k' \
    --endDate '7JFFnXta' \
    --includeTotal 'false' \
    --limit '24' \
    --offset '96' \
    --platformBy '2ohcmqQY' \
    --platformId 'WGLUFRXf' \
    --query 'XFekjdM1' \
    --roleIds 'PNKeHAL4' \
    --skipLoginQueue 'false' \
    --startDate 'An0jHgx5' \
    --tagIds 'ytrSmoY4' \
    --testAccount 'true' \
    > test.out 2>&1
eval_tap $? 176 'AdminSearchUserV3' test.out

#- 177 AdminGetBulkUserByEmailAddressV3
# body param: body
echo '{"listEmailAddressRequest": ["GBjMwpIo", "6TazohCB", "VMTjSqA3"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminGetBulkUserByEmailAddressV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 177 'AdminGetBulkUserByEmailAddressV3' test.out

#- 178 AdminGetUserByUserIdV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserByUserIdV3 \
    --namespace $AB_NAMESPACE \
    --userId '59TvkDse' \
    > test.out 2>&1
eval_tap $? 178 'AdminGetUserByUserIdV3' test.out

#- 179 AdminUpdateUserV3
# body param: body
echo '{"avatarUrl": "Y0ADoEBR", "country": "OyUwTEz2", "dateOfBirth": "TchgTHma", "displayName": "Fb9enEzq", "languageTag": "s6uRAkH2", "skipLoginQueue": true, "tags": ["v2IPp9Ie", "EhA3oxaX", "pjmalizA"], "uniqueDisplayName": "cvivmiwR", "userName": "qj3rXjA6"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserV3 \
    --namespace $AB_NAMESPACE \
    --userId 'IW0Rp63s' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 179 'AdminUpdateUserV3' test.out

#- 180 AdminGetUserBanV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserBanV3 \
    --namespace $AB_NAMESPACE \
    --userId 'BxuCR4Lj' \
    --activeOnly 'true' \
    --after 'LsXxf9wc' \
    --before 'bGd258MT' \
    --limit '12' \
    > test.out 2>&1
eval_tap $? 180 'AdminGetUserBanV3' test.out

#- 181 AdminBanUserV3
# body param: body
echo '{"ban": "9LzNRwDK", "comment": "xPMwer6g", "endDate": "bh68MlaU", "reason": "yH7sLWQX", "skipNotif": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBanUserV3 \
    --namespace $AB_NAMESPACE \
    --userId 'POf8Sbef' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 181 'AdminBanUserV3' test.out

#- 182 AdminGetUserBanSummaryV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserBanSummaryV3 \
    --namespace $AB_NAMESPACE \
    --userId 'rSfDjjUt' \
    > test.out 2>&1
eval_tap $? 182 'AdminGetUserBanSummaryV3' test.out

#- 183 AdminUpdateUserBanV3
# body param: body
echo '{"enabled": false, "skipNotif": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserBanV3 \
    --banId 'ZkDBwWkg' \
    --namespace $AB_NAMESPACE \
    --userId 'gOpYbgBy' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 183 'AdminUpdateUserBanV3' test.out

#- 184 AdminSendVerificationCodeV3
# body param: body
echo '{"context": "YEx5hegN", "emailAddress": "zI0FPjzF", "languageTag": "4hCZ6mUs", "upgradeToken": "SWnXdz6H"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminSendVerificationCodeV3 \
    --namespace $AB_NAMESPACE \
    --userId 'lX6CUy27' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 184 'AdminSendVerificationCodeV3' test.out

#- 185 AdminVerifyAccountV3
# body param: body
echo '{"Code": "yOyA5d7W", "ContactType": "Iuwav6uv", "LanguageTag": "DgvXHrqh", "validateOnly": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminVerifyAccountV3 \
    --namespace $AB_NAMESPACE \
    --userId '57HSqSuD' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 185 'AdminVerifyAccountV3' test.out

#- 186 GetUserVerificationCode
$CLI_EXE \
    --sn iam \
    --op GetUserVerificationCode \
    --namespace $AB_NAMESPACE \
    --userId 'wSlTIPnb' \
    > test.out 2>&1
eval_tap $? 186 'GetUserVerificationCode' test.out

#- 187 AdminGetUserDeletionStatusV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserDeletionStatusV3 \
    --namespace $AB_NAMESPACE \
    --userId 'vTxiiVre' \
    > test.out 2>&1
eval_tap $? 187 'AdminGetUserDeletionStatusV3' test.out

#- 188 AdminUpdateUserDeletionStatusV3
# body param: body
echo '{"deletionDate": 26, "enabled": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserDeletionStatusV3 \
    --namespace $AB_NAMESPACE \
    --userId 'q7Pd0jKn' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 188 'AdminUpdateUserDeletionStatusV3' test.out

#- 189 AdminListUserAllPlatformAccountsDistinctV3
$CLI_EXE \
    --sn iam \
    --op AdminListUserAllPlatformAccountsDistinctV3 \
    --namespace $AB_NAMESPACE \
    --userId 'N2zesHBK' \
    > test.out 2>&1
eval_tap $? 189 'AdminListUserAllPlatformAccountsDistinctV3' test.out

#- 190 AdminUpgradeHeadlessAccountV3
# body param: body
echo '{"code": "6vGxQ0Is", "country": "lYORSMst", "dateOfBirth": "DAhYltk6", "displayName": "ecXFxDZH", "emailAddress": "NQv7SF2E", "password": "BCJnlDTU", "uniqueDisplayName": "KyKQHoS6", "validateOnly": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpgradeHeadlessAccountV3 \
    --namespace $AB_NAMESPACE \
    --userId 'qtIaBwZX' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 190 'AdminUpgradeHeadlessAccountV3' test.out

#- 191 AdminDeleteUserInformationV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserInformationV3 \
    --namespace $AB_NAMESPACE \
    --userId 'M3K0TsHs' \
    > test.out 2>&1
eval_tap $? 191 'AdminDeleteUserInformationV3' test.out

#- 192 AdminGetUserLoginHistoriesV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserLoginHistoriesV3 \
    --namespace $AB_NAMESPACE \
    --userId 'o8QjjL7m' \
    --after '0.405419477185085' \
    --before '0.6041380328941792' \
    --limit '18' \
    > test.out 2>&1
eval_tap $? 192 'AdminGetUserLoginHistoriesV3' test.out

#- 193 AdminResetPasswordV3
# body param: body
echo '{"languageTag": "6sU6wqed", "mfaToken": "OyKrLNGA", "newPassword": "i28Ybivd", "oldPassword": "LYBPTVuH"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminResetPasswordV3 \
    --namespace $AB_NAMESPACE \
    --userId 'xkbRZlKs' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 193 'AdminResetPasswordV3' test.out

#- 194 AdminUpdateUserPermissionV3
# body param: body
echo '{"Permissions": [{"Action": 35, "Resource": "e1Csn5HG", "SchedAction": 21, "SchedCron": "2xJ6oUYt", "SchedRange": ["zjbfegbn", "6uMHjLwm", "0hoqbRJU"]}, {"Action": 91, "Resource": "qZRX9OwR", "SchedAction": 13, "SchedCron": "MTYiWTV0", "SchedRange": ["SavevOyA", "HjscXBu0", "Dwhy5Lqn"]}, {"Action": 6, "Resource": "PTeabY6g", "SchedAction": 79, "SchedCron": "48j3OpQR", "SchedRange": ["Xlfda18k", "mY3rksJC", "9RKeeXqW"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserPermissionV3 \
    --namespace $AB_NAMESPACE \
    --userId '2nPMRL55' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 194 'AdminUpdateUserPermissionV3' test.out

#- 195 AdminAddUserPermissionsV3
# body param: body
echo '{"Permissions": [{"Action": 39, "Resource": "g696iObu", "SchedAction": 65, "SchedCron": "xNtzUhsX", "SchedRange": ["kqlicYbF", "EXvI72wU", "M6ci6Ibl"]}, {"Action": 62, "Resource": "LJ9ZgBcj", "SchedAction": 16, "SchedCron": "HrYSYYuH", "SchedRange": ["HyUe7xan", "i5w63tE2", "8F5Jt4OI"]}, {"Action": 100, "Resource": "EDAGsIa8", "SchedAction": 83, "SchedCron": "vNk0yB9E", "SchedRange": ["n2iYgt5O", "GlwStjMp", "kpG3Cck6"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddUserPermissionsV3 \
    --namespace $AB_NAMESPACE \
    --userId 'htsaYbf3' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 195 'AdminAddUserPermissionsV3' test.out

#- 196 AdminDeleteUserPermissionBulkV3
# body param: body
echo '[{"Action": 60, "Resource": "AOc3YhNI"}, {"Action": 12, "Resource": "1X1DDkbt"}, {"Action": 40, "Resource": "jzLj8TiF"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserPermissionBulkV3 \
    --namespace $AB_NAMESPACE \
    --userId 'My6vRrhI' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 196 'AdminDeleteUserPermissionBulkV3' test.out

#- 197 AdminDeleteUserPermissionV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserPermissionV3 \
    --action '6' \
    --namespace $AB_NAMESPACE \
    --resource 'yrSAHyHD' \
    --userId 'vWhyolJt' \
    > test.out 2>&1
eval_tap $? 197 'AdminDeleteUserPermissionV3' test.out

#- 198 AdminGetUserPlatformAccountsV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserPlatformAccountsV3 \
    --namespace $AB_NAMESPACE \
    --userId '3RF9KEHz' \
    --after 'cklL79RR' \
    --before 'aj0wTCBG' \
    --limit '1' \
    --platformId 'K4JnJYRT' \
    --targetNamespace 'lyB12JiL' \
    > test.out 2>&1
eval_tap $? 198 'AdminGetUserPlatformAccountsV3' test.out

#- 199 AdminListAllDistinctPlatformAccountsV3
$CLI_EXE \
    --sn iam \
    --op AdminListAllDistinctPlatformAccountsV3 \
    --namespace $AB_NAMESPACE \
    --userId 'E0g02npY' \
    --status 'y4YvlUS6' \
    > test.out 2>&1
eval_tap $? 199 'AdminListAllDistinctPlatformAccountsV3' test.out

#- 200 AdminGetListJusticePlatformAccounts
$CLI_EXE \
    --sn iam \
    --op AdminGetListJusticePlatformAccounts \
    --namespace $AB_NAMESPACE \
    --userId 'gvsHLRTT' \
    > test.out 2>&1
eval_tap $? 200 'AdminGetListJusticePlatformAccounts' test.out

#- 201 AdminGetUserMapping
$CLI_EXE \
    --sn iam \
    --op AdminGetUserMapping \
    --namespace $AB_NAMESPACE \
    --targetNamespace 'erjAsJ1X' \
    --userId 'jgRLg0t8' \
    > test.out 2>&1
eval_tap $? 201 'AdminGetUserMapping' test.out

#- 202 AdminCreateJusticeUser
$CLI_EXE \
    --sn iam \
    --op AdminCreateJusticeUser \
    --namespace $AB_NAMESPACE \
    --targetNamespace 'r2rIITID' \
    --userId 'cnyjd4xR' \
    > test.out 2>&1
eval_tap $? 202 'AdminCreateJusticeUser' test.out

#- 203 AdminLinkPlatformAccount
# body param: body
echo '{"platformId": "Odw7Gtr5", "platformUserId": "i1uQRArs"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminLinkPlatformAccount \
    --namespace $AB_NAMESPACE \
    --userId 'PMCgblE8' \
    --skipConflict 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 203 'AdminLinkPlatformAccount' test.out

#- 204 AdminGetUserLinkHistoriesV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserLinkHistoriesV3 \
    --namespace $AB_NAMESPACE \
    --userId 'kS4e9Ep9' \
    --platformId 'YOatsac6' \
    > test.out 2>&1
eval_tap $? 204 'AdminGetUserLinkHistoriesV3' test.out

#- 205 AdminPlatformUnlinkV3
eval_tap 0 205 'AdminPlatformUnlinkV3 # SKIP deprecated' test.out

#- 206 AdminPlatformUnlinkAllV3
$CLI_EXE \
    --sn iam \
    --op AdminPlatformUnlinkAllV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'GYEn0t4I' \
    --userId 'yfWB6rDL' \
    > test.out 2>&1
eval_tap $? 206 'AdminPlatformUnlinkAllV3' test.out

#- 207 AdminPlatformLinkV3
$CLI_EXE \
    --sn iam \
    --op AdminPlatformLinkV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'mVLfAmeZ' \
    --userId 'iuofEhc8' \
    --ticket 'mGDLb7og' \
    > test.out 2>&1
eval_tap $? 207 'AdminPlatformLinkV3' test.out

#- 208 AdminDeleteUserLinkingHistoryByPlatformIDV3
eval_tap 0 208 'AdminDeleteUserLinkingHistoryByPlatformIDV3 # SKIP deprecated' test.out

#- 209 AdminDeleteUserLinkingRestrictionByPlatformIDV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserLinkingRestrictionByPlatformIDV3 \
    --namespace $AB_NAMESPACE \
    --platformId '9Go6rZ2I' \
    --userId 'ew1nzqDw' \
    > test.out 2>&1
eval_tap $? 209 'AdminDeleteUserLinkingRestrictionByPlatformIDV3' test.out

#- 210 AdminGetThirdPartyPlatformTokenLinkStatusV3
$CLI_EXE \
    --sn iam \
    --op AdminGetThirdPartyPlatformTokenLinkStatusV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'CE2NRi5M' \
    --userId 'OjxjScbz' \
    --platformToken 'SSgEunjm' \
    > test.out 2>&1
eval_tap $? 210 'AdminGetThirdPartyPlatformTokenLinkStatusV3' test.out

#- 211 AdminGetUserSinglePlatformAccount
$CLI_EXE \
    --sn iam \
    --op AdminGetUserSinglePlatformAccount \
    --namespace $AB_NAMESPACE \
    --platformId 'UvRGyDKL' \
    --userId 'FHXixq3W' \
    --crossNamespace 'false' \
    > test.out 2>&1
eval_tap $? 211 'AdminGetUserSinglePlatformAccount' test.out

#- 212 AdminDeleteUserRolesV3
# body param: body
echo '["1RQEXjIq", "uRISqpEY", "YIxMqjbK"]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserRolesV3 \
    --namespace $AB_NAMESPACE \
    --userId '1rCs15aJ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 212 'AdminDeleteUserRolesV3' test.out

#- 213 AdminSaveUserRoleV3
# body param: body
echo '[{"namespace": "gljntQ48", "roleId": "LCDDbLM9"}, {"namespace": "wlNYApVu", "roleId": "BmfVuDiJ"}, {"namespace": "a7D3JwVX", "roleId": "CNFieSLT"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminSaveUserRoleV3 \
    --namespace $AB_NAMESPACE \
    --userId 'YXbXb3CL' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 213 'AdminSaveUserRoleV3' test.out

#- 214 AdminAddUserRoleV3
$CLI_EXE \
    --sn iam \
    --op AdminAddUserRoleV3 \
    --namespace $AB_NAMESPACE \
    --roleId 'MMb4iEot' \
    --userId 'uITOU11i' \
    > test.out 2>&1
eval_tap $? 214 'AdminAddUserRoleV3' test.out

#- 215 AdminDeleteUserRoleV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserRoleV3 \
    --namespace $AB_NAMESPACE \
    --roleId 'EiVgGGo1' \
    --userId 'BGGb7k4g' \
    > test.out 2>&1
eval_tap $? 215 'AdminDeleteUserRoleV3' test.out

#- 216 AdminGetUserStateByUserIdV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserStateByUserIdV3 \
    --namespace $AB_NAMESPACE \
    --userId 'LczCiFYo' \
    > test.out 2>&1
eval_tap $? 216 'AdminGetUserStateByUserIdV3' test.out

#- 217 AdminUpdateUserStatusV3
# body param: body
echo '{"enabled": true, "reason": "DfDrUeNo"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserStatusV3 \
    --namespace $AB_NAMESPACE \
    --userId 'UdYkSHkO' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 217 'AdminUpdateUserStatusV3' test.out

#- 218 AdminTrustlyUpdateUserIdentity
# body param: body
echo '{"emailAddress": "SQPilefI", "password": "hPeJOUBC"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminTrustlyUpdateUserIdentity \
    --namespace $AB_NAMESPACE \
    --userId 'XBvDBZ7j' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 218 'AdminTrustlyUpdateUserIdentity' test.out

#- 219 AdminVerifyUserWithoutVerificationCodeV3
$CLI_EXE \
    --sn iam \
    --op AdminVerifyUserWithoutVerificationCodeV3 \
    --namespace $AB_NAMESPACE \
    --userId '08cKk3uD' \
    > test.out 2>&1
eval_tap $? 219 'AdminVerifyUserWithoutVerificationCodeV3' test.out

#- 220 AdminUpdateClientSecretV3
# body param: body
echo '{"newSecret": "7A3MsTk7"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateClientSecretV3 \
    --clientId '6zgJsX7Z' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 220 'AdminUpdateClientSecretV3' test.out

#- 221 AdminCheckThirdPartyLoginPlatformAvailabilityV3
$CLI_EXE \
    --sn iam \
    --op AdminCheckThirdPartyLoginPlatformAvailabilityV3 \
    --platformId 'SPuy2e4I' \
    > test.out 2>&1
eval_tap $? 221 'AdminCheckThirdPartyLoginPlatformAvailabilityV3' test.out

#- 222 AdminGetRolesV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRolesV3 \
    --after 'c5d3tEEw' \
    --before 'phvMoBx8' \
    --isWildcard 'true' \
    --limit '84' \
    > test.out 2>&1
eval_tap $? 222 'AdminGetRolesV3' test.out

#- 223 AdminCreateRoleV3
# body param: body
echo '{"adminRole": true, "deletable": true, "isWildcard": false, "managers": [{"displayName": "nIXzGHtI", "namespace": "NbFZtdP1", "userId": "jG3fkKjL"}, {"displayName": "nqE9XJGf", "namespace": "7OCrVE8h", "userId": "wOeevXQw"}, {"displayName": "GHirZlaf", "namespace": "h8NpqMzJ", "userId": "fw4RQvaq"}], "members": [{"displayName": "li2p1wEs", "namespace": "AfJDlg0q", "userId": "4RDgUsmu"}, {"displayName": "Z7P1C44k", "namespace": "kJYazbeL", "userId": "tp7AJqJa"}, {"displayName": "YRahLlb8", "namespace": "k58KY5U9", "userId": "Z7ASSU1I"}], "permissions": [{"action": 85, "resource": "91fqBWLd", "schedAction": 16, "schedCron": "10a0iF4D", "schedRange": ["acDCeuyJ", "Gvn3tbg0", "R9PsSZzX"]}, {"action": 96, "resource": "MAiIyQyu", "schedAction": 70, "schedCron": "Eeu1xcbv", "schedRange": ["165FY6Wj", "XUM3wyLD", "vFT9MhdV"]}, {"action": 27, "resource": "Ym56oA6F", "schedAction": 23, "schedCron": "MPV1UK9A", "schedRange": ["ZlWme12l", "JGZEHH1s", "QjjIrVRK"]}], "roleName": "Hal7Cxqs"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminCreateRoleV3 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 223 'AdminCreateRoleV3' test.out

#- 224 AdminGetRoleV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleV3 \
    --roleId 'xUXjyyLM' \
    > test.out 2>&1
eval_tap $? 224 'AdminGetRoleV3' test.out

#- 225 AdminDeleteRoleV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteRoleV3 \
    --roleId '5vSgfY3n' \
    > test.out 2>&1
eval_tap $? 225 'AdminDeleteRoleV3' test.out

#- 226 AdminUpdateRoleV3
# body param: body
echo '{"deletable": false, "isWildcard": true, "roleName": "BIlkh1WE"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateRoleV3 \
    --roleId 'LK6pQLSn' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 226 'AdminUpdateRoleV3' test.out

#- 227 AdminGetRoleAdminStatusV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleAdminStatusV3 \
    --roleId 'S5d9RcCX' \
    > test.out 2>&1
eval_tap $? 227 'AdminGetRoleAdminStatusV3' test.out

#- 228 AdminUpdateAdminRoleStatusV3
$CLI_EXE \
    --sn iam \
    --op AdminUpdateAdminRoleStatusV3 \
    --roleId 'AXBCWNmV' \
    > test.out 2>&1
eval_tap $? 228 'AdminUpdateAdminRoleStatusV3' test.out

#- 229 AdminRemoveRoleAdminV3
$CLI_EXE \
    --sn iam \
    --op AdminRemoveRoleAdminV3 \
    --roleId 'GvDnU07S' \
    > test.out 2>&1
eval_tap $? 229 'AdminRemoveRoleAdminV3' test.out

#- 230 AdminGetRoleManagersV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleManagersV3 \
    --roleId 'SyWnluOf' \
    --after 'W9Eur2Wp' \
    --before 'T69odF1x' \
    --limit '41' \
    > test.out 2>&1
eval_tap $? 230 'AdminGetRoleManagersV3' test.out

#- 231 AdminAddRoleManagersV3
# body param: body
echo '{"managers": [{"displayName": "Vgs3PhB1", "namespace": "ESMx5uVy", "userId": "bExhnjLB"}, {"displayName": "vxCzTyWv", "namespace": "ONm8XRgo", "userId": "Cxc6YT6m"}, {"displayName": "r9SmAIdW", "namespace": "dZmxvSkz", "userId": "DLEoEJ4g"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddRoleManagersV3 \
    --roleId 'sSspmglh' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 231 'AdminAddRoleManagersV3' test.out

#- 232 AdminRemoveRoleManagersV3
# body param: body
echo '{"managers": [{"displayName": "YddyyLzO", "namespace": "HXbX3lc9", "userId": "xACC2Hxf"}, {"displayName": "vDX73hNP", "namespace": "WOyd2rjr", "userId": "sLyUBGlN"}, {"displayName": "33ycdN1i", "namespace": "UvXwkEZt", "userId": "31WtVQ1w"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminRemoveRoleManagersV3 \
    --roleId 'sgXzNtfz' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 232 'AdminRemoveRoleManagersV3' test.out

#- 233 AdminGetRoleMembersV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleMembersV3 \
    --roleId 'tfsQ0T5n' \
    --after 'rOu3Nuxn' \
    --before 'nlW1NdbT' \
    --limit '54' \
    > test.out 2>&1
eval_tap $? 233 'AdminGetRoleMembersV3' test.out

#- 234 AdminAddRoleMembersV3
# body param: body
echo '{"members": [{"displayName": "GNQsoSMT", "namespace": "hrjtsjEV", "userId": "HoUWswWP"}, {"displayName": "mH05syLE", "namespace": "jf2ePbpb", "userId": "tsahSZZD"}, {"displayName": "TGk4P7YQ", "namespace": "x00BGeLk", "userId": "RVUFtXvu"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddRoleMembersV3 \
    --roleId 'SlSzaWBE' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 234 'AdminAddRoleMembersV3' test.out

#- 235 AdminRemoveRoleMembersV3
eval_tap 0 235 'AdminRemoveRoleMembersV3 # SKIP deprecated' test.out

#- 236 AdminUpdateRolePermissionsV3
# body param: body
echo '{"permissions": [{"action": 12, "resource": "x934Zpfi", "schedAction": 50, "schedCron": "Fcsb9Lzt", "schedRange": ["Cbprs309", "6L2ZADLs", "YKT5Pscg"]}, {"action": 72, "resource": "UWR9f4kz", "schedAction": 73, "schedCron": "DfXAFXBM", "schedRange": ["TSig0tzO", "o02UdRPv", "g2LlR46G"]}, {"action": 80, "resource": "ipsRhXyw", "schedAction": 46, "schedCron": "BOoqVkIy", "schedRange": ["wsWMsmQW", "b9Dsl5EE", "VvxlOU5T"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateRolePermissionsV3 \
    --roleId 'M5ZntYD2' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 236 'AdminUpdateRolePermissionsV3' test.out

#- 237 AdminAddRolePermissionsV3
# body param: body
echo '{"permissions": [{"action": 49, "resource": "74SMa7X3", "schedAction": 75, "schedCron": "KtBFOigs", "schedRange": ["NGNCjms5", "hPzY8I3W", "KGbWHMq2"]}, {"action": 3, "resource": "NkUIQa8o", "schedAction": 43, "schedCron": "Qrbb8k5U", "schedRange": ["Y7iH8xmM", "lHhXZr2I", "22s61cJq"]}, {"action": 85, "resource": "rl73iTDp", "schedAction": 90, "schedCron": "AI2aHvnq", "schedRange": ["qYbkyzHo", "4WyASgoA", "rYSOe6Qb"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddRolePermissionsV3 \
    --roleId 'PFByZzR4' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 237 'AdminAddRolePermissionsV3' test.out

#- 238 AdminDeleteRolePermissionsV3
# body param: body
echo '["WRecUEOw", "9UzASCaR", "XdaPiiZ5"]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDeleteRolePermissionsV3 \
    --roleId 'mfuWHtud' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 238 'AdminDeleteRolePermissionsV3' test.out

#- 239 AdminDeleteRolePermissionV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteRolePermissionV3 \
    --action '62' \
    --resource 'xQQmmKFd' \
    --roleId 'OfbmPl6Z' \
    > test.out 2>&1
eval_tap $? 239 'AdminDeleteRolePermissionV3' test.out

#- 240 AdminGetMyUserV3
$CLI_EXE \
    --sn iam \
    --op AdminGetMyUserV3 \
    > test.out 2>&1
eval_tap $? 240 'AdminGetMyUserV3' test.out

#- 241 UserAuthenticationV3
$CLI_EXE \
    --sn iam \
    --op UserAuthenticationV3 \
    --client_id 'raunh1V3' \
    --extend_exp 'false' \
    --redirect_uri 'WfT9qA9g' \
    --password 'h7is86Ub' \
    --request_id 'japc1HAt' \
    --user_name '4kiuVhBg' \
    > test.out 2>&1
eval_tap $? 241 'UserAuthenticationV3' test.out

#- 242 AuthenticationWithPlatformLinkV3
$CLI_EXE \
    --sn iam \
    --op AuthenticationWithPlatformLinkV3 \
    --extend_exp 'true' \
    --client_id '1DPzktrt' \
    --linkingToken '6DHfXyGF' \
    --password '5P5vVmYU' \
    --username '0ZUT19CI' \
    > test.out 2>&1
eval_tap $? 242 'AuthenticationWithPlatformLinkV3' test.out

#- 243 AuthenticateAndLinkForwardV3
$CLI_EXE \
    --sn iam \
    --op AuthenticateAndLinkForwardV3 \
    --extend_exp 'true' \
    --client_id 'QXmioo9m' \
    --linkingToken 'kPuxarcR' \
    --password 'eED8w5SD' \
    --username 'n1jvEBWo' \
    > test.out 2>&1
eval_tap $? 243 'AuthenticateAndLinkForwardV3' test.out

#- 244 PublicGetSystemConfigV3
$CLI_EXE \
    --sn iam \
    --op PublicGetSystemConfigV3 \
    > test.out 2>&1
eval_tap $? 244 'PublicGetSystemConfigV3' test.out

#- 245 GenerateTokenByNewHeadlessAccountV3
$CLI_EXE \
    --sn iam \
    --op GenerateTokenByNewHeadlessAccountV3 \
    --additionalData 'I7pGmSx0' \
    --extend_exp 'true' \
    --linkingToken 'pmjKQjPa' \
    > test.out 2>&1
eval_tap $? 245 'GenerateTokenByNewHeadlessAccountV3' test.out

#- 246 RequestOneTimeLinkingCodeV3
$CLI_EXE \
    --sn iam \
    --op RequestOneTimeLinkingCodeV3 \
    --redirectUri '0jSpiF3k' \
    --state '01cXGVNP' \
    --platformId 'Ydtrhyi6' \
    > test.out 2>&1
eval_tap $? 246 'RequestOneTimeLinkingCodeV3' test.out

#- 247 ValidateOneTimeLinkingCodeV3
$CLI_EXE \
    --sn iam \
    --op ValidateOneTimeLinkingCodeV3 \
    --oneTimeLinkCode '6U1KGPHO' \
    > test.out 2>&1
eval_tap $? 247 'ValidateOneTimeLinkingCodeV3' test.out

#- 248 RequestTokenByOneTimeLinkCodeResponseV3
$CLI_EXE \
    --sn iam \
    --op RequestTokenByOneTimeLinkCodeResponseV3 \
    --additionalData 'b8tYjBSZ' \
    --isTransient 'false' \
    --client_id 'AqELhPIf' \
    --oneTimeLinkCode 'hhefXCuN' \
    > test.out 2>&1
eval_tap $? 248 'RequestTokenByOneTimeLinkCodeResponseV3' test.out

#- 249 GetCountryLocationV3
$CLI_EXE \
    --sn iam \
    --op GetCountryLocationV3 \
    > test.out 2>&1
eval_tap $? 249 'GetCountryLocationV3' test.out

#- 250 Logout
$CLI_EXE \
    --sn iam \
    --op Logout \
    > test.out 2>&1
eval_tap $? 250 'Logout' test.out

#- 251 RequestTokenExchangeCodeV3
$CLI_EXE \
    --sn iam \
    --op RequestTokenExchangeCodeV3 \
    --namespace $AB_NAMESPACE \
    --codeChallenge 'bV6G96G3' \
    --codeChallengeMethod 'S256' \
    --client_id 'R0tWFUZO' \
    > test.out 2>&1
eval_tap $? 251 'RequestTokenExchangeCodeV3' test.out

#- 252 AdminRetrieveUserThirdPartyPlatformTokenV3
$CLI_EXE \
    --sn iam \
    --op AdminRetrieveUserThirdPartyPlatformTokenV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'NQCDtcJJ' \
    --userId 'vspY5mB4' \
    --platformUserId 'QiMKX3pU' \
    > test.out 2>&1
eval_tap $? 252 'AdminRetrieveUserThirdPartyPlatformTokenV3' test.out

#- 253 RevokeUserV3
$CLI_EXE \
    --sn iam \
    --op RevokeUserV3 \
    --namespace $AB_NAMESPACE \
    --userId 'rBwZI2St' \
    --includeGameNamespace 'true' \
    > test.out 2>&1
eval_tap $? 253 'RevokeUserV3' test.out

#- 254 AuthorizeV3
$CLI_EXE \
    --sn iam \
    --op AuthorizeV3 \
    --blockedPlatformId '1WUsECzO' \
    --codeChallenge 'e73L5FaG' \
    --codeChallengeMethod 'S256' \
    --createHeadless 'true' \
    --loginWebBased 'true' \
    --nonce '4TmdZKlF' \
    --oneTimeLinkCode 'Jpqj6msd' \
    --redirectUri 'ZfhDOdcC' \
    --scope 'VciVrfZ6' \
    --state 'CbHsb36G' \
    --targetAuthPage 'CSzfwc28' \
    --useRedirectUriAsLoginUrlWhenLocked 'true' \
    --clientId 'KN1I3vFM' \
    --responseType 'code' \
    > test.out 2>&1
eval_tap $? 254 'AuthorizeV3' test.out

#- 255 TokenIntrospectionV3
$CLI_EXE \
    --sn iam \
    --op TokenIntrospectionV3 \
    --token 'kvjvpTAm' \
    > test.out 2>&1
eval_tap $? 255 'TokenIntrospectionV3' test.out

#- 256 GetJWKSV3
$CLI_EXE \
    --sn iam \
    --op GetJWKSV3 \
    > test.out 2>&1
eval_tap $? 256 'GetJWKSV3' test.out

#- 257 SendMFAAuthenticationCode
$CLI_EXE \
    --sn iam \
    --op SendMFAAuthenticationCode \
    --clientId 'WkkctaRs' \
    --factor 'MUtZ4MqU' \
    --mfaToken 'jKpM0Ide' \
    > test.out 2>&1
eval_tap $? 257 'SendMFAAuthenticationCode' test.out

#- 258 Change2faMethod
$CLI_EXE \
    --sn iam \
    --op Change2faMethod \
    --factor 'u70U8wYi' \
    --mfaToken 'ftVkLmOX' \
    > test.out 2>&1
eval_tap $? 258 'Change2faMethod' test.out

#- 259 Verify2faCode
$CLI_EXE \
    --sn iam \
    --op Verify2faCode \
    --code 'YazHcqjS' \
    --factor 'L1yTKhLh' \
    --mfaToken 'vE8MxwN3' \
    --rememberDevice 'false' \
    > test.out 2>&1
eval_tap $? 259 'Verify2faCode' test.out

#- 260 Verify2faCodeForward
$CLI_EXE \
    --sn iam \
    --op Verify2faCodeForward \
    --defaultFactor 'ldZEUCHf' \
    --factors 'ctXrAML2' \
    --rememberDevice 'true' \
    --clientId 'DcOVcpqI' \
    --code 'NIPyqP0v' \
    --factor 'lyHOLlNw' \
    --mfaToken 'pOACjkCW' \
    > test.out 2>&1
eval_tap $? 260 'Verify2faCodeForward' test.out

#- 261 RetrieveUserThirdPartyPlatformTokenV3
$CLI_EXE \
    --sn iam \
    --op RetrieveUserThirdPartyPlatformTokenV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'zoslKkWv' \
    --userId 'BKeI4qFN' \
    > test.out 2>&1
eval_tap $? 261 'RetrieveUserThirdPartyPlatformTokenV3' test.out

#- 262 AuthCodeRequestV3
$CLI_EXE \
    --sn iam \
    --op AuthCodeRequestV3 \
    --platformId 'vzZDuN9I' \
    --clientId 'jjW7VZf0' \
    --redirectUri '1n66ZJWX' \
    --requestId '1PfjjfNa' \
    > test.out 2>&1
eval_tap $? 262 'AuthCodeRequestV3' test.out

#- 263 PlatformTokenGrantV3
$CLI_EXE \
    --sn iam \
    --op PlatformTokenGrantV3 \
    --platformId 'pmnV7sAm' \
    --additionalData 'D9Oe8atm' \
    --client_id 'cwYKU1he' \
    --createHeadless 'false' \
    --device_id 'EFAhwS7R' \
    --macAddress 'bKfBMIS0' \
    --platform_token 'PwRqXZ18' \
    --serviceLabel '0.7875838576043951' \
    --skipSetCookie 'false' \
    > test.out 2>&1
eval_tap $? 263 'PlatformTokenGrantV3' test.out

#- 264 GetRevocationListV3
$CLI_EXE \
    --sn iam \
    --op GetRevocationListV3 \
    > test.out 2>&1
eval_tap $? 264 'GetRevocationListV3' test.out

#- 265 TokenRevocationV3
$CLI_EXE \
    --sn iam \
    --op TokenRevocationV3 \
    --token 'bryBjWaz' \
    > test.out 2>&1
eval_tap $? 265 'TokenRevocationV3' test.out

#- 266 SimultaneousLoginV3
$CLI_EXE \
    --sn iam \
    --op SimultaneousLoginV3 \
    --simultaneousPlatform '8YljrvRt' \
    --simultaneousTicket 'SYU40x42' \
    --nativePlatform 'steam' \
    --nativePlatformTicket 'S6xC8GDF' \
    > test.out 2>&1
eval_tap $? 266 'SimultaneousLoginV3' test.out

#- 267 TokenGrantV3
$CLI_EXE \
    --sn iam \
    --op TokenGrantV3 \
    --additionalData '0U5xcXMu' \
    --client_id '4knwJ3nU' \
    --client_secret 'baWsAoaB' \
    --code 'VE3MCM7Y' \
    --code_verifier 'QYVvB5XE' \
    --extendNamespace '5cAjaQWU' \
    --extend_exp 'false' \
    --password 'd4S2CTVu' \
    --redirect_uri 'IQfLOYzj' \
    --refresh_token 'JBDjE4Tu' \
    --scope 'gJcnpCIR' \
    --username 'Nxn0fc3Z' \
    --grant_type 'client_credentials' \
    > test.out 2>&1
eval_tap $? 267 'TokenGrantV3' test.out

#- 268 VerifyTokenV3
$CLI_EXE \
    --sn iam \
    --op VerifyTokenV3 \
    --token 's5nh2AJv' \
    > test.out 2>&1
eval_tap $? 268 'VerifyTokenV3' test.out

#- 269 PlatformAuthenticationV3
$CLI_EXE \
    --sn iam \
    --op PlatformAuthenticationV3 \
    --platformId 'I6dF5QPP' \
    --code 'TLJnFb9T' \
    --error '3gSzCOgx' \
    --openidAssocHandle '6DOa9Jtm' \
    --openidClaimedId 'iFKUXc7l' \
    --openidIdentity 'jJ1gm0do' \
    --openidMode 'uEsYoxZK' \
    --openidNs 'C5psIDzd' \
    --openidOpEndpoint '2vRCSCXB' \
    --openidResponseNonce 'ZccJICQt' \
    --openidReturnTo '47uzxFVM' \
    --openidSig 'jcuYwiqV' \
    --openidSigned 'hH31XCq1' \
    --state 'Gjybzt8u' \
    > test.out 2>&1
eval_tap $? 269 'PlatformAuthenticationV3' test.out

#- 270 PlatformTokenRefreshV3
$CLI_EXE \
    --sn iam \
    --op PlatformTokenRefreshV3 \
    --platformId '9Mw9NUGI' \
    --platform_token '21NOyX4s' \
    > test.out 2>&1
eval_tap $? 270 'PlatformTokenRefreshV3' test.out

#- 271 PublicGetInputValidations
$CLI_EXE \
    --sn iam \
    --op PublicGetInputValidations \
    --defaultOnEmpty 'true' \
    --languageCode 'WtJ9W23z' \
    > test.out 2>&1
eval_tap $? 271 'PublicGetInputValidations' test.out

#- 272 PublicGetInputValidationByField
$CLI_EXE \
    --sn iam \
    --op PublicGetInputValidationByField \
    --field '6q9MHpDl' \
    > test.out 2>&1
eval_tap $? 272 'PublicGetInputValidationByField' test.out

#- 273 PublicGetCountryAgeRestrictionV3
$CLI_EXE \
    --sn iam \
    --op PublicGetCountryAgeRestrictionV3 \
    --countryCode 'aytNVYB9' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 273 'PublicGetCountryAgeRestrictionV3' test.out

#- 274 PublicGetConfigValueV3
$CLI_EXE \
    --sn iam \
    --op PublicGetConfigValueV3 \
    --configKey 'ZywBuySw' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 274 'PublicGetConfigValueV3' test.out

#- 275 PublicGetCountryListV3
$CLI_EXE \
    --sn iam \
    --op PublicGetCountryListV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 275 'PublicGetCountryListV3' test.out

#- 276 RetrieveAllActiveThirdPartyLoginPlatformCredentialPublicV3
$CLI_EXE \
    --sn iam \
    --op RetrieveAllActiveThirdPartyLoginPlatformCredentialPublicV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 276 'RetrieveAllActiveThirdPartyLoginPlatformCredentialPublicV3' test.out

#- 277 RetrieveActiveOIDCClientsPublicV3
$CLI_EXE \
    --sn iam \
    --op RetrieveActiveOIDCClientsPublicV3 \
    --namespace $AB_NAMESPACE \
    --clientId 'L69Qx1nB' \
    > test.out 2>&1
eval_tap $? 277 'RetrieveActiveOIDCClientsPublicV3' test.out

#- 278 PublicListUserIDByPlatformUserIDsV3
eval_tap 0 278 'PublicListUserIDByPlatformUserIDsV3 # SKIP deprecated' test.out

#- 279 PublicGetUserByPlatformUserIDV3
eval_tap 0 279 'PublicGetUserByPlatformUserIDV3 # SKIP deprecated' test.out

#- 280 PublicGetProfileUpdateStrategyV3
$CLI_EXE \
    --sn iam \
    --op PublicGetProfileUpdateStrategyV3 \
    --namespace $AB_NAMESPACE \
    --field 'display_name' \
    > test.out 2>&1
eval_tap $? 280 'PublicGetProfileUpdateStrategyV3' test.out

#- 281 PublicGetAsyncStatus
$CLI_EXE \
    --sn iam \
    --op PublicGetAsyncStatus \
    --namespace $AB_NAMESPACE \
    --requestId 'zca3xsqs' \
    > test.out 2>&1
eval_tap $? 281 'PublicGetAsyncStatus' test.out

#- 282 PublicSearchUserV3
$CLI_EXE \
    --sn iam \
    --op PublicSearchUserV3 \
    --namespace $AB_NAMESPACE \
    --by '1DvEZeMV' \
    --limit '47' \
    --offset '81' \
    --platformBy 'WZOKMxdt' \
    --platformId 'Z0DMGKC4' \
    --query 'x6mUAh4e' \
    > test.out 2>&1
eval_tap $? 282 'PublicSearchUserV3' test.out

#- 283 PublicCreateUserV3
# body param: body
echo '{"PasswordMD5Sum": "OxrYRbbU", "acceptedPolicies": [{"isAccepted": false, "localizedPolicyVersionId": "4lHbbgt1", "policyId": "yxhxz8UT", "policyVersionId": "rLNRnAZh"}, {"isAccepted": false, "localizedPolicyVersionId": "4GguEC6r", "policyId": "gpyNZTXQ", "policyVersionId": "iu7P8wY2"}, {"isAccepted": false, "localizedPolicyVersionId": "asw4jcpp", "policyId": "m1dWpEKe", "policyVersionId": "NDg1y0ol"}], "authType": "1syOHdQF", "code": "5su0itv2", "country": "ZmAhwpps", "dateOfBirth": "tjZWq470", "displayName": "62MCpYXE", "emailAddress": "Ftw1Uscj", "password": "G2PdUasn", "reachMinimumAge": true, "uniqueDisplayName": "Km8EeUhg"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicCreateUserV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 283 'PublicCreateUserV3' test.out

#- 284 CheckUserAvailability
$CLI_EXE \
    --sn iam \
    --op CheckUserAvailability \
    --namespace $AB_NAMESPACE \
    --field 'x5IkRDUH' \
    --query '6PWXxB8T' \
    > test.out 2>&1
eval_tap $? 284 'CheckUserAvailability' test.out

#- 285 PublicBulkGetUsers
eval_tap 0 285 'PublicBulkGetUsers # SKIP deprecated' test.out

#- 286 PublicSendRegistrationCode
# body param: body
echo '{"emailAddress": "m8wH9kne", "languageTag": "qKX7Zk9A"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicSendRegistrationCode \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 286 'PublicSendRegistrationCode' test.out

#- 287 PublicVerifyRegistrationCode
# body param: body
echo '{"code": "7BJeUep9", "emailAddress": "tRKnUpFy"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicVerifyRegistrationCode \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 287 'PublicVerifyRegistrationCode' test.out

#- 288 PublicForgotPasswordV3
# body param: body
echo '{"emailAddress": "LWwwppFm", "languageTag": "shCS47NS"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicForgotPasswordV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 288 'PublicForgotPasswordV3' test.out

#- 289 PublicValidateUserInput
# body param: body
echo '{"displayName": "wbGhgyk1", "password": "pvmuxBM5", "uniqueDisplayName": "q1JcyzWL", "username": "nMh0UYbA"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicValidateUserInput \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 289 'PublicValidateUserInput' test.out

#- 290 GetAdminInvitationV3
$CLI_EXE \
    --sn iam \
    --op GetAdminInvitationV3 \
    --invitationId '7X41w6xZ' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 290 'GetAdminInvitationV3' test.out

#- 291 CreateUserFromInvitationV3
# body param: body
echo '{"PasswordMD5Sum": "4ym95Szu", "acceptedPolicies": [{"isAccepted": true, "localizedPolicyVersionId": "ZNgjFFTM", "policyId": "CaSisbU9", "policyVersionId": "cgdMpyk7"}, {"isAccepted": false, "localizedPolicyVersionId": "S1Dgx4xZ", "policyId": "ihHphhEm", "policyVersionId": "ptJKfdEq"}, {"isAccepted": true, "localizedPolicyVersionId": "obWsOgtu", "policyId": "w1KZiAZp", "policyVersionId": "OhILlYxc"}], "authType": "xWaCq8TU", "code": "CPMS2zjB", "country": "hOb1aVfz", "dateOfBirth": "zMrYVmeM", "displayName": "N03c59C3", "emailAddress": "HZbs4rF8", "password": "W975ULAH", "reachMinimumAge": false, "uniqueDisplayName": "Le9PNPIn"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op CreateUserFromInvitationV3 \
    --invitationId 'hC5RV11b' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 291 'CreateUserFromInvitationV3' test.out

#- 292 UpdateUserV3
# body param: body
echo '{"avatarUrl": "e5mFtZ2B", "country": "S2s5B067", "dateOfBirth": "PNc7PIXq", "displayName": "jcP2GCLe", "languageTag": "WVwIQgON", "uniqueDisplayName": "GWTdRHM8", "userName": "cnwg4LmM"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op UpdateUserV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 292 'UpdateUserV3' test.out

#- 293 PublicPartialUpdateUserV3
# body param: body
echo '{"avatarUrl": "F2oKFyqk", "country": "US3ZHJvP", "dateOfBirth": "ATqKEZkG", "displayName": "mgPJC2yA", "languageTag": "rdRZyVds", "uniqueDisplayName": "TDkH1iUo", "userName": "3KwM5JZp"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicPartialUpdateUserV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 293 'PublicPartialUpdateUserV3' test.out

#- 294 PublicSendVerificationCodeV3
# body param: body
echo '{"context": "2EA05QxB", "emailAddress": "9FnXmI1t", "languageTag": "GDZi3ap2", "upgradeToken": "uxcFzduc"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicSendVerificationCodeV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 294 'PublicSendVerificationCodeV3' test.out

#- 295 PublicUserVerificationV3
# body param: body
echo '{"code": "dhblJnIS", "contactType": "c7CD1scr", "languageTag": "dnBhgamN", "validateOnly": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUserVerificationV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 295 'PublicUserVerificationV3' test.out

#- 296 PublicUpgradeHeadlessAccountV3
# body param: body
echo '{"code": "Va2MvpMm", "country": "Idx1OcXp", "dateOfBirth": "yAbvhYxk", "displayName": "DRsB5otd", "emailAddress": "dpA3mgi8", "password": "kKffsnyo", "uniqueDisplayName": "FFqKmUYo", "validateOnly": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpgradeHeadlessAccountV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 296 'PublicUpgradeHeadlessAccountV3' test.out

#- 297 PublicVerifyHeadlessAccountV3
# body param: body
echo '{"emailAddress": "AKyo5tvs", "password": "6Z7nN6hk"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicVerifyHeadlessAccountV3 \
    --namespace $AB_NAMESPACE \
    --needVerificationCode 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 297 'PublicVerifyHeadlessAccountV3' test.out

#- 298 PublicUpdatePasswordV3
# body param: body
echo '{"languageTag": "yue6hjSp", "mfaToken": "JWVti1qk", "newPassword": "eJbDM6nN", "oldPassword": "JyCw6Srn"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpdatePasswordV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 298 'PublicUpdatePasswordV3' test.out

#- 299 PublicCreateJusticeUser
$CLI_EXE \
    --sn iam \
    --op PublicCreateJusticeUser \
    --namespace $AB_NAMESPACE \
    --targetNamespace '5lCVeSJ3' \
    > test.out 2>&1
eval_tap $? 299 'PublicCreateJusticeUser' test.out

#- 300 PublicPlatformLinkV3
$CLI_EXE \
    --sn iam \
    --op PublicPlatformLinkV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'gSARK6zi' \
    --redirectUri 'EOm1drCL' \
    --ticket 'PtL2COxS' \
    > test.out 2>&1
eval_tap $? 300 'PublicPlatformLinkV3' test.out

#- 301 PublicPlatformUnlinkV3
eval_tap 0 301 'PublicPlatformUnlinkV3 # SKIP deprecated' test.out

#- 302 PublicPlatformUnlinkAllV3
$CLI_EXE \
    --sn iam \
    --op PublicPlatformUnlinkAllV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'UhTIWlcP' \
    > test.out 2>&1
eval_tap $? 302 'PublicPlatformUnlinkAllV3' test.out

#- 303 PublicForcePlatformLinkV3
$CLI_EXE \
    --sn iam \
    --op PublicForcePlatformLinkV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'sDzVb2UK' \
    --ticket 'jRNIwjKj' \
    > test.out 2>&1
eval_tap $? 303 'PublicForcePlatformLinkV3' test.out

#- 304 PublicWebLinkPlatform
$CLI_EXE \
    --sn iam \
    --op PublicWebLinkPlatform \
    --namespace $AB_NAMESPACE \
    --platformId 'SqxVV6M0' \
    --clientId 'K0QnRriJ' \
    --redirectUri 'g7Z8EHMT' \
    > test.out 2>&1
eval_tap $? 304 'PublicWebLinkPlatform' test.out

#- 305 PublicWebLinkPlatformEstablish
$CLI_EXE \
    --sn iam \
    --op PublicWebLinkPlatformEstablish \
    --namespace $AB_NAMESPACE \
    --platformId 'qmUibVto' \
    --code 'MbNbI0r0' \
    --state '6e6JkYMq' \
    > test.out 2>&1
eval_tap $? 305 'PublicWebLinkPlatformEstablish' test.out

#- 306 PublicProcessWebLinkPlatformV3
$CLI_EXE \
    --sn iam \
    --op PublicProcessWebLinkPlatformV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'YNj7L2Ff' \
    --code 'vk3h4AaU' \
    --state 'eE8kQVrJ' \
    > test.out 2>&1
eval_tap $? 306 'PublicProcessWebLinkPlatformV3' test.out

#- 307 PublicGetUsersPlatformInfosV3
# body param: body
echo '{"platformId": "VbAMAa9b", "userIds": ["zNeRDpwY", "8OGUw0sl", "zyfijqew"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicGetUsersPlatformInfosV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 307 'PublicGetUsersPlatformInfosV3' test.out

#- 308 ResetPasswordV3
# body param: body
echo '{"clientId": "P8FAkQaV", "code": "12LWDvid", "emailAddress": "h3itoNsl", "languageTag": "kvoHbgfy", "newPassword": "60fAQk1Y"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op ResetPasswordV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 308 'ResetPasswordV3' test.out

#- 309 PublicGetUserByUserIdV3
eval_tap 0 309 'PublicGetUserByUserIdV3 # SKIP deprecated' test.out

#- 310 PublicGetUserBanHistoryV3
$CLI_EXE \
    --sn iam \
    --op PublicGetUserBanHistoryV3 \
    --namespace $AB_NAMESPACE \
    --userId 'zTSX8syy' \
    --activeOnly 'true' \
    --after 'mAlX6ogG' \
    --before 'kp0GHYqn' \
    --limit '32' \
    > test.out 2>&1
eval_tap $? 310 'PublicGetUserBanHistoryV3' test.out

#- 311 PublicListUserAllPlatformAccountsDistinctV3
$CLI_EXE \
    --sn iam \
    --op PublicListUserAllPlatformAccountsDistinctV3 \
    --namespace $AB_NAMESPACE \
    --userId 'Whvue7CR' \
    > test.out 2>&1
eval_tap $? 311 'PublicListUserAllPlatformAccountsDistinctV3' test.out

#- 312 PublicGetUserInformationV3
$CLI_EXE \
    --sn iam \
    --op PublicGetUserInformationV3 \
    --namespace $AB_NAMESPACE \
    --userId 'lKiWuQNl' \
    > test.out 2>&1
eval_tap $? 312 'PublicGetUserInformationV3' test.out

#- 313 PublicGetUserLoginHistoriesV3
$CLI_EXE \
    --sn iam \
    --op PublicGetUserLoginHistoriesV3 \
    --namespace $AB_NAMESPACE \
    --userId 'cwem4nwt' \
    --after '0.18269395066082728' \
    --before '0.23719570128291234' \
    --limit '74' \
    > test.out 2>&1
eval_tap $? 313 'PublicGetUserLoginHistoriesV3' test.out

#- 314 PublicGetUserPlatformAccountsV3
$CLI_EXE \
    --sn iam \
    --op PublicGetUserPlatformAccountsV3 \
    --namespace $AB_NAMESPACE \
    --userId 'AcnSxwqH' \
    --after 'cCfEqQpv' \
    --before 'EuLPewwX' \
    --limit '83' \
    --platformId '0WWlq4K5' \
    > test.out 2>&1
eval_tap $? 314 'PublicGetUserPlatformAccountsV3' test.out

#- 315 PublicListJusticePlatformAccountsV3
$CLI_EXE \
    --sn iam \
    --op PublicListJusticePlatformAccountsV3 \
    --namespace $AB_NAMESPACE \
    --userId 'j734TO1L' \
    > test.out 2>&1
eval_tap $? 315 'PublicListJusticePlatformAccountsV3' test.out

#- 316 PublicLinkPlatformAccount
# body param: body
echo '{"platformId": "k85nAky0", "platformUserId": "tF3jNg0D"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicLinkPlatformAccount \
    --namespace $AB_NAMESPACE \
    --userId 'eIj6JsNz' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 316 'PublicLinkPlatformAccount' test.out

#- 317 PublicForceLinkPlatformWithProgression
# body param: body
echo '{"chosenNamespaces": ["7MNtPe3B", "KCiBBE9L", "G3dAqld7"], "requestId": "A5Q8iKbG"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicForceLinkPlatformWithProgression \
    --namespace $AB_NAMESPACE \
    --userId 'GrXc2wYC' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 317 'PublicForceLinkPlatformWithProgression' test.out

#- 318 PublicGetPublisherUserV3
$CLI_EXE \
    --sn iam \
    --op PublicGetPublisherUserV3 \
    --namespace $AB_NAMESPACE \
    --userId 'VkpZw37F' \
    > test.out 2>&1
eval_tap $? 318 'PublicGetPublisherUserV3' test.out

#- 319 PublicValidateUserByUserIDAndPasswordV3
$CLI_EXE \
    --sn iam \
    --op PublicValidateUserByUserIDAndPasswordV3 \
    --namespace $AB_NAMESPACE \
    --userId '5335LcQi' \
    --password 'gw6O7rIF' \
    > test.out 2>&1
eval_tap $? 319 'PublicValidateUserByUserIDAndPasswordV3' test.out

#- 320 PublicGetRolesV3
$CLI_EXE \
    --sn iam \
    --op PublicGetRolesV3 \
    --after 'Yoszg67C' \
    --before 'lcw5vwBJ' \
    --isWildcard 'true' \
    --limit '37' \
    > test.out 2>&1
eval_tap $? 320 'PublicGetRolesV3' test.out

#- 321 PublicGetRoleV3
$CLI_EXE \
    --sn iam \
    --op PublicGetRoleV3 \
    --roleId '1HIQ0VLT' \
    > test.out 2>&1
eval_tap $? 321 'PublicGetRoleV3' test.out

#- 322 PublicForgotPasswordWithoutNamespaceV3
# body param: body
echo '{"clientId": "TtxHAuiI", "emailAddress": "khdPgAqw", "languageTag": "D37Hl9HI"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicForgotPasswordWithoutNamespaceV3 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 322 'PublicForgotPasswordWithoutNamespaceV3' test.out

#- 323 PublicGetMyUserV3
$CLI_EXE \
    --sn iam \
    --op PublicGetMyUserV3 \
    --includeAllPlatforms 'true' \
    > test.out 2>&1
eval_tap $? 323 'PublicGetMyUserV3' test.out

#- 324 PublicSendCodeForwardV3
# body param: body
echo '{"context": "BcEw3xpC", "emailAddress": "cX3B6oxX", "languageTag": "MOxUTdmB", "upgradeToken": "BGjWY7F8"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicSendCodeForwardV3 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 324 'PublicSendCodeForwardV3' test.out

#- 325 PublicGetLinkHeadlessAccountToMyAccountConflictV3
$CLI_EXE \
    --sn iam \
    --op PublicGetLinkHeadlessAccountToMyAccountConflictV3 \
    --oneTimeLinkCode 'vdWxQmOT' \
    > test.out 2>&1
eval_tap $? 325 'PublicGetLinkHeadlessAccountToMyAccountConflictV3' test.out

#- 326 LinkHeadlessAccountToMyAccountV3
# body param: body
echo '{"chosenNamespaces": ["3JyMI0z1", "5XcdmVJC", "yHsYnFej"], "oneTimeLinkCode": "SmKrOEbk"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op LinkHeadlessAccountToMyAccountV3 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 326 'LinkHeadlessAccountToMyAccountV3' test.out

#- 327 PublicGetMyRedirectionAfterLinkV3
$CLI_EXE \
    --sn iam \
    --op PublicGetMyRedirectionAfterLinkV3 \
    --oneTimeLinkCode 'H36kLYCu' \
    > test.out 2>&1
eval_tap $? 327 'PublicGetMyRedirectionAfterLinkV3' test.out

#- 328 PublicGetMyProfileAllowUpdateStatusV3
$CLI_EXE \
    --sn iam \
    --op PublicGetMyProfileAllowUpdateStatusV3 \
    > test.out 2>&1
eval_tap $? 328 'PublicGetMyProfileAllowUpdateStatusV3' test.out

#- 329 PublicSendVerificationLinkV3
# body param: body
echo '{"languageTag": "MnX3Yp0k"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicSendVerificationLinkV3 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 329 'PublicSendVerificationLinkV3' test.out

#- 330 PublicGetOpenidUserInfoV3
$CLI_EXE \
    --sn iam \
    --op PublicGetOpenidUserInfoV3 \
    > test.out 2>&1
eval_tap $? 330 'PublicGetOpenidUserInfoV3' test.out

#- 331 PublicVerifyUserByLinkV3
$CLI_EXE \
    --sn iam \
    --op PublicVerifyUserByLinkV3 \
    --code 'WWO2J3Cc' \
    > test.out 2>&1
eval_tap $? 331 'PublicVerifyUserByLinkV3' test.out

#- 332 PlatformAuthenticateSAMLV3Handler
$CLI_EXE \
    --sn iam \
    --op PlatformAuthenticateSAMLV3Handler \
    --platformId 'AVo1g0M2' \
    --code 'EMLL2YVE' \
    --error 'u7JUPBjg' \
    --state 'cBMgHWYR' \
    > test.out 2>&1
eval_tap $? 332 'PlatformAuthenticateSAMLV3Handler' test.out

#- 333 LoginSSOClient
$CLI_EXE \
    --sn iam \
    --op LoginSSOClient \
    --platformId '6tbozj5M' \
    --payload 'Zeji5jMf' \
    > test.out 2>&1
eval_tap $? 333 'LoginSSOClient' test.out

#- 334 LogoutSSOClient
$CLI_EXE \
    --sn iam \
    --op LogoutSSOClient \
    --platformId '9btlaz00' \
    > test.out 2>&1
eval_tap $? 334 'LogoutSSOClient' test.out

#- 335 RequestTargetTokenResponseV3
$CLI_EXE \
    --sn iam \
    --op RequestTargetTokenResponseV3 \
    --additionalData '692t4tly' \
    --code 'C8fbtLSQ' \
    > test.out 2>&1
eval_tap $? 335 'RequestTargetTokenResponseV3' test.out

#- 336 UpgradeAndAuthenticateForwardV3
$CLI_EXE \
    --sn iam \
    --op UpgradeAndAuthenticateForwardV3 \
    --client_id 'CnQdoPGA' \
    --upgrade_success_token 'C4mDa85I' \
    > test.out 2>&1
eval_tap $? 336 'UpgradeAndAuthenticateForwardV3' test.out

#- 337 AdminListInvitationHistoriesV4
$CLI_EXE \
    --sn iam \
    --op AdminListInvitationHistoriesV4 \
    --limit '22' \
    --namespace_ '3JiJMSO0' \
    --offset '83' \
    > test.out 2>&1
eval_tap $? 337 'AdminListInvitationHistoriesV4' test.out

#- 338 AdminGetDevicesByUserV4
$CLI_EXE \
    --sn iam \
    --op AdminGetDevicesByUserV4 \
    --namespace $AB_NAMESPACE \
    --userId 'RpOOhmyl' \
    > test.out 2>&1
eval_tap $? 338 'AdminGetDevicesByUserV4' test.out

#- 339 AdminGetBannedDevicesV4
$CLI_EXE \
    --sn iam \
    --op AdminGetBannedDevicesV4 \
    --namespace $AB_NAMESPACE \
    --deviceType 'KaUfRtYS' \
    --endDate 'FMRH5E0D' \
    --limit '77' \
    --offset '23' \
    --startDate 'ZL5wAAt8' \
    > test.out 2>&1
eval_tap $? 339 'AdminGetBannedDevicesV4' test.out

#- 340 AdminGetUserDeviceBansV4
$CLI_EXE \
    --sn iam \
    --op AdminGetUserDeviceBansV4 \
    --namespace $AB_NAMESPACE \
    --userId 'MfyjHjTR' \
    > test.out 2>&1
eval_tap $? 340 'AdminGetUserDeviceBansV4' test.out

#- 341 AdminBanDeviceV4
# body param: body
echo '{"comment": "o4SRNHbj", "deviceId": "Si8jNsIk", "deviceType": "h1gmIXbP", "enabled": true, "endDate": "uw5iP5TH", "ext": {"rj96UFbA": {}, "KfTdNijN": {}, "pwnWe6zI": {}}, "reason": "VLD6NCGE"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBanDeviceV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 341 'AdminBanDeviceV4' test.out

#- 342 AdminGetDeviceBanV4
$CLI_EXE \
    --sn iam \
    --op AdminGetDeviceBanV4 \
    --banId 'N4eVtXGN' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 342 'AdminGetDeviceBanV4' test.out

#- 343 AdminUpdateDeviceBanV4
# body param: body
echo '{"enabled": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateDeviceBanV4 \
    --banId 'TIARZCn3' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 343 'AdminUpdateDeviceBanV4' test.out

#- 344 AdminGenerateReportV4
$CLI_EXE \
    --sn iam \
    --op AdminGenerateReportV4 \
    --namespace $AB_NAMESPACE \
    --endDate 'KTkDBnp5' \
    --startDate 'dmeG6SHU' \
    --deviceType 'JuotZW1l' \
    > test.out 2>&1
eval_tap $? 344 'AdminGenerateReportV4' test.out

#- 345 AdminGetDeviceTypesV4
$CLI_EXE \
    --sn iam \
    --op AdminGetDeviceTypesV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 345 'AdminGetDeviceTypesV4' test.out

#- 346 AdminGetDeviceBansV4
$CLI_EXE \
    --sn iam \
    --op AdminGetDeviceBansV4 \
    --deviceId 'Nus9hagO' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 346 'AdminGetDeviceBansV4' test.out

#- 347 AdminDecryptDeviceV4
eval_tap 0 347 'AdminDecryptDeviceV4 # SKIP deprecated' test.out

#- 348 AdminUnbanDeviceV4
$CLI_EXE \
    --sn iam \
    --op AdminUnbanDeviceV4 \
    --deviceId 'zKrC7Fud' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 348 'AdminUnbanDeviceV4' test.out

#- 349 AdminGetUsersByDeviceV4
$CLI_EXE \
    --sn iam \
    --op AdminGetUsersByDeviceV4 \
    --deviceId 'dH4Xjprz' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 349 'AdminGetUsersByDeviceV4' test.out

#- 350 AdminGetNamespaceInvitationHistoryV4
$CLI_EXE \
    --sn iam \
    --op AdminGetNamespaceInvitationHistoryV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 350 'AdminGetNamespaceInvitationHistoryV4' test.out

#- 351 AdminGetNamespaceUserInvitationHistoryV4
$CLI_EXE \
    --sn iam \
    --op AdminGetNamespaceUserInvitationHistoryV4 \
    --namespace $AB_NAMESPACE \
    --limit '65' \
    --offset '78' \
    > test.out 2>&1
eval_tap $? 351 'AdminGetNamespaceUserInvitationHistoryV4' test.out

#- 352 AdminCreateTestUsersV4
# body param: body
echo '{"count": 39, "userInfo": {"country": "GpA80Q8H"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminCreateTestUsersV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 352 'AdminCreateTestUsersV4' test.out

#- 353 AdminCreateUserV4
# body param: body
echo '{"acceptedPolicies": [{"isAccepted": true, "localizedPolicyVersionId": "h7Yup1yx", "policyId": "HUjXmYYx", "policyVersionId": "tCtH0BiT"}, {"isAccepted": true, "localizedPolicyVersionId": "ts0I2b5j", "policyId": "tF51pGde", "policyVersionId": "eozrod27"}, {"isAccepted": true, "localizedPolicyVersionId": "ggVdQaiD", "policyId": "WILobBPl", "policyVersionId": "CDK2aPpV"}], "authType": "EMAILPASSWD", "code": "gFqS1CNY", "country": "TzEGeDYm", "dateOfBirth": "hZZ0LllF", "displayName": "cdSrjBLA", "emailAddress": "2GDxMvW8", "password": "cpsoGQUs", "passwordMD5Sum": "ol6RqZdW", "reachMinimumAge": false, "uniqueDisplayName": "EjqBL6U4", "username": "GZiZb485"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminCreateUserV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 353 'AdminCreateUserV4' test.out

#- 354 AdminBulkUpdateUserAccountTypeV4
# body param: body
echo '{"testAccount": false, "userIds": ["yy5bDm1r", "eOSeWLZn", "USZQjWTe"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBulkUpdateUserAccountTypeV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 354 'AdminBulkUpdateUserAccountTypeV4' test.out

#- 355 AdminBulkCheckValidUserIDV4
# body param: body
echo '{"userIds": ["n4w0kExb", "4vIs7HqZ", "eRBZqI1V"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBulkCheckValidUserIDV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 355 'AdminBulkCheckValidUserIDV4' test.out

#- 356 AdminUpdateUserV4
# body param: body
echo '{"avatarUrl": "GjdzfMP3", "country": "iKFBPa75", "dateOfBirth": "BwTsNNU4", "displayName": "5r6Pdt00", "languageTag": "LDIn3p0v", "skipLoginQueue": true, "tags": ["dlSJFLJK", "urCEfs4P", "gKhGziLv"], "uniqueDisplayName": "2e44lLuW", "userName": "kqtY9HWC"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserV4 \
    --namespace $AB_NAMESPACE \
    --userId 'nXQ9ez5z' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 356 'AdminUpdateUserV4' test.out

#- 357 AdminUpdateUserEmailAddressV4
# body param: body
echo '{"code": "iBkaeBKV", "emailAddress": "D84pZ3wH"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserEmailAddressV4 \
    --namespace $AB_NAMESPACE \
    --userId 'F164ZAjk' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 357 'AdminUpdateUserEmailAddressV4' test.out

#- 358 AdminDisableUserMFAV4
# body param: body
echo '{"factor": "JYOIC9yX", "mfaToken": "DoANUILa"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDisableUserMFAV4 \
    --namespace $AB_NAMESPACE \
    --userId 'RZn2Sa3q' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 358 'AdminDisableUserMFAV4' test.out

#- 359 AdminGetUserMFAStatusV4
$CLI_EXE \
    --sn iam \
    --op AdminGetUserMFAStatusV4 \
    --namespace $AB_NAMESPACE \
    --userId 'mf6aaAYb' \
    > test.out 2>&1
eval_tap $? 359 'AdminGetUserMFAStatusV4' test.out

#- 360 AdminListUserRolesV4
$CLI_EXE \
    --sn iam \
    --op AdminListUserRolesV4 \
    --namespace $AB_NAMESPACE \
    --userId '2JuBsgiK' \
    > test.out 2>&1
eval_tap $? 360 'AdminListUserRolesV4' test.out

#- 361 AdminUpdateUserRoleV4
# body param: body
echo '{"assignedNamespaces": ["6KOVkUEt", "xw3ezrMc", "P2p3Bhp8"], "roleId": "jKFXF9qD"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserRoleV4 \
    --namespace $AB_NAMESPACE \
    --userId 'd2Ab2DTQ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 361 'AdminUpdateUserRoleV4' test.out

#- 362 AdminAddUserRoleV4
# body param: body
echo '{"assignedNamespaces": ["npQQ8hua", "2TbLW69u", "hLdc8OUp"], "roleId": "kTynWhJs"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddUserRoleV4 \
    --namespace $AB_NAMESPACE \
    --userId 'Opg6JQNb' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 362 'AdminAddUserRoleV4' test.out

#- 363 AdminRemoveUserRoleV4
# body param: body
echo '{"assignedNamespaces": ["BuqiKrv0", "9Z1EmmuU", "YMCjC0Zf"], "roleId": "nAYRvXrg"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminRemoveUserRoleV4 \
    --namespace $AB_NAMESPACE \
    --userId 'e9Bx6u7h' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 363 'AdminRemoveUserRoleV4' test.out

#- 364 AdminGetRolesV4
$CLI_EXE \
    --sn iam \
    --op AdminGetRolesV4 \
    --adminRole 'true' \
    --isWildcard 'true' \
    --limit '70' \
    --offset '79' \
    > test.out 2>&1
eval_tap $? 364 'AdminGetRolesV4' test.out

#- 365 AdminCreateRoleV4
# body param: body
echo '{"adminRole": false, "deletable": true, "isWildcard": false, "roleName": "v2hx0XBI"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminCreateRoleV4 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 365 'AdminCreateRoleV4' test.out

#- 366 AdminGetRoleV4
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleV4 \
    --roleId '8I2kECFa' \
    > test.out 2>&1
eval_tap $? 366 'AdminGetRoleV4' test.out

#- 367 AdminDeleteRoleV4
$CLI_EXE \
    --sn iam \
    --op AdminDeleteRoleV4 \
    --roleId 'DO9MVIPW' \
    > test.out 2>&1
eval_tap $? 367 'AdminDeleteRoleV4' test.out

#- 368 AdminUpdateRoleV4
# body param: body
echo '{"adminRole": false, "deletable": true, "isWildcard": false, "roleName": "NhiidwLa"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateRoleV4 \
    --roleId 'MiZcmVzl' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 368 'AdminUpdateRoleV4' test.out

#- 369 AdminUpdateRolePermissionsV4
# body param: body
echo '{"permissions": [{"action": 55, "resource": "SJW7cMR7", "schedAction": 87, "schedCron": "qnrSS3NA", "schedRange": ["Jvfly62p", "oEJNY6je", "ZtxnbgfX"]}, {"action": 53, "resource": "6YfxQ9Xc", "schedAction": 92, "schedCron": "R6kDLCQf", "schedRange": ["k8eMhpDV", "DVTIyvMB", "aUddebZN"]}, {"action": 69, "resource": "TvKRcjiW", "schedAction": 79, "schedCron": "aDVe6LIg", "schedRange": ["lCNqSzf0", "CfHxZp77", "syRwZ8xw"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateRolePermissionsV4 \
    --roleId 'ZhO4Swsv' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 369 'AdminUpdateRolePermissionsV4' test.out

#- 370 AdminAddRolePermissionsV4
# body param: body
echo '{"permissions": [{"action": 81, "resource": "3hkOdKpK", "schedAction": 48, "schedCron": "obvWYzWv", "schedRange": ["Vky9YCzm", "wChHw0nK", "HQm6yf7i"]}, {"action": 84, "resource": "xrcWGbVD", "schedAction": 61, "schedCron": "MQwVtn3T", "schedRange": ["1AZAygrN", "8d50U1EL", "dyN0J34U"]}, {"action": 88, "resource": "u44TASkh", "schedAction": 8, "schedCron": "RwquumKV", "schedRange": ["3yvsDKzl", "rklwSyc2", "XrUv07qi"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddRolePermissionsV4 \
    --roleId 'gZ8xtqi4' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 370 'AdminAddRolePermissionsV4' test.out

#- 371 AdminDeleteRolePermissionsV4
# body param: body
echo '["0mnjswIR", "0xTbH6cK", "YKptPhMN"]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDeleteRolePermissionsV4 \
    --roleId 'OlEKsL60' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 371 'AdminDeleteRolePermissionsV4' test.out

#- 372 AdminListAssignedUsersV4
$CLI_EXE \
    --sn iam \
    --op AdminListAssignedUsersV4 \
    --roleId 'vPNyXwQU' \
    --after 'vShtgZoi' \
    --before 'dQHJoYcu' \
    --limit '63' \
    > test.out 2>&1
eval_tap $? 372 'AdminListAssignedUsersV4' test.out

#- 373 AdminAssignUserToRoleV4
# body param: body
echo '{"assignedNamespaces": ["WYMo5mhq", "ZyN6CiBE", "zhvjIip9"], "namespace": "iPMXhYkQ", "userId": "fwoa50X0"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAssignUserToRoleV4 \
    --roleId '5JKAK6gk' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 373 'AdminAssignUserToRoleV4' test.out

#- 374 AdminRevokeUserFromRoleV4
# body param: body
echo '{"namespace": "4kcXmroS", "userId": "Nc5BPp0D"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminRevokeUserFromRoleV4 \
    --roleId 'Ek9UZPxl' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 374 'AdminRevokeUserFromRoleV4' test.out

#- 375 AdminInviteUserNewV4
# body param: body
echo '{"assignedNamespaces": ["5kJis84b", "68LsXP9m", "y4JneoFI"], "emailAddresses": ["adAKLM6M", "wCOluk3Z", "KjcJmdkN"], "isAdmin": false, "isNewStudio": true, "languageTag": "IYQ6c8J7", "namespace": "OzHkJtXr", "roleId": "I4Ng4ZT9"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminInviteUserNewV4 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 375 'AdminInviteUserNewV4' test.out

#- 376 AdminUpdateMyUserV4
# body param: body
echo '{"avatarUrl": "7vgCySPh", "country": "DEg6Lrfk", "dateOfBirth": "OejKALkv", "displayName": "RGmGAhXd", "languageTag": "xOtbXJK0", "skipLoginQueue": false, "tags": ["RYpqpJhl", "1ZlSyShq", "JG6mqWg6"], "uniqueDisplayName": "hYLp6471", "userName": "yQkyDTMk"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateMyUserV4 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 376 'AdminUpdateMyUserV4' test.out

#- 377 AdminDisableMyAuthenticatorV4
# body param: body
echo '{"factor": "ZD861laD", "mfaToken": "l6Jp0D7P"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDisableMyAuthenticatorV4 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 377 'AdminDisableMyAuthenticatorV4' test.out

#- 378 AdminEnableMyAuthenticatorV4
$CLI_EXE \
    --sn iam \
    --op AdminEnableMyAuthenticatorV4 \
    --code 'wAGHg5dg' \
    > test.out 2>&1
eval_tap $? 378 'AdminEnableMyAuthenticatorV4' test.out

#- 379 AdminGenerateMyAuthenticatorKeyV4
$CLI_EXE \
    --sn iam \
    --op AdminGenerateMyAuthenticatorKeyV4 \
    > test.out 2>&1
eval_tap $? 379 'AdminGenerateMyAuthenticatorKeyV4' test.out

#- 380 AdminGetMyBackupCodesV4
eval_tap 0 380 'AdminGetMyBackupCodesV4 # SKIP deprecated' test.out

#- 381 AdminGenerateMyBackupCodesV4
eval_tap 0 381 'AdminGenerateMyBackupCodesV4 # SKIP deprecated' test.out

#- 382 AdminDisableMyBackupCodesV4
# body param: body
echo '{"factor": "VTiU9bCy", "mfaToken": "pDqADUKC"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDisableMyBackupCodesV4 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 382 'AdminDisableMyBackupCodesV4' test.out

#- 383 AdminDownloadMyBackupCodesV4
eval_tap 0 383 'AdminDownloadMyBackupCodesV4 # SKIP deprecated' test.out

#- 384 AdminEnableMyBackupCodesV4
eval_tap 0 384 'AdminEnableMyBackupCodesV4 # SKIP deprecated' test.out

#- 385 AdminGetBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op AdminGetBackupCodesV4 \
    --languageTag 'AIV7Kly2' \
    > test.out 2>&1
eval_tap $? 385 'AdminGetBackupCodesV4' test.out

#- 386 AdminGenerateBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op AdminGenerateBackupCodesV4 \
    --languageTag 'sce973sy' \
    > test.out 2>&1
eval_tap $? 386 'AdminGenerateBackupCodesV4' test.out

#- 387 AdminEnableBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op AdminEnableBackupCodesV4 \
    --languageTag '0Ug30J3G' \
    > test.out 2>&1
eval_tap $? 387 'AdminEnableBackupCodesV4' test.out

#- 388 AdminChallengeMyMFAV4
$CLI_EXE \
    --sn iam \
    --op AdminChallengeMyMFAV4 \
    --code 'K1nYDQ14' \
    --factor 'tABcjdwq' \
    > test.out 2>&1
eval_tap $? 388 'AdminChallengeMyMFAV4' test.out

#- 389 AdminSendMyMFAEmailCodeV4
$CLI_EXE \
    --sn iam \
    --op AdminSendMyMFAEmailCodeV4 \
    --action 'I3hWgMey' \
    --languageTag 'oqNDkKJN' \
    > test.out 2>&1
eval_tap $? 389 'AdminSendMyMFAEmailCodeV4' test.out

#- 390 AdminDisableMyEmailV4
# body param: body
echo '{"factor": "otQ2hubI", "mfaToken": "QcKEdagt"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDisableMyEmailV4 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 390 'AdminDisableMyEmailV4' test.out

#- 391 AdminEnableMyEmailV4
$CLI_EXE \
    --sn iam \
    --op AdminEnableMyEmailV4 \
    --code 'YbJnsSfq' \
    > test.out 2>&1
eval_tap $? 391 'AdminEnableMyEmailV4' test.out

#- 392 AdminGetMyEnabledFactorsV4
$CLI_EXE \
    --sn iam \
    --op AdminGetMyEnabledFactorsV4 \
    > test.out 2>&1
eval_tap $? 392 'AdminGetMyEnabledFactorsV4' test.out

#- 393 AdminMakeFactorMyDefaultV4
$CLI_EXE \
    --sn iam \
    --op AdminMakeFactorMyDefaultV4 \
    --factor 'ZaPqypbG' \
    > test.out 2>&1
eval_tap $? 393 'AdminMakeFactorMyDefaultV4' test.out

#- 394 AdminGetMyOwnMFAStatusV4
$CLI_EXE \
    --sn iam \
    --op AdminGetMyOwnMFAStatusV4 \
    > test.out 2>&1
eval_tap $? 394 'AdminGetMyOwnMFAStatusV4' test.out

#- 395 AdminGetMyMFAStatusV4
eval_tap 0 395 'AdminGetMyMFAStatusV4 # SKIP deprecated' test.out

#- 396 AdminInviteUserV4
eval_tap 0 396 'AdminInviteUserV4 # SKIP deprecated' test.out

#- 397 AuthenticationWithPlatformLinkV4
$CLI_EXE \
    --sn iam \
    --op AuthenticationWithPlatformLinkV4 \
    --extend_exp 'true' \
    --client_id 'RbOxVV0h' \
    --linkingToken 'Jhy6IgsO' \
    --password '8M7LYnc0' \
    --username 'giI7LY4c' \
    > test.out 2>&1
eval_tap $? 397 'AuthenticationWithPlatformLinkV4' test.out

#- 398 GenerateTokenByNewHeadlessAccountV4
$CLI_EXE \
    --sn iam \
    --op GenerateTokenByNewHeadlessAccountV4 \
    --additionalData 'S5iw1E0D' \
    --extend_exp 'false' \
    --linkingToken 'rVtjV18S' \
    > test.out 2>&1
eval_tap $? 398 'GenerateTokenByNewHeadlessAccountV4' test.out

#- 399 Verify2faCodeV4
$CLI_EXE \
    --sn iam \
    --op Verify2faCodeV4 \
    --code '2GqR20xr' \
    --factor 'OPjLDr2t' \
    --mfaToken 'WoFtvO4V' \
    --rememberDevice 'false' \
    > test.out 2>&1
eval_tap $? 399 'Verify2faCodeV4' test.out

#- 400 PlatformTokenGrantV4
$CLI_EXE \
    --sn iam \
    --op PlatformTokenGrantV4 \
    --platformId '777w1fDD' \
    --codeChallenge 'MlBusw1f' \
    --codeChallengeMethod 'S256' \
    --additionalData 'osDR8DS3' \
    --client_id 'F93XxnPA' \
    --createHeadless 'true' \
    --device_id 'GkwmTJdA' \
    --macAddress 'pqPrKCL3' \
    --platform_token 'YHKC6sxS' \
    --serviceLabel '0.7043513551074471' \
    --skipSetCookie 'false' \
    > test.out 2>&1
eval_tap $? 400 'PlatformTokenGrantV4' test.out

#- 401 SimultaneousLoginV4
$CLI_EXE \
    --sn iam \
    --op SimultaneousLoginV4 \
    --codeChallenge 'wxmdI4gi' \
    --codeChallengeMethod 'plain' \
    --simultaneousPlatform 'OlRYfSW8' \
    --simultaneousTicket 'ChLU34WJ' \
    --nativePlatform 'steam' \
    --nativePlatformTicket '0zA3XSHZ' \
    > test.out 2>&1
eval_tap $? 401 'SimultaneousLoginV4' test.out

#- 402 TokenGrantV4
$CLI_EXE \
    --sn iam \
    --op TokenGrantV4 \
    --codeChallenge 'Krzm1LrO' \
    --codeChallengeMethod 'plain' \
    --additionalData 'oQwNwSmh' \
    --client_id '59Zn1Kkq' \
    --client_secret 'bThzGWNS' \
    --code '6xs77SRq' \
    --code_verifier 'IRgYZ6xm' \
    --extendNamespace 'qgD4J63V' \
    --extend_exp 'true' \
    --login_queue_ticket 'AaS8pYK1' \
    --password 'BVaAfxwI' \
    --redirect_uri 'lfi0MLss' \
    --refresh_token 'fu6b4sEk' \
    --scope 'JlGK1oDh' \
    --username 'BNggZaUY' \
    --grant_type 'authorization_code' \
    > test.out 2>&1
eval_tap $? 402 'TokenGrantV4' test.out

#- 403 RequestTargetTokenResponseV4
$CLI_EXE \
    --sn iam \
    --op RequestTargetTokenResponseV4 \
    --additionalData '4EXDBxbh' \
    --code 'v0qPzY3G' \
    > test.out 2>&1
eval_tap $? 403 'RequestTargetTokenResponseV4' test.out

#- 404 PublicListUserIDByPlatformUserIDsV4
# body param: body
echo '{"pidType": "0ycSe0jv", "platformUserIds": ["JgjM7MLS", "6ZvBFrTw", "qm5H7FjY"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicListUserIDByPlatformUserIDsV4 \
    --namespace $AB_NAMESPACE \
    --platformId 'HRBXFbbp' \
    --rawPUID 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 404 'PublicListUserIDByPlatformUserIDsV4' test.out

#- 405 PublicGetUserByPlatformUserIDV4
$CLI_EXE \
    --sn iam \
    --op PublicGetUserByPlatformUserIDV4 \
    --namespace $AB_NAMESPACE \
    --platformId 'uBzivwQg' \
    --platformUserId 'UrRdIoc4' \
    > test.out 2>&1
eval_tap $? 405 'PublicGetUserByPlatformUserIDV4' test.out

#- 406 PublicCreateTestUserV4
# body param: body
echo '{"acceptedPolicies": [{"isAccepted": false, "localizedPolicyVersionId": "QTUF49ro", "policyId": "j2KhjrZc", "policyVersionId": "r6Vf8y0K"}, {"isAccepted": false, "localizedPolicyVersionId": "luNgiFT2", "policyId": "3pbCZTqZ", "policyVersionId": "owqiFPDY"}, {"isAccepted": false, "localizedPolicyVersionId": "x00QIZCd", "policyId": "7JEXWF0Y", "policyVersionId": "4l9Z3ROa"}], "authType": "EMAILPASSWD", "country": "DcT6a8W3", "dateOfBirth": "rR8hecOH", "displayName": "HSprWo0j", "emailAddress": "8BgEWwmd", "password": "XRHkvybb", "passwordMD5Sum": "J18MdDH9", "uniqueDisplayName": "qr5MibMt", "username": "44lcLAfs", "verified": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicCreateTestUserV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 406 'PublicCreateTestUserV4' test.out

#- 407 PublicCreateUserV4
# body param: body
echo '{"acceptedPolicies": [{"isAccepted": false, "localizedPolicyVersionId": "OrsXkkrq", "policyId": "mQdE8jyB", "policyVersionId": "x7eWmdnQ"}, {"isAccepted": true, "localizedPolicyVersionId": "r9ecByxv", "policyId": "ez7vyIyf", "policyVersionId": "C2IJ8KAz"}, {"isAccepted": true, "localizedPolicyVersionId": "mjAYhBtn", "policyId": "xr7H7hqz", "policyVersionId": "CM4nN4Vk"}], "authType": "EMAILPASSWD", "code": "89kHwboH", "country": "L8Y5VGU7", "dateOfBirth": "kc45We4F", "displayName": "Hcdph9sq", "emailAddress": "RHkYMwE4", "password": "1Y2XV3kx", "passwordMD5Sum": "eV2Y2rs6", "reachMinimumAge": false, "uniqueDisplayName": "Xrt3sOyk", "username": "HIhRpUi0"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicCreateUserV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 407 'PublicCreateUserV4' test.out

#- 408 CreateUserFromInvitationV4
# body param: body
echo '{"acceptedPolicies": [{"isAccepted": false, "localizedPolicyVersionId": "oVqOLnbo", "policyId": "rmTMq1IP", "policyVersionId": "2IKSvDhP"}, {"isAccepted": false, "localizedPolicyVersionId": "oaD6pq6n", "policyId": "f3KPp32A", "policyVersionId": "0OwqssgG"}, {"isAccepted": true, "localizedPolicyVersionId": "U5bVyphR", "policyId": "tVWJZjnz", "policyVersionId": "99HTT9X0"}], "authType": "EMAILPASSWD", "code": "8kSp4zHN", "country": "2LMNngPI", "dateOfBirth": "Lm3a9Zry", "displayName": "t71dnwRx", "emailAddress": "k4iPWran", "password": "nGugSFho", "passwordMD5Sum": "VX4S4b2w", "reachMinimumAge": false, "uniqueDisplayName": "FQkVMFRd", "username": "qIuFS1Gn"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op CreateUserFromInvitationV4 \
    --invitationId 'T2aon1L1' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 408 'CreateUserFromInvitationV4' test.out

#- 409 PublicUpdateUserV4
# body param: body
echo '{"avatarUrl": "PxhDBcTm", "country": "qFxuxPLQ", "dateOfBirth": "RnCiVNRY", "displayName": "lCbjcXMT", "languageTag": "0Vl1mEkl", "uniqueDisplayName": "oi6EUxUK", "userName": "PvSVblnu"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpdateUserV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 409 'PublicUpdateUserV4' test.out

#- 410 PublicUpdateUserEmailAddressV4
# body param: body
echo '{"code": "Ylth8wrb", "emailAddress": "aTuqTtH4"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpdateUserEmailAddressV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 410 'PublicUpdateUserEmailAddressV4' test.out

#- 411 PublicUpgradeHeadlessAccountWithVerificationCodeV4
# body param: body
echo '{"code": "wbXkzEZw", "country": "1q13eWa0", "dateOfBirth": "g3UKBNQ2", "displayName": "AaikflVm", "emailAddress": "IXPb6876", "password": "nJZjFBT7", "reachMinimumAge": false, "uniqueDisplayName": "QnycTecx", "username": "UPp019VR", "validateOnly": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpgradeHeadlessAccountWithVerificationCodeV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 411 'PublicUpgradeHeadlessAccountWithVerificationCodeV4' test.out

#- 412 PublicUpgradeHeadlessAccountV4
# body param: body
echo '{"dateOfBirth": "iaUAuITI", "displayName": "gksXl2DV", "emailAddress": "WEwOeXyv", "password": "OE4ycuWF", "uniqueDisplayName": "moLKBTRs", "username": "rBWfD1t9"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpgradeHeadlessAccountV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 412 'PublicUpgradeHeadlessAccountV4' test.out

#- 413 PublicDisableMyAuthenticatorV4
# body param: body
echo '{"factor": "5LDtY55b", "mfaToken": "tacOrr3c"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicDisableMyAuthenticatorV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 413 'PublicDisableMyAuthenticatorV4' test.out

#- 414 PublicEnableMyAuthenticatorV4
$CLI_EXE \
    --sn iam \
    --op PublicEnableMyAuthenticatorV4 \
    --namespace $AB_NAMESPACE \
    --code 'aPTjxT1q' \
    > test.out 2>&1
eval_tap $? 414 'PublicEnableMyAuthenticatorV4' test.out

#- 415 PublicGenerateMyAuthenticatorKeyV4
$CLI_EXE \
    --sn iam \
    --op PublicGenerateMyAuthenticatorKeyV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 415 'PublicGenerateMyAuthenticatorKeyV4' test.out

#- 416 PublicGetMyBackupCodesV4
eval_tap 0 416 'PublicGetMyBackupCodesV4 # SKIP deprecated' test.out

#- 417 PublicGenerateMyBackupCodesV4
eval_tap 0 417 'PublicGenerateMyBackupCodesV4 # SKIP deprecated' test.out

#- 418 PublicDisableMyBackupCodesV4
# body param: body
echo '{"factor": "SBObuds1", "mfaToken": "QLqLdsqy"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicDisableMyBackupCodesV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 418 'PublicDisableMyBackupCodesV4' test.out

#- 419 PublicDownloadMyBackupCodesV4
eval_tap 0 419 'PublicDownloadMyBackupCodesV4 # SKIP deprecated' test.out

#- 420 PublicEnableMyBackupCodesV4
eval_tap 0 420 'PublicEnableMyBackupCodesV4 # SKIP deprecated' test.out

#- 421 PublicGetBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op PublicGetBackupCodesV4 \
    --namespace $AB_NAMESPACE \
    --languageTag 'sJBXQeUn' \
    > test.out 2>&1
eval_tap $? 421 'PublicGetBackupCodesV4' test.out

#- 422 PublicGenerateBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op PublicGenerateBackupCodesV4 \
    --namespace $AB_NAMESPACE \
    --languageTag 'AZ2MY2vM' \
    > test.out 2>&1
eval_tap $? 422 'PublicGenerateBackupCodesV4' test.out

#- 423 PublicEnableBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op PublicEnableBackupCodesV4 \
    --namespace $AB_NAMESPACE \
    --languageTag 'vkLPRWKY' \
    > test.out 2>&1
eval_tap $? 423 'PublicEnableBackupCodesV4' test.out

#- 424 PublicChallengeMyMFAV4
$CLI_EXE \
    --sn iam \
    --op PublicChallengeMyMFAV4 \
    --namespace $AB_NAMESPACE \
    --code 'DHKgvrq5' \
    --factor 'ogbcF6Xu' \
    > test.out 2>&1
eval_tap $? 424 'PublicChallengeMyMFAV4' test.out

#- 425 PublicRemoveTrustedDeviceV4
$CLI_EXE \
    --sn iam \
    --op PublicRemoveTrustedDeviceV4 \
    --namespace $AB_NAMESPACE \
    --device_token '3jqYjFtP' \
    > test.out 2>&1
eval_tap $? 425 'PublicRemoveTrustedDeviceV4' test.out

#- 426 PublicSendMyMFAEmailCodeV4
$CLI_EXE \
    --sn iam \
    --op PublicSendMyMFAEmailCodeV4 \
    --namespace $AB_NAMESPACE \
    --action 'tVnLrMXw' \
    --languageTag '6nDToEsU' \
    > test.out 2>&1
eval_tap $? 426 'PublicSendMyMFAEmailCodeV4' test.out

#- 427 PublicDisableMyEmailV4
# body param: body
echo '{"factor": "Y6WSqH5Q", "mfaToken": "MZoiFhiE"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicDisableMyEmailV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 427 'PublicDisableMyEmailV4' test.out

#- 428 PublicEnableMyEmailV4
$CLI_EXE \
    --sn iam \
    --op PublicEnableMyEmailV4 \
    --namespace $AB_NAMESPACE \
    --code 'V1bc7STB' \
    > test.out 2>&1
eval_tap $? 428 'PublicEnableMyEmailV4' test.out

#- 429 PublicGetMyEnabledFactorsV4
$CLI_EXE \
    --sn iam \
    --op PublicGetMyEnabledFactorsV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 429 'PublicGetMyEnabledFactorsV4' test.out

#- 430 PublicMakeFactorMyDefaultV4
$CLI_EXE \
    --sn iam \
    --op PublicMakeFactorMyDefaultV4 \
    --namespace $AB_NAMESPACE \
    --factor '5Ipcke7b' \
    > test.out 2>&1
eval_tap $? 430 'PublicMakeFactorMyDefaultV4' test.out

#- 431 PublicGetMyOwnMFAStatusV4
$CLI_EXE \
    --sn iam \
    --op PublicGetMyOwnMFAStatusV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 431 'PublicGetMyOwnMFAStatusV4' test.out

#- 432 PublicGetMyMFAStatusV4
eval_tap 0 432 'PublicGetMyMFAStatusV4 # SKIP deprecated' test.out

#- 433 PublicGetUserPublicInfoByUserIdV4
$CLI_EXE \
    --sn iam \
    --op PublicGetUserPublicInfoByUserIdV4 \
    --namespace $AB_NAMESPACE \
    --userId 'cLGn3sqa' \
    > test.out 2>&1
eval_tap $? 433 'PublicGetUserPublicInfoByUserIdV4' test.out

#- 434 PublicInviteUserV4
# body param: body
echo '{"additionalData": "gjDALHbc", "emailAddress": "oKXFvPiO", "languageTag": "VvROfAHa", "namespace": "8CG87GC0", "namespaceDisplayName": "gdKzUVjc"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicInviteUserV4 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 434 'PublicInviteUserV4' test.out

#- 435 PublicUpgradeHeadlessWithCodeV4Forward
# body param: body
echo '{"acceptedPolicies": [{"isAccepted": false, "localizedPolicyVersionId": "BzkjfeVh", "policyId": "KhxuNvxC", "policyVersionId": "dgUkODSS"}, {"isAccepted": true, "localizedPolicyVersionId": "AdjbKtlR", "policyId": "T27KHzGG", "policyVersionId": "vo5syLMm"}, {"isAccepted": true, "localizedPolicyVersionId": "TXvJQA6W", "policyId": "rz7oQVc4", "policyVersionId": "IcODzGl8"}], "code": "EbjLkzHx", "country": "LeRk8FNj", "dateOfBirth": "MKyRiHt2", "displayName": "t1HtCusH", "emailAddress": "NMAAJ7nn", "password": "EJydRuR2", "reachMinimumAge": true, "uniqueDisplayName": "exYs3Qt3", "username": "5uj8Ie2a", "validateOnly": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpgradeHeadlessWithCodeV4Forward \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 435 'PublicUpgradeHeadlessWithCodeV4Forward' test.out


# remove artifacts
rm -f "$CLI_TOKEN_FILE"
rm -f "$TEMP_JSON_INPUT"
rm -f "$TEMP_FILE_UPLOAD"

exit $EXIT_CODE