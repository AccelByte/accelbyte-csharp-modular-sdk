#!/usr/bin/env bash

# Copyright (c) 2021 AccelByte Inc. All Rights Reserved.
# This is licensed software from AccelByte Inc, for limitations
# and restrictions contact your company contract manager.

# This code is generated by tool. DO NOT EDIT.

# Meta:
# - random seed: 
# - template file: 

# Instructions:
# - Run the Justice SDK Mock Server first before running this script.

export AB_BASE_URL="http://127.0.0.1:8080"
export AB_CLIENT_ID="admin"
export AB_CLIENT_SECRET="admin"
export AB_NAMESPACE="test"
export AB_APP_NAME="UnitTest"

EXIT_CODE=0

eval_tap() {
  if [ $1 -eq 0 ]; then
    echo "ok $2 - $3"
  else
    EXIT_CODE=1
    echo "not ok $2 - $3"
    sed 's/^/# /g' $4
  fi
  rm -f $4
}

CLI_EXE="AccelByte.Sdk.Sample.Cli"
CLI_TOKEN_FILE="$(dirname "$(which $CLI_EXE)")/token.json"
TEMP_JSON_INPUT="input_json.json"
TEMP_FILE_UPLOAD="file_upload.bin"

echo "TAP version 13"
echo "1..435"

#- 1 Login
$CLI_EXE --op login --lt user --user user --pass user > test.out 2>&1
eval_tap $? 1 'Login' test.out

if [ $EXIT_CODE -ne 0 ]; then
  echo "Bail out! Login failed."
  exit $EXIT_CODE
fi

# echo "foo" > "$CLI_TOKEN_FILE"

#- 2 GetBansType
eval_tap 0 2 'GetBansType # SKIP deprecated' test.out

#- 3 GetListBanReason
eval_tap 0 3 'GetListBanReason # SKIP deprecated' test.out

#- 4 GetClients
eval_tap 0 4 'GetClients # SKIP deprecated' test.out

#- 5 CreateClient
eval_tap 0 5 'CreateClient # SKIP deprecated' test.out

#- 6 GetClient
eval_tap 0 6 'GetClient # SKIP deprecated' test.out

#- 7 UpdateClient
eval_tap 0 7 'UpdateClient # SKIP deprecated' test.out

#- 8 DeleteClient
eval_tap 0 8 'DeleteClient # SKIP deprecated' test.out

#- 9 UpdateClientPermission
eval_tap 0 9 'UpdateClientPermission # SKIP deprecated' test.out

#- 10 AddClientPermission
eval_tap 0 10 'AddClientPermission # SKIP deprecated' test.out

#- 11 DeleteClientPermission
eval_tap 0 11 'DeleteClientPermission # SKIP deprecated' test.out

#- 12 UpdateClientSecret
eval_tap 0 12 'UpdateClientSecret # SKIP deprecated' test.out

#- 13 GetClientsbyNamespace
eval_tap 0 13 'GetClientsbyNamespace # SKIP deprecated' test.out

#- 14 CreateClientByNamespace
eval_tap 0 14 'CreateClientByNamespace # SKIP deprecated' test.out

#- 15 DeleteClientByNamespace
eval_tap 0 15 'DeleteClientByNamespace # SKIP deprecated' test.out

#- 16 CreateUser
eval_tap 0 16 'CreateUser # SKIP deprecated' test.out

#- 17 GetAdminUsersByRoleID
eval_tap 0 17 'GetAdminUsersByRoleID # SKIP deprecated' test.out

#- 18 GetUserByLoginID
eval_tap 0 18 'GetUserByLoginID # SKIP deprecated' test.out

#- 19 GetUserByPlatformUserID
eval_tap 0 19 'GetUserByPlatformUserID # SKIP deprecated' test.out

#- 20 ForgotPassword
eval_tap 0 20 'ForgotPassword # SKIP deprecated' test.out

#- 21 GetUsersByLoginIds
eval_tap 0 21 'GetUsersByLoginIds # SKIP deprecated' test.out

#- 22 ResetPassword
eval_tap 0 22 'ResetPassword # SKIP deprecated' test.out

#- 23 SearchUser
eval_tap 0 23 'SearchUser # SKIP deprecated' test.out

#- 24 GetUserByUserID
eval_tap 0 24 'GetUserByUserID # SKIP deprecated' test.out

#- 25 UpdateUser
eval_tap 0 25 'UpdateUser # SKIP deprecated' test.out

#- 26 DeleteUser
eval_tap 0 26 'DeleteUser # SKIP deprecated' test.out

#- 27 BanUser
eval_tap 0 27 'BanUser # SKIP deprecated' test.out

#- 28 GetUserBanHistory
eval_tap 0 28 'GetUserBanHistory # SKIP deprecated' test.out

#- 29 DisableUserBan
eval_tap 0 29 'DisableUserBan # SKIP deprecated' test.out

#- 30 EnableUserBan
eval_tap 0 30 'EnableUserBan # SKIP deprecated' test.out

#- 31 ListCrossNamespaceAccountLink
eval_tap 0 31 'ListCrossNamespaceAccountLink # SKIP deprecated' test.out

#- 32 DisableUser
eval_tap 0 32 'DisableUser # SKIP deprecated' test.out

#- 33 EnableUser
eval_tap 0 33 'EnableUser # SKIP deprecated' test.out

#- 34 GetUserInformation
eval_tap 0 34 'GetUserInformation # SKIP deprecated' test.out

#- 35 DeleteUserInformation
eval_tap 0 35 'DeleteUserInformation # SKIP deprecated' test.out

#- 36 GetUserLoginHistories
eval_tap 0 36 'GetUserLoginHistories # SKIP deprecated' test.out

#- 37 UpdatePassword
eval_tap 0 37 'UpdatePassword # SKIP deprecated' test.out

#- 38 SaveUserPermission
eval_tap 0 38 'SaveUserPermission # SKIP deprecated' test.out

#- 39 AddUserPermission
eval_tap 0 39 'AddUserPermission # SKIP deprecated' test.out

#- 40 DeleteUserPermission
eval_tap 0 40 'DeleteUserPermission # SKIP deprecated' test.out

#- 41 GetUserPlatformAccounts
eval_tap 0 41 'GetUserPlatformAccounts # SKIP deprecated' test.out

#- 42 GetUserMapping
eval_tap 0 42 'GetUserMapping # SKIP deprecated' test.out

#- 43 GetUserJusticePlatformAccount
eval_tap 0 43 'GetUserJusticePlatformAccount # SKIP deprecated' test.out

#- 44 PlatformLink
eval_tap 0 44 'PlatformLink # SKIP deprecated' test.out

#- 45 PlatformUnlink
eval_tap 0 45 'PlatformUnlink # SKIP deprecated' test.out

#- 46 GetPublisherUser
eval_tap 0 46 'GetPublisherUser # SKIP deprecated' test.out

#- 47 SaveUserRoles
eval_tap 0 47 'SaveUserRoles # SKIP deprecated' test.out

#- 48 AddUserRole
eval_tap 0 48 'AddUserRole # SKIP deprecated' test.out

#- 49 DeleteUserRole
eval_tap 0 49 'DeleteUserRole # SKIP deprecated' test.out

#- 50 UpgradeHeadlessAccount
eval_tap 0 50 'UpgradeHeadlessAccount # SKIP deprecated' test.out

#- 51 UpgradeHeadlessAccountWithVerificationCode
eval_tap 0 51 'UpgradeHeadlessAccountWithVerificationCode # SKIP deprecated' test.out

#- 52 UserVerification
eval_tap 0 52 'UserVerification # SKIP deprecated' test.out

#- 53 SendVerificationCode
eval_tap 0 53 'SendVerificationCode # SKIP deprecated' test.out

#- 54 Authorization
eval_tap 0 54 'Authorization # SKIP deprecated' test.out

#- 55 GetJWKS
eval_tap 0 55 'GetJWKS # SKIP deprecated' test.out

#- 56 PlatformTokenRequestHandler
eval_tap 0 56 'PlatformTokenRequestHandler # SKIP deprecated' test.out

#- 57 RevokeUser
eval_tap 0 57 'RevokeUser # SKIP deprecated' test.out

#- 58 GetRevocationList
eval_tap 0 58 'GetRevocationList # SKIP deprecated' test.out

#- 59 RevokeToken
eval_tap 0 59 'RevokeToken # SKIP deprecated' test.out

#- 60 RevokeAUser
eval_tap 0 60 'RevokeAUser # SKIP deprecated' test.out

#- 61 TokenGrant
eval_tap 0 61 'TokenGrant # SKIP deprecated' test.out

#- 62 VerifyToken
eval_tap 0 62 'VerifyToken # SKIP deprecated' test.out

#- 63 GetRoles
eval_tap 0 63 'GetRoles # SKIP deprecated' test.out

#- 64 CreateRole
eval_tap 0 64 'CreateRole # SKIP deprecated' test.out

#- 65 GetRole
eval_tap 0 65 'GetRole # SKIP deprecated' test.out

#- 66 UpdateRole
eval_tap 0 66 'UpdateRole # SKIP deprecated' test.out

#- 67 DeleteRole
eval_tap 0 67 'DeleteRole # SKIP deprecated' test.out

#- 68 GetRoleAdminStatus
eval_tap 0 68 'GetRoleAdminStatus # SKIP deprecated' test.out

#- 69 SetRoleAsAdmin
eval_tap 0 69 'SetRoleAsAdmin # SKIP deprecated' test.out

#- 70 RemoveRoleAdmin
eval_tap 0 70 'RemoveRoleAdmin # SKIP deprecated' test.out

#- 71 GetRoleManagers
eval_tap 0 71 'GetRoleManagers # SKIP deprecated' test.out

#- 72 AddRoleManagers
eval_tap 0 72 'AddRoleManagers # SKIP deprecated' test.out

#- 73 RemoveRoleManagers
eval_tap 0 73 'RemoveRoleManagers # SKIP deprecated' test.out

#- 74 GetRoleMembers
eval_tap 0 74 'GetRoleMembers # SKIP deprecated' test.out

#- 75 AddRoleMembers
eval_tap 0 75 'AddRoleMembers # SKIP deprecated' test.out

#- 76 RemoveRoleMembers
eval_tap 0 76 'RemoveRoleMembers # SKIP deprecated' test.out

#- 77 UpdateRolePermissions
eval_tap 0 77 'UpdateRolePermissions # SKIP deprecated' test.out

#- 78 AddRolePermission
eval_tap 0 78 'AddRolePermission # SKIP deprecated' test.out

#- 79 DeleteRolePermission
eval_tap 0 79 'DeleteRolePermission # SKIP deprecated' test.out

#- 80 AdminGetAgeRestrictionStatusV2
eval_tap 0 80 'AdminGetAgeRestrictionStatusV2 # SKIP deprecated' test.out

#- 81 AdminUpdateAgeRestrictionConfigV2
eval_tap 0 81 'AdminUpdateAgeRestrictionConfigV2 # SKIP deprecated' test.out

#- 82 GetListCountryAgeRestriction
eval_tap 0 82 'GetListCountryAgeRestriction # SKIP deprecated' test.out

#- 83 UpdateCountryAgeRestriction
eval_tap 0 83 'UpdateCountryAgeRestriction # SKIP deprecated' test.out

#- 84 AdminSearchUsersV2
eval_tap 0 84 'AdminSearchUsersV2 # SKIP deprecated' test.out

#- 85 AdminGetUserByUserIdV2
eval_tap 0 85 'AdminGetUserByUserIdV2 # SKIP deprecated' test.out

#- 86 AdminUpdateUserV2
eval_tap 0 86 'AdminUpdateUserV2 # SKIP deprecated' test.out

#- 87 AdminBanUserV2
eval_tap 0 87 'AdminBanUserV2 # SKIP deprecated' test.out

#- 88 AdminGetUserBanV2
eval_tap 0 88 'AdminGetUserBanV2 # SKIP deprecated' test.out

#- 89 AdminDisableUserV2
eval_tap 0 89 'AdminDisableUserV2 # SKIP deprecated' test.out

#- 90 AdminEnableUserV2
eval_tap 0 90 'AdminEnableUserV2 # SKIP deprecated' test.out

#- 91 AdminResetPasswordV2
eval_tap 0 91 'AdminResetPasswordV2 # SKIP deprecated' test.out

#- 92 AdminDeletePlatformLinkV2
eval_tap 0 92 'AdminDeletePlatformLinkV2 # SKIP deprecated' test.out

#- 93 AdminPutUserRolesV2
eval_tap 0 93 'AdminPutUserRolesV2 # SKIP deprecated' test.out

#- 94 AdminCreateUserRolesV2
eval_tap 0 94 'AdminCreateUserRolesV2 # SKIP deprecated' test.out

#- 95 PublicGetCountryAgeRestriction
eval_tap 0 95 'PublicGetCountryAgeRestriction # SKIP deprecated' test.out

#- 96 PublicCreateUserV2
eval_tap 0 96 'PublicCreateUserV2 # SKIP deprecated' test.out

#- 97 PublicForgotPasswordV2
eval_tap 0 97 'PublicForgotPasswordV2 # SKIP deprecated' test.out

#- 98 PublicResetPasswordV2
eval_tap 0 98 'PublicResetPasswordV2 # SKIP deprecated' test.out

#- 99 PublicGetUserByUserIDV2
eval_tap 0 99 'PublicGetUserByUserIDV2 # SKIP deprecated' test.out

#- 100 PublicUpdateUserV2
eval_tap 0 100 'PublicUpdateUserV2 # SKIP deprecated' test.out

#- 101 PublicGetUserBan
eval_tap 0 101 'PublicGetUserBan # SKIP deprecated' test.out

#- 102 PublicUpdatePasswordV2
eval_tap 0 102 'PublicUpdatePasswordV2 # SKIP deprecated' test.out

#- 103 GetListJusticePlatformAccounts
eval_tap 0 103 'GetListJusticePlatformAccounts # SKIP deprecated' test.out

#- 104 PublicPlatformLinkV2
eval_tap 0 104 'PublicPlatformLinkV2 # SKIP deprecated' test.out

#- 105 PublicDeletePlatformLinkV2
eval_tap 0 105 'PublicDeletePlatformLinkV2 # SKIP deprecated' test.out

#- 106 AdminGetBansTypeV3
$CLI_EXE \
    --sn iam \
    --op AdminGetBansTypeV3 \
    > test.out 2>&1
eval_tap $? 106 'AdminGetBansTypeV3' test.out

#- 107 AdminGetListBanReasonV3
$CLI_EXE \
    --sn iam \
    --op AdminGetListBanReasonV3 \
    > test.out 2>&1
eval_tap $? 107 'AdminGetListBanReasonV3' test.out

#- 108 AdminListClientAvailablePermissions
$CLI_EXE \
    --sn iam \
    --op AdminListClientAvailablePermissions \
    --excludePermissions 'false' \
    > test.out 2>&1
eval_tap $? 108 'AdminListClientAvailablePermissions' test.out

#- 109 AdminUpdateAvailablePermissionsByModule
# body param: body
echo '{"modules": [{"docLink": "AEDLZqbM", "groups": [{"group": "IeZzIu8L", "groupId": "gfExMn84", "permissions": [{"allowedActions": [71, 27, 14], "resource": "qmf0fumL"}, {"allowedActions": [48, 86, 7], "resource": "bWCSsm9l"}, {"allowedActions": [77, 33, 32], "resource": "ajjW4mZR"}]}, {"group": "Bny1WtN0", "groupId": "q91mNzaH", "permissions": [{"allowedActions": [57, 17, 60], "resource": "xUN0brYV"}, {"allowedActions": [47, 68, 18], "resource": "oK9fQvLX"}, {"allowedActions": [22, 0, 92], "resource": "12QWCmfd"}]}, {"group": "rcyGJu6j", "groupId": "HZKa91aa", "permissions": [{"allowedActions": [79, 64, 15], "resource": "BZ85pJgs"}, {"allowedActions": [70, 31, 22], "resource": "MLUpkcdK"}, {"allowedActions": [100, 53, 64], "resource": "ml03Aza9"}]}], "module": "WiVDZ5Jo", "moduleId": "H9FGOabw"}, {"docLink": "d6G3Km3J", "groups": [{"group": "SyQ8xRdb", "groupId": "BRIGq5Oo", "permissions": [{"allowedActions": [78, 20, 30], "resource": "vctkkDnQ"}, {"allowedActions": [33, 82, 11], "resource": "2HPX6nM6"}, {"allowedActions": [42, 69, 9], "resource": "x85s8C4M"}]}, {"group": "GjmBdLQw", "groupId": "XSue0N4a", "permissions": [{"allowedActions": [9, 13, 38], "resource": "7wVmV5P7"}, {"allowedActions": [18, 75, 64], "resource": "WzDgeSLh"}, {"allowedActions": [91, 34, 46], "resource": "znknohaI"}]}, {"group": "bJa9vWdQ", "groupId": "5BGTAK1z", "permissions": [{"allowedActions": [61, 12, 17], "resource": "UPSTC8At"}, {"allowedActions": [77, 83, 48], "resource": "LmBuNvD9"}, {"allowedActions": [39, 20, 44], "resource": "yDpfD6cR"}]}], "module": "DI22RS2p", "moduleId": "h9oh3wGH"}, {"docLink": "R6kusyZ1", "groups": [{"group": "0nEVXtz1", "groupId": "Ycgg40wg", "permissions": [{"allowedActions": [87, 74, 27], "resource": "GgKNdBwn"}, {"allowedActions": [13, 13, 4], "resource": "4q0PTaXz"}, {"allowedActions": [40, 44, 94], "resource": "Vt2YtWmG"}]}, {"group": "hQ27ZrJb", "groupId": "tErynpvh", "permissions": [{"allowedActions": [77, 90, 23], "resource": "PR7O6eqB"}, {"allowedActions": [13, 7, 75], "resource": "DjxOm9i0"}, {"allowedActions": [56, 33, 90], "resource": "RVghu8R8"}]}, {"group": "ndTAKSOA", "groupId": "MklzWamf", "permissions": [{"allowedActions": [26, 37, 78], "resource": "9pFGeE61"}, {"allowedActions": [50, 66, 51], "resource": "hcN9eVf9"}, {"allowedActions": [73, 80, 36], "resource": "4rMgXoDs"}]}], "module": "MpjOede5", "moduleId": "qGqvtU09"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateAvailablePermissionsByModule \
    --forceDelete 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 109 'AdminUpdateAvailablePermissionsByModule' test.out

#- 110 AdminDeleteConfigPermissionsByGroup
# body param: body
echo '{"groupId": "dboVl3I6", "moduleId": "UFnBTn8N"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDeleteConfigPermissionsByGroup \
    --forceDelete 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 110 'AdminDeleteConfigPermissionsByGroup' test.out

#- 111 AdminListClientTemplates
$CLI_EXE \
    --sn iam \
    --op AdminListClientTemplates \
    > test.out 2>&1
eval_tap $? 111 'AdminListClientTemplates' test.out

#- 112 AdminGetInputValidations
$CLI_EXE \
    --sn iam \
    --op AdminGetInputValidations \
    > test.out 2>&1
eval_tap $? 112 'AdminGetInputValidations' test.out

#- 113 AdminUpdateInputValidations
# body param: body
echo '[{"field": "o9rIQQYb", "validation": {"allowAllSpecialCharacters": false, "allowDigit": false, "allowLetter": true, "allowSpace": false, "allowUnicode": true, "avatarConfig": {"allowedPrefixes": ["dsx6TOWU", "JRo4JV2T", "YCZojbR6"], "preferRegex": true, "regex": "gWyrQgEW"}, "blockedWord": ["OpVD8YY5", "KlfoQ1St", "T7ShOu7c"], "description": [{"language": "Mo38Velk", "message": ["rDiAkp0s", "eXCAo97U", "kVz3bCLj"]}, {"language": "Uq3fcxCv", "message": ["idQZAYLn", "Q1JxMBL2", "m7W53arK"]}, {"language": "J1cOS5XH", "message": ["BKNH3ZUT", "p5PdJvNb", "lsGCGipM"]}], "isCustomRegex": false, "letterCase": "LsecSHZE", "maxLength": 33, "maxRepeatingAlphaNum": 29, "maxRepeatingSpecialCharacter": 10, "minCharType": 92, "minLength": 60, "profanityFilter": "DUrjvfxQ", "regex": "9qHXoEW2", "specialCharacterLocation": "jdgV62gQ", "specialCharacters": ["ohDJj6oZ", "iCDjx1xW", "9jPWx1JY"]}}, {"field": "dmg5rX5w", "validation": {"allowAllSpecialCharacters": false, "allowDigit": true, "allowLetter": true, "allowSpace": false, "allowUnicode": false, "avatarConfig": {"allowedPrefixes": ["fFc6h9yR", "k1Zw9L6O", "TETB9yXg"], "preferRegex": false, "regex": "4UQ1cBmY"}, "blockedWord": ["TV0I3z13", "o327hPEe", "KkQ1utbU"], "description": [{"language": "kTzggACN", "message": ["NNfLBWJc", "jQQPlqWj", "SJAlcZ78"]}, {"language": "cx0HKxIt", "message": ["RgIuJFjp", "7Ar9N1DH", "d0MvEfxc"]}, {"language": "tigc4f6I", "message": ["LXirN52e", "GLl7tfC4", "ynJ1tTjQ"]}], "isCustomRegex": false, "letterCase": "y5x27B74", "maxLength": 49, "maxRepeatingAlphaNum": 47, "maxRepeatingSpecialCharacter": 11, "minCharType": 79, "minLength": 53, "profanityFilter": "np5K1ndb", "regex": "TdlvlVqt", "specialCharacterLocation": "mxc0HsE7", "specialCharacters": ["boUduuPr", "sDgFTRos", "3uK3yVXG"]}}, {"field": "fmm4VDki", "validation": {"allowAllSpecialCharacters": true, "allowDigit": true, "allowLetter": false, "allowSpace": false, "allowUnicode": false, "avatarConfig": {"allowedPrefixes": ["kYDBrnAr", "9GvbuZzC", "ZYy9cOyL"], "preferRegex": true, "regex": "XRA9n61Z"}, "blockedWord": ["CLFvRTdN", "u7w8Z6OP", "nhqRJIHx"], "description": [{"language": "1FLEQOpP", "message": ["AfZfI5tZ", "OPOTLZSB", "rwZ5I9mn"]}, {"language": "B4NwdbaF", "message": ["vCyO4d7J", "1DcRT03K", "JBHebxz3"]}, {"language": "zh4qrnS3", "message": ["61Qywy2w", "Sz6hJIYd", "KSQ8OgxQ"]}], "isCustomRegex": true, "letterCase": "FdFrkIOP", "maxLength": 79, "maxRepeatingAlphaNum": 54, "maxRepeatingSpecialCharacter": 24, "minCharType": 98, "minLength": 0, "profanityFilter": "L1GlCcOi", "regex": "oyn80pMG", "specialCharacterLocation": "8qUpFZkV", "specialCharacters": ["QCuHLaFE", "jHQJak3h", "U4mH8pE3"]}}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateInputValidations \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 113 'AdminUpdateInputValidations' test.out

#- 114 AdminResetInputValidations
$CLI_EXE \
    --sn iam \
    --op AdminResetInputValidations \
    --field 'vn3I97N8' \
    > test.out 2>&1
eval_tap $? 114 'AdminResetInputValidations' test.out

#- 115 ListAdminsV3
$CLI_EXE \
    --sn iam \
    --op ListAdminsV3 \
    --namespace $AB_NAMESPACE \
    --after 'vmHW6sWj' \
    --before 'GIEpN55W' \
    --endDate 'yQcgNjeh' \
    --limit '24' \
    --query 'VXQu1FZ7' \
    --roleId 'jjK37MqN' \
    --startDate 'zAxoti27' \
    > test.out 2>&1
eval_tap $? 115 'ListAdminsV3' test.out

#- 116 AdminGetAgeRestrictionStatusV3
$CLI_EXE \
    --sn iam \
    --op AdminGetAgeRestrictionStatusV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 116 'AdminGetAgeRestrictionStatusV3' test.out

#- 117 AdminUpdateAgeRestrictionConfigV3
# body param: body
echo '{"ageRestriction": 2, "enable": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateAgeRestrictionConfigV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 117 'AdminUpdateAgeRestrictionConfigV3' test.out

#- 118 AdminGetListCountryAgeRestrictionV3
$CLI_EXE \
    --sn iam \
    --op AdminGetListCountryAgeRestrictionV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 118 'AdminGetListCountryAgeRestrictionV3' test.out

#- 119 AdminUpdateCountryAgeRestrictionV3
# body param: body
echo '{"ageRestriction": 34}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateCountryAgeRestrictionV3 \
    --countryCode 'ryzWOUHP' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 119 'AdminUpdateCountryAgeRestrictionV3' test.out

#- 120 AdminGetBannedUsersV3
$CLI_EXE \
    --sn iam \
    --op AdminGetBannedUsersV3 \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --banType 'kG00DOXX' \
    --limit '47' \
    --offset '74' \
    > test.out 2>&1
eval_tap $? 120 'AdminGetBannedUsersV3' test.out

#- 121 AdminBanUserBulkV3
# body param: body
echo '{"ban": "RF69oUsC", "comment": "ygv8AB7S", "endDate": "oGZjE2Lc", "reason": "94lhzUZR", "skipNotif": false, "userIds": ["at8phPkq", "qQ7PP1tT", "Y4vq67zy"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBanUserBulkV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 121 'AdminBanUserBulkV3' test.out

#- 122 AdminUnbanUserBulkV3
# body param: body
echo '{"bans": [{"banId": "C7AqYi5g", "userId": "Gxjp0FhS"}, {"banId": "OyS0ZIvW", "userId": "jpB060wx"}, {"banId": "e5Xb22Kz", "userId": "8Gukr2I3"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUnbanUserBulkV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 122 'AdminUnbanUserBulkV3' test.out

#- 123 AdminGetBansTypeWithNamespaceV3
$CLI_EXE \
    --sn iam \
    --op AdminGetBansTypeWithNamespaceV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 123 'AdminGetBansTypeWithNamespaceV3' test.out

#- 124 AdminGetClientsByNamespaceV3
$CLI_EXE \
    --sn iam \
    --op AdminGetClientsByNamespaceV3 \
    --namespace $AB_NAMESPACE \
    --clientId '8438IGwv' \
    --clientName 'JVicXcRb' \
    --clientType 'dx3NeX2l' \
    --limit '60' \
    --offset '47' \
    --skipLoginQueue 'false' \
    > test.out 2>&1
eval_tap $? 124 'AdminGetClientsByNamespaceV3' test.out

#- 125 AdminBulkUpdateClientsV3
# body param: body
echo '{"clientIds": ["65K4vxs1", "4aMFiXsm", "zEfuv3Uu"], "clientUpdateRequest": {"audiences": ["yrpqaAGg", "vDtrAcfW", "nnVPPDie"], "baseUri": "VnPYzUzX", "clientName": "s4TiNYjN", "clientPermissions": [{"action": 47, "resource": "d8I65fpF", "schedAction": 43, "schedCron": "vBsKoAmY", "schedRange": ["stWx4lIH", "8pBpCNmF", "W1iKHN9w"]}, {"action": 47, "resource": "ZIMWz2g4", "schedAction": 10, "schedCron": "MgBIHvgY", "schedRange": ["DxSgBIo3", "qeDHHVF3", "2tSZpQBg"]}, {"action": 57, "resource": "qTRLLLCp", "schedAction": 25, "schedCron": "U6gJs31G", "schedRange": ["nvm8KCC5", "t0pJyzqX", "j0XLdAOF"]}], "clientPlatform": "7fOEM8oc", "deletable": false, "description": "9AO7w9ez", "modulePermissions": [{"moduleId": "MhRZCmT7", "selectedGroups": [{"groupId": "NfmB1eBz", "selectedActions": [7, 33, 12]}, {"groupId": "XVhxhHel", "selectedActions": [56, 98, 37]}, {"groupId": "es2LXqQ9", "selectedActions": [88, 1, 13]}]}, {"moduleId": "1eBaxsAg", "selectedGroups": [{"groupId": "4SgkY7NW", "selectedActions": [73, 57, 39]}, {"groupId": "oTaDZNvL", "selectedActions": [91, 21, 35]}, {"groupId": "dZwcAgXX", "selectedActions": [58, 22, 27]}]}, {"moduleId": "c4jDo9MC", "selectedGroups": [{"groupId": "kg5EBhSZ", "selectedActions": [49, 25, 52]}, {"groupId": "lQizX5BJ", "selectedActions": [69, 52, 25]}, {"groupId": "b2G3Z18Z", "selectedActions": [79, 97, 82]}]}], "namespace": "Fld9go9P", "oauthAccessTokenExpiration": 63, "oauthAccessTokenExpirationTimeUnit": "W7sAqzVe", "oauthRefreshTokenExpiration": 3, "oauthRefreshTokenExpirationTimeUnit": "Ni39RJ5v", "redirectUri": "honvQrzY", "scopes": ["6P0Dri8t", "Xl2ujDQY", "3juXIBCn"], "skipLoginQueue": false, "twoFactorEnabled": true}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBulkUpdateClientsV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 125 'AdminBulkUpdateClientsV3' test.out

#- 126 AdminCreateClientV3
# body param: body
echo '{"audiences": ["U7nn8c04", "tWkwnaTM", "ZmI3TrW4"], "baseUri": "9JDzzFzO", "clientId": "ZpZWmYjX", "clientName": "qGvAlSoc", "clientPermissions": [{"action": 39, "resource": "07K0FcHR", "schedAction": 24, "schedCron": "hHr5qDXn", "schedRange": ["TbkKJPuj", "rUry1vXS", "OJzDtKZs"]}, {"action": 84, "resource": "sfvFspMC", "schedAction": 83, "schedCron": "rb9tmCyb", "schedRange": ["APlm3ugH", "O8rG83vD", "Xz5GUHkv"]}, {"action": 94, "resource": "C0m5rVZp", "schedAction": 84, "schedCron": "hnQjvaHS", "schedRange": ["8jIkaqBi", "e3ZB56lE", "bD18JXcT"]}], "clientPlatform": "oa7UQzBD", "deletable": false, "description": "q9gAikhY", "modulePermissions": [{"moduleId": "l7FWx5KF", "selectedGroups": [{"groupId": "YLrgpx8N", "selectedActions": [47, 38, 30]}, {"groupId": "GbU8pgD0", "selectedActions": [22, 47, 56]}, {"groupId": "E2WUGChK", "selectedActions": [74, 60, 100]}]}, {"moduleId": "iY2XUN6H", "selectedGroups": [{"groupId": "mwsrSHRd", "selectedActions": [15, 42, 58]}, {"groupId": "70USSx6g", "selectedActions": [22, 38, 28]}, {"groupId": "9i7SrvNQ", "selectedActions": [1, 10, 52]}]}, {"moduleId": "hUfQhvkf", "selectedGroups": [{"groupId": "vWppCjww", "selectedActions": [78, 66, 55]}, {"groupId": "NjD5QvSf", "selectedActions": [70, 17, 66]}, {"groupId": "4TyIfceH", "selectedActions": [2, 96, 77]}]}], "namespace": "uL0DqqQ3", "oauthAccessTokenExpiration": 22, "oauthAccessTokenExpirationTimeUnit": "nTx2TRk3", "oauthClientType": "cWOLU4s7", "oauthRefreshTokenExpiration": 24, "oauthRefreshTokenExpirationTimeUnit": "H9lP2zqK", "parentNamespace": "F9Uz5Oel", "redirectUri": "CsaWMgNT", "scopes": ["h8LKgcbn", "YNmGczkA", "N2Y2VWKi"], "secret": "bwNOgMLK", "skipLoginQueue": false, "twoFactorEnabled": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminCreateClientV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 126 'AdminCreateClientV3' test.out

#- 127 AdminGetClientsbyNamespacebyIDV3
$CLI_EXE \
    --sn iam \
    --op AdminGetClientsbyNamespacebyIDV3 \
    --clientId 'MpULhm91' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 127 'AdminGetClientsbyNamespacebyIDV3' test.out

#- 128 AdminDeleteClientV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteClientV3 \
    --clientId 'F7zK9126' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 128 'AdminDeleteClientV3' test.out

#- 129 AdminUpdateClientV3
# body param: body
echo '{"audiences": ["TcZDVE4u", "iotrEMKE", "YHivLfwz"], "baseUri": "5XpWbjrv", "clientName": "tQ2KbX93", "clientPermissions": [{"action": 92, "resource": "7nNoxY5z", "schedAction": 13, "schedCron": "LZDIdm2N", "schedRange": ["QnTTsu4K", "L3N1GB3S", "HKuf83ax"]}, {"action": 70, "resource": "Lt4AtTMg", "schedAction": 91, "schedCron": "YVsP1iMw", "schedRange": ["WW9Vki0n", "h0mYBJJ1", "vD143qTg"]}, {"action": 7, "resource": "b5zsft0K", "schedAction": 91, "schedCron": "gkq18Ifx", "schedRange": ["j37Qu2BF", "gOZUVh4I", "jVTGkeBk"]}], "clientPlatform": "8fk6mrQI", "deletable": false, "description": "ar5pEtR1", "modulePermissions": [{"moduleId": "AdHMnRa7", "selectedGroups": [{"groupId": "0jDtfFRd", "selectedActions": [87, 22, 94]}, {"groupId": "sEPQPHGM", "selectedActions": [62, 21, 39]}, {"groupId": "be3yxUqe", "selectedActions": [81, 73, 16]}]}, {"moduleId": "gRD5e79Y", "selectedGroups": [{"groupId": "E72tjvQe", "selectedActions": [0, 9, 54]}, {"groupId": "UuFFesMg", "selectedActions": [61, 15, 99]}, {"groupId": "A8w0g0hF", "selectedActions": [45, 49, 90]}]}, {"moduleId": "4baWwR6t", "selectedGroups": [{"groupId": "o38j9GHH", "selectedActions": [48, 34, 96]}, {"groupId": "g5jLswMf", "selectedActions": [65, 50, 93]}, {"groupId": "H9oQ3OPD", "selectedActions": [90, 21, 72]}]}], "namespace": "ZBtSnsfx", "oauthAccessTokenExpiration": 57, "oauthAccessTokenExpirationTimeUnit": "kAZNAyA0", "oauthRefreshTokenExpiration": 50, "oauthRefreshTokenExpirationTimeUnit": "RzzSaaJN", "redirectUri": "dBggXmMU", "scopes": ["G2BydhcL", "pWVhqp42", "pV3XHTZt"], "skipLoginQueue": true, "twoFactorEnabled": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateClientV3 \
    --clientId 'vHZZXUe6' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 129 'AdminUpdateClientV3' test.out

#- 130 AdminUpdateClientPermissionV3
# body param: body
echo '{"permissions": [{"action": 47, "resource": "xQtTXFyg"}, {"action": 80, "resource": "NuxeyA6O"}, {"action": 31, "resource": "Isx7Fi9B"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateClientPermissionV3 \
    --clientId 'PTGzg77q' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 130 'AdminUpdateClientPermissionV3' test.out

#- 131 AdminAddClientPermissionsV3
# body param: body
echo '{"permissions": [{"action": 53, "resource": "U2SHFvFZ"}, {"action": 38, "resource": "Ow6RSQKc"}, {"action": 4, "resource": "4K5Vxlrl"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddClientPermissionsV3 \
    --clientId 'C7UEVpUl' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 131 'AdminAddClientPermissionsV3' test.out

#- 132 AdminDeleteClientPermissionV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteClientPermissionV3 \
    --action '13' \
    --clientId 'NiE9Zn8B' \
    --namespace $AB_NAMESPACE \
    --resource 'BvEKjAkL' \
    > test.out 2>&1
eval_tap $? 132 'AdminDeleteClientPermissionV3' test.out

#- 133 AdminGetConfigValueV3
$CLI_EXE \
    --sn iam \
    --op AdminGetConfigValueV3 \
    --configKey 'mCKySHsJ' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 133 'AdminGetConfigValueV3' test.out

#- 134 AdminGetCountryListV3
$CLI_EXE \
    --sn iam \
    --op AdminGetCountryListV3 \
    --namespace $AB_NAMESPACE \
    --filterBlacklist 'true' \
    > test.out 2>&1
eval_tap $? 134 'AdminGetCountryListV3' test.out

#- 135 AdminGetCountryBlacklistV3
$CLI_EXE \
    --sn iam \
    --op AdminGetCountryBlacklistV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 135 'AdminGetCountryBlacklistV3' test.out

#- 136 AdminAddCountryBlacklistV3
# body param: body
echo '{"blacklist": ["RiX85Spr", "JKGyIttK", "Oe0o1AOz"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddCountryBlacklistV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 136 'AdminAddCountryBlacklistV3' test.out

#- 137 AdminGetLoginAllowlistV3
$CLI_EXE \
    --sn iam \
    --op AdminGetLoginAllowlistV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 137 'AdminGetLoginAllowlistV3' test.out

#- 138 AdminUpdateLoginAllowlistV3
# body param: body
echo '{"active": false, "roleIds": ["VP7dTv5G", "hZpxVg7i", "yP0ig3I3"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateLoginAllowlistV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 138 'AdminUpdateLoginAllowlistV3' test.out

#- 139 RetrieveAllThirdPartyLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op RetrieveAllThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 139 'RetrieveAllThirdPartyLoginPlatformCredentialV3' test.out

#- 140 RetrieveAllActiveThirdPartyLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op RetrieveAllActiveThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 140 'RetrieveAllActiveThirdPartyLoginPlatformCredentialV3' test.out

#- 141 RetrieveAllSSOLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op RetrieveAllSSOLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --limit '84' \
    --offset '97' \
    > test.out 2>&1
eval_tap $? 141 'RetrieveAllSSOLoginPlatformCredentialV3' test.out

#- 142 RetrieveThirdPartyLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op RetrieveThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'cHEtwArR' \
    > test.out 2>&1
eval_tap $? 142 'RetrieveThirdPartyLoginPlatformCredentialV3' test.out

#- 143 AddThirdPartyLoginPlatformCredentialV3
# body param: body
echo '{"ACSURL": "VqmaqEdO", "AWSCognitoRegion": "KU9G4ohj", "AWSCognitoUserPool": "f9ljXnWC", "AllowedClients": ["1S5qCgTv", "42kSFU1T", "xPwrm5VT"], "AppId": "L0oONMUI", "AuthorizationEndpoint": "JMIt5QO7", "ClientId": "xkQd6JIb", "EmptyStrFieldList": ["eXcU8ZPF", "prgJnlid", "EMKksbde"], "EnableServerLicenseValidation": false, "Environment": "rYvMRNyU", "FederationMetadataURL": "sHv5FHHx", "GenericOauthFlow": false, "IncludePUID": true, "IsActive": false, "Issuer": "0Yt2QyBI", "JWKSEndpoint": "2yrYngT4", "KeyID": "HWjaGpGS", "LogoURL": "FNVOKind", "NetflixCertificates": {"encryptedPrivateKey": "LFbBo3MH", "encryptedPrivateKeyName": "l1QA8VEo", "publicCertificate": "lIDguYxV", "publicCertificateName": "YC0nIoYP", "rootCertificate": "ClENWkW7", "rootCertificateName": "p5gO68qs"}, "OrganizationId": "umkBM7Tf", "PlatformName": "FbL6MZc1", "RedirectUri": "qMWKA6vO", "RegisteredDomains": [{"affectedClientIDs": ["bxaJyI7r", "SOsbRtFY", "ZfsNvmmM"], "domain": "CZptfXnM", "namespaces": ["LyShaDh9", "LWHzaaAl", "sLFNhEci"], "roleId": "c0A6Oof7", "ssoCfg": {"googleKey": {"DiRqKVp1": {}, "NMwJAPXm": {}, "3FAiNqly": {}}, "groupConfigs": [{"assignNamespaces": ["IGKTqzhN", "0vWMK0s3", "YV7ykH9D"], "group": "XuSkYSln", "roleId": "EU6Ua1Uy"}, {"assignNamespaces": ["4zpPvh9b", "u32KOcni", "SdUqgNPa"], "group": "UvLdxYg2", "roleId": "0XxiJveh"}, {"assignNamespaces": ["JOUpOYLU", "NRbVeKeO", "cdbKzSvj"], "group": "P8pbGqzp", "roleId": "WvtJMAdn"}]}}, {"affectedClientIDs": ["S6NjVOjO", "4XnfMB36", "7uyLlLYj"], "domain": "2OXlL1P2", "namespaces": ["w3Lhwuap", "mHBUef0g", "JWoE1ejX"], "roleId": "eCvZ0Uny", "ssoCfg": {"googleKey": {"y8bkJDr1": {}, "iBXZZNe0": {}, "0QuJicbh": {}}, "groupConfigs": [{"assignNamespaces": ["oI4cYFCd", "EEnz1ObQ", "aUZDwqf7"], "group": "EHmF6293", "roleId": "KA7kfZKj"}, {"assignNamespaces": ["BuVlLf29", "GTQHrx9e", "Oduex3On"], "group": "VHin5V33", "roleId": "7IIhRiQ3"}, {"assignNamespaces": ["j14fD0jC", "kKi61s43", "XOss8nA8"], "group": "fU7FQnPL", "roleId": "U0n7Gteq"}]}}, {"affectedClientIDs": ["M5OXGQRJ", "7qtohyl5", "0FXUmcMS"], "domain": "6GboH0ET", "namespaces": ["xLTeKY7T", "OIhDmQbz", "r5trmstc"], "roleId": "ztYzNeUD", "ssoCfg": {"googleKey": {"0wmoZwDk": {}, "TGnwuTI9": {}, "pZz14TLm": {}}, "groupConfigs": [{"assignNamespaces": ["qSbEMvyF", "YhXIwm6I", "75dMMK2z"], "group": "raItQhH6", "roleId": "6WSmzEfQ"}, {"assignNamespaces": ["DjNwPYnx", "73CofRmw", "jSADdqDW"], "group": "iYususfz", "roleId": "ldNXRiJc"}, {"assignNamespaces": ["roxnCoBR", "8kS9x7Yn", "kiDIUgie"], "group": "S6MSna61", "roleId": "dRAvrgUN"}]}}], "Secret": "gnNDIIbq", "TeamID": "wE39qu7B", "TokenAuthenticationType": "CrnxnQLj", "TokenClaimsMapping": {"G9mjOYdo": "koIEBv9V", "WgWQAA9t": "jYLHQKrF", "hX28j6rd": "hoW90y2M"}, "TokenEndpoint": "2cA8jbpO", "UserInfoEndpoint": "mLulpHdt", "UserInfoHTTPMethod": "xcQvreCR", "googleAdminConsoleKey": "DflTNFgR", "scopes": ["565HWX7U", "omgx0TAF", "RAh8rkaL"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AddThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --platformId '1mv3b0fq' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 143 'AddThirdPartyLoginPlatformCredentialV3' test.out

#- 144 DeleteThirdPartyLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op DeleteThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'InZApJrj' \
    > test.out 2>&1
eval_tap $? 144 'DeleteThirdPartyLoginPlatformCredentialV3' test.out

#- 145 UpdateThirdPartyLoginPlatformCredentialV3
# body param: body
echo '{"ACSURL": "BSNuve1t", "AWSCognitoRegion": "Zb6xVoOq", "AWSCognitoUserPool": "wipa1GAB", "AllowedClients": ["KWnTEJHD", "cAFmV7ns", "d5fYXnmi"], "AppId": "qfsiVypT", "AuthorizationEndpoint": "5pOAW59v", "ClientId": "6szW98RV", "EmptyStrFieldList": ["69gj2vue", "r809ZKGj", "fvH2AXSh"], "EnableServerLicenseValidation": false, "Environment": "NSDLgrW4", "FederationMetadataURL": "cYDHjcJh", "GenericOauthFlow": false, "IncludePUID": true, "IsActive": true, "Issuer": "68zdSp3g", "JWKSEndpoint": "a76suGJw", "KeyID": "4es4C9NR", "LogoURL": "fEeeEbGp", "NetflixCertificates": {"encryptedPrivateKey": "fzn3fveN", "encryptedPrivateKeyName": "luAcjuop", "publicCertificate": "KeH8CyPc", "publicCertificateName": "lI8s9E0E", "rootCertificate": "fv2yEyYG", "rootCertificateName": "ajDQAbVe"}, "OrganizationId": "UhkH8QPH", "PlatformName": "BZ6hCr34", "RedirectUri": "QevQHRI4", "RegisteredDomains": [{"affectedClientIDs": ["QS35keVM", "CR1ilePr", "zsky3FJj"], "domain": "0XdDXpAk", "namespaces": ["7QIWkWvd", "5B9mcIUF", "r8yNg7sN"], "roleId": "ifDZjjwl", "ssoCfg": {"googleKey": {"zRsWGfJv": {}, "Xo3Dyw65": {}, "FzTt0YPt": {}}, "groupConfigs": [{"assignNamespaces": ["wYdH6UD7", "BPfgn13H", "JovT3ZYU"], "group": "cGuANf4W", "roleId": "3qBOcfR9"}, {"assignNamespaces": ["yVrB74jU", "5d6KeV9V", "21jzEVIq"], "group": "iT0CwTC3", "roleId": "8KxXBlMy"}, {"assignNamespaces": ["bEA6X6tY", "LNDNrEeq", "duwuMze7"], "group": "9xJ9ma7o", "roleId": "vyBQdm83"}]}}, {"affectedClientIDs": ["srk1VDXU", "kDIzuowZ", "OWzj8TYH"], "domain": "MAiaI5Jw", "namespaces": ["V1Z0w3Z1", "FgIham37", "3ThLriWo"], "roleId": "ay5mrT42", "ssoCfg": {"googleKey": {"pcE5oxC2": {}, "gu54c31D": {}, "EaSXRVY5": {}}, "groupConfigs": [{"assignNamespaces": ["wTSE6s6Q", "eaSnpjPx", "qdpUjiyA"], "group": "0zFBkojK", "roleId": "3cgcpgz1"}, {"assignNamespaces": ["xKcScL8v", "9IIxu0wc", "lkaRz8av"], "group": "j5Sh1WN2", "roleId": "NDnuyVRM"}, {"assignNamespaces": ["HV5RrCoF", "R1WELmqS", "90jFI2NR"], "group": "PDCLWr7G", "roleId": "Wp8TkJ5f"}]}}, {"affectedClientIDs": ["Mim5rGwv", "cnd8H1um", "9WcjvFqT"], "domain": "GkRqt646", "namespaces": ["wfMQHsRd", "FauqNsRI", "R8A4IjmV"], "roleId": "FVBWCMRK", "ssoCfg": {"googleKey": {"eJpmhR2t": {}, "HeWB5vxd": {}, "qBljZcdW": {}}, "groupConfigs": [{"assignNamespaces": ["HNslwHH8", "Z9RR9D6V", "7il20Jym"], "group": "xBDh5AR5", "roleId": "A4RB3VrW"}, {"assignNamespaces": ["75JFa251", "mLirDuSH", "OmHNgb61"], "group": "x0emj9NW", "roleId": "B621RnjV"}, {"assignNamespaces": ["I3BLBcTc", "mKoABN0o", "fYmoPt6z"], "group": "CG8PoAhX", "roleId": "FRN5NfcF"}]}}], "Secret": "snISnXdG", "TeamID": "VxnqXWaa", "TokenAuthenticationType": "ZKEoDi1R", "TokenClaimsMapping": {"WAQIU6N2": "EiLgpOU6", "rMB2i5vw": "VBLOZaM2", "oomEds5B": "sr33gHTQ"}, "TokenEndpoint": "EZXtXSEA", "UserInfoEndpoint": "OD6gottA", "UserInfoHTTPMethod": "JUnKVUai", "googleAdminConsoleKey": "VkTaAtWd", "scopes": ["PUAjWyZD", "MiGXTkG2", "m7GZ1bCr"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op UpdateThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'tP2T3yp0' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 145 'UpdateThirdPartyLoginPlatformCredentialV3' test.out

#- 146 UpdateThirdPartyLoginPlatformDomainV3
# body param: body
echo '{"affectedClientIDs": ["81m0RZxW", "ljfXqYEE", "CFlW0n1V"], "assignedNamespaces": ["PqMVIAH8", "ruP6K7Fm", "RkVocDTq"], "domain": "vxLxPHba", "roleId": "i0W2Hd3j", "ssoCfg": {"googleKey": {"9d0dPkw8": {}, "vEyVgjEv": {}, "NqVGyIjP": {}}, "groupConfigs": [{"assignNamespaces": ["hw9au2cm", "ReR2RtIs", "7lEpRjWy"], "group": "uoMxrmPi", "roleId": "K89ltOtF"}, {"assignNamespaces": ["h3I0S0YL", "ncLI7Yhq", "GNkpSjnX"], "group": "BpE2l9HE", "roleId": "iYKhvimQ"}, {"assignNamespaces": ["mRvX6YHK", "OFpgE1az", "WlvQcT1p"], "group": "PMmfUwAX", "roleId": "XmryQIdi"}]}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op UpdateThirdPartyLoginPlatformDomainV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'gLsRnS3j' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 146 'UpdateThirdPartyLoginPlatformDomainV3' test.out

#- 147 DeleteThirdPartyLoginPlatformDomainV3
# body param: body
echo '{"domain": "3FCv2ZfS", "ssoGroups": ["TShfoIna", "WRv0QMdO", "kFIDTC9e"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op DeleteThirdPartyLoginPlatformDomainV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'gmCxghfz' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 147 'DeleteThirdPartyLoginPlatformDomainV3' test.out

#- 148 PartialUpdateThirdPartyLoginPlatformDomainV3
# body param: body
echo '{"affectedClientIDs": ["kFpl0Xfx", "sddYAScp", "UiXKyaxB"], "assignedNamespaces": ["1NkQPcFE", "PRO0cdMa", "BF6Sbx6e"], "domain": "lzisgjkC", "roleId": "FHnxGum0", "ssoCfg": {"googleKey": {"P0ylLo7I": {}, "J7vUvy5u": {}, "X1RQHPXR": {}}, "groupConfigs": [{"assignNamespaces": ["LeJIXyqD", "6tzfp28A", "q9o1YV5c"], "group": "I2GnBA9j", "roleId": "0egCaIzd"}, {"assignNamespaces": ["9es9VudY", "zKajdAHt", "jEdeaRYF"], "group": "soWGg4Lw", "roleId": "Ncbop4XK"}, {"assignNamespaces": ["69StHB0U", "Wf0b4UgQ", "9ri2wOOb"], "group": "7srMceCL", "roleId": "4XQgh88h"}]}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PartialUpdateThirdPartyLoginPlatformDomainV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'mAd8n57u' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 148 'PartialUpdateThirdPartyLoginPlatformDomainV3' test.out

#- 149 RetrieveSSOLoginPlatformCredential
$CLI_EXE \
    --sn iam \
    --op RetrieveSSOLoginPlatformCredential \
    --namespace $AB_NAMESPACE \
    --platformId '9FdAtl2Q' \
    > test.out 2>&1
eval_tap $? 149 'RetrieveSSOLoginPlatformCredential' test.out

#- 150 AddSSOLoginPlatformCredential
# body param: body
echo '{"acsUrl": "76J0PFzC", "apiKey": "OPi03xkt", "appId": "ErLy4cEz", "federationMetadataUrl": "oFZrrqoc", "isActive": true, "redirectUri": "EtYwy79G", "secret": "y0LWzLXw", "ssoUrl": "DjZpAcJ2"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AddSSOLoginPlatformCredential \
    --namespace $AB_NAMESPACE \
    --platformId 'c5kC8s7q' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 150 'AddSSOLoginPlatformCredential' test.out

#- 151 DeleteSSOLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op DeleteSSOLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'tBKVsJRS' \
    > test.out 2>&1
eval_tap $? 151 'DeleteSSOLoginPlatformCredentialV3' test.out

#- 152 UpdateSSOPlatformCredential
# body param: body
echo '{"acsUrl": "Ws3GmKKg", "apiKey": "bQ9ZvTnJ", "appId": "fPksVRbO", "federationMetadataUrl": "OqQ2sDul", "isActive": false, "redirectUri": "Z383b7Fk", "secret": "XRVmRgnN", "ssoUrl": "PuihTryU"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op UpdateSSOPlatformCredential \
    --namespace $AB_NAMESPACE \
    --platformId 'CFJOPXEG' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 152 'UpdateSSOPlatformCredential' test.out

#- 153 AdminListUserIDByPlatformUserIDsV3
# body param: body
echo '{"platformUserIds": ["pByxQRRB", "twiqYT6Y", "U057YNUp"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminListUserIDByPlatformUserIDsV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'ouvhi6Ez' \
    --rawPID 'false' \
    --rawPUID 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 153 'AdminListUserIDByPlatformUserIDsV3' test.out

#- 154 AdminGetUserByPlatformUserIDV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserByPlatformUserIDV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'itjVFO6x' \
    --platformUserId 'h2gIYtmv' \
    --pidType 'QECWT2e9' \
    > test.out 2>&1
eval_tap $? 154 'AdminGetUserByPlatformUserIDV3' test.out

#- 155 AdminGetProfileUpdateStrategyV3
$CLI_EXE \
    --sn iam \
    --op AdminGetProfileUpdateStrategyV3 \
    --namespace $AB_NAMESPACE \
    --field 'dob' \
    > test.out 2>&1
eval_tap $? 155 'AdminGetProfileUpdateStrategyV3' test.out

#- 156 AdminUpdateProfileUpdateStrategyV3
# body param: body
echo '{"config": {"minimumAllowedInterval": 42}, "type": "o4LjBXaq"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateProfileUpdateStrategyV3 \
    --namespace $AB_NAMESPACE \
    --field 'country' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 156 'AdminUpdateProfileUpdateStrategyV3' test.out

#- 157 AdminGetRoleOverrideConfigV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleOverrideConfigV3 \
    --namespace $AB_NAMESPACE \
    --identity 'GAME_ADMIN' \
    > test.out 2>&1
eval_tap $? 157 'AdminGetRoleOverrideConfigV3' test.out

#- 158 AdminUpdateRoleOverrideConfigV3
# body param: body
echo '{"additions": [{"actions": [1, 92, 85], "resource": "gC7AFflm"}, {"actions": [38, 76, 76], "resource": "0zdgAGyc"}, {"actions": [61, 29, 34], "resource": "A0kd1HYo"}], "exclusions": [{"actions": [18, 80, 36], "resource": "1CqwQpfM"}, {"actions": [1, 69, 98], "resource": "HsH4Wj3o"}, {"actions": [28, 51, 95], "resource": "ozGmPDKK"}], "overrides": [{"actions": [45, 24, 9], "resource": "7b8j3EV4"}, {"actions": [65, 50, 33], "resource": "40c5OYPd"}, {"actions": [84, 1, 86], "resource": "4BHG1Tpe"}], "replacements": [{"replacement": {"actions": [19, 0, 63], "resource": "XiwfPypW"}, "target": "GkwmjWCN"}, {"replacement": {"actions": [30, 41, 15], "resource": "zWwwcMWk"}, "target": "BE7ipsGD"}, {"replacement": {"actions": [28, 70, 96], "resource": "Piv2mmkI"}, "target": "C04lBuIn"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateRoleOverrideConfigV3 \
    --namespace $AB_NAMESPACE \
    --identity 'VIEW_ONLY' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 158 'AdminUpdateRoleOverrideConfigV3' test.out

#- 159 AdminGetRoleSourceV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleSourceV3 \
    --namespace $AB_NAMESPACE \
    --identity 'VIEW_ONLY' \
    > test.out 2>&1
eval_tap $? 159 'AdminGetRoleSourceV3' test.out

#- 160 AdminChangeRoleOverrideConfigStatusV3
# body param: body
echo '{"active": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminChangeRoleOverrideConfigStatusV3 \
    --namespace $AB_NAMESPACE \
    --identity 'GAME_ADMIN' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 160 'AdminChangeRoleOverrideConfigStatusV3' test.out

#- 161 AdminGetRoleNamespacePermissionV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleNamespacePermissionV3 \
    --namespace $AB_NAMESPACE \
    --roleId 'aKYi0MfG' \
    > test.out 2>&1
eval_tap $? 161 'AdminGetRoleNamespacePermissionV3' test.out

#- 162 GetAdminUsersByRoleIdV3
$CLI_EXE \
    --sn iam \
    --op GetAdminUsersByRoleIdV3 \
    --namespace $AB_NAMESPACE \
    --roleId 'iSpywpRv' \
    --after '27' \
    --before '44' \
    --limit '49' \
    > test.out 2>&1
eval_tap $? 162 'GetAdminUsersByRoleIdV3' test.out

#- 163 AdminQueryTagV3
$CLI_EXE \
    --sn iam \
    --op AdminQueryTagV3 \
    --namespace $AB_NAMESPACE \
    --limit '38' \
    --offset '76' \
    --tagName 'ks2rsS1s' \
    > test.out 2>&1
eval_tap $? 163 'AdminQueryTagV3' test.out

#- 164 AdminCreateTagV3
# body param: body
echo '{"tagName": "wjwb4dH2"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminCreateTagV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 164 'AdminCreateTagV3' test.out

#- 165 AdminUpdateTagV3
# body param: body
echo '{"tagName": "sei4PqLt"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateTagV3 \
    --namespace $AB_NAMESPACE \
    --tagId 'Q7ZqkYJP' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 165 'AdminUpdateTagV3' test.out

#- 166 AdminDeleteTagV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteTagV3 \
    --namespace $AB_NAMESPACE \
    --tagId 'KPjqOtiO' \
    > test.out 2>&1
eval_tap $? 166 'AdminDeleteTagV3' test.out

#- 167 AdminGetUserByEmailAddressV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserByEmailAddressV3 \
    --namespace $AB_NAMESPACE \
    --emailAddress 'bVgMmVry' \
    > test.out 2>&1
eval_tap $? 167 'AdminGetUserByEmailAddressV3' test.out

#- 168 AdminBulkUpdateUsersV3
# body param: body
echo '{"updateRequest": {"skipLoginQueue": true}, "userIds": ["6gUVl740", "P87GUXhA", "q32UTW1l"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBulkUpdateUsersV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 168 'AdminBulkUpdateUsersV3' test.out

#- 169 AdminGetBulkUserBanV3
# body param: body
echo '{"bulkUserId": ["F8XRIg6x", "8xIbcQNZ", "35SQn1Ve"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminGetBulkUserBanV3 \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --banType '0NRsZnIp' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 169 'AdminGetBulkUserBanV3' test.out

#- 170 AdminListUserIDByUserIDsV3
# body param: body
echo '{"findByPublisherNamespace": false, "userIds": ["WA3KiJxU", "46M7CcFN", "dqmwsOob"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminListUserIDByUserIDsV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 170 'AdminListUserIDByUserIDsV3' test.out

#- 171 AdminBulkGetUsersPlatform
# body param: body
echo '{"userIds": ["Wnc59UpV", "y0hhEFLF", "3JLEOSnk"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBulkGetUsersPlatform \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 171 'AdminBulkGetUsersPlatform' test.out

#- 172 AdminCursorGetUserV3
# body param: body
echo '{"cursor": {"cursorTime": "tbL7Wh9x", "userId": "AoU98nEm"}, "fields": ["m733k6zm", "2Pusnzar", "rMm5kSIm"], "limit": 48}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminCursorGetUserV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 172 'AdminCursorGetUserV3' test.out

#- 173 AdminInviteUserV3
# body param: body
echo '{"emailAddresses": ["5RHEn23H", "zl540jTd", "cG8xUZKI"], "isAdmin": true, "languageTag": "KDpmzL62", "namespace": "7YBZMoIj", "roles": ["BwdKoAla", "d4hNX9qy", "OzGBat4D"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminInviteUserV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 173 'AdminInviteUserV3' test.out

#- 174 AdminQueryThirdPlatformLinkHistoryV3
$CLI_EXE \
    --sn iam \
    --op AdminQueryThirdPlatformLinkHistoryV3 \
    --namespace $AB_NAMESPACE \
    --limit '74' \
    --offset '84' \
    --platformUserId 'RMwm1uFa' \
    --platformId 'h8nTCs6H' \
    > test.out 2>&1
eval_tap $? 174 'AdminQueryThirdPlatformLinkHistoryV3' test.out

#- 175 AdminListUsersV3
$CLI_EXE \
    --sn iam \
    --op AdminListUsersV3 \
    --namespace $AB_NAMESPACE \
    --limit '10' \
    --offset '93' \
    > test.out 2>&1
eval_tap $? 175 'AdminListUsersV3' test.out

#- 176 AdminSearchUserV3
$CLI_EXE \
    --sn iam \
    --op AdminSearchUserV3 \
    --namespace $AB_NAMESPACE \
    --by 'USXkNOa4' \
    --endDate 'X0azwbr2' \
    --includeTotal 'false' \
    --limit '32' \
    --offset '78' \
    --platformBy 'yAnlq2B9' \
    --platformId 'LZQNobl9' \
    --query '0D07cymL' \
    --roleIds 'mRO1c6W3' \
    --selectedFields '1FgQwRQm' \
    --skipLoginQueue 'true' \
    --startDate 'qLScwDrT' \
    --tagIds 'eO9bEAlK' \
    --testAccount 'true' \
    > test.out 2>&1
eval_tap $? 176 'AdminSearchUserV3' test.out

#- 177 AdminGetBulkUserByEmailAddressV3
# body param: body
echo '{"listEmailAddressRequest": ["xyGRmnHG", "uBO4A4Gp", "7uRRHCvn"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminGetBulkUserByEmailAddressV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 177 'AdminGetBulkUserByEmailAddressV3' test.out

#- 178 AdminGetUserByUserIdV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserByUserIdV3 \
    --namespace $AB_NAMESPACE \
    --userId 'fFc6eN6G' \
    > test.out 2>&1
eval_tap $? 178 'AdminGetUserByUserIdV3' test.out

#- 179 AdminUpdateUserV3
# body param: body
echo '{"avatarUrl": "oxakTFRm", "country": "UmZv6207", "dateOfBirth": "nfBa78f6", "displayName": "JHwYA0ag", "languageTag": "uekCfJIY", "skipLoginQueue": true, "tags": ["Ef8HBT1m", "hogsEc6l", "zRgrfgIh"], "uniqueDisplayName": "rCJY1qII", "userName": "yqNwBWyr"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserV3 \
    --namespace $AB_NAMESPACE \
    --userId 'IFqFhxo1' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 179 'AdminUpdateUserV3' test.out

#- 180 AdminGetUserBanV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserBanV3 \
    --namespace $AB_NAMESPACE \
    --userId '4NRM4iBI' \
    --activeOnly 'true' \
    --after 'UWzVfFWP' \
    --before 'LbPM1M0x' \
    --limit '82' \
    > test.out 2>&1
eval_tap $? 180 'AdminGetUserBanV3' test.out

#- 181 AdminBanUserV3
# body param: body
echo '{"ban": "8kvYdYiq", "comment": "8D0qPRmq", "endDate": "rJ03MSgt", "reason": "iYJcatpW", "skipNotif": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBanUserV3 \
    --namespace $AB_NAMESPACE \
    --userId 'U00VgB2A' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 181 'AdminBanUserV3' test.out

#- 182 AdminGetUserBanSummaryV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserBanSummaryV3 \
    --namespace $AB_NAMESPACE \
    --userId 'nJUqmBg4' \
    > test.out 2>&1
eval_tap $? 182 'AdminGetUserBanSummaryV3' test.out

#- 183 AdminUpdateUserBanV3
# body param: body
echo '{"enabled": true, "skipNotif": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserBanV3 \
    --banId '3oD9my8E' \
    --namespace $AB_NAMESPACE \
    --userId 'SBYKhOwp' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 183 'AdminUpdateUserBanV3' test.out

#- 184 AdminSendVerificationCodeV3
# body param: body
echo '{"context": "R3upjNqP", "emailAddress": "AKlzuQ81", "languageTag": "BrnVPkvw", "upgradeToken": "zQwBSimd"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminSendVerificationCodeV3 \
    --namespace $AB_NAMESPACE \
    --userId 'frMHofUS' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 184 'AdminSendVerificationCodeV3' test.out

#- 185 AdminVerifyAccountV3
# body param: body
echo '{"Code": "rMejc0L8", "ContactType": "h2OeAr2M", "LanguageTag": "RrkCeGpy", "validateOnly": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminVerifyAccountV3 \
    --namespace $AB_NAMESPACE \
    --userId 'joEWDLwq' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 185 'AdminVerifyAccountV3' test.out

#- 186 GetUserVerificationCode
$CLI_EXE \
    --sn iam \
    --op GetUserVerificationCode \
    --namespace $AB_NAMESPACE \
    --userId '962D4pBY' \
    > test.out 2>&1
eval_tap $? 186 'GetUserVerificationCode' test.out

#- 187 AdminGetUserDeletionStatusV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserDeletionStatusV3 \
    --namespace $AB_NAMESPACE \
    --userId 'j4o507uF' \
    > test.out 2>&1
eval_tap $? 187 'AdminGetUserDeletionStatusV3' test.out

#- 188 AdminUpdateUserDeletionStatusV3
# body param: body
echo '{"deletionDate": 94, "enabled": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserDeletionStatusV3 \
    --namespace $AB_NAMESPACE \
    --userId 'e3MO2dVI' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 188 'AdminUpdateUserDeletionStatusV3' test.out

#- 189 AdminListUserAllPlatformAccountsDistinctV3
$CLI_EXE \
    --sn iam \
    --op AdminListUserAllPlatformAccountsDistinctV3 \
    --namespace $AB_NAMESPACE \
    --userId '5CKqZ48C' \
    > test.out 2>&1
eval_tap $? 189 'AdminListUserAllPlatformAccountsDistinctV3' test.out

#- 190 AdminUpgradeHeadlessAccountV3
# body param: body
echo '{"code": "VsILlwtm", "country": "lECLWHWN", "dateOfBirth": "pJc2oIQY", "displayName": "Vh4qXjWq", "emailAddress": "5C0bNMrG", "password": "7df1w7RX", "uniqueDisplayName": "tvnCbxWD", "validateOnly": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpgradeHeadlessAccountV3 \
    --namespace $AB_NAMESPACE \
    --userId 'WVNEvPN3' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 190 'AdminUpgradeHeadlessAccountV3' test.out

#- 191 AdminDeleteUserInformationV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserInformationV3 \
    --namespace $AB_NAMESPACE \
    --userId 'DcLeBF6N' \
    > test.out 2>&1
eval_tap $? 191 'AdminDeleteUserInformationV3' test.out

#- 192 AdminGetUserLoginHistoriesV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserLoginHistoriesV3 \
    --namespace $AB_NAMESPACE \
    --userId 'ZYUIBmkQ' \
    --after '0.3051872795889343' \
    --before '0.4999469061418277' \
    --limit '0' \
    > test.out 2>&1
eval_tap $? 192 'AdminGetUserLoginHistoriesV3' test.out

#- 193 AdminResetPasswordV3
# body param: body
echo '{"languageTag": "dUpsaZfd", "mfaToken": "iSAebkwU", "newPassword": "JkqaGBKN", "oldPassword": "MBfNuOAs"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminResetPasswordV3 \
    --namespace $AB_NAMESPACE \
    --userId 'GkVZPzY1' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 193 'AdminResetPasswordV3' test.out

#- 194 AdminUpdateUserPermissionV3
# body param: body
echo '{"Permissions": [{"Action": 80, "Resource": "MbhSThPL", "SchedAction": 81, "SchedCron": "xbcrxGbz", "SchedRange": ["6iFTBsnu", "fpFZwzxN", "wAhhl3hb"]}, {"Action": 38, "Resource": "BRXJRBPW", "SchedAction": 9, "SchedCron": "bOYW8gVI", "SchedRange": ["iytwNPqD", "DzlCpmxh", "PER4C977"]}, {"Action": 3, "Resource": "0iWe88Vv", "SchedAction": 72, "SchedCron": "9CuOnMvi", "SchedRange": ["5OjUpZkz", "17KjkSru", "extzOhs5"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserPermissionV3 \
    --namespace $AB_NAMESPACE \
    --userId 'R2QU16FV' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 194 'AdminUpdateUserPermissionV3' test.out

#- 195 AdminAddUserPermissionsV3
# body param: body
echo '{"Permissions": [{"Action": 77, "Resource": "WVMDSH3A", "SchedAction": 79, "SchedCron": "GLvUfhUp", "SchedRange": ["Z7RXI23z", "1MxR9Uzu", "1aoFn8BU"]}, {"Action": 1, "Resource": "1yGV4Ap6", "SchedAction": 73, "SchedCron": "ZaQCWV9D", "SchedRange": ["MJyxinwM", "RicvDS5S", "nvpPjmYo"]}, {"Action": 68, "Resource": "fA6IZjse", "SchedAction": 11, "SchedCron": "MVHdlcUH", "SchedRange": ["LNlB7cPN", "bhEBDSpY", "ZYxy8fb7"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddUserPermissionsV3 \
    --namespace $AB_NAMESPACE \
    --userId 'sWxV1UFf' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 195 'AdminAddUserPermissionsV3' test.out

#- 196 AdminDeleteUserPermissionBulkV3
# body param: body
echo '[{"Action": 88, "Resource": "C5cMAWS4"}, {"Action": 72, "Resource": "kk0JnOiR"}, {"Action": 93, "Resource": "mM3bsJli"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserPermissionBulkV3 \
    --namespace $AB_NAMESPACE \
    --userId '6NQfAy35' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 196 'AdminDeleteUserPermissionBulkV3' test.out

#- 197 AdminDeleteUserPermissionV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserPermissionV3 \
    --action '3' \
    --namespace $AB_NAMESPACE \
    --resource 'HU3HkIpq' \
    --userId 'DAllfpvI' \
    > test.out 2>&1
eval_tap $? 197 'AdminDeleteUserPermissionV3' test.out

#- 198 AdminGetUserPlatformAccountsV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserPlatformAccountsV3 \
    --namespace $AB_NAMESPACE \
    --userId '9LTeVxAK' \
    --after 'YzYLCbRB' \
    --before 'SfjSPAVh' \
    --limit '48' \
    --platformId 'tULmJIyj' \
    --targetNamespace 'BvXEW5RK' \
    > test.out 2>&1
eval_tap $? 198 'AdminGetUserPlatformAccountsV3' test.out

#- 199 AdminListAllDistinctPlatformAccountsV3
$CLI_EXE \
    --sn iam \
    --op AdminListAllDistinctPlatformAccountsV3 \
    --namespace $AB_NAMESPACE \
    --userId 'uZ0VHZMG' \
    --status 'YAf91QgT' \
    > test.out 2>&1
eval_tap $? 199 'AdminListAllDistinctPlatformAccountsV3' test.out

#- 200 AdminGetListJusticePlatformAccounts
$CLI_EXE \
    --sn iam \
    --op AdminGetListJusticePlatformAccounts \
    --namespace $AB_NAMESPACE \
    --userId 'AAuDaEtz' \
    > test.out 2>&1
eval_tap $? 200 'AdminGetListJusticePlatformAccounts' test.out

#- 201 AdminGetUserMapping
$CLI_EXE \
    --sn iam \
    --op AdminGetUserMapping \
    --namespace $AB_NAMESPACE \
    --targetNamespace 'TqrKC78o' \
    --userId '2fsvAZKJ' \
    > test.out 2>&1
eval_tap $? 201 'AdminGetUserMapping' test.out

#- 202 AdminCreateJusticeUser
$CLI_EXE \
    --sn iam \
    --op AdminCreateJusticeUser \
    --namespace $AB_NAMESPACE \
    --targetNamespace 'JpwYIm3M' \
    --userId '4zvKqund' \
    > test.out 2>&1
eval_tap $? 202 'AdminCreateJusticeUser' test.out

#- 203 AdminLinkPlatformAccount
# body param: body
echo '{"platformId": "nw4eZtdU", "platformUserId": "g220oyaa"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminLinkPlatformAccount \
    --namespace $AB_NAMESPACE \
    --userId 'u5dQTPqs' \
    --skipConflict 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 203 'AdminLinkPlatformAccount' test.out

#- 204 AdminGetUserLinkHistoriesV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserLinkHistoriesV3 \
    --namespace $AB_NAMESPACE \
    --userId '8M4nb9AT' \
    --platformId '6DMFpQIL' \
    > test.out 2>&1
eval_tap $? 204 'AdminGetUserLinkHistoriesV3' test.out

#- 205 AdminPlatformUnlinkV3
eval_tap 0 205 'AdminPlatformUnlinkV3 # SKIP deprecated' test.out

#- 206 AdminPlatformUnlinkAllV3
$CLI_EXE \
    --sn iam \
    --op AdminPlatformUnlinkAllV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'gl2AUWrM' \
    --userId '4ZQiH964' \
    > test.out 2>&1
eval_tap $? 206 'AdminPlatformUnlinkAllV3' test.out

#- 207 AdminPlatformLinkV3
$CLI_EXE \
    --sn iam \
    --op AdminPlatformLinkV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'qsofcBna' \
    --userId 'mGBISCZS' \
    --ticket 'AwekoKRR' \
    > test.out 2>&1
eval_tap $? 207 'AdminPlatformLinkV3' test.out

#- 208 AdminDeleteUserLinkingHistoryByPlatformIDV3
eval_tap 0 208 'AdminDeleteUserLinkingHistoryByPlatformIDV3 # SKIP deprecated' test.out

#- 209 AdminDeleteUserLinkingRestrictionByPlatformIDV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserLinkingRestrictionByPlatformIDV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'fHWBlasB' \
    --userId '6iKsOoD3' \
    > test.out 2>&1
eval_tap $? 209 'AdminDeleteUserLinkingRestrictionByPlatformIDV3' test.out

#- 210 AdminGetThirdPartyPlatformTokenLinkStatusV3
$CLI_EXE \
    --sn iam \
    --op AdminGetThirdPartyPlatformTokenLinkStatusV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'zqipHoEO' \
    --userId 'mElgCnVB' \
    --platformToken '418LPqTv' \
    > test.out 2>&1
eval_tap $? 210 'AdminGetThirdPartyPlatformTokenLinkStatusV3' test.out

#- 211 AdminGetUserSinglePlatformAccount
$CLI_EXE \
    --sn iam \
    --op AdminGetUserSinglePlatformAccount \
    --namespace $AB_NAMESPACE \
    --platformId '8gIE22tM' \
    --userId 'X02tkzW3' \
    --crossNamespace 'true' \
    > test.out 2>&1
eval_tap $? 211 'AdminGetUserSinglePlatformAccount' test.out

#- 212 AdminDeleteUserRolesV3
# body param: body
echo '["qLkMwynP", "1SZcowfx", "pYWBEWNP"]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserRolesV3 \
    --namespace $AB_NAMESPACE \
    --userId 'KPsSjvGF' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 212 'AdminDeleteUserRolesV3' test.out

#- 213 AdminSaveUserRoleV3
# body param: body
echo '[{"namespace": "H25438A6", "roleId": "O6a4yBHD"}, {"namespace": "U7t4VLmG", "roleId": "GzTY5STQ"}, {"namespace": "onlbhwVX", "roleId": "YFogndsZ"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminSaveUserRoleV3 \
    --namespace $AB_NAMESPACE \
    --userId '5K5cdQCf' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 213 'AdminSaveUserRoleV3' test.out

#- 214 AdminAddUserRoleV3
$CLI_EXE \
    --sn iam \
    --op AdminAddUserRoleV3 \
    --namespace $AB_NAMESPACE \
    --roleId '8O4ApGJg' \
    --userId 'RNWU5ljn' \
    > test.out 2>&1
eval_tap $? 214 'AdminAddUserRoleV3' test.out

#- 215 AdminDeleteUserRoleV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserRoleV3 \
    --namespace $AB_NAMESPACE \
    --roleId 'CjjXVKtL' \
    --userId 't2jn4TDW' \
    > test.out 2>&1
eval_tap $? 215 'AdminDeleteUserRoleV3' test.out

#- 216 AdminGetUserStateByUserIdV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserStateByUserIdV3 \
    --namespace $AB_NAMESPACE \
    --userId 'o9C6fi8v' \
    > test.out 2>&1
eval_tap $? 216 'AdminGetUserStateByUserIdV3' test.out

#- 217 AdminUpdateUserStatusV3
# body param: body
echo '{"enabled": false, "reason": "jKeWDZnu"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserStatusV3 \
    --namespace $AB_NAMESPACE \
    --userId 'r7XLqdJu' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 217 'AdminUpdateUserStatusV3' test.out

#- 218 AdminTrustlyUpdateUserIdentity
# body param: body
echo '{"emailAddress": "k8heRSVM", "password": "HrqlWiUt"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminTrustlyUpdateUserIdentity \
    --namespace $AB_NAMESPACE \
    --userId 'MkpbgvFP' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 218 'AdminTrustlyUpdateUserIdentity' test.out

#- 219 AdminVerifyUserWithoutVerificationCodeV3
$CLI_EXE \
    --sn iam \
    --op AdminVerifyUserWithoutVerificationCodeV3 \
    --namespace $AB_NAMESPACE \
    --userId 'lyVoIiEw' \
    > test.out 2>&1
eval_tap $? 219 'AdminVerifyUserWithoutVerificationCodeV3' test.out

#- 220 AdminUpdateClientSecretV3
# body param: body
echo '{"newSecret": "ENRONMkB"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateClientSecretV3 \
    --clientId 'ITndpCCD' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 220 'AdminUpdateClientSecretV3' test.out

#- 221 AdminCheckThirdPartyLoginPlatformAvailabilityV3
$CLI_EXE \
    --sn iam \
    --op AdminCheckThirdPartyLoginPlatformAvailabilityV3 \
    --platformId 'C23KBSn0' \
    > test.out 2>&1
eval_tap $? 221 'AdminCheckThirdPartyLoginPlatformAvailabilityV3' test.out

#- 222 AdminGetRolesV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRolesV3 \
    --after 'YI4cosoa' \
    --before 'rZkY3q2b' \
    --isWildcard 'true' \
    --limit '12' \
    > test.out 2>&1
eval_tap $? 222 'AdminGetRolesV3' test.out

#- 223 AdminCreateRoleV3
# body param: body
echo '{"adminRole": false, "deletable": true, "isWildcard": true, "managers": [{"displayName": "AkZIzQvI", "namespace": "hTWWklLL", "userId": "ygtHA2l2"}, {"displayName": "terLdNfp", "namespace": "c3yA6h7R", "userId": "keDIOARW"}, {"displayName": "ws93Svfp", "namespace": "54XSJTSZ", "userId": "YcpjTEK4"}], "members": [{"displayName": "Fmy9vwzh", "namespace": "SMmEwPRT", "userId": "3pdMk7Sj"}, {"displayName": "gwrqGHZ9", "namespace": "y5dZWEu1", "userId": "aQ3lSHoi"}, {"displayName": "PszrsX7Y", "namespace": "GjedpOoH", "userId": "j97r2VRJ"}], "permissions": [{"action": 44, "resource": "3lWPB5Je", "schedAction": 11, "schedCron": "OpZZ0GWr", "schedRange": ["aV3b6b2X", "474HDDPx", "G8DTLXzb"]}, {"action": 95, "resource": "krhXs5A8", "schedAction": 4, "schedCron": "iAFkfYy0", "schedRange": ["S2k2Qcpn", "EYas2WbJ", "xJ6rCkuN"]}, {"action": 100, "resource": "V2LhQnpJ", "schedAction": 93, "schedCron": "rX5S2G5W", "schedRange": ["S6a1qVZW", "iOaQzZej", "twHswGNb"]}], "roleName": "a9bmpY7B"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminCreateRoleV3 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 223 'AdminCreateRoleV3' test.out

#- 224 AdminGetRoleV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleV3 \
    --roleId 'hHh6egwO' \
    > test.out 2>&1
eval_tap $? 224 'AdminGetRoleV3' test.out

#- 225 AdminDeleteRoleV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteRoleV3 \
    --roleId 'oE51559V' \
    > test.out 2>&1
eval_tap $? 225 'AdminDeleteRoleV3' test.out

#- 226 AdminUpdateRoleV3
# body param: body
echo '{"deletable": false, "isWildcard": true, "roleName": "EVzeGevd"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateRoleV3 \
    --roleId 'LxcArfle' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 226 'AdminUpdateRoleV3' test.out

#- 227 AdminGetRoleAdminStatusV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleAdminStatusV3 \
    --roleId 'IOtpitMl' \
    > test.out 2>&1
eval_tap $? 227 'AdminGetRoleAdminStatusV3' test.out

#- 228 AdminUpdateAdminRoleStatusV3
$CLI_EXE \
    --sn iam \
    --op AdminUpdateAdminRoleStatusV3 \
    --roleId '3lsJfUUB' \
    > test.out 2>&1
eval_tap $? 228 'AdminUpdateAdminRoleStatusV3' test.out

#- 229 AdminRemoveRoleAdminV3
$CLI_EXE \
    --sn iam \
    --op AdminRemoveRoleAdminV3 \
    --roleId 'ZT3yrM95' \
    > test.out 2>&1
eval_tap $? 229 'AdminRemoveRoleAdminV3' test.out

#- 230 AdminGetRoleManagersV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleManagersV3 \
    --roleId 'PgC709Za' \
    --after 'j4AMHnDR' \
    --before '8JCEg3iJ' \
    --limit '91' \
    > test.out 2>&1
eval_tap $? 230 'AdminGetRoleManagersV3' test.out

#- 231 AdminAddRoleManagersV3
# body param: body
echo '{"managers": [{"displayName": "Si91RaVL", "namespace": "pFnlghGV", "userId": "u43rkHZz"}, {"displayName": "xhpy2VVI", "namespace": "X6hBGKO4", "userId": "KTxwSFvF"}, {"displayName": "Weh0096d", "namespace": "p5YPjM09", "userId": "OZzD0uZ8"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddRoleManagersV3 \
    --roleId 'gcvw2yY6' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 231 'AdminAddRoleManagersV3' test.out

#- 232 AdminRemoveRoleManagersV3
# body param: body
echo '{"managers": [{"displayName": "PDLyRLwR", "namespace": "FVR1rADP", "userId": "D0LxMx10"}, {"displayName": "rTaWrJ4Q", "namespace": "xp3m6Dvh", "userId": "Lhm6SG0e"}, {"displayName": "Q9OYTYJy", "namespace": "fLVGoqf3", "userId": "xNdvzkDa"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminRemoveRoleManagersV3 \
    --roleId 'SykRRORe' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 232 'AdminRemoveRoleManagersV3' test.out

#- 233 AdminGetRoleMembersV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleMembersV3 \
    --roleId 'WWM7E5fA' \
    --after 'e1qDeMvk' \
    --before '7JAlBKEA' \
    --limit '67' \
    > test.out 2>&1
eval_tap $? 233 'AdminGetRoleMembersV3' test.out

#- 234 AdminAddRoleMembersV3
# body param: body
echo '{"members": [{"displayName": "Rlylojx8", "namespace": "5q040zlm", "userId": "kTbD43TV"}, {"displayName": "KOcyFgMM", "namespace": "s4hxxGKq", "userId": "bem6S4wW"}, {"displayName": "MTcn7siU", "namespace": "xqPYMfdS", "userId": "01Idcl9v"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddRoleMembersV3 \
    --roleId 'Rgkkclra' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 234 'AdminAddRoleMembersV3' test.out

#- 235 AdminRemoveRoleMembersV3
eval_tap 0 235 'AdminRemoveRoleMembersV3 # SKIP deprecated' test.out

#- 236 AdminUpdateRolePermissionsV3
# body param: body
echo '{"permissions": [{"action": 24, "resource": "Ni0Y2tj9", "schedAction": 92, "schedCron": "TYwFwr5v", "schedRange": ["zQMLeoC1", "JVF65Gzu", "kQwXomKZ"]}, {"action": 18, "resource": "BDoc9Vdt", "schedAction": 83, "schedCron": "DsRwQ2S0", "schedRange": ["6Bwy2FjU", "EuJ3Qxm3", "QLx7fWsF"]}, {"action": 100, "resource": "dpfNRMLJ", "schedAction": 13, "schedCron": "BqaZPuZL", "schedRange": ["Gubq3aVT", "hn3qrnXT", "Yij9BHgU"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateRolePermissionsV3 \
    --roleId '8K2TbYO0' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 236 'AdminUpdateRolePermissionsV3' test.out

#- 237 AdminAddRolePermissionsV3
# body param: body
echo '{"permissions": [{"action": 28, "resource": "K9Esj4pW", "schedAction": 53, "schedCron": "NuZZlT3T", "schedRange": ["Xylfi1N5", "W5oxJrcP", "q04GyIdM"]}, {"action": 9, "resource": "WBmqlV1P", "schedAction": 78, "schedCron": "HVtdDiUJ", "schedRange": ["oW2Ocsxd", "EV0yy7h5", "xMfDc5Lg"]}, {"action": 69, "resource": "DWfBk68l", "schedAction": 6, "schedCron": "fgpoTUIH", "schedRange": ["9BuCkovK", "w49BF3uX", "pwcrANlQ"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddRolePermissionsV3 \
    --roleId 'rZ7Ohj9m' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 237 'AdminAddRolePermissionsV3' test.out

#- 238 AdminDeleteRolePermissionsV3
# body param: body
echo '["httdxEfY", "FqB4zTfF", "qXkjzRpa"]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDeleteRolePermissionsV3 \
    --roleId 'tdaDlm82' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 238 'AdminDeleteRolePermissionsV3' test.out

#- 239 AdminDeleteRolePermissionV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteRolePermissionV3 \
    --action '69' \
    --resource 'etNoIx6E' \
    --roleId 'c1E6FNjC' \
    > test.out 2>&1
eval_tap $? 239 'AdminDeleteRolePermissionV3' test.out

#- 240 AdminGetMyUserV3
$CLI_EXE \
    --sn iam \
    --op AdminGetMyUserV3 \
    > test.out 2>&1
eval_tap $? 240 'AdminGetMyUserV3' test.out

#- 241 UserAuthenticationV3
$CLI_EXE \
    --sn iam \
    --op UserAuthenticationV3 \
    --client_id '2WMZd8i6' \
    --extend_exp 'true' \
    --redirect_uri '2UJXdMub' \
    --password 'yKeu3q74' \
    --request_id '2oEvjwIR' \
    --user_name 'UrJuaoJl' \
    > test.out 2>&1
eval_tap $? 241 'UserAuthenticationV3' test.out

#- 242 AuthenticationWithPlatformLinkV3
$CLI_EXE \
    --sn iam \
    --op AuthenticationWithPlatformLinkV3 \
    --extend_exp 'true' \
    --client_id '4UdukGuy' \
    --linkingToken 'XDb9Dh7Q' \
    --password 'B7CjhPPk' \
    --username 'jpsEJKqe' \
    > test.out 2>&1
eval_tap $? 242 'AuthenticationWithPlatformLinkV3' test.out

#- 243 AuthenticateAndLinkForwardV3
$CLI_EXE \
    --sn iam \
    --op AuthenticateAndLinkForwardV3 \
    --extend_exp 'true' \
    --client_id 'akTTWHnW' \
    --linkingToken 'cy2VktIF' \
    --password 'Qpu8Op6H' \
    --username '7AWoheqU' \
    > test.out 2>&1
eval_tap $? 243 'AuthenticateAndLinkForwardV3' test.out

#- 244 PublicGetSystemConfigV3
$CLI_EXE \
    --sn iam \
    --op PublicGetSystemConfigV3 \
    > test.out 2>&1
eval_tap $? 244 'PublicGetSystemConfigV3' test.out

#- 245 GenerateTokenByNewHeadlessAccountV3
$CLI_EXE \
    --sn iam \
    --op GenerateTokenByNewHeadlessAccountV3 \
    --additionalData 'kglEzqAs' \
    --extend_exp 'false' \
    --linkingToken 'KP0IJ2lV' \
    > test.out 2>&1
eval_tap $? 245 'GenerateTokenByNewHeadlessAccountV3' test.out

#- 246 RequestOneTimeLinkingCodeV3
$CLI_EXE \
    --sn iam \
    --op RequestOneTimeLinkingCodeV3 \
    --redirectUri 'ROJdog8c' \
    --state 'LUerQx7g' \
    --platformId 'nptCwXBS' \
    > test.out 2>&1
eval_tap $? 246 'RequestOneTimeLinkingCodeV3' test.out

#- 247 ValidateOneTimeLinkingCodeV3
$CLI_EXE \
    --sn iam \
    --op ValidateOneTimeLinkingCodeV3 \
    --oneTimeLinkCode 'Sm8NKm9O' \
    > test.out 2>&1
eval_tap $? 247 'ValidateOneTimeLinkingCodeV3' test.out

#- 248 RequestTokenByOneTimeLinkCodeResponseV3
$CLI_EXE \
    --sn iam \
    --op RequestTokenByOneTimeLinkCodeResponseV3 \
    --additionalData 'PoY22clq' \
    --isTransient 'false' \
    --client_id 'LGGadN5w' \
    --oneTimeLinkCode 'NIe0Yibu' \
    > test.out 2>&1
eval_tap $? 248 'RequestTokenByOneTimeLinkCodeResponseV3' test.out

#- 249 GetCountryLocationV3
$CLI_EXE \
    --sn iam \
    --op GetCountryLocationV3 \
    > test.out 2>&1
eval_tap $? 249 'GetCountryLocationV3' test.out

#- 250 Logout
$CLI_EXE \
    --sn iam \
    --op Logout \
    > test.out 2>&1
eval_tap $? 250 'Logout' test.out

#- 251 RequestTokenExchangeCodeV3
$CLI_EXE \
    --sn iam \
    --op RequestTokenExchangeCodeV3 \
    --namespace $AB_NAMESPACE \
    --codeChallenge 'gNemhjGd' \
    --codeChallengeMethod 'S256' \
    --client_id 'ClAcMVl1' \
    > test.out 2>&1
eval_tap $? 251 'RequestTokenExchangeCodeV3' test.out

#- 252 AdminRetrieveUserThirdPartyPlatformTokenV3
$CLI_EXE \
    --sn iam \
    --op AdminRetrieveUserThirdPartyPlatformTokenV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'dGrut02h' \
    --userId '5TQ6uFmA' \
    --platformUserId 'VfskuRre' \
    > test.out 2>&1
eval_tap $? 252 'AdminRetrieveUserThirdPartyPlatformTokenV3' test.out

#- 253 RevokeUserV3
$CLI_EXE \
    --sn iam \
    --op RevokeUserV3 \
    --namespace $AB_NAMESPACE \
    --userId '0KqbltlD' \
    --includeGameNamespace 'false' \
    > test.out 2>&1
eval_tap $? 253 'RevokeUserV3' test.out

#- 254 AuthorizeV3
$CLI_EXE \
    --sn iam \
    --op AuthorizeV3 \
    --blockedPlatformId 'EZKMSlFi' \
    --codeChallenge 'CAv4a8EY' \
    --codeChallengeMethod 'plain' \
    --createHeadless 'false' \
    --loginWebBased 'true' \
    --nonce 'pOTgpIvx' \
    --oneTimeLinkCode 'xQLZOZx1' \
    --redirectUri 'cy96YU2Z' \
    --scope 'MatBLKxb' \
    --state 'mNDWDKw4' \
    --targetAuthPage 'bkvMPS5Y' \
    --useRedirectUriAsLoginUrlWhenLocked 'true' \
    --clientId 'vGGAWnxj' \
    --responseType 'code' \
    > test.out 2>&1
eval_tap $? 254 'AuthorizeV3' test.out

#- 255 TokenIntrospectionV3
$CLI_EXE \
    --sn iam \
    --op TokenIntrospectionV3 \
    --token '6EAS18dm' \
    > test.out 2>&1
eval_tap $? 255 'TokenIntrospectionV3' test.out

#- 256 GetJWKSV3
$CLI_EXE \
    --sn iam \
    --op GetJWKSV3 \
    > test.out 2>&1
eval_tap $? 256 'GetJWKSV3' test.out

#- 257 SendMFAAuthenticationCode
$CLI_EXE \
    --sn iam \
    --op SendMFAAuthenticationCode \
    --clientId '8XkcBZsN' \
    --factor 'zbEUPgyV' \
    --mfaToken 'ZzZBuMSE' \
    > test.out 2>&1
eval_tap $? 257 'SendMFAAuthenticationCode' test.out

#- 258 Change2faMethod
$CLI_EXE \
    --sn iam \
    --op Change2faMethod \
    --factor 'O1AuwenH' \
    --mfaToken 'zPv5wddz' \
    > test.out 2>&1
eval_tap $? 258 'Change2faMethod' test.out

#- 259 Verify2faCode
$CLI_EXE \
    --sn iam \
    --op Verify2faCode \
    --code 'pqaeVaSO' \
    --factor 'kc8SThWp' \
    --mfaToken 'bGiQREkg' \
    --rememberDevice 'true' \
    > test.out 2>&1
eval_tap $? 259 'Verify2faCode' test.out

#- 260 Verify2faCodeForward
$CLI_EXE \
    --sn iam \
    --op Verify2faCodeForward \
    --defaultFactor 'rO9fXdEM' \
    --factors 'l5X1IAbF' \
    --rememberDevice 'true' \
    --clientId 'VjOhfslz' \
    --code '0t9x9Jw0' \
    --factor '2A3ubUZ8' \
    --mfaToken 'aQrxuqJb' \
    > test.out 2>&1
eval_tap $? 260 'Verify2faCodeForward' test.out

#- 261 RetrieveUserThirdPartyPlatformTokenV3
$CLI_EXE \
    --sn iam \
    --op RetrieveUserThirdPartyPlatformTokenV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'eD88Ndf5' \
    --userId 'u8RUDroe' \
    > test.out 2>&1
eval_tap $? 261 'RetrieveUserThirdPartyPlatformTokenV3' test.out

#- 262 AuthCodeRequestV3
$CLI_EXE \
    --sn iam \
    --op AuthCodeRequestV3 \
    --platformId 'S5bYpMG5' \
    --clientId 'lWTFFZ1s' \
    --redirectUri '5vlp1mMs' \
    --requestId 'eBXKQ8pm' \
    > test.out 2>&1
eval_tap $? 262 'AuthCodeRequestV3' test.out

#- 263 PlatformTokenGrantV3
$CLI_EXE \
    --sn iam \
    --op PlatformTokenGrantV3 \
    --platformId 'vpluhcNw' \
    --additionalData 'EG06f8Cg' \
    --client_id 'SA446l06' \
    --createHeadless 'true' \
    --device_id 'T5zMaiEo' \
    --macAddress 'UqHdu1EE' \
    --platform_token 'pvOF9n7A' \
    --serviceLabel '0.5705479776042173' \
    --skipSetCookie 'false' \
    > test.out 2>&1
eval_tap $? 263 'PlatformTokenGrantV3' test.out

#- 264 GetRevocationListV3
$CLI_EXE \
    --sn iam \
    --op GetRevocationListV3 \
    > test.out 2>&1
eval_tap $? 264 'GetRevocationListV3' test.out

#- 265 TokenRevocationV3
$CLI_EXE \
    --sn iam \
    --op TokenRevocationV3 \
    --token 'y5YVdNDn' \
    > test.out 2>&1
eval_tap $? 265 'TokenRevocationV3' test.out

#- 266 SimultaneousLoginV3
$CLI_EXE \
    --sn iam \
    --op SimultaneousLoginV3 \
    --simultaneousPlatform '29a3IlYY' \
    --simultaneousTicket 'cDoq7LtX' \
    --nativePlatform 'steam' \
    --nativePlatformTicket 'SwTxfhTt' \
    > test.out 2>&1
eval_tap $? 266 'SimultaneousLoginV3' test.out

#- 267 TokenGrantV3
$CLI_EXE \
    --sn iam \
    --op TokenGrantV3 \
    --additionalData 'nuDoy019' \
    --client_id 'jpkhnxO7' \
    --client_secret 'Wmk5HXZt' \
    --code 'rbL4evVe' \
    --code_verifier '7yUwM6ZP' \
    --extendNamespace 'U35Ay3s7' \
    --extend_exp 'true' \
    --password 'f2knm8pd' \
    --redirect_uri 'GDL3DZnN' \
    --refresh_token 'fKMR1AkU' \
    --scope 'vPFkMQhC' \
    --username 'o6QsvwtY' \
    --grant_type 'authorization_code' \
    > test.out 2>&1
eval_tap $? 267 'TokenGrantV3' test.out

#- 268 VerifyTokenV3
$CLI_EXE \
    --sn iam \
    --op VerifyTokenV3 \
    --token 'd79kimAo' \
    > test.out 2>&1
eval_tap $? 268 'VerifyTokenV3' test.out

#- 269 PlatformAuthenticationV3
$CLI_EXE \
    --sn iam \
    --op PlatformAuthenticationV3 \
    --platformId 'eT8gaYMM' \
    --code 'pwjdDwQh' \
    --error 'O9dVkkQ5' \
    --openidAssocHandle 'tz6SjuCG' \
    --openidClaimedId 'uJS0I5L0' \
    --openidIdentity 'BuN7TkTc' \
    --openidMode 'G81cQGy5' \
    --openidNs 'VP0RWFGT' \
    --openidOpEndpoint 'KDhtSTFV' \
    --openidResponseNonce 'eigZFs4q' \
    --openidReturnTo 'ScVZyi9J' \
    --openidSig 'c9kT6Es9' \
    --openidSigned 'hEPtC1Cs' \
    --state 'bErNnqb8' \
    > test.out 2>&1
eval_tap $? 269 'PlatformAuthenticationV3' test.out

#- 270 PlatformTokenRefreshV3
$CLI_EXE \
    --sn iam \
    --op PlatformTokenRefreshV3 \
    --platformId 'XNquogyM' \
    --platform_token '0wRxwYJm' \
    > test.out 2>&1
eval_tap $? 270 'PlatformTokenRefreshV3' test.out

#- 271 PublicGetInputValidations
$CLI_EXE \
    --sn iam \
    --op PublicGetInputValidations \
    --defaultOnEmpty 'false' \
    --languageCode 'GLuFEigU' \
    > test.out 2>&1
eval_tap $? 271 'PublicGetInputValidations' test.out

#- 272 PublicGetInputValidationByField
$CLI_EXE \
    --sn iam \
    --op PublicGetInputValidationByField \
    --field 'pQRgPvYR' \
    > test.out 2>&1
eval_tap $? 272 'PublicGetInputValidationByField' test.out

#- 273 PublicGetCountryAgeRestrictionV3
$CLI_EXE \
    --sn iam \
    --op PublicGetCountryAgeRestrictionV3 \
    --countryCode 'yAca500J' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 273 'PublicGetCountryAgeRestrictionV3' test.out

#- 274 PublicGetConfigValueV3
$CLI_EXE \
    --sn iam \
    --op PublicGetConfigValueV3 \
    --configKey '33aEgJbc' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 274 'PublicGetConfigValueV3' test.out

#- 275 PublicGetCountryListV3
$CLI_EXE \
    --sn iam \
    --op PublicGetCountryListV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 275 'PublicGetCountryListV3' test.out

#- 276 RetrieveAllActiveThirdPartyLoginPlatformCredentialPublicV3
$CLI_EXE \
    --sn iam \
    --op RetrieveAllActiveThirdPartyLoginPlatformCredentialPublicV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 276 'RetrieveAllActiveThirdPartyLoginPlatformCredentialPublicV3' test.out

#- 277 RetrieveActiveOIDCClientsPublicV3
$CLI_EXE \
    --sn iam \
    --op RetrieveActiveOIDCClientsPublicV3 \
    --namespace $AB_NAMESPACE \
    --clientId 't7vHQwGH' \
    > test.out 2>&1
eval_tap $? 277 'RetrieveActiveOIDCClientsPublicV3' test.out

#- 278 PublicListUserIDByPlatformUserIDsV3
eval_tap 0 278 'PublicListUserIDByPlatformUserIDsV3 # SKIP deprecated' test.out

#- 279 PublicGetUserByPlatformUserIDV3
eval_tap 0 279 'PublicGetUserByPlatformUserIDV3 # SKIP deprecated' test.out

#- 280 PublicGetProfileUpdateStrategyV3
$CLI_EXE \
    --sn iam \
    --op PublicGetProfileUpdateStrategyV3 \
    --namespace $AB_NAMESPACE \
    --field 'display_name' \
    > test.out 2>&1
eval_tap $? 280 'PublicGetProfileUpdateStrategyV3' test.out

#- 281 PublicGetAsyncStatus
$CLI_EXE \
    --sn iam \
    --op PublicGetAsyncStatus \
    --namespace $AB_NAMESPACE \
    --requestId 'foy4GNsl' \
    > test.out 2>&1
eval_tap $? 281 'PublicGetAsyncStatus' test.out

#- 282 PublicSearchUserV3
$CLI_EXE \
    --sn iam \
    --op PublicSearchUserV3 \
    --namespace $AB_NAMESPACE \
    --by 'ZJzuvrTv' \
    --limit '38' \
    --offset '88' \
    --platformBy 'YbPQZS56' \
    --platformId 'grdbaFZ0' \
    --query 'pvGohmGo' \
    > test.out 2>&1
eval_tap $? 282 'PublicSearchUserV3' test.out

#- 283 PublicCreateUserV3
# body param: body
echo '{"PasswordMD5Sum": "GFZJqEJs", "acceptedPolicies": [{"isAccepted": true, "localizedPolicyVersionId": "O5z5MBXD", "policyId": "4OuVTjId", "policyVersionId": "gEllMv71"}, {"isAccepted": true, "localizedPolicyVersionId": "m4t1Ntzw", "policyId": "2dKjTtrh", "policyVersionId": "0l5REvuq"}, {"isAccepted": true, "localizedPolicyVersionId": "KRlDwYXz", "policyId": "MlJ0bhQ4", "policyVersionId": "XYcZRVgU"}], "authType": "qkZzQGTO", "code": "rs25thuf", "country": "LvemyzGX", "dateOfBirth": "iCp7hnIZ", "displayName": "pCpn4qHI", "emailAddress": "BYRxlFhq", "password": "nwnh684z", "reachMinimumAge": false, "uniqueDisplayName": "DzkD2qFy"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicCreateUserV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 283 'PublicCreateUserV3' test.out

#- 284 CheckUserAvailability
$CLI_EXE \
    --sn iam \
    --op CheckUserAvailability \
    --namespace $AB_NAMESPACE \
    --field '3XaVsJSm' \
    --query '3KLEhzXa' \
    > test.out 2>&1
eval_tap $? 284 'CheckUserAvailability' test.out

#- 285 PublicBulkGetUsers
eval_tap 0 285 'PublicBulkGetUsers # SKIP deprecated' test.out

#- 286 PublicSendRegistrationCode
# body param: body
echo '{"emailAddress": "r0ZUgkDG", "languageTag": "MjeaykOy"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicSendRegistrationCode \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 286 'PublicSendRegistrationCode' test.out

#- 287 PublicVerifyRegistrationCode
# body param: body
echo '{"code": "29zH67dQ", "emailAddress": "To859whU"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicVerifyRegistrationCode \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 287 'PublicVerifyRegistrationCode' test.out

#- 288 PublicForgotPasswordV3
# body param: body
echo '{"emailAddress": "dN13udT3", "languageTag": "xIqjp6Yb"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicForgotPasswordV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 288 'PublicForgotPasswordV3' test.out

#- 289 PublicValidateUserInput
# body param: body
echo '{"displayName": "DCDaOoVw", "password": "oewwcX1Y", "uniqueDisplayName": "RsDLSoKw", "username": "Z6o6F5B9"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicValidateUserInput \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 289 'PublicValidateUserInput' test.out

#- 290 GetAdminInvitationV3
$CLI_EXE \
    --sn iam \
    --op GetAdminInvitationV3 \
    --invitationId 'zheZc5MN' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 290 'GetAdminInvitationV3' test.out

#- 291 CreateUserFromInvitationV3
# body param: body
echo '{"PasswordMD5Sum": "3RWIu9tF", "acceptedPolicies": [{"isAccepted": true, "localizedPolicyVersionId": "DsXviCVy", "policyId": "p9cFkmiF", "policyVersionId": "psH7xaLK"}, {"isAccepted": true, "localizedPolicyVersionId": "tKIs1BM6", "policyId": "J47Huejw", "policyVersionId": "ZioXeXSQ"}, {"isAccepted": true, "localizedPolicyVersionId": "HJyKImVR", "policyId": "U7R45GCG", "policyVersionId": "63jAIjkV"}], "authType": "1k4J06aH", "code": "pKP2bsgb", "country": "tVad3bIV", "dateOfBirth": "CiBhUeit", "displayName": "dUqYekbt", "emailAddress": "kWmhamxS", "password": "J5dY4cRi", "reachMinimumAge": false, "uniqueDisplayName": "cJRAJTBV"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op CreateUserFromInvitationV3 \
    --invitationId '22TfgWo8' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 291 'CreateUserFromInvitationV3' test.out

#- 292 UpdateUserV3
# body param: body
echo '{"avatarUrl": "CccSh7gP", "country": "Qia8vH7d", "dateOfBirth": "cC8vtZgz", "displayName": "1Qua3rZA", "languageTag": "GUuz4dKd", "uniqueDisplayName": "kdB85iYl", "userName": "0WTSgbHB"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op UpdateUserV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 292 'UpdateUserV3' test.out

#- 293 PublicPartialUpdateUserV3
# body param: body
echo '{"avatarUrl": "rn0EYgpa", "country": "I1V51MGG", "dateOfBirth": "hP4N7Fo8", "displayName": "bd3LqXi7", "languageTag": "zGXeVuLT", "uniqueDisplayName": "1qs32Ao5", "userName": "qYmrNYkw"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicPartialUpdateUserV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 293 'PublicPartialUpdateUserV3' test.out

#- 294 PublicSendVerificationCodeV3
# body param: body
echo '{"context": "BK4GFEb2", "emailAddress": "OIO6HycC", "languageTag": "Kc1FTvt5", "upgradeToken": "V9LV709O"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicSendVerificationCodeV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 294 'PublicSendVerificationCodeV3' test.out

#- 295 PublicUserVerificationV3
# body param: body
echo '{"code": "6ZnXV150", "contactType": "AsD0UoBf", "languageTag": "6X4ug27M", "validateOnly": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUserVerificationV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 295 'PublicUserVerificationV3' test.out

#- 296 PublicUpgradeHeadlessAccountV3
# body param: body
echo '{"code": "yaSkHt1w", "country": "DxM2FyI8", "dateOfBirth": "iCoE6xMx", "displayName": "2TggD7KH", "emailAddress": "QNwq2MXO", "password": "0VuLIw0b", "uniqueDisplayName": "tqMRJAxY", "validateOnly": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpgradeHeadlessAccountV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 296 'PublicUpgradeHeadlessAccountV3' test.out

#- 297 PublicVerifyHeadlessAccountV3
# body param: body
echo '{"emailAddress": "KgX7BpX8", "password": "HZr7QwVE"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicVerifyHeadlessAccountV3 \
    --namespace $AB_NAMESPACE \
    --needVerificationCode 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 297 'PublicVerifyHeadlessAccountV3' test.out

#- 298 PublicUpdatePasswordV3
# body param: body
echo '{"languageTag": "kwK70Rnh", "mfaToken": "5xtCshX4", "newPassword": "dyvEbGA9", "oldPassword": "tFJvYU90"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpdatePasswordV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 298 'PublicUpdatePasswordV3' test.out

#- 299 PublicCreateJusticeUser
$CLI_EXE \
    --sn iam \
    --op PublicCreateJusticeUser \
    --namespace $AB_NAMESPACE \
    --targetNamespace 'udv4yoKj' \
    > test.out 2>&1
eval_tap $? 299 'PublicCreateJusticeUser' test.out

#- 300 PublicPlatformLinkV3
$CLI_EXE \
    --sn iam \
    --op PublicPlatformLinkV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'BtbnuzvJ' \
    --redirectUri '2MIVGk5O' \
    --ticket 'NyyaIhxj' \
    > test.out 2>&1
eval_tap $? 300 'PublicPlatformLinkV3' test.out

#- 301 PublicPlatformUnlinkV3
eval_tap 0 301 'PublicPlatformUnlinkV3 # SKIP deprecated' test.out

#- 302 PublicPlatformUnlinkAllV3
$CLI_EXE \
    --sn iam \
    --op PublicPlatformUnlinkAllV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'bBnIrBn3' \
    > test.out 2>&1
eval_tap $? 302 'PublicPlatformUnlinkAllV3' test.out

#- 303 PublicForcePlatformLinkV3
$CLI_EXE \
    --sn iam \
    --op PublicForcePlatformLinkV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'jEz0yaMX' \
    --ticket 'cUuIaO4P' \
    > test.out 2>&1
eval_tap $? 303 'PublicForcePlatformLinkV3' test.out

#- 304 PublicWebLinkPlatform
$CLI_EXE \
    --sn iam \
    --op PublicWebLinkPlatform \
    --namespace $AB_NAMESPACE \
    --platformId 'eOW99seA' \
    --clientId 'CnVEGuOT' \
    --redirectUri 'TRnfDFEu' \
    > test.out 2>&1
eval_tap $? 304 'PublicWebLinkPlatform' test.out

#- 305 PublicWebLinkPlatformEstablish
$CLI_EXE \
    --sn iam \
    --op PublicWebLinkPlatformEstablish \
    --namespace $AB_NAMESPACE \
    --platformId 'c0xgwXDe' \
    --code 'GOf6c9n8' \
    --state '7UTtbg6s' \
    > test.out 2>&1
eval_tap $? 305 'PublicWebLinkPlatformEstablish' test.out

#- 306 PublicProcessWebLinkPlatformV3
$CLI_EXE \
    --sn iam \
    --op PublicProcessWebLinkPlatformV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'bAJBaymH' \
    --code 'vg7N96eq' \
    --state '3f67L9gj' \
    > test.out 2>&1
eval_tap $? 306 'PublicProcessWebLinkPlatformV3' test.out

#- 307 PublicGetUsersPlatformInfosV3
# body param: body
echo '{"platformId": "zdU7jV97", "userIds": ["0V48o6h8", "iPOUwufn", "GyPlbH7K"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicGetUsersPlatformInfosV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 307 'PublicGetUsersPlatformInfosV3' test.out

#- 308 ResetPasswordV3
# body param: body
echo '{"clientId": "OjQp45lB", "code": "dOqzXzdQ", "emailAddress": "iGVLvDce", "languageTag": "Q3ykkPlJ", "newPassword": "YrIufkjH"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op ResetPasswordV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 308 'ResetPasswordV3' test.out

#- 309 PublicGetUserByUserIdV3
eval_tap 0 309 'PublicGetUserByUserIdV3 # SKIP deprecated' test.out

#- 310 PublicGetUserBanHistoryV3
$CLI_EXE \
    --sn iam \
    --op PublicGetUserBanHistoryV3 \
    --namespace $AB_NAMESPACE \
    --userId 'Tu9HKH3Y' \
    --activeOnly 'false' \
    --after 'SSpCpk4R' \
    --before '8hETVO0d' \
    --limit '92' \
    > test.out 2>&1
eval_tap $? 310 'PublicGetUserBanHistoryV3' test.out

#- 311 PublicListUserAllPlatformAccountsDistinctV3
$CLI_EXE \
    --sn iam \
    --op PublicListUserAllPlatformAccountsDistinctV3 \
    --namespace $AB_NAMESPACE \
    --userId 'UiilasYT' \
    > test.out 2>&1
eval_tap $? 311 'PublicListUserAllPlatformAccountsDistinctV3' test.out

#- 312 PublicGetUserInformationV3
$CLI_EXE \
    --sn iam \
    --op PublicGetUserInformationV3 \
    --namespace $AB_NAMESPACE \
    --userId 'iHz6IUpb' \
    > test.out 2>&1
eval_tap $? 312 'PublicGetUserInformationV3' test.out

#- 313 PublicGetUserLoginHistoriesV3
$CLI_EXE \
    --sn iam \
    --op PublicGetUserLoginHistoriesV3 \
    --namespace $AB_NAMESPACE \
    --userId 'M2kmJhZM' \
    --after '0.39225956094509973' \
    --before '0.36263358466329587' \
    --limit '70' \
    > test.out 2>&1
eval_tap $? 313 'PublicGetUserLoginHistoriesV3' test.out

#- 314 PublicGetUserPlatformAccountsV3
$CLI_EXE \
    --sn iam \
    --op PublicGetUserPlatformAccountsV3 \
    --namespace $AB_NAMESPACE \
    --userId 'AD5QE14t' \
    --after 'IQLKFNDK' \
    --before 'KuAbjPZn' \
    --limit '97' \
    --platformId 'zRMFIdvV' \
    > test.out 2>&1
eval_tap $? 314 'PublicGetUserPlatformAccountsV3' test.out

#- 315 PublicListJusticePlatformAccountsV3
$CLI_EXE \
    --sn iam \
    --op PublicListJusticePlatformAccountsV3 \
    --namespace $AB_NAMESPACE \
    --userId 'aY4aqLto' \
    > test.out 2>&1
eval_tap $? 315 'PublicListJusticePlatformAccountsV3' test.out

#- 316 PublicLinkPlatformAccount
# body param: body
echo '{"platformId": "fB8ZJE0v", "platformUserId": "7IFCmI0u"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicLinkPlatformAccount \
    --namespace $AB_NAMESPACE \
    --userId 'nal6xlP0' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 316 'PublicLinkPlatformAccount' test.out

#- 317 PublicForceLinkPlatformWithProgression
# body param: body
echo '{"chosenNamespaces": ["r6sFLAKt", "7GHeUqm2", "hSKDfAAE"], "requestId": "3dmaaxvb"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicForceLinkPlatformWithProgression \
    --namespace $AB_NAMESPACE \
    --userId 'ucIT3DsA' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 317 'PublicForceLinkPlatformWithProgression' test.out

#- 318 PublicGetPublisherUserV3
$CLI_EXE \
    --sn iam \
    --op PublicGetPublisherUserV3 \
    --namespace $AB_NAMESPACE \
    --userId 'MokPdMIn' \
    > test.out 2>&1
eval_tap $? 318 'PublicGetPublisherUserV3' test.out

#- 319 PublicValidateUserByUserIDAndPasswordV3
$CLI_EXE \
    --sn iam \
    --op PublicValidateUserByUserIDAndPasswordV3 \
    --namespace $AB_NAMESPACE \
    --userId 'ZhzVcVQH' \
    --password 'mpwmgkzQ' \
    > test.out 2>&1
eval_tap $? 319 'PublicValidateUserByUserIDAndPasswordV3' test.out

#- 320 PublicGetRolesV3
$CLI_EXE \
    --sn iam \
    --op PublicGetRolesV3 \
    --after 'SXQppB6L' \
    --before '90rlDSTC' \
    --isWildcard 'true' \
    --limit '2' \
    > test.out 2>&1
eval_tap $? 320 'PublicGetRolesV3' test.out

#- 321 PublicGetRoleV3
$CLI_EXE \
    --sn iam \
    --op PublicGetRoleV3 \
    --roleId 'qslBWLlw' \
    > test.out 2>&1
eval_tap $? 321 'PublicGetRoleV3' test.out

#- 322 PublicForgotPasswordWithoutNamespaceV3
# body param: body
echo '{"clientId": "2t6k3BLa", "emailAddress": "qIkR4KI9", "languageTag": "1ph4Hqqz"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicForgotPasswordWithoutNamespaceV3 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 322 'PublicForgotPasswordWithoutNamespaceV3' test.out

#- 323 PublicGetMyUserV3
$CLI_EXE \
    --sn iam \
    --op PublicGetMyUserV3 \
    --includeAllPlatforms 'false' \
    > test.out 2>&1
eval_tap $? 323 'PublicGetMyUserV3' test.out

#- 324 PublicSendCodeForwardV3
# body param: body
echo '{"context": "ZKTbnaq3", "emailAddress": "kXukW8RE", "languageTag": "onE9zZM7", "upgradeToken": "nf0cow9h"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicSendCodeForwardV3 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 324 'PublicSendCodeForwardV3' test.out

#- 325 PublicGetLinkHeadlessAccountToMyAccountConflictV3
$CLI_EXE \
    --sn iam \
    --op PublicGetLinkHeadlessAccountToMyAccountConflictV3 \
    --oneTimeLinkCode '89JohlEG' \
    > test.out 2>&1
eval_tap $? 325 'PublicGetLinkHeadlessAccountToMyAccountConflictV3' test.out

#- 326 LinkHeadlessAccountToMyAccountV3
# body param: body
echo '{"chosenNamespaces": ["VtOWyg64", "0NUpZCzj", "rXJNtm9t"], "oneTimeLinkCode": "PiDwIYAK"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op LinkHeadlessAccountToMyAccountV3 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 326 'LinkHeadlessAccountToMyAccountV3' test.out

#- 327 PublicGetMyRedirectionAfterLinkV3
$CLI_EXE \
    --sn iam \
    --op PublicGetMyRedirectionAfterLinkV3 \
    --oneTimeLinkCode 'cZDzU3kl' \
    > test.out 2>&1
eval_tap $? 327 'PublicGetMyRedirectionAfterLinkV3' test.out

#- 328 PublicGetMyProfileAllowUpdateStatusV3
$CLI_EXE \
    --sn iam \
    --op PublicGetMyProfileAllowUpdateStatusV3 \
    > test.out 2>&1
eval_tap $? 328 'PublicGetMyProfileAllowUpdateStatusV3' test.out

#- 329 PublicSendVerificationLinkV3
# body param: body
echo '{"languageTag": "0FuAK3SU"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicSendVerificationLinkV3 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 329 'PublicSendVerificationLinkV3' test.out

#- 330 PublicGetOpenidUserInfoV3
$CLI_EXE \
    --sn iam \
    --op PublicGetOpenidUserInfoV3 \
    > test.out 2>&1
eval_tap $? 330 'PublicGetOpenidUserInfoV3' test.out

#- 331 PublicVerifyUserByLinkV3
$CLI_EXE \
    --sn iam \
    --op PublicVerifyUserByLinkV3 \
    --code 'd0WYXQJH' \
    > test.out 2>&1
eval_tap $? 331 'PublicVerifyUserByLinkV3' test.out

#- 332 PlatformAuthenticateSAMLV3Handler
$CLI_EXE \
    --sn iam \
    --op PlatformAuthenticateSAMLV3Handler \
    --platformId 'o8FZxT5g' \
    --code 'MtrbbRLo' \
    --error '3uMznz5J' \
    --state 'x7OCeKUz' \
    > test.out 2>&1
eval_tap $? 332 'PlatformAuthenticateSAMLV3Handler' test.out

#- 333 LoginSSOClient
$CLI_EXE \
    --sn iam \
    --op LoginSSOClient \
    --platformId 'EOZ9ymMG' \
    --payload 'YH8pzmdu' \
    > test.out 2>&1
eval_tap $? 333 'LoginSSOClient' test.out

#- 334 LogoutSSOClient
$CLI_EXE \
    --sn iam \
    --op LogoutSSOClient \
    --platformId '5NoVs4Vs' \
    > test.out 2>&1
eval_tap $? 334 'LogoutSSOClient' test.out

#- 335 RequestTargetTokenResponseV3
$CLI_EXE \
    --sn iam \
    --op RequestTargetTokenResponseV3 \
    --additionalData 'iEV9BjJG' \
    --code 'Lyr1WAUZ' \
    > test.out 2>&1
eval_tap $? 335 'RequestTargetTokenResponseV3' test.out

#- 336 UpgradeAndAuthenticateForwardV3
$CLI_EXE \
    --sn iam \
    --op UpgradeAndAuthenticateForwardV3 \
    --client_id '0od2mBVf' \
    --upgrade_success_token 'JSSI0b3M' \
    > test.out 2>&1
eval_tap $? 336 'UpgradeAndAuthenticateForwardV3' test.out

#- 337 AdminListInvitationHistoriesV4
$CLI_EXE \
    --sn iam \
    --op AdminListInvitationHistoriesV4 \
    --limit '97' \
    --namespace_ '1TycALk9' \
    --offset '60' \
    > test.out 2>&1
eval_tap $? 337 'AdminListInvitationHistoriesV4' test.out

#- 338 AdminGetDevicesByUserV4
$CLI_EXE \
    --sn iam \
    --op AdminGetDevicesByUserV4 \
    --namespace $AB_NAMESPACE \
    --userId 'u6MBMz2U' \
    > test.out 2>&1
eval_tap $? 338 'AdminGetDevicesByUserV4' test.out

#- 339 AdminGetBannedDevicesV4
$CLI_EXE \
    --sn iam \
    --op AdminGetBannedDevicesV4 \
    --namespace $AB_NAMESPACE \
    --deviceType 'FUzp7Ziy' \
    --endDate 'UN8enfs9' \
    --limit '13' \
    --offset '8' \
    --startDate '6igCfGKl' \
    > test.out 2>&1
eval_tap $? 339 'AdminGetBannedDevicesV4' test.out

#- 340 AdminGetUserDeviceBansV4
$CLI_EXE \
    --sn iam \
    --op AdminGetUserDeviceBansV4 \
    --namespace $AB_NAMESPACE \
    --userId '3fRPPhgl' \
    > test.out 2>&1
eval_tap $? 340 'AdminGetUserDeviceBansV4' test.out

#- 341 AdminBanDeviceV4
# body param: body
echo '{"comment": "fHXE6Lcw", "deviceId": "3VHnb2lG", "deviceType": "vKgoGo4v", "enabled": false, "endDate": "vOxiaCtl", "ext": {"rSt2Nmox": {}, "hGTTtmwl": {}, "fR0jWRwq": {}}, "reason": "ERRfoMwA"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBanDeviceV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 341 'AdminBanDeviceV4' test.out

#- 342 AdminGetDeviceBanV4
$CLI_EXE \
    --sn iam \
    --op AdminGetDeviceBanV4 \
    --banId 'sAbdfdRG' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 342 'AdminGetDeviceBanV4' test.out

#- 343 AdminUpdateDeviceBanV4
# body param: body
echo '{"enabled": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateDeviceBanV4 \
    --banId 'oxDBYDQ4' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 343 'AdminUpdateDeviceBanV4' test.out

#- 344 AdminGenerateReportV4
$CLI_EXE \
    --sn iam \
    --op AdminGenerateReportV4 \
    --namespace $AB_NAMESPACE \
    --endDate 'P4uTVW7k' \
    --startDate 'xGXR7Sp1' \
    --deviceType 'XGedntOB' \
    > test.out 2>&1
eval_tap $? 344 'AdminGenerateReportV4' test.out

#- 345 AdminGetDeviceTypesV4
$CLI_EXE \
    --sn iam \
    --op AdminGetDeviceTypesV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 345 'AdminGetDeviceTypesV4' test.out

#- 346 AdminGetDeviceBansV4
$CLI_EXE \
    --sn iam \
    --op AdminGetDeviceBansV4 \
    --deviceId 'yOliujlw' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 346 'AdminGetDeviceBansV4' test.out

#- 347 AdminDecryptDeviceV4
eval_tap 0 347 'AdminDecryptDeviceV4 # SKIP deprecated' test.out

#- 348 AdminUnbanDeviceV4
$CLI_EXE \
    --sn iam \
    --op AdminUnbanDeviceV4 \
    --deviceId 'VqkAIw8L' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 348 'AdminUnbanDeviceV4' test.out

#- 349 AdminGetUsersByDeviceV4
$CLI_EXE \
    --sn iam \
    --op AdminGetUsersByDeviceV4 \
    --deviceId 'opFG1R21' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 349 'AdminGetUsersByDeviceV4' test.out

#- 350 AdminGetNamespaceInvitationHistoryV4
$CLI_EXE \
    --sn iam \
    --op AdminGetNamespaceInvitationHistoryV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 350 'AdminGetNamespaceInvitationHistoryV4' test.out

#- 351 AdminGetNamespaceUserInvitationHistoryV4
$CLI_EXE \
    --sn iam \
    --op AdminGetNamespaceUserInvitationHistoryV4 \
    --namespace $AB_NAMESPACE \
    --limit '7' \
    --offset '65' \
    > test.out 2>&1
eval_tap $? 351 'AdminGetNamespaceUserInvitationHistoryV4' test.out

#- 352 AdminCreateTestUsersV4
# body param: body
echo '{"count": 6, "userInfo": {"country": "2nvk1PW7"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminCreateTestUsersV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 352 'AdminCreateTestUsersV4' test.out

#- 353 AdminCreateUserV4
# body param: body
echo '{"acceptedPolicies": [{"isAccepted": false, "localizedPolicyVersionId": "CApqu7Bw", "policyId": "MFIsYqcD", "policyVersionId": "MOx76cuv"}, {"isAccepted": false, "localizedPolicyVersionId": "SaWF4KJE", "policyId": "xGUtBFMi", "policyVersionId": "mKrWKJvr"}, {"isAccepted": true, "localizedPolicyVersionId": "D5N9M6se", "policyId": "ngYajK1c", "policyVersionId": "EFN05Wgu"}], "authType": "EMAILPASSWD", "code": "XnwCfyzk", "country": "qSzJVlHi", "dateOfBirth": "pGYWp0Sn", "displayName": "cBcpLc93", "emailAddress": "tkOpu1Rk", "password": "PWH2pNmB", "passwordMD5Sum": "rbPwvPM5", "reachMinimumAge": false, "uniqueDisplayName": "LfUbAXpD", "username": "G08J3s2D"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminCreateUserV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 353 'AdminCreateUserV4' test.out

#- 354 AdminBulkUpdateUserAccountTypeV4
# body param: body
echo '{"testAccount": false, "userIds": ["6pPsM1ug", "anRCaMaa", "i0O62VAa"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBulkUpdateUserAccountTypeV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 354 'AdminBulkUpdateUserAccountTypeV4' test.out

#- 355 AdminBulkCheckValidUserIDV4
# body param: body
echo '{"userIds": ["usIDLQsL", "rdCjJGUp", "hkvFGXSg"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBulkCheckValidUserIDV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 355 'AdminBulkCheckValidUserIDV4' test.out

#- 356 AdminUpdateUserV4
# body param: body
echo '{"avatarUrl": "rdQcMKb5", "country": "DZC4slZL", "dateOfBirth": "5Rn26kdJ", "displayName": "T7zVLntD", "languageTag": "uilwBw0j", "skipLoginQueue": false, "tags": ["sVoLNQn7", "wcwtfGGv", "SKdExbQ0"], "uniqueDisplayName": "0oivuBVB", "userName": "bZkP7Lxa"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserV4 \
    --namespace $AB_NAMESPACE \
    --userId '3KUomLCU' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 356 'AdminUpdateUserV4' test.out

#- 357 AdminUpdateUserEmailAddressV4
# body param: body
echo '{"code": "vXbEikn8", "emailAddress": "fX5pq1ht"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserEmailAddressV4 \
    --namespace $AB_NAMESPACE \
    --userId 'DKQTCwwi' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 357 'AdminUpdateUserEmailAddressV4' test.out

#- 358 AdminDisableUserMFAV4
# body param: body
echo '{"factor": "PguAp8hb", "mfaToken": "oXvvMCnK"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDisableUserMFAV4 \
    --namespace $AB_NAMESPACE \
    --userId 'aUFRysPf' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 358 'AdminDisableUserMFAV4' test.out

#- 359 AdminGetUserMFAStatusV4
$CLI_EXE \
    --sn iam \
    --op AdminGetUserMFAStatusV4 \
    --namespace $AB_NAMESPACE \
    --userId 'A8AbDvtc' \
    > test.out 2>&1
eval_tap $? 359 'AdminGetUserMFAStatusV4' test.out

#- 360 AdminListUserRolesV4
$CLI_EXE \
    --sn iam \
    --op AdminListUserRolesV4 \
    --namespace $AB_NAMESPACE \
    --userId 'DbbksqDS' \
    > test.out 2>&1
eval_tap $? 360 'AdminListUserRolesV4' test.out

#- 361 AdminUpdateUserRoleV4
# body param: body
echo '{"assignedNamespaces": ["YKxh3Su6", "O5ec3Qny", "EvRkWzHd"], "roleId": "dPW3p2kS"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserRoleV4 \
    --namespace $AB_NAMESPACE \
    --userId '0WEicQVs' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 361 'AdminUpdateUserRoleV4' test.out

#- 362 AdminAddUserRoleV4
# body param: body
echo '{"assignedNamespaces": ["DJp95Vff", "9CLjRPnk", "5GFsZMZh"], "roleId": "0QvglBhk"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddUserRoleV4 \
    --namespace $AB_NAMESPACE \
    --userId 'zJ1sDgb1' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 362 'AdminAddUserRoleV4' test.out

#- 363 AdminRemoveUserRoleV4
# body param: body
echo '{"assignedNamespaces": ["bowLV8N4", "LZlCvWLS", "X4a9DVx4"], "roleId": "VwQBzsOd"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminRemoveUserRoleV4 \
    --namespace $AB_NAMESPACE \
    --userId 'wNXADa6K' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 363 'AdminRemoveUserRoleV4' test.out

#- 364 AdminGetRolesV4
$CLI_EXE \
    --sn iam \
    --op AdminGetRolesV4 \
    --adminRole 'true' \
    --isWildcard 'false' \
    --limit '79' \
    --offset '48' \
    > test.out 2>&1
eval_tap $? 364 'AdminGetRolesV4' test.out

#- 365 AdminCreateRoleV4
# body param: body
echo '{"adminRole": true, "deletable": true, "isWildcard": false, "roleName": "RKnYgPsP"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminCreateRoleV4 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 365 'AdminCreateRoleV4' test.out

#- 366 AdminGetRoleV4
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleV4 \
    --roleId 'ygJrzgsi' \
    > test.out 2>&1
eval_tap $? 366 'AdminGetRoleV4' test.out

#- 367 AdminDeleteRoleV4
$CLI_EXE \
    --sn iam \
    --op AdminDeleteRoleV4 \
    --roleId 'eCRvG4yq' \
    > test.out 2>&1
eval_tap $? 367 'AdminDeleteRoleV4' test.out

#- 368 AdminUpdateRoleV4
# body param: body
echo '{"adminRole": true, "deletable": false, "isWildcard": true, "roleName": "JARRZYfP"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateRoleV4 \
    --roleId '05IsZHCc' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 368 'AdminUpdateRoleV4' test.out

#- 369 AdminUpdateRolePermissionsV4
# body param: body
echo '{"permissions": [{"action": 31, "resource": "Jd6euWqS", "schedAction": 28, "schedCron": "XNAhRwVO", "schedRange": ["Lar06Eb5", "m4Xmpv3k", "f4ovyflx"]}, {"action": 41, "resource": "GpC8l71A", "schedAction": 18, "schedCron": "CEnB6fV8", "schedRange": ["ZfcWqZUQ", "ivyNFFt4", "f12ttckF"]}, {"action": 22, "resource": "WRcG5JVO", "schedAction": 3, "schedCron": "mtzq78Hh", "schedRange": ["3aV1cqGD", "ygen9YVX", "Gy6sQeOH"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateRolePermissionsV4 \
    --roleId 'docJNaRi' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 369 'AdminUpdateRolePermissionsV4' test.out

#- 370 AdminAddRolePermissionsV4
# body param: body
echo '{"permissions": [{"action": 29, "resource": "D95NspLp", "schedAction": 15, "schedCron": "w7JMPe89", "schedRange": ["4I3JsoLl", "F1JvEChz", "C5ThVkMl"]}, {"action": 55, "resource": "Dj5dLTFI", "schedAction": 59, "schedCron": "bxVgKGhr", "schedRange": ["oSUCsDfm", "Ck2ayK2T", "ljAk4e31"]}, {"action": 74, "resource": "lcuGVf65", "schedAction": 70, "schedCron": "AWx5vlQU", "schedRange": ["oXxENjFi", "M1uPLeRv", "BDNLfcSM"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddRolePermissionsV4 \
    --roleId 'J81A6N67' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 370 'AdminAddRolePermissionsV4' test.out

#- 371 AdminDeleteRolePermissionsV4
# body param: body
echo '["iRRiD35H", "j0pPUz7n", "9LXCXdlS"]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDeleteRolePermissionsV4 \
    --roleId 'o03Ll8O6' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 371 'AdminDeleteRolePermissionsV4' test.out

#- 372 AdminListAssignedUsersV4
$CLI_EXE \
    --sn iam \
    --op AdminListAssignedUsersV4 \
    --roleId 'FBQMjKpC' \
    --after '5fsW4tWh' \
    --before 'xwgeSjJx' \
    --limit '15' \
    > test.out 2>&1
eval_tap $? 372 'AdminListAssignedUsersV4' test.out

#- 373 AdminAssignUserToRoleV4
# body param: body
echo '{"assignedNamespaces": ["ALkNqLcJ", "EIGojhlP", "mMdj8UFg"], "namespace": "pwskSfeV", "userId": "HhCo3eXc"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAssignUserToRoleV4 \
    --roleId 'wIiRSxGp' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 373 'AdminAssignUserToRoleV4' test.out

#- 374 AdminRevokeUserFromRoleV4
# body param: body
echo '{"namespace": "gUB63c5C", "userId": "P5AkeyQv"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminRevokeUserFromRoleV4 \
    --roleId 'QHImjn5i' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 374 'AdminRevokeUserFromRoleV4' test.out

#- 375 AdminInviteUserNewV4
# body param: body
echo '{"assignedNamespaces": ["KBk0D8HC", "hQhK9D2G", "kI18tHQG"], "emailAddresses": ["YdjK1z5a", "5haFmbxH", "gEp4CSsz"], "isAdmin": false, "isNewStudio": false, "languageTag": "srtV6mFw", "namespace": "QKUURhAe", "roleId": "j6Q0GX4q"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminInviteUserNewV4 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 375 'AdminInviteUserNewV4' test.out

#- 376 AdminUpdateMyUserV4
# body param: body
echo '{"avatarUrl": "lBuevrmd", "country": "p3am98km", "dateOfBirth": "mjMwAtU0", "displayName": "UrCLhDQP", "languageTag": "IUg8xYam", "skipLoginQueue": true, "tags": ["AIVpMUJl", "wUMQFd1E", "X0Z7kKTE"], "uniqueDisplayName": "xgmuk3S2", "userName": "TDjvS1gr"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateMyUserV4 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 376 'AdminUpdateMyUserV4' test.out

#- 377 AdminDisableMyAuthenticatorV4
# body param: body
echo '{"factor": "060tuTij", "mfaToken": "XqSt1zxk"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDisableMyAuthenticatorV4 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 377 'AdminDisableMyAuthenticatorV4' test.out

#- 378 AdminEnableMyAuthenticatorV4
$CLI_EXE \
    --sn iam \
    --op AdminEnableMyAuthenticatorV4 \
    --code 'RJcIuyrX' \
    > test.out 2>&1
eval_tap $? 378 'AdminEnableMyAuthenticatorV4' test.out

#- 379 AdminGenerateMyAuthenticatorKeyV4
$CLI_EXE \
    --sn iam \
    --op AdminGenerateMyAuthenticatorKeyV4 \
    > test.out 2>&1
eval_tap $? 379 'AdminGenerateMyAuthenticatorKeyV4' test.out

#- 380 AdminGetMyBackupCodesV4
eval_tap 0 380 'AdminGetMyBackupCodesV4 # SKIP deprecated' test.out

#- 381 AdminGenerateMyBackupCodesV4
eval_tap 0 381 'AdminGenerateMyBackupCodesV4 # SKIP deprecated' test.out

#- 382 AdminDisableMyBackupCodesV4
# body param: body
echo '{"factor": "ly911c8p", "mfaToken": "dxYT1ocV"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDisableMyBackupCodesV4 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 382 'AdminDisableMyBackupCodesV4' test.out

#- 383 AdminDownloadMyBackupCodesV4
eval_tap 0 383 'AdminDownloadMyBackupCodesV4 # SKIP deprecated' test.out

#- 384 AdminEnableMyBackupCodesV4
eval_tap 0 384 'AdminEnableMyBackupCodesV4 # SKIP deprecated' test.out

#- 385 AdminGetBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op AdminGetBackupCodesV4 \
    --languageTag 'YJWwrRaK' \
    > test.out 2>&1
eval_tap $? 385 'AdminGetBackupCodesV4' test.out

#- 386 AdminGenerateBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op AdminGenerateBackupCodesV4 \
    --languageTag '5ldWiVf8' \
    > test.out 2>&1
eval_tap $? 386 'AdminGenerateBackupCodesV4' test.out

#- 387 AdminEnableBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op AdminEnableBackupCodesV4 \
    --languageTag 'd0FOCnPx' \
    > test.out 2>&1
eval_tap $? 387 'AdminEnableBackupCodesV4' test.out

#- 388 AdminChallengeMyMFAV4
$CLI_EXE \
    --sn iam \
    --op AdminChallengeMyMFAV4 \
    --code 'jGCu46Ah' \
    --factor 'Dsyq4bDO' \
    > test.out 2>&1
eval_tap $? 388 'AdminChallengeMyMFAV4' test.out

#- 389 AdminSendMyMFAEmailCodeV4
$CLI_EXE \
    --sn iam \
    --op AdminSendMyMFAEmailCodeV4 \
    --action 'dE28xT3H' \
    --languageTag 'FGEsTXRX' \
    > test.out 2>&1
eval_tap $? 389 'AdminSendMyMFAEmailCodeV4' test.out

#- 390 AdminDisableMyEmailV4
# body param: body
echo '{"factor": "be1bpPBt", "mfaToken": "tZJG3boL"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDisableMyEmailV4 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 390 'AdminDisableMyEmailV4' test.out

#- 391 AdminEnableMyEmailV4
$CLI_EXE \
    --sn iam \
    --op AdminEnableMyEmailV4 \
    --code 'VxSBeIxD' \
    > test.out 2>&1
eval_tap $? 391 'AdminEnableMyEmailV4' test.out

#- 392 AdminGetMyEnabledFactorsV4
$CLI_EXE \
    --sn iam \
    --op AdminGetMyEnabledFactorsV4 \
    > test.out 2>&1
eval_tap $? 392 'AdminGetMyEnabledFactorsV4' test.out

#- 393 AdminMakeFactorMyDefaultV4
$CLI_EXE \
    --sn iam \
    --op AdminMakeFactorMyDefaultV4 \
    --factor 'HciWPbpe' \
    > test.out 2>&1
eval_tap $? 393 'AdminMakeFactorMyDefaultV4' test.out

#- 394 AdminGetMyOwnMFAStatusV4
$CLI_EXE \
    --sn iam \
    --op AdminGetMyOwnMFAStatusV4 \
    > test.out 2>&1
eval_tap $? 394 'AdminGetMyOwnMFAStatusV4' test.out

#- 395 AdminGetMyMFAStatusV4
eval_tap 0 395 'AdminGetMyMFAStatusV4 # SKIP deprecated' test.out

#- 396 AdminInviteUserV4
eval_tap 0 396 'AdminInviteUserV4 # SKIP deprecated' test.out

#- 397 AuthenticationWithPlatformLinkV4
$CLI_EXE \
    --sn iam \
    --op AuthenticationWithPlatformLinkV4 \
    --extend_exp 'true' \
    --client_id 'oyJsD3pi' \
    --linkingToken '9ICsTWN5' \
    --password 'wdQgWbb8' \
    --username 'mpnRSZ48' \
    > test.out 2>&1
eval_tap $? 397 'AuthenticationWithPlatformLinkV4' test.out

#- 398 GenerateTokenByNewHeadlessAccountV4
$CLI_EXE \
    --sn iam \
    --op GenerateTokenByNewHeadlessAccountV4 \
    --additionalData 'wPHQtlEv' \
    --extend_exp 'false' \
    --linkingToken 'WdlcXdww' \
    > test.out 2>&1
eval_tap $? 398 'GenerateTokenByNewHeadlessAccountV4' test.out

#- 399 Verify2faCodeV4
$CLI_EXE \
    --sn iam \
    --op Verify2faCodeV4 \
    --code 'Ah3zp9Pw' \
    --factor 'MAfcCFvE' \
    --mfaToken 'tkrzCo9v' \
    --rememberDevice 'true' \
    > test.out 2>&1
eval_tap $? 399 'Verify2faCodeV4' test.out

#- 400 PlatformTokenGrantV4
$CLI_EXE \
    --sn iam \
    --op PlatformTokenGrantV4 \
    --platformId 'QDKVX1sX' \
    --codeChallenge 'h0l6eWb0' \
    --codeChallengeMethod 'plain' \
    --additionalData 'twlWTbiI' \
    --client_id 'EodGaFTt' \
    --createHeadless 'false' \
    --device_id 'SvV1uHLt' \
    --macAddress 'sFoMuM1y' \
    --platform_token 'TIsIwbQ1' \
    --serviceLabel '0.22030727616021462' \
    --skipSetCookie 'true' \
    > test.out 2>&1
eval_tap $? 400 'PlatformTokenGrantV4' test.out

#- 401 SimultaneousLoginV4
$CLI_EXE \
    --sn iam \
    --op SimultaneousLoginV4 \
    --codeChallenge 'mV6aO8Eh' \
    --codeChallengeMethod 'plain' \
    --simultaneousPlatform 'gS5opjnY' \
    --simultaneousTicket '1KLggm71' \
    --nativePlatform 'epicgames' \
    --nativePlatformTicket '9TNyyWMK' \
    > test.out 2>&1
eval_tap $? 401 'SimultaneousLoginV4' test.out

#- 402 TokenGrantV4
$CLI_EXE \
    --sn iam \
    --op TokenGrantV4 \
    --codeChallenge 'C4axfC0R' \
    --codeChallengeMethod 'S256' \
    --additionalData 'qNmJAmns' \
    --client_id 'IFnNtTsi' \
    --client_secret 'Kz6qhcFd' \
    --code 'jmzZb7dt' \
    --code_verifier 'Wfz5BFvn' \
    --extendNamespace 'OqOUNj6P' \
    --extend_exp 'false' \
    --login_queue_ticket 'dCINOD3T' \
    --password 'BhsP9HwQ' \
    --redirect_uri 'ObDG9jFw' \
    --refresh_token 'arpaMn0f' \
    --scope 'qPSi50kX' \
    --username 'PWVSMDpI' \
    --grant_type 'urn:ietf:params:oauth:grant-type:extend_client_credentials' \
    > test.out 2>&1
eval_tap $? 402 'TokenGrantV4' test.out

#- 403 RequestTargetTokenResponseV4
$CLI_EXE \
    --sn iam \
    --op RequestTargetTokenResponseV4 \
    --additionalData 'F8mOmEij' \
    --code '0YAL1zSl' \
    > test.out 2>&1
eval_tap $? 403 'RequestTargetTokenResponseV4' test.out

#- 404 PublicListUserIDByPlatformUserIDsV4
# body param: body
echo '{"pidType": "DyYA634w", "platformUserIds": ["KR7eIaRr", "i6sNfrbq", "o67Je7lM"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicListUserIDByPlatformUserIDsV4 \
    --namespace $AB_NAMESPACE \
    --platformId 'oUIvaIwW' \
    --rawPUID 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 404 'PublicListUserIDByPlatformUserIDsV4' test.out

#- 405 PublicGetUserByPlatformUserIDV4
$CLI_EXE \
    --sn iam \
    --op PublicGetUserByPlatformUserIDV4 \
    --namespace $AB_NAMESPACE \
    --platformId 'JRJGaLr7' \
    --platformUserId 'Cw4nFrMM' \
    > test.out 2>&1
eval_tap $? 405 'PublicGetUserByPlatformUserIDV4' test.out

#- 406 PublicCreateTestUserV4
# body param: body
echo '{"acceptedPolicies": [{"isAccepted": true, "localizedPolicyVersionId": "bv5UEphl", "policyId": "PIX8Dc8y", "policyVersionId": "17GVBisd"}, {"isAccepted": true, "localizedPolicyVersionId": "D4rVrHsl", "policyId": "kPBBhsXW", "policyVersionId": "5pAFXyis"}, {"isAccepted": false, "localizedPolicyVersionId": "pjlSKJyi", "policyId": "hXltZAF5", "policyVersionId": "bMRps1UL"}], "authType": "EMAILPASSWD", "country": "BSHQNuQo", "dateOfBirth": "8KWgrsof", "displayName": "aYulIHOx", "emailAddress": "Y66PC5VD", "password": "NY8rEl4z", "passwordMD5Sum": "CXlz105K", "uniqueDisplayName": "osGj7at8", "username": "BmpDFnMv", "verified": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicCreateTestUserV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 406 'PublicCreateTestUserV4' test.out

#- 407 PublicCreateUserV4
# body param: body
echo '{"acceptedPolicies": [{"isAccepted": true, "localizedPolicyVersionId": "A0KvSUAV", "policyId": "fE2IkNlL", "policyVersionId": "waQQEvTA"}, {"isAccepted": true, "localizedPolicyVersionId": "ud2R81qh", "policyId": "IFcAK8yB", "policyVersionId": "MBFwT50X"}, {"isAccepted": true, "localizedPolicyVersionId": "GyVhZS8l", "policyId": "A3LMPgux", "policyVersionId": "cEr9mes1"}], "authType": "EMAILPASSWD", "code": "YrgysJNN", "country": "ExjTrhfr", "dateOfBirth": "kalm22i7", "displayName": "OamXZb3X", "emailAddress": "8PRIkCnM", "password": "4BXkk6Um", "passwordMD5Sum": "ERA175JH", "reachMinimumAge": true, "uniqueDisplayName": "9TCx07L9", "username": "ck5udVcL"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicCreateUserV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 407 'PublicCreateUserV4' test.out

#- 408 CreateUserFromInvitationV4
# body param: body
echo '{"acceptedPolicies": [{"isAccepted": false, "localizedPolicyVersionId": "vzqPbOhM", "policyId": "mGmFlXn7", "policyVersionId": "KhmOlgrK"}, {"isAccepted": true, "localizedPolicyVersionId": "fsrrFcGK", "policyId": "Fc8beIlX", "policyVersionId": "TohPAC6J"}, {"isAccepted": false, "localizedPolicyVersionId": "S62MUJPB", "policyId": "eZLtZb0x", "policyVersionId": "wmnGuEfY"}], "authType": "EMAILPASSWD", "code": "MbkcQTqU", "country": "Rhl8p8EP", "dateOfBirth": "GtwlYrOy", "displayName": "RGeqSOVk", "emailAddress": "iozmfbj2", "password": "5h2ZAQm0", "passwordMD5Sum": "crVrwr7w", "reachMinimumAge": true, "uniqueDisplayName": "GBTaPJd9", "username": "3O3fXDJF"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op CreateUserFromInvitationV4 \
    --invitationId 'LaOVzD7W' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 408 'CreateUserFromInvitationV4' test.out

#- 409 PublicUpdateUserV4
# body param: body
echo '{"avatarUrl": "vGs0QMLq", "country": "Gm6IleJ4", "dateOfBirth": "jeBsRgIh", "displayName": "nSjbo1Tj", "languageTag": "bZUd2dOp", "uniqueDisplayName": "9eEGCan5", "userName": "5VD4uOMV"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpdateUserV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 409 'PublicUpdateUserV4' test.out

#- 410 PublicUpdateUserEmailAddressV4
# body param: body
echo '{"code": "vEhNipAv", "emailAddress": "1StHurBR"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpdateUserEmailAddressV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 410 'PublicUpdateUserEmailAddressV4' test.out

#- 411 PublicUpgradeHeadlessAccountWithVerificationCodeV4
# body param: body
echo '{"code": "FejPK4eJ", "country": "v2qaRLyK", "dateOfBirth": "RiB1seKN", "displayName": "MXclewdx", "emailAddress": "s0jTSqDh", "password": "Lw5jWJXv", "reachMinimumAge": false, "uniqueDisplayName": "jA2kTHcD", "username": "4IPrzkDV", "validateOnly": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpgradeHeadlessAccountWithVerificationCodeV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 411 'PublicUpgradeHeadlessAccountWithVerificationCodeV4' test.out

#- 412 PublicUpgradeHeadlessAccountV4
# body param: body
echo '{"dateOfBirth": "KD3Oww9k", "displayName": "yc0fP1fa", "emailAddress": "TK0OaHNI", "password": "Wx9GZkPH", "uniqueDisplayName": "g1dbLpDO", "username": "72bAbEfx"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpgradeHeadlessAccountV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 412 'PublicUpgradeHeadlessAccountV4' test.out

#- 413 PublicDisableMyAuthenticatorV4
# body param: body
echo '{"factor": "hwqNHppD", "mfaToken": "6Mu8SKxU"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicDisableMyAuthenticatorV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 413 'PublicDisableMyAuthenticatorV4' test.out

#- 414 PublicEnableMyAuthenticatorV4
$CLI_EXE \
    --sn iam \
    --op PublicEnableMyAuthenticatorV4 \
    --namespace $AB_NAMESPACE \
    --code 'FtxoMFuU' \
    > test.out 2>&1
eval_tap $? 414 'PublicEnableMyAuthenticatorV4' test.out

#- 415 PublicGenerateMyAuthenticatorKeyV4
$CLI_EXE \
    --sn iam \
    --op PublicGenerateMyAuthenticatorKeyV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 415 'PublicGenerateMyAuthenticatorKeyV4' test.out

#- 416 PublicGetMyBackupCodesV4
eval_tap 0 416 'PublicGetMyBackupCodesV4 # SKIP deprecated' test.out

#- 417 PublicGenerateMyBackupCodesV4
eval_tap 0 417 'PublicGenerateMyBackupCodesV4 # SKIP deprecated' test.out

#- 418 PublicDisableMyBackupCodesV4
# body param: body
echo '{"factor": "syGLg6DJ", "mfaToken": "OzBAhEhQ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicDisableMyBackupCodesV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 418 'PublicDisableMyBackupCodesV4' test.out

#- 419 PublicDownloadMyBackupCodesV4
eval_tap 0 419 'PublicDownloadMyBackupCodesV4 # SKIP deprecated' test.out

#- 420 PublicEnableMyBackupCodesV4
eval_tap 0 420 'PublicEnableMyBackupCodesV4 # SKIP deprecated' test.out

#- 421 PublicGetBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op PublicGetBackupCodesV4 \
    --namespace $AB_NAMESPACE \
    --languageTag 'IYNaxeMa' \
    > test.out 2>&1
eval_tap $? 421 'PublicGetBackupCodesV4' test.out

#- 422 PublicGenerateBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op PublicGenerateBackupCodesV4 \
    --namespace $AB_NAMESPACE \
    --languageTag '0fXpLaQo' \
    > test.out 2>&1
eval_tap $? 422 'PublicGenerateBackupCodesV4' test.out

#- 423 PublicEnableBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op PublicEnableBackupCodesV4 \
    --namespace $AB_NAMESPACE \
    --languageTag 'd566FSbO' \
    > test.out 2>&1
eval_tap $? 423 'PublicEnableBackupCodesV4' test.out

#- 424 PublicChallengeMyMFAV4
$CLI_EXE \
    --sn iam \
    --op PublicChallengeMyMFAV4 \
    --namespace $AB_NAMESPACE \
    --code '7rhZYqv3' \
    --factor '7r75sPQ0' \
    > test.out 2>&1
eval_tap $? 424 'PublicChallengeMyMFAV4' test.out

#- 425 PublicRemoveTrustedDeviceV4
$CLI_EXE \
    --sn iam \
    --op PublicRemoveTrustedDeviceV4 \
    --namespace $AB_NAMESPACE \
    --device_token 'WAJIUhBu' \
    > test.out 2>&1
eval_tap $? 425 'PublicRemoveTrustedDeviceV4' test.out

#- 426 PublicSendMyMFAEmailCodeV4
$CLI_EXE \
    --sn iam \
    --op PublicSendMyMFAEmailCodeV4 \
    --namespace $AB_NAMESPACE \
    --action 'YwBJf3N1' \
    --languageTag 'ZG7XFoI3' \
    > test.out 2>&1
eval_tap $? 426 'PublicSendMyMFAEmailCodeV4' test.out

#- 427 PublicDisableMyEmailV4
# body param: body
echo '{"factor": "oqlhwH3I", "mfaToken": "DvpiABi8"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicDisableMyEmailV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 427 'PublicDisableMyEmailV4' test.out

#- 428 PublicEnableMyEmailV4
$CLI_EXE \
    --sn iam \
    --op PublicEnableMyEmailV4 \
    --namespace $AB_NAMESPACE \
    --code 'dz45C9gg' \
    > test.out 2>&1
eval_tap $? 428 'PublicEnableMyEmailV4' test.out

#- 429 PublicGetMyEnabledFactorsV4
$CLI_EXE \
    --sn iam \
    --op PublicGetMyEnabledFactorsV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 429 'PublicGetMyEnabledFactorsV4' test.out

#- 430 PublicMakeFactorMyDefaultV4
$CLI_EXE \
    --sn iam \
    --op PublicMakeFactorMyDefaultV4 \
    --namespace $AB_NAMESPACE \
    --factor '5xEc1ClS' \
    > test.out 2>&1
eval_tap $? 430 'PublicMakeFactorMyDefaultV4' test.out

#- 431 PublicGetMyOwnMFAStatusV4
$CLI_EXE \
    --sn iam \
    --op PublicGetMyOwnMFAStatusV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 431 'PublicGetMyOwnMFAStatusV4' test.out

#- 432 PublicGetMyMFAStatusV4
eval_tap 0 432 'PublicGetMyMFAStatusV4 # SKIP deprecated' test.out

#- 433 PublicGetUserPublicInfoByUserIdV4
$CLI_EXE \
    --sn iam \
    --op PublicGetUserPublicInfoByUserIdV4 \
    --namespace $AB_NAMESPACE \
    --userId 'VFCxOSvA' \
    > test.out 2>&1
eval_tap $? 433 'PublicGetUserPublicInfoByUserIdV4' test.out

#- 434 PublicInviteUserV4
# body param: body
echo '{"additionalData": "sZiQTFEI", "emailAddress": "jLpIJsOA", "languageTag": "prcr3awR", "namespace": "leIr0m2M", "namespaceDisplayName": "BbSynHjd"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicInviteUserV4 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 434 'PublicInviteUserV4' test.out

#- 435 PublicUpgradeHeadlessWithCodeV4Forward
# body param: body
echo '{"acceptedPolicies": [{"isAccepted": true, "localizedPolicyVersionId": "ieQI1zHU", "policyId": "vWfjwYnT", "policyVersionId": "eN2IyuVF"}, {"isAccepted": false, "localizedPolicyVersionId": "rZhwkDRe", "policyId": "7YP3hvGT", "policyVersionId": "DoC5UY2N"}, {"isAccepted": true, "localizedPolicyVersionId": "tV8JSDx1", "policyId": "nwfVbYDY", "policyVersionId": "Edv2R1n1"}], "code": "bYHJNz6K", "country": "qLJwrFfk", "dateOfBirth": "Bo5Ed53t", "displayName": "nfvbN6JW", "emailAddress": "KPPnP3ES", "password": "K0gKWXzy", "reachMinimumAge": false, "uniqueDisplayName": "Tx6PnTxC", "username": "VDPZhaqn", "validateOnly": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpgradeHeadlessWithCodeV4Forward \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 435 'PublicUpgradeHeadlessWithCodeV4Forward' test.out


# remove artifacts
rm -f "$CLI_TOKEN_FILE"
rm -f "$TEMP_JSON_INPUT"
rm -f "$TEMP_FILE_UPLOAD"

exit $EXIT_CODE