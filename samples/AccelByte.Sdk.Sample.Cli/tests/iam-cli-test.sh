#!/usr/bin/env bash

# Copyright (c) 2021 AccelByte Inc. All Rights Reserved.
# This is licensed software from AccelByte Inc, for limitations
# and restrictions contact your company contract manager.

# This code is generated by tool. DO NOT EDIT.

# Meta:
# - random seed: 
# - template file: 

# Instructions:
# - Run the Justice SDK Mock Server first before running this script.

export AB_BASE_URL="http://127.0.0.1:8080"
export AB_CLIENT_ID="admin"
export AB_CLIENT_SECRET="admin"
export AB_NAMESPACE="test"
export AB_APP_NAME="UnitTest"

EXIT_CODE=0

eval_tap() {
  if [ $1 -eq 0 ]; then
    echo "ok $2 - $3"
  else
    EXIT_CODE=1
    echo "not ok $2 - $3"
    sed 's/^/# /g' $4
  fi
  rm -f $4
}

CLI_EXE="AccelByte.Sdk.Sample.Cli"
CLI_TOKEN_FILE="$(dirname "$(which $CLI_EXE)")/token.json"
TEMP_JSON_INPUT="input_json.json"
TEMP_FILE_UPLOAD="file_upload.bin"

echo "TAP version 13"
echo "1..395"

#- 1 Login
$CLI_EXE --op login --lt user --user user --pass user > test.out 2>&1
eval_tap $? 1 'Login' test.out

if [ $EXIT_CODE -ne 0 ]; then
  echo "Bail out! Login failed."
  exit $EXIT_CODE
fi

# echo "foo" > "$CLI_TOKEN_FILE"

#- 2 GetBansType
eval_tap 0 2 'GetBansType # SKIP deprecated' test.out

#- 3 GetListBanReason
eval_tap 0 3 'GetListBanReason # SKIP deprecated' test.out

#- 4 GetClients
eval_tap 0 4 'GetClients # SKIP deprecated' test.out

#- 5 CreateClient
eval_tap 0 5 'CreateClient # SKIP deprecated' test.out

#- 6 GetClient
eval_tap 0 6 'GetClient # SKIP deprecated' test.out

#- 7 UpdateClient
eval_tap 0 7 'UpdateClient # SKIP deprecated' test.out

#- 8 DeleteClient
eval_tap 0 8 'DeleteClient # SKIP deprecated' test.out

#- 9 UpdateClientPermission
eval_tap 0 9 'UpdateClientPermission # SKIP deprecated' test.out

#- 10 AddClientPermission
eval_tap 0 10 'AddClientPermission # SKIP deprecated' test.out

#- 11 DeleteClientPermission
eval_tap 0 11 'DeleteClientPermission # SKIP deprecated' test.out

#- 12 UpdateClientSecret
eval_tap 0 12 'UpdateClientSecret # SKIP deprecated' test.out

#- 13 GetClientsbyNamespace
eval_tap 0 13 'GetClientsbyNamespace # SKIP deprecated' test.out

#- 14 CreateClientByNamespace
eval_tap 0 14 'CreateClientByNamespace # SKIP deprecated' test.out

#- 15 DeleteClientByNamespace
eval_tap 0 15 'DeleteClientByNamespace # SKIP deprecated' test.out

#- 16 CreateUser
eval_tap 0 16 'CreateUser # SKIP deprecated' test.out

#- 17 GetAdminUsersByRoleID
eval_tap 0 17 'GetAdminUsersByRoleID # SKIP deprecated' test.out

#- 18 GetUserByLoginID
eval_tap 0 18 'GetUserByLoginID # SKIP deprecated' test.out

#- 19 GetUserByPlatformUserID
eval_tap 0 19 'GetUserByPlatformUserID # SKIP deprecated' test.out

#- 20 ForgotPassword
eval_tap 0 20 'ForgotPassword # SKIP deprecated' test.out

#- 21 GetUsersByLoginIds
eval_tap 0 21 'GetUsersByLoginIds # SKIP deprecated' test.out

#- 22 ResetPassword
eval_tap 0 22 'ResetPassword # SKIP deprecated' test.out

#- 23 SearchUser
eval_tap 0 23 'SearchUser # SKIP deprecated' test.out

#- 24 GetUserByUserID
eval_tap 0 24 'GetUserByUserID # SKIP deprecated' test.out

#- 25 UpdateUser
eval_tap 0 25 'UpdateUser # SKIP deprecated' test.out

#- 26 DeleteUser
eval_tap 0 26 'DeleteUser # SKIP deprecated' test.out

#- 27 BanUser
eval_tap 0 27 'BanUser # SKIP deprecated' test.out

#- 28 GetUserBanHistory
eval_tap 0 28 'GetUserBanHistory # SKIP deprecated' test.out

#- 29 DisableUserBan
eval_tap 0 29 'DisableUserBan # SKIP deprecated' test.out

#- 30 EnableUserBan
eval_tap 0 30 'EnableUserBan # SKIP deprecated' test.out

#- 31 ListCrossNamespaceAccountLink
eval_tap 0 31 'ListCrossNamespaceAccountLink # SKIP deprecated' test.out

#- 32 DisableUser
eval_tap 0 32 'DisableUser # SKIP deprecated' test.out

#- 33 EnableUser
eval_tap 0 33 'EnableUser # SKIP deprecated' test.out

#- 34 GetUserInformation
eval_tap 0 34 'GetUserInformation # SKIP deprecated' test.out

#- 35 DeleteUserInformation
eval_tap 0 35 'DeleteUserInformation # SKIP deprecated' test.out

#- 36 GetUserLoginHistories
eval_tap 0 36 'GetUserLoginHistories # SKIP deprecated' test.out

#- 37 UpdatePassword
eval_tap 0 37 'UpdatePassword # SKIP deprecated' test.out

#- 38 SaveUserPermission
eval_tap 0 38 'SaveUserPermission # SKIP deprecated' test.out

#- 39 AddUserPermission
eval_tap 0 39 'AddUserPermission # SKIP deprecated' test.out

#- 40 DeleteUserPermission
eval_tap 0 40 'DeleteUserPermission # SKIP deprecated' test.out

#- 41 GetUserPlatformAccounts
eval_tap 0 41 'GetUserPlatformAccounts # SKIP deprecated' test.out

#- 42 GetUserMapping
eval_tap 0 42 'GetUserMapping # SKIP deprecated' test.out

#- 43 GetUserJusticePlatformAccount
eval_tap 0 43 'GetUserJusticePlatformAccount # SKIP deprecated' test.out

#- 44 PlatformLink
eval_tap 0 44 'PlatformLink # SKIP deprecated' test.out

#- 45 PlatformUnlink
eval_tap 0 45 'PlatformUnlink # SKIP deprecated' test.out

#- 46 GetPublisherUser
eval_tap 0 46 'GetPublisherUser # SKIP deprecated' test.out

#- 47 SaveUserRoles
eval_tap 0 47 'SaveUserRoles # SKIP deprecated' test.out

#- 48 AddUserRole
eval_tap 0 48 'AddUserRole # SKIP deprecated' test.out

#- 49 DeleteUserRole
eval_tap 0 49 'DeleteUserRole # SKIP deprecated' test.out

#- 50 UpgradeHeadlessAccount
eval_tap 0 50 'UpgradeHeadlessAccount # SKIP deprecated' test.out

#- 51 UpgradeHeadlessAccountWithVerificationCode
eval_tap 0 51 'UpgradeHeadlessAccountWithVerificationCode # SKIP deprecated' test.out

#- 52 UserVerification
eval_tap 0 52 'UserVerification # SKIP deprecated' test.out

#- 53 SendVerificationCode
eval_tap 0 53 'SendVerificationCode # SKIP deprecated' test.out

#- 54 Authorization
eval_tap 0 54 'Authorization # SKIP deprecated' test.out

#- 55 GetJWKS
eval_tap 0 55 'GetJWKS # SKIP deprecated' test.out

#- 56 PlatformTokenRequestHandler
eval_tap 0 56 'PlatformTokenRequestHandler # SKIP deprecated' test.out

#- 57 RevokeUser
eval_tap 0 57 'RevokeUser # SKIP deprecated' test.out

#- 58 GetRevocationList
eval_tap 0 58 'GetRevocationList # SKIP deprecated' test.out

#- 59 RevokeToken
eval_tap 0 59 'RevokeToken # SKIP deprecated' test.out

#- 60 RevokeAUser
eval_tap 0 60 'RevokeAUser # SKIP deprecated' test.out

#- 61 TokenGrant
eval_tap 0 61 'TokenGrant # SKIP deprecated' test.out

#- 62 VerifyToken
eval_tap 0 62 'VerifyToken # SKIP deprecated' test.out

#- 63 GetRoles
eval_tap 0 63 'GetRoles # SKIP deprecated' test.out

#- 64 CreateRole
eval_tap 0 64 'CreateRole # SKIP deprecated' test.out

#- 65 GetRole
eval_tap 0 65 'GetRole # SKIP deprecated' test.out

#- 66 UpdateRole
eval_tap 0 66 'UpdateRole # SKIP deprecated' test.out

#- 67 DeleteRole
eval_tap 0 67 'DeleteRole # SKIP deprecated' test.out

#- 68 GetRoleAdminStatus
eval_tap 0 68 'GetRoleAdminStatus # SKIP deprecated' test.out

#- 69 SetRoleAsAdmin
eval_tap 0 69 'SetRoleAsAdmin # SKIP deprecated' test.out

#- 70 RemoveRoleAdmin
eval_tap 0 70 'RemoveRoleAdmin # SKIP deprecated' test.out

#- 71 GetRoleManagers
eval_tap 0 71 'GetRoleManagers # SKIP deprecated' test.out

#- 72 AddRoleManagers
eval_tap 0 72 'AddRoleManagers # SKIP deprecated' test.out

#- 73 RemoveRoleManagers
eval_tap 0 73 'RemoveRoleManagers # SKIP deprecated' test.out

#- 74 GetRoleMembers
eval_tap 0 74 'GetRoleMembers # SKIP deprecated' test.out

#- 75 AddRoleMembers
eval_tap 0 75 'AddRoleMembers # SKIP deprecated' test.out

#- 76 RemoveRoleMembers
eval_tap 0 76 'RemoveRoleMembers # SKIP deprecated' test.out

#- 77 UpdateRolePermissions
eval_tap 0 77 'UpdateRolePermissions # SKIP deprecated' test.out

#- 78 AddRolePermission
eval_tap 0 78 'AddRolePermission # SKIP deprecated' test.out

#- 79 DeleteRolePermission
eval_tap 0 79 'DeleteRolePermission # SKIP deprecated' test.out

#- 80 AdminGetAgeRestrictionStatusV2
eval_tap 0 80 'AdminGetAgeRestrictionStatusV2 # SKIP deprecated' test.out

#- 81 AdminUpdateAgeRestrictionConfigV2
eval_tap 0 81 'AdminUpdateAgeRestrictionConfigV2 # SKIP deprecated' test.out

#- 82 GetListCountryAgeRestriction
eval_tap 0 82 'GetListCountryAgeRestriction # SKIP deprecated' test.out

#- 83 UpdateCountryAgeRestriction
eval_tap 0 83 'UpdateCountryAgeRestriction # SKIP deprecated' test.out

#- 84 AdminSearchUsersV2
eval_tap 0 84 'AdminSearchUsersV2 # SKIP deprecated' test.out

#- 85 AdminGetUserByUserIdV2
eval_tap 0 85 'AdminGetUserByUserIdV2 # SKIP deprecated' test.out

#- 86 AdminUpdateUserV2
eval_tap 0 86 'AdminUpdateUserV2 # SKIP deprecated' test.out

#- 87 AdminBanUserV2
eval_tap 0 87 'AdminBanUserV2 # SKIP deprecated' test.out

#- 88 AdminGetUserBanV2
eval_tap 0 88 'AdminGetUserBanV2 # SKIP deprecated' test.out

#- 89 AdminDisableUserV2
eval_tap 0 89 'AdminDisableUserV2 # SKIP deprecated' test.out

#- 90 AdminEnableUserV2
eval_tap 0 90 'AdminEnableUserV2 # SKIP deprecated' test.out

#- 91 AdminResetPasswordV2
eval_tap 0 91 'AdminResetPasswordV2 # SKIP deprecated' test.out

#- 92 AdminDeletePlatformLinkV2
eval_tap 0 92 'AdminDeletePlatformLinkV2 # SKIP deprecated' test.out

#- 93 AdminPutUserRolesV2
eval_tap 0 93 'AdminPutUserRolesV2 # SKIP deprecated' test.out

#- 94 AdminCreateUserRolesV2
eval_tap 0 94 'AdminCreateUserRolesV2 # SKIP deprecated' test.out

#- 95 PublicGetCountryAgeRestriction
eval_tap 0 95 'PublicGetCountryAgeRestriction # SKIP deprecated' test.out

#- 96 PublicCreateUserV2
eval_tap 0 96 'PublicCreateUserV2 # SKIP deprecated' test.out

#- 97 PublicForgotPasswordV2
eval_tap 0 97 'PublicForgotPasswordV2 # SKIP deprecated' test.out

#- 98 PublicResetPasswordV2
eval_tap 0 98 'PublicResetPasswordV2 # SKIP deprecated' test.out

#- 99 PublicGetUserByUserIDV2
eval_tap 0 99 'PublicGetUserByUserIDV2 # SKIP deprecated' test.out

#- 100 PublicUpdateUserV2
eval_tap 0 100 'PublicUpdateUserV2 # SKIP deprecated' test.out

#- 101 PublicGetUserBan
eval_tap 0 101 'PublicGetUserBan # SKIP deprecated' test.out

#- 102 PublicUpdatePasswordV2
eval_tap 0 102 'PublicUpdatePasswordV2 # SKIP deprecated' test.out

#- 103 GetListJusticePlatformAccounts
eval_tap 0 103 'GetListJusticePlatformAccounts # SKIP deprecated' test.out

#- 104 PublicPlatformLinkV2
eval_tap 0 104 'PublicPlatformLinkV2 # SKIP deprecated' test.out

#- 105 PublicDeletePlatformLinkV2
eval_tap 0 105 'PublicDeletePlatformLinkV2 # SKIP deprecated' test.out

#- 106 AdminGetBansTypeV3
$CLI_EXE \
    --sn iam \
    --op AdminGetBansTypeV3 \
    > test.out 2>&1
eval_tap $? 106 'AdminGetBansTypeV3' test.out

#- 107 AdminGetListBanReasonV3
$CLI_EXE \
    --sn iam \
    --op AdminGetListBanReasonV3 \
    > test.out 2>&1
eval_tap $? 107 'AdminGetListBanReasonV3' test.out

#- 108 AdminListClientAvailablePermissions
$CLI_EXE \
    --sn iam \
    --op AdminListClientAvailablePermissions \
    --excludePermissions 'false' \
    > test.out 2>&1
eval_tap $? 108 'AdminListClientAvailablePermissions' test.out

#- 109 AdminUpdateAvailablePermissionsByModule
# body param: body
echo '{"modules": [{"docLink": "LRhvjTYb", "groups": [{"group": "4eNqoT6h", "groupId": "W8IQuFKk", "permissions": [{"allowedActions": [36, 50, 50], "resource": "F17xiGWr"}, {"allowedActions": [78, 39, 74], "resource": "hQxF0Neh"}, {"allowedActions": [10, 97, 85], "resource": "SbItf8Hy"}]}, {"group": "0kZPW5g6", "groupId": "S9fzbXTa", "permissions": [{"allowedActions": [71, 29, 88], "resource": "UHjaJFjF"}, {"allowedActions": [35, 40, 29], "resource": "UNIphLcW"}, {"allowedActions": [72, 22, 20], "resource": "3uZqBZov"}]}, {"group": "JMSJy1KH", "groupId": "3ROojMZw", "permissions": [{"allowedActions": [36, 83, 70], "resource": "3m0o5sTV"}, {"allowedActions": [8, 78, 99], "resource": "01o0Kgiw"}, {"allowedActions": [98, 69, 49], "resource": "l2QVkVGt"}]}], "module": "r0sDjp8P", "moduleId": "4Zoyd4VY"}, {"docLink": "YHhoEbdE", "groups": [{"group": "3fOKbCTi", "groupId": "M6aBsW1l", "permissions": [{"allowedActions": [65, 60, 49], "resource": "77NBs2xO"}, {"allowedActions": [83, 82, 81], "resource": "CHlY1tCp"}, {"allowedActions": [3, 38, 67], "resource": "osmvp00K"}]}, {"group": "wHe2wd6X", "groupId": "bEZYl5vO", "permissions": [{"allowedActions": [3, 37, 46], "resource": "tGNb8NxL"}, {"allowedActions": [1, 90, 24], "resource": "iFtKSaBf"}, {"allowedActions": [41, 15, 6], "resource": "xLqeO5XL"}]}, {"group": "b18DHTna", "groupId": "GpWnNbe8", "permissions": [{"allowedActions": [2, 91, 46], "resource": "ekWj9dkp"}, {"allowedActions": [100, 40, 8], "resource": "NhVft4rY"}, {"allowedActions": [14, 35, 59], "resource": "pqcIrXJp"}]}], "module": "rp948Ior", "moduleId": "xg53FeAa"}, {"docLink": "EKD1qTZq", "groups": [{"group": "gIeb9zM8", "groupId": "28q9671S", "permissions": [{"allowedActions": [5, 12, 62], "resource": "uB2ZrUIs"}, {"allowedActions": [21, 26, 68], "resource": "jUarX5Bj"}, {"allowedActions": [24, 64, 22], "resource": "rFUtWDPs"}]}, {"group": "lQVdAt6w", "groupId": "g1DXMndI", "permissions": [{"allowedActions": [62, 13, 0], "resource": "LE5YDlTq"}, {"allowedActions": [87, 52, 6], "resource": "laknWJZC"}, {"allowedActions": [81, 24, 29], "resource": "vHtOFnW7"}]}, {"group": "sJoTGoqN", "groupId": "VNHoDTnU", "permissions": [{"allowedActions": [15, 66, 83], "resource": "G7ss8LlN"}, {"allowedActions": [14, 100, 88], "resource": "6w88HXUR"}, {"allowedActions": [55, 56, 81], "resource": "D9BYUDAa"}]}], "module": "8nXBNtbe", "moduleId": "vUke01MM"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateAvailablePermissionsByModule \
    --forceDelete 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 109 'AdminUpdateAvailablePermissionsByModule' test.out

#- 110 AdminDeleteConfigPermissionsByGroup
# body param: body
echo '{"groupId": "tUHPnqcd", "moduleId": "JdzEoBNz"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDeleteConfigPermissionsByGroup \
    --forceDelete 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 110 'AdminDeleteConfigPermissionsByGroup' test.out

#- 111 AdminListClientTemplates
$CLI_EXE \
    --sn iam \
    --op AdminListClientTemplates \
    > test.out 2>&1
eval_tap $? 111 'AdminListClientTemplates' test.out

#- 112 AdminGetInputValidations
$CLI_EXE \
    --sn iam \
    --op AdminGetInputValidations \
    > test.out 2>&1
eval_tap $? 112 'AdminGetInputValidations' test.out

#- 113 AdminUpdateInputValidations
# body param: body
echo '[{"field": "BHrySV7O", "validation": {"allowAllSpecialCharacters": false, "allowDigit": true, "allowLetter": true, "allowSpace": true, "allowUnicode": false, "avatarConfig": {"allowedPrefixes": ["MMZ3MtSb", "lB17gDm0", "OlNDvgzD"], "preferRegex": false, "regex": "eEPMlAlw"}, "blockedWord": ["dMtN4rKL", "NYOddsre", "iv5Pbzpx"], "description": [{"language": "8Xv6uGMP", "message": ["nur6Q67x", "OGKguPJC", "FzbTHpoH"]}, {"language": "9mcm3aG9", "message": ["5tgHBgjf", "4gpeNWG3", "xsZwdoZv"]}, {"language": "MtzGSq8a", "message": ["y3he8Gsq", "2oz0DUTM", "Tz7ob7Q0"]}], "isCustomRegex": true, "letterCase": "5FH66G1U", "maxLength": 53, "maxRepeatingAlphaNum": 85, "maxRepeatingSpecialCharacter": 78, "minCharType": 19, "minLength": 70, "regex": "H4C1lUyx", "specialCharacterLocation": "EtB77OzX", "specialCharacters": ["mBthk2WD", "p4nSLXhW", "Ch8I6WbR"]}}, {"field": "QSRj9nKk", "validation": {"allowAllSpecialCharacters": true, "allowDigit": true, "allowLetter": false, "allowSpace": false, "allowUnicode": true, "avatarConfig": {"allowedPrefixes": ["wk0K61BF", "v7dLffut", "tDBpWmCb"], "preferRegex": false, "regex": "z8HUslPT"}, "blockedWord": ["uclObl4d", "M6yNIb1G", "8FOJYHUy"], "description": [{"language": "frmmelQf", "message": ["zdGJCMBp", "rKOnnHSf", "GjFOD3L2"]}, {"language": "aBpU27C8", "message": ["OWliBXTy", "VEI3C6ze", "CRHhsqWE"]}, {"language": "9T9ymniz", "message": ["jy645I0R", "UrhGq0cj", "EAHmMflE"]}], "isCustomRegex": true, "letterCase": "Qeeqn83c", "maxLength": 20, "maxRepeatingAlphaNum": 67, "maxRepeatingSpecialCharacter": 73, "minCharType": 67, "minLength": 63, "regex": "FRmTO8Mb", "specialCharacterLocation": "lEToD2jp", "specialCharacters": ["eoLFa5P1", "xP48dusz", "oCK8HEXp"]}}, {"field": "3WKNArxB", "validation": {"allowAllSpecialCharacters": true, "allowDigit": false, "allowLetter": false, "allowSpace": false, "allowUnicode": false, "avatarConfig": {"allowedPrefixes": ["lFFqb0He", "2vSXz5QP", "N1vjjNkv"], "preferRegex": true, "regex": "DKlvEvz2"}, "blockedWord": ["QEVWA6x1", "xLerFKdK", "J9QEZtm7"], "description": [{"language": "AClMnM8Q", "message": ["ERpTHR7o", "d0Jm8soP", "jq9ZJyOF"]}, {"language": "GHTvGvVx", "message": ["gV11JgVA", "KXLKNW5O", "YOevPZrx"]}, {"language": "W5Aur9r6", "message": ["sMCyHPK5", "42QVSpVX", "BUURcXeT"]}], "isCustomRegex": true, "letterCase": "c5yTN0nV", "maxLength": 95, "maxRepeatingAlphaNum": 0, "maxRepeatingSpecialCharacter": 61, "minCharType": 87, "minLength": 11, "regex": "ZsN1A7UD", "specialCharacterLocation": "3b9WSuZq", "specialCharacters": ["nu5upNNz", "FBgYPzbe", "abQlapLD"]}}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateInputValidations \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 113 'AdminUpdateInputValidations' test.out

#- 114 AdminResetInputValidations
$CLI_EXE \
    --sn iam \
    --op AdminResetInputValidations \
    --field 'WtnuZgt8' \
    > test.out 2>&1
eval_tap $? 114 'AdminResetInputValidations' test.out

#- 115 ListAdminsV3
$CLI_EXE \
    --sn iam \
    --op ListAdminsV3 \
    --namespace $AB_NAMESPACE \
    --after 'IYmruj1K' \
    --before '5me1KfsY' \
    --endDate 'rWbHW0Ld' \
    --limit '75' \
    --query 'ZJHAyqa2' \
    --roleId '1mvSrm4z' \
    --startDate 'yYIkIG1B' \
    > test.out 2>&1
eval_tap $? 115 'ListAdminsV3' test.out

#- 116 AdminGetAgeRestrictionStatusV3
$CLI_EXE \
    --sn iam \
    --op AdminGetAgeRestrictionStatusV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 116 'AdminGetAgeRestrictionStatusV3' test.out

#- 117 AdminUpdateAgeRestrictionConfigV3
# body param: body
echo '{"ageRestriction": 52, "enable": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateAgeRestrictionConfigV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 117 'AdminUpdateAgeRestrictionConfigV3' test.out

#- 118 AdminGetListCountryAgeRestrictionV3
$CLI_EXE \
    --sn iam \
    --op AdminGetListCountryAgeRestrictionV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 118 'AdminGetListCountryAgeRestrictionV3' test.out

#- 119 AdminUpdateCountryAgeRestrictionV3
# body param: body
echo '{"ageRestriction": 89}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateCountryAgeRestrictionV3 \
    --countryCode 'HQO9jaMD' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 119 'AdminUpdateCountryAgeRestrictionV3' test.out

#- 120 AdminGetBannedUsersV3
$CLI_EXE \
    --sn iam \
    --op AdminGetBannedUsersV3 \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --banType '4uC6ktCY' \
    --limit '76' \
    --offset '54' \
    > test.out 2>&1
eval_tap $? 120 'AdminGetBannedUsersV3' test.out

#- 121 AdminBanUserBulkV3
# body param: body
echo '{"ban": "Gcyg1OhG", "comment": "TT3cXjs0", "endDate": "p0WOg1a2", "reason": "c47AxRYf", "skipNotif": false, "userIds": ["WJOYjmHL", "DqMrtbrZ", "mp2WNarU"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBanUserBulkV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 121 'AdminBanUserBulkV3' test.out

#- 122 AdminUnbanUserBulkV3
# body param: body
echo '{"bans": [{"banId": "Fc98QI34", "userId": "zDYQ61K4"}, {"banId": "vfXaXuzx", "userId": "1ug9iqSU"}, {"banId": "WhrwA7Js", "userId": "m7Usv1Ss"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUnbanUserBulkV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 122 'AdminUnbanUserBulkV3' test.out

#- 123 AdminGetBansTypeWithNamespaceV3
$CLI_EXE \
    --sn iam \
    --op AdminGetBansTypeWithNamespaceV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 123 'AdminGetBansTypeWithNamespaceV3' test.out

#- 124 AdminGetClientsByNamespaceV3
$CLI_EXE \
    --sn iam \
    --op AdminGetClientsByNamespaceV3 \
    --namespace $AB_NAMESPACE \
    --clientId 'hDbhS9v4' \
    --clientName '82UwME4h' \
    --clientType 'WnEbnNIB' \
    --limit '26' \
    --offset '26' \
    --skipLoginQueue 'true' \
    > test.out 2>&1
eval_tap $? 124 'AdminGetClientsByNamespaceV3' test.out

#- 125 AdminBulkUpdateClientsV3
# body param: body
echo '{"clientIds": ["prjwuw0i", "FDLz4wsN", "OtXrSXY8"], "clientUpdateRequest": {"audiences": ["GhZhoanw", "4xdQ2qzo", "LIvT6Pay"], "baseUri": "a9qxzMwL", "clientName": "VxYkGuq5", "clientPermissions": [{"action": 25, "resource": "4mSJAM2N", "schedAction": 24, "schedCron": "7zxGz28F", "schedRange": ["sgPtBmLP", "pqyG6O8m", "dHqH845U"]}, {"action": 67, "resource": "3OyfUn1w", "schedAction": 74, "schedCron": "O125uSjg", "schedRange": ["xVLygYJK", "yFPjmFUB", "Bot1TfeX"]}, {"action": 16, "resource": "lA42WYno", "schedAction": 5, "schedCron": "iBmiPvhC", "schedRange": ["c3ptQj79", "XmYim78T", "s0LGt7ik"]}], "clientPlatform": "3NuhPrwi", "deletable": false, "description": "qvBuHdcw", "modulePermissions": [{"moduleId": "XzKItjBI", "selectedGroups": [{"groupId": "xCydptt2", "selectedActions": [38, 80, 38]}, {"groupId": "UdrumLqY", "selectedActions": [68, 19, 69]}, {"groupId": "tn1RwLb0", "selectedActions": [50, 7, 94]}]}, {"moduleId": "qbdWglHq", "selectedGroups": [{"groupId": "VLZrS4ZT", "selectedActions": [96, 58, 40]}, {"groupId": "RKzBF2xr", "selectedActions": [6, 5, 37]}, {"groupId": "jLt8b0qv", "selectedActions": [42, 1, 11]}]}, {"moduleId": "2BndVHmB", "selectedGroups": [{"groupId": "HpZKTeMI", "selectedActions": [40, 98, 74]}, {"groupId": "YdOn0cFV", "selectedActions": [19, 46, 97]}, {"groupId": "eyTuqCpa", "selectedActions": [15, 65, 84]}]}], "namespace": "KpQM7wXX", "oauthAccessTokenExpiration": 3, "oauthAccessTokenExpirationTimeUnit": "r9097MwK", "oauthRefreshTokenExpiration": 95, "oauthRefreshTokenExpirationTimeUnit": "Fkf4Mrno", "redirectUri": "wksQIL3a", "scopes": ["nnTaR5Ls", "Q1u53h2u", "UyYNBxek"], "skipLoginQueue": false, "twoFactorEnabled": true}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBulkUpdateClientsV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 125 'AdminBulkUpdateClientsV3' test.out

#- 126 AdminCreateClientV3
# body param: body
echo '{"audiences": ["jvZrlVl5", "o3mwdTZM", "5snDD3Oz"], "baseUri": "YRU27EVd", "clientId": "jhBaVTYD", "clientName": "NZn6Iorn", "clientPermissions": [{"action": 47, "resource": "J3mZgfV9", "schedAction": 85, "schedCron": "u1uxR5at", "schedRange": ["7tIbZJbd", "QSxnh5re", "FzPrBKWB"]}, {"action": 21, "resource": "VRYewOcc", "schedAction": 69, "schedCron": "eGULozex", "schedRange": ["VEYF9EPE", "3lowC3r1", "2JEXPcDD"]}, {"action": 96, "resource": "Nahw59lS", "schedAction": 95, "schedCron": "rzshnnr3", "schedRange": ["4SpV31rV", "I7HHBtbt", "4vATRNay"]}], "clientPlatform": "cIc3uwIh", "deletable": false, "description": "MZ4kjFn8", "modulePermissions": [{"moduleId": "MrxejnE0", "selectedGroups": [{"groupId": "B8FRe9FT", "selectedActions": [38, 24, 48]}, {"groupId": "YUCD4qBc", "selectedActions": [23, 65, 75]}, {"groupId": "lUNeCyIb", "selectedActions": [4, 90, 14]}]}, {"moduleId": "xyuccO1D", "selectedGroups": [{"groupId": "Kzx0K8Fc", "selectedActions": [64, 45, 40]}, {"groupId": "EbQKFpzs", "selectedActions": [3, 78, 60]}, {"groupId": "Hz8Jmimq", "selectedActions": [2, 94, 2]}]}, {"moduleId": "iWCyGFnj", "selectedGroups": [{"groupId": "llBQZolP", "selectedActions": [35, 16, 96]}, {"groupId": "eQeI8qEU", "selectedActions": [12, 72, 32]}, {"groupId": "ABhuF47o", "selectedActions": [67, 19, 76]}]}], "namespace": "c44SljqO", "oauthAccessTokenExpiration": 46, "oauthAccessTokenExpirationTimeUnit": "v7bXpda0", "oauthClientType": "jhiOYzFd", "oauthRefreshTokenExpiration": 96, "oauthRefreshTokenExpirationTimeUnit": "fFiN6nHV", "parentNamespace": "RM1pEKbR", "redirectUri": "swZtMz0v", "scopes": ["n7JsONoQ", "LSq3kYCk", "0Fr3Lmaz"], "secret": "Hn70ICFy", "skipLoginQueue": false, "twoFactorEnabled": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminCreateClientV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 126 'AdminCreateClientV3' test.out

#- 127 AdminGetClientsbyNamespacebyIDV3
$CLI_EXE \
    --sn iam \
    --op AdminGetClientsbyNamespacebyIDV3 \
    --clientId '00j8efTw' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 127 'AdminGetClientsbyNamespacebyIDV3' test.out

#- 128 AdminDeleteClientV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteClientV3 \
    --clientId 'PTMz2ZwY' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 128 'AdminDeleteClientV3' test.out

#- 129 AdminUpdateClientV3
# body param: body
echo '{"audiences": ["jvvqLcYh", "V4xIsxwe", "L7LbyRo1"], "baseUri": "19Lc27WT", "clientName": "XpeNek6z", "clientPermissions": [{"action": 52, "resource": "GOJFVJv9", "schedAction": 49, "schedCron": "3sf2JTGw", "schedRange": ["ZEjDhmNc", "49ULkXY9", "0riQtycm"]}, {"action": 81, "resource": "Od2Ej4Qh", "schedAction": 11, "schedCron": "vWd41c17", "schedRange": ["ONcYgWlZ", "S9fhVry5", "yk908RAF"]}, {"action": 59, "resource": "zDsg8DEP", "schedAction": 54, "schedCron": "lvo3XXDP", "schedRange": ["xUsMpKtZ", "A3lHnkw2", "QHwVzHS4"]}], "clientPlatform": "Rzq7FYjT", "deletable": false, "description": "OOKYZTAS", "modulePermissions": [{"moduleId": "Z5RBOfkL", "selectedGroups": [{"groupId": "g2r7Ssym", "selectedActions": [98, 16, 19]}, {"groupId": "omnyTc7P", "selectedActions": [14, 80, 74]}, {"groupId": "EUMNDThn", "selectedActions": [84, 23, 25]}]}, {"moduleId": "FjObcfmy", "selectedGroups": [{"groupId": "BGNTnT6y", "selectedActions": [2, 46, 43]}, {"groupId": "k67JMsvI", "selectedActions": [100, 55, 24]}, {"groupId": "zclDxPAv", "selectedActions": [54, 59, 73]}]}, {"moduleId": "y7PkHIWQ", "selectedGroups": [{"groupId": "k1KugBmS", "selectedActions": [53, 77, 7]}, {"groupId": "YBDX8aAk", "selectedActions": [13, 36, 95]}, {"groupId": "HZ0w6W2C", "selectedActions": [73, 92, 59]}]}], "namespace": "ejpO2H0x", "oauthAccessTokenExpiration": 7, "oauthAccessTokenExpirationTimeUnit": "vDwSNKiV", "oauthRefreshTokenExpiration": 63, "oauthRefreshTokenExpirationTimeUnit": "NyJBKk7L", "redirectUri": "5wmSTf8t", "scopes": ["g5wfqYav", "vsZzU7n0", "ykH0llfu"], "skipLoginQueue": true, "twoFactorEnabled": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateClientV3 \
    --clientId 'Fvu7mc7X' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 129 'AdminUpdateClientV3' test.out

#- 130 AdminUpdateClientPermissionV3
# body param: body
echo '{"permissions": [{"action": 96, "resource": "PafPtsO2"}, {"action": 47, "resource": "Adt9eDpe"}, {"action": 59, "resource": "mZsq5UC9"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateClientPermissionV3 \
    --clientId 'vvbKaOf4' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 130 'AdminUpdateClientPermissionV3' test.out

#- 131 AdminAddClientPermissionsV3
# body param: body
echo '{"permissions": [{"action": 2, "resource": "PXlVDS8j"}, {"action": 23, "resource": "9LYdrpMH"}, {"action": 91, "resource": "g5f1SxH6"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddClientPermissionsV3 \
    --clientId 'uHxE7Bsg' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 131 'AdminAddClientPermissionsV3' test.out

#- 132 AdminDeleteClientPermissionV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteClientPermissionV3 \
    --action '13' \
    --clientId 'l9XkA3Xm' \
    --namespace $AB_NAMESPACE \
    --resource 'kv9ZpOH3' \
    > test.out 2>&1
eval_tap $? 132 'AdminDeleteClientPermissionV3' test.out

#- 133 AdminGetConfigValueV3
$CLI_EXE \
    --sn iam \
    --op AdminGetConfigValueV3 \
    --configKey 'RnT2ArKu' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 133 'AdminGetConfigValueV3' test.out

#- 134 AdminGetCountryListV3
$CLI_EXE \
    --sn iam \
    --op AdminGetCountryListV3 \
    --namespace $AB_NAMESPACE \
    --filterBlacklist 'false' \
    > test.out 2>&1
eval_tap $? 134 'AdminGetCountryListV3' test.out

#- 135 AdminGetCountryBlacklistV3
$CLI_EXE \
    --sn iam \
    --op AdminGetCountryBlacklistV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 135 'AdminGetCountryBlacklistV3' test.out

#- 136 AdminAddCountryBlacklistV3
# body param: body
echo '{"blacklist": ["Zs6akgoS", "VZTdgT1j", "liWkrzx5"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddCountryBlacklistV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 136 'AdminAddCountryBlacklistV3' test.out

#- 137 RetrieveAllThirdPartyLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op RetrieveAllThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 137 'RetrieveAllThirdPartyLoginPlatformCredentialV3' test.out

#- 138 RetrieveAllActiveThirdPartyLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op RetrieveAllActiveThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 138 'RetrieveAllActiveThirdPartyLoginPlatformCredentialV3' test.out

#- 139 RetrieveAllSSOLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op RetrieveAllSSOLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --limit '51' \
    --offset '36' \
    > test.out 2>&1
eval_tap $? 139 'RetrieveAllSSOLoginPlatformCredentialV3' test.out

#- 140 RetrieveThirdPartyLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op RetrieveThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'UyzbKcE9' \
    > test.out 2>&1
eval_tap $? 140 'RetrieveThirdPartyLoginPlatformCredentialV3' test.out

#- 141 AddThirdPartyLoginPlatformCredentialV3
# body param: body
echo '{"ACSURL": "S3yq4l7B", "AWSCognitoRegion": "eHdIRBC1", "AWSCognitoUserPool": "ETAVj210", "AllowedClients": ["VBcseQQV", "JD9zZUIC", "314i0h4j"], "AppId": "ho0IyPOH", "AuthorizationEndpoint": "VsuouYtI", "ClientId": "jN1csoj2", "Environment": "868ZAWK2", "FederationMetadataURL": "jSPfW6zX", "GenericOauthFlow": true, "IsActive": false, "Issuer": "gvG1Rj6C", "JWKSEndpoint": "Dra0xHoi", "KeyID": "paIwR5pp", "LogoURL": "ZeRSzC57", "NetflixCertificates": {"encryptedPrivateKey": "voxgasM5", "encryptedPrivateKeyName": "dFeEPsvJ", "publicCertificate": "gJ2OANoo", "publicCertificateName": "XObEK3M4", "rootCertificate": "mJnPclrD", "rootCertificateName": "fwQv8ZzH"}, "OrganizationId": "JQtaekEg", "PlatformName": "bR954sBl", "RedirectUri": "2Qgd5Xvm", "RegisteredDomains": [{"affectedClientIDs": ["SBnHDhsx", "YkcWxEkg", "yOLRdwHJ"], "domain": "qN0OTXAz", "namespaces": ["sgBrXPNu", "fKP10Bi3", "G1fdTJvS"], "roleId": "aO4styYK"}, {"affectedClientIDs": ["32V8Kkaq", "dyii2EUD", "JYvlQb58"], "domain": "3prTvqTX", "namespaces": ["Ij8waJ6A", "0kSlWCUm", "KGkxVOmW"], "roleId": "dBIDvR4s"}, {"affectedClientIDs": ["jdsK2mqL", "FeNP0JY3", "fuNgPSvx"], "domain": "PdLCDoVO", "namespaces": ["fFSp6y5H", "bAC7d57Q", "xAfyC3RF"], "roleId": "rbmtRH3e"}], "Secret": "rmA1oKYo", "TeamID": "xK3lw0UN", "TokenAuthenticationType": "Aa8b5rcO", "TokenClaimsMapping": {"XFgHZUwb": "idK5R57w", "sC5bzJ88": "Gx8XD77t", "0HRwP8Mu": "EVXe9MuG"}, "TokenEndpoint": "78u5WO0Z", "UserInfoEndpoint": "dC1QjOfr", "UserInfoHTTPMethod": "Wi4oakbX", "scopes": ["wPwjLBLf", "kslRCBCU", "SHsZMHda"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AddThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'cpUFjKXw' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 141 'AddThirdPartyLoginPlatformCredentialV3' test.out

#- 142 DeleteThirdPartyLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op DeleteThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --platformId '1SG3UKoS' \
    > test.out 2>&1
eval_tap $? 142 'DeleteThirdPartyLoginPlatformCredentialV3' test.out

#- 143 UpdateThirdPartyLoginPlatformCredentialV3
# body param: body
echo '{"ACSURL": "xjCrKTww", "AWSCognitoRegion": "9Ch1wMzC", "AWSCognitoUserPool": "UhMlIzbJ", "AllowedClients": ["6Foc5y4i", "0HTePhoB", "TsbKiUw8"], "AppId": "HM4BgOda", "AuthorizationEndpoint": "8h3E6Dzy", "ClientId": "HXRWw9MR", "Environment": "SxU8kS6V", "FederationMetadataURL": "DcxicgtR", "GenericOauthFlow": true, "IsActive": false, "Issuer": "drJZO9Fp", "JWKSEndpoint": "ktxVddxZ", "KeyID": "Lmfb61Hb", "LogoURL": "wwzjm7F4", "NetflixCertificates": {"encryptedPrivateKey": "37BA1I1c", "encryptedPrivateKeyName": "LDVlLTHD", "publicCertificate": "8BHDCpN3", "publicCertificateName": "QO08XYL8", "rootCertificate": "9NdS59jQ", "rootCertificateName": "kjDDc4vv"}, "OrganizationId": "8YJJzUiS", "PlatformName": "SFHTk467", "RedirectUri": "kVDRGoUR", "RegisteredDomains": [{"affectedClientIDs": ["WurXZ8dq", "t6FwZBn1", "GputW4Tg"], "domain": "Or1BMGY3", "namespaces": ["hniIokGB", "aGfpGtVT", "tSRV7VHq"], "roleId": "UeyQxTCl"}, {"affectedClientIDs": ["uKRyByQb", "5Ft9C1Y2", "G8scy6Vg"], "domain": "sKFgtyK0", "namespaces": ["95IioEFU", "2gyR1VWj", "7U0EB7Ex"], "roleId": "WBQ7TuvS"}, {"affectedClientIDs": ["OcLKc5qH", "yXhi3oCy", "dkRIpwNk"], "domain": "fOwos2Le", "namespaces": ["aLlGWuxP", "SoO5Ogiq", "LZTNkOts"], "roleId": "W8Xp68uS"}], "Secret": "yA6rBizu", "TeamID": "89ztJucG", "TokenAuthenticationType": "aVphavXC", "TokenClaimsMapping": {"xxgXxMXy": "ietDxeww", "KIxnjz9I": "9czNSKhm", "C4iRLI7E": "uKNOMEli"}, "TokenEndpoint": "FwqsIA41", "UserInfoEndpoint": "t5fESP02", "UserInfoHTTPMethod": "UlafBI8j", "scopes": ["1wNmo8cV", "cCW0Y3D3", "QRz50mly"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op UpdateThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'edJpL6Es' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 143 'UpdateThirdPartyLoginPlatformCredentialV3' test.out

#- 144 UpdateThirdPartyLoginPlatformDomainV3
# body param: body
echo '{"affectedClientIDs": ["aOZtGA2K", "o5mFXCOq", "vaPhYMce"], "assignedNamespaces": ["GoPSZC4F", "YfqmSM5W", "mZdiOn8A"], "domain": "IRwG0jZj", "roleId": "sw97qjzO"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op UpdateThirdPartyLoginPlatformDomainV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'GvnEJgo1' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 144 'UpdateThirdPartyLoginPlatformDomainV3' test.out

#- 145 DeleteThirdPartyLoginPlatformDomainV3
# body param: body
echo '{"domain": "Q1Dn1QhU"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op DeleteThirdPartyLoginPlatformDomainV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'o9Mk6UdJ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 145 'DeleteThirdPartyLoginPlatformDomainV3' test.out

#- 146 RetrieveSSOLoginPlatformCredential
$CLI_EXE \
    --sn iam \
    --op RetrieveSSOLoginPlatformCredential \
    --namespace $AB_NAMESPACE \
    --platformId 'EKPwPSiC' \
    > test.out 2>&1
eval_tap $? 146 'RetrieveSSOLoginPlatformCredential' test.out

#- 147 AddSSOLoginPlatformCredential
# body param: body
echo '{"acsUrl": "hPjsXC2K", "apiKey": "rDZ4Mp8Z", "appId": "ZN1bX1Fh", "federationMetadataUrl": "IUipiTtQ", "isActive": false, "redirectUri": "BoZSMHiM", "secret": "2AA4ss19", "ssoUrl": "pmW0ZY5W"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AddSSOLoginPlatformCredential \
    --namespace $AB_NAMESPACE \
    --platformId 'urFipELC' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 147 'AddSSOLoginPlatformCredential' test.out

#- 148 DeleteSSOLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op DeleteSSOLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'OWPaygdX' \
    > test.out 2>&1
eval_tap $? 148 'DeleteSSOLoginPlatformCredentialV3' test.out

#- 149 UpdateSSOPlatformCredential
# body param: body
echo '{"acsUrl": "aZFIRLp8", "apiKey": "5BdfV5ZN", "appId": "R0O6RvfK", "federationMetadataUrl": "ZRSo2XIA", "isActive": false, "redirectUri": "Sq6tXgJG", "secret": "uPuiEjYS", "ssoUrl": "TkkfNYCj"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op UpdateSSOPlatformCredential \
    --namespace $AB_NAMESPACE \
    --platformId 'AW4ZvwUT' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 149 'UpdateSSOPlatformCredential' test.out

#- 150 AdminListUserIDByPlatformUserIDsV3
# body param: body
echo '{"platformUserIds": ["nHYtSj0p", "bsZypk8I", "VBpmtfdj"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminListUserIDByPlatformUserIDsV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'Z6EujDTy' \
    --rawPID 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 150 'AdminListUserIDByPlatformUserIDsV3' test.out

#- 151 AdminGetUserByPlatformUserIDV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserByPlatformUserIDV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'jr1qIeY2' \
    --platformUserId '8XwDhh9I' \
    > test.out 2>&1
eval_tap $? 151 'AdminGetUserByPlatformUserIDV3' test.out

#- 152 GetAdminUsersByRoleIdV3
$CLI_EXE \
    --sn iam \
    --op GetAdminUsersByRoleIdV3 \
    --namespace $AB_NAMESPACE \
    --roleId '7Dd9WoYg' \
    --after '60' \
    --before '58' \
    --limit '51' \
    > test.out 2>&1
eval_tap $? 152 'GetAdminUsersByRoleIdV3' test.out

#- 153 AdminGetUserByEmailAddressV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserByEmailAddressV3 \
    --namespace $AB_NAMESPACE \
    --emailAddress '0z3IPEIW' \
    > test.out 2>&1
eval_tap $? 153 'AdminGetUserByEmailAddressV3' test.out

#- 154 AdminBulkUpdateUsersV3
# body param: body
echo '{"updateRequest": {"skipLoginQueue": false}, "userIds": ["a7J6Lfsk", "Gqzz9Qos", "3IcWF4ez"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBulkUpdateUsersV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 154 'AdminBulkUpdateUsersV3' test.out

#- 155 AdminGetBulkUserBanV3
# body param: body
echo '{"bulkUserId": ["jQwwftIP", "myRwuwhl", "0KflsMPi"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminGetBulkUserBanV3 \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --banType 'YXq7rE3s' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 155 'AdminGetBulkUserBanV3' test.out

#- 156 AdminListUserIDByUserIDsV3
# body param: body
echo '{"userIds": ["oRo8UL8f", "rXQ6DZHs", "2JVFYxJP"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminListUserIDByUserIDsV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 156 'AdminListUserIDByUserIDsV3' test.out

#- 157 AdminBulkGetUsersPlatform
# body param: body
echo '{"userIds": ["dI2MHjHD", "33C0G7v1", "VHmcEgbb"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBulkGetUsersPlatform \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 157 'AdminBulkGetUsersPlatform' test.out

#- 158 AdminInviteUserV3
# body param: body
echo '{"emailAddresses": ["vNJgCYnf", "AkiRyJMC", "6yTMbYox"], "isAdmin": false, "namespace": "25y57hq7", "roles": ["ZTkMapVh", "s2YFFjo0", "KNyu7YyS"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminInviteUserV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 158 'AdminInviteUserV3' test.out

#- 159 AdminQueryThirdPlatformLinkHistoryV3
$CLI_EXE \
    --sn iam \
    --op AdminQueryThirdPlatformLinkHistoryV3 \
    --namespace $AB_NAMESPACE \
    --limit '15' \
    --offset '90' \
    --platformUserId 'TgHe0ETB' \
    --platformId 'kTOnYYHj' \
    > test.out 2>&1
eval_tap $? 159 'AdminQueryThirdPlatformLinkHistoryV3' test.out

#- 160 AdminListUsersV3
$CLI_EXE \
    --sn iam \
    --op AdminListUsersV3 \
    --namespace $AB_NAMESPACE \
    --limit '91' \
    --offset '70' \
    > test.out 2>&1
eval_tap $? 160 'AdminListUsersV3' test.out

#- 161 AdminSearchUserV3
$CLI_EXE \
    --sn iam \
    --op AdminSearchUserV3 \
    --namespace $AB_NAMESPACE \
    --by 'qCczIzoG' \
    --endDate 'nXN9In53' \
    --includeTotal 'true' \
    --limit '43' \
    --offset '4' \
    --platformBy 'rajjOq0E' \
    --platformId 'Cwi207X7' \
    --query '64TkRb63' \
    --roleIds 'C6acPT88' \
    --skipLoginQueue 'false' \
    --startDate 'cqhdUDFZ' \
    --testAccount 'true' \
    > test.out 2>&1
eval_tap $? 161 'AdminSearchUserV3' test.out

#- 162 AdminGetBulkUserByEmailAddressV3
# body param: body
echo '{"listEmailAddressRequest": ["cxoGB20v", "zKjpiPNv", "QaQ43H6W"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminGetBulkUserByEmailAddressV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 162 'AdminGetBulkUserByEmailAddressV3' test.out

#- 163 AdminGetUserByUserIdV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserByUserIdV3 \
    --namespace $AB_NAMESPACE \
    --userId 'hHcRrffD' \
    > test.out 2>&1
eval_tap $? 163 'AdminGetUserByUserIdV3' test.out

#- 164 AdminUpdateUserV3
# body param: body
echo '{"avatarUrl": "EGyQ2Shl", "country": "jdTNWUwr", "dateOfBirth": "SOkqL1wJ", "displayName": "fLs1IhsU", "languageTag": "eZ5p2KaB", "skipLoginQueue": true, "uniqueDisplayName": "9THvKcwn", "userName": "iDLRyFhE"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserV3 \
    --namespace $AB_NAMESPACE \
    --userId 'i0bfaBDQ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 164 'AdminUpdateUserV3' test.out

#- 165 AdminGetUserBanV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserBanV3 \
    --namespace $AB_NAMESPACE \
    --userId 'twv31plo' \
    --activeOnly 'true' \
    --after 'OiW0hAMt' \
    --before 'V6uTdeuR' \
    --limit '36' \
    > test.out 2>&1
eval_tap $? 165 'AdminGetUserBanV3' test.out

#- 166 AdminBanUserV3
# body param: body
echo '{"ban": "lHURUSvT", "comment": "LeUpz1in", "endDate": "N0R9cgzU", "reason": "WR1kzxag", "skipNotif": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBanUserV3 \
    --namespace $AB_NAMESPACE \
    --userId '4zwAgRAv' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 166 'AdminBanUserV3' test.out

#- 167 AdminGetUserBanSummaryV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserBanSummaryV3 \
    --namespace $AB_NAMESPACE \
    --userId '6akBxwul' \
    > test.out 2>&1
eval_tap $? 167 'AdminGetUserBanSummaryV3' test.out

#- 168 AdminUpdateUserBanV3
# body param: body
echo '{"enabled": true, "skipNotif": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserBanV3 \
    --banId 'nuG3ZDlK' \
    --namespace $AB_NAMESPACE \
    --userId 'Ue62QVFx' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 168 'AdminUpdateUserBanV3' test.out

#- 169 AdminSendVerificationCodeV3
# body param: body
echo '{"context": "1EgsfON5", "emailAddress": "w9bEsPxn", "languageTag": "IvIIh0Vl"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminSendVerificationCodeV3 \
    --namespace $AB_NAMESPACE \
    --userId 'SahMCcF3' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 169 'AdminSendVerificationCodeV3' test.out

#- 170 AdminVerifyAccountV3
# body param: body
echo '{"Code": "oTHLaKvV", "ContactType": "bc5mOdkE", "LanguageTag": "2M3ar7Oy", "validateOnly": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminVerifyAccountV3 \
    --namespace $AB_NAMESPACE \
    --userId 'nzlZJpw1' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 170 'AdminVerifyAccountV3' test.out

#- 171 GetUserVerificationCode
$CLI_EXE \
    --sn iam \
    --op GetUserVerificationCode \
    --namespace $AB_NAMESPACE \
    --userId 'C2Vz21ud' \
    > test.out 2>&1
eval_tap $? 171 'GetUserVerificationCode' test.out

#- 172 AdminGetUserDeletionStatusV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserDeletionStatusV3 \
    --namespace $AB_NAMESPACE \
    --userId 'tb5IepYU' \
    > test.out 2>&1
eval_tap $? 172 'AdminGetUserDeletionStatusV3' test.out

#- 173 AdminUpdateUserDeletionStatusV3
# body param: body
echo '{"deletionDate": 65, "enabled": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserDeletionStatusV3 \
    --namespace $AB_NAMESPACE \
    --userId 'PkXIJy8b' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 173 'AdminUpdateUserDeletionStatusV3' test.out

#- 174 AdminListUserAllPlatformAccountsDistinctV3
$CLI_EXE \
    --sn iam \
    --op AdminListUserAllPlatformAccountsDistinctV3 \
    --namespace $AB_NAMESPACE \
    --userId 'uDlawfcn' \
    > test.out 2>&1
eval_tap $? 174 'AdminListUserAllPlatformAccountsDistinctV3' test.out

#- 175 AdminUpgradeHeadlessAccountV3
# body param: body
echo '{"code": "Bw47CCzf", "country": "QYSP6eKG", "dateOfBirth": "Rq2ratNd", "displayName": "IJhsMKCl", "emailAddress": "vvsgVlAg", "password": "6xEpYLED", "uniqueDisplayName": "wWOi2Dg2", "validateOnly": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpgradeHeadlessAccountV3 \
    --namespace $AB_NAMESPACE \
    --userId '4zlAyOWE' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 175 'AdminUpgradeHeadlessAccountV3' test.out

#- 176 AdminDeleteUserInformationV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserInformationV3 \
    --namespace $AB_NAMESPACE \
    --userId '4WagU5yd' \
    > test.out 2>&1
eval_tap $? 176 'AdminDeleteUserInformationV3' test.out

#- 177 AdminGetUserLoginHistoriesV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserLoginHistoriesV3 \
    --namespace $AB_NAMESPACE \
    --userId 'ioLjvYvC' \
    --after '0.7324712597805838' \
    --before '0.9523822390920627' \
    --limit '51' \
    > test.out 2>&1
eval_tap $? 177 'AdminGetUserLoginHistoriesV3' test.out

#- 178 AdminResetPasswordV3
# body param: body
echo '{"languageTag": "lAXN3A1F", "newPassword": "MWzjhehI", "oldPassword": "cwyzyMkO"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminResetPasswordV3 \
    --namespace $AB_NAMESPACE \
    --userId 'ET8PWnvX' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 178 'AdminResetPasswordV3' test.out

#- 179 AdminUpdateUserPermissionV3
# body param: body
echo '{"Permissions": [{"Action": 71, "Resource": "f94njtmz", "SchedAction": 35, "SchedCron": "oHtUi6qG", "SchedRange": ["v8sJuSFD", "AZWexVCk", "hiI0ioGU"]}, {"Action": 23, "Resource": "zaTwzGIg", "SchedAction": 7, "SchedCron": "2WmQbYe5", "SchedRange": ["myq0DxMV", "oP4Bew3b", "dFt6ILlr"]}, {"Action": 82, "Resource": "jHHGyvuy", "SchedAction": 4, "SchedCron": "SzMaDxQE", "SchedRange": ["iTAVxfWQ", "m4nepbt3", "xzeG2sCA"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserPermissionV3 \
    --namespace $AB_NAMESPACE \
    --userId 'mHAz6y8S' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 179 'AdminUpdateUserPermissionV3' test.out

#- 180 AdminAddUserPermissionsV3
# body param: body
echo '{"Permissions": [{"Action": 17, "Resource": "rG146LAf", "SchedAction": 66, "SchedCron": "cfqyTtfq", "SchedRange": ["UqbTZWbt", "K21whS3e", "wEzEwQKA"]}, {"Action": 23, "Resource": "QlfGokij", "SchedAction": 87, "SchedCron": "jwGexBnm", "SchedRange": ["fRre5mbL", "FdTMdypw", "HS3t2xNV"]}, {"Action": 70, "Resource": "X72DT1U9", "SchedAction": 96, "SchedCron": "QF6VjCtB", "SchedRange": ["BpqUCe0t", "ZhTEU5kT", "q5TBGCHr"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddUserPermissionsV3 \
    --namespace $AB_NAMESPACE \
    --userId 'jIWjNsr5' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 180 'AdminAddUserPermissionsV3' test.out

#- 181 AdminDeleteUserPermissionBulkV3
# body param: body
echo '[{"Action": 42, "Resource": "LGiTxf7s"}, {"Action": 93, "Resource": "RIxzbaMN"}, {"Action": 58, "Resource": "RKIgXZBO"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserPermissionBulkV3 \
    --namespace $AB_NAMESPACE \
    --userId 'dP86PzIM' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 181 'AdminDeleteUserPermissionBulkV3' test.out

#- 182 AdminDeleteUserPermissionV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserPermissionV3 \
    --action '7' \
    --namespace $AB_NAMESPACE \
    --resource 'LhM1ryjB' \
    --userId 'UjSjJ1tg' \
    > test.out 2>&1
eval_tap $? 182 'AdminDeleteUserPermissionV3' test.out

#- 183 AdminGetUserPlatformAccountsV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserPlatformAccountsV3 \
    --namespace $AB_NAMESPACE \
    --userId 'wHVD1cD3' \
    --after '54kH4qAq' \
    --before 'AZnj1hxr' \
    --limit '2' \
    --platformId 'hyaAf0kO' \
    > test.out 2>&1
eval_tap $? 183 'AdminGetUserPlatformAccountsV3' test.out

#- 184 AdminGetListJusticePlatformAccounts
$CLI_EXE \
    --sn iam \
    --op AdminGetListJusticePlatformAccounts \
    --namespace $AB_NAMESPACE \
    --userId 'PUpJOmwB' \
    > test.out 2>&1
eval_tap $? 184 'AdminGetListJusticePlatformAccounts' test.out

#- 185 AdminGetUserMapping
$CLI_EXE \
    --sn iam \
    --op AdminGetUserMapping \
    --namespace $AB_NAMESPACE \
    --targetNamespace 'mFjNvFSa' \
    --userId 'dcoSMUwH' \
    > test.out 2>&1
eval_tap $? 185 'AdminGetUserMapping' test.out

#- 186 AdminCreateJusticeUser
$CLI_EXE \
    --sn iam \
    --op AdminCreateJusticeUser \
    --namespace $AB_NAMESPACE \
    --targetNamespace 'm3NJUY39' \
    --userId 'XGh9D6YV' \
    > test.out 2>&1
eval_tap $? 186 'AdminCreateJusticeUser' test.out

#- 187 AdminLinkPlatformAccount
# body param: body
echo '{"platformId": "yYkC5Q1d", "platformUserId": "26aj3Xss"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminLinkPlatformAccount \
    --namespace $AB_NAMESPACE \
    --userId 'PHb0L4nP' \
    --skipConflict 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 187 'AdminLinkPlatformAccount' test.out

#- 188 AdminPlatformUnlinkV3
# body param: body
echo '{"platformNamespace": "EQi9E8n5"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminPlatformUnlinkV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'x7B5wMG4' \
    --userId 'CbrCWk0K' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 188 'AdminPlatformUnlinkV3' test.out

#- 189 AdminPlatformUnlinkAllV3
$CLI_EXE \
    --sn iam \
    --op AdminPlatformUnlinkAllV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'Vmp7N0hW' \
    --userId 'Thu5ZGY9' \
    > test.out 2>&1
eval_tap $? 189 'AdminPlatformUnlinkAllV3' test.out

#- 190 AdminPlatformLinkV3
$CLI_EXE \
    --sn iam \
    --op AdminPlatformLinkV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'N38cJxM3' \
    --userId 'F5uhsel8' \
    --ticket 'ib8WTa0d' \
    > test.out 2>&1
eval_tap $? 190 'AdminPlatformLinkV3' test.out

#- 191 AdminDeleteUserLinkingHistoryByPlatformIDV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserLinkingHistoryByPlatformIDV3 \
    --namespace $AB_NAMESPACE \
    --platformId '41Jwsd3Q' \
    --userId '4ruT5Wi8' \
    > test.out 2>&1
eval_tap $? 191 'AdminDeleteUserLinkingHistoryByPlatformIDV3' test.out

#- 192 AdminGetThirdPartyPlatformTokenLinkStatusV3
$CLI_EXE \
    --sn iam \
    --op AdminGetThirdPartyPlatformTokenLinkStatusV3 \
    --namespace $AB_NAMESPACE \
    --platformId '7nLZBRwk' \
    --userId 'LzDrKlJJ' \
    --platformToken 'BEjMGLwB' \
    > test.out 2>&1
eval_tap $? 192 'AdminGetThirdPartyPlatformTokenLinkStatusV3' test.out

#- 193 AdminGetUserSinglePlatformAccount
$CLI_EXE \
    --sn iam \
    --op AdminGetUserSinglePlatformAccount \
    --namespace $AB_NAMESPACE \
    --platformId 'k10P3grE' \
    --userId 'kdLKWfl8' \
    > test.out 2>&1
eval_tap $? 193 'AdminGetUserSinglePlatformAccount' test.out

#- 194 AdminDeleteUserRolesV3
# body param: body
echo '["sVeyqZiu", "7m3Xaygw", "qtHB5Nnd"]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserRolesV3 \
    --namespace $AB_NAMESPACE \
    --userId 's7QhDXco' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 194 'AdminDeleteUserRolesV3' test.out

#- 195 AdminSaveUserRoleV3
# body param: body
echo '[{"namespace": "2FuJCVX0", "roleId": "Z0o00nxD"}, {"namespace": "TS9BQrs1", "roleId": "Osru48X6"}, {"namespace": "iCq2ReUZ", "roleId": "fwVtneDv"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminSaveUserRoleV3 \
    --namespace $AB_NAMESPACE \
    --userId 'lrMhYgKA' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 195 'AdminSaveUserRoleV3' test.out

#- 196 AdminAddUserRoleV3
$CLI_EXE \
    --sn iam \
    --op AdminAddUserRoleV3 \
    --namespace $AB_NAMESPACE \
    --roleId 'DkW4RJQd' \
    --userId '2IXT8ckY' \
    > test.out 2>&1
eval_tap $? 196 'AdminAddUserRoleV3' test.out

#- 197 AdminDeleteUserRoleV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserRoleV3 \
    --namespace $AB_NAMESPACE \
    --roleId 'ioWwTt5E' \
    --userId '4NOqdKH8' \
    > test.out 2>&1
eval_tap $? 197 'AdminDeleteUserRoleV3' test.out

#- 198 AdminUpdateUserStatusV3
# body param: body
echo '{"enabled": true, "reason": "Zj8msySr"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserStatusV3 \
    --namespace $AB_NAMESPACE \
    --userId 'x42BVDdE' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 198 'AdminUpdateUserStatusV3' test.out

#- 199 AdminTrustlyUpdateUserIdentity
# body param: body
echo '{"emailAddress": "waLPrwXh", "password": "KB8SCpRW"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminTrustlyUpdateUserIdentity \
    --namespace $AB_NAMESPACE \
    --userId 'n2vA7fac' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 199 'AdminTrustlyUpdateUserIdentity' test.out

#- 200 AdminVerifyUserWithoutVerificationCodeV3
$CLI_EXE \
    --sn iam \
    --op AdminVerifyUserWithoutVerificationCodeV3 \
    --namespace $AB_NAMESPACE \
    --userId 'X9VlfkQp' \
    > test.out 2>&1
eval_tap $? 200 'AdminVerifyUserWithoutVerificationCodeV3' test.out

#- 201 AdminUpdateClientSecretV3
# body param: body
echo '{"newSecret": "3r6nXQzd"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateClientSecretV3 \
    --clientId '0mNoycfj' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 201 'AdminUpdateClientSecretV3' test.out

#- 202 AdminCheckThirdPartyLoginPlatformAvailabilityV3
$CLI_EXE \
    --sn iam \
    --op AdminCheckThirdPartyLoginPlatformAvailabilityV3 \
    --platformId 'mPw1btra' \
    > test.out 2>&1
eval_tap $? 202 'AdminCheckThirdPartyLoginPlatformAvailabilityV3' test.out

#- 203 AdminGetRolesV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRolesV3 \
    --after 'hcK9KpaO' \
    --before 'PXVJJ9U6' \
    --isWildcard 'true' \
    --limit '9' \
    > test.out 2>&1
eval_tap $? 203 'AdminGetRolesV3' test.out

#- 204 AdminCreateRoleV3
# body param: body
echo '{"adminRole": false, "deletable": false, "isWildcard": true, "managers": [{"displayName": "We8P8r2m", "namespace": "pZxtIL4W", "userId": "sdwzR7Gt"}, {"displayName": "fdo2YjHa", "namespace": "k6c2V0ZL", "userId": "7apVvwpi"}, {"displayName": "NAMFACR7", "namespace": "jUk88sEf", "userId": "CBfEMr5v"}], "members": [{"displayName": "4LZU11GW", "namespace": "m7SiHcfi", "userId": "WFGAwQkQ"}, {"displayName": "xSrulMh3", "namespace": "MQOb64JC", "userId": "7BmuWQa6"}, {"displayName": "ZHEnz3gH", "namespace": "Uczxu37a", "userId": "gZ01ohwi"}], "permissions": [{"action": 91, "resource": "ArNWUAeL", "schedAction": 86, "schedCron": "uduG2eED", "schedRange": ["Mws6vHjX", "qc9CNyFB", "mWNP4bVg"]}, {"action": 92, "resource": "5SfRKioL", "schedAction": 44, "schedCron": "Jk0LuCGx", "schedRange": ["Bml46TeU", "01WuyGGE", "NGAuYqHI"]}, {"action": 40, "resource": "60FovrqJ", "schedAction": 76, "schedCron": "CuhlzzYO", "schedRange": ["NJeobPmQ", "IgTOmWpw", "BKC6EYUh"]}], "roleName": "yVUavt6t"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminCreateRoleV3 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 204 'AdminCreateRoleV3' test.out

#- 205 AdminGetRoleV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleV3 \
    --roleId 'BF0b1y8l' \
    > test.out 2>&1
eval_tap $? 205 'AdminGetRoleV3' test.out

#- 206 AdminDeleteRoleV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteRoleV3 \
    --roleId '92Ta0XzU' \
    > test.out 2>&1
eval_tap $? 206 'AdminDeleteRoleV3' test.out

#- 207 AdminUpdateRoleV3
# body param: body
echo '{"deletable": false, "isWildcard": true, "roleName": "sM4b3Hbb"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateRoleV3 \
    --roleId 'A5dHCXsI' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 207 'AdminUpdateRoleV3' test.out

#- 208 AdminGetRoleAdminStatusV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleAdminStatusV3 \
    --roleId 'asyw2CKk' \
    > test.out 2>&1
eval_tap $? 208 'AdminGetRoleAdminStatusV3' test.out

#- 209 AdminUpdateAdminRoleStatusV3
$CLI_EXE \
    --sn iam \
    --op AdminUpdateAdminRoleStatusV3 \
    --roleId 'ceyRBqfR' \
    > test.out 2>&1
eval_tap $? 209 'AdminUpdateAdminRoleStatusV3' test.out

#- 210 AdminRemoveRoleAdminV3
$CLI_EXE \
    --sn iam \
    --op AdminRemoveRoleAdminV3 \
    --roleId 'aaVwLc3k' \
    > test.out 2>&1
eval_tap $? 210 'AdminRemoveRoleAdminV3' test.out

#- 211 AdminGetRoleManagersV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleManagersV3 \
    --roleId 'sEiW4uF5' \
    --after 'ygU4N4Mt' \
    --before '3PPtK96F' \
    --limit '16' \
    > test.out 2>&1
eval_tap $? 211 'AdminGetRoleManagersV3' test.out

#- 212 AdminAddRoleManagersV3
# body param: body
echo '{"managers": [{"displayName": "AKWYhjMc", "namespace": "QaIhafl1", "userId": "9saPMKpn"}, {"displayName": "mLBgjzmB", "namespace": "FKI2gLYM", "userId": "unYHuIwP"}, {"displayName": "bUa6XiFr", "namespace": "CR6EKqc5", "userId": "84qQNz5l"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddRoleManagersV3 \
    --roleId 'LEUdcr1P' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 212 'AdminAddRoleManagersV3' test.out

#- 213 AdminRemoveRoleManagersV3
# body param: body
echo '{"managers": [{"displayName": "gqcSmZ3m", "namespace": "xA19IMsA", "userId": "Ifw67SY0"}, {"displayName": "PL3msn8A", "namespace": "v2R2QhGv", "userId": "3DEN8CZU"}, {"displayName": "KNTPdlKC", "namespace": "X0Luz1Ny", "userId": "rLB8LQdl"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminRemoveRoleManagersV3 \
    --roleId 'fh7WRBUj' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 213 'AdminRemoveRoleManagersV3' test.out

#- 214 AdminGetRoleMembersV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleMembersV3 \
    --roleId 'p72ZueGG' \
    --after 'Q3TEuc7K' \
    --before 'aBlcTpCQ' \
    --limit '82' \
    > test.out 2>&1
eval_tap $? 214 'AdminGetRoleMembersV3' test.out

#- 215 AdminAddRoleMembersV3
# body param: body
echo '{"members": [{"displayName": "GMsvHMTs", "namespace": "lEULBInu", "userId": "Zld4Of4j"}, {"displayName": "USCm3eFh", "namespace": "QLbg5KS8", "userId": "mDfKA0qN"}, {"displayName": "pg4WXv4w", "namespace": "uPvqjrjy", "userId": "Fdxz4b3O"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddRoleMembersV3 \
    --roleId 'zfbgjJw1' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 215 'AdminAddRoleMembersV3' test.out

#- 216 AdminRemoveRoleMembersV3
# body param: body
echo '{"members": [{"displayName": "cFNKkN1x", "namespace": "jPxkQZmY", "userId": "OKDnyuKY"}, {"displayName": "y5x9wgDh", "namespace": "A7FiQJN3", "userId": "CJ2d4hov"}, {"displayName": "tMnmcfQQ", "namespace": "TdZae7dU", "userId": "OmRPpjxu"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminRemoveRoleMembersV3 \
    --roleId 'T9UFhnY1' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 216 'AdminRemoveRoleMembersV3' test.out

#- 217 AdminUpdateRolePermissionsV3
# body param: body
echo '{"permissions": [{"action": 97, "resource": "0UdyjT6F", "schedAction": 43, "schedCron": "sOE35NRu", "schedRange": ["fV2NFt14", "NS7B8KJZ", "ZCuidcI2"]}, {"action": 63, "resource": "op0uaDsq", "schedAction": 86, "schedCron": "LkTRwnpQ", "schedRange": ["rERiE2xl", "FUu2sqMw", "YJdue5mI"]}, {"action": 0, "resource": "6O7pzOzj", "schedAction": 21, "schedCron": "fEXL9hrw", "schedRange": ["2ZqUYzWI", "NzWrXELx", "epYzHMeC"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateRolePermissionsV3 \
    --roleId 'OQWWNFEg' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 217 'AdminUpdateRolePermissionsV3' test.out

#- 218 AdminAddRolePermissionsV3
# body param: body
echo '{"permissions": [{"action": 25, "resource": "Ep0ADbIS", "schedAction": 0, "schedCron": "90ufRZth", "schedRange": ["DCECZ8eY", "Tu2KUDLa", "YVTvBsj8"]}, {"action": 46, "resource": "czViL5W9", "schedAction": 57, "schedCron": "LdHLUMcF", "schedRange": ["sRyMzxA7", "ttU0O4Qr", "WWf3AvaB"]}, {"action": 90, "resource": "DL8VWSpQ", "schedAction": 60, "schedCron": "LckxL6mi", "schedRange": ["mNeQha63", "pfj0qFif", "eAdBmSbM"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddRolePermissionsV3 \
    --roleId '9Q6miyBK' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 218 'AdminAddRolePermissionsV3' test.out

#- 219 AdminDeleteRolePermissionsV3
# body param: body
echo '["JjVR2utW", "GDAUIuyY", "zOlNY3H6"]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDeleteRolePermissionsV3 \
    --roleId '8hyZQVHG' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 219 'AdminDeleteRolePermissionsV3' test.out

#- 220 AdminDeleteRolePermissionV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteRolePermissionV3 \
    --action '78' \
    --resource 'vdTG9sRy' \
    --roleId 'VB6LvO2x' \
    > test.out 2>&1
eval_tap $? 220 'AdminDeleteRolePermissionV3' test.out

#- 221 AdminGetMyUserV3
$CLI_EXE \
    --sn iam \
    --op AdminGetMyUserV3 \
    > test.out 2>&1
eval_tap $? 221 'AdminGetMyUserV3' test.out

#- 222 UserAuthenticationV3
$CLI_EXE \
    --sn iam \
    --op UserAuthenticationV3 \
    --client_id 'iDoSIA7l' \
    --extend_exp 'true' \
    --redirect_uri 'yDespzUX' \
    --password 'akOxmX7T' \
    --request_id '7y3Ak8B6' \
    --user_name 'MEvc04UM' \
    > test.out 2>&1
eval_tap $? 222 'UserAuthenticationV3' test.out

#- 223 AuthenticationWithPlatformLinkV3
$CLI_EXE \
    --sn iam \
    --op AuthenticationWithPlatformLinkV3 \
    --extend_exp 'true' \
    --client_id 'Xok8u8wA' \
    --linkingToken 'iYOKTbnb' \
    --password 'odE3Nlqo' \
    --username 'RSo5I2N2' \
    > test.out 2>&1
eval_tap $? 223 'AuthenticationWithPlatformLinkV3' test.out

#- 224 GenerateTokenByNewHeadlessAccountV3
$CLI_EXE \
    --sn iam \
    --op GenerateTokenByNewHeadlessAccountV3 \
    --additionalData 'ksvHXss9' \
    --extend_exp 'false' \
    --linkingToken '1oV1qxFu' \
    > test.out 2>&1
eval_tap $? 224 'GenerateTokenByNewHeadlessAccountV3' test.out

#- 225 RequestOneTimeLinkingCodeV3
$CLI_EXE \
    --sn iam \
    --op RequestOneTimeLinkingCodeV3 \
    --platformId 'E5r9N1Jp' \
    > test.out 2>&1
eval_tap $? 225 'RequestOneTimeLinkingCodeV3' test.out

#- 226 ValidateOneTimeLinkingCodeV3
$CLI_EXE \
    --sn iam \
    --op ValidateOneTimeLinkingCodeV3 \
    --oneTimeLinkCode 'txCt0GyI' \
    > test.out 2>&1
eval_tap $? 226 'ValidateOneTimeLinkingCodeV3' test.out

#- 227 RequestTokenByOneTimeLinkCodeResponseV3
$CLI_EXE \
    --sn iam \
    --op RequestTokenByOneTimeLinkCodeResponseV3 \
    --additionalData 'SATnTL4B' \
    --isTransient 'true' \
    --client_id 'io5qXQO4' \
    --oneTimeLinkCode 'Y52IkDiP' \
    > test.out 2>&1
eval_tap $? 227 'RequestTokenByOneTimeLinkCodeResponseV3' test.out

#- 228 GetCountryLocationV3
$CLI_EXE \
    --sn iam \
    --op GetCountryLocationV3 \
    > test.out 2>&1
eval_tap $? 228 'GetCountryLocationV3' test.out

#- 229 Logout
$CLI_EXE \
    --sn iam \
    --op Logout \
    > test.out 2>&1
eval_tap $? 229 'Logout' test.out

#- 230 RequestTokenExchangeCodeV3
$CLI_EXE \
    --sn iam \
    --op RequestTokenExchangeCodeV3 \
    --namespace $AB_NAMESPACE \
    --codeChallenge 'LPfaiP0Y' \
    --codeChallengeMethod 'plain' \
    --client_id '23bTdrZM' \
    > test.out 2>&1
eval_tap $? 230 'RequestTokenExchangeCodeV3' test.out

#- 231 AdminRetrieveUserThirdPartyPlatformTokenV3
$CLI_EXE \
    --sn iam \
    --op AdminRetrieveUserThirdPartyPlatformTokenV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'mt6qoQKX' \
    --userId 'oe6mJrFm' \
    --platformUserId 'cnNLs9Er' \
    > test.out 2>&1
eval_tap $? 231 'AdminRetrieveUserThirdPartyPlatformTokenV3' test.out

#- 232 RevokeUserV3
$CLI_EXE \
    --sn iam \
    --op RevokeUserV3 \
    --namespace $AB_NAMESPACE \
    --userId '4Bh0KDhh' \
    --includeGameNamespace 'true' \
    > test.out 2>&1
eval_tap $? 232 'RevokeUserV3' test.out

#- 233 AuthorizeV3
$CLI_EXE \
    --sn iam \
    --op AuthorizeV3 \
    --codeChallenge 'lJn0GuXb' \
    --codeChallengeMethod 'plain' \
    --createHeadless 'true' \
    --oneTimeLinkCode '4UuxrVfI' \
    --redirectUri '9Vs7MkZe' \
    --scope 'kFT8i3uz' \
    --state 'oWAAXbdm' \
    --targetAuthPage 'xBK9G3Cj' \
    --useRedirectUriAsLoginUrlWhenLocked 'true' \
    --clientId 'LmliKIRj' \
    --responseType 'code' \
    > test.out 2>&1
eval_tap $? 233 'AuthorizeV3' test.out

#- 234 TokenIntrospectionV3
$CLI_EXE \
    --sn iam \
    --op TokenIntrospectionV3 \
    --token 'R8F1CtKk' \
    > test.out 2>&1
eval_tap $? 234 'TokenIntrospectionV3' test.out

#- 235 GetJWKSV3
$CLI_EXE \
    --sn iam \
    --op GetJWKSV3 \
    > test.out 2>&1
eval_tap $? 235 'GetJWKSV3' test.out

#- 236 SendMFAAuthenticationCode
$CLI_EXE \
    --sn iam \
    --op SendMFAAuthenticationCode \
    --clientId 'RKnPn5oO' \
    --factor '0p6Vptjx' \
    --mfaToken 'bSSM3Z6l' \
    > test.out 2>&1
eval_tap $? 236 'SendMFAAuthenticationCode' test.out

#- 237 Change2faMethod
$CLI_EXE \
    --sn iam \
    --op Change2faMethod \
    --factor 'bXCJFZR0' \
    --mfaToken 'HfaMwwT8' \
    > test.out 2>&1
eval_tap $? 237 'Change2faMethod' test.out

#- 238 Verify2faCode
$CLI_EXE \
    --sn iam \
    --op Verify2faCode \
    --code '42u2VgzA' \
    --factor '6o5GOaqa' \
    --mfaToken 'DCnzCZpa' \
    --rememberDevice 'false' \
    > test.out 2>&1
eval_tap $? 238 'Verify2faCode' test.out

#- 239 RetrieveUserThirdPartyPlatformTokenV3
$CLI_EXE \
    --sn iam \
    --op RetrieveUserThirdPartyPlatformTokenV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'BUOqJnZ9' \
    --userId 'ATXUA9ek' \
    > test.out 2>&1
eval_tap $? 239 'RetrieveUserThirdPartyPlatformTokenV3' test.out

#- 240 AuthCodeRequestV3
$CLI_EXE \
    --sn iam \
    --op AuthCodeRequestV3 \
    --platformId 'HnWctM7k' \
    --clientId 'JpdCoDc8' \
    --redirectUri 'HUGxLIDL' \
    --requestId 'PnYeH7Vk' \
    > test.out 2>&1
eval_tap $? 240 'AuthCodeRequestV3' test.out

#- 241 PlatformTokenGrantV3
$CLI_EXE \
    --sn iam \
    --op PlatformTokenGrantV3 \
    --platformId 'PyVT5fPf' \
    --additionalData 'feq7UIAm' \
    --client_id '7M4fwv1O' \
    --createHeadless 'true' \
    --device_id 'YtDRf6KJ' \
    --macAddress 'vIoSbRUm' \
    --platform_token '4TVNutNA' \
    --skipSetCookie 'true' \
    > test.out 2>&1
eval_tap $? 241 'PlatformTokenGrantV3' test.out

#- 242 GetRevocationListV3
$CLI_EXE \
    --sn iam \
    --op GetRevocationListV3 \
    > test.out 2>&1
eval_tap $? 242 'GetRevocationListV3' test.out

#- 243 TokenRevocationV3
$CLI_EXE \
    --sn iam \
    --op TokenRevocationV3 \
    --token 'W352kZ2X' \
    > test.out 2>&1
eval_tap $? 243 'TokenRevocationV3' test.out

#- 244 SimultaneousLoginV3
$CLI_EXE \
    --sn iam \
    --op SimultaneousLoginV3 \
    --simultaneousPlatform 'RGZnT6jL' \
    --simultaneousTicket 'DbknHQ1S' \
    --nativePlatform 'steam' \
    --nativePlatformTicket 'En49RmQE' \
    > test.out 2>&1
eval_tap $? 244 'SimultaneousLoginV3' test.out

#- 245 TokenGrantV3
$CLI_EXE \
    --sn iam \
    --op TokenGrantV3 \
    --additionalData 'b7J2Ied9' \
    --client_id 'jAi7ov5P' \
    --code 'YKbaavch' \
    --code_verifier 'NkAn45Pr' \
    --extendNamespace '2zkRteaz' \
    --extend_exp 'true' \
    --password 'gGPBMbTs' \
    --redirect_uri 'vhfdIL7P' \
    --refresh_token 'NqNptx8T' \
    --username 'LFSJDZtV' \
    --grant_type 'refresh_token' \
    > test.out 2>&1
eval_tap $? 245 'TokenGrantV3' test.out

#- 246 VerifyTokenV3
$CLI_EXE \
    --sn iam \
    --op VerifyTokenV3 \
    --token 'NgoGMRui' \
    > test.out 2>&1
eval_tap $? 246 'VerifyTokenV3' test.out

#- 247 PlatformAuthenticationV3
$CLI_EXE \
    --sn iam \
    --op PlatformAuthenticationV3 \
    --platformId 'ebpEnObp' \
    --code 'XHawmfZo' \
    --error '6nrorpoc' \
    --openidAssocHandle 'r7hnfJwH' \
    --openidClaimedId 'wSvXubuH' \
    --openidIdentity 'pFiN9JP9' \
    --openidMode 'Ed7AjGjv' \
    --openidNs 'bAYdARkd' \
    --openidOpEndpoint 'f7ethwpC' \
    --openidResponseNonce 'Yh6p3Vxs' \
    --openidReturnTo 'IlvFqwxQ' \
    --openidSig 's10OXSS6' \
    --openidSigned 'MnOXg0XH' \
    --state 'YhaQYlDw' \
    > test.out 2>&1
eval_tap $? 247 'PlatformAuthenticationV3' test.out

#- 248 PlatformTokenRefreshV3
$CLI_EXE \
    --sn iam \
    --op PlatformTokenRefreshV3 \
    --platformId 'waVUBx88' \
    --platform_token 'GqJQ9XV2' \
    > test.out 2>&1
eval_tap $? 248 'PlatformTokenRefreshV3' test.out

#- 249 PublicGetInputValidations
$CLI_EXE \
    --sn iam \
    --op PublicGetInputValidations \
    --defaultOnEmpty 'false' \
    --languageCode 'oxhDbGby' \
    > test.out 2>&1
eval_tap $? 249 'PublicGetInputValidations' test.out

#- 250 PublicGetInputValidationByField
$CLI_EXE \
    --sn iam \
    --op PublicGetInputValidationByField \
    --field 'CqWGolsh' \
    > test.out 2>&1
eval_tap $? 250 'PublicGetInputValidationByField' test.out

#- 251 PublicGetCountryAgeRestrictionV3
$CLI_EXE \
    --sn iam \
    --op PublicGetCountryAgeRestrictionV3 \
    --countryCode 'rS96Oa89' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 251 'PublicGetCountryAgeRestrictionV3' test.out

#- 252 PublicGetConfigValueV3
$CLI_EXE \
    --sn iam \
    --op PublicGetConfigValueV3 \
    --configKey 'j4YZNkoQ' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 252 'PublicGetConfigValueV3' test.out

#- 253 PublicGetCountryListV3
$CLI_EXE \
    --sn iam \
    --op PublicGetCountryListV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 253 'PublicGetCountryListV3' test.out

#- 254 RetrieveAllActiveThirdPartyLoginPlatformCredentialPublicV3
$CLI_EXE \
    --sn iam \
    --op RetrieveAllActiveThirdPartyLoginPlatformCredentialPublicV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 254 'RetrieveAllActiveThirdPartyLoginPlatformCredentialPublicV3' test.out

#- 255 RetrieveActiveOIDCClientsPublicV3
$CLI_EXE \
    --sn iam \
    --op RetrieveActiveOIDCClientsPublicV3 \
    --namespace $AB_NAMESPACE \
    --clientId 'iA16wOdz' \
    > test.out 2>&1
eval_tap $? 255 'RetrieveActiveOIDCClientsPublicV3' test.out

#- 256 PublicListUserIDByPlatformUserIDsV3
# body param: body
echo '{"platformUserIds": ["4e60aeUX", "gPaPrAgq", "FEfmdWFr"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicListUserIDByPlatformUserIDsV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'sM0efqGc' \
    --rawPID 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 256 'PublicListUserIDByPlatformUserIDsV3' test.out

#- 257 PublicGetUserByPlatformUserIDV3
$CLI_EXE \
    --sn iam \
    --op PublicGetUserByPlatformUserIDV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'n6e60SRI' \
    --platformUserId 'uKHSu1rD' \
    > test.out 2>&1
eval_tap $? 257 'PublicGetUserByPlatformUserIDV3' test.out

#- 258 PublicGetAsyncStatus
$CLI_EXE \
    --sn iam \
    --op PublicGetAsyncStatus \
    --namespace $AB_NAMESPACE \
    --requestId 'QjSxG9Nu' \
    > test.out 2>&1
eval_tap $? 258 'PublicGetAsyncStatus' test.out

#- 259 PublicSearchUserV3
$CLI_EXE \
    --sn iam \
    --op PublicSearchUserV3 \
    --namespace $AB_NAMESPACE \
    --by '5LF125TH' \
    --limit '22' \
    --offset '84' \
    --platformBy '0RRkd2yG' \
    --platformId 'KKq6mzJ4' \
    --query 'zt87ihgt' \
    > test.out 2>&1
eval_tap $? 259 'PublicSearchUserV3' test.out

#- 260 PublicCreateUserV3
# body param: body
echo '{"PasswordMD5Sum": "wTnUwfSN", "acceptedPolicies": [{"isAccepted": false, "localizedPolicyVersionId": "eDrG3PCA", "policyId": "NdjPYsd7", "policyVersionId": "FJh9rVCb"}, {"isAccepted": true, "localizedPolicyVersionId": "5UZ7rjZU", "policyId": "lWJnjXAv", "policyVersionId": "pyJ9yAxg"}, {"isAccepted": false, "localizedPolicyVersionId": "kxcVgFTo", "policyId": "sNZ2g8k4", "policyVersionId": "MIqQouo4"}], "authType": "bC3XjF1r", "code": "7oZEjMCS", "country": "c0kTXN4x", "dateOfBirth": "2fT8rzUf", "displayName": "rj9srisc", "emailAddress": "Ch7TE3au", "password": "Q3ZYVXqC", "reachMinimumAge": false, "uniqueDisplayName": "mOn889Lp"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicCreateUserV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 260 'PublicCreateUserV3' test.out

#- 261 CheckUserAvailability
$CLI_EXE \
    --sn iam \
    --op CheckUserAvailability \
    --namespace $AB_NAMESPACE \
    --field 'DjPq3geK' \
    --query 'dcyCyc7G' \
    > test.out 2>&1
eval_tap $? 261 'CheckUserAvailability' test.out

#- 262 PublicBulkGetUsers
# body param: body
echo '{"userIds": ["VYqCgH2i", "bqMlnogr", "zbAk1QIM"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicBulkGetUsers \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 262 'PublicBulkGetUsers' test.out

#- 263 PublicSendRegistrationCode
# body param: body
echo '{"emailAddress": "fPAQpz8f", "languageTag": "ySKj7264"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicSendRegistrationCode \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 263 'PublicSendRegistrationCode' test.out

#- 264 PublicVerifyRegistrationCode
# body param: body
echo '{"code": "pssENPrs", "emailAddress": "CZjWpTPB"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicVerifyRegistrationCode \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 264 'PublicVerifyRegistrationCode' test.out

#- 265 PublicForgotPasswordV3
# body param: body
echo '{"emailAddress": "27YAr3wO", "languageTag": "yoFM6Qid"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicForgotPasswordV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 265 'PublicForgotPasswordV3' test.out

#- 266 GetAdminInvitationV3
$CLI_EXE \
    --sn iam \
    --op GetAdminInvitationV3 \
    --invitationId 'XE0B3XhQ' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 266 'GetAdminInvitationV3' test.out

#- 267 CreateUserFromInvitationV3
# body param: body
echo '{"PasswordMD5Sum": "fZ05Gxgp", "acceptedPolicies": [{"isAccepted": false, "localizedPolicyVersionId": "GTM6qBzt", "policyId": "LDy8zzwU", "policyVersionId": "dCgVDwPS"}, {"isAccepted": true, "localizedPolicyVersionId": "rgxFJTnd", "policyId": "KmsT1a7V", "policyVersionId": "Z3UAvDRT"}, {"isAccepted": false, "localizedPolicyVersionId": "CaQX9t2V", "policyId": "UUgBojV4", "policyVersionId": "pwbcpH1P"}], "authType": "lRniLAXn", "code": "BIWvhUta", "country": "raSVcLjI", "dateOfBirth": "8UDNUUyq", "displayName": "jipuMnKQ", "emailAddress": "L0qtF4QA", "password": "uvtCthgW", "reachMinimumAge": true, "uniqueDisplayName": "7eeyVrlG"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op CreateUserFromInvitationV3 \
    --invitationId '5LEta9y8' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 267 'CreateUserFromInvitationV3' test.out

#- 268 UpdateUserV3
# body param: body
echo '{"avatarUrl": "fYWiUvO1", "country": "xNhXYNf8", "dateOfBirth": "DaArCMhk", "displayName": "gSI0G4fh", "languageTag": "xlq3714T", "uniqueDisplayName": "pUAHdBqv", "userName": "fZegyj3G"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op UpdateUserV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 268 'UpdateUserV3' test.out

#- 269 PublicPartialUpdateUserV3
# body param: body
echo '{"avatarUrl": "mHxWXgh7", "country": "ANcULPaP", "dateOfBirth": "K9TBLtM3", "displayName": "OjfyGNXH", "languageTag": "TYzficID", "uniqueDisplayName": "s4CnPefm", "userName": "LSMS0ANG"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicPartialUpdateUserV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 269 'PublicPartialUpdateUserV3' test.out

#- 270 PublicSendVerificationCodeV3
# body param: body
echo '{"context": "FdF83TLY", "emailAddress": "jyBNfJIV", "languageTag": "KeQ4UrTF"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicSendVerificationCodeV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 270 'PublicSendVerificationCodeV3' test.out

#- 271 PublicUserVerificationV3
# body param: body
echo '{"code": "JpZBqtJm", "contactType": "oZO8CDVJ", "languageTag": "krgJoL9Z", "validateOnly": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUserVerificationV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 271 'PublicUserVerificationV3' test.out

#- 272 PublicUpgradeHeadlessAccountV3
# body param: body
echo '{"code": "q53ytcAL", "country": "fe29FnzR", "dateOfBirth": "qN8cYfTa", "displayName": "7CF9fBfh", "emailAddress": "ciRfIW9t", "password": "Acog6dY1", "uniqueDisplayName": "WzBCxckm", "validateOnly": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpgradeHeadlessAccountV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 272 'PublicUpgradeHeadlessAccountV3' test.out

#- 273 PublicVerifyHeadlessAccountV3
# body param: body
echo '{"emailAddress": "BRsFXhdM", "password": "YxclG8sB"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicVerifyHeadlessAccountV3 \
    --namespace $AB_NAMESPACE \
    --needVerificationCode 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 273 'PublicVerifyHeadlessAccountV3' test.out

#- 274 PublicUpdatePasswordV3
# body param: body
echo '{"languageTag": "Dhcr7zaE", "newPassword": "rfslod61", "oldPassword": "wMAvmXkJ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpdatePasswordV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 274 'PublicUpdatePasswordV3' test.out

#- 275 PublicCreateJusticeUser
$CLI_EXE \
    --sn iam \
    --op PublicCreateJusticeUser \
    --namespace $AB_NAMESPACE \
    --targetNamespace 'KRZ7hsb6' \
    > test.out 2>&1
eval_tap $? 275 'PublicCreateJusticeUser' test.out

#- 276 PublicPlatformLinkV3
$CLI_EXE \
    --sn iam \
    --op PublicPlatformLinkV3 \
    --namespace $AB_NAMESPACE \
    --platformId '7i6mrgaI' \
    --redirectUri 'wkmTvTWh' \
    --ticket 'rysY306f' \
    > test.out 2>&1
eval_tap $? 276 'PublicPlatformLinkV3' test.out

#- 277 PublicPlatformUnlinkV3
# body param: body
echo '{"platformNamespace": "7IEs2UxS"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicPlatformUnlinkV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'FaDXOxvD' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 277 'PublicPlatformUnlinkV3' test.out

#- 278 PublicPlatformUnlinkAllV3
$CLI_EXE \
    --sn iam \
    --op PublicPlatformUnlinkAllV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'kS1Ym5Ni' \
    > test.out 2>&1
eval_tap $? 278 'PublicPlatformUnlinkAllV3' test.out

#- 279 PublicForcePlatformLinkV3
$CLI_EXE \
    --sn iam \
    --op PublicForcePlatformLinkV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'IRLNBs3Z' \
    --ticket 'gx4dZk7s' \
    > test.out 2>&1
eval_tap $? 279 'PublicForcePlatformLinkV3' test.out

#- 280 PublicWebLinkPlatform
$CLI_EXE \
    --sn iam \
    --op PublicWebLinkPlatform \
    --namespace $AB_NAMESPACE \
    --platformId 'ucHFA50v' \
    --clientId '3RwHnbBE' \
    --redirectUri 'oWcDYqGF' \
    > test.out 2>&1
eval_tap $? 280 'PublicWebLinkPlatform' test.out

#- 281 PublicWebLinkPlatformEstablish
$CLI_EXE \
    --sn iam \
    --op PublicWebLinkPlatformEstablish \
    --namespace $AB_NAMESPACE \
    --platformId 'h9BGapTC' \
    --code 'SlwYEDRI' \
    --state 'ma1CNy5q' \
    > test.out 2>&1
eval_tap $? 281 'PublicWebLinkPlatformEstablish' test.out

#- 282 PublicProcessWebLinkPlatformV3
$CLI_EXE \
    --sn iam \
    --op PublicProcessWebLinkPlatformV3 \
    --namespace $AB_NAMESPACE \
    --platformId '9sIGHIyk' \
    --code '7IedIvdg' \
    --state 'oXRC5bzL' \
    > test.out 2>&1
eval_tap $? 282 'PublicProcessWebLinkPlatformV3' test.out

#- 283 PublicGetUsersPlatformInfosV3
# body param: body
echo '{"platformId": "LQ9v87RB", "userIds": ["hbv2Fzak", "wpDULvLW", "r4G5cG9B"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicGetUsersPlatformInfosV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 283 'PublicGetUsersPlatformInfosV3' test.out

#- 284 ResetPasswordV3
# body param: body
echo '{"code": "tY4sdP3I", "emailAddress": "ZwkcP645", "newPassword": "P9jbytIy"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op ResetPasswordV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 284 'ResetPasswordV3' test.out

#- 285 PublicGetUserByUserIdV3
eval_tap 0 285 'PublicGetUserByUserIdV3 # SKIP deprecated' test.out

#- 286 PublicGetUserBanHistoryV3
$CLI_EXE \
    --sn iam \
    --op PublicGetUserBanHistoryV3 \
    --namespace $AB_NAMESPACE \
    --userId 'mlnz7Gvr' \
    --activeOnly 'true' \
    --after 'FI5IJt1j' \
    --before 'EzDkUInp' \
    --limit '0' \
    > test.out 2>&1
eval_tap $? 286 'PublicGetUserBanHistoryV3' test.out

#- 287 PublicListUserAllPlatformAccountsDistinctV3
$CLI_EXE \
    --sn iam \
    --op PublicListUserAllPlatformAccountsDistinctV3 \
    --namespace $AB_NAMESPACE \
    --userId 'mMS9r74K' \
    > test.out 2>&1
eval_tap $? 287 'PublicListUserAllPlatformAccountsDistinctV3' test.out

#- 288 PublicGetUserInformationV3
$CLI_EXE \
    --sn iam \
    --op PublicGetUserInformationV3 \
    --namespace $AB_NAMESPACE \
    --userId '4h16lEPq' \
    > test.out 2>&1
eval_tap $? 288 'PublicGetUserInformationV3' test.out

#- 289 PublicGetUserLoginHistoriesV3
$CLI_EXE \
    --sn iam \
    --op PublicGetUserLoginHistoriesV3 \
    --namespace $AB_NAMESPACE \
    --userId 'pKqrYdpj' \
    --after '0.05692274911897266' \
    --before '0.10596330742597482' \
    --limit '67' \
    > test.out 2>&1
eval_tap $? 289 'PublicGetUserLoginHistoriesV3' test.out

#- 290 PublicGetUserPlatformAccountsV3
$CLI_EXE \
    --sn iam \
    --op PublicGetUserPlatformAccountsV3 \
    --namespace $AB_NAMESPACE \
    --userId 'AzmK3MBI' \
    --after 'dGs65rDF' \
    --before 'CtMqztqA' \
    --limit '90' \
    --platformId 'IVtj5hPS' \
    > test.out 2>&1
eval_tap $? 290 'PublicGetUserPlatformAccountsV3' test.out

#- 291 PublicListJusticePlatformAccountsV3
$CLI_EXE \
    --sn iam \
    --op PublicListJusticePlatformAccountsV3 \
    --namespace $AB_NAMESPACE \
    --userId '6FEyuTyv' \
    > test.out 2>&1
eval_tap $? 291 'PublicListJusticePlatformAccountsV3' test.out

#- 292 PublicLinkPlatformAccount
# body param: body
echo '{"platformId": "zsFO8RrZ", "platformUserId": "ma56pmwd"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicLinkPlatformAccount \
    --namespace $AB_NAMESPACE \
    --userId 'HQtgdAVX' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 292 'PublicLinkPlatformAccount' test.out

#- 293 PublicForceLinkPlatformWithProgression
# body param: body
echo '{"chosenNamespaces": ["AwSJUSg6", "NxWmNWYm", "trvZ1jU2"], "requestId": "G9LjqETG"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicForceLinkPlatformWithProgression \
    --namespace $AB_NAMESPACE \
    --userId '4uT307lF' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 293 'PublicForceLinkPlatformWithProgression' test.out

#- 294 PublicGetPublisherUserV3
$CLI_EXE \
    --sn iam \
    --op PublicGetPublisherUserV3 \
    --namespace $AB_NAMESPACE \
    --userId 'lehPRJJ2' \
    > test.out 2>&1
eval_tap $? 294 'PublicGetPublisherUserV3' test.out

#- 295 PublicValidateUserByUserIDAndPasswordV3
$CLI_EXE \
    --sn iam \
    --op PublicValidateUserByUserIDAndPasswordV3 \
    --namespace $AB_NAMESPACE \
    --userId 'mmCC677u' \
    --password 'oouMSuEZ' \
    > test.out 2>&1
eval_tap $? 295 'PublicValidateUserByUserIDAndPasswordV3' test.out

#- 296 PublicGetRolesV3
$CLI_EXE \
    --sn iam \
    --op PublicGetRolesV3 \
    --after 'YaXUSJoA' \
    --before 'YNCVQZUH' \
    --isWildcard 'true' \
    --limit '18' \
    > test.out 2>&1
eval_tap $? 296 'PublicGetRolesV3' test.out

#- 297 PublicGetRoleV3
$CLI_EXE \
    --sn iam \
    --op PublicGetRoleV3 \
    --roleId 'i5XjARsO' \
    > test.out 2>&1
eval_tap $? 297 'PublicGetRoleV3' test.out

#- 298 PublicGetMyUserV3
$CLI_EXE \
    --sn iam \
    --op PublicGetMyUserV3 \
    --includeAllPlatforms 'true' \
    > test.out 2>&1
eval_tap $? 298 'PublicGetMyUserV3' test.out

#- 299 PublicGetLinkHeadlessAccountToMyAccountConflictV3
$CLI_EXE \
    --sn iam \
    --op PublicGetLinkHeadlessAccountToMyAccountConflictV3 \
    --oneTimeLinkCode 'ac4raeoa' \
    > test.out 2>&1
eval_tap $? 299 'PublicGetLinkHeadlessAccountToMyAccountConflictV3' test.out

#- 300 LinkHeadlessAccountToMyAccountV3
# body param: body
echo '{"chosenNamespaces": ["FhGzDB6D", "Rc7JduXX", "LuhYzFdN"], "oneTimeLinkCode": "pbfCptP6"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op LinkHeadlessAccountToMyAccountV3 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 300 'LinkHeadlessAccountToMyAccountV3' test.out

#- 301 PublicSendVerificationLinkV3
# body param: body
echo '{"languageTag": "rYxSNVDD"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicSendVerificationLinkV3 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 301 'PublicSendVerificationLinkV3' test.out

#- 302 PublicVerifyUserByLinkV3
$CLI_EXE \
    --sn iam \
    --op PublicVerifyUserByLinkV3 \
    --code 'bJxAnvaa' \
    > test.out 2>&1
eval_tap $? 302 'PublicVerifyUserByLinkV3' test.out

#- 303 PlatformAuthenticateSAMLV3Handler
$CLI_EXE \
    --sn iam \
    --op PlatformAuthenticateSAMLV3Handler \
    --platformId 'hyzhyfkg' \
    --code 'xeViod3f' \
    --error 'oi2IvEOt' \
    --state '3KVERMPE' \
    > test.out 2>&1
eval_tap $? 303 'PlatformAuthenticateSAMLV3Handler' test.out

#- 304 LoginSSOClient
$CLI_EXE \
    --sn iam \
    --op LoginSSOClient \
    --platformId 'SRggTzs1' \
    --payload 'LcXsRP6S' \
    > test.out 2>&1
eval_tap $? 304 'LoginSSOClient' test.out

#- 305 LogoutSSOClient
$CLI_EXE \
    --sn iam \
    --op LogoutSSOClient \
    --platformId 'lZUhsjeX' \
    > test.out 2>&1
eval_tap $? 305 'LogoutSSOClient' test.out

#- 306 RequestTargetTokenResponseV3
$CLI_EXE \
    --sn iam \
    --op RequestTargetTokenResponseV3 \
    --additionalData 'gJ5psdGN' \
    --code 'y7kz1a29' \
    > test.out 2>&1
eval_tap $? 306 'RequestTargetTokenResponseV3' test.out

#- 307 AdminListInvitationHistoriesV4
$CLI_EXE \
    --sn iam \
    --op AdminListInvitationHistoriesV4 \
    --limit '47' \
    --namespace_ 'on8Yp2MQ' \
    --offset '44' \
    > test.out 2>&1
eval_tap $? 307 'AdminListInvitationHistoriesV4' test.out

#- 308 AdminGetDevicesByUserV4
$CLI_EXE \
    --sn iam \
    --op AdminGetDevicesByUserV4 \
    --namespace $AB_NAMESPACE \
    --userId 'kPnBuN8v' \
    > test.out 2>&1
eval_tap $? 308 'AdminGetDevicesByUserV4' test.out

#- 309 AdminGetBannedDevicesV4
$CLI_EXE \
    --sn iam \
    --op AdminGetBannedDevicesV4 \
    --namespace $AB_NAMESPACE \
    --deviceType '4YeqftOs' \
    --endDate 'aoms3u96' \
    --limit '56' \
    --offset '61' \
    --startDate 'tdcOmPRQ' \
    > test.out 2>&1
eval_tap $? 309 'AdminGetBannedDevicesV4' test.out

#- 310 AdminGetUserDeviceBansV4
$CLI_EXE \
    --sn iam \
    --op AdminGetUserDeviceBansV4 \
    --namespace $AB_NAMESPACE \
    --userId 'VqHUztkn' \
    > test.out 2>&1
eval_tap $? 310 'AdminGetUserDeviceBansV4' test.out

#- 311 AdminBanDeviceV4
# body param: body
echo '{"comment": "RxE0ntpq", "deviceId": "kayIDsdj", "deviceType": "Jb8jRP0I", "enabled": true, "endDate": "vYIuSJyH", "ext": {"FTiSjLWu": {}, "8LVRKRT2": {}, "gW2ZVfds": {}}, "reason": "pKvll1fD"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBanDeviceV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 311 'AdminBanDeviceV4' test.out

#- 312 AdminGetDeviceBanV4
$CLI_EXE \
    --sn iam \
    --op AdminGetDeviceBanV4 \
    --banId 'oayvqBKC' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 312 'AdminGetDeviceBanV4' test.out

#- 313 AdminUpdateDeviceBanV4
# body param: body
echo '{"enabled": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateDeviceBanV4 \
    --banId '7VCGH57L' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 313 'AdminUpdateDeviceBanV4' test.out

#- 314 AdminGenerateReportV4
$CLI_EXE \
    --sn iam \
    --op AdminGenerateReportV4 \
    --namespace $AB_NAMESPACE \
    --endDate '7NBt0Ko2' \
    --startDate '9456jXQp' \
    --deviceType 'ZOU9fvvM' \
    > test.out 2>&1
eval_tap $? 314 'AdminGenerateReportV4' test.out

#- 315 AdminGetDeviceTypesV4
$CLI_EXE \
    --sn iam \
    --op AdminGetDeviceTypesV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 315 'AdminGetDeviceTypesV4' test.out

#- 316 AdminGetDeviceBansV4
$CLI_EXE \
    --sn iam \
    --op AdminGetDeviceBansV4 \
    --deviceId 'QtxPnP3F' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 316 'AdminGetDeviceBansV4' test.out

#- 317 AdminDecryptDeviceV4
$CLI_EXE \
    --sn iam \
    --op AdminDecryptDeviceV4 \
    --deviceId 'UnoDhf41' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 317 'AdminDecryptDeviceV4' test.out

#- 318 AdminUnbanDeviceV4
$CLI_EXE \
    --sn iam \
    --op AdminUnbanDeviceV4 \
    --deviceId 'fNSSz5Nz' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 318 'AdminUnbanDeviceV4' test.out

#- 319 AdminGetUsersByDeviceV4
$CLI_EXE \
    --sn iam \
    --op AdminGetUsersByDeviceV4 \
    --deviceId 'IimdvikO' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 319 'AdminGetUsersByDeviceV4' test.out

#- 320 AdminGetNamespaceInvitationHistoryV4
$CLI_EXE \
    --sn iam \
    --op AdminGetNamespaceInvitationHistoryV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 320 'AdminGetNamespaceInvitationHistoryV4' test.out

#- 321 AdminGetNamespaceUserInvitationHistoryV4
$CLI_EXE \
    --sn iam \
    --op AdminGetNamespaceUserInvitationHistoryV4 \
    --namespace $AB_NAMESPACE \
    --limit '84' \
    --offset '53' \
    > test.out 2>&1
eval_tap $? 321 'AdminGetNamespaceUserInvitationHistoryV4' test.out

#- 322 AdminCreateTestUsersV4
# body param: body
echo '{"count": 67}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminCreateTestUsersV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 322 'AdminCreateTestUsersV4' test.out

#- 323 AdminCreateUserV4
# body param: body
echo '{"acceptedPolicies": [{"isAccepted": false, "localizedPolicyVersionId": "m0MTvWEO", "policyId": "UNnczBdc", "policyVersionId": "2A6CEm74"}, {"isAccepted": true, "localizedPolicyVersionId": "27cgfTTX", "policyId": "6w8525DD", "policyVersionId": "SUokU2YE"}, {"isAccepted": true, "localizedPolicyVersionId": "6VdONWsl", "policyId": "SncJSb5s", "policyVersionId": "ionqcjqE"}], "authType": "EMAILPASSWD", "code": "RNeugF6c", "country": "fEhhEZOM", "dateOfBirth": "YQ9wpRoR", "displayName": "pMLCQFiG", "emailAddress": "75QhZcr4", "password": "NMflqiFl", "passwordMD5Sum": "zRtnKWeL", "reachMinimumAge": false, "uniqueDisplayName": "b9JqZ7e8", "username": "dl02QX9T"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminCreateUserV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 323 'AdminCreateUserV4' test.out

#- 324 AdminBulkUpdateUserAccountTypeV4
# body param: body
echo '{"testAccount": true, "userIds": ["YYxM3cUO", "Bf7Re3NP", "TQ2h7YsH"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBulkUpdateUserAccountTypeV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 324 'AdminBulkUpdateUserAccountTypeV4' test.out

#- 325 AdminBulkCheckValidUserIDV4
# body param: body
echo '{"userIds": ["UCpO1nf5", "LkmVFtZ6", "LcreuZlp"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBulkCheckValidUserIDV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 325 'AdminBulkCheckValidUserIDV4' test.out

#- 326 AdminUpdateUserV4
# body param: body
echo '{"avatarUrl": "7wXBbvIL", "country": "jZ7o01WI", "dateOfBirth": "VNEUZ3Cn", "displayName": "WaMHj3t4", "languageTag": "EQuiddoR", "skipLoginQueue": true, "uniqueDisplayName": "HWmpjPzD", "userName": "1ZlWG9XR"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserV4 \
    --namespace $AB_NAMESPACE \
    --userId 'wlxAA0O3' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 326 'AdminUpdateUserV4' test.out

#- 327 AdminUpdateUserEmailAddressV4
# body param: body
echo '{"code": "sARSJMzr", "emailAddress": "wDDTsxtR"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserEmailAddressV4 \
    --namespace $AB_NAMESPACE \
    --userId '1Q0ctW5L' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 327 'AdminUpdateUserEmailAddressV4' test.out

#- 328 AdminDisableUserMFAV4
$CLI_EXE \
    --sn iam \
    --op AdminDisableUserMFAV4 \
    --namespace $AB_NAMESPACE \
    --userId 'UU7FMMe0' \
    > test.out 2>&1
eval_tap $? 328 'AdminDisableUserMFAV4' test.out

#- 329 AdminListUserRolesV4
$CLI_EXE \
    --sn iam \
    --op AdminListUserRolesV4 \
    --namespace $AB_NAMESPACE \
    --userId 'naHjm6WV' \
    > test.out 2>&1
eval_tap $? 329 'AdminListUserRolesV4' test.out

#- 330 AdminUpdateUserRoleV4
# body param: body
echo '{"assignedNamespaces": ["AegjHLaQ", "gSFs72UK", "LVvUwcmx"], "roleId": "V9J0TLJv"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserRoleV4 \
    --namespace $AB_NAMESPACE \
    --userId 'RcrBsMQ4' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 330 'AdminUpdateUserRoleV4' test.out

#- 331 AdminAddUserRoleV4
# body param: body
echo '{"assignedNamespaces": ["NwnBi6x1", "5HNmzMkC", "5l2kcJd1"], "roleId": "EqRNpOb7"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddUserRoleV4 \
    --namespace $AB_NAMESPACE \
    --userId 'bkXhUNKi' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 331 'AdminAddUserRoleV4' test.out

#- 332 AdminRemoveUserRoleV4
# body param: body
echo '{"assignedNamespaces": ["FGW7jNlX", "XltZsfC7", "NQUoXqYl"], "roleId": "p9O2s6xn"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminRemoveUserRoleV4 \
    --namespace $AB_NAMESPACE \
    --userId 'O6h1HyWa' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 332 'AdminRemoveUserRoleV4' test.out

#- 333 AdminGetRolesV4
$CLI_EXE \
    --sn iam \
    --op AdminGetRolesV4 \
    --adminRole 'true' \
    --isWildcard 'true' \
    --limit '70' \
    --offset '69' \
    > test.out 2>&1
eval_tap $? 333 'AdminGetRolesV4' test.out

#- 334 AdminCreateRoleV4
# body param: body
echo '{"adminRole": false, "deletable": true, "isWildcard": true, "roleName": "2IG85D76"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminCreateRoleV4 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 334 'AdminCreateRoleV4' test.out

#- 335 AdminGetRoleV4
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleV4 \
    --roleId 'MrF445pz' \
    > test.out 2>&1
eval_tap $? 335 'AdminGetRoleV4' test.out

#- 336 AdminDeleteRoleV4
$CLI_EXE \
    --sn iam \
    --op AdminDeleteRoleV4 \
    --roleId 'JQRbxtDm' \
    > test.out 2>&1
eval_tap $? 336 'AdminDeleteRoleV4' test.out

#- 337 AdminUpdateRoleV4
# body param: body
echo '{"adminRole": false, "deletable": false, "isWildcard": true, "roleName": "uo1FJNzb"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateRoleV4 \
    --roleId 'UWI8WRLj' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 337 'AdminUpdateRoleV4' test.out

#- 338 AdminUpdateRolePermissionsV4
# body param: body
echo '{"permissions": [{"action": 70, "resource": "jw90pRTf", "schedAction": 99, "schedCron": "aHHK2iny", "schedRange": ["ev8g0HYy", "tzIQUIj2", "29I9oFw7"]}, {"action": 35, "resource": "BVZKUAvd", "schedAction": 52, "schedCron": "CBHsLyGh", "schedRange": ["V2rqQqIe", "bm3xzbpS", "N3b60TKX"]}, {"action": 85, "resource": "GWFLTWjB", "schedAction": 4, "schedCron": "udV4eOhx", "schedRange": ["9n83lj5f", "rzecQXXo", "XclLW9bB"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateRolePermissionsV4 \
    --roleId 'QCe14WMK' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 338 'AdminUpdateRolePermissionsV4' test.out

#- 339 AdminAddRolePermissionsV4
# body param: body
echo '{"permissions": [{"action": 17, "resource": "064V3y3z", "schedAction": 96, "schedCron": "lNmAHw0J", "schedRange": ["5lWtI4Bs", "hYfatUZv", "oy0pfyUy"]}, {"action": 23, "resource": "PBFyxQpV", "schedAction": 25, "schedCron": "uRx7qxUX", "schedRange": ["oQLO1JFH", "KNgfN0Dn", "y9EZgWsH"]}, {"action": 51, "resource": "ehi2kJVP", "schedAction": 79, "schedCron": "90OyLFyy", "schedRange": ["PIIkKVMp", "HydvJ5ec", "TvRAxbq3"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddRolePermissionsV4 \
    --roleId 'XnWlJQvR' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 339 'AdminAddRolePermissionsV4' test.out

#- 340 AdminDeleteRolePermissionsV4
# body param: body
echo '["KfQQt9YX", "YMEIybUL", "2tSBjimw"]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDeleteRolePermissionsV4 \
    --roleId 'FSu7aIgv' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 340 'AdminDeleteRolePermissionsV4' test.out

#- 341 AdminListAssignedUsersV4
$CLI_EXE \
    --sn iam \
    --op AdminListAssignedUsersV4 \
    --roleId 'BHQReq8I' \
    --after 'W20pkUYV' \
    --before '2hEuDpYV' \
    --limit '98' \
    > test.out 2>&1
eval_tap $? 341 'AdminListAssignedUsersV4' test.out

#- 342 AdminAssignUserToRoleV4
# body param: body
echo '{"assignedNamespaces": ["f1ig4tU4", "8QiVwQnS", "KqDmccOs"], "namespace": "EyqADJJa", "userId": "QZrFCO8b"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAssignUserToRoleV4 \
    --roleId 'bx19QJ7c' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 342 'AdminAssignUserToRoleV4' test.out

#- 343 AdminRevokeUserFromRoleV4
# body param: body
echo '{"namespace": "DqxpdFeP", "userId": "lFJAa5ML"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminRevokeUserFromRoleV4 \
    --roleId '5gi5M55j' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 343 'AdminRevokeUserFromRoleV4' test.out

#- 344 AdminInviteUserNewV4
# body param: body
echo '{"assignedNamespaces": ["XVTsK1Aj", "rZI28naX", "knqhbPA9"], "emailAddresses": ["RMSnKN6U", "0Mm8aF3v", "foKmxNMD"], "isAdmin": true, "isNewStudio": true, "namespace": "tHEh9I7D", "roleId": "JptLWG91"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminInviteUserNewV4 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 344 'AdminInviteUserNewV4' test.out

#- 345 AdminUpdateMyUserV4
# body param: body
echo '{"avatarUrl": "9ojn0hXX", "country": "eAfD1bCi", "dateOfBirth": "u9dG6gCi", "displayName": "X9yaM5Oy", "languageTag": "XmvD5Yfs", "skipLoginQueue": false, "uniqueDisplayName": "9PMOlseK", "userName": "4UUzpeNW"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateMyUserV4 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 345 'AdminUpdateMyUserV4' test.out

#- 346 AdminDisableMyAuthenticatorV4
$CLI_EXE \
    --sn iam \
    --op AdminDisableMyAuthenticatorV4 \
    > test.out 2>&1
eval_tap $? 346 'AdminDisableMyAuthenticatorV4' test.out

#- 347 AdminEnableMyAuthenticatorV4
$CLI_EXE \
    --sn iam \
    --op AdminEnableMyAuthenticatorV4 \
    --code 'PobfJAGl' \
    > test.out 2>&1
eval_tap $? 347 'AdminEnableMyAuthenticatorV4' test.out

#- 348 AdminGenerateMyAuthenticatorKeyV4
$CLI_EXE \
    --sn iam \
    --op AdminGenerateMyAuthenticatorKeyV4 \
    > test.out 2>&1
eval_tap $? 348 'AdminGenerateMyAuthenticatorKeyV4' test.out

#- 349 AdminGetMyBackupCodesV4
eval_tap 0 349 'AdminGetMyBackupCodesV4 # SKIP deprecated' test.out

#- 350 AdminGenerateMyBackupCodesV4
eval_tap 0 350 'AdminGenerateMyBackupCodesV4 # SKIP deprecated' test.out

#- 351 AdminDisableMyBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op AdminDisableMyBackupCodesV4 \
    > test.out 2>&1
eval_tap $? 351 'AdminDisableMyBackupCodesV4' test.out

#- 352 AdminDownloadMyBackupCodesV4
eval_tap 0 352 'AdminDownloadMyBackupCodesV4 # SKIP deprecated' test.out

#- 353 AdminEnableMyBackupCodesV4
eval_tap 0 353 'AdminEnableMyBackupCodesV4 # SKIP deprecated' test.out

#- 354 AdminGetBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op AdminGetBackupCodesV4 \
    > test.out 2>&1
eval_tap $? 354 'AdminGetBackupCodesV4' test.out

#- 355 AdminGenerateBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op AdminGenerateBackupCodesV4 \
    > test.out 2>&1
eval_tap $? 355 'AdminGenerateBackupCodesV4' test.out

#- 356 AdminEnableBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op AdminEnableBackupCodesV4 \
    > test.out 2>&1
eval_tap $? 356 'AdminEnableBackupCodesV4' test.out

#- 357 AdminSendMyMFAEmailCodeV4
$CLI_EXE \
    --sn iam \
    --op AdminSendMyMFAEmailCodeV4 \
    > test.out 2>&1
eval_tap $? 357 'AdminSendMyMFAEmailCodeV4' test.out

#- 358 AdminDisableMyEmailV4
$CLI_EXE \
    --sn iam \
    --op AdminDisableMyEmailV4 \
    > test.out 2>&1
eval_tap $? 358 'AdminDisableMyEmailV4' test.out

#- 359 AdminEnableMyEmailV4
$CLI_EXE \
    --sn iam \
    --op AdminEnableMyEmailV4 \
    --code 'X0rxogPu' \
    > test.out 2>&1
eval_tap $? 359 'AdminEnableMyEmailV4' test.out

#- 360 AdminGetMyEnabledFactorsV4
$CLI_EXE \
    --sn iam \
    --op AdminGetMyEnabledFactorsV4 \
    > test.out 2>&1
eval_tap $? 360 'AdminGetMyEnabledFactorsV4' test.out

#- 361 AdminMakeFactorMyDefaultV4
$CLI_EXE \
    --sn iam \
    --op AdminMakeFactorMyDefaultV4 \
    --factor 'kYqDZmZh' \
    > test.out 2>&1
eval_tap $? 361 'AdminMakeFactorMyDefaultV4' test.out

#- 362 AdminInviteUserV4
eval_tap 0 362 'AdminInviteUserV4 # SKIP deprecated' test.out

#- 363 AuthenticationWithPlatformLinkV4
$CLI_EXE \
    --sn iam \
    --op AuthenticationWithPlatformLinkV4 \
    --extend_exp 'true' \
    --client_id 'I6KSjUiR' \
    --linkingToken 'Jgcm5Ahb' \
    --password 'ol9gJ7qP' \
    --username 'Ohfg83ra' \
    > test.out 2>&1
eval_tap $? 363 'AuthenticationWithPlatformLinkV4' test.out

#- 364 GenerateTokenByNewHeadlessAccountV4
$CLI_EXE \
    --sn iam \
    --op GenerateTokenByNewHeadlessAccountV4 \
    --additionalData 'a3cHC6aU' \
    --extend_exp 'true' \
    --linkingToken 'ndeJ4yHH' \
    > test.out 2>&1
eval_tap $? 364 'GenerateTokenByNewHeadlessAccountV4' test.out

#- 365 Verify2faCodeV4
$CLI_EXE \
    --sn iam \
    --op Verify2faCodeV4 \
    --code 'MdR2hc8h' \
    --factor 'UGyhxDe9' \
    --mfaToken 'wlmwdOmY' \
    --rememberDevice 'false' \
    > test.out 2>&1
eval_tap $? 365 'Verify2faCodeV4' test.out

#- 366 PlatformTokenGrantV4
$CLI_EXE \
    --sn iam \
    --op PlatformTokenGrantV4 \
    --platformId 'ajpXEuUq' \
    --codeChallenge 'hEVzYBn8' \
    --codeChallengeMethod 'S256' \
    --additionalData 'ugP7uDX9' \
    --client_id 'itKOebNr' \
    --createHeadless 'true' \
    --device_id 'mJTcyQlY' \
    --macAddress 'oh1f7Yli' \
    --platform_token 'EwLAevc2' \
    --skipSetCookie 'false' \
    > test.out 2>&1
eval_tap $? 366 'PlatformTokenGrantV4' test.out

#- 367 SimultaneousLoginV4
$CLI_EXE \
    --sn iam \
    --op SimultaneousLoginV4 \
    --codeChallenge 'bnOROCd2' \
    --codeChallengeMethod 'plain' \
    --simultaneousPlatform 'B8bZ3upW' \
    --simultaneousTicket 'xCdHta82' \
    --nativePlatform 'steam' \
    --nativePlatformTicket 'WpdvaDkJ' \
    > test.out 2>&1
eval_tap $? 367 'SimultaneousLoginV4' test.out

#- 368 TokenGrantV4
$CLI_EXE \
    --sn iam \
    --op TokenGrantV4 \
    --codeChallenge 'ScDAI57N' \
    --codeChallengeMethod 'S256' \
    --additionalData 'A5EaVDu7' \
    --client_id 'GoY1viNZ' \
    --code 'mmhswbXI' \
    --code_verifier 'cbOnRA7K' \
    --extendNamespace 'YTeOZnvT' \
    --extend_exp 'true' \
    --login_queue_ticket 'KFPpmX1N' \
    --password '5c4Vh6WC' \
    --redirect_uri '2OX5YwPv' \
    --refresh_token 'md5yEvo3' \
    --username 'oTf6R7pg' \
    --grant_type 'urn:ietf:params:oauth:grant-type:extend_client_credentials' \
    > test.out 2>&1
eval_tap $? 368 'TokenGrantV4' test.out

#- 369 RequestTargetTokenResponseV4
$CLI_EXE \
    --sn iam \
    --op RequestTargetTokenResponseV4 \
    --additionalData 'louTeszV' \
    --code 'rzr5w9lK' \
    > test.out 2>&1
eval_tap $? 369 'RequestTargetTokenResponseV4' test.out

#- 370 PublicCreateTestUserV4
# body param: body
echo '{"acceptedPolicies": [{"isAccepted": true, "localizedPolicyVersionId": "cRwd1ivA", "policyId": "CroxycbW", "policyVersionId": "inK1K5HL"}, {"isAccepted": true, "localizedPolicyVersionId": "SreWbppg", "policyId": "Iw8KZLGh", "policyVersionId": "uyyVOxPO"}, {"isAccepted": false, "localizedPolicyVersionId": "QNnmtevK", "policyId": "7nXspzgO", "policyVersionId": "CvFAdNA7"}], "authType": "EMAILPASSWD", "country": "DUcYhfCn", "dateOfBirth": "1eOlLSGn", "displayName": "pmxamB9A", "emailAddress": "0tJFR3eL", "password": "SLfjWlxh", "passwordMD5Sum": "Qm2cBZZ7", "uniqueDisplayName": "RN1gu7Po", "username": "bdBCG3Qs", "verified": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicCreateTestUserV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 370 'PublicCreateTestUserV4' test.out

#- 371 PublicCreateUserV4
# body param: body
echo '{"acceptedPolicies": [{"isAccepted": true, "localizedPolicyVersionId": "WuBGYtVB", "policyId": "4YOTCuq6", "policyVersionId": "soXYlUIn"}, {"isAccepted": true, "localizedPolicyVersionId": "Fhm3ldXw", "policyId": "AXBO7Dxu", "policyVersionId": "K44MwhUH"}, {"isAccepted": true, "localizedPolicyVersionId": "qyx7GGom", "policyId": "uKEv0x9F", "policyVersionId": "WqZXTR1R"}], "authType": "EMAILPASSWD", "code": "rYTa3uVo", "country": "VOT964ch", "dateOfBirth": "fg4Yq0Ad", "displayName": "i5cfbkxe", "emailAddress": "fNFOYJDh", "password": "z0MO0J05", "passwordMD5Sum": "GoV5zpZf", "reachMinimumAge": false, "uniqueDisplayName": "FmfCBPyV", "username": "HGctiYUD"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicCreateUserV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 371 'PublicCreateUserV4' test.out

#- 372 CreateUserFromInvitationV4
# body param: body
echo '{"acceptedPolicies": [{"isAccepted": false, "localizedPolicyVersionId": "8uqZQbLX", "policyId": "CYvPUlds", "policyVersionId": "QM7ha27B"}, {"isAccepted": false, "localizedPolicyVersionId": "xzn9qDR8", "policyId": "8PS413QP", "policyVersionId": "bKacuTxv"}, {"isAccepted": true, "localizedPolicyVersionId": "mGu3pwVx", "policyId": "Se4IdO29", "policyVersionId": "pBaxOTzo"}], "authType": "EMAILPASSWD", "code": "Jbe17b6p", "country": "8FQTPcbK", "dateOfBirth": "bSCLdBcc", "displayName": "ZjpI4Vp9", "emailAddress": "VZUBmUOg", "password": "lgJ0WLQ3", "passwordMD5Sum": "V39UcPry", "reachMinimumAge": false, "uniqueDisplayName": "Q16mInPj", "username": "uYyGhZlT"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op CreateUserFromInvitationV4 \
    --invitationId 'DhtM2lJz' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 372 'CreateUserFromInvitationV4' test.out

#- 373 PublicUpdateUserV4
# body param: body
echo '{"avatarUrl": "iVxVvqFn", "country": "KkFzXdQN", "dateOfBirth": "Uw8HganE", "displayName": "Zz16a8rA", "languageTag": "WKE3kL5y", "uniqueDisplayName": "5rRaXMjO", "userName": "Xj9PTVsg"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpdateUserV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 373 'PublicUpdateUserV4' test.out

#- 374 PublicUpdateUserEmailAddressV4
# body param: body
echo '{"code": "RteX3h54", "emailAddress": "UcUcdQ98"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpdateUserEmailAddressV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 374 'PublicUpdateUserEmailAddressV4' test.out

#- 375 PublicUpgradeHeadlessAccountWithVerificationCodeV4
# body param: body
echo '{"code": "6utz7hJH", "country": "8LZLSzCC", "dateOfBirth": "SKc6FYOn", "displayName": "L9oyfR8X", "emailAddress": "sHPtUN05", "password": "eQxqvdy5", "reachMinimumAge": true, "uniqueDisplayName": "PNKpmMfq", "username": "2wfpvmUY", "validateOnly": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpgradeHeadlessAccountWithVerificationCodeV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 375 'PublicUpgradeHeadlessAccountWithVerificationCodeV4' test.out

#- 376 PublicUpgradeHeadlessAccountV4
# body param: body
echo '{"emailAddress": "1VZZmjSN", "password": "2gSo19SF", "username": "oEXrADN8"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpgradeHeadlessAccountV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 376 'PublicUpgradeHeadlessAccountV4' test.out

#- 377 PublicDisableMyAuthenticatorV4
$CLI_EXE \
    --sn iam \
    --op PublicDisableMyAuthenticatorV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 377 'PublicDisableMyAuthenticatorV4' test.out

#- 378 PublicEnableMyAuthenticatorV4
$CLI_EXE \
    --sn iam \
    --op PublicEnableMyAuthenticatorV4 \
    --namespace $AB_NAMESPACE \
    --code 'vdbVI3EU' \
    > test.out 2>&1
eval_tap $? 378 'PublicEnableMyAuthenticatorV4' test.out

#- 379 PublicGenerateMyAuthenticatorKeyV4
$CLI_EXE \
    --sn iam \
    --op PublicGenerateMyAuthenticatorKeyV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 379 'PublicGenerateMyAuthenticatorKeyV4' test.out

#- 380 PublicGetMyBackupCodesV4
eval_tap 0 380 'PublicGetMyBackupCodesV4 # SKIP deprecated' test.out

#- 381 PublicGenerateMyBackupCodesV4
eval_tap 0 381 'PublicGenerateMyBackupCodesV4 # SKIP deprecated' test.out

#- 382 PublicDisableMyBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op PublicDisableMyBackupCodesV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 382 'PublicDisableMyBackupCodesV4' test.out

#- 383 PublicDownloadMyBackupCodesV4
eval_tap 0 383 'PublicDownloadMyBackupCodesV4 # SKIP deprecated' test.out

#- 384 PublicEnableMyBackupCodesV4
eval_tap 0 384 'PublicEnableMyBackupCodesV4 # SKIP deprecated' test.out

#- 385 PublicGetBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op PublicGetBackupCodesV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 385 'PublicGetBackupCodesV4' test.out

#- 386 PublicGenerateBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op PublicGenerateBackupCodesV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 386 'PublicGenerateBackupCodesV4' test.out

#- 387 PublicEnableBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op PublicEnableBackupCodesV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 387 'PublicEnableBackupCodesV4' test.out

#- 388 PublicRemoveTrustedDeviceV4
$CLI_EXE \
    --sn iam \
    --op PublicRemoveTrustedDeviceV4 \
    --namespace $AB_NAMESPACE \
    --device_token 'SS0BdrgS' \
    > test.out 2>&1
eval_tap $? 388 'PublicRemoveTrustedDeviceV4' test.out

#- 389 PublicSendMyMFAEmailCodeV4
$CLI_EXE \
    --sn iam \
    --op PublicSendMyMFAEmailCodeV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 389 'PublicSendMyMFAEmailCodeV4' test.out

#- 390 PublicDisableMyEmailV4
$CLI_EXE \
    --sn iam \
    --op PublicDisableMyEmailV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 390 'PublicDisableMyEmailV4' test.out

#- 391 PublicEnableMyEmailV4
$CLI_EXE \
    --sn iam \
    --op PublicEnableMyEmailV4 \
    --namespace $AB_NAMESPACE \
    --code 'ZefU7obi' \
    > test.out 2>&1
eval_tap $? 391 'PublicEnableMyEmailV4' test.out

#- 392 PublicGetMyEnabledFactorsV4
$CLI_EXE \
    --sn iam \
    --op PublicGetMyEnabledFactorsV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 392 'PublicGetMyEnabledFactorsV4' test.out

#- 393 PublicMakeFactorMyDefaultV4
$CLI_EXE \
    --sn iam \
    --op PublicMakeFactorMyDefaultV4 \
    --namespace $AB_NAMESPACE \
    --factor 'E49OSCkz' \
    > test.out 2>&1
eval_tap $? 393 'PublicMakeFactorMyDefaultV4' test.out

#- 394 PublicGetUserPublicInfoByUserIdV4
$CLI_EXE \
    --sn iam \
    --op PublicGetUserPublicInfoByUserIdV4 \
    --namespace $AB_NAMESPACE \
    --userId 'IkIr6O23' \
    > test.out 2>&1
eval_tap $? 394 'PublicGetUserPublicInfoByUserIdV4' test.out

#- 395 PublicInviteUserV4
# body param: body
echo '{"additionalData": "XOTzpt5x", "emailAddress": "pGAFFNLb", "namespace": "GqbnX9G5", "namespaceDisplayName": "YGXcqPKJ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicInviteUserV4 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 395 'PublicInviteUserV4' test.out


# remove artifacts
rm -f "$CLI_TOKEN_FILE"
rm -f "$TEMP_JSON_INPUT"
rm -f "$TEMP_FILE_UPLOAD"

exit $EXIT_CODE