#!/usr/bin/env bash

# Copyright (c) 2021 AccelByte Inc. All Rights Reserved.
# This is licensed software from AccelByte Inc, for limitations
# and restrictions contact your company contract manager.

# This code is generated by tool. DO NOT EDIT.

# Meta:
# - random seed: 
# - template file: 

# Instructions:
# - Run the Justice SDK Mock Server first before running this script.

export AB_BASE_URL="http://127.0.0.1:8080"
export AB_CLIENT_ID="admin"
export AB_CLIENT_SECRET="admin"
export AB_NAMESPACE="test"
export AB_APP_NAME="UnitTest"

EXIT_CODE=0

eval_tap() {
  if [ $1 -eq 0 ]; then
    echo "ok $2 - $3"
  else
    EXIT_CODE=1
    echo "not ok $2 - $3"
    sed 's/^/# /g' $4
  fi
  rm -f $4
}

CLI_EXE="AccelByte.Sdk.Sample.Cli"
CLI_TOKEN_FILE="$(dirname "$(which $CLI_EXE)")/token.json"
TEMP_JSON_INPUT="input_json.json"
TEMP_FILE_UPLOAD="file_upload.bin"

echo "TAP version 13"
echo "1..386"

#- 1 Login
$CLI_EXE --op login --lt user --user user --pass user > test.out 2>&1
eval_tap $? 1 'Login' test.out

if [ $EXIT_CODE -ne 0 ]; then
  echo "Bail out! Login failed."
  exit $EXIT_CODE
fi

# echo "foo" > "$CLI_TOKEN_FILE"

#- 2 GetBansType
eval_tap 0 2 'GetBansType # SKIP deprecated' test.out

#- 3 GetListBanReason
eval_tap 0 3 'GetListBanReason # SKIP deprecated' test.out

#- 4 GetClients
eval_tap 0 4 'GetClients # SKIP deprecated' test.out

#- 5 CreateClient
eval_tap 0 5 'CreateClient # SKIP deprecated' test.out

#- 6 GetClient
eval_tap 0 6 'GetClient # SKIP deprecated' test.out

#- 7 UpdateClient
eval_tap 0 7 'UpdateClient # SKIP deprecated' test.out

#- 8 DeleteClient
eval_tap 0 8 'DeleteClient # SKIP deprecated' test.out

#- 9 UpdateClientPermission
eval_tap 0 9 'UpdateClientPermission # SKIP deprecated' test.out

#- 10 AddClientPermission
eval_tap 0 10 'AddClientPermission # SKIP deprecated' test.out

#- 11 DeleteClientPermission
eval_tap 0 11 'DeleteClientPermission # SKIP deprecated' test.out

#- 12 UpdateClientSecret
eval_tap 0 12 'UpdateClientSecret # SKIP deprecated' test.out

#- 13 GetClientsbyNamespace
eval_tap 0 13 'GetClientsbyNamespace # SKIP deprecated' test.out

#- 14 CreateClientByNamespace
eval_tap 0 14 'CreateClientByNamespace # SKIP deprecated' test.out

#- 15 DeleteClientByNamespace
eval_tap 0 15 'DeleteClientByNamespace # SKIP deprecated' test.out

#- 16 CreateUser
eval_tap 0 16 'CreateUser # SKIP deprecated' test.out

#- 17 GetAdminUsersByRoleID
eval_tap 0 17 'GetAdminUsersByRoleID # SKIP deprecated' test.out

#- 18 GetUserByLoginID
eval_tap 0 18 'GetUserByLoginID # SKIP deprecated' test.out

#- 19 GetUserByPlatformUserID
eval_tap 0 19 'GetUserByPlatformUserID # SKIP deprecated' test.out

#- 20 ForgotPassword
eval_tap 0 20 'ForgotPassword # SKIP deprecated' test.out

#- 21 GetUsersByLoginIds
eval_tap 0 21 'GetUsersByLoginIds # SKIP deprecated' test.out

#- 22 ResetPassword
eval_tap 0 22 'ResetPassword # SKIP deprecated' test.out

#- 23 SearchUser
eval_tap 0 23 'SearchUser # SKIP deprecated' test.out

#- 24 GetUserByUserID
eval_tap 0 24 'GetUserByUserID # SKIP deprecated' test.out

#- 25 UpdateUser
eval_tap 0 25 'UpdateUser # SKIP deprecated' test.out

#- 26 DeleteUser
eval_tap 0 26 'DeleteUser # SKIP deprecated' test.out

#- 27 BanUser
eval_tap 0 27 'BanUser # SKIP deprecated' test.out

#- 28 GetUserBanHistory
eval_tap 0 28 'GetUserBanHistory # SKIP deprecated' test.out

#- 29 DisableUserBan
eval_tap 0 29 'DisableUserBan # SKIP deprecated' test.out

#- 30 EnableUserBan
eval_tap 0 30 'EnableUserBan # SKIP deprecated' test.out

#- 31 ListCrossNamespaceAccountLink
eval_tap 0 31 'ListCrossNamespaceAccountLink # SKIP deprecated' test.out

#- 32 DisableUser
eval_tap 0 32 'DisableUser # SKIP deprecated' test.out

#- 33 EnableUser
eval_tap 0 33 'EnableUser # SKIP deprecated' test.out

#- 34 GetUserInformation
eval_tap 0 34 'GetUserInformation # SKIP deprecated' test.out

#- 35 DeleteUserInformation
eval_tap 0 35 'DeleteUserInformation # SKIP deprecated' test.out

#- 36 GetUserLoginHistories
eval_tap 0 36 'GetUserLoginHistories # SKIP deprecated' test.out

#- 37 UpdatePassword
eval_tap 0 37 'UpdatePassword # SKIP deprecated' test.out

#- 38 SaveUserPermission
eval_tap 0 38 'SaveUserPermission # SKIP deprecated' test.out

#- 39 AddUserPermission
eval_tap 0 39 'AddUserPermission # SKIP deprecated' test.out

#- 40 DeleteUserPermission
eval_tap 0 40 'DeleteUserPermission # SKIP deprecated' test.out

#- 41 GetUserPlatformAccounts
eval_tap 0 41 'GetUserPlatformAccounts # SKIP deprecated' test.out

#- 42 GetUserMapping
eval_tap 0 42 'GetUserMapping # SKIP deprecated' test.out

#- 43 GetUserJusticePlatformAccount
eval_tap 0 43 'GetUserJusticePlatformAccount # SKIP deprecated' test.out

#- 44 PlatformLink
eval_tap 0 44 'PlatformLink # SKIP deprecated' test.out

#- 45 PlatformUnlink
eval_tap 0 45 'PlatformUnlink # SKIP deprecated' test.out

#- 46 GetPublisherUser
eval_tap 0 46 'GetPublisherUser # SKIP deprecated' test.out

#- 47 SaveUserRoles
eval_tap 0 47 'SaveUserRoles # SKIP deprecated' test.out

#- 48 AddUserRole
eval_tap 0 48 'AddUserRole # SKIP deprecated' test.out

#- 49 DeleteUserRole
eval_tap 0 49 'DeleteUserRole # SKIP deprecated' test.out

#- 50 UpgradeHeadlessAccount
eval_tap 0 50 'UpgradeHeadlessAccount # SKIP deprecated' test.out

#- 51 UpgradeHeadlessAccountWithVerificationCode
eval_tap 0 51 'UpgradeHeadlessAccountWithVerificationCode # SKIP deprecated' test.out

#- 52 UserVerification
eval_tap 0 52 'UserVerification # SKIP deprecated' test.out

#- 53 SendVerificationCode
eval_tap 0 53 'SendVerificationCode # SKIP deprecated' test.out

#- 54 Authorization
eval_tap 0 54 'Authorization # SKIP deprecated' test.out

#- 55 GetJWKS
eval_tap 0 55 'GetJWKS # SKIP deprecated' test.out

#- 56 PlatformTokenRequestHandler
eval_tap 0 56 'PlatformTokenRequestHandler # SKIP deprecated' test.out

#- 57 RevokeUser
eval_tap 0 57 'RevokeUser # SKIP deprecated' test.out

#- 58 GetRevocationList
eval_tap 0 58 'GetRevocationList # SKIP deprecated' test.out

#- 59 RevokeToken
eval_tap 0 59 'RevokeToken # SKIP deprecated' test.out

#- 60 RevokeAUser
eval_tap 0 60 'RevokeAUser # SKIP deprecated' test.out

#- 61 TokenGrant
eval_tap 0 61 'TokenGrant # SKIP deprecated' test.out

#- 62 VerifyToken
eval_tap 0 62 'VerifyToken # SKIP deprecated' test.out

#- 63 GetRoles
eval_tap 0 63 'GetRoles # SKIP deprecated' test.out

#- 64 CreateRole
eval_tap 0 64 'CreateRole # SKIP deprecated' test.out

#- 65 GetRole
eval_tap 0 65 'GetRole # SKIP deprecated' test.out

#- 66 UpdateRole
eval_tap 0 66 'UpdateRole # SKIP deprecated' test.out

#- 67 DeleteRole
eval_tap 0 67 'DeleteRole # SKIP deprecated' test.out

#- 68 GetRoleAdminStatus
eval_tap 0 68 'GetRoleAdminStatus # SKIP deprecated' test.out

#- 69 SetRoleAsAdmin
eval_tap 0 69 'SetRoleAsAdmin # SKIP deprecated' test.out

#- 70 RemoveRoleAdmin
eval_tap 0 70 'RemoveRoleAdmin # SKIP deprecated' test.out

#- 71 GetRoleManagers
eval_tap 0 71 'GetRoleManagers # SKIP deprecated' test.out

#- 72 AddRoleManagers
eval_tap 0 72 'AddRoleManagers # SKIP deprecated' test.out

#- 73 RemoveRoleManagers
eval_tap 0 73 'RemoveRoleManagers # SKIP deprecated' test.out

#- 74 GetRoleMembers
eval_tap 0 74 'GetRoleMembers # SKIP deprecated' test.out

#- 75 AddRoleMembers
eval_tap 0 75 'AddRoleMembers # SKIP deprecated' test.out

#- 76 RemoveRoleMembers
eval_tap 0 76 'RemoveRoleMembers # SKIP deprecated' test.out

#- 77 UpdateRolePermissions
eval_tap 0 77 'UpdateRolePermissions # SKIP deprecated' test.out

#- 78 AddRolePermission
eval_tap 0 78 'AddRolePermission # SKIP deprecated' test.out

#- 79 DeleteRolePermission
eval_tap 0 79 'DeleteRolePermission # SKIP deprecated' test.out

#- 80 AdminGetAgeRestrictionStatusV2
eval_tap 0 80 'AdminGetAgeRestrictionStatusV2 # SKIP deprecated' test.out

#- 81 AdminUpdateAgeRestrictionConfigV2
eval_tap 0 81 'AdminUpdateAgeRestrictionConfigV2 # SKIP deprecated' test.out

#- 82 GetListCountryAgeRestriction
eval_tap 0 82 'GetListCountryAgeRestriction # SKIP deprecated' test.out

#- 83 UpdateCountryAgeRestriction
eval_tap 0 83 'UpdateCountryAgeRestriction # SKIP deprecated' test.out

#- 84 AdminSearchUsersV2
eval_tap 0 84 'AdminSearchUsersV2 # SKIP deprecated' test.out

#- 85 AdminGetUserByUserIdV2
eval_tap 0 85 'AdminGetUserByUserIdV2 # SKIP deprecated' test.out

#- 86 AdminUpdateUserV2
eval_tap 0 86 'AdminUpdateUserV2 # SKIP deprecated' test.out

#- 87 AdminBanUserV2
eval_tap 0 87 'AdminBanUserV2 # SKIP deprecated' test.out

#- 88 AdminGetUserBanV2
eval_tap 0 88 'AdminGetUserBanV2 # SKIP deprecated' test.out

#- 89 AdminDisableUserV2
eval_tap 0 89 'AdminDisableUserV2 # SKIP deprecated' test.out

#- 90 AdminEnableUserV2
eval_tap 0 90 'AdminEnableUserV2 # SKIP deprecated' test.out

#- 91 AdminResetPasswordV2
eval_tap 0 91 'AdminResetPasswordV2 # SKIP deprecated' test.out

#- 92 AdminDeletePlatformLinkV2
eval_tap 0 92 'AdminDeletePlatformLinkV2 # SKIP deprecated' test.out

#- 93 AdminPutUserRolesV2
eval_tap 0 93 'AdminPutUserRolesV2 # SKIP deprecated' test.out

#- 94 AdminCreateUserRolesV2
eval_tap 0 94 'AdminCreateUserRolesV2 # SKIP deprecated' test.out

#- 95 PublicGetCountryAgeRestriction
eval_tap 0 95 'PublicGetCountryAgeRestriction # SKIP deprecated' test.out

#- 96 PublicCreateUserV2
eval_tap 0 96 'PublicCreateUserV2 # SKIP deprecated' test.out

#- 97 PublicForgotPasswordV2
eval_tap 0 97 'PublicForgotPasswordV2 # SKIP deprecated' test.out

#- 98 PublicResetPasswordV2
eval_tap 0 98 'PublicResetPasswordV2 # SKIP deprecated' test.out

#- 99 PublicGetUserByUserIDV2
eval_tap 0 99 'PublicGetUserByUserIDV2 # SKIP deprecated' test.out

#- 100 PublicUpdateUserV2
eval_tap 0 100 'PublicUpdateUserV2 # SKIP deprecated' test.out

#- 101 PublicGetUserBan
eval_tap 0 101 'PublicGetUserBan # SKIP deprecated' test.out

#- 102 PublicUpdatePasswordV2
eval_tap 0 102 'PublicUpdatePasswordV2 # SKIP deprecated' test.out

#- 103 GetListJusticePlatformAccounts
eval_tap 0 103 'GetListJusticePlatformAccounts # SKIP deprecated' test.out

#- 104 PublicPlatformLinkV2
eval_tap 0 104 'PublicPlatformLinkV2 # SKIP deprecated' test.out

#- 105 PublicDeletePlatformLinkV2
eval_tap 0 105 'PublicDeletePlatformLinkV2 # SKIP deprecated' test.out

#- 106 AdminGetBansTypeV3
$CLI_EXE \
    --sn iam \
    --op AdminGetBansTypeV3 \
    > test.out 2>&1
eval_tap $? 106 'AdminGetBansTypeV3' test.out

#- 107 AdminGetListBanReasonV3
$CLI_EXE \
    --sn iam \
    --op AdminGetListBanReasonV3 \
    > test.out 2>&1
eval_tap $? 107 'AdminGetListBanReasonV3' test.out

#- 108 AdminListClientAvailablePermissions
$CLI_EXE \
    --sn iam \
    --op AdminListClientAvailablePermissions \
    --excludePermissions 'true' \
    > test.out 2>&1
eval_tap $? 108 'AdminListClientAvailablePermissions' test.out

#- 109 AdminUpdateAvailablePermissionsByModule
# body param: body
echo '{"modules": [{"docLink": "m7lDSQ6T", "groups": [{"group": "yWZT7b89", "groupId": "x5tVgJiH", "permissions": [{"allowedActions": [50, 95, 78], "resource": "RN236h3A"}, {"allowedActions": [32, 99, 60], "resource": "kHJkw5J0"}, {"allowedActions": [9, 37, 48], "resource": "xV5AMnjR"}]}, {"group": "4fO2iLvh", "groupId": "tybMcYjO", "permissions": [{"allowedActions": [43, 95, 25], "resource": "4Nxd7X5k"}, {"allowedActions": [23, 3, 2], "resource": "ZUxpQf4L"}, {"allowedActions": [28, 78, 18], "resource": "KmLN4300"}]}, {"group": "rN3062Zo", "groupId": "cZe4IyOH", "permissions": [{"allowedActions": [36, 67, 9], "resource": "9BYunSdn"}, {"allowedActions": [35, 24, 74], "resource": "Bvt6584F"}, {"allowedActions": [68, 3, 27], "resource": "fYR9oz22"}]}], "module": "N6oeqSWV", "moduleId": "aZV7HtSB"}, {"docLink": "JOPG2wLA", "groups": [{"group": "AxzJkbyp", "groupId": "d6p7YGuf", "permissions": [{"allowedActions": [65, 87, 49], "resource": "kWREtTHi"}, {"allowedActions": [39, 6, 35], "resource": "doVzXZ6x"}, {"allowedActions": [56, 42, 77], "resource": "IHjh80fs"}]}, {"group": "BEciBfF6", "groupId": "zBQzVPcG", "permissions": [{"allowedActions": [59, 66, 66], "resource": "8NK4pTAw"}, {"allowedActions": [56, 49, 47], "resource": "cEqbsgBx"}, {"allowedActions": [84, 77, 69], "resource": "Yf6lXkoN"}]}, {"group": "3u3k0h2x", "groupId": "lngIVB4G", "permissions": [{"allowedActions": [98, 19, 81], "resource": "WKDDo0vH"}, {"allowedActions": [99, 35, 92], "resource": "QOGjoWA5"}, {"allowedActions": [81, 40, 38], "resource": "mF9vYTfp"}]}], "module": "tI6KXlka", "moduleId": "FnVP0VaK"}, {"docLink": "xn1cIlcQ", "groups": [{"group": "BfIomRYX", "groupId": "MNkumDuq", "permissions": [{"allowedActions": [46, 12, 96], "resource": "XD3amLbM"}, {"allowedActions": [72, 14, 48], "resource": "k2eW1wVh"}, {"allowedActions": [2, 33, 45], "resource": "c8oIhDPy"}]}, {"group": "rlo2tJvD", "groupId": "RYmGmOiy", "permissions": [{"allowedActions": [40, 5, 93], "resource": "oSUZ707i"}, {"allowedActions": [78, 81, 1], "resource": "FFf2btDj"}, {"allowedActions": [79, 11, 17], "resource": "DhMejbsz"}]}, {"group": "6dUUNkjp", "groupId": "ilRsN5eM", "permissions": [{"allowedActions": [67, 32, 88], "resource": "HhorFHfM"}, {"allowedActions": [90, 98, 34], "resource": "DvYn9aO2"}, {"allowedActions": [11, 51, 26], "resource": "8MApNfvH"}]}], "module": "VSlK6x2L", "moduleId": "7Kq47VaV"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateAvailablePermissionsByModule \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 109 'AdminUpdateAvailablePermissionsByModule' test.out

#- 110 AdminDeleteConfigPermissionsByGroup
# body param: body
echo '{"groupId": "upMkiVOr", "moduleId": "UPNbVD2Y"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDeleteConfigPermissionsByGroup \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 110 'AdminDeleteConfigPermissionsByGroup' test.out

#- 111 AdminListClientTemplates
$CLI_EXE \
    --sn iam \
    --op AdminListClientTemplates \
    > test.out 2>&1
eval_tap $? 111 'AdminListClientTemplates' test.out

#- 112 AdminGetInputValidations
$CLI_EXE \
    --sn iam \
    --op AdminGetInputValidations \
    > test.out 2>&1
eval_tap $? 112 'AdminGetInputValidations' test.out

#- 113 AdminUpdateInputValidations
# body param: body
echo '[{"field": "OWcVf4dW", "validation": {"allowAllSpecialCharacters": false, "allowDigit": false, "allowLetter": true, "allowSpace": true, "allowUnicode": true, "avatarConfig": {"allowedPrefixes": ["4yCfvomY", "WXRUg98h", "QLrQJ9II"], "preferRegex": true, "regex": "AbGhVxS0"}, "blockedWord": ["D1cI6sHZ", "0ZgluiZg", "X0pnxRgZ"], "description": [{"language": "UJMGJXKd", "message": ["gfqKnDj0", "2tWaXrKy", "QkXUijKx"]}, {"language": "4WE4ow4I", "message": ["hcNeWYw8", "l4LNISQe", "1QyBUBZw"]}, {"language": "za2nTZYP", "message": ["hGx9gbuM", "hHhfwO9F", "T7cyPK0p"]}], "isCustomRegex": false, "letterCase": "DSa0M7ro", "maxLength": 72, "maxRepeatingAlphaNum": 78, "maxRepeatingSpecialCharacter": 97, "minCharType": 41, "minLength": 17, "regex": "wk7OKO6o", "specialCharacterLocation": "m9x42WLr", "specialCharacters": ["ZVyP6mLR", "6zKeE42p", "rqijJa7E"]}}, {"field": "MQcJqBKk", "validation": {"allowAllSpecialCharacters": false, "allowDigit": true, "allowLetter": true, "allowSpace": false, "allowUnicode": true, "avatarConfig": {"allowedPrefixes": ["cOLMDA6q", "AfhV0MUs", "qdQjqcML"], "preferRegex": false, "regex": "RSzwJzKg"}, "blockedWord": ["Fkvp1laf", "HUMgVh6i", "wCRg0Liy"], "description": [{"language": "15qeFK08", "message": ["BxcHE2Az", "H3Rp4fu1", "15otMjTF"]}, {"language": "7jrVc941", "message": ["U892nZRd", "Z0j0Wkm6", "Qp7GgLNh"]}, {"language": "vi4RXUev", "message": ["BXvW65Ls", "5st81haA", "XMg8i1t2"]}], "isCustomRegex": true, "letterCase": "hvCxEzlV", "maxLength": 30, "maxRepeatingAlphaNum": 90, "maxRepeatingSpecialCharacter": 9, "minCharType": 72, "minLength": 17, "regex": "L75uRmUj", "specialCharacterLocation": "RnkMHmDn", "specialCharacters": ["uUStt4a6", "KeFd63PB", "1ZFsGgqj"]}}, {"field": "cxnhtv0k", "validation": {"allowAllSpecialCharacters": true, "allowDigit": false, "allowLetter": true, "allowSpace": false, "allowUnicode": false, "avatarConfig": {"allowedPrefixes": ["O79CtDAa", "oKPX5n6M", "WJdC98Lj"], "preferRegex": false, "regex": "qWnNgmCb"}, "blockedWord": ["gBSckLAZ", "3kV9JkjU", "BQtrg9jc"], "description": [{"language": "RZSUfaWl", "message": ["Op4RZMO2", "5khD5VkS", "owygaxGj"]}, {"language": "o1gTOJEX", "message": ["amtXME34", "i2DTWAKe", "hPqUCD4a"]}, {"language": "AyQIitkk", "message": ["1QHi8jUQ", "QcNQGBXM", "DTffWYOy"]}], "isCustomRegex": true, "letterCase": "ZWC0ARJk", "maxLength": 47, "maxRepeatingAlphaNum": 11, "maxRepeatingSpecialCharacter": 81, "minCharType": 73, "minLength": 83, "regex": "eU4iYT6P", "specialCharacterLocation": "AFffCgBr", "specialCharacters": ["NUShWqH9", "NSRz3Dba", "0olTQKys"]}}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateInputValidations \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 113 'AdminUpdateInputValidations' test.out

#- 114 AdminResetInputValidations
$CLI_EXE \
    --sn iam \
    --op AdminResetInputValidations \
    --field 'sUSnMqfQ' \
    > test.out 2>&1
eval_tap $? 114 'AdminResetInputValidations' test.out

#- 115 ListAdminsV3
$CLI_EXE \
    --sn iam \
    --op ListAdminsV3 \
    --namespace $AB_NAMESPACE \
    --after 'pKcfPDdU' \
    --before 'fDX9fXil' \
    --limit '34' \
    > test.out 2>&1
eval_tap $? 115 'ListAdminsV3' test.out

#- 116 AdminGetAgeRestrictionStatusV3
$CLI_EXE \
    --sn iam \
    --op AdminGetAgeRestrictionStatusV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 116 'AdminGetAgeRestrictionStatusV3' test.out

#- 117 AdminUpdateAgeRestrictionConfigV3
# body param: body
echo '{"ageRestriction": 82, "enable": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateAgeRestrictionConfigV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 117 'AdminUpdateAgeRestrictionConfigV3' test.out

#- 118 AdminGetListCountryAgeRestrictionV3
$CLI_EXE \
    --sn iam \
    --op AdminGetListCountryAgeRestrictionV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 118 'AdminGetListCountryAgeRestrictionV3' test.out

#- 119 AdminUpdateCountryAgeRestrictionV3
# body param: body
echo '{"ageRestriction": 9}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateCountryAgeRestrictionV3 \
    --countryCode 'T5LSTkBh' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 119 'AdminUpdateCountryAgeRestrictionV3' test.out

#- 120 AdminGetBannedUsersV3
$CLI_EXE \
    --sn iam \
    --op AdminGetBannedUsersV3 \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --banType 'W4sEZ9UG' \
    --limit '35' \
    --offset '4' \
    > test.out 2>&1
eval_tap $? 120 'AdminGetBannedUsersV3' test.out

#- 121 AdminBanUserBulkV3
# body param: body
echo '{"ban": "kVsewlQA", "comment": "j7EHaFYZ", "endDate": "JFDVT8zg", "reason": "N5GKUqdi", "skipNotif": true, "userIds": ["htEjqYIp", "2Hzx4qkl", "ZSp4QN1M"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBanUserBulkV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 121 'AdminBanUserBulkV3' test.out

#- 122 AdminUnbanUserBulkV3
# body param: body
echo '{"bans": [{"banId": "DayjH0XZ", "userId": "hYysY2ze"}, {"banId": "UtUiIX2u", "userId": "HgYA7Tst"}, {"banId": "sVEAkkzr", "userId": "7BzUP1D9"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUnbanUserBulkV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 122 'AdminUnbanUserBulkV3' test.out

#- 123 AdminGetBansTypeWithNamespaceV3
$CLI_EXE \
    --sn iam \
    --op AdminGetBansTypeWithNamespaceV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 123 'AdminGetBansTypeWithNamespaceV3' test.out

#- 124 AdminGetClientsByNamespaceV3
$CLI_EXE \
    --sn iam \
    --op AdminGetClientsByNamespaceV3 \
    --namespace $AB_NAMESPACE \
    --clientId 'aXGyQjIM' \
    --clientName '0AjxOuM2' \
    --clientType 'S0ucB9rG' \
    --limit '82' \
    --offset '84' \
    --skipLoginQueue 'false' \
    > test.out 2>&1
eval_tap $? 124 'AdminGetClientsByNamespaceV3' test.out

#- 125 AdminCreateClientV3
# body param: body
echo '{"audiences": ["5Pb4L525", "T7ku1fIi", "QP73e0Ez"], "baseUri": "9eXzyBjC", "clientId": "zuEsExIX", "clientName": "tAsCl5Fq", "clientPermissions": [{"action": 47, "resource": "XBB32Crm", "schedAction": 7, "schedCron": "7nKok359", "schedRange": ["Q6Pp96eb", "Fm6yeyzn", "TvHsXKgk"]}, {"action": 32, "resource": "iF2CtjLe", "schedAction": 51, "schedCron": "gN0Qn6fw", "schedRange": ["XrzkS5eL", "b4YSRNi4", "p4ZfhNm6"]}, {"action": 76, "resource": "qWoBnoSK", "schedAction": 76, "schedCron": "gCy3soJ1", "schedRange": ["RrN0kcD0", "NFwffxmM", "E8HJVGxt"]}], "clientPlatform": "fZmrpwBp", "deletable": true, "description": "XRBWjsGw", "modulePermissions": [{"moduleId": "iBwDxGpz", "selectedGroups": [{"groupId": "XKcOqboz", "selectedActions": [14, 7, 48]}, {"groupId": "nx8sqEEv", "selectedActions": [65, 87, 45]}, {"groupId": "M8MDomxt", "selectedActions": [51, 7, 11]}]}, {"moduleId": "Kp2OWJmw", "selectedGroups": [{"groupId": "3qqEiDpU", "selectedActions": [27, 66, 0]}, {"groupId": "3oDwHlUK", "selectedActions": [46, 29, 6]}, {"groupId": "qn4rhAem", "selectedActions": [89, 68, 30]}]}, {"moduleId": "XIALkctC", "selectedGroups": [{"groupId": "ZEDN2DMf", "selectedActions": [87, 37, 16]}, {"groupId": "FS5b1Z8E", "selectedActions": [0, 80, 47]}, {"groupId": "5f8PKFUL", "selectedActions": [11, 32, 90]}]}], "namespace": "zO4SFz3o", "oauthAccessTokenExpiration": 62, "oauthAccessTokenExpirationTimeUnit": "NaLDLqKQ", "oauthClientType": "CVHWVxUk", "oauthRefreshTokenExpiration": 18, "oauthRefreshTokenExpirationTimeUnit": "AvRGpS57", "parentNamespace": "gxY7CzZ2", "redirectUri": "0jo7dNKS", "scopes": ["Y3gc5UqV", "bBt1FsJW", "reIIkt57"], "secret": "oSgVxjl9", "skipLoginQueue": false, "twoFactorEnabled": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminCreateClientV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 125 'AdminCreateClientV3' test.out

#- 126 AdminGetClientsbyNamespacebyIDV3
$CLI_EXE \
    --sn iam \
    --op AdminGetClientsbyNamespacebyIDV3 \
    --clientId 'aC6ugfav' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 126 'AdminGetClientsbyNamespacebyIDV3' test.out

#- 127 AdminDeleteClientV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteClientV3 \
    --clientId '7mwGqkPk' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 127 'AdminDeleteClientV3' test.out

#- 128 AdminUpdateClientV3
# body param: body
echo '{"audiences": ["2mEQ7499", "kIiq1ugN", "RKYhfoFb"], "baseUri": "d8d6mwnk", "clientName": "WXGePxCK", "clientPermissions": [{"action": 98, "resource": "zXCavx5H", "schedAction": 48, "schedCron": "C9Rfhezq", "schedRange": ["CsV8aSwh", "ky1BDWx4", "hpWmOiLS"]}, {"action": 27, "resource": "7LfCbUes", "schedAction": 71, "schedCron": "DvIo18WB", "schedRange": ["Jk8PREqp", "OVeRMR4D", "j38g1cBV"]}, {"action": 15, "resource": "3lQErTYF", "schedAction": 52, "schedCron": "NwLySMjj", "schedRange": ["UDwhLUef", "Xx4cRehD", "A3brVxlj"]}], "clientPlatform": "yRCy9IpD", "deletable": true, "description": "MtfpXJ5z", "modulePermissions": [{"moduleId": "kXmFGHYa", "selectedGroups": [{"groupId": "pP3P4UwB", "selectedActions": [21, 39, 14]}, {"groupId": "jui3gXYQ", "selectedActions": [45, 43, 68]}, {"groupId": "NgtyDnZF", "selectedActions": [48, 61, 57]}]}, {"moduleId": "iA98p5MX", "selectedGroups": [{"groupId": "4rJ7KXeq", "selectedActions": [100, 69, 82]}, {"groupId": "NQQZibiz", "selectedActions": [0, 66, 31]}, {"groupId": "dpiStWZm", "selectedActions": [72, 17, 72]}]}, {"moduleId": "gzfIJB3p", "selectedGroups": [{"groupId": "om9W0orH", "selectedActions": [4, 88, 24]}, {"groupId": "SvB5Bih0", "selectedActions": [63, 53, 90]}, {"groupId": "3JuhST0j", "selectedActions": [45, 55, 64]}]}], "namespace": "dNvywjcp", "oauthAccessTokenExpiration": 44, "oauthAccessTokenExpirationTimeUnit": "GExVkrtX", "oauthRefreshTokenExpiration": 90, "oauthRefreshTokenExpirationTimeUnit": "VMOQyFNn", "redirectUri": "Lyyop1oh", "scopes": ["1kRgwrGI", "WTXtrVhm", "HQxLdfzD"], "skipLoginQueue": false, "twoFactorEnabled": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateClientV3 \
    --clientId 'I1ByP4dY' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 128 'AdminUpdateClientV3' test.out

#- 129 AdminUpdateClientPermissionV3
# body param: body
echo '{"permissions": [{"action": 14, "resource": "cEdgC4nb"}, {"action": 77, "resource": "LHDNu4cq"}, {"action": 36, "resource": "r0Bfdu47"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateClientPermissionV3 \
    --clientId 'uLoUiKMd' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 129 'AdminUpdateClientPermissionV3' test.out

#- 130 AdminAddClientPermissionsV3
# body param: body
echo '{"permissions": [{"action": 7, "resource": "ifUxPFTO"}, {"action": 66, "resource": "9vpBNEmv"}, {"action": 17, "resource": "WHbk8MNn"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddClientPermissionsV3 \
    --clientId 'cMY7CYOG' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 130 'AdminAddClientPermissionsV3' test.out

#- 131 AdminDeleteClientPermissionV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteClientPermissionV3 \
    --action '11' \
    --clientId 'GvuPmv11' \
    --namespace $AB_NAMESPACE \
    --resource 'IDhl0Ufq' \
    > test.out 2>&1
eval_tap $? 131 'AdminDeleteClientPermissionV3' test.out

#- 132 AdminGetConfigValueV3
$CLI_EXE \
    --sn iam \
    --op AdminGetConfigValueV3 \
    --configKey '8nwmzMiR' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 132 'AdminGetConfigValueV3' test.out

#- 133 AdminGetCountryListV3
$CLI_EXE \
    --sn iam \
    --op AdminGetCountryListV3 \
    --namespace $AB_NAMESPACE \
    --filterBlacklist 'false' \
    > test.out 2>&1
eval_tap $? 133 'AdminGetCountryListV3' test.out

#- 134 AdminGetCountryBlacklistV3
$CLI_EXE \
    --sn iam \
    --op AdminGetCountryBlacklistV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 134 'AdminGetCountryBlacklistV3' test.out

#- 135 AdminAddCountryBlacklistV3
# body param: body
echo '{"blacklist": ["UZY3Sdhu", "fhj72MqQ", "aqXFmWcj"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddCountryBlacklistV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 135 'AdminAddCountryBlacklistV3' test.out

#- 136 RetrieveAllThirdPartyLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op RetrieveAllThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 136 'RetrieveAllThirdPartyLoginPlatformCredentialV3' test.out

#- 137 RetrieveAllActiveThirdPartyLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op RetrieveAllActiveThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 137 'RetrieveAllActiveThirdPartyLoginPlatformCredentialV3' test.out

#- 138 RetrieveAllSSOLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op RetrieveAllSSOLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --limit '31' \
    --offset '44' \
    > test.out 2>&1
eval_tap $? 138 'RetrieveAllSSOLoginPlatformCredentialV3' test.out

#- 139 RetrieveThirdPartyLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op RetrieveThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'CoAS1eQ9' \
    > test.out 2>&1
eval_tap $? 139 'RetrieveThirdPartyLoginPlatformCredentialV3' test.out

#- 140 AddThirdPartyLoginPlatformCredentialV3
# body param: body
echo '{"ACSURL": "8JAVlwpA", "AWSCognitoRegion": "8dcN4cMH", "AWSCognitoUserPool": "nUhMPTVh", "AllowedClients": ["nrhnuqIz", "1u6KTYJk", "jayIx1ik"], "AppId": "ot0weLRl", "AuthorizationEndpoint": "vP3uIbJp", "ClientId": "bAWcwXn6", "Environment": "2KRD6NFS", "FederationMetadataURL": "Ufik3Std", "GenericOauthFlow": false, "IsActive": true, "Issuer": "Fvrf3MFj", "JWKSEndpoint": "3Udr3NIT", "KeyID": "wS6zTj0g", "NetflixCertificates": {"encryptedPrivateKey": "SikhMQN4", "encryptedPrivateKeyName": "2OReeyuS", "publicCertificate": "g83MQtXl", "publicCertificateName": "JsBs4xsL", "rootCertificate": "ju1fbU6c", "rootCertificateName": "2pHfTdEL"}, "OrganizationId": "QzmQ0tlG", "PlatformName": "pYNKbmZO", "RedirectUri": "Yh36zyqm", "RegisteredDomains": [{"affectedClientIDs": ["APg8YYo2", "lg2e5ExZ", "tgOSakGo"], "domain": "GarIljst", "namespaces": ["jgvnasLt", "62NbXoc9", "WdDOOaSE"], "roleId": "DvO3pZNm"}, {"affectedClientIDs": ["yaVPHFNI", "mOZZ3p02", "Kw2gXyJ6"], "domain": "c7gm0hLb", "namespaces": ["CzO0cg1U", "XoYwdTve", "JPf5Prfo"], "roleId": "2wSTlsiW"}, {"affectedClientIDs": ["aVKTsDHL", "JOtUIA2K", "k30GBpIc"], "domain": "FqFSjzAt", "namespaces": ["UHfm5NZV", "kk76up88", "CGzjakPP"], "roleId": "gDrJ6nbO"}], "Secret": "FXR79Llm", "TeamID": "94IrrUsa", "TokenAuthenticationType": "5IN3zneO", "TokenClaimsMapping": {"3PfSCsrE": "QBIBPd4O", "RQwFEsDW": "QR1gxzDm", "wNaBzgve": "zgo4Hcru"}, "TokenEndpoint": "zXq19srU", "UserInfoEndpoint": "0Ziu2Yzu", "UserInfoHTTPMethod": "12mjAa5U", "scopes": ["Er77SWkF", "oKfWOTQa", "lSnHdEvN"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AddThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'dAxPigdh' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 140 'AddThirdPartyLoginPlatformCredentialV3' test.out

#- 141 DeleteThirdPartyLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op DeleteThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'EA1jwgCN' \
    > test.out 2>&1
eval_tap $? 141 'DeleteThirdPartyLoginPlatformCredentialV3' test.out

#- 142 UpdateThirdPartyLoginPlatformCredentialV3
# body param: body
echo '{"ACSURL": "OT2wawzJ", "AWSCognitoRegion": "3VV9FVDX", "AWSCognitoUserPool": "Vu2rkgkb", "AllowedClients": ["VeOdnb4E", "SmX8Gakp", "6KCGwSfK"], "AppId": "9L3kBpeI", "AuthorizationEndpoint": "JfpysHWm", "ClientId": "weCBAbB1", "Environment": "HDsMKFv7", "FederationMetadataURL": "Xwl46G1u", "GenericOauthFlow": true, "IsActive": false, "Issuer": "vJJD4L4u", "JWKSEndpoint": "4aCnnSn1", "KeyID": "ZELX6gNq", "NetflixCertificates": {"encryptedPrivateKey": "6b2KFudn", "encryptedPrivateKeyName": "EwxK9oJf", "publicCertificate": "dAijrhZ6", "publicCertificateName": "NokGiXHu", "rootCertificate": "gV9GyKKO", "rootCertificateName": "FVmdRTDx"}, "OrganizationId": "SnVDqCsP", "PlatformName": "H2JdHc3y", "RedirectUri": "ZQsGat7v", "RegisteredDomains": [{"affectedClientIDs": ["lUcvJjtY", "faKHPt4Z", "VDJNiPGR"], "domain": "b6yDjaib", "namespaces": ["Mrcg60Fk", "YSvTtjb3", "M58j2g4w"], "roleId": "hXhEkfAm"}, {"affectedClientIDs": ["34LFhR1l", "lDmdJpPe", "Hgo30pE7"], "domain": "bnnyRz0C", "namespaces": ["sYQkx6aN", "Aibqo07A", "eTvseLZC"], "roleId": "4FiEHm36"}, {"affectedClientIDs": ["OeOKZtFM", "bfDk50vF", "DrdyqgXv"], "domain": "gYYRu3YV", "namespaces": ["Ck18ewm7", "HGnTlwNm", "MJeOWadC"], "roleId": "BKRHbI9o"}], "Secret": "PH4kxSF4", "TeamID": "WN1Eitx1", "TokenAuthenticationType": "gxlt3JCj", "TokenClaimsMapping": {"6JG99XdG": "J23AaoO4", "CECSxIsp": "sslJdBky", "z929AKZ8": "bef2w1Cp"}, "TokenEndpoint": "xMcQllxT", "UserInfoEndpoint": "IuTuAWLt", "UserInfoHTTPMethod": "8Kcol2VM", "scopes": ["azWjOTo1", "Yzq1RQZv", "na8tYgPv"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op UpdateThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'VoGhPgXh' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 142 'UpdateThirdPartyLoginPlatformCredentialV3' test.out

#- 143 UpdateThirdPartyLoginPlatformDomainV3
# body param: body
echo '{"affectedClientIDs": ["2KELX4mU", "oVJ8Inh5", "FcymbFtj"], "assignedNamespaces": ["w1NKfUia", "4rMdEJ9N", "PJnjqGOe"], "domain": "gTAV2VHL", "roleId": "rwxMMa81"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op UpdateThirdPartyLoginPlatformDomainV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'muJwSwQA' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 143 'UpdateThirdPartyLoginPlatformDomainV3' test.out

#- 144 DeleteThirdPartyLoginPlatformDomainV3
# body param: body
echo '{"domain": "QK8pOWEN"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op DeleteThirdPartyLoginPlatformDomainV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'DzFSz58Q' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 144 'DeleteThirdPartyLoginPlatformDomainV3' test.out

#- 145 RetrieveSSOLoginPlatformCredential
$CLI_EXE \
    --sn iam \
    --op RetrieveSSOLoginPlatformCredential \
    --namespace $AB_NAMESPACE \
    --platformId '1tJrxRbG' \
    > test.out 2>&1
eval_tap $? 145 'RetrieveSSOLoginPlatformCredential' test.out

#- 146 AddSSOLoginPlatformCredential
# body param: body
echo '{"acsUrl": "BsX8WU7P", "apiKey": "Cio2KnnM", "appId": "cjgNfOTP", "federationMetadataUrl": "zfGauU4e", "isActive": true, "redirectUri": "BFcOMQfH", "secret": "TZ2xSylD", "ssoUrl": "o9jzkcr3"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AddSSOLoginPlatformCredential \
    --namespace $AB_NAMESPACE \
    --platformId 'A3w8Dj7R' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 146 'AddSSOLoginPlatformCredential' test.out

#- 147 DeleteSSOLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op DeleteSSOLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --platformId '84AOMGJM' \
    > test.out 2>&1
eval_tap $? 147 'DeleteSSOLoginPlatformCredentialV3' test.out

#- 148 UpdateSSOPlatformCredential
# body param: body
echo '{"acsUrl": "Jw5atY6k", "apiKey": "RupuMSgS", "appId": "QhGvnBEb", "federationMetadataUrl": "6bqzvojx", "isActive": false, "redirectUri": "96slIIcy", "secret": "5JZx2ahu", "ssoUrl": "cUvJtKcb"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op UpdateSSOPlatformCredential \
    --namespace $AB_NAMESPACE \
    --platformId 'AiHzZxA1' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 148 'UpdateSSOPlatformCredential' test.out

#- 149 AdminListUserIDByPlatformUserIDsV3
# body param: body
echo '{"platformUserIds": ["icE7kvK7", "VgNf0LSX", "1kBW6G6n"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminListUserIDByPlatformUserIDsV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'q907PD1F' \
    --rawPID 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 149 'AdminListUserIDByPlatformUserIDsV3' test.out

#- 150 AdminGetUserByPlatformUserIDV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserByPlatformUserIDV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'XwiBwsZG' \
    --platformUserId 'AIAfse9t' \
    > test.out 2>&1
eval_tap $? 150 'AdminGetUserByPlatformUserIDV3' test.out

#- 151 GetAdminUsersByRoleIdV3
$CLI_EXE \
    --sn iam \
    --op GetAdminUsersByRoleIdV3 \
    --namespace $AB_NAMESPACE \
    --roleId 'k3LEUQpl' \
    --after '82' \
    --before '71' \
    --limit '45' \
    > test.out 2>&1
eval_tap $? 151 'GetAdminUsersByRoleIdV3' test.out

#- 152 AdminGetUserByEmailAddressV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserByEmailAddressV3 \
    --namespace $AB_NAMESPACE \
    --emailAddress '16uGOfDa' \
    > test.out 2>&1
eval_tap $? 152 'AdminGetUserByEmailAddressV3' test.out

#- 153 AdminGetBulkUserBanV3
# body param: body
echo '{"bulkUserId": ["TQGbajpm", "Ym9ykAqt", "6T2UDvTF"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminGetBulkUserBanV3 \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --banType 'o6XbsHgI' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 153 'AdminGetBulkUserBanV3' test.out

#- 154 AdminListUserIDByUserIDsV3
# body param: body
echo '{"userIds": ["LPPNawwR", "3UAjymUj", "CF5tVRDS"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminListUserIDByUserIDsV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 154 'AdminListUserIDByUserIDsV3' test.out

#- 155 AdminBulkGetUsersPlatform
# body param: body
echo '{"userIds": ["C4vUGuvv", "OCRyUMz0", "2xQMazSJ"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBulkGetUsersPlatform \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 155 'AdminBulkGetUsersPlatform' test.out

#- 156 AdminInviteUserV3
# body param: body
echo '{"emailAddresses": ["O5D36c2I", "oLAHj9bh", "Yvus9bYs"], "isAdmin": false, "namespace": "MCTUvZ2p", "roles": ["PQRoHQx3", "NTQvbuHS", "jrADfLNn"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminInviteUserV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 156 'AdminInviteUserV3' test.out

#- 157 AdminQueryThirdPlatformLinkHistoryV3
$CLI_EXE \
    --sn iam \
    --op AdminQueryThirdPlatformLinkHistoryV3 \
    --namespace $AB_NAMESPACE \
    --limit '46' \
    --offset '58' \
    --platformUserId 'tJVwJ5oc' \
    --platformId '7VJikN88' \
    > test.out 2>&1
eval_tap $? 157 'AdminQueryThirdPlatformLinkHistoryV3' test.out

#- 158 AdminListUsersV3
$CLI_EXE \
    --sn iam \
    --op AdminListUsersV3 \
    --namespace $AB_NAMESPACE \
    --limit '28' \
    --offset '74' \
    > test.out 2>&1
eval_tap $? 158 'AdminListUsersV3' test.out

#- 159 AdminSearchUserV3
$CLI_EXE \
    --sn iam \
    --op AdminSearchUserV3 \
    --namespace $AB_NAMESPACE \
    --by '5GRZuNRv' \
    --endDate 'B6v8UMiA' \
    --includeTotal 'true' \
    --limit '90' \
    --offset '5' \
    --platformBy 't7KpA82o' \
    --platformId 'A8yioxe1' \
    --query 'dBnhrNXB' \
    --skipLoginQueue 'false' \
    --startDate 'oO1WqYsC' \
    --testAccount 'true' \
    > test.out 2>&1
eval_tap $? 159 'AdminSearchUserV3' test.out

#- 160 AdminGetBulkUserByEmailAddressV3
# body param: body
echo '{"listEmailAddressRequest": ["HuDvuD7s", "zUByiNwh", "7jt2h1ir"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminGetBulkUserByEmailAddressV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 160 'AdminGetBulkUserByEmailAddressV3' test.out

#- 161 AdminGetUserByUserIdV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserByUserIdV3 \
    --namespace $AB_NAMESPACE \
    --userId 'yO1YTvUS' \
    > test.out 2>&1
eval_tap $? 161 'AdminGetUserByUserIdV3' test.out

#- 162 AdminUpdateUserV3
# body param: body
echo '{"avatarUrl": "WKoi4rxY", "country": "9bauEVSe", "dateOfBirth": "F9xyenxI", "displayName": "jowObDSH", "languageTag": "IUQ3LY8f", "skipLoginQueue": false, "uniqueDisplayName": "OG3uXA1K", "userName": "EejpDJo4"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserV3 \
    --namespace $AB_NAMESPACE \
    --userId '1lQpQxs8' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 162 'AdminUpdateUserV3' test.out

#- 163 AdminGetUserBanV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserBanV3 \
    --namespace $AB_NAMESPACE \
    --userId 'xeh1i6aY' \
    --activeOnly 'false' \
    --after 'HH2OmW3o' \
    --before 'JeMSFtXu' \
    --limit '49' \
    > test.out 2>&1
eval_tap $? 163 'AdminGetUserBanV3' test.out

#- 164 AdminBanUserV3
# body param: body
echo '{"ban": "9mQBHw5h", "comment": "FtcHVh3S", "endDate": "typ04gSN", "reason": "g59uOX9F", "skipNotif": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBanUserV3 \
    --namespace $AB_NAMESPACE \
    --userId 'Imezk49J' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 164 'AdminBanUserV3' test.out

#- 165 AdminUpdateUserBanV3
# body param: body
echo '{"enabled": true, "skipNotif": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserBanV3 \
    --banId 'bBczVAOn' \
    --namespace $AB_NAMESPACE \
    --userId '5yGoZm5h' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 165 'AdminUpdateUserBanV3' test.out

#- 166 AdminSendVerificationCodeV3
# body param: body
echo '{"context": "oQfRLZLe", "emailAddress": "9Mf8HCec", "languageTag": "Mc6Uo2UQ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminSendVerificationCodeV3 \
    --namespace $AB_NAMESPACE \
    --userId 'WIHzrHCC' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 166 'AdminSendVerificationCodeV3' test.out

#- 167 AdminVerifyAccountV3
# body param: body
echo '{"Code": "2sNRicVf", "ContactType": "rLtkZels", "LanguageTag": "JhKFqoH1", "validateOnly": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminVerifyAccountV3 \
    --namespace $AB_NAMESPACE \
    --userId 'mWZ0wV8C' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 167 'AdminVerifyAccountV3' test.out

#- 168 GetUserVerificationCode
$CLI_EXE \
    --sn iam \
    --op GetUserVerificationCode \
    --namespace $AB_NAMESPACE \
    --userId 'iZdTjMrZ' \
    > test.out 2>&1
eval_tap $? 168 'GetUserVerificationCode' test.out

#- 169 AdminGetUserDeletionStatusV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserDeletionStatusV3 \
    --namespace $AB_NAMESPACE \
    --userId '29qsLhmn' \
    > test.out 2>&1
eval_tap $? 169 'AdminGetUserDeletionStatusV3' test.out

#- 170 AdminUpdateUserDeletionStatusV3
# body param: body
echo '{"deletionDate": 57, "enabled": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserDeletionStatusV3 \
    --namespace $AB_NAMESPACE \
    --userId 'Z5uP8Doz' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 170 'AdminUpdateUserDeletionStatusV3' test.out

#- 171 AdminUpgradeHeadlessAccountV3
# body param: body
echo '{"code": "sYFOFwi9", "country": "vZCCrI7U", "dateOfBirth": "ckdwpP3H", "displayName": "6qtH1hr6", "emailAddress": "mweKdd6J", "password": "M5SdDu2c", "uniqueDisplayName": "igjFiKNi", "validateOnly": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpgradeHeadlessAccountV3 \
    --namespace $AB_NAMESPACE \
    --userId '4DnrZkQB' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 171 'AdminUpgradeHeadlessAccountV3' test.out

#- 172 AdminDeleteUserInformationV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserInformationV3 \
    --namespace $AB_NAMESPACE \
    --userId 'TW42CMLA' \
    > test.out 2>&1
eval_tap $? 172 'AdminDeleteUserInformationV3' test.out

#- 173 AdminGetUserLoginHistoriesV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserLoginHistoriesV3 \
    --namespace $AB_NAMESPACE \
    --userId 'amGb2NCC' \
    --after '0.1686313551298404' \
    --before '0.6957946468988582' \
    --limit '5' \
    > test.out 2>&1
eval_tap $? 173 'AdminGetUserLoginHistoriesV3' test.out

#- 174 AdminResetPasswordV3
# body param: body
echo '{"languageTag": "NcA3GDYy", "newPassword": "q9etVI1X", "oldPassword": "MOW6vZlX"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminResetPasswordV3 \
    --namespace $AB_NAMESPACE \
    --userId 'FqfWi16G' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 174 'AdminResetPasswordV3' test.out

#- 175 AdminUpdateUserPermissionV3
# body param: body
echo '{"Permissions": [{"Action": 97, "Resource": "71pIqs3x", "SchedAction": 90, "SchedCron": "ehYN9OQl", "SchedRange": ["8WWSmKWV", "WvuEo0s5", "QwhyUP1z"]}, {"Action": 45, "Resource": "CZndI06U", "SchedAction": 32, "SchedCron": "kDTndMcj", "SchedRange": ["8exi1pyq", "D5BwRBRb", "Y8uG63hU"]}, {"Action": 13, "Resource": "3opu8RVL", "SchedAction": 77, "SchedCron": "ej9QWM5T", "SchedRange": ["dm02s3Gh", "c6DtjTGE", "IjMr15IO"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserPermissionV3 \
    --namespace $AB_NAMESPACE \
    --userId 'eBcsmoFj' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 175 'AdminUpdateUserPermissionV3' test.out

#- 176 AdminAddUserPermissionsV3
# body param: body
echo '{"Permissions": [{"Action": 38, "Resource": "DzPrUeDl", "SchedAction": 11, "SchedCron": "giev6Vjp", "SchedRange": ["bOMWLVNK", "mSihewHY", "aXIuuNgB"]}, {"Action": 45, "Resource": "YeXuxjz2", "SchedAction": 24, "SchedCron": "jRxg8WjW", "SchedRange": ["lAcQWglY", "HuUeOAfC", "fqAUl9AY"]}, {"Action": 60, "Resource": "sKsKfZvG", "SchedAction": 82, "SchedCron": "y5HPT3TB", "SchedRange": ["iaQwTMS6", "pEgACM3O", "g6DdxLEP"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddUserPermissionsV3 \
    --namespace $AB_NAMESPACE \
    --userId 'RRyrYL0Q' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 176 'AdminAddUserPermissionsV3' test.out

#- 177 AdminDeleteUserPermissionBulkV3
# body param: body
echo '[{"Action": 48, "Resource": "rpbS73IL"}, {"Action": 25, "Resource": "U2G6uxqf"}, {"Action": 14, "Resource": "6BQQkftn"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserPermissionBulkV3 \
    --namespace $AB_NAMESPACE \
    --userId 'fe42tnQC' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 177 'AdminDeleteUserPermissionBulkV3' test.out

#- 178 AdminDeleteUserPermissionV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserPermissionV3 \
    --action '93' \
    --namespace $AB_NAMESPACE \
    --resource 'Vjuhu1Qq' \
    --userId 'HTtbXvyI' \
    > test.out 2>&1
eval_tap $? 178 'AdminDeleteUserPermissionV3' test.out

#- 179 AdminGetUserPlatformAccountsV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserPlatformAccountsV3 \
    --namespace $AB_NAMESPACE \
    --userId 'nFboWHeK' \
    --after 'zaTAP0j8' \
    --before 'Bq2liSjF' \
    --limit '88' \
    --platformId 'HuGofQax' \
    > test.out 2>&1
eval_tap $? 179 'AdminGetUserPlatformAccountsV3' test.out

#- 180 AdminGetListJusticePlatformAccounts
$CLI_EXE \
    --sn iam \
    --op AdminGetListJusticePlatformAccounts \
    --namespace $AB_NAMESPACE \
    --userId 'RAPUELm0' \
    > test.out 2>&1
eval_tap $? 180 'AdminGetListJusticePlatformAccounts' test.out

#- 181 AdminGetUserMapping
$CLI_EXE \
    --sn iam \
    --op AdminGetUserMapping \
    --namespace $AB_NAMESPACE \
    --targetNamespace '3sZtg89Z' \
    --userId 'i9lZ5a5t' \
    > test.out 2>&1
eval_tap $? 181 'AdminGetUserMapping' test.out

#- 182 AdminCreateJusticeUser
$CLI_EXE \
    --sn iam \
    --op AdminCreateJusticeUser \
    --namespace $AB_NAMESPACE \
    --targetNamespace 'pffVppf1' \
    --userId '94FCrlAG' \
    > test.out 2>&1
eval_tap $? 182 'AdminCreateJusticeUser' test.out

#- 183 AdminLinkPlatformAccount
# body param: body
echo '{"platformId": "ilRS2GrQ", "platformUserId": "mqGAKv4n"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminLinkPlatformAccount \
    --namespace $AB_NAMESPACE \
    --userId 'AnTbcKu1' \
    --skipConflict 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 183 'AdminLinkPlatformAccount' test.out

#- 184 AdminPlatformUnlinkV3
# body param: body
echo '{"platformNamespace": "qLXpVEw1"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminPlatformUnlinkV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'sEA6HXe7' \
    --userId 'bQetj4zz' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 184 'AdminPlatformUnlinkV3' test.out

#- 185 AdminPlatformLinkV3
$CLI_EXE \
    --sn iam \
    --op AdminPlatformLinkV3 \
    --namespace $AB_NAMESPACE \
    --platformId '2Q9XFS9h' \
    --userId 'NmyiTg0X' \
    --ticket 'tmLt2hYC' \
    > test.out 2>&1
eval_tap $? 185 'AdminPlatformLinkV3' test.out

#- 186 AdminDeleteUserLinkingHistoryByPlatformIDV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserLinkingHistoryByPlatformIDV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'zK8an1i5' \
    --userId 'gcAY4o3x' \
    > test.out 2>&1
eval_tap $? 186 'AdminDeleteUserLinkingHistoryByPlatformIDV3' test.out

#- 187 AdminGetThirdPartyPlatformTokenLinkStatusV3
$CLI_EXE \
    --sn iam \
    --op AdminGetThirdPartyPlatformTokenLinkStatusV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'GVybsRt9' \
    --userId 'SP2qyWxt' \
    --platformToken 'aXh6IaK2' \
    > test.out 2>&1
eval_tap $? 187 'AdminGetThirdPartyPlatformTokenLinkStatusV3' test.out

#- 188 AdminGetUserSinglePlatformAccount
$CLI_EXE \
    --sn iam \
    --op AdminGetUserSinglePlatformAccount \
    --namespace $AB_NAMESPACE \
    --platformId 'k9z519wV' \
    --userId 'Rd264qdb' \
    > test.out 2>&1
eval_tap $? 188 'AdminGetUserSinglePlatformAccount' test.out

#- 189 AdminDeleteUserRolesV3
# body param: body
echo '["4fN3OpaK", "Ft86iGEc", "m5LARl35"]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserRolesV3 \
    --namespace $AB_NAMESPACE \
    --userId '2SUEdLbu' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 189 'AdminDeleteUserRolesV3' test.out

#- 190 AdminSaveUserRoleV3
# body param: body
echo '[{"namespace": "HLa3PFxg", "roleId": "AB3FNZLI"}, {"namespace": "kyP0NMkG", "roleId": "VVWeUvNM"}, {"namespace": "x3bttpKk", "roleId": "wWtfLFOS"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminSaveUserRoleV3 \
    --namespace $AB_NAMESPACE \
    --userId 'YJc8eejW' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 190 'AdminSaveUserRoleV3' test.out

#- 191 AdminAddUserRoleV3
$CLI_EXE \
    --sn iam \
    --op AdminAddUserRoleV3 \
    --namespace $AB_NAMESPACE \
    --roleId 'X2bjNvym' \
    --userId 'wEpIuPRL' \
    > test.out 2>&1
eval_tap $? 191 'AdminAddUserRoleV3' test.out

#- 192 AdminDeleteUserRoleV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserRoleV3 \
    --namespace $AB_NAMESPACE \
    --roleId 'QcGaXWcX' \
    --userId 'dD9QINBQ' \
    > test.out 2>&1
eval_tap $? 192 'AdminDeleteUserRoleV3' test.out

#- 193 AdminUpdateUserStatusV3
# body param: body
echo '{"enabled": true, "reason": "rWsg6JAX"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserStatusV3 \
    --namespace $AB_NAMESPACE \
    --userId 'FcyS7hz7' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 193 'AdminUpdateUserStatusV3' test.out

#- 194 AdminTrustlyUpdateUserIdentity
# body param: body
echo '{"emailAddress": "sSJzzhUg", "password": "Bmah784Z"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminTrustlyUpdateUserIdentity \
    --namespace $AB_NAMESPACE \
    --userId 'Gx3eJr0v' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 194 'AdminTrustlyUpdateUserIdentity' test.out

#- 195 AdminVerifyUserWithoutVerificationCodeV3
$CLI_EXE \
    --sn iam \
    --op AdminVerifyUserWithoutVerificationCodeV3 \
    --namespace $AB_NAMESPACE \
    --userId 'H5tlqMOb' \
    > test.out 2>&1
eval_tap $? 195 'AdminVerifyUserWithoutVerificationCodeV3' test.out

#- 196 AdminUpdateClientSecretV3
# body param: body
echo '{"newSecret": "0cDmpZwt"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateClientSecretV3 \
    --clientId 'anNAnXdc' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 196 'AdminUpdateClientSecretV3' test.out

#- 197 AdminGetRolesV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRolesV3 \
    --after 'yb1NN0Ng' \
    --before 'BZbU9Hhb' \
    --isWildcard 'true' \
    --limit '85' \
    > test.out 2>&1
eval_tap $? 197 'AdminGetRolesV3' test.out

#- 198 AdminCreateRoleV3
# body param: body
echo '{"adminRole": true, "deletable": false, "isWildcard": false, "managers": [{"displayName": "SFTKTczK", "namespace": "K2jp9Tpp", "userId": "hj4UTxV8"}, {"displayName": "QS1Z2GLb", "namespace": "hudQMMT1", "userId": "5hfg9OBj"}, {"displayName": "0gmepeth", "namespace": "Ynp96X70", "userId": "7qqOElN8"}], "members": [{"displayName": "uO4dKqQH", "namespace": "HN567WRq", "userId": "HkJkX2tl"}, {"displayName": "bIoD9g7l", "namespace": "wyim4QbP", "userId": "jxjmJXyK"}, {"displayName": "4QRZB2zs", "namespace": "GfJU03tY", "userId": "bLP2zUVD"}], "permissions": [{"action": 75, "resource": "MILhkxjj", "schedAction": 77, "schedCron": "mDz6VgRa", "schedRange": ["a0adcfYJ", "mrrHgdLE", "LgQQv5ij"]}, {"action": 58, "resource": "VmNVOqPN", "schedAction": 30, "schedCron": "v0YjJ1kV", "schedRange": ["zfnpDr2y", "s1jhu8hv", "YyRPIF9o"]}, {"action": 62, "resource": "h5wSNSeg", "schedAction": 87, "schedCron": "DSkVF3gy", "schedRange": ["tLFn17hE", "CdshlZIM", "CKpZkIf2"]}], "roleName": "CPEiip0y"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminCreateRoleV3 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 198 'AdminCreateRoleV3' test.out

#- 199 AdminGetRoleV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleV3 \
    --roleId 'GKENqbnM' \
    > test.out 2>&1
eval_tap $? 199 'AdminGetRoleV3' test.out

#- 200 AdminDeleteRoleV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteRoleV3 \
    --roleId '4lEnSJa1' \
    > test.out 2>&1
eval_tap $? 200 'AdminDeleteRoleV3' test.out

#- 201 AdminUpdateRoleV3
# body param: body
echo '{"deletable": true, "isWildcard": false, "roleName": "9qAnrjNt"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateRoleV3 \
    --roleId 'naKeeDuB' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 201 'AdminUpdateRoleV3' test.out

#- 202 AdminGetRoleAdminStatusV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleAdminStatusV3 \
    --roleId 'ApBVc4VM' \
    > test.out 2>&1
eval_tap $? 202 'AdminGetRoleAdminStatusV3' test.out

#- 203 AdminUpdateAdminRoleStatusV3
$CLI_EXE \
    --sn iam \
    --op AdminUpdateAdminRoleStatusV3 \
    --roleId 'JAEH8dI7' \
    > test.out 2>&1
eval_tap $? 203 'AdminUpdateAdminRoleStatusV3' test.out

#- 204 AdminRemoveRoleAdminV3
$CLI_EXE \
    --sn iam \
    --op AdminRemoveRoleAdminV3 \
    --roleId 'suAmRBvJ' \
    > test.out 2>&1
eval_tap $? 204 'AdminRemoveRoleAdminV3' test.out

#- 205 AdminGetRoleManagersV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleManagersV3 \
    --roleId 'szyTlcRn' \
    --after '775SKS8V' \
    --before 'ZFIY4kE3' \
    --limit '69' \
    > test.out 2>&1
eval_tap $? 205 'AdminGetRoleManagersV3' test.out

#- 206 AdminAddRoleManagersV3
# body param: body
echo '{"managers": [{"displayName": "ISSM9q1f", "namespace": "7p34WAFR", "userId": "FwYwxMU4"}, {"displayName": "38JzwApv", "namespace": "nctencGU", "userId": "HgJp5Pm3"}, {"displayName": "w958MHMu", "namespace": "8QtmHMQV", "userId": "vFp9rfVZ"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddRoleManagersV3 \
    --roleId 'hIM7mTal' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 206 'AdminAddRoleManagersV3' test.out

#- 207 AdminRemoveRoleManagersV3
# body param: body
echo '{"managers": [{"displayName": "WckggtuU", "namespace": "zwNBER6j", "userId": "oDfrr52H"}, {"displayName": "oL4zYhuW", "namespace": "W3kO08hS", "userId": "K0JQ5IK9"}, {"displayName": "PmcBiBx5", "namespace": "KKF09BJm", "userId": "HCpaxr9I"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminRemoveRoleManagersV3 \
    --roleId 'cXDQeY2D' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 207 'AdminRemoveRoleManagersV3' test.out

#- 208 AdminGetRoleMembersV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleMembersV3 \
    --roleId 'KdigAxrm' \
    --after 'LtxFN3Oz' \
    --before '3GHwgKUP' \
    --limit '44' \
    > test.out 2>&1
eval_tap $? 208 'AdminGetRoleMembersV3' test.out

#- 209 AdminAddRoleMembersV3
# body param: body
echo '{"members": [{"displayName": "cizvpwVu", "namespace": "X0SFSWva", "userId": "C8sugjX2"}, {"displayName": "53rKk0gI", "namespace": "2wGjg8tx", "userId": "61WH1WHD"}, {"displayName": "ChlmAg3f", "namespace": "VEJ1Hi0C", "userId": "V3rmzYfJ"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddRoleMembersV3 \
    --roleId 'jg7nWSZT' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 209 'AdminAddRoleMembersV3' test.out

#- 210 AdminRemoveRoleMembersV3
# body param: body
echo '{"members": [{"displayName": "H6Qtof12", "namespace": "fxTrUEsx", "userId": "FXCJWRv0"}, {"displayName": "s2L01HEL", "namespace": "tXiLroZT", "userId": "eeXUqUAE"}, {"displayName": "aW9mVOUn", "namespace": "vcLiWtbT", "userId": "erpcj0rC"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminRemoveRoleMembersV3 \
    --roleId 'NhdennFe' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 210 'AdminRemoveRoleMembersV3' test.out

#- 211 AdminUpdateRolePermissionsV3
# body param: body
echo '{"permissions": [{"action": 56, "resource": "AsDnreHS", "schedAction": 5, "schedCron": "Xt9TqizC", "schedRange": ["vGPgFlvK", "wEUOvUnx", "aImoGHXu"]}, {"action": 99, "resource": "WCNaPyFz", "schedAction": 31, "schedCron": "OD27QvUz", "schedRange": ["uiSRLW1U", "6wL4yYkY", "TyNdGyW5"]}, {"action": 66, "resource": "OKmOfGiR", "schedAction": 80, "schedCron": "paLTPKUW", "schedRange": ["zAueEGlp", "aKo2IAnB", "SdnrefPZ"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateRolePermissionsV3 \
    --roleId 'sx6BE9K5' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 211 'AdminUpdateRolePermissionsV3' test.out

#- 212 AdminAddRolePermissionsV3
# body param: body
echo '{"permissions": [{"action": 84, "resource": "4h8lTJUp", "schedAction": 100, "schedCron": "Ktlh4A1D", "schedRange": ["z9CZIkRU", "GmVjaod3", "sPz3gTZ2"]}, {"action": 71, "resource": "x1RY8KX3", "schedAction": 22, "schedCron": "YpULd4dQ", "schedRange": ["xiGAfbmc", "FojwXCxN", "wdQjYY3r"]}, {"action": 67, "resource": "kCgNVScQ", "schedAction": 8, "schedCron": "6Kv544ay", "schedRange": ["xOJ4COmW", "8Y5OUTpj", "5j77fz8d"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddRolePermissionsV3 \
    --roleId 'i1mUuXUM' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 212 'AdminAddRolePermissionsV3' test.out

#- 213 AdminDeleteRolePermissionsV3
# body param: body
echo '["QkEVThQp", "3EMtdhXD", "qxa5HvQW"]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDeleteRolePermissionsV3 \
    --roleId 'AWBqMp6C' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 213 'AdminDeleteRolePermissionsV3' test.out

#- 214 AdminDeleteRolePermissionV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteRolePermissionV3 \
    --action '62' \
    --resource 'rRk38pGT' \
    --roleId 'X2xmJ15I' \
    > test.out 2>&1
eval_tap $? 214 'AdminDeleteRolePermissionV3' test.out

#- 215 AdminGetMyUserV3
$CLI_EXE \
    --sn iam \
    --op AdminGetMyUserV3 \
    > test.out 2>&1
eval_tap $? 215 'AdminGetMyUserV3' test.out

#- 216 UserAuthenticationV3
$CLI_EXE \
    --sn iam \
    --op UserAuthenticationV3 \
    --client_id 'eQs8Rg63' \
    --extend_exp 'true' \
    --redirect_uri 'i0dxA64j' \
    --password 'wQVcHqA0' \
    --request_id 'LpgKeIgb' \
    --user_name 'Sa5SRh3j' \
    > test.out 2>&1
eval_tap $? 216 'UserAuthenticationV3' test.out

#- 217 AuthenticationWithPlatformLinkV3
$CLI_EXE \
    --sn iam \
    --op AuthenticationWithPlatformLinkV3 \
    --extend_exp 'true' \
    --client_id 'UPNW4Y45' \
    --linkingToken '3YVl9T8v' \
    --password 'G21wmSkC' \
    --username 'mlg5oIFY' \
    > test.out 2>&1
eval_tap $? 217 'AuthenticationWithPlatformLinkV3' test.out

#- 218 GenerateTokenByNewHeadlessAccountV3
$CLI_EXE \
    --sn iam \
    --op GenerateTokenByNewHeadlessAccountV3 \
    --additionalData 'ExpzFkUs' \
    --extend_exp 'false' \
    --linkingToken 'q71KQ6Mq' \
    > test.out 2>&1
eval_tap $? 218 'GenerateTokenByNewHeadlessAccountV3' test.out

#- 219 RequestOneTimeLinkingCodeV3
$CLI_EXE \
    --sn iam \
    --op RequestOneTimeLinkingCodeV3 \
    --platformId 'kI3hwX1v' \
    > test.out 2>&1
eval_tap $? 219 'RequestOneTimeLinkingCodeV3' test.out

#- 220 ValidateOneTimeLinkingCodeV3
$CLI_EXE \
    --sn iam \
    --op ValidateOneTimeLinkingCodeV3 \
    --oneTimeLinkCode 'Btq3WCHC' \
    > test.out 2>&1
eval_tap $? 220 'ValidateOneTimeLinkingCodeV3' test.out

#- 221 RequestTokenByOneTimeLinkCodeResponseV3
$CLI_EXE \
    --sn iam \
    --op RequestTokenByOneTimeLinkCodeResponseV3 \
    --additionalData 'bc4Y8ola' \
    --isTransient 'false' \
    --client_id 'ce7dHeFO' \
    --oneTimeLinkCode 'McUNJQkj' \
    > test.out 2>&1
eval_tap $? 221 'RequestTokenByOneTimeLinkCodeResponseV3' test.out

#- 222 GetCountryLocationV3
$CLI_EXE \
    --sn iam \
    --op GetCountryLocationV3 \
    > test.out 2>&1
eval_tap $? 222 'GetCountryLocationV3' test.out

#- 223 Logout
$CLI_EXE \
    --sn iam \
    --op Logout \
    > test.out 2>&1
eval_tap $? 223 'Logout' test.out

#- 224 RequestTokenExchangeCodeV3
$CLI_EXE \
    --sn iam \
    --op RequestTokenExchangeCodeV3 \
    --namespace $AB_NAMESPACE \
    --codeChallenge 'Tzi7ugum' \
    --codeChallengeMethod 'plain' \
    --client_id 'vJNcP4yA' \
    > test.out 2>&1
eval_tap $? 224 'RequestTokenExchangeCodeV3' test.out

#- 225 AdminRetrieveUserThirdPartyPlatformTokenV3
$CLI_EXE \
    --sn iam \
    --op AdminRetrieveUserThirdPartyPlatformTokenV3 \
    --namespace $AB_NAMESPACE \
    --platformId '3g6oXu5d' \
    --userId 'XrMFqyJi' \
    > test.out 2>&1
eval_tap $? 225 'AdminRetrieveUserThirdPartyPlatformTokenV3' test.out

#- 226 RevokeUserV3
$CLI_EXE \
    --sn iam \
    --op RevokeUserV3 \
    --namespace $AB_NAMESPACE \
    --userId 'scTa0mHg' \
    --includeGameNamespace 'false' \
    > test.out 2>&1
eval_tap $? 226 'RevokeUserV3' test.out

#- 227 AuthorizeV3
$CLI_EXE \
    --sn iam \
    --op AuthorizeV3 \
    --codeChallenge 'E3OiqWVv' \
    --codeChallengeMethod 'S256' \
    --createHeadless 'true' \
    --oneTimeLinkCode 'qpCjSsfv' \
    --redirectUri 'rMjNRJrg' \
    --scope 'zuimKUmz' \
    --state 'T7HwmG64' \
    --targetAuthPage 'PZDqgXt2' \
    --useRedirectUriAsLoginUrlWhenLocked 'true' \
    --clientId '27bJMkUr' \
    --responseType 'code' \
    > test.out 2>&1
eval_tap $? 227 'AuthorizeV3' test.out

#- 228 TokenIntrospectionV3
$CLI_EXE \
    --sn iam \
    --op TokenIntrospectionV3 \
    --token 'uNTFbp7c' \
    > test.out 2>&1
eval_tap $? 228 'TokenIntrospectionV3' test.out

#- 229 GetJWKSV3
$CLI_EXE \
    --sn iam \
    --op GetJWKSV3 \
    > test.out 2>&1
eval_tap $? 229 'GetJWKSV3' test.out

#- 230 SendMFAAuthenticationCode
$CLI_EXE \
    --sn iam \
    --op SendMFAAuthenticationCode \
    --clientId 'lBllhyfd' \
    --factor '6acqJqaS' \
    --mfaToken '0QyTfXAz' \
    > test.out 2>&1
eval_tap $? 230 'SendMFAAuthenticationCode' test.out

#- 231 Change2faMethod
$CLI_EXE \
    --sn iam \
    --op Change2faMethod \
    --factor 'oIYHzLFx' \
    --mfaToken 'vLrx8HRx' \
    > test.out 2>&1
eval_tap $? 231 'Change2faMethod' test.out

#- 232 Verify2faCode
$CLI_EXE \
    --sn iam \
    --op Verify2faCode \
    --code 'UVB0O5sr' \
    --factor 'b7XmZdaM' \
    --mfaToken 'GJxK4cqs' \
    --rememberDevice 'false' \
    > test.out 2>&1
eval_tap $? 232 'Verify2faCode' test.out

#- 233 RetrieveUserThirdPartyPlatformTokenV3
$CLI_EXE \
    --sn iam \
    --op RetrieveUserThirdPartyPlatformTokenV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'fHTD95E9' \
    --userId 'hZwHOazp' \
    > test.out 2>&1
eval_tap $? 233 'RetrieveUserThirdPartyPlatformTokenV3' test.out

#- 234 AuthCodeRequestV3
$CLI_EXE \
    --sn iam \
    --op AuthCodeRequestV3 \
    --platformId 'tqBY8j6r' \
    --clientId 'sKUyVJds' \
    --redirectUri '9fIPp8Xd' \
    --requestId 'Z2uXeNk3' \
    > test.out 2>&1
eval_tap $? 234 'AuthCodeRequestV3' test.out

#- 235 PlatformTokenGrantV3
$CLI_EXE \
    --sn iam \
    --op PlatformTokenGrantV3 \
    --platformId 'MA5m3fnq' \
    --additionalData 'x2zXUjmg' \
    --client_id '0PgeJCHb' \
    --createHeadless 'true' \
    --device_id 'SxelP6qi' \
    --macAddress '0l7Svro7' \
    --platform_token 'mFJe1xVq' \
    --skipSetCookie 'false' \
    > test.out 2>&1
eval_tap $? 235 'PlatformTokenGrantV3' test.out

#- 236 GetRevocationListV3
$CLI_EXE \
    --sn iam \
    --op GetRevocationListV3 \
    > test.out 2>&1
eval_tap $? 236 'GetRevocationListV3' test.out

#- 237 TokenRevocationV3
$CLI_EXE \
    --sn iam \
    --op TokenRevocationV3 \
    --token 'tLSX1t46' \
    > test.out 2>&1
eval_tap $? 237 'TokenRevocationV3' test.out

#- 238 SimultaneousLoginV3
$CLI_EXE \
    --sn iam \
    --op SimultaneousLoginV3 \
    --simultaneousPlatform 'pspc' \
    --simultaneousTicket 'Q96ATJRJ' \
    --nativePlatform 'steam' \
    --nativePlatformTicket 'Pi5GhBK8' \
    > test.out 2>&1
eval_tap $? 238 'SimultaneousLoginV3' test.out

#- 239 TokenGrantV3
$CLI_EXE \
    --sn iam \
    --op TokenGrantV3 \
    --additionalData '39Stzbap' \
    --client_id 'hmXU5YVA' \
    --code 'w2lYgRts' \
    --code_verifier 'ToZ7F4V2' \
    --extendNamespace '8XVU2rLJ' \
    --extend_exp 'false' \
    --password 'ELmepmSe' \
    --redirect_uri 'ScVaVRwY' \
    --refresh_token 'QSVXqQb9' \
    --username '48VyCkxf' \
    --grant_type 'authorization_code' \
    > test.out 2>&1
eval_tap $? 239 'TokenGrantV3' test.out

#- 240 VerifyTokenV3
$CLI_EXE \
    --sn iam \
    --op VerifyTokenV3 \
    --token 'l2bzYq54' \
    > test.out 2>&1
eval_tap $? 240 'VerifyTokenV3' test.out

#- 241 PlatformAuthenticationV3
$CLI_EXE \
    --sn iam \
    --op PlatformAuthenticationV3 \
    --platformId 'US8M86WE' \
    --code 'az94bYlQ' \
    --error 'I0F1pkWV' \
    --openidAssocHandle 'fEHHnErl' \
    --openidClaimedId 'okGHwJ5z' \
    --openidIdentity 've6uB3mc' \
    --openidMode 'VViRQwUW' \
    --openidNs 'FVfVk0J4' \
    --openidOpEndpoint 'V2UobEDm' \
    --openidResponseNonce 'lgpbnXKR' \
    --openidReturnTo 'RULSX0wL' \
    --openidSig 'iIxhNz1s' \
    --openidSigned 'FlCtNau3' \
    --state 'h127dreF' \
    > test.out 2>&1
eval_tap $? 241 'PlatformAuthenticationV3' test.out

#- 242 PlatformTokenRefreshV3
$CLI_EXE \
    --sn iam \
    --op PlatformTokenRefreshV3 \
    --platformId '4FW2ZYFQ' \
    --platform_token 'vXcnZmhJ' \
    > test.out 2>&1
eval_tap $? 242 'PlatformTokenRefreshV3' test.out

#- 243 PublicGetInputValidations
$CLI_EXE \
    --sn iam \
    --op PublicGetInputValidations \
    --defaultOnEmpty 'false' \
    --languageCode 'IEjajv4g' \
    > test.out 2>&1
eval_tap $? 243 'PublicGetInputValidations' test.out

#- 244 PublicGetInputValidationByField
$CLI_EXE \
    --sn iam \
    --op PublicGetInputValidationByField \
    --field '6iEVEzJ9' \
    > test.out 2>&1
eval_tap $? 244 'PublicGetInputValidationByField' test.out

#- 245 PublicGetCountryAgeRestrictionV3
$CLI_EXE \
    --sn iam \
    --op PublicGetCountryAgeRestrictionV3 \
    --countryCode 'cRVS3V7o' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 245 'PublicGetCountryAgeRestrictionV3' test.out

#- 246 PublicGetConfigValueV3
$CLI_EXE \
    --sn iam \
    --op PublicGetConfigValueV3 \
    --configKey '4W3o9JW2' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 246 'PublicGetConfigValueV3' test.out

#- 247 PublicGetCountryListV3
$CLI_EXE \
    --sn iam \
    --op PublicGetCountryListV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 247 'PublicGetCountryListV3' test.out

#- 248 RetrieveAllActiveThirdPartyLoginPlatformCredentialPublicV3
$CLI_EXE \
    --sn iam \
    --op RetrieveAllActiveThirdPartyLoginPlatformCredentialPublicV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 248 'RetrieveAllActiveThirdPartyLoginPlatformCredentialPublicV3' test.out

#- 249 RetrieveActiveOIDCClientsPublicV3
$CLI_EXE \
    --sn iam \
    --op RetrieveActiveOIDCClientsPublicV3 \
    --namespace $AB_NAMESPACE \
    --clientId 'Lszsv8I4' \
    > test.out 2>&1
eval_tap $? 249 'RetrieveActiveOIDCClientsPublicV3' test.out

#- 250 PublicListUserIDByPlatformUserIDsV3
# body param: body
echo '{"platformUserIds": ["DSmgyJkn", "tTUBZQbg", "qeXdsca0"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicListUserIDByPlatformUserIDsV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'Sy1t73Di' \
    --rawPID 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 250 'PublicListUserIDByPlatformUserIDsV3' test.out

#- 251 PublicGetUserByPlatformUserIDV3
$CLI_EXE \
    --sn iam \
    --op PublicGetUserByPlatformUserIDV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'lpik1FQA' \
    --platformUserId 'N6zIJifG' \
    > test.out 2>&1
eval_tap $? 251 'PublicGetUserByPlatformUserIDV3' test.out

#- 252 PublicGetAsyncStatus
$CLI_EXE \
    --sn iam \
    --op PublicGetAsyncStatus \
    --namespace $AB_NAMESPACE \
    --requestId '6Bx68HUV' \
    > test.out 2>&1
eval_tap $? 252 'PublicGetAsyncStatus' test.out

#- 253 PublicSearchUserV3
$CLI_EXE \
    --sn iam \
    --op PublicSearchUserV3 \
    --namespace $AB_NAMESPACE \
    --by 'Tx3T2zO5' \
    --limit '9' \
    --offset '47' \
    --platformBy 'GIVwax5p' \
    --platformId 'DyySwIbN' \
    --query 'YSpf2bsB' \
    > test.out 2>&1
eval_tap $? 253 'PublicSearchUserV3' test.out

#- 254 PublicCreateUserV3
# body param: body
echo '{"PasswordMD5Sum": "sl2thU4A", "acceptedPolicies": [{"isAccepted": false, "localizedPolicyVersionId": "HHQWPthg", "policyId": "k4y1EezQ", "policyVersionId": "DTB6JT7q"}, {"isAccepted": false, "localizedPolicyVersionId": "LHXc65bM", "policyId": "KQs23MsZ", "policyVersionId": "uJFpGKIJ"}, {"isAccepted": false, "localizedPolicyVersionId": "7h95Atsx", "policyId": "lwVVHjFE", "policyVersionId": "2X0PL5j8"}], "authType": "b1DEigQM", "code": "7VA5azqt", "country": "sjnPqUqm", "dateOfBirth": "WSjtFEcV", "displayName": "O1sjitdH", "emailAddress": "C6kRu16V", "password": "f9FhjCNW", "reachMinimumAge": false, "uniqueDisplayName": "oR8mqALM"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicCreateUserV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 254 'PublicCreateUserV3' test.out

#- 255 CheckUserAvailability
$CLI_EXE \
    --sn iam \
    --op CheckUserAvailability \
    --namespace $AB_NAMESPACE \
    --field '2ngqPF7K' \
    --query 'VI3I6vAy' \
    > test.out 2>&1
eval_tap $? 255 'CheckUserAvailability' test.out

#- 256 PublicBulkGetUsers
# body param: body
echo '{"userIds": ["7F5M13Gb", "pdIPLjUZ", "hho4VPzR"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicBulkGetUsers \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 256 'PublicBulkGetUsers' test.out

#- 257 PublicSendRegistrationCode
# body param: body
echo '{"emailAddress": "QM2Btsj5", "languageTag": "FDO5cyIl"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicSendRegistrationCode \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 257 'PublicSendRegistrationCode' test.out

#- 258 PublicVerifyRegistrationCode
# body param: body
echo '{"code": "O533htcd", "emailAddress": "XbEG0pMU"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicVerifyRegistrationCode \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 258 'PublicVerifyRegistrationCode' test.out

#- 259 PublicForgotPasswordV3
# body param: body
echo '{"emailAddress": "8vHpI0wU", "languageTag": "LKg58NLj"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicForgotPasswordV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 259 'PublicForgotPasswordV3' test.out

#- 260 GetAdminInvitationV3
$CLI_EXE \
    --sn iam \
    --op GetAdminInvitationV3 \
    --invitationId 'BVsFmje5' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 260 'GetAdminInvitationV3' test.out

#- 261 CreateUserFromInvitationV3
# body param: body
echo '{"PasswordMD5Sum": "Toem40Ru", "acceptedPolicies": [{"isAccepted": true, "localizedPolicyVersionId": "adnK1SlT", "policyId": "jl1ew9Mm", "policyVersionId": "yF0E8HdJ"}, {"isAccepted": true, "localizedPolicyVersionId": "Mvi79TJk", "policyId": "PapWOqFb", "policyVersionId": "OpG5nnv5"}, {"isAccepted": false, "localizedPolicyVersionId": "Xj27WCFh", "policyId": "teoyTnlv", "policyVersionId": "zQijPrfj"}], "authType": "EDqwFCHY", "code": "0s7Khl0T", "country": "CuGma0kr", "dateOfBirth": "m8CftJAB", "displayName": "TU7inYNw", "emailAddress": "pS97kWHU", "password": "VJ8i0bEf", "reachMinimumAge": true, "uniqueDisplayName": "9Oz0p6Rq"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op CreateUserFromInvitationV3 \
    --invitationId '5VeQDl7l' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 261 'CreateUserFromInvitationV3' test.out

#- 262 UpdateUserV3
# body param: body
echo '{"avatarUrl": "KRL4iYEl", "country": "3Hrqec1t", "dateOfBirth": "aoAyFW0G", "displayName": "QJWflkJc", "languageTag": "WsSkPEhV", "uniqueDisplayName": "5RtY0N9q", "userName": "GzgeBWDl"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op UpdateUserV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 262 'UpdateUserV3' test.out

#- 263 PublicPartialUpdateUserV3
# body param: body
echo '{"avatarUrl": "9SDgQAon", "country": "OWJY0lmF", "dateOfBirth": "uJRHPtZo", "displayName": "dj1b72jE", "languageTag": "5SGNNeBn", "uniqueDisplayName": "92p6OXBC", "userName": "3caKxZ4V"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicPartialUpdateUserV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 263 'PublicPartialUpdateUserV3' test.out

#- 264 PublicSendVerificationCodeV3
# body param: body
echo '{"context": "JJsagnCk", "emailAddress": "2qdtRAKX", "languageTag": "EDzlmql9"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicSendVerificationCodeV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 264 'PublicSendVerificationCodeV3' test.out

#- 265 PublicUserVerificationV3
# body param: body
echo '{"code": "R3KB06ss", "contactType": "zCZjqGss", "languageTag": "fEvAv7Aq", "validateOnly": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUserVerificationV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 265 'PublicUserVerificationV3' test.out

#- 266 PublicUpgradeHeadlessAccountV3
# body param: body
echo '{"code": "58lEK9wf", "country": "CIWAxTWF", "dateOfBirth": "sy5B6xIS", "displayName": "p85ogoT8", "emailAddress": "WVWvdLei", "password": "L1ICuLas", "uniqueDisplayName": "PS5H5LZt", "validateOnly": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpgradeHeadlessAccountV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 266 'PublicUpgradeHeadlessAccountV3' test.out

#- 267 PublicVerifyHeadlessAccountV3
# body param: body
echo '{"emailAddress": "7UKqZxPD", "password": "s1Y64ujA"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicVerifyHeadlessAccountV3 \
    --namespace $AB_NAMESPACE \
    --needVerificationCode 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 267 'PublicVerifyHeadlessAccountV3' test.out

#- 268 PublicUpdatePasswordV3
# body param: body
echo '{"languageTag": "AWx2Cvel", "newPassword": "G1QeBRb5", "oldPassword": "l13f8ltM"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpdatePasswordV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 268 'PublicUpdatePasswordV3' test.out

#- 269 PublicCreateJusticeUser
$CLI_EXE \
    --sn iam \
    --op PublicCreateJusticeUser \
    --namespace $AB_NAMESPACE \
    --targetNamespace 'AI6WRkQ2' \
    > test.out 2>&1
eval_tap $? 269 'PublicCreateJusticeUser' test.out

#- 270 PublicPlatformLinkV3
$CLI_EXE \
    --sn iam \
    --op PublicPlatformLinkV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'gROOz2dd' \
    --redirectUri 'S27k3g0H' \
    --ticket 'kGlodbX9' \
    > test.out 2>&1
eval_tap $? 270 'PublicPlatformLinkV3' test.out

#- 271 PublicPlatformUnlinkV3
# body param: body
echo '{"platformNamespace": "QWa4eJD1"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicPlatformUnlinkV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'D2A6OH5y' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 271 'PublicPlatformUnlinkV3' test.out

#- 272 PublicPlatformUnlinkAllV3
$CLI_EXE \
    --sn iam \
    --op PublicPlatformUnlinkAllV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'LHudxB1g' \
    > test.out 2>&1
eval_tap $? 272 'PublicPlatformUnlinkAllV3' test.out

#- 273 PublicForcePlatformLinkV3
$CLI_EXE \
    --sn iam \
    --op PublicForcePlatformLinkV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'RCBMxpAD' \
    --ticket 'lbvhISRm' \
    > test.out 2>&1
eval_tap $? 273 'PublicForcePlatformLinkV3' test.out

#- 274 PublicWebLinkPlatform
$CLI_EXE \
    --sn iam \
    --op PublicWebLinkPlatform \
    --namespace $AB_NAMESPACE \
    --platformId 'ybVoezlp' \
    --clientId 'Rz3L43ff' \
    --redirectUri 'JI24lCzs' \
    > test.out 2>&1
eval_tap $? 274 'PublicWebLinkPlatform' test.out

#- 275 PublicWebLinkPlatformEstablish
$CLI_EXE \
    --sn iam \
    --op PublicWebLinkPlatformEstablish \
    --namespace $AB_NAMESPACE \
    --platformId 'mMM9vxNf' \
    --code '27TCxgEJ' \
    --state 'rQ7QCmhl' \
    > test.out 2>&1
eval_tap $? 275 'PublicWebLinkPlatformEstablish' test.out

#- 276 PublicProcessWebLinkPlatformV3
$CLI_EXE \
    --sn iam \
    --op PublicProcessWebLinkPlatformV3 \
    --namespace $AB_NAMESPACE \
    --platformId '2kdyGIAk' \
    --code 'ATCo5bBg' \
    --state 'G4bUgCdB' \
    > test.out 2>&1
eval_tap $? 276 'PublicProcessWebLinkPlatformV3' test.out

#- 277 PublicGetUsersPlatformInfosV3
# body param: body
echo '{"platformId": "BSlHqBE4", "userIds": ["kSSdW3ty", "pMhgrWm0", "l4eiLkl7"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicGetUsersPlatformInfosV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 277 'PublicGetUsersPlatformInfosV3' test.out

#- 278 ResetPasswordV3
# body param: body
echo '{"code": "VTzKnbdb", "emailAddress": "1rTfs3pc", "newPassword": "xjsmIEkW"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op ResetPasswordV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 278 'ResetPasswordV3' test.out

#- 279 PublicGetUserByUserIdV3
eval_tap 0 279 'PublicGetUserByUserIdV3 # SKIP deprecated' test.out

#- 280 PublicGetUserBanHistoryV3
$CLI_EXE \
    --sn iam \
    --op PublicGetUserBanHistoryV3 \
    --namespace $AB_NAMESPACE \
    --userId 'nAgmZNyV' \
    --activeOnly 'false' \
    --after 'noaPZr4M' \
    --before 'gP3fucbx' \
    --limit '19' \
    > test.out 2>&1
eval_tap $? 280 'PublicGetUserBanHistoryV3' test.out

#- 281 PublicListUserAllPlatformAccountsDistinctV3
$CLI_EXE \
    --sn iam \
    --op PublicListUserAllPlatformAccountsDistinctV3 \
    --namespace $AB_NAMESPACE \
    --userId 'dItmhsGt' \
    > test.out 2>&1
eval_tap $? 281 'PublicListUserAllPlatformAccountsDistinctV3' test.out

#- 282 PublicGetUserInformationV3
$CLI_EXE \
    --sn iam \
    --op PublicGetUserInformationV3 \
    --namespace $AB_NAMESPACE \
    --userId 'bZqMcchI' \
    > test.out 2>&1
eval_tap $? 282 'PublicGetUserInformationV3' test.out

#- 283 PublicGetUserLoginHistoriesV3
$CLI_EXE \
    --sn iam \
    --op PublicGetUserLoginHistoriesV3 \
    --namespace $AB_NAMESPACE \
    --userId 'KzGqm70G' \
    --after '0.07283227084614419' \
    --before '0.567551123455185' \
    --limit '39' \
    > test.out 2>&1
eval_tap $? 283 'PublicGetUserLoginHistoriesV3' test.out

#- 284 PublicGetUserPlatformAccountsV3
$CLI_EXE \
    --sn iam \
    --op PublicGetUserPlatformAccountsV3 \
    --namespace $AB_NAMESPACE \
    --userId 'A1TyPMB7' \
    --after 'aXMRY1uN' \
    --before '5CkfXdxd' \
    --limit '90' \
    --platformId 'kN3tKwpJ' \
    > test.out 2>&1
eval_tap $? 284 'PublicGetUserPlatformAccountsV3' test.out

#- 285 PublicListJusticePlatformAccountsV3
$CLI_EXE \
    --sn iam \
    --op PublicListJusticePlatformAccountsV3 \
    --namespace $AB_NAMESPACE \
    --userId 'MFUSs0lj' \
    > test.out 2>&1
eval_tap $? 285 'PublicListJusticePlatformAccountsV3' test.out

#- 286 PublicLinkPlatformAccount
# body param: body
echo '{"platformId": "LnwfNX9Q", "platformUserId": "EtODrUZf"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicLinkPlatformAccount \
    --namespace $AB_NAMESPACE \
    --userId 'YSDuRugh' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 286 'PublicLinkPlatformAccount' test.out

#- 287 PublicForceLinkPlatformWithProgression
# body param: body
echo '{"chosenNamespaces": ["Ouu2qaGQ", "KYKYT28n", "80a5fbIA"], "requestId": "G786pbOc"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicForceLinkPlatformWithProgression \
    --namespace $AB_NAMESPACE \
    --userId 'Nwv0Nahy' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 287 'PublicForceLinkPlatformWithProgression' test.out

#- 288 PublicGetPublisherUserV3
$CLI_EXE \
    --sn iam \
    --op PublicGetPublisherUserV3 \
    --namespace $AB_NAMESPACE \
    --userId 'wha7sslo' \
    > test.out 2>&1
eval_tap $? 288 'PublicGetPublisherUserV3' test.out

#- 289 PublicValidateUserByUserIDAndPasswordV3
$CLI_EXE \
    --sn iam \
    --op PublicValidateUserByUserIDAndPasswordV3 \
    --namespace $AB_NAMESPACE \
    --userId 'MVeJW8m8' \
    --password 'BZH1A9Fs' \
    > test.out 2>&1
eval_tap $? 289 'PublicValidateUserByUserIDAndPasswordV3' test.out

#- 290 PublicGetRolesV3
$CLI_EXE \
    --sn iam \
    --op PublicGetRolesV3 \
    --after 'c3xg74QQ' \
    --before 'wkmPCOZd' \
    --isWildcard 'false' \
    --limit '20' \
    > test.out 2>&1
eval_tap $? 290 'PublicGetRolesV3' test.out

#- 291 PublicGetRoleV3
$CLI_EXE \
    --sn iam \
    --op PublicGetRoleV3 \
    --roleId 'VTXPwP9V' \
    > test.out 2>&1
eval_tap $? 291 'PublicGetRoleV3' test.out

#- 292 PublicGetMyUserV3
$CLI_EXE \
    --sn iam \
    --op PublicGetMyUserV3 \
    --includeAllPlatforms 'true' \
    > test.out 2>&1
eval_tap $? 292 'PublicGetMyUserV3' test.out

#- 293 PublicGetLinkHeadlessAccountToMyAccountConflictV3
$CLI_EXE \
    --sn iam \
    --op PublicGetLinkHeadlessAccountToMyAccountConflictV3 \
    --oneTimeLinkCode 'sVuNo9Rr' \
    > test.out 2>&1
eval_tap $? 293 'PublicGetLinkHeadlessAccountToMyAccountConflictV3' test.out

#- 294 LinkHeadlessAccountToMyAccountV3
# body param: body
echo '{"chosenNamespaces": ["tDv2nmRU", "qvbhPwuA", "DxTBbaQ4"], "oneTimeLinkCode": "xolUNc24"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op LinkHeadlessAccountToMyAccountV3 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 294 'LinkHeadlessAccountToMyAccountV3' test.out

#- 295 PublicSendVerificationLinkV3
# body param: body
echo '{"languageTag": "RC6y8421"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicSendVerificationLinkV3 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 295 'PublicSendVerificationLinkV3' test.out

#- 296 PublicVerifyUserByLinkV3
$CLI_EXE \
    --sn iam \
    --op PublicVerifyUserByLinkV3 \
    --code 'DmA7iecM' \
    > test.out 2>&1
eval_tap $? 296 'PublicVerifyUserByLinkV3' test.out

#- 297 PlatformAuthenticateSAMLV3Handler
$CLI_EXE \
    --sn iam \
    --op PlatformAuthenticateSAMLV3Handler \
    --platformId 'yzU3qiVg' \
    --code '0825MU4I' \
    --error '3vNHUNiN' \
    --state 'NAFwiW6a' \
    > test.out 2>&1
eval_tap $? 297 'PlatformAuthenticateSAMLV3Handler' test.out

#- 298 LoginSSOClient
$CLI_EXE \
    --sn iam \
    --op LoginSSOClient \
    --platformId 'IHmN4mwH' \
    --payload 'Wjted6Yb' \
    > test.out 2>&1
eval_tap $? 298 'LoginSSOClient' test.out

#- 299 LogoutSSOClient
$CLI_EXE \
    --sn iam \
    --op LogoutSSOClient \
    --platformId 'i1yAc4m5' \
    > test.out 2>&1
eval_tap $? 299 'LogoutSSOClient' test.out

#- 300 RequestTargetTokenResponseV3
$CLI_EXE \
    --sn iam \
    --op RequestTargetTokenResponseV3 \
    --additionalData 'ZSMfr0zM' \
    --code 'QRor9ilI' \
    > test.out 2>&1
eval_tap $? 300 'RequestTargetTokenResponseV3' test.out

#- 301 AdminGetDevicesByUserV4
$CLI_EXE \
    --sn iam \
    --op AdminGetDevicesByUserV4 \
    --namespace $AB_NAMESPACE \
    --userId '7FWr8H0p' \
    > test.out 2>&1
eval_tap $? 301 'AdminGetDevicesByUserV4' test.out

#- 302 AdminGetBannedDevicesV4
$CLI_EXE \
    --sn iam \
    --op AdminGetBannedDevicesV4 \
    --namespace $AB_NAMESPACE \
    --deviceType 'prnAlnMo' \
    --endDate 'JUKzpODc' \
    --limit '79' \
    --offset '31' \
    --startDate 'iWjgKJnT' \
    > test.out 2>&1
eval_tap $? 302 'AdminGetBannedDevicesV4' test.out

#- 303 AdminGetUserDeviceBansV4
$CLI_EXE \
    --sn iam \
    --op AdminGetUserDeviceBansV4 \
    --namespace $AB_NAMESPACE \
    --userId 'laORuKKP' \
    > test.out 2>&1
eval_tap $? 303 'AdminGetUserDeviceBansV4' test.out

#- 304 AdminBanDeviceV4
# body param: body
echo '{"comment": "OstuajhM", "deviceId": "iDuWveIL", "deviceType": "8kYGlXQ4", "enabled": true, "endDate": "zPN9ZY2f", "ext": {"48zad9Ol": {}, "ji9oz3Pc": {}, "78jeuxcU": {}}, "reason": "HxEntZa6"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBanDeviceV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 304 'AdminBanDeviceV4' test.out

#- 305 AdminGetDeviceBanV4
$CLI_EXE \
    --sn iam \
    --op AdminGetDeviceBanV4 \
    --banId '3Ibqhx9Y' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 305 'AdminGetDeviceBanV4' test.out

#- 306 AdminUpdateDeviceBanV4
# body param: body
echo '{"enabled": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateDeviceBanV4 \
    --banId 'awl914d6' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 306 'AdminUpdateDeviceBanV4' test.out

#- 307 AdminGenerateReportV4
$CLI_EXE \
    --sn iam \
    --op AdminGenerateReportV4 \
    --namespace $AB_NAMESPACE \
    --endDate 'G3P2OhjC' \
    --startDate 'QXaj2otZ' \
    --deviceType '3gOAqUUh' \
    > test.out 2>&1
eval_tap $? 307 'AdminGenerateReportV4' test.out

#- 308 AdminGetDeviceTypesV4
$CLI_EXE \
    --sn iam \
    --op AdminGetDeviceTypesV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 308 'AdminGetDeviceTypesV4' test.out

#- 309 AdminGetDeviceBansV4
$CLI_EXE \
    --sn iam \
    --op AdminGetDeviceBansV4 \
    --deviceId 'BTKwdkrj' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 309 'AdminGetDeviceBansV4' test.out

#- 310 AdminDecryptDeviceV4
$CLI_EXE \
    --sn iam \
    --op AdminDecryptDeviceV4 \
    --deviceId 'UF1hx1Hz' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 310 'AdminDecryptDeviceV4' test.out

#- 311 AdminUnbanDeviceV4
$CLI_EXE \
    --sn iam \
    --op AdminUnbanDeviceV4 \
    --deviceId 'fHvxxFwe' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 311 'AdminUnbanDeviceV4' test.out

#- 312 AdminGetUsersByDeviceV4
$CLI_EXE \
    --sn iam \
    --op AdminGetUsersByDeviceV4 \
    --deviceId 'XTixDICb' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 312 'AdminGetUsersByDeviceV4' test.out

#- 313 AdminCreateTestUsersV4
# body param: body
echo '{"count": 68}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminCreateTestUsersV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 313 'AdminCreateTestUsersV4' test.out

#- 314 AdminCreateUserV4
# body param: body
echo '{"acceptedPolicies": [{"isAccepted": false, "localizedPolicyVersionId": "exKEIhMb", "policyId": "MOnXVfC0", "policyVersionId": "NhCqSZur"}, {"isAccepted": false, "localizedPolicyVersionId": "pCj13FEc", "policyId": "HMAlG6D4", "policyVersionId": "22OBdzmB"}, {"isAccepted": true, "localizedPolicyVersionId": "uAdiFzrL", "policyId": "2Vk79cRK", "policyVersionId": "WL4zwYQE"}], "authType": "EMAILPASSWD", "code": "JSPFBIvS", "country": "jfiW3Wnr", "dateOfBirth": "0Yyhl5D3", "displayName": "mi69NG83", "emailAddress": "bKl7D0gl", "password": "WHZcYQGA", "passwordMD5Sum": "g6yuC2s0", "reachMinimumAge": true, "uniqueDisplayName": "sfrSFLHq", "username": "23mgY00D"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminCreateUserV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 314 'AdminCreateUserV4' test.out

#- 315 AdminBulkUpdateUserAccountTypeV4
# body param: body
echo '{"testAccount": false, "userIds": ["RJqT3rrW", "R24bxtwy", "TnoNM0jz"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBulkUpdateUserAccountTypeV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 315 'AdminBulkUpdateUserAccountTypeV4' test.out

#- 316 AdminBulkCheckValidUserIDV4
# body param: body
echo '{"userIds": ["f306nWyE", "SVudwwoJ", "Mg8hnHT2"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBulkCheckValidUserIDV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 316 'AdminBulkCheckValidUserIDV4' test.out

#- 317 AdminUpdateUserV4
# body param: body
echo '{"avatarUrl": "7hW7Stqg", "country": "RPWH2TMQ", "dateOfBirth": "GudTx8qA", "displayName": "MPPfnkqC", "languageTag": "abGfvp6J", "skipLoginQueue": true, "uniqueDisplayName": "iMnalgW4", "userName": "GZxm33jN"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserV4 \
    --namespace $AB_NAMESPACE \
    --userId 'ckZZjYFP' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 317 'AdminUpdateUserV4' test.out

#- 318 AdminUpdateUserEmailAddressV4
# body param: body
echo '{"code": "t9vmOopq", "emailAddress": "kaCKpLBK"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserEmailAddressV4 \
    --namespace $AB_NAMESPACE \
    --userId 'SMbOZE0S' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 318 'AdminUpdateUserEmailAddressV4' test.out

#- 319 AdminDisableUserMFAV4
$CLI_EXE \
    --sn iam \
    --op AdminDisableUserMFAV4 \
    --namespace $AB_NAMESPACE \
    --userId 'sltd4JdF' \
    > test.out 2>&1
eval_tap $? 319 'AdminDisableUserMFAV4' test.out

#- 320 AdminListUserRolesV4
$CLI_EXE \
    --sn iam \
    --op AdminListUserRolesV4 \
    --namespace $AB_NAMESPACE \
    --userId 'z3ZnRaX5' \
    > test.out 2>&1
eval_tap $? 320 'AdminListUserRolesV4' test.out

#- 321 AdminUpdateUserRoleV4
# body param: body
echo '{"assignedNamespaces": ["MAvuCQXM", "PVbFw4a4", "kuRLc6pH"], "roleId": "EPk9Q5Te"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserRoleV4 \
    --namespace $AB_NAMESPACE \
    --userId 'C5Ub8n8z' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 321 'AdminUpdateUserRoleV4' test.out

#- 322 AdminAddUserRoleV4
# body param: body
echo '{"assignedNamespaces": ["L3ialH9a", "3k7Gai9R", "fK1W3SI9"], "roleId": "JoLsaJHX"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddUserRoleV4 \
    --namespace $AB_NAMESPACE \
    --userId 'aVl8Zsy4' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 322 'AdminAddUserRoleV4' test.out

#- 323 AdminRemoveUserRoleV4
# body param: body
echo '{"assignedNamespaces": ["6x61Zx6R", "9ZZ1Wmxw", "vnJ5jjsP"], "roleId": "5ICTDsto"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminRemoveUserRoleV4 \
    --namespace $AB_NAMESPACE \
    --userId 'WRLW1bh6' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 323 'AdminRemoveUserRoleV4' test.out

#- 324 AdminGetRolesV4
$CLI_EXE \
    --sn iam \
    --op AdminGetRolesV4 \
    --adminRole 'false' \
    --isWildcard 'false' \
    --limit '5' \
    --offset '95' \
    > test.out 2>&1
eval_tap $? 324 'AdminGetRolesV4' test.out

#- 325 AdminCreateRoleV4
# body param: body
echo '{"adminRole": false, "deletable": false, "isWildcard": true, "roleName": "D4defN3i"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminCreateRoleV4 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 325 'AdminCreateRoleV4' test.out

#- 326 AdminGetRoleV4
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleV4 \
    --roleId 'zTTtbiVn' \
    > test.out 2>&1
eval_tap $? 326 'AdminGetRoleV4' test.out

#- 327 AdminDeleteRoleV4
$CLI_EXE \
    --sn iam \
    --op AdminDeleteRoleV4 \
    --roleId 'dTO0YofS' \
    > test.out 2>&1
eval_tap $? 327 'AdminDeleteRoleV4' test.out

#- 328 AdminUpdateRoleV4
# body param: body
echo '{"adminRole": true, "deletable": false, "isWildcard": true, "roleName": "P6C9z1Fk"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateRoleV4 \
    --roleId '2nYxze0u' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 328 'AdminUpdateRoleV4' test.out

#- 329 AdminUpdateRolePermissionsV4
# body param: body
echo '{"permissions": [{"action": 81, "resource": "FjR8TDRb", "schedAction": 2, "schedCron": "12A6FLDH", "schedRange": ["8GXR9u4h", "ZK01930C", "Q9y4PvSc"]}, {"action": 35, "resource": "TTlADJyP", "schedAction": 36, "schedCron": "BLYO0ACS", "schedRange": ["2ztygkF1", "vKma8mad", "btttXOYd"]}, {"action": 22, "resource": "Bul3RYeH", "schedAction": 18, "schedCron": "BZL7TEKh", "schedRange": ["2drGP0Jz", "ySucjYGa", "m6VzeMnt"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateRolePermissionsV4 \
    --roleId 'xO7Ugm6Q' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 329 'AdminUpdateRolePermissionsV4' test.out

#- 330 AdminAddRolePermissionsV4
# body param: body
echo '{"permissions": [{"action": 61, "resource": "OCSGfypP", "schedAction": 70, "schedCron": "EY8OoDg0", "schedRange": ["59C54ElK", "Z0Jdzvpq", "SVi0lb12"]}, {"action": 42, "resource": "hEtm6VRI", "schedAction": 35, "schedCron": "Z5r9vOTy", "schedRange": ["fiXADVpK", "xnYcSeTL", "TJGEu6ti"]}, {"action": 83, "resource": "ULgo5PaW", "schedAction": 10, "schedCron": "NFrX5yg2", "schedRange": ["UkydTyku", "UWueVPlS", "iv2iIS7V"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddRolePermissionsV4 \
    --roleId 'Rdsb2xpW' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 330 'AdminAddRolePermissionsV4' test.out

#- 331 AdminDeleteRolePermissionsV4
# body param: body
echo '["ScRLiyBW", "Hlw4j5qJ", "Nzb2wT9k"]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDeleteRolePermissionsV4 \
    --roleId 'fv9CFIQM' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 331 'AdminDeleteRolePermissionsV4' test.out

#- 332 AdminListAssignedUsersV4
$CLI_EXE \
    --sn iam \
    --op AdminListAssignedUsersV4 \
    --roleId 'O5mC3zwT' \
    --after 'BlsZwExr' \
    --before 'LmpCmOJK' \
    --limit '19' \
    > test.out 2>&1
eval_tap $? 332 'AdminListAssignedUsersV4' test.out

#- 333 AdminAssignUserToRoleV4
# body param: body
echo '{"assignedNamespaces": ["M9EwA4gP", "PxgDH4AQ", "4vauHGAN"], "namespace": "kiqLgOVJ", "userId": "y1HSvILf"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAssignUserToRoleV4 \
    --roleId 'l508ZJUI' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 333 'AdminAssignUserToRoleV4' test.out

#- 334 AdminRevokeUserFromRoleV4
# body param: body
echo '{"namespace": "o5DiFOK6", "userId": "ozywsUvV"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminRevokeUserFromRoleV4 \
    --roleId 'DvkFkGFI' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 334 'AdminRevokeUserFromRoleV4' test.out

#- 335 AdminInviteUserNewV4
# body param: body
echo '{"assignedNamespaces": ["0g5ZEyTP", "JfTAzA7p", "I6MKB5dS"], "emailAddresses": ["RjpIA9Af", "kUh9mGN1", "LvG1lyWw"], "isAdmin": false, "isNewStudio": false, "namespace": "WJOyxD4T", "roleId": "L8C9C7Wb"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminInviteUserNewV4 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 335 'AdminInviteUserNewV4' test.out

#- 336 AdminUpdateMyUserV4
# body param: body
echo '{"avatarUrl": "M0ktJ8Cd", "country": "K65HKE6J", "dateOfBirth": "PkhC5NRu", "displayName": "o2oVCrhc", "languageTag": "XOHWI1cx", "skipLoginQueue": false, "uniqueDisplayName": "ujwfxRUG", "userName": "E2fSaUNS"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateMyUserV4 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 336 'AdminUpdateMyUserV4' test.out

#- 337 AdminDisableMyAuthenticatorV4
$CLI_EXE \
    --sn iam \
    --op AdminDisableMyAuthenticatorV4 \
    > test.out 2>&1
eval_tap $? 337 'AdminDisableMyAuthenticatorV4' test.out

#- 338 AdminEnableMyAuthenticatorV4
$CLI_EXE \
    --sn iam \
    --op AdminEnableMyAuthenticatorV4 \
    --code 'rtIj8oqN' \
    > test.out 2>&1
eval_tap $? 338 'AdminEnableMyAuthenticatorV4' test.out

#- 339 AdminGenerateMyAuthenticatorKeyV4
$CLI_EXE \
    --sn iam \
    --op AdminGenerateMyAuthenticatorKeyV4 \
    > test.out 2>&1
eval_tap $? 339 'AdminGenerateMyAuthenticatorKeyV4' test.out

#- 340 AdminGetMyBackupCodesV4
eval_tap 0 340 'AdminGetMyBackupCodesV4 # SKIP deprecated' test.out

#- 341 AdminGenerateMyBackupCodesV4
eval_tap 0 341 'AdminGenerateMyBackupCodesV4 # SKIP deprecated' test.out

#- 342 AdminDisableMyBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op AdminDisableMyBackupCodesV4 \
    > test.out 2>&1
eval_tap $? 342 'AdminDisableMyBackupCodesV4' test.out

#- 343 AdminDownloadMyBackupCodesV4
eval_tap 0 343 'AdminDownloadMyBackupCodesV4 # SKIP deprecated' test.out

#- 344 AdminEnableMyBackupCodesV4
eval_tap 0 344 'AdminEnableMyBackupCodesV4 # SKIP deprecated' test.out

#- 345 AdminGetBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op AdminGetBackupCodesV4 \
    > test.out 2>&1
eval_tap $? 345 'AdminGetBackupCodesV4' test.out

#- 346 AdminGenerateBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op AdminGenerateBackupCodesV4 \
    > test.out 2>&1
eval_tap $? 346 'AdminGenerateBackupCodesV4' test.out

#- 347 AdminEnableBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op AdminEnableBackupCodesV4 \
    > test.out 2>&1
eval_tap $? 347 'AdminEnableBackupCodesV4' test.out

#- 348 AdminSendMyMFAEmailCodeV4
$CLI_EXE \
    --sn iam \
    --op AdminSendMyMFAEmailCodeV4 \
    > test.out 2>&1
eval_tap $? 348 'AdminSendMyMFAEmailCodeV4' test.out

#- 349 AdminDisableMyEmailV4
$CLI_EXE \
    --sn iam \
    --op AdminDisableMyEmailV4 \
    > test.out 2>&1
eval_tap $? 349 'AdminDisableMyEmailV4' test.out

#- 350 AdminEnableMyEmailV4
$CLI_EXE \
    --sn iam \
    --op AdminEnableMyEmailV4 \
    --code 'nNS81t4B' \
    > test.out 2>&1
eval_tap $? 350 'AdminEnableMyEmailV4' test.out

#- 351 AdminGetMyEnabledFactorsV4
$CLI_EXE \
    --sn iam \
    --op AdminGetMyEnabledFactorsV4 \
    > test.out 2>&1
eval_tap $? 351 'AdminGetMyEnabledFactorsV4' test.out

#- 352 AdminMakeFactorMyDefaultV4
$CLI_EXE \
    --sn iam \
    --op AdminMakeFactorMyDefaultV4 \
    --factor 'ZXlwvewB' \
    > test.out 2>&1
eval_tap $? 352 'AdminMakeFactorMyDefaultV4' test.out

#- 353 AdminInviteUserV4
eval_tap 0 353 'AdminInviteUserV4 # SKIP deprecated' test.out

#- 354 AuthenticationWithPlatformLinkV4
$CLI_EXE \
    --sn iam \
    --op AuthenticationWithPlatformLinkV4 \
    --extend_exp 'false' \
    --client_id 'oCesDsAj' \
    --linkingToken 'QtWGrTMM' \
    --password 'TqxRQr5u' \
    --username 'zCmubeEN' \
    > test.out 2>&1
eval_tap $? 354 'AuthenticationWithPlatformLinkV4' test.out

#- 355 GenerateTokenByNewHeadlessAccountV4
$CLI_EXE \
    --sn iam \
    --op GenerateTokenByNewHeadlessAccountV4 \
    --additionalData 'IhzZ6hLK' \
    --extend_exp 'false' \
    --linkingToken 'MdUUVLlz' \
    > test.out 2>&1
eval_tap $? 355 'GenerateTokenByNewHeadlessAccountV4' test.out

#- 356 Verify2faCodeV4
$CLI_EXE \
    --sn iam \
    --op Verify2faCodeV4 \
    --code '04xzs49f' \
    --factor 'FlgRL1iY' \
    --mfaToken 'L3ma2SFo' \
    --rememberDevice 'false' \
    > test.out 2>&1
eval_tap $? 356 'Verify2faCodeV4' test.out

#- 357 PlatformTokenGrantV4
$CLI_EXE \
    --sn iam \
    --op PlatformTokenGrantV4 \
    --platformId '9YqioWDG' \
    --codeChallenge 'PSo6iLiO' \
    --codeChallengeMethod 'plain' \
    --additionalData 'mNg7KMbB' \
    --client_id 'BqNrsEKf' \
    --createHeadless 'true' \
    --device_id 'J4GxX8Dj' \
    --macAddress 'h5QiTpJD' \
    --platform_token 'UJguZz9J' \
    --skipSetCookie 'true' \
    > test.out 2>&1
eval_tap $? 357 'PlatformTokenGrantV4' test.out

#- 358 SimultaneousLoginV4
$CLI_EXE \
    --sn iam \
    --op SimultaneousLoginV4 \
    --codeChallenge '5JTEgwI6' \
    --codeChallengeMethod 'plain' \
    --simultaneousPlatform 'pspc' \
    --simultaneousTicket 'daBWkQ1e' \
    --nativePlatform 'steam' \
    --nativePlatformTicket 'm0Mq2tYS' \
    > test.out 2>&1
eval_tap $? 358 'SimultaneousLoginV4' test.out

#- 359 TokenGrantV4
$CLI_EXE \
    --sn iam \
    --op TokenGrantV4 \
    --codeChallenge 'H05EMc0C' \
    --codeChallengeMethod 'plain' \
    --additionalData 'bnz5mX34' \
    --client_id 'i4zhLz8g' \
    --code 'Y8TcWtv6' \
    --code_verifier 'CBMPa2WB' \
    --extendNamespace 'XQxCawUu' \
    --extend_exp 'true' \
    --login_queue_ticket '1iohvIF2' \
    --password 'YjkwIVLt' \
    --redirect_uri 'qP0oDq6x' \
    --refresh_token 'ggsVaO7s' \
    --username 'xYsuCO87' \
    --grant_type 'refresh_token' \
    > test.out 2>&1
eval_tap $? 359 'TokenGrantV4' test.out

#- 360 RequestTargetTokenResponseV4
$CLI_EXE \
    --sn iam \
    --op RequestTargetTokenResponseV4 \
    --additionalData '0EztcmEi' \
    --code 'm4Oa8lBP' \
    > test.out 2>&1
eval_tap $? 360 'RequestTargetTokenResponseV4' test.out

#- 361 PublicCreateTestUserV4
# body param: body
echo '{"acceptedPolicies": [{"isAccepted": false, "localizedPolicyVersionId": "dK4EGUKK", "policyId": "K9VMNz4N", "policyVersionId": "1Q3d6ekZ"}, {"isAccepted": true, "localizedPolicyVersionId": "nJrPganF", "policyId": "LPkAMAvq", "policyVersionId": "XNejWF8m"}, {"isAccepted": true, "localizedPolicyVersionId": "ViKQs3tA", "policyId": "pzhy9TwD", "policyVersionId": "PvfIKwKf"}], "authType": "EMAILPASSWD", "country": "eA8IkG47", "dateOfBirth": "CtxBHigF", "displayName": "ZCtgHarP", "emailAddress": "kOQQQyfc", "password": "J4JhGPxZ", "passwordMD5Sum": "ai7YDPJh", "uniqueDisplayName": "um8xGSEX", "username": "BKLHorRz", "verified": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicCreateTestUserV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 361 'PublicCreateTestUserV4' test.out

#- 362 PublicCreateUserV4
# body param: body
echo '{"acceptedPolicies": [{"isAccepted": false, "localizedPolicyVersionId": "g9T0ZHuy", "policyId": "pVJDHG9N", "policyVersionId": "czD406Lv"}, {"isAccepted": false, "localizedPolicyVersionId": "RmTjK4jI", "policyId": "8L9ykjmm", "policyVersionId": "F3CkzJRE"}, {"isAccepted": false, "localizedPolicyVersionId": "A0TrAicK", "policyId": "l2w3og9x", "policyVersionId": "f6ISMPlY"}], "authType": "EMAILPASSWD", "code": "tz1cJlVt", "country": "SnJHaF4r", "dateOfBirth": "3twayFcm", "displayName": "kgrMirQp", "emailAddress": "btv0yr7D", "password": "UtmK3a7T", "passwordMD5Sum": "04q7ahoI", "reachMinimumAge": false, "uniqueDisplayName": "PA4S5ATE", "username": "JqcS4lhl"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicCreateUserV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 362 'PublicCreateUserV4' test.out

#- 363 CreateUserFromInvitationV4
# body param: body
echo '{"acceptedPolicies": [{"isAccepted": false, "localizedPolicyVersionId": "xbcKJK9q", "policyId": "e3frblXD", "policyVersionId": "Tk59d5y6"}, {"isAccepted": false, "localizedPolicyVersionId": "i7v7hHKt", "policyId": "nQz3Xhqr", "policyVersionId": "tYaVxZtn"}, {"isAccepted": false, "localizedPolicyVersionId": "QNMmmyYI", "policyId": "kSPWTf0d", "policyVersionId": "oQ9tPlcu"}], "authType": "EMAILPASSWD", "code": "gYgxHUz8", "country": "vLwg1Qn8", "dateOfBirth": "Ft0WHXVG", "displayName": "vsTyEQeH", "emailAddress": "XartS0wT", "password": "grdvDWPt", "passwordMD5Sum": "t6UBDek5", "reachMinimumAge": true, "uniqueDisplayName": "sDKNbK3h", "username": "ktoZlw8F"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op CreateUserFromInvitationV4 \
    --invitationId 'T8gcTqvR' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 363 'CreateUserFromInvitationV4' test.out

#- 364 PublicUpdateUserV4
# body param: body
echo '{"avatarUrl": "xooDpoop", "country": "FMrUQBP1", "dateOfBirth": "epKoaUOb", "displayName": "JJWTWii5", "languageTag": "35NueCy5", "uniqueDisplayName": "uaaRpE7t", "userName": "fCZ1oUMT"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpdateUserV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 364 'PublicUpdateUserV4' test.out

#- 365 PublicUpdateUserEmailAddressV4
# body param: body
echo '{"code": "gMhF0JMb", "emailAddress": "qCtX9iB4"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpdateUserEmailAddressV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 365 'PublicUpdateUserEmailAddressV4' test.out

#- 366 PublicUpgradeHeadlessAccountWithVerificationCodeV4
# body param: body
echo '{"code": "0aNgyAHV", "country": "Hg2KipFe", "dateOfBirth": "b66jFoPl", "displayName": "r4KeSMYs", "emailAddress": "r83pFRbr", "password": "xgG1CsLh", "reachMinimumAge": false, "uniqueDisplayName": "1ekdqycV", "username": "D8QRt5tK", "validateOnly": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpgradeHeadlessAccountWithVerificationCodeV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 366 'PublicUpgradeHeadlessAccountWithVerificationCodeV4' test.out

#- 367 PublicUpgradeHeadlessAccountV4
# body param: body
echo '{"emailAddress": "DnJQMdCZ", "password": "6fdeslX1", "username": "7KETXV8W"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpgradeHeadlessAccountV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 367 'PublicUpgradeHeadlessAccountV4' test.out

#- 368 PublicDisableMyAuthenticatorV4
$CLI_EXE \
    --sn iam \
    --op PublicDisableMyAuthenticatorV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 368 'PublicDisableMyAuthenticatorV4' test.out

#- 369 PublicEnableMyAuthenticatorV4
$CLI_EXE \
    --sn iam \
    --op PublicEnableMyAuthenticatorV4 \
    --namespace $AB_NAMESPACE \
    --code '7lXrJUbS' \
    > test.out 2>&1
eval_tap $? 369 'PublicEnableMyAuthenticatorV4' test.out

#- 370 PublicGenerateMyAuthenticatorKeyV4
$CLI_EXE \
    --sn iam \
    --op PublicGenerateMyAuthenticatorKeyV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 370 'PublicGenerateMyAuthenticatorKeyV4' test.out

#- 371 PublicGetMyBackupCodesV4
eval_tap 0 371 'PublicGetMyBackupCodesV4 # SKIP deprecated' test.out

#- 372 PublicGenerateMyBackupCodesV4
eval_tap 0 372 'PublicGenerateMyBackupCodesV4 # SKIP deprecated' test.out

#- 373 PublicDisableMyBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op PublicDisableMyBackupCodesV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 373 'PublicDisableMyBackupCodesV4' test.out

#- 374 PublicDownloadMyBackupCodesV4
eval_tap 0 374 'PublicDownloadMyBackupCodesV4 # SKIP deprecated' test.out

#- 375 PublicEnableMyBackupCodesV4
eval_tap 0 375 'PublicEnableMyBackupCodesV4 # SKIP deprecated' test.out

#- 376 PublicGetBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op PublicGetBackupCodesV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 376 'PublicGetBackupCodesV4' test.out

#- 377 PublicGenerateBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op PublicGenerateBackupCodesV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 377 'PublicGenerateBackupCodesV4' test.out

#- 378 PublicEnableBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op PublicEnableBackupCodesV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 378 'PublicEnableBackupCodesV4' test.out

#- 379 PublicRemoveTrustedDeviceV4
$CLI_EXE \
    --sn iam \
    --op PublicRemoveTrustedDeviceV4 \
    --namespace $AB_NAMESPACE \
    --device_token 'mwBfOBOf' \
    > test.out 2>&1
eval_tap $? 379 'PublicRemoveTrustedDeviceV4' test.out

#- 380 PublicSendMyMFAEmailCodeV4
$CLI_EXE \
    --sn iam \
    --op PublicSendMyMFAEmailCodeV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 380 'PublicSendMyMFAEmailCodeV4' test.out

#- 381 PublicDisableMyEmailV4
$CLI_EXE \
    --sn iam \
    --op PublicDisableMyEmailV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 381 'PublicDisableMyEmailV4' test.out

#- 382 PublicEnableMyEmailV4
$CLI_EXE \
    --sn iam \
    --op PublicEnableMyEmailV4 \
    --namespace $AB_NAMESPACE \
    --code 'BT1hxfHH' \
    > test.out 2>&1
eval_tap $? 382 'PublicEnableMyEmailV4' test.out

#- 383 PublicGetMyEnabledFactorsV4
$CLI_EXE \
    --sn iam \
    --op PublicGetMyEnabledFactorsV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 383 'PublicGetMyEnabledFactorsV4' test.out

#- 384 PublicMakeFactorMyDefaultV4
$CLI_EXE \
    --sn iam \
    --op PublicMakeFactorMyDefaultV4 \
    --namespace $AB_NAMESPACE \
    --factor 'jtIO5hTm' \
    > test.out 2>&1
eval_tap $? 384 'PublicMakeFactorMyDefaultV4' test.out

#- 385 PublicGetUserPublicInfoByUserIdV4
$CLI_EXE \
    --sn iam \
    --op PublicGetUserPublicInfoByUserIdV4 \
    --namespace $AB_NAMESPACE \
    --userId 'zF9OUF6o' \
    > test.out 2>&1
eval_tap $? 385 'PublicGetUserPublicInfoByUserIdV4' test.out

#- 386 PublicInviteUserV4
# body param: body
echo '{"additionalData": "Bwj1FM4w", "emailAddress": "rpriAXSt", "namespace": "JcNDGwWE", "namespaceDisplayName": "haIVw93P"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicInviteUserV4 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 386 'PublicInviteUserV4' test.out


# remove artifacts
rm -f "$CLI_TOKEN_FILE"
rm -f "$TEMP_JSON_INPUT"
rm -f "$TEMP_FILE_UPLOAD"

exit $EXIT_CODE