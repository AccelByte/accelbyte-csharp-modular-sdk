#!/usr/bin/env bash

# Copyright (c) 2021 AccelByte Inc. All Rights Reserved.
# This is licensed software from AccelByte Inc, for limitations
# and restrictions contact your company contract manager.

# This code is generated by tool. DO NOT EDIT.

# Meta:
# - random seed: 
# - template file: 

# Instructions:
# - Run the Justice SDK Mock Server first before running this script.

export AB_BASE_URL="http://127.0.0.1:8080"
export AB_CLIENT_ID="admin"
export AB_CLIENT_SECRET="admin"
export AB_NAMESPACE="test"
export AB_APP_NAME="UnitTest"

EXIT_CODE=0

eval_tap() {
  if [ $1 -eq 0 ]; then
    echo "ok $2 - $3"
  else
    EXIT_CODE=1
    echo "not ok $2 - $3"
    sed 's/^/# /g' $4
  fi
  rm -f $4
}

CLI_EXE="AccelByte.Sdk.Sample.Cli"
CLI_TOKEN_FILE="$(dirname "$(which $CLI_EXE)")/token.json"
TEMP_JSON_INPUT="input_json.json"
TEMP_FILE_UPLOAD="file_upload.bin"

echo "TAP version 13"
echo "1..35"

#- 1 Login
$CLI_EXE --op login --lt user --user user --pass user > test.out 2>&1
eval_tap $? 1 'Login' test.out

if [ $EXIT_CODE -ne 0 ]; then
  echo "Bail out! Login failed."
  exit $EXIT_CODE
fi

# echo "foo" > "$CLI_TOKEN_FILE"

#- 2 AdminCreateChainingOperations
# body param: body
echo '{"message": "2oVZoQRY", "operations": [{"consumeItems": [{"inventoryId": "pIUiu6Bs", "qty": 88, "slotId": "13cGRMgL", "sourceItemId": "1FEeg1P3"}, {"inventoryId": "vcXRR6c1", "qty": 74, "slotId": "zZRzHIGY", "sourceItemId": "UfoFTIGM"}, {"inventoryId": "dLL0mNbT", "qty": 48, "slotId": "9HG2HzcE", "sourceItemId": "2Iwe9AOx"}], "createItems": [{"customAttributes": {"hNVQYWJa": {}, "Y7RC0gdw": {}, "e8hWWszA": {}}, "inventoryConfigurationCode": "tpirNrXo", "inventoryId": "zi6tFH2q", "qty": 64, "serverCustomAttributes": {"62gInaSf": {}, "O02pjGA0": {}, "vXaZtaVQ": {}}, "slotId": "eWVsn325", "slotUsed": 44, "sourceItemId": "sQJUXhrH", "tags": ["ivH59lug", "rlkCXzXI", "pcoC29Qj"], "toSpecificInventory": true, "type": "VSfhjZY2"}, {"customAttributes": {"ZN1x0v9o": {}, "FmQDmczv": {}, "pDkFmuAW": {}}, "inventoryConfigurationCode": "Nwr3rSz9", "inventoryId": "s6V7DBM4", "qty": 10, "serverCustomAttributes": {"IA2Lf7n8": {}, "FM95ajFm": {}, "r1VGqkKk": {}}, "slotId": "2cURh7X1", "slotUsed": 83, "sourceItemId": "t8qJTZF7", "tags": ["TdZrnlsR", "lqxSczh2", "DrkRlAPG"], "toSpecificInventory": false, "type": "CnsRWSQN"}, {"customAttributes": {"aNMKVleR": {}, "Mqx4Lxwt": {}, "zYYQtaFO": {}}, "inventoryConfigurationCode": "sdneq6X7", "inventoryId": "kaTLAKgB", "qty": 95, "serverCustomAttributes": {"EahfN7qO": {}, "zzHDuQrw": {}, "prhIjbqN": {}}, "slotId": "92pAnl0Q", "slotUsed": 40, "sourceItemId": "3HaYDX87", "tags": ["QE6a41x1", "74ILydrm", "MQBQTLhp"], "toSpecificInventory": true, "type": "MnTuuat5"}], "removeItems": [{"inventoryId": "K2oYEiZG", "slotId": "r7aWTUAY", "sourceItemId": "6hzDeGmk"}, {"inventoryId": "CDfs0Pje", "slotId": "Yk0eoeuT", "sourceItemId": "lzUGAoY1"}, {"inventoryId": "NYDBAN7T", "slotId": "pNLQe92X", "sourceItemId": "Scmz7NVl"}], "targetUserId": "BC1gI7Vw", "updateItems": [{"customAttributes": {"HABWKoja": {}, "1szFgJhk": {}, "8mJa9hQk": {}}, "inventoryId": "wkUGslBL", "serverCustomAttributes": {"uQMXLeqI": {}, "05ywWsIX": {}, "ycOo8f47": {}}, "slotId": "PFuj6pGG", "sourceItemId": "U3fcI10F", "tags": ["d1zDUsME", "DNrvty8U", "pxqbeMkO"], "type": "CVdWI5TL"}, {"customAttributes": {"n309qU6g": {}, "wiy9sRVM": {}, "zUUid9OI": {}}, "inventoryId": "3dBqJdk2", "serverCustomAttributes": {"lkMnBscg": {}, "m439q0J1": {}, "vT7g20Om": {}}, "slotId": "BZtHnQDx", "sourceItemId": "sVvxstlu", "tags": ["pZcvWr2j", "s4MQH0R9", "tKFbSDnT"], "type": "0wFbgrMy"}, {"customAttributes": {"s8qLTIDv": {}, "NCRHBdzO": {}, "mi95P4Ew": {}}, "inventoryId": "US9woe4P", "serverCustomAttributes": {"ysQ3iD7x": {}, "vijIK8Hp": {}, "varevtSX": {}}, "slotId": "unr3zB6J", "sourceItemId": "zcapEGY0", "tags": ["PPWfR2u1", "HyI8AN30", "LqQKDu7P"], "type": "XqTdvRro"}]}, {"consumeItems": [{"inventoryId": "mIi3FV9B", "qty": 23, "slotId": "V5qij0Qs", "sourceItemId": "ZkCYhqLx"}, {"inventoryId": "Ln1RNctD", "qty": 47, "slotId": "ReaJDOru", "sourceItemId": "rBxikwAR"}, {"inventoryId": "NSr3q3to", "qty": 27, "slotId": "2lgyFhBg", "sourceItemId": "wHBIA3oa"}], "createItems": [{"customAttributes": {"ZIcVG3hn": {}, "yJyJbRVb": {}, "vSo3Ummb": {}}, "inventoryConfigurationCode": "Rq1weBp6", "inventoryId": "TUCfTxlY", "qty": 44, "serverCustomAttributes": {"EiFe4Gbs": {}, "5IAFI6ut": {}, "N5IQyKWY": {}}, "slotId": "ilbf2Y5O", "slotUsed": 38, "sourceItemId": "wkj5XvpH", "tags": ["Fyt9CaYg", "2XFSYJqk", "MuT6348B"], "toSpecificInventory": false, "type": "bRVat4L4"}, {"customAttributes": {"xw1GxYI4": {}, "uoZD45TM": {}, "bWXr0Lm4": {}}, "inventoryConfigurationCode": "NQAm1uJd", "inventoryId": "abgZopME", "qty": 25, "serverCustomAttributes": {"AsxRE86b": {}, "m8xgXMQK": {}, "fsMhIGHU": {}}, "slotId": "Irb1ueyc", "slotUsed": 19, "sourceItemId": "dLgfuJTM", "tags": ["5KzhaXFW", "A0IyFBvx", "Ex7i4Iws"], "toSpecificInventory": true, "type": "LptMqG3q"}, {"customAttributes": {"IqEPrzBz": {}, "m7HnpDJ1": {}, "t8p7sg2J": {}}, "inventoryConfigurationCode": "VA2VaKYm", "inventoryId": "iu1SedGV", "qty": 31, "serverCustomAttributes": {"3vSOEGZ2": {}, "ENH8xEw4": {}, "6dhAzBg4": {}}, "slotId": "7kxtJSeB", "slotUsed": 69, "sourceItemId": "LnFHahQF", "tags": ["FGtXrFAw", "IaDujRlP", "2o0W0NEQ"], "toSpecificInventory": false, "type": "im16qqfL"}], "removeItems": [{"inventoryId": "QWYhXV0C", "slotId": "4DigvEnD", "sourceItemId": "JzQ1vrLf"}, {"inventoryId": "tGitGRPq", "slotId": "J5uOJY9y", "sourceItemId": "9uq3iN8n"}, {"inventoryId": "MzS5rZMS", "slotId": "rRNkLzQC", "sourceItemId": "WqVB0IV3"}], "targetUserId": "ml9yNBYp", "updateItems": [{"customAttributes": {"C0AGskRA": {}, "h4Pv9JGM": {}, "1KdawL61": {}}, "inventoryId": "s6b9smD3", "serverCustomAttributes": {"WXKYGoD2": {}, "9JVgOq0E": {}, "ILhqzrFK": {}}, "slotId": "vbFAhD62", "sourceItemId": "N0MqCts7", "tags": ["xH9SzLVK", "RV0JHnJj", "ctTGu1FP"], "type": "fFl8WpOt"}, {"customAttributes": {"a0cwvcW9": {}, "1VEsVY8m": {}, "fYHCwrIu": {}}, "inventoryId": "qQFAFIOp", "serverCustomAttributes": {"dbj3UjoX": {}, "BQzDCsAy": {}, "qTKxput2": {}}, "slotId": "nT4s2DJW", "sourceItemId": "GaHwJoG4", "tags": ["iA4eJQ6n", "aGnY9Ktc", "7V2waZAi"], "type": "L029Hgs0"}, {"customAttributes": {"Xd2Zjs13": {}, "Sm4scg6r": {}, "0R5sbWSs": {}}, "inventoryId": "5U1mPD8y", "serverCustomAttributes": {"3ZcSjgjr": {}, "i3TsVetl": {}, "wNWVX5xj": {}}, "slotId": "GIYT79Rv", "sourceItemId": "IhQhcYBl", "tags": ["N5cdGcXu", "QtUtLUN1", "nsIEJg2H"], "type": "mredisVV"}]}, {"consumeItems": [{"inventoryId": "9v1yStUp", "qty": 66, "slotId": "rlJP9UYa", "sourceItemId": "dFY0QJD0"}, {"inventoryId": "xHEhR9DO", "qty": 50, "slotId": "D2ENyMT8", "sourceItemId": "cKVllvN0"}, {"inventoryId": "Un3Cc73n", "qty": 26, "slotId": "DYptkni6", "sourceItemId": "Lx9L3TZi"}], "createItems": [{"customAttributes": {"GJlwI6Ob": {}, "PdjYzxUr": {}, "OKMtZc9u": {}}, "inventoryConfigurationCode": "LO3CY8pW", "inventoryId": "mfYHM2Bi", "qty": 20, "serverCustomAttributes": {"oti7Oxpc": {}, "6oDy4rcH": {}, "ySQTJ2RU": {}}, "slotId": "buvfYDV9", "slotUsed": 74, "sourceItemId": "tDc2mWFq", "tags": ["noAlKBCt", "2PMwNbp6", "hl2v68aM"], "toSpecificInventory": false, "type": "W0bxsUTK"}, {"customAttributes": {"0wFxQq1B": {}, "ftPzG8wO": {}, "UclGEVsM": {}}, "inventoryConfigurationCode": "GrGk2TSU", "inventoryId": "sI7IBKvg", "qty": 67, "serverCustomAttributes": {"ZpK2R2Eb": {}, "sMe6GI8M": {}, "cr2gc05y": {}}, "slotId": "Giagp9fz", "slotUsed": 90, "sourceItemId": "SEqzln2t", "tags": ["SJurFiFB", "X0UTKEHg", "hiOoWhf6"], "toSpecificInventory": true, "type": "eypPq2z1"}, {"customAttributes": {"FOENJLZy": {}, "HeLdxCi7": {}, "tJ5lOUwF": {}}, "inventoryConfigurationCode": "FaUT2Dix", "inventoryId": "JXASajFQ", "qty": 59, "serverCustomAttributes": {"aO0FNdY2": {}, "BCodf7Xp": {}, "ijy9MX3j": {}}, "slotId": "kh1SqXEm", "slotUsed": 12, "sourceItemId": "F9E5jNF1", "tags": ["Pgu6aert", "rZIRefI4", "YDZ9Utlu"], "toSpecificInventory": true, "type": "7FkJ3f8P"}], "removeItems": [{"inventoryId": "dqmYomg1", "slotId": "5nHR7UYS", "sourceItemId": "FespFjZY"}, {"inventoryId": "poo1egd5", "slotId": "td4aemkm", "sourceItemId": "ashqpsk8"}, {"inventoryId": "2AMtzmFl", "slotId": "7bz1Dfpq", "sourceItemId": "V8k6MUNI"}], "targetUserId": "AK2n45nN", "updateItems": [{"customAttributes": {"4N6tXvfl": {}, "QcZO5UmP": {}, "9j6muyPp": {}}, "inventoryId": "tl68c2zG", "serverCustomAttributes": {"9ybvy3rj": {}, "9RpESjCl": {}, "8pzanA9O": {}}, "slotId": "MIME3jMx", "sourceItemId": "5S9sdYVh", "tags": ["xo6F0zHm", "92mnlR5G", "8Nwdqdrt"], "type": "i2s6DV8z"}, {"customAttributes": {"6Cdz6Vla": {}, "PlDKgXi9": {}, "mnxvqYqw": {}}, "inventoryId": "0Nc4DsIu", "serverCustomAttributes": {"Cz2gDFOV": {}, "He18nl5m": {}, "fmc2QapQ": {}}, "slotId": "Rekp2pMb", "sourceItemId": "Rmfs91cP", "tags": ["zyxC6Vlg", "qG5UCkDt", "TwX6rxeF"], "type": "smkr3uct"}, {"customAttributes": {"Hp865qGQ": {}, "N49N8gSa": {}, "zq3k5B1X": {}}, "inventoryId": "70J2ia05", "serverCustomAttributes": {"GFxhFomc": {}, "zmMUbJwM": {}, "8nPzxDp6": {}}, "slotId": "P0HCVe3H", "sourceItemId": "SnMkZjaL", "tags": ["UMgoZqZO", "GhW3PSZw", "r0QsTueV"], "type": "ABu1ncHe"}]}], "requestId": "yjRI9yE9"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminCreateChainingOperations \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 2 'AdminCreateChainingOperations' test.out

#- 3 AdminListInventories
$CLI_EXE \
    --sn inventory \
    --op AdminListInventories \
    --namespace $AB_NAMESPACE \
    --inventoryConfigurationCode 'PfcGDTp7' \
    --limit '77' \
    --offset '58' \
    --sortBy 'updatedAt:asc' \
    --userId '4OSmOHgr' \
    > test.out 2>&1
eval_tap $? 3 'AdminListInventories' test.out

#- 4 AdminCreateInventory
# body param: body
echo '{"inventoryConfigurationCode": "dOd8TQ2Y", "userId": "WsbntMqf"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminCreateInventory \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 4 'AdminCreateInventory' test.out

#- 5 AdminGetInventory
$CLI_EXE \
    --sn inventory \
    --op AdminGetInventory \
    --inventoryId 'hgiXfymf' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 5 'AdminGetInventory' test.out

#- 6 AdminUpdateInventory
# body param: body
echo '{"incMaxSlots": 10}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminUpdateInventory \
    --inventoryId 'iIYNbOg5' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 6 'AdminUpdateInventory' test.out

#- 7 DeleteInventory
# body param: body
echo '{"message": "MEFsnHVJ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op DeleteInventory \
    --inventoryId 'Y7d7mPIH' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 7 'DeleteInventory' test.out

#- 8 AdminListItems
$CLI_EXE \
    --sn inventory \
    --op AdminListItems \
    --inventoryId 'mBO8jbck' \
    --namespace $AB_NAMESPACE \
    --limit '92' \
    --offset '18' \
    --qtyGte '10' \
    --sortBy 'createdAt:desc' \
    --sourceItemId '0Z4lESsO' \
    --tags 'L8EoPWv2' \
    > test.out 2>&1
eval_tap $? 8 'AdminListItems' test.out

#- 9 AdminGetInventoryItem
$CLI_EXE \
    --sn inventory \
    --op AdminGetInventoryItem \
    --inventoryId 'L1ccQmRh' \
    --namespace $AB_NAMESPACE \
    --slotId 'NiNne6Kb' \
    --sourceItemId 'JNoUR8Rm' \
    > test.out 2>&1
eval_tap $? 9 'AdminGetInventoryItem' test.out

#- 10 AdminListInventoryConfigurations
$CLI_EXE \
    --sn inventory \
    --op AdminListInventoryConfigurations \
    --namespace $AB_NAMESPACE \
    --code '6M0xZzdZ' \
    --limit '3' \
    --offset '17' \
    --sortBy 'updatedAt:asc' \
    > test.out 2>&1
eval_tap $? 10 'AdminListInventoryConfigurations' test.out

#- 11 AdminCreateInventoryConfiguration
# body param: body
echo '{"code": "Yiqj3zEg", "description": "7MO73rkb", "initialMaxSlots": 60, "maxInstancesPerUser": 93, "maxUpgradeSlots": 28, "name": "4yPWCT5i"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminCreateInventoryConfiguration \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 11 'AdminCreateInventoryConfiguration' test.out

#- 12 AdminGetInventoryConfiguration
$CLI_EXE \
    --sn inventory \
    --op AdminGetInventoryConfiguration \
    --inventoryConfigurationId 'KQvOXQzi' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 12 'AdminGetInventoryConfiguration' test.out

#- 13 AdminUpdateInventoryConfiguration
# body param: body
echo '{"code": "HgvNYsXs", "description": "H5MAfQrf", "initialMaxSlots": 100, "maxInstancesPerUser": 44, "maxUpgradeSlots": 68, "name": "ep55yFVp"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminUpdateInventoryConfiguration \
    --inventoryConfigurationId 'z9alliq7' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 13 'AdminUpdateInventoryConfiguration' test.out

#- 14 AdminDeleteInventoryConfiguration
$CLI_EXE \
    --sn inventory \
    --op AdminDeleteInventoryConfiguration \
    --inventoryConfigurationId '0GEChveB' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 14 'AdminDeleteInventoryConfiguration' test.out

#- 15 AdminListItemTypes
$CLI_EXE \
    --sn inventory \
    --op AdminListItemTypes \
    --namespace $AB_NAMESPACE \
    --limit '69' \
    --offset '75' \
    --sortBy 'createdAt:asc' \
    > test.out 2>&1
eval_tap $? 15 'AdminListItemTypes' test.out

#- 16 AdminCreateItemType
# body param: body
echo '{"name": "LRhv3wbs"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminCreateItemType \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 16 'AdminCreateItemType' test.out

#- 17 AdminDeleteItemType
$CLI_EXE \
    --sn inventory \
    --op AdminDeleteItemType \
    --itemTypeName 'QHk78Vvo' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 17 'AdminDeleteItemType' test.out

#- 18 AdminListTags
$CLI_EXE \
    --sn inventory \
    --op AdminListTags \
    --namespace $AB_NAMESPACE \
    --limit '82' \
    --offset '81' \
    --owner 'WvESJ5TX' \
    --sortBy 'createdAt:desc' \
    > test.out 2>&1
eval_tap $? 18 'AdminListTags' test.out

#- 19 AdminCreateTag
# body param: body
echo '{"name": "1gjvGB8b", "owner": "SERVER"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminCreateTag \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 19 'AdminCreateTag' test.out

#- 20 AdminDeleteTag
$CLI_EXE \
    --sn inventory \
    --op AdminDeleteTag \
    --namespace $AB_NAMESPACE \
    --tagName 'XjqpF20h' \
    > test.out 2>&1
eval_tap $? 20 'AdminDeleteTag' test.out

#- 21 AdminConsumeUserItem
# body param: body
echo '{"qty": 96, "slotId": "pTL5hdgW", "sourceItemId": "V2h7TaMg"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminConsumeUserItem \
    --inventoryId '3msIf4qk' \
    --namespace $AB_NAMESPACE \
    --userId 'o58jeMkh' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 21 'AdminConsumeUserItem' test.out

#- 22 AdminBulkUpdateMyItems
# body param: body
echo '[{"customAttributes": {"PCOTouyC": {}, "nQPJmvvo": {}, "wC1uX7FU": {}}, "serverCustomAttributes": {"HC4Lw74m": {}, "89cAOWyA": {}, "XNooclsb": {}}, "slotId": "c5Pxvm8F", "sourceItemId": "5Gy4OK8f", "tags": ["3rTcCHNg", "jZwu0h5L", "pc3Hpn5D"], "type": "LE4zcJpf"}, {"customAttributes": {"tE7HsJeq": {}, "R05iCU8u": {}, "4yIT2CWW": {}}, "serverCustomAttributes": {"8w7Fi7Ir": {}, "iEjkefDH": {}, "Si8Qb6qx": {}}, "slotId": "wLFlmmCx", "sourceItemId": "Dst1EUGM", "tags": ["heGUaJPm", "HKihihtn", "W941D12w"], "type": "clLjwhxP"}, {"customAttributes": {"QGGfWNiz": {}, "hyvJRFg4": {}, "Amca9zWJ": {}}, "serverCustomAttributes": {"rQiWw3ym": {}, "NcROwORp": {}, "lZHJoZpP": {}}, "slotId": "ym7FpdXR", "sourceItemId": "9RcrRKsB", "tags": ["QRd20vgP", "DVdFtVcC", "vSiRSjtR"], "type": "OmubiTUz"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminBulkUpdateMyItems \
    --inventoryId '99q7hGHD' \
    --namespace $AB_NAMESPACE \
    --userId '6ZroiI9x' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 22 'AdminBulkUpdateMyItems' test.out

#- 23 AdminSaveItemToInventory
# body param: body
echo '{"customAttributes": {"q9U6TDRG": {}, "PUG6aWnQ": {}, "hecJUQ42": {}}, "qty": 14, "serverCustomAttributes": {"fTW4GQjR": {}, "kpBmGn9R": {}, "CvMQLCwN": {}}, "slotId": "iIjLpSRQ", "slotUsed": 3, "sourceItemId": "LTKmfGLB", "tags": ["ooAxs8GF", "HyxNnCGf", "l7RClEhH"], "type": "S6ZVuUyR"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminSaveItemToInventory \
    --inventoryId 'jChoWLPR' \
    --namespace $AB_NAMESPACE \
    --userId 'AyHPu6nK' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 23 'AdminSaveItemToInventory' test.out

#- 24 AdminBulkRemoveItems
# body param: body
echo '[{"slotId": "IJvHh2Qe", "sourceItemId": "qe5FOwjW"}, {"slotId": "rw7OTQGT", "sourceItemId": "Gm492mq6"}, {"slotId": "2DKIGILI", "sourceItemId": "mQ6xey6d"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminBulkRemoveItems \
    --inventoryId 'S6AbyQdl' \
    --namespace $AB_NAMESPACE \
    --userId 'bkzqcaHG' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 24 'AdminBulkRemoveItems' test.out

#- 25 AdminSaveItem
# body param: body
echo '{"customAttributes": {"XEVhnS7D": {}, "mGoa26ZZ": {}, "MxLTI6A4": {}}, "inventoryConfigurationCode": "mjRDSamB", "qty": 38, "serverCustomAttributes": {"8IBJPEnv": {}, "N4bogX5e": {}, "cwcIaYeP": {}}, "slotId": "pTp0fYkE", "slotUsed": 44, "sourceItemId": "Oqahdkmk", "tags": ["Rsohr3Nf", "zehO7qEU", "BvXvkUf8"], "type": "VSRKOTh4"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminSaveItem \
    --namespace $AB_NAMESPACE \
    --userId 'ZQQFHSVM' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 25 'AdminSaveItem' test.out

#- 26 PublicListInventoryConfigurations
$CLI_EXE \
    --sn inventory \
    --op PublicListInventoryConfigurations \
    --namespace $AB_NAMESPACE \
    --code 'LgWCyerv' \
    --limit '8' \
    --offset '62' \
    --sortBy 'code' \
    > test.out 2>&1
eval_tap $? 26 'PublicListInventoryConfigurations' test.out

#- 27 PublicListItemTypes
$CLI_EXE \
    --sn inventory \
    --op PublicListItemTypes \
    --namespace $AB_NAMESPACE \
    --limit '43' \
    --offset '84' \
    --sortBy 'createdAt' \
    > test.out 2>&1
eval_tap $? 27 'PublicListItemTypes' test.out

#- 28 PublicListTags
$CLI_EXE \
    --sn inventory \
    --op PublicListTags \
    --namespace $AB_NAMESPACE \
    --limit '52' \
    --offset '43' \
    --sortBy 'name' \
    > test.out 2>&1
eval_tap $? 28 'PublicListTags' test.out

#- 29 PublicListInventories
$CLI_EXE \
    --sn inventory \
    --op PublicListInventories \
    --namespace $AB_NAMESPACE \
    --inventoryConfigurationCode 'bkbsolEi' \
    --limit '10' \
    --offset '0' \
    --sortBy 'updatedAt:desc' \
    > test.out 2>&1
eval_tap $? 29 'PublicListInventories' test.out

#- 30 PublicConsumeMyItem
# body param: body
echo '{"qty": 93, "slotId": "M0skpRKY", "sourceItemId": "hPd2JR2n"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op PublicConsumeMyItem \
    --inventoryId 'osIrowlf' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 30 'PublicConsumeMyItem' test.out

#- 31 PublicListItems
$CLI_EXE \
    --sn inventory \
    --op PublicListItems \
    --inventoryId 'AF6S4s70' \
    --namespace $AB_NAMESPACE \
    --limit '68' \
    --offset '53' \
    --qtyGte '64' \
    --sortBy 'updatedAt:desc' \
    --sourceItemId 'pGxOw9qd' \
    --tags 'duqnl5Aq' \
    > test.out 2>&1
eval_tap $? 31 'PublicListItems' test.out

#- 32 PublicBulkUpdateMyItems
# body param: body
echo '[{"customAttributes": {"02IqL1pi": {}, "uqk6oj1Q": {}, "tliWxGsG": {}}, "slotId": "Fo2BI8cv", "sourceItemId": "ccoYuv5A", "tags": ["tF8KAHJG", "zxGBWxx3", "2Pk1OpVC"]}, {"customAttributes": {"iBt857FG": {}, "mkuDiixP": {}, "9hGlRpsY": {}}, "slotId": "e1Xb9y22", "sourceItemId": "HH3f7DWU", "tags": ["inPZVvon", "11zpwEzo", "kijbo1pa"]}, {"customAttributes": {"xMZ6gDN7": {}, "demquLTd": {}, "tdDgykeD": {}}, "slotId": "hzOamU4h", "sourceItemId": "QYEgyjab", "tags": ["d8jsObjD", "iAOKe07Q", "6Ed3J7JU"]}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op PublicBulkUpdateMyItems \
    --inventoryId 'C2nhXRk4' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 32 'PublicBulkUpdateMyItems' test.out

#- 33 PublicBulkRemoveMyItems
# body param: body
echo '[{"slotId": "81jD9SOy", "sourceItemId": "jJkVBUr2"}, {"slotId": "VMt2Snsq", "sourceItemId": "yu6Ao6DU"}, {"slotId": "RH9ArXvS", "sourceItemId": "G0xNFgCX"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op PublicBulkRemoveMyItems \
    --inventoryId 'm60FSiFB' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 33 'PublicBulkRemoveMyItems' test.out

#- 34 PublicMoveMyItems
# body param: body
echo '{"items": [{"qty": 30, "slotId": "VRaeXfXv", "sourceItemId": "RejkpRaF"}, {"qty": 2, "slotId": "2FeYN6Zf", "sourceItemId": "S6WCaVGB"}, {"qty": 99, "slotId": "NzeDb8vt", "sourceItemId": "5wpNEtUZ"}], "srcInventoryId": "qfhF2M6K"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op PublicMoveMyItems \
    --inventoryId 'HY7766pt' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 34 'PublicMoveMyItems' test.out

#- 35 PublicGetItem
$CLI_EXE \
    --sn inventory \
    --op PublicGetItem \
    --inventoryId 'sOA1NoF8' \
    --namespace $AB_NAMESPACE \
    --slotId '3mBJm8SY' \
    --sourceItemId 'US2dELMu' \
    > test.out 2>&1
eval_tap $? 35 'PublicGetItem' test.out


# remove artifacts
rm -f "$CLI_TOKEN_FILE"
rm -f "$TEMP_JSON_INPUT"
rm -f "$TEMP_FILE_UPLOAD"

exit $EXIT_CODE