#!/usr/bin/env bash

# Copyright (c) 2021 AccelByte Inc. All Rights Reserved.
# This is licensed software from AccelByte Inc, for limitations
# and restrictions contact your company contract manager.

# This code is generated by tool. DO NOT EDIT.

# Meta:
# - random seed: 
# - template file: 

# Instructions:
# - Run the Justice SDK Mock Server first before running this script.

export AB_BASE_URL="http://127.0.0.1:8080"
export AB_CLIENT_ID="admin"
export AB_CLIENT_SECRET="admin"
export AB_NAMESPACE="test"
export AB_APP_NAME="UnitTest"

EXIT_CODE=0

eval_tap() {
  if [ $1 -eq 0 ]; then
    echo "ok $2 - $3"
  else
    EXIT_CODE=1
    echo "not ok $2 - $3"
    sed 's/^/# /g' $4
  fi
  rm -f $4
}

CLI_EXE="AccelByte.Sdk.Sample.Cli"
CLI_TOKEN_FILE="$(dirname "$(which $CLI_EXE)")/token.json"
TEMP_JSON_INPUT="input_json.json"
TEMP_FILE_UPLOAD="file_upload.bin"

echo "TAP version 13"
echo "1..44"

#- 1 Login
$CLI_EXE --op login --lt user --user user --pass user > test.out 2>&1
eval_tap $? 1 'Login' test.out

if [ $EXIT_CODE -ne 0 ]; then
  echo "Bail out! Login failed."
  exit $EXIT_CODE
fi

# echo "foo" > "$CLI_TOKEN_FILE"

#- 2 AdminCreateChainingOperations
# body param: body
echo '{"message": "YnobmIHx", "operations": [{"consumeItems": [{"dateRangeValidation": true, "inventoryId": "pdA6wnDU", "options": ["65xcRueQ", "53932D74", "jov7xKL6"], "qty": 77, "slotId": "HCVBJ3qE", "sourceItemId": "4TBUHWDD"}, {"dateRangeValidation": false, "inventoryId": "v0LbyTdR", "options": ["U1AYcl7L", "CzNMBX5Q", "KedCbFQa"], "qty": 61, "slotId": "CAUjFemd", "sourceItemId": "7NEx2CFn"}, {"dateRangeValidation": true, "inventoryId": "tKYORtXd", "options": ["l1gvRz9O", "WwGnlZpo", "clozLz2s"], "qty": 92, "slotId": "4l21X5n6", "sourceItemId": "FLnCkONv"}], "createItems": [{"customAttributes": {"KgmBF5ai": {}, "f8kxDD0c": {}, "LkB4lVSC": {}}, "inventoryConfigurationCode": "83Gvj0jM", "inventoryId": "ql0oWnZK", "qty": 78, "serverCustomAttributes": {"43hy3dnr": {}, "mpsA8odk": {}, "BoIJKjGj": {}}, "slotId": "KeLiwnCu", "slotUsed": 2, "source": "OTHER", "sourceItemId": "odZsjgBO", "tags": ["cUDWgw4r", "fS7cvjGO", "gaAvNctJ"], "toSpecificInventory": true, "type": "cU9GeB1o"}, {"customAttributes": {"xAygZ7d8": {}, "VM99gBhu": {}, "BDUsIK06": {}}, "inventoryConfigurationCode": "QrbKdGah", "inventoryId": "TrZ6mLli", "qty": 42, "serverCustomAttributes": {"iosdUO0O": {}, "Hi1Vp23T": {}, "FqMmB7SQ": {}}, "slotId": "VoEzb8rB", "slotUsed": 43, "source": "OTHER", "sourceItemId": "nPJ15o4D", "tags": ["D6UtRvrg", "XKWJ7nGK", "KYC1mOmr"], "toSpecificInventory": false, "type": "6iysgt6n"}, {"customAttributes": {"TOU46fq8": {}, "VXGVqwRC": {}, "BxeOADN0": {}}, "inventoryConfigurationCode": "fpg3EZDa", "inventoryId": "fPQKaQvO", "qty": 85, "serverCustomAttributes": {"Nj6JBekV": {}, "dkhLCk5r": {}, "6SYUDPvg": {}}, "slotId": "oalX5G4y", "slotUsed": 72, "source": "ECOMMERCE", "sourceItemId": "yGuohi5Q", "tags": ["YHmFrolX", "6ujOz0nX", "wYGHW8UR"], "toSpecificInventory": false, "type": "u8caeGyM"}], "removeItems": [{"inventoryId": "43xDbxpB", "slotId": "wVaifpd4", "sourceItemId": "kNDt5kjc"}, {"inventoryId": "g3DhpVRN", "slotId": "FyQL1Z37", "sourceItemId": "vcZkoxbp"}, {"inventoryId": "IfWkgGmM", "slotId": "uWBKlBdT", "sourceItemId": "q5elp6xZ"}], "targetUserId": "GzaP4jkR", "updateItems": [{"customAttributes": {"f7CLEuvF": {}, "sU266Hi5": {}, "LPMcjSeW": {}}, "inventoryId": "RVmgXARJ", "serverCustomAttributes": {"erxy9Nfy": {}, "Nxbzsevh": {}, "1Acd9hH6": {}}, "slotId": "BMBUDcPt", "sourceItemId": "uOBWPMbv", "tags": ["jYp1I2c8", "wLklVKDJ", "k8tP4qj5"], "type": "rRpfNznn"}, {"customAttributes": {"7NrduGHA": {}, "MUTXe1cN": {}, "fYGoUFJP": {}}, "inventoryId": "jmsrXLPi", "serverCustomAttributes": {"DO4FK3jO": {}, "Ix6i4Sln": {}, "wKYhy1kI": {}}, "slotId": "1XYpUZtr", "sourceItemId": "GOA6UFBF", "tags": ["8xWqdl1a", "79UFeE8w", "iyAj8mmp"], "type": "Uns33Q7s"}, {"customAttributes": {"0XSKYbYi": {}, "kNaAjTlW": {}, "lpVAFpZB": {}}, "inventoryId": "j7ipzDlt", "serverCustomAttributes": {"zNmBMmfr": {}, "f5Gd9GRt": {}, "3tUZvQn2": {}}, "slotId": "fP4Ne0Ya", "sourceItemId": "jzKkwDu3", "tags": ["nZ1AnNrM", "AFbGjLLZ", "Lv3Ks4VF"], "type": "kgFmg7H4"}]}, {"consumeItems": [{"dateRangeValidation": false, "inventoryId": "a8M9HV8y", "options": ["hwgTsH5I", "kScLQP8S", "CUfRTOvB"], "qty": 22, "slotId": "CWm63Gc3", "sourceItemId": "Jk3Vsl19"}, {"dateRangeValidation": true, "inventoryId": "6FXdJHtL", "options": ["KQRO2jZE", "tdZKfSuG", "9hSK531s"], "qty": 44, "slotId": "gCEtyhcD", "sourceItemId": "d9anN6zk"}, {"dateRangeValidation": false, "inventoryId": "4j5gzOaR", "options": ["OcaOCEwR", "9Sj3w9qg", "vTkgJUZD"], "qty": 29, "slotId": "fnkDDtCt", "sourceItemId": "8snzVfIC"}], "createItems": [{"customAttributes": {"q1oliotM": {}, "ECrg0SfK": {}, "TF67vk1O": {}}, "inventoryConfigurationCode": "eoMPRzMv", "inventoryId": "A0m2dq9S", "qty": 66, "serverCustomAttributes": {"npKr0hwb": {}, "hO1TxfRL": {}, "SIy3HRDZ": {}}, "slotId": "EzJDgjRp", "slotUsed": 64, "source": "ECOMMERCE", "sourceItemId": "B7Tc6eHi", "tags": ["JwjqNQtB", "uD3BqcaS", "Gd17KZRw"], "toSpecificInventory": false, "type": "QbZxFycx"}, {"customAttributes": {"7cAWoWlu": {}, "l0g8VEld": {}, "SOQneK7i": {}}, "inventoryConfigurationCode": "huCsqtX2", "inventoryId": "sVIYsDEK", "qty": 4, "serverCustomAttributes": {"UcghqAVI": {}, "92x8hHZn": {}, "Vp0A8ixA": {}}, "slotId": "dKWXFyOo", "slotUsed": 95, "source": "ECOMMERCE", "sourceItemId": "Mh2XqXno", "tags": ["aYJbbdsd", "3tWYrRn7", "kiTmztY7"], "toSpecificInventory": false, "type": "CxezaRcO"}, {"customAttributes": {"CRrIhpkK": {}, "fZS7rdWn": {}, "N9Wfbl7Y": {}}, "inventoryConfigurationCode": "RKTtlwb7", "inventoryId": "Jz4VKlzP", "qty": 70, "serverCustomAttributes": {"pHv5cJK5": {}, "KfP3JVI1": {}, "uOjW52iW": {}}, "slotId": "0r2ugeq2", "slotUsed": 19, "source": "OTHER", "sourceItemId": "Wc53qIiv", "tags": ["smkk6ZVQ", "8UvWv6zO", "SqyTj9ZY"], "toSpecificInventory": true, "type": "zjwWm8Bw"}], "removeItems": [{"inventoryId": "ICN19jVs", "slotId": "vZdFm5GB", "sourceItemId": "3WWDrJOs"}, {"inventoryId": "oCIimEBK", "slotId": "YJcKCdAD", "sourceItemId": "ymiDoeuz"}, {"inventoryId": "yFt14cwL", "slotId": "MJLwWrpH", "sourceItemId": "5cMJUIaS"}], "targetUserId": "5CofE9tH", "updateItems": [{"customAttributes": {"s1388thM": {}, "4xEW3Rp4": {}, "nYrTHWs5": {}}, "inventoryId": "xSWOvAKR", "serverCustomAttributes": {"bcMlSfs7": {}, "z8UWBWSp": {}, "5jt5s6D1": {}}, "slotId": "ILq9v4dv", "sourceItemId": "8UkBf4nX", "tags": ["I8cd9TUK", "AMgVhF8y", "KVnPPetc"], "type": "dvIjC5rL"}, {"customAttributes": {"yqFXyOiz": {}, "JNOuEmzU": {}, "nQs8PAx1": {}}, "inventoryId": "ts3qSsx1", "serverCustomAttributes": {"Vk3nBx36": {}, "454c6iQO": {}, "U0kzzb0D": {}}, "slotId": "Cbl9PCyu", "sourceItemId": "RDEkGOli", "tags": ["sDOXPfxH", "bEpsHJK1", "eBLYnwyJ"], "type": "BLVL2lma"}, {"customAttributes": {"RFqeUMcx": {}, "Y9dwUIGV": {}, "CQI6Ucmy": {}}, "inventoryId": "yK5CAZdQ", "serverCustomAttributes": {"6cFcmrWA": {}, "kENzCm0W": {}, "unpTi6mr": {}}, "slotId": "Ml3ifere", "sourceItemId": "EwMk8VRw", "tags": ["X7Hcc0Ow", "axeS6mK9", "gjm6C58I"], "type": "SA34fms1"}]}, {"consumeItems": [{"dateRangeValidation": false, "inventoryId": "OSedkKtv", "options": ["5D0FYtey", "Vfeltzh4", "twHpcsC6"], "qty": 77, "slotId": "k0tZzO85", "sourceItemId": "3SWs135c"}, {"dateRangeValidation": true, "inventoryId": "PfDyeRTK", "options": ["hvndv0VZ", "RdRvq6mA", "ByUsqqNj"], "qty": 38, "slotId": "dDn9D6tu", "sourceItemId": "AKzChLX5"}, {"dateRangeValidation": true, "inventoryId": "NbPeC3k7", "options": ["g8190pR6", "02lo7eVg", "vmEkgmf3"], "qty": 47, "slotId": "VdnkPwlx", "sourceItemId": "py09OHaZ"}], "createItems": [{"customAttributes": {"nGExndvR": {}, "Vk7Z9GJ6": {}, "xCsTH5Y2": {}}, "inventoryConfigurationCode": "fsojuu28", "inventoryId": "WStnpMG4", "qty": 74, "serverCustomAttributes": {"jkV98U5y": {}, "LnzRD21r": {}, "umswQjBX": {}}, "slotId": "Rbg0zGwe", "slotUsed": 24, "source": "OTHER", "sourceItemId": "fod5piRj", "tags": ["xjNYgXYn", "SMxb8S1b", "Hl1pg3yV"], "toSpecificInventory": false, "type": "wVIE3GuI"}, {"customAttributes": {"GCAhpfzm": {}, "rHPMdDZt": {}, "EcWHStQA": {}}, "inventoryConfigurationCode": "QKNhoMVj", "inventoryId": "dnslr55g", "qty": 46, "serverCustomAttributes": {"mg9PpYar": {}, "G98z4aw0": {}, "Y1JlDgfW": {}}, "slotId": "pDxJwz7C", "slotUsed": 36, "source": "ECOMMERCE", "sourceItemId": "Tk5bX81Z", "tags": ["KtetGs77", "r5rad6uc", "pIwiSHvh"], "toSpecificInventory": false, "type": "CzbPfGiQ"}, {"customAttributes": {"ETWVdfZL": {}, "f8dNTXgv": {}, "Qk1s7T2v": {}}, "inventoryConfigurationCode": "S4qCpKgt", "inventoryId": "BwTlmt3v", "qty": 55, "serverCustomAttributes": {"nzdmoaXp": {}, "vTsM1BV5": {}, "zqBzr4fi": {}}, "slotId": "8jLcftfE", "slotUsed": 55, "source": "OTHER", "sourceItemId": "nHtNcbY8", "tags": ["NQc2Mjy0", "O8eIsvLP", "hVgFcxPc"], "toSpecificInventory": false, "type": "MedvOtuH"}], "removeItems": [{"inventoryId": "IIi9xNY4", "slotId": "ZMBe83bz", "sourceItemId": "CGCP69P3"}, {"inventoryId": "ZL5QZHcy", "slotId": "NX6yM9Oe", "sourceItemId": "Avu4IEuh"}, {"inventoryId": "TvB92OpT", "slotId": "8QWj88o1", "sourceItemId": "GbCvxwN5"}], "targetUserId": "iizscHMG", "updateItems": [{"customAttributes": {"2H6GT7eb": {}, "at3Y0HLz": {}, "JCWgpXnN": {}}, "inventoryId": "Eva7K47B", "serverCustomAttributes": {"WxaVgxZQ": {}, "vvCKjiUY": {}, "IoSBKiuQ": {}}, "slotId": "EF8Iz241", "sourceItemId": "vWxja2ec", "tags": ["c2nLCDjp", "rjftKXsb", "nn0w82Wp"], "type": "IWJ3ukFT"}, {"customAttributes": {"MSWWQIEW": {}, "2F3Bnx1C": {}, "G7w6MeBE": {}}, "inventoryId": "PbiEk6Jq", "serverCustomAttributes": {"uzjkHxca": {}, "0H9X23q7": {}, "DUo4dcPN": {}}, "slotId": "fMBfe7Y3", "sourceItemId": "84cLuoJP", "tags": ["i469C8hD", "dLSI5f6B", "RkzqO4Eu"], "type": "zxqvopEr"}, {"customAttributes": {"1PMPKlS6": {}, "mrmV8Ae0": {}, "lt2AflUw": {}}, "inventoryId": "3wuSajz6", "serverCustomAttributes": {"sSGXncvD": {}, "mCbf0lOC": {}, "dqbxfZlF": {}}, "slotId": "d9RiKDiJ", "sourceItemId": "IrbT239O", "tags": ["ygIJnUfu", "Ov0hUfmA", "GsB8WKUk"], "type": "cxorj3oF"}]}], "requestId": "pTmIsAx2"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminCreateChainingOperations \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 2 'AdminCreateChainingOperations' test.out

#- 3 AdminListIntegrationConfigurations
$CLI_EXE \
    --sn inventory \
    --op AdminListIntegrationConfigurations \
    --namespace $AB_NAMESPACE \
    --limit '92' \
    --offset '20' \
    --sortBy 'createdAt:desc' \
    > test.out 2>&1
eval_tap $? 3 'AdminListIntegrationConfigurations' test.out

#- 4 AdminCreateIntegrationConfiguration
# body param: body
echo '{"mapItemType": ["J8BqGFMS", "HRFmGFpD", "tyYnOIPg"], "serviceName": "uiI754HR", "targetInventoryCode": "Evizf3MC"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminCreateIntegrationConfiguration \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 4 'AdminCreateIntegrationConfiguration' test.out

#- 5 AdminUpdateIntegrationConfiguration
# body param: body
echo '{"mapItemType": ["A0nSodrk", "tZdPnEX9", "F7LaOnwK"], "serviceName": "H6xSHhqu", "targetInventoryCode": "SRcdTzxv"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminUpdateIntegrationConfiguration \
    --integrationConfigurationId 'zMzA29AO' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 5 'AdminUpdateIntegrationConfiguration' test.out

#- 6 AdminUpdateStatusIntegrationConfiguration
# body param: body
echo '{"status": "INIT"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminUpdateStatusIntegrationConfiguration \
    --integrationConfigurationId 'vjgCwOQK' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 6 'AdminUpdateStatusIntegrationConfiguration' test.out

#- 7 AdminListInventories
$CLI_EXE \
    --sn inventory \
    --op AdminListInventories \
    --namespace $AB_NAMESPACE \
    --inventoryConfigurationCode 'sb0r7OMi' \
    --limit '99' \
    --offset '63' \
    --sortBy 'createdAt:desc' \
    --userId 'IePQnNxX' \
    > test.out 2>&1
eval_tap $? 7 'AdminListInventories' test.out

#- 8 AdminCreateInventory
# body param: body
echo '{"inventoryConfigurationCode": "8bhbayDE", "userId": "MV7M9jlZ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminCreateInventory \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 8 'AdminCreateInventory' test.out

#- 9 AdminGetInventory
$CLI_EXE \
    --sn inventory \
    --op AdminGetInventory \
    --inventoryId 'BUt4GKxL' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 9 'AdminGetInventory' test.out

#- 10 AdminUpdateInventory
# body param: body
echo '{"incMaxSlots": 66}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminUpdateInventory \
    --inventoryId 'Shk8HfyH' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 10 'AdminUpdateInventory' test.out

#- 11 DeleteInventory
# body param: body
echo '{"message": "1b4zNZYZ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op DeleteInventory \
    --inventoryId '71urDNUl' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 11 'DeleteInventory' test.out

#- 12 AdminListItems
$CLI_EXE \
    --sn inventory \
    --op AdminListItems \
    --inventoryId 'LZjrzBrz' \
    --namespace $AB_NAMESPACE \
    --limit '29' \
    --offset '66' \
    --sortBy 'updatedAt:asc' \
    --sourceItemId '8t8RI1w3' \
    --tags 'A1qVo5PF' \
    > test.out 2>&1
eval_tap $? 12 'AdminListItems' test.out

#- 13 AdminGetInventoryItem
$CLI_EXE \
    --sn inventory \
    --op AdminGetInventoryItem \
    --inventoryId 'ws1QMGbm' \
    --namespace $AB_NAMESPACE \
    --slotId '7BOjUIDS' \
    --sourceItemId 'Kq3VplZJ' \
    > test.out 2>&1
eval_tap $? 13 'AdminGetInventoryItem' test.out

#- 14 AdminListInventoryConfigurations
$CLI_EXE \
    --sn inventory \
    --op AdminListInventoryConfigurations \
    --namespace $AB_NAMESPACE \
    --code 'ZQNzklYB' \
    --limit '96' \
    --offset '87' \
    --sortBy 'updatedAt' \
    > test.out 2>&1
eval_tap $? 14 'AdminListInventoryConfigurations' test.out

#- 15 AdminCreateInventoryConfiguration
# body param: body
echo '{"code": "bFogrhSO", "description": "lwmwFd4R", "initialMaxSlots": 65, "maxInstancesPerUser": 73, "maxUpgradeSlots": 71, "name": "UvT7ZndS"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminCreateInventoryConfiguration \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 15 'AdminCreateInventoryConfiguration' test.out

#- 16 AdminGetInventoryConfiguration
$CLI_EXE \
    --sn inventory \
    --op AdminGetInventoryConfiguration \
    --inventoryConfigurationId '9uel9bNJ' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 16 'AdminGetInventoryConfiguration' test.out

#- 17 AdminUpdateInventoryConfiguration
# body param: body
echo '{"code": "I6N48mVq", "description": "1FWk6MkQ", "initialMaxSlots": 72, "maxInstancesPerUser": 86, "maxUpgradeSlots": 14, "name": "3QQT4ccB"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminUpdateInventoryConfiguration \
    --inventoryConfigurationId 'r5nou0ZT' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 17 'AdminUpdateInventoryConfiguration' test.out

#- 18 AdminDeleteInventoryConfiguration
$CLI_EXE \
    --sn inventory \
    --op AdminDeleteInventoryConfiguration \
    --inventoryConfigurationId 'YA3zhdeA' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 18 'AdminDeleteInventoryConfiguration' test.out

#- 19 AdminListItemTypes
$CLI_EXE \
    --sn inventory \
    --op AdminListItemTypes \
    --namespace $AB_NAMESPACE \
    --limit '67' \
    --offset '1' \
    --sortBy 'createdAt:asc' \
    > test.out 2>&1
eval_tap $? 19 'AdminListItemTypes' test.out

#- 20 AdminCreateItemType
# body param: body
echo '{"name": "zRuYxDUa"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminCreateItemType \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 20 'AdminCreateItemType' test.out

#- 21 AdminDeleteItemType
$CLI_EXE \
    --sn inventory \
    --op AdminDeleteItemType \
    --itemTypeName 'fmIOU30H' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 21 'AdminDeleteItemType' test.out

#- 22 AdminListTags
$CLI_EXE \
    --sn inventory \
    --op AdminListTags \
    --namespace $AB_NAMESPACE \
    --limit '76' \
    --offset '58' \
    --owner 'zeGbkPV8' \
    --sortBy 'createdAt' \
    > test.out 2>&1
eval_tap $? 22 'AdminListTags' test.out

#- 23 AdminCreateTag
# body param: body
echo '{"name": "yIkK83KI", "owner": "SERVER"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminCreateTag \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 23 'AdminCreateTag' test.out

#- 24 AdminDeleteTag
$CLI_EXE \
    --sn inventory \
    --op AdminDeleteTag \
    --namespace $AB_NAMESPACE \
    --tagName 'LL2JJSkP' \
    > test.out 2>&1
eval_tap $? 24 'AdminDeleteTag' test.out

#- 25 AdminConsumeUserItem
# body param: body
echo '{"options": ["QCgaiRYS", "BBrQ0jDt", "EocJOcVU"], "qty": 48, "slotId": "IDqYecyI", "sourceItemId": "1T7czS25"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminConsumeUserItem \
    --inventoryId 'PhyUtI99' \
    --namespace $AB_NAMESPACE \
    --userId 'aJv93uNs' \
    --dateRangeValidation 'GartTgMh' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 25 'AdminConsumeUserItem' test.out

#- 26 AdminBulkUpdateMyItems
# body param: body
echo '[{"customAttributes": {"U5lK6eaw": {}, "us6xyNAp": {}, "CwOosUTw": {}}, "serverCustomAttributes": {"U1TjXDDO": {}, "irgGhPD3": {}, "3ksFRDqO": {}}, "slotId": "AD4nCqEB", "sourceItemId": "cdgObKq5", "tags": ["OnglDMuJ", "0ux5R5ep", "zdOvNwP3"], "type": "fJuZCn9M"}, {"customAttributes": {"GI9BLIrK": {}, "lSkcNUmP": {}, "WyTxCamO": {}}, "serverCustomAttributes": {"UgmJDqYu": {}, "q7nKfbdg": {}, "ZrHoTBNY": {}}, "slotId": "UpWIGQli", "sourceItemId": "gehfTFTz", "tags": ["ClNqjjjO", "3up1zfMF", "ItNV95VJ"], "type": "qxKK31Kv"}, {"customAttributes": {"uVQSDZ9l": {}, "LJMtP869": {}, "98FdsVzK": {}}, "serverCustomAttributes": {"eCOvz1nn": {}, "Cn8Sd4yO": {}, "oBXtboWv": {}}, "slotId": "oiCYJf3b", "sourceItemId": "ToDH0Q2r", "tags": ["JTGaDgrr", "DUGXx64c", "01g9ymgP"], "type": "QO4SNetC"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminBulkUpdateMyItems \
    --inventoryId 'cRCBKYGF' \
    --namespace $AB_NAMESPACE \
    --userId 'e9i282r7' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 26 'AdminBulkUpdateMyItems' test.out

#- 27 AdminSaveItemToInventory
# body param: body
echo '{"customAttributes": {"Z5PCsPol": {}, "f60KCoLx": {}, "XvWOUubq": {}}, "qty": 32, "serverCustomAttributes": {"tjaQievL": {}, "O0abofle": {}, "HcEwc7tT": {}}, "slotId": "QIRFxYV7", "slotUsed": 39, "source": "OTHER", "sourceItemId": "BnNv939Z", "tags": ["f9ymvBee", "ok8glWE3", "NQIuakEY"], "type": "uWs7eqVb"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminSaveItemToInventory \
    --inventoryId 'gXquBbOO' \
    --namespace $AB_NAMESPACE \
    --userId 'cCdKuNex' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 27 'AdminSaveItemToInventory' test.out

#- 28 AdminBulkRemoveItems
# body param: body
echo '[{"slotId": "IbR2FANh", "sourceItemId": "66P8kN1V"}, {"slotId": "ExB40VbT", "sourceItemId": "UiaJlpxt"}, {"slotId": "QDemD480", "sourceItemId": "KHWeJN6w"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminBulkRemoveItems \
    --inventoryId 'BKgnmYrj' \
    --namespace $AB_NAMESPACE \
    --userId '4NOjyGku' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 28 'AdminBulkRemoveItems' test.out

#- 29 AdminBulkSaveItemToInventory
# body param: body
echo '[{"customAttributes": {"ybF1Jzbg": {}, "AFRT0RJf": {}, "y1hmijps": {}}, "qty": 70, "serverCustomAttributes": {"ATl0iQjU": {}, "Pr92mln5": {}, "uKh9svSr": {}}, "slotId": "k3wkf2ji", "slotUsed": 53, "source": "OTHER", "sourceItemId": "aZZxdXW8", "tags": ["gDwKfDtb", "p0d4XN7W", "JC964ikH"], "type": "nhtnKucx"}, {"customAttributes": {"rvhKs9sW": {}, "2xqNeXBW": {}, "vHC718k7": {}}, "qty": 33, "serverCustomAttributes": {"Zwh8SksK": {}, "1KQgItLs": {}, "yDXV3ru8": {}}, "slotId": "GUPPs4Bq", "slotUsed": 14, "source": "OTHER", "sourceItemId": "VEGd8qKl", "tags": ["t35fP9eO", "GBmhxC6y", "RKfczywt"], "type": "XgMDLQCD"}, {"customAttributes": {"o0BYfODV": {}, "L90bDb7K": {}, "JNuDWlal": {}}, "qty": 41, "serverCustomAttributes": {"VpA6QwI2": {}, "e9PuL33R": {}, "gaQwg77V": {}}, "slotId": "5NMN85jn", "slotUsed": 97, "source": "ECOMMERCE", "sourceItemId": "g3UNOdX4", "tags": ["jUQPfF2w", "0A9CjwV2", "5hJMEjKJ"], "type": "G6qTuN6l"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminBulkSaveItemToInventory \
    --inventoryId 'JuCAVXsU' \
    --namespace $AB_NAMESPACE \
    --userId 'CKAU3ivw' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 29 'AdminBulkSaveItemToInventory' test.out

#- 30 AdminUpdateUserInventoriesByInventoryCode
# body param: body
echo '{"incMaxSlots": 47}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminUpdateUserInventoriesByInventoryCode \
    --inventoryConfigurationCode 'b7mZ3aJG' \
    --namespace $AB_NAMESPACE \
    --userId 'f0XmNJY6' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 30 'AdminUpdateUserInventoriesByInventoryCode' test.out

#- 31 AdminSaveItem
# body param: body
echo '{"customAttributes": {"S5xdRsIv": {}, "H5XNt1fQ": {}, "OCZsrUSV": {}}, "inventoryConfigurationCode": "T28wkZZK", "qty": 2, "serverCustomAttributes": {"CMnQFUtV": {}, "qYcKvraJ": {}, "Sxfi1Iv0": {}}, "slotId": "ruN9tKEn", "slotUsed": 80, "source": "ECOMMERCE", "sourceItemId": "SFrJ24ba", "tags": ["ARwT2Llf", "NMKGlB53", "1F4c4QGm"], "type": "uMnOh0SF"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminSaveItem \
    --namespace $AB_NAMESPACE \
    --userId 'B0Z09Ysr' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 31 'AdminSaveItem' test.out

#- 32 AdminBulkSaveItem
# body param: body
echo '[{"customAttributes": {"RVaYqh5F": {}, "J5md5VET": {}, "vHRCRsIq": {}}, "inventoryConfigurationCode": "fOYlaYK2", "qty": 37, "serverCustomAttributes": {"NyP2imof": {}, "vpdWMvVR": {}, "hXJSXTDq": {}}, "slotId": "Tc6rEpdW", "slotUsed": 44, "source": "ECOMMERCE", "sourceItemId": "KozzGyg4", "tags": ["26pkyVna", "lj2CnISx", "dyy43hzF"], "type": "o8t9QC0k"}, {"customAttributes": {"VxiORQUs": {}, "UGdDbym8": {}, "5ADN7MOz": {}}, "inventoryConfigurationCode": "M4a7MF9K", "qty": 41, "serverCustomAttributes": {"kUrycIn7": {}, "aaunD3V2": {}, "ULgRpNrt": {}}, "slotId": "GybBY9Mg", "slotUsed": 70, "source": "OTHER", "sourceItemId": "2vGoxtAt", "tags": ["UZePI6pO", "z5bgeTov", "95JWAHhG"], "type": "vzIXeQJ0"}, {"customAttributes": {"b2m1TRnG": {}, "RJMy24Nh": {}, "AaXXvVhQ": {}}, "inventoryConfigurationCode": "w3oSkNjn", "qty": 16, "serverCustomAttributes": {"tPbBfKVO": {}, "kGtEyGvU": {}, "YU9NcWr1": {}}, "slotId": "YHJoabZE", "slotUsed": 81, "source": "ECOMMERCE", "sourceItemId": "yfkLLfwb", "tags": ["MKj2x6HR", "HHmOiNV7", "6N7VPOIe"], "type": "K4Z52AEz"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminBulkSaveItem \
    --namespace $AB_NAMESPACE \
    --userId 'FdgHPb5N' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 32 'AdminBulkSaveItem' test.out

#- 33 AdminSyncUserEntitlements
$CLI_EXE \
    --sn inventory \
    --op AdminSyncUserEntitlements \
    --namespace $AB_NAMESPACE \
    --userId 'ZMULPARg' \
    > test.out 2>&1
eval_tap $? 33 'AdminSyncUserEntitlements' test.out

#- 34 AdminPurchasable
# body param: body
echo '{"entitlementType": "UpXXIevn", "inventoryConfig": {"slotUsed": 66}, "itemId": "suBzei6t", "itemType": "RIB0KeXp", "items": [{"bundledQty": 56, "entitlementType": "D5Kjg33V", "inventoryConfig": {"slotUsed": 70}, "itemId": "7gnochPL", "itemType": "hOltUZ66", "sku": "AI8sh1iQ", "stackable": true, "useCount": 94}, {"bundledQty": 51, "entitlementType": "uNzWPNKD", "inventoryConfig": {"slotUsed": 6}, "itemId": "agwdCkFU", "itemType": "H2VCSr6U", "sku": "hkKDII7j", "stackable": false, "useCount": 32}, {"bundledQty": 16, "entitlementType": "SfQEBYOb", "inventoryConfig": {"slotUsed": 25}, "itemId": "ut2UQSSB", "itemType": "AtjhXLfv", "sku": "h9643Zpv", "stackable": false, "useCount": 57}], "quantity": 12, "sku": "Od66YeJW", "stackable": false, "useCount": 83}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminPurchasable \
    --namespace $AB_NAMESPACE \
    --userId 'U32yGvJf' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 34 'AdminPurchasable' test.out

#- 35 PublicListInventoryConfigurations
$CLI_EXE \
    --sn inventory \
    --op PublicListInventoryConfigurations \
    --namespace $AB_NAMESPACE \
    --code '4YLM8YAe' \
    --limit '44' \
    --offset '31' \
    --sortBy 'code:asc' \
    > test.out 2>&1
eval_tap $? 35 'PublicListInventoryConfigurations' test.out

#- 36 PublicListItemTypes
$CLI_EXE \
    --sn inventory \
    --op PublicListItemTypes \
    --namespace $AB_NAMESPACE \
    --limit '7' \
    --offset '57' \
    --sortBy 'createdAt:desc' \
    > test.out 2>&1
eval_tap $? 36 'PublicListItemTypes' test.out

#- 37 PublicListTags
$CLI_EXE \
    --sn inventory \
    --op PublicListTags \
    --namespace $AB_NAMESPACE \
    --limit '43' \
    --offset '43' \
    --sortBy 'name' \
    > test.out 2>&1
eval_tap $? 37 'PublicListTags' test.out

#- 38 PublicListInventories
$CLI_EXE \
    --sn inventory \
    --op PublicListInventories \
    --namespace $AB_NAMESPACE \
    --inventoryConfigurationCode 'paetnHtI' \
    --limit '7' \
    --offset '63' \
    --sortBy 'createdAt:asc' \
    > test.out 2>&1
eval_tap $? 38 'PublicListInventories' test.out

#- 39 PublicConsumeMyItem
# body param: body
echo '{"options": ["C78WtUTE", "ZxpzAu5Q", "v1okZCBK"], "qty": 64, "slotId": "sfUXfeM9", "sourceItemId": "QnhWxMyP"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op PublicConsumeMyItem \
    --inventoryId 'RjeSFXBP' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 39 'PublicConsumeMyItem' test.out

#- 40 PublicListItems
$CLI_EXE \
    --sn inventory \
    --op PublicListItems \
    --inventoryId 'nm5kajQj' \
    --namespace $AB_NAMESPACE \
    --limit '94' \
    --offset '63' \
    --sortBy 'createdAt:asc' \
    --sourceItemId 'Jg4EMsmG' \
    --tags 'gqdIyuDM' \
    > test.out 2>&1
eval_tap $? 40 'PublicListItems' test.out

#- 41 PublicBulkUpdateMyItems
# body param: body
echo '[{"customAttributes": {"hsa9ISU5": {}, "3VxdKuv2": {}, "UxPlAwFq": {}}, "slotId": "5gAJOqen", "sourceItemId": "9dzEeE72", "tags": ["wysz43zz", "h7Buv8v6", "vSgSKnpI"]}, {"customAttributes": {"112WNd44": {}, "1DESLZt4": {}, "ABVleWCr": {}}, "slotId": "5873kZv9", "sourceItemId": "ZOec4u3p", "tags": ["ULrPOKZr", "kM5X8wEL", "F0v0fj8h"]}, {"customAttributes": {"eiDnx4ZN": {}, "R5ke3xgU": {}, "p2KsfrMY": {}}, "slotId": "9HrR7Kjn", "sourceItemId": "xL9PSyGD", "tags": ["piFAn1Ng", "OHyjQsTW", "0N152S21"]}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op PublicBulkUpdateMyItems \
    --inventoryId 'VjKnOAsy' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 41 'PublicBulkUpdateMyItems' test.out

#- 42 PublicBulkRemoveMyItems
# body param: body
echo '[{"slotId": "cR0qNhm6", "sourceItemId": "B5V91j9t"}, {"slotId": "UQSAkPRb", "sourceItemId": "RMy5TQdH"}, {"slotId": "F5xulmxw", "sourceItemId": "S1vbJDfu"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op PublicBulkRemoveMyItems \
    --inventoryId 'zcVsQbzB' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 42 'PublicBulkRemoveMyItems' test.out

#- 43 PublicMoveMyItems
# body param: body
echo '{"items": [{"qty": 40, "slotId": "QUydql3y", "sourceItemId": "0Zxf8RBx"}, {"qty": 97, "slotId": "ZviXBFaE", "sourceItemId": "Y3FP0TEn"}, {"qty": 43, "slotId": "mH8ycb3g", "sourceItemId": "K8lAytSd"}], "srcInventoryId": "DNIkmNEU"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op PublicMoveMyItems \
    --inventoryId 'aPd64xcK' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 43 'PublicMoveMyItems' test.out

#- 44 PublicGetItem
$CLI_EXE \
    --sn inventory \
    --op PublicGetItem \
    --inventoryId 'lGsNch9J' \
    --namespace $AB_NAMESPACE \
    --slotId 'Ifl6sDxq' \
    --sourceItemId 'HuDTdvEX' \
    > test.out 2>&1
eval_tap $? 44 'PublicGetItem' test.out


# remove artifacts
rm -f "$CLI_TOKEN_FILE"
rm -f "$TEMP_JSON_INPUT"
rm -f "$TEMP_FILE_UPLOAD"

exit $EXIT_CODE