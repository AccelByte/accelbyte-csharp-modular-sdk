#!/usr/bin/env bash

# Copyright (c) 2021 AccelByte Inc. All Rights Reserved.
# This is licensed software from AccelByte Inc, for limitations
# and restrictions contact your company contract manager.

# This code is generated by tool. DO NOT EDIT.

# Meta:
# - random seed: 
# - template file: 

# Instructions:
# - Run the Justice SDK Mock Server first before running this script.

export AB_BASE_URL="http://127.0.0.1:8080"
export AB_CLIENT_ID="admin"
export AB_CLIENT_SECRET="admin"
export AB_NAMESPACE="test"
export AB_APP_NAME="UnitTest"

EXIT_CODE=0

eval_tap() {
  if [ $1 -eq 0 ]; then
    echo "ok $2 - $3"
  else
    EXIT_CODE=1
    echo "not ok $2 - $3"
    sed 's/^/# /g' $4
  fi
  rm -f $4
}

CLI_EXE="AccelByte.Sdk.Sample.Cli"
CLI_TOKEN_FILE="$(dirname "$(which $CLI_EXE)")/token.json"
TEMP_JSON_INPUT="input_json.json"
TEMP_FILE_UPLOAD="file_upload.bin"

echo "TAP version 13"
echo "1..35"

#- 1 Login
$CLI_EXE --op login --lt user --user user --pass user > test.out 2>&1
eval_tap $? 1 'Login' test.out

if [ $EXIT_CODE -ne 0 ]; then
  echo "Bail out! Login failed."
  exit $EXIT_CODE
fi

# echo "foo" > "$CLI_TOKEN_FILE"

#- 2 AdminCreateChainingOperations
# body param: body
echo '{"message": "o6vovegB", "operations": [{"consumeItems": [{"inventoryId": "WuunH5eo", "qty": 19, "slotId": "L59xpdUK", "sourceItemId": "aAPEYDz9"}, {"inventoryId": "DsobI7HF", "qty": 77, "slotId": "Uz8Mf5SB", "sourceItemId": "3ygMf5tQ"}, {"inventoryId": "vCrv11oj", "qty": 23, "slotId": "BmDEHFoj", "sourceItemId": "Aq1xyqQd"}], "createItems": [{"customAttributes": {"jXetv85L": {}, "T3iIZtb8": {}, "f49BnArK": {}}, "inventoryConfigurationCode": "Q0PeIqrZ", "inventoryId": "PZ72KKSr", "qty": 82, "serverCustomAttributes": {"awQsaFUO": {}, "ZMS9J8Ng": {}, "rLDNkuCi": {}}, "slotId": "7QFyxmR3", "slotUsed": 47, "sourceItemId": "9sy4NDip", "tags": ["Br0NdSnW", "FioVoqnR", "MldhpsML"], "toSpecificInventory": true, "type": "W8yLtLih"}, {"customAttributes": {"t5mWacGw": {}, "3oUn4ouR": {}, "OrsQYcLl": {}}, "inventoryConfigurationCode": "PS3V0jul", "inventoryId": "4po2FAbL", "qty": 60, "serverCustomAttributes": {"LZcsD1Zr": {}, "e16PyJVs": {}, "ehPgB2yh": {}}, "slotId": "VTesscPL", "slotUsed": 83, "sourceItemId": "mbnP1pfA", "tags": ["DHyED71H", "1vzIhRgF", "wflEkCTp"], "toSpecificInventory": false, "type": "i2QF31ip"}, {"customAttributes": {"TG6ssVmi": {}, "zd7y0xw7": {}, "otjJhKjG": {}}, "inventoryConfigurationCode": "XnTk75zl", "inventoryId": "NpFJPHXT", "qty": 30, "serverCustomAttributes": {"dR0Zfe6t": {}, "9gBXm6lb": {}, "EsRgPRFI": {}}, "slotId": "GAq8MJh6", "slotUsed": 63, "sourceItemId": "KrpHuTSj", "tags": ["CZA8fCGC", "6EV7XJHq", "pBewrWye"], "toSpecificInventory": true, "type": "4JSPP5jy"}], "removeItems": [{"inventoryId": "3eO7CHsF", "slotId": "GYAjE3hS", "sourceItemId": "xz9giv8U"}, {"inventoryId": "LUsOMs3P", "slotId": "qsc2hFaA", "sourceItemId": "I0scXELK"}, {"inventoryId": "HG3y2eFw", "slotId": "Yksdle0i", "sourceItemId": "RGu3mWxD"}], "targetUserId": "4kfs43WG", "updateItems": [{"customAttributes": {"OiwP9QBH": {}, "28luAIiL": {}, "10U20kOL": {}}, "inventoryId": "WRYhg7gu", "serverCustomAttributes": {"1LxI19QX": {}, "EubeFN14": {}, "CF8OpafC": {}}, "slotId": "MoFy7vdH", "sourceItemId": "1vbVCaKb", "tags": ["9QeYX6sY", "5YhzIm6w", "MOdujAIW"], "type": "aDcortF8"}, {"customAttributes": {"XUdC6xCz": {}, "F2uN4Baf": {}, "TmK3Wv6g": {}}, "inventoryId": "OxFieVnb", "serverCustomAttributes": {"mtZyRnEI": {}, "Ko4hxmRl": {}, "11UgJi7g": {}}, "slotId": "TYkFkboC", "sourceItemId": "JYzo6UGB", "tags": ["cvSUr8pK", "xqKh27sa", "0GGIe5vi"], "type": "7ae6Yqkt"}, {"customAttributes": {"XevmOFZx": {}, "7TKRtdpK": {}, "VE8OOvoR": {}}, "inventoryId": "9gSH9Id2", "serverCustomAttributes": {"RX86aKZA": {}, "Cpx6cPMW": {}, "HtPyuZ8x": {}}, "slotId": "tRfY71G2", "sourceItemId": "1l6aQHNA", "tags": ["GQfHRGSA", "8S3aETow", "HFvGr5LF"], "type": "8k8cBEq1"}]}, {"consumeItems": [{"inventoryId": "Sq2dQMGj", "qty": 34, "slotId": "43iEnnS1", "sourceItemId": "Q2PZe3qO"}, {"inventoryId": "tbE90hAO", "qty": 29, "slotId": "oM3rMQdV", "sourceItemId": "gGuvWkmK"}, {"inventoryId": "mVzBWJMM", "qty": 14, "slotId": "67cP5oyT", "sourceItemId": "r6VhpC3c"}], "createItems": [{"customAttributes": {"yIhsqVzg": {}, "zbA4YYwe": {}, "P85ocBRI": {}}, "inventoryConfigurationCode": "xLO5G0rg", "inventoryId": "s14WdFc3", "qty": 69, "serverCustomAttributes": {"6y0j6naF": {}, "mcUiisBa": {}, "AGWJQxac": {}}, "slotId": "3Iyxf2Xs", "slotUsed": 34, "sourceItemId": "k4aOc6FB", "tags": ["8zdR7YPZ", "43HyJJ1J", "ngejcnQn"], "toSpecificInventory": false, "type": "maCyx4aP"}, {"customAttributes": {"5Lws5g4F": {}, "b8qbvraq": {}, "wqtWOpXh": {}}, "inventoryConfigurationCode": "0hUGUmw0", "inventoryId": "aaQfEPqS", "qty": 54, "serverCustomAttributes": {"GMWC39kn": {}, "rIRJUPnu": {}, "ii9c51xA": {}}, "slotId": "Y0cLgLxK", "slotUsed": 97, "sourceItemId": "XUCuzNiC", "tags": ["CiaWcgb8", "FhUiMIyp", "wtcFASGn"], "toSpecificInventory": true, "type": "dxXPvBMj"}, {"customAttributes": {"G8jMMZjA": {}, "vbl8jc7I": {}, "uU4jgAAn": {}}, "inventoryConfigurationCode": "gSnvJosH", "inventoryId": "Ne47rqn9", "qty": 4, "serverCustomAttributes": {"Bzj1NZ6P": {}, "sxEoHJF2": {}, "A1WX3XCG": {}}, "slotId": "UoZglTXY", "slotUsed": 48, "sourceItemId": "4OQUF1pQ", "tags": ["ZwOn3y9Q", "r1a9gVYe", "ssImp4cI"], "toSpecificInventory": true, "type": "GVPyOMid"}], "removeItems": [{"inventoryId": "eFuvCPiW", "slotId": "viK0xcTb", "sourceItemId": "R4jSY10v"}, {"inventoryId": "IU4WiZSI", "slotId": "33FaSyOc", "sourceItemId": "B0EorAmA"}, {"inventoryId": "nSyeUSqS", "slotId": "eNb09YX3", "sourceItemId": "X5VeHDfu"}], "targetUserId": "DjwROI4q", "updateItems": [{"customAttributes": {"kmzUTIHR": {}, "0ytkVwzh": {}, "BRVAhpIv": {}}, "inventoryId": "jr9dBxBk", "serverCustomAttributes": {"AtlPICNZ": {}, "tNLnnbS7": {}, "2tIbNBcF": {}}, "slotId": "hKOYhy1I", "sourceItemId": "SXa6p1zX", "tags": ["1KmZMBlc", "3TpwxBit", "TAlETsxW"], "type": "VsvySdUj"}, {"customAttributes": {"vIRQyh3C": {}, "gnZ6OSBo": {}, "o2i4I7mT": {}}, "inventoryId": "t9LPYJSa", "serverCustomAttributes": {"qSaPfmkn": {}, "FyXtILtx": {}, "d35rYnYT": {}}, "slotId": "vUFSvJzh", "sourceItemId": "jPzm2gRj", "tags": ["0IOm2AgI", "0DCqOUvE", "rFUsiW2n"], "type": "3M075a8v"}, {"customAttributes": {"ezE0NU3P": {}, "BtCFVegI": {}, "L03ZppAF": {}}, "inventoryId": "2vNPqDVJ", "serverCustomAttributes": {"XaWPhJHo": {}, "IIDZRQ0i": {}, "Hjzgtjoo": {}}, "slotId": "v3atoXOV", "sourceItemId": "WvBVmns7", "tags": ["8x8exYVr", "dsu77kEg", "FqCctJfk"], "type": "c82jeU7T"}]}, {"consumeItems": [{"inventoryId": "nm9svF3g", "qty": 76, "slotId": "v8nw3iBQ", "sourceItemId": "Jur4Hgix"}, {"inventoryId": "K8enReIj", "qty": 52, "slotId": "7ahd0iQT", "sourceItemId": "Txk4gAId"}, {"inventoryId": "YCb3SNAw", "qty": 50, "slotId": "ZyOmAz5R", "sourceItemId": "1KjD8ulp"}], "createItems": [{"customAttributes": {"T4X64FdT": {}, "EKA7wiCk": {}, "rQwW7R0f": {}}, "inventoryConfigurationCode": "ZkjhhqfM", "inventoryId": "GGwjdBPr", "qty": 83, "serverCustomAttributes": {"3rcYrN7a": {}, "IUVkQ2P8": {}, "5rYehrcJ": {}}, "slotId": "RtdC3RZa", "slotUsed": 49, "sourceItemId": "sFFhvU1G", "tags": ["2hB44Ybv", "AHB5MzTN", "3uvtmNjo"], "toSpecificInventory": true, "type": "Two2xeHU"}, {"customAttributes": {"nY59tuTA": {}, "xUkW4JVF": {}, "aZdqp8YT": {}}, "inventoryConfigurationCode": "crxzzCJR", "inventoryId": "vwDNsTUZ", "qty": 13, "serverCustomAttributes": {"ARb11o8O": {}, "ochaWu51": {}, "b6kbcn2D": {}}, "slotId": "pba9Iy3c", "slotUsed": 85, "sourceItemId": "eUmBgnsD", "tags": ["EFnuLIS4", "mfWdAqdO", "o8EJOSkH"], "toSpecificInventory": false, "type": "dSlc8DW0"}, {"customAttributes": {"RrUHVYw9": {}, "1Z39vS5j": {}, "cMriWRjz": {}}, "inventoryConfigurationCode": "3JBAVGft", "inventoryId": "QrfS4dsw", "qty": 85, "serverCustomAttributes": {"YZ1ig1LW": {}, "QA9HqyrT": {}, "LN0ePMbP": {}}, "slotId": "uIf9m5ws", "slotUsed": 54, "sourceItemId": "Zq2cBDge", "tags": ["kpJbJFcm", "RhqG2Ahk", "lNVoh5oD"], "toSpecificInventory": false, "type": "DdD6Q7qg"}], "removeItems": [{"inventoryId": "wY29Ax26", "slotId": "FxuEd39d", "sourceItemId": "oCUsn4mn"}, {"inventoryId": "6wqgf7zt", "slotId": "sCdFefLs", "sourceItemId": "i0fx9diP"}, {"inventoryId": "hoCA36xe", "slotId": "TqrQekMC", "sourceItemId": "LC5IbnWs"}], "targetUserId": "KUlQES1X", "updateItems": [{"customAttributes": {"QNYgEtjg": {}, "fbnME9JS": {}, "kVrb7rhT": {}}, "inventoryId": "v7WUrvor", "serverCustomAttributes": {"K21DDbE2": {}, "I8doe6rG": {}, "qBUEf5fJ": {}}, "slotId": "jtzgmIg9", "sourceItemId": "mUs00TZw", "tags": ["6c4fLAqo", "JjOBD1Ge", "KMvftuMj"], "type": "XcnzaVLV"}, {"customAttributes": {"0lnLan1f": {}, "JfM5KtXq": {}, "h2dtsytu": {}}, "inventoryId": "WlxJ6S4V", "serverCustomAttributes": {"4PX8qqIg": {}, "D3EIeYbE": {}, "ZznHYemp": {}}, "slotId": "DRjOPpbX", "sourceItemId": "v89pDGLl", "tags": ["HzzYaQOo", "9gyOtvl3", "GOM7jynZ"], "type": "4qaSFf5E"}, {"customAttributes": {"ffgS1XWz": {}, "hRDSfzLR": {}, "gAZLO2HE": {}}, "inventoryId": "cCpHfYOM", "serverCustomAttributes": {"NU9SQdHs": {}, "7vFJP2yS": {}, "yTQ5fTXv": {}}, "slotId": "ZM6bohGg", "sourceItemId": "NDVrGUyu", "tags": ["ZzzM1PhA", "7K4gGTc3", "Mwhq8W5t"], "type": "lTKjh8GF"}]}], "requestId": "AqMee2om"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminCreateChainingOperations \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 2 'AdminCreateChainingOperations' test.out

#- 3 AdminListInventories
$CLI_EXE \
    --sn inventory \
    --op AdminListInventories \
    --namespace $AB_NAMESPACE \
    --inventoryConfigurationCode 'IWP7zd3m' \
    --limit '2' \
    --offset '91' \
    --sortBy 'createdAt:desc' \
    --userId 'ezPjALKq' \
    > test.out 2>&1
eval_tap $? 3 'AdminListInventories' test.out

#- 4 AdminCreateInventory
# body param: body
echo '{"inventoryConfigurationCode": "Waq0FWFV", "userId": "67Sd1XG7"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminCreateInventory \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 4 'AdminCreateInventory' test.out

#- 5 AdminGetInventory
$CLI_EXE \
    --sn inventory \
    --op AdminGetInventory \
    --inventoryId '0sN5OZpI' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 5 'AdminGetInventory' test.out

#- 6 AdminUpdateInventory
# body param: body
echo '{"incMaxSlots": 64}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminUpdateInventory \
    --inventoryId 'EngU8eKu' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 6 'AdminUpdateInventory' test.out

#- 7 DeleteInventory
# body param: body
echo '{"message": "8XI2xxgc"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op DeleteInventory \
    --inventoryId 'MIHyabig' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 7 'DeleteInventory' test.out

#- 8 AdminListItems
$CLI_EXE \
    --sn inventory \
    --op AdminListItems \
    --inventoryId 'cnF4AmzZ' \
    --namespace $AB_NAMESPACE \
    --limit '33' \
    --offset '73' \
    --qtyGte '94' \
    --sortBy 'createdAt:desc' \
    --sourceItemId '8B9aTx4L' \
    --tags 'bQINek8i' \
    > test.out 2>&1
eval_tap $? 8 'AdminListItems' test.out

#- 9 AdminGetInventoryItem
$CLI_EXE \
    --sn inventory \
    --op AdminGetInventoryItem \
    --inventoryId 'p4r5MGSr' \
    --namespace $AB_NAMESPACE \
    --slotId 'oYkFQfgi' \
    --sourceItemId 'Q8lGj2kE' \
    > test.out 2>&1
eval_tap $? 9 'AdminGetInventoryItem' test.out

#- 10 AdminListInventoryConfigurations
$CLI_EXE \
    --sn inventory \
    --op AdminListInventoryConfigurations \
    --namespace $AB_NAMESPACE \
    --code 'cPTp7WIr' \
    --limit '19' \
    --offset '16' \
    --sortBy 'createdAt:desc' \
    > test.out 2>&1
eval_tap $? 10 'AdminListInventoryConfigurations' test.out

#- 11 AdminCreateInventoryConfiguration
# body param: body
echo '{"code": "6xayy4Su", "description": "21Ppl6K1", "initialMaxSlots": 59, "maxInstancesPerUser": 26, "maxUpgradeSlots": 92, "name": "vTqJXBHY"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminCreateInventoryConfiguration \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 11 'AdminCreateInventoryConfiguration' test.out

#- 12 AdminGetInventoryConfiguration
$CLI_EXE \
    --sn inventory \
    --op AdminGetInventoryConfiguration \
    --inventoryConfigurationId '2g8vDx9d' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 12 'AdminGetInventoryConfiguration' test.out

#- 13 AdminUpdateInventoryConfiguration
# body param: body
echo '{"code": "dSl0nTD7", "description": "JZ5RdX2L", "initialMaxSlots": 98, "maxInstancesPerUser": 5, "maxUpgradeSlots": 85, "name": "KObdcUvc"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminUpdateInventoryConfiguration \
    --inventoryConfigurationId 'ftcYLrIL' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 13 'AdminUpdateInventoryConfiguration' test.out

#- 14 AdminDeleteInventoryConfiguration
$CLI_EXE \
    --sn inventory \
    --op AdminDeleteInventoryConfiguration \
    --inventoryConfigurationId 'fUt58TUV' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 14 'AdminDeleteInventoryConfiguration' test.out

#- 15 AdminListItemTypes
$CLI_EXE \
    --sn inventory \
    --op AdminListItemTypes \
    --namespace $AB_NAMESPACE \
    --limit '33' \
    --offset '85' \
    --sortBy 'name:desc' \
    > test.out 2>&1
eval_tap $? 15 'AdminListItemTypes' test.out

#- 16 AdminCreateItemType
# body param: body
echo '{"name": "q6Ek2Vci"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminCreateItemType \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 16 'AdminCreateItemType' test.out

#- 17 AdminDeleteItemType
$CLI_EXE \
    --sn inventory \
    --op AdminDeleteItemType \
    --itemTypeName 'AYCh9hYf' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 17 'AdminDeleteItemType' test.out

#- 18 AdminListTags
$CLI_EXE \
    --sn inventory \
    --op AdminListTags \
    --namespace $AB_NAMESPACE \
    --limit '28' \
    --offset '50' \
    --owner '5AgiyKNb' \
    --sortBy 'createdAt' \
    > test.out 2>&1
eval_tap $? 18 'AdminListTags' test.out

#- 19 AdminCreateTag
# body param: body
echo '{"name": "6HfFV1Qh", "owner": "SERVER"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminCreateTag \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 19 'AdminCreateTag' test.out

#- 20 AdminDeleteTag
$CLI_EXE \
    --sn inventory \
    --op AdminDeleteTag \
    --namespace $AB_NAMESPACE \
    --tagName 'aUUA7Uhk' \
    > test.out 2>&1
eval_tap $? 20 'AdminDeleteTag' test.out

#- 21 AdminConsumeUserItem
# body param: body
echo '{"qty": 100, "slotId": "99aQZmnA", "sourceItemId": "Krr9FBhx"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminConsumeUserItem \
    --inventoryId 'EUyevLKs' \
    --namespace $AB_NAMESPACE \
    --userId 'VbgIqK1W' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 21 'AdminConsumeUserItem' test.out

#- 22 AdminBulkUpdateMyItems
# body param: body
echo '[{"customAttributes": {"4AuQtdqp": {}, "AZJl91Al": {}, "2d0UEVqz": {}}, "serverCustomAttributes": {"GByMUsTX": {}, "9j22zdsS": {}, "hDUM8SEk": {}}, "slotId": "vE9bcHWC", "sourceItemId": "UGQ4xHgT", "tags": ["lhHtZsHe", "nji2473P", "c8fQIBQ4"], "type": "qYMErVnE"}, {"customAttributes": {"iBml39db": {}, "X5FPqJpn": {}, "kvzEVJKn": {}}, "serverCustomAttributes": {"8iROGu4h": {}, "pbhcjZQj": {}, "mx3htHi4": {}}, "slotId": "PRYdB9jY", "sourceItemId": "CvXQIRnu", "tags": ["osCK6tUg", "Nmnq2kNh", "IhEuPkOO"], "type": "KODHu5SC"}, {"customAttributes": {"nzsMmzn2": {}, "XY37d3Qz": {}, "kZAOk57t": {}}, "serverCustomAttributes": {"WoRfDFKH": {}, "72e0TVf8": {}, "W9WyG3ry": {}}, "slotId": "pDlg0KKv", "sourceItemId": "pLSuipan", "tags": ["o7y7QKSc", "e1K7tiQ8", "5B29hzdj"], "type": "ScliqCtP"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminBulkUpdateMyItems \
    --inventoryId 'ju9IePqr' \
    --namespace $AB_NAMESPACE \
    --userId 'auVbHZ8V' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 22 'AdminBulkUpdateMyItems' test.out

#- 23 AdminSaveItemToInventory
# body param: body
echo '{"customAttributes": {"ETUhJ22j": {}, "rN7J1PGn": {}, "xXDw0dvc": {}}, "qty": 20, "serverCustomAttributes": {"474SEIx3": {}, "pw1mRAtX": {}, "Fc8ys1kV": {}}, "slotId": "0lZaOxeo", "slotUsed": 51, "sourceItemId": "hzXdFWAf", "tags": ["HaFz7s52", "GWGiAho6", "rFtiXa5I"], "type": "Deu35UeC"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminSaveItemToInventory \
    --inventoryId 'qgTNzOtk' \
    --namespace $AB_NAMESPACE \
    --userId 'QT4ZEMmL' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 23 'AdminSaveItemToInventory' test.out

#- 24 AdminBulkRemoveItems
# body param: body
echo '[{"slotId": "ZY3rZcSD", "sourceItemId": "DXzS6Zvx"}, {"slotId": "qNTnC0x8", "sourceItemId": "q1GqrrO6"}, {"slotId": "i9HNPOLG", "sourceItemId": "ouWsiYN5"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminBulkRemoveItems \
    --inventoryId 'EiorKOeE' \
    --namespace $AB_NAMESPACE \
    --userId 'pdprEpsN' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 24 'AdminBulkRemoveItems' test.out

#- 25 AdminSaveItem
# body param: body
echo '{"customAttributes": {"i8oFNEKl": {}, "nPP7hr86": {}, "1gOKs0Dj": {}}, "inventoryConfigurationCode": "9M926wod", "qty": 52, "serverCustomAttributes": {"xHtc3xAu": {}, "a8AdMGkO": {}, "ai2B3W15": {}}, "slotId": "7KgJJnaA", "slotUsed": 94, "sourceItemId": "PGWchxsH", "tags": ["LsiM1XVH", "f0RAMDdD", "NC2CV2Fg"], "type": "haUyDvzy"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminSaveItem \
    --namespace $AB_NAMESPACE \
    --userId 'lb3PFDVH' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 25 'AdminSaveItem' test.out

#- 26 PublicListInventoryConfigurations
$CLI_EXE \
    --sn inventory \
    --op PublicListInventoryConfigurations \
    --namespace $AB_NAMESPACE \
    --code 'WqK9FCx8' \
    --limit '38' \
    --offset '77' \
    --sortBy 'updatedAt:asc' \
    > test.out 2>&1
eval_tap $? 26 'PublicListInventoryConfigurations' test.out

#- 27 PublicListItemTypes
$CLI_EXE \
    --sn inventory \
    --op PublicListItemTypes \
    --namespace $AB_NAMESPACE \
    --limit '13' \
    --offset '13' \
    --sortBy 'name:asc' \
    > test.out 2>&1
eval_tap $? 27 'PublicListItemTypes' test.out

#- 28 PublicListTags
$CLI_EXE \
    --sn inventory \
    --op PublicListTags \
    --namespace $AB_NAMESPACE \
    --limit '22' \
    --offset '55' \
    --sortBy 'name' \
    > test.out 2>&1
eval_tap $? 28 'PublicListTags' test.out

#- 29 PublicListInventories
$CLI_EXE \
    --sn inventory \
    --op PublicListInventories \
    --namespace $AB_NAMESPACE \
    --inventoryConfigurationCode 'oBcZmpcx' \
    --limit '55' \
    --offset '55' \
    --sortBy 'createdAt' \
    > test.out 2>&1
eval_tap $? 29 'PublicListInventories' test.out

#- 30 PublicConsumeMyItem
# body param: body
echo '{"qty": 37, "slotId": "tdlNanyW", "sourceItemId": "VWXOhgKa"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op PublicConsumeMyItem \
    --inventoryId 'SZ1dcSvO' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 30 'PublicConsumeMyItem' test.out

#- 31 PublicListItems
$CLI_EXE \
    --sn inventory \
    --op PublicListItems \
    --inventoryId 'viXFke2A' \
    --namespace $AB_NAMESPACE \
    --limit '27' \
    --offset '79' \
    --qtyGte '68' \
    --sortBy 'updatedAt' \
    --sourceItemId 'bl24EQ6P' \
    --tags 'it6oK711' \
    > test.out 2>&1
eval_tap $? 31 'PublicListItems' test.out

#- 32 PublicBulkUpdateMyItems
# body param: body
echo '[{"customAttributes": {"rSSpDzOv": {}, "wQwhkHYE": {}, "aAix6PMU": {}}, "slotId": "FDeLjVGx", "sourceItemId": "TCmQ4WnA", "tags": ["OgCB9qRR", "uwiMyQNS", "K6kAviRy"]}, {"customAttributes": {"kD5Zsrxx": {}, "ddWJgEIV": {}, "ZVh0m4G8": {}}, "slotId": "TrLzcKTo", "sourceItemId": "AKpYVDaU", "tags": ["QhR3oxxO", "7Ms2qlTI", "MTiYkomW"]}, {"customAttributes": {"Yyxpvls0": {}, "dwaxoDPa": {}, "ZdCt6lNA": {}}, "slotId": "dDK8I8xg", "sourceItemId": "tf6sMaxC", "tags": ["p8NFn3Rj", "HnwtOIz4", "3Av0tOoI"]}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op PublicBulkUpdateMyItems \
    --inventoryId '8DBNgHCN' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 32 'PublicBulkUpdateMyItems' test.out

#- 33 PublicBulkRemoveMyItems
# body param: body
echo '[{"slotId": "L1BTkVTj", "sourceItemId": "r1rSnbIK"}, {"slotId": "kQj9Ftni", "sourceItemId": "cwE3K5ox"}, {"slotId": "emjHykbC", "sourceItemId": "s3GzoEWp"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op PublicBulkRemoveMyItems \
    --inventoryId 'rKe3qjAE' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 33 'PublicBulkRemoveMyItems' test.out

#- 34 PublicMoveMyItems
# body param: body
echo '{"items": [{"qty": 51, "slotId": "bzjNzgc7", "sourceItemId": "cTi2FHaq"}, {"qty": 4, "slotId": "Lx78PFVM", "sourceItemId": "MUtiqdjG"}, {"qty": 50, "slotId": "jBKY5FHL", "sourceItemId": "A3OaK3il"}], "srcInventoryId": "zTCQTIRh"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op PublicMoveMyItems \
    --inventoryId 'oqiNm6Wt' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 34 'PublicMoveMyItems' test.out

#- 35 PublicGetItem
$CLI_EXE \
    --sn inventory \
    --op PublicGetItem \
    --inventoryId 'HuRD0qXb' \
    --namespace $AB_NAMESPACE \
    --slotId 'owP9tyfq' \
    --sourceItemId 'gD4xCvU4' \
    > test.out 2>&1
eval_tap $? 35 'PublicGetItem' test.out


# remove artifacts
rm -f "$CLI_TOKEN_FILE"
rm -f "$TEMP_JSON_INPUT"
rm -f "$TEMP_FILE_UPLOAD"

exit $EXIT_CODE