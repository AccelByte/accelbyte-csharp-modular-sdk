#!/usr/bin/env bash

# Copyright (c) 2021 AccelByte Inc. All Rights Reserved.
# This is licensed software from AccelByte Inc, for limitations
# and restrictions contact your company contract manager.

# This code is generated by tool. DO NOT EDIT.

# Meta:
# - random seed: 
# - template file: 

# Instructions:
# - Run the Justice SDK Mock Server first before running this script.

export AB_BASE_URL="http://127.0.0.1:8080"
export AB_CLIENT_ID="admin"
export AB_CLIENT_SECRET="admin"
export AB_NAMESPACE="test"
export AB_APP_NAME="UnitTest"

EXIT_CODE=0

eval_tap() {
  if [ $1 -eq 0 ]; then
    echo "ok $2 - $3"
  else
    EXIT_CODE=1
    echo "not ok $2 - $3"
    sed 's/^/# /g' $4
  fi
  rm -f $4
}

CLI_EXE="AccelByte.Sdk.Sample.Cli"
CLI_TOKEN_FILE="$(dirname "$(which $CLI_EXE)")/token.json"
TEMP_JSON_INPUT="input_json.json"
TEMP_FILE_UPLOAD="file_upload.bin"

echo "TAP version 13"
echo "1..41"

#- 1 Login
$CLI_EXE --op login --lt user --user user --pass user > test.out 2>&1
eval_tap $? 1 'Login' test.out

if [ $EXIT_CODE -ne 0 ]; then
  echo "Bail out! Login failed."
  exit $EXIT_CODE
fi

# echo "foo" > "$CLI_TOKEN_FILE"

#- 2 AdminCreateChainingOperations
# body param: body
echo '{"message": "nG4WomRY", "operations": [{"consumeItems": [{"inventoryId": "cqvZffbt", "qty": 47, "slotId": "CKriAubG", "sourceItemId": "QeKx0IC0"}, {"inventoryId": "ank6Mysp", "qty": 20, "slotId": "xsrMwBzZ", "sourceItemId": "94ePCCyL"}, {"inventoryId": "TZmyGYn7", "qty": 5, "slotId": "R7EFPBRS", "sourceItemId": "XU2ps26w"}], "createItems": [{"customAttributes": {"vYSZ6uTF": {}, "ptQ3Nj45": {}, "GNIZnLrD": {}}, "inventoryConfigurationCode": "i9Xm7onU", "inventoryId": "liuW7xil", "qty": 97, "serverCustomAttributes": {"5wC3YTnJ": {}, "lieOCw6E": {}, "wNZuS25q": {}}, "slotId": "lniBWgGA", "slotUsed": 98, "sourceItemId": "XsS4GtkC", "tags": ["ci11aZAy", "lnXdrFTK", "wZsJ9ROY"], "toSpecificInventory": true, "type": "bJpMtoOB"}, {"customAttributes": {"oFJKARVk": {}, "A3mHIbBC": {}, "ibH4hSzh": {}}, "inventoryConfigurationCode": "L2LF6bYP", "inventoryId": "OyIWReI8", "qty": 94, "serverCustomAttributes": {"tU7aF3Nj": {}, "YQdA3z8B": {}, "F39TJnJv": {}}, "slotId": "z4TbomQs", "slotUsed": 20, "sourceItemId": "slXho3a5", "tags": ["cMysKx0l", "cKSXGLyO", "HyCth6P5"], "toSpecificInventory": false, "type": "DOiV1x4g"}, {"customAttributes": {"vX3qaH1y": {}, "dM0z0IGc": {}, "EYbukW4U": {}}, "inventoryConfigurationCode": "IC0ixD8v", "inventoryId": "WprVROTz", "qty": 97, "serverCustomAttributes": {"3nTzE9L9": {}, "oNTJExK2": {}, "8BuqleUB": {}}, "slotId": "j4sfBsUY", "slotUsed": 20, "sourceItemId": "Fb7kIMSO", "tags": ["etG54b7q", "t7o2ey99", "3nliVY8P"], "toSpecificInventory": false, "type": "DHXL3MW1"}], "removeItems": [{"inventoryId": "UvF453DC", "slotId": "qb5efoKn", "sourceItemId": "dVokK2ks"}, {"inventoryId": "wJYJyyYq", "slotId": "XgIUtlxI", "sourceItemId": "2CuSWWcA"}, {"inventoryId": "R84r9MFC", "slotId": "3j5SMkNM", "sourceItemId": "SOBWHFAv"}], "targetUserId": "RyRbNJR5", "updateItems": [{"customAttributes": {"KjnbCUyq": {}, "uxaT3ulq": {}, "F6qkpmfC": {}}, "inventoryId": "9AHhUG7h", "serverCustomAttributes": {"ZHnCa7aO": {}, "hhrTMLyb": {}, "dxKiS8d1": {}}, "slotId": "eK2V81Yp", "sourceItemId": "Nsf1UuAE", "tags": ["DuM8S3IA", "281msUGF", "TCGCFhAl"], "type": "8YdSWbmL"}, {"customAttributes": {"RczkSD22": {}, "QrrXt5mM": {}, "HILBNbFM": {}}, "inventoryId": "Eh2rowVy", "serverCustomAttributes": {"f9R5LVbd": {}, "Pl1LeMaj": {}, "VrLS7vP0": {}}, "slotId": "k0lReqU3", "sourceItemId": "PTH6AKsb", "tags": ["WA3GI78P", "najMuYRg", "Quwekmos"], "type": "gUK2DwAm"}, {"customAttributes": {"wuEvLBL5": {}, "40OwbK52": {}, "yRsfuEK1": {}}, "inventoryId": "LlI9RvGl", "serverCustomAttributes": {"9V0j2gQF": {}, "Qi0rymnj": {}, "zK2tRZ92": {}}, "slotId": "D8YnQm0Y", "sourceItemId": "suZXUG36", "tags": ["nOEyxxrf", "Pmwmhrjb", "iflXErB1"], "type": "1sTbA1Ms"}]}, {"consumeItems": [{"inventoryId": "u5Ay3z4U", "qty": 89, "slotId": "OsQxUDAd", "sourceItemId": "5pslXNJy"}, {"inventoryId": "0Brzhfg0", "qty": 48, "slotId": "mho1GjIp", "sourceItemId": "oQQU7O1l"}, {"inventoryId": "FanopVrP", "qty": 7, "slotId": "Fkd9ehKm", "sourceItemId": "MSgnQmvE"}], "createItems": [{"customAttributes": {"DxyySqs2": {}, "7DgFQkMv": {}, "gJ8Oy4gO": {}}, "inventoryConfigurationCode": "OMURzT7H", "inventoryId": "gbEous1P", "qty": 67, "serverCustomAttributes": {"OCLi2QoN": {}, "nbYbZyBI": {}, "BvWBBhHw": {}}, "slotId": "uVSBZccY", "slotUsed": 95, "sourceItemId": "2tEZHgVa", "tags": ["qgfLf1z6", "7eDDUbAE", "DD7UCQrM"], "toSpecificInventory": true, "type": "MevKzBCb"}, {"customAttributes": {"2iAm4kjE": {}, "EkNTAtoe": {}, "0OxVFxER": {}}, "inventoryConfigurationCode": "M4teErOD", "inventoryId": "0KnoBuL7", "qty": 85, "serverCustomAttributes": {"dy6HdWUG": {}, "5uHjbYxr": {}, "q53BeJny": {}}, "slotId": "S3CpN6AX", "slotUsed": 63, "sourceItemId": "bBaF0nON", "tags": ["fD93NEu4", "NvEPH53D", "5HMx4jYi"], "toSpecificInventory": true, "type": "EjoJuALX"}, {"customAttributes": {"9zqsxq9x": {}, "BdaJIDqe": {}, "8REk9bv7": {}}, "inventoryConfigurationCode": "bCCiRpeu", "inventoryId": "zbgQgt7q", "qty": 59, "serverCustomAttributes": {"jSg6p9sH": {}, "acQc6qxT": {}, "arjro9Bk": {}}, "slotId": "8PEY7w4J", "slotUsed": 53, "sourceItemId": "Dxmjt6nj", "tags": ["KyC4gNuN", "C7hvaooF", "BUVKTJyr"], "toSpecificInventory": true, "type": "HIAsebvh"}], "removeItems": [{"inventoryId": "bbzUlCJ0", "slotId": "7vpQOWdV", "sourceItemId": "ZmVwGncp"}, {"inventoryId": "AoC6tSbY", "slotId": "iZVobME7", "sourceItemId": "eY78o8ag"}, {"inventoryId": "grRf49kE", "slotId": "nKg5bMOj", "sourceItemId": "7da9Y8yz"}], "targetUserId": "nH6CZqYH", "updateItems": [{"customAttributes": {"yz2J1YEp": {}, "D3qNSV0u": {}, "7vL9mcd6": {}}, "inventoryId": "rEaiH8G7", "serverCustomAttributes": {"0DvXB17D": {}, "yxvt6gKn": {}, "nhIkrSx6": {}}, "slotId": "OSNr4glE", "sourceItemId": "6FiAIUxf", "tags": ["XE84vcrz", "R1paTJAG", "RLWegnGH"], "type": "AsmS8KG2"}, {"customAttributes": {"0DJ9WNZb": {}, "PMbvSGKI": {}, "vpgZB1XA": {}}, "inventoryId": "pw7KePko", "serverCustomAttributes": {"sDzh4ecB": {}, "8MMBc3KO": {}, "U2dm8a8R": {}}, "slotId": "7WyfLKx5", "sourceItemId": "ZiLkyjK7", "tags": ["3pEIvsA4", "4aQQ2594", "D06I7oYp"], "type": "2xxWb7KV"}, {"customAttributes": {"W2DkUMug": {}, "fr7wPz7j": {}, "TuISPqvr": {}}, "inventoryId": "ZfF02EUr", "serverCustomAttributes": {"aaDlItHp": {}, "vDpSCS1S": {}, "GfJNKp6o": {}}, "slotId": "ya0JECZd", "sourceItemId": "avWHlpJH", "tags": ["SDuVTEry", "lihAhnya", "ucXyoQFT"], "type": "DIgbc3Qd"}]}, {"consumeItems": [{"inventoryId": "fhgh0ybU", "qty": 20, "slotId": "hCTOT6Gb", "sourceItemId": "YxgSx89p"}, {"inventoryId": "el2AA9go", "qty": 29, "slotId": "BGXZDLkz", "sourceItemId": "3WamMYMs"}, {"inventoryId": "ZwD6Ixzl", "qty": 3, "slotId": "yQP4TVJK", "sourceItemId": "gZHvwknj"}], "createItems": [{"customAttributes": {"My9GACBP": {}, "Rxm151lp": {}, "dOKi86fV": {}}, "inventoryConfigurationCode": "enuYiJxR", "inventoryId": "3bZ2UH0l", "qty": 81, "serverCustomAttributes": {"yHAUgSDG": {}, "JE3G5HFB": {}, "05fRyJ2q": {}}, "slotId": "T72JqXKY", "slotUsed": 59, "sourceItemId": "y33JF5yC", "tags": ["oMi3i7gu", "8ttm6z37", "PItKsqmX"], "toSpecificInventory": true, "type": "10NKQe4v"}, {"customAttributes": {"Qk7tlxZG": {}, "FQlErKLZ": {}, "Dnp3MIDN": {}}, "inventoryConfigurationCode": "js4SQJY2", "inventoryId": "zVmWeG54", "qty": 6, "serverCustomAttributes": {"zqiIR7Zq": {}, "dMDu8nZU": {}, "T0Xj1Xch": {}}, "slotId": "IufasCID", "slotUsed": 8, "sourceItemId": "vnrxG1ft", "tags": ["ekg7fYuK", "Olm04by4", "hZM7penB"], "toSpecificInventory": false, "type": "4moo0XgQ"}, {"customAttributes": {"5z5hVV7t": {}, "pSYI8ooG": {}, "5SgNPsjD": {}}, "inventoryConfigurationCode": "AGsg7IQb", "inventoryId": "NVoUnsrJ", "qty": 23, "serverCustomAttributes": {"5UEGICpd": {}, "WmNHMREZ": {}, "kKs2MeWs": {}}, "slotId": "63Emjq8H", "slotUsed": 61, "sourceItemId": "grtyz7YL", "tags": ["qMHG7u5A", "KbNJOTuk", "6BIZBs31"], "toSpecificInventory": true, "type": "ZMXmWetC"}], "removeItems": [{"inventoryId": "naQn26PU", "slotId": "SYxX8iay", "sourceItemId": "mTijbQLJ"}, {"inventoryId": "bMC9ixCd", "slotId": "XRmm86vr", "sourceItemId": "GN055MoH"}, {"inventoryId": "Ir4bYR9Z", "slotId": "W6fSI2DH", "sourceItemId": "nvA2GmMc"}], "targetUserId": "zE3wXyKo", "updateItems": [{"customAttributes": {"SC5SXXlC": {}, "hdvGULBW": {}, "POdbMdeO": {}}, "inventoryId": "Xtw2jYgP", "serverCustomAttributes": {"Kjq0vI0n": {}, "wIahox6s": {}, "ftOFgvgC": {}}, "slotId": "wU8LSMQB", "sourceItemId": "es1lETjd", "tags": ["tz5Wscn9", "cIwGdwPf", "vnfrEVFm"], "type": "8nYxaKE2"}, {"customAttributes": {"IxSiq0e6": {}, "FbbgPmf1": {}, "iU0Ukotm": {}}, "inventoryId": "FYbJ1h9A", "serverCustomAttributes": {"MQBS6LRn": {}, "j0NnyuX1": {}, "9QvqyMAU": {}}, "slotId": "DY9cjzRs", "sourceItemId": "GKavcLKt", "tags": ["sU7b7BJ1", "D0Isvn7w", "5uhnOX52"], "type": "TUuz2N9O"}, {"customAttributes": {"v0nNPwRJ": {}, "zFDbGO9S": {}, "0z3Gr5rI": {}}, "inventoryId": "8A0Ghd5K", "serverCustomAttributes": {"X08vLYFj": {}, "U2IRqbgC": {}, "xtcnBeFL": {}}, "slotId": "RREPeXyj", "sourceItemId": "HJT6SDsd", "tags": ["n4j0o8do", "e4kXn1NA", "e0VtrpoK"], "type": "0wHGMV7m"}]}], "requestId": "PTSxiNlW"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminCreateChainingOperations \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 2 'AdminCreateChainingOperations' test.out

#- 3 AdminListIntegrationConfigurations
$CLI_EXE \
    --sn inventory \
    --op AdminListIntegrationConfigurations \
    --namespace $AB_NAMESPACE \
    --limit '68' \
    --offset '3' \
    --sortBy 'createdAt' \
    > test.out 2>&1
eval_tap $? 3 'AdminListIntegrationConfigurations' test.out

#- 4 AdminCreateIntegrationConfiguration
# body param: body
echo '{"mapItemType": ["Fd6kb2Wl", "eVRIcedC", "fPkRpTVg"], "serviceName": "BNykMZ9T", "targetInventoryCode": "qxlMdlGB"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminCreateIntegrationConfiguration \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 4 'AdminCreateIntegrationConfiguration' test.out

#- 5 AdminUpdateIntegrationConfiguration
# body param: body
echo '{"mapItemType": ["50uWOVhc", "Img144QS", "Ndt6ULq9"], "serviceName": "YhBP9nsA", "targetInventoryCode": "3nHcMMIC"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminUpdateIntegrationConfiguration \
    --integrationConfigurationId 'Lvcb8exn' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 5 'AdminUpdateIntegrationConfiguration' test.out

#- 6 AdminUpdateStatusIntegrationConfiguration
# body param: body
echo '{"status": "TIED"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminUpdateStatusIntegrationConfiguration \
    --integrationConfigurationId 'aqLDW9rL' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 6 'AdminUpdateStatusIntegrationConfiguration' test.out

#- 7 AdminListInventories
$CLI_EXE \
    --sn inventory \
    --op AdminListInventories \
    --namespace $AB_NAMESPACE \
    --inventoryConfigurationCode 'nHC7cItz' \
    --limit '90' \
    --offset '18' \
    --sortBy 'updatedAt' \
    --userId '23WCRgnr' \
    > test.out 2>&1
eval_tap $? 7 'AdminListInventories' test.out

#- 8 AdminCreateInventory
# body param: body
echo '{"inventoryConfigurationCode": "Qm2JdUJc", "userId": "thhgzqak"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminCreateInventory \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 8 'AdminCreateInventory' test.out

#- 9 AdminGetInventory
$CLI_EXE \
    --sn inventory \
    --op AdminGetInventory \
    --inventoryId 'hms25XPc' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 9 'AdminGetInventory' test.out

#- 10 AdminUpdateInventory
# body param: body
echo '{"incMaxSlots": 69}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminUpdateInventory \
    --inventoryId 'd4Bc1upM' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 10 'AdminUpdateInventory' test.out

#- 11 DeleteInventory
# body param: body
echo '{"message": "DvQTjtL2"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op DeleteInventory \
    --inventoryId 'RegH4BYi' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 11 'DeleteInventory' test.out

#- 12 AdminListItems
$CLI_EXE \
    --sn inventory \
    --op AdminListItems \
    --inventoryId 'YH9juGzw' \
    --namespace $AB_NAMESPACE \
    --limit '19' \
    --offset '97' \
    --qtyGte '91' \
    --sortBy 'createdAt' \
    --sourceItemId '8y9ONyTF' \
    --tags 'mjjLgKvt' \
    > test.out 2>&1
eval_tap $? 12 'AdminListItems' test.out

#- 13 AdminGetInventoryItem
$CLI_EXE \
    --sn inventory \
    --op AdminGetInventoryItem \
    --inventoryId 'pWnwvBfR' \
    --namespace $AB_NAMESPACE \
    --slotId 'eZFpxzoO' \
    --sourceItemId 'vlzLdGHV' \
    > test.out 2>&1
eval_tap $? 13 'AdminGetInventoryItem' test.out

#- 14 AdminListInventoryConfigurations
$CLI_EXE \
    --sn inventory \
    --op AdminListInventoryConfigurations \
    --namespace $AB_NAMESPACE \
    --code 'KDEQnF6Q' \
    --limit '43' \
    --offset '10' \
    --sortBy 'createdAt:desc' \
    > test.out 2>&1
eval_tap $? 14 'AdminListInventoryConfigurations' test.out

#- 15 AdminCreateInventoryConfiguration
# body param: body
echo '{"code": "uRixA1Y8", "description": "vqow7GuX", "initialMaxSlots": 90, "maxInstancesPerUser": 68, "maxUpgradeSlots": 92, "name": "CT25cfgJ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminCreateInventoryConfiguration \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 15 'AdminCreateInventoryConfiguration' test.out

#- 16 AdminGetInventoryConfiguration
$CLI_EXE \
    --sn inventory \
    --op AdminGetInventoryConfiguration \
    --inventoryConfigurationId 'dMbLFY2k' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 16 'AdminGetInventoryConfiguration' test.out

#- 17 AdminUpdateInventoryConfiguration
# body param: body
echo '{"code": "7IVvUQ7A", "description": "3iB97INH", "initialMaxSlots": 72, "maxInstancesPerUser": 76, "maxUpgradeSlots": 91, "name": "j7sbY2wm"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminUpdateInventoryConfiguration \
    --inventoryConfigurationId 'pBg9lIab' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 17 'AdminUpdateInventoryConfiguration' test.out

#- 18 AdminDeleteInventoryConfiguration
$CLI_EXE \
    --sn inventory \
    --op AdminDeleteInventoryConfiguration \
    --inventoryConfigurationId 'EHGz753f' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 18 'AdminDeleteInventoryConfiguration' test.out

#- 19 AdminListItemTypes
$CLI_EXE \
    --sn inventory \
    --op AdminListItemTypes \
    --namespace $AB_NAMESPACE \
    --limit '34' \
    --offset '52' \
    --sortBy 'name:asc' \
    > test.out 2>&1
eval_tap $? 19 'AdminListItemTypes' test.out

#- 20 AdminCreateItemType
# body param: body
echo '{"name": "zTIXpJWd"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminCreateItemType \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 20 'AdminCreateItemType' test.out

#- 21 AdminDeleteItemType
$CLI_EXE \
    --sn inventory \
    --op AdminDeleteItemType \
    --itemTypeName 'LT9tyKlV' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 21 'AdminDeleteItemType' test.out

#- 22 AdminListTags
$CLI_EXE \
    --sn inventory \
    --op AdminListTags \
    --namespace $AB_NAMESPACE \
    --limit '2' \
    --offset '69' \
    --owner 'WB6vIK8e' \
    --sortBy 'createdAt:desc' \
    > test.out 2>&1
eval_tap $? 22 'AdminListTags' test.out

#- 23 AdminCreateTag
# body param: body
echo '{"name": "bwHvalTy", "owner": "CLIENT"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminCreateTag \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 23 'AdminCreateTag' test.out

#- 24 AdminDeleteTag
$CLI_EXE \
    --sn inventory \
    --op AdminDeleteTag \
    --namespace $AB_NAMESPACE \
    --tagName 'L2OUME3d' \
    > test.out 2>&1
eval_tap $? 24 'AdminDeleteTag' test.out

#- 25 AdminConsumeUserItem
# body param: body
echo '{"qty": 71, "slotId": "Lrnmuzg6", "sourceItemId": "dJ71FAq2"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminConsumeUserItem \
    --inventoryId 'UaB2Inw9' \
    --namespace $AB_NAMESPACE \
    --userId 'S3QxQI5Z' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 25 'AdminConsumeUserItem' test.out

#- 26 AdminBulkUpdateMyItems
# body param: body
echo '[{"customAttributes": {"2uqcOd3v": {}, "rloVJNAM": {}, "FaAtnv7k": {}}, "serverCustomAttributes": {"6306dGZy": {}, "uKo723qZ": {}, "jINyFX98": {}}, "slotId": "KCfSZxLM", "sourceItemId": "zygTPvoV", "tags": ["PgahBND0", "LTmXy8G7", "aXl5y9zN"], "type": "4TlNCr4j"}, {"customAttributes": {"w4VIL05h": {}, "uvLN7NgB": {}, "2q3OdU69": {}}, "serverCustomAttributes": {"g87DXvpw": {}, "svgMMCFu": {}, "caoxVK9l": {}}, "slotId": "b9yi38z9", "sourceItemId": "rVmPHjB2", "tags": ["uP6Laz7u", "mhcgn3m4", "d9x9v3Z6"], "type": "XnG0ts61"}, {"customAttributes": {"Bkd9J6JZ": {}, "EmEM2NzF": {}, "iJHmDBrK": {}}, "serverCustomAttributes": {"Qi0egWoU": {}, "TJ4qUK1v": {}, "WoNep8yb": {}}, "slotId": "YWNkcfb0", "sourceItemId": "NRglCCDc", "tags": ["Gs1Sp5V0", "v9emuuby", "FDRU1shK"], "type": "YgvMNNkq"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminBulkUpdateMyItems \
    --inventoryId 'kBA3JFwU' \
    --namespace $AB_NAMESPACE \
    --userId 'g19Iuvpa' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 26 'AdminBulkUpdateMyItems' test.out

#- 27 AdminSaveItemToInventory
# body param: body
echo '{"customAttributes": {"jnlBR1FI": {}, "3tWc3VdA": {}, "EdBwW3Sm": {}}, "qty": 75, "serverCustomAttributes": {"TI5omYIT": {}, "ZtHAO6k3": {}, "l741j0td": {}}, "slotId": "FforGWBs", "slotUsed": 0, "source": "ECOMMERCE", "sourceItemId": "uvpiKFJp", "tags": ["AzMXra5E", "ol4ce64Y", "8WpRSjN4"], "type": "tKIpNuhk"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminSaveItemToInventory \
    --inventoryId 'RZefzoEq' \
    --namespace $AB_NAMESPACE \
    --userId 'N7EAnvX8' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 27 'AdminSaveItemToInventory' test.out

#- 28 AdminBulkRemoveItems
# body param: body
echo '[{"slotId": "4st5TTa7", "sourceItemId": "jEC71g46"}, {"slotId": "PzcsQ4Oz", "sourceItemId": "MbKHMGXo"}, {"slotId": "JsqeN8wI", "sourceItemId": "0rgLEEam"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminBulkRemoveItems \
    --inventoryId 'hZwnEgsY' \
    --namespace $AB_NAMESPACE \
    --userId 'oHajaMBE' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 28 'AdminBulkRemoveItems' test.out

#- 29 AdminSaveItem
# body param: body
echo '{"customAttributes": {"n0Vq7tkS": {}, "lSfyphEA": {}, "hC1aw1hs": {}}, "inventoryConfigurationCode": "mshRJ6H6", "qty": 55, "serverCustomAttributes": {"kN3C9rPw": {}, "dXIkaxp3": {}, "NxZZkoxg": {}}, "slotId": "CeYZs4GJ", "slotUsed": 15, "source": "ECOMMERCE", "sourceItemId": "kI5Rgrnn", "tags": ["Pvn4TETQ", "D7lMauMU", "JoMUWfWk"], "type": "wlOf1svU"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminSaveItem \
    --namespace $AB_NAMESPACE \
    --userId 'wHjHSTwb' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 29 'AdminSaveItem' test.out

#- 30 AdminSyncUserEntitlements
$CLI_EXE \
    --sn inventory \
    --op AdminSyncUserEntitlements \
    --namespace $AB_NAMESPACE \
    --userId 'LtvRG643' \
    > test.out 2>&1
eval_tap $? 30 'AdminSyncUserEntitlements' test.out

#- 31 AdminPurchasable
# body param: body
echo '{"entitlementType": "SKs3n5Xv", "inventoryConfig": {"slotUsed": 49}, "itemId": "x4CvGGYw", "itemType": "AYJ4xQA8", "items": [{"bundledQty": 26, "entitlementType": "07GmXvMg", "inventoryConfig": {"slotUsed": 59}, "itemId": "kUcrcPsM", "itemType": "3eW3GaWa", "sku": "i0dPPGQI", "useCount": 56}, {"bundledQty": 7, "entitlementType": "I6e1X0y0", "inventoryConfig": {"slotUsed": 45}, "itemId": "60m9cRmN", "itemType": "pytZgh52", "sku": "hobLf1dp", "useCount": 85}, {"bundledQty": 77, "entitlementType": "koYD7tTo", "inventoryConfig": {"slotUsed": 22}, "itemId": "ElICN7rG", "itemType": "Yx8ywejf", "sku": "QaKLWtz4", "useCount": 40}], "quantity": 62, "sku": "SK5DSPju", "useCount": 6}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminPurchasable \
    --namespace $AB_NAMESPACE \
    --userId 'WHItsrD5' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 31 'AdminPurchasable' test.out

#- 32 PublicListInventoryConfigurations
$CLI_EXE \
    --sn inventory \
    --op PublicListInventoryConfigurations \
    --namespace $AB_NAMESPACE \
    --code 'KZyASeIY' \
    --limit '45' \
    --offset '10' \
    --sortBy 'updatedAt:desc' \
    > test.out 2>&1
eval_tap $? 32 'PublicListInventoryConfigurations' test.out

#- 33 PublicListItemTypes
$CLI_EXE \
    --sn inventory \
    --op PublicListItemTypes \
    --namespace $AB_NAMESPACE \
    --limit '31' \
    --offset '87' \
    --sortBy 'createdAt:desc' \
    > test.out 2>&1
eval_tap $? 33 'PublicListItemTypes' test.out

#- 34 PublicListTags
$CLI_EXE \
    --sn inventory \
    --op PublicListTags \
    --namespace $AB_NAMESPACE \
    --limit '36' \
    --offset '89' \
    --sortBy 'name:desc' \
    > test.out 2>&1
eval_tap $? 34 'PublicListTags' test.out

#- 35 PublicListInventories
$CLI_EXE \
    --sn inventory \
    --op PublicListInventories \
    --namespace $AB_NAMESPACE \
    --inventoryConfigurationCode 'wMizYpvK' \
    --limit '77' \
    --offset '92' \
    --sortBy 'createdAt:asc' \
    > test.out 2>&1
eval_tap $? 35 'PublicListInventories' test.out

#- 36 PublicConsumeMyItem
# body param: body
echo '{"qty": 80, "slotId": "uXf0KIZz", "sourceItemId": "OJSx4y8K"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op PublicConsumeMyItem \
    --inventoryId 'SGduMWv6' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 36 'PublicConsumeMyItem' test.out

#- 37 PublicListItems
$CLI_EXE \
    --sn inventory \
    --op PublicListItems \
    --inventoryId '5Suvol7i' \
    --namespace $AB_NAMESPACE \
    --limit '30' \
    --offset '85' \
    --qtyGte '77' \
    --sortBy 'updatedAt:desc' \
    --sourceItemId '9CfpzU7S' \
    --tags '3Yl2HP2I' \
    > test.out 2>&1
eval_tap $? 37 'PublicListItems' test.out

#- 38 PublicBulkUpdateMyItems
# body param: body
echo '[{"customAttributes": {"eozQOzG4": {}, "sZdhiBTp": {}, "FO8q1dow": {}}, "slotId": "Lw58mEP2", "sourceItemId": "Tm3KJOI7", "tags": ["dGiTHIIC", "rHYOQXgY", "rr3TY2B5"]}, {"customAttributes": {"VajyIpPT": {}, "NYFjBxX5": {}, "Ef9KBRC5": {}}, "slotId": "W9xY0lDw", "sourceItemId": "GxqDhIBd", "tags": ["CcoGvr0S", "Bm76Jidb", "1yxBNf3k"]}, {"customAttributes": {"UYsnzTCV": {}, "VIc4RXYT": {}, "BbPCYPUz": {}}, "slotId": "fQxHGWFa", "sourceItemId": "h6gFCLkJ", "tags": ["PK6AsVYS", "YQA9f9ED", "KSkWVO0a"]}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op PublicBulkUpdateMyItems \
    --inventoryId 'O8fH1Vyd' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 38 'PublicBulkUpdateMyItems' test.out

#- 39 PublicBulkRemoveMyItems
# body param: body
echo '[{"slotId": "APhbR3iG", "sourceItemId": "aISs81zr"}, {"slotId": "mx2SOpLW", "sourceItemId": "n3jdpSEh"}, {"slotId": "68Lbqc1w", "sourceItemId": "O9zeasp6"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op PublicBulkRemoveMyItems \
    --inventoryId 'O2jmqDiF' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 39 'PublicBulkRemoveMyItems' test.out

#- 40 PublicMoveMyItems
# body param: body
echo '{"items": [{"qty": 23, "slotId": "E2lTKAUj", "sourceItemId": "xfUBfqvC"}, {"qty": 5, "slotId": "dkdwSAlS", "sourceItemId": "Drjhy93F"}, {"qty": 83, "slotId": "WKWOQpBH", "sourceItemId": "btIfArMj"}], "srcInventoryId": "C07u9TA4"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op PublicMoveMyItems \
    --inventoryId 'saoVmQ8R' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 40 'PublicMoveMyItems' test.out

#- 41 PublicGetItem
$CLI_EXE \
    --sn inventory \
    --op PublicGetItem \
    --inventoryId 'yIRqevb5' \
    --namespace $AB_NAMESPACE \
    --slotId 'sW9ZIDxE' \
    --sourceItemId 'rqVhi4uV' \
    > test.out 2>&1
eval_tap $? 41 'PublicGetItem' test.out


# remove artifacts
rm -f "$CLI_TOKEN_FILE"
rm -f "$TEMP_JSON_INPUT"
rm -f "$TEMP_FILE_UPLOAD"

exit $EXIT_CODE