#!/usr/bin/env bash

# Copyright (c) 2021 AccelByte Inc. All Rights Reserved.
# This is licensed software from AccelByte Inc, for limitations
# and restrictions contact your company contract manager.

# This code is generated by tool. DO NOT EDIT.

# Meta:
# - random seed: 
# - template file: 

# Instructions:
# - Run the Justice SDK Mock Server first before running this script.

export AB_BASE_URL="http://127.0.0.1:8080"
export AB_CLIENT_ID="admin"
export AB_CLIENT_SECRET="admin"
export AB_NAMESPACE="test"
export AB_APP_NAME="UnitTest"

EXIT_CODE=0

eval_tap() {
  if [ $1 -eq 0 ]; then
    echo "ok $2 - $3"
  else
    EXIT_CODE=1
    echo "not ok $2 - $3"
    sed 's/^/# /g' $4
  fi
  rm -f $4
}

CLI_EXE="AccelByte.Sdk.Sample.Cli"
CLI_TOKEN_FILE="$(dirname "$(which $CLI_EXE)")/token.json"
TEMP_JSON_INPUT="input_json.json"
TEMP_FILE_UPLOAD="file_upload.bin"

echo "TAP version 13"
echo "1..44"

#- 1 Login
$CLI_EXE --op login --lt user --user user --pass user > test.out 2>&1
eval_tap $? 1 'Login' test.out

if [ $EXIT_CODE -ne 0 ]; then
  echo "Bail out! Login failed."
  exit $EXIT_CODE
fi

# echo "foo" > "$CLI_TOKEN_FILE"

#- 2 AdminCreateChainingOperations
# body param: body
echo '{"message": "r8FgPxBl", "operations": [{"consumeItems": [{"dateRangeValidation": false, "inventoryId": "P4pRGx7h", "options": ["fd5SCp5Q", "g61G9hgv", "OREq4ZDT"], "qty": 77, "slotId": "xDD140eQ", "sourceItemId": "lnVLirRb"}, {"dateRangeValidation": false, "inventoryId": "H2B5TLX1", "options": ["pwT9B5nI", "A0p4hhss", "Ha0hLGQn"], "qty": 57, "slotId": "9EpsmEDl", "sourceItemId": "hQqikNdj"}, {"dateRangeValidation": false, "inventoryId": "HZboHEqk", "options": ["vSC8o8ht", "NMQYqQYM", "AwSVVGxJ"], "qty": 73, "slotId": "QZFDm0FU", "sourceItemId": "51FGgetR"}], "createItems": [{"customAttributes": {"ZaMytqdL": {}, "sZ1j4L4v": {}, "coeRFSYN": {}}, "inventoryConfigurationCode": "zzbcLygc", "inventoryId": "v5q4FETU", "qty": 85, "serverCustomAttributes": {"bSifxiWw": {}, "7bOZehx7": {}, "rQURsJ7P": {}}, "slotId": "jiFAGMA6", "slotUsed": 5, "source": "ECOMMERCE", "sourceItemId": "wNRzzJAB", "tags": ["AiYcNDZk", "55mR7Scq", "7MjrUTLF"], "toSpecificInventory": true, "type": "lwnjEB7m"}, {"customAttributes": {"BEUmtkuH": {}, "m1iQhgVs": {}, "HWiJAe7E": {}}, "inventoryConfigurationCode": "98hIZQbr", "inventoryId": "FjpyXeun", "qty": 17, "serverCustomAttributes": {"fcnMm5Md": {}, "0k2yNpPX": {}, "effx8sNu": {}}, "slotId": "2R5tpNRe", "slotUsed": 81, "source": "OTHER", "sourceItemId": "c0WUUREp", "tags": ["6LIcWlfX", "oDiGQwyI", "gSN7H3wp"], "toSpecificInventory": false, "type": "b9f50wzk"}, {"customAttributes": {"0OAFS0Go": {}, "UpkvY0J2": {}, "5hGheUd3": {}}, "inventoryConfigurationCode": "SoVGrm88", "inventoryId": "K6woULyP", "qty": 92, "serverCustomAttributes": {"gHJLZoc1": {}, "GSuafzM5": {}, "GeOBwTrb": {}}, "slotId": "eUa5Cntl", "slotUsed": 2, "source": "ECOMMERCE", "sourceItemId": "WUCipSqf", "tags": ["GwGcK3VF", "NUdEguHF", "XZiJoOpc"], "toSpecificInventory": true, "type": "gkA0rQLd"}], "removeItems": [{"inventoryId": "5Qz3Dono", "slotId": "uLhqLl9l", "sourceItemId": "uUf8Qrmc"}, {"inventoryId": "mcUxRGA3", "slotId": "c5gKIFZm", "sourceItemId": "JUPPfKOm"}, {"inventoryId": "qgYXQ0G9", "slotId": "1MHZDs7F", "sourceItemId": "ux5tAmqY"}], "targetUserId": "lzRBqVe0", "updateItems": [{"customAttributes": {"rBkG6sfj": {}, "ii8xEDKo": {}, "XAtnBeoM": {}}, "inventoryId": "4RSRLXSP", "serverCustomAttributes": {"B0g3DdrS": {}, "10NbvU57": {}, "wCtWN2vu": {}}, "slotId": "lPZr6GAJ", "sourceItemId": "E2eG9rD1", "tags": ["9bRxBadM", "0nE81Lx7", "FNsFP5iD"], "type": "pmrWQpBa"}, {"customAttributes": {"nwpuk0Sd": {}, "drwsIACr": {}, "UN3wguEp": {}}, "inventoryId": "bwVYkcSJ", "serverCustomAttributes": {"UTuXiBu0": {}, "LSpgvHz9": {}, "qMJ8WdOT": {}}, "slotId": "UXb2bRJn", "sourceItemId": "QJENHzsp", "tags": ["pyX0ZJPY", "wfxtUIMd", "SfjH43PS"], "type": "GR0n7HlI"}, {"customAttributes": {"ZXnqKiLN": {}, "YWeCS9wV": {}, "kFbq85tL": {}}, "inventoryId": "Ekpk2RFu", "serverCustomAttributes": {"8Z4X6ays": {}, "ZZ3rvTpV": {}, "2sxNMxw9": {}}, "slotId": "GdsqYZws", "sourceItemId": "2pzAPc2d", "tags": ["MSh1rqzK", "Er1PNEms", "XW4ZzfEb"], "type": "atmEzbMp"}]}, {"consumeItems": [{"dateRangeValidation": false, "inventoryId": "Fh2iil5U", "options": ["tNM62Sq3", "HDrPmy4R", "GSiV6pQU"], "qty": 59, "slotId": "Pv9XSjX9", "sourceItemId": "QA82qH7O"}, {"dateRangeValidation": false, "inventoryId": "Zqc1v0fU", "options": ["oz0m5fCE", "tirP99zF", "XUuCFq2G"], "qty": 17, "slotId": "F7KgVJ0q", "sourceItemId": "oUqZ2oNz"}, {"dateRangeValidation": true, "inventoryId": "BWKS0Q8r", "options": ["4w1lJZNV", "yc7wUttB", "0OWLNKIv"], "qty": 89, "slotId": "Xbs6UY4e", "sourceItemId": "L6yUFB6v"}], "createItems": [{"customAttributes": {"vCTT4pSZ": {}, "wqxFQkY0": {}, "BCIgJC2q": {}}, "inventoryConfigurationCode": "ZeMnRXxU", "inventoryId": "83yXaPDJ", "qty": 80, "serverCustomAttributes": {"B8Unz6ft": {}, "ZSNVxXig": {}, "LwHCD5tt": {}}, "slotId": "FpWleACL", "slotUsed": 4, "source": "ECOMMERCE", "sourceItemId": "NwgfI4qj", "tags": ["sEmsmVTy", "bmEENl9z", "tk1vIBVI"], "toSpecificInventory": true, "type": "d4gF8cPd"}, {"customAttributes": {"qaeHGiVy": {}, "Hnx3FhsJ": {}, "UdJErFjI": {}}, "inventoryConfigurationCode": "UsIOeAVl", "inventoryId": "qOHuboUM", "qty": 3, "serverCustomAttributes": {"D7Z1jhbo": {}, "djG174de": {}, "PT0vZaBi": {}}, "slotId": "NvUTkrYt", "slotUsed": 53, "source": "OTHER", "sourceItemId": "bJvIXbtT", "tags": ["nEIYlRnk", "E0LGms5P", "514fKUMG"], "toSpecificInventory": false, "type": "yhjH4E09"}, {"customAttributes": {"j9XCKQLY": {}, "uwX8fpmQ": {}, "szkH12G1": {}}, "inventoryConfigurationCode": "AUXu4I5u", "inventoryId": "OMo2nx61", "qty": 86, "serverCustomAttributes": {"YsbQWCAw": {}, "xDXbSpqb": {}, "DC492cLq": {}}, "slotId": "dWv2HMMd", "slotUsed": 94, "source": "ECOMMERCE", "sourceItemId": "oNpoCuR8", "tags": ["Y1ENPA24", "xw2H4LqX", "yF7nCFSN"], "toSpecificInventory": true, "type": "Xzvn9ncf"}], "removeItems": [{"inventoryId": "f3ii1q5J", "slotId": "RtrXVlqE", "sourceItemId": "1Dw7AEr1"}, {"inventoryId": "PSgNETPl", "slotId": "980xayl9", "sourceItemId": "UFrPaZwe"}, {"inventoryId": "bvWaLyhT", "slotId": "8ov2hCwi", "sourceItemId": "lLGH8v2s"}], "targetUserId": "RtORbElN", "updateItems": [{"customAttributes": {"ieDGs7mn": {}, "DbkweXs2": {}, "leIT5RVZ": {}}, "inventoryId": "bdYv3AMq", "serverCustomAttributes": {"RZB75UQN": {}, "hP8fQues": {}, "GDFmBBOJ": {}}, "slotId": "Xg77ROBc", "sourceItemId": "FuPMi12G", "tags": ["vIYb2uPe", "o7tpfwnU", "BQNPe7u1"], "type": "InmPP0EU"}, {"customAttributes": {"Ps71OJ3l": {}, "tzOCwJUT": {}, "OxKZ6eDJ": {}}, "inventoryId": "nemCLexM", "serverCustomAttributes": {"xrHYgHM1": {}, "VX0YvUL9": {}, "47ilOM93": {}}, "slotId": "aA1ouYnS", "sourceItemId": "D2yPMmGJ", "tags": ["AlsSmWpn", "fbJn4MYW", "bXRcador"], "type": "Ve4W5gcB"}, {"customAttributes": {"TEU7yVrM": {}, "zv1xrmNB": {}, "VcxvSebv": {}}, "inventoryId": "ZFFivktX", "serverCustomAttributes": {"PleNgRPY": {}, "id0uTlie": {}, "2qfzvZUe": {}}, "slotId": "UPavbrb9", "sourceItemId": "eT5sKhOh", "tags": ["4bzVrwxs", "FMndn0tV", "B7w2sdEC"], "type": "MvqcvQwG"}]}, {"consumeItems": [{"dateRangeValidation": false, "inventoryId": "4ZvaU4FD", "options": ["l3Oc36gD", "V5gTvlud", "QWAH1JdF"], "qty": 34, "slotId": "9qYJXAvE", "sourceItemId": "myY4y3ug"}, {"dateRangeValidation": false, "inventoryId": "pyCdghih", "options": ["qKdyno1M", "6HXYYZgN", "2avZLoFN"], "qty": 94, "slotId": "haIM9HgP", "sourceItemId": "nPy1XZ1T"}, {"dateRangeValidation": true, "inventoryId": "eaWiKXPs", "options": ["o5yXSj69", "9dJ9Od9R", "MBRGR1vL"], "qty": 85, "slotId": "surhhJi4", "sourceItemId": "XU7ATR2H"}], "createItems": [{"customAttributes": {"Qe1wGPGz": {}, "tXHal8RY": {}, "18Qt81bk": {}}, "inventoryConfigurationCode": "hDXHDQd4", "inventoryId": "rqSFBktF", "qty": 63, "serverCustomAttributes": {"98ZQestc": {}, "EZVUbqnL": {}, "XPj3rS3p": {}}, "slotId": "VlWbRFaX", "slotUsed": 63, "source": "ECOMMERCE", "sourceItemId": "H5qBbJxC", "tags": ["IVROIZj6", "a5ylDnFD", "fxi6k3pl"], "toSpecificInventory": false, "type": "KF4p81W7"}, {"customAttributes": {"nTu0U9Hp": {}, "GO1ha0Vu": {}, "2XhitC8K": {}}, "inventoryConfigurationCode": "IvDIO0iK", "inventoryId": "qyd3M6KS", "qty": 20, "serverCustomAttributes": {"0L13Ik9f": {}, "7pKoatKG": {}, "3IdkcLDe": {}}, "slotId": "9eGpd4Mg", "slotUsed": 45, "source": "OTHER", "sourceItemId": "ZbpWMJAw", "tags": ["5DKNt5Xp", "GWYwPpZ7", "GEsICt1Z"], "toSpecificInventory": false, "type": "dw2QxPNO"}, {"customAttributes": {"O0UNIFSB": {}, "uN319NcP": {}, "FslW14CP": {}}, "inventoryConfigurationCode": "9GhYZ0k2", "inventoryId": "pOm09X1h", "qty": 6, "serverCustomAttributes": {"KorzB7dn": {}, "Q6ZKySQp": {}, "V3nkKhsE": {}}, "slotId": "98spkFNH", "slotUsed": 88, "source": "ECOMMERCE", "sourceItemId": "Kp3mL2VX", "tags": ["RvOBaoGi", "aLU5HiVO", "VHlNIFh3"], "toSpecificInventory": false, "type": "ROY830Cb"}], "removeItems": [{"inventoryId": "eYnFYkZi", "slotId": "fTDFIxYh", "sourceItemId": "HV4notHW"}, {"inventoryId": "RRl2DDRn", "slotId": "phqeRJAT", "sourceItemId": "CxWDqSMP"}, {"inventoryId": "8uL2osNF", "slotId": "Xg29p7ZT", "sourceItemId": "3Vo8rLf4"}], "targetUserId": "QatnP8pJ", "updateItems": [{"customAttributes": {"hxcBKmyg": {}, "hDnxV4Oo": {}, "OweqUq6e": {}}, "inventoryId": "qCEoL85g", "serverCustomAttributes": {"VBf3TsGk": {}, "sTwcVqrK": {}, "GiVnoiqg": {}}, "slotId": "dEPYJN63", "sourceItemId": "cLl5BTeB", "tags": ["oQxxzeyV", "dl050Jdi", "tWCf6Sff"], "type": "VQpabffQ"}, {"customAttributes": {"05sxc6vm": {}, "VKidczXV": {}, "vfGfzcLq": {}}, "inventoryId": "E1wAdjNe", "serverCustomAttributes": {"DVsy1DfF": {}, "FtH7YOSQ": {}, "A83otrOq": {}}, "slotId": "9RUozMXO", "sourceItemId": "SBWmgX4O", "tags": ["1nmPRuik", "f2jE2h5W", "w06o4U4M"], "type": "RLTdSGvh"}, {"customAttributes": {"PF9YWg6y": {}, "1H2zkWLj": {}, "sOQoKCsW": {}}, "inventoryId": "nLO5bcMj", "serverCustomAttributes": {"T2QFEkTa": {}, "XPiVckk5": {}, "yNMinYwj": {}}, "slotId": "OBeQ2VVk", "sourceItemId": "vFRraoAh", "tags": ["ctFGdtmT", "eQktLArc", "dR0c7PMr"], "type": "PSQ00sJU"}]}], "requestId": "VmUH91bs"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminCreateChainingOperations \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 2 'AdminCreateChainingOperations' test.out

#- 3 AdminListIntegrationConfigurations
$CLI_EXE \
    --sn inventory \
    --op AdminListIntegrationConfigurations \
    --namespace $AB_NAMESPACE \
    --limit '32' \
    --offset '21' \
    --sortBy 'createdAt:desc' \
    > test.out 2>&1
eval_tap $? 3 'AdminListIntegrationConfigurations' test.out

#- 4 AdminCreateIntegrationConfiguration
# body param: body
echo '{"mapItemType": ["2nxs6EsL", "j2Mxe2QA", "kc4sQMMN"], "serviceName": "WZVnyblT", "targetInventoryCode": "oZa9CvWp"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminCreateIntegrationConfiguration \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 4 'AdminCreateIntegrationConfiguration' test.out

#- 5 AdminUpdateIntegrationConfiguration
# body param: body
echo '{"mapItemType": ["m8ls5rqj", "EAlUVSsa", "96Y14VCZ"], "serviceName": "E1e4Wvcv", "targetInventoryCode": "qnTmLrWK"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminUpdateIntegrationConfiguration \
    --integrationConfigurationId '5A853jls' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 5 'AdminUpdateIntegrationConfiguration' test.out

#- 6 AdminUpdateStatusIntegrationConfiguration
# body param: body
echo '{"status": "TIED"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminUpdateStatusIntegrationConfiguration \
    --integrationConfigurationId 'W5SPIWG5' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 6 'AdminUpdateStatusIntegrationConfiguration' test.out

#- 7 AdminListInventories
$CLI_EXE \
    --sn inventory \
    --op AdminListInventories \
    --namespace $AB_NAMESPACE \
    --inventoryConfigurationCode 'x9k3AmeG' \
    --limit '45' \
    --offset '89' \
    --sortBy 'updatedAt:desc' \
    --userId 'RBLa8ImK' \
    > test.out 2>&1
eval_tap $? 7 'AdminListInventories' test.out

#- 8 AdminCreateInventory
# body param: body
echo '{"inventoryConfigurationCode": "dCGcCjHd", "userId": "y6nD08MV"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminCreateInventory \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 8 'AdminCreateInventory' test.out

#- 9 AdminGetInventory
$CLI_EXE \
    --sn inventory \
    --op AdminGetInventory \
    --inventoryId '5IBKLSXl' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 9 'AdminGetInventory' test.out

#- 10 AdminUpdateInventory
# body param: body
echo '{"incMaxSlots": 60}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminUpdateInventory \
    --inventoryId 'BrNnyoaV' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 10 'AdminUpdateInventory' test.out

#- 11 DeleteInventory
# body param: body
echo '{"message": "g3Kjn2mw"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op DeleteInventory \
    --inventoryId 'W8EbeF8M' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 11 'DeleteInventory' test.out

#- 12 AdminListItems
$CLI_EXE \
    --sn inventory \
    --op AdminListItems \
    --inventoryId 'hKrD5Ky3' \
    --namespace $AB_NAMESPACE \
    --limit '91' \
    --offset '48' \
    --sortBy 'updatedAt' \
    --sourceItemId 'Mwa9UbXN' \
    --tags 'kDAZnncv' \
    > test.out 2>&1
eval_tap $? 12 'AdminListItems' test.out

#- 13 AdminGetInventoryItem
$CLI_EXE \
    --sn inventory \
    --op AdminGetInventoryItem \
    --inventoryId 'qLD49uSW' \
    --namespace $AB_NAMESPACE \
    --slotId 'kLqYbf5U' \
    --sourceItemId 'e3rPy55G' \
    > test.out 2>&1
eval_tap $? 13 'AdminGetInventoryItem' test.out

#- 14 AdminListInventoryConfigurations
$CLI_EXE \
    --sn inventory \
    --op AdminListInventoryConfigurations \
    --namespace $AB_NAMESPACE \
    --code 'UVEGma76' \
    --limit '95' \
    --offset '72' \
    --sortBy 'code:asc' \
    > test.out 2>&1
eval_tap $? 14 'AdminListInventoryConfigurations' test.out

#- 15 AdminCreateInventoryConfiguration
# body param: body
echo '{"code": "Y0URvrDa", "description": "pirHKW0t", "initialMaxSlots": 56, "maxInstancesPerUser": 30, "maxUpgradeSlots": 58, "name": "lsN8VHAs"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminCreateInventoryConfiguration \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 15 'AdminCreateInventoryConfiguration' test.out

#- 16 AdminGetInventoryConfiguration
$CLI_EXE \
    --sn inventory \
    --op AdminGetInventoryConfiguration \
    --inventoryConfigurationId 'P0AVHsSd' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 16 'AdminGetInventoryConfiguration' test.out

#- 17 AdminUpdateInventoryConfiguration
# body param: body
echo '{"code": "U6Z9O4Ex", "description": "pZpdXy8J", "initialMaxSlots": 43, "maxInstancesPerUser": 57, "maxUpgradeSlots": 45, "name": "WjDyzOkT"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminUpdateInventoryConfiguration \
    --inventoryConfigurationId 'xMD71dNx' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 17 'AdminUpdateInventoryConfiguration' test.out

#- 18 AdminDeleteInventoryConfiguration
$CLI_EXE \
    --sn inventory \
    --op AdminDeleteInventoryConfiguration \
    --inventoryConfigurationId '44N9dL8x' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 18 'AdminDeleteInventoryConfiguration' test.out

#- 19 AdminListItemTypes
$CLI_EXE \
    --sn inventory \
    --op AdminListItemTypes \
    --namespace $AB_NAMESPACE \
    --limit '63' \
    --offset '91' \
    --sortBy 'name' \
    > test.out 2>&1
eval_tap $? 19 'AdminListItemTypes' test.out

#- 20 AdminCreateItemType
# body param: body
echo '{"name": "nOVHFPCd"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminCreateItemType \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 20 'AdminCreateItemType' test.out

#- 21 AdminDeleteItemType
$CLI_EXE \
    --sn inventory \
    --op AdminDeleteItemType \
    --itemTypeName 'J6Mwfm7d' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 21 'AdminDeleteItemType' test.out

#- 22 AdminListTags
$CLI_EXE \
    --sn inventory \
    --op AdminListTags \
    --namespace $AB_NAMESPACE \
    --limit '89' \
    --offset '44' \
    --owner 'Mpj1s88H' \
    --sortBy 'createdAt' \
    > test.out 2>&1
eval_tap $? 22 'AdminListTags' test.out

#- 23 AdminCreateTag
# body param: body
echo '{"name": "8gNVFkiH", "owner": "CLIENT"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminCreateTag \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 23 'AdminCreateTag' test.out

#- 24 AdminDeleteTag
$CLI_EXE \
    --sn inventory \
    --op AdminDeleteTag \
    --namespace $AB_NAMESPACE \
    --tagName 'dA8QF4ZW' \
    > test.out 2>&1
eval_tap $? 24 'AdminDeleteTag' test.out

#- 25 AdminConsumeUserItem
# body param: body
echo '{"options": ["ovOaRWry", "lrfVALeq", "dQzL0kEu"], "qty": 58, "slotId": "TZ9KkX1u", "sourceItemId": "IE3gvQHh"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminConsumeUserItem \
    --inventoryId 'jOo6uEGR' \
    --namespace $AB_NAMESPACE \
    --userId '9fIcTptc' \
    --dateRangeValidation 'ShRN4chF' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 25 'AdminConsumeUserItem' test.out

#- 26 AdminBulkUpdateMyItems
# body param: body
echo '[{"customAttributes": {"FrlnACvw": {}, "BiQ8cVDi": {}, "rWzWNgmS": {}}, "serverCustomAttributes": {"ZWlMq9fy": {}, "40w4eBJr": {}, "km1yCnLA": {}}, "slotId": "BXTzwKdF", "sourceItemId": "wAYmetLr", "tags": ["FAec9sCf", "3yC2pFfn", "nejcTVDZ"], "type": "z8FwRIb8"}, {"customAttributes": {"qSZ2U40H": {}, "6viIZ51f": {}, "dnJoZm0w": {}}, "serverCustomAttributes": {"vRcihL6J": {}, "ep71ExFF": {}, "FwCUrwXQ": {}}, "slotId": "JbyON92O", "sourceItemId": "KXmmKsxe", "tags": ["aPApZ4aJ", "Xv4HfKVg", "OEM7kZ4u"], "type": "PDMNiAFa"}, {"customAttributes": {"HChe4pMN": {}, "MqnJeEw3": {}, "HHYo2x4z": {}}, "serverCustomAttributes": {"H6mVzCO4": {}, "NdXW7ul2": {}, "C4yhCgKU": {}}, "slotId": "A8jvMngm", "sourceItemId": "FM8f5tMs", "tags": ["Tf6kz3tV", "b13yYpMX", "RaEPKRbN"], "type": "qCixjyEb"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminBulkUpdateMyItems \
    --inventoryId 'TXv9AWik' \
    --namespace $AB_NAMESPACE \
    --userId 'SjOw5gzj' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 26 'AdminBulkUpdateMyItems' test.out

#- 27 AdminSaveItemToInventory
# body param: body
echo '{"customAttributes": {"vYc0u6yH": {}, "IJr1DxwW": {}, "moJT1ZHW": {}}, "qty": 8, "serverCustomAttributes": {"w4RrtLHU": {}, "fYBa6g8C": {}, "M8CpCysF": {}}, "slotId": "64vEamVI", "slotUsed": 39, "source": "ECOMMERCE", "sourceItemId": "ef53dzPA", "tags": ["VPVmUQtR", "kdjn5jwl", "ItbprdLM"], "type": "5Rg4EBhu"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminSaveItemToInventory \
    --inventoryId '0MYpzp35' \
    --namespace $AB_NAMESPACE \
    --userId 'VskAHYT5' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 27 'AdminSaveItemToInventory' test.out

#- 28 AdminBulkRemoveItems
# body param: body
echo '[{"slotId": "el0vbEJB", "sourceItemId": "JWaPV5WU"}, {"slotId": "lA8aUSBr", "sourceItemId": "IA0X42v6"}, {"slotId": "KfwtRKEv", "sourceItemId": "adW2KKBS"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminBulkRemoveItems \
    --inventoryId 'DGIi7G6K' \
    --namespace $AB_NAMESPACE \
    --userId 'kzxoxvfQ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 28 'AdminBulkRemoveItems' test.out

#- 29 AdminBulkSaveItemToInventory
# body param: body
echo '[{"customAttributes": {"vLSItjP5": {}, "93bFLvHe": {}, "AolT99si": {}}, "qty": 98, "serverCustomAttributes": {"nhzlFIjw": {}, "Z5FoshYg": {}, "zLnPjYqU": {}}, "slotId": "OXQCgexe", "slotUsed": 50, "source": "ECOMMERCE", "sourceItemId": "LHfFMiIQ", "tags": ["TZwBQmM9", "uBcPwsa4", "FWgqDTWD"], "type": "qtql1xfO"}, {"customAttributes": {"Ccwa9wfE": {}, "pH7301VB": {}, "AWiLV6nl": {}}, "qty": 79, "serverCustomAttributes": {"WJgtAPCa": {}, "4FlSfoJQ": {}, "T13ZSjC9": {}}, "slotId": "QMr4W4pu", "slotUsed": 55, "source": "ECOMMERCE", "sourceItemId": "T9aCihMN", "tags": ["K8lLUk6e", "TmjhuQvh", "LXr1mpzg"], "type": "n9tgZJSx"}, {"customAttributes": {"LlWWSWU2": {}, "UqlHU0o6": {}, "zXbZ36Ti": {}}, "qty": 21, "serverCustomAttributes": {"OUlzSzps": {}, "6ND8VAo9": {}, "uXBHaNJB": {}}, "slotId": "Hzr5Incy", "slotUsed": 99, "source": "OTHER", "sourceItemId": "v8A8KclV", "tags": ["Rdp89Ept", "nDsSVW4j", "E019HKv3"], "type": "UwHv9enN"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminBulkSaveItemToInventory \
    --inventoryId 'hjmkGku4' \
    --namespace $AB_NAMESPACE \
    --userId 'YgFLfg4h' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 29 'AdminBulkSaveItemToInventory' test.out

#- 30 AdminUpdateUserInventoriesByInventoryCode
# body param: body
echo '{"incMaxSlots": 82}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminUpdateUserInventoriesByInventoryCode \
    --inventoryConfigurationCode '6AdLnHUv' \
    --namespace $AB_NAMESPACE \
    --userId 'SCdDrJcO' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 30 'AdminUpdateUserInventoriesByInventoryCode' test.out

#- 31 AdminSaveItem
# body param: body
echo '{"customAttributes": {"E3ckkSoX": {}, "nYBhSIFu": {}, "GNi7jOsf": {}}, "inventoryConfigurationCode": "Zh1uNyxX", "qty": 71, "serverCustomAttributes": {"DJbwwTZG": {}, "zzSWlkBv": {}, "EWoZdaX8": {}}, "slotId": "w03mRzSp", "slotUsed": 92, "source": "OTHER", "sourceItemId": "83G2zdXr", "tags": ["qnXEIqbD", "MOLd4RB2", "9RlV54W5"], "type": "KaWMrQOb"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminSaveItem \
    --namespace $AB_NAMESPACE \
    --userId 'SuR7vlpq' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 31 'AdminSaveItem' test.out

#- 32 AdminBulkSaveItem
# body param: body
echo '[{"customAttributes": {"gyj71gqr": {}, "cT4065NO": {}, "rr2DgHaZ": {}}, "inventoryConfigurationCode": "Y7TCjEjv", "qty": 30, "serverCustomAttributes": {"RXR8202l": {}, "9JrW5fHJ": {}, "kFRPsPPI": {}}, "slotId": "8tfklPbm", "slotUsed": 67, "source": "ECOMMERCE", "sourceItemId": "nSXU81fA", "tags": ["j9SAnEan", "TjFPLeLX", "n1BSVZdo"], "type": "6HUW67rE"}, {"customAttributes": {"nJNQz7Go": {}, "BIFAa6sA": {}, "kR75R7iR": {}}, "inventoryConfigurationCode": "bNn52Uqi", "qty": 22, "serverCustomAttributes": {"cwSKQs0U": {}, "6cDLQ6Qe": {}, "I4QxfxB1": {}}, "slotId": "QPcZZgqq", "slotUsed": 57, "source": "OTHER", "sourceItemId": "K4pQbKqb", "tags": ["8fYjGztp", "Mla6tOv1", "jaiWYXlI"], "type": "RCQR7uEc"}, {"customAttributes": {"oSBMM7Tw": {}, "7Krx1Jeb": {}, "9x68OaBQ": {}}, "inventoryConfigurationCode": "kqe4VZ2P", "qty": 37, "serverCustomAttributes": {"AyNMoEjz": {}, "TCqYkD2h": {}, "39CXoQCO": {}}, "slotId": "2cPNX4Zj", "slotUsed": 10, "source": "ECOMMERCE", "sourceItemId": "GFpxwQrv", "tags": ["9ZsJBQLM", "TeFhaK33", "KxAZwiXi"], "type": "Rg4w8phr"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminBulkSaveItem \
    --namespace $AB_NAMESPACE \
    --userId 'zQrxhkTs' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 32 'AdminBulkSaveItem' test.out

#- 33 AdminSyncUserEntitlements
$CLI_EXE \
    --sn inventory \
    --op AdminSyncUserEntitlements \
    --namespace $AB_NAMESPACE \
    --userId 'bL5zvqwd' \
    > test.out 2>&1
eval_tap $? 33 'AdminSyncUserEntitlements' test.out

#- 34 AdminPurchasable
# body param: body
echo '{"entitlementType": "bJEysjJU", "inventoryConfig": {"slotUsed": 43}, "itemId": "V7eW13MP", "itemType": "AaZOhvva", "items": [{"bundledQty": 14, "entitlementType": "qe5GDWVq", "inventoryConfig": {"slotUsed": 58}, "itemId": "sOhtXafC", "itemType": "uB3xhHLf", "sku": "UfRA3ZBN", "stackable": true, "useCount": 47}, {"bundledQty": 38, "entitlementType": "j05lYheF", "inventoryConfig": {"slotUsed": 36}, "itemId": "ElkH1BoE", "itemType": "vYnDc3ND", "sku": "xEza8whL", "stackable": true, "useCount": 91}, {"bundledQty": 74, "entitlementType": "J8wD1Nwf", "inventoryConfig": {"slotUsed": 7}, "itemId": "tj95tvW6", "itemType": "mbebpGI1", "sku": "UPR92ejg", "stackable": false, "useCount": 6}], "quantity": 82, "sku": "Fi0cfM2k", "stackable": false, "useCount": 63}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminPurchasable \
    --namespace $AB_NAMESPACE \
    --userId '0PA8hy0O' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 34 'AdminPurchasable' test.out

#- 35 PublicListInventoryConfigurations
$CLI_EXE \
    --sn inventory \
    --op PublicListInventoryConfigurations \
    --namespace $AB_NAMESPACE \
    --code '6uB6Fyb6' \
    --limit '31' \
    --offset '25' \
    --sortBy 'createdAt' \
    > test.out 2>&1
eval_tap $? 35 'PublicListInventoryConfigurations' test.out

#- 36 PublicListItemTypes
$CLI_EXE \
    --sn inventory \
    --op PublicListItemTypes \
    --namespace $AB_NAMESPACE \
    --limit '29' \
    --offset '12' \
    --sortBy 'name:asc' \
    > test.out 2>&1
eval_tap $? 36 'PublicListItemTypes' test.out

#- 37 PublicListTags
$CLI_EXE \
    --sn inventory \
    --op PublicListTags \
    --namespace $AB_NAMESPACE \
    --limit '60' \
    --offset '88' \
    --sortBy 'name:asc' \
    > test.out 2>&1
eval_tap $? 37 'PublicListTags' test.out

#- 38 PublicListInventories
$CLI_EXE \
    --sn inventory \
    --op PublicListInventories \
    --namespace $AB_NAMESPACE \
    --inventoryConfigurationCode 'kNTP2jNw' \
    --limit '25' \
    --offset '33' \
    --sortBy 'updatedAt:desc' \
    > test.out 2>&1
eval_tap $? 38 'PublicListInventories' test.out

#- 39 PublicConsumeMyItem
# body param: body
echo '{"options": ["6Kv4aAxd", "myug7eJw", "aeiTdS5h"], "qty": 33, "slotId": "SqnLVc3u", "sourceItemId": "zlCeYM3X"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op PublicConsumeMyItem \
    --inventoryId '0OUk04yt' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 39 'PublicConsumeMyItem' test.out

#- 40 PublicListItems
$CLI_EXE \
    --sn inventory \
    --op PublicListItems \
    --inventoryId 'w4HBW4af' \
    --namespace $AB_NAMESPACE \
    --limit '27' \
    --offset '69' \
    --sortBy 'createdAt' \
    --sourceItemId 'HP4dqWoj' \
    --tags 'SciMKBzj' \
    > test.out 2>&1
eval_tap $? 40 'PublicListItems' test.out

#- 41 PublicBulkUpdateMyItems
# body param: body
echo '[{"customAttributes": {"lVF7a0YZ": {}, "GT3Ss0k8": {}, "uNcP5P30": {}}, "slotId": "j0pYi8po", "sourceItemId": "yqNl4Qh9", "tags": ["SDqXj5Ek", "23Ij0klc", "JTa9HxvL"]}, {"customAttributes": {"fvCVSZXV": {}, "JLZSbT68": {}, "hoGHEJhw": {}}, "slotId": "nZGA7PdK", "sourceItemId": "N4vqpKLy", "tags": ["xPC7JR1a", "txZmC7px", "jDeFROeO"]}, {"customAttributes": {"PuZshid1": {}, "CmWjWnUi": {}, "1aB5Meuv": {}}, "slotId": "932Wllqx", "sourceItemId": "Y4T9Bkxl", "tags": ["AYZcGABZ", "3NV2Am48", "vFxp2CD4"]}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op PublicBulkUpdateMyItems \
    --inventoryId 'MYsm0rZ2' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 41 'PublicBulkUpdateMyItems' test.out

#- 42 PublicBulkRemoveMyItems
# body param: body
echo '[{"slotId": "I4uNCtbd", "sourceItemId": "4kEuHXjz"}, {"slotId": "8525XNgM", "sourceItemId": "oYuOHo6V"}, {"slotId": "4HJbz3gW", "sourceItemId": "UnAwoz60"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op PublicBulkRemoveMyItems \
    --inventoryId 'dwEYeeXQ' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 42 'PublicBulkRemoveMyItems' test.out

#- 43 PublicMoveMyItems
# body param: body
echo '{"items": [{"qty": 60, "slotId": "V7Ggmgvm", "sourceItemId": "Ye8ilfz9"}, {"qty": 81, "slotId": "KWcAXaC0", "sourceItemId": "Nf02KoeU"}, {"qty": 33, "slotId": "4JBUO37G", "sourceItemId": "xf75WBa9"}], "srcInventoryId": "5cetQ4wp"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op PublicMoveMyItems \
    --inventoryId 'VfScm8PU' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 43 'PublicMoveMyItems' test.out

#- 44 PublicGetItem
$CLI_EXE \
    --sn inventory \
    --op PublicGetItem \
    --inventoryId 'biEwbBDk' \
    --namespace $AB_NAMESPACE \
    --slotId 'xPhXVaA5' \
    --sourceItemId 'mydxv7vJ' \
    > test.out 2>&1
eval_tap $? 44 'PublicGetItem' test.out


# remove artifacts
rm -f "$CLI_TOKEN_FILE"
rm -f "$TEMP_JSON_INPUT"
rm -f "$TEMP_FILE_UPLOAD"

exit $EXIT_CODE