#!/usr/bin/env bash

# Copyright (c) 2021 AccelByte Inc. All Rights Reserved.
# This is licensed software from AccelByte Inc, for limitations
# and restrictions contact your company contract manager.

# This code is generated by tool. DO NOT EDIT.

# Meta:
# - random seed: 
# - template file: 

# Instructions:
# - Run the Justice SDK Mock Server first before running this script.

export AB_BASE_URL="http://127.0.0.1:8080"
export AB_CLIENT_ID="admin"
export AB_CLIENT_SECRET="admin"
export AB_NAMESPACE="test"
export AB_APP_NAME="UnitTest"

EXIT_CODE=0

eval_tap() {
  if [ $1 -eq 0 ]; then
    echo "ok $2 - $3"
  else
    EXIT_CODE=1
    echo "not ok $2 - $3"
    sed 's/^/# /g' $4
  fi
  rm -f $4
}

CLI_EXE="AccelByte.Sdk.Sample.Cli"
CLI_TOKEN_FILE="$(dirname "$(which $CLI_EXE)")/token.json"
TEMP_JSON_INPUT="input_json.json"
TEMP_FILE_UPLOAD="file_upload.bin"

echo "TAP version 13"
echo "1..35"

#- 1 Login
$CLI_EXE --op login --lt user --user user --pass user > test.out 2>&1
eval_tap $? 1 'Login' test.out

if [ $EXIT_CODE -ne 0 ]; then
  echo "Bail out! Login failed."
  exit $EXIT_CODE
fi

# echo "foo" > "$CLI_TOKEN_FILE"

#- 2 AdminCreateChainingOperations
# body param: body
echo '{"message": "h7QLDnpb", "operations": [{"consumeItems": [{"inventoryId": "1whxrMyL", "qty": 8, "slotId": "7lV7Mmev", "sourceItemId": "fSR4md0c"}, {"inventoryId": "GYxeHwMX", "qty": 24, "slotId": "GkFzclyw", "sourceItemId": "SqpYTqhA"}, {"inventoryId": "NLwQ59ex", "qty": 100, "slotId": "ZkMh0YC3", "sourceItemId": "zm1sRa5k"}], "createItems": [{"customAttributes": {"xA9OKcjP": {}, "2yhI1gEZ": {}, "742AF7SS": {}}, "inventoryConfigurationCode": "2MZe19nT", "inventoryId": "wnApRcHJ", "qty": 29, "serverCustomAttributes": {"LSXuB8c7": {}, "CnoSsumM": {}, "OjlenlED": {}}, "slotId": "8yNCObZa", "slotUsed": 79, "sourceItemId": "0UMSqn7m", "tags": ["xm0YuIRo", "vN2WfyBf", "Mmj9cUsg"], "toSpecificInventory": false, "type": "49Z99z06"}, {"customAttributes": {"AnSgCQBI": {}, "eF9zXggi": {}, "f2IQ00Ou": {}}, "inventoryConfigurationCode": "8l0TfVLk", "inventoryId": "fmHSMBDj", "qty": 44, "serverCustomAttributes": {"qs5t1vEx": {}, "ZmEySIrC": {}, "7ywZyp23": {}}, "slotId": "ioGxSJzf", "slotUsed": 7, "sourceItemId": "8hSH82QF", "tags": ["9Y0w5F6V", "sXcs55yJ", "hogxXzGB"], "toSpecificInventory": false, "type": "N8XiAYpM"}, {"customAttributes": {"nS1oNlQO": {}, "OSJ1fMKb": {}, "QqbChEsn": {}}, "inventoryConfigurationCode": "dUrNwcEw", "inventoryId": "bc60qWuF", "qty": 81, "serverCustomAttributes": {"ylOnXG74": {}, "mQXdcNG4": {}, "C4BPujNg": {}}, "slotId": "Do5Yflpg", "slotUsed": 51, "sourceItemId": "d0odI02X", "tags": ["aGGAKddr", "z24LN5mr", "SHvC065R"], "toSpecificInventory": true, "type": "7lsDEB95"}], "removeItems": [{"inventoryId": "MEMx1prg", "slotId": "snJ8fdjp", "sourceItemId": "Q85CuB8f"}, {"inventoryId": "tlgap5Q3", "slotId": "4fVj4c9k", "sourceItemId": "3KGJbnDp"}, {"inventoryId": "ZEAHccUP", "slotId": "BPUQq4o8", "sourceItemId": "WjjY01dm"}], "targetUserId": "5BSyFCfM", "updateItems": [{"customAttributes": {"sPaHO1yV": {}, "vxT4BsWm": {}, "cHRakW3M": {}}, "inventoryId": "ke1NC2VH", "serverCustomAttributes": {"ScWvywhv": {}, "4RjtYluk": {}, "yXluIDdr": {}}, "slotId": "Z0rkxqNU", "sourceItemId": "OEGd3TrK", "tags": ["2vWlj4XC", "Gn0pNB4J", "SgYyPGjz"], "type": "tgFPB6YP"}, {"customAttributes": {"FAjEOLef": {}, "iY7migxt": {}, "0pWBbyaC": {}}, "inventoryId": "73WW7idv", "serverCustomAttributes": {"A5PAdjIC": {}, "vzmle2PN": {}, "x2OSozS1": {}}, "slotId": "0VqwozPW", "sourceItemId": "wX02DCBQ", "tags": ["DFRQuvWw", "T1Zhod7D", "1bJvn0tg"], "type": "JGRVWz6T"}, {"customAttributes": {"8ZO00coN": {}, "BnHhA0CS": {}, "HpXMXSaO": {}}, "inventoryId": "IgSGxRHm", "serverCustomAttributes": {"PHdJdZ9z": {}, "4EegFVFv": {}, "eOny5L8z": {}}, "slotId": "bsJAaVSz", "sourceItemId": "Xx4BkJFL", "tags": ["EjTh6qQh", "QDWRKC32", "UfLHiuY1"], "type": "MoqaDH9d"}]}, {"consumeItems": [{"inventoryId": "XozGrvyM", "qty": 73, "slotId": "AXWi3dqt", "sourceItemId": "E0OQWnuP"}, {"inventoryId": "NTyKdH7q", "qty": 50, "slotId": "SPOutZQo", "sourceItemId": "lBan6Mmq"}, {"inventoryId": "mgltbZid", "qty": 82, "slotId": "pPdrUXGc", "sourceItemId": "PIcmgP21"}], "createItems": [{"customAttributes": {"P2DQtg6v": {}, "jpCcg1GV": {}, "9DKZ107M": {}}, "inventoryConfigurationCode": "CrDCvkfh", "inventoryId": "F28iSVkD", "qty": 9, "serverCustomAttributes": {"tySGfX1M": {}, "kvvyv1Ww": {}, "y10iyhmp": {}}, "slotId": "KWXjjS0I", "slotUsed": 10, "sourceItemId": "dZuOUepZ", "tags": ["yFeZCXMI", "HuJEry5A", "iRk6HqnA"], "toSpecificInventory": false, "type": "LHJNGLBN"}, {"customAttributes": {"Ij7p716B": {}, "LOo6RmRd": {}, "1nrXFvjB": {}}, "inventoryConfigurationCode": "f2DNQQ0b", "inventoryId": "OQbnJPSC", "qty": 16, "serverCustomAttributes": {"AvaAiKDv": {}, "KqS29pYU": {}, "bzsAcech": {}}, "slotId": "cLnmY0aW", "slotUsed": 58, "sourceItemId": "026Oaycg", "tags": ["4kSklQqK", "hipTtG7s", "DFZkqlkT"], "toSpecificInventory": true, "type": "tTpdLgwy"}, {"customAttributes": {"VM3Jpvfg": {}, "MGcQMKRx": {}, "uzy8N0lr": {}}, "inventoryConfigurationCode": "w9BekNNn", "inventoryId": "LEmU2ifI", "qty": 75, "serverCustomAttributes": {"tfngDprs": {}, "kisgZjg4": {}, "VoQ7P6PB": {}}, "slotId": "jhDAK1pn", "slotUsed": 97, "sourceItemId": "m5cGflo0", "tags": ["pPBy2rr4", "cjhJNNyy", "76PhuWdK"], "toSpecificInventory": false, "type": "yENYePMs"}], "removeItems": [{"inventoryId": "Tdin0ogZ", "slotId": "PppejZNo", "sourceItemId": "cjT37ad4"}, {"inventoryId": "dwr2pJAe", "slotId": "dRUqS8Im", "sourceItemId": "zvtmjMyi"}, {"inventoryId": "gsWRlZWJ", "slotId": "FahdVCRv", "sourceItemId": "lpzaBwgr"}], "targetUserId": "Sw5alT7i", "updateItems": [{"customAttributes": {"Lzz6tLZK": {}, "svPamQfG": {}, "yP2fPySg": {}}, "inventoryId": "VcayxNY4", "serverCustomAttributes": {"fIRTMHQe": {}, "CZXewd16": {}, "BbnkWzxp": {}}, "slotId": "u3ZoiP8T", "sourceItemId": "oMSv3u56", "tags": ["OZbBbc8r", "1CpdOSzQ", "XJ51djFp"], "type": "VXUAXvfF"}, {"customAttributes": {"XBg3rXnx": {}, "T6MoTTRw": {}, "zL97jwSV": {}}, "inventoryId": "hKiXXPfa", "serverCustomAttributes": {"IF3Tzsis": {}, "vokVZyCD": {}, "mmQUe6iA": {}}, "slotId": "nHpSPKCz", "sourceItemId": "6bL8lBdP", "tags": ["KL1V1VaX", "GJrenZXK", "XcHvdn1x"], "type": "df4rMZbK"}, {"customAttributes": {"fqOljZqF": {}, "mxVJI8cl": {}, "2F4tNPT6": {}}, "inventoryId": "R9EPKMkC", "serverCustomAttributes": {"OulrX2t7": {}, "L6yeS35R": {}, "PGbbkGnJ": {}}, "slotId": "V3rDcGma", "sourceItemId": "x0qbzc0J", "tags": ["uAV5C28T", "0g7BkpzT", "eG7TAySy"], "type": "ZEeMgJiy"}]}, {"consumeItems": [{"inventoryId": "3PD5k4Qm", "qty": 57, "slotId": "IuZYbsu0", "sourceItemId": "0OviImLk"}, {"inventoryId": "nlsE9x4R", "qty": 80, "slotId": "bbYhMPXZ", "sourceItemId": "BgO1S7gH"}, {"inventoryId": "Nb3IA3ai", "qty": 16, "slotId": "7zMxhgCY", "sourceItemId": "bQiUmSHa"}], "createItems": [{"customAttributes": {"tMDbda0X": {}, "WQx7WsIP": {}, "6rZwZzmZ": {}}, "inventoryConfigurationCode": "V7ojc0q2", "inventoryId": "7TiNrVJk", "qty": 2, "serverCustomAttributes": {"YJD7DLeu": {}, "hU0a3NGM": {}, "QEfxeTKW": {}}, "slotId": "Z1Kn3KtS", "slotUsed": 65, "sourceItemId": "sNLQC3fz", "tags": ["KG7L06gd", "9OmxSMqw", "TQZ8wDhg"], "toSpecificInventory": false, "type": "zdpCAfsL"}, {"customAttributes": {"gnwzmNru": {}, "GNAycMPq": {}, "TOfxV0RB": {}}, "inventoryConfigurationCode": "2PJUQAHQ", "inventoryId": "ZQGx1T31", "qty": 91, "serverCustomAttributes": {"DR1aDq8X": {}, "wagll0yj": {}, "leQQ2F0q": {}}, "slotId": "nNjbP7BO", "slotUsed": 36, "sourceItemId": "b207OQNJ", "tags": ["6V1C7YwC", "mh0TqIcI", "Lt1x687o"], "toSpecificInventory": true, "type": "PJxQhUT0"}, {"customAttributes": {"OKZ6nK2Z": {}, "OQjv2Tpg": {}, "CQ8SqW6A": {}}, "inventoryConfigurationCode": "o8VbnEsM", "inventoryId": "zwXiSspy", "qty": 84, "serverCustomAttributes": {"QLi0wA49": {}, "9TDl5J36": {}, "wW28qXgO": {}}, "slotId": "kmbV7oyK", "slotUsed": 45, "sourceItemId": "DVaCP0za", "tags": ["yLPDX7Q0", "Gf9rysMl", "lk0h5bLt"], "toSpecificInventory": true, "type": "c2A5MaCw"}], "removeItems": [{"inventoryId": "qTnMfAe9", "slotId": "RrCq0Ok1", "sourceItemId": "OG8PrfKp"}, {"inventoryId": "7PpMrhqL", "slotId": "y6sFZosk", "sourceItemId": "mZOfrCGv"}, {"inventoryId": "SrkA9h5E", "slotId": "HMoMxouF", "sourceItemId": "onxnrI7X"}], "targetUserId": "Io5uxPKw", "updateItems": [{"customAttributes": {"mqtFGlBO": {}, "o1Hj6oSk": {}, "ew4HqOuk": {}}, "inventoryId": "9TvB1aOu", "serverCustomAttributes": {"FHitMbdj": {}, "BoiHueNv": {}, "gvd9OvHE": {}}, "slotId": "zJ0nJs4g", "sourceItemId": "yqYauYR7", "tags": ["UZRrt5dJ", "O3H91EoJ", "SuwHrSVW"], "type": "j0MwVF4f"}, {"customAttributes": {"j3zyqx0F": {}, "4bF0F4ez": {}, "z1rTjyer": {}}, "inventoryId": "cnZBzeLM", "serverCustomAttributes": {"hxy0E0U3": {}, "468EUWUb": {}, "xSqxiSsD": {}}, "slotId": "KO04QCQh", "sourceItemId": "ZZLdurQ4", "tags": ["PHJjdtGd", "OCOpcnIM", "hQZC2rZN"], "type": "P2VcY3zK"}, {"customAttributes": {"McxmA2N0": {}, "jCcU1s79": {}, "L59wBbnv": {}}, "inventoryId": "eXOqzqVr", "serverCustomAttributes": {"Cq5lCWnb": {}, "j9v6jwql": {}, "aJqAoM2I": {}}, "slotId": "cdX05byb", "sourceItemId": "RFLxa6Rv", "tags": ["1XBcQy2F", "dsEhuVtJ", "N2DLiqja"], "type": "npU86OwG"}]}], "requestId": "YS0A0JBs"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminCreateChainingOperations \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 2 'AdminCreateChainingOperations' test.out

#- 3 AdminListInventories
$CLI_EXE \
    --sn inventory \
    --op AdminListInventories \
    --namespace $AB_NAMESPACE \
    --inventoryConfigurationCode '0Fjq9PxF' \
    --limit '35' \
    --offset '21' \
    --sortBy 'inventoryConfigurationCode:asc' \
    --userId '1fwxkwkm' \
    > test.out 2>&1
eval_tap $? 3 'AdminListInventories' test.out

#- 4 AdminCreateInventory
# body param: body
echo '{"inventoryConfigurationCode": "ZvGWJQwl", "userId": "X7oJfGiS"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminCreateInventory \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 4 'AdminCreateInventory' test.out

#- 5 AdminGetInventory
$CLI_EXE \
    --sn inventory \
    --op AdminGetInventory \
    --inventoryId 'muvOaiI5' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 5 'AdminGetInventory' test.out

#- 6 AdminUpdateInventory
# body param: body
echo '{"incMaxSlots": 6}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminUpdateInventory \
    --inventoryId 'E51O3DWy' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 6 'AdminUpdateInventory' test.out

#- 7 DeleteInventory
# body param: body
echo '{"message": "HKE0caBJ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op DeleteInventory \
    --inventoryId 'JI9RGSsT' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 7 'DeleteInventory' test.out

#- 8 AdminListItems
$CLI_EXE \
    --sn inventory \
    --op AdminListItems \
    --inventoryId 'UGdDlr8f' \
    --namespace $AB_NAMESPACE \
    --limit '81' \
    --offset '2' \
    --qtyGte '79' \
    --sortBy 'updatedAt:asc' \
    --sourceItemId 'YJoIfKAb' \
    --tags 'vpxzg1nr' \
    > test.out 2>&1
eval_tap $? 8 'AdminListItems' test.out

#- 9 AdminGetInventoryItem
$CLI_EXE \
    --sn inventory \
    --op AdminGetInventoryItem \
    --inventoryId '1s11fPwu' \
    --namespace $AB_NAMESPACE \
    --slotId 'oxbCjqRs' \
    --sourceItemId 'xnKyKBKm' \
    > test.out 2>&1
eval_tap $? 9 'AdminGetInventoryItem' test.out

#- 10 AdminListInventoryConfigurations
$CLI_EXE \
    --sn inventory \
    --op AdminListInventoryConfigurations \
    --namespace $AB_NAMESPACE \
    --code 'Zzo4nEBK' \
    --limit '92' \
    --offset '80' \
    --sortBy 'updatedAt:desc' \
    > test.out 2>&1
eval_tap $? 10 'AdminListInventoryConfigurations' test.out

#- 11 AdminCreateInventoryConfiguration
# body param: body
echo '{"code": "NgdNa8y1", "description": "aO25Bqvq", "initialMaxSlots": 67, "maxInstancesPerUser": 63, "maxUpgradeSlots": 97, "name": "D61Z4dyU"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminCreateInventoryConfiguration \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 11 'AdminCreateInventoryConfiguration' test.out

#- 12 AdminGetInventoryConfiguration
$CLI_EXE \
    --sn inventory \
    --op AdminGetInventoryConfiguration \
    --inventoryConfigurationId 'yCgFsQUv' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 12 'AdminGetInventoryConfiguration' test.out

#- 13 AdminUpdateInventoryConfiguration
# body param: body
echo '{"code": "4N0uu058", "description": "kBpWjbQt", "initialMaxSlots": 73, "maxInstancesPerUser": 25, "maxUpgradeSlots": 67, "name": "g2A1DPIo"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminUpdateInventoryConfiguration \
    --inventoryConfigurationId 'MpAUehXe' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 13 'AdminUpdateInventoryConfiguration' test.out

#- 14 AdminDeleteInventoryConfiguration
$CLI_EXE \
    --sn inventory \
    --op AdminDeleteInventoryConfiguration \
    --inventoryConfigurationId 'KAwdRccp' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 14 'AdminDeleteInventoryConfiguration' test.out

#- 15 AdminListItemTypes
$CLI_EXE \
    --sn inventory \
    --op AdminListItemTypes \
    --namespace $AB_NAMESPACE \
    --limit '86' \
    --offset '81' \
    --sortBy 'createdAt:asc' \
    > test.out 2>&1
eval_tap $? 15 'AdminListItemTypes' test.out

#- 16 AdminCreateItemType
# body param: body
echo '{"name": "R0QGtxND"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminCreateItemType \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 16 'AdminCreateItemType' test.out

#- 17 AdminDeleteItemType
$CLI_EXE \
    --sn inventory \
    --op AdminDeleteItemType \
    --itemTypeName 'Vu5qZE8o' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 17 'AdminDeleteItemType' test.out

#- 18 AdminListTags
$CLI_EXE \
    --sn inventory \
    --op AdminListTags \
    --namespace $AB_NAMESPACE \
    --limit '67' \
    --offset '85' \
    --owner '6RmL200X' \
    --sortBy 'createdAt:asc' \
    > test.out 2>&1
eval_tap $? 18 'AdminListTags' test.out

#- 19 AdminCreateTag
# body param: body
echo '{"name": "clNzBUlH", "owner": "SERVER"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminCreateTag \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 19 'AdminCreateTag' test.out

#- 20 AdminDeleteTag
$CLI_EXE \
    --sn inventory \
    --op AdminDeleteTag \
    --namespace $AB_NAMESPACE \
    --tagName 'X4Ez3xmU' \
    > test.out 2>&1
eval_tap $? 20 'AdminDeleteTag' test.out

#- 21 AdminConsumeUserItem
# body param: body
echo '{"qty": 8, "slotId": "agMGWgeV", "sourceItemId": "RtnLgQYB"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminConsumeUserItem \
    --inventoryId '7h0u6KJb' \
    --namespace $AB_NAMESPACE \
    --userId 'syjJssgN' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 21 'AdminConsumeUserItem' test.out

#- 22 AdminBulkUpdateMyItems
# body param: body
echo '[{"customAttributes": {"dAl2n4Cs": {}, "q6FnVXog": {}, "LGRK0ZA1": {}}, "serverCustomAttributes": {"heC4U095": {}, "2XxazsbJ": {}, "gGOz9g2X": {}}, "slotId": "EDk6AxO3", "sourceItemId": "1AE8BewH", "tags": ["suvDXTRg", "5yXE3loX", "sh6AzIzI"], "type": "4WIAdfNA"}, {"customAttributes": {"IBf0vFxe": {}, "wkUsRgkb": {}, "ei6lRWRU": {}}, "serverCustomAttributes": {"GWyJC9Hx": {}, "5lkavrtc": {}, "xmGGkRec": {}}, "slotId": "eD9NpzmI", "sourceItemId": "r0rhwOBL", "tags": ["DmTqACMt", "Fz9CrqXQ", "cTurN28a"], "type": "5d6RSS1h"}, {"customAttributes": {"tcBt7miB": {}, "SXTfgdZS": {}, "qAkgJO0H": {}}, "serverCustomAttributes": {"A4bUesv4": {}, "lyQ20c35": {}, "Mv56b6UI": {}}, "slotId": "TGWBq5FA", "sourceItemId": "cYAwogHy", "tags": ["yg9Cbe29", "MTPZeAza", "xwsj5um3"], "type": "kmTiieJz"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminBulkUpdateMyItems \
    --inventoryId 'X4YCSc4J' \
    --namespace $AB_NAMESPACE \
    --userId '1knoI8r3' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 22 'AdminBulkUpdateMyItems' test.out

#- 23 AdminSaveItemToInventory
# body param: body
echo '{"customAttributes": {"ZKEadf7k": {}, "fRmdTs73": {}, "AtgxbSzh": {}}, "qty": 55, "serverCustomAttributes": {"nVM1kfLV": {}, "vxADITvW": {}, "EVLT9rv3": {}}, "slotId": "dgHhsm0o", "slotUsed": 17, "sourceItemId": "CEBXNgHB", "tags": ["nYXDNfOk", "WKbKd6o3", "yvHw7tG1"], "type": "hTR9RZs8"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminSaveItemToInventory \
    --inventoryId 'ujFU3O6u' \
    --namespace $AB_NAMESPACE \
    --userId 'DkI0osLn' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 23 'AdminSaveItemToInventory' test.out

#- 24 AdminBulkRemoveItems
# body param: body
echo '[{"slotId": "i4zULFGs", "sourceItemId": "mwrTQPSq"}, {"slotId": "Cu2sSWQl", "sourceItemId": "F9W7OWxp"}, {"slotId": "uK0lsiTk", "sourceItemId": "EugrGqq5"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminBulkRemoveItems \
    --inventoryId 'grUB4DL4' \
    --namespace $AB_NAMESPACE \
    --userId 'Lrj2AEZv' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 24 'AdminBulkRemoveItems' test.out

#- 25 AdminSaveItem
# body param: body
echo '{"customAttributes": {"D2Gcqri2": {}, "tJ45vA5V": {}, "NJ6bi045": {}}, "inventoryConfigurationCode": "7YAwfEKb", "qty": 81, "serverCustomAttributes": {"rgMAhV8P": {}, "P13eBIb0": {}, "Rla1tdED": {}}, "slotId": "ZhpWw1LR", "slotUsed": 73, "sourceItemId": "u4FIj1dm", "tags": ["BNeEkIGv", "yACzsx1c", "kYrtujB8"], "type": "3ZXPvADZ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminSaveItem \
    --namespace $AB_NAMESPACE \
    --userId '5JlHY1G2' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 25 'AdminSaveItem' test.out

#- 26 PublicListInventoryConfigurations
$CLI_EXE \
    --sn inventory \
    --op PublicListInventoryConfigurations \
    --namespace $AB_NAMESPACE \
    --code 'aD1VJ5zY' \
    --limit '84' \
    --offset '63' \
    --sortBy 'createdAt:asc' \
    > test.out 2>&1
eval_tap $? 26 'PublicListInventoryConfigurations' test.out

#- 27 PublicListItemTypes
$CLI_EXE \
    --sn inventory \
    --op PublicListItemTypes \
    --namespace $AB_NAMESPACE \
    --limit '62' \
    --offset '11' \
    --sortBy 'name:desc' \
    > test.out 2>&1
eval_tap $? 27 'PublicListItemTypes' test.out

#- 28 PublicListTags
$CLI_EXE \
    --sn inventory \
    --op PublicListTags \
    --namespace $AB_NAMESPACE \
    --limit '64' \
    --offset '99' \
    --sortBy 'name:desc' \
    > test.out 2>&1
eval_tap $? 28 'PublicListTags' test.out

#- 29 PublicListInventories
$CLI_EXE \
    --sn inventory \
    --op PublicListInventories \
    --namespace $AB_NAMESPACE \
    --inventoryConfigurationCode 'ky7gY1ac' \
    --limit '56' \
    --offset '10' \
    --sortBy 'createdAt:asc' \
    > test.out 2>&1
eval_tap $? 29 'PublicListInventories' test.out

#- 30 PublicConsumeMyItem
# body param: body
echo '{"qty": 85, "slotId": "uWyvRv4O", "sourceItemId": "1j4e5kQ9"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op PublicConsumeMyItem \
    --inventoryId 'itZucvim' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 30 'PublicConsumeMyItem' test.out

#- 31 PublicListItems
$CLI_EXE \
    --sn inventory \
    --op PublicListItems \
    --inventoryId '6xsA8Oiq' \
    --namespace $AB_NAMESPACE \
    --limit '29' \
    --offset '54' \
    --qtyGte '87' \
    --sortBy 'updatedAt:asc' \
    --sourceItemId '9sXhYk0e' \
    --tags 'lHV6cM8a' \
    > test.out 2>&1
eval_tap $? 31 'PublicListItems' test.out

#- 32 PublicBulkUpdateMyItems
# body param: body
echo '[{"customAttributes": {"QjlfnZSF": {}, "HEA3dPSu": {}, "XLMuvLV5": {}}, "slotId": "kLOB2uFe", "sourceItemId": "6k5ZQ3Sa", "tags": ["gLXaPd4s", "FkIkrbY1", "ij0ax7wj"]}, {"customAttributes": {"e41QwFqR": {}, "d6PMPWsX": {}, "XtnmxoSX": {}}, "slotId": "pfQfrMU0", "sourceItemId": "2wVNikHv", "tags": ["WHL3yIPH", "1R7BChjz", "9bMGof1l"]}, {"customAttributes": {"PdRwwiKy": {}, "rthhBvCR": {}, "LJsg61Sr": {}}, "slotId": "acK4cxEr", "sourceItemId": "j62ca0OY", "tags": ["G2AuvTfF", "dWU9fGwZ", "D5bulm8V"]}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op PublicBulkUpdateMyItems \
    --inventoryId 'r0HyJvRG' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 32 'PublicBulkUpdateMyItems' test.out

#- 33 PublicBulkRemoveMyItems
# body param: body
echo '[{"slotId": "RCiC7Jc0", "sourceItemId": "l3UAyJ1W"}, {"slotId": "f0w0IgsJ", "sourceItemId": "ZdBzuK4i"}, {"slotId": "KMzoawu7", "sourceItemId": "OIsaHBLK"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op PublicBulkRemoveMyItems \
    --inventoryId 'i0njMU6v' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 33 'PublicBulkRemoveMyItems' test.out

#- 34 PublicMoveMyItems
# body param: body
echo '{"items": [{"qty": 15, "slotId": "00xSfcwf", "sourceItemId": "ntGtSOg8"}, {"qty": 20, "slotId": "l7HxHRgu", "sourceItemId": "g0GLpV5D"}, {"qty": 16, "slotId": "oVFUtYCp", "sourceItemId": "zTTSOUsx"}], "srcInventoryId": "kbM3iIdo"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op PublicMoveMyItems \
    --inventoryId 'z1ZKL4sm' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 34 'PublicMoveMyItems' test.out

#- 35 PublicGetItem
$CLI_EXE \
    --sn inventory \
    --op PublicGetItem \
    --inventoryId 'CdfMKrq3' \
    --namespace $AB_NAMESPACE \
    --slotId 'atJhwgXb' \
    --sourceItemId 'Y5bNhZLh' \
    > test.out 2>&1
eval_tap $? 35 'PublicGetItem' test.out


# remove artifacts
rm -f "$CLI_TOKEN_FILE"
rm -f "$TEMP_JSON_INPUT"
rm -f "$TEMP_FILE_UPLOAD"

exit $EXIT_CODE