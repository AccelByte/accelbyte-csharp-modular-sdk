#!/usr/bin/env bash

# Copyright (c) 2021 AccelByte Inc. All Rights Reserved.
# This is licensed software from AccelByte Inc, for limitations
# and restrictions contact your company contract manager.

# This code is generated by tool. DO NOT EDIT.

# Meta:
# - random seed: 
# - template file: 

# Instructions:
# - Run the Justice SDK Mock Server first before running this script.

export AB_BASE_URL="http://127.0.0.1:8080"
export AB_CLIENT_ID="admin"
export AB_CLIENT_SECRET="admin"
export AB_NAMESPACE="test"
export AB_APP_NAME="UnitTest"

EXIT_CODE=0

eval_tap() {
  if [ $1 -eq 0 ]; then
    echo "ok $2 - $3"
  else
    EXIT_CODE=1
    echo "not ok $2 - $3"
    sed 's/^/# /g' $4
  fi
  rm -f $4
}

CLI_EXE="AccelByte.Sdk.Sample.Cli"
CLI_TOKEN_FILE="$(dirname "$(which $CLI_EXE)")/token.json"
TEMP_JSON_INPUT="input_json.json"
TEMP_FILE_UPLOAD="file_upload.bin"

echo "TAP version 13"
echo "1..35"

#- 1 Login
$CLI_EXE --op login --lt user --user user --pass user > test.out 2>&1
eval_tap $? 1 'Login' test.out

if [ $EXIT_CODE -ne 0 ]; then
  echo "Bail out! Login failed."
  exit $EXIT_CODE
fi

# echo "foo" > "$CLI_TOKEN_FILE"

#- 2 AdminCreateChainingOperations
# body param: body
echo '{"message": "PJjT7OSO", "operations": [{"consumeItems": [{"inventoryId": "GByXNssN", "qty": 36, "slotId": "DKYKu5y8", "sourceItemId": "X0cOq7s9"}, {"inventoryId": "lMvVocHS", "qty": 14, "slotId": "SZX8oOis", "sourceItemId": "GSNYZ7e1"}, {"inventoryId": "SByxfLtC", "qty": 80, "slotId": "j9nAO7eC", "sourceItemId": "wSvwJODj"}], "createItems": [{"customAttributes": {"iflBUddQ": {}, "9bPLiCNS": {}, "GcVNHYan": {}}, "inventoryConfigurationCode": "NL0canl7", "inventoryId": "ACVcnCqJ", "qty": 13, "serverCustomAttributes": {"V5HVFbph": {}, "8fohheJB": {}, "VwQTZXDZ": {}}, "slotId": "BKcpyJL4", "slotUsed": 89, "sourceItemId": "rdNWPDfm", "tags": ["X1glCxIQ", "OTspxvQf", "kR6wwY85"], "toSpecificInventory": true, "type": "WlEpsfwT"}, {"customAttributes": {"eLYfXI3x": {}, "P0GqosiA": {}, "5Z7YDW35": {}}, "inventoryConfigurationCode": "BLlGHh9p", "inventoryId": "sQS71xeI", "qty": 30, "serverCustomAttributes": {"ER4SyIE5": {}, "yPDtsvko": {}, "CKQdNJb5": {}}, "slotId": "4JjwGpVS", "slotUsed": 21, "sourceItemId": "O8jTFBxW", "tags": ["CyxTCR31", "UBXbpd7z", "qsIjr8Nf"], "toSpecificInventory": true, "type": "1Y4CNx40"}, {"customAttributes": {"F2PklSIv": {}, "847yQhpC": {}, "7UU5MI7D": {}}, "inventoryConfigurationCode": "f6gpOL0Y", "inventoryId": "8S5yxmzR", "qty": 16, "serverCustomAttributes": {"rJxFfj0I": {}, "4qsfPNRN": {}, "cjcgcQXi": {}}, "slotId": "4KlgF8bK", "slotUsed": 16, "sourceItemId": "DiTZeggV", "tags": ["Ez8e2HdB", "avO2opLO", "GQ0wKHmz"], "toSpecificInventory": true, "type": "PZ3cE5eK"}], "removeItems": [{"inventoryId": "yJPn1c5t", "slotId": "FoynheCG", "sourceItemId": "hy0VVBFK"}, {"inventoryId": "ZazDLZxS", "slotId": "bWUyvFFh", "sourceItemId": "B5Rcv3EG"}, {"inventoryId": "WhGoK5XI", "slotId": "cOHCorye", "sourceItemId": "7cyCxjeS"}], "targetUserId": "kT3B9waM", "updateItems": [{"customAttributes": {"Ot7GfD0i": {}, "ffQb45XG": {}, "X5WgyL8Z": {}}, "inventoryId": "QbeFpjFD", "serverCustomAttributes": {"9DrcMVqm": {}, "NvofzNlM": {}, "IkHSCmWG": {}}, "slotId": "CQ0Gzz5v", "sourceItemId": "l4XnWrJT", "tags": ["AVb7m30y", "e5iENmIz", "UiDfv6cr"], "type": "FQx7he29"}, {"customAttributes": {"t0Kueyyw": {}, "u4WZCFIb": {}, "NBXGKbjY": {}}, "inventoryId": "BUaZYCqb", "serverCustomAttributes": {"T648WUrA": {}, "bJzp9cHJ": {}, "G7VIqz0u": {}}, "slotId": "bRVpoepQ", "sourceItemId": "VybvNbCS", "tags": ["qzQvB8o8", "jjx1DRPX", "YvMZJm8L"], "type": "LunARirp"}, {"customAttributes": {"btyw3TW5": {}, "mT6X5Nah": {}, "SaF5Vmro": {}}, "inventoryId": "bi4mMe6l", "serverCustomAttributes": {"9nQcpmra": {}, "qE8ISntm": {}, "sk3bwWf1": {}}, "slotId": "r8tthKR7", "sourceItemId": "1R54S2gr", "tags": ["CISWBKXV", "KXqPaiYH", "o13RYBNf"], "type": "DDyXGXrE"}]}, {"consumeItems": [{"inventoryId": "KUtxV8JR", "qty": 93, "slotId": "e5fHCVcJ", "sourceItemId": "c4yX8AYl"}, {"inventoryId": "Jen0LXk8", "qty": 7, "slotId": "TrMPM1qq", "sourceItemId": "7gqLJcd1"}, {"inventoryId": "IJt56ypH", "qty": 31, "slotId": "8jXeNyoR", "sourceItemId": "HLzyCVOa"}], "createItems": [{"customAttributes": {"Ogl4WCLg": {}, "hUGZX413": {}, "KQ7JfTYP": {}}, "inventoryConfigurationCode": "Fz9g2u43", "inventoryId": "3YFnSPXd", "qty": 86, "serverCustomAttributes": {"sfrLt7TF": {}, "MVaTSCnx": {}, "QPilt1LU": {}}, "slotId": "e4Hnjo2Y", "slotUsed": 21, "sourceItemId": "MG6XDsy7", "tags": ["0PipZUPJ", "XDPrC7tR", "lVe5GDrM"], "toSpecificInventory": false, "type": "sH1sxT1t"}, {"customAttributes": {"2rhWIuyJ": {}, "QCstKKm9": {}, "hoNsRTWJ": {}}, "inventoryConfigurationCode": "zUgPODyp", "inventoryId": "sPFUlrsL", "qty": 97, "serverCustomAttributes": {"qU2k5GJN": {}, "HZjBGMVR": {}, "yuvn2T67": {}}, "slotId": "7PLn24s9", "slotUsed": 42, "sourceItemId": "MlQ113zk", "tags": ["eoJ9sS5F", "6dWT4Kw8", "VUsRRKdC"], "toSpecificInventory": true, "type": "XyoH6IG6"}, {"customAttributes": {"Z09KPaqP": {}, "lTlYQIPH": {}, "KIrhmFAv": {}}, "inventoryConfigurationCode": "7auCTPsf", "inventoryId": "5BH2BE0k", "qty": 79, "serverCustomAttributes": {"pvvoEnSX": {}, "c61SuU5Y": {}, "c30SQkgj": {}}, "slotId": "FCUXPNOC", "slotUsed": 5, "sourceItemId": "Kk3iPLm2", "tags": ["hizWC8ab", "Xvw0vFxT", "RnA3cTeV"], "toSpecificInventory": false, "type": "qG0m8iZD"}], "removeItems": [{"inventoryId": "8GTslikk", "slotId": "45Cca3Md", "sourceItemId": "BDaflu6s"}, {"inventoryId": "etZhtQ2K", "slotId": "MG5L9fvp", "sourceItemId": "WZuyj8G2"}, {"inventoryId": "mpDQGbXS", "slotId": "NyamqY70", "sourceItemId": "QCWDlhgn"}], "targetUserId": "i3cOoz47", "updateItems": [{"customAttributes": {"ZgfpvVG0": {}, "NIgUZoGV": {}, "LO2LbowJ": {}}, "inventoryId": "DnbIK0Zi", "serverCustomAttributes": {"cuYqhtnU": {}, "MZB47qOG": {}, "Vx3kecVt": {}}, "slotId": "YkuES54d", "sourceItemId": "RUoX4Wxi", "tags": ["LumkDGfA", "rEoVAYtA", "bSnogJEq"], "type": "T3A57FHr"}, {"customAttributes": {"pImbyCrs": {}, "3eB98dIG": {}, "1hWbrL8z": {}}, "inventoryId": "nh0XKNLV", "serverCustomAttributes": {"Gonhi0u8": {}, "HBgx1nOX": {}, "8OZjNtLm": {}}, "slotId": "dcuyXRlj", "sourceItemId": "QpKRzIEB", "tags": ["8AWK5f4Z", "BK4Em7BA", "nbSaZlft"], "type": "Tk9ZeRfo"}, {"customAttributes": {"ooJBCvI0": {}, "dGjN6VvN": {}, "UzsuZwpQ": {}}, "inventoryId": "4qV7rOLr", "serverCustomAttributes": {"zIPRJPxy": {}, "npGCJoqA": {}, "zkynFax3": {}}, "slotId": "Qtr4lj3j", "sourceItemId": "3lN6vwVs", "tags": ["iQeKPo0t", "ACsVjVv7", "H9FL6uub"], "type": "BsAfbppK"}]}, {"consumeItems": [{"inventoryId": "EJmCKBFg", "qty": 38, "slotId": "XCDBQHCl", "sourceItemId": "R800V9IC"}, {"inventoryId": "Biva3IAH", "qty": 11, "slotId": "IKkkMunS", "sourceItemId": "J8OE0FxZ"}, {"inventoryId": "OarJA5gn", "qty": 13, "slotId": "mCY5fqLb", "sourceItemId": "NbOqkbgt"}], "createItems": [{"customAttributes": {"HZ7w81gZ": {}, "Txt54EJU": {}, "T5XXFirq": {}}, "inventoryConfigurationCode": "XwjMc3xe", "inventoryId": "RXKNF4IZ", "qty": 90, "serverCustomAttributes": {"EODIUoiR": {}, "zuLwl3QE": {}, "YxubQ0fs": {}}, "slotId": "1SBTAwNu", "slotUsed": 75, "sourceItemId": "fVZDD7k5", "tags": ["7LtD6Z3j", "hIp0nQQJ", "RPKzL4V6"], "toSpecificInventory": true, "type": "BxOjxt5I"}, {"customAttributes": {"uujwx3jR": {}, "qFQhVI35": {}, "pqGkHyI1": {}}, "inventoryConfigurationCode": "XN8zL7rX", "inventoryId": "1ygLDxzX", "qty": 2, "serverCustomAttributes": {"a4Kx7zjF": {}, "UXDH78JZ": {}, "2N4Bhq8e": {}}, "slotId": "KsjtZuZR", "slotUsed": 36, "sourceItemId": "bfeMuatj", "tags": ["BLBnmEyi", "KRKwkCmr", "TVD9Mg9x"], "toSpecificInventory": false, "type": "59uD1p23"}, {"customAttributes": {"bG8yDmSc": {}, "3YWWARNZ": {}, "Amd5BuLq": {}}, "inventoryConfigurationCode": "Es5UuI5w", "inventoryId": "rSgm98vp", "qty": 58, "serverCustomAttributes": {"YZuS5Jun": {}, "O2PsTDOn": {}, "IS5GYpYH": {}}, "slotId": "FOJ5qNRw", "slotUsed": 56, "sourceItemId": "KRhuvkke", "tags": ["sALlfAOY", "8iMagO1K", "qFkE5Daa"], "toSpecificInventory": false, "type": "LQRkEdet"}], "removeItems": [{"inventoryId": "iSIEqht0", "slotId": "eYnESiuc", "sourceItemId": "iyBWkpCL"}, {"inventoryId": "shoZq8cK", "slotId": "40hnhm5y", "sourceItemId": "nMJ47y6S"}, {"inventoryId": "lSJlXCqB", "slotId": "mWFvECM4", "sourceItemId": "NKxNo7Kq"}], "targetUserId": "NJOFl7PZ", "updateItems": [{"customAttributes": {"o5sAhnEH": {}, "nTOythrJ": {}, "IU3sGH5M": {}}, "inventoryId": "xA2bqWOC", "serverCustomAttributes": {"7uegAV4F": {}, "F45mYIqH": {}, "jdIdg7Ud": {}}, "slotId": "llLioBlq", "sourceItemId": "msMtFAuE", "tags": ["o9lI6f6p", "EtA8HqhD", "fTujGTbi"], "type": "I3qyloRS"}, {"customAttributes": {"KuekS90O": {}, "jfaTbvuR": {}, "BdNsVSow": {}}, "inventoryId": "0U6UXOe6", "serverCustomAttributes": {"2iPPBj8i": {}, "1Iz90mvx": {}, "CDo4DymY": {}}, "slotId": "NzKF7XQY", "sourceItemId": "LPrHPiBK", "tags": ["lrV2SWNV", "l0usetYW", "FALnRaXc"], "type": "yVQNe8Dn"}, {"customAttributes": {"UelVFLiw": {}, "odP0xQy9": {}, "w5NINF6G": {}}, "inventoryId": "00998QOc", "serverCustomAttributes": {"b5RdMCXe": {}, "6qXqOh9r": {}, "0Fl9R8up": {}}, "slotId": "y8uarNQg", "sourceItemId": "BBs6RI8R", "tags": ["OCihSXwI", "ckXzMu3u", "vyEgZBTI"], "type": "RHARqMwF"}]}], "requestId": "eWesxmNg"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminCreateChainingOperations \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 2 'AdminCreateChainingOperations' test.out

#- 3 AdminListInventories
$CLI_EXE \
    --sn inventory \
    --op AdminListInventories \
    --namespace $AB_NAMESPACE \
    --inventoryConfigurationCode 'TzIQxsN1' \
    --limit '29' \
    --offset '96' \
    --sortBy 'inventoryConfigurationCode' \
    --userId 'rW1wqUa2' \
    > test.out 2>&1
eval_tap $? 3 'AdminListInventories' test.out

#- 4 AdminCreateInventory
# body param: body
echo '{"inventoryConfigurationCode": "6tyAiJOi", "userId": "3eUzS4ti"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminCreateInventory \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 4 'AdminCreateInventory' test.out

#- 5 AdminGetInventory
$CLI_EXE \
    --sn inventory \
    --op AdminGetInventory \
    --inventoryId '1YDOFQfu' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 5 'AdminGetInventory' test.out

#- 6 AdminUpdateInventory
# body param: body
echo '{"incMaxSlots": 22}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminUpdateInventory \
    --inventoryId 'VGquVjgf' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 6 'AdminUpdateInventory' test.out

#- 7 DeleteInventory
# body param: body
echo '{"message": "eN1JieAx"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op DeleteInventory \
    --inventoryId '94qphG8H' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 7 'DeleteInventory' test.out

#- 8 AdminListItems
$CLI_EXE \
    --sn inventory \
    --op AdminListItems \
    --inventoryId 'oWB4ucH1' \
    --namespace $AB_NAMESPACE \
    --limit '64' \
    --offset '12' \
    --qtyGte '9' \
    --sortBy 'createdAt' \
    --sourceItemId 'daz84jrp' \
    --tags '3melXoxM' \
    > test.out 2>&1
eval_tap $? 8 'AdminListItems' test.out

#- 9 AdminGetInventoryItem
$CLI_EXE \
    --sn inventory \
    --op AdminGetInventoryItem \
    --inventoryId 'vDlFIyja' \
    --namespace $AB_NAMESPACE \
    --slotId 'MkJE880a' \
    --sourceItemId 'M85ypRMs' \
    > test.out 2>&1
eval_tap $? 9 'AdminGetInventoryItem' test.out

#- 10 AdminListInventoryConfigurations
$CLI_EXE \
    --sn inventory \
    --op AdminListInventoryConfigurations \
    --namespace $AB_NAMESPACE \
    --code 'AMb7Qexb' \
    --limit '91' \
    --offset '5' \
    --sortBy 'updatedAt' \
    > test.out 2>&1
eval_tap $? 10 'AdminListInventoryConfigurations' test.out

#- 11 AdminCreateInventoryConfiguration
# body param: body
echo '{"code": "Br1t6xHf", "description": "66GzNjac", "initialMaxSlots": 35, "maxInstancesPerUser": 46, "maxUpgradeSlots": 92, "name": "L2VJZwzN"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminCreateInventoryConfiguration \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 11 'AdminCreateInventoryConfiguration' test.out

#- 12 AdminGetInventoryConfiguration
$CLI_EXE \
    --sn inventory \
    --op AdminGetInventoryConfiguration \
    --inventoryConfigurationId 'SAi4tTkY' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 12 'AdminGetInventoryConfiguration' test.out

#- 13 AdminUpdateInventoryConfiguration
# body param: body
echo '{"code": "MhaHRjKt", "description": "DsSxTO49", "initialMaxSlots": 94, "maxInstancesPerUser": 23, "maxUpgradeSlots": 9, "name": "dmOFjdcG"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminUpdateInventoryConfiguration \
    --inventoryConfigurationId 'P5y8P4w1' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 13 'AdminUpdateInventoryConfiguration' test.out

#- 14 AdminDeleteInventoryConfiguration
$CLI_EXE \
    --sn inventory \
    --op AdminDeleteInventoryConfiguration \
    --inventoryConfigurationId 'sOBqK0cO' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 14 'AdminDeleteInventoryConfiguration' test.out

#- 15 AdminListItemTypes
$CLI_EXE \
    --sn inventory \
    --op AdminListItemTypes \
    --namespace $AB_NAMESPACE \
    --limit '45' \
    --offset '4' \
    --sortBy 'createdAt' \
    > test.out 2>&1
eval_tap $? 15 'AdminListItemTypes' test.out

#- 16 AdminCreateItemType
# body param: body
echo '{"name": "hP2gos5D"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminCreateItemType \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 16 'AdminCreateItemType' test.out

#- 17 AdminDeleteItemType
$CLI_EXE \
    --sn inventory \
    --op AdminDeleteItemType \
    --itemTypeName 'k4vDjbPo' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 17 'AdminDeleteItemType' test.out

#- 18 AdminListTags
$CLI_EXE \
    --sn inventory \
    --op AdminListTags \
    --namespace $AB_NAMESPACE \
    --limit '5' \
    --offset '45' \
    --owner 'K9XgzXds' \
    --sortBy 'name:asc' \
    > test.out 2>&1
eval_tap $? 18 'AdminListTags' test.out

#- 19 AdminCreateTag
# body param: body
echo '{"name": "p5PDCYyP", "owner": "CLIENT"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminCreateTag \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 19 'AdminCreateTag' test.out

#- 20 AdminDeleteTag
$CLI_EXE \
    --sn inventory \
    --op AdminDeleteTag \
    --namespace $AB_NAMESPACE \
    --tagName 'BtZeHDZv' \
    > test.out 2>&1
eval_tap $? 20 'AdminDeleteTag' test.out

#- 21 AdminConsumeUserItem
# body param: body
echo '{"qty": 46, "slotId": "8OGlsjth", "sourceItemId": "eAlVz2Fq"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminConsumeUserItem \
    --inventoryId '1cLgxiyG' \
    --namespace $AB_NAMESPACE \
    --userId 'YSp876xL' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 21 'AdminConsumeUserItem' test.out

#- 22 AdminBulkUpdateMyItems
# body param: body
echo '[{"customAttributes": {"t3eA0P1r": {}, "FFQV71MG": {}, "euTGkPfX": {}}, "serverCustomAttributes": {"CyErnUOz": {}, "LMLZa7Eg": {}, "jsuoioZQ": {}}, "slotId": "K2CQd27q", "sourceItemId": "ZiPBh3Wj", "tags": ["KNLpDlOa", "30e4HgYr", "K22msXRM"], "type": "ORIMHzwM"}, {"customAttributes": {"4tWp1lJg": {}, "ecJLu0H8": {}, "C1Ag1y0h": {}}, "serverCustomAttributes": {"h2bwKOZo": {}, "8tuUoumT": {}, "Zctg12on": {}}, "slotId": "e4ebHjMi", "sourceItemId": "Vrc2Ly8N", "tags": ["Kji742Qn", "IbZQjSzQ", "sXIoxaM5"], "type": "TUwQTzPM"}, {"customAttributes": {"9cCKFL3I": {}, "RRGOvIUQ": {}, "UHfrtf3s": {}}, "serverCustomAttributes": {"zuyfI7CG": {}, "AMlH8FRg": {}, "cLPHtGrn": {}}, "slotId": "iOuvKJPq", "sourceItemId": "zJRWi3SM", "tags": ["ruluMUrk", "KxybV35C", "l5PekCVx"], "type": "O8Lu51OO"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminBulkUpdateMyItems \
    --inventoryId 'apolf2WF' \
    --namespace $AB_NAMESPACE \
    --userId 'aL7N1oh4' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 22 'AdminBulkUpdateMyItems' test.out

#- 23 AdminSaveItemToInventory
# body param: body
echo '{"customAttributes": {"SlrK9VtD": {}, "5t95i6iV": {}, "h5Ejw2lr": {}}, "qty": 4, "serverCustomAttributes": {"1Hd5pQew": {}, "caAb6ISQ": {}, "WOFsxXAC": {}}, "slotId": "LAzUvIBw", "slotUsed": 14, "sourceItemId": "xGruIkH6", "tags": ["i2G3vZvP", "F5KDDFfD", "XCYB4He3"], "type": "yjUux3Aw"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminSaveItemToInventory \
    --inventoryId 'Ho6VtCC5' \
    --namespace $AB_NAMESPACE \
    --userId '3QibMbZs' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 23 'AdminSaveItemToInventory' test.out

#- 24 AdminBulkRemoveItems
# body param: body
echo '[{"slotId": "MrBsxiyC", "sourceItemId": "xnODFfjL"}, {"slotId": "w10oWisL", "sourceItemId": "OP0gZsqb"}, {"slotId": "Z2lZ65Hj", "sourceItemId": "wxzlD4C4"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminBulkRemoveItems \
    --inventoryId 'opiFEZ27' \
    --namespace $AB_NAMESPACE \
    --userId 'j8olAPQL' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 24 'AdminBulkRemoveItems' test.out

#- 25 AdminSaveItem
# body param: body
echo '{"customAttributes": {"q3vTB9sr": {}, "2C0ymMqs": {}, "MLjwRqvl": {}}, "inventoryConfigurationCode": "mXOyND6n", "qty": 16, "serverCustomAttributes": {"avHH86Zw": {}, "RTVsLa71": {}, "JwvE30vB": {}}, "slotId": "bhEDx4dy", "slotUsed": 53, "sourceItemId": "iMwB8FqR", "tags": ["Q9sYclUp", "m9zaWVCc", "uUszfMyc"], "type": "n4M7Sujw"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminSaveItem \
    --namespace $AB_NAMESPACE \
    --userId 'BFAEYIud' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 25 'AdminSaveItem' test.out

#- 26 PublicListInventoryConfigurations
$CLI_EXE \
    --sn inventory \
    --op PublicListInventoryConfigurations \
    --namespace $AB_NAMESPACE \
    --code 'BUElNys1' \
    --limit '0' \
    --offset '50' \
    --sortBy 'createdAt:desc' \
    > test.out 2>&1
eval_tap $? 26 'PublicListInventoryConfigurations' test.out

#- 27 PublicListItemTypes
$CLI_EXE \
    --sn inventory \
    --op PublicListItemTypes \
    --namespace $AB_NAMESPACE \
    --limit '47' \
    --offset '47' \
    --sortBy 'name:desc' \
    > test.out 2>&1
eval_tap $? 27 'PublicListItemTypes' test.out

#- 28 PublicListTags
$CLI_EXE \
    --sn inventory \
    --op PublicListTags \
    --namespace $AB_NAMESPACE \
    --limit '62' \
    --offset '68' \
    --sortBy 'name:desc' \
    > test.out 2>&1
eval_tap $? 28 'PublicListTags' test.out

#- 29 PublicListInventories
$CLI_EXE \
    --sn inventory \
    --op PublicListInventories \
    --namespace $AB_NAMESPACE \
    --inventoryConfigurationCode 'MRy9CP7F' \
    --limit '44' \
    --offset '18' \
    --sortBy 'updatedAt:desc' \
    > test.out 2>&1
eval_tap $? 29 'PublicListInventories' test.out

#- 30 PublicConsumeMyItem
# body param: body
echo '{"qty": 61, "slotId": "XcUVs6DS", "sourceItemId": "PnToHvjo"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op PublicConsumeMyItem \
    --inventoryId 'ji7L5jgC' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 30 'PublicConsumeMyItem' test.out

#- 31 PublicListItems
$CLI_EXE \
    --sn inventory \
    --op PublicListItems \
    --inventoryId 'fv0Mqi0D' \
    --namespace $AB_NAMESPACE \
    --limit '21' \
    --offset '26' \
    --qtyGte '40' \
    --sortBy 'qty:desc' \
    --sourceItemId '3Q9xGIVo' \
    --tags 'imSc6a0V' \
    > test.out 2>&1
eval_tap $? 31 'PublicListItems' test.out

#- 32 PublicBulkUpdateMyItems
# body param: body
echo '[{"customAttributes": {"7PYJDDLY": {}, "xnDHEDvM": {}, "pVzDnueR": {}}, "slotId": "0GAwHKc8", "sourceItemId": "ME7sfwj2", "tags": ["qj8Nfrnu", "MavG43EK", "z327WGPQ"]}, {"customAttributes": {"pUq3v1Sz": {}, "li6M0OZI": {}, "l3DGYWhR": {}}, "slotId": "6ROC1Ea2", "sourceItemId": "4Figbq9M", "tags": ["EHVnZnbB", "dfnWYHoM", "w1Ue7mfS"]}, {"customAttributes": {"cOCFHRcl": {}, "jwLLOUDg": {}, "9VyuRf2c": {}}, "slotId": "MRh8ePty", "sourceItemId": "vL9NQQ7z", "tags": ["rGmpI8Jz", "0T47AYVo", "mNIQnhzW"]}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op PublicBulkUpdateMyItems \
    --inventoryId 'iNcDSSJx' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 32 'PublicBulkUpdateMyItems' test.out

#- 33 PublicBulkRemoveMyItems
# body param: body
echo '[{"slotId": "Ejs15AVg", "sourceItemId": "u6Q3rYaE"}, {"slotId": "eO10EujI", "sourceItemId": "XQEq4xMo"}, {"slotId": "2JCyDr3T", "sourceItemId": "fIM0nkB7"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op PublicBulkRemoveMyItems \
    --inventoryId 'PNoSIMCe' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 33 'PublicBulkRemoveMyItems' test.out

#- 34 PublicMoveMyItems
# body param: body
echo '{"items": [{"qty": 23, "slotId": "B3q09hn3", "sourceItemId": "m1c0GO4l"}, {"qty": 45, "slotId": "1Hgpol7x", "sourceItemId": "R9ukyHK9"}, {"qty": 20, "slotId": "D3wG0j4V", "sourceItemId": "1mYFlqgr"}], "srcInventoryId": "BeRgIgE6"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op PublicMoveMyItems \
    --inventoryId 'ZLj3Yixg' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 34 'PublicMoveMyItems' test.out

#- 35 PublicGetItem
$CLI_EXE \
    --sn inventory \
    --op PublicGetItem \
    --inventoryId 'xDXrnWqt' \
    --namespace $AB_NAMESPACE \
    --slotId 'YduAj0P3' \
    --sourceItemId '96Ng2Nvh' \
    > test.out 2>&1
eval_tap $? 35 'PublicGetItem' test.out


# remove artifacts
rm -f "$CLI_TOKEN_FILE"
rm -f "$TEMP_JSON_INPUT"
rm -f "$TEMP_FILE_UPLOAD"

exit $EXIT_CODE