#!/usr/bin/env bash

# Copyright (c) 2021 AccelByte Inc. All Rights Reserved.
# This is licensed software from AccelByte Inc, for limitations
# and restrictions contact your company contract manager.

# This code is generated by tool. DO NOT EDIT.

# Meta:
# - random seed: 
# - template file: 

# Instructions:
# - Run the Justice SDK Mock Server first before running this script.

export AB_BASE_URL="http://127.0.0.1:8080"
export AB_CLIENT_ID="admin"
export AB_CLIENT_SECRET="admin"
export AB_NAMESPACE="test"
export AB_APP_NAME="UnitTest"

EXIT_CODE=0

eval_tap() {
  if [ $1 -eq 0 ]; then
    echo "ok $2 - $3"
  else
    EXIT_CODE=1
    echo "not ok $2 - $3"
    sed 's/^/# /g' $4
  fi
  rm -f $4
}

CLI_EXE="AccelByte.Sdk.Sample.Cli"
CLI_TOKEN_FILE="$(dirname "$(which $CLI_EXE)")/token.json"
TEMP_JSON_INPUT="input_json.json"
TEMP_FILE_UPLOAD="file_upload.bin"

echo "TAP version 13"
echo "1..44"

#- 1 Login
$CLI_EXE --op login --lt user --user user --pass user > test.out 2>&1
eval_tap $? 1 'Login' test.out

if [ $EXIT_CODE -ne 0 ]; then
  echo "Bail out! Login failed."
  exit $EXIT_CODE
fi

# echo "foo" > "$CLI_TOKEN_FILE"

#- 2 AdminCreateChainingOperations
# body param: body
echo '{"message": "ZkC5Ey9U", "operations": [{"consumeItems": [{"dateRangeValidation": false, "inventoryId": "9rGmrR0q", "options": ["ASwYYriG", "msyQDXlt", "XIzJtaOc"], "qty": 37, "slotId": "dJuVnWZU", "sourceItemId": "9N0gyDqo"}, {"dateRangeValidation": true, "inventoryId": "KoLYylNH", "options": ["bdkcnrB3", "KV6unaCp", "ccd3weRw"], "qty": 58, "slotId": "pkkUcEvZ", "sourceItemId": "xJym1Lt3"}, {"dateRangeValidation": true, "inventoryId": "3ZoYBaHe", "options": ["uIzuFgo5", "LRQ1CILK", "hcRGScMb"], "qty": 37, "slotId": "udmcy7PS", "sourceItemId": "sZ02F6L7"}], "createItems": [{"customAttributes": {"CvFAJwzF": {}, "DNjCjF9d": {}, "oDHxFY3J": {}}, "inventoryConfigurationCode": "BkGCvDvZ", "inventoryId": "faN8IBdT", "qty": 0, "serverCustomAttributes": {"88HXw1zN": {}, "k92J7qCJ": {}, "Ik6IGupy": {}}, "slotId": "TNuPp3MC", "slotUsed": 78, "source": "ECOMMERCE", "sourceItemId": "08WaDIav", "tags": ["pckTdNO9", "YQWD3Hfz", "jIisxZbe"], "toSpecificInventory": false, "type": "EUKpyx9v"}, {"customAttributes": {"yDYxhSAW": {}, "SpOcU9Ie": {}, "hW7a1Ps7": {}}, "inventoryConfigurationCode": "wUDRMCOM", "inventoryId": "ZnEYj4dy", "qty": 90, "serverCustomAttributes": {"cNg56tBp": {}, "WEzqbUYW": {}, "N92uXQLB": {}}, "slotId": "W841ToQP", "slotUsed": 92, "source": "ECOMMERCE", "sourceItemId": "q1zWHQPp", "tags": ["uK4Clp83", "lSY5G21a", "9jvOhXTI"], "toSpecificInventory": false, "type": "p5ZRYxIF"}, {"customAttributes": {"of8NUzMl": {}, "CA0Sthpc": {}, "TTrohAEy": {}}, "inventoryConfigurationCode": "g3EpvYSw", "inventoryId": "FAL6SNf1", "qty": 33, "serverCustomAttributes": {"6DKUmxa0": {}, "7BU7vEKj": {}, "ET43tHZn": {}}, "slotId": "tH64Zqmz", "slotUsed": 16, "source": "ECOMMERCE", "sourceItemId": "Iu9ewOBJ", "tags": ["kvBglPMJ", "zqz55mNf", "36PsXaJT"], "toSpecificInventory": true, "type": "hT62TNyN"}], "removeItems": [{"inventoryId": "wnjmVUaT", "slotId": "LCajtyoA", "sourceItemId": "PZISEXbl"}, {"inventoryId": "S3vjrN1Y", "slotId": "DEiWb6Ch", "sourceItemId": "ke4emRxG"}, {"inventoryId": "bwgpOMsj", "slotId": "BquGlS4N", "sourceItemId": "MDnLp0yK"}], "targetUserId": "EzO8z4bJ", "updateItems": [{"customAttributes": {"R6R2vrWC": {}, "hXiMwUfX": {}, "rNlobS9X": {}}, "inventoryId": "rTGTc9MP", "serverCustomAttributes": {"BWhIukWX": {}, "UmFMNNXs": {}, "BMrvIW22": {}}, "slotId": "RB85i4Lq", "sourceItemId": "LyB0GNN7", "tags": ["BrsmorbJ", "XLL7q3bq", "fRWaF8VD"], "type": "N6TJwXz0"}, {"customAttributes": {"1LGVoosg": {}, "Sx6X7jJE": {}, "sqaGQVwm": {}}, "inventoryId": "UDYiXdiC", "serverCustomAttributes": {"mqPv8kD9": {}, "er2s6rx2": {}, "P6m4LoYF": {}}, "slotId": "B5PtxYYY", "sourceItemId": "vQtuZek7", "tags": ["BpxNlEpm", "s9fOSb7n", "BWIeRyTX"], "type": "Fma3qa4p"}, {"customAttributes": {"yReEMqIx": {}, "qyxuMgRx": {}, "lC2cqMah": {}}, "inventoryId": "iSNMvHGR", "serverCustomAttributes": {"qoMnOJF7": {}, "ZYTuChsX": {}, "7IxTEUHL": {}}, "slotId": "ePyFlsDg", "sourceItemId": "OZPAHk0G", "tags": ["OzXbrlBm", "oXclxcKP", "kQs0QTZ9"], "type": "vGHe5Yqw"}]}, {"consumeItems": [{"dateRangeValidation": true, "inventoryId": "eewk5BUr", "options": ["O7Sk414r", "vXkMx7rq", "4xXnDJoU"], "qty": 82, "slotId": "uNIv8TbC", "sourceItemId": "fuRWTE0d"}, {"dateRangeValidation": true, "inventoryId": "NwpLh7Uz", "options": ["15lRHrBc", "sczKtVg4", "gvfMa4LL"], "qty": 56, "slotId": "IdEPZ8lY", "sourceItemId": "P4tdm20f"}, {"dateRangeValidation": false, "inventoryId": "lYuJGV3l", "options": ["EUywLgXF", "KB1RJQH6", "mGDorNeO"], "qty": 44, "slotId": "VFFfX6Ae", "sourceItemId": "94P06wFk"}], "createItems": [{"customAttributes": {"q9y7yRhD": {}, "KjVa7zBD": {}, "avY6goKl": {}}, "inventoryConfigurationCode": "mn9w2A4k", "inventoryId": "8eQLDBbs", "qty": 8, "serverCustomAttributes": {"EJM34dcm": {}, "ZI1X3ObG": {}, "Y6MOHIWc": {}}, "slotId": "vZEdQrCV", "slotUsed": 37, "source": "OTHER", "sourceItemId": "A2sjNlrw", "tags": ["ICOKxt5s", "ZrEkhmMk", "sk3t2N45"], "toSpecificInventory": false, "type": "buGHb0Dc"}, {"customAttributes": {"ixkt88x4": {}, "I9eudWwf": {}, "ir9vcDYJ": {}}, "inventoryConfigurationCode": "6pXphEwo", "inventoryId": "9i6vL10V", "qty": 55, "serverCustomAttributes": {"ivFCoEuD": {}, "bH9TkwHP": {}, "YI45k9SG": {}}, "slotId": "DaBp0BUm", "slotUsed": 90, "source": "ECOMMERCE", "sourceItemId": "RCZgvm1I", "tags": ["Mcngm36z", "Mzo5ha5p", "k1lVW4sk"], "toSpecificInventory": false, "type": "4ZEC80cD"}, {"customAttributes": {"EZDqj440": {}, "bhhivo7f": {}, "amZfzEQn": {}}, "inventoryConfigurationCode": "mGBulatt", "inventoryId": "S4glX21s", "qty": 32, "serverCustomAttributes": {"0bYITy4m": {}, "kj4XXNAI": {}, "F1a6hUZa": {}}, "slotId": "JjWZdvUJ", "slotUsed": 42, "source": "ECOMMERCE", "sourceItemId": "Hg0ZmUYp", "tags": ["dXnHaxml", "shPeXa4t", "WzuxQm8f"], "toSpecificInventory": false, "type": "eqmeAqB4"}], "removeItems": [{"inventoryId": "cdc4UfV8", "slotId": "C0OCHLVH", "sourceItemId": "HjN4MCzO"}, {"inventoryId": "qbTP8czd", "slotId": "Jtf0acL4", "sourceItemId": "iFcxJKnT"}, {"inventoryId": "XdlbdRKt", "slotId": "J9EJX79F", "sourceItemId": "uRihUDag"}], "targetUserId": "ISESP9qJ", "updateItems": [{"customAttributes": {"nD75tdeG": {}, "Zx1ke5SP": {}, "JVJkWGeD": {}}, "inventoryId": "gwJkCaXZ", "serverCustomAttributes": {"YvHJ4IR9": {}, "6kqxBwEu": {}, "02itD4bk": {}}, "slotId": "jxbDwG4v", "sourceItemId": "ox1uY1mg", "tags": ["ciS4sHsn", "6qQSdaV7", "haWe4ceF"], "type": "bF4wxKRu"}, {"customAttributes": {"QZoCHNHA": {}, "yTKbRI08": {}, "wIKh0U3j": {}}, "inventoryId": "fSgzRKHi", "serverCustomAttributes": {"CVm8jQSD": {}, "gnkSy1SF": {}, "WnCzbunS": {}}, "slotId": "SqAwaBCv", "sourceItemId": "inzzNHOH", "tags": ["I6ZFs5RA", "AxQJmKcn", "3sx7pSj7"], "type": "DitBHNma"}, {"customAttributes": {"dKEGbyfA": {}, "fFyCzTid": {}, "Gh8Z6W7R": {}}, "inventoryId": "SJzZLNWF", "serverCustomAttributes": {"9L1xezex": {}, "XdllEAVn": {}, "wHxc5JAn": {}}, "slotId": "7LMqAAmB", "sourceItemId": "gDP7xFW6", "tags": ["OC9EqRsF", "tWhJElTr", "HtsV5TC9"], "type": "tBq4PLBC"}]}, {"consumeItems": [{"dateRangeValidation": true, "inventoryId": "K88niW4T", "options": ["psNEhXid", "6xt5HqDh", "MYAJHOgV"], "qty": 11, "slotId": "JGt0ohNj", "sourceItemId": "1xtSTYct"}, {"dateRangeValidation": false, "inventoryId": "pLF6WmhM", "options": ["xDff8NZW", "Bq13WwvU", "xDMXGbis"], "qty": 36, "slotId": "O52ADNVC", "sourceItemId": "hgHJ22KG"}, {"dateRangeValidation": false, "inventoryId": "QVrouqth", "options": ["sahVF1hk", "q2wBxaWn", "qXLU9Hh5"], "qty": 92, "slotId": "UH0z62Bo", "sourceItemId": "ewbjWwnH"}], "createItems": [{"customAttributes": {"1ShVCd14": {}, "vP5qGnfC": {}, "dNWdzA6u": {}}, "inventoryConfigurationCode": "ezoXOHjD", "inventoryId": "ApDEvC9o", "qty": 28, "serverCustomAttributes": {"l3Rm4RFK": {}, "rzkafspD": {}, "vefJdhRk": {}}, "slotId": "UNOblocC", "slotUsed": 83, "source": "OTHER", "sourceItemId": "QOXZbkeh", "tags": ["GwMj0zML", "nLPQYS4R", "UW95ugrM"], "toSpecificInventory": true, "type": "A5FEIGLX"}, {"customAttributes": {"vG5v0zXr": {}, "wIfE13wd": {}, "ZlVKT0Qv": {}}, "inventoryConfigurationCode": "Eduu8f1P", "inventoryId": "w56l8rK0", "qty": 71, "serverCustomAttributes": {"FNwEjwZA": {}, "UliaC2Go": {}, "aTdWPXdQ": {}}, "slotId": "S2FdBjxJ", "slotUsed": 46, "source": "ECOMMERCE", "sourceItemId": "3GqylDvu", "tags": ["P9hVM5Aw", "WMhw4nNG", "hF4NM8oe"], "toSpecificInventory": true, "type": "9odY8tCm"}, {"customAttributes": {"qukGy75V": {}, "kSvZ4WRJ": {}, "XnTMg9dV": {}}, "inventoryConfigurationCode": "QWxw48wK", "inventoryId": "X2WxNAlB", "qty": 16, "serverCustomAttributes": {"180uuPPF": {}, "QYUKYllF": {}, "U9HSerER": {}}, "slotId": "tktvM7uD", "slotUsed": 31, "source": "OTHER", "sourceItemId": "9MXT7l9B", "tags": ["oI3CJQPa", "d071CGNO", "RcMCPGqL"], "toSpecificInventory": true, "type": "Mq9px3dV"}], "removeItems": [{"inventoryId": "RfEfs8S6", "slotId": "WmjcHb0x", "sourceItemId": "KLQHq37a"}, {"inventoryId": "SCWEzkrN", "slotId": "BETNmljU", "sourceItemId": "xJnhqRvJ"}, {"inventoryId": "hi7kHQBP", "slotId": "RG0exgeE", "sourceItemId": "xX9nOwIH"}], "targetUserId": "VggKEwaM", "updateItems": [{"customAttributes": {"Rtus0VZh": {}, "jNWEsJmH": {}, "08LCov7s": {}}, "inventoryId": "dIHXUscR", "serverCustomAttributes": {"zCJgBz4y": {}, "s08Ndnew": {}, "cxCPyxkN": {}}, "slotId": "rmMxSAu0", "sourceItemId": "r1mqQE0W", "tags": ["ANIaZDS0", "vc33FC89", "AgqRW2bD"], "type": "hLvsnyvi"}, {"customAttributes": {"uPcZOnYS": {}, "otLSFdia": {}, "xu9e8nJk": {}}, "inventoryId": "cEYQNX6Q", "serverCustomAttributes": {"KHy2cwW0": {}, "NpgoS6Ey": {}, "dhIY0Ynr": {}}, "slotId": "jHilesTB", "sourceItemId": "X9GMcfn6", "tags": ["gdpfRyCS", "ByJRXNTK", "6Cirbfsk"], "type": "bZIExjnL"}, {"customAttributes": {"GmCWKYe4": {}, "3pBz8HKQ": {}, "B3aVXNSe": {}}, "inventoryId": "lyG7fI1K", "serverCustomAttributes": {"1Q6bx2aU": {}, "O1fAy8Li": {}, "CvorriIt": {}}, "slotId": "FfQdnWfw", "sourceItemId": "pL9N645o", "tags": ["9DNfZkho", "Sf8vakO3", "zJlterfe"], "type": "QucyeuJN"}]}], "requestId": "oCayFIwi"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminCreateChainingOperations \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 2 'AdminCreateChainingOperations' test.out

#- 3 AdminListIntegrationConfigurations
$CLI_EXE \
    --sn inventory \
    --op AdminListIntegrationConfigurations \
    --namespace $AB_NAMESPACE \
    --limit '65' \
    --offset '1' \
    --sortBy 'createdAt' \
    > test.out 2>&1
eval_tap $? 3 'AdminListIntegrationConfigurations' test.out

#- 4 AdminCreateIntegrationConfiguration
# body param: body
echo '{"mapItemType": ["mdwedKAR", "tUyOs5Nd", "sqbXdCKk"], "serviceName": "pB023pfQ", "targetInventoryCode": "h4kW7Gy5"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminCreateIntegrationConfiguration \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 4 'AdminCreateIntegrationConfiguration' test.out

#- 5 AdminUpdateIntegrationConfiguration
# body param: body
echo '{"mapItemType": ["ZMsHFb8c", "8nGub4RN", "WQEvgTGs"], "serviceName": "vpuCVWmd", "targetInventoryCode": "N2EYZd6j"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminUpdateIntegrationConfiguration \
    --integrationConfigurationId 'CoGZwn3f' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 5 'AdminUpdateIntegrationConfiguration' test.out

#- 6 AdminUpdateStatusIntegrationConfiguration
# body param: body
echo '{"status": "TIED"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminUpdateStatusIntegrationConfiguration \
    --integrationConfigurationId '8JsAZGS6' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 6 'AdminUpdateStatusIntegrationConfiguration' test.out

#- 7 AdminListInventories
$CLI_EXE \
    --sn inventory \
    --op AdminListInventories \
    --namespace $AB_NAMESPACE \
    --inventoryConfigurationCode '8xCOFMOQ' \
    --limit '92' \
    --offset '58' \
    --sortBy 'updatedAt' \
    --userId '8jMZmMDh' \
    > test.out 2>&1
eval_tap $? 7 'AdminListInventories' test.out

#- 8 AdminCreateInventory
# body param: body
echo '{"inventoryConfigurationCode": "sg8vNOrF", "userId": "v8yt8eJK"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminCreateInventory \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 8 'AdminCreateInventory' test.out

#- 9 AdminGetInventory
$CLI_EXE \
    --sn inventory \
    --op AdminGetInventory \
    --inventoryId 'cPFTTfvh' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 9 'AdminGetInventory' test.out

#- 10 AdminUpdateInventory
# body param: body
echo '{"incMaxSlots": 6}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminUpdateInventory \
    --inventoryId 'LxaGWMiT' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 10 'AdminUpdateInventory' test.out

#- 11 DeleteInventory
# body param: body
echo '{"message": "JDq025Gw"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op DeleteInventory \
    --inventoryId '4kV1Ud30' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 11 'DeleteInventory' test.out

#- 12 AdminListItems
$CLI_EXE \
    --sn inventory \
    --op AdminListItems \
    --inventoryId '9yl8mJcH' \
    --namespace $AB_NAMESPACE \
    --limit '54' \
    --offset '31' \
    --sortBy 'updatedAt:desc' \
    --sourceItemId 'GuzWagKp' \
    --tags '5umAoBkT' \
    > test.out 2>&1
eval_tap $? 12 'AdminListItems' test.out

#- 13 AdminGetInventoryItem
$CLI_EXE \
    --sn inventory \
    --op AdminGetInventoryItem \
    --inventoryId 'NsKQsXrc' \
    --namespace $AB_NAMESPACE \
    --slotId 'yO0z0g5M' \
    --sourceItemId 'JTgETvqg' \
    > test.out 2>&1
eval_tap $? 13 'AdminGetInventoryItem' test.out

#- 14 AdminListInventoryConfigurations
$CLI_EXE \
    --sn inventory \
    --op AdminListInventoryConfigurations \
    --namespace $AB_NAMESPACE \
    --code '65uVmTlK' \
    --limit '93' \
    --offset '51' \
    --sortBy 'createdAt' \
    > test.out 2>&1
eval_tap $? 14 'AdminListInventoryConfigurations' test.out

#- 15 AdminCreateInventoryConfiguration
# body param: body
echo '{"code": "CyZUu4o8", "description": "Nw3pRfic", "initialMaxSlots": 82, "maxInstancesPerUser": 62, "maxUpgradeSlots": 33, "name": "jnTMPoTd"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminCreateInventoryConfiguration \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 15 'AdminCreateInventoryConfiguration' test.out

#- 16 AdminGetInventoryConfiguration
$CLI_EXE \
    --sn inventory \
    --op AdminGetInventoryConfiguration \
    --inventoryConfigurationId 'fEUCAJJQ' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 16 'AdminGetInventoryConfiguration' test.out

#- 17 AdminUpdateInventoryConfiguration
# body param: body
echo '{"code": "f1A2k9Ne", "description": "xL53E9Rl", "initialMaxSlots": 43, "maxInstancesPerUser": 81, "maxUpgradeSlots": 19, "name": "mNnvMcLl"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminUpdateInventoryConfiguration \
    --inventoryConfigurationId 'y72w2zUc' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 17 'AdminUpdateInventoryConfiguration' test.out

#- 18 AdminDeleteInventoryConfiguration
$CLI_EXE \
    --sn inventory \
    --op AdminDeleteInventoryConfiguration \
    --inventoryConfigurationId 'J262CMiH' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 18 'AdminDeleteInventoryConfiguration' test.out

#- 19 AdminListItemTypes
$CLI_EXE \
    --sn inventory \
    --op AdminListItemTypes \
    --namespace $AB_NAMESPACE \
    --limit '31' \
    --offset '50' \
    --sortBy 'createdAt:desc' \
    > test.out 2>&1
eval_tap $? 19 'AdminListItemTypes' test.out

#- 20 AdminCreateItemType
# body param: body
echo '{"name": "YJCHjeO1"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminCreateItemType \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 20 'AdminCreateItemType' test.out

#- 21 AdminDeleteItemType
$CLI_EXE \
    --sn inventory \
    --op AdminDeleteItemType \
    --itemTypeName 'lBNwL4Cv' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 21 'AdminDeleteItemType' test.out

#- 22 AdminListTags
$CLI_EXE \
    --sn inventory \
    --op AdminListTags \
    --namespace $AB_NAMESPACE \
    --limit '56' \
    --offset '42' \
    --owner 'v2FiVX5d' \
    --sortBy 'name' \
    > test.out 2>&1
eval_tap $? 22 'AdminListTags' test.out

#- 23 AdminCreateTag
# body param: body
echo '{"name": "O1rMSZmV", "owner": "SERVER"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminCreateTag \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 23 'AdminCreateTag' test.out

#- 24 AdminDeleteTag
$CLI_EXE \
    --sn inventory \
    --op AdminDeleteTag \
    --namespace $AB_NAMESPACE \
    --tagName 'WdD7gTgM' \
    > test.out 2>&1
eval_tap $? 24 'AdminDeleteTag' test.out

#- 25 AdminConsumeUserItem
# body param: body
echo '{"options": ["NojktINp", "gvwMrM2i", "ILCTuEcP"], "qty": 2, "slotId": "lAGAKq49", "sourceItemId": "XLdE2xwt"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminConsumeUserItem \
    --inventoryId 'bFgPy2QU' \
    --namespace $AB_NAMESPACE \
    --userId 'FgtaOcne' \
    --dateRangeValidation 'zdt7B4s8' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 25 'AdminConsumeUserItem' test.out

#- 26 AdminBulkUpdateMyItems
# body param: body
echo '[{"customAttributes": {"64hOa5bj": {}, "IBj2KG8e": {}, "sq1CB7lA": {}}, "serverCustomAttributes": {"sCyi0Oc5": {}, "p6vlHmih": {}, "Aebmnj7L": {}}, "slotId": "LTiQ7TZ9", "sourceItemId": "hni7wQwL", "tags": ["XuNkilao", "xz9jlKT9", "Eya5scnk"], "type": "is5GHa4B"}, {"customAttributes": {"jPfXf6Sg": {}, "gemx9CGg": {}, "baKhHiTl": {}}, "serverCustomAttributes": {"pOASBepg": {}, "JcCET1Uj": {}, "UppkZ6C6": {}}, "slotId": "iAXRYXWv", "sourceItemId": "cKlLdMpi", "tags": ["kg5toTcv", "5slRdxMM", "kBGIzQYF"], "type": "FSJ2GRva"}, {"customAttributes": {"YcIDQgYt": {}, "T6cbYMJ0": {}, "2EzjjLva": {}}, "serverCustomAttributes": {"h28Zp9z0": {}, "aRVQXt73": {}, "NQMRbWQo": {}}, "slotId": "F2qWKSRK", "sourceItemId": "NwLy0N91", "tags": ["00m9Ftej", "QpUOweV6", "pBXUOwAu"], "type": "CT7XGqsN"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminBulkUpdateMyItems \
    --inventoryId 'Q7ai0IZP' \
    --namespace $AB_NAMESPACE \
    --userId 'JLzfJsJL' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 26 'AdminBulkUpdateMyItems' test.out

#- 27 AdminSaveItemToInventory
# body param: body
echo '{"customAttributes": {"2ss5oJnZ": {}, "Sm22Y77N": {}, "K4Jk5Yf1": {}}, "qty": 47, "serverCustomAttributes": {"LQ7zhb2r": {}, "YX0ni6te": {}, "q1XeIQPY": {}}, "slotId": "jqVqxexW", "slotUsed": 16, "source": "OTHER", "sourceItemId": "un0l0mjm", "tags": ["tVNJCxL8", "vTkumewt", "rgzNx2uW"], "type": "PFRYft7I"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminSaveItemToInventory \
    --inventoryId 'CGmxitPw' \
    --namespace $AB_NAMESPACE \
    --userId 'Hm63NE0n' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 27 'AdminSaveItemToInventory' test.out

#- 28 AdminBulkRemoveItems
# body param: body
echo '[{"slotId": "cR1sIzpk", "sourceItemId": "OrdgoZJ8"}, {"slotId": "jbrhOh1C", "sourceItemId": "n6IaikY3"}, {"slotId": "CFOLaWxU", "sourceItemId": "9t2PaZKS"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminBulkRemoveItems \
    --inventoryId 'r5aGX1Ha' \
    --namespace $AB_NAMESPACE \
    --userId 'xAdJzKH5' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 28 'AdminBulkRemoveItems' test.out

#- 29 AdminBulkSaveItemToInventory
# body param: body
echo '[{"customAttributes": {"6W6Zm09O": {}, "ykRyKZog": {}, "z1p6itYX": {}}, "qty": 38, "serverCustomAttributes": {"yndJPr2H": {}, "cvEiciHL": {}, "1fbF4e9H": {}}, "slotId": "CmDrnw7V", "slotUsed": 43, "source": "OTHER", "sourceItemId": "dw6xmz3Y", "tags": ["nWgmgUND", "H9N1QUtT", "twIJs2SS"], "type": "4NkqKflI"}, {"customAttributes": {"RADd7gTc": {}, "8tBOBLPm": {}, "P6EyD5Ze": {}}, "qty": 4, "serverCustomAttributes": {"69eoSCUm": {}, "p9y41K4S": {}, "pM0RfmMB": {}}, "slotId": "BbFX44GE", "slotUsed": 23, "source": "ECOMMERCE", "sourceItemId": "vABLZVtU", "tags": ["Ovjgh3aw", "N42beHyk", "MxMInTtg"], "type": "yoh3W0kV"}, {"customAttributes": {"KJ7jamq6": {}, "bREGVucs": {}, "M1pRYdPK": {}}, "qty": 19, "serverCustomAttributes": {"V40bi74a": {}, "dJbqhlSp": {}, "jXDI8jJS": {}}, "slotId": "dLPOES9U", "slotUsed": 96, "source": "OTHER", "sourceItemId": "4erle684", "tags": ["zTA4F4f9", "lfex39zd", "eS760p6q"], "type": "YIuh7Tbn"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminBulkSaveItemToInventory \
    --inventoryId 'omGxwSK8' \
    --namespace $AB_NAMESPACE \
    --userId 'uBjsnE1G' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 29 'AdminBulkSaveItemToInventory' test.out

#- 30 AdminUpdateUserInventoriesByInventoryCode
# body param: body
echo '{"incMaxSlots": 78}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminUpdateUserInventoriesByInventoryCode \
    --inventoryConfigurationCode '2mouvxgH' \
    --namespace $AB_NAMESPACE \
    --userId 'lONstooE' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 30 'AdminUpdateUserInventoriesByInventoryCode' test.out

#- 31 AdminSaveItem
# body param: body
echo '{"customAttributes": {"O73eu8eW": {}, "6N8td4M5": {}, "D9trRBNI": {}}, "inventoryConfigurationCode": "BhG714uM", "qty": 85, "serverCustomAttributes": {"Mpv51YFi": {}, "vOZSOvdN": {}, "VY4wJppi": {}}, "slotId": "Gkyt3TMf", "slotUsed": 16, "source": "OTHER", "sourceItemId": "HhIMJSQf", "tags": ["gL9vGJ9L", "b37a93NI", "HPgOQs07"], "type": "Ov0uoIWW"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminSaveItem \
    --namespace $AB_NAMESPACE \
    --userId 'mnDH7AAg' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 31 'AdminSaveItem' test.out

#- 32 AdminBulkSaveItem
# body param: body
echo '[{"customAttributes": {"QOcWSsRI": {}, "UNsctHrb": {}, "J6Na1CZJ": {}}, "inventoryConfigurationCode": "SCNIFcnk", "qty": 80, "serverCustomAttributes": {"C3n99mDt": {}, "4zOP09Bt": {}, "S80csm0P": {}}, "slotId": "4NTW0uSw", "slotUsed": 33, "source": "ECOMMERCE", "sourceItemId": "nLUNtStF", "tags": ["aUzVWYXS", "oZcpl7SI", "nqVOYSco"], "type": "rPlPMALJ"}, {"customAttributes": {"JTUb56rB": {}, "qg0MKdSp": {}, "aIUGYjJL": {}}, "inventoryConfigurationCode": "5eHjFFPV", "qty": 52, "serverCustomAttributes": {"QAqJpnWE": {}, "PHhGYedF": {}, "mllv9EJa": {}}, "slotId": "Wll3PWZd", "slotUsed": 15, "source": "OTHER", "sourceItemId": "h7GQehN5", "tags": ["o1MeiAFA", "EzCLt1Nd", "8M9jdefp"], "type": "IYWly6fQ"}, {"customAttributes": {"mhCYF0ln": {}, "GFEBcg2w": {}, "iTUsne5S": {}}, "inventoryConfigurationCode": "akzShTzK", "qty": 77, "serverCustomAttributes": {"lnoAcsgV": {}, "5vDfRraN": {}, "izSZyb4f": {}}, "slotId": "rQMxZh1I", "slotUsed": 22, "source": "ECOMMERCE", "sourceItemId": "9Thq0uQi", "tags": ["hUpxC1tp", "s43nTPsr", "Kbrz2Is3"], "type": "CjF03VOk"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminBulkSaveItem \
    --namespace $AB_NAMESPACE \
    --userId 'dQZ9qv8N' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 32 'AdminBulkSaveItem' test.out

#- 33 AdminSyncUserEntitlements
$CLI_EXE \
    --sn inventory \
    --op AdminSyncUserEntitlements \
    --namespace $AB_NAMESPACE \
    --userId 'MMPlNQ8b' \
    > test.out 2>&1
eval_tap $? 33 'AdminSyncUserEntitlements' test.out

#- 34 AdminPurchasable
# body param: body
echo '{"entitlementType": "qET1c89V", "inventoryConfig": {"slotUsed": 16}, "itemId": "dDlAREkP", "itemType": "irMXzPtJ", "items": [{"bundledQty": 53, "entitlementType": "Gq64DodN", "inventoryConfig": {"slotUsed": 86}, "itemId": "6V9FCRuH", "itemType": "HzKemM8t", "sku": "QByOViFC", "stackable": true, "useCount": 49}, {"bundledQty": 33, "entitlementType": "lSoDIYDb", "inventoryConfig": {"slotUsed": 85}, "itemId": "2kVU3bJs", "itemType": "fn7Y5fkJ", "sku": "byhjy9nh", "stackable": false, "useCount": 76}, {"bundledQty": 64, "entitlementType": "7mMIkyPB", "inventoryConfig": {"slotUsed": 38}, "itemId": "YK9TWw3P", "itemType": "Pt7Pp2gI", "sku": "r2kDGSea", "stackable": true, "useCount": 21}], "quantity": 58, "sku": "ZGf1MdLJ", "stackable": false, "useCount": 83}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminPurchasable \
    --namespace $AB_NAMESPACE \
    --userId 'rpctkAzd' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 34 'AdminPurchasable' test.out

#- 35 PublicListInventoryConfigurations
$CLI_EXE \
    --sn inventory \
    --op PublicListInventoryConfigurations \
    --namespace $AB_NAMESPACE \
    --code 'Z51z4LlL' \
    --limit '27' \
    --offset '27' \
    --sortBy 'code:asc' \
    > test.out 2>&1
eval_tap $? 35 'PublicListInventoryConfigurations' test.out

#- 36 PublicListItemTypes
$CLI_EXE \
    --sn inventory \
    --op PublicListItemTypes \
    --namespace $AB_NAMESPACE \
    --limit '33' \
    --offset '30' \
    --sortBy 'createdAt' \
    > test.out 2>&1
eval_tap $? 36 'PublicListItemTypes' test.out

#- 37 PublicListTags
$CLI_EXE \
    --sn inventory \
    --op PublicListTags \
    --namespace $AB_NAMESPACE \
    --limit '80' \
    --offset '11' \
    --sortBy 'createdAt:asc' \
    > test.out 2>&1
eval_tap $? 37 'PublicListTags' test.out

#- 38 PublicListInventories
$CLI_EXE \
    --sn inventory \
    --op PublicListInventories \
    --namespace $AB_NAMESPACE \
    --inventoryConfigurationCode 'Pe4tKW7M' \
    --limit '58' \
    --offset '89' \
    --sortBy 'createdAt' \
    > test.out 2>&1
eval_tap $? 38 'PublicListInventories' test.out

#- 39 PublicConsumeMyItem
# body param: body
echo '{"options": ["gJSA6b8m", "7cmiYByh", "roWAfHwJ"], "qty": 16, "slotId": "3TrDfjsQ", "sourceItemId": "yIuX7qt5"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op PublicConsumeMyItem \
    --inventoryId '0bXabn36' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 39 'PublicConsumeMyItem' test.out

#- 40 PublicListItems
$CLI_EXE \
    --sn inventory \
    --op PublicListItems \
    --inventoryId 'TSJoqN1F' \
    --namespace $AB_NAMESPACE \
    --limit '61' \
    --offset '64' \
    --sortBy 'updatedAt:desc' \
    --sourceItemId 'S4rlQ19P' \
    --tags 'KUWEFgvU' \
    > test.out 2>&1
eval_tap $? 40 'PublicListItems' test.out

#- 41 PublicBulkUpdateMyItems
# body param: body
echo '[{"customAttributes": {"1AYfQiZR": {}, "9c8sG0eD": {}, "YN3y7grX": {}}, "slotId": "45499xxS", "sourceItemId": "CQZmtNXL", "tags": ["t2s4Wbkp", "mIYKKgos", "BsFpAZiW"]}, {"customAttributes": {"Z87Xna0p": {}, "gb1ds631": {}, "0pwTx9uf": {}}, "slotId": "6blhgizV", "sourceItemId": "B4cZsh0n", "tags": ["JahxmPoQ", "wH32PllF", "24NiR3tq"]}, {"customAttributes": {"o86IeGDp": {}, "OFPoq0rS": {}, "aoeHO9z8": {}}, "slotId": "8te3eABn", "sourceItemId": "nqf4WL6D", "tags": ["Zk4CiZ5l", "CWFqLT3a", "zTFzGFs7"]}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op PublicBulkUpdateMyItems \
    --inventoryId 'wkk3oXGy' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 41 'PublicBulkUpdateMyItems' test.out

#- 42 PublicBulkRemoveMyItems
# body param: body
echo '[{"slotId": "cSGZR1Wh", "sourceItemId": "zzfulhv5"}, {"slotId": "A7m4V9Hh", "sourceItemId": "bUWIxiE1"}, {"slotId": "95r599BN", "sourceItemId": "VJNiBYLV"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op PublicBulkRemoveMyItems \
    --inventoryId 'FpNNKJoX' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 42 'PublicBulkRemoveMyItems' test.out

#- 43 PublicMoveMyItems
# body param: body
echo '{"items": [{"qty": 14, "slotId": "dzaoxV4i", "sourceItemId": "dD06zl1d"}, {"qty": 35, "slotId": "RokjZFYg", "sourceItemId": "nIDn1KJ2"}, {"qty": 5, "slotId": "HFKX5WGl", "sourceItemId": "O0wv52uW"}], "srcInventoryId": "82F6H8Gc"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op PublicMoveMyItems \
    --inventoryId '4MD8RTZM' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 43 'PublicMoveMyItems' test.out

#- 44 PublicGetItem
$CLI_EXE \
    --sn inventory \
    --op PublicGetItem \
    --inventoryId 'RisCijWu' \
    --namespace $AB_NAMESPACE \
    --slotId 'dNLgHhEg' \
    --sourceItemId 'aoVnLKgF' \
    > test.out 2>&1
eval_tap $? 44 'PublicGetItem' test.out


# remove artifacts
rm -f "$CLI_TOKEN_FILE"
rm -f "$TEMP_JSON_INPUT"
rm -f "$TEMP_FILE_UPLOAD"

exit $EXIT_CODE