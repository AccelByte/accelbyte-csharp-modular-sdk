#!/usr/bin/env bash

# Copyright (c) 2021 AccelByte Inc. All Rights Reserved.
# This is licensed software from AccelByte Inc, for limitations
# and restrictions contact your company contract manager.

# This code is generated by tool. DO NOT EDIT.

# Meta:
# - random seed: 
# - template file: 

# Instructions:
# - Run the Justice SDK Mock Server first before running this script.

export AB_BASE_URL="http://127.0.0.1:8080"
export AB_CLIENT_ID="admin"
export AB_CLIENT_SECRET="admin"
export AB_NAMESPACE="test"
export AB_APP_NAME="UnitTest"

EXIT_CODE=0

eval_tap() {
  if [ $1 -eq 0 ]; then
    echo "ok $2 - $3"
  else
    EXIT_CODE=1
    echo "not ok $2 - $3"
    sed 's/^/# /g' $4
  fi
  rm -f $4
}

CLI_EXE="AccelByte.Sdk.Sample.Cli"
CLI_TOKEN_FILE="$(dirname "$(which $CLI_EXE)")/token.json"
TEMP_JSON_INPUT="input_json.json"
TEMP_FILE_UPLOAD="file_upload.bin"

echo "TAP version 13"
echo "1..35"

#- 1 Login
$CLI_EXE --op login --lt user --user user --pass user > test.out 2>&1
eval_tap $? 1 'Login' test.out

if [ $EXIT_CODE -ne 0 ]; then
  echo "Bail out! Login failed."
  exit $EXIT_CODE
fi

# echo "foo" > "$CLI_TOKEN_FILE"

#- 2 AdminCreateChainingOperations
# body param: body
echo '{"message": "0nJKuMpT", "operations": [{"consumeItems": [{"inventoryId": "MprCGYO4", "qty": 86, "slotId": "Ssh8gtHU", "sourceItemId": "N836Tbbn"}, {"inventoryId": "48mHj0tN", "qty": 80, "slotId": "bc1K3G7K", "sourceItemId": "LBgv2DQZ"}, {"inventoryId": "x4oeLuVy", "qty": 31, "slotId": "3GfTnFkr", "sourceItemId": "TXot8gFv"}], "createItems": [{"customAttributes": {"aq6DoWmm": {}, "4Pit1Wr2": {}, "bl9goI8S": {}}, "inventoryConfigurationCode": "udzZcB5f", "inventoryId": "XCLR6c7e", "qty": 10, "serverCustomAttributes": {"MXBVRGLW": {}, "WHFXqNF3": {}, "HEViSn96": {}}, "slotId": "Dz3CuFUz", "slotUsed": 5, "sourceItemId": "ZjRCMxuD", "tags": ["N8ulwEd5", "e9Gdrxcc", "UTt4IkMy"], "toSpecificInventory": true, "type": "UbKjoZdw"}, {"customAttributes": {"L30OvtVe": {}, "dZOSad6M": {}, "HyVjg35p": {}}, "inventoryConfigurationCode": "cMuZ2W5q", "inventoryId": "Q54pXgjq", "qty": 94, "serverCustomAttributes": {"j1y2BOKT": {}, "Gjdvgry1": {}, "LyG4xFo1": {}}, "slotId": "8YZy7hJ7", "slotUsed": 85, "sourceItemId": "nsqIIecC", "tags": ["RL2deM47", "JXACDBQP", "z6TyoGlj"], "toSpecificInventory": true, "type": "EOje71kM"}, {"customAttributes": {"8xS2cxNj": {}, "gHiipBEh": {}, "XNCa5fMD": {}}, "inventoryConfigurationCode": "GOs018Hy", "inventoryId": "2dw1tBim", "qty": 23, "serverCustomAttributes": {"sg5WWwmM": {}, "GGzfIvBN": {}, "UEvigsDE": {}}, "slotId": "2xBzo3sa", "slotUsed": 86, "sourceItemId": "im7efsAK", "tags": ["inkFgUPr", "yqNlO5nZ", "pEtyhXb8"], "toSpecificInventory": false, "type": "qghIKPXe"}], "removeItems": [{"inventoryId": "7lcDVcCW", "slotId": "o9WPn98I", "sourceItemId": "0cmFFb0a"}, {"inventoryId": "bAE73GRi", "slotId": "17BLcrB1", "sourceItemId": "mmuridFK"}, {"inventoryId": "eTnzhV1k", "slotId": "t1mN7zLT", "sourceItemId": "UQNlWxhm"}], "targetUserId": "NWhbPzX7", "updateItems": [{"customAttributes": {"MlnafNU8": {}, "4OWEWqWO": {}, "hxd9NaRk": {}}, "inventoryId": "NgFj40Z1", "serverCustomAttributes": {"U9zubo8C": {}, "0ko9dYKx": {}, "qGKS6H6s": {}}, "slotId": "TGf2MoTR", "sourceItemId": "ZEenRED6", "tags": ["Oh7Dh9kA", "noReDImu", "vkNqdoKl"], "type": "YwhUHodk"}, {"customAttributes": {"Pkda7Zro": {}, "CFQFgE2T": {}, "uGr2hWkz": {}}, "inventoryId": "oK9MeL9i", "serverCustomAttributes": {"3IReyDWW": {}, "SuyqZCG8": {}, "HESbRnkw": {}}, "slotId": "RtFUlvIk", "sourceItemId": "CdZv2CyS", "tags": ["DbQl9kQG", "gTS6CbFz", "mvmUpL32"], "type": "W48aDCF1"}, {"customAttributes": {"l1aeU0Py": {}, "CYYQxCuG": {}, "lK5DSNFO": {}}, "inventoryId": "zbYnvpCJ", "serverCustomAttributes": {"B4r2jtKX": {}, "RH6VbI4X": {}, "osaAlnUj": {}}, "slotId": "jyauWjNa", "sourceItemId": "MWMLuURl", "tags": ["ofbfabTQ", "UyXxlgoE", "8bDdlUAV"], "type": "SfQwAZXq"}]}, {"consumeItems": [{"inventoryId": "Rx4hal6r", "qty": 96, "slotId": "MslE2Wee", "sourceItemId": "kvL7bL5M"}, {"inventoryId": "xYS9IA8x", "qty": 28, "slotId": "NuHKuBfd", "sourceItemId": "oLtU3hDn"}, {"inventoryId": "IFQikHsW", "qty": 30, "slotId": "J8IW1kVh", "sourceItemId": "wnNbcqC4"}], "createItems": [{"customAttributes": {"taSCe3vU": {}, "bpkIueqa": {}, "lKQdwl9B": {}}, "inventoryConfigurationCode": "qbvrXVD9", "inventoryId": "NA6feIAj", "qty": 37, "serverCustomAttributes": {"bnjYJbjE": {}, "qt1VtVeh": {}, "7zuPkMXJ": {}}, "slotId": "4fUUkNYG", "slotUsed": 52, "sourceItemId": "h2MHVS27", "tags": ["hQUZo5kl", "hkPtPwZf", "9ASt4ScP"], "toSpecificInventory": true, "type": "4MzYZ6wL"}, {"customAttributes": {"O2YGLgwq": {}, "Evd1MsRr": {}, "V6j1XhIP": {}}, "inventoryConfigurationCode": "t9uumlzQ", "inventoryId": "CbEpwtpU", "qty": 73, "serverCustomAttributes": {"NsSiJdhL": {}, "tZkpkxbA": {}, "hoxzw69K": {}}, "slotId": "zVJilsiT", "slotUsed": 100, "sourceItemId": "V4QsoXbA", "tags": ["rUsEAVV2", "HuhVq3Rt", "d86vmE4I"], "toSpecificInventory": true, "type": "6sXQt9iY"}, {"customAttributes": {"uf0upAK5": {}, "wrMrG0J8": {}, "UWaeuO90": {}}, "inventoryConfigurationCode": "YbjCk6mO", "inventoryId": "44fxkYfx", "qty": 97, "serverCustomAttributes": {"GqgW7SDA": {}, "Vwscqf9A": {}, "mv5FohC3": {}}, "slotId": "FJ7NYSoM", "slotUsed": 24, "sourceItemId": "Rs2Zq0vN", "tags": ["G8XNjvkt", "V6uKyzZ0", "jRS8sneT"], "toSpecificInventory": false, "type": "tgPmbG2s"}], "removeItems": [{"inventoryId": "Y3jsHxCL", "slotId": "0rOkYaHV", "sourceItemId": "SrKGq44m"}, {"inventoryId": "gJEJ72C4", "slotId": "6fcafAXl", "sourceItemId": "XZPOzptu"}, {"inventoryId": "uJ2VtDny", "slotId": "ZERnHMFu", "sourceItemId": "ODkezzrb"}], "targetUserId": "dTfJjjlN", "updateItems": [{"customAttributes": {"eeLeyg8P": {}, "C4X4MB4k": {}, "gMLNymRU": {}}, "inventoryId": "PNjBm95n", "serverCustomAttributes": {"bQlItMuw": {}, "Ugvm2zDG": {}, "heHV4GNC": {}}, "slotId": "ZkceWOZM", "sourceItemId": "IH5gpHB7", "tags": ["cZ7WUz7I", "OJXGQrKs", "Oblc9cul"], "type": "J2VA6WEO"}, {"customAttributes": {"xQZy20hu": {}, "fKnex1Xp": {}, "nb8YfSty": {}}, "inventoryId": "busVJHoK", "serverCustomAttributes": {"oBC79srD": {}, "D16sCF43": {}, "T7rP5oMl": {}}, "slotId": "gf5GDhrF", "sourceItemId": "fxjWbkFw", "tags": ["Rg7H9SZQ", "ltGrTqBk", "0kU4AbuP"], "type": "V3jwkF3y"}, {"customAttributes": {"MIv82djC": {}, "odTwljrJ": {}, "fBhhAh4j": {}}, "inventoryId": "AXwLqsCy", "serverCustomAttributes": {"sb6oMDAp": {}, "wocU4kjY": {}, "XO2w48kZ": {}}, "slotId": "5pMJjYWe", "sourceItemId": "MpwhrSRH", "tags": ["afVVDFYE", "mYJ1CRuy", "xb78GN6w"], "type": "sScDnLII"}]}, {"consumeItems": [{"inventoryId": "K4dBV8TS", "qty": 90, "slotId": "xOuLug5e", "sourceItemId": "rwTwcPiW"}, {"inventoryId": "ulKFh5IS", "qty": 63, "slotId": "7hdvhoWN", "sourceItemId": "YT0hPGet"}, {"inventoryId": "hnu6RGKn", "qty": 6, "slotId": "RuhL7zgz", "sourceItemId": "ND6Wi7j8"}], "createItems": [{"customAttributes": {"1OCIj9Eq": {}, "xMxlr1oU": {}, "fpZ0ZYhm": {}}, "inventoryConfigurationCode": "Sbp63bt6", "inventoryId": "9Aws49Bc", "qty": 65, "serverCustomAttributes": {"iyifBXGY": {}, "xDYTcdee": {}, "uvW1L0OL": {}}, "slotId": "AZhbUvKZ", "slotUsed": 7, "sourceItemId": "u079bd2M", "tags": ["VskwlbKR", "ts7B56eF", "P0sveDzV"], "toSpecificInventory": true, "type": "69co0Kre"}, {"customAttributes": {"BBobkwql": {}, "Ab3Egfeb": {}, "EBX62OZv": {}}, "inventoryConfigurationCode": "9D8wohYo", "inventoryId": "NiSFhmI4", "qty": 16, "serverCustomAttributes": {"G4NZ9x0N": {}, "54yR64PS": {}, "DHOlcJEO": {}}, "slotId": "6Zg8gyBn", "slotUsed": 13, "sourceItemId": "Te7zvmyq", "tags": ["ZN6qPYPE", "7NIrmimn", "gObyOl54"], "toSpecificInventory": true, "type": "WIcJlUMM"}, {"customAttributes": {"sMa6eUfE": {}, "38jWrOl8": {}, "ksXkBfVk": {}}, "inventoryConfigurationCode": "ilTanZE3", "inventoryId": "QaWiX7xR", "qty": 73, "serverCustomAttributes": {"avhWhyOW": {}, "iFAE3ed7": {}, "kCzXz9If": {}}, "slotId": "IrUDTIe1", "slotUsed": 60, "sourceItemId": "JdYGLhc0", "tags": ["qsOra555", "kNa2RKgd", "c10AlcMD"], "toSpecificInventory": true, "type": "aMjqAdUb"}], "removeItems": [{"inventoryId": "8MKk553D", "slotId": "QKTmMvV8", "sourceItemId": "6YDTqiC9"}, {"inventoryId": "rrc0rfGZ", "slotId": "M6MW1PN1", "sourceItemId": "ETJ7S91k"}, {"inventoryId": "vg3nWK7H", "slotId": "E6EhV7C9", "sourceItemId": "hh6pcbah"}], "targetUserId": "b5zVMlaE", "updateItems": [{"customAttributes": {"jr5IM1J0": {}, "HGYbmoCY": {}, "xhi4nLQL": {}}, "inventoryId": "rPHcaulL", "serverCustomAttributes": {"snUyMPbl": {}, "4mt6vgwR": {}, "mP3pd1xj": {}}, "slotId": "n5IaISOl", "sourceItemId": "GQQnMMQb", "tags": ["8iiQRIfJ", "pvF9XSKy", "ulp03Rzg"], "type": "pWrMgUC9"}, {"customAttributes": {"nsO8GLzk": {}, "vb7CfcRP": {}, "dPTyAczc": {}}, "inventoryId": "RDKcgccF", "serverCustomAttributes": {"3ZtZJaUP": {}, "uo50dNAm": {}, "xk5ijACu": {}}, "slotId": "KtGvcPDe", "sourceItemId": "hMinJPpx", "tags": ["7OBOaoip", "Z3gNomlP", "nrgMHihJ"], "type": "RvzxnBp7"}, {"customAttributes": {"yUV9rkPJ": {}, "iPyvd1fB": {}, "Ws5emAaL": {}}, "inventoryId": "ht6fK4tv", "serverCustomAttributes": {"8txpRcOY": {}, "7jHp3mfc": {}, "oYGSSgyw": {}}, "slotId": "HP5rBXtM", "sourceItemId": "WPefEgfz", "tags": ["6m6kPRMM", "cpLwFvWg", "vvj3fW2D"], "type": "D82P5t7g"}]}], "requestId": "G5XApx1I"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminCreateChainingOperations \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 2 'AdminCreateChainingOperations' test.out

#- 3 AdminListInventories
$CLI_EXE \
    --sn inventory \
    --op AdminListInventories \
    --namespace $AB_NAMESPACE \
    --inventoryConfigurationCode 'GXg3T6uk' \
    --limit '10' \
    --offset '44' \
    --sortBy 'updatedAt:asc' \
    --userId '60A1xVXF' \
    > test.out 2>&1
eval_tap $? 3 'AdminListInventories' test.out

#- 4 AdminCreateInventory
# body param: body
echo '{"inventoryConfigurationCode": "9AW3yYMy", "userId": "8rR2wIQo"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminCreateInventory \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 4 'AdminCreateInventory' test.out

#- 5 AdminGetInventory
$CLI_EXE \
    --sn inventory \
    --op AdminGetInventory \
    --inventoryId 'rssUNmYf' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 5 'AdminGetInventory' test.out

#- 6 AdminUpdateInventory
# body param: body
echo '{"incMaxSlots": 31}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminUpdateInventory \
    --inventoryId 'JDGDr1eJ' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 6 'AdminUpdateInventory' test.out

#- 7 DeleteInventory
# body param: body
echo '{"message": "G1y4xBSK"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op DeleteInventory \
    --inventoryId '0X3giLrl' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 7 'DeleteInventory' test.out

#- 8 AdminListItems
$CLI_EXE \
    --sn inventory \
    --op AdminListItems \
    --inventoryId 'gWj0URJn' \
    --namespace $AB_NAMESPACE \
    --limit '67' \
    --offset '3' \
    --qtyGte '2' \
    --sortBy 'createdAt:asc' \
    --sourceItemId 'tGDlu5ZL' \
    --tags 'Bbv2W8fH' \
    > test.out 2>&1
eval_tap $? 8 'AdminListItems' test.out

#- 9 AdminGetInventoryItem
$CLI_EXE \
    --sn inventory \
    --op AdminGetInventoryItem \
    --inventoryId 'p5nOxs9t' \
    --namespace $AB_NAMESPACE \
    --slotId 'qxF615Fo' \
    --sourceItemId 'lmvK6Ixk' \
    > test.out 2>&1
eval_tap $? 9 'AdminGetInventoryItem' test.out

#- 10 AdminListInventoryConfigurations
$CLI_EXE \
    --sn inventory \
    --op AdminListInventoryConfigurations \
    --namespace $AB_NAMESPACE \
    --code 'lwRz3nuA' \
    --limit '44' \
    --offset '69' \
    --sortBy 'code' \
    > test.out 2>&1
eval_tap $? 10 'AdminListInventoryConfigurations' test.out

#- 11 AdminCreateInventoryConfiguration
# body param: body
echo '{"code": "EePRGi9Z", "description": "ay3jyetH", "initialMaxSlots": 91, "maxInstancesPerUser": 27, "maxUpgradeSlots": 49, "name": "pyO4YP7K"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminCreateInventoryConfiguration \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 11 'AdminCreateInventoryConfiguration' test.out

#- 12 AdminGetInventoryConfiguration
$CLI_EXE \
    --sn inventory \
    --op AdminGetInventoryConfiguration \
    --inventoryConfigurationId '66ULJNjs' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 12 'AdminGetInventoryConfiguration' test.out

#- 13 AdminUpdateInventoryConfiguration
# body param: body
echo '{"code": "1CI4rgau", "description": "pmlfIvIo", "initialMaxSlots": 4, "maxInstancesPerUser": 73, "maxUpgradeSlots": 34, "name": "TCmam5K7"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminUpdateInventoryConfiguration \
    --inventoryConfigurationId 'kTjc4Flr' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 13 'AdminUpdateInventoryConfiguration' test.out

#- 14 AdminDeleteInventoryConfiguration
$CLI_EXE \
    --sn inventory \
    --op AdminDeleteInventoryConfiguration \
    --inventoryConfigurationId '5hWLmM8L' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 14 'AdminDeleteInventoryConfiguration' test.out

#- 15 AdminListItemTypes
$CLI_EXE \
    --sn inventory \
    --op AdminListItemTypes \
    --namespace $AB_NAMESPACE \
    --limit '11' \
    --offset '31' \
    --sortBy 'createdAt' \
    > test.out 2>&1
eval_tap $? 15 'AdminListItemTypes' test.out

#- 16 AdminCreateItemType
# body param: body
echo '{"name": "sVhjCuJn"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminCreateItemType \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 16 'AdminCreateItemType' test.out

#- 17 AdminDeleteItemType
$CLI_EXE \
    --sn inventory \
    --op AdminDeleteItemType \
    --itemTypeName '110F5Di4' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 17 'AdminDeleteItemType' test.out

#- 18 AdminListTags
$CLI_EXE \
    --sn inventory \
    --op AdminListTags \
    --namespace $AB_NAMESPACE \
    --limit '14' \
    --offset '71' \
    --owner 'fzOqEtV0' \
    --sortBy 'createdAt' \
    > test.out 2>&1
eval_tap $? 18 'AdminListTags' test.out

#- 19 AdminCreateTag
# body param: body
echo '{"name": "mT8VPAd1", "owner": "CLIENT"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminCreateTag \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 19 'AdminCreateTag' test.out

#- 20 AdminDeleteTag
$CLI_EXE \
    --sn inventory \
    --op AdminDeleteTag \
    --namespace $AB_NAMESPACE \
    --tagName 'vp5VORhB' \
    > test.out 2>&1
eval_tap $? 20 'AdminDeleteTag' test.out

#- 21 AdminConsumeUserItem
# body param: body
echo '{"qty": 85, "slotId": "gYtQkCoN", "sourceItemId": "JHKCgJkO"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminConsumeUserItem \
    --inventoryId 'vkSi5MfA' \
    --namespace $AB_NAMESPACE \
    --userId 'U1L2feYj' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 21 'AdminConsumeUserItem' test.out

#- 22 AdminBulkUpdateMyItems
# body param: body
echo '[{"customAttributes": {"hwfmgFKJ": {}, "ehgR7mTS": {}, "fv0iKuGt": {}}, "serverCustomAttributes": {"wYH3f7Rp": {}, "P1E8dCTs": {}, "nkTnTtvM": {}}, "slotId": "DuHjKk7F", "sourceItemId": "x3zuLGWZ", "tags": ["De9tbC9M", "A4hS9o7y", "opnJ60RJ"], "type": "SqhA04TF"}, {"customAttributes": {"17oA3zVu": {}, "sGsXpys7": {}, "Ii2jmsu3": {}}, "serverCustomAttributes": {"rVjVnlCL": {}, "7r6LAqve": {}, "TQofJJP5": {}}, "slotId": "dBeZSrVQ", "sourceItemId": "vCDfiwaK", "tags": ["DXX74O3Y", "BTwPvCeq", "9Q3cj7er"], "type": "p0jaPiRB"}, {"customAttributes": {"JeYZAerr": {}, "puSjT6ZM": {}, "CrLyGuih": {}}, "serverCustomAttributes": {"SqS5HntG": {}, "dreWbBF0": {}, "p2wKaLbq": {}}, "slotId": "6zTW8PlQ", "sourceItemId": "AJohMyTX", "tags": ["xkXU9aMV", "hahCa4kA", "ClDOwj3x"], "type": "r7FZVu0k"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminBulkUpdateMyItems \
    --inventoryId 'z3lGre46' \
    --namespace $AB_NAMESPACE \
    --userId 'dCyGoZu1' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 22 'AdminBulkUpdateMyItems' test.out

#- 23 AdminSaveItemToInventory
# body param: body
echo '{"customAttributes": {"k076plO4": {}, "cZPS4ePW": {}, "JaRKUfpr": {}}, "qty": 36, "serverCustomAttributes": {"oYIaGz0l": {}, "UcF9pYGq": {}, "fe57OKNw": {}}, "slotId": "8P0DGIJ5", "slotUsed": 87, "sourceItemId": "HqI88hcg", "tags": ["AFF0PmBn", "HWnHxb70", "qlfI7SBb"], "type": "LdO39747"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminSaveItemToInventory \
    --inventoryId 'T7dPElj7' \
    --namespace $AB_NAMESPACE \
    --userId 'fpqKzdNq' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 23 'AdminSaveItemToInventory' test.out

#- 24 AdminBulkRemoveItems
# body param: body
echo '[{"slotId": "N0Hh4UtO", "sourceItemId": "rLfyAYAG"}, {"slotId": "zl4sCS95", "sourceItemId": "uhrC4g6X"}, {"slotId": "wr8GCryf", "sourceItemId": "EtM5wNbq"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminBulkRemoveItems \
    --inventoryId '2wvUHjF3' \
    --namespace $AB_NAMESPACE \
    --userId 'lL4A4fuC' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 24 'AdminBulkRemoveItems' test.out

#- 25 AdminSaveItem
# body param: body
echo '{"customAttributes": {"yFVla4Mh": {}, "i1ntL8LE": {}, "sBA5RtT9": {}}, "inventoryConfigurationCode": "cWsJuCEf", "qty": 9, "serverCustomAttributes": {"1UTTm09G": {}, "DJuwfFAF": {}, "RJtlLSt0": {}}, "slotId": "RmNgjbS9", "slotUsed": 36, "sourceItemId": "NxofcZOd", "tags": ["GVZnSJf6", "jHc4rv3G", "05urMzen"], "type": "aMosaGLv"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminSaveItem \
    --namespace $AB_NAMESPACE \
    --userId 'QBRgrfjk' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 25 'AdminSaveItem' test.out

#- 26 PublicListInventoryConfigurations
$CLI_EXE \
    --sn inventory \
    --op PublicListInventoryConfigurations \
    --namespace $AB_NAMESPACE \
    --code 'Lfl7VicW' \
    --limit '55' \
    --offset '65' \
    --sortBy 'createdAt:desc' \
    > test.out 2>&1
eval_tap $? 26 'PublicListInventoryConfigurations' test.out

#- 27 PublicListItemTypes
$CLI_EXE \
    --sn inventory \
    --op PublicListItemTypes \
    --namespace $AB_NAMESPACE \
    --limit '98' \
    --offset '22' \
    --sortBy 'name:desc' \
    > test.out 2>&1
eval_tap $? 27 'PublicListItemTypes' test.out

#- 28 PublicListTags
$CLI_EXE \
    --sn inventory \
    --op PublicListTags \
    --namespace $AB_NAMESPACE \
    --limit '19' \
    --offset '68' \
    --sortBy 'name:desc' \
    > test.out 2>&1
eval_tap $? 28 'PublicListTags' test.out

#- 29 PublicListInventories
$CLI_EXE \
    --sn inventory \
    --op PublicListInventories \
    --namespace $AB_NAMESPACE \
    --inventoryConfigurationCode 'syH251yO' \
    --limit '42' \
    --offset '5' \
    --sortBy 'createdAt:asc' \
    > test.out 2>&1
eval_tap $? 29 'PublicListInventories' test.out

#- 30 PublicConsumeMyItem
# body param: body
echo '{"qty": 1, "slotId": "1BFXpR0n", "sourceItemId": "2QWD1whT"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op PublicConsumeMyItem \
    --inventoryId 'ogd0MFVh' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 30 'PublicConsumeMyItem' test.out

#- 31 PublicListItems
$CLI_EXE \
    --sn inventory \
    --op PublicListItems \
    --inventoryId '9a3iCYbt' \
    --namespace $AB_NAMESPACE \
    --limit '74' \
    --offset '3' \
    --qtyGte '93' \
    --sortBy 'qty:desc' \
    --sourceItemId 'GJeQi2GZ' \
    --tags 't9rUsZoK' \
    > test.out 2>&1
eval_tap $? 31 'PublicListItems' test.out

#- 32 PublicBulkUpdateMyItems
# body param: body
echo '[{"customAttributes": {"1HN7qTxx": {}, "locBVYer": {}, "w8wCCiza": {}}, "slotId": "v3UA0gpO", "sourceItemId": "WGLTEu6g", "tags": ["cZQGJH0N", "GEgwColv", "SFOKpT7d"]}, {"customAttributes": {"djv0YyUn": {}, "EBqPUdV2": {}, "d3ozPjTD": {}}, "slotId": "9fxQZBCY", "sourceItemId": "XtgzPj3F", "tags": ["TORMfyso", "o7of86yW", "nTDjmjUP"]}, {"customAttributes": {"FsYGvgUB": {}, "NPQRCm40": {}, "BxDDdhfE": {}}, "slotId": "Z7n2ywyu", "sourceItemId": "VaNn3N29", "tags": ["rZNpZ6QD", "wTkK6qeN", "GK5iHlVs"]}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op PublicBulkUpdateMyItems \
    --inventoryId 'TA7DzdEo' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 32 'PublicBulkUpdateMyItems' test.out

#- 33 PublicBulkRemoveMyItems
# body param: body
echo '[{"slotId": "cWLWDGIf", "sourceItemId": "eU9BAoN1"}, {"slotId": "rUFDNlvc", "sourceItemId": "4F8TEO3t"}, {"slotId": "HRDMpLqu", "sourceItemId": "iVMB59IJ"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op PublicBulkRemoveMyItems \
    --inventoryId 'hZRXkt6m' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 33 'PublicBulkRemoveMyItems' test.out

#- 34 PublicMoveMyItems
# body param: body
echo '{"items": [{"qty": 99, "slotId": "afvOco1W", "sourceItemId": "ZLXb3uqP"}, {"qty": 27, "slotId": "8K9NQzwc", "sourceItemId": "zoW011xf"}, {"qty": 99, "slotId": "j8xldPXN", "sourceItemId": "WIe8Gxyv"}], "srcInventoryId": "vI7Fr9Zx"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op PublicMoveMyItems \
    --inventoryId '1HBheOzr' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 34 'PublicMoveMyItems' test.out

#- 35 PublicGetItem
$CLI_EXE \
    --sn inventory \
    --op PublicGetItem \
    --inventoryId '1C9194Lg' \
    --namespace $AB_NAMESPACE \
    --slotId 'AGQ92jro' \
    --sourceItemId 'YpfUGTny' \
    > test.out 2>&1
eval_tap $? 35 'PublicGetItem' test.out


# remove artifacts
rm -f "$CLI_TOKEN_FILE"
rm -f "$TEMP_JSON_INPUT"
rm -f "$TEMP_FILE_UPLOAD"

exit $EXIT_CODE