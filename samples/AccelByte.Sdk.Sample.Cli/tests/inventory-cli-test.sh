#!/usr/bin/env bash

# Copyright (c) 2021 AccelByte Inc. All Rights Reserved.
# This is licensed software from AccelByte Inc, for limitations
# and restrictions contact your company contract manager.

# This code is generated by tool. DO NOT EDIT.

# Meta:
# - random seed: 
# - template file: 

# Instructions:
# - Run the Justice SDK Mock Server first before running this script.

export AB_BASE_URL="http://127.0.0.1:8080"
export AB_CLIENT_ID="admin"
export AB_CLIENT_SECRET="admin"
export AB_NAMESPACE="test"
export AB_APP_NAME="UnitTest"

EXIT_CODE=0

eval_tap() {
  if [ $1 -eq 0 ]; then
    echo "ok $2 - $3"
  else
    EXIT_CODE=1
    echo "not ok $2 - $3"
    sed 's/^/# /g' $4
  fi
  rm -f $4
}

CLI_EXE="AccelByte.Sdk.Sample.Cli"
CLI_TOKEN_FILE="$(dirname "$(which $CLI_EXE)")/token.json"
TEMP_JSON_INPUT="input_json.json"
TEMP_FILE_UPLOAD="file_upload.bin"

echo "TAP version 13"
echo "1..44"

#- 1 Login
$CLI_EXE --op login --lt user --user user --pass user > test.out 2>&1
eval_tap $? 1 'Login' test.out

if [ $EXIT_CODE -ne 0 ]; then
  echo "Bail out! Login failed."
  exit $EXIT_CODE
fi

# echo "foo" > "$CLI_TOKEN_FILE"

#- 2 AdminCreateChainingOperations
# body param: body
echo '{"message": "8zZjgFLO", "operations": [{"consumeItems": [{"dateRangeValidation": false, "inventoryId": "CjQGlYHs", "options": ["cC9AcXhE", "R7TzTxHY", "ACQ3pWDT"], "qty": 94, "slotId": "dHps5vDO", "sourceItemId": "WxRpcEwG"}, {"dateRangeValidation": false, "inventoryId": "fW9tjQZH", "options": ["HeEUtI45", "EhERgEfG", "AbeNSwRt"], "qty": 67, "slotId": "CpYhRIax", "sourceItemId": "RxAzUSLz"}, {"dateRangeValidation": true, "inventoryId": "viQb1QTv", "options": ["NEUO0kHJ", "tJGdYPCj", "32erot8i"], "qty": 49, "slotId": "4T7PGXoP", "sourceItemId": "bpwHAIWZ"}], "createItems": [{"customAttributes": {"oqthIj20": {}, "Ezrr5ohV": {}, "7xiW1rPb": {}}, "inventoryConfigurationCode": "yAEYDHmv", "inventoryId": "9OZ4ROt2", "qty": 78, "serverCustomAttributes": {"hBNYFHc7": {}, "L2Xbrmup": {}, "cjQyt4UO": {}}, "slotId": "qsCChvBU", "slotUsed": 9, "source": "OTHER", "sourceItemId": "OGhu9Hpm", "tags": ["OXgq8jaT", "ICwX1A6k", "4dTOcR7V"], "toSpecificInventory": false, "type": "7Hnh1Wkp"}, {"customAttributes": {"78w7cc92": {}, "7ZX2Buoa": {}, "iwKJ2Img": {}}, "inventoryConfigurationCode": "BqGUdyHg", "inventoryId": "ruEEUCQK", "qty": 37, "serverCustomAttributes": {"vfTKluvv": {}, "w0NRuaaq": {}, "NCTihC8o": {}}, "slotId": "PnbNWH8f", "slotUsed": 27, "source": "OTHER", "sourceItemId": "STZCeIn0", "tags": ["bvfsbJVV", "OjptuEnR", "qV4GRFOQ"], "toSpecificInventory": false, "type": "qsTGnYNo"}, {"customAttributes": {"nBQu1OHj": {}, "TSBO1Teo": {}, "NXM0XDuq": {}}, "inventoryConfigurationCode": "ijmJUGlS", "inventoryId": "fk0Ovlkq", "qty": 100, "serverCustomAttributes": {"lkSAtUV5": {}, "fJtXKbbK": {}, "2qvj5bG3": {}}, "slotId": "MnL8sZSl", "slotUsed": 12, "source": "ECOMMERCE", "sourceItemId": "nFINVQEZ", "tags": ["WMCJw04A", "E7sPbORp", "1b7jSbOT"], "toSpecificInventory": true, "type": "KsSo4XQ7"}], "removeItems": [{"inventoryId": "EQFHH091", "slotId": "gXJkzunz", "sourceItemId": "YQtE2q90"}, {"inventoryId": "q09awaBb", "slotId": "JOrnhSfh", "sourceItemId": "jfzfmmFl"}, {"inventoryId": "hCcWfeB0", "slotId": "6DzsBu5E", "sourceItemId": "rEuQenta"}], "targetUserId": "0UPEDa4y", "updateItems": [{"customAttributes": {"SSMxGJ2E": {}, "SCUswkvS": {}, "ry7R603b": {}}, "inventoryId": "HO5RNOi7", "serverCustomAttributes": {"HiR9eDJC": {}, "a9b4yjbR": {}, "OQ2ZDTNP": {}}, "slotId": "hHHuMNcN", "sourceItemId": "zYpRBiHP", "tags": ["uTMkij1W", "IBTePG4j", "o7IWCPRj"], "type": "K1WijoSc"}, {"customAttributes": {"Br0hqAPO": {}, "4bRQacuN": {}, "AyOPGYTK": {}}, "inventoryId": "p4LBNLdB", "serverCustomAttributes": {"k9hjdKQS": {}, "2YsY58Y8": {}, "V6NWkbyk": {}}, "slotId": "7Mz4Ufgf", "sourceItemId": "pRqWz2Jq", "tags": ["4EVaNDc9", "j0UrfXpS", "23O3q2RB"], "type": "azHNQuhg"}, {"customAttributes": {"rVBnF17I": {}, "tidoM6os": {}, "YUp50vZN": {}}, "inventoryId": "l18Nuy5l", "serverCustomAttributes": {"OhXPkRlI": {}, "dSDv5cuD": {}, "bLyzU4NW": {}}, "slotId": "dN31hx30", "sourceItemId": "Db39vi9V", "tags": ["AVZsYPtr", "rkeu2lQd", "DPKiCBGt"], "type": "KS9eRbnd"}]}, {"consumeItems": [{"dateRangeValidation": false, "inventoryId": "jgkMnAol", "options": ["mdrCh2K0", "Ibb4gkdg", "Ct07mGue"], "qty": 93, "slotId": "MtcSBJBr", "sourceItemId": "6y0KWOZX"}, {"dateRangeValidation": true, "inventoryId": "C6xbeYHk", "options": ["aJR02x2l", "KXbpuxZf", "YBjmhRsZ"], "qty": 30, "slotId": "apExI2iS", "sourceItemId": "pH6hYMWc"}, {"dateRangeValidation": true, "inventoryId": "2fA1b86Q", "options": ["ziyF1tNw", "plHOdEki", "4acaNSfz"], "qty": 24, "slotId": "pMlsYUiW", "sourceItemId": "0zvsYHgF"}], "createItems": [{"customAttributes": {"70GEijEj": {}, "qqMXXKA1": {}, "hg10geKl": {}}, "inventoryConfigurationCode": "yPn4VuXd", "inventoryId": "jaAs6wvx", "qty": 6, "serverCustomAttributes": {"dmEzUVAq": {}, "BFnjp4NF": {}, "h5FGnDKi": {}}, "slotId": "OUXhKGHq", "slotUsed": 39, "source": "ECOMMERCE", "sourceItemId": "QNNlDly0", "tags": ["a0lZYiUu", "oHvP9OhV", "AJhZ1tDj"], "toSpecificInventory": false, "type": "QpFntrEp"}, {"customAttributes": {"c9pWt20X": {}, "mR1wnJli": {}, "vX6y9iDG": {}}, "inventoryConfigurationCode": "hIQhQHjI", "inventoryId": "MDJWaafm", "qty": 85, "serverCustomAttributes": {"lW93No7a": {}, "97Dhxn0I": {}, "rRAi4GsP": {}}, "slotId": "jxRfdGwB", "slotUsed": 70, "source": "OTHER", "sourceItemId": "sOp3diat", "tags": ["W3F6PmOl", "pYL4JnHD", "lL9YFTtL"], "toSpecificInventory": false, "type": "UL9zrkFw"}, {"customAttributes": {"wnsFP5HO": {}, "jXWjPGph": {}, "mr2nWdHr": {}}, "inventoryConfigurationCode": "GDAx0opm", "inventoryId": "2ouOGd4V", "qty": 45, "serverCustomAttributes": {"boHeK8pH": {}, "Hndx3ygm": {}, "FVRgPKAv": {}}, "slotId": "KBZIdEgo", "slotUsed": 71, "source": "ECOMMERCE", "sourceItemId": "yiQ1LKr9", "tags": ["xCLlg1Hx", "czvxWsrf", "R8kaHhRV"], "toSpecificInventory": true, "type": "PSRMxC4U"}], "removeItems": [{"inventoryId": "PGFnD8s7", "slotId": "JlhFjsSB", "sourceItemId": "WkLJDydo"}, {"inventoryId": "rZ12IEr8", "slotId": "qzGME11X", "sourceItemId": "wqWgyjfR"}, {"inventoryId": "raht0leU", "slotId": "JYLBmLQh", "sourceItemId": "SHq4ziFT"}], "targetUserId": "mHBDA7gm", "updateItems": [{"customAttributes": {"6pvWeyUM": {}, "k7pscqzM": {}, "hnVuiqTS": {}}, "inventoryId": "M2H3ti6R", "serverCustomAttributes": {"lXT1HfuM": {}, "qcQINSRW": {}, "q0wy7xsc": {}}, "slotId": "IDPPJzET", "sourceItemId": "nWKsEOny", "tags": ["Imou37gH", "e0mVmW28", "GEJmZbSP"], "type": "45vocnna"}, {"customAttributes": {"4M6Vnl26": {}, "pwopFujk": {}, "UPjzwrGT": {}}, "inventoryId": "wB96Cmv8", "serverCustomAttributes": {"8CMk8zhY": {}, "p0ZaMekv": {}, "obWI25Je": {}}, "slotId": "8s6DOqlS", "sourceItemId": "UZSSli46", "tags": ["tAGHxvpg", "iJPI30CN", "I3f0lSSs"], "type": "i3pQUZmj"}, {"customAttributes": {"PBZUzvdA": {}, "bkn5Rykb": {}, "c6EaLAmk": {}}, "inventoryId": "nn1U4VJt", "serverCustomAttributes": {"daZRkyrO": {}, "XL4K2r2J": {}, "i6M9bXMi": {}}, "slotId": "IQCf6Vry", "sourceItemId": "jvrZ51po", "tags": ["xCV1glAp", "9PS8GiRh", "dJ3DXpzj"], "type": "jMWAh2i6"}]}, {"consumeItems": [{"dateRangeValidation": true, "inventoryId": "o2lxzkrg", "options": ["KWFekZlD", "SPZ1lnB9", "95ewmJ6D"], "qty": 19, "slotId": "iX7SyNuN", "sourceItemId": "cMOMv86Q"}, {"dateRangeValidation": false, "inventoryId": "cMohnSD5", "options": ["GPko1ucX", "tkMGr0lY", "S9ALRhap"], "qty": 52, "slotId": "rq4Z8Qw6", "sourceItemId": "LV8RwJW7"}, {"dateRangeValidation": true, "inventoryId": "MG0chYfy", "options": ["3jZUYH9z", "6nQHRNqW", "KFjRLZIY"], "qty": 90, "slotId": "qBvilnoM", "sourceItemId": "jQdQujQR"}], "createItems": [{"customAttributes": {"9GAuwyMC": {}, "iyLOQmgb": {}, "6148qZii": {}}, "inventoryConfigurationCode": "PZ3zgvuR", "inventoryId": "d2L8e0bQ", "qty": 39, "serverCustomAttributes": {"LOW18eIY": {}, "mqHP8OIO": {}, "CKGQQO5l": {}}, "slotId": "H5dHK5mP", "slotUsed": 42, "source": "ECOMMERCE", "sourceItemId": "rwlHVCyJ", "tags": ["PoDfAaHS", "j3uXFdVT", "vsdr2qvR"], "toSpecificInventory": true, "type": "B9Zard6P"}, {"customAttributes": {"hS1NIVQ0": {}, "dMwWxVNe": {}, "OK3a3SXg": {}}, "inventoryConfigurationCode": "lsl1xMQW", "inventoryId": "jND3Bozj", "qty": 9, "serverCustomAttributes": {"3wkBi938": {}, "R6Te3cuF": {}, "oR2HKxaZ": {}}, "slotId": "MUQVfWpU", "slotUsed": 75, "source": "OTHER", "sourceItemId": "O7rrnYOG", "tags": ["WUyKaxra", "hz199oTy", "Yvn0zP7J"], "toSpecificInventory": true, "type": "enB3CSya"}, {"customAttributes": {"It5ZdAce": {}, "7pGE53D7": {}, "jHhkVFzD": {}}, "inventoryConfigurationCode": "t6GjWZ5j", "inventoryId": "xQMKJuhr", "qty": 1, "serverCustomAttributes": {"Jxr6v2Rh": {}, "cu0YTHN9": {}, "hvAW8JC9": {}}, "slotId": "pQxIoTHC", "slotUsed": 13, "source": "OTHER", "sourceItemId": "jxEdJmy9", "tags": ["nQYDCr3o", "S816Wt4G", "qxWpDU6K"], "toSpecificInventory": false, "type": "j1idtEGu"}], "removeItems": [{"inventoryId": "BVJuQCUx", "slotId": "feSjKsmA", "sourceItemId": "hUFC9inx"}, {"inventoryId": "AdjcCsI6", "slotId": "My9fP5In", "sourceItemId": "PSU8E5NI"}, {"inventoryId": "kdbREr82", "slotId": "FKTw0BXu", "sourceItemId": "13NRp5rs"}], "targetUserId": "XJd2yhLU", "updateItems": [{"customAttributes": {"3nOzt23K": {}, "SRRRx0KX": {}, "4rIjRqrb": {}}, "inventoryId": "BGbWyf46", "serverCustomAttributes": {"qQiFhHvf": {}, "B1uFzX6e": {}, "DJKxIV4p": {}}, "slotId": "tVSgFgGS", "sourceItemId": "2zFf1Lr1", "tags": ["dmzqi4df", "sd3UlPGd", "sCY8Gttt"], "type": "xNsxTsSO"}, {"customAttributes": {"zHrRGcJ1": {}, "ze2DPdnV": {}, "X6469NvN": {}}, "inventoryId": "4Vew9oSk", "serverCustomAttributes": {"SdctO3FM": {}, "TA7atNqR": {}, "ZGpypKG8": {}}, "slotId": "IYMSVSWD", "sourceItemId": "5tbyVOWI", "tags": ["gHQO4G4e", "Tdu5eeqV", "YcDHebfb"], "type": "XbCGXi4N"}, {"customAttributes": {"1GvP7suj": {}, "cg1WRMCE": {}, "poBZMGoZ": {}}, "inventoryId": "zCrswgdp", "serverCustomAttributes": {"QEhkCMqS": {}, "t6wEhtRT": {}, "oFYUAdWy": {}}, "slotId": "A4UXkSZU", "sourceItemId": "7gKGJMov", "tags": ["Cbi1tUFZ", "CHpFTggJ", "PSHeskwQ"], "type": "SgkCo9Bs"}]}], "requestId": "B6Ltk0Ie"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminCreateChainingOperations \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 2 'AdminCreateChainingOperations' test.out

#- 3 AdminListIntegrationConfigurations
$CLI_EXE \
    --sn inventory \
    --op AdminListIntegrationConfigurations \
    --namespace $AB_NAMESPACE \
    --limit '2' \
    --offset '62' \
    --sortBy 'createdAt:asc' \
    > test.out 2>&1
eval_tap $? 3 'AdminListIntegrationConfigurations' test.out

#- 4 AdminCreateIntegrationConfiguration
# body param: body
echo '{"mapItemType": ["Ap49ahNN", "VlQwl645", "wUoLReip"], "serviceName": "4956HLnv", "targetInventoryCode": "3m56djsr"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminCreateIntegrationConfiguration \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 4 'AdminCreateIntegrationConfiguration' test.out

#- 5 AdminUpdateIntegrationConfiguration
# body param: body
echo '{"mapItemType": ["1SkIVI6V", "sJjj1w18", "iao55bOn"], "serviceName": "bTZ2Ng09", "targetInventoryCode": "D42JAzsL"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminUpdateIntegrationConfiguration \
    --integrationConfigurationId 'vhrNLqfQ' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 5 'AdminUpdateIntegrationConfiguration' test.out

#- 6 AdminUpdateStatusIntegrationConfiguration
# body param: body
echo '{"status": "TIED"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminUpdateStatusIntegrationConfiguration \
    --integrationConfigurationId 'qk8BEOi6' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 6 'AdminUpdateStatusIntegrationConfiguration' test.out

#- 7 AdminListInventories
$CLI_EXE \
    --sn inventory \
    --op AdminListInventories \
    --namespace $AB_NAMESPACE \
    --inventoryConfigurationCode 'I007EDB6' \
    --limit '47' \
    --offset '97' \
    --sortBy 'updatedAt' \
    --userId 'hMpVsVfn' \
    > test.out 2>&1
eval_tap $? 7 'AdminListInventories' test.out

#- 8 AdminCreateInventory
# body param: body
echo '{"inventoryConfigurationCode": "TiwZq7uF", "userId": "mF9XJukW"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminCreateInventory \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 8 'AdminCreateInventory' test.out

#- 9 AdminGetInventory
$CLI_EXE \
    --sn inventory \
    --op AdminGetInventory \
    --inventoryId 'CvKHYFYE' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 9 'AdminGetInventory' test.out

#- 10 AdminUpdateInventory
# body param: body
echo '{"incMaxSlots": 62}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminUpdateInventory \
    --inventoryId 'jkk9uDKx' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 10 'AdminUpdateInventory' test.out

#- 11 DeleteInventory
# body param: body
echo '{"message": "0bL8ENl9"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op DeleteInventory \
    --inventoryId 'gEX0tEdu' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 11 'DeleteInventory' test.out

#- 12 AdminListItems
$CLI_EXE \
    --sn inventory \
    --op AdminListItems \
    --inventoryId 'IkuCigIq' \
    --namespace $AB_NAMESPACE \
    --limit '70' \
    --offset '96' \
    --sortBy 'updatedAt' \
    --sourceItemId 'x5naCxO7' \
    --tags 'rrH5EHNc' \
    > test.out 2>&1
eval_tap $? 12 'AdminListItems' test.out

#- 13 AdminGetInventoryItem
$CLI_EXE \
    --sn inventory \
    --op AdminGetInventoryItem \
    --inventoryId 'vJFMncDJ' \
    --namespace $AB_NAMESPACE \
    --slotId 'DhF2OYzi' \
    --sourceItemId 'p7XYlqzV' \
    > test.out 2>&1
eval_tap $? 13 'AdminGetInventoryItem' test.out

#- 14 AdminListInventoryConfigurations
$CLI_EXE \
    --sn inventory \
    --op AdminListInventoryConfigurations \
    --namespace $AB_NAMESPACE \
    --code 'Bimmvvj6' \
    --limit '73' \
    --offset '18' \
    --sortBy 'updatedAt' \
    > test.out 2>&1
eval_tap $? 14 'AdminListInventoryConfigurations' test.out

#- 15 AdminCreateInventoryConfiguration
# body param: body
echo '{"code": "ZUfhugty", "description": "l9Y2j9cL", "initialMaxSlots": 16, "maxInstancesPerUser": 49, "maxUpgradeSlots": 8, "name": "CsdrLSHv"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminCreateInventoryConfiguration \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 15 'AdminCreateInventoryConfiguration' test.out

#- 16 AdminGetInventoryConfiguration
$CLI_EXE \
    --sn inventory \
    --op AdminGetInventoryConfiguration \
    --inventoryConfigurationId 'vQfLlWzP' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 16 'AdminGetInventoryConfiguration' test.out

#- 17 AdminUpdateInventoryConfiguration
# body param: body
echo '{"code": "1ILfHXtA", "description": "BEm8GN54", "initialMaxSlots": 0, "maxInstancesPerUser": 85, "maxUpgradeSlots": 89, "name": "wJkwTRlD"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminUpdateInventoryConfiguration \
    --inventoryConfigurationId 'wQFZTzGV' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 17 'AdminUpdateInventoryConfiguration' test.out

#- 18 AdminDeleteInventoryConfiguration
$CLI_EXE \
    --sn inventory \
    --op AdminDeleteInventoryConfiguration \
    --inventoryConfigurationId 'AdFD0ynJ' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 18 'AdminDeleteInventoryConfiguration' test.out

#- 19 AdminListItemTypes
$CLI_EXE \
    --sn inventory \
    --op AdminListItemTypes \
    --namespace $AB_NAMESPACE \
    --limit '17' \
    --offset '21' \
    --sortBy 'createdAt:asc' \
    > test.out 2>&1
eval_tap $? 19 'AdminListItemTypes' test.out

#- 20 AdminCreateItemType
# body param: body
echo '{"name": "Jp4wg348"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminCreateItemType \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 20 'AdminCreateItemType' test.out

#- 21 AdminDeleteItemType
$CLI_EXE \
    --sn inventory \
    --op AdminDeleteItemType \
    --itemTypeName 'MNVJ51Zs' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 21 'AdminDeleteItemType' test.out

#- 22 AdminListTags
$CLI_EXE \
    --sn inventory \
    --op AdminListTags \
    --namespace $AB_NAMESPACE \
    --limit '88' \
    --offset '29' \
    --owner 'mLTkhtDC' \
    --sortBy 'createdAt:asc' \
    > test.out 2>&1
eval_tap $? 22 'AdminListTags' test.out

#- 23 AdminCreateTag
# body param: body
echo '{"name": "VFkM2ZTD", "owner": "SERVER"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminCreateTag \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 23 'AdminCreateTag' test.out

#- 24 AdminDeleteTag
$CLI_EXE \
    --sn inventory \
    --op AdminDeleteTag \
    --namespace $AB_NAMESPACE \
    --tagName 'snu9tNRl' \
    > test.out 2>&1
eval_tap $? 24 'AdminDeleteTag' test.out

#- 25 AdminConsumeUserItem
# body param: body
echo '{"options": ["Zv26UXqC", "oGaFcjxJ", "fQqb540E"], "qty": 33, "slotId": "VZpD1qvw", "sourceItemId": "8uWjoNR2"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminConsumeUserItem \
    --inventoryId '60gnisek' \
    --namespace $AB_NAMESPACE \
    --userId 'pNHx7XWk' \
    --dateRangeValidation '3qg5so12' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 25 'AdminConsumeUserItem' test.out

#- 26 AdminBulkUpdateMyItems
# body param: body
echo '[{"customAttributes": {"2pyS1YPW": {}, "tE3W9p0A": {}, "1twa6vGy": {}}, "serverCustomAttributes": {"PDxX2D7m": {}, "PDUDe9QK": {}, "DxtNmMTy": {}}, "slotId": "WvfqTuf4", "sourceItemId": "X5LCF0sc", "tags": ["AIxCAco0", "R6g3yMn8", "YOfiBiT8"], "type": "tLcTEosi"}, {"customAttributes": {"sqZnJ2Jf": {}, "yot5vDTl": {}, "izKDYY4Z": {}}, "serverCustomAttributes": {"KCFaHYjT": {}, "9KoeQLPI": {}, "wBT8fUan": {}}, "slotId": "hngFPJc3", "sourceItemId": "miXRMqpB", "tags": ["oCfkgGUz", "BBEF3vWF", "TuYhvdDf"], "type": "3pkjCRCE"}, {"customAttributes": {"6UdY4xxP": {}, "VY8SYP2O": {}, "MkT3cvud": {}}, "serverCustomAttributes": {"vRX60czB": {}, "EOKLVveJ": {}, "tREmqx1Y": {}}, "slotId": "n2isM6kt", "sourceItemId": "i6XtqBXJ", "tags": ["9yAos4pb", "pnFMvEYw", "eO509Ayq"], "type": "n3KiRLBY"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminBulkUpdateMyItems \
    --inventoryId 'w2Lgt6iL' \
    --namespace $AB_NAMESPACE \
    --userId 'Ld5Kch4X' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 26 'AdminBulkUpdateMyItems' test.out

#- 27 AdminSaveItemToInventory
# body param: body
echo '{"customAttributes": {"YW3mqeo4": {}, "eRBfuoNI": {}, "Il1fC9Jl": {}}, "qty": 75, "serverCustomAttributes": {"X80qO4fC": {}, "l690xObN": {}, "ytfTL7mB": {}}, "slotId": "F3JQ2SgX", "slotUsed": 24, "source": "OTHER", "sourceItemId": "rKY2EcxU", "tags": ["Yvq2LLFc", "TV1iiv1X", "ouU8a8DB"], "type": "S82MhkPZ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminSaveItemToInventory \
    --inventoryId 'yUMTICN8' \
    --namespace $AB_NAMESPACE \
    --userId '72zNe7ei' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 27 'AdminSaveItemToInventory' test.out

#- 28 AdminBulkRemoveItems
# body param: body
echo '[{"slotId": "7MCREv6U", "sourceItemId": "sxRa7yOG"}, {"slotId": "peZbfRKh", "sourceItemId": "0uWRTWBe"}, {"slotId": "xBRPnczt", "sourceItemId": "171xXUK3"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminBulkRemoveItems \
    --inventoryId 'jYyguJll' \
    --namespace $AB_NAMESPACE \
    --userId 'Gr9mmH55' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 28 'AdminBulkRemoveItems' test.out

#- 29 AdminBulkSaveItemToInventory
# body param: body
echo '[{"customAttributes": {"JFzCwrhM": {}, "vcLIXHhE": {}, "x0eJpTt3": {}}, "qty": 69, "serverCustomAttributes": {"x9p1yBcj": {}, "gYL4YiC7": {}, "eu8VHlqD": {}}, "slotId": "5MnAc6Rg", "slotUsed": 35, "source": "OTHER", "sourceItemId": "FNyLejrs", "tags": ["Fil0x7Jd", "MmTzcdTr", "H1VbNIkj"], "type": "SALBZVMb"}, {"customAttributes": {"8g2Z83Vv": {}, "bpN2sfmJ": {}, "WbEVsT67": {}}, "qty": 12, "serverCustomAttributes": {"JzJgO3zk": {}, "CGpzm5JB": {}, "EdX58xUb": {}}, "slotId": "B9lRZlKU", "slotUsed": 93, "source": "ECOMMERCE", "sourceItemId": "5erXgm3v", "tags": ["Y2DpEXnR", "16BNs8Gk", "281Je8U2"], "type": "6yimTgTF"}, {"customAttributes": {"iMEckJkV": {}, "uFCixdso": {}, "hI2JPtTf": {}}, "qty": 46, "serverCustomAttributes": {"oH9IN1tx": {}, "QvfHZrKT": {}, "iC7I1yBR": {}}, "slotId": "jIhOpfty", "slotUsed": 53, "source": "OTHER", "sourceItemId": "zrPaj8JG", "tags": ["UAzgWsMV", "YTWeaSmc", "WqtmOfNZ"], "type": "1No8QZzn"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminBulkSaveItemToInventory \
    --inventoryId 'L5AJmAHJ' \
    --namespace $AB_NAMESPACE \
    --userId '6qG2t4l0' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 29 'AdminBulkSaveItemToInventory' test.out

#- 30 AdminUpdateUserInventoriesByInventoryCode
# body param: body
echo '{"incMaxSlots": 62}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminUpdateUserInventoriesByInventoryCode \
    --inventoryConfigurationCode '9d22Nlrg' \
    --namespace $AB_NAMESPACE \
    --userId 'WZLeC2er' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 30 'AdminUpdateUserInventoriesByInventoryCode' test.out

#- 31 AdminSaveItem
# body param: body
echo '{"customAttributes": {"6FSvgx97": {}, "VK5DyZSo": {}, "avienpwo": {}}, "inventoryConfigurationCode": "IrHAzh3l", "qty": 15, "serverCustomAttributes": {"NxyNcyEG": {}, "xfZ5EJAZ": {}, "8mFfZ0b5": {}}, "slotId": "j2lfg4md", "slotUsed": 28, "source": "ECOMMERCE", "sourceItemId": "epUNRkjL", "tags": ["6MJv3nEi", "43xRBUAI", "rCD9N0dH"], "type": "3JpTJTcq"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminSaveItem \
    --namespace $AB_NAMESPACE \
    --userId 'zOg7ZNCm' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 31 'AdminSaveItem' test.out

#- 32 AdminBulkSaveItem
# body param: body
echo '[{"customAttributes": {"u3PSqjg9": {}, "SC0HmqH4": {}, "Zf6GIq1A": {}}, "inventoryConfigurationCode": "hHj2Xza4", "qty": 27, "serverCustomAttributes": {"9CdCpVh8": {}, "rNijQLPG": {}, "mXxxnyYw": {}}, "slotId": "kOUuo8mT", "slotUsed": 21, "source": "OTHER", "sourceItemId": "EcifHLXw", "tags": ["7WxEwEXq", "dKClEMrq", "agx9M7qq"], "type": "h2Uc0r5q"}, {"customAttributes": {"ep6GnYHi": {}, "S3dXEyMR": {}, "X4Nmc4Gp": {}}, "inventoryConfigurationCode": "8PhdkvaU", "qty": 30, "serverCustomAttributes": {"KlvlMxpq": {}, "YgkGt3Zv": {}, "NZeGyW50": {}}, "slotId": "mvngZTri", "slotUsed": 78, "source": "ECOMMERCE", "sourceItemId": "WRazDwOc", "tags": ["C1olpkQp", "EI4xrSsd", "2sdfAXdl"], "type": "eC2TcK5E"}, {"customAttributes": {"HGXeIvEU": {}, "fpOYegcV": {}, "LsnVQesW": {}}, "inventoryConfigurationCode": "XFSo7AzD", "qty": 13, "serverCustomAttributes": {"yWg0S4tk": {}, "O5Wkfih6": {}, "feumUYEz": {}}, "slotId": "80PpjsFb", "slotUsed": 41, "source": "ECOMMERCE", "sourceItemId": "PCuVrLHC", "tags": ["nU22NrlT", "fCnzMN6i", "tvMslpXL"], "type": "rp898D4f"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminBulkSaveItem \
    --namespace $AB_NAMESPACE \
    --userId 'cFYh20n1' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 32 'AdminBulkSaveItem' test.out

#- 33 AdminSyncUserEntitlements
$CLI_EXE \
    --sn inventory \
    --op AdminSyncUserEntitlements \
    --namespace $AB_NAMESPACE \
    --userId 'JjVfe97J' \
    > test.out 2>&1
eval_tap $? 33 'AdminSyncUserEntitlements' test.out

#- 34 AdminPurchasable
# body param: body
echo '{"entitlementType": "sztgINe6", "inventoryConfig": {"slotUsed": 28}, "itemId": "t9m73raZ", "itemType": "nmF0MCxm", "items": [{"bundledQty": 60, "entitlementType": "FGJ5NHn8", "inventoryConfig": {"slotUsed": 44}, "itemId": "tD0j3foU", "itemType": "mPEaqY2Z", "sku": "MPKK1hQz", "stackable": true, "useCount": 10}, {"bundledQty": 27, "entitlementType": "BKBXEQP9", "inventoryConfig": {"slotUsed": 74}, "itemId": "8JXK0TVR", "itemType": "hRNVJCIh", "sku": "kv3dG6uJ", "stackable": true, "useCount": 83}, {"bundledQty": 79, "entitlementType": "baTwqGN3", "inventoryConfig": {"slotUsed": 55}, "itemId": "uwuRlI6t", "itemType": "14P8lBIQ", "sku": "kWvTKkqb", "stackable": true, "useCount": 88}], "quantity": 90, "sku": "bPONM4WG", "stackable": true, "useCount": 0}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminPurchasable \
    --namespace $AB_NAMESPACE \
    --userId 'ZtEYMKEA' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 34 'AdminPurchasable' test.out

#- 35 PublicListInventoryConfigurations
$CLI_EXE \
    --sn inventory \
    --op PublicListInventoryConfigurations \
    --namespace $AB_NAMESPACE \
    --code '2Edkiwj1' \
    --limit '13' \
    --offset '58' \
    --sortBy 'updatedAt:desc' \
    > test.out 2>&1
eval_tap $? 35 'PublicListInventoryConfigurations' test.out

#- 36 PublicListItemTypes
$CLI_EXE \
    --sn inventory \
    --op PublicListItemTypes \
    --namespace $AB_NAMESPACE \
    --limit '79' \
    --offset '25' \
    --sortBy 'name:asc' \
    > test.out 2>&1
eval_tap $? 36 'PublicListItemTypes' test.out

#- 37 PublicListTags
$CLI_EXE \
    --sn inventory \
    --op PublicListTags \
    --namespace $AB_NAMESPACE \
    --limit '5' \
    --offset '79' \
    --sortBy 'name:asc' \
    > test.out 2>&1
eval_tap $? 37 'PublicListTags' test.out

#- 38 PublicListInventories
$CLI_EXE \
    --sn inventory \
    --op PublicListInventories \
    --namespace $AB_NAMESPACE \
    --inventoryConfigurationCode 'LGJ4ddf2' \
    --limit '73' \
    --offset '91' \
    --sortBy 'updatedAt' \
    > test.out 2>&1
eval_tap $? 38 'PublicListInventories' test.out

#- 39 PublicConsumeMyItem
# body param: body
echo '{"options": ["UXXEOCAt", "zUE0p2Az", "k3lUkc4O"], "qty": 58, "slotId": "RRp9FqgJ", "sourceItemId": "4ZgTDuk4"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op PublicConsumeMyItem \
    --inventoryId 'MFOisrtv' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 39 'PublicConsumeMyItem' test.out

#- 40 PublicListItems
$CLI_EXE \
    --sn inventory \
    --op PublicListItems \
    --inventoryId 'XsDfP5QL' \
    --namespace $AB_NAMESPACE \
    --limit '91' \
    --offset '61' \
    --sortBy 'updatedAt' \
    --sourceItemId 'nnOTAwsc' \
    --tags 'VbQLHGxy' \
    > test.out 2>&1
eval_tap $? 40 'PublicListItems' test.out

#- 41 PublicBulkUpdateMyItems
# body param: body
echo '[{"customAttributes": {"WqVWHN3F": {}, "zpy6Hbxr": {}, "J7w0AZFy": {}}, "slotId": "RlyxJH0x", "sourceItemId": "x5RUtBSv", "tags": ["EOaJyUMm", "89uW7FCt", "X8D2zsIw"]}, {"customAttributes": {"YVM41KSO": {}, "I57tvwdx": {}, "PLGvRWTL": {}}, "slotId": "kN9ElMtj", "sourceItemId": "0V6yPhGH", "tags": ["pwov4hrt", "Ko9HvXwV", "nDfwvozI"]}, {"customAttributes": {"jI139z1v": {}, "rIxwj01M": {}, "yElbikZS": {}}, "slotId": "dpKtlEi5", "sourceItemId": "v3thmBlb", "tags": ["Yd8EKu8A", "KVg1Wdrq", "SchfubPj"]}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op PublicBulkUpdateMyItems \
    --inventoryId 'gP0HYo3y' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 41 'PublicBulkUpdateMyItems' test.out

#- 42 PublicBulkRemoveMyItems
# body param: body
echo '[{"slotId": "6X7voYO2", "sourceItemId": "UJp9M3dA"}, {"slotId": "RUsWfFYX", "sourceItemId": "xEQ2PAdR"}, {"slotId": "vetYVW4D", "sourceItemId": "TcH3jW8C"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op PublicBulkRemoveMyItems \
    --inventoryId 'Ct6PGwcu' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 42 'PublicBulkRemoveMyItems' test.out

#- 43 PublicMoveMyItems
# body param: body
echo '{"items": [{"qty": 45, "slotId": "O4EljaAy", "sourceItemId": "2f8de5Rq"}, {"qty": 31, "slotId": "nF80D7qS", "sourceItemId": "M3yOcWA1"}, {"qty": 66, "slotId": "s01sjhKf", "sourceItemId": "0tOqJQTD"}], "srcInventoryId": "I30YYd4r"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op PublicMoveMyItems \
    --inventoryId 'nlmAZdpv' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 43 'PublicMoveMyItems' test.out

#- 44 PublicGetItem
$CLI_EXE \
    --sn inventory \
    --op PublicGetItem \
    --inventoryId 'db0lhysS' \
    --namespace $AB_NAMESPACE \
    --slotId 'gifnTlCc' \
    --sourceItemId 'g8oJNzLQ' \
    > test.out 2>&1
eval_tap $? 44 'PublicGetItem' test.out


# remove artifacts
rm -f "$CLI_TOKEN_FILE"
rm -f "$TEMP_JSON_INPUT"
rm -f "$TEMP_FILE_UPLOAD"

exit $EXIT_CODE