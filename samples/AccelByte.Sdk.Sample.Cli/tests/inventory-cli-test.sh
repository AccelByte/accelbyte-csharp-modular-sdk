#!/usr/bin/env bash

# Copyright (c) 2021 AccelByte Inc. All Rights Reserved.
# This is licensed software from AccelByte Inc, for limitations
# and restrictions contact your company contract manager.

# This code is generated by tool. DO NOT EDIT.

# Meta:
# - random seed: 
# - template file: 

# Instructions:
# - Run the Justice SDK Mock Server first before running this script.

export AB_BASE_URL="http://127.0.0.1:8080"
export AB_CLIENT_ID="admin"
export AB_CLIENT_SECRET="admin"
export AB_NAMESPACE="test"
export AB_APP_NAME="UnitTest"

EXIT_CODE=0

eval_tap() {
  if [ $1 -eq 0 ]; then
    echo "ok $2 - $3"
  else
    EXIT_CODE=1
    echo "not ok $2 - $3"
    sed 's/^/# /g' $4
  fi
  rm -f $4
}

CLI_EXE="AccelByte.Sdk.Sample.Cli"
CLI_TOKEN_FILE="$(dirname "$(which $CLI_EXE)")/token.json"
TEMP_JSON_INPUT="input_json.json"
TEMP_FILE_UPLOAD="file_upload.bin"

echo "TAP version 13"
echo "1..35"

#- 1 Login
$CLI_EXE --op login --lt user --user user --pass user > test.out 2>&1
eval_tap $? 1 'Login' test.out

if [ $EXIT_CODE -ne 0 ]; then
  echo "Bail out! Login failed."
  exit $EXIT_CODE
fi

# echo "foo" > "$CLI_TOKEN_FILE"

#- 2 AdminCreateChainingOperations
# body param: body
echo '{"message": "mXk1C4R8", "operations": [{"consumeItems": [{"inventoryId": "TgIIR0dr", "qty": 42, "slotId": "UCmAQ8Kk", "sourceItemId": "u4mKJ9I6"}, {"inventoryId": "ieOhzCEK", "qty": 71, "slotId": "YXThDrqi", "sourceItemId": "0sOf9fkJ"}, {"inventoryId": "AwMMKSjE", "qty": 55, "slotId": "OHcW2JBe", "sourceItemId": "ZywFEyNY"}], "createItems": [{"customAttributes": {"NgkACqHp": {}, "TdqN8vnq": {}, "j08tBdOr": {}}, "inventoryConfigurationCode": "pG8j5zcf", "inventoryId": "YDOiAkcd", "qty": 82, "serverCustomAttributes": {"8Clhx94I": {}, "omfKXsJU": {}, "I049IJRL": {}}, "slotId": "xOVWM8Fp", "slotUsed": 45, "sourceItemId": "khj09OTo", "tags": ["6bH6xLYm", "2B8FBEoT", "3c7KVHQy"], "toSpecificInventory": true, "type": "5MBmabPv"}, {"customAttributes": {"0FB6YXg0": {}, "3fPTtepb": {}, "KyMBm3zL": {}}, "inventoryConfigurationCode": "Kp1tu4yy", "inventoryId": "HTKSw35h", "qty": 82, "serverCustomAttributes": {"EP3GUPj2": {}, "ZDxkzaPc": {}, "JMTBJNUE": {}}, "slotId": "6PSi54D4", "slotUsed": 90, "sourceItemId": "2wm9fWvj", "tags": ["Hl29bwaM", "tScftCxh", "U5yIYm3C"], "toSpecificInventory": false, "type": "o1Q0f5vn"}, {"customAttributes": {"g5CesSZs": {}, "SHm1NU7L": {}, "fDIpyemq": {}}, "inventoryConfigurationCode": "8FwLggEo", "inventoryId": "U6kceuWe", "qty": 28, "serverCustomAttributes": {"qqAZ00Ob": {}, "xbaa5LwQ": {}, "YOnIw77I": {}}, "slotId": "2UkEq7WD", "slotUsed": 77, "sourceItemId": "A5VPV9Ch", "tags": ["bYwq1p2i", "b2I69JI6", "b032vEeP"], "toSpecificInventory": true, "type": "CiQMMFER"}], "removeItems": [{"inventoryId": "qYIkpFnD", "slotId": "IlP6Clcm", "sourceItemId": "SiVed8nM"}, {"inventoryId": "uiJQELwb", "slotId": "CLGt1I1u", "sourceItemId": "6Sx7y7u3"}, {"inventoryId": "ckbIfDs5", "slotId": "Rv9vnP54", "sourceItemId": "VjDspTxF"}], "targetUserId": "EkN78vXJ", "updateItems": [{"customAttributes": {"EEEOldly": {}, "3sUkjCW6": {}, "F7YlNb3L": {}}, "inventoryId": "9trTMZVV", "serverCustomAttributes": {"PwznGmnU": {}, "DdRWmOIy": {}, "Bqg7xCeL": {}}, "slotId": "5vEKQ7Qz", "sourceItemId": "dN2LF84w", "tags": ["EwYqo9eI", "SFUnKeLW", "U4KSZJdS"], "type": "eg81gz9v"}, {"customAttributes": {"wUHFtaKx": {}, "A45GpYhz": {}, "ntmakQYZ": {}}, "inventoryId": "BmRRXEyI", "serverCustomAttributes": {"3St6IP0s": {}, "viWPZcwO": {}, "LU5LjWdt": {}}, "slotId": "1LnUPLrg", "sourceItemId": "MPWhG0jT", "tags": ["WGQHoyKC", "Sev38w2D", "8OFmJSWJ"], "type": "z8O2B19X"}, {"customAttributes": {"RnNigRIu": {}, "cDZclVbb": {}, "f5Rebi15": {}}, "inventoryId": "PsgHJXrt", "serverCustomAttributes": {"OG9QSbUT": {}, "Fm1HmRK1": {}, "AVJPzS6M": {}}, "slotId": "AU8OvPtr", "sourceItemId": "mFpEEcmW", "tags": ["fuNnOQ43", "HGx0IGh2", "vwdtSxkY"], "type": "XVwBrt6f"}]}, {"consumeItems": [{"inventoryId": "gCv5s95R", "qty": 81, "slotId": "TKX7tEgS", "sourceItemId": "gflQzyyJ"}, {"inventoryId": "vxwherO1", "qty": 67, "slotId": "qok6YSkX", "sourceItemId": "Fi1PWHt5"}, {"inventoryId": "S8rx3slx", "qty": 75, "slotId": "EBNkuwYC", "sourceItemId": "SNlR7OvE"}], "createItems": [{"customAttributes": {"1LrO6cKW": {}, "hjZRFAMQ": {}, "OiCpjUg6": {}}, "inventoryConfigurationCode": "Tt8M2Pqm", "inventoryId": "BeQmaSzy", "qty": 7, "serverCustomAttributes": {"35kZQlX5": {}, "lDw2cScl": {}, "EL9s0mJo": {}}, "slotId": "bTcpzykR", "slotUsed": 70, "sourceItemId": "lo2b456A", "tags": ["p9qBRS8p", "3keP6FLy", "PmvQjqyE"], "toSpecificInventory": true, "type": "Ki5Ox7eT"}, {"customAttributes": {"B7ZWj562": {}, "bGbx9kZx": {}, "szxCodhW": {}}, "inventoryConfigurationCode": "1DgGRizJ", "inventoryId": "7BqvQWp9", "qty": 62, "serverCustomAttributes": {"vm7p1wM5": {}, "3zAX7h39": {}, "2QH3qt5o": {}}, "slotId": "w2LrjnkW", "slotUsed": 88, "sourceItemId": "khV4oboW", "tags": ["LchF3tUc", "V5JSt2Ww", "rog7rEdm"], "toSpecificInventory": false, "type": "J3u97l0I"}, {"customAttributes": {"5UMMwlff": {}, "ThYZ5Fk6": {}, "Mdj15NeV": {}}, "inventoryConfigurationCode": "V2nPO3Sn", "inventoryId": "imSJA0uB", "qty": 34, "serverCustomAttributes": {"Sv5yBOis": {}, "N3h6P6nY": {}, "r3SA2riz": {}}, "slotId": "jDR1EhUi", "slotUsed": 76, "sourceItemId": "n6y32PkO", "tags": ["Cq6aRmWf", "6fQmAKyo", "fSgf1T37"], "toSpecificInventory": false, "type": "qzIsWEo1"}], "removeItems": [{"inventoryId": "YYaEgQg1", "slotId": "8TMeuLQX", "sourceItemId": "MS8Fxs3N"}, {"inventoryId": "pMoyKKMU", "slotId": "kImT4J0x", "sourceItemId": "s4Obmsi6"}, {"inventoryId": "oylcsFy8", "slotId": "oDig3D0B", "sourceItemId": "dxomUf5v"}], "targetUserId": "J4vho4ME", "updateItems": [{"customAttributes": {"WVnibtXq": {}, "veB540ZM": {}, "PSSvHpZo": {}}, "inventoryId": "nrcK90Kc", "serverCustomAttributes": {"Botwgmag": {}, "b0UEAMbq": {}, "rw0nszR9": {}}, "slotId": "PsqiKSpg", "sourceItemId": "gOMSO5pc", "tags": ["0lQKkWQG", "nFRuwOxC", "siVaZL63"], "type": "vgJEJ5sy"}, {"customAttributes": {"qruaRBal": {}, "1jxDyiMq": {}, "IywVSXCQ": {}}, "inventoryId": "fdaDyT1U", "serverCustomAttributes": {"6hgWo0e7": {}, "sREedwTl": {}, "oWltTAuQ": {}}, "slotId": "3QjYWqJp", "sourceItemId": "kXupWAcL", "tags": ["0AfHP9Cu", "Tc9GTVIC", "HQSXb4Jr"], "type": "Tf84vlNl"}, {"customAttributes": {"PaRW15B7": {}, "LMxa3Jt2": {}, "TDwiyM5m": {}}, "inventoryId": "CA5yNRVq", "serverCustomAttributes": {"LclNVDIH": {}, "bjdxz8iS": {}, "vNJFgdaz": {}}, "slotId": "VhdFMeHf", "sourceItemId": "05wzgnO8", "tags": ["Vk5GShEg", "RxmzGyB9", "sStH4aEr"], "type": "4Co6P8rU"}]}, {"consumeItems": [{"inventoryId": "ORaAIm3Y", "qty": 73, "slotId": "F9uAhJ5i", "sourceItemId": "060FU20F"}, {"inventoryId": "FlME7dOc", "qty": 30, "slotId": "mwuHrRei", "sourceItemId": "vxsl0vTo"}, {"inventoryId": "Hk8UyXrx", "qty": 6, "slotId": "lsBcRRz1", "sourceItemId": "w9bBhrch"}], "createItems": [{"customAttributes": {"DbE0Va43": {}, "6LIxRQlh": {}, "EGPTUwuI": {}}, "inventoryConfigurationCode": "ZQwb9zR9", "inventoryId": "xPlmW3dh", "qty": 83, "serverCustomAttributes": {"eOCuDyRX": {}, "999bwo6c": {}, "FX5ynHkf": {}}, "slotId": "v8hn1vqP", "slotUsed": 48, "sourceItemId": "g0fSsxNb", "tags": ["6gwf1rct", "zualXylf", "LDFnVsHT"], "toSpecificInventory": false, "type": "BMaRxVTv"}, {"customAttributes": {"H3qVupyn": {}, "YpVAhmt5": {}, "PNhnMtfr": {}}, "inventoryConfigurationCode": "sC3m4PHy", "inventoryId": "6vuTh1w4", "qty": 93, "serverCustomAttributes": {"avbNFXWe": {}, "VhqJN0cT": {}, "VCdhClCI": {}}, "slotId": "mSiVUxtK", "slotUsed": 51, "sourceItemId": "ZEY9nN0h", "tags": ["PwlKtibW", "GmlBP0u5", "BP7ZVdRw"], "toSpecificInventory": true, "type": "L5KHWKal"}, {"customAttributes": {"9Md5imUX": {}, "54YqgBoT": {}, "TSZnDSNs": {}}, "inventoryConfigurationCode": "XcLRmxu7", "inventoryId": "FmA96Lj6", "qty": 50, "serverCustomAttributes": {"52K2NfU3": {}, "JfUDimRv": {}, "HY8DT8Sw": {}}, "slotId": "VQg98i8M", "slotUsed": 74, "sourceItemId": "DjmVPTcv", "tags": ["FCRTtzBU", "waO7VOT2", "6X1cFoBa"], "toSpecificInventory": true, "type": "DDQYDv6C"}], "removeItems": [{"inventoryId": "vxAO7Qff", "slotId": "ZGfbdbkr", "sourceItemId": "eIj3GweR"}, {"inventoryId": "HYpQoKld", "slotId": "vy9v66MK", "sourceItemId": "uGEa9LYG"}, {"inventoryId": "N9GfeyXD", "slotId": "5EjhUYKR", "sourceItemId": "KBX8edIG"}], "targetUserId": "fa9A9JA0", "updateItems": [{"customAttributes": {"zXEnIdJG": {}, "luYwB3S0": {}, "6UV4W3lE": {}}, "inventoryId": "xH6TLHZz", "serverCustomAttributes": {"afb61mvY": {}, "9gUNh0At": {}, "cxHqtta6": {}}, "slotId": "bWYjnj7Y", "sourceItemId": "3Fs7gm17", "tags": ["GhJclaIz", "6CiwYoMw", "KO6FQ6yu"], "type": "c7ecvnTc"}, {"customAttributes": {"FQW9EMfN": {}, "VuBdKIYv": {}, "KV61pO61": {}}, "inventoryId": "pyrDc5Hb", "serverCustomAttributes": {"GHSPyiSw": {}, "uZoAOixD": {}, "gsppMfgE": {}}, "slotId": "gwTsQWQ9", "sourceItemId": "Vcac7chB", "tags": ["iBl3iMB3", "pjDgfcF1", "IvAOtfnF"], "type": "Sht4mpQx"}, {"customAttributes": {"5BrzAzrs": {}, "2VgGCfio": {}, "14y7eGw3": {}}, "inventoryId": "xPW2HKmg", "serverCustomAttributes": {"zFLwGSgO": {}, "x1lpHCui": {}, "3D1d4RtQ": {}}, "slotId": "2ht6ucaR", "sourceItemId": "XmpeB8uy", "tags": ["QydGJETy", "48ouXumV", "TBrV6qxB"], "type": "T5bAyK6f"}]}], "requestId": "gvaE34wy"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminCreateChainingOperations \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 2 'AdminCreateChainingOperations' test.out

#- 3 AdminListInventories
$CLI_EXE \
    --sn inventory \
    --op AdminListInventories \
    --namespace $AB_NAMESPACE \
    --inventoryConfigurationCode 'iYkm5UEs' \
    --limit '30' \
    --offset '94' \
    --sortBy 'inventoryConfigurationCode:desc' \
    --userId 'rtoZ1tPz' \
    > test.out 2>&1
eval_tap $? 3 'AdminListInventories' test.out

#- 4 AdminCreateInventory
# body param: body
echo '{"inventoryConfigurationCode": "EyUZqcJ5", "userId": "fkAm3ZHx"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminCreateInventory \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 4 'AdminCreateInventory' test.out

#- 5 AdminGetInventory
$CLI_EXE \
    --sn inventory \
    --op AdminGetInventory \
    --inventoryId '4dTbOeyq' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 5 'AdminGetInventory' test.out

#- 6 AdminUpdateInventory
# body param: body
echo '{"incMaxSlots": 20}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminUpdateInventory \
    --inventoryId '0KvnZ1uy' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 6 'AdminUpdateInventory' test.out

#- 7 DeleteInventory
# body param: body
echo '{"message": "NnSglCA8"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op DeleteInventory \
    --inventoryId 'MelM03kA' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 7 'DeleteInventory' test.out

#- 8 AdminListItems
$CLI_EXE \
    --sn inventory \
    --op AdminListItems \
    --inventoryId 'O6F2ca6U' \
    --namespace $AB_NAMESPACE \
    --limit '65' \
    --offset '20' \
    --qtyGte '0' \
    --sortBy 'updatedAt' \
    --sourceItemId 'FANbP5RJ' \
    --tags 'Tgs9C0BQ' \
    > test.out 2>&1
eval_tap $? 8 'AdminListItems' test.out

#- 9 AdminGetInventoryItem
$CLI_EXE \
    --sn inventory \
    --op AdminGetInventoryItem \
    --inventoryId 'O1FuxIl0' \
    --namespace $AB_NAMESPACE \
    --slotId 'cjtC2cYN' \
    --sourceItemId 'f2ZCGYAq' \
    > test.out 2>&1
eval_tap $? 9 'AdminGetInventoryItem' test.out

#- 10 AdminListInventoryConfigurations
$CLI_EXE \
    --sn inventory \
    --op AdminListInventoryConfigurations \
    --namespace $AB_NAMESPACE \
    --code 'Lyrx2khh' \
    --limit '17' \
    --offset '15' \
    --sortBy 'code:desc' \
    > test.out 2>&1
eval_tap $? 10 'AdminListInventoryConfigurations' test.out

#- 11 AdminCreateInventoryConfiguration
# body param: body
echo '{"code": "V7dqlz8q", "description": "QXtHr0pI", "initialMaxSlots": 59, "maxInstancesPerUser": 100, "maxUpgradeSlots": 38, "name": "eNg8tgxD"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminCreateInventoryConfiguration \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 11 'AdminCreateInventoryConfiguration' test.out

#- 12 AdminGetInventoryConfiguration
$CLI_EXE \
    --sn inventory \
    --op AdminGetInventoryConfiguration \
    --inventoryConfigurationId 'QNV2wdul' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 12 'AdminGetInventoryConfiguration' test.out

#- 13 AdminUpdateInventoryConfiguration
# body param: body
echo '{"code": "Lz4ZjNLd", "description": "GRGmQZwK", "initialMaxSlots": 100, "maxInstancesPerUser": 60, "maxUpgradeSlots": 97, "name": "coGHg6LJ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminUpdateInventoryConfiguration \
    --inventoryConfigurationId 'JvD7CiBe' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 13 'AdminUpdateInventoryConfiguration' test.out

#- 14 AdminDeleteInventoryConfiguration
$CLI_EXE \
    --sn inventory \
    --op AdminDeleteInventoryConfiguration \
    --inventoryConfigurationId 'GKbQQGe6' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 14 'AdminDeleteInventoryConfiguration' test.out

#- 15 AdminListItemTypes
$CLI_EXE \
    --sn inventory \
    --op AdminListItemTypes \
    --namespace $AB_NAMESPACE \
    --limit '36' \
    --offset '5' \
    --sortBy 'createdAt' \
    > test.out 2>&1
eval_tap $? 15 'AdminListItemTypes' test.out

#- 16 AdminCreateItemType
# body param: body
echo '{"name": "Dl5zz3SM"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminCreateItemType \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 16 'AdminCreateItemType' test.out

#- 17 AdminDeleteItemType
$CLI_EXE \
    --sn inventory \
    --op AdminDeleteItemType \
    --itemTypeName 'kTWLupcq' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 17 'AdminDeleteItemType' test.out

#- 18 AdminListTags
$CLI_EXE \
    --sn inventory \
    --op AdminListTags \
    --namespace $AB_NAMESPACE \
    --limit '19' \
    --offset '65' \
    --owner '6JFcE2vF' \
    --sortBy 'name:asc' \
    > test.out 2>&1
eval_tap $? 18 'AdminListTags' test.out

#- 19 AdminCreateTag
# body param: body
echo '{"name": "kIRt8RIZ", "owner": "SERVER"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminCreateTag \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 19 'AdminCreateTag' test.out

#- 20 AdminDeleteTag
$CLI_EXE \
    --sn inventory \
    --op AdminDeleteTag \
    --namespace $AB_NAMESPACE \
    --tagName 'cMGrHnW6' \
    > test.out 2>&1
eval_tap $? 20 'AdminDeleteTag' test.out

#- 21 AdminConsumeUserItem
# body param: body
echo '{"qty": 81, "slotId": "65FuU4sf", "sourceItemId": "4hiJALVI"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminConsumeUserItem \
    --inventoryId 'qJ2ZZ8q9' \
    --namespace $AB_NAMESPACE \
    --userId 'jQieW0Rk' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 21 'AdminConsumeUserItem' test.out

#- 22 AdminBulkUpdateMyItems
# body param: body
echo '[{"customAttributes": {"DjDhjYPl": {}, "oWUMXRkR": {}, "YOmJJWG6": {}}, "serverCustomAttributes": {"zsZsdoWZ": {}, "IPR3Gy6L": {}, "evpRynuU": {}}, "slotId": "lP2Zvqai", "sourceItemId": "ezJM68Ln", "tags": ["oOPTgTt7", "WwaTAkLq", "hyIVaL6Y"], "type": "V13Llqm4"}, {"customAttributes": {"zOXolbk2": {}, "zh4Geepw": {}, "kBp261S8": {}}, "serverCustomAttributes": {"YTuxIi8n": {}, "yYM2wRlw": {}, "bmDDGALo": {}}, "slotId": "cNFjBWI2", "sourceItemId": "AFWNcMTi", "tags": ["Ti1OfRR4", "inDR2u5k", "3c0bmHIZ"], "type": "seWvi6Zp"}, {"customAttributes": {"fdbiAdd0": {}, "BZ3YffMe": {}, "PbcupRUq": {}}, "serverCustomAttributes": {"CQvZqNpv": {}, "1GhTYDRS": {}, "kRscpZzc": {}}, "slotId": "6nHkJanx", "sourceItemId": "tYEfmjFd", "tags": ["uWsghrfh", "8OXidLHl", "BHBxWApN"], "type": "gU7Oua1C"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminBulkUpdateMyItems \
    --inventoryId '8tg28zR9' \
    --namespace $AB_NAMESPACE \
    --userId 'Wmdso714' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 22 'AdminBulkUpdateMyItems' test.out

#- 23 AdminSaveItemToInventory
# body param: body
echo '{"customAttributes": {"v6QOjj1O": {}, "UU000usD": {}, "8lWr1emm": {}}, "qty": 10, "serverCustomAttributes": {"haKjwx3c": {}, "YcpObrfP": {}, "lLMkHynR": {}}, "slotId": "HyoLbIAX", "slotUsed": 7, "sourceItemId": "562WXsTb", "tags": ["H65FJARh", "nXvFqPP9", "bLfpxlOx"], "type": "L7smVO7x"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminSaveItemToInventory \
    --inventoryId 'vymMiTV4' \
    --namespace $AB_NAMESPACE \
    --userId 'x4hBtoOf' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 23 'AdminSaveItemToInventory' test.out

#- 24 AdminBulkRemoveItems
# body param: body
echo '[{"slotId": "XbWUird7", "sourceItemId": "FgVBZc5g"}, {"slotId": "7ZmpYmN6", "sourceItemId": "i8pXjzK7"}, {"slotId": "ipp1uBdk", "sourceItemId": "SEAIo7xq"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminBulkRemoveItems \
    --inventoryId 'iMjxoWqB' \
    --namespace $AB_NAMESPACE \
    --userId 'vp8qnc53' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 24 'AdminBulkRemoveItems' test.out

#- 25 AdminSaveItem
# body param: body
echo '{"customAttributes": {"OgXhSI95": {}, "F3xlTK5C": {}, "FSxLzpib": {}}, "inventoryConfigurationCode": "R7jF733S", "qty": 79, "serverCustomAttributes": {"3ZC7uL8U": {}, "uAMiBvjH": {}, "jeZr8Tlv": {}}, "slotId": "TWcVRuIH", "slotUsed": 65, "sourceItemId": "sv7ABLnZ", "tags": ["5rlY7VWw", "Bm08LJpD", "I5Wzbeby"], "type": "BsAWJP45"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminSaveItem \
    --namespace $AB_NAMESPACE \
    --userId 'RyHaAJKG' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 25 'AdminSaveItem' test.out

#- 26 PublicListInventoryConfigurations
$CLI_EXE \
    --sn inventory \
    --op PublicListInventoryConfigurations \
    --namespace $AB_NAMESPACE \
    --code 'JhuILzhW' \
    --limit '17' \
    --offset '71' \
    --sortBy 'code:desc' \
    > test.out 2>&1
eval_tap $? 26 'PublicListInventoryConfigurations' test.out

#- 27 PublicListItemTypes
$CLI_EXE \
    --sn inventory \
    --op PublicListItemTypes \
    --namespace $AB_NAMESPACE \
    --limit '37' \
    --offset '41' \
    --sortBy 'name:asc' \
    > test.out 2>&1
eval_tap $? 27 'PublicListItemTypes' test.out

#- 28 PublicListTags
$CLI_EXE \
    --sn inventory \
    --op PublicListTags \
    --namespace $AB_NAMESPACE \
    --limit '96' \
    --offset '87' \
    --sortBy 'createdAt' \
    > test.out 2>&1
eval_tap $? 28 'PublicListTags' test.out

#- 29 PublicListInventories
$CLI_EXE \
    --sn inventory \
    --op PublicListInventories \
    --namespace $AB_NAMESPACE \
    --inventoryConfigurationCode '4Txg4pc4' \
    --limit '30' \
    --offset '38' \
    --sortBy 'updatedAt' \
    > test.out 2>&1
eval_tap $? 29 'PublicListInventories' test.out

#- 30 PublicConsumeMyItem
# body param: body
echo '{"qty": 28, "slotId": "qkSOzo0i", "sourceItemId": "IhFhG1mi"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op PublicConsumeMyItem \
    --inventoryId 'QVxVOhkC' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 30 'PublicConsumeMyItem' test.out

#- 31 PublicListItems
$CLI_EXE \
    --sn inventory \
    --op PublicListItems \
    --inventoryId 'B0kGaySB' \
    --namespace $AB_NAMESPACE \
    --limit '75' \
    --offset '64' \
    --qtyGte '40' \
    --sortBy 'createdAt:asc' \
    --sourceItemId 'addIPRHz' \
    --tags 'XioNBGZb' \
    > test.out 2>&1
eval_tap $? 31 'PublicListItems' test.out

#- 32 PublicBulkUpdateMyItems
# body param: body
echo '[{"customAttributes": {"JfxolcDA": {}, "8BcAG27t": {}, "eyLrBdgk": {}}, "slotId": "XslBOYBa", "sourceItemId": "b5CcHN2M", "tags": ["mLbmFUiG", "pwjJIHIZ", "cbSCR1tL"]}, {"customAttributes": {"Qc1Nxujz": {}, "i1qpKdue": {}, "8ABUtEYi": {}}, "slotId": "LRTmUvrW", "sourceItemId": "wp9PbJQE", "tags": ["Ko9MkJxj", "xRlHSnjR", "4jnsdG1S"]}, {"customAttributes": {"AVB5W20R": {}, "LB6O3lOs": {}, "iTiln2OH": {}}, "slotId": "7MRZhI1n", "sourceItemId": "bAukyVZW", "tags": ["PYdNBVQm", "Mb6f4JLY", "h6Fg0wlb"]}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op PublicBulkUpdateMyItems \
    --inventoryId '3VVAqqCO' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 32 'PublicBulkUpdateMyItems' test.out

#- 33 PublicBulkRemoveMyItems
# body param: body
echo '[{"slotId": "sf1bc8QB", "sourceItemId": "je2aJ9fJ"}, {"slotId": "JNHgpyRy", "sourceItemId": "nTM0XCG4"}, {"slotId": "u8R7QHpa", "sourceItemId": "vkWwPEkL"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op PublicBulkRemoveMyItems \
    --inventoryId '8vIFT25z' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 33 'PublicBulkRemoveMyItems' test.out

#- 34 PublicMoveMyItems
# body param: body
echo '{"items": [{"qty": 84, "slotId": "s90OTpdD", "sourceItemId": "hlEeFlG3"}, {"qty": 77, "slotId": "Dn7yISY1", "sourceItemId": "vw8zyqvS"}, {"qty": 26, "slotId": "JbhxAQoJ", "sourceItemId": "Je1ZTc2x"}], "srcInventoryId": "737U2fYb"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op PublicMoveMyItems \
    --inventoryId 'APjrzG63' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 34 'PublicMoveMyItems' test.out

#- 35 PublicGetItem
$CLI_EXE \
    --sn inventory \
    --op PublicGetItem \
    --inventoryId 'Af9CqHxY' \
    --namespace $AB_NAMESPACE \
    --slotId 'ZjCIfruE' \
    --sourceItemId 'rvksoNVR' \
    > test.out 2>&1
eval_tap $? 35 'PublicGetItem' test.out


# remove artifacts
rm -f "$CLI_TOKEN_FILE"
rm -f "$TEMP_JSON_INPUT"
rm -f "$TEMP_FILE_UPLOAD"

exit $EXIT_CODE