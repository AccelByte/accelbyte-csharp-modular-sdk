#!/usr/bin/env bash

# Copyright (c) 2021 AccelByte Inc. All Rights Reserved.
# This is licensed software from AccelByte Inc, for limitations
# and restrictions contact your company contract manager.

# This code is generated by tool. DO NOT EDIT.

# Meta:
# - random seed: 
# - template file: 

# Instructions:
# - Run the Justice SDK Mock Server first before running this script.

export AB_BASE_URL="http://127.0.0.1:8080"
export AB_CLIENT_ID="admin"
export AB_CLIENT_SECRET="admin"
export AB_NAMESPACE="test"
export AB_APP_NAME="UnitTest"

EXIT_CODE=0

eval_tap() {
  if [ $1 -eq 0 ]; then
    echo "ok $2 - $3"
  else
    EXIT_CODE=1
    echo "not ok $2 - $3"
    sed 's/^/# /g' $4
  fi
  rm -f $4
}

CLI_EXE="AccelByte.Sdk.Sample.Cli"
CLI_TOKEN_FILE="$(dirname "$(which $CLI_EXE)")/token.json"
TEMP_JSON_INPUT="input_json.json"
TEMP_FILE_UPLOAD="file_upload.bin"

echo "TAP version 13"
echo "1..41"

#- 1 Login
$CLI_EXE --op login --lt user --user user --pass user > test.out 2>&1
eval_tap $? 1 'Login' test.out

if [ $EXIT_CODE -ne 0 ]; then
  echo "Bail out! Login failed."
  exit $EXIT_CODE
fi

# echo "foo" > "$CLI_TOKEN_FILE"

#- 2 AdminCreateChainingOperations
# body param: body
echo '{"message": "tcfSBhj2", "operations": [{"consumeItems": [{"inventoryId": "dZTZOxOA", "qty": 19, "slotId": "gnTLZwV2", "sourceItemId": "353lkjea"}, {"inventoryId": "23qwMHYs", "qty": 48, "slotId": "o0j2ldOV", "sourceItemId": "DPAH1spl"}, {"inventoryId": "z40pC0o0", "qty": 56, "slotId": "wahZ1B2u", "sourceItemId": "EXbUFpA8"}], "createItems": [{"customAttributes": {"xt7gXBrM": {}, "wlg74CNd": {}, "8825xRWb": {}}, "inventoryConfigurationCode": "V96jceCA", "inventoryId": "QnWDJcLx", "qty": 82, "serverCustomAttributes": {"zgkTfZTr": {}, "L3lLB4eB": {}, "sZfr1LyH": {}}, "slotId": "qdGhb1DL", "slotUsed": 11, "source": "3HHERnwQ", "sourceItemId": "W0ErH4N7", "tags": ["Vz8KMLP2", "WYfwMIGM", "s8NdPvEO"], "toSpecificInventory": false, "type": "hv6okgzF"}, {"customAttributes": {"TlNCGYng": {}, "TuRLXFIa": {}, "m1rUbYny": {}}, "inventoryConfigurationCode": "psl4yqug", "inventoryId": "hNQyI6tc", "qty": 25, "serverCustomAttributes": {"6F548XEH": {}, "gVA13ewE": {}, "NZNcjp5W": {}}, "slotId": "UOTM7f8w", "slotUsed": 0, "source": "3czeelrF", "sourceItemId": "OEVuDXOH", "tags": ["xUAzItLw", "ucB4OeVr", "tU3iBD6y"], "toSpecificInventory": true, "type": "81E5134Y"}, {"customAttributes": {"KqLQxjmn": {}, "X7b89tif": {}, "HGxSOnVO": {}}, "inventoryConfigurationCode": "7A26M72P", "inventoryId": "B3N1yzvl", "qty": 23, "serverCustomAttributes": {"F9MGJRry": {}, "d4pLRSDZ": {}, "4ZeATUOm": {}}, "slotId": "t0110EV0", "slotUsed": 100, "source": "kza8yZJe", "sourceItemId": "BISJQmuR", "tags": ["71UovQ5y", "coYpufwc", "lPwZbhnd"], "toSpecificInventory": true, "type": "YsxIHbhc"}], "removeItems": [{"inventoryId": "5beA04qk", "slotId": "tcIcKOy6", "sourceItemId": "cAdHtSDK"}, {"inventoryId": "r8b8E2c4", "slotId": "Kn4F4j5U", "sourceItemId": "SdbGfSo8"}, {"inventoryId": "A5HVRDyH", "slotId": "g0x2b9gA", "sourceItemId": "TSYhq2oB"}], "targetUserId": "IH7ei85g", "updateItems": [{"customAttributes": {"1c0ybXD6": {}, "Z2O3eayC": {}, "GpQXk7Lk": {}}, "inventoryId": "DGbeM9Nu", "serverCustomAttributes": {"eRf8HuYW": {}, "p3CBUjat": {}, "bTiCJPeE": {}}, "slotId": "yOEoqXLT", "sourceItemId": "jiQdX23U", "tags": ["NXBMvARZ", "HHbtGlht", "esjXPQQ8"], "type": "saIdZwDA"}, {"customAttributes": {"rkMDS0D6": {}, "EPSj51aN": {}, "vsYhLI1r": {}}, "inventoryId": "jtsussLF", "serverCustomAttributes": {"qivVjDCO": {}, "BN00O10r": {}, "xw3pONyq": {}}, "slotId": "yyHgcdip", "sourceItemId": "mImy4Ynq", "tags": ["BwNqB5vg", "5lMH6ydX", "tYreElkJ"], "type": "2UjcXIgS"}, {"customAttributes": {"nU4pyi4b": {}, "UvOlnvQy": {}, "ghDkUewi": {}}, "inventoryId": "9Qifjx4e", "serverCustomAttributes": {"lckCG9N2": {}, "PgY79dDN": {}, "AVHztLpi": {}}, "slotId": "iXiRQpmH", "sourceItemId": "efXTCz8h", "tags": ["JtlklTx8", "GAB2F7jc", "VVkLstXW"], "type": "FGN9AtvN"}]}, {"consumeItems": [{"inventoryId": "WDREr3Dg", "qty": 54, "slotId": "DaKMTLRo", "sourceItemId": "yCNoRibw"}, {"inventoryId": "zpc5YoMc", "qty": 56, "slotId": "eEZTdlpc", "sourceItemId": "o2m1OHBa"}, {"inventoryId": "HaiB8xmK", "qty": 63, "slotId": "TVZv0Iew", "sourceItemId": "UoiVgVBe"}], "createItems": [{"customAttributes": {"OLXPteTS": {}, "O7K6AIKy": {}, "MmmPsNdC": {}}, "inventoryConfigurationCode": "aOETuIRM", "inventoryId": "jzGX6ql6", "qty": 57, "serverCustomAttributes": {"xG7MYMHu": {}, "XYQP35qF": {}, "TXLbGJ20": {}}, "slotId": "YJCeOKgG", "slotUsed": 89, "source": "QQOIreJZ", "sourceItemId": "amsd0I6M", "tags": ["pznhQDyj", "iR09dQKb", "ZQejhuxA"], "toSpecificInventory": false, "type": "MqCyw7dM"}, {"customAttributes": {"jiXveeni": {}, "f5VsyZGn": {}, "0QMTs1as": {}}, "inventoryConfigurationCode": "zSff0Qci", "inventoryId": "HiW5m4uS", "qty": 83, "serverCustomAttributes": {"EoMo9ee2": {}, "RzrPU3bD": {}, "4WK4W9sM": {}}, "slotId": "BHZzcPtn", "slotUsed": 73, "source": "6zzVVMAF", "sourceItemId": "nkHRCd3h", "tags": ["WZyn38Pb", "bIlR7GWG", "UDOGJ9V4"], "toSpecificInventory": false, "type": "JRsGWmbW"}, {"customAttributes": {"KMw2CDYK": {}, "ukc4ZnJt": {}, "SKdXLscS": {}}, "inventoryConfigurationCode": "zLv3mzod", "inventoryId": "Q80b84Uo", "qty": 10, "serverCustomAttributes": {"PvOX5PFN": {}, "A0o1LZfz": {}, "TkofhlJZ": {}}, "slotId": "AzZmDDln", "slotUsed": 42, "source": "toM16qAh", "sourceItemId": "FzpzwNze", "tags": ["mnIc3DR0", "VkZwPDmE", "DqQwCgCB"], "toSpecificInventory": false, "type": "0tRk1pdo"}], "removeItems": [{"inventoryId": "59PLrSht", "slotId": "efI1PfYG", "sourceItemId": "XRHOK4fN"}, {"inventoryId": "u9KfFTOR", "slotId": "cV3Svh7o", "sourceItemId": "gW6y5exq"}, {"inventoryId": "kpJYIW8T", "slotId": "jigtK3n6", "sourceItemId": "HWrofhU5"}], "targetUserId": "YOgeyLCH", "updateItems": [{"customAttributes": {"1NnG3m6H": {}, "LEjDHsX3": {}, "qLqshOhU": {}}, "inventoryId": "9cpeSTlH", "serverCustomAttributes": {"u45ZI3Ob": {}, "G08mujgk": {}, "8afdbWhB": {}}, "slotId": "mgt8P0Ak", "sourceItemId": "7lwwfkll", "tags": ["YMTawrEV", "xQ8M2p8D", "7i8lfr61"], "type": "UVbpG9e1"}, {"customAttributes": {"IEv3b1g9": {}, "tsZyvPgD": {}, "3v30m9Mr": {}}, "inventoryId": "Tg7bniyK", "serverCustomAttributes": {"g5MClPjf": {}, "sKlTrypj": {}, "uQDjto9l": {}}, "slotId": "Xi7Paznk", "sourceItemId": "b0LKk84u", "tags": ["J7MUG6E9", "s6ngw9DM", "B28gAypI"], "type": "tGkjoQZd"}, {"customAttributes": {"peDfz4Wj": {}, "1eeGCcuh": {}, "5orvHIss": {}}, "inventoryId": "KYWjJpJa", "serverCustomAttributes": {"ODOnLVdt": {}, "sytCrIPH": {}, "3wvrvifD": {}}, "slotId": "dd2qOulc", "sourceItemId": "YJilLPOa", "tags": ["xV7CNl9S", "jM2GsbrH", "QiZINgUd"], "type": "D9PyE98k"}]}, {"consumeItems": [{"inventoryId": "ACryZk8G", "qty": 46, "slotId": "cpuP1GWh", "sourceItemId": "oQZsrbsh"}, {"inventoryId": "yIBHPzGK", "qty": 75, "slotId": "9jHeirF5", "sourceItemId": "wQj4MKJU"}, {"inventoryId": "F16ar1Mc", "qty": 76, "slotId": "dIT1A77C", "sourceItemId": "j2JSkLOV"}], "createItems": [{"customAttributes": {"x90Rt5oR": {}, "dQQjaFca": {}, "wcjfrvrB": {}}, "inventoryConfigurationCode": "FGkCWZ7M", "inventoryId": "6yLR1n6Y", "qty": 91, "serverCustomAttributes": {"fqvRDAhx": {}, "73M4A9HT": {}, "NRXaKaFO": {}}, "slotId": "3JqdBk4i", "slotUsed": 32, "source": "ch2nGlkH", "sourceItemId": "zXskZ9fc", "tags": ["k9w6EAkL", "caPh4WhO", "gwpL4Sjq"], "toSpecificInventory": true, "type": "JglLIl21"}, {"customAttributes": {"Zjr4HEBo": {}, "YrJ9h2UB": {}, "HXzDa3pj": {}}, "inventoryConfigurationCode": "wWVBRjja", "inventoryId": "xzdaZ9us", "qty": 27, "serverCustomAttributes": {"i9QGEHkM": {}, "34ea6xrw": {}, "UdWvdARl": {}}, "slotId": "js86ffIG", "slotUsed": 1, "source": "vLIbhG7b", "sourceItemId": "nVmt2zMH", "tags": ["Rs5vPpfV", "dCEjpeue", "wEpu1elB"], "toSpecificInventory": true, "type": "Kmb2rE3M"}, {"customAttributes": {"TxMOm33F": {}, "7bP5u1Kc": {}, "nG0Tl6gV": {}}, "inventoryConfigurationCode": "DgcuOaK5", "inventoryId": "JvAwt4SC", "qty": 83, "serverCustomAttributes": {"g7RCTXR8": {}, "z1bnDc5u": {}, "zF9wU2GG": {}}, "slotId": "GdSbGkAe", "slotUsed": 30, "source": "H7FHz1oF", "sourceItemId": "qBMhxQr8", "tags": ["7PHNkV16", "okwK5PLb", "rMrVuEE0"], "toSpecificInventory": false, "type": "erBGQuVg"}], "removeItems": [{"inventoryId": "eWrYAGCo", "slotId": "mnBLnvjN", "sourceItemId": "6z6Gmk7B"}, {"inventoryId": "DhFrRxJj", "slotId": "Twv5w3ZU", "sourceItemId": "ECcDM1lK"}, {"inventoryId": "gLuMiUBD", "slotId": "NrKQWFKA", "sourceItemId": "yN7APXXY"}], "targetUserId": "TMyNiphX", "updateItems": [{"customAttributes": {"7JsNEBVh": {}, "flcE1tZ1": {}, "Vt2biF5Q": {}}, "inventoryId": "2XbjQtu8", "serverCustomAttributes": {"Um8zjCue": {}, "SELYOseX": {}, "tf15bwgL": {}}, "slotId": "v8SjcH3B", "sourceItemId": "XwfH4ykT", "tags": ["nOfeySNP", "xakJH7pE", "ViWK3XN5"], "type": "DalMVFoG"}, {"customAttributes": {"tAVeeZv5": {}, "mL638kec": {}, "aLqbR9s7": {}}, "inventoryId": "mnUxyZw9", "serverCustomAttributes": {"2dAkYNqb": {}, "iZjr8vL3": {}, "qwihRv2w": {}}, "slotId": "8qF5BhGr", "sourceItemId": "ls5XHyYF", "tags": ["4V10DMpV", "7MrkZNRI", "Kr27XPtD"], "type": "dAdZkmWM"}, {"customAttributes": {"uHzvSZsU": {}, "HOdu7foI": {}, "zwXjcoTG": {}}, "inventoryId": "e6Rs1S5H", "serverCustomAttributes": {"UgdeGC6a": {}, "iKSHhFQo": {}, "n8qw6ByX": {}}, "slotId": "oPhvRGcp", "sourceItemId": "Qiq4Cdyi", "tags": ["CyORdiYA", "KBi3WdIo", "0ixadNKe"], "type": "rP7NCdPe"}]}], "requestId": "ncZkEFME"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminCreateChainingOperations \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 2 'AdminCreateChainingOperations' test.out

#- 3 AdminListIntegrationConfigurations
$CLI_EXE \
    --sn inventory \
    --op AdminListIntegrationConfigurations \
    --namespace $AB_NAMESPACE \
    --limit '57' \
    --offset '26' \
    --sortBy 'createdAt' \
    > test.out 2>&1
eval_tap $? 3 'AdminListIntegrationConfigurations' test.out

#- 4 AdminCreateIntegrationConfiguration
# body param: body
echo '{"mapItemType": ["qOvdR09E", "dEBnCGLn", "XOhxZLyv"], "serviceName": "ADj1eUnp", "targetInventoryCode": "5tpjUHDH"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminCreateIntegrationConfiguration \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 4 'AdminCreateIntegrationConfiguration' test.out

#- 5 AdminUpdateIntegrationConfiguration
# body param: body
echo '{"mapItemType": ["6N0d1Xhs", "wV2YQE9N", "dbMXwDMB"], "serviceName": "dNfpR0Ck", "targetInventoryCode": "hMqWFqOc"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminUpdateIntegrationConfiguration \
    --integrationConfigurationId 'E8INrlks' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 5 'AdminUpdateIntegrationConfiguration' test.out

#- 6 AdminUpdateStatusIntegrationConfiguration
# body param: body
echo '{"status": "TIED"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminUpdateStatusIntegrationConfiguration \
    --integrationConfigurationId 'XnODsxtE' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 6 'AdminUpdateStatusIntegrationConfiguration' test.out

#- 7 AdminListInventories
$CLI_EXE \
    --sn inventory \
    --op AdminListInventories \
    --namespace $AB_NAMESPACE \
    --inventoryConfigurationCode 'oO94dMIA' \
    --limit '64' \
    --offset '19' \
    --sortBy 'updatedAt:asc' \
    --userId 'DFDA9v15' \
    > test.out 2>&1
eval_tap $? 7 'AdminListInventories' test.out

#- 8 AdminCreateInventory
# body param: body
echo '{"inventoryConfigurationCode": "2NpPfZUJ", "userId": "cOiVMB4C"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminCreateInventory \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 8 'AdminCreateInventory' test.out

#- 9 AdminGetInventory
$CLI_EXE \
    --sn inventory \
    --op AdminGetInventory \
    --inventoryId 'UGqxMtx6' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 9 'AdminGetInventory' test.out

#- 10 AdminUpdateInventory
# body param: body
echo '{"incMaxSlots": 48}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminUpdateInventory \
    --inventoryId 'Cibf647h' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 10 'AdminUpdateInventory' test.out

#- 11 DeleteInventory
# body param: body
echo '{"message": "Gfh3bxTp"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op DeleteInventory \
    --inventoryId '5fXZ2ZAi' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 11 'DeleteInventory' test.out

#- 12 AdminListItems
$CLI_EXE \
    --sn inventory \
    --op AdminListItems \
    --inventoryId 'ExgEw2dP' \
    --namespace $AB_NAMESPACE \
    --limit '75' \
    --offset '68' \
    --sortBy 'createdAt' \
    --sourceItemId 'MvwtDI1t' \
    --tags 'i4euGA6U' \
    > test.out 2>&1
eval_tap $? 12 'AdminListItems' test.out

#- 13 AdminGetInventoryItem
$CLI_EXE \
    --sn inventory \
    --op AdminGetInventoryItem \
    --inventoryId 'fOFORdsw' \
    --namespace $AB_NAMESPACE \
    --slotId 'mxUz5p8I' \
    --sourceItemId 'gr5g6Gpd' \
    > test.out 2>&1
eval_tap $? 13 'AdminGetInventoryItem' test.out

#- 14 AdminListInventoryConfigurations
$CLI_EXE \
    --sn inventory \
    --op AdminListInventoryConfigurations \
    --namespace $AB_NAMESPACE \
    --code '7R8aigH6' \
    --limit '8' \
    --offset '8' \
    --sortBy 'code' \
    > test.out 2>&1
eval_tap $? 14 'AdminListInventoryConfigurations' test.out

#- 15 AdminCreateInventoryConfiguration
# body param: body
echo '{"code": "Re7ZZYhY", "description": "9RfUguap", "initialMaxSlots": 2, "maxInstancesPerUser": 91, "maxUpgradeSlots": 52, "name": "Ha613KSD"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminCreateInventoryConfiguration \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 15 'AdminCreateInventoryConfiguration' test.out

#- 16 AdminGetInventoryConfiguration
$CLI_EXE \
    --sn inventory \
    --op AdminGetInventoryConfiguration \
    --inventoryConfigurationId 'YvSVYtp7' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 16 'AdminGetInventoryConfiguration' test.out

#- 17 AdminUpdateInventoryConfiguration
# body param: body
echo '{"code": "4u8wwSp6", "description": "gzRJ1Z0c", "initialMaxSlots": 6, "maxInstancesPerUser": 71, "maxUpgradeSlots": 86, "name": "5hhab6Po"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminUpdateInventoryConfiguration \
    --inventoryConfigurationId 'YruSdfHp' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 17 'AdminUpdateInventoryConfiguration' test.out

#- 18 AdminDeleteInventoryConfiguration
$CLI_EXE \
    --sn inventory \
    --op AdminDeleteInventoryConfiguration \
    --inventoryConfigurationId 'GKfZbFQ2' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 18 'AdminDeleteInventoryConfiguration' test.out

#- 19 AdminListItemTypes
$CLI_EXE \
    --sn inventory \
    --op AdminListItemTypes \
    --namespace $AB_NAMESPACE \
    --limit '79' \
    --offset '54' \
    --sortBy 'createdAt:desc' \
    > test.out 2>&1
eval_tap $? 19 'AdminListItemTypes' test.out

#- 20 AdminCreateItemType
# body param: body
echo '{"name": "cBqUZjR5"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminCreateItemType \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 20 'AdminCreateItemType' test.out

#- 21 AdminDeleteItemType
$CLI_EXE \
    --sn inventory \
    --op AdminDeleteItemType \
    --itemTypeName 'WTs5jzHs' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 21 'AdminDeleteItemType' test.out

#- 22 AdminListTags
$CLI_EXE \
    --sn inventory \
    --op AdminListTags \
    --namespace $AB_NAMESPACE \
    --limit '82' \
    --offset '83' \
    --owner '8UxsFYro' \
    --sortBy 'name:desc' \
    > test.out 2>&1
eval_tap $? 22 'AdminListTags' test.out

#- 23 AdminCreateTag
# body param: body
echo '{"name": "P1opS1vG", "owner": "CLIENT"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminCreateTag \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 23 'AdminCreateTag' test.out

#- 24 AdminDeleteTag
$CLI_EXE \
    --sn inventory \
    --op AdminDeleteTag \
    --namespace $AB_NAMESPACE \
    --tagName 'TwY5WgAy' \
    > test.out 2>&1
eval_tap $? 24 'AdminDeleteTag' test.out

#- 25 AdminConsumeUserItem
# body param: body
echo '{"qty": 33, "slotId": "zrY0O5Wi", "sourceItemId": "01Vl9fCB"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminConsumeUserItem \
    --inventoryId '2jfe9vPy' \
    --namespace $AB_NAMESPACE \
    --userId 'xVtYGQX9' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 25 'AdminConsumeUserItem' test.out

#- 26 AdminBulkUpdateMyItems
# body param: body
echo '[{"customAttributes": {"wSp1OOsz": {}, "OEp1iDsO": {}, "SMZ9L2bn": {}}, "serverCustomAttributes": {"qxT1XDVf": {}, "FXFQqx3g": {}, "5t3fZVHQ": {}}, "slotId": "jhiZJt44", "sourceItemId": "C1sMio2D", "tags": ["8oS6IX3C", "9Iu91J1l", "72Xm5jb8"], "type": "lWr1YUWZ"}, {"customAttributes": {"idIKH2CF": {}, "sJL8A70M": {}, "NdNeYjO6": {}}, "serverCustomAttributes": {"mjxuGV6B": {}, "bo8UTkNs": {}, "iEulh8mK": {}}, "slotId": "cIBkesUS", "sourceItemId": "MUhoUgph", "tags": ["PzvUnmpt", "WOEWKEXK", "katokAtX"], "type": "baJRTHvD"}, {"customAttributes": {"M7KuzpRJ": {}, "rUgGIMMx": {}, "gmDQaZdr": {}}, "serverCustomAttributes": {"b1psI0aG": {}, "vf7NR6Qh": {}, "d8St0VQW": {}}, "slotId": "yjG8kVz9", "sourceItemId": "Uy1GPtR1", "tags": ["E7NiJllo", "bxuF2yJ7", "p91fn5Na"], "type": "G0SeKWwn"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminBulkUpdateMyItems \
    --inventoryId 'v66XKrqv' \
    --namespace $AB_NAMESPACE \
    --userId '3AXcqbfz' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 26 'AdminBulkUpdateMyItems' test.out

#- 27 AdminSaveItemToInventory
# body param: body
echo '{"customAttributes": {"ngPJsku2": {}, "nNFZmXxf": {}, "Afe1dOyb": {}}, "qty": 58, "serverCustomAttributes": {"hr1xTDcW": {}, "DqbWDPIf": {}, "MceLzJ0k": {}}, "slotId": "0Y76fj2q", "slotUsed": 16, "source": "ECOMMERCE", "sourceItemId": "wo7sFooj", "tags": ["lQfh78Hj", "Hd1Er962", "3uxqs7y4"], "type": "nqdvAN3t"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminSaveItemToInventory \
    --inventoryId 'XaVvvJ9b' \
    --namespace $AB_NAMESPACE \
    --userId 'putcyVra' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 27 'AdminSaveItemToInventory' test.out

#- 28 AdminBulkRemoveItems
# body param: body
echo '[{"slotId": "rlhjAGHI", "sourceItemId": "d4NnauDx"}, {"slotId": "4GvEw44g", "sourceItemId": "BhYhIEgB"}, {"slotId": "ibxFwtrs", "sourceItemId": "IVT43vBV"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminBulkRemoveItems \
    --inventoryId 'Xc4K593m' \
    --namespace $AB_NAMESPACE \
    --userId '9oNM4cPG' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 28 'AdminBulkRemoveItems' test.out

#- 29 AdminSaveItem
# body param: body
echo '{"customAttributes": {"lTU7yAnh": {}, "nybtJOCo": {}, "uc6zFYk2": {}}, "inventoryConfigurationCode": "9iy3MRdt", "qty": 59, "serverCustomAttributes": {"CT72ZVQZ": {}, "adkZ7GtL": {}, "0YBgkUtb": {}}, "slotId": "EeUByjUz", "slotUsed": 53, "source": "ECOMMERCE", "sourceItemId": "lMBNsvtQ", "tags": ["ZFd93Z4s", "PXjKPASd", "JADILOWe"], "type": "OKjVXs0M"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminSaveItem \
    --namespace $AB_NAMESPACE \
    --userId '7nEp5Bye' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 29 'AdminSaveItem' test.out

#- 30 AdminSyncUserEntitlements
$CLI_EXE \
    --sn inventory \
    --op AdminSyncUserEntitlements \
    --namespace $AB_NAMESPACE \
    --userId 'l40oKM80' \
    > test.out 2>&1
eval_tap $? 30 'AdminSyncUserEntitlements' test.out

#- 31 AdminPurchasable
# body param: body
echo '{"entitlementType": "sgrE3y2N", "inventoryConfig": {"slotUsed": 74}, "itemId": "zuCQclva", "itemType": "MyhdXVEB", "items": [{"bundledQty": 94, "entitlementType": "EwwpsxyX", "inventoryConfig": {"slotUsed": 32}, "itemId": "HyC6FJHF", "itemType": "CC7QsFDR", "sku": "KD9VKUqx", "stackable": false, "useCount": 22}, {"bundledQty": 66, "entitlementType": "JT2mjVWi", "inventoryConfig": {"slotUsed": 64}, "itemId": "GfutOZ2U", "itemType": "pIOEVXZq", "sku": "jiNpy7VK", "stackable": false, "useCount": 81}, {"bundledQty": 64, "entitlementType": "mB2GVPNB", "inventoryConfig": {"slotUsed": 28}, "itemId": "oDU5wezU", "itemType": "whK5BXiv", "sku": "Vf9iFAdo", "stackable": true, "useCount": 27}], "quantity": 17, "sku": "IE8CLsjt", "stackable": true, "useCount": 63}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminPurchasable \
    --namespace $AB_NAMESPACE \
    --userId 'fFYLdUPi' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 31 'AdminPurchasable' test.out

#- 32 PublicListInventoryConfigurations
$CLI_EXE \
    --sn inventory \
    --op PublicListInventoryConfigurations \
    --namespace $AB_NAMESPACE \
    --code 'qpTsPlHy' \
    --limit '85' \
    --offset '6' \
    --sortBy 'updatedAt:asc' \
    > test.out 2>&1
eval_tap $? 32 'PublicListInventoryConfigurations' test.out

#- 33 PublicListItemTypes
$CLI_EXE \
    --sn inventory \
    --op PublicListItemTypes \
    --namespace $AB_NAMESPACE \
    --limit '45' \
    --offset '10' \
    --sortBy 'createdAt:asc' \
    > test.out 2>&1
eval_tap $? 33 'PublicListItemTypes' test.out

#- 34 PublicListTags
$CLI_EXE \
    --sn inventory \
    --op PublicListTags \
    --namespace $AB_NAMESPACE \
    --limit '1' \
    --offset '81' \
    --sortBy 'name:asc' \
    > test.out 2>&1
eval_tap $? 34 'PublicListTags' test.out

#- 35 PublicListInventories
$CLI_EXE \
    --sn inventory \
    --op PublicListInventories \
    --namespace $AB_NAMESPACE \
    --inventoryConfigurationCode 'iWy7jerH' \
    --limit '91' \
    --offset '85' \
    --sortBy 'updatedAt:desc' \
    > test.out 2>&1
eval_tap $? 35 'PublicListInventories' test.out

#- 36 PublicConsumeMyItem
# body param: body
echo '{"qty": 42, "slotId": "bgr665p7", "sourceItemId": "FzDQZtHJ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op PublicConsumeMyItem \
    --inventoryId 'pcHJAJDS' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 36 'PublicConsumeMyItem' test.out

#- 37 PublicListItems
$CLI_EXE \
    --sn inventory \
    --op PublicListItems \
    --inventoryId '7tHtFODv' \
    --namespace $AB_NAMESPACE \
    --limit '46' \
    --offset '3' \
    --sortBy 'updatedAt:desc' \
    --sourceItemId 'cCFWkxNp' \
    --tags '4TsyIwhl' \
    > test.out 2>&1
eval_tap $? 37 'PublicListItems' test.out

#- 38 PublicBulkUpdateMyItems
# body param: body
echo '[{"customAttributes": {"0BWZMQT9": {}, "qfoBtUQs": {}, "8eRDHUVd": {}}, "slotId": "fkYdYPct", "sourceItemId": "N998EcPJ", "tags": ["zTkeH2gU", "3XB4cxjL", "1Lsc9qpX"]}, {"customAttributes": {"0a6aTq2C": {}, "VYY2kjT8": {}, "D19ZGl9G": {}}, "slotId": "taDNp0Rm", "sourceItemId": "RLQ6lSXk", "tags": ["hBwtff3O", "KBJ9vs7l", "IbGnfC1a"]}, {"customAttributes": {"6ucin3CO": {}, "QYvRVqgm": {}, "TiVjG6jL": {}}, "slotId": "j7Kf8pgy", "sourceItemId": "M0mJzfRd", "tags": ["YKW53kim", "lHQef2v7", "ge7wTQww"]}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op PublicBulkUpdateMyItems \
    --inventoryId 'GSSIBMaU' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 38 'PublicBulkUpdateMyItems' test.out

#- 39 PublicBulkRemoveMyItems
# body param: body
echo '[{"slotId": "cDfIM3YF", "sourceItemId": "pF1cgXRo"}, {"slotId": "OnPOjKKa", "sourceItemId": "5Je3vMWj"}, {"slotId": "lrLssDGC", "sourceItemId": "kgXFOzCh"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op PublicBulkRemoveMyItems \
    --inventoryId 'Sf2snae5' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 39 'PublicBulkRemoveMyItems' test.out

#- 40 PublicMoveMyItems
# body param: body
echo '{"items": [{"qty": 7, "slotId": "BIjMb8a8", "sourceItemId": "DdWb2JEx"}, {"qty": 83, "slotId": "IXpY4ZGw", "sourceItemId": "Z7wuzN2g"}, {"qty": 60, "slotId": "cyV0AJfy", "sourceItemId": "0nxwLJbz"}], "srcInventoryId": "DZadvWkW"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op PublicMoveMyItems \
    --inventoryId '9yaIW26A' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 40 'PublicMoveMyItems' test.out

#- 41 PublicGetItem
$CLI_EXE \
    --sn inventory \
    --op PublicGetItem \
    --inventoryId 'GwWFULss' \
    --namespace $AB_NAMESPACE \
    --slotId 'tiNumsg6' \
    --sourceItemId 'trZ8frc2' \
    > test.out 2>&1
eval_tap $? 41 'PublicGetItem' test.out


# remove artifacts
rm -f "$CLI_TOKEN_FILE"
rm -f "$TEMP_JSON_INPUT"
rm -f "$TEMP_FILE_UPLOAD"

exit $EXIT_CODE