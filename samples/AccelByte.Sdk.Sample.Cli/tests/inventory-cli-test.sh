#!/usr/bin/env bash

# Copyright (c) 2021 AccelByte Inc. All Rights Reserved.
# This is licensed software from AccelByte Inc, for limitations
# and restrictions contact your company contract manager.

# This code is generated by tool. DO NOT EDIT.

# Meta:
# - random seed: 
# - template file: 

# Instructions:
# - Run the Justice SDK Mock Server first before running this script.

export AB_BASE_URL="http://127.0.0.1:8080"
export AB_CLIENT_ID="admin"
export AB_CLIENT_SECRET="admin"
export AB_NAMESPACE="test"
export AB_APP_NAME="UnitTest"

EXIT_CODE=0

eval_tap() {
  if [ $1 -eq 0 ]; then
    echo "ok $2 - $3"
  else
    EXIT_CODE=1
    echo "not ok $2 - $3"
    sed 's/^/# /g' $4
  fi
  rm -f $4
}

CLI_EXE="AccelByte.Sdk.Sample.Cli"
CLI_TOKEN_FILE="$(dirname "$(which $CLI_EXE)")/token.json"
TEMP_JSON_INPUT="input_json.json"
TEMP_FILE_UPLOAD="file_upload.bin"

echo "TAP version 13"
echo "1..35"

#- 1 Login
$CLI_EXE --op login --lt user --user user --pass user > test.out 2>&1
eval_tap $? 1 'Login' test.out

if [ $EXIT_CODE -ne 0 ]; then
  echo "Bail out! Login failed."
  exit $EXIT_CODE
fi

# echo "foo" > "$CLI_TOKEN_FILE"

#- 2 AdminCreateChainingOperations
# body param: body
echo '{"message": "aFEENOn3", "operations": [{"consumeItems": [{"inventoryId": "PgrduKzn", "qty": 41, "slotId": "SO9FpFaN", "sourceItemId": "mnmuIdfe"}, {"inventoryId": "CDEpXQpl", "qty": 46, "slotId": "qkTyR2Jm", "sourceItemId": "yX78JKfH"}, {"inventoryId": "3pF9gzOF", "qty": 31, "slotId": "fTENBeBr", "sourceItemId": "pfWv8PWb"}], "createItems": [{"customAttributes": {"6iXhhRkk": {}, "p3B3dtEj": {}, "giOd4zeG": {}}, "inventoryConfigurationCode": "xhxGGB7Y", "inventoryId": "ZByjABNB", "qty": 16, "serverCustomAttributes": {"qYcaXv0N": {}, "bqUd0cMk": {}, "subiOvNr": {}}, "slotId": "mqVlAYeY", "slotUsed": 0, "sourceItemId": "jgQcCohB", "tags": ["cvSjTET2", "4fjya923", "CuVKwV0p"], "toSpecificInventory": false, "type": "XchEE1oG"}, {"customAttributes": {"6X5KYolt": {}, "Bacagi0T": {}, "jUMh3FGD": {}}, "inventoryConfigurationCode": "DFdUPNE2", "inventoryId": "lpL8QDJ7", "qty": 18, "serverCustomAttributes": {"uq0jHHMX": {}, "bYVLA7a1": {}, "KSdqLKQ6": {}}, "slotId": "layvvXh8", "slotUsed": 40, "sourceItemId": "lNaA3EVx", "tags": ["klyiC02g", "Cq7XTAWI", "GQcW1aSH"], "toSpecificInventory": true, "type": "CU1LtS2Y"}, {"customAttributes": {"WpaW97Lr": {}, "NKJty9JV": {}, "MXOcmO46": {}}, "inventoryConfigurationCode": "XuXp7Fz2", "inventoryId": "5jMoHrsj", "qty": 93, "serverCustomAttributes": {"Ks9xY4WO": {}, "mFrsKGev": {}, "7R4COggw": {}}, "slotId": "vGRi7VPe", "slotUsed": 46, "sourceItemId": "KeRiGAqa", "tags": ["eJ2iS5Qc", "Nyt3HdmJ", "zxOZJsFl"], "toSpecificInventory": true, "type": "SWAIBbvX"}], "removeItems": [{"inventoryId": "QC3dYZ3Q", "slotId": "qEpbrMuK", "sourceItemId": "6Df6Oi5P"}, {"inventoryId": "NOUPHwjf", "slotId": "t7sGwmT7", "sourceItemId": "7yW0bubg"}, {"inventoryId": "t5w4trs2", "slotId": "WHpVFnoJ", "sourceItemId": "p284IjDI"}], "targetUserId": "iV2ieIjQ", "updateItems": [{"customAttributes": {"FVTQz4p2": {}, "785SLXb5": {}, "oGJc96sS": {}}, "inventoryId": "MT4r76Rc", "serverCustomAttributes": {"sNBnS0gD": {}, "AO3ZmltK": {}, "fWvTxsiC": {}}, "slotId": "Tbmi7RPp", "sourceItemId": "Cc5Z7eH3", "tags": ["6YHq1GEp", "2PF0x0u9", "sqC4RVG4"], "type": "1KhUZ91w"}, {"customAttributes": {"5Tn691b6": {}, "9EnQsS0r": {}, "FTUib0iZ": {}}, "inventoryId": "8x3K7ZSh", "serverCustomAttributes": {"VanGRmnB": {}, "QEnfgLw4": {}, "DIe21fzw": {}}, "slotId": "BETNHUC6", "sourceItemId": "AUWktt3P", "tags": ["124lTlja", "X5tFX20A", "J21g4ae9"], "type": "rsQYfWY0"}, {"customAttributes": {"i1k0A6o2": {}, "anjIji6u": {}, "BD0RhATt": {}}, "inventoryId": "JPMK6mpo", "serverCustomAttributes": {"sqCq1JAS": {}, "sIfYHtkZ": {}, "8InPCkO1": {}}, "slotId": "9GvVSDEl", "sourceItemId": "YRS7w4Wu", "tags": ["hIuYr1VG", "0AYEAGpj", "ZYIaCCjg"], "type": "Q91ODYVn"}]}, {"consumeItems": [{"inventoryId": "HorVmQde", "qty": 12, "slotId": "bQnx1Lou", "sourceItemId": "zsKR30T1"}, {"inventoryId": "Bv6iPXP0", "qty": 1, "slotId": "R9NTWLNH", "sourceItemId": "zIx0gwBx"}, {"inventoryId": "2b6jWBXQ", "qty": 49, "slotId": "o9vmBj96", "sourceItemId": "xWaFQzf8"}], "createItems": [{"customAttributes": {"q20BR67E": {}, "rSudIa8I": {}, "9oU7hhhH": {}}, "inventoryConfigurationCode": "3GOua43K", "inventoryId": "whKnHFZ0", "qty": 86, "serverCustomAttributes": {"kSOrFpS8": {}, "fY4T7rgF": {}, "kaYT0YjO": {}}, "slotId": "bXRh6Vtw", "slotUsed": 96, "sourceItemId": "dAFAbxlO", "tags": ["PJRRrvEt", "p41RWZOP", "wqPwZVve"], "toSpecificInventory": false, "type": "Bdy3i7j5"}, {"customAttributes": {"X6E1FS0q": {}, "lsgI2w9Q": {}, "0S3nPmom": {}}, "inventoryConfigurationCode": "eBl81Vcz", "inventoryId": "Y21yBxq5", "qty": 71, "serverCustomAttributes": {"BqBALDMd": {}, "Us1U98d3": {}, "XrAguwAj": {}}, "slotId": "Sn9P7Qvs", "slotUsed": 12, "sourceItemId": "cvD6CYUx", "tags": ["T2B8xCnu", "4vJy3qCS", "YNx6vEpM"], "toSpecificInventory": true, "type": "KXeqFCs9"}, {"customAttributes": {"kIpyYVcK": {}, "PJXsvJ4m": {}, "Qva8ZFGd": {}}, "inventoryConfigurationCode": "d5xjeT4T", "inventoryId": "GfcK6JZw", "qty": 57, "serverCustomAttributes": {"uoEfHU1i": {}, "JcdMcW7i": {}, "5yqtHTlc": {}}, "slotId": "zuf0fqkp", "slotUsed": 96, "sourceItemId": "YzDdCXEO", "tags": ["5SGHrETk", "hO62mwJb", "SXkbmzn2"], "toSpecificInventory": true, "type": "xmQfFVcS"}], "removeItems": [{"inventoryId": "KKizoxDJ", "slotId": "qFC6lLN9", "sourceItemId": "ZfLy9SL0"}, {"inventoryId": "fTL6Ptc4", "slotId": "JK5b8BXh", "sourceItemId": "UAYrafui"}, {"inventoryId": "nhjkAMq3", "slotId": "KQAKjsYK", "sourceItemId": "GAdngAZx"}], "targetUserId": "Qx1jHQoj", "updateItems": [{"customAttributes": {"hOPdVBwD": {}, "lb63yX8x": {}, "iNdYrwT9": {}}, "inventoryId": "1pKo3tah", "serverCustomAttributes": {"Kze2cJvV": {}, "YQaaVI4t": {}, "Y8bEAvDo": {}}, "slotId": "jJxm0yrH", "sourceItemId": "NbNqQjyo", "tags": ["cHkZqDPF", "ybUjymVS", "YDV2BzBb"], "type": "x3UEB07N"}, {"customAttributes": {"C0KCY9lI": {}, "JKgQ3iLr": {}, "9Z7hDYBM": {}}, "inventoryId": "OBudItDr", "serverCustomAttributes": {"oBdE1e5N": {}, "IeN4acy0": {}, "lkwHNbNM": {}}, "slotId": "dTMQH9Ys", "sourceItemId": "9RUEetAN", "tags": ["a9MAd28P", "7JNpCSme", "GOazQnJq"], "type": "YM2dvcwB"}, {"customAttributes": {"KhcFWopV": {}, "ZM6BdFwH": {}, "KA5AQnZg": {}}, "inventoryId": "4w2ohJjm", "serverCustomAttributes": {"v8sAcmcW": {}, "4IyB5mvL": {}, "pVbgponJ": {}}, "slotId": "xaV0a2vE", "sourceItemId": "lifejG5p", "tags": ["XEDdNvV9", "rSgXlqEg", "WSM58N0Y"], "type": "bxfn53y4"}]}, {"consumeItems": [{"inventoryId": "UyDDOzoh", "qty": 50, "slotId": "zoa1nYVP", "sourceItemId": "7SwLmbYQ"}, {"inventoryId": "3O2GZd1U", "qty": 85, "slotId": "2AcclB1Z", "sourceItemId": "zaohovsx"}, {"inventoryId": "KAVSbiz9", "qty": 79, "slotId": "9AQipYRQ", "sourceItemId": "CGDL7olw"}], "createItems": [{"customAttributes": {"ijsH8kTM": {}, "jA4pYKq7": {}, "ULJxYHej": {}}, "inventoryConfigurationCode": "rOTV10IE", "inventoryId": "s7ymFoZA", "qty": 41, "serverCustomAttributes": {"Muybr1EX": {}, "rUFmjDbj": {}, "tRW4GJdq": {}}, "slotId": "c7TZOwFJ", "slotUsed": 8, "sourceItemId": "OWRMjmV7", "tags": ["NUeHPNtv", "09ET4v13", "KlRFjEWZ"], "toSpecificInventory": false, "type": "X422HSHi"}, {"customAttributes": {"NXMBH2HC": {}, "weHmlj24": {}, "6HnPKCqe": {}}, "inventoryConfigurationCode": "F43lnwTv", "inventoryId": "V6QlTgEL", "qty": 93, "serverCustomAttributes": {"4KNVw2mb": {}, "PKT75f6U": {}, "OKG1RibL": {}}, "slotId": "N2GIBwLt", "slotUsed": 28, "sourceItemId": "7z9EKwS6", "tags": ["g4hSwIny", "dROxOI4w", "ZQr9iODa"], "toSpecificInventory": true, "type": "F0nEP1NP"}, {"customAttributes": {"4Muiizz4": {}, "Qt3NHCVX": {}, "nWOiz8yf": {}}, "inventoryConfigurationCode": "gVKIZOrC", "inventoryId": "4B2CNLv8", "qty": 73, "serverCustomAttributes": {"vI2Kcq5Y": {}, "s5oEbTxI": {}, "0UrLpL3H": {}}, "slotId": "0ytm04xw", "slotUsed": 49, "sourceItemId": "inn4JM59", "tags": ["kHPNw3Jy", "bNGiDq4g", "i8Fs8aGq"], "toSpecificInventory": false, "type": "OK10F9e9"}], "removeItems": [{"inventoryId": "HdmQ6lFx", "slotId": "o3kWaUU4", "sourceItemId": "ZIebK0o0"}, {"inventoryId": "ZybiFyui", "slotId": "Cwnev5HS", "sourceItemId": "tGISkw23"}, {"inventoryId": "Ct0AJ4Nm", "slotId": "JpyBD8nY", "sourceItemId": "42bRfLv8"}], "targetUserId": "h0iKsqXY", "updateItems": [{"customAttributes": {"KniFdMpM": {}, "VWpHE9eb": {}, "XPsQS5BY": {}}, "inventoryId": "X1R5z6SH", "serverCustomAttributes": {"4pNAspnH": {}, "zCnigYmT": {}, "6BM72uAF": {}}, "slotId": "zL47gFje", "sourceItemId": "afXMOny3", "tags": ["zT854r0M", "dsLsSTL4", "ma6T7yxi"], "type": "UxdzOw1P"}, {"customAttributes": {"4TvHWT3M": {}, "mp6plVEb": {}, "DrBhaHFK": {}}, "inventoryId": "gcBU9nBQ", "serverCustomAttributes": {"4hJNoiwW": {}, "4NvSGIe1": {}, "Ea9cNh7X": {}}, "slotId": "4CliuDyB", "sourceItemId": "lSIJ8bZz", "tags": ["TLhEWZAh", "YGUwzGfI", "yWgJydXt"], "type": "5tHGSYm0"}, {"customAttributes": {"x6MBfJ2T": {}, "m3iCuZrV": {}, "wZFKGkmr": {}}, "inventoryId": "YGMp1Oil", "serverCustomAttributes": {"iQMh5wGv": {}, "J4FXpKis": {}, "19XudJob": {}}, "slotId": "FK96zhDE", "sourceItemId": "4Y3Is4Eu", "tags": ["o6G76fOD", "QvnlQSk2", "R0iHS6Fi"], "type": "btWTKCVM"}]}], "requestId": "fn0ZnOdL"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminCreateChainingOperations \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 2 'AdminCreateChainingOperations' test.out

#- 3 AdminListInventories
$CLI_EXE \
    --sn inventory \
    --op AdminListInventories \
    --namespace $AB_NAMESPACE \
    --inventoryConfigurationCode 'g1NU8903' \
    --limit '64' \
    --offset '32' \
    --sortBy 'inventoryConfigurationCode:desc' \
    --userId 'wFm4ldzS' \
    > test.out 2>&1
eval_tap $? 3 'AdminListInventories' test.out

#- 4 AdminCreateInventory
# body param: body
echo '{"inventoryConfigurationCode": "WSzEa1sU", "userId": "LMOJTuP3"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminCreateInventory \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 4 'AdminCreateInventory' test.out

#- 5 AdminGetInventory
$CLI_EXE \
    --sn inventory \
    --op AdminGetInventory \
    --inventoryId 'CfbA3pVN' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 5 'AdminGetInventory' test.out

#- 6 AdminUpdateInventory
# body param: body
echo '{"incMaxSlots": 36}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminUpdateInventory \
    --inventoryId 'RafqwnhM' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 6 'AdminUpdateInventory' test.out

#- 7 DeleteInventory
# body param: body
echo '{"message": "hqBr4bXQ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op DeleteInventory \
    --inventoryId 'zNdsk4Au' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 7 'DeleteInventory' test.out

#- 8 AdminListItems
$CLI_EXE \
    --sn inventory \
    --op AdminListItems \
    --inventoryId 'WEZPFy64' \
    --namespace $AB_NAMESPACE \
    --limit '5' \
    --offset '37' \
    --qtyGte '9' \
    --sortBy 'updatedAt:asc' \
    --sourceItemId 'HaWAP1cJ' \
    --tags 'AFfeYbsi' \
    > test.out 2>&1
eval_tap $? 8 'AdminListItems' test.out

#- 9 AdminGetInventoryItem
$CLI_EXE \
    --sn inventory \
    --op AdminGetInventoryItem \
    --inventoryId 'kSsohiVf' \
    --namespace $AB_NAMESPACE \
    --slotId 'TXbW6eFR' \
    --sourceItemId 'ALtwGDl0' \
    > test.out 2>&1
eval_tap $? 9 'AdminGetInventoryItem' test.out

#- 10 AdminListInventoryConfigurations
$CLI_EXE \
    --sn inventory \
    --op AdminListInventoryConfigurations \
    --namespace $AB_NAMESPACE \
    --code 'HxwYEagz' \
    --limit '62' \
    --offset '64' \
    --sortBy 'createdAt' \
    > test.out 2>&1
eval_tap $? 10 'AdminListInventoryConfigurations' test.out

#- 11 AdminCreateInventoryConfiguration
# body param: body
echo '{"code": "gJiMLLKY", "description": "mgI1mwKm", "initialMaxSlots": 25, "maxInstancesPerUser": 30, "maxUpgradeSlots": 49, "name": "iE05XogK"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminCreateInventoryConfiguration \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 11 'AdminCreateInventoryConfiguration' test.out

#- 12 AdminGetInventoryConfiguration
$CLI_EXE \
    --sn inventory \
    --op AdminGetInventoryConfiguration \
    --inventoryConfigurationId '1IpSPUJ8' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 12 'AdminGetInventoryConfiguration' test.out

#- 13 AdminUpdateInventoryConfiguration
# body param: body
echo '{"code": "wLnfYqRN", "description": "GNBnuSni", "initialMaxSlots": 27, "maxInstancesPerUser": 91, "maxUpgradeSlots": 3, "name": "EXeh7Gts"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminUpdateInventoryConfiguration \
    --inventoryConfigurationId '9aNYYoyK' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 13 'AdminUpdateInventoryConfiguration' test.out

#- 14 AdminDeleteInventoryConfiguration
$CLI_EXE \
    --sn inventory \
    --op AdminDeleteInventoryConfiguration \
    --inventoryConfigurationId 'LvvbK4Nu' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 14 'AdminDeleteInventoryConfiguration' test.out

#- 15 AdminListItemTypes
$CLI_EXE \
    --sn inventory \
    --op AdminListItemTypes \
    --namespace $AB_NAMESPACE \
    --limit '90' \
    --offset '26' \
    --sortBy 'name' \
    > test.out 2>&1
eval_tap $? 15 'AdminListItemTypes' test.out

#- 16 AdminCreateItemType
# body param: body
echo '{"name": "xNWoY9N5"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminCreateItemType \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 16 'AdminCreateItemType' test.out

#- 17 AdminDeleteItemType
$CLI_EXE \
    --sn inventory \
    --op AdminDeleteItemType \
    --itemTypeName 'AgEUq6Ov' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 17 'AdminDeleteItemType' test.out

#- 18 AdminListTags
$CLI_EXE \
    --sn inventory \
    --op AdminListTags \
    --namespace $AB_NAMESPACE \
    --limit '74' \
    --offset '33' \
    --owner 'SqQYrfiw' \
    --sortBy 'name:desc' \
    > test.out 2>&1
eval_tap $? 18 'AdminListTags' test.out

#- 19 AdminCreateTag
# body param: body
echo '{"name": "hJDwFox3", "owner": "CLIENT"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminCreateTag \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 19 'AdminCreateTag' test.out

#- 20 AdminDeleteTag
$CLI_EXE \
    --sn inventory \
    --op AdminDeleteTag \
    --namespace $AB_NAMESPACE \
    --tagName 'fA2Z2Pw7' \
    > test.out 2>&1
eval_tap $? 20 'AdminDeleteTag' test.out

#- 21 AdminConsumeUserItem
# body param: body
echo '{"qty": 66, "slotId": "qRjN6s6X", "sourceItemId": "ViBYnFF8"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminConsumeUserItem \
    --inventoryId 'mtFR05Hj' \
    --namespace $AB_NAMESPACE \
    --userId 'erQcnff6' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 21 'AdminConsumeUserItem' test.out

#- 22 AdminBulkUpdateMyItems
# body param: body
echo '[{"customAttributes": {"lXkuFDVz": {}, "IbR9azHg": {}, "UaaFCLgS": {}}, "serverCustomAttributes": {"qXiqdVn8": {}, "wwOoy164": {}, "BNuD1nH4": {}}, "slotId": "DFZqPAeg", "sourceItemId": "uCI6Ui2z", "tags": ["1JrYfsvz", "BO4bYEvW", "0xOdvq6d"], "type": "XWPWUmsk"}, {"customAttributes": {"NtUhCgw6": {}, "2KAUxNTE": {}, "sku523nn": {}}, "serverCustomAttributes": {"146XfH0R": {}, "arpzjIpk": {}, "v0LdqKpe": {}}, "slotId": "9MZPYU72", "sourceItemId": "1m8KqTUG", "tags": ["TEcfW2zC", "G5COwLw1", "2zjvYpbM"], "type": "UwwBZ3IM"}, {"customAttributes": {"BP3YiJ7g": {}, "gIfw5jI9": {}, "LYDvqFYl": {}}, "serverCustomAttributes": {"9tVDH9L4": {}, "Zre3EQO9": {}, "kwFHttTz": {}}, "slotId": "0d2nN6PH", "sourceItemId": "6jux5oJO", "tags": ["aqs5h1Ke", "7EEKOXPc", "0UfhUPa5"], "type": "xNELPxpK"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminBulkUpdateMyItems \
    --inventoryId 'GQTKlDFK' \
    --namespace $AB_NAMESPACE \
    --userId 'vek0XKhs' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 22 'AdminBulkUpdateMyItems' test.out

#- 23 AdminSaveItemToInventory
# body param: body
echo '{"customAttributes": {"6L8ximqR": {}, "80QFWu95": {}, "CWOvwuwh": {}}, "qty": 76, "serverCustomAttributes": {"wkZmK5iL": {}, "iHRij97U": {}, "zO2SKT6D": {}}, "slotId": "Co3bTv7r", "slotUsed": 47, "sourceItemId": "bNfBBdJ9", "tags": ["szZuYGpF", "yWQfwGI6", "lbu6sZG1"], "type": "JFqFdCTp"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminSaveItemToInventory \
    --inventoryId 'VzbCuoSG' \
    --namespace $AB_NAMESPACE \
    --userId 'L8lUyjNF' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 23 'AdminSaveItemToInventory' test.out

#- 24 AdminBulkRemoveItems
# body param: body
echo '[{"slotId": "67j22XOn", "sourceItemId": "HyECRRhk"}, {"slotId": "O5ckkwIo", "sourceItemId": "lseX7e6p"}, {"slotId": "pdlE8kbD", "sourceItemId": "KqIphoNG"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminBulkRemoveItems \
    --inventoryId 'LSwl74Kc' \
    --namespace $AB_NAMESPACE \
    --userId 'ebGZvneJ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 24 'AdminBulkRemoveItems' test.out

#- 25 AdminSaveItem
# body param: body
echo '{"customAttributes": {"3sMkkpzb": {}, "HTUQiOzI": {}, "ItBAXGXj": {}}, "inventoryConfigurationCode": "SGtkTK12", "qty": 66, "serverCustomAttributes": {"036Ln54S": {}, "BZeSst7n": {}, "uVEIjRhH": {}}, "slotId": "VqwAbFj0", "slotUsed": 83, "sourceItemId": "nx9NSjrG", "tags": ["xrePjhqd", "OB9TkFRr", "GNB1oJ8C"], "type": "Yn8T4m0F"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminSaveItem \
    --namespace $AB_NAMESPACE \
    --userId 'wTVitbGm' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 25 'AdminSaveItem' test.out

#- 26 PublicListInventoryConfigurations
$CLI_EXE \
    --sn inventory \
    --op PublicListInventoryConfigurations \
    --namespace $AB_NAMESPACE \
    --code 'KpBtaGDH' \
    --limit '37' \
    --offset '39' \
    --sortBy 'createdAt' \
    > test.out 2>&1
eval_tap $? 26 'PublicListInventoryConfigurations' test.out

#- 27 PublicListItemTypes
$CLI_EXE \
    --sn inventory \
    --op PublicListItemTypes \
    --namespace $AB_NAMESPACE \
    --limit '3' \
    --offset '57' \
    --sortBy 'name:asc' \
    > test.out 2>&1
eval_tap $? 27 'PublicListItemTypes' test.out

#- 28 PublicListTags
$CLI_EXE \
    --sn inventory \
    --op PublicListTags \
    --namespace $AB_NAMESPACE \
    --limit '22' \
    --offset '58' \
    --sortBy 'createdAt:asc' \
    > test.out 2>&1
eval_tap $? 28 'PublicListTags' test.out

#- 29 PublicListInventories
$CLI_EXE \
    --sn inventory \
    --op PublicListInventories \
    --namespace $AB_NAMESPACE \
    --inventoryConfigurationCode 'nXfIXNXp' \
    --limit '85' \
    --offset '93' \
    --sortBy 'createdAt:asc' \
    > test.out 2>&1
eval_tap $? 29 'PublicListInventories' test.out

#- 30 PublicConsumeMyItem
# body param: body
echo '{"qty": 87, "slotId": "b8WrbGUd", "sourceItemId": "xPkfWOj9"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op PublicConsumeMyItem \
    --inventoryId 'eUVjovDx' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 30 'PublicConsumeMyItem' test.out

#- 31 PublicListItems
$CLI_EXE \
    --sn inventory \
    --op PublicListItems \
    --inventoryId 'jzVQ6JIc' \
    --namespace $AB_NAMESPACE \
    --limit '53' \
    --offset '66' \
    --qtyGte '10' \
    --sortBy 'createdAt:desc' \
    --sourceItemId 'FI6RL4fP' \
    --tags 'q4TOc1IY' \
    > test.out 2>&1
eval_tap $? 31 'PublicListItems' test.out

#- 32 PublicBulkUpdateMyItems
# body param: body
echo '[{"customAttributes": {"eOzvsckP": {}, "UC7rWlsI": {}, "hO4eNdOa": {}}, "slotId": "wJzU1MNg", "sourceItemId": "y4KR6zLS", "tags": ["ovl8InJL", "hyKRgNmJ", "vHT5LHjQ"]}, {"customAttributes": {"ZG6ZaRDM": {}, "U4DHGf9K": {}, "J0QBiujn": {}}, "slotId": "LHpmvHxE", "sourceItemId": "IIDqMnbe", "tags": ["R0D7FoF7", "goJwIKem", "0bcj1j5I"]}, {"customAttributes": {"sWhcHiyO": {}, "NNPDfo4C": {}, "A5wCNSyn": {}}, "slotId": "YF3vktzU", "sourceItemId": "o6cmI8mv", "tags": ["qWjbf3bb", "UT2sd9On", "M9iRa2Gf"]}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op PublicBulkUpdateMyItems \
    --inventoryId '7PsMlHIm' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 32 'PublicBulkUpdateMyItems' test.out

#- 33 PublicBulkRemoveMyItems
# body param: body
echo '[{"slotId": "fxqbJmiu", "sourceItemId": "Fw0wI1HG"}, {"slotId": "flXbJmgr", "sourceItemId": "LAVc2cXo"}, {"slotId": "zJvNQXbm", "sourceItemId": "f4JbA0RK"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op PublicBulkRemoveMyItems \
    --inventoryId '13SBiH1D' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 33 'PublicBulkRemoveMyItems' test.out

#- 34 PublicMoveMyItems
# body param: body
echo '{"items": [{"qty": 5, "slotId": "Z7KchQ03", "sourceItemId": "ac1wvzuD"}, {"qty": 97, "slotId": "Iw5VFjCh", "sourceItemId": "wPBSisl2"}, {"qty": 72, "slotId": "5KhZpkKY", "sourceItemId": "IDRwgfAp"}], "srcInventoryId": "uclLfMSp"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op PublicMoveMyItems \
    --inventoryId 'O85Rksr8' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 34 'PublicMoveMyItems' test.out

#- 35 PublicGetItem
$CLI_EXE \
    --sn inventory \
    --op PublicGetItem \
    --inventoryId 'PSFOFF9O' \
    --namespace $AB_NAMESPACE \
    --slotId 'LLPFursS' \
    --sourceItemId 'kOQdz2cE' \
    > test.out 2>&1
eval_tap $? 35 'PublicGetItem' test.out


# remove artifacts
rm -f "$CLI_TOKEN_FILE"
rm -f "$TEMP_JSON_INPUT"
rm -f "$TEMP_FILE_UPLOAD"

exit $EXIT_CODE