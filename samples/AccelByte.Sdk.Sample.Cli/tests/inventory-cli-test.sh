#!/usr/bin/env bash

# Copyright (c) 2021 AccelByte Inc. All Rights Reserved.
# This is licensed software from AccelByte Inc, for limitations
# and restrictions contact your company contract manager.

# This code is generated by tool. DO NOT EDIT.

# Meta:
# - random seed: 
# - template file: 

# Instructions:
# - Run the Justice SDK Mock Server first before running this script.

export AB_BASE_URL="http://127.0.0.1:8080"
export AB_CLIENT_ID="admin"
export AB_CLIENT_SECRET="admin"
export AB_NAMESPACE="test"
export AB_APP_NAME="UnitTest"

EXIT_CODE=0

eval_tap() {
  if [ $1 -eq 0 ]; then
    echo "ok $2 - $3"
  else
    EXIT_CODE=1
    echo "not ok $2 - $3"
    sed 's/^/# /g' $4
  fi
  rm -f $4
}

CLI_EXE="AccelByte.Sdk.Sample.Cli"
CLI_TOKEN_FILE="$(dirname "$(which $CLI_EXE)")/token.json"
TEMP_JSON_INPUT="input_json.json"
TEMP_FILE_UPLOAD="file_upload.bin"

echo "TAP version 13"
echo "1..44"

#- 1 Login
$CLI_EXE --op login --lt user --user user --pass user > test.out 2>&1
eval_tap $? 1 'Login' test.out

if [ $EXIT_CODE -ne 0 ]; then
  echo "Bail out! Login failed."
  exit $EXIT_CODE
fi

# echo "foo" > "$CLI_TOKEN_FILE"

#- 2 AdminCreateChainingOperations
# body param: body
echo '{"message": "ijSaH3Dq", "operations": [{"consumeItems": [{"dateRangeValidation": false, "inventoryId": "bPu3tw5R", "options": ["fx1Bc8ch", "0dAFleY1", "iLp9eXiA"], "qty": 35, "slotId": "DV4Uidoh", "sourceItemId": "CxkHMUIF"}, {"dateRangeValidation": true, "inventoryId": "LOTJkXRw", "options": ["PcgWmkcQ", "mEOx16fV", "NcDxMjKw"], "qty": 83, "slotId": "IVRzARVs", "sourceItemId": "ivbgXXIe"}, {"dateRangeValidation": false, "inventoryId": "wDMmkvro", "options": ["dB28k4vM", "BOHylFEw", "tVPOYmuE"], "qty": 30, "slotId": "COuNSkRn", "sourceItemId": "ISTBpuNw"}], "createItems": [{"customAttributes": {"MhLlvHS5": {}, "nu1ZsfQc": {}, "JjJtZp7Z": {}}, "inventoryConfigurationCode": "cY4iSaLR", "inventoryId": "zrjn2oUA", "qty": 33, "serverCustomAttributes": {"eQyh5JV2": {}, "cHi6QEkJ": {}, "HONWw42l": {}}, "slotId": "SoUxf0DC", "slotUsed": 81, "source": "ECOMMERCE", "sourceItemId": "ZJee9Z9U", "tags": ["7CTeWBLE", "GXhuIgnF", "p9cQrNBJ"], "toSpecificInventory": true, "type": "7j1S4JYi"}, {"customAttributes": {"l7vPXXM0": {}, "Tj2zwVzL": {}, "4glpLWbO": {}}, "inventoryConfigurationCode": "cnkEfUqh", "inventoryId": "Gpjqbcfd", "qty": 52, "serverCustomAttributes": {"ygNCOO3O": {}, "4X1aZ2t3": {}, "hifVT70T": {}}, "slotId": "Ov9Oumhc", "slotUsed": 94, "source": "OTHER", "sourceItemId": "SodM0218", "tags": ["w83uMu20", "DIlu7mNB", "1jHGt0Cv"], "toSpecificInventory": false, "type": "EyL5T3KI"}, {"customAttributes": {"dPHwNQy6": {}, "JBExvMpa": {}, "HnaudRRr": {}}, "inventoryConfigurationCode": "HFVyvKgY", "inventoryId": "GM4FC46K", "qty": 90, "serverCustomAttributes": {"wmeQHNx5": {}, "9eycUelR": {}, "BeiMBvOQ": {}}, "slotId": "rSlSZFTh", "slotUsed": 49, "source": "OTHER", "sourceItemId": "taEIbvnb", "tags": ["KfM51mk1", "iM1d9Bup", "fABnyFTG"], "toSpecificInventory": false, "type": "9gQGNfxJ"}], "removeItems": [{"inventoryId": "HicB8Y2P", "slotId": "PQFD1iQ8", "sourceItemId": "RhNcH6lR"}, {"inventoryId": "9xOCigOn", "slotId": "b9eiNxzJ", "sourceItemId": "DBpTf9XV"}, {"inventoryId": "AWP3XDkZ", "slotId": "A7urEv1y", "sourceItemId": "0jBfG7ym"}], "targetUserId": "CAZmpOQC", "updateItems": [{"customAttributes": {"w4PqLv4i": {}, "Buyp25ZL": {}, "8czF22A8": {}}, "inventoryId": "xobrzDTN", "serverCustomAttributes": {"Mj97A6u2": {}, "uEdyZLs1": {}, "2IUyOwed": {}}, "slotId": "XBENwTcj", "sourceItemId": "B7Inzvai", "tags": ["F4FH0r4S", "Z1kjbXXe", "jpdl1lWf"], "type": "3jTUh5PS"}, {"customAttributes": {"gQxjxhGs": {}, "mxI4J6CC": {}, "Ywnp8Ic7": {}}, "inventoryId": "08030gc0", "serverCustomAttributes": {"oPObR1oq": {}, "gnzqJScQ": {}, "O2P2Xk0u": {}}, "slotId": "hyjdciaF", "sourceItemId": "6uHSjZI2", "tags": ["Qs2Nn79q", "hOlyjNMo", "p2sYuLeX"], "type": "BUy4XZs5"}, {"customAttributes": {"SdFZWte6": {}, "00Vrgzwy": {}, "0yC6NImm": {}}, "inventoryId": "vkH4CGOn", "serverCustomAttributes": {"MBKlMrPt": {}, "lmO0GKOi": {}, "BefrKCDX": {}}, "slotId": "oXhYboUx", "sourceItemId": "n8vV4irI", "tags": ["uafSmOjZ", "ljhCWNmj", "HG8Vq0c1"], "type": "ryspuckS"}]}, {"consumeItems": [{"dateRangeValidation": true, "inventoryId": "mjf1lzb8", "options": ["WNA76uri", "5Vy3m3Dq", "nv7DtgAb"], "qty": 26, "slotId": "8B2bXbbx", "sourceItemId": "D6bsL2KA"}, {"dateRangeValidation": false, "inventoryId": "8SRhCFCv", "options": ["w2Dc6Qzl", "ycGo1Lo1", "jIAl674d"], "qty": 99, "slotId": "P144bQk5", "sourceItemId": "fT2g4IYn"}, {"dateRangeValidation": true, "inventoryId": "du5CdPwR", "options": ["BGSyr7Rx", "BVozbxhV", "UngKEe34"], "qty": 31, "slotId": "Tdk5adYU", "sourceItemId": "umG3UYMC"}], "createItems": [{"customAttributes": {"NGJPh36Y": {}, "CGxyTqhh": {}, "6F0NIvC7": {}}, "inventoryConfigurationCode": "liS6x78L", "inventoryId": "iOulSQPz", "qty": 67, "serverCustomAttributes": {"ObQmOm3b": {}, "ILtMBOmr": {}, "QwBn9yF2": {}}, "slotId": "FtDXkhRm", "slotUsed": 84, "source": "OTHER", "sourceItemId": "uyPptCIi", "tags": ["2UQlHibe", "tKSQbqPW", "XbnF8hU0"], "toSpecificInventory": true, "type": "ZlJYLsKR"}, {"customAttributes": {"1Oz0QPDo": {}, "13cyp650": {}, "oxatcqqA": {}}, "inventoryConfigurationCode": "WfWE7Be1", "inventoryId": "JGACo6FR", "qty": 45, "serverCustomAttributes": {"9G12uztz": {}, "BCjdiqaT": {}, "nmHcuCWG": {}}, "slotId": "tgxjHL2N", "slotUsed": 32, "source": "OTHER", "sourceItemId": "ayUVHhJp", "tags": ["VrvKTOcN", "1N52yfgW", "wuRbU7Dh"], "toSpecificInventory": false, "type": "Q6iTwQEI"}, {"customAttributes": {"YwkjwZ19": {}, "3R6Cj1Pb": {}, "MtikUa8y": {}}, "inventoryConfigurationCode": "zV2uiWle", "inventoryId": "vEEklNhZ", "qty": 6, "serverCustomAttributes": {"DaWYTC6z": {}, "MIYCqRn8": {}, "G0xN0bsY": {}}, "slotId": "Bs3ouozv", "slotUsed": 64, "source": "OTHER", "sourceItemId": "vQYMrGDd", "tags": ["CNyGa4p3", "vz1RyhPw", "H4ogh6Fu"], "toSpecificInventory": true, "type": "bHcLYFjd"}], "removeItems": [{"inventoryId": "aAqipfGA", "slotId": "m5CyZoMt", "sourceItemId": "T0XwCK3j"}, {"inventoryId": "f4Rv8MOA", "slotId": "NpP3SKm3", "sourceItemId": "6iLMkfL9"}, {"inventoryId": "vbbpV3Z1", "slotId": "iW8yYErs", "sourceItemId": "Y3pBdhBm"}], "targetUserId": "QvqLaNEP", "updateItems": [{"customAttributes": {"jFFh9L6a": {}, "HmjWXY82": {}, "qAQ47l8M": {}}, "inventoryId": "OQgQjmz6", "serverCustomAttributes": {"iNnDZfeX": {}, "dd3uKEMo": {}, "TJZZlgsB": {}}, "slotId": "uHmf6dab", "sourceItemId": "EtW2FMzN", "tags": ["2AMJaaBE", "y0cbnpVg", "UV58si8r"], "type": "9kuXu1KJ"}, {"customAttributes": {"BfaKuBbw": {}, "0Z4nJ9Qg": {}, "H3PwtCDI": {}}, "inventoryId": "OQPlNTro", "serverCustomAttributes": {"7CJSJdoG": {}, "bBBd1pvq": {}, "jbJnhrP4": {}}, "slotId": "bQnAyj1o", "sourceItemId": "2XHR7XCx", "tags": ["yV67ewzV", "QAz5ByTP", "kACP6vgc"], "type": "w19GPT3j"}, {"customAttributes": {"bEjvripb": {}, "anBtGnYR": {}, "lpzAj684": {}}, "inventoryId": "XLKewnyM", "serverCustomAttributes": {"v1kVOCYg": {}, "QByTiaqA": {}, "O93XYQAh": {}}, "slotId": "YeHMvXYs", "sourceItemId": "0R53DJqy", "tags": ["WoV0AzRI", "vS0Oa11B", "fThZkfJb"], "type": "iDS3JPy2"}]}, {"consumeItems": [{"dateRangeValidation": false, "inventoryId": "3MuTyBVN", "options": ["SiZ78j0i", "iii0iN3g", "vFI61Fna"], "qty": 53, "slotId": "MJ8ejVaC", "sourceItemId": "K1ubW3is"}, {"dateRangeValidation": true, "inventoryId": "onO5cHFS", "options": ["DSHzUqVA", "F0LUE2fR", "6EPvAgtd"], "qty": 57, "slotId": "c1hXd8nG", "sourceItemId": "jBNuTjcx"}, {"dateRangeValidation": false, "inventoryId": "mAGrdsvc", "options": ["YdmTPtgM", "3AcFZLI5", "vfXqWJ8b"], "qty": 55, "slotId": "JwsuiFUF", "sourceItemId": "vd88mCPz"}], "createItems": [{"customAttributes": {"l6QW0JNt": {}, "KeRqvFoK": {}, "Y5ufKtco": {}}, "inventoryConfigurationCode": "xMT7PK05", "inventoryId": "iJuSeknu", "qty": 12, "serverCustomAttributes": {"PU6WH1X3": {}, "U9fvFnLh": {}, "oodpPcBA": {}}, "slotId": "LyDQLkdf", "slotUsed": 28, "source": "OTHER", "sourceItemId": "BRCNBthO", "tags": ["ZHogVv9n", "nzZYhfAH", "3APTl0L4"], "toSpecificInventory": true, "type": "WId5hCWN"}, {"customAttributes": {"Totz8FKd": {}, "agzrSVH3": {}, "gupyjgFL": {}}, "inventoryConfigurationCode": "PBSy7thk", "inventoryId": "PH4z8Wir", "qty": 58, "serverCustomAttributes": {"vndzNS3Y": {}, "LaF5Gnuh": {}, "SZYXHrRq": {}}, "slotId": "vqfXeeHL", "slotUsed": 25, "source": "ECOMMERCE", "sourceItemId": "ddmF6uSq", "tags": ["5BPu9Oy1", "SgzNwn8H", "86IReRso"], "toSpecificInventory": false, "type": "6yaQdXUR"}, {"customAttributes": {"NIX6EtoZ": {}, "MFXc56WW": {}, "VLyNcWcK": {}}, "inventoryConfigurationCode": "C5qF3PUx", "inventoryId": "5Syalu3L", "qty": 91, "serverCustomAttributes": {"UxEwAVDG": {}, "eRKzzpIz": {}, "WqIreZiV": {}}, "slotId": "BvdBcGkS", "slotUsed": 97, "source": "ECOMMERCE", "sourceItemId": "eerFZnjO", "tags": ["KdQ3DMt5", "IqZN1mP3", "h2VWRA9F"], "toSpecificInventory": false, "type": "iAuvI24n"}], "removeItems": [{"inventoryId": "cejZwSlg", "slotId": "xHhdAb05", "sourceItemId": "qhwCQMNz"}, {"inventoryId": "Osfp29BC", "slotId": "t7fEHBXt", "sourceItemId": "WmPs6sWQ"}, {"inventoryId": "y0qUPO73", "slotId": "fVCNbsbx", "sourceItemId": "RcobocwT"}], "targetUserId": "b7XYLsJi", "updateItems": [{"customAttributes": {"aPaODHyQ": {}, "rE4gtEAZ": {}, "PufGp4xI": {}}, "inventoryId": "7OpX8bOl", "serverCustomAttributes": {"JqT0McbF": {}, "0uMrpNcf": {}, "kvIWCRvg": {}}, "slotId": "1vYuKgJF", "sourceItemId": "5JpYrFQN", "tags": ["QN0E43sS", "XH2lQ8Vh", "wKTjLlVM"], "type": "Ycd5L25s"}, {"customAttributes": {"kI15ntMp": {}, "1yxiEBA2": {}, "95FVE7JP": {}}, "inventoryId": "tuqBSstR", "serverCustomAttributes": {"n77WkAia": {}, "nGPxtjNa": {}, "IGDwZt5m": {}}, "slotId": "LKn4uCNc", "sourceItemId": "sebxkTqG", "tags": ["7T13eWqR", "hph4hMBV", "XpWUnJD9"], "type": "OQOlcfn8"}, {"customAttributes": {"MLZunl6d": {}, "PY093qDH": {}, "EH3YQW5W": {}}, "inventoryId": "Lu8kNcoK", "serverCustomAttributes": {"sYARjJdl": {}, "7pGkxJrX": {}, "JYJAGDB6": {}}, "slotId": "kjBffSqN", "sourceItemId": "Jgwljxdg", "tags": ["Uns4Q5E5", "h5BwRLwb", "jRLr8cPY"], "type": "MxwBVsqp"}]}], "requestId": "eDAQ6hnm"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminCreateChainingOperations \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 2 'AdminCreateChainingOperations' test.out

#- 3 AdminListIntegrationConfigurations
$CLI_EXE \
    --sn inventory \
    --op AdminListIntegrationConfigurations \
    --namespace $AB_NAMESPACE \
    --limit '98' \
    --offset '81' \
    --sortBy 'createdAt' \
    > test.out 2>&1
eval_tap $? 3 'AdminListIntegrationConfigurations' test.out

#- 4 AdminCreateIntegrationConfiguration
# body param: body
echo '{"mapItemType": ["Qh66kr71", "AekuudAS", "Rpkt2I1p"], "serviceName": "LSPahLfo", "targetInventoryCode": "H4ASUBkb"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminCreateIntegrationConfiguration \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 4 'AdminCreateIntegrationConfiguration' test.out

#- 5 AdminUpdateIntegrationConfiguration
# body param: body
echo '{"mapItemType": ["6d0rsYze", "zC86rXmE", "SG7QpXA0"], "serviceName": "r9kLNZ6F", "targetInventoryCode": "DaJYcErZ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminUpdateIntegrationConfiguration \
    --integrationConfigurationId 'AbXkFBug' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 5 'AdminUpdateIntegrationConfiguration' test.out

#- 6 AdminUpdateStatusIntegrationConfiguration
# body param: body
echo '{"status": "TIED"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminUpdateStatusIntegrationConfiguration \
    --integrationConfigurationId '8s8xLfOa' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 6 'AdminUpdateStatusIntegrationConfiguration' test.out

#- 7 AdminListInventories
$CLI_EXE \
    --sn inventory \
    --op AdminListInventories \
    --namespace $AB_NAMESPACE \
    --inventoryConfigurationCode 'JCwZhJ7u' \
    --limit '33' \
    --offset '48' \
    --sortBy 'createdAt:desc' \
    --userId 'JJtlVIQV' \
    > test.out 2>&1
eval_tap $? 7 'AdminListInventories' test.out

#- 8 AdminCreateInventory
# body param: body
echo '{"inventoryConfigurationCode": "Mx8rUBpR", "userId": "0lRFF7ZL"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminCreateInventory \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 8 'AdminCreateInventory' test.out

#- 9 AdminGetInventory
$CLI_EXE \
    --sn inventory \
    --op AdminGetInventory \
    --inventoryId 'yPzHa9lQ' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 9 'AdminGetInventory' test.out

#- 10 AdminUpdateInventory
# body param: body
echo '{"incMaxSlots": 3}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminUpdateInventory \
    --inventoryId 'FzOvq4bi' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 10 'AdminUpdateInventory' test.out

#- 11 DeleteInventory
# body param: body
echo '{"message": "2vPhf3Qp"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op DeleteInventory \
    --inventoryId 'UyIPL9tm' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 11 'DeleteInventory' test.out

#- 12 AdminListItems
$CLI_EXE \
    --sn inventory \
    --op AdminListItems \
    --inventoryId '0Lq1JnCf' \
    --namespace $AB_NAMESPACE \
    --limit '77' \
    --offset '52' \
    --sortBy 'createdAt:desc' \
    --sourceItemId 'X3gQxAwe' \
    --tags '0r016UUv' \
    > test.out 2>&1
eval_tap $? 12 'AdminListItems' test.out

#- 13 AdminGetInventoryItem
$CLI_EXE \
    --sn inventory \
    --op AdminGetInventoryItem \
    --inventoryId 'Eo1vj65n' \
    --namespace $AB_NAMESPACE \
    --slotId 'XwYL4Nak' \
    --sourceItemId 'Aqq57pDA' \
    > test.out 2>&1
eval_tap $? 13 'AdminGetInventoryItem' test.out

#- 14 AdminListInventoryConfigurations
$CLI_EXE \
    --sn inventory \
    --op AdminListInventoryConfigurations \
    --namespace $AB_NAMESPACE \
    --code 'lWfxCezB' \
    --limit '77' \
    --offset '68' \
    --sortBy 'updatedAt:desc' \
    > test.out 2>&1
eval_tap $? 14 'AdminListInventoryConfigurations' test.out

#- 15 AdminCreateInventoryConfiguration
# body param: body
echo '{"code": "Or5XDvZT", "description": "UkN6giLD", "initialMaxSlots": 40, "maxInstancesPerUser": 41, "maxUpgradeSlots": 66, "name": "XbLIgzJG"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminCreateInventoryConfiguration \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 15 'AdminCreateInventoryConfiguration' test.out

#- 16 AdminGetInventoryConfiguration
$CLI_EXE \
    --sn inventory \
    --op AdminGetInventoryConfiguration \
    --inventoryConfigurationId 'VDgHRau6' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 16 'AdminGetInventoryConfiguration' test.out

#- 17 AdminUpdateInventoryConfiguration
# body param: body
echo '{"code": "mVo5D3na", "description": "mgD5gnr6", "initialMaxSlots": 38, "maxInstancesPerUser": 78, "maxUpgradeSlots": 27, "name": "QTe2Wqso"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminUpdateInventoryConfiguration \
    --inventoryConfigurationId 'qKmV58eh' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 17 'AdminUpdateInventoryConfiguration' test.out

#- 18 AdminDeleteInventoryConfiguration
$CLI_EXE \
    --sn inventory \
    --op AdminDeleteInventoryConfiguration \
    --inventoryConfigurationId 'S96aTplY' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 18 'AdminDeleteInventoryConfiguration' test.out

#- 19 AdminListItemTypes
$CLI_EXE \
    --sn inventory \
    --op AdminListItemTypes \
    --namespace $AB_NAMESPACE \
    --limit '57' \
    --offset '67' \
    --sortBy 'createdAt:asc' \
    > test.out 2>&1
eval_tap $? 19 'AdminListItemTypes' test.out

#- 20 AdminCreateItemType
# body param: body
echo '{"name": "PyKTHk49"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminCreateItemType \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 20 'AdminCreateItemType' test.out

#- 21 AdminDeleteItemType
$CLI_EXE \
    --sn inventory \
    --op AdminDeleteItemType \
    --itemTypeName 'gsmmOwPY' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 21 'AdminDeleteItemType' test.out

#- 22 AdminListTags
$CLI_EXE \
    --sn inventory \
    --op AdminListTags \
    --namespace $AB_NAMESPACE \
    --limit '28' \
    --offset '3' \
    --owner 'Lwho0lHi' \
    --sortBy 'createdAt:desc' \
    > test.out 2>&1
eval_tap $? 22 'AdminListTags' test.out

#- 23 AdminCreateTag
# body param: body
echo '{"name": "XyniuYp1", "owner": "SERVER"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminCreateTag \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 23 'AdminCreateTag' test.out

#- 24 AdminDeleteTag
$CLI_EXE \
    --sn inventory \
    --op AdminDeleteTag \
    --namespace $AB_NAMESPACE \
    --tagName 'YvEBILFU' \
    > test.out 2>&1
eval_tap $? 24 'AdminDeleteTag' test.out

#- 25 AdminConsumeUserItem
# body param: body
echo '{"options": ["ogtIZ2Rv", "equxkKsR", "N0SOL3Ex"], "qty": 35, "slotId": "2mSiXMme", "sourceItemId": "UfhMWCkf"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminConsumeUserItem \
    --inventoryId 'zFHVutd2' \
    --namespace $AB_NAMESPACE \
    --userId 'HFZON7Gh' \
    --dateRangeValidation 't0VSfKRL' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 25 'AdminConsumeUserItem' test.out

#- 26 AdminBulkUpdateMyItems
# body param: body
echo '[{"customAttributes": {"uuyyz0GS": {}, "TB6bYE4J": {}, "rViTIZUE": {}}, "serverCustomAttributes": {"NQ8zcXOR": {}, "QmW0Nlns": {}, "EHZEw2x5": {}}, "slotId": "5DEmpaJA", "sourceItemId": "pYVbgRk2", "tags": ["tib2p65e", "nKgsN4mo", "B0fG6IO6"], "type": "kCM1PazF"}, {"customAttributes": {"CsY5b2fN": {}, "NQ5f2i8j": {}, "h0x3cYoP": {}}, "serverCustomAttributes": {"acdQRpQt": {}, "IvxvdwkD": {}, "AJPIBirq": {}}, "slotId": "YDXQCoXP", "sourceItemId": "FHA0a8dY", "tags": ["JuDxd4WY", "PSpnXlyY", "rFji31X7"], "type": "otlTlFys"}, {"customAttributes": {"A5O75UaF": {}, "w8MSisdv": {}, "Cot0ab0u": {}}, "serverCustomAttributes": {"JibgilZe": {}, "SZ9oKk4k": {}, "KSkifwwF": {}}, "slotId": "NlSGpGai", "sourceItemId": "AV4E3CWL", "tags": ["xPYk2raM", "UpwUVipG", "xwORtySh"], "type": "YftQkDhm"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminBulkUpdateMyItems \
    --inventoryId '1zu0SCrj' \
    --namespace $AB_NAMESPACE \
    --userId 'Q4XKsDNI' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 26 'AdminBulkUpdateMyItems' test.out

#- 27 AdminSaveItemToInventory
# body param: body
echo '{"customAttributes": {"aRIVapuN": {}, "GK12SbnA": {}, "At0V7FDo": {}}, "qty": 100, "serverCustomAttributes": {"HPm2qcvU": {}, "VoQr7tgD": {}, "QQkc0xGd": {}}, "slotId": "JxmP3gqq", "slotUsed": 54, "source": "ECOMMERCE", "sourceItemId": "v7zQlPLJ", "tags": ["mzP71RVp", "g2viPRWp", "c24vrN0K"], "type": "R9JEUTNq"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminSaveItemToInventory \
    --inventoryId '6iGLRxHm' \
    --namespace $AB_NAMESPACE \
    --userId 'QJGEjoR2' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 27 'AdminSaveItemToInventory' test.out

#- 28 AdminBulkRemoveItems
# body param: body
echo '[{"slotId": "Nsq2AXYs", "sourceItemId": "c0K4IAab"}, {"slotId": "Ji9eCOWU", "sourceItemId": "gzZTZg8m"}, {"slotId": "gVIXdUWU", "sourceItemId": "C8g2wpB2"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminBulkRemoveItems \
    --inventoryId 'rttUJFIR' \
    --namespace $AB_NAMESPACE \
    --userId 'e5j9erGm' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 28 'AdminBulkRemoveItems' test.out

#- 29 AdminBulkSaveItemToInventory
# body param: body
echo '[{"customAttributes": {"0eypbw8w": {}, "suhLBVzu": {}, "YCSoxoaQ": {}}, "qty": 22, "serverCustomAttributes": {"sSr0HKRD": {}, "IsZPyLNr": {}, "GYMUqaWw": {}}, "slotId": "s8tzmw30", "slotUsed": 21, "source": "ECOMMERCE", "sourceItemId": "YfQT0BeR", "tags": ["SVcpsWK8", "430DozlI", "uPK5vyvY"], "type": "vnIOqxZP"}, {"customAttributes": {"QctWTIRs": {}, "lRtsHF6e": {}, "Jb0K0wyX": {}}, "qty": 67, "serverCustomAttributes": {"XQRJ9OHS": {}, "J0cqlvjY": {}, "XofLf6SV": {}}, "slotId": "lLJhHWSm", "slotUsed": 65, "source": "OTHER", "sourceItemId": "9fov0WCv", "tags": ["UbSbHQVR", "UenURBjv", "Om8ktbjx"], "type": "irmRPKKu"}, {"customAttributes": {"nVos8huM": {}, "HFtzuY7u": {}, "DZWt4oz9": {}}, "qty": 55, "serverCustomAttributes": {"5jGDMU7n": {}, "wZqZAVYv": {}, "zS9lMBt5": {}}, "slotId": "c6VJDZQw", "slotUsed": 67, "source": "OTHER", "sourceItemId": "yB47ahXX", "tags": ["pcFoQhxA", "E4688yUi", "VkLzPDX1"], "type": "gCd7Ep08"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminBulkSaveItemToInventory \
    --inventoryId 'yIIILDyi' \
    --namespace $AB_NAMESPACE \
    --userId '6LFIFRWw' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 29 'AdminBulkSaveItemToInventory' test.out

#- 30 AdminUpdateUserInventoriesByInventoryCode
# body param: body
echo '{"incMaxSlots": 100}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminUpdateUserInventoriesByInventoryCode \
    --inventoryConfigurationCode 'tjKU4Z6O' \
    --namespace $AB_NAMESPACE \
    --userId 'p3eH2TvJ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 30 'AdminUpdateUserInventoriesByInventoryCode' test.out

#- 31 AdminSaveItem
# body param: body
echo '{"customAttributes": {"kiOQ4ymk": {}, "OzzBneP3": {}, "OQ2FeMSd": {}}, "inventoryConfigurationCode": "J5gZJyAd", "qty": 44, "serverCustomAttributes": {"tiEzbVIH": {}, "ZhEqF0y3": {}, "0zWmOTmG": {}}, "slotId": "iD4l7NRS", "slotUsed": 45, "source": "ECOMMERCE", "sourceItemId": "8XBVpH1O", "tags": ["KRTIbrNG", "7BzaXXlQ", "oo09jpfs"], "type": "LdccJ9tV"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminSaveItem \
    --namespace $AB_NAMESPACE \
    --userId 'bVF2b32i' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 31 'AdminSaveItem' test.out

#- 32 AdminBulkSaveItem
# body param: body
echo '[{"customAttributes": {"EQ3x0aeA": {}, "aT7GclNC": {}, "OpkuwMzf": {}}, "inventoryConfigurationCode": "jpqXS5gU", "qty": 57, "serverCustomAttributes": {"lqNjByx3": {}, "S0BrC1BE": {}, "n8k8tE53": {}}, "slotId": "HxnW9bMD", "slotUsed": 67, "source": "ECOMMERCE", "sourceItemId": "uQklqp30", "tags": ["HrQYzaVy", "hNcrAVxv", "JgjMNPAQ"], "type": "tLVDtL03"}, {"customAttributes": {"8KSm4cmG": {}, "7nlt5Oce": {}, "fO4P2bxd": {}}, "inventoryConfigurationCode": "sRX3WBtl", "qty": 83, "serverCustomAttributes": {"xLffImzo": {}, "qQnsrxlp": {}, "xY0IfmOw": {}}, "slotId": "kZxhQzDr", "slotUsed": 51, "source": "ECOMMERCE", "sourceItemId": "qAOrxIen", "tags": ["spaVB3rI", "4OZ8mY7N", "u6zfZgbH"], "type": "pqxY5Yi3"}, {"customAttributes": {"AABVHUCf": {}, "O4qlWi6t": {}, "H5lumKnK": {}}, "inventoryConfigurationCode": "bTpEjzos", "qty": 17, "serverCustomAttributes": {"eoZTJb53": {}, "FWgJml5x": {}, "suMwD8EI": {}}, "slotId": "IYqFl4wJ", "slotUsed": 33, "source": "OTHER", "sourceItemId": "I0Ee0zaY", "tags": ["VYrvItkO", "KzL7BVgt", "tZaVQnyD"], "type": "LjdeBNRn"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminBulkSaveItem \
    --namespace $AB_NAMESPACE \
    --userId 'ozB3UQ0z' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 32 'AdminBulkSaveItem' test.out

#- 33 AdminSyncUserEntitlements
$CLI_EXE \
    --sn inventory \
    --op AdminSyncUserEntitlements \
    --namespace $AB_NAMESPACE \
    --userId 'OqTQpOEd' \
    > test.out 2>&1
eval_tap $? 33 'AdminSyncUserEntitlements' test.out

#- 34 AdminPurchasable
# body param: body
echo '{"entitlementType": "Oj3gWMNa", "inventoryConfig": {"slotUsed": 12}, "itemId": "xUsANB8J", "itemType": "b6OKZfUa", "items": [{"bundledQty": 3, "entitlementType": "ypdk0Koo", "inventoryConfig": {"slotUsed": 22}, "itemId": "N6WKRygr", "itemType": "9nje3tbA", "sku": "sggkG9DQ", "stackable": true, "useCount": 88}, {"bundledQty": 66, "entitlementType": "qR5rZEC3", "inventoryConfig": {"slotUsed": 94}, "itemId": "m5wUDJ0p", "itemType": "LKOtYTPJ", "sku": "Q9Ijqn6b", "stackable": true, "useCount": 50}, {"bundledQty": 49, "entitlementType": "hpuOEAlF", "inventoryConfig": {"slotUsed": 33}, "itemId": "CGoRIjc9", "itemType": "QIVEc55a", "sku": "LfzAo9lR", "stackable": true, "useCount": 55}], "quantity": 80, "sku": "OTYhCATk", "stackable": true, "useCount": 31}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminPurchasable \
    --namespace $AB_NAMESPACE \
    --userId 'LPGExzoS' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 34 'AdminPurchasable' test.out

#- 35 PublicListInventoryConfigurations
$CLI_EXE \
    --sn inventory \
    --op PublicListInventoryConfigurations \
    --namespace $AB_NAMESPACE \
    --code 'U0StKDwY' \
    --limit '92' \
    --offset '15' \
    --sortBy 'code' \
    > test.out 2>&1
eval_tap $? 35 'PublicListInventoryConfigurations' test.out

#- 36 PublicListItemTypes
$CLI_EXE \
    --sn inventory \
    --op PublicListItemTypes \
    --namespace $AB_NAMESPACE \
    --limit '61' \
    --offset '46' \
    --sortBy 'createdAt:desc' \
    > test.out 2>&1
eval_tap $? 36 'PublicListItemTypes' test.out

#- 37 PublicListTags
$CLI_EXE \
    --sn inventory \
    --op PublicListTags \
    --namespace $AB_NAMESPACE \
    --limit '31' \
    --offset '60' \
    --sortBy 'createdAt:desc' \
    > test.out 2>&1
eval_tap $? 37 'PublicListTags' test.out

#- 38 PublicListInventories
$CLI_EXE \
    --sn inventory \
    --op PublicListInventories \
    --namespace $AB_NAMESPACE \
    --inventoryConfigurationCode 'dhHkWoOS' \
    --limit '45' \
    --offset '55' \
    --sortBy 'createdAt' \
    > test.out 2>&1
eval_tap $? 38 'PublicListInventories' test.out

#- 39 PublicConsumeMyItem
# body param: body
echo '{"options": ["AthgpOFG", "nLZHsAnA", "1fq23Nme"], "qty": 45, "slotId": "HOE7vMWO", "sourceItemId": "LmSLZ9Yr"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op PublicConsumeMyItem \
    --inventoryId 'rateOAcY' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 39 'PublicConsumeMyItem' test.out

#- 40 PublicListItems
$CLI_EXE \
    --sn inventory \
    --op PublicListItems \
    --inventoryId 'zpw8Prry' \
    --namespace $AB_NAMESPACE \
    --limit '99' \
    --offset '36' \
    --sortBy 'createdAt:desc' \
    --sourceItemId 'QirWkBgs' \
    --tags 'EjePkiVS' \
    > test.out 2>&1
eval_tap $? 40 'PublicListItems' test.out

#- 41 PublicBulkUpdateMyItems
# body param: body
echo '[{"customAttributes": {"OmtAS7ma": {}, "Ou0UXIsg": {}, "HGKfOG9C": {}}, "slotId": "e5ZOFQJI", "sourceItemId": "Uc7DriXm", "tags": ["bypzbbER", "53tzr5JJ", "c13FWWXn"]}, {"customAttributes": {"FE5hT097": {}, "GN56hNYY": {}, "gsJzsSDr": {}}, "slotId": "VsmUdHLd", "sourceItemId": "a6SHnoFP", "tags": ["upjDMmGE", "BB1SMBMP", "QOIhFyQz"]}, {"customAttributes": {"tLbAs5rd": {}, "no5whUYF": {}, "qzxwa4RD": {}}, "slotId": "WG1QGhLW", "sourceItemId": "7ylwa0V4", "tags": ["Ou6RNub9", "2JyZkQdL", "Yhfred5S"]}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op PublicBulkUpdateMyItems \
    --inventoryId 'ggzDHUvB' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 41 'PublicBulkUpdateMyItems' test.out

#- 42 PublicBulkRemoveMyItems
# body param: body
echo '[{"slotId": "uW4S0fAL", "sourceItemId": "rnpxvKhn"}, {"slotId": "MEsHgRLr", "sourceItemId": "Wf10zrjP"}, {"slotId": "BaxA32E3", "sourceItemId": "BfMyhlk5"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op PublicBulkRemoveMyItems \
    --inventoryId 'S2xoe5Nn' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 42 'PublicBulkRemoveMyItems' test.out

#- 43 PublicMoveMyItems
# body param: body
echo '{"items": [{"qty": 47, "slotId": "tfW7HKmW", "sourceItemId": "FSCQ7Hw6"}, {"qty": 71, "slotId": "Qcwqnx9C", "sourceItemId": "CP2Hkzdk"}, {"qty": 16, "slotId": "UcCrgqGQ", "sourceItemId": "2icfjsOC"}], "srcInventoryId": "pGp0HgdC"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op PublicMoveMyItems \
    --inventoryId 'xtOuESZb' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 43 'PublicMoveMyItems' test.out

#- 44 PublicGetItem
$CLI_EXE \
    --sn inventory \
    --op PublicGetItem \
    --inventoryId 'SmmFM33M' \
    --namespace $AB_NAMESPACE \
    --slotId 'eK0oXt56' \
    --sourceItemId '4eONt3iG' \
    > test.out 2>&1
eval_tap $? 44 'PublicGetItem' test.out


# remove artifacts
rm -f "$CLI_TOKEN_FILE"
rm -f "$TEMP_JSON_INPUT"
rm -f "$TEMP_FILE_UPLOAD"

exit $EXIT_CODE