#!/usr/bin/env bash

# Copyright (c) 2021 AccelByte Inc. All Rights Reserved.
# This is licensed software from AccelByte Inc, for limitations
# and restrictions contact your company contract manager.

# This code is generated by tool. DO NOT EDIT.

# Meta:
# - random seed: 
# - template file: 

# Instructions:
# - Run the Justice SDK Mock Server first before running this script.

export AB_BASE_URL="http://127.0.0.1:8080"
export AB_CLIENT_ID="admin"
export AB_CLIENT_SECRET="admin"
export AB_NAMESPACE="test"
export AB_APP_NAME="UnitTest"

EXIT_CODE=0

eval_tap() {
  if [ $1 -eq 0 ]; then
    echo "ok $2 - $3"
  else
    EXIT_CODE=1
    echo "not ok $2 - $3"
    sed 's/^/# /g' $4
  fi
  rm -f $4
}

CLI_EXE="AccelByte.Sdk.Sample.Cli"
CLI_TOKEN_FILE="$(dirname "$(which $CLI_EXE)")/token.json"
TEMP_JSON_INPUT="input_json.json"
TEMP_FILE_UPLOAD="file_upload.bin"

echo "TAP version 13"
echo "1..35"

#- 1 Login
$CLI_EXE --op login --lt user --user user --pass user > test.out 2>&1
eval_tap $? 1 'Login' test.out

if [ $EXIT_CODE -ne 0 ]; then
  echo "Bail out! Login failed."
  exit $EXIT_CODE
fi

# echo "foo" > "$CLI_TOKEN_FILE"

#- 2 AdminCreateChainingOperations
# body param: body
echo '{"message": "pm9V4JJ8", "operations": [{"consumeItems": [{"inventoryId": "KoE2BASM", "qty": 47, "slotId": "XlD1QBTS", "sourceItemId": "mrOnz0H2"}, {"inventoryId": "8CExsn7J", "qty": 70, "slotId": "rNamKGLG", "sourceItemId": "kKvhBA1t"}, {"inventoryId": "wTI3hUXl", "qty": 7, "slotId": "FNub41im", "sourceItemId": "8B2LtH1q"}], "createItems": [{"customAttributes": {"j0UIPw3s": {}, "e9hUps0K": {}, "ztG1QvZ8": {}}, "inventoryConfigurationCode": "ynShObxv", "inventoryId": "lMi5tOBo", "qty": 69, "serverCustomAttributes": {"RyzeuJ1e": {}, "BvFu2YYP": {}, "ffOQASTv": {}}, "slotId": "SCQmSIyz", "slotUsed": 41, "sourceItemId": "CfHesPNq", "tags": ["XJ8xJbFg", "2PImatJp", "H5QyEhLd"], "toSpecificInventory": false, "type": "1tvQnRRI"}, {"customAttributes": {"BYlP9FgO": {}, "jt3bE155": {}, "MCNIXj7i": {}}, "inventoryConfigurationCode": "smaNnsQ7", "inventoryId": "7db1J4zF", "qty": 35, "serverCustomAttributes": {"aGJyDPLK": {}, "ToFyf2Un": {}, "qn4aNd6S": {}}, "slotId": "cqDe0flm", "slotUsed": 42, "sourceItemId": "I3oS3OBU", "tags": ["NdO9UU9v", "Oo968Pnu", "RDMPR9IV"], "toSpecificInventory": true, "type": "6tOuXAhR"}, {"customAttributes": {"JZogSso8": {}, "huJDHe4D": {}, "ILJxuuV0": {}}, "inventoryConfigurationCode": "qYB97CRB", "inventoryId": "GI2JtUxL", "qty": 84, "serverCustomAttributes": {"OC3o6ctk": {}, "lGAQxoCe": {}, "qQgZPnpQ": {}}, "slotId": "nKsCbUWa", "slotUsed": 66, "sourceItemId": "Y8vf5JQS", "tags": ["I6NUYlFA", "H1IGDN42", "nLBCPI4e"], "toSpecificInventory": true, "type": "6oQHyuIs"}], "removeItems": [{"inventoryId": "yVHIxgkV", "slotId": "IJcTdAyF", "sourceItemId": "dawd0yjF"}, {"inventoryId": "E5eHuMwA", "slotId": "5VZVZlR6", "sourceItemId": "v29UvuOB"}, {"inventoryId": "zDrYATCR", "slotId": "VlpdW3gA", "sourceItemId": "nBiz05kU"}], "targetUserId": "FNmjgnXL", "updateItems": [{"customAttributes": {"VZIGX5hV": {}, "OlhTbYlK": {}, "JKmvZHgp": {}}, "inventoryId": "dYNAmklm", "serverCustomAttributes": {"wK73gT5r": {}, "Sk5u9pe3": {}, "nIJVqC1H": {}}, "slotId": "2GCsUGTv", "sourceItemId": "UhZAUFXN", "tags": ["q9K0bgXk", "M5bVgvaA", "sjeY3V3w"], "type": "FaPJHNqk"}, {"customAttributes": {"efgj18MV": {}, "CHzvP7aQ": {}, "I9dgGNKI": {}}, "inventoryId": "W4DMckUM", "serverCustomAttributes": {"vsVQjKo0": {}, "FZ73wANw": {}, "ijqRUMr5": {}}, "slotId": "tj9UZAmB", "sourceItemId": "v1HeOleZ", "tags": ["G0e5OtPG", "9D48PI6v", "AuoLGlKy"], "type": "rTnRQrgN"}, {"customAttributes": {"ntH1641X": {}, "EstpRtJN": {}, "J7ani2an": {}}, "inventoryId": "k2qHpjEa", "serverCustomAttributes": {"ZZyAAl9G": {}, "GO270N81": {}, "pfiLwsKC": {}}, "slotId": "Z0BxjFgO", "sourceItemId": "UhYrBegK", "tags": ["UCdBNcMN", "xALbzAYc", "RNp0Oacl"], "type": "8Q87sMHe"}]}, {"consumeItems": [{"inventoryId": "T85BQNqH", "qty": 99, "slotId": "OfvcSok3", "sourceItemId": "ExfTob7u"}, {"inventoryId": "jb7lxWbl", "qty": 21, "slotId": "IRxk03iW", "sourceItemId": "Z70VGYnU"}, {"inventoryId": "AobgOBoJ", "qty": 21, "slotId": "ul1hxfrL", "sourceItemId": "sYjXACF3"}], "createItems": [{"customAttributes": {"l2EmMz5S": {}, "2ed7HEYO": {}, "IthvboKy": {}}, "inventoryConfigurationCode": "bpuf2TIw", "inventoryId": "11eTj5IW", "qty": 41, "serverCustomAttributes": {"1VLqh3IC": {}, "ukrbOWE7": {}, "xcyUjvJM": {}}, "slotId": "nPvdEbme", "slotUsed": 40, "sourceItemId": "Udfdrs7u", "tags": ["6ocgNRLq", "4dlKUVbg", "zfxgBc6N"], "toSpecificInventory": false, "type": "6BNS1L98"}, {"customAttributes": {"R2kSXz8f": {}, "rXzCvJOY": {}, "t9qKZO8b": {}}, "inventoryConfigurationCode": "BKUmeaBD", "inventoryId": "rg6SJiZs", "qty": 61, "serverCustomAttributes": {"D63VPrCR": {}, "Ls9hWhNn": {}, "UOqK6OGF": {}}, "slotId": "BHfYAgW8", "slotUsed": 40, "sourceItemId": "dmQD86KN", "tags": ["xA7hV04l", "xbrGdiSr", "vLVlbpRx"], "toSpecificInventory": false, "type": "o8okqgrP"}, {"customAttributes": {"KFBW0Fql": {}, "tXz0KtnB": {}, "6XCPolvi": {}}, "inventoryConfigurationCode": "977FXVJF", "inventoryId": "ZYA40MQM", "qty": 81, "serverCustomAttributes": {"L1lCQyUA": {}, "HKKtSDYo": {}, "mxxz6JH0": {}}, "slotId": "tJ8ui77h", "slotUsed": 53, "sourceItemId": "pBSf8qMr", "tags": ["1G4qVeG0", "vkM9XETS", "GV9tkMni"], "toSpecificInventory": true, "type": "eCnamiCH"}], "removeItems": [{"inventoryId": "g5Pyvji3", "slotId": "rqX67XwF", "sourceItemId": "s7y50nFQ"}, {"inventoryId": "KQ1Xjunu", "slotId": "ZpwYvBlT", "sourceItemId": "0hg5GlfT"}, {"inventoryId": "S41iEppv", "slotId": "1BRmbova", "sourceItemId": "5KFEj9Aj"}], "targetUserId": "Opypp0PU", "updateItems": [{"customAttributes": {"TL5WT8vN": {}, "apSXe9OZ": {}, "zGo8hYqy": {}}, "inventoryId": "fdK1c6se", "serverCustomAttributes": {"Ead032S7": {}, "gpZeOmES": {}, "F0BDuHv3": {}}, "slotId": "WZzdopmJ", "sourceItemId": "QSg8KZff", "tags": ["EJUeTRYx", "Y2cpjx8q", "vdcyge3b"], "type": "g1dBy6aE"}, {"customAttributes": {"hpUlrimw": {}, "pJXCFy2K": {}, "DUVMH8tK": {}}, "inventoryId": "PAI4hdmz", "serverCustomAttributes": {"PAAqPf4L": {}, "Y7YqUdTq": {}, "vhpoQfSM": {}}, "slotId": "GwgaxQGk", "sourceItemId": "hy7zseLU", "tags": ["GPmP19aN", "6GhMLrY7", "bDiqSugw"], "type": "Y91iJiPX"}, {"customAttributes": {"zKWq5W7t": {}, "rVY4z60d": {}, "oQDKHsz5": {}}, "inventoryId": "D5aoHRfV", "serverCustomAttributes": {"j8YedKoX": {}, "THMusOJ7": {}, "by18UoLe": {}}, "slotId": "kOTL1Jyk", "sourceItemId": "D1vt24G7", "tags": ["KiSGkj3a", "sbzK9090", "7Leul7RW"], "type": "hnvh2cJf"}]}, {"consumeItems": [{"inventoryId": "GdhrfwcV", "qty": 11, "slotId": "TdzQNMmg", "sourceItemId": "6DOYJrnf"}, {"inventoryId": "C8oT1zNI", "qty": 49, "slotId": "xZg8lTQC", "sourceItemId": "arFZ7UTw"}, {"inventoryId": "dXspfjOX", "qty": 14, "slotId": "Tio7IenJ", "sourceItemId": "se4mFpzj"}], "createItems": [{"customAttributes": {"t0WUGWUQ": {}, "WsiHJMSa": {}, "y9p2atk5": {}}, "inventoryConfigurationCode": "nqJ7KnkM", "inventoryId": "qSrsMrIk", "qty": 62, "serverCustomAttributes": {"3t26WTFp": {}, "A7HVs8vb": {}, "X8WkkpPK": {}}, "slotId": "r6jzqMaE", "slotUsed": 21, "sourceItemId": "EcKlYNFR", "tags": ["hWnwcj1p", "gcPVSoBv", "9W3SNmV5"], "toSpecificInventory": false, "type": "t92W2jbW"}, {"customAttributes": {"OvrWyBj3": {}, "5oE9XrmL": {}, "3jKM5575": {}}, "inventoryConfigurationCode": "wTkrfjaW", "inventoryId": "6i5tzF2Y", "qty": 68, "serverCustomAttributes": {"AwSImYVd": {}, "3J1K73J6": {}, "IzB0p0sb": {}}, "slotId": "3N8UopFU", "slotUsed": 67, "sourceItemId": "lVgI9EMc", "tags": ["yF7FyKNr", "OcyZ8V9V", "SWFgkUue"], "toSpecificInventory": true, "type": "gA81D2ha"}, {"customAttributes": {"WFrz0G0P": {}, "SaDkusVA": {}, "T7lw6sPc": {}}, "inventoryConfigurationCode": "08sg9cYo", "inventoryId": "ReFOkVZf", "qty": 14, "serverCustomAttributes": {"He6sbKYR": {}, "prlgQm6a": {}, "zUaGiIjB": {}}, "slotId": "KcwbGc0o", "slotUsed": 57, "sourceItemId": "cx051p5C", "tags": ["Gj2bvIRA", "Rm0L9M3D", "Ox4mA5ju"], "toSpecificInventory": true, "type": "jRGf8Y5P"}], "removeItems": [{"inventoryId": "FBSwkqnm", "slotId": "3Gpsn8ii", "sourceItemId": "dPV4fAnr"}, {"inventoryId": "hkDvpj43", "slotId": "9YKNq40L", "sourceItemId": "ervgudEm"}, {"inventoryId": "KHnEuGvv", "slotId": "l2NkRWEG", "sourceItemId": "lwxD65Pr"}], "targetUserId": "uxGrZ4hM", "updateItems": [{"customAttributes": {"q4Do1QAj": {}, "xQ1wdo6V": {}, "TGbVMlrB": {}}, "inventoryId": "iVo5xo3t", "serverCustomAttributes": {"b00eNJCN": {}, "2XnEmDwh": {}, "ZaVsOGMB": {}}, "slotId": "PLLPIGhs", "sourceItemId": "jrufBtpb", "tags": ["s0Wap69W", "cj1MPyuS", "mYCNsNaP"], "type": "1cYRj5L7"}, {"customAttributes": {"yhaMkB4u": {}, "YFyfRxdO": {}, "bvcEYp3v": {}}, "inventoryId": "hyQJLqCm", "serverCustomAttributes": {"im9oaYG8": {}, "ryj2pP7G": {}, "4UM00nnC": {}}, "slotId": "tuMyv6Bo", "sourceItemId": "S4zUzFkC", "tags": ["lqicCzYk", "UkV2SpTc", "0h6mzebi"], "type": "jWWn7lrG"}, {"customAttributes": {"A2pqsJym": {}, "wW2fqOL5": {}, "16N7ukUT": {}}, "inventoryId": "8BgZAmif", "serverCustomAttributes": {"GRIuRLir": {}, "TqCNIuOV": {}, "XkkaRmnR": {}}, "slotId": "FQZOp85w", "sourceItemId": "S20EfZdJ", "tags": ["MwroVfgI", "7MFaQRXn", "Q5ZESmqw"], "type": "J0fMgXbz"}]}], "requestId": "vtkDFqok"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminCreateChainingOperations \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 2 'AdminCreateChainingOperations' test.out

#- 3 AdminListInventories
$CLI_EXE \
    --sn inventory \
    --op AdminListInventories \
    --namespace $AB_NAMESPACE \
    --inventoryConfigurationCode '8O58XadS' \
    --limit '12' \
    --offset '90' \
    --sortBy 'createdAt' \
    --userId 'Ec8n01WY' \
    > test.out 2>&1
eval_tap $? 3 'AdminListInventories' test.out

#- 4 AdminCreateInventory
# body param: body
echo '{"inventoryConfigurationCode": "c0gMCEWC", "userId": "8n2Y2VQG"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminCreateInventory \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 4 'AdminCreateInventory' test.out

#- 5 AdminGetInventory
$CLI_EXE \
    --sn inventory \
    --op AdminGetInventory \
    --inventoryId 'VrES7jxy' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 5 'AdminGetInventory' test.out

#- 6 AdminUpdateInventory
# body param: body
echo '{"incMaxSlots": 95}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminUpdateInventory \
    --inventoryId 'oX6rjtfs' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 6 'AdminUpdateInventory' test.out

#- 7 DeleteInventory
# body param: body
echo '{"message": "8LpwZM9d"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op DeleteInventory \
    --inventoryId 'uQwSLppp' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 7 'DeleteInventory' test.out

#- 8 AdminListItems
$CLI_EXE \
    --sn inventory \
    --op AdminListItems \
    --inventoryId 'eJPK8zam' \
    --namespace $AB_NAMESPACE \
    --limit '87' \
    --offset '39' \
    --qtyGte '0' \
    --sortBy 'updatedAt:asc' \
    --sourceItemId 'tfzBJgHW' \
    --tags 'h6b7p3HC' \
    > test.out 2>&1
eval_tap $? 8 'AdminListItems' test.out

#- 9 AdminGetInventoryItem
$CLI_EXE \
    --sn inventory \
    --op AdminGetInventoryItem \
    --inventoryId 'CAnAYWJ4' \
    --namespace $AB_NAMESPACE \
    --slotId 'z3IV0AW6' \
    --sourceItemId 'e39UhvEC' \
    > test.out 2>&1
eval_tap $? 9 'AdminGetInventoryItem' test.out

#- 10 AdminListInventoryConfigurations
$CLI_EXE \
    --sn inventory \
    --op AdminListInventoryConfigurations \
    --namespace $AB_NAMESPACE \
    --code 'HLr7pzF9' \
    --limit '62' \
    --offset '46' \
    --sortBy 'createdAt' \
    > test.out 2>&1
eval_tap $? 10 'AdminListInventoryConfigurations' test.out

#- 11 AdminCreateInventoryConfiguration
# body param: body
echo '{"code": "uig2KbtA", "description": "Pv6KI9JU", "initialMaxSlots": 9, "maxInstancesPerUser": 43, "maxUpgradeSlots": 9, "name": "6M5LMhCd"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminCreateInventoryConfiguration \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 11 'AdminCreateInventoryConfiguration' test.out

#- 12 AdminGetInventoryConfiguration
$CLI_EXE \
    --sn inventory \
    --op AdminGetInventoryConfiguration \
    --inventoryConfigurationId 'JJRhRDhy' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 12 'AdminGetInventoryConfiguration' test.out

#- 13 AdminUpdateInventoryConfiguration
# body param: body
echo '{"code": "ofSRwMMD", "description": "HOhLpnM7", "initialMaxSlots": 64, "maxInstancesPerUser": 43, "maxUpgradeSlots": 72, "name": "7U7EECbL"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminUpdateInventoryConfiguration \
    --inventoryConfigurationId 'ec256FJT' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 13 'AdminUpdateInventoryConfiguration' test.out

#- 14 AdminDeleteInventoryConfiguration
$CLI_EXE \
    --sn inventory \
    --op AdminDeleteInventoryConfiguration \
    --inventoryConfigurationId 'TeEYXZqu' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 14 'AdminDeleteInventoryConfiguration' test.out

#- 15 AdminListItemTypes
$CLI_EXE \
    --sn inventory \
    --op AdminListItemTypes \
    --namespace $AB_NAMESPACE \
    --limit '16' \
    --offset '9' \
    --sortBy 'name:asc' \
    > test.out 2>&1
eval_tap $? 15 'AdminListItemTypes' test.out

#- 16 AdminCreateItemType
# body param: body
echo '{"name": "BcMoKPpc"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminCreateItemType \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 16 'AdminCreateItemType' test.out

#- 17 AdminDeleteItemType
$CLI_EXE \
    --sn inventory \
    --op AdminDeleteItemType \
    --itemTypeName 'ptKwcGRh' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 17 'AdminDeleteItemType' test.out

#- 18 AdminListTags
$CLI_EXE \
    --sn inventory \
    --op AdminListTags \
    --namespace $AB_NAMESPACE \
    --limit '30' \
    --offset '67' \
    --owner 'ZGU6azxS' \
    --sortBy 'name:desc' \
    > test.out 2>&1
eval_tap $? 18 'AdminListTags' test.out

#- 19 AdminCreateTag
# body param: body
echo '{"name": "EacgkNqB", "owner": "CLIENT"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminCreateTag \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 19 'AdminCreateTag' test.out

#- 20 AdminDeleteTag
$CLI_EXE \
    --sn inventory \
    --op AdminDeleteTag \
    --namespace $AB_NAMESPACE \
    --tagName '4i7YhSf8' \
    > test.out 2>&1
eval_tap $? 20 'AdminDeleteTag' test.out

#- 21 AdminConsumeUserItem
# body param: body
echo '{"qty": 39, "slotId": "iR1VDIa2", "sourceItemId": "OIJ1lj7E"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminConsumeUserItem \
    --inventoryId 'g7Ab37GZ' \
    --namespace $AB_NAMESPACE \
    --userId 'JabjaY0C' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 21 'AdminConsumeUserItem' test.out

#- 22 AdminBulkUpdateMyItems
# body param: body
echo '[{"customAttributes": {"DzdzNJ0y": {}, "rGk9EhqQ": {}, "2gCBaHE9": {}}, "serverCustomAttributes": {"pta152fK": {}, "RGRRJySe": {}, "W2XnFYea": {}}, "slotId": "C80H7h8x", "sourceItemId": "jToDt0CS", "tags": ["GpGw0GiW", "8BwEHtcu", "A7Lnmw6R"], "type": "KBrThCF4"}, {"customAttributes": {"CUUuCkSN": {}, "am8cVtKC": {}, "6Tbm1XY5": {}}, "serverCustomAttributes": {"iY2N1ua1": {}, "18ir4DYr": {}, "Zm2CbxXI": {}}, "slotId": "D6NMIfh4", "sourceItemId": "NMMwqhHy", "tags": ["2JJfaPQH", "ghtLxg2b", "0kTsUSdd"], "type": "GC5xmyaj"}, {"customAttributes": {"vYG4IL4X": {}, "RYUVg0LQ": {}, "a3CKXs3i": {}}, "serverCustomAttributes": {"b7ZBxTxN": {}, "SJR9DDvS": {}, "6rIzMkpV": {}}, "slotId": "UM66nlUe", "sourceItemId": "kuvg5iCO", "tags": ["F7chGmfs", "z9phplGC", "38jWC2EL"], "type": "vHnRcaCB"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminBulkUpdateMyItems \
    --inventoryId '6IHjKde8' \
    --namespace $AB_NAMESPACE \
    --userId 'rB9DrshV' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 22 'AdminBulkUpdateMyItems' test.out

#- 23 AdminSaveItemToInventory
# body param: body
echo '{"customAttributes": {"eAEdKb3y": {}, "n0W9a7Uo": {}, "XYONF1la": {}}, "qty": 6, "serverCustomAttributes": {"BzAcwrq0": {}, "98zM9Oxi": {}, "MDe34znc": {}}, "slotId": "dkNfLcd0", "slotUsed": 45, "sourceItemId": "LtiC5XIY", "tags": ["kJSOKdnA", "ghcwPZ0q", "fWZV7mSd"], "type": "emGwCibS"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminSaveItemToInventory \
    --inventoryId 'NHknq3p5' \
    --namespace $AB_NAMESPACE \
    --userId 'RZcVq8hs' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 23 'AdminSaveItemToInventory' test.out

#- 24 AdminBulkRemoveItems
# body param: body
echo '[{"slotId": "KoPcdLva", "sourceItemId": "mH9RjfVR"}, {"slotId": "Jgclh0Ek", "sourceItemId": "s3p9gud5"}, {"slotId": "uRYhxEWK", "sourceItemId": "q1QJbioZ"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminBulkRemoveItems \
    --inventoryId 'tDqbnt6v' \
    --namespace $AB_NAMESPACE \
    --userId 'TPggVpT3' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 24 'AdminBulkRemoveItems' test.out

#- 25 AdminSaveItem
# body param: body
echo '{"customAttributes": {"8Rhu7H7N": {}, "rlc814ZR": {}, "SlKdIgrX": {}}, "inventoryConfigurationCode": "jIu8QArj", "qty": 80, "serverCustomAttributes": {"8MpvwV7l": {}, "1YZhUWT7": {}, "GoRWAAFV": {}}, "slotId": "xAQ4oNhF", "slotUsed": 42, "sourceItemId": "WKzqZo7k", "tags": ["ySZWDb9P", "CKiJfi1r", "iXj43yTe"], "type": "bKb3FXRe"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminSaveItem \
    --namespace $AB_NAMESPACE \
    --userId 'mP6UM3EX' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 25 'AdminSaveItem' test.out

#- 26 PublicListInventoryConfigurations
$CLI_EXE \
    --sn inventory \
    --op PublicListInventoryConfigurations \
    --namespace $AB_NAMESPACE \
    --code 'J815DbHj' \
    --limit '93' \
    --offset '83' \
    --sortBy 'createdAt:asc' \
    > test.out 2>&1
eval_tap $? 26 'PublicListInventoryConfigurations' test.out

#- 27 PublicListItemTypes
$CLI_EXE \
    --sn inventory \
    --op PublicListItemTypes \
    --namespace $AB_NAMESPACE \
    --limit '74' \
    --offset '68' \
    --sortBy 'name' \
    > test.out 2>&1
eval_tap $? 27 'PublicListItemTypes' test.out

#- 28 PublicListTags
$CLI_EXE \
    --sn inventory \
    --op PublicListTags \
    --namespace $AB_NAMESPACE \
    --limit '0' \
    --offset '59' \
    --sortBy 'createdAt' \
    > test.out 2>&1
eval_tap $? 28 'PublicListTags' test.out

#- 29 PublicListInventories
$CLI_EXE \
    --sn inventory \
    --op PublicListInventories \
    --namespace $AB_NAMESPACE \
    --inventoryConfigurationCode 'iXXVqqMM' \
    --limit '42' \
    --offset '94' \
    --sortBy 'createdAt:asc' \
    > test.out 2>&1
eval_tap $? 29 'PublicListInventories' test.out

#- 30 PublicConsumeMyItem
# body param: body
echo '{"qty": 2, "slotId": "YJIO7EXh", "sourceItemId": "qxd7ACWU"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op PublicConsumeMyItem \
    --inventoryId 'xBbEMVWb' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 30 'PublicConsumeMyItem' test.out

#- 31 PublicListItems
$CLI_EXE \
    --sn inventory \
    --op PublicListItems \
    --inventoryId '8UOEyIOR' \
    --namespace $AB_NAMESPACE \
    --limit '78' \
    --offset '69' \
    --qtyGte '27' \
    --sortBy 'createdAt' \
    --sourceItemId '9IqmfsFz' \
    --tags 'nr1jj903' \
    > test.out 2>&1
eval_tap $? 31 'PublicListItems' test.out

#- 32 PublicBulkUpdateMyItems
# body param: body
echo '[{"customAttributes": {"5KkxDTfc": {}, "ADSn9qtD": {}, "44T6e4IR": {}}, "slotId": "5j2rvVGs", "sourceItemId": "xBXDgChs", "tags": ["mUrENH6g", "jOQOxNFD", "ORmLwpyX"]}, {"customAttributes": {"agLG5cmq": {}, "QRYd5iyf": {}, "UqC4rMmT": {}}, "slotId": "fqJbh7hE", "sourceItemId": "xzYeUk3l", "tags": ["vUnZLyY2", "Oy5s7DxL", "gKyqxuxQ"]}, {"customAttributes": {"5dyMDHKV": {}, "Xs9PMxdR": {}, "DaDaJhCs": {}}, "slotId": "SFjdykhB", "sourceItemId": "thzsejY6", "tags": ["5wfqWUAr", "l5tfy7qh", "GAh8a53B"]}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op PublicBulkUpdateMyItems \
    --inventoryId 'Dcm6vuX7' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 32 'PublicBulkUpdateMyItems' test.out

#- 33 PublicBulkRemoveMyItems
# body param: body
echo '[{"slotId": "UIqgn3C5", "sourceItemId": "LYzv0uXA"}, {"slotId": "ytLCtlLG", "sourceItemId": "9tBH1zZJ"}, {"slotId": "duLr9bUh", "sourceItemId": "PQhNry7a"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op PublicBulkRemoveMyItems \
    --inventoryId 'GnIJD0mq' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 33 'PublicBulkRemoveMyItems' test.out

#- 34 PublicMoveMyItems
# body param: body
echo '{"items": [{"qty": 67, "slotId": "gluZ1JUa", "sourceItemId": "UynuVoNh"}, {"qty": 98, "slotId": "FQBIFeK4", "sourceItemId": "8VnOLlau"}, {"qty": 9, "slotId": "HbZtwaQu", "sourceItemId": "XQIg2spF"}], "srcInventoryId": "yXTIDxRA"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op PublicMoveMyItems \
    --inventoryId 'jsd4pxKN' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 34 'PublicMoveMyItems' test.out

#- 35 PublicGetItem
$CLI_EXE \
    --sn inventory \
    --op PublicGetItem \
    --inventoryId '6T5DDaBO' \
    --namespace $AB_NAMESPACE \
    --slotId '1Y0G9h3f' \
    --sourceItemId 'pSBREqo0' \
    > test.out 2>&1
eval_tap $? 35 'PublicGetItem' test.out


# remove artifacts
rm -f "$CLI_TOKEN_FILE"
rm -f "$TEMP_JSON_INPUT"
rm -f "$TEMP_FILE_UPLOAD"

exit $EXIT_CODE