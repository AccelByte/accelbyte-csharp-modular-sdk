#!/usr/bin/env bash

# Copyright (c) 2021 AccelByte Inc. All Rights Reserved.
# This is licensed software from AccelByte Inc, for limitations
# and restrictions contact your company contract manager.

# This code is generated by tool. DO NOT EDIT.

# Meta:
# - random seed: 
# - template file: 

# Instructions:
# - Run the Justice SDK Mock Server first before running this script.

export AB_BASE_URL="http://127.0.0.1:8080"
export AB_CLIENT_ID="admin"
export AB_CLIENT_SECRET="admin"
export AB_NAMESPACE="test"
export AB_APP_NAME="UnitTest"

EXIT_CODE=0

eval_tap() {
  if [ $1 -eq 0 ]; then
    echo "ok $2 - $3"
  else
    EXIT_CODE=1
    echo "not ok $2 - $3"
    sed 's/^/# /g' $4
  fi
  rm -f $4
}

CLI_EXE="AccelByte.Sdk.Sample.Cli"
CLI_TOKEN_FILE="$(dirname "$(which $CLI_EXE)")/token.json"
TEMP_JSON_INPUT="input_json.json"
TEMP_FILE_UPLOAD="file_upload.bin"

echo "TAP version 13"
echo "1..44"

#- 1 Login
$CLI_EXE --op login --lt user --user user --pass user > test.out 2>&1
eval_tap $? 1 'Login' test.out

if [ $EXIT_CODE -ne 0 ]; then
  echo "Bail out! Login failed."
  exit $EXIT_CODE
fi

# echo "foo" > "$CLI_TOKEN_FILE"

#- 2 AdminCreateChainingOperations
# body param: body
echo '{"message": "ARqZJuH0", "operations": [{"consumeItems": [{"dateRangeValidation": false, "inventoryId": "OGYjbOUq", "options": ["MAs8mhNI", "gBx30nIX", "7VRpp7HI"], "qty": 95, "slotId": "sFSHnGBP", "sourceItemId": "zUBJvyWB"}, {"dateRangeValidation": true, "inventoryId": "9zmeMJFF", "options": ["zljB0Bzk", "f9twrW8i", "4lba0laH"], "qty": 96, "slotId": "YFGVpePJ", "sourceItemId": "K7StwTTT"}, {"dateRangeValidation": true, "inventoryId": "e9QBPHEA", "options": ["ShgeTmGi", "UtwL9xQd", "K1hdOVQc"], "qty": 21, "slotId": "PSx4qJ4I", "sourceItemId": "hElTcBHK"}], "createItems": [{"customAttributes": {"0LNOXyhi": {}, "XuYD2XtD": {}, "m0LjaAFW": {}}, "inventoryConfigurationCode": "sTgDQ3kU", "inventoryId": "I320yOo6", "qty": 75, "serverCustomAttributes": {"li3eqLre": {}, "zeM8puoC": {}, "Sike2XRR": {}}, "slotId": "NZo0XITu", "slotUsed": 28, "source": "ECOMMERCE", "sourceItemId": "GxLSD2PG", "tags": ["zLM5J8pH", "gplnKlVo", "oFlkERUH"], "toSpecificInventory": false, "type": "c2UZy2eb"}, {"customAttributes": {"ThUMwWx0": {}, "CJKy9XmC": {}, "LrhmJ93h": {}}, "inventoryConfigurationCode": "Mua4h4GT", "inventoryId": "ffcIzsdq", "qty": 60, "serverCustomAttributes": {"RglZiYwU": {}, "I15t8afJ": {}, "lptxzcwu": {}}, "slotId": "xYW7kwfO", "slotUsed": 67, "source": "OTHER", "sourceItemId": "4xSXroDA", "tags": ["okMfBn1q", "XGNTf5pP", "UIKdhhvq"], "toSpecificInventory": false, "type": "FVfxfwdI"}, {"customAttributes": {"ViwpTkzG": {}, "av9KyOPv": {}, "KUGcTTdm": {}}, "inventoryConfigurationCode": "oVvONIbE", "inventoryId": "pbg54jKo", "qty": 65, "serverCustomAttributes": {"ppUmHmxC": {}, "6Pyd9jxh": {}, "bqXvaCE0": {}}, "slotId": "qyJ28uFd", "slotUsed": 71, "source": "ECOMMERCE", "sourceItemId": "Oy8uC78t", "tags": ["kb6eDKaq", "3strjFTX", "n7w9YnwV"], "toSpecificInventory": false, "type": "CLOpnXDh"}], "removeItems": [{"inventoryId": "YranqyQM", "slotId": "SaVyAQUT", "sourceItemId": "VxhZUOjd"}, {"inventoryId": "T2P2IjTn", "slotId": "HuUhXeq5", "sourceItemId": "vWTkXBsc"}, {"inventoryId": "e2LOXVvX", "slotId": "DVhfadJN", "sourceItemId": "vkbyErKC"}], "targetUserId": "XctoEQGH", "updateItems": [{"customAttributes": {"3n1pb6K4": {}, "jRK1mo9U": {}, "hARtl6lc": {}}, "inventoryId": "9BlbhOdP", "serverCustomAttributes": {"dZAD9UDG": {}, "Y79l3frd": {}, "6PH12ocg": {}}, "slotId": "G4a6o7Yn", "sourceItemId": "NbNncINZ", "tags": ["ViLOc7Vr", "Qsbj92dW", "iws5MNsx"], "type": "PF2Dzqwp"}, {"customAttributes": {"nMKCay0J": {}, "TtQQKLkX": {}, "MwK521UZ": {}}, "inventoryId": "4LpsAGDr", "serverCustomAttributes": {"3udKGlJZ": {}, "z7dRwcWT": {}, "Zw03PDoA": {}}, "slotId": "fUHy2kNO", "sourceItemId": "1NnNaP8n", "tags": ["wql8eKJl", "g01KnWbI", "GutbaIcv"], "type": "xqll7fqt"}, {"customAttributes": {"Ty7kllKK": {}, "IWyybZjC": {}, "Vt9PEaqt": {}}, "inventoryId": "KVJuOswU", "serverCustomAttributes": {"QdJdQAkN": {}, "O2MD3lA4": {}, "Bc9FfZu8": {}}, "slotId": "C4XfUJ2M", "sourceItemId": "xYmimUUy", "tags": ["JTXNPUAL", "tnboxkjq", "bV6zgB9l"], "type": "MBmABtnU"}]}, {"consumeItems": [{"dateRangeValidation": true, "inventoryId": "YIwMeg6K", "options": ["lQiPScT4", "zbCYUIEB", "HTL7tNrf"], "qty": 11, "slotId": "Z1Seqxd0", "sourceItemId": "S6C30dcK"}, {"dateRangeValidation": true, "inventoryId": "HzXarGJ6", "options": ["8zgeWjuT", "y6FRv4UD", "GsKaAUSm"], "qty": 6, "slotId": "KSimdoUI", "sourceItemId": "wTZP1cub"}, {"dateRangeValidation": true, "inventoryId": "HDSklMYB", "options": ["hKDmxBwZ", "PklOEvJP", "eFYyTc9C"], "qty": 91, "slotId": "uLfhcvmF", "sourceItemId": "dYnTUzbY"}], "createItems": [{"customAttributes": {"cnOf4X9w": {}, "7akZyFN9": {}, "Fewmd3lv": {}}, "inventoryConfigurationCode": "Omz7OWLo", "inventoryId": "tGUekAWl", "qty": 27, "serverCustomAttributes": {"jF9JfnOW": {}, "4xDU7DyD": {}, "IaE6XMWQ": {}}, "slotId": "zHoOG4NJ", "slotUsed": 31, "source": "ECOMMERCE", "sourceItemId": "pzMMf2QO", "tags": ["sdpWLltG", "IojLDnnR", "h901IAl5"], "toSpecificInventory": false, "type": "3jf21yRs"}, {"customAttributes": {"lgxdAFNJ": {}, "VpAUrpZa": {}, "2MB2BIyK": {}}, "inventoryConfigurationCode": "PY5ntqja", "inventoryId": "qblazBLy", "qty": 3, "serverCustomAttributes": {"XDd8LLEE": {}, "BZb5Fgbm": {}, "xWc3BOUn": {}}, "slotId": "y2XVqihl", "slotUsed": 5, "source": "ECOMMERCE", "sourceItemId": "eIYeevCj", "tags": ["xhUbBQlU", "ItO83F20", "Vb2GFQPt"], "toSpecificInventory": false, "type": "P0UzxwuV"}, {"customAttributes": {"O6od9WYw": {}, "boLinpQc": {}, "bwckflyO": {}}, "inventoryConfigurationCode": "7f9Qqh6T", "inventoryId": "CjNjqWDT", "qty": 65, "serverCustomAttributes": {"X7IQmfpI": {}, "tv3oduvP": {}, "8lb37uq6": {}}, "slotId": "qwmlYtuU", "slotUsed": 53, "source": "OTHER", "sourceItemId": "jK7LvvKB", "tags": ["LL5yP8AF", "5ILnDVr6", "eQ4vEUHH"], "toSpecificInventory": false, "type": "q8i91USu"}], "removeItems": [{"inventoryId": "Hv0mVpxW", "slotId": "Vh9vz8GL", "sourceItemId": "mZBmVOGI"}, {"inventoryId": "qCrNULAC", "slotId": "75zFBO7Q", "sourceItemId": "V8r6RonZ"}, {"inventoryId": "o74EbOkH", "slotId": "Irw29sDl", "sourceItemId": "nb0IpDMt"}], "targetUserId": "uxzTuO55", "updateItems": [{"customAttributes": {"h0nnsetD": {}, "P5D0V7Jr": {}, "lcwV4KmF": {}}, "inventoryId": "ecEq4Cfp", "serverCustomAttributes": {"DZE2TM3z": {}, "MkU0Wavh": {}, "TAQSCsGj": {}}, "slotId": "JnO8In2H", "sourceItemId": "DJiByVEl", "tags": ["msrlPk19", "pRfjYTii", "Df8YpIuE"], "type": "yOz5pmsE"}, {"customAttributes": {"FuUBYq8A": {}, "2VWg986L": {}, "5u0kxIzR": {}}, "inventoryId": "y8abRTsT", "serverCustomAttributes": {"6qErsxfM": {}, "NEhskE7j": {}, "HWCi8KSk": {}}, "slotId": "norkp6Mh", "sourceItemId": "wlXQsSff", "tags": ["82aliDF2", "CFSit545", "Db8hR9et"], "type": "nxjGBjZx"}, {"customAttributes": {"lElpDPzE": {}, "SUOrosnI": {}, "bKkWT7re": {}}, "inventoryId": "6arbJTzW", "serverCustomAttributes": {"WOxoLzg1": {}, "9uqv1kwM": {}, "aGPuieA2": {}}, "slotId": "Qxaj0WSI", "sourceItemId": "vHCYBDru", "tags": ["hPk6H6Zy", "dTwgUGh0", "9h1Z9tMk"], "type": "HidKcORp"}]}, {"consumeItems": [{"dateRangeValidation": false, "inventoryId": "4Jwta6ft", "options": ["3M0YcAdO", "vewOITTu", "ulTMoYN6"], "qty": 57, "slotId": "M6u8f3bQ", "sourceItemId": "1yfQLJ8e"}, {"dateRangeValidation": true, "inventoryId": "XUMYcN5I", "options": ["EyYWdnSg", "24LgDLLx", "Ta3kOCDz"], "qty": 67, "slotId": "NAWgD2Vp", "sourceItemId": "kGgk1h6U"}, {"dateRangeValidation": false, "inventoryId": "8EZupLQx", "options": ["RxD7sK1X", "Sv216ArE", "cxKadprw"], "qty": 20, "slotId": "615wujHq", "sourceItemId": "Ex0jF8Pt"}], "createItems": [{"customAttributes": {"Ml6AqmtP": {}, "zvphCtpl": {}, "yJlclyl2": {}}, "inventoryConfigurationCode": "l7aVkGRz", "inventoryId": "7ZTcEgl2", "qty": 86, "serverCustomAttributes": {"AO2TH3zu": {}, "ScP8a0ns": {}, "xGLxgRda": {}}, "slotId": "cUrrxFVy", "slotUsed": 48, "source": "OTHER", "sourceItemId": "pSWDQz6l", "tags": ["YXy3kvQ2", "bJrEhDVh", "Cc2L6YMS"], "toSpecificInventory": false, "type": "VSUyO3Ul"}, {"customAttributes": {"7wAj11km": {}, "cg5BFHZ9": {}, "F78NSVuX": {}}, "inventoryConfigurationCode": "tikkvrUN", "inventoryId": "Bid8wZGx", "qty": 66, "serverCustomAttributes": {"G1N9xhqM": {}, "dXHOiWJF": {}, "uD7fs11B": {}}, "slotId": "R3wFoTDm", "slotUsed": 83, "source": "ECOMMERCE", "sourceItemId": "pLvP9GdK", "tags": ["gyXAr3Dh", "8bkC3ABG", "UhNdp8ki"], "toSpecificInventory": true, "type": "YMJ3IbYr"}, {"customAttributes": {"gY9g7SKe": {}, "B65LEqn7": {}, "G1XK9Wcy": {}}, "inventoryConfigurationCode": "URAGrnQ3", "inventoryId": "TIM03NXR", "qty": 3, "serverCustomAttributes": {"kIbOqwa0": {}, "CAmbxJ01": {}, "G6x8ibBK": {}}, "slotId": "XeluAi7H", "slotUsed": 27, "source": "ECOMMERCE", "sourceItemId": "yGW0D8oq", "tags": ["tllQcUk6", "3DLPm5wW", "509n3pFz"], "toSpecificInventory": true, "type": "dq9q7Zrt"}], "removeItems": [{"inventoryId": "3igOfpkZ", "slotId": "0i6CVRet", "sourceItemId": "ZiL3Ijah"}, {"inventoryId": "Ye5XfDaY", "slotId": "X6nDEfiz", "sourceItemId": "zWmSwbYe"}, {"inventoryId": "jl89eRKD", "slotId": "F95hr0D4", "sourceItemId": "Hx3ifusL"}], "targetUserId": "hkA0Qe5d", "updateItems": [{"customAttributes": {"yWrwIgkU": {}, "rxeSrFUA": {}, "wMq3v7t4": {}}, "inventoryId": "yCPP3uFZ", "serverCustomAttributes": {"HIs8Mmdd": {}, "rdHNI03c": {}, "tuIgTFjE": {}}, "slotId": "ZHOoMxIQ", "sourceItemId": "HMRwZoSE", "tags": ["MhXMeG2p", "qcdweOLl", "xOYkHSPL"], "type": "osdA52wO"}, {"customAttributes": {"AztKhFIR": {}, "jNXtlo7H": {}, "dwr4BWaq": {}}, "inventoryId": "m5gJuib1", "serverCustomAttributes": {"jiAuMelf": {}, "gjfV3Bd5": {}, "HFkjB5Ly": {}}, "slotId": "xKxTC7nc", "sourceItemId": "g8n7d7na", "tags": ["O35vEiaC", "5RbSR0qG", "ujDwLMlm"], "type": "XkvcQFue"}, {"customAttributes": {"3rjKqEw0": {}, "LFAA4oT1": {}, "LEpIKNnP": {}}, "inventoryId": "AbyDmlkD", "serverCustomAttributes": {"xAng0Nqs": {}, "glJqDklv": {}, "lPeMwEa8": {}}, "slotId": "OVLTgwwN", "sourceItemId": "aNjOTTz9", "tags": ["ta1qudho", "tVgTBVtc", "eWCfRVAk"], "type": "FYw9JIGc"}]}], "requestId": "ycY3Bsyg"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminCreateChainingOperations \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 2 'AdminCreateChainingOperations' test.out

#- 3 AdminListIntegrationConfigurations
$CLI_EXE \
    --sn inventory \
    --op AdminListIntegrationConfigurations \
    --namespace $AB_NAMESPACE \
    --limit '1' \
    --offset '20' \
    --sortBy 'createdAt:desc' \
    > test.out 2>&1
eval_tap $? 3 'AdminListIntegrationConfigurations' test.out

#- 4 AdminCreateIntegrationConfiguration
# body param: body
echo '{"mapItemType": ["PRJZeBqt", "P9cC9NO5", "f3XRfGpb"], "serviceName": "HYOhTvQY", "targetInventoryCode": "0hcLhQ6d"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminCreateIntegrationConfiguration \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 4 'AdminCreateIntegrationConfiguration' test.out

#- 5 AdminUpdateIntegrationConfiguration
# body param: body
echo '{"mapItemType": ["cEATPk0i", "XhTnyi2p", "r5oaS6P2"], "serviceName": "GqspSsiN", "targetInventoryCode": "RYRtq1tz"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminUpdateIntegrationConfiguration \
    --integrationConfigurationId 'kRvlbFfx' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 5 'AdminUpdateIntegrationConfiguration' test.out

#- 6 AdminUpdateStatusIntegrationConfiguration
# body param: body
echo '{"status": "INIT"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminUpdateStatusIntegrationConfiguration \
    --integrationConfigurationId '67wy98sb' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 6 'AdminUpdateStatusIntegrationConfiguration' test.out

#- 7 AdminListInventories
$CLI_EXE \
    --sn inventory \
    --op AdminListInventories \
    --namespace $AB_NAMESPACE \
    --inventoryConfigurationCode 'wLw7DJG5' \
    --limit '67' \
    --offset '96' \
    --sortBy 'updatedAt' \
    --userId 'ljbz8gtF' \
    > test.out 2>&1
eval_tap $? 7 'AdminListInventories' test.out

#- 8 AdminCreateInventory
# body param: body
echo '{"inventoryConfigurationCode": "YBUQGdsZ", "userId": "lpQtToFJ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminCreateInventory \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 8 'AdminCreateInventory' test.out

#- 9 AdminGetInventory
$CLI_EXE \
    --sn inventory \
    --op AdminGetInventory \
    --inventoryId '2p3zP0XX' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 9 'AdminGetInventory' test.out

#- 10 AdminUpdateInventory
# body param: body
echo '{"incMaxSlots": 23}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminUpdateInventory \
    --inventoryId 'yjK1lv7u' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 10 'AdminUpdateInventory' test.out

#- 11 DeleteInventory
# body param: body
echo '{"message": "tzflnf6h"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op DeleteInventory \
    --inventoryId 'rmupCFpX' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 11 'DeleteInventory' test.out

#- 12 AdminListItems
$CLI_EXE \
    --sn inventory \
    --op AdminListItems \
    --inventoryId 'PeziCpfJ' \
    --namespace $AB_NAMESPACE \
    --limit '26' \
    --offset '9' \
    --sortBy 'updatedAt' \
    --sourceItemId 'y2zl38ar' \
    --tags 'xCu84jTl' \
    > test.out 2>&1
eval_tap $? 12 'AdminListItems' test.out

#- 13 AdminGetInventoryItem
$CLI_EXE \
    --sn inventory \
    --op AdminGetInventoryItem \
    --inventoryId 'IwF1Ij0m' \
    --namespace $AB_NAMESPACE \
    --slotId 'Oephs9ep' \
    --sourceItemId 'sx2TiXJo' \
    > test.out 2>&1
eval_tap $? 13 'AdminGetInventoryItem' test.out

#- 14 AdminListInventoryConfigurations
$CLI_EXE \
    --sn inventory \
    --op AdminListInventoryConfigurations \
    --namespace $AB_NAMESPACE \
    --code 'g5b3gpZj' \
    --limit '82' \
    --offset '25' \
    --sortBy 'updatedAt:desc' \
    > test.out 2>&1
eval_tap $? 14 'AdminListInventoryConfigurations' test.out

#- 15 AdminCreateInventoryConfiguration
# body param: body
echo '{"code": "9ld69ANG", "description": "iQ2aSA18", "initialMaxSlots": 9, "maxInstancesPerUser": 80, "maxUpgradeSlots": 25, "name": "XCOg8GM4"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminCreateInventoryConfiguration \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 15 'AdminCreateInventoryConfiguration' test.out

#- 16 AdminGetInventoryConfiguration
$CLI_EXE \
    --sn inventory \
    --op AdminGetInventoryConfiguration \
    --inventoryConfigurationId 'ABc6Tksm' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 16 'AdminGetInventoryConfiguration' test.out

#- 17 AdminUpdateInventoryConfiguration
# body param: body
echo '{"code": "sViquhfa", "description": "g233APiq", "initialMaxSlots": 26, "maxInstancesPerUser": 5, "maxUpgradeSlots": 10, "name": "aaYuAXuR"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminUpdateInventoryConfiguration \
    --inventoryConfigurationId 'G9mcFtXm' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 17 'AdminUpdateInventoryConfiguration' test.out

#- 18 AdminDeleteInventoryConfiguration
$CLI_EXE \
    --sn inventory \
    --op AdminDeleteInventoryConfiguration \
    --inventoryConfigurationId 'Be3JM8Sg' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 18 'AdminDeleteInventoryConfiguration' test.out

#- 19 AdminListItemTypes
$CLI_EXE \
    --sn inventory \
    --op AdminListItemTypes \
    --namespace $AB_NAMESPACE \
    --limit '47' \
    --offset '88' \
    --sortBy 'createdAt' \
    > test.out 2>&1
eval_tap $? 19 'AdminListItemTypes' test.out

#- 20 AdminCreateItemType
# body param: body
echo '{"name": "bfFrTrGR"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminCreateItemType \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 20 'AdminCreateItemType' test.out

#- 21 AdminDeleteItemType
$CLI_EXE \
    --sn inventory \
    --op AdminDeleteItemType \
    --itemTypeName 'ey9KPQvU' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 21 'AdminDeleteItemType' test.out

#- 22 AdminListTags
$CLI_EXE \
    --sn inventory \
    --op AdminListTags \
    --namespace $AB_NAMESPACE \
    --limit '32' \
    --offset '68' \
    --owner 'INImPq2d' \
    --sortBy 'name:desc' \
    > test.out 2>&1
eval_tap $? 22 'AdminListTags' test.out

#- 23 AdminCreateTag
# body param: body
echo '{"name": "yOve2ZI4", "owner": "SERVER"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminCreateTag \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 23 'AdminCreateTag' test.out

#- 24 AdminDeleteTag
$CLI_EXE \
    --sn inventory \
    --op AdminDeleteTag \
    --namespace $AB_NAMESPACE \
    --tagName 'eDmMl5fm' \
    > test.out 2>&1
eval_tap $? 24 'AdminDeleteTag' test.out

#- 25 AdminConsumeUserItem
# body param: body
echo '{"options": ["0gaPCGMi", "23BgysUQ", "5OdMN9Of"], "qty": 20, "slotId": "xzTTk0V9", "sourceItemId": "98WPTKHA"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminConsumeUserItem \
    --inventoryId 'inA8THYX' \
    --namespace $AB_NAMESPACE \
    --userId '08eOvJmL' \
    --dateRangeValidation 'lPDbsvJk' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 25 'AdminConsumeUserItem' test.out

#- 26 AdminBulkUpdateMyItems
# body param: body
echo '[{"customAttributes": {"gAPcCJC3": {}, "EpOV5SH0": {}, "jRPXg1Yb": {}}, "serverCustomAttributes": {"vFXYCG8B": {}, "y1HUUysX": {}, "dBBTHtBz": {}}, "slotId": "TxNHrX7Q", "sourceItemId": "2IcaPkhU", "tags": ["PwnqDnQz", "1lePqkSf", "mpr3BRqC"], "type": "DQvfKwfr"}, {"customAttributes": {"sJFQZYYm": {}, "VTXymfmw": {}, "CIcv3Owj": {}}, "serverCustomAttributes": {"oIdzWOda": {}, "VmH6c4Yx": {}, "gadXFzao": {}}, "slotId": "16NefOI1", "sourceItemId": "0wUWN4R1", "tags": ["KeZ1Hz5P", "E3glbRQm", "Cpm9O8AP"], "type": "oykSqei1"}, {"customAttributes": {"4k14NtH3": {}, "wtMaYvga": {}, "UMybysck": {}}, "serverCustomAttributes": {"GGmrRDya": {}, "jtZZ1VNq": {}, "nzaGMxq6": {}}, "slotId": "mvSRf1uK", "sourceItemId": "9TuG1bG6", "tags": ["ug9ZkpKd", "coagxPjY", "VvaNuo5h"], "type": "Vx0SuOI5"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminBulkUpdateMyItems \
    --inventoryId 'jTPfM3ax' \
    --namespace $AB_NAMESPACE \
    --userId '9sYJJTu7' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 26 'AdminBulkUpdateMyItems' test.out

#- 27 AdminSaveItemToInventory
# body param: body
echo '{"customAttributes": {"HBLyiCn1": {}, "IlVcdPn3": {}, "NGqP2e3S": {}}, "qty": 99, "serverCustomAttributes": {"K9215mU9": {}, "9rXHdTwi": {}, "nCwCxFtY": {}}, "slotId": "JQDKXihl", "slotUsed": 51, "source": "ECOMMERCE", "sourceItemId": "QuN1ukHw", "tags": ["fSZZW5rE", "OfnWOOe7", "oAEa3egE"], "type": "pnhKx4nQ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminSaveItemToInventory \
    --inventoryId 'ZEMRUCR9' \
    --namespace $AB_NAMESPACE \
    --userId 'EwWM2e9J' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 27 'AdminSaveItemToInventory' test.out

#- 28 AdminBulkRemoveItems
# body param: body
echo '[{"slotId": "J7KfAxt6", "sourceItemId": "qd8DuSro"}, {"slotId": "rUAW4zId", "sourceItemId": "PBqho4B2"}, {"slotId": "dyZUGeVN", "sourceItemId": "wfD8y1VZ"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminBulkRemoveItems \
    --inventoryId 'sS51JBIQ' \
    --namespace $AB_NAMESPACE \
    --userId 'xC3ohzPL' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 28 'AdminBulkRemoveItems' test.out

#- 29 AdminBulkSaveItemToInventory
# body param: body
echo '[{"customAttributes": {"v2SCKKII": {}, "poXHNOPR": {}, "LpMD2vNj": {}}, "qty": 90, "serverCustomAttributes": {"oAxN9XaC": {}, "SkSOVs0C": {}, "f7HyAMRJ": {}}, "slotId": "uCYhuWrr", "slotUsed": 76, "source": "OTHER", "sourceItemId": "buTohd7t", "tags": ["W5TkFOYy", "4Fn5Vhtq", "MjPxMIAX"], "type": "uDw1Du3g"}, {"customAttributes": {"1Yv8wsaj": {}, "tAuFh5Ny": {}, "428OCqXN": {}}, "qty": 99, "serverCustomAttributes": {"OrM7RLWu": {}, "dLMPB4UV": {}, "9YksRAVv": {}}, "slotId": "5vhYIAzR", "slotUsed": 9, "source": "OTHER", "sourceItemId": "iv5vATaD", "tags": ["DlzT5Uv1", "k8S5puwh", "qe35LVXh"], "type": "1zNPBZaf"}, {"customAttributes": {"xAWNCzSG": {}, "SSN6AHi1": {}, "kk3JxypS": {}}, "qty": 87, "serverCustomAttributes": {"FKs0YgpQ": {}, "CmqKpU2T": {}, "3rWfz1Yu": {}}, "slotId": "TnWhpQll", "slotUsed": 48, "source": "OTHER", "sourceItemId": "qY6bIoYA", "tags": ["Gk8541dd", "h5KbX4tM", "Qf4zvsfi"], "type": "DoUC5RPT"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminBulkSaveItemToInventory \
    --inventoryId 'mqi9cYvT' \
    --namespace $AB_NAMESPACE \
    --userId 'd5lfqVJ1' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 29 'AdminBulkSaveItemToInventory' test.out

#- 30 AdminUpdateUserInventoriesByInventoryCode
# body param: body
echo '{"incMaxSlots": 39}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminUpdateUserInventoriesByInventoryCode \
    --inventoryConfigurationCode 'wcUCy5az' \
    --namespace $AB_NAMESPACE \
    --userId 'yDG5enYq' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 30 'AdminUpdateUserInventoriesByInventoryCode' test.out

#- 31 AdminSaveItem
# body param: body
echo '{"customAttributes": {"mB8yiZwb": {}, "SlPz3ahA": {}, "nGBEF6Gw": {}}, "inventoryConfigurationCode": "4jPwOROe", "qty": 16, "serverCustomAttributes": {"oHQO1yEy": {}, "jnvNkjLz": {}, "Rl2ow3wn": {}}, "slotId": "F1hZZXE4", "slotUsed": 92, "source": "OTHER", "sourceItemId": "H4H0sXBq", "tags": ["SeApdvMy", "euCvhh4i", "4hEKp7H2"], "type": "tcWULtZb"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminSaveItem \
    --namespace $AB_NAMESPACE \
    --userId 'BXi9MZ0J' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 31 'AdminSaveItem' test.out

#- 32 AdminBulkSaveItem
# body param: body
echo '[{"customAttributes": {"5M2vs5pR": {}, "9Ec2iExU": {}, "EHg3Iyge": {}}, "inventoryConfigurationCode": "Y2nZxmQ9", "qty": 74, "serverCustomAttributes": {"Js6JQ2uC": {}, "kMLdsgg3": {}, "IrPuAlv9": {}}, "slotId": "HR4b5RkV", "slotUsed": 86, "source": "ECOMMERCE", "sourceItemId": "EXjjqZ3x", "tags": ["8R6ceWIG", "9Fy7PI5G", "yqQeCtsN"], "type": "WNOet9sL"}, {"customAttributes": {"VTjUwVhx": {}, "pcT99m6m": {}, "u4GkubfB": {}}, "inventoryConfigurationCode": "KoF3hNco", "qty": 96, "serverCustomAttributes": {"7CXesC6G": {}, "NPCV2Ypp": {}, "Hrs9X6Se": {}}, "slotId": "huUTwhGB", "slotUsed": 35, "source": "OTHER", "sourceItemId": "c5BR4Bat", "tags": ["2tKVQ2PA", "pCFNrV02", "TPWcGKEi"], "type": "OP9QBjh6"}, {"customAttributes": {"F26FVrVK": {}, "WdFps4pI": {}, "U0OHCd8V": {}}, "inventoryConfigurationCode": "pk705x78", "qty": 50, "serverCustomAttributes": {"smQwKWcX": {}, "0xQn1G0V": {}, "01WPT3q4": {}}, "slotId": "R95ZUIo5", "slotUsed": 77, "source": "OTHER", "sourceItemId": "wn5lqds7", "tags": ["NNLM2E8l", "rZCFORqw", "fNMj391s"], "type": "I3AbA2Ns"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminBulkSaveItem \
    --namespace $AB_NAMESPACE \
    --userId 'rQAoRptj' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 32 'AdminBulkSaveItem' test.out

#- 33 AdminSyncUserEntitlements
$CLI_EXE \
    --sn inventory \
    --op AdminSyncUserEntitlements \
    --namespace $AB_NAMESPACE \
    --userId 'ur2G9MCt' \
    > test.out 2>&1
eval_tap $? 33 'AdminSyncUserEntitlements' test.out

#- 34 AdminPurchasable
# body param: body
echo '{"entitlementType": "IvMdafG7", "inventoryConfig": {"slotUsed": 60}, "itemId": "FaG4YHj8", "itemType": "RqdqVpcU", "items": [{"bundledQty": 72, "entitlementType": "ZktfnZOi", "inventoryConfig": {"slotUsed": 34}, "itemId": "UkDKeflC", "itemType": "cpV1flZI", "sku": "ukQkoxsl", "stackable": false, "useCount": 40}, {"bundledQty": 41, "entitlementType": "HYBLFYE5", "inventoryConfig": {"slotUsed": 28}, "itemId": "qyR7yhNU", "itemType": "YAZZMJK2", "sku": "0Gqtti11", "stackable": false, "useCount": 51}, {"bundledQty": 17, "entitlementType": "zb9fl2ou", "inventoryConfig": {"slotUsed": 58}, "itemId": "fWymt0XM", "itemType": "b7Ul7urH", "sku": "GqZ0NCft", "stackable": true, "useCount": 38}], "quantity": 38, "sku": "e9LKM6Tl", "stackable": false, "useCount": 87}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminPurchasable \
    --namespace $AB_NAMESPACE \
    --userId 'OPeiHIH7' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 34 'AdminPurchasable' test.out

#- 35 PublicListInventoryConfigurations
$CLI_EXE \
    --sn inventory \
    --op PublicListInventoryConfigurations \
    --namespace $AB_NAMESPACE \
    --code 'ddh63STi' \
    --limit '85' \
    --offset '88' \
    --sortBy 'createdAt' \
    > test.out 2>&1
eval_tap $? 35 'PublicListInventoryConfigurations' test.out

#- 36 PublicListItemTypes
$CLI_EXE \
    --sn inventory \
    --op PublicListItemTypes \
    --namespace $AB_NAMESPACE \
    --limit '4' \
    --offset '39' \
    --sortBy 'name:desc' \
    > test.out 2>&1
eval_tap $? 36 'PublicListItemTypes' test.out

#- 37 PublicListTags
$CLI_EXE \
    --sn inventory \
    --op PublicListTags \
    --namespace $AB_NAMESPACE \
    --limit '67' \
    --offset '84' \
    --sortBy 'createdAt' \
    > test.out 2>&1
eval_tap $? 37 'PublicListTags' test.out

#- 38 PublicListInventories
$CLI_EXE \
    --sn inventory \
    --op PublicListInventories \
    --namespace $AB_NAMESPACE \
    --inventoryConfigurationCode 'vKhie0YM' \
    --limit '27' \
    --offset '75' \
    --sortBy 'createdAt:asc' \
    > test.out 2>&1
eval_tap $? 38 'PublicListInventories' test.out

#- 39 PublicConsumeMyItem
# body param: body
echo '{"options": ["ynwmOTYd", "2MvnDzG0", "jMzCJ87d"], "qty": 42, "slotId": "Mv71wHFQ", "sourceItemId": "Gt4EI66k"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op PublicConsumeMyItem \
    --inventoryId 'WxmoVmKy' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 39 'PublicConsumeMyItem' test.out

#- 40 PublicListItems
$CLI_EXE \
    --sn inventory \
    --op PublicListItems \
    --inventoryId 'EE7Q7u3e' \
    --namespace $AB_NAMESPACE \
    --limit '24' \
    --offset '13' \
    --sortBy 'createdAt' \
    --sourceItemId 'rGrkRX5u' \
    --tags '0NBlfJuO' \
    > test.out 2>&1
eval_tap $? 40 'PublicListItems' test.out

#- 41 PublicBulkUpdateMyItems
# body param: body
echo '[{"customAttributes": {"3lAxErTU": {}, "vkvYH6SJ": {}, "xfRoa56Y": {}}, "slotId": "S3UGCoJi", "sourceItemId": "HewfT5va", "tags": ["7B0Jp2zd", "RbZqQhHv", "XJTFAqAN"]}, {"customAttributes": {"OY5uOrPU": {}, "KDzpXzc3": {}, "mO4mTqji": {}}, "slotId": "LIPy8KEL", "sourceItemId": "jEt9crib", "tags": ["dd78qoOB", "fWvIG95K", "DJebqK0P"]}, {"customAttributes": {"vmMeKgNr": {}, "aq6vqmzz": {}, "J8exKo90": {}}, "slotId": "jH935BAp", "sourceItemId": "QYVIEWHd", "tags": ["hnROPzDq", "rpJj7kbq", "hxvKd8dW"]}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op PublicBulkUpdateMyItems \
    --inventoryId 'K0q5ajAZ' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 41 'PublicBulkUpdateMyItems' test.out

#- 42 PublicBulkRemoveMyItems
# body param: body
echo '[{"slotId": "BGzeckQM", "sourceItemId": "ota20o9h"}, {"slotId": "3CPqgf5g", "sourceItemId": "YERfpqMY"}, {"slotId": "yaxj5WKU", "sourceItemId": "uHFHgrif"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op PublicBulkRemoveMyItems \
    --inventoryId 'Df35L7tf' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 42 'PublicBulkRemoveMyItems' test.out

#- 43 PublicMoveMyItems
# body param: body
echo '{"items": [{"qty": 21, "slotId": "vOrDZtrg", "sourceItemId": "KBsgA0BB"}, {"qty": 19, "slotId": "D8a0VGTC", "sourceItemId": "bFFMMVuv"}, {"qty": 32, "slotId": "h5YNG7S2", "sourceItemId": "GXvEmjgh"}], "srcInventoryId": "D5rIywQC"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op PublicMoveMyItems \
    --inventoryId 'OQrzgkqh' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 43 'PublicMoveMyItems' test.out

#- 44 PublicGetItem
$CLI_EXE \
    --sn inventory \
    --op PublicGetItem \
    --inventoryId 'G0IVLuUP' \
    --namespace $AB_NAMESPACE \
    --slotId 'ghjb0zwq' \
    --sourceItemId 'jENICisY' \
    > test.out 2>&1
eval_tap $? 44 'PublicGetItem' test.out


# remove artifacts
rm -f "$CLI_TOKEN_FILE"
rm -f "$TEMP_JSON_INPUT"
rm -f "$TEMP_FILE_UPLOAD"

exit $EXIT_CODE