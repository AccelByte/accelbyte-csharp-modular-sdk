#!/usr/bin/env bash

# Copyright (c) 2021 AccelByte Inc. All Rights Reserved.
# This is licensed software from AccelByte Inc, for limitations
# and restrictions contact your company contract manager.

# This code is generated by tool. DO NOT EDIT.

# Meta:
# - random seed: 
# - template file: 

# Instructions:
# - Run the Justice SDK Mock Server first before running this script.

export AB_BASE_URL="http://127.0.0.1:8080"
export AB_CLIENT_ID="admin"
export AB_CLIENT_SECRET="admin"
export AB_NAMESPACE="test"
export AB_APP_NAME="UnitTest"

EXIT_CODE=0

eval_tap() {
  if [ $1 -eq 0 ]; then
    echo "ok $2 - $3"
  else
    EXIT_CODE=1
    echo "not ok $2 - $3"
    sed 's/^/# /g' $4
  fi
  rm -f $4
}

CLI_EXE="AccelByte.Sdk.Sample.Cli"
CLI_TOKEN_FILE="$(dirname "$(which $CLI_EXE)")/token.json"
TEMP_JSON_INPUT="input_json.json"
TEMP_FILE_UPLOAD="file_upload.bin"

echo "TAP version 13"
echo "1..44"

#- 1 Login
$CLI_EXE --op login --lt user --user user --pass user > test.out 2>&1
eval_tap $? 1 'Login' test.out

if [ $EXIT_CODE -ne 0 ]; then
  echo "Bail out! Login failed."
  exit $EXIT_CODE
fi

# echo "foo" > "$CLI_TOKEN_FILE"

#- 2 AdminCreateChainingOperations
# body param: body
echo '{"message": "mZoPIsZW", "operations": [{"consumeItems": [{"inventoryId": "4z4Mz4ry", "options": ["Brvfv7ZD", "zzQA8QI9", "oEMjYQV1"], "qty": 40, "slotId": "pKDhde9r", "sourceItemId": "lqDBejNo"}, {"inventoryId": "ej7enAJR", "options": ["VcNCDnjx", "ZKxXvaOr", "KbcAF679"], "qty": 16, "slotId": "fwcVoAHq", "sourceItemId": "WRg0iTgR"}, {"inventoryId": "c7pYpcTq", "options": ["cwxuIakx", "QzIJrbYr", "DKDTxfmw"], "qty": 37, "slotId": "a2SdcFYF", "sourceItemId": "geXw7Gsf"}], "createItems": [{"customAttributes": {"XRbZJJ0W": {}, "NVwxFypo": {}, "IUdBfhfG": {}}, "inventoryConfigurationCode": "oRFro9PP", "inventoryId": "vIAJoQQG", "qty": 33, "serverCustomAttributes": {"KC024LMT": {}, "buqSFME6": {}, "GzTEPHeY": {}}, "slotId": "i7bghJq6", "slotUsed": 51, "source": "ECOMMERCE", "sourceItemId": "SpdD36KP", "tags": ["LtWHklsm", "JK71rQhI", "x8PStaJK"], "toSpecificInventory": true, "type": "Q8Pjjw0c"}, {"customAttributes": {"oTQXKI3w": {}, "P3fuDh3Q": {}, "mxJMuI13": {}}, "inventoryConfigurationCode": "lEloLtBU", "inventoryId": "63u6MnSn", "qty": 72, "serverCustomAttributes": {"zmzm6Oms": {}, "EGCtRWaM": {}, "IzIS7Mpq": {}}, "slotId": "sZkMpST7", "slotUsed": 76, "source": "OTHER", "sourceItemId": "EleKLRSL", "tags": ["v6NstFeW", "b0jqrVHs", "EV6M04mT"], "toSpecificInventory": false, "type": "C4oiF5cL"}, {"customAttributes": {"AoVsicjD": {}, "bLuvcWg9": {}, "RyUKzK0P": {}}, "inventoryConfigurationCode": "wx0QnGuY", "inventoryId": "6pVEq2Z3", "qty": 45, "serverCustomAttributes": {"6GssbP1Q": {}, "gltx5lGi": {}, "tOeFYUWl": {}}, "slotId": "GVGEnJtN", "slotUsed": 53, "source": "OTHER", "sourceItemId": "tVS4UQbJ", "tags": ["4ZRmH0ef", "zVoN70lW", "WxOKpdkJ"], "toSpecificInventory": false, "type": "y2NvNbFU"}], "removeItems": [{"inventoryId": "g3GR8AYq", "slotId": "wN2BRXlo", "sourceItemId": "PoNeGiJm"}, {"inventoryId": "sEF0FKTL", "slotId": "vYU8aH30", "sourceItemId": "tMWoJM63"}, {"inventoryId": "flLG8wZG", "slotId": "5nIh59mc", "sourceItemId": "2LzIMBWY"}], "targetUserId": "JsLqXhyC", "updateItems": [{"customAttributes": {"LXHjjxGJ": {}, "IMYxN7YD": {}, "CSMwH7C4": {}}, "inventoryId": "CZas0Kgm", "serverCustomAttributes": {"QZt6Bdnd": {}, "Allh4UFn": {}, "xq92GOlp": {}}, "slotId": "PL3QBSwA", "sourceItemId": "cYkvQ30K", "tags": ["5jToKaCG", "gi74fG23", "O9GnLxHx"], "type": "HLF8LBYg"}, {"customAttributes": {"TPL3DYnp": {}, "p3zFwG3y": {}, "mNO4T9lz": {}}, "inventoryId": "d8VHqs63", "serverCustomAttributes": {"Qy0wqEi6": {}, "KFpNy9ut": {}, "jlXjt0ia": {}}, "slotId": "k10z781f", "sourceItemId": "C6gL1MQU", "tags": ["iBdf4y64", "8v2aiqni", "LemhOXoD"], "type": "XSf8snSd"}, {"customAttributes": {"Bof34iV5": {}, "VrY3Ro0w": {}, "zeU3OOd0": {}}, "inventoryId": "sKUEobtM", "serverCustomAttributes": {"Kbx60DVU": {}, "dKUESbAz": {}, "MdaV8iYa": {}}, "slotId": "gofDMZgY", "sourceItemId": "SiY8OTwr", "tags": ["xRd4UjhC", "GyDnUbRW", "Ho6vdOtt"], "type": "5nVucD4a"}]}, {"consumeItems": [{"inventoryId": "rMp1KuKk", "options": ["FNByZSkR", "JpbYZ1LS", "heAONuxm"], "qty": 54, "slotId": "s8n0qsXH", "sourceItemId": "UxZzQLfI"}, {"inventoryId": "99TtxMir", "options": ["57s58XTU", "GHyU25GF", "Bt87pIPc"], "qty": 41, "slotId": "FTB43eWQ", "sourceItemId": "TGY1qOWT"}, {"inventoryId": "4yQQ1Gf4", "options": ["kgWj3I47", "9bFC4Nxf", "roOa2hfc"], "qty": 55, "slotId": "tH0TCNSY", "sourceItemId": "JWILLaWL"}], "createItems": [{"customAttributes": {"PAZ23rWZ": {}, "eMNu5zVA": {}, "o5MTISUw": {}}, "inventoryConfigurationCode": "uALcX9Jd", "inventoryId": "bNWNpyov", "qty": 27, "serverCustomAttributes": {"J9Gn3CDC": {}, "cnIT6oef": {}, "OqUSJCz0": {}}, "slotId": "EKfxTD0g", "slotUsed": 74, "source": "ECOMMERCE", "sourceItemId": "YFbDGMjZ", "tags": ["BqRlI0BK", "komV6KYo", "vkKlOFMG"], "toSpecificInventory": true, "type": "esjKAzYT"}, {"customAttributes": {"YllFKnwQ": {}, "hRyR5YYK": {}, "Y9i57Pb3": {}}, "inventoryConfigurationCode": "37uAzl8S", "inventoryId": "YfVfAasr", "qty": 98, "serverCustomAttributes": {"zRoIGYJm": {}, "RCK5XBxt": {}, "uY4OltyP": {}}, "slotId": "5j0FZklU", "slotUsed": 17, "source": "OTHER", "sourceItemId": "unk6cQlx", "tags": ["YhOjobar", "Z6dXoiXM", "sjGPtXvC"], "toSpecificInventory": true, "type": "dZ3NJlU8"}, {"customAttributes": {"HyGXMKVG": {}, "gl397V8b": {}, "4AuOs4Ce": {}}, "inventoryConfigurationCode": "vOlYSNA9", "inventoryId": "qp0qFYQj", "qty": 56, "serverCustomAttributes": {"wrgzwhaN": {}, "vUXlnLK3": {}, "zPba5Gis": {}}, "slotId": "KGldxNfg", "slotUsed": 48, "source": "ECOMMERCE", "sourceItemId": "6f86MIku", "tags": ["GrPVQxBb", "zjj49USD", "9Lm9n4YD"], "toSpecificInventory": true, "type": "dTXCjXiy"}], "removeItems": [{"inventoryId": "zcvMKNe7", "slotId": "O0xLoTFv", "sourceItemId": "E7jp2Czr"}, {"inventoryId": "7sHB7VaN", "slotId": "ppUIQp71", "sourceItemId": "1xtdkyZd"}, {"inventoryId": "jU2rgyVf", "slotId": "ObU2ZXNg", "sourceItemId": "EepcgID6"}], "targetUserId": "KL09Mk12", "updateItems": [{"customAttributes": {"XHrYaYHv": {}, "fBxri4dL": {}, "MvU7850D": {}}, "inventoryId": "JrROWDk4", "serverCustomAttributes": {"u3JiysOI": {}, "qb3q1Vwf": {}, "EChISuWx": {}}, "slotId": "FC0Tn0pi", "sourceItemId": "qcEs52V8", "tags": ["491tzOfR", "PPSDZvNB", "e1AzQmYD"], "type": "KVlIB95u"}, {"customAttributes": {"zI9NgsLI": {}, "9Qb30TDu": {}, "qkLX87B8": {}}, "inventoryId": "W5X58fFL", "serverCustomAttributes": {"z5MTbjAl": {}, "joO6URjm": {}, "eKwW6iO2": {}}, "slotId": "tnWpYMno", "sourceItemId": "sVXZYkNC", "tags": ["xTWIaHIi", "V4ISohqC", "cbQ5DT1Y"], "type": "XDRwTFXx"}, {"customAttributes": {"4do89Hyk": {}, "49jgwYmc": {}, "2wovRFJj": {}}, "inventoryId": "EqNMKLiO", "serverCustomAttributes": {"gUSX5OBz": {}, "3SA89ISR": {}, "haZeGj6p": {}}, "slotId": "0NZ7jbJp", "sourceItemId": "lkVjO2uj", "tags": ["2aVD3aFN", "f2oF0UMz", "QFM2NNHC"], "type": "xE3zTER6"}]}, {"consumeItems": [{"inventoryId": "fVXjyS1M", "options": ["4FuL4vBf", "gztjM0aU", "txAonply"], "qty": 44, "slotId": "xdR75cXh", "sourceItemId": "3do16NrZ"}, {"inventoryId": "jpUMvVPo", "options": ["7wLPfmab", "hPSUUqD1", "X5EvR50f"], "qty": 15, "slotId": "nUrPW30M", "sourceItemId": "2iJfguJJ"}, {"inventoryId": "oTn8VK6r", "options": ["iJbY9iSN", "QTxzUDmf", "NgcBEz49"], "qty": 27, "slotId": "2jIFYUfJ", "sourceItemId": "WLpaz6Up"}], "createItems": [{"customAttributes": {"PyMKQD05": {}, "2fvC8yCg": {}, "NIK1ixeZ": {}}, "inventoryConfigurationCode": "t5Y2FHrv", "inventoryId": "mJ9hYCd4", "qty": 95, "serverCustomAttributes": {"ysAedwst": {}, "BWNcJHDj": {}, "pxd78QWN": {}}, "slotId": "uEwtmeeg", "slotUsed": 27, "source": "OTHER", "sourceItemId": "qbcVri3D", "tags": ["a2OqSS89", "eHT47Ioe", "chvXvB8R"], "toSpecificInventory": false, "type": "KiM3dv1q"}, {"customAttributes": {"tNhAvzBL": {}, "6QwIugrM": {}, "nK8iuIhk": {}}, "inventoryConfigurationCode": "l2fNIxrA", "inventoryId": "TrQCgraZ", "qty": 91, "serverCustomAttributes": {"AizbniUk": {}, "2UtVwCiZ": {}, "ki4hoI51": {}}, "slotId": "HDlCUFVT", "slotUsed": 45, "source": "ECOMMERCE", "sourceItemId": "MdB4CEhR", "tags": ["D3RpVnov", "RV9EzptW", "JmohBm8V"], "toSpecificInventory": true, "type": "eY6WWb0G"}, {"customAttributes": {"vqhTpPOL": {}, "UrcQoQHG": {}, "4UyYIcgK": {}}, "inventoryConfigurationCode": "HVgt5yd2", "inventoryId": "bMf1kAEj", "qty": 30, "serverCustomAttributes": {"FkjY0kQS": {}, "gzUjaGEv": {}, "O7sBt25o": {}}, "slotId": "utIIByKS", "slotUsed": 30, "source": "ECOMMERCE", "sourceItemId": "q4pfc1jj", "tags": ["SQnJYZen", "pnIhCHsE", "kVCsFisi"], "toSpecificInventory": false, "type": "tFhRjQr5"}], "removeItems": [{"inventoryId": "kVUStTmc", "slotId": "ivc2eugM", "sourceItemId": "BbliyfDH"}, {"inventoryId": "vf0Wlk2y", "slotId": "L5spwv9k", "sourceItemId": "Yucxtzgt"}, {"inventoryId": "q0qroqUi", "slotId": "Tn4BIjqM", "sourceItemId": "VFKHzmKQ"}], "targetUserId": "r7v2QlLx", "updateItems": [{"customAttributes": {"Xnu5NnzJ": {}, "W5PvXPqT": {}, "VrdWv1Hz": {}}, "inventoryId": "PlCBsemw", "serverCustomAttributes": {"uvZqTkn0": {}, "fr91kbhA": {}, "GxorELhH": {}}, "slotId": "IU0wMytH", "sourceItemId": "WBtHUD2f", "tags": ["QUQ6X6UR", "9sX2ArBG", "uKXlOhTQ"], "type": "6WytxgSA"}, {"customAttributes": {"h6joQcZ4": {}, "Pj4veyYg": {}, "h4ZIDhCn": {}}, "inventoryId": "zKHilBox", "serverCustomAttributes": {"Tytfujd3": {}, "qRxdtLAv": {}, "9v06ACVg": {}}, "slotId": "QTljm9hA", "sourceItemId": "cDSLGe7H", "tags": ["aYMF6e53", "wmxaUIdN", "FIZzxuOQ"], "type": "VaYlbpw3"}, {"customAttributes": {"ce64dzXi": {}, "w8uJ4DSv": {}, "mlB2EhUb": {}}, "inventoryId": "Z6e9ZadJ", "serverCustomAttributes": {"MfJHxH36": {}, "DxNqHTYV": {}, "0oV8Njb5": {}}, "slotId": "kPXfQTui", "sourceItemId": "VHLxnJVp", "tags": ["8juEJEwM", "TQSwbdDg", "bJSlSMMt"], "type": "6g2OgLD2"}]}], "requestId": "3FQRei5U"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminCreateChainingOperations \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 2 'AdminCreateChainingOperations' test.out

#- 3 AdminListIntegrationConfigurations
$CLI_EXE \
    --sn inventory \
    --op AdminListIntegrationConfigurations \
    --namespace $AB_NAMESPACE \
    --limit '79' \
    --offset '39' \
    --sortBy 'createdAt' \
    > test.out 2>&1
eval_tap $? 3 'AdminListIntegrationConfigurations' test.out

#- 4 AdminCreateIntegrationConfiguration
# body param: body
echo '{"mapItemType": ["M2HVsnbW", "7MgpJm8g", "7lC8B2nm"], "serviceName": "000RfR79", "targetInventoryCode": "XYezqPIw"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminCreateIntegrationConfiguration \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 4 'AdminCreateIntegrationConfiguration' test.out

#- 5 AdminUpdateIntegrationConfiguration
# body param: body
echo '{"mapItemType": ["SrqOZE68", "ovqeJRAh", "jmOHIdI5"], "serviceName": "E5Rv1YFi", "targetInventoryCode": "Yi5MOnRJ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminUpdateIntegrationConfiguration \
    --integrationConfigurationId 'tO91JIoV' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 5 'AdminUpdateIntegrationConfiguration' test.out

#- 6 AdminUpdateStatusIntegrationConfiguration
# body param: body
echo '{"status": "INIT"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminUpdateStatusIntegrationConfiguration \
    --integrationConfigurationId 'LVoDHH9A' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 6 'AdminUpdateStatusIntegrationConfiguration' test.out

#- 7 AdminListInventories
$CLI_EXE \
    --sn inventory \
    --op AdminListInventories \
    --namespace $AB_NAMESPACE \
    --inventoryConfigurationCode 'Gt20Og5c' \
    --limit '42' \
    --offset '99' \
    --sortBy 'createdAt' \
    --userId 'rev1tqy2' \
    > test.out 2>&1
eval_tap $? 7 'AdminListInventories' test.out

#- 8 AdminCreateInventory
# body param: body
echo '{"inventoryConfigurationCode": "DMCeWYZF", "userId": "j0zdMclU"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminCreateInventory \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 8 'AdminCreateInventory' test.out

#- 9 AdminGetInventory
$CLI_EXE \
    --sn inventory \
    --op AdminGetInventory \
    --inventoryId 'A4vKStwQ' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 9 'AdminGetInventory' test.out

#- 10 AdminUpdateInventory
# body param: body
echo '{"incMaxSlots": 1}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminUpdateInventory \
    --inventoryId 'L4gJrefV' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 10 'AdminUpdateInventory' test.out

#- 11 DeleteInventory
# body param: body
echo '{"message": "Sdv8lZqo"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op DeleteInventory \
    --inventoryId 'eJYnSqzV' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 11 'DeleteInventory' test.out

#- 12 AdminListItems
$CLI_EXE \
    --sn inventory \
    --op AdminListItems \
    --inventoryId 'z33539Y2' \
    --namespace $AB_NAMESPACE \
    --limit '73' \
    --offset '60' \
    --sortBy 'updatedAt:asc' \
    --sourceItemId 'AJmhbeUt' \
    --tags 'Y2yDzFfn' \
    > test.out 2>&1
eval_tap $? 12 'AdminListItems' test.out

#- 13 AdminGetInventoryItem
$CLI_EXE \
    --sn inventory \
    --op AdminGetInventoryItem \
    --inventoryId 'aayk9UIl' \
    --namespace $AB_NAMESPACE \
    --slotId 'fEtQXlGY' \
    --sourceItemId 'KutPpsPa' \
    > test.out 2>&1
eval_tap $? 13 'AdminGetInventoryItem' test.out

#- 14 AdminListInventoryConfigurations
$CLI_EXE \
    --sn inventory \
    --op AdminListInventoryConfigurations \
    --namespace $AB_NAMESPACE \
    --code 'XE84eMfA' \
    --limit '100' \
    --offset '57' \
    --sortBy 'updatedAt' \
    > test.out 2>&1
eval_tap $? 14 'AdminListInventoryConfigurations' test.out

#- 15 AdminCreateInventoryConfiguration
# body param: body
echo '{"code": "xbcq3g5W", "description": "q9N1QxDO", "initialMaxSlots": 88, "maxInstancesPerUser": 34, "maxUpgradeSlots": 49, "name": "zdT9qmjV"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminCreateInventoryConfiguration \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 15 'AdminCreateInventoryConfiguration' test.out

#- 16 AdminGetInventoryConfiguration
$CLI_EXE \
    --sn inventory \
    --op AdminGetInventoryConfiguration \
    --inventoryConfigurationId 'GFnLBY85' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 16 'AdminGetInventoryConfiguration' test.out

#- 17 AdminUpdateInventoryConfiguration
# body param: body
echo '{"code": "XxEIdfC2", "description": "RRElvtEL", "initialMaxSlots": 11, "maxInstancesPerUser": 14, "maxUpgradeSlots": 76, "name": "E0Ntjszq"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminUpdateInventoryConfiguration \
    --inventoryConfigurationId '2n4rPte8' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 17 'AdminUpdateInventoryConfiguration' test.out

#- 18 AdminDeleteInventoryConfiguration
$CLI_EXE \
    --sn inventory \
    --op AdminDeleteInventoryConfiguration \
    --inventoryConfigurationId 'sElXoqlI' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 18 'AdminDeleteInventoryConfiguration' test.out

#- 19 AdminListItemTypes
$CLI_EXE \
    --sn inventory \
    --op AdminListItemTypes \
    --namespace $AB_NAMESPACE \
    --limit '99' \
    --offset '25' \
    --sortBy 'createdAt:asc' \
    > test.out 2>&1
eval_tap $? 19 'AdminListItemTypes' test.out

#- 20 AdminCreateItemType
# body param: body
echo '{"name": "XVuGKkdN"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminCreateItemType \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 20 'AdminCreateItemType' test.out

#- 21 AdminDeleteItemType
$CLI_EXE \
    --sn inventory \
    --op AdminDeleteItemType \
    --itemTypeName 'lpQPJzB1' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 21 'AdminDeleteItemType' test.out

#- 22 AdminListTags
$CLI_EXE \
    --sn inventory \
    --op AdminListTags \
    --namespace $AB_NAMESPACE \
    --limit '30' \
    --offset '34' \
    --owner 'RV3kTjcG' \
    --sortBy 'createdAt:desc' \
    > test.out 2>&1
eval_tap $? 22 'AdminListTags' test.out

#- 23 AdminCreateTag
# body param: body
echo '{"name": "v9nGfwFC", "owner": "CLIENT"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminCreateTag \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 23 'AdminCreateTag' test.out

#- 24 AdminDeleteTag
$CLI_EXE \
    --sn inventory \
    --op AdminDeleteTag \
    --namespace $AB_NAMESPACE \
    --tagName 'z7eM8geW' \
    > test.out 2>&1
eval_tap $? 24 'AdminDeleteTag' test.out

#- 25 AdminConsumeUserItem
# body param: body
echo '{"options": ["xrYyfAOI", "lffNTTlX", "t4UcGq62"], "qty": 15, "slotId": "6Q3p7qLk", "sourceItemId": "Ama23O62"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminConsumeUserItem \
    --inventoryId 'ZJRW9mkd' \
    --namespace $AB_NAMESPACE \
    --userId 'slhypT5S' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 25 'AdminConsumeUserItem' test.out

#- 26 AdminBulkUpdateMyItems
# body param: body
echo '[{"customAttributes": {"Zx2J0v2A": {}, "6M9PLPKK": {}, "CDMHlChR": {}}, "serverCustomAttributes": {"edL9iHbc": {}, "Qij0NuuK": {}, "tWqkm834": {}}, "slotId": "KK6WQDX0", "sourceItemId": "E2bcrphT", "tags": ["pu1GX1WY", "3tcuxusZ", "1k5oh1Fk"], "type": "gJOtVJnb"}, {"customAttributes": {"r1fbbSm4": {}, "T87u99LA": {}, "tuVLS7yX": {}}, "serverCustomAttributes": {"VUoCuuR8": {}, "RKLqZU4x": {}, "byN375gA": {}}, "slotId": "Fwq8ITwt", "sourceItemId": "fIpuLUoc", "tags": ["uWgD1gKl", "pQy3v9OM", "tchuRH66"], "type": "EAAUDfxX"}, {"customAttributes": {"ut9dANXy": {}, "1TbA9kOs": {}, "oIpZyFyQ": {}}, "serverCustomAttributes": {"Q38i6U0D": {}, "h3Zb0aKy": {}, "uuYzvYSR": {}}, "slotId": "yRFLmXpD", "sourceItemId": "d2R4l1VW", "tags": ["SusNoVxb", "tWk5GkKx", "yQnm46Oa"], "type": "8AFSLBeW"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminBulkUpdateMyItems \
    --inventoryId 't7P1hqbN' \
    --namespace $AB_NAMESPACE \
    --userId '4LRL1U6R' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 26 'AdminBulkUpdateMyItems' test.out

#- 27 AdminSaveItemToInventory
# body param: body
echo '{"customAttributes": {"sJoPeJXU": {}, "azyU9MK3": {}, "da8720bn": {}}, "qty": 7, "serverCustomAttributes": {"LdVWwmGA": {}, "p3lGmBB9": {}, "4YX2W5FP": {}}, "slotId": "n7vDX3VC", "slotUsed": 27, "source": "ECOMMERCE", "sourceItemId": "o0IXJ8TP", "tags": ["BU0VKaPk", "KkSR8abN", "gDQOIup7"], "type": "yxALZRhm"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminSaveItemToInventory \
    --inventoryId 'Ro9c2pQq' \
    --namespace $AB_NAMESPACE \
    --userId '1uz0Icv1' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 27 'AdminSaveItemToInventory' test.out

#- 28 AdminBulkRemoveItems
# body param: body
echo '[{"slotId": "naTZ5zQ2", "sourceItemId": "5htH5mkh"}, {"slotId": "I5ZRNzlI", "sourceItemId": "jj5fieIK"}, {"slotId": "4yOV0H4M", "sourceItemId": "HNFSOZiQ"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminBulkRemoveItems \
    --inventoryId 'VyFqIrl3' \
    --namespace $AB_NAMESPACE \
    --userId 'AZhL3cp2' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 28 'AdminBulkRemoveItems' test.out

#- 29 AdminBulkSaveItemToInventory
# body param: body
echo '[{"customAttributes": {"1EpVicjj": {}, "DzthxjS8": {}, "rTBVcA92": {}}, "qty": 27, "serverCustomAttributes": {"RLxmEdVr": {}, "B7Zs5D25": {}, "CgvR8KYO": {}}, "slotId": "XvBUn0qK", "slotUsed": 1, "source": "ECOMMERCE", "sourceItemId": "iZwbsSgB", "tags": ["li38wgdD", "G7RKNHJn", "Lo2MUhwN"], "type": "r5E75z9Y"}, {"customAttributes": {"AKfjxWZX": {}, "AzIzwY9e": {}, "Af2xJKDQ": {}}, "qty": 91, "serverCustomAttributes": {"tQh9yTY0": {}, "MnaTtMrf": {}, "RyrApUBe": {}}, "slotId": "hTt11ErJ", "slotUsed": 29, "source": "OTHER", "sourceItemId": "SenyhfXq", "tags": ["UhOQUipn", "43FWa6hD", "NmQeVAZd"], "type": "axVv0R6Y"}, {"customAttributes": {"YDJ0OqcS": {}, "w4oPCbnh": {}, "tPDhbZOg": {}}, "qty": 52, "serverCustomAttributes": {"rtdHMGh0": {}, "4od5adrn": {}, "V4Oyk5Nd": {}}, "slotId": "BuhFMtoK", "slotUsed": 23, "source": "OTHER", "sourceItemId": "iQ2yj7C9", "tags": ["eenX7r6o", "swGWaWqB", "wIoehtKs"], "type": "2Cky4N27"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminBulkSaveItemToInventory \
    --inventoryId '5S9BUfTH' \
    --namespace $AB_NAMESPACE \
    --userId 'mlHECLrD' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 29 'AdminBulkSaveItemToInventory' test.out

#- 30 AdminUpdateUserInventoriesByInventoryCode
# body param: body
echo '{"incMaxSlots": 62}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminUpdateUserInventoriesByInventoryCode \
    --inventoryConfigurationCode 'jnhErulp' \
    --namespace $AB_NAMESPACE \
    --userId '586ZIsNz' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 30 'AdminUpdateUserInventoriesByInventoryCode' test.out

#- 31 AdminSaveItem
# body param: body
echo '{"customAttributes": {"0ewRGQhY": {}, "dktrdKr6": {}, "AF0QSQq4": {}}, "inventoryConfigurationCode": "YGT3lGvT", "qty": 65, "serverCustomAttributes": {"aUwdAzkv": {}, "pz0nGuYK": {}, "znfgagVa": {}}, "slotId": "TbHBcLvX", "slotUsed": 29, "source": "ECOMMERCE", "sourceItemId": "b70Lmvui", "tags": ["k7As67a4", "SQjRwtFX", "h3VwH4rc"], "type": "STV0OghU"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminSaveItem \
    --namespace $AB_NAMESPACE \
    --userId 'PX6B9zpM' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 31 'AdminSaveItem' test.out

#- 32 AdminBulkSaveItem
# body param: body
echo '[{"customAttributes": {"DJJNQcYH": {}, "e7W0nZmJ": {}, "gEtZXzP1": {}}, "inventoryConfigurationCode": "76YhPA27", "qty": 67, "serverCustomAttributes": {"l6bMEqvJ": {}, "CJH0WHlF": {}, "jhqN0RJ1": {}}, "slotId": "4N8vjbpb", "slotUsed": 77, "source": "ECOMMERCE", "sourceItemId": "a3OuNWhN", "tags": ["6kgpT2P1", "aXHkdfDH", "yfuzYK6S"], "type": "PfkzbgqW"}, {"customAttributes": {"8N1LIFGF": {}, "nv4djhb6": {}, "eZe0VgKv": {}}, "inventoryConfigurationCode": "N23JKvYQ", "qty": 40, "serverCustomAttributes": {"2lM2bSkc": {}, "UsGpMXl6": {}, "UGMmBQUb": {}}, "slotId": "x8AeGxfG", "slotUsed": 81, "source": "OTHER", "sourceItemId": "H82z6EVp", "tags": ["m3KK0I9d", "n3gdl4vo", "kFo0BtFj"], "type": "zGu8HKsF"}, {"customAttributes": {"Sou9mhTq": {}, "qPJQpXy4": {}, "ulOfwnU2": {}}, "inventoryConfigurationCode": "6l1A4zw5", "qty": 21, "serverCustomAttributes": {"WSKMmcTK": {}, "taNeQYW1": {}, "vwjtuK52": {}}, "slotId": "kkbZfGFx", "slotUsed": 44, "source": "ECOMMERCE", "sourceItemId": "QB6wt5eX", "tags": ["NRNalDvv", "uiRWjDcC", "gH9uQqyD"], "type": "GXS6qwME"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminBulkSaveItem \
    --namespace $AB_NAMESPACE \
    --userId 'L0ZvjUDp' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 32 'AdminBulkSaveItem' test.out

#- 33 AdminSyncUserEntitlements
$CLI_EXE \
    --sn inventory \
    --op AdminSyncUserEntitlements \
    --namespace $AB_NAMESPACE \
    --userId 'b1osY3vy' \
    > test.out 2>&1
eval_tap $? 33 'AdminSyncUserEntitlements' test.out

#- 34 AdminPurchasable
# body param: body
echo '{"entitlementType": "49oF4mQk", "inventoryConfig": {"slotUsed": 49}, "itemId": "7qKYkd7V", "itemType": "kCh1ZQbq", "items": [{"bundledQty": 99, "entitlementType": "5ecmFZ3t", "inventoryConfig": {"slotUsed": 43}, "itemId": "4yTSPxcm", "itemType": "VLkN1av8", "sku": "dHtxkPsN", "stackable": false, "useCount": 94}, {"bundledQty": 60, "entitlementType": "t2uz3l1D", "inventoryConfig": {"slotUsed": 24}, "itemId": "T9ku4dip", "itemType": "LoCX2LNM", "sku": "tx1P0wwx", "stackable": true, "useCount": 46}, {"bundledQty": 95, "entitlementType": "4S4wUbha", "inventoryConfig": {"slotUsed": 40}, "itemId": "ReRcvTx6", "itemType": "cncNVATr", "sku": "8Eu4udYP", "stackable": false, "useCount": 32}], "quantity": 5, "sku": "0ZIdOmU0", "stackable": true, "useCount": 5}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminPurchasable \
    --namespace $AB_NAMESPACE \
    --userId 'V37qZdY4' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 34 'AdminPurchasable' test.out

#- 35 PublicListInventoryConfigurations
$CLI_EXE \
    --sn inventory \
    --op PublicListInventoryConfigurations \
    --namespace $AB_NAMESPACE \
    --code 'xfGN9qYv' \
    --limit '10' \
    --offset '46' \
    --sortBy 'code' \
    > test.out 2>&1
eval_tap $? 35 'PublicListInventoryConfigurations' test.out

#- 36 PublicListItemTypes
$CLI_EXE \
    --sn inventory \
    --op PublicListItemTypes \
    --namespace $AB_NAMESPACE \
    --limit '83' \
    --offset '3' \
    --sortBy 'createdAt:desc' \
    > test.out 2>&1
eval_tap $? 36 'PublicListItemTypes' test.out

#- 37 PublicListTags
$CLI_EXE \
    --sn inventory \
    --op PublicListTags \
    --namespace $AB_NAMESPACE \
    --limit '5' \
    --offset '26' \
    --sortBy 'name' \
    > test.out 2>&1
eval_tap $? 37 'PublicListTags' test.out

#- 38 PublicListInventories
$CLI_EXE \
    --sn inventory \
    --op PublicListInventories \
    --namespace $AB_NAMESPACE \
    --inventoryConfigurationCode 'qcYLea3M' \
    --limit '49' \
    --offset '34' \
    --sortBy 'updatedAt:desc' \
    > test.out 2>&1
eval_tap $? 38 'PublicListInventories' test.out

#- 39 PublicConsumeMyItem
# body param: body
echo '{"options": ["TUZiQsse", "OXKXWKXq", "yLSh3gyV"], "qty": 14, "slotId": "kZZJiY1p", "sourceItemId": "RCAk5iQT"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op PublicConsumeMyItem \
    --inventoryId 'dRUkVcI0' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 39 'PublicConsumeMyItem' test.out

#- 40 PublicListItems
$CLI_EXE \
    --sn inventory \
    --op PublicListItems \
    --inventoryId 's679sfEa' \
    --namespace $AB_NAMESPACE \
    --limit '5' \
    --offset '87' \
    --sortBy 'createdAt' \
    --sourceItemId 'e7ccNsym' \
    --tags 'U2ntG9AB' \
    > test.out 2>&1
eval_tap $? 40 'PublicListItems' test.out

#- 41 PublicBulkUpdateMyItems
# body param: body
echo '[{"customAttributes": {"exF7jROd": {}, "wivKuoFn": {}, "ypKQeYfn": {}}, "slotId": "1N0L2RVU", "sourceItemId": "sv3VWUsS", "tags": ["32OuB2ON", "1MRen3i4", "9xE6lzYL"]}, {"customAttributes": {"hCIuxNDb": {}, "MHgksfcq": {}, "m0rhM9zX": {}}, "slotId": "tUGfT4JI", "sourceItemId": "sjDshT2k", "tags": ["LhBr9gl5", "3rBGv8Gd", "UKKRCSye"]}, {"customAttributes": {"PbKcKxzs": {}, "vWoLyIYm": {}, "zLrAlx0d": {}}, "slotId": "BV2brvsy", "sourceItemId": "jE2Iua7K", "tags": ["XWnZgPdG", "WZJoZBik", "dXiGuUl2"]}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op PublicBulkUpdateMyItems \
    --inventoryId 'bpZWqaEc' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 41 'PublicBulkUpdateMyItems' test.out

#- 42 PublicBulkRemoveMyItems
# body param: body
echo '[{"slotId": "fxfXQuBM", "sourceItemId": "XVdewwij"}, {"slotId": "o2M7xcSz", "sourceItemId": "1W9naF4T"}, {"slotId": "6XO3eXgW", "sourceItemId": "bgNlMdkw"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op PublicBulkRemoveMyItems \
    --inventoryId 'HJWgg1Us' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 42 'PublicBulkRemoveMyItems' test.out

#- 43 PublicMoveMyItems
# body param: body
echo '{"items": [{"qty": 3, "slotId": "K4dWVRZO", "sourceItemId": "PBRyUAcg"}, {"qty": 16, "slotId": "zuLwWVXg", "sourceItemId": "zpeey6Cf"}, {"qty": 49, "slotId": "MQpdagy4", "sourceItemId": "vHDKhn3s"}], "srcInventoryId": "pHeyuMR3"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op PublicMoveMyItems \
    --inventoryId 'M0yhTH2K' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 43 'PublicMoveMyItems' test.out

#- 44 PublicGetItem
$CLI_EXE \
    --sn inventory \
    --op PublicGetItem \
    --inventoryId 'NYqjZkk4' \
    --namespace $AB_NAMESPACE \
    --slotId 'NY51WbBy' \
    --sourceItemId 'ndYYXZp8' \
    > test.out 2>&1
eval_tap $? 44 'PublicGetItem' test.out


# remove artifacts
rm -f "$CLI_TOKEN_FILE"
rm -f "$TEMP_JSON_INPUT"
rm -f "$TEMP_FILE_UPLOAD"

exit $EXIT_CODE