#!/usr/bin/env bash

# Copyright (c) 2021 AccelByte Inc. All Rights Reserved.
# This is licensed software from AccelByte Inc, for limitations
# and restrictions contact your company contract manager.

# This code is generated by tool. DO NOT EDIT.

# Meta:
# - random seed: 
# - template file: 

# Instructions:
# - Run the Justice SDK Mock Server first before running this script.

export AB_BASE_URL="http://127.0.0.1:8080"
export AB_CLIENT_ID="admin"
export AB_CLIENT_SECRET="admin"
export AB_NAMESPACE="test"
export AB_APP_NAME="UnitTest"

EXIT_CODE=0

eval_tap() {
  if [ $1 -eq 0 ]; then
    echo "ok $2 - $3"
  else
    EXIT_CODE=1
    echo "not ok $2 - $3"
    sed 's/^/# /g' $4
  fi
  rm -f $4
}

CLI_EXE="AccelByte.Sdk.Sample.Cli"
CLI_TOKEN_FILE="$(dirname "$(which $CLI_EXE)")/token.json"
TEMP_JSON_INPUT="input_json.json"
TEMP_FILE_UPLOAD="file_upload.bin"

echo "TAP version 13"
echo "1..35"

#- 1 Login
$CLI_EXE --op login --lt user --user user --pass user > test.out 2>&1
eval_tap $? 1 'Login' test.out

if [ $EXIT_CODE -ne 0 ]; then
  echo "Bail out! Login failed."
  exit $EXIT_CODE
fi

# echo "foo" > "$CLI_TOKEN_FILE"

#- 2 AdminCreateChainingOperations
# body param: body
echo '{"message": "WHjpf1fz", "operations": [{"consumeItems": [{"inventoryId": "cLLKRgAF", "qty": 2, "slotId": "ufbkmvhV", "sourceItemId": "dXUeAIKi"}, {"inventoryId": "d5pb73Br", "qty": 78, "slotId": "L6SPEcmB", "sourceItemId": "3cfpKdoA"}, {"inventoryId": "M7CshCoq", "qty": 53, "slotId": "CBHdIYOP", "sourceItemId": "ANGRtahC"}], "createItems": [{"customAttributes": {"KX8G0ie0": {}, "A9qRgGTm": {}, "6bYFzDsO": {}}, "inventoryConfigurationCode": "zKi7rZQm", "inventoryId": "sWOfmaHk", "qty": 45, "serverCustomAttributes": {"PkcyFT80": {}, "nsPx2KJJ": {}, "3AvPzltV": {}}, "slotId": "vMem3gKg", "slotUsed": 100, "sourceItemId": "qj5bwy0H", "tags": ["MRp6NmSh", "ET6UX7lD", "jp8Uiq5S"], "toSpecificInventory": true, "type": "NxjorpdN"}, {"customAttributes": {"g3QamxiB": {}, "bVAMxnf8": {}, "p12e4yny": {}}, "inventoryConfigurationCode": "O2HL7tma", "inventoryId": "AIB8ZcAG", "qty": 26, "serverCustomAttributes": {"3zHBkP2Y": {}, "pKuVap6E": {}, "YPllWZiC": {}}, "slotId": "LylLslve", "slotUsed": 40, "sourceItemId": "LDaM1kAq", "tags": ["PvTsrPcP", "BdnB853z", "ENevmC7i"], "toSpecificInventory": true, "type": "96VFMKki"}, {"customAttributes": {"dEkyfSMs": {}, "EEx2CWG7": {}, "kiJ1Seez": {}}, "inventoryConfigurationCode": "mGCvfDoa", "inventoryId": "UbIngt7r", "qty": 73, "serverCustomAttributes": {"C7xa5z1n": {}, "BpSAAlCO": {}, "W0jpMLJM": {}}, "slotId": "fEkVHDWC", "slotUsed": 53, "sourceItemId": "dlDTLFKA", "tags": ["XC00RRo3", "DNiqOfB1", "PnIBj5ok"], "toSpecificInventory": false, "type": "JSAPF8at"}], "removeItems": [{"inventoryId": "4DqBmKKe", "slotId": "wYal0ii1", "sourceItemId": "vkMvZrin"}, {"inventoryId": "YPgpVc4n", "slotId": "9YWfTa6Y", "sourceItemId": "flzWxSQg"}, {"inventoryId": "m2J8q11L", "slotId": "hajKxbCi", "sourceItemId": "odUMIGpX"}], "targetUserId": "ORk1l7Hd", "updateItems": [{"customAttributes": {"DYjUxIHA": {}, "KKSEZ0H3": {}, "Oylk0aTR": {}}, "inventoryId": "JUxzT6UD", "serverCustomAttributes": {"ASv3TMYB": {}, "KUcKCM0t": {}, "06lfExRv": {}}, "slotId": "QMHYFtGX", "sourceItemId": "xYOb8QPK", "tags": ["w52RSLxF", "XihgNcdw", "B4s4ZYdH"], "type": "lwhSUSlh"}, {"customAttributes": {"XsRQfOOg": {}, "LkkLH0Bg": {}, "g4EP2Hr4": {}}, "inventoryId": "Omu3Tt3F", "serverCustomAttributes": {"eF3mexHj": {}, "oG7e60VT": {}, "hYW7otf7": {}}, "slotId": "yLizhQ2a", "sourceItemId": "uNoOdGxj", "tags": ["V2scgRla", "BoclgPsX", "nXjBAi3J"], "type": "aUAWtm47"}, {"customAttributes": {"MyivBp32": {}, "ZAsiUGvX": {}, "53uM12IJ": {}}, "inventoryId": "halDOLOn", "serverCustomAttributes": {"OfOfaFC6": {}, "fUKzGucW": {}, "fH5xCmHo": {}}, "slotId": "HVjy1Wnk", "sourceItemId": "XGf5cCLZ", "tags": ["LfiGLkfT", "5pThvy4g", "hdHfRKj9"], "type": "ieSzYNts"}]}, {"consumeItems": [{"inventoryId": "hb43oQf7", "qty": 29, "slotId": "usR0DiTK", "sourceItemId": "qmY1oQKZ"}, {"inventoryId": "RpP5XAQO", "qty": 61, "slotId": "dkLQAPqJ", "sourceItemId": "pWBOd1kE"}, {"inventoryId": "Juu7JE8E", "qty": 84, "slotId": "KfE5qnv6", "sourceItemId": "r0nfSlNX"}], "createItems": [{"customAttributes": {"COazq9fj": {}, "JWRWTN7h": {}, "aTe5IRzm": {}}, "inventoryConfigurationCode": "yOWpjKQ2", "inventoryId": "DfdkVnXh", "qty": 54, "serverCustomAttributes": {"4k4fiVIk": {}, "dVPcyIk0": {}, "QbR60l75": {}}, "slotId": "t5AHhmFI", "slotUsed": 51, "sourceItemId": "gUkp88I2", "tags": ["NtnPmDCG", "ivF80ZFK", "CjLK9HUS"], "toSpecificInventory": true, "type": "5hWjwprD"}, {"customAttributes": {"9iL4uQUq": {}, "LuFAM2GH": {}, "KtsUxexT": {}}, "inventoryConfigurationCode": "meA5HprM", "inventoryId": "rbvOhDk9", "qty": 17, "serverCustomAttributes": {"2AWw4M9W": {}, "IExFXMi5": {}, "X4mqQU84": {}}, "slotId": "0JHazvAA", "slotUsed": 91, "sourceItemId": "D1njFDRX", "tags": ["flVMnCwS", "rADklbtH", "0lVLnT5i"], "toSpecificInventory": false, "type": "lpLseWuR"}, {"customAttributes": {"sHcONr1d": {}, "gtBn1i5p": {}, "rTMJEQ09": {}}, "inventoryConfigurationCode": "T0UQptIL", "inventoryId": "1JEu8RZd", "qty": 43, "serverCustomAttributes": {"fV0v9J59": {}, "jnjxVB5h": {}, "F0hOojZP": {}}, "slotId": "FeS8qinV", "slotUsed": 64, "sourceItemId": "nYNpgdOd", "tags": ["Agxsru54", "LigYPa5E", "j7TTZf3x"], "toSpecificInventory": false, "type": "0jZ0JAhN"}], "removeItems": [{"inventoryId": "gkzWLnxN", "slotId": "LDlKNPnZ", "sourceItemId": "8610NYsK"}, {"inventoryId": "vP9dnwQY", "slotId": "TTpW17Yl", "sourceItemId": "JCUuCsoC"}, {"inventoryId": "ouNR63Zo", "slotId": "4p6l4MhL", "sourceItemId": "owJncjHg"}], "targetUserId": "KAIZjp9g", "updateItems": [{"customAttributes": {"EwWK2Y9L": {}, "aegEGRO3": {}, "SBU3S32l": {}}, "inventoryId": "xVZRddEt", "serverCustomAttributes": {"xxgOr6MA": {}, "UvgUDtb5": {}, "u7dTZkn1": {}}, "slotId": "e4JHrF6o", "sourceItemId": "mtt3TQ1A", "tags": ["KjjvucWJ", "NeGgy1Qa", "ZolYIy6S"], "type": "rGc3b924"}, {"customAttributes": {"XBT1CqQP": {}, "4zaf4gnX": {}, "s2l7OvHR": {}}, "inventoryId": "F746SRQr", "serverCustomAttributes": {"RE6F9yfI": {}, "et9jmgcr": {}, "qEYFh1iH": {}}, "slotId": "4VWSoqbW", "sourceItemId": "ffIMWtF7", "tags": ["RFKsd8J9", "8jn2kvb1", "cujhYczo"], "type": "MVfXyyX6"}, {"customAttributes": {"1bXQFHEq": {}, "6oOVTRCX": {}, "RF1kBNoC": {}}, "inventoryId": "YA86Mk8U", "serverCustomAttributes": {"C3bNQmXc": {}, "UXyhKIaQ": {}, "Z8ddco6Z": {}}, "slotId": "Ch8agJMn", "sourceItemId": "EVA43sQ2", "tags": ["67henWLK", "CFHogLNn", "Mmuurc2T"], "type": "HQXn72FZ"}]}, {"consumeItems": [{"inventoryId": "gu8OdxoT", "qty": 25, "slotId": "iaX7nFdP", "sourceItemId": "rsjMSppl"}, {"inventoryId": "7DayU8rJ", "qty": 60, "slotId": "FHtkfVkG", "sourceItemId": "j97GNjeE"}, {"inventoryId": "cCLjGR7e", "qty": 4, "slotId": "00u5Zjpf", "sourceItemId": "Y5LAwij8"}], "createItems": [{"customAttributes": {"na0DFCEb": {}, "WKMtm5Lr": {}, "pa6pLw5d": {}}, "inventoryConfigurationCode": "gr89WrR3", "inventoryId": "1ReR3zWb", "qty": 71, "serverCustomAttributes": {"AUFoQaIJ": {}, "QUyv52Ed": {}, "f0RjJpLY": {}}, "slotId": "0fsknPqz", "slotUsed": 93, "sourceItemId": "fNURHP2j", "tags": ["fgdOPKRd", "GX9Ffr0Y", "5kA5j0Ht"], "toSpecificInventory": false, "type": "jHCclnJi"}, {"customAttributes": {"cZWu5baM": {}, "Aek1TmhU": {}, "zkyqj2Jt": {}}, "inventoryConfigurationCode": "Sax08ooH", "inventoryId": "Kj3WJ9wR", "qty": 33, "serverCustomAttributes": {"56kw98bX": {}, "UjnqcF51": {}, "q4k31oQP": {}}, "slotId": "sAQuMecU", "slotUsed": 13, "sourceItemId": "HLxY46zH", "tags": ["684zOcHr", "UrXTO08f", "rtKVOAUB"], "toSpecificInventory": true, "type": "sC9ek4RH"}, {"customAttributes": {"r03HXxYj": {}, "At7CGmcW": {}, "oFj5LDsu": {}}, "inventoryConfigurationCode": "ptcn0pyy", "inventoryId": "ei4DlxJz", "qty": 41, "serverCustomAttributes": {"olXkXeVM": {}, "NZAq9YBz": {}, "wYMuRK30": {}}, "slotId": "V92WYLYX", "slotUsed": 94, "sourceItemId": "HJpdqgEc", "tags": ["ycrGJ1cv", "agrjzrqK", "fc45JsJz"], "toSpecificInventory": true, "type": "BechyLrn"}], "removeItems": [{"inventoryId": "oYtngieR", "slotId": "QRPuLSLu", "sourceItemId": "DH7nFpHE"}, {"inventoryId": "49QO256Y", "slotId": "PfVPIMvz", "sourceItemId": "zbaYJFM5"}, {"inventoryId": "1KTpPghX", "slotId": "ax6P6YXA", "sourceItemId": "02Ca5dT7"}], "targetUserId": "zogVEOyt", "updateItems": [{"customAttributes": {"R8WmomCs": {}, "s9gQ8dZx": {}, "MfxN9Lq8": {}}, "inventoryId": "BHM26TJY", "serverCustomAttributes": {"3TApgpUh": {}, "CAg0s7Qp": {}, "d2iOd5fI": {}}, "slotId": "GJMsy26V", "sourceItemId": "nTCCy14z", "tags": ["C1aLLgW1", "13Exyg1i", "RnJZWf2o"], "type": "S6XtZKdm"}, {"customAttributes": {"nZj5BWta": {}, "vM7pP7pW": {}, "hWPxAX8E": {}}, "inventoryId": "AHQKlv4F", "serverCustomAttributes": {"LOSsRmea": {}, "waGokAff": {}, "eG3GzCrV": {}}, "slotId": "hDhJygqO", "sourceItemId": "xoNIEbbU", "tags": ["ySVswX7H", "Ykvhw8UK", "LC9UyzKB"], "type": "Muw9hKi4"}, {"customAttributes": {"Zgu91URq": {}, "bXddTnUh": {}, "H5coQFK3": {}}, "inventoryId": "MORG2MTh", "serverCustomAttributes": {"YeY8N1fq": {}, "Ev3Fm3Zq": {}, "L6AdiXlG": {}}, "slotId": "g9IXNK4t", "sourceItemId": "TIYdNI9C", "tags": ["RH5M6AGt", "uEgmQwE8", "qddKIndy"], "type": "SMtjr4LK"}]}], "requestId": "2Dc4Dcc2"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminCreateChainingOperations \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 2 'AdminCreateChainingOperations' test.out

#- 3 AdminListInventories
$CLI_EXE \
    --sn inventory \
    --op AdminListInventories \
    --namespace $AB_NAMESPACE \
    --inventoryConfigurationCode 'BdVSe2pT' \
    --limit '95' \
    --offset '16' \
    --sortBy 'inventoryConfigurationCode:desc' \
    --userId 'Nlpc2Nbd' \
    > test.out 2>&1
eval_tap $? 3 'AdminListInventories' test.out

#- 4 AdminCreateInventory
# body param: body
echo '{"inventoryConfigurationCode": "fnM7u9H8", "userId": "4AbY4Qb3"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminCreateInventory \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 4 'AdminCreateInventory' test.out

#- 5 AdminGetInventory
$CLI_EXE \
    --sn inventory \
    --op AdminGetInventory \
    --inventoryId 'OARwaazY' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 5 'AdminGetInventory' test.out

#- 6 AdminUpdateInventory
# body param: body
echo '{"incMaxSlots": 68}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminUpdateInventory \
    --inventoryId 'fUOzMNNd' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 6 'AdminUpdateInventory' test.out

#- 7 DeleteInventory
# body param: body
echo '{"message": "mztfkN8N"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op DeleteInventory \
    --inventoryId 'tgLyKJuQ' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 7 'DeleteInventory' test.out

#- 8 AdminListItems
$CLI_EXE \
    --sn inventory \
    --op AdminListItems \
    --inventoryId 'fnOhcZmr' \
    --namespace $AB_NAMESPACE \
    --limit '2' \
    --offset '30' \
    --qtyGte '7' \
    --sortBy 'updatedAt:asc' \
    --sourceItemId 'W7l7n8uD' \
    --tags 'GQbHnM3o' \
    > test.out 2>&1
eval_tap $? 8 'AdminListItems' test.out

#- 9 AdminGetInventoryItem
$CLI_EXE \
    --sn inventory \
    --op AdminGetInventoryItem \
    --inventoryId 'epUI7Y6T' \
    --namespace $AB_NAMESPACE \
    --slotId 'NyU3FPhe' \
    --sourceItemId 'WW3ahqQd' \
    > test.out 2>&1
eval_tap $? 9 'AdminGetInventoryItem' test.out

#- 10 AdminListInventoryConfigurations
$CLI_EXE \
    --sn inventory \
    --op AdminListInventoryConfigurations \
    --namespace $AB_NAMESPACE \
    --code '60dN8cM4' \
    --limit '87' \
    --offset '38' \
    --sortBy 'code:asc' \
    > test.out 2>&1
eval_tap $? 10 'AdminListInventoryConfigurations' test.out

#- 11 AdminCreateInventoryConfiguration
# body param: body
echo '{"code": "ZBoFgKXj", "description": "klGxjHTx", "initialMaxSlots": 93, "maxInstancesPerUser": 15, "maxUpgradeSlots": 46, "name": "5aA6puti"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminCreateInventoryConfiguration \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 11 'AdminCreateInventoryConfiguration' test.out

#- 12 AdminGetInventoryConfiguration
$CLI_EXE \
    --sn inventory \
    --op AdminGetInventoryConfiguration \
    --inventoryConfigurationId 'CoGs4Oe1' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 12 'AdminGetInventoryConfiguration' test.out

#- 13 AdminUpdateInventoryConfiguration
# body param: body
echo '{"code": "hIhV6UmR", "description": "LDaqcswd", "initialMaxSlots": 27, "maxInstancesPerUser": 77, "maxUpgradeSlots": 56, "name": "nmRz0GV1"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminUpdateInventoryConfiguration \
    --inventoryConfigurationId 'ONjVR12C' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 13 'AdminUpdateInventoryConfiguration' test.out

#- 14 AdminDeleteInventoryConfiguration
$CLI_EXE \
    --sn inventory \
    --op AdminDeleteInventoryConfiguration \
    --inventoryConfigurationId 'QvEWboss' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 14 'AdminDeleteInventoryConfiguration' test.out

#- 15 AdminListItemTypes
$CLI_EXE \
    --sn inventory \
    --op AdminListItemTypes \
    --namespace $AB_NAMESPACE \
    --limit '32' \
    --offset '15' \
    --sortBy 'name' \
    > test.out 2>&1
eval_tap $? 15 'AdminListItemTypes' test.out

#- 16 AdminCreateItemType
# body param: body
echo '{"name": "x67Js4a4"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminCreateItemType \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 16 'AdminCreateItemType' test.out

#- 17 AdminDeleteItemType
$CLI_EXE \
    --sn inventory \
    --op AdminDeleteItemType \
    --itemTypeName 'qe2LxHqf' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 17 'AdminDeleteItemType' test.out

#- 18 AdminListTags
$CLI_EXE \
    --sn inventory \
    --op AdminListTags \
    --namespace $AB_NAMESPACE \
    --limit '25' \
    --offset '62' \
    --owner 'OP7om5LX' \
    --sortBy 'name:desc' \
    > test.out 2>&1
eval_tap $? 18 'AdminListTags' test.out

#- 19 AdminCreateTag
# body param: body
echo '{"name": "odYqAo84", "owner": "CLIENT"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminCreateTag \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 19 'AdminCreateTag' test.out

#- 20 AdminDeleteTag
$CLI_EXE \
    --sn inventory \
    --op AdminDeleteTag \
    --namespace $AB_NAMESPACE \
    --tagName '1OqzHBzJ' \
    > test.out 2>&1
eval_tap $? 20 'AdminDeleteTag' test.out

#- 21 AdminConsumeUserItem
# body param: body
echo '{"qty": 59, "slotId": "OxeuJkq6", "sourceItemId": "LCXp0B12"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminConsumeUserItem \
    --inventoryId 'PNgJUNzR' \
    --namespace $AB_NAMESPACE \
    --userId '7gsa8BpS' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 21 'AdminConsumeUserItem' test.out

#- 22 AdminBulkUpdateMyItems
# body param: body
echo '[{"customAttributes": {"G9k9TfjJ": {}, "IVqLNZEs": {}, "zolXfPaO": {}}, "serverCustomAttributes": {"kDoVq0kP": {}, "t1iZLR9I": {}, "Y70tU86m": {}}, "slotId": "RtflJves", "sourceItemId": "txjuyR2b", "tags": ["iHB4uQiG", "Dhn51rYv", "hW0RZOoZ"], "type": "Q7ESjLHO"}, {"customAttributes": {"UEa1y4aw": {}, "impu1VVJ": {}, "rLeBqMNw": {}}, "serverCustomAttributes": {"HeAnLOxv": {}, "vBx8M4ft": {}, "UWcXxsxA": {}}, "slotId": "HEVOS6wM", "sourceItemId": "zMA0Fgaa", "tags": ["9DtRRcQ2", "THBYRkQO", "iDlK9E6u"], "type": "VQeKQTEp"}, {"customAttributes": {"yOzFBmaI": {}, "j6u9zgJp": {}, "bGjpI2rR": {}}, "serverCustomAttributes": {"aTU8ujK2": {}, "jWu2uop5": {}, "xgWuazkj": {}}, "slotId": "uXfGKnIn", "sourceItemId": "0yO0I4MI", "tags": ["cp0LMOYx", "FyA0Vo8Y", "ZJSrUO4B"], "type": "6Go89J5p"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminBulkUpdateMyItems \
    --inventoryId '9AZQUZBQ' \
    --namespace $AB_NAMESPACE \
    --userId 'OiO70GOw' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 22 'AdminBulkUpdateMyItems' test.out

#- 23 AdminSaveItemToInventory
# body param: body
echo '{"customAttributes": {"3Lvuk9a1": {}, "f7VsMk5I": {}, "HkQZooBn": {}}, "qty": 44, "serverCustomAttributes": {"4kwgmaaO": {}, "CjeHLcZF": {}, "p4UfDVXW": {}}, "slotId": "yfiNT2Ih", "slotUsed": 97, "sourceItemId": "7FO6mL7p", "tags": ["PvaWr5Uz", "rshX2hHZ", "OxQA2JSV"], "type": "LlsYqy6z"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminSaveItemToInventory \
    --inventoryId 'yOO3s4mK' \
    --namespace $AB_NAMESPACE \
    --userId 'M7UBLMw3' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 23 'AdminSaveItemToInventory' test.out

#- 24 AdminBulkRemoveItems
# body param: body
echo '[{"slotId": "InjhHIdd", "sourceItemId": "rwRK8Xjb"}, {"slotId": "6WN6446t", "sourceItemId": "7r9qBNx5"}, {"slotId": "mt5DmKrh", "sourceItemId": "mAbdlhEp"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminBulkRemoveItems \
    --inventoryId 'Qm4UtdDr' \
    --namespace $AB_NAMESPACE \
    --userId 'GajwMkpn' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 24 'AdminBulkRemoveItems' test.out

#- 25 AdminSaveItem
# body param: body
echo '{"customAttributes": {"6y97TnWp": {}, "HnvPd1Q0": {}, "yHwePW0I": {}}, "inventoryConfigurationCode": "CcjTm57L", "qty": 68, "serverCustomAttributes": {"JX8yKPgZ": {}, "IJ9wAVJs": {}, "W1TBs1BI": {}}, "slotId": "6WRi8hJY", "slotUsed": 28, "sourceItemId": "8wSo8eeH", "tags": ["zVaKoj2E", "kNtdHCt1", "91at4K3i"], "type": "RmzrZ8nN"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminSaveItem \
    --namespace $AB_NAMESPACE \
    --userId 'nkYpEetr' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 25 'AdminSaveItem' test.out

#- 26 PublicListInventoryConfigurations
$CLI_EXE \
    --sn inventory \
    --op PublicListInventoryConfigurations \
    --namespace $AB_NAMESPACE \
    --code 'EqRT5LTH' \
    --limit '41' \
    --offset '67' \
    --sortBy 'updatedAt:asc' \
    > test.out 2>&1
eval_tap $? 26 'PublicListInventoryConfigurations' test.out

#- 27 PublicListItemTypes
$CLI_EXE \
    --sn inventory \
    --op PublicListItemTypes \
    --namespace $AB_NAMESPACE \
    --limit '16' \
    --offset '21' \
    --sortBy 'createdAt' \
    > test.out 2>&1
eval_tap $? 27 'PublicListItemTypes' test.out

#- 28 PublicListTags
$CLI_EXE \
    --sn inventory \
    --op PublicListTags \
    --namespace $AB_NAMESPACE \
    --limit '49' \
    --offset '90' \
    --sortBy 'createdAt:asc' \
    > test.out 2>&1
eval_tap $? 28 'PublicListTags' test.out

#- 29 PublicListInventories
$CLI_EXE \
    --sn inventory \
    --op PublicListInventories \
    --namespace $AB_NAMESPACE \
    --inventoryConfigurationCode 'Z6NGMciJ' \
    --limit '88' \
    --offset '80' \
    --sortBy 'createdAt:asc' \
    > test.out 2>&1
eval_tap $? 29 'PublicListInventories' test.out

#- 30 PublicConsumeMyItem
# body param: body
echo '{"qty": 93, "slotId": "EQRtCnMh", "sourceItemId": "mrw17go2"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op PublicConsumeMyItem \
    --inventoryId 'rs3kuZSg' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 30 'PublicConsumeMyItem' test.out

#- 31 PublicListItems
$CLI_EXE \
    --sn inventory \
    --op PublicListItems \
    --inventoryId 'inkAdyui' \
    --namespace $AB_NAMESPACE \
    --limit '6' \
    --offset '67' \
    --qtyGte '23' \
    --sortBy 'updatedAt:desc' \
    --sourceItemId 'D95nZ2Jb' \
    --tags 'qHuVgGQv' \
    > test.out 2>&1
eval_tap $? 31 'PublicListItems' test.out

#- 32 PublicBulkUpdateMyItems
# body param: body
echo '[{"customAttributes": {"TZQ7GvRZ": {}, "Hwqg2pY6": {}, "EbLquipD": {}}, "slotId": "eNrdcrW8", "sourceItemId": "UuFOhpw2", "tags": ["M07U70vR", "xSdoq7PO", "y5BV2pgm"]}, {"customAttributes": {"mCiEDPaM": {}, "fIqPCyrm": {}, "eB7Tih0h": {}}, "slotId": "8K8ghPVf", "sourceItemId": "d0lKTnFa", "tags": ["dZi11YMu", "tqtjSBea", "ysPhcKvL"]}, {"customAttributes": {"QMGDtf9t": {}, "5hkNyW6b": {}, "LvaruIQO": {}}, "slotId": "OUNE1KCc", "sourceItemId": "okX3py7p", "tags": ["g9XGTcwL", "mamzK90V", "y7XVPWgK"]}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op PublicBulkUpdateMyItems \
    --inventoryId '7naVfp88' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 32 'PublicBulkUpdateMyItems' test.out

#- 33 PublicBulkRemoveMyItems
# body param: body
echo '[{"slotId": "nw7ikss7", "sourceItemId": "61D2ppCu"}, {"slotId": "pjmuizOP", "sourceItemId": "XKD0O6Gp"}, {"slotId": "uZFvworu", "sourceItemId": "D6VA5DjX"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op PublicBulkRemoveMyItems \
    --inventoryId 'LeFEfj7N' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 33 'PublicBulkRemoveMyItems' test.out

#- 34 PublicMoveMyItems
# body param: body
echo '{"items": [{"qty": 7, "slotId": "Adzc1Jjn", "sourceItemId": "qgsNKP0i"}, {"qty": 60, "slotId": "GMNNJdjt", "sourceItemId": "xdA6Rllt"}, {"qty": 17, "slotId": "ZNOySJnO", "sourceItemId": "GGhBkvEf"}], "srcInventoryId": "Zni1150X"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op PublicMoveMyItems \
    --inventoryId 'IJKDGUSY' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 34 'PublicMoveMyItems' test.out

#- 35 PublicGetItem
$CLI_EXE \
    --sn inventory \
    --op PublicGetItem \
    --inventoryId 'Dr2wmYeU' \
    --namespace $AB_NAMESPACE \
    --slotId 'IFMHO9OL' \
    --sourceItemId 'GNQ6OpjQ' \
    > test.out 2>&1
eval_tap $? 35 'PublicGetItem' test.out


# remove artifacts
rm -f "$CLI_TOKEN_FILE"
rm -f "$TEMP_JSON_INPUT"
rm -f "$TEMP_FILE_UPLOAD"

exit $EXIT_CODE