#!/usr/bin/env bash

# Copyright (c) 2021 AccelByte Inc. All Rights Reserved.
# This is licensed software from AccelByte Inc, for limitations
# and restrictions contact your company contract manager.

# This code is generated by tool. DO NOT EDIT.

# Meta:
# - random seed: 
# - template file: 

# Instructions:
# - Run the Justice SDK Mock Server first before running this script.

export AB_BASE_URL="http://127.0.0.1:8080"
export AB_CLIENT_ID="admin"
export AB_CLIENT_SECRET="admin"
export AB_NAMESPACE="test"
export AB_APP_NAME="UnitTest"

EXIT_CODE=0

eval_tap() {
  if [ $1 -eq 0 ]; then
    echo "ok $2 - $3"
  else
    EXIT_CODE=1
    echo "not ok $2 - $3"
    sed 's/^/# /g' $4
  fi
  rm -f $4
}

CLI_EXE="AccelByte.Sdk.Sample.Cli"
CLI_TOKEN_FILE="$(dirname "$(which $CLI_EXE)")/token.json"
TEMP_JSON_INPUT="input_json.json"
TEMP_FILE_UPLOAD="file_upload.bin"

echo "TAP version 13"
echo "1..44"

#- 1 Login
$CLI_EXE --op login --lt user --user user --pass user > test.out 2>&1
eval_tap $? 1 'Login' test.out

if [ $EXIT_CODE -ne 0 ]; then
  echo "Bail out! Login failed."
  exit $EXIT_CODE
fi

# echo "foo" > "$CLI_TOKEN_FILE"

#- 2 AdminCreateChainingOperations
# body param: body
echo '{"message": "0QtDpSl1", "operations": [{"consumeItems": [{"dateRangeValidation": false, "inventoryId": "w6mxI7SU", "options": ["cjqWAYfK", "JcXJkPuu", "5TXKym6M"], "qty": 17, "slotId": "cEpc6TPg", "sourceItemId": "AQrmHOJq"}, {"dateRangeValidation": true, "inventoryId": "2Kh7d7LQ", "options": ["Ouf4O1gw", "K8whZq0M", "PKXKyc5z"], "qty": 76, "slotId": "0l3KdHdS", "sourceItemId": "dKTAqxM8"}, {"dateRangeValidation": false, "inventoryId": "GmsACG9L", "options": ["QiIufMbN", "YQB62qiZ", "bePiPr2s"], "qty": 3, "slotId": "cUe2xEad", "sourceItemId": "zNxVuHQT"}], "createItems": [{"customAttributes": {"k7SyItT3": {}, "NuafdoX4": {}, "2hQdLgNl": {}}, "inventoryConfigurationCode": "kKq4T6b3", "inventoryId": "MPymxIOE", "qty": 72, "serverCustomAttributes": {"BrNdeo0S": {}, "O8FDOh1L": {}, "95WQhboM": {}}, "slotId": "PpxvhPyq", "slotUsed": 32, "source": "OTHER", "sourceItemId": "7YY7NVTo", "tags": ["x4nahhOY", "A9kw09m9", "XW0Ymk6O"], "toSpecificInventory": false, "type": "XhbSytq8"}, {"customAttributes": {"4xwdupVi": {}, "h7yNRAuf": {}, "11zDW9Ju": {}}, "inventoryConfigurationCode": "fJoz5deb", "inventoryId": "XOExQcpR", "qty": 51, "serverCustomAttributes": {"K2n9NRQs": {}, "RTOkVYaj": {}, "GQyJ6YiW": {}}, "slotId": "mvwk34S0", "slotUsed": 96, "source": "OTHER", "sourceItemId": "UKSIkX0R", "tags": ["O5J2SRiz", "8ItWjhsL", "G7TYKbro"], "toSpecificInventory": true, "type": "l0b7Utgl"}, {"customAttributes": {"7ZC06A86": {}, "MZ43uP8S": {}, "c9xreX1D": {}}, "inventoryConfigurationCode": "X2pYTsaV", "inventoryId": "oswWscKx", "qty": 100, "serverCustomAttributes": {"nwb5vwGT": {}, "q5eZcxOE": {}, "9gSt4Jb9": {}}, "slotId": "1VI1Bhqh", "slotUsed": 1, "source": "OTHER", "sourceItemId": "azpznZhC", "tags": ["xZYCTBJg", "xxbHM0mQ", "XtDJHyzw"], "toSpecificInventory": true, "type": "uy1KnWdh"}], "removeItems": [{"inventoryId": "Q3OsTKHo", "slotId": "BVGmuAYM", "sourceItemId": "puiFYZfh"}, {"inventoryId": "1COAcEOB", "slotId": "W69ETgOo", "sourceItemId": "LPiGESFv"}, {"inventoryId": "mzOsFz1r", "slotId": "iVGxr18d", "sourceItemId": "Ii50pDtN"}], "targetUserId": "Fb6BioHN", "updateItems": [{"customAttributes": {"Mty3SGV1": {}, "HR5iPxPf": {}, "EdYYmAfy": {}}, "inventoryId": "PaDtFBU8", "serverCustomAttributes": {"8quoultf": {}, "rijfbcD5": {}, "woxtzR4m": {}}, "slotId": "LzP8MY9d", "sourceItemId": "oQ1GYilA", "tags": ["qClE5XeD", "scFnqsSU", "SLOIBvR7"], "type": "6UVbrh8L"}, {"customAttributes": {"CCVu07OW": {}, "Tb11neEl": {}, "Vvyp1rHC": {}}, "inventoryId": "QOqd3klJ", "serverCustomAttributes": {"PDKgjMTe": {}, "ZKMkNSR3": {}, "CugeRA1C": {}}, "slotId": "9Lo8whJw", "sourceItemId": "FqEZXb1S", "tags": ["TlSFC4fY", "fhTYqFRw", "i4JD2RJ8"], "type": "yWuxg37C"}, {"customAttributes": {"NWbPg6n4": {}, "IBSKovYW": {}, "cB2mxiQt": {}}, "inventoryId": "BQv6Gfoa", "serverCustomAttributes": {"hpo467dE": {}, "zHPUQ4om": {}, "hjPWWPek": {}}, "slotId": "Pb0J37XY", "sourceItemId": "UNoEOtii", "tags": ["T17S9kji", "JXXPbYwt", "aEakJhR6"], "type": "Vap71hOD"}]}, {"consumeItems": [{"dateRangeValidation": false, "inventoryId": "WtwjSloD", "options": ["EqtkejYW", "0RzrnbSj", "98D6BdrO"], "qty": 6, "slotId": "VzCLFxmD", "sourceItemId": "uGCGfZpI"}, {"dateRangeValidation": false, "inventoryId": "vvtYCByg", "options": ["aaKTqKvH", "hDkjAkAU", "8KV5HLBw"], "qty": 74, "slotId": "sRuAZBV6", "sourceItemId": "DKYHi9ef"}, {"dateRangeValidation": true, "inventoryId": "Dn8p0DJl", "options": ["TMstg0TM", "2mgpXtDN", "6YEdpDpM"], "qty": 85, "slotId": "JyXBC2iq", "sourceItemId": "vq9KulCo"}], "createItems": [{"customAttributes": {"Os9vJTJE": {}, "TWjXOcLM": {}, "4z0jEsOj": {}}, "inventoryConfigurationCode": "kT9jCY9R", "inventoryId": "VsvAptAu", "qty": 29, "serverCustomAttributes": {"CjvgtN7U": {}, "fYu3wF91": {}, "mZdlsbu3": {}}, "slotId": "rI6dPfwg", "slotUsed": 55, "source": "OTHER", "sourceItemId": "QDjtZPb6", "tags": ["rTijakbD", "sHlRg2rY", "PMzHMsRI"], "toSpecificInventory": true, "type": "o6M4mOVK"}, {"customAttributes": {"CM7JqETL": {}, "kS93E1ns": {}, "WxfFPHcw": {}}, "inventoryConfigurationCode": "BKEtEi8V", "inventoryId": "3YXPde5T", "qty": 8, "serverCustomAttributes": {"WAyrJi1n": {}, "uWkmAHJU": {}, "QORifh8M": {}}, "slotId": "TX6TUVdQ", "slotUsed": 75, "source": "ECOMMERCE", "sourceItemId": "eqvUfdDD", "tags": ["x7HxZ5S2", "8lK6PlmM", "YYWTw1rz"], "toSpecificInventory": true, "type": "8UTaho0v"}, {"customAttributes": {"k1bdarQ4": {}, "0NCMAna2": {}, "hAlDkLiJ": {}}, "inventoryConfigurationCode": "J5wgqHzY", "inventoryId": "rAjHEeT0", "qty": 15, "serverCustomAttributes": {"3nVwUcCD": {}, "ESB20yH4": {}, "mGeyS5c4": {}}, "slotId": "GUO1CTd0", "slotUsed": 29, "source": "OTHER", "sourceItemId": "QPF2vz6t", "tags": ["gbbcrR9T", "B6VUCzHU", "SM647hio"], "toSpecificInventory": true, "type": "bwv2eQq5"}], "removeItems": [{"inventoryId": "HBJHkep7", "slotId": "xVYhe8UI", "sourceItemId": "lspZcbZB"}, {"inventoryId": "zetfKdCW", "slotId": "UVgCZnm2", "sourceItemId": "eGJ8rCwG"}, {"inventoryId": "ddTSi6lI", "slotId": "ZfSKeUBN", "sourceItemId": "W3gAg6Xy"}], "targetUserId": "CNAA14Fy", "updateItems": [{"customAttributes": {"oWsvkBrS": {}, "CyIHDdE9": {}, "XTSOAt5l": {}}, "inventoryId": "xUzXsyU2", "serverCustomAttributes": {"ekFvo9vp": {}, "6RO1PPpt": {}, "h2IyzsAt": {}}, "slotId": "9sss4EhE", "sourceItemId": "2MG4HnqM", "tags": ["OzQIF1Q6", "A8bh0nmq", "b2oAx1wm"], "type": "P3mJA7fK"}, {"customAttributes": {"6rX3a6mt": {}, "7oo86v8h": {}, "IfCbkxp5": {}}, "inventoryId": "JBQgxCld", "serverCustomAttributes": {"PHbc7ATY": {}, "bdclOHw0": {}, "ZuH8fDkx": {}}, "slotId": "Xfd7r0qd", "sourceItemId": "KnHyce8T", "tags": ["DfQxMnH8", "KudWt9qI", "cDxnvBeJ"], "type": "EyUhQtNT"}, {"customAttributes": {"ZsTeqtSi": {}, "19A28atc": {}, "y7DGlceM": {}}, "inventoryId": "Zzseg3JO", "serverCustomAttributes": {"sUDYQGR0": {}, "XjSYAAEV": {}, "b8DFO65f": {}}, "slotId": "fhLVvoRT", "sourceItemId": "76K1K1EO", "tags": ["p19rHy6Z", "3OAaVaqG", "aoMLnLOB"], "type": "e4tWW3rq"}]}, {"consumeItems": [{"dateRangeValidation": false, "inventoryId": "g4iB9lib", "options": ["3ZU1Z5su", "EIsqs7om", "Sv6r80AR"], "qty": 63, "slotId": "LmmLbeID", "sourceItemId": "L6zYJuIl"}, {"dateRangeValidation": true, "inventoryId": "X0TnmphQ", "options": ["v6x73fBm", "DvfWqegm", "Rfy8hE4N"], "qty": 53, "slotId": "Mj9Jh23S", "sourceItemId": "dbEvzrCC"}, {"dateRangeValidation": true, "inventoryId": "yv056gNa", "options": ["r8FsMxC1", "aatmroaM", "2uJtYDoN"], "qty": 68, "slotId": "586AKlnl", "sourceItemId": "EGN8lnd1"}], "createItems": [{"customAttributes": {"4kDc2lvb": {}, "U3CcL5hC": {}, "B6KE1KE0": {}}, "inventoryConfigurationCode": "VGcihqvb", "inventoryId": "PpPvhYn9", "qty": 15, "serverCustomAttributes": {"2tE9O9QY": {}, "KyierPIK": {}, "YFY1rBnh": {}}, "slotId": "K3Ef7Nxg", "slotUsed": 36, "source": "OTHER", "sourceItemId": "C0FJm0NI", "tags": ["sf03gD2l", "JlcSoLU1", "sTvwGqa6"], "toSpecificInventory": false, "type": "AbQWpIMK"}, {"customAttributes": {"fKPztOHM": {}, "6pM1JrlO": {}, "dC5qqOgP": {}}, "inventoryConfigurationCode": "VKZv8vBs", "inventoryId": "mOYhZflO", "qty": 16, "serverCustomAttributes": {"UyNuYKnM": {}, "gXEYRogV": {}, "Qx9LXB2A": {}}, "slotId": "1hqQVgYh", "slotUsed": 45, "source": "ECOMMERCE", "sourceItemId": "5siua1uX", "tags": ["IFcijAWF", "mgxSx5EE", "nAn0XZHH"], "toSpecificInventory": true, "type": "dWwCl61z"}, {"customAttributes": {"UsjJ3wRe": {}, "kjgnQ56A": {}, "d0IX93be": {}}, "inventoryConfigurationCode": "VlOxlfEb", "inventoryId": "Gta94mze", "qty": 18, "serverCustomAttributes": {"bl24mHwX": {}, "UktOuvLm": {}, "PmzcjQKE": {}}, "slotId": "vlynSIBM", "slotUsed": 46, "source": "ECOMMERCE", "sourceItemId": "lQ7VRTtg", "tags": ["mQf8G6Qd", "s8reDpFL", "1J86a6Of"], "toSpecificInventory": true, "type": "3PE8ODyE"}], "removeItems": [{"inventoryId": "ETMgxEKu", "slotId": "62ZJDZdd", "sourceItemId": "pISmxUVw"}, {"inventoryId": "4LPW8klk", "slotId": "G90e4VHg", "sourceItemId": "ZC3xSEo7"}, {"inventoryId": "6EP0fhSr", "slotId": "6GenmEu4", "sourceItemId": "5QDnP2EQ"}], "targetUserId": "NkGhl0vJ", "updateItems": [{"customAttributes": {"wzBD7Qa2": {}, "cimc6Uwt": {}, "xgEzTDO2": {}}, "inventoryId": "6QFRlEro", "serverCustomAttributes": {"p8BUZNWw": {}, "LwqHB9QO": {}, "KAuJy7tn": {}}, "slotId": "hCI9tuHk", "sourceItemId": "dJzQJPYm", "tags": ["VpCwYZR1", "6nDhycNb", "VsJf3EFr"], "type": "Xt99skyx"}, {"customAttributes": {"jd53r4oN": {}, "pngSyISk": {}, "37XZGX0Y": {}}, "inventoryId": "REGRFze3", "serverCustomAttributes": {"D370FvR9": {}, "IpynRcHm": {}, "I2WQYtv3": {}}, "slotId": "VayCTGxA", "sourceItemId": "LaU6bbz9", "tags": ["Ga70yjVZ", "FIspqqka", "OtqAeEzm"], "type": "6VqAG9wP"}, {"customAttributes": {"nHDFdLTE": {}, "k2BJfXyi": {}, "M7xr8SHH": {}}, "inventoryId": "FmBBTIrw", "serverCustomAttributes": {"8yDdBEgV": {}, "WtVa4YVW": {}, "hMXVx5os": {}}, "slotId": "aMHHSc6G", "sourceItemId": "v67j0oYc", "tags": ["MQdIJzl3", "5rJDRK6Q", "nDFuljIl"], "type": "13Hi2RED"}]}], "requestId": "Sz5imBzx"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminCreateChainingOperations \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 2 'AdminCreateChainingOperations' test.out

#- 3 AdminListIntegrationConfigurations
$CLI_EXE \
    --sn inventory \
    --op AdminListIntegrationConfigurations \
    --namespace $AB_NAMESPACE \
    --limit '55' \
    --offset '2' \
    --sortBy 'createdAt:desc' \
    > test.out 2>&1
eval_tap $? 3 'AdminListIntegrationConfigurations' test.out

#- 4 AdminCreateIntegrationConfiguration
# body param: body
echo '{"mapItemType": ["T87aYcJi", "PUkcIRJa", "SUCAkvg7"], "serviceName": "s9x7g7Ux", "targetInventoryCode": "0ycLHjE2"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminCreateIntegrationConfiguration \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 4 'AdminCreateIntegrationConfiguration' test.out

#- 5 AdminUpdateIntegrationConfiguration
# body param: body
echo '{"mapItemType": ["pDzM0zUQ", "l9N8eXDl", "Du9DIHBy"], "serviceName": "IVIilOr5", "targetInventoryCode": "eDxAmkAX"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminUpdateIntegrationConfiguration \
    --integrationConfigurationId 'LGIcRcOE' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 5 'AdminUpdateIntegrationConfiguration' test.out

#- 6 AdminUpdateStatusIntegrationConfiguration
# body param: body
echo '{"status": "INIT"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminUpdateStatusIntegrationConfiguration \
    --integrationConfigurationId '9qt0FAId' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 6 'AdminUpdateStatusIntegrationConfiguration' test.out

#- 7 AdminListInventories
$CLI_EXE \
    --sn inventory \
    --op AdminListInventories \
    --namespace $AB_NAMESPACE \
    --inventoryConfigurationCode 'd6PGyzlo' \
    --limit '89' \
    --offset '89' \
    --sortBy 'createdAt' \
    --userId 'MyqJVCGm' \
    > test.out 2>&1
eval_tap $? 7 'AdminListInventories' test.out

#- 8 AdminCreateInventory
# body param: body
echo '{"inventoryConfigurationCode": "Ou1M54do", "userId": "XnkGZb3O"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminCreateInventory \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 8 'AdminCreateInventory' test.out

#- 9 AdminGetInventory
$CLI_EXE \
    --sn inventory \
    --op AdminGetInventory \
    --inventoryId 'RH5J13fa' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 9 'AdminGetInventory' test.out

#- 10 AdminUpdateInventory
# body param: body
echo '{"incMaxSlots": 13}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminUpdateInventory \
    --inventoryId 'ucg0FPN5' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 10 'AdminUpdateInventory' test.out

#- 11 DeleteInventory
# body param: body
echo '{"message": "5DxIyRE2"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op DeleteInventory \
    --inventoryId '9pu0aMkj' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 11 'DeleteInventory' test.out

#- 12 AdminListItems
$CLI_EXE \
    --sn inventory \
    --op AdminListItems \
    --inventoryId '4PrflF0m' \
    --namespace $AB_NAMESPACE \
    --limit '63' \
    --offset '63' \
    --sortBy 'createdAt:asc' \
    --sourceItemId 'kKExk9kC' \
    --tags 'eaZRAmKb' \
    > test.out 2>&1
eval_tap $? 12 'AdminListItems' test.out

#- 13 AdminGetInventoryItem
$CLI_EXE \
    --sn inventory \
    --op AdminGetInventoryItem \
    --inventoryId '1v1ZRyFN' \
    --namespace $AB_NAMESPACE \
    --slotId 'jQDSZjYl' \
    --sourceItemId 'kubJHEkq' \
    > test.out 2>&1
eval_tap $? 13 'AdminGetInventoryItem' test.out

#- 14 AdminListInventoryConfigurations
$CLI_EXE \
    --sn inventory \
    --op AdminListInventoryConfigurations \
    --namespace $AB_NAMESPACE \
    --code 'vmjC3Ad5' \
    --limit '12' \
    --offset '43' \
    --sortBy 'createdAt:asc' \
    > test.out 2>&1
eval_tap $? 14 'AdminListInventoryConfigurations' test.out

#- 15 AdminCreateInventoryConfiguration
# body param: body
echo '{"code": "WMkAXbDi", "description": "qb37jJ2W", "initialMaxSlots": 91, "maxInstancesPerUser": 69, "maxUpgradeSlots": 82, "name": "xt4YvMC8"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminCreateInventoryConfiguration \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 15 'AdminCreateInventoryConfiguration' test.out

#- 16 AdminGetInventoryConfiguration
$CLI_EXE \
    --sn inventory \
    --op AdminGetInventoryConfiguration \
    --inventoryConfigurationId 'hjnhqHuc' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 16 'AdminGetInventoryConfiguration' test.out

#- 17 AdminUpdateInventoryConfiguration
# body param: body
echo '{"code": "MVgcKWm6", "description": "hpgspKGy", "initialMaxSlots": 41, "maxInstancesPerUser": 43, "maxUpgradeSlots": 13, "name": "nqeKurJb"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminUpdateInventoryConfiguration \
    --inventoryConfigurationId 'Ebjfc9ao' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 17 'AdminUpdateInventoryConfiguration' test.out

#- 18 AdminDeleteInventoryConfiguration
$CLI_EXE \
    --sn inventory \
    --op AdminDeleteInventoryConfiguration \
    --inventoryConfigurationId 'qW6oEjDD' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 18 'AdminDeleteInventoryConfiguration' test.out

#- 19 AdminListItemTypes
$CLI_EXE \
    --sn inventory \
    --op AdminListItemTypes \
    --namespace $AB_NAMESPACE \
    --limit '45' \
    --offset '49' \
    --sortBy 'createdAt' \
    > test.out 2>&1
eval_tap $? 19 'AdminListItemTypes' test.out

#- 20 AdminCreateItemType
# body param: body
echo '{"name": "bSrot2U5"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminCreateItemType \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 20 'AdminCreateItemType' test.out

#- 21 AdminDeleteItemType
$CLI_EXE \
    --sn inventory \
    --op AdminDeleteItemType \
    --itemTypeName 'TzofnQDu' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 21 'AdminDeleteItemType' test.out

#- 22 AdminListTags
$CLI_EXE \
    --sn inventory \
    --op AdminListTags \
    --namespace $AB_NAMESPACE \
    --limit '47' \
    --offset '63' \
    --owner 'jJGnXHj1' \
    --sortBy 'name' \
    > test.out 2>&1
eval_tap $? 22 'AdminListTags' test.out

#- 23 AdminCreateTag
# body param: body
echo '{"name": "KrwaWaov", "owner": "CLIENT"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminCreateTag \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 23 'AdminCreateTag' test.out

#- 24 AdminDeleteTag
$CLI_EXE \
    --sn inventory \
    --op AdminDeleteTag \
    --namespace $AB_NAMESPACE \
    --tagName 'IeHGeKe6' \
    > test.out 2>&1
eval_tap $? 24 'AdminDeleteTag' test.out

#- 25 AdminConsumeUserItem
# body param: body
echo '{"options": ["EcF2HccR", "pCj8mNoE", "EnLVOLV1"], "qty": 2, "slotId": "hBtf7MHc", "sourceItemId": "OOSXWnEy"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminConsumeUserItem \
    --inventoryId 'KvH8KFTL' \
    --namespace $AB_NAMESPACE \
    --userId 's6SG2T5M' \
    --dateRangeValidation '3WCcIhw3' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 25 'AdminConsumeUserItem' test.out

#- 26 AdminBulkUpdateMyItems
# body param: body
echo '[{"customAttributes": {"vsj5afoI": {}, "aGFHfK4N": {}, "F25komQV": {}}, "serverCustomAttributes": {"SoZVpzRK": {}, "Kn2jTihc": {}, "cL2T6xNx": {}}, "slotId": "rzQ1kmSK", "sourceItemId": "nMMRH1SZ", "tags": ["BxDoOTYA", "zBGGSO4Q", "Acs7Og2O"], "type": "O8cSM8pC"}, {"customAttributes": {"1Gpn5SNa": {}, "oog3rfrx": {}, "bWVMpoAJ": {}}, "serverCustomAttributes": {"qYTaRlRZ": {}, "3xau6F96": {}, "gv15boB9": {}}, "slotId": "nWBdg2jh", "sourceItemId": "HLd0oEFa", "tags": ["DUsRqfei", "05p1VRO5", "p18eSjee"], "type": "46WJmAkh"}, {"customAttributes": {"IY2odOWO": {}, "r18hWqz6": {}, "dhZDOujb": {}}, "serverCustomAttributes": {"xg8j4sb8": {}, "MKWs6JTS": {}, "xX8axdQy": {}}, "slotId": "RFdQvw84", "sourceItemId": "p18RZx5U", "tags": ["NlO2hY9h", "GMWdvpDE", "4T5dadcu"], "type": "cV3XhzUA"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminBulkUpdateMyItems \
    --inventoryId 'pgSq5ELu' \
    --namespace $AB_NAMESPACE \
    --userId 'hNXPmFHu' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 26 'AdminBulkUpdateMyItems' test.out

#- 27 AdminSaveItemToInventory
# body param: body
echo '{"customAttributes": {"TmDFInVM": {}, "W7T65QPS": {}, "pcWaGAM4": {}}, "qty": 46, "serverCustomAttributes": {"k7WqRGlb": {}, "uQZ7MjyU": {}, "airROLoK": {}}, "slotId": "LI0ZyXXR", "slotUsed": 25, "source": "OTHER", "sourceItemId": "gptZZdZO", "tags": ["YbJxrhza", "9RMKYRIN", "d8Tdamu0"], "type": "PllJqRhs"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminSaveItemToInventory \
    --inventoryId 'A2j2ClHM' \
    --namespace $AB_NAMESPACE \
    --userId '4NkFkZlJ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 27 'AdminSaveItemToInventory' test.out

#- 28 AdminBulkRemoveItems
# body param: body
echo '[{"slotId": "IxKzjNQx", "sourceItemId": "tUIq3Loj"}, {"slotId": "F7FQ9zJH", "sourceItemId": "ck0lqTnT"}, {"slotId": "l1FmGpiJ", "sourceItemId": "YexR47N5"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminBulkRemoveItems \
    --inventoryId 'SentBGiB' \
    --namespace $AB_NAMESPACE \
    --userId 'vghzE5qP' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 28 'AdminBulkRemoveItems' test.out

#- 29 AdminBulkSaveItemToInventory
# body param: body
echo '[{"customAttributes": {"WnHyrTNE": {}, "k5tGwGny": {}, "FPgZkQdM": {}}, "qty": 1, "serverCustomAttributes": {"A0tYrIuh": {}, "acnq04Tt": {}, "OQlFvxvx": {}}, "slotId": "2krZNgKS", "slotUsed": 51, "source": "ECOMMERCE", "sourceItemId": "JlMBmV0d", "tags": ["I14NHWFa", "G8e0EIxb", "gp1ZIR5C"], "type": "XuEPldm1"}, {"customAttributes": {"L6xvKGES": {}, "XHwgqybA": {}, "1iupq9Aa": {}}, "qty": 31, "serverCustomAttributes": {"3aAdL2Tz": {}, "2v1MlSoA": {}, "SAc17hmQ": {}}, "slotId": "Gm0SX6T0", "slotUsed": 32, "source": "OTHER", "sourceItemId": "csFiFgaY", "tags": ["HCW3aWgT", "w043HrQO", "uREfDiMs"], "type": "I1MGe21K"}, {"customAttributes": {"hUHyk26X": {}, "cL55jINl": {}, "lcrHVB4J": {}}, "qty": 79, "serverCustomAttributes": {"u9c7hME9": {}, "qIspOjCY": {}, "DCyhwErd": {}}, "slotId": "36BQMEqq", "slotUsed": 64, "source": "ECOMMERCE", "sourceItemId": "QZ9R8I5p", "tags": ["ee4r6VyS", "m7IpdfFX", "UJzG9YV9"], "type": "ste8z3Jv"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminBulkSaveItemToInventory \
    --inventoryId 'oZ94SI8w' \
    --namespace $AB_NAMESPACE \
    --userId '0FS5Oitu' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 29 'AdminBulkSaveItemToInventory' test.out

#- 30 AdminUpdateUserInventoriesByInventoryCode
# body param: body
echo '{"incMaxSlots": 50}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminUpdateUserInventoriesByInventoryCode \
    --inventoryConfigurationCode 'crrOWAKf' \
    --namespace $AB_NAMESPACE \
    --userId 'Gn2iH5wx' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 30 'AdminUpdateUserInventoriesByInventoryCode' test.out

#- 31 AdminSaveItem
# body param: body
echo '{"customAttributes": {"5KJaxRgl": {}, "8G3VoMgW": {}, "jQX2jBho": {}}, "inventoryConfigurationCode": "noVlmSzN", "qty": 20, "serverCustomAttributes": {"XYgNUMuJ": {}, "ww4MvKe5": {}, "lGlQkNjY": {}}, "slotId": "zKmpQAou", "slotUsed": 47, "source": "ECOMMERCE", "sourceItemId": "livYvxti", "tags": ["HqvURZeT", "nkY81rpg", "1SjEaxZP"], "type": "mXQ8StjM"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminSaveItem \
    --namespace $AB_NAMESPACE \
    --userId 's0B1osfM' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 31 'AdminSaveItem' test.out

#- 32 AdminBulkSaveItem
# body param: body
echo '[{"customAttributes": {"xYWsU6s9": {}, "I4i3w1Fc": {}, "JR908rUb": {}}, "inventoryConfigurationCode": "XVLSofX3", "qty": 57, "serverCustomAttributes": {"cvOoTdsu": {}, "sF7v9aDE": {}, "1CLcHX52": {}}, "slotId": "OIpFTkWR", "slotUsed": 100, "source": "ECOMMERCE", "sourceItemId": "lT684DRm", "tags": ["Aqa0cRFd", "nY9kQxMI", "XRmJF0dm"], "type": "d6cqax3B"}, {"customAttributes": {"RTubv8HI": {}, "XWUn547o": {}, "PEhHplxL": {}}, "inventoryConfigurationCode": "E7xRZFrX", "qty": 37, "serverCustomAttributes": {"z1HrFjVH": {}, "WB5u7z9F": {}, "kLNMtYwl": {}}, "slotId": "KBtqsKee", "slotUsed": 25, "source": "OTHER", "sourceItemId": "n2ngrt56", "tags": ["vAVUqrUt", "TcNvB42I", "nzWGFtBH"], "type": "4TKFJ3Fa"}, {"customAttributes": {"g7057aZq": {}, "WnLiCtYu": {}, "TfUJUd83": {}}, "inventoryConfigurationCode": "qUYteOTh", "qty": 34, "serverCustomAttributes": {"qijU8QSY": {}, "VAPSoSQY": {}, "PGX6TR4L": {}}, "slotId": "XCnKbQSp", "slotUsed": 81, "source": "OTHER", "sourceItemId": "KGl97efa", "tags": ["Chnpqpdx", "AIQ2fdUj", "MolFpxlR"], "type": "QaWZDtPU"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminBulkSaveItem \
    --namespace $AB_NAMESPACE \
    --userId 'Zz1POca0' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 32 'AdminBulkSaveItem' test.out

#- 33 AdminSyncUserEntitlements
$CLI_EXE \
    --sn inventory \
    --op AdminSyncUserEntitlements \
    --namespace $AB_NAMESPACE \
    --userId 'UWCwTcV2' \
    > test.out 2>&1
eval_tap $? 33 'AdminSyncUserEntitlements' test.out

#- 34 AdminPurchasable
# body param: body
echo '{"entitlementType": "hvzh1QFu", "inventoryConfig": {"slotUsed": 87}, "itemId": "l8HBvSUx", "itemType": "emOQ0Ki7", "items": [{"bundledQty": 73, "entitlementType": "gOEgwvEE", "inventoryConfig": {"slotUsed": 69}, "itemId": "z4RaNkcH", "itemType": "wqL7wUPS", "sku": "BvuSLCCv", "stackable": true, "useCount": 80}, {"bundledQty": 43, "entitlementType": "zw67XIbp", "inventoryConfig": {"slotUsed": 100}, "itemId": "2VKJjbxt", "itemType": "yvkJccZu", "sku": "nGYRuQY3", "stackable": false, "useCount": 61}, {"bundledQty": 12, "entitlementType": "LkfFZDyl", "inventoryConfig": {"slotUsed": 61}, "itemId": "eunZsgq1", "itemType": "6bBuoZyN", "sku": "qhfS2OPI", "stackable": false, "useCount": 37}], "quantity": 28, "sku": "1TCWYxuf", "stackable": false, "useCount": 68}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminPurchasable \
    --namespace $AB_NAMESPACE \
    --userId 'mDmHYTIU' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 34 'AdminPurchasable' test.out

#- 35 PublicListInventoryConfigurations
$CLI_EXE \
    --sn inventory \
    --op PublicListInventoryConfigurations \
    --namespace $AB_NAMESPACE \
    --code 'KlLeDh5V' \
    --limit '41' \
    --offset '93' \
    --sortBy 'code' \
    > test.out 2>&1
eval_tap $? 35 'PublicListInventoryConfigurations' test.out

#- 36 PublicListItemTypes
$CLI_EXE \
    --sn inventory \
    --op PublicListItemTypes \
    --namespace $AB_NAMESPACE \
    --limit '93' \
    --offset '18' \
    --sortBy 'name:asc' \
    > test.out 2>&1
eval_tap $? 36 'PublicListItemTypes' test.out

#- 37 PublicListTags
$CLI_EXE \
    --sn inventory \
    --op PublicListTags \
    --namespace $AB_NAMESPACE \
    --limit '35' \
    --offset '93' \
    --sortBy 'createdAt' \
    > test.out 2>&1
eval_tap $? 37 'PublicListTags' test.out

#- 38 PublicListInventories
$CLI_EXE \
    --sn inventory \
    --op PublicListInventories \
    --namespace $AB_NAMESPACE \
    --inventoryConfigurationCode 'c0C9tqpE' \
    --limit '75' \
    --offset '20' \
    --sortBy 'updatedAt' \
    > test.out 2>&1
eval_tap $? 38 'PublicListInventories' test.out

#- 39 PublicConsumeMyItem
# body param: body
echo '{"options": ["DrYzWB3p", "boGuKdAC", "FOJHG04K"], "qty": 18, "slotId": "yJ3u2u2v", "sourceItemId": "4VWO7Oic"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op PublicConsumeMyItem \
    --inventoryId 'Nq9N0yFH' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 39 'PublicConsumeMyItem' test.out

#- 40 PublicListItems
$CLI_EXE \
    --sn inventory \
    --op PublicListItems \
    --inventoryId 'm8AUllAZ' \
    --namespace $AB_NAMESPACE \
    --limit '19' \
    --offset '51' \
    --sortBy 'createdAt:asc' \
    --sourceItemId '1ts3q2QW' \
    --tags 'Kq2cAnQ7' \
    > test.out 2>&1
eval_tap $? 40 'PublicListItems' test.out

#- 41 PublicBulkUpdateMyItems
# body param: body
echo '[{"customAttributes": {"MmqaOxqZ": {}, "VgY3WJZc": {}, "RAeV48gk": {}}, "slotId": "3j5wCz1z", "sourceItemId": "xAN8l1qw", "tags": ["gG8gBNij", "gGAWvrxC", "RZ8R3dKF"]}, {"customAttributes": {"zWTlizKQ": {}, "9YofJFFk": {}, "1YvkLobC": {}}, "slotId": "rpPZusty", "sourceItemId": "2MxexU1u", "tags": ["nmt1K2m0", "upTPpc0f", "i5v3VdXE"]}, {"customAttributes": {"ZOoUZ2AB": {}, "HKtHLWrc": {}, "ZvCOBzr4": {}}, "slotId": "xiluUmCP", "sourceItemId": "976YFt67", "tags": ["neZMqXLp", "UPHy4eAo", "jMgpcJrv"]}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op PublicBulkUpdateMyItems \
    --inventoryId 'RdiwHcuq' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 41 'PublicBulkUpdateMyItems' test.out

#- 42 PublicBulkRemoveMyItems
# body param: body
echo '[{"slotId": "p2CyXzZk", "sourceItemId": "SuWK7jVL"}, {"slotId": "vzpBj9Gm", "sourceItemId": "TM9SNgoG"}, {"slotId": "k26BFOWp", "sourceItemId": "awudHx6Q"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op PublicBulkRemoveMyItems \
    --inventoryId 'fIao6sVd' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 42 'PublicBulkRemoveMyItems' test.out

#- 43 PublicMoveMyItems
# body param: body
echo '{"items": [{"qty": 60, "slotId": "i9Y4P5nd", "sourceItemId": "jGKFVWiJ"}, {"qty": 90, "slotId": "0mrb1jHL", "sourceItemId": "pPKABb3A"}, {"qty": 87, "slotId": "lGNgCaEq", "sourceItemId": "gf4pPvZL"}], "srcInventoryId": "uVBn3sVn"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op PublicMoveMyItems \
    --inventoryId '8ktm7lce' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 43 'PublicMoveMyItems' test.out

#- 44 PublicGetItem
$CLI_EXE \
    --sn inventory \
    --op PublicGetItem \
    --inventoryId '9UWJFQ2r' \
    --namespace $AB_NAMESPACE \
    --slotId '2oYtHXHS' \
    --sourceItemId '9rzaCU0x' \
    > test.out 2>&1
eval_tap $? 44 'PublicGetItem' test.out


# remove artifacts
rm -f "$CLI_TOKEN_FILE"
rm -f "$TEMP_JSON_INPUT"
rm -f "$TEMP_FILE_UPLOAD"

exit $EXIT_CODE