#!/usr/bin/env bash

# Copyright (c) 2021 AccelByte Inc. All Rights Reserved.
# This is licensed software from AccelByte Inc, for limitations
# and restrictions contact your company contract manager.

# This code is generated by tool. DO NOT EDIT.

# Meta:
# - random seed: 
# - template file: 

# Instructions:
# - Run the Justice SDK Mock Server first before running this script.

export AB_BASE_URL="http://127.0.0.1:8080"
export AB_CLIENT_ID="admin"
export AB_CLIENT_SECRET="admin"
export AB_NAMESPACE="test"
export AB_APP_NAME="UnitTest"

EXIT_CODE=0

eval_tap() {
  if [ $1 -eq 0 ]; then
    echo "ok $2 - $3"
  else
    EXIT_CODE=1
    echo "not ok $2 - $3"
    sed 's/^/# /g' $4
  fi
  rm -f $4
}

CLI_EXE="AccelByte.Sdk.Sample.Cli"
CLI_TOKEN_FILE="$(dirname "$(which $CLI_EXE)")/token.json"
TEMP_JSON_INPUT="input_json.json"
TEMP_FILE_UPLOAD="file_upload.bin"

echo "TAP version 13"
echo "1..44"

#- 1 Login
$CLI_EXE --op login --lt user --user user --pass user > test.out 2>&1
eval_tap $? 1 'Login' test.out

if [ $EXIT_CODE -ne 0 ]; then
  echo "Bail out! Login failed."
  exit $EXIT_CODE
fi

# echo "foo" > "$CLI_TOKEN_FILE"

#- 2 AdminCreateChainingOperations
# body param: body
echo '{"message": "y1O9bCpZ", "operations": [{"consumeItems": [{"dateRangeValidation": true, "inventoryId": "KEI6JJ2d", "options": ["zyzJLaMm", "rRhJZnVd", "DFqRNtyq"], "qty": 38, "slotId": "dQE52GXr", "sourceItemId": "J6tJt89a"}, {"dateRangeValidation": false, "inventoryId": "YmdkDbs4", "options": ["TAeEoDHa", "qnx1aB72", "MFmZgwd1"], "qty": 2, "slotId": "vdXKcRud", "sourceItemId": "Ub66Zyld"}, {"dateRangeValidation": true, "inventoryId": "RL72jGa2", "options": ["Oo9aRKLw", "buO48PUl", "gFg3vQxX"], "qty": 76, "slotId": "HlOOrzjY", "sourceItemId": "CJ6OygwR"}], "createItems": [{"customAttributes": {"nI93YVOG": {}, "3CyZsZDm": {}, "lNL3inhf": {}}, "inventoryConfigurationCode": "f059H9Y5", "inventoryId": "VccmcBBx", "qty": 92, "serverCustomAttributes": {"jsyTokv8": {}, "FSN6nCZs": {}, "OivS6bJP": {}}, "slotId": "uMZtq7fO", "slotUsed": 97, "source": "OTHER", "sourceItemId": "tG6XZrNL", "tags": ["iePiGb0J", "2khDBzbb", "BwciVA3W"], "toSpecificInventory": false, "type": "AEyYVswu"}, {"customAttributes": {"WURhAyiO": {}, "4OcgPzox": {}, "EAtO13JW": {}}, "inventoryConfigurationCode": "m69WKU0M", "inventoryId": "kexwF7kV", "qty": 59, "serverCustomAttributes": {"SJro4qhv": {}, "2RIONf0X": {}, "fz7iHc8e": {}}, "slotId": "pcK2AOlv", "slotUsed": 59, "source": "ECOMMERCE", "sourceItemId": "DVEPE95V", "tags": ["inIXYBMN", "cOJMLwDN", "LhGcL7Md"], "toSpecificInventory": true, "type": "Ay3uz6T7"}, {"customAttributes": {"jmxl7Hzh": {}, "Tk9bxwcE": {}, "k5kEgnvf": {}}, "inventoryConfigurationCode": "CkWzyOnQ", "inventoryId": "B4DrKRFS", "qty": 29, "serverCustomAttributes": {"EIRHZyjj": {}, "j8eaOzh6": {}, "nCubwjXi": {}}, "slotId": "leXWvRCZ", "slotUsed": 49, "source": "ECOMMERCE", "sourceItemId": "9ibLjoXx", "tags": ["yup49t7K", "3mH41pju", "RkcQIih8"], "toSpecificInventory": true, "type": "iSSzSvPe"}], "removeItems": [{"inventoryId": "3G7Xdeiz", "slotId": "MNH5kWOT", "sourceItemId": "SGv71h1A"}, {"inventoryId": "9kUlgeyu", "slotId": "JDeXJBRE", "sourceItemId": "JuhXmMAI"}, {"inventoryId": "L2rwxC4D", "slotId": "NOSbwpYq", "sourceItemId": "6W9jEzBj"}], "targetUserId": "YNirfcY3", "updateItems": [{"customAttributes": {"CRJf4i5G": {}, "8bemvvY1": {}, "OLKMXNho": {}}, "inventoryId": "f99rcLwz", "serverCustomAttributes": {"CqKIgPlZ": {}, "H8wDPlV7": {}, "h5u90xzX": {}}, "slotId": "bNK1uK4D", "sourceItemId": "5tBJJqD9", "tags": ["UWwRKZqf", "Ffdnuxyh", "deoleCnd"], "type": "ZOoD31P4"}, {"customAttributes": {"vWzvERZN": {}, "5Nru90yQ": {}, "3gdeTJPY": {}}, "inventoryId": "DBSS0AsC", "serverCustomAttributes": {"CVZrX7ct": {}, "q9wVzy4o": {}, "oiDA2dV0": {}}, "slotId": "4h8hTbs8", "sourceItemId": "fgJlPq42", "tags": ["yzDjRcGH", "E55ktJ0t", "iqRZ3kDR"], "type": "INuyqVAN"}, {"customAttributes": {"zX1cRQOU": {}, "66NEx0rs": {}, "dcOK9lET": {}}, "inventoryId": "PqKi949Y", "serverCustomAttributes": {"LtTTAsRH": {}, "9AFahwMy": {}, "MQNIa9bA": {}}, "slotId": "lO9cbj3W", "sourceItemId": "J6QIxiYi", "tags": ["hd38PhdK", "fC3dlYA1", "17DIkDlG"], "type": "b0bhjD2E"}]}, {"consumeItems": [{"dateRangeValidation": false, "inventoryId": "wNOa52uu", "options": ["fLOcJw0a", "fbam3IYF", "xUiGyj4r"], "qty": 61, "slotId": "3Y2FP3ih", "sourceItemId": "PgNeETGP"}, {"dateRangeValidation": true, "inventoryId": "WsNLNSVX", "options": ["CuLhU0zC", "P2CwUjKM", "HWojDQaS"], "qty": 27, "slotId": "mGGW3qGM", "sourceItemId": "IPkNcgeh"}, {"dateRangeValidation": true, "inventoryId": "pRQW6yWq", "options": ["BLEbvT57", "i3N1cjH6", "YbVe4S6p"], "qty": 4, "slotId": "XC6DbMBO", "sourceItemId": "oCbzR9As"}], "createItems": [{"customAttributes": {"8IY2FtqY": {}, "Dm3RtTFF": {}, "RyGcvhqM": {}}, "inventoryConfigurationCode": "qdSDtYXs", "inventoryId": "fmN2q5IQ", "qty": 35, "serverCustomAttributes": {"wNl33Vys": {}, "lBVVVHmC": {}, "3zolrYAt": {}}, "slotId": "8g92Cp0L", "slotUsed": 87, "source": "OTHER", "sourceItemId": "vbqoz1B7", "tags": ["eoKyTfnX", "CquYINWF", "hiZWRwrY"], "toSpecificInventory": false, "type": "0RBft8Jv"}, {"customAttributes": {"y5C9nPEv": {}, "3sGmaOSE": {}, "u00SBc48": {}}, "inventoryConfigurationCode": "2hLbCNzm", "inventoryId": "vBXSj4Yy", "qty": 60, "serverCustomAttributes": {"XSVGWErT": {}, "135rWEXP": {}, "NGyW6A00": {}}, "slotId": "8Uv0e6YF", "slotUsed": 98, "source": "ECOMMERCE", "sourceItemId": "NvwyDfQH", "tags": ["ptDMwVwe", "JJ49Csxz", "zt3funlf"], "toSpecificInventory": false, "type": "N6fg6mvr"}, {"customAttributes": {"yrAXnQDR": {}, "dewHnVzd": {}, "dyBDsdvD": {}}, "inventoryConfigurationCode": "0fg6xUZD", "inventoryId": "6wW92M1J", "qty": 92, "serverCustomAttributes": {"MMn6yxDI": {}, "IHkRShlY": {}, "kEmeSHP4": {}}, "slotId": "WZcjMmjE", "slotUsed": 83, "source": "ECOMMERCE", "sourceItemId": "RsUiuEU7", "tags": ["nzxoLC7G", "apxkD9xE", "VMTL1qvf"], "toSpecificInventory": true, "type": "BlUnIM5c"}], "removeItems": [{"inventoryId": "2rGV26my", "slotId": "FknMWYrS", "sourceItemId": "pwkQa563"}, {"inventoryId": "H9yGtmN2", "slotId": "W0ASqIIG", "sourceItemId": "VPee9fuA"}, {"inventoryId": "RRW8qdzK", "slotId": "yMUKGW0o", "sourceItemId": "AZwnXZXu"}], "targetUserId": "2QyCYirZ", "updateItems": [{"customAttributes": {"GzeJYgYY": {}, "ZjU3xqi6": {}, "uxTGdmDH": {}}, "inventoryId": "uKrodMch", "serverCustomAttributes": {"O2X6TBti": {}, "J9jSqHXC": {}, "g3hlB2gX": {}}, "slotId": "cOuk1pcz", "sourceItemId": "hu9WhaoO", "tags": ["BDr6uVD5", "SzKLhdmW", "GE7AVqg9"], "type": "t74MS0OT"}, {"customAttributes": {"6Jf7QtZ8": {}, "jBYqxyeU": {}, "uKX00mc7": {}}, "inventoryId": "GaNu6s1t", "serverCustomAttributes": {"mUlhRSZx": {}, "nqF45i3o": {}, "a2WQVapw": {}}, "slotId": "6br4s4l4", "sourceItemId": "IQtto9LS", "tags": ["7LpI9LBn", "N8McBuXX", "4EeLOeHh"], "type": "4y4UJZaK"}, {"customAttributes": {"u3ccccnD": {}, "jX1V5xpL": {}, "eGRtIPrq": {}}, "inventoryId": "ADNNawQ8", "serverCustomAttributes": {"dE35nrGW": {}, "XYDqc4VR": {}, "ch2577dG": {}}, "slotId": "lKkkyEsp", "sourceItemId": "y6NqPUte", "tags": ["Zi5H5eaA", "w05uRKR6", "lmOfrMvb"], "type": "bZ2JxjzL"}]}, {"consumeItems": [{"dateRangeValidation": false, "inventoryId": "AsJMHlCj", "options": ["1kFViWEC", "72bj7YoQ", "5a0mG310"], "qty": 46, "slotId": "iM3sgeHS", "sourceItemId": "F1vvNlAD"}, {"dateRangeValidation": false, "inventoryId": "ojUw7GSU", "options": ["KtLiqQw7", "YsFbYOUU", "kRo3mR7u"], "qty": 15, "slotId": "icCjFqB8", "sourceItemId": "74SFr9RV"}, {"dateRangeValidation": true, "inventoryId": "BzYzibfB", "options": ["4sDXKcMt", "79J3RBa5", "zI0Qgs27"], "qty": 6, "slotId": "86naJyPu", "sourceItemId": "4fm0V3fk"}], "createItems": [{"customAttributes": {"3c87WmLC": {}, "6hE8dVUo": {}, "XICzsJXC": {}}, "inventoryConfigurationCode": "n5nCU9sf", "inventoryId": "JEdt0KQW", "qty": 15, "serverCustomAttributes": {"UK7T5Sc8": {}, "GNXxUw49": {}, "bylMgGnI": {}}, "slotId": "2Cg7tMhd", "slotUsed": 22, "source": "ECOMMERCE", "sourceItemId": "iD0OeMuX", "tags": ["90ZM7PyN", "w0STeuqK", "ZPWd142X"], "toSpecificInventory": false, "type": "Zh9eI6K4"}, {"customAttributes": {"6Qnbtwaw": {}, "NpBlGKGn": {}, "Tu15BodL": {}}, "inventoryConfigurationCode": "rz0uwfKJ", "inventoryId": "vVOo5Rva", "qty": 74, "serverCustomAttributes": {"JfeZhVAj": {}, "RE7PWBub": {}, "86ngDxAU": {}}, "slotId": "vJnxNM8T", "slotUsed": 99, "source": "OTHER", "sourceItemId": "FqGGfqn6", "tags": ["W5BP35yi", "R07TptHO", "NqYMOxZf"], "toSpecificInventory": false, "type": "ptwFAoJJ"}, {"customAttributes": {"R5d6cR9q": {}, "2d0q2zQX": {}, "cmh4QMP7": {}}, "inventoryConfigurationCode": "rX3RMVwT", "inventoryId": "qjmjxl8m", "qty": 99, "serverCustomAttributes": {"1PGxtdva": {}, "eZzrtlH6": {}, "W1TJbjIu": {}}, "slotId": "4br2XaY3", "slotUsed": 44, "source": "ECOMMERCE", "sourceItemId": "vjElianf", "tags": ["p5NaRxAM", "ysqjQ3xq", "FuBrxlI5"], "toSpecificInventory": false, "type": "MMXWpNkG"}], "removeItems": [{"inventoryId": "j3uF3XGQ", "slotId": "gkukBTFg", "sourceItemId": "6dENMxbG"}, {"inventoryId": "7N4a9enT", "slotId": "PVT4IAHQ", "sourceItemId": "noUUEui4"}, {"inventoryId": "v8n6qAzR", "slotId": "MyTUE6XJ", "sourceItemId": "vEVSSBG7"}], "targetUserId": "gGLUgL6Q", "updateItems": [{"customAttributes": {"aNDgNUQJ": {}, "WPKaE22B": {}, "abDS84kf": {}}, "inventoryId": "hDLHKkdM", "serverCustomAttributes": {"CpeWcazi": {}, "EgC8KokQ": {}, "TBb1Wt0O": {}}, "slotId": "SQLxh7Q2", "sourceItemId": "K9QTkLoo", "tags": ["zD86FEpg", "ZejgoXdn", "L8zU6hFn"], "type": "W7bnundW"}, {"customAttributes": {"PZuwfTIK": {}, "1v3zt6YZ": {}, "gmgsoIje": {}}, "inventoryId": "fOl6EnVP", "serverCustomAttributes": {"OwDlnQps": {}, "VeklJqbG": {}, "JBa43b2n": {}}, "slotId": "dXrxWc4v", "sourceItemId": "8EA80O07", "tags": ["SH3xymfh", "44ZIEWsd", "tNT54g4A"], "type": "s5eNmfkD"}, {"customAttributes": {"WitXMxtR": {}, "6mEQsQJ7": {}, "WBSsclRK": {}}, "inventoryId": "Wlkmvg9B", "serverCustomAttributes": {"bhrvVirK": {}, "jTj9IYiC": {}, "EBPaRhsa": {}}, "slotId": "W60zfKOT", "sourceItemId": "1OmVyCQV", "tags": ["U9nMzfaW", "CxR2txie", "oWn9wBwu"], "type": "r4glPExY"}]}], "requestId": "NxypB16M"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminCreateChainingOperations \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 2 'AdminCreateChainingOperations' test.out

#- 3 AdminListIntegrationConfigurations
$CLI_EXE \
    --sn inventory \
    --op AdminListIntegrationConfigurations \
    --namespace $AB_NAMESPACE \
    --limit '7' \
    --offset '67' \
    --sortBy 'createdAt:asc' \
    > test.out 2>&1
eval_tap $? 3 'AdminListIntegrationConfigurations' test.out

#- 4 AdminCreateIntegrationConfiguration
# body param: body
echo '{"mapItemType": ["OTrY9ty3", "ZdAxAUCv", "FwybDPJA"], "serviceName": "Lzof8Ucy", "targetInventoryCode": "fy9oPF0g"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminCreateIntegrationConfiguration \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 4 'AdminCreateIntegrationConfiguration' test.out

#- 5 AdminUpdateIntegrationConfiguration
# body param: body
echo '{"mapItemType": ["4gjIsV1U", "Mtx4ScPy", "8SEc3vWT"], "serviceName": "zgzzQhUc", "targetInventoryCode": "PB3lCSs9"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminUpdateIntegrationConfiguration \
    --integrationConfigurationId 'SyWADvn7' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 5 'AdminUpdateIntegrationConfiguration' test.out

#- 6 AdminUpdateStatusIntegrationConfiguration
# body param: body
echo '{"status": "TIED"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminUpdateStatusIntegrationConfiguration \
    --integrationConfigurationId 'x5L8hGOm' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 6 'AdminUpdateStatusIntegrationConfiguration' test.out

#- 7 AdminListInventories
$CLI_EXE \
    --sn inventory \
    --op AdminListInventories \
    --namespace $AB_NAMESPACE \
    --inventoryConfigurationCode 'y7VXfjXv' \
    --limit '14' \
    --offset '10' \
    --sortBy 'updatedAt:asc' \
    --userId 'nTZgKeJg' \
    > test.out 2>&1
eval_tap $? 7 'AdminListInventories' test.out

#- 8 AdminCreateInventory
# body param: body
echo '{"inventoryConfigurationCode": "pW4Xrqf3", "userId": "H2UynA5I"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminCreateInventory \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 8 'AdminCreateInventory' test.out

#- 9 AdminGetInventory
$CLI_EXE \
    --sn inventory \
    --op AdminGetInventory \
    --inventoryId '6y2ubcDa' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 9 'AdminGetInventory' test.out

#- 10 AdminUpdateInventory
# body param: body
echo '{"incMaxSlots": 51}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminUpdateInventory \
    --inventoryId 'uetBGvhQ' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 10 'AdminUpdateInventory' test.out

#- 11 DeleteInventory
# body param: body
echo '{"message": "0FPl2dl1"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op DeleteInventory \
    --inventoryId 'iItPW9vZ' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 11 'DeleteInventory' test.out

#- 12 AdminListItems
$CLI_EXE \
    --sn inventory \
    --op AdminListItems \
    --inventoryId 'TxWR7J5u' \
    --namespace $AB_NAMESPACE \
    --limit '52' \
    --offset '57' \
    --sortBy 'updatedAt' \
    --sourceItemId 'tTPw3DIm' \
    --tags 'PssYO4jn' \
    > test.out 2>&1
eval_tap $? 12 'AdminListItems' test.out

#- 13 AdminGetInventoryItem
$CLI_EXE \
    --sn inventory \
    --op AdminGetInventoryItem \
    --inventoryId 'pz5oF4uz' \
    --namespace $AB_NAMESPACE \
    --slotId 'BEEz9l4E' \
    --sourceItemId 'e6YwlTub' \
    > test.out 2>&1
eval_tap $? 13 'AdminGetInventoryItem' test.out

#- 14 AdminListInventoryConfigurations
$CLI_EXE \
    --sn inventory \
    --op AdminListInventoryConfigurations \
    --namespace $AB_NAMESPACE \
    --code 'W9JjQIR5' \
    --limit '66' \
    --offset '95' \
    --sortBy 'createdAt:desc' \
    > test.out 2>&1
eval_tap $? 14 'AdminListInventoryConfigurations' test.out

#- 15 AdminCreateInventoryConfiguration
# body param: body
echo '{"code": "ITuQejv4", "description": "6AIiZ43n", "initialMaxSlots": 10, "maxInstancesPerUser": 84, "maxUpgradeSlots": 17, "name": "SAKlhxC4"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminCreateInventoryConfiguration \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 15 'AdminCreateInventoryConfiguration' test.out

#- 16 AdminGetInventoryConfiguration
$CLI_EXE \
    --sn inventory \
    --op AdminGetInventoryConfiguration \
    --inventoryConfigurationId 'iWZugyZ0' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 16 'AdminGetInventoryConfiguration' test.out

#- 17 AdminUpdateInventoryConfiguration
# body param: body
echo '{"code": "AT2Shllk", "description": "Bu9wTofU", "initialMaxSlots": 31, "maxInstancesPerUser": 88, "maxUpgradeSlots": 57, "name": "Xsxxjxn9"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminUpdateInventoryConfiguration \
    --inventoryConfigurationId 'XsYCEyM7' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 17 'AdminUpdateInventoryConfiguration' test.out

#- 18 AdminDeleteInventoryConfiguration
$CLI_EXE \
    --sn inventory \
    --op AdminDeleteInventoryConfiguration \
    --inventoryConfigurationId 'ObDHmI6J' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 18 'AdminDeleteInventoryConfiguration' test.out

#- 19 AdminListItemTypes
$CLI_EXE \
    --sn inventory \
    --op AdminListItemTypes \
    --namespace $AB_NAMESPACE \
    --limit '9' \
    --offset '12' \
    --sortBy 'name:asc' \
    > test.out 2>&1
eval_tap $? 19 'AdminListItemTypes' test.out

#- 20 AdminCreateItemType
# body param: body
echo '{"name": "9FFmRe5R"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminCreateItemType \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 20 'AdminCreateItemType' test.out

#- 21 AdminDeleteItemType
$CLI_EXE \
    --sn inventory \
    --op AdminDeleteItemType \
    --itemTypeName 't5YBo60n' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 21 'AdminDeleteItemType' test.out

#- 22 AdminListTags
$CLI_EXE \
    --sn inventory \
    --op AdminListTags \
    --namespace $AB_NAMESPACE \
    --limit '29' \
    --offset '19' \
    --owner 'J3pinEdt' \
    --sortBy 'createdAt' \
    > test.out 2>&1
eval_tap $? 22 'AdminListTags' test.out

#- 23 AdminCreateTag
# body param: body
echo '{"name": "8VGODVpA", "owner": "CLIENT"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminCreateTag \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 23 'AdminCreateTag' test.out

#- 24 AdminDeleteTag
$CLI_EXE \
    --sn inventory \
    --op AdminDeleteTag \
    --namespace $AB_NAMESPACE \
    --tagName 'FJUo2IYJ' \
    > test.out 2>&1
eval_tap $? 24 'AdminDeleteTag' test.out

#- 25 AdminConsumeUserItem
# body param: body
echo '{"options": ["Xg7YgAA2", "TJThEESb", "VqZoWsni"], "qty": 2, "slotId": "IFWKVr98", "sourceItemId": "c8ypii3Z"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminConsumeUserItem \
    --inventoryId 'uHGFoS3J' \
    --namespace $AB_NAMESPACE \
    --userId 'dV2LAMHg' \
    --dateRangeValidation 'NnG0TUBk' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 25 'AdminConsumeUserItem' test.out

#- 26 AdminBulkUpdateMyItems
# body param: body
echo '[{"customAttributes": {"p5UoEXN0": {}, "gDzm3ImL": {}, "5UoIsBIA": {}}, "serverCustomAttributes": {"W1I5Wh8f": {}, "tHUWxnwx": {}, "75NPViUQ": {}}, "slotId": "jE8KWTiM", "sourceItemId": "e9fduHcq", "tags": ["qwm8UhbA", "FRQoPRyP", "ZJfOgfK2"], "type": "kMcvvF0T"}, {"customAttributes": {"7cJSTq0o": {}, "BFsqiM7R": {}, "EWpcDQwq": {}}, "serverCustomAttributes": {"NlwQsiJZ": {}, "3iqgm0Vt": {}, "53g1yvqq": {}}, "slotId": "6ivsSKFy", "sourceItemId": "8Us74waz", "tags": ["skYMfAkb", "GDOYFwvl", "uhp6IZ2E"], "type": "t14rhkJO"}, {"customAttributes": {"mlYoMEpO": {}, "hLrkj192": {}, "QrLWxwcp": {}}, "serverCustomAttributes": {"rjI82pb2": {}, "NVUfgLFy": {}, "J9hyg1gM": {}}, "slotId": "VRGC1bvK", "sourceItemId": "zRnExQl2", "tags": ["vFxEvT1z", "1mPS8wRC", "N3ElAqjy"], "type": "4bA4wI4l"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminBulkUpdateMyItems \
    --inventoryId 'vgjmDVFz' \
    --namespace $AB_NAMESPACE \
    --userId 'O2LOEZt4' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 26 'AdminBulkUpdateMyItems' test.out

#- 27 AdminSaveItemToInventory
# body param: body
echo '{"customAttributes": {"VVhVPmGC": {}, "BFqY9YIe": {}, "zRGGtWpt": {}}, "qty": 56, "serverCustomAttributes": {"RHZUnfh8": {}, "UHr0TrjT": {}, "D71oeutC": {}}, "slotId": "4RNmUUOZ", "slotUsed": 6, "source": "ECOMMERCE", "sourceItemId": "MKyrBm1L", "tags": ["RKUcNJKq", "wAU8m5FQ", "rHyTDBW2"], "type": "pkSgUtZf"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminSaveItemToInventory \
    --inventoryId 'e3D6q931' \
    --namespace $AB_NAMESPACE \
    --userId '1mFK5w0g' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 27 'AdminSaveItemToInventory' test.out

#- 28 AdminBulkRemoveItems
# body param: body
echo '[{"slotId": "lsDlAQoo", "sourceItemId": "JfE7jtFL"}, {"slotId": "lTCgKO2u", "sourceItemId": "jbdR8LJb"}, {"slotId": "1fLUUrTo", "sourceItemId": "2EsGr7pc"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminBulkRemoveItems \
    --inventoryId 'dDFRVGqJ' \
    --namespace $AB_NAMESPACE \
    --userId 'Di2YTCT6' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 28 'AdminBulkRemoveItems' test.out

#- 29 AdminBulkSaveItemToInventory
# body param: body
echo '[{"customAttributes": {"kxqdts3j": {}, "ugikcN3i": {}, "EFiN5lOo": {}}, "qty": 14, "serverCustomAttributes": {"tu7g22sa": {}, "UlCjpYGF": {}, "SOwOfrsR": {}}, "slotId": "qszL4Rdf", "slotUsed": 41, "source": "ECOMMERCE", "sourceItemId": "NWjK90gP", "tags": ["nIzSCb8Z", "6va5dTxB", "EM1FTOmz"], "type": "3ksLl46l"}, {"customAttributes": {"mpD3L9S3": {}, "eA5immjx": {}, "3wXrJHG2": {}}, "qty": 84, "serverCustomAttributes": {"sUuM43pB": {}, "sCFEUA6E": {}, "s2uOOcWC": {}}, "slotId": "ibG8qcSQ", "slotUsed": 95, "source": "ECOMMERCE", "sourceItemId": "ACJYxoFw", "tags": ["598uLosN", "JSHZf8C0", "zdbj2w8W"], "type": "2FThuGfs"}, {"customAttributes": {"or0Zw1WU": {}, "SRAWDGDE": {}, "Fq3WsILl": {}}, "qty": 73, "serverCustomAttributes": {"0f0MbZNu": {}, "WuWXcvgJ": {}, "CkHYrOov": {}}, "slotId": "XItqTgKf", "slotUsed": 16, "source": "OTHER", "sourceItemId": "fAlVSyJ0", "tags": ["qToaNReQ", "JWToAA9q", "0kfWW5zX"], "type": "J96fB8us"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminBulkSaveItemToInventory \
    --inventoryId '0x317xXp' \
    --namespace $AB_NAMESPACE \
    --userId 'XAxkI1zs' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 29 'AdminBulkSaveItemToInventory' test.out

#- 30 AdminUpdateUserInventoriesByInventoryCode
# body param: body
echo '{"incMaxSlots": 71}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminUpdateUserInventoriesByInventoryCode \
    --inventoryConfigurationCode 'zrfgw3Qc' \
    --namespace $AB_NAMESPACE \
    --userId '0ipICmZO' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 30 'AdminUpdateUserInventoriesByInventoryCode' test.out

#- 31 AdminSaveItem
# body param: body
echo '{"customAttributes": {"qlZuf09N": {}, "EeDMfCNQ": {}, "Ofa2vb9T": {}}, "inventoryConfigurationCode": "v5WWuBmf", "qty": 17, "serverCustomAttributes": {"kgWfGfUF": {}, "tOcZL1EA": {}, "sbWSgK88": {}}, "slotId": "gPtUS7KN", "slotUsed": 79, "source": "OTHER", "sourceItemId": "uORFGRuq", "tags": ["GiRE9FwF", "b7gE4D5G", "IUflk5I4"], "type": "VOjOlzlm"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminSaveItem \
    --namespace $AB_NAMESPACE \
    --userId 'aEh4s80P' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 31 'AdminSaveItem' test.out

#- 32 AdminBulkSaveItem
# body param: body
echo '[{"customAttributes": {"LQ7q4xeV": {}, "oPrar5in": {}, "on7D58c8": {}}, "inventoryConfigurationCode": "CRIcmRx6", "qty": 65, "serverCustomAttributes": {"GD0fVKSj": {}, "SiGcfYfu": {}, "IbVwge16": {}}, "slotId": "0vVUUBZR", "slotUsed": 36, "source": "ECOMMERCE", "sourceItemId": "azAUOrKW", "tags": ["xy8KfpWy", "I2taZGdt", "JrLojwLT"], "type": "UzJAbVNb"}, {"customAttributes": {"Sb0oGLGn": {}, "nicJdPeP": {}, "BE44kLEl": {}}, "inventoryConfigurationCode": "iM6s72Un", "qty": 48, "serverCustomAttributes": {"RIhNHz2U": {}, "kDbrlx5j": {}, "h7lEYfC7": {}}, "slotId": "5dNsLy99", "slotUsed": 40, "source": "ECOMMERCE", "sourceItemId": "7pTTtCi7", "tags": ["qw9tw7Ur", "z00iXJBL", "35DMUoeZ"], "type": "gyeC34PE"}, {"customAttributes": {"O0JHYHhn": {}, "3aWCkaXE": {}, "w7Aja6Vx": {}}, "inventoryConfigurationCode": "w5vkL5mE", "qty": 5, "serverCustomAttributes": {"lARCXr7G": {}, "xwCPwmA3": {}, "O4FkiKZF": {}}, "slotId": "iURwbmgj", "slotUsed": 87, "source": "ECOMMERCE", "sourceItemId": "KThu1OSg", "tags": ["dTu2H9Xx", "asmJ3FWk", "DmGTuKR0"], "type": "5On6eNtj"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminBulkSaveItem \
    --namespace $AB_NAMESPACE \
    --userId 'qhukv5AZ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 32 'AdminBulkSaveItem' test.out

#- 33 AdminSyncUserEntitlements
$CLI_EXE \
    --sn inventory \
    --op AdminSyncUserEntitlements \
    --namespace $AB_NAMESPACE \
    --userId 'a5i0egyO' \
    > test.out 2>&1
eval_tap $? 33 'AdminSyncUserEntitlements' test.out

#- 34 AdminPurchasable
# body param: body
echo '{"entitlementType": "EvP3pXPX", "inventoryConfig": {"slotUsed": 24}, "itemId": "x3ZLVmuG", "itemType": "6len928U", "items": [{"bundledQty": 70, "entitlementType": "T1aEbpJo", "inventoryConfig": {"slotUsed": 91}, "itemId": "38BIeUQ5", "itemType": "jAzRDjzH", "sku": "fNfBqTf7", "stackable": true, "useCount": 24}, {"bundledQty": 90, "entitlementType": "dGbVNu0U", "inventoryConfig": {"slotUsed": 24}, "itemId": "Sbaa0YQd", "itemType": "ISR8990Q", "sku": "L4eshxx8", "stackable": true, "useCount": 36}, {"bundledQty": 39, "entitlementType": "9ekykTZc", "inventoryConfig": {"slotUsed": 88}, "itemId": "b4XDabWJ", "itemType": "Q9bAr09C", "sku": "BAleRRfi", "stackable": false, "useCount": 51}], "quantity": 15, "sku": "opfa7ct1", "stackable": false, "useCount": 97}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminPurchasable \
    --namespace $AB_NAMESPACE \
    --userId '5rbqP7lB' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 34 'AdminPurchasable' test.out

#- 35 PublicListInventoryConfigurations
$CLI_EXE \
    --sn inventory \
    --op PublicListInventoryConfigurations \
    --namespace $AB_NAMESPACE \
    --code 'JtfLdGqP' \
    --limit '28' \
    --offset '36' \
    --sortBy 'updatedAt:desc' \
    > test.out 2>&1
eval_tap $? 35 'PublicListInventoryConfigurations' test.out

#- 36 PublicListItemTypes
$CLI_EXE \
    --sn inventory \
    --op PublicListItemTypes \
    --namespace $AB_NAMESPACE \
    --limit '17' \
    --offset '66' \
    --sortBy 'createdAt:desc' \
    > test.out 2>&1
eval_tap $? 36 'PublicListItemTypes' test.out

#- 37 PublicListTags
$CLI_EXE \
    --sn inventory \
    --op PublicListTags \
    --namespace $AB_NAMESPACE \
    --limit '11' \
    --offset '81' \
    --sortBy 'createdAt:desc' \
    > test.out 2>&1
eval_tap $? 37 'PublicListTags' test.out

#- 38 PublicListInventories
$CLI_EXE \
    --sn inventory \
    --op PublicListInventories \
    --namespace $AB_NAMESPACE \
    --inventoryConfigurationCode 'fQijPb8z' \
    --limit '59' \
    --offset '58' \
    --sortBy 'createdAt:desc' \
    > test.out 2>&1
eval_tap $? 38 'PublicListInventories' test.out

#- 39 PublicConsumeMyItem
# body param: body
echo '{"options": ["YrrYDd3e", "nBRk3bMc", "yi6SACtC"], "qty": 90, "slotId": "P4IFgxQf", "sourceItemId": "rm9y4OC4"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op PublicConsumeMyItem \
    --inventoryId 'ner85fU3' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 39 'PublicConsumeMyItem' test.out

#- 40 PublicListItems
$CLI_EXE \
    --sn inventory \
    --op PublicListItems \
    --inventoryId 'Z2uGAmxR' \
    --namespace $AB_NAMESPACE \
    --limit '97' \
    --offset '63' \
    --sortBy 'createdAt:asc' \
    --sourceItemId 'D0qxsyzL' \
    --tags 'HyHJeujg' \
    > test.out 2>&1
eval_tap $? 40 'PublicListItems' test.out

#- 41 PublicBulkUpdateMyItems
# body param: body
echo '[{"customAttributes": {"Bf6dEjfF": {}, "p0rE2WTZ": {}, "NBbyb3AL": {}}, "slotId": "Kz3IpKSR", "sourceItemId": "nz9egoEB", "tags": ["D1R8weyI", "fj83wVt7", "xDwenzf6"]}, {"customAttributes": {"Ggb8sxOY": {}, "FUBgVVaL": {}, "XoXb7m03": {}}, "slotId": "JOY2oTiw", "sourceItemId": "Wb27AB2U", "tags": ["b7qPT4t8", "tLkBv6rq", "qdiP267T"]}, {"customAttributes": {"uJ3io5SP": {}, "QvZbaFcA": {}, "Ge2nLphb": {}}, "slotId": "vWOOs8aA", "sourceItemId": "VQXniQdi", "tags": ["Lz9Hiys9", "SADkHGtT", "D4BwwN00"]}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op PublicBulkUpdateMyItems \
    --inventoryId '0otTkMev' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 41 'PublicBulkUpdateMyItems' test.out

#- 42 PublicBulkRemoveMyItems
# body param: body
echo '[{"slotId": "uc2pg8Ni", "sourceItemId": "0uGbFSxR"}, {"slotId": "A3pPdHu7", "sourceItemId": "xMVQmc4j"}, {"slotId": "V5CH9J3u", "sourceItemId": "HigsufPm"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op PublicBulkRemoveMyItems \
    --inventoryId 'TOSchfu5' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 42 'PublicBulkRemoveMyItems' test.out

#- 43 PublicMoveMyItems
# body param: body
echo '{"items": [{"qty": 6, "slotId": "Mdamiy1m", "sourceItemId": "C5cVmOgv"}, {"qty": 4, "slotId": "2t55scdE", "sourceItemId": "0Ap0rV0H"}, {"qty": 20, "slotId": "In3Dp507", "sourceItemId": "zGdZv4Iv"}], "srcInventoryId": "DPuPVwKD"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op PublicMoveMyItems \
    --inventoryId 'VtDsfn1A' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 43 'PublicMoveMyItems' test.out

#- 44 PublicGetItem
$CLI_EXE \
    --sn inventory \
    --op PublicGetItem \
    --inventoryId '8dtD6K3A' \
    --namespace $AB_NAMESPACE \
    --slotId 'pHTudzNZ' \
    --sourceItemId '40gnIYst' \
    > test.out 2>&1
eval_tap $? 44 'PublicGetItem' test.out


# remove artifacts
rm -f "$CLI_TOKEN_FILE"
rm -f "$TEMP_JSON_INPUT"
rm -f "$TEMP_FILE_UPLOAD"

exit $EXIT_CODE