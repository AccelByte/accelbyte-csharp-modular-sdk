#!/usr/bin/env bash

# Copyright (c) 2021 AccelByte Inc. All Rights Reserved.
# This is licensed software from AccelByte Inc, for limitations
# and restrictions contact your company contract manager.

# This code is generated by tool. DO NOT EDIT.

# Meta:
# - random seed: 
# - template file: 

# Instructions:
# - Run the Justice SDK Mock Server first before running this script.

export AB_BASE_URL="http://127.0.0.1:8080"
export AB_CLIENT_ID="admin"
export AB_CLIENT_SECRET="admin"
export AB_NAMESPACE="test"
export AB_APP_NAME="UnitTest"

EXIT_CODE=0

eval_tap() {
  if [ $1 -eq 0 ]; then
    echo "ok $2 - $3"
  else
    EXIT_CODE=1
    echo "not ok $2 - $3"
    sed 's/^/# /g' $4
  fi
  rm -f $4
}

CLI_EXE="AccelByte.Sdk.Sample.Cli"
CLI_TOKEN_FILE="$(dirname "$(which $CLI_EXE)")/token.json"
TEMP_JSON_INPUT="input_json.json"
TEMP_FILE_UPLOAD="file_upload.bin"

echo "TAP version 13"
echo "1..44"

#- 1 Login
$CLI_EXE --op login --lt user --user user --pass user > test.out 2>&1
eval_tap $? 1 'Login' test.out

if [ $EXIT_CODE -ne 0 ]; then
  echo "Bail out! Login failed."
  exit $EXIT_CODE
fi

# echo "foo" > "$CLI_TOKEN_FILE"

#- 2 AdminCreateChainingOperations
# body param: body
echo '{"message": "oXRILpmV", "operations": [{"consumeItems": [{"dateRangeValidation": false, "inventoryId": "ut5PWL1j", "options": ["3iwFkRE1", "QBWEGRiz", "GMy2upON"], "qty": 5, "slotId": "WkxIQ2TJ", "sourceItemId": "0UyIdte7"}, {"dateRangeValidation": false, "inventoryId": "nTf8AxFG", "options": ["VxNfUeSZ", "2Eins6Ik", "r5H0neSt"], "qty": 34, "slotId": "D1S5svLM", "sourceItemId": "w9N9uvaN"}, {"dateRangeValidation": true, "inventoryId": "heLdfcap", "options": ["Kfc2v8q3", "xEk7Nhdv", "JVUpL8Rn"], "qty": 30, "slotId": "ZGhzM7lz", "sourceItemId": "r0zdTEaW"}], "createItems": [{"customAttributes": {"rZeu1vNy": {}, "Y9AQVTda": {}, "1Ott91b2": {}}, "inventoryConfigurationCode": "BbwwGU0A", "inventoryId": "0QrVyvvB", "qty": 27, "serverCustomAttributes": {"hQNItrvG": {}, "cyioNImP": {}, "pVpS23Bu": {}}, "slotId": "lW8oSlID", "slotUsed": 69, "source": "ECOMMERCE", "sourceItemId": "1p4v0OQx", "tags": ["ieAJ9JyE", "bu53xaVY", "XlN7swtV"], "toSpecificInventory": true, "type": "18jNiQcW"}, {"customAttributes": {"ujqTM4BJ": {}, "e5gok69D": {}, "2s9hgFvH": {}}, "inventoryConfigurationCode": "43MCcmbf", "inventoryId": "wQbO4XgR", "qty": 29, "serverCustomAttributes": {"oC9mMml2": {}, "JQDrAfdS": {}, "vI6ul9DY": {}}, "slotId": "7iN0GYcL", "slotUsed": 7, "source": "OTHER", "sourceItemId": "VMSeu4VO", "tags": ["s4pLwDLo", "ug9Z44jp", "CDhDLh27"], "toSpecificInventory": false, "type": "mJz4HJ8y"}, {"customAttributes": {"oDcaMfCD": {}, "rVXUoUCi": {}, "U8h0NHRW": {}}, "inventoryConfigurationCode": "AI9yMOGv", "inventoryId": "RxiYXKNV", "qty": 72, "serverCustomAttributes": {"ynMPxGCw": {}, "BvfgR4OC": {}, "nOcBAIvD": {}}, "slotId": "9uNlytcS", "slotUsed": 97, "source": "OTHER", "sourceItemId": "E7Jj5G6u", "tags": ["Tq6ZxuPU", "EMYwUkK2", "gEIhmUhF"], "toSpecificInventory": false, "type": "hcYO3GTI"}], "removeItems": [{"inventoryId": "WDrk54fL", "slotId": "aO2DqVzD", "sourceItemId": "XMqCKW9a"}, {"inventoryId": "RUnoxdqm", "slotId": "VUHcl2F0", "sourceItemId": "N1gvtVt5"}, {"inventoryId": "Ri4tFyF1", "slotId": "lM2fuZgK", "sourceItemId": "cMRTJRDB"}], "targetUserId": "ml3TVliW", "updateItems": [{"customAttributes": {"EsDqzZGt": {}, "tEXrrScV": {}, "zEgcgbIE": {}}, "inventoryId": "ucaGSM1y", "serverCustomAttributes": {"F4JhixKG": {}, "eE1F2Qy7": {}, "xhmOzruz": {}}, "slotId": "sHxWHvmU", "sourceItemId": "1Zo3QJdh", "tags": ["xJxl8D1c", "4jYTXfVu", "izPUrxBZ"], "type": "THnleXM4"}, {"customAttributes": {"dBgfgdV0": {}, "M70gLkrB": {}, "DXkOcie2": {}}, "inventoryId": "SZRZ7F1T", "serverCustomAttributes": {"p5t0INQ5": {}, "v9EpNfE4": {}, "9y8kc1Bw": {}}, "slotId": "PovNXXnJ", "sourceItemId": "XfroAY8n", "tags": ["2APHj83q", "SWsjdyVw", "7leXVFPn"], "type": "2pQdqCzX"}, {"customAttributes": {"DohE12HQ": {}, "WA41civY": {}, "dQHL09zr": {}}, "inventoryId": "ylYmFKZ1", "serverCustomAttributes": {"96t6aaaW": {}, "V2ds13yo": {}, "cFPsdxxU": {}}, "slotId": "exCuqSIl", "sourceItemId": "FEwICHdw", "tags": ["jAmoZ6Ls", "V71gV2Fs", "cOQZdrjy"], "type": "fZ0RmDGq"}]}, {"consumeItems": [{"dateRangeValidation": true, "inventoryId": "d07frNP5", "options": ["CXbRiPd5", "XOXC2SXd", "FD20BDbD"], "qty": 90, "slotId": "U6xcAHZT", "sourceItemId": "NcRgQuTO"}, {"dateRangeValidation": true, "inventoryId": "Olsq2syN", "options": ["MEbgY0oT", "HhSax1oa", "sDpWd0Oh"], "qty": 54, "slotId": "x63igXxF", "sourceItemId": "N4u0GPau"}, {"dateRangeValidation": false, "inventoryId": "7O21vZWP", "options": ["sS4ElT3Q", "PJy9Qeqt", "Cy4fNYNE"], "qty": 14, "slotId": "l0aJbbHa", "sourceItemId": "vtdzCNGA"}], "createItems": [{"customAttributes": {"qPAi9n3p": {}, "EWLCkl53": {}, "EZLHVWtr": {}}, "inventoryConfigurationCode": "coiW1knn", "inventoryId": "dQHJNBoe", "qty": 63, "serverCustomAttributes": {"AoQSFtnV": {}, "2B4LUwok": {}, "mbtuNGBk": {}}, "slotId": "kzrMluPh", "slotUsed": 78, "source": "OTHER", "sourceItemId": "tWmUcxkW", "tags": ["H445AWxu", "rbCZgFMH", "H4pK5aW0"], "toSpecificInventory": false, "type": "I2pZLL38"}, {"customAttributes": {"4JRMOJm3": {}, "l1oGz7tF": {}, "NHGuzXTx": {}}, "inventoryConfigurationCode": "wIlBJpfd", "inventoryId": "OlNX9wVs", "qty": 27, "serverCustomAttributes": {"W7Y0G2iF": {}, "fMEpF3Sr": {}, "PaCKGnlZ": {}}, "slotId": "Ypvteahv", "slotUsed": 91, "source": "OTHER", "sourceItemId": "BQnw1t3F", "tags": ["RSAxBsio", "lV6ltUR3", "2CI6IEOI"], "toSpecificInventory": false, "type": "a7cjrIBU"}, {"customAttributes": {"JNYfgoB5": {}, "ye9iDA0z": {}, "MD2LTjD6": {}}, "inventoryConfigurationCode": "P3lgmoEl", "inventoryId": "Q8gl9Hgf", "qty": 74, "serverCustomAttributes": {"tOe0B6p7": {}, "HwWhUU1l": {}, "LvNOeQ3o": {}}, "slotId": "FUHCLISQ", "slotUsed": 6, "source": "ECOMMERCE", "sourceItemId": "KeznZlPY", "tags": ["S9WB7J5l", "xEkRkGpA", "NMK0wv0w"], "toSpecificInventory": true, "type": "1r0tqE5C"}], "removeItems": [{"inventoryId": "rBigqDTd", "slotId": "fB7VRhy0", "sourceItemId": "I8UXYTGJ"}, {"inventoryId": "ftNtE2k0", "slotId": "fzl5cBPw", "sourceItemId": "H47X5Nyu"}, {"inventoryId": "uikZTapw", "slotId": "21FEs3lW", "sourceItemId": "huZUQiWe"}], "targetUserId": "NaoVo03F", "updateItems": [{"customAttributes": {"ohvonvjB": {}, "QzjZLTTy": {}, "TCEeoTzd": {}}, "inventoryId": "ok36ZzvC", "serverCustomAttributes": {"E5qgVJul": {}, "LXxUbzmZ": {}, "Dy0RP4nU": {}}, "slotId": "LDtE58Nr", "sourceItemId": "VsvLjvov", "tags": ["hBGHjrl6", "nKiAPiqj", "CC6qHjMH"], "type": "2CIHuegA"}, {"customAttributes": {"G35ay8SV": {}, "jD6vKPhp": {}, "xQmCgvO0": {}}, "inventoryId": "KbwtbeFP", "serverCustomAttributes": {"LiUstxfV": {}, "z0uflDrg": {}, "wGJ9tSVV": {}}, "slotId": "XSpG6W9m", "sourceItemId": "KYdgU7tg", "tags": ["iPLku4JA", "UlOJib4R", "T3H5jNYJ"], "type": "XkuW0fhw"}, {"customAttributes": {"clhH08qk": {}, "lB99dWOA": {}, "EBxrxvVU": {}}, "inventoryId": "7LKByigZ", "serverCustomAttributes": {"pbHF9OoD": {}, "1HdxZkBv": {}, "Mgc2WgCp": {}}, "slotId": "6VmlVAJh", "sourceItemId": "tAVNX9Ob", "tags": ["xLQOoh5g", "E5tdWyWN", "lJqA4oWL"], "type": "KqPXRnqE"}]}, {"consumeItems": [{"dateRangeValidation": true, "inventoryId": "G9eOzPta", "options": ["fzy8KKFk", "mzYl8iJZ", "XXVTjwCq"], "qty": 96, "slotId": "VPrqaPdf", "sourceItemId": "5W486YHM"}, {"dateRangeValidation": true, "inventoryId": "wwB9owYv", "options": ["gHHBK4j9", "WponApnJ", "oBbN4R5I"], "qty": 14, "slotId": "Qhsr887r", "sourceItemId": "TOO1o31D"}, {"dateRangeValidation": true, "inventoryId": "YMbVvUcV", "options": ["7NlkItPm", "UYgRcO0u", "pfdel3vr"], "qty": 77, "slotId": "b5lOVgwk", "sourceItemId": "c1ztSCla"}], "createItems": [{"customAttributes": {"kTi5F8sO": {}, "L6luMUqP": {}, "cGQet1dw": {}}, "inventoryConfigurationCode": "BDvUe7JP", "inventoryId": "vaPfB9R3", "qty": 32, "serverCustomAttributes": {"sv5qHnER": {}, "t5D1QqY7": {}, "UGanxinF": {}}, "slotId": "ZyrLewPf", "slotUsed": 91, "source": "ECOMMERCE", "sourceItemId": "5q5H4wXn", "tags": ["cP1TAYYm", "4BqFjUQx", "67s4OqBO"], "toSpecificInventory": false, "type": "xdwPkGc9"}, {"customAttributes": {"3fR8Tawv": {}, "5qFbUMS8": {}, "iQrGHU2t": {}}, "inventoryConfigurationCode": "AuxpKdP6", "inventoryId": "96D3i4II", "qty": 41, "serverCustomAttributes": {"smhj3lp1": {}, "uS9MWleQ": {}, "CLum9PxI": {}}, "slotId": "IV0h27tA", "slotUsed": 32, "source": "OTHER", "sourceItemId": "8sUT4duJ", "tags": ["AY1PCiRa", "DeRvUNdU", "PvInCFkf"], "toSpecificInventory": false, "type": "tGJDGy3e"}, {"customAttributes": {"8bLsDYwx": {}, "F71PZYKn": {}, "SSr3amMs": {}}, "inventoryConfigurationCode": "vCGKgWRF", "inventoryId": "h64wP6FW", "qty": 84, "serverCustomAttributes": {"TsOrhZMG": {}, "oJW5FVRd": {}, "La3PG8ec": {}}, "slotId": "dxlDFmOC", "slotUsed": 60, "source": "OTHER", "sourceItemId": "ivKKlQeb", "tags": ["EiZFDqd5", "ZozFaXb7", "fKxhv8Fa"], "toSpecificInventory": true, "type": "xa81ktY8"}], "removeItems": [{"inventoryId": "LO91U1vQ", "slotId": "c6jH7lem", "sourceItemId": "94s23Kfo"}, {"inventoryId": "ey3d3poY", "slotId": "FKBm0X6c", "sourceItemId": "INyw0CEh"}, {"inventoryId": "J55ElaWL", "slotId": "Nau7AKOf", "sourceItemId": "MYTfvPfl"}], "targetUserId": "h69HAN1v", "updateItems": [{"customAttributes": {"xoFV5508": {}, "R5FpVwmp": {}, "0REc67Kw": {}}, "inventoryId": "aDVQ3RIu", "serverCustomAttributes": {"d0mpYI4D": {}, "ecPej8Cr": {}, "9SMPDzcz": {}}, "slotId": "qWzekT2S", "sourceItemId": "wGJN5Ekk", "tags": ["QEWjcevc", "qCrVqZ64", "sz5q3gYa"], "type": "7x62TnOB"}, {"customAttributes": {"n9fSC31O": {}, "eFqqjQtG": {}, "e0mf3NW9": {}}, "inventoryId": "5Ymya8qb", "serverCustomAttributes": {"izgxIcFw": {}, "7QzOpLdl": {}, "zzYsjGkT": {}}, "slotId": "X5l0M2Xi", "sourceItemId": "NseZBkO7", "tags": ["y6GIKFhk", "syS3IptX", "0M2fWLxR"], "type": "p7XIXyRT"}, {"customAttributes": {"ZuXq6dv2": {}, "zCoYZYZ9": {}, "pwC0dAjt": {}}, "inventoryId": "BwOSKh8t", "serverCustomAttributes": {"8tTFFIqX": {}, "R0Gd9o8C": {}, "I8coK1k2": {}}, "slotId": "ttYNN39P", "sourceItemId": "IdnfyjNS", "tags": ["Ozt5s4pr", "XwUC35eV", "IJW6kxGc"], "type": "L4df0vcL"}]}], "requestId": "iE6Vrhea"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminCreateChainingOperations \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 2 'AdminCreateChainingOperations' test.out

#- 3 AdminListIntegrationConfigurations
$CLI_EXE \
    --sn inventory \
    --op AdminListIntegrationConfigurations \
    --namespace $AB_NAMESPACE \
    --limit '6' \
    --offset '70' \
    --sortBy 'createdAt:asc' \
    > test.out 2>&1
eval_tap $? 3 'AdminListIntegrationConfigurations' test.out

#- 4 AdminCreateIntegrationConfiguration
# body param: body
echo '{"mapItemType": ["0vkY2igZ", "OouqgHYj", "njKa3Qbj"], "serviceName": "9UPRDpwM", "targetInventoryCode": "En9AWEYJ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminCreateIntegrationConfiguration \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 4 'AdminCreateIntegrationConfiguration' test.out

#- 5 AdminUpdateIntegrationConfiguration
# body param: body
echo '{"mapItemType": ["UcCnPLBc", "6kXgGHGn", "a55XuDVH"], "serviceName": "Wxyms5xi", "targetInventoryCode": "ehrlBadD"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminUpdateIntegrationConfiguration \
    --integrationConfigurationId 'mdPcVmex' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 5 'AdminUpdateIntegrationConfiguration' test.out

#- 6 AdminUpdateStatusIntegrationConfiguration
# body param: body
echo '{"status": "TIED"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminUpdateStatusIntegrationConfiguration \
    --integrationConfigurationId 'hkqLKaaU' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 6 'AdminUpdateStatusIntegrationConfiguration' test.out

#- 7 AdminListInventories
$CLI_EXE \
    --sn inventory \
    --op AdminListInventories \
    --namespace $AB_NAMESPACE \
    --inventoryConfigurationCode 'Zs2WD0V3' \
    --limit '11' \
    --offset '98' \
    --sortBy 'updatedAt:asc' \
    --userId 'IFmrfP52' \
    > test.out 2>&1
eval_tap $? 7 'AdminListInventories' test.out

#- 8 AdminCreateInventory
# body param: body
echo '{"inventoryConfigurationCode": "afS3bmB1", "userId": "2R3R2AAJ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminCreateInventory \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 8 'AdminCreateInventory' test.out

#- 9 AdminGetInventory
$CLI_EXE \
    --sn inventory \
    --op AdminGetInventory \
    --inventoryId 'KCBk7f9J' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 9 'AdminGetInventory' test.out

#- 10 AdminUpdateInventory
# body param: body
echo '{"incMaxSlots": 81}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminUpdateInventory \
    --inventoryId 'emzEbCmd' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 10 'AdminUpdateInventory' test.out

#- 11 DeleteInventory
# body param: body
echo '{"message": "zsk7eopm"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op DeleteInventory \
    --inventoryId '6PqGEVtL' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 11 'DeleteInventory' test.out

#- 12 AdminListItems
$CLI_EXE \
    --sn inventory \
    --op AdminListItems \
    --inventoryId '8G7kaPf2' \
    --namespace $AB_NAMESPACE \
    --limit '30' \
    --offset '15' \
    --sortBy 'updatedAt:asc' \
    --sourceItemId '7yrL4KqN' \
    --tags 'lmSBoCLM' \
    > test.out 2>&1
eval_tap $? 12 'AdminListItems' test.out

#- 13 AdminGetInventoryItem
$CLI_EXE \
    --sn inventory \
    --op AdminGetInventoryItem \
    --inventoryId 'no7TFAXo' \
    --namespace $AB_NAMESPACE \
    --slotId 'dXG9zQy9' \
    --sourceItemId 'pDwu78a5' \
    > test.out 2>&1
eval_tap $? 13 'AdminGetInventoryItem' test.out

#- 14 AdminListInventoryConfigurations
$CLI_EXE \
    --sn inventory \
    --op AdminListInventoryConfigurations \
    --namespace $AB_NAMESPACE \
    --code 'fokmLZYV' \
    --limit '8' \
    --offset '45' \
    --sortBy 'code:desc' \
    > test.out 2>&1
eval_tap $? 14 'AdminListInventoryConfigurations' test.out

#- 15 AdminCreateInventoryConfiguration
# body param: body
echo '{"code": "GGEBURQ2", "description": "7XUc90mP", "initialMaxSlots": 33, "maxInstancesPerUser": 35, "maxUpgradeSlots": 84, "name": "fRHBT3Jy"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminCreateInventoryConfiguration \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 15 'AdminCreateInventoryConfiguration' test.out

#- 16 AdminGetInventoryConfiguration
$CLI_EXE \
    --sn inventory \
    --op AdminGetInventoryConfiguration \
    --inventoryConfigurationId 'z3vxsncI' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 16 'AdminGetInventoryConfiguration' test.out

#- 17 AdminUpdateInventoryConfiguration
# body param: body
echo '{"code": "qppioIgv", "description": "1p5qllOI", "initialMaxSlots": 18, "maxInstancesPerUser": 36, "maxUpgradeSlots": 32, "name": "NYHB1b9a"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminUpdateInventoryConfiguration \
    --inventoryConfigurationId 'z4Rf1h9w' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 17 'AdminUpdateInventoryConfiguration' test.out

#- 18 AdminDeleteInventoryConfiguration
$CLI_EXE \
    --sn inventory \
    --op AdminDeleteInventoryConfiguration \
    --inventoryConfigurationId '397mPeMh' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 18 'AdminDeleteInventoryConfiguration' test.out

#- 19 AdminListItemTypes
$CLI_EXE \
    --sn inventory \
    --op AdminListItemTypes \
    --namespace $AB_NAMESPACE \
    --limit '19' \
    --offset '28' \
    --sortBy 'name:desc' \
    > test.out 2>&1
eval_tap $? 19 'AdminListItemTypes' test.out

#- 20 AdminCreateItemType
# body param: body
echo '{"name": "PJ4yIwlr"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminCreateItemType \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 20 'AdminCreateItemType' test.out

#- 21 AdminDeleteItemType
$CLI_EXE \
    --sn inventory \
    --op AdminDeleteItemType \
    --itemTypeName 'ylz9BIMl' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 21 'AdminDeleteItemType' test.out

#- 22 AdminListTags
$CLI_EXE \
    --sn inventory \
    --op AdminListTags \
    --namespace $AB_NAMESPACE \
    --limit '1' \
    --offset '92' \
    --owner 'r33u2hgH' \
    --sortBy 'name:desc' \
    > test.out 2>&1
eval_tap $? 22 'AdminListTags' test.out

#- 23 AdminCreateTag
# body param: body
echo '{"name": "RTGfHWSy", "owner": "CLIENT"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminCreateTag \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 23 'AdminCreateTag' test.out

#- 24 AdminDeleteTag
$CLI_EXE \
    --sn inventory \
    --op AdminDeleteTag \
    --namespace $AB_NAMESPACE \
    --tagName '7fuMaLAi' \
    > test.out 2>&1
eval_tap $? 24 'AdminDeleteTag' test.out

#- 25 AdminConsumeUserItem
# body param: body
echo '{"options": ["BM5yaeIW", "KRwltKco", "AAgDwxXV"], "qty": 94, "slotId": "kUXtH3K1", "sourceItemId": "VBVcMl1S"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminConsumeUserItem \
    --inventoryId 'EJEsceiA' \
    --namespace $AB_NAMESPACE \
    --userId 'uk4t5Yhm' \
    --dateRangeValidation 'MALJ4x3g' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 25 'AdminConsumeUserItem' test.out

#- 26 AdminBulkUpdateMyItems
# body param: body
echo '[{"customAttributes": {"IfxMoD7e": {}, "Zx26tuoD": {}, "CdOkedFQ": {}}, "serverCustomAttributes": {"6PTteZzl": {}, "HVoag2Co": {}, "7PC7pzSm": {}}, "slotId": "p9kyqXfo", "sourceItemId": "o93E0Stq", "tags": ["7bK7zmwF", "bEkOmH1a", "Oxeupbi8"], "type": "KitretMM"}, {"customAttributes": {"nV3P2xLb": {}, "hd7Bx3dT": {}, "qNbJddto": {}}, "serverCustomAttributes": {"LLJvkOOY": {}, "mq41B8j0": {}, "EiVobW9S": {}}, "slotId": "VfVzx9vK", "sourceItemId": "hr1RIKcO", "tags": ["bznCftoj", "N70Eoa8n", "iUCFLTGv"], "type": "QbWBNhWV"}, {"customAttributes": {"yRdJvjle": {}, "kJiN37oy": {}, "qoh0e6qE": {}}, "serverCustomAttributes": {"VdtXvz70": {}, "IyFuP8Il": {}, "sM7Lhg5z": {}}, "slotId": "bXtXCLX7", "sourceItemId": "heJU6jwo", "tags": ["3YBbkEpS", "S4L3kwKH", "wYfH808G"], "type": "kBOyP6fX"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminBulkUpdateMyItems \
    --inventoryId 'hWTbNfnn' \
    --namespace $AB_NAMESPACE \
    --userId '89DbAD4K' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 26 'AdminBulkUpdateMyItems' test.out

#- 27 AdminSaveItemToInventory
# body param: body
echo '{"customAttributes": {"1JVjuW6m": {}, "rtJCATUL": {}, "uHlc1Whw": {}}, "qty": 61, "serverCustomAttributes": {"caJXjDwP": {}, "SUpbYZbI": {}, "XWHYkszS": {}}, "slotId": "AJ4uzOlM", "slotUsed": 45, "source": "OTHER", "sourceItemId": "MWmG3vz6", "tags": ["e7yxIDtA", "IXsvsbGJ", "bQWKmzfP"], "type": "eWUm2RSt"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminSaveItemToInventory \
    --inventoryId 'WUkC7lXF' \
    --namespace $AB_NAMESPACE \
    --userId 'XFtzyYtB' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 27 'AdminSaveItemToInventory' test.out

#- 28 AdminBulkRemoveItems
# body param: body
echo '[{"slotId": "9h9ugHhO", "sourceItemId": "QrU8PF0B"}, {"slotId": "9v0YJp8V", "sourceItemId": "NebGVadS"}, {"slotId": "ubRiyRWf", "sourceItemId": "nMID4S7e"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminBulkRemoveItems \
    --inventoryId 'z8xHjhnN' \
    --namespace $AB_NAMESPACE \
    --userId 'YYxCPIC3' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 28 'AdminBulkRemoveItems' test.out

#- 29 AdminBulkSaveItemToInventory
# body param: body
echo '[{"customAttributes": {"xubpnQAq": {}, "KPhzsGVa": {}, "FAfKqyGQ": {}}, "qty": 64, "serverCustomAttributes": {"0b9cl7sw": {}, "1QUfIOlW": {}, "CV9Ib302": {}}, "slotId": "ZuokFvkM", "slotUsed": 36, "source": "ECOMMERCE", "sourceItemId": "eI5DdiWA", "tags": ["NbagSmZz", "3lMCnQ3c", "dCF0te49"], "type": "V5YcC8n4"}, {"customAttributes": {"B2ULmZiv": {}, "qvhKsZvP": {}, "d0GWBgsK": {}}, "qty": 34, "serverCustomAttributes": {"O8oNSZPz": {}, "6ilaHMs0": {}, "DptlVaoU": {}}, "slotId": "Zg7Ei11Y", "slotUsed": 92, "source": "ECOMMERCE", "sourceItemId": "JoA3bUVA", "tags": ["GWTxHibR", "RbUcSc4J", "xyYayuvx"], "type": "ToARj2Nm"}, {"customAttributes": {"3zl09RRt": {}, "UYr7WKi1": {}, "cS0ncHob": {}}, "qty": 57, "serverCustomAttributes": {"NhdRMdzv": {}, "QExLnFiN": {}, "SHxc5zBe": {}}, "slotId": "Tr1qnfll", "slotUsed": 98, "source": "ECOMMERCE", "sourceItemId": "zoaTtzX7", "tags": ["3yqXcm0U", "EDJoNLHk", "ASsLRyyy"], "type": "mJZR4oYj"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminBulkSaveItemToInventory \
    --inventoryId 'alR3l7rZ' \
    --namespace $AB_NAMESPACE \
    --userId '6dNeyVWE' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 29 'AdminBulkSaveItemToInventory' test.out

#- 30 AdminUpdateUserInventoriesByInventoryCode
# body param: body
echo '{"incMaxSlots": 9}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminUpdateUserInventoriesByInventoryCode \
    --inventoryConfigurationCode 'Uj7EVTsc' \
    --namespace $AB_NAMESPACE \
    --userId 'zmiEZA4y' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 30 'AdminUpdateUserInventoriesByInventoryCode' test.out

#- 31 AdminSaveItem
# body param: body
echo '{"customAttributes": {"OiQsvzmz": {}, "2iRScHqS": {}, "C9PMj8mk": {}}, "inventoryConfigurationCode": "7wpEQlfQ", "qty": 50, "serverCustomAttributes": {"4P9IRae9": {}, "UPfs7pKi": {}, "2gZGmody": {}}, "slotId": "LgLkbre8", "slotUsed": 35, "source": "ECOMMERCE", "sourceItemId": "kAaZAt1m", "tags": ["DPR7208x", "8tE1lVK6", "xuRgk8HQ"], "type": "zR5FXE4c"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminSaveItem \
    --namespace $AB_NAMESPACE \
    --userId 'aJehpxbk' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 31 'AdminSaveItem' test.out

#- 32 AdminBulkSaveItem
# body param: body
echo '[{"customAttributes": {"vBzIRYV8": {}, "JV8lil7Y": {}, "q8ILJ6T4": {}}, "inventoryConfigurationCode": "UBGayPdC", "qty": 70, "serverCustomAttributes": {"aDLBRp9R": {}, "OKwjO6jP": {}, "uPcZS14K": {}}, "slotId": "VTsV8O6G", "slotUsed": 6, "source": "OTHER", "sourceItemId": "CuWKDLTX", "tags": ["PdbAwCzD", "pvMxaoZI", "lQZIBqpZ"], "type": "9wGNMvDg"}, {"customAttributes": {"DKuaxAtj": {}, "tSJpsp8D": {}, "Ey1bSdoS": {}}, "inventoryConfigurationCode": "KlGmmBya", "qty": 6, "serverCustomAttributes": {"waPfAOyo": {}, "Udvfhpa8": {}, "2HmWd1v1": {}}, "slotId": "EE8ttQV0", "slotUsed": 12, "source": "ECOMMERCE", "sourceItemId": "Isbwhzh3", "tags": ["hK4Epp4Q", "WL0RNqqg", "bXzucvrh"], "type": "g1j3Q3Ha"}, {"customAttributes": {"iLXdZxFm": {}, "T8TiDjD1": {}, "CgLoRBpU": {}}, "inventoryConfigurationCode": "TuuKIg0t", "qty": 53, "serverCustomAttributes": {"ARCwvoe1": {}, "1bQLshSq": {}, "cUwXypyv": {}}, "slotId": "qM8PpZUt", "slotUsed": 20, "source": "ECOMMERCE", "sourceItemId": "MqZUVUW5", "tags": ["vw6zufOd", "cTURr6Vv", "GVkKclWU"], "type": "8TZqZ6Uz"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminBulkSaveItem \
    --namespace $AB_NAMESPACE \
    --userId '0fBeDYsz' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 32 'AdminBulkSaveItem' test.out

#- 33 AdminSyncUserEntitlements
$CLI_EXE \
    --sn inventory \
    --op AdminSyncUserEntitlements \
    --namespace $AB_NAMESPACE \
    --userId 'RCFdoXgn' \
    > test.out 2>&1
eval_tap $? 33 'AdminSyncUserEntitlements' test.out

#- 34 AdminPurchasable
# body param: body
echo '{"entitlementType": "2fz2dElo", "inventoryConfig": {"slotUsed": 64}, "itemId": "WAfd11pc", "itemType": "ZqGt1ynk", "items": [{"bundledQty": 61, "entitlementType": "YW9tzshQ", "inventoryConfig": {"slotUsed": 64}, "itemId": "wGetsmb7", "itemType": "Uz4Zl0My", "sku": "Uh68K62p", "stackable": false, "useCount": 16}, {"bundledQty": 98, "entitlementType": "HKFqOgYX", "inventoryConfig": {"slotUsed": 7}, "itemId": "ZEJVC9oJ", "itemType": "5tkdclJV", "sku": "U2S5toJ8", "stackable": false, "useCount": 52}, {"bundledQty": 75, "entitlementType": "JSrLxi7K", "inventoryConfig": {"slotUsed": 69}, "itemId": "sgm2m7cr", "itemType": "66cyDz4Y", "sku": "QT7Bg4Sg", "stackable": true, "useCount": 31}], "quantity": 13, "sku": "N8f4mTBR", "stackable": false, "useCount": 32}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminPurchasable \
    --namespace $AB_NAMESPACE \
    --userId 'umCebKff' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 34 'AdminPurchasable' test.out

#- 35 PublicListInventoryConfigurations
$CLI_EXE \
    --sn inventory \
    --op PublicListInventoryConfigurations \
    --namespace $AB_NAMESPACE \
    --code 'oiQKa904' \
    --limit '35' \
    --offset '59' \
    --sortBy 'code:desc' \
    > test.out 2>&1
eval_tap $? 35 'PublicListInventoryConfigurations' test.out

#- 36 PublicListItemTypes
$CLI_EXE \
    --sn inventory \
    --op PublicListItemTypes \
    --namespace $AB_NAMESPACE \
    --limit '59' \
    --offset '74' \
    --sortBy 'name' \
    > test.out 2>&1
eval_tap $? 36 'PublicListItemTypes' test.out

#- 37 PublicListTags
$CLI_EXE \
    --sn inventory \
    --op PublicListTags \
    --namespace $AB_NAMESPACE \
    --limit '40' \
    --offset '89' \
    --sortBy 'createdAt' \
    > test.out 2>&1
eval_tap $? 37 'PublicListTags' test.out

#- 38 PublicListInventories
$CLI_EXE \
    --sn inventory \
    --op PublicListInventories \
    --namespace $AB_NAMESPACE \
    --inventoryConfigurationCode 'WcGlGNf3' \
    --limit '45' \
    --offset '9' \
    --sortBy 'updatedAt:desc' \
    > test.out 2>&1
eval_tap $? 38 'PublicListInventories' test.out

#- 39 PublicConsumeMyItem
# body param: body
echo '{"options": ["nk6fhRYR", "U7gmYjV1", "9XkCzbQt"], "qty": 39, "slotId": "dSkSvTwr", "sourceItemId": "KsE4DTsz"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op PublicConsumeMyItem \
    --inventoryId 'kcCiMud1' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 39 'PublicConsumeMyItem' test.out

#- 40 PublicListItems
$CLI_EXE \
    --sn inventory \
    --op PublicListItems \
    --inventoryId 'b84n0VgI' \
    --namespace $AB_NAMESPACE \
    --limit '82' \
    --offset '39' \
    --sortBy 'createdAt:desc' \
    --sourceItemId 'YiaX2XGV' \
    --tags 'YjtX7ssv' \
    > test.out 2>&1
eval_tap $? 40 'PublicListItems' test.out

#- 41 PublicBulkUpdateMyItems
# body param: body
echo '[{"customAttributes": {"hTSdeh4a": {}, "67JPprxE": {}, "Dalt6Eu3": {}}, "slotId": "YWixVVC6", "sourceItemId": "LsReBYq5", "tags": ["JVZeMbj1", "bGnTNfqV", "X62w9zdQ"]}, {"customAttributes": {"S5tPR3bS": {}, "6Z12ZWmI": {}, "2JqKnhUB": {}}, "slotId": "LeVT2ylq", "sourceItemId": "70CWRpbP", "tags": ["3iD5TkqT", "RtLXSvmf", "fJnzWl6J"]}, {"customAttributes": {"X3AUGDXR": {}, "4DK4LBiK": {}, "Xz1QuSYr": {}}, "slotId": "vrCiT0ju", "sourceItemId": "rKB0sVny", "tags": ["UVG8rEN3", "VQMUBGck", "erhCaX4y"]}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op PublicBulkUpdateMyItems \
    --inventoryId '3b6XEXUx' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 41 'PublicBulkUpdateMyItems' test.out

#- 42 PublicBulkRemoveMyItems
# body param: body
echo '[{"slotId": "ptCB6GA6", "sourceItemId": "IlWdXnxZ"}, {"slotId": "1IjafbHw", "sourceItemId": "RIBZg942"}, {"slotId": "BXwTTHx3", "sourceItemId": "zZ1Snld1"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op PublicBulkRemoveMyItems \
    --inventoryId 'H2t5kW0P' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 42 'PublicBulkRemoveMyItems' test.out

#- 43 PublicMoveMyItems
# body param: body
echo '{"items": [{"qty": 98, "slotId": "SlSkCZTb", "sourceItemId": "VjKk2fX9"}, {"qty": 52, "slotId": "AwKOoad3", "sourceItemId": "2Jlvlnx9"}, {"qty": 31, "slotId": "vJJkI5Bg", "sourceItemId": "VHvFb4oR"}], "srcInventoryId": "IGjMmdBF"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op PublicMoveMyItems \
    --inventoryId 'uS5oauXg' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 43 'PublicMoveMyItems' test.out

#- 44 PublicGetItem
$CLI_EXE \
    --sn inventory \
    --op PublicGetItem \
    --inventoryId 'DpF81Ns0' \
    --namespace $AB_NAMESPACE \
    --slotId '6UOLh3WP' \
    --sourceItemId 'LnMgApUG' \
    > test.out 2>&1
eval_tap $? 44 'PublicGetItem' test.out


# remove artifacts
rm -f "$CLI_TOKEN_FILE"
rm -f "$TEMP_JSON_INPUT"
rm -f "$TEMP_FILE_UPLOAD"

exit $EXIT_CODE