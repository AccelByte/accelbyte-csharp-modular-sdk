#!/usr/bin/env bash

# Copyright (c) 2021 AccelByte Inc. All Rights Reserved.
# This is licensed software from AccelByte Inc, for limitations
# and restrictions contact your company contract manager.

# This code is generated by tool. DO NOT EDIT.

# Meta:
# - random seed: 
# - template file: 

# Instructions:
# - Run the Justice SDK Mock Server first before running this script.

export AB_BASE_URL="http://127.0.0.1:8080"
export AB_CLIENT_ID="admin"
export AB_CLIENT_SECRET="admin"
export AB_NAMESPACE="test"
export AB_APP_NAME="UnitTest"

EXIT_CODE=0

eval_tap() {
  if [ $1 -eq 0 ]; then
    echo "ok $2 - $3"
  else
    EXIT_CODE=1
    echo "not ok $2 - $3"
    sed 's/^/# /g' $4
  fi
  rm -f $4
}

CLI_EXE="AccelByte.Sdk.Sample.Cli"
CLI_TOKEN_FILE="$(dirname "$(which $CLI_EXE)")/token.json"
TEMP_JSON_INPUT="input_json.json"
TEMP_FILE_UPLOAD="file_upload.bin"

echo "TAP version 13"
echo "1..41"

#- 1 Login
$CLI_EXE --op login --lt user --user user --pass user > test.out 2>&1
eval_tap $? 1 'Login' test.out

if [ $EXIT_CODE -ne 0 ]; then
  echo "Bail out! Login failed."
  exit $EXIT_CODE
fi

# echo "foo" > "$CLI_TOKEN_FILE"

#- 2 AdminCreateChainingOperations
# body param: body
echo '{"message": "e5Jwcn8n", "operations": [{"consumeItems": [{"inventoryId": "zDocTmcA", "qty": 62, "slotId": "95OhktY8", "sourceItemId": "VR6vyMZQ"}, {"inventoryId": "QlpEr1UO", "qty": 30, "slotId": "m9oRzJF9", "sourceItemId": "UoLeD7vu"}, {"inventoryId": "MwWA7kyk", "qty": 42, "slotId": "x5PVn0MU", "sourceItemId": "1ZLfwuL8"}], "createItems": [{"customAttributes": {"gECVXWl2": {}, "IpHLV8Re": {}, "4dGGFLGd": {}}, "inventoryConfigurationCode": "I9W0bjBB", "inventoryId": "KLYMNhRC", "qty": 15, "serverCustomAttributes": {"d8tYssso": {}, "v22B1CHe": {}, "J6dDdEPD": {}}, "slotId": "D9NHHcP6", "slotUsed": 30, "sourceItemId": "XdysD3ix", "tags": ["3FRoptSG", "iaYsKnTF", "9eYLPi6r"], "toSpecificInventory": true, "type": "dtU2FtUC"}, {"customAttributes": {"i8MRiifZ": {}, "aFLbB9Qi": {}, "APk3OArL": {}}, "inventoryConfigurationCode": "UVITxrMy", "inventoryId": "HZyA41SL", "qty": 68, "serverCustomAttributes": {"G9cYDnyI": {}, "bV3Jz5yE": {}, "PfTY4v6q": {}}, "slotId": "TDc83pFJ", "slotUsed": 49, "sourceItemId": "cOy5VLjk", "tags": ["GPzZwPfF", "w6RRdemc", "nJtkNYRN"], "toSpecificInventory": true, "type": "l4iEEet5"}, {"customAttributes": {"gf64DUN9": {}, "zef09m0p": {}, "vG2U1x7z": {}}, "inventoryConfigurationCode": "7yzIkPqK", "inventoryId": "9ZuWK0NT", "qty": 6, "serverCustomAttributes": {"BNkKOJCu": {}, "zNFPcWh0": {}, "CVgBrf72": {}}, "slotId": "g1LuIT6Z", "slotUsed": 5, "sourceItemId": "AdgqL9Zq", "tags": ["SpxAyE77", "LpwzAGEU", "mpMtH3Pt"], "toSpecificInventory": true, "type": "SpMdkn2o"}], "removeItems": [{"inventoryId": "OO2OK4VN", "slotId": "Ulo09FhK", "sourceItemId": "Nf3RQiyp"}, {"inventoryId": "iVhPpKZL", "slotId": "mNmHH9KP", "sourceItemId": "wPrC9feP"}, {"inventoryId": "ofvQbCPl", "slotId": "oj8PwstD", "sourceItemId": "lPxNYgSo"}], "targetUserId": "skW2Bz2V", "updateItems": [{"customAttributes": {"gVZMGZan": {}, "aC9Be1l2": {}, "e9e2AEju": {}}, "inventoryId": "CKPcszpe", "serverCustomAttributes": {"bczT2iGl": {}, "ecmkReTI": {}, "MxdXwIDr": {}}, "slotId": "UlofDBn9", "sourceItemId": "h8ICuVDq", "tags": ["m72fd4GG", "nsshG3C3", "kfZfBLmw"], "type": "TPmxl2qr"}, {"customAttributes": {"XJpVxMZL": {}, "nDkF1t1U": {}, "rCAssjeL": {}}, "inventoryId": "2ya0BmSY", "serverCustomAttributes": {"RtqZkK6O": {}, "xaDknixS": {}, "poPXfuL3": {}}, "slotId": "L9i4m18i", "sourceItemId": "8Mw0Ke2D", "tags": ["yGRJ8y2r", "3TSQOYJm", "88Ob9Izv"], "type": "mf1CTWm3"}, {"customAttributes": {"quPAdbJP": {}, "d4PhWTCs": {}, "ZuMEoeyj": {}}, "inventoryId": "3kCqu0sN", "serverCustomAttributes": {"6UtK5KKf": {}, "aYyh527G": {}, "8Q3NtQ2P": {}}, "slotId": "SNejkKZn", "sourceItemId": "PpHJGglH", "tags": ["mJRadQmN", "MgZqASvO", "f6r1g0is"], "type": "jQKKJlol"}]}, {"consumeItems": [{"inventoryId": "HsxrppTV", "qty": 74, "slotId": "gEWnM0Zr", "sourceItemId": "26CrdVwK"}, {"inventoryId": "77SPayBS", "qty": 74, "slotId": "2NDy6wmL", "sourceItemId": "OHkaZDr1"}, {"inventoryId": "rn9uKu2G", "qty": 93, "slotId": "NA8b5ZvU", "sourceItemId": "Fgn9Ibyu"}], "createItems": [{"customAttributes": {"w5Iw2zFC": {}, "CX2XNoRn": {}, "AsenrYvW": {}}, "inventoryConfigurationCode": "Ftp9P6y6", "inventoryId": "OgoGkJNG", "qty": 17, "serverCustomAttributes": {"m3DgyqKv": {}, "kAhThUEs": {}, "bQt5Z8hi": {}}, "slotId": "gChF8S2K", "slotUsed": 6, "sourceItemId": "sGpOb7qO", "tags": ["qodV2TID", "n17Mielf", "bCtTqBiE"], "toSpecificInventory": false, "type": "F6G022u9"}, {"customAttributes": {"EfGWzn2P": {}, "4hR7ru3q": {}, "8XIOSup0": {}}, "inventoryConfigurationCode": "CJKgl4T4", "inventoryId": "wMPK8rrJ", "qty": 66, "serverCustomAttributes": {"meUwgLXK": {}, "XTpsSiFf": {}, "WtPtwo5C": {}}, "slotId": "EY1XDJj4", "slotUsed": 52, "sourceItemId": "H0jTxsFV", "tags": ["OmFJc9w6", "IUyTSBlc", "pOQpJN6Y"], "toSpecificInventory": false, "type": "OtLP1yA7"}, {"customAttributes": {"tJsm10gu": {}, "Yl2hUHbV": {}, "wttiwZ5w": {}}, "inventoryConfigurationCode": "0lD39IGq", "inventoryId": "UQvCeYJR", "qty": 23, "serverCustomAttributes": {"wq2tfZpf": {}, "zW7k0irT": {}, "NDmEZK9e": {}}, "slotId": "E3DXMGnC", "slotUsed": 45, "sourceItemId": "NwKDR2Mq", "tags": ["S1HAa1Fd", "JGvE2OSL", "M3CNbCj1"], "toSpecificInventory": true, "type": "1v2SrMHb"}], "removeItems": [{"inventoryId": "5ogyeQZK", "slotId": "RobhgxLg", "sourceItemId": "1z9ljnBM"}, {"inventoryId": "vB0b0UkE", "slotId": "xSvEEjRI", "sourceItemId": "3KakmX5d"}, {"inventoryId": "mLDvSKmB", "slotId": "Iah4pXXc", "sourceItemId": "gaXN6C9Z"}], "targetUserId": "pFxERLhD", "updateItems": [{"customAttributes": {"y9tEaV6K": {}, "wMfyzZiC": {}, "rca4GdZx": {}}, "inventoryId": "l00ll4FM", "serverCustomAttributes": {"6SaMj2TQ": {}, "1vptJUsq": {}, "cSzfL1HD": {}}, "slotId": "Pd0kYJfA", "sourceItemId": "yct235WV", "tags": ["xZE12oRv", "RMiPw4y3", "iMkopMyS"], "type": "Fnlz9YbV"}, {"customAttributes": {"39WnmcT5": {}, "zfJJfzmK": {}, "cnueYJ6K": {}}, "inventoryId": "9vh4I4qi", "serverCustomAttributes": {"XI3iXhEB": {}, "gYgUbwV0": {}, "6HhnzgYv": {}}, "slotId": "SyNU4r8u", "sourceItemId": "24AKx5Yv", "tags": ["BAVhVaH9", "s1cxkfTl", "qwZ5Dw4H"], "type": "6shGezKU"}, {"customAttributes": {"mNTF2C4X": {}, "S9GbPnsG": {}, "8Dtarr9y": {}}, "inventoryId": "2ASLH0Ez", "serverCustomAttributes": {"5iFrimvd": {}, "3hgiXyRi": {}, "dtg4zswT": {}}, "slotId": "X4WEPC1l", "sourceItemId": "Cxs0zQEV", "tags": ["BaB5wS96", "RGtxMiYF", "yCxDhxxR"], "type": "6m34jIlt"}]}, {"consumeItems": [{"inventoryId": "sCWUbBcM", "qty": 7, "slotId": "R73lfmil", "sourceItemId": "bXpv3dOm"}, {"inventoryId": "L6EnEYIJ", "qty": 41, "slotId": "TcEkSqq0", "sourceItemId": "GKn0oFOG"}, {"inventoryId": "62gZMbl7", "qty": 79, "slotId": "mWVmomwc", "sourceItemId": "htpgMZ3g"}], "createItems": [{"customAttributes": {"gT9mH57m": {}, "zKTeCmz2": {}, "PxwJyPfl": {}}, "inventoryConfigurationCode": "yqj5VaSv", "inventoryId": "AbV22NjS", "qty": 80, "serverCustomAttributes": {"yQMvJA9e": {}, "dwsHb329": {}, "kffJwvKO": {}}, "slotId": "1j8RfKPJ", "slotUsed": 92, "sourceItemId": "UdrQMjoM", "tags": ["RPW18RhF", "ydWow96V", "PwPqAzpb"], "toSpecificInventory": false, "type": "ooMgsBiH"}, {"customAttributes": {"6vqK6jLX": {}, "RTj8Z4cR": {}, "b65m3pNO": {}}, "inventoryConfigurationCode": "zc7wHF6T", "inventoryId": "6Tpr0OIk", "qty": 21, "serverCustomAttributes": {"X6uZWM7Q": {}, "JtivRe1Y": {}, "zrvzdplf": {}}, "slotId": "KfL0tNOK", "slotUsed": 88, "sourceItemId": "ERsevKUk", "tags": ["gFRrwuRF", "qLW0yTLR", "ViYvcf3W"], "toSpecificInventory": true, "type": "3k2fVjBl"}, {"customAttributes": {"ZbGBbQ8W": {}, "4PCQae4f": {}, "lmmOmK7p": {}}, "inventoryConfigurationCode": "jZMcHRq2", "inventoryId": "Nt3xIDbq", "qty": 4, "serverCustomAttributes": {"OTVAMGtP": {}, "jmN1J9mj": {}, "J9jyAmHA": {}}, "slotId": "lEMp3A8z", "slotUsed": 86, "sourceItemId": "kqELM7ZA", "tags": ["LijufaQv", "9NVP8458", "LMe6JA94"], "toSpecificInventory": false, "type": "bk0HLgIU"}], "removeItems": [{"inventoryId": "7lxc9b8X", "slotId": "XK9nvIid", "sourceItemId": "DP5dfviU"}, {"inventoryId": "BLn7tu9M", "slotId": "oLEC96SG", "sourceItemId": "uhqWC7Qu"}, {"inventoryId": "XeryLpuz", "slotId": "JGmzAUjx", "sourceItemId": "zsPWvW8G"}], "targetUserId": "h0Z9hpgS", "updateItems": [{"customAttributes": {"Xgw90ZqV": {}, "zj7CVgbI": {}, "MGzSbCgY": {}}, "inventoryId": "SPkepzZd", "serverCustomAttributes": {"W7QTEG3d": {}, "cLobWcTP": {}, "nRNk6URN": {}}, "slotId": "dJyok2V6", "sourceItemId": "Oopk8tI0", "tags": ["DMqPbSnQ", "eMnntYAM", "jenD3F6B"], "type": "Y1lZY18i"}, {"customAttributes": {"z7WKjrvZ": {}, "jEMxwP0w": {}, "fJx2jivs": {}}, "inventoryId": "h5Eim3kn", "serverCustomAttributes": {"qyVQVGl4": {}, "Zu7one10": {}, "vZYSx0Yq": {}}, "slotId": "rzYRaoJH", "sourceItemId": "9RNjUCLY", "tags": ["7YJALlhM", "MGWechnD", "87yY8AK5"], "type": "agKGyXvl"}, {"customAttributes": {"WipDy3RX": {}, "igHP5CXH": {}, "Z0kEM3cH": {}}, "inventoryId": "bIStb0bR", "serverCustomAttributes": {"6cq51FZf": {}, "4iTOPr9S": {}, "BkNaHdd5": {}}, "slotId": "WsYTMai0", "sourceItemId": "oMuUxmOC", "tags": ["v2o6ZiG7", "YAcRINGH", "idJFh4B6"], "type": "QRLCObL8"}]}], "requestId": "88BGv5nE"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminCreateChainingOperations \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 2 'AdminCreateChainingOperations' test.out

#- 3 AdminListIntegrationConfigurations
$CLI_EXE \
    --sn inventory \
    --op AdminListIntegrationConfigurations \
    --namespace $AB_NAMESPACE \
    --limit '89' \
    --offset '98' \
    --sortBy 'createdAt:desc' \
    > test.out 2>&1
eval_tap $? 3 'AdminListIntegrationConfigurations' test.out

#- 4 AdminCreateIntegrationConfiguration
# body param: body
echo '{"mapItemType": ["NIscJvF6", "1N2IVjKl", "JNiwCTdo"], "serviceName": "6bnmi9c8", "targetInventoryCode": "WdKeBmw7"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminCreateIntegrationConfiguration \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 4 'AdminCreateIntegrationConfiguration' test.out

#- 5 AdminUpdateIntegrationConfiguration
# body param: body
echo '{"mapItemType": ["BetlOreE", "7mkvRxZa", "hNVvjHa3"], "serviceName": "fTJBUfmN", "targetInventoryCode": "Ntl6eEE9"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminUpdateIntegrationConfiguration \
    --integrationConfigurationId '8Xtb41QO' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 5 'AdminUpdateIntegrationConfiguration' test.out

#- 6 AdminUpdateStatusIntegrationConfiguration
# body param: body
echo '{"status": "INIT"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminUpdateStatusIntegrationConfiguration \
    --integrationConfigurationId '0SfUyKx5' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 6 'AdminUpdateStatusIntegrationConfiguration' test.out

#- 7 AdminListInventories
$CLI_EXE \
    --sn inventory \
    --op AdminListInventories \
    --namespace $AB_NAMESPACE \
    --inventoryConfigurationCode '1O0o3Fxn' \
    --limit '21' \
    --offset '17' \
    --sortBy 'inventoryConfigurationCode:asc' \
    --userId 'ncZurbTA' \
    > test.out 2>&1
eval_tap $? 7 'AdminListInventories' test.out

#- 8 AdminCreateInventory
# body param: body
echo '{"inventoryConfigurationCode": "1LMqEUvL", "userId": "8BCvGrUF"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminCreateInventory \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 8 'AdminCreateInventory' test.out

#- 9 AdminGetInventory
$CLI_EXE \
    --sn inventory \
    --op AdminGetInventory \
    --inventoryId 'eM0Z4oV1' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 9 'AdminGetInventory' test.out

#- 10 AdminUpdateInventory
# body param: body
echo '{"incMaxSlots": 71}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminUpdateInventory \
    --inventoryId 'bcqzNqqX' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 10 'AdminUpdateInventory' test.out

#- 11 DeleteInventory
# body param: body
echo '{"message": "gSPLyDUR"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op DeleteInventory \
    --inventoryId 'OoqqpfLQ' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 11 'DeleteInventory' test.out

#- 12 AdminListItems
$CLI_EXE \
    --sn inventory \
    --op AdminListItems \
    --inventoryId 'oOG0lnn7' \
    --namespace $AB_NAMESPACE \
    --limit '10' \
    --offset '49' \
    --qtyGte '13' \
    --sortBy 'qty' \
    --sourceItemId 'SH8DCtU0' \
    --tags 'EMu2HlWJ' \
    > test.out 2>&1
eval_tap $? 12 'AdminListItems' test.out

#- 13 AdminGetInventoryItem
$CLI_EXE \
    --sn inventory \
    --op AdminGetInventoryItem \
    --inventoryId 'de8J6aW1' \
    --namespace $AB_NAMESPACE \
    --slotId 'SM84vDLz' \
    --sourceItemId 'hoQNKBTr' \
    > test.out 2>&1
eval_tap $? 13 'AdminGetInventoryItem' test.out

#- 14 AdminListInventoryConfigurations
$CLI_EXE \
    --sn inventory \
    --op AdminListInventoryConfigurations \
    --namespace $AB_NAMESPACE \
    --code 'zdtOepeI' \
    --limit '60' \
    --offset '72' \
    --sortBy 'code' \
    > test.out 2>&1
eval_tap $? 14 'AdminListInventoryConfigurations' test.out

#- 15 AdminCreateInventoryConfiguration
# body param: body
echo '{"code": "a0HPCnWN", "description": "6KyK8dGw", "initialMaxSlots": 33, "maxInstancesPerUser": 27, "maxUpgradeSlots": 30, "name": "tIURcoQM"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminCreateInventoryConfiguration \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 15 'AdminCreateInventoryConfiguration' test.out

#- 16 AdminGetInventoryConfiguration
$CLI_EXE \
    --sn inventory \
    --op AdminGetInventoryConfiguration \
    --inventoryConfigurationId 'hJT4axGn' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 16 'AdminGetInventoryConfiguration' test.out

#- 17 AdminUpdateInventoryConfiguration
# body param: body
echo '{"code": "C9RnlaVy", "description": "fDQXrSQk", "initialMaxSlots": 4, "maxInstancesPerUser": 12, "maxUpgradeSlots": 32, "name": "7gZIfAEH"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminUpdateInventoryConfiguration \
    --inventoryConfigurationId 'Ioke6Zgr' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 17 'AdminUpdateInventoryConfiguration' test.out

#- 18 AdminDeleteInventoryConfiguration
$CLI_EXE \
    --sn inventory \
    --op AdminDeleteInventoryConfiguration \
    --inventoryConfigurationId 'DtLb8aoU' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 18 'AdminDeleteInventoryConfiguration' test.out

#- 19 AdminListItemTypes
$CLI_EXE \
    --sn inventory \
    --op AdminListItemTypes \
    --namespace $AB_NAMESPACE \
    --limit '55' \
    --offset '68' \
    --sortBy 'name' \
    > test.out 2>&1
eval_tap $? 19 'AdminListItemTypes' test.out

#- 20 AdminCreateItemType
# body param: body
echo '{"name": "S99Z7FA5"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminCreateItemType \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 20 'AdminCreateItemType' test.out

#- 21 AdminDeleteItemType
$CLI_EXE \
    --sn inventory \
    --op AdminDeleteItemType \
    --itemTypeName '0DzvWmkW' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 21 'AdminDeleteItemType' test.out

#- 22 AdminListTags
$CLI_EXE \
    --sn inventory \
    --op AdminListTags \
    --namespace $AB_NAMESPACE \
    --limit '24' \
    --offset '36' \
    --owner '89fcN6EC' \
    --sortBy 'name:desc' \
    > test.out 2>&1
eval_tap $? 22 'AdminListTags' test.out

#- 23 AdminCreateTag
# body param: body
echo '{"name": "kWt2ot63", "owner": "SERVER"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminCreateTag \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 23 'AdminCreateTag' test.out

#- 24 AdminDeleteTag
$CLI_EXE \
    --sn inventory \
    --op AdminDeleteTag \
    --namespace $AB_NAMESPACE \
    --tagName 'vaShbhOq' \
    > test.out 2>&1
eval_tap $? 24 'AdminDeleteTag' test.out

#- 25 AdminConsumeUserItem
# body param: body
echo '{"qty": 78, "slotId": "TNiJ2fvy", "sourceItemId": "aA6XhjQc"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminConsumeUserItem \
    --inventoryId 'YyRNPEJR' \
    --namespace $AB_NAMESPACE \
    --userId 'SR4qirAs' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 25 'AdminConsumeUserItem' test.out

#- 26 AdminBulkUpdateMyItems
# body param: body
echo '[{"customAttributes": {"FSPXV03T": {}, "kPPgXbcP": {}, "DN5xeFmH": {}}, "serverCustomAttributes": {"8rfzLcyH": {}, "DhSqjPxY": {}, "jMAa7FcZ": {}}, "slotId": "FWIiDYUl", "sourceItemId": "vXAI7UdP", "tags": ["ZrMEtqt6", "LT8j9xXa", "P4FYaegA"], "type": "d4VzmFxP"}, {"customAttributes": {"TNQMIfjM": {}, "MEnzard8": {}, "mIVXDrE3": {}}, "serverCustomAttributes": {"BNOJMWfd": {}, "FUsY0d1l": {}, "XHDNcZYB": {}}, "slotId": "UsUlOEKJ", "sourceItemId": "3QDx1R7W", "tags": ["pknbTaLe", "qBLxzuvd", "f4EemHaw"], "type": "kBJiAtvw"}, {"customAttributes": {"IZSr9qN9": {}, "xZ9W0xSl": {}, "cUBw565i": {}}, "serverCustomAttributes": {"UV8zpMzc": {}, "I0iWd27f": {}, "ZzQdlteV": {}}, "slotId": "QwscbtXD", "sourceItemId": "sod3Fpuq", "tags": ["A4EU2huw", "PnQ9hXpx", "c3fVUYjH"], "type": "6yK59KE6"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminBulkUpdateMyItems \
    --inventoryId 'yHfn3Dvr' \
    --namespace $AB_NAMESPACE \
    --userId 'RjJxocEz' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 26 'AdminBulkUpdateMyItems' test.out

#- 27 AdminSaveItemToInventory
# body param: body
echo '{"customAttributes": {"TqiGTlQz": {}, "1MzF3Zth": {}, "4rWuCSGL": {}}, "qty": 48, "serverCustomAttributes": {"gKVghDKQ": {}, "OhlOPbuQ": {}, "PbULUf9a": {}}, "slotId": "tuVMjPj2", "slotUsed": 90, "source": "OTHER", "sourceItemId": "8lUP3ZVE", "tags": ["iujqvJb4", "au7iwGGp", "9fhNKkZh"], "type": "KwGVD71d"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminSaveItemToInventory \
    --inventoryId '8YsZPzMk' \
    --namespace $AB_NAMESPACE \
    --userId 'SBxvHJi5' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 27 'AdminSaveItemToInventory' test.out

#- 28 AdminBulkRemoveItems
# body param: body
echo '[{"slotId": "kTvTYfE4", "sourceItemId": "VupMQudp"}, {"slotId": "vZVUoY7r", "sourceItemId": "x2jgrRAG"}, {"slotId": "77sKze3M", "sourceItemId": "6Fqlyo7J"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminBulkRemoveItems \
    --inventoryId 'yGDCqgLv' \
    --namespace $AB_NAMESPACE \
    --userId 'DwOXpTby' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 28 'AdminBulkRemoveItems' test.out

#- 29 AdminSaveItem
# body param: body
echo '{"customAttributes": {"ATU4UKr1": {}, "YkTMJACK": {}, "0J5PSXtG": {}}, "inventoryConfigurationCode": "XWGtwngz", "qty": 55, "serverCustomAttributes": {"34KlEFhS": {}, "sI7t39Ey": {}, "kWzryQqq": {}}, "slotId": "vULqCekg", "slotUsed": 62, "source": "ECOMMERCE", "sourceItemId": "dYFcftAf", "tags": ["42n9ogNy", "1ZOM6j0v", "RW1bHgmU"], "type": "w7xFF3xf"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminSaveItem \
    --namespace $AB_NAMESPACE \
    --userId 'VtoFwzyq' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 29 'AdminSaveItem' test.out

#- 30 AdminSyncUserEntitlements
$CLI_EXE \
    --sn inventory \
    --op AdminSyncUserEntitlements \
    --namespace $AB_NAMESPACE \
    --userId 'gKO6Iuzj' \
    > test.out 2>&1
eval_tap $? 30 'AdminSyncUserEntitlements' test.out

#- 31 AdminPurchasable
# body param: body
echo '{"entitlementType": "PHA7sSTH", "inventoryConfig": {"slotUsed": 24}, "itemId": "9IGixJ8S", "itemType": "uuzCsDQ9", "items": [{"bundledQty": 28, "entitlementType": "X4DMabv5", "inventoryConfig": {"slotUsed": 27}, "itemId": "RI2NXMfB", "itemType": "zWBgnof0", "sku": "dNeOHrov", "stackable": false, "useCount": 14}, {"bundledQty": 13, "entitlementType": "XAvLehSI", "inventoryConfig": {"slotUsed": 43}, "itemId": "ZLUg3O5w", "itemType": "RNAdWJSq", "sku": "yz5KyRxw", "stackable": true, "useCount": 50}, {"bundledQty": 84, "entitlementType": "rLDxXEno", "inventoryConfig": {"slotUsed": 12}, "itemId": "itLjUGzd", "itemType": "jW5qsKpx", "sku": "0356g6JN", "stackable": false, "useCount": 36}], "quantity": 63, "sku": "Zvbg7zns", "stackable": false, "useCount": 48}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminPurchasable \
    --namespace $AB_NAMESPACE \
    --userId '73d0alL7' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 31 'AdminPurchasable' test.out

#- 32 PublicListInventoryConfigurations
$CLI_EXE \
    --sn inventory \
    --op PublicListInventoryConfigurations \
    --namespace $AB_NAMESPACE \
    --code 'nPVCf7W3' \
    --limit '47' \
    --offset '97' \
    --sortBy 'updatedAt:asc' \
    > test.out 2>&1
eval_tap $? 32 'PublicListInventoryConfigurations' test.out

#- 33 PublicListItemTypes
$CLI_EXE \
    --sn inventory \
    --op PublicListItemTypes \
    --namespace $AB_NAMESPACE \
    --limit '49' \
    --offset '74' \
    --sortBy 'name:asc' \
    > test.out 2>&1
eval_tap $? 33 'PublicListItemTypes' test.out

#- 34 PublicListTags
$CLI_EXE \
    --sn inventory \
    --op PublicListTags \
    --namespace $AB_NAMESPACE \
    --limit '10' \
    --offset '75' \
    --sortBy 'name' \
    > test.out 2>&1
eval_tap $? 34 'PublicListTags' test.out

#- 35 PublicListInventories
$CLI_EXE \
    --sn inventory \
    --op PublicListInventories \
    --namespace $AB_NAMESPACE \
    --inventoryConfigurationCode 'fkPnqJ4Q' \
    --limit '4' \
    --offset '23' \
    --sortBy 'updatedAt:desc' \
    > test.out 2>&1
eval_tap $? 35 'PublicListInventories' test.out

#- 36 PublicConsumeMyItem
# body param: body
echo '{"qty": 84, "slotId": "tpKic5oz", "sourceItemId": "qwdHkWNJ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op PublicConsumeMyItem \
    --inventoryId 'bC80MCdV' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 36 'PublicConsumeMyItem' test.out

#- 37 PublicListItems
$CLI_EXE \
    --sn inventory \
    --op PublicListItems \
    --inventoryId 'w1sbWmpK' \
    --namespace $AB_NAMESPACE \
    --limit '45' \
    --offset '60' \
    --qtyGte '9' \
    --sortBy 'createdAt:asc' \
    --sourceItemId '4x1lW00b' \
    --tags 'UIe7f7c9' \
    > test.out 2>&1
eval_tap $? 37 'PublicListItems' test.out

#- 38 PublicBulkUpdateMyItems
# body param: body
echo '[{"customAttributes": {"f4l3gR8V": {}, "y8LpuSat": {}, "R1bXjMxJ": {}}, "slotId": "jolZyWEK", "sourceItemId": "u79NlKM4", "tags": ["qAWHWKa9", "lnPRDdec", "Ovqhqadl"]}, {"customAttributes": {"4LyXJ97m": {}, "DQpiCZqc": {}, "7JmVtoop": {}}, "slotId": "Ud6IyC2A", "sourceItemId": "Zhqvjh93", "tags": ["sVAqBo8i", "dHUqht22", "3r1Wjlwl"]}, {"customAttributes": {"I38ylXDi": {}, "Qp4DmPNp": {}, "DRKDSX4a": {}}, "slotId": "hZOnMnY8", "sourceItemId": "fA1s5zjl", "tags": ["UV9MEZDF", "9niu4OBG", "b5vf53Jd"]}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op PublicBulkUpdateMyItems \
    --inventoryId 'OEtaTDFx' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 38 'PublicBulkUpdateMyItems' test.out

#- 39 PublicBulkRemoveMyItems
# body param: body
echo '[{"slotId": "bEPgswS1", "sourceItemId": "mkTpieTF"}, {"slotId": "FN8cn2rU", "sourceItemId": "29vYmIBG"}, {"slotId": "q5fmixr0", "sourceItemId": "yDACSPfF"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op PublicBulkRemoveMyItems \
    --inventoryId 'dNXkVUxa' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 39 'PublicBulkRemoveMyItems' test.out

#- 40 PublicMoveMyItems
# body param: body
echo '{"items": [{"qty": 11, "slotId": "e2PEQfJs", "sourceItemId": "uLjfJrih"}, {"qty": 18, "slotId": "UYvUdvfv", "sourceItemId": "G782VLib"}, {"qty": 91, "slotId": "Y71NfE5B", "sourceItemId": "8dEZCd43"}], "srcInventoryId": "yCTXkOcv"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op PublicMoveMyItems \
    --inventoryId 'ZsmJJIRE' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 40 'PublicMoveMyItems' test.out

#- 41 PublicGetItem
$CLI_EXE \
    --sn inventory \
    --op PublicGetItem \
    --inventoryId 'JFNiQxqc' \
    --namespace $AB_NAMESPACE \
    --slotId 'AulFZ4Kx' \
    --sourceItemId 'MMZur8tc' \
    > test.out 2>&1
eval_tap $? 41 'PublicGetItem' test.out


# remove artifacts
rm -f "$CLI_TOKEN_FILE"
rm -f "$TEMP_JSON_INPUT"
rm -f "$TEMP_FILE_UPLOAD"

exit $EXIT_CODE