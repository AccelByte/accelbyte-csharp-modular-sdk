#!/usr/bin/env bash

# Copyright (c) 2021 AccelByte Inc. All Rights Reserved.
# This is licensed software from AccelByte Inc, for limitations
# and restrictions contact your company contract manager.

# This code is generated by tool. DO NOT EDIT.

# Meta:
# - random seed: 
# - template file: 

# Instructions:
# - Run the Justice SDK Mock Server first before running this script.

export AB_BASE_URL="http://127.0.0.1:8080"
export AB_CLIENT_ID="admin"
export AB_CLIENT_SECRET="admin"
export AB_NAMESPACE="test"
export AB_APP_NAME="UnitTest"

EXIT_CODE=0

eval_tap() {
  if [ $1 -eq 0 ]; then
    echo "ok $2 - $3"
  else
    EXIT_CODE=1
    echo "not ok $2 - $3"
    sed 's/^/# /g' $4
  fi
  rm -f $4
}

CLI_EXE="AccelByte.Sdk.Sample.Cli"
CLI_TOKEN_FILE="$(dirname "$(which $CLI_EXE)")/token.json"
TEMP_JSON_INPUT="input_json.json"
TEMP_FILE_UPLOAD="file_upload.bin"

echo "TAP version 13"
echo "1..35"

#- 1 Login
$CLI_EXE --op login --lt user --user user --pass user > test.out 2>&1
eval_tap $? 1 'Login' test.out

if [ $EXIT_CODE -ne 0 ]; then
  echo "Bail out! Login failed."
  exit $EXIT_CODE
fi

# echo "foo" > "$CLI_TOKEN_FILE"

#- 2 AdminCreateChainingOperations
# body param: body
echo '{"message": "sxFs2kT2", "operations": [{"consumeItems": [{"inventoryId": "BCTMXYRm", "qty": 83, "slotId": "Ou5arQCE", "sourceItemId": "xiqweUDT"}, {"inventoryId": "CsgGdr4h", "qty": 61, "slotId": "js7Tau5G", "sourceItemId": "cz8uESDM"}, {"inventoryId": "Uc4Aq7ZP", "qty": 76, "slotId": "HisdpBvq", "sourceItemId": "bzgHrAmf"}], "createItems": [{"customAttributes": {"CZ1LWTuw": {}, "dP7jefwn": {}, "6u9sEyHs": {}}, "inventoryConfigurationCode": "t6qWD5FI", "inventoryId": "pS2dEMGd", "qty": 12, "serverCustomAttributes": {"18uUMj7v": {}, "4xsEr78R": {}, "uV2fSi9T": {}}, "slotId": "4mlcMLNg", "slotUsed": 13, "sourceItemId": "ngZGkpUw", "tags": ["PpzscRKM", "Q1g9TKwx", "F0m730eT"], "toSpecificInventory": false, "type": "hJRoHvvl"}, {"customAttributes": {"adFjOH5T": {}, "9SKxEdB3": {}, "FUz1spBq": {}}, "inventoryConfigurationCode": "flKy4Fkk", "inventoryId": "lAHrjyX8", "qty": 70, "serverCustomAttributes": {"4cxmYt6U": {}, "01QWX0YI": {}, "fc99WJ2h": {}}, "slotId": "WWs2oSFx", "slotUsed": 46, "sourceItemId": "1CGWKdYy", "tags": ["o0XnXK5o", "rji9Kg57", "IWPN3nS0"], "toSpecificInventory": true, "type": "2velc2Bp"}, {"customAttributes": {"W7acYKum": {}, "rF013iCQ": {}, "cOIYuNEn": {}}, "inventoryConfigurationCode": "s4WL7XaB", "inventoryId": "tyTcLQ03", "qty": 31, "serverCustomAttributes": {"TyFWsnQu": {}, "TSXglej7": {}, "hHAcwjJ3": {}}, "slotId": "vfH4VobG", "slotUsed": 75, "sourceItemId": "TGutipQW", "tags": ["eSDV6N9L", "ZxXrqrSD", "K0QI1f3W"], "toSpecificInventory": false, "type": "Q74qyolx"}], "removeItems": [{"inventoryId": "d1rLuShR", "slotId": "MoVQ4eMI", "sourceItemId": "o2CS2j8q"}, {"inventoryId": "ywIEjSJT", "slotId": "L83eNJqY", "sourceItemId": "VoTmPQSx"}, {"inventoryId": "zJ6IZUlA", "slotId": "FlH3fH9n", "sourceItemId": "5oo7tZK8"}], "targetUserId": "2eZN1GKj", "updateItems": [{"customAttributes": {"pU6DEeYQ": {}, "bAG6sXBh": {}, "dlRoSHIp": {}}, "inventoryId": "37QMMbeD", "serverCustomAttributes": {"2Ivysc4F": {}, "yTkXxRGU": {}, "HgKhAsQt": {}}, "slotId": "5QbRRSGr", "sourceItemId": "4sDh19zC", "tags": ["B28ulwoF", "NUusdN1I", "lil3Erhx"], "type": "uIdl7E8t"}, {"customAttributes": {"nU5cerVq": {}, "KD9SEjjx": {}, "evmQ1L8q": {}}, "inventoryId": "bZ3I1fkO", "serverCustomAttributes": {"ZxD5V9mq": {}, "yQKjWG5x": {}, "NkUnCIxf": {}}, "slotId": "llGn2LCB", "sourceItemId": "IyazXfu9", "tags": ["ggmyTR7u", "Kxktbo68", "GbHe8EyG"], "type": "9UnVV4ws"}, {"customAttributes": {"AruLQrpG": {}, "9AyV8PX3": {}, "WH9v02I3": {}}, "inventoryId": "4Q2BhFG7", "serverCustomAttributes": {"70DbJvmH": {}, "dAKrvktJ": {}, "cxHeV6mc": {}}, "slotId": "oWFjF4yl", "sourceItemId": "MzcNjLvE", "tags": ["tK2lODMf", "DS5JYc9I", "y7SYzhUM"], "type": "0ZaVqKJD"}]}, {"consumeItems": [{"inventoryId": "rDtycwe7", "qty": 95, "slotId": "lUXZFFHb", "sourceItemId": "UCgGy0j4"}, {"inventoryId": "UkMVgIhT", "qty": 55, "slotId": "vEiVPj0j", "sourceItemId": "xj35Wb6W"}, {"inventoryId": "yRyFlsQz", "qty": 52, "slotId": "vmZktwT5", "sourceItemId": "gNOvll6w"}], "createItems": [{"customAttributes": {"BNTwxGrS": {}, "9WhlzHmF": {}, "iTrC2oUJ": {}}, "inventoryConfigurationCode": "O7K71fH5", "inventoryId": "RuUlLSeN", "qty": 36, "serverCustomAttributes": {"yWtsEhy9": {}, "LeV5D6vD": {}, "cdVRoYbg": {}}, "slotId": "LPKE7i59", "slotUsed": 40, "sourceItemId": "wUMGqcgx", "tags": ["Jmg9XrvG", "SQmb75Re", "JieRcrPZ"], "toSpecificInventory": false, "type": "AHO4JCCl"}, {"customAttributes": {"0ysn2iRL": {}, "v1Wk7y2U": {}, "3jtYL1Dv": {}}, "inventoryConfigurationCode": "p1UuYIB8", "inventoryId": "RQVqCwm8", "qty": 42, "serverCustomAttributes": {"jQGDCW3D": {}, "mqCKtAcr": {}, "AzfB34js": {}}, "slotId": "2fc9rTP9", "slotUsed": 91, "sourceItemId": "BvW6fcyO", "tags": ["mXRCGuU2", "tztVnw3n", "NYI1le9Z"], "toSpecificInventory": true, "type": "NZl0fn1f"}, {"customAttributes": {"UDvxuHMZ": {}, "VCUuKd8x": {}, "tlvNuHO9": {}}, "inventoryConfigurationCode": "8Z9ozPNr", "inventoryId": "61t8TQhP", "qty": 25, "serverCustomAttributes": {"itJn2z4K": {}, "mGkcPtu3": {}, "LHCc01dM": {}}, "slotId": "7CQt5427", "slotUsed": 43, "sourceItemId": "CGBdTalS", "tags": ["l2FImCcm", "FbOst7gF", "vyGN0edG"], "toSpecificInventory": false, "type": "LzzS5wFL"}], "removeItems": [{"inventoryId": "WXKhNdTu", "slotId": "9O5GgXhT", "sourceItemId": "KTMuIR56"}, {"inventoryId": "qVncnjsz", "slotId": "aUS5kzVr", "sourceItemId": "aOdaT7UO"}, {"inventoryId": "utH6ft8b", "slotId": "W37g9LQT", "sourceItemId": "vQBVvkRE"}], "targetUserId": "x68WaTU2", "updateItems": [{"customAttributes": {"Jz1tx2O7": {}, "bxzZEZkF": {}, "3j9bQ4dg": {}}, "inventoryId": "FeJjuLMR", "serverCustomAttributes": {"7SttUR4D": {}, "W0GX1RU9": {}, "LERA0sBc": {}}, "slotId": "lbTggTO2", "sourceItemId": "suQR9Bzs", "tags": ["LhczTqcz", "mYw6Xf2z", "Q4byvoIM"], "type": "hm4TnKEQ"}, {"customAttributes": {"pKCpMhfM": {}, "nrUTlzB8": {}, "MEPB9PaQ": {}}, "inventoryId": "EFTFbpj0", "serverCustomAttributes": {"8CVbHLoN": {}, "vyZVBy15": {}, "5ioGKSxu": {}}, "slotId": "TaMchoTe", "sourceItemId": "8HAiYnQ0", "tags": ["0PfhFnh5", "ZCLbg5gP", "5TovKZwW"], "type": "xZlSrrTd"}, {"customAttributes": {"6K4Cxrjf": {}, "7fSELLkv": {}, "FVk6d0ak": {}}, "inventoryId": "lZjeWPo6", "serverCustomAttributes": {"7OfnHH6h": {}, "eYfgKl0p": {}, "P80bd9Ju": {}}, "slotId": "7sIHY3N6", "sourceItemId": "xpZBkXwN", "tags": ["OUxnyi3L", "FPCb9UBy", "Vg5BKPnz"], "type": "PPkeqkKD"}]}, {"consumeItems": [{"inventoryId": "7gAznLJZ", "qty": 55, "slotId": "4XmV5Unr", "sourceItemId": "6tkG0Rx8"}, {"inventoryId": "optwX8ou", "qty": 66, "slotId": "CH6YREcz", "sourceItemId": "cj5M26KI"}, {"inventoryId": "ZjzURVj0", "qty": 56, "slotId": "9nVHT3I2", "sourceItemId": "YHVkmgPX"}], "createItems": [{"customAttributes": {"U18Lh8hI": {}, "ul7txW24": {}, "9bBu7A1N": {}}, "inventoryConfigurationCode": "8TyNjbZl", "inventoryId": "Eh7FTE1s", "qty": 20, "serverCustomAttributes": {"ioobFBoi": {}, "neCvFjfQ": {}, "SgR1FZj4": {}}, "slotId": "G1XVOx0y", "slotUsed": 56, "sourceItemId": "NxrMztNd", "tags": ["ApZ7YBhi", "QQHOmGGt", "qfZI7EZS"], "toSpecificInventory": false, "type": "oVL2Keso"}, {"customAttributes": {"7WnwiqNt": {}, "QkLNRqcp": {}, "MZ5oOuYL": {}}, "inventoryConfigurationCode": "QsCWI7Ar", "inventoryId": "ryanGXr9", "qty": 52, "serverCustomAttributes": {"WLj7amdv": {}, "otYue7cX": {}, "TiQu5bHB": {}}, "slotId": "jHe5JFpK", "slotUsed": 37, "sourceItemId": "j5NbWrE9", "tags": ["cdPKWMsf", "8wKY3kZY", "FLzt97Z2"], "toSpecificInventory": false, "type": "q6sXOoO8"}, {"customAttributes": {"vN7ZaMwV": {}, "uumABotD": {}, "2exEkQHk": {}}, "inventoryConfigurationCode": "Hh84A1Nm", "inventoryId": "h0Zg73kl", "qty": 79, "serverCustomAttributes": {"CPFKeXOo": {}, "RDKgWXdy": {}, "Oj9AQvgW": {}}, "slotId": "Te3emvOy", "slotUsed": 50, "sourceItemId": "koWADNZV", "tags": ["2L780Tj9", "pJ04fEgf", "wtaOvZA3"], "toSpecificInventory": false, "type": "JJyHW01M"}], "removeItems": [{"inventoryId": "6Y8DaD0k", "slotId": "pAcIX2Ao", "sourceItemId": "ZBG1opai"}, {"inventoryId": "ZEwCxs9g", "slotId": "v0OWOABm", "sourceItemId": "TOYM4Txb"}, {"inventoryId": "PCbRDosL", "slotId": "MC4dyXGw", "sourceItemId": "2EodQBJJ"}], "targetUserId": "vcPRfU2A", "updateItems": [{"customAttributes": {"ZQJ7gZXy": {}, "HK4NArXo": {}, "7XY17YQq": {}}, "inventoryId": "clsug1mw", "serverCustomAttributes": {"xzbHTYkd": {}, "S1zA5dJR": {}, "EO84RyoE": {}}, "slotId": "nHpKgNMu", "sourceItemId": "6s9Ov2M8", "tags": ["Ui0CGCzA", "CO2P1QSv", "u4Ck2kFG"], "type": "TkeGlUO9"}, {"customAttributes": {"TsvWEu2v": {}, "0QvwknxH": {}, "ACX90459": {}}, "inventoryId": "yyOA4Wd1", "serverCustomAttributes": {"0PL6Lltn": {}, "fpq6F5I9": {}, "hKFtuEav": {}}, "slotId": "WCGkQUkq", "sourceItemId": "sJZt20Ae", "tags": ["dt4sPDML", "l3w0quTZ", "nXo5osfj"], "type": "KJ2n0UW6"}, {"customAttributes": {"eKXsP9hA": {}, "QDCfq0YH": {}, "xrkaubDQ": {}}, "inventoryId": "tFVH7DKp", "serverCustomAttributes": {"BKhGaVFH": {}, "CmJgh4dy": {}, "WQG3y8vg": {}}, "slotId": "yxjW1eV4", "sourceItemId": "Xaqz748G", "tags": ["gtNqEWWU", "e9bapDT2", "J52NGCGL"], "type": "l2MV4BUS"}]}], "requestId": "Xj3Nk2b9"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminCreateChainingOperations \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 2 'AdminCreateChainingOperations' test.out

#- 3 AdminListInventories
$CLI_EXE \
    --sn inventory \
    --op AdminListInventories \
    --namespace $AB_NAMESPACE \
    --inventoryConfigurationCode 'RnSFaa0J' \
    --limit '9' \
    --offset '81' \
    --sortBy 'inventoryConfigurationCode' \
    --userId 'njvvnMLi' \
    > test.out 2>&1
eval_tap $? 3 'AdminListInventories' test.out

#- 4 AdminCreateInventory
# body param: body
echo '{"inventoryConfigurationCode": "IKxDNMDg", "userId": "B5DLcJkS"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminCreateInventory \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 4 'AdminCreateInventory' test.out

#- 5 AdminGetInventory
$CLI_EXE \
    --sn inventory \
    --op AdminGetInventory \
    --inventoryId 'pOvqrcNM' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 5 'AdminGetInventory' test.out

#- 6 AdminUpdateInventory
# body param: body
echo '{"incMaxSlots": 31}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminUpdateInventory \
    --inventoryId 'Nu0DFxPE' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 6 'AdminUpdateInventory' test.out

#- 7 DeleteInventory
# body param: body
echo '{"message": "QAn7EtD4"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op DeleteInventory \
    --inventoryId 'VzCUNhqB' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 7 'DeleteInventory' test.out

#- 8 AdminListItems
$CLI_EXE \
    --sn inventory \
    --op AdminListItems \
    --inventoryId 'Di8Ryyzz' \
    --namespace $AB_NAMESPACE \
    --limit '26' \
    --offset '61' \
    --qtyGte '18' \
    --sortBy 'updatedAt:desc' \
    --sourceItemId 'pNGcuTUg' \
    --tags 'tQ6qE8ub' \
    > test.out 2>&1
eval_tap $? 8 'AdminListItems' test.out

#- 9 AdminGetInventoryItem
$CLI_EXE \
    --sn inventory \
    --op AdminGetInventoryItem \
    --inventoryId 'LpYCkDNv' \
    --namespace $AB_NAMESPACE \
    --slotId 'KbbFuwrH' \
    --sourceItemId 'DEB7qK7m' \
    > test.out 2>&1
eval_tap $? 9 'AdminGetInventoryItem' test.out

#- 10 AdminListInventoryConfigurations
$CLI_EXE \
    --sn inventory \
    --op AdminListInventoryConfigurations \
    --namespace $AB_NAMESPACE \
    --code 'gK9XQ3MO' \
    --limit '99' \
    --offset '55' \
    --sortBy 'createdAt:asc' \
    > test.out 2>&1
eval_tap $? 10 'AdminListInventoryConfigurations' test.out

#- 11 AdminCreateInventoryConfiguration
# body param: body
echo '{"code": "aFjWykMv", "description": "tAQFjgoR", "initialMaxSlots": 91, "maxInstancesPerUser": 69, "maxUpgradeSlots": 19, "name": "sOm4c5bx"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminCreateInventoryConfiguration \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 11 'AdminCreateInventoryConfiguration' test.out

#- 12 AdminGetInventoryConfiguration
$CLI_EXE \
    --sn inventory \
    --op AdminGetInventoryConfiguration \
    --inventoryConfigurationId '8T48iDke' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 12 'AdminGetInventoryConfiguration' test.out

#- 13 AdminUpdateInventoryConfiguration
# body param: body
echo '{"code": "CBHJAqTi", "description": "rTsjBrsR", "initialMaxSlots": 7, "maxInstancesPerUser": 69, "maxUpgradeSlots": 46, "name": "M0SpIB69"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminUpdateInventoryConfiguration \
    --inventoryConfigurationId 'vJoOBIeQ' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 13 'AdminUpdateInventoryConfiguration' test.out

#- 14 AdminDeleteInventoryConfiguration
$CLI_EXE \
    --sn inventory \
    --op AdminDeleteInventoryConfiguration \
    --inventoryConfigurationId 'Ue1T6ZI3' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 14 'AdminDeleteInventoryConfiguration' test.out

#- 15 AdminListItemTypes
$CLI_EXE \
    --sn inventory \
    --op AdminListItemTypes \
    --namespace $AB_NAMESPACE \
    --limit '2' \
    --offset '1' \
    --sortBy 'createdAt:desc' \
    > test.out 2>&1
eval_tap $? 15 'AdminListItemTypes' test.out

#- 16 AdminCreateItemType
# body param: body
echo '{"name": "iRsPmzhW"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminCreateItemType \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 16 'AdminCreateItemType' test.out

#- 17 AdminDeleteItemType
$CLI_EXE \
    --sn inventory \
    --op AdminDeleteItemType \
    --itemTypeName 'cSfJRqj2' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 17 'AdminDeleteItemType' test.out

#- 18 AdminListTags
$CLI_EXE \
    --sn inventory \
    --op AdminListTags \
    --namespace $AB_NAMESPACE \
    --limit '47' \
    --offset '79' \
    --owner '4RJ064Bq' \
    --sortBy 'createdAt:asc' \
    > test.out 2>&1
eval_tap $? 18 'AdminListTags' test.out

#- 19 AdminCreateTag
# body param: body
echo '{"name": "B3bYTzTN", "owner": "SERVER"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminCreateTag \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 19 'AdminCreateTag' test.out

#- 20 AdminDeleteTag
$CLI_EXE \
    --sn inventory \
    --op AdminDeleteTag \
    --namespace $AB_NAMESPACE \
    --tagName 'JXT7bJsO' \
    > test.out 2>&1
eval_tap $? 20 'AdminDeleteTag' test.out

#- 21 AdminConsumeUserItem
# body param: body
echo '{"qty": 13, "slotId": "1AvuzEUJ", "sourceItemId": "QzaoViLX"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminConsumeUserItem \
    --inventoryId 'cWts4Oyc' \
    --namespace $AB_NAMESPACE \
    --userId 'dqYYYsAI' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 21 'AdminConsumeUserItem' test.out

#- 22 AdminBulkUpdateMyItems
# body param: body
echo '[{"customAttributes": {"6Y0x3BCK": {}, "1v98PpLb": {}, "9dJ5A0jv": {}}, "serverCustomAttributes": {"nhoCqbGq": {}, "bx3LagJe": {}, "RX7ImbJF": {}}, "slotId": "dqK2ZFAl", "sourceItemId": "S21qGlr3", "tags": ["oDQIx8Kr", "IQiELqVO", "YCis5Jyi"], "type": "PYA6kxUD"}, {"customAttributes": {"wvUyJytP": {}, "DuG48d2H": {}, "UjOhSXeG": {}}, "serverCustomAttributes": {"Hdpb97EE": {}, "mDylsHv3": {}, "2jWNGaeW": {}}, "slotId": "xjq5PoCX", "sourceItemId": "xJxCpIeV", "tags": ["Wpir7BHd", "HYim2aYm", "RvczSM3B"], "type": "e96nz6Xc"}, {"customAttributes": {"S3vgmxVF": {}, "GggELLO0": {}, "I2x3KgUu": {}}, "serverCustomAttributes": {"AT5qDIDh": {}, "ZJTSdzB3": {}, "UQVXDf05": {}}, "slotId": "6EIZKkAq", "sourceItemId": "lY4udHmH", "tags": ["KhxydkEI", "8L2rBQgn", "6KOvXQUZ"], "type": "t5JuIURy"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminBulkUpdateMyItems \
    --inventoryId 'yhzcsa8m' \
    --namespace $AB_NAMESPACE \
    --userId '591woKfa' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 22 'AdminBulkUpdateMyItems' test.out

#- 23 AdminSaveItemToInventory
# body param: body
echo '{"customAttributes": {"MB9dpVRr": {}, "uHjfknZw": {}, "cKA0VI5R": {}}, "qty": 58, "serverCustomAttributes": {"GLbXFfga": {}, "CC5v0qPQ": {}, "W1aH9Vcn": {}}, "slotId": "LiSua82a", "slotUsed": 41, "sourceItemId": "xfDm3bIX", "tags": ["JJBNYW2h", "nPQLcumT", "Nd0ZMsW2"], "type": "aX43bbPE"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminSaveItemToInventory \
    --inventoryId 'glvgfwvt' \
    --namespace $AB_NAMESPACE \
    --userId '85hlF4C3' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 23 'AdminSaveItemToInventory' test.out

#- 24 AdminBulkRemoveItems
# body param: body
echo '[{"slotId": "wHU9lWht", "sourceItemId": "CBYPmdgG"}, {"slotId": "KdKvGYjg", "sourceItemId": "644rDnPB"}, {"slotId": "2xxIzcp5", "sourceItemId": "5XDopWBi"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminBulkRemoveItems \
    --inventoryId '3oKdc5Ve' \
    --namespace $AB_NAMESPACE \
    --userId 'kH3D8avN' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 24 'AdminBulkRemoveItems' test.out

#- 25 AdminSaveItem
# body param: body
echo '{"customAttributes": {"iNG4eqaq": {}, "HhM2rqiU": {}, "RL2BcFQF": {}}, "inventoryConfigurationCode": "qS37sv4c", "qty": 29, "serverCustomAttributes": {"FuvUPfr9": {}, "B9RQ7Vjn": {}, "vtXy2gxJ": {}}, "slotId": "UkgJqUEc", "slotUsed": 34, "sourceItemId": "3zBu3MXs", "tags": ["0QItQMtZ", "3frhZis6", "j7nDmVDY"], "type": "11B41dBq"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminSaveItem \
    --namespace $AB_NAMESPACE \
    --userId 'STmGlntE' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 25 'AdminSaveItem' test.out

#- 26 PublicListInventoryConfigurations
$CLI_EXE \
    --sn inventory \
    --op PublicListInventoryConfigurations \
    --namespace $AB_NAMESPACE \
    --code 'x70j7zoi' \
    --limit '56' \
    --offset '54' \
    --sortBy 'code' \
    > test.out 2>&1
eval_tap $? 26 'PublicListInventoryConfigurations' test.out

#- 27 PublicListItemTypes
$CLI_EXE \
    --sn inventory \
    --op PublicListItemTypes \
    --namespace $AB_NAMESPACE \
    --limit '92' \
    --offset '89' \
    --sortBy 'createdAt:desc' \
    > test.out 2>&1
eval_tap $? 27 'PublicListItemTypes' test.out

#- 28 PublicListTags
$CLI_EXE \
    --sn inventory \
    --op PublicListTags \
    --namespace $AB_NAMESPACE \
    --limit '54' \
    --offset '53' \
    --sortBy 'createdAt:asc' \
    > test.out 2>&1
eval_tap $? 28 'PublicListTags' test.out

#- 29 PublicListInventories
$CLI_EXE \
    --sn inventory \
    --op PublicListInventories \
    --namespace $AB_NAMESPACE \
    --inventoryConfigurationCode 'drZjU5jG' \
    --limit '57' \
    --offset '22' \
    --sortBy 'updatedAt' \
    > test.out 2>&1
eval_tap $? 29 'PublicListInventories' test.out

#- 30 PublicConsumeMyItem
# body param: body
echo '{"qty": 30, "slotId": "Qx30aNwM", "sourceItemId": "g4uiDCFl"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op PublicConsumeMyItem \
    --inventoryId 'Ex1jJsBo' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 30 'PublicConsumeMyItem' test.out

#- 31 PublicListItems
$CLI_EXE \
    --sn inventory \
    --op PublicListItems \
    --inventoryId 'TWLDBd7u' \
    --namespace $AB_NAMESPACE \
    --limit '15' \
    --offset '10' \
    --qtyGte '91' \
    --sortBy 'qty' \
    --sourceItemId 'ejLzhLev' \
    --tags '3EUPAITC' \
    > test.out 2>&1
eval_tap $? 31 'PublicListItems' test.out

#- 32 PublicBulkUpdateMyItems
# body param: body
echo '[{"customAttributes": {"qPaAEPmc": {}, "AHQRMHzt": {}, "kaNPgftq": {}}, "slotId": "DcRrYb1B", "sourceItemId": "RxD41ylX", "tags": ["vkAlOpTA", "Wp2iRpqB", "Im6tLCK0"]}, {"customAttributes": {"TvciZyTl": {}, "dSrmKGIY": {}, "T3L7AX5H": {}}, "slotId": "ElZI4Hbe", "sourceItemId": "OO1xFNdD", "tags": ["BNNDXENM", "S8cBAYUk", "Ehn3psZx"]}, {"customAttributes": {"Frg2c8q7": {}, "i3FDcbNJ": {}, "WceAG4TY": {}}, "slotId": "Ja9DuvNh", "sourceItemId": "6lNBvVff", "tags": ["WtXcdiMZ", "PaurgeiU", "64ctwNSZ"]}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op PublicBulkUpdateMyItems \
    --inventoryId 'ophCNI48' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 32 'PublicBulkUpdateMyItems' test.out

#- 33 PublicBulkRemoveMyItems
# body param: body
echo '[{"slotId": "XXVyZACf", "sourceItemId": "QaFwqiDm"}, {"slotId": "YzB8uX3c", "sourceItemId": "yOC6vtr4"}, {"slotId": "bZXdgoub", "sourceItemId": "19G5PlIB"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op PublicBulkRemoveMyItems \
    --inventoryId 'UNhcgkgU' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 33 'PublicBulkRemoveMyItems' test.out

#- 34 PublicMoveMyItems
# body param: body
echo '{"items": [{"qty": 40, "slotId": "gltnUdPi", "sourceItemId": "ZOuvd3kH"}, {"qty": 86, "slotId": "dP9P1N4L", "sourceItemId": "Ii6Pplte"}, {"qty": 45, "slotId": "h0lPWKQk", "sourceItemId": "F9cfcLta"}], "srcInventoryId": "m2mNvDdk"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op PublicMoveMyItems \
    --inventoryId 'ChChLbln' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 34 'PublicMoveMyItems' test.out

#- 35 PublicGetItem
$CLI_EXE \
    --sn inventory \
    --op PublicGetItem \
    --inventoryId 'dEBd5u8w' \
    --namespace $AB_NAMESPACE \
    --slotId 'YLKJA4vK' \
    --sourceItemId 'mzDhzzK9' \
    > test.out 2>&1
eval_tap $? 35 'PublicGetItem' test.out


# remove artifacts
rm -f "$CLI_TOKEN_FILE"
rm -f "$TEMP_JSON_INPUT"
rm -f "$TEMP_FILE_UPLOAD"

exit $EXIT_CODE