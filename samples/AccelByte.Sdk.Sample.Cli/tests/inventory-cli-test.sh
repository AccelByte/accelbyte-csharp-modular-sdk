#!/usr/bin/env bash

# Copyright (c) 2021 AccelByte Inc. All Rights Reserved.
# This is licensed software from AccelByte Inc, for limitations
# and restrictions contact your company contract manager.

# This code is generated by tool. DO NOT EDIT.

# Meta:
# - random seed: 
# - template file: 

# Instructions:
# - Run the Justice SDK Mock Server first before running this script.

export AB_BASE_URL="http://127.0.0.1:8080"
export AB_CLIENT_ID="admin"
export AB_CLIENT_SECRET="admin"
export AB_NAMESPACE="test"
export AB_APP_NAME="UnitTest"

EXIT_CODE=0

eval_tap() {
  if [ $1 -eq 0 ]; then
    echo "ok $2 - $3"
  else
    EXIT_CODE=1
    echo "not ok $2 - $3"
    sed 's/^/# /g' $4
  fi
  rm -f $4
}

CLI_EXE="AccelByte.Sdk.Sample.Cli"
CLI_TOKEN_FILE="$(dirname "$(which $CLI_EXE)")/token.json"
TEMP_JSON_INPUT="input_json.json"
TEMP_FILE_UPLOAD="file_upload.bin"

echo "TAP version 13"
echo "1..35"

#- 1 Login
$CLI_EXE --op login --lt user --user user --pass user > test.out 2>&1
eval_tap $? 1 'Login' test.out

if [ $EXIT_CODE -ne 0 ]; then
  echo "Bail out! Login failed."
  exit $EXIT_CODE
fi

# echo "foo" > "$CLI_TOKEN_FILE"

#- 2 AdminCreateChainingOperations
# body param: body
echo '{"message": "GfzhUd1C", "operations": [{"consumeItems": [{"inventoryId": "mLyEhysr", "qty": 4, "slotId": "g9TXe98w", "sourceItemId": "05fxNh6d"}, {"inventoryId": "OUEsmmag", "qty": 28, "slotId": "6bck4mQU", "sourceItemId": "Ylb5uytb"}, {"inventoryId": "R2LGEfI1", "qty": 55, "slotId": "Xbx0tBhb", "sourceItemId": "EhKDmRQ3"}], "createItems": [{"customAttributes": {"HQCk4Mww": {}, "uNflsM9g": {}, "TtWUgEiU": {}}, "inventoryConfigurationCode": "pZqToku8", "inventoryId": "5eRKR3c7", "qty": 34, "serverCustomAttributes": {"mYtNJwuZ": {}, "yFkQ9EGR": {}, "GNIbhVvs": {}}, "slotId": "s0x9ddcV", "slotUsed": 85, "sourceItemId": "Dd3m0mxd", "tags": ["Uq6bICYp", "iugL9MMn", "w6NOUWaV"], "toSpecificInventory": false, "type": "5W4SzxYe"}, {"customAttributes": {"l6Bx5S94": {}, "Or9sp9jl": {}, "DEjbJtwY": {}}, "inventoryConfigurationCode": "9CIy5EyP", "inventoryId": "To6E9Wex", "qty": 27, "serverCustomAttributes": {"xHCw2TJx": {}, "jiJPOxDm": {}, "tfn80X40": {}}, "slotId": "c0TdKvto", "slotUsed": 93, "sourceItemId": "xCS7eSbC", "tags": ["EFecjUT4", "lu8XC82X", "eOYBiqai"], "toSpecificInventory": true, "type": "QO6Wtf67"}, {"customAttributes": {"gBxVXyDs": {}, "ve0Q0pHd": {}, "w3k72KKZ": {}}, "inventoryConfigurationCode": "CjtNOjQN", "inventoryId": "IqkGehtG", "qty": 84, "serverCustomAttributes": {"hYWeabDn": {}, "5f4Dvoee": {}, "zAvcY0Ol": {}}, "slotId": "xTaeauWp", "slotUsed": 92, "sourceItemId": "vqKOkKcD", "tags": ["0DLBTUFI", "xJnUOoA6", "qtYAOCto"], "toSpecificInventory": false, "type": "6yoSpPX6"}], "removeItems": [{"inventoryId": "Bzmu8SDz", "slotId": "yr7a9KJc", "sourceItemId": "pqie5LKE"}, {"inventoryId": "gggm5vRa", "slotId": "T82jyPyA", "sourceItemId": "92dhMmxh"}, {"inventoryId": "Xd4qp7fj", "slotId": "khVavKGb", "sourceItemId": "kRsCckol"}], "targetUserId": "QqRyPR7a", "updateItems": [{"customAttributes": {"hfwJq29j": {}, "5A5JXG14": {}, "l8Bw4bDm": {}}, "inventoryId": "MOKWS6a2", "serverCustomAttributes": {"yCUulX2h": {}, "DaVvsWc8": {}, "fJ0uZcYJ": {}}, "slotId": "AHPgslub", "sourceItemId": "jy5bri0o", "tags": ["FhsAjkcZ", "tq7FRrYr", "HxutjA3R"], "type": "ZPPqglNh"}, {"customAttributes": {"cxqpz1Ul": {}, "cwGpfInm": {}, "BydQzqSf": {}}, "inventoryId": "LFOxV8Cn", "serverCustomAttributes": {"UPcWJ07c": {}, "FKWRuouR": {}, "QqQ9ZIpz": {}}, "slotId": "5ne8mOSZ", "sourceItemId": "ghzX40FI", "tags": ["TE66MI5T", "04lCVMGN", "GtsmowxZ"], "type": "TZ89GqYm"}, {"customAttributes": {"TUPauH0g": {}, "hszHqdNz": {}, "mnB3ichG": {}}, "inventoryId": "ED9I8nNm", "serverCustomAttributes": {"iuPASoJO": {}, "NGjMCACl": {}, "PtBGzy2f": {}}, "slotId": "PTECVaJg", "sourceItemId": "Vz8Wo2Yd", "tags": ["Dh6blQ6h", "WYY9Pnu6", "P8reDfUP"], "type": "IGVCdiJL"}]}, {"consumeItems": [{"inventoryId": "oqYb8ez9", "qty": 84, "slotId": "G9jvjV0G", "sourceItemId": "sQ8yEUxJ"}, {"inventoryId": "vSPcLMUX", "qty": 99, "slotId": "knsxMuVc", "sourceItemId": "uhr4rwkp"}, {"inventoryId": "G2QbfE7i", "qty": 64, "slotId": "uZYj2OmC", "sourceItemId": "lqgNchYE"}], "createItems": [{"customAttributes": {"JL0BbzB5": {}, "nvhfSGaE": {}, "LCT1EBmP": {}}, "inventoryConfigurationCode": "uhLYSNJa", "inventoryId": "xWENSOJd", "qty": 95, "serverCustomAttributes": {"bTYsxKvH": {}, "A6x1QPAT": {}, "26BJHSw0": {}}, "slotId": "ysYztyJ1", "slotUsed": 74, "sourceItemId": "1MS2kkhB", "tags": ["PPCohxcK", "a9XcsrXl", "tW9LlHUP"], "toSpecificInventory": false, "type": "nX2xyt3i"}, {"customAttributes": {"1t82TLpr": {}, "x2y3KVh2": {}, "W1VLdJGm": {}}, "inventoryConfigurationCode": "QOOv39hk", "inventoryId": "LiRMnueY", "qty": 100, "serverCustomAttributes": {"nkguCMmy": {}, "bNiliutA": {}, "IVvqTe0W": {}}, "slotId": "7KliB2L3", "slotUsed": 47, "sourceItemId": "Gb3cimw9", "tags": ["00sZfQsp", "LGcK8klR", "Ekx4yEZQ"], "toSpecificInventory": true, "type": "zJ7lHPyY"}, {"customAttributes": {"6bwzCxpL": {}, "8UhcvB1T": {}, "g5lhLrBb": {}}, "inventoryConfigurationCode": "ACjVMS4L", "inventoryId": "V9zRGKFi", "qty": 26, "serverCustomAttributes": {"T83mmy8a": {}, "f5yJH1Kq": {}, "wSPH5r5c": {}}, "slotId": "2kWntNym", "slotUsed": 47, "sourceItemId": "WLoMav1X", "tags": ["P5RqpDks", "CZcyob6n", "bMZsq842"], "toSpecificInventory": false, "type": "QGXrB5bW"}], "removeItems": [{"inventoryId": "2ixHlEHA", "slotId": "ct3FHrTX", "sourceItemId": "8Q7OIUir"}, {"inventoryId": "grjQJZiH", "slotId": "aC1WWJiq", "sourceItemId": "rdEQp5vG"}, {"inventoryId": "WzPM0nPQ", "slotId": "JHHl94yY", "sourceItemId": "pZ3MxKcn"}], "targetUserId": "SmsKI7CP", "updateItems": [{"customAttributes": {"YDLdcQrn": {}, "utBAFn0T": {}, "jF76whg0": {}}, "inventoryId": "PxsaKZKR", "serverCustomAttributes": {"OVFmhUq6": {}, "TlQoPfgX": {}, "C9kzqiiT": {}}, "slotId": "qWfMLsdu", "sourceItemId": "cUE9ryfZ", "tags": ["0Ud8ygMb", "RFmrFOzj", "PMKGs8lR"], "type": "TdBI6Ru8"}, {"customAttributes": {"nxlPndtH": {}, "UcnepiWU": {}, "u6C5cA4o": {}}, "inventoryId": "v3nndAm1", "serverCustomAttributes": {"Zfx7yHia": {}, "kVFQJghL": {}, "O1O31SsO": {}}, "slotId": "8Ay6S2tC", "sourceItemId": "8ELT2CPu", "tags": ["gvWUVrtI", "p5KxesEJ", "2m51m6IP"], "type": "MgaJzXc7"}, {"customAttributes": {"tg9YVWcm": {}, "7hn6yYyJ": {}, "7iilSieK": {}}, "inventoryId": "AuC9jdyz", "serverCustomAttributes": {"86AV3svE": {}, "uDgAnkp0": {}, "nqhjgJFu": {}}, "slotId": "3H1S7muo", "sourceItemId": "1PXXBbZW", "tags": ["U5zUnTh0", "xWZrNurd", "7jGh6EeW"], "type": "VdTTRXQL"}]}, {"consumeItems": [{"inventoryId": "DWkxy1dH", "qty": 98, "slotId": "o67uLpFJ", "sourceItemId": "rcasLGB0"}, {"inventoryId": "eoUIkFMY", "qty": 80, "slotId": "RwOFV4m6", "sourceItemId": "ifi4H077"}, {"inventoryId": "wjgZD8Oe", "qty": 86, "slotId": "UxCfGAOp", "sourceItemId": "Cl1lZZIj"}], "createItems": [{"customAttributes": {"izrQvYZf": {}, "kvgRUBYr": {}, "g4hGT8o3": {}}, "inventoryConfigurationCode": "xLp88acH", "inventoryId": "dBSKFwO2", "qty": 51, "serverCustomAttributes": {"dl02MFua": {}, "UcntuPxz": {}, "vcJ1bDnU": {}}, "slotId": "Lg10CaTF", "slotUsed": 27, "sourceItemId": "wqBE5Xl3", "tags": ["NYSvGxH4", "LtDdm9Ig", "Rbf5RKCi"], "toSpecificInventory": true, "type": "64LNx6br"}, {"customAttributes": {"kQ9ukL3Y": {}, "WRTImPAW": {}, "ExFPU224": {}}, "inventoryConfigurationCode": "6SLqRDxD", "inventoryId": "7g15yuAh", "qty": 93, "serverCustomAttributes": {"IFLwoA15": {}, "OsGswX9n": {}, "czm725JX": {}}, "slotId": "C5itsyp2", "slotUsed": 77, "sourceItemId": "b5yFWNwQ", "tags": ["DjWdqbIk", "LgtX7Jmu", "uVK3MIBc"], "toSpecificInventory": true, "type": "ANbfJzXD"}, {"customAttributes": {"Vue4hHfg": {}, "zUR8uiaM": {}, "eV9cwjEL": {}}, "inventoryConfigurationCode": "pV9FBMkb", "inventoryId": "BLnlXxXo", "qty": 3, "serverCustomAttributes": {"1kUogKHY": {}, "t9p3Xk5t": {}, "eDR1C5Fr": {}}, "slotId": "0OceuhHo", "slotUsed": 24, "sourceItemId": "rjny9oDH", "tags": ["uGn5gA1C", "qCLEzUAN", "g6T1ghcu"], "toSpecificInventory": false, "type": "GyP4nHs5"}], "removeItems": [{"inventoryId": "XD8ClHir", "slotId": "XyPhauZw", "sourceItemId": "EzknLmGI"}, {"inventoryId": "ARplK0NZ", "slotId": "O3lAMN3h", "sourceItemId": "1wNQKBZR"}, {"inventoryId": "0AVptLMo", "slotId": "YfvVDbOp", "sourceItemId": "9Ytp3MqV"}], "targetUserId": "ILhuD5K6", "updateItems": [{"customAttributes": {"y2pJ1QYj": {}, "umXfcMwF": {}, "7aUzR0w4": {}}, "inventoryId": "d1JJJ3SD", "serverCustomAttributes": {"qaEX22jB": {}, "UBFOFPMj": {}, "u2QWEslQ": {}}, "slotId": "IqDOOVCU", "sourceItemId": "lE1FgeUJ", "tags": ["816e6lQ4", "EVrP2HxH", "V4nIkOLF"], "type": "fKaLhcnw"}, {"customAttributes": {"g3x6hl3d": {}, "uuiownD5": {}, "eezu6CsD": {}}, "inventoryId": "g9TU7Kz9", "serverCustomAttributes": {"60y9NwC4": {}, "4DHGmIow": {}, "NATUpDNB": {}}, "slotId": "6gxEuiaY", "sourceItemId": "YMaAUzRi", "tags": ["qHAd59LV", "M7qqs5OG", "1Jbk1tnZ"], "type": "RthpX3si"}, {"customAttributes": {"eqMinwkE": {}, "BUyLzvRh": {}, "K2dRISGq": {}}, "inventoryId": "EcfKzG69", "serverCustomAttributes": {"GOSRlknl": {}, "rxGptvzX": {}, "5grlfj8F": {}}, "slotId": "1WCuKOJr", "sourceItemId": "yUynBo88", "tags": ["xT5mHfCL", "zm5x6mxD", "WQidMQ4E"], "type": "nnkUicBA"}]}], "requestId": "AaKoaERe"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminCreateChainingOperations \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 2 'AdminCreateChainingOperations' test.out

#- 3 AdminListInventories
$CLI_EXE \
    --sn inventory \
    --op AdminListInventories \
    --namespace $AB_NAMESPACE \
    --inventoryConfigurationCode 'nmupXzOX' \
    --limit '100' \
    --offset '92' \
    --sortBy 'updatedAt:desc' \
    --userId 'L9geCF5G' \
    > test.out 2>&1
eval_tap $? 3 'AdminListInventories' test.out

#- 4 AdminCreateInventory
# body param: body
echo '{"inventoryConfigurationCode": "fYU2sRUS", "userId": "hTu7YOGI"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminCreateInventory \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 4 'AdminCreateInventory' test.out

#- 5 AdminGetInventory
$CLI_EXE \
    --sn inventory \
    --op AdminGetInventory \
    --inventoryId 'yKnlrJJl' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 5 'AdminGetInventory' test.out

#- 6 AdminUpdateInventory
# body param: body
echo '{"incMaxSlots": 29}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminUpdateInventory \
    --inventoryId '5niyvv3k' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 6 'AdminUpdateInventory' test.out

#- 7 DeleteInventory
# body param: body
echo '{"message": "2PqyIkPq"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op DeleteInventory \
    --inventoryId 'CHSrAbEM' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 7 'DeleteInventory' test.out

#- 8 AdminListItems
$CLI_EXE \
    --sn inventory \
    --op AdminListItems \
    --inventoryId 'PPyp17RX' \
    --namespace $AB_NAMESPACE \
    --limit '81' \
    --offset '71' \
    --qtyGte '100' \
    --sortBy 'qty:desc' \
    --sourceItemId 'jFoAn0L3' \
    --tags 'bpMidHdS' \
    > test.out 2>&1
eval_tap $? 8 'AdminListItems' test.out

#- 9 AdminGetInventoryItem
$CLI_EXE \
    --sn inventory \
    --op AdminGetInventoryItem \
    --inventoryId 'XdZc2YVz' \
    --namespace $AB_NAMESPACE \
    --slotId 'TyMISb92' \
    --sourceItemId 'IZ4UvokQ' \
    > test.out 2>&1
eval_tap $? 9 'AdminGetInventoryItem' test.out

#- 10 AdminListInventoryConfigurations
$CLI_EXE \
    --sn inventory \
    --op AdminListInventoryConfigurations \
    --namespace $AB_NAMESPACE \
    --code 'Q1YJNHSl' \
    --limit '18' \
    --offset '76' \
    --sortBy 'updatedAt:asc' \
    > test.out 2>&1
eval_tap $? 10 'AdminListInventoryConfigurations' test.out

#- 11 AdminCreateInventoryConfiguration
# body param: body
echo '{"code": "Vceg0Oet", "description": "aIRJgxAK", "initialMaxSlots": 6, "maxInstancesPerUser": 73, "maxUpgradeSlots": 69, "name": "8cFccatD"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminCreateInventoryConfiguration \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 11 'AdminCreateInventoryConfiguration' test.out

#- 12 AdminGetInventoryConfiguration
$CLI_EXE \
    --sn inventory \
    --op AdminGetInventoryConfiguration \
    --inventoryConfigurationId 'l3hqVYRC' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 12 'AdminGetInventoryConfiguration' test.out

#- 13 AdminUpdateInventoryConfiguration
# body param: body
echo '{"code": "gc3RK1Xt", "description": "34H84SCr", "initialMaxSlots": 44, "maxInstancesPerUser": 39, "maxUpgradeSlots": 46, "name": "gLTCmkIl"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminUpdateInventoryConfiguration \
    --inventoryConfigurationId 'fwAQnlMH' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 13 'AdminUpdateInventoryConfiguration' test.out

#- 14 AdminDeleteInventoryConfiguration
$CLI_EXE \
    --sn inventory \
    --op AdminDeleteInventoryConfiguration \
    --inventoryConfigurationId 'KTErZiul' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 14 'AdminDeleteInventoryConfiguration' test.out

#- 15 AdminListItemTypes
$CLI_EXE \
    --sn inventory \
    --op AdminListItemTypes \
    --namespace $AB_NAMESPACE \
    --limit '33' \
    --offset '4' \
    --sortBy 'createdAt' \
    > test.out 2>&1
eval_tap $? 15 'AdminListItemTypes' test.out

#- 16 AdminCreateItemType
# body param: body
echo '{"name": "41iNYmF3"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminCreateItemType \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 16 'AdminCreateItemType' test.out

#- 17 AdminDeleteItemType
$CLI_EXE \
    --sn inventory \
    --op AdminDeleteItemType \
    --itemTypeName 'UOUuMLMw' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 17 'AdminDeleteItemType' test.out

#- 18 AdminListTags
$CLI_EXE \
    --sn inventory \
    --op AdminListTags \
    --namespace $AB_NAMESPACE \
    --limit '95' \
    --offset '55' \
    --owner 'o7B32hvC' \
    --sortBy 'createdAt' \
    > test.out 2>&1
eval_tap $? 18 'AdminListTags' test.out

#- 19 AdminCreateTag
# body param: body
echo '{"name": "WqNcRjym", "owner": "CLIENT"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminCreateTag \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 19 'AdminCreateTag' test.out

#- 20 AdminDeleteTag
$CLI_EXE \
    --sn inventory \
    --op AdminDeleteTag \
    --namespace $AB_NAMESPACE \
    --tagName 'WUN7FQHH' \
    > test.out 2>&1
eval_tap $? 20 'AdminDeleteTag' test.out

#- 21 AdminConsumeUserItem
# body param: body
echo '{"qty": 63, "slotId": "nq3T4WU9", "sourceItemId": "B18QRhZD"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminConsumeUserItem \
    --inventoryId 'NDeGLutZ' \
    --namespace $AB_NAMESPACE \
    --userId 't18VNMCF' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 21 'AdminConsumeUserItem' test.out

#- 22 AdminBulkUpdateMyItems
# body param: body
echo '[{"customAttributes": {"XOncrWOW": {}, "can8D02Q": {}, "6yd1jqgC": {}}, "serverCustomAttributes": {"kaspLaUL": {}, "nyIRxA3N": {}, "qj7hzfSz": {}}, "slotId": "x7qscbpS", "sourceItemId": "riAhIDNt", "tags": ["d40zneHE", "dndzeEci", "qmvj6QjP"], "type": "NapWVjFP"}, {"customAttributes": {"UwDnAsDy": {}, "talFvQDk": {}, "ak1Vblfm": {}}, "serverCustomAttributes": {"2iYcu9kX": {}, "c3WuBh7L": {}, "SXLAj9rK": {}}, "slotId": "ooLWvnWm", "sourceItemId": "bFFmUk4m", "tags": ["ZOrB34qc", "XknrHmfx", "uYMRG6aa"], "type": "p74x521d"}, {"customAttributes": {"C7cnzdDu": {}, "tMvnhUPn": {}, "J225LuFe": {}}, "serverCustomAttributes": {"SeRBCsXX": {}, "M8pPnmtg": {}, "hCCDo4yW": {}}, "slotId": "7cCPajCh", "sourceItemId": "Svrima7l", "tags": ["YpHPx1sW", "Ojb1KMMX", "Z5lbLPxg"], "type": "TG4iWGGg"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminBulkUpdateMyItems \
    --inventoryId '9qbxtpbj' \
    --namespace $AB_NAMESPACE \
    --userId 'hFUBKQPe' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 22 'AdminBulkUpdateMyItems' test.out

#- 23 AdminSaveItemToInventory
# body param: body
echo '{"customAttributes": {"kTVj8Fxp": {}, "IszfAjmz": {}, "ObMYShvN": {}}, "qty": 13, "serverCustomAttributes": {"THIV2MlH": {}, "XNTa8JUv": {}, "lz7h2SUR": {}}, "slotId": "uDjxbjQ6", "slotUsed": 100, "sourceItemId": "eK2M1ZMe", "tags": ["pIDWmsgi", "WN5JftRU", "AT6DJUhW"], "type": "dVe6a319"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminSaveItemToInventory \
    --inventoryId '1HOilhsN' \
    --namespace $AB_NAMESPACE \
    --userId 'dZi23kFf' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 23 'AdminSaveItemToInventory' test.out

#- 24 AdminBulkRemoveItems
# body param: body
echo '[{"slotId": "E4dq8AJH", "sourceItemId": "fZVzyH0G"}, {"slotId": "a3CWlVrU", "sourceItemId": "N0yKZlhq"}, {"slotId": "4pxpkTn1", "sourceItemId": "xk0xfqxg"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminBulkRemoveItems \
    --inventoryId 'Da2qtKeP' \
    --namespace $AB_NAMESPACE \
    --userId '1m5BDCQ2' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 24 'AdminBulkRemoveItems' test.out

#- 25 AdminSaveItem
# body param: body
echo '{"customAttributes": {"Vqm8MLKQ": {}, "gz1c6T1I": {}, "uSOIXfhD": {}}, "inventoryConfigurationCode": "G5ThvGVW", "qty": 15, "serverCustomAttributes": {"Lnu0pSc0": {}, "uWBzsy4W": {}, "9zdAJAJO": {}}, "slotId": "OMwNqrpd", "slotUsed": 86, "sourceItemId": "OVgjc5QS", "tags": ["FGlxJUkp", "Q1RtpH5h", "1vRcStlG"], "type": "eOoC3HUJ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op AdminSaveItem \
    --namespace $AB_NAMESPACE \
    --userId 'ICslUP1z' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 25 'AdminSaveItem' test.out

#- 26 PublicListInventoryConfigurations
$CLI_EXE \
    --sn inventory \
    --op PublicListInventoryConfigurations \
    --namespace $AB_NAMESPACE \
    --code 'hljO8piu' \
    --limit '57' \
    --offset '36' \
    --sortBy 'code:asc' \
    > test.out 2>&1
eval_tap $? 26 'PublicListInventoryConfigurations' test.out

#- 27 PublicListItemTypes
$CLI_EXE \
    --sn inventory \
    --op PublicListItemTypes \
    --namespace $AB_NAMESPACE \
    --limit '42' \
    --offset '8' \
    --sortBy 'createdAt:asc' \
    > test.out 2>&1
eval_tap $? 27 'PublicListItemTypes' test.out

#- 28 PublicListTags
$CLI_EXE \
    --sn inventory \
    --op PublicListTags \
    --namespace $AB_NAMESPACE \
    --limit '11' \
    --offset '18' \
    --sortBy 'createdAt' \
    > test.out 2>&1
eval_tap $? 28 'PublicListTags' test.out

#- 29 PublicListInventories
$CLI_EXE \
    --sn inventory \
    --op PublicListInventories \
    --namespace $AB_NAMESPACE \
    --inventoryConfigurationCode 'RqUVvuP8' \
    --limit '17' \
    --offset '57' \
    --sortBy 'createdAt:asc' \
    > test.out 2>&1
eval_tap $? 29 'PublicListInventories' test.out

#- 30 PublicConsumeMyItem
# body param: body
echo '{"qty": 4, "slotId": "8KmCFgtR", "sourceItemId": "IlUhJHgi"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op PublicConsumeMyItem \
    --inventoryId 'q1ufdJx4' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 30 'PublicConsumeMyItem' test.out

#- 31 PublicListItems
$CLI_EXE \
    --sn inventory \
    --op PublicListItems \
    --inventoryId 'NhYNFC0r' \
    --namespace $AB_NAMESPACE \
    --limit '69' \
    --offset '68' \
    --qtyGte '51' \
    --sortBy 'createdAt:asc' \
    --sourceItemId 'MqqxlJUc' \
    --tags 'I4fKZqDa' \
    > test.out 2>&1
eval_tap $? 31 'PublicListItems' test.out

#- 32 PublicBulkUpdateMyItems
# body param: body
echo '[{"customAttributes": {"YQauF5mf": {}, "2aN0zW5e": {}, "KsguF9Gh": {}}, "slotId": "r8h3lWmv", "sourceItemId": "XeD4EaA3", "tags": ["bZGW20EU", "mu8NnUhW", "1tN2wWtZ"]}, {"customAttributes": {"KoLuHNnq": {}, "GZT74OAb": {}, "ZouSl90l": {}}, "slotId": "y8WOJSmT", "sourceItemId": "ggSO265p", "tags": ["ksqApnNX", "WUE4sWPz", "CsTY48WU"]}, {"customAttributes": {"6WHmKwtC": {}, "dcDMszB3": {}, "Tc7Ch6iT": {}}, "slotId": "25l55Sw2", "sourceItemId": "aEP0HA9I", "tags": ["c3kDaoIS", "YRzJYuhX", "T0QR7tUu"]}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op PublicBulkUpdateMyItems \
    --inventoryId 'aLfi3BkU' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 32 'PublicBulkUpdateMyItems' test.out

#- 33 PublicBulkRemoveMyItems
# body param: body
echo '[{"slotId": "xgDi2dKc", "sourceItemId": "FZIQIpBp"}, {"slotId": "mTKNnV6B", "sourceItemId": "WGRUcaY3"}, {"slotId": "RvGZnpuo", "sourceItemId": "qjBCTvQv"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op PublicBulkRemoveMyItems \
    --inventoryId 'rpWM2r11' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 33 'PublicBulkRemoveMyItems' test.out

#- 34 PublicMoveMyItems
# body param: body
echo '{"items": [{"qty": 76, "slotId": "iz5i5q3O", "sourceItemId": "4ys3veMh"}, {"qty": 3, "slotId": "eup4pI3b", "sourceItemId": "G3OTQNdC"}, {"qty": 10, "slotId": "bGlZ0Yze", "sourceItemId": "gihRvWx6"}], "srcInventoryId": "mv8rQTVL"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn inventory \
    --op PublicMoveMyItems \
    --inventoryId 'GlXu2nPH' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 34 'PublicMoveMyItems' test.out

#- 35 PublicGetItem
$CLI_EXE \
    --sn inventory \
    --op PublicGetItem \
    --inventoryId 'v4zlJA8i' \
    --namespace $AB_NAMESPACE \
    --slotId 'krG5WMoh' \
    --sourceItemId 'aAhdQ1oN' \
    > test.out 2>&1
eval_tap $? 35 'PublicGetItem' test.out


# remove artifacts
rm -f "$CLI_TOKEN_FILE"
rm -f "$TEMP_JSON_INPUT"
rm -f "$TEMP_FILE_UPLOAD"

exit $EXIT_CODE