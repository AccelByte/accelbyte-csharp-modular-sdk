#!/usr/bin/env bash

# Copyright (c) 2021 AccelByte Inc. All Rights Reserved.
# This is licensed software from AccelByte Inc, for limitations
# and restrictions contact your company contract manager.

# This code is generated by tool. DO NOT EDIT.

# Meta:
# - random seed: 
# - template file: 

# Instructions:
# - Run the Justice SDK Mock Server first before running this script.

export AB_BASE_URL="http://127.0.0.1:8080"
export AB_CLIENT_ID="admin"
export AB_CLIENT_SECRET="admin"
export AB_NAMESPACE="test"
export AB_APP_NAME="UnitTest"

EXIT_CODE=0

eval_tap() {
  if [ $1 -eq 0 ]; then
    echo "ok $2 - $3"
  else
    EXIT_CODE=1
    echo "not ok $2 - $3"
    sed 's/^/# /g' $4
  fi
  rm -f $4
}

CLI_EXE="AccelByte.Sdk.Sample.Cli"
CLI_TOKEN_FILE="$(dirname "$(which $CLI_EXE)")/token.json"
TEMP_JSON_INPUT="input_json.json"
TEMP_FILE_UPLOAD="file_upload.bin"

echo "TAP version 13"
echo "1..22"

#- 1 Login
$CLI_EXE --op login --lt user --user user --pass user > test.out 2>&1
eval_tap $? 1 'Login' test.out

if [ $EXIT_CODE -ne 0 ]; then
  echo "Bail out! Login failed."
  exit $EXIT_CODE
fi

# echo "foo" > "$CLI_TOKEN_FILE"

#- 2 AdminGetChallenges
$CLI_EXE \
    --sn challenge \
    --op AdminGetChallenges \
    --namespace $AB_NAMESPACE \
    --limit '9' \
    --offset '94' \
    --sortBy 'c3HdAcaq' \
    --status 'TIED' \
    > test.out 2>&1
eval_tap $? 2 'AdminGetChallenges' test.out

#- 3 AdminCreateChallenge
# body param: body
echo '{"activeGoalsPerRotation": 76, "assignmentRule": "RANDOMIZED", "code": "Zhr1Ax57", "description": "y7g7qyUz", "endAfter": 48, "endDate": "1979-08-12T00:00:00Z", "goalsVisibility": "PERIODONLY", "name": "YHpYmDvA", "repeatAfter": 80, "rotation": "DAILY", "startDate": "1972-02-24T00:00:00Z"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn challenge \
    --op AdminCreateChallenge \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 3 'AdminCreateChallenge' test.out

#- 4 AdminGetChallenge
$CLI_EXE \
    --sn challenge \
    --op AdminGetChallenge \
    --challengeCode 'prUa04DV' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 4 'AdminGetChallenge' test.out

#- 5 AdminUpdateChallenge
# body param: body
echo '{"activeGoalsPerRotation": 4, "assignmentRule": "UNSCHEDULED", "description": "2havTGnL", "endAfter": 45, "endDate": "1982-12-02T00:00:00Z", "goalsVisibility": "PERIODONLY", "name": "A4urhKey", "repeatAfter": 72, "rotation": "NONE", "startDate": "1971-02-11T00:00:00Z"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn challenge \
    --op AdminUpdateChallenge \
    --challengeCode 'nhb9GQs8' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 5 'AdminUpdateChallenge' test.out

#- 6 AdminDeleteChallenge
$CLI_EXE \
    --sn challenge \
    --op AdminDeleteChallenge \
    --challengeCode 'yaXkMxXu' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 6 'AdminDeleteChallenge' test.out

#- 7 AdminGetGoals
$CLI_EXE \
    --sn challenge \
    --op AdminGetGoals \
    --challengeCode 'A48VnufW' \
    --namespace $AB_NAMESPACE \
    --limit '19' \
    --offset '90' \
    --sortBy 'NICA1nw9' \
    > test.out 2>&1
eval_tap $? 7 'AdminGetGoals' test.out

#- 8 AdminCreateGoal
# body param: body
echo '{"code": "aDDGR0gn", "description": "gTlpFGUm", "isActive": true, "name": "fcY02YdN", "requirementGroups": [{"operator": "AND", "predicates": [{"matcher": "GREATER_THAN_EQUAL", "parameterName": "HJzbZdiV", "parameterType": "USERACCOUNT", "targetValue": 0.5513026717570738}, {"matcher": "LESS_THAN", "parameterName": "crlEIaEF", "parameterType": "ACHIEVEMENT", "targetValue": 0.16695713058093653}, {"matcher": "LESS_THAN_EQUAL", "parameterName": "hCMfvzit", "parameterType": "STATISTIC", "targetValue": 0.04721357726780895}]}, {"operator": "AND", "predicates": [{"matcher": "EQUAL", "parameterName": "g1PsOGvL", "parameterType": "USERACCOUNT", "targetValue": 0.298281641777445}, {"matcher": "GREATER_THAN", "parameterName": "9tlCrjYI", "parameterType": "STATISTIC", "targetValue": 0.33098913100807636}, {"matcher": "LESS_THAN_EQUAL", "parameterName": "OpbAx8rs", "parameterType": "USERACCOUNT", "targetValue": 0.36318839886697973}]}, {"operator": "AND", "predicates": [{"matcher": "GREATER_THAN_EQUAL", "parameterName": "gpXXOoDs", "parameterType": "USERACCOUNT", "targetValue": 0.1680194111144584}, {"matcher": "GREATER_THAN_EQUAL", "parameterName": "sYF69W2A", "parameterType": "ACHIEVEMENT", "targetValue": 0.5798593902642798}, {"matcher": "GREATER_THAN_EQUAL", "parameterName": "Ap0j9r3Q", "parameterType": "ACHIEVEMENT", "targetValue": 0.2528186323974194}]}], "rewards": [{"itemId": "nHCEMIaD", "itemName": "hWEyRhJd", "qty": 0.9494826958595988, "type": "STATISTIC"}, {"itemId": "j6FqgMKc", "itemName": "StGrv66n", "qty": 0.615119815694374, "type": "ENTITLEMENT"}, {"itemId": "TlVXBDjb", "itemName": "w4NoeWN9", "qty": 0.7449989477227192, "type": "STATISTIC"}], "schedule": {"endTime": "1985-05-03T00:00:00Z", "order": 100, "startTime": "1992-09-20T00:00:00Z"}, "tags": ["YFJR64Q2", "sPXJIywJ", "gPmt5gU1"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn challenge \
    --op AdminCreateGoal \
    --challengeCode 'XMc2zWUO' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 8 'AdminCreateGoal' test.out

#- 9 AdminGetGoal
$CLI_EXE \
    --sn challenge \
    --op AdminGetGoal \
    --challengeCode 'ltXMuaPb' \
    --code 'R5pINK4g' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 9 'AdminGetGoal' test.out

#- 10 AdminUpdateGoals
# body param: body
echo '{"description": "uQzo2w02", "isActive": true, "name": "Mk7Cjnuz", "requirementGroups": [{"operator": "AND", "predicates": [{"matcher": "GREATER_THAN_EQUAL", "parameterName": "AJ9Z82nZ", "parameterType": "USERACCOUNT", "targetValue": 0.25585897090668086}, {"matcher": "GREATER_THAN_EQUAL", "parameterName": "DghymS5Q", "parameterType": "STATISTIC", "targetValue": 0.010750952816650505}, {"matcher": "EQUAL", "parameterName": "HCnOZ01Z", "parameterType": "USERACCOUNT", "targetValue": 0.6623943900187386}]}, {"operator": "AND", "predicates": [{"matcher": "GREATER_THAN_EQUAL", "parameterName": "KnuucR8y", "parameterType": "USERACCOUNT", "targetValue": 0.3344771752212986}, {"matcher": "EQUAL", "parameterName": "a64FoPqP", "parameterType": "USERACCOUNT", "targetValue": 0.37753951202119873}, {"matcher": "GREATER_THAN_EQUAL", "parameterName": "0SiNZaJg", "parameterType": "ACHIEVEMENT", "targetValue": 0.6968775629484155}]}, {"operator": "AND", "predicates": [{"matcher": "EQUAL", "parameterName": "s8U17MfO", "parameterType": "ACHIEVEMENT", "targetValue": 0.23817021627239676}, {"matcher": "LESS_THAN", "parameterName": "pxCQfXK2", "parameterType": "USERACCOUNT", "targetValue": 0.49815314211019823}, {"matcher": "LESS_THAN_EQUAL", "parameterName": "6Abz5VEb", "parameterType": "STATISTIC", "targetValue": 0.23176928461016622}]}], "rewards": [{"itemId": "oXhrmtg5", "itemName": "MIJRbjt4", "qty": 0.03607351387461366, "type": "STATISTIC"}, {"itemId": "QvVHVA7P", "itemName": "8FPM1Jpt", "qty": 0.5436739760046014, "type": "STATISTIC"}, {"itemId": "w3eJYzkW", "itemName": "oP5qGvFk", "qty": 0.022424838403259262, "type": "STATISTIC"}], "schedule": {"endTime": "1994-05-27T00:00:00Z", "order": 6, "startTime": "1973-10-29T00:00:00Z"}, "tags": ["VdgTgrIY", "RFtLTi33", "5RYvShQc"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn challenge \
    --op AdminUpdateGoals \
    --challengeCode 'gaweKyCF' \
    --code '7O9CrQ3N' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 10 'AdminUpdateGoals' test.out

#- 11 AdminDeleteGoal
$CLI_EXE \
    --sn challenge \
    --op AdminDeleteGoal \
    --challengeCode 'jskHIy8b' \
    --code '8ie2EogK' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 11 'AdminDeleteGoal' test.out

#- 12 AdminGetPeriods
$CLI_EXE \
    --sn challenge \
    --op AdminGetPeriods \
    --challengeCode 'gBl1lJYr' \
    --namespace $AB_NAMESPACE \
    --limit '99' \
    --offset '42' \
    > test.out 2>&1
eval_tap $? 12 'AdminGetPeriods' test.out

#- 13 AdminRandomizeChallenge
$CLI_EXE \
    --sn challenge \
    --op AdminRandomizeChallenge \
    --challengeCode 'PxGUXfss' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 13 'AdminRandomizeChallenge' test.out

#- 14 AdminDeleteTiedChallenge
$CLI_EXE \
    --sn challenge \
    --op AdminDeleteTiedChallenge \
    --challengeCode 'hGNdPYCA' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 14 'AdminDeleteTiedChallenge' test.out

#- 15 AdminEvaluateProgress
# body param: body
echo '{"userIds": ["YA7VlaWa", "5AfFZVem", "bRoNJAFJ"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn challenge \
    --op AdminEvaluateProgress \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 15 'AdminEvaluateProgress' test.out

#- 16 AdminGetUserRewards
$CLI_EXE \
    --sn challenge \
    --op AdminGetUserRewards \
    --namespace $AB_NAMESPACE \
    --userId 's6Dnh47a' \
    --limit '48' \
    --offset '69' \
    --sortBy '2VbdLWFa' \
    --status 'UNCLAIMED' \
    > test.out 2>&1
eval_tap $? 16 'AdminGetUserRewards' test.out

#- 17 GetChallenges
$CLI_EXE \
    --sn challenge \
    --op GetChallenges \
    --namespace $AB_NAMESPACE \
    --limit '63' \
    --offset '36' \
    --sortBy 'HN0iux5s' \
    --status 'TIED' \
    > test.out 2>&1
eval_tap $? 17 'GetChallenges' test.out

#- 18 PublicGetScheduledGoals
$CLI_EXE \
    --sn challenge \
    --op PublicGetScheduledGoals \
    --challengeCode 'EMQVnYms' \
    --namespace $AB_NAMESPACE \
    --limit '50' \
    --offset '5' \
    --tags '["lQesDnTx", "BeoKKA6H", "lsa4yU0W"]' \
    > test.out 2>&1
eval_tap $? 18 'PublicGetScheduledGoals' test.out

#- 19 EvaluateMyProgress
$CLI_EXE \
    --sn challenge \
    --op EvaluateMyProgress \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 19 'EvaluateMyProgress' test.out

#- 20 PublicGetUserProgression
$CLI_EXE \
    --sn challenge \
    --op PublicGetUserProgression \
    --challengeCode 'XcA4XzSu' \
    --namespace $AB_NAMESPACE \
    --goalCode 'WAKYOZAf' \
    --limit '62' \
    --offset '10' \
    --tags '["uSVLVzom", "l9h4YL8y", "y0FBOvuR"]' \
    > test.out 2>&1
eval_tap $? 20 'PublicGetUserProgression' test.out

#- 21 PublicGetUserRewards
$CLI_EXE \
    --sn challenge \
    --op PublicGetUserRewards \
    --namespace $AB_NAMESPACE \
    --limit '54' \
    --offset '64' \
    --sortBy 'Zq9M38K0' \
    --status 'CLAIMED' \
    > test.out 2>&1
eval_tap $? 21 'PublicGetUserRewards' test.out

#- 22 PublicClaimUserRewards
# body param: body
echo '{"rewardIDs": ["YwsFvDHG", "ezWl1p8A", "SkZn2OGo"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn challenge \
    --op PublicClaimUserRewards \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 22 'PublicClaimUserRewards' test.out


# remove artifacts
rm -f "$CLI_TOKEN_FILE"
rm -f "$TEMP_JSON_INPUT"
rm -f "$TEMP_FILE_UPLOAD"

exit $EXIT_CODE